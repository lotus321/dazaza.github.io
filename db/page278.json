[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1002743, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5206\u9636\u6bb5\u7f16\u5199\u4e86\u7b2c\u56db\u7248Lisp Python Continuum(FLPC)\u7684\u81ea\u6258\u7ba1\u7f16\u8bd1\u5668\u3002\u5f53\u6211\u5b8c\u6210\u89e3\u6790\u5668\u5e76\u7ed9\u5b83\u63d0\u4f9b\u8d8a\u6765\u8d8a\u591a\u7684\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u65f6\uff0c\u5b83\u8fd0\u884c\u5f97\u592a\u6162\u4e86\u3002\u6211\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\u6765\u52a0\u5feb\u901f\u5ea6\uff0c\u5176\u4e2d\u4e00\u4e2a\u6709\u7528\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u54c8\u5e0c\u8868\u3002\n\u672c\u6587\u4e2d\u7684\u53ef\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u662f\u7528\u66f4\u719f\u6089\u7684Python\u7f16\u5199\u7684\uff0c\u800c\u4e0d\u662f\u7528FLPC\u7f16\u5199\u7684\u3002\u5728Python\u4e2d\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\u901a\u5e38\u662f__setitem__(self\uff0ckey\uff0cvalue)\u548c__getitem__(self\uff0ckey)\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5c06\u907f\u514d\u4f7f\u7528\u8fc7\u591a\u7684\u8bed\u8a00\u529f\u80fd\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u66f4\u76f4\u63a5\u5730\u7ffb\u8bd1\u751f\u6210\u7684\u539f\u578b\u3002\u7279\u522b\u5730\uff0c\u6211\u4eec\u5c06\u5047\u8bbePython\u5217\u8868\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u5df2\u7ecf\u5b9e\u73b0\u7684\u7d22\u5f15\u548c\u679a\u4e3e\u4e4b\u7c7b\u7684\u4fbf\u5229\u3002\n\u5728\u54c8\u5e0c\u8868\u4e4b\u524d\uff0cFLPC\u4e2d\u7684\u5b57\u5178\u88ab\u5b9e\u73b0\u4e3a\u4e24\u4e2a\u6570\u7ec4\u952e\u548c\u503c\uff0c\u4ee5\u4fbf\u952e[i]\u4e0e\u6bcf\u4e2a\u7d22\u5f15i\u7684\u503c[i]\u76f8\u5173\u8054(\u5373\uff0cget(keys[i])\u8fd4\u56de\u503c[i])\u3002\ndef array_index(array\uff0ckey)\uff1afor i in range(len(Array))\uff1aif array[i]==key\uff1areturn I\u5f15\u53d1ValueError(f&#34\uff1bvalue{key}\u672a\u627e\u5230\u3002&#34\uff1b)def get(self\uff0ckey)\uff1areturn self.values[array_index(self.key\uff0ckey)]\u3002\ndef set(self\uff0ckey\uff0cvalue)\uff1atry\uff1ai=array_index(self.keys[i])Expect ValueError\uff1ai=array_index(self.key\uff0cEmpty)self.key[i]=key self.values[i]=value\u3002\n\u5176\u4e2d\uff0cEmpty\u662f\u8bbe\u7f6e\u7ed9\u6240\u6709\u952e\u7684\u521d\u59cb\u503c\uff0c\u8868\u793a\u8be5\u7d22\u5f15\u5904\u6ca1\u6709\u952e[\u53ef\u8c03\u6574\u5927\u5c0f]\u3002\u5728\u8fd9\u91cc\u83b7\u53d6\u6e90\u4ee3\u7801\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u5b9e\u73b0\u54c8\u5e0c\u8868\u3002\u6211\u4eec\u5b9e\u73b0\u7684\u5177\u4f53\u53d8\u4f53\u662f\u5177\u6709\u5f00\u653e\u5bfb\u5740\u548c\u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u3002\n\u5728KEYS\u6570\u7ec4\u4e2d\u67e5\u627e\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u4e0d\u662f\u4ece\u6570\u7ec4\u7684\u5f00\u5934\u5f00\u59cb\u641c\u7d22\uff0c\u800c\u662f\u4ece\u6570\u7ec4\u7684\u4e2d\u95f4\u5f00\u59cb\u641c\u7d22\uff0c\u5728\u5230\u8fbe\u672b\u5c3e\u65f6\u56de\u7ed5\u3002\ndef array_index(array\uff0ckey\uff0ci)\uff1aWhile True\uff1aif array[i]==key\uff1areturn i elif array[i]==Empty\uff1aRaise ValueError(f&#34\uff1bvalue{key}\u4e0d\u5728\u5b57\u5178&#34\uff1b)i=(i+1)%len(Array)\u3002\n\u6211\u4eec\u5c06\u4f7fget\u548cset\u4ec5\u6839\u636e\u5bc6\u94a5\u5728\u67d0\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u641c\u7d22\u3002\ndef get(self\uff0ckey)\uff1a\u8fd4\u56deself.values[array_index(self.key\uff0ckey\uff0cstart(Key)%len(self.key\uff0ckey))]def set(self\uff0ckey\uff0cvalue)\uff1atry\uff1ai=array_index(self.key\uff0ckey\uff0cstart(Key)%len(self.key))Exclude ValueError\uff1ai=array_index(self.key\uff0cEmpty\uff0cstart(Key)%len(self.key))self.keys[i]=\u3002\n\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5b9a\u4e49Start(\u8fd9\u91cc\u662f\u6e90\u4ee3\u7801)\uff0c\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u6709\u6548\uff0c\u4e3a\u4ec0\u4e48\u5b83\u5f88\u5feb\u3002\n\u54c8\u5e0c\u8868\u8fdb\u884c\u65f6\u7a7a\u6743\u8861\u3002\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u4e2a\u8f83\u5927\u7684\u952e(\u56e0\u6b64\u4e5f\u5c31\u662f\u503c)\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u6bd4\u6211\u4eec\u5c06\u5b9e\u9645\u5b58\u50a8\u5728\u5176\u4e2d\u7684\u952e\u6570\u591a\u5f97\u591a\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cSTART\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u6563\u5e03\u8db3\u591f\u591a\u7684\u952e\uff0c\u4ee5\u4fbf\u6211\u4eec\u5c06\u5b9e\u9645\u5b58\u50a8\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u6240\u6709\u952e\u90fd\u4ece\u76f8\u540c\u7684\u7d22\u5f15\u5f00\u59cb\u641c\u7d22\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709start(Key)%len(self.key)\u90fd\u662f\u4e0d\u540c\u7684\u3002\n\u5219\u641c\u7d22\u59cb\u7ec8\u5728\u4e00\u4e2a\u6b65\u9aa4\u4e2d\u6210\u529f\uff0c\u5e76\u8fd4\u56destart(Key)%len(self.key)\u4f5c\u4e3a\u7d22\u5f15\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u7b2c\u4e00\u6b21\u5c06key\u8bbe\u7f6e\u4e3a\u503c\u4e4b\u524d\uff0ckey[start(Key)%len(self.keys)]\u4e3a\u7a7a\uff0c\u6216\u8005\u4e4b\u540ekeys[start(Key)%len(self.keys)]\u7b49\u4e8ekey\u3002\n\u6211\u4eec\u6700\u591a\u53ea\u80fd\u8d70\u4e00\u6b65\u3002\u4ee5\u66f4\u591a\u7684\u5185\u5b58\u4e3a\u4ee3\u4ef7\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u53d6\u5e76\u8bbe\u7f6e\u4e86\u4e0e\u6570\u7ec4\u76f8\u540c\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u5373\u4f7f\u6211\u4eec\u91cd\u65b0\u8bbe\u7f6e\u7684\u5bc6\u94a5\u4e0d\u662f\u8fde\u7eed\u7684\u3002\n\u5173\u4e8e\u6211\u4eec\u5982\u4f55\u9009\u62e9\u53d1\u8f66\uff0c\u6211\u4e0d\u4f1a\u8bf4\u592a\u591a\uff0c\u4f46\u6211\u7684\u60f3\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5c3d\u53ef\u80fd\u5206\u6563\u53d1\u8f66\u4f4d\u7f6e\u7684\u4e1c\u897f\u3002\n\u5728\u4e0d\u592a\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230start(Key1)%len(Key)==start(Key2)%len(Key)\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7d22\u5f15\u7d22\u5f15\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5199\u5165\u952e\u7684\u4e24\u4e2a\u952e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5c06\u4f4d\u4e8eindex\uff0c\u53e6\u4e00\u4e2a\u4f4d\u4e8eindex+1[\u7ea7\u8054]\u3002\u5173\u952e\u5b57\u7ed3\u675f\u65f6\u8ddd\u79bb\u5176\u8d77\u59cb\u7d22\u5f15\u8d8a\u8fdc\uff0c\u641c\u7d22\u5b83\u6240\u9700\u7684\u65f6\u95f4\u5c31\u8d8a\u957f\u3002\n\u952e\u7684\u503c\u6c38\u8fdc\u4e0d\u4f1a\u91cd\u5199\u4e3a\u4e00\u6b21\u4e3a\u7a7a\uff0c\u56e0\u6b64\u5728\u4ee5\u540e\u7684\u4efb\u4f55\u641c\u7d22\u4e2d\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u4ee5\u76f8\u540c\u7684\u7d22\u5f15(\u5728\u672c\u4f8b\u4e2d\u4e3aindex+2)\u7ed3\u675f\u3002\n\u6211\u4eec\u5c06\u9009\u62e9start to be a hash function\uff0c\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u5230\u7d22\u5f15\u3002\u5173\u4e8e\u6563\u5217\u51fd\u6570\uff0c\u6211\u4eec\u6709\u5f88\u591a\u8981\u8bf4\u7684\uff0c\u6211\u4eec\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u800c\u53ea\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u5df2\u77e5\u7684\u597d\u7684\u3001\u6613\u4e8e\u5b9e\u73b0\u7684\u51fd\u6570\u5373\u53ef\u3002\ndef djb2_hash(Key)\uff1ah=5381 for c in key\uff1ah=(h&lt\uff1b&lt\uff1b5+h)+order(C))&amp\uff1b0xffffffff return hstart=djb2_hash\u3002\n\u5173\u4e8e\u8fd9\u4e2a\u7279\u6b8a\u7684\u529f\u80fddjb2\u6709\u4e00\u4e2a\u76f8\u5f53\u56f0\u96be\u7684\u5730\u65b9(\u4f46\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8fd9\u6837\u505a)\u3002\n\u7531\u4e8e\u6563\u5217\u51fd\u6570\u7684\u76ee\u6807\u662f\u5728\u6211\u4eec\u7684\u6570\u7ec4\u4e2d\u5747\u5300\u5206\u5e03\u8d77\u59cb\u70b9\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u679c\u6211\u4eec\u7684\u6563\u5217\u51fd\u6570\u5b8c\u5168\u968f\u673a\u5730\u9009\u62e9\u5f00\u59cb\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u662f\u53ef\u884c\u7684(\u6216\u8005\u81f3\u5c11\u6709\u5f88\u597d\u7684\u673a\u4f1a\u53ef\u884c)\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7565\u5fae\u9519\u8bef\u7684\u5206\u6790\uff0c\u4ee5\u5f97\u51fa\u8fd9\u5c06\u9700\u8981\u591a\u957f\u65f6\u95f4\u7684\u6982\u5ff5\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u6539\u4e3a\u8bfb\u53d6\u6b63\u786e\u7684[LINEAR_PROBING]\u3002\n\u5047\u8bbe\u6211\u4eec\u7684\u54c8\u5e0c\u8868\u6709s\u4e2a\u69fd\uff0c\u5df2\u7ecf\u6709k\u4e2a\u5bc6\u94a5\uff0c\u6211\u4eec\u5c1d\u8bd5\u63d2\u5165\u4e00\u4e2a\u65b0\u7684k+1\u4e2a\u5bc6\u94a5\u3002\n\u56e0\u4e3ak+1\u4e2a\u952e\u6709\u4e00\u4e2a\u968f\u673a\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4ecek\u4e2a\u69fd\u4e2d\u6311\u9009\u4e00\u4e2a\u5df2\u7ecf\u6709\u952e\u7684\u6982\u7387\u662fk/s\u3002\u5982\u679c\u6211\u4eec\u8fd0\u6c14\u4e0d\u597d\uff0c\u649e\u4e0a\u4e86\u4e00\u4e2a\u952e\uff0c\u90a3\u4e48\u6211\u4eec\u5411\u524d\u79fb\u52a8\u65f6\u649e\u5230\u53e6\u4e00\u4e2a\u952e\u7684\u6982\u7387\u662f(k-1)/(s-1)\u3002\u8fd9\u662f\u56e0\u4e3a\u6709s-1\u4e2a\u63d2\u69fd\uff0c\u4e0d\u5305\u62ec\u6211\u4eec\u7684\u8d77\u59cb\u63d2\u69fd\u548c\u90a3\u4e9b\u63d2\u69fd\u4e2d\u7684k-1\u4e2a\u5bc6\u94a5\u3002\n\u8fd9\u5b9e\u9645\u4e0a\u4e0d\u662f\u771f\u7684\uff0c\u56e0\u4e3a\u867d\u7136\u5728s-1\u4e2a\u63d2\u69fd\u4e2d\u6709k-1\u4e2a\u5bc6\u94a5\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u90fd\u4e00\u6837\u6709\u53ef\u80fd\u88ab\u586b\u6ee1\uff01\u5982\u679c\u6211\u4eec\u67e5\u770b\u8981\u68c0\u67e5\u7684\u7b2ci\u4e2a\u65f6\u9699\u7684\u968f\u673a\u65f6\u9699\u5f00\u59cb(KEY\uff0ci)\u800c\u4e0d\u662f\u5f00\u59cb(KEY)+i\uff0c\u8fd9\u5c06\u662f\u771f\u5b9e\u7684\u3002\n\u6487\u5f00\u8fd9\u4e00\u70b9\u4e0d\u8c08\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u5427\u3002\u5982\u679c\u6211\u4eec\u518d\u6b21\u5012\u9709\uff0c\u770b\u5230\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u90a3\u4e48\u6211\u4eec\u5411\u524d\u79fb\u52a8\u65f6\u51fb\u4e2d\u53e6\u4e00\u4e2a\u952e\u7684\u6982\u7387\u662f(k-2)/(s-2)\u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u8d70\u4e0b\u53bb\u3002\n(k-i)/(s-i)\u81f3\u591a\u4e3ak/s\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u641c\u7d22\u4e2d\u770b\u5230t\u4e2a\u5df2\u586b\u6ee1\u7a7a\u4f4d\u7684\u6982\u7387\u81f3\u591a\u4e3a(k/s)t\u3002\u6211\u4eec\u770b\u5230\u7684\u9884\u671f\u6ee1\u4f4d\u6570(\u5728\u6700\u7ec8\u627e\u5230\u7a7a\u4f4d\u4e4b\u524d)\u662f\u8fd9\u4e9b\u503c[sum]\u7684\u603b\u548c\u3002\u8fd9\u81f3\u591a\u662f\u65e0\u7a77\u548c\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u8ba1\u7b97\u63d2\u5165\u5bc6\u94a5\u7684\u6700\u540e\u4e00\u4e2a\u7a7a\u69fd\uff0c\u5b83\u662f\u4e00\u4e2a\u503c\u4e3a1/(1-k/s)-1[\u51e0\u4f55]\u62161/(1-k/s)\u603b\u69fd\u6570\u7684\u51e0\u4f55\u7ea7\u6570\u3002\n\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u6709\u4e24\u500d\u4e8e\u5bc6\u94a5\u7684\u63d2\u69fd\uff0c\u6211\u4eec\u9884\u8ba1\u5e73\u5747\u4f1a\u67091/(1-1/2)=2\u4e2a\u63d2\u69fd\uff01\n\u7ebf\u6027\u63a2\u6d4b\u7684\u5b9e\u9645\u9884\u671f\u6570\u91cf\u662f1/(1-(k/s)2)[LINEAR_PROBING]\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5c06\u67e5\u770b4\u4e2a\u63d2\u69fd\uff0c\u8fd9\u4ecd\u7136\u4e0d\u662f\u5f88\u7cdf\u7cd5\uff0c\u6216\u8005\u6211\u4eec\u53ef\u80fd\u53ea\u6709\u66f4\u591a\u7684\u63d2\u69fd\u3002\n\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u6574\u7bc7\u5e16\u5b50\u4e2d\u660e\u663e\u6ca1\u6709\u6309\u952e\u5220\u9664\uff0c\u8fd9\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7b80\u5355\u4e86\u3002\u5982\u679c\u6211\u4eec\u53ea\u662f\u5c06\u5bc6\u94a5\u8bbe\u7f6e\u4e3a\u7a7a\u6765\u5220\u9664\u5bc6\u94a5\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\n\u4f5c\u4e3a\u4e00\u4e2a\u4ee5\u5f15\u5bfc\u4e3a\u4e2d\u5fc3\u7684\u5b9e\u73b0\uff0cFLPC\u5bf9\u4e8e\u5b57\u5178\u6765\u8bf4\u9762\u4e34\u7740\u53e6\u4e00\u4e2a\u9e21\u6216\u86cb\u7684\u95ee\u9898\uff1a\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u7684\u5b9e\u73b0\u9700\u8981\u5bf9\u8c61\u548c\u4e24\u4e2a\u6570\u7ec4\u3002\u4f46\u662f\u5bf9\u8c61\u9700\u8981\u67e5\u627e\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u662f\u4f7f\u7528\u5b57\u5178\u5b9e\u73b0\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5b57\u5178\uff0c\u4ece\u51fd\u6570\u540d\u5230\u5b58\u50a8\u51fd\u6570\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u6216\u8005\u5b57\u8282\u7801\u89e3\u91ca\u5668\u7684\u539f\u8bed\u3002\n\u5373\u4f7f\u662f\u7b80\u5355\u7684\u5b9e\u73b0\u4e5f\u9700\u8981\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u7ec4\uff01\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u51fd\u6570\u540d\u79f0\u5b57\u5178\u88ab\u786c\u7f16\u7801\u5230\u51fd\u6570\u7684\u4e3b\u4f53\u4e2d\u3002\ndef names_get(Key)\uff1aif key==&#34\uff1bstring 1&#34\uff1b\uff1a\u5982\u679ckey==&#34\uff1bstring 2&#34\uff1b\uff1a\u8fd4\u56devalue2 if key==&#34\uff1bstring 3&#34\uff1b\uff1a\u8fd4\u56de\u503c3.\u3002\n\u8fd9\u5e76\u4e0d\u80fd\u4f7f\u6211\u4eec\u524d\u9762\u6240\u8bf4\u7684\u65e0\u6548\uff1a\u786e\u5b9e\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u7ec4\u3002\u53ea\u662f\u5b83\u6070\u597d\u4e0e\u6211\u4eec\u7528\u4e8e\u51fd\u6570\u7684\u6570\u7ec4\u76f8\u540c\u3002FLPC\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a\u6574\u6570\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6574\u6570\u6570\u7ec4\u7f16\u7801\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u3001\u57fa\u5143\u6216(\u5f15\u7528)\u5e38\u91cf\u3002(\u6709\u5173\u8be5\u6a21\u578b\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u7b2c\u56db\u6559\u7a0b\u3002(\u5176\u4ed6\u7ec6\u8282\u7565\u6709\u4e0d\u540c\u3002)\u3002\u4f46\u662f\u5b83\u4eec\u6ca1\u6709\u63d0\u4f9b\u5355\u72ec\u7684getter\u548csetter\u65b9\u6cd5\u3002\u76f8\u53cd\uff0cmemory y.get\u548cmemory y.set\u5141\u8bb8\u6211\u4eec\u8bfb\u5199\u5185\u5b58\u4e2d\u7684\u7edd\u5bf9\u4f4d\u7f6e(\u56e0\u6b64\u5fc5\u987b\u624b\u52a8\u8ba1\u7b97\u504f\u79fb\u91cf)\u3002\n\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u8bbe\u7f6e\u5668\u6765\u67e5\u627e\u51fd\u6570\u540d\u3002\u7f16\u8bd1\u65f6\uff0cgetter names.get\u7684\u5185\u5b58\u8868\u793a\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\u3002\nPICK1\u63a8\u9001\uff1a&#34\uff1bstring 1&#34\uff1b==PUSH\uff1avalue1 return_ifick1\u63a8\u9001\uff1a&#34\uff1bstring 2&#34\uff1b==PUSH\uff1avalue2 return_ifick1\u63a8\u9001\uff1a&#34\uff1bstring 3&#34\uff1b==PUSH\uff1avalue3 return_if.end_of_function\u3002\n\u4e0a\u9762\u6211\u4eec\u5c55\u793a\u7684\u662f\u5185\u5b58\u4e2d\u7684\u6574\u6570\u503c\u4ee3\u8868\u7684\u662f\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6574\u6570\u672c\u8eab\u3002return_if\u63a5\u53d7\u5e03\u5c14\u503c\u548c\u503c\uff0c\u5982\u679c\u5e03\u5c14\u503c\u4e3aTRUE\uff0c\u5219\u8fd4\u56de\u503c(\u5982\u679c\u5e03\u5c14\u503c\u4e3aFALSE\uff0c\u5219\u4e22\u5f03\u4e24\u8005)\u3002\n\u56e0\u6b64\uff0c\u8981\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728names.get\u6b63\u6587\u7684\u672b\u5c3e\u9644\u52a0\u51e0\u4e2a\u6761\u76ee\uff0c\u4f8b\u5982PICK1 PUSH\uff1a&#34\uff1bstring 4&#34\uff1b==PUSH\uff1aVALUE4 RETURN_IF\uff0c\u7136\u540e\u5c06\u8c03\u7528\u79fb\u5230end_of_function(\u8bf7\u53c2\u9605functions.add in boot.flpc\u4e86\u89e3\u5b9e\u9645\u5b9e\u73b0)\u3002\n\u8fd9\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u51fd\u6570\u540d\u79f0\u7684\u6734\u7d20\u5b57\u5178\u3002\u8981\u6a21\u4eff\u672c\u6587\u524d\u9762\u5b9e\u73b0\u7684\u54c8\u5e0c\u8868\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u4ece\u51fd\u6570\u4f53\u4e2d\u95f4\u7684if\u8bed\u53e5\u5f00\u59cb\uff0c\u5e76\u4e14\u5fc5\u987b\u5728\u672b\u5c3e\u56de\u7ed5\u3002\n\u5728FLPC\u7684\u5f15\u5bfc\u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u5c06\u6539\u7528\u6734\u7d20\u7684\u5b57\u5178\u6765\u5b9e\u73b0\u4ece\u5bf9\u8c61\u5230\u54c8\u5e0c\u8868\u5bf9\u8c61\u7684\u6240\u6709\u5185\u5bb9\uff0c\u7136\u540e\u91cd\u65b0\u7ed1\u5b9a\u540d\u79f0\u3002\u8fdb\u5165\u4f7f\u7528\u8fd9\u4e9b\u54c8\u5e0c\u8868\u7684\u65b0\u51fd\u6570hashtable.get(\u952e\u540d\u79f0)\u7684\u4e3b\u4f53\u3002\u8fd9\u89e3\u51b3\u4e86\u9e21\u6216\u86cb\u7684\u95ee\u9898\u3002\u5929\u771f\u7684\u8bcd\u5178\u4f5c\u4e3a\u4e00\u5806if\u8bed\u53e5\u6392\u5728\u7b2c\u4e00\u4f4d\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5c5e\u6027\u67e5\u627e\u4e5f\u4f7f\u7528\u67d0\u79cd\u7b80\u5355\u7684\u54c8\u5e0c\u8868\u3002\u5b83\u4eec\u770b\u8d77\u6765\u50cf\u8fd9\u6837\u3002\nhashtable.attrib&lt\uff1b-un[\u540d\u79f0\u63a5\u6536\u8005\u641c\u7d22\u5668]\uff1areturn_if(string_equence(name&#34\uff1bget&#34\uff1b)hashtable.get)return_if(string_equence(name&#34\uff1bset&#34\uff1b)hashtable.set)return_if(string_equence(name&#34\uff1binstance&#34\uff1b)hashtable.instance)return_if(string_equence(name&#34\uff1bprint&#34\uff1b)hashtable.print)\u3002)memory y.get(\u63a5\u6536\u65b9)return_if(string_equence(name&#34\uff1bkey&#34\uff1b)memory y.get(\u63a5\u6536\u65b9+1))return_if(string_equence(name&#34\uff1bValues&#34\uff1b)memory y.get(\u63a5\u6536\u65b9+2))return_if(string_equence(name&#34\uff1btype&#34\uff1b)&#34\uff1bhashtable&#34\uff1b)return(instance_attrib(name_attrib(name\u63a5\u6536\u65b9\u641c\u7d22\u5668))\u3002\n\u8fd8\u6709\u4e00\u4e2a\u5269\u4f59\u7684\u6311\u6218\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u73b0\u6709\u7684\u952e-\u503c\u5bf9\u63d2\u5165\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u540d\u79f0\u4e2d\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6bcf\u4e2aif\u8bed\u53e5\u5360\u75287\u4e2a\u5355\u5143\u683c\u7684\u56fa\u5b9a\u957f\u5ea6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u8fd9\u90e8\u5206\u5185\u5b58\u5e76\u53d6\u51fa(\u5df2\u7f16\u8bd1\u7684\uff01)\u3002\u4f4d\u4e8e\u7279\u5b9a\u504f\u79fb\u91cf\u7684\u952e\u548c\u503c\u3002\u8fd9\u4e00\u5207\u90fd\u53d1\u751f\u5728\u9636\u6bb51b2.flpc\u4e2d\u3002\nCONVERT_NAMES&lt\uff1b-FUN[]\uff1aend=functions.end()index=names.get+5cond=not(index&gt\uff1bend)REPEAT_IF\uff1adrop1(`cond)Names\u3002set(memory y.get(Index)memory y.get(index+3))index=`index+7 cond=not(index&&gt;\uff1bend)\u3002\nINDEX\u548cEND\u5c06\u5305\u542b\u5185\u5b58\u4e2d\u7684\u7d22\u5f15(=\u5730\u5740)\u3002memy.get(Index)\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32&#34\uff1bstring 1&#34\uff1b\u3001&#34\uff1bstring 2&#34\uff1b\u4f9d\u6b64\u7c7b\u63a8\uff0c\u800cmemy.get(index+3)\u5305\u542bvalue1\u3001value2\u7b49\u3002\n\u6211\u4f7f\u7528\u65f6\u95f4\u5bf9\u4e00\u4e9b\u5e26\u6709\u548c\u4e0d\u5e26\u6709\u54c8\u5e0c\u8868\u7684\u9884\u7f16\u8bd1\u6587\u4ef6\u8fdb\u884c\u4e86\u8ba1\u65f6\u3002\u65f6\u95f4\u5e76\u4e0d\u603b\u662f\u6700\u597d\u7684\u5de5\u5177\uff0c\u4f46\u5728\u8fd9\u91cc\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u597d\u7684\u60f3\u6cd5\u3002\u6211\u5728\u6d3b\u52a8\u524d\u67e5\u770b\u4e86\u5176\u4ed6\u7ed3\u679c\uff0c\u8003\u8651\u52a0\u5feb\u547d\u540d\u901f\u5ea6\u3002\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u505a\u597d\u8fd9\u4ef6\u4e8b\u3002\n\u6709\u70b9\u5e73\u6de1\u65e0\u5947\u3002\u5b83\u6240\u505a\u7684\u4e00\u5207\u53ea\u662f\u8ba9\u6211\u4eec\u7684\u901f\u5ea6\u63d0\u9ad8\u4e86\u7ea64\u500d\u3002\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u5df2\u7ecf\u5c06\u74f6\u9888\u4ece\u51fd\u6570\u540d\u67e5\u627e\u4e0a\u79fb\u5f00\u4e86\u3002\u7531\u4e8e\u901f\u5ea6\u7531\u6700\u6162\u7684\u90e8\u5206(\u6709\u65f6\u662f\u90e8\u5206)\u63a7\u5236\uff0c\u5373\u4f7f\u662f\u8fd9\u79cd\u9002\u5ea6\u7684\u52a0\u901f\u4e5f\u544a\u8bc9\u6211\u4eec\uff0c\u51fd\u6570\u540d\u67e5\u627e\u662f\u8f83\u6162\u7684\u90e8\u5206\u4e4b\u4e00\u3002\n\u6211\u4eec\u73b0\u5728\u5e0c\u671b\u4f7f\u7528\u54c8\u5e0c\u8868\u8fdb\u884c\u5c5e\u6027\u67e5\u627e(\u6bd4\u5982\u4e0a\u9762\u7684hashtable.attrib)\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e0enames.get\u4e0d\u540c\uff0c\u6bcf\u4e2aif\u8bed\u53e5\u7684\u4e3b\u4f53\u5728\u5185\u5b58\u4e2d\u4e0d\u5360\u7528\u76f8\u540c\u6570\u91cf\u7684\u5355\u5143\u683c\u3002\u4f8b\u5982\n\u56e0\u4e3amemy.get(Receiver+1)\u662f\u5728\u51fd\u6570\u4f53\u672c\u8eab\u4e2d\u5b8c\u6210\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u6bcf\u4e2a\u503c\u5305\u88c5\u5728\u51fd\u6570\u4e2d\u6765\u6f5c\u5728\u5730\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\n\u800chashtable.get_()\u5c06\u53ea\u8fd4\u56dehashtable.get\u3002\u4f46\u662f\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u96be\u770b\u7684\u6280\u5de7\uff0c\u8df3\u8f6c\u8868\u8df3\u5230\u4e86\u65e7\u7684hashtable.attrib(\u6765\u81ea\u6211\u4eec\u5bf9hashtable.attrib\u7684\u65b0\u5b9a\u4e49)\u4e2d\u3002\u4e5f\u8bb8\u8fd9\u4e2a\u4ee5\u540e\u4f1a\u88ab\u66f4\u597d\u7684\u4e1c\u897f\u53d6\u4ee3\u3002\n[\u53ef\u8c03\u6574\u5927\u5c0f]\u6211\u4eec\u53ef\u4ee5\u6539\u4e3a\u4f7f\u7528Python list\u7684append\uff0c\u5b83\u53ef\u4ee5\u968f\u7740\u5217\u8868\u7684\u589e\u957f\u6709\u6548\u5730\u8c03\u6574\u5217\u8868\u7684\u5927\u5c0f\uff0c\u4f46\u8fd9\u4f1a\u5c06\u8981\u6c42\u4ece\u53ea\u9700\u8981\u6570\u7ec4\u589e\u52a0\u5230\u9700\u8981\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u6570\u7ec4\u3002\u800c\u4e14\u6211\u4eec\u4e0d\u9700\u8981\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u6570\u7ec4\u6765\u5b9e\u73b0\u56fa\u5b9a/\u6709\u754c\u5927\u5c0f\u7684\u54c8\u5e0c\u8868\u3002\n[\u7ea7\u8054]\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u7ea7\u8054\u6548\u5e94\u3002\u5373\u4f7f\u7b2c\u4e09\u4e2a\u952e\u5355\u72ec\u5f00\u59cb\u4e8eindex+1==start(Key3)%len(Key)\uff0ckey2\u53ef\u4ee5\u9996\u5148\u5199\u5165key[index+1]\uff0c\u56e0\u6b64key3\u5728key[index+2]\u5904\u7ed3\u675f(\u53cd\u4e4b\u4ea6\u7136)\u3002\n[LINEAR_PROBING]\u6211\u627e\u5230\u7684\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u53ef\u4ee5\u8ffd\u6eaf\u5230\u201c\u8ba1\u7b97\u673a\u7f16\u7a0b\u7684\u827a\u672f\u201d(The Art Of Computer Programming)\u53773\u9875\uff0c678-682\u9875\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u6211\u7684\u4e2d\u7b49\u52aa\u529b\u7ea7\u522b\u7684\u641c\u7d22\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u53ef\u4ee5\u91cd\u65b0\u89e3\u91ca\u5b83\u7684\u5730\u65b9\u3002\u8fd9\u4e9b\u9875\u9762\u4e0a\u7684\u4e00\u6bb5\u6709\u8da3\u7684\u8bdd\uff1a\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4f5c\u8005\u60c5\u4e0d\u81ea\u7981\u5730\u63d2\u5165\u4e86\u4e00\u4efd\u4f20\u8bb0\uff1a1962\u5e74\uff0c\u5728\u5f00\u59cb\u4ece\u4e8b\u8ba1\u7b97\u673a\u7f16\u7a0b\u827a\u672f\u7684\u5de5\u4f5c\u540e\u4e0d\u4e45\uff0c\u6211\u7b2c\u4e00\u6b21\u5199\u51fa\u4e86\u4e0b\u9762\u8fd9\u6bb5\u8bdd\u3002\u56e0\u4e3a\u8fd9\u662f\u6211\u5206\u6790\u8fc7\u7684\u7b2c\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u975e\u5e73\u51e1\u7b97\u6cd5\uff0c\u6240\u4ee5\u5b83\u5bf9\u8fd9\u4e9b\u4e66\u7684\u7ed3\u6784\u6709\u5f88\u5927\u7684\u5f71\u54cd\u3002\u4ece\u90a3\u5929\u8d77\uff0c\u7b97\u6cd5\u5206\u6790\u5b9e\u9645\u4e0a\u5c31\u6210\u4e86\u6211\u751f\u6d3b\u4e2d\u7684\u4e3b\u8981\u4e3b\u9898\u4e4b\u4e00\u3002\n[SUM]\u57fa\u672c\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u5148\u5c06\u77e9\u9635\u7684\u884c\u6216\u5217\u76f8\u52a0\uff0c\u7136\u540e\u518d\u5c06\u7ed3\u679c\u76f8\u52a0\uff0c\u8fd9\u5e76\u4e0d\u91cd\u8981\uff1a\u6211\u4eec\u6700\u7ec8\u5c06\u5f97\u5230\u77e9\u9635\u4e2d\u6240\u6709\u6761\u76ee\u7684\u603b\u548c\u3002\ne1 e2 e3 e4..\u3002E2 E3 E4..\u3002E3 E4..\u3002E4.\n\u51c6\u786e\u770b\u5230i\u4e2a\u6ee1\u65f6\u9699\u7684\u6982\u7387\u4e0e\u6307\u793a\u7b26\u968f\u673a\u53d8\u91cf\u7528\u4e8e\u51c6\u786e\u770b\u5230i\u4e2a\u6ee1\u65f6\u9699\u7684\u671f\u671b\u503cEi\u76f8\u540c\u3002\u9884\u671f\u7684\u6ee1\u4f4d\u6570\u662fi*ei\u7684i\u9664\u4ee5i(\u4ece1\u5230k)\u7684\u603b\u548c\uff0c\u8fd9\u662f\u5148\u5c06\u5217\u76f8\u52a0\u3002\u6211\u4eec\u8ba1\u7b97\u7684\u662f\u81f3\u5c11\u770b\u5230i\u4e2a\u6ee1\u4f4d\u7684\u6307\u6807\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\u503c\u4e4b\u548c\uff0c\u8fd9\u662f\u5148\u5c06\u884c\u52a0\u8d77\u6765(\u6839\u636e\u671f\u671b\u7684\u7ebf\u6027)\u3002\n[\u51e0\u4f55]\u5982\u679c\u6211\u4eec\u628at\u4ece0\u5230\u65e0\u7a77\u5927\u7684\u548c\u4e58\u4ee5a\uff0c\u6211\u4eec\u5f97\u5230\u76f8\u540c\u7684\u548c\uff0c\u9664\u53bb\u7b2c\u4e00\u9879a 0=1\u3002\u6240\u4ee51-a\u4e58\u4ee5\u8fd9\u4e2a\u548c\u662f1\uff0c\u603b\u548c\u662f1/(1-a)\u3002", "note_en": "I wrote the  Forth Lisp Python Continuum (Flpc)&#39;s self hosted compiler in stages. When I completed the parser and gave it larger and larger pieces of its own source code, it was running too slow. I tried many things to speed it up, one that helped was using hash tables.\n     Runnable sample code from this post is in the more familiar Python instead of Flpc. In Python, the two above two functions are usually  __setitem__(self, key, value) and  __getitem__(self, key). However, we will avoid using too many language features so the resulting prototype could be translated more directly. In particular, we&#39;ll pretend Python lists are fixed length and don&#39;t have conveniences like  index and  enumerate already implemented.\n  Before hash tables, dictionaries in Flpc were implemented as two arrays  keys and  values so that  keys[i] is associated with  values[i] for each index  i (i.e.,  get(keys[i]) returns  values[i]).\n  def array_index(array, key): for i in range(len(array)): if array[i] == key: return i raise ValueError(f&#34;Value {key} not found.&#34;)def get(self, key): return self.values[array_index(self.keys, key)]\n  def set(self, key, value): try: i = array_index(self.keys, key) except ValueError: i = array_index(self.keys, Empty) self.keys[i] = key self.values[i] = value\n where  Empty is the initial value set to all of  keys, representing no key at that index [resizable].  Get the source code here.\n  Now let&#39;s implement hash tables. The specific variant we implement is &#34;hash tables with open addressing and linear probing&#34;.\n When looking for the index in the  keys array, instead of searching from the beginning of the array, we&#39;ll start in the middle of it and wrap around when we reach the end.\n def array_index(array, key, i): while True: if array[i] == key: return i elif array[i] == Empty: raise ValueError(f&#34;Value {key} is not in the dictionary&#34;) i = (i + 1) % len(array)\n We&#39;ll make both  get and  set start their search on some location depending only on the  key.\n def get(self, key): return self.values[array_index(self.keys, key, start(key) % len(self.keys))]def set(self, key, value): try: i = array_index(self.keys, key, start(key) % len(self.keys)) except ValueError: i = array_index(self.keys, Empty, start(key) % len(self.keys)) self.keys[i] = key self.values[i] = value\n  But we still need to define  start ( source here), know why this works and why its fast.\n  Hash tables make a time-space trade-off. We&#39;ll pick a large  keys (and thus  values) array, much larger than the number of keys we&#39;ll actually store in them. In the ideal situation,  start spreads the keys around this array enough that all keys we&#39;ll actually store in the hash table begin their search at the same index. That is, all  start(key) % len(self.keys) are different.\n Then the search always succeeds in one step and returns  start(key) % len(self.keys) as the index. This is because  keys[start(key) % len(self.keys)] is either  Empty before the first time  key is set to a value or  keys[start(key) % len(self.keys)] is equal to  key afterwards.\n One step is the best we could do. At the cost of more memory, we&#39;ve got  get and  set to run at the same speed as an array even though the keys we&#39;re setting aren&#39;t contiguous.\n I won&#39;t say too much about how we pick  start but the idea is to choose something that spreads out the starting positions as much as possible.\n  In a less ideal world, we can get  start(key1) % len(keys) == start(key2) % len(keys). Call this index  index. In that case, the first of the two keys written to  keys will be at  index and the other at  index + 1 [cascade]. The further away a key ends up from its  starting index, the more time it will take to search for it.\n     The value of  keys is never rewritten to once is empty so on any later search, we&#39;ll end up at the same index ( index + 2 in the example) again.\n  We&#39;ll pick  start to be a  hash function, something that maps strings to an index. There&#39;s a lot to say about hash functions that we won&#39;t and instead just pick a known good function that&#39;s easy to implement.\n def djb2_hash(key): h = 5381 for c in key: h = ((h &lt;&lt; 5 + h) + ord(c)) &amp; 0xffffffff return hstart = djb2_hash\n There&#39;s  quite  a  rabbit hole to go down about this particular function  djb2 (but I won&#39;t do that here).\n Since the goal of the  hash function is to distribute starting points evenly in our array, let&#39;s see that this works (or at least has a good chance of working) if our hash function chooses starting positions completely randomly.\n What follows is a slightly wrong analysis to get an idea of how much time it will take. Or you can instead read a correct one [linear_probing].\n So suppose our hash table has  s slots, there are already  k keys and we try to insert a new  k+1st key.\n Since the  k+1st key has a random starting position, the probability of picking one of the k slots with a key already in it is  k/s. If we&#39;re unlucky and collide with a key, then the probability that we hit another key when moving forward is  (k-1)/(s-1). This is because there are  s-1 slots excluding our starting slot and  k-1 keys in those slots.\n This is actually not true because while there are k-1 keys amongst s-1 slots, they&#39;re not all equally likely to be filled! It would be true if we look at a random slot  start(key, i) instead of  start(key) + i for the  ith slot to examine.\n With that aside aside, let&#39;s continue. If we&#39;re again unlucky and see a filled slot, then the probability that we hit another key when moving forward is  (k-2)/(s-2). And we can keep going.\n (k-i)/(s-i) is at most  k/s and so the probability that we see  t filled slots in our search is at most  (k/s) t. The expected number of full slot we see (before eventually finding an empty slot) is the sum of these values [sum]. That&#39;s at most the infinite sum, which is a geometric series of value  1/(1-k/s) - 1 [geometric] or  1/(1-k/s) total slots examined if we now count the final empty slot in which the key is inserted.\n That means if we have twice as many slots as keys, we expect to look at  1/(1-1/2) = 2 slots on average!\n The actual expected number for linear probing is  1/(1-(k/s) 2) [linear_probing] which means we&#39;ll look at 4 slots which is still not that bad, or we could just have more slots.\n  You&#39;ll notice that key deletion is conspicuously missing from this entire post which makes things simpler. That about what would happen if we just set a  key back to  Empty for key deletion?\n   Being a bootstrapping-centric implementation, Flpc faces another chicken or egg problem for dictionaries: the implementation show in this post needs objects and two arrays. But objects needs attributes looked up, which are implemented using a dictionary. And really, we need a dictionary from function names to either memory location of where the functions are stored or primitives for the bytecode interpreter.\n Even the naive implementation needs arrays of some sort! To resolve this, the function names dictionary is hard-coded into a function&#39;s body.\n def names_get(key): if key == &#34;string1&#34;: return value1 if key == &#34;string2&#34;: return value2 if key == &#34;string3&#34;: return value3 ...\n This does not invalidate what we said before: indeed we needed an array of some sort. It just happens to be the same arrays we use for functions. Flpc functions are represented in memory as arrays of integers, each encoding either a memory location, primitive or (reference to a) constant. (See the  Forth tutorial for an in-depth description of the model. Other details vary slightly.) But they do not offer individual getter and setter method. Instead,  memory.get and  memory.set lets us read and write to absolute positions in memory (so offsets have to be calculated by hand).\n We still need a setter for function names lookup. When compiled, the in-memory representation of the getter  names.get looks something like\n pick1 push: &#34;string1&#34; == push: value1 return_ifpick1 push: &#34;string2&#34; == push: value2 return_ifpick1 push: &#34;string3&#34; == push: value3 return_if...end_of_function\n Above we&#39;re showing what the integer values in memory represent rather than the integers themselves.  return_if takes boolean and value, and returns the value if the boolean is true (and discards both if the boolean is false).\n So to set a new value, we can append a few more entries at the end of  names.get&#39;s body, such as  pick1 push: &#34;string4&#34; == push: value4 return_if and move the call to  end_of_function afterwards (see  functions.add in  boot.flpc for the actual implementation).\n This gets us the naive dictionary for function names. To mimic the hashtable implemented earlier in this post, we need to be able to start at an if-statement in the middle of the function body and we have to wrap around at the end.\n In Flpc&#39;s bootstrapping sequence, we&#39;ll instead use the naive dictionaries to implement everything up to objects and hashtables objects and then rebind  names.get to the body of a new function  hashtable.get(key names) that uses these hashtables. This resolves the chicken or egg problem. Naive-dictionary-as-a-bunch-of-if-statements came first. Unfortunately, this means attribute lookups also use naive hash tables of some sort. They look something like this.\n hashtable.attrib &lt;- fun[name receiver searcher]: return_if(string_equal(name &#34;get&#34;) hashtable.get) return_if(string_equal(name &#34;set&#34;) hashtable.set) return_if(string_equal(name &#34;instance&#34;) hashtable.instance) return_if(string_equal(name &#34;print&#34;) hashtable.print) return_if(string_equal(name &#34;len&#34;) memory.get(receiver)) return_if(string_equal(name &#34;keys&#34;) memory.get(receiver + 1)) return_if(string_equal(name &#34;values&#34;) memory.get(receiver + 2)) return_if(string_equal(name &#34;type&#34;) &#34;hashtable&#34;) return(instance_attrib(name receiver searcher))\n There still one remainding challenge, we have to insert the existing key-value pairs into the new hash table  names. Fortunately, each if-statement occupies a fixed length of 7 cell. So we can iterate through this part of memory and pull out the (already compiled!) key and value that are at specific offsets. This all happens in  stage1b2.flpc.\n convert_names &lt;- fun[]: end = functions.end() index = names.get + 5 cond = not(index &gt; end) repeat_if: drop1(`cond) names . set(memory.get(index) memory.get(index + 3)) index = `index + 7 cond = not(index &gt; end)\n index and  end will contain the indices in memory (=addresses).  memory.get(index) is a string  &#34;string1&#34;, &#34;string2&#34; and so on and  memory.get(index + 3) contains  value1,  value2 and so on.\n  I timed some of the precompiled files with and without hash table, using  time.  time is not always the best tool but is good enough here to get a better idea. I looked at other results before event considering speeding up  names.get in the first place.\n         A bit underwhelming. All it did was give us a ~4x speed up. But we might have moved the bottleneck away from function names lookup. Since speed is dominated by the slowest part (and occasionally parts), even this modest speed up tells us that function names lookup was one of the slower parts.\n  We now want to make attribute lookup (such as  hashtable.attrib from above) use hash tables. Unfortunately, unlike  names.get, each if-statement&#39;s body does not take up the same number of cells in memory. For example\n    because  memory.get(receiver + 1) is done in the functions body itself. We could potentially avoid this by wrapping every value in a function\n  and  hashtable.get_() would just return  hashtable.get. But instead we used an ugly hack with jump tables jumping into the old  hashtable.attrib (from our new definition of  hashtable.attrib). Maybe this will be replaced with something better later.\n  [resizable] We could instead use Python list&#39;s  append which effectively resizes the list as it grows but that increases the requirement from needing only arrays to needing resizable array. And we don&#39;t need resizable array to implement fixed/bounded size hash tables.\n [cascade] And this can have a cascading effect. Even though a third key is alone to start at  index + 1 == start(key3) % len(keys),  key2 could be written to  keys[index + 1] first so  key3 ends up at  keys[index + 2] (or vice-versa).\n [linear_probing] Everything I&#39;ve found leads back to the  Art of Computer Programming Volume 3 pages p 678-682. Unfortunately, its not free and my medium effort level search hasn&#39;t found anywhere that re-explains it. An interesting passage from those pages:\n The author cannot resist inserting a biographical note at this point: I first formulated the followingderivation in 1962, shortly after beginning work on The Art of Computer Programming. Since this wasthe first nontrivial algorithm I had ever analyzed satisfactorily, it had a strong influence on thestructure of these books. Ever since that day, the analysis of algorithms has in fact been one of themajor themes of my life.\n [sum] Basically, it doesn&#39;t matter if we add up the rows or columns of a matrix first and then add up the result: we&#39;ll end up with the sum of all entries in the matrix.\n e1 e2 e3 e4 ... e2 e3 e4 ... e3 e4 ... e4 ... ...\n The probability of seeing exactly  i full slots is the same as the expectation  ei of the indicator random variable for seeing exactly  i full slots. The expected number of full slots seens is the sum over  i (from  1 to  k) of  i * ei and that&#39;s adding up columns first. What we&#39;ve calculated is the sum of the expected value of indicator random variables for seeing at least  i full slots and that&#39;s adding up rows first (by linearity of expectation).\n [geometric] If we multiply the sum of  a t from 0 to infinity by  a, we get the same sum back with the first term  a 0=1 removed. So  1-a times this sum is 1 and the sum is  1/(1-a).", "posttime": "2020-05-19 14:06:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u9ad8,improvements,key", "title": "\u4f7f\u7528\u54c8\u5e0c\u8868\u63d0\u9ad8\u901f\u5ea6", "title_en": "Speed improvements using hash tables", "transed": 1, "url": "https://blog.asrpo.com/hashtables", "via": "", "real_tags": ["\u63d0\u9ad8", "key"]}, {"category": "", "categoryclass": "", "imagename": "68ff00abfcb82fb556e1921b4468f22e.jpg", "infoid": 1002741, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u201c\u4eca\u65e5\u4f5b\u7f57\u91cc\u8fbe\u201d\u62a5\u9053\uff0c\u968f\u7740\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5f00\u59cb\u91cd\u65b0\u5f00\u653e\uff0c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u51a0\u72b6\u75c5\u6bd2\u4eea\u8868\u76d8\u7684\u5efa\u7b51\u5e08\u517c\u7ecf\u7406\u5ba3\u5e03\u5979\u5df2\u88ab\u514d\u804c\u3002\u4e3d\u8d1d\u5361\u00b7\u743c\u65af\u5728\u5199\u7ed9CBS12\u65b0\u95fb\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u79f0\uff0c\u5979\u7684\u514d\u804c\u201c\u4e0d\u662f\u81ea\u613f\u7684\u201d\uff0c\u5979\u88ab\u514d\u804c\u662f\u56e0\u4e3a\u5979\u88ab\u547d\u4ee4\u5ba1\u67e5\u4e00\u4e9b\u6570\u636e\uff0c\u4f46\u62d2\u7edd\u201c\u624b\u52a8\u66f4\u6539\u6570\u636e\u4ee5\u4e89\u53d6\u5bf9\u91cd\u5f00\u8ba1\u5212\u7684\u652f\u6301\u201d\u3002", "note_en": "As Florida starts to reopen, the architect and manager of Florida's COVID-19 dashboard, announced she'd been removed from her position, Florida Today reported. Rebekah Jones said in an email to CBS12 News that her removal was \"not voluntary\" and that she was removed from her position because she was ordered to censor some data, but refused to \"manually change data to drum up support for the plan to reopen. \"", "posttime": "2020-05-19 13:06:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,\u8bbe\u8ba1,florida,\u4f5b\u7f57\u91cc\u8fbe\u5dde", "title": "\u4f5b\u7f57\u91cc\u8fbe\u5dde\u51a0\u72b6\u75c5\u6bd2\u4eea\u8868\u76d8\u7684\u8bbe\u8ba1\u5e08\u5df2\u88ab\u514d\u804c", "title_en": "Architect of Florida's Covid-19 dashboard has been removed from her position", "transed": 1, "url": "https://cbs12.com/news/local/woman-who-designed-floridas-covid-19-dashboard-has-been-removed-from-her-position", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u8bbe\u8ba1", "florida", "\u4f5b\u7f57\u91cc\u8fbe\u5dde"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002740, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e0d\u77e5\u9053\u4f60\u600e\u4e48\u60f3\uff0c\u4f46\u662f\u6ca1\u6709\u4ec0\u4e48\u6bd4\u4e00\u79cd\u8001\u5f0f\u7684\u7f16\u7a0b\u8bed\u8a00\u5486\u54ee\u66f4\u80fd\u8ba9\u6211\u65e9\u4e0a\u884c\u52a8\u8d77\u6765\u4e86\u3002\u770b\u5230\u6709\u4eba\u4f7f\u7528\u5e73\u6c11\u4f7f\u7528\u7684\u90a3\u79cd\u201c\u9cb8\u9c7c\u201d\u8bed\u8a00\uff0c\u5728\u5077\u5077\u8bbf\u95eeStackOverflow\u7684\u95f4\u9699\u8499\u6df7\u8fc7\u5173\uff0c\u8fd9\u4f1a\u6fc0\u8d77\u4eba\u4eec\u7684\u6124\u6012\u3002\n(\u540c\u65f6\uff0c\u4f60\u548c\u6211\u53ea\u4f7f\u7528\u6700\u5f00\u660e\u7684\u8bed\u8a00\u3002(\u4e3a\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u4e13\u4e1a\u5de5\u5320\u4fee\u526a\u6307\u7532\u7684\u624b\u8bbe\u8ba1\u7684\u51ff\u5b50\u5de5\u5177\u3002)\u3002\n\u5f53\u7136\uff0c\u4f5c\u4e3aSaid Screed\u7684\u4f5c\u8005\uff0c\u6211\u6709\u98ce\u9669\u3002\u6211\u6a21\u4eff\u7684\u8bed\u8a00\u53ef\u80fd\u662f\u4f60\u559c\u6b22\u7684\u8bed\u8a00\uff01\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\uff0c\u6211\u672c\u53ef\u4ee5\u8ba9\u4e4c\u5408\u4e4b\u4f17\u5f00\u5200\u535a\u5ba2\u3001\u5e72\u8349\u53c9\u548c\u706b\u70ac\u968f\u65f6\u51c6\u5907\u597d\uff0c\u800c\u6211\u90a3\u611a\u8822\u800c\u987d\u5f3a\u7684\u5c0f\u518c\u5b50\u53ef\u80fd\u4f1a\u62db\u81f4\u4ed6\u4eec\u7684\u6124\u6012\uff01\n\u4e3a\u4e86\u4fdd\u62a4\u81ea\u5df1\u4e0d\u53d7\u90a3\u4e9b\u706b\u7130\u7684\u707c\u70ed\uff0c\u4e5f\u4e3a\u4e86\u907f\u514d\u5192\u72af\u4f60\u53ef\u80fd\u8106\u5f31\u7684\u60c5\u611f\uff0c\u6211\u4f1a\u5486\u54ee\u7740\u8bf4\u4e00\u79cd\u6211\u521a\u521a\u7f16\u9020\u7684\u8bed\u8a00\u3002\u4e00\u4e2a\u552f\u4e00\u76ee\u7684\u5c31\u662f\u8981\u88ab\u70b9\u71c3\u7684\u7a3b\u8349\u4eba\u3002\n\u6211\u77e5\u9053\uff0c\u8fd9\u770b\u8d77\u6765\u6beb\u65e0\u610f\u4e49\uff0c\u5bf9\u5427\uff1f\u76f8\u4fe1\u6211\uff0c\u5230\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8c01\u7684\u8138(\u6216\u51e0\u5f20\u8138\uff01)\u3002\u753b\u5728\u4ed6\u7684\u7a3b\u8349\u5934\u4e0a\u3002\n\u4ec5\u4ec5\u4e3a\u4e86\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u800c\u5b66\u4e60\u4e00\u95e8\u5168\u65b0\u7684(\u7cdf\u7cd5\u7684)\u8bed\u8a00\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5047\u8bbe\u5b83\u4e0e\u4f60\u6211\u5df2\u7ecf\u77e5\u9053\u7684\u8bed\u8a00\u5927\u81f4\u76f8\u4f3c\u3002\u6211\u4eec\u4f1a\u8bf4\u5b83\u7684\u8bed\u6cd5\u6709\u70b9\u50cfJS\u3002\u82b1\u62ec\u53f7\u548c\u5206\u53f7\u3002\u5982\u679c\uff0c\u5982\u679c\uff0c\u7b49\u7b49\u3002\u7f16\u7a0b\u6d1e\u7a74\u7684\u901a\u7528\u8bed\u3002\n\u6211\u9009\u62e9JS\u5e76\u4e0d\u662f\u56e0\u4e3a\u8fd9\u7bc7\u6587\u7ae0\u5c31\u662f\u5173\u4e8e\u8fd9\u4e2a\u7684\u3002\u8fd9\u53ea\u662f\u4f60\u7684\u8bed\u8a00\uff0c\u666e\u901a\u8bfb\u8005\u7684\u7edf\u8ba1\u4ee3\u8868\uff0c\u6700\u6709\u53ef\u80fd\u7406\u89e3\u3002\u77a7\u554a\uff1a\n\u56e0\u4e3a\u6211\u4eec\u7684\u7a3b\u8349\u4eba\u662f\u4e00\u95e8\u73b0\u4ee3(\u5dee\u52b2)\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u6709\u4e00\u6d41\u7684\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5236\u4f5c\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u5185\u5bb9\uff1a\n//\u8fd4\u56de\u5305\u542b\u96c6\u5408\u4e2d//\u6240\u6709\u5339\u914d\u8c13\u8bcd\u7684\u5143\u7d20\u7684\u5217\u8868\u3002\u51fd\u6570\u7b5b\u9009\u5668(\u96c6\u5408\uff0c\u8c13\u8bcd){var result=[]\uff1bfor(var i=0\uff1bi&lt\uff1b\u96c6\u5408\u3002\u957f\u5ea6\uff1bi++){if(\u8c13\u8bcd(Collection[i])\u7ed3\u679c\u3002Push(Collection[i])\uff1b}\u8fd4\u56de\u7ed3\u679c\uff1b}\u3002\n\u8fd9\u662f\u90a3\u4e9b\u9ad8\u9636\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u4eec\u662f\u4f18\u96c5\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u51fa\u6765\u4e86\uff0c\u800c\u4e14\u975e\u5e38\u6709\u7528\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u4e60\u60ef\u4e86\u4ed6\u4eec\u5230\u5904\u6446\u5f04\u85cf\u54c1\uff0c\u4f46\u662f\u4e00\u65e6\u4f60\u5185\u5316\u4e86\u8fd9\u4e2a\u6982\u5ff5\uff0c\u4f60\u51e0\u4e4e\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f1a\u5f00\u59cb\u4f7f\u7528\u5b83\u4eec\u3002\n\u6240\u4ee5\u4f60\u5230\u9547\u4e0a\u53bb\uff0c\u5199\u5404\u79cd\u5f88\u68d2\u7684\u53ef\u91cd\u7528\u7684\u5e93\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f20\u9012\u51fd\u6570\uff0c\u8c03\u7528\u51fd\u6570\uff0c\u8fd4\u56de\u51fd\u6570\uff0cFuncapalooza\u3002\n\u9664\u4e86\u7b49\u5f85\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u8bed\u8a00\u53d8\u5f97\u53e4\u602a\u7684\u5730\u65b9\u3002\u5b83\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u7279\u70b9\uff1a\n\u6bcf\u4e2a\u51fd\u6570-\u533f\u540d\u56de\u8c03\u6216\u5e38\u89c4\u547d\u540d\u51fd\u6570-\u8981\u4e48\u662f\u7ea2\u8272\u7684\uff0c\u8981\u4e48\u662f\u84dd\u8272\u7684\u3002\u7531\u4e8e\u6211\u7684\u535a\u5ba2\u7684\u4ee3\u7801\u9ad8\u4eae\u7b14\u4e0d\u80fd\u5904\u7406\u5b9e\u9645\u989c\u8272\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u5176\u8bed\u6cd5\u5982\u4e0b\uff1a\nBlue\u00b7function doSomethingAzure(){//\u8fd9\u662f\u4e00\u4e2a\u84dd\u8272\u51fd\u6570.\u3002}red\u00b7\u51fd\u6570doSomethingCarnelian(){//\u8fd9\u662f\u4e00\u4e2ared\u51fd\u6570.\u3002}\u3002\n\u8bed\u8a00\u4e2d\u6ca1\u6709\u6beb\u65e0\u610f\u4e49\u7684\u529f\u80fd\u3002\u60f3\u505a\u4e2a\u51fd\u6570\u5417\uff1f\u5f97\u9009\u4e2a\u989c\u8272\u3002\u8fd9\u662f\u89c4\u5219\u3002\u800c\u4e14\uff0c\u5b9e\u9645\u4e0a\uff0c\u4f60\u8fd8\u5fc5\u987b\u9075\u5faa\u51e0\u6761\u89c4\u5219\uff1a\n\u60f3\u8c61\u4e00\u4e0b\u201c\u84dd\u8272\u547c\u53eb\u201d\u8bed\u6cd5\u548c\u201c\u7ea2\u8272\u547c\u53eb\u201d\u8bed\u6cd5\u3002\u7c7b\u4f3c\u4e8e\uff1a\n\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u4e0e\u5176\u989c\u8272\u76f8\u5bf9\u5e94\u7684\u8c03\u7528\uff0c\u5982\u679c\u8c03\u7528\u9519\u8bef-\u5728\u62ec\u53f7\u540e\u4f7f\u7528\u00b7Blue\u8c03\u7528\u7ea2\u8272\u51fd\u6570\uff0c\u53cd\u4e4b\u4ea6\u7136-\u5b83\u4f1a\u505a\u4e00\u4e9b\u4e0d\u597d\u7684\u4e8b\u60c5\u3002\u4ece\u4f60\u7684\u7ae5\u5e74\u4e2d\u6316\u51fa\u4e00\u4e9b\u88ab\u9057\u5fd8\u5df2\u4e45\u7684\u5669\u68a6\uff0c\u5c31\u50cf\u4e00\u4e2a\u8eb2\u5728\u5e8a\u4e0b\u7684\u4ee5\u86c7\u4e3a\u81c2\u7684\u5c0f\u4e11\u3002\u5b83\u4f1a\u4ece\u4f60\u7684\u76d1\u89c6\u5668\u91cc\u8df3\u51fa\u6765\uff0c\u5438\u8d70\u4f60\u7684\u73bb\u7483\u4f53\u5e7d\u9ed8\u611f\u3002\n\u4f46\u4f60\u4e0d\u80fd\u8d70\u53e6\u4e00\u6761\u8def\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u8fd9\u6837\u505a\uff1a\n\u8fd9\u4f7f\u5f97\u7f16\u5199\u50cf\u6211\u4eec\u7684filter()\u793a\u4f8b\u8fd9\u6837\u7684\u9ad8\u9636\u51fd\u6570\u53d8\u5f97\u5f88\u56f0\u96be\uff0c\u6211\u4eec\u5fc5\u987b\u4e3a\u5b83\u9009\u62e9\u4e00\u79cd\u989c\u8272\uff0c\u8fd9\u4f1a\u5f71\u54cd\u6211\u4eec\u88ab\u5141\u8bb8\u4f20\u9012\u7ed9\u5b83\u7684\u51fd\u6570\u7684\u989c\u8272\u3002\u663e\u800c\u6613\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06filter()\u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u63a5\u53d7\u7ea2\u8272\u6216\u84dd\u8272\u51fd\u6570\u5e76\u8c03\u7528\u5b83\u4eec\u3002\u4f46\u968f\u540e\u6211\u4eec\u8fdb\u5165\u4e86\u4e0b\u4e00\u4e2a\u4ee4\u4eba\u53d1\u75d2\u7684\u5730\u65b9\uff0c\u90a3\u5c31\u662f\u8fd9\u79cd\u8bed\u8a00\uff1a\n\u73b0\u5728\uff0c\u6211\u4e0d\u4f1a\u7cbe\u786e\u5730\u5b9a\u4e49\u201c\u75db\u82e6\u201d\uff0c\u4f46\u662f\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u5458\u6bcf\u6b21\u8c03\u7528\u4e00\u4e2a\u7ea2\u8272\u51fd\u6570\u90fd\u8981\u7ecf\u5386\u4e00\u4e9b\u70e6\u4eba\u7684\u5708\u5957\u3002\u4e5f\u8bb8\u5b83\u771f\u7684\u5f88\u5197\u957f\uff0c\u6216\u8005\u4e5f\u8bb8\u4f60\u4e0d\u80fd\u5728\u67d0\u4e9b\u7c7b\u578b\u7684\u8bed\u53e5\u4e2d\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e5f\u8bb8\u4f60\u53ea\u80fd\u7528\u8d28\u6570\u7684\u7ebf\u53f7\u547c\u53eb\u4ed6\u4eec\u3002\n\u91cd\u8981\u7684\u662f\uff0c\u5982\u679c\u60a8\u51b3\u5b9a\u5c06\u4e00\u4e2a\u51fd\u6570\u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff0c\u6bcf\u4e2a\u4f7f\u7528\u60a8\u7684API\u7684\u4eba\u90fd\u4f1a\u60f3\u8981\u5728\u60a8\u7684\u5496\u5561\u91cc\u5410\u53e3\u6c34\u548c/\u6216\u5728\u91cc\u9762\u653e\u4e00\u4e9b\u5473\u9053\u66f4\u5dee\u7684\u6db2\u4f53\u3002\n\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528RED\u51fd\u6570\u3002\u53ea\u8981\u628a\u6240\u6709\u4e1c\u897f\u90fd\u53d8\u6210\u84dd\u8272\uff0c\u4f60\u5c31\u4f1a\u56de\u5230\u6240\u6709\u51fd\u6570\u90fd\u6709\u76f8\u540c\u989c\u8272\u7684\u7406\u667a\u4e16\u754c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5b83\u4eec\u90fd\u6ca1\u6709\u989c\u8272\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u7684\u8bed\u8a00\u5e76\u4e0d\u5b8c\u5168\u611a\u8822\u3002\n\u5509\uff0c\u8650\u5f85\u72c2\u7684\u8bed\u8a00\u8bbe\u8ba1\u5e08-\u6211\u4eec\u90fd\u77e5\u9053\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u5e08\u90fd\u662f\u8650\u5f85\u72c2\uff0c\u4e0d\u662f\u5417\uff1f-\u6233\u5230\u4e86\u6211\u4eec\u8eab\u8fb9\u7684\u6700\u540e\u4e00\u6839\u523a\uff1a\n\u6709\u4e00\u4e9b\u5185\u7f6e\u5230\u5e73\u53f0\u4e2d\u7684\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u529f\u80fd\uff0c\u6211\u4eec\u65e0\u6cd5\u81ea\u5df1\u7f16\u5199\uff0c\u53ea\u80fd\u7528\u7ea2\u8272\u8868\u793a\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4e00\u4e2a\u901a\u60c5\u8fbe\u7406\u7684\u4eba\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8bed\u8a00\u6068\u6211\u4eec\u3002\n\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u91cc\u7684\u95ee\u9898\u662f\u6211\u4eec\u8bd5\u56fe\u4f7f\u7528\u66f4\u9ad8\u9636\u7684\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u4e0d\u518d\u7a7f\u7740\u90a3\u4e9b\u529f\u80fd\u7e41\u7410\u7684\u4e1c\u897f\u5230\u5904\u4e71\u8dd1\uff0c\u800c\u662f\u50cf\u4e0a\u5e1d\u5e0c\u671b\u7684\u90a3\u6837\u7f16\u5199\u6b63\u5e38\u7684\u84dd\u9886\u7b2c\u4e00\u7ea7\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u8ba9\u81ea\u5df1\u611f\u5230\u6240\u6709\u7684\u5fc3\u75db\u3002\n\u5982\u679c\u6211\u4eec\u53ea\u8c03\u7528\u84dd\u8272\u51fd\u6570\uff0c\u8bf7\u5c06\u6211\u4eec\u7684\u51fd\u6570\u8bbe\u4e3a\u84dd\u8272\u3002\u53ea\u8981\u6211\u4eec\u4ece\u6765\u4e0d\u5236\u4f5c\u63a5\u53d7\u51fd\u6570\u7684\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u4e0d\u5fc5\u62c5\u5fc3\u8bd5\u56fe\u201c\u591a\u6001\u800c\u4e0d\u662f\u51fd\u6570\u8272\u201d(\u591a\u8272\uff1f)\u3002\u6216\u8005\u8bf8\u5982\u6b64\u7c7b\u7684\u80e1\u8bf4\u516b\u9053\u3002\n\u4f46\u662f\uff0c\u5509\uff0c\u9ad8\u9636\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u6bcf\u5f53\u6211\u4eec\u60f3\u8981\u5c06\u7a0b\u5e8f\u5206\u89e3\u6210\u53ef\u91cd\u7528\u7684\u72ec\u7acb\u529f\u80fd\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u666e\u904d\u5b58\u5728\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u5c0f\u4ee3\u7801\u5757\uff0c\u6211\u4e0d\u77e5\u9053\uff0c\u5b83\u5728\u4e00\u4e2a\u56fe\u8868\u4e0a\u5b9e\u73b0\u4e86Dijkstra\u7684\u7b97\u6cd5\uff0c\u5b83\u4ee3\u8868\u4e86\u4f60\u7684\u793e\u4ea4\u7f51\u7edc\u5bf9\u5f7c\u6b64\u7684\u6324\u538b\u7a0b\u5ea6\u3002(\u6211\u82b1\u4e86\u592a\u957f\u65f6\u95f4\u8bd5\u56fe\u51b3\u5b9a\u8fd9\u6837\u7684\u7ed3\u679c\u5230\u5e95\u4ee3\u8868\u7740\u4ec0\u4e48\u3002\u4f20\u9012\u6027\u4e0d\u53d7\u6b22\u8fce\uff1f)\u3002\n\u7a0d\u540e\uff0c\u60a8\u6700\u7ec8\u9700\u8981\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u5757\u3002\u4f60\u505a\u4e00\u4ef6\u5f88\u81ea\u7136\u7684\u4e8b\u60c5\uff0c\u7136\u540e\u628a\u5b83\u63d0\u5347\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u529f\u80fd\u4e2d\u3002\u60a8\u53ef\u4ee5\u4ece\u65e7\u4f4d\u7f6e\u548c\u4f7f\u7528\u5b83\u7684\u65b0\u4ee3\u7801\u4e2d\u8c03\u7528\u5b83\u3002\u4f46\u5b83\u5e94\u8be5\u662f\u4ec0\u4e48\u989c\u8272\u5462\uff1f\u663e\u7136\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u60a8\u4f1a\u5c06\u5176\u8bbe\u7f6e\u4e3a\u84dd\u8272\uff0c\u4f46\u662f\u5982\u679c\u5b83\u4f7f\u7528\u7684\u662f\u4ec5\u652f\u6301\u7ea2\u8272\u7684\u6838\u5fc3\u5e93\u51fd\u6570\u4e4b\u4e00\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\u5982\u679c\u4f60\u60f3\u53eb\u5b83\u84dd\u8272\u7684\u65b0\u5730\u65b9\u600e\u4e48\u529e\uff1f\u60a8\u5fc5\u987b\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7ea2\u8272\u3002\u7136\u540e\uff0c\u60a8\u5fc5\u987b\u5c06\u8c03\u7528\u5b83\u7684\u51fd\u6570\u8bbe\u7f6e\u4e3a\u7ea2\u8272\u3002\u5443.\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u90fd\u8981\u7ecf\u5e38\u8003\u8651\u989c\u8272\u3002\u5b83\u5c06\u662f\u4f60\u6cf3\u8863\u4e2d\u7684\u6c99\u5b50\uff0c\u5728\u53d1\u5c55\u7684\u6d77\u6ee9\u5ea6\u5047\u3002\n\u5f53\u7136\uff0c\u6211\u8bf4\u7684\u4e0d\u662f\u771f\u7684\u989c\u8272\uff0c\u5bf9\u5417\uff1f\u8fd9\u662f\u4e00\u79cd\u5bd3\u8a00\u5f0f\u7684\u6587\u5b66\u628a\u620f\u3002Sneetch\u4e0d\u662f\u5173\u4e8e\u809a\u76ae\u4e0a\u7684\u661f\u661f\uff0c\u800c\u662f\u5173\u4e8e\u79cd\u65cf\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u5bf9\u989c\u8272\u7684\u5b9e\u9645\u542b\u4e49\u6709\u4e86\u4e00\u4e2a\u5927\u6982\u7684\u4e86\u89e3\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u91cc\u6709\u4e2a\u5927\u53d1\u73b0\uff1a\n\u5982\u679c\u60a8\u5728Node.js\u4e0a\u4f7f\u7528JavaScript\u7f16\u7a0b\uff0c\u5219\u6bcf\u6b21\u901a\u8fc7\u8c03\u7528\u56de\u8c03\u5b9a\u4e49\u4e00\u4e2a\u201c\u8fd4\u56de\u201d\u503c\u7684\u51fd\u6570\u65f6\uff0c\u60a8\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u7ea2\u8272\u51fd\u6570\u5373\u53ef\u3002\u56de\u8fc7\u5934\u6765\u770b\u770b\u8be5\u89c4\u5219\u5217\u8868\uff0c\u770b\u770b\u6211\u7684\u6bd4\u55bb\u662f\u5982\u4f55\u5806\u53e0\u8d77\u6765\u7684\uff1a\n\u540c\u6b65\u51fd\u6570\u5c06\u5176\u7ed3\u679c\u4f5c\u4e3a\u8fd4\u56de\u503c\u63d0\u4f9b\uff0c\u5f02\u6b65\u51fd\u6570\u901a\u8fc7\u8c03\u7528\u60a8\u4f20\u9012\u7ed9\u5b83\u7684\u56de\u8c03\u6765\u63d0\u4f9b\u7ed3\u679c\u3002\n\u60a8\u4e0d\u80fd\u4ece\u540c\u6b65\u51fd\u6570\u8c03\u7528\u5f02\u6b65\u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u5f02\u6b65\u51fd\u6570\u7a0d\u540e\u5b8c\u6210\u4e4b\u524d\uff0c\u60a8\u65e0\u6cd5\u786e\u5b9a\u7ed3\u679c\u3002\n\u7531\u4e8e\u56de\u8c03\uff0c\u5f02\u6b65\u51fd\u6570\u4e0d\u5728\u8868\u8fbe\u5f0f\u4e2d\u7ec4\u5408\uff0c\u5177\u6709\u4e0d\u540c\u7684\u9519\u8bef\u5904\u7406\uff0c\u5e76\u4e14\u4e0d\u80fd\u4e0etry/catch\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u4e0d\u80fd\u5728\u8bb8\u591a\u5176\u4ed6\u63a7\u5236\u6d41\u8bed\u53e5\u4e2d\u4f7f\u7528\u3002\n\u8282\u70b9\u7684\u5168\u90e8\u7279\u70b9\u662f\u6838\u5fc3\u5e93\u90fd\u662f\u5f02\u6b65\u7684\u3002(\u5c3d\u7ba1\u4ed6\u4eec\u786e\u5b9e\u56de\u62e8\u4e86\uff0c\u5e76\u5f00\u59cb\u6dfb\u52a0\u5f88\u591a\u4e1c\u897f\u7684_Sync()\u7248\u672c\u3002)\u3002\n\u5f53\u4eba\u4eec\u8c08\u8bba\u201c\u56de\u8c03\u5730\u72f1\u201d\u65f6\uff0c\u4ed6\u4eec\u8c08\u8bba\u7684\u662f\u5728\u4ed6\u4eec\u7684\u8bed\u8a00\u4e2d\u6709\u7ea2\u8272\u51fd\u6570\u662f\u591a\u4e48\u70e6\u4eba\u3002\u5f53\u4ed6\u4eec\u521b\u5efa4089\u4e2a\u7528\u4e8e\u5f02\u6b65\u7f16\u7a0b\u7684\u5e93\u65f6\uff0c\u4ed6\u4eec\u8bd5\u56fe\u5728\u5e93\u7ea7\u5904\u7406\u8bed\u8a00\u5f3a\u52a0\u7ed9\u4ed6\u4eec\u7684\u95ee\u9898\u3002\nNode\u793e\u533a\u7684\u4eba\u4eec\u5df2\u7ecf\u610f\u8bc6\u5230\u56de\u8c03\u662f\u4e00\u79cd\u957f\u671f\u7684\u75db\u82e6\uff0c\u5e76\u56db\u5904\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u3002\u4e00\u79cd\u8ba9\u5f88\u591a\u4eba\u5174\u594b\u7684\u6280\u5de7\u662f\u627f\u8bfa\uff0c\u4f60\u53ef\u80fd\u4e5f\u77e5\u9053\u4ed6\u4eec\u7684\u8bf4\u5531\u6b4c\u624b\u540d\u5b57\u201c\u672a\u6765\u201d\u3002\n\u5982\u679c\u4f60\u628a\u56de\u8c03\u548c\u9519\u8bef\u56de\u8c03\u4f5c\u4e3a\u4e00\u4e2a\u6982\u5ff5\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u90a3\u4e48\u627f\u8bfa\u57fa\u672c\u4e0a\u5c31\u662f\u8fd9\u4e2a\u6982\u5ff5\u7684\u5177\u4f53\u5316\u3002\u5b83\u662f\u4ee3\u8868\u5f02\u6b65\u64cd\u4f5c\u7684\u4e00\u7ea7\u5bf9\u8c61\u3002\n\u6211\u5728\u90a3\u6bb5\u8bdd\u91cc\u585e\u8fdb\u4e86\u4e00\u5806\u82b1\u54e8\u7684PL\u8bed\u8a00\uff0c\u6240\u4ee5\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u662f\u4e00\u7b14\u4e0d\u9519\u7684\u4ea4\u6613\uff0c\u4f46\u57fa\u672c\u4e0a\u90fd\u662f\u86c7\u6cb9\u3002\u627f\u8bfa\u786e\u5b9e\u4f1a\u8ba9\u5f02\u6b65\u4ee3\u7801\u66f4\u5bb9\u6613\u7f16\u5199\u3002\u4ed6\u4eec\u7684\u4f5c\u6587\u8981\u597d\u4e00\u4e9b\uff0c\u6240\u4ee5\u89c4\u52194\u4e0d\u662f\u5f88\u7e41\u7410\u3002\n\u4f46\u662f\uff0c\u8001\u5b9e\u8bf4\uff0c\u8fd9\u5c31\u50cf\u662f\u5728\u5185\u810f\u88ab\u6253\u4e00\u62f3\u548c\u5728\u79c1\u5904\u88ab\u6253\u4e00\u62f3\u4e4b\u95f4\u7684\u533a\u522b\u3002\u662f\u7684\uff0c\u6ca1\u6709\u90a3\u4e48\u75db\u82e6\uff0c\u4f46\u6211\u8ba4\u4e3a\u4efb\u4f55\u4eba\u90fd\u4e0d\u5e94\u8be5\u771f\u6b63\u5bf9\u4ef7\u503c\u4e3b\u5f20\u611f\u5230\u5174\u594b\u3002\n\u60a8\u4ecd\u7136\u4e0d\u80fd\u5c06\u5b83\u4eec\u4e0e\u5f02\u5e38\u5904\u7406\u6216\u5176\u4ed6\u63a7\u5236\u6d41\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\u3002\u60a8\u4ecd\u7136\u4e0d\u80fd\u8c03\u7528\u4ece\u540c\u6b65\u4ee3\u7801\u8fd4\u56de\u672a\u6765\u7684\u51fd\u6570\u3002(\u55ef\uff0c\u4f60\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8fd9\u6837\u505a\u4e86\uff0c\u540e\u6765\u7ef4\u62a4\u4f60\u4ee3\u7801\u7684\u4eba\u4f1a\u53d1\u660e\u4e00\u53f0\u65f6\u5149\u673a\uff0c\u56de\u5230\u4f60\u505a\u8fd9\u4ef6\u4e8b\u7684\u90a3\u4e00\u523b\uff0c\u7136\u540e\u75282\u53f7\u94c5\u7b14\u6233\u4f60\u7684\u8138\u3002)\u3002\n\u4f60\u4ecd\u7136\u628a\u4f60\u7684\u6574\u4e2a\u4e16\u754c\u5206\u6210\u5f02\u6b65\u548c\u540c\u6b65\u7684\u4e24\u534a\uff0c\u4ee5\u53ca\u7531\u6b64\u5e26\u6765\u7684\u6240\u6709\u75db\u82e6\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u4f60\u7684\u8bed\u8a00\u4ee5\u627f\u8bfa\u6216\u672a\u6765\u4e3a\u7279\u8272\uff0c\u5b83\u7684\u8138\u770b\u8d77\u6765\u548c\u6211\u7684\u7a3b\u8349\u4eba\u4e0a\u7684\u5f88\u50cf\u3002\n(\u662f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u751a\u81f3\u8fde\u6211\u4f7f\u7528\u7684\u8bed\u8a00DART\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5bf9\u56e2\u961f\u4e2d\u7684\u4e00\u4e9b\u4eba\u6b63\u5728\u8bd5\u9a8c\u5176\u4ed6\u5e76\u53d1\u6a21\u578b\u611f\u5230\u975e\u5e38\u5174\u594b\u7684\u539f\u56e0\u3002)\u3002\nC#\u7a0b\u5e8f\u5458\u73b0\u5728\u53ef\u80fd\u611f\u5230\u76f8\u5f53\u81ea\u9e23\u5f97\u610f(\u968f\u7740Hejlsberg\u548c\u4ed6\u7684\u516c\u53f8\u5728\u8bed\u8a00\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u53c8\u4e00\u4e2a\u53ef\u7231\u7684\u7279\u6027\uff0c\u4ed6\u4eec\u8d8a\u6765\u8d8a\u5bb9\u6613\u6210\u4e3a\u8fd9\u79cd\u60c5\u51b5\u7684\u727a\u7272\u54c1)\u3002\u5728C#\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528waitkeyword\u8c03\u7528\u5f02\u6b65\u51fd\u6570\u3002\n\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u50cf\u540c\u6b65\u8c03\u7528\u4e00\u6837\u8f7b\u677e\u5730\u8fdb\u884c\u5f02\u6b65\u8c03\u7528\uff0c\u53ea\u9700\u6dfb\u52a0\u4e00\u4e2a\u53ef\u7231\u7684\u5c0f\u5173\u952e\u5b57\u5373\u53ef\u3002\u60a8\u53ef\u4ee5\u5c06\u7b49\u5f85\u8c03\u7528\u5d4c\u5957\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5728\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u5c06\u5b83\u4eec\u586b\u5145\u5230\u5185\u90e8\u63a7\u5236\u6d41\u4e2d\u3002\u53d1\u75af\u5427\u3002\u8ba9\u5929\u4e0b\u96e8\uff0c\u7b49\u5f85\u7535\u8bdd\uff0c\u5c31\u50cf\u4ed6\u4eec\u662f\u4f60\u4e3a\u4f60\u7684\u65b0\u8bf4\u5531\u4e13\u8f91\u9884\u4ed8\u7684\u7f8e\u5143\u4e00\u6837\u3002\n\u5f02\u6b65\u7b49\u5f85\u5f88\u4e0d\u9519\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u628a\u5b83\u6dfb\u52a0\u5230DART\u4e2d\u3002\u8fd9\u4f7f\u5f97\u7f16\u5199\u5f02\u6b65\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u4e4f\u5473\u3002\u4f60\u77e5\u9053\u201c\u4f46\u662f\u201d\u5c31\u8981\u6765\u4e86\u3002\u5b83\u662f\u3002\u4f46\u662f\u2026\u3002\u4f60\u4ecd\u7136\u628a\u4e16\u754c\u4e00\u5206\u4e3a\u4e8c\u3002\u8fd9\u4e9b\u5f02\u6b65\u51fd\u6570\u66f4\u5bb9\u6613\u7f16\u5199\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u662f\u5f02\u6b65\u51fd\u6570\u3002\n\u4f60\u8fd8\u6709\u4e24\u79cd\u989c\u8272\u3002\u5f02\u6b65\u7b49\u5f85\u89e3\u51b3\u4e86\u607c\u4eba\u7684\u7b2c4\u6761\u89c4\u5219\uff1a\u5b83\u4eec\u4f7fredfunction\u8c03\u7528\u8d77\u6765\u5e76\u4e0d\u6bd4\u8c03\u7528Blue\u51fd\u6570\u5dee\u591a\u5c11\u3002\u4f46\u662f\u6240\u6709\u5176\u4ed6\u7684\u89c4\u5219\u90fd\u8fd8\u5728\u90a3\u91cc\uff1a\n\u540c\u6b65\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u5f02\u6b65\u51fd\u6570\u8fd4\u56de\u503c\u5468\u56f4\u7684Task&lt\uff1bT&gt\uff1b(\u6216\u5728DART\u4e2d\u4e3aFuture&lt\uff1bT&gt\uff1b)\u5305\u88c5\u5668\u3002\n\u5982\u679c\u4f60\u8c03\u7528\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u5f53\u4f60\u771f\u6b63\u60f3\u8981T\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u5f97\u5230\u4e86\u8fd9\u4e2a\u5305\u88c5\u5668\u5bf9\u8c61\u3002\u4f60\u4e0d\u80fd\u89e3\u5f00\u5b83\uff0c\u9664\u975e\u4f60\u628a\u4f60\u7684\u51fd\u6570\u8bbe\u4e3a\u5f02\u6b65\u7684\u5e76\u7b49\u5f85\u5b83\u3002(\u4f46\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u5185\u5bb9\u3002)\u3002\nC#\u7684\u6838\u5fc3\u5e93\u5b9e\u9645\u4e0a\u6bd4\u5f02\u6b65\u66f4\u8001\uff0c\u6240\u4ee5\u6211\u731c\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\n\u8fd9\u6837\u597d\u591a\u4e86\u3002\u6211\u5c06\u5728\u4e00\u5468\u4e2d\u7684\u4efb\u4f55\u4e00\u5929\u91c7\u53d6\u5f02\u6b65\u7b49\u5f85\u7684\u65b9\u5f0f\u8fdb\u884c\u8d64\u88f8\u88f8\u7684\u56de\u8c03\u6216\u671f\u8d27\u4ea4\u6613\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u6240\u6709\u7684\u9ebb\u70e6\u90fd\u5728\u4e00\u8d77\uff0c\u90a3\u6211\u4eec\u5c31\u662f\u5728\u81ea\u6b3a\u6b3a\u4eba\u3002\u4e00\u65e6\u60a8\u5f00\u59cb\u5c1d\u8bd5\u7f16\u5199\u9ad8\u9636\u51fd\u6570\u6216\u91cd\u7528\u4ee3\u7801\uff0c\u60a8\u5c31\u4f1a\u9a6c\u4e0a\u610f\u8bc6\u5230\u989c\u8272\u4ecd\u7136\u5b58\u5728\uff0c\u60a8\u7684\u4ee3\u7801\u5e93\u4e2d\u5230\u5904\u90fd\u662f\u8840\u3002\n\u6240\u4ee5JS\u3001DART\u3001C#\u548cPython\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898\u3002CoffeeScript\u548c\u5927\u591a\u6570\u5176\u4ed6\u7f16\u8bd1\u4e3aJS\u7684\u8bed\u8a00\u4e5f\u662f\u5982\u6b64(\u8fd9\u5c31\u662fDart\u7ee7\u627f\u5b83\u7684\u539f\u56e0)\u3002\u6211\u8ba4\u4e3a\u5373\u4f7f\u662fClojureScript\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u5df2\u7ecf\u975e\u5e38\u52aa\u529b\u5730\u7528\u4ed6\u4eec\u7684core.async\u4e1c\u897f\u6765\u53cd\u5bf9\u5b83\u3002\n\u60f3\u77e5\u9053\u4e0d\u662f\u8fd9\u6837\u7684\u5417\uff1f\u722a\u54c7\u3002\u6211\u77e5\u9053\uff0c\u5bf9\u5427\uff1f\u60a8\u591a\u4e45\u4f1a\u8bf4\u4e00\u6b21\uff0c\u201c\u662f\u7684\uff0cJava\u624d\u662f\u771f\u6b63\u505a\u5bf9\u8fd9\u4ef6\u4e8b\u7684\u90a3\u4e2a\u3002\u201d\u4e0d\u8fc7\uff0c\u8fd9\u5c31\u5bf9\u4e86\u3002\u5728\u4ed6\u4eec\u7684\u8fa9\u62a4\u4e2d\uff0c\u4ed6\u4eec\u6b63\u79ef\u6781\u5c1d\u8bd5\u901a\u8fc7\u8f6c\u5411\u671f\u8d27\u548c\u5f02\u6b65IO\u6765\u7ea0\u6b63\u8fd9\u79cd\u758f\u5ffd\u3002\u8fd9\u5c31\u50cf\u662f\u4e00\u573a\u5411\u4e0b\u7684\u8d5b\u8dd1\u3002\nC#\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u6dfb\u52a0\u5f02\u6b65\u7b49\u5f85\u548c\u6240\u6709Task&lt\uff1bT&gt\uff1b\u5185\u5bb9\u4e4b\u524d\uff0c\u60a8\u53ea\u9700\u4f7f\u7528\u5e38\u89c4\u7684\u540c\u6b65API\u8c03\u7528\u3002\u8fd8\u6709\u4e09\u79cd\u8bed\u8a00\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff1aGo\u3001Lua\u548cRuby\u3002\n\u87ba\u7eb9\u3002\u6216\u8005\uff0c\u66f4\u51c6\u786e\u5730\u8bf4\uff1a\u591a\u4e2a\u72ec\u7acb\u7684\u8c03\u7528\u6808\uff0c\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u5207\u6362\u3002\u5b83\u4eec\u4e0d\u4e00\u5b9a\u8981\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002GO\u4e2d\u7684Goroutine\u3001Lua\u4e2d\u7684\u534f\u7a0b\u548cRuby\u4e2d\u7684Fibre\u5b8c\u5168\u591f\u7528\u3002\n(\u8fd9\u5c31\u662fC#\u6709\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u8b66\u544a\u7684\u539f\u56e0\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u7ebf\u7a0b\u6765\u907f\u514dC#\u4e2d\u5f02\u6b65\u7684\u75db\u82e6\u3002)\u3002\n\u6839\u672c\u7684\u95ee\u9898\u662f\u201c\u5f53\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u5982\u4f55\u4ece\u60a8\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u201d\uff1f\u60a8\u5df2\u7ecf\u6784\u5efa\u4e86\u4e00\u4e9b\u5927\u7684\u8c03\u7528\u5806\u6808\uff0c\u7136\u540e\u8c03\u7528\u4e86\u4e00\u4e9bIO\u64cd\u4f5c\u3002\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u8be5\u64cd\u4f5c\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u5f02\u6b65API\u3002\u4f60\u4e0d\u80fd\u7b49\u5f85\u5b83\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5b8c\u6210\u3002\u4f60\u5fc5\u987b\u4e00\u76f4\u8fd4\u56de\u5230\u4f60\u7684\u8bed\u8a00\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4e00\u4e9b\u65f6\u95f4\u6765\u65cb\u8f6c\uff0c\u7136\u540e\u624d\u80fd\u5b8c\u6210\u3002\n\u4e00\u65e6\u662f\u8fd9\u6837\uff0c\u4f60\u5c31\u9700\u8981\u6062\u590d\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u8bed\u8a00\u201c\u8bb0\u4f4f\u81ea\u5df1\u6240\u5728\u4f4d\u7f6e\u201d\u7684\u901a\u5e38\u65b9\u5f0f\u662f\u8c03\u7528\u5806\u6808\u3002\u5b83\u8ddf\u8e2a\u5f53\u524d\u6b63\u5728\u8c03\u7528\u7684\u6240\u6709\u51fd\u6570\u4ee5\u53ca\u6307\u4ee4\u6307\u9488\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u7684\u4f4d\u7f6e\u3002\n\u4f46\u662f\u8981\u6267\u884c\u5f02\u6b65IO\uff0c\u60a8\u5fc5\u987b\u5c55\u5f00\u4e22\u5f03\u6574\u4e2aC\u8c03\u7528\u5806\u6808\u3002\u6709\u70b9\u50cf\u7b2c22\u6761\u519b\u89c4\u3002\u4f60\u53ef\u4ee5\u505a\u8d85\u5feb\u7684IO\uff0c\u4f46\u4f60\u4e0d\u80fd\u5bf9\u7ed3\u679c\u505a\u4efb\u4f55\u4e8b\u60c5\uff01\u6bcf\u79cd\u5177\u6709\u5f02\u6b65IO\u7684\u8bed\u8a00-\u6216\u8005\u5728JS\u7684\u60c5\u51b5\u4e0b\uff0c\u6d4f\u89c8\u5668\u7684\u4e8b\u4ef6\u5faa\u73af-\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5e94\u5bf9\u8fd9\u4e00\u95ee\u9898\u3002\n\u8fd9\u4e9b\u51fd\u6570\u8868\u8fbe\u5f0f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7ed3\u675f\u4e8e\u5176\u5468\u56f4\u7684\u6240\u6709\u4e0a\u4e0b\u6587\u3002\u8fd9\u4f1a\u5c06\u51b0\u6fc0\u51cc\u548c\u7126\u7cd6\u7b49\u53c2\u6570\u4ece\u5806\u6808\u79fb\u5230\u5806\u4e2d\u3002\u5f53\u5916\u90e8\u51fd\u6570\u8fd4\u56de\u5e76\u4e14\u8c03\u7528\u5806\u6808\u5931\u6548\u65f6\uff0c\u5c31\u5f88\u9177\u4e86\u3002\u8be5\u6570\u636e\u4ecd\u7136\u5728\u5806\u4e2d\u6d6e\u52a8\u3002\n\u95ee\u9898\u662f\uff0c\u60a8\u5fc5\u987b\u624b\u52a8\u5b9e\u73b0\u8fd9\u4e9b\u6b65\u9aa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\uff0c\u8fd9\u4e2a\u8f6c\u6362\u5b9e\u9645\u4e0a\u6709\u4e00\u4e2a\u540d\u79f0\uff1a\u5ef6\u7eed\u4f20\u9012\u98ce\u683c(Continue-PassingStyle)\u3002\u5b83\u662f\u7531\u8bed\u8a00\u9ed1\u5ba2\u572870\u5e74\u4ee3\u53d1\u660e\u7684\uff0c\u4f5c\u4e3a\u4e00\u79cd\u4e2d\u95f4\u8868\u793a\uff0c\u7528\u5728\u4ed6\u4eec\u7684\u7f16\u8bd1\u5668\u7684\u5185\u90e8\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u5947\u7279\u7684\u4ee3\u7801\u8868\u793a\u65b9\u5f0f\uff0c\u6070\u597d\u53ef\u4ee5\u4f7f\u4e00\u4e9b\u7f16\u8bd1\u5668\u4f18\u5316\u66f4\u5bb9\u6613\u5b8c\u6210\u3002\n\u4ece\u6765\u6ca1\u6709\u4eba\u60f3\u8fc7\u7a0b\u5e8f\u5458\u4f1a\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\u3002\u7136\u540e\uff0cNode\u51fa\u73b0\u4e86\uff0c\u7a81\u7136\u4e4b\u95f4\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5047\u88c5\u6210\u7f16\u8bd1\u5668\u540e\u7aef\u3002\u6211\u4eec\u54ea\u91cc\u51fa\u9519\u4e86\uff1f\n\u8bf7\u6ce8\u610f\uff0c\u627f\u8bfa\u548c\u671f\u8d27\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u4f1a\u7ed9\u4f60\u4e70\u5230\u4efb\u4f55\u4e1c\u897f\u3002\u5982\u679c\u60a8\u4f7f\u7528\u8fc7\u5b83\u4eec\uff0c\u60a8\u5c31\u77e5\u9053\u60a8\u4ecd\u7136\u5728\u624b\u5de5\u521b\u5efa\u5927\u91cf\u7684\u51fd\u6570\u6587\u5b57\u3002\u60a8\u53ea\u9700\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9.Then()\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u7ed9\u5f02\u6b65\u51fd\u6570\u672c\u8eab\u3002\n\u5f02\u6b65\u7b49\u5f85\u786e\u5b9e\u6709\u5e2e\u52a9\u3002\u5982\u679c\u60a8\u6253\u5f00\u7f16\u8bd1\u5668\u7684\u5934\u9885\uff0c\u770b\u770b\u5f53\u5b83\u9047\u5230\u7b49\u5f85\u8c03\u7528\u65f6\u5b83\u5728\u505a\u4ec0\u4e48\uff0c\u60a8\u4f1a\u770b\u5230\u5b83\u5b9e\u9645\u4e0a\u6b63\u5728\u8fdb\u884cCPS\u8f6c\u6362\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u9700\u8981\u5728C#\u4e2d\u4f7f\u7528aWait\uff1a\u8fd9\u662f\u7f16\u8bd1\u5668\u8bf4\u201c\u5728\u8fd9\u91cc\u5c06\u51fd\u6570\u62c6\u6210\u4e24\u534a\u201d\u7684\u63d0\u793a\u3002\u7b49\u5f85\u4e4b\u540e\u7684\u4e00\u5207\u90fd\u88ab\u63d0\u5347\u5230\u4e00\u4e2a\u65b0\u51fd\u6570\u4e2d\uff0c\u5b83\u4ee3\u8868\u60a8\u5408\u6210\u8be5\u51fd\u6570\u3002\n\u8fd9\u5c31\u662f\u5f02\u6b65\u7b49\u5f85\u5728.NETframework\u4e2d\u4e0d\u9700\u8981\u4efb\u4f55\u8fd0\u884c\u65f6\u652f\u6301\u7684\u539f\u56e0\u3002\u7f16\u8bd1\u5668\u5c06\u5176\u7f16\u8bd1\u6210\u4e00\u7cfb\u5217\u5b83\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406\u7684\u94fe\u5f0f\u95ed\u5305\u3002(\u6709\u8da3\u7684\u662f\uff0c\u95ed\u5305\u672c\u8eab\u4e5f\u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u652f\u6301\u3002\u5b83\u4eec\u88ab\u7f16\u8bd1\u6210\u533f\u540d\u7c7b\u3002\u5728C#\u4e2d\uff0c\u95ed\u5305\u786e\u5b9e\u662f\u7a77\u4eba\u7684\u5bf9\u8c61\u3002)\u3002\n\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u6211\u4ec0\u4e48\u65f6\u5019\u5e26\u53d1\u7535\u673a\u6765\u3002\u4f60\u7684\u8bed\u8a00\u6709\u6ca1\u6709Year\u5173\u952e\u5b57\uff1f\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u975e\u5e38\u76f8\u4f3c\u7684\u4e8b\u60c5\u3002\n(\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u751f\u6210\u5668\u548c\u5f02\u6b65\u7b49\u5f85\u662f\u540c\u6784\u7684\u3002(\u6211\u5728\u786c\u76d8\u7684\u67d0\u4e2a\u9ed1\u6697\u89d2\u843d\u91cc\u6f02\u6d6e\u7740\u4e00\u5c0f\u6bb5\u4ee3\u7801\uff0c\u5b83\u53ea\u4f7f\u7528\u5f02\u6b65\u7b49\u5f85\u5c31\u5b9e\u73b0\u4e86\u751f\u6210\u5668\u98ce\u683c\u7684\u6e38\u620f\u5faa\u73af\u3002)\u3002\n\u6211\u521a\u624d\u8bf4\u5230\u54ea\u91cc\uff1f\u54e6\uff0c\u5bf9\u4e86\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u56de\u8c03\u3001\u627f\u8bfa\u3001\u5f02\u6b65\u7b49\u5f85\u548c\u751f\u6210\u5668\uff0c\u60a8\u6700\u7ec8\u4f1a\u83b7\u5f97\u5f02\u6b65\u51fd\u6570\u5e76\u5c06\u5176\u6d82\u62b9\u5230\u5806\u4e2d\u7684\u4e00\u5806\u95ed\u5305\u4e2d\u3002\n\u60a8\u7684\u51fd\u6570\u5c06\u6700\u5916\u5c42\u7684\u51fd\u6570\u4f20\u9012\u5230\u8fd0\u884c\u5e93\u3002\u5f53\u4e8b\u4ef6\u5faa\u73afOrio\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u5b83\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u4ece\u60a8\u79bb\u5f00\u7684\u5730\u65b9\u7ee7\u7eed\u3002\u4f46\u8fd9\u610f\u5473\u7740\u4f60\u4e0a\u9762\u7684\u4e00\u5207\u4e5f\u5fc5\u987b\u5f52\u8fd8\u3002\u4f60\u8fd8\u5f97\u628a\u6574\u53e0\u4e1c\u897f\u89e3\u5f00\u3002\n\u8fd9\u5c31\u662f\u201cRED\u51fd\u6570\u53ea\u80fd\u7531RED\u51fd\u6570\u8c03\u7528\u201d\u89c4\u5219\u7684\u6765\u6e90\u3002\u60a8\u5fc5\u987b\u5173\u95ed\u6574\u4e2a\u8c03\u7528\u5806\u6808\uff0c\u76f4\u5230\u8fd4\u56demain()\u6216\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\n\u4f46\u5982\u679c\u60a8\u6709\u7ebf\u7a0b(\u7eff\u8272\u6216\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b)\uff0c\u5219\u4e0d\u9700\u8981\u8fd9\u6837\u505a\u3002\u60a8\u53ea\u9700\u6302\u8d77\u6574\u4e2a\u7ebf\u7a0b\u5e76\u76f4\u63a5\u8df3\u56de\u64cd\u4f5c\u7cfb\u7edf\u6216eventloop\uff0c\u800c\u4e0d\u5fc5\u4ece\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u8fd4\u56de\u3002\n\u5728\u6211\u770b\u6765\uff0c\u56f4\u68cb\u662f\u505a\u8fd9\u4ef6\u4e8b\u6700\u6f02\u4eae\u7684\u8bed\u8a00\u3002\u4e00\u65e6\u60a8\u6267\u884c\u4efb\u4f55IO\u64cd\u4f5c\uff0c\u5b83\u5c31\u4f1a\u9a7b\u7559\u8be5Goroutine\uff0c\u5e76\u6062\u590dIO\u4e0a\u672a\u963b\u585e\u7684\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u3002\n\u5982\u679c\u60a8\u67e5\u770b\u6807\u51c6\u5e93\u4e2d\u7684IO\u64cd\u4f5c\uff0c\u60a8\u4f1a\u53d1\u73b0\u5b83\u4eec\u4f3c\u4e4e\u662f\u540c\u6b65\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ed6\u4eec\u53ea\u662f\u505a\u5de5\u4f5c\uff0c\u7136\u540e\u5728\u505a\u5b8c\u540e\u8fd4\u56de\u7ed3\u679c\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4eec\u5728JavaScript\u4e2d\u662f\u540c\u6b65\u7684\u3002\u5176\u4ed6GO\u4ee3\u7801\u53ef\u4ee5\u5728\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u6302\u8d77\u65f6\u8fd0\u884c\u3002\u8fd9\u662f\u56e0\u4e3aGO\u6d88\u9664\u4e86\u540c\u6b65\u548c\u5f02\u6b65\u4ee3\u7801\u4e4b\u95f4\u7684\u533a\u522b\u3002\nGo\u4e2d\u7684\u5e76\u53d1\u6027\u662f\u60a8\u9009\u62e9\u5982\u4f55\u5bf9\u7a0b\u5e8f\u5efa\u6a21\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u800c\u4e0d\u662f\u6807\u51c6\u5e93\u4e2d\u6bcf\u4e2a\u51fd\u6570\u7684\u989c\u8272\u3002\u8fd9\u610f\u5473\u7740\u6211\u4e0a\u9762\u63d0\u5230\u7684\u4e94\u6761\u89c4\u5219\u7684\u6240\u6709\u75db\u82e6\u90fd\u88ab\u5b8c\u5168\u548c\u5f7b\u5e95\u5730\u6d88\u9664\u4e86\u3002\n\u6240\u4ee5\uff0c\u4e0b\u6b21\u4f60\u5f00\u59cb\u544a\u8bc9\u6211\u4e00\u4e9b\u65b0\u7684\u70ed\u95e8\u8bed\u8a00\uff0c\u5b83\u7684\u5e76\u53d1\u6545\u4e8b\u662f\u591a\u4e48\u68d2\uff0c\u662f\u56e0\u4e3a\u5b83\u6709\u5f02\u6b65API\uff0c\u73b0\u5728\u4f60\u5c31\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u5f00\u59cb\u54ac\u7259\u5207\u9f7f\u4e86\u3002\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4f60\u53c8\u56de\u5230\u4e86\u7ea2\u8272\u548c\u84dd\u8272\u3002", "note_en": "I don\u2019t know about you, but nothing gets me going in the morning quite like agood old fashioned programming language rant. It stirs the blood to see someoneskewer one of those  \u201cblub\u201d languages the plebians use, muddling throughtheir day with it between furtive visits to StackOverflow.\n (Meanwhile, you and I, only use the most enlightened of languages. Chisel-sharptools designed for the manicured hands of expert craftspersons such asourselves.)\n Of course, as the  author of said screed, I run a risk. The language I mockcould be one you like! Without realizing it, I could have let the rabble intomy blog, pitchforks and torches at the ready, and my fool-hardy pamphlet coulddraw their ire!\n To protect myself from the heat of those flames, and to avoid offending yourpossibly delicate sensibilities, instead, I\u2019ll rant about a language I justmade up. A strawman whose sole purpose is to be set aflame.\n I know, this seems pointless right? Trust me, by the end, we\u2019ll see whose face(or faces!) have been painted on his straw noggin.\n  Learning an entire new (crappy) language just for a blog post is a tall order,so let\u2019s say it\u2019s mostly similar to one you and I already know. We\u2019ll say ithas syntax sorta like JS. Curly braces and semicolons.  if,  while, etc. The lingua franca of the programming grotto.\n I\u2019m picking JS  not because that\u2019s what this post is about. It\u2019s just thatit\u2019s the language you, statistical representation of the average reader, aremost likely to be able grok. Voil\u00e0:\n  Because our strawman is a  modern (shitty) language, we also have first-classfunctions. So you can make something like like:\n // Return a list containing all of the elements in collection // that match predicate. function  filter ( collection ,  predicate )  {  var  result  =  [];  for  ( var  i  =  0 ;  i  &lt;  collection . length ;  i ++ )  {  if  ( predicate ( collection [ i ]))  result . push ( collection [ i ]);  }  return  result ; }\n This is one of those  higher-order functions, and, like the name implies, theyare classy as all get out and super useful. You\u2019re probably used to them formucking around with collections, but once you internalize the concept, youstart using them damn near everywhere.\n     So you go to town and write all sorts of awesome reusable libraries andapplications passing around functions, calling functions, returning functions.Functapalooza.\n  Except wait. Here\u2019s where our language gets screwy. It has this one peculiarfeature:\n  Each function\u2014anonymous callback or regular named one\u2014is either redor blue. Since my blog\u2019s code highlighter can\u2019t handle actual color, we\u2019ll saythe syntax is like:\n blue \u2022 function  doSomethingAzure ()  {  // This is a blue function... } red \u2022 function  doSomethingCarnelian ()  {  // This is a red function... }\n There are  no colorless functions in the language. Want to make a function?Gotta pick a color. Them\u2019s the rules. And, actually, there are a couple morerules you have to follow too:\n  Imagine a \u201cblue call\u201d syntax and a \u201cred call\u201d syntax. Something like:\n  When calling a function, you need to use the call that corresponds to its color.If you get it wrong\u2014call a red function with  \u2022blue after the parenthesesor vice versa\u2014it does something bad. Dredge up some long-forgottennightmare from your childhood like a clown with snakes for arms hiding underyour bed. That jumps out of your monitor and sucks out your vitreous humour.\n     But you can\u2019t go the other way. If you try to do this:\n   This makes writing higher-order functions like our  filter() example trickier.We have to pick a color for  it and that affects the colors of the functionswe\u2019re allowed to pass to it. The obvious solution is to make  filter() red.That way, it can take either red or blue functions and call them. But then werun into the next itchy spot in the hairshirt that is this language:\n  For now, I won\u2019t precisely define \u201cpainful\u201d, but just imagine that theprogrammer has to jump through some kind of annoying hoops every time they calla red function. Maybe it\u2019s really verbose, or maybe you can\u2019t do it insidecertain kinds of statements. Maybe you can only call them on line numbers thatare prime.\n What matters is that, if you decide to make a function red, everyone using yourAPI will want to spit in your coffee and/or deposit some even less savoryfluids in it.\n The obvious solution then is to  never use red functions. Just make everythingblue and you\u2019re back to the sane world where all functions have the same color,which is equivalent to them all having no color, which is equivalent to ourlanguage not being entirely stupid.\n Alas, the sadistic language designers\u2014and we all know all programminglanguage designers are sadists, don\u2019t we?\u2014jabbed one final thorn in ourside:\n  There are some functions built in to the platform, functions that we  need touse, that we are unable to write ourselves, that only come in red. At thispoint, a reasonable person might think the language hates us.\n  You might be thinking that the problem here is we\u2019re trying to use higher-orderfunctions. If we just stop flouncing around in all of that functional fripperyand write normal blue collar first-order functions like God intended, we\u2019dspare ourselves all the heartache.\n If we only call blue functions, make our function blue. Otherwise, make it red.As long as we never make functions that accept functions, we don\u2019t have toworry about trying to be \u201cpolymorphic over function color\u201d (polychromatic?) orany nonsense like that.\n But, alas, higher order functions are just one example. This problem ispervasive any time we want to break our program down into separate functionsthat get reused.\n For example, let\u2019s say we have a nice little blob of code that, I don\u2019t know,implements Dijkstra\u2019s algorithm over a graph representing how much your socialnetwork are crushing on each other. (I spent way too long trying to decide whatsuch a result would even represent. Transitive undesirability?)\n Later, you end up needing to use this same blob of code somewhere else. You dothe natural thing and hoist it out into a separate function. You call it fromthe old place and your new code that uses it. But what color should it be?Obviously, you\u2019ll make it blue if you can, but what if it uses one of thosenasty red-only core library functions?\n What if the new place you want to call it is blue? You\u2019ll have to turn it red.Then you\u2019ll have to turn the function that calls  it red. Ugh. No matter what,you\u2019ll have to think about color constantly. It will be the sand in yourswimsuit on the beach vacation of development.\n  Of course, I\u2019m not really talking about color here, am I? It\u2019s an allegory, aliterary trick. The Sneetches isn\u2019t about stars on bellies, it\u2019s about race. Bynow, you may have an inkling of what color actually represents. If not, here\u2019sthe big reveal:\n  If you\u2019re programming in JavaScript on Node.js, everytime you define a functionthat \u201creturns\u201d a value by invoking a callback, you just made a red function.Look back at that list of rules and see how my metaphor stacks up:\n Synchronous functions give their result as a return value, async functionsgive it by invoking a callback you pass to it.\n You can\u2019t call an async function from a synchronous one because you won\u2019t beable to determine the result until the async one completes later.\n Async functions don\u2019t compose in expressions because of the callbacks, havedifferent error-handling, and can\u2019t be used with  try/catch or inside a lotof other control flow statements.\n Node\u2019s whole shtick is that the core libs are all asynchronous. (Though theydid dial that back and start adding  ___Sync() versions of a lot ofthings.)\n When people talk about \u201ccallback hell\u201d they\u2019re talking about how annoying it isto have red functions in their language. When they create  4089 libraries fordoing asynchronous programming, they\u2019re trying to cope at the librarylevel with a problem that the language foisted onto them.\n  People in the Node community have realized that callbacks are a pain for a longtime, and have looked around for solutions. One technique that gets a bunch ofpeople excited is   promises, which you may also know by theirrapper name \u201cfutures\u201d.\n These are sort of a jacked up wrapper around a callback and an error handler.If you think of passing a callback and errorback to a function as a  concept,a promise is basically a  reification of that idea. It\u2019s a first-class objectthat represents an asynchronous operation.\n I just jammed a bunch of fancy PL language in that paragraph so it probablysounds like a sweet deal, but it\u2019s basically snake oil. Promises  do makeasync code a little easier to write. They compose a bit better, so rule #4isn\u2019t  quite so onerous.\n But, honestly, it\u2019s like the difference between being punched in the gut versuspunched in the privates. Less painful, yes, but I don\u2019t think anyone shouldreally get thrilled about the value proposition.\n You still can\u2019t use them with exception handling or other control flowstatements. You still can\u2019t call a function that returns a future fromsynchronous code. (Well, you  can, but if you do, the person who latermaintains your code will invent a time machine, travel back in time to themoment that you did this and stab you in the face with a #2 pencil.)\n You\u2019ve still divided your entire world into asynchronous and synchronous halvesand all of the misery that entails. So, even if your language features promisesor futures, its face looks an awful lot like the one on my strawman.\n (Yes, that means even  Dart, the language I work on. That\u2019s why I\u2019m soexcited some of the team are  experimenting with other concurrencymodels.)\n  C# programmers are probably feeling pretty smug right now (a condition they\u2019veincreasingly fallen prey to as Hejlsberg and company have piled sweet featureafter sweet feature into the language). In C#, you can use  the  awaitkeyword to invoke anasynchronous function.\n This lets you make asynchronous calls just as easily as you can synchronousones, with the tiny addition of a cute little keyword. You can nest  awaitcalls in expressions, use them in exception handling code, stuff them insidecontrol flow. Go nuts. Make it rain  await calls like a they\u2019re dollars in theadvance you got for your new rap album.\n Async-await  is nice, which is why we\u2019re adding it to Dart. It makes it a loteasier to  write asynchronous code. You know a \u201cbut\u201d is coming. It is. But\u2026 you still have divided the world in two. Those async functions areeasier to write, but  they\u2019re still async functions.\n You\u2019ve still got two colors. Async-await solves annoying rule #4: they make redfunctions not much worse to call than blue ones. But all of the other rules arestill there:\n Synchronous functions return values, async ones return  Task&lt;T&gt; (or Future&lt;T&gt; in Dart) wrappers around the value.\n  If you call an async function you\u2019ve got this wrapper object when youactually want the  T. You can\u2019t unwrap it unless you make  your functionasync and await it. (But see below.)\n  C#\u2018s core library is actually older than async so I guess they never hadthis problem.\n It  is better. I will take async-await over bare callbacks or futures any dayof the week. But we\u2019re lying to ourselves if we think all of our troubles aregone. As soon as you start trying to write higher-order functions, or reusecode, you\u2019re right back to realizing color is still there, bleeding all overyour codebase.\n  So JS, Dart, C#, and Python have this problem. CoffeeScript and most otherlanguages that compile to JS do too (which is why Dart inherited it). I  thinkeven ClojureScript has this issue even though they\u2019ve tried really hard to pushagainst it with their  core.async stuff.\n Wanna know one that doesn\u2019t?  Java. I know right? How often do you get to say,\u201cYeah, Java is the one that really does this right.\u201d? But there you go. Intheir defense, they are actively trying to correct this oversight by moving tofutures and async IO. It\u2019s like a race to the bottom.\n C# also actually  can avoid this problem too. They opted  in to having color.Before they added async-await and all of the  Task&lt;T&gt; stuff, you just usedregular sync API calls. Three more languages that don\u2019t have this problem: Go,Lua, and Ruby.\n  Threads. Or, more precisely:  multiple independent callstacks that  can beswitched between. It isn\u2019t strictly necessary for them to be operatingsystem threads. Goroutines in Go, coroutines in Lua, and fibers in Ruby areperfectly adequate.\n (That\u2019s why C# has that little caveat. You can avoid the pain of async in C# byusing threads.)\n  The fundamental problem is \u201cHow do you pick up where you left off when anoperation completes\u201d? You\u2019ve built up some big callstack and then you call someIO operation. For performance, that operation uses the operating system\u2019sunderlying asynchronous API. You  cannot wait for it to complete because itwon\u2019t. You have to return all the way back to your language\u2019s event loop andgive the OS some time to spin before it will be done.\n Once it is, you need to resume what you were doing. The usual way a language\u201cremembers where it is\u201d is the  callstack. That tracks all of the functionsthat are currently being invoked and where the instruction pointer is in eachone.\n But to do async IO, you have to unwind discard the entire C callstack. Kind ofa Catch-22. You can do super fast IO, you just can\u2019t do anything with theresult! Every language that has async IO in its bowels\u2014or in the case ofJS, the browser\u2019s event loop\u2014copes with this in some way.\n   Each of those function expressions  closes over all of its surroundingcontext. That moves parameters like  iceCream and  caramel off the callstackand onto the heap. When the outer function returns and the callstack istrashed, it\u2019s cool. That data is still floating around the heap.\n The problem is you have to  manually reify every damn one of these steps.There\u2019s actually a name for this transformation:   continuation-passingstyle. It was invented by language hackers in the 70s as an intermediaterepresentation to use in the guts of their compilers. It\u2019s a really bizarro wayto represent code that happens to make some compiler optimizations easier todo.\n No one ever for a second thought that a programmer would  write actual codelike that. And then Node came along and all of the sudden here we arepretending to be compiler back-ends. Where did we go wrong?\n Note that promises and futures don\u2019t actually buy you anything, either. Ifyou\u2019ve used them, you know you\u2019re still hand-creating giant piles of functionliterals. You\u2019re just passing them to  .then() instead of to the asynchronousfunction itself.\n  Async-await  does help. If you peel back your compiler\u2019s skull and see whatit\u2019s doing when it hits an  await call you\u2019d see it actually doing theCPS-transform. That\u2019s  why you need to use  await in C#: it\u2019s a clue to thecompiler to say, \u201cbreak the function in half here\u201d. Everything after the await gets hoisted into a new function that it synthesizes on your behalf.\n This is why async-await didn\u2019t need any  runtime support in the .NETframework. The compiler compiles it away to a series of chained closures thatit can already handle. (Interestingly, closures themselves also don\u2019t needruntime support.  They get compiled to anonymous classes. In C#, closuresreally  are a  poor man\u2019s objects.)\n You might be wondering when I\u2019m going to bring up generators. Does yourlanguage have a  yield keyword? Then it can do something very similar.\n (In fact, I  believe generators and async-await are isomorphic. I\u2019ve got a bitof code floating around in some dark corner of my hard disc that implements agenerator-style game loop using only async-await.)\n Where was I? Oh, right. So with callbacks, promises, async-await, andgenerators, you ultimately end up taking your asynchronous function andsmearing it out into a bunch of closures that live over in the heap.\n Your function passes the outermost one into the runtime. When the event loop orIO operation is done, it invokes that function and you pick up where you leftoff. But that means everything above you  also has to return. You still haveto unwind the  whole stack.\n This is where the \u201cred functions can only be called by red functions\u201d rulecomes from. You have to closurify the entire callstack all the way back to main() or the event handler.\n  But if you have threads (green- or OS-level), you don\u2019t need to do that. Youcan just suspend the entire thread and hop straight back to the OS or eventloop  without having to return from all of those functions.\n Go is the language that does this most beautifully in my opinion. As soon asyou do any IO operation, it just parks that goroutine and resumes any otherones that aren\u2019t blocked on IO.\n If you look at the IO operations in the standard library, they seemsynchronous. In other words, they just do work and then return a result whenthey are done. But it\u2019s not that they\u2019re synchronous in the sense that it wouldmean in JavaScript. Other Go code can run while one of these operations ispending. It\u2019s that Go has  eliminated the distinction between synchronous andasynchronous code.\n Concurrency in Go is a facet of how  you choose to model your program, and nota color seared into each function in the standard library. This means all ofthe pain of the five rules I mentioned above is completely and totallyeliminated.\n So, the next time you start telling me about some new hot language and howawesome its concurrency story is because it has asynchronous APIs, now you\u2019llknow why I start grinding my teeth. Because it means you\u2019re right back to redfunctions and blue ones.", "posttime": "2020-05-19 13:05:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u529f\u80fd,color,\u51fd\u6570", "title": "\u4f60\u7684\u529f\u80fd\u662f\u4ec0\u4e48\u989c\u8272\u7684\uff1f", "title_en": "What Color Is Your Function?", "transed": 1, "url": "http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function//", "via": "", "real_tags": ["\u529f\u80fd", "color", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "678413d2b6922bf359a1865921814f7c.jpg", "infoid": 1002739, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80af\u5854\u57fa\u5dde\u8def\u6613\u65af\u7ef4\u5c14\u3002-\u7f8e\u56fd\u53c2\u8bae\u5458\u5170\u5fb7\u00b7\u4fdd\u7f57(Rand Paul)\u5c31\u524d\u8def\u6613\u65af\u7ef4\u5c14EMT\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2(Breonna Taylor)\u88ab\u8b66\u65b9\u67aa\u6740\u4e00\u4e8b\u53d1\u8868\u4e86\u6709\u4e89\u8bae\u7684\u8a00\u8bba\uff0c\u6cf0\u52d2\u5728\u4e00\u6b21\u4e0d\u6572\u95e8\u641c\u67e5\u4ee4\u4e2d\u88ab\u8b66\u65b9\u51fb\u6bd9\uff0c\u4e13\u5bb6\u5bf9\u6b64\u63d0\u51fa\u4e86\u4e25\u5389\u6279\u8bc4\u3002\n\u5728\u7ed9\u201c\u4fe1\u4f7f\u65e5\u62a5\u201d\u7684\u4e00\u4efd\u72ec\u5bb6\u58f0\u660e\u4e2d\uff0c\u8fd9\u4f4d\u5171\u548c\u515a\u8bae\u5458\u5bf9\u8def\u6613\u65af\u7ef4\u5c14\u5730\u94c1\u8b66\u5bdf\u5c403\u670813\u65e5\u641c\u67e5\u6cf0\u52d2\u7684\u516c\u5bd3\u8868\u793a\u62c5\u5fe7\uff0c\u8fd9\u5f15\u53d1\u4e86\u5168\u56fd\u7684\u5f3a\u70c8\u6297\u8bae\u3002\n\u6cd5\u5ead\u8bb0\u5f55\u663e\u793a\uff0c\u8b66\u65b9\u5728\u51cc\u66681\u70b9\u5de6\u53f3\u4f7f\u7528\u649e\u51fb\u9524\u8fdb\u5165\u6cf0\u52d2\u7684\u516c\u5bd3\u4e4b\u524d\uff0c\u83b7\u5f97\u4e86\u7981\u6b62\u6572\u95e8\u4ee4\u3002\u4f5c\u4e3a\u6bd2\u54c1\u8c03\u67e5\u7684\u4e00\u90e8\u5206\u3002\n\u4f46\u902e\u6355\u4ee4\u663e\u793a\uff0c\u6cf0\u52d2\u4e0d\u662f\u8c03\u67e5\u7684\u4e3b\u8981\u5bf9\u8c61\uff0c\u5728\u5979\u88ab\u8b66\u65b9\u5f00\u67aa\u6253\u4e868\u67aa\u540e\uff0c\u5728\u5979\u7684\u516c\u5bd3\u91cc\u6ca1\u6709\u53d1\u73b0\u6bd2\u54c1\u3002\n\u4fdd\u7f57\u8bf4\uff0c\u4efb\u4f55\u4eba\u90fd\u4e0d\u5e94\u8be5\u5728\u6ca1\u6709\u53d7\u5bb3\u8005\u7684\u60c5\u51b5\u4e0b\u4e3a\u8ffd\u6355\u72af\u7f6a\u800c\u727a\u7272\u81ea\u5df1\u7684\u751f\u547d\uff0c\u800c\u4e14\u5e94\u8be5\u7981\u6b62\u902e\u6355\u4ee4\u3002\u5e0c\u671b\u8c03\u67e5\u80fd\u4f38\u5f20\u6b63\u4e49\u3002\n\u80af\u5854\u57fa\u5dde\u5171\u548c\u515a\u53c2\u8bae\u5458\u5170\u5fb7\u00b7\u4fdd\u7f57(Rand Paul)\u5728\u53c2\u8bae\u9662\u536b\u751f\u3001\u6559\u80b2\u3001\u52b3\u5de5\u548c\u517b\u8001\u91d1\u59d4\u5458\u4f1a(Senate Committee for Health\uff0cEducation\uff0cLabor\uff0cand Pensions)\u7684\u865a\u62df\u542c\u8bc1\u4f1a\u4e0a\u53d1\u8868\u8bb2\u8bdd\uff0c2020\u5e745\u670812\u65e5\uff0c\u661f\u671f\u4e8c\uff0c\u534e\u76db\u987f\u56fd\u4f1a\u5c71\u3002(Win McNamee/Pool Via AP)(\u56fe\u7247\u6765\u6e90\uff1aWin McNamee\uff0c\u7f8e\u8054\u793e)\u3002\n\u4fdd\u7f57\u53d1\u8868\u6b64\u756a\u8a00\u8bba\u4e4b\u9645\uff0c\u5f53\u5730\u9886\u5bfc\u4eba\u6b63\u52aa\u529b\u6539\u53d8\u8b66\u65b9\u653f\u7b56\uff0c\u5728\u6cf0\u52d2\u81f4\u547d\u67aa\u51fb\u6848\u53d1\u751f\u540e\uff0c\u8b66\u65b9\u53d1\u51fa\u4e86\u7981\u6b62\u6572\u95e8\u7684\u902e\u6355\u4ee4\u3002\n\u6c11\u4e3b\u515a\u5e02\u957f\u683c\u96f7\u683c\u00b7\u8d39\u820d\u5c14(Greg Fischer)\u5468\u4e00\u5ba3\u5e03\uff0c\u6240\u6709\u4e0d\u6572\u95e8\u641c\u67e5\u4ee4\u73b0\u5728\u90fd\u9700\u8981\u5f97\u5230\u8b66\u5bdf\u5c40\u957f\u6216\u6307\u5b9a\u4eba\u5458\u7684\u6279\u51c6\uff0c\u7136\u540e\u624d\u80fd\u63d0\u4ea4\u7ed9\u6cd5\u5b98\u3002\u4ed6\u8bf4\uff0c\u8fd9\u6837\u505a\u5c06\u63d0\u4f9b\u53e6\u4e00\u4e2a\u6c34\u5e73\u7684\u5ba1\u67e5\u3002\n\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u66fe\u8868\u793a\uff0c\u5f53\u6cd5\u5b98\u5408\u7406\u6000\u7591\u5728\u6848\u4ef6\u7684\u201c\u7279\u6b8a\u60c5\u51b5\u201d\u4e0b\uff0c\u76ee\u6807\u53ef\u80fd\u4f1a\u9500\u6bc1\u8bc1\u636e\u65f6\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5141\u8bb8\u8b66\u5bdf\u5728\u4e0d\u6572\u95e8\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u641c\u67e5\u3002\n\u7136\u800c\uff0c\u6cd5\u5f8b\u4e13\u5bb6\u6279\u8bc4\u4e86\u6cf0\u52d2\u7684\u902e\u6355\u4ee4\u4e2d\u542b\u7cca\u7684\u63aa\u8f9e\uff0c\u56e0\u4e3a\u5979\u7684\u516c\u5bd3\u6ca1\u6709\u6444\u50cf\u5934\u3002\n\u5217\u514b\u661f\u6566\u5f8b\u5e08\u9a6c\u514b\u00b7\u6c83\u5170\u5fb7(Mark Wohlander)\u662f\u4e00\u540d\u524d\u8054\u90a6\u8c03\u67e5\u5c40\u7279\u5de5\u548c\u8054\u90a6\u68c0\u5bdf\u5b98\uff0c\u4ed6\u672c\u5468\u672b\u544a\u8bc9\u201c\u4fe1\u4f7f\u65e5\u62a5\u201d\uff1a\u201c\u6211\u4e0d\u77e5\u9053\u8fd9\u662f\u600e\u4e48\u6e05\u7406\u4e3b\u7ba1\u529e\u516c\u684c\u7684\u3002\u201d\n\u963f\u80af\u8272\u5927\u5b66(University Of Arkansas)\u6cd5\u5b66\u6559\u6388\u5e03\u83b1\u6069\u00b7\u52a0\u91cc\u5c3c(Brian Gallini)\u66fe\u64b0\u5199\u8fc7\u5173\u4e8e\u7b2c\u56db\u4fee\u6b63\u6848\u7684\u6587\u7ae0\uff0c\u4ed6\u8868\u793a\uff0c\u5982\u679c\u7a81\u51fb\u641c\u67e5\u6cf0\u52d2\u7684\u516c\u5bd3\u5408\u9002\u7684\u8bdd\uff0c\u90a3\u4e48\u6bcf\u4e00\u7b14\u4f8b\u884c\u7684\u6bd2\u54c1\u4ea4\u6613\u90fd\u4f1a\u8bc1\u660e\u4e0d\u6572\u95e8\u7684\u7406\u7531\u662f\u6b63\u5f53\u7684\u3002\n\u4fdd\u7f57\u662f\u4e00\u4f4d\u503e\u5411\u81ea\u7531\u610f\u5fd7\u4e3b\u4e49\u7684\u8bae\u5458\uff0c\u4ed6\u662f\u56fd\u4f1a\u7b2c\u56db\u4fee\u6b63\u6848\u6743\u5229\u6700\u6fc0\u70c8\u7684\u634d\u536b\u8005\u4e4b\u4e00\u3002\u4ed6\u4e4b\u524d\u8868\u8fbe\u4e86\u5bf9\u5f53\u5730\u6267\u6cd5\u90e8\u95e8\u53d8\u5f97\u8fc7\u4e8e\u519b\u4e8b\u5316\u7684\u62c5\u5fe7\u3002\n\u4fdd\u7f57\u57282014\u5e74\u4e3a\u201c\u65f6\u4ee3\u201d\u6742\u5fd7\u64b0\u5199\u7684\u4e00\u7bc7\u4e13\u680f\u6587\u7ae0\u4e2d\u8bf4\uff0c\u4eca\u5929\u7684\u6267\u6cd5\u5b58\u5728\u7cfb\u7edf\u6027\u95ee\u9898\u3002\n\u8fd9\u4f4d\u53c2\u8bae\u5458\u662f\u5728\u5bc6\u82cf\u91cc\u5dde\u5f17\u683c\u68ee\u8b66\u5bdf\u67aa\u674018\u5c81\u7684\u8fc8\u514b\u5c14\u00b7\u5e03\u6717\u540e\u53d1\u8868\u6297\u8bae\u548c\u9a9a\u4e71\u8bb2\u8bdd\u7684\u3002\u5f53\u65f6\u4fdd\u7f57\u8bf4\uff0c\u5927\u653f\u5e9c\u662f\u95ee\u9898\u7684\u6838\u5fc3\u3002\n\u4fdd\u7f57\u57282014\u5e74\u7684\u793e\u8bba\u4e2d\u8bf4\uff0c\u534e\u76db\u987f\u901a\u8fc7\u4f7f\u7528\u8054\u90a6\u8d44\u91d1\u5e2e\u52a9\u5e02\u653f\u5e9c\u5efa\u8bbe\u672c\u8d28\u4e0a\u662f\u5c0f\u578b\u519b\u961f\u7684\u65b9\u5f0f\uff0c\u9f13\u52b1\u4e86\u5f53\u5730\u8b66\u533a\u7684\u519b\u4e8b\u5316-\u8b66\u5bdf\u90e8\u95e8\u7ade\u76f8\u8d2d\u4e70\u8fdc\u8fdc\u8d85\u51fa\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u8ba4\u4e3a\u7684\u6267\u6cd5\u7684\u519b\u4e8b\u88c5\u5907\u3002\n\u4fdd\u7f57\u52a0\u5165\u4e86\u6765\u81ea\u80af\u5854\u57fa\u5dde\u548c\u5168\u56fd\u5404\u5730\u7684\u6c11\u9009\u5b98\u5458\u7684\u884c\u5217\uff0c\u4ed6\u4eec\u5bf9\u6cf0\u52d2\u7684\u67aa\u51fb\u4e8b\u4ef6\u76f4\u8a00\u4e0d\u8bb3\u3002\n\u652f\u6301\u50cf\u8fd9\u6837\u7684\u6545\u4e8b\uff0c\u4eca\u5929\u5c31\u6210\u4e3a\u8ba2\u9605\u8005\u5427\uff01\u5728\u8fd9\u91cc\u83b7\u5f97\u65e0\u9650\u5236\u7684\u6570\u5b57\u8bbf\u95ee\uff01\n\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u5361\u9a6c\u62c9\u00b7\u54c8\u91cc\u65af(Kamala Harris)\u4e0a\u5468\u8981\u6c42\u8054\u90a6\u8c03\u67e5\u4eba\u5458\u8c03\u67e5\u8fd9\u8d77\u6709\u4e89\u8bae\u7684\u67aa\u51fb\u4e8b\u4ef6\u3002\n\u80af\u5854\u57fa\u5dde\u53c2\u8bae\u9662\u5171\u548c\u515a\u9886\u8896\u7c73\u5947\u00b7\u9ea6\u5eb7\u5948\u5c14(Mitch McConnell)\u8868\u793a\uff0c\u8fd9\u8d77\u67aa\u51fb\u4e8b\u4ef6\u5e94\u8be5\u5f97\u5230\u5f7b\u5e95\u548c\u8fc5\u901f\u7684\u8c03\u67e5\u3002\n\u4ee3\u8868\u534e\u76db\u987f\u8def\u6613\u65af\u7ef4\u5c14\u7684\u4f17\u8bae\u5458\u7ea6\u7ff0\u00b7\u4e9a\u7a46\u65af(John Yarmuth)\u5f62\u5bb9\u6cf0\u52d2\u662f\u4e00\u540d\u52c7\u6562\u65e0\u79c1\u7684\u516c\u4ec6\u3002\u6cf0\u52d2\u662f\u4e00\u540d\u6025\u8bca\u5ba4\u6280\u672f\u4eba\u5458\u3002\u4ed6\u8bf4\uff0c\u67aa\u51fb\u4e8b\u4ef6\u662f\u4e00\u4e2a\u56fd\u5bb6\u538c\u5026\u4e86\u770b\u5230\u548c\u542c\u5230\u9ed1\u4eba\u548c\u68d5\u8272\u751f\u547d\u88ab\u5982\u6b64\u8086\u610f\u548c\u51b7\u9177\u5730\u593a\u8d70\u800c\u611f\u5230\u538c\u5026\u7684\u53c8\u4e00\u4e2a\u4f8b\u5b50\u3002", "note_en": "LOUISVILLE, Ky. \u2014 U.S. Sen. Rand Paul is speaking\u00a0out about the controversial shooting of former Louisville EMT \u00a0Breonna Taylor, who was killed by police during a &#34;no-knock&#34; search warrant that experts have heavily criticized.\n In an exclusive statement to The Courier\u00a0Journal, the Republican lawmaker expressed concern about the Louisville Metro Police Department&#39;s search of Taylor&#39;s apartment on March 13, which has led to a national outcry.\n Court records show police obtained a no-knock warrant before using a battering ram to enter Taylor&#39;s apartment\u00a0at around 1 a.m. as part of a narcotics investigation.\n But the warrant shows Taylor was not the main subject of the investigation, and that no narcotics were found in her apartment after she was shot eight times by police.\n &#34;No one should lose their life in pursuit of a crime without a victim, and &#39;no-knock&#39; warrants should be forbidden,&#34; Paul said. &#34;Let\u2019s hope the investigation provides justice.&#34;\n Sen. Rand Paul, R-Ky., speaks during a virtual Senate Committee for Health, Education, Labor, and Pensions hearing, Tuesday, May 12, 2020 on Capitol Hill in Washington. (Win McNamee/Pool via AP) \u00a0 (Photo: Win McNamee, AP)\n Paul&#39;s comments come as local leaders are\u00a0changing police policies around\u00a0no-knock warrants in the wake of Taylor&#39;s\u00a0fatal shooting.\n Mayor Greg Fischer, a Democrat, announced Monday that  all no-knock warrants will now require approval from the chief of police or a designee before being submitted\u00a0to a judge. He said doing so will provide another &#34;level of scrutiny.&#34;\n The U.S. Supreme Court has said judges may allow police\u00a0to search without knocking when they have a reasonable suspicion that under the \u201cparticular circumstances\u201d of the case, the targets could destroy evidence.\n    Legal experts, however, have criticized the vague\u00a0language in the\u00a0Taylor warrant given her apartment did not have cameras.\n \u201cI don\u2019t know how this ever cleared a supervisor\u2019s desk,\u201d Lexington attorney Mark Wohlander, a former FBI agent and federal prosecutor, told The Courier Journal this weekend.\n  Brian Gallini, a law professor at University of Arkansas\u00a0who has written about the Fourth Amendment, said if a no-knock warrant was appropriate in raiding Taylor&#39;s apartment, &#34;then every routine drug transaction would justify grounds for no-knock.&#34;\n Paul, a libertarian-leaning lawmaker,\u00a0is one of the fiercest defenders\u00a0of Fourth Amendment rights in Congress. He expressed previous concern that local law enforcement is becoming too militarized.\n  &#34;There is a systemic problem with today\u2019s law enforcement,&#34; Paul said in a 2014 op-ed for TIME Magazine.\n The senator was addressing protests and riots in the wake of the Ferguson, Missouri, police shooting of 18-year-old Michael Brown. At the time Paul said &#34;big government&#34; was\u00a0at the heart of the problem.\n &#34;Washington has incentivized the militarization of local police precincts by using federal dollars to help municipal governments build what are essentially small armies \u2014 where police departments compete to acquire military gear that goes far beyond what most of Americans think of as law enforcement,&#34; Paul said in the 2014 editorial.\n Paul joins\u00a0elected officials from Kentucky and around the country who&#39;ve spoken out about Taylor&#39;s shooting.\n Support stories like this one by becoming a subscriber today!  Get unlimited digital access  here!\n U.S. Sen. Kamala Harris, a California Democrat,  demanded last week that\u00a0federal investigators examine\u00a0the controversial shooting.\n  Senate Republican Leader Mitch McConnell, of Kentucky,  said the shooting, &#34;should be thoroughly and promptly investigated.&#34;\n Rep. John Yarmuth, who represents Louisville in Washington, described Taylor, who was an ER technician,\u00a0as a &#34;brave and selfless public servant.&#34; He said the shooting was another example of a &#34;nation sick and tired of seeing and hearing of black and brown lives being taken so wantonly and so coldly.&#34;", "posttime": "2020-05-19 13:04:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u4ef6,paul,\u6cf0\u52d2", "title": "\u5170\u5fb7\u00b7\u4fdd\u7f57\u8bf4\uff0c\u6cf0\u52d2\u67aa\u51fb\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u5e94\u8be5\u7981\u6b62\u65e0\u6572\u95e8\u641c\u67e5\u4ee4", "title_en": "Rand Paul says no-knock warrants should be forbidden in wake of Taylor shooting", "transed": 1, "url": "https://www.courier-journal.com/story/news/politics/2020/05/18/rand-paul-no-knock-warrants-should-forbidden/5215149002/", "via": "", "real_tags": ["\u4e8b\u4ef6", "paul", "\u6cf0\u52d2"]}, {"category": "", "categoryclass": "", "imagename": "28a54bffc5211d85788bf139b16752d2.jpg", "infoid": 1002737, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u7834\u4ea7\u4fdd\u62a4\u4e0b\u7684\u91cd\u7ec4\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0cJ.C.Penney\u5c06\u6c38\u4e45\u5173\u95ed\u5176846\u5bb6\u95e8\u5e97\u4e2d\u7684\u8fd130%\u3002\n\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u7684\u96f6\u552e\u5546\u5468\u4e00\u8868\u793a\uff0c\u8ba1\u5212\u57282\u6708\u4efd\u4e4b\u524d\u5173\u95ed\u7ea6192\u5bb6\u95e8\u5e97\uff0c\u7136\u540e\u57282022\u5e74\u518d\u5173\u95ed50\u5bb6\u95e8\u5e97\u3002\u8fd9\u5c06\u4f7f\u516c\u53f8\u53ea\u5269\u4e0b600\u591a\u5bb6\u95e8\u5e97\u3002\nJ.C.Penney\u5468\u4e94\u7533\u8bf7\u7834\u4ea7\u91cd\u7ec4\uff0c\u6210\u4e3a\u81ea\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u8feb\u4f7f\u95e8\u5e97\u6682\u65f6\u5173\u95ed\u4ee5\u6765\u6700\u5927\u7684\u96f6\u552e\u5546\u3002\u5728\u5ba3\u5e03\u7834\u4ea7\u540e\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u5b9e\u4f53\u5e97\u548c\u5728\u7ebf\u9500\u552e\u4e1a\u52a1\u5728\u91cd\u7ec4\u671f\u95f4\u5c06\u7ee7\u7eed\u8425\u4e1a\u3002\nJ.C.Penney\u7684\u9ad8\u7ba1\u8bf4\uff0cJ.C.Penney\u67095\u4ebf\u7f8e\u5143\u7684\u73b0\u91d1\uff0c\u8d37\u6b3e\u4eba\u627f\u8bfa\u518d\u63d0\u4f9b9\u4ebf\u7f8e\u5143\uff0c\u5e2e\u52a9\u516c\u53f8\u5b8c\u6210\u91cd\u7ec4\u3002\n\u968f\u7740\u96f6\u552e\u989d\u66b4\u8dcc\uff0c\u5927\u6d41\u884c\u5df2\u7ecf\u5f00\u59cb\u6253\u51fb\u4e00\u4e9b\u6700\u5f31\u7684\u516c\u53f8\u3002\u5185\u66fc\u00b7\u9a6c\u5e93\u65af(Neiman Marcus)\u548cJ.Crew\u5728J.C.Penney\u4e4b\u524d\u51e0\u5929\u5bfb\u6c42\u7834\u4ea7\u4fdd\u62a4\u3002\u5728\u5927\u6d41\u884c\u5173\u95ed\u7ecf\u6d4e\u4e4b\u524d\uff0c\u8fd9\u4e09\u5bb6\u516c\u53f8\u90fd\u5df2\u7ecf\u8d1f\u503a\u7d2f\u7d2f\uff0c\u4e0e\u6d88\u8d39\u8005\u7684\u8054\u7cfb\u4e5f\u51fa\u73b0\u4e86\u56f0\u96be\u3002\n\u5c24\u5176\u662fJ.C.Penney\uff0c\u591a\u5e74\u6765\u5728\u7535\u5b50\u5546\u52a1\u7684\u589e\u957f\u4e2d\u4e00\u76f4\u5728\u4e0b\u6ed1\u3002\u572840\u4ebf\u7f8e\u5143\u503a\u52a1\u7684\u62d6\u7d2f\u4e0b\uff0c\u8be5\u516c\u53f8\u8fd1\u5e74\u6765\u5173\u95ed\u4e86\u95e8\u5e97\u4ee5\u524a\u51cf\u6210\u672c\u3002\n\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\uff0cJ.C.Penney\u7684\u9500\u552e\u989d\u540c\u6bd4\u4e0b\u964d\u8fd18%\uff0c\u81f334\u4ebf\u7f8e\u5143\uff0c\u6536\u5165\u4e3a2,700\u4e07\u7f8e\u5143\uff0c\u4f4e\u4e8e\u53bb\u5e74\u540c\u671f\u76847,500\u4e07\u7f8e\u5143\u3002J.C.Penney\u57284\u6708\u548c5\u6708\u9519\u8fc7\u4e86\u4e24\u6b21\u503a\u52a1\u507f\u8fd8\uff0c\u5206\u6790\u5e08\u8ba4\u4e3a\u8fd9\u662f\u7834\u4ea7\u7684\u9884\u5146\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u5409\u5c14\u00b7\u7d22\u5c14\u9676(Jill Soltau)\u4e0a\u5468\u8868\u793a\uff0cJ.C.Penney\u7684\u9886\u5bfc\u5c42\u5728\u91cd\u5efa\u516c\u53f8\u65b9\u9762\u53d6\u5f97\u4e86\u91cd\u5927\u8fdb\u5c55\uff0c\u4f46\u51a0\u72b6\u75c5\u6bd2\u7684\u5173\u95ed\u8868\u660e\uff0c\u4ed6\u4eec\u5fc5\u987b\u6d88\u9664\u503a\u52a1\uff0c\u624d\u80fd\u5168\u9762\u91cd\u632f\u516c\u53f8\u3002\u5979\u8bf4\uff0c\u7834\u4ea7\u662f\u786e\u4fddJCPenney\u5728\u672a\u6765\u51e0\u5341\u5e74\u91cc\u4ee5\u5176100\u591a\u5e74\u7684\u5386\u53f2\u4e3a\u5ba2\u6237\u670d\u52a1\u7684\u6700\u4f73\u9014\u5f84\u3002\nJ.C.Penney\u5df2\u7ecf\u5f00\u59cb\u5728\u4e00\u4e9b\u5730\u70b9\u91cd\u65b0\u5f00\u4e1a\uff0c\u5305\u62ec\u4e9a\u5229\u6851\u90a3\u5dde\u3001\u4f5b\u7f57\u91cc\u8fbe\u5dde\u3001\u4f50\u6cbb\u4e9a\u5dde\u548c\u5fb7\u514b\u8428\u65af\u5dde\u3002\n\u5c31\u5728\u8be5\u516c\u53f8\u7834\u4ea7\u7684\u51e0\u5929\u524d\uff0cJ.C.Penney\u5411\u5176\u9ad8\u7ba1\u652f\u4ed8\u4e86\u6570\u767e\u4e07\u7f8e\u5143\u7684\u5956\u91d1\u3002\u7d22\u5c14\u9676\u83b7\u5f97\u4e86450\u4e07\u7f8e\u5143\uff0c\u800c\u9996\u5e2d\u8d22\u52a1\u5b98\u6bd4\u5c14\u00b7\u6c83\u8d39\u5c14\u3001\u9996\u5e2d\u5546\u52a1\u5b98\u7c73\u6b47\u5c14\u00b7\u74e6\u5179\u6d1b\u548c\u9996\u5e2d\u4eba\u529b\u8d44\u6e90\u5b98\u5e03\u6797\u00b7\u57c3\u6587\u68ee\u5404\u83b7\u5f97\u4e86100\u4e07\u7f8e\u5143\u3002", "note_en": "J.C. Penney will permanently close nearly 30% of its 846 stores as part of a restructuring plan under bankruptcy protection.\n  The Texas-based retailer said Monday it plans to close about 192 stores by February, then another 50 in 2022. That will leave the company with just over 600 stores.\n J.C. Penney\u00a0  filed\u00a0for bankruptcy reorganization Friday, making it the biggest retailer to do since the   coronavirus pandemic forced stores to temporarily close. After announcing bankruptcy, the company said its physical stores and online sales operations will stay open during restructuring.\n  J.C. Penney has $500 million in cash and has commitments from lenders for another $900 million to help the company get through its restructuring, company officials said.\n The pandemic has begun to batter some of the weakest companies as retail sales plunge.   Neiman Marcus\u00a0and\u00a0  J. Crew\u00a0sought bankruptcy protection days before J.C. Penney did. All three were already laden with debt and having trouble connecting with consumers before the pandemic shut f=down the economy.\n J.C. Penney in particular has been declining for years amid the growth of e-commerce. Weighed down by $4 billion in debt, it has closed stores in recent years to cut costs.\n  In its most recent quarter, J.C. Penney&#39;s sales fell nearly 8%, to $3.4 billion, from the year-earlier period, while income was $27 million, down from $75 million for the same period a year ago. J.C. Penney missed two debt payments in April and May, which analysts saw as a harbinger of bankruptcy.\n  CEO Jill Soltau  said last week that J.C. Penney&#39;s leadership made significant progress toward rebuilding the company, but the coronavirus closures showed them they must eliminate debt in order to fully revive the company. She said bankruptcy &#34;is the best path to ensure that JCPenney will build on its over 100-year history to serve our customers for decades to come.&#34;\n J.C. Penney has already begun\u00a0 reopening\u00a0some locations, including in Arizona, Florida, Georgia and Texas.\n The company&#39;s bankruptcy comes days after J.C. Penney gave its top executives millions of dollars in bonus pay. Soltau received $4.5 million, while chief financial officer Bill Wafford, chief merchant officer Michelle Wlazlo and chief human resources officer Brynn Evanson each got $1 million.", "posttime": "2020-05-19 12:48:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7834\u4ea7,part", "title": "\u4f5c\u4e3a\u7834\u4ea7\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0cJ.C.Penney\u5c06\u5173\u95ed240\u5bb6\u95e8\u5e97", "title_en": "J.C. Penney is closing 240 stores as part of its bankruptcy plan", "transed": 1, "url": "https://www.cbsnews.com/news/jc-penney-closing250-stores-banktrupcy-restructuring-plan/", "via": "", "real_tags": ["\u7834\u4ea7", "part"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002736, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "NetNewsWire\u4e4b\u6240\u4ee5\u901f\u5ea6\u5feb\uff0c\u662f\u56e0\u4e3a\u6027\u80fd\u662f\u6211\u4eec\u7684\u6838\u5fc3\u4ef7\u503c\u4e4b\u4e00\u3002\u5feb\u901f\u662f\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002\n\u6211\u6000\u7591\u7528\u5176\u4ed6\u4efb\u4f55\u65b9\u5f0f\u90fd\u5f88\u96be\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u4f60\u82b1\u4e00\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u52a0\u5feb\u901f\u5ea6\uff0c\u6709\u65f6\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u603b\u662f-\u5145\u5176\u91cf\u4e5f\u5c31\u662f-\u53ea\u662f\u671d\u7740\u4ee4\u4eba\u6ee1\u610f\u7684\u65b9\u5411\u524d\u8fdb\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u5230\u6765\u3002\n\u6211\u80fd\u7ed9\u51fa\u7684\u6700\u597d\u7684\u4e00\u822c\u6027\u5efa\u8bae\u5c31\u662f\uff1a\u786e\u4fdd\u6027\u80fd\u662f\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u57fa\u7840\u7684\u4e00\u90e8\u5206\u3002\u786e\u4fdd\u8fd9\u662f\u6bcf\u5929\u6bcf\u4e2a\u51b3\u5b9a\u7684\u4e00\u90e8\u5206\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u786e\u4fdd\u8fd9\u573a\u8868\u6f14\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u914d\u6599\uff0c\u800c\u662f\u62ab\u8428\u3002\n\u4ee5\u4e0b\u662fNetNewsWire\u901f\u5ea6\u5feb\u7684\u4e00\u4e9b\u5177\u4f53\u539f\u56e0\u3002\u56e0\u4e3aNetNewsWire-\u5c31\u50cf\u73b0\u5728\u7684\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837-\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u82b1\u54e8\u7684\u6570\u636e\u5e93\u6d4f\u89c8\u5668\uff0c\u6570\u636e\u6765\u81ea\u7f51\u7edc\uff0c\u5176\u4e2d\u4e00\u4e9b\u5c06\u9002\u7528\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002\n\u89e3\u6790XML\u6700\u75db\u82e6\u7684\u65b9\u6cd5\u662f\u4f7f\u7528SAX\u89e3\u6790\u5668-\u4f46\u8fd9\u4e5f\u662f\u83b7\u5f97\u6700\u4f73\u6027\u80fd\u548c\u4f7f\u7528\u6700\u5c11\u5185\u5b58\u7684\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728RSParser\u6846\u67b6\u4e2d\u4f7f\u7528SAX\u3002\n\u5728\u6211\u76842012iMac\u4e0a\uff0c\u89e3\u6790Dling Fireball Atom feed\u7684\u4e00\u4e9b\u8fc7\u53bb\u5b9e\u4f8b\u7684\u672c\u5730\u526f\u672c-\u5927\u5c0f\u76f8\u5bf9\u8f83\u5927\uff0c\u4e3a112K-\u53d1\u751f\u57280.009\u79d2\u5185\u3002\n\u8fd9\u5f88\u5feb\uff0c\u4f46\u6211\u4eec\u8fd8\u505a\u4e86\u53e6\u4e00\u4ef6\u4e8b\uff1a\u5728\u540e\u53f0\u5bf9\u4e32\u884c\u961f\u5217\u8fd0\u884c\u89e3\u6790\u5668\u3002\u7531\u4e8e\u89e3\u6790\u662f\u4e00\u4e2a\u81ea\u5305\u542b\u7684\u64cd\u4f5c-\u6211\u4eec\u8f93\u5165\u4e00\u4e9b\u6570\u636e\u5e76\u53d6\u56de\u5bf9\u8c61-\u56e0\u6b64\u4e0d\u5b58\u5728\u7ebf\u7a0b\u95ee\u9898\u3002\n\u89e3\u6790\u5668\u901f\u5ea6\u5f88\u5feb-\u4f46\u6211\u4eec\u4e5f\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u5b8c\u5168\u8df3\u8fc7\u89e3\u6790\u3002\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u4f7f\u7528\u6761\u4ef6GET\uff0c\u8fd9\u4f7f\u670d\u52a1\u5668\u6709\u673a\u4f1a\u5728\u63d0\u8981\u81ea\u6211\u4eec\u4e0a\u6b21\u8bf7\u6c42\u540e\u6ca1\u6709\u66f4\u6539\u65f6\u4f7f\u7528304 NOT MODIFIED\u548cNO CONTENT\u8fdb\u884c\u54cd\u5e94\u3002\u663e\u7136\uff0c\u6211\u4eec\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8df3\u8fc7\u4e86\u89e3\u6790\u3002\n\u6bcf\u5f53\u6211\u4eec\u4e0b\u8f7d\u63d0\u8981\u65f6\uff0c\u6211\u4eec\u8fd8\u4f1a\u521b\u5efa\u539f\u59cb\u63d0\u8981\u5185\u5bb9\u7684\u6563\u5217\u3002\u5982\u679c\u6563\u5217\u4e0e\u4e0a\u6b21\u7684\u6563\u5217\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u5185\u5bb9\u6ca1\u6709\u88ab\u4fee\u6539\uff0c\u6211\u4eec\u8df3\u8fc7\u89e3\u6790\u3002\n\u89e3\u6790\u5668\u4e0d\u662f\u6211\u4eec\u5728\u4e32\u884c\u961f\u5217\u4e0a\u8fd0\u884c\u7684\u552f\u4e00\u4ee3\u7801\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u6210\u4e3a\u81ea\u5305\u542b\u7684-\u5f53\u5b83\u53ef\u4ee5\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u7136\u540e\u56de\u8c03\u5230\u4e3b\u7ebf\u7a0b\u65f6\uff0c\u6ca1\u6709\u7ebf\u7a0b\u95ee\u9898-\u5982\u679c\u6709\u4efb\u4f55\u673a\u4f1a\u660e\u663e\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u4e32\u884c\u961f\u5217\u3002\n\u5f53\u7136\uff0c\u5173\u952e\u662f\u8981\u786e\u4fdd\u60a8\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u72ec\u7acb\u7684\u3002\u4ed6\u4eec\u5728\u5de5\u4f5c\u65f6\u4e0d\u5e94\u8be5\u89e6\u53d1KVO\u6216\u5176\u4ed6\u7c7b\u578b\u7684\u901a\u77e5\u3002\n(\u9664\u4e86\u63d0\u8981\u89e3\u6790\u4e4b\u5916\uff0c\u80cc\u666f\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\u662f\u521b\u5efa\u63d0\u8981\u56fe\u6807\u7684\u7f29\u7565\u56fe\u3002)\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u5bb9\u6613\u843d\u5165\u9677\u9631\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u7528\u6237\u6b63\u5728\u5c06\u4e00\u7bc7\u6587\u7ae0\u6807\u8bb0\u4e3a\u5df2\u8bfb\u3002\u901a\u8fc7KVO\u6216\u901a\u77e5\u6216\u5176\u4ed6\u65b9\u5f0f\u8c03\u7528\u6587\u7ae0.read=true\u89e6\u53d1\u6570\u636e\u5e93\u66f4\u65b0\u3001\u7528\u6237\u754c\u9762\u66f4\u65b0\u3001\u672a\u8bfb\u8ba1\u6570\u66f4\u65b0\u3001\u64a4\u6d88\u5806\u6808\u7ef4\u62a4\u7b49\u3002\n\u73b0\u5728\uff0c\u5047\u8bbe\u60a8\u6b63\u5728\u5c06\u5f53\u524d\u65f6\u95f4\u7ebf\u4e2d\u7684\u6240\u6709\u6587\u7ae0\u6807\u8bb0\u4e3a\u5df2\u8bfb\u3002\u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u7bc7\u6587\u7ae0\u8c03\u7528titile.read=true\uff0c\u5e76\u4e3a\u6bcf\u4e00\u7bc7\u6587\u7ae0\u89e6\u53d1\u4e00\u5927\u5806\u5de5\u4f5c\u3002\u8fd9\u53ef\u80fd\u4f1a\u975e\u5e38\u975e\u5e38\u6162\u3002\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u6709\u7279\u5b9a\u7684API\uff0c\u800c\u8fd9\u4e9bAPI\u9700\u8981\u4e00\u4e2a\u5bf9\u8c61\u96c6\u5408\u3002\u5c06\u4e00\u7bc7\u6587\u7ae0\u6807\u8bb0\u4e3a\u5df2\u8bfb\u7684API\u4e0e\u5c0610,000\u7bc7\u6587\u7ae0\u6807\u8bb0\u4e3a\u5df2\u8bfb\u7684API\u76f8\u540c\u3002\u8fd9\u6837\uff0c\u6570\u636e\u5e93\u66f4\u65b0\u4e00\u6b21\uff0c\u672a\u8bfb\u8ba1\u6570\u66f4\u65b0\u4e00\u6b21\uff0c\u6211\u4eec\u53ea\u5728\u64a4\u6d88\u5806\u6808\u4e0a\u63a8\u5165\u4e00\u4e2a\u64cd\u4f5c\u3002\n\u6211\u4eec\u8fd8\u52aa\u529b\u628a\u5176\u4ed6\u79cd\u7c7b\u7684\u5de5\u4f5c\u7ed3\u5408\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5728\u5237\u65b0\u671f\u95f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e00\u6b21\u66f4\u6539\u7684\u672a\u8bfb\u8ba1\u6570\uff0c\u4f46\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5927\u91cf\u7684\u5de5\u4f5c\u3002\n\u56e0\u6b64\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u5408\u5e76\u5728\u4e00\u8d77-\u6211\u4eec\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4f7f\u91cd\u65b0\u8ba1\u7b97\u672a\u8bfb\u8ba1\u6570\u7684\u9891\u7387\u4e0d\u8d85\u8fc7\u6bcf0.25\u79d2\u4e00\u6b21(\u4f8b\u5982)\u3002\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u5de8\u5927\u7684\u4e0d\u540c\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u540c\u6837\u53ea\u662f\u4e00\u4e2a\u82b1\u54e8\u7684\u6570\u636e\u5e93\u6d4f\u89c8\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u662f\u6574\u4e2a\u4e8b\u60c5\u6210\u8d25\u7684\u5173\u952e\u6240\u5728\u3002\n\u867d\u7136\u6838\u5fc3\u6570\u636e\u5f88\u68d2\uff0c\u4f46\u6211\u4eec\u901a\u8fc7FMDB\u66f4\u76f4\u63a5\u5730\u4f7f\u7528SQLite\uff0c\u56e0\u4e3a\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5c06\u6570\u636e\u5e93\u89c6\u4e3a\u6570\u636e\u5e93\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6838\u5fc3\u6570\u636e\u8303\u56f4\u4e4b\u5916\u7684\u65b9\u5f0f\u4f18\u5316\u6211\u4eec\u7684\u67b6\u6784\u3001\u7d22\u5f15\u548c\u67e5\u8be2\u3002(\u8bf7\u8bb0\u4f4f\uff0cCore Data\u7ba1\u7406\u5bf9\u8c61\u56fe\uff1a\u5b83\u4e0d\u662f\u6570\u636e\u5e93\u3002)\u3002\n\u6211\u4eec\u4f7f\u7528\u5404\u79cd\u5de5\u5177-\u4f8b\u5982\u89e3\u91ca\u67e5\u8be2\u8ba1\u5212-\u6765\u786e\u4fdd\u6211\u4eec\u5df2\u7ecf\u5feb\u901f\u9ad8\u6548\u5730\u8fdb\u884c\u4e86\u63d0\u53d6\u3001\u8ba1\u6570\u548c\u66f4\u65b0\u3002\n\u6211\u4eec\u81ea\u5df1\u505a\u7f13\u5b58\u3002\u6211\u4eec\u5728\u4e32\u884c\u961f\u5217\u4e0a\u8fd0\u884c\u6570\u636e\u5e93\uff0c\u56e0\u6b64\u4e0d\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\u3002\u5bf9\u4e8e\u6a21\u578b\u5bf9\u8c61\uff0c\u6211\u4eec\u5c3d\u53ef\u80fd\u4f7f\u7528\u7ed3\u6784\u800c\u4e0d\u662f\u7c7b\u3002(\u4e0d\u786e\u5b9a\u8fd9\u5bf9\u6027\u80fd\u662f\u5426\u91cd\u8981\uff1a\u6211\u4eec\u53ea\u662f\u78b0\u5de7\u559c\u6b22\u7ed3\u6784\u3002)\u3002\n\u6211\u53ef\u4ee5\uff0c\u4e5f\u8bb8\u5e94\u8be5\u5728\u8fd9\u91cc\u5199\u66f4\u591a\u8be6\u7ec6\u7684\u6587\u7ae0\u3002\u6570\u636e\u5e93\u5de5\u4f5c\u662fNetNewsWire\u901f\u5ea6\u6700\u5feb\u7684\u539f\u56e0\u3002\n\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u67e5\u627e\u4e1c\u897f-\u4f8b\u5982\uff0c\u7ed9\u5b9afeed\u7684feed ID-\uff0c\u56e0\u6b64\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u5b57\u5178\u3002\u8fd9\u5728Mac\u548ciOS\u7f16\u7a0b\u4e2d\u76f8\u5f53\u5e38\u89c1\u3002\n\u6211\u6000\u7591\u4e0d\u592a\u5e38\u89c1\u7684\u662f\u5957\u88c5\u7684\u4f7f\u7528\u3002Set\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u96c6\u5408\u7c7b\u578b--\u6211\u4eec\u6c38\u8fdc\u4e0d\u60f3\u68c0\u67e5\u6570\u7ec4\u662f\u5426\u5305\u542b\u67d0\u4e9b\u5185\u5bb9\uff0c\u4e5f\u4e0d\u60f3\u5904\u7406\u91cd\u590d\u7684\u5bf9\u8c61\u3002\u8fd9\u4e9b\u53ef\u80fd\u662f\u6027\u80fd\u6740\u624b\u3002\n\u5f53\u67d0\u4e9bAPI\u9700\u8981\u6570\u7ec4\u6216\u9700\u8981\u6709\u5e8f\u96c6\u5408(\u901a\u5e38\u7528\u4e8eUI)\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u7ec4\u3002\n\u6211\u4eec\u4f7f\u7528Instruments\u4e2d\u7684\u5206\u6790\u5668\u6765\u51c6\u786e\u5730\u627e\u51fa\u4ec0\u4e48\u662f\u6162\u7684\uff0c\u800c\u4e0d\u662f\u731c\u6d4b\u4ec0\u4e48\u662f\u6162\u7684\u3002\n\u5206\u6790\u5668\u7ecf\u5e38\u4ee4\u4eba\u60ca\u8bb6\uff01\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4ef6\u4e8b\u662f\u6211\u4eec\u6ca1\u6709\u9884\u6599\u5230\u7684\uff1a\u6563\u5217\u6211\u4eec\u7684\u4e00\u4e9b\u5bf9\u8c61\u4e00\u5ea6\u76f8\u5f53\u6162\u3002\n\u56e0\u4e3a\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u96c6\u5408\uff0c\u6240\u4ee5\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u6563\u5217\u64cd\u4f5c\u3002\u6211\u4eec\u5728\u4e00\u4e9b\u5177\u6709\u5927\u91cf\u5b57\u7b26\u4e32\u5c5e\u6027\u7684\u5bf9\u8c61\u4e0a\u4f7f\u7528\u5408\u6210\u7684\u7b49\u4ef7\u6027\u548c\u54c8\u5e0c\u6027-\u800c\u4e14\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6563\u5217\u76f8\u5f53\u6162\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u4e3a\u8fd9\u4e9b\u5bf9\u8c61\u7f16\u5199\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u6563\u5217\u51fd\u6570\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u6563\u5217\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c5e\u6027-\u4f8b\u5982\uff0c\u4e00\u4e2a\u6587\u7ae0ID-\u800c\u4e0d\u662f\u4e94\u4e2a\u3001\u5341\u4e2a\u6216\u66f4\u591a\u3002\n\u6211\u4f7f\u7528\u5806\u6808\u89c6\u56fe\u7684\u7ecf\u9a8c\u544a\u8bc9\u6211\uff0c\u5b83\u4eec\u975e\u5e38\u6162\u3002\u4ed6\u4eec\u53ea\u662f\u4e0d\u88ab\u5141\u8bb8\u3002\n\u5f53\u4eba\u4eec\u79f0\u8d5eNetNewsWire\u8fd9\u6837\u7684\u57fa\u4e8e\u65f6\u95f4\u8f74\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u8bf4\u201c\u5b83\u50cf\u9ec4\u6cb9\u4e00\u6837\u6eda\u52a8\uff01\u201d(\u6211\u8ba4\u4e3a\u9ec4\u6cb9\u5b9e\u9645\u4e0a\u6839\u672c\u4e0d\u80fd\u5f88\u597d\u5730\u6eda\u52a8\uff0c\u4f46\u662f\uff0c\u662f\u7684\uff0c\u6211\u77e5\u9053\u9ec4\u6cb9\u662f\u5149\u6ed1\u7684\u3002)\u3002\n\u867d\u7136\u6211\u4eec\u5927\u91cf\u4f7f\u7528Auto Layout(\u81ea\u52a8\u5e03\u5c40)--\u5b83\u5f88\u9177\uff0c\u800c\u4e14\u6211\u4eec\u5f88\u559c\u6b22--\u4f46\u6211\u4eec\u4e0d\u5141\u8bb8\u5728\u8868\u683c\u5355\u5143\u683c\u89c6\u56fe\u4e2d\u4f7f\u7528\u5b83\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u7f16\u5199\u81ea\u5df1\u7684\u5e03\u5c40\u4ee3\u7801\u3002\n\u8fd9\u5176\u5b9e\u5e76\u4e0d\u96be\u3002\u4e5f\u8bb8\u6709\u70b9\u5355\u8c03\u4e4f\u5473\uff0c\u4f46\u5e03\u5c40\u8868\u683c\u5355\u5143\u683c\u89c6\u56fe\u975e\u5e38\u5bb9\u6613\uff0c\u771f\u7684\u3002\n\u6211\u8ba4\u4e3a\u4f18\u5316\u7684\u624b\u52a8\u5e03\u5c40\u4ee3\u7801\u603b\u662f\u6bd4\u7ea6\u675f\u6c42\u89e3\u5668\u66f4\u5feb\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u5e73\u6ed1\u6eda\u52a8\u7684\u4f18\u52bf\uff0c\u8fd9\u662f\u4e00\u4e2a\u672c\u6765\u5f88\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8131\u9896\u800c\u51fa\u7684\u5730\u65b9\u4e4b\u4e00\u3002\n\u5e76\u4e14\uff1a\u56e0\u4e3a\u5e03\u5c40\u4ee3\u7801\u4e0d\u9700\u8981\u89c6\u56fe(\u53ea\u9700\u8981\u4e00\u4e2a\u6587\u7ae0\u5bf9\u8c61\u548c\u4e00\u4e2a\u5bbd\u5ea6)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u968f\u65f6\u8fd0\u884c\u5b83\u3002\u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u6765\u786e\u5b9a\u884c\u7684\u9ad8\u5ea6\uff0c\u800c\u4e0d\u5fc5\u8fd0\u884c\u81ea\u52a8\u5e03\u5c40\u8fc7\u7a0b\u3002\n\u6587\u672c\u6d4b\u91cf\u5f88\u6162-\u6162\u5230\u8fde\u624b\u52a8\u5e03\u5c40\u90fd\u592a\u6162\u4e86\u3002\u5728NetNewsWire\u4e2d\uff0c\u6211\u4eec\u5728\u7f13\u5b58\u6587\u672c\u6d4b\u91cf\u65b9\u9762\u505a\u4e86\u4e00\u4e9b\u806a\u660e\u7684\u4e8b\u60c5\u3002\n\u4f8b\u5982\uff1a\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u5728\u53ef\u7528\u5bbd\u5ea6\u4e3a100\u65f6\u662f20pt\u9ad8\uff0c\u5f53\u53ef\u7528\u5bbd\u5ea6\u662f200\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u6d4b\u91cf\u7684\u60c5\u51b5\u4e0b\u65ad\u5b9a\uff0c\u5f53\u53ef\u7528\u5bbd\u5ea6\u662f150\u65f6\uff0c\u5b83\u5c06\u662f20pt\u9ad8\u3002\n\u6ca1\u6709\u4ec0\u4e48\u7075\u4e39\u5999\u836f\u3002\u8ba9\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u5feb\u901f\u610f\u5473\u7740\u8981\u505a\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u4e8b\u60c5-\u8fd9\u610f\u5473\u7740\u8981\u6301\u7eed\u5173\u6ce8\u6027\u80fd\u3002\ud83c\udf55", "note_en": "NetNewsWire is fast because performance is one of our core values.  Being fast is part of the very definition of the app.\n I suspect that it\u2019s hard to do this any other way. If you take a month or two to speed things up, from time to time, your app will always be \u2014\u00a0at best \u2014 just kind of heading toward satisfactory, but never to arrive.\n The best general advice I can give is just this: make sure performance is part of the foundation of your app. Make sure it\u2018s part of every decision every day.\n Make sure, in other words, that performance isn\u2019t just a topping \u2014\u00a0it\u2019s the pizza.\n Below are some of the specific reasons NetNewsWire is fast. Because NetNewsWire is \u2014 like many apps these days \u2014\u00a0basically a fancy database browser where data comes from the web, some of these will apply to other apps.\n   The most painful way to parse XML is with a SAX parser \u2014 but it\u2019s also how you\u2019ll get the best performance and use the least memory. So we use SAX in our  RSParser framework.\n On my 2012 iMac, parsing a local copy of some past instance of the Daring Fireball Atom feed \u2014\u00a0relatively large at 112K in size \u2014\u00a0happens in 0.009 seconds.\n That\u2019s fast, but we do another thing as well: run the parser in the background on a serial queue. Since parsing is a self-contained operation \u2014\u00a0we input some data and get back objects \u2014\u00a0there are no threading issues.\n  The parsers are fast \u2014 but we also do our best to skip parsing entirely when we can. There are two ways we do that.\n We use  conditional GET, which gives the server the chance to respond with a 304 Not Modified, and no content, when a feed hasn\u2019t changed since the last time we asked for it. We skip parsing in this case, obviously.\n We also create a hash of the raw feed content whenever we download a feed. If the hash matches the hash from the last time, then we know the content hasn\u2019t been modified, and we skip parsing.\n  The parser isn\u2019t the only code we run on a serial queue. When an operation can be made self-contained \u2014\u00a0when it can just do a thing and then call back to the main thread, without threading issues \u2014\u00a0we use a serial queue if there\u2019s any chance it could noticeably block the main thread.\n The key is, of course, making sure your operations are in fact self-contained. They shouldn\u2019t trigger KVO or other kinds of notifications as they do their work.\n (A simple example of a background thing, besides feed parsing, is creating thumbnails of feed icons.)\n  Here\u2019s an example of a trap that\u2019s easy to fall into. Say a user is marking an article as read. Calling  article.read = true triggers, via KVO or notifications or something, things like database updates, user interface updates, unread count updating, undo stack maintenance, etc.\n Now say you\u2019re marking all articles in the current timeline as read. You could call  article.read = true for each article \u2014\u00a0and, for each article, trigger a whole bunch of work. This can be very, very slow.\n We have specific APIs for actions like this, and those APIs expect a collection of objects. The same API that marks a single article as read is used to mark 10,000 articles as read. This way the database is updated once, the unread counts are updated once, and we push just one action on the undo stack.\n  We also try to coalesce other kinds of work. For instance, during a refresh, the app could recalculate the unread count on every single change \u2014\u00a0but this could mean a ton of work.\n So, instead, we coalesce these \u2014\u00a0we make it so that recalculating unread counts happens not more often than once every 0.25 seconds (for instance). This can make a huge difference.\n  For an app that is, again, just a fancy database browser, this is where the whole thing can be won or lost.\n While Core Data is great, we use SQLite more directly, via  FMDB, because this gives us the ability to treat our database as a database. We can optimize our schema, indexes, and queries in ways that are outside the scope of Core Data. (Remember that Core Data manages a graph of objects: it\u2019s not a database.)\n We use various tools \u2014\u00a0such as  EXPLAIN QUERY PLAN \u2014\u00a0to make sure we\u2019ve made fetching, counting, and updating fast and efficient.\n We do our own caching. We run the database on a serial queue so we don\u2019t block the main thread. We use structs instead of classes, as much as possible, for model objects. (Not sure that matters to performance: we just happen to like structs.)\n  I could, and probably should, write more articles going into details here. The database work, more than anything else, is why NetNewsWire is fast.\n  We often need to look up things \u2014\u00a0a feed, given its feedID, for instance \u2014\u00a0and so we use dictionaries frequently. This is quite common in Mac and iOS programming.\n What I suspect is less common is use of  sets. The set is our default collection type \u2014\u00a0we never want to check to see if an array contains something, and we never want to deal with duplicate objects. These can be performance-killers.\n We use arrays when some API requires an array or when we need an ordered collection (usually for the UI).\n  Instead of guessing at what\u2019s slow, we use the profiler in Instruments to find out exactly what\u2019s slow.\n The profiler is often surprising! Here\u2019s one thing we found that we didn\u2019t expect: hashing some of our objects was, at one point, pretty slow.\n Because we use sets quite a lot, there\u2019s a whole lot of hashing going on. We were using synthesized equality and hashability on some objects with lots of string properties \u2014\u00a0and, it turns out, hashing strings is pretty darn slow.\n So, instead, we wrote our own hash function for these objects. In many cases we could hash just one string property \u2014\u00a0an article ID, for instance \u2014\u00a0instead of five or ten or more.\n  My experience with stack views tells me that they\u2019re excruciatingly slow. They\u2019re just not allowed.\n  When people praise a timeline-based app like NetNewsWire, they often say something like \u201cIt scrolls like butter!\u201d (I imagine butter as not actually scrolling well  at all, but, yes, I get that butter is smooth.)\n While we use Auto Layout plenty \u2014\u00a0it\u2019s cool, and we like it \u2014\u00a0we don\u2019t allow it inside table cell views. Instead, we write our own layout code.\n This is not actually difficult. Maybe a little tedious, but laying out a table cell view is pretty easy, really.\n I figure that optimized manual layout code is always going to be faster than a constraint solver, and that gives us an edge in smooth scrolling \u2014\u00a0and this is one of the places where an otherwise good app can fall on its face.\n And: because that layout code doesn\u2019t need a view (just an article object and a width), we can run it at any time. We use that same code to determine the height of rows without having to run an Auto Layout pass.\n  Text measurement is slow \u2014\u00a0slow enough to make even manual layout too slow. In NetNewsWire we do some smart things with  caching text measurement.\n For example: if we know that a given string is 20pts tall when the available width is 100 and when the available width is 200, we can tell, without measuring, that it will be 20pts tall when the available width is 150.\n  There\u2019s no silver bullet. Making an app fast means doing a bunch of different things \u2014\u00a0and it means paying attention to performance continuously. \ud83c\udf55", "posttime": "2020-05-19 12:03:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "netnewswire", "title": "\u4e3a\u4ec0\u4e48NetNewsWire\u901f\u5ea6\u5feb", "title_en": "Why NetNewsWire Is Fast", "transed": 1, "url": "https://inessential.com/2020/05/18/why_netnewswire_is_fast", "via": "", "real_tags": []}, {"category": "", "categoryclass": "", "imagename": "90690712ec5b262a65d4b1b3af5a2651.jpg", "infoid": 1002735, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BuzzFeed\u65b0\u95fb\u6709\u6765\u81ea\u4e94\u5927\u6d32\u7684\u8bb0\u8005\u4e3a\u60a8\u5e26\u6765\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5f71\u54cd\u7684\u53ef\u9760\u62a5\u9053\u3002\u4e3a\u4e86\u8ba9\u8fd9\u6761\u65b0\u95fb\u4fdd\u6301\u514d\u8d39\uff0c\u8bf7\u6210\u4e3a\u6211\u4eec\u7684\u4f1a\u5458\u5e76\u8ba2\u9605\u6211\u4eec\u7684\u65f6\u4e8b\u901a\u8baf\u201c\u4eca\u65e5\u7206\u53d1\u201d\u3002\n\u8bd5\u56fe\u901a\u8fc7\u76f4\u63a5\u547c\u53eb\u9910\u5385\u6765\u907f\u5f00GrubHub\u7b49\u5728\u7ebf\u9001\u8d27\u5e73\u53f0\u7684\u987e\u5ba2\uff0c\u53ef\u80fd\u4f1a\u62e8\u6253\u8fd9\u4e9b\u5e73\u53f0\u751f\u6210\u548c\u5e7f\u544a\u7684\u7535\u8bdd\u53f7\u7801-\u9910\u5385\u4e3a\u6b64\u6536\u53d6\u7684\u8d39\u7528\u6709\u65f6\u53ef\u80fd\u4f1a\u8d85\u8fc7\u8ba2\u5355\u4ea7\u751f\u7684\u6536\u5165\u3002\u9910\u5385\u8001\u677f\u548c\u7ebd\u7ea6\u5e02\u8bae\u4f1a\u8868\u793a\uff0c\u8fd9\u79cd\u505a\u6cd5\u8fdb\u4e00\u6b65\u6324\u538b\u4e86\u5df2\u7ecf\u56e0\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u548c\u5c01\u9501\u800c\u6349\u895f\u89c1\u8098\u7684\u4f01\u4e1a\u3002\n\u5e03\u9c81\u514b\u6797Gourmet Kitchen\u548c\u201c\u5e7d\u7075\u53a8\u623f\u201dPalmito\u7684\u5171\u540c\u6240\u6709\u8005\u62c9\u6590\u62c9\u00b7\u5185\u683c\u7f57(Rafaela Negrao)\u5728\u63a5\u53d7BuzzFeed\u65b0\u95fb\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u5982\u679c\u5ba2\u6237\u6253\u7535\u8bdd\u8ba2\u8d2d\u5496\u5561\uff0c\u6211\u4eec\u5c06\u652f\u4ed86.42\u7f8e\u5143\u7684\u8d39\u7528\u3002\u201d\u5979\u89e3\u91ca\u8bf4\uff0c\u5979\u6bcf\u4e2a\u7535\u8bdd\u8ba2\u5355\u90fd\u4f1a\u652f\u4ed8\u56fa\u5b9a\u8d39\u7528\u3002\u201c\u4f60\u662f\u5728\u4ed8\u94b1\u8bf7\u522b\u4eba\u559d\u4f60\u7684\u5496\u5561\u3002\u5982\u679c\u4f60\u8fd9\u6837\u770b\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u6709\u591a\u75db\u3002\u201c\u3002\n\u7535\u8bdd\u8d39\u7684\u8fd0\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1aGrubHub(\u65d7\u4e0b\u8fd8\u62e5\u6709Seamless\u3001MenuPages\u3001Tapingo\u548cLevelUp)\u5728\u5176\u5e73\u53f0\u4e0a\u4e3a\u6bcf\u5bb6\u9910\u5385\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u7535\u8bdd\u53f7\u7801\uff1b\u8be5\u53f7\u7801\u4f1a\u51fa\u73b0\u5728\u9910\u5385\u7684GrubHub\u6216Seamless\u9875\u9762\u4e0a\uff0c\u5e76\u91cd\u5b9a\u5411\u81f3\u9910\u5385\u81ea\u5df1\u7684\u7535\u8bdd\u7ebf\u8def(\u9910\u5385\u4e0d\u80fd\u5728\u5176GrubHub\u6216Seamless\u9875\u9762\u4e0a\u5217\u51fa\u81ea\u5df1\u7684\u7535\u8bdd\u53f7\u7801)\u3002\u91cd\u5b9a\u5411\u53f7\u7801\u5728\u8c37\u6b4c\u641c\u7d22\u7ed3\u679c(\u5305\u62ec\u8be5\u4e1a\u52a1\u7684\u8c37\u6b4c\u9762\u677f)\u4e2d\u4e5f\u53ef\u80fd\u6bd4\u9910\u5385\u81ea\u5df1\u7684\u4ea7\u54c1\u7ebf\u663e\u793a\u5f97\u66f4\u9ad8\u3002\u8fd9\u5bfc\u81f4\u4e00\u4e9b\u5ba2\u6237\u5373\u4f7f\u4e0d\u6253\u7b97\u4f7f\u7528GrubHub\uff0c\u4e5f\u4f1a\u6253\u7535\u8bdd\u7ed9\u5b83\u3002\u4e00\u4e9b\u9910\u5385\u8001\u677f\u4e5f\u5bf9Yelp\u63d0\u51fa\u4e86\u8fd9\u79cd\u62c5\u5fe7\uff0c\u8be5\u516c\u53f8\u5217\u51fa\u4e86GrubHub\u7684\u53f7\u7801\uff0c\u636e\u526f\u603b\u8bf4\uff0cYelp\u5217\u51fa\u4e86GrubHub\u7684\u53f7\u7801\u3002\n\u8fd9\u662fGrubHub\u7684\u957f\u671f\u505a\u6cd5\uff0c\u8be5\u516c\u53f8\u6210\u7acb\u4e8e2004\u5e74\uff0c\u5728\u5728\u7ebf\u8ba2\u8d2d\u5f00\u59cb\u4e4b\u524d\u5bf9\u7535\u8bdd\u8ba2\u5355\u6536\u53d6\u4f63\u91d1\u3002\n\u5f53\u62e8\u6253GrubHub\u53f7\u7801\u65f6\uff0c\u547c\u53eb\u8005\u4f1a\u542c\u5230\u4e00\u6761\u81ea\u52a8\u6d88\u606f\uff0c\u4e0a\u9762\u5199\u7740\u201c\u63091\u4e0b\u5355\u3002\u8bf7\u63092\u4e86\u89e3\u6240\u6709\u5176\u4ed6\u4fe1\u606f\u3002\u201c\u3002\u5b83\u6ca1\u6709\u63d0\u5230GrubHub\u3002\u547c\u53eb\u8005\u63a5\u901a\u540e\uff0c\u5e73\u53f0\u53ef\u4ee5\u5411\u9910\u5385\u6536\u53d6\u8d39\u7528\u3002\u6bcf\u5bb6\u9910\u5385\u7684\u7535\u8bdd\u8ba2\u9910\u624b\u7eed\u8d39\u90fd\u662f\u6839\u636e\u5176\u5e73\u5747\u9500\u552e\u989d\u7684\u767e\u5206\u6bd4\u8ba1\u7b97\u7684\u56fa\u5b9a\u7f8e\u5143\u91d1\u989d\u3002\nGrubHub\u4f7f\u7528\u4e00\u79cd\u7b97\u6cd5(\u8be5\u7b97\u6cd5\u8003\u8651\u4e86\u8bb8\u591a\u56e0\u7d20\uff0c\u5305\u62ec\u901a\u8bdd\u7684\u957f\u5ea6)\u6765\u6536\u53d6\u8d39\u7528-\u751a\u81f3\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u5b83\u6ca1\u6709\u5bfc\u81f4\u8ba2\u5355\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u9910\u5385\u8001\u677f\u53ef\u4ee5\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5bf9\u7535\u8bdd\u6536\u8d39\u63d0\u51fa\u8d28\u7591\uff0c\u4f46\u4ed6\u4eec\u6709\u8d23\u4efb\u770b\u770b\u54ea\u4e9b\u6536\u8d39\u662f\u9519\u8bef\u7684\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u591a\u5e74\u6765\u4e00\u76f4\u9690\u85cf\u5728\u4eba\u4eec\u7684\u89c6\u7ebf\u4e2d\uff0c\u8fd9\u79cd\u505a\u6cd5\u73b0\u5728\u6b63\u53d7\u5230\u5f53\u5c40\u7684\u62a8\u51fb\u3002\n\u7ebd\u7ea6\u5e02\u8bae\u5458\u8d3e\u65af\u6c40\u00b7\u5e03\u5170\u5357\u5728\u63a5\u53d7BuzzFeed\u65b0\u95fb\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u5927\u591a\u6570\u4eba\u751a\u81f3\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u5f53\u4ed6\u4eec\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e00\u5bb6\u9910\u5385\u7684\u7535\u8bdd\u53f7\u7801\u65f6\uff0c\u5341\u6709\u516b\u4e5d\u662f\u5728\u8c03\u51fa\u8be5\u9910\u5385\u7684GrubHub\u8f6c\u53d1\u53f7\u7801\u3002\u201d\u201c\u5728\u548c\u5e73\u65f6\u671f\uff0c\u8fd9\u662f\u4e0d\u6b63\u5f53\u7684\u3002\u5728\u6218\u65f6\uff0c\u8fd9\u53ea\u662f\u4e11\u964b\u7684\u8d2a\u5a6a\u3002\u201c\u3002\n\u5468\u4e09\uff0c\u7ebd\u7ea6\u5e02\u8bae\u4f1a\u901a\u8fc7\u4e86\u4e00\u9879\u6cd5\u6848\uff0c\u7981\u6b62\u5e73\u53f0\u5bf9\u7d27\u6025\u72b6\u6001\u671f\u95f4\u6ca1\u6709\u53d1\u751f\u4ea4\u6613\u7684\u7535\u8bdd\u6536\u8d39\u3002\u5b83\u8fd8\u9650\u5236\u4e86\u5e73\u53f0\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u53ef\u80fd\u5411\u9910\u5385\u6536\u53d6\u8ba2\u5355\u548c\u9001\u8d27\u7684\u8d39\u7528\u3002\nGrubHub\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9BuzzFeed\u65b0\u95fb\uff1a\u201c\u5f53\u9910\u5385\u8001\u677f\u7b7e\u7f72\u5408\u540c\u65f6\uff0c\u6211\u4eec\u4f1a\u5411\u4ed6\u4eec\u786e\u5207\u5730\u89e3\u91ca\u8fd9\u4e00\u8fc7\u7a0b\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002\u6211\u4eec\u51e0\u4e4e\u5373\u65f6\u7ed9\u4e1a\u4e3b\u4e00\u4efd\u6240\u6709\u7535\u8bdd\u8ba2\u5355\u7684\u6210\u7ee9\u5355\uff0c\u7136\u540e\u6211\u4eec\u7ed9\u4ed6\u4eec\u56db\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u5ba1\u67e5\u8ba2\u5355\u5e76\u63d0\u51fa\u95ee\u9898\u3002\u201c\u3002\n\u5728\u53bb\u5e74\u7684\u4e00\u6b21\u6295\u8d44\u8005\u7535\u8bdd\u4f1a\u8bae\u4e0a\uff0cGrubHub\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u7279\u00b7\u9a6c\u6d1b\u5c3c(Matt Maloney)\u4e3a\u7535\u8bdd\u4f63\u91d1\u8fdb\u884c\u4e86\u8fa9\u62a4\uff0c\u8fd9\u662f\u4e00\u8d77\u6b63\u5728\u8fdb\u884c\u7684\u96c6\u4f53\u8bc9\u8bbc\u7684\u4e3b\u9898\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u4ecd\u7136\u5141\u8bb8\u9910\u5385\u901a\u8fc7\u4ed6\u4eec\u7684\u7ecf\u7406\u95e8\u6237\u5ba1\u67e5\u7535\u8bdd\u8ba2\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002\u6211\u4eec\u76f8\u4fe1\u8fd9\u662f\u516c\u5e73\u7684\u3002\u5982\u679cGrubHub\u662f\u91c7\u8d2d\u548c\u63a8\u52a8\u8ba2\u5355\u7684\u4eba\uff0c\u6211\u4eec\u5e94\u8be5\u6536\u53d6\u4f63\u91d1\u3002\u8fd9\u662f\u6211\u4eec\u591a\u5e74\u6765\u7684\u653f\u7b56\uff0c\u5e76\u5728\u6211\u4eec\u7684\u9910\u5385\u5408\u7ea6\u4e2d\u6709\u660e\u786e\u89c4\u5b9a\u3002\u201c\u3002\u4ed6\u8fd8\u8bf4\uff0c\u7535\u8bdd\u53ea\u5360\u201c\u6211\u4eec\u8ba2\u5355\u7684\u4e2a\u4f4d\u6570\u767e\u5206\u6bd4\u201d\u3002\n\u4f46\u4e00\u4e9b\u9910\u5385\u8001\u677f\u6709\u4e0d\u540c\u7684\u770b\u6cd5\u3002\u201c\u9664\u975e\u4f60\u7ee7\u7eed\u6253\u5b8c\u6240\u6709\u7684\u7535\u8bdd\uff0c\u5426\u5219\u4f60\u4f1a\u88ab\u6536\u8d39\u3002\u6211\u6ca1\u65f6\u95f4\u505a\u90a3\u4ef6\u4e8b\uff0c\u4f46\u4f60\u5fc5\u987b\u8fd9\u4e48\u505a\u3002\u5e03\u9c81\u514b\u6797\u4e24\u5bb6Patsy\u2018s\u62ab\u8428\u5e97\u7684\u8001\u677f\u6770\u57fa\u00b7\u6731\u5229\u4e9a\u8bfa\u544a\u8bc9BuzzFeed\u65b0\u95fb\uff0c\u8fd9\u662f\u65e0\u7a3d\u4e4b\u8c08\uff0c\u4f46\u5374\u5408\u60c5\u5408\u7406\u3002\n\u5728\u4e00\u6bb5\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u6253\u7ed9Patsy\u2018s\u7684\u7535\u8bdd\u5f55\u97f3\u4e2d\uff0c\u4e00\u540d\u987e\u5ba2\u8bf4\uff0c\u201c\u6211\u4e0d\u60f3\u901a\u8fc7\u7b2c\u4e09\u65b9\u3002\u201d\u4f46\u8fd9\u4f4d\u987e\u5ba2\u4f7f\u7528\u7684\u662f\u8be5\u5e73\u53f0\u63d0\u4f9b\u7684\u7535\u8bdd\u53f7\u7801-\u683c\u9c81\u5e03\u4e2d\u5fc3\u5411\u6731\u5229\u4e9a\u8bfa\u7684\u9910\u5385\u6536\u53d6\u4e867.45\u7f8e\u5143\u7684\u7535\u8bdd\u8d39\u3002\n\u6731\u5229\u4e9a\u8bfa\u8bf4\uff1a\u201c\u4eba\u4eec\u6ca1\u6709\u610f\u8bc6\u5230\u4ed6\u4eec\u8fd9\u6837\u505a\u662f\u5728\u505a\u8fd9\u4ef6\u4e8b\uff0c\u62e8\u6253\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u5c31\u662f\u5411\u9910\u5385\u6536\u53d6[\u51e0\u4e4e]8\u7f8e\u5143\u3002\u201d\n\u5e03\u9c81\u514b\u6797LoneStar\u9152\u5427\u548c\u70e7\u70e4\u5e97\u7684\u5171\u540c\u6240\u6709\u8005\u6258\u5c3c\u00b7\u8a79\u8482\u52d2\u544a\u8bc9BuzzFeed\u65b0\u95fb\uff1a\u201c\u4f60\u5de5\u4f5c\u5f97\u592a\u52aa\u529b\u4e86\uff0c\u7b80\u76f4\u662f\u75af\u4e86\u3002..\u3002\u5728\u6240\u6709\u7684\u8d39\u7528\u4e4b\u540e\uff0c\u90fd\u6ca1\u6709\u4e86\u3002\u201c\u3002\u8a79\u8482\u52d2\u8bf4\uff0c\u4ed6\u6b63\u5728\u52aa\u529b\u8ba9\u987e\u5ba2\u62e8\u6253\u9910\u5385\u81ea\u5df1\u7684\u7535\u8bdd\uff0c\u65b9\u6cd5\u662f\u5728\u6240\u6709\u9001\u8d27\u65f6\u90fd\u5305\u62ec\u5e26\u6709\u5546\u5e97\u7535\u8bdd\u53f7\u7801\u548c\u4fc3\u9500\u6d3b\u52a8\u7684\u83dc\u5355\u3002\u4f46\u8fd9\u662f\u4e00\u6b21\u8270\u96be\u7684\u6500\u767b\u3002\nLoneStar\u7684\u5171\u540c\u6240\u6709\u8005\u7279\u857e\u897f\u00b7\u5e03\u83b1\u65af\u5728\u63a5\u53d7BuzzFeed\u65b0\u95fb\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u5f53\u4f60\u4e0eGrubHub\u7b7e\u7ea6\u65f6\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u540c\u610f\u4ee5\u4f01\u4e1a\u4e3b\u7684\u8eab\u4efd\u5c06\u81ea\u5df1\u7684\u7075\u9b42\u51fa\u5356\u7ed9\u9b54\u9b3c\u3002\u201d", "note_en": "BuzzFeed News has reporters across five continents bringing you trustworthy stories about the impact of the coronavirus. To help keep this news free,   become a member  and sign up for our newsletter,  Outbreak Today .\n    Customers trying to avoid online delivery platforms like Grubhub by calling restaurants directly might be dialing phone numbers generated and advertised by those very platforms \u2014 for which restaurants are charged fees that can sometimes exceed the income the order generates. Restaurant owners and the New York City Council say the practice is further squeezing businesses already stretched thin by the  coronavirus pandemic and the lockdowns.\n \u201cIf a customer calls to place a coffee order, we\u2019re paying a $6.42 fee \u2014 for a coffee,\u201d Rafaela Negrao, co-owner of  Gourmet Kitchen in Brooklyn and the \u201c ghost kitchen\u201d  Palmito, told BuzzFeed News, explaining that she pays a flat fee per phone order. \u201cYou are paying for someone to drink your coffee. If you look at it that way, you see how much it hurts.\u201d\n Here\u2019s how phone fees work: Grubhub (which also owns Seamless, MenuPages, Tapingo, and LevelUp) generates a unique phone number for each restaurant on its platform; it appears on the restaurant\u2019s Grubhub or Seamless page and redirects to the restaurant&#39;s own phone line (a restaurant cannot list its own phone number on its Grubhub or Seamless page). The redirect number can also appear higher in Google search results (including the Google panel for that business) than the restaurant\u2019s own line. This leads some customers to call it even if they don\u2019t intend to use Grubhub. Some restaurant owners have also raised this concern about Yelp, which lists Grubhub numbers,  according to Vice.\n    This is a long-standing practice for Grubhub, which was founded in 2004 and charged a commission for phone orders before online ordering took off.\n When a Grubhub number is dialed, the caller hears an automated message that says \u201cPress 1 to place an order. Press 2 for all other information.\u201d It does not mention Grubhub. After the caller is connected, the platform can charge the restaurant a fee. Each restaurant&#39;s phone order fee is a flat dollar amount based on a percentage of its average sale.\n Grubhub charges that fee using an algorithm (which factors in a number of things, including the length of the call) \u2014 even, in some cases, when it did not result in an order. A restaurant owner can challenge a phone charge within a certain period of time, but the onus is on them to see which charges are erroneous.\n    But despite hiding in plain sight for years, that practice is now coming under fire from authorities.\n    \u201cMost people don\u2019t even realize when they google the phone number for a restaurant, 9 times out of 10, they\u2019re pulling up Grubhub\u2019s forwarding number for that restaurant,\u201d New York City Council Member Justin Brannan told BuzzFeed News. \u201cIn peacetime, it\u2019s devious. In wartime, it\u2019s just ugly greed.\u201d\n On Wednesday, the New York City Council  passed a bill prohibiting platforms from charging for telephone calls in which a transaction did not take place during the state of emergency. It also capped fees that platforms may charge restaurants for orders and deliveries during an emergency.\n A Grubhub spokesperson told BuzzFeed News: \u201cWe explain exactly how the process works to restaurant owners when they sign the contract. We give owners a transcript of all phone orders almost instantaneously, and then we give them four months to review the orders and raise questions.\u201d\n In an investor call last year, Grubhub CEO Matt Maloney defended the phone commissions, which are the subject of an ongoing  class action lawsuit, saying, \u201cWe still allow restaurants to review telephone orders via their manager portal so we are completely transparent. We believe this is fair. If Grubhub is sourcing and driving the order, we should collect a commission. This has been our policy for years and is explicitly laid out in our restaurant contracts.\u201d He also said that calls represented a \u201csingle-digit percentage of our orders.\u201d\n    But some restaurant owners have a different take. \u201cUnless you go on and go through all your phone calls, you get charged. I don\u2019t have time for that, but you have to do it. It\u2019s nonsense, but it adds up,\u201d Jackie Juliano, owner of two  Patsy\u2019s Pizzeria restaurants in Brooklyn, told BuzzFeed News.\n In a recording of a phone call made to Patsy\u2019s during the coronavirus pandemic, a customer said, \u201cI don\u2019t want to go through a third party.\u201d But the customer had used the phone number supplied by the platform \u2014 and Grubhub charged Juliano\u2019s restaurant $7.45 for that call.\n \u201cPeople don\u2019t realize they are doing this, that by dialing a phone number they\u2019re charging the restaurant [almost] $8,\u201d said Juliano.\n    Tony Gentile, co-owner of  LoneStar Bar &amp; Grill in Brooklyn, told BuzzFeed News, \u201cYou\u2019re working so hard, it\u2019s insanity. ... After all the fees, it\u2019s all gone.\u201d Gentile said he is trying to get customers to call the restaurant\u2019s own line by including menus with the store\u2019s phone number and promotions with all deliveries. But it&#39;s a hard climb.\n \u201cWhen you sign up with Grubhub, you\u2019re basically agreeing to sell your soul to the devil as a business owner,\u201d LoneStar co-owner Tracy Blaise told BuzzFeed News.", "posttime": "2020-05-19 11:34:16", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6536\u53d6,grubhub,\u9910\u5385", "title": "\u5373\u4f7f\u4f60\u8bd5\u56fe\u901a\u8fc7\u76f4\u63a5\u6253\u7535\u8bdd\u7ed9\u4f60\u6700\u559c\u6b22\u7684\u9910\u5385\u6765\u907f\u5f00GrubHub\uff0cGrubHub\u4ecd\u7136\u53ef\u80fd\u4f1a\u5411\u5b83\u6536\u53d6\u8d39\u7528", "title_en": "Even If You're Trying To Avoid Grubhub By Calling Your Favorite Restaurant Directly, Grubhub Could Still Be Charging It A Fee", "transed": 1, "url": "https://www.buzzfeednews.com/article/venessawong/grubhub-phone-order-call-fee-coronavirus", "via": "", "real_tags": ["\u6536\u53d6", "grubhub", "\u9910\u5385"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002732, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u6d4f\u89c8\u5668\u7981\u7528Cookie\u3002Wiley Online Library\u9700\u8981Cookie\u6765\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u548c\u4f7f\u7528\u5176\u4ed6\u7ad9\u70b9\u529f\u80fd\uff1b\u56e0\u6b64\uff0c\u5fc5\u987b\u542f\u7528Cookie\u624d\u80fd\u6d4f\u89c8\u7ad9\u70b9\u3002\u6709\u5173Wiley\u5982\u4f55\u4f7f\u7528Cookie\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u5728\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u4e2d\u627e\u5230\u3002", "note_en": "Cookies are disabled for this browser. Wiley Online Library requires cookies for authentication and use of other site features; therefore, cookies must be enabled to browse the site. Detailed information on how Wiley uses cookies can be found in our  Privacy Policy.", "posttime": "2020-05-19 11:16:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bdb\u53d1,regeneration,cookie", "title": "\u8102\u80aa\u5e72\u7ec6\u80de\u63d0\u53d6\u6db2\u5728\u8131\u53d1\u60a3\u8005\u6bdb\u53d1\u518d\u751f\u4e2d\u7684\u5e94\u7528", "title_en": "Hair regeneration using adipose\u2010derived stem cell extract in alopecia", "transed": 1, "url": "https://stemcellsjournals.onlinelibrary.wiley.com/doi/full/10.1002/sctm.19-0410", "via": "", "real_tags": ["\u6bdb\u53d1", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "7f2d2fa64ef6f63e79f189ea3a2d64aa.jpg", "infoid": 1002730, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u65e9\u57281\u6708\u4efd\u5c31\u8868\u793a\uff0c\u5b83\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u5c31\u63d0\u4f9b\u4e86\u5e2e\u52a9\uff0c\u5e76\u5c06\u6570\u5341\u4ebf\u5b57\u8282\u7684\u4fe1\u606f\u4ea4\u7ed9\u4e86\u8054\u90a6\u8c03\u67e5\u5c40(FBI)\u3002\n\u8033\u673a\u63d2\u5b54\u4e0d\u89c1\u4e86\uff0c\u7269\u7406\u6309\u952e\u5feb\u8981\u51fa\u6765\u4e86\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u4e2a\u53d8\u5316\u5373\u5c06\u5230\u6765\uff0c\u5b83\u5c06\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u6211\u4eec\u4f7f\u7528iPhone\u7684\u65b9\u5f0f\u3002\n\u82f9\u679c\u53ef\u80fd\u4f1a\u7ed9\u4e0b\u4e00\u4ee3iPad\u63d0\u4f9b\u66f4\u5927\u768410.8\u82f1\u5bf8\u5c4f\u5e55\uff0c\u540c\u65f6\u4e5f\u4f1a\u52a0\u5927iPad mini\u7684\u5c3a\u5bf8\u3002\n\u8fd9\u573a\u6d41\u884c\u75c5\u6b63\u5728\u5e2e\u52a9\u5b89\u5353\u8fce\u6765\u540e\u9ad8\u7aef\u65f6\u4ee3\uff0c\u4e09\u661f(Samsung)\u548c\u5c0f\u7c73(Xiaomi)\u7684\u624b\u673a\u5728\u9500\u91cf\u4e0a\u5904\u4e8e\u9886\u5148\u5730\u4f4d\u3002\n\u82f9\u679ciPhone SE\u662f\u6700\u8fd1\u53d1\u5e03\u7684\u548cBodyGuardz\u5f88\u5feb\u5c31\u53d1\u8d77\u4e86\u51e0\u8d77\u6848\u4ef6\u548c\u5c4f\u5e55\u4fdd\u62a4\u9009\u9879\u3002\u8fd9\u4e9b\u6848\u4ef6\u6709\u5176\u72ec\u7279\u7684\u7279\u70b9\uff0c\u5305\u62ec\u96c6\u6210\u6ed1\u51fa..\u3002\nFfltter\u73b0\u5728\u9ed8\u8ba4\u4f7f\u7528\u82f9\u679c\u7684Metal API\u6765\u8bbf\u95eeiOS GPU\uff0c\u5e26\u6765\u66f4\u5feb\u7684\u52a8\u753b\u6548\u679c\uff0c\u5e76\u4e14\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\u3002\n\u6839\u636e\u7f51\u7edc\u5e94\u7528\uff0c\u684c\u9762Linux\u6b63\u5728\u5236\u9020\u6fc0\u589e\u3002\u4f46Windows\u4ecd\u7136\u7edf\u6cbb\u7740\u684c\u9762\u548c\u5176\u4ed6\u6570\u636e\u8868\u660eMacOS\uff0cChrome OS\uff0c\u548cLinux\u4ecd\u7136\u662f\u8fdc\u8fdc\u843d\u5728\u540e\u9762\uff0c\u867d\u7136..\u3002\n\u6211\u4eec\u73b0\u5728\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4f1a\u770b\u5230iOS14\u3001iPadOS14\u3001WatchOS7\u548cMacOS10.16\u3002\n\u4f60\u5bf9\u8fd9\u4ef6\u4e8b\u72b9\u8c6b\u4e0d\u51b3\u5417\uff1f\u6700\u65b0\u7684\u4ef7\u683c\u82f9\u679c\u548c\u4e09\u661f\u7684\u65d7\u8230\u4ea7\u54c1\uff1f\u8003\u8651\u4e00\u4e0b\u8fd9\u4e9b\u8d1f\u62c5\u5f97\u8d77\u7684\u5176\u4ed6\u9009\u62e9\u3002\u4ece400\u7f8e\u5143\u964d\u5230\u81ea\u7531\u7684\uff0c\u6211\u4eec\u7684\u9009\u62e9\u751a\u81f3\u5305\u62ec\u4e00\u5bf9\u592b\u5987..\u3002", "note_en": "Apple said back in January that it helped within hours and handed over to the FBI gigabytes of information.\n  Headphone jack is gone, physical buttons are on the way out. But there&#39;s another change coming that will radically change the way we use our iPhones.\n  Apple could be giving its next iPad a bigger, 10.8-inch screen and upsizing the iPad mini too.\n  The pandemic is helping usher in Android&#39;s post-premium era, with phones from Samsung and Xiaomi leading sales.\n  The\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApple\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiPhone\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twas\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecently\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treleased\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tand\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBodyGuardz\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquickly\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlaunched\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tseveral\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tand\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscreen\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprotector\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThe\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcases\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thave\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunique\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfeatures,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tincluding\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tan\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tintegrated\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tslide-out\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...\n  Flutter now uses Apple&#39;s Metal API for iOS GPU access by default, brings faster animations and uses less memory.\n  According\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNet\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApplications,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesktop\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLinux\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tis\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaking\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsurge.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBut\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWindows\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstill\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesktop\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tand\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tother\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuggests\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthat\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmacOS,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tChrome\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tOS,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tand\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLinux\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tare\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstill\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tway\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbehind,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...\n  We now know when we&#39;ll see iOS 14, iPadOS 14, WatchOS 7, and MacOS 10.16.\n  Are\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tyou\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalking\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tat\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprices\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tof\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlatest\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApple\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tand\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSamsung\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflagships?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConsider\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tone\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tof\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthese\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taffordable\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talternatives.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$400\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tright\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdown\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfree,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tour\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpicks\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teven\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinclude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcouple\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...", "posttime": "2020-05-19 10:31:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "iphone,upset,\u82f9\u679c", "title": "\u4eba\u4eec\u5bf9iPhone\u95ea\u7535\u6539\u53d8\u7684\u60f3\u6cd5\u611f\u5230\u4e0d\u5b89\uff0c\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684", "title_en": "People are upset by the idea of iPhone Lightning change, and rightly so", "transed": 1, "url": "https://www.zdnet.com/article/people-are-really-upset-by-the-idea-of-this-future-iphone-change-and-rightly-so/", "via": "", "real_tags": ["iphone", "upset", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "2eaa35a5ea5ae336f70180f84fbcceb4.jpg", "infoid": 1002729, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9(\u6863\u6848\u56fe\u7247\uff1a\u8def\u900f\u793e)\u65e7\u91d1\u5c71\uff1a\u7531\u4e8e\u67d0\u4e9b\u79d1\u6280\u516c\u53f8\uff0c\u5982\u63a8\u7279\uff0c\u66f4\u559c\u6b22\u5458\u5de5\u6c38\u8fdc\u5728\u5bb6\u5de5\u4f5c\uff0c\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9\u8b66\u544a\u8bf4\uff0c\u5c06\u8fdc\u7a0b\u5de5\u4f5c\u6c38\u4e45\u5316\u53ef\u80fd\u4f1a\u5bf9\u5458\u5de5\u7684\u793e\u4ea4\u548c\u5fc3\u7406\u5065\u5eb7\u4ea7\u751f\u4e25\u91cd\u5f71\u54cd\uff0c\u56e0\u4e3a\u865a\u62df\u89c6\u9891\u901a\u8bdd\u4e0d\u80fd\u53d6\u4ee3\u9762\u5bf9\u9762\u7684\u4f1a\u8bae\u3002\u7eb3\u5fb7\u62c9\u8bf4\uff0c\u5168\u8fdc\u7a0b\u8bbe\u7f6e\u5c06\u662f\u7528\u4e00\u4e2a\u6559\u6761\u53d6\u4ee3\u53e6\u4e00\u4e2a\u6559\u6761\u3002\u5026\u6020\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f\u5fc3\u7406\u5065\u5eb7\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f\u8fd9\u79cd\u8fde\u901a\u6027\u548c\u793e\u533a\u5efa\u8bbe\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f\u6211\u611f\u89c9\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u563f\uff0c\u4e5f\u8bb8\u6211\u4eec\u6b63\u5728\u70e7\u6bc1\u6211\u4eec\u5728\u8fd9\u4e2a\u9636\u6bb5\u5efa\u7acb\u8d77\u6765\u7684\u4e00\u4e9b\u793e\u4f1a\u8d44\u672c\uff0c\u6211\u4eec\u90fd\u5728\u8fdc\u7a0b\u5de5\u4f5c\u3002\u62a5\u9053\u63f4\u5f15\u7eb3\u5fb7\u62c9\u7684\u8bdd\u8bf4\uff0c\u8fd9\u8981\u91c7\u53d6\u4ec0\u4e48\u63aa\u65bd\uff1f\u5728\u4ed6\u53d1\u8868\u8bc4\u8bba\u4e4b\u524d\uff0cTwitter\u5141\u8bb8\u4ed6\u7684\u5458\u5de5\u6c38\u8fdc\u5728\u5bb6\u5de5\u4f5c\uff0c\u5373\u4f7f\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7ed3\u675f\u540e\u4e5f\u662f\u5982\u6b64\u3002\u5728Facebook\u3001Alphabet(\u8c37\u6b4c)\u548c\u5176\u4ed6\u516c\u53f8\u8981\u6c42\u5458\u5de5\u5728\u5bb6\u5de5\u4f5c\u81f3\u5e74\u5e95\u540e\uff0cTwitter\u52a0\u5927\u4e86\u8d4c\u6ce8\u3002\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5fae\u8f6f\u5df2\u7ecf\u5c06\u5176\u5728\u5bb6\u5de5\u4f5c\u7684\u653f\u7b56\u5ef6\u957f\u5230\u81f3\u5c1110\u6708\u4efd\u3002\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u7684\u80a1\u4ef7\u4eca\u5e74\u4e0a\u6da8\u4e8614%\uff0c\u516c\u53f8\u62e5\u6709\u8fd11400\u4ebf\u7f8e\u5143\u7684\u73b0\u91d1\u3002\u5fae\u8f6f\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\u5728\u80a1\u7968\u56de\u8d2d\u548c\u6d3e\u606f\u4e0a\u82b1\u8d39\u4e86100\u4ebf\u7f8e\u5143\uff0c\u8f83\u4e0a\u5e74\u540c\u671f\u589e\u957f\u903e30%\u3002\u7eb3\u5fb7\u62c9\u8bf4\uff1a\u6211\u4eec\u5c06\u5927\u80c6\u5206\u914d\u548c\u6536\u8d2d\u3001\u5efa\u9020\u3001\u521b\u65b0\u3001\u5408\u4f5c\uff0c\u4e0d\u7ba1\u600e\u6837\u3002\u6211\u4eec\u8fd8\u5c06\u786e\u4fdd\u6211\u4eec\u6709\u80fd\u529b\u4e3a\u9700\u8981\u5e2e\u52a9\u7684\u5c0f\u4f01\u4e1a\u548c\u5176\u4ed6\u7ec4\u7ec7\u63d0\u4f9b\u4fe1\u8d37\u3002\u5fae\u8f6f(Microsoft)\u4e0a\u5468\u7b7e\u7f72\u4e86\u4e00\u9879\u6700\u7ec8\u534f\u8bae\uff0c\u6536\u8d2d\u603b\u90e8\u4f4d\u4e8e\u82f1\u56fd\u7684Metaswitch Networks\u3002Metaswitch Networks\u662f\u4e00\u5bb6\u4e3a\u8fd0\u8425\u5546\u63d0\u4f9b\u865a\u62df\u5316\u7f51\u7edc\u8f6f\u4ef6\u548c\u8bed\u97f3\u3001\u6570\u636e\u548c\u901a\u4fe1\u89e3\u51b3\u65b9\u6848\u7684\u9886\u5148\u4f9b\u5e94\u5546\uff0c\u91d1\u989d\u4e0d\u8be6\u3002\u8be5\u516c\u53f8\u8fd8\u63a8\u51fa\u4e86\u65b0\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u65e8\u5728\u5e2e\u52a9\u5370\u5ea6\u4e2d\u5c0f\u578b\u4f01\u4e1a(SMB)\u5728\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u4e2d\u4fdd\u6301\u4e1a\u52a1\u8fde\u7eed\u6027\uff0c\u5e76\u5f00\u59cb\u4ed6\u4eec\u7684\u4e91\u91c7\u7528\u4e4b\u65c5\u3002", "note_en": "Microsoft CEO Satya Nadella (File photo: Reuters)  SAN FRANCISCO: As certain tech companies like Twitter prefer their employees to work from home forever, Microsoft CEO Satya Nadella has warned that making remote work permanent could have serious consequences for social interaction and mental health for workers as virtual video calls cannot replace in-person meetings.  Nadella said that an all-remote setup would be &#34;replacing one dogma with another dogma&#34;.  &#34;What does burnout look like? What does mental health look like? What does that connectivity and the community building look like? One of the things I feel is, hey, maybe we are burning some of the social capital we built up in this phase where we are all working remote. What&#39;s the measure for that?&#34; Nadella was quoted as saying.  His comment came after Twitter granted an option to his staff to work from home &#39;forever&#39; even after the COVID-19 pandemic ends.  Twitter upped the ante after Facebook, Alphabet (Google) and others have asked their employees to work from home till year-end.   More on Covid-19   Microsoft has extended its work-from-home policy until at least October.  The tech giant&#39;s stock price is up 14 per cent this year and the company has nearly $140 billion in cash.  Microsoft spent $10 billion in its most recent quarter on share buybacks and dividends, up more than 30 per cent from the year before.  &#34;We&#39;re going to boldly allocate and acquire, build, innovate, partner, whatever,&#34; said Nadella.  &#34;We are also going to make sure that we have the ability to do credit for small businesses and other organizations that need that help&#34;.  Microsoft last week signed a definitive agreement to acquire UK-based Metaswitch Networks, a leading provider of virtualised network software and voice, data and communications solutions for operators, for an undisclosed sum.  The company also launched of new solutions designed to help Indian small and medium businesses (SMBs) maintain business continuity and embark on their Cloud adoption journeys amid the COVID-19 crisis.", "posttime": "2020-05-19 10:17:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u5fae\u8f6f,\u635f\u5bb3,ceo", "title": "\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9\uff1a\u957f\u671f\u5728\u5bb6\u5de5\u4f5c\u4f1a\u635f\u5bb3\u5fc3\u7406\u5065\u5eb7", "title_en": "Microsoft CEO Satya Nadella: Permanently Working From Home Can Be Damaging For Mental Health", "transed": 1, "url": "https://timesofindia.indiatimes.com/business/india-business/permanent-work-from-home-damaging-for-workers-well-being-satya-nadella/articleshow/75798510.cms", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "\u635f\u5bb3", "ceo"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002728, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u63a8\u5e7f\u5f00\u653e\u786c\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u91cd\u8981\u7684\u662f\u8981\u8ba9\u8bbe\u8ba1\u8005\u6e05\u695a\u5730\u77e5\u9053\u4ed6\u4eec\u7684\u8bb8\u53ef\u8bc1\u5b9e\u9645\u4e0a\u53ef\u4ee5\u63a7\u5236\u4ed6\u4eec\u7684\u8bbe\u8ba1\u7684\u7a0b\u5ea6\u3002\u6839\u636e\u7f8e\u56fd\u6cd5\u5f8b\u548c\u8bb8\u591a\u5176\u4ed6\u5730\u65b9\u7684\u6cd5\u5f8b\uff0c\u7248\u6743\u4e0d\u9002\u7528\u4e8e\u7535\u5b50\u6216\u7269\u7406\u8bbe\u8ba1\u3002\u4e13\u5229\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5176\u7ed3\u679c\u662f\uff0c\u5f00\u653e\u786c\u4ef6\u8bb8\u53ef\u901a\u5e38\u53ef\u4ee5\u7528\u6765\u9650\u5236\u8ba1\u5212\uff0c\u4f46\u4e0d\u80fd\u9650\u5236\u5236\u9020\u7684\u8bbe\u5907\uff0c\u751a\u81f3\u4e0d\u80fd\u9650\u5236\u4e0d\u662f\u539f\u59cb\u8bbe\u8ba1\u6587\u672c\u526f\u672c\u7684\u76f8\u540c\u8bbe\u8ba1\u7684\u91cd\u8ff0\u3002\u7f8e\u56fd\u7248\u6743\u6cd5\u7684\u9002\u7528\u6761\u6b3e\u662f17.102(B)\uff0c\u5176\u4e2d\u89c4\u5b9a\uff1a\n\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5bf9\u539f\u521b\u4f5c\u54c1\u7684\u7248\u6743\u4fdd\u62a4\u90fd\u4e0d\u4f1a\u5ef6\u4f38\u5230\u4efb\u4f55\u60f3\u6cd5\u3001\u7a0b\u5e8f\u3001\u8fc7\u7a0b\u3001\u7cfb\u7edf\u3001\u64cd\u4f5c\u65b9\u6cd5\u3001\u6982\u5ff5\u3001\u539f\u5219\u6216\u53d1\u73b0\uff0c\u65e0\u8bba\u5b83\u662f\u4ee5\u4ec0\u4e48\u5f62\u5f0f\u63cf\u8ff0\u3001\u89e3\u91ca\u3001\u8bf4\u660e\u6216\u4f53\u73b0\u5728\u8fd9\u4e9b\u4f5c\u54c1\u4e2d\u7684\u3002\n\u8fd9\u6837\u505a\u7684\u6548\u679c\u662f\uff0c\u8bb8\u53ef\u8bc1\u9650\u5236\u4e86\u539f\u7406\u56fe\u6216\u6fc0\u5149\u5207\u5272\u56fe\u7684\u53d1\u5e03\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u539f\u7406\u56fe\u6765\u5236\u9020\u51fa\u552e\u7684\u8bbe\u5907\u3002\u4f60\u53ef\u4ee5\u63a7\u5236\u4eba\u4eec\u5982\u4f55\u7528\u4f60\u7684\u8bb8\u53ef\u8bc1\u9500\u552e\u8fd9\u4e9b\u8ba1\u5212\uff0c\u4f46\u4f60\u4e0d\u80fd\u963b\u6b62\u4ed6\u4eec\u7528\u4f60\u7684\u975e\u5546\u4e1a\u8bb8\u53ef\u8bc1\u5546\u4e1a\u5316\u5236\u9020\u548c\u9500\u552e\u8fd9\u4e9b\u8bbe\u5907\uff0c\u9664\u975e\u4f60\u6709\u4e13\u5229\u3002\n\u4f46\u662f\uff0c\u786c\u4ef6\u7684\u67d0\u4e9b\u5143\u7d20\u662f\u53ef\u53d7\u7248\u6743\u4fdd\u62a4\u7684\uff0c\u4f8b\u5982\u95e8\u9635\u5217\u7a0b\u5e8f\u548c\u5b89\u88c5\u5728\u8bbe\u5907\u4e2d\u7684\u8f6f\u4ef6\u3002\u5f53\u7136\uff0c\u5173\u4e8e\u4ec0\u4e48\u53ef\u4ee5\u4fdd\u62a4\u4ee5\u53ca\u5982\u4f55\u4fdd\u62a4\u7684\u6cd5\u5f8b\u56e0\u56fd\u5bb6\u800c\u5f02\u3002\n\u6211\u4eec\u5efa\u8bae\u6240\u6709\u5236\u7247\u4eba\u5c06\u5f00\u653e\u786c\u4ef6\u8bb8\u53ef\u8bc1\u5e94\u7528\u4e8e\u5176\u4f5c\u54c1\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\n\u6cd5\u5f8b\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u56e0\u6b64\u4eca\u5929\u4e0d\u53d7\u6cd5\u5f8b\u9650\u5236\u7684\u4e1c\u897f\u53ef\u80fd\u662f\u660e\u5929\u6cd5\u5f8b\u4fdd\u7559\u7684\u6240\u6709\u6743\u5229\u3002\u8bb8\u53ef\u8bc1\u7684\u5b58\u5728\u901a\u8fc7\u660e\u786e\u6388\u4e88\u53ef\u80fd\u9690\u542b\u5728\u4eca\u5929\u7684\u6cd5\u5f8b\u4e2d\u800c\u4e0d\u662f\u660e\u5929\u7684\u6cd5\u5f8b\u4e2d\u7684\u6743\u5229\uff0c\u5e2e\u52a9\u4fdd\u62a4\u514d\u53d7\u8fd9\u79cd\u53d8\u5316\u7684\u5f71\u54cd\u3002\n\u4e0d\u540c\u7684\u5dde\u6216\u6c11\u65cf\u7684\u6cd5\u5f8b\u662f\u4e0d\u4e00\u6837\u7684\u3002\u8bb8\u53ef\u8bc1\u7684\u5b58\u5728\u53ef\u4ee5\u5728\u5730\u70b9\u53d1\u751f\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u6beb\u4e0d\u542b\u7cca\u5730\u6388\u4e88\u6743\u5229\u3002\n\u5f00\u653e\u786c\u4ef6\u7ec4\u7ec7OpenHardware.org\u548c\u7f16\u8f91\u6b64\u5185\u5bb9\u7684\u4eba\u5458\u4e0d\u662f\u60a8\u7684\u6cd5\u5f8b\u987e\u95ee\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u4e0e\u60a8\u7684\u7b7e\u7ea6\u6cd5\u5f8b\u987e\u95ee\u4e00\u8d77\u5ba1\u9605\u6b64\u4fe1\u606f\u3002\u90a3\u662f\u552f\u4e00\u88ab\u5141\u8bb8\u7ed9\u4f60\u6cd5\u5f8b\u5efa\u8bae\u7684\u4eba\u3002", "note_en": "In promoting Open Hardware, it is important to make is clear to designers the extent to which their licenses actually can control their designs. Under U.S. law, and law in many other places, copyright does not apply to electronic or physical designs.  Patents do. The result is that an Open Hardware license can in general be used to restrict the plans but not the manufactured devices or even restatements of the same design that are not textual copies of the original. The applicable section of U.S. copyright law is 17.102(b), which says:\n In no case does copyright protection for an original work of authorship extend to any idea, procedure, process, system, method of operation, concept, principle, or discovery, regardless of the form in which it is described, explained, illustrated, or embodied in such work.\n  The effect of this is that the license restricts the  publication of a schematic or a laser-cutting plan, rather than the use of the schematic to make devices that are sold. You can control how people sell the plans with your license, but you can&#39;t keep them from commercially manufacturing and selling the devices with your non-commercial license, unless you have a patent.\n However, certain elements of hardware  are copyrightable, for example gate-array programs and the software that is installed in the devices. And of course laws on what can be protected, and how, differ from nation to nation.\n We recommend that all producers apply an Open Hardware License to their work, for these reasons:\n Laws can change, and thus something that is unrestricted under the law today might be &#34;all rights reserved&#34; under the law tomorrow. The presence of a license helps to protect against such a change by explicitly granting rights that might otherwise be implicit in today&#39;s law and not tomorrow&#39;s.\n Laws are not the same from one state or nation to another. The presence of a license can work to grant rights unambiguously despite changes of venue.\n  OpenHardware.org, the Open Hardware organization, and the people who edit this content are  not your legal counsel. You are encouraged to go over this information with your contracted legal counsel. That is the only person who is allowed to give you legal advice.", "posttime": "2020-05-19 10:16:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u7248\u6743\u4fdd\u62a4,isn,\u6cd5\u5f8b", "title": "\u786c\u4ef6\u901a\u5e38\u4e0d\u53d7\u7248\u6743\u4fdd\u62a4", "title_en": "Hardware Isn't Generally Copyrightable", "transed": 1, "url": "https://web.archive.org/web/20120114234704/http://wiki.openhardware.org/Hardware_Isn%27t_Generally_Copyrightable", "via": "", "real_tags": ["\u786c\u4ef6", "\u7248\u6743\u4fdd\u62a4", "isn", "\u6cd5\u5f8b"]}, {"category": "", "categoryclass": "", "imagename": "5e23f8e7c96e887d989aa8507a83cd5f.jpeg", "infoid": 1002727, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5c06\u53d1\u5e03Spleeter\uff0c\u4ee5\u5e2e\u52a9\u97f3\u4e50\u4fe1\u606f\u68c0\u7d22(MIR)\u7814\u7a76\u56e2\u4f53\u5229\u7528\u6700\u5148\u8fdb\u7684\u6e90\u5206\u79bb\u7b97\u6cd5\u7684\u529b\u91cf\u3002\u5b83\u4ee5\u57fa\u4e8eTensorFlow\u7684Python\u5e93\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u5e26\u6709\u7528\u4e8e2\u30014\u548c5\u4e2a\u8bcd\u5e72\u5206\u79bb\u7684\u9884\u5148\u8bad\u7ec3\u7684\u6a21\u578b\u3002Spleeter\u5c06\u5728\u4ee3\u5c14\u592b\u7279\u4e3e\u884c\u76842019\u5e74ISMIR\u4f1a\u8bae\u4e0a\u8fdb\u884c\u5c55\u793a\u548c\u73b0\u573a\u6f14\u793a\u3002\n\u867d\u7136\u4e0d\u662f\u4e00\u4e2a\u5e7f\u4e3a\u4eba\u77e5\u7684\u8bdd\u9898\uff0c\u4f46\u51e0\u5341\u5e74\u6765\uff0c\u6e90\u5206\u79bb\u95ee\u9898\u5df2\u7ecf\u5f15\u8d77\u4e86\u5927\u91cf\u97f3\u4e50\u4fe1\u53f7\u7814\u7a76\u4eba\u5458\u7684\u5174\u8da3\u3002\u5b83\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u89c2\u5bdf\u5f00\u59cb\uff1a\u97f3\u4e50\u5f55\u97f3\u901a\u5e38\u662f\u51e0\u4e2a\u5355\u72ec\u7684\u4e50\u5668\u8f68\u9053(\u4e3b\u5531\u3001\u9f13\u3001\u8d1d\u65af\u3001\u94a2\u7434\u7b49)\u7684\u6df7\u5408\u3002\u97f3\u4e50\u6e90\u5206\u79bb\u7684\u4efb\u52a1\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6df7\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u6062\u590d\u8fd9\u4e9b\u5355\u72ec\u7684\u97f3\u8f68(\u6709\u65f6\u79f0\u4e3a\u8bcd\u5e72)\u5417\uff1f\u8fd9\u6709\u8bb8\u591a\u6f5c\u5728\u7684\u5e94\u7528\uff1a\u601d\u8003\u6df7\u97f3\u3001\u6df7\u97f3\u3001\u4e3b\u52a8\u503e\u542c\u3001\u6559\u80b2\u76ee\u7684\uff0c\u4f46\u4e5f\u6709\u5176\u4ed6\u4efb\u52a1\u7684\u9884\u5904\u7406\uff0c\u5982\u8f6c\u5f55\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u7684\u5927\u8111\u975e\u5e38\u5584\u4e8e\u5206\u79bb\u4eea\u5668\u3002\u53ea\u8981\u4e13\u6ce8\u4e8e\u8fd9\u9996\u66f2\u5b50\u4e2d\u7684\u4e00\u79cd\u4e50\u5668(\u6bd4\u5982\u8bf4\u4e3b\u5531)\uff0c\u4f60\u5c31\u80fd\u975e\u5e38\u6e05\u6670\u5730\u542c\u5230\u5b83\u4e0e\u5176\u4ed6\u4e50\u5668\u7684\u58f0\u97f3\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5206\u79bb\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u542c\u5230\u6240\u6709\u5176\u4ed6\u7684\u90e8\u5206\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u65e0\u6cd5\u51c6\u786e\u6062\u590d\u6df7\u5408\u5728\u4e00\u8d77\u7684\u5404\u4e2a\u78c1\u9053\u3002\u56e0\u6b64\uff0c\u6311\u6218\u662f\u8981\u5c3d\u53ef\u80fd\u5730\u63a5\u8fd1\u5b83\u4eec\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e0d\u9020\u6210\u592a\u591a\u626d\u66f2\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5730\u63a5\u8fd1\u539f\u4ef6\u3002\n\u591a\u5e74\u6765\uff0c\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u6570\u5341\u4e2a\u624d\u534e\u6a2a\u6ea2\u7684\u7814\u7a76\u56e2\u961f\u63a2\u7d22\u4e86\u8bb8\u591a\u7b56\u7565\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u6bb5\u8ff7\u4eba\u7684\u65c5\u7a0b\u611f\u5174\u8da3\uff0c\u4f60\u5e94\u8be5\u53bb\u9605\u8bfb\u8fd9\u7bc7\u6587\u732e\u6982\u8ff0\uff0c\u6216\u8005\u8fd9\u7bc7\u3002\u6700\u8fd1\uff0c\u8fdb\u5c55\u7684\u901f\u5ea6\u53d6\u5f97\u4e86\u4e00\u4e9b\u5de8\u5927\u7684\u98de\u8dc3\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u7684\u8fdb\u6b65\u3002\u4e3a\u4e86\u4fdd\u6301\u8ddf\u8e2a\uff0c\u4eba\u4eec\u4e00\u76f4\u5728\u56fd\u9645\u8bc4\u4f30\u6d3b\u52a8\u4e2d\u6bd4\u8f83\u4ed6\u4eec\u7684\u7b97\u6cd5\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5982\u4f55\u77e5\u9053Spleeter\u7684\u6027\u80fd\u4e0e\u6700\u597d\u7684\u5efa\u8bae\u7b97\u6cd5\u7684\u6027\u80fd\u76f8\u5339\u914d\u7684\u539f\u56e0\u3002\n\u6b64\u5916\uff0cSpleeter\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5982\u679c\u60a8\u8fd0\u884c\u7684\u662fGPU\u7248\u672c\uff0c\u90a3\u4e48\u53ef\u4ee5\u9884\u671f\u5206\u79bb\u901f\u5ea6\u6bd4\u5b9e\u65f6\u5feb100\u500d\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\u6211\u8981\u8bf4\u7684\u53ef\u4e0d\u5c11\u3002\u5982\u679c\u60a8\u662f\u4ece\u4e8b\u97f3\u4e50\u4fe1\u606f\u68c0\u7d22\u7684\u7814\u7a76\u4eba\u5458\uff0c\u5e76\u4e14\u4e00\u76f4\u8ba4\u4e3a\u6e90\u5206\u79bb\u5de5\u4ef6\u4e0d\u9002\u5408\u4f5c\u4e3a\u7ba1\u9053\u4e2d\u7684\u9884\u5904\u7406\u6b65\u9aa4\u2026\u2026\u3002\u55ef\uff0c\u4f60\u4e5f\u8bb8\u5e94\u8be5\u91cd\u65b0\u8003\u8651\u4e00\u4e0b\uff0c\u8bd5\u8bd5\u65af\u666e\u83b1\u7279\u3002\u5982\u679c\u4f60\u662f\u4e00\u540d\u97f3\u4e50\u9ed1\u5ba2\uff0c\u60f3\u8981\u7528Spleeter\u6784\u5efa\u4e00\u4e9b\u5f88\u68d2\u7684\u4e1c\u897f\uff0c\u90a3\u5c31\u53bb\u505a\u5427\u3002\u5b9e\u9645\u4e0a\uff0cSpleeter\u662f\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u6388\u6743\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u4ee5\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u60a8\u8ba1\u5212\u5728\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u6b4c\u66f2\u4e0a\u4f7f\u7528Spleeter\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e8b\u5148\u83b7\u5f97\u4e86\u7248\u6743\u6240\u6709\u8005\u7684\u9002\u5f53\u6388\u6743\u3002\n\u5728\u5f15\u64ce\u76d6\u4e0b\uff0cSpleeter\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u548c\u7cbe\u5fc3\u5236\u4f5c\u7684\u5f15\u64ce\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u52aa\u529b\u4f7f\u5176\u771f\u6b63\u6613\u4e8e\u4f7f\u7528\u3002\u5b9e\u9645\u7684\u5206\u79bb\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2a\u547d\u4ee4\u884c\u6765\u5b9e\u73b0\uff0c\u5b83\u5e94\u8be5\u53ef\u4ee5\u5728\u60a8\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5de5\u4f5c\uff0c\u800c\u4e0d\u7ba1\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48\u3002\u5bf9\u4e8e\u66f4\u9ad8\u7ea7\u7684\u7528\u6237\uff0c\u6709\u4e00\u4e2a\u540d\u4e3aSeparator\u7684python API\u7c7b\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u64cd\u4f5c\u5230\u60a8\u5e38\u7528\u7684\u7ba1\u9053\u4e2d\u3002\n\u6211\u4eec\u5df2\u7ecf\u7aed\u5c3d\u5168\u529b\u62ff\u51fa\u4e00\u4efd\u8be6\u5c3d\u7684\u6587\u4ef6\u3002\u8bf7\u4e0d\u8981\u72b9\u8c6b\u901a\u8fc7\u4f20\u7edf\u7684GitHub\u5de5\u5177\u5411\u6211\u4eec\u53cd\u9988\u3001\u6307\u51fa\u95ee\u9898\u6216\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\uff01\n\u6211\u4eec\u81f4\u529b\u4e8e\u6e90\u4ee3\u7801\u5206\u79bb\u5df2\u7ecf\u6709\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86(\u6211\u4eec\u5df2\u7ecf\u5728ICASSP 2019\u4e0a\u6709\u4e86\u4e00\u4efd\u51fa\u7248\u7269)\u3002\u6211\u4eec\u5df2\u7ecf\u5c06Spleeter\u4e0eOpen-unMix(Inria\u7684\u4e00\u4e2a\u7814\u7a76\u56e2\u961f\u6700\u8fd1\u53d1\u5e03\u7684\u53e6\u4e00\u4e2a\u5f00\u6e90\u6a21\u578b)\u8fdb\u884c\u4e86\u57fa\u51c6\u6bd4\u8f83\uff0c\u5e76\u62a5\u544a\u4e86\u901f\u5ea6\u63d0\u9ad8\u540e\u6027\u80fd\u7565\u6709\u63d0\u9ad8(\u8bf7\u6ce8\u610f\uff0c\u8bad\u7ec3\u6570\u636e\u96c6\u4e0d\u540c)\u3002\n\u548c\u5e73\u53f7\u7814\u7a76\u4eba\u5458\u9762\u4e34\u7684\u786c\u9650\u5236\u4e4b\u4e00\u662f\u7531\u4e8e\u7248\u6743\u95ee\u9898\u7f3a\u4e4f\u516c\u5f00\u53ef\u7528\u7684\u6570\u636e\u96c6\u3002\u5728Deezer\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u76ee\u5f55\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5229\u7528\u5b83\u6765\u6784\u5efaSpleeter\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u5171\u4eab\u8fd9\u4e9b\u6570\u636e\uff0c\u6240\u4ee5\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u53ef\u8bbf\u95ee\u7684\u5de5\u5177\u662f\u6211\u4eec\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u590d\u5236\u6211\u4eec\u7684\u7814\u7a76\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u7ad9\u5728\u66f4\u9053\u5fb7\u7684\u7acb\u573a\u4e0a\uff0c\u6211\u4eec\u8ba4\u4e3a\u7814\u7a76\u4eba\u5458\u4e4b\u95f4\u4e0d\u5e94\u8be5\u56e0\u4e3a\u4ed6\u4eec\u83b7\u5f97\u6216\u7f3a\u4e4f\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u6750\u6599\u800c\u8fdb\u884c\u4e0d\u516c\u5e73\u7684\u7ade\u4e89\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u57f9\u8bad\u8fd9\u7c7b\u6a21\u578b\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u901a\u8fc7\u505a\u4e00\u6b21\u5e76\u5206\u4eab\u7ed3\u679c\uff0c\u6211\u4eec\u5e0c\u671b\u7701\u53bb\u522b\u4eba\u7684\u4e00\u4e9b\u9ebb\u70e6\u548c\u8d44\u6e90\u3002\n\u81ea\u4ece\u6211\u4eec\u53d1\u5e03Spleeter\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u6536\u5230\u4e86\u5f88\u591a\u53cd\u9988\uff0c\u5176\u4e2d\u5927\u591a\u6570\u90fd\u662f\u975e\u5e38\u79ef\u6781\u7684\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u770b\u5230\u4eba\u4eec\u5bf9\u6211\u4eec\u7684\u5de5\u4f5c\u7ed9\u4e88\u4e86\u5982\u6b64\u591a\u7684\u5173\u6ce8\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u53cd\u5e94\u4e2d\u7684\u4e00\u4e9b\u53ef\u80fd\u6709\u70b9\u8fc7\u5ea6\u70ed\u60c5\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u91cd\u7533\u51e0\u4ef6\u4e8b\u3002Spleeter\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u4f46\u662f\u6211\u4eec\u7edd\u4e0d\u80fd\u58f0\u79f0\u5df2\u7ecf\u201c\u89e3\u51b3\u201d\u4e86\u6e90\u5206\u79bb\u95ee\u9898\u3002\u6570\u4ee5\u767e\u8ba1\u7684\u7814\u7a76\u4eba\u5458\u548c\u5de5\u7a0b\u5e08\u5de5\u4f5c\u4e86\u51e0\u5341\u5e74\uff0c\u53d6\u5f97\u4e86\u8fdb\u5c55\uff0c\u5e76\u5efa\u9020\u4e86Spleeter\u6240\u57fa\u4e8e\u7684\u5de5\u5177\u3002\u8fd9\u662f\u6211\u4eec\u5bf9\u4e00\u4e2a\u751f\u52a8\u3001\u4e0d\u65ad\u589e\u957f\u548c\u5f00\u653e\u7684\u751f\u6001\u7cfb\u7edf\u7684\u8d21\u732e\uff0c\u5e0c\u671b\u5176\u4ed6\u4eba\u4e5f\u80fd\u5728\u6b64\u57fa\u7840\u4e0a\u5efa\u7acb\u8d77\u6765\u3002\n\u6700\u540e\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6df7\u97f3\u662f\u4e00\u95e8\u827a\u672f\uff0c\u638c\u63e1\u97f3\u54cd\u5de5\u7a0b\u5e08\u672c\u8eab\u5c31\u662f\u827a\u672f\u5bb6\u3002\u663e\u7136\uff0c\u6211\u4eec\u4e0d\u6253\u7b97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u635f\u5bb3\u4ed6\u4eec\u7684\u5de5\u4f5c\u6216\u5f71\u54cd\u4efb\u4f55\u4eba\u7684\u4fe1\u7528\u3002\u5f53\u60a8\u4f7f\u7528Spleeter\u65f6\uff0c\u8bf7\u8d1f\u8d23\u4efb\u5730\u4f7f\u7528\u3002", "note_en": "We are releasing   Spleeter to help the research community in Music Information Retrieval (MIR) leverage the power of a state-of-the-art source separation algorithm. It comes in the form of a Python Library based on  Tensorflow, with pretrained models for 2, 4 and 5 stems separation.  Spleeter will be presented and live-demoed at the 2019  ISMIR conference in Delft.\n  While not a broadly known topic, the problem of source separation has interested a large community of music signal researchers for a couple of decades now. It starts from a simple observation: music recordings are usually a mix of several individual instrument tracks (lead vocal, drums, bass, piano etc..). The task of music source separation is: given a mix can we recover these separate tracks (sometimes called  stems)? This has many potential applications: think remixes, upmixing, active listening, educational purposes, but also pre-processing for other tasks such as transcription.\n  Interestingly, our brain is very good at isolating instruments. Just focus on one of the instrument of  this track (say the lead vocal for instance) and you will be able to  hear it quite distinctively from the others. Yet that\u2019s not really separation, you still hear all the other parts. In many cases, it may not be possible to exactly recover the individual tracks that have been mixed together. The challenge is thus to approximate them the best we can, that is to say as close as possible to the originals without creating too much distortions.\n For years, a lot of strategies have been explored, by dozens of brilliant research teams from all over the world. If you\u2019re interested in this fascinating journey you should go read  this literature overview, or  this one. The pace of progress has recently made some giant leaps, mainly due to advances in machine learning methods. To keep track, people have been comparing their algorithm in  international evaluation campaigns. That\u2019s how we know that  Spleeter performances match those of the best proposed algorithms.\n Additionally,  Spleeter is  very fast. If you are running the GPU version you can expect separating  100x faster than real-time which makes it a good option to process large datasets.\n  Quite a lot I\u2019d say. If you\u2019re a researcher working on Music Information Retrieval and have always considered that source separation artifacts made it unsuitable as a pre-processing step in your pipeline... Well, you should probably reconsider and try  Spleeter. If you are a music hacker and want to build something awesome using  Spleeter, then go ahead. Actually  Spleeter is  MIT-Licensed so you are  really free to use it in any way you want. It goes without saying that if you plan to use  Spleeter on copyrighted songs, make sure you get proper authorization from right owners beforehand.\n  Under the hood,  Spleeter is a fairly complex and crafted engine but we\u2019ve worked hard to make it really easy to use. The actual separation can be achieved with a  single command line, and it should work on your laptop regardless of your Operating System. For more advanced users, there is a python API class called   Separator that you can manipulate directly into your usual pipeline.\n We\u2019ve tried hard to come up with a  thorough documentation. Don\u2019t hesitate to give us feedback, point out issues or suggest improvement through the traditional github tools!\n  We\u2019ve been working on source separation for a long time (and we already had a  publication at ICASSP 2019). We have benchmarked  Spleeter against  Open-Unmix -another open-source model recently released by a research team from Inria- and reported  slightly better performances with increased speed (note that the training dataset is not the same).\n One of the hard limitations faced by MIR researchers is the lack of publicly available datasets due to copyright issues. Here at  Deezer, we have access to a fairly large catalog that we\u2019ve been leveraging to build  Spleeter. Since we can not share this data, turning it into an accessible tool is a way for us to make our research reproducible by everyone. On a more ethical standpoint, we feel there should not be an unfair competition between researchers based on their access to copyrighted material or lack thereof.\n Last but not least, training this kind of models requires a lot of time and energy. By doing it once and sharing the result, we hope to save others some trouble and resources.\n  Since we released  Spleeter, we have received numerous feedback, most of them very positive and we\u2019re thrilled to see all that attention given to our work. A few of these reactions may however be a little over-enthusiastic, so let\u2019s just restate a few things.  Spleeter is a neat tool, but in no way do we claim to have \u201c solved\u201d source separation. Hundreds of researchers and engineers working for decades have made the advances and built the tools on which  Spleeter is based. It\u2019s our contribution to a vivid, ever-growing and open ecosystem and hopefully something others will build upon too.\n Finally, it\u2019s worth pointing out that music mixing is a fine art and that mastering sound engineers are artists in their own rights. Obviously we do not intend to harm their work in any manner or affect anyone\u2019s credit. When you use  Spleeter, please do so responsibly.", "posttime": "2020-05-19 10:15:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "spleeter,music,\u5206\u79bb", "title": "Spleeter-\u97f3\u4e50\u6e90-\u5206\u79bb\u5f15\u64ce", "title_en": "Spleeter \u2013 Music Source-Separation Engine", "transed": 1, "url": "https://deezer.io/releasing-spleeter-deezer-r-d-source-separation-engine-2b88985e797e", "via": "", "real_tags": ["spleeter", "music", "\u5206\u79bb"]}, {"category": "", "categoryclass": "", "imagename": "c77d7cdb956c2a762ec0860159260315.png", "infoid": 1002726, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\\$\\Begingroup\\$\u60a8\u7684\u4efb\u52a1\u662f\u6784\u5efa\u4e00\u4e2a\u8868\u793a\u6570\u5b57\u65f6\u949f\u7684\u751f\u6d3b\u6e38\u620f\u6a21\u62df\uff0c\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u5c5e\u6027\uff1a\n\u65f6\u949f\u4ee5\u5341\u8fdb\u5236(\u4f8b\u5982\uff0c12\uff1a00\u30013\uff1a59\u30017\uff1a24)\u663e\u793a\u5c0f\u65f6\u548c\u5206\u949f\uff0c\u4e00\u5929\u4e2d\u76841,440\u5206\u949f\u4e2d\u7684\u6bcf\u4e00\u5206\u949f\u90fd\u6709\u4e0d\u540c\u7684\u72b6\u6001-\u5c0f\u65f6\u5c06\u4ece0\u53d8\u4e3a23\uff0c\u6216\u8005\u4ece1\u53d8\u4e3a12\uff0c\u5e76\u5e26\u6709PM\u6307\u793a\u5668\u3002\n\u5206\u949f\u5b9a\u671f\u66f4\u65b0-\u4ece\u4e00\u6b21\u5206\u949f\u66f4\u6539\u5230\u4e0b\u4e00\u6b21\u66f4\u6539\u9700\u8981\u76f8\u540c\u7684\u751f\u6210\u6b21\u6570\u3002\n\u4e00\u4f4d\u533f\u540d\u7684\u65c1\u89c2\u8005\u80fd\u591f\u4e00\u773c\u770b\u51fa\u663e\u793a\u5668\u5e94\u8be5\u662f\u4e00\u4e2a\u6570\u5b57\u949f\u3002\u8fd9\u5c24\u5176\u9700\u8981\uff1a\n\u8fd9\u4e9b\u6570\u5b57\u662f\u53ef\u89c1\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u6e05\u695a\u5730\u533a\u5206\u3002\u4f60\u5fc5\u987b\u80fd\u591f\u4e00\u76ee\u4e86\u7136\u5730\u8bf4\u51fa\u6b63\u5728\u663e\u793a\u7684\u65f6\u95f4\u3002\n\u6570\u5b57\u4f1a\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u66f4\u65b0\u3002\u6bcf\u4e2a\u65b0\u6570\u5b57\u51fa\u73b0\u5728\u4e0e\u524d\u4e00\u4e2a\u6570\u5b57\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u6570\u5b57\u7684\u8fb9\u754c\u6846\u51e0\u4e4e\u6ca1\u6709\u79fb\u52a8\u3002(\u5177\u4f53\u5730\u8bf4\uff0c\u4e00\u4e2a\u6570\u5b57\u4e0d\u5305\u542b\u4f4d\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u768410\u4e2a\u4e0d\u540c\u7684\u6570\u5b57\uff0c\u8fd9\u4e9b\u6570\u5b57\u5728\u6bcf\u6b21\u6570\u5b57\u66f4\u6539\u65f6\u90fd\u4f1a\u88ab\u63ed\u5f00\u3002)\u3002\n\u6570\u5b57\u7d27\u6328\u7740\u663e\u793a\uff0c\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u8fc7\u591a\u7684\u7a7a\u683c\u3002\n\u60a8\u7684\u8ba1\u5212\u5c06\u5728\u4ee5\u4e0b\u65b9\u9762\u6309\u987a\u5e8f\u8bc4\u5206(\u8f83\u4f4e\u7684\u6807\u51c6\u5145\u5f53\u8f83\u9ad8\u6807\u51c6\u7684\u51b3\u80dc\u5c40)\uff1a\n\u8fb9\u754c\u6846\u5927\u5c0f-\u9762\u79ef\u6700\u5c0f\u4e14\u5b8c\u5168\u5305\u542b\u7ed9\u5b9a\u89e3\u7684\u77e9\u5f62\u6846\u83b7\u80dc\u3002\n\\$\\endgroup\\$\u3002\nI\u2018\u6211\u5f88\u786e\u5b9a\u8fd9\u662fB3/S23\uff0c\u4f46\u60a8\u80fd\u786e\u8ba4\u6216\u5426\u8ba4\u5417\uff1fConor O&\u2019Brien\u3002\n\\$\\Begingroup\\$&34\uff1b\u5b83\u4eec\u8fd8\u5fc5\u987b\u539f\u5730\u66f4\u65b0-\u6bcf\u4e2a\u65b0\u6570\u5b57\u5fc5\u987b\u51fa\u73b0\u5728\u4e0e\u524d\u4e00\u4e2a\u6570\u5b57\u76f8\u540c\u7684\u4f4d\u7f6e\u3002&#34\uff1b\u60a8\u5982\u4f55\u5b9a\u4e49\u540c\u4e00\u4f4d\u7f6e\u7684&#34\uff1b\uff0c\u56e0\u4e3a\u6570\u5b57\u4e0d\u4e00\u5b9a\u662f\u77e9\u5f62\u7684\u3002\\$\\endgroup\\$-Martin Ender\u3002\n\\$\\Begingroup\\$\u6211\u4eec\u7684\u5c0f\u6570\u4f4d\u5fc5\u987b\u6709\u591a\u6e05\u6670\uff1f\u5982\u679c\u4f60\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u772f\u7740\u773c\u775b\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u5206\u8fa8\u51fa0\u548c8\u4e4b\u95f4\u7684\u533a\u522b\u4e86\u5417\uff1f\u6216\u8005\u5b83\u9700\u8981\u901a\u8fc7\u6d4b\u8bd5\u5417\uff1f\u533f\u540d\u65c1\u89c2\u8005\u53ef\u4ee5\u5728\u6ca1\u6709\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\u5224\u65ad\u51fa\u5b83\u662f\u4ec0\u4e48\uff1f\\$\\endgroup\\$-s SPARR\u3002\n\\$\\Begingroup\\$\u8fd9\u4e5f\u53d1\u5e03\u5728\u54c8\u5361\u8fea\u535a\u5ba2\u4e0a\uff1ahackaday.com/2017/03/11/a-clock-created-with-conways-life\\$\\endgroup\\$-Anool Maidharia\u3002\n\u55ef\uff0c\u8fd9\u4e2a\u8bbe\u8ba1\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u3002\u65e2\u4e0d\u662f\u4ece\u8fb9\u754c\u6846\u7684\u89d2\u5ea6(\u90a37\u6bb5\u6570\u5b57\u5f88\u5927)\uff0c\u4e5f\u4e0d\u662f\u4ece\u6700\u521d\u7684\u4eba\u53e3\u8ba1\u6570(\u6709\u4e00\u4e9b\u65e0\u7528\u7684\u4e1c\u897f\uff0c\u8fd8\u6709\u4e00\u4e9b\u80af\u5b9a\u53ef\u4ee5\u53d8\u5f97\u66f4\u7b80\u5355\u7684\u4e1c\u897f)\uff0c\u4ee5\u53ca\u6267\u884c\u901f\u5ea6-\u55ef\u2026\u2026\u3002\u6211\u4e0d\u786e\u5b9a\u3002\n\u8f6c\u5230\u5728\u7ebfJavaScript Conway\u751f\u6d3b\u6a21\u62df\u5668\u3002\u5355\u51fb\u5bfc\u5165\uff0c\u7c98\u8d34\u8bbe\u8ba1\u6587\u672c\u3002\u4f60\u5e94\u8be5\u770b\u770b\u8bbe\u8ba1\u3002\u7136\u540e\uff0c\u8f6c\u5230\u8bbe\u7f6e\u5e76\u5c06\u751f\u6210\u6b65\u957f\u8bbe\u7f6e\u4e3a512\u6216\u8fd9\u4e9b\u884c\u9644\u8fd1\u7684\u67d0\u4e2a\u503c\uff0c\u5426\u5219\u60a8\u5c06\u4e0d\u5f97\u4e0d\u6c38\u8fdc\u7b49\u5f85\u624d\u80fd\u770b\u5230\u65f6\u949f\u663e\u793a\u66f4\u65b0\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4f7f\u8fd9\u4e2a\u5e9e\u5927\u7684\u8bbe\u8ba1\u53d8\u5f97\u53ef\u7528\u7684\u552f\u4e00\u7b97\u6cd5\u662fhashlife\u3002\u4f46\u662f\u6709\u4e86\u8fd9\u4e2a\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u5b9e\u73b0\u6574\u4e2a\u65f6\u949f\u7ed5\u56de\u3002\u4f7f\u7528\u5176\u4ed6\u7b97\u6cd5\uff0c\u5373\u4f7f\u770b\u5230\u65f6\u95f4\u53d8\u5316\u4e5f\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\n\u5b83\u4f7f\u7528\u7684\u662fP30\u6280\u672f\u3002\u53ea\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4e1c\u897f\uff0c\u6ed1\u7fd4\u673a\u548c\u8f7b\u578b\u5b87\u5b99\u98de\u8239\u3002\u57fa\u672c\u4e0a\uff0c\u8bbe\u8ba1\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\uff1a\n\u5728\u6700\u4e0a\u9762\uff0c\u6709\u4e00\u53ea\u949f\u3002\u8fd9\u662f\u4e00\u4e2a11520\u5468\u671f\u7684\u949f\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u9700\u8981\u5927\u7ea610.000\u4ee3\u624d\u80fd\u786e\u4fdd\u663e\u793a\u5668\u5f97\u5230\u9002\u5f53\u66f4\u65b0\uff0c\u4f46\u8bbe\u8ba1\u4ecd\u5e94\u7a33\u5b9a\uff0c\u65f6\u949f\u5468\u671f\u8f83\u5c0f(\u7ea6\u4e3a5.000\u4ee3-\u65f6\u949f\u9700\u8981\u662f60\u7684\u500d\u6570)\u3002\n\u7136\u540e\u662f\u65f6\u949f\u5206\u914d\u9636\u6bb5\u3002\u65f6\u949f\u6ed1\u7fd4\u673a\u88ab\u590d\u5236\u5230\u4e00\u4e2a\u5e73\u8861\u6811\u4e2d\uff0c\u6240\u4ee5\u5728\u6700\u540e\uff0c\u670932\u4e2a\u6ed1\u7fd4\u673a\u5728\u5b8c\u5168\u76f8\u540c\u7684\u65f6\u523b\u5230\u8fbe\u8ba1\u6570\u5668\u9636\u6bb5\u3002\n\u8ba1\u6570\u5668\u7ea7\u4e3a\u6bcf\u4e2a\u72b6\u6001\u548c\u6bcf\u4e2a\u6570\u5b57\u4f7f\u7528RS\u9501\u5b58\u5668(\u6211\u4eec\u4ee5\u5341\u8fdb\u5236\u8ba1\u6570)\u3002\u56e0\u6b64\uff0c\u5206\u949f\u7684\u53f3\u6570\u5b57\u670910\u4e2a\u72b6\u6001\uff0c\u5206\u949f\u7684\u5de6\u6570\u5b57\u67096\u4e2a\u72b6\u6001\uff0c\u5c0f\u65f6\u670912\u4e2a\u72b6\u6001(\u4e24\u4e2a\u5c0f\u65f6\u6570\u5b57\u5728\u8fd9\u91cc\u5408\u5e76)\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u7ec4\u4e2d\u7684\u6bcf\u4e00\u7ec4\uff0c\u8ba1\u6570\u5668\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u79fb\u4f4d\u5bc4\u5b58\u5668\u3002\n\u5728\u8ba1\u6570\u9636\u6bb5\u4e4b\u540e\uff0c\u6709\u67e5\u627e\u8868\u3002\u5b83\u4eec\u5c06\u72b6\u6001\u8109\u51b2\u8f6c\u6362\u4e3a\u663e\u793a\u6bb5\u5f00/\u5173\u52a8\u4f5c\u3002\n\u7136\u540e\u662f\u663e\u793a\u5668\u672c\u8eab\u3002\u8fd9\u4e9b\u533a\u6bb5\u7b80\u5355\u5730\u7531\u591a\u4e32LWSS\u5236\u6210\u3002\u6bcf\u4e2a\u6bb5\u90fd\u6709\u81ea\u5df1\u7684\u9501\u5b58\u5668\u4ee5\u4fdd\u6301\u5176\u72b6\u6001\u3002\u6211\u53ef\u4ee5\u5bf9\u6570\u5b57\u72b6\u6001\u8fdb\u884c\u7b80\u5355\u7684\u903b\u8f91\u6216\u8fd0\u7b97\uff0c\u4ee5\u4e86\u89e3\u67d0\u4e2a\u6bb5\u5fc5\u987b\u6253\u5f00\u8fd8\u662f\u5173\u95ed\uff0c\u5e76\u53bb\u6389\u8fd9\u4e9b\u9501\u5b58\u5668\uff0c\u4f46\u662f\u5f53\u6570\u5b57\u6539\u53d8\u65f6(\u7531\u4e8e\u4fe1\u53f7\u5ef6\u8fdf)\uff0c\u4e0d\u53d8\u7684\u6bb5\u4f1a\u6709\u6545\u969c\u3002\u4ece\u67e5\u627e\u8868\u5230\u6570\u5b57\u6bb5\u4f1a\u6709\u5f88\u957f\u7684\u6ed1\u7fd4\u673a\u6d41\u3002\u6240\u4ee5\u5b83\u5c31\u4e0d\u4f1a\u90a3\u4e48\u597d\u770b\u4e86\u3002\u8fd9\u662f\u5fc5\u987b\u7684\u3002\u662f\u3002\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u8fd9\u4e2a\u8bbe\u8ba1\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u53d1\u73b0\u4ee4\u4eba\u60ca\u8bb6\u7684\u53cd\u5e94\uff0c\u4e5f\u6ca1\u6709\u4ee5\u524d\u6ca1\u6709\u4eba\u60f3\u5230\u7684\u771f\u6b63\u806a\u660e\u7684\u7ec4\u5408\u3002\u53ea\u662f\u628a\u8fd9\u91cc\u548c\u90a3\u91cc\u7684\u4e00\u4e9b\u4e1c\u897f\u653e\u5728\u4e00\u8d77(\u6211\u751a\u81f3\u4e0d\u786e\u5b9a\u6211\u662f\u4e0d\u662f\u6309\u7167\u6b63\u786e\u7684\u65b9\u5f0f\u505a\u7684--\u5b9e\u9645\u4e0a\u6211\u5bf9\u6b64\u5b8c\u5168\u964c\u751f)\u3002\u7136\u800c\uff0c\u8fd9\u9700\u8981\u5f88\u5927\u7684\u8010\u5fc3\u3002\u8ba9\u6240\u6709\u8fd9\u4e9b\u6ed1\u7fd4\u673a\u5728\u6b63\u786e\u7684\u65f6\u95f4\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u5347\u7a7a\u662f\u4ee4\u4eba\u8d39\u89e3\u7684\u3002\n\u6211\u53ef\u4ee5\u5c06\u76f8\u540c\u7684\u65f6\u949f\u5757\u590d\u5236n\u6b21(\u6bcf\u4e2a\u8ba1\u6570\u5668\u5355\u5143\u4e00\u6b21)\uff0c\u800c\u4e0d\u662f\u5c06\u76f8\u540c\u7684\u6839\u65f6\u949f\u590d\u5236\u5e76\u5206\u53d1\u5230n\u4e2a\u8ba1\u6570\u5668\u5355\u5143\u3002\u8fd9\u5b9e\u9645\u4e0a\u4f1a\u7b80\u5355\u5f97\u591a\u3002\u4f46\u90a3\u6837\u6211\u5c31\u4e0d\u80fd\u90a3\u4e48\u5bb9\u6613\u5730\u901a\u8fc7\u5728\u5355\u70b9\u4e0a\u6539\u53d8\u65f6\u949f\u6765\u8c03\u6574\u5b83\u4e86\u3002\u6211\u6709\u7535\u5b50\u5b66\u80cc\u666f\uff0c\u5728\u771f\u5b9e\u7684\u7535\u8def\u4e2d\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u9519\u8bef\u7684\u3002\n\u6bcf\u4e2a\u7f51\u6bb5\u90fd\u6709\u81ea\u5df1\u7684RS\u9501\u5b58\u5668\u3002\u8fd9\u8981\u6c42\u67e5\u627e\u8868\u540c\u65f6\u8f93\u51faR\u548cS\u8109\u51b2\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u9501\u5b58\u5668\uff0c\u5b83\u53ea\u4f1a\u4ece\u516c\u5171\u8f93\u5165\u8109\u51b2\u5207\u6362\u5176\u72b6\u6001\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u67e5\u627e\u8868\u53d8\u5f97\u4e00\u534a\u5927\u3002PM\u70b9\u6709\u8fd9\u6837\u4e00\u4e2a\u63d2\u9500\uff0c\u4f46\u5b83\u5f88\u5927\uff0c\u6211\u60f3\u4e0d\u51fa\u66f4\u5b9e\u7528\u7684\u4e1c\u897f\u3002\n\u5c06\u663e\u793a\u5c4f\u7f29\u5c0f\u3002\u4f46\u90a3\u5c31\u4e0d\u4f1a\u90a3\u4e48\u597d\u770b\u4e86\u3002\u8fd9\u662f\u5fc5\u987b\u7684\u3002\u662f\u3002\n\\$\\endgroup\\$\u3002\n\\$\\Begingroup\\$@Poke\u6765\u5427\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u81ea\u5df1\u6dfb\u52a0\u8fd9\u4e2a.\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u5df2\u7ecf\u7f16\u8f91\u4e86\u8fd9\u7bc7\u5e16\u5b50\u7684AM+PM\u4e24\u4e2a\u7248\u672c\uff0c\u4ee5\u4f9b\u60a8\u6109\u5feb\u3002\\$\\endgroup\\$-\u6697\u6de1\u3002\n\u5982\u4f60\u6240\u77e5\uff0c\u8fd9\u4e2a\u7b54\u6848\u5df2\u7ecf\u51fa\u73b0\u5728Microsiervos\u4e0a\uff0c\u8fd9\u662f\u6700\u91cd\u8981\u7684\u897f\u73ed\u7259\u8bed\u6280\u672f\u535a\u5ba2\u4e4b\u4e00\uff0c\u5728Twitter\u4e0a\u6709\u8d85\u8fc780\u4e07\u7684\u8ffd\u968f\u8005\\$\\endgroup\\$-Luis Mendo\u3002\n\u7f57\u91cc\uff0c\u4f60\u62ff\u8d77\u4f60\u7684\u5934\uff0c\u7528\u6700\u5927\u7684\u529b\u6c14\u628a\u5b83\u7838\u5728\u5899\u4e0a\u5341\u51e0\u6b21\u3002\u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\\$\\endgroup\\$-\u6697\u6de1\u3002\n\u6240\u4ee5\u8bbe\u8ba1\u8fc7\u7a0b\u662f\uff1a\uff0c\u597d\u7684\uff0c\u6211\u9700\u8981\u78b0\u649e\u5b83\uff0c\u6211\u7684\u6ed1\u7fd4\u673a\u5728\u8fd9\u4e2a\u65f6\u5019\u4ece\u90a3\u91cc\u6ed1\u7fd4\u8fc7\u6765\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7528\u4e24\u4e2a\u53cd\u5c04\u5668\u628a\u5b83\u62ff\u5230\u90a3\u91cc\u53bb\u3002\u5e9f\u8bdd\uff0c\u5b83\u9700\u8981\u78b0\u649e\u7684\u53ea\u662f\u4e24\u4ee3\u4eba\u7684\u6b65\u4f10\u592a\u5feb\u4e86\uff0c\u90a3\u91cc\u3002\u5982\u679c\u6211\u7a0d\u5fae\u79fb\u52a8\u4e00\u4e0b\u53cd\u5149\u955c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u2026\u2026\u3002\u7cdf\u4e86\uff0c\u592a\u665a\u4e86\u3002\u597d\u7684\uff0c\u8ba9\u6211\u4eec\u5728\u522b\u7684\u5730\u65b9\u4e0e\u4ed6\u4eec\u76f8\u649e\u3002\u7cdf\u4e86\uff0c\u6211\u6ca1\u6709\u623f\u95f4\u8ba9\u6211\u7684\u6ed1\u7fd4\u673a\u53bb\u90a3\u91cc\u3002\u597d\u7684\uff0c\u8ba9\u6211\u4eec\u518d\u52a0\u4e24\u4e2a\u6ca1\u7528\u7684\u53cd\u5149\u955c\uff0c\u597d\u8ba9\u5b83\u5230\u8fbe\u90a3\u91cc\u3002\u7cdf\u4e86\uff0c\u53cd\u5149\u677f\u649e\u4e0a\u4e86\u53e6\u4e00\u80a1\u6ed1\u7fd4\u673a.\u3002\u7cdf\u4e86\uff0c\u8ba9\u6211\u4eec\u4e0a\u5e8a\u7761\u89c9\u5427\u3002&#34\uff1b\\$\\endgroup\\$-224\uff1b\u6697\u6de1\n\u2026\u3002\u8bf7\u52a1\u5fc5\u9075\u5faa\u6311\u6218\u89c4\u8303\u3002\u4e0d\u8fc7\uff0c\u8bf7\u4e0d\u8981\u94bb\u7a7a\u5b50\u3002\u6ee5\u7528\u4efb\u4f55\u6807\u51c6\u6f0f\u6d1e\u7684\u7b54\u6848\u90fd\u88ab\u8ba4\u4e3a\u662f\u65e0\u6548\u7684\u3002\u5982\u679c\u60a8\u8ba4\u4e3a\u67d0\u4e2a\u89c4\u8303\u4e0d\u660e\u786e\u6216\u672a\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u6539\u4e3a\u5bf9\u8be5\u95ee\u9898\u8fdb\u884c\u8bc4\u8bba\u3002\n\u2026\u3002\u8bd5\u7740\u4f18\u5316\u4f60\u7684\u5206\u6570\u3002\u4f8b\u5982\uff0c\u5bf9\u6311\u6218\u7684\u56de\u7b54\u5e94\u8be5\u5c3d\u91cf\u7b80\u77ed\u3002\u9664\u4e86\u7ade\u4e89\u7248\u672c\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u968f\u65f6\u5305\u542b\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u7248\u672c\u3002\u5bf9\u60a8\u7684\u7b54\u6848\u7684\u89e3\u91ca\u4f7f\u9605\u8bfb\u66f4\u6709\u8da3\uff0c\u975e\u5e38\u9f13\u821e\u4eba\u5fc3\u3002\n\u2026\u3002\u5305\u62ec\u4e00\u4e2a\u7b80\u77ed\u7684\u6807\u9898\uff0c\u6307\u793a\u60a8\u7684\u4ee3\u7801\u7684\u8bed\u8a00\u53ca\u5176\u5206\u6570\uff0c\u5982\u6311\u6218\u6240\u5b9a\u4e49\u7684\u3002\n\u70b9\u51fb\u201c\u53d1\u5e03\u60a8\u7684\u7b54\u6848\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u3001\u9690\u79c1\u653f\u7b56\u548cCookie\u653f\u7b56\u3002\n\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u7b54\u6848\u5417\uff1f\u6d4f\u89c8\u6807\u8bb0\u7684\u5176\u4ed6\u95ee\u9898\u6216\u63d0\u51fa\u60a8\u81ea\u5df1\u7684\u95ee\u9898\u3002", "note_en": "\\$\\begingroup\\$  Your task is to build a Game of Life simulation representing a digital clock, which satisfies the following properties:\n The clock displays the hours and minutes in decimal (e.g.  12:00,  3:59,  7:24) with a different state for each of the 1,440 minutes of the day \u2014 either the hours will go from 0 to 23 or from 1 to 12 with a PM indicator.\n  The minutes update at regular intervals \u2014 from one change of minute to the next takes the same number of generations.\n An anonymous bystander is able to tell at a glance that the display is supposed to be a digital clock. In particular, this entails:\n The digits are visible and clearly distinguishable. You must be able to tell with certainty at a glance what time is being displayed.\n The digits update in place. Each new number appears in the same place as the previous number, and there is little to no movement of the bounding boxes of the digits. (In particular, a digit does not contain 10 different digits in different places that get uncovered every time the digits change.)\n The digits appear next to each other, without an excessive amount of space between them.\n  Your program will be scored on the following things, in order (with lower criteria acting as tiebreakers for higher criteria):\n Bounding box size \u2014 the rectangular box with the smallest area that completely contains the given solution wins.\n      \\$\\endgroup\\$\n  \\$\\begingroup\\$  I&#39;m pretty sure this is B3/S23, but could you confirm or deny?  \\$\\endgroup\\$\r\u2013\u00a0 Conor O&#39;Brien\n  \\$\\begingroup\\$  &#34;They must also update in place \u2014 each new number must appear in the same place as the previous number.&#34; How do you define &#34;in the same place&#34;, since the digits won&#39;t necessarily be rectangular.  \\$\\endgroup\\$\r\u2013\u00a0 Martin Ender\n  \\$\\begingroup\\$  how discernable must our decimal digits be? is &#34;if you know what it is and you squint then you can tell the difference between 0 and 8&#34; enough, or does it need to pass the &#34;an anonymous bystander can tell what it is with no prompting&#34; test?  \\$\\endgroup\\$\r\u2013\u00a0 Sparr\n  \\$\\begingroup\\$  this got posted on the Hackaday blog too :  hackaday.com/2017/03/11/a-clock-created-with-conways-life  \\$\\endgroup\\$\r\u2013\u00a0 Anool Mahidharia\n  \\$\\begingroup\\$  Well, the design is certainly not optimal. Neither from the bounding box standpoint (those 7-segment digits are  huge), nor from the initial population count (there are some useless stuff, and some stuff that could certainly be made simpler), and the execution speed - well... I&#39;m not sure.\n      Go to  the online JavaScript Conway life simulator. Click  import, paste the design text. You should see the design. Then, go to  settings and set the  generation step to 512, or something around those lines, or you&#39;ll have to wait forever to see the clock display updating.\n   Note that the only algorithm that makes this huge design useable is hashlife. But with this, you can achieve the whole clock wraparound in seconds. With other algorithms, it is impractical to even see the hour changing.\n  It uses p30 technology. Just basic things, gliders and lightweight spaceships. Basically, the design goes top-down:\n At the very top, there&#39;s the clock. It is a 11520 period clock. Note that you need about 10.000 generations to ensure the display is updated appropriately, but the design should still be stable with a clock of smaller period (about 5.000 or so - the clock needs to be multiple of 60).\n Then, there is the clock distribution stage. The clock glider is copied in a balanced tree, so at the end, there are 32 gliders arriving at the exact same moment to the counters stage.\n The counter stage is made using a RS latch for each state, and for each digit (we&#39;re counting in decimal). So there is 10 states for the right digit of the minutes, 6 states for the left digit of the minuts, and 12 states for the hours (both digits of the hours are merged here). For each of these groups, the counter behaves like a shift register.\n After the counting stage, there are the lookup tables. They convert the state pulses to display segments ON/OFF actions.\n Then, the display itself. The segments are simply made with multiple strings of LWSS. Each segment has it own latch to maintain its state. I could have made a simple logical-OR of the digit states to know wether a segment must be ON or OFF, and get rid of these latches, but there would be glitches for non-changing segments, when the digits are changing (because of signal delays). And there would be long streams of gliders coming from the lookup table to the digit segments. So it wouldn&#39;t be as nice-looking. And it needed to be. Yes.\n Anyway, there is actually nothing extraordinary in this design. There are no amazing reactions that have been discovered in this process, and no really clever combinations that nobody thought of before. Just bits taken here and there and put together (and I&#39;m not even sure I did it the &#34;right&#34; way - I was actually completely new to this). It required a lot of patience, however. Making all those gliders coming up at the right time in the right position was head-scratching.\n  Instead of copying and distributing the same root clock to the  n counter cells, I could have just put the same clock block  n times (once for each counter cell). This would actually be much simpler. But then I wouldn&#39;t be able to adjust it as easily by changing the clock at a single point... And I have an electronics background, and in a real circuit, that would be horribly wrong.\n Each segment has it own RS latch. This requires the lookup tables to output both R and S pulses. If we had a latch that would just toggle its state from a common input pulse, we could make the lookup tables half as big. There is such a latch for the PM dot, but it is huge, and I&#39;m unable to come up with something more practical.\n Make the display smaller. But that wouldn&#39;t be as nice-looking. And it needed to be. Yes.\n    \\$\\endgroup\\$\n  \\$\\begingroup\\$  @Poke come on, you could have tried to add this yourself... Anyway, I have edited the post with a version with both AM+PM, for your pleasure.  \\$\\endgroup\\$\r\u2013\u00a0 dim\n  \\$\\begingroup\\$  Just so you know, this answer has been  featured in  Microsiervos, one of the most important blogs about technology in Spanish, with over 800K followers on  Twitter  \\$\\endgroup\\$\r\u2013\u00a0 Luis Mendo\n  \\$\\begingroup\\$  @Rory You take your head, smash it on the wall a dozen times as hard as you can. You are then ready to start.  \\$\\endgroup\\$\r\u2013\u00a0 dim\n  \\$\\begingroup\\$  So the design process is: &#34;Ok, I need to collide that, and my glider comes from there in this position at this time. Let&#39;s see bring it there using two reflectors. Crap, the thing it needs to collide is just two generation steps too soon, there. If I move the reflectors a bit, let&#39;s see... Crap, too late. Ok, let&#39;s collide them some place else. Crap, I don&#39;t have the room to make my glider go there. Ok, let&#39;s add two other useless reflectors just to make it arrive there instead. Crap, the reflectors collide this other stream of glider... Crap, let&#39;s go to bed.&#34;  \\$\\endgroup\\$\r\u2013\u00a0 dim\n    \u2026Be sure to follow the challenge specification. However, please refrain from exploiting obvious loopholes. Answers abusing any of the  standard loopholes are considered invalid. If you think a specification is unclear or underspecified, comment on the question instead.\n  \u2026Try to optimize your score. For instance, answers to   challenges should attempt to be as short as possible. You can always include a readable version of the code in addition to the competitive one.\r  Explanations of your answer make it more interesting to read and are very much encouraged.\n  \u2026Include a short header which indicates the language(s) of your code and its score,  as defined by the challenge.\n    By clicking \u201cPost Your Answer\u201d, you agree to our  terms of service,  privacy policy and  cookie policy\n  Not the answer you&#39;re looking for? Browse other questions tagged     or  ask your own question.", "posttime": "2020-05-19 10:15:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u751f\u6d3b,digital,\u6570\u5b57", "title": "\u5728\u5eb7\u5a01\u7684\u201c\u751f\u6d3b\u7684\u6e38\u620f\u201d\u4e2d\u5236\u4f5c\u6570\u5b57\u949f", "title_en": "Build a digital clock in Conway's Game of Life", "transed": 1, "url": "https://codegolf.stackexchange.com/questions/88783/build-a-digital-clock-in-conways-game-of-life", "via": "", "real_tags": ["\u6e38\u620f", "\u751f\u6d3b", "digital", "\u6570\u5b57"]}, {"category": "", "categoryclass": "", "imagename": "0a1837bfba89f9f25c47a21efb2272b4.jpg", "infoid": 1002725, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u768448\u5c0f\u65f6\u91cc\uff0cWindows 10\u7684\u53e6\u4e00\u4e2a\u66f4\u65b0--KB4556799--\u5bf9\u7ec8\u7aef\u7528\u6237\u7684PC\u9020\u6210\u4e86\u4e25\u91cd\u7834\u574f\u3002\u4eca\u5929\u65e9\u4e0a\uff0c\u6211\u9192\u6765\u65f6\u53d1\u73b0\uff0c\u6211\u6b63\u5728\u4f7f\u7528\u7684\u51e0\u4e2a\u7cfb\u7edf\u7528\u6765\u5bf9PC\u786c\u4ef6\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5145\u65a5\u7740\u95ee\u9898\u3002\n\u8fd9\u4e00\u66f4\u65b0\u58f0\u79f0\u6539\u8fdb\u4e86\u5404\u79cd\u5b89\u5168\u63aa\u65bd\uff0c\u8fd8\u5305\u62ec\u5b58\u50a8\u548c\u7ba1\u7406\u6587\u4ef6\u7684\u66f4\u65b0\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4f3c\u4e4e\u5bfc\u81f4\u4e86\u84dd\u5c4f\u6b7b\u4ea1(BSOD)\u3001\u7a33\u5b9a\u6027\u95ee\u9898\u548c\u4e71\u7801\u97f3\u9891\uff0c\u56e0\u4e3a\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f\u88ab\u9690\u85cf\u6216\u5220\u9664\u7684\uff0cWindows\u6216\u4ed6\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u627e\u4e0d\u5230\u8fd9\u4e9b\u6587\u4ef6\u3002\n\u4eca\u5929\u65e9\u4e0a\uff0c\u6211\u81ea\u5df1\u7684\u95ee\u9898\uff0c\u5728\u66f4\u65b0\u5077\u5077\u6e9c\u8fdb\u6765\u4e4b\u540e\uff0c\u770b\u5230\u6211\u7684\u7535\u8111\u5904\u4e8eBSOD\u7684\u6301\u7eed\u91cd\u542f\u5468\u671f\u4e2d\uff0c\u6307\u5411\u5185\u5b58\u3001\u663e\u5361\u548c\u5176\u4ed6\u9519\u8bef\u3002\u6700\u7ec8\uff0c\u6211\u8bbe\u6cd5\u8fdb\u5165\u4e86\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u4f7f\u7528\u7cfb\u7edf\u8fd8\u539f\u529f\u80fd\u83b7\u5f97\u4e86\u5b83\u4eec\u7684\u539f\u6837\uff0c\u73b0\u5728\u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u594f\u6548\u4e86\u3002\n\u5728\u53e6\u4e00\u4e2a\u7cfb\u7edf\u4e0a\uff0c\u51e0\u4e2a\u7a0b\u5e8f\u58f0\u79f0\u5404\u79cd\u6587\u4ef6\u4e22\u5931\u4e86\uff0c\u4f46\u524d\u4e00\u5929\u665a\u4e0aPC\u5de5\u4f5c\u6b63\u5e38-\u5728\u8fd9\u91cc\uff0c\u53ea\u9700\u5220\u9664\u4ee4\u4eba\u4e0d\u5feb\u7684\u66f4\u65b0\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002\u5176\u4e2d\u5f88\u591a\u90fd\u662f\u4e25\u91cd\u7684DLL\u6587\u4ef6\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u518d\u6b21\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u5df2\u5b89\u88c5\u66f4\u65b0KB4556799\u5e76\u5c06\u5176\u6e05\u9664\u3002\n\u5728\u5fae\u8f6f\u81ea\u5df1\u7684\u8bba\u575b\u4e0a\u5df2\u7ecf\u6709\u5927\u91cf\u5e16\u5b50\uff0cWindows\u6700\u65b0\u7f51\u7ad9\u4e5f\u6307\u5411\u5bfc\u81f4\u97f3\u9891\u95ee\u9898\u7684\u66f4\u65b0\uff0c\u4ee5\u53caReddit\u4e0a\u5173\u4e8e\u7cfb\u7edf\u51cf\u901f\u548c\u65e0\u6cd5\u89e3\u91ca\u7684\u8f6f\u4ef6\u5d29\u6e83\u7684\u5404\u79cd\u5e16\u5b50\u3002\n\u6b64\u5916\uff0c\u8bf7\u52a1\u5fc5\u5728Windows Update\u8bbe\u7f6e\u7684\u9ad8\u7ea7\u9009\u9879\u90e8\u5206\u5173\u95ed\u66f4\u65b0\u5e76\u5c3d\u53ef\u80fd\u957f\u65f6\u95f4\u5730\u5ef6\u8fdf\u66f4\u65b0\uff0c\u76f4\u5230\u5fae\u8f6f\u89e3\u51b3\u4e86\u53e6\u4e00\u573a\u707e\u96be\u3002", "note_en": "The last 48 hours has seen another Windows 10 update - KB4556799 - wreak havoc on end user&#39;s PCs and this morning, I woke to find several systems I&#39;m using to benchmark PC hardware riddled with problems.\n    The update, which claims to improve various security measures also states includes  &#39;Updates for storing and managing files.&#39; Unfortunately, this appears to have caused blue screens of death (BSOD), stability issues and garbled audio as files are literally being hidden or deleted and cannot be found by Windows or the software they use.\n  My own problems this morning, after the update sneaked in, saw my PC sit in a continual reboot cycle of BSODs pointing at memory, graphics card and other errors. Eventually I managed to get into the OS and used system restore to get things as they were and this has worked for now.\n     On another system, several programs claimed that various files were missing, yet the PC was working fine the night before - here, simply removing the offending update fixed the issue. A lot of these were critial dll files so if you&#39;re experience the same issues, check to see if update KB4556799 has been installed and get rid of it.\n  There are already numerous posts on  Microsoft&#39;s own forum with website  Windows Latest also pointing at the update causing audio issues and various posts including  this one on Reddit about system slow downs and unexplained software crashes.\n    Also be sure to switch off updates and delay them for as long as possible in the advanced options section of Windows Update&#39;s settings till Microsoft sorts out what is yet another disaster.", "posttime": "2020-05-19 10:14:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,windows-10,\u9690\u85cf,hides,pc", "title": "\u65b0\u7684Windows 10\u66f4\u65b0\u9690\u85cf\u6587\u4ef6\uff0c\u7ed9\u6570\u767e\u4e07\u4eba\u5e26\u6765\u4e25\u91cd\u95ee\u9898", "title_en": "New Windows 10 Update Hides Files Causing Serious Problems for Millions", "transed": 1, "url": "https://www.forbes.com/sites/antonyleather/2020/05/18/new-windows-10-update-deletes-files-causing-serious-problems-for-millions/", "via": "", "real_tags": ["windows", "\u9690\u85cf", "hides", "pc"]}, {"category": "", "categoryclass": "", "imagename": "e27063594934f3e38e2b3851fa773a13.png", "infoid": 1002724, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ed9\u4f60\u5b66\u70b9\u87d2\u86c7\u3002\u6211\u4eec\u5df2\u7ecf\u4e0eNo Stack Press\u5408\u4f5c\u5f00\u8bbe\u4e86\u4e00\u5802Python\u901f\u6210\u8bfe\u7a0b\uff01\u4f7f\u7528\u7535\u5b50\u4e66\u5feb\u901f\u5b66\u4e60\u57fa\u672c\u8981\u9886\uff0c\u5982\u4f7f\u7528Python\u81ea\u52a8\u5316\u67af\u71e5\u7684\u4e1c\u897f\uff0c\u7b2c2\u7248\uff1a\u9762\u5411\u603b\u521d\u5b66\u8005\u7684\u5b9e\u7528\u7f16\u7a0b\uff0c\u4f7f\u7528Python\u7834\u89e3\u4ee3\u7801\uff1a\u6784\u5efa\u548c\u7834\u89e3\u5bc6\u7801\u7684\u5165\u95e8\uff0c\u7528Python\u53d1\u660e\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u6e38\u620f\uff0c\u7b2c4\u7248\uff0cPython Crash\u8bfe\u7a0b\uff0c\u7b2c2\u7248\uff1a\u52a8\u624b\uff0c\u57fa\u4e8e\u9879\u76ee\u7684\u7f16\u7a0b\u5165\u95e8\uff0c\u7b49\u7b49\u3002\u53e6\u5916\uff0c\u60a8\u7684\u8d2d\u4e70\u5c06\u652f\u6301\u4e66\u4e1a\u6148\u5584\u57fa\u91d1\u4f1a\u548c\u65e0\u6dc0\u7c89\u51fa\u7248\u793e\u57fa\u91d1\u4f1a\uff01\n\u652f\u4ed81\u7f8e\u5143\u6216\u66f4\u591a\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u7535\u5b50\u4e66\u7684\u603b\u6210\u672c\u9ad8\u8fbe375\u7f8e\u5143\u3002\u5728Humble Bundle\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u4ef7\u683c\u5e76\u589e\u52a0\u60a8\u7684\u8d21\u732e\u6765\u5347\u7ea7\u60a8\u7684\u6346\u7ed1\u5305\uff01\u6b64\u6346\u7ed1\u5305\u7684\u6700\u4f4e\u8d2d\u4e70\u91d1\u989d\u4e3a1\u7f8e\u5143\u3002\n\u968f\u65f6\u968f\u5730\u9605\u8bfb\u5b83\u4eec\u3002\u6b64\u6346\u7ed1\u5305\u4e2d\u7684\u7535\u5b50\u4e66\u6709PDF\u3001MOBI\u548cePub\u683c\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u3001\u7535\u5b50\u9605\u8bfb\u5668\u3001iPad\u3001\u624b\u673a\u548c\u5404\u79cd\u79fb\u52a8\u8bbe\u5907\u4e0a\u4f7f\u7528\uff01\u8bf4\u660e\u548c\u63a8\u8350\u9605\u8bfb\u7a0b\u5e8f\u5217\u8868\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\n\u652f\u6301\u6148\u5584\u4e8b\u4e1a\u3002\u9009\u62e9\u8d44\u91d1\u7684\u53bb\u5411-\u901a\u8fc7\u8d1d\u5b9d\u6350\u8d60\u57fa\u91d1\u5728\u51fa\u7248\u5546\u3001\u56fe\u4e66\u884c\u4e1a\u6148\u5584\u57fa\u91d1\u4f1a(BINC)\u548c\u65e0\u6dc0\u7c89\u51fa\u7248\u793e\u57fa\u91d1\u4f1a\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4f60\u559c\u6b22\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u6211\u4eec\u4e00\u4e2a\u8c26\u865a\u7684\u5c0f\u8d39\uff01", "note_en": "Learn you some Python. We&#39;ve teamed up with No Starch Press for a crash course on Python! Learn the essentials quickly with ebooks like  Automate the Boring Stuff with Python, 2nd Edition: Practical Programming for Total Beginners, Cracking Codes with Python: An Introduction to Building and Breaking Ciphers, Invent Your Own Computer Games with Python, 4th Edition, Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction to Programming, and more. Plus, your purchase will support the Book Industry Charitable Foundation and No Starch Press Foundation!\n Pay US$1 or more. Normally, the total cost for the ebooks in this bundle is as much as US$375. Here at Humble Bundle, you choose the price and increase your contribution to upgrade your bundle! This bundle has a minimum US$1 purchase.\n Read them anywhere. The ebooks in this bundle are available in PDF, MOBI, and ePub formats, so they work on your computer, e-readers, iPads, cell phones, and a wide array of mobile devices! Instructions and a list of recommended reading programs can be found  here.\n Support charity. Choose where the money goes - between the publisher, Book Industry Charitable Foundation (Binc) and No Starch Press Foundation via  PayPal Giving Fund. If you like what we do, you can leave us a Humble Tip too!", "posttime": "2020-05-19 10:14:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u5b66\u4e60,book", "title": "\u5351\u5fae\u7684\u4e66\u5305\uff1a\u5411\u4f60\u5b66\u4e60\u65e0\u6dc0\u7c89\u51fa\u7248\u793e\u7684\u87d2\u86c7", "title_en": "Humble Book Bundle: Learn You Some Python by No Starch Press", "transed": 1, "url": "https://www.humblebundle.com/books/learn-you-some-python-no-starch-press-books?mc_cid=b822cd8611&mc_eid=443b882743", "via": "", "real_tags": ["python", "\u5b66\u4e60", "book"]}]