[{"category": "", "categoryclass": "", "imagename": "efc9c52f6509661dabbde21ceef40691.jpg", "infoid": 1000799, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u83b1\u65af\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u53d1\u660e\u4e86\u4e00\u79cd\u9ad8\u6548\u3001\u4f4e\u6210\u672c\u7684\u88c5\u7f6e\uff0c\u5b83\u53ef\u4ee5\u5c06\u6c34\u88c2\u89e3\u6765\u751f\u4ea7\u6c22\u71c3\u6599\u3002\u8fd9\u4e2a\u5e73\u53f0\u662f\u7531\u6c34\u7a3b\u6750\u6599\u79d1\u5b66\u5bb6Jun Lou\u7684\u5e03\u6717\u5de5\u7a0b\u5b66\u9662\u5b9e\u9a8c\u5ba4\u5f00\u53d1\u7684\uff0c\u5b83\u96c6\u6210\u4e86\u50ac\u5316\u7535\u6781\uff0c\u5f53\u9633\u5149\u89e6\u53d1\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u7535\u529b\u3002\u7535\u6d41\u6d41\u5411\u5c06\u6c34\u8f6c\u5316\u4e3a\u6c22\u548c\u6c27\u7684\u50ac\u5316\u5242\uff0c\u9633\u5149\u8f6c\u5316\u6c22\u7684\u6548\u7387\u9ad8\u8fbe6.7%\u3002\n\u8fd9\u79cd\u50ac\u5316\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\uff0c\u4f46\u5b9e\u9a8c\u5ba4\u5c06\u4e00\u5c42\u819c\u548c\u7535\u6781\u5c01\u88c5\u6210\u4e00\u4e2a\u6a21\u5757\uff0c\u5f53\u5b83\u843d\u5165\u6c34\u4e2d\u5e76\u7f6e\u4e8e\u9633\u5149\u4e0b\u65f6\uff0c\u65e0\u9700\u8fdb\u4e00\u6b65\u8f93\u5165\u5373\u53ef\u4ea7\u751f\u6c22\u6c14\u3002\n\u7531\u697c\u3001\u4e3b\u8981\u4f5c\u8005\u3001\u8d56\u65af\u535a\u58eb\u540e\u7814\u7a76\u5458\u8d3e\u4eae\u548c\u4ed6\u4eec\u7684\u540c\u4e8b\u5728\u7f8e\u56fd\u5316\u5b66\u5b66\u4f1a\u6742\u5fd7ACS Nano\u4e0a\u4ecb\u7ecd\u7684\u8fd9\u79cd\u6750\u6599\u662f\u4e00\u4e2a\u81ea\u7ed9\u81ea\u8db3\u7684\u751f\u4ea7\u5546\uff0c\u4ed6\u4eec\u8bf4\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u6279\u91cf\u751f\u4ea7\u3002\n\u697c\u8bf4\uff0c\u8fd9\u4e2a\u6982\u5ff5\u4e0e\u4eba\u9020\u53f6\u5b50\u5927\u81f4\u76f8\u4f3c\u3002\u6211\u4eec\u62e5\u6709\u7684\u662f\u4e00\u4e2a\u96c6\u6210\u6a21\u5757\uff0c\u5b83\u5c06\u592a\u9633\u5149\u8f6c\u5316\u4e3a\u7535\u80fd\uff0c\u9a71\u52a8\u7535\u5316\u5b66\u53cd\u5e94\u3002\u5b83\u5229\u7528\u6c34\u548c\u9633\u5149\u6765\u83b7\u53d6\u5316\u5b66\u71c3\u6599\u3002\n\u9499\u949b\u77ff\u662f\u4e00\u79cd\u5177\u6709\u7acb\u65b9\u72b6\u6676\u683c\u7684\u6676\u4f53\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5b83\u53ef\u4ee5\u6536\u96c6\u5149\u7ebf\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u751f\u4ea7\u7684\u6548\u7387\u6700\u9ad8\u7684\u9499\u949b\u77ff\u53ef\u4ee5\u8fbe\u523025%\u4ee5\u4e0a\u7684\u6548\u7387\uff0c\u4f46\u8fd9\u79cd\u6750\u6599\u5f88\u6602\u8d35\uff0c\u800c\u4e14\u5bb9\u6613\u53d7\u5230\u5149\u3001\u6e7f\u5ea6\u548c\u70ed\u7684\u538b\u529b\u3002\n\u697c\u8bf4\uff0c\u8d3e\u8dc3\u4ead\u5df2\u7ecf\u7528\u78b3\u7b49\u66ff\u4ee3\u54c1\u53d6\u4ee3\u4e86\u9499\u949b\u77ff\u592a\u9633\u80fd\u7535\u6c60\u4e2d\u66f4\u6602\u8d35\u7684\u6210\u5206\uff0c\u5982\u94c2\u3002\u8fd9\u964d\u4f4e\u4e86\u5546\u4e1a\u6536\u517b\u7684\u51c6\u5165\u95e8\u69db\u3002\u50cf\u8fd9\u6837\u7684\u96c6\u6210\u8bbe\u5907\u5f88\u6709\u524d\u9014\uff0c\u56e0\u4e3a\u5b83\u4eec\u521b\u9020\u4e86\u4e00\u4e2a\u53ef\u6301\u7eed\u53d1\u5c55\u7684\u7cfb\u7edf\u3002\u8fd9\u4e0d\u9700\u8981\u4efb\u4f55\u5916\u90e8\u7535\u6e90\u6765\u4fdd\u6301\u6a21\u5757\u8fd0\u884c\u3002&#34\uff1b\n\u6881\u8bf4\uff0c\u5173\u952e\u6210\u5206\u53ef\u80fd\u4e0d\u662f\u9499\u949b\u77ff\uff0c\u800c\u662f\u5305\u88f9\u5b83\u7684\u805a\u5408\u7269\uff0c\u4fdd\u62a4\u6a21\u5757\u5e76\u5141\u8bb8\u957f\u65f6\u95f4\u6d78\u6ce1\u3002\u4ed6\u8bf4\uff0c\u5176\u4ed6\u4eba\u5df2\u7ecf\u5f00\u53d1\u51fa\u50ac\u5316\u7cfb\u7edf\uff0c\u7528\u5bfc\u7ebf\u5c06\u6c34\u5916\u7684\u592a\u9633\u80fd\u7535\u6c60\u8fde\u63a5\u5230\u6d78\u6ca1\u7684\u7535\u6781\u4e0a\u3002\u6211\u4eec\u5c06\u9499\u949b\u77ff\u5c42\u7528\u4e00\u5c42\u805a\u5408\u7269\u8584\u819c\u5305\u88f9\u8d77\u6765\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u7cfb\u7edf\u3002\n\u6881\u8bf4\uff0c\u56fe\u6848\u5316\u7684\u8584\u819c\u5141\u8bb8\u9633\u5149\u5230\u8fbe\u592a\u9633\u80fd\u7535\u6c60\uff0c\u540c\u65f6\u4fdd\u62a4\u5b83\uff0c\u5e76\u4f5c\u4e3a\u7535\u6c60\u548c\u7535\u6781\u4e4b\u95f4\u7684\u7edd\u7f18\u4f53\u3002\n\u5362\u8bf4\uff0c\u6709\u4e86\u4e00\u4e2a\u5de7\u5999\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u4f60\u53ef\u4ee5\u6f5c\u5728\u5730\u5236\u9020\u4e00\u4e2a\u81ea\u6211\u7ef4\u6301\u7684\u5faa\u73af\u3002\u5373\u4f7f\u5728\u6ca1\u6709\u9633\u5149\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u5316\u5b66\u71c3\u6599\u7684\u5f62\u5f0f\u50a8\u5b58\u80fd\u91cf\u3002\u4f60\u53ef\u4ee5\u628a\u6c22\u6c14\u548c\u6c27\u6c14\u4ea7\u54c1\u653e\u5728\u4e0d\u540c\u7684\u6cb9\u7bb1\u91cc\uff0c\u5e76\u52a0\u5165\u53e6\u4e00\u4e2a\u6a21\u5757\uff0c\u6bd4\u5982\u71c3\u6599\u7535\u6c60\uff0c\u5c06\u8fd9\u4e9b\u71c3\u6599\u91cd\u65b0\u8f6c\u5316\u4e3a\u7535\u80fd\u3002\n\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u5c06\u7ee7\u7eed\u6539\u8fdb\u5c01\u88c5\u6280\u672f\u4ee5\u53ca\u592a\u9633\u80fd\u672c\u8eab\uff0c\u4ee5\u63d0\u9ad8\u6a21\u5757\u7684\u6548\u7387\u3002\u66f4\u591a\u4fe1\u606f\uff1a\u8d3e\u4eae\u7b49\uff0c\u4e00\u79cd\u9762\u5411\u592a\u9633\u80fd\u9a71\u52a8\u7684\u4f4e\u6210\u672c\u548c\u9ad8\u6548\u7387\u7684\u96c6\u6210\u88c5\u7f6e\uff0cACS Nano(2020)\u3002\u7f51\u5740\uff1a10.1021/acsnano.9b09053", "note_en": "Rice University researchers have created an efficient, low-cost device that splits water to produce hydrogen fuel.    The platform developed by the Brown School of Engineering lab of Rice materials scientist Jun Lou integrates catalytic electrodes and   that, when triggered by sunlight, produce electricity. The current flows to the catalysts that turn water into hydrogen and oxygen, with a sunlight-to-hydrogen efficiency as high as 6.7%.\n  This sort of catalysis isn&#39;t new, but the lab packaged a   layer and the electrodes into a single module that, when dropped into water and placed in sunlight, produces hydrogen with no further input.\n  The   introduced by Lou, lead author and Rice postdoctoral fellow Jia Liang and their colleagues in the American Chemical Society journal  ACS Nano is a self-sustaining producer of   that, they say, should be simple to produce in bulk.\n  &#34;The concept is broadly similar to an artificial leaf,&#34; Lou said. &#34;What we have is an integrated module that turns sunlight into electricity that drives an electrochemical reaction. It utilizes water and sunlight to get chemical fuels.&#34;\n  Perovskites are crystals with cubelike lattices that are known to harvest light. The most efficient perovskite   produced so far achieve an efficiency above 25%, but the materials are expensive and tend to be stressed by light, humidity and heat.\n  &#34;Jia has replaced the more expensive components, like platinum, in perovskite solar cells with alternatives like carbon,&#34; Lou said. &#34;That lowers the entry barrier for commercial adoption. Integrated devices like this are promising because they create a system that is sustainable. This does not require any external power to keep the module running.&#34;\n  Liang said the key component may not be the perovskite but the polymer that encapsulates it, protecting the module and allowing to be immersed for long periods. &#34;Others have developed catalytic systems that connect the solar cell outside the water to immersed electrodes with a wire,&#34; he said. &#34;We simplify the system by encapsulating the perovskite layer with a Surlyn (polymer) film.&#34;\n  The patterned film allows sunlight to reach the solar cell while protecting it and serves as an insulator between the cells and the electrodes, Liang said.\n  &#34;With a clever system design, you can potentially make a self-sustaining loop,&#34; Lou said. &#34;Even when there&#39;s no sunlight, you can use stored energy in the form of chemical fuel. You can put the hydrogen and oxygen products in separate tanks and incorporate another module like a fuel cell to turn those fuels back into electricity.&#34;\n  The researchers said they will continue to improve the encapsulation technique as well as the solar   themselves to raise the efficiency of the modules.        More information:\t\t\t\t\t\t\t\t\t\t\t\tJia Liang et al, A Low-Cost and High-Efficiency Integrated Device toward Solar-Driven Water Splitting,  ACS Nano (2020).  DOI: 10.1021/acsnano.9b09053", "posttime": "2020-05-06 02:30:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53f6\u5b50,leaf,\u9633\u5149,sunlight", "title": "\u201c\u4eba\u9020\u53f6\u5b50\u201d\u6982\u5ff5\u542f\u53d1\u4e86\u592a\u9633\u80fd\u71c3\u6599\u751f\u4ea7\u7684\u7814\u7a76", "title_en": "'Artificial leaf' concept inspires research into solar-powered fuel production", "transed": 1, "url": "https://phys.org/news/2020-05-water-splitting-module-source-perpetual-energy.html", "via": "", "real_tags": ["\u53f6\u5b50", "leaf", "\u9633\u5149", "sunlight"]}, {"category": "", "categoryclass": "", "imagename": "6db21dab327bbcfaf519f0c3c9d3a71b.jpg", "infoid": 1000798, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u76846\u5468\u91cc\uff0c\u6211\u4eec\u770b\u5230\u4e86\u7a7a\u524d\u6570\u91cf\u7684\u4eba\u60f3\u8981\u642c\u51fa\u65e7\u91d1\u5c71\u6e7e\u533a\uff0c\u800c\u51e0\u4e4e\u6ca1\u6709\u4eba\u60f3\u8981\u642c\u5230\u8fd9\u4e2a\u5730\u533a\u3002\n\u98ce\u9669\u6295\u8d44\u653e\u7f13\uff0c\u4ee5\u53ca\u521d\u521b\u4f01\u4e1a\u548c\u79d1\u6280\u516c\u53f8\u7684\u5927\u89c4\u6a21\u88c1\u5458\uff0c\u53ef\u80fd\u662f\u63a8\u52a8\u51c0\u79fb\u6c11\u6a21\u5f0f\u6025\u5267\u8f6c\u53d8\u7684\u4e00\u4e9b\u4e3b\u8981\u56e0\u7d20\u3002\n\u5728\u6d89\u53ca\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u5927\u7ea61200\u6b21\u79fb\u52a8\u641c\u7d22\u4e2d\uff0c\u8fd190%\u662f\u5173\u4e8e\u51fa\u5883\u642c\u8fc1\u7684\u3002\u6d1b\u6749\u77f6\u548c\u5965\u65af\u6c40\u662f\u6700\u53d7\u6b22\u8fce\u7684\u76ee\u7684\u5730\u4e4b\u4e00\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u53bb\u5e74\u540c\u671f\uff0c\u6211\u4eec\u7684\u642c\u5bb6\u6210\u672c\u8ba1\u7b97\u5668\u4e0a\u6709980\u6b21\u6d89\u53ca\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u642c\u5bb6\u641c\u7d22\u3002\u5728\u8fd9980\u4e2a\u8bf7\u6c42\u4e2d\uff0c57%\u662f\u5411\u5916\u8fc1\u79fb\uff0c43%\u662f\u5411\u65e7\u91d1\u5c71\u6e7e\u533a\u8fc1\u79fb\u3002\u8fd9\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5927\u57ce\u5e02\u6765\u8bf4\u90fd\u662f\u5178\u578b\u7684\uff0c\u56e0\u4e3a\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u65f6\u95f4\u90fd\u6709\u5f88\u591a\u4eba\u8fdb\u8fdb\u51fa\u51fa\u3002\n\u4f46\u6211\u4eec\u76ee\u524d\u770b\u5230\u7684\u662f\uff0c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u6d89\u53ca\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u642c\u5bb6\u641c\u7d22\u4e2d\uff0c90%\u662f\u76ee\u524d\u5e0c\u671b\u79bb\u5f00\u7684\u5c45\u6c11\uff0c\u53ea\u670910%\u7684\u4eba\u5e0c\u671b\u642c\u8fdb\u8be5\u5730\u533a\u3002\u8fd9\u4e0e\u53bb\u5e74\u7684\u60c5\u51b5\u622a\u7136\u4e0d\u540c\u3002\n\u65e7\u91d1\u5c71\u6e7e\u533a\u6709\u7740\u590d\u6742\u7684\u8fc1\u5f99\u5386\u53f2\uff0c\u6240\u4ee5\u5f88\u96be\u8bf4\u5230\u5e95\u662f\u4ec0\u4e48\u63a8\u52a8\u4e86\u8fd9\u4e00\u53d8\u5316\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u8fd8\u89c2\u5bdf\u5230\u7ebd\u7ea6\u7b49\u5176\u4ed6\u5927\u57ce\u5e02\u7684\u642c\u8fc1\u8bf7\u6c42\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\u4f46\u8be5\u5730\u533a\u6700\u7ec8\u53ef\u80fd\u4f1a\u7ecf\u5386\u4eba\u53e3\u51cf\u5c11\u7684\u539f\u56e0\u6709\u5f88\u591a\uff1a\n\u867d\u7136\u957f\u671f\u51c0\u79fb\u6c11\u8d8b\u52bf\u9700\u8981\u6570\u5e74\u65f6\u95f4\u624d\u80fd\u8861\u91cf\uff0c\u4f46\u8fd9\u4e00\u65e9\u671f\u6570\u636e\u786e\u5b9e\u8868\u660e\uff0c\u79bb\u5f00\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u5c45\u6c11\u5927\u5e45\u52a0\u901f\u3002\u8fd9\u662f\u6211\u4eec\u4e00\u5b9a\u4f1a\u5bc6\u5207\u5173\u6ce8\u7684\u8d8b\u52bf\u3002", "note_en": "Over the past 6 weeks, we\u2019ve seen an unprecedented number of people looking to relocate out of the  Bay Area, and almost no one looking to move into the region.\n  The slow down in VC funding, as well as massive layoffs at startups and tech companies, could be some of the major factors driving this sharp shift in net migration patterns.\n  Out of roughly 1,200 moving searches involving the Bay Area,  almost 90% have been for outbound relocations. Los Angeles and Austin were among the most popular destinations.\n  To put this into perspective, during the same period last year, there were 980 move searches involving the Bay Area on our  moving cost calculator. Of those 980 requests, 57% were for outbound moves and 43% were for moves into the Bay Area. This is typical for any major city that has a lot of people coming in and out at any given time.\n  But what we\u2019re currently seeing is an incredible 90% of move searches involving the Bay Area are current residents looking to leave and only 10% are people looking to move into the region. That\u2019s a very different picture from just last year.\n      The Bay Area has a  complicated migration history, so it\u2019s hard to say precisely what\u2019s driving the change. We\u2019ve also observed changes in relocation requests out of other major cities like  New York recently.\n  But there are many reasons why the region could finally be experiencing a shrinking population:\n    While long term net migration trends take years to measure, this early data does suggest a major acceleration in residents leaving the Bay Area. This is a trend we will certainly be keeping an eye on.", "posttime": "2020-05-06 02:18:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e7\u91d1\u5c71,\u901f\u5ea6,francisco,\u8d8b\u52bf,major", "title": "\u65e7\u91d1\u5c71\u5c45\u6c11\u6b63\u4ee5\u524d\u6240\u672a\u6709\u7684\u901f\u5ea6\u79bb\u5f00", "title_en": "San Francisco Residents Are Leaving at an Unprecedented Rate", "transed": 1, "url": "https://www.movebuddha.com/blog/sf-outbound-surge-2020/", "via": "", "real_tags": ["\u65e7\u91d1\u5c71", "\u901f\u5ea6", "francisco", "\u8d8b\u52bf", "major"]}, {"category": "", "categoryclass": "", "imagename": "99f2a4867840879bbc756f59cbd839ff.jpg", "infoid": 1000795, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea2019\u5e7410\u6708\u4ee5\u6765\uff0cFacebook\u53ca\u5176\u5b50\u516c\u53f8WhatsApp\u4e00\u76f4\u4e0e\u4ee5\u8272\u5217\u95f4\u8c0d\u8f6f\u4ef6\u516c\u53f8NSO Group\u5728\u6cd5\u5ead\u4e0a\u4e89\u6267\u4e0d\u4e0b\uff0c\u58f0\u79f0\u8be5\u516c\u53f8\u5229\u7528WhatsApp\u4e3a\u95f4\u8c0d\u8f6f\u4ef6\u5206\u53d1\u63d0\u4f9b\u4fbf\u5229\u3002\u867d\u7136\u5c1a\u672a\u5f97\u51fa\u7ed3\u8bba\uff0c\u4f46\u6b64\u6848\u63d0\u51fa\u4e86\u5173\u4e8eNSO\u96c6\u56e2\u548c\u7528\u6237\u9690\u79c1\u72b6\u51b5\u7684\u6709\u8da3\u6982\u5ff5\u3002\u4f46\u6ca1\u5173\u7cfb\uff0c\u8fd9\u5bb6\u81ed\u540d\u662d\u8457\u7684\u6076\u610f\u8f6f\u4ef6\u4f9b\u5e94\u5546\u73b0\u5728\u6b63\u5728\u9500\u552e\u4e00\u6b3e\u51a0\u72b6\u75c5\u6bd2\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u60f3\u5fc5\u8ddf\u95f4\u8c0d\u4e1a\u52a1\u6ca1\u4ec0\u4e48\u5173\u7cfb\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u7b80\u8981\u4ecb\u7ecd\u4e86WhatsApp\u9ed1\u5ba2\u6848\u4ef6\u4ee5\u53caNSO\u96c6\u56e2\u5728\u5176\u4e2d\u6240\u626e\u6f14\u7684\u89d2\u8272\uff0c\u67e5\u770b\u4e86\u8fd9\u5bb6\u95f4\u8c0d\u8f6f\u4ef6\u516c\u53f8\u7684\u51a0\u72b6\u75c5\u6bd2\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u6307\u51fa\u4e86\u4e00\u4e9b\u5bf9\u6b64\u95ee\u9898\u7684\u62c5\u5fe7\u3002\n2019\u5e7410\u670829\u65e5\uff0cWhatsApp\u53d1\u5e03\u4e86\u4e00\u4efd\u58f0\u660e\uff0c\u901a\u77e5\u7528\u6237\u56e2\u961f\u57282019\u5e745\u6708\u65e9\u4e9b\u65f6\u5019\u963b\u6b62\u4e86\u4e00\u6b21\u7f51\u7edc\u653b\u51fb\u3002\u5728\u58f0\u660e\u4e2d\uff0cWhatsApp\u5c06\u6b64\u6b21\u653b\u51fb\u5f52\u548e\u4e8eNSO\u96c6\u56e2\uff0c\u8fd9\u662f\u4e00\u5bb6\u5411\u5168\u7403\u5404\u56fd\u653f\u5e9c\u548c\u201c\u6388\u6743\u673a\u6784\u201d\u51fa\u552e\u95f4\u8c0d\u8f6f\u4ef6\u7684\u4ee5\u8272\u5217\u516c\u53f8\u3002\u8fd9\u5bb6\u4fe1\u4f7f\u53ca\u5176\u6bcd\u516c\u53f8Facebook\u4e5f\u5bf9NSO\u96c6\u56e2\u63d0\u8d77\u4e86\u8bc9\u8bbc\u3002\n\u6839\u636eWhatsApp\u7684\u7814\u7a76\uff0c\u4fe1\u4f7f\u7684\u89c6\u9891\u901a\u8bdd\u670d\u52a1\u88ab\u5229\u7528\uff0c\u5c06\u6076\u610f\u4ee3\u7801\u690d\u5165\u7528\u6237\u7684\u79fb\u52a8\u8bbe\u5907\u3002\u5927\u7ea61400\u540d\u7528\u6237\u6210\u4e3a\u8fd9\u6b21\u653b\u51fb\u7684\u76ee\u6807\u3002\u539f\u6765\uff0c\u8fd9\u4e9b\u7528\u6237\u4e2d\u6709\u8bb0\u8005\u3001\u4eba\u6743\u6d3b\u52a8\u5bb6\u548c\u6301\u4e0d\u540c\u653f\u89c1\u8005\u3002\n\u5728\u653b\u51fb\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u7528\u6237\u6536\u5230\u4f1a\u7528\u95f4\u8c0d\u8f6f\u4ef6\u611f\u67d3\u8bbe\u5907\u7684\u8bed\u97f3\u7535\u8bdd\u3002\u76ee\u6807\u751a\u81f3\u4e0d\u9700\u8981\u63a5\u7535\u8bdd\u3002\u6709\u95ee\u9898\u7684\u95f4\u8c0d\u8f6f\u4ef6\u662fPegasus\uff0c\u8fd9\u662fNSO\u96c6\u56e2\u5f00\u53d1\u548c\u9500\u552e\u7684\u65d7\u8230\u89e3\u51b3\u65b9\u6848\u3002\u8fdb\u5165Android\u6216iOS\u8bbe\u5907\u540e\uff0cPegasus\u53ef\u4ee5\u53d1\u56de\u5bc6\u7801\u3001\u8054\u7cfb\u4eba\u3001\u6d88\u606f\u548c\u65e5\u5386\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u76f8\u673a\u3001\u9ea6\u514b\u98ce\u548cGPS\u4f20\u611f\u5668\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\n\u590d\u6742\u7684\u6cd5\u5ead\u6848\u4ef6\u4ecd\u5728\u8fdb\u884c\u4e2d\u3002\u8138\u4e66\u548cWhatsApp\u58f0\u79f0\uff0cNSO\u96c6\u56e2\u8fdd\u53cd\u4e86\u201c\u4fe1\u4f7f\u670d\u52a1\u6761\u6b3e\u201d\u3001\u201c\u8ba1\u7b97\u673a\u6b3a\u8bc8\u548c\u6ee5\u7528\u6cd5\u201d\u4ee5\u53ca\u0441\u7684\u5176\u4ed6\u6cd5\u5f8b\u3002\u4f5c\u4e3a\u56de\u62a5\uff0cNSO\u96c6\u56e2\u8868\u793a\uff0c\u4ed6\u4eec\u4e0e\u6b64\u6b21\u653b\u51fb\u53ca\u5176\u5ba2\u6237\u4f7f\u7528\u8f6f\u4ef6\u7684\u65b9\u5f0f\u65e0\u5173\u3002\n\u201c\u6211\u4eec\u7684\u4ea7\u54c1\u7528\u4e8e\u5236\u6b62\u6050\u6016\u4e3b\u4e49\u3001\u904f\u5236\u66b4\u529b\u72af\u7f6a\u548c\u62ef\u6551\u751f\u547d\u3002NSO\u96c6\u56e2\u5e76\u4e0d\u4e3a\u5176\u5ba2\u6237\u8fd0\u8425Pegasus\u8f6f\u4ef6\uff0c\u201c\u8be5\u516c\u53f8\u544a\u8bc9\u201d\u536b\u62a5\u201c(The Guardian)\u3002\n\u8ba9\u6b64\u6848\u53d8\u5f97\u68d8\u624b\u7684\u662f\uff0cWhatsApp\u5728\u6280\u672f\u4e0a\u5e76\u6ca1\u6709\u88ab\u9ed1\u5ba2\u653b\u51fb\uff0c\u800c\u662f\u88ab\u5229\u7528\u6765\u4fb5\u5165\u7528\u6237\u7684\u8bbe\u5907\u3002\n\u5b83\u53d8\u5f97\u66f4\u65f6\u9ae6\u4e86\u30022020\u5e744\u670830\u65e5\uff0cFacebook\u8bf7\u6c42\u6cd5\u9662\u53d6\u6d88\u4ee3\u8868NSO\u96c6\u56e2\u7684King&amp\uff1bSpalding\u5f8b\u5e08\u4e8b\u52a1\u6240\u7684\u8d44\u683c\u3002\u4ed6\u4eec\u4e89\u8fa9\u8bf4\u53ef\u80fd\u5b58\u5728\u5229\u76ca\u51b2\u7a81\u3002\u7531\u4e8e\u8be5\u516c\u53f8\u6b64\u524d\u66fe\u5728\u53e6\u4e00\u8d77\u6848\u4ef6\u4e2d\u4ee3\u8868WhatsApp\uff0c\u4ed6\u4eec\u53ef\u80fd\u83b7\u5f97\u4e86\u4e00\u4e9b\u77e5\u8bc6\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u83b7\u5f97\u4e0d\u516c\u5e73\u7684\u4f18\u52bf\u3002\u672c\u6848\u6d89\u53ca\u53f8\u6cd5\u90e8\u7834\u89e3WhatsApp\u52a0\u5bc6\u7684\u52aa\u529b\uff0c\u800cKing&amp\uff1bSpalding\u6b63\u5728\u4fdd\u62a4\u52a0\u5bc6\u4e0d\u53d7\u653f\u5e9c\u653b\u51fb\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u5f53\u65f6\u8d1f\u8d23\u6b64\u6848\u7684King&Amp\uff1bSpalding\u5f8b\u5e08\u4e8b\u52a1\u6240\u7684\u5f8b\u5e08\u662f\u73b0\u4efb\u8054\u90a6\u8c03\u67e5\u5c40\u5c40\u957f\u514b\u91cc\u65af\u6258\u5f17\u00b7\u96f7(Christopher Wray)\u3002\u5982\u4eca\uff0c\u4ed6\u662f\u79d1\u6280\u516c\u53f8\u5f15\u5165\u7684\u5f3a\u52a0\u5bc6\u7684\u53cd\u5bf9\u8005\u3002\n\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\uff0c\u4e0eFacebook\u7684\u6cd5\u5f8b\u6218\u7ed9NSO\u96c6\u56e2\u53ca\u5176\u5728\u95f4\u8c0d\u8f6f\u4ef6\u4e1a\u52a1\u65b9\u9762\u53d6\u5f97\u7684\u6210\u5c31\u5e26\u6765\u4e86\u5927\u91cf\u5a92\u4f53\u5173\u6ce8\u3002\u8fd9\u4e00\u70b9\u6070\u597d\u7279\u522b\u91cd\u8981\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u73b0\u5728\u6b63\u5728\u63a8\u52a8\u4e00\u9879\u65b0\u7684\u5927\u4ea7\u54c1\u3002\n\u4e00\u5bb6\u5229\u7528\u5176\u5168\u90e8\u6280\u672f\u548c\u77e5\u8bc6\u901a\u8fc7\u9500\u552e\u95f4\u8c0d\u8f6f\u4ef6\u8d5a\u53d6\u6536\u5165\u7684\u516c\u53f8\uff0c\u5c06\u5904\u4e8e\u5f00\u53d1\u51a0\u72b6\u75c5\u6bd2\u8ddf\u8e2aIT\u89e3\u51b3\u65b9\u6848\u7684\u5b8c\u7f8e\u5730\u4f4d\u3002\u81f3\u5c11\u5728\u4f7f\u7528\u6076\u610f\u8f6f\u4ef6\u63d0\u4f9b\u5546\u5236\u9020\u7684\u826f\u6027\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u524d\u63d0\u771f\u6b63\u6df1\u5165\u4eba\u5fc3\u4e4b\u524d\uff0c\u60c5\u51b5\u4f3c\u4e4e\u662f\u8fd9\u6837\u7684\u3002\nNSO\u96c6\u56e2\u6b63\u5728\u9500\u552e\u4e00\u79cd\u4ee3\u53f7\u4e3aFleming\u7684\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u65e8\u5728\u6839\u636e\u624b\u673a\u6570\u636e\u76d1\u63a7\u548c\u9884\u6d4b\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\u8be5\u516c\u53f8\u5411\u4e16\u754c\u5404\u5730\u7684\u653f\u5e9c\u63a8\u9500\uff0c\u58f0\u79f0\u4e00\u4e9b\u56fd\u5bb6\u5df2\u7ecf\u5728\u6d4b\u8bd5\u8be5\u8f6f\u4ef6\u3002\n\u636e\u62a5\u9053\uff0cFleming\u4f7f\u7528\u6539\u7f16\u7248\u672c\u7684\u7528\u6237\u754c\u9762\u548c\u5206\u6790\u5de5\u5177\uff0c\u65e8\u5728\u8865\u5145NSO\u96c6\u56e2\u5236\u9020\u7684\u81ed\u540d\u662d\u8457\u7684\u6076\u610f\u8f6f\u4ef6Pegasus\u3002\u8be5\u516c\u53f8\u58f0\u79f0\uff0c\u5b83\u4e0d\u4f1a\u8bbf\u95ee\u4efb\u4f55\u4fe1\u606f\uff0c\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4e5f\u4e0d\u4f1a\u6536\u96c6\u5730\u7406\u4f4d\u7f6e\u6570\u636e\u3002\u653f\u5e9c\u5ba2\u6237\u5c06\u4e0d\u5f97\u4e0d\u8d70\u8001\u8def\uff0c\u8981\u6c42\u5f53\u5730\u79fb\u52a8\u7535\u8bdd\u8fd0\u8425\u5546\u5206\u4eab\u4ed6\u4eec\u7684\u8bb0\u5f55\u3002\n\u201c\u8fd9\u662f\u4e00\u5bb6\u81ed\u540d\u662d\u8457\u7684\u95f4\u8c0d\u8f6f\u4ef6\u516c\u53f8\u6269\u5c55\u5230\u5927\u89c4\u6a21\u76d1\u63a7\u9886\u57df\u7684\u4e00\u6b21\u6781\u5176\u6124\u4e16\u5ac9\u4fd7\u7684\u5c1d\u8bd5\u3002\u4e16\u754c\u4e0a\u7684\u6bcf\u4e2a\u516c\u6c11\u90fd\u5e0c\u671b\u5c3d\u5feb\u6062\u590d\u6b63\u5e38\u3002\u5bf9\u76d1\u63a7\u6280\u672f\u7684\u6dd8\u91d1\u70ed\u5f88\u5bb9\u6613\u610f\u5473\u7740\u4eba\u4eec\u5bf9\u9690\u79c1\u7684\u6b63\u5e38\u671f\u671b\uff0c\u6211\u4eec\u5c06\u5f88\u96be\u56de\u5230\u90a3\u91cc\uff0c\u201c\u516c\u6c11\u5b9e\u9a8c\u5ba4\u7684\u9ad8\u7ea7\u7814\u7a76\u5458\u7ea6\u7ff0\u00b7\u65af\u79d1\u7279-\u96f7\u987f(John Scott-rayton)\u544a\u8bc9\u4e3b\u677f\u3002\nNSO\u96c6\u56e2\u53c2\u4e0e\u62ef\u6551\u4e16\u754c\u514d\u4e8e\u6d41\u611f\u5927\u6d41\u884c\u7684\u5927\u80c6\u51b3\u5b9a\u5f15\u53d1\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u53ef\u80fd\u81f3\u5c11\u4e5f\u6709\u4e00\u4e9b\u4eba\u8868\u793a\u6000\u7591\u3002\u9700\u8981\u91cd\u7533\u7684\u662f\uff0c\u8be5\u516c\u53f8\u5377\u5165\u4e86\u8bb8\u591a\u4e89\u8bae\uff0c\u56e0\u4e3a\u5176Pegasus\u95f4\u8c0d\u8f6f\u4ef6\u5df2\u88ab\u5168\u7403\u5404\u56fd\u653f\u5e9c\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4ee5\u7784\u51c6\u4e0d\u60f3\u8981\u7684\u4eba\u3002\u5373\u4f7fNSO\u96c6\u56e2\u8bf4\u7684\u662f\u771f\u7684\uff0c\u4ed6\u4eec\u7684\u610f\u56fe\u662f\u597d\u7684\uff0c\u4e5f\u6ca1\u6709\u592a\u591a\u7406\u7531\u76f8\u4fe1\u4ed6\u4eec\u7684\u5ba2\u6237\u4f1a\u8868\u73b0\u51fa\u6765\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8fc7\u53bb\u663e\u7136\u4e0d\u4f1a\u8fd9\u6837\u505a\u3002\n\u201c\u4e0a\u4e00\u6b21\u793e\u533a\u4f20\u64ad\u8fd9\u79cd\u6d41\u884c\u75c5\u7684\u75c5\u4f8b\u5df2\u7ecf\u8fc7\u53bb\u5f88\u4e45\u4e86\uff0c\u6211\u62c5\u5fc3\u7684\u662f\uff0c\u50cfNSO\u8fd9\u6837\u7684\u65e0\u826f\u516c\u53f8\u6b63\u5728\u63a8\u9500\u7684\u8fd9\u4e9b\u76d1\u63a7\u673a\u5236\u5c06\u7ee7\u7eed\u7559\u5728\u6211\u4eec\u7684\u7f51\u7edc\u4e0a\uff0c\u7ee7\u7eed\u8ddf\u8e2a\u6211\u4eec\u7684\u624b\u673a\u3002\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u9632\u6b62\u7684\u53cd\u4e4c\u6258\u90a6\u7ed3\u679c\uff0c\u201c\u7ea6\u7ff0\u00b7\u65af\u79d1\u7279-\u96f7\u987f\u8865\u5145\u9053\u3002\n\u8003\u8651\u5230\u8fd9\u79cd\u6709\u4e89\u8bae\u7684\u60c5\u51b5\uff0cNSO\u96c6\u56e2\u7684\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6545\u4e8b\u9020\u6210\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u3002\n\u6839\u636e\u7814\u7a76\uff0c\u5927\u7ea641%\u7684\u7f8e\u56fd\u6210\u5e74\u4eba\u65e2\u6709\u6280\u672f\u80fd\u529b\u4e5f\u6709\u4f7f\u7528\u75c5\u6bd2\u8ddf\u8e2a\u5e94\u7528\u7684\u610f\u613f\u3002\u4e86\u89e3\u5230\u5176\u4e2d\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u662f\u7531\u4e3a\u653f\u5e9c\u914d\u5907\u5de6\u53f3\u95f4\u8c0d\u8f6f\u4ef6\u7684\u516c\u53f8\u5f00\u53d1\u7684\uff0c\u8fd9\u5bf9\u5168\u7403\u7684\u52aa\u529b\u6ca1\u6709\u4e1d\u6beb\u5e2e\u52a9\u3002\u8fd8\u6709\u4e00\u4e2a\u4e8b\u5b9e\u662f\uff0c\u4e00\u4e9b\u653f\u5e9c\u975e\u5e38\u6e34\u671b\u6ee5\u7528\u4ed6\u4eec\u5f3a\u6709\u529b\u7684\u76d1\u6d4b\u5de5\u5177\uff0c\u65e0\u8bba\u662f\u5426\u6d41\u884c\u3002\n\u4f3c\u4e4e\u6709\u7406\u7531\u8ba4\u4e3a\uff0c\u4e00\u4e2a\u65e8\u5728\u8ddf\u8e2a\u5927\u6d41\u884c\u4f20\u64ad\u7684\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u88ab\u65e0\u5904\u4e0d\u5728\u5730\u4f7f\u7528\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u5f53\u4e00\u534a\u7684\u4eba\u53e3\u4ecd\u7136\u662f\u672a\u77e5\u53d8\u91cf\u65f6\uff0c\u8fd9\u79cd\u8ddf\u8e2a\u7684\u6709\u6548\u6027\u662f\u503c\u5f97\u6000\u7591\u7684\u3002\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4e24\u96be\u5883\u5730\u3002\u73b0\u5728\u770b\u6765\uff0c\u5168\u4e16\u754c\u90fd\u53ef\u4ee5\u5229\u7528\u4e00\u5207\u5e2e\u52a9\u6765\u63a7\u5236\u75ab\u60c5\u548c\u7ecf\u6d4e\uff0c\u800c\u8ffd\u8e2a\u75c5\u6bd2\u4f20\u64ad\u7684\u624b\u6bb5\u53ef\u80fd\u4f1a\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u4f46\u8981\u4ed8\u51fa\u5de8\u5927\u7684\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u5728\u5065\u5eb7\u5371\u673a\u4e4b\u540e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u989d\u5916\u7684\u76d1\u6d4b\u53ef\u80fd\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002\n\u5728Twitter\u548cFacebook\u4e0a\u5173\u6ce8\u6211\u4eec\uff0c\u52a0\u5165\u6211\u4eec\u7684\u7535\u62a5\u9891\u9053\uff0c\u4e86\u89e3\u52a0\u5bc6\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u4e3a\u4ec0\u4e48\u5b83\u5f88\u91cd\u8981\u3002", "note_en": "Since October 2019, Facebook and it\u2019s subsidiary WhatsApp have been fighting in court with an Israeli spyware firm NSO Group, claiming that the firm used WhatsApp to facilitate spyware distribution. Although the conclusion is yet to be reached, the case brought up interesting notions about NSO Group and the situation with users\u2019 privacy. But nevermind that, the notorious malware vendor is now selling a COVID-19 tracking app. Nothing of that spying business, presumably.\n  In this piece, we give a rundown on the WhatsApp hacking case and the role of NSO Group in it, look at the spyware firm\u2019s COVID-19 app and point out a few concerns about it all.\n  On October 29th, 2019, WhatsApp published a  statement informing the users about a cyberattack the team stopped earlier in May 2019. In the statement, WhatsApp attributed the attack to  NSO Group, an Israeli firm that sells spyware to governments and \u201cauthorized agencies\u201d around the globe. The messenger and its parent Facebook have also filed a  lawsuit against NSO Group.\n According to WhatsApp\u2019s research, the messenger\u2019s video call service was exploited to implant malicious code into the user\u2019s mobile devices. Around 1,400 users were targeted by the attack. It  turned out that among these users were journalists, human rights activists, and dissidents.\n Over the course of the attack, these users received voice calls that would infect the device with spyware. The targets didn\u2019t even have to pick up the call. The spyware in question is Pegasus, a flagship solution developed and sold by NSO Group. After getting onto an Android or iOS device, Pegasus was able to send back passwords, contacts, messages, and calendars, as well as use cameras, microphones, and GPS sensors to get additional information.\n The complicated court case is still unfolding. Facebook and WhatsApp  claim that NSO Group violated the messenger\u2019s Terms of Service, the Computer Fraud and Abuse Act, and \u0441ertain other laws. In return, NSO Group  said that they had nothing to do with the attack and the ways their clients use the software.\n \u201cOur products are used to stop terrorism, curb violent crime, and save lives. NSO Group does not operate the Pegasus software for its clients,\u201d  the company told The Guardian.\n What makes the case tricky is the fact that WhatsApp wasn\u2019t technically hacked, but exploited to hack into user\u2019s devices.\n It gets funkier. On April 30th, 2020, Facebook  asked the court to disqualify the law firm King &amp; Spalding representing NSO Group. The argued that there may be a conflict of interest. Since the firm had previously represented WhatsApp in another case, they may have gained knowledge that would give them an unfair advantage. The case in question had to do with the Department of Justice\u2019s efforts to break through WhatsApp\u2019s encryption, and King &amp; Spalding were protecting the encryption against the government.\n Interestingly enough, at that time, the lawyer at King &amp; Spalding who worked on the case  was Christopher Wray, the current director of the FBI. Nowadays, he is an opponent of strong encryption introduced by tech companies.\n Regardless of the outcome, the legal fight with Facebook brought a lot of media attention to NSO Group and its  achievements in the spyware business. This happened to be especially important, as the company now pushes a new big product.\n  A company that makes revenue from selling spyware with all its tech and knowledge would be in a perfect position to develop an IT-solution for COVID-19 tracking. Or so it may seem until the premise of using a benign tracking app made by a malware provider really sinks in.\n NSO Group is  selling a software solution ambitiously codenamed   Fleming, which is meant to monitor and project the spread of the virus based on mobile phone data. The company pitches governments around the world claiming that some countries are already testing the software.\n Reportedly,  Fleming uses adapted versions of the user interface and analytical tool that were designed to complement Pegasus, the notorious malware made by NSO Group. The company claimed that it won\u2019t be accessing any information and the app won\u2019t be collecting geolocation data. The government clients will have to go the old-fashioned way and ask local mobile phone operators to share their records.\n \u201cThis is an extremely cynical attempt from a notorious spyware company to branch out into mass surveillance. Every citizen of the world wants to go back to normal as soon as possible. The gold rush to surveillance technology could easily mean that there is a normal expectation of privacy that we will have a hard time going back to,\u201d  John Scott-Railton, a senior researcher at the Citizen Lab,   told  the Motherboard.\n NSO Group\u2019s bold decision to take part in saving the world from the pandemic raised a lot of questions and probably at least a few eyebrows. To reiterate, the company is involved in numerous controversies, as its Pegasus spyware has been used extensively by governments around the globe to target unwanted people. Even if what NSO Group says is true and their intentions are good, there aren\u2019t many reasons to believe that their clients will behave, as they clearly haven\u2019t in the past.\n \u201cLong after the last community transmitted case of this pandemic, my fear is that these surveillance mechanisms that are being pitched by unscrupulous companies like NSO will stay on our networks and continue to track our phones. This is one dystopian outcome that we can prevent,\u201d  John Scott-Railton added.\n  Given the controversial circumstances, the story with NSO Group\u2019s tracking app contributes to a much larger problem.\n According to  research, about 41% of American adults have both the technical capacity and the willingness to use a virus-tracking app. Learning that some of these apps are made by companies that equip governments with spyware left and right will not help the global effort in the slightest. And then there\u2019s the fact that some governments are very eager to misuse their potent surveillance tools, pandemic or not.\n It appears reasonable to assume that an app meant to track the spread of a pandemic has to be used ubiquitously to work properly. When half of the population remains an unknown variable, the usefulness of such tracking is dubious.\n And then there\u2019s the big dilemma. It looks like right now the world could use every bit of help to get the pandemic and the economy under control and the means to track the spread of the virus could\u2019ve been very helpful. But there is a substantial price to pay, as extra surveillance is likely to remain in place long after the health crisis.\n Follow us on   Twitter  and   Facebook  and join our   Telegram channel  to know what\u2019s up with crypto and why it\u2019s important.", "posttime": "2020-05-06 02:05:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u95f4\u8c0d,spyware", "title": "\u81ed\u540d\u662d\u8457\u7684\u95f4\u8c0d\u8f6f\u4ef6\u4f9b\u5e94\u5546\u63a8\u51fa\u51a0\u72b6\u75c5\u6bd2\u8ddf\u8e2a\u89e3\u51b3\u65b9\u6848", "title_en": "Notorious Spyware Vendor Pushes Covid-19 Tracking Solution", "transed": 1, "url": "https://forklog.media/notorious-spyware-vendor-pushes-covid-19-tracking-solution/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u95f4\u8c0d", "spyware"]}, {"category": "", "categoryclass": "", "imagename": "c33a589f1243651c8ee9b454432af4ea.png", "infoid": 1000794, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u4ee5\u641c\u7d22X\u7a97\u53e3\u7cfb\u7edf(X11\uff0c\u6216\u7b80\u79f0X)\u662f\u4f4d\u56fe\u663e\u793a\u7684\u7a97\u53e3\u7cfb\u7edf\uff0c\u5728\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5f88\u5e38\u89c1\u3002\nX\u63d0\u4f9b\u4e86GUI\u73af\u5883\u7684\u57fa\u672c\u6846\u67b6\uff1a\u5728\u663e\u793a\u8bbe\u5907\u4e0a\u7ed8\u5236\u548c\u79fb\u52a8\u7a97\u53e3\uff0c\u4ee5\u53ca\u4e0e\u9f20\u6807\u548c\u952e\u76d8\u4ea4\u4e92\u3002X\u4e0d\u5f3a\u5236\u4f7f\u7528\u7528\u6237\u754c\u9762-\u8fd9\u662f\u7531\u5355\u72ec\u7684\u7a0b\u5e8f\u5904\u7406\u7684\u3002\u56e0\u6b64\uff0c\u57fa\u4e8eX\u7684\u73af\u5883\u7684\u89c6\u89c9\u6837\u5f0f\u5dee\u5f02\u5f88\u5927\uff1b\u4e0d\u540c\u7684\u7a0b\u5e8f\u53ef\u80fd\u5448\u73b0\u5b8c\u5168\u4e0d\u540c\u7684\u754c\u9762\u3002\nX\u8d77\u6e90\u4e8e1984\u5e74\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u7684\u96c5\u5178\u5a1c\u9879\u76ee\u3002[1][\u9700\u8981\u66f4\u597d\u7684\u6765\u6e90]X\u534f\u8bae\u81ea1987\u5e749\u6708\u4ee5\u6765\u4e00\u76f4\u5904\u4e8e\u7248\u672c11(\u56e0\u6b64&#34\uff1bX11&34\uff1b)\u3002X.Org\u57fa\u91d1\u4f1a\u9886\u5bfc\u4e86X\u9879\u76ee\uff0c\u76ee\u524d\u7684\u53c2\u8003\u5b9e\u73b0\u662fX.Org Server\uff0c\u6839\u636e\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bb8\u53ef\u548c\u7c7b\u4f3c\u7684\u8bb8\u53ef\u8bb8\u53ef\uff0cX.Org Server\u4f5c\u4e3a\u514d\u8d39\u548c\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u63d0\u4f9b\u3002[2]\u3002\nX\u662f\u4e00\u4e2a\u72ec\u7acb\u4e8e\u4f53\u7cfb\u7ed3\u6784\u7684\u7cfb\u7edf\uff0c\u7528\u4e8e\u8fdc\u7a0b\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u8f93\u5165\u8bbe\u5907\u529f\u80fd\u3002\u4f7f\u7528\u8054\u7f51\u7ec8\u7aef\u7684\u6bcf\u4e2a\u4eba\u90fd\u80fd\u591f\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u7528\u6237\u8f93\u5165\u8bbe\u5907\u4e0e\u663e\u793a\u5668\u4ea4\u4e92\u3002\n\u5728\u5176\u6807\u51c6\u53d1\u884c\u7248\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u5c3d\u7ba1\u7b80\u5355\u7684\u663e\u793a\u548c\u754c\u9762\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u5de5\u5177\u5305\u548c\u534f\u8bae\u6808\uff0c\u7528\u4e8e\u5728\u5927\u591a\u6570\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u548cOpenVMS\u4e0a\u6784\u5efa\u56fe\u5f62\u7528\u6237\u754c\u9762\uff0c\u5e76\u4e14\u5df2\u7ecf\u79fb\u690d\u5230\u8bb8\u591a\u5176\u4ed6\u5f53\u4ee3\u901a\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002\nX\u63d0\u4f9b\u4e86\u7528\u4e8e\u6784\u5efa\u8fd9\u6837\u7684GUI\u73af\u5883\u7684\u57fa\u672c\u6846\u67b6\u6216\u539f\u8bed\uff1a\u5728\u663e\u793a\u5668\u4e0a\u7ed8\u5236\u548c\u79fb\u52a8\u7a97\u53e3\uff0c\u4ee5\u53ca\u4e0e\u9f20\u6807\u3001\u952e\u76d8\u6216\u89e6\u6478\u5c4f\u4ea4\u4e92\u3002X\u4e0d\u5f3a\u5236\u4f7f\u7528\u7528\u6237\u754c\u9762\uff1b\u5355\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5904\u7406\u8fd9\u4e00\u70b9\u3002\u7a0b\u5e8f\u53ef\u4ee5\u5728\u6ca1\u6709\u7528\u6237\u754c\u9762\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528X\u7684\u56fe\u5f62\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u57fa\u4e8eX\u7684\u73af\u5883\u7684\u89c6\u89c9\u6837\u5f0f\u5dee\u5f02\u5f88\u5927\uff1b\u4e0d\u540c\u7684\u7a0b\u5e8f\u53ef\u80fd\u5448\u73b0\u5b8c\u5168\u4e0d\u540c\u7684\u754c\u9762\u3002\n\u4e0e\u5927\u591a\u6570\u65e9\u671f\u7684\u663e\u793a\u534f\u8bae\u4e0d\u540c\uff0cX\u4e13\u95e8\u8bbe\u8ba1\u4e3a\u5728\u7f51\u7edc\u8fde\u63a5\u4e0a\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u5728\u96c6\u6210\u6216\u8fde\u63a5\u7684\u663e\u793a\u8bbe\u5907\u4e0a\u4f7f\u7528\u3002X\u5177\u6709\u7f51\u7edc\u900f\u660e\u6027\uff0c\u8fd9\u610f\u5473\u7740\u5728\u7f51\u7edc(\u5982Internet)\u4e0a\u7684\u67d0\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684X\u7a0b\u5e8f\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u5176\u4ed6\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684X\u670d\u52a1\u5668\u4e0a\u663e\u793a\u5176\u7528\u6237\u754c\u9762\u3002X\u670d\u52a1\u5668\u901a\u5e38\u662fX\u5ba2\u6237\u7aef\u7684\u56fe\u5f62\u8d44\u6e90\u548c\u952e\u76d8/\u9f20\u6807\u4e8b\u4ef6\u7684\u63d0\u4f9b\u8005\uff0c\u8fd9\u610f\u5473\u7740X\u670d\u52a1\u5668\u901a\u5e38\u5728\u4eba\u7c7b\u7528\u6237\u9762\u524d\u8fd0\u884c\u5728\u8ba1\u7b97\u673a\u4e0a\uff0c\u800cX\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u7f51\u7edc\u4e0a\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5e76\u4e0e\u7528\u6237\u7684\u8ba1\u7b97\u673a\u901a\u4fe1\uff0c\u4ee5\u8bf7\u6c42\u6e32\u67d3\u56fe\u5f62\u5185\u5bb9\u5e76\u4ece\u5305\u62ec\u952e\u76d8\u548c\u9f20\u6807\u7684\u8f93\u5165\u8bbe\u5907\u63a5\u6536\u4e8b\u4ef6\u3002\n\u672f\u8bed\u670d\u52a1\u5668\u88ab\u5e94\u7528\u4e8e\u7528\u6237\u9762\u524d\u7684\u8f6f\u4ef6\u7684\u4e8b\u5b9e\u5e38\u5e38\u4ee4\u4e60\u60ef\u4e8e\u4ed6\u4eec\u7684\u7a0b\u5e8f\u662f\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u7684\u670d\u52a1\u7684\u5ba2\u6237\u7aef\u7684\u7528\u6237\u611f\u5230\u60ca\u8bb6\u3002\u8fd9\u91cc\uff0c\u4e0d\u662f\u8fdc\u7a0b\u6570\u636e\u5e93\u4f5c\u4e3a\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\uff0c\u800c\u662f\u7528\u6237\u7684\u56fe\u5f62\u663e\u793a\u548c\u8f93\u5165\u8bbe\u5907\u6210\u4e3a\u7531\u672c\u5730X\u670d\u52a1\u5668\u63d0\u4f9b\u7ed9\u9700\u8981\u5171\u4eab\u7528\u6237\u7684\u56fe\u5f62\u548c\u8f93\u5165\u8bbe\u5907\u4ee5\u4e0e\u7528\u6237\u901a\u4fe1\u7684\u672c\u5730\u548c\u8fdc\u7a0b\u6258\u7ba1\u7684X\u5ba2\u6237\u7aef\u7a0b\u5e8f\u7684\u8d44\u6e90\u3002\nX&#39\uff1b\u7684\u7f51\u7edc\u534f\u8bae\u57fa\u4e8eX\u547d\u4ee4\u539f\u8bed\u3002\u6b64\u65b9\u6cd5\u5141\u8bb8\u53ef\u80fd\u5728\u4e0d\u540c\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684X\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u76842D\u548c(\u901a\u8fc7GLX\u7b49\u6269\u5c55)3D\u64cd\u4f5c\u4ecd\u53ef\u5728X\u670d\u52a1\u5668\u7684\u663e\u793a\u5668\u4e0a\u5b8c\u5168\u52a0\u901f\u3002\u4f8b\u5982\uff0c\u5728\u7ecf\u5178\u7684OpenGL(3.0\u7248\u4e4b\u524d)\u4e2d\uff0c\u5305\u542b\u5927\u91cf\u5bf9\u8c61\u7684\u663e\u793a\u5217\u8868\u53ef\u4ee5\u7531\u8fdc\u7a0bX\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5b8c\u5168\u6784\u5efa\u5e76\u5b58\u50a8\u5728X\u670d\u52a1\u5668\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u5728\u7f51\u7edc\u4e0a\u53d1\u9001\u5355\u4e2aglCallList(\u5b83)\u6765\u5448\u73b0\u6bcf\u4e2a\u5bf9\u8c61\u3002\nX\u4e0d\u63d0\u4f9b\u5bf9\u97f3\u9891\u7684\u539f\u751f\u652f\u6301\uff1b\u6709\u51e0\u4e2a\u9879\u76ee\u53ef\u4ee5\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\uff0c\u6709\u4e9b\u9879\u76ee\u8fd8\u63d0\u4f9b\u900f\u660e\u7684\u7f51\u7edc\u652f\u6301\u3002\nX\u4f7f\u7528\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u6a21\u578b\uff1aX\u670d\u52a1\u5668\u4e0e\u5404\u79cd\u5ba2\u6237\u7aef\u7a0b\u5e8f\u901a\u4fe1\u3002\u670d\u52a1\u5668\u63a5\u53d7\u56fe\u5f62\u8f93\u51fa\u8bf7\u6c42(Windows)\u5e76\u53d1\u56de\u7528\u6237\u8f93\u5165(\u4ece\u952e\u76d8\u3001\u9f20\u6807\u6216\u89e6\u6478\u5c4f)\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u4f5c\u4e3a\u4ee5\u4e0b\u529f\u80fd\u8fd0\u884c\uff1a\n\u8fd9\u79cd\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u672f\u8bed-\u7528\u6237\u7684\u7ec8\u7aef\u662f\u670d\u52a1\u5668\uff0c\u5e94\u7528\u7a0b\u5e8f\u662f\u5ba2\u6237\u7aef-\u7ecf\u5e38\u4f1a\u8ba9\u65b0\u7684X\u7528\u6237\u611f\u5230\u56f0\u60d1\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u672f\u8bed\u770b\u8d77\u6765\u662f\u76f8\u53cd\u7684\u3002\u4f46\u662fX\u7ad9\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\uff0c\u800c\u4e0d\u662f\u4ece\u6700\u7ec8\u7528\u6237\u7684\u89d2\u5ea6\uff1aX\u5411\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u663e\u793a\u548cI/O\u670d\u52a1\uff0c\u56e0\u6b64\u5b83\u662f\u670d\u52a1\u5668\uff1b\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\uff0c\u56e0\u6b64\u5b83\u4eec\u662f\u5ba2\u6237\u7aef\u3002\n\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u901a\u4fe1\u534f\u8bae\u662f\u7f51\u7edc\u900f\u660e\u7684\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\u548c\u64cd\u4f5c\u7cfb\u7edf\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5728\u52a0\u5bc6\u7684\u7f51\u7edc\u4f1a\u8bdd\u4e0a\u901a\u8fc7\u96a7\u9053\u4f20\u8f93\u8fde\u63a5\u6765\u5b89\u5168\u5730\u5728Internet\u4e0a\u901a\u4fe1\u3002\nX\u5ba2\u6237\u7aef\u672c\u8eab\u53ef\u4ee5\u901a\u8fc7\u5411\u5176\u4ed6\u5ba2\u6237\u7aef\u63d0\u4f9b\u663e\u793a\u670d\u52a1\u6765\u6a21\u62dfX\u670d\u52a1\u5668\u3002\u8fd9\u79f0\u4e3aX\u5d4c\u5957\u3002Xnest\u548cXephyr\u7b49\u5f00\u6e90\u5ba2\u6237\u7aef\u652f\u6301\u8fd9\u6837\u7684X\u5d4c\u5957\u3002\n\u8981\u5728\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528X\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u6237\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8bf7\u6c42\u672c\u5730\u663e\u793a/\u8f93\u5165\u670d\u52a1(\u4f8b\u5982\uff0c\u5982\u679c\u672a\u4f7f\u7528\u542f\u7528X\u8f6c\u53d1\u7684SSH\uff0c\u5219\u5bfc\u51fa\u663e\u793a=[\u7528\u6237\u7684\u673a\u5668]\uff1a0)\n\u7136\u540e\uff0c\u8fdc\u7a0bX\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u5c06\u8fde\u63a5\u5230\u7528\u6237\u7684\u672c\u5730X\u670d\u52a1\u5668\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u663e\u793a\u548c\u8f93\u5165\u3002\n\u6216\u8005\uff0c\u672c\u5730\u673a\u5668\u53ef\u4ee5\u8fd0\u884c\u8fde\u63a5\u5230\u8fdc\u7a0b\u673a\u5668\u5e76\u542f\u52a8\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u5c0f\u7a0b\u5e8f\u3002\n\u4f7f\u7528\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u52a0\u5165\u534f\u4f5c\u5de5\u4f5c\u7ec4\u4e2d\u7684\u5927\u91cf\u5176\u4ed6\u7ec8\u7aef\u7528\u6237\u3002\n\u5728\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u6a21\u62df\uff0c\u5e76\u5728\u672c\u5730\u53f0\u5f0f\u8ba1\u7b97\u673a\u4e0a\u663e\u793a\u7ed3\u679c\u3002\n\u5728\u4e00\u53f0\u663e\u793a\u5668\u3001\u952e\u76d8\u548c\u9f20\u6807\u7684\u63a7\u5236\u4e0b\uff0c\u540c\u65f6\u5728\u591a\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u56fe\u5f62\u8f6f\u4ef6\u3002\n\u9664\u975e\u5b9e\u73b0\u8005\u6ca1\u6709\u65b0\u529f\u80fd\u5c31\u65e0\u6cd5\u5b8c\u6210\u771f\u6b63\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5426\u5219\u4e0d\u8981\u6dfb\u52a0\u65b0\u529f\u80fd\u3002\n\u51b3\u5b9a\u4e00\u4e2a\u5236\u5ea6\u4e0d\u662f\u4ec0\u4e48\u548c\u51b3\u5b9a\u5b83\u662f\u4ec0\u4e48\u4e00\u6837\u91cd\u8981\u3002\u4e0d\u8981\u6ee1\u8db3\u4e16\u754c\u4e0a\u6240\u6709\u4eba\u7684\u9700\u6c42\uff1b\u76f8\u53cd\uff0c\u8981\u4f7f\u7cfb\u7edf\u5177\u6709\u53ef\u6269\u5c55\u6027\uff0c\u4ee5\u4fbf\u80fd\u591f\u4ee5\u5411\u4e0a\u517c\u5bb9\u7684\u65b9\u5f0f\u6ee1\u8db3\u5176\u4ed6\u9700\u6c42\u3002\n\u552f\u4e00\u6bd4\u4ece\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u6982\u62ec\u66f4\u7cdf\u7cd5\u7684\u662f\u4ece\u6839\u672c\u6ca1\u6709\u4f8b\u5b50\u4e2d\u6982\u62ec\u3002\n\u5982\u679c\u95ee\u9898\u6ca1\u6709\u88ab\u5b8c\u5168\u7406\u89e3\uff0c\u6700\u597d\u662f\u6839\u672c\u4e0d\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848\u3002\n\u5982\u679c\u60a8\u53ef\u4ee5\u752810%\u7684\u5de5\u4f5c\u91cf\u83b7\u5f9790%\u7684\u9884\u671f\u6548\u679c\uff0c\u90a3\u4e48\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002(\u53e6\u8bf7\u53c2\u9605\u8d8a\u5dee\u8d8a\u597d\u3002)\u3002\n\u63d0\u4f9b\u673a\u5236\u800c\u4e0d\u662f\u653f\u7b56\u3002\u7279\u522b\u662f\uff0c\u5c06\u7528\u6237\u754c\u9762\u7b56\u7565\u4ea4\u5230\u5ba2\u6237\u7aef\u624b\u4e2d\u3002\n\u7b2c\u4e00\u4e2a\u539f\u5219\u5728X11\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u88ab\u4fee\u6539\u4e3a\uff1a\u4e0d\u8981\u6dfb\u52a0\u65b0\u529f\u80fd\uff0c\u9664\u975e\u60a8\u77e5\u9053\u67d0\u4e9b\u5b9e\u9645\u7684\u5e94\u7528\u7a0b\u5e8f\u4f1a\u9700\u8981\u5b83\u3002&#34\uff1b[3]\u3002\nX\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u9075\u5b88\u4e86\u8fd9\u4e9b\u539f\u5219\u3002\u5f00\u53d1\u6837\u672c\u5b9e\u65bd\u662f\u4e3a\u4e86\u6269\u5c55\u548c\u6539\u8fdb\u5b9e\u65bd\uff0c\u540c\u65f6\u4fdd\u6301\u4e0e\u539f\u59cb1987\u5e74\u8bae\u5b9a\u4e66\u7684\u517c\u5bb9\u3002\nX\u4e3b\u8981\u5b9a\u4e49\u534f\u8bae\u548c\u56fe\u5f62\u57fa\u5143-\u5b83\u6545\u610f\u4e0d\u5305\u542b\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u7684\u89c4\u8303\uff0c\u5982\u6309\u94ae\u3001\u83dc\u5355\u6216\u7a97\u53e3\u6807\u9898\u680f\u6837\u5f0f\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5e94\u7528\u8f6f\u4ef6-\u5982\u7a97\u53e3\u7ba1\u7406\u5668\u3001GUI\u5c0f\u90e8\u4ef6\u5de5\u5177\u5305\u548c\u684c\u9762\u73af\u5883\uff0c\u6216\u8005\u7279\u5b9a\u4e8e\u5e94\u7528\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762-\u5b9a\u4e49\u5e76\u63d0\u4f9b\u8fd9\u6837\u7684\u7ec6\u8282\u3002\u56e0\u6b64\uff0c\u6ca1\u6709\u5178\u578b\u7684X\u754c\u9762\uff0c\u51e0\u79cd\u4e0d\u540c\u7684\u684c\u9762\u73af\u5883\u5728\u7528\u6237\u4e2d\u53d8\u5f97\u6d41\u884c\u8d77\u6765\u3002\n\u7a97\u53e3\u7ba1\u7406\u5668\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5916\u89c2\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u684c\u9762\u754c\u9762\u8ba9\u4eba\u8054\u60f3\u5230Microsoft Windows\u6216Apple Macintosh(\u793a\u4f8b\u5305\u62ecGNOME 2\u3001KDE\u3001Xfce)\uff0c\u6216\u8005\u5177\u6709\u5b8c\u5168\u4e0d\u540c\u7684\u63a7\u4ef6(\u4f8b\u5982\u5e73\u94fa\u7a97\u53e3\u7ba1\u7406\u5668\uff0c\u5982wmii\u6216Rattoxic)\u3002\u4e00\u4e9b\u754c\u9762\uff0c\u5982Sugar\u6216Chrome OS\uff0c\u5b8c\u5168\u907f\u5f00\u4e86\u684c\u9762\u7684\u6bd4\u55bb\uff0c\u7b80\u5316\u4e86\u4e13\u95e8\u5e94\u7528\u7a0b\u5e8f\u7684\u754c\u9762\u3002\u7a97\u53e3\u7ba1\u7406\u5668\u7684\u590d\u6742\u6027\u548c\u590d\u6742\u6027\u4ece\u57fa\u672c\u7684\u7a97\u53e3\u7ba1\u7406\u5668(\u4f8b\u5982\uff0cTWM\uff0c\u968fX\u63d0\u4f9b\u7684\u57fa\u672c\u7a97\u53e3\u7ba1\u7406\u5668\uff0c\u6216evilwm\uff0c\u4e00\u4e2a\u6781\u5176\u8f7b\u91cf\u7ea7\u7684\u7a97\u53e3\u7ba1\u7406\u5668)\u5230\u66f4\u5168\u9762\u7684\u684c\u9762\u73af\u5883(\u5982\u542f\u8499)\uff0c\u751a\u81f3\u5230\u7528\u4e8e\u5782\u76f4\u5e02\u573a(\u5982\u9500\u552e\u70b9)\u7684\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7a97\u53e3\u7ba1\u7406\u5668\uff0c\u4e0d\u4e00\u800c\u8db3\u3002\n\u8bb8\u591a\u7528\u6237\u5728\u684c\u9762\u73af\u5883\u4e2d\u4f7f\u7528X\uff0c\u9664\u4e86\u7a97\u53e3\u7ba1\u7406\u5668\u4e4b\u5916\uff0c\u684c\u9762\u73af\u5883\u8fd8\u5305\u62ec\u4f7f\u7528\u4e00\u81f4\u7528\u6237\u754c\u9762\u7684\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u3002\u6d41\u884c\u7684\u684c\u9762\u73af\u5883\u5305\u62ecGNOME\u3001KDE\u8f6f\u4ef6\u7f16\u8bd1\u548cXfce\u3002UNIX 98\u6807\u51c6\u73af\u5883\u662f\u901a\u7528\u684c\u9762\u73af\u5883(CDE)\u3002freedesktop.org\u8ba1\u5212\u89e3\u51b3\u684c\u9762\u4e0e\u7ade\u4e89\u5bf9\u624bX\u684c\u9762\u6240\u9700\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u95ee\u9898\u3002\nX.Org\u5b9e\u73b0\u662fX\u7684\u89c4\u8303\u5b9e\u73b0\u3002\u7531\u4e8e\u81ea\u7531\u8bb8\u53ef\uff0c\u51fa\u73b0\u4e86\u8bb8\u591a\u53d8\u4f53\uff0c\u65e2\u6709\u514d\u8d39\u7684\uff0c\u4e5f\u6709\u5f00\u6e90\u7684\uff0c\u4e5f\u6709\u4e13\u6709\u7684\u3002\u5546\u4e1aUnix\u4f9b\u5e94\u5546\u503e\u5411\u4e8e\u91c7\u7528\u53c2\u8003\u5b9e\u73b0\u5e76\u4f7f\u5176\u9002\u5e94\u5176\u786c\u4ef6\uff0c\u901a\u5e38\u662f\u5bf9\u5176\u8fdb\u884c\u5b9a\u5236\u5e76\u6dfb\u52a0\u4e13\u6709\u6269\u5c55\u3002\n\u76f4\u52302004\u5e74\uff0cXFree86\u5728\u7c7bUnix\u514d\u8d39\u7cfb\u7edf\u4e0a\u63d0\u4f9b\u4e86\u6700\u5e38\u89c1\u7684X\u53d8\u4f53\u3002XFree86\u6700\u521d\u662f\u4f5c\u4e3aX\u5230386\u517c\u5bb9PC\u7684\u7aef\u53e3\uff0c\u523020\u4e16\u7eaa90\u5e74\u4ee3\u672b\uff0c\u5df2\u7ecf\u6210\u4e3aX\u6280\u672f\u521b\u65b0\u7684\u6700\u5927\u6765\u6e90\u548cX\u5f00\u53d1\u7684\u4e8b\u5b9e\u6807\u51c6\u3002[4]\u7136\u800c\uff0c\u81ea2004\u5e74\u4ee5\u6765\uff0cXFree86\u7684\u5206\u652f--X.Org\u670d\u52a1\u5668\u5360\u636e\u4e86\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u867d\u7136\u5c06X\u4e0eUnix\u76f8\u5173\u8054\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4f46X\u670d\u52a1\u5668\u4e5f\u4ee5\u672c\u673a\u65b9\u5f0f\u5b58\u5728\u4e8e\u5176\u4ed6\u56fe\u5f62\u73af\u5883\u4e2d\u3002VMS Software Inc.\u7684OpenVMS\u64cd\u4f5c\u7cfb\u7edf\u5305\u62ec\u4e00\u4e2aX\u7248\u672c\uff0c\u5176\u6807\u51c6\u684c\u9762\u73af\u5883\u4e3a\u901a\u7528\u684c\u9762\u73af\u5883(CDE)\uff0c\u79f0\u4e3aDECwindows\u3002[\u9700\u8981\u5f15\u7528]\u82f9\u679c\u6700\u521d\u4ee5X11.app\u7684\u5f62\u5f0f\u5c06X\u79fb\u690d\u5230MacOS\u4e0a\uff0c\u4f46\u4e3a\u4e86\u652f\u6301XQuartz\u5b9e\u73b0\uff0c\u8fd9\u4e00\u505a\u6cd5\u906d\u5230\u4e86\u62a8\u51fb\u3002\u572820\u4e16\u7eaa90\u5e74\u4ee3\u82f9\u679c\u8f83\u65e7\u7684\u64cd\u4f5c\u7cfb\u7edfSystem7\u548cMacOS8\u548c9\u4e0b\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\u5668\uff0c\u5305\u62ec\u82f9\u679c\u7684MacX\u548c\u767d\u677e\u8f6f\u4ef6(White Pine Software)\u7684\u5927\u91cf\u64a4\u79bb\u3002\nMicrosoft Windows\u672a\u9644\u5e26\u5bf9X\u7684\u652f\u6301\uff0c\u4f46\u5b58\u5728\u8bb8\u591a\u7b2c\u4e09\u65b9\u5b9e\u73b0\uff0c\u5982Cygwin/X\u7b49\u514d\u8d39\u5f00\u6e90\u8f6f\u4ef6\uff0c\u4ee5\u53caExcept\u3001MKS X/Server\u3001Reflect X\u3001X-Win32\u548cXming\u7b49\u4e13\u6709\u4ea7\u54c1\u3002\n\u8fd8\u6709X\u670d\u52a1\u5668\u7684Java\u5b9e\u73b0\u3002WeirdX\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301Swing 1.1\u7684\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f5c\u4e3a\u5c0f\u7a0b\u5e8f\u5728\u5927\u591a\u6570\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002Android X Server\u662f\u4e00\u4e2a\u8fd0\u884c\u5728Android\u8bbe\u5907\u4e0a\u7684\u5f00\u6e90Java\u5b9e\u73b0\u3002\n\u5f53\u5177\u6709\u672c\u5730\u7a97\u53e3\u7cfb\u7edf\u7684\u64cd\u4f5c\u7cfb\u7edf\u53e6\u5916\u6258\u7ba1X\u65f6\uff0cX\u7cfb\u7edf\u53ef\u4ee5\u5728\u5355\u72ec\u7684\u4e3b\u673a\u7a97\u53e3\u4e2d\u4f7f\u7528\u5176\u81ea\u5df1\u7684\u666e\u901a\u684c\u9762\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u65e0\u6839\u8fd0\u884c\uff0c\u8fd9\u610f\u5473\u7740X\u684c\u9762\u88ab\u9690\u85cf\uff0c\u5e76\u4e14\u4e3b\u673a\u7a97\u53e3\u73af\u5883\u7ba1\u7406\u4e3b\u673a\u5c4f\u5e55\u5185\u6258\u7ba1\u7684X\u7a97\u53e3\u7684\u51e0\u4f55\u5f62\u72b6\u548c\u5916\u89c2\u3002\nX\u7ec8\u7aef\u662f\u53ea\u8fd0\u884cX\u670d\u52a1\u5668\u7684\u7626\u5ba2\u6237\u7aef\u3002\u8fd9\u79cd\u4f53\u7cfb\u7ed3\u6784\u5728\u6784\u5efa\u4fbf\u5b9c\u7684\u7ec8\u7aef\u516c\u56ed\u65b9\u9762\u53d8\u5f97\u6d41\u884c\u8d77\u6765\uff0c\u8bb8\u591a\u7528\u6237\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5927\u578b\u8ba1\u7b97\u673a\u670d\u52a1\u5668\u4f5c\u4e3a\u6bcf\u4e2a\u7528\u6237\u7684X\u7ec8\u7aef\u7684\u5ba2\u6237\u7aef\u6765\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e00\u7528\u9014\u975e\u5e38\u7b26\u5408\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u9879\u76ee\u7684\u521d\u8877\u3002\nX\u7ec8\u7aef\u4f7f\u7528X\u663e\u793a\u7ba1\u7406\u5668\u63a7\u5236\u534f\u8bae\u63a2\u7d22\u7f51\u7edc(\u672c\u5730\u5e7f\u64ad\u57df)\uff0c\u4ee5\u751f\u6210\u5141\u8bb8\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u53ef\u7528\u4e3b\u673a\u5217\u8868\u3002\u5176\u4e2d\u4e00\u53f0\u5ba2\u6237\u7aef\u4e3b\u673a\u5e94\u8be5\u8fd0\u884cX\u663e\u793a\u7ba1\u7406\u5668\u3002\nX\u7ec8\u7aef\u548c\u5927\u591a\u6570\u7626\u5ba2\u6237\u673a\u7684\u4e00\u4e2a\u9650\u5236\u662f\uff0c\u9664\u4e86\u952e\u76d8\u3001\u9f20\u6807\u548c\u663e\u793a\u5668\u4e4b\u5916\uff0c\u5b83\u4eec\u4e0d\u80fd\u8fdb\u884c\u4efb\u4f55\u8f93\u5165\u6216\u8f93\u51fa\u3002\u5047\u8bbe\u6240\u6709\u76f8\u5173\u6570\u636e\u4ec5\u5b58\u5728\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u4e14X\u7ec8\u7aef\u7528\u6237\u6ca1\u6709\u53ef\u7528\u4e8e\u4ece\u672c\u5730\u5916\u56f4\u8bbe\u5907\u4fdd\u5b58\u6216\u52a0\u8f7d\u6570\u636e\u7684\u65b9\u6cd5\u3002\n\u4e13\u7528(\u786c\u4ef6)X\u7ec8\u7aef\u5df2\u4e0d\u518d\u4f7f\u7528\uff1b\u914d\u5907X\u670d\u52a1\u5668\u7684PC\u6216\u73b0\u4ee3\u7626\u5ba2\u6237\u7aef\u901a\u5e38\u4ee5\u76f8\u540c\u6216\u66f4\u4f4e\u7684\u6210\u672c\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u3002\nUnix-Hater\u624b\u518c(1994)\u82b1\u4e86\u6574\u6574\u4e00\u7ae0\u6765\u8ba8\u8bbaX\u7684\u95ee\u9898\u3002[5]Gajeska\u3001Manasse\u548cMcCormack\u57281990\u5e74\u51fa\u7248\u7684\u201c\u4e3a\u4ec0\u4e48X\u4e0d\u662f\u6211\u4eec\u7684\u7406\u60f3\u7a97\u53e3\u7cfb\u7edf\u201d\u8be6\u7ec6\u8bf4\u660e\u4e86\u534f\u8bae\u4e2d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae\u3002\n\u5728X\u4e2d\u7f3a\u4e4f\u8bbe\u8ba1\u6307\u5357\u5bfc\u81f4\u4e86\u51e0\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u754c\u9762\uff0c\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e0d\u603b\u662f\u80fd\u5f88\u597d\u5730\u534f\u540c\u5de5\u4f5c\u3002\u5ba2\u6237\u7aef\u95f4\u901a\u4fe1\u7ea6\u5b9a\u624b\u518c(ICCCM)\u662f\u5ba2\u6237\u7aef\u4e92\u64cd\u4f5c\u6027\u7684\u89c4\u8303\uff0c\u4ee5\u96be\u4ee5\u6b63\u786e\u5b9e\u73b0\u800c\u8457\u79f0\u3002\u8fdb\u4e00\u6b65\u7684\u6807\u51c6\u52aa\u529b\uff0c\u5982Motif\u548cCDE\uff0c\u5e76\u6ca1\u6709\u7f13\u89e3\u95ee\u9898\u3002\u8fd9\u8ba9\u7528\u6237\u548c\u7a0b\u5e8f\u5458\u611f\u5230\u6cae\u4e27\u3002[6]\u56fe\u5f62\u7a0b\u5e8f\u5458\u73b0\u5728\u901a\u5e38\u901a\u8fc7\u7f16\u7801\u5230\u7279\u5b9a\u684c\u9762\u73af\u5883\u6216\u7279\u5b9a\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5de5\u5177\u5305\u6765\u89e3\u51b3\u5e94\u7528\u7a0b\u5e8f\u5916\u89c2\u548c\u901a\u4fe1\u7684\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u8fd9\u4e5f\u907f\u514d\u4e86\u5fc5\u987b\u76f4\u63a5\u4e0eICCCM\u6253\u4ea4\u9053\u3002\nX\u8fd8\u7f3a\u4e4f\u5bf9X\u670d\u52a1\u5668\u4e0a\u7528\u6237\u5b9a\u4e49\u7684\u5b58\u50a8\u8fc7\u7a0b\u7684\u672c\u673a\u652f\u6301\uff0c\u8fd9\u4e0e\u65b0\u95fb\u62a5\u9053\u7684\u65b9\u5f0f\u4e0d\u540c-\u6ca1\u6709\u56fe\u7075\u5b8c\u6574\u7684\u811a\u672c\u5de5\u5177\u3002\u56e0\u6b64\uff0c\u5404\u79cd\u684c\u9762\u73af\u5883\u53ef\u4ee5\u63d0\u4f9b\u5b83\u4eec\u81ea\u5df1\u7684(\u901a\u5e38\u662f\u76f8\u4e92\u4e0d\u517c\u5bb9\u7684)\u8bbe\u65bd\u3002\n\u57fa\u4e8eX\u6784\u5efa\u7684\u7cfb\u7edf\u53ef\u80fd\u5b58\u5728\u53ef\u8bbf\u95ee\u6027\u95ee\u9898\uff0c\u8fd9\u4f1a\u4f7f\u6b8b\u75be\u7528\u6237\u96be\u4ee5\u4f7f\u7528\u8ba1\u7b97\u673a\uff0c\u5305\u62ec\u53f3\u952e\u5355\u51fb\u3001\u53cc\u51fb\u3001\u4e2d\u952e\u5355\u51fb\u3001\u9f20\u6807\u60ac\u505c\u548c\u7126\u70b9\u7a83\u53d6\u3002\u4e00\u4e9bX11\u5ba2\u6237\u7aef\u6bd4\u5176\u4ed6\u5ba2\u6237\u7aef\u66f4\u597d\u5730\u5904\u7406\u53ef\u8bbf\u95ee\u6027\u95ee\u9898\uff0c\u56e0\u6b64\u6709\u53ef\u8bbf\u95ee\u6027\u95ee\u9898\u7684\u4eba\u4e0d\u4f1a\u88ab\u6392\u9664\u5728\u4f7f\u7528X11\u4e4b\u5916\u3002\u4f46\u662f\uff0cX11\u6ca1\u6709\u53ef\u8bbf\u95ee\u6027\u6807\u51c6\u6216\u53ef\u8bbf\u95ee\u6027\u6307\u5357\u3002\u5728X11\u6807\u51c6\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u5173\u4e8e\u53ef\u8bbf\u95ee\u6027\u7684\u5de5\u4f5c\u7ec4\uff0c\u4f46\u662f\uff0c\u8f6f\u4ef6\u9879\u76ee\u6b63\u5728\u89e3\u51b3\u53ef\u8bbf\u95ee\u6027\u9700\u6c42\uff0c\u4ee5\u4fbf\u5728X\u4e4b\u4e0a\u63d0\u4f9b\u8fd9\u4e9b\u529f\u80fd\u3002\nOrca\u9879\u76ee\u5411X Window\u7cfb\u7edf\u6dfb\u52a0\u4e86\u53ef\u8bbf\u95ee\u6027\u652f\u6301\uff0c\u5305\u62ec\u5b9e\u73b0API(AT-SPI[7])\u3002\u8fd9\u4e0eGNOME\u7684ATK\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5141\u8bb8\u4f7f\u7528GNOME/GTK API\u5728X\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u8f85\u52a9\u529f\u80fd\u3002[8]KDE\u63d0\u4f9b\u4e86\u4e00\u5957\u4e0d\u540c\u7684\u8f85\u52a9\u529f\u80fd\u8f6f\u4ef6\uff0c\u5305\u62ec\u6587\u672c\u5230\u8bed\u97f3\u8f6c\u6362\u5668\u548c\u5c4f\u5e55\u653e\u5927\u955c\u3002[9]\u5176\u4ed6\u4e3b\u8981\u53f0\u5f0f\u673a(LXDE\u3001XFCE\u548c\u542f\u8fea)\u90fd\u8bd5\u56fe\u4e0eATK\u517c\u5bb9\u3002\nX\u5ba2\u6237\u673a\u901a\u5e38\u4e0d\u80fd\u4ece\u4e00\u53f0\u670d\u52a1\u5668\u5206\u79bb\u5e76\u91cd\u65b0\u8fde\u63a5\u5230\u53e6\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u9664\u975e\u5b83\u7684\u4ee3\u7801\u4e13\u95e8\u4e3a\u5b83\u63d0\u4f9b\u4e86\u652f\u6301(Emacs\u662f\u5c11\u6570\u51e0\u4e2a\u5177\u6709\u6b64\u529f\u80fd\u7684\u5e38\u89c1\u7a0b\u5e8f\u4e4b\u4e00)\u3002\u56e0\u6b64\uff0c\u5c06\u6574\u4e2a\u4f1a\u8bdd\u4ece\u4e00\u53f0X\u670d\u52a1\u5668\u79fb\u5230\u53e6\u4e00\u53f0\u670d\u52a1\u5668\u901a\u5e38\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u7136\u800c\uff0c\u50cf\u865a\u62df\u7f51\u7edc\u8ba1\u7b97(VNC)\u3001NX\u548cXpra\u8fd9\u6837\u7684\u65b9\u6cd5\u5141\u8bb8\u4ece\u4e0d\u540c\u7684X\u670d\u52a1\u5668\u5230\u8fbe\u865a\u62df\u4f1a\u8bdd(\u4ee5\u7c7b\u4f3c\u4e8e\u7ec8\u7aef\u7684GNU\u5c4f\u5e55\u7684\u65b9\u5f0f)\uff0c\u5e76\u4e14\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u548c\u5de5\u5177\u5305\u63d0\u4f9b\u76f8\u5173\u7684\u5de5\u5177\u3002[10]\u8fd8\u5b58\u5728x11vnc(VNC\uff1a0\u89c2\u4f17)\u3001Xpra\u7684\u5f71\u5b50\u6a21\u5f0f\u548cNX#39\uff1b\u7684nxagent\u5f71\u5b50\u6a21\u5f0f\u7b49\u89e3\u51b3\u529e\u6cd5\uff0c\u4ee5\u4f7f\u5f53\u524d\u7684X-server\u5c4f\u5e55\u53ef\u7528\u3002\u6b64\u529f\u80fd\u5141\u8bb8\u5c06\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762(\u9f20\u6807\u3001\u952e\u76d8\u3001\u76d1\u89c6\u5668)\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u800c\u65e0\u9700\u505c\u6b62\u548c\u91cd\u65b0\u542f\u52a8\u8be5\u5e94\u7528\u7a0b\u5e8f\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cX\u670d\u52a1\u5668\u548c\u8fdc\u7a0bX\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u7f51\u7edc\u6d41\u91cf\u4e0d\u52a0\u5bc6\u3002\u62e5\u6709\u6570\u636e\u5305\u55c5\u63a2\u5668\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u62e6\u622a\u5b83\uff0c\u4ece\u800c\u53ef\u4ee5\u67e5\u770b\u663e\u793a\u5230\u7528\u6237\u5c4f\u5e55\u6216\u4ece\u7528\u6237\u5c4f\u5e55\u53d1\u9001\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u52a0\u5bc6X\u6d41\u91cf\u7684\u6700\u5e38\u89c1\u65b9\u6cd5\u662f\u5efa\u7acb\u7528\u4e8e\u901a\u4fe1\u7684\u5b89\u5168\u5916\u58f3(SSH)\u96a7\u9053\u3002\n\u4e0e\u6240\u6709\u7626\u5ba2\u6237\u7aef\u4e00\u6837\uff0c\u5f53\u5728\u7f51\u7edc\u4e2d\u4f7f\u7528X\u65f6\uff0c\u5e26\u5bbd\u9650\u5236\u53ef\u80fd\u4f1a\u963b\u788d\u4f4d\u56fe\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\u7684\u4f7f\u7528\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4ee5\u4f4e\u5ef6\u8fdf\u5feb\u901f\u66f4\u65b0\u5927\u90e8\u5206\u5c4f\u5e55\uff0c\u4f8b\u59823D\u52a8\u753b\u6216\u7167\u7247\u7f16\u8f91\u3002\u5373\u4f7f\u662f\u76f8\u5bf9\u8f83\u5c0f\u7684\u672a\u538b\u7f29\u7684640x480x24Mbit 30Fps\u89c6\u9891\u6d41(~211 Mbit/s)\u4e5f\u53ef\u4ee5\u8f7b\u677e\u8d85\u8fc7\u5355\u4e2a\u5ba2\u6237\u7aef100Mbit/s\u7f51\u7edc\u7684\u5e26\u5bbd\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u73b0\u4ee3\u7248\u672c\u7684X\u901a\u5e38\u5177\u6709\u8bf8\u5982MESA\u4e4b\u7c7b\u7684\u6269\u5c55\uff0c\u8be5\u6269\u5c55\u5141\u8bb8\u672c\u5730\u7a0b\u5e8f\u7684\u56fe\u5f62\u7684\u672c\u5730\u663e\u793a\u88ab\u4f18\u5316\u4ee5\u7ed5\u8fc7\u7f51\u7edc\u6a21\u578b\u5e76\u76f4\u63a5\u63a7\u5236\u89c6\u9891\u5361\uff0c\u4ee5\u4f7f\u7528\u5168\u5c4f\u89c6\u9891\u3001\u6e32\u67d3\u76843D\u5e94\u7528\u7a0b\u5e8f\u548c\u5176\u4ed6\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u3002\nX&#39\uff1b\u7684\u8bbe\u8ba1\u8981\u6c42\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5206\u5f00\u64cd\u4f5c\uff0c\u800c\u8bbe\u5907\u72ec\u7acb\u6027\u548c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u5206\u79bb\u4f1a\u4ea7\u751f\u5f00\u9500\u3002\u5927\u90e8\u5206\u5f00\u9500\u6765\u81ea\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u5f80\u8fd4\u5ef6\u8fdf\u65f6\u95f4(\u5ef6\u8fdf)\uff0c\u800c\u4e0d\u662f\u534f\u8bae\u672c\u8eab\uff1a\u6027\u80fd\u95ee\u9898\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u53d6\u51b3\u4e8e\u9ad8\u6548\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002[11]\u5bf9X\u7684\u4e00\u79cd\u5e38\u89c1\u6279\u8bc4\u662f\uff0c\u5982\u679c\u4ec5\u5728\u672c\u5730\u4f7f\u7528\uff0c\u5176\u7f51\u7edc\u529f\u80fd\u4f1a\u5bfc\u81f4\u8fc7\u5ea6\u590d\u6742\u548c\u6027\u80fd\u4e0b\u964d\u3002\n\u73b0\u4ee3X\u5b9e\u73b0\u4f7f\u7528Unix\u57df\u5957\u63a5\u5b57\u5728\u540c\u4e00\u4e3b\u673a\u4e0a\u8fdb\u884c\u9ad8\u6548\u8fde\u63a5\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u5171\u4eab\u5185\u5b58(\u901a\u8fc7MIT-SHM\u6269\u5c55)\u6765\u5b9e\u73b0\u66f4\u5feb\u7684\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u901a\u4fe1\u3002[12]\u4f46\u662f\uff0c\u7a0b\u5e8f\u5458\u4ecd\u5fc5\u987b\u663e\u5f0f\u6fc0\u6d3b\u548c\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u6269\u5c55\u3002\u8fd8\u9700\u8981\u63d0\u4f9b\u540e\u5907\u8def\u5f84\uff0c\u4ee5\u4fbf\u4e0e\u8f83\u65e7\u7684\u5b9e\u73b0\u4fdd\u6301\u517c\u5bb9\uff0c\u5e76\u4e0e\u975e\u672c\u5730X\u670d\u52a1\u5668\u901a\u4fe1\u3002\n\u6709\u4e9b\u4eba\u66fe\u8bd5\u56fe\u7f16\u5199X\u7684\u66ff\u4ee3\u65b9\u6848\u548c\u66ff\u4ee3\u65b9\u6848\u3002\u5386\u53f2\u4e0a\u7684\u66ff\u4ee3\u65b9\u6848\u5305\u62ecSun\u7684\u65b0\u95fb\u548cNext\u7684Display PostScript\uff0c\u8fd9\u4e24\u4e2a\u57fa\u4e8ePostScript\u7684\u7cfb\u7edf\u90fd\u652f\u6301\u7528\u6237\u53ef\u5b9a\u4e49\u7684\u663e\u793a\u7aef\u8fc7\u7a0b\uff0c\u8fd9\u662fX\u6240\u7f3a\u4e4f\u7684\u3002\u76ee\u524d\u7684\u66ff\u4ee3\u65b9\u6848\u5305\u62ec\uff1a\nMacOS(\u548c\u5b83\u7684\u79fb\u52a8\u540c\u884ciOS)\u5b9e\u73b0\u4e86\u5b83\u7684Windows\u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684Quartz\u3002\u5f53\u82f9\u679c\u516c\u53f8(Apple Inc.)\u3002\u8d2d\u4e70NeXT\uff0c\u5e76\u4f7f\u7528NeXTSTEP\u6784\u5efaMacOSX\uff0c\u5b83\u7528Quartz\u53d6\u4ee3\u4e86Display PostScript\u3002Quartz\u7684\u4f5c\u8005\u4e4b\u4e00Mike Paquette\u89e3\u91ca\u8bf4\uff0c\u5982\u679c\u82f9\u679c\u5728X11\u4e2d\u589e\u52a0\u4e86\u5bf9\u5b83\u60f3\u8981\u5305\u62ec\u7684\u6240\u6709\u529f\u80fd\u7684\u652f\u6301\uff0c\u5b83\u5c31\u4e0d\u4f1a\u4e0eX11\u6709\u592a\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4e5f\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u670d\u52a1\u5668\u517c\u5bb9\u3002[13]\u3002\n\u5728Linux\u5185\u6838\u4e0a\u8fd0\u884c\u7684Android\u4f7f\u7528\u81ea\u5df1\u7684\u7cfb\u7edf\u6765\u7ed8\u5236\u79f0\u4e3aSurfaceFlinger\u7684\u7528\u6237\u754c\u9762\u30023D\u6e32\u67d3\u7531EGL\u5904\u7406\u3002\nWayland\u6b63\u5728\u7531\u51e0\u4e2aX.Org\u5f00\u53d1\u4eba\u5458\u5f00\u53d1\uff0c\u4f5c\u4e3aX\u7684\u6f5c\u5728\u66ff\u4ee3\u54c1\u3002\u5b83\u901a\u8fc7DRI\u76f4\u63a5\u4e0eGPU\u786c\u4ef6\u4e00\u8d77\u5de5\u4f5c\u3002Wayland\u53ef\u4ee5\u5c06X.org\u670d\u52a1\u5668\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8fd0\u884c\uff0c\u8fd9\u53ef\u4ee5\u662f\u65e0\u6839\u7684\u3002[14]2013\u5e74\u5b8c\u6210\u4e86Raspberry Pi\u7684Wayland\u540e\u7aef\u7684\u4e13\u6709\u7aef\u53e3\u3002[15]\u8be5\u9879\u76ee\u4e8e2012\u5e74\u8fbe\u52301.0\u7248\u3002\u548cAndroid\u4e00\u6837\uff0cWayland\u4e5f\u662f\u57fa\u4e8eEGL\u7684\u3002\nMIR\u662fCanonical Ltd.\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u76ee\u6807\u4e0eWayland\u7c7b\u4f3c\u3002[16]MIR\u65e8\u5728\u4e0e\u4f7f\u7528ARM\u82af\u7247\u7ec4\u7684\u79fb\u52a8\u8bbe\u5907(\u660e\u786e\u7684\u76ee\u6807\u662f\u4e0eAndroid\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9)\u4ee5\u53cax86\u53f0\u5f0f\u673a\u4e00\u8d77\u4f7f\u7528\u3002\u548cAndroid\u4e00\u6837\uff0cMir/UnityNext\u4e5f\u662f\u57fa\u4e8eEGL\u7684\u3002\u4e0eX\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u7684\u5411\u540e\u517c\u5bb9\u662f\u901a\u8fc7Xmir\u5b9e\u73b0\u7684\u3002\n\u5176\u4ed6\u66ff\u4ee3\u65b9\u6848\u8bd5\u56fe\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528\u786c\u4ef6\u6765\u907f\u514dX\u7684\u5f00\u9500\uff1b\u8fd9\u6837\u7684\u9879\u76ee\u5305\u62ecDirectFB\u3002[17](\u65e8\u5728\u4e3a\u5e27\u7f13\u51b2\u533a\u63d0\u4f9b\u53ef\u9760\u5185\u6838\u7ea7\u63a5\u53e3\u7684\u76f4\u63a5\u6e32\u67d3\u57fa\u7840\u8bbe\u65bd(DRI)\u53ef\u80fd\u4f1a[\u9700\u8981\u5f15\u7528]\u4f7f\u8fd9\u4e9b\u5de5\u4f5c\u53d8\u5f97\u591a\u4f59\u3002)\u3002\n\u901a\u8fc7\u56fe\u5f62\u670d\u52a1\u7684\u7f51\u7edc\u4f20\u8f93\u6027\uff0c\u5b9e\u73b0X\u7684\u7f51\u7edc\u900f\u660e\u6027\u529f\u80fd\u5f62\u5f0f\u7684\u5176\u4ed6\u65b9\u5f0f\u5305\u62ec\uff1a\n\u865a\u62df\u7f51\u7edc\u8ba1\u7b97(VNC)\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4f4e\u7ea7\u7684\u7cfb\u7edf\uff0c\u5b83\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u538b\u7f29\u7684\u4f4d\u56fe\uff1bUnix\u5b9e\u73b0\u5305\u62ec\u4e00\u4e2aX\u670d\u52a1\u5668\u3002\n\u8fdc\u7a0b\u684c\u9762\u534f\u8bae(RDP)\uff0c\u76ee\u7684\u7c7b\u4f3c\u4e8eVNC\uff0c\u4f46\u5728\u79fb\u690d\u5230\u7c7bUnix\u7cfb\u7edf\u4e4b\u524d\u8d77\u6e90\u4e8eMicrosoft Windows\uff1b\u53c2\u89c1NX\u3001GoToMyPC\u7b49\u3002\n\u5728X\u4e4b\u524d\u6709\u51e0\u4e2a\u4f4d\u56fe\u663e\u793a\u7cfb\u7edf\u3002\u65bd\u4e50\u63a8\u51fa\u4e86Alto(1973)\u548cStar(1981)\u3002\u963f\u6ce2\u7f57\u8ba1\u7b97\u673a\u516c\u53f8\u63a8\u51fa\u4e86\u201c\u663e\u793a\u7ecf\u7406\u201d(1981)\u3002\u82f9\u679c\u63a8\u51fa\u4e86\u4e3d\u838e(Lisa)(1983\u5e74)\u548c\u9ea6\u91d1\u5854(Macintosh)(1984\u5e74)\u3002Unix\u4e16\u754c\u6709\u5b89\u5fb7\u9c81\u9879\u76ee(1982)\u548c\u7f57\u4f2f\u00b7\u6d3e\u514b\u7684Blit\u7ec8\u7aef(1982)\u3002\n\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u5236\u4f5c\u4e86\u4e00\u6b3e\u8fdc\u7a0b\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u3002\n..", "note_en": "Jump to navigation  Jump to search  The  X Window System ( X11, or simply  X) is a  windowing system for  bitmap displays, common on  Unix-like  operating systems.\n X provides the basic  framework for a  GUI environment: drawing and moving  windows on the  display device and interacting with a  mouse and  keyboard. X does not mandate the user interface\u00a0\u2013 this is handled by individual programs. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.\n X originated at the  Project Athena at  Massachusetts Institute of Technology (MIT) in 1984.  [1] [   better\u00a0source\u00a0needed] The  X protocol has been at version 11 (hence &#34;X11&#34;) since September 1987. The  X.Org Foundation leads the X project, with the current reference implementation,  X.Org Server, available as  free and open source software under the  MIT License and similar  permissive licenses.  [2]\n   X is an architecture-independent system for remote graphical user interfaces and input device capabilities. Each person using a networked  terminal has the ability to interact with the display with any type of user input device.\n In its standard distribution it is a complete, albeit simple, display and interface solution which delivers a standard  toolkit and  protocol stack for building graphical user interfaces on most  Unix-like operating systems and  OpenVMS, and has been  ported to many other contemporary general purpose  operating systems.\n X provides the basic  framework, or primitives, for building such GUI environments: drawing and moving  windows on the  display and interacting with a mouse, keyboard or touchscreen. X does not mandate the  user interface; individual client programs handle this. Programs may use X&#39;s graphical abilities with no user interface. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.\n Unlike most earlier display protocols, X was specifically designed to be used over network connections rather than on an integral or attached display device. X features  network transparency, which means an X program running on a computer somewhere on a network (such as the Internet) can display its user interface on an X server running on some other computer on the network. The X server is typically the provider of graphics resources and keyboard/mouse events to X  clients, meaning that the X server is usually running on the computer in front of a human user, while the X client applications run anywhere on the network and communicate with the user&#39;s computer to request the rendering of graphics content and receive events from input devices including keyboards and mice.\n The fact that the term &#34;server&#34; is applied to the software in front of the user is often surprising to users accustomed to their programs being clients to services on remote computers. Here, rather than a remote database being the resource for a local app, the user&#39;s graphic display and input devices become resources made available by the local X server to both local and remotely hosted X client programs who need to share the user&#39;s graphics and input devices to communicate with the user.\n X&#39;s network protocol is based on X command primitives. This approach allows both 2D and (through extensions like GLX) 3D operations by an X client application which might be running on a different computer to still be fully accelerated on the X server&#39;s display. For example, in classic OpenGL (before version 3.0), display lists containing large numbers of objects could be constructed and stored entirely in the X server by a remote X client program, and each then rendered by sending a single glCallList(which) across the network.\n X provides no native support for audio; several projects exist to fill this niche, some also providing  transparent network support.\n    X uses a  client\u2013server model: an X server communicates with various  client programs. The server accepts requests for graphical output (windows) and sends back user input (from keyboard, mouse, or touchscreen). The server may function as:\n  This client\u2013server terminology\u00a0\u2013 the user&#39;s terminal being the server and the applications being the clients\u00a0\u2013 often confuses new X users, because the terms appear reversed. But X takes the perspective of the application, rather than that of the end-user: X provides display and I/O services to applications, so it is a server; applications use these services, thus they are clients.\n The  communication protocol between server and client operates  network-transparently: the client and server may run on the same machine or on different ones, possibly with different  architectures and  operating systems. A client and server can even communicate  securely over the Internet by  tunneling the connection over an  encrypted network session.\n An X client itself may emulate an X server by providing display services to other clients. This is known as &#34;X nesting&#34;. Open-source clients such as  Xnest and  Xephyr support such X nesting.\n To use an X client application on a remote machine, the user may do the following:\n request local display/input service (e.g.,  export DISPLAY= [user&#39;s machine]:0 if not using SSH with X forwarding enabled)\n The remote X client application will then make a connection to the user&#39;s local X server, providing display and input to the user.\n Alternatively, the local machine may run a small program that connects to the remote machine and starts the client application.\n  using a client application to join with large numbers of other terminal users in collaborative workgroups\n running a computationally intensive simulation on a remote machine and displaying the results on a local desktop machine\n running graphical software on several machines at once, controlled by a single display, keyboard and mouse\n   Do not add new functionality unless an implementor cannot complete a real application without it.\n It is as important to decide what a system is not as to decide what it is. Do not serve all the world&#39;s needs; rather, make the system  extensible so that additional needs can be met in an upwardly compatible fashion.\n The only thing worse than generalizing from one example is generalizing from no examples at all.\n If a problem is not completely understood, it is probably best to provide no solution at all.\n If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution. (See also  worse is better.)\n  Provide  mechanism rather than policy. In particular, place user interface policy in the clients&#39; hands.\n The first principle was modified during the design of X11 to:  &#34;Do not add new functionality unless you know of some real application that will require it.&#34;  [3]\n X has largely kept to these principles. The sample implementation is developed with a view to extension and improvement of the implementation, while remaining compatible with the original 1987 protocol.\n    X primarily defines protocol and graphics primitives\u00a0\u2013 it deliberately contains no specification for application  user-interface design, such as  button,  menu, or window  title-bar styles. Instead, application software\u00a0\u2013 such as  window managers, GUI  widget toolkits and  desktop environments, or application-specific  graphical user interfaces\u00a0\u2013 define and provide such details. As a result, there is no  typical X interface and several different desktop environments have become popular among users.\n A window manager controls the placement and appearance of application windows. This may result in desktop interfaces reminiscent of those of  Microsoft Windows or of the Apple  Macintosh (examples include  GNOME 2,  KDE,  Xfce) or have radically different controls (such as a  tiling window manager, like  wmii or  Ratpoison). Some interfaces such as  Sugar or  Chrome OS eschew the  desktop metaphor altogether, simplifying their interfaces for specialized applications. Window managers range in sophistication and complexity from the bare-bones ( e.g.,  twm, the basic window manager supplied with X, or evilwm, an extremely light window-manager) to the more comprehensive desktop environments such as  Enlightenment and even to application-specific window-managers for vertical markets such as point-of-sale.\n Many users use X with a desktop environment, which, aside from the window manager, includes various applications using a consistent user-interface. Popular desktop environments include GNOME, KDE Software Compilation and Xfce. The  UNIX 98 standard environment is the  Common Desktop Environment (CDE). The  freedesktop.org initiative addresses interoperability between desktops and the components needed for a competitive X desktop.\n  The  X.Org implementation is the  canonical implementation of X. Owing to liberal  licensing, a number of variations, both  free and open source and  proprietary, have appeared. Commercial Unix vendors have tended to take the reference implementation and adapt it for their hardware, usually customizing it and adding proprietary extensions.\n Up until 2004,  XFree86 provided the most common X variant on free  Unix-like systems. XFree86 started as a  port of X to  386-compatible PCs and, by the end of the 1990s, had become the greatest source of technical innovation in X and the  de facto standard of X development.  [4] Since 2004, however, the  X.Org Server, a  fork of XFree86, has become predominant.\n While it is common to associate X with Unix, X servers also exist natively within other graphical environments. VMS Software Inc.&#39;s  OpenVMS operating system includes a version of X with  Common Desktop Environment (CDE), known as  DECwindows, as its standard desktop environment. [   citation needed]  Apple originally ported X to  macOS in the form of X11.app, but that has been deprecated in favor of the  XQuartz implementation. Third-party servers under Apple&#39;s older operating systems in the 1990s, System 7, and Mac OS 8 and 9, included Apple&#39;s  MacX and White Pine Software&#39;s eXodus.\n Microsoft Windows is not shipped with support for X, but many third-party implementations exist, as  free and open source software such as  Cygwin/X, and proprietary products such as  Exceed,  MKS X/Server,  Reflection X,  X-Win32 and  Xming.\n There are also  Java implementations of X servers. WeirdX runs on any platform supporting  Swing 1.1, and will run as an applet within most  browsers. The  Android X Server is an open source Java implementation that runs on  Android devices.\n When an operating system with a native windowing system hosts X in addition, the X system can either use its own normal desktop in a separate host window or it can run  rootless, meaning the X desktop is hidden and the host windowing environment manages the geometry and appearance of the hosted X windows within the host screen.\n    An  X terminal is a  thin client that only runs an X server. This architecture became popular for building inexpensive terminal parks for many users to simultaneously use the same large computer server to execute application programs as clients of each user&#39;s X terminal. This use is very much aligned with the original intention of the MIT project.\n X terminals explore the network (the local  broadcast domain) using the  X Display Manager Control Protocol to generate a list of available hosts that are allowed as clients. One of the client hosts should run an  X display manager.\n A limitation of X terminals and most thin clients is that they are not capable of any input or output other than the keyboard, mouse, and display. All relevant data is assumed to exist solely on the remote server, and the X terminal user has no methods available to save or load data from a local  peripheral device.\n Dedicated (hardware) X terminals have fallen out of use; a  PC or modern  thin client with an X server typically provides the same functionality at the same, or lower, cost.\n   The Unix-Haters Handbook (1994) devoted a full chapter to the problems of X.  [5]  Why X Is Not Our Ideal Window System (1990) by Gajewska, Manasse and McCormack detailed problems in the protocol with recommendations for improvement.\n  The lack of design guidelines in X has resulted in several vastly different interfaces, and in applications that have not always worked well together. The  Inter-Client Communication Conventions Manual (ICCCM), a specification for client interoperability, has a reputation for being difficult to implement correctly. Further standards efforts such as  Motif and  CDE did not alleviate problems. This has frustrated users and programmers.  [6] Graphics programmers now generally address consistency of application  look and feel and communication by coding to a specific desktop environment or to a specific widget toolkit, which also avoids having to deal directly with the ICCCM.\n X also lacks native support for user-defined stored procedures on the X server, in the manner of  NeWS\u00a0\u2013 there is no  Turing-complete scripting facility. Various desktop environments may thus offer their own (usually mutually incompatible) facilities.\n  Systems built upon X may have  accessibility issues that make utilization of a computer difficult for disabled users, including  right click,  double click,  middle click,  mouse-over, and  focus stealing. Some X11 clients deal with accessibility issues better than others, so persons with accessibility problems are not locked out of using X11. However, there is no accessibility standard or accessibility guidelines for X11. Within the X11 standards process there is no working group on accessibility, however, accessibility needs are being addressed by software projects to provide these features on top of X.\n The  Orca project adds accessibility support to the X Window System, including implementing an API ( AT-SPI  [7]). This is coupled with GNOME&#39;s  ATK to allow for accessibility features to be implemented in X programs using the GNOME/GTK APIs.  [8] KDE provides a different set of accessibility software, including a text-to-speech converter and a screen magnifier.  [9] The other major desktops (LXDE, Xfce and Enlightenment) attempt to be compatible with ATK.\n   An X client cannot generally be detached from one server and reattached to another unless its code specifically provides for it ( Emacs is one of the few common programs with this ability). As such, moving an entire session from one X server to another is generally not possible. However, approaches like  Virtual Network Computing (VNC),  NX and  Xpra allow a virtual session to be reached from different X servers (in a manner similar to  GNU Screen in relation to terminals), and other applications and toolkits provide related facilities.  [10]Workarounds like  x11vnc ( VNC :0 viewers), Xpra&#39;s shadow mode and NX&#39;s nxagent shadow mode also exist to make the current X-server screen available. This ability allows the user interface (mouse, keyboard, monitor) of a running application to be switched from one location to another without stopping and restarting the application.\n Network traffic between an X server and remote X clients is not encrypted by default. An attacker with a  packet sniffer can intercept it, making it possible to view anything displayed to or sent from the user&#39;s screen. The most common way to encrypt X traffic is to establish a  Secure Shell (SSH) tunnel for communication.\n Like all  thin clients, when using X across a network,  bandwidth limitations can impede the use of  bitmap-intensive applications that require rapidly updating large portions of the screen with low latency, such as 3D animation or photo editing. Even a relatively small  uncompressed 640x480x24\u00a0bit 30\u00a0fps video stream (~211\u00a0Mbit/s) can easily outstrip the bandwidth of a 100\u00a0Mbit/s network for a single client. In contrast, modern versions of X generally have extensions such as  MESA allowing local display of a local program&#39;s graphics to be optimized to bypass the network model and directly control the video card, for use of full-screen video, rendered 3D applications, and other such applications.\n  X&#39;s design requires the clients and server to operate separately, and device independence and the separation of client and server incur overhead. Most of the overhead comes from network  round-trip delay time between client and server ( latency) rather than from the protocol itself: the best solutions to performance issues depend on efficient application design.  [11] A common criticism of X is that its network features result in excessive complexity and decreased performance if only used locally.\n Modern X implementations use  Unix domain sockets for efficient connections on the same host. Additionally  shared memory (via the  MIT-SHM extension) can be employed for faster client\u2013server communication.  [12] However, the programmer must still explicitly activate and use the shared memory extension. It is also necessary to provide fallback paths in order to stay compatible with older implementations, and in order to communicate with non-local X servers.\n  Some people have attempted writing alternatives to and replacements for X. Historical alternatives include  Sun&#39;s  NeWS and  NeXT&#39;s  Display PostScript, both  PostScript-based systems supporting user-definable display-side procedures, which X lacked. Current alternatives include:\n macOS (and its mobile counterpart,  iOS) implements its windows system, which is known as  Quartz. When  Apple Inc. bought NeXT, and used  NeXTSTEP to construct  Mac OS X, it replaced Display PostScript with  Quartz.  Mike Paquette, one of the authors of Quartz, explained that if Apple had added support for all the features it wanted to include into X11, it would not bear much resemblance to X11 nor be compatible with other servers anyway.  [13]\n Android, which runs on the  Linux kernel, uses its own system for drawing the user interface known as  SurfaceFlinger. 3D rendering is handled by  EGL.\n Wayland is being developed by several X.Org developers as a prospective replacement for X. It works directly with the  GPU hardware, via  DRI. Wayland can run an X.org server as a client, which can be rootless.  [14] A proprietary port of the Wayland backend to the  Raspberry Pi was completed in 2013.  [15] The project reached version 1.0 in 2012. Like Android, Wayland is EGL-based.\n Mir is a project from  Canonical Ltd. with goals similar to Wayland.  [16] Mir is intended to work with mobile devices using ARM chipsets (a stated goal is compatibility with Android device-drivers) as well as x86 desktops. Like Android, Mir/UnityNext are EGL-based. Backwards compatibility with X client-applications is accomplished via Xmir.\n Other alternatives attempt to avoid the overhead of X by working directly with the hardware; such projects include  DirectFB.  [17] (The  Direct Rendering Infrastructure (DRI), which aims to provide a reliable kernel-level interface to the  framebuffer, might [   citation needed] make these efforts redundant.)\n Additional ways to achieve a functional form of the &#34;network transparency&#34; feature of X, via network transmissibility of graphical services, include:\n Virtual Network Computing (VNC), a very low-level system which sends compressed bitmaps across the network; the Unix implementation includes an X server\n Remote Desktop Protocol (RDP), which is similar to VNC in purpose, but originated on Microsoft Windows before being ported to Unix-like systems; cf  NX,  GotoMyPc, etc.\n   Several bitmap display systems preceded X. From  Xerox came the  Alto (1973) and the  Star (1981). From  Apollo Computer came Display Manager (1981). From  Apple came the  Lisa (1983) and the  Macintosh (1984). The  Unix world had the  Andrew Project (1982) and  Rob Pike&#39;s  Blit terminal (1982).\n Carnegie Mellon University produced a remote-access app\n......", "posttime": "2020-05-06 01:53:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "system,\u670d\u52a1\u5668,server", "title": "X Window System\uff1a\u539f\u7406", "title_en": "X Window System: Principles", "transed": 1, "url": "https://en.wikipedia.org/wiki/X_Window_System#Principles", "via": "", "real_tags": ["system", "\u670d\u52a1\u5668", "server"]}, {"category": "", "categoryclass": "", "imagename": "cf05bee9112af8dc340f8fd1208a9269.jpeg", "infoid": 1000793, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u6d41\u884c\u4f7f\u4ed6\u4eec\u7684\u6e38\u620f\u91cd\u65b0\u767b\u4e0a\u6392\u884c\u699c\u699c\u9996\uff0c\u73b0\u5728\u4ed6\u4eec\u6b63\u5728\u8fdb\u884c\u66f4\u65b0\uff0c\u5728\u90a3\u91cc\u4f60\u53ef\u4ee5\u7ed3\u675f\u4e00\u573a\u5927\u6d41\u884c\uff0c\u800c\u4e0d\u662f\u5bfc\u81f4\u5b83\u3002", "note_en": "The pandemic brought their game back to the top of the charts, and now they're working on an update where you can end a pandemic rather than cause it.", "posttime": "2020-05-06 01:53:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u5f00\u53d1,expected,\u6392\u884c\u699c,pandemic", "title": "\u201c\u761f\u75ab\u516c\u53f8\u201d\u7684\u5f00\u53d1\u8005\u4ece\u672a\u60f3\u8fc7\u73b0\u5b9e\u4f1a\u50cf\u5b83\u7684\u89c6\u9891\u6e38\u620f\u4e00\u6837\u3002", "title_en": "'Plague, Inc.\u2019 developer never expected reality to look like its video game", "transed": 1, "url": "https://www.vice.com/en_us/article/bv8g8z/plague-inc-developer-never-expected-reality-to-look-like-its-video-game", "via": "", "real_tags": ["\u6e38\u620f", "\u5f00\u53d1", "expected", "\u6392\u884c\u699c", "pandemic"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000792, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u641c\u7d22\u785d\u57fa\u82ef\u57fa\u620a\u4e8c\u70ef\u919b\u3001\u785d\u57fa\u82ef\u57fa\u620a\u4e8c\u70ef\u919b\u3001NPPD\u6216METKA(\u4fc4\u8bed\u610f\u4e3a\u6807\u8bb0)\uff0c\u4fd7\u79f0\u95f4\u8c0d\u5c18\uff0c[1]\u662f\u4e00\u79cd\u5316\u5b66\u5316\u5408\u7269\uff0c\u5728\u51b7\u6218\u82cf\u8054\u65f6\u671f\u88ab\u514b\u683c\u52c3\u7528\u4f5c\u6807\u7b7e\u5242\u3002\u83ab\u65af\u79d1\u7684\u82cf\u8054\u5f53\u5c40\u901a\u8fc7\u5728\u7f8e\u56fd\u4eba\u7684\u8863\u670d\u3001\u6c7d\u8f66\u3001\u95e8\u628a\u624b\u548c\u5176\u4ed6\u7269\u54c1\u4e0a\u6d82\u4e0a\u4e00\u79cd\u51e0\u4e4e\u770b\u4e0d\u89c1\u7684\u7c89\u672b\u6765\u8ffd\u8e2a\u4ed6\u4eec\u3002\u95f4\u8c0d\u5c18\u57c3\u7684\u5176\u4ed6\u4e00\u4e9b\u53d8\u4f53\u53ef\u80fd\u542b\u6709\u9c81\u7c73\u8bfa\uff0c\u5728\u7d2b\u5916\u5149\u4e0b\u4f1a\u53d1\u5149\u3002[2][3][4]\u3002\n1963\u5e74\uff0c\u4e9a\u5386\u5c71\u5927\u00b7\u514b\u96f7\u5e15\u8bfa\u592b(Alexander Chrepanov)\u9996\u6b21\u5411\u83ab\u65af\u79d1\u7684\u4e2d\u592e\u60c5\u62a5\u5c40(Central Intelligence Agency)\u62ab\u9732\u4e86\u8fd9\u4e00\u6d88\u606f\uff0c\u4ed6\u662f\u4e00\u540d\u514b\u683c\u52c3\u6210\u5458\u3002[4]\u3002\n1984\u5e74\uff0c\u514b\u683c\u52c3\u5b98\u5458Sergei Votontsov(\u4ee3\u53f7GT/COWL)\u63d0\u4f9b\u4e86\u8be5\u7269\u8d28\u7684\u6837\u672c\u3002[4]\u3002\n1985\u5e74\u590f\u5929\uff0c\u8fd9\u79cd\u7c89\u672b\u5f00\u59cb\u5927\u91cf\u51fa\u73b0\u5728\u83ab\u65af\u79d1\u3002\u7531\u4e8e\u62c5\u5fc3\u8be5\u7269\u8d28\u5bf9\u5065\u5eb7\u7684\u5f71\u54cd\uff0c\u7f8e\u56fd\u56fd\u52a1\u9662\u516c\u5f00\u5411\u82cf\u8054\u63d0\u51fa\u6297\u8bae\u3002\u540e\u6765\u786e\u5b9a\uff0c\u5bf9\u5065\u5eb7\u7684\u5a01\u80c1\u5f88\u4f4e\u3002[7][8][9]\u3002\n\u4ece\u5927\u7ea62005-2015\u5e74\u5f00\u59cb\uff0c\u4f7f\u7528NPPD\u5f00\u53d1\u4e86\u4f9b\u6267\u6cd5\u673a\u6784\u4f7f\u7528\u7684\u5316\u5b66\u54c1\u8ffd\u8e2a\u5de5\u5177\u5305\u3002[10]\u4e3a\u4e86\u68c0\u6d4bNPPD\uff0c\u5c060.1%\u7684\u8418\u95f4\u82ef\u4e8c\u915a\u7532\u9187\u6eb6\u6db2\u52a0\u5165\u5230\u95ee\u9898\u7269\u54c1\u7684\u68c9\u7b7e\u4e2d\uff0c\u7136\u540e\u52a0\u5165\u6d53\u76d0\u9178\u3002\u89c2\u5bdf\u5230\u7ea2\u8272\u8868\u793a\u68c0\u6d4b\u5448\u9633\u6027\u3002[11]\u5728\u65e9\u671f\u7684\u6709\u673a\u5316\u5b66\u7814\u7a76\u4e2d\uff0c\u7ecf\u5e38\u4f7f\u7528\u95f4\u82ef\u4e8c\u915a\u6765\u786e\u5b9a\u6eb6\u6db2\u4e2d\u662f\u5426\u5b58\u5728\u919b\u57fa\uff0c\u5728\u9178\u6027\u6eb6\u6db2\u4e2d\u4f1a\u5f62\u6210\u7ea2\u8272\u52a0\u5408\u7269\u3002[12]\u3002\n\u9996\u9875--\u671f\u520a\u4e3b\u8981\u5206\u7c7b--\u671f\u520a\u7ec6\u4ecb\u7ecd--\u671f\u520a\u9898\u5f55\u4e0e\u6587\u6458--\u671f\u520a\u8be6\u7ec6\u6587\u6458\u5185\u5bb9\u30025-(4-\u785d\u57fa\u82ef\u57fa)-2\uff0c4-\u620a\u4e8c\u70ef\u919b(\u70df\u5c18)\u7684\u5438\u6536\u548c\u4ee3\u8c22\u3002\u6bd2\u6548\u5511\uff0cAppl\uff0c\u836f\u5178\u300287(1)\uff1a121-126\u3002\u7535\u8bdd\uff1a90090-1\uff0c\u7535\u8bdd\uff1a10.1016/0041x(87)008x\u3002PMID\u4e3a3798448\u3002\n\u9ad8\u666e\u66fcG\uff0cKalos A\uff0cFrierson M\uff0cRosenkranz HS(1986)\u3002\u636e\u9884\u6d4b\uff0cNPPD(\u95f4\u8c0d\u7c89\u5c18)\u662f\u4e00\u79cd\u8bf1\u53d8\u5242\u3002\u73af\u5883\u8bf1\u53d8\u5242\u30028(4)\uff1a627-30\u3002doi\uff1a10.1002/em.2860080413.\u3002PMID\u4e3a3525138\u3002\n\u9a6c\u6b47\u5c14\uff0cE.(1985)\u3002\u95f4\u8c0d\u7070\u5c18\u6fc0\u6012\u4e86\u5916\u4ea4\u5b98\u3002\u79d1\u5b66\u3002229(4717)\uff1a952\u3002DOI\uff1a10.1126/Science.229.4717.952.\u3002PMID\u4e3a17782513\u3002\n\u94c3\u6728\uff0c\u65b0\u4e00\uff1b\u5927\u7530\uff0cHikoto\uff1b\u94c3\u6728\uff0c\u5b89\u5f18\uff1b\u94c3\u7530\uff0cRitsuko\uff1b\u9e7f\u677e\uff0cMasaaki\uff1b\u68ee\uff0cMasahito\uff1b\u4e2d\u5c9b\uff0cHidemitsu(2005)\u30025-(4-\u785d\u57fa\u82ef\u57fa)-2\uff0c4-\u620a\u4e8c\u70ef-1-\u919b(NPPD)\u5728\u6a21\u62df\u72af\u7f6a\u73b0\u573a\u88ab\u975e\u79d1\u5b66\u5bb6\u7528\u4f5c\u793a\u8e2a\u5242\u3002\u56fd\u9645\u6cd5\u533b\u79d1\u5b66\u534f\u4f1a\u3002152(1)\uff1a29-34\u3002doi\uff1a10.1016/j.forScience int.2005.02.026.\u3002PMID\u4e3a15939173\u3002", "note_en": "Jump to navigation  Jump to search  Nitrophenyl pentadienal,  nitrophenylpentadienal,  NPPD, or  METKA (Russian for &#34;mark&#34;) colloquially known as &#34;spy dust&#34;,  [1] is a chemical compound used as a tagging agent by the  KGB during the  Cold War Soviet Era.  Soviet authorities in  Moscow tracked Americans by applying an almost invisible powder to their clothing, cars, doorknobs and other objects. Some other variants of &#34;spy dust&#34; may have contained  luminol and would glow under  ultraviolet light.  [2]  [3]  [4]\n   It was first revealed to the  Central Intelligence Agency in Moscow in 1963 by  Alexander Chrepanov, a KGB walk in.  [4]\n  In 1984, KGB officer  Sergei Votontsov (Code name GT/COWL) provided a sample of the substance.  [4]\n  In the summer of 1985 the powder began to appear in Moscow in much larger quantities. Concerned about the health effects of the substance, the  United States  State Department publicly protested to the Soviets. It was later determined that the health threat was low.  [7]  [8]  [9]\n Beginning about 2005-2015, a chemical tracking kit for law enforcement agencies was developed using NPPD.  [10] To detect NPPD a 0.1%  methanol solution of  naphthoresorcinol is added to a swab of the item in question and then concentrated hydrochloric acid is added. The observation of a red color indicates a positive test.  [11] Napthoresorcinol was frequently used in early organic chemistry investigations to determine the presence of  aldehyde groups in solution, a red  adduct is formed in acidic solution.  [12]\n  ^   Burka LT, Sanders JM, Kool CP, Kim YC, Matthews HB (1987). &#34;Absorption and metabolism of 5-(4-nitrophenyl)-2,4-pentadienal (Spydust)&#34;.  Toxicol Appl Pharmacol.  87 (1): 121\u2013126.  doi: 10.1016/0041-008x(87)90090-1.  PMID\u00a0 3798448.\n       ^   Klopman G, Kalos A, Frierson M, Rosenkranz HS (1986). &#34;NPPD (spy dust) is predicted to be a mutagen&#34;.  Environ Mutagen.  8 (4): 627\u201330.  doi: 10.1002/em.2860080413.  PMID\u00a0 3525138.\n ^   Marshall, E. (1985). &#34; &#34;Spy Dust&#34; Irritates Diplomats&#34;.  Science.  229 (4717): 952.  doi: 10.1126/science.229.4717.952.  PMID\u00a0 17782513.\n  ^   Suzuki, Shinichi; Ohta, Hikoto; Suzuki, Yasuhiro; Sugita, Ritsuko; Kasamatsu, Masaaki; Mori, Masahito; Nakajima, Hidemitsu (2005). &#34;5-(4-Nitrophenyl)-2,4-pentadien-1-al (NPPD) used as a tracer by nonscientists at a simulated crime scene&#34;.  Forensic Science International.  152 (1): 29\u201334.  doi: 10.1016/j.forsciint.2005.02.026.  PMID\u00a0 15939173.", "posttime": "2020-05-06 01:30:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u620a\u4e8c\u70ef,dust,nppd", "title": "\u95f4\u8c0d\u5c18(\u785d\u57fa\u82ef\u57fa\u620a\u4e8c\u70ef\u919b)", "title_en": "Spy Dust (Nitrophenyl Pentadienal)", "transed": 1, "url": "https://en.wikipedia.org/wiki/Nitrophenyl_pentadienal", "via": "", "real_tags": ["\u620a\u4e8c\u70ef", "dust", "nppd"]}, {"category": "", "categoryclass": "", "imagename": "c9fdfda44195491a8f42cd177561eafd.jpg", "infoid": 1000791, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee3\u7801\uff1ahttps://github.com/Henry-E/poisson_poops\u63a8\u7279\u7248\u672c\uff1ahttps://twitter.com/EldinhoC/status/1233407388927000580", "note_en": "Code: https://github.com/Henry-E/poisson_poops Twitter version: https://twitter.com/EldinhoC/status/1233407388927000580", "posttime": "2020-05-06 01:30:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7206\u70b8\u6848,bombings,https", "title": "\u4e8c\u6218\u7206\u70b8\u6848\u548c\u9e1f\u7caa\u6709\u4ec0\u4e48\u5171\u540c\u4e4b\u5904\uff1f(\u6982\u7387\u6a21\u62df)", "title_en": "What do WWII bombings and bird poop have in common? (probability simulation)", "transed": 1, "url": "https://www.youtube.com/watch?v=PKqUzsG9txo&feature=youtu.be", "via": "", "real_tags": ["\u7206\u70b8\u6848", "bombings", "https"]}, {"category": "", "categoryclass": "", "imagename": "0498fa6474ad6d2d18227c6c018514cb.png", "infoid": 1000789, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u4eca\u5929\u7684\u53d1\u5e03\uff0cFirefox\u52a0\u5f3a\u4e86\u5bf9\u60a8\u7684\u5728\u7ebf\u5e10\u6237\u767b\u5f55\u548c\u5bc6\u7801\u7684\u4fdd\u62a4\uff0c\u5e76\u5728\u8fd9\u4e00\u5173\u952e\u65f6\u523b\u4ee5\u521b\u65b0\u7684\u65b9\u5f0f\u7ba1\u7406\u60a8\u7684\u5e10\u6237\uff1a\n\u5982\u679c\u60a8\u7684\u4e00\u4e2a\u5e10\u6237\u6d89\u53ca\u7f51\u7ad9\u5165\u4fb5\uff0c\u800c\u60a8\u5728\u5176\u4ed6\u7f51\u7ad9\u4e0a\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5bc6\u7801\uff0c\u73b0\u5728\u7cfb\u7edf\u5c06\u63d0\u793a\u60a8\u66f4\u65b0\u5bc6\u7801\u3002\u94a5\u5319\u56fe\u6807\u6807\u8bc6\u54ea\u4e9b\u5e10\u6237\u4f7f\u7528\u8be5\u6613\u53d7\u653b\u51fb\u7684\u5bc6\u7801\u3002\n\u81ea\u52a8\u4e3a\u66f4\u591a\u7f51\u7edc\u4e0a\u7684\u65b0\u5e10\u6237\u751f\u6210\u5b89\u5168\u3001\u590d\u6742\u7684\u5bc6\u7801\uff0c\u8fd9\u4e9b\u5bc6\u7801\u5f88\u5bb9\u6613\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e2d\uff1b\n\u60a8\u53ef\u4ee5\u5728\u4e3b\u83dc\u5355\u7684\u201c\u767b\u5f55\u201d\u548c\u201c\u5bc6\u7801\u201d\u4e0b\u8f7b\u677e\u8bbf\u95ee\u548c\u67e5\u770b\u4fdd\u5b58\u7684\u5bc6\u7801\u3002\u5982\u679c\u4f60\u7684\u8bbe\u5907\u78b0\u5de7\u5728\u4f60\u7684\u5bb6\u4eba\u6216\u5ba4\u53cb\u4e4b\u95f4\u5171\u4eab\uff0c\u6700\u65b0\u7684\u66f4\u65b0\u6709\u52a9\u4e8e\u9632\u6b62\u4f60\u4e0d\u7ecf\u610f\u5730\u5077\u5077\u7aa5\u63a2\u3002\u5982\u679c\u60a8\u6ca1\u6709\u4e3aFirefox\u8bbe\u7f6e\u4e3b\u5bc6\u7801\uff0cWindows\u548cMacOS\u73b0\u5728\u9700\u8981\u5148\u767b\u5f55\u5230\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e10\u6237\uff0c\u7136\u540e\u624d\u80fd\u663e\u793a\u60a8\u4fdd\u5b58\u7684\u5bc6\u7801\u3002\n\u753b\u4e2d\u753b\u5141\u8bb8\u60a8\u8fdb\u884c\u591a\u4efb\u52a1\u5904\u7406\uff0c\u65e0\u8bba\u60a8\u5728\u8ba1\u7b97\u673a\u4e0a\u505a\u4ec0\u4e48\u3001\u8de8\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u662f\u8de8\u5de5\u4f5c\u7a7a\u95f4\uff0c\u5c0f\u89c6\u9891\u7a97\u53e3\u90fd\u4f1a\u968f\u4e4b\u800c\u6765\u3002\u73b0\u5728\uff0c\u5f53\u60a8\u51c6\u5907\u597d\u5c06\u7126\u70b9\u653e\u5728\u89c6\u9891\u4e0a\u65f6\uff0c\u53cc\u51fb\u53ef\u4ee5\u4f7f\u5c0f\u7a97\u53e3\u8fdb\u5165\u5168\u5c4f\u3002\u518d\u6b21\u53cc\u51fb\u53ef\u518d\u6b21\u51cf\u5c0f\u5927\u5c0f\u3002\nFirefox\u73b0\u5728\u652f\u6301Audio Worklet\uff0c\u8fd9\u5c06\u5141\u8bb8\u66f4\u590d\u6742\u7684\u97f3\u9891\u5904\u7406\uff0c\u5982\u865a\u62df\u73b0\u5b9e\u548c\u7f51\u7edc\u6e38\u620f\uff1b\u5e76\u4e14\u6b63\u5728\u88ab\u4f60\u559c\u6b22\u7684\u4e00\u4e9b\u8f6f\u4ef6\u7a0b\u5e8f\u91c7\u7528\u3002\n\u6709\u4e86\u8fd9\u4e2a\u6539\u53d8\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u52a0\u5165Firefox\u4e0a\u7684Zoom\u901a\u8bdd\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u4e0b\u8f7d\u3002\nWebRender\u7ee7\u7eed\u63a8\u51fa\u66f4\u591a\u9002\u7528\u4e8eWindows\u7528\u6237\u7684Firefox\uff0c\u76ee\u524d\u5728\u73b0\u4ee3Intel\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u9ed8\u8ba4\u53ef\u7528\uff0c\u5c0f\u5c4f\u5e55(&lt\uff1b=1920x1200)\u7528\u4e8e\u6539\u8fdb\u56fe\u5f62\u6e32\u67d3\u3002", "note_en": "With today\u2019s release, Firefox strengthens protections for your online account logins and passwords, with innovative approaches to managing your accounts during this critical time:\n If one of your accounts is involved in a website breach and you&#39;ve used the same password on other websites, you will now be  prompted to update your password. A key icon identifies which accounts use that vulnerable password.\n Automatically  generate secure, complex passwords for new accounts across more of the web that are easily saved right in the browser;\n You have been able to access and see your saved passwords under Logins and Passwords easily under the main menu. If your device happens to be shared among your family or roommates, the latest update helps to prevent casual snooping over your shoulder. If you don\u2019t have a  master password set up for Firefox, Windows and macOS now requires a  login to your operating system account before showing your saved passwords.\n  Picture-in-Picture allows you to multitask, the small video window following along no matter what you are doing on your computer, across different applications and even workspaces. Now, when you are ready to focus on the video, a double click can take the small window into full screen. Double click again to reduce the size again.\n  Firefox now supports Audio Worklets that will allow more complex audio processing like VR and gaming on the web; and is being adopted by some of your favorite software programs.\n With this change, you can now join Zoom calls on Firefox without the need for any additional downloads.\n  WebRender continues its roll out to  more Firefox for Windows users, now available by default on modern Intel laptops with a small screen (&lt;= 1920x1200) for improved graphics rendering.", "posttime": "2020-05-06 01:17:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "firefox,\u706b\u72d0,\u73b0\u5728", "title": "\u706b\u72d076", "title_en": "Firefox 76", "transed": 1, "url": "https://www.mozilla.org/en-US/firefox/76.0/releasenotes/", "via": "", "real_tags": ["firefox", "\u706b\u72d0", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000788, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5230\u73b0\u5728\u4e3a\u6b62\u8fd8\u597d\u3002\u73b0\u5728\uff0c\u5982\u4f55\u89e3\u91ca\u6570\u5b57\u901a\u5e38\u7528\u516c\u5f0f\u6765\u89e3\u91ca\uff1a\u8fd9\u901a\u5e38\u662f\u6211\u7ffb\u8f6c\u8868\u7684\u5730\u65b9\u3002\u4e5f\u8bb8\u6211\u5bf9\u6570\u5b66\u7b26\u53f7\u8fc7\u654f\uff0c\u4f46\u5f53\u6211\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u7684\u5927\u8111\u91cc\u5c31\u662f\u6709\u4ec0\u4e48\u4e1c\u897f\u6ca1\u6709\u7075\u5149\u4e00\u95ea\u3002\u611f\u89c9\u50cf\u662f\u5728\u5b66\u753b\u732b\u5934\u9e70\u3002\n\u867d\u7136\u8fd9\u79cd\u89e3\u91ca\u6d6e\u70b9\u7684\u65b9\u5f0f\u662f\u6b63\u786e\u7684\uff0c\u4f46\u901a\u5e38\u4f1a\u8ba9\u6211\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u5b8c\u5168\u4e0d\u77e5\u6240\u63aa\u3002\u6211\u6307\u8d23\u8fd9\u4e2a\u53ef\u6015\u7684\u7b26\u53f7\u8ba9\u5927\u6279\u7a0b\u5e8f\u5458\u7070\u5fc3\u4e27\u6c14\uff0c\u628a\u4ed6\u4eec\u5413\u5230\u518d\u4e5f\u4e0d\u56de\u5934\u53bb\u7406\u89e3\u6d6e\u70b9\u7684\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u7684\u5730\u6b65\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u89e3\u91ca\u5b83\u3002\u4e0d\u662f\u6307\u6570\uff0c\u800c\u662f\u4e24\u4e2a\u6574\u6570\u7684\u4e24\u4e2a\u8fde\u7eed\u5e42\u4e4b\u95f4\u7684\u7a97\u53e3\u3002\u8003\u8651\u7a97\u53e3\u5185\u504f\u79fb\u91cf\uff0c\u800c\u4e0d\u662f\u5c3e\u6570\u3002\u8be5\u7a97\u53e3\u544a\u8bc9\u60a8\u6570\u5b57\u5c06\u5728\u54ea\u4e24\u4e2a\u8fde\u7eed\u76842\u6b21\u5e42\u8303\u56f4\u5185\uff1a[0.5\uff0c1]\u3001[1\uff0c2]\u3001[2\uff0c4]\u3001[4\uff0c8]\u7b49\u7b49(\u6700\u9ad8\u53ef\u8fbe[$2^{127}$\uff0c$2^{128}$]\u3002\u504f\u79fb\u91cf\u5c06\u7a97\u53e3\u5212\u5206\u4e3a$2^{23}=8388608$\u5b58\u50a8\u6876\u3002\u4f7f\u7528\u7a97\u53e3\u548c\u504f\u79fb\u91cf\uff0c\u60a8\u53ef\u4ee5\u8fd1\u4f3c\u8ba1\u7b97\u4e00\u4e2a\u6570\u5b57\u3002\u7a97\u6237\u662f\u4e00\u79cd\u5f88\u597d\u7684\u9632\u6b62\u6ea2\u51fa\u7684\u88c5\u7f6e\u3002\u4e00\u65e6\u60a8\u5728\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fbe\u5230\u6700\u5927\u503c(\u4f8b\u5982[2\uff0c4])\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u6d6e\u52a8\u5e76\u8868\u793a\u4e0b\u4e00\u4e2a\u7a97\u53e3(\u4f8b\u5982[4\uff0c8])\u4e2d\u7684\u6570\u5b57\u3002\u56e0\u4e3a\u7a97\u53e3\u53d8\u5f97\u4e24\u500d\u5927\uff0c\u6240\u4ee5\u5b83\u53ea\u9700\u8981\u4e00\u70b9\u7cbe\u5ea6\u3002\u4e0b\u56fe\u8bf4\u660e\u4e86\u6570\u5b576.1\u5c06\u5982\u4f55\u7f16\u7801\u3002\u7a97\u53e3\u5fc5\u987b\u4ece4\u5f00\u59cb\uff0c\u8de8\u5ea6\u52302\u7684\u4e0b\u4e00\u4e2a\u5e428\u3002\u504f\u79fb\u91cf\u5927\u7ea6\u662f\u7a97\u53e3\u7684\u4e00\u534a\u3002\n\u5f53\u7a97\u53e3\u8986\u76d6\u8303\u56f4\u8f83\u5927\u65f6\uff0c\u7cbe\u5ea6\u4f1a\u635f\u5931\u591a\u5c11\uff1f\u8ba9\u6211\u4eec\u4ee5\u7a97\u53e3[1\uff0c2]\u4e3a\u4f8b\uff0c\u5176\u4e2d8388608\u4e2a\u504f\u79fb\u91cf\u8986\u76d6\u8303\u56f41\uff0c\u5176\u7cbe\u5ea6\u4e3a$\\frac{(2-1)}{8388608}=0.00000011920929$\u3002\u5728\u7a97\u53e3[2048\uff0c4096]\u4e2d\uff0c8388608\u4e2a\u504f\u79fb\u91cf\u8986\u76d6$(4096-2048)=2048$\u7684\u8303\u56f4\uff0c\u8fd9\u7ed9\u51fa\u4e86\u7cbe\u5ea6$\\FRAC{(4096-2048)}{8388608}=0.0002$\u3002\n\u8ba9\u6211\u4eec\u4e3e\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8be6\u7ec6\u8ba1\u7b97\u6211\u4eec\u90fd\u5f88\u719f\u6089\u7684\u4e00\u4e2a\u6570\u5b57\u7684\u6d6e\u70b9\u8868\u793a\uff1a3.14\u3002\u6570\u5b573.14\u662f\u6b63\u7684$\\right tarrow S=0$\u3002\u6570\u5b573.14\u4ecb\u4e8e2\u548c4\u7684\u5e42\u4e4b\u95f4\uff0c\u56e0\u6b64\u6d6e\u52a8\u7a97\u53e3\u5fc5\u987b\u4ece$2^1$$\\right tarrow E=128$\u5f00\u59cb(\u8bf7\u53c2\u9605\u516c\u5f0f\uff0c\u5176\u4e2d\u7a97\u53e3\u662f$2^{(E-127)}$)\u3002\u6700\u540e\uff0c\u6709$2^{23}$\u504f\u79fb\u91cf\u53ef\u7528\u4e8e\u8868\u793a3.14\u5728\u533a\u95f4[2-4]\u5185\u7684\u4f4d\u7f6e\u3002\u5728\u4f7f\u504f\u79fb\u91cf$M=2^{23}*0.57=4781507$\u7684\u533a\u95f4\u5185\uff0c\u5b83\u4f4d\u4e8e$\\frac{3.14-2}{4-2}=0.57$\u3002\n\u5176\u4e8c\u8fdb\u5236\u7ffb\u8bd1\u4e3a\uff1a\u56e0\u6b64\uff0c\u503c3.14\u8fd1\u4f3c\u4e3a3.1400001049041748046875\u3002\u7528\u96be\u770b\u7684\u516c\u5f0f\u5bf9\u5e94\u7684\u503c\uff1a\u6700\u540e\u662f\u7528\u7a97\u53e3\u548c\u504f\u79fb\u91cf\u8868\u793a\u7684\u56fe\u5f62\uff1a\u5e0c\u671b\u5bf9\u60a8\u6709\u5e2e\u52a9\uff1a)\uff01\u65e2\u7136\u6d6e\u70b9\u5355\u4f4d\u901f\u5ea6\u5982\u6b64\u4e4b\u6162\uff0c\u4e3a\u4ec0\u4e48C\u8bed\u8a00\u4ee5FLOAT\u548cDOUBLE\u7c7b\u578b\u7ed3\u675f\u5462\uff1f\u6bd5\u7adf\uff0c\u7528\u4e8e\u53d1\u660e\u8bed\u8a00(PDP-11)\u7684\u673a\u5668\u6ca1\u6709\u6d6e\u70b9\u5355\u5143\uff01\u5236\u9020\u5546(DEC)\u66fe\u5411\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\u548c\u80af\u00b7\u6c64\u666e\u68ee\u627f\u8bfa\uff0c\u4e0b\u4e00\u6b3e\u5c06\u4f1a\u6709\u4e00\u6b3e\u3002\u4f5c\u4e3a\u5929\u6587\u5b66\u7231\u597d\u8005\uff0c\u4ed6\u4eec\u51b3\u5b9a\u5728\u4ed6\u4eec\u7684\u8bed\u8a00\u4e2d\u52a0\u5165\u8fd9\u4e24\u79cd\u7c7b\u578b\u3002\u7410\u4e8b\uff1a1991\u5e74\u771f\u6b63\u60f3\u8981\u786c\u4ef6\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\u7684\u4eba\u53ef\u4ee5\u4e70\u4e00\u4e2a\u3002\u5f53\u65f6\u552f\u4e00\u53ef\u80fd\u60f3\u8981\u4e00\u53f0\u7684\u4eba\u53ef\u80fd\u662f\u79d1\u5b66\u5bb6(\u6839\u636e\u82f1\u7279\u5c14\u5bf9\u5e02\u573a\u7684\u7406\u89e3)\u3002\u5b83\u4eec\u5728\u5e02\u573a\u4e0a\u88ab\u79f0\u4e3a\u6570\u5b66\u534f\u5904\u7406\u5668\u3002\u6027\u80fd\u4e00\u822c\uff0c\u4ef7\u683c\u60ca\u4eba(1993\u5e74\u7684200\u7f8e\u5143\u76f8\u5f53\u4e8e2016\u5e74\u7684350\u7f8e\u5143)\u3002\u56e0\u6b64\uff0c\u9500\u552e\u8868\u73b0\u5e73\u5e73\u3002\n*", "note_en": "So far, so good. Now, how numbers are interpreted is usually explained with the formula:       This is usually where I flip the table. Maybe I am allergic to mathematic notation but something just doesn&#39;t click in my brain when I read this. It feels like learningto  draw a owl.\n     Although correct, this way of explaining floating point usually leaves some of us completelyclueless. I blame this dreadful notation for discouraging legions of programmers,scaring them to the point where they never looked back to understand how floating pointactually works.   Fortunately, there is a different way to explain it. Instead of Exponent, thinkof a Window between two consecutive power of two integers. Instead of a Mantissa, thinkof an Offset within that window.       The window tells within which two consecutive power-of-two the number will be: [0.5,1], [1,2], [2,4], [4,8] and so on (up to [$2^{127}$,$2^{128}$]. The offset divides the window in $ 2^{23} = 8388608 $ buckets. With the window and the offset you can approximate a number. The window is an excellent mechanism to protect from overflowing. Once you have reached the maximum in a window (e.g [2,4]), you can &#34;float&#34; it right and represent the number within the next window (e.g [4,8]). It only costs a little bit of precision since the window becomes twice as large.  The next figure illustrates how the number 6.1 would be encoded. The window must start at 4 and span to next power of two, 8. The offset is about half way down the window.\n    How much precision is lost when the window covers a wider range? Let&#39;s take an example with window [1,2] where the 8388608 offsets cover a range of 1 which gives a precision of $ \\frac{(2-1)}{8388608}=0.00000011920929$. In the window [2048,4096] the 8388608 offsets cover a range of $(4096-2048) = 2048$ which gives a precision $ \\frac{(4096-2048)}{8388608}=0.0002$.\n    Let&#39;s take an other example with the detailed calculations of the floating point representation of a number we all know well: 3.14.  The number 3.14 is positive $\\rightarrow S=0$.  The number 3.14 is between the power of two 2 and 4 so the floating window must start at $2^1$ $\\rightarrow E=128$ (see formula where window is $2^{(E-127)}$).  Finally there are $2^{23}$ offsets available to express where 3.14 falls within the interval [2-4]. It is at $\\frac{3.14 -2 }{4 - 2} = 0.57$ within the interval which makes the offset $ M = 2^{23}*0.57 = 4781507$\n Which in binary translates to:  The value 3.14 is therefore approximated to 3.1400001049041748046875. The corresponding value with the ugly formula:    And finally the graphic representation with window and offset:         I hope that helped :) !     Since floating point units were so slow, why did the C language end up with  float and  double types ? After all, the machine used to invent the language (PDP-11) did not have a floating point unit! The manufacturer (DEC) had promised to Dennis Ritchie and Ken Thompson the next model would have one. Being astronomy enthusiasts they decided to add those two types to their language.    Trivia: People who really wanted a hardware floating point unit in 1991 could buy one. The only people who could possibly want one back then would have been scientists (as per Intel understanding of the market). They were marketed as &#34;Math CoProcessor&#34;. Performance were average and price was outrageous (200 USD in 1993 equivalent to 350 USD in 2016.). As a result, sales were mediocre.\n       *", "posttime": "2020-05-06 01:06:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u91ca,point,\u6d6e\u70b9,window", "title": "\u76f4\u89c2\u5730\u89e3\u91ca\u6d6e\u70b9", "title_en": "Floating Point Visually Explained", "transed": 1, "url": "http://fabiensanglard.net/floating_point_visually_explained/index.html", "via": "", "real_tags": ["\u89e3\u91ca", "point", "\u6d6e\u70b9", "window"]}, {"category": "", "categoryclass": "", "imagename": "39ddde4c274d251badf844f3a2b613c2.png", "infoid": 1000787, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u4e00\u6761\u5206\u6790\u7ba1\u9053\uff0c\u4ee5\u4fbf\u4e8e\u5b9e\u65f6\u8ddf\u8e2aSARS-CoV-2\u4e2d\u7684\u7a81\u53d8\uff0c\u6700\u521d\u4e13\u6ce8\u4e8eSpike(S)\u86cb\u767d\uff0c\u56e0\u4e3a\u5b83\u4ecb\u5bfc\u4eba\u7c7b\u7ec6\u80de\u7684\u611f\u67d3\uff0c\u662f\u5927\u591a\u6570\u75ab\u82d7\u7b56\u7565\u548c\u57fa\u4e8e\u6297\u4f53\u7684\u6cbb\u7597\u7684\u76ee\u6807\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5728Spike\u4e2d\u9274\u5b9a\u51fa14\u4e2a\u6b63\u5728\u79ef\u7d2f\u7684\u7a81\u53d8\u3002\u7a81\u53d8\u5728\u66f4\u5e7f\u6cdb\u7684\u7cfb\u7edf\u53d1\u80b2\u80cc\u666f\u4e0b\u3001\u5730\u7406\u4e0a\u548c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u88ab\u8003\u8651\uff0c\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u65e9\u671f\u9884\u8b66\u7cfb\u7edf\uff0c\u4ee5\u63ed\u793a\u53ef\u80fd\u5728\u4f20\u64ad\u6216\u62b5\u6297\u5e72\u9884\u65b9\u9762\u5177\u6709\u9009\u62e9\u6027\u4f18\u52bf\u7684\u7a81\u53d8\u3002\u6bcf\u4e00\u4e2a\u57fa\u56e0\u90fd\u88ab\u8bc4\u4f30\u4e3a\u6b63\u9009\u62e9\u7684\u8bc1\u636e\uff0c\u5e76\u901a\u8fc7\u7ed3\u6784\u5efa\u6a21\u6765\u63a2\u7d22\u7a81\u53d8\u7684\u542b\u4e49\u3002\u7a81\u53d8Spike D614G\u4ee4\u4eba\u8feb\u5207\u5173\u6ce8\uff1b\u5b83\u4e8e2\u6708\u521d\u5f00\u59cb\u5728\u6b27\u6d32\u4f20\u64ad\uff0c\u5f53\u5b83\u88ab\u5f15\u5165\u65b0\u7684\u5730\u533a\u65f6\uff0c\u5b83\u8fc5\u901f\u6210\u4e3a\u4e3b\u5bfc\u5f62\u5f0f\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5c40\u90e8\u6d41\u884c\u83cc\u682a\u4e4b\u95f4\u91cd\u7ec4\u7684\u8bc1\u636e\uff0c\u8fd9\u8868\u660e\u5b58\u5728\u591a\u4e2a\u83cc\u682a\u611f\u67d3\u3002\u8fd9\u4e9b\u53d1\u73b0\u5bf9SARS-CoV-2\u7684\u4f20\u64ad\u3001\u53d1\u75c5\u673a\u5236\u548c\u514d\u75ab\u5e72\u9884\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002\n\u21b5\u8c22\u83f2\u5c14\u5fb7\u51a0\u72b6\u75c5\u6bd2\u57fa\u56e0\u7ec4\u7ec4\u7684#\u540d\u6210\u5458\uff1a\u963f\u5fb7\u91cc\u5b89\u00b7\u5b89\u683c\u4e9a\u5c14\u3001\u4e3d\u8d1d\u5361\u00b7L\u00b7\u5e03\u6717\u3001\u52b3\u62c9\u00b7\u5361\u91cc\u83b1\u7f57\u3001\u5362\u514b\u00b7R\u00b7\u683c\u6797\u3001\u4e39\u59ae\u5c14\u00b7C\u00b7\u683c\u7f57\u592b\u65af\u3001\u51ef\u8482\u00b7J\u00b7\u7ea6\u7ff0\u900a\u3001\u4e9a\u5386\u5c71\u5927\u00b7J\u00b7\u57fa\u5229\u3001\u672c\u6770\u660e\u00b7B\u00b7\u6797\u8d5b\u3001\u4fdd\u7f57\u00b7J\u00b7\u5e15\u68ee\u65af\u3001\u7a46\u7f55\u9ed8\u5fb7\u00b7\u62c9\u624e\u3001\u838e\u62c9\u00b7\u7f57\u5170-\u743c\u65af\u3001\u96f7\u5207\u5c14\u00b7M\u00b7\u5854\u514b\u3001\u4e39\u5c3c\u65af\u00b7\u738b\u3001\u9a6c\u4fee\u00b7D\u00b7\u6000\u5c14\u65af\u3002", "note_en": "We have developed an analysis pipeline to facilitate real-time mutation tracking in SARS-CoV-2, focusing initially on the Spike (S) protein because it mediates infection of human cells and is the target of most vaccine strategies and antibody-based therapeutics. To date we have identified fourteen mutations in Spike that are accumulating. Mutations are considered in a broader phylogenetic context, geographically, and over time, to provide an early warning system to reveal mutations that may confer selective advantages in transmission or resistance to interventions. Each one is evaluated for evidence of positive selection, and the implications of the mutation are explored through structural modeling. The mutation Spike D614G is of urgent concern; it began spreading in Europe in early February, and when introduced to new regions it rapidly becomes the dominant form. Also, we present evidence of recombination between locally circulating strains, indicative of multiple strain infections. These finding have important implications for SARS-CoV-2 transmission, pathogenesis and immune interventions.\n   \u21b5 # Members of Sheffield COVID-19 Genomics Group: Adrienne Angyal, Rebecca L. Brown, Laura Carrilero, Luke R. Green, Danielle C. Groves, Katie J Johnson, Alexander J Keeley, Benjamin B Lindsey, Paul J Parsons, Mohammad Raza, Sarah Rowland-Jones, Rachel M. Tucker, Dennis Wang, Matthew D. Wyles", "posttime": "2020-05-06 01:05:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,cov,transmissible,\u7a81\u53d8,spike", "title": "\u4e00\u79cd\u4f20\u64ad\u6027\u66f4\u5f3a\u7684SARS-CoV-2\u75c5\u6bd2\u7684\u51fa\u73b0", "title_en": "Emergence of a more transmissible form of SARS-CoV-2", "transed": 1, "url": "https://www.biorxiv.org/content/10.1101/2020.04.29.069054v1", "via": "", "real_tags": ["\u75c5\u6bd2", "cov", "\u7a81\u53d8", "spike"]}, {"category": "", "categoryclass": "", "imagename": "ec4a7ac484cb7478d106dfebd01eb16a.jpg", "infoid": 1000786, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e86\u89e3\u5982\u4f55\u4f7f\u7528Yahoo_FIN\u5305\u4f7f\u7528Python\u4e0b\u8f7d\u57fa\u672c\u9762\u6570\u636e\uff0c\u5305\u62ec\u5e02\u76c8\u7387\u548c\u5e02\u76c8\u7387\u3001\u80a1\u672c\u56de\u62a5\u7387\u7b49\u3002", "note_en": "Learn how to download fundamentals data with Python using the yahoo_fin package, including P/E and P/S ratios, return on equity, and more.", "posttime": "2020-05-06 00:42:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,fundamentals,download", "title": "\u5982\u4f55\u4f7f\u7528Python\u83b7\u53d6\u80a1\u7968\u57fa\u672c\u9762\u6570\u636e", "title_en": "How to get stock fundamentals data with Python", "transed": 1, "url": "http://theautomatic.net/2020/05/05/how-to-download-fundamentals-data-with-python/", "via": "", "real_tags": ["python", "download"]}, {"category": "", "categoryclass": "", "imagename": "ac38074248627e19bb32e7e8212ecd5a.jpg", "infoid": 1000785, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5e93\u6bd4\u8482\u8bfa-\u82f9\u679c\u516c\u53f8(Apple)\u4eca\u5929\u5ba3\u5e03\uff0c\u4ece6\u670822\u65e5\u5f00\u59cb\uff0c\u5b83\u5c06\u5728\u82f9\u679c\u5f00\u53d1\u8005\u5e94\u7528\u7a0b\u5e8f\u548c\u82f9\u679c\u5f00\u53d1\u8005\u7f51\u7ad9\u4e0a\u4e3e\u529e\u4e00\u5e74\u4e00\u5ea6\u7684\u5168\u7403\u5f00\u53d1\u8005\u5927\u4f1a(Worldwide Developers Conference)\uff0c\u5bf9\u6240\u6709\u5f00\u53d1\u8005\u514d\u8d39\u5f00\u653e\u3002\u8be5\u516c\u53f8\u8fd8\u5ba3\u5e03\u4e86SWIFT\u5b66\u751f\u6311\u6218\u8d5b\uff0c\u5b66\u751f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u81ea\u5df1\u7684SWIFT\u6e38\u4e50\u573a\u6765\u5c55\u793a\u4ed6\u4eec\u5bf9\u7f16\u7a0b\u7684\u70ed\u7231\u3002\u73b0\u5728\uff0cWWDC20\u5df2\u7ecf\u8fdb\u5165\u7b2c31\u4e2a\u5e74\u5934\uff0c\u5168\u7403\u6570\u767e\u4e07\u5bcc\u6709\u521b\u610f\u548c\u521b\u65b0\u7684\u5f00\u53d1\u4eba\u5458\u5c06\u6709\u673a\u4f1a\u65e9\u65e5\u63a5\u89e6iOS\u3001iPadOS\u3001MacOS\u3001TVOS\u548cWatchOS\u7684\u672a\u6765\uff0c\u5e76\u5411\u82f9\u679c\u5de5\u7a0b\u5e08\u5b66\u4e60\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6b63\u5728\u52aa\u529b\u6784\u5efa\u4e30\u5bcc\u5168\u7403\u82f9\u679c\u5ba2\u6237\u751f\u6d3b\u7684\u5e94\u7528\u7a0b\u5e8f\u4f53\u9a8c\u3002\n\u82f9\u679c\u8d1f\u8d23\u5168\u7403\u5e02\u573a\u8425\u9500\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u83f2\u5c14\u00b7\u5e2d\u52d2(Phil Schiller)\u8868\u793a\uff1a\u201cWWDC20\u5c06\u662f\u6211\u4eec\u8fc4\u4eca\u89c4\u6a21\u6700\u5927\u7684\u4e00\u6b21\uff0c\u5b83\u5c06\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u5c06\u6211\u4eec\u8d85\u8fc72300\u4e07\u7684\u5168\u7403\u5f00\u53d1\u8005\u793e\u533a\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u57286\u6708\u7684\u4e00\u5468\u65f6\u95f4\u91cc\u4e86\u89e3\u82f9\u679c\u5e73\u53f0\u7684\u672a\u6765\uff0c\u201d\u82f9\u679c\u8d1f\u8d23\u5168\u7403\u8425\u9500\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u83f2\u5c14\u00b7\u5e2d\u52d2(Phil Schiller)\u8bf4\u3002\u6211\u4eec\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u57286\u6708\u4efd\u4e0e\u5168\u7403\u5f00\u53d1\u8005\u793e\u533a\u5728\u7ebf\u4f1a\u9762\uff0c\u4e0e\u4ed6\u4eec\u5206\u4eab\u6211\u4eec\u4e00\u76f4\u5728\u5f00\u53d1\u7684\u6240\u6709\u65b0\u5de5\u5177\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u521b\u5efa\u66f4\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u3002\u968f\u7740\u6211\u4eec\u8d8a\u6765\u8d8a\u63a5\u8fd1\u8fd9\u4e00\u6fc0\u52a8\u4eba\u5fc3\u7684\u6d3b\u52a8\uff0c\u6211\u4eec\u671f\u5f85\u7740\u4e0e\u5927\u5bb6\u5206\u4eab\u6709\u5173WWDC20\u7684\u66f4\u591a\u7ec6\u8282\u3002\u201c\u3002\n\u82f9\u679c\u8d1f\u8d23\u8f6f\u4ef6\u5de5\u7a0b\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u514b\u96f7\u683c\u00b7\u8d39\u5fb7\u91cc\u5409(Craig Federighi)\u8bf4\uff1a\u201c\u5b66\u751f\u662f\u82f9\u679c\u5f00\u53d1\u8005\u793e\u533a\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\uff0c\u53bb\u5e74WWDC\u5438\u5f15\u4e86\u6765\u81ea37\u4e2a\u4e0d\u540c\u56fd\u5bb6\u7684350\u591a\u540d\u5b66\u751f\u5f00\u53d1\u8005\u53c2\u52a0\u3002\u201d\u5728\u6211\u4eec\u671f\u5f85WWDC20\u7684\u540c\u65f6\uff0c\u867d\u7136\u6211\u4eec\u4eca\u5e74\u7684\u805a\u4f1a\u5c06\u662f\u865a\u62df\u7684\uff0c\u4f46\u6211\u4eec\u60f3\u8981\u8868\u5f70\u548c\u5e86\u795d\u6211\u4eec\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u5e74\u8f7b\u5f00\u53d1\u4eba\u5458\u7684\u521b\u9020\u6027\u8d21\u732e\u3002\u6211\u4eec\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u770b\u5230\u8fd9\u4f4d\u4e0b\u4e00\u4ee3\u521b\u65b0\u601d\u60f3\u5bb6\u901a\u8fc7\u65af\u5a01\u592b\u7279\u5b66\u751f\u6311\u6218\u8d5b\u5c06\u4ed6\u4eec\u7684\u60f3\u6cd5\u53d8\u6210\u73b0\u5b9e\u3002\u201c\u3002\nSWIFT\u6e38\u4e50\u573a\u662f\u4e00\u6b3e\u9002\u7528\u4e8eiPad\u548cMac\u7684\u9769\u547d\u6027\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4f7f\u5b66\u4e60SWIFT\u7f16\u7a0b\u8bed\u8a00\u53d8\u5f97\u4e92\u52a8\u548c\u6709\u8da3\u3002\u73b0\u5728\u5230\u665a\u4e0a11\u70b959\u5206\u3002PDT\u65f6\u95f45\u670817\u65e5\uff0c\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u5b66\u751f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u5728SWIFT\u64cd\u573a\u521b\u5efa\u53ef\u57283\u5206\u949f\u5185\u4f53\u9a8c\u7684\u4e92\u52a8\u573a\u666f\uff0c\u63d0\u4ea4SWIFT\u5b66\u751f\u6311\u6218\u8d5b\u3002\u83b7\u5956\u8005\u5c06\u83b7\u5f97\u4e00\u4ef6\u72ec\u5bb6WWDC20\u5939\u514b\u548c\u522b\u9488\u5957\u88c5\u3002\u6b32\u83b7\u77e5\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u7f51\u7ad9\uff1adeveloper.apple.com/wwdc20/swift-student-challenge.\u3002\n\u9f13\u52b1\u5f00\u53d1\u4eba\u5458\u4e0b\u8f7dApple Developer\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u90a3\u91cc\u5c06\u57286\u6708\u4efd\u5171\u4eab\u5176\u4ed6WWDC20\u8ba1\u5212\u4fe1\u606f-\u5305\u62ec\u4e3b\u65e8\u548c\u5e73\u53f0\u56fd\u60c5\u54a8\u6587\u7ec6\u8282\u3001\u4f1a\u8bae\u548c\u5b9e\u9a8c\u5ba4\u65f6\u95f4\u8868\u7b49\u3002\u4fe1\u606f\u8fd8\u5c06\u5728\u82f9\u679c\u5f00\u53d1\u8005\u7f51\u7ad9\u548c\u7535\u5b50\u90ae\u4ef6\u4e0a\u63d0\u4f9b\u3002\nApp Store\u76ee\u524d\u5728175\u4e2a\u56fd\u5bb6\u548c\u5730\u533a\uff0c\u662f\u4e16\u754c\u4e0a\u6700\u5b89\u5168\u3001\u6700\u5177\u6d3b\u529b\u7684\u5e94\u7528\u7a0b\u5e8f\u5e02\u573a\uff0c\u6bcf\u5468\u6709\u8d85\u8fc75\u4ebf\u4eba\u8bbf\u95ee\u3002\u5b83\u662f\u7528\u6237\u53d1\u73b0\u65b0\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u573a\u6240\uff0c\u5141\u8bb8\u5404\u79cd\u89c4\u6a21\u7684\u5f00\u53d1\u8005\u5c06\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5206\u53d1\u7ed9\u4e16\u754c\u5404\u5730\u7684\u5ba2\u6237\u3002App Store\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u8bb8\u591a\u5efa\u7acb\u4e1a\u52a1\u7684\u65b9\u5f0f\uff0c\u81ea2008\u5e74\u63a8\u51fa\u4ee5\u6765\uff0c\u5f00\u53d1\u8005\u4e00\u76f4\u5728\u521b\u5efa\u5f71\u54cd\u6587\u5316\u548c\u6539\u53d8\u751f\u6d3b\u7684\u521b\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002\n\u82f9\u679c\u57281984\u5e74\u63a8\u51fa\u4e86\u9ea6\u91d1\u5854\uff0c\u7ed9\u4e2a\u4eba\u6280\u672f\u5e26\u6765\u4e86\u9769\u547d\u6027\u7684\u53d8\u5316\u3002\u4eca\u5929\uff0c\u82f9\u679c\u51ed\u501fiPhone\u3001iPad\u3001Mac\u3001Apple Watch\u548cApple TV\u5f15\u9886\u4e16\u754c\u521b\u65b0\u3002\u82f9\u679c\u7684\u4e94\u4e2a\u8f6f\u4ef6\u5e73\u53f0-iOS\u3001iPadOS\u3001MacOS\u3001WatchOS\u548cTVOS-\u5728\u6240\u6709\u82f9\u679c\u8bbe\u5907\u4e0a\u63d0\u4f9b\u65e0\u7f1d\u4f53\u9a8c\uff0c\u5e76\u4e3a\u4eba\u4eec\u63d0\u4f9b\u7a81\u7834\u6027\u7684\u670d\u52a1\uff0c\u5305\u62ecApp Store\u3001Apple Music\u3001Apple Pay\u548ciCloud\u3002\u82f9\u679c\u516c\u53f8\u768410\u4e07\u591a\u540d\u5458\u5de5\u81f4\u529b\u4e8e\u5236\u9020\u5730\u7403\u4e0a\u6700\u597d\u7684\u4ea7\u54c1\uff0c\u5e76\u81f4\u529b\u4e8e\u8ba9\u4e16\u754c\u53d8\u5f97\u6bd4\u6211\u4eec\u53d1\u73b0\u7684\u66f4\u597d\u3002", "note_en": "Cupertino, California \u2014 Apple today announced it will host its annual Worldwide Developers Conference virtually, beginning June 22, in the  Apple Developer app and on the  Apple Developer website for free for all developers. The company also announced the Swift Student Challenge, an opportunity for student developers to showcase their love of coding by creating their own Swift playground. Now in its 31st year, WWDC20 will be an opportunity for millions of creative and innovative developers around the world to get early access to the future of iOS, iPadOS, macOS, tvOS, and watchOS, and to learn from Apple engineers as they work to build app experiences that enrich the lives of Apple customers around the globe.\n  \u201cWWDC20 will be our biggest yet, bringing together our global developer community of more than 23 million in an unprecedented way for a week in June to learn about the future of Apple platforms,\u201d said Phil Schiller, Apple\u2019s senior vice president of Worldwide Marketing. \u201cWe can\u2019t wait to meet online in June with the global developer community and share with them all of the new tools we\u2019ve been working on to help them create even more incredible apps and services. We look forward to sharing more details about WWDC20 with everyone as we get closer to this exciting event.\u201d\n  \u201cStudents are an integral part of the Apple developer community, and last year WWDC saw attendance from more than 350 student developers spanning 37 different countries,\u201d said Craig Federighi, Apple\u2019s senior vice president of Software Engineering. \u201cAs we look forward to WWDC20, although our gathering will be virtual this year, we want to recognize and celebrate the creative contributions of our young developers from around the world. We can\u2019t wait to see this next generation of innovative thinkers turn their ideas into a reality through the Swift Student Challenge.\u201d\n  Swift Playgrounds is a revolutionary app for iPad and Mac that makes learning the Swift programming language interactive and fun. Now through 11:59 p.m. PDT on May 17, student developers from all over the world can submit to the Swift Student Challenge by creating an interactive scene in a Swift playground that can be experienced within three minutes. Winners will receive an exclusive WWDC20 jacket and pin set. For more information, visit  developer.apple.com/wwdc20/swift-student-challenge.\n  Developers are encouraged to download the Apple Developer app where additional WWDC20 program information \u2014 including keynote and Platforms State of the Union details, session and lab schedules, and more \u2014 will be shared in June. Information will also be made available on the Apple Developer website and by email.\n  The App Store, now in 175 countries and regions, is the world\u2019s safest and most vibrant app marketplace, with more than half a billion people visiting each week. It is the best place for users to discover new apps and allows developers of all sizes to distribute their apps to customers around the world. The App Store features many ways for developers to build their businesses, and since its launch in 2008, developers have been creating innovative apps that influence culture and change lives.\n  Apple revolutionized personal technology with the introduction of the Macintosh in 1984. Today, Apple leads the world in innovation with iPhone, iPad, Mac, Apple Watch, and Apple TV. Apple\u2019s five software platforms \u2014 iOS, iPadOS, macOS, watchOS, and tvOS \u2014 provide seamless experiences across all Apple devices and empower people with breakthrough services including the App Store, Apple Music, Apple Pay, and iCloud. Apple\u2019s more than 100,000 employees are dedicated to making the best products on earth, and to leaving the world better than we found it.", "posttime": "2020-05-06 00:30:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,app,\u5f00\u53d1,apple,\u5168\u7403", "title": "\u82f9\u679c\u5c06\u4e8e6\u670822\u65e5\u5f00\u59cb\u4e3b\u529e\u865a\u62df\u5168\u7403\u5f00\u53d1\u8005\u5927\u4f1a", "title_en": "Apple to host virtual Worldwide Developers Conference beginning June 22", "transed": 1, "url": "https://www.apple.com/newsroom/2020/05/apple-to-host-virtual-worldwide-developers-conference-beginning-june-22/", "via": "", "real_tags": ["\u82f9\u679c", "app", "\u5f00\u53d1", "apple", "\u5168\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000784, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u7f16\u5199\u8334\u9999\uff0c\u5e76\u4e3a\u5b83\u7684\u7f16\u8bd1\u5668\u505a\u8d21\u732e\u3002\u7531\u4e8e\u5b83\u662f\u4e00\u79cd\u7f16\u8bd1Tolua\u7684\u8bed\u8a00\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u4e86\u89e3Lua\u3002\u672c\u6587\u5c06\u96c6\u4e2d\u8ba8\u8bbaLua(\u4e0d\u8fc7\u6211\u4f1a\u5728\u811a\u6ce8\u4e2d\u4e0d\u65f6\u63d0\u5230\u8334\u9999)\u3002\nLua\u662f\u4e00\u79cd\u6574\u6d01\u3001\u4f18\u96c5\u3001\u76f8\u5bf9\u7b80\u5355\u7684\u8bed\u8a00\u3002\u6211\u53d1\u73b0\u5b83\u7279\u522b\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5b83\u53ef\u4ee5\u5d4c\u5165\u5230\u5176\u4ed6\u7a0b\u5e8f\u4e2d\uff1b\u80fd\u591f\u627f\u8f7d\u591a\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u7f16\u7a0b\uff1b\u4ee5\u53ca\u5b83\u7684\u4e00\u4e2a\u5b9e\u73b0LuaJIT\u7684\u51fa\u8272\u6027\u80fd\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u5b83\u7ed9\u4eba\u7684\u611f\u89c9\u66f4\u50cf\u662f\u4e00\u4e2a\u66f4\u4f18\u96c5\u3001\u66f4\u6709\u8282\u5236\u7684JavaScript--\u5b83\u652f\u6301\u5c3e\u90e8\u8c03\u7528\u6d88\u9664[1]\u548c\u534f\u7a0b\uff0c\u5b83\u6ca1\u6709\u4ee4\u4eba\u56f0\u60d1\u7684var/let\u533a\u5206(\u5c3d\u7ba1\u5b83\u5728Lua5.4\u4e4b\u524d\u6ca1\u6709\u50cfconst\u8fd9\u6837\u7684\u7279\u6027)\uff0c\u5e76\u4e14\u5b83\u6ca1\u6709\u5c06\u7c7b\u8bed\u6cd5\u4f18\u5148\u4e8e\u5176\u4ed6\u98ce\u683c\u7684\u7f16\u7a0b(\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u53ef\u4ee5\u5728Lua\u4e2d\u4f7f\u7528\u5143\u8868\u8fdb\u884c\uff0c\u4f46\u662f\u6ca1\u6709\u50cf\u5728JS\u4e2d\u90a3\u6837\u7ed9\u51fa\u7279\u6b8a\u7684\u8bed\u6cd5)\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u5b83\u6709\u4e00\u4e9b\u65e0\u7591\u662f\u53e4\u602a\u7684\u65b9\u9762-\u6570\u7ec4\u548c\u5b57\u5178\u88ab\u7edf\u4e00\u5230\u8868\u4e2d\uff0c\u5176\u6574\u6570\u7d22\u5f15\u4ece1\u5f00\u59cb\uff1b\u6807\u51c6\u5e93\u975e\u5e38\u5c0f\uff0c\u8fd9\u662f\u5bf9\u5b83\u7684\u9002\u7528\u6027\u7684\u8ba4\u53ef\uff1b\u5b83\u50cfJavaScript\u4e00\u6837\uff0c\u4f7f\u5f97\u53d8\u91cf\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5168\u5c40\u7684\uff0c\u53ea\u6709\u5728\u60a8\u8981\u6c42\u7684\u65f6\u5019\u624d\u662f\u5c40\u90e8\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\u3002\u5947\u602a\u7684\u662f\uff0c\u5b83\u8fd8\u652f\u6301\u4e00\u79cd\u975e\u5e38\u4e0d\u5e38\u89c1\u7684\u8bed\u8a00\u7279\u6027\uff1a\u591a\u4e2a\u8fd4\u56de\u503c(\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u201c\u500d\u6570\u201d)\u3002\u8fd9\u662f\u6211\u4eec\u4eca\u5929\u8981\u8be6\u7ec6\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u4e2a\u8bdd\u9898\u3002\n\u7531\u4e8eLua\u662f\u4e00\u79cd\u52a8\u6001\u8bed\u8a00(\u4f8b\u5982\uff0c\u4e0eGo\u76f8\u53cd)\uff0c\u56e0\u6b64\u4ee5\u4e00\u79cd\u76f8\u5f53\u5947\u602a\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u591a\u4e2aurn\u3002\u8fd9\u5e76\u6ca1\u6709\u50cf\u6211\u5e0c\u671b\u7684\u90a3\u6837\u5728Lua\u7684\u6587\u6863\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u63a2\u8ba8\uff0c\u6240\u4ee5\u6211\u60f3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u7ad9\u5f0f\u8d44\u6e90\uff0c\u89e3\u91ca\u6211\u6240\u80fd\u60f3\u5230\u7684\u5173\u4e8e\u8be5\u8bed\u8a00\u8fd9\u4e00\u7279\u6b8a\u90e8\u5206\u7684\u6240\u6709\u5185\u5bb9\u3002\n\u5267\u900f\uff1a\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u60a8\u5173\u5fc3\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e58\u6570\u5c06\u4f1a\u53d8\u5f97\u5e73\u6de1\u65e0\u5947\u3002\u5b83\u4eec\u4f7f\u7528\u8d77\u6765\u5f88\u7b28\u62d9\uff0c\u6709\u5f88\u591a\u95ee\u9898\uff0c\u4f1a\u5e26\u6765\u7ef4\u62a4\u98ce\u9669\uff0c\u800c\u4e14(\u636e\u6211\u6240\u77e5)\u5b83\u4eec\u7684\u6027\u80fd\u5e76\u4e0d\u6bd4\u5b83\u4eec\u7684\u4e3b\u8981\u66ff\u4ee3\u4ea7\u54c1--\u8868\u597d\u591a\u5c11\u3002\u8fd9\u4e0d\u662f\u4e00\u7bc7\u975e\u5e38\u6709\u7528\u7684\u6587\u7ae0\uff0c\u9664\u975e\u60a8\u9700\u8981\u4e86\u89e3Lua\u884c\u4e3a\u7684\u7ec6\u8282\u3002\n\u5728Lua\u4e2d\u6709\u4e09\u79cd\u4e3b\u8981\u65b9\u5f0f\u6765\u8868\u793a\u591a\u503c\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u7528\u9014\u3002\u4e0b\u9762\u7684\u6bcf\u4e2a\u4ee3\u7801\u7247\u6bb5\u90fd\u4f1a\u751f\u6210\u76f8\u540c\u7684\u591a\u503c\uff1a\n\u591a\u503c\u6587\u5b57\uff1a1\u30012\u30013\u3002(\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u5305\u62ec\u50cf{1\uff0c2\uff0c3}\u8fd9\u6837\u7684\u53ef\u7f16\u8f91\u6587\u5b57)\u3002\n\u51fd\u6570\u4e2d\u7684vararg\uff0c.\uff1a\u5c40\u90e8\u51fd\u6570x(.)\u3002\u56de\u6765..\u3002\u7ed3\u675fx(1\uff0c2\uff0c3)\n\u672c\u5730\u51fd\u6570Two_Values()return&#34\uff1bFirst&#34\uff1b\uff0c&#34\uff1bSecond&#34\uff1bEnd local tab={Two_Values()}print(tab[1]\uff0ctab[2])--print&#34\uff1bfirst Second&#34\uff1b\n\u5c40\u90e8\u51fd\u6570multival_first(x\uff0c.)\u3002RETURN x END PRINT(MULVAL_FIRST(1\uff0c2\uff0c3))--PRINTS&#34\uff1b1&#34\uff1bLOCAL\u51fd\u6570MULVAL_REST(x\uff0c.)\u3002\u56de\u6765..\u3002End Print(multival_rest(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3&#34\uff1bPrint(SELECT(2\uff0c1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3&#34\uff1b\u4e0e\u6700\u540e\u4e00\u884c\u76f8\u540c\u3002\n\u4e3a\u4e86\u4ece\u591a\u503c\u7684\u672b\u5c3e\u83b7\u5f97\u503c\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\u3002\u7b2c\u4e00\u4e2a\u662f\u9012\u5f52\uff1a\n\u5c40\u90e8\u51fd\u6570INCRYMER_EACH_VALUE(FIRST\uff0c.)\u3002\u5982\u679cFIRST\uff0c\u5219\u8fd4\u56deFIRST+1\uff0cINCREMER_EACH_VALUE(.)\u3002End End Print(INCREMER_EACH_VALUE(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3 4&#34\uff1b\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u5c06\u591a\u4e2a\u503c\u6253\u5305\u5230\u4e00\u4e2a\u8868\u4e2d\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4e0b\u9762\u6f14\u793a\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff1a\n--1.\u53ef\u4ee5\u5c06Multival\u76f4\u63a5\u6253\u5305\u5230\u8868\u6587\u672c\u51fd\u6570pack_multival(.)\u3002return{.}end--Lua\u5bf9\u8868\u7684\u9ed8\u8ba4\u6253\u5370\u4ec5\u663e\u793a\u6807\u8bc6\uff1b\u6211\u4eec\u5c06\u6539\u4e3a--\u6253\u5370\u957f\u5ea6\u3002print(#pack_multival(1\uff0c2\uff0c3))--prints&#34\uff1b3&#34\uff1b--2.\u60a8\u53ef\u4ee5\u4f7f\u7528table.pack\uff0c\u5b83\u5185\u7f6e\u4e8eLua 5.2\u548c\u66f4\u9ad8\u7248\u672c\u7684local tab=table.pack(1\uff0c2\uff0c3)print(#tab)--prints&#34\uff1b3&#34\uff1b--table.pack\u8fd8\u4f1a\u5728\u5b83\u8fd4\u56de\u7684\u8868\u4e0a\u8bbe\u7f6e&#34\uff1bn&#34\uff1b\u5b57\u6bb5\u3002\u8fd9\u6bd4\u4f7f\u7528#tab\u66f4\u6709\u6548\uff0c\u540e\u8005\u5728\u8868\u4e2d\u8fed\u4ee3\u3002\u6253\u5370(\u9009\u9879\u5361\u3002n)--\u6253\u5370&#34\uff1b3&#34\uff1b\n\u5f53\u60a8\u5f00\u59cb\u4f7f\u7528\u591a\u4e2a\u6570\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\u53ea\u8981\u60a8\u6b63\u5728\u4f7f\u7528\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u7684List\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u5217\u8868\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u6765\u8868\u793a\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u503c\u4f3c\u4e4e\u5e94\u8be5\u662f\u4e0d\u9519\u7684\u548c\u53ef\u9884\u6d4b\u7684\u3002\n\u5982\u679c\u60a8\u5c1d\u8bd5\u4f7f\u7528\u591a\u503c\u5305\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u6765\u81ea\u4e8e\u671f\u671b\u5b83\u4eec\u4ee5\u4e0e\u5176\u4f59Luados\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u7b80\u800c\u8a00\u4e4b\uff0cLua\u7684\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u6240\u8c13\u7684\u8bcd\u5178\u4f5c\u7528\u57df\u3002\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u662f\u60a8\u5728\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u770b\u5230\u7684\u5305\u542b\u53d8\u91cf\u5b9a\u4e49\u7684\u4ee3\u7801\u5757\u3002\u5176\u4ed6\u51fd\u6570\u4ee5\u4ec0\u4e48\u987a\u5e8f\u8c03\u7528\uff0c\u6216\u8005\u5b83\u4eec\u662f\u5426\u88ab\u8c03\u7528\u90fd\u65e0\u5173\u7d27\u8981-\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u53ea\u9700\u67e5\u770b\u4ee3\u7801\u7ed3\u6784\u5373\u53ef\u786e\u5b9a\u3002\u8fd9\u4e0e\u52a8\u6001\u4f5c\u7528\u57df\u76f8\u53cd\uff0c\u5728\u52a8\u6001\u4f5c\u7528\u57df\u4e2d\uff0c\u5728\u7ed9\u5b9a\u70b9\u5b9a\u4e49\u7684\u53d8\u91cf\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u672c\u8eab\u7684\u8fd0\u884c\u65f6\u3002Lua\u7684\u5168\u5c40\u53d8\u91cf\u6709\u6548\u5730\u4f7f\u7528\u4e86\u52a8\u6001\u4f5c\u7528\u57df\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5f15\u7528\u591a\u503c\u53ea\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u4e3a\u5176\u8fd4\u56de\u503c\u8c03\u7528\u51fd\u6570\u3001\u6309\u5b57\u9762\u610f\u601d\u63d2\u5165\u7528\u9017\u53f7\u5206\u9694\u7684\u591a\u503c\u6216\u4f7f\u7528vararg\u7b26\u53f7.\u3002\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u6700\u540e\u4e00\u4e2a\u6848\u5b50\u3002\n\u5f53\u4f60\u4f7f\u7528..\u3002\u5728\u51fd\u6570\u7b7e\u540d\u4e2d\uff0c\u5fc5\u987b\u653e\u5728\u53c2\u6570\u5217\u8868\u7684\u672b\u5c3e\u3002(\u8fd9\u5c31\u662f\u963b\u6b62\u60a8-\u81f3\u5c11\u5728\u8bed\u6cd5\u4e0a-\u8bbf\u95ee.\u7684\u672b\u5c3e\u7684\u539f\u56e0\u3002\u800c\u65e0\u9700\u5c06\u6574\u4e2a\u5185\u5bb9\u8d4b\u7ed9\u5355\u4e2a\u53d8\u91cf\u3001\u9012\u5f52\u904d\u5386\u5b83\u6216\u5c06\u5176\u6253\u5305\u5230\u8868\u4e2d\u3002)\u3002\n\u4f60\u4e5f\u4e0d\u80fd\u628a\u6574\u4e2a\u4e1c\u897f\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u4e3a\u8d4b\u503c.\u3002\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\u610f\u5473\u7740\u89e3\u5305\u591a\u503c\u5e76\u5c06\u7b2c\u4e00\u4e2a\u503c\u8d4b\u7ed9\u53d8\u91cf-\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a\u503c\uff0c\u5219\u5c06\u5176\u8d4b\u7ed9\u591a\u4e2a\u503c\u3002\u4f8b\u5982\uff1a\n--\u5c06vararg\u8d4b\u7ed9\u5355\u4e2a\u53d8\u91cf\u4f1a\u5c06\u8be5\u53d8\u91cf--\u8d4b\u7ed9vararg\u7684_first value_\u3002\u5c40\u90e8\u51fd\u6570try_to_assign_vararg(.)\u3002\u672c\u5730x=.\u3002\u8fd4\u56dex\u7ed3\u675f\u6253\u5370(try_to_assign_vararg(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b1&#34\uff1b\n\u7136\u800c\uff0c\u5173\u4e8evararg\u8fd8\u6709\u4e00\u6761\u989d\u5916\u7684\u89c4\u5219\uff0c\u8fd9\u4e0eLua\u7684\u5176\u4f59\u90e8\u5206\u7684\u884c\u4e3a\u975e\u5e38\u4e0d\u540c\u3002\u60a8\u53ea\u80fd\u5728\u5b9a\u4e49vararg\u7684\u51fd\u6570\u4e2d\u4f7f\u7528vararg\u3002\u4f8b\u5982\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u60a8\u5c06vararg\u4fdd\u5b58\u5230\u95ed\u5305\u4e2d\uff1a\n\u65e0\u6cd5\u8fd0\u884c\uff0c\u5e76\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a\u65e0\u6cd5\u5728\u9760\u8fd1&#39\uff1b.&#39\uff1b\u7684vararg\u51fd\u6570\u5916\u90e8\u4f7f\u7528&#39\uff1b.&#39\uff1b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u4f60\u53ef\u4ee5\u4f7f\u7528..\u3002\u5728\u4e24\u4e2a\u5d4c\u5957\u51fd\u6570\u4e2d\uff0c\u6bcf\u4e2a\u51fd\u6570.\u3002\u53ea\u80fd\u5f15\u7528\u5f53\u524d\u8fd0\u884c\u7684\u51fd\u6570\u7684varargof\u3002\u4f60\u4e0d\u80fd\u5728\u95ed\u5305\u4e2d\u6355\u83b7.\u6765\u6301\u4e45\u5316\u5b83\u3002\u5b9e\u9645\u4e0a\uff0c..\u3002\u4e0d\u662f\u5b57\u5178\u4f5c\u7528\u57df\u7684\uff0c\u800c\u662f\u4e00\u4e2a\u52a8\u6001\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff0c\u5177\u6709\u67d0\u4e9b\u989d\u5916\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u4e0d\u80fd\u91cd\u65b0\u8d4b\u503c\uff0c\u5e76\u4e14\u4e0d\u80fd\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5916\u90e8\u4f7f\u7528\u3002\n\u53e6\u4e00\u79cd\u8bf4\u6cd5\u662f\uff0cLua\u7684\u4e58\u6570\u662f\u201c\u4e8c\u7b49\u201d\u503c\u3002\u60a8\u53ef\u80fd\u719f\u6089\u6709\u7b2c\u4e8c\u7c7b\u51fd\u6570\u7684\u8bed\u8a00\uff0c\u7b2c\u4e8c\u7c7b\u51fd\u6570\u4e0d\u80fd\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u4e0d\u80fd\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u8fd9\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u4f8b\u5916\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06vararg\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u4e0d\u80fd\u5c06\u5176\u4fdd\u5b58\u5728\u53d8\u91cf\u4e2d\uff0c\u4e0d\u80fd\u5c06\u5176\u4fdd\u5b58\u5728\u95ed\u5305\u4e2d\uff0c\u4e5f\u4e0d\u80fd\u4ee5\u7279\u5b9a\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5c06\u4e58\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u5e76\u5c06\u5176\u6253\u5305\u5230\u8868\u4e2d\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5173\u4e8e\u8fd9\u4e00\u70b9\u6709\u4e00\u4e2a\u6211\u4eec\u5c1a\u672a\u514b\u670d\u7684\u4e3b\u8981\u95ee\u9898\u3002\u8bf7\u770b\u4ee5\u4e0b\u793a\u4f8b\uff1a\n\u5c40\u90e8\u51fd\u6570Returns_Three_Values()return 1\uff0c2\uff0c3 End Print(Returns_Three_Values())--Prints&#34\uff1b1 2 3&#34\uff1bprint(#{Returns_Three_Values()})--Prints&#34\uff1b3&#34\uff1bPrint(Returns_Three_Values()\uff0c4\uff0c5)--Prints&#34\uff1b1 4 5&#34\uff1bPrint(#{Returns_Three_Values()\uff0c4 5})--Prints&#34\uff1b3\u548c#34\uff1b\n\u6b63\u5982\u7b2c\u4e8c\u5bf9\u6253\u5370\u8868\u8fbe\u5f0f\u6240\u6f14\u793a\u7684\u90a3\u6837\uff0c\u5982\u679c\u51fd\u6570\u8c03\u7528\u662f\u591a\u503c\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u5219\u5b83\u53ea\u80fd\u5c06\u591a\u4e2a\u503c\u8fd4\u56de\u5230\u591a\u503c\u4e2d\u3002\u5728\u591a\u53d8\u91cf\u4e2d\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u503c(\u5373\u4f7f\u4e3a\u7a7a)\u8c03\u7528\u51fd\u6570\u540e\uff0c\u5c06\u5728\u7b2c\u4e00\u9879\u622a\u65ad\u5176\u8fd4\u56de\u503c\u3002\nLua\u8f83\u597d\u7684\u5c5e\u6027\u4e4b\u4e00\u662f\u5728\u8868\u4e2d\u65e0\u6cd5\u533a\u5206\u8bbe\u7f6e\u4e3anil\u7684\u952e\u548c\u4e0d\u5b58\u5728\u7684\u952e\u3002\u4f8b\u5982\uff0c\u5728Javascript\u4e2d\uff0c\u60a8\u65e2\u53ef\u4ee5\u4f7f\u7528obj.x=unfinded\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3aunfinded\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528delete obj.x\u5c06\u5176\u4ece\u5bf9\u8c61\u4e2d\u5b9e\u9645\u5220\u9664\u3002(\u8fd8\u6709obj.x=null\uff0c\u4f46\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u5b83\u3002)\u5728Lua\u4e2d\uff0c\u53ea\u6709tab.x=nil\uff0c\u65e0\u6cd5\u533a\u5206\u8bbe\u7f6e\u4e3anil\u7684\u5c5e\u6027\u548c\u4ece\u672a\u8bbe\u7f6e\u7684\u5c5e\u6027\u3002\nlocal y={nil\uff0cnil\uff0cnil}print(#y)--\u5728\u8868\u683c\u672b\u5c3e\u6253\u5370&#34\uff1b0&#34\uff1b-nils\u4e0e\u672c\u5730\u51fd\u6570multival_length(.)\u65e0\u5173\u3002\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u7ed3\u675f\u6253\u5370(multival_length(table.unpack(Y)--\u6253\u5370&#34\uff1b0&#34\uff1bprint(multival_length(nil\uff0cnil\uff0cnil))--\u6253\u5370&#34\uff1b3&#34\uff1b\u3002\u4ec0\u4e48\u9b3c\u4e1c\u897f\uff1f\n\u5982\u672c\u4f8b\u6240\u793a\uff0c\u500d\u589e\u64cd\u4f5c\u4f1a\u5c06\u8be5\u826f\u597d\u5c5e\u6027\u629b\u51fa\u7a97\u53e3\u3002\u6211\u53ea\u60f3\u8bf4\u6e05\u695a\uff1a\n\u5728Lua\u4e2d\uff0cmultival_length(nil\uff0cnil)\u548cmultival_length()\u6709\u4e00\u4e2a\u533a\u522b\u3002\u8fd9\u79cd\u533a\u522b\u662f\u901a\u8fc7SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u8fdb\u884c\u7684\u3002\n\u4e0e\u8fd4\u56de\u96f6\u503c\u7684\u51fd\u6570(\u800c\u4e0d\u662fnil)\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8fd9\u4f1a\u53d8\u5f97\u66f4\u52a0\u4ee4\u4eba\u56f0\u60d1\uff1a\nPrint(SELECT(&#34\uff1b#&#34\uff1b\uff0cPrint(&#34\uff1ba&#34\uff1b)\uff0cPrint(&#34\uff1bb&#34\uff1b)\uff0cPrint(&#34\uff1bc&#34\uff1b)--\u9996\u5148\u5c06&#34\uff1ba&#34\uff1b\u3001&#34\uff1bb&#34\uff1b\u548c&#34\uff1bc&#34\uff1b\u6253\u5370\u5230\u5404\u81ea\u7684\u884c\u4e0a\uff0c\u7136\u540e\u6253\u5370&#34\uff1b2&#34\uff1b\u3002\u7b49\u7b49\uff0c\u4ec0\u4e48\uff1f\n\u6b63\u5982\u60a8\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u8fd4\u56de\u96f6\u503c\u7684\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u591a\u503c\u3002\u5982\u679c\u60a8\u5728\u672b\u5c3e\u8c03\u7528\u5b83\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u5728\u591a\u9879\u5f0f\u7684\u672b\u5c3e\u6dfb\u52a0\u4efb\u4f55\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u5982\u679c\u5bf9\u96f6\u8fd4\u56de\u503c\u51fd\u6570\u7684\u8c03\u7528\u51fa\u73b0\u5728\u591a\u503c\u7ed3\u675f\u4e4b\u524d\uff0c\u5219\u4f1a\u5bfc\u81f4\u5728\u591a\u503c\u4e2d\u63d2\u5165nil\u6765\u4ee3\u66ff\u5176\u96f6\u8fd4\u56de\u503c\u3002\u56e0\u6b64\uff0cLua\u6ca1\u6709\u5c06\u7531\u6240\u6709\u4e09\u4e2aprint\u8c03\u7528\u7ec4\u6210\u7684multival\u6298\u53e0\u6210\u5355\u4e2a\u96f6\u957f\u5ea6\u7684multival\uff0c\u800c\u662f\u6298\u53e0\u4e86\u6700\u540e\u4e00\u4e2aprint\u8c03\u7528\uff0c\u4f46\u5c06\u53e6\u5916\u4e24\u4e2a\u8c03\u7528\u53d8\u4e3a\u7a7a\u3002\u8fd9\u5e76\u4e0d\u9002\u7528\u4e8e\u8868\uff0c\u56e0\u4e3a\u4e0e\u4e58\u6570\u4e0d\u540c\u7684\u662f\uff0c\u8868\u4e2d\u7684NILS\u5b9e\u9645\u4e0a\u7b49\u540c\u4e8e\u7f3a\u5c11\u503c\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4e00\u5207\u4f3c\u4e4e\u90fd\u4e0d\u5c5e\u4e8eLua\u3002\u4e0d\u5e26SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u5f62\u5f0f\uff0c\u5219\u65e0\u6cd5\u4ece\u591a\u503c\u672c\u8eab\u7684\u672b\u5c3e\u5224\u65ad\u591a\u503c\u672b\u5c3e\u4e3a\u96f6\u3002\u7136\u800c\uff0c\u8fd9\u4f7f\u5f97\u67d0\u4e9b\u62bd\u8c61\u66f4\u5bb9\u6613\u521b\u5efa\u3002\n\u4e00\u79cd\u503c\u5f97\u6ce8\u610f\u7684\u60c5\u51b5\u662f\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u5728\u5305\u88c5\u8fd4\u56de\u4e58\u503c\u7684\u51fd\u6570\u65f6\u53d8\u5f97\u7279\u522b\u6709\u7528\u3002\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u8ba9\u60a8\u8f7b\u677e\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u7b80\u5355\u5730\u4fdd\u5b58\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u6216\u8005\u662f\u5426\u9700\u8981\u521b\u5efaatable\u6765\u4fdd\u5b58\u6240\u6709\u503c\u3002\n\u5f53\u7b2c\u4e00\u6b21\u67e5\u770bLua\u4e2d\u7684\u4e58\u6570\u65f6\uff0c\u51b3\u5fc3\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u9996\u5148\u503e\u5411\u4e8e\u5c06\u5b83\u4eec\u4e0e\u5c3e\u9012\u5f52\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u7075\u6d3b\u5730\u8868\u793a\u4e0d\u540c\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u8303\u56f4\uff1a\n\u5c40\u90e8\u51fd\u6570range1(acc\uff0cn)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u8fd4\u56deELELSE\u5982\u679cn==1\uff0c\u5219\u8fd4\u56deacc\uff0c\u5426\u5219\u8fd4\u56deacc\uff0crange1(acc+1\uff0cn-1)end end local function range(N)\u5982\u679cn&lt\uff1b1\uff0c\u5219error(&#34\uff1bn\u5fc5\u987b\u4e3a&gt\uff1b=1&#34\uff1b)end return range1(1\uff0cn)end print(range(3))--prints&#34\uff1b1 23&#34\uff1bprint(#{range(10)})--\u6253\u5370&#34\uff1b10&#34\uff1b\n\u8fd9\u4e2a\u5f88\u7ba1\u7528\uff01\u5f53\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u591a\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528range(N)\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u7b49\u6548\u8868\u65f6\uff0c\u53ef\u4ee5\u7528\u50cf{range(N)}\u8fd9\u6837\u7684\u5927\u62ec\u53f7\u5c06\u5b83\u62ec\u8d77\u6765\u3002\u8fd9\u5e94\u8be5\u53ef\u4ee5\u8ba9\u6211\u4eec\u907f\u514d\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\u989d\u5916\u7684\u8868\u3002\u7531\u4e8eLua\u5177\u6709\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u529f\u80fd\uff0c\u56e0\u6b64\u5bf9\u81ea\u8eab\u8fdb\u884c\u7684\u9012\u5f52\u8c03\u7528\u8303\u56f41\u6c38\u8fdc\u4e0d\u4f1a\u6253\u4e71\u5806\u6808\u3002\u5bf9\u5417\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u591a\u4e2a\u4eba\u6253\u7834\u4e86\u5c3e\u90e8\u547c\u53eb\u6d88\u9664\u3002\u5982\u679c\u60a8\u91cd\u65b0\u8fd4\u56de\u591a\u4e2a\u503c\uff0cLua\u9700\u8981\u6536\u96c6\u6240\u6709\u8fd9\u4e9b\u503c\uff0c\u7136\u540e\u624d\u80fd\u5b9e\u9645\u5f00\u59cb\u8fd4\u56de\u5b83\u4eec\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u4e22\u5f03\u9012\u5f52\u51fd\u6570\u7684\u5806\u6808\u6846\u67b6\u3002\u8fd9\u4e0e\u5728range1\u5185\u8fd4\u56de{range1(acc\uff0cn)}\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c\u3002\u90a3\u4e2a\u6848\u5b50\u663e\u7136\u4e0d\u662f\u5c3e\u5df4\u3002\u6b63\u662f\u4e58\u6570\u7684\u7279\u6b8a\u8bed\u6cd5\u4f7f\u8fd9\u4e00\u70b9\u4ee4\u4eba\u56f0\u60d1\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u50cf\u662f\u88ab\u4efb\u4f55\u4e1c\u897f\u201c\u5305\u56f4\u201d\u7684\u4eba\u9020\u5c3e\u90e8\u8c03\u7528\u3002[2]\u3002\n\u4e3a\u4e86\u907f\u514d\u5806\u6808\u6ea2\u51fa\uff0c\u6b63\u786e\u5730\u9012\u5f52\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8868\u6765\u5b9e\u73b0Range\uff1a\n\u672c\u5730\u51fd\u6570\u8303\u56f41(tab\uff0cacc\uff0cn)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u8fd4\u56detab\u5426\u5219tab[acc]=acc\u8fd4\u56de\u8303\u56f41(tab\uff0cacc+1\uff0cn-1)END END\u672c\u5730\u51fd\u6570\u8303\u56f4(N)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u9519\u8bef(&#34\uff1bn\u5fc5\u987b\u662f&&gt;\uff1b=1&#34\uff1b)END\u8fd4\u56de\u8303\u56f41({}\uff0c1\uff0cn)END PRINT(#RANGE(1000x1000))--PRINTS&#34\uff1b1000000&#34\uff1b\n\u5b83\u53ef\u80fd\u4e0d\u90a3\u4e48\u4f18\u96c5\uff0c\u6df7\u5408\u4e86\u9012\u5f52\u548c\u7a81\u53d8\uff0c\u4f46\u662f\u5b83\u7684\u8fd0\u884c\u65f6\u7279\u6027\u8981\u597d\u5f97\u591a\u3002\n\u9012\u5f52\u5230\u592a\u591a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5806\u6808\u5931\u6548\uff0c\u8fd9\u662f\u6709\u9053\u7406\u7684\u3002\u4e0d\u592a\u76f4\u89c2\u7684\u662f\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u9012\u5f52\u7684\u60c5\u51b5\u4e0b\uff0c\u4e58\u6cd5\u8fd0\u7b97\u7684\u5927\u5c0f\u4e5f\u6709\u4e00\u4e2a\u4e0a\u9650\u3002\u8bf7\u8003\u8651\u4f7f\u7528\u6211\u4eec\u4e0a\u9762\u5b9a\u4e49\u7684\u8303\u56f4\u51fd\u6570\uff1a\n\u592a\u68d2\u4e86\uff01\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8bd5\u7740\u5c06\u5176\u89e3\u5305\u6210\u4e00\u4e2a\u591a\u91cd\u6570\u3002\u4e0d\u6d89\u53ca\u9012\u5f52\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u5bf9\u5417\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e58\u6cd5\u53ea\u662f\u5bf9\u5b83\u4eec\u53ef\u4ee5\u5305\u542b\u7684\u503c\u7684\u6570\u91cf\u6709\u4e00\u4e2a\u4e0a\u9650\u3002\u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898--\u5982\u679c\u60a8\u9700\u8981\u5904\u7406\u4e00\u4e2a\u9879\u76ee\u5217\u8868\u800c\u4e0d\u7528\u62c5\u5fc3\u5b83\u6709\u591a\u5927\uff0c\u8bf7\u4f7f\u7528atable\uff0c\u800c\u4e0d\u662fmultival\u3002\nprint((function()return 1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c12\uff0c13\uff0c14\uff0c15\uff0c16\uff0c17\uff0c18\uff0c19\uff0c20\uff0c21\uff0c22\uff0c23\uff0c24\uff0c25\uff0c26\uff0c27\uff0c28\uff0c29\uff0c30\uff0c31\uff0c32\uff0c33\uff0c34\uff0c35\uff0c36\uff0c37\uff0c38\uff0c39\uff0c40\uff0c41\uff0c42\u300143\u300144\u300145\u300146\u300147\u300148\u300149\u300150\u300151\u300152\u300153\u300154\u300155\u300156\u300157\u300158\u300159\u300160\u300161\u300162\u300163\u300164\u300165\u300166\u300167\u300168\u300169\u300170\u300171\u300172\u300173\u300174\u300175\u300176\u300177\u300178\u300179\u300180\u300181\u300182\u300183\u300184\u300185\u300286\u300187\u300188\u300189\u300190\u300191\u300192\u300193\u300194\u300195\u300196\u300197\u300198\u300199\u3001100\u3001101\u3001102\u3001103\u3001104\u3001105\u3001106\u3001107\u3001108\u3001109\u3001110\u3001111\u3001112\u3001113\u3001114\u3001115\u3001116\u3001117\u3001118\u3001119\u3001120\u3001121\u3001122\u3001123\u3001124\u3001125\u3001126\u3001127\u3001128\u3001129\u3002130\u3001131\u3001132\u3001133\u3001134\u3001135\u3001136\u3001137\u3001138\u3001139\u3001140\u3001141\u3001142\u3001143\u3001144\u3001145\u3001146\u3001147\u3001148\u3001149\u3001150\u3001151\u3001152\u3001153\u3001154\u3001155\u3001156\u3001157\u3001158\u3001159\u3001160\u3001161\u3001162\u3001163\u3001164\u3001165\u3001166\u3001167\u3001168\u3001169\u3001170\u3001171\u3001172\u3001173\u3002174\u3001175\u3001176\u3001177\u3001178\u3001179\u3001180\u3001181\u3001182\u3001183\u3001184\u3001185\u3001186\u3001187\u3001188\u3001189\u3001190\u3001191\u3001192\u3001193\u3001194\u3001195\u3001196\u3001197\u3001198\u3001199\u3001200\u3001201\u3001202\u3001203\u3001204\u3001205\u3001206\u3001207\u3001208\u3001209\u3001210\u3001211\u3001212\u3001213\u3001214\u3001215\u3001216\u3001217\u3002218\u3001219\u3001220\u3001221\u3001222\u3001223\u3001224\u3001225\u3001226\u3001227\u3001228\u3001229\u3001230\u3001231\u3001232\u3001233\u3001234\u3001235\u3001236\u3001237\u3001238\u3001239\u3001240\u3001241\u3001242\u3001243\u3001244\u3001245\u3001246\u3001247\u3001248\u3001249\u3001250\u3001251\u3001252\u3001253\u3001254\u3001255())-\u6295\u63b7&#34\uff1b\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u9700\u8981\u592a\u591a\u7684\u5bc4\u5b58\u5668&#34\uff1b\u9519\u8bef\u6253\u5370(1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c12\uff0c13\uff0c14\uff0c15\uff0c16\uff0c17\uff0c18\uff0c19\uff0c20\uff0c21\uff0c22\uff0c23\uff0c24\uff0c25\uff0c26\uff0c27\uff0c28\uff0c29\uff0c30\uff0c31\uff0c32\uff0c33\uff0c34\uff0c35\uff0c36\uff0c37\uff0c38\uff0c39\uff0c40\uff0c41\uff0c42\uff0c43\uff0c44\u300145\u300146\u300147\u300148\u300149\u300150\u300151\u300152\u300153\u300154\u300155\u300156\u300157\u300158\u300159\u300160\u300161\u300162\u300163\u300164\u300165\u300166\u300167\u300168\u300169\u300170\u300171\u300172\u300173\u300174\u300175\u300176\u300177\u300178\u300179\u300180\u300181\u300182\u300183\u300184\u300185\u300186\u300187\u300288\u300189\u300190\u300191\u300192\u300193\u300194\u300195\u300196\u300197\u300198\u300199\u3001100\u3001101\u3001102\u3001103\u3001104\u3001105\u3001106\u3001107\u3001108\u3001109\u3001110\u3001111\u3001112\u3001113\u3001114\u3001115\u3001116\u3001117\u3001118\u3001119\u3001120\u3001121\u3001122\u3001123\u3001124\u3001125\u3001126\u3001127\u3001128\u3001129\u3001130\u3001131\u3002132\u3001133\u3001134\u3001135\u3001136\u3001137\u3001138\u3001139\u3001140\u3001141\u3001142\u3001143\u3001144\u3001145\u3001146\u3001147\u3001148\u3001149\u3001150\u3001151\u3001152\u3001153\u3001154\u3001155\u3001156\u3001157\u3001158\u3001159\u3001160\u3001161\u3001162\u3001163\u3001164\u3001165\u3001166\u3001167\u3001168\u3001169\u3001170\u3001171\u3001172\u3001173\u3001174\u3001175\u3002176\u3001177\u3001178\u3001179\u3001180\u3001181\u3001182\u3001183\u3001184\u3001185\u3001186\u3001187\u3001188\u3001189\u3001190\u3001191\u3001192\u3001193\u3001194\u3001195\u3001196\u3001197\u3001198\u3001199\u3001200\u3001201\u3001202\u3001203\u3001204\u3001205\u3001206\u3001207\u3001208\u3001209\u3001210\u3001211\u3001212\u3001213\u3001214\u3001215\u3001216\u3001217\u3001218\u3001219\u3002220\u3001221\u3001222\u3001223\u3001224\u3001225\u3001226\u3001227\u3001228\u3001229\u3001230\u3001231\u3001232\u3001233\u3001234\u3001235\u3001236\u3001237\u3001238\u3001239\u3001240\u3001241\u3001242\u3001243\u3001244\u3001245\u3001246\u3001247\u3001248\u3001249\u3001250\u3001251\u3001252\u3001253\u3001254\u3001255)--\u629b\u51fa&#34\uff1b\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u9700\u8981\u592a\u591a\u5bc4\u5b58\u5668&#34\uff1b\u9519\u8bef\u3002\n\u4f46\u662f\uff0c\u5bf9\u8868\u5b57\u9762\u503c\u6ca1\u6709\u9650\u5236\uff0c\u8fd9\u5f3a\u5316\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8868\u5b57\u9762\u503c\u7684\u5185\u5bb9\u4e0d\u662f\u591a\u4f4d\u6570\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u5916\u89c2\u4e0a\u5f88\u76f8\u4f3c\uff1a\n\u6240\u6709\u8fd9\u4e9b\u591a\u503c\u602a\u7656\u7684\u4e0d\u540c\u4f8b\u5b50\u8868\u660e\uff0c\u4e58\u6cd5\u53ea\u662f\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002(\u6211\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u6700\u597d\u7684\u539f\u56e0\u662f\uff0c\u5728\u591a\u503c\u5185\u9012\u5f52\u65f6\uff0c\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u4e0d\u8d77\u4f5c\u7528\uff0c\u5c31\u50cf\u5b83\u4e00\u6837\n\u4e0d\u80fd\u5c06\u4e58\u6570\u8d4b\u7ed9\u53d8\u91cf\u3002\u5b83\u4eec\u53ea\u80fd\u4f5c\u4e3a\u6587\u5b57\u3001\u51fd\u6570\u8c03\u7528\u8868\u8fbe\u5f0f\u6216vararg.\u5f15\u7528\u3002\nvararg\u4e0d\u80fd\u5728\u521b\u5efa\u5b83\u7684\u51fd\u6570\u5916\u90e8\u4f7f\u7528(\u5305\u62ec\u5728\u8be5\u51fd\u6570\u4e2d\u521b\u5efa\u7684\u95ed\u5305\u5185)\u3002\n\u5728\u7ed3\u675f\u4e4b\u524d\u5c06\u4e58\u6570\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u591a\u503c\u4e2d\u65f6\uff0c\u4f1a\u5728\u7b2c\u4e00\u4e2a\u503c\u5904\u622a\u65ad\u4e58\u6570\u3002\n\u4e0e\u8868\u683c\u4e0d\u540c\uff0c\u4e58\u6570\u7684\u5185\u7f6e\u957f\u5ea6\u4e0e\u591a\u503c\u5185NIL\u7684\u6392\u5217\u65e0\u5173\u3002\u53ef\u4ee5\u4f7f\u7528SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u641c\u7d22\u6b64\u957f\u5ea6\u3002\n\u5f53\u591a\u503c\u5728\u7ed3\u675f\u524d\u5305\u542b\u5bf9\u96f6\u8fd4\u56de\u503c\u51fd\u6570\u7684\u8c03\u7528\u65f6\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c06\u63d2\u5165nil\u3002\n\u5f53\u51fd\u6570\u5728Multival\u5185\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u4e0d\u4f1a\u5e94\u7528\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u3002\u56e0\u6b64\uff0c\u5728\u4e1a\u4f59\u65f6\u95f4\u5185\u9012\u5f52\u592a\u591a\u6b21\u4f1a\u4f7f\u5806\u6808\u5931\u6548\u3002\n\u5c1d\u8bd5\u4f7f\u7528\u8fc7\u591a\u53c2\u6570\u8c03\u7528\u51fd\u6570\u6216\u4ece\u51fd\u6570\u8fd4\u56de\u5c06\u5bfc\u81f4\u9519\u8bef\u3002\u8fd9\u4e00\u9650\u5236\u8fdc\u8fdc\u4f4e\u4e8e\u524d\u9762\u63d0\u5230\u7684\u89e3\u5305\u8868\u683c\u7684\u9650\u5236\uff0c\u4ec5\u7565\u4f4e\u4e8e255\u4e2a\u9879\u76ee\u3002\n\u6700\u540e\uff0c\u5173\u4e8e\u591a\u503c\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ee4\u6211\u96be\u4ee5\u7f6e\u4fe1\u7684\u4e3b\u89c2\u95ee\u9898\uff0c\u90a3\u5c31\u662fvararg\u4f7f\u7528\u7684\u8bed\u6cd5\u3002\u5728\u6211\u770b\u6765\uff0c\u4e8b\u5b9e\u4e0a\u2026\u662f\u6709\u6548\u7684Lua\u4f7f\u5f97\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u63d2\u5165\u6613\u4e8e\u7406\u89e3\u7684\u5360\u4f4d\u7b26\u53d8\u5f97\u4e0d\u5fc5\u8981\u5730\u56f0\u96be\u3002\n\u867d\u7136\u4e58\u6570\u4ecd\u7136\u662fLua\u7684\u4e00\u4e2a\u5947\u602a\u800c\u950b\u5229\u7684\u89d2\u843d\uff0c\u4f46\u6211\u5e0c\u671b\u591a\u4e8f\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4ed6\u4eec\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u867d\u7136\u5b83\u4eec\u5f88\u5c11\u662f\u7279\u5b9a\u95ee\u9898\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5bf9\u4e8eLua\u7528\u6237\u6765\u8bf4\uff0c\u4e86\u89e3\u5b83\u4eec\u7684\u4f18\u70b9\u548c\u5c40\u9650\u6027\u4ecd\u7136\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u5373\u4f7f\u8fd9\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u907f\u514d\u5b83\u4eec\u662f\u5408\u7406\u7684\u3002\n\u4e5f\u79f0\u4e3a\u5c3e\u90e8\u547c\u53eb\u4f18\u5316\u3002\u4f7f\u7528InSafari\u7684JavaScriptCore\u6709\u9002\u5f53\u7684Tail CallSupport\uff0c\u4f46\u5927\u591a\u6570JS\u5f00\u53d1\u4eba\u5458\u65e0\u6cd5\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5b83\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\u7684\u6d41\u884c\u6d4f\u89c8\u5668\u4e2d\u4e0d\u53ef\u7528\u3002\u21a9\u3002\n\u5728\u8334\u9999\u4e2d\uff0c\u8fd9\u79cd\u53e5\u6cd5\u6df7\u4e71\u4f1a\u53d8\u5f97\u66f4\u7cdf\uff01\u5728\u90a3\u91cc\uff0c\u591a\u4e2a\u6570\u6ca1\u6709\u81ea\u5df1\u7684\u7279\u6b8a\u8bed\u6cd5\uff0c\u800c\u662f\u7528\u7279\u6b8a\u7684\u503c\u8868\u793a\u3002(\u503c1 2 3)\u5728Fennelis\u4e2d\u4e0e\u5728Lua\u4e2d\u76841\u30012\u30013\u76f8\u540c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4f7f\u5f97\u8fdb\u5165\u6b64\u573a\u666f\u7684\u9012\u5f52\u51fd\u6570\u770b\u8d77\u6765\u66f4\u50cf\u771f\u6b63\u7684\u5c3e\u9012\u5f52\u51fd\u6570\u3002\u8fd9\u662f\u5728Fennel\u4e2d\u4f7f\u7528\u591a\u4e2a\u51fd\u6570\u548c\u9012\u5f52\u65f6\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff01\u21a9", "note_en": "I\u2019ve been spending a lot of time lately writing  Fennel andcontributing to its compiler. Since it\u2019s a language that compiles toLua, that also means spending a lot of time getting to know Lua. Thisarticle will be focused on Lua (though I\u2019ll address Fennel from timeto time in the footnotes).\n Lua is a neat, elegant, and relatively simple language. I find itparticularly notable for its embeddability into other programs;capability of hosting many different styles of programming; and theexcellent performance of one of its implementations, LuaJIT. In many ways, it feels like a more elegant andrestrained JavaScript - it supports tail call elimination  [1] and coroutines, it doesn\u2019t have the confusing  var/ letdistinction (though it lacked a feature like  const until Lua 5.4),and it doesn\u2019t privilege class syntax over other styles of programming(object oriented programming can be done in Lua with metatables, butit\u2019s not given special syntax like it is in JS).\n That said, it has aspects that are undoubtedly quirky - arrays anddictionaries are unified into &#34;tables&#34;, whose integer indices start at1; the standard library is unusually minimal, a nod to itsembeddability; it, like JavaScript, makes the immense error of makingvariables global by default and local only when you ask. Curiously, italso supports a quite uncommon language feature: multiple returnvalues (which we\u2019ll call \u201cmultivals\u201d for brevity\u2019s sake). It is thislast subject that we\u2019ll be unpacking more about today.\n Since Lua is a dynamic language (as opposed to, say, Go) multiplereturns are implemented in a rather odd way. This isn\u2019t explored in asmuch detail as I\u2019d like in Lua\u2019s documentation, so I wanted to providea one-stop resource that explains everything I can think to write downabout this idiosyncratic part of the language.\n A spoiler: unfortunately, multivals will turn out to be somewhatunderwhelming for use in code you care about. They\u2019re awkward to workwith, have numerous gotchas, are a maintenance hazard, and don\u2019tperform notably better (that I know of) than their primaryalternative, tables. This is not a very  useful article, unless youhave a use for knowing minutiae about Lua\u2019s behavior.\n   There are three primary ways to represent a multival in Lua. Each ofthese has their own distinct uses. Each of the following code snippetsproduces the same multival:\n A multival literal:  1, 2, 3. (Note that this does not includetable literals like  {1, 2, 3}).\n  The vararg,  ..., in a function:  local function x(...) return ... end x(1, 2, 3)\n  local  function  two_values ()  return  &#34;first&#34; ,  &#34;second&#34;  end local  tab  =  { two_values ()} print ( tab [ 1 ],  tab [ 2 ])  -- prints &#34;first second&#34;\n  local  function  multival_first ( x ,  ...)  return  x  end print ( multival_first ( 1 ,  2 ,  3 ))  -- prints &#34;1&#34; local  function  multival_rest ( x ,  ...)  return  ...  end print ( multival_rest ( 1 ,  2 ,  3 ))  -- prints &#34;2 3&#34; print ( select ( 2 ,  1 ,  2 ,  3 ))  -- prints &#34;2 3&#34;; identical to the last line\n In order to get values from the  end of a multival, we have twooptions. The first is recursion:\n local  function  increment_each_value ( first ,  ...)  if  first  then  return  first  +  1 ,  increment_each_value (...)  end end print ( increment_each_value ( 1 ,  2 ,  3 ))  -- prints &#34;2 3 4&#34;\n The second is packing the multival into a table. There are two ways todo this, both of which are demonstrated below:\n -- 1. You can pack a multival directly into a table literal local  function  pack_multival (...)  return  {...} end -- Lua&#39;s default printing for tables only shows identity; we&#39;ll just -- print the length instead. print ( # pack_multival ( 1 ,  2 ,  3 ))  -- prints &#34;3&#34; -- 2. You can use table.pack, which is built in to Lua 5.2 and later local  tab  =  table.pack ( 1 ,  2 ,  3 ) print ( # tab )  -- prints &#34;3&#34; -- table.pack also sets the &#34;n&#34; field on the table it returns. This is -- more efficient than using #tab, which iterates through the table. print ( tab . n )  -- prints &#34;3&#34;\n  When you start working with multivals, they might seem prettystraightforward. As long as you\u2019re working on something that uses alist with fixed length or that can be expressed by iterating throughthe head and tail of a list, it seems like working with multivalsshould be nice and predictable.\n The first issue you\u2019ll likely run into if you try to use multivalsheavily comes from expecting them to work the same way the rest of Luadoes. In short, Lua\u2019s  local variables use what\u2019s called  lexicalscope. This means that the scope of a variable definition is theblock of code that you see it contained in in your source codefile. It doesn\u2019t matter what order other functions are called in, orwhether they\u2019re called at all - the definitions of local variables canbe determined just by looking at the structure of the code. This is asopposed to  dynamic scope, where the variables defined at a givenpoint are dependent on the runtime of the program itself. Lua\u2019s global variables effectively use dynamic scope.\n As discussed above, there\u2019s only three ways to refer to a multival:calling a function for its return values, literally inserting multiplevalues separated by commas, or using the vararg symbol  ... as afunction argument. It\u2019s this last case that we\u2019re interested in.\n When you use  ... in the signature of a function, you must place itat the end of the argument list. (This is what prevents you -syntactically, at least - from accessing the end of  ... withouteither assigning the whole thing to individual variables, recursingthrough it, or packing it into a table.)\n You also can\u2019t assign the whole thing to a variable, because assigninga  ... to a variable means unpacking the multival and assigning the first value to the variable - or multiple values, if that\u2019sspecified. For example:\n -- Assigning the vararg to a single variable will assign that variable -- to the _first value_ of the vararg. local  function  try_to_assign_vararg (...)  local  x  =  ...  return  x end print ( try_to_assign_vararg ( 1 ,  2 ,  3 ))  -- prints &#34;1&#34;\n There\u2019s one additional rule about the vararg, however, that\u2019s veryunlike the behavior of the rest of Lua. You can only use a vararg within the function where it is defined. This prevents you from, forinstance, saving the vararg into a closure:\n  This fails to run with the following error:  cannot use &#39;...&#39; outside a vararg function near &#39;...&#39;. This means that, while you can use ... in two nested functions, each  ... can only refer to the varargof the function that\u2019s currently running. You can\u2019t capture  ...within a closure to persist it. Effectively,  ... is not lexicallyscoped, but rather a dynamically scoped variable with certain extrarules like not being reassignable and not being usable outside afunction that defined it.\n Another way to put this would be to say that Lua\u2019s multivals are\u201csecond class\u201d values. You might be familiar with languages that havesecond class functions, which can\u2019t be assigned to variables or passedas a parameter to a functions. This is similar, with the notableexception that we  can pass the vararg to another function. We justcan\u2019t save it in a variable, save it in a closure, or manipulate it incertain ways.\n  Passing multivals to functions and packing them into tables is prettystraightforward, but there\u2019s one major gotcha about it we haven\u2019t goneover yet. Take a look at the following example:\n local  function  returns_three_values ()  return  1 ,  2 ,  3 end print ( returns_three_values ())  -- prints &#34;1 2 3&#34; print ( # { returns_three_values ()})  -- prints &#34;3&#34; print ( returns_three_values (),  4 ,  5 )  -- prints &#34;1 4 5&#34; print ( # { returns_three_values (),  4  5 })  -- prints &#34;3&#34;\n As the second pair of  print expressions demonstrates, a functioncall can only return multiple values into a multival if it is the lastthing in the multival. Following a function call in a multival withany other value, even  nil, will cut off its return values at thefirst item.\n    One of Lua\u2019s nicer properties is how a key set to  nil and anon-existent key are indistinguishable in a table. In Javascript, forinstance, you have both  obj.x = undefined to set a property to undefined and  delete obj.x to actually remove it from theobject. (There\u2019s also  obj.x = null, but let\u2019s ignore that for now.)In Lua, there\u2019s just  tab.x = nil, and there\u2019s no way to distinguishbetween a property that was set to  nil and a property that was neverset at all.\n  local  y  =  { nil , nil , nil } print ( # y )  -- prints &#34;0&#34; - nils at the end of a table don&#39;t matter local  function  multival_length (...)  select ( &#34;#&#34; ,  ...)  end print ( multival_length ( table.unpack ( y )))  -- prints &#34;0&#34; print ( multival_length ( nil ,  nil ,  nil ))  -- prints &#34;3&#34;. wtf?\n As this example demonstrates, multivals throw that nice property outthe window. Just to be clear:\n There is  one distinction between  multival_length(nil, nil) and multival_length() in Lua. That distinction is made by select(&#34;#&#34;, ...).\n This becomes even more confusing when combined with a function thatreturns  zero values, as opposed to  nil:\n print ( select ( &#34;#&#34; ,  print ( &#34;a&#34; ),  print ( &#34;b&#34; ),  print ( &#34;c&#34; )))  -- first prints each of &#34;a&#34;, &#34;b&#34;, and &#34;c&#34; on their own lines  -- next, prints &#34;2&#34;. wait, what?\n  As it turns out, a function that returns zero values creates an emptymultival, as you\u2019d expect. It also doesn\u2019t add anything to the end ofa multival if you call it at the end. However, if a call to azero-return-value function appears  before the end of a multival, itresults in a  nil being inserted into the multival in place of itszero return values. Thus, instead of collapsing the multival made upof all three of the  print calls into a single zero-length multival,Lua instead collapses the  last call to  print, but turns the othertwo calls into  nil. This all doesn\u2019t apply to tables, because,unlike in multivals,  nils in tables are truly identical to absentvalues.\n At first, this all seems like something that doesn\u2019t belong inLua. Without the  select(&#34;#&#34;, ...) form, there\u2019d be no way of tellinga  nil at the end of a multival from the end of the multivalitself. However, this makes certain abstractions much easier tocreate.\n One notable situation where  select(&#34;#&#34;, ...) becomes particularlyuseful is when wrapping functions that return multiplevalues.  select(&#34;#&#34;, ...) lets you easily tell if you can simply savethe first return value from the function or if you need to create atable to save all the values.\n  When first looking at multivals in Lua, a programmer who\u2019s determinedto use them somehow might first be inclined to combine them with tailrecursion to neatly express different functions. For instance, wecould implement  range as follows:\n local  function  range1 ( acc ,  n )  if  n  &lt;  1  then  return  elseif  n  ==  1  then  return  acc  else  return  acc ,  range1 ( acc + 1 ,  n - 1 )  end end local  function  range ( n )  if  n  &lt;  1  then  error ( &#34;n must be &gt;= 1&#34; )  end  return  range1 ( 1 ,  n ) end print ( range ( 3 ))  -- prints &#34;1 2 3&#34; print ( # { range ( 10 )})  -- prints &#34;10&#34;\n This works great! We can call  range(n) when we want a multival oflength  n, and surround it with braces like  {range(n)} when we wantthe equivalent table. This should let us avoid allocating extra tableswhen we don\u2019t need them. And since Lua has tail call elimination, therecursive call  range1 makes to itself should never blow thestack. Right?\n   As it turns out, multivals break tail call elimination. If you\u2019rereturning multiple values, Lua needs to collect all those valuesbefore it can actually begin to return them. This means that it can\u2019tthrow away the stack frames of the recursing function. It\u2019s verysimilar to what would happen if you returned  {range1(acc, n)} within range1. That case is clearly  not a tail call. It\u2019s the particularsyntax of multivals that makes this confusing, since it doesn\u2019t looklike the faux-tail-call is \u201csurrounded\u201d by anything.  [2]\n In order to avoid the stack overflow and properly recurse thefunction, we can implement  range with a table as follows:\n local  function  range1 ( tab ,  acc ,  n )  if  n  &lt;  1  then  return  tab  else  tab [ acc ]  =  acc  return  range1 ( tab ,  acc + 1 ,  n - 1 )  end end local  function  range ( n )  if  n  &lt;  1  then  error ( &#34;n must be &gt;= 1&#34; )  end  return  range1 ({},  1 ,  n ) end print ( # range ( 1000  *  1000 ))  -- prints &#34;1000000&#34;\n It\u2019s perhaps less elegant, mixing recursion and mutation, but itsruntime characteristics are vastly better.\n  It makes sense that recursing to much could cause issues by blowingthe stack. What\u2019s less intuitive is that multivals have a cap on theirsize even when you make them  without recursion. Consider this use ofthe  range function we defined above:\n  Great! Now, let\u2019s try unpacking that into a multival. No recursion isinvolved, so this should work fine, right?\n  As it turns out, multivals simply have a cap on the number of valuesthey can contain. There\u2019s no way to work around this - if you need tohandle a list of items without worrying about how big it is, use atable, not a multival.\n  print (( function ()  return  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ,  11 ,  12 ,  13 ,  14 ,  15 ,  16 ,  17 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  27 ,  28 ,  29 ,  30 ,  31 ,  32 ,  33 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  43 ,  44 ,  45 ,  46 ,  47 ,  48 ,  49 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  59 ,  60 ,  61 ,  62 ,  63 ,  64 ,  65 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  75 ,  76 ,  77 ,  78 ,  79 ,  80 ,  81 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  91 ,  92 ,  93 ,  94 ,  95 ,  96 ,  97 ,  98 ,  99 ,  100 ,  101 ,  102 ,  103 ,  104 ,  105 ,  106 ,  107 ,  108 ,  109 ,  110 ,  111 ,  112 ,  113 ,  114 ,  115 ,  116 ,  117 ,  118 ,  119 ,  120 ,  121 ,  122 ,  123 ,  124 ,  125 ,  126 ,  127 ,  128 ,  129 ,  130 ,  131 ,  132 ,  133 ,  134 ,  135 ,  136 ,  137 ,  138 ,  139 ,  140 ,  141 ,  142 ,  143 ,  144 ,  145 ,  146 ,  147 ,  148 ,  149 ,  150 ,  151 ,  152 ,  153 ,  154 ,  155 ,  156 ,  157 ,  158 ,  159 ,  160 ,  161 ,  162 ,  163 ,  164 ,  165 ,  166 ,  167 ,  168 ,  169 ,  170 ,  171 ,  172 ,  173 ,  174 ,  175 ,  176 ,  177 ,  178 ,  179 ,  180 ,  181 ,  182 ,  183 ,  184 ,  185 ,  186 ,  187 ,  188 ,  189 ,  190 ,  191 ,  192 ,  193 ,  194 ,  195 ,  196 ,  197 ,  198 ,  199 ,  200 ,  201 ,  202 ,  203 ,  204 ,  205 ,  206 ,  207 ,  208 ,  209 ,  210 ,  211 ,  212 ,  213 ,  214 ,  215 ,  216 ,  217 ,  218 ,  219 ,  220 ,  221 ,  222 ,  223 ,  224 ,  225 ,  226 ,  227 ,  228 ,  229 ,  230 ,  231 ,  232 ,  233 ,  234 ,  235 ,  236 ,  237 ,  238 ,  239 ,  240 ,  241 ,  242 ,  243 ,  244 ,  245 ,  246 ,  247 ,  248 ,  249 ,  250 ,  251 ,  252 ,  253 ,  254 ,  255  end )())  -- throws &#34;function or expression needs too many registers&#34; error print ( 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ,  11 ,  12 ,  13 ,  14 ,  15 ,  16 ,  17 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  27 ,  28 ,  29 ,  30 ,  31 ,  32 ,  33 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  43 ,  44 ,  45 ,  46 ,  47 ,  48 ,  49 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  59 ,  60 ,  61 ,  62 ,  63 ,  64 ,  65 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  75 ,  76 ,  77 ,  78 ,  79 ,  80 ,  81 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  91 ,  92 ,  93 ,  94 ,  95 ,  96 ,  97 ,  98 ,  99 ,  100 ,  101 ,  102 ,  103 ,  104 ,  105 ,  106 ,  107 ,  108 ,  109 ,  110 ,  111 ,  112 ,  113 ,  114 ,  115 ,  116 ,  117 ,  118 ,  119 ,  120 ,  121 ,  122 ,  123 ,  124 ,  125 ,  126 ,  127 ,  128 ,  129 ,  130 ,  131 ,  132 ,  133 ,  134 ,  135 ,  136 ,  137 ,  138 ,  139 ,  140 ,  141 ,  142 ,  143 ,  144 ,  145 ,  146 ,  147 ,  148 ,  149 ,  150 ,  151 ,  152 ,  153 ,  154 ,  155 ,  156 ,  157 ,  158 ,  159 ,  160 ,  161 ,  162 ,  163 ,  164 ,  165 ,  166 ,  167 ,  168 ,  169 ,  170 ,  171 ,  172 ,  173 ,  174 ,  175 ,  176 ,  177 ,  178 ,  179 ,  180 ,  181 ,  182 ,  183 ,  184 ,  185 ,  186 ,  187 ,  188 ,  189 ,  190 ,  191 ,  192 ,  193 ,  194 ,  195 ,  196 ,  197 ,  198 ,  199 ,  200 ,  201 ,  202 ,  203 ,  204 ,  205 ,  206 ,  207 ,  208 ,  209 ,  210 ,  211 ,  212 ,  213 ,  214 ,  215 ,  216 ,  217 ,  218 ,  219 ,  220 ,  221 ,  222 ,  223 ,  224 ,  225 ,  226 ,  227 ,  228 ,  229 ,  230 ,  231 ,  232 ,  233 ,  234 ,  235 ,  236 ,  237 ,  238 ,  239 ,  240 ,  241 ,  242 ,  243 ,  244 ,  245 ,  246 ,  247 ,  248 ,  249 ,  250 ,  251 ,  252 ,  253 ,  254 ,  255 )  -- throws &#34;function or expression needs too many registers&#34; error\n There is, however, no limit on table literals, reinforcing the factthat the contents of table literals are not multivals, despite theirsimilarity in appearance:\n    What all these different examples of multival quirks demonstrate isthat multivals are just another data structure. (I find this case ismade best by how tail call elimination doesn\u2019t work when recursingwithin a multival, just like it wouldn\u2019t work within a table literal.)They aren\u2019t exceptions to the rules that data structures follow - infact, they have  extra rules that tables don\u2019t. To sum up:\n Multivals cannot be assigned to variables. They can only referred toas literals, function call expressions, or the vararg  ....\n The vararg cannot be used outside the function that creates it(including within closures made within that function).\n Multivals are cut off at the first value when inserting them intoanother multival before its end.\n Unlike tables, multivals have a built-in length that is unrelated tothe arrangement of  nils within the multival. This length can beretrieved with  select(&#34;#&#34;, ...).\n When a multival contains a call to a zero-return-value functionbefore the end of the multival, a  nil is inserted where thefunction\u2019s return value would go.\n When a function makes a recursive call within a multival, tail callelimination is not applied. Recursing too many times within amultival will thus blow the stack.\n  Trying to call or return from a function with too many argumentswill result in an error. This limit is much lower than thepreviously-mentioned limit on unpacking tables, being just below 255items.\n  Finally, one incredibly subjective thing that bugs me about multivalsis the syntax used for the vararg. In my opinion, the fact that  ...is valid Lua makes it unnecessarily hard to insert aneasily-understood placeholder into example code.\n  While multivals remain a strange and sharp-edged corner of Lua, I hopethat they\u2019re a little bit easier to understand thanks to thispost. While they\u2019re rarely the best solution to a given problem, it\u2019sstill helpful for a Lua user to understand their strengths andlimitations, even if it\u2019s only to justify avoiding them.\n   Also known as Tail Call Optimization. JavaScriptCore, used inSafari, has  Proper Tail CallSupport,but most JS developers can\u2019t make use of this, as it\u2019s notavailable in popular browsers on most platforms.  \u21a9\n In Fennel, this syntactical confusion gets even worse! There,instead of having their own special syntax, multivals arerepresented with the  values special.  (values 1 2 3) in Fennelis the same as  1, 2, 3 in Lua. Unfortunately, this makesrecursive functions that run into this scenario look even  morelike real tail-recursive functions. This is a gotcha to keep inmind whenever working with multivals and recursion in Fennel!  \u21a9", "posttime": "2020-05-06 00:18:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u77e5\u9053,lua,\u51fd\u6570,multival", "title": "\u4f60\u4e0d\u60f3\u77e5\u9053\u7684\u5173\u4e8eLua\u7684\u591a\u91cd\u4ef7\u503c\u7684\u4e00\u5207", "title_en": "Everything You Didn't Want to Know About Lua's Multi-Values", "transed": 1, "url": "https://benaiah.me/posts/everything-you-didnt-want-to-know-about-lua-multivals/", "via": "", "real_tags": ["\u77e5\u9053", "lua", "\u51fd\u6570", "multival"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000782, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Web\u6388\u6743\u534f\u8baeT.LodderstedtInternet-Draft yes.com\u5305\u542b\u72b6\u6001\uff1a\u6700\u4f73\u5f53\u524d\u5b9e\u8df5J.Bradley Expires\uff1a2020\u5e7410\u67087\u65e5Yubio A.Labunets D.Fett yes.com 2020\u5e744\u67085\u65e5OAuth 2.0\u5b89\u5168\u6700\u4f73\u5f53\u524d\u5b9e\u8df5\u8349\u6848-IETF-OAuth-Security-Themes-15\u6458\u8981\u672c\u6587\u6863\u63cf\u8ff0\u4e86OAuth 2.0\u7684\u6700\u4f73\u5f53\u524d\u5b89\u5168\u5b9e\u8df5\u3002\u5b83\u66f4\u65b0\u548c\u6269\u5c55\u4e86OAuth 2.0\u5b89\u5168\u5a01\u80c1\u6a21\u578b\uff0c\u4ee5\u7eb3\u5165\u81eaOAuth 2.0\u53d1\u5e03\u4ee5\u6765\u6536\u96c6\u7684\u5b9e\u9645\u7ecf\u9a8c\uff0c\u5e76\u6db5\u76d6\u4e86\u7531\u4e8eOAuth 2.0\u7684\u66f4\u5e7f\u6cdb\u5e94\u7528\u800c\u5e26\u6765\u7684\u65b0\u5a01\u80c1\u3002\u672c\u5907\u5fd8\u5f55\u7684\u72b6\u6001\u672c\u4e92\u8054\u7f51\u8349\u6848\u5b8c\u5168\u7b26\u5408BCP 78\u548cBCP 79\u7684\u89c4\u5b9a\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4(IETF)\u7684\u5de5\u4f5c\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u5c0f\u7ec4\u4e5f\u53ef\u4ee5\u5c06\u5de5\u4f5c\u6587\u4ef6\u4f5c\u4e3a\u4e92\u8054\u7f51\u8349\u7a3f\u5206\u53d1\u3002\u76ee\u524d\u7684\u4e92\u8054\u7f51\u8349\u7a3f\u5217\u8868\u5728https://datatracker.ietf.org/drafts/current/.\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u6709\u6548\u671f\u6700\u957f\u4e3a6\u4e2a\u6708\u7684\u8349\u6848\u6587\u4ef6\uff0c\u53ef\u968f\u65f6\u66f4\u65b0\u3001\u66ff\u6362\u6216\u88ab\u5176\u4ed6\u6587\u4ef6\u6dd8\u6c70\u3002\u4f7f\u7528\u4e92\u8054\u7f51\u8349\u7a3f\u4f5c\u4e3a\u53c2\u8003\u6750\u6599\u6216\u5c06\u5176\u4f5c\u4e3a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u4ee5\u5916\u7684\u5f15\u7528\u662f\u4e0d\u5408\u9002\u7684\u3002\u672c\u4e92\u8054\u7f51\u8349\u7a3f\u5c06\u4e8e2020\u5e7410\u67087\u65e5\u5230\u671f\u3002\u7248\u6743\u6240\u6709(C)2020 IETF Trust\u548c\u6307\u5b9a\u4e3a\u6587\u6863\u4f5c\u8005\u7684\u4eba\u5458\u3002\u7248\u6743\u6240\u6709\u3002\u672c\u6587\u4ef6\u53d7BCP78\u548cIETF Trust\u5173\u4e8eIETF\u6587\u4ef6(https://trustee.ietf.org/\u8bb8\u53ef\u8bc1\u4fe1\u606f)\u7684\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7ea6\u675f\uff0c\u81ea\u672c\u6587\u4ef6\u53d1\u5e03\u4e4b\u65e5\u8d77\u751f\u6548\u3002\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u8fd9\u4e9b\u6587\u6863\uff0c\u56e0\u4e3a\u5b83\u4eec\u63cf\u8ff0\u4e86\u60a8\u7684\u6743\u5229Lodderstedt\u7b49\u4eba\u30022020\u5e7410\u67087\u65e5\u5230\u671f[\u7b2c1\u9875]\u3002\n\u4e92\u8054\u7f51-\u8349\u6848OAuth-\u5b89\u5168-\u4e3b\u98982020\u5e744\u6708\u4ee5\u53ca\u4e0e\u672c\u6587\u6863\u76f8\u5173\u7684\u9650\u5236\u3002\u672c\u6587\u6863\u4e2d\u63d0\u53d6\u7684\u4ee3\u7801\u7ec4\u4ef6\u5fc5\u987b\u5305\u62ec\u7b80\u5316\u7684BSD\u8bb8\u53ef\u6587\u672c\uff0c\u5982\u4fe1\u6258\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7b2c4.e\u8282\u6240\u8ff0\uff0c\u5e76\u4e14\u5982\u7b80\u5316\u7684BSD\u8bb8\u53ef\u4e2d\u6240\u8ff0\u4e0d\u63d0\u4f9b\u62c5\u4fdd\u3002\u76ee\u5f551.\u7b80\u4ecb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30023 1.1.\u3002\u7ed3\u6784\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024 1.2.\u3002\u7ea6\u5b9a\u548c\u672f\u8bed\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024.\u5efa\u8bae\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30025 2.1.\u3002\u4fdd\u62a4\u57fa\u4e8e\u91cd\u5b9a\u5411\u7684\u6d41\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30025 2.1.1\u3002\u6388\u6743\u7801\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30026 2.1.2\u3002\u9690\u542b\u7684\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30026 2.2.\u3002\u4ee4\u724c\u91cd\u653e\u9632\u6b62\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30027 2.3.\u3002\u8bbf\u95ee\u4ee4\u724c\u6743\u9650\u9650\u5236\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30027 2.4.\u3002\u8d44\u6e90\u6240\u6709\u8005\u5bc6\u7801\u51ed\u636e\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 2.5.\u3002\u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 2.6.\u3002\u5176\u4ed6\u5efa\u8bae\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 3.\u66f4\u65b0\u7684OAuth 2.0\u653b\u51fb\u8005\u6a21\u578b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30029 4.\u653b\u51fb\u53ca\u51cf\u5211\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.\u3002\u91cd\u5b9a\u5411URI\u9a8c\u8bc1\u4e0d\u8db3\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.1\u3002\u91cd\u5b9a\u5411\u6388\u6743\u4ee3\u7801\u6388\u4e88\u4e0a\u7684URI\u9a8c\u8bc1\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.2\u3002\u91cd\u5b9a\u5411\u9690\u5f0fGRANT\u4e0a\u7684URI\u9a8c\u8bc1\u653b\u51fb\u3002\u300213 4.1.3.\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300214 4.2.\u3002\u901a\u8fc7Referer\u6807\u5934\u6cc4\u9732\u51ed\u636e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.1\u3002\u4eceOAuth\u5ba2\u6237\u7aef\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.2\u3002\u4ece\u6388\u6743\u670d\u52a1\u5668\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.3\u3002\u540e\u679c\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300216 4.2.4.\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002164.3.\u3002\u901a\u8fc7\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u6cc4\u9732\u51ed\u636e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.3.1.\u3002\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u4e2d\u7684\u6388\u6743\u7801\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.3.2\u3002\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u4e2d\u7684\u8bbf\u95ee\u4ee4\u724c\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.4.\u3002\u6df7\u6742\u7684\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 4.4.1\u3002\u653b\u51fb\u63cf\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 4.4.2\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002204.5\u3002\u6388\u6743\u7801\u6ce8\u5165\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 4.5.1\u3002\u653b\u51fb\u63cf\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 4.5.2\u3002\u8ba8\u8bba\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 4.5.3\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300223 4.5.4\u3002\u9650\u5236\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002244.6.\u3002\u8bbf\u95ee\u4ee4\u724c\u6ce8\u5165\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300224 4.6.1\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.7.\u3002\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.7.1\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.8\u3002\u8d44\u6e90\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u4ee4\u724c\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.8.1\u3002\u5047\u5192\u8d44\u6e90Lodderstedt\u7b49\u4eba\u7684\u8bbf\u95ee\u4ee4\u724c\u7f51\u7edc\u9493\u9c7c\u30022020\u5e7410\u67087\u65e5\u5230\u671f[\u7b2c2\u9875]\u3002\n\u4e92\u8054\u7f51-\u8349\u6848OAuth-\u5b89\u5168-\u4e3b\u98982020\u5e744\u6708\u670d\u52a1\u5668\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 4.8.2.\u3002\u53d7\u635f\u7684\u8d44\u6e90\u670d\u52a1\u5668\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300231 4.9.\u3002\u6253\u5f00\u91cd\u5b9a\u5411\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\nInternet-\u8349\u6848OAuth-security-\u4e3b\u98982020\u5e744\u67083.\u66f4\u65b0\u7684OAuth 2.0\u653b\u51fb\u8005\u6a21\u578b\u5728[RFC6819]\u4e2d\uff0c\u5217\u51fa\u4e86\u4e00\u4e2a\u653b\u51fb\u8005\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u63cf\u8ff0\u4e86\u5fc5\u987b\u4fdd\u62a4OAuth\u90e8\u7f72\u514d\u53d7\u653b\u51fb\u7684\u653b\u51fb\u8005\u7684\u80fd\u529b\u3002\u5728\u4ee5\u4e0b\u5185\u5bb9\u4e2d\uff0c\u6b64\u5c5e\u6027\u3002\n..", "note_en": "Web Authorization Protocol T. LodderstedtInternet-Draft yes.comIntended status: Best Current Practice J. BradleyExpires: 7 October 2020 Yubico A. Labunets D. Fett yes.com 5 April 2020  OAuth 2.0 Security Best Current Practice  draft-ietf-oauth-security-topics-15Abstract This document describes best current security practice for OAuth 2.0. It updates and extends the OAuth 2.0 Security Threat Model to incorporate practical experiences gathered since OAuth 2.0 was published and covers new threats relevant due to the broader application of OAuth 2.0.Status of This Memo This Internet-Draft is submitted in full conformance with the provisions of  BCP 78 and  BCP 79. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF). Note that other groups may also distribute working documents as Internet-Drafts. The list of current Internet- Drafts is at  https://datatracker.ietf.org/drafts/current/. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as &#34;work in progress.&#34; This Internet-Draft will expire on 7 October 2020.Copyright Notice Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to  BCP 78 and the IETF Trust&#39;s Legal Provisions Relating to IETF Documents ( https://trustee.ietf.org/  license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights Lodderstedt, et al. Expires 7 October 2020 [Page 1]\n  Internet-Draft oauth-security-topics April 2020 and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the  Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.Table of Contents  1. Introduction . . . . . . . . . . . . . . . . . . . . . . . .  3  1.1. Structure . . . . . . . . . . . . . . . . . . . . . . . .  4  1.2. Conventions and Terminology . . . . . . . . . . . . . . .  4  2. Recommendations . . . . . . . . . . . . . . . . . . . . . . .  5  2.1. Protecting Redirect-Based Flows . . . . . . . . . . . . .  5  2.1.1. Authorization Code Grant . . . . . . . . . . . . . .  6  2.1.2. Implicit Grant . . . . . . . . . . . . . . . . . . .  6  2.2. Token Replay Prevention . . . . . . . . . . . . . . . . .  7  2.3. Access Token Privilege Restriction . . . . . . . . . . .  7  2.4. Resource Owner Password Credentials Grant . . . . . . . .  8  2.5. Client Authentication . . . . . . . . . . . . . . . . . .  8  2.6. Other Recommendations . . . . . . . . . . . . . . . . . .  8  3. The Updated OAuth 2.0 Attacker Model . . . . . . . . . . . .  9  4. Attacks and Mitigations . . . . . . . . . . . . . . . . . . .  11  4.1. Insufficient Redirect URI Validation . . . . . . . . . .  11 4.1.1. Redirect URI Validation Attacks on Authorization Code Grant . . . . . . . . . . . . . . . . . . . . . . . .  11  4.1.2. Redirect URI Validation Attacks on Implicit Grant . .  13  4.1.3. Countermeasures . . . . . . . . . . . . . . . . . . .  14  4.2. Credential Leakage via Referer Headers . . . . . . . . .  15  4.2.1. Leakage from the OAuth Client . . . . . . . . . . . .  15  4.2.2. Leakage from the Authorization Server . . . . . . . .  15  4.2.3. Consequences . . . . . . . . . . . . . . . . . . . .  16  4.2.4. Countermeasures . . . . . . . . . . . . . . . . . . .  16  4.3. Credential Leakage via Browser History . . . . . . . . .  17  4.3.1. Authorization Code in Browser History . . . . . . . .  17  4.3.2. Access Token in Browser History . . . . . . . . . . .  17  4.4. Mix-Up Attacks . . . . . . . . . . . . . . . . . . . . .  18  4.4.1. Attack Description . . . . . . . . . . . . . . . . .  18  4.4.2. Countermeasures . . . . . . . . . . . . . . . . . . .  20  4.5. Authorization Code Injection . . . . . . . . . . . . . .  21  4.5.1. Attack Description . . . . . . . . . . . . . . . . .  21  4.5.2. Discussion . . . . . . . . . . . . . . . . . . . . .  22  4.5.3. Countermeasures . . . . . . . . . . . . . . . . . . .  23  4.5.4. Limitations . . . . . . . . . . . . . . . . . . . . .  24  4.6. Access Token Injection . . . . . . . . . . . . . . . . .  24  4.6.1. Countermeasures . . . . . . . . . . . . . . . . . . .  25  4.7. Cross Site Request Forgery . . . . . . . . . . . . . . .  25  4.7.1. Countermeasures . . . . . . . . . . . . . . . . . . .  25  4.8. Access Token Leakage at the Resource Server . . . . . . .  25 4.8.1. Access Token Phishing by Counterfeit Resource Lodderstedt, et al. Expires 7 October 2020 [Page 2]\n  Internet-Draft oauth-security-topics April 2020 Server . . . . . . . . . . . . . . . . . . . . . . .  26  4.8.2. Compromised Resource Server . . . . . . . . . . . . .  31  4.9. Open Redirection . . . . . . . . . . . . . . . . . . . .  31  4.9.1. Client as Open Redirector . . . . . . . . . . . . . .  32  4.9.2. Authorization Server as Open Redirector . . . . . . .  32  4.10. 307 Redirect . . . . . . . . . . . . . . . . . . . . . .  32  4.11. TLS Terminating Reverse Proxies . . . . . . . . . . . . .  33  4.12. Refresh Token Protection . . . . . . . . . . . . . . . .  34  4.12.1. Discussion . . . . . . . . . . . . . . . . . . . . .  34  4.12.2. Recommendations . . . . . . . . . . . . . . . . . .  35  4.13. Client Impersonating Resource Owner . . . . . . . . . . .  36  4.13.1. Countermeasures . . . . . . . . . . . . . . . . . .  36  4.14. Clickjacking . . . . . . . . . . . . . . . . . . . . . .  36  5. Acknowledgements . . . . . . . . . . . . . . . . . . . . . .  37  6. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  38  7. Security Considerations . . . . . . . . . . . . . . . . . . .  38  8. Normative References . . . . . . . . . . . . . . . . . . . .  38  9. Informative References . . . . . . . . . . . . . . . . . . .  39  Appendix A. Document History . . . . . . . . . . . . . . . . . .  42 Authors&#39; Addresses . . . . . . . . . . . . . . . . . . . . . . .  46  1. Introduction Since its publication in [ RFC6749] and [ RFC6750], OAuth 2.0 (&#34;OAuth&#34; in the following) has gotten massive traction in the market and became the standard for API protection and the basis for federated login using OpenID Connect [ OpenID]. While OAuth is used in a variety of scenarios and different kinds of deployments, the following challenges can be observed: * OAuth implementations are being attacked through known implementation weaknesses and anti-patterns. Although most of these threats are discussed in the OAuth 2.0 Threat Model and Security Considerations [ RFC6819], continued exploitation demonstrates a need for more specific recommendations, easier to implement mitigations, and more defense in depth. * OAuth is being used in environments with higher security requirements than considered initially, such as Open Banking, eHealth, eGovernment, and Electronic Signatures. Those use cases call for stricter guidelines and additional protection. * OAuth is being used in much more dynamic setups than originally anticipated, creating new challenges with respect to security. Those challenges go beyond the original scope of [ RFC6749], [ RFC6750], and [ RFC6819]. Lodderstedt, et al. Expires 7 October 2020 [Page 3]\n  Internet-Draft oauth-security-topics April 2020 OAuth initially assumed a static relationship between client, authorization server and resource servers. The URLs of AS and RS were known to the client at deployment time and built an anchor for the trust relationship among those parties. The validation whether the client talks to a legitimate server was based on TLS server authentication (see  [RFC6819], Section\u00a04.5.4). With the increasing adoption of OAuth, this simple model dissolved and, in several scenarios, was replaced by a dynamic establishment of the relationship between clients on one side and the authorization and resource servers of a particular deployment on the other side. This way, the same client could be used to access services of different providers (in case of standard APIs, such as e-mail or OpenID Connect) or serve as a frontend to a particular tenant in a multi-tenancy environment. Extensions of OAuth, such as the OAuth 2.0 Dynamic Client Registration Protocol [ RFC7591] and OAuth 2.0 Authorization Server Metadata [ RFC8414] were developed in order to support the usage of OAuth in dynamic scenarios. * Technology has changed. For example, the way browsers treat fragments when redirecting requests has changed, and with it, the implicit grant&#39;s underlying security model. This document provides updated security recommendations to address these challenges. It does not supplant the security advice given in [ RFC6749], [ RFC6750], and [ RFC6819], but complements those documents.  1.1. Structure The remainder of this document is organized as follows: The next section summarizes the most important recommendations of the OAuth working group for every OAuth implementor. Afterwards, the updated the OAuth attacker model is presented. Subsequently, a detailed analysis of the threats and implementation issues that can be found in the wild today is given along with a discussion of potential countermeasures.  1.2. Conventions and Terminology The key words &#34;MUST&#34;, &#34;MUST NOT&#34;, &#34;REQUIRED&#34;, &#34;SHALL&#34;, &#34;SHALL NOT&#34;, &#34;SHOULD&#34;, &#34;SHOULD NOT&#34;, &#34;RECOMMENDED&#34;, &#34;NOT RECOMMENDED&#34;, &#34;MAY&#34;, and &#34;OPTIONAL&#34; in this document are to be interpreted as described in  BCP  14 [ RFC2119] [ RFC8174] when, and only when, they appear in all capitals, as shown here. This specification uses the terms &#34;access token&#34;, &#34;authorization endpoint&#34;, &#34;authorization grant&#34;, &#34;authorization server&#34;, &#34;client&#34;, &#34;client identifier&#34; (client ID), &#34;protected resource&#34;, &#34;refresh Lodderstedt, et al. Expires 7 October 2020 [Page 4]\n  Internet-Draft oauth-security-topics April 2020 token&#34;, &#34;resource owner&#34;, &#34;resource server&#34;, and &#34;token endpoint&#34; defined by OAuth 2.0 [ RFC6749].  2. Recommendations This section describes the set of security mechanisms the OAuth working group recommends to OAuth implementers.  2.1. Protecting Redirect-Based Flows When comparing client redirect URIs against pre-registered URIs, authorization servers MUST utilize exact string matching. This measure contributes to the prevention of leakage of authorization codes and access tokens (see  Section 4.1). It can also help to detect mix-up attacks (see  Section 4.4). Clients MUST NOT expose URLs that forward the user&#39;s browser to arbitrary URIs obtained from a query parameter (&#34;open redirector&#34;). Open redirectors can enable exfiltration of authorization codes and access tokens, see  Section 4.9.1. Clients MUST prevent Cross-Site Request Forgery (CSRF). In this context, CSRF refers to requests to the redirection endpoint that do not originate at the authorization server, but a malicious third party (see  Section\u00a04.4.1.8. of [RFC6819] for details). Clients that have ensured that the authorization server supports PKCE [ RFC7636] MAY rely the CSRF protection provided by PKCE. In OpenID Connect flows, the &#34;nonce&#34; parameter provides CSRF protection. Otherwise, one-time use CSRF tokens carried in the &#34;state&#34; parameter that are securely bound to the user agent MUST be used for CSRF protection (see  Section 4.7.1). In order to prevent mix-up attacks (see  Section 4.4), clients MUST only process redirect responses of the authorization server they sent the respective request to and from the same user agent this authorization request was initiated with. Clients MUST store the authorization server they sent an authorization request to and bind this information to the user agent and check that the authorization request was received from the correct authorization server. Clients MUST ensure that the subsequent token request, if applicable, is sent to the same authorization server. Clients SHOULD use distinct redirect URIs for each authorization server as a means to identify the authorization server a particular response came from. An AS that redirects a request potentially containing user credentials MUST avoid forwarding these user credentials accidentally (see  Section 4.10 for details). Lodderstedt, et al. Expires 7 October 2020 [Page 5]\n  Internet-Draft oauth-security-topics April 2020  2.1.1. Authorization Code Grant Clients MUST prevent injection (replay) of authorization codes into the authorization response by attackers. The use of PKCE [ RFC7636] is RECOMMENDED to this end. The OpenID Connect &#34;nonce&#34; parameter and ID Token Claim [ OpenID] MAY be used as well. The PKCE challenge or OpenID Connect &#34;nonce&#34; MUST be transaction-specific and securely bound to the client and the user agent in which the transaction was started. Note: although PKCE so far was designed as a mechanism to protect native apps, this advice applies to all kinds of OAuth clients, including web applications. When using PKCE, clients SHOULD use PKCE code challenge methods that do not expose the PKCE verifier in the authorization request. Otherwise, attackers that can read the authorization request (cf. Attacker A4 in  Section 3) can break the security provided by PKCE. Currently, &#34;S256&#34; is the only such method. Authorization servers MUST support PKCE [ RFC7636]. Authorization servers MUST provide a way to detect their support for PKCE. To this end, they MUST either (a) publish the element &#34;code_challenge_methods_supported&#34; in their AS metadata ([ RFC8414]) containing the supported PKCE challenge methods (which can be used by the client to detect PKCE support) or (b) provide a deployment- specific way to ensure or determine PKCE support by the AS.  2.1.2. Implicit Grant The implicit grant (response type &#34;token&#34;) and other response types causing the authorization server to issue access tokens in the authorization response are vulnerable to access token leakage and access token replay as described in  Section 4.1,  Section 4.2,  Section 4.3, and  Section 4.6. Moreover, no viable mechanism exists to cryptographically bind access tokens issued in the authorization response to a certain client as it is recommended in  Section 2.2. This makes replay detection for such access tokens at resource servers impossible. In order to avoid these issues, clients SHOULD NOT use the implicit grant (response type &#34;token&#34;) or other response types issuing access tokens in the authorization response, unless access token injection in the authorization response is prevented and the aforementioned token leakage vectors are mitigated. Lodderstedt, et al. Expires 7 October 2020 [Page 6]\n  Internet-Draft oauth-security-topics April 2020 Clients SHOULD instead use the response type &#34;code&#34; (aka authorization code grant type) as specified in  Section 2.1.1 or any other response type that causes the authorization server to issue access tokens in the token response, such as the &#34;code id_token&#34; response type. This allows the authorization server to detect replay attempts by attackers and generally reduces the attack surface since access tokens are not exposed in URLs. It also allows the authorization server to sender-constrain the issued tokens (see next section).  2.2. Token Replay Prevention A sender-constrained access token scopes the applicability of an access token to a certain sender. This sender is obliged to demonstrate knowledge of a certain secret as prerequisite for the acceptance of that token at the recipient (e.g., a resource server). Authorization and resource servers SHOULD use mechanisms for sender- constrained access tokens to prevent token replay as described in  Section 4.8.1.1.2. The use of Mutual TLS for OAuth 2.0 [ RFC8705] is RECOMMENDED. Refresh tokens MUST be sender-constrained or use refresh token rotation as described in  Section 4.12. It is RECOMMENDED to use end-to-end TLS. If TLS traffic needs to be terminated at an intermediary, refer to  Section 4.11 for further security advice.  2.3. Access Token Privilege Restriction The privileges associated with an access token SHOULD be restricted to the minimum required for the particular application or use case. This prevents clients from exceeding the privileges authorized by the resource owner. It also prevents users from exceeding their privileges authorized by the respective security policy. Privilege restrictions also help to reduce the impact of access token leakage. In particular, access tokens SHOULD be restricted to certain resource servers (audience restriction), preferably to a single resource server. To put this into effect, the authorization server associates the access token with certain resource servers and every resource server is obliged to verify, for every request, whether the access token sent with that request was meant to be used for that particular resource server. If not, the resource server MUST refuse to serve the respective request. Clients and authorization servers MAY utilize the parameters &#34;scope&#34; or &#34;resource&#34; as specified in [ RFC6749] and [ I-D.ietf-oauth-resource-indicators], respectively, to determine the resource server they want to access. Lodderstedt, et al. Expires 7 October 2020 [Page 7]\n  Internet-Draft oauth-security-topics April 2020 Additionally, access tokens SHOULD be restricted to certain resources and actions on resource servers or resources. To put this into effect, the authorization server associates the access token with the respective resource and actions and every resource server is obliged to verify, for every request, whether the access token sent with that request was meant to be used for that particular action on the particular resource. If not, the resource server must refuse to serve the respective request. Clients and authorization servers MAY utilize the parameter &#34;scope&#34; as specified in [ RFC6749] and &#34;authorization_details&#34; as specified in [ I-D.ietf-oauth-rar] to determine those resources and/or actions.  2.4. Resource Owner Password Credentials Grant The resource owner password credentials grant MUST NOT be used. This grant type insecurely exposes the credentials of the resource owner to the client. Even if the client is benign, this results in an increased attack surface (credentials can leak in more places than just the AS) and users are trained to enter their credentials in places other than the AS. Furthermore, adapting the resource owner password credentials grant to two-factor authentication, authentication with cryptographic credentials (cf. WebCrypto [ webcrypto], WebAuthn [ webauthn]), and authentication processes that require multiple steps can be hard or impossible.  2.5. Client Authentication Authorization servers SHOULD use client authentication if possible. It is RECOMMENDED to use asymmetric (public-key based) methods for client authentication such as mTLS [ RFC8705] or &#34;private_key_jwt&#34; [ OpenID]. When asymmetric methods for client authentication are used, authorization servers do not need to store sensitive symmetric keys, making these methods more robust against a number of attacks.  2.6. Other Recommendations Authorization servers SHOULD NOT allow clients to influence their &#34;client_id&#34; or &#34;sub&#34; value or any other claim if that can cause confusion with a genuine resource owner (see  Section 4.13). Lodderstedt, et al. Expires 7 October 2020 [Page 8]\n  Internet-Draft oauth-security-topics April 2020  3. The Updated OAuth 2.0 Attacker Model In [ RFC6819], an attacker model is laid out that describes the capabilities of attackers against which OAuth deployments must be protected. In the following, this att\n......", "posttime": "2020-05-05 23:54:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f53\u524d,current,oauth", "title": "OAuth 2.0\u5b89\u5168\u6700\u4f73\u5f53\u524d\u5b9e\u8df5", "title_en": "OAuth 2.0 Security Best Current Practice", "transed": 1, "url": "https://tools.ietf.org/html/draft-ietf-oauth-security-topics-15", "via": "", "real_tags": ["\u5f53\u524d", "current", "oauth"]}, {"category": "", "categoryclass": "", "imagename": "e143cdc76004a381ee210eb9db2ac105.png", "infoid": 1000781, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u521a\u521a\u5f00\u6e90\u4e86\u201cReaction Flow\u201d\uff1a\u4e00\u4e2a\u7528\u4e8e\u5448\u73b0\u57fa\u4e8e\u8282\u70b9\u7684\u4ea4\u4e92\u5f0f\u56fe\u5f62\u7684\u5e93\uff0c\u5b83\u5177\u6709\u6d41\u7545\u7684\u5e73\u79fb\u548c\u7f29\u653e\u884c\u4e3a\uff0c\u6709\u5f88\u591a\u4e0d\u9519\u7684\u529f\u80fd\uff0c\u751a\u81f3\u8fd8\u6709\u4e00\u4e9b\u6709\u7528\u7684\u63d2\u4ef6\uff0c\u6bd4\u5982\u8ff7\u4f60\u5730\u56fe\uff01\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684Reaction Flow\u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b\u3002\u5982\u679c\u60a8\u60f3\u66f4\u5feb\u5165\u95e8\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f6c\u5230\u6587\u6863\u6216\u67e5\u770b\u6f14\u793a\uff1a\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5f00\u53d1\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u57fa\u4e8e\u8282\u70b9\u7684\u5de5\u5177\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u6536\u5230\u60a8\u7684\u6d88\u606f\uff1a[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]\u3002\nReaction Flow\u4e0d\u4ec5\u5448\u73b0\u56fe\u5f62\uff0c\u8fd8\u589e\u52a0\u4e86\u4ea4\u4e92\u6027\uff0c\u5e76\u9644\u5e26\u4e86\u8bb8\u591a\u5185\u7f6e\u529f\u80fd\uff1a\n\u4e3a\u4e86\u4f7f\u8fd9\u4e2a\u5e93\u5c3d\u53ef\u80fd\u7075\u6d3b\uff0c\u9664\u4e86\u4f4d\u7f6e\u4e4b\u5916\uff0c\u6211\u4eec\u4e0d\u505a\u4efb\u4f55\u72b6\u6001\u66f4\u65b0\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u81ea\u5df1\u4f20\u9012\u66f4\u6539\u663e\u793a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u51fd\u6570\u3002\u60a8\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u9644\u5e26\u7684\u5e2e\u52a9\u5668\u51fd\u6570\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7NPM\u5b89\u88c5Reaction Flow\u3002\u9057\u61be\u7684\u662f\uff0cReaction-Flow\u5df2\u7ecf\u88ab\u83b7\u53d6\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5b89\u88c5Reaction-Flow-\u6e32\u67d3\u5668\uff1a\n\u73b0\u5728\u60a8\u53ef\u4ee5\u5c06\u5176\u96c6\u6210\u5230\u60a8\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\u7b80\u5355\u7684\u56fe\u8868\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u4ece&#39\uff1bREACT&#39\uff1b\u5bfc\u5165ReactFlow\u4ece&#39\uff1bREACT-FLOW-RENDER&#39\uff1b\uff1b\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a250\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 2&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1be1-2&#39\uff1b\uff0c\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b2&#39\uff1b\uff0c\u52a8\u753b\uff1atrue}]\uff1b\u5e38\u91cf\u56fe\u5f62\u6837\u5f0f={\u5bbd\u5ea6\uff1a&#39\uff1b100%&#39\uff1b\uff0c\u9ad8\u5ea6\uff1a&#39\uff1b500px&#39\uff1b}\uff1b\u5e38\u91cf\u57fa\u672c\u56fe\u5f62=()=&lt\uff1bReactFlow Elements={Elements}style={raphStyles}/&gt\uff1b\uff1b\n\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u6b63\u5728\u5c06\u5143\u7d20\u4f20\u9012\u7ed9ReactFlow\u7ec4\u4ef6\u3002\u5728\u5143\u7d20\u5217\u8868\u4e2d\u6709\u4e24\u4e2a\u8282\u70b9\u548c\u5c06\u8fd9\u4e9b\u8282\u70b9\u5f7c\u6b64\u8fde\u63a5\u7684\u8fb9\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6e90\u5c5e\u6027\u548c\u76ee\u6807\u5c5e\u6027\u7684\u5b58\u5728\u6765\u6807\u8bc6\u8fb9\u3002\u8282\u70b9\u6709\u4e00\u4e9b\u521d\u59cb\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u4f1a\u91cd\u53e0\u3002\u6211\u4eec\u8fd8\u4f20\u9012\u4e86\u4e00\u4e2a\u6837\u5f0f\uff0c\u4ee5\u4fbf\u83b7\u5f97\u4e00\u4e9b\u7a7a\u95f4\u6765\u5448\u73b0\u56fe\u5f62\u3002\u60a8\u53ef\u4ee5\u5728\u6587\u6863\u4e2d\u627e\u5230\u5b8c\u6574\u7684\u9009\u9879\u5217\u8868\u3002\u4e0a\u9762\u7684\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a\n\u56fe\u5f62\u51e0\u4e4e\u603b\u662f\u5177\u6709\u4e0d\u540c\u7684\u8282\u70b9\u7c7b\u578b\u3002\u53cd\u5e94\u6d41\u6709\u4e09\u79cd\u57fa\u672c\u7c7b\u578b\uff1a\u8f93\u5165\u3001\u9ed8\u8ba4\u548c\u8f93\u51fa\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8282\u70b9\u7684\u7c7b\u578b\u5c5e\u6027\u9009\u62e9\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1b\u8f93\u5165\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u9ed8\u8ba4&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1b\u9ed8\u8ba4\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1b3&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u51fa&#39\uff1b\uff0c\u6570\u636e\uff1a{label\uff1a&#39\uff1b\u8f93\u51fa\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a200}}]\uff1b\n\u5982\u60a8\u6240\u89c1\uff0c\u5141\u8bb8\u60a8\u8fde\u63a5\u8282\u70b9\u7684\u53e5\u67c4\u548c\u7c7b\u578b\u7684\u989c\u8272\u662f\u4e0d\u540c\u7684\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u5e26\u6709CSS\u89c4\u5219\u7684\u6807\u7b7e\u548c\u6837\u5f0f\u5bf9\u8c61\u6765\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u73b0\u6709\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u6837\u5f0f\uff1a{\u80cc\u666f\uff1a&#39\uff1b#ffcc50&#39\uff1b\uff0c\u5bbd\u5ea6\uff1a100}\uff0c\u6570\u636e\uff1a{label\uff1a&#39\uff1b\u81ea\u5b9a\u4e49\u6837\u5f0f&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a5}}]\uff1b\n\u53cd\u5e94\u6d41\u5177\u6709\u4ee5\u4e0b\u8fb9\u7c7b\u578b\uff1a\u76f4\u3001\u9ed8\u8ba4\u3001\u9636\u8dc3\u3002\u4e0e\u8282\u70b9\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u7c7b\u578b\u4f20\u9012\u7ed9\u5143\u7d20\u5217\u8868\u4e2d\u7684\u8fb9\u6765\u9009\u62e9\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a5\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 2&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1b3&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 3&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a250\uff0cy\uff1a150}}\uff0c{id\uff1a&#39\uff1b4&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 4&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a500\uff0cy\uff1a200}}\uff0c{id\uff1a&#39\uff1bE1-2&39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b2&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u76f4\u901a&#39\uff1b}\uff0c{id\uff1a&#39\uff1bE1-3&39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b3&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u9ed8\u8ba4&#39\uff1b}\uff0c{id\uff1a&#39\uff1bE1-4&#39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b4&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u6b65\u9aa4&#39\uff1b}]\uff1b\n\u5982\u679c\u60a8\u60f3\u521b\u5efa\u81ea\u5b9a\u4e49\u8282\u70b9\u6216\u8fb9\u7c7b\u578b\uff0c\u53ef\u4ee5\u67e5\u770b\u81ea\u5b9a\u4e49\u8282\u70b9\u793a\u4f8b\u7684\u6e90\u4ee3\u7801\u3002\u5728\u90a3\u91cc\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8282\u70b9\u7ec4\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u5c06\u5176\u4f5c\u4e3anodeTypes\u5c5e\u6027\u4f20\u9012\u7ed9Reaction\u6d41\u7ec4\u4ef6\uff0c\u4f7f\u5176\u5728\u5448\u73b0\u5668\u4e2d\u53ef\u7528\u3002\n\u6b63\u5982\u6211\u5728\u524d\u9762\u6307\u51fa\u7684\uff0cReaction\u6d41\u5177\u6709\u4e00\u4e9b\u57fa\u672c\u7684\u4ea4\u4e92\u6027\uff0c\u4f46\u4e0d\u4f1a\u5bf9\u5448\u73b0\u7684\u5143\u7d20\u8fdb\u884c\u72b6\u6001\u66f4\u65b0\u3002\u60a8\u53ef\u4ee5\u7f29\u653e\u3001\u5e73\u79fb\u548c\u62d6\u52a8\u6216\u9009\u62e9\u5143\u7d20\uff0c\u4f46\u662f\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u6216\u5220\u9664\u8282\u70b9\uff0c\u4f8b\u5982\uff0c\u60a8\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6216\u8005\u4f7f\u7528Reaction\u6d41\u5e2e\u52a9\u5668\u51fd\u6570\u4e4b\u4e00\u3002\u6bcf\u5f53Reaction\u6d41\u7ec4\u4ef6\u4e0a\u7684\u5143\u7d20\u5c5e\u6027\u66f4\u6539\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u91cd\u65b0\u5448\u73b0\u56fe\u5f62\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\uff0c\u60a8\u9700\u8981\u5c06\u4e00\u4e2a\u65b0\u8282\u70b9\u63a8\u9001\u5230Elements\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9Reaction\u6d41\u7ec4\u4ef6\u3002\u5982\u679c\u8981\u5220\u9664\u8282\u70b9\uff0c\u5219\u9700\u8981\u901a\u8fc7\u5c06\u51fd\u6570\u4f20\u9012\u7ed9onElementsRemove prop\u6765\u4fa6\u542cRemove\u4e8b\u4ef6\uff1a\n\u5bfc\u5165React\uff0c{useState}\u4ece&#39\uff1bReaction\uff1b\u5bfc\u5165ReactFlow\uff0c{removeElements}\u4ece&#39\uff1bReact-Flow-Renender&#39\uff1b\uff1bconst initialElements=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a5\uff0cy\uff1a5}}]\uff1bconst Graph=()=&gt\uff1b{const[Elements\uff0csetElements]=useState(InitialElements)\uff1bconst onElementsRemove=(ElementsToRemove)=&gt\uff1bsetElements(Els=&gt\uff1bremoveElements(elementsToRemove\uff0cEls))\uff1bReturn(&lt\uff1bReactFlow Elements={Elements}style={raphStyles}onElementsRemove={onElement\u3002\nReaction Flow\u9644\u5e26\u4e24\u4e2a\u63d2\u4ef6\uff1a\u56fe\u5f62\u63a7\u4ef6\u548c\u8ff7\u4f60\u5730\u56fe\u3002\u63a7\u5236\u9762\u677f\u5e26\u6709\u4e00\u4e2a\u653e\u5927\u3001\u7f29\u5c0f\u548c\u7126\u70b9\u56fe\u6309\u94ae\u3002\u60a8\u53ef\u4ee5\u5c06CSS\u6837\u5f0f\u4f20\u9012\u7ed9\u5b83\u6216\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u9ed8\u8ba4\u6837\u5f0f\uff1a\n\u5982\u679c\u60a8\u60f3\u8981\u5c06\u8fd9\u4e9b\u63d2\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684\u56fe\u8868\u4e2d\uff0c\u60a8\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u4f5c\u4e3a\u5b50\u7ea7\u4f20\u9012\u7ed9\u60a8\u7684Reaction\u6d41\u7ec4\u4ef6\uff1a\n\u4ece&#39\uff1bREACT&#39\uff1b\u5bfc\u5165ReactFlow\uff0c{Minimap\uff0cControls}\u4ece&#39\uff1bREACT-FLOW-RENDER&#39\uff1b\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a0\uff0cy\uff1a0}}]\uff1bconst Graph=()=&gt\uff1b{return(&lt\uff1bReactFlow Elements={Elements}style={{width\uff1a&#39\uff1b100%&#39\uff1b\uff0cHeight\uff1a&#39\uff1b500px&#39\uff1b}})&gt\uff1b&lt\uff1b\u6700\u5c0f\u5730\u56fe\u8282\u70b9\u989c\u8272={n=&gt\uff1b{if(n.type=&#39\uff1binput&#39\uff1b)return&#39\uff1bBlue&#39\uff1bif(n.type=&\u3002\u8f93\u51fa&#39\uff1b)\u8fd4\u56de&#39\uff1b\u7eff\u8272&39\uff1b\uff1b\u5982\u679c(n.type=&#39\uff1b\u9ed8\u8ba4\u503c&#39\uff1b)\u8fd4\u56de&#39\uff1b\u7ea2\u8272&39\uff1b\uff1b\u8fd4\u56de&#39\uff1b\u7070\u8272&39\uff1b\uff1b}}/&gt\uff1b&lt\uff1b\u63a7\u4ef6/&gt\uff1b)\uff1b}\u3002\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528nodeColor\u5c5e\u6027\u6765\u66f4\u6539\u663e\u793a\u8282\u70b9\u7684\u989c\u8272\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528nodeColor\u3001nodeBorderRadius\u3001maskColor\u6216style\u5c5e\u6027\u6765\u8c03\u6574\u8ff7\u4f60\u5730\u56fe\u7684\u5916\u89c2\u3002\n\u6211\u5e0c\u671b\u6211\u80fd\u7ed9\u4f60\u4eec\u4e00\u4e2a\u5f88\u597d\u7684\u53cd\u5e94\u6d41\u7a0b\u6982\u8ff0\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u6216\u610f\u89c1\uff0c\u8bf7\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u6216Twitter\u4e0e\u6211\u8054\u7cfb\uff0c\u6216\u5728Github\u4e0a\u53d1\u5e03\u95ee\u9898\u3002\u795d\u5927\u5bb6\u4e07\u4e8b\u5982\u610f\uff0c\u4e07\u4e8b\u5982\u610f\uff01", "note_en": "We just open sourced  \u201cReact Flow\u201d:  A library for rendering interactive node-based graphs with a smooth panning and zooming behaviour and lots of nice features and even some useful plugins like a mini map!\n In this post I will show you a simple example of a React Flow application. If you want to start even faster you can directly go to the  documentation or check out the demo:\n  If we can help you to develop a custom node-based tool we are happy to hear from you:   [email\u00a0protected].\n  React Flow not only renders a graph but also adds interactivity and comes with a lot of built-in features:\n  In order to make this library as flexible as possible we don\u2019t do any state updates besides the positions. This means that you need to pass all functions that change the displayed nodes and edges by yourself. You can implement your own ones or use the  helper functions that come with the library.\n  You can install React Flow via npm. Unfortunately  react-flow was already taken so you need to install  react-flow-renderer:\n  You can now integrate it in your React application. A simple graph could like like this:\n import React  from  &#39;react&#39; ; import ReactFlow  from  &#39;react-flow-renderer&#39; ; const elements  =  [  { id :  &#39;1&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  250 , y :  5  }  } ,  { id :  &#39;2&#39; , data :  { label :  &#39;Node 2&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;e1-2&#39; , source :  &#39;1&#39; , target :  &#39;2&#39; , animated :  true  } ] ; const graphStyles  =  { width :  &#39;100%&#39; , height :  &#39;500px&#39;  } ; const  BasicGraph  =  ( )  =&gt;  &lt;ReactFlow elements = {elements } style = {graphStyles }  / &gt; ;\n As you can see we are passing  elements to the ReactFlow component. In the list of elements there are two nodes and an edge that connects these nodes with each other. You can identify the edge by the presence of a  source and  target attribute. The nodes have some initial positions so that they dont overlap. We are also passing a  style in order to get some space for rendering the graph. You can find a full list of options in the  documenation. The example above would like this:\n   A graph almost always has different node types. React Flow comes with three basic types:  input,  default and  output.You can select the type by using the  type attribute of a node:\n const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Input node&#39;  } , position :  { x :  100 , y :  5  }  } ,  { id :  &#39;2&#39; , type :  &#39;default&#39; , data :  { label :  &#39;Default node&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;3&#39; , type :  &#39;output&#39; , data :  { label :  &#39;Output node&#39;  } , position :  { x :  100 , y :  200  }  } ] ;\n   As you can see the handles which allows you to connect nodes and the color of the types are different.You can customize these existing types by passing a  label and also a  style object with css rules:\n const elements  =  [ { id :  &#39;1&#39; , style :  { background :  &#39;#ffcc50&#39; , width :  100  } , data :  { label :  &#39;custom style&#39;  } , position :  { x :  100 , y :  5  } } ] ;\n   React Flow has the following edge types:  straight,  default,  step. As with the nodes you can select the type by passing it to the edge in the elements list:\n const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  5 , y :  5  }  } ,  { id :  &#39;2&#39; , data :  { label :  &#39;Node 2&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;3&#39; , data :  { label :  &#39;Node 3&#39;  } , position :  { x :  250 , y :  150  }  } ,  { id :  &#39;4&#39; , data :  { label :  &#39;Node 4&#39;  } , position :  { x :  500 , y :  200  }  } ,  { id :  &#39;e1-2&#39; , source :  &#39;1&#39; , target :  &#39;2&#39; , type :  &#39;straight&#39;  } ,  { id :  &#39;e1-3&#39; , source :  &#39;1&#39; , target :  &#39;3&#39; , type :  &#39;default&#39;  } ,  { id :  &#39;e1-4&#39; , source :  &#39;1&#39; , target :  &#39;4&#39; , type :  &#39;step&#39;  } ] ;\n   If you want like to create a custom node or edge type you can look at the  source of the custom node example. There we implement a custom node component and then make it available within the renderer by passing it to the React Flow component as a  nodeTypes property.\n  As I pointed out earlier React Flow comes with some basic interactivity but doesn\u2019t do state updates for the rendered elements. You can zoom and pan and drag or select elements but if you want to add or remove a node for example you need to implement the function by yourself or use one of the  React Flow helper functions. Whenever the elements property change on the React Flow component we re-render the graph. So if you want to add a node for example you need to push a new node to your elements array and pass it to the React Flow component. If you want to remove a node you need to listen to the remove event by passing a function to  onElementsRemove prop:\n import React ,  { useState  }  from  &#39;react&#39; ; import ReactFlow ,  { removeElements  }  from  &#39;react-flow-renderer&#39; ; const initialElements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  5 , y :  5  }  } ] ; const  Graph  =  ( )  =&gt;  {  const  [elements , setElements ]  =  useState (initialElements ) ;  const  onElementsRemove  =  ( elementsToRemove )  =&gt;  setElements ( els  =&gt;  removeElements (elementsToRemove , els ) ) ;  return  (  &lt;ReactFlow elements = {elements } style = {graphStyles } onElementsRemove = {onElementsRemove }  / &gt;  ) ; }\n  React Flow comes with two  plugins:  Graph controls and a  mini map. The controls panel comes with a zoom-in, zoom-out and focus-graph button. You can pass css styles to it or use the default styles which look like this:\n    If you want to add these plugins to your graph you just need to pass them as childrens to your React Flow component:\n import React ,  { useState  }  from  &#39;react&#39; ; import ReactFlow ,  { MiniMap , Controls  }  from  &#39;react-flow-renderer&#39; ; const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node&#39;  } , position :  { x :  0 , y :  0  }  } ] ; const  Graph  =  ( )  =&gt;  {  return  (  &lt;ReactFlow elements = {elements } style = { { width :  &#39;100%&#39; , height :  &#39;500px&#39;  } }  &gt;  &lt;MiniMap nodeColor = { n  =&gt;  {  if  (n .type  ===  &#39;input&#39; )  return  &#39;blue&#39; ;  if  (n .type  ===  &#39;output&#39; )  return  &#39;green&#39; ;  if  (n .type  ===  &#39;default&#39; )  return  &#39;red&#39; ;  return  &#39;gray&#39; ;  } }  / &gt;  &lt;Controls  / &gt;  ) ; }\n In the above example we are using the  nodeColor property to change the color of displayed nodes.You can adjust the look of the mini map by using the  nodeColor,  nodeBorderRadius,  maskColor or  style properties.\n  I hope that I could give you a good overview of React Flow. If you have any questions or remarks, feel free to contact me via  mail or  twitter or post an  issue on Github. Best wishes and stay safe everyone!", "posttime": "2020-05-05 23:54:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "flow,\u8282\u70b9,node", "title": "Reaction-Flow\uff1a\u521b\u5efa\u57fa\u4e8e\u8282\u70b9\u7684\u4ea4\u4e92\u5f0f\u56fe\u5f62\u7684\u5e93", "title_en": "React-flow: a library to create interactive node-based graphs", "transed": 1, "url": "https://webkid.io/blog/react-flow-node-based-graph-library/", "via": "", "real_tags": ["flow", "\u8282\u70b9", "node"]}]