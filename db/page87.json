[{"category": "", "categoryclass": "", "imagename": "058c4ae148ef75213c4e304169d6d8f8.png", "infoid": 1006051, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Apache Pinot\u662f\u4e00\u4e2a\u5b9e\u65f6\u5206\u5e03\u5f0fOLAP\u6570\u636e\u5b58\u50a8\uff0c\u65e8\u5728\u4ee5\u4f4e\u5ef6\u8fdf\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u5b9e\u65f6\u5206\u6790\u3002\nPinot\u901a\u8fc7\u5176\u5728\u975eBLOB\u5217\u4e0a\u7684\u7d22\u5f15\u652f\u6301\u8d85\u5feb\u7684\u67e5\u8be2\u5904\u7406\u3002\u5177\u6709\u7cbe\u786e\u5339\u914d\u8fc7\u6ee4\u5668\u7684\u67e5\u8be2\u901a\u8fc7\u5b57\u5178\u7f16\u7801\u3001\u5012\u6392\u7d22\u5f15\u548c\u6392\u5e8f\u7d22\u5f15\u7684\u7ec4\u5408\u9ad8\u6548\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4efb\u610f\u6587\u672c\u641c\u7d22\u67e5\u8be2\u4e0d\u80fd\u5229\u7528\u7d22\u5f15\uff0c\u9700\u8981\u5168\u8868\u626b\u63cf\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5728Pinot\u4e2d\u65b0\u589e\u7684\u5bf9\u6587\u672c\u7d22\u5f15\u7684\u652f\u6301\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u5b83\u4eec\u7528\u4e8e\u9ad8\u6548\u7684\u5168\u6587\u641c\u7d22\u67e5\u8be2\u3002\n\u5728\u4e0a\u9762\u7684\u67e5\u8be2\u4e2d\uff0c\u6211\u4eec\u5bf9\u6ca1\u6709\u7d22\u5f15\u7684FirstName\u5217\u8fdb\u884c\u7cbe\u786e\u5339\u914d\u3002\u6267\u884c\u5f15\u64ce\u5c06\u67e5\u627e\u5339\u914d\u7684docID(\u4e5f\u79f0\u4e3arowId)\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5982\u679cFirstName\u5217\u4e0a\u6709\u5012\u6392\u7d22\u5f15\uff0c\u5219\u5c06\u4f7f\u7528dictionaryId\u67e5\u627e\u5012\u6392\u7d22\u5f15\uff0c\u800c\u4e0d\u662f\u626b\u63cf\u6b63\u5411\u7d22\u5f15\u3002\n\u5982\u679c\u8868\u6309FirstName\u5217\u6392\u5e8f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528dictionaryId\u67e5\u627e\u6392\u5e8f\u540e\u7684\u7d22\u5f15\uff0c\u5e76\u83b7\u5f97\u503c\u4e3a\u201cJohn\u201d\u7684\u6240\u6709\u884c\u7684\u5f00\u59cb\u548c\u7ed3\u675fdocID\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u5728\u5177\u67095\u4ebf\u884c\u548c\u9009\u62e9\u6027(\u901a\u8fc7\u7b5b\u9009\u5668\u7684\u884c\u6570)1.5\u4ebf\u884c\u7684\u6570\u636e\u96c6\u4e0a\u4f7f\u7528\u548c\u4e0d\u4f7f\u7528\u7d22\u5f15\u7684\u7cbe\u786e\u5339\u914d\u67e5\u8be2\u7684\u5ef6\u8fdf\u3002\n\u5982\u679c\u7528\u6237\u5bf9\u8fdb\u884c\u4efb\u610f\u6587\u672c\u641c\u7d22\u611f\u5174\u8da3\u600e\u4e48\u529e\uff1f\u76ee\u524d\uff0cPinot\u901a\u8fc7\u5185\u7f6e\u51fd\u6570REGEXP_LIKE\u652f\u6301\u6b64\u529f\u80fd\u3002\n\u8c13\u8bcd\u662f\u6b63\u5219\u8868\u8fbe\u5f0f(\u524d\u7f00\u67e5\u8be2)\u3002\u4e0e\u7cbe\u786e\u5339\u914d\u4e0d\u540c\uff0c\u7d22\u5f15\u4e0d\u80fd\u7528\u4e8e\u8bc4\u4f30\u6b63\u5219\u8868\u8fbe\u5f0f\u8fc7\u6ee4\u5668\uff0c\u6211\u4eec\u6c42\u52a9\u4e8e\u5168\u8868\u626b\u63cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u539f\u59cb\u503c\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u201cJohn*\u201d\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\uff0c\u4ee5\u67e5\u627e\u5339\u914d\u7684docID\u3002\n\u5bf9\u4e8e\u843d\u5165BLOB/CLOB\u8303\u56f4\u7684\u4efb\u610f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u7cbe\u786e\u5339\u914d\u3002\u7528\u6237\u5bf9\u5bf9\u7c7b\u4f3cBLOB\u7684\u6570\u636e\u8fdb\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u3001\u77ed\u8bed\u548c\u6a21\u7cca\u67e5\u8be2\u5f88\u611f\u5174\u8da3\u3002\u6b63\u5982\u6211\u4eec\u521a\u624d\u770b\u5230\u7684\uff0cREGEXP_LIKE\u6548\u7387\u975e\u5e38\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u5168\u8868\u626b\u63cf\u3002\u5176\u6b21\uff0c\u5b83\u4e0d\u652f\u6301\u6a21\u7cca\u641c\u7d22\u3002\n\u5728Pinot 0.3.0\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u5bf9\u6587\u672c\u7d22\u5f15\u7684\u652f\u6301\uff0c\u4ee5\u4fbf\u5728\u5b57\u7b26\u4e32\u5217\u4e0a\u9ad8\u6548\u5730\u6267\u884c\u4efb\u610f\u6587\u672c\u641c\u7d22\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5217\u503c\u90fd\u662f\u4e00\u4e2a\u5f02\u6784\u6587\u672c\u7684BLOB\u3002\u6267\u884c\u6807\u51c6\u7684\u8fc7\u6ee4\u64cd\u4f5c(\u76f8\u7b49\u3001\u8303\u56f4\u3001\u4ecb\u4e8e\u3001in)\u4e0d\u9002\u5408\u6587\u672c\u6570\u636e\u3002\n\u5728\u652f\u6301\u6587\u672c\u7d22\u5f15\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0b\u6709\u7d22\u5f15\u548c\u6ca1\u6709\u7d22\u5f15\u7684\u6587\u672c\u641c\u7d22\u67e5\u8be2\u57285\u4ebf\u884c\u548c1.5\u4ebf\u7b5b\u9009\u9009\u62e9\u6027\u7684\u6570\u636e\u96c6\u4e0a\u7684\u6027\u80fd\u3002\n\u4e0e\u5176\u4ed6\u6570\u636e\u5e93\u7d22\u5f15\u4e00\u6837\uff0c\u6587\u672c\u7d22\u5f15\u7684\u76ee\u6807\u662f\u8fdb\u884c\u9ad8\u6548\u7684\u8fc7\u6ee4\u5904\u7406\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002\n\u4e3a\u4e86\u6709\u6548\u5730\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3001\u77ed\u8bed\u548c\u6a21\u7cca\u641c\u7d22\uff0c\u6587\u672c\u7d22\u5f15\u6570\u636e\u7ed3\u6784\u5e94\u8be5\u5177\u6709\u8f83\u5c11\u7684\u57fa\u672c\u6784\u5efa\u5757\u6765\u5b58\u50a8\u5173\u952e\u4fe1\u606f\u3002\n\u5b57\u5178\u5c06\u6bcf\u4e2a\u7d22\u5f15\u9879(\u8bcd)\u6620\u5c04\u5230\u76f8\u5e94\u7684\u5b57\u5178ID\uff0c\u4ee5\u5141\u8bb8\u4f7f\u7528\u56fa\u5b9a\u5bbd\u5ea6\u7684\u6574\u6570\u4ee3\u7801\u4e0e\u539f\u59cb\u503c\u8fdb\u884c\u6709\u6548\u6bd4\u8f83\u3002\n\u5012\u6392\u7d22\u5f15\u5c06\u6bcf\u4e2a\u7d22\u5f15\u9879\u7684dictionaryId\u6620\u5c04\u5230\u76f8\u5e94\u7684docID\u3002\u7cbe\u786e\u5339\u914d\u8bcd\u67e5\u8be2(\u5355\u4e2a\u6216\u591a\u4e2a\u8bcd)\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u548c\u5012\u6392\u7d22\u5f15\u9ad8\u6548\u5730\u56de\u7b54\u3002\n\u77ed\u8bed\u67e5\u8be2(\u4f8b\u5982\u67e5\u627e\u4e0e\u77ed\u8bed\u201c\u673a\u5668\u5b66\u4e60\u201d\u5339\u914d\u7684\u6587\u6863)\u662f\u7cbe\u786e\u672f\u8bed\u67e5\u8be2\u7684\u6269\u5c55\uff0c\u5176\u4e2d\u672f\u8bed\u5728\u5339\u914d\u6587\u6863\u4e2d\u7684\u987a\u5e8f\u5e94\u8be5\u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u4e9b\u67e5\u8be2\u9700\u8981\u4f4d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u5b57\u5178\u548c\u5012\u6392\u7d22\u5f15\u3002\n\u6b63\u5219\u8868\u8fbe\u5f0f\u67e5\u8be2(\u5305\u62ec\u524d\u7f00\u3001\u901a\u914d\u7b26)\u548c\u6a21\u7cca\u67e5\u8be2\u5c06\u9700\u8981\u4e0e\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u672f\u8bed\u8fdb\u884c\u6bd4\u8f83\uff0c\u9664\u975e\u524d\u7f00\u662f\u56fa\u5b9a\u7684\u3002\u5fc5\u987b\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u4fee\u526a\u8fd9\u79cd\u6bd4\u8f83\u3002\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5c06\u8f93\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u4e3a\u6709\u9650\u72b6\u6001\u673a\uff0c\u4f7f\u5f97\u72b6\u6001\u673a\u662f\u786e\u5b9a\u6027\u7684\u5e76\u63a5\u53d7\u4e00\u7ec4\u672f\u8bed\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u72b6\u6001\u673a\u4e0e\u5b57\u5178\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u83b7\u5f97\u72b6\u6001\u673a\u63a5\u53d7\u7684\u6240\u6709\u5339\u914d\u672f\u8bed\u7684\u5b57\u5178ID\u3002\n\u6a21\u7cca\u7f16\u8f91\u8ddd\u79bb\u641c\u7d22\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c06\u67e5\u8be2\u8868\u793a\u4e3a\u57fa\u4e8eLevenshtein\u81ea\u52a8\u673a\u7684\u72b6\u6001\u673a\u5e76\u5c06\u81ea\u52a8\u673a\u4e0e\u5b57\u5178\u76f8\u4ea4\u6765\u6709\u6548\u5730\u5b8c\u6210\u3002\n\u5982\u524d\u6240\u8ff0\uff0cPinot\u7684\u5b57\u5178\u548c\u5012\u6392\u7d22\u5f15\u53ef\u4ee5\u5e2e\u52a9\u9ad8\u6548\u5730\u56de\u7b54\u7cbe\u786e\u5339\u914d\u672f\u8bed\u67e5\u8be2\u3002\u7136\u800c\uff0c\u77ed\u8bed\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u3001\u901a\u914d\u7b26\u3001\u524d\u7f00\u548c\u6a21\u7cca\u67e5\u8be2\u9700\u8981\u4f4d\u7f6e\u4fe1\u606f\u548c\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff0c\u8fd9\u662f\u76ee\u524dPinot\u4e2d\u6ca1\u6709\u7ef4\u62a4\u7684\u3002\n\u6211\u4eec\u4e86\u89e3\u5230Apache Lucene\u6709\u5fc5\u8981\u7684\u7f3a\u5931\u90e8\u5206\uff0c\u5e76\u51b3\u5b9a\u4f7f\u7528\u5b83\u6765\u652f\u6301Pinot\u4e2d\u7684\u5168\u6587\u641c\u7d22\uff0c\u76f4\u5230\u6211\u4eec\u589e\u5f3a\u6211\u4eec\u7684\u7d22\u5f15\u7ed3\u6784\u3002\n\u8ba9\u6211\u4eec\u8ba8\u8bba\u5728Pinot\u4e2d\u521b\u5efaLucene\u6587\u672c\u7d22\u5f15\u4f5c\u4e3a\u4e00\u7cfb\u5217\u5173\u952e\u8bbe\u8ba1\u51b3\u7b56\u548c\u6311\u6218\u3002\n\u76ae\u8bfa\u7684\u8868\u683c\u5b58\u50a8\u683c\u5f0f\u662f\u67f1\u72b6\u7684\u3002\u8868\u7684\u7d22\u5f15\u7ed3\u6784(\u6b63\u5411\u3001\u5012\u6392\u3001\u6392\u5e8f\u3001\u5b57\u5178)\u4e5f\u662f\u5728\u6bcf\u4e2a\u5217\u3001\u6bcf\u4e2a\u6bb5(\u788e\u7247)\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u7684\u3002\u5bf9\u4e8e\u6587\u672c\u7d22\u5f15\uff0c\u6211\u4eec\u51b3\u5b9a\u575a\u6301\u8fd9\u79cd\u57fa\u672c\u8bbe\u8ba1\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\n\u8fdb\u5316\u548c\u7ef4\u62a4\u66f4\u5bb9\u6613\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u542f\u7528\u6216\u7981\u7528\u8868\u7684\u6bcf\u4e00\u5217\u4e0a\u7684\u6587\u672c\u7d22\u5f15\u3002\n\u6211\u4eec\u7684\u6027\u80fd\u5b9e\u9a8c\u8868\u660e\uff0c\u5728Lucene\u4e2d\u8de8\u8868\u7684\u6240\u6709\u542f\u7528\u6587\u672c\u7d22\u5f15\u7684\u5217\u521b\u5efa\u5168\u5c40\u7d22\u5f15\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u5168\u5c40\u7d22\u5f15\u5927\u4e8e\u6bcf\u5217\u7d22\u5f15\uff0c\u8fd9\u4f1a\u589e\u52a0\u641c\u7d22\u65f6\u95f4\u3002\n\u4e0e\u5176\u4ed6\u7d22\u5f15\u4e00\u6837\uff0c\u6587\u672c\u7d22\u5f15\u662f\u4f5c\u4e3a\u521b\u5efa\u76ae\u8bfa\u7247\u6bb5\u7684\u4e00\u90e8\u5206\u521b\u5efa\u7684\u3002\u5bf9\u4e8e\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u83b7\u53d6\u542f\u7528\u4e86\u6587\u672c\u7d22\u5f15\u7684\u5217\u7684\u503c\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u5728\u6587\u6863\u4e2d\u3002\n\u6587\u672c\u5b57\u6bb5-\u5305\u542b\u8868\u793a\u5e94\u7f16\u5236\u7d22\u5f15\u7684\u6587\u672c\u6b63\u6587\u7684\u5b9e\u9645\u5217\u503c(DocValue)\u3002\n\u5b58\u50a8\u5b57\u6bb5-\u5305\u542b\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684docId\u8ba1\u6570\u5668\uff0c\u5c06Lucene\u4e2d\u7d22\u5f15\u7684\u6bcf\u4e2a\u6587\u6863\u53cd\u5411\u6620\u5c04\u56de\u5176\u5728Pinot\u4e2d\u7684docID(RowId)\u3002\u6b64\u5b57\u6bb5\u672a\u6807\u8bb0\u5316\u5e76\u7f16\u5236\u7d22\u5f15\u3002\u5b83\u53ea\u662f\u5b58\u50a8\u5728Lucene\u4e2d\u3002\n\u5b58\u50a8\u7684\u5b57\u6bb5\u975e\u5e38\u91cd\u8981\u3002\u5bf9\u4e8e\u6dfb\u52a0\u5230\u6587\u672c\u7d22\u5f15\u7684\u6bcf\u4e2a\u6587\u6863\uff0cLucene\u4f1a\u4e3a\u8be5\u6587\u6863\u5206\u914d\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684docID\u3002\u7a0d\u540e\uff0c\u7d22\u5f15\u4e0a\u7684\u641c\u7d22\u64cd\u4f5c\u5c06\u8fd4\u56de\u5339\u914d\u7684docID\u5217\u8868\u3002\nLucene\u7d22\u5f15\u7531\u591a\u4e2a\u72ec\u7acb\u7684\u5b50\u7d22\u5f15\u7ec4\u6210\uff0c\u79f0\u4e3a\u6bb5(\u4e0d\u8981\u4e0ePinot\u6bb5\u6df7\u6dc6)\u3002\u6bcf\u4e2aLucene\u5b50\u7d22\u5f15\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u81ea\u5305\u542b\u7684\u7d22\u5f15\u3002\u6839\u636e\u7d22\u5f15\u7684\u6570\u636e\u5927\u5c0f\u3001\u5c06\u7d22\u5f15\u4e2d\u7684\u5185\u5b58\u6587\u6863\u5237\u65b0\u5230\u78c1\u76d8\u8868\u793a\u5f62\u5f0f\u7684\u9891\u7387\uff0c\u5355\u4e2a\u6587\u672c\u7d22\u5f15\u53ef\u4ee5\u7531\u591a\u4e2a\u5b50\u7d22\u5f15\u7ec4\u6210\u3002\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u5173\u952e\u4e00\u70b9\u662f\uff0cLucene\u7684\u5185\u90e8docID\u662f\u76f8\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u7d22\u5f15\u7684\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6dfb\u52a0\u5230Pinot\u8868\u4e2d\u7ed9\u5b9a\u884c\u7684\u6587\u672c\u7d22\u5f15\u7684\u6587\u6863\u4e0ePinot docID\u4e0d\u5177\u6709\u76f8\u540c\u7684Lucene docID\u3002\n\u5bf9\u4e8e\u5177\u6709\u6587\u672c\u641c\u7d22\u7b5b\u9009\u5668\u7684\u67e5\u8be2\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6267\u884c\u5f15\u64ce(\u7b5b\u9009\u5668\u5904\u7406\u3001\u7d22\u5f15\u67e5\u627e\u7b49)\u662f\u57fa\u4e8edocID\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6dfb\u52a0\u5230Lucene\u7d22\u5f15\u7684\u6bcf\u4e2a\u6587\u6863\u4e0e\u76f8\u5e94\u7684Pinot docID\u552f\u4e00\u5173\u8054\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5c06StoredField\u7528\u4f5c\u6587\u6863\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u3002\n\u7eaf\u6587\u672c\u7528\u4f5c\u7d22\u5f15\u751f\u6210\u7684\u8f93\u5165\u3002\u5206\u6790\u5668\u5bf9\u63d0\u4f9b\u7684\u8f93\u5165\u6587\u672c\u6267\u884c\u9884\u5904\u7406\u6b65\u9aa4\u3002\n\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684StandardAnalyzer\u5bf9\u4e8e\u6807\u51c6\u7684\u82f1\u6587\u5b57\u6bcd\u6570\u5b57\u6587\u672c\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u5e76\u4e14\u4f7f\u7528Unicode\u6587\u672c\u5206\u5272\u7b97\u6cd5\u5c06\u6587\u672c\u5206\u5272\u6210\u8bb0\u53f7\u3002\u5728\u641c\u7d22\u6587\u672c\u7d22\u5f15\u65f6\uff0c\u4e5f\u4f1a\u5728\u67e5\u8be2\u6267\u884c\u671f\u95f4\u4f7f\u7528Analyzer\u3002\n\u76ae\u8bfa\u652f\u6301\u5b9e\u65f6\u6444\u53d6\u548c\u67e5\u8be2\u6570\u636e\u3002\u652f\u6301\u79bb\u7ebf\u3001\u5b9e\u65f6\u548c\u6df7\u5408Pinot\u8868\u7684\u6587\u672c\u7d22\u5f15\u3002\nIndexWriter\u7528\u4e8e\u521b\u5efa\u6587\u672c\u7d22\u5f15\u3002\u5b83\u5728\u5185\u5b58\u4e2d\u7f13\u51b2\u6587\u6863\uff0c\u5e76\u5b9a\u671f\u5c06\u5b83\u4eec\u5237\u65b0\u5230\u78c1\u76d8\u4e0a\u7684Lucene\u7d22\u5f15\u76ee\u5f55\u3002\u4f46\u662f\uff0c\u5728\u5199\u5165\u5668\u63d0\u4ea4\u5e76\u5173\u95edfsync\u7d22\u5f15\u76ee\u5f55\u7684\u7d22\u5f15\u5e76\u4f7f\u7d22\u5f15\u6570\u636e\u5bf9\u8bfb\u53d6\u5668\u53ef\u7528\u4e4b\u524d\uff0cIndexReader(\u5728\u641c\u7d22\u67e5\u8be2\u8def\u5f84\u4e0a\u4f7f\u7528)\u770b\u4e0d\u5230\u6570\u636e\u3002\nIndexReader\u59cb\u7ec8\u67e5\u770b\u4ece\u7d22\u5f15\u76ee\u5f55\u6253\u5f00\u8bfb\u53d6\u5668\u65f6\u7d22\u5f15\u7684\u65f6\u95f4\u70b9\u5feb\u7167(\u5df2\u63d0\u4ea4\u6570\u636e)\u3002\u8fd9\u5bf9\u4e8e\u79bb\u7ebf\u8868\u5f88\u6709\u6548\uff0c\u56e0\u4e3a\u79bb\u7ebfPinot\u6bb5\u5728\u5b8c\u5168\u521b\u5efa\u4e4b\u524d\u4e0d\u4f1a\u4e3a\u67e5\u8be2\u63d0\u4f9b\u6570\u636e\uff0c\u5e76\u4e14\u4e00\u65e6\u521b\u5efa\u5c31\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u6587\u672c\u7d22\u5f15\u662f\u5728Pinot\u6bb5\u751f\u6210\u671f\u95f4\u521b\u5efa\u7684\uff0c\u5e76\u4e14\u5728\u6bb5\u5b8c\u5168\u6784\u5efa\u5e76\u5728Pinot\u670d\u52a1\u5668\u4e0a\u52a0\u8f7d(\u5185\u5b58\u6620\u5c04)\u4e4b\u540e\uff0c\u51c6\u5907\u4e3a\u67e5\u8be2\u63d0\u4f9b\u6570\u636e\u3002\u56e0\u6b64\uff0c\u67e5\u8be2\u8def\u5f84\u4e0a\u7684\u6587\u672c\u7d22\u5f15\u8bfb\u53d6\u5668\u59cb\u7ec8\u67e5\u770b\u79bb\u7ebf\u8868\u7684\u6bb5\u7684\u5168\u90e8\u6570\u636e\u3002\n\u4f46\u662f\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u4e0d\u9002\u7528\u4e8e\u5b9e\u65f6\u6216\u6df7\u5408Pinot\u8868\uff0c\u56e0\u4e3a\u5728\u4f7f\u7528\u6570\u636e\u65f6\u53ef\u4ee5\u67e5\u8be2\u8fd9\u4e9b\u8868\u3002\u8fd9\u9700\u8981\u80fd\u591f\u641c\u7d22\u67e5\u8be2\u8def\u5f84\u4e0a\u7684\u6587\u672c\u7d22\u5f15\uff0c\u56e0\u4e3aIndexWriter\u6b63\u5728\u5904\u7406\u672a\u63d0\u4ea4\u7684\u66f4\u6539\u3002\u540e\u7eed\u90e8\u5206\u5c06\u8be6\u7ec6\u8ba8\u8bba\u79bb\u7ebf\u548c\u5b9e\u65f6\u7684\u67e5\u8be2\u6267\u884c\u3002\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5185\u7f6e\u51fd\u6570Text_Match()\u589e\u5f3a\u4e86\u67e5\u8be2\u89e3\u6790\u5668\u548c\u6267\u884c\u5f15\u64ce\uff0c\u8be5\u51fd\u6570\u5c06\u7528\u4e8e\u67e5\u8be2\u7684WHERE\u5b50\u53e5\u3002\u8bed\u6cd5\u4e3a\uff1a\n\u5c06\u67e5\u8be2\u65e5\u5fd7\u548c\u7b80\u5386\u6587\u672c\u5b58\u50a8\u5728Pinot\u8868\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u5217\u4e2d\u3002\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5bf9\u67e5\u8be2\u65e5\u5fd7\u548c\u7b80\u5386\u6570\u636e\u8fdb\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u672c\u5206\u6790\uff1a\n\u4eceMyTable WHERE TEXT_MATCH(logCol\uff0c\u2018\\\u201cTIMECOL BETWEEN\\\u201d\u548c\\\u201cGROUP BY\\\u201d\u2019)\u4e2d\u9009\u62e9\u8ba1\u6570(*)\u3002\n\u7edf\u8ba1\u62e5\u6709\u201c\u673a\u5668\u5b66\u4e60\u201d\u548c\u201cGPU\u5904\u7406\u201d\u7684\u8003\u751f\u4eba\u6570\u3002\n\u4eceMyTable WHERE TEXT_MATCH(Resume\uff0c\u2018\\\u201c\u673a\u5668\u5b66\u4e60\\\u201d\u548c\\\u201cGPU\u5904\u7406\\\u201d\u2019)\u4e2d\u9009\u62e9\u8ba1\u6570(*)\u3002\n\u6709\u5173\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u672c\u641c\u7d22\u67e5\u8be2\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u641c\u7d22\u8868\u8fbe\u5f0f\u7684\u8be6\u7ec6\u6307\u5357\uff0c\u8bf7\u53c2\u9605\u7528\u6237\u6587\u6863\u3002\n\u6587\u672c\u7d22\u5f15\u7531IndexWriter\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\uff0c\u4f5c\u4e3aPINOT\u6bb5\u751f\u6210\u7684\u4e00\u90e8\u5206\u3002\u5f53Pinot\u670d\u52a1\u5668\u52a0\u8f7d(\u5185\u5b58\u6620\u5c04)\u79bb\u7ebf\u6bb5\u65f6\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aIndexReader\uff0c\u5b83\u5bf9\u6587\u672c\u7d22\u5f15\u76ee\u5f55\u8fdb\u884c\u5185\u5b58\u6620\u5c04\u3002IndexReader\u548cIndexSearcher\u7684\u5b9e\u4f8b\u5728\u6bcf\u4e2a\u5177\u6709\u6587\u672c\u7d22\u5f15\u7684\u5217\u7684\u6bcf\u4e2a\u8868\u6bb5\u4e2d\u521b\u5efa\u4e00\u6b21\u3002\n\u6211\u4eec\u9009\u62e9\u4f7f\u7528MMapDirectory\u800c\u4e0d\u662fRAMDirectory\uff0c\u56e0\u4e3a\u524d\u8005\u4f7f\u7528\u9ad8\u6548\u7684\u5185\u5b58\u6620\u5c04I/O\uff0c\u5e76\u4e14\u751f\u6210\u7684\u5783\u573e\u66f4\u5c11\u3002RAMDirectory\u5bf9\u4e8e\u5185\u5b58\u9a7b\u7559\u7684\u5c0f\u7d22\u5f15\u975e\u5e38\u6709\u6548\uff0c\u4f46\u4f1a\u663e\u8457\u589e\u52a0\u5806\u5f00\u9500\u3002\n\u5728\u4f7f\u7528\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u67e5\u8be2\u5b9e\u65f6\u6bd4\u8bfa\u7247\u6bb5\u4e2d\u7684\u6587\u672c\u7d22\u5f15\u3002Lucene\u901a\u8fc7\u5141\u8bb8\u4ece\u5b9e\u65f6\u5199\u5165\u5668\u6253\u5f00\u8bfb\u53d6\u5668\u6765\u652f\u6301NRT(\u8fd1\u4e4e\u5b9e\u65f6)\u641c\u7d22\uff0c\u4ece\u800c\u5141\u8bb8\u8bfb\u53d6\u5668\u67e5\u770b\u6765\u81ea\u5199\u5165\u5668\u7684\u6240\u6709\u672a\u63d0\u4ea4\u7684\u7d22\u5f15\u6570\u636e\u3002\u4f46\u662f\uff0c\u5c31\u50cfLucene\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u7d22\u5f15\u8bfb\u53d6\u5668\u4e00\u6837\uff0cNRT\u8bfb\u53d6\u5668\u4e5f\u662f\u5feb\u7167\u8bfb\u53d6\u5668\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u5b9a\u671f\u91cd\u65b0\u6253\u5f00NRT\u8bfb\u53d6\u5668\u624d\u80fd\u770b\u5230\u5b9e\u65f6\u7d22\u5f15\u5199\u5165\u5668\u6240\u505a\u7684\u589e\u91cf\u66f4\u6539\u3002\n\u6211\u4eec\u7684\u5b9e\u65f6\u6587\u672c\u7d22\u5f15\u8bfb\u53d6\u5668\u8fd8\u5145\u5f53\u5199\u5165\u5668\uff0c\u56e0\u4e3a\u5b83\u65e2\u5c06\u6587\u6863\u4f5c\u4e3a\u5b9e\u65f6\u6bb5\u6d88\u8d39\u7684\u4e00\u90e8\u5206\u6dfb\u52a0\u5230\u7d22\u5f15\u4e2d\uff0c\u4e5f\u88abPinot\u67e5\u8be2\u7ebf\u7a0b\u4f7f\u7528\u3002\n\u5728Pinot\u670d\u52a1\u5668\u542f\u52a8\u671f\u95f4\uff0c\u6211\u4eec\u521b\u5efa\u5355\u4e2a\u540e\u53f0\u7ebf\u7a0b\u3002\u8be5\u7ebf\u7a0b\u8de8\u6240\u6709\u8868\u7ef4\u62a4\u5b9e\u65f6\u6bb5\u7684\u5168\u5c40\u5faa\u73af\u961f\u5217\u3002\n\u7ebf\u7a0b\u5728\u53ef\u914d\u7f6e\u9608\u503c\u4e4b\u540e\u9192\u6765\uff0c\u8f6e\u8be2\u961f\u5217\u4ee5\u83b7\u5f97\u5b9e\u65f6\u6bb5\uff0c\u5e76\u4e3a\u5177\u6709\u6587\u672c\u7d22\u5f15\u7684\u6bcf\u4e00\u5217\u5237\u65b0\u5b9e\u65f6\u8bfb\u53d6\u5668\u7684\u7d22\u5f15\u641c\u7d22\u5668\u3002\n\u51b3\u5b9a\u540e\u53f0\u7ebf\u7a0b\u8fde\u7eed\u5237\u65b0\u4e4b\u95f4\u7684\u53ef\u914d\u7f6e\u9608\u503c\u5e94\u8be5\u6839\u636e\u9700\u6c42\u8fdb\u884c\u8c03\u6574\u3002\n\u5982\u679c\u9608\u503c\u8f83\u4f4e\uff0c\u6211\u4eec\u5c06\u7ecf\u5e38\u5237\u65b0\uff0c\u5e76\u4e14\u4f7f\u7528TEXT_MATCH\u8fc7\u6ee4\u5668\u5bf9\u4f7f\u7528\u6bb5\u7684\u67e5\u8be2\u5c06\u5feb\u901f\u770b\u5230\u65b0\u884c\u3002\u7f3a\u70b9\u662f\u5927\u91cf\u7684\u5c0fI/O\uff0c\u56e0\u4e3a\u5237\u65b0\u6587\u672c\u7d22\u5f15\u8bfb\u53d6\u5668\u9700\u8981\u5b9e\u65f6\u5199\u5165\u5668\u5237\u65b0\u3002\n\u5982\u679c\u9608\u503c\u8f83\u9ad8\uff0c\u6211\u4eec\u5237\u65b0\u7684\u9891\u7387\u5c31\u4f1a\u964d\u4f4e\uff0c\u8fd9\u4f1a\u589e\u52a0\u4e00\u884c\u6dfb\u52a0\u5230\u6d88\u8d39\u7247\u6bb5\u7684\u6587\u672c\u7d22\u5f15\u4e0e\u4f7f\u7528TEXT_MATCH\u8fc7\u6ee4\u5668\u5728\u67e5\u8be2\u7684\u641c\u7d22\u7ed3\u679c\u4e2d\u51fa\u73b0\u4e4b\u95f4\u7684\u5ef6\u8fdf\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5982\u4f55\u5728Pinot\u4e2d\u521b\u5efa\u548c\u67e5\u8be2\u6587\u672c\u7d22\u5f15\u3002\u6211\u4eec\u8fd8\u8c08\u5230\u4e86\u4e00\u4e9b\u8bbe\u8ba1\u51b3\u7b56\u548c\u6311\u6218\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8be6\u7ec6\u8ba8\u8bba\u4e3a\u83b7\u5f97\u6240\u9700\u529f\u80fd\u548c\u6027\u80fd\u800c\u5b9e\u73b0\u7684\u4f18\u5316\u3002\n\u5bf9\u4e8e\u641c\u7d22\u67e5\u8be2\uff0cLucene\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\u8fdb\u884c\u8bc4\u5206\u548c\u6392\u540d\u3002\u8c03\u7528indexSearcher.search()\u7684\u7ed3\u679c\u662fTopDocs\uff0c\u5b83\u8868\u793a\u6309\u5206\u6570\u964d\u5e8f\u6392\u5e8f\u7684\u67e5\u8be2\u7684\u524dN\u4e2a\u547d\u4e2d\u3002\u5728\u76ae\u8bfa\uff0c\u6211\u4eec\u76ee\u524d\u4e0d\u9700\u8981\u4efb\u4f55\u8bc4\u5206\u548c\u6392\u540d\u529f\u80fd\u3002\u6211\u4eec\u53ea\u5bf9\u68c0\u7d22\u7ed9\u5b9a\u6587\u672c\u641c\u7d22\u67e5\u8be2\u7684\u6240\u6709\u5339\u914ddocID\u611f\u5174\u8da3\u3002\n\u6211\u4eec\u6700\u521d\u7684\u5b9e\u9a8c\u663e\u793a\uff0cLucene\u4e2d\u7684\u9ed8\u8ba4\u641c\u7d22\u4ee3\u7801\u8def\u5f84\u4f1a\u5bfc\u81f4\u5f88\u5927\u7684\u5806\u5f00\u9500\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528TopScoreDocCollector\u4e2d\u7684PriorityQuery\u3002\u5176\u6b21\uff0c\u5806\u5f00\u9500\u968f\u7740\u5339\u914d\u6587\u6863\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002\n\u6211\u4eec\u5b9e\u73b0\u4e86Collector\u63a5\u53e3\u4ee5\u63d0\u4f9b\u5bf9indexSearcher.search(\u67e5\u8be2\u3001\u6536\u96c6\u5668)\u64cd\u4f5c\u7684\u7b80\u5355\u56de\u8c03\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5339\u914d\u7684Lucene docID\uff0cLucene\u90fd\u4f1a\u8c03\u7528\u6211\u4eec\u7684\u6536\u96c6\u5668\u56de\u8c03\uff0c\u8be5\u56de\u8c03\u5c06docID\u5b58\u50a8\u5728\u4f4d\u56fe\u4e2d\u3002\n\u6587\u672c\u6587\u6863\u5f88\u53ef\u80fd\u6709\u5e38\u89c1\u7684\u82f1\u8bed\u5355\u8bcd\uff0c\u5982a\u3001an\u3001the\u7b49\u3002\u8fd9\u4e9b\u8bcd\u79f0\u4e3a\u505c\u7528\u8bcd\u3002\u505c\u7528\u8bcd\u901a\u5e38\u4e0d\u4f1a\u5728\u6587\u672c\u5206\u6790\u4e2d\u4f7f\u7528\uff0c\u4f46\u7531\u4e8e\u5b83\u4eec\u7684\u51fa\u73b0\u9891\u7387\u5f88\u9ad8\uff0c\u7d22\u5f15\u5927\u5c0f\u53ef\u80fd\u4f1a\u7206\u70b8\uff0c\u4ece\u800c\u5f71\u54cd\u67e5\u8be2\u6027\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5206\u6790\u5668\uff0c\u4e3a\u8f93\u5165\u6587\u672c\u521b\u5efa\u81ea\u5b9a\u4e49\u4ee4\u724c\u7b5b\u9009\u5668\u3002\u5206\u6790\u5668\u4e2d\u7684\u8fc7\u6ee4\u8fc7\u7a0b\u5728\u5efa\u7acb\u7d22\u5f15\u65f6\u5220\u9664\u6240\u6709\u505c\u6b62\u5b57\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5f3a\u70c8\u9700\u8981\u5728\u6dfb\u52a0\u5230Lucene\u7d22\u5f15\u7684\u6bcf\u4e2a\u6587\u6863\u4e2d\u5b58\u50a8Pinot docID\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e24\u904d\u67e5\u8be2\u6267\u884c\uff1a\n\u8fed\u4ee3\u6bcf\u4e2adocID\u4ee5\u83b7\u5f97\u76f8\u5e94\u7684\u6587\u6863\u3002\u4ece\u6587\u6863\u4e2d\u68c0\u7d22Pinot docID\u3002\n\u4eceLucene\u68c0\u7d22\u6574\u4e2a\u6587\u6863\u975e\u5e38\u8017\u8d39CPU\uff0c\u5e76\u4e14\u6210\u4e3a\u541e\u5410\u91cf\u6d4b\u8bd5\u7684\u4e3b\u8981\u74f6\u9888\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fed\u4ee3\u6587\u672c\u7d22\u5f15\u4e00\u6b21\uff0c\u4ee5\u83b7\u53d6\u6240\u6709&lt\uff1bLucene docID\u3001Pinot docID&gt\uff1b\u6620\u5c04\uff0c\u5e76\u5c06\u5b83\u4eec\u5199\u5165\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u4e2d\u3002\n\u56e0\u4e3a\u79bb\u7ebf\u6bb5\u7684\u6587\u672c\u7d22\u5f15\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u6240\u4ee5\u8fd9\u5f88\u6709\u6548\uff0c\u56e0\u4e3a\u5f53\u670d\u52a1\u5668\u52a0\u8f7d\u6587\u672c\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u652f\u4ed8\u4e00\u6b21\u68c0\u7d22\u6574\u4e2a\u6587\u6863\u7684\u6210\u672c\u3002\u7a0d\u540e\uff0c\u5728\u67e5\u8be2\u6267\u884c\u671f\u95f4\uff0c\u6536\u96c6\u5668\u56de\u8c03\u5c06\u4f7f\u7528\u6620\u5c04\u6587\u4ef6\u6765\u7f29\u77ed\u641c\u7d22\u8def\u5f84\uff0c\u5e76\u76f4\u63a5\u6784\u9020Pinot docIds\u7684\u7ed3\u679c\u4f4d\u56fe\u3002\n\u901a\u8fc7\u5141\u8bb8\u5ef6\u8fdf\u968fQPS\u7684\u589e\u52a0\u800c\u6269\u5c55\uff0c\u8fd9\u79cd\u4f18\u5316\u4e0e\u4fee\u526a\u505c\u7528\u5b57\u4e00\u8d77\u4f7f\u6211\u4eec\u7684\u67e5\u8be2\u6027\u80fd\u63d0\u9ad8\u4e8640-50\u500d\u3002\u4e0b\u56fe\u6bd4\u8f83\u4e86\u6b64\u4f18\u5316\u524d\u540e\u7684\u5ef6\u8fdf\u3002\nLucene\u6709\u4e00\u4e2a\u7f13\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u53ef\u91cd\u590d\u7684\u6587\u672c\u641c\u7d22\u8868\u8fbe\u5f0f\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002\u867d\u7136\u6027\u80fd\u63d0\u5347\u975e\u5e38\u660e\u663e\uff0c\u4f46\u7f13\u5b58\u4f1a\u589e\u52a0\u5806\u5f00\u9500\u3002\u6211\u4eec\u51b3\u5b9a\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\u5b83\uff0c\u5e76\u8ba9\u7528\u6237\u5728\u6bcf\u4e2a\u6587\u672c\u7d22\u5f15\u7684\u57fa\u7840\u4e0a\u542f\u7528(\u5982\u679c\u9700\u8981)\u3002\nLucene\u7684\u78c1\u76d8\u7d22\u5f15\u7ed3\u6784\u5b58\u50a8\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u3002\u8003\u8651Pinot\u670d\u52a1\u5668\u4e0a2000\u4e2a\u8868\u6bb5\u7684\u60c5\u51b5\uff0c\u6bcf\u4e2aPinot\u8868\u6bb5\u57283\u5217\u4e0a\u5177\u6709\u6587\u672c\u7d22\u5f15\uff0c\u6bcf\u4e2a\u6587\u672c\u7d22\u5f15\u5177\u670910\u4e2a\u6587\u4ef6\u3002\u6211\u4eec\u770b\u5230\u7684\u662f60k\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u3002\u7cfb\u7edf\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u201c\u6253\u5f00\u7684\u6587\u4ef6\u592a\u591a\u201d\u7684\u95ee\u9898\u3002\n\u56e0\u6b64\uff0cIndexWriter\u4f7f\u7528\u590d\u5408\u6587\u4ef6\u683c\u5f0f\u3002\u5176\u6b21\uff0c\u5f53\u4e3a\u5217\u5b8c\u5168\u6784\u5efa\u6587\u672c\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u5f3a\u5236\u5c06\u591a\u4e2aLucene\u5b50\u7d22\u5f15(\u5728Lucene\u672f\u8bed\u4e2d\u4e5f\u79f0\u4e3a\u6bb5)\u5408\u5e76\u5230\u5355\u4e2a\u7d22\u5f15\u4e2d\u3002\n\u5f53\u6587\u6863\u5728Pinot\u6bb5\u751f\u6210\u671f\u95f4\u6dfb\u52a0\u5230\u6587\u672c\u7d22\u5f15\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u5185\u5b58\u4e2d\u7f13\u51b2\uff0c\u5e76\u5b9a\u671f\u5237\u65b0\u5230\u7d22\u5f15\u76ee\u5f55\u7684\u78c1\u76d8\u7ed3\u6784\u4e2d\u3002\u9ed8\u8ba4\u7684Lucene\u884c\u4e3a\u662f\u5728\u5185\u5b58\u4f7f\u7528\u91cf\u8fbe\u523016MB\u540e\u5237\u65b0\u3002\u6211\u4eec\u5bf9\u8be5\u503c\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u5e76\u8fdb\u884c\u4e86\u4e00\u4e9b\u89c2\u5bdf\uff1a\n\u5237\u65b0\u4f1a\u5bfc\u81f4Lucene\u6bb5\u3002\u968f\u7740\u66f4\u591a\u7684\u8fd9\u4e9b\u88ab\u521b\u5efa\uff0cLucene\u53ef\u4ee5\u51b3\u5b9a\u5728\u540e\u53f0\u5408\u5e76\u5b83\u4eec\u4e2d\u7684\u51e0\u4e2a/\u5168\u90e8\u3002\u5177\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u6bb5\u4f1a\u589e\u52a0\u6587\u4ef6\u7684\u6570\u91cf\u3002\n\u5c06\u9ed8\u8ba4\u9608\u503c\u8bbe\u4e3a16MB\u5e76\u4e0d\u610f\u5473\u7740\u7d22\u5f15\u7f16\u5199\u5668\u5728\u5237\u65b0\u4e4b\u524d\u5c06\u6d88\u801716MB\u7684\u5806\u3002\u5b9e\u9645\u6d88\u8017\u8981\u9ad8\u5f97\u591a(\u5927\u7ea6100MB)\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u5728Java\u4e2d\u6ca1\u6709\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8ddf\u8e2a\u4f7f\u7528\u7684\u5806\u5185\u5b58\u91cf\u7684\u597d\u65b9\u6cd5\u3002\n\u8f83\u5c0f\u7684\u9608\u503c\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u5c0f\u578bI/O\uff0c\u800c\u4e0d\u662f\u8f83\u5c11\u7684\u5927\u578bI/O\u3002\u6211\u4eec\u51b3\u5b9a\u4fdd\u6301\u6b64\u503c\u53ef\u914d\u7f6e\uff0c\u5e76\u9009\u62e9256MB\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u4ee5\u4fdd\u6301\u5185\u5b58\u5f00\u9500\u548cI/O\u6570\u91cf\u4e4b\u95f4\u7684\u826f\u597d\u5e73\u8861\u3002\n\u6211\u4eec\u8fd8\u8fd0\u884c\u4e86\u5fae\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4ee5\u6bd4\u8f83Pinot\u8868\u548c\u5305\u542b100\u4e07\u884c\u7684\u5355\u4e2a\u6bb5\u4e0aTEXT_MATCH\u548cregexp_LIKE\u7684\u6267\u884c\u65f6\u95f4\u3002\u4f7f\u7528\u4e86\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6d4b\u8bd5\u6570\u636e\uff1a\n\u65e5\u5fd7\u6570\u636e\uff1aPinot\u8868\u4e2d\u7684\u5b57\u7b26\u4e32\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u503c\u90fd\u662f\u6765\u81eaApache Access\u65e5\u5fd7\u7684\u4e00\u4e2a\u65e5\u5fd7\u884c\u3002\n\u975e\u65e5\u5fd7\u6570\u636e\uff1aPinot\u8868\u4e2d\u7684\u5b57\u7b26\u4e32\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u503c\u90fd\u662f\u7b80\u5386\u6587\u672c\u3002\n\u4e0b\u56fe\u663e\u793a\uff0c\u4e0e\u57fa\u4e8e\u626b\u63cf\u7684\u6a21\u5f0f\u5339\u914d\u76f8\u6bd4\uff0c\u4f7f\u7528\u6587\u672c\u7d22\u5f15\u7684\u641c\u7d22\u67e5\u8be2\u901f\u5ea6\u8981\u5feb\u5f97\u591a\u3002\n\u53e6\u4e00\u4e2a\u8bc4\u4f30\u662f\u4f7f\u7528Pinot\u7684\u539f\u751f\u5012\u6392\u7d22\u5f15\uff0c\u4ee5\u4e86\u89e3\u4f7f\u7528\u6587\u672c\u7d22\u5f15\u53ef\u80fd\u4e0d\u662f\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5982\u679c\u53ea\u9700\u8981\u7cbe\u786e\u7684\u672f\u8bed\u5339\u914d(\u4f7f\u7528=\u3001IN\u8fd0\u7b97\u7b26)\uff0c\u5219\u6587\u672c\u7d22\u5f15\u4e0d\u662f\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u76ae\u8bfa\u7684\u5012\u6392\u7d22\u5f15\u53ef\u4ee5\u6bd4Lucene\u5feb5\u500d\u7684\u901f\u5ea6\u8fdb\u884c\u7cbe\u786e\u7684\u672f\u8bed\u5339\u914d\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u77ed\u8bed\u3001\u6b63\u5219\u8868\u8fbe\u5f0f(\u5305\u62ec\u524d\u7f00\u548c\u901a\u914d\u7b26)\u6216\u6a21\u7cca\u641c\u7d22\uff0c\u5219\u6587\u672c\u7d22\u5f15\u5728\u529f\u80fd\u548c\u6027\u80fd\u65b9\u9762\u90fd\u662f\u6b63\u786e\u7684\u9009\u62e9\u3002\n\u9884\u5148\u6784\u5efa\u7684Lucene docID\u5230pinot docID\u7684\u6620\u5c04\u9002\u7528\u4e8e\u79bb\u7ebf\u6bb5\uff0c\u56e0\u4e3a\u6587\u672c\u7d22\u5f15\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u5bf9\u4e8e\u5b9e\u65f6\u6d88\u8d39\u7684\u7ec6\u5206\u5e02\u573a\uff0c\u8fd9\u79cd\u4f18\u5316\u662f\u4e0d\u9002\u7528\u7684\uff0c\u56e0\u4e3a\u7d22\u5f15\u5728\u670d\u52a1\u67e5\u8be2\u65f6\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4f18\u5316Lucene docID\u5230Pinot docID\u7684\u8f6c\u6362\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\n\u5fae\u8c03\u540e\u53f0\u5237\u65b0\u7ebf\u7a0b\uff0c\u4ee5\u5728\u6bcf\u4e2a\u8868\u6216\u6bcf\u4e2a\u7d22\u5f15\u7684\u57fa\u7840\u4e0a\u5de5\u4f5c\u3002\u5f53\u524d\u5b9e\u73b0\u5177\u6709\u5355\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6765\u7ba1\u7406\u6240\u6709\u5b9e\u65f6\u6bb5\u53ca\u5176\u6587\u672c\u7d22\u5f15\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5982\u4f55\u5229\u7528Lucene\u5728Pinot\u4e2d\u8bbe\u8ba1\u6587\u672c\u641c\u7d22\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u529f\u80fd\u548c\u6027\u80fd(QPS\u548c\u5ef6\u8fdf)\u8981\u6c42\u3002\u8bf7\u8bbf\u95ee\u6587\u672c\u641c\u7d22\u7684\u7528\u6237\u6587\u6863\uff0c\u4e86\u89e3\u6709\u5173\u4f7f\u7528\u8be5\u529f\u80fd\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5982\u679c\u60a8\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u76ae\u8bfa\u7684\u4fe1\u606f\uff0c\u8bf7\u52a0\u5165\u6211\u4eec\u7684\u677e\u5f1b\u9891\u9053\u5e76\u8ba2\u9605\u6211\u4eec\u7684\u90ae\u4ef6\u5217\u8868\uff0c\u6210\u4e3a\u6211\u4eec\u5f00\u6e90\u793e\u533a\u7684\u4e00\u5458\u3002\n\u6700\u540e\uff0c\u4ee5\u4e0b\u662f\u60a8\u5728\u5f00\u59cbApache Pinot\u4e4b\u65c5\u65f6\u53ef\u80fd\u4f1a\u53d1\u73b0\u6709\u7528\u7684\u8d44\u6e90\u5217\u8868\u3002\n\u6211\u4eec\u8981\u611f\u8c22\u76ae\u8bfa\u56e2\u961f\u7684\u6240\u6709\u6210\u5458\uff0c\u611f\u8c22\u4ed6\u4eec\u4e3a\u4f7f\u76ae\u8bfa\u53d8\u5f97\u66f4\u597d\u6240\u505a\u7684\u4e0d\u61c8\u52aa\u529b\uff1aMayank Shriastava\uff0cJackie\u9171\uff0cLi\u4f73\u4eae\uff0cKishore Gopalakrishna\uff0cNeha Pawar\uff0cSeunghyun Lee\uff0cSubbu Subramaniam\uff0cSajad Moradi\uff0cDino Occhialini\uff0cAnurag Shendge\uff0cWalter Huf\uff0cJohn Gutmann\uff0c\u6211\u4eec\u7684\u5de5\u7a0b\u7ecf\u7406Shraddha Sahay\u548cSRE\u7ecf\u7406Prasanna\u3002\n\u6211\u4eec\u8fd8\u8981\u611f\u8c22LinkedIn\u9886\u5bfc\u5c42Eric Baldeschwieler\u3001Kapil Surlaker\u548cIgor Perisic\u7684\u6307\u5bfc\u548c\u6301\u7eed\u652f\u6301\u3002", "note_en": "Apache Pinot is a real-time distributed OLAP datastore, built to deliver scalable real time analytics with low latency.\n Pinot supports super fast query processing through its indexes on non-BLOB like columns. Queries with exact match filters are run efficiently through a combination of dictionary encoding, inverted index and sorted index. However, arbitrary text search queries cannot leverage indexes and require a full table scan.\n In this post, we will discuss newly added support for text indexes in Pinot and how they can be used for efficient full-text search queries.\n    In the above query, we are doing an exact match on  firstName column that doesn\u2019t have an index. The execution engine will find the matching   docIds (aka rowId) as follows:\n   If there is an inverted index on the  firstName column, the   dictionaryId will be used to look up the  inverted index instead of scanning the forward index.\n   If the table is sorted on column  firstName, we use the   dictionaryId to look up the  sorted index and get the start and end docIds of all rows that have the value \u201cJohn\u201d.\n  The following graph shows latencies for exact match queries with and without index on a  dataset of 500 million rows and selectivity (number of rows that passed the filter) of 150 million.\n   What if the user is interested in doing arbitrary text search? Pinot currently supports this through the in-built function  REGEXP_LIKE.\n  The predicate is a regular expression (prefix query). Unlike exact matches, indexes can\u2019t be used to evaluate the regex filter and we resort to full table scan. For every raw value, pattern matching is done with regex \u201cJohn*\u201d to find the matching   docIds.\n  For arbitrary text data which falls into the BLOB/CLOB territory, we need more than exact matches. Users are interested in doing  regex,  phrase and  fuzzy queries on BLOB like data. As we just saw,   REGEXP_LIKE is very inefficient since it uses a full-table scan. Secondly, it doesn\u2019t support  fuzzy searches.\n In  Pinot 0.3.0, we added support for text indexes to efficiently do  arbitrary text search on STRING columns where each column value is a BLOB of heterogeneous text. Doing standard filter operations ( equality, range, between, in) doesn\u2019t fit the bill on textual data.\n   With support for text indexes, let\u2019s compare the  performance of text search query with and without index on a dataset of 500 million rows and filter selectivity of 150 million.\n   Like other database indexes, the goal of a text index is efficient filter processing to improve query performance.\n To support regular expression, phrase and fuzzy searches efficiently, text index data structure should have few fundamental building blocks to store key pieces of information.\n  Dictionary maps each indexed term (word) to the corresponding   dictionaryId to allow efficient comparison using fixed-width integer codes as compared to raw values.\n  Inverted index maps   dictionaryId of each indexed term to the corresponding   docId. Exact match term queries (single or multiple terms) can be answered efficiently through dictionary and inverted index.\n  Phrase queries (e.g find documents matching the phrase \u201cmachine learning\u201d) are an extension of exact term queries where the terms should be in the exact same order in the matching documents. These queries need position information along with the dictionary and inverted index.\n  Regex queries (including prefix, wildcard) and  fuzzy queries will require a comparison with each and every term in the dictionary unless the prefix is fixed. There has to be a way to prune the comparisons.\n If we can represent the input regular expression as a finite state machine such that the state machine is deterministic and accepts a set of terms then we can use the state machine in conjunction with the dictionary to get the   dictionaryIds of all the matching terms that are accepted by the state machine.\n Fuzzy edit distance search can also be done efficiently by representing the query as a state machine based on  Levenshtein automata and intersecting the automata with the dictionary.\n As discussed earlier,  Pinot\u2019s dictionary and inverted index can help answer exact match term queries efficiently. However, phrase, regex, wildcard, prefix and fuzzy queries require the position information and finite state automata which is currently not maintained in Pinot.\n We learned that Apache Lucene has the necessary missing pieces and decided to use it for supporting full-text search in Pinot until we enhance our index structures.\n  Let\u2019s discuss creation of Lucene text indexes in Pinot as a series of key design decisions and challenges.\n  Pinot\u2019s table storage format is columnar. Index structures (forward, inverted, sorted, dictionary) for the table are also created on a per column, per  segment (shard) basis. For text index, we decided to stick with this fundamental design for the following reasons:\n Evolution and maintenance is easier. A user has the freedom to enable or disable text indexing on each column of the table.\n Our performance experiments revealed that creating a global index in Lucene across all text index enabled columns for the table hurts performance. Global index is larger than a per column index which increases the search time.\n  Like other indexes, a text index is created as part of Pinot  segment creation. For each row in the table, we take the value of the column that has text indexing enabled and encapsulate it in a  document.\n  Text field  \u2014 contains the actual column value (docValue) representing the body of text that should be indexed.\n Stored field  \u2014 contains a monotonically increasing   docId counter to reverse map each document indexed in Lucene back to its docId (  rowId) in Pinot. This field is not tokenized and indexed. It is simply stored inside Lucene.\n  The stored field is critical. For each document added to the text index, Lucene assigns a monotonically increasing   docId to the document. Later the search operation on the index returns a list of matching docIds.\n Lucene index is composed of multiple  independent sub-indexes called as segments ( not to confuse with the Pinot segment). Each Lucene sub-index is an independent self-contained index. Based on the size of data indexed, how often the in-memory documents from the index are flushed to the on-disk representation, a single text index can consist of multiple sub-indexes.\n The key thing to note here is that  Lucene\u2019s internal docIds are relative to each sub-index. This can lead to situations where a document added to the text index for a given row in the Pinot table does not have the same Lucene   docId as Pinot   docId.\n For a query that has a text search filter, this will lead to incorrect results since our execution engine (filter processing, index lookup etc) is based around the   docIds. So we need to uniquely associate each document added to the Lucene index with the corresponding Pinot   docId. This is why   StoredField is used as the second field in the document.\n  Plain text is used as input for index generation. An analyzer performs pre-processing steps on the provided input text.\n  We currently use  StandardAnalyzer which is good enough for standard english alphanumeric text and uses Unicode text segmentation algorithm to break text into tokens. Analyzer is also used during query execution when searching the text index.\n  Pinot supports ingesting and querying data in real-time. Text indexes are supported for  offline, real-time and hybrid Pinot tables.\n IndexWriter is used to create text indexes. It buffers the documents in memory and periodically flushes them to the on-disk Lucene index directory. However, the data is not visible to  IndexReader (used on the search query path) until the writer commits and closes the index which  fsync\u2019s the index directory and makes the index data available to the reader.\n IndexReader always looks at a  point-in-time snapshot (of committed data) of the index as of the time reader was opened from the index directory. This works well for offline tables since offline Pinot  segments don\u2019t serve data for queries until fully created and are immutable once created. The text index is created during pinot segment generation and is ready to serve data for queries after the segment is fully built and loaded (memory mapped) on  Pinot servers. Thus the text index reader on the query path always looks at the entire data of a segment for offline tables.\n However, the above approach will not work for  real-time or hybrid Pinot tables since these tables can be queried while data is being consumed. This requires the ability to search the text index on the query path as the IndexWriter is in progress with uncommitted changes. Further sections will discuss the query execution for both offline and real-time in detail.\n  We enhanced our query parser and execution engine with a new in-built function  text_match() to be used in WHERE clause of the queries. The syntax is:\n    Store the query log and resume text in two STRING columns in a Pinot table.\n We can now do different kinds of text analysis on the query log and resume data:\n  SELECT count(*) FROM MyTable  WHERE text_match(logCol, \u2018\\\u201dtimecol between\\\u201d AND \\\u201dgroup by\\\u201d\u2019)\n Count the number of candidates that have \u201cmachine learning\u201d and \u201cgpu processing\u201d\n SELECT count(*) FROM MyTable  WHERE text_match(resume, \u2018\\\u201dmachine learning\\\u201d AND \\\u201dgpu processing\\\u201d\u2019)\n Please see the  user docs for an extensive guide on different kinds of text search queries and how to write search expressions.\n  Text index is created in a directory by IndexWriter as part of pinot segment generation. When the pinot servers load (memory map) the offline segment, we create an  IndexReader which memory-maps the text index directory. An instance of IndexReader and  IndexSearcher is  created once per table segment per column with text index.\n We chose to go with  MMapDirectory instead of  RAMDirectory since the former uses efficient memory mapped I/O and generates less garbage. RAMDirectory can be very efficient for small memory-resident indexes but increases the  heap overhead significantly.\n      Text indexes in realtime Pinot segments can be queried while the data is being consumed. Lucene supports NRT (near real-time) search by allowing to open a reader from a live writer thereby letting the reader to look at all the  uncommitted index data from the writer. However, just like any other index reader in Lucene, the NRT reader is also a snapshot reader. So, the NRT reader will have to be  reopened periodically to see the incremental changes made by the live index writer.\n Our real-time text index reader also acts as a writer since it is both adding documents to the index as part of real-time segment consumption and being used by the Pinot query threads.\n During Pinot server startup, we create a single background thread. The thread maintains a global circular queue of real-time segments across all tables.\n The thread wakes up after a configurable threshold, polls the queue to get a realtime segment and refreshes the index searcher of the real-time reader for each column that has a text index.\n   Deciding the configurable threshold between successive refreshes by the background thread is something that should be tuned based on the requirements.\n If the threshold is low, we refresh often and queries with  text_match filter(s) on consuming segments will get to see the new rows quickly. The downside is lots of small I/Os since refreshing the text index reader requires a flush from the live writer.\n If the threshold is high, we flush less often which increases the lag between the time a row was added to the consuming segment\u2019s text index and appears in search results of the query with  text_match filter.\n  So far, we discussed how text index is created and queried in Pinot. We also talked about a few design decisions and challenges. Now, let\u2019s discuss details on optimizations we implemented to get the desired functionality and performance.\n  For a search query, Lucene\u2019s default behavior is to do scoring and ranking. The result of the call to  indexSearcher.search() is  TopDocs which represents top N hits of the query sorted by score descending. In Pinot we currently don\u2019t need any of the scoring and ranking features. We are simply interested in retrieving all the matched docIds for a given text search query.\n Our initial experiments revealed that the default search code path in Lucene results in significant  heap overhead since it uses a PriorityQuery in  TopScoreDocCollector. Secondly, the heap overhead increases with the increase in the number of matching documents.\n We implemented the  Collector interface to provide a simple callback to  indexSearcher.search(query, collector) operation. For every matching Lucene   docId, Lucene calls our collector callback which stores the   docId in a bitmap.\n  Text documents are very likely to have common english words like  a, an, the, or etc. These are known as  stop-words. Stop words are typically never used in text analysis but due to their high occurrence frequency, index size can explode which consequently hurts query performance. We can customize the  Analyzer to create custom token filters for the input text. The filtering process in the analyzer prunes all the stop words while building the index.\n  As discussed above, there is a strong need to store Pinot   docId in every document added to the Lucene index. This results in a two-pass query execution:\n Iterate over each   docId to get the corresponding document. Retrieve the pinot docId from the document.\n Retrieving the entire document from Lucene was a CPU hogger and became a major bottleneck for throughput testing. To avoid this, we iterate the text index once to fetch all &lt;lucene  docId, pinot  docId&gt; mappings and write them in a memory mapped file.\n Since the text index for offline segments is immutable, this works well as we pay the cost of retrieving the entire document just once when the server loads the text index. The mapping file is later used during query execution by the  collector callback to short-circuit the search path and directly construct a result bitmap of pinot docIds.\n This optimization along with pruning the stop-words gave us  40\u201350x improvement in query performance by allowing the latency to scale with increase in QPS. The following graph compares the latency before and after this optimization.\n   Lucene has a cache to boost performance for queries with repeatable text-search expressions. While the performance improvement is noticeable, cache increases the  heap overhead. We decided to disable it by default and let the user enable (if need be) on a per text index basis.\n  Lucene\u2019s on-disk index structures are stored in  multiple files. Consider the case of 2000 table  segments on a Pinot server, each Pinot table segment having text index on 3 columns with 10 files per text index. We are looking at 60k open file handles. It is very likely for the system to run into \u201c too many open files\u201d problem.\n So, the IndexWriter uses compound file format. Secondly, when the text index is fully built for a column, we force merge the multiple lucene sub-indexes (which are also referred to as  segments in Lucene terminology) into a single index.\n  As documents are added to the text index during Pinot segment generation, they are buffered in-memory and periodically flushed to the on-disk structures in the index directory. The default Lucene behavior is to flush after  memory usage has reached 16MB . We experimented with this value and made some observations:\n A flush results in a  Lucene segment. As more of these are created, Lucene can decide to merge few/all of them in the background. Having multiple such segments increases the number of files.\n Having a default threshold as 16MB doesn\u2019t strictly mean the index writer will consume 16MB of heap before flushing. The actual consumption is much higher (around 100MB) presumably because in Java there is no good way to programmatically keep track of the amount of heap memory used.\n Smaller thresholds result in a large number of small I/Os as opposed to fewer big I/Os. We decided to keep this value configurable and chose 256MB as the default to keep a good balance between memory overhead and number of I/Os.\n  We also ran micro-benchmarks to compare the execution time of   text_match and   regexp_like on a Pinot table with a single  segment containing 1 million rows. Two different kinds of test data were used:\n Log data: A STRING column in Pinot table where each value is a log line from  apache access log.\n Non log data: A STRING column in Pinot table where each value is resume text.\n The following graph shows that search queries using text index are significantly faster compared to scan based pattern matching.\n  Another evaluation was done with  Pinot\u2019s native inverted index to understand when using text index may not be the right solution.\n If only exact term matches (using =, IN operators) are required, then text index is not the right solution.   Pinot\u2019s inverted index can do the exact term matches 5x faster than Lucene.\n However, if a phrase, regex (including prefix and wildcard) or fuzzy search is needed, then text index is the right choice both functionality and performance wise.\n  Pre-built mapping of lucene docId to pinot docId works for offline segments since the text index is immutable. For real-time consuming segments, this optimization is not applicable since the index is changing while it is serving queries. Optimizing the Lucene docId to Pinot docId translation is work in progress.\n Fine-tuning the background refresh thread to work on a per table or a per index basis. The current implementation has a single background thread to manage all realtime segments and their text indexes.\n  In this blog post, we discussed how we leveraged Lucene to engineer the text search solution in Pinot to meet our functional and performance ( QPS and latency) requirements. Please visit the user  documentation of text search to learn more about using the feature.\n If you\u2019re interested in learning more about Pinot, become a member of our open source community by joining our Slack channel and subscribing to our mailing list.\n  Finally, here is a list of resources that you might find useful as you start your journey with Apache Pinot.\n   We would like to thank all members of the Pinot team for their relentless efforts to make Pinot better:   Mayank Shrivastava,   Jackie Jiang,   Jialiang Li,   Kishore Gopalakrishna,   Neha Pawar,   Seunghyun Lee,   Subbu Subramaniam,   Sajjad Moradi,   Dino Occhialini,   Anurag Shendge,   Walter Huf,   John Gutmann, our engineering manager   Shraddha Sahay and SRE manager   Prasanna Ravi.\n We would also like to thank the LinkedIn leadership   Eric Baldeschwieler,   Kapil Surlaker, and   Igor Perisic for their guidance and continued support.", "posttime": "2020-06-11 03:37:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pinot,full,\u7d22\u5f15", "title": "\u5728Apache Pinot\u4e2d\u521b\u5efa\u5168\u6587\u641c\u7d22\u5f15\u64ce", "title_en": "Creating a full-text search engine in Apache Pinot", "transed": 1, "url": "https://medium.com/apache-pinot-developer-blog/text-analytics-on-apache-pinot-cbf5c45d282c", "via": "", "real_tags": ["pinot", "full", "\u7d22\u5f15"]}, {"category": "", "categoryclass": "", "imagename": "17561862a884cdab394802bd1779a3fa.jpg", "infoid": 1006049, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u559c\u6b22\u67e5\u5c14\u65af\u00b7\u6ce2\u8482\u65af\u5c0f\u8bf4\u7684\u8bfb\u8005\u6765\u8bf4\uff0c\u4ed6\u7684\u4e66\u4e2d\u4e00\u5207\u4ee4\u4eba\u6109\u60a6\u7684\u4e1c\u897f\u5bf9\u4ed6\u8fd9\u4e2a\u4eba\u6765\u8bf4\u90fd\u662f\u4ee4\u4eba\u6109\u5feb\u7684\uff0c\u8fd9\u53ef\u80fd\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u4ed6\u7684\u6027\u683c\u4e0e\u4ed6\u7684\u5de5\u4f5c\u5982\u6b64\u7d27\u5bc6\u5730\u543b\u5408\u3002\u4ed6\u76f4\u7387\u800c\u6734\u5b9e\u65e0\u534e\uff0c\u4e00\u70b9\u4e5f\u4e0d\u81ea\u8d1f\u3002\u4ed6\u5f88\u6709\u793c\u8c8c\u3002\u4ed6\u5f88\u5584\u826f\u3002\u4ed6\u53d1\u73b0\u81ea\u5df1\u7f6e\u8eab\u4e8e21\u4e16\u7eaa\u7684\u4e16\u754c\uff0c\u4ed6\u5bf9\u8fd9\u4e2a\u4e16\u754c\u7684\u56f0\u60d1\u662f\u6df1\u523b\u800c\u6734\u5b9e\u7684\u3002\u7136\u800c\uff0c\u4ece\u4ed6\u5634\u91cc\u8bf4\u51fa\u7684\u51e0\u4e4e\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u662f\u5e72\u5df4\u5df4\u7684\u3001\u65b0\u9c9c\u7684\uff0c\u800c\u4e14\u975e\u5e38\u6709\u8da3\u3002\n\u6ce2\u8482\u65af\u4e8e2\u6708\u4efd\u53bb\u4e16\u3002\u6211\u4e00\u751f\u90fd\u5f88\u559c\u6b22\u4ed6\u7684\u4f5c\u54c1--\u201c\u5357\u65b9\u7684\u72d7\u201d\u548c\u201c\u4e9a\u7279\u5170\u8482\u65af\u5927\u5e08\u201d\u4e00\u6837\uff0c\u90fd\u662f\u5168\u5bb6\u4eba\u7684\u6700\u7231--\u4e0d\u8fc7\u79bb\u6211\u6700\u8fd1\u7684\u662f\u51e0\u5e74\u524d\u6211\u5f55\u6210\u6709\u58f0\u8bfb\u7269\u7684\u201c\u5927\u5730\u60ca\u96f7\u201d\u3002\u6211\u7ecf\u5e38\u88ab\u95ee\u5230\u6211\u662f\u5982\u4f55\u5f55\u5236\u53e6\u4e00\u4f4d\u4f5c\u8005\u7684\u4e66\u7684\uff1b\u6700\u7b80\u5355\u7684\u7b54\u6848\u662f\u58f0\u97f3\u3002\u6211\u4ece\u5c0f\u542c\u6bcd\u4eb2\u3001\u7956\u6bcd\u751a\u81f3\u6211\u7684\u66fe\u7956\u6bcd\u5927\u58f0\u6717\u8bfb\u201c\u771f\u7802\u783e\u201d\u7ed9\u6211\u542c\u3002\u8fd9\u662f\u4e00\u4efd\u5de8\u5927\u7684\u793c\u7269\uff0c\u56e0\u4e3a\u6ce2\u8482\u65af\u6bd4\u5f53\u65f6\u5728\u4e16\u7684\u4efb\u4f55\u4e00\u4f4d\u4f5c\u5bb6\u90fd\u66f4\u597d\u5730\u6355\u6349\u5230\u4e86\u590d\u6742\u800c\u9ad8\u5ea6\u66f2\u6298\u7684\u5730\u533a\u65b9\u8a00\uff0c\u6211\u5728\u5b69\u63d0\u65f6\u4ee3\u542c\u5230\u8fc7\u8fd9\u6837\u7684\u8a00\u8bba-\u5b69\u5b50\u822c\u7684\u4e3e\u6b62\u548c\u53e4\u96c5\uff0c\u8001\u5f0f\u7684\u548c\u9ad8\u5ea6\u6784\u9020\u7684\uff0c\u4f46\u4e5f\u6709\u76f4\u7387\u3001\u7c97\u66b4\u548c\u65e0\u6cd5\u65e0\u5929\u7684\uff0c\u53d7\u5230\u838e\u58eb\u6bd4\u4e9a\u3001\u4e01\u5c3c\u751f\u548c\u8a79\u59c6\u65af\u56fd\u738b\u7684\u5f71\u54cd\uff0c\u4e5f\u53d7\u5230\u519c\u4e1a\u5730\u540d\u5f55\u548c\u8936\u76b1\u7684\u65e7\u57fa\u7763\u6559\u5c0f\u518c\u5b50\u3001\u53e4\u8001\u7684\u77ed\u8bed\u8bcd\u5178\u548c\u5bd3\u8a00\u7684\u5f71\u54cd\uff0c\u53d7\u5230\u9aa1\u592b\u3001\u5973\u62a5\u7eb8\u8bd7\u4eba\u548c\u7ede\u5211\u6cd5\u5b98\u7684\u58f0\u97f3\u7684\u5f71\u54cd\u3002\n\u800c\u4e14\uff0c\u8fd9\u4e9b\u4e66\u592a\u6709\u8da3\u4e86\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u54ed\u7740\u8ba9\u4eba\u5927\u58f0\u6717\u8bfb\u3002\u62ff\u8d77\u6ce2\u8482\u65af\u7684\u4efb\u4f55\u4e00\u672c\u5c0f\u8bf4\uff0c\u7ffb\u5f00\u4efb\u4f55\u4e00\u9875\uff0c\u4f60\u90fd\u4f1a\u53d1\u73b0\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u3001\u65b0\u9c9c\u548c\u6ed1\u7a3d\u7684\u4e1c\u897f\uff0c\u4ee5\u81f3\u4e8e\u4f60\u4f1a\u60f3\u8dd1\u8fdb\u9694\u58c1\u7684\u623f\u95f4\uff0c\u7ed9\u67d0\u4eba\u5927\u58f0\u6717\u8bfb\u3002\u4ed6\u7684\u8bed\u8a00\u7cbe\u786e\u4f46\u5f02\u60f3\u5929\u5f00\uff0c\u4f4e\u8c03\u4f46\u65e0\u653f\u5e9c\u72b6\u6001\uff0c\u5c31\u50cf\u82ad\u82ad\u62c9\u00b7\u76ae\u59c6(Barbara Pym)\u6216P\u00b7G\u00b7\u4f0d\u5fb7\u8c6a\u65af(P.G.Wodehouse)\u4e00\u6837\uff0c\u5982\u679c\u4e0d\u8bc9\u8bf8\u957f\u5f15\u8bed\uff0c\u5f88\u96be\u4f20\u8fbe\u51fa\u5176\u4e2d\u7684\u5473\u9053\u3002\u6240\u6709\u559c\u6b22\u6ce2\u8482\u65af\u7684\u8bfb\u8005\u90fd\u6709\u4ed6\u4eec\u559c\u6b22\u6765\u56de\u4ea4\u6362\u7684\u53f0\u8bcd\uff1b\u4ed6\u7684\u5d07\u62dc\u8005\u4e4b\u95f4\u7684\u5bf9\u8bdd\u5927\u591a\u662f\u8fd9\u6837\u7684\u5b9d\u77f3-\u81f4\u529b\u4e8e\u8bb0\u5fc6-\u4ea4\u6362\u548c\u76f8\u4e92\u94a6\u4f69\u3002\u4eba\u4eec\u4f1a\u60f3\u8d77\u5df4\u8fea\u00b7\u51ef\u897f(Buddy Casey)\u535a\u58eb\u5173\u4e8e\u56f4\u653b\u7ef4\u514b\u65af\u5821(Vicksburg)\u7684\u6f14\u8bb2\uff0c\u201c\u5357\u65b9\u7684\u72d7\u201d(The Dog Of The South)\u7684\u89e3\u8bf4\u5458\u96f7\u8499\u5fb7\u00b7\u7c73\u5947(Raymond Midge)\u5728\u5468\u65e5\u7684\u8f66\u9053\u4e0a\u548c\u5243\u987b\u955c\u524d\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u64ad\u653e\u8fd9\u573a\u6f14\u8bb2\u3002\u636e\u6211\u4eec\u4e86\u89e3\uff0c\u8fd9\u4e00\u884c\u52a8\u5e2e\u52a9\u4ed6\u8d76\u8d70\u4e86\u59bb\u5b50\u8bfa\u739b(Norma)\u3002\u96f7\u89e3\u91ca\u8bf4\uff1a\u201c\u8fd9\u76d8\u5f55\u97f3\u5e26\u6211\u5df2\u7ecf\u542c\u4e86\u51e0\u767e\u904d\u4e86\uff0c\u4f46\u6bcf\u6b21\u6211\u90fd\u4f1a\u5bf9\u51ef\u897f\u7684\u4e00\u4e9b\u5929\u624d\u3001\u4e00\u4e9b\u63cf\u8ff0\u3001\u4e00\u4e9b\u6d1e\u5bdf\u529b\u3001\u4e00\u4e9b\u53d9\u4e8b\u6bb5\u843d\u6216\u97f3\u6548\u611f\u5230\u60ca\u8bb6\u548c\u9ad8\u5174\u3002\u4f8b\u5982\uff0c\u9e1f\u513f\u4f1a\u53eb\u3002\u5728\u683c\u5170\u7279\u548c\u5f6d\u4f2f\u987f\u5728\u6a61\u6811\u4e0b\u8ba8\u8bba\u6295\u964d\u6761\u4ef6\u7684\u7d27\u5f20\u573a\u9762\u4e2d\uff0c\u5df4\u5fb7\u535a\u58eb\u53d1\u51fa\u4e86\u51e0\u58f0\u610f\u60f3\u4e0d\u5230\u7684\u9e1f\u9e23\u3002\u8fd9\u79cd\u53eb\u58f0\u662f\u4e00\u79cd\u7a0b\u5f0f\u5316\u7684\u53eb\u58f0\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u4ee3\u8868\u4efb\u4f55\u4e00\u79cd\u7279\u5b9a\u7684\u9e1f\u7684\u53eb\u58f0\u3002\u5b83\u603b\u662f\u8ba9\u6211\u5927\u5403\u4e00\u60ca\u3002\u4f46\u662f\uff0c\u8c01\u4e5f\u4e0d\u80fd\u6307\u671b\u628a\u90a3\u7bc7\u6f14\u8bb2\u7684\u5168\u90e8\u5185\u5bb9\u4e00\u4e0b\u5b50\u8bb0\u5728\u8111\u5b50\u91cc\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u8d22\u5bcc\u3002\u201c\u3002\n\u6ce2\u8482\u65af\u7684\u8d22\u5bcc\u4e5f\u662f\u5982\u6b64\u3002\u4ed6\u7b14\u4e0b\u7684\u4eba\u7269\u5c31\u50cf\u585e\u7f2a\u5c14\u00b7\u8d1d\u514b\u7279(Samuel Beckett)\u4e2d\u7684\u4eba\u7269\u4e00\u6837\uff0c\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u5728\u6f2b\u957f\u800c\u4ee4\u4eba\u56f0\u60d1\u7684\u65c5\u9014\u4e2d\u5f7c\u6b64\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u662f\u4e00\u5fc3\u4e00\u610f\u3001\u5b8c\u5168\u6ca1\u6709\u81ea\u6211\u610f\u8bc6\u7684\u65e0\u8f9c\u8005(\u9000\u4f0d\u519b\u4eba\u3001\u4e66\u5446\u5b50\u3001\u5931\u8d25\u7684\u5b66\u6821\u6559\u5e08\u548c\u63a8\u9500\u5458)\uff0c\u4ed6\u4eec\u7684\u6f14\u8bb2\u51e0\u4e4e\u5728\u6bcf\u4e00\u9875\u90fd\u4ee4\u4eba\u9707\u60ca\u548c\u6109\u60a6\u3002\u5c3d\u7ba1\u4eba\u4eec\u7ecf\u5e38\u8bf4\u6ce2\u8482\u65af\u662f\u7f8e\u56fd\u6700\u4e0d\u4e3a\u4eba\u6240\u77e5\u7684\u4f1f\u5927\u5c0f\u8bf4\u5bb6\uff0c\u4f46\u6211\u60f3\u4e0d\u51fa\u8fd8\u6709\u54ea\u4e2a20\u4e16\u7eaa\u7684\u4f5c\u5bb6-\u65e0\u8bba\u662f\u7f8e\u56fd\u4f5c\u5bb6\u8fd8\u662f\u5176\u4ed6\u4f5c\u5bb6-\u7684\u4f5c\u54c1\u5728\u5982\u6b64\u591a\u4e0d\u540c\u7684\u5e74\u9f84\u6bb5\u548c\u6587\u5b66\u54c1\u5473\u4e2d\u53d7\u5230\u559c\u7231\uff0c\u4ece\u6700\u8001\u7ec3\u7684\u5230\u6700\u7b80\u5355\u7684\u3002\u6c83\u514b\u00b7\u73c0\u897f\u662f\u4ed6\u7684\u7c89\u4e1d\uff0c\u7f57\u5c14\u5fb7\u00b7\u8fbe\u5c14\u4e5f\u662f\u3002\u6b63\u5982\u5a01\u5c14\u65af\u00b7\u5854\u5c14\u5728\u201c\u7ebd\u7ea6\u5ba2\u201d\u4e0a\u6240\u6307\u51fa\u7684\u90a3\u6837\uff1a\u201c\u6ce2\u8482\u65af\u7b14\u4e0b\u7f9e\u602f\u3001\u8c26\u865a\u3001\u52c7\u6562\u7684\u4eba\u7269\u4e0e\u4ed6\u7684\u540c\u9f84\u4eba--\u7f57\u65af\u3001\u5384\u666e\u4ee3\u514b\u3001\u8036\u8328--\u7684\u5a5a\u59fb\u7bdd\u706b\u548c\u5f02\u5e38\u52c3\u8d77\u622a\u7136\u4e0d\u540c\u3002\u201d\u4ed6\u7b14\u4e0b\u7684\u7537\u4e3b\u4eba\u516c\u5b9e\u8df5\u4e86\u4e00\u79cd\u7537\u5b50\u6c14\u6982\uff0c\u6309\u7167\u5f53\u65f6\u7684\u6807\u51c6\uff0c\u8fd9\u79cd\u7537\u5b50\u6c14\u6982\u662f\u72ec\u4e00\u65e0\u4e8c\u7684(\u4e5f\u662f\u4e0d\u5408\u65f6\u5b9c\u7684)\u65e0\u6bd2\u7684\u3002\n\u559c\u5267\u662f\u6700\u77ed\u6682\u7684\u827a\u672f\u3002\u5f88\u5c11\u6709\u6f2b\u753b\u5c0f\u8bf4\u4e0d\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u67af\u840e\uff0c\u66f4\u5c11\u7684\u5c0f\u8bf4-\u65e0\u8bba\u662f\u6f2b\u753b\u8fd8\u662f\u5176\u4ed6-\u53ef\u4ee5\u9001\u7ed9\u51e0\u4e4e\u4efb\u4f55\u4eba\uff0c\u4ece\u8001\u4eba\u5230\u5c0f\u5b69\u3002\u66f4\u96be\u5f97\u7684\u662f\uff0c\u5f53\u4e00\u4e2a\u4eba\u751f\u75c5\u6216\u60b2\u4f24\u65f6\uff0c\u53ef\u4ee5\u53ef\u9760\u5730\u6c42\u52a9\u4e8e\u4e00\u672c\u5c0f\u8bf4\u6765\u6b22\u547c\u3002\u4f46\u201c\u7802\u783e\u201d\u662f\u4e00\u90e8\u7f55\u89c1\u7684\u5c0f\u8bf4\uff0c\u5b83\u7684\u53d9\u8ff0\u8005\u9a6c\u8482\u00b7\u7f57\u65af(Mattie Ross)\u662f\u6ce2\u8482\u65af\u7b14\u4e0b\u6700\u4f1f\u5927\u7684\u65e0\u8f9c\u8005\u4e4b\u4e00\uff1a\u5979\u662f\u4e00\u4f4d\u957f\u8001\u4f1a\u7684\u8001\u5904\u5973\uff0c\u8bb2\u8ff0\u4e86\u5979\u572819\u4e16\u7eaa70\u5e74\u4ee3\u5982\u4f55\u4e3a\u7236\u4eb2\u88ab\u8c0b\u6740\u62a5\u4ec7\u7684\u6545\u4e8b\u3002\u4eba\u4eec\u4e0d\u76f8\u4fe1\u4e00\u4e2a14\u5c81\u7684\u5973\u5b69\u53ef\u4ee5\u5728\u51ac\u5929\u79bb\u5f00\u5bb6\u53bb\u4e3a\u5979\u7236\u4eb2\u7684\u9c9c\u8840\u62a5\u4ec7\uff0c\u4f46\u8fd9\u5728\u5f53\u65f6\u4f3c\u4e4e\u5e76\u4e0d\u90a3\u4e48\u5947\u602a\uff0c\u5c3d\u7ba1\u6211\u8981\u8bf4\u8fd9\u5e76\u4e0d\u662f\u6bcf\u5929\u90fd\u4f1a\u53d1\u751f\u7684\u3002\u65e0\u8bba\u4ee5\u4ec0\u4e48\u6807\u51c6\u8861\u91cf\uff0c\u8fd9\u90fd\u662f\u4e00\u672c\u4e25\u8083\u7684\u4e66\uff1b\u9a6c\u8482\u7684\u6124\u6012\u548c\u60b2\u4f24\u662f\u96f7\u9e23\u822c\u7684(\u201c\u771f\u662f\u6d6a\u8d39\uff01\u6c64\u59c6\u00b7\u5207\u5c3c\u4f1a\u4e3a\u6b64\u4ed8\u51fa\u4ee3\u4ef7\u7684\uff01\u6211\u4e0d\u4f1a\u9ad8\u6795\u65e0\u5fe7\u7684\uff0c\u76f4\u5230\u8def\u6613\u65af\u5b89\u90a3\u5dde\u7684\u90a3\u6761\u72d7\n\u4e00\u4e2a\u7f13\u6162\u800c\u6d53\u90c1\u7684\u5357\u65b9\u55d3\u97f3\uff0c\u8ba9\u4eba\u60f3\u8d77\u6f14\u5458\u5170\u8fea\u00b7\u594e\u5fb7(Randy Quaid)\u3002\u201c\u6ce2\u8482\u65af\u5148\u751f\uff1f\u201d\u6211\u8bf4\uff0c\u4f46\u4e0d\u662f\u6211\u51c6\u5907\u597d\u7684\u4ecb\u7ecd\uff0c\u800c\u662f\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u573a\u60a0\u95f2\u800c\u9ad8\u5ea6\u8d85\u73b0\u5b9e\u7684\u4ea4\u6d41\uff0c\u6211\u65e0\u6cd5\u590d\u5236-\u4e0e\u4e8b\u4e0e\u613f\u8fdd\u7684\u6c7d\u8f66\u6709\u5173\u5417\uff1f\u7136\u540e\u6572\u95e8\uff1f--\u6301\u7eed\u4e86\u4e00\u4f1a\u513f\uff0c\u76f4\u5230\u4ed6\u6ca1\u6709\u9519\u8fc7\u8282\u62cd\uff0c\u6109\u5feb\u5730\u8bf4\uff1a\u201c\u54e6\uff0c\u8bf7\u539f\u8c05\u3002\u201d\u6211\u8fd8\u4ee5\u4e3a\u4f60\u662f\u7ed9\u6211\u6253\u7535\u8bdd\u7684\u602a\u4eba\u5462\u3002\u201c\u3002\n\u6211\u6309\u5175\u4e0d\u52a8\uff0c\u4e0d\u77e5\u9053\u8bf4\u4ec0\u4e48\u597d\u3002\u4f3c\u4e4e\u6ca1\u6709\u660e\u786e\u7684\u524d\u8fdb\u9053\u8def\u3002\u6211\u5192\u72af\u5230\u4ed6\u4e86\u5417\uff1f\u201c\u5bf9\u4e0d\u8d77--\u201d\n\u201c\u54e6\uff0c\u4e0d\u3002\u53ea\u662f\u6211\u7ecf\u5e38\u6709\u4e2a\u53e4\u602a\u7684\u6765\u7535\u8005\uff0c\u4ed6\u51e0\u4e4e\u6bcf\u5929\u90fd\u5728\u8fd9\u4e2a\u65f6\u5019\u6253\u7535\u8bdd\u3002\u5982\u679c\u6211\u4e0d\u63a5\uff0c\u4ed6\u5c31\u4f1a\u54cd\u4e2a\u4e0d\u505c\u3002\u201c\u3002\n\u201c\u4e0d\uff0c\u8fd9\u53ea\u662f\u4e2a\u6076\u4f5c\u5267\u7684\u4eba\u3002\u6211\u60f3\u662f\u5f53\u5730\u4eba\u7684\u3002\u8fd9\u9644\u8fd1\u7684\u5f88\u591a\u4eba\u4f3c\u4e4e\u90fd\u6ca1\u4ec0\u4e48\u4e8b\u53ef\u505a\u3002\u201c\u3002\n\u201c\u6ca1\u6709\u3002\u8bf4\u5b9e\u8bdd\uff0c\u6211\u5bf9\u4ed6\u6ca1\u6709\u6253\u7535\u8bdd\u7684\u65e5\u5b50\u6709\u70b9\u5931\u671b\u3002\u6211\u662f\u6765\u671f\u5f85\u4ed6\u7684\u6765\u7535\u7684\u3002\u201c\u3002\n\u201c\u5982\u679c\u4f60\u60f3\u8ba9\u6211\u6302\u65ad\u7535\u8bdd\uff0c\u6211\u53ef\u4ee5\u6302\u65ad\u3002\u201d\u6211\u4e3b\u52a8\u63d0\u51fa\u3002\n\u201c\u6ca1\u6709\u3002\u6ca1\u6709\u5fc5\u8981\u90a3\u6837\u505a\u3002\u5982\u679c\u4ed6\u53d1\u73b0\u7ebf\u8def\u5360\u7ebf\uff0c\u4ed6\u4f1a\u7ed9\u6211\u56de\u7535\u8bdd\u7684\u3002\u201c\u3002\u7136\u540e\u95ee\uff1a\u201c\u4f60\u4ece\u54ea\u91cc\u6253\u6765\u7684\uff1f\u201d\n\u201c\u90a3\u662f\u4e00\u79cd\u5947\u602a\u7684\u53e3\u97f3\u3002\u5f17\u5409\u5c3c\u4e9a\u53e3\u97f3\u3002\u5728\u6211\u770b\u6765\uff0c\u5f88\u591a\u5f17\u5409\u5c3c\u4e9a\u4eba\u542c\u8d77\u6765\u6216\u591a\u6216\u5c11\u50cf\u52a0\u62ff\u5927\u4eba\u3002\u4f60\u542c\u8d77\u6765\u50cf\u662f\u8fd9\u9644\u8fd1\u7684\u4eba\u3002\u201c\n\u6211\u89e3\u91ca\u8bf4\uff0c\u6211\u6765\u81ea\u5bc6\u897f\u897f\u6bd4\u5dde\u7684\u6cb3\u5bf9\u5cb8\uff0c\u6211\u548c\u6211\u7684\u5bb6\u4eba\u662f\u5982\u4f55\u51e0\u4e4e\u719f\u8bb0\u4ed6\u7684\u4e66\u7684\uff0c\u6211\u662f\u591a\u4e48\u5e0c\u671b\u4ed6\u80fd\u5141\u8bb8\u6211\u5f55\u5236\u201c\u771f\u6b63\u7684\u7802\u783e\u201d(True Gritt)\u7684\u97f3\u9891-\u7535\u8bdd\u91cc\u6211\u65c1\u8fb9\u6709\u4ed6\u7684\u4e66\uff0c\u51c6\u5907\u4e86\u4e00\u4efd\u8bfb\u7269-\u4f46\u4ed6\u4f3c\u4e4e\u5bf9\u6211\u6253\u7535\u8bdd\u7684\u5b9e\u9645\u76ee\u7684\u5e76\u4e0d\u611f\u5174\u8da3\u3002\u201c\u4f60\u4eec\u7684\u4eba\u8fd8\u5728\u5bc6\u897f\u897f\u6bd4\u5dde\u5417\uff1f\u201d\u4ed6\u95ee\u9053\uff0c\u8ff7\u60d1\u4e0d\u89e3\u5730\u56de\u5230\u4e86\u552f\u4e00\u5f15\u8d77\u4ed6\u6ce8\u610f\u7684\u4e8b\u5b9e\u3002\n\u201c\u6216\u591a\u6216\u5c11\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u90a3\u4e9b\u6ca1\u6b7b\u7684\u4eba\u3002\u4f46\u90a3\u4e9b\u6b7b\u53bb\u7684\u4eba\u4e5f\u4e00\u6837\u3002\u201c\u3002\n\u6211\u544a\u8bc9\u4ed6\u4e86\u3002\u201c\u90a3\u662f\u5728\u590f\u6d1b\u7279\u9547\u6cd5\u9662\u5927\u697c\u9644\u8fd1\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u4e5f\u6cbf\u7740\u674e\u7684\u64a4\u9000\u8def\u7ebf\u3002\u4f60\u77e5\u9053\u590f\u6d1b\u7279\u6cd5\u9662\u7684\u5c0f\u9547\u66fe\u7ecf\u53eb\u739b\u4e3d\u65af\u7ef4\u5c14\u5417\uff1f\u5f53\u5e15\u7279\u91cc\u514b\u00b7\u4ea8\u5229(Patrick Henry)\u5728\u90a3\u91cc\u53d1\u8868\u4ed6\u7684\u201c\u81ea\u7531\u6216\u6b7b\u4ea1\u201d\u6f14\u8bb2\u65f6\uff0c\u80af\u5b9a\u5c31\u662f\u8fd9\u6837\u79f0\u547c\u7684\u3002\u6218\u540e\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u4ed6\u4eec\u5c06\u5176\u66f4\u540d\u4e3a\u590f\u6d1b\u7279\u6cd5\u9662\u5927\u697c(Charlotte Court House)\u3002\u6211\u771f\u7684\u4e0d\u77e5\u9053\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u3002\u4ed6\u4eec\u559c\u6b22\u7ed9\u5f17\u5409\u5c3c\u4e9a\u7684\u90a3\u4e9b\u57ce\u9547\u91cd\u65b0\u547d\u540d\u3002\u4f8b\u5982\uff0c\u8003\u7279\u5170\u5c0f\u9547\u66fe\u88ab\u79f0\u4e3a\u201c\u8036\u8def\u6492\u51b7\u201d\u3002\u201c\u3002\n\u4ee4\u6211\u5370\u8c61\u6df1\u523b\u7684\u662f\uff0c\u4ed6\u80fd\u591f\u628a\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\u4ece\u4ed6\u7684\u5934\u9876\u4e0a\u62ff\u51fa\u6765\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u573a\u6f2b\u957f\u800c\u8f7b\u677e\u7684\u5bf9\u8bdd\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u548c\u4e00\u4f4d\u5185\u6218\u8001\u5175\u57281890\u5e74\u8fdb\u884c\u7684\uff0c\u56e0\u4e3a\u5b83\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u8d85\u8d8a\u91cd\u5efa\u5357\u65b9\u7684\u4efb\u4f55\u53c2\u8003\uff1a\u963f\u6ce2\u9a6c\u6258\u514b\u65af\u3001\u9ad8\u6865\u3001\u5a01\u5ec9\u00b7\u201c\u6bd4\u5229\u201d\u00b7\u9a6c\u5b8f\u5c06\u519b\u4ee5\u53ca\u4ed6\u5728\u6218\u4e89\u540e\u671f\u5bf9\u5f7c\u5f97\u5821\u7684\u56f4\u56f0\u4e2d\u8fdb\u884c\u7684\u751f\u52a8\u53cd\u51fb\u3002\u68c9\u82b1\u8d38\u6613\u3002\u72d7\u3002\u67aa\u3002\u72d7\u3002\u6211\u7279\u522b\u6ce8\u610f\u5230\u4ed6\u7535\u8bdd\u90a3\u5934\u56fa\u5b9a\u7684\u55e1\u55e1\u58f0--\u5c31\u662f\u6211\u7ed9\u5bc6\u897f\u897f\u6bd4\u5dde\u7684\u7956\u6bcd\u6253\u7535\u8bdd\u65f6\u7ecf\u5e38\u542c\u5230\u7684\u65cb\u8f6c\u5f0f\u7535\u8bdd\u55e1\u55e1\u58f0\u3002\u5c3d\u7ba1\u6211\u4e0d\u60f3\u7ed3\u675f\u5bf9\u8bdd\uff0c\u4f46\u6211\u4ecd\u7136\u5728\u7535\u8bdd\u8fb9\u653e\u7740\u6211\u7684\u201c\u771f\u7802\u783e\u201d\uff0c\u5bf9\u6211\u7684\u4f4f\u5904\u655e\u5f00\u5927\u95e8\uff0c\u800c\u4e14\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u901a\u8fc7\u7f57\u65af\u7279\u00b7\u79d1\u683c\u4f2f\u6069\u7684\u5185\u6218\u670d\u52a1(\u67e5\u7406\u7684\u58f0\u97f3\u548c\u6211\u60f3\u8c61\u7684\u7f57\u65af\u7279\u00b7\u79d1\u683c\u672c\u7684\u58f0\u97f3\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c)\uff0c\u6211\u8bbe\u6cd5\u56de\u5230\u4e86\u5b83\u7684\u4f4d\u7f6e\u4e0a\u3002\u201c\u4f60\u60f3\u8ba9\u6211\u4ece\u4e66\u91cc\u8bfb\u4e00\u4e24\u884c\u5417\uff1f\u201d\u6211\u95ee\u8fc7\u4e86\u3002\u201c\u6211\u5c31\u5728\u8fd9\u91cc\u3002\u201d\n\u201c\u4e0d\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f60\u662f\u4e2a\u597d\u9a6c\u8482\uff0c\u4f60\u4f1a\u505a\u5f97\u5f88\u597d\u7684\uff0c\u201d\u7136\u540e\u7ee7\u7eed\u8bf4\uff0c\u5c31\u50cf\u6211\u4eec\u4e00\u8d77\u9a91\u9a6c\u5728\u4e61\u95f4\u5c0f\u8def\u4e0a\u9a91\u9a6c\u8d70\u4e86\u7b2c\u516d\u4e2a\u5c0f\u65f6\u4e00\u6837\u3002\n\u5728\u90a3\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u4fe1\uff0c\u5e76\u901a\u4e86\u7535\u8bdd--\u6211\u60f3\uff0c\u5982\u679c\u4ed6\u5982\u6b64\u70ed\u60c5\u5730\u6b22\u8fce\u70e6\u4eba\u7684\u6765\u7535\u8005\uff0c\u4ed6\u53ef\u80fd\u4e0d\u4f1a\u4ecb\u610f\u6709\u65f6\u63a5\u5230\u6211\u7684\u7535\u8bdd\u3002\u4ed6\u5bf9\u81ea\u5df1\u7684\u6210\u5c31\u5f88\u8c26\u865a\uff0c\u5bf9\u8c08\u8bba\u4ed6\u4f5c\u4e3a\u5c0f\u8bf4\u5bb6\u7684\u751f\u6d3b\u751a\u81f3\u662f\u5c0f\u8bf4\u4e0d\u611f\u5174\u8da3\uff0c\u5c31\u8fd9\u6837\uff1b\u5c3d\u7ba1\u4ed6\u7684\u4e66\u7684\u63aa\u8f9e\u50cf\u9e1f\u9e23\u4e00\u6837\u6beb\u4e0d\u8d39\u529b\u5730\u5f25\u6f2b\u5728\u4ed6\u8bf4\u7684\u6bcf\u4e00\u53e5\u8bdd\u4e2d\uff0c\u4f46\u4ece\u4ed6\u7684\u8c08\u8bdd\u4e2d\uff0c\u4eba\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6000\u7591\u4ed6\u5199\u8fc7\u4e00\u672c\u5c0f\u8bf4\uff0c\u66f4\u4e0d\u7528\u8bf4\u51e0\u672c\u4f1f\u5927\u7684\u5c0f\u8bf4\u4e86\u3002\u4ed6\u559c\u6b22\u7684\u4e3b\u9898\u662f\u5f53\u5730\u5386\u53f2\uff0c\u4ed6\u5728\u963f\u80af\u8272\u5dde\u7684\u7ae5\u5e74\uff0c\u4ed6\u5728\u519b\u961f\u4e2d\u7684\u65f6\u5149(2006\u5e74\u4e00\u5c01\u4fe1\u7684\u9644\u8a00\u544a\u8bc9\u6211\uff1a\u201c\u8fd9\u5f20\u90ae\u7968\u5c55\u793a\u4e86\u4f60\u7684\u5f17\u5409\u5c3c\u4e9a\u540c\u80de\uff0c\u4f20\u5947\u7684\u6d77\u519b\u9646\u6218\u961f\u82f1\u96c4\u5207\u65af\u7279\u00b7\u666e\u52d2\u3002\u51e0\u5e74\u524d\uff0c\u4ed6\u662f\u6211\u5728\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u52d2\u743c\u8425\u5730\u7684\u6307\u6325\u5b98\u3002\u201c)\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4f5c\u4e3a\u4e00\u540d\u65b0\u95fb\u8bb0\u8005\u7684\u4e00\u751f(\u5bf9\u6211\u6765\u8bf4\u6709\u70b9\u56f0\u60d1\u7684\u662f\uff0c\u4ed6\u8ba4\u4e3a\u81ea\u5df1\u4e3b\u8981\u662f\u4e00\u540d\u524d\u65b0\u95fb\u8bb0\u8005\uff0c\u800c\u4e0d\u662f\u4ed6\u662f\u4e00\u4f4d\u91cd\u8981\u800c\u72ec\u7279\u7684\u7f8e\u56fd\u5c0f\u8bf4\u5bb6)\u3002\u591a\u4e8f\u4e86\u4ed6\u5728\u5b5f\u83f2\u65af\u5546\u4e1a\u4e0a\u8bc9\u4e2d\u5fc3\u5de5\u4f5c\u7684\u65f6\u95f4\uff0c\u4ed6\u975e\u5e38\u4e86\u89e3\u6211\u7ae5\u5e74\u65f6\u7684\u5b5f\u83f2\u65af\uff0c\u5b5f\u83f2\u65af\u662f\u79bb\u6211\u7684\u5317\u5bc6\u897f\u897f\u6bd4\u5dde\u5c0f\u9547\u6700\u8fd1\u7684\u4efb\u4f55\u89c4\u6a21\u7684\u57ce\u5e02\u3002(\u5173\u4e8e\u5bc6\u897f\u897f\u6bd4\u5dde\uff1a\u201c\u4e3a\u4ec0\u4e48\u4f60\u4eec\u90fd\u559c\u6b22\u5728\u90a3\u91cc\u5199\u8fd9\u4e48\u591a\u4e1c\u897f\uff1f\u8fd9\u4f4d\u963f\u80af\u8272\u5dde\u5c0f\u8bf4\u5bb6\u662f\u4e00\u53ea\u7f55\u89c1\u5f97\u591a\u7684\u79bd\u7c7b\u3002\u201c)\u3002\u4f5c\u4e3a\u4e00\u540d\u5e74\u8f7b\u7684\u8bb0\u8005\uff0c\u4ed6\u66fe\u53c2\u52a0\u8fc7\u732b\u738b\u6bcd\u4eb2\u7684\u846c\u793c-\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6545\u4e8b-\u6211\u4eec\u8c08\u8bba\u4e86\u8fd120\u5e74\u540e\u732b\u738b\u53bb\u4e16\u540e\u5b5f\u83f2\u65af\u7684\u6b47\u65af\u5e95\u91cc\uff0c\u5f53\u65f6\u54ed\u6ce3\u7684\u5546\u4eba\u4eec\u5728\u5e7f\u64ad\u4e2d\u4ee3\u66ff\u4e86\u4ed6\u4eec\u5e38\u89c4\u7684\u5546\u4e1a\u5e7f\u544a\uff0c\u54c0\u53f7\uff1a\u201c\u6696\u548c\u5730\u7761\u5427\uff0c\u732b\u738b\uff01\u201d\n\u6211\u4eec\u786e\u5b9a\u6211\u4e0e\u53ef\u6015\u7684\u5b5f\u83f2\u65af\u6cd5\u5b98\u8d1d\u5f17\u5229\u00b7\u535a\u897f(Beverly Boush\u00e9)\u6709\u4eb2\u621a\u5173\u7cfb\uff0c1958\u5e74\uff0c\u8d1d\u5f17\u5229\u6cd5\u5b98\u4e3b\u6301\u4e86\u5bf9\u4e00\u7fa4\u5370\u7b2c\u5b89\u7eb3\u5dde\u6770\u897f\u4eba\u7684\u6a21\u62df\u5ba1\u5224\uff0c\u4ed6\u4eec\u51fa\u4e8e\u67d0\u79cd\u672a\u77e5\u7684\u539f\u56e0\u9009\u62e9\u91cd\u6f14\u963f\u8d1d\u00b7\u6797\u80af(Abe Lincoln)19\u5c81\u65f6\u6cbf\u5bc6\u897f\u897f\u6bd4\u6cb3\u800c\u4e0b\u7684\u5e73\u677f\u8239\u4e4b\u65c5\u65f6\uff0c\u67e5\u7406\u66fe\u5199\u8fc7\u5173\u4e8e\u4ed6\u7684\u6587\u7ae0\u3002(\u5f53\u6770\u897f\u592b\u5987\u88ab\u5176\u4ed6\u88c5\u626e\u6210\u96f7\u5e03\u65af\u7684\u6770\u897f\u4eba\u4ece\u5e73\u5e95\u8239\u4e0a\u62d6\u5230\u4ed6\u9762\u524d\u65f6\uff0c\u5e03\u5e0c\u6cd5\u5b98\u5ba3\u5e03\u4ed6\u4eec\u4e3a\u8363\u8a89\u90a6\u8054\u6210\u5458\uff0c\u5e76\u6388\u4e88\u4ed6\u4eec\u8fd9\u5ea7\u57ce\u5e02\u7684\u5fae\u578b\u94a5\u5319\uff0c\u4ece\u800c\u8ba9\u4ed6\u4eec\u900d\u9065\u6cd5\u5916\u3002)\u3002\u6211\u544a\u8bc9\u4ed6\uff0c\u6211\u7684\u66fe\u7956\u7236\uff0c\u8d1d\u5f17\u5229\u6cd5\u5b98\u7684\u53d4\u53d4\uff0c\u4e00\u751f\u90fd\u5728\u81ea\u8c6a\u5730\u8c08\u8d77\u4ed6\u5728\u5b5f\u83f2\u65af\u4e0e\u5e74\u8fc8\u7684\u9003\u72af\u5f17\u5170\u514b\u00b7\u8a79\u59c6\u65af(Frank James)\u7684\u4f1a\u9762\uff0c\u9a6c\u8482\u81ea\u5df1\u53ef\u80fd\u5c31\u662f\u5728\u5927\u7ea6\u540c\u4e00\u65f6\u95f4\u5728\u90a3\u91cc\u9047\u5230\u4e86\u5f17\u5170\u514b\u00b7\u8a79\u59c6\u65af\u3002(\u5728\u4e66\u4e2d\uff0c\u739b\u8482\u6ca1\u6709\u6211\u7684\u66fe\u7956\u7236\u90a3\u4e48\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff1b\u5c3d\u7ba1\u5979\u88ab\u201c\u5f6c\u5f6c\u6709\u793c\u7684\u8001\u9003\u72af\u201d\u79d1\u5c14\u00b7\u6768\u683c(Cole Young)\u6253\u52a8\u4e86\uff0c\u4f46\u5f53\u8a79\u59c6\u65af\u7ad9\u8d77\u6765\u8fce\u63a5\u5979\u65f6\uff0c\u5979\u8bf4\uff1a\u201c\u5750\u7740\u522b\u52a8\uff0c\u5783\u573e\uff01\u201d)\u3002\n\u8fd8\u6709\u6211\u7684\u7956\u6bcd\u5e03\u5e0c\uff0c\u5728\u5979\u4ece\u7236\u4eb2\u90a3\u91cc\u7ee7\u627f\u7684\u4f17\u591a\u4e66\u7c4d\u4e2d\uff0c\u670919\u4e16\u7eaa\u4f5c\u5bb6\u4f0a\u683c\u7eb3\u4fee\u65af\u00b7L\u00b7\u5510\u7eb3\u5229(Ignatius L.Donnelly)\u7684\u4f5c\u54c1(\u201c\u4e9a\u7279\u5170\u8482\u65af\uff1a\u53e4\u8001\u7684\u4e16\u754c\u201d)\u3002\n\u201c\u6211\u60f3\u5979\u81ea\u5df1\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u4f5c\u5bb6\uff0c\u201d\u67e5\u7406\u5927\u65b9\u5730\u8bf4\u3002\n\u201c\u8fd9\u53ef\u80fd\u4e0d\u662f\u5979\u7684\u9519\u3002\u90a3\u4e9b\u8001\u5bb6\u4f19\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u88ab\u9ad8\u538b\u7684\u6587\u6848\u7f16\u8f91\u6253\u5f97\u7cbe\u75b2\u529b\u7aed\u3002\u201c\u3002\n\u201c\u201d\u4e0d\u662f\u5979\u3002\u5979\u4f1a\u5199\u5173\u4e8e\u683c\u7f57\u5f17\u00b7\u514b\u5229\u592b\u5170\u7684\u6587\u7ae0\uff0c\u7136\u540e\u5927\u8086\u5ba3\u626c\u6c34\u6c1f\u5316\u7684\u5371\u9669\u3002\u201c\u3002\n\u201c\u8fd9\u6b63\u662f\u6211\u7684\u89c2\u70b9\u3002\u8fd9\u4e9b\u5c31\u662f\u6211\u559c\u6b22\u7684\u90a3\u79cd\u6d3b\u6cfc\u7684\u526f\u4e1a\u3002\u201c\u3002\n\u5f53\u7136\uff0c\u4ed6\u662f\u5bf9\u7684\u3002\u5982\u679c\u8bf4\u6ce2\u8482\u65af\u7684\u4e66\u6709\u4ec0\u4e48\u6307\u5bfc\u98ce\u683c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u90a3\u4e9b\u5207\u9898\u548c\u751f\u52a8\u7684\u65c1\u767d\u3002(\u5f53\u6211\u95ee\u4ed6\u201c\u771f\u7802\u783e\u201d\u7684\u7531\u6765\u65f6\uff0c\u4ed6\u544a\u8bc9\u6211\uff0c\u5728\u4ed6\u79bb\u5f00\u201c\u8bba\u575b\u62a5\u201d\uff0c\u201c\u6ca1\u4ec0\u4e48\u4e8b\u505a\u201d\u540e\uff0c\u4ed6\u6700\u559c\u6b22\u7684\u5c31\u662f\u53bb\u56fe\u4e66\u9986\uff0c\u9605\u8bfb\u519c\u6751\u62a5\u7eb8\u6863\u6848\u9986\u91cc\u6742\u4e71\u65e0\u7ae0\u7684\u201c\u5730\u65b9\u7279\u8272\u201d\u6587\u7ae0\u3002)\u3002\u90a3\u4e9b\u6734\u7d20\u7684\u8001\u7f8e\u56fd\u4eba\u7684\u58f0\u97f3-\u4f9d\u6b21\u662f\u6b63\u5f0f\u7684\u3001\u60b2\u559c\u5267\u7684\u548c\u4ee4\u4eba\u96be\u4ee5\u5fd8\u6000\u7684-\u5728\u4ed6\u7684\u4f5c\u54c1\u7684\u6bcf\u4e00\u9875\u4e0a\u90fd\u88ab\u5177\u4f53\u5316\uff0c\u5177\u6709\u4eba\u4eec\u6709\u65f6\u5728150\u5e74\u524d\u7684\u94f6\u7248\u5370\u5237\u672f\u4e2d\u770b\u5230\u7684\u7d27\u8feb\u611f\u3002\u4eba\u4eec\u5fc5\u987b\u56de\u523019\u4e16\u7eaa\u548c\u5410\u6e29\uff0c\u624d\u80fd\u627e\u5230\u53e6\u4e00\u4f4d\u50cf\u4ed6\u4e00\u6837\u6355\u6349\u5230\u8fd9\u4e9b\u7279\u6b8a\u97f5\u5f8b\u7684\u4f5c\u5bb6\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u5728\u6700\u9ad8\u5c42\u6b21\u4e0a\u7406\u89e3\u4e8620\u4e16\u7eaa\u4e2d\u671f\u5e7f\u544a\u548c\u7535\u5f71\u4e2d\u8fc7\u6ee4\u51fa\u6765\u7684\u90a3\u4e9b\u76f8\u540c\u7684\u58f0\u97f3\uff1b\u56e0\u6b64\uff0c\u201c\u8bfa\u4f0d\u5fb7\u201d\u548c\u201c\u5357\u65b9\u7684\u72d7\u201d\u4ee5\u53ca\u4ed6\u4ee560\u5e74\u4ee3\u548c70\u5e74\u4ee3\u4e3a\u80cc\u666f\u7684\u5176\u4ed6\u4e66\u7c4d\u7684\u63aa\u8f9e\u6ed1\u7a3d\u3001\u7280\u5229\u800c\u540c\u6837\u7eaf\u7cb9\u3002\n\u201c\u771f\u6b63\u7684\u7802\u783e\u201d\u5728\u82f1\u56fd\u518d\u7248\u540e\uff0c\u8fd8\u6709\u6211\u5199\u7684\u540e\u8bb0\uff0c\u67e5\u7406\u88ab\u51fa\u7248\u5546\u9009\u62e9\u7684\u5c01\u9762\u5f04\u5f97\u5fc3\u70e6\u610f\u4e71\uff1a\u4e00\u5f20\u4ed6\u975e\u5e38\u719f\u6089\u7684\u624b\u67aa\u56fe\u6837\uff0c\u4ed6\u5bf9\u5b83\u7684\u5386\u53f2\u3001\u6587\u5316\u548c\u6280\u672f\u7ec6\u8282\u90fd\u4e86\u5982\u6307\u638c\uff0c\u7cbe\u786e\u5230\u6bcf\u79d2\u7684\u6b65\u6570\u548c\u5b50\u5f39\u7684\u9897\u7c92--\u8fd9\u662f\u4e00\u5f20\u201c\u9ed1\u5e2e\u67aa\u53e3\u201d\uff0c\u5b8c\u5168\u4e0d\u9002\u5408\u9a6c\u8482\u00b7\u7f57\u65af(Mattie Ross)\u6216\u90a3\u4e2a\u65f6\u4ee3\u7684\u4efb\u4f55\u4eba\u7269\u3002\u201c\u9ed1\u5e2e\u67aa\u53e3\u201d\u5b8c\u5168\u4e0d\u9002\u5408\u9a6c\u8482\u00b7\u7f57\u65af(Mattie Ross)\u6216\u90a3\u4e2a\u65f6\u4ee3\u7684\u4efb\u4f55\u4eba\u7269\u3002\u4ed6\u5e2e\u4e86\u82f1\u56fd\u51fa\u7248\u5546\u7684\u5fd9\uff0c\u7ed9\u4ed6\u4eec\u5199\u4e86\u4e00\u5c01\u6781\u5176\u8be6\u7ec6\u548c\u7fd4\u5b9e\u7684\u4fe1\uff0c\u76f4\u622a\u4e86\u5f53\u5730\u4ecb\u7ecd\u4e86\u90a3\u4e2a\u65f6\u671f\u7684\u7f8e\u56fd\u67aa\u652f\uff0c\u5f53\u201c\u827a\u672f\u90e8\u7684\u67d0\u4e2a\u5e74\u8f7b\u4eba\u201d\u56de\u4fe1\u5411\u4ed6\u4fdd\u8bc1\u6ca1\u6709\u4eba\u4f1a\u77e5\u9053\u5176\u4e2d\u7684\u533a\u522b\u65f6\uff0c\u4ed6\u611f\u5230\u5f88\u75db\u82e6\u3002\u6211\u4eec\u7684\u82f1\u56fd\u8868\u4eb2\u7684\u8fd9\u79cd\u6f2b\u4e0d\u7ecf\u5fc3\u7684\u6001\u5ea6--\u201c\u73a9\u5f04\u540d\u5b57\u3001\u65e5\u671f\u3001\u4e8b\u5b9e\u7b49\u7b49\u201d--\u4ed6\u4ece\u4ed6\u5728\u4f26\u6566\u4e3a\u201c\u8bba\u575b\u62a5\u201d\u5de5\u4f5c\u7684\u65f6\u5019\u5c31\u5f88\u6e05\u695a\u4e86\u3002\u201c\u800c\u4e14\uff0c\u201d\u4ed6\u5fe7\u90c1\u5730\u6307\u51fa\uff0c\u201c\u4ed6\u4eec\u5bf9\u7f8e\u56fd\u7684\u770b\u6cd5--\u5927\u591a\u662f\u7535\u5f71\u4e2d\u8fc7\u65f6\u7684\u6c11\u4fd7\u6545\u4e8b\uff0c\u4e00\u5f00\u59cb\u5c31\u662f\u9519\u8bef\u7684--\u662f\u56fa\u5b9a\u7684\u3001\u4e0d\u53ef\u6539\u53d8\u7684\u3002\u201d\n\u4e0d\u4e45\u4e4b\u540e\uff0c\u67e5\u7406\u4e00\u5982\u65e2\u5f80\u5730\u771f\u7684\u4e0d\u63a5\u7535\u8bdd\u4e86\u3002\u6211\u505a\u4e86\u4ec0\u4e48\u60f9\u607c\u4ed6\u7684\u4e8b\u4e86\u5417\uff1f\u8fd8\u662f\u6076\u4f5c\u5267\u7684\u4eba\u53d8\u5f97\u592a\u8fc7\u5206\u4e86\uff1f\u90a3\u4e9b\u4ece\u6765\u4e0d\u662f\u5f88\u591a\u7684\u4fe1\u4e5f\u505c\u4e86\u4e0b\u6765\u3002(\u4ed6\u6700\u540e\u4e00\u5c01\u4fe1\u7684\u9644\u8a00\u8ba9\u6211\u53d1\u7b11\uff0c\u5c3d\u7ba1\u8fd9\u662f\u4ed6\u5199\u7ed9\u6211\u7684\u6700\u540e\u4e00\u53e5\u8bdd\uff1a\u201c\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u671f\u5f85\u53e6\u4e00\u90e8\u5510\u5a1c\u00b7\u5854\u7279(Donna Tartt)\u751f\u52a8\u7684\u5c0f\u8bf4\uff1f\u201d)\u3002\u4ed6\u4ece\u6765\u6ca1\u6709\u7ed9\u6211\u6253\u7535\u8bdd\uff0c\u6211\u603b\u662f\u7ed9\u4ed6\u6253\u7535\u8bdd\uff0c\u76f4\u5230\u5f88\u4e45\u4ee5\u540e\uff0c\u6211\u624d\u77e5\u9053\u6211\u4eec\u8c08\u8bdd\u4e2d\u65ad\u7684\u771f\u6b63\u539f\u56e0\uff1a\u4ed6\u60a3\u6709\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u3002\u8fd9\u5f88\u96be\u4e0e\u67e5\u7406\u5bf9\u67aa\u652f\u3001\u5730\u7406\u548c\u7f8e\u56fd\u5386\u53f2\u7b49\u65b9\u9762\u7684\u8be6\u7ec6\u800c\u9ad8\u5ea6\u5177\u4f53\u7684\u77e5\u8bc6\u76f8\u543b\u5408\uff0c\u66f4\u96be\u4e0e\u6211\u5728\u89c1\u5230\u4ed6\u4e4b\u524d\u5f88\u4e45\u5c31\u901a\u8fc7\u4ed6\u7684\u5c0f\u8bf4\u6e17\u900f\u5230\u6211\u8840\u6db2\u4e2d\u7684\u90a3\u79cd\u51b7\u6f20\u3001\u987d\u76ae\u3001\u4f4e\u8c03\u7684\u673a\u667a\u76f8\u543b\u5408\u4e86\u3002\n\u6211\u73b0\u5728\u5f88\u60f3\u542c\u542c\u4ed6\u5bf91918\u5e74\u6d41\u611f\u75ab\u60c5\u7684\u770b\u6cd5\u3002\u6d41\u611f\u75ab\u60c5\u5728\u201c\u771f\u5b9e\u7684\u7802\u783e\u201d\u4e2d\u77ed\u6682\u51fa\u73b0\uff0c\u8fd9\u6b63\u662f\u4ed6\u53ef\u4ee5\u7528\u6d41\u5229\u7684\u8bed\u8a00\u548c\u4eb2\u8eab\u7ecf\u5386\u8fc7\u5b83\u7684\u4eba\u7684\u8f76\u4e8b\u6765\u8c08\u8bba\u7684\u90a3\u79cd\u5386\u53f2\u8bdd\u9898\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u771f\u5e0c\u671b\u6211\u53bb\u963f\u80af\u8272\u5dde\u770b\u4ed6\uff1b\u4ed6\u8981\u6c42\u6211\u53bb\u770b\u4ed6\uff0c\u4f46\u5f53\u5f97\u77e5\u6211\u4e0d\u5f00\u8f66\u65f6\uff0c\u4ed6\u611f\u5230\u5f88\u56f0\u60d1\u3002(\u4efb\u4f55\u8bfb\u8fc7\u4ed6\u5c0f\u8bf4\u7684\u4eba\u90fd\u4f1a\u89c9\u5f97\u8fd9\u5f88\u6709\u8da3\uff0c\u7279\u522b\u662f\u201c\u5916\u56fd\u4f6c\u201d\u548c\u201c\u5357\u65b9\u4e4b\u72d7\u201d\uff0c\u5728\u8fd9\u4e24\u90e8\u5c0f\u8bf4\u4e2d\uff0c\u6c7d\u8f66\u548c\u6c7d\u8f66\u7ef4\u4fee\u6784\u6210\u4e86\u4e25\u5389\u548c\u9a91\u58eb\u51c6\u5219\u7684\u57fa\u7840\u3002)\n\u4ed6\u7684\u97f3\u8c03\u5f88\u7eaf\u6b63\u3002\u4ed6\u4e00\u70b9\u4e5f\u4e0d\u541d\u556c\u3002\u4ed6\u7406\u89e3\u5e76\u4f20\u8fbe\u4e86\u7f8e\u56fd\u7684\u7cae\u98df\u3002\n\u81f3\u4e8e\u5c0f\u8bf4\uff0c\u4ece\u4e94\u5e74\u7ea7\u5230\u73b0\u5728\uff0c\u5b83\u4eec\u5e2e\u52a9\u6211\u5ea6\u8fc7\u4e86\u9eef\u6de1\u548c\u4e0d\u786e\u5b9a\u7684\u65f6\u4ee3\uff0c\u662f\u4ee4\u4eba\u60ca\u53f9\u3001\u611f\u6fc0\u548c\u5feb\u4e50\u7684\u6c38\u65e0\u6b62\u5883\u7684\u6e90\u6cc9\u3002\u6240\u6709\u8bd5\u56fe\u4f20\u8fbe\u5176\u9b54\u529b\u7684\u4f5c\u5bb6\u6700\u7ec8\u90fd\u4f1a\u9047\u5230\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u63cf\u8ff0\u65e0\u6cd5\u5f62\u5bb9\u7684\u4e8b\u7269\uff1f\u4e5f\u8bb8\u6211\u80fd\u7ed9\u201c\u771f\u6b63\u7684\u7802\u783e\u201d\u6700\u597d\u7684\u63cf\u8ff0\u662f\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u628a\u5b83\u7ed9\u8fc7\u4efb\u4f55\u4e0d\u559c\u6b22\u5b83\u7684\u8bfb\u8005--\u7537\u6027\u6216\u5973\u6027\uff0c\u4efb\u4f55\u5e74\u9f84\u6216\u60c5\u611f\u3002\u81f3\u4e8e\u5176\u4ed6\u6211\u540c\u6837\u559c\u6b22\u7684\u4e66\uff0c\u5b83\u4eec\u66f4\u53e4\u602a\u3001\u66f4\u6709\u8da3\uff0c\u5145\u6ee1\u4e86\u4e00\u4e9b\u6709\u53f2\u4ee5\u6765\u6700\u597d\u3001\u6700\u7279\u522b\u7684\u7f8e\u56fd\u65b9\u8a00\uff0c\u5373\u4f7f\u5728Covid\u9a71\u52a8\u7684\u7126\u8651\u7684\u64e6\u4f24\u4e2d\uff0c\u5b83\u4eec\u4e5f\u8ba9\u6211\u7b11\u5f97\u624b\u8db3\u65e0\u63aa\uff0c\u7ed9\u4e86\u6211\u4e00\u4e9b\u6211\u627e\u5230\u7684\u4e3a\u6570\u4e0d\u591a\u7684\u9003\u8131\u65f6\u523b\u3002\n\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u8c08\u8fc7\u51fa\u7248\u6216\u6587\u827a\u754c\uff0c\u4ed6\u5bf9\u6b64\u6beb\u65e0\u5174\u8da3\u3002\u4ed6\u66fe\u7ecf\u63d0\u5230\u8fc7\u7684\u6700\u63a5\u8fd1\u7684\u662f\u4e00\u6b21\u63d0\u5230\u201cQuality Lit\u6e38\u620f\u201d(\u5c3d\u804c\u5c3d\u8d23\u5730\u5c06\u8fd9\u53e5\u8bdd\u5f52\u529f\u4e8eTerry Southern)\uff0c\u5c31\u597d\u50cf\u201cQuality List\u201d\u662f\u4e00\u4e2a\u4ed6\u81ea\u5df1\u6ca1\u6709\u53c2\u4e0e\u7684\u95ee\u9898\u3002\u4f46\u8fd9\u662f\u4e00\u573a\u4ed6\u6253\u5f97\u6700\u9ad8\u6c34\u5e73\u7684\u6bd4\u8d5b\uff0c\u5c3d\u7ba1\u4ed6\u6ca1\u6709\u503e\u5411\u4e8e\u7528\u4f20\u7edf\u7684\u6572\u6253\u80f8\u819b\u3001\u81ea\u6211\u9a71\u52a8\u7684\u65b9\u5f0f\u73a9\u8fd9\u573a\u6bd4\u8d5b\u3002\u4ed6\u7684\u97f3\u8c03\u5f88\u7eaf\u6b63\u3002\u4ed6\u4e00\u70b9\u4e5f\u4e0d\u541d\u556c\u3002\u4ed6\u7406\u89e3\u5e76\u4f20\u8fbe\u4e86\u7f8e\u56fd\u7684\u7cae\u98df\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u672a\u6765\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u5bf9\u8bd5\u56fe\u7406\u89e3\u6211\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u56fd\u5bb6\u4ec0\u4e48\u662f\u4f53\u9762\u7684\u5386\u53f2\u5b66\u5bb6\u6765\u8bf4\u662f\u6709\u4ef7\u503c\u7684\u3002\u6211\u4e0d\u7981\u60f3\u5230\uff0c\u4ed6\u7559\u7ed9\u6211\u4eec\u7684\u5c0f\u8bf4\u5c06\u7ee7\u7eed\u4e3a\u8bfb\u8005\u63d0\u4f9b\u907f\u96be\u6240\u548c\u6170\u85c9\uff0c\u4e5f\u8bb8\u5728\u6bd4\u6211\u4eec\u81ea\u5df1\u7684\u65f6\u4ee3\u66f4\u9ed1\u6697\u7684\u65f6\u5019\u3002", "note_en": "It is likely no surprise to readers who love the novels of Charles Portis that everything delightful about his books was delightful about him as a person. The surprise, if anything, was how closely his personality tallied with his work. He was blunt and unpretentious, wholly without conceit. He was polite. He was kind. His puzzlement at the 21st-century world in which he found himself was deep and unfeigned. And yet almost everything out of his mouth was dry, new and pungently funny.\n Portis  died in February. I\u2019ve loved his work all my life \u2014 \u201cThe Dog of the South\u201d is a family favorite, as is \u201cMasters of Atlantis\u201d \u2014 though the work closest to me is \u201cTrue Grit,\u201d which I recorded as an audiobook a number of years ago. I\u2019m often asked how I came to record another author\u2019s book; most simply, the answer is voice. I grew up hearing \u201cTrue Grit\u201d read aloud to me by my mother and my grandmother and even my great-grandmother. This was a tremendous gift, as Portis caught better than any writer then alive the complex and highly inflected regional vernacular I heard spoken as a child \u2014 mannered and quaint, old-fashioned and highly constructed but also blunt, roughshod, lawless, inflected by Shakespeare and Tennyson and King James but also by agricultural gazetteers and frilly old Christian pamphlets, by archaic dictionaries of phrase and fable, by the voices of mule drivers and lady newspaper poets and hanging judges and hellfire preachers.\n  Then too, the books are so funny that they cry to be read aloud. Pick up any novel by Portis and open it to any page and you will find something so devastatingly strange and fresh and hilarious that you will want to run into the next room and read it aloud to somebody. His language is precise but whimsical, understated but anarchic, and as with Barbara Pym or P.G. Wodehouse, it\u2019s tough to communicate the flavor of it without resorting to long quotes. All readers who love Portis have lines they like to swap back and forth; and a conversation among his admirers will mostly consist of such gems \u2014 committed to memory \u2014 exchanged and mutually admired. One thinks of Dr. Buddy Casey\u2019s lecture on the Siege of Vicksburg, which Raymond Midge, the narrator of \u201cThe Dog of the South,\u201d plays again and again on Sunday drives and at the shaving mirror, an action that, we are given to understand, has helped to drive away his wife, Norma. Ray explains: \u201cI had heard the tape hundreds of times and yet each time I would be surprised and delighted anew by some bit of Casey genius, some description or insight or narrative passage or sound effect. The bird peals, for instance. Dr. Bud gives a couple of unexpected bird calls in the tense scene where Grant and Pemberton are discussing surrender terms under the oak tree. The call is a stylized one \u2014  tu-whit,  tu-whee \u2014 and is not meant to represent that of any particular bird. It has never failed to catch me by surprise. But no one could hope to keep the whole of that lecture in his head at once, such are its riches.\u201d\n Such too are the riches of Portis. His characters, who like the characters of Samuel Beckett often find themselves thrown in with one another on long perplexing journeys, are single-minded and completely un-self-conscious innocents (veterans, pedants, failed schoolteachers and salesmen) whose speech startles and delights, on nearly every page. Though it\u2019s often said of Portis that he\u2019s the least known of great American novelists, I cannot think of another 20th-century writer \u2014  any writer, American or otherwise \u2014 whose works are beloved among quite so many differing age groups and literary tastes, from the most sophisticated to the simplest. Walker Percy was a fan; so was Roald Dahl. As Wells Tower  pointed out in The New Yorker: \u201cPortis\u2019s diffident, modestly gallant characters were a world away from the marital bonfires and priapisms of other male writers of his crop \u2014 Roth, Updike, Yates. His male heroes practiced a masculinity that by the standards of the day was uniquely (and unfashionably) nontoxic.\u201d\n  Comedy is the most ephemeral of the arts. There are very few comic novels that do not wither with time, and even fewer novels \u2014 comic or otherwise \u2014 that can be given to pretty much anyone, from an old person to a small child. Even more rare is a novel one can reliably turn to for cheer when one is sick or sad. But \u201cTrue Grit\u201d is this rare novel, and Mattie Ross, its narrator, is one of the greatest of Portis\u2019s   innocents: a Presbyterian spinster who in old age relates the story of how, as a child, she struck out in the 1870s to avenge her father\u2019s murder. \u201cPeople do not give it credence that a 14-year-old girl could leave home and go off in the wintertime to avenge her father\u2019s blood but it did not seem so strange then, although I will say it did not happen every day.\u201d It\u2019s a serious book by any measure; Mattie\u2019s rage and grief are thunderous (\u201cWhat a waste! Tom Chaney would pay for this! I would not rest easy until that Louisiana cur was roasting and screaming in hell!\u201d) and yet perhaps the greatest pleasure of the book is Mattie\u2019s speaking voice: rambling, deadpan, didactic, sprinkled with oddball opinions and facts, obstinate in its views and acute in its observations. Of Chaney, the hired man who murdered her father (\u201cHe was a short man with cruel features. I will tell more about his face later\u201d), she has this to say: \u201cHe had no gun but he carried his rifle slung across his back on a piece of cotton plow line. There is trash for you. He could have taken an old piece of harness and made a nice leather strap for it. That would have been too much trouble.\u201d\n It\u2019s hard not to go on with the quotes; suffice it to say that I could hear my grandmother\u2019s voice \u2014 and a bit of my own \u2014 very clearly in this. But though I knew how wonderful a book it was to read aloud, I also felt there was very little chance of interesting Portis in an audiobook recording. After abruptly quitting his job as London bureau chief of The New York Herald Tribune in the early 1960s, he had gone back to live in his native Arkansas, and no one in New York had seen him for years. People liked to use the word \u201crecluse,\u201d which, I suspected, spoke less to an abnormal way of life than to an ex-newspaperman\u2019s natural distrust of the press. It seemed clear enough in any case that he didn\u2019t enjoy dealing with inquiries about his novels. But I drummed up my courage and asked anyway, and much to my surprise his number was passed along to me with the message: Call him. He wants to talk to you.\n How many times in life does one have the chance to speak to a writer revered from childhood?\n How many times in life does one have the chance to speak to a writer revered from childhood? In 2004, around noon on a weekday, I found myself standing in my kitchen in Virginia with Portis\u2019s telephone number in hand. I had been informed that he did not like to talk on the telephone and was bad about not picking up. But somewhat to my surprise he answered right away.\n A slow, rich Southern voice, reminiscent of the actor Randy Quaid. \u201cMr. Portis?\u201d I said, but instead of the introduction I was ready to make, there followed instead a leisurely and highly surreal exchange that I am at a loss to replicate \u2014 something to do with backfiring cars? and knocks on the door? \u2014 which continued at cross-purposes for some moments until, without missing a beat, he said pleasantly: \u201cOh I beg your pardon. I thought you were my crank caller.\u201d\n I held the line, not knowing what to say. There seemed no clear way to move forward. Had I offended him? \u201cI\u2019m sorry \u2014\u201d\n \u201cOh no. It is just that I have a regular crank caller and almost every day he telephones about this time. If I don\u2019t pick up he rings and rings.\u201d\n  \u201cNo, it is just some prankster. Local, I think. Many people around here do not seem to have much to do.\u201d\n  \u201cNo. To tell you the truth I am a little disappointed on the days he does not telephone. I have come to look forward to his calls.\u201d\n \u201cI can get off the phone if you want me to,\u201d I offered.\n \u201cNo. There is no need to do that. He will call me back if he finds the line is busy.\u201d Then: \u201cWhere are you calling from?\u201d\n    \u201cThat\u2019s a curious accent. The Virginia accent. A lot of Virginians sound more or less like Canadians to me. You sound like you are from around here.\u201d\n I explained that I was from across the river, in Mississippi, and how my family and I knew his books practically by heart and how I hoped he might permit me to make an audio recording of \u201cTrue Grit\u201d \u2014\u00a0I had his book beside me at the telephone, a reading prepared \u2014 but the actual purpose of my call did not seem to interest him. \u201cAre your people still in Mississippi?\u201d he asked, reverting bewilderingly to the only fact that had caught his attention.\n \u201cMore or less. The ones not dead, anyway. But the dead ones too.\u201d\n  I told him. \u201cThat is near the town of Charlotte Court House,\u201d he said. \u201cAnd also along the line of Lee\u2019s Retreat. Did you know that the town of Charlotte Court House was once called Marysville? That is what it must have been called when Patrick Henry gave a version of his \u2018Liberty or Death\u2019 speech there. At some point after the war they changed its name to Charlotte Court House. I don\u2019t actually know why they did that. They loved to rename those towns in Virginia. For example, the little town of Courtland was once known as \u2018Jerusalem.\u2019\u201d\n  I was impressed that he was able to pull all this stuff off the top of his head. A long, relaxed conversation ensued, which might as well have been taking place in 1890 between me and a veteran of the Civil War, for its utter lack of any reference whatsoever beyond the Reconstruction South: Appomattox, High Bridge, Gen. William \u201cBilly\u201d Mahone and his lively counterattack in the late-war siege of Petersburg. The cotton trade. Dogs. Guns. Dogs. I noted particularly the fixed hum on his end of the line \u2014 the same rotary-phone hum I always heard when I called my grandmother in Mississippi. Although I didn\u2019t want the conversation to end, I still had my copy of \u201cTrue Grit\u201d by the phone, open to my place, and at some point, by way of Rooster Cogburn\u2019s Civil War service (Charlie\u2019s voice was not unlike what I imagined Rooster Cogburn\u2019s might be), I managed to work back around to it. \u201cWould you like for me to read a line or two from the book?\u201d I asked. \u201cI have it right here.\u201d\n \u201cNaw,\u201d he said, \u201cyou\u2019re a good Mattie, you\u2019ll do just fine,\u201d and then kept talking, as if we were riding for the sixth hour on horseback together on some country road.\n We corresponded after that, and spoke on the telephone \u2014 my thought being that if he welcomed annoyance callers so warmly, he might not mind sometimes hearing from me. He was modest about his achievements and uninterested in talking about his life as a novelist or indeed about novels, period; though the diction of his books \u2014 effortless as birdsong \u2014 pervaded his every spoken sentence, from his conversation one would never suspect that he\u2019d written a novel at all, much less several great ones. His preferred subjects were local history, his boyhood in Arkansas, his time in the military (a postscript to a 2006 letter informs me: \u201cThis stamp shows your fellow Virginian and legendary Marine hero Chesty Puller. He was my commanding officer years ago at Camp Lejeune, N.C.\u201d) and above all his life as a newspaperman (somewhat perplexingly to me, he regarded himself mainly as a former newspaperman instead of the major and singular American novelist he was). Thanks to his time on The Memphis Commercial Appeal, he knew very well the Memphis of my childhood, Memphis being the nearest city of any size to my little North Mississippi town. (Regarding Mississippi: \u201cWhy do you all like to write so much over there? The Arkansan novelist is a much rarer fowl.\u201d) As a young reporter he had attended the funeral of Elvis\u2019s mother \u2014 a story in itself \u2014 and we talked about the hysteria in Memphis after Elvis\u2019s death, nearly 20 years later, when weeping businessmen had taken to the airwaves in lieu of their regular commercials, wailing: \u201cSleep warm, Elvis!\u201d\n We established that I was related to the fearsome Memphis judge Beverly Boush\u00e9, about whom Charlie had written when in 1958 Judge Beverly presided over a mock trial of a group of Indiana Jaycees, who for some unknown reason had chosen to re-enact a flatboat trip that Abe Lincoln made down the Mississippi River at age 19. (When the Jaycees were removed from the flatboat and hauled before him by other Jaycees costumed as Rebs, Judge Boush\u00e9 let them off by pronouncing them honorary Confederates and granting them miniature keys to the city.) I told him that my great-grandfather, Judge Beverly\u2019s uncle, had spoken proudly all his life about his meeting in Memphis with the elderly outlaw Frank James, where Mattie herself had met Frank James at likely round about the same time. (Mattie, in the book, was less impressed than my great-grandfather; though she is taken with \u201cthe courteous old outlaw\u201d Cole Younger, when James rises to greet her she says: \u201cKeep your seat, trash!\u201d)\n Then too there was my Boush\u00e9 grandmother, who numbered among the many books she\u2019d inherited from her father the works of 19th-century author Ignatius L. Donnelly (\u201cAtlantis: The Antediluvian World\u201d), whose colorful ideas informed those of Mr. Jimmerson and Austin Popper in \u201cMasters of Atlantis.\u201d These, like Mr. Jimmerson, she regarded as sound scientific fact, to the point of suggesting that I build a scale model of Atlantis for a ninth-grade science fair. (It speaks to the academic standards of my school that I got a good grade for this project, my science teacher failing to recognize that even a very carefully constructed scale model of Atlantis in no way constituted Science.) My grandmother was the one who\u2019d given me \u201cTrue Grit\u201d to read at age 10. Like Mattie herself, she had also been an indefatigable writer of historical articles for our town newspaper.\n \u201cAnd I expect she was a pretty good writer herself, too,\u201d Charlie said generously.\n  \u201cThat may not have been her fault. A lot of those old birds got the starch knocked out of them by heavy-handed copy editors.\u201d\n \u201cNot her. She would be writing about Grover Cleveland and go off on some rant about the danger of water fluoridization.\u201d\n \u201cMy point exactly. Those are just the kind of lively asides I enjoy.\u201d\n He was right, of course. If there\u2019s a guiding style of Portis\u2019s books, it\u2019s those tangents and lively asides. (When I asked him about the origins of \u201cTrue Grit,\u201d he told me that after he left The Tribune and \u201cdidn\u2019t have much to do\u201d he liked nothing better than to go to the library and read rambling \u201clocal color\u201d pieces in the archives of rural newspapers.) Those homely old American voices \u2014 by turns formal, tragicomic and haunting \u2014 are crystallized on every page of his work, with the immediacy one sometimes sees in a daguerreotype 150 years old. One would have to return to the 19th century, and Twain, to find another author who captured those particular cadences as well as he. More than this, he understood at the highest level those same voices filtered through advertisements and film of the mid-20th century; hence the hilarious, incisive and equally pure diction of \u201cNorwood\u201d and \u201cThe Dog of the South\u201d and his other books set in the \u201960s and \u201970s.\n  After \u201cTrue Grit\u201d was reissued in England, with an afterword written by me, Charlie was distressed by the cover the publisher had chosen: a drawing of a handgun that he knew intimately in every historical, cultural and technical specific, down to the feet per second and the grain of bullet it took \u2014 a \u201cgangster gat\u201d all wrong for Mattie Ross or any character of the era. He had done the British publisher the favor of writing them an extremely detailed and informative letter setting them straight on American firearms of the period, and was pained when \u201csome youngster in the art department\u201d wrote back reassuring him that no one would know the difference. This cavalier attitude of our British cousins \u2014 \u201cplaying fast and loose with names, dates, facts, &amp;c.\u201d \u2014 he knew all too well from his time in London on The Tribune. \u201cAnd,\u201d he noted gloomily, \u201ctheir ideas about America \u2014 mostly out of date folklore from movies, which was wrong to start with \u2014 are fixed and unchangeable.\u201d\n Not long after this, Charlie, true to form, really did stop answering his phone. Had I done something to annoy him? Or had the prankster grown to be too much? The letters, never very many, stopped as well. (The postscript of his final letter, which makes me laugh even though it\u2019s the last line he ever wrote me: \u201cWhen may we expect another lively Donna Tartt novel?\u201d) He never called me, I always called him, and not until much later did I learn the real reason for the halt in our conversation: He had Alzheimer\u2019s. This is hard to square with Charlie\u2019s minute and highly specific knowledge of (among many other things) firearms, geography and American history, and even harder to square with the deadpan, playful, low-key wit that had seeped into my bloodstream via his novels long before I met him.\n I\u2019d give a lot right now to hear what he had to say about the flu epidemic of 1918. The flu epidemic makes a brief appearance in \u201cTrue Grit,\u201d and it\u2019s exactly the sort of historical subject upon which he could converse with the fluency and anecdote of someone who\u2019d survived it personally. More than that, I wish I\u2019d gone to Arkansas to see him; he\u2019d asked me to and was perplexed to learn I did not drive. (This will be amusing to any reader of his novels, particularly \u201cGringos\u201d and \u201cThe Dog of the South,\u201d in which automobiles and automotive maintenance form the basis of a stern and knightly code.)\n His pitch was pure. There was no meanness in him. He understood, and conveyed, the grain of America.\n As for the novels, they\u2019ve gotten me through times of bleakness and uncertainty from fifth grade to now, and are a never-ending source of amazement, gratitude and joy. All writers who attempt to convey their magic eventually knock into the problem: How to describe the indescribable? Probably the best description I can give of \u201cTrue Grit\u201d is that I\u2019ve never given it to any reader \u2014 male or female, of any age or sensibility \u2014 who didn\u2019t enjoy it. As for the others, which I love just as much, they are if anything weirder and funnier, filled with some of the best and most particular American vernacular ever written, and even amid the scrape of Covid-driven anxiety they\u2019ve convulsed me with laughter and given me some of the few moments of escape that I\u2019ve found.\n We never talked about publishing or the literary world; it was of no interest to him. The closest he ever came was a passing mention of \u201cthe quality lit game\u201d (dutifully attributing the quote to Terry Southern) as if \u201cquality lit\u201d were a concern in which he himself had no part. But it was a game he played at the highest level, despite the fact that he had no inclination to play it in the conventional chest-beating, ego-driven way. His pitch was pure. There was no meanness in him. He understood, and conveyed, the grain of America, in ways that may prove valuable in future to historians trying to understand what was decent about us as a nation. And I can\u2019t help thinking that the novels he left us will continue to provide refuge and comfort for readers, perhaps in times even darker than our own.", "posttime": "2020-06-11 03:19:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u67e5\u5c14\u65af,tartt", "title": "\u5510\u5a1c\u00b7\u5854\u7279\u8c08\u67e5\u5c14\u65af\u00b7\u6ce2\u8482\u65af\u7684\u72ec\u7279\u58f0\u97f3\u548c\u8f9b\u8fa3\u5e7d\u9ed8", "title_en": "Donna Tartt on the Singular Voice, and Pungent Humor, of Charles Portis", "transed": 1, "url": "https://www.nytimes.com/2020/06/09/books/charles-portis-true-grit-dog-of-the-south-gringos-masters-of-atlantis.html", "via": "", "real_tags": ["\u67e5\u5c14\u65af", "tartt"]}, {"category": "", "categoryclass": "", "imagename": "20b0f56e90cc9f55a8edabfb9342fec0.jpg", "infoid": 1006048, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u91d1\u878d\u4f53\u7cfb\u53ef\u80fd\u6b63\u5904\u4e8e\u707e\u96be\u7684\u8fb9\u7f18\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u80fd\u6551\u4e0d\u4e86\u5b83\u3002\n\u4f5c\u4e3a\u4e0e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u751f\u6d3b\u5728\u4e00\u8d77\u7684\u7f8e\u56fd\u4eba\uff0c\u7f8e\u56fd\u516c\u6c11\u5f88\u6e05\u695a\u5b83\u5bf9\u7ecf\u6d4e\u9020\u6210\u7684\u635f\u5931\uff1a\u4f9b\u5e94\u94fe\u7834\u88c2\uff0c\u521b\u7eaa\u5f55\u7684\u5931\u4e1a\u7387\uff0c\u5012\u95ed\u7684\u5c0f\u4f01\u4e1a\u3002\u6240\u6709\u8fd9\u4e9b\u56e0\u7d20\u90fd\u662f\u4e25\u91cd\u7684\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7f8e\u56fd\u9677\u5165\u6df1\u5ea6\u7684\u3001\u957f\u671f\u7684\u8870\u9000\u3002\u4f46\u662f\uff0c\u7ecf\u6d4e\u4e5f\u9762\u4e34\u7740\u53e6\u4e00\u4e2a\u5a01\u80c1\u3002\u5b83\u6f5c\u4f0f\u5728\u5927\u94f6\u884c\u7684\u8d44\u4ea7\u8d1f\u503a\u8868\u4e0a\uff0c\u800c\u4e14\u53ef\u80fd\u662f\u707e\u96be\u6027\u7684\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u9664\u4e86\u56f4\u7ed5\u5927\u6d41\u884c\u7684\u6240\u6709\u4e0d\u786e\u5b9a\u6027\u4e4b\u5916\uff0c\u5982\u679c\u6709\u4e00\u5929\u65e9\u4e0a\u4f60\u9192\u6765\u65f6\u53d1\u73b0\u91d1\u878d\u90e8\u95e8\u5df2\u7ecf\u5d29\u6e83\u3002\n\u4f60\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u6837\u7684\u5371\u673a\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\uff0c\u56e0\u4e3a\u4eba\u4eec\u5bf92008\u5e74\u5d29\u76d8\u7684\u8bb0\u5fc6\u4ecd\u7136\u8bb0\u5fc6\u72b9\u65b0\u3002\u4f46\u94f6\u884c\u4ece\u8fd9\u573a\u707e\u96be\u4e2d\u5438\u53d6\u7684\u6559\u8bad\u5f88\u5c11\uff0c\u65e8\u5728\u9632\u6b62\u5b83\u4eec\u627f\u62c5\u592a\u591a\u98ce\u9669\u7684\u65b0\u6cd5\u5f8b\u4e5f\u672a\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5904\u4e8e\u53e6\u4e00\u573a\u5d29\u76d8\u7684\u8fb9\u7f18\uff0c\u4e00\u573a\u4e0e2008\u5e74\u4e0d\u540c\u7684\u5d29\u76d8\uff0c\u4e0e\u5176\u8bf4\u662f\u5728\u5b9e\u8d28\u4e0a\uff0c\u4e0d\u5982\u8bf4\u662f\u5728\u7a0b\u5ea6\u4e0a\u3002\u8fd9\u4e00\u6b21\u53ef\u80fd\u4f1a\u66f4\u7cdf\u3002\n2008\u5e74\u7684\u91d1\u878d\u5371\u673a\u662f\u5173\u4e8e\u4f4f\u623f\u62b5\u62bc\u8d37\u6b3e\u7684\u3002\u6570\u5343\u4ebf\u7f8e\u5143\u7684\u8d2d\u623f\u8005\u8d37\u6b3e\u88ab\u91cd\u65b0\u6253\u5305\u6210\u79f0\u4e3a\u503a\u52a1\u62b5\u62bc\u503a\u5238(CDO)\u7684\u8bc1\u5238\u3002\u7406\u8bba\u4e0a\uff0cCDO\u65e8\u5728\u8f6c\u79fb\u94f6\u884c\u7684\u98ce\u9669\uff0c\u94f6\u884c\u5411\u8d2d\u623f\u8005\u653e\u8d37\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u53d1\u653e\u4f4f\u623f\u8d37\u6b3e\u7684\u94f6\u884c\u4e5f\u5728CDO\u4e0a\u5927\u4e3e\u62bc\u6ce8\uff0c\u5f80\u5f80\u4f7f\u7528\u5bf9\u6295\u8d44\u8005\u548c\u76d1\u7ba1\u673a\u6784\u9690\u85cf\u7684\u590d\u6742\u6280\u672f\u3002\u5f53\u623f\u5730\u4ea7\u5e02\u573a\u53d7\u5230\u6253\u51fb\u65f6\uff0c\u8fd9\u4e9b\u94f6\u884c\u53d7\u5230\u4e86\u53cc\u91cd\u5f71\u54cd\u30022007\u5e74\u672b\uff0c\u94f6\u884c\u5f00\u59cb\u62ab\u9732\u6570\u767e\u4ebf\u7f8e\u5143\u7684\u6b21\u8d37CDO\u635f\u5931\u3002\u7b2c\u4e8c\u5e74\uff0c\u96f7\u66fc\u5144\u5f1f(Lehman Brothers)\u5012\u95ed\uff0c\u62d6\u7d2f\u4e86\u7ecf\u6d4e\u3002\n\u8054\u90a6\u653f\u5e9c\u4ecb\u5165\u62ef\u6551\u4e86\u5176\u4ed6\u5927\u94f6\u884c\uff0c\u9632\u6b62\u4e86\u6050\u614c\u3002\u5e72\u9884\u63aa\u65bd\u594f\u6548\u4e86-\u5c3d\u7ba1\u5f53\u65f6\u5b83\u7684\u6210\u529f\u4f3c\u4e4e\u5e76\u4e0d\u786e\u5b9a-\u800c\u4e14\u7cfb\u7edf\u81ea\u6211\u7ea0\u6b63\u4e86\u3002\u5f53\u7136\uff0c\u8bb8\u591a\u7f8e\u56fd\u4eba\u56e0\u7ecf\u6d4e\u5d29\u6e83\u800c\u8499\u53d7\u635f\u5931\uff0c\u5931\u53bb\u4e86\u5bb6\u56ed\u3001\u5de5\u4f5c\u548c\u8d22\u5bcc\u3002\u7f8e\u56fd\u5bcc\u4eba\u548c\u7a77\u4eba\u4e4b\u95f4\u672c\u5df2\u4ee4\u4eba\u4e0d\u5b89\u7684\u5dee\u8ddd\u8fdb\u4e00\u6b65\u6269\u5927\u3002\u7136\u800c\uff0c\u5230\u4e862009\u5e743\u6708\uff0c\u7ecf\u6d4e\u5f00\u59cb\u4e0a\u884c\uff0c\u5386\u53f2\u4e0a\u6700\u957f\u7684\u725b\u5e02\u5df2\u7ecf\u5f00\u59cb\u3002\n\u4e3a\u4e86\u9632\u6b62\u4e0b\u4e00\u6b21\u5371\u673a\uff0c\u56fd\u4f1a\u57282010\u5e74\u901a\u8fc7\u4e86\u201c\u591a\u5fb7-\u5f17\u5170\u514b\u6cd5\u6848\u201d(Dodd-Frank Act)\u3002\u5728\u65b0\u89c4\u5219\u4e0b\uff0c\u94f6\u884c\u5e94\u8be5\u51cf\u5c11\u501f\u6b3e\uff0c\u51cf\u5c11\u957f\u671f\u8d4c\u6ce8\uff0c\u5e76\u63d0\u9ad8\u6240\u6301\u80a1\u4efd\u7684\u900f\u660e\u5ea6\u3002\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a\u5f00\u59cb\u8fdb\u884c\u201c\u538b\u529b\u6d4b\u8bd5\u201d\u4ee5\u4fdd\u8bc1\u94f6\u884c\u7684\u6b63\u5e38\u8fd0\u4f5c\u3002\u56fd\u4f1a\u8fd8\u8bd5\u56fe\u6539\u9769\u4fe1\u7528\u8bc4\u7ea7\u673a\u6784\uff0c\u8fd9\u4e9b\u673a\u6784\u88ab\u5e7f\u6cdb\u6307\u8d23\u4e3a\u5bfc\u81f4\u5371\u673a\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u53ef\u7591\u7684CDO\u7ed9\u4e88\u4e86\u9ad8\u5206\uff0c\u5176\u4e2d\u8bb8\u591aCDO\u90fd\u5939\u6742\u7740\u5411\u4e0d\u5408\u683c\u501f\u6b3e\u4eba\u53d1\u653e\u7684\u6b21\u7ea7\u8d37\u6b3e\u3002\u5728\u5371\u673a\u671f\u95f4\uff0c\u8d85\u8fc71.3\u4e07\u7b14\u8bc4\u7ea7\u4e3aAAA\u7684CDO\u6295\u8d44\u8fdd\u7ea6-\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u9ad8\u8bc4\u7ea7\u3002\n\u6539\u9769\u7684\u521d\u8877\u662f\u597d\u7684\uff0c\u4f46\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u963b\u6b62\u94f6\u884c\u91cd\u65b0\u9677\u5165\u65e7\u7684\u574f\u4e60\u60ef\u3002\u623f\u5730\u4ea7\u5371\u673a\u8fc7\u540e\uff0c\u6b21\u8d37CDO\u81ea\u7136\u5931\u5ba0\u3002\u9700\u6c42\u8f6c\u5411\u4e86\u4e00\u79cd\u7c7b\u4f3c\u7684-\u4e5f\u662f\u540c\u6837\u6709\u98ce\u9669\u7684-\u5de5\u5177\uff0c\u4e00\u79cd\u751a\u81f3\u6709\u7c7b\u4f3c\u540d\u79f0\u7684\u5de5\u5177\uff1aCLO\uff0c\u5373\u62b5\u62bc\u8d37\u6b3e\u503a\u5238(CDO)\u3002CLO\u8d70\u8def\u548c\u8bf4\u8bdd\u90fd\u50cfCDO\uff0c\u4f46\u53d6\u4ee3\u5411\u8d2d\u623f\u8005\u53d1\u653e\u7684\u8d37\u6b3e\u7684\u662f\u5411\u4f01\u4e1a\u53d1\u653e\u7684\u8d37\u6b3e-\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u5411\u9677\u5165\u56f0\u5883\u7684\u4f01\u4e1a\u53d1\u653e\u7684\u8d37\u6b3e\u3002CLO\u5c06\u6240\u8c13\u7684\u6760\u6746\u8d37\u6b3e(\u4f01\u4e1a\u754c\u7684\u6b21\u7ea7\u62b5\u62bc\u8d37\u6b3e)\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u8fd9\u4e9b\u8d37\u6b3e\u53d1\u653e\u7ed9\u5df2\u7ecf\u8fbe\u5230\u501f\u6b3e\u4e0a\u9650\u7684\u516c\u53f8\uff0c\u4e0d\u80fd\u518d\u76f4\u63a5\u5411\u6295\u8d44\u8005\u51fa\u552e\u503a\u5238\uff0c\u4e5f\u4e0d\u80fd\u518d\u6709\u8d44\u683c\u83b7\u5f97\u4f20\u7edf\u7684\u94f6\u884c\u8d37\u6b3e\u3002\u76ee\u524d\u6709\u4ef7\u503c\u8d85\u8fc71\u4e07\u4ebf\u7f8e\u5143\u7684\u6760\u6746\u8d37\u6b3e\u672a\u507f\u8fd8\u3002\u5927\u591a\u6570\u90fd\u662f\u5728CLO\u4e2d\u6301\u6709\u7684\u3002\n\u4e0a\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u6211\u662f\u6469\u6839\u58eb\u4e39\u5229(Morgan Stanley)\u8bbe\u8ba1\u548c\u9500\u552eCDO\u548cCLO\u7684\u56e2\u961f\u7684\u4e00\u5458\u3002\u8fd9\u4e24\u79cd\u8bc1\u5238\u975e\u5e38\u76f8\u4f3c\u3002\u4e0eCDO\u4e00\u6837\uff0cCLO\u4e5f\u6709\u591a\u4e2a\u5c42\uff0c\u5206\u522b\u51fa\u552e\u3002\u5e95\u5c42\u98ce\u9669\u6700\u5927\uff0c\u9876\u90e8\u6700\u5b89\u5168\u3002\u5982\u679cCLO\u4e2d\u53ea\u6709\u51e0\u7b14\u8d37\u6b3e\u8fdd\u7ea6\uff0c\u5e95\u5c42\u5c06\u906d\u53d7\u635f\u5931\uff0c\u5176\u4ed6\u5c42\u5c06\u4fdd\u6301\u5b89\u5168\u3002\u5982\u679c\u8fdd\u7ea6\u589e\u52a0\uff0c\u6700\u5e95\u5c42\u7684\u635f\u5931\u5c06\u4f1a\u66f4\u5927\uff0c\u75db\u82e6\u5c06\u5f00\u59cb\u5411\u4e0a\u8513\u5ef6\u3002\u7136\u800c\uff0c\u9876\u5c42\u4ecd\u7136\u53d7\u5230\u4fdd\u62a4\uff1a\u53ea\u6709\u5728\u4e0b\u5c42\u88ab\u6d88\u706d\u540e\uff0c\u5b83\u624d\u4f1a\u8d54\u94b1\u3002\n\u9664\u975e\u4f60\u5728\u91d1\u878d\u884c\u4e1a\u5de5\u4f5c\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u6ca1\u6709\u542c\u8bf4\u8fc7CLO\uff0c\u4f46\u6839\u636e\u8bb8\u591a\u4f30\u8ba1\uff0cCLO\u5e02\u573a\u7684\u89c4\u6a21\u6bd4\u6b21\u7ea7\u62b5\u62bc\u8d37\u6b3eCDO\u5e02\u573a\u5168\u76db\u65f6\u671f\u8fd8\u8981\u5927\u3002\u5e2e\u52a9\u5404\u56fd\u592e\u884c\u8ffd\u6c42\u91d1\u878d\u7a33\u5b9a\u7684\u56fd\u9645\u6e05\u7b97\u94f6\u884c\u66fe\u4f30\u8ba1\uff0c2007\u5e74CDO\u5e02\u573a\u7684\u6574\u4f53\u89c4\u6a21\u4e3a6,400\u4ebf\u7f8e\u5143\uff1b\u5176\u4f30\u8ba12018\u5e74CLO\u5e02\u573a\u7684\u6574\u4f53\u89c4\u6a21\u4e3a7,500\u4ebf\u7f8e\u5143\u3002\u81ea\u90a3\u4ee5\u6765\uff0c\u5df2\u7ecf\u521b\u5efa\u4e86\u4ef7\u503c\u8d85\u8fc71300\u4ebf\u7f8e\u5143\u7684CLO\uff0c\u5176\u4e2d\u4e00\u4e9b\u751a\u81f3\u662f\u5728\u6700\u8fd1\u51e0\u4e2a\u6708\u521b\u5efa\u7684\u3002\u5c31\u50cf\u5bbd\u677e\u7684\u62b5\u62bc\u8d37\u6b3e\u572821\u4e16\u7eaa\u593410\u5e74\u63a8\u52a8\u4e86\u7ecf\u6d4e\u589e\u957f\u4e00\u6837\uff0c\u5ec9\u4ef7\u7684\u516c\u53f8\u503a\u52a1\u5728\u8fc7\u53bb10\u5e74\u91cc\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u800c\u4e14\u8bb8\u591a\u516c\u53f8\u90fd\u5728\u5927\u8086\u6325\u970d\u3002\n\u5c3d\u7ba1CLO\u4e0e\u4e0a\u4e00\u6b21\u5d29\u76d8\u7684\u6076\u68cd\u660e\u663e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u56e0\u5c06\u6760\u6746\u8d37\u6b3e\u7684\u98ce\u9669\u8f6c\u79fb\u5230\u94f6\u884c\u4f53\u7cfb\u4e4b\u5916\u800c\u53d7\u5230\u7f8e\u8054\u50a8\u4e3b\u5e2d\u6770\u7f57\u59c6\u00b7\u9c8d\u5a01\u5c14(Jerome Powell)\u548c\u8d22\u653f\u90e8\u957f\u53f2\u8482\u6587\u00b7\u59c6\u94a6(Steven Mnuchin)\u7684\u79f0\u8d5e\u3002\u5c31\u50cf\u7f8e\u8054\u50a8\u524d\u4e3b\u5e2d\u827e\u4f26\u00b7\u683c\u6797\u65af\u6f58(Alan Greenspan)\u6de1\u5316\u6b21\u7ea7\u62b5\u62bc\u8d37\u6b3e\u6784\u6210\u7684\u98ce\u9669\u4e00\u6837\uff0c\u9c8d\u5a01\u5c14\u548c\u59c6\u94a6\u4e5f\u6de1\u5316\u4e86CLO\u53ef\u80fd\u7ed9\u94f6\u884c\u5e26\u6765\u7684\u4efb\u4f55\u9ebb\u70e6\uff0c\u8fa9\u79f0CLO\u672c\u8eab\u5c31\u662f\u98ce\u9669\u6240\u5728\u3002\n\u8fd9\u4e9b\u4e50\u89c2\u7684\u89c2\u70b9\u5f88\u96be\u4e0e\u73b0\u5b9e\u76f8\u7b26\u3002\u56fd\u9645\u6e05\u7b97\u94f6\u884c(BIS)\u4f30\u8ba1\uff0c\u622a\u81f32018\u5e74\u5e95\uff0c\u5168\u7403\u94f6\u884c\u6301\u6709\u7684CLO\u81f3\u5c11\u4ef7\u503c2500\u4ebf\u7f8e\u5143\u3002\u53bb\u5e747\u6708\uff0c\u5728\u9c8d\u5a01\u5c14\u5728\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\u5ba3\u5e03\u201c\u98ce\u9669\u4e0d\u5728\u94f6\u884c\u201d\u4e00\u4e2a\u6708\u540e\uff0c\u7f8e\u8054\u50a8(Federal Reserve)\u7684\u4e24\u540d\u7ecf\u6d4e\u5b66\u5bb6\u62a5\u544a\u79f0\uff0c\u4ec5\u5f00\u66fc\u7fa4\u5c9b\u53d1\u884c\u7684CLO\uff0c\u7f8e\u56fd\u5b58\u6b3e\u673a\u6784\u53ca\u5176\u63a7\u80a1\u516c\u53f8\u5c31\u62e5\u6709\u4ef7\u503c\u8d85\u8fc71100\u4ebf\u7f8e\u5143\u7684CLO\u3002\u66f4\u5b8c\u6574\u7684\u60c5\u51b5\u5f88\u96be\u5f97\u5230\uff0c\u90e8\u5206\u539f\u56e0\u662f\u94f6\u884c\u5728\u62a5\u544a\u5176CLO\u6301\u6709\u91cf\u65b9\u9762\u4e00\u76f4\u4e0d\u4e00\u81f4\u3002\u76d1\u6d4b\u5168\u7403\u91d1\u878d\u4f53\u7cfb\u7684\u91d1\u878d\u7a33\u5b9a\u59d4\u5458\u4f1a(Financial Stability Board)\u53bb\u5e7412\u6708\u8b66\u544a\u79f0\uff0c14%\u7684CLO-\u4ef7\u503c\u8d85\u8fc71000\u4ebf\u7f8e\u5143-\u4e0b\u843d\u4e0d\u660e\u3002\n\u6211\u5728\u5bcc\u56fd\u94f6\u884c(Wells Fargo)\u6709\u4e00\u4e2a\u652f\u7968\u8d26\u6237\u548c\u4f4f\u623f\u62b5\u62bc\u8d37\u6b3e\uff1b\u6211\u51b3\u5b9a\u770b\u770b\u6211\u7684\u94f6\u884c\u5728CLO\u4e0a\u7684\u6295\u8d44\u6709\u591a\u5927\u3002\u6211\u4e0d\u5f97\u4e0d\u6df1\u6316\u94f6\u884c\u6700\u65b0\u5e74\u5ea6\u62a5\u544a\u7684\u811a\u6ce8\uff0c\u4e00\u76f4\u8bfb\u5230\u7b2c144\u9875\u3002\u4e0a\u9762\u5217\u51fa\u4e86\u5b83\u7684\u201c\u53ef\u4f9b\u51fa\u552e\u201d\u8d26\u6237\u3002\u8fd9\u4e9b\u90fd\u662f\u94f6\u884c\u8ba1\u5212\u5728\u67d0\u4e2a\u65f6\u5019\u51fa\u552e\u7684\u6295\u8d44\uff0c\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u9a6c\u4e0a\u51fa\u552e\u3002\u8fd9\u4efd\u6e05\u5355\u5305\u542b\u4e86\u4f60\u53ef\u80fd\u9884\u671f\u7684\u5b89\u5168\u8d44\u4ea7\u7c7b\u522b\uff1a\u7f8e\u56fd\u56fd\u503a\u3001\u5e02\u653f\u503a\u5238\u7b49\u3002\u5176\u4e2d\u6709\u4e00\u9879\u88ab\u79f0\u4e3a\u201c\u62b5\u62bc\u8d37\u6b3e\u548c\u5176\u4ed6\u503a\u52a1\u201d(CLO)\u3002\u6211\u7528\u624b\u6307\u5212\u8fc7\u9875\u9762\u67e5\u770b\u8fd9\u4e9b\u6295\u8d44\u7684\u603b\u989d\uff0c\u9c8d\u5a01\u5c14\u548c\u59c6\u52aa\u94a6\u58f0\u79f0\u8fd9\u4e9b\u6295\u8d44\u662f\u201c\u94f6\u884c\u7cfb\u7edf\u4ee5\u5916\u7684\u201d\u3002\n\u603b\u989d\u4e3a297\u4ebf\u7f8e\u5143\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\u3002\u800c\u4e14\u5b83\u5728\u94f6\u884c\u91cc\u9762\u3002\n\u7f8e\u56fd\u7684\u94f6\u884c\u624b\u5934\u4fdd\u7559\u4e86\u66f4\u591a\u7684\u8d44\u672c\u4ee5\u9632\u8303\u7ecf\u6d4e\u4f4e\u8ff7\uff0c\u5b83\u4eec\u7684\u8d44\u4ea7\u8d1f\u503a\u8868\u73b0\u5728\u7684\u6760\u6746\u7387\u4e5f\u4f4e\u4e8e2007\u5e74\u3002\u800c\u4e14\uff0c\u5e76\u4e0d\u662f\u6bcf\u5bb6\u94f6\u884c\u90fd\u6709\u5927\u91cfCLO\u3002\u4f46\u572812\u6708\uff0c\u91d1\u878d\u7a33\u5b9a\u59d4\u5458\u4f1a(Financial Stability Board)\u4f30\u8ba1\uff0c\u5bf9\u4e8e30\u5bb6\u201c\u5168\u7403\u5177\u6709\u7cfb\u7edf\u91cd\u8981\u6027\u7684\u94f6\u884c\u201d\u6765\u8bf4\uff0c\u6760\u6746\u8d37\u6b3e\u548cCLO\u7684\u5e73\u5747\u655e\u53e3\u7ea6\u4e3a\u624b\u5934\u8d44\u672c\u768460%\u3002\u622a\u81f33\u670831\u65e5\uff0c\u82b1\u65d7\u96c6\u56e2(Citigroup)\u62a5\u544a\u4e86\u4ef7\u503c200\u4ebf\u7f8e\u5143\u7684CLO\uff1b\u6469\u6839\u5927\u901a(JPMorgan Chase)\u62a5\u544a\u4e86350\u4ebf\u7f8e\u5143(\u4ee5\u53caCLO\u7684\u672a\u5b9e\u73b0\u4e8f\u635f20\u4ebf\u7f8e\u5143)\u3002\u51e0\u5bb6\u4e2d\u578b\u94f6\u884c-\u52a0\u5dde\u94f6\u884c(Bank Of California)\u3001Stifel Financial-\u7684CLO\u603b\u989d\u8d85\u8fc7\u5176\u8d44\u672c\u7684100%\u3002\u5982\u679c\u6760\u6746\u8d37\u6b3e\u5e02\u573a\u5d29\u6e83\uff0c\u4ed6\u4eec\u7684\u8d1f\u503a\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u8d85\u8fc7\u8d44\u4ea7\u3002\n\u8fd9\u4e9b\u94f6\u884c\u600e\u4e48\u80fd\u8bc1\u660e\u5728\u770b\u8d77\u6765\u5982\u6b64\u5192\u9669\u7684\u8d4c\u6ce8\u4e0a\u8d4c\u8fd9\u4e48\u591a\u94b1\u662f\u5408\u7406\u7684\u5462\uff1fCLO\u7684\u634d\u536b\u8005\u8bf4\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u4e0d\u662f\u4e00\u573a\u8d4c\u535a-\u76f8\u53cd\uff0c\u5b83\u4eec\u662f\u4f60\u6240\u80fd\u5e0c\u671b\u7684\u90a3\u6837\u786e\u5b9a\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u56e0\u4e3a\u94f6\u884c\u5927\u591a\u62e5\u6709\u98ce\u9669\u6700\u4f4e\u7684\u9876\u5c42CLO\u3002\u81ea20\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\u4ee5\u6765\uff0c\u5728\u4e0a\u4e00\u6b21\u91d1\u878d\u5371\u673a\u671f\u95f4\uff0c\u6760\u6746\u8d37\u6b3e\u7684\u6700\u9ad8\u5e74\u5ea6\u8fdd\u7ea6\u7387\u7ea6\u4e3a10%\u3002\u5982\u679cCLO 10%\u7684\u8d37\u6b3e\u8fdd\u7ea6\uff0c\u5e95\u5c42\u5c06\u53d7\u5230\u5f71\u54cd\uff0c\u4f46\u5982\u679c\u60a8\u62e5\u6709\u9876\u5c42\uff0c\u60a8\u53ef\u80fd\u751a\u81f3\u4e0d\u4f1a\u6ce8\u610f\u5230\u3002\u4e09\u500d\u7684\u8d37\u6b3e\u53ef\u80fd\u4f1a\u8fdd\u7ea6\uff0c\u4f46\u4f60\u4ecd\u7136\u53ef\u4ee5\u5f97\u5230\u4fdd\u62a4\uff0c\u56e0\u4e3a\u8f83\u4f4e\u7684\u5c42\u5c06\u627f\u62c5\u635f\u5931\u3002\u8fd9\u4e9b\u8bc1\u5238\u7684\u7ed3\u6784\u4f7f\u5f97\u5bf9\u51b2\u57fa\u91d1\u548c\u79c1\u52df\u80a1\u6743\u516c\u53f8\u7b49\u5bf9\u98ce\u9669\u5bb9\u5fcd\u5ea6\u8f83\u9ad8\u7684\u6295\u8d44\u8005\u8d2d\u4e70\u5e95\u5c42\u8bc1\u5238\uff0c\u5e0c\u671b\u8d62\u5f97\u5f69\u7968\u3002\u5927\u94f6\u884c\u6ee1\u8db3\u4e8e\u8f83\u4f4e\u7684\u56de\u62a5\u548c\u9876\u5c42\u7684\u5b89\u5168\u6027\u3002\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\uff0cCLO\u4e2d\u8fd8\u6ca1\u6709\u4e00\u5bb6AAA\u8bc4\u7ea7\u7684\u516c\u53f8\u635f\u5931\u8fc7\u672c\u91d1\u3002\n\u4f46AAA\u8bc4\u7ea7\u5177\u6709\u6b3a\u9a97\u6027\u3002\u4fe1\u7528\u8bc4\u7ea7\u673a\u6784\u5206\u522b\u5bf9CLO\u53ca\u5176\u6807\u7684\u503a\u52a1\u8fdb\u884c\u8bc4\u7ea7\u3002\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u5982\u679cCLO\u7684\u9876\u5c42\u88ab\u8bc4\u4e3aAAA\u7ea7\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5305\u542bAAA\u7ea7\u503a\u52a1\u3002\u5dee\u5f97\u8fdc\u5462\u3002\u8bb0\u4f4f\uff1aCLO\u662f\u7531\u5411\u5df2\u7ecf\u9677\u5165\u56f0\u5883\u7684\u4f01\u4e1a\u63d0\u4f9b\u7684\u8d37\u6b3e\u7ec4\u6210\u7684\u3002\n\u90a3\u4e48\uff0c\u4f60\u5728CLO\u4e2d\u53d1\u73b0\u4e86\u4ec0\u4e48\u6837\u7684\u503a\u52a1\u5462\uff1f\u60e0\u8a89\u8bc4\u7ea7(Fitch Ratings)\u4f30\u8ba1\uff0c\u622a\u81f34\u6708\u4efd\uff0c\u5176\u6760\u6746\u8d37\u6b3e\u6570\u636e\u5e93\u4e2d1,745\u540d\u501f\u6b3e\u4eba\u4e2d\uff0c\u8d85\u8fc767%\u7684\u501f\u6b3e\u4eba\u8bc4\u7ea7\u4e3aB\u7ea7\u3002\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u4e0d\u574f\uff0c\u4f46B\u7ea7\u503a\u52a1\u662f\u7cdf\u7cd5\u7684\u503a\u52a1\u3002\u6839\u636e\u8bc4\u7ea7\u673a\u6784\u7684\u5b9a\u4e49\uff0c\u5728\u4e0d\u5229\u7684\u5546\u4e1a\u6216\u7ecf\u6d4e\u6761\u4ef6\u4e0b\uff0cB\u7ea7\u501f\u6b3e\u4eba\u507f\u8fd8\u8d37\u6b3e\u7684\u80fd\u529b\u53ef\u80fd\u4f1a\u53d7\u5230\u635f\u5bb3\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e9b\u6760\u6746\u8d37\u6b3e\u4e2d\u7684\u4e09\u5206\u4e4b\u4e8c\u53ef\u80fd\u4f1a\u5728\u6211\u4eec\u76ee\u524d\u7ecf\u5386\u7684\u7ecf\u6d4e\u72b6\u51b5\u4e0b\u4e8f\u635f\u3002\u6839\u636e\u60e0\u8a89\u7684\u6570\u636e\uff0c15%\u7684\u6760\u6746\u8d37\u6b3e\u516c\u53f8\u7684\u8bc4\u7ea7\u66f4\u4f4e\uff0c\u4e3aCCC\u6216\u66f4\u4f4e\u3002\u8fd9\u4e9b\u501f\u6b3e\u4eba\u6b63\u5904\u4e8e\u8fdd\u7ea6\u7684\u8fb9\u7f18\u3002\n\u56e0\u6b64\uff0c\u5c3d\u7ba1\u94f6\u884c\u5c06CLO\u6295\u8d44\u4e3b\u8981\u9650\u5236\u5728AAA\u7ea7\u7684\u5c42\uff0c\u4f46\u5b83\u4eec\u771f\u6b63\u62e5\u6709\u7684\u662f\u6570\u767e\u4ebf\u7f8e\u5143\u7684\u9ad8\u98ce\u9669\u503a\u52a1\u655e\u53e3\u3002\u5728\u90a3\u4e9b\u8bc4\u7ea7\u5f88\u9ad8\u7684CLO\u4e2d\uff0c\u4f60\u4e0d\u4f1a\u53d1\u73b0\u4e00\u7b14\u8bc4\u7ea7\u4e3aAAA\u3001AA\u751a\u81f3A\u7684\u8d37\u6b3e\u3002\n\u4fe1\u7528\u8bc4\u7ea7\u673a\u6784\u5982\u4f55\u624d\u80fd\u9003\u8131\u60e9\u7f5a\u5462\uff1f\u7b54\u6848\u662f\u201c\u8fdd\u7ea6\u76f8\u5173\u6027\u201d\uff0c\u8fd9\u662f\u4e00\u79cd\u8861\u91cf\u8d37\u6b3e\u540c\u65f6\u8fdd\u7ea6\u53ef\u80fd\u6027\u7684\u6307\u6807\u3002CLO\u4e4b\u6240\u4ee5\u5982\u6b64\u5b89\u5168\uff0c\u4e3b\u8981\u539f\u56e0\u4e0eCDO\u57282008\u5e74\u4e4b\u524d\u4f3c\u4e4e\u5b89\u5168\u7684\u539f\u56e0\u662f\u4e00\u6837\u7684\u3002\u5f53\u65f6\uff0c\u57fa\u7840\u8d37\u6b3e\u4e5f\u6709\u98ce\u9669\uff0c\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u5176\u4e2d\u4e00\u4e9b\u4f1a\u8fdd\u7ea6\u3002\u4f46\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u540c\u65f6\u8fdd\u7ea6\u3002\u8fd9\u4e9b\u8d37\u6b3e\u5206\u5e03\u5728\u5168\u56fd\u5404\u5730\uff0c\u5e76\u5728\u8bb8\u591a\u8d37\u6b3e\u4eba\u4e4b\u95f4\u53d1\u653e\u3002\u623f\u5730\u4ea7\u5e02\u573a\u88ab\u8ba4\u4e3a\u662f\u5730\u65b9\u6027\u7684\uff0c\u800c\u4e0d\u662f\u5168\u56fd\u6027\u7684\uff0c\u901a\u5e38\u5bfc\u81f4\u4eba\u4eec\u62d6\u6b20\u4f4f\u623f\u8d37\u6b3e\u7684\u56e0\u7d20-\u5931\u4e1a\u3001\u79bb\u5a5a\u3001\u5065\u5eb7\u72b6\u51b5\u4e0d\u4f73-\u5e76\u4e0d\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u671d\u7740\u540c\u4e00\u4e2a\u65b9\u5411\u53d1\u5c55\u3002\u7136\u540e\u623f\u4ef7\u5168\u9762\u4e0b\u8dcc30%\uff0c\u8fdd\u7ea6\u7387\u98d9\u5347\u3002\n\u5bf9\u4e8eCLO\uff0c\u8bc4\u7ea7\u673a\u6784\u901a\u8fc7\u8bc4\u4f30\u6760\u6746\u8d37\u6b3e\u7684\u98ce\u9669\u53ca\u5176\u8fdd\u7ea6\u76f8\u5173\u6027\u6765\u786e\u5b9a\u5404\u5c42\u7684\u8bc4\u7ea7\u3002\u5373\u4f7f\u5728\u7ecf\u6d4e\u8870\u9000\u671f\u95f4\uff0c\u4e0d\u540c\u7684\u7ecf\u6d4e\u90e8\u95e8\uff0c\u5982\u5a31\u4e50\u3001\u533b\u7597\u548c\u96f6\u552e\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u6b65\u8c03\u4e00\u81f4\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0cCLO\u7684\u6784\u5efa\u65b9\u5f0f\u662f\u5c06\u6240\u6709\u8d37\u6b3e\u53d7\u5230\u5355\u4e00\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u94fe\u5f71\u54cd\u7684\u53ef\u80fd\u6027\u964d\u81f3\u6700\u4f4e\u3002\u8bc4\u7ea7\u673a\u6784\u5bf9\u90a3\u4e9b\u5728\u884c\u4e1a\u548c\u5730\u7406\u4e0a\u770b\u8d77\u6765\u8db3\u591f\u591a\u6837\u5316\u7684\u5c42\u9762\u7ed9\u4e88\u9ad8\u8bc4\u7ea7\u3002\n\u94f6\u884c\u4e0d\u4f1a\u516c\u5f00\u62a5\u544a\u4ed6\u4eec\u6301\u6709\u54ea\u4e9bCLO\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u786e\u5207\u5730\u77e5\u9053\u7ed9\u5b9a\u673a\u6784\u53ef\u80fd\u4f1a\u63a5\u89e6\u5230\u54ea\u4e9b\u6760\u6746\u8d37\u6b3e\u3002\u4f46\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u770b\u770b\u6760\u6746\u501f\u6b3e\u4eba\u7684\u540d\u5355\uff0c\u770b\u770b\u53ef\u80fd\u4f1a\u6709\u4ec0\u4e48\u9ebb\u70e6\u3002\u5728\u60e0\u8a894\u6708\u4efd\u52a0\u5165\u5176\u201c\u5173\u6ce8\u8d37\u6b3e\u201d\u540d\u5355\u7684\u6570\u5341\u5bb6\u516c\u53f8\u4e2d\uff0c\u5305\u62ecAMC\u5a31\u4e50\u516c\u53f8\u3001\u9c8d\u52c3\u6298\u6263\u5bb6\u5177\u516c\u53f8\u3001\u52a0\u5dde\u62ab\u8428\u53a8\u623f\u516c\u53f8\u3001\u96c6\u88c5\u7bb1\u5546\u5e97\u3001Lands\u2018s End\u3001Men\u2019s Wearhouse\u548cParty City\u3002\u8fd9\u4e9b\u516c\u53f8\u90fd\u53d7\u5230\u4e86\u4f34\u968f\u7740\u4f20\u7edf\u7ecf\u6d4e\u4f4e\u8ff7\u800c\u52d2\u7d27\u88e4\u8170\u5e26\u7684\u90a3\u79cd\u52d2\u7d27\u88e4\u8170\u5e26\u7684\u6c89\u91cd\u6253\u51fb\u3002\n\u6211\u4eec\u5e76\u6ca1\u6709\u5904\u4e8e\u5e38\u89c4\u7684\u7ecf\u6d4e\u4f4e\u8ff7\u4e4b\u4e2d\u3002\u60e0\u8a894\u6708\u4efd\u540d\u5355\u4e0a\u672a\u507f\u503a\u52a1\u6700\u591a\u7684\u4e24\u5bb6\u516c\u53f8\u5206\u522b\u662f\u533b\u7597\u4eba\u529b\u8d44\u6e90\u516c\u53f8enVision Healthcare\u548c\u56fd\u9645\u901a\u4fe1\u536b\u661f\u7ec4\u7ec7(Intelsat)\u3002enVision Healthcare\u662f\u4e00\u5bb6\u533b\u7597\u4eba\u529b\u8d44\u6e90\u516c\u53f8\uff0c\u9664\u5176\u4ed6\u5916\uff0c\u8be5\u516c\u53f8\u5e2e\u52a9\u533b\u9662\u7ba1\u7406\u6025\u8bca\u5ba4\u62a4\u7406\uff0c\u4ee5\u53ca\u63d0\u4f9b\u536b\u661f\u5bbd\u5e26\u63a5\u5165\u7684Intelsat\u3002\u540d\u5355\u4e0a\u8fd8\u589e\u52a0\u4e86Hoffmaster\uff0c\u8be5\u516c\u53f8\u751f\u4ea7\u9910\u9986\u7528\u6765\u5305\u88c5\u5916\u5356\u98df\u54c1\u7684\u4ea7\u54c1\u3002\u4f60\u53ef\u80fd\u8ba4\u4e3a\u80fd\u5b89\u7136\u5ea6\u8fc7\u5f53\u524d\u7ecf\u6d4e\u98ce\u66b4\u7684\u516c\u53f8\u662f\u90a3\u4e9b\u906d\u53d7\u6700\u4e25\u91cd\u6253\u51fb\u7684\u516c\u53f8\u4e4b\u4e00\uff0c\u56e0\u4e3a\u6d88\u8d39\u8005\u4e0d\u4ec5\u52d2\u7d27\u88e4\u8170\u5e26\uff0c\u800c\u4e14\u8fd8\u91cd\u65b0\u5b9a\u4e49\u4e86\u4ed6\u4eec\u8ba4\u4e3a\u5fc5\u8981\u7684\u4e1c\u897f\u3002\n\u751a\u81f3\u5728\u5927\u6d41\u884c\u6765\u88ad\u4e4b\u524d\uff0c\u4fe1\u7528\u8bc4\u7ea7\u673a\u6784\u53ef\u80fd\u5c31\u4f4e\u4f30\u4e86\u4e0e\u6b64\u65e0\u5173\u7684\u884c\u4e1a\u5728\u540c\u6837\u7684\u7ecf\u6d4e\u529b\u91cf\u9762\u524d\u53ef\u80fd\u6709\u591a\u8106\u5f31\u3002\u5fb7\u514b\u8428\u65af\u5927\u5b66(University Of Texas)\u7684\u7ea6\u7ff0\u00b7\u683c\u91cc\u82ac(John Griffin)\u548c\u6ce2\u58eb\u987f\u5b66\u9662(Boston College)\u7684\u4e54\u4e39\u00b7\u5c3c\u514b\u68ee(Jordan Nickerson)2017\u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u8868\u660e\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u7ec4136\u4e2aCLO\u7684\u8fdd\u7ea6\u76f8\u5173\u6027\u5047\u8bbe\u5e94\u8be5\u662f\u5b83\u4eec\u7684\u4e09\u5230\u56db\u500d\uff0c\u800c\u4e14\u9519\u8bef\u8ba1\u7b97\u5bfc\u81f4\u7684\u8bc4\u7ea7\u8fdc\u8fdc\u9ad8\u4e8e\u5e94\u6709\u7684\u6c34\u5e73\u3002\u683c\u91cc\u82ac\u57285\u6708\u4efd\u544a\u8bc9\u6211\uff1a\u201c\u51e0\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u62c5\u5fc3AAA CLO\u5728\u4e0b\u4e00\u6b21\u5371\u673a\u4e2d\u5931\u8d25\u3002\u201d\u201c\u8fd9\u573a\u5371\u673a\u6bd4\u6211\u9884\u60f3\u7684\u66f4\u53ef\u6015\u3002\u201d\n\u5728\u5f53\u524d\u6761\u4ef6\u4e0b\uff0c\u4e00\u7cfb\u5217\u884c\u4e1a\u7684\u6760\u6746\u8d37\u6b3e\u524d\u666f\u786e\u5b9e\u4e25\u5cfb\u3002AMC(224\u4e2aCLO\u6709\u8fd120\u4ebf\u7f8e\u5143\u7684\u503a\u52a1)\u548cParty City(183\u4e2aCLO\u67097.19\u4ebf\u7f8e\u5143\u7684\u503a\u52a1)\u7b49\u516c\u53f8\u5728\u793e\u4f1a\u758f\u8fdc\u4e4b\u524d\u5c31\u9677\u5165\u4e86\u56f0\u5883\u3002\u73b0\u5728\uff0c\u770b\u7535\u5f71\u548c\u4e3e\u529e\u6d3e\u5bf9\u90fd\u88ab\u65e0\u9650\u671f\u6682\u505c-\u800c\u4e14\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u56de\u5230\u5927\u6d41\u884c\u524d\u7684\u6c34\u5e73\u3002\n\u5728\u7f8e\u8054\u50a8(Federal Reserve)\u5ba3\u5e03\u5176\u989d\u5916\u76842.3\u4e07\u4ebf\u7f8e\u5143\u8d37\u6b3e\u5c06\u5305\u62ec\u5bf9CLO\u7684\u8d37\u6b3e\u4e4b\u524d\uff0cAAA\u8bc4\u7ea7\u7684CLO\u5c42\u7684\u4ef7\u683c\u57283\u6708\u4efd\u66b4\u8dcc\u3002(\u8be5\u8ba1\u5212\u5907\u53d7\u4e89\u8bae\uff1a\u5728\u8fd9\u4e48\u591a\u4ee5\u524d\u5065\u5eb7\u7684\u5c0f\u4f01\u4e1a\u90fd\u5728\u52aa\u529b\u507f\u8fd8\u503a\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u7f8e\u8054\u50a8\u771f\u7684\u613f\u610f\u652f\u6301CLO\u5417\uff1f\u622a\u81f35\u6708\u4e2d\u65ec\uff0c\u5c1a\u672a\u53d1\u653e\u6b64\u7c7b\u8d37\u6b3e\u3002)\u3002\u8fd9\u573a\u66b4\u8dcc\u975e\u4f46\u6ca1\u6709\u5413\u8dd1\u5927\u94f6\u884c\uff0c\u53cd\u800c\u6fc0\u52b1\u4e86\u5176\u4e2d\u51e0\u5bb6\u94f6\u884c\u4f4e\u4ef7\u4e70\u5165\uff1a\u82b1\u65d7\u96c6\u56e2(Citigroup)\u5728\u66b4\u8dcc\u671f\u95f4\u6536\u8d2d\u4e8620\u4ebf\u7f8e\u5143\u7684AAA CLO\uff0c\u5f53\u4ef7\u683c\u53cd\u5f39\u65f6\uff0c\u82b1\u65d7\u96c6\u56e2\u8f6c\u624b\u83b7\u52291\u4ebf\u7f8e\u5143\u3002\u636e\u62a5\u9053\uff0c\u5305\u62ec\u7f8e\u56fd\u94f6\u884c(Bank Of America)\u5728\u5185\u7684\u5176\u4ed6\u94f6\u884c\u57285\u6708\u4efd\u4ee5\u9762\u503c\u7ea620%\u7684\u4ef7\u683c\u8d2d\u4e70\u4e86\u8f83\u4f4e\u7ea7\u522b\u7684CLO\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8d37\u6b3e\u8fdd\u7ea6\u5df2\u7ecf\u5728\u53d1\u751f\u30024\u6708\u4efd\u7684\u6570\u91cf\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u591a\u3002\u51e0\u4f4d\u4e13\u5bb6\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u9884\u8ba1\u4eca\u5e74\u590f\u5929\u4f1a\u6709\u66f4\u591a\u7834\u7eaa\u5f55\u7684\u6708\u4efd\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u60c5\u51b5\u53ea\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\n\u8fdd\u7ea6\u4ecd\u5728\u7ee7\u7eed\uff0c\u5b83\u4eec\u4f1a\u5bf9\u66f4\u5927\u7684\u7ecf\u6d4e\u9020\u6210\u591a\u5927\u7684\u635f\u5bb3\uff1f\u786e\u5207\u5730\u8bf4\uff0c\u6700\u574f\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff1f\n\u76ee\u524d\u6765\u770b\uff0c\u91d1\u878d\u4f53\u7cfb\u4f3c\u4e4e\u76f8\u5bf9\u7a33\u5b9a\u3002\u94f6\u884c\u4ecd\u7136\u53ef\u4ee5\u507f\u8fd8\u503a\u52a1\uff0c\u5e76\u901a\u8fc7\u76d1\u7ba1\u8d44\u672c\u6d4b\u8bd5\u3002\u4f46\u56de\u60f3\u4e00\u4e0b\uff0c\u4e0a\u4e00\u6b21\u5d29\u76d8\u82b1\u4e86\u4e00\u5e74\u591a\u7684\u65f6\u95f4\u624d\u5c55\u5f00\u3002\u76ee\u524d\u7684\u60c5\u51b5\u4e0d\u662f\u7c7b\u4f3c\u4e8e2008\u5e74\u79cb\u5929\uff0c\u5f53\u65f6\u7f8e\u56fd\u6b63\u5904\u4e8e\u5168\u9762\u5371\u673a\u4e4b\u4e2d\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8e2007\u5e74\u590f\u5929\uff0c\u5f53\u65f6\u4e00\u4e9b\u8bc1\u5238\u8dcc\u81f3\u6c34\u4e0b\uff0c\u4f46\u8fd8\u6ca1\u6709\u4eba\u77e5\u9053\u7ed3\u679c\u4f1a\u662f\u4ec0\u4e48\u3002\n\u6211\u5c06\u8981\u63cf\u8ff0\u7684\u5fc5\u7136\u662f\u6295\u673a\u6027\u7684\uff0c\u4f46\u5b83\u690d\u6839\u4e8e\u524d\u4e00\u6b21\u5d29\u76d8\u7684\u7ecf\u5386\uff0c\u4ee5\u53ca\u6211\u4eec\u5bf9\u76ee\u524d\u94f6\u884c\u6301\u80a1\u7684\u4e86\u89e3\u3002\u5217\u51fa\u8fd9\u4e00\u6700\u574f\u60c5\u51b5\u7684\u76ee\u7684\u5e76\u4e0d\u662f\u8bf4\u5b83\u4e00\u5b9a\u4f1a\u53d1\u751f\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8868\u660e\u5b83\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4ec5\u8fd9\u4e00\u70b9\u5c31\u5e94\u8be5\u5413\u5230\u6211\u4eec\u6240\u6709\u4eba-\u5e76\u544a\u77e5\u6211\u4eec\u5bf9\u660e\u5e74\u53ca\u4ee5\u540e\u7684\u601d\u8003\u65b9\u5f0f\u3002\n\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\uff0c\u968f\u7740\u5927\u6d41\u884c\u7684\u7ecf\u6d4e\u5f71\u54cd\u5145\u5206\u663e\u73b0\uff0c\u6760\u6746\u8d37\u6b3e\u8fdd\u7ea6\u5c06\u5927\u5e45\u589e\u52a0\u3002\u7834\u4ea7\u6cd5\u9662\u5f88\u53ef\u80fd\u4f1a\u5728\u65b0\u7533\u8bf7\u7684\u91cd\u538b\u4e0b\u5d29\u6e83\u3002(\u57285\u6708\u4efd\u7684\u4e24\u5468\u65f6\u95f4\u91cc\uff0cJ.Crew\u3001Neiman Marcus\u548cJ.C.Penney\u90fd\u7533\u8bf7\u4e86\u7834\u4ea7\u3002)\u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0cCLO\u4e2d\u7684\u5927\u90e8\u5206\u8d37\u6b3e\u90fd\u6709\u8584\u5f31\u7684\u5951\u7ea6\uff0c\u53ea\u4e3a\u6295\u8d44\u8005\u63d0\u4f9b\u4e86\u6700\u4f4e\u9650\u5ea6\u7684\u6cd5\u5f8b\u4fdd\u62a4\uff1b\u7528\u884c\u4e1a\u672f\u8bed\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u201c\u8986\u76d6\u8303\u56f4\u201d(Cov Lite)\u3002\u56e0\u6b64\uff0c\u5f53\u516c\u53f8\u8fdd\u7ea6\u65f6\uff0c\u6760\u6746\u8d37\u6b3e\u7684\u6301\u6709\u8005\u5c06\u5e78\u8fd0\u5730\u83b7\u5f97\u9762\u503c\u7684\u51e0\u5206\u94b1-\u4e0e\u8fc7\u53bb\u6807\u51c6\u768470\u7f8e\u5206\u76f8\u53bb\u751a\u8fdc\u3002\n\u968f\u7740\u94f6\u884c\u5f00\u59cb\u611f\u53d7\u5230\u8fd9\u4e9b\u8fdd\u7ea6\u7684\u75db\u82e6\uff0c\u516c\u4f17\u5c06\u4e86\u89e3\u5230\uff0c\u5b83\u4eec\u5e76\u4e0d\u662f\u552f\u4e00\u5728CLO\u4e0a\u5927\u4e3e\u62bc\u6ce8\u7684\u673a\u6784\u3002\u4fdd\u9669\u5de8\u5934\u7f8e\u56fd\u56fd\u9645\u96c6\u56e2(AIG)-2008\u5e74\u5bf9CDO\u8fdb\u884c\u4e86\u5927\u89c4\u6a21\u6295\u8d44-\u73b0\u5728\u6709\u8d85\u8fc790\u4ebf\u7f8e\u5143\u7684CLO\u655e\u53e3\u30022018\u5e74\uff0c\u7f8e\u56fd\u4eba\u5bff\u4fdd\u9669\u516c\u53f8\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4f30\u8ba1\u6709\u4e94\u5206\u4e4b\u4e00\u7684\u8d44\u672c\u88ab\u8fd9\u4e9b\u5de5\u5177\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u517b\u8001\u57fa\u91d1\u3001\u5171\u540c\u57fa\u91d1\u548c\u4ea4\u6613\u6240\u4ea4\u6613\u57fa\u91d1(\u5728\u6563\u6237\u6295\u8d44\u8005\u4e2d\u5f88\u53d7\u6b22\u8fce)\u4e5f\u5927\u91cf\u6295\u8d44\u4e8e\u6760\u6746\u8d37\u6b3e\u548cCLO\u3002\n\u94f6\u884c\u81ea\u5df1\u53ef\u80fd\u4f1a\u900f\u9732\uff0c\u4ed6\u4eec\u7684CLO\u6295\u8d44\u6bd4\u4e4b\u524d\u60f3\u8c61\u7684\u8981\u5927\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u8fd9\u79cd\u60c5\u51b5\u6b63\u5728\u53d1\u751f\u30025\u67085\u65e5\uff0c\u5bcc\u56fd\u94f6\u884c(Wells Fargo)\u62ab\u9732\u4e86\u4ef7\u503c77\u4ebf\u7f8e\u5143\u7684CLO\uff0c\u8fd9\u4e9bCLO\u4f4d\u4e8e\u8d44\u4ea7\u8d1f\u503a\u8868\u7684\u4e0d\u540c\u89d2\u843d\uff0c\u800c\u4e0d\u662f\u6211\u5728\u5e74\u62a5\u4e2d\u53d1\u73b0\u7684297\u4ebf\u7f8e\u5143\u3002\u968f\u7740\u8fdd\u7ea6\u7684\u5806\u79ef\uff0c\u8ba4\u4e3a\u6760\u6746\u8d37\u6b3e\u4e0d\u4f1a\u635f\u5bb3\u91d1\u878d\u4f53\u7cfb\u7684\u59c6\u94a6-\u9c8d\u5a01\u5c14\u89c2\u70b9\u5c06\u88ab\u66b4\u9732\u4e3a\u4e00\u53a2\u60c5\u613f\u7684\u60f3\u6cd5\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u628a\u91cd\u70b9\u653e\u5728CLO\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u94f6\u884c\u6301\u6709\u7684\u6700\u4ee4\u4eba\u4e0d\u5b89\u7684\u8d44\u4ea7\u3002\u4f46\u5b83\u4eec\u4e5f\u662f\u94f6\u884c\u5b58\u653e\u5728\u8d44\u4ea7\u8d1f\u503a\u8868\u5185\u5916\u7684\u5176\u4ed6\u590d\u6742\u548c\u4eba\u4e3a\u4ea7\u54c1\u7684\u8c61\u5f81\u3002\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\uff0c\u94f6\u884c\u5f88\u53ef\u80fd\u62a5\u544a\u7684\u5b63\u5ea6\u4e8f\u635f\u6bd4\u9884\u671f\u7684\u8981\u7cdf\u7cd5\u5f97\u591a\u3002\u7ec6\u8282\u5c06\u5305\u62ec\u4e00\u7cfb\u5217\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u4ea4\u6613\uff0c\u8fd9\u4e9b\u4ea4\u6613\u4e0d\u4ec5\u4f1a\u8ba9\u4eba\u60f3\u8d77\u623f\u5730\u4ea7\u5371\u673a\uff0c\u8fd8\u4f1a\u8ba9\u4eba\u60f3\u8d7721\u4e16\u7eaa\u521d\u7684\u5b89\u7136(Enron)\u4e11\u95fb\u3002\u8fd8\u8bb0\u5f97\u5b89\u7136(Enron)\u521b\u5efa\u7684\u6240\u6709\u90a3\u4e9b\u5b50\u516c\u53f8(\u5176\u4e2d\u8bb8\u591a\u90fd\u662f\u4ee5\u661f\u7403\u5927\u6218\u4eba\u7269\u7684\u540d\u5b57\u81ed\u540d\u662d\u8457\u5730\u547d\u540d)\uff0c\u4ee5\u907f\u514d\u8fd9\u5bb6\u80fd\u6e90\u516c\u53f8\u7684\u8d22\u52a1\u62a5\u8868\u51fa\u73b0\u9ad8\u98ce\u9669\u62bc\u6ce8\u5417\uff1f\u5927\u94f6\u884c\u4f7f\u7528\u7c7b\u4f3c\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u53ef\u53d8\u5229\u76ca\u5b9e\u4f53\u201d--\u516c\u53f8\u6210\u7acb\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6301\u6709\u8d26\u5916\u5934\u5bf8\u3002\u5bcc\u56fd\u94f6\u884c\u62e5\u6709\u8d85\u8fc71\u4e07\u4ebf\u7f8e\u5143\u7684VIE\u8d44\u4ea7\uff0c\u6211\u4eec\u76ee\u524d\u5bf9\u6b64\u77e5\u4e4b\u751a\u5c11\uff0c\u56e0\u4e3a\u62a5\u544a\u8981\u6c42\u4e0d\u900f\u660e\u3002\u4f46VIE\u6301\u6709\u7684\u4e00\u9879\u70ed\u95e8\u6295\u8d44\u662f\u7531\u5546\u4e1a\u62b5\u62bc\u8d37\u6b3e\u652f\u6301\u7684\u8bc1\u5238\uff0c\u4f8b\u5982\u5411\u8d2d\u7269\u4e2d\u5fc3\u548c\u529e\u516c\u56ed\u533a\u63d0\u4f9b\u7684\u8d37\u6b3e-\u8fd9\u4e24\u7c7b\u501f\u6b3e\u4eba\u6b63\u56e0\u75ab\u60c5\u800c\u9762\u4e34\u4e25\u91cd\u538b\u529b\u3002\nCLO\u7684\u65e9\u671f\u4e8f\u635f\u672c\u8eab\u4e0d\u4f1a\u62b9\u53bb\u591a\u5fb7-\u5f17\u5170\u514b\u6cd5\u6848\u8981\u6c42\u7684\u8d44\u672c\u50a8\u5907\u3002\u4e13\u5bb6\u544a\u8bc9\u6211\uff0c\u4e0a\u4e00\u6b21\u5371\u673a\u4e2d\u4e00\u4e9b\u6700\u4e0d\u8d1f\u8d23\u4efb\u7684\u8d4c\u535a-\u4f60\u53ef\u80fd\u8bb0\u5f97\u57282008\u5e74\u8bfb\u5230\u7684\u6295\u673a\u6027\u884d\u751f\u54c1\u548c\u4fe1\u7528\u8fdd\u7ea6\u6389\u671f-\u73b0\u5728\u4e0d\u90a3\u4e48\u5e38\u89c1\u4e86\u3002\u4f46CLO\u7684\u635f\u5931\uff0c\u52a0\u4e0a\u5176\u4ed6\u95ee\u9898\u8d44\u4ea7(\u5982\u5546\u4e1a\u62b5\u62bc\u8d37\u6b3e\u652f\u6301\u8bc1\u5238)\u7684\u635f\u5931\uff0c\u5c06\u5bfc\u81f4\u4e25\u91cd\u7684\u8d44\u672c\u77ed\u7f3a\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u51b2\u51fbCLO\u7684\u540c\u6837\u7684\u7ecf\u6d4e\u529b\u91cf\u5c06\u5bf9\u94f6\u884c\u8d44\u4ea7\u8d1f\u503a\u8868\u7684\u5176\u4ed6\u90e8\u5206\u9020\u6210\u6c89\u91cd\u6253\u51fb\uff1b\u968f\u7740\u7ecf\u6d4e\u8870\u9000\u7684\u6301\u7eed\uff0c\u5b83\u4eec\u4f20\u7edf\u7684\u6536\u5165\u6765\u6e90\u4e5f\u5c06\u67af\u7aed\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8d44\u672c\u7684\u6d41\u5931\u53ef\u80fd\u4f1a\u63a5\u8fd1\u96f7\u66fc\u5144\u5f1f(Lehman Brothers)\u548c\u82b1\u65d7\u96c6\u56e2(Citigroup)\u57282008\u5e74\u906d\u53d7\u7684\u6c34\u5e73\u3002\u73b0\u91d1\u50a8\u5907\u4e0d\u8db3\u7684\u94f6\u884c\u5c06\u88ab\u8feb\u5728\u4f4e\u8ff7\u7684\u5e02\u573a\u4e2d\u51fa\u552e\u8d44\u4ea7\uff0c\u6536\u76ca\u5c06\u662f\u60e8\u6de1\u7684\u3002\u6760\u6746\u8d37\u6b3e\u7684\u4ef7\u683c\uff0c\u4ee5\u81f3CLO\u7684\u4ef7\u683c\uff0c\u90fd\u5c06\u87ba\u65cb\u5f0f\u4e0b\u964d\u3002\n\u4f60\u4e5f\u8bb8\u53ef\u4ee5\u731c\u5230\u5176\u4f59\u7684\u5927\u90e8\u5206\uff1a\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u8c23\u8a00\u5c06\u4f1a\u6d41\u4f20\uff0c\u8bf4\u4e00\u5bb6\u5927\u94f6\u884c\u6fd2\u4e34\u5012\u95ed\u3002\u7ef4\u6301\u7f8e\u56fd\u7ecf\u6d4e\u8fd0\u884c\u7684\u9694\u591c\u8d37\u6b3e\u5c06\u505c\u6ede\u4e0d\u524d\u3002\u7f8e\u8054\u50a8\u5c06\u8bbe\u6cd5\u5b89\u6392\u94f6\u884c\u6551\u52a9\u3002\u4e0a\u6b21\u4e5f\u53d1\u751f\u4e86\u8fd9\u4e00\u5207\u3002\n\u4f46\u8fd9\u4e00\u6b21\uff0c\u6551\u52a9\u63d0\u6848\u53ef\u80fd\u4f1a\u9762\u4e34\u6765\u81ea\u4e24\u515a\u7684\u66f4\u5f3a\u786c\u7684\u53cd\u5bf9\u3002\u81ea2008\u5e74\u4ee5\u6765\uff0c\u7f8e\u56fd\u653f\u575b\u5de6\u7ffc\u548c\u53f3\u7ffc\u7684\u6c11\u7cb9\u4e3b\u4e49\u8005\u5bf9\u5411\u5927\u94f6\u884c\u65bd\u820d\u6301\u6000\u7591\u6001\u5ea6\u3002\u5df2\u7ecf\u5bf9\u94f6\u884c\u5728\u4e0a\u4e00\u6b21\u5d29\u76d8\u524d\u7684\u6e0e\u804c\u884c\u4e3a\u60e9\u7f5a\u4e0d\u8db3\u611f\u5230\u6124\u6012\uff0c\u6279\u8bc4\u4eba\u58eb\u5c06\u4f1a\u6124\u6012\u5730\u5f97\u77e5\uff0c\u5b83\u4eec\u5982\u6b64\u4e25\u91cd\u5730\u85d0\u89c6\u4e862008\u5e74\u540e\u6539\u9769\u7684\u7cbe\u795e\u3002\u4e00\u4e9b\u56fd\u4f1a\u8bae\u5458\u4f1a\u8d28\u7591\u7f8e\u8054\u50a8\u662f\u5426\u6709\u6743\u8d2d\u4e70\u9ad8\u98ce\u9669\u6295\u8d44\u6765\u652f\u6491\u91d1\u878d\u4e1a\uff0c\u5c31\u50cf\u5b83\u57282008\u5e74\u6240\u505a\u7684\u90a3\u6837\u3002(\u591a\u5fb7-\u5f17\u5170\u514b\u6cd5\u6848\u9650\u5236\u4e86\u7f8e\u8054\u50a8\u7684\u5bbd\u677e\u653f\u7b56)\u3002\n..", "note_en": "The U.S. financial system could be on the cusp of calamity. This time, we might not be able to save it.\n  A  of living with the coronavirus pandemic, American citizens are well aware of the toll it has taken on the economy: broken supply chains, record unemployment, failing small businesses. All of these factors are serious and could mire the United States in a deep, prolonged recession. But there\u2019s another threat to the economy, too. It lurks on the balance sheets of the big banks, and it could be cataclysmic. Imagine if, in addition to all the uncertainty surrounding the pandemic, you woke up one morning to find that the financial sector had collapsed.\n  You may think that such a crisis is unlikely, with memories of the 2008 crash still so fresh. But banks learned few lessons from that calamity, and new laws intended to keep them from taking on too much risk have failed to do so. As a result, we could be on the precipice of another crash, one different from 2008 less in kind than in degree. This one could be worse.\n  The financial crisis of 2008 was about home mortgages. Hundreds of billions of dollars in loans to home buyers were repackaged into securities called collateralized debt obligations, known as CDOs. In theory, CDOs were intended to shift risk away from banks, which lend money to home buyers. In practice, the same banks that issued home loans also bet heavily on CDOs, often using complex techniques hidden from investors and regulators. When the housing market took a hit, these banks were doubly affected. In late 2007, banks began disclosing tens of billions of dollars of subprime-CDO losses. The next year, Lehman Brothers went under, taking the economy with it.\n The federal government stepped in to rescue the other big banks and forestall a panic. The intervention worked\u2014though its success did not seem assured at the time\u2014and the system righted itself. Of course, many Americans suffered as a result of the crash, losing homes, jobs, and wealth. An already troubling gap between America\u2019s haves and have-nots grew wider still. Yet by March 2009, the economy was on the upswing, and the longest bull market in history had begun.\n To prevent the next crisis, Congress in 2010 passed the Dodd-Frank Act. Under the new rules, banks were supposed to borrow less, make fewer long-shot bets, and be more transparent about their holdings. The Federal Reserve began conducting \u201cstress tests\u201d to keep the banks in line. Congress also tried to reform the credit-rating agencies, which were widely blamed for enabling the meltdown by giving high marks to dubious CDOs, many of which were larded with subprime loans given to unqualified borrowers. Over the course of the crisis, more than 13,000 CDO investments that were rated AAA\u2014the highest possible rating\u2014defaulted.\n  The reforms were well intentioned, but, as we\u2019ll see, they haven\u2019t kept the banks from falling back into old, bad habits. After the housing crisis, subprime CDOs naturally fell out of favor. Demand shifted to a similar\u2014and similarly risky\u2014instrument, one that even has a similar name: the CLO, or collateralized loan obligation. A CLO walks and talks like a CDO, but in place of loans made to home buyers are loans made to businesses\u2014specifically, troubled businesses. CLOs bundle together so-called leveraged loans, the subprime mortgages of the corporate world. These are loans made to companies that have maxed out their borrowing and can no longer sell bonds directly to investors or qualify for a traditional bank loan. There are more than $1 trillion worth of leveraged loans currently outstanding. The majority are held in CLOs.\n  I was part of the group that structured and sold CDOs and CLOs at Morgan Stanley in the 1990s. The two securities are remarkably alike. Like a CDO, a CLO has multiple layers, which are sold separately. The bottom layer is the riskiest, the top the safest. If just a few of the loans in a CLO default, the bottom layer will suffer a loss and the other layers will remain safe. If the defaults increase, the bottom layer will lose even more, and the pain will start to work its way up the layers. The top layer, however, remains protected: It loses money only after the lower layers have been wiped out.\n  Unless you work in finance, you probably haven\u2019t heard of CLOs, but according to many estimates, the CLO market is bigger than the subprime-mortgage CDO market was in its heyday. The Bank for International Settlements, which helps central banks pursue financial stability, has  estimated the overall size of the CDO market in 2007 at $640 billion; it estimated the overall size of the CLO market in 2018 at $750 billion. More than $130 billion worth of CLOs have been created since then, some even in recent months. Just as easy mortgages fueled economic growth in the 2000s, cheap corporate debt has done so in the past decade, and many companies have binged on it.\n Despite their obvious resemblance to the villain of the last crash, CLOs have been praised by Federal Reserve Chair Jerome Powell and Treasury Secretary Steven Mnuchin for moving the risk of leveraged loans outside the banking system. Like former Fed Chair Alan Greenspan, who downplayed the risks posed by subprime mortgages, Powell and Mnuchin have downplayed any trouble CLOs could pose for banks, arguing that the risk is contained within the CLOs themselves.\n These sanguine views are hard to square with reality. The Bank for International Settlements estimates that, across the globe, banks held at least $250 billion worth of CLOs at the end of 2018. Last July, one month after  Powell declared in a press conference that \u201cthe risk isn\u2019t in the banks,\u201d  two economists from the Federal Reserve reported that U.S. depository institutions and their holding companies owned more than $110 billion worth of CLOs issued out of the Cayman Islands alone. A more complete picture is hard to come by, in part because banks have been inconsistent about reporting their CLO holdings. The Financial Stability Board, which monitors the global financial system,  warned in December that 14 percent of CLOs\u2014more than $100 billion worth\u2014are unaccounted for.\n  I have a checking account and a home mortgage with Wells Fargo; I decided to see how heavily invested my bank is in CLOs. I had to dig deep into the footnotes of  the bank\u2019s most recent annual report, all the way to page 144. Listed there are its \u201cavailable for sale\u201d accounts. These are investments a bank plans to sell at some point, though not necessarily right away. The list contains the categories of safe assets you might expect: U.S. Treasury bonds, municipal bonds, and so on. Nestled among them is an item called \u201ccollateralized loan and other obligations\u201d\u2014CLOs. I ran my finger across the page to see the total for these investments, investments that Powell and Mnuchin have asserted are \u201coutside the banking system.\u201d\n The total is $29.7 billion. It is a massive number. And it is inside the bank.\n  S banks have kept more capital on hand to protect against a downturn, and their balance sheets are less leveraged now than they were in 2007. And not every bank has loaded up on CLOs. But in December,  the Financial Stability Board estimated that, for the 30 \u201cglobal systemically important banks,\u201d the average exposure to leveraged loans and CLOs was roughly 60 percent of capital on hand.  Citigroup reported $20 billion worth of CLOs as of March 31;  JPMorgan Chase reported $35 billion (along with an unrealized loss on CLOs of $2 billion). A couple of midsize banks\u2014Banc of California, Stifel Financial\u2014have CLOs totaling more than 100 percent of their capital. If the leveraged-loan market imploded, their liabilities could quickly become greater than their assets.\n  How can these banks justify gambling so much money on what looks like such a risky bet? Defenders of CLOs say they aren\u2019t, in fact, a gamble\u2014on the contrary, they are as sure a thing as you can hope for. That\u2019s because the banks mostly own the least risky, top layer of CLOs. Since the mid-1990s, the highest annual default rate on leveraged loans was about 10 percent, during the previous financial crisis. If 10 percent of a CLO\u2019s loans default, the bottom layers will suffer, but if you own the top layer, you might not even notice. Three times as many loans could default and you\u2019d still be protected, because the lower layers would bear the loss. The securities are structured such that investors with a high tolerance for risk, like hedge funds and private-equity firms, buy the bottom layers hoping to win the lottery. The big banks settle for smaller returns and the security of the top layer. As of this writing, no AAA\u2011rated layer of a CLO has ever lost principal.\n But that AAA rating is deceiving. The credit-rating agencies grade CLOs and their underlying debt separately. You might assume that a CLO must contain AAA debt if its top layer is rated AAA. Far from it. Remember: CLOs are made up of loans to businesses that are already in trouble.\n So what sort of debt do you find in a CLO? Fitch Ratings has estimated that as of April, more than 67 percent of the 1,745 borrowers in its leveraged-loan database had a B rating. That might not sound bad, but B-rated debt is lousy debt. According to the rating agencies\u2019 definitions, a B-rated borrower\u2019s ability to repay a loan is  likely to be impaired in adverse business or economic conditions. In other words, two-thirds of those leveraged loans are likely to lose money in economic conditions like the ones we\u2019re presently experiencing. According to Fitch, 15 percent of companies with leveraged loans are rated lower still, at CCC or below. These borrowers are on the cusp of default.\n  So while the banks restrict their CLO investments mostly to AAA\u2011rated layers, what they really own is exposure to tens of billions of dollars of high-risk debt. In those highly rated CLOs, you won\u2019t find a single loan rated AAA, AA, or even A.\n How can the credit-rating agencies get away with this? The answer is \u201cdefault correlation,\u201d a measure of the likelihood of loans defaulting  at the same time. The main reason CLOs have been so safe is the same reason CDOs seemed safe before 2008. Back then, the underlying loans were risky too, and everyone knew that some of them would default. But it seemed unlikely that many of them would default at the same time. The loans were spread across the entire country and among many lenders. Real-estate markets were thought to be local, not national, and the factors that typically lead people to default on their home loans\u2014job loss, divorce, poor health\u2014don\u2019t all move in the same direction at the same time. Then housing prices fell 30 percent across the board and defaults skyrocketed.\n  For CLOs, the rating agencies determine the grades of the various layers by assessing both the risks of the leveraged loans and their default correlation. Even during a recession, different sectors of the economy, such as entertainment, health care, and retail, don\u2019t necessarily move in lockstep. In theory, CLOs are constructed in such a way as to minimize the chances that all of the loans will be affected by a single event or chain of events. The rating agencies award high ratings to those layers that seem sufficiently diversified across industry and geography.\n  Banks do not publicly report which CLOs they hold, so we can\u2019t know precisely which leveraged loans a given institution might be exposed to. But all you have to do is look at a list of leveraged borrowers to see the potential for trouble. Among the dozens of companies Fitch added to its list of \u201cloans of concern\u201d in April were AMC Entertainment, Bob\u2019s Discount Furniture, California Pizza Kitchen, the Container Store, Lands\u2019 End, Men\u2019s Wearhouse, and Party City. These are all companies hard hit by the sort of belt-tightening that accompanies a conventional downturn.\n We are not in the midst of a conventional downturn. The two companies with the largest amount of outstanding debt on Fitch\u2019s April list were Envision Healthcare, a medical-staffing company that, among other things, helps hospitals administer emergency-room care, and Intelsat, which provides satellite broadband access. Also added to the list was Hoffmaster, which makes products used by restaurants to package food for takeout. Companies you might have expected to weather the present economic storm are among those suffering most acutely as consumers not only tighten their belts, but also redefine what they consider necessary.\n  Even before the pandemic struck, the credit-rating agencies may have been underestimating how vulnerable unrelated industries could be to the same economic forces.  A 2017 article by John Griffin, of the University of Texas, and Jordan Nickerson, of Boston College, demonstrated that the default-correlation assumptions used to create a group of 136 CLOs should have been three to four times higher than they were, and the miscalculations resulted in much higher ratings than were warranted. \u201cI\u2019ve been concerned about AAA CLOs failing in the next crisis for several years,\u201d Griffin told me in May. \u201cThis crisis is more horrifying than I anticipated.\u201d\n  Under current conditions, the outlook for leveraged loans in a range of industries is truly grim. Companies such as AMC (nearly $2 billion of debt spread across 224 CLOs) and Party City ($719 million of debt in 183 CLOs) were in dire straits before social distancing. Now moviegoing and party-throwing are paused indefinitely\u2014and may never come back to their pre-pandemic levels.\n The prices of AAA-rated CLO layers tumbled in March, before the Federal Reserve announced that its additional $2.3 trillion of lending would include loans to CLOs. (The program is controversial: Is the Fed really willing to prop up CLOs when so many previously healthy small businesses are struggling to pay their debts? As of mid-May, no such loans had been made.) Far from scaring off the big banks, the tumble inspired several of them to buy low: Citigroup acquired $2 billion of AAA CLOs during the dip, which it flipped for a $100 million profit when prices bounced back. Other banks, including Bank of America, reportedly bought lower layers of CLOs in May for about 20 cents on the dollar.\n  Meanwhile, loan defaults are already happening. There were more in April than ever before. Several experts told me they expect more record-breaking months this summer. It will only get worse from there.\n defaults continue, how badly could they damage the larger economy? What, precisely, is the worst-case scenario?\n  For the moment, the financial system seems relatively stable. Banks can still pay their debts and pass their regulatory capital tests. But recall that the previous crash took more than a year to unfold. The present is analogous not to the fall of 2008, when the U.S. was in full-blown crisis, but to the summer of 2007, when some securities were going underwater but no one yet knew what the upshot would be.\n What I\u2019m about to describe is necessarily speculative, but it is rooted in the experience of the previous crash and in what we know about current bank holdings. The purpose of laying out this worst-case scenario isn\u2019t to say that it will necessarily come to pass. The purpose is to show that it  could. That alone should scare us all\u2014and inform the way we think about the next year and beyond.\n  Later this summer, leveraged-loan defaults will increase significantly as the economic effects of the pandemic fully register. Bankruptcy courts will very likely buckle under the weight of new filings. (During a two-week period in May, J.Crew, Neiman Marcus, and J. C. Penney all filed for bankruptcy.) We already know that a significant majority of the loans in CLOs have weak covenants that offer investors only minimal legal protection; in industry parlance, they are \u201ccov lite.\u201d The holders of leveraged loans will thus be fortunate to get pennies on the dollar as companies default\u2014nothing close to the 70 cents that has been standard in the past.\n  As the banks begin to feel the pain of these defaults, the public will learn that they were hardly the only institutions to bet big on CLOs. The insurance giant AIG\u2014which had massive investments in CDOs in 2008\u2014is now  exposed to more than $9 billion in CLOs. U.S. life-insurance companies as a group in 2018 had an estimated one-fifth of their capital tied up in these same instruments. Pension funds, mutual funds, and exchange-traded funds (popular among retail investors) are also heavily invested in leveraged loans and CLOs.\n The banks themselves may reveal that their CLO investments are larger than was previously understood. In fact, we\u2019re already seeing this happen. On May 5,  Wells Fargo disclosed $7.7 billion worth of CLOs in a different corner of its balance sheet than the $29.7 billion I\u2019d found in its annual report. As defaults pile up, the Mnuchin-Powell view that leveraged loans can\u2019t harm the financial system will be exposed as wishful thinking.\n Thus far, I\u2019ve focused on CLOs because they are the most troubling assets held by the banks. But they are also emblematic of other complex and artificial products that banks have stashed on\u2014and off\u2014their balance sheets. Later this year, banks may very well report quarterly losses that are much worse than anticipated. The details will include a dizzying array of transactions that will recall not only the housing crisis, but the Enron scandal of the early 2000s. Remember all those subsidiaries Enron created (many of them infamously named after  Star Wars characters) to keep risky bets off the energy firm\u2019s financial statements? The big banks use similar structures, called \u201cvariable interest entities\u201d\u2014companies established largely to hold off-the-books positions.  Wells Fargo has more than $1 trillion of VIE assets, about which we currently know very little, because reporting requirements are opaque. But one popular investment held in VIEs is securities backed by commercial mortgages, such as loans to shopping malls and office parks\u2014two categories of borrowers experiencing severe strain as a result of the pandemic.\n  The early losses from CLOs will not on their own erase the capital reserves required by Dodd-Frank. And some of the most irresponsible gambles from the last crisis\u2014the speculative derivatives and credit-default swaps you may remember reading about in 2008\u2014are less common today, experts told me. But the losses from CLOs, combined with losses from other troubled assets like those commercial-mortgage-backed securities, will lead to serious deficiencies in capital. Meanwhile, the same economic forces buffeting CLOs will hit other parts of the banks\u2019 balance sheets hard; as the recession drags on, their traditional sources of revenue will also dry up. For some, the erosion of capital could approach the levels Lehman Brothers and Citigroup suffered in 2008. Banks with insufficient cash reserves will be forced to sell assets into a dour market, and the proceeds will be dismal. The prices of leveraged loans, and by extension CLOs, will spiral downward.\n  You can perhaps guess much of the rest: At some point, rumors will circulate that one major bank is near collapse. Overnight lending, which keeps the American economy running, will seize up. The Federal Reserve will try to arrange a bank bailout. All of that happened last time, too.\n  But this time, the bailout proposal will likely face stiffer opposition, from both parties. Since 2008, populists on the left and the right in American politics have grown suspicious of handouts to the big banks. Already irate that banks were inadequately punished for their malfeasance leading up to the last crash, critics will be outraged to learn that they so egregiously flouted the spirit of the post-2008 reforms. Some members of Congress will question whether the Federal Reserve has the authority to buy risky investments to prop up the financial sector, as it did in 2008. (Dodd-Frank limited the Fed\u2019s abil\n......", "posttime": "2020-06-11 03:19:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u94f6\u884c,bank,clo", "title": "\u8feb\u5728\u7709\u776b\u7684\u94f6\u884c\u5012\u95ed", "title_en": "The Looming Bank Collapse", "transed": 1, "url": "https://www.theatlantic.com/magazine/archive/2020/07/coronavirus-banks-collapse/612247/", "via": "", "real_tags": ["\u94f6\u884c", "bank", "clo"]}, {"category": "", "categoryclass": "", "imagename": "899272a11e06ae8434cc8c3da02e540e.jpg", "infoid": 1006046, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9065\u611f\u516c\u53f8Planet\u8fd0\u8425\u7740100\u591a\u9897\u6301\u7eed\u56f4\u7ed5\u5730\u7403\u8fd0\u884c\u7684\u536b\u661f\uff0c\u6bcf\u5929\u6536\u96c6\u4e16\u754c\u4e0a\u6574\u4e2a\u9646\u5730\u7684\u56fe\u50cf\u3002\u73b0\u5728\uff0c\u4e3a\u4e86\u7ed9\u5ba2\u6237\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u4fe1\u606f\uff0c\u5b83\u5df2\u7ecf\u5c06\u51e0\u9897\u536b\u661f\u98de\u5230\u79bb\u5730\u7403\u66f4\u8fd150\u516c\u91cc\u7684\u5730\u65b9\u3002\n\u8fd9\u79cd\u5b57\u9762\u4e0a\u7684\u653e\u5927\u52aa\u529b\u5c06\u4f7f\u8be5\u516c\u53f8\u63d0\u4f9b\u7684\u56fe\u50cf\u5206\u8fa8\u7387\u4ece\u6bcf\u50cf\u7d2080\u5398\u7c73\u589e\u52a0\u523050\u5398\u7c73\u3002\u5728\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5206\u6790\u5e08\u9664\u4e86\u80fd\u770b\u5230\u6c7d\u8f66\u7684\u5f62\u72b6\u5916\uff0c\u8fd8\u80fd\u6e05\u695a\u5730\u8fa8\u522b\u51fa\u5b83\u7684\u6321\u98ce\u73bb\u7483\u7684\u4f4d\u7f6e\u3002\n\u5230\u590f\u672b\uff0c\u8be5\u516c\u53f8\u8ba1\u5212\u5728\u5176\u661f\u5ea7\u4e2d\u589e\u52a06\u9897\u65b0\u536b\u661f\uff0c\u4f7f\u5176\u80fd\u591f\u6bcf\u592912\u6b21\u62cd\u6444\u540c\u4e00\u5730\u533a\u7684\u9ad8\u5206\u8fa8\u7387\u7167\u7247\u3002\n\u201c\u6211\u4eec\u89c9\u5f9750\u5398\u7c73\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u95e8\u69db\uff0c\u4f46\u6211\u4eec\u771f\u6b63\u7a81\u7834\u6781\u9650\u7684\u5730\u65b9\u662f\u91cd\u8bbf\uff0c\u201d\u884c\u661f\u516c\u53f8\u526f\u603b\u88c1\u5409\u59c6\u00b7\u6258\u9a6c\u68ee(Jim Thomason)\u544a\u8bc9Quartz\u3002\n\u91cd\u590d\u67e5\u770b\u540c\u4e00\u533a\u57df\u7684\u80fd\u529b\u610f\u5473\u7740\u5ba2\u6237\u5728\u8bf7\u6c42\u540e\u5c06\u66f4\u5feb\u5730\u83b7\u5f97\u4ed6\u4eec\u7684\u56fe\u50cf\uff0c\u5e76\u4e14\u4ed6\u4eec\u53ef\u80fd\u80fd\u591f\u770b\u5230\u5730\u9762\u4e0a\u6b63\u5728\u53d1\u751f\u7684\u53d8\u5316\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u66f4\u6709\u53ef\u80fd\u8eb2\u907f\u5149\u5b66\u7a7a\u95f4\u56fe\u50cf\u7684\u7978\u5bb3\uff1a\u4e91\u3002\nPlanet\u662f\u7531\u524dNASA\u79d1\u5b66\u5bb6\u4e8e2010\u5e74\u521b\u7acb\u7684\uff0c\u4ed6\u4eec\u5e0c\u671b\u5229\u7528\u536b\u661f\u6280\u672f\u7684\u65b0\u8fdb\u6b65\uff0c\u6269\u5927\u5bf9\u7a7a\u95f4\u6570\u636e\u7684\u83b7\u53d6\u3002\u5b83\u7684\u5ba2\u6237\u5305\u62ec\u7f8e\u56fd\u60c5\u62a5\u673a\u6784\uff0c\u5bf9\u4ed6\u4eec\u8fdb\u884c\u4e8b\u540e\u8bc4\u4f30\u7684\u975e\u653f\u5e9c\u7ec4\u7ec7\uff0c\u519c\u4e1a\u96c6\u56e2\uff0c\u4ee5\u53ca\u5229\u7528\u673a\u5668\u5b66\u4e60\u4ece\u9065\u611f\u6570\u636e\u4e2d\u83b7\u5f97\u6d1e\u5bdf\u529b\u7684\u516c\u53f8\u3002\nPlanet\u8fd0\u884c\u7740150\u591a\u9897\u536b\u661f\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u9e3d\u5b50(Doves)\uff0c\u8fd9\u662f\u4e00\u79cd\u70e4\u9762\u5305\u673a\u5927\u5c0f\u7684\u98de\u884c\u5668\uff0c\u6bcf\u5929\u96c6\u4f53\u201c\u626b\u63cf\u201d\u5730\u7403\uff0c\u4ea7\u751f\u5206\u8fa8\u7387\u7ea6\u4e3a\u6bcf\u50cf\u7d203\u7c73\u7684\u56fe\u50cf\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u8fc7\u8be5\u516c\u53f8\u5728\u534e\u76db\u987f\u7279\u533a\u5e7f\u6cdb\u5206\u4eab\u7684\u4e00\u5e45\u65b0\u58c1\u753b\u7684\u56fe\u50cf\u3002\n\u5b83\u8fd8\u8fd0\u8425\u774015\u9897SkySats\uff0c\u8fd9\u4e9b\u536b\u661f\u662f\u7531Planet\u4e8e2017\u5e74\u4ece\u8c37\u6b4c(Google)\u624b\u4e2d\u6536\u8d2d\u7684\u4e00\u5bb6\u6700\u521d\u540d\u4e3aSkybox Image\u7684\u516c\u53f8\u5efa\u9020\u548c\u53d1\u5c04\u7684\u3002\u4e3a\u4e86\u5f00\u59cb\u6536\u96c6\u66f4\u6e05\u6670\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u822a\u5929\u5668\u7684\u8f68\u9053\u4ece500\u516c\u91cc\u964d\u5230\u4e86450\u516c\u91cc\u3002\n\u8fd9\u6b21\u6536\u8d2d\u8fd8\u9644\u5e26\u4e86\u53e6\u5916\u516d\u4e2a\u822a\u5929\u5668\uff0c\u6216\u591a\u6216\u5c11\u5730\u88ab\u88c5\u7bb1\u5728\u5de5\u5382\u91cc\u3002\u4eca\u5e74\u590f\u5929\uff0c\u4ed6\u4eec\u5c06\u901a\u8fc7\u8ddf\u968f\u706b\u7bad\u8fdb\u5165\u8f68\u9053\uff0c\u706b\u7bad\u643a\u5e26\u7684\u536b\u661f\u662f\u7531\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u7684\u516c\u53f8SpaceX\u5efa\u9020\u7684\u540d\u4e3aStarlink\u7684\u4e92\u8054\u7f51\u661f\u5ea7\u3002\u9884\u8ba1\u57286\u6708\u4efd\u548c\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\u53d1\u5c04\u7684\u4e24\u679a\u536b\u661f\uff0c\u6bcf\u679a\u90fd\u5c06\u642d\u8f7d\u4e09\u9897\u5929\u7a7a\u536b\u661f\u3002\nSpaceX\u6b63\u5728\u5feb\u901f\u53d1\u5c04\u5176\u592a\u7a7a\u7f51\u7edc\uff1b\u5b83\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u8d85\u8fc7Planet\uff0c\u6210\u4e3a\u6570\u91cf\u6700\u591a\u7684\u79c1\u4eba\u62e5\u6709\u822a\u5929\u5668\u7684\u8fd0\u8425\u5546\u3002\u8fd9\u5bb6\u706b\u7bad\u5236\u9020\u5546\u8fd8\u5f15\u5165\u4e86\u642d\u4e58\u6709\u6548\u8f7d\u8377\u7684\u65b0\u8d39\u7387\uff0c\u5141\u8bb8Planet\u4ee5\u6bcf\u516c\u65a4\u7ea65000\u7f8e\u5143\u7684\u4ef7\u683c\u5c06\u5176\u8d44\u4ea7\u9001\u5165\u8f68\u9053-\u4ee5\u592a\u7a7a\u6807\u51c6\u8861\u91cf\uff0c\u8fd9\u662f\u4e00\u4e2a\u4fbf\u5b9c\u7684\u9009\u62e9\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u4f1a\u559c\u6b22\u592a\u7a7a\u5546\u4e1a\uff0c\u8fd9\u662f\u4e00\u5c01\u5173\u4e8e\u5916\u661f\u4f01\u4e1a\u7684\u6bcf\u5468\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e5f\u7ed9\u6211\u6ce8\u518c\u6bcf\u65e5\u7b80\u62a5\uff0cQuartz\u4e3a\u806a\u660e\u3001\u5fd9\u788c\u7684\u4eba\u63d0\u4f9b\u7684\u65e9\u95f4\u7535\u5b50\u90ae\u4ef6\u3002", "note_en": "The remote-sensing firm Planet operates more than one hundred satellites that constantly orbit the earth, collecting imagery of the world\u2019s entire landmass each day. Now, to offer more clarity to its customers, it has flown a handful of its satellites 50 km closer to the Earth.\n This literal zoom-in effort will allow the firm to offer imagery with a resolution of 50 cm of earth per pixel, an increase from 80 cm. In one example, that means that as well as seeing the shape of a car, analysts will also be able to clearly discern the position of its windshield.\n By the end of the summer, the company plans to add six new satellites to its constellation, allowing it to take those higher resolution pictures of the same area twelve times a day.\n \u201cWe felt like 50 centimeters was an important threshold, but where we are really pushing the envelope is on that revisit,\u201d Jim Thomason, a Planet vice president, told Quartz.\n The ability to view the same area repeatedly means customers will get their imagery sooner after they request it, and they may be able to see what is changing on the ground. That\u00a0also means a higher chance of dodging the bane of optical space imagery: clouds.\n   Planet was founded in 2010 by former NASA scientists who wanted to leverage new advances in satellite technology and expand access to space data. Its customers include US intelligence agencies,  the NGOs that second-guess them, agricultural conglomerates, and firms  that use machine learning to gain insight from remote-sensing data.\n Planet operates more than 150 satellites, most of which are Doves, toaster-oven sized craft that  collectively \u201cscan\u201d the earth each day, producing imagery with a resolution about three meters per pixel. You may have seen the company\u2019s widely-shared image of a new mural in Washington, D.C.\n   It also operates 15 SkySats, which were built and launched by a company, originally called SkyBox Imaging, that Planet acquired from Google in 2017. These are the spacecraft which had their orbits lowered from 500 km to 450 km in order to begin collecting sharper data.\n The acquisition also came with six more spacecraft, more or less boxed up at the factory. This summer, they will reach orbit by tagging along with rockets carrying satellites for the  internet constellation called Starlink being built by Elon Musk\u2019s company SpaceX. Two launches, expected in June and later this summer, will each carry three SkySats.\n  SpaceX is launching its space network at a rapid pace; it overtook Planet earlier this year as the operator of the largest number of privately owned spacecraft. The rocket-maker also introduced a  new rate for rideshare payloads, allowing Planet to put its assets in orbit for a price of about $5,000 a kilogram\u2014a cheap option by space standards.\n  If you liked this article, you may enjoy Space Business, a weekly email on extra-terrestrial enterprise.\n   Also sign me up for the Daily Brief, Quartz\u2019s morning email for smart, busy people.", "posttime": "2020-06-11 03:02:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4fef\u77b0,view", "title": "\u4ece\u9ad8\u7a7a\u4fef\u77b0\u5730\u7403\u7684\u666f\u8c61\u521a\u521a\u53d8\u5f97\u66f4\u52a0\u6e05\u6670", "title_en": "Planet's View From Above Just Got Clearer", "transed": 1, "url": "https://qz.com/1866515/planets-skysats-zoom-in-for-a-closer-look-at-the-earth/", "via": "", "real_tags": ["\u4fef\u77b0", "view"]}, {"category": "", "categoryclass": "", "imagename": "6b3d76de7baac9ff9f3c278d4466bb6c.jpeg", "infoid": 1006044, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u5411\u4e00\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\u652f\u4ed8\u4e86\u516d\u4f4d\u6570\u7684\u8d39\u7528\uff0c\u8ba9\u4ed6\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u5c3e\u5df4\u96f6\u65e5(Zero-day In Tails)\uff0c\u4ee5\u8bc6\u522b\u6572\u8bc8\u548c\u5a01\u80c1\u5973\u5b69\u7684\u7537\u5b50\u3002", "note_en": "Facebook paid a cybersecurity firm six figures to develop a zero-day in Tails to identify a man who extorted and threatened girls.", "posttime": "2020-06-11 03:00:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u5e2e\u52a9,helped", "title": "Facebook\u5e2e\u52a9\u8054\u90a6\u8c03\u67e5\u5c40\u9ed1\u8fdb\u4e86\u4e00\u4e2a\u513f\u7ae5\u6355\u98df\u8005", "title_en": "Facebook Helped the FBI Hack a Child Predator", "transed": 1, "url": "https://www.vice.com/en_us/article/v7gd9b/facebook-helped-fbi-hack-child-predator-buster-hernandez", "via": "", "real_tags": ["facebook", "\u5e2e\u52a9", "helped"]}, {"category": "", "categoryclass": "", "imagename": "4581e3d5057f26452978155e343abb63.jpeg", "infoid": 1006043, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5c06\u4f7fPixel\u7cfb\u5217\u6210\u4e3a\u8fc4\u4eca\u8868\u73b0\u6700\u597d\u7684\u4e00\u5e74\uff0c\u5c3d\u7ba1\u4e0e\u6392\u540d\u524d\u4e94\u7684\u54c1\u724c\u76f8\u6bd4\uff0c\u8fd9\u4e2a\u6570\u5b57\u76f8\u5f62\u89c1\u7ecc\u3002\n\u8c37\u6b4cPixel3a\u7684\u9500\u91cf\u5f88\u53ef\u80fd\u5360\u5230\u4e86720\u4e07\u90e8\u7684\u5927\u90e8\u5206\u3002", "note_en": "This would make it the best year yet for the Pixel line, although that number pales in comparison to the top-five brands.\n It\u2019s very likely sales of the Google Pixel 3a make up the bulk of that 7.2 million figure.", "posttime": "2020-06-11 02:44:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,\u624b\u673a,google,app,year", "title": "\u5c3d\u7ba1Pixel4\u4ee4\u4eba\u5931\u671b\uff0c\u4f462019\u5e74\u662f\u8c37\u6b4c\u624b\u673a\u9500\u91cf\u6700\u597d\u7684\u4e00\u5e74", "title_en": "Despite Disappointing Pixel 4, 2019 Was Google's Best Year for Phone Sales Yet", "transed": 1, "url": "https://www.androidauthority.com/google-pixel-sales-2019-1127410/", "via": "", "real_tags": ["\u8c37\u6b4c", "\u624b\u673a", "google", "app", "year"]}, {"category": "", "categoryclass": "", "imagename": "a498557a343dfd09fe4bac13a5a04699.png", "infoid": 1006042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ec0\u4e48\u662f\u9759\u6001\u5206\u6790(SA)\uff1f\u597d\u7684\uff0c\u9759\u6001\u610f\u5473\u7740\u201c\u975e\u52a8\u6001\u201d\uff0c\u5373\u4e0d\u5728\u8fd0\u884c\u65f6\u6216\u5728\u8fd0\u884c\u671f\u95f4\u3002\u9759\u6001\u5206\u6790\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u7684\u4e0a\u4e0b\u6587\u4e2d\u5728\u7f16\u8bd1\u65f6\u6216\u63a5\u8fd1\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u4e8b\u60c5\u3002\u4f46\u9759\u6001\u5206\u6790\u53ea\u662f\u5f62\u5f0f\u94fe\u7684\u4e00\u90e8\u5206\uff0c\u9664\u4e86\u5217\u8f66\u63a7\u5236\u7cfb\u7edf\u7b49\u5173\u952e\u7cfb\u7edf\u5916\uff0c\u901a\u5e38\u4e0d\u4f1a\u5145\u5206\u5229\u7528\u5b83\u3002\n\u5b8c\u6574\u7684\u5f62\u5f0f\u5316\u94fe\u6761\u4ece\u5f62\u5f0f\u5316\u89c4\u8303\u5f00\u59cb\uff0c\u5f62\u5f0f\u5316\u9700\u6c42\u8bc4\u4f30\u662f\u5f62\u5f0f\u5316\u89c4\u8303\u7684\u4e00\u4e2a\u91cd\u8981\u524d\u63d0\uff0c\u8fd9\u4e00\u90e8\u5206\u6d89\u53ca\u7684\u95ee\u9898\u662f\u201c\u4e00\u4e9b\u8f6f\u4ef6\u8981\u505a\u4ec0\u4e48\uff1f\u201d\n\u4e0b\u4e00\u6b65\u662f\u6b63\u5f0f\u7684\u8bbe\u8ba1\u548c\u5efa\u6a21\uff0c\u5b83\u5904\u7406\u8f6f\u4ef6\u662f\u5982\u4f55\u505a\u7684\u95ee\u9898\uff1b\u901a\u5e38\u8fd9\u9996\u5148\u4ee5\u6b63\u5f0f\u7684\u65b9\u5f0f\u63cf\u8ff0\u6570\u636e\u548c\u7b97\u6cd5\uff0c\u7136\u540e\u9a8c\u8bc1\u6a21\u578b\uff0c\u6700\u540e(\u901a\u5e38)\u7528\u4f5c\u6846\u67b6\u5e76\u7528\u4e8e\u4ee3\u7801\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u76ee\u6807\u5927\u81f4\u76f8\u5f53\u4e8eSpark\u5bf9\u4e8eAda\u7684\u610f\u4e49\uff0c\u5373\u5b83\u5141\u8bb8NIM\u7a0b\u5e8f\u88ab\u6b63\u5f0f\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002\n\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u901a\u8fc7\u62d3\u5bbd\u89c6\u91ce\uff0c\u770b\u770b\u201c\u8f6f\u4ef6\u5f00\u53d1\u201d\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u6765\u4e86\u89e3\u4e0a\u4e0b\u6587\u548c\u5168\u8c8c\u3002\u8f6f\u4ef6\u5f00\u53d1\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u6709\u70b9\u5947\u602a\u7684\u8fc7\u7a0b\uff0c\u5b83\u662f\u7ffb\u8bd1\u548c\u7406\u89e3\u4e00\u79cd\u8bed\u8a00\uff0c\u5373\u5ba2\u6237\u7528\u4ed6\u4eec\u7684\u8bed\u8a00\u601d\u8003\uff0c\u5728\u4ed6\u4eec\u7684\u4e16\u754c\u91cc\uff0c\u53ef\u80fd\u662f\u5929\u4f53\u7269\u7406\u3001\u9500\u552e\u6216\u5236\u9020\u3002\u800c\u4e14\u4ed6\u4eec\u7ecf\u5e38\u4e0d\u63d0\u5230\u4ed6\u4eec\u8ba4\u4e3a\u662f\u4f17\u6240\u5468\u77e5\u7684\u4e1c\u897f\u3002\u8fd9\u5c31\u662f\u201c\u8fdb\u6765\u201d\u7684\u4e00\u9762\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u201c\u5916\u53d1\u201d\u7684\u786c\u4ef6\uff0c\u6bcf\u4e2a\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u77e5\u9053\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u5371\u9669\u4e4b\u5904\u3002\u8fd8\u6709\u4e00\u4e2a\u590d\u6742\u7684\u7b2c\u4e09\u90e8\u5206\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u5e38\u5efa\u7acb\u7684\u8f6f\u4ef6\u4e0d\u662f\u76f4\u63a5\u5728\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\uff0c\u800c\u901a\u5e38\u662f\u5728\u591a\u4e2a\u4e2d\u95f4\u5c42\u4e0a\u8fd0\u884c\u7684\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e93\u3002\n\u5f53\u67d0\u4e2a\u9879\u76ee\u975e\u5e38\u5173\u952e\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u9700\u8981\u6b63\u5f0f\u7684\u89c4\u8303\uff0c\u8fd8\u5305\u62ec\u4e0e\u6240\u9700\u529f\u80fd\u672c\u8eab\u65e0\u5173\u4f46\u5bf9\u6211\u4eec\u6765\u8bf4\u6709\u4ef7\u503c\u751a\u81f3\u662f\u5173\u952e\u7684\u5b9e\u7528\u56e0\u7d20\u3002\u4e00\u4e2a\u660e\u663e\u7684\u4f8b\u5b50\u662f\u4ee3\u7801\u5fc5\u987b\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u4f53\u7cfb\u7ed3\u6784\u7684\u5217\u8868\u3002\u53e6\u4e00\u4e2a\u4e0d\u592a\u660e\u663e\u7684\u4f8b\u5b50\u662f\u4ee3\u7801\u5c06\u88ab\u89c2\u5bdf\u7684\u5bc6\u5207\u7a0b\u5ea6(\u4f8b\u5982\u65e5\u5fd7\u6587\u4ef6)\u4ee5\u53ca\u54ea\u4e9b\u5931\u8d25\u54cd\u5e94\u662f\u53ef\u63a5\u53d7\u7684\u3002\n\u4f46\u8bf7\u8bb0\u4f4f\uff1a\u6211\u4eec\u7684\u4ee3\u7801\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u7684\u58f0\u660e\u662f\u6211\u4eec\u6240\u80fd\u505a\u51fa\u7684\u6700\u5927\u58f0\u660e\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u96be\u4ee5\u5b9e\u73b0\u548c\u975e\u5e38\u7f55\u89c1\u7684\u58f0\u660e\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u63a7\u5236\u4e86\u8bb8\u591a\u5c42\u4e2d\u7684\u4e00\u4e2a\uff0c\u4f46\u9700\u8981\u4e0e\u5b83\u4eec\u4ea4\u4e92\u6216\u4f9d\u8d56\u5b83\u4eec\u3002\n\u9759\u6001(\u7a0b\u5e8f)\u5206\u6790\u662f\u6211\u4eec\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6700\u5173\u5fc3\u7684\u5f62\u5f0f\u94fe\u5143\u7d20\u3002\n\u901a\u5e38\u7684\u201c\u5b9a\u4e49\u201d\uff0c\u8ba9\u6211\u5f15\u7528\u7ef4\u57fa\u767e\u79d1\u7684\u8bdd\u8bf4\uff0c\u201c\u9759\u6001\u7a0b\u5e8f\u5206\u6790\u662f\u5728\u6ca1\u6709\u5b9e\u9645\u6267\u884c\u7a0b\u5e8f\u2026\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7684\u5206\u6790\u201d\u3002\u662f\u6b63\u786e\u7684\uff0c\u4f46\u540c\u65f6\u4e5f\u662f\u5b8c\u5168\u4e0d\u591f\u7684\uff0c\u51e0\u4e4e\u6beb\u65e0\u7528\u5904\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u533a\u5206\u7f16\u8bd1\u5668\u7f16\u5199\u4eba\u5458\u548c\u5f00\u53d1\u4eba\u5458\uff0c\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u5fc5\u987b\u533a\u5206\u201c\u4ee3\u7801\u672c\u8eab\u6b63\u786e\u5417\uff1f\u201d\u548c\u201c\u4ee3\u7801\u5728\u903b\u8f91\u4e0a\u662f\u6b63\u786e\u7684\u5417\uff1f\u201d\u3002\u4ece\u7f16\u8bd1\u5668\u7684\u89d2\u5ea6\u770b\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\nvar foo\uff1auint32=0#init var var myArray\uff1aarray[0..\u3002511\uff0cuint32]#\u6211\u4eec\u7684\u6570\u7ec4#.\u3002foo=myArray[100]#\u5c06\u4e00\u4e9b\u5143\u7d20\u5206\u914d\u7ed9foo\u3002\n\u662f\u6b63\u786e\u7684\u3002\u7c7b\u578b\u5339\u914d\u5e76\u4e14\u7d22\u5f15\u5728\u8fb9\u754c\u5185\u3002\u8fd9\u662f\u7f16\u8bd1\u5668\u6240\u5173\u5fc3\u7684\u3002\n\u5c06myArray[100]\u8d4b\u7ed9foo\u662f\u5426\u6709\u610f\u4e49\u5e76\u4e0d\u662f\u7f16\u8bd1\u5668\u5173\u5fc3\u7684\u95ee\u9898\uff0c\u4f46\u662f\u60a8\u5e94\u8be5\u5173\u6ce8\u5b83\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u60a8\u5e0c\u671b\u5e76\u9700\u8981\u60a8\u7684\u4ee3\u7801\u505a\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u4e8b\u60c5\u4ee5\u53ca\u5b83\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u5e0c\u671b\u60a8\u7684\u4ee3\u7801\u5b9e\u73b0\u4e00\u4e9b\u7b97\u6cd5\u3002\n\u9700\u8981\u9759\u6001\u5206\u6790\u7684\u57fa\u672c\u4e0a\u662f\u68c0\u67e5\u7b97\u6cd5\u7684\u6b63\u786e\u6027-\u4f46\u5982\u679c\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0c\u8fd8\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u80fd\u529b\u5c06\u76f8\u5f53\u591a\u7684\u7f16\u8bd1\u5668\u5de5\u4f5c\u5378\u8f7d\u5230\u9759\u6001\u5206\u6790\u4e0a\u3002\n\u4e3e\u4e2a\u4f8b\u5b50\uff1aRange\uff0c\u4ec0\u4e48\u662fRange\uff0c\u4ec0\u4e48\u662fRange\uff0c\u57fa\u672c\u4e0a\u7b49\u540c\u4e8e\u5199var Month\uff1auint8 invar 0&lt\uff1bMonth&lt\uff1b=12\uff0c\u5373\u5e26\u4e0d\u53d8\u91cf\u7684\u53d8\u91cf\u58f0\u660e\u3002\n\u4e0d\u53d8\u91cf\u662f\u5728\u4e0e\u5176\u76f8\u5173\u7684\u9879(\u4f8b\u5982\u53d8\u91cf)\u7684\u751f\u547d\u5468\u671f\u4e2d\u5fc5\u987b\u4e3a\u771f\u7684\u6761\u4ef6\u3002\u5927\u591a\u6570\u8bed\u8a00\u548cSA\u5de5\u5177\u90fd\u5141\u8bb8\u4e0d\u53d8\u91cf\u5728\u67d0\u4e9b\u660e\u786e\u5b9a\u4e49\u7684\u6761\u4ef6\u4e0b\u4e0d\u6210\u7acb\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u975e\u5e38\u63a5\u8fd1\u4e8e\u73b0\u6709\u7684\u5e26\u6709\u9759\u6001\u5206\u6790\u7684\u6a21\u578b\u68c0\u67e5\u5668\u7684\u8868\u793a\u6cd5\u3002\u73b0\u5728\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5e26\u6709\u6708\u4efd\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u90a3\u4e48\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\u58f0\u660e\u6708\u4efd\u6570\uff0c\u90a3\u4e48\u6309\u6708\u6570\u8bbf\u95ee\u8be5\u6570\u7ec4\u5c06\u59cb\u7ec8\u5728\u9650\u5236\u4e4b\u5185\u3002\n\u66f4\u7b3c\u7edf\u5730\u8bf4\uff1a\u603b\u662f\u5c3d\u53ef\u80fd\u4e25\u683c\u5730\u786e\u5b9a\u60a8\u7684\u7c7b\u578b\u3002\u8fd9\u6761\u975e\u5e38\u7b80\u5355\u7684\u89c4\u5219\u662f\u5b9e\u73b0\u65e0\u9519\u8bef\u4ee3\u7801\u7684\u91cd\u8981\u89c4\u5219\u3002\n\u8ba9\u6211\u518d\u7ed9\u60a8\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1aNIM\u7684\u4f4e\u4f4d\u548c\u9ad8\u4f4d\u8868\u793a\u6cd5\uff0c\u5b83\u63d0\u4f9b\u6570\u7ec4(\u6216\u5e8f\u5217)\u7684\u6700\u4f4e\u548c\u6700\u9ad8\u6709\u6548\u7d22\u5f15\u3002\u5b83\u4e5f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e0d\u53d8\u91cf\uff0c\u5373loop_var.min&lt\uff1b=loop_var&lt\uff1b=loop_var.high\u3002\u5982\u679c\u6211\u60f3\u5728C\u8bed\u8a00\u4e2d\u83b7\u5f97\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u6211\u5fc5\u987b\u4e3aFRAMA-C\u8fd9\u6837\u7684\u9759\u6001\u9a8c\u8bc1\u5668\u7f16\u5199\u4e00\u7ec4\u6ce8\u91ca\u3002\u8fd9\u4e24\u4e2a\u793a\u4f8b\u90fd\u5904\u7406\u5728\u9519\u8bef\u5217\u8868\u4e2d\u6392\u5728\u524d\u9762\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u9519\u8bef\u4f1a\u5bfc\u81f4\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6f0f\u6d1e\u3002\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u51fd\u6570\uff0c\u5b83\u53ea\u8fd4\u56de\u66f4\u4f4e\u7684\u53c2\u6570\u503c(\u4e24\u4e2a\u53c2\u6570\u7684)\uff0c\u5373min\u51fd\u6570\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u4e0d\u662f\u5417\uff1f\u55ef\uff0c\u5b83\u53d6\u51b3\u4e8e\u4e00\u4e9b\u56e0\u7d20\uff0c\u7279\u522b\u662f\u53c2\u6570\u7c7b\u578b\u3002\n\u5982\u679c\u6211\u4eec\u50cf\u901a\u5e38\u90a3\u6837\u5c06\u5176\u58f0\u660e\u4e3afunc min(a\uff1aint\uff0cb\uff1aint)\uff1aint\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u80fd\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u5bfb\u5740\u7684\u67d0\u4e9b\u4f53\u7cfb\u7ed3\u6784\u4e0a\uff0c\u5047\u8bbea\u662f-128\uff0cb\u662f0\uff0cint\u662f8\u4f4d\uff0c\u7ed3\u679c\u4f1a\u662f\u4ec0\u4e48\uff1f\u53ef\u80fd\u662f-128\u3002\n\u6211\u4eec\u771f\u6b63\u60f3\u505a\u7684\u662f\u8bf4\u7ed3\u679c\u5b9e\u9645\u4e0a\u662f\u63d0\u4f9b\u7684\u4e24\u4e2a\u503c\u4e2d\u7684\u6700\u5c0f\u503c\uff1b\u4f46\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u5b57\u662f\u4e00\u4e2a\u6570\u5b66\u58f0\u660e\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6570\u5b66\u6027\u8d28\u7684\uff0c\u6211\u4eec\u771f\u6b63\u60f3\u8981\u5b9e\u73b0\u7684\u662f\u8fd9\u6837\u7684\uff1a\u201c\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6570\u5b57\uff0c\u5e76\u8fd4\u56de\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a-\u8fd9\u4e09\u4e2a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u90fd\u662f\u81ea\u7136\u6570\u96c6\u7684\u5143\u7d20\uff0c\u4f8b\u5982\u5728-128\u548c+127\u4e4b\u95f4\u201d\u3002\n\u51fd\u6570min(a\uff1aint\uff0cb\uff1aint)\uff1aint=Required((int_min&lt\uff1b=a&lt\uff1bint_Max)and(int_min&lt\uff1b=b&lt\uff1bint_Max))\u786e\u4fdd((int_min&lt\uff1b=result&lt\uff1bint_Max)and((result==a and result&lt\uff1bb)or(result==b and result&lt\uff1ba))\u3002\n\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u662f\u4e00\u4e2a\u50cf\u6837\u7684\u3001\u5408\u7406\u7684\u89c4\u8303--\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\u539f\u56e0\uff1a\n\u5b83\u8fc7\u4e8e\u4f9d\u8d56\u4e8e\u5177\u4f53\u73af\u5883(\u5982\u5b57\u5bbd)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u7a0b\u5e8f\u5458\u89c4\u8303\u201d(\u4e0e\u6570\u5b66\u89c4\u8303\u76f8\u53cd)\uff0c\u6362\u8a00\u4e4b\uff0c\u5b83\u53ea\u91cd\u590d\u58f0\u660e\uff0c\n\u58f0\u660e(\u4ee3\u7801)\u53ef\u80fd\u4e0d\u591f\u7cbe\u786e\uff0c\u5373\u2018uintX\u2019(\u4f8b\u5982\uff0c\u2018uint16\u2019)\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c\u5e76\u4e14\u4f1a\u9690\u5f0f\u5730\u4f7f\u89c4\u8303\u66f4\u77ed\uff0c\u5e76\u4e14\u3002\n\u89c4\u683c\u4e0d\u662f\u5f88\u6e05\u695a\u548c\u5b8c\u6574\uff0c\u5982\u679ca==b\u600e\u4e48\u529e\uff1f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u540e\u7f6e\u6761\u4ef6\u5c06\u4e0d\u6210\u7acb\u3002\n\u51fd\u6570min(a\uff1aint16\uff0cb\uff1aint16)\uff1aint16=\u786e\u4fdd((result==a and result&lt\uff1b=b)or(result==b and result&lt\uff1b=a))\u3002\n\u524d\u7f6e\u6761\u4ef6\u73b0\u5728\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u521b\u5efa(\u57fa\u4e8e\u7cbe\u786e\u7684\u53c2\u6570\u7c7b\u578b)\uff0c\u540e\u7f6e\u6761\u4ef6\u73b0\u5728\u4e5f\u66f4\u7b80\u5355\uff0c\u8fd8\u5305\u62eca==b\u7684\u60c5\u51b5\u3002\n\u201c\u4f46\u662f\u6211\u60f3\u8981\u4e00\u4e2a\u901a\u7528\u7684MIN\u51fd\u6570\uff01\u201d\u4f60\u8bf4\u5462\uff1f\u90a3\u5c31\u628a\u7b2c\u4e00\u4e2a\u7248\u672c\u653e\u5728\u4e0a\u9762\uff0c\u6539\u6b63\u540e\u7f6e\u6761\u4ef6\uff0c\u4f46\u8981\u4e09\u601d\u800c\u540e\u884c\uff0c\u770b\u770b\u8fd9\u662f\u5426\u771f\u7684\u662f\u4f60\u60f3\u8981\u7684\u3002\u7ecf\u9a8c\u6cd5\u5219\uff1a\u628a\u6240\u6709\u4e1c\u897f(\u6bd4\u5982\u7c7b\u578b)\u90fd\u9489\u5f97\u8d8a\u7d27\u8d8a\u597d\u3002\n\u7136\u800c\uff0c\u672c\u4f8b\u7684\u8981\u70b9\u6709\u6240\u4e0d\u540c\uff0c\u5373\u540e\u7f6e\u6761\u4ef6(\u901a\u5e38)\u5e94\u8be5\u505a\u51fa\u4e0e\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\u76f8\u5173\u7684\u8bed\u53e5\uff0c\u4e0e\u5b9e\u73b0\u7684\u7b97\u6cd5\u76f8\u5173\u3002\u6362\u53e5\u8bdd\u8bf4\uff1a\u89c2\u5bdf\u8005\u53ea\u9700\u67e5\u770b\u89c4\u8303(\u800c\u5ffd\u7565\u51fd\u6570\u4f53)\u5c31\u8db3\u4ee5\u77e5\u9053\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\u3002\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u6211\u5c06\u5f88\u5feb\u8f6c\u5411\u4e00\u4e2a\u6709\u65f6\u4f1a\u5728\u4e0eSA\u76f8\u5173\u7684\u8ba8\u8bba\u4e2d\u51fa\u73b0\u7684\u95ee\u9898\uff1a\u201c\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u91cf\u5316\u5668\uff0c\u7279\u522b\u662fEXISTS\u91cf\u5316\u5668\uff1f\u201d\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba9\u6211\u5feb\u901f\u4ecb\u7ecd\u53e6\u4e00\u4e2amin\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u9002\u7528\u4e8e\u5217\u8868\uff1a\n\u5f53\u6211\u4eec\u751a\u81f3\u4e0d\u77e5\u9053\u51fd\u6570\u5c06\u4f20\u9012\u591a\u5c11\u4e2a\u503c\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u6307\u5b9a\u540e\u7f6e\u6761\u4ef6(\u540c\u6837\uff1a\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u540e\u7f6e\u6761\u4ef6\u4e5f\u4f1a\u544a\u8bc9\u6211\u4eec\u51fd\u6570\u505a\u4ec0\u4e48)\uff1f\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u63d0\u4ea4\u53c2\u6570\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u5c0f\u4e8eResult\u7684\u5143\u7d20\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528All Quantor\u5e76\u5c06\u7d22\u5f15\u653e\u5165\u5217\u8868\u4e2d\uff0c\u4f46\u8fd9\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u5f88\u7cdf\u7cd5\u3002\u8fd9\u6837\u66f4\u5bb9\u6613\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u66f4\u6e05\u695a\u5730\u58f0\u660e\u7c7b\u4f3c\u4e8e\u786e\u4fdd(\u503c\u4e2d\u4e0d\u5b58\u5728x\uff1ax&lt\uff1bresult)\u4e4b\u7c7b\u7684\u5185\u5bb9(\u8bfb\u8d77\u6765\u5c31\u50cf\u201c\u5217\u8868\u503c\u4e2d\u6ca1\u6709\u5c0f\u4e8e\u7ed3\u679c\u7684\u5143\u7d20\u201d)\u3002\n\u90a3\u4e48\uff0c\u8fd9\u4e00\u5207\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5462\uff1f\u6709\u4e0d\u540c\u7684\u65b9\u5f0f\uff0c\u4f46\u81f3\u5c11\u73b0\u5728\u51e0\u4e4e\u6240\u6709\u7684\u9759\u6001\u5206\u6790\u5668\u90fd\u4f7f\u7528Hoare\u4e09\u5143\u7ec4(\u901a\u5e38\u4e5f\u79f0\u4e3a\u201c\u5951\u7ea6\u5f0f\u8bbe\u8ba1\u201d(Design by Contract\uff0cDBC))\u4f5c\u4e3a\u57fa\u672c\u6846\u67b6\u3002Hoare\u4e09\u5143\u7ec4\u6709\u4e09\u4e2a\u90e8\u5206(\u8fd9\u5e76\u4e0d\u5947\u602a)\uff0c\u5373\u524d\u7f6e\u6761\u4ef6\u3001\u540e\u7f6e\u6761\u4ef6\u548c\u53ef\u9009\u7684\u4e0d\u53d8\u91cf\u3002\n\u63cf\u8ff0\u5b83\u7684\u4e00\u4e2a\u5178\u578b\u4e14\u597d\u7684\u65b9\u6cd5\u662fDBC\u201c\u6559\u79d1\u4e66\u201d\u89e3\u91ca\uff1a\u524d\u7f6e\u6761\u4ef6\u662f\u8c03\u7528\u8005\u5fc5\u987b\u5c65\u884c\u7684\u627f\u8bfa\uff0c\u540e\u7f6e\u6761\u4ef6\u662f\u88ab\u8c03\u7528\u8005\u5fc5\u987b\u5c65\u884c\u7684\u627f\u8bfa\u3002\u6216\u8005\u8bf4\u5f97\u975e\u5e38\u7b80\u5355\uff1a\u5982\u679c\u51fd\u6570/\u8fc7\u7a0b\u662f\u5728\u72b6\u6001(\u901a\u5e38\u662f\u53c2\u6570)\u6ee1\u8db3\u524d\u7f6e\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u7684\uff0c\u90a3\u4e48\u4e00\u65e6\u5b8c\u6210(\u5728\u51fd\u6570\u9000\u51fa\u65f6)\uff0c\u5b83\u80af\u5b9a\u4f1a\u6ee1\u8db3\u540e\u7f6e\u6761\u4ef6\u3002\n\u5c0f\u4f46\u91cd\u8981\u7684\u9644\u6ce8\uff1a\u5927\u591a\u6570\u50cf\u6837\u7684\u9759\u6001\u5206\u6790\u5668\u4e0d\u4f1a\u5c06\u524d\u7f6e\u6761\u4ef6\u548c\u540e\u7f6e\u6761\u4ef6\u4e2d\u7684\u72b6\u6001\u89c4\u8303\u9650\u5236\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff0c\u800c\u662f\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u53ef\u8fbe\u72b6\u6001(\u4f8b\u5982\u5168\u5c40\u53d8\u91cf)\uff0c\u5c3d\u7ba1\u53c2\u6570\u548c\u8fd4\u56de\u503c\u662f\u7ecf\u5178\u548c\u6700\u5e38\u7528\u7684\u60c5\u51b5\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u524d\u7f6e\u6761\u4ef6(\u901a\u5e38\u5199\u6210\u201cRequired\u201d)\u7ecf\u5e38\u88ab\u8bef\u89e3\u548c/\u6216\u4ec5(Ab)\u7528\u4e8e\u7b80\u5355\u7684\u53c2\u6570\u68c0\u67e5\uff0c\u4f8b\u5982\u4e3a\u4e86\u907f\u514d\u7a7a\u6307\u9488\uff0c\u8fd9\u8fd8\u7b97\u53ef\u4ee5\uff0c\u4f46\u662f\u524d\u7f6e\u6761\u4ef6\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\n\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8bbe\u60f3\u4e00\u4e2a\u53ea\u5904\u7406\u5947\u6570\u53c2\u6570\u503c\u7684\u51fd\u6570\u3002\u7d20\u6570\u53ef\u80fd\u662f\u4e00\u4e2a\u7528\u4f8b(2\u9664\u5916)\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u53ea\u5904\u7406\u6f5c\u5728\u7d20\u6570\u7684\u51fd\u6570\uff0c\u53ef\u80fd\u662f\u7d20\u6570\u7b5b\u5b50\u4e2d\u7684\u63d0\u70bc\u9636\u6bb5\u3002\u5b9a\u4e49\u548c\u524d\u63d0\u6761\u4ef6\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u51fd\u6570\u67d0\u4e9bSieve(num\uff1auint64)\uff1abool=#\u7d20\u6570\u4e0d\u662f\u8d1f\u6570\uff0c\u53ef\u4ee5\u53d8\u5927WHERE\u524d\u63d0\u6761\u4ef6(lastDigit(Num)\u4e0d\u5728[&#39\uff1b0&#39\uff1b\uff0c&#39\uff1b5&#39\uff1b]\u4e2d)\u548c(num&gt\uff1b2)\u548c(num%2==1)#body\n\u518d\u6b21\u6ce8\u610f\uff0c\u8fd9\u662f\u5728\u544a\u8bc9\u51fd\u6570\u672c\u8eab\u3001\u9759\u6001\u9a8c\u8bc1\u5668\u548c\u4efb\u4f55\u8c03\u7528\u8005\uff0c\u5373num\u53c2\u6570\u4e0d\u80fd\u4ee50\u62165\u7ed3\u5c3e(\u8d28\u6570\u4e0d\u80fd\u4ee50\u62165\u7ed3\u5c3e)\uff0c\u5927\u4e8e2(\u6211\u4eec\u4e0d\u5173\u5fc31\u548c2)\uff0c\u662f\u5947\u6570(\u5076\u6570&gt\uff1b2\u4e0d\u80fd\u662f\u7d20\u6570)\uff0c\u5e76\u4e14is&lt\uff1b=MAX_UINT64(\u901a\u8fc7\u7c7b\u578b\u9690\u5f0f)\u3002\n\u60a8\u6ce8\u610f\u5230\u6211\u4f7f\u7528lastDigit\u7684\u5c0f\u628a\u620f\u4e86\u5417\uff1f\u5b9e\u9645\u4e0a\uff0c\u5b83\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u628a\u620f\uff0c\u800c\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u5de5\u5177\uff1alastDigit\u88ab\u79f0\u4e3a\u201c\u5e7b\u5f71\u51fd\u6570\u201d\uff0c\u5b83\u662f\u4e00\u4e2a\u4ec5\u5728\u5206\u6790/\u9a8c\u8bc1\u65f6(\u4f46\u901a\u5e38\u4e0d\u662f\u5728\u8fd0\u884c\u65f6)\u5b58\u5728\u7684\u51fd\u6570\uff0c\u4f46\u5728\u5176\u4ed6\u65b9\u9762\u7684\u884c\u4e3a(\u51e0\u4e4e)\u5c31\u50cf\u4efb\u4f55\u51fd\u6570\u4e00\u6837\u3002\u5b8c\u6574\u7684\u4e8b\u5b9e\u662f\uff0c\u5e7b\u5f71\u51fd\u6570(\u5728\u51e0\u4e4e\u6240\u6709\u63d0\u4f9b\u5b83\u4eec\u7684\u5206\u6790\u5668\u4e2d)\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6570\u5b66(\u62bd\u8c61)\u51fd\u6570\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u5f15\u7406\u201d\u3002\u6709\u8da3\u7684\u662f\uff0c\u5e7b\u5f71\u51fd\u6570\u6709\u4e24\u4e2a\u7528\u9014\uff1a\n\u505a\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u5373\u53ef\u91cd\u7528(\u67d0\u4e9b\u6761\u4ef6\u5143\u7d20\u5728\u4ee3\u7801\u8bed\u6599\u5e93\u4e2d\u51fa\u73b0\u591a\u6b21\uff0c\u56e0\u6b64\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u5b83\u4eec\u653e\u5165\u865a\u5e7b\u51fd\u6570\u4e2d)\uff1b\u53e6\u5916\uff0c\u5b83\u4eec\u5728\u7f16\u8bd1\u65f6\u6d88\u5931\u3002\n\u540e\u7f6e\u6761\u4ef6(\u901a\u5e38\u5199\u4e3a\u201c\u786e\u4fdd\u201d)\u505a\u7684\u4e8b\u60c5\u4e0e\u6b64\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u5728\u51fd\u6570\u9000\u51fa\u65f6\uff0c\u5b83\u4eec\u6307\u5b9a\u4e86\u51fd\u6570\u4fdd\u8bc1\u4fdd\u6301\u7684\u4e0e\u72b6\u6001\u76f8\u5173\u7684\u6761\u4ef6\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u58f0\u660e\u7ed9\u5b9a\u51fd\u6570\u4ece\u4e0d\u8fd4\u56de\u8d1f\u503c\u6216\u5927\u4e8e42\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\u3002\n\u540c\u6837\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u6570\u5b66\u9648\u8ff0\uff0c\u5c3d\u7ba1(\u901a\u5e38)\u662f\u4e0e\u4ee3\u7801\u53d8\u91cf\u76f8\u5173\u7684\u3002\u5c3d\u7ba1\u5e94\u8be5\u6ce8\u610f\uff0c\u4e00\u4e2a\u50cf\u6837\u7684\u9759\u6001\u5206\u6790\u5668\u4e5f\u4f1a\u5229\u7528\u4ee3\u7801\u5143\u7d20\uff0c\u4f8b\u5982\u53d8\u91cf\u58f0\u660e\uff0c\u5e76\u5c06\u5b83\u4eec\u5305\u62ec\u5728\u5176\u5de5\u4f5c\u4e2d\u3002\n\u8ba9\u6211\u4eec\u5feb\u901f\u56de\u5230\u4e0d\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u63a7\u5236\u673a\u5236\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002\u9759\u6001\u5206\u6790\u4e2d\u7279\u522b\u6709\u8da3\u7684\u4e00\u70b9\u662f\u786e\u4fdd\u5faa\u73af\u6b63\u786e\u7ec8\u6b62\u3002\n\u5728\u5faa\u73af\u63a7\u5236\u5143\u7d20(\u4f8b\u5982\uff0cfor(i=0\uff1bi&lt\uff1b42\uff1bi++)\u4e2d\u7684\u53d8\u91cfi)\u662f\u53ea\u8bfb\u7684\u8bed\u8a00\u4e2d\uff0c\u95ee\u9898\u4e0d\u90a3\u4e48\u4e25\u91cd\uff0c\u4f46\u662f\u5728\u50cfC\u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u5faa\u73af\u63a7\u5236\u5143\u7d20\u53ef\u4ee5\u88ab\u5206\u914d\u5e76\u4e14\u53ef\u80fd\u76f8\u5f53\u591a\u5730\u201c\u8df3\u6765\u8df3\u53bb\u201d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u6709\u95ee\u9898\u3002\n\u8f93\u5165\u5faa\u73af\u4e0d\u53d8\u91cf(\u5176\u8303\u56f4\u901a\u5e38\u9650\u4e8e\u5faa\u73af)\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u6240\u8c13\u7684\u201c\u51cf\u91cf\u5668\u201d(\u7f16\u8005\u6ce8\uff1a\u4e0d\u8981\u4e0e\u6444\u9b42\u602a\uff1a\u6df7\u6dc6)\uff0c\u8fd9\u662f\u4e00\u79cd\u5faa\u73af\u4e0d\u53d8\u91cf\uff0c\u4ece\u67d0\u4e2a\u503c(\u4f8b\u5982\uff0c\u63a7\u5236\u5143\u7d20\u7684\u6700\u5927\u503c)\u5f00\u59cb\uff0c\u5728\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u540e\u5012\u8ba1\u65f6\u4e00\u4e2a\u3002\u7136\u540e\uff0c\u5206\u6790\u5668\u8bd5\u56fe\u8bc1\u660e\u51cf\u91cf\u5668\u6700\u7ec8\u8fbe\u5230\u96f6\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u5206\u6790\u5668\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\u770b\u3002IF(42)\u5b50\u53e5\u4e2di\u662f1\u8fd8\u662f41\u5bf9\u5206\u6790\u5668\u6765\u8bf4\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u5b83\u770b\u5230\u7684\u662f(\u5047\u8bbe\u6211\u662fuint16)i\u7684\u57df\u662f0=i&lt\uff1b65536\u3002\u5982\u679c(i&lt\uff1b42)\u5b50\u53e5\u4e2d\u7684i\u662f1\u8fd8\u662f41\u5bf9\u5206\u6790\u5668\u6765\u8bf4\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u5b83\u770b\u5230\u7684\u662f(\u5047\u8bbe\u6211\u662fuint16)i\u7684\u57df\u662f0&lt\uff1b=i&lt\uff1b65536\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5728IF(i&lt\uff1b42)\u5b50\u53e5\u4e2d\uff0ci\u662f1\u8fd8\u662f41\u5bf9\u5206\u6790\u5668\u6765\u8bf4\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u5b83\u770b\u5230\u7684\u662f(\u5047\u8bbe\u6211\u662fuint16)i\u7684\u57df\u662f0&lt\uff1b=i&lt\uff1b65536\u3002=i&lt\uff1b42\u548c42&lt\uff1b=i&lt\uff1b65536\uff0c\u8868\u793a\u901a\u5f80IF\u548cELSE\u90e8\u5206\u7684\u5165\u53e3\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u4f8b\u5982\u4e3a\u4ec0\u4e48\u6709\u4e9b\u5206\u6790\u5668(\u5982Spark)\u7279\u522b\u6709\u7528\uff1a\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u4e0e\u201c\u5bbf\u4e3b\u8bed\u8a00\u201d(Ada)\u7d27\u5bc6\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u53ef\u4ee5\u7406\u89e3\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u5927\u91cf\u4fe1\u606f(\u53cd\u4e4b\u4ea6\u7136)\u3002\u57fa\u4e8eLLVM\u7684\u5206\u6790\u5668\u53ef\u4ee5\u53d1\u73b0\u4e00\u79cd\u66f4\u6e29\u548c\u3001\u66f4\u6709\u9650\u4f46\u6709\u70b9\u7c7b\u4f3c\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5927\u91cf\u4fe1\u606f\uff0c\u5c3d\u7ba1\u662f\u5728\u4e2d\u95f4\u4ee3\u7801\u7ea7\u522b\u3002\n\u53ef\u80fd\u66f4\u91cd\u8981\u7684\u662f\uff0cNIM\u5206\u6790\u4e0d\u5fc5\u57fa\u4e8e\u67d0\u4e9b\u4e2d\u95f4\u8868\u793a(\u56e0\u6b64\u53d7\u9650\u4e8e\u4f8b\u5982LLVM)\uff0c\u4f46\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7c7b\u4f3c\u4e8eSPARK\u7684\u89e3\u51b3\u65b9\u6848\u3002\u9759\u6001\u5206\u6790\u4e5f\u5c06\u6781\u5927\u5730\u5e2e\u52a9NIM\u7684\u53d1\u5c55\uff0c\u56e0\u4e3a\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u4e00\u6761\u4ec5\u5145\u5206\u5730\u6307\u5b9a\u548c\u6210\u529f\u9a8c\u8bc1\u5b83\u7684\u89c4\u5219\u3002NIM\u5206\u6790\u4e5f\u5c06\u6781\u5927\u5730\u5e2e\u52a9NIM\u7684\u5f00\u53d1\uff0c\u56e0\u4e3a\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u4e00\u6761\u4ec5\u5145\u5206\u5730\u6307\u5b9a\u548c\u6210\u529f\u9a8c\u8bc1\u5b83\u7684\u89c4\u5219\u3002NIM\u5206\u6790\u53ef\u80fd\u4e0d\u662f\u57fa\u4e8e\u67d0\u79cd\u4e2d\u95f4\u8868\u793a(\u56e0\u6b64\u50cfLLVM\u90a3\u6837\u53d7\u9650)\uff0c\u800c\u662f\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7c7b\u4f3c\u4e8eSPARK\u7684\u89e3\u51b3\u65b9\u6848\u3002\u9759\u6001\u5206\u6790\u4e5f\u5c06\u6781\u5927\u5730\u5e2e\u52a9NIM\u7684\u53d1\u5c55\uff0c\u56e0\u4e3a\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u5b83\u6210\u4e3a\u4e00\u6761\u4ec5\u5145\u5206\u5730\u6307\u5b9a\u548c\u6210\u529f\u9a8c\u8bc1\u5b83\u7684\u89c4\u5219\u3002\n\u6c42\u89e3\u4e0d\u518d\u662f\u9759\u6001\u5206\u6790\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4ec0\u4e48\u662f\u9759\u6001\u5206\u6790\u5668\u5462\uff1f\u5b83\u662f\u4ee3\u7801\u548c\u6570\u5b66/\u6c42\u89e3\u4e4b\u95f4\u7684\u201c\u6865\u6881\u201d\uff1b\u5b83\u6536\u96c6\u4ee3\u7801\u4e2d\u5305\u542b\u7684\u6240\u6709\u96f6\u788e\u4fe1\u606f\uff0c\u4ee5\u53ca\u7531\u201c\u6ce8\u91ca\u201d\u4ee3\u7801\u7684\u4eba\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u5e76\u4ee5\u6709\u610f\u4e49\u548c\u76f8\u5173\u7684\u65b9\u5f0f\u5c06\u5176\u63d0\u4f9b\u7ed9\u6c42\u89e3\u5668\u3002\n\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff1f\u55ef\uff0c\u662f\u7684\uff0c\u5728\u7406\u8bba\u4e0a\u662f\u7684\uff0c\u4f46\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u4f3c\u4e4e\u662f\u4e00\u9879\u590d\u6742\u800c\u8270\u96be\u7684\u5de5\u4f5c\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u53ea\u6709\u6781\u5c11\u6570\u7684\u8bed\u8a00\u63d0\u4f9b\u4e86\u4e00\u4e9bSA\u529f\u80fd\uff0c\u800c\u4e14SA\u4e3b\u8981\u53ea\u5728\u76f8\u5f53\u5c11\u7684\u51e0\u4e2a\u975e\u5e38\u654f\u611f\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u6709\u529b\u5730\u8868\u660e\u4e86SA\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002\u53e6\u4e00\u4e2a\u4f3c\u4e4e\u4e5f\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u89c2\u70b9\u7684\u4e8b\u5b9e\u662f\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709\u5341\u51e0\u5230\u4e24\u4e2a\u5b9e\u9645\u53ef\u7528\u7684\u548c\u4f7f\u7528\u7684\u9759\u6001\u5206\u6790\u5668\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458(\u5305\u62ec\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5f00\u53d1\u4eba\u5458)\u6765\u8bf4\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u4e00\u5b9a\u7684\u9650\u5236\u6216\u8fc7\u4e8e\u590d\u6742\u3002\n\u9759\u6001\u5206\u6790--\u6211\u6307\u7684\u662f\u4e0e\u5176\u201c\u5bbf\u4e3b\u8bed\u8a00\u201d\u7d27\u5bc6\u8026\u5408\u7684SA--\u63d0\u4f9b\u4e24\u5927\u529f\u80fd\uff0c\u5373\uff1a\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u552f\u4e00\u5df2\u77e5\u7684\u901a\u8fc7\u8bc1\u660e\u4ee3\u7801\u662f\u65e0\u9519\u8bef\u7684\u6765\u5b9e\u73b0\u5bf9\u4ee3\u7801\u7684\u5408\u7406\u4fe1\u4efb\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\n\u5bf9\u4e8e\u666e\u901a\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u5b9e\u9645\u53ef\u7528\u7684\u3001\u751a\u81f3\u76f8\u5f53\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u79cd\u4fe1\u5fc3\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u9759\u6001\u5206\u6790\u5668\u4e0d\u80fd\u521b\u9020\u5947\u8ff9\uff1b\u5b83\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ea\u80fd\u8bc1\u660e\u60a8\u63d0\u4f9b\u7ed9\u5b83\u7684\u4e1c\u897f\u662f\u6b63\u786e\u7684\u3002\u5982\u679c\u60a8\u4e0d\u63d0\u4f9b\u8981\u9a8c\u8bc1\u7684\u8bed\u53e5/\u6761\u4ef6\uff0c\u60a8\u5c06\u4e0d\u4f1a\u4ece\u4e2d\u83b7\u5f97\u592a\u591a\u4fe1\u606f\u3002\n\u4f60\u53ef\u80fd\u542c\u8bf4\u8fc7\u5b8c\u5168\u7ecf\u8fc7\u9a8c\u8bc1\u7684seL4\u5185\u6838\u3002\u55ef\uff0c\u4ed6\u4eec\u786e\u5b9e\u91c7\u53d6\u4e86\u8270\u96be\u7684\u8def\u7ebf(\u5f53\u65f6\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u8fd9\u6837\u505a)\uff0c\u4ed6\u4eec\u82b1\u4e86\u5927\u7ea6\u5341\u5e74\u7684\u65f6\u95f4\u624d\u5b8c\u6210\u4e86\u975e\u5e38\u719f\u7ec3\u7684\u4e13\u5bb6\u7684\u5de5\u4f5c\u3002\u4e0eAda/Spark\u76f8\u6bd4\uff0c(\u4ece\u51e0\u5e74\u524d)\u53ef\u80fd\u8fd8\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u4f8b\u5b50\uff0c\u5b83(\u5b9e\u9645\u4e0a\u662f\u76f8\u5f53\u7d27\u5bc6\u8026\u5408\u7684)\u9759\u6001\u5206\u6790\u5668\u3002\u6211\u4ecd\u7136\u8bb0\u5f97\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u5b83\u7684\u7ecf\u5386\u3002\u51e0\u4e4e\u662f\u68a6\u60f3\u6210\u771f\uff0c\u4e0d\u4ec5\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6ca1\u6709\u535a\u58eb\u5b66\u4f4d\u5c31\u53ef\u4ee5\u5b9e\u9645\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u56e0\u4e3a\u5b83\u7684\u6548\u7387\u5f88\u9ad8\u3002\u6211\u4ecd\u7136\u8bb0\u5f97\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u5b83\u7684\u7ecf\u5386\u3002\u5b83\u51e0\u4e4e\u5b9e\u73b0\u4e86\u4e00\u4e2a\u68a6\u60f3\uff0c\u4e0d\u4ec5\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u4eba\u4e0d\u9700\u8981\u535a\u58eb\u5b66\u4f4d\u5c31\u53ef\u4ee5\u5b9e\u9645\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u8fd8\u56e0\u4e3a\u5b83\u7684\u6548\u7387\u3002\u6211\u4eec\u901a\u5e38\u4e0d\u80fd\u5728\u201c\u6ce8\u91ca\u201d\u4e0a\u6295\u5165\u6bd4\u5728\u7f16\u5199\u4ee3\u7801\u4e0a\u591a\u5f97\u591a\u7684\u65f6\u95f4\u3002\n\u5982\u679c\u60a8\u5e94\u8be5\u4ece\u672c\u6587\u4e2d\u5e26\u8d70\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\uff1a\u7528\u5b83\u7684\u8b66\u544a\u8ba9\u60a8\u611f\u5230\u4e0d\u5b89\u7684\u7f16\u8bd1\u5668\u662f\u60a8\u7684\u670b\u53cb\u3002SA\u662f\u5b83\u7684\u67d0\u79cd\u6269\u5c55\u7248\u672c\u3002SA\u662f\u60a8\u7684\u670b\u53cb\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u670b\u53cb\uff01\u505a\u51fa\u60a8\u7684\u9009\u62e9\uff1a\u60a8\u53ef\u4ee5\u8ba9\u9759\u6001\u5206\u6790\u5668\u5411\u60a8\u6307\u51fa\u95ee\u9898\u6240\u5728\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u7684\u5ba2\u6237\u6307\u51fa\u5b83\u4eec(\u5e76\u5492\u9a82\u60a8)\u3002\n\u60a8\u5e94\u8be5\u6ce8\u610f\u7684\u53e6\u4e00\u70b9\u662f\uff0cSA\u662f(\u57fa\u4e8e)\u60a8\u6b63\u5728\u7f16\u7801\u7684\u53e6\u4e00\u79cd\u89c4\u8303\u3002\u5b83\u4e0d\u662f\u7f3a\u70b9\uff0c\u800c\u662f\u4e00\u4e2a\u4f18\u70b9\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5b8c\u5168\u50cf\u60a8\u7684\u4ee3\u7801/\u60a8\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u5141\u8bb8\u60a8\u7528\u6709\u70b9\u7c7b\u4f3c\u7684\u7b26\u53f7\u6765\u8868\u793a\u60a8\u7684\u7b97\u6cd5\uff0c\u4f46\u9700\u8981\u68c0\u67e5\u7b97\u6cd5\u548c\u7a0b\u5e8f\u5b9e\u73b0\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5efa\u8bae\u66f4\u8fdb\u4e00\u6b65\uff0c\u5c06\u89c4\u8303\u89c6\u4e3a\u91cd\u8981\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u7f16\u7801\u89c6\u4e3a\u4e00\u4e9b\u201c\u6b21\u8981\u5de5\u4f5c\u201d\u3002\u7f16\u7a0b\u201c\u53ea\u662f\u201d\u5b9e\u73b0\u201c\u5982\u4f55\uff1f\u201d\u7684\u4e00\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u9ad8\u5ea6\u654f\u611f\u7684\u73af\u5883\u4e2d\uff0c\u9996\u5148\u9002\u5f53\u5730(\u6b63\u5f0f\u5730)\u6307\u5b9a\u8981\u505a\u4ec0\u4e48\u3001\u5fc5\u987b\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u4ee5\u53ca\u67d0\u4e2a\u6a21\u5757\u6216\u8fc7\u7a0b\u524d\u540e\u7684\u72b6\u6001\u662f\u4ec0\u4e48\uff0c\u800c\u5b9e\u9645\u5b9e\u73b0\u6a21\u5757\u548c/\u6216\u8fc7\u7a0b\u53ea\u662f\u5012\u6570\u7b2c\u4e8c\u6b65(\u6700\u540e\u4e00\u6b65\u662f\u9a8c\u8bc1\u548c\u6d4b\u8bd5)\uff0c\u800c\u5b9e\u9645\u5b9e\u73b0\u6a21\u5757\u548c/\u6216\u8fc7\u7a0b\u53ea\u662f\u5012\u6570\u7b2c\u4e8c\u6b65(\u6700\u540e\u4e00\u6b65\u662f\u9a8c\u8bc1\u548c\u6d4b\u8bd5)\uff0c\u800c\u5b9e\u9645\u5b9e\u73b0\u6a21\u5757\u548c/\u6216\u8fc7\u7a0b\u53ea\u662f\u5012\u6570\u7b2c\u4e8c\u6b65(\u6700\u540e\u4e00\u6b65\u662f\u9a8c\u8bc1\u548c\u6d4b\u8bd5)\u3002\n\u8fd8\u8981\u6ce8\u610f\u8fd9\u6837\u505a\u7684\u4e00\u4e2a\u7279\u522b\u6709\u7528\u548c\u7f8e\u4e3d\u7684\u526f\u4f5c\u7528\uff1a\u5982\u679c\u67d0\u4e2a\u8fc7\u7a0b\u6216\u6a21\u5757\u9700\u8981\u66f4\u6539\uff0c\u6bd4\u5982\u7531\u4e8e\u67d0\u4e9b\u7ba1\u7406\u66f4\u6539\uff0c\u53ea\u8981\u89c4\u8303(\u201c\u6ce8\u91ca\u201d)\u8db3\u591f\u5b8c\u6574\u548c\u4e25\u5bc6\uff0c\u5219\u8be5\u66f4\u6539\u4e0d\u4f1a\u5bf9\u6574\u4e2a\u7cfb\u7edf\u9020\u6210\u635f\u5bb3\u3002\n\u6211\u5e0c\u671b\u5c06\u6765\u7684\u67d0\u4e2aNIM\u7248\u672cX(\u5177\u6709\u4e0d\u5b8c\u6574\u4f46\u5408\u7406\u7684SA\u7ea7\u522b)\u5c06\u662f\u4e00\u4e2a\u53ef\u4e0eAda/Spark\u76f8\u5ab2\u7f8e\u7684\u98de\u8dc3\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u91cd\u5927\u7684\u98de\u8dc3\uff0c\u56e0\u4e3aNIM\u662f\u4e00\u79cd\u6bd4Ad.\u66f4\u5e38\u7528(\u6216\u5f88\u5feb\u5c06\u4f1a)\u4e14\u66f4\u5bb9\u6613\u4f7f\u7528\u7684\u8bed\u8a00.\u4e00\u65e6\u6709\u4e00\u4e2a\u5e26a-d\uff1aVerify\u5f00\u5173\u7684NIM\u7248\u672c\u53ef\u7528\uff0c\u6211\u4f1a\u9ad8\u5174\u5f97\u8df3\u8d77\u821e\u6765.", "note_en": "What is static analysis (SA)?Well, static means \u2018not dynamic\u2019, i.e. not at or via runtime.Static analysis is something that is done at or near compile time in the context of software development.But static analysis is just one part of the formal chain, which is usually not fully used except for critical systems, such as train control systems.\n The full formal chain starts with formal specification, an important pre-requisite of which is formal requirement assessment.This part deals with the question \u201c what is some software to do?\u201d.\n The next step is formal design and modelling which deals with the question of  how the software is doing it; usually this first describes \u2013 in a formal way \u2013 data and algorithms, then verifies the model and finally is (usually) used as a skeleton and To Do for the code.This work\u2019s goal is roughly comparable to what SPARK is to Ada, i.e. it is what allows Nim programs to be formally verified for correctness.\n   To answer that question we must first understand the context and see the full picture by widening our view and seeing what \u2018software development\u2019 means.Software development can be described as a somewhat strange process that is about translating from \u2013 and understanding! \u2013 one language, namely that of a client, who thinks in  their language and within  their world, which may be astrophysics, sales, or manufacturing.And they often don\u2019t mention what they consider as well-known.That\u2019s the \u2018incoming\u2019 side.\n On the other side, the \u2018outgoing\u2019 one, there is hardware which, as every developer with some experience knows, has its own treacherous spots.There is a complex third part too, because usually the software we build does not run directly on hardware but on usually multiple intermediate layers such as the OS and libraries.\n When some project is critical we definitely want a formal specification, also including pragmatic factors that are not relevant for the desired functionality itself but which are valuable or even critical for us to know.One obvious example is a list of operating systems and architectures on which the code will have to run.Another less obvious example is the question how closely the code will be observed (e.g. log files) and what failure responses are acceptable.\n But again and keep that in mind: The statement that  our code is proven to be correct is the  maximal statement we can make, and frankly one that is very hard to achieve and very rare, because we only control 1 of many layers yet need to interact with them or depend on them.\n  Static (program) analysis is the formal chain element we as software developers are most concerned about.\n The common \u201cdefinition\u201d, let me quote Wikipedia,  \u201cStatic program analysis is the analysis of computer software that is performed without actually executing programs \u2026\u201d is correct but at the same time utterly insufficient and next to useless.\n Why?Because we must differentiate between a compiler writer and a developer or, in other words, between the question \u201cis the code per se correct?\u201d and \u201cis the code logically correct?\u201d.From a compilers perspective the following code:\n var  foo :  uint32  =  0  # init var var  myArray  :  array [ 0  ..  511 ,  uint32 ]  # our array # ... foo  =  myArray [ 100 ]  # assign some element to foo\n is correct.The types match and the index is within bounds.That is what a compiler cares about.\n Does it make sense to assign  myArray[100] to  foo is  not a question a compiler is concerned about.You, however, should be concerned about it.Why?Because you want and need your code to do  something sensible and what it needs to do, or in other words, you want your code to implement some algorithm.\n What one  does need static analysis for is basically to check algorithmic correctness - but if one implements that, one may as well make use of that capability to offload quite a bit of compiler work to static analysis.\n Let me give you an example: ranges.What is a range really?It is basically the same as writing  var month : uint8 invar 0 &lt; month &lt;= 12, i.e. a variable declaration with an invariant.\n An invariant is a condition that must hold true during the life-time of the item (e.g. a variable) it is related to.Most languages and SA tools allow that an invariant can not hold under some clearly defined conditions.\n In fact, the example above is very close to the notation of an existing model checker with static analysis.Now, if one has say a string array with the month names, accessing that array by a month number will always be within bounds if the month number is declared as above.\n Putting it more generally: Always nail down your types as tightly as possible.That very simple rule is an important rule to achieve error free code.\n Let me give you another example: Nim\u2019s  low and  high notation which provides an array\u2019s (or sequence\u2019s) lowest and highest valid index.It too can be seen as an invariant, namely as  loop_var.min &lt;= loop_var &lt;= loop_var.high.If I wanted to get the same in C I would have to write a bunch of annotations for a static verifier like Frama-C.Both of those examples deal with problems that are high up on the list of errors creating real-world vulnerabilities.\n  Let us look at a dead simple function that simply returns the argument value (of two args) that is lower, i.e. a  min function.A no-brainer, right?Well, it depends on some factors, especially on the argument type.\n If we declare it as  func min(a: int, b: int) : int as it\u2019s often done, then we may run into problems.Say for example  a is -128,  b is 0, and  int is 8 bits on some of the architectures we address.What will the result be?Presumably  -128.\n What we really want to do is to say that the result really is the minimum of the two values provided; but the minimum of two numbers is a  mathematical statement.Our goal is of a  mathematical nature and what we really mean to achieve is something like:\u201cThis function takes two numbers and returns the one with the lower value \u2013  and all three, the two parameters and the return value, are elements of the set of natural numbers, e.g. between -128 and +127\u201d.\n  func  min ( a :  int ,  b :  int ):  int  =  require (( INT_MIN  &lt;=  a  &lt;  INT_MAX )  and  ( INT_MIN  &lt;=  b  &lt;  INT_MAX ))  ensure (( INT_MIN  &lt;=  result  &lt;  INT_MAX )  and  (( result  ==  a  and  result  &lt;  b )  or  ( result  ==  b  and  result  &lt;  a )))\n This might look like a decent and sensible specification \u2013 but it isn\u2019t, mainly for three reasons:\n it\u2019s too dependent on concrete circumstances (like word width), i.e. it\u2019s what sometimes is called a \u201cprogrammers spec\u201d (as opposed to a mathematical spec) and only repeats the declaration in other words,\n  the declaration (code) is probably not precise enough, i.e. \u2018uintX\u2019 (e.g. \u2018uint16\u2019) probably would be better and would implicitly make the spec shorter, and\n  the spec isn\u2019t clear and complete; what if  a == b? In that case the postcondition won\u2019t hold.\n  func  min ( a :  int16 ,  b :  int16 ):  int16  =  ensure (( result  ==  a  and  result  &lt;=  b )  or  ( result  ==  b  and  result  &lt;=  a ))\n The precondition is now automatically created by the compiler (based on the precise parameter type) and the, now also simpler, postcondition also covers the case where  a == b.\n \u201cBut I  want a general and generic  min function!\u201d you say?Well, then keep the first version above and just correct the postcondition, but think twice whether this really is what you want.Rule of thumb: Nail everything (e.g. types) down as tightly as possible.\n The main point of this example was however something different, namely that a postcondition (usually) should make statements related to what the function  does, related to the algorithm implemented.In other words: It should be sufficient for an observer to look  only at the specification (and ignore the function body) in order to know what a function does.\n Being at that I\u2019ll quickly deviate to an issue that sometimes comes up in SA related discussions: \u201cwhy would we need quantors, especially the  exists quantor?\u201d.To answer that let me quickly introduce another  min function, one that works on a list:\n  How are we to specify a postcondition (again: ideally one that also tells us what the function does) when we do not even know how many values the function will get passed?Solution: We submit that there exists no element in the parameter list that is smaller than  result.\n We could also use the  all quantor and play with the indices into the list but that would quickly get ugly.It\u2019s easier and, more importantly, more clear to state something like  ensures(not exists x in values: x &lt; result) (read like \u201cthere is no element in the list  values that is smaller than  result\u201d).\n  So, how does all that work?There are different ways but at least nowadays pretty much all static analysers use Hoare triples, often also called \u201cDesign by Contract\u201d (DbC), as a basic framework.Hoare triples have 3 parts (no surprise there), namely a  precondition, a  postcondition, and optionally  invariants.\n They are useful to make statements about functions/procedures.One typical and good way to describe it is a DbC \u201cschoolbook\u201d explanation:A precondition is a promise the caller must fulfill, and a postcondition is a promise the callee must fulfill.Or to put it very simply: if a function/procedure is called with a state (usually the parameters) meeting the preconditions then it  will definitely meet its postconditions once it\u2019s done (at function exit).\n Small but important side note: most decent static analysers do not limit the state specifications in pre and postconditions to parameters and return values but can deal with  any reachable state (e.g. global variables), although parameters and return values are the classical and most used case.\n Unfortunately preconditions (often written as \u201crequire\u201d) are often misunderstood and/or only (ab)used for simple parameter checking, e.g. to avoid null pointers.And that\u2019s halfway OK but preconditions can do much more.\n For a simple example think of a function that is meant to only deal with an odd parameter value.Prime numbers might be a use case (except for  2).Imagine that we wanted a function that only works on potential prime numbers, maybe a refining stage in a prime sieve.The definition and preconditions might look like this:\n func  someSieve ( num :  uint64 ):  bool  =  # primes aren&#39;t negative and can get big  where  precondition ( lastDigit ( num )  not  in [ &#39;0&#39; , &#39;5&#39; ] )  and  ( num  &gt;  2 )  and  ( num  %  2  ==  1 ))  # body\n Again, note that this is telling the function itself, the static verifier, and any caller something, namely that the  num parameter must not end in 0 or in 5 (prime numbers don\u2019t end in 0 or 5), is greater than 2 (we don\u2019t care about 1 and 2), is odd (an even number &gt; 2 can\u2019t be prime), and is  &lt;= MAX_UINT64 (implicit via the type).\n You noted my little trick with  lastDigit?Well, actually it\u2019s not really a trick but a handy device:  lastDigit is called a \u201cghost function\u201d, which is a function that only exists at analysis/verification time (but normally not at run-time) but otherwise acts (almost) just like any function.The full truth is that a ghost function (in almost any analyser offering them) is a purely mathematical (abstract) function, sometimes called \u201clemma\u201d.The interesting point for you is that a ghost function is useful for two things:\n to do what functions do, i.e. to be reusable (certain condition elements occur multiple times in a code corpus so it can be handy to put them into a ghost function); plus they vanish when compiling.\n Postconditions (often written as \u201censure\u201d) do quite the same thing but at function exit.They specify state related conditions that the function guarantees to hold.\n For example, if we stated that a given function never returns a negative value or a value greater than 42 we could express that like this\n  Again, keep in mind that we make a  mathematical statement albeit one that (usually) is related to  code variables.Although it should be noted that a decent static analyser also makes use of code elements, e.g. variable declarations, and includes them in its working.\n Let\u2019s quickly return to invariants because they play a major role with control mechanisms.One particularly interesting point in static analysis is to make sure that loops properly terminate.\n In languages where the loop control element, e.g. the variable  i in  for(i = 0; i &lt; 42; i++), is read-only the problem is less critical, but in languages like C where the loop control element can be assigned to and might \u201cjump around\u201d quite a bit it can become really problematic.\n Enter loop invariants (whose scope is typically limited to the loop).One example is a so called \u2018decrementor\u2019 (editor note: not to be confused with  Dementor :)), a type of loop invariant which starts with some value (e.g. the max value of the control element) and counts down one after each loop iteration.The analyser then tries to prove that the decrementor eventually reaches zero.\n If conditions on the other hand are rather simple.All the analyser must do is to look at the control element domain (its \u201crange\u201d) and for the two possible cases and the \u201cpivot\u201d point.Remember, the analyser looks from a mathematical perspective.Whether  i is  1 or  41 in an  if(i &lt; 42) clause makes little difference to an analyser.What it sees is (assuming  i being an  uint16) that the domain of  i is  0 &lt;= i &lt; 65536 and that 42 is within the domain and the \u201cpivot\u201d which means that the domain is split into two, namely  0 &lt;= i &lt; 42 and  42 &lt;= i &lt; 65536 which represent the entry gate to the  if and the  else part.\n Now we are at a point where we can understand some more things, for example why some analysers (like Spark) are particularly helpful: it\u2019s because they are intimately interwoven with the \u201chost language\u201d (Ada) and hence understand a lot of the information the compiler has available (and vice versa).A more modest and limited but somewhat similar situation can be found with LLVM based analysers because they too have access to a lot of information albeit on the intermediate code level.\n Nim too is in an excellent position to \u201cget married\u201d with static analysis due to the fact that it already has quite a few of \u201chidden invariants\u201d, e.g. ranges and quite some other helpful factors and generally a quite clean basic syntax.Probably even more importantly, Nim analysis doesn\u2019t have to be based on some intermediate representation (and hence limited like e.g. LLVM) but can achieve a solution more similar to Spark.Static analysis will also help Nim development tremendously because we can for example make it a rule that only adequately specified and successfully verified code will be accepted.\n Solving isn\u2019t the problem of static analysis any more, so what is a static analyser then?It is the \u201cbridge\u201d between code and math/solving; it is what collects all the bits and pieces of information contained in the code, as well as the information provided by the person \u201cannotating\u201d the code and feeds it in a meaningful and relevant manner to the solver.\n Sounds simple?Well, yes, in theory but in real life it seems to be a complicated and hard job; the fact that only extremely few languages offer some SA facilities as well as the fact that SA is largely used only in rather few very sensitive projects strongly suggests that SA is  not that simple.Another fact that also seems to confirm that view is the fact that there are only about a dozen or two actually usable and used static analysers, all of which are either somewhat limited or way too complex for most developers including quite experienced ones.\n  Static Analysis \u2013 and I mean SA tightly coupled to its \u201chost language\u201d \u2013 offers two big things, namely:\n the  only way known so far to achieve justified confidence in code by  proving it\u2019s bug free, and\n  an actually usable and even reasonably convenient way for mere mortal developers to achieve that confidence.\n With a caveat: a static analyser can\u2019t do miracles; it largely can only prove correct what you feed to it.If you don\u2019t provide statements/conditions to be verified you won\u2019t get much out of it.\n You\u2019ve probably heard of the fully verified seL4 kernel.Well, they did take the hard route (back then they had to) and it took them about a decade of very skilled specialists work.Compare that to Ada/Spark, probably still  the example of a programming language coming (since some years) with a \u201cbuilt in\u201d (actually quite tightly coupled) static analyser.I still remember my first experience with it.It was almost a dream having come true, not even just because it was something one could actually use without a PhD, but also because efficiency of use and even some convenience have a tangible and significant influence on our income as developers; we usually simply can\u2019t afford to invest way more time in \u201cannotation\u201d than in writing code.\n If there is one thing that you should take with you from this article it is this:The compiler which is unnerving you with its warnings is  your friend.SA is some kind of an extended version of this.SA is  your friend, and a powerful one!Make your choice: you can have the static analyser point out problematic spots to you, or you can have your customers pointing them out (and cursing at you).\n The other point you should take away is that SA is (based on)  another specification of what you are coding.It is  not a disadvantage but an  advantage that it\u2019s not exactly like code/your programming language.It allows you to express your algorithms in a somewhat similar notation but having checked  the algorithm as well as the program implementation.\n In fact, I suggest to even go further and to consider the specification the important part and coding as some \u201csecondary work\u201d.Programming is \u201cjust\u201d the part of implementing the \u201chow?\u201d.And indeed in highly sensitive environments, one  first properly specifies (formally)  what is done, what conditions must be met and what the state has to be before and after some module or procedure, and actually implementing the module and/or procedures is only the second to last step (the last step is verification and testing).\n Also note one particularly useful and beautiful side effect of that:if some procedure or module needed to be changed, say due to some administrative change, that change could not create harm to the whole system  iff the specification (\u201cannotations\u201d) is sufficiently complete and tight.\n I expect some future Nim version X (with a not complete but reasonable level of SA) to be a leap comparable to Ada/Spark, and potentially an even more significant leap because Nim is a language that is (or soon will be) much more used \u2013 and much easier to use \u2013 than Ada.I\u2019ll dance in joy once a Nim version with a  -d:verify switch becomes available.", "posttime": "2020-06-11 02:43:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9759\u6001,static,\u51fd\u6570", "title": "\u9759\u6001\u5206\u6790", "title_en": "Static Analysis", "transed": 1, "url": "https://nim-lang.org/blog/2020/06/08/static-analysis.html", "via": "", "real_tags": ["\u9759\u6001", "static", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "3634b226d5c751ee1dc43ff7a8439a8d.jpg", "infoid": 1006041, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u5728\u5168\u7403\u62e5\u670925\u4ebf\u7528\u6237\uff0c\u6709\u8d23\u4efb\u4f7f\u5176Android\u64cd\u4f5c\u7cfb\u7edf\u5c3d\u53ef\u80fd\u5b89\u5168\u3002\u4f46\u8be5\u516c\u53f8\u6709\u65f6\u96be\u4ee5\u5145\u5206\u5ba1\u67e5Google Play Store\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u6570\u5343\u6216\u6570\u767e\u4e07\u7528\u6237\u7ee7\u7eed\u4e0b\u8f7d\u6076\u610f\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u968f\u7740\u8c37\u6b4c\u5468\u4e09\u53d1\u5e03Android 11\u6d4b\u8bd5\u7248\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u91c7\u53d6\u63aa\u65bd\uff0c\u8ba9\u6d41\u6c13\u5e94\u7528\u7a0b\u5e8f\u66f4\u96be\u7a83\u53d6\u4f60\u7684\u6570\u636e\uff0c\u5373\u4f7f\u5b83\u4eec\u786e\u5b9e\u6e9c\u8d70\u4e86\u3002\n\u8c37\u6b4c\u591a\u5e74\u6765\u4e00\u76f4\u81f4\u529b\u4e8e\u5728\u5e55\u540e\u9010\u6b65\u52a0\u5f3aAndroid\u7684\u5b89\u5168\u3002\u5b89\u535311\u7684\u53d1\u5e03\u7279\u522b\u5173\u6ce8\u4e8e\u6269\u5927\u9690\u79c1\u6539\u8fdb\uff0c\u8ba9\u4f60\u66f4\u597d\u5730\u63a7\u5236\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u7684\u5185\u5bb9\uff0c\u5e76\u63d0\u4f9b\u66f4\u591a\u65b9\u5f0f\u5728\u5b89\u5353\u96f6\u6563\u4e14\u6742\u4e71\u65e0\u7ae0\u7684\u8bbe\u5907\u7fa4\u4e2d\u5206\u53d1\u8f6f\u4ef6\u66f4\u65b0\u3002\nAndroid 10\u4e5f\u89e3\u51b3\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u8981\u6c42\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u8bf7\u6c42\u6743\u9650\uff0c\u7136\u540e\u66f4\u9891\u7e41\u5730\u91cd\u7533\u7528\u6237\u9009\u62e9\u3002Android 11\u589e\u52a0\u4e86\u4e00\u9879\u529f\u80fd\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u8bf7\u6c42\u9ea6\u514b\u98ce\u3001\u6444\u50cf\u5934\u6216\u4f4d\u7f6e\u7b49\u5185\u5bb9\u7684\u4e00\u6b21\u6027\u6743\u9650\uff0c\u4f5c\u4e3a\u5168\u6709\u6216\u5168\u65e0\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u804a\u5929\u5e94\u7528\u7a0b\u5e8f\u4e0e\u670b\u53cb\u5206\u4eab\u4e00\u6b21\u4f60\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u9700\u8981\u6388\u4e88\u65e0\u9650\u671f\u7684\u4f4d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u6216\u8005\u4e0d\u5fc5\u8bb0\u4f4f\u7a0d\u540e\u91cd\u65b0\u8fdb\u5165\u8bbe\u7f6e\u6765\u64a4\u9500\u6743\u9650\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4eba\u4eec\u5b9e\u9645\u4e0a\u6b63\u5728\u5229\u7528Android 10\u7684\u8fd9\u4e9b\u529f\u80fd\uff0c\u5e76\u5728\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u6743\u9650\u8bbf\u95ee\u6743\u9650\u65f6\u8003\u8651\u81ea\u5df1\u7684\u9009\u62e9\uff0c\u8d1f\u8d23\u9690\u79c1\u95ee\u9898\u7684Android\u4ea7\u54c1\u7ecf\u7406\u590f\u66fc\u00b7D\u00b7\u5e2d\u5c14\u74e6(Charmaine D&39\uff1bSilva)\u8bf4\u3002\u56e0\u6b64\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e00\u6b21\u6211\u4eec\u6dfb\u52a0\u4e86\u66f4\u591a\u63a7\u4ef6\u3002\nAndroid 11\u8fd8\u5c06\u63a7\u5236\u4f60\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u679c\u4f60\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u6253\u5f00\u5b83\uff0c\u5b83\u4f1a\u81ea\u52a8\u64a4\u9500\u6743\u9650\u3002\u5982\u679c\u4f60\u518d\u6b21\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u53ef\u4ee5\u968f\u65f6\u6062\u590d\u5b83\u7684\u8bbf\u95ee\uff0c\u4f46\u662f\u6743\u9650\u4e0d\u4f1a\u88ab\u9057\u5fd8\u3002\u8c37\u6b4c\u8ba1\u5212\u572860-90\u5929\u540e\u5c1d\u8bd5\u4e0d\u540c\u7684\u622a\u6b62\u65e5\u671f\uff0c\u76ee\u6807\u662f\u5728\u4e0d\u7834\u574f\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u6d88\u9664\u6d41\u6d6a\u6743\u9650\u3002\n\u5e2d\u5c14\u74e6\u8bf4\uff1a\u6211\u4eec\u5728\u6211\u4eec\u7684\u6570\u636e\u4e2d\u770b\u5230\uff0c\u4eba\u4eec\u7684\u8bbe\u5907\u4e0a\u6709\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ed6\u4eec\u53ef\u80fd\u5df2\u7ecf\u4f7f\u7528\u4e86\u51e0\u6b21\uff0c\u7136\u540e\u5c31\u5fd8\u8bb0\u4e86\u3002\u4ed6\u4eec\u4e0d\u4f1a\u5378\u8f7d\u5b83\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u9700\u8981\u5378\u8f7d\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u4ecd\u5177\u6709\u4e0e\u5176\u5173\u8054\u7684\u6743\u9650\u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u65b0\u529f\u80fd\u662f\u4e00\u79cd\u6743\u9650\u81ea\u52a8\u91cd\u7f6e--\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u536b\u751f\u68c0\u67e5\u3002&#34\uff1b\n\u4eceAndroid 11\u4e4b\u540e\u63a8\u51fa\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6743\u9650\u81ea\u52a8\u91cd\u7f6e\u529f\u80fd\u5c06\u5904\u4e8e\u6253\u5f00\u72b6\u6001\uff0c\u8fd9\u662f\u5f00\u53d1\u4eba\u5458\u5728\u8ba1\u5212\u4e2d\u8981\u8003\u8651\u7684\u56e0\u7d20\u3002Android 10\u53ca\u66f4\u4f4e\u7248\u672c\u7684\u73b0\u6709\u5e94\u7528\u7a0b\u5e8f\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u542f\u7528\u8be5\u529f\u80fd\uff0c\u4f46\u7528\u6237\u4ecd\u53ef\u4ee5\u901a\u8fc7\u5207\u6362\u63a7\u4ef6\u6765\u6253\u5f00\u8be5\u529f\u80fd\u3002\u8c37\u6b4c\u8868\u793a\uff0c\u5b83\u6700\u7ec8\u5e0c\u671b\u5c06\u51e0\u4e4e\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u7684\u6743\u9650\u81ea\u52a8\u91cd\u7f6e\u8bbe\u4e3a\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f46\u8be5\u516c\u53f8\u5e0c\u671b\u653e\u5bbd\u8fd9\u4e00\u6539\u53d8\uff0c\u4ee5\u514d\u8fd9\u4e00\u53d8\u5316\u65e0\u610f\u4e2d\u7834\u574f\u4e86\u5386\u53f2\u60a0\u4e45\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002\nAndroid 11\u8fd8\u5c06\u6269\u5c55\u8c37\u6b4c\u7684\u201c\u4e3b\u7ebf\u9879\u76ee\u201d(Project Mainline)\u9879\u76ee\uff0c\u8be5\u9879\u76ee\u5229\u7528\u8c37\u6b4cPlay\u670d\u52a1(Google Play Services)\u76f4\u63a5\u5411\u7528\u6237\u8bbe\u5907\u63d0\u4f9b\u5173\u952e\u5b89\u5168\u8865\u4e01\u7b49\u4e3b\u7ebf\u8f6f\u4ef6\u66f4\u65b0\uff0c\u800c\u4e0d\u5fc5\u7b49\u5f85\u6bcf\u5bb6\u5236\u9020\u5546\u4e3a\u5176\u8bbe\u5907\u91cf\u8eab\u5b9a\u505a\u66f4\u65b0\u3002Android\u7684\u53bb\u4e2d\u5fc3\u5316\u3001\u9002\u5e94\u6027\u662f\u5176\u6838\u5fc3\u548c\u53d7\u4eba\u559c\u7231\u7684\u5c5e\u6027\u4e4b\u4e00\u3002\u4f46\u5b83\u9650\u5236\u4e86\u8c37\u6b4c\u96c6\u4e2d\u53d1\u5e03\u91cd\u8981\u66f4\u65b0\u7684\u80fd\u529b\u3002\nProject Mainline\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06Android\u64cd\u4f5c\u7cfb\u7edf\u6982\u5ff5\u6027\u5730\u62c6\u5206\u6210\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5757\u521b\u5efa\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u4fbf\u901a\u8fc7Google Play Store\u8fdb\u884c\u66f4\u65b0\u3002\u5728Android 10\u4e2d\uff0c\u8c37\u6b4c\u9996\u6b21\u63a8\u51fa\u4e8610\u4e2a\u53ef\u4ee5\u63a5\u6536\u66f4\u65b0\u7684\u6a21\u5757\u3002Android 11\u5c06\u518d\u589e\u52a012\u4e2a\u6a21\u5757\uff0c\u5305\u62ec\u4e00\u4e2a\u6743\u9650\u6a21\u5757\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7528\u4e8eAndroid\u7684\u8303\u56f4\u5b58\u50a8\u529f\u80fd\u7684\u6a21\u5757\uff0c\u8be5\u529f\u80fd\u5728Android 11\u4e2d\u53d8\u5f97\u5f3a\u5236\u6027\uff0c\u9650\u5236\u4e86\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u7528\u6237\u8bbe\u5907\u4e0a\u8bbf\u95ee\u6570\u636e\u7684\u8303\u56f4\u3002\u4e3a\u4e86\u5e94\u5bf9\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\uff0c\u8c37\u6b4c\u8fd8\u4f7f\u7528Mainline\u53d1\u5e03\u4e86\u65b0\u7684\u8054\u7cfb\u4eba\u8ffd\u8e2a\u6846\u67b6\u3002\nAndroid\u5e73\u53f0\u5b89\u5168\u4ea7\u54c1\u4e3b\u7ba1\u65af\u8482\u82ac\u00b7\u7d22\u83ab\u5409(Stephan Somogyi)\u8868\u793a\uff0c\u4ece\u8868\u9762\u4e0a\u770b\uff0cProject Mainline\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u5e73\u51e1\u3002\u4f46\u4e8b\u5b9e\u662f\uff0c\u6211\u4eec\u6709\u80fd\u529b\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u591a\u5e74\u6765\u5bf9\u5efa\u7b51\u7684\u6df1\u601d\u719f\u8651\u662f\u503c\u5f97\u7684\u3002Mainline\u548c\u6211\u4eecMainline\u7684\u7ba1\u9053\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u80dc\u5229\u3002\n\u7d22\u83ab\u5409\u8868\u793a\uff0cAndroid\u8fc7\u53bb90\u5929\u7684\u5b89\u5168\u8865\u4e01\u4f7f\u7528\u91cf\u6570\u636e\u5448\u7a33\u6b65\u4e0a\u5347\u8d8b\u52bf\u3002\u73b0\u5728\u6709\u8fd11000\u6b3eAndroid\u8bbe\u5907\u6bcf\u6708\u6216\u81f3\u5c11\u6bcf\u5b63\u5ea6\u8fdb\u884c\u4e00\u6b21\u5b89\u5168\u66f4\u65b0\u3002\u8fd9\u4e9b\u8bbe\u5907\u73b0\u5728\u7ea6\u5360Android\u603b\u4eba\u53e3\u768490%\u3002\n\u8003\u8651\u5230\u82f9\u679c\u591a\u5e74\u6765\u5728iOS\u4e0a\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u96c6\u4e2d\u66f4\u65b0\u548c\u5e7f\u6cdb\u91c7\u7528\u65b0\u7248\u672c\uff0c\u4eba\u4eec\u80af\u5b9a\u5f88\u5bb9\u6613\u611f\u89c9\u5230Project Mainline\u6765\u5f97\u592a\u665a\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u8fd9\u4e00\u529f\u80fd\u662fAndroid\u5e73\u8861\u5176\u81ea\u7531\u548c\u5f00\u6e90\u6839\u6e90\u4e0e\u66f4\u597d\u5730\u83b7\u53d6\u6025\u9700\u7684\u4fdd\u62a4\u6027\u66f4\u65b0\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5b83\u53ef\u80fd\u4f1a\u6539\u53d8Android\u6574\u4f53\u5b89\u5168\u7684\u6e38\u620f\u89c4\u5219\u3002\n\u8c37\u6b4c\u7684Android\u6d4b\u8bd5\u7248\u5bf9\u4efb\u4f55\u4eba\u90fd\u662f\u5f00\u653e\u7684\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bbf\u95eeAndroid 11\u7248\u672c\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6d4b\u8bd5\u7248\u4e0d\u662f\u7a33\u5b9a\u7684\u6700\u7ec8\u7248\u672c\uff0c\u53ef\u80fd\u4f1a\u6709\u9519\u8bef\u6216\u5bfc\u81f4\u95ee\u9898\u3002\u5982\u679c\u4f60\u613f\u610f\u7b49\u51e0\u4e2a\u6708\uff0cAndroid 11\u7684\u5b89\u5168\u548c\u9690\u79c1\u6539\u8fdb\u5c06\u57289\u6708\u4efd\u6b63\u5f0f\u4eae\u76f8\u3002\n\u4e0d\u80fd\u51fa\u53bb\u6297\u8bae\u5417\uff1f\u4ee5\u4e0b\u662f\u5982\u4f55\u5728\u5bb6\u4e2d\u63d0\u4f9b\u5e2e\u52a9\u7684\u65b9\u6cd5\u3002\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfa7\u4e8b\u60c5\u542c\u8d77\u6765\u4e0d\u592a\u5bf9\u52b2\uff1f\u67e5\u770b\u6211\u4eec\u6700\u559c\u6b22\u7684\u65e0\u7ebf\u8033\u673a\u3001\u97f3\u68d2\u548c\u84dd\u7259\u626c\u58f0\u5668", "note_en": "With 2.5 billion users worldwide, Google has a responsibility to make its Android operating system as secure as possible. But the company has  at times struggled to adequately vet apps in the Google Play Store, allowing malicious programs through that thousands or millions of users go on to download. With Google&#39;s release of the Android 11 Beta on Wednesday, though, the company is taking steps to make it even more difficult for rogue apps to grab your data even when they do slip by.\n Google has worked  for years to incrementally tighten Android security under the hood. And the release of Android 11 is particularly focused on expanding privacy  improvements to give you more control over what your apps can access and giving more ways to distribute software updates across Android&#39;s fragmented and disjointed device population.\n Android 10 addressed some of this as well, requiring that app developers request permissions and then reaffirm user choices more often. Android 11 adds a feature that allows developer to request one-time permissions for things like the microphone, camera, or location as an alternative to all or nothing. You can share your location with a friend through a chat app once, for example, without granting indefinite location access, or having to remember to wade back into settings to revoke the permission later.\n  &#34;We can see that people are actually leveraging these features from Android 10 and thinking about their choices when they\u2019re giving apps access to permissions,&#34; says Charmaine D&#39;Silva, an Android product manager who works on privacy. &#34;So building on that this time we\u2019ve added even more controls.&#34;\n Android 11 will also rein in apps that you don&#39;t use very often, automatically revoking permissions if you don&#39;t open it for a still undetermined period of time. If you start using the app again you can always reinstate its access, but the permission won&#39;t be lurking forgotten. Google plans to experiment with different cutoffs after 60-90 days, with the goal of eliminating stray permissions without breaking functionality.\n  &#34;We\u2019ve seen in our data that people have a lot of apps on their devices that they may have used a couple of times and then forgot about,&#34; D&#39;Silva says. &#34;They don\u2019t uninstall it because they don\u2019t have a need to, but the app still has permissions associated with it. So this new feature is a permissions auto-reset\u2014sort of a hygiene check.&#34;\n  Beginning with apps that debut after Android 11, the permission auto-reset feature will be on by default and something for developers to factor into their plans. Existing apps for Android 10 and below won&#39;t have the feature on by default, but users will still be able to toggle a control to turn it on. Google says that eventually it wants to turn permission auto-reset on bey default for almost every app, but the company wants to ease in so the change doesn&#39;t inadvertently break functionality for longstanding apps.\n Android 11 will also see an expansion of Google&#39;s Project Mainline program, which uses Google Play Services to &#34;mainline&#34; software updates like critical security patches directly to users&#39; devices rather than having to wait for each individual manufacturer to tailor an update for their devices. Android&#39;s decentralized, adaptable nature is one of its core and beloved attributes. But it has limited Google&#39;s ability to centrally distribute important updates.\n Project Mainline works by conceptually breaking the Android operating system into chunks and creating the infrastructure for each of those chunks to be updated through the Google Play Store. In Android 10, Google debuted 10 of these modules that could receive updates. Android 11 will add 12 more, including a permissions module, and one for Android&#39;s Scoped Storage feature, which is becoming mandatory in Android 11 and limits the &#34;scope&#34; or extent of what data apps can access on a user&#39;s device. In response to the Covid-19 pandemic, Google also used Mainline to distribute its new  contact tracing framework.\n  &#34;On the surface Project Mainline could appear mundane,&#34; says Stephan Somogyi, product lead for Android platform security. &#34;But the fact is our ability to do that validates years worth of architectural contemplation. Mainline and our plumbing of Mainline is actually a big win.&#34;\n Somogyi says that Android&#39;s stats on uptake of security patches in the previous 90 days are on a steady upward curve. There are now almost 1,000 Android device models that get security updates once a month or at least once a quarter. And those devices now make up about 90 percent of the total Android population.\n Given that one of Apple&#39;s biggest strengths for years with iOS has been centralized updates and widespread adoption of new releases, it&#39;s certainly easy to feel that Project Mainline is coming far too late. But if the feature is a way for Android to balance its free and open source roots with better access to much needed protective updates it could be a game changer for overall Android security.\n Google&#39;s Android Betas are open for anyone to try; you can access the Android 11 release  here. Just keep in mind that betas aren&#39;t the stable final release and could have bugs or cause problems. If you&#39;re comfortable waiting a few months, the security and privacy improvements of Android 11 will officially debut in September.\n   Can\u2019t go out and protest?  Here\u2019s how to help from home\n    \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfa7 Things not sounding right? Check out our favorite  wireless headphones,  soundbars, and  Bluetooth speakers", "posttime": "2020-06-11 01:56:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,android,app,\u63a7\u5236,zombie", "title": "Android 11\u5c06\u5e2e\u52a9\u60a8\u63a7\u5236\u50f5\u5c38\u5e94\u7528\u7a0b\u5e8f\u6743\u9650", "title_en": "Android 11 Will Help You Rein In Zombie App Permissions", "transed": 1, "url": "https://www.wired.com/story/android-11-security-permissions-updates/", "via": "", "real_tags": ["\u7a0b\u5e8f", "android", "app", "\u63a7\u5236", "zombie"]}, {"category": "", "categoryclass": "", "imagename": "9b208d69c46f6405daa00e51e9dd9cf8.jpg", "infoid": 1006040, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5e38\u88ab\u9057\u5fd8\u7684\u8fb9\u7f18\u60c5\u51b5\uff0c\u7f51\u7ad9\u5fd8\u8bb0\u6807\u51c6\u5316\u4e3b\u673a\u540d\uff0c\u5185\u5bb9\u4ecd\u5728\u63d0\u4f9b\uff0c\u4f46\u6d4f\u89c8\u5668\u4e0a\u6ca1\u6709\u5339\u914d\u7684\u4e3b\u673a\u540d\uff0c\u56e0\u6b64\u6ca1\u6709cookie\u548c\u635f\u574f\u7684COR-\u800c\u4e14\u8bb8\u591a\u8f83\u5927\u7684\u7f51\u7ad9\u4f7f\u7528\u4e0d\u540c\u7684\u57df\u540d\u6765\u63d0\u4f9b\u5e7f\u544a/\u5a92\u4f53\uff0c\u767d\u540d\u5355\u4e2d\u4e0d\u5305\u542b\u989d\u5916\u7684\u70b9", "note_en": "It&#39;s a commonly forgotten edge case, websites forget to normalize the hostname, the content is still served, but there&#39;s no hostname match on the browser so no cookies and broken CORS - and lots of bigger sites use a different domain to serve ads/media with a whitelist that doesn&#39;t contain the extra dot", "posttime": "2020-06-11 01:55:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e7f\u544a,\u57df\u540d,youtube,\u4e3b\u673a\u540d", "title": "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u57df\u540d\u540e\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6765\u7ed5\u8fc7YouTube\u5e7f\u544a", "title_en": "You can bypass YouTube ads by adding a dot after the domain", "transed": 1, "url": "https://www.reddit.com/r/webdev/comments/gzr3cq/fyi_you_can_bypass_youtube_ads_by_adding_a_dot/", "via": "", "real_tags": ["\u5e7f\u544a", "\u57df\u540d", "youtube", "\u4e3b\u673a\u540d"]}, {"category": "", "categoryclass": "", "imagename": "644f16d21b1d3ead9d420ebb31855490.jpeg", "infoid": 1006039, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u591a\u65b0\u624b\u5f00\u53d1\u4eba\u5458\u7ecf\u5e38\u5ffd\u7565\u7684\u4e00\u4ef6\u4e8b\u662f\u4ed6\u4eec\u63d0\u4ea4\u6d88\u606f\u7684\u683c\u5f0f\u3002\u683c\u5f0f\u6b63\u786e\u7684\u63d0\u4ea4\u6d88\u606f\u4e0d\u4ec5\u4ec5\u662f\u770b\u8d77\u6765\u6574\u6d01\uff0c\u8fd8\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\uff1a\n\u4e3a\u4ee3\u7801\u5ba1\u67e5\u8005\u63d0\u4f9b\u4e0a\u4e0b\u6587\uff1a\u4e00\u4e2a\u597d\u7684\u63d0\u4ea4\u6d88\u606f\u4e3a\u5ba1\u67e5\u8005\u63d0\u4f9b\u5173\u4e8e\u63d0\u4ea4\u5b9e\u73b0\u4e86\u4ec0\u4e48\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u9664\u975e\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u7ec6\u8282\uff0c\u5426\u5219\u4ed6\u4eec\u4e0d\u9700\u8981\u6df1\u5165\u7814\u7a76\u4ee3\u7801\u3002\u8fd9\u4e3a\u5ba1\u67e5\u8fc7\u7a0b\u8282\u7701\u4e86\u5927\u91cf\u65f6\u95f4\u3002\n\u5e2e\u52a9\u7ef4\u62a4\u529f\u80fd\u65e5\u5fd7\uff1a\u5728\u53d1\u5e03\u4e4b\u524d\u7f16\u5199\u7248\u672c\u8bf4\u660e\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u63d0\u4ea4\u6d88\u606f\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u4ee5\u5168\u9762\u4e86\u89e3\u81ea\u4e0a\u6b21\u53d1\u5e03\u4ee5\u6765\u6dfb\u52a0/\u5220\u9664/\u4fee\u6539\u7684\u529f\u80fd\u3002\n\u63d0\u4f9b\u77e5\u8bc6\u4f20\u6388\uff1a\u5927\u591a\u6570\u9879\u76ee\u6d89\u53ca\u591a\u4e2a\u4eba/\u56e2\u961f\uff0c\u4ece\u4e8b\u4e0d\u540c\u7684\u529f\u80fd\u3002\u6bcf\u4e2a\u5b9e\u4f53\u901a\u5e38\u5728\u5176\u672c\u5730\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u5b83\u4eec\u5b9a\u671f\u4e0e\u4e3b\u5206\u652f\u4e00\u8d77\u91cd\u65b0\u5efa\u7acb\u57fa\u7840\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u9002\u5f53\u7684\u63d0\u4ea4\u6d88\u606f\u5168\u9762\u4e86\u89e3\u5176\u4ed6\u5408\u4f5c\u8005\u5b9e\u73b0\u7684\u4ee3\u7801\u66f4\u6539\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u5f00\u53d1\u4eba\u5458\u5728\u4ea4\u53c9\u901a\u4fe1\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e2a\u597d\u7684\u63d0\u4ea4\u6d88\u606f\u7684\u539f\u56e0\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u5728\u5236\u4f5c\u63d0\u4ea4\u6d88\u606f\u65f6\uff0c\u6709\u4e00\u4e9b\u8981\u70b9\u9700\u8981\u7262\u8bb0\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\n\u4f46\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u89c9\u5f97\u63d0\u4ea4\u6d88\u606f\u592a\u957f\uff0c\u65e0\u6cd5\u653e\u5165\u4e00\u884c\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u63d0\u4ea4\u6d88\u606f\u62c6\u5206\u6210\u4e3b\u9898\u548c\u6b63\u6587\u3002\u4e3b\u9898\u548c\u6b63\u6587\u4e4b\u95f4\u7528\u7a7a\u884c\u5206\u9694\u3002\u4f8b\u5982,\u3002\n\u5c06\u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784\u5207\u6362\u5230MVM\u5c06\u6709\u5185\u5b58\u7ba1\u7406\u95ee\u9898\u7684\u7ec4\u4ef6\u4eceMVP\u8f6c\u6362\u5230MVVM Arch\u3002\n\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u60a8\u53ef\u4ee5\u8ba9\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u9009\u62e9\u67e5\u770b\u5305\u542b\u8be6\u7ec6\u63d0\u4ea4\u6d88\u606f\u7684git\u65e5\u5fd7(\u901a\u8fc7\u4f7f\u7528git log)\u6216\u4ec5\u5305\u542b\u4e3b\u9898\u7684\u65e5\u5fd7(\u901a\u8fc7\u4f7f\u7528git log--Online)\u3002\n\u786e\u4fdd\u4e3b\u9898\u6587\u672c\u6700\u591a\u4fdd\u755950\u4e2a\u5b57\u7b26\u53ef\u4ee5\u9f13\u52b1\u5f00\u53d1\u4eba\u5458\u60f3\u51fa\u4e00\u79cd\u7b80\u77ed\u800c\u7b80\u660e\u7684\u65b9\u5f0f\u6765\u8bf4\u660e\u4ed6\u4eec\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4ec0\u4e48\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728Github\u4e2d\uff0c\u5982\u679c\u63d0\u4ea4\u4e3b\u9898\u6587\u672c\u8d85\u8fc750\u4e2a\u5b57\u7b26\uff0c\u5219\u4f1a\u6536\u5230\u8b66\u544a\u3002\u5728\u5217\u8868\u89c6\u56fe\u4e2d\uff0c\u5982\u679c\u4e3b\u9898\u8d85\u8fc772\u4e2a\u5b57\u7b26\uff0c\u5219Github\u4f1a\u7528\u7701\u7565\u53f7\u622a\u65ad\u7ed3\u5c3e\u3002\u56e0\u6b64\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\uff0c\u76ee\u6807\u662f\u4e3b\u9898\u884c\u670950\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e25\u683c\u63a7\u5236\u4e0d\u8d85\u8fc772\u4e2a\u5b57\u7b26\u3002\n\u6240\u6709\u4e3b\u9898\u884c\u90fd\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5373\u4fee\u590d\u56fe\u50cf\u88c1\u526a\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u4fee\u590d\u56fe\u50cf\u88c1\u526a\u95ee\u9898\u3002\u8fd9\u5f80\u5f80\u4f1a\u4f7f\u60a8\u7684\u6d88\u606f\u5728GIT\u65e5\u5fd7\u4e2d\u770b\u8d77\u6765\u66f4\u52a0\u6574\u6d01\u548c\u7edf\u4e00\u3002\n\u5c06\u4ee3\u7801\u4e2d\u7684\u6bcf\u6b21\u63d0\u4ea4\u89c6\u4e3a\u5e94\u7528\u4e8e\u4ee3\u7801\u5e93\u7684\u66f4\u6539\u3002\u4ee3\u7801\u4e2d\u7684\u6bcf\u4e2a\u63d0\u4ea4\u90fd\u7528\u4e8e\u5e94\u7528\u66f4\u6539\u3002\u5f88\u5c11\u6709\u4f8b\u5b50\u662f\u3002\n\u7528\u4e0a\u8ff0\u8bed\u6c14\u5199\u7684\u53e5\u5b50\u88ab\u79f0\u4e3a\u7948\u4f7f\u8bed\u6c14(\u73b0\u5728\u65f6\u6001)\u3002\u8fd9\u4e0e\u6211\u4eec\u5199\u4fe1\u606f\u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6307\u793a\u6027\u8bed\u6c14(\u8fc7\u53bb\u65f6)\u3002\u76f8\u5e94\u7684\u4f8b\u5b50\u6709\u3002\nGit\u63d0\u4ea4\u6700\u597d\u7528\u547d\u4ee4\u6027\u8bed\u6c14\u7f16\u5199\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGit\u4f7f\u7528\u547d\u4ee4\u6027\u8bed\u6c14\u6765\u62a5\u544a\u5176\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u770b\u770bgit merge master\u3001git add index.html\u3001git merge Branch 1\u7b49\u547d\u4ee4\u3002\u5373\u4f7f\u5728Github\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u4e5f\u662f\u4ee5\u547d\u4ee4\u6027\u8bed\u6c14\u7f16\u5199\u7684\uff0c\u4f8b\u5982\uff0c\u6765\u81eauser1/user1Branch\u7684\u5408\u5e76\u62c9\u8bf7\u6c42#10\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u6b64\u547d\u4ee4\u6027\u8bed\u6c14\u89c4\u5219\u4ec5\u9002\u7528\u4e8e\u63d0\u4ea4\u6d88\u606f\u7684\u4e3b\u9898\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u8eab\u4f53\u4e2d\u7684\u4efb\u4f55\u65f6\u6001\u3002", "note_en": "One of the things a lot of newbie developers overlook often is the format of their commit messages. Properly formatted commit messages can do so much more than just looking neat, such as:\n Provide context to the code reviewer: A good commit message provides basic information to the reviewer about what the commit achieves, without them needing to dive into the code unless they are looking for specifics. This saves up a lot of time on the review process.\n Help in maintaining a feature log: While writing release notes before shipping, developers can often quickly look at the history of commit messages to have a broad idea of the features added/removed/modified since the last release.\n Provide knowledge transfer: Most projects involve multiple people/teams working on different features. Each entity generally works on their local branch, which they rebase with the master at regular intervals. In such cases, having a broad idea of the code changes implemented by other collaborators via proper commit messages can save a lot of developer time spent in cross-communication.\n  Now that we have seen the &#39;Why&#39; of a good commit message, let us look at the &#39;How&#39;. There are certain points to be kept in mind while crafting a commit message, which is outlined below.\n    But in other cases, where you feel the commit messages are too long to fit in a single line, then split your commit messages into a subject and body. Separate the subject and body by a blank line. For example,\n Switch app architecture  to MVVMConvert components  with memory management issue  from MVP  to MVVM arch\n By doing so, you give other developers the option to see a git log with a detailed commit message (by using  git log) or a log with just the subject (by using  git log --oneline).\n  Ensuring that the subject text remains 50 characters at maximum encourages developers to think of a brief and concise way about what their code implements. By default, in Github, you get a warning if the commit subject text is more than 50 characters. In a list view, if the subject is more than 72 characters, then Github truncates the end with an ellipsis. Hence, it&#39;s considered a good practice to aim for a subject line with 50 characters while keeping a strong check on not exceeding 72 characters.\n  Begin all subject lines with a capital letter, i.e.  Fix image cropping issues instead of  fix image cropping issues. This tends to give your messages a much neater and uniform look in the git log.\n    Think of each commit in your code as a change that is being applied to your codebase. Each commit in your code is used to apply a change. Few examples are\n  Sentences written in the above tone are what is known as the imperative mood(present tense). This is different from how we are tempted to write messages, called the indicative mood(past tense). Corresponding examples are\n  Git commits are better written in an imperative mood since Git by default uses the imperative mood to report its actions. For example, look at commands such as  git merge master,  git add index.html,  git merge branch1. Even actions performed in Github are written in an imperative mood, for example,  Merge pull request #10 from user1/user1branch.\n     Keep in mind that this rule of imperative mood applies only to the subject of the commit message. Feel free to use any tense in the body.", "posttime": "2020-06-11 01:54:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u4ea4,good,\u4e3b\u9898", "title": "\u5982\u4f55\u7f16\u5199\u597d\u7684Git\u63d0\u4ea4\u6d88\u606f", "title_en": "How to write good Git commit messages", "transed": 1, "url": "https://altcampus.io/blog/how-to-write-good-git-commit-message", "via": "", "real_tags": ["\u63d0\u4ea4", "good", "\u4e3b\u9898"]}, {"category": "", "categoryclass": "", "imagename": "2caf95cc2bb2d43f8f678498974f1fb3.jpeg", "infoid": 1006037, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3b\u677f\u83b7\u5f97\u7684\u7535\u5b50\u90ae\u4ef6\u8fd8\u62ab\u9732\u4e86\u4ee5\u524d\u672a\u62a5\u9053\u7684NSO\u96c6\u56e2\u4ea7\u54c1\u7684\u65b0\u7ec6\u8282\u3002", "note_en": "Emails obtained by Motherboard also reveal new details about previously unreported NSO Group products.", "posttime": "2020-06-11 01:53:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6280\u672f,tech,\u83b7\u5f97", "title": "\u6d1b\u6749\u77f6\u8b66\u5bdf\u5c40\u4ece\u4ee5\u8272\u5217\u7535\u8bdd\u7a83\u542c\u516c\u53f8NSO Group\u83b7\u5f97\u6280\u672f\u6f14\u793a", "title_en": "LAPD Got Tech Demos from Israeli Phone Hacking Firm NSO Group", "transed": 1, "url": "https://www.vice.com/en_us/article/n7wna7/lapd-phone-hacking-nso-group-westbridge", "via": "", "real_tags": ["\u6280\u672f", "tech", "\u83b7\u5f97"]}, {"category": "", "categoryclass": "", "imagename": "23b916b0168b4e4a9f6cc0747a20b0fb.png", "infoid": 1006035, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u8fd0\u884c\u8bb8\u591a\u540e\u7aef\u670d\u52a1\uff0c\u4e3a\u6211\u4eec\u7684\u5ba2\u6237\u63a7\u5236\u9762\u677f\u3001API\u548c\u6211\u4eec\u8fb9\u7f18\u53ef\u7528\u7684\u529f\u80fd\u63d0\u4f9b\u652f\u6301\u3002\u6211\u4eec\u62e5\u6709\u5e76\u8fd0\u8425\u540e\u7aef\u670d\u52a1\u7684\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u5728\u670d\u52a1\u4e4b\u95f4\u8def\u7531\u4efb\u610fTCP\u548cUDP\u6d41\u91cf\uff0c\u4e5f\u9700\u8981\u4ece\u8fd9\u4e9b\u6570\u636e\u4e2d\u5fc3\u5916\u90e8\u8def\u7531\u4efb\u610fTCP\u548cUDP\u6d41\u91cf\u3002\n\u4ee5\u524d\uff0c\u8fd9\u4e9b\u540e\u7aef\u670d\u52a1\u7684\u6240\u6709\u6d41\u91cf\u5728\u5230\u8fbe\u53ef\u7528\u5b9e\u4f8b\u4e4b\u524d\u90fd\u4f1a\u7ecf\u8fc7\u591a\u5c42\u6709\u72b6\u6001TCP\u4ee3\u7406\u548cNAT\u3002\u6b64\u89e3\u51b3\u65b9\u6848\u8fd0\u884c\u4e86\u51e0\u5e74\uff0c\u4f46\u968f\u7740\u6211\u4eec\u7684\u53d1\u5c55\uff0c\u5b83\u7ed9\u6211\u4eec\u7684\u670d\u52a1\u548c\u8fd0\u8425\u56e2\u961f\u5e26\u6765\u4e86\u8bb8\u591a\u95ee\u9898\u3002\u6211\u4eec\u7684\u670d\u52a1\u56e2\u961f\u9700\u8981\u5904\u7406\u53ef\u7528\u6027\u4e0b\u964d\u7684\u95ee\u9898\uff0c\u800c\u6211\u4eec\u7684\u8fd0\u8425\u56e2\u961f\u5728\u9700\u8981\u5bf9\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8fdb\u884c\u7ef4\u62a4\u65f6\u9700\u8981\u4ed8\u51fa\u5f88\u5927\u7684\u52aa\u529b\u3002\n\u8003\u8651\u5230\u6211\u4eec\u7684\u6709\u72b6\u6001TCP\u4ee3\u7406\u548cNAT\u89e3\u51b3\u65b9\u6848\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u76ee\u6807\u6765\u66ff\u4ee3\u8d1f\u8f7d\u5e73\u8861\u670d\u52a1\uff0c\u540c\u65f6\u4fdd\u7559\u5728\u6211\u4eec\u81ea\u5df1\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\uff1a\n\u901a\u8fc7\u5c06\u51b3\u7b56\u8def\u7531\u5230\u76ee\u7684\u670d\u52a1\u5668\u6765\u4fdd\u7559\u6e90IP\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u652f\u6301\u9700\u8981\u5ba2\u6237\u7aefIP\u5730\u5740\u4f5c\u4e3a\u5176\u64cd\u4f5c\u4e00\u90e8\u5206\u7684\u670d\u52a1\u5668\uff0c\u800c\u65e0\u9700X-Forwarded-For\u6807\u5934\u6216\u4ee3\u7406TCP\u6269\u5c55\u7b49\u53d8\u901a\u65b9\u6cd5\u3002\n\u652f\u6301\u540e\u7aef\u8de8\u591a\u4e2a\u673a\u67b6\u548c\u5b50\u7f51\u7684\u67b6\u6784\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u73b0\u6709\u7f51\u7edc\u8bbe\u5907\u65e0\u6cd5\u8def\u7531\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5141\u8bb8\u8fd0\u8425\u56e2\u961f\u5728\u96f6\u505c\u673a\u65f6\u95f4\u5185\u6267\u884c\u7ef4\u62a4\u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u968f\u65f6\u5220\u9664\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u670d\u52a1\u7684\u4efb\u4f55\u8fde\u63a5\u91cd\u7f6e\u6216\u505c\u673a\u3002\n\u4f7f\u7528\u5e38\u89c1\u4e14\u7ecf\u8fc7\u826f\u597d\u6d4b\u8bd5\u7684Linux\u5de5\u5177\u548c\u529f\u80fd\u3002Linux\u4e2d\u6709\u5f88\u591a\u975e\u5e38\u9177\u7684\u7f51\u7edc\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u8bd5\u9a8c\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4e3a\u90a3\u4e9b\u4e3b\u8981\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u64cd\u4f5c\u5458\u4f18\u5316\u4e00\u4e9b\u6700\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u7684\u884c\u4e3a\u3002\n\u8d1f\u8f7d\u5e73\u8861\u5668\u4e4b\u95f4\u6ca1\u6709\u663e\u5f0f\u8fde\u63a5\u540c\u6b65\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u663e\u8457\u589e\u52a0\u4e86\u7cfb\u7edf\u590d\u6742\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u51fa\u9519\u7684\u673a\u4f1a\u3002\n\u5141\u8bb8\u4ece\u5148\u524d\u7684\u8d1f\u8f7d\u5e73\u8861\u5668\u5b9e\u73b0\u5206\u9636\u6bb5\u90e8\u7f72\u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u5728\u4e24\u4e2a\u5b9e\u73b0\u4e4b\u95f4\u8fc1\u79fb\u7279\u5b9a\u670d\u52a1\u7684\u6d41\u91cf\uff0c\u4ee5\u53d1\u73b0\u95ee\u9898\u5e76\u83b7\u5f97\u5bf9\u7cfb\u7edf\u7684\u4fe1\u5fc3\u3002\n\u4ee5\u524d\uff0c\u5f53\u6d41\u91cf\u5230\u8fbe\u6211\u4eec\u7684\u540e\u7aef\u6570\u636e\u4e2d\u5fc3\u65f6\uff0c\u6211\u4eec\u7684\u8def\u7531\u5668\u4f1a\u6311\u9009\u6570\u636e\u5305\u5e76\u5c06\u5176\u8f6c\u53d1\u5230\u5b83\u6240\u77e5\u9053\u7684L4\u8d1f\u8f7d\u5747\u8861\u5668\u670d\u52a1\u5668\u4e4b\u4e00\u3002\u8fd9\u4e9bL4\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u786e\u5b9a\u6d41\u91cf\u7528\u4e8e\u4ec0\u4e48\u670d\u52a1\uff0c\u7136\u540e\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u670d\u52a1\u7684L7\u670d\u52a1\u5668\u4e4b\u4e00\u3002\n\u6b64\u67b6\u6784\u5728\u6b63\u5e38\u8fd0\u884c\u671f\u95f4\u8fd0\u884c\u826f\u597d\u3002\u4f46\u662f\uff0c\u53ea\u8981\u8d1f\u8f7d\u5e73\u8861\u5668\u96c6\u53d1\u751f\u66f4\u6539\uff0c\u95ee\u9898\u5c31\u4f1a\u5f88\u5feb\u6d6e\u51fa\u6c34\u9762\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u4f1a\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u65b0\u96c6\uff0c\u5e76\u4e14\u6d41\u91cf\u5f88\u53ef\u80fd\u4f1a\u5230\u8fbe\u4e0e\u4ee5\u524d\u4e0d\u540c\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u7531\u4e8e\u6bcf\u4e2a\u8d1f\u8f7d\u5e73\u8861\u5668\u7ef4\u62a4\u5176\u81ea\u5df1\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u56e0\u6b64\u5b83\u5c06\u65e0\u6cd5\u4e3a\u8fd9\u4e9b\u65b0\u7684\u6b63\u5728\u8fdb\u884c\u7684\u8fde\u63a5\u8f6c\u53d1\u6d41\u91cf\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u8fde\u63a5\u5c06\u88ab\u91cd\u7f6e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u6211\u4eec\u7684\u5ba2\u6237\u5e26\u6765\u9519\u8bef\u3002\n\u5728\u6b63\u5e38\u8fd0\u884c\u671f\u95f4\uff0c\u6211\u4eec\u7684\u65b0\u67b6\u6784\u5177\u6709\u4e0e\u4ee5\u524d\u8bbe\u8ba1\u7c7b\u4f3c\u7684\u884c\u4e3a\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u5c06\u9009\u62e9L4\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u7136\u540e\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u670d\u52a1\u7684L7\u670d\u52a1\u5668\u3002\n\u5f53\u8d1f\u8f7d\u5747\u8861\u5668\u96c6\u5408\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4f1a\u53d1\u751f\u91cd\u5927\u53d8\u5316\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u73b0\u5728\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u8def\u7531\u5668\u9009\u62e9\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u54ea\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u5e76\u4e0d\u91cd\u8981\uff0c\u5b83\u4eec\u6700\u7ec8\u5c06\u5230\u8fbe\u76f8\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\u3002\n\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u670d\u52a1\u5668\u4f7f\u7528BGP\u5411\u6570\u636e\u4e2d\u5fc3\u7684\u8def\u7531\u5668\u901a\u544a\u670d\u52a1IP\u5730\u5740\uff0c\u4e0e\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u76f8\u540c\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u6839\u636e\u4e00\u79cd\u79f0\u4e3a\u7b49\u4ef7\u591a\u8def\u5f84\u8def\u7531(ECMP)\u7684\u8def\u7531\u7b56\u7565\u6765\u9009\u62e9\u54ea\u4e9b\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u63a5\u6536\u6570\u636e\u5305\u3002\nECMP\u5bf9\u6570\u636e\u5305\u4e2d\u7684\u4fe1\u606f\u8fdb\u884c\u6563\u5217\u5904\u7406\uff0c\u4ee5\u9009\u62e9\u8be5\u6570\u636e\u5305\u7684\u8def\u5f84\u3002\u8def\u7531\u5668\u4f7f\u7528\u7684\u6563\u5217\u51fd\u6570\u901a\u5e38\u56fa\u5b9a\u5728\u56fa\u4ef6\u4e2d\u3002\u9009\u62e9\u4e0d\u826f\u6563\u5217\u51fd\u6570\u6216\u9009\u62e9\u4e0d\u826f\u8f93\u5165\u7684\u8def\u7531\u5668\u53ef\u80fd\u4f1a\u9020\u6210\u7f51\u7edc\u548c\u670d\u52a1\u5668\u8d1f\u8f7d\u5931\u8861\uff0c\u6216\u7834\u574f\u534f\u8bae\u5c42\u7684\u5047\u8bbe\u3002\n\u6211\u4eec\u4e0e\u7f51\u7edc\u56e2\u961f\u5408\u4f5c\uff0c\u786e\u4fdd\u5728\u6211\u4eec\u7684\u8def\u7531\u5668\u4e0a\u914d\u7f6eECMP\uff0c\u4f7f\u5176\u4ec5\u6839\u636e\u6570\u636e\u5305\u76845\u5143\u7ec4(\u534f\u8bae\u3001\u6e90\u5730\u5740\u548c\u7aef\u53e3\u4ee5\u53ca\u76ee\u7684\u5730\u5740\u548c\u7aef\u53e3)\u8fdb\u884c\u6563\u5217\u3002\n\u4e3a\u4e86\u8fdb\u884c\u7ef4\u62a4\uff0c\u6211\u4eec\u7684\u8fd0\u8425\u5546\u53ef\u4ee5\u64a4\u56deBGP\u4f1a\u8bdd\uff0c\u6d41\u91cf\u5c06\u900f\u660e\u5730\u8f6c\u79fb\u5230\u5176\u4ed6\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4f46\u662f\uff0c\u5982\u679c\u8d1f\u8f7d\u5e73\u8861\u5668\u7a81\u7136\u53d8\u5f97\u4e0d\u53ef\u7528(\u4f8b\u5982\u5185\u6838\u6b7b\u673a\u6216\u7535\u6e90\u6545\u969c)\uff0c\u5219\u5728BGP\u4fdd\u6301\u8fde\u63a5\u673a\u5236\u5931\u8d25\u548c\u8def\u7531\u5668\u7ec8\u6b62\u4f1a\u8bdd\u4e4b\u524d\u4f1a\u6709\u4e00\u6bb5\u77ed\u6682\u7684\u5ef6\u8fdf\u3002\n\u5728\u8def\u7531\u5668\u548c\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u4f7f\u7528\u53cc\u5411\u8f6c\u53d1\u68c0\u6d4b(BFD)\u534f\u8bae\uff0c\u8def\u7531\u5668\u53ef\u4ee5\u5728\u66f4\u77ed\u7684\u5ef6\u8fdf\u540e\u7ec8\u6b62BGP\u4f1a\u8bdd\u3002\u4e0d\u540c\u7684\u8def\u7531\u5668\u5bf9BFD\u6709\u4e0d\u540c\u7684\u9650\u5236\u548c\u9650\u5236\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5f88\u96be\u5728\u9891\u7e41\u4f7f\u7528L2\u94fe\u8def\u805a\u5408\u548cVXLAN\u7684\u73af\u5883\u4e2d\u4f7f\u7528\u3002\n\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u4e0e\u6211\u4eec\u7684\u7f51\u7edc\u56e2\u961f\u5408\u4f5c\uff0c\u4f7f\u7528\u4ed6\u4eec\u6700\u719f\u6089\u7684\u5de5\u5177\u548c\u914d\u7f6e\u6765\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u51cf\u5c11\u7ec8\u6b62BGP\u4f1a\u8bdd\u7684\u65f6\u95f4\u3002\n\u4e3a\u4e86\u786e\u4fdd\u6240\u6709\u8d1f\u8f7d\u5747\u8861\u5668\u90fd\u5c06\u6d41\u91cf\u53d1\u9001\u5230\u76f8\u540c\u7684\u540e\u7aef\uff0c\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528\u78c1\u60ac\u6d6e\u8fde\u63a5\u8c03\u5ea6\u5668\u3002MagLev\u662f\u4e00\u4e2a\u4e00\u81f4\u7684\u6563\u5217\u8c03\u5ea6\u5668\uff0c\u5b83\u5bf9\u6765\u81ea\u6bcf\u4e2a\u6570\u636e\u5305\u76845\u5143\u7ec4\u4fe1\u606f(\u534f\u8bae\u3001\u6e90\u5730\u5740\u548c\u7aef\u53e3\u4ee5\u53ca\u76ee\u7684\u5730\u5740\u548c\u7aef\u53e3)\u8fdb\u884c\u6563\u5217\uff0c\u4ee5\u786e\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u3002\n\u7531\u4e8e\u662f\u4e00\u81f4\u7684\u6563\u5217\uff0c\u6bcf\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u90fd\u4f1a\u4e3a\u6570\u636e\u5305\u9009\u62e9\u76f8\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u9700\u8981\u4fdd\u6301\u4efb\u4f55\u8fde\u63a5\u72b6\u6001\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u900f\u660e\u5730\u5728\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u79fb\u52a8\u6d41\u91cf\uff0c\u800c\u4e0d\u9700\u8981\u5b83\u4eec\u4e4b\u95f4\u663e\u5f0f\u7684\u8fde\u63a5\u540c\u6b65\u3002\n\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u666e\u901a\u800c\u53ef\u9760\u7684Linux\u529f\u80fd\u3002\u81ea\u672c\u4e16\u7eaa\u521d\u4ee5\u6765\uff0cLinux\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7b2c4\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5373IP\u865a\u62df\u670d\u52a1\u5668(IPVS)\u3002IPVS\u4eceLinux4.18\u5f00\u59cb\u5c31\u652f\u6301\u78c1\u60ac\u6d6e\u8c03\u5ea6\u5668\u3002\n\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u548c\u5e94\u7528\u670d\u52a1\u5668\u5206\u5e03\u5728\u591a\u4e2a\u673a\u67b6\u548c\u5b50\u7f51\u4e2d\u3002\u4e3a\u4e86\u8def\u7531\u6765\u81ea\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u6d41\u91cf\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528Foo-over-UDP\u5c01\u88c5\u3002\n\u5728foo-over-UDP\u5c01\u88c5\u4e2d\uff0c\u5728\u539f\u59cb\u6570\u636e\u5305\u5468\u56f4\u6dfb\u52a0\u65b0\u7684IP\u548cUDP\u62a5\u5934\u3002\u5f53\u8fd9\u4e9b\u6570\u636e\u5305\u5230\u8fbe\u76ee\u7684\u670d\u52a1\u5668\u65f6\uff0cLinux\u5185\u6838\u4f1a\u5220\u9664\u5916\u90e8IP\u548cUDP\u62a5\u5934\uff0c\u5e76\u5c06\u5185\u90e8\u6709\u6548\u8d1f\u8f7d\u91cd\u65b0\u63d2\u5165\u7f51\u7edc\u5806\u6808\u8fdb\u884c\u5904\u7406\uff0c\u5c31\u597d\u50cf\u6570\u636e\u5305\u6700\u521d\u662f\u5728\u8be5\u670d\u52a1\u5668\u4e0a\u63a5\u6536\u7684\u4e00\u6837\u3002\n\u4e0e\u5176\u4ed6\u5c01\u88c5\u65b9\u6cd5(\u5982IPIP\u3001GUE\u548cGeneve)\u76f8\u6bd4\uff0c\u6211\u4eec\u89c9\u5f97Foo-over-UDP\u5728\u529f\u80fd\u548c\u7075\u6d3b\u6027\u4e4b\u95f4\u53d6\u5f97\u4e86\u5f88\u597d\u7684\u5e73\u8861\u3002\u76f4\u63a5\u670d\u52a1\u5668\u8fd4\u56de(\u5176\u4e2d\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u76f4\u63a5\u56de\u590d\u5ba2\u6237\u7aef\u5e76\u7ed5\u8fc7\u8d1f\u8f7d\u5747\u8861\u5668)\u4f5c\u4e3a\u5c01\u88c5\u7684\u526f\u4ea7\u54c1\u5b9e\u73b0\u3002\u6ca1\u6709\u4e0e\u5c01\u88c5\u76f8\u5173\u8054\u7684\u72b6\u6001\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u53ea\u9700\u8981\u4e00\u4e2a\u5c01\u88c5\u63a5\u53e3\u5373\u53ef\u4ece\u6240\u6709\u8d1f\u8f7d\u5e73\u8861\u5668\u63a5\u6536\u6d41\u91cf\u3002\n#\u52a0\u8f7dIPV\u548cFOU\u6240\u9700\u7684\u5185\u6838\u6a21\u5757\u3002$modProbe IP_VS&amp\uff1b&amp\uff1bmodProbe IP_VS_mh&amp\uff1b&amp\uff1bmodProbe Fou#\u5728\u8d1f\u8f7d\u5747\u8861\u5668\u548c#\u4e00\u4e2a\u5e94\u7528\u670d\u52a1\u5668\u4e4b\u95f4\u521b\u5efa\u4e00\u6761\u96a7\u9053\u3002IP\u5c31\u662f\u673a\u5668&#39\uff1b#\u7f51\u7edc\u4e0a\u7684\u771f\u5b9eIP\u3002$IP link add name lbtun1 type ipip\\remote 192.0.2.1 local 192.0.2.2 ttl 2\\encap fou encap-SPORT auto encap-dport 5555#\u901a\u77e5\u5185\u6838\u6709\u5173\u53ef\u80fd\u5728\u6b64\u5904\u901a\u544a\u7684VIP\u7684\u4fe1\u606f\u3002$IP route add table local local 198.51.100.0/24\\dev lo proto kernel#\u4e3a\u96a7\u9053\u63d0\u4f9b\u6b64\u8ba1\u7b97\u673a\u672c\u5730\u7684IP\u5730\u5740\u3002#\u6b64\u8ba1\u7b97\u673a\u4e0a\u53d1\u5f80\u6b64IP\u5730\u5740\u7684\u901a\u4fe1\u5c06#\u6cbf\u96a7\u9053\u5411\u4e0b\u53d1\u9001\u3002\u5e76\u4e14\u5b83\u5e94\u8be5\u4f7f\u7528#MagLev\u8c03\u5ea6\u7a0b\u5e8f\u3002$ipvsadm-A-t 198.51.100.1\uff1a80-s mh#\u544a\u8bc9IPV\u6b64\u670d\u52a1\u7684\u540e\u7aef\u3002$ipvsadm-a-t 198.51.100.1\uff1a80-r 203.0.113.1\uff1a80\u3002\n#\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u3002$modproto fou#\u8bbe\u7f6eIPIP\u63a5\u6536\u5668\u3002#ipproto 4=IPIP(\u4e0d\u662fIPv4)$ip for add port 5555 ipproto 4#\u542f\u52a8\u96a7\u9053\u3002$ip link set dev tunl0 up#\u5728\u96a7\u9053\u63a5\u53e3\u4e0a\u7981\u7528\u53cd\u5411\u8def\u5f84\u7b5b\u9009\u3002$sysctl-w net.ipv4.conf.tunl0.rp_filter=0$sysctl-w net.ipv4.conf.all.rp_filter=0\u3002\nIPVS\u4e0d\u652f\u6301\u5c06\u57fa\u4e8eUDP\u7684Foo-over-UDP\u4f5c\u4e3a\u6570\u636e\u5305\u8f6c\u53d1\u65b9\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u9650\u5236\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u865a\u62df\u63a5\u53e3\u6765\u5b9e\u73b0foo-over-UDP\u5c01\u88c5\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528IPVS\u7684\u76f4\u63a5\u6570\u636e\u5305\u8f6c\u53d1\u65b9\u6cd5\u548c\u5185\u6838\u8def\u7531\u8868\u6765\u9009\u62e9\u7279\u5b9a\u7684\u63a5\u53e3\u3002\nLinux\u901a\u5e38\u88ab\u914d\u7f6e\u4e3a\u5ffd\u7565\u5230\u8fbe\u4e0e\u7528\u4e8e\u5e94\u7b54\u7684\u63a5\u53e3\u4e0d\u540c\u7684\u63a5\u53e3\u7684\u6570\u636e\u5305\u3002\u7531\u4e8e\u6570\u636e\u5305\u73b0\u5728\u5c06\u5230\u8fbe\u865a\u62dfTunl0&34\uff1b\u63a5\u53e3\uff0c\u6211\u4eec\u9700\u8981\u5728\u6b64\u63a5\u53e3\u4e0a\u7981\u7528\u53cd\u5411\u8def\u5f84\u8fc7\u6ee4\u3002\u5185\u6838\u4f7f\u7528\u547d\u540d\u63a5\u53e3\u548c\u6240\u6709\u63a5\u53e3\u4e2d\u8f83\u9ad8\u7684\u503c\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u51cf\u5c11&#34\uff1b\u6240\u6709&#34\uff1b\u5e76\u8c03\u6574\u5176\u4ed6\u63a5\u53e3\u3002\n\u6211\u4eec\u4ece\u4e92\u8054\u7f51\u63a5\u53d7\u7684\u6700\u5927IPv4\u6570\u636e\u5305\u5927\u5c0f\u6216\u6700\u5927\u4f20\u8f93\u5355\u4f4d(MTU)\u662f1500\u5b57\u8282\u3002\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u5728\u5c01\u88c5\u671f\u95f4\u4e0d\u4f1a\u5bf9\u8fd9\u4e9b\u6570\u636e\u5305\u8fdb\u884c\u5206\u6bb5\uff0c\u6211\u4eec\u5c06\u5185\u90e8MTU\u4ece\u9ed8\u8ba4\u503c\u589e\u52a0\uff0c\u4ee5\u9002\u5e94IP\u548cUDP\u62a5\u5934\u3002\n\u56e2\u961f\u4f4e\u4f30\u4e86\u5728\u6211\u4eec\u6240\u6709\u7684\u8bbe\u5907\u673a\u67b6\u4e0a\u66f4\u6362MTU\u7684\u590d\u6742\u6027\u3002\u6211\u4eec\u5fc5\u987b\u8c03\u6574\u6240\u6709\u8def\u7531\u5668\u548c\u4ea4\u6362\u673a\u7684MTU\uff0c\u8c03\u6574\u7ed1\u5b9a\u548cVXLAN\u63a5\u53e3\u7684MTU\uff0c\u6700\u540e\u8c03\u6574\u6211\u4eec\u7684FOO-Over-UDP\u5c01\u88c5\u3002\u5373\u4f7f\u7ecf\u8fc7\u7cbe\u5fc3\u7b56\u5212\u7684\u63a8\u5e7f\uff0c\u6211\u4eec\u4ecd\u7136\u53d1\u73b0\u4e86\u4ea4\u6362\u673a\u548c\u670d\u52a1\u5668\u5806\u6808\u4e2d\u4e0eMTU\u76f8\u5173\u7684\u9519\u8bef\uff0c\u5176\u4e2d\u8bb8\u591a\u9519\u8bef\u9996\u5148\u8868\u73b0\u4e3a\u7f51\u7edc\u5176\u4ed6\u90e8\u5206\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u8fd0\u884c\u5728\u6bcf\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u4e0a\u7684GO\u4ee3\u7406\uff0c\u5b83\u4e0e\u8ddf\u8e2a\u670d\u52a1\u4f4d\u7f6e\u7684\u63a7\u5236\u5e73\u9762\u5c42\u540c\u6b65\u3002\u7136\u540e\uff0c\u4ee3\u7406\u6839\u636e\u6d3b\u52a8\u670d\u52a1\u548c\u53ef\u7528\u7684\u540e\u7aef\u670d\u52a1\u5668\u914d\u7f6e\u7cfb\u7edf\u3002\n\u4e3a\u4e86\u914d\u7f6eIPV\u548c\u8def\u7531\u8868\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u57fa\u4e8eNetLink Go\u5305\u6784\u5efa\u7684\u5305\u3002\u6211\u4eec\u91cd\u65b0\u5f00\u6e90\u4e86\u6211\u4eec\u4eca\u5929\u6784\u5efa\u7684IPVS NetLink\u5305\uff0c\u5b83\u652f\u6301\u67e5\u8be2\u3001\u521b\u5efa\u548c\u66f4\u65b0IPVS\u865a\u62df\u670d\u52a1\u5668\u3001\u76ee\u7684\u5730\u548c\u7edf\u8ba1\u6570\u636e\u3002\n\u4e0d\u5e78\u7684\u662f\uff0ciptables\u6ca1\u6709\u6b63\u5f0f\u7684\u7f16\u7a0b\u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u6539\u4e3a\u6267\u884ciptables\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4ee3\u7406\u8ba1\u7b97\u4e00\u7ec4\u7406\u60f3\u7684iptables\u94fe\u548c\u89c4\u5219\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u6d3b\u52a8\u89c4\u5219\u8fdb\u884c\u534f\u8c03\u3002\n*filter-A input-d 198.51.100.0/24-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1anhAi5v93jwQYcJuK&#34\uff1b-j LEIFR-LB-A LEIFR-LB-d 198.51.100.1/32-p TCP-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1aG4qtNUVFCkLCu4yt&#34\uff1b-m multiport-dports 80-j Leiport\u3002-j Accept-A Leiur-GQ4OKHRLCJYOWIN9-s 172.16.0.0/12-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1a0XxZ2OwlQWzIYFTD&#34\uff1b-j Accept\u3002\n\u89c4\u5219\u7684iptables\u8f93\u51fa\u53ef\u80fd\u4e0e\u7406\u60f3\u89c4\u5219\u63d0\u4f9b\u7684\u8f93\u5165\u6709\u5f88\u5927\u4e0d\u540c\u3002\u4e3a\u4e86\u907f\u514d\u5728\u6bd4\u8f83\u4e2d\u89e3\u6790\u6574\u4e2aiptables\u89c4\u5219\uff0c\u6211\u4eec\u5c06\u89c4\u5219\u7684\u6563\u5217(\u5305\u62ec\u94fe\u4e2d\u7684\u4f4d\u7f6e)\u5b58\u50a8\u4e3aiptables\u6ce8\u91ca\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6ce8\u91ca\u4e0e\u7406\u60f3\u89c4\u5219\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\u3002\u5728\u5171\u4eab\u7684\u94fe(\u5982\u8f93\u5165)\u4e0a\uff0c\u4ee3\u7406\u5ffd\u7565\u975e\u6258\u7ba1\u89c4\u5219\u3002\n\u6211\u4eec\u4f7f\u7528\u8fd9\u91cc\u4ecb\u7ecd\u7684\u7f51\u7edc\u8d1f\u8f7d\u5747\u8861\u4f5c\u4e3aKubernetes\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u63a7\u5236\u5668\u4e3a\u8bf7\u6c42\u8d1f\u8f7d\u5747\u8861IP\u7684Kubernetes\u670d\u52a1\u5206\u914d\u865a\u62dfIP\u5730\u5740\u3002\u8fd9\u4e9bIP\u7531\u4ee3\u7406\u5728IPVS\u4e2d\u914d\u7f6e\u3002\u6d41\u91cf\u5c06\u5b9a\u5411\u5230\u7fa4\u96c6\u8282\u70b9\u7684\u5b50\u96c6\uff0c\u7531Kube-Proxy\u5904\u7406\uff0c\u9664\u975e\u5916\u90e8\u6d41\u91cf\u7b56\u7565\u8bbe\u7f6e\u4e3a&#34\uff1bLocal&#34\uff1b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d41\u91cf\u5c06\u53d1\u9001\u5230\u8fd0\u884c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7279\u5b9a\u540e\u7aef\u3002\n\u8fd9\u5141\u8bb8\u6211\u4eec\u62e5\u6709\u5185\u90e8Kubernetes\u96c6\u7fa4\uff0c\u66f4\u597d\u5730\u590d\u5236\u4e91\u63d0\u4f9b\u5546\u4e0a\u6258\u7ba1\u96c6\u7fa4\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u884c\u4e3a\u3002\u8fd0\u884cKubernetes\u7684\u670d\u52a1(\u5982\u5165\u53e3\u63a7\u5236\u5668\u3001API\u7f51\u5173\u548c\u6570\u636e\u5e93)\u53ef\u4ee5\u8bbf\u95ee\u8d1f\u8f7d\u5747\u8861\u6d41\u91cf\u7684\u6b63\u786e\u5ba2\u6237\u7aefIP\u5730\u5740\u3002\n\u7ee7\u7eed\u5bc6\u5207\u5173\u6ce8IPV\u548c\u66ff\u4ee3\u65b9\u6848\u7684\u672a\u6765\u53d1\u5c55\uff0c\u5305\u62ecnftlb\u548cExpress data path(XDP)\u4ee5\u53caeBPF\u3002\n\u8fc1\u79fb\u5230nftables\u3002\u5355\u4e00\u7684\u4f18\u5148\u7ea7\u548c\u7f3a\u4e4fiptables\u7684\u53ef\u7f16\u7a0b\u63a5\u53e3\u4f7f\u5f97\u5b83\u4e0d\u9002\u5408\u5c06\u81ea\u52a8\u89c4\u5219\u4e0e\u64cd\u4f5c\u5458\u6dfb\u52a0\u7684\u89c4\u5219\u4e00\u8d77\u5305\u542b\u3002\u6211\u4eec\u5e0c\u671b\u968f\u7740\u66f4\u591a\u7684\u9879\u76ee\u548c\u8fd0\u8425\u8f6c\u79fb\u5230nftable\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5728\u4e0d\u9020\u6210\u8fd0\u8425\u76f2\u70b9\u7684\u60c5\u51b5\u4e0b\u5207\u6362\u5230nftable\u3002\n\u7531\u4e8eBGP\u4fdd\u7559\u8ba1\u65f6\u5668\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u6545\u969c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e34\u65f6\u4e2d\u65ad\u3002\u6211\u4eec\u5e0c\u671b\u6539\u8fdb\u6211\u4eec\u5904\u7406BGP\u4f1a\u8bdd\u6545\u969c\u7684\u65b9\u5f0f\u3002\n\u7814\u7a76\u4f7f\u7528\u8f7b\u91cf\u7ea7\u96a7\u9053\u6765\u51cf\u5c11\u8d1f\u8f7d\u5747\u8861\u5668\u8282\u70b9\u4e0a\u9700\u8981\u7684foo-over-UDP\u63a5\u53e3\u6570\u3002\n\u4f7f\u7528Linux\u5b9e\u73b0\u591a\u5c42\u8d1f\u8f7d\u5747\u8861\u3002\u6587\u68ee\u7279\u00b7\u4f2f\u7eb3\u7279(2018)\u3002\u63cf\u8ff0\u4f7f\u7528IPVS\u548cIPIP\u7684\u7f51\u7edc\u8d1f\u8f7d\u5e73\u8861\u5668\u3002\n\u4ecb\u7ecdGitHub\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4e54\u00b7\u5a01\u5ec9\u59c6\u65af\uff0c\u897f\u5965\u00b7\u6731\u5229\u5b89(2017)\u3002\u63cf\u8ff0\u4e86\u7c7b\u4f3c\u7684\u62c6\u5206\u7b2c4\u5c42\u548c\u7b2c7\u5c42\u67b6\u6784\uff0c\u4f7f\u7528\u4e00\u81f4\u7684\u54c8\u5e0c\u548cUDP\u4e0a\u7684Foo-over-UDP\u3002\u4ed6\u4eec\u4f3c\u4e4e\u5bf9IPV\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u4e9b\u9650\u5236\u4f3c\u4e4e\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\nFOO OVER UDP\u3002\u4e54\u7eb3\u68ee\u00b7\u79d1\u6bd4\u7279(2014)\u3002\u63cf\u8ff0IPIP\u548c\u5f53\u65f6\u521a\u521a\u4ecb\u7ecd\u7684foo-over-UDP\u7684\u57fa\u7840\u77e5\u8bc6\u3002\nUDP\u5c01\u88c5\u3001FOU\u3001GUE\u548cRCO\u3002\u6c64\u59c6\u00b7\u8d6b\u4f2f\u7279(2015)\u3002\u4ecb\u7ecd\u4e0d\u540c\u7684UDP\u5c01\u88c5\u9009\u9879\u3002\nBFD(\u53cc\u5411\u8f6c\u53d1\u68c0\u6d4b)\uff1a\u6709\u6548\u5417\uff1f\u503c\u5f97\u5417\uff1f\u6c64\u59c6\u5b66\u6821(2009)\u3002\u8ba8\u8bba\u4f7f\u7528\u901a\u7528\u534f\u8bae\u7684BFD\uff0c\u4ee5\u53ca\u5b83\u5728\u54ea\u91cc\u4f1a\u6210\u4e3a\u95ee\u9898\u3002\n\u8d1f\u8f7d\u5e73\u8861\u78c1\u60ac\u6d6e\u53ef\u7528\u6027", "note_en": "We run many backend services that power our customer dashboard, APIs, and features available at our edge. We own and operate physical infrastructure for our backend services. We need an effective way to route arbitrary TCP and UDP traffic between services and also from outside these data centers.\n Previously, all traffic for these backend services would pass through several layers of stateful TCP proxies and NATs before reaching an available instance. This solution worked for several years, but as we grew it caused our service and operations teams many issues. Our service teams needed to deal with drops of availability, and our operations teams had much toil when needing to do maintenance on load balancer servers.\n  With the experience with our stateful TCP proxy and NAT solutions in mind, we had several goals for a replacement load balancing service, while remaining on our own infrastructure:\n Preserve source IPs through routing decisions to destination servers. This allows us to support servers that require client IP addresses as part of their operation, without workarounds such as X-Forwarded-For headers or the PROXY TCP extension.\n Support an architecture where backends are located across many racks and subnets. This prevents solutions that cannot be routed by existing network equipment.\n Allow operation teams to perform maintenance with zero downtime. We should be able to remove load balancers at any time without causing any connection resets or downtime for services.\n Use Linux tools and features that are commonplace and well-tested. There are a lot of very cool networking features in Linux we could experiment with, but we wanted to optimize for least surprising behavior for operators who do not primarily work with these load balancers.\n No explicit connection synchronization between load balancers. We found that communication between load balancers significantly increased the system complexity, allowing for more opportunities for things to go wrong.\n Allow for staged rollout from the previous load balancer implementation. We should be able to migrate the traffic of specific services between the two implementations to find issues and gain confidence in the system.\n    Previously, when traffic arrived at our backend data centers, our routers would pick and forward packets to one of the L4 load balancers servers it knew about. \u00a0These L4 load balancers would determine what service the traffic was for, then forward the traffic to one of the service&#39;s L7 servers.\n This architecture worked fine during normal operations. However, issues would quickly surface whenever the set of load balancers changed. Our routers would forward traffic to the new set and it was very likely traffic would arrive to a different load balancer than before. As each load balancer maintained its own connection state, it would be unable to forward \u00a0traffic for these new in-progress connections. These connections would then be reset, potentially causing errors for our customers.\n   During normal operations, our new architecture has similar behavior to the previous design. A L4 load balancer would be selected by our routers, which would then forward traffic to a service&#39;s L7 server.\n There&#39;s a significant change when the set of load balancers changes. As our load balancers are now stateless, it doesn&#39;t matter which load balancer our router selects to forward traffic to, they&#39;ll end up reaching the same backend server.\n   Our load balancer servers announce service IP addresses to our data centers\u2019 routers using BGP, unchanged from the previous solution. Our routers choose which load balancers will receive packets based on a routing strategy called equal-cost multi-path routing (ECMP).\n ECMP hashes information from packets to pick a path for that packet. The hash function used by routers is often fixed in firmware. Routers that chose a poor hashing function, or chose bad inputs, can create unbalanced network and server load, or break assumptions made by the protocol layer.\n We worked with our networking team to ensure ECMP is configured on our routers to hash only based on the packet&#39;s 5-tuple\u2014the protocol, source address and port, and destination address and port.\n For maintenance, our operators can withdraw the BGP session and traffic will transparently shift to other load balancers. However, if a load balancer suddenly becomes unavailable, such as with a kernel panic or power failure, there is a short delay before the BGP keepalive mechanism fails and routers terminate the session.\n It&#39;s possible for routers to terminate BGP sessions after a much shorter delay using the Bidirectional Forwarding Detection (BFD) protocol between the router and load balancers. Different routers have different limitations and restrictions on BFD that makes it difficult to use in an environment heavily using L2 link aggregation and VXLANs.\n We&#39;re continuing to work with our networking team to find solutions to reduce the time to terminate BGP sessions, using tools and configurations they&#39;re most comfortable with.\n  To ensure all load balancers are sending traffic to the same backends, we decided to use the  Maglev connection scheduler. Maglev is a consistent hash scheduler hashing a 5-tuple of information from each packet\u2014the protocol, source address and port, and destination address and port\u2014to determine a backend server.\n By being a consistent hash, the same backend server is chosen by every load balancer for a packet without needing to persist any connection state. This allows us to transparently move traffic between load balancers without requiring explicit connection synchronization between them.\n  Where possible, we wanted to use commonplace and reliable Linux features. Linux has implemented a powerful layer 4 load balancer, the IP Virtual Server (IPVS), since the early 2000s. IPVS has supported the Maglev scheduler  since Linux 4.18.\n  Our load balancer and application servers are spread across multiple racks and subnets. To route traffic from the load balancer we opted to use Foo-Over-UDP encapsulation.\n In Foo-Over-UDP encapsulation a new IP and UDP header are added around the original packet. When these packets arrive on the destination server, the Linux kernel removes the outer IP and UDP headers and inserts the inner payload back into the networking stack for processing as if the packet had originally been received on that server.\n Compared to other encapsulation methods\u2014such as IPIP, GUE, and GENEVE\u2014we felt Foo-Over-UDP struck a nice balance between features and flexibility. Direct Server Return, where application servers reply directly to clients and bypass the load balancers, was implemented as a byproduct of the encapsulation. There was no state associated with the encapsulation, each server only required one encapsulation interface to receive traffic from all load balancers.\n  # Load in the kernel modules required for IPVS and FOU.$ modprobe ip_vs &amp;&amp; modprobe ip_vs_mh &amp;&amp; modprobe fou# Create one tunnel between the load balancer and# an application server. The IPs are the machines&#39;# real IPs on the network.$ ip link add name lbtun1 type ipip \\remote 192.0.2.1 local 192.0.2.2 ttl 2 \\encap fou encap-sport auto encap-dport 5555# Inform the kernel about the VIPs that might be announced here.$ ip route add table local local 198.51.100.0/24 \\dev lo proto kernel# Give the tunnel an IP address local to this machine.# Traffic on this machine destined for this IP address will# be sent down the tunnel.$ ip route add 203.0.113.1 dev lbtun1 scope link# Tell IPVS about the service, and that it should use the# Maglev scheduler.$ ipvsadm -A -t 198.51.100.1:80 -s mh# Tell IPVS about a backend for this service.$ ipvsadm -a -t 198.51.100.1:80 -r 203.0.113.1:80\n  # The kernel module may need to be loaded.$ modprobe fou# Setup an IPIP receiver.# ipproto 4 = IPIP (not IPv4)$ ip fou add port 5555 ipproto 4# Bring up the tunnel.$ ip link set dev tunl0 up# Disable reverse path filtering on tunnel interface.$ sysctl -w net.ipv4.conf.tunl0.rp_filter=0$ sysctl -w net.ipv4.conf.all.rp_filter=0\n IPVS does not support Foo-Over-UDP as a packet forwarding method. To work around this limitation, we&#39;ve created virtual interfaces that implement Foo-Over-UDP encapsulation. We can then use IPVS&#39;s direct packet forwarding method along with the kernel routing table to choose a specific interface.\n Linux is often configured to ignore packets that arrive on an interface that is different from the interface used for replies. As packets will now be arriving on the virtual &#34;tunl0&#34; interface, we need to disable reverse path filtering on this interface. The kernel uses the higher value of the named and &#34;all&#34; interfaces, so you may need to decrease &#34;all&#34; and adjust other interfaces.\n  The maximum IPv4 packet size, or maximum transmission unit (MTU), we accept from the internet is 1500 bytes. To ensure we did not fragment these packets during encapsulation we increased our internal MTUs from the default to accommodate the IP and UDP headers.\n The team had underestimated the complexity of changing the MTU across all our racks of equipment. We had to adjust the MTU across all our routers and switches, of our bonded and VXLAN interfaces, and finally our Foo-Over-UDP encapsulation. Even with a carefully orchestrated rollout, and we still uncovered MTU-related bugs with our switches and server stack, many of which manifested first as issues on other parts of the network.\n  We&#39;ve written a Go agent running on each load balancer that synchronizes with a control plane layer that&#39;s tracking the location of services. The agent then configures the system based on active services and available backend servers.\n To configure IPVS and the routing table we&#39;re using packages built upon the  netlink Go package. We&#39;re open sourcing the IPVS netlink package we built today, which supports querying, creating and updating IPVS virtual servers, destinations, and statistics.\n Unfortunately, there is no official programming interface for iptables, so we must instead execute the iptables binary. The agent computes an ideal set of iptables chains and rules, which is then reconciled with the live rules.\n  *filter-A INPUT -d 198.51.100.0/24 -m comment --comment \\&#34;leif:nhAi5v93jwQYcJuK&#34; -j LEIFUR-LB-A LEIFUR-LB -d 198.51.100.1/32 -p tcp -m comment --comment \\&#34;leif:G4qtNUVFCkLCu4yt&#34; -m multiport --dports 80 -j LEIFUR-GQ4OKHRLCJYOWIN9-A LEIFUR-GQ4OKHRLCJYOWIN9 -s 10.0.0.0/8 -m comment --comment \\&#34;leif:G4qtNUVFCkLCu4yt&#34; -j ACCEPT-A LEIFUR-GQ4OKHRLCJYOWIN9 -s 172.16.0.0/12 -m comment --comment \\&#34;leif:0XxZ2OwlQWzIYFTD&#34; -j ACCEPT\n The iptables output of a rule may differ significantly from the input given by our ideal rule. To avoid needing to parse the entire iptables rule in our comparisons, we store a hash of the rule, including the position in the chain, as an iptables comment. We then can compare the comment to our ideal rule to determine if we need to take any actions. On chains that are shared (such as INPUT) the agent ignores unmanaged rules.\n  We use the network load balancer described here as a cloud load balancer for Kubernetes. A controller assigns virtual IP addresses to Kubernetes services requesting a load balancer IP. These IPs get configured by the agent in IPVS. Traffic is directed to a subset of cluster nodes for handling by kube-proxy, unless the External Traffic Policy is set to &#34;Local&#34; in which case the traffic is sent to the specific backends the workloads are running on.\n This allows us to have internal Kubernetes clusters that better replicate the load balancer behavior of managed clusters on cloud providers. Services running Kubernetes, such as ingress controllers, API gateways, and databases, have access to correct client IP addresses of load balanced traffic.\n  Continuing a close eye on future developments of IPVS and alternatives, including nftlb and Express Data Path (XDP) and eBPF.\n Migrate to nftables. The &#34;flat priorities&#34; and lack of programmable interface for iptables makes it ill-suited for including automated rules alongside rules added by operators. We hope as more projects and operations move to nftables we&#39;ll be able to switch without creating a &#34;blind-spot&#34; to operations.\n Failures of a load balancer can result in temporary outages due to BGP hold timers. We&#39;d like to improve how we&#39;re handling the failures with BGP sessions.\n Investigate using Lightweight Tunnels to reduce the number of Foo-Over-UDP interfaces are needed on the load balancer nodes.\n  Multi-tier load-balancing with Linux. Vincent Bernat (2018). Describes a network load balancer using IPVS and IPIP.\n Introducing the GitHub Load Balancer. Joe Williams, Theo Julienne (2017). Describes a similar split layer 4 and layer 7 architecture, using consistent hashing and Foo-Over-UDP. They seemed to have limitations with IPVS that looked to have been resolved.\n Foo over UDP. Jonathan Corbet (2014). Describes the basics of IPIP and Foo-Over-UDP, which was just introduced at the time.\n UDP encapsulation, FOU, GUE, &amp; RCO. Tom Herbert (2015). Describes the different UDP encapsulation options.\n  BFD (Bidirectional Forwarding Detection): Does it work and is it worth it?. Tom School (2009). Discussion on BFD with common protocols and where it can become a problem.\n  Load Balancing  Maglev  Availability", "posttime": "2020-06-11 01:05:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u78c1\u60ac\u6d6e,availability", "title": "\u91c7\u7528\u78c1\u60ac\u6d6e\u6280\u672f\u7684\u9ad8\u53ef\u7528\u6027\u8d1f\u8f7d\u5747\u8861\u5668", "title_en": "High Availability Load Balancers with Maglev", "transed": 1, "url": "https://blog.cloudflare.com/high-availability-load-balancers-with-maglev/", "via": "", "real_tags": ["\u78c1\u60ac\u6d6e"]}, {"category": "", "categoryclass": "", "imagename": "064216e2a2ce474d4f90d4d4d5add6fc.png", "infoid": 1006034, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u5bf9\u4e8eDART\u56e2\u961f\u6765\u8bf4\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u96f6\u5b89\u5168\u5de5\u4f5c\u7684\u6280\u672f\u9884\u89c8\u3002\u7a7a\u5b89\u5168\u6027\u53ef\u4ee5\u5e2e\u52a9\u60a8\u907f\u514d\u4e00\u7c7b\u901a\u5e38\u5f88\u96be\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u4f5c\u4e3a\u4e00\u4e2a\u989d\u5916\u7684\u597d\u5904\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4e00\u7cfb\u5217\u6027\u80fd\u6539\u8fdb\u3002\u6211\u4eec\u73b0\u5728\u53d1\u5e03\u65e9\u671f\u7684\u6280\u672f\u9884\u89c8\uff0c\u6211\u4eec\u671f\u5f85\u60a8\u7684\u53cd\u9988\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86DART\u56e2\u961f\u63a8\u51fa\u96f6\u5b89\u5168\u7684\u8ba1\u5212\u3002\u5b83\u8fd8\u89e3\u91ca\u4e86\u6211\u4eec\u6240\u8bf4\u7684\u58f0\u97f3\u7a7a\u5b89\u5168\u6027\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u540c\u4e8e\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u91c7\u7528\u7684\u65b9\u6cd5\u3002\nDART\u662f\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u8bed\u8a00\u3002\u8fd9\u610f\u5473\u7740\u5f53\u60a8\u83b7\u5f97\u67d0\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u5c5e\u4e8e\u8be5\u7c7b\u578b\u3002\u4f46\u662f\u7c7b\u578b\u5b89\u5168\u672c\u8eab\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u3002\n\u7a7a\u9519\u8bef\u975e\u5e38\u5e38\u89c1\u3002\u5728GitHub\u4e0a\u641c\u7d22\u4f1a\u53d1\u73b0\u6570\u5343\u4e2a\u7531DART\u4ee3\u7801\u4e2d\u7684\u7a7a\u503c\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u751a\u81f3\u8fd8\u6709\u6570\u5343\u4e2a\u63d0\u4ea4\u8bd5\u56fe\u4fee\u590d\u8fd9\u4e9b\u95ee\u9898\u3002\n\u5c1d\u8bd5\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u53d1\u73b0\u53ef\u7a7a\u6027\u95ee\u9898\uff1a\n\u5982\u679c\u4f7f\u7528NULL\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u80af\u5b9a\u4f1a\u5931\u8d25\uff0c\u4f46\u8fd8\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\u9700\u8981\u8003\u8651\uff1a\nvoid main(){//\u9519\u8bef\u60c5\u51b51\uff1a\u5c06NULL\u4f20\u9012\u7ed9\u6587\u4ef6\u3002printLengths(Null)\uff1b//\u9519\u8bef\u60c5\u51b52\uff1a\u4f20\u9012\u6587\u4ef6\u5217\u8868\uff0c\u5305\u542bnull\u9879\u3002printLengths([File(&#39\uff1bfilename1&#39\uff1b)\uff0cFile(&#39\uff1bfilename2&#39\uff1b)\uff0cnull])\uff1b}\u3002\n\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\uff0c\u60a8\u53ef\u4ee5\u66f4\u6709\u4fe1\u5fc3\u5730\u5bf9\u4ee3\u7801\u8fdb\u884c\u63a8\u7406\u3002\u4e0d\u518d\u51fa\u73b0\u4ee4\u4eba\u8ba8\u538c\u7684\u8fd0\u884c\u65f6\u7a7a\u53d6\u6d88\u5f15\u7528\u9519\u8bef\u3002\u76f8\u53cd\uff0c\u60a8\u5728\u7f16\u7801\u65f6\u4f1a\u6536\u5230\u9759\u6001\u9519\u8bef\u3002\nDART\u7684\u96f6\u5b89\u5168\u662f\u53ef\u9760\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cDART\u767e\u5206\u4e4b\u767e\u786e\u5b9a\u6587\u4ef6\u5217\u8868\u548c\u5176\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u4e3a\u7a7a\u3002\u5f53DART\u5206\u6790\u60a8\u7684\u4ee3\u7801\u5e76\u786e\u5b9a\u67d0\u4e2a\u53d8\u91cf\u4e0d\u53ef\u4e3a\u7a7a\u65f6\uff0c\u8be5\u53d8\u91cf\u59cb\u7ec8\u4e0d\u53ef\u4e3a\u7a7a\uff1a\u5982\u679c\u60a8\u5728\u8c03\u8bd5\u5668\u4e2d\u68c0\u67e5\u6b63\u5728\u8fd0\u884c\u7684\u4ee3\u7801\uff0c\u60a8\u5c06\u770b\u5230\u5728\u8fd0\u884c\u65f6\u4fdd\u6301\u4e0d\u53ef\u4e3a\u7a7a\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5176\u4ed6\u4e00\u4e9b\u5b9e\u73b0\u5e76\u4e0d\u53ef\u9760\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u4ecd\u7136\u9700\u8981\u6267\u884c\u8fd0\u884c\u65f6\u7a7a\u68c0\u67e5\u3002DART\u4e0eSWIFT\u5171\u4eab\u542c\u8d77\u6765\u50cf\u96f6\u7684\u5b89\u5168\u6027\uff0c\u4f46\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e0d\u662f\u5f88\u591a\u3002\nDART\u7684\u7a7a\u5b89\u5168\u6027\u7684\u5065\u58ee\u6027\u8fd8\u6709\u53e6\u4e00\u4e2a\u503c\u5f97\u6b22\u8fce\u7684\u542b\u4e49\uff1a\u5b83\u610f\u5473\u7740\u60a8\u7684\u7a0b\u5e8f\u53ef\u4ee5\u66f4\u5c0f\u3001\u66f4\u5feb\u3002\u7531\u4e8eDART\u786e\u5b9e\u786e\u5b9a\u6587\u4ef6\u4e0d\u4f1a\u4e3a\u7a7a\uff0c\u56e0\u6b64DART\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u3002\u4f8b\u5982\uff0cDART Ahead-of-time(AOT)\u7f16\u8bd1\u5668\u53ef\u4ee5\u751f\u6210\u66f4\u5c0f\u3001\u66f4\u5feb\u7684\u672c\u673a\u4ee3\u7801\uff0c\u56e0\u4e3a\u5f53\u5b83\u77e5\u9053\u67d0\u4e2a\u53d8\u91cf\u4e0d\u4e3aNULL\u65f6\uff0c\u5b83\u4e0d\u9700\u8981\u6dfb\u52a0\u5bf9NULL\u7684\u68c0\u67e5\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u5e0c\u671b\u7684\u521d\u6b65\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u770b\u5230\u6a21\u62df\u5178\u578b\u98a4\u52a8\u6846\u67b6\u6e32\u67d3\u6a21\u5f0f\u7684\u5fae\u57fa\u51c6\u6d4b\u8bd5\u7684\u6027\u80fd\u63d0\u9ad8\u4e8619%\u3002\n\u5728\u5f00\u59cb\u96f6\u5b89\u5168\u8be6\u7ec6\u8bbe\u8ba1\u4e4b\u524d\uff0cDART\u56e2\u961f\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6838\u5fc3\u539f\u5219\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u53ef\u4e3a\u7a7a\u3002\u9664\u975e\u60a8\u663e\u5f0f\u5730\u544a\u8bc9DART\u53d8\u91cf\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5426\u5219\u5b83\u5c06\u8ba4\u4e3a\u8be5\u53d8\u91cf\u4e0d\u53ef\u4e3a\u7a7a\u3002\u6211\u4eec\u9009\u62e9\u6b64\u9009\u9879\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u975eNULL\u662fAPI\u4e2d\u6700\u5e38\u89c1\u7684\u9009\u62e9\u3002\n\u9010\u6e10\u53ef\u91c7\u7528\u7684\u3002\u5916\u9762\u6709\u5f88\u591aDART\u4ee3\u7801\u3002\u5fc5\u987b\u80fd\u591f\u9010\u4e2a\u90e8\u5206\u5730\u589e\u91cf\u5730\u8fc1\u79fb\u5230\u96f6\u5b89\u5168\u3002\u5728\u540c\u4e00\u9879\u76ee\u4e2d\u5e94\u8be5\u53ef\u4ee5\u6709\u7a7a\u5b89\u5168\u4ee3\u7801\u548c\u975e\u7a7a\u5b89\u5168\u4ee3\u7801\u3002\u6211\u4eec\u8fd8\u5c06\u63d0\u4f9b\u5de5\u5177\u6765\u5e2e\u52a9\u60a8\u8fdb\u884c\u8fc1\u79fb\u3002\n\u5b8c\u597d\u65e0\u635f\u3002\u5982\u4e0a\u6240\u8ff0\uff0cDART\u7684\u96f6\u5b89\u5168\u6027\u662f\u53ef\u9760\u7684\u3002\u4e00\u65e6\u60a8\u5c06\u6574\u4e2a\u9879\u76ee\u548c\u4f9d\u8d56\u9879\u8fc1\u79fb\u5230\u96f6\u5b89\u5168\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u5f97\u5065\u5168\u6027\u7684\u5168\u90e8\u597d\u5904\u3002\n\u6838\u5fc3\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4e0d\u53ef\u4e3a\u7a7a\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u58f0\u660e\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4e0d\u53ef\u4e3a\u7a7a\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u56e0\u6b64\u8fd9\u4e9b\u58f0\u660e\u770b\u8d77\u6765\u5c31\u50cf\u4eca\u5929\u4e00\u6837\uff0c\u4f46\u5b83\u4eec\u7684\u542b\u4e49\u53d1\u751f\u4e86\u53d8\u5316\u3002\n//\u5728\u7a7a\u5b89\u5168DART\u4e2d\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u80fd\u4e3a\u7a7a\u3002var i=42\uff1b\u6700\u540eb=foo()\uff1b\u5b57\u7b26\u4e32m=&#39\uff1b&#39\uff1b\uff1b\nDART\u5c06\u786e\u4fdd\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u5c06NULL\u8d4b\u7ed9\u4e0a\u8ff0\u4efb\u4f55\u53d8\u91cf\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u4e00\u5343\u884c\u4e4b\u540e\u6267\u884ci=null\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u9759\u6001\u5206\u6790\u9519\u8bef\u548c\u7ea2\u8272\u7684\u66f2\u6298\u7ebf\u6761\uff0c\u5e76\u4e14\u60a8\u7684\u7a0b\u5e8f\u5c06\u62d2\u7edd\u7f16\u8bd1\u3002\n//\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4e3a\u7a7a\u7684\u53d8\u91cf\u3002INT\uff1fj=1\uff1b//\u4ee5\u540e\u53ef\u4ee5\u4e3a\u7a7a\u3002\u6700\u540e\u7684Foo\uff1fc=getFoo()\uff1b//\u51fd\u6570\u53ef\u80fd\u8fd4\u56deNULL\u3002\u7ef3\u5b50\uff1fn\uff1b//\u5f00\u59cb\u4e3a\u7a7a\u3002\u5728\u4ee5\u540e\u7684\u4efb\u4f55\u65f6\u95f4\u4e5f\u53ef\u4ee5\u4e3a\u7a7a\u3002\n//\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u3002void bogie(int\uff1fcount){//\u8ba1\u6570\u53ef\u80fd\u4e3a\u7a7a\u3002}//\u5728\u51fd\u6570\u8fd4\u56de\u503c\u4e2d\u3002\u798f\uff1fgetFoo(){//\u53ef\u4ee5\u8fd4\u56denull\u800c\u4e0d\u662ffoo\u3002}//\u8fd8\u6709\uff1a\u6cdb\u578b\u3001typedefs\u3001\u7c7b\u578b\u68c0\u67e5\u7b49\u3002//\u4ee5\u53ca\u4ee5\u4e0a\u5185\u5bb9\u7684\u4efb\u610f\u7ec4\u5408\u3002\n\u4f46\u662f\uff0c\u518d\u4e00\u6b21\uff0c\u6211\u7684\u68a6\u60f3\u662f\u4f60\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u9700\u8981\u4f7f\u7528\uff1f\u60a8\u7684\u7edd\u5927\u591a\u6570\u7c7b\u578b\u5c06\u662f\u4e0d\u53ef\u4e3a\u7a7a\u7684\u3002\nDART\u56e2\u961f\u6b63\u5728\u52aa\u529b\u4f7f\u96f6\u5b89\u5168\u5c3d\u53ef\u80fd\u6613\u4e8e\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5b83\u4f7f\u7528if\u68c0\u67e5\u7a7a\u503c\uff1a\n\u65e0\u6548\u5587\u53ed(int\uff1f\u54cd\u5ea6){\u5982\u679c(\u54cd\u5ea6==NULL){//\u6ca1\u6709\u6307\u5b9a\u54cd\u5ea6\uff0c\u8bf7\u901a\u77e5\u5f00\u53d1\u5546//\u6700\u5927\u54cd\u5ea6\u3002_playSound(&#39\uff1berror.wav&39\uff1b\uff0cvolume\uff1a11)\uff1breturn\uff1b}//\u54cd\u5ea6\u4e0d\u4e3a\u7a7a\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u94b3\u5236\u5230\u53ef\u63a5\u53d7\u7684\u6c34\u5e73\u3002_playSound(&#39\uff1bhonk.wav&#39\uff1b\uff0c\u97f3\u91cf\uff1aLoudness.clip(0\uff0c11))\uff1b}\u3002\n\u8bf7\u6ce8\u610f\uff0cDART\u662f\u5982\u4f55\u8db3\u591f\u806a\u660e\u5730\u610f\u8bc6\u5230\uff0c\u5728\u6211\u4eec\u4f20\u9012if\u8bed\u53e5\u65f6\uff0c\u54cd\u5ea6\u53d8\u91cf\u4e0d\u80fd\u4e3a\u7a7a\u3002\u56e0\u6b64\uff0cDART\u5141\u8bb8\u6211\u4eec\u8c03\u7528CLAMP()\u65b9\u6cd5\uff0c\u800c\u65e0\u9700\u8df3\u8f6c\u3002\u8fd9\u79cd\u4fbf\u5229\u6027\u662f\u901a\u8fc7\u6240\u8c13\u7684\u6d41\u5206\u6790\u5b9e\u73b0\u7684\uff1aDART\u5206\u6790\u5668\u4f1a\u50cf\u6267\u884c\u4ee3\u7801\u4e00\u6837\u68c0\u67e5\u60a8\u7684\u4ee3\u7801\uff0c\u81ea\u52a8\u627e\u51fa\u6709\u5173\u4ee3\u7801\u7684\u9644\u52a0\u4fe1\u606f\u3002\n\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u793a\u4f8b\uff0c\u5b83\u663e\u793a\u4e86DART\u53ef\u4ee5\u786e\u4fdd\u53d8\u91cf\u662f\u975eNULL\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6211\u4eec\u59cb\u7ec8\u4e3a\u5176\u8d4b\u503c\u4e3a\u975eNULL\u503c\uff1a\nint sign(Int X){//\u7ed3\u679c\u4e0d\u53ef\u4e3a\u7a7a\u3002INT RESULT\uff1bIF(x&&gt;\uff1b=0){RESULT=1\uff1b}ELSE{RESULT=-1\uff1b}//\u6b64\u65f6\uff0cDART\u77e5\u9053\u7ed3\u679c\u4e0d\u80fd\u4e3a\u7a7a\u3002\u8fd4\u56de\u7ed3\u679c\uff1b}\u3002\n\u5982\u679c\u5220\u9664\u4e0a\u9762\u7684\u4efb\u4f55\u8d4b\u503c(\u4f8b\u5982\uff0c\u901a\u8fc7\u5220\u9664\u7ed3\u679c=-1\uff1b\u884c)\uff0cDART\u4e0d\u80fd\u4fdd\u8bc1\u7ed3\u679c\u4e3a\u975e\u7a7a\uff1a\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u9759\u6001\u9519\u8bef\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7801\u5c06\u4e0d\u4f1a\u7f16\u8bd1\u3002\n\u6d41\u5206\u6790\u53ea\u5728\u51fd\u6570\u5185\u90e8\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u6709\u5168\u5c40\u53d8\u91cf\u6216\u7c7b\u5b57\u6bb5\uff0c\u5219DART\u4e0d\u80fd\u4fdd\u8bc1\u4f55\u65f6\u4e3a\u5176\u8d4b\u503c\u3002DART\u65e0\u6cd5\u5bf9\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6d41\u8fdb\u884c\u5efa\u6a21\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u7b2c\u4e00\u6b21\u8bfb\u53d6\u53d8\u91cf\u4e4b\u524d\u77e5\u9053\u53d8\u91cf\u5c06\u4e3a\u975eNULL\uff0c\u4f46\u4e0d\u80fd\u7acb\u5373\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528new late\u5173\u952e\u5b57\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1v\u5f00\u59cb\u65f6\u672a\u521d\u59cb\u5316\uff0c\u4f46\u5b83\u662f\u975e\u7a7a\u7684\u3002DART\u76f8\u4fe1\u60a8\u5728\u4e3av\u8d4b\u503c\u975e\u7a7a\u503c\u4e4b\u524d\u4e0d\u4f1a\u5c1d\u8bd5\u8bfb\u53d6v\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7801\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u51fa\u9519\u3002\nDART\u56e2\u961f\u5df2\u7ecf\u5de5\u4f5c\u4e86\u4e00\u5e74\u591a\uff0c\u4ee5\u786e\u4fdd\u6280\u672f\u9884\u89c8\u7684\u96f6\u5b89\u5168\u6027\u3002\u8fd9\u662f\u81ea\u6211\u4eec\u5f15\u5165DART 2\u4ee5\u6765\u5bf9DART\u8bed\u8a00\u589e\u52a0\u7684\u6700\u5927\u4e00\u9879\u529f\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\u73b0\u6709\u4ee3\u7801\u53ef\u4ee5\u8c03\u5165\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u7684\u4ee3\u7801\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5373\u4f7f\u5728\u96f6\u5b89\u5168\u6027\u53ef\u7528\u4e4b\u540e\uff0c\u5b83\u4e5f\u5c06\u662f\u4e00\u4e2a\u53ef\u9009\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u51c6\u5907\u597d\u65f6\u91c7\u7528\u3002\u60a8\u7684\u73b0\u6709\u4ee3\u7801\u5c06\u7ee7\u7eed\u8fd0\u884c\uff0c\u65e0\u9700\u66f4\u6539\u3002\n\u6211\u4eec\u6700\u8fd1\u8fc1\u79fb\u4e86DART\u6838\u5fc3\u5e93\uff0c\u4ee5\u5145\u5206\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u3002\u4f5c\u4e3anull security\u5411\u540e\u517c\u5bb9\u6027\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u66ff\u6362\u4e86\u73b0\u6709\u7684\u6838\u5fc3\u5e93\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u5728DART\u548cFfltter\u6d4b\u8bd5\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u73b0\u6709\u6d4b\u8bd5\u548c\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u751a\u81f3\u5c06\u65b0\u7684\u6838\u5fc3\u5e93\u76f4\u63a5\u653e\u5165\u4ed6\u4eec\u7684\u4ea7\u54c1\u4ee3\u7801\u5e93\u4e2d\uff0c\u6beb\u65e0\u969c\u788d\u5730\u63d0\u4f9b\u7ed9\u8bb8\u591aGoogle\u5185\u90e8\u5ba2\u6237\u3002\u6211\u4eec\u8ba1\u5212\u5728\u529f\u80fd\u542f\u52a8\u65f6\u8fc1\u79fb\u6211\u4eec\u6240\u6709\u7684\u8f6f\u4ef6\u5305\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4f7f\u7528\u7a7a\u5b89\u5168\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u4e5f\u80fd\u8fd9\u6837\u505a\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u65f6\u95f4\u8868\u4e0a\uff0c\u4e00\u4e2a\u5305\u63a5\u4e00\u4e2a\u5305\uff0c\u4e00\u4e2a\u5e94\u7528\u4e00\u4e2a\u5e94\u7528\u3002\n\u6280\u672f\u9884\u89c8\u3002\u8fd9\u5c06\u4e8e\u4eca\u5929\u53d1\u5e03\uff0c\u5e76\u5728DART\u7684\u5f00\u53d1\u9891\u9053\u4e2d\u63d0\u4f9b\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u201c\u7acb\u5373\u8bd5\u7528\u201d\u90e8\u5206\u3002\u60c5\u51b5\u4ecd\u7136\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u8981\u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u3002\u4e0d\u8fc7\uff0c\u4e00\u5b9a\u8981\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u7136\u540e\u7ed9\u6211\u4eec\u53cd\u9988\uff01\n\u6d4b\u8bd5\u7248\u3002\u96f6\u5b89\u5168\u5c06\u5728DART\u7684\u6d4b\u8bd5\u901a\u9053\u4e2d\u63d0\u4f9b\uff0c\u5e76\u4e14\u4e0d\u518d\u662f\u5728\u5b9e\u9a8c\u65d7\u5e1c\u540e\u9762\u3002\u8be5\u529f\u80fd\u5c06\u975e\u5e38\u63a5\u8fd1\u9884\u671f\u7684\u6700\u7ec8\u7248\u672c\u3002\u5982\u679c\u60a8\u62e5\u6709pub.dev\u5305\u6216\u63d2\u4ef6\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fc1\u79fb\u4e86\uff0c\u4f46\u662f\u60a8\u8fd8\u4e0d\u5e94\u8be5\u5c06\u5176\u53d1\u5e03\u4e3a\u7a33\u5b9a\u7248\u672c\u3002\n\u7a33\u5b9a\u91ca\u653e\u3002\u6bcf\u4e2a\u4eba\u90fd\u5c06\u62e5\u6709\u96f6\u5b89\u5168\u6027\uff0c\u5e76\u9f13\u52b1\u60a8\u5c06\u8fc1\u79fb\u540e\u7684\u5305\u548c\u63d2\u4ef6\u53d1\u5e03\u4e3a\u7a33\u5b9a\u7248\u672c\u3002\u60a8\u8fd8\u5e94\u8be5\u8fc1\u79fb\u60a8\u7684\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u5e74\u5e95\u524d\u5c06null security\u4f5c\u4e3a\u4e00\u4e2a\u7a33\u5b9a\u7684\u529f\u80fd\u53d1\u5e03\u3002\u4ece\u73b0\u5728\u5230\u90a3\u65f6\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u5de5\u5177\u6765\u5e2e\u52a9\u60a8\u786e\u4fdd\u4ee3\u7801\u4e3a\u7a7a\u7684\u5b89\u5168\uff0c\u5305\u62ec\uff1a\n\u652f\u6301\u60a8\u81ea\u52a8\u6267\u884c\u5347\u7ea7\u73b0\u6709\u8f6f\u4ef6\u5305\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u8bb8\u591a\u6b65\u9aa4\u7684\u8fc1\u79fb\u5de5\u5177\u3002\n\u6807\u7b7e\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5305\u662f\u5426\u652f\u6301\u7a7a\u5b89\u5168\u6027\u3002\npub\u8fc7\u65f6\u547d\u4ee4\u7684\u6269\u5c55\uff0c\u652f\u6301\u67e5\u627e\u652f\u6301\u7a7a\u5b89\u5168\u6027\u7684\u4f9d\u8d56\u9879\u7684\u6700\u65b0\u7248\u672c\u3002\n\u73b0\u5728\u5c1d\u8bd5\u96f6\u5b89\u5168\u7684\u6700\u5feb\u65b9\u5f0f\u662f\u4f7f\u7528nullsafety.dartpad.dev\uff0c\u8fd9\u662f\u4e00\u4e2a\u542f\u7528\u4e86\u96f6\u5b89\u5168\u7684Dartpad\u7248\u672c\u3002\u6253\u5f00\u201c\u4f7f\u7528\u4ee3\u7801\u6bb5\u5b66\u4e60\u201d\u4e0b\u62c9\u5217\u8868\uff0c\u53ef\u4ee5\u627e\u5230\u4e00\u7cfb\u5217\u5b66\u4e60\u7ec3\u4e60\uff0c\u8fd9\u4e9b\u7ec3\u4e60\u6f14\u7ec3\u4e86\u7a7a\u5b89\u5168\u7684\u65b0\u8bed\u6cd5\u548c\u57fa\u7840\u77e5\u8bc6\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5728\u5c0f\u578b\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5c1d\u8bd5\u7a7a\u5b89\u5168\u6027\u3002(\u6211\u4eec\u8fd8\u6ca1\u6709\u8fc1\u79fb\u50cfFfltter\u8fd9\u6837\u7684\u5927\u578b\u6846\u67b6\u3002)\u3002\u9996\u5148\u4e0b\u8f7ddev-channel DART SDK\u7684\u526f\u672c\uff0c\u7136\u540e\u83b7\u53d6\u6b64\u793a\u4f8bDART CLI\u5e94\u7528\u7a0b\u5e8f\u7684\u526f\u672c(GitHub repo\u3001zip\u5b58\u6863)\u3002\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u81ea\u8ff0\u6587\u4ef6\u5305\u542b\u4f7f\u7528\u7a7a\u5b89\u5168\u5b9e\u9a8c\u6807\u5fd7\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf4\u660e\u3002\u793a\u4f8b\u4e2d\u7684\u5176\u4ed6\u6587\u4ef6\u63d0\u4f9b\u4e86\u542f\u52a8\u914d\u7f6e\uff0c\u53ef\u4ee5\u5728VS Code\u548cAndroid Studio\u4e2d\u8fdb\u884c\u8c03\u8bd5\u3002\n\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u4e3aDART\u5e26\u6765\u96f6\u5b89\u5168\u3002\u58f0\u97f3\u7a7a\u5b89\u5168\u6027\u662fDART\u7684\u4e00\u4e2a\u72ec\u7279\u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7f16\u5199\u4e0d\u592a\u5bb9\u6613\u51fa\u9519\u7684\u4ee3\u7801\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u6280\u672f\u9884\u89c8\u4e2d\u8bd5\u7528\u8be5\u529f\u80fd\uff0c\u5e76\u901a\u8fc7\u6211\u4eec\u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u7ed9\u6211\u4eec\u53cd\u9988\u3002\u5feb\u4e50\u7684\u7f16\u7801\uff01", "note_en": "Today is a major milestone for the Dart team with the tech preview of our null safety work. Null safety helps you avoid a class of bugs that are often hard to spot, and as an added bonus enables a range of performance improvements. We\u2019re now releasing an early tech preview, and we\u2019re looking forward to your feedback.\n This post describes the Dart team\u2019s plans for rolling out null safety. It also explains what we mean by  sound null safety and  why that\u2019s different from approaches that many other languages take.\n  Dart is a type-safe language. This means that when you get a variable of some type, the compiler can  guarantee that it is of that type. But type safety by itself doesn\u2019t guarantee that the variable is not  null.\n Null errors are very common. A search on GitHub leads to  thousands of issues caused by nulls in Dart code, and even more  thousands of commits trying to fix those issues.\n Try to see if you can spot the nullability problems in the following example code:\n  This function will certainly fail if called with  null, but there\u2019s a second case to consider:\n void main() {  // Error case 1: passing a null to files.  printLengths(null);  // Error case 2: passing list of files, containing a null item.  printLengths([File(&#39;filename1&#39;), File(&#39;filename2&#39;), null]); }\n   With null safety, you can reason about your code with more confidence. No more pesky runtime null dereferencing errors. Instead, you get static errors as you code.\n  Dart\u2019s null safety is  sound. This means that Dart is 100% sure that the  files list, and the elements in it, cannot be  null in the above example. When Dart analyzes your code and determines that a variable is non-nullable, that variable is  always non-nullable: if you inspect your running code in the debugger, you\u2019ll see that non-nullability is retained at runtime. By contrast, some other implementations are unsound, and in many cases still need to perform runtime null checks. Dart shares sound null safety with Swift, but not very many other programming languages.\n The soundness of Dart\u2019s null safety has another welcome implication: it means your programs can be smaller and faster. Because Dart is  really sure that  files is never  null, Dart can optimize. For example, the Dart ahead-of-time (AOT) compiler can produce smaller and faster native code, because it doesn\u2019t need to add checks for nulls when it  knows that a variable isn\u2019t  null.\n We\u2019ve seen some very promising preliminary results. For example, we saw a  19% performance improvement in a microbenchmark that emulates typical Flutter framework rendering patterns.\n  Before starting the detailed design for null safety, the Dart team defined the following three core principles:\n Non-nullable by default. Unless you explicitly tell Dart that a variable can be  null, it will consider it non-nullable. We chose this as the default because we found that non-null was by far the most common choice in APIs.\n Incrementally adoptable. There\u2019s a lot of Dart code out there. It must be possible to migrate to null safety incrementally, part by part. It should be possible to have null-safe and non-null-safe code in the same project. We\u2019ll also provide tools to help you with the migration.\n Fully sound. As mentioned above, Dart\u2019s null safety is sound. Once you migrate your whole project and your dependencies to null safety, you reap the full benefits of soundness.\n  The core syntax is simple enough. Here are some non-nullable variables, declared in different ways. Remember, non-nullable is the default, so these declarations look like they do today, but their meaning changes.\n // In null-safe Dart, none of these can ever be null. var i = 42; final b = Foo(); String m = &#39;&#39;;\n Dart will make sure that you never assign  null to any of the above variables. If you try to do  i = null a thousand lines later, you\u2019ll get a static analysis error and red squiggly lines, and your program will refuse to compile.\n  // These are all nullable variables. int? j = 1; // Can be null later. final Foo? c = getFoo(); // Maybe the function returns null. String? n; // Is null at first. Can be null at any later time, too.\n   // In function parameters. void boogie(int? count) {  // It&#39;s possible that count is null. } // In function return values. Foo? getFoo() {  // Can return null instead of Foo. } // Also: generics, typedefs, type checks, etc. // And any combination of the above.\n But, once again, the dream is that you\u2019ll almost never have to use  ?. The vast majority of your types will be non-nullable.\n  The Dart team is trying hard to make null safety as easy to use as possible. For example, look at this code, which uses  if to check for a null value:\n void honk(int? loudness) {  if (loudness == null) {  // No loudness specified, notify the developer  // with maximum loudness.  _playSound(&#39;error.wav&#39;, volume: 11);  return;  }  // Loudness is non-null, let&#39;s just clamp it to acceptable levels.  _playSound(&#39;honk.wav&#39;, volume: loudness.clamp(0, 11)); }\n Note how Dart is smart enough to realize that by the time we pass that  if statement, the  loudness variable  cannot be  null. And so Dart lets us call the  clamp() method without jumping through hoops. This convenience is enabled by something called  flow analysis: the Dart analyzer goes through your code as if it was executing it, figuring out additional information about your code automatically.\n Here\u2019s another example, which shows a case where Dart can be sure that a variable is non-null because we always assign a non-null value to it:\n int sign(int x) {  // The result is non-nullable.  int result;  if (x &gt;= 0) {  result = 1;  } else {  result = -1;  }  // By this point, Dart knows the result cannot be null.  return result; }\n If you remove any of the assignments above (for example, by deleting the  result = -1; line), Dart cannot guarantee that  result will be non-null: you\u2019ll get a static error and your code won\u2019t compile.\n Flow analysis only works inside functions. If you have a global variable or a class field, then Dart can\u2019t guarantee when it will be assigned what value. Dart can\u2019t model the flow of your whole application. For that reason, you can use the new  late keyword when you   know that a variable will be non-null before you first read it, but you can\u2019t initialize it immediately.\n  Note that  v is non-null, although it starts uninitialized. Dart trusts you that you won\u2019t try to read  v before it\u2019s assigned a non-null value, and your code compiles without errors.\n  The Dart team has been working for more than a year to get null safety to tech preview. It\u2019s the largest addition to the Dart language since we introduced Dart 2. Yet, it\u2019s not a breaking change. Existing code can call into code that uses null safety, and vice versa. Even after null safety is available, it will be an optional feature that you can adopt when you\u2019re ready.  Your existing code will continue to run without change.\n We recently migrated the Dart  core libraries to fully use null safety. As an example of null safety\u2019s backwards compatibility, we replaced the existing core libraries without any breakage in existing tests and test apps running in the Dart and Flutter test environments. We even rolled the new core libraries to our many internal Google customers, directly into their production code bases, without a hitch. We plan on migrating all of our packages and apps to use null safety when the feature launches, and we hope you\u2019ll do the same. But you\u2019ll be able to do it on your timeline, package by package, app by app.\n   Tech preview. This is   launching today, and is available in Dart\u2019s  dev channel. See the \u201cTry it now\u201d section below for details. Things are still subject to change, so  don\u2019t use null safety in production code just yet. Do test things out and  give us feedback, though!\n Beta release. Null safety will be available in Dart\u2019s beta channel, and no longer behind an  experimental flag. The feature will be very close to the expected final version. If you own a  pub.dev package or plugin, this is when you can begin migrating, but you shouldn\u2019t publish it as a stable version just yet.\n Stable release. Everyone will have null safety, and you\u2019ll be encouraged to publish your migrated packages and plugins as stable versions. You should also migrate your production apps.\n If all goes well, we plan to release null safety as a stable feature before the end of the year. Between now and then, we\u2019ll add tooling to help you make your code null safe, including:\n A migration tool to support you in automating many of the steps for upgrading existing packages and apps\n Tags on  pub.dev, so you can tell if a package supports null safety or not\n An extension to the   pub outdated command, with support for finding the latest versions of your dependencies that support null safety\n  The quickest way to try null safety today is through  nullsafety.dartpad.dev, a version of DartPad with null safety enabled. Open the  Learn with Snippets drop-down to find a series of learning exercises that walk through the new syntax and basics of null safety.\n  You can also try null safety in small command-line apps. (We haven\u2019t migrated larger frameworks like Flutter yet.) Start by downloading a copy of the  dev-channel Dart SDK, and then get a copy of  this sample Dart CLI app ( GitHub repo,  zip archive). The sample app\u2019s  README file has instructions for running the app with the null safety experiment flag. Other files in the sample provide launch configurations that enable debugging in VS Code and Android Studio.\n   We\u2019re very happy to bring null safety to Dart. Sound null safety is a distinctive feature of Dart that helps you write less error-prone code and get better performance. We hope you\u2019ll experiment with the feature in tech preview, and  give us feedback through our issue tracker. Happy coding!", "posttime": "2020-06-11 00:48:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dart,\u58f0\u97f3,sound", "title": "DART\uff1a\u58f0\u97f3\u96f6\u4f4d\u5b89\u5168", "title_en": "Dart: Sound Null Safety", "transed": 1, "url": "https://medium.com/dartlang/announcing-sound-null-safety-defd2216a6f3", "via": "", "real_tags": ["dart", "\u58f0\u97f3", "sound"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006033, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u5e10\u6237", "note_en": "Create\r\t\t\t\t\t\t\t\t\t\t\tAccount", "posttime": "2020-06-11 00:31:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u52a8\u6c7d\u8f66,batteries,\u521b\u5efa", "title": "\u7528\u8fc7\u7684\u7535\u52a8\u6c7d\u8f66\u7535\u6c60\u53ef\u4ee5\u4e3a\u660e\u5929\u7684\u592a\u9633\u80fd\u53d1\u7535\u573a\u4f9b\u7535", "title_en": "Used EV Batteries Could Power Tomorrow's Solar Farms", "transed": 1, "url": "https://spectrum.ieee.org/energywise/energy/batteries-storage/used-ev-batteries-could-power-tomorrows-solar-farms", "via": "", "real_tags": ["\u7535\u52a8\u6c7d\u8f66", "batteries", "\u521b\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "5930ea8c944162de167c2612c9c69a2f.jpeg", "infoid": 1006032, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u5e26\u5bbd\u7684\u9700\u6c42\u6b63\u5728\u63a8\u52a8\u50cfNiometrics\u8fd9\u6837\u7684\u7f51\u7edc\u8f6f\u4ef6\u4f9b\u5e94\u5546\u652f\u6301100 GbE\u7f51\u7edc\u63a5\u53e3\u63a7\u5236\u5668(NIC)\u3002\u6211\u4eec\u7684\u7f51\u7edc\u63a2\u6d4b\u5668\u4f7f\u7528\u6570\u636e\u5e73\u9762\u5f00\u53d1\u5de5\u5177\u5305(DPDK)\u7ed5\u8fc7Linux\u5185\u6838\uff0c\u5c06\u6d41\u91cf\u5b9a\u5411\u5230\u7528\u6237\u7a7a\u95f4\u3002\u8fd9\u6d88\u9664\u4e86NIC\u4e2d\u65ad\u7684\u5f00\u9500\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u5e26\u5bbd\u5904\u7406\u901f\u7387\u3002\u7136\u800c\uff0c100GbE\u7f51\u5361\u5e26\u6765\u4e86\u65b0\u7684\u6311\u6218\u3002\u6211\u4eec\u9762\u4e34\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u5904\u7406\u5668\u95f4\u4e2d\u65ad(IPI)\u5bfc\u81f4\u8f83\u4f4e\u5e26\u5bbd\u7684\u96f6\u661f\u6570\u636e\u5305\u4e22\u5f03\uff0c\u6ca1\u6709\u660e\u663e\u7684\u62e5\u585e\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u8ba8\u8bba\u4e0d\u540c\u7c7b\u578b\u7684\u4e2d\u65ad\u3001\u4e2d\u65ad\u5904\u7406\u786c\u4ef6\u548c\u5185\u5b58\u7ba1\u7406\u5355\u5143\u3002\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u7531\u4e8e\u591a\u5957\u63a5\u5b57\u7cfb\u7edf\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u800c\u5bfc\u81f4\u7684\u6545\u969c\u6392\u9664\u3001\u8c03\u8bd5\u548c\u4fee\u590d\u95ee\u9898\u3002\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e0b\u672c\u6587\u6d89\u53ca\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u73af\u5883\uff1a\n6TB\u5185\u5b58(\u4f7f\u7528hugepagesz=1G\u548chugepages=1024\u4e2a\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570\u4e3a\u6bcf\u4e2a\u63d2\u69fd\u4fdd\u7559256\u4e2a1G\u5927\u578b\u9875\u9762\uff0c\u4e3a\u5927\u578b\u9875\u9762\u4fdd\u75591 TB)\u3002\n\u4f7f\u7528Isolcpus\u3001NOHZ_FULL\u3001RCU_NOCBS\u548cRCU_NOCB_POLL\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570\u9694\u79bb\u6240\u6709\u5173\u952e\u5185\u6838\u5e76\u4f7f\u5176\u51e0\u4e4e\u65e0\u6296\u52a8\u3002\n\u5728\u4f7f\u7528DPDK\u7684\u7f51\u7edc\u63a2\u6d4b\u4e2d\uff0c\u6570\u636e\u5305\u63a5\u6536\u7531\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u7684RX\u7ebf\u7a0b\u5904\u7406\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4e0d\u65ad\u8f6e\u8be2NIC RX\u73af\u4e2d\u7684\u6570\u636e\u5305\u3002\u901a\u8fc7\u5c06\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u5185\u6838\u7a7a\u95f4\u6765\u5904\u7406\u4e2d\u65ad\uff0c\u4ece\u800c\u4e2d\u65ad\u201c\u4e2d\u65ad\u201d\u7528\u6237\u7a7a\u95f4\u4efb\u52a1\u7684\u6267\u884c\u3002\u8fd9\u4f1a\u5f15\u5165\u6296\u52a8\uff0c\u8fd9\u79cd\u6296\u52a8\u975e\u5e38\u7f55\u89c1\uff0c\u4e0d\u4f1a\u5f71\u54cd\u541e\u5410\u91cf\uff0c\u4f46\u5728100GbE\u7f51\u5361\u4e0a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e22\u5305\u3002\u589e\u52a0NIC RX\u73af\u5927\u5c0f(\u6216RX\u73af\u7684\u6570\u91cf)\u53ef\u4ee5\u7f13\u89e3\u6b64\u95ee\u9898\uff0c\u4f46\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\n\u5728\u6211\u4eec\u63cf\u8ff0\u6bcf\u79cd\u7c7b\u578b\u5982\u4f55\u5f71\u54cd\u9ad8\u6027\u80fd\u7cfb\u7edf\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u770b\u770bAPIC\u7684\u5185\u5e55\u3002\nAPIC\u4ee3\u8868\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u3002\u5728x86-64\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5904\u7406\u4e2d\u65ad\uff1a\n\u6bcf\u4e2aCPU\u7684\u672c\u5730APIC\u63a5\u6536\u4e2d\u65ad\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4e2d\u65ad\u53d1\u9001\u5230\u5904\u7406\u5668\u5185\u6838\u8fdb\u884c\u5904\u7406\u3002\u4e2d\u65ad\u53ef\u80fd\u6765\u81ea\u5904\u7406\u5668\u7684\u4e2d\u65ad\u5f15\u811a\u3001\u5185\u90e8\u6e90\u548c\u5916\u90e8I/O APIC(\u6216\u5176\u4ed6\u5916\u90e8\u4e2d\u65ad\u63a7\u5236\u5668)\u3002\n\u5728\u5bf9\u79f0\u591a\u5904\u7406(SMP)\u7cfb\u7edf\u4e2d\uff0c\u672c\u5730APIC\u5411\u7cfb\u7edf\u603b\u7ebf\u4e0a\u7684\u5176\u4ed6\u903b\u8f91\u5904\u7406\u5668\u53d1\u9001IPI\u6d88\u606f\uff0c\u6216\u4ece\u7cfb\u7edf\u603b\u7ebf\u4e0a\u7684\u5176\u4ed6\u903b\u8f91\u5904\u7406\u5668\u63a5\u6536IPI\u6d88\u606f\u3002IPI\u6d88\u606f\u53ef\u7528\u4e8e\u5728\u7cfb\u7edf\u4e2d\u7684\u5904\u7406\u5668\u4e4b\u95f4\u5206\u914d\u4e2d\u65ad\u6216\u6267\u884c\u7cfb\u7edf\u8303\u56f4\u7684\u529f\u80fd(\u4f8b\u5982\u542f\u52a8\u5904\u7406\u5668\u6216\u5728\u4e00\u7ec4\u5904\u7406\u5668\u4e4b\u95f4\u5206\u914d\u5de5\u4f5c)\u3002\nI/O APIC\u662fIntel\u7cfb\u7edf\u82af\u7247\u7ec4\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4ece\u7cfb\u7edf\u53ca\u5176\u5173\u8054\u7684I/O\u8bbe\u5907\u63a5\u6536\u5916\u90e8\u4e2d\u65ad\u4e8b\u4ef6\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u4e2d\u65ad\u6d88\u606f\u4e2d\u7ee7\u5230\u672c\u5730APIC\u3002\n\u5728SMP\u7cfb\u7edf\u4e2d\uff0cI/O APIC\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5c06\u5916\u90e8\u4e2d\u65ad\u5206\u914d\u7ed9\u7cfb\u7edf\u603b\u7ebf\u4e0a\u9009\u5b9a\u5904\u7406\u5668\u6216\u5904\u7406\u5668\u7ec4\u7684\u672c\u5730APIC\u3002\n\u6211\u4eec\u4f7f\u7528irqBalance\u5b88\u62a4\u8fdb\u7a0b\u5c06\u6240\u6709\u5916\u90e8\u4e2d\u65ad\u5904\u7406\u4ece\u53c2\u4e0e\u6570\u636e\u5305\u5904\u7406\u7684\u9694\u79bb\u6838\u5fc3\u79fb\u81f3\u4e00\u7ec4\u4fdd\u7559\u7528\u4e8e\u4e2d\u65ad\u5904\u7406\u7684\u6838\u5fc3\u3002\u8fd9\u53ef\u786e\u4fdd\u5916\u90e8\u4e2d\u65ad\u4e0d\u4f1a\u5bf9\u9694\u79bb\u5185\u6838\u4e0a\u7684\u4efb\u52a1\u9020\u6210\u6296\u52a8\u3002\u5b83\u8fd8\u786e\u4fdd\u4e3aIRQ\u4eb2\u548c\u6027\u5206\u914d\u7684\u6838\u5fc3\u201c\u6700\u63a5\u8fd1\u201d\u8bbe\u5907\u7684NUMA\u8282\u70b9\u3002IRQBALANCE_BANDIRED_CPUS\u73af\u5883\u53d8\u91cf\u5fc5\u987b\u8bbe\u7f6e\u4e3a\u9694\u79bb\u5185\u6838\u7684\u63a9\u7801\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u4e3a\u5b83\u4eec\u5206\u914d\u4e2d\u65ad\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u793a\u4f8b\u6765\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\n\u5728\u5185\u68382.6.21\u4e4b\u524d\uff0c\u8ba1\u65f6\u5668\u6ef4\u7b54\u4ee5CONFIG_HZ(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a1000/\u79d2)\u7684\u901f\u7387\u5728\u6bcf\u4e2a\u5185\u6838\u4e0a\u8fd0\u884c\u3002\n\u65e0\u8ba1\u65f6\u5185\u6838(\u5728\u5185\u68382.6.21+\u4e2d)\u7981\u7528\u4e86\u7a7a\u95f2\u5185\u6838\u4e0a\u7684\u5185\u6838\u8ba1\u65f6\u5668\u8ba1\u65f6\u5668\u8ba1\u65f6\u3002\u8c03\u5ea6\u65f6\u949f\u4e2d\u65ad\u7528\u4e8e\u5f3a\u5236\u7e41\u5fd9\u7684\u5185\u6838\u8c03\u5ea6\u591a\u4e2a\u4efb\u52a1\uff0c\u800c\u7a7a\u95f2\u7684\u5185\u6838\u6ca1\u6709\u8981\u8c03\u5ea6\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u4e0d\u9700\u8981\u8c03\u5ea6\u65f6\u949f\u4e2d\u65ad\u3002\nNOHZ_FULL\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570(\u5728\u5185\u68383.9+\u4e2d\u5f15\u5165)\u662f\u5728\u65e0\u8ba1\u65f6\u5185\u6838\u4e4b\u4e0a\u7684\u4f18\u5316\uff0c\u5b83\u5c06\u65e0\u8ba1\u65f6\u884c\u4e3a\u6269\u5c55\u5230\u53ea\u6709\u4e00\u4e2a\u8fd0\u884c\u4efb\u52a1\u7684\u5185\u6838\u3002\u4ecd\u7136\u9700\u8981\u4e3a\u8fdb\u7a0b\u7ba1\u7406\u64cd\u4f5c(\u5982\u8ba1\u7b97\u6838\u5fc3\u8d1f\u8f7d\u3001\u7ef4\u62a4\u8c03\u5ea6\u5e73\u5747\u503c\u7b49)\u6bcf\u79d2\u5b89\u6392\u4e00\u4e2a\u6ef4\u7b54\u3002\n\u5904\u7406\u5668\u95f4\u4e2d\u65ad\u5141\u8bb8CPU\u5411\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6CPU\u53d1\u9001\u4e2d\u65ad\u4fe1\u53f7\u3002\u5b83\u4eec\u7531ARCH/x86/include/asm/entry_arch.h\u4e2d\u7684BUILD_INTERRUPT\u5b8f\u5b9a\u4e49\u3002\u5bf9\u4e8eSMP\u5185\u6838\uff0c\u201cSMP_\u201d\u4f4d\u4e8e\u51fd\u6570\u540d\u7684\u524d\u9762\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eBUILD_INTERRUPT(CALL_Function_Interrupt\uff0cCall_Function_Vector)\uff0c\u8c03\u7528\u51fd\u6570\u4e2d\u65ad\u5411\u91cf\u7531SMP_CALL_Function_Interrupt()\u5904\u7406\u3002\u901a\u8fc7\u8c03\u7528send_ipi_all()\u3001send_ipi_allbutself()\u3001send_ipi_self()\u3001send_ipi_ask_allbuself()&amp\uff1bsend_ipi_ask()\u51fd\u6570\u6307\u9488\u6240\u6307\u5411\u7684\u51fd\u6570\u6765\u5f15\u53d1\u4e2d\u65ad\u3002\n\u547c\u53eb\u529f\u80fd\u4e2d\u65ad\u662f\u53ef\u4ee5\u53d1\u9001\u5230\u591a\u4e2aCPU\u7684IPI\u3002\u5b83\u662f\u901a\u8fc7\u8c03\u7528NATIVE_SEND_CALL_FUNC_IPI()\u5f15\u53d1\u7684\u3002\n\u547c\u53eb\u529f\u80fd\u5355\u6b21\u4e2d\u65ad\u662f\u4e00\u6b21\u53ef\u4ee5\u53d1\u9001\u5230\u4e00\u4e2aCPU\u7684IPI\u3002\u5b83\u662f\u901a\u8fc7\u8c03\u7528NATIVE_SEND_CALL_FUNC_SINGLE_IPI()\u5f15\u53d1\u7684\u3002\nTLB\u51fb\u843d\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684CAL\u4e2d\u65ad\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u8ba1\u6570\u5668\uff0c\u5373/proc/interrupts\u4e2d\u7684TLB\u884c\u3002CAL\u8ba1\u6570\u5668\u4e0d\u5305\u62ecTLB\u51fb\u843d\u3002\n\u8981\u7406\u89e3TLB\u51fb\u843d\u4e2d\u65ad\u7684\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u7b80\u8981\u8ba8\u8bba\u5206\u9875\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7528\u4e8e\u652f\u6301\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u7684\u5206\u9875\u3002\n\u903b\u8f91\u5730\u5740-\u5305\u62ec\u5728\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u4e2d\u3002\u5b83\u7531\u7ebf\u6bb5\u548c\u504f\u79fb\u7ec4\u6210\u3002\n\u7ebf\u6027\u5730\u5740(\u865a\u62df\u5730\u5740)-\u5355\u4e2a48\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u6700\u9ad8\u53ef\u7528\u4e8e\u5bfb\u5740256TB\u3002\nMMU(\u5b58\u50a8\u5668\u7ba1\u7406\u5355\u5143)\u7684\u5206\u9875\u5355\u5143\u5c06\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3002\u4e0b\u56fe\u8bf4\u660e\u4e86\u52304KB\u9875\u7684\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e0e\u52301 GB\u9875\u7684\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c06\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e3a4KB\u7269\u7406\u9875\u5730\u5740\u6d89\u53ca\u8bbf\u95ee4\u4e2a\u5b58\u50a8\u5668\u4f4d\u7f6e(PML4E\u3001PDPTE\u3001PDE&amp\uff1bPDE)\uff0c\u800c1 GB\u7269\u7406\u9875\u9762\u8bbf\u95ee\u6d89\u53ca\u8bbf\u95ee2\u4e2a\u5b58\u50a8\u5668\u4f4d\u7f6e(PML4E&amp\uff1bPDPTE)\u3002\u8fd9\u5c31\u662f\u8bbf\u95ee1 GB\u5927\u9875\u9762\u6bd4\u8bbf\u95ee4KB\u9875\u9762\u66f4\u5feb\u7684\u539f\u56e0\uff0c\u56e0\u6b64\u63a8\u8350DPDK\u4f7f\u7528\u3002\n\u8f6c\u6362\u540e\u5907\u7f13\u51b2\u5668(TLB)\u662f\u7528\u4e8e\u52a0\u901f\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u7684\u7f13\u5b58\u3002\u5f53\u7b2c\u4e00\u6b21\u4f7f\u7528\u7ebf\u6027\u5730\u5740\u65f6\uff0c\u901a\u8fc7\u7f13\u6162\u8bbf\u95ee\u4e3b\u5b58\u50a8\u5668\u4e2d\u7684\u5206\u9875\u8868\u6765\u8ba1\u7b97\u76f8\u5e94\u7684\u7269\u7406\u5730\u5740\u3002\u7136\u540e\u5c06\u7269\u7406\u5730\u5740\u5b58\u50a8\u5728TLB\u6761\u76ee\u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u5feb\u901f\u8f6c\u6362\u5bf9\u76f8\u540c\u7ebf\u6027\u5730\u5740\u7684\u8fdb\u4e00\u6b65\u5f15\u7528\u3002\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2aCPU\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730TLB\u3002\u4e0e\u786c\u4ef6\u9ad8\u901f\u7f13\u5b58\u76f8\u53cd\uff0cTLB\u7684\u76f8\u5e94\u6761\u76ee\u4e0d\u9700\u8981\u540c\u6b65\uff0c\u56e0\u4e3a\u5728\u4e0d\u540cCPU\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u53ef\u80fd\u5c06\u76f8\u540c\u7684\u7ebf\u6027\u5730\u5740\u4e0e\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\u76f8\u5173\u8054\u3002\n\u5728\u540c\u4e00CPU\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u4f1a\u53d1\u751fTLB\u5237\u65b0\u3002\u5f53\u4e24\u4e2a\u8fdb\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u9875\u8868(\u4f8b\u5982\uff0c\u540c\u4e00\u8fdb\u7a0b\u7684\u7ebf\u7a0b)\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4ece\u5e38\u89c4\u8fdb\u7a0b\u5207\u6362\u5230\u5185\u6838\u7ebf\u7a0b\u65f6\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\uff0c\u5f53\u5237\u65b0CPU\u4e0a\u7684TLB\u65f6\uff0c\u5185\u6838\u8fd8\u5fc5\u987b\u5237\u65b0\u4f7f\u7528\u76f8\u540c\u9875\u8868\u96c6\u7684CPU\u4e0a\u7684\u76f8\u540cTLB\u6761\u76ee\u3002\u8fd9\u662f\u7531TLB\u51fb\u843d\u4e2d\u65ad\u5b8c\u6210\u7684\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7ee7\u7eed\u56de\u987e\u5728\u6392\u9664\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u6027\u80fd\u95ee\u9898\u65f6\u6240\u7ecf\u5386\u7684\u6b65\u9aa4\u3002\n\u6211\u4eec\u5fc5\u987b\u627e\u5230\u53d1\u9001\u5230\u8fd0\u884c\u5173\u952eRX\u7ebf\u7a0b\u7684\u5185\u6838\u7684\u4e2d\u65ad\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u76d1\u89c6\u5185\u6838\u7684\u4e2d\u65ad\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u76d1\u89c6/proc/interrupts\u3002\n\u4ece\u811a\u672c\u7684\u8f93\u51fa\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230LOC\u5728\u8fd0\u884c\u5355\u4e2a\u7528\u6237\u7ebf\u7a0b\u7684NOHZ_FULL\u5185\u6838\u4e0a\u6bcf\u79d2\u4f20\u9012\u4e00\u6b21\u3002\u8fd9\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002\u6b63\u5728\u4f20\u9001\u7684TLB\u4e2d\u65ad(\u6bcf\u79d26\u4e2a\u4e2d\u65ad)\u662f\u9700\u8981\u8fdb\u4e00\u6b65\u8c03\u8bd5\u7684\u4e2d\u65ad\u3002\n\u8981\u786e\u5b9a\u5904\u7406\u4e2d\u65ad\u7684CPU+\u5185\u6838\u51fd\u6570\uff0c\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97\u51fa\u4e2d\u65ad\u8ba1\u6570\u5668\u9012\u589e\u7684\u4f4d\u7f6e\u3002\u53ef\u4ee5\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230\u4e2d\u65ad\u8ba1\u6570\u5668\u7b26\u53f7\uff1aARCH/x86/kernel/irq.c\uff1aarcshow_interrupts()\u3002\u5904\u7406\u7a0b\u5e8f\u662f\u4f7f\u7528incirqstat()\u9012\u589e\u8ba1\u6570\u5668\u7684\u51fd\u6570\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0cTLB\u51fb\u843d\u5904\u7406\u7a0b\u5e8f\u4e3aFLUSH_TLB_FUNC()(\u7531CAL\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8c03\u7528)\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u770b\u8c03\u7528\u5806\u6808\uff0c\u4ee5\u627e\u51fa\u4e2d\u65ad\u4e2d\u6b63\u5728\u6267\u884c\u54ea\u4e9b\u5de5\u4f5c\u3002\u4f8b\u5982\uff0cCAL\u4e2d\u65ad\u53ef\u4ee5\u8c03\u7528\u8bb8\u591a\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u3002\n\u4f7f\u7528trace-cmd\u5f55\u5236\u65f6\uff0c\u4f7f\u7528\u201ctrace-cmd show\u201d\u67e5\u770b\u8f93\u51fa\u3002\u4f7f\u7528\u201ctrace-cmd report\u201d\u67e5\u770btrace-cmd\u8bb0\u5f55\u5b8c\u6210\u540e\u4fdd\u5b58\u7684\u8f93\u51fa\u3002\n\u8981\u67e5\u770b\u5185\u6838\u4e0a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u6210\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528trace-cmd\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u79d2\u949f\u6211\u4eec\u5f97\u52307\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5176\u4e2d6\u4e2a\u7528\u4e8eTLB\u51fb\u843dIPI\u5904\u7406\u7a0b\u5e8f\uff0c\u5360\u7528\u4e86\u5173\u952eRX\u7ebf\u7a0b\u5927\u7ea630-35\u5fae\u79d2\u7684\u65f6\u95f4\u3002\u6ce8\u610f\uff1aTLB IPI\u662fCAL IPI\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b83\u7684\u5904\u7406\u7a0b\u5e8f\u4eceSMP_CALL_Function_INTERRUPT()\u5f00\u59cb\u3002\n\u5728\u4ec5\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u9694\u79bbNOHZ_FULL\u5185\u6838\u4e0aLOC-1/\u79d2\u7684\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u6bb5\u3002\n\u5728I/O\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u7684I/O\u8bf7\u6c42-\u7531\u4e8e\u4e0d\u5e73\u8861\uff0c\u6211\u4eec\u5e94\u8be5\u770b\u4e0d\u5230\u8fd9\u4e9b\u3002\n\u5728IPI\u60c5\u51b5\u4e0b\u5f15\u53d1\u4e2d\u65ad\u7684CPU+\u5185\u6838\u51fd\u6570\u67e5\u627e\u4e2d\u65ad\u5411\u91cf\u7684\u7b26\u53f7\uff0c\u5e76\u901a\u8fc7\u8c03\u7528send_ipi_*\u51fd\u6570\u627e\u5230\u5f15\u53d1\u4e2d\u65ad\u7684\u51fd\u6570\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0cmunmap(2)\u7684\u7cfb\u7edf\u8c03\u7528\u8d1f\u8d23TLB\u51fb\u843d\u4e2d\u65ad\u3002\n\u6b65\u9aa43-\u8c03\u8bd5\u4ee3\u7801\u4ee5\u627e\u51fa\u8d1f\u8d23\u4e2d\u65ad\u7684\u7ebf\u7a0b\u6216\u4efb\u52a1\u6b63\u5728\u505a\u4ec0\u4e48\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u4e2d\uff0c\u83b7\u53d6Mellanox NIC\u7edf\u8ba1\u4fe1\u606f\u7684DPDK\u8c03\u7528(\u4f7f\u7528FILE*\u64cd\u4f5c)\u8d1f\u8d23TLB\u51fb\u843d\u4e2d\u65ad\uff01\n\u4ece\u4e0a\u9762\u7684\u8c03\u8bd5\u8f93\u51fa\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0fclose(3)\u5728\u8bfb\u53d6NIC\u7684Out_Of_Buffer\u8ba1\u6570\u5668(MLX5PMD\u7684imiss\u8ba1\u6570\u5668)\u65f6\u8c03\u7528\u4e86munmap(2)\u3002\u96f6\u661f\u53d1\u751f\u7684\u6570\u636e\u5305\u4e22\u5f03\u662f\u7531\u4e8e\u8bfb\u53d6\u6570\u636e\u5305\u4e22\u5f03\u8ba1\u6570\u5668\u9020\u6210\u7684\u3002\u4f7f\u60c5\u51b5\u66f4\u52a0\u590d\u6742\u7684\u662f\uff0c\u8fd9\u4e9b\u6db2\u6ef4\u662f\u7531\u53e6\u4e00\u4e2a\u540d\u4e3arx_discards_phy\u7684\u8ba1\u6570\u5668\u8ba1\u6570\u7684\u3002\u5c31\u50cf\u859b\u5b9a\u8c14\u8457\u540d\u7684\u601d\u7ef4\u5b9e\u9a8c\u4e00\u6837\uff0c\u8fd9\u4e9b\u6db2\u6ef4\u76f4\u5230\u8bfb\u5230\u6db2\u6ef4\u8ba1\u6570\u5668\u540e\u624d\u51fa\u73b0\u3002\nfscanf(3)\u8c03\u7528\u5bfc\u81f4\u6587\u4ef6\u88abmmap\u2018\u5316\u3002\u968f\u540e\u7684fclose(3)\u5bfc\u81f4\u8c03\u7528munmap(2)\uff0c\u901a\u8fc7\u5bf9\u8c03\u7528fclose(3)\u7684\u5185\u6838\u6267\u884cTLB\u5237\u65b0\u64cd\u4f5c\uff0c\u4eceTLB\u91ca\u653e\u4e0e\u6587\u4ef6\u7f13\u51b2\u533a\u7684\u7269\u7406\u5730\u5740\u76f8\u5173\u8054\u7684\u7ebf\u6027\u5730\u5740\u3002\u8fd9\u8fd8\u4f1a\u5c06TLB\u51fb\u843d\u53d1\u9001\u5230\u6267\u884c\u540c\u4e00\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b(\u5305\u62ec\u5173\u952eRX\u7ebf\u7a0b)\u7684\u6240\u6709\u5185\u6838\u3002\u4fee\u590d\u65b9\u6cd5\u662f\u7528open(2)/read(2)/close(2)\u8c03\u7528\u66ff\u6362\u6587\u4ef6\u6d41\u64cd\u4f5c\u3002\u5411DPDK\u548cMellanox\u62a5\u544a\u4e86\u8be5\u9519\u8bef\u53ca\u5176\u4fee\u590d\uff0c\u5e76\u63a5\u53d7\u4e86\u8be5\u8865\u4e01\u3002\n\u907f\u514d\u8c03\u7528\u4e0a\u8ff0\u4efb\u4f55\u7cfb\u7edf\u8c03\u7528\u7684C\u5e93\u51fd\u6570\uff0c\u6216\u8005\u627e\u51fa\u89e3\u51b3\u529e\u6cd5\u4ee5\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e9bC\u5e93\u8c03\u7528\u3002\u4f8b\u5982\uff0cFile*C\u5e93\u8c03\u7528\u53ef\u4ee5\u4e0e\u4f7f\u7528setvbuf(3)\u8bbe\u7f6e\u7684\u7528\u6237\u7f13\u51b2\u533a\u4e00\u8d77\u4f7f\u7528\u3002\nTLB\u51fb\u843d\u7684\u5f71\u54cd\u968f\u7740\u5185\u6838\u548c\u63d2\u69fd\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u56e0\u4e3a\u51fb\u843d\u7684\u542f\u52a8\u5668\u5185\u6838\u5fc5\u987b\u7b49\u5f85\u5b83\u5411\u5176\u53d1\u9001IPI\u7684\u6240\u6709\u5185\u6838\u7684\u786e\u8ba4\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u7531\u4e8eTLB\u51fb\u843d\u53cc\u63d2\u69fd\u673a\u5668\u5bfc\u81f4\u7684\u4e22\u5305\u7387\u8f83\u4f4e\uff0c\u8be5\u673a\u5668\u7684\u5185\u6838\u6570\u91cf\u662f\u672c\u6587\u6240\u8ff0\u8bbe\u7f6e\u7684\u4e00\u534a\u3002\n\u201c\u8c01\u7167\u770b\u7740\u770b\u5b88\u4eba\uff1f\u201d\u6ce8\u610f\u60a8\u7684\u5ea6\u91cf\u5de5\u5177\u548c\u4ee3\u7801\u4f1a\u7ed9\u5173\u952e\u7ebf\u7a0b\u5e26\u6765\u66f4\u591a\u7684\u4e2d\u65ad\u548c\u6296\u52a8\u3002\u4f8b\u5982\uff0ctrace-cmd\u548cperf\u7b49\u5de5\u5177\u672c\u8eab\u4f7f\u7528IPI\u8fdb\u884c\u8ddf\u8e2a\u548c\u6d4b\u91cf\u3002", "note_en": "The demand for bandwidth is pushing network software vendors like  Niometrics to support 100GbE Network Interface Controllers (NICs). Our network probe uses Data Plane Development Kit ( DPDK) to bypass the Linux kernel and direct traffic to user space. This eliminates the overhead of NIC interrupts to achieve high bandwidth processing rates. The 100GbE NICs, however, brought new challenges. One of the issues we faced was that Interprocessor Interrupts ( IPIs) were causing sporadic packet drops at lower bandwidths with no apparent congestion. In the first part of this post we briefly discuss the different types of interrupts, interrupt handling hardware and the memory management unit. In the second part we offer a glimpse into troubleshooting, debugging and fixing issues due to the interrupt handling in multi-socket systems.\n  Before we start, a description of the hardware and software environment involved in this article:\n 6TB of memory (1 TB reserved for huge pages using   hugepagesz=1G and   hugepages=1024 kernel command line arguments to reserve 256 1G huge pages per socket)\n    All critical cores are isolated and made jitter-free (almost) using   isolcpus,   nohz_full,   rcu_nocbs and   rcu_nocb_poll kernel command line parameters\n   In a network probe using  DPDK, packet reception is handled by RX threads in polling mode. These threads constantly poll the NIC RX rings for packets in a tight loop. Interrupts \u201cinterrupt\u201d the execution of user space tasks by causing a context switch to kernel space to handle the interrupt. This introduces jitter which is too rare to affect throughput, but on 100GbE NICs it can cause packet drops. Increasing the NIC RX ring size (or the number of RX rings) can mitigate this, but not always.\n   Before we describe how each type affects a high performance system, let\u2019s take a look under the hood of the APIC.\n  APIC stands for   Advanced Programmable Interrupt Controller. In x86\u201364 systems, interrupts are handled by:\n   The per CPU local APIC receives interrupts and sends these to the processor core for handling. Interrupts can come from the processor\u2019s interrupt pins, internal sources and an external I/O APIC (or other external interrupt controller).\n In Symmetric Multiprocessing (SMP) systems, the local APIC sends and receives  IPI messages to and from other logical processors on the system bus.  IPI messages can be used to distribute interrupts among the processors in the system or to execute system-wide functions (such as booting up processors or distributing work among a group of processors).\n  The I/O APIC is part of Intel\u2019s system chip set which receives external interrupt events from the system and its associated I/O devices and relays them to the local APIC as interrupt messages.\n In SMP systems, the I/O APIC also provides a mechanism for distributing external interrupts to the local APICs of selected processors or groups of processors on the system bus.\n   We use the    irqbalance daemon to move all external interrupts handling away from isolated cores participating in packet processing to a set of cores reserved for the purpose of interrupt handling. This ensures external interrupts do not cause jitter for tasks on isolated cores. It also ensures IRQ affinity is assigned cores \u201cclosest\u201d to the NUMA node of device. The   IRQBALANCE_BANNED_CPUS environment variable must be set to the mask of isolated cores to ensure no interrupts are assigned to them. Following are some examples to illustrate this.\n        Prior to kernel 2.6.21, the timer tick ran on every core at the rate of CONFIG_HZ (by default, 1000/sec).\n Tickless kernel (in kernels 2.6.21+) disabled the kernel timer tick on idle cores. The scheduling-clock interrupt is used to force a busy core to schedule multiple tasks, and an idle core has no tasks to schedule so it does not require the scheduling-clock interrupt.\n The   nohz_full kernel command line parameter (introduced in kernel 3.9+) is an optimisation on top of the tickless kernel that extends the tickless behaviour to cores which have only one running task. There is still a need to schedule a tick every second for process management operations like calculating core load, maintaining scheduling average, etc.\n   Interprocessor interrupts allow a CPU to send interrupt signals to any other CPU in the system. They are defined by the   BUILD_INTERRUPT macro in  arch/x86/include/asm/entry_arch.h. For SMP kernels, \u201csmp_\u201d is prepended to the function name. E.g., for   BUILD_INTERRUPT(call_function_interrupt, CALL_FUNCTION_VECTOR) the call function interrupt vector is handled by  smp_call_function_interrupt(). An interrupt is raised by calling functions pointed to by  send_IPI_all( ), send_IPI_allbutself( ), send_IPI_self( ), send_IPI_mask_allbutself() &amp; send_IPI_mask() function pointers.\n     The Call Function Interrupt is an  IPI which can be sent to many CPUs. It is raised by calling  native_send_call_func_ipi().\n The Call Function Single Interrupt is an  IPI which can be sent to one CPU at a time. It is raised by calling  native_send_call_func_single_ipi().\n   The TLB shootdown is a special type of CAL interrupt which has its own counter, the TLB line in  /proc/interrupts. The CAL counter does not include TLB shootdowns.\n To understand the purpose of TLB shootdown interrupts, we need to briefly discuss how paging works, because they are used for supporting paging on multiprocessors systems.\n   Logical addresses \u2014 Included in the machine language instructions. It consists of segment and offset.\n Linear addresses (virtual addresses) \u2014 A single 48-bit unsigned integer that can be used to address up to 256TB.\n The paging unit of the MMU (Memory Management Unit) converts linear addresses to physical addresses. The diagrams below illustrate the linear address translation to a 4KB page vs a 1GB page.\n  In brief, converting a linear address to a 4KB physical page address involves accessing 4 memory locations (PML4E, PDPTE, PDE &amp; PDE), while a 1GB physical page access involves accessing 2 memory locations (PML4E &amp; PDPTE). This is why accessing a 1GB huge page is faster than accessing a 4KB page and hence  recommended for use by  DPDK.\n  Translation Lookaside Buffers (TLB) are caches used to speed up linear address translation. When a linear address is used for the first time, the corresponding physical address is computed through  slow accesses to the paging tables in main memory. The physical address is then stored in a TLB entry so that further references to the same linear address can be quickly translated. In a multiprocessor system, each CPU has its own local TLB. Contrary to the hardware cache, the corresponding entries of the TLB need not be synchronised, because processes running on different CPUs may associate the same linear address with different physical ones.\n A TLB flush occurs when switching between 2 processes on same CPU. It does not occur when 2 processes share the same page tables (e.g. threads of same process). It does not occur when switching from a regular process to a kernel thread.\n On multiprocessor systems, when flushing the TLB on a CPU, the kernel must also flush the same TLB entry on the CPUs that are using the same set of page tables. This is done by TLB shootdown interrupts.\n   We now proceed with a retracing of the steps we went through in troubleshooting our interrupt-related performance problems.\n  We had to find the interrupts delivered to cores running the critical RX threads. This can be done by monitoring the interrupt counters for the cores. A simple script can be used to monitor  /proc/interrupts.\n   From the output of the script, we see that LOC is delivered once every second on a   nohz_full core running a single user thread. This is  expected. The TLB interrupts being delivered (6 interrupts/second) are the ones that need to be debugged further.\n     To determine the CPU+kernel function which processes the interrupt, we have to figure out where the interrupt counter is incremented. The interrupt counter symbol can be found here:  arch/x86/kernel/irq.c: arch_show_interrupts(). The handler is the function which increments the counter using inc_irq_stat(). In some cases there is only one interrupt handler. E.g. TLB shootdown handler is flush_tlb_func() (called by interrupt handler of CAL). In other cases we need to look further up the call stack to figure out what work is being done in interrupt. E.g. CAL interrupts can call one of many different functions.\n  Use \u201ctrace-cmd show\u201d to view output while recording with  trace-cmd. Use \u201ctrace-cmd report\u201d to view the output saved after  trace-cmd record finishes.\n   To see the cost of the interrupt handlers on the core, we can use  trace-cmd as follows.\n   From above output we can see that every second we get 7 context switches with 6 of them for the TLB shootdown  IPI handler taking up roughly 30\u201335 microseconds from critical RX thread. NOTE: TLB  IPI is a form of CAL  IPI hence its handler starts from smp_call_function_interrupt().\n   Time period in case of LOC \u2014 1/second on an isolated,   nohz_full core executing one thread only.\n I/O request in case of I/O interrupts \u2014 we shouldn\u2019t see these due to    irqbalance.\n CPU+kernel function which raises the interrupt in case of  IPI  Lookup the symbol of the interrupt vector and find the function raising the interrupt via call to send_IPI_* function.\n    From the above output, we can see that the system call of  munmap(2) is responsible for the TLB shootdown interrupt.\n Step 3 \u2014 Debug Code to Find Out What the Thread or Task Responsible for the Interrupt Is Doing\n  From above output, the  DPDK call for getting Mellanox NIC stats (using  FILE * operations) is responsible for the TLB shootdown interrupt!\n  From debug output above we discovered that the  munmap(2) was being called by  fclose(3) while reading the   out_of_buffer counter for the NIC which is the MLX5 PMD\u2019s   imiss counter. The packet drops which were happening sporadically were due to the read of the packet drop counter. To complicate matters even further these drops were counted by a different counter called   rx_discards_phy. Like Schr\u00f6edinger\u2019s famous thought experiment, these drops were not present until the drop counters were read.\n The  fscanf(3) call leads to the file being mmap\u2019ed. The subsequent  fclose(3) causes  munmap(2) to be called which releases the linear address associated with the physical address of file buffer from TLB by means of a TLB flush operation on the core calling  fclose(3). This also sends TLB shootdowns to all the cores executing threads (including critical RX threads) of the same process. The fix was to replace the file stream operations with  open(2)/ read(2)/ close(2) calls. The  bug and its fix were reported to  DPDK and Mellanox and the  patch was accepted.\n  Avoid C library functions which call any of the above system calls or figure out a workaround to continue using those C library calls. E.g. FILE * C library calls can be used with user buffer set using  setvbuf(3).\n The impact of TLB shootdowns increases with the number of cores and sockets, because the initiator core of the shootdown has to wait for acknowledgment from all the cores to which it sent the  IPI. We noticed fewer packet drops due to TLB shootdown on a 2-socket machine containing half of the number of cores of the setup described in this post.\n \u201cWho watches the watchmen?\u201d Be careful of your measurement tools and code introducing more interrupts and jitter to critical threads. E.g. Tools like  trace-cmd and  perf themselves use  IPIs for tracing and measurement.", "posttime": "2020-06-11 00:29:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u859b\u5b9a\u8c14,dinger,\u4e2d\u65ad", "title": "\u859b\u5b9a\u8c14\u4e22\u5305", "title_en": "Schr\u00f6dinger\u2019s Packet Drops", "transed": 1, "url": "https://medium.com/niometrics-tech-blog/schrodingers-packet-drops-e1556af3e228", "via": "", "real_tags": ["\u859b\u5b9a\u8c14", "dinger", "\u4e2d\u65ad"]}]