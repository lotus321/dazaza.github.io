[{"category": "", "categoryclass": "", "imagename": "e5b580101bf7692481abde7cd628db79.jpg", "infoid": 1008547, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c24\u91cc\u5361\u00b7\u514b\u62c9\u7279\u63d0\u4f9b\u4e86\u4e00\u5802\u5173\u4e8e\u521b\u9020\u6027\u5730\u3001\u6709\u76ee\u7684\u5730\u5e94\u7528\u79d1\u5b66\u548c\u5de5\u7a0b\u539f\u7406\u6765\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u95ee\u9898\u7684\u5b9e\u8df5\u8bfe\u7a0b\u3002\u901a\u8fc7\u5c06\u4ed6\u4eec\u7684\u9879\u76ee\u4e0e\u5176\u80cc\u540e\u7684\u8bbe\u8ba1\u5386\u53f2\u8054\u7cfb\u8d77\u6765\uff0c\u5b69\u5b50\u4eec\u53ef\u4ee5\u5c06\u81ea\u5df1\u89c6\u4e3a\u6b63\u5728\u8fdb\u884c\u7684\u53d1\u660e\u6545\u4e8b\u7684\u4e00\u90e8\u5206-\u5e76\u5efa\u7acb\u521b\u4f5c\u4fe1\u5fc3\uff0c\u4ee5\u4e66\u5199\u4e0b\u4e00\u4e2a\u7bc7\u7ae0\u3002\n\u8bbe\u8ba1\u4e00\u4e2a\u5f88\u9177\u7684\u60ac\u81c2\u706f\uff0c\u4f7f\u7528\u6ed1\u8f6e\u548c\u5f39\u7c27\u4f7f\u5176\u5b8c\u5168\u53ef\u8c03\uff0c\u5e76\u63a2\u7d22\u673a\u68b0\u5e73\u8861\u548c\u6750\u6599\u79d1\u5b66\u3002\u914d\u6709\u8282\u80fdLED\u706f\u6ce1\u548c\u4e09\u79cd\u706f\u7f69\u989c\u8272\u9009\u9879\u3002\n\u5c06\u7535\u52a8\u5377\u7b14\u673a\u4e0e\u81ea\u52a8\u94c5\u7b14\u68c0\u6d4b\u88c5\u7f6e\u8fde\u63a5\u8d77\u6765\uff0c\u63a2\u7d22\u7535\u673a\u548c\u626d\u77e9\u3002\u914d\u6709\u94c5\u7b14\u5957\u88c5\u548c\u7b14\u8bb0\u672c\uff0c\u53ef\u4ee5\u8349\u8349\u5199\u4e0b\u4f60\u7684\u60f3\u6cd5\u548c\u53d1\u660e\u3002\n\u5efa\u9020\u4e00\u4e2a\u771f\u6b63\u7684\u56db\u5f26\u56db\u5f26\u7434\u97f3\u4e50\u4f1a\uff0c\u63a2\u7d22\u58f0\u6ce2\u7684\u79d1\u5b66\u3002\u63a2\u7d22\u8fd9\u4e2a\u7ecf\u5178\u590f\u5a01\u5937\u4e50\u5668\u7684\u8bbe\u8ba1\u5386\u53f2\uff0c\u5e76\u5b66\u4e60\u6f14\u594f\u4e00\u4e9b\u751c\u7f8e\u7684\u66f2\u8c03\u3002\n\u9009\u62e9\u60a8\u7684\u8ba1\u5212\uff0c\u5e76\u57282\u5929\u5185\u88c5\u8fd0\u7b2c\u4e00\u6279\u677f\u6761\u7bb1\u3002\u968f\u65f6\u6682\u505c\u6216\u53d6\u6d88\u3002", "note_en": "Eureka Crate provides a hands-on lesson in the creative and purposeful application of science and engineering principles in order to  solve a real-world problem. By connecting their project to the design history behind it, kids can see themselves as part of an ongoing story of invention \u2014 and build the creative confidence to write the next chapter.\n Engineer a cool cantilevered lamp that uses pulleys and springs to make it perfectly adjustable, and explore mechanical equilibrium and materials science. Comes with an energy-friendly LED bulb and three lampshade color options.\n Wire up an electromechanical pencil sharpener with automatic pencil detection, and explore electric motors and torque. Comes with a pencil set and notebook to jot down your ideas and inventions.\n Build a real four-string concert ukulele and explore the science of sound waves. Discover the design history of this classic Hawaiian instrument and learn to play some sweet tunes.\n  Choose your plan and the first crate ships in 2 days. Pause or cancel anytime.", "posttime": "2020-06-27 16:11:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "eureka,\u63a2\u7d22", "title": "KiwiCo Eureka\u677f\u6761\u7bb1\uff1a\u6309\u6708\u8ba2\u9605\u79d1\u5b66\u5957\u4ef6", "title_en": "KiwiCo Eureka Crate: Monthly Science Kit Subscription", "transed": 1, "url": "https://www.kiwico.com/eureka", "via": "", "real_tags": ["eureka", "\u63a2\u7d22"]}, {"category": "", "categoryclass": "", "imagename": "0a1b9d8998073f7c009c1f8574a3419a.jpg", "infoid": 1008546, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u5fae\u5851\u6599\u4f1a\u6392\u653e\u5230\u5927\u6c14\u4e2d\u3002", "note_en": "New research finds that microplastics are emitted into the atmosphere.", "posttime": "2020-06-27 16:11:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u964d\u96e8,microplastic,\u53d1\u73b0", "title": "\u6570\u4ee5\u5428\u8ba1\u7684\u5fae\u578b\u5851\u6599\u964d\u96e8\u843d\u5728\u7f8e\u56fd\u897f\u90e8", "title_en": "Tons of microplastic rain onto western US", "transed": 1, "url": "https://earthsky.org/earth/microplastic-rain-western-us", "via": "", "real_tags": ["\u7f8e\u56fd", "\u964d\u96e8", "\u53d1\u73b0"]}, {"category": "", "categoryclass": "", "imagename": "65187bb80770eeb101fdbb9bc18b11a3.jpeg", "infoid": 1008545, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u670b\u53cb\u548c\u5bb6\u4eba\u5927\u7529\u5356\uff01\u4ecePalm\u4e0a\u83b7\u5f9770\u7f8e\u5143\uff0c\u6216\u5728\u6346\u7ed1\u5305\u4e0a\u6700\u591a\u8282\u7701150\u7f8e\u5143\u3002\n\u5bf9\u4e8e\u6781\u7b80\u4e3b\u4e49\u8005\u3001\u8fd0\u52a8\u5458\u548c\u5bb6\u5ead\u6765\u8bf4\uff0cPalm\u662f\u6700\u597d\u7684\u5c0f\u578b\u624b\u673a\u3002\u4f60\u7684\u6574\u4e2a\u6570\u5b57\u751f\u6d3b\u73b0\u5728\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u786c\u5e01\u53e3\u888b\u91cc\u4e86\u3002\u975e\u5e38\u9002\u5408\u4ece\u4f60\u7684\u5927\u624b\u673a\u4e0a\u4f11\u606f\u4e00\u4e0b\u3002\n\u624b\u638c\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u653e\u8fdb\u4f60\u7684\u94b1\u5305\uff0c\u6216\u8005\u85cf\u5728\u4f60\u7684\u8fd0\u52a8\u670d\u91cc\u3002\u5b83\u9002\u7528\u4e8e\u4f60\u7684\u5927\u624b\u673a\u4e0d\u80fd\u7528\u7684\u4efb\u4f55\u5730\u65b9\u3002\n\u670b\u53cb\u548c\u5bb6\u4eba\u5927\u7529\u5356\uff01\u4ecePalm\u4e0a\u83b7\u5f9770\u7f8e\u5143\uff0c\u6216\u5728\u6346\u7ed1\u5305\u4e0a\u6700\u591a\u8282\u7701150\u7f8e\u5143\u3002\n\u8d2d\u4e70\u4e00\u53f0\u672a\u4e0a\u9501\u7684Palm\u53ef\u4ee5\u8282\u770170\u7f8e\u5143\uff0c\u53e6\u5916\u6bcf\u6b21\u8d2d\u4e70Palm\u8fd8\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u4e00\u5305\u9b54\u83f2\u679c\u6c41\u3002\u53ef\u83b7\u5f97\u878d\u8d44\u3002\n\u5bf9\u4e8e\u6781\u7b80\u4e3b\u4e49\u8005\u3001\u8fd0\u52a8\u5458\u548c\u5bb6\u5ead\u6765\u8bf4\uff0cPalm\u662f\u6700\u597d\u7684\u5c0f\u578b\u624b\u673a\u3002\u4f60\u7684\u6574\u4e2a\u6570\u5b57\u751f\u6d3b\u73b0\u5728\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u786c\u5e01\u53e3\u888b\u91cc\u4e86\u3002\u975e\u5e38\u9002\u5408\u4ece\u4f60\u7684\u5927\u624b\u673a\u4e0a\u4f11\u606f\u4e00\u4e0b\u3002\n\u624b\u638c\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u653e\u8fdb\u4f60\u7684\u94b1\u5305\uff0c\u6216\u8005\u85cf\u5728\u4f60\u7684\u8fd0\u52a8\u670d\u91cc\u3002\u5b83\u9002\u7528\u4e8e\u4f60\u7684\u5927\u624b\u673a\u4e0d\u80fd\u7528\u7684\u4efb\u4f55\u5730\u65b9\u3002\nPalm\u5b9a\u5236\u76843.3&34\uff1b\u663e\u793a\u5c4f\u50cf\u7d20\u5bc6\u5ea6\u4e3a445ppi\uff0c\u63d0\u4f9b\u4ee4\u4eba\u60ca\u53f9\u7684\u4eae\u5ea6\u3001\u663e\u8457\u7684\u5bf9\u6bd4\u5ea6\u548c\u9c9c\u8273\u7684\u8272\u5f69\u3002\nIP68\u9632\u6c34\u9632\u5c18\u610f\u5473\u7740Palm\u65e2\u575a\u56fa\u53c8\u4f18\u96c5\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u7ecf\u5f97\u8d77\u6700\u5267\u70c8\u7684\u6d3b\u52a8--\u65e0\u8bba\u4f60\u662f\u8dd1\u6b65\u3001\u6e38\u6cf3\u3001\u9a91\u81ea\u884c\u8f66\u8fd8\u662f\u5f92\u6b65\u65c5\u884c\u3002\n\u751f\u6d3b\u6a21\u5f0f\u901a\u8fc7\u5728\u6bcf\u6b21\u5173\u95ed\u5c4f\u5e55\u65f6\u4f7f\u6765\u7535\u548c\u901a\u77e5\u9759\u97f3\u6765\u6d88\u9664\u5206\u5fc3\u3002\u5f53\u4f60\u5524\u9192\u5c4f\u5e55\u65f6\uff0c\u4f60\u7684\u624b\u638c\u4f1a\u518d\u6b21\u5b8c\u5168\u8fde\u63a5\u8d77\u6765\uff0c\u6240\u4ee5\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u9519\u8fc7\u751f\u6d3b\u4e2d\u6700\u91cd\u8981\u7684\u65f6\u523b\u3002\n\u4eceGoogle Play\u5546\u5e97\u4eab\u53d7\u6570\u767e\u4e07\u6700\u65b0\u7684Android\u5e94\u7528\u7a0b\u5e8f\u3001\u6e38\u620f\u3001\u97f3\u4e50\u7b49\u3002\n\u4eceGoogle Play\u5546\u5e97\u4eab\u53d7\u6570\u767e\u4e07\u6700\u65b0\u7684Android\u5e94\u7528\u7a0b\u5e8f\u3001\u6e38\u620f\u3001\u97f3\u4e50\u7b49\u3002\n\u64ad\u653e\u97f3\u4e50\u3001\u521b\u5efa\u6d3b\u52a8\u3001\u56de\u590d\u77ed\u4fe1\u6216\u83b7\u53d6\u65b9\u5411-\u4ec5\u4f7f\u7528\u60a8\u7684\u58f0\u97f3\u3002\u53ea\u8981\u53cc\u51fb\u4fa7\u8fb9\u7684\u6309\u94ae\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\n\u901a\u8fc7\u7ed8\u5236\u641c\u7d22\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5feb\u901f\u8bbf\u95ee\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u5feb\u901f\u64cd\u4f5c\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u56fe\u6807\u6765\u542f\u52a8\u624b\u673a\u3001\u76f8\u673a\u3001\u97f3\u4e50\u548c\u6d88\u606f\u3002\n\u8bb8\u591a\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u90fd\u63d0\u4f9b\u4e86\u5feb\u901f\u64cd\u4f5c\u3002\u6309\u4f4f\u4e3b\u5c4f\u5e55\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u53ef\u4ee5\u7acb\u5373\u521b\u5efa\u6d3b\u52a8\u3001\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u64ad\u653e\u60a8\u6700\u559c\u6b22\u7684\u64ad\u653e\u5217\u8868\u3002\n\u5c06Palm\u4f5c\u4e3a\u60a8\u7684\u65e5\u5e38\u667a\u80fd\u624b\u673a\uff0c\u5e76\u914d\u6709\u81ea\u5df1\u7684\u7535\u8bdd\u53f7\u7801\u548c\u6570\u636e\u5957\u9910\u3002\n\u5c06Palm with Numbershare\u8fde\u63a5\u5230\u73b0\u6709\u7ebf\u8def\uff0c\u4ee5\u4fbf\u5b83\u5171\u4eab\u60a8\u7684\u5f53\u524d\u7535\u8bdd\u53f7\u7801\u3002\n\u975e\u5e38\u9002\u5408\u5bb6\u5ead\u8ba1\u5212\uff0c\u4e5f\u662f\u5b69\u5b50\u4eec\u7684\u7b2c\u4e00\u90e8\u624b\u673a\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4eb2\u4eba\u4fdd\u6301\u8054\u7cfb\uff0c\u4f46\u53c8\u4e0d\u4f1a\u8fc7\u5ea6\u6d88\u8d39\u3002\n\u8fd0\u8425\u5546\u517c\u5bb9\u6027\uff1a\u7f8e\u56fd\u8fd0\u8425\u5546\u89e3\u9501\u7684Palm\u4e0e\u7f8e\u56fd\u5927\u591a\u6570\u4e3b\u8981\u8fd0\u8425\u5546\u5408\u4f5c\u3002\u5b83\u4e0eVerizon\u3001AT&amp\uff1bT\u3001T-Mobile\u548cUS Mobile\u7b49\u516c\u53f8\u517c\u5bb9\u3002\u7f8e\u56fd\u89e3\u9501\u7684Palm\u4e0eSprint Network\u4ee5\u53ca\u4f7f\u7528\u76f8\u540c\u8702\u7a9d\u9891\u6bb5\u548c\u9891\u7387\u7684Sprint\u7684\u4efb\u4f55\u9644\u5c5e\u7f51\u7edc\u4e0d\u517c\u5bb9\u3002\n\u7535\u6c60\uff1aPalm\u4f7f\u7528USB-C\u5145\u7535\u5668\uff0c\u53ef\u4e0e\u4efb\u4f55\u6807\u51c6\u63d2\u5ea7\u517c\u5bb9\uff0c\u5168\u5929\u4f7f\u7528\u3002\u5728\u751f\u547d\u6a21\u5f0f\u4e0b\uff0cPalm\u7684\u5178\u578b\u7528\u9014\u662f\u83b7\u5f97\u5168\u5929\u7684\u7535\u6c60\u7eed\u822a\u65f6\u95f4\uff1a\nLTE+GPS\u4e0a\u7684\u97f3\u4e50\u953b\u70bc\uff1a\u4f7f\u7528\u6d41\u97f3\u9891\u3001GPS\u548cLTE\u8fdb\u884c\u957f\u8fbe3\u5c0f\u65f6\u7684\u6237\u5916\u953b\u70bc\u3002\n\u7535\u6c60\u5bff\u547d\u56e0\u4f7f\u7528\u3001\u914d\u7f6e\u3001\u8702\u7a9d\u8986\u76d6\u3001\u4fe1\u53f7\u5f3a\u5ea6\u3001Wi-Fi\u8fde\u63a5\u548c\u5176\u4ed6\u56e0\u7d20\u800c\u5f02\u3002\u7535\u6c60\u5bff\u547d\u5728\u8bd5\u751f\u4ea7\u5355\u5143\u4e0a\u4f7f\u7528\u9884\u53d1\u5e03\u7684\u8f6f\u4ef6\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\n\u5bf9\u4e8e\u6781\u7b80\u4e3b\u4e49\u8005\u3001\u8fd0\u52a8\u5458\u548c\u5bb6\u5ead\u6765\u8bf4\uff0cPalm\u662f\u6700\u597d\u7684\u5c0f\u578b\u624b\u673a\u3002\u4f60\u7684\u6574\u4e2a\u6570\u5b57\u751f\u6d3b\u73b0\u5728\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u786c\u5e01\u53e3\u888b\u91cc\u4e86\u3002\u975e\u5e38\u9002\u5408\u4ece\u4f60\u7684\u5927\u624b\u673a\u4e0a\u4f11\u606f\u4e00\u4e0b\u3002\n\u624b\u638c\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u653e\u8fdb\u4f60\u7684\u94b1\u5305\uff0c\u6216\u8005\u85cf\u5728\u4f60\u7684\u8fd0\u52a8\u670d\u91cc\u3002\u5b83\u9002\u7528\u4e8e\u4f60\u7684\u5927\u624b\u673a\u4e0d\u80fd\u7528\u7684\u4efb\u4f55\u5730\u65b9\u3002\nPalm\u5b9a\u5236\u76843.3&34\uff1b\u663e\u793a\u5c4f\u50cf\u7d20\u5bc6\u5ea6\u4e3a445ppi\uff0c\u63d0\u4f9b\u4ee4\u4eba\u60ca\u53f9\u7684\u4eae\u5ea6\u3001\u663e\u8457\u7684\u5bf9\u6bd4\u5ea6\u548c\u9c9c\u8273\u7684\u8272\u5f69\u3002\nIP68\u9632\u6c34\u9632\u5c18\u610f\u5473\u7740Palm\u65e2\u575a\u56fa\u53c8\u4f18\u96c5\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u7ecf\u5f97\u8d77\u6700\u5267\u70c8\u7684\u6d3b\u52a8--\u65e0\u8bba\u4f60\u662f\u8dd1\u6b65\u3001\u6e38\u6cf3\u3001\u9a91\u81ea\u884c\u8f66\u8fd8\u662f\u5f92\u6b65\u65c5\u884c\u3002\n\u751f\u6d3b\u6a21\u5f0f\u901a\u8fc7\u5728\u6bcf\u6b21\u5173\u95ed\u5c4f\u5e55\u65f6\u4f7f\u6765\u7535\u548c\u901a\u77e5\u9759\u97f3\u6765\u6d88\u9664\u5206\u5fc3\u3002\u5f53\u4f60\u5524\u9192\u5c4f\u5e55\u65f6\uff0c\u4f60\u7684\u624b\u638c\u4f1a\u518d\u6b21\u5b8c\u5168\u8fde\u63a5\u8d77\u6765\uff0c\u6240\u4ee5\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u9519\u8fc7\u751f\u6d3b\u4e2d\u6700\u91cd\u8981\u7684\u65f6\u523b\u3002\n\u4eceGoogle Play\u5546\u5e97\u4eab\u53d7\u6570\u767e\u4e07\u6700\u65b0\u7684Android\u5e94\u7528\u7a0b\u5e8f\u3001\u6e38\u620f\u3001\u97f3\u4e50\u7b49\u3002\n\u64ad\u653e\u97f3\u4e50\u3001\u521b\u5efa\u6d3b\u52a8\u3001\u56de\u590d\u77ed\u4fe1\u6216\u83b7\u53d6\u65b9\u5411-\u4ec5\u4f7f\u7528\u60a8\u7684\u58f0\u97f3\u3002\u53ea\u8981\u53cc\u51fb\u4fa7\u8fb9\u7684\u6309\u94ae\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\n\u901a\u8fc7\u7ed8\u5236\u641c\u7d22\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5feb\u901f\u8bbf\u95ee\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u5feb\u901f\u64cd\u4f5c\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u56fe\u6807\u6765\u542f\u52a8\u624b\u673a\u3001\u76f8\u673a\u3001\u97f3\u4e50\u548c\u6d88\u606f\u3002\n\u8bb8\u591a\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u90fd\u63d0\u4f9b\u4e86\u5feb\u901f\u64cd\u4f5c\u3002\u6309\u4f4f\u4e3b\u5c4f\u5e55\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u53ef\u4ee5\u7acb\u5373\u521b\u5efa\u6d3b\u52a8\u3001\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u64ad\u653e\u60a8\u6700\u559c\u6b22\u7684\u64ad\u653e\u5217\u8868\u3002\n\u5c06Palm\u4f5c\u4e3a\u60a8\u7684\u65e5\u5e38\u667a\u80fd\u624b\u673a\uff0c\u5e76\u914d\u6709\u81ea\u5df1\u7684\u7535\u8bdd\u53f7\u7801\u548c\u6570\u636e\u5957\u9910\u3002\n\u5c06Palm with Numbershare\u8fde\u63a5\u5230\u73b0\u6709\u7ebf\u8def\uff0c\u4ee5\u4fbf\u5b83\u5171\u4eab\u60a8\u7684\u5f53\u524d\u7535\u8bdd\u53f7\u7801\u3002\n\u975e\u5e38\u9002\u5408\u5bb6\u5ead\u8ba1\u5212\uff0c\u4e5f\u662f\u5b69\u5b50\u4eec\u7684\u7b2c\u4e00\u90e8\u624b\u673a\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4eb2\u4eba\u4fdd\u6301\u8054\u7cfb\uff0c\u4f46\u53c8\u4e0d\u4f1a\u8fc7\u5ea6\u6d88\u8d39\u3002\n\u8fd0\u8425\u5546\u517c\u5bb9\u6027\uff1a\u7f8e\u56fd\u8fd0\u8425\u5546\u89e3\u9501\u7684Palm\u4e0e\u7f8e\u56fd\u5927\u591a\u6570\u4e3b\u8981\u8fd0\u8425\u5546\u5408\u4f5c\u3002\u5b83\u4e0eVerizon\u3001AT&amp\uff1bT\u3001T-Mobile\u548cUS Mobile\u7b49\u516c\u53f8\u517c\u5bb9\u3002\u7f8e\u56fd\u89e3\u9501\u7684Palm\u4e0eSprint Network\u4ee5\u53ca\u4f7f\u7528\u76f8\u540c\u8702\u7a9d\u9891\u6bb5\u548c\u9891\u7387\u7684Sprint\u7684\u4efb\u4f55\u9644\u5c5e\u7f51\u7edc\u4e0d\u517c\u5bb9\u3002\n\u7535\u6c60\uff1aPalm\u4f7f\u7528USB-C\u5145\u7535\u5668\uff0c\u53ef\u4e0e\u4efb\u4f55\u6807\u51c6\u63d2\u5ea7\u517c\u5bb9\uff0c\u5168\u5929\u4f7f\u7528\u3002\u5728\u751f\u547d\u6a21\u5f0f\u4e0b\uff0cPalm\u7684\u5178\u578b\u7528\u9014\u662f\u83b7\u5f97\u5168\u5929\u7684\u7535\u6c60\u7eed\u822a\u65f6\u95f4\uff1a\nLTE+GPS\u4e0a\u7684\u97f3\u4e50\u953b\u70bc\uff1a\u4f7f\u7528\u6d41\u97f3\u9891\u3001GPS\u548cLTE\u8fdb\u884c\u957f\u8fbe3\u5c0f\u65f6\u7684\u6237\u5916\u953b\u70bc\u3002\n\u7535\u6c60\u5bff\u547d\u56e0\u4f7f\u7528\u3001\u914d\u7f6e\u3001\u8702\u7a9d\u8986\u76d6\u3001\u4fe1\u53f7\u5f3a\u5ea6\u3001Wi-Fi\u8fde\u63a5\u548c\u5176\u4ed6\u56e0\u7d20\u800c\u5f02\u3002\u7535\u6c60\u5bff\u547d\u5728\u8bd5\u751f\u4ea7\u5355\u5143\u4e0a\u4f7f\u7528\u9884\u53d1\u5e03\u7684\u8f6f\u4ef6\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\nPalm\u5b9a\u5236\u76843.3&34\uff1b\u663e\u793a\u5c4f\u50cf\u7d20\u5bc6\u5ea6\u4e3a445ppi\uff0c\u63d0\u4f9b\u4ee4\u4eba\u60ca\u53f9\u7684\u4eae\u5ea6\u3001\u663e\u8457\u7684\u5bf9\u6bd4\u5ea6\u548c\u9c9c\u8273\u7684\u8272\u5f69\u3002\nIP68\u9632\u6c34\u9632\u5c18\u610f\u5473\u7740Palm\u65e2\u575a\u56fa\u53c8\u4f18\u96c5\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u7ecf\u5f97\u8d77\u6700\u5267\u70c8\u7684\u6d3b\u52a8--\u65e0\u8bba\u4f60\u662f\u8dd1\u6b65\u3001\u6e38\u6cf3\u3001\u9a91\u81ea\u884c\u8f66\u8fd8\u662f\u5f92\u6b65\u65c5\u884c\u3002\n\u751f\u6d3b\u6a21\u5f0f\u901a\u8fc7\u5728\u6bcf\u6b21\u5173\u95ed\u5c4f\u5e55\u65f6\u4f7f\u6765\u7535\u548c\u901a\u77e5\u9759\u97f3\u6765\u6d88\u9664\u5206\u5fc3\u3002\u5f53\u4f60\u5524\u9192\u5c4f\u5e55\u65f6\uff0c\u4f60\u7684\u624b\u638c\u4f1a\u518d\u6b21\u5b8c\u5168\u8fde\u63a5\u8d77\u6765\uff0c\u6240\u4ee5\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u9519\u8fc7\u751f\u6d3b\u4e2d\u6700\u91cd\u8981\u7684\u65f6\u523b\u3002\n\u4eceGoogle Play\u5546\u5e97\u4eab\u53d7\u6570\u767e\u4e07\u6700\u65b0\u7684Android\u5e94\u7528\u7a0b\u5e8f\u3001\u6e38\u620f\u3001\u97f3\u4e50\u7b49\u3002\n\u64ad\u653e\u97f3\u4e50\u3001\u521b\u5efa\u6d3b\u52a8\u3001\u56de\u590d\u77ed\u4fe1\u6216\u83b7\u53d6\u65b9\u5411-\u4ec5\u4f7f\u7528\u60a8\u7684\u58f0\u97f3\u3002\u53ea\u8981\u53cc\u51fb\u4fa7\u8fb9\u7684\u6309\u94ae\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\n\u901a\u8fc7\u7ed8\u5236\u641c\u7d22\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5feb\u901f\u8bbf\u95ee\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u5feb\u901f\u64cd\u4f5c\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u56fe\u6807\u6765\u542f\u52a8\u624b\u673a\u3001\u76f8\u673a\u3001\u97f3\u4e50\u548c\u6d88\u606f\u3002\n\u8bb8\u591a\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u90fd\u63d0\u4f9b\u4e86\u5feb\u901f\u64cd\u4f5c\u3002\u6309\u4f4f\u4e3b\u5c4f\u5e55\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u53ef\u4ee5\u7acb\u5373\u521b\u5efa\u6d3b\u52a8\u3001\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u64ad\u653e\u60a8\u6700\u559c\u6b22\u7684\u64ad\u653e\u5217\u8868\u3002\n\u4f7f\u7528Palm\u4f5c\u4e3a\u60a8\u7684\u65e5\u5e38\u667a\u80fd\u624b\u673a\uff0c\u5e76\u914d\u6709\u81ea\u5df1\u7684\u7535\u8bdd\u53f7\u7801\u548c\u6570\u636e\u5957\u9910\u3002\u200b\u3002\n\u5c06Palm with Numbershare\u8fde\u63a5\u5230\u73b0\u6709\u7ebf\u8def\uff0c\u4ee5\u4fbf\u5b83\u5171\u4eab\u60a8\u7684\u5f53\u524d\u7535\u8bdd\u53f7\u7801\u3002\n\u975e\u5e38\u9002\u5408\u5bb6\u5ead\u8ba1\u5212\uff0c\u4e5f\u662f\u5b69\u5b50\u4eec\u7684\u7b2c\u4e00\u90e8\u624b\u673a\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4eb2\u4eba\u4fdd\u6301\u8054\u7cfb\uff0c\u4f46\u53c8\u4e0d\u4f1a\u8fc7\u5ea6\u6d88\u8d39\u3002\n\u8fd0\u8425\u5546\u517c\u5bb9\u6027\uff1a\u7f8e\u56fd\u8fd0\u8425\u5546\u89e3\u9501\u7684Palm\u4e0e\u7f8e\u56fd\u5927\u591a\u6570\u4e3b\u8981\u8fd0\u8425\u5546\u5408\u4f5c\u3002\u5b83\u4e0eVerizon\u3001AT&amp\uff1bT\u3001T-Mobile\u548cUS Mobile\u7b49\u516c\u53f8\u517c\u5bb9\u3002\u7f8e\u56fd\u89e3\u9501\u7684Palm\u4e0eSprint Network\u4ee5\u53ca\u4f7f\u7528\u76f8\u540c\u8702\u7a9d\u9891\u6bb5\u548c\u9891\u7387\u7684Sprint\u7684\u4efb\u4f55\u9644\u5c5e\u7f51\u7edc\u4e0d\u517c\u5bb9\u3002\n\u7535\u6c60\uff1aPalm\u4f7f\u7528USB-C\u5145\u7535\u5668\uff0c\u53ef\u4e0e\u4efb\u4f55\u6807\u51c6\u63d2\u5ea7\u517c\u5bb9\uff0c\u5168\u5929\u4f7f\u7528\u3002\u5728\u751f\u547d\u6a21\u5f0f\u4e0b\uff0cPalm\u7684\u5178\u578b\u7528\u9014\u662f\u83b7\u5f97\u5168\u5929\u7684\u7535\u6c60\u7eed\u822a\u65f6\u95f4\uff1a\nLTE+GPS\u4e0a\u7684\u97f3\u4e50\u953b\u70bc\uff1a\u4f7f\u7528\u6d41\u97f3\u9891\u3001GPS\u548cLTE\u8fdb\u884c\u957f\u8fbe3\u5c0f\u65f6\u7684\u6237\u5916\u953b\u70bc\u3002\n\u7535\u6c60\u5bff\u547d\u56e0\u4f7f\u7528\u3001\u914d\u7f6e\u3001\u8702\u7a9d\u8986\u76d6\u3001\u4fe1\u53f7\u5f3a\u5ea6\u3001Wi-Fi\u8fde\u63a5\u548c\u5176\u4ed6\u56e0\u7d20\u800c\u5f02\u3002\u7535\u6c60\u5bff\u547d\u5728\u8bd5\u751f\u4ea7\u5355\u5143\u4e0a\u4f7f\u7528\u9884\u53d1\u5e03\u7684\u8f6f\u4ef6\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002", "note_en": "Friends &amp; family sale! Get $70 off Palm  or save up to $150 on bundles.\n  Palm is the best small phone for minimalists, athletes, and families. Your entire digital life now fits in a coin pocket. Perfect for taking a break from your big phone.\n   Palm is small enough to fit in your wallet or hide inside your workout clothes. It fits everywhere your big phone can&#39;t.\n Friends &amp; family sale! Get $70 off Palm or save up to $150 on bundles.\n Save $70 on an unlocked Palm, plus get a free mophie juice pack with each purchase of a Palm. Financing available.\n  Palm is the best small phone for minimalists, athletes, and families. Your entire digital life now fits in a coin pocket. Perfect for taking a break from your big phone.\n Palm is small enough to fit in your wallet or hide inside your workout clothes. It fits everywhere your big phone can&#39;t.\n Palm\u2019s custom 3.3&#34; display has a pixel density of 445ppi, delivering stunning brightness, remarkable contrast and vivid colors.\n  IP68 water and dust resistance means Palm is as rugged as it is elegant so it can stand up to the most strenuous activities\u2014whether you&#39;re running, swimming, biking or hiking.\n    Life Mode eliminates distraction by silencing incoming calls and notifications every time the screen is turned off. When you wake the screen, your Palm becomes fully connected again so you\u2019ll never miss out on life&#39;s most important moments.\n  Enjoy millions of the latest Android apps, games, music and more from the Google Play Store.\n  Enjoy millions of the latest Android apps, games, music and more from the Google Play Store.\n  Play music, create events, reply to texts, or get directions\u2014using just your voice. Just double-press the side button to get started.\n   Quickly access your favorite apps and quick actions by drawing the first letter of your search. You can also launch your phone, camera, music, and messages by tapping the icons.\n  Quick Actions are available on many of your favorite apps. Press and hold the app icon on your home screen to instantly create an event, send an email, or play your favorite playlist.\n    Use Palm as your everyday smartphone, complete with its own phone number and data plan.\n  Connect Palm with Numbershare to an existing line so it shares your current phone number.\n  Perfect for family plans and first phone for kids to keep your loved ones connected, but not overly consumed.\n Carrier Compatibility: The U.S. carrier unlocked Palm works with most major U.S. carriers. It is compatible with Verizon, AT&amp;T, T-Mobile, and US Mobile among others. The U.S. Unlocked Palm is not compatible with the Sprint Network, and any subsidiary networks of Sprint using the same cellular bands and frequencies.\n      Battery: Palm uses a USB-C charger that is compatible with any standard outlet for all-day use. With Life Mode, Palm gets an all-day battery life with typical use:\n  Music Over LTE + GPS Workout: Up to 3 hours outdoor workout with streaming audio, GPS, and LTE\n      Battery life differs by use, configuration, cellular coverage, signal strength, Wi-Fi connection and other factors. Battery life was tested on a pre-production unit using pre-released software.\n   Palm is the best small phone for minimalists, athletes, and families. Your entire digital life now fits in a coin pocket. Perfect for taking a break from your big phone.\n Palm is small enough to fit in your wallet or hide inside your workout clothes. It fits everywhere your big phone can&#39;t.\n Palm\u2019s custom 3.3&#34; display has a pixel density of 445ppi, delivering stunning brightness, remarkable contrast and vivid colors.\n  IP68 water and dust resistance means Palm is as rugged as it is elegant so it can stand up to the most strenuous activities\u2014whether you&#39;re running, swimming, biking or hiking.\n    Life Mode eliminates distraction by silencing incoming calls and notifications every time the screen is turned off. When you wake the screen, your Palm becomes fully connected again so you\u2019ll never miss out on life&#39;s most important moments.\n   Enjoy millions of the latest Android apps, games, music and more from the Google Play Store.\n  Play music, create events, reply to texts, or get directions\u2014using just your voice. Just double-press the side button to get started.\n   Quickly access your favorite apps and quick actions by drawing the first letter of your search. You can also launch your phone, camera, music, and messages by tapping the icons.\n  Quick Actions are available on many of your favorite apps. Press and hold the app icon on your home screen to instantly create an event, send an email, or play your favorite playlist.\n   Use Palm as your everyday smartphone, complete with its own phone number and data plan.\n  Connect Palm with Numbershare to an existing line so it shares your current phone number.\n  Perfect for family plans and first phone for kids to keep your loved ones connected, but not overly consumed.\n Carrier Compatibility: The U.S. carrier unlocked Palm works with most major U.S. carriers. It is compatible with Verizon, AT&amp;T, T-Mobile, and US Mobile among others. The U.S. Unlocked Palm is not compatible with the Sprint Network, and any subsidiary networks of Sprint using the same cellular bands and frequencies.\n      Battery: Palm uses a USB-C charger that is compatible with any standard outlet for all-day use. With Life Mode, Palm gets an all-day battery life with typical use:\n  Music Over LTE + GPS Workout: Up to 3 hours outdoor workout with streaming audio, GPS, and LTE\n      Battery life differs by use, configuration, cellular coverage, signal strength, Wi-Fi connection and other factors. Battery life was tested on a pre-production unit using pre-released software.\n  Palm\u2019s custom 3.3&#34; display has a pixel density of 445ppi, delivering stunning brightness, remarkable contrast and vivid colors.\n  IP68 water and dust resistance means Palm is as rugged as it is elegant so it can stand up to the most strenuous activities\u2014 whether you&#39;re running, swimming, biking or hiking.\n  Life Mode eliminates distraction by silencing incoming calls and notifications every time the screen is turned off. When you wake the screen, your Palm becomes fully connected again so you\u2019ll never miss out on life&#39;s most important moments.\n Enjoy millions of the latest Android apps, games, music and more from the Google Play Store.\n   Play music, create events, reply to texts, or get directions\u2014using just your voice. Just double-press the side button to get started.\n  Quickly access your favorite apps and quick actions by drawing the first letter of your search. You can also launch your phone, camera, music, and messages by tapping the icons.\n  Quick Actions are available on many of your favorite apps. Press and hold the app icon on your home screen to instantly create an event, send an email, or play your favorite playlist.\n  Use Palm as your everyday smartphone, complete with its own phone number and data plan.\u200b\n  Connect Palm with Numbershare to an existing line so it shares your current phone number.\n  Perfect for family plans and first phone for kids to keep your loved ones connected, but not overly consumed.\n Carrier Compatibility: The U.S. carrier unlocked Palm works with most major U.S. carriers. It is compatible with Verizon, AT&amp;T, T-Mobile, and US Mobile among others. The U.S. Unlocked Palm is not compatible with the Sprint Network, and any subsidiary networks of Sprint using the same cellular bands and frequencies.\n      Battery: Palm uses a USB-C charger that is compatible with any standard outlet for all-day use. With Life Mode, Palm gets an all-day battery life with typical use:\n  Music Over LTE + GPS Workout: Up to 3 hours outdoor workout with streaming audio, GPS, and LTE\n      Battery life differs by use, configuration, cellular coverage, signal strength, Wi-Fi connection and other factors. Battery life was tested on a pre-production unit using pre-released software.", "posttime": "2020-06-27 16:10:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u8fd0\u52a8\u5458,small,palm", "title": "Palm-\u6700\u9002\u5408\u6781\u7b80\u4e3b\u4e49\u8005\u3001\u8fd0\u52a8\u5458\u548c\u513f\u7ae5\u7684\u5c0f\u578b\u624b\u673a", "title_en": "Palm \u2013 The best small phone for minimalists, athletes, and kids", "transed": 1, "url": "https://palm.com/pages/product", "via": "", "real_tags": ["\u624b\u673a", "\u8fd0\u52a8\u5458", "small", "palm"]}, {"category": "", "categoryclass": "", "imagename": "fff1c48c9aae3a3ccb4f4d45508cfcdc.png", "infoid": 1008543, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6211\u76ee\u524d\u6b63\u5728\u5bf9Genode\u7684\u4f4e\u7ea7GUI\u5806\u6808\u8fdb\u884c\u610f\u4e49\u6df1\u8fdc\u7684\u4fee\u6539\uff0c\u6211\u60f3\u5206\u4eab\u4e00\u4e0b\u8fd9\u9879\u5de5\u4f5c\u80cc\u540e\u7684\u4e00\u4e9b\u80cc\u666f\uff1a\u4e3a\u4ec0\u4e48\u3001\u4ec0\u4e48\u548c\u5982\u4f55\u3002\nGenode\u5f53\u524d\u7248\u672c\u7684\u4f4e\u7ea7GUI\u76f8\u5173\u754c\u9762\u4e0e\u6211\u4eec\u57282006\u5e74\u6700\u521d\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u3002Genode\u5bf9\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7ec4\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u975e\u5e38\u5f3a\u70c8\u7684\u975e\u5bf9\u79f0\u6982\u5ff5\u3002\u5728\u6b64\u5173\u7cfb\u4e2d\uff0c\u5ba2\u6237\u7aef\u4f9d\u8d56\u4e8e\u670d\u52a1\u5668\uff0c\u4f46\u670d\u52a1\u5668\u4e0d\u4f9d\u8d56\u4e8e\u5ba2\u6237\u7aef\u3002\n\u5728\u6700\u4f4e\u7ea7\u522b\uff0c\u5e27\u7f13\u51b2\u533a\u9a71\u52a8\u7a0b\u5e8f\u548c\u8f93\u5165\u9a71\u52a8\u7a0b\u5e8f\u88ab\u8bbe\u60f3\u4e3a\u5411\u66f4\u9ad8\u7ea7\u522b\u7684GUI\u7ec4\u4ef6\u63d0\u4f9b\u5e27\u7f13\u51b2\u533a\u548c\u8f93\u5165\u4f1a\u8bdd\u63a5\u53e3\u7684\u670d\u52a1\u5668\u3002\u4ece\u6211\u4eec\u4ee5\u524d\u7684\u5b66\u672f\u89c2\u70b9\u6765\u770b\uff0c\u8fd9\u611f\u89c9\u5f88\u81ea\u7136\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u4e3a\u5176\u4ed6\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u8d44\u6e90\u3002\u63d0\u4f9b..\u3002\u53d1\u7403..\u3002\u670d\u52a1\u5668\uff01NitPicker GUI\u670d\u52a1\u5668\u4f7f\u7528\u8fd9\u4e9b\u4f4e\u7ea7\u670d\u52a1\u6765\u5b9e\u73b0\u6700\u7ec8\u5141\u8bb8\u56fe\u5f62\u548c\u8f93\u5165\u591a\u8def\u590d\u7528\u7684\u9ad8\u7ea7\u670d\u52a1\u3002NitPicker\u865a\u62df\u5316\u4e86\u4f4e\u7ea7\u5e27\u7f13\u51b2\u533a\u548c\u8f93\u5165\u63a5\u53e3\uff0c\u540c\u65f6\u8865\u5145\u4e86\u53ef\u89c1\u89c6\u56fe\u548c\u8f93\u5165\u7126\u70b9\u7684\u6982\u5ff5\u3002\u8fd9\u6837\u7684\u7cfb\u7edf\u770b\u8d77\u6765\u5982\u4e0b\u6240\u793a\uff1a\n\u9a71\u52a8\u7a0b\u5e8f\u548cNickPicker GUI\u670d\u52a1\u5668\u663e\u793a\u4e3a\u7ea2\u8272\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u670d\u52a1\u5668\u3002\u53f3\u4fa7\u7684GUI\u5e94\u7528\u7a0b\u5e8f\u662f\u6311\u5254\u7684\u5ba2\u6237\u7aef\u3002\u53cd\u8fc7\u6765\uff0cNitPicker\u662f\u5e27\u7f13\u51b2\u533a\u548c\u8f93\u5165\u9a71\u52a8\u7a0b\u5e8f\u7684\u5ba2\u6237\u7aef\u3002\nNitPicker GUI\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u754c\u9762\u662f\u4e00\u4e2a\u6210\u529f\u7684\u6848\u4f8b\u3002\u5c3d\u7ba1\u505a\u4e86\u4e00\u4e9b\u8fdb\u5316\u4e0a\u7684\u8c03\u6574\uff0c\u4f46\u539f\u59cb\u8bbe\u8ba1\u53ef\u6269\u5c55\u5230Sculpt OS\u7684\u7a97\u53e3\u5de5\u4f5c\u73af\u5883\uff0c\u540c\u65f6\u4fdd\u7559\u4e86NickPicker GUI\u670d\u52a1\u5668\u7684\u5fae\u5c0f\u590d\u6742\u6027\u3002\n\u7136\u800c\uff0c\u5c06\u5e27\u7f13\u51b2\u533a\u548c\u8f93\u5165\u9a71\u52a8\u7a0b\u5e8f\u5efa\u6a21\u4e3a\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u662f\u4e00\u6761\u6b7b\u80e1\u540c\uff0c\u539f\u56e0\u5982\u4e0b\u3002\n\u9a71\u52a8\u7a0b\u5e8f\u6709\u65f6\u975e\u5e38\u590d\u6742\u3002\u4f8b\u5982\uff0c\u5f53\u8003\u8651\u5230Intel\u5e27\u7f13\u51b2\u533a\u9a71\u52a8\u7a0b\u5e8f(\u4eceLinux\u5185\u6838\u79fb\u690d)\u7684\u590d\u6742\u6027\u65f6\uff0c\u76f8\u4fe1\u5b83\u4e0d\u4f1a\u5931\u8d25\u4f1a\u8ba9\u4eba\u89c9\u5f97\u5f88\u611a\u8822\u3002\u4f46\u662f\uff0c\u56e0\u4e3aNickPicker GUI\u670d\u52a1\u5668\u4f9d\u8d56\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u7684\u6d3b\u8dc3\u6027\uff0c\u6240\u4ee5\u9a71\u52a8\u7a0b\u5e8f\u7684\u6b63\u5e38\u8fd0\u884c\u662f\u6574\u4e2aGUI\u5806\u6808\u548c\u6240\u6709GUI\u5e94\u7528\u7a0b\u5e8f\u7684\u5173\u952e\u8def\u5f84\u3002\n\u5728\u4e0d\u91cd\u65b0\u542f\u52a8GUI\u5806\u6808\u548c\u6240\u6709GUI\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u900f\u660e\u5730\u91cd\u65b0\u542f\u52a8\u6216\u66ff\u6362\u9a71\u52a8\u7a0b\u5e8f\u3002\u8fd9\u662f\u56e0\u4e3aNitPicker GUI\u670d\u52a1\u5668\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9a71\u52a8\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u8fde\u63a5\u5c31\u50cfGUI\u670d\u52a1\u5668\u7684\u751f\u547d\u7ebf\u3002\u5207\u65ad\u8fd9\u4e9b\u6700\u7ec8\u4f1a\u6740\u6b7bGUI\u670d\u52a1\u5668\u3002\n\u6dfb\u52a0\u8f85\u52a9\u663e\u793a\u76f8\u5f53\u56f0\u96be\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981ickicker\u77e5\u9053\u6709\u54ea\u4e9b\u5e27\u7f13\u51b2\u533a\u670d\u52a1\u5668\uff0c\u5e76\u8bf7\u6c42\u591a\u4e2a\u5e27\u7f13\u51b2\u533a\u8fde\u63a5\u3002\u6dfb\u52a0\u8fd9\u6837\u7684\u534f\u8bae\u4f1a\u589e\u52a0\u6311\u5254\u7684\u590d\u6742\u6027\u3002\n\u8981\u514b\u670d\u8fd9\u4e9b\u9650\u5236\uff0c\u6211\u4eec\u5fc5\u987b\u6253\u7834GUI\u670d\u52a1\u5668\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5728\u6b64\u65b9\u6848\u4e2d\uff0cGUI\u670d\u52a1\u5668\u4e0d\u518d\u4f7f\u7528\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528GUI\u670d\u52a1\u5668\u3002\u8fd9\u79cd\u5173\u7cfb\u662f\u98a0\u5012\u7684\u3002\u53ea\u6709NickPicker GUI\u670d\u52a1\u5668\u4fdd\u6301\u7ea2\u8272\u3002\u5f53\u7136\uff0c\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u80fd\u901a\u8fc7NitPicker\u7684\u5e38\u89c4\u5ba2\u6237\u7aef\u754c\u9762\u4e0eNitPicker GUI\u670d\u52a1\u5668\u901a\u4fe1\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4e24\u4e2a\u65b0\u63a5\u53e3\u8fdb\u5165\u753b\u9762\uff1a\n\u7c7b\u4f3c\u4e8e\u539f\u59cbFrameBuffer\u4f1a\u8bdd\u63a5\u53e3\u7684\u53cd\u8f6c\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u50cf\u7d20\u6570\u636e\u3002\u4eceGUI\u670d\u52a1\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5e27\u7f13\u51b2\u533a\u9a71\u52a8\u7a0b\u5e8f\u5c31\u50cf\u4e00\u4e2a\u5e27\u6355\u83b7\u8bbe\u5907--\u7684\u786e\u5982\u6b64\u3002\n\u7c7b\u4f3c\u4e8e\u539f\u59cb\u8f93\u5165\u4f1a\u8bdd\u63a5\u53e3\u7684\u53cd\u8f6c\u3002\u4e0e\u5141\u8bb8\u5ba2\u6237\u7aef\u83b7\u53d6\u8f93\u5165\u4e8b\u4ef6\u7684\u8f93\u5165\u4f1a\u8bdd\u4e0d\u540c\uff0c\u4e8b\u4ef6\u4f1a\u8bdd\u5141\u8bb8\u5ba2\u6237\u7aef\u5f15\u53d1\u8f93\u5165\u4e8b\u4ef6\u3002NitPicker\u662f\u4e00\u4e2a\u4e8b\u4ef6\u670d\u52a1\u5668\uff0c\u5b83\u4f7f\u7528\u6765\u81ea\u9a71\u52a8\u7a0b\u5e8f\u7684\u8f93\u5165\u4e8b\u4ef6\u3002\n\u4f4e\u590d\u6742\u6027\u7684GUI\u670d\u52a1\u5668\u4ecd\u7136\u662f\u552f\u4e00\u4e0d\u4f1a\u51fa\u73b0\u6545\u969c\u7684\u7ec4\u4ef6\uff0c\u8fd9\u4f7f\u5f97GUI\u5806\u6808\u4e0e\u4eca\u5929\u76f8\u6bd4\u5177\u6709\u66f4\u5f3a\u7684\u5f39\u6027\u3002\n\u7531\u4e8eNitPicker GUI\u670d\u52a1\u5668\u4e0d\u518d\u4f9d\u8d56\u4e8e\u9a71\u52a8\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u5728\u9a71\u52a8\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\u542f\u52a8\uff0c\u4ece\u800c\u52a0\u5feb\u4e86\u56fe\u5f62\u5316\u573a\u666f\u7684\u542f\u52a8\u65f6\u95f4\u3002\u5728\u7535\u6e90\u7ba1\u7406\u4e25\u683c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u9664\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5e76\u5173\u95ed\u56fe\u5f62\u8bbe\u5907\uff0c\u540c\u65f6GUI\u670d\u52a1\u5668\u548c\u6240\u6709GUI\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u5b8c\u597d\u3002\n\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u968f\u65f6\u91cd\u65b0\u542f\u52a8\u3002\u4eceNitPicker GUI\u670d\u52a1\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u5ba2\u6237\u673a\u65ad\u5f00\u8fde\u63a5\u3002\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u66ff\u6362\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff0c\u4ea4\u6362VESA\u548c\u82f1\u7279\u5c14\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u5c06\u591a\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u8fde\u63a5\u5230NitPicker GUI\u670d\u52a1\u5668\u5728\u6982\u5ff5\u4e0a\u53d8\u5f97\u5f88\u7b80\u5355\u3002\u8fd9\u4e3a\u591a\u5934\u652f\u6491\u626b\u6e05\u4e86\u9053\u8def\u3002\nNitPicker GUI\u670d\u52a1\u5668\u7684\u65b0\u6355\u83b7\u4f1a\u8bdd\u754c\u9762\u5c06\u662f\u5b9e\u73b0\u5c4f\u5e55\u622a\u56fe/\u5c4f\u5e55\u622a\u56fe\u5e94\u7528\u7a0b\u5e8f\u6216\u8fdc\u7a0b\u684c\u9762\u670d\u52a1\u5668\u7684\u53f3\u94a9\u3002\n\u4e0e\u6355\u83b7\u8bbe\u5907\u7c7b\u4f3c\uff0c\u8f93\u5165\u8bbe\u5907\u53ef\u4ee5\u5728\u4e0d\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u968f\u65f6\u8fdb\u5165\u548c\u79bb\u5f00\u7cfb\u7edf\uff0c\u8fd9\u5c06\u5141\u8bb8\u5bf9USB HID\u8bbe\u5907\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7ba1\u7406\u3002\u8003\u8651\u4e00\u4e0b\u5728\u60a8\u7684\u96d5\u5851\u7cfb\u7edf\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684HID\u8bbe\u5907\u3002\u4e00\u4e2a\u65b0\u7684USB\u8bbe\u5907\u5c06\u4f1a\u51fa\u73b0\u3002\u7528\u6237\u53ef\u4ee5\u5229\u7528\u5c06\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e8b\u4ef6\u4f1a\u8bdd\u8def\u7531\u5230\u7cfb\u7edfGUI\u670d\u52a1\u5668\u7684\u9009\u9879\u6765\u90e8\u7f72\u5339\u914d\u7684HID\u9a71\u52a8\u7a0b\u5e8f\u3002\u90a3\u4e0d\u662f\u5f88\u68d2\u5417\uff1f\n\u4e0d\u5229\u7684\u4e00\u9762\u662f\u4ec0\u4e48\uff1f\u8fd9\u662f\u4e00\u9879\u7e41\u91cd\u7684\u5de5\u4f5c\uff01\u8fd9\u5c06\u5f15\u5bfc\u6211\u4eec\u8fdb\u5165\u4e0b\u4e00\u8282\u3002\n\u98a0\u5012\u4f4e\u7ea7\u4f1a\u8bdd\u63a5\u53e3\u662f\u4e00\u79cd\u4fb5\u5165\u6027\u64cd\u4f5c\uff0c\u5fc5\u987b\u5206\u51e0\u4e2a\u6b65\u9aa4\u6267\u884c\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u4f1a\u4ea7\u751f\u4e2d\u95f4\u4e00\u81f4\u7684\u72b6\u6001\u3002\n\u6211\u4eec\u4ece\u4e00\u4e9b\u4f4e\u98ce\u9669\u7684\u4fee\u9970\u66f4\u6539\u5f00\u59cb\uff0c\u5373\u5c06\u6311\u5254\u4f1a\u8bdd\u63a5\u53e3\u91cd\u547d\u540d\u4e3a\u4f1a\u8bdd\u3002\u5728\u7279\u5b9a\u5b9e\u73b0\u4e4b\u540e\uff0c\u4f1a\u8bdd\u63a5\u53e3\u7684\u5947\u602a\u6807\u8bb0\u662f\u65e9\u671f\u9057\u7559\u4e0b\u6765\u7684\u3002\u6b64\u66f4\u6539\u5df2\u8fdb\u5165Genode\u7684\u4e3b\u5206\u652f\u673a\u6784\u3002\n\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u4e00\u81f4\u4f7f\u752832\u4f4dRGB\u4f5c\u4e3a\u50cf\u7d20\u683c\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u957f\u671f\u5b58\u5728\u7684\u529f\u80fd\u8981\u6c42\uff0c\u5b83\u6d88\u9664\u4e86\u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u7684\u9700\u8981\uff0c\u901a\u5e38\u53ef\u4ee5\u63d0\u9ad8\u8f93\u51fa\u8d28\u91cf\u3002\u8fd9\u76f8\u5f53\u8d39\u529b\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u6211\u6d4b\u8bd5\u8bb8\u591a\u4e0d\u540c\u7684\u786c\u4ef6\u5e73\u53f0\uff0c\u5305\u62ec\u9a71\u52a8\u7a0b\u5e8fvea_fb_drv\u3001fb_SDL\u3001intel_fb_drv\u3001imx53_fb_drv\u3001imx8_fb_drv\u3001rpi_fb_drv\u3001boot_fb_drv\u3001omap4_fb_drv\u3001exynos5_fb_drv\u3002\u8fd9\u4e00\u53d8\u5316\u5df2\u7ecf\u8fdb\u5c55\u987a\u5229\u3002\n\u5f15\u5165\u4e00\u4e2anitPicker\u9009\u9879\uff0c\u5728\u4f7f\u7528\u8bf7\u6c42\u7684\u5e27\u7f13\u51b2\u533a\u4f1a\u8bdd(\u5982\u4eca\u5929\u6240\u505a\u7684\u90a3\u6837)\u3001\u4f7f\u7528\u6355\u6349\u5ba2\u6237\u7aef\u8fdb\u884c\u50cf\u7d20\u8f93\u51fa\u6216\u4f7f\u7528\u53e6\u4e00\u4e2aGUI\u670d\u52a1\u5668(\u7528\u4e8e\u5806\u53e0\u591a\u4e2anitPicker\u5b9e\u4f8b)\u4e4b\u95f4\u9009\u62e9\u5e27\u7f13\u51b2\u533a\u540e\u7aef\u3002\n\u5c06&#34\uff1bFramebuffer&34\uff1b\u9a71\u52a8\u7a0b\u5e8f\u8f6c\u6362\u4e3a&#34\uff1bCapture&34\uff1b\u5ba2\u6237\u7aef\uff0c\u6db5\u76d6\u4e0a\u8ff0\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u3002\u94f2\u571f\u5bc6\u7801\u3002\u8c03\u6574\u6240\u6709\u73b0\u6709\u65b9\u6848\u4ee5\u4f7f\u7528NitPicker\u7684\u6355\u83b7\u670d\u52a1\u3002\n\u4fee\u526a\u5e27\u7f13\u51b2\u533a\u5ba2\u6237\u7aef\u63a5\u53e3\u7684\u5269\u4f59\u4f7f\u7528\u3002\u5b9e\u9645\u4e0a\uff0c\u5b8c\u6210\u540e\uff0c\u6211\u5e0c\u671b\u5b8c\u5168\u5220\u9664Framebuffer\uff1a\uff1a\u8fde\u63a5\u3002\u8fd9\u5c06\u9700\u8981\u91cd\u65b0\u5904\u7406\u7ec8\u7aef\u3001Mesa\u540e\u7aef\u3001\u51e0\u4e2a\u6d4b\u8bd5\u548cLiquid_Frame Buffer\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5e0c\u671b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6d88\u9664nit_fb(\u73b0\u5728\u79f0\u4e3agui_fb)\u7ec4\u4ef6\u7684\u7528\u4f8b\uff0c\u4ee5\u4fbf\u6700\u7ec8\u53ef\u4ee5\u5220\u9664\u8be5\u7ec4\u4ef6\u3002\n\u5c06\u5176\u4ed6\u4e00\u4e9b\u5e27\u7f13\u51b2\u533a\u5ba2\u6237\u7aef\u8f6c\u6362\u4e3a\u6355\u83b7\u670d\u52a1\u5668\uff0c\u7279\u522b\u662ftest-frame buffer\u3001fb_bench\u548ctest-driver_manager\u3002\n\u5220\u9664&#34\uff1bFramebuffer&#34\uff1b\u4f1a\u8bdd\u63a5\u53e3\uff0c\u4ec5\u5c06\u8be5\u63a5\u53e3\u4fdd\u7559\u4e3aGUI\u4f1a\u8bdd\u7684\u4e00\u90e8\u5206\u3002\n\u5f15\u5165\u65b0\u7684\u4e8b\u4ef6\u4f1a\u8bdd\u63a5\u53e3\uff0c\u5e76\u5c06\u5176\u5b9e\u73b0\u6dfb\u52a0\u5230NitPicker GUI\u670d\u52a1\u5668\u3002\n\u968f\u7740\u7ed3\u6784\u53d8\u5316\u7684\u5b8c\u6210\uff0c\u73b0\u5728\u5c06\u662f\u4f18\u5316\u7684\u65f6\u5019\u4e86\u3002\u4f5c\u4e3a\u65e0\u6495\u88c2\u52a8\u753b\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u5e27\u7f13\u51b2\u5c06\u4ece\u5ba2\u6237\u7aef\u79fb\u52a8\u5230NickPicker GUI\u670d\u52a1\u5668\u3002\u9996\u5148\uff0c\u8fd9\u5bf9\u5927\u591a\u6570\u5ba2\u6237\u7aef\u90fd\u662f\u900f\u660e\u7684\u3002\u968f\u540e\u79fb\u9664\u5ba2\u6237\u7aef\u7f13\u51b2\u662f\u7b2c\u4e8c\u4e2a\u72ec\u7acb\u7684\u6b65\u9aa4\u3002\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u4f18\u5316\uff0c\u6211\u8ba1\u5212\u904d\u5386\u6240\u6709\u4f7f\u7528\u50cf\u7d20\u6296\u52a8\u7684\u5730\u65b9\u3002\n\u5728\u8fd9\u4e9b\u4e3b\u9898\u4e2d\uff0c\u5e27\u7f13\u51b2\u533a\u9a71\u52a8\u7a0b\u5e8f\u7684\u8fd4\u5de5\u80af\u5b9a\u662f\u6700\u8be6\u7ec6\u7684\u3002\u6211\u6b63\u5728\u8003\u8651\u653e\u5f03Exynos5\u548cOMAP4\u9a71\u52a8\u7a0b\u5e8f\u3002\u5c3d\u7ba1\u6211\u52aa\u529b\u5c06\u8f93\u5165\u4f1a\u8bdd\u63a5\u53e3\u66ff\u6362\u4e3a\u65b0\u7684\u4e8b\u4ef6\u4f1a\u8bdd\u63a5\u53e3\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u4fee\u6539\u8f93\u5165\u9a71\u52a8\u7a0b\u5e8f\u7684\u4efb\u52a1\u8303\u56f4\u8fd8\u4e0d\u662f\u5b8c\u5168\u660e\u786e\u7684\u3002", "note_en": "As I am currently right in the middle of a far-reaching rework of Genode&#39;s\r low-level GUI stack, I&#39;d like to share a bit of background behind this work:\r the Why, the What, and the How.\n    The current incarnation of Genode&#39;s low-level GUI-related interfaces is almost\r identical to the very first version that we originally created in 2006.\r Genode has a very strong asymmetric notion of the\r  relationship\r between client and server components. In this relationship, the client depends\r on the server but the server does not depend on the client.\n  At the lowest level, the framebuffer driver and input driver(s) were\r envisioned as servers that provide the  Framebuffer and  Input session\r interfaces to higher-level GUI components. From our former academic view, this\r felt natural because those drivers  provide  resources to other components.\r Provide... serve... server! The nitpicker GUI server uses those low-level\r services to implement a higher level service that ultimately allows for the\r multiplexing of graphics and input.\r  Nitpicker\r virtualizes the low-level framebuffer and input interfaces while supplementing\r the notions of visible views and input focus. Such a system looks as follows:\n      The drivers and the nitpicker GUI server are displayed in red because they are\r servers. The GUI applications at the right are nitpicker clients. Nitpicker,\r in turn, is a client of the framebuffer and input drivers.\n  The client interface of the nitpicker GUI server is success story. A few\r  evolutionary tweaks\r notwithstanding, the original design scales up to the windowed working\r environment of Sculpt OS while retaining the tiny complexity of the nitpicker\r GUI server.\n  However, the approach of modelling the framebuffer and input drivers as\r servers is a dead end, for the following reasons.\n  Drivers are sometimes extremely complex. When looking at the complexity of\r the Intel framebuffer driver (ported from the Linux kernel) for example, it\r feels foolish to trust that it won&#39;t fail. Because the nitpicker GUI server\r depends on the liveliness of the driver, however, the well-being of the\r driver is on the critical path for the entire GUI stack and all GUI\r applications.\n  It is impossible to transparently restart or replace the driver at runtime\r without also restarting the GUI stack and - transitively - all GUI\r applications. This is because the nitpicker GUI server is connected as a\r client to the drivers. The connections are like a life supply for the GUI\r server. Cutting those would ultimately kill the GUI server.\n  Adding secondary displays is rather difficult because this would require\r nitpicker to know what framebuffer servers are out there and to request\r multiple framebuffer connections. Adding such a protocol would inflate\r the complexity of nitpicker.\n    To overcome these limitations, we must break the dependency of the GUI\r server from the drivers, like illustrated here:\n      In this scenario, the GUI server no longer  uses the drivers, but the drivers\r use the GUI server. The relationship is reversed. Only the nitpicker GUI\r server remains red. Of course, the drivers cannot talk to nitpicker GUI\r server via nitpicker&#39;s regular client interface. Instead, two new interfaces\r enter the picture:\n  is like the inverse of the original\r  Framebuffer session interface. It allows a client to obtain pixel data\r from the server. From the GUI server&#39;s perspective, a framebuffer driver\r is like a frame capturing device - which it is.\n    is like the inverse of the original\r  Input session interface. In contrast to a input session, which allows\r a client to obtain input events, an event session allows a client to\r induce input events. Nitpicker is an event server that consumes the input\r events from the driver(s).\n    The low-complexity GUI server remains as the only component that must never\r fail, which makes the GUI stack much more resilient compared to today.\n  Since the nitpicker GUI server no longer depends on the drivers, it can be\r started before the drivers are running, speeding up the boot time of\r graphical scenarios. In scenarios with rigid power management, we can remove\r the graphics driver - and switch off the graphics device - all while the GUI\r server and all GUI applications stay intact.\n  Drivers can be restarted anytime. From the perspective of the nitpicker\r GUI server, this looks like a client disconnect and connect. Drivers\r can also be replaced at runtime, e.g., swapping out the VESA and Intel\r drivers.\n  Connecting more than one driver to the nitpicker GUI server becomes\r conceptually simple. This clears the path towards multi-head support.\n  The new capture session interface of the nitpicker GUI server would be\r the right hook for implementing screenshot/screencast applications, or a\r remote desktop server.\n  Analogously to capture devices, input devices can enter and leave the\r system at any time without disruption, which will allow for the fine-grained\r management of USB HID devices. Think of plugging a new HID device to\r your Sculpt system. A new USB device would show up.\r The user can deploy the matching HID driver with the option of routing the\r event session of the driver to the system GUI server. Isn&#39;t that wonderful?\n  What is the downside?  It is a lot of work! This leads us the following\r section.\n    Turning the low-level session interfaces upside down is an invasive operation\r that must be carried out in several steps, each yielding an intermediate\r consistent state.\n  We start off with some low-risk  cosmetic changes, namely the renaming\r of the &#34;Nitpicker&#34; session interface to &#34;Gui&#34; session. The strange\r branding of the session interface after a particular implementation is a\r relic from the early days. This\r  change has already\r entered Genode&#39;s master branch.\n  Consistently use  32-bit RGB as pixel format by all drivers and\r applications. This is a long-standing feature request that eliminates\r the need for color-space conversions and generally improves the output\r quality.\r It is quite labor-intensive because it requires me testing many\r different hardware platforms covering the drivers vesa_fb_drv, fb_sdl,\r intel_fb_drv, imx53_fb_drv, imx8_fb_drv, rpi_fb_drv, boot_fb_drv,\r omap4_fb_drv, exynos5_fb_drv.\r This  change has already\r progressed well.\n      Introduce a  nitpicker option to choose the framebuffer  back end between\r the use of a requested framebuffer session (as done today), the use of a\r capture client for the pixel output, or the use of another GUI server\r (for stacking multiple instance of nitpicker).\n  Turn &#34;Framebuffer&#34;  drivers into &#34;Capture&#34; clients, covering all the\r drivers mentioned above. Shoveling code. Adjusting all existing\r scenarios to use nitpicker&#39;s capture service.\n  Pruning the remaining use of the  framebuffer client interface.\r In fact, when done, I want to remove the  Framebuffer::Connection\r completely. This will require the reworking of the terminal, MESA back end,\r several tests, and the liquid_framebuffer. In the process, I hope to largely\r eliminate the use cases of the nit_fb (now called gui_fb) component so\r that this component can be removed in the end.\n  Turning a few other  framebuffer clients into &#34;Capture&#34; servers, in\r particular test-framebuffer, fb_bench, and test-driver_manager.\n  Removal of the &#34;Framebuffer&#34;  session interface, retaining the interface\r merely as a part of the GUI session.\n  Introducing the new  Event session  interface and adding its implementation\r to the nitpicker GUI server.\n    With the structural changes done, it would be time for optimizations.\r As a prerequisite for tear-free animations, the  frame buffering will be\r moved from the clients into the nitpicker GUI server. At first, this will be\r transparent to most clients. The subsequent removal of client-side buffering\r is second independent step. As another optimization, I plan to go though all\r places that employed the dithering of pixels.\n  Of those topics, the rework of the framebuffer drivers is certainly the most\r elaborate one. I&#39;m considering to drop the Exynos5 and OMAP4 drivers.\r Even though I strive for replacing the input session interface by the new\r event session interface, the scope of the task of reworking the input drivers\r is not yet completely tangible to me.", "posttime": "2020-06-27 16:09:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gui,\u9a71\u52a8\u7a0b\u5e8f", "title": "\u91cd\u65b0\u5806\u53e0GUI\u5806\u6808", "title_en": "Re-Stacking the GUI Stack", "transed": 1, "url": "https://genodians.org/nfeske/2020-06-23-gui-stack", "via": "", "real_tags": ["gui", "\u9a71\u52a8\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "0af4889dec1a13bc3f4365b8b80867ee.jpg", "infoid": 1008542, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b83\u7684\u8d28\u91cf\u6bd4\u574d\u584c\u7684\u4e2d\u5b50\u661f\u8981\u5927\uff0c\u4f46\u6bd4\u9ed1\u6d1e\u7684\u8d28\u91cf\u5c0f\u3002\n\u8fd9\u6837\u7684\u9ed1\u8272\u4e2d\u5b50\u661f\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5173\u4e8e\u4e2d\u5b50\u661f\u548c\u9ed1\u6d1e\u5982\u4f55\u5f62\u6210\u7684\u60f3\u6cd5\u5c06\u9700\u8981\u91cd\u65b0\u8003\u8651\u3002\n\u8fd9\u4e00\u53d1\u73b0\u662f\u7531\u4e00\u4e2a\u56fd\u9645\u56e2\u961f\u4f7f\u7528\u7f8e\u56fd\u548c\u610f\u5927\u5229\u7684\u5f15\u529b\u6ce2\u63a2\u6d4b\u5668\u505a\u51fa\u7684\u3002\n\u82f1\u56fd\u5361\u8fea\u592b\u5927\u5b66\u7684\u535a\u58eb\u751f\u67e5\u7406\u00b7\u970d\u4f0a\u53c2\u4e0e\u4e86\u8fd9\u9879\u7814\u7a76\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u4e00\u65b0\u53d1\u73b0\u5c06\u6539\u53d8\u6211\u4eec\u7684\u7406\u89e3\u3002\n\u4ed6\u544a\u8bc9BBC\u65b0\u95fb\uff0c\u6211\u4eec\u4e0d\u80fd\u6392\u9664\u4efb\u4f55\u53ef\u80fd\u6027\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\uff0c\u8fd9\u5c31\u662f\u5b83\u5982\u6b64\u4ee4\u4eba\u5174\u594b\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u5b83\u786e\u5b9e\u6539\u53d8\u4e86\u6211\u4eec\u7684\u9886\u57df\u3002\n\u8fd9\u5bb6\u56fd\u9645\u96c6\u56e2\u5f97\u5230\u4e86\u79d1\u5b66\u548c\u6280\u672f\u8bbe\u65bd\u7406\u4e8b\u4f1a(Science And Technology Facilities Council)\u7684\u5927\u529b\u652f\u6301\uff0c\u62e5\u6709\u51e0\u516c\u91cc\u957f\u7684\u6fc0\u5149\u63a2\u6d4b\u5668\uff0c\u80fd\u591f\u63a2\u6d4b\u5b87\u5b99\u4e2d\u5927\u8d28\u91cf\u7269\u4f53\u78b0\u649e\u9020\u6210\u7684\u65f6\u7a7a\u5fae\u5c0f\u6d9f\u6f2a\u3002\n\u53bb\u5e748\u6708\uff0c\u8fd9\u4e9b\u4eea\u5668\u63a2\u6d4b\u5230\u4e86\u4e00\u4e2a\u8d28\u91cf\u4e3a\u592a\u963323\u500d\u7684\u9ed1\u6d1e\u4e0e\u4e00\u4e2a2.6\u592a\u9633\u8d28\u91cf\u7684\u7269\u4f53\u7684\u78b0\u649e\u3002\n\u8fd9\u4f7f\u5f97\u8f83\u8f7b\u7684\u5929\u4f53\u6bd4\u4e4b\u524d\u89c2\u5bdf\u5230\u7684\u6700\u91cd\u7c7b\u578b\u7684\u6b7b\u661f\u6216\u4e2d\u5b50\u661f\u8d28\u91cf\u66f4\u5927\uff0c\u4e2d\u5b50\u661f\u7684\u8d28\u91cf\u7565\u9ad8\u4e8e\u4e24\u4e2a\u592a\u9633\u8d28\u91cf\u3002\u4f46\u5b83\u4e5f\u6bd4\u4e4b\u524d\u89c2\u5bdf\u5230\u7684\u6700\u8f7b\u7684\u9ed1\u6d1e-\u5927\u7ea65\u4e2a\u592a\u9633\u8d28\u91cf-\u8f7b\u3002\n\u5929\u6587\u5b66\u5bb6\u4eec\u4e00\u76f4\u5728\u5bfb\u627e\u8fd9\u6837\u7684\u5929\u4f53\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u201c\u8d28\u91cf\u9e3f\u6c9f\u201d\u3002\n\u7814\u7a76\u5c0f\u7ec4\u5728\u300a\u5929\u4f53\u7269\u7406\u6742\u5fd7\u5feb\u62a5\u300b\u6742\u5fd7\u4e0a\u64b0\u6587\u8ba4\u4e3a\uff0c\u5728\u6240\u6709\u7684\u53ef\u80fd\u6027\u4e2d\uff0c\u8fd9\u4e2a\u7269\u4f53\u6700\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u8f7b\u9ed1\u6d1e\uff0c\u4f46\u4ed6\u4eec\u5e76\u4e0d\u6392\u9664\u4efb\u4f55\u5176\u4ed6\u53ef\u80fd\u6027\u3002\n\u4e0e\u8fd9\u4e2a\u5927\u9ed1\u6d1e\u76f8\u649e\u540e\uff0c\u8fd9\u4e2a\u7269\u4f53\u5c31\u4e0d\u590d\u5b58\u5728\u4e86\u3002\u7136\u800c\uff0c\u6839\u636e\u540c\u6837\u5728\u5361\u8fea\u592b\u7684\u65af\u8482\u82ac\u00b7\u8d39\u5c14\u8d6b\u65af\u7279\u6559\u6388\u7684\u8bf4\u6cd5\uff0c\u5e94\u8be5\u6709\u66f4\u591a\u7684\u673a\u4f1a\u4ece\u672a\u6765\u7684\u78b0\u649e\u4e2d\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e9b\u8d28\u91cf\u95f4\u9699\u5929\u4f53\u3002\n\u4ed6\u544a\u8bc9BBC\u65b0\u95fb\uff0c\u8fd9\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u8981\u786e\u5b9a\u8fd9\u662f\u4ec0\u4e48\u3002\u8fd9\u662f\u6709\u53f2\u4ee5\u6765\u6700\u8f7b\u7684\u9ed1\u6d1e\uff0c\u8fd8\u662f\u6709\u53f2\u4ee5\u6765\u6700\u91cd\u7684\u4e2d\u5b50\u661f\uff1f\n\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u8f7b\u9ed1\u6d1e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u6837\u7684\u7269\u4f53\u662f\u5982\u4f55\u53d1\u5c55\u7684\uff0c\u8fd8\u6ca1\u6709\u65e2\u5b9a\u7684\u7406\u8bba\u3002\u4f46\u662f\u8d39\u5c14\u8d6b\u65af\u7279\u6559\u6388\u7684\u540c\u4e8b\u6cd5\u6bd4\u5965\u00b7\u5b89\u4e1c\u5c3c\u5965\u5c3c\u6559\u6388\u63d0\u51fa\uff0c\u4e00\u4e2a\u6709\u4e09\u9897\u6052\u661f\u7684\u592a\u9633\u7cfb\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f7b\u9ed1\u6d1e\u7684\u5f62\u6210\u3002\u5728\u8fd9\u4e00\u65b0\u53d1\u73b0\u4e4b\u540e\uff0c\u4ed6\u7684\u60f3\u6cd5\u53d7\u5230\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u3002\n\u7136\u800c\uff0c\u6839\u636e\u5fb7\u56fd\u6ce2\u8328\u5766\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u5f15\u529b\u7269\u7406\u7814\u7a76\u6240\u7684\u4f2f\u7eb3\u5fb7\u00b7\u8212\u8328\u6559\u6388\u7684\u8bf4\u6cd5\uff0c\u5982\u679c\u8fd9\u7c7b\u65b0\u7684\u5929\u4f53\u662f\u4e00\u9897\u91cd\u4e2d\u5b50\u661f\uff0c\u90a3\u4e48\u5173\u4e8e\u5b83\u4eec\u5982\u4f55\u5f62\u6210\u7684\u7406\u8bba\u53ef\u80fd\u4e5f\u9700\u8981\u4fee\u6539\u3002\n\u6211\u4eec\u5bf9\u4e2d\u5b50\u661f\u7684\u6838\u7269\u7406\u77e5\u4e4b\u751a\u5c11\u3002\u6240\u4ee5\uff0c\u90a3\u4e9b\u6b63\u5728\u7814\u7a76\u89e3\u91ca\u5176\u5185\u90e8\u60c5\u51b5\u7684\u5947\u5f02\u65b9\u7a0b\u7684\u4eba\u53ef\u80fd\u4f1a\u60f3\uff0c\u4e5f\u8bb8\u8fd9\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u66f4\u91cd\u7684\u4e2d\u5b50\u661f\u7684\u8bc1\u636e\u3002\n\u9ed1\u6d1e\u548c\u4e2d\u5b50\u661f\u90fd\u88ab\u8ba4\u4e3a\u662f\u5728\u6052\u661f\u8017\u5c3d\u71c3\u6599\u5e76\u6b7b\u4ea1\u65f6\u5f62\u6210\u7684\u3002\u5982\u679c\u5b83\u662f\u4e00\u9897\u975e\u5e38\u5927\u7684\u6052\u661f\uff0c\u5b83\u4f1a\u584c\u7f29\u5f62\u6210\u4e00\u4e2a\u9ed1\u6d1e\uff0c\u4e00\u4e2a\u5f15\u529b\u5982\u6b64\u5f3a\u5927\u7684\u7269\u4f53\uff0c\u5373\u4f7f\u662f\u5149\u4e5f\u65e0\u6cd5\u9003\u8131\u5b83\u7684\u63a7\u5236\u3002\n\u5982\u679c\u8d77\u59cb\u661f\u4f4e\u4e8e\u4e00\u5b9a\u7684\u8d28\u91cf\uff0c\u4e00\u79cd\u9009\u62e9\u662f\u5c06\u5176\u584c\u7f29\u6210\u4e00\u4e2a\u5b8c\u5168\u7531\u79f0\u4e3a\u4e2d\u5b50\u7684\u7c92\u5b50\u7ec4\u6210\u7684\u81f4\u5bc6\u7403\u4f53\uff0c\u4e2d\u5b50\u4f4d\u4e8e\u539f\u5b50\u5fc3\u5185\u3002\n\u7ec4\u6210\u4e2d\u5b50\u661f\u7684\u6750\u6599\u5305\u88c5\u5f97\u975e\u5e38\u7d27\u5bc6\uff0c\u4e00\u8336\u5319\u91cd\u8fbe1000\u4e07\u5428\u3002\n\u4e2d\u5b50\u661f\u4e5f\u6709\u5f3a\u5927\u7684\u5f15\u529b\u5c06\u5176\u62c9\u5728\u4e00\u8d77\uff0c\u4f46\u7531\u79f0\u4e3a\u7b80\u5e76\u538b\u529b\u7684\u91cf\u5b50\u529b\u5b66\u6548\u5e94\u5f15\u8d77\u7684\u4e2d\u5b50\u4e4b\u95f4\u7684\u529b\u5c06\u7c92\u5b50\u63a8\u5f00\uff0c\u62b5\u6d88\u5f15\u529b\u3002\n\u76ee\u524d\u7684\u7406\u8bba\u8868\u660e\uff0c\u5982\u679c\u4e2d\u5b50\u661f\u7684\u8d28\u91cf\u8fdc\u8fdc\u5927\u4e8e\u4e24\u4e2a\u592a\u9633\u8d28\u91cf\uff0c\u5f15\u529b\u5c06\u514b\u670d\u7b80\u5e76\u538b\u529b\uff0c\u5e76\u5bfc\u81f4\u5b83\u584c\u9677\u6210\u9ed1\u6d1e\u3002\n\u6839\u636e\u5357\u5b89\u666e\u987f\u5927\u5b66\u7684\u5c3c\u5c14\u65af\u00b7\u5b89\u5fb7\u68ee\u6559\u6388\u7684\u8bf4\u6cd5\uff0c\u5982\u679c\u795e\u79d8\u7684\u5929\u4f53\u662f\u4e00\u9897\u91cd\u4e2d\u5b50\u661f\uff0c\u90a3\u4e48\u7406\u8bba\u5bb6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u91cd\u65b0\u601d\u8003\u8fd9\u4e9b\u5929\u4f53\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u6838\u529b\u5728\u4e2d\u5b50\u661f\u5185\u90e8\u6240\u9700\u7684\u6781\u7aef\u6761\u4ef6\u4e0b\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u76ee\u524d\u62e5\u6709\u7684\u6bcf\u4e00\u79cd\u5173\u4e8e\u4eba\u7684\u5185\u5fc3\u6d3b\u52a8\u7684\u7406\u8bba\u90fd\u6709\u4e00\u5b9a\u7684\u4e0d\u786e\u5b9a\u6027\u3002\n\u683c\u62c9\u65af\u54e5\u5927\u5b66\u5f15\u529b\u7814\u7a76\u6240(IGR)\u6240\u957f\u5e0c\u62c9\u00b7\u7f57\u6587\u6559\u6388\u8bf4\uff0c\u8fd9\u4e00\u53d1\u73b0\u6311\u6218\u4e86\u5f53\u524d\u7684\u7406\u8bba\u6a21\u578b\u3002\n\u9700\u8981\u8fdb\u884c\u66f4\u591a\u7684\u5b87\u5b99\u89c2\u6d4b\u548c\u7814\u7a76\uff0c\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u65b0\u7269\u4f53\u662f\u5426\u771f\u7684\u662f\u4ee5\u524d\u4ece\u672a\u88ab\u89c2\u6d4b\u5230\u7684\u4e1c\u897f\uff0c\u6216\u8005\u5b83\u662f\u5426\u53ef\u80fd\u662f\u6709\u53f2\u4ee5\u6765\u63a2\u6d4b\u5230\u7684\u6700\u8f7b\u7684\u9ed1\u6d1e\u3002\n\u4e00\u675f\u6fc0\u5149\u88ab\u9001\u5165\u673a\u5668\uff0c\u5b83\u7684\u5149\u675f\u88ab\u5206\u6210\u4e24\u6761\u8def\u5f84\u3002\n\u8fd9\u5e94\u8be5\u8868\u73b0\u4e3a\u8f7b\u6b66\u5668\u957f\u5ea6\u7684\u53d8\u5316\u3002", "note_en": "It is more massive than collapsed stars, known as &#34;neutron stars&#34;, but has less mass than black holes.\n Such &#34;black neutron stars&#34; were not thought possible and will mean ideas for how neutron stars and black holes form will need to be rethought.\n The discovery was made by an international team using gravitational wave detectors in the US and Italy.\n Charlie Hoy, a PhD student from Cardiff University, UK, involved in the study, said the new discovery would transform our understanding.\n  &#34;We can&#39;t rule out any possibilities,&#34; he told BBC News. &#34;We don&#39;t know what it is and this is why it is so exciting because it really does change our field.&#34;\n     The international group, which has strong UK involvement backed by the Science and Technology Facilities Council, has laser detectors several kilometres long that are able to detect minute ripples in space-time caused by the collision of massive objects in the Universe.\n  Last August, the instruments detected the collision of a black hole 23 times the mass of our Sun with an object of 2.6 solar masses.\n That makes the lighter object more massive than the heaviest type of dead star, or neutron star, previously observed - of just over two solar masses. But it was also lighter than the lightest black hole previously observed - of around five solar masses.\n Astronomers have been searching for such objects in what they&#39;ve come to call the &#34;mass gap&#34;.\n Writing in the journal The Astrophysical Journal Letters, the research team believes that of all the possibilities, the object is most likely to be a light black hole, but they are not ruling out any other possibilities.\n    Having collided with the large black hole, the object no longer exists. However, there should be further opportunities to learn more about these mass-gap objects from future collisions, according to Prof Stephen Fairhurst, also at Cardiff.\n &#34;It is a challenge for us to determine what this is,&#34; he told BBC News. &#34;Is this the lightest black hole ever, or is it the heaviest neutron star ever?&#34;\n If it is a light black hole then there is no established theory for how such an object could develop. But Prof Fairhurst&#39;s colleague, Prof Fabio Antonioni, has proposed that a solar system with three stars could lead to the formation of light black holes. His ideas are receiving increased attention following the new discovery.\n If, however, this new class of object is a heavy neutron star then theories for how they form may also need to be revised, according to Prof Bernard Schutz of the Max Planck Institute for Gravitational Physics in Potsdam, Germany.\n &#34;We don&#39;t know a lot about the nuclear physics of neutron stars. So, people who are looking at exotic equations that explain what goes on inside them might be thinking, &#39;maybe this is evidence that we can get much heavier neutron stars&#39;.&#34;\n  Both black holes and neutron stars are thought to form when stars run out of fuel and die. If it is a very large star, it collapses to form a black hole, an object with such strong gravitational force that not even light can escape its grasp.\n If the starting star is below a certain mass, one option is for it to collapse into a dense ball composed entirely of particles called neutrons, which are found inside the heart of atoms.\n The material from which neutron stars are composed is so tightly packed that one teaspoonful would weigh 10 million tonnes.\n A neutron star also has powerful gravity pulling it together, but a force between the neutrons, caused by a quantum mechanical effect known as degeneracy pressure, pushes the particles apart, counteracting the gravitational force.\n Current theories suggest that the gravitational force would overcome the degeneracy pressure if the neutron star were much larger than two solar masses - and cause it to collapse into a black hole.\n According to Prof Nils Andersson of Southampton University, if the mystery object is a heavy neutron star then the theorists will have to rethink what goes on in these objects.\n  &#34;We don&#39;t know how nuclear forces operate under the extreme conditions you need inside a neutron star. So, every single current theory we currently have of what goes on inside of one has some uncertainty.&#34;\n Prof Sheila Rowan, director of the University of Glasgow&#39;s Institute for Gravitational Research (IGR), said the discovery challenges current theoretical models.\n &#34;More cosmic observations and research will need to be undertaken to establish whether this new object is indeed something that has never been observed before or whether it may instead be the lightest black hole ever detected.&#34;\n    A laser is fed into the machine and its beam is split along two paths\n     This ought to show itself as a change in the lengths of the light arms", "posttime": "2020-06-27 16:08:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e2d\u5b50\u661f,neutron", "title": "\u201c\u9ed1\u8272\u4e2d\u5b50\u661f\u201d\u7684\u53d1\u73b0\u6539\u53d8\u4e86\u5929\u6587\u5b66", "title_en": "'Black neutron star' discovery changes astronomy", "transed": 1, "url": "https://www.bbc.com/news/science-environment-53151106", "via": "", "real_tags": ["\u4e2d\u5b50\u661f", "neutron"]}, {"category": "", "categoryclass": "", "imagename": "68e40d790a4ae3175fdf0e8c0d47f278.png", "infoid": 1008541, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u6211\u4eec\u7684\u521b\u4e1a\u60f3\u6cd5\u611f\u5230\u8fa9\u62a4\u662f\u5f88\u81ea\u7136\u7684\uff0c\u4f46\u4e13\u5229\u662f\u4e3a\u4e86\u53d1\u660e/\u521b\u65b0\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u521b\u4e1a\u60f3\u6cd5\uff1b\u5373\u4f7f\u6211\u4eec\u505a\u4e86FAANG\u7a83\u53d6\u6211\u4eec\u521b\u4e1a\u60f3\u6cd5\u7684\u5669\u68a6\u3002\n\u5927\u591a\u6570\u56fd\u5bb6\u4e0d\u5141\u8bb8\u4e3a\u8f6f\u4ef6\u7533\u8bf7\u4e13\u5229\u3002\u7ecf\u6d4e\u7406\u8bba\u3001\u505a\u751f\u610f\u7684\u65b9\u6cd5\u3001\u6570\u5b66\u65b9\u6cd5\u6216\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7b49\u5728\u51e0\u4e2a\u56fd\u5bb6\u90fd\u4e0d\u662f\u53ef\u7533\u8bf7\u4e13\u5229\u7684\u53d1\u660e\u3002\n\u4f60\u770b\u8fc7\u4f60\u548c\u4f60\u7684\u4e13\u5229\u5f8b\u5e08\u7b7e\u7f72\u7684\u534f\u8bae\u4e2d\u7684\u6240\u6709\u6761\u6b3e\u4e86\u5417\uff1f\u6388\u4e88\u4e00\u9879\u53d1\u660e/\u521b\u65b0\u4e13\u5229\u7684\u51b3\u5b9a\u6743\u5b8c\u5168\u7531\u8be5\u56fd\u7684\u4e13\u5229\u5ba1\u67e5\u5458\u51b3\u5b9a\u3002\u5f53\u4e13\u5229\u7533\u8bf7\u63d0\u4ea4\u65f6\uff0c\u76f4\u5230\u8fdb\u884c\u5ba1\u67e5\uff0c\u5df2\u7ecf\u82b1\u8d39\u4e86\u51e0\u5e74\u548c\u6570\u5343\u7f8e\u5143\u3002\n\u5c3d\u7ba1\u4ece\u4f26\u7406\u4e0a\u8bb2\uff0c\u4e13\u5229\u5f8b\u5e08\u5e94\u8be5\u660e\u786e\u8868\u8fbe\u4ed6\u4eec\u5bf9\u4e00\u9879\u53d1\u660e\u7684\u4e13\u5229\u6027\u7684\u6000\u7591\uff0c\u4f46\u5f88\u5c11\u6709\u4eba\u8fd9\u6837\u505a\u3002\u5373\u4f7f\u4e13\u5229\u5f8b\u5e08\u5148\u8fdb\u884c\u827a\u672f\u641c\u7d22(\u641c\u7d22\u51b2\u7a81\u7684\u4e13\u5229)\uff0c\u4ed6\u4eec\u4e5f\u4e0d\u603b\u662f\u80fd\u6210\u529f\u5730\u63d0\u51fa\u51b2\u7a81\u7684\u4e13\u5229\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u4e13\u5229\u7533\u8bf7\u8fd8\u6ca1\u6709\u8d77\u8349\u3002\n\u4f46\u662f\uff0c\u5f53\u653f\u5e9c\u3002\u4e13\u5229\u5ba1\u67e5\u5458\u5728\u5ba1\u67e5\u6211\u4eec\u7684\u4e13\u5229\u7533\u8bf7\u65f6\u8fdb\u884c\u4f18\u5148\u6280\u672f\u641c\u7d22\uff0c\u5982\u679c\u5b58\u5728\u51b2\u7a81\u7684\u4e13\u5229\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u4f1a\u53d1\u73b0\u3002\n\u6211\u5df2\u7ecf\u4ed8\u7ed9\u6211\u7684\u4e13\u5229\u5f8b\u5e08\u4e86\uff0c\u89e3\u91ca\u6211\u7684\u53d1\u660e\uff0c\u73b0\u5728\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u7b49\u5f85\u4e13\u5229\u7533\u8bf7\u3002\n\u4ece\u5750\u6d74\u76c6\u7684\u521b\u65b0\u5230\u91cf\u5b50\u8ba1\u7b97\u673a\uff0c\u4e00\u4e2a\u666e\u901a\u7684\u4e13\u5229\u5f8b\u5e08\u8d77\u8349\u4efb\u4f55\u4e1c\u897f\u7684\u4e13\u5229\uff0c\u6240\u4ee5\u4ed6\u4eec\u662f\u4f7f\u7528\u8bed\u8a00\u6765\u5b9a\u4e49\u4e00\u9879\u53d1\u660e\u7684\u4e13\u5bb6\uff0c\u4f46\u4ed6\u4eec\u5f88\u5c11\u662f\u4efb\u4f55\u53d1\u660e\u9886\u57df\u7684\u4e13\u5bb6\u3002\n\u56e0\u6b64\uff0c\u8fd9\u9700\u8981\u53d1\u660e\u4eba\u975e\u5e38\u5c0f\u5fc3\u5730\u4e0e\u4e13\u5229\u8d77\u8349\u4eba\u4e00\u8d77\u5de5\u4f5c\uff0c\u7528\u9002\u5f53\u7684\u8bcd\u6c47\u8868\u8fbe\u4ed6\u4eec\u7684\u53d1\u660e\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u4e13\u5229\u5f8b\u5e08\u5f80\u5f80\u5f3a\u8feb\u53d1\u660e\u4eba\u5728\u4e13\u5229\u7533\u8bf7\u4e2d\u4e0d\u5177\u4f53\u5730\u63cf\u8ff0\u4ed6\u4eec\u7684\u53d1\u660e\uff0c\u4ee5\u5229\u7528\u4e13\u5229\u5ba1\u67e5\u4e2d\u7684\u5faa\u73af\u6f0f\u6d1e\uff1b\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u83b7\u5f97\u4e13\u5229\uff0c\u4f46\u4e5f\u4f7f\u5176\u4ed6\u4eba\u80fd\u591f\u5229\u7528\u76f8\u540c\u7684\u5faa\u73af\u6f0f\u6d1e\uff0c\u53ea\u9700\u6539\u53d8\u8bed\u6cd5/\u8bcd\u6c47\u5c31\u53ef\u4ee5\u4e3a\u6211\u4eec\u7684\u53d1\u660e\u526f\u672c\u7533\u8bf7\u4e13\u5229\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u4e13\u5229\u592a\u7b3c\u7edf\u4e86\u3002\n\u4e13\u5229\u5ba1\u67e5\u9700\u8981\u51e0\u5e74\u65f6\u95f4\uff0c\u867d\u7136\u5728\u6b64\u671f\u95f4\uff0c\u5982\u679c\u6211\u4eec\u7684\u4e13\u5229\u7533\u8bf7\u516c\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u201c\u6b63\u5728\u7533\u8bf7\u4e13\u5229\u201d\u7684\u6807\u7b7e\uff0c\u4f46\u627e\u5230\u6284\u88ad\u6211\u4eec\u53d1\u660e\u7684\u4eba\u4f1a\u91c7\u53d6\u4e3b\u52a8\u7684\u65b9\u6cd5\u3002\u5982\u679c\u88ab\u590d\u5236\u7684\u53d1\u660e\u6b63\u5728\u7533\u8bf7\u4e13\u5229\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e13\u5229\u5c40\u51fa\u7248\u7684\u671f\u520a\u4e0a\u8fdb\u884c\u68c0\u6d4b\uff0c\u5e76\u63d0\u51fa\u5173\u6ce8\u3002\n\u6211\u5df2\u7ecf\u901a\u8fc7PCT\u7533\u8bf7\u4e86\u4e13\u5229\uff0c\u6211\u5c06\u83b7\u5f97\u6240\u6709\u56fd\u5bb6\u7684\u4e13\u5229\u3002\nPCT-\u4e13\u5229\u5408\u4f5c\u6761\u7ea6\u7b80\u5316\u4e86\u51e0\u4e2a\u56fd\u5bb6\u7533\u8bf7\u4e13\u5229\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u56fd\u5bb6\u662fPCT\u6761\u7ea6\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u83b7\u5f97\u4e13\u5229\u7684\u8fc7\u7a0b\u53d6\u51b3\u4e8e\u4e2a\u522b\u56fd\u5bb6\u7684\u4e13\u5229\u6cd5\u3002\n\u5373\u4f7f\u5728\u63d0\u4ea4PCT\u671f\u95f4\uff0c\u7b2c\u4e8c\u9636\u6bb5\uff0c\u5373\u56fd\u5bb6\u9636\u6bb5\uff0c\u4e5f\u5305\u62ec\u5728\u5404\u4e2a\u56fd\u5bb6\u63d0\u4ea4\u4e13\u5229\u7533\u8bf7\u6587\u4ef6\uff0c\u8981\u6c42\u4e0e\u8fd9\u4e9b\u56fd\u5bb6\u7684\u4e13\u5229\u4ee3\u7406\u4eba\u5408\u4f5c\uff0c\u5bfc\u81f4\u6211\u4eec\u5e0c\u671b\u901a\u8fc7PCT\u7533\u8bf7\u7684\u6bcf\u4e2a\u56fd\u5bb6\u90fd\u9700\u8981\u6570\u5343\u7f8e\u5143\u7684\u8d39\u7528\u3002\n\u8fd8\u6709\u4e00\u4e9b\u56fd\u5bb6\uff0c\u5373\u4f7f\u662fPCT\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u6ca1\u6709\u5bf9\u5176\u4ed6\u56fd\u5bb6\u7684\u53d1\u660e\u5b9e\u65bd\u4e13\u5229\u4fdd\u62a4\uff0c\u4ee5\u4fdd\u62a4\u4ed6\u4eec\u5f53\u5730\u6284\u88ad\u6211\u4eec\u53d1\u660e\u7684\u4f01\u4e1a\u3002\n\u5c31\u50cf\u4efb\u4f55\u6cd5\u5f8b\u4e00\u6837\uff0c\u6cd5\u5f8b\u7684\u5b58\u5728\u5e76\u4e0d\u80fd\u963b\u6b62\u67d0\u4eba\u8fdd\u53cd\u5b83\uff1b\u6267\u6cd5\u548c\u53f8\u6cd5\u8fc7\u7a0b\u5e94\u8be5\u7ef4\u62a4\u8fd9\u4e00\u6cd5\u5f8b\u3002\u540c\u6837\uff0c\u4e13\u5229\u7684\u5b58\u5728\u4e5f\u4e0d\u80fd\u963b\u6b62\u6709\u4eba\u6284\u88ad\u6211\u4eec\u7684\u53d1\u660e\u3002\n\u6211\u4eec\u9700\u8981\u627e\u5230\u8fdd\u6cd5\u8005\uff0c\u8fdb\u884c\u901a\u5e38\u6f2b\u957f\u800c\u6602\u8d35\u7684\u53f8\u6cd5\u7a0b\u5e8f\uff0c\u4ee5\u4e3b\u5f20\u6211\u4eec\u5bf9\u53d7\u4e13\u5229\u4fdd\u62a4\u7684\u53d1\u660e\u7684\u6743\u5229\u3002\n\u9664\u975e\u4e13\u5229\u4e2d\u7684\u53d1\u660e\u4eba\u662f\u8be5\u4e13\u5229\u7684\u6240\u6709\u4eba\uff0c\u5426\u5219\u53d1\u660e\u4eba\u65e0\u6743\u83b7\u5f97\u8be5\u4e13\u5229\u3002\u5f53\u4f01\u4e1a\u63d0\u4ea4\u4e13\u5229\u7533\u8bf7\u65f6\uff0c\u901a\u5e38\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f01\u4e1a\u662f\u4e13\u5229\u7684\u6240\u6709\u8005\uff0c\u5458\u5de5\u662f\u4e13\u5229\u7684\u53d1\u660e\u4eba\u3002\n\u4fdd\u62a4\u672c\u53d1\u660e\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5728\u9700\u8981\u65f6\u83b7\u5f97\u672c\u53d1\u660e\u7684\u4ef7\u503c\u3002\u4e13\u5229\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u5546\u4e1a\u548c\u6218\u7565\u4ef7\u503c\u3002\n\u56e0\u6b64\uff0c\u4e13\u5229\u9664\u4e86\u7528\u6765\u4fdd\u62a4\u4ed6\u4eec\u7684\u53d1\u660e\u4e4b\u5916\uff0c\u8fd8\u7ecf\u5e38\u88ab\u7528\u6765\u5728\u7ec4\u7ec7\u4e2d\u7528\u6765\u6362\u53d6\u91d1\u94b1\u6216\u5176\u4ed6\u4e13\u5229\u3002\n\u4e0d\u4e00\u5b9a\uff0c\u4e13\u5229\u5de8\u9b54\u5728\u53d1\u660e\u5bb6/\u521b\u65b0\u8005\u7fa4\u4f53\u4e2d\u7559\u4e0b\u4e86\u4e0d\u597d\u7684\u54c1\u5473\uff1b\u4ee5\u81f3\u4e8e\u8bb8\u591a\u4eba\u9009\u62e9\u4e0d\u4e3a\u4ed6\u4eec\u7684\u53d1\u660e\u7533\u8bf7\u4e13\u5229\u3002\n\u8d39\u7528\u3001\u52aa\u529b\u548c\u5197\u957f\u7684\u4e0d\u516c\u5e73\u53f8\u6cd5\u5ba1\u5224\u4f7f\u51e0\u5bb6\u521d\u521b\u4f01\u4e1a\u4e3a\u4e86\u8d44\u672c\u6548\u7387\u800c\u4e0d\u4e3a\u4ed6\u4eec\u7684\u53d1\u660e\u7533\u8bf7\u4e13\u5229\u3002\n\u5f00\u6e90\u9879\u76ee\u53ef\u80fd\u9700\u8981\u4e13\u5229\u6765\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u4e13\u5229\u4fb5\u6743\u7684\u8d77\u8bc9\u3002\u53d7\u4e13\u5229\u4fdd\u62a4\u7684\u5f00\u6e90\u9879\u76ee\u53ef\u4ee5\u9632\u6b62\u5927\u578b\u7ec4\u7ec7\u5728\u6ca1\u6709\u5e94\u6709\u4fe1\u7528\u7684\u60c5\u51b5\u4e0b\u7a83\u53d6\u6211\u4eec\u7684\u9879\u76ee\u3002\n\u9664\u975e\u521b\u4e1a\u516c\u53f8/\u4ea7\u54c1\u5df2\u7ecf\u4e3a\u5176\u5ba2\u6237\u521b\u9020\u4e86\u4ef7\u503c\uff0c\u4ee5\u81f3\u4e8e\u9020\u5047\u8005\u4f7f\u7528\u8be5\u521b\u4e1a\u516c\u53f8/\u4ea7\u54c1\u540d\u79f0\u8fdb\u884c\u4f2a\u9020\uff1b\u5426\u5219\u521b\u4e1a\u516c\u53f8/\u4ea7\u54c1\u540d\u79f0\u7684\u5546\u6807\u662f\u65e0\u7528\u7684\u3002\u6b64\u5916\uff0c\u5728\u5927\u591a\u6570\u56fd\u5bb6\uff0c\u4ec5\u4ec5\u662f\u5c06\u6211\u4eec\u7684\u521d\u521b\u516c\u53f8\u5408\u5e76/\u6ce8\u518c\u4e3a\u4e00\u5bb6\u516c\u53f8\uff0c\u5c31\u4f1a\u9632\u6b62\u5176\u4ed6\u4efb\u4f55\u4eba\u4f7f\u7528\u76f8\u540c\u7684\u516c\u53f8\u540d\u79f0\u3002\n\u5546\u6807\u540d\u79f0\u548c\u6807\u8bc6\u662f\u5206\u5f00\u7684\u8fc7\u7a0b\uff0c\u5373\u6587\u5b57\u6807\u5fd7\u548c\u88c5\u7f6e\u6807\u5fd7\u3002\u5f53\u8bbe\u5907\u6807\u8bb0\u5728\u5fbd\u6807\u65c1\u8fb9\u65f6\uff0c\u5b83\u53ef\u80fd\u5305\u62ec\u6587\u672c\u3002", "note_en": "It\u2019s natural to feel defensive about our  startup idea, but patents are for invention/innovation and not for a startup idea; even if we get nightmares about  FAANG stealing our startup idea.\n  Most countries don\u2019t allow  patent for a software. Economic theories, methods of doing business, mathematical methods or computer programs\u00a0as such\u00a0are not patentable inventions in several countries.\n  Did you read all the clauses in the agreement you signed with your patent attorney? The decision to award a patent to an invention/innovation lies solely with the patent examiner of the country. By the time a patent application is filed, till it comes to examination, several years and thousands of dollars would have been spent.\n Although ethically, a patent attorney should explicitly convey their doubts on patentability of an invention, few rarely do. Even when Prior Art Search(Searching for conflicting patents) is conducted by the patent attorney, they are not always successful in bringing up the conflicting patents because our patent application is not drafted yet.\n But, when the Govt. patent examiner does the Prior Art Search while examining our patent application, they will likely find conflicting patents if it exists.\n I have paid my patent attorney, explained my invention, now all I have to do is just sit tight for a patent\n An average patent attorney drafts patent for anything from innovation in a  bidet to quantum computers, so they are experts in using language to define an invention but they are rarely an expert in any field of invention.\n So, this requires utmost care from the inventor to work along with the patent drafter to articulate their invention with appropriate vocabulary.\n Unfortunately, patent attorneys tend to force the inventor to not to be specific in describing their invention in the patent application in order to exploit the loop holes in patent examination; This may help in getting the patent, but it also enables someone else to exploit the same loop holes to file a patent for the copy of our invention by just changing the grammar/vocabulary because our patent was too generic.\n  Examination of patent takes several years, although in the meantime we could use \u2018patent-pending\u2019 tag if our patent application gets published, finding someone who is copying our invention takes proactive approach. If the copied invention is being applied for patent, we need to detect it from published journal of the patent office and raise a concern.\n  I have applied for a patent via PCT, I will receive patent for all countries\n PCT - Patent Cooperation Treaty simplifies the process of applying for a patent in several countries who are part of the PCT treaty, but the process of obtaining a patent depends upon the individual country\u2019s patent laws.\n Even during filing PCT, the second phase i.e. national phase involves filing documents for patent application in the respective individual countries requiring working with the patent attorney\u2019s of those countries resulting in thousands of dollars of expense for each country we wish to apply for via PCT.\n  Then there are certain countries which even while being part of the PCT, doesn\u2019t enforce patent protection for inventions of other countries in order to protect their local businesses which copies our invention.\n  Like any law, existence of a law doesn\u2019t prevent someone from violating it; enforcement and judicial process should uphold that law. Similarly, existence of patent doesn\u2019t prevent someone from copying our invention.\n We need to find the violator, pursue an often lengthy and expensive judicial process to claim our right to the invention protected by the patent.\n  Unless the inventor in the patent is the owner of the patent, the inventor has no right to the patent. This is often the case when businesses file patents, where the business is the owner in the patent and the employee is the inventor in the patent.\n  The main reason to protect the invention is to reap the value of the invention if needed. Patents offer commercial and strategic value to businesses.\n So, patents are often used for trading them for money or for other patents in organizations apart from using it for protecting their inventions.\n  Not necessarily,  patent trolls have left a bad taste in the inventor/innovator community; so much so that many are  choosing not to file patent for their invention.\n Expenses, effort, lengthy unfair judicial trials has made several startups to not pursue patent for their invention in favor of capital efficiency.\n  Open-source projects might need patents to  protect itself from getting sued for patent infringement. Open-source projects protected by patents can prevent large organizations from stealing our project  without due credit.\n  Unless the startup/product has created value for its customers, so that a counterfeiter is using that startup/product name for forgery; trademarks for startup/product names are useless. Besides, in most countries just  incorporating/registering our startup as a company would prevent anyone else from using the same name for their company.\n  Trademarking the name and logo are separate process namely wordmark and device mark respectively. Device mark might include text when it\u2019s alongside the logo.", "posttime": "2020-06-27 16:08:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f01\u4e1a,patents,\u4e13\u5229", "title": "\u5173\u4e8e\u521d\u521b\u4f01\u4e1a\u4e13\u5229\u548c\u5546\u6807\u7684\u8ff7\u601d", "title_en": "Myths about Patents and Trademarks in startups", "transed": 1, "url": "https://hitstartup.com/myths-about-patents-and-trademarks-in-startups/", "via": "", "real_tags": ["\u4f01\u4e1a", "patents", "\u4e13\u5229"]}, {"category": "", "categoryclass": "", "imagename": "42a9b7f5f5e09ed6a4872cb4f54b11f9.png", "infoid": 1008540, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u56fe\u4e66\u521b\u5efa\u5230\u4e00\u4e2a\u65b0\u76ee\u5f55\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884chonkit init./directory\u6765\u5b9e\u73b0\u3002\n&#34\uff1b\u811a\u672c&#34\uff1b\uff1a{-&#34\uff1b\u5185\u90e8\u7248\u672c&#34\uff1b\uff1a&#34\uff1bGitbook\u5185\u90e8\u7248\u672c&#34\uff1b\uff0c+&#34\uff1b\u5185\u90e8\u7248\u672c&#34\uff1b\uff1a&#34\uff1bhonkit\u5185\u90e8\u7248\u672c&#34\uff1b\uff0c-&#34\uff1bServe&#34\uff1b\uff1a&#34\uff1bGitbook Serve&#34\uff1b+&#34\uff1bServe&#34\uff1b\uff1a&#34\uff1bhonkit Serve&#34\uff1b}\uff0c\nHonKit\u6309\u7167Apache\u8bb8\u53ef\u8bc12.0\u7248\u8fdb\u884c\u8bb8\u53ef\u3002\u6709\u5173\u5b8c\u6574\u7684\u8bb8\u53ef\u8bc1\u6587\u672c\uff0c\u8bf7\u53c2\u9605\u8bb8\u53ef\u8bc1\u3002\nHonKit\u662fGitBook(Legacy)\u7684\u4e00\u4e2a\u5206\u652f\uff0cGitBook\u6309\u7167Apache\u8bb8\u53ef\u8bc12.0\u7248\u8fdb\u884c\u8bb8\u53ef\u3002", "note_en": "If you wish to create the book into a new directory, you can do so by running  honkit init ./directory\n                    &#34;scripts&#34;: {  - &#34;build&#34;: &#34;gitbook build&#34;,  + &#34;build&#34;: &#34;honkit build&#34;,  - &#34;serve&#34;: &#34;gitbook serve&#34;  + &#34;serve&#34;: &#34;honkit serve&#34; },\n      HonKit is licensed under the Apache License, Version 2.0. See  LICENSE for the full license text.\n HonKit is a fork of  GitBook (Legacy).GitBook is licensed under the Apache License, Version 2.0.", "posttime": "2020-06-27 16:08:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gitbook,fork,honkit", "title": "HonKit\uff1aGitbook\u7684\u5206\u53c9", "title_en": "HonKit: A Fork of GitBook", "transed": 1, "url": "https://github.com/honkit/honkit", "via": "", "real_tags": ["gitbook", "fork", "honkit"]}, {"category": "", "categoryclass": "", "imagename": "b3c2da94a649499b63ea5f4fa9a1cf17.png", "infoid": 1008539, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u770b\u8d77\u6765\u5fae\u8f6f\u5df2\u7ecf\u51b3\u5b9a\u4ece\u4e16\u5609\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u3002\u4ed6\u4eec\u7684\u51fa\u4ef7\u5462\uff1f\u719f\u6089\u7684\u7cfb\u7edf\u53d7\u5230\u5f00\u53d1\u8005\u7684\u8d5e\u8d4f\uff0c\u5728\u7ebf\u670d\u52a1\u53d7\u5230\u7528\u6237\u7684\u6b22\u8fce\u3002\n\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u4e0e\u5176\u4ed6\u6765\u6e90\u7684\u4e00\u81f4\u6027\uff0c\u672c\u6587\u5728\u516c\u5236\u524d\u7f00(\u5373\u5146\u5b57\u8282\u6216\u2018MB\u2019)\u548c\u6807\u51c6\u5316\u7684\u4e8c\u8fdb\u5236\u524d\u7f00(\u5373\u5146\u5b57\u8282\u6216\u2018MIB\u2019)\u4e4b\u95f4\u5206\u9694\u5b58\u50a8\u5355\u5143\uff0c\u56e0\u6b64\uff1a\n\u6b64\u63a7\u5236\u53f0\u4e2d\u5305\u542b\u7684\u5904\u7406\u5668\u662f\u8457\u540d\u7684Intel Pentium III(\u7528\u4e8e\u8ba1\u7b97\u673a\u7684\u73b0\u6210CPU)\u7684\u7565\u5fae\u5b9a\u5236\u7248\u672c\uff0c\u8fd0\u884c\u901f\u5ea6\u4e3a733 MHz\u3002\u6709\u4e86\u8fd9\u4e00\u70b9\uff0c\u4eba\u4eec\u53ef\u4ee5\u5047\u8bbe\u8fd9\u53f0\u4e3b\u673a\u53ea\u662f\u4e00\u53f0\u5e55\u540e\u7684PC&amp\uff1bmldr\u6211\u4e0d\u4f1a\u544a\u8bc9\u60a8\u7b54\u6848\uff0c\u4f46\u6211\u4fdd\u8bc1\u5728\u672c\u6587\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u80fd\u591f\u5f97\u51fa\u60a8\u81ea\u5df1\u7684\u7ed3\u8bba\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u5954\u817e\u548c\u82f1\u7279\u5c14\u8bbe\u8ba1\u548c\u5236\u9020\u7684\u5176\u4ed6\u7cfb\u5217CPU\u5728\u8ba1\u7b97\u673a\u5e02\u573a\u4e0a\u90fd\u975e\u5e38\u53d7\u6b22\u8fce\u3002\u82f1\u7279\u5c14\u7684\u5e02\u573a\u5360\u6709\u7387\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u6210\u4e3a\u4e86\u4e8b\u5b9e\u4e0a\u7684\u8d28\u91cf\u53c2\u7167\u70b9\uff1a\u4f5c\u4e3a\u4e00\u4e2a\u5178\u578b\u7684\u7528\u6237\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4e00\u53f0\u597d\u7684\u7535\u8111\uff0c\u800c\u4e14\u6709\u8db3\u591f\u7684\u9884\u7b97\uff0c\u4f60\u53ea\u9700\u5bfb\u627e\u642d\u8f7d\u82f1\u7279\u5c14CPU\u7684\u4ea7\u54c1\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u6d89\u53ca\u7684\u56e0\u7d20\u66f4\u591a\uff0c\u4f46\u8fd9\u662f\u82f1\u7279\u5c14\u7684\u8425\u9500\u4eba\u5458\u8bbe\u6cd5\u9884\u6d4b\u7684\u3002\n\u73b0\u5728\u6211\u4eec\u5728\u5730\u56fe\u4e2d\u5b9a\u4f4d\u4e86Intel\uff0c\u8ba9\u6211\u4eec\u56de\u5230\u6b64\u63a7\u5236\u53f0\u7684\u4e3b\u9898\u3002\u5728\u6211\u7684\u7814\u7a76\u8fc7\u7a0b\u4e2d\uff0c\u6211\u5e0c\u671b\u80fd\u627e\u5230\u4e0e\u5176\u4ed6CPU(MIPS\u3001Superh\u3001ARM\u7b49)\u4e00\u6837\u6df1\u5ea6\u7684\u6587\u6863\uff0c\u4f46\u662f\uff0c\u6211\u65e0\u610f\u4e2d\u53d1\u73b0\u4e86\u8fc7\u591a\u7684\u8425\u9500\u672f\u8bed\uff0c\u8fd9\u4e9b\u672f\u8bed\u53ea\u4f1a\u8f6c\u79fb\u6211\u7684\u641c\u7d22\u65b9\u5411\u3002\u56e0\u6b64\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u51fa\u4e86\u4e00\u4e2a\u7ed3\u6784\u6765\u7ec4\u7ec7\u6240\u6709\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u7406\u89e3\u8be5CPU\u7684\u5de5\u4f5c\u539f\u7406\u3002\u6b64\u5916\uff0c\u6211\u5c06\u5c1d\u8bd5\u4ecb\u7ecd\u82f1\u7279\u5c14\u7528\u6765\u4e3a\u8fd9\u6b3eCPU\u6253\u54c1\u724c\u7684\u4e00\u4e9b\u672f\u8bed\u3002\n\u9996\u5148\uff0cXbox\u7684CPU\u88ab\u8ba4\u5b9a\u4e3a\u5954\u817eIII\u3002\u90a3\u4e48\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\u5f53\u65f6(00\u5e74\u4ee3\u521d)\uff0c\u5954\u817e\u7cfb\u5217\u4ee3\u8868\u4e86\u4e0b\u4e00\u4ee3CPU\u3002\u5b83\u4eec\u662f\u201c\u65b0\u7684\u9ad8\u7aef\u4ea7\u54c1\u201d\uff0c\u96c6\u5408\u4e86\u6240\u6709\u8ba9\u8ba1\u7b97\u673a\u901f\u5ea6\u8d85\u5feb\u7684\u5947\u7279\u6280\u672f\uff0c\u6b64\u5916\uff0c\u5b83\u8fd8\u5e2e\u52a9\u4e70\u5bb6\u51b3\u5b9a\u5982\u679c\u4ed6\u4eec\u60f3\u8981\u6700\u597d\u7684CPU\uff0c\u4ed6\u4eec\u5fc5\u987b\u8d2d\u4e70\u54ea\u79cdCPU\u3002\n\u5954\u817eIII\u53d6\u4ee3\u4e86\u5954\u817eII\uff0c\u5954\u817eII\u53c8\u53d6\u4ee3\u4e86\u6700\u521d\u7684\u5954\u817e\u3002\u6b64\u5916\uff0c\u5f53\u7b2c\u4e00\u53f0\u5954\u817e\u95ee\u4e16\u65f6\uff0c\u5b83\u53d6\u4ee3\u4e8680486\uff0c\u800c80486\u53c8\u53d6\u4ee3\u4e8680386&&mldr\uff0c\u4f60\u660e\u767d\u4e86\u5427\u3002\u91cd\u8981\u7684\u662f\uff0c\u201c\u5954\u817e\u201d\u4e3b\u8981\u662f\u4e00\u4e2a\u54c1\u724c\u540d\u79f0\uff0c\u5b83\u4e0e\u5b83\u7684\u5185\u90e8\u8fd0\u4f5c\u6ca1\u6709\u76f4\u63a5\u8054\u7cfb\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u8d70\u5f97\u66f4\u6df1\u4e00\u4e9b\uff01\n\u4e3a\u4e86\u66f4\u6df1\u5165\uff0c\u4e0d\u4f1a\u5728\u8def\u4e0a\u8ff7\u8def\uff0c\u6211\u5c06\u4fe1\u606f\u5206\u7c7b\u6210\u4e09\u4e2a\u90e8\u5206\uff0c\u8fd9\u4e09\u4e2a\u90e8\u5206\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u7ec4\u6210\u4e86\u82af\u7247\u3002\u7b2c\u4e00\u4e2a\u662f\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784\u6216\u201cISA\u201d(\u7528\u4e8e\u547d\u4ee4CPU\u7684\u6307\u4ee4\u7ec4)\u3001\u5fae\u4f53\u7cfb\u7ed3\u6784(ISA\u662f\u5982\u4f55\u5728\u7845\u4e2d\u5b9e\u73b0\u7684)\u548c\u6838\u5fc3(\u4f7f\u7528\u4ec0\u4e48\u7ec4\u4ef6\u96c6\u6765\u6253\u5305\u5fae\u4f53\u7cfb\u7ed3\u6784\u4ee5\u5f62\u6210\u7279\u5b9a\u7684CPU\u6a21\u578b)\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6211\u63d0\u5230Intel\u8fd9\u4e2a\u540d\u5b57\u4e4b\u540e\uff0c\u6211\u4ecb\u7ecd\u8457\u540d\u7684x86\u6307\u4ee4\u96c6\u53ea\u662f\u4e2a\u65f6\u95f4\u95ee\u9898\u3002\n\u5c3d\u7ba1x86\u57281978\u5e74\u968f\u540d\u4e3aIntel8086\u768416\u4f4dCPU\u7684\u53d1\u5e03\u800c\u9996\u6b21\u51fa\u73b0\uff0c\u4f46\u968f\u7740\u66f4\u591a\u7684IntelCPU(80186\u300180286\u7b49\u7b49)\u7684\u53d1\u5e03\uff0c\u6307\u4ee4\u96c6\u4e5f\u5728\u4e0d\u65ad\u5730\u6269\u5c55\u3002\u56e0\u6b64\uff0c\u968f\u7740\u66f4\u591a\u7a81\u7834\u6027\u529f\u80fd\u7684\u6dfb\u52a0(\u5373\u201c\u5b9e\u6a21\u5f0f\u201d\u3001\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u548c\u201c\u957f\u6a21\u5f0f\u201d)\uff0cx86\u5f00\u59cb\u788e\u7247\u5316\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u73b0\u4ee3x86\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u5c0680386 ISA(\u4e5f\u79f0\u4e3aIA-32\u6216i386)\u4f5c\u4e3a\u57fa\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u572832\u4f4d\u73af\u5883\u4e2d\u8fd0\u884c\u3002\n\u968f\u540e\uff0c\u82f1\u7279\u5c14\u4ee5\u6269\u5c55\u7684\u5f62\u5f0f\u5c55\u793a\u4e86IA-32\u7684\u589e\u5f3a\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740IA-32 CPU\u53ef\u80fd\u5305\u542b\u8fd9\u4e9b\u529f\u80fd\uff0c\u4e5f\u53ef\u80fd\u4e0d\u5305\u542b\u8fd9\u4e9b\u529f\u80fd\u3002\u7a0b\u5e8f\u53ef\u4ee5\u67e5\u8be2CPU\u4ee5\u68c0\u67e5\u662f\u5426\u5b58\u5728\u7279\u5b9a\u7684\u589e\u5f3a\u529f\u80fd\u3002Xbox\u7684CPU\u5305\u62ec\u4e24\u4e2a\u6269\u5c55\uff1a\nMMX(\u591a\u5a92\u4f53\u6269\u5c55)\uff1a\u6dfb\u52a057\u6761SIMD\u6307\u4ee4\u548c8\u4e2a64\u4f4d\u5bc4\u5b58\u5668(\u4ec5\u9650\u6574\u6570)\uff0c\u53ef\u52a0\u5feb\u77e2\u91cf\u8fd0\u7b97\u3002\nSSE(SIMD\u6d41\u6269\u5c55)\uff1a\u53e6\u4e00\u4e2aSIMD\u7c7b\u578b\u7684\u6269\u5c55\uff0c\u5b83\u89e3\u51b3\u4e86MMX\u7684\u4e00\u4e9b\u9650\u5236(\u7f3a\u4e4f\u6d6e\u70b9\u652f\u6301\uff0c\u4e0d\u80fd\u5e76\u884c\u4f7f\u7528\u6d6e\u70b9\u5355\u5143)\u3002\u5b83\u589e\u52a0\u4e868\u4e2a128\u4f4d\u5bc4\u5b58\u5668(\u79f0\u4e3a\u201cXMM\u201d)\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u5305\u542b4\u4e2a32\u4f4d\u6d6e\u70b9\u6570\uff1b\u4ee5\u53ca56\u6761\u65b0\u6307\u4ee4\u3002\n\u597d\u6d88\u606f\u662f\uff0c\u7531\u4e8e\u63a7\u5236\u53f0\u5c06\u59cb\u7ec8\u5177\u6709\u76f8\u540c\u7684CPU\u529f\u80fd\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4f18\u5316\u4ed6\u4eec\u7684\u4ee3\u7801\u6765\u5229\u7528\u8fd9\u4e9b\u6269\u5c55\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u59cb\u7ec8\u5b58\u5728\u3002\n\u5f53\u8c08\u5230\u6784\u5efa\u80fd\u591f\u89e3\u91cax86\u6307\u4ee4\u7684\u7535\u8def\u65f6\uff0c\u82f1\u7279\u5c14\u5df2\u7ecf\u4e3a\u4ed6\u4eec\u7684CPU\u8bbe\u8ba1\u4e86\u5982\u6b64\u591a\u4e0d\u540c\u7684\u8bbe\u8ba1\u3002\u4e00\u4e9b\u8bbe\u8ba1\u5728\u65b0\u5954\u817e\u7cfb\u5217(\u5373\u5954\u817e4)\u7684\u53d1\u5e03\u4e2d\u4eae\u76f8\uff0c\u800c\u53e6\u4e00\u4e9b\u8bbe\u8ba1\u5219\u5728\u82f1\u7279\u5c14\u53d1\u5e03\u5954\u817e\u201c\u589e\u5f3a\u201d\u7248\u672c(\u5982\u201c\u5954\u817ePro\u201d)\u65f6\u4eae\u76f8\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u81ea\u4ece\u7b2c\u4e00\u4ee3\u5954\u817e\u53d1\u5e03\u4ee5\u6765\uff0c\u5fae\u4f53\u7cfb\u7ed3\u6784\u7684\u540d\u79f0\u4e0eCPU\u6a21\u578b\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u6700\u521d\u7684\u5954\u817e\u5305\u62ec\u201cP5\u201d\u5fae\u4f53\u7cfb\u7ed3\u6784\u3002\n\u73b0\u5728\uff0cXbox CPU\u548c\u5176\u4ed6\u5954\u817eIII\u5904\u7406\u5668\u4e00\u8d77\u4f7f\u7528P6\u5fae\u4f53\u7cfb\u7ed3\u6784(\u4e5f\u79f0\u4e3a\u201ci686\u201d)\u3002\u8fd9\u662f\u7b2c6\u4ee3(\u4ece8086\u5f00\u59cb\u8ba1\u7b97)\uff0c\u5176\u7279\u70b9\u662f\uff1a\n\u65e0\u5e8f\u6267\u884c\uff1a\u5982\u679c\u53ef\u80fd\uff0cCPU\u4f1a\u91cd\u65b0\u6392\u5e8f\u6307\u4ee4\u5e8f\u5217\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u548c\u6027\u80fd\u3002\n\u63a8\u6d4b\u6027\u9884\u6d4b\uff1a\u7c7b\u4f3c\u4e8e\u5206\u652f\u9884\u6d4b\uff0c\u4f46\u5b83\u8fd8\u6267\u884cCPU\u9884\u6d4b\u5b83\u5c06\u88ab\u9009\u62e9\u7684\u5206\u652f\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u8fd8\u662f\u4ed4\u7ec6\u770b\u770b\u8fd9\u4e9b\u529f\u80fd\u5427\u3002\u5de7\u5408\u7684\u662f\uff0c\u5b83\u4eec\u4e0e\u4ee5\u524d\u7684\u6e38\u620f\u673a\u975e\u5e38\u76f8\u4f3c\uff0c\u7136\u800c\uff0c\u5176\u4ed6CPU\u5728\u8bbe\u8ba1\u65b9\u9762\u4e0e\u82f1\u7279\u5c14\u7684CPU\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u82f1\u7279\u5c14\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5b9e\u73b0\uff0c\u6bd4\u65b9\u8bf4\uff0c\u6d41\u6c34\u7ebfCPU\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u8fd8\u662f\u505a\u5230\u4e86\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e3a\u4ec0\u4e48&amp\uff1bmldr\u3002\n\u4e4b\u524d\u5206\u6790\u7684\u6240\u6709\u7ade\u4e89\u5bf9\u624b\u7684\u6e38\u620f\u673a\u90fd\u5305\u542bRISC CPU\uff0c\u800c\u82f1\u7279\u5c14\u7684x86\u6e38\u620f\u673a\u662fCISC\u3002\u4f17\u6240\u5468\u77e5\uff0c\u4e0eCISC CPU\u76f8\u6bd4\uff0cRISC CPU\u5177\u6709\u7b80\u5316\u7684\u6307\u4ee4\u96c6\u3002\u4f8b\u5982\uff0c\u8fd9\u5305\u62ec\u4e0d\u5177\u6709\u76f4\u63a5\u4ece\u5b58\u50a8\u5668(\u4e0e\u5bc4\u5b58\u5668\u76f8\u53cd)\u8fd0\u7b97\u503c\u7684\u6307\u4ee4\u3002\nRISC\u5904\u7406\u5668\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u5176\u7b80\u5355\u7684\u65b9\u6cd5\u4f7f\u5176CPU\u53ef\u4ee5\u8bbe\u8ba1\u6210\u6a21\u5757\u5316\u7684\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u53ef\u4ee5\u5229\u7528\u5e76\u884c\u6280\u672f\u6765\u63d0\u9ad8\u6027\u80fd\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u770b\u5230\u50cfMIPS\u548cPowerPC\u8fd9\u6837\u7684CPU\u5728\u6d41\u6c34\u7ebf\u3001\u8d85\u6807\u91cf\u3001\u65e0\u5e8f\u3001\u5206\u652f\u9884\u6d4b\u7b49\u65b9\u9762\u9996\u6b21\u4eae\u76f8\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u201cCISC\u201d\u5904\u7406\u5668\u662f\u5728RISC\u5904\u7406\u5668\u51fa\u73b0\u4e4b\u524d\u591a\u5e74\u8bbe\u8ba1\u7684\uff0c\u65e8\u5728\u89e3\u51b3\u4e0d\u540c\u7684\u9700\u6c42\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u7684\u8bbe\u8ba1\u4e0d\u5982RISC\u7684\u7075\u6d3b\u3002\n\u56de\u5230\u6700\u521d\u7684\u95ee\u9898\uff0cP6\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u867d\u7136CPU\u53ea\u7406\u89e3CISC\u6307\u4ee4\u96c6(X86)\uff0c\u4f46\u5b83\u4f7f\u7528\u5fae\u7801(\u79f0\u4e3a\u201c\u5fae\u64cd\u4f5c\u201d)\u89e3\u91caISA\uff0c\u5e76\u4e14\u6267\u884c\u8be5\u4ee3\u7801\u7684\u5355\u5143\u662f\u6839\u636eRISC\u7684\u51c6\u5219\u6784\u5efa\u7684\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u4f7f\u5f97\u82f1\u7279\u5c14\u53ef\u4ee5\u5e94\u7528RISC\u5904\u7406\u5668\u7684\u4f18\u5316\uff0c\u540c\u65f6\u4fdd\u7559\u4e0ex86\u517c\u5bb9\u7684\u201cCISC\u5c42\u201d\u3002\n\u5fae\u7801\u5df2\u7ecf\u5d4c\u5165\u5230\u7845\u4e2d\uff0c\u4f46\u5b83\u53ef\u4ee5\u6253\u8865\u4e01\uff0c\u53ea\u8981\u53d1\u73b0\u9519\u8bef\u6216\u5b89\u5168\u6f0f\u6d1e\uff0c\u82f1\u7279\u5c14\u5c31\u53ef\u4ee5\u5728\u751f\u4ea7\u540e\u4fee\u590d\u5176CPU\u3002\u5982\u679c\u60a8\u9605\u8bfb\u8fc7\u4ee5\u524d\u7684\u6587\u7ae0(\u5373N64\u6216PS2)\uff0c\u8bf7\u8bb0\u4f4f\u82f1\u7279\u5c14\u7684\u5fae\u7801\u4e0d\u80fd\u516c\u5f00\u8bbf\u95ee(\u66f4\u4e0d\u7528\u8bf4\u8bb0\u5f55\u5728\u6848)\uff0c\u82f1\u7279\u5c14\u662f\u5176\u552f\u4e00\u7684\u201c\u7ef4\u62a4\u8005\u201d\u3002\n\u4f7f\u7528P6\u5fae\u4f53\u7cfb\u7ed3\u6784\u53d1\u5e03\u4e86\u5927\u91cf\u82af\u7247\u3002\u5177\u4f53\u5730\u8bf4\uff0cXbox\u5305\u62ec\u4e00\u79cd\u540d\u4e3a\u94dc\u77ff\u7684\u578b\u53f7\u3002\u8fd9\u4e5f\u662f\u4f5c\u4e3a\u5954\u817eIII\u7684\u7b2c\u4e8c\u4e2a\u4fee\u8ba2\u7248\u53d1\u5e03\u7684(\u53d6\u4ee3\u4e86\u2018Katmai\u2019\u5185\u6838)\uff0c\u5305\u62ec\u4ee5\u4e0b\u7ec4\u4ef6\uff1a\n32 KiB\u4e00\u7ea7\u7f13\u5b58\uff1a\u5206\u4e3a\u7528\u4e8e\u6307\u4ee4\u768416 KiB\u548c\u7528\u4e8e\u6570\u636e\u768416 KiB\u3002\n\u96c6\u6210128 KiB\u4e8c\u7ea7\u7f13\u5b58\uff1a\u8fd9\u5f88\u5947\u602a\uff0c\u56e0\u4e3a\u73b0\u6210\u7684\u94dc\u77ff\u5177\u6709256 KiB\u7684L2\u3002\u4e8b\u5b9e\u4e0a\uff0cCoppermine128(\u82f1\u7279\u5c14\u201c\u8d5b\u626c\u201d\u54c1\u724c\uff0c\u4f4e\u7aef\u5954\u817e\u7684\u66ff\u4ee3\u54c1)\u4e5f\u6709\u76f8\u540c\u6570\u91cf\u7684L2\u3002\u8fd9\u6837\u505a\u53ef\u80fd\u662f\u4e3a\u4e86\u964d\u4f4e\u5236\u9020\u6210\u672c\uff0c\u5e76\u4f7f\u8fd9\u6b3e\u6e38\u620f\u673a\u4fdd\u6301\u5728\u4e00\u4e2a\u6709\u7ade\u4e89\u529b\u7684\u4ef7\u683c\u3002\n133 MHz\u524d\u7aef\u603b\u7ebf\uff1a\u8fd9\u662f\u8fde\u63a5\u4e8c\u7ea7\u7f13\u5b58\u548c\u5185\u5b58\u63a7\u5236\u5668\u7684\u603b\u7ebf\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u66f4\u591a\u76f8\u5173\u5185\u5bb9\u3002\u82f1\u7279\u5c14\u5c06\u5176\u547d\u540d\u4e3a\u201c\u524d\u7aef\u603b\u7ebf\u201d\uff0c\u4ee5\u533a\u522b\u4e8e\u8fde\u63a5L2(\u5916\u90e8\u9ad8\u901f\u7f13\u5b58)\u548cL1(\u5185\u90e8\u9ad8\u901f\u7f13\u5b58)\u7684\u53e6\u4e00\u6761\u603b\u7ebf\u3002\u540e\u4e00\u79cd\u516c\u4ea4\u8f66\u88ab\u79f0\u4e3a\u201cBack-side bus\u201d\uff0c\u662f\u7684\uff0c&amp\uff1bmldr\uff0c\u8fd9\u662f\u4e00\u4e2a\u6765\u81ea\u82f1\u56fd\u7684\u4e0d\u6070\u5f53\u7684\u540d\u5b57\u3002\n\u5728\u6700\u521d\u5b9e\u73b0\u7684\u4e8c\u7ea7\u7f13\u5b58\u7684\u57fa\u7840\u4e0a\uff0cCoppermine\u8fd8\u5177\u6709\u4e24\u4e2a\u201c\u589e\u5f3a\u529f\u80fd\u201d\uff0c\u5373\u9ad8\u7ea7\u4f20\u8f93\u7f13\u5b58\u548c\u9ad8\u7ea7\u7cfb\u7edf\u7f13\u51b2\u3002\u603b\u800c\u8a00\u4e4b\uff0cL2\u9ad8\u901f\u7f13\u5b58\u662f\u7247\u4e0a\u7684\uff0c\u5b83\u4eec\u7684\u603b\u7ebf\u66f4\u5bbd\uff0c\u8fd9\u6709\u52a9\u4e8e\u51cf\u5c11\u524d\u7aef\u603b\u7ebf\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u74f6\u9888\u3002\n\u6700\u540e\uff0c\u8be5\u82af\u7247\u4f7f\u7528\u201cMicro-PGA2\u201d\u63d2\u5ea7\u5c06\u5176\u8fde\u63a5\u5230\u4e3b\u677f\uff0c\u4f46\u4e0e\u4efb\u4f55\u5176\u4ed6\u63a7\u5236\u53f0\u4e00\u6837\uff0cXbox\u5c06\u5176\u4e0e\u7403\u6805\u9635\u5217(BGA)\u710a\u63a5\u5728\u4e00\u8d77\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u66f4\u591a\u7684\u5386\u53f2\uff1a\u5728P6\u95ee\u4e16\u51e0\u5e74\u540e\uff0c\u82f1\u7279\u5c14\u8ba1\u5212\u7528\u201cNetBurst\u201d\u5fae\u4f53\u7cfb\u7ed3\u6784(\u5954\u817eIV\u4e2d\u7684\u7279\u8272)\u6765\u63a5\u66ff\u5b83\u3002\u7136\u800c\uff0c\u7ee7\u627f\u7ebf\u4e5f\u5230\u6b64\u4e3a\u6b62\uff1a\u5fae\u4f53\u7cfb\u7ed3\u6784\u4e0d\u80fd\u518d\u6539\u8fdb\u4e86\u3002\u8fd9\u4fc3\u4f7f\u4ee5\u8272\u5217\u7684\u4e00\u4e2a\u82f1\u7279\u5c14\u56e2\u961f\u91cd\u65b0\u5ba1\u89c6\u65e7\u7684P6\uff0c\u5e76\u5f00\u53d1\u51fa\u66f4\u9ad8\u6548\u7684\u7ee7\u4efb\u8005\u3002\u7ed3\u679c\u662f\u5954\u817eM\uff0c\u6700\u7ec8\u6269\u5c55\u5f62\u6210\u4e86\u6838\u5fc3\u5fae\u4f53\u7cfb\u7ed3\u6784(\u548c\u54c1\u724c)\u3002\u201c\u6838\u5fc3\u201d\u662f\u76ee\u524d\u8bbe\u8ba1\u7684\u57fa\u7840\u3002\n\u5728\u4e2a\u4eba\u7535\u8111\u5386\u53f2\u4e0a\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u4e3b\u677f\u53d8\u5f97\u5982\u6b64\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u5fc5\u987b\u4ece\u5934\u5f00\u59cb\u5f00\u53d1\u65b0\u7684\u8bbe\u8ba1\uff0c\u4ee5\u6709\u6548\u5730\u6ee1\u8db3\u65b0\u51fa\u73b0\u7684\u9700\u6c42\u3002\n\u5f00\u53d1\u7684\u65b0\u6807\u51c6\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u4e13\u7528\u82af\u7247\u6765\u5904\u7406\u5927\u90e8\u5206\u4e3b\u677f\u529f\u80fd\u3002\u8fd9\u4e9b\u82af\u7247\u662f\uff1a\n\u8fd9\u4e9b\u82af\u7247\u7684\u7ec4\u5408\u88ab\u79f0\u4e3a\u82af\u7247\u7ec4\uff0c\u5b83\u4eec\u5bf9\u4e8e\u8c03\u8282\u4e3b\u677f\u7684\u529f\u80fd\u548c\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002Xbox\u79bb\u4e2a\u4eba\u7535\u8111\u5982\u6b64\u4e4b\u8fd1\uff0c\u8fd8\u5305\u62ec\u4e24\u4e2a\u82af\u7247\uff1aNV2A\uff0c\u5317\u6865\u548cGPU\u7684\u7ec4\u5408\uff1b\u4ee5\u53caMCPX\uff0c\u5904\u7406\u5176\u4f59\u7684I/O\u3002\n\u8fd9\u4e24\u4e2a\u82af\u7247\u4f7f\u7528\u79f0\u4e3aHyperTransport\u7684\u4e13\u7528\u603b\u7ebf\u4e92\u8fde\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u4e00\u4e9bPC\u4e3b\u677f\u4e5f\u5305\u542b\u6b64\u6280\u672f\uff0c\u53ea\u662f\u54c1\u724c\u4e0d\u540c(\u5373MPCX\u2192nForce MCP-D)\u3002\nXbox\u603b\u5171\u5305\u62ec64 MiB\u7684DDR SRAM\uff0c\u4e0e\u7ade\u4e89\u5bf9\u624b\u63d0\u4f9b\u7684\u76f8\u6bd4\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684RAM\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u662f\u5b83\u4e5f\u53ef\u4ee5\u5728\u6b64\u7cfb\u7edf\u7684\u6240\u6709\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u518d\u6b21\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u53e6\u4e00\u4e2a\u7edf\u4e00\u5185\u5b58\u67b6\u6784\u6216\u201cUMA\u201d\u5e03\u5c40\u7684\u524d\u9762\u3002\n\u6211\u4eec\u4ee5\u524d\u5df2\u7ecf\u770b\u5230\u8fd9\u79cd\u8bbe\u8ba1\u6709\u65f6\u4f1a\u6709\u591a\u9ebb\u70e6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u6570\u636e\u5206\u5e03\u5728\u4e0d\u540c\u7684\u5185\u5b58\u5e93\u4e2d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002NV2A\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4ea4\u6362\u7f51\u7edc\uff0c\u4f7f\u4e0d\u540c\u7684\u5355\u5143(CPU\u3001GPU\u7b49)\u80fd\u591f\u540c\u65f6\u8bbf\u95ee\u5b83\u4eec\u3002\n\u6b64\u5916\uff0c\u63a7\u5236\u53f0\u6709\u4e00\u4e2a\u5185\u7f6e\u786c\u76d8\uff0c\u56e0\u6b64\u6070\u597d\u6709\u4e09\u4e2a750MiB\u7684\u5206\u533a\u4fdd\u7559\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\uff1aCPU\u53ef\u4ee5\u4ece\u4e3bRAM\u5378\u8f7d\u4e00\u4e9b\u6570\u636e\uff0c\u7136\u540e\u5728\u9700\u8981\u7684\u65f6\u5019\u4e0a\u4f20\u56de\u6765\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u624b\u52a8\u8fc7\u7a0b\uff0c\u4e0d\u6d89\u53ca\u865a\u62dfRAM\u3002\n\u6b63\u5982\u6211\u4eec\u4ee5\u524d\u770b\u5230\u7684\uff0c\u56fe\u5f62\u5904\u7406\u5668\u9a7b\u7559\u5728NV2A\u82af\u7247\u4e2d\uff0c\u5c31\u50cfMCPX\u4e00\u6837\uff0c\u5b83\u662f\u7531NVIDIA\u5236\u9020\u7684\u3002\n\u8fd9\u5bb6\u516c\u53f8\u4ece\u4e8b\u56fe\u5f62\u4e1a\u52a1\u5df2\u6709\u5f88\u957f\u65f6\u95f4\uff0c\u4ed6\u4eec\u7684GeForce\u7cfb\u5217\u662f\u8ba1\u7b97\u673a\u5e02\u573a\u4e0a\u6700\u53d7\u6b22\u8fce\u7684GPU\u54c1\u724c\u4e4b\u4e00\uff0c\u4e0eArtx/ATI\u7684RADEON\u7cfb\u5217\u76f4\u63a5\u7ade\u4e89\u3002\u603b\u4f53\u800c\u8a00\uff0c\u8003\u8651\u5230\u8fd9\u662f\u5fae\u8f6f\u5728\u6e38\u620f\u673a\u5e02\u573a\u7684\u9996\u6b21\u5c1d\u8bd5\uff0c\u8fd9\u5bf9Xbox\u4e2d\u7684\u56fe\u5f62\u8d28\u91cf\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u6760\u6746\u4f5c\u7528\u3002\n\u73b0\u5728\uff0c\u6050\u6015\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u88ab\u5f88\u591a\u672f\u8bed\u548c\u8425\u9500\u672f\u8bed\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u5c31\u50cfCPU\u90e8\u5206\u4e00\u6837\uff0c\u4f46\u4e0d\u8981\u5bb3\u6015\uff01\u6211\u5c06\u4ece\u57fa\u7840\u77e5\u8bc6\u5f00\u59cb\u3002\nNV2A\u4e0a\u7684GPU\u5185\u6838\u57fa\u4e8e\u6d41\u884c\u7684\u201cGeForce3\u201d\u7cfb\u5217GPU\uff0c\u5728NVIDIA\u7684\u6280\u672f\u6587\u6863\u4e2d\u4e5f\u79f0\u4e3aNV20\u3002\n\u8bf7\u6ce8\u610f\uff0c\u867d\u7136Xbox\u7684GPU\u6d41\u6c34\u7ebf\u57fa\u4e8eNV20\u67b6\u6784\uff0c\u4f46NV2A\u6709\u4e00\u4e9b\u4fee\u6539\u4e0eNV20\u7cfb\u5217\u7684\u5176\u4ed6\u4ea7\u54c1\u4e0d\u517c\u5bb9(\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5df2\u88ab\u8c03\u6574\u4e3a\u5728UMA\u73af\u5883\u4e0b\u5de5\u4f5c)\u3002\n\u6240\u5206\u6790\u7684\u5355\u5143\u5305\u542b\u66f4\u591a\u8d85\u51fa\u672c\u6587\u8303\u56f4\u7684\u7279\u6027\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e00\u8282\u5f15\u8d77\u60a8\u7684\u6ce8\u610f\uff0c\u6211\u5efa\u8bae\u60a8\u67e5\u770b\u6e90\u4ee3\u7801/\u53c2\u8003\u8d44\u6599\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u4e0e\u56fe\u5f62\u76f8\u5173\u7684\u672f\u8bed\u4e0d\u65ad\u6f14\u53d8(\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u6df7\u6dc6)\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528Microsoft/Nvidia\u5728Xbox\u65f6\u4ee3\u9009\u62e9\u7684\u672f\u8bed\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u8ba1\u5212\u9605\u8bfb\u5176\u4ed6\u6765\u6e90\u7684\u66f4\u591a\u4e0e\u56fe\u5f62\u76f8\u5173\u7684\u6587\u7ae0\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6846\u67b6\u662f\u5982\u4f55\u5728Xbox\u4e2d\u7ed8\u5236\u7684\u3002\u6709\u4e9b\u89e3\u91ca\u4e0eGamecube\u7684Flipper\u975e\u5e38\u76f8\u4f3c\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u60a8\u5148\u9605\u8bfb\u90a3\u7bc7\u6587\u7ae0\uff0c\u4ee5\u9632\u60a8\u5f88\u96be\u7406\u89e3\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u9996\u5148\u4e5f\u662f\u6700\u91cd\u8981\u7684\u662f\u89e3\u91caGPU\u5982\u4f55\u63a5\u6536\u6765\u81eaCPU\u7684\u547d\u4ee4\u3002\u4e3a\u6b64\uff0cGPU\u5305\u542b\u4e00\u4e2a\u79f0\u4e3aPFIFO\u7684\u547d\u4ee4\u5904\u7406\u5668\uff0c\u5b83\u4ee5FIFO\u65b9\u5f0f\u6709\u6548\u5730\u83b7\u53d6\u548c\u5904\u7406\u56fe\u5f62\u547d\u4ee4(\u79f0\u4e3aPushbuffer)\uff0c\u89e3\u5305\u540e\u7684\u547d\u4ee4\u968f\u540e\u88ab\u4f20\u9001\u5230PGRAPH(\u8d1f\u8d23\u56fe\u5f62\u5904\u7406\u7684\u5757)\u548c\u5176\u4ed6\u5f15\u64ce\u3002\n\u4e0eFlipper\u4e00\u6837\uff0c\u51e0\u4f55\u4f53\u4e0d\u5fc5\u5d4c\u5165\u5230\u547d\u4ee4\u4e2d\u3002PGRAPH\u63d0\u4f9b\u4e86\u8bb8\u591a\u63d0\u4ea4\u56fe\u5f62\u6570\u636e\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0cCPU\u53ef\u4ee5\u5728RAM\u4e2d\u5206\u914d\u5305\u542b\u9876\u70b9\u6570\u636e\u7684\u7f13\u51b2\u533a\uff0c\u7136\u540e\u6307\u793aGPU\u4ece\u8be5\u4f4d\u7f6e\u83b7\u53d6\u5b83\u4eec\u3002\u6b64\u65b9\u6cd5\u975e\u5e38\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u907f\u514d\u4e86\u5fc5\u987b\u5d4c\u5165\u91cd\u590d\u7684\u51e0\u4f55\u4f53\u3002\n\u5bf9\u4e8e\u8fd9\u4e2aGPU\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u7279\u522b\u6709\u8da3\u7684\u90e8\u5206\u3002\u5728\u6b64\u9636\u6bb5\uff0cGPU\u63d0\u4f9b\u4e86\u5728\u51e0\u4f55\u4f53\u4e0a\u5e94\u7528\u9876\u70b9\u53d8\u6362\u7684\u529f\u80fd\u3002\u6211\u4eec\u5df2\u7ecf\u5728Flipper\u4e0a\u770b\u5230\u4e86\u8fd9\u4e00\u529f\u80fd\uff0c\u4f46\u4e0eGPU\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e00\u6b3e\u4f7f\u7528\u4e86\u53ef\u7f16\u7a0b\u5f15\u64ce\u3002\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u8005\u53ef\u4ee5\u6307\u5b9a\u6267\u884c\u54ea\u4e9b\u9876\u70b9\u64cd\u4f5c\u4ee5\u53ca\u5982\u4f55\u6267\u884c\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u9884\u5b9a\u4e49\u7684\u7a0b\u5e8f(\u5c3d\u7ba1NV2A\u4e5f\u53ef\u4ee5\u5728\u201c\u56fa\u5b9a\u201d\u6a21\u5f0f\u4e0b\u64cd\u4f5c)\u3002\n\u8fd9\u4e00\u9636\u6bb5\u7531\u4e00\u4e2a\u9876\u70b9\u5355\u5143\u5904\u7406\uff0c\u800cNV2A\u5177\u6709\u5176\u4e2d\u7684\u4e24\u4e2a\u5355\u5143\u3002\u6bcf\u4e2a\u90fd\u53ef\u4ee5\u52a0\u8f7d\u5305\u542b\u591a\u8fbe136\u6761\u6307\u4ee4(\u4e5f\u79f0\u4e3a\u5fae\u7801)\u7684\u7a0b\u5e8f\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u88ab\u79f0\u4e3a\u9876\u70b9\u7a0b\u5e8f\uff0c\u5b83\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u3002\u9876\u70b9\u7a0b\u5e8f\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u7b80\u800c\u8a00\u4e4b\uff0c\u9876\u70b9\u5355\u5143\u901a\u8fc7\u5728\u5176\u5bc4\u5b58\u5668\u4e2d\u64cd\u4f5c\u9876\u70b9\u6765\u5904\u7406\u9876\u70b9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u65e6\u52a0\u8f7d\u4e86\u7a0b\u5e8f\uff0c16\u4e2a\u53ea\u8bfb\u5bc4\u5b58\u5668(\u79f0\u4e3a\u201c\u8f93\u5165\u5bc4\u5b58\u5668\u201d)\u5c06\u7528\u9876\u70b9\u7684\u5c5e\u6027(\u6bcf\u4e2a\u5411\u91cf\u5305\u542b\u56db\u4e2a\u5206\u91cf)\u8fdb\u884c\u521d\u59cb\u5316\u3002\u7136\u540e\uff0c\u8be5\u5355\u5143\u4f7f\u7528\u8f93\u5165\u5bc4\u5b58\u5668\u6267\u884c\u8be5\u7ec4\u64cd\u4f5c(\u7531\u7a0b\u5e8f\u6307\u793a)\u3002\u6b64\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e8612\u4e2a\u53ef\u5199\u5bc4\u5b58\u5668\u548c\u591a\u8fbe196\u4e2a\u5e38\u91cf\u6765\u534f\u52a9\u8ba1\u7b97\u3002\u6700\u540e\uff0c\u5c06\u5f97\u5230\u7684\u9876\u70b9\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a\u753111\u4e2a\u53ef\u5199\u5bc4\u5b58\u5668\u7ec4\u6210\u7684\u5757\u4e2d(\u6bcf\u4e2a\u5bc4\u5b58\u5668\u4ec5\u9650\u4e8e\u7279\u5b9a\u7528\u9014)\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u5230\u4e0b\u4e00\u7ea7\u3002\u5bf9\u63a5\u6536\u5230\u7684\u6bcf\u4e2a\u9876\u70b9\u91cd\u590d\u6b64\u8fc7\u7a0b\u3002\n\u5728\u6b64\u9636\u6bb5\uff0c\u9876\u70b9\u5c06\u8f6c\u6362\u4e3a\u50cf\u7d20\u3002\u8be5\u8fc7\u7a0b\u4ece\u4e00\u4e2a\u5149\u6805\u5316\u5668\u5f00\u59cb\uff0c\u8be5\u5149\u6805\u5316\u5668\u751f\u6210\u50cf\u7d20\u6765\u7ed8\u5236\u6bcf\u4e2a\u4e09\u89d2\u5f62\u3002NV2A\u7684\u5149\u6805\u5316\u5668\u6bcf\u4e2a\u5468\u671f\u53ef\u4ee5\u4ea7\u751f4\u4e2a\u50cf\u7d20\u3002\n\u7136\u540e\uff0c\u4f7f\u75284\u4e2a\u7eb9\u7406\u7740\u8272\u5668\u4ece\u5185\u5b58\u4e2d\u63d0\u53d6\u7eb9\u7406\uff0c\u8fd9\u4e9b\u7740\u8272\u5668\u8fd8\u63d0\u4f9b\u81ea\u52a8\u5e94\u7528\u5404\u5411\u5f02\u6027\u8fc7\u6ee4\u3001mipmap\u548c\u9634\u5f71\u7f13\u51b2\u7684\u529f\u80fd\u3002\u540e\u8005\u7528\u4e8e\u6d4b\u8bd5\u50cf\u7d20\u76f8\u5bf9\u4e8e\u5149\u6e90\u662f\u5426\u53ef\u89c1\u6216\u906e\u6321\uff0c\u56e0\u6b64\u53ef\u4ee5\u5e94\u7528\u6b63\u786e\u7684\u989c\u8272\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cGPU\u8fd8\u63d0\u4f9b\u6267\u884c\u88c1\u526a\u548c\u65e9\u671fZ\u6d4b\u8bd5(NV2A\u5c06Z\u7f13\u51b2\u533a\u538b\u7f29\u4e3a\u5176\u539f\u59cb\u5927\u5c0f\u7684\u56db\u500d\uff0c\u4ee5\u8282\u7701\u5e26\u5bbd\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u4e86\u6027\u80fd)\u3002\n\u5f97\u5230\u7684\u50cf\u7d20\u5b58\u50a8\u5728\u4e00\u7ec4\u5171\u4eab\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u5faa\u73af\u901a\u8fc78\u4e2a\u5bc4\u5b58\u5668\u7ec4\u5408\u5668\uff0c\u6bcf\u4e2a\u7ec4\u5408\u5668\u5bf9\u5176\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u3002\u4f7f\u7528\u50cf\u7d20\u7740\u8272\u5668(\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u7a0b\u5e8f)\u53ef\u4ee5\u5bf9\u6b64\u8fc7\u7a0b\u8fdb\u884c\u7f16\u7a0b\u3002\u5728\u6bcf\u4e2a\u5468\u671f\uff0c\u6bcf\u4e2a\u7ec4\u5408\u5668\u4ece\u5bc4\u5b58\u5668\u7ec4\u63a5\u6536RGBA\u503c(RGB+Alpha)\u3002\u7136\u540e\uff0c\u6839\u636e\u7740\u8272\u5668\u8bbe\u7f6e\u7684\u64cd\u4f5c\uff0c\u5b83\u5c06\u8fd0\u7b97\u503c\u5e76\u5199\u56de\u7ed3\u679c\u3002\u6700\u540e\uff0c\u66f4\u5927\u91cf\u7684\u503c\u88ab\u53d1\u9001\u5230\u6700\u7ec8\u7ec4\u5408\u5668\uff0c\u8be5\u7ec4\u5408\u5668\u53ef\u4ee5\u72ec\u5360\u5730\u6df7\u5408\u955c\u9762\u53cd\u5c04\u989c\u8272\u548c/\u6216\u96fe\u3002\n\u5bc4\u5b58\u5668\u7ec4\u5408\u5668\u662f\u53ef\u7f16\u7a0b\u7684\uff0c\u6027\u8d28\u4e0e\u7eb9\u7406\u73af\u5883\u5355\u5143\u7c7b\u4f3c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7\u7528\u7279\u5b9a\u7684\u8bbe\u7f6e\u7ec4\u5408\u6539\u53d8\u5176\u5bc4\u5b58\u5668\u3002\u5bf9\u4e8eXbox\uff0cPFIFO\u8bfb\u53d6\u63a8\u9001\u7f13\u51b2\u533a\u4ee5\u8bbe\u7f6ePGRAPH\uff0c\u5176\u4e2d\u5305\u62ec\u5bc4\u5b58\u5668\u7ec4\u5408\u5668\u548c\u7eb9\u7406\u7740\u8272\u5668\u3002\n\u5728\u50cf\u7d20\u5199\u5165\u5e27\u7f13\u51b2\u5668\u4e4b\u524d\uff0cNV2A\u5305\u542b\u56db\u4e2a\u79f0\u4e3a\u5149\u6805\u8f93\u51fa\u5355\u5143\u6216\u201cROP\u201d\u7684\u4e13\u7528\u5f15\u64ce\uff0c\u5b83\u4eec\u4f7f\u7528\u4e3b\u5185\u5b58\u4e2d\u5206\u914d\u7684\u5757\u6267\u884c\u5fc5\u8981\u7684\u6d4b\u8bd5(\u963f\u5c14\u6cd5\u3001\u6df1\u5ea6\u548c\u6a21\u677f)\u3002\u6700\u540e\uff0c\u6279\u6b21\u50cf\u7d20(\u6bcf\u4e2a\u5468\u671f4\u4e2a)\u53ea\u6709\u5728\u901a\u8fc7\u8fd9\u4e9b\u6d4b\u8bd5\u65f6\u624d\u4f1a\u88ab\u5199\u56de\u3002\n\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u591a\u91cd\u91c7\u6837\u7684\u6280\u672f\u5bf9\u5e27\u7f13\u51b2\u533a\u8fdb\u884c\u6297\u952f\u9f7f\u5904\u7406\u3002\u672c\u8d28\u4e0a\uff0c\u8be5\u6280\u672f\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u7684\u4e0d\u540c\u504f\u79fb\u5bf9\u591a\u8fb9\u5f62\u7684\u8fb9\u8fdb\u884c\u591a\u6b21\u91c7\u6837\u3002\u7136\u540e\uff0c\u5bf9\u6240\u6709\u6837\u672c\u8fdb\u884c\u5e73\u5747\uff0c\u5f62\u6210\u6297\u952f\u9f7f\u56fe\u50cf\u3002\u8fd9\u79cd\u65b9\u6cd5\u53d6\u4ee3\u4e86\u4ee5\u524dNVIDIA GPU\u4f7f\u7528\u7684\u540d\u4e3a\u201c\u8d85\u7ea7\u91c7\u6837\u201d\u7684\u6297\u952f\u9f7f\u529f\u80fd(\u66f4\u8017\u8d39\u8d44\u6e90)\u3002\n\u6211\u53d1\u73b0\u6709\u5fc5\u8981\u5f3a\u8c03NVIDIA\u5411\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7684\u65b0\u7684\u53ef\u7f16\u7a0b\u6027\u6a21\u578b\u7684\u91cd\u8981\u6027\u3002\u51e0\u5e74\u524d\uff0c\u5927\u591a\u6570\u56fe\u5f62\u6d41\u6c34\u7ebf\u90fd\u662f\u7531CPU\u8ba1\u7b97\u7684\uff0c\u7559\u4e0bGPU\u6765\u52a0\u901f\u5149\u6805\u5316\u64cd\u4f5c\u3002\u968f\u7740\u7740\u8272\u5668(\u6307\u50cf\u7d20\u7740\u8272\u5668\u548c\u9876\u70b9\u7a0b\u5e8f)\u7684\u5f15\u5165\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5229\u7528GPU\u7684\u8d44\u6e90\u6765\u52a0\u901f\u6d41\u6c34\u7ebf\u4e2d\u7684\u8bb8\u591a\u8ba1\u7b97\uff0c\u4ece\u800c\u51cf\u8f7bCPU\u7684\u5927\u91cf\u5de5\u4f5c\u8d1f\u62c5\u3002\n\u201c\u7740\u8272\u5668\u201d\u7684\u6982\u5ff5\u662f\u76ae\u514b\u65af\u57281989\u5e74\u5f15\u5165\u7684\uff0c\u4f5c\u4e3a\u4e00\u79cd\u6269\u5c55Renderman\u7684\u65b9\u6cd5\uff0cRenderman\u662f\u4ed6\u4eec\u7528\u4e8e3D\u6e32\u67d3\u7684\u5f00\u521b\u6027\u8f6f\u4ef6\u3002\u8fd9\u662f\u57283D\u56fe\u5f62\u4e3b\u8981\u7531\u5de5\u4e1a\u8bbe\u5907\u5904\u7406\u7684\u65f6\u4ee3\uff0c\u540e\u6765\uff0c\u6211\u4eec\u770b\u5230\u67d0\u4e9b\u6e38\u620f\u673a\u662f\u5982\u4f55\u878d\u5165\u7c7b\u4f3c\u7684\u539f\u5219\u7684\uff0c\u4f46\u76f4\u5230NVIDIA\u53d1\u5e03\u4e86\u4ed6\u4eec\u7684GeForce3\u7cfb\u5217\uff0c\u7740\u8272\u5668\u624d\u6210\u4e3a\u6d88\u8d39\u5e02\u573a\u7684\u6807\u51c6\u3002\n\u591a\u4e8f\u4e86\u9876\u70b9\u7a0b\u5e8f\uff0cGPU\u73b0\u5728\u53ef\u4ee5\u52a0\u901f\u6a21\u578b\u8f6c\u6362\u3001\u5149\u7167\u8ba1\u7b97\u548c\u7eb9\u7406\u5750\u6807\u751f\u6210\u3002\u540e\u8005\u5bf9\u4e8e\u5408\u6210\u9ad8\u9636\u66f2\u9762\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u6709\u4e86\u8fd9\u4e00\u70b9\uff0cCPU\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u63d0\u4f9b\u66f4\u597d\u7684\u7269\u7406\u3001\u4eba\u5de5\u667a\u80fd\u548c\u573a\u666f\u7ba1\u7406\u3002\n\u5728\u50cf\u7d20\u7740\u8272\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u64cd\u7eb5\u548c\u6df7\u5408\u7eb9\u7406\uff0c\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u6548\u679c\uff0c\u5982\u591a\u7eb9\u7406\u3001\u955c\u9762\u53cd\u5c04\u8d34\u56fe\u3001\u51f9\u51f8\u8d34\u56fe\u3001\u73af\u5883\u8d34\u56fe\u7b49\u3002\n\u591a\u4e8f\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u7f16\u7a0b\u6982\u5ff5\uff0c\u5373\u901a\u7528GPU\u6216\u201cGPGPU\u201d\uff0c\u5b83\u5305\u62ec\u5c06\u539f\u672c\u7531CPU\u72ec\u5360\u5b8c\u6210\u7684\u4efb\u52a1\u5206\u914d\u7ed9GPU\u3002\u56e0\u6b64\uff0c\u4e0d\u4ec5GPU\u5df2\u7ecf\u63a5\u7ba1\u4e86\u5927\u90e8\u5206\u56fe\u5f62\u6d41\u6c34\u7ebf\uff0c\u800c\u4e14\u73b0\u5728\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u4e13\u95e8\u8ba1\u7b97(\u5373\u7269\u7406\u8ba1\u7b97)\u7684\u9ad8\u6548\u534f\u5904\u7406\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u9886\u57df\uff0c\u968f\u7740GPU\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\u548c\u7075\u6d3b\uff0cNV2A\u5df2\u7ecf\u80fd\u591f\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u786c\u4ef6\u529f\u80fd(\u9876\u70b9\u548c\u653e\u5927\u5668\u50cf\u7d20\u7740\u8272\u5668)\u548c\u5f00\u53d1\u7684\u4e13\u95e8API(OpenGL\u7684\u201c\u72b6\u6001\u7a0b\u5e8f\u201d)\u7684\u7ed3\u5408\u3002\n\u6211\u6709\u4e00\u79cd\u611f\u89c9\uff0c\u7740\u8272\u5668\u5c06\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u4e2d\u5b9a\u671f\u91cd\u65b0\u8ba8\u8bba\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5b83\u4eec\u53ef\u80fd\u88ab\u8ba4\u4e3a\u6709\u70b9\u201c\u539f\u59cb\u201d\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u4e0e\u73b0\u5728GPU\u63d0\u4f9b\u7684\u76f8\u6bd4\uff0c\u50cf\u7d20\u7740\u8272\u5668\u751a\u81f3\u4e0d\u662f\u201c\u7740\u8272\u5668\u201d\u3002\n\u6e38\u620f\u7684\u6807\u51c6\u5206\u8fa8\u7387\u662f640x480\uff0c\u8fd9\u51e0\u4e4e\u662f\u7b2c\u516d\u4ee3\u7684\u6807\u51c6\u3002\u867d\u7136\uff0c\u8fd9\u4e2a\u9650\u5236\u53ea\u662f\u4e00\u4e2a\u6570\u5b57\uff1aGPU\u53ef\u4ee5\u7ed8\u5236\u9ad8\u8fbe4096x4096\u7684\u5e27\u7f13\u51b2\u533a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u786c\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u53ef\u63a5\u53d7\u7684\u6027\u80fd\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u63a7\u5236\u53f0\u5141\u8bb8\u5168\u5c40\u66f4\u6539\u5c4f\u5e55\u8bbe\u7f6e\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u63a8\u5e7f\u8fd9\u4e9b\u72ec\u7279\u7684\u529f\u80fd(\u5bbd\u5c4f\u548c\u9ad8\u5206\u8fa8\u7387)\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5f00\u53d1\u4eba\u5458\u3002\n..", "note_en": "It seems that Microsoft has decided to pick up where Sega left off. Their offer? A system with familiarities appreciated by developers and online services welcomed by users.\n Please note that, due to consistency with other sources, this article separates storage units between the metric prefix (i.e. megabytes or \u2018MB\u2019) and the standardised binary prefix (i.e. mebibytes or \u2018MiB\u2019), thus:\n     The processor included in this console is a slightly customised version of the famous  Intel Pentium III (an off-the-shelf CPU for computers) running at  733 MHz. With this, one can assume this console is just a PC behind the scenes&amp;mldr I won\u2019t tell you the answer, but I promise that at the end of the article you will be able to reach your own conclusion.\n Anyhow, Pentiums, along with other lines of CPUs designed and manufactured by Intel, were incredibly popular in the computer market. Such was Intel\u2019s market share that they became the de-facto reference point for quality: As a typical user, if you wanted a good computer and had the budget, you only had to look for  something carrying an Intel CPU. We all know by now that there are more factors involved, but that\u2019s what the marketing guys at Intel managed to project.\n  Now that we positioned Intel in the map, let\u2019s go back to the topic of this console. During my research, I was expecting to find documentation with the level of depth as other CPUs (MIPS, SuperH, ARM, etc), but instead, I stumbled across an excessive amount of marketing terms that only diverted my search. So, for this article, I came up with a structure to organise all the necessary information which will help to understand how this CPU works. Furthermore, I will try to introduce some terminology that Intel used to brand this CPU.\n  First things first, the Xbox\u2019s CPU is identified as a  Pentium III. So what does this mean? Back then (early 00s), the Pentium series represented the next-generation of CPUs. They were \u2018new high-end\u2019 that grouped all the fancy technology that made computers super-fast, plus it helped buyers decide which CPU they had to buy if they wanted  the best of the best.\n The Pentium III replaced Pentium II, which in turn replaced the original Pentium. Moreover, when the first Pentium came out, it replaced the 80486, which in turn replaced the 80386&amp;mldr You get the idea. What matters is that \u2018Pentium\u2019 is mainly a brand name, it\u2019s not directly associated with its inner workings. Therefore, we must go deeper!\n To dive further and not get lost in the way, I have catalogued the information into three sections which combined, make up the chip. The first the  Instruction Set Architecture or \u2018ISA\u2019 (the group of instructions used to command the CPU),  Microarchitecture (how is the ISA implemented in silicon) and the  Core (what set of components are used to package the microarchitecture to form the specific CPU model).\n Indeed, after I mentioned the name Intel it was a matter of time before I introduce the famous  x86, its instruction set.\n Even though x86 first appeared with the release of the 16-bit CPU called  Intel 8086 in 1978, the ISA has been constantly expanded with more instructions as more Intel CPUs were released (80186, 80286 and so on). Consequently, x86 started to fragment as more ground-breaking features were added (i.e. \u2018real mode\u2019, vs \u2018protected mode\u2019 vs \u2018long mode\u2019). To tackle this, modern x86 applications commonly targeted the 80386 ISA (also referred as  IA-32 or  i386) as a baseline, which among other things, operates in a 32-bit environment.\n Subsequently, Intel presented enhancements of IA-32 in the form of  extensions, meaning these may or may not be included in an IA-32 CPU. Programs can query the CPU to check if a specific enhancement is present. The Xbox\u2019s CPU includes two extensions:\n MMX (Multimedia Extension): Adds 57 SIMD instructions and 8 64-bit registers (integers only) that can speed up vector operations.\n SSE (Streaming SIMD extension): Another SIMD-type extension which addresses some of the limitations of MMX (lack of floating-point support and unable to use floating-point unit in parallel). It adds 8 128-bit registers (called \u2018XMM\u2019) that hold four 32-bit floats; and 56 new instructions.\n Good news is that since the console will always have the same CPU features, programmers can optimise their code to exploit these extensions as they will always be present.\n When it comes to building a circuit that can interpret x86 instructions, Intel has come up with so many different designs for their CPUs. Some designs were featured with the release of a new Pentium Series (i.e. Pentium 4) while others are featured when Intel releases an \u2018enhanced\u2019 version of a Pentium (such as the \u2018Pentium Pro\u2019). Nevertheless, since the release of the first Pentium, the microarchitecture is identified with a different name from the CPU model. For example, the original Pentium includes the \u2018P5\u2019 microarchitecture.\n Now, the Xbox CPU, along with the rest of Pentium III processors, use the  P6 Microarchitecture (also known as \u2018i686\u2019). This is the 6th generation (counting from the 8086) which features:\n Out-of-order execution: If possible, the CPU re-orders the sequence of instructions to increase efficiency and performance.\n Speculative prediction: Similar to  branch prediction, but it also executes the branch that the CPU has predicted it will be chosen.\n Having said that, take a closer look at these features. It so happens they are very similar to  previous consoles, however, the other CPUs are very different in terms of design compared to Intel ones. Historically, one could argue that Intel could have never been able to accomplish, let\u2019s say, a pipelined CPU. Yet they managed to do so, so let us see why&amp;mldr\n All of the competitor\u2019s consoles previously analysed contain a  RISC CPU whereas Intel\u2019s x86 ones are  CISC. RISC CPUs are known for having a simplified instruction set compared to CISC CPUs. This includes, for instance, not featuring instructions that operate values directly from memory (as opposed to registers).\n One of the advantages of RISC processors is that their simplistic approach enables its CPUs to be designed with a modular sense, which in turn can be exploited to improve performance with parallelism techniques. This is why we have seen CPUs like MIPS and PowerPC debuting pipelining, superscalar, out-of-order, branch prediction, etc. On the other side, \u2018CISC\u2019 processors were design many years before the RISC processors appeared and aimed to solve different needs. Consequently, their designs are not as flexible as RISC ones.\n Back to the original question, the P6 is an interesting design, because while the CPU only understands a CISC instruction set (x86), it interprets the ISA using  microcode (called \u2018micro-operations\u2019) and the unit that executes that code is built around the guidelines of RISC. All in all, this allows Intel to apply the optimisations of RISC processors while keeping a \u2018CISC layer\u2019 for compatibility with x86.\n Microcode is already embedded in the silicon but it can be patched, allowing Intel to fix its CPUs after production whenever a bug or a security vulnerability is discovered. If you have read previous articles (i.e. N64 or PS2), bear in mind that Intel\u2019s microcode is  not publicly accessible (let alone documented) and Intel is its solely \u2018maintainer\u2019.\n There were numerous chips released using the P6 microarchitecture. Specifically, the Xbox includes one model called  Coppermine. This was also released as the second revision of the Pentium III (replacing the \u2018Katmai\u2019 core) and includes the following components:\n 32 KiB L1 cache: Divided between 16 KiB for instructions and 16 KiB for data.\n Integrated  128 KiB L2 cache: This is  odd since the off-the-shelf Coppermine has 256 KiB of L2. In fact, the Coppermine128 (found in the Intel \u2018Celeron\u2019 brand, the low-end Pentium alternative) has the same amount of L2. This is probably done to reduce manufacturing costs, and keep this console at a competitive price.\n 133 MHz  Front-side bus: This is the bus that connects the L2 cache with the memory controller, we\u2019ll see more about it later on. Intel names it \u2018Front-side bus\u2019 to distinguish it from another bus which connects the L2 (external cache) with the L1 (internal cache). The latter bus is called \u2018Back-side bus\u2019 and yes&amp;mldr It\u2019s an unfortunate name to use from the UK.\n Coppermine also features two \u2018enhancements\u2019 over their original implementation of L2 cache, these are the  Advanced Transfer Cache and the  Advanced System Buffering. To sum them up, L2 cache is on-chip and their buses are wider, which help to reduce possible bottlenecks found in the Front-side bus.\n Finally, the chip uses the \u2018Micro-PGA2\u2019 socket to connect it to the motherboard, but like any other console, the Xbox has it soldered with a Ball Grid Array or \u2018BGA\u2019.\n  Here\u2019s a bit more history: After the years of the P6, Intel planned to succeed it with the \u2018Netburst\u2019 microarchitecture (featured in the Pentium IV). However, the line of succession also ended there: The microarchitecture couldn\u2019t be improved anymore. This prompted an Intel team in Israel to revisit the old P6 and develop a more efficient successor. The result was  Pentium M, eventually extended to form the  Core microarchitecture (and brand). \u2018Core\u2019 is the basis of present designs.\n  At some point in the history of the PC, motherboards grew so much in complexity that new designs had to be developed from the ground up to efficiently tackle new emerging needs.\n The new standard developed relied on two dedicated chips to handle most of the motherboard functions. These chips are:\n  The combination of these chips is called  chipset and they are important enough to condition the capabilities and performance of a motherboard. The Xbox, being so close to a PC, includes two chips as well: The  NV2A, a combination of Northbridge and GPU; and the  MCPX which handles the rest of I/O.\n Both chips are interconnected using a specialised bus called the  HyperTransport. It\u2019s worth pointing out that some PC motherboards also included this technology, just with a different brand (i.e. MPCX \u2192 nForce MCP-D)\n  The Xbox includes a total of  64 MiB of DDR SRAM, this type of RAM is very fast compared to what the competition offers, however it\u2019s also shared across all the components of this system. Hence, once more, we find ourselves in front of another  unified memory architecture or \u2018UMA\u2019 layout.\n We have previously seen how  troublesome this design can be sometimes. Nonetheless, programs can address this issue by spreading its data between different banks of memory. NV2A implements a  switching network that enables different units (CPU, GPU, etc) to concurrently access them.\n Furthermore, the console features an internal HardDisk, and it  so happens to have three partitions of 750 MiB each reserved for temporary storage: The CPU can offload some of its data from main RAM, then upload it back whenever it\u2019s needed. Bear in mind this is a manual process and does not involve virtual RAM.\n   As we\u2019ve seen before, the graphics processor resides in the NV2A chip and just like MCPX, it is manufactured by Nvidia.\n This company has been in the graphics business for a long time, their  GeForce series were one of the most popular GPU brands in the computer market, directly competing against the Radeon series from Artx/ATI. Overall, this provides good leverage on the quality of graphics found in the Xbox, considering it\u2019s Microsoft\u2019s first attempt in the console market.\n Now, I\u2019m afraid we find ourselves mixed in a lot of terminology and marketing terms just like the CPU section, but fear not! I\u2019ll start with the basics.\n  The GPU core found on the NV2A is based on the popular \u2018GeForce3\u2019 series of GPUs, it\u2019s also referred as  NV20 in Nvidia\u2019s technical documents.\n Please note that, while the pipeline of the Xbox\u2019s GPU is based on the NV20 architecture, the NV2A has some modifications that are not compatible with the rest of the NV20 series (most importantly, it has been adapted to work in a UMA environment).\n The units analysed contain a lot more features that go beyond the scope of this article, so I recommend checking out the sources/references if this section catches your attention. Also, since graphics-related terminology is constantly evolving (which can lead to some confusion), I\u2019ve decided to use the terms chosen by Microsoft/Nvidia during the years of the Xbox, so remember this if you plan to read more graphics-related articles from other sources.\n Having said that, let\u2019s take a look at how frames are drawn in the Xbox. Some explanations are very similar to Gamecube\u2019s  Flipper, so I recommend reading that article first in case you struggle to follow this one.\n First and foremost is explaining how the GPU can receive commands from the CPU. For that, the GPU contains a command processor called  PFIFO that effectively fetches and processes graphics commands (called  Pushbuffer) in a FIFO manner, the unpacked commands are subsequently delivered to the  PGRAPH (the block in charge of graphics processing) and other engines.\n Like Flipper, geometry doesn\u2019t have to be embedded in the command. PGRAPH provides many ways to submit graphics data. For instance, the CPU can allocate a buffer in RAM containing vertex data and then instruct the GPU to fetch them from that location. This approach can be efficient, as it prevents having to embed duplicated geometry.\n This is an interesting section for this GPU in particular. At this stage, the GPU provides the ability to apply vertex transformations on our geometry. We\u2019ve already seen this feature with Flipper, but unlike that GPU, this one uses a  programmable engine. Meaning that developers may specify which vertex operations are performed and how, as opposed to relying on a pre-defined program (although the NV2A can also operate in \u2018fixed\u2019 mode).\n This stage is handled by a  Vertex Unit and the NV2A features two of them. Each can load a program containing up to 136 instructions (also called  microcode). This program is referred as  vertex program and it\u2019s loaded at runtime. A vertex program can perform the following operations:\n  In a nutshell, the vertex unit processes vertices by manipulating them in its registers. In other words, once the program is loaded, 16 read-only registers (called \u2018input registers\u2019) are initialised with the attributes of a vertex (each vector contains four components). Afterwards, the unit performs the set of operations (instructed by the program) using the input registers. Furthermore, 12 writable registers and up to 196 constants are provided to assists the computation. Finally, the resulting vertex is stored in another block of 11 writable registers (each one limited to a specific purpose), which are passed on to the next stage. This process is repeated for every vertex received.\n At this stage, vertices are transformed into pixels. The process starts with a rasteriser that generates pixels to draw each triangle. The NV2A\u2019s rasteriser can generate four pixels per cycle.\n Afterwards,  4 texture shaders are used to fetch textures from memory, these also offer to automatically apply anisotropic filtering, mipmapping and  shadow buffering. The latter one is used to test whether a pixel is visible or overshadowed with respect to the lighting source, so the correct colour can be applied. At this point, the GPU also offers to perform clipping and an early  Z-test (the NV2A compresses the Z-buffer four times its original size to save bandwidth, contributing to a lot of performance improvements).\n The resulting pixels are stored in a  set of shared registers and then cycled through  8 register combiners, where each one applies arithmetic operations on them. This process is programmable with the use of  pixel shaders (another type of program). At each cycle, each combiner receives RGBA values (RGB + Alpha) from the register set. Then, based on the operation set by the shader, it will operate the values and write back the result. Finally, a larger amount of values are sent to the  final combiner which can exclusively blend specular colours and/or fog.\n Register combiners are programmable in a similar nature to the  Texture Environment Unit. That is, by altering its registers with a specific combination of settings. In the case of the Xbox, the PFIFO reads pushbuffers to set up PGRAPH, which includes the register combiners and texture shaders.\n Before the pixels are written to the frame-buffer, the NV2A contains four dedicated engines called  Raster Output Unit or \u2018ROP\u2019 which perform necessary tests (alpha, depth and stencil) using allocated blocks in main memory. Finally, batches of pixels (four per cycle) are written back only if they passed these tests.\n Moreover, the frame-buffer can be antialiased using a technique called  multisampling. Essentially, this technique samples edges of polygons multiple times with different offsets added in the process. Afterwards, all samples are averaged and to form the antialiased image. This approach replaced the previous (and more resource-hungry) anti-aliasing function called \u2018supersampling\u2019, used by previous Nvidia GPUs.\n  I find important to emphasise the significance of the new programmability model that Nvidia provided to developers. Years ago, most of the graphics pipeline was computed by the CPU, leaving the GPU to accelerate rasterising operations. With the introduction of shaders (referring to both pixel shaders and vertex programs), programmers can take advantage of the resources of the GPU to accelerate many computations in the pipeline, offloading a great amount of work from the CPU.\n The concept of \u2018shaders\u2019 was introduced by  Pixar in 1989 as a method to extend  Renderman, their pioneering software used for 3D rendering. This was back in the time when 3D graphics were mainly handled by industrial equipment, later on, we have seen how certain consoles incorporated  similar principles, but it wasn\u2019t until Nvidia released their GeForce3 line, that shaders became a standard in the consumer market.\n Thanks to vertex programs, the GPU can now accelerate model transformations, lighting calculations and texture coordinate generation. The latter one is essential for composing  Higher Order surfaces. With this, the CPU can concentrate on providing better physics, AI and scene management.\n In the case of the pixel shaders, programmers can manipulate and blend textures in multiple ways to achieve different effects such as multi-texturing, specular mapping, bump mapping, environment mapping and so on.\n A new programming concept that emerges thanks to this approach is the  General Purpose GPU or \u2018GPGPU\u2019, which consists in assigning tasks to the GPU that would have been exclusively done by the CPU. So not only the GPU has taken over most of the graphics pipeline, but now can act as an efficient co-processor for specialised computations (i.e. physics calculations). This is a new area that will evolve as GPUs become more powerful and flexible, however the NV2A was already able to achieve this thanks to a combination of hardware capabilities (vertex &amp; pixel shaders) and specialised APIs developed (OpenGL\u2019s \u2018state programs\u2019).\n I have a feeling that shaders will be regularly revisited in future articles. Please remember that in this article, however, they may be considered a bit \u2018primitive\u2019 and some people may argue that the pixel shaders are not even \u2018shaders\u2019, compared to what GPU offers nowadays.\n  The standard resolution of games is  640x480, this is pretty much the standard in the sixth generation. Although, this constraint is just a number: The GPU can draw frame-buffers with up to 4096x4096, yet it doesn\u2019t mean the hardware would provide acceptable performance. On the other side, the console allow to alter screen settings globally, which may help to promote these unique features (widescreen and \u2018high resolution\u2019) instead of waiting for developers to\n......", "posttime": "2020-06-27 16:07:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "xbox,cpu", "title": "Xbox\u67b6\u6784", "title_en": "Xbox Architecture", "transed": 1, "url": "https://www.copetti.org/projects/consoles/xbox/", "via": "", "real_tags": ["xbox", "cpu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008538, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u7684\u6700\u540e\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5728HP PA-RISC\u5de5\u4f5c\u7ad9\u4e0a\u8bbe\u7f6e\u4e86NextStep\u3002\u4eca\u5929\uff0c\u6211\u5c06\u5f00\u59cb\u5de5\u4f5c\uff1a\u914d\u7f6e\u7f51\u7edc\uff0c\u5b89\u88c5\u7cfb\u7edf\u8865\u4e01\uff0c\u4e3a\u5176\u914d\u5907\u5f00\u53d1\u5de5\u5177\uff0c\u5e76\u5b89\u88c5\u4e00\u4e9b\u6709\u7528\u7684\u8f6f\u4ef6\uff01\n\u548c\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e00\u6837\uff0c\u6211\u4e5f\u5236\u4f5c\u4e86\u4e00\u6bb5YouTube\u89c6\u9891\uff0c\u5185\u5bb9\u5927\u81f4\u76f8\u540c\uff01\u5982\u679c\u89c6\u9891\u662f\u4f60\u7684\u901f\u5ea6\uff0c\u6211\u5f88\u4e50\u610f\u8ba9\u4f60\u53bb\u770b\u770b\uff01\n\u6211\u7684\u76ee\u6807\u662f\u6700\u7ec8\u62e5\u6709\u4e00\u53f0\u529f\u80fd\u5f3a\u5927\u7684\u673a\u5668\uff0c\u6211\u53ef\u4ee5\u50cf\u4f7f\u7528\u65b0\u673a\u5668\u4e00\u6837\u4f7f\u7528\u5b83\uff0c\u5e76\u4ece\u7ecf\u9a8c\u4e2d\u5b66\u4e60\u3002\n\u867d\u7136\u53ef\u4ee5\u4eceSCSI\u9a71\u52a8\u5668(\u751a\u81f3\u8f6f\u76d8\uff01)\u4f20\u8f93\u6587\u4ef6\uff0c\u4f46\u5728\u6211\u7684\u5bb6\u5ead\u7f51\u7edc\u4e0a\u5b89\u88c5Pizzabox\u4f7f\u8f6f\u4ef6\u52a0\u8f7d\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u51e0\u5e74\u524d\uff0c\u6211\u7b2c\u4e00\u6b21\u5728\u8fd9\u4e2a\u5de5\u4f5c\u7ad9\u4e0a\u5c1d\u8bd5NextStep\u3002\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u6b63\u5e38\uff0c\u4f46\u6211\u5728\u8054\u7f51\u65b9\u9762\u9047\u5230\u4e86\u9ebb\u70e6\u3002\u8d77\u521d\uff0c\u6211\u4e50\u89c2\u5730\u8ba4\u4e3a\u6211\u4f1a\u5f04\u6e05\u695a\u8fd9\u4e00\u70b9\uff1a\n\u6211\u60f3\u6211\u4eca\u5929\u7684\u5de5\u4f5c\u5df2\u7ecf\u505a\u5b8c\u4e86\uff0c\u4f46\u662f\u5982\u679c\u6211\u80fd\u4e0eNFS\u548cNetInfo(Lololol)\u6297\u4e89\uff0c\u6211\u5f88\u5feb\u5c31\u80fd\u62ff\u5230\u5b83\u7684\u5c4f\u5e55\u622a\u56fe\u548c\u8f6f\u4ef6\u3002\n-cron mam(@outaskins)2018\u5e742\u670810\u65e5\u3002\n\u7a0d\u7b49\u7247\u523b\uff1aNextStep\u662f80-90\u5e74\u4ee3\u63a8\u51fa\u7684\u4ee5\u5de5\u4f5c\u7ad9\u4e3a\u4e2d\u5fc3\u7684Unix\u64cd\u4f5c\u7cfb\u7edf--\u8981\u628a\u5b83\u5b89\u88c5\u5230\u7f51\u7edc\u4e0a\u600e\u4e48\u4f1a\u6709\u56f0\u96be\u5462\uff1f\u7b54\u6848\u662f\u4e00\u79cd\u53eb\u505aNetInfo\u7684\u4e1c\u897f\u3002\n\u51fa\u4e4e\u6240\u6709\u4eba\u610f\u6599\u7684\u662f\uff0cNextStep\u6765\u81ea\u4e00\u5bb6\u7531\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af(Steve Jobs)\u521b\u7acb\u7684\u516c\u53f8\uff0c\u5b83\u62e5\u6709\u81ea\u5df1\u7684NEXT\u552f\u4e00\u7684\u5de5\u5177\u751f\u6001\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u5de5\u5177\u5b8c\u7f8e\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4ee4\u4eba\u60ca\u53f9\u3002NextStep\u7f51\u7edc\u7684\u57fa\u77f3\u662fNetInfo\u3002\u5982\u679c\u60a8\u5728\u7f51\u7edc\u4e0a\u6709\u4e00\u7ec4NeXT\u8ba1\u7b97\u673a\uff0cNetInfo\u4f1a\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u7cfb\u7edf\u6765\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u4e5f\u5c31\u662f\u8bf4\uff1aNetInfo\u662f\u4e00\u4e2a\u201c\u76ee\u5f55\u670d\u52a1\u201d\u7cfb\u7edf\u3002\u8fd9\u4e00\u5207\u90fd\u5f88\u597d-\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\uff0c\u592a\u7a7a\u6709\u5f88\u591a\u7ade\u4e89\u5bf9\u624b\uff0c\u8fd8\u6ca1\u6709\u5efa\u7acb\u4e00\u6761\u201c\u6b63\u786e\u7684\u9053\u8def\u201d\uff0c\u4f46\u2026\u3002\u6211\u4e0d\u60f3\u8ba9\u6211\u7684\u673a\u5668\u6210\u4e3a\u76ee\u5f55\u7684\u4e00\u90e8\u5206\uff0c**\u6211\u53ea\u60f3\u8ba9\u5b83\u5728\u6211\u73b0\u6709\u7684TCP/IP\u7f51\u7edc\u4e0a\u3002\n\u9009\u62e9\u6211\u4eec\u5c06\u5982\u4f55\u4e0e\u73b0\u6709\u7684NetInfo\u7f51\u7edc\u96c6\u6210(\u56e0\u4e3a\u6211\u6839\u672c\u4e0d\u6253\u7b97\u4e0e\u4e4b\u4ea4\u4e92\uff0c\u6240\u4ee5\u6211\u5fc5\u987b\u9009\u62e9\u201c\u63d0\u4f9b\u4e0b\u9762\u6307\u5b9a\u7684\u670d\u52a1\u201d\uff0c\u8fd9\u662f\u4e00\u79cd\u5305\u7f57\u4e07\u8c61\u7684\u65b9\u5f0f)\u3002\n\u6307\u5b9a\u6211\u7684\u4e3b\u673a\u540d\u548cIP\u5730\u5740-\u5982\u679c\u6211\u8fde\u63a5\u5230\u73b0\u6709\u7684NetInfo\u7f51\u7edc\uff0c\u6211\u53ef\u80fd\u4e0d\u5fc5\u8fd9\u6837\u505a\u3002\u201c\u7f51\u7edc\u9009\u9879\u201d\u5141\u8bb8\u6211\u8bbe\u7f6e\u66f4\u7cbe\u7ec6\u7684IP\u8bbe\u7f6e\uff0c\u5982\u7f51\u7edc\u63a9\u7801\u548c\u7f51\u5173\uff1b\u201cNetInfo\u9009\u9879\u201d\u5141\u8bb8\u6211\u9009\u62e9\u5982\u4f55\u4e0e\u73b0\u6709\u57df\u96c6\u6210(\u5982\u679c\u76f8\u5173)\u3002\n\u8bbe\u7f6e\u7f51\u7edc\u670d\u52a1\uff1a\u5728\u6211\u7684\u8bbe\u7f6e\u4e2d\uff0c\u6211\u5e76\u4e0d\u771f\u6b63\u9700\u8981\u8fd9\u4e9b\u4e1c\u897f\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684NextStep\u7cfb\u7edf\uff0c\u6211\u786e\u5b9e\u5fc5\u987b\u201c\u7ef4\u62a4\u7f51\u7edc\u7ba1\u7406\u6570\u636e\u7684\u4e3b\u526f\u672c\u201d(\u4e5f\u5c31\u662fNetInfo\u6570\u636e\u5e93)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u611f\u89c9\u771f\u7684\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u5b83\u4f1a\u8ba9\u6211\u4eceNFS\u5171\u4eab\u83b7\u53d6\u6587\u4ef6\u5417\uff1f\n\u6211\u7acb\u5373\u5c1d\u8bd5\u901a\u8fc7NFS\u8fde\u63a5\u5230\u6211\u7684NAS-\u6bd5\u7adf\uff0c\u8bbe\u7f6e\u7f51\u7edc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6587\u4ef6\u4f20\u8f93\u66f4\u5bb9\u6613\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4e0d\u8d77\u4f5c\u7528-\u6211\u53ef\u4ee5\u4f7f\u7528NFSMananger\u8bbe\u7f6eNFS\u6302\u8f7d(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u64cd\u4f5c)\uff0c\u4f46\u6302\u8f7d\u70b9\u59cb\u7ec8\u4e3a\u7a7a\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u6b63\u5728\u5c1d\u8bd5\u901a\u8fc7IP\u5730\u5740\u8bbf\u95ee\u5b83\uff1a\n\u6240\u4ee5\u6211\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\u4e3a\u4e86\u7f29\u5c0f\u6f5c\u5728\u95ee\u9898\u7684\u8303\u56f4\uff0c\u6211\u8fd0\u884c\u4e86\u51e0\u4e2a\u6d4b\u8bd5\uff1a\n\u5c1d\u8bd5\u4ece\u5de5\u4f5c\u7ad9ping\u6211\u7684NAS-\u8fd9\u88ab\u8bc1\u660e\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3aNextStep\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55ping\u547d\u4ee4\u3002\u53ef\u80fd\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u5b83\u6240\u62e5\u6709\u7684\u5de5\u5177\u6765\u5b8c\u6210\u4e00\u4e9b\u7b49\u4ef7\u7684\u4e8b\u60c5\uff0c\u4f46\u6211\u53ea\u662f\u7ee7\u7eed\u524d\u8fdb\n\u6b63\u5728\u5c1d\u8bd5\u4ece\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6eping\u5de5\u4f5c\u7ad9\u3002\u8fd9\u8d77\u4f5c\u7528\u4e86-\u6211\u53ef\u4ee5\u4ece\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0aping\u5b83\uff01\n\u5c1d\u8bd5\u4f7f\u7528FTP\u8fde\u63a5\u5230\u6211\u7684NAS-NextStep\u4f3c\u4e4e\u62e5\u6709\u7684\u4e3a\u6570\u4e0d\u591a\u7684\u7f51\u7edc\u5de5\u5177\u4e4b\u4e00\u5c31\u662fFTP\uff0c\u6240\u4ee5\u6211\u8bd5\u4e86\u8bd5\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u8d77\u4f5c\u7528\u4e86\uff01\n\u7136\u800c\uff0c\u5b83\u4e0d\u80fd\u901a\u8fc7\u4e3b\u673a\u540d\u5de5\u4f5c\uff0c\u8fd9\u81f3\u5c11\u8868\u660eDNS\u6709\u4e00\u4e9b\u95ee\u9898\u3002\u6df1\u5165\u9605\u8bfb\u201c\u6df7\u5408\u7f51\u7edc\u4e2d\u7684\u4e0b\u4e00\u6b65\u8ba1\u7b97\u673a\u201d\u4e2d\u7684\u201c\u4e0b\u4e00\u6b653.3\u7f51\u7edc\u548c\u7cfb\u7edf\u7ba1\u7406\u624b\u518c\u201d\u90e8\u5206(\u6211\u53ef\u80fd\u65e9\u4e9b\u65f6\u5019\u5c31\u5e94\u8be5\u8fd9\u6837\u505a)\uff0c\u53d1\u73b0\u6211\u9700\u8981\u624b\u52a8\u914d\u7f6eDNS\u3002\u5b83\u6ca1\u6709GUI\u9009\u9879\uff0c\u60a8\u53ea\u9700\u5199\u51fa\u4e00\u4e2a/etc/Resolution v.conf\uff1a\n\u4f46\u662f\u4ecd\u7136\u4e0d\u80fd\u4f7f\u7528NFS\u3002\u4ec0\u4e48\u7ed9\u4e88\uff1f\u6211\u6709\u4e24\u4e2a\u65b9\u5411\u7684\u7f51\u7edc\u8fde\u63a5\uff0cDNS\u73b0\u5728\u4e5f\u5728\u5de5\u4f5c\uff01\u6211\u76f8\u4fe1\u8fd9\u5c31\u662f\u6211\u51e0\u5e74\u524d\u53d6\u5f97\u7684\u6700\u5927\u6210\u5c31\uff0c\u5929\u54ea\uff0c\u6211\u5f88\u6cae\u4e27\u3002\n\u65e0\u6cd5\u83b7\u53d6\u2026\u3002\u6211\u7684\u5730\u5740\uff1f\u8ba1\u7b97\u673a\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u5730\u5740\u5417\uff1f\u867d\u7136\u6211\u4e0d\u77e5\u9053\u5b83\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a(Google\u5df2\u7ecf\u4e3a\u6211\u63d0\u4f9b\u4e86\u51e0\u4e2a\u63d0\u5230\u5b83\u7684\u5feb\u901f\u65c1\u767d\uff0c\u4f46\u6ca1\u6709\u592a\u591a\u7ec6\u8282)\uff0c\u4f46\u662f\u6302\u8f7dNFS\u670d\u52a1\u5668\u9700\u8981\u5bf9\u60a8\u7684IP\u6267\u884c\u53cd\u5411DNS\u3002\n\u6211\u7684\u5bb6\u5ead\u7f51\u7edc\u786e\u5b9e\u6709\u4e00\u4e2a\u771f\u5b9e\u7684DNS\u670d\u52a1\u5668\uff0c\u5b83\u6839\u636eDHCP\u79df\u7ea6\u548cIP\u9884\u7559\u8fdb\u884c\u586b\u5145\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u7ad9\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2aIP\uff0c\u8fd9\u662f\u6211\u4e60\u60ef\u6027\u5730\u4e3aPizzaboxes(192.168.1.200)\u786c\u7f16\u7801\u7684\u3002\u6211\u4ed4\u7ec6\u68c0\u67e5\u4e86DHCP\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u786e\u5b9e\u4e3a\u8be5IP\u8bbe\u7f6e\u4e86\u4e0d\u540c\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u6839\u672c\u6ca1\u6709\u4e3a\u8be5\u4e3b\u673a\u540d\u8bbe\u7f6e\u3002\u6211\u5c06\u8be5\u6761\u76ee\u66ff\u6362\u4e3a192.168.1.200\u5904\u7684hp712\u6761\u76ee\uff0c\u4f5c\u4e3a\u6211\u5de5\u4f5c\u7ad9\u7684MAC\u5730\u5740\uff0c\u5e76\u7948\u7977\u3002\n\u5728\u6240\u6709\u8fd9\u4e9b\u7e41\u7410\u7684\u5de5\u4f5c\u4e4b\u540e\uff0c\u914d\u7f6e\u8fdc\u7a0bNFS\u6302\u8f7d\u7684\u6b63\u786e\u65b9\u6cd5\u662f\u901a\u8fc7NFSManager.app\u3002\u800cNFSManager\u5141\u8bb8\u60a8\u914d\u7f6e\u201c\u5bfc\u51fa\u201d(\u6211\u4e0e\u4ed6\u4eba\u5171\u4eab\u7684\u672c\u5730\u76ee\u5f55)\u548c\u201c\u5bfc\u5165\u201d(\u6211\u5e0c\u671b\u672c\u5730\u6302\u8f7d\u7684\u8fdc\u7a0b\u76ee\u5f55)\u3002\n\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u5e76\u586b\u5199\u6211\u7684NAS\u7684\u8be6\u7ec6\u4fe1\u606f\uff1a\n\u5c31\u8fd9\u6837?\u3002\u6211\u8d39\u4e86\u5f88\u5927\u52b2\u624d\u8d70\u5230\u8fd9\u4e00\u6b65\uff0c\u4f46\u6211\u7ec8\u4e8e\u53ef\u4ee5\u4f20\u8f93\u6587\u4ef6\u4e86\u3002\n\u7b2c\u4e00\u8981\u52a1\u662f\u8fd0\u884c\u7cfb\u7edf\u66f4\u65b0\u3002NextStep 3.3\u4e8e1995\u5e74\u5e74\u4e2d\u53d1\u5e03\uff0c\u5b83\u6709\u4e09\u6b21\u8865\u4e01\u66f4\u65b0\uff1a\u7b2c\u4e00\u6b21\u662f\u57281995\u5e74\u5e95\uff0c\u7b2c\u4e8c\u6b21\u548c\u7b2c\u4e09\u6b21\u662f\u57281999\u5e74\u5e95\u3002\u81ea\u4ece1997\u5e74NeXT\u88ab\u82f9\u679c\u6536\u8d2d\u4ee5\u6765\uff0c\u8fd9\u4e2a\u8865\u4e01\u662f\u7531\u82f9\u679c\u4e3a\u89e3\u51b3\u5343\u5e74\u866b\u548c\u5176\u4ed6\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\u800c\u5f00\u53d1\u7684\u3002\u8c22\u8c22\u4f60\uff0c\u82f9\u679c\uff01\u5854\u666e\u5c14\u3002\n\u7b2c\u4e09\u4e2a\u8865\u4e01\u662f\u7d2f\u79ef\u66f4\u65b0\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u5c31\u662f\u6211\u9700\u8981\u7684\u5168\u90e8\u3002org\u6177\u6168\u5730\u6258\u7ba1\u8be5\u8865\u4e01\u4ee5\u4f9b\u4e0b\u8f7d\u3002\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fHP PA-RISC\u673a\u5668\uff0c\u6240\u4ee5\u6211\u9700\u8981NS33RISCUserPatch3.tar\u3002\u9700\u8981\u4ee5root\u7528\u6237\u8eab\u4efd\u5b89\u88c5\u7cfb\u7edf\u66f4\u65b0\uff0c\u5982\u679c\u60a8\u4ee5\u6211(\u9ed8\u8ba4\u7528\u6237)\u8eab\u4efd\u8fd0\u884c\u7cfb\u7edf\u66f4\u65b0\uff0cNextStep\u4e0d\u4f1a\u63d0\u793a\u63d0\u5347\u6743\u9650\uff0c\u5b83\u53ea\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u9519\u8bef\u3002\u56e0\u6b64\uff0c\u6211\u9700\u8981\u4ee5root\u7528\u6237\u8eab\u4efd\u76f4\u63a5\u767b\u5f55\u3002\u4e3a\u6b64\uff0c\u6211\u9700\u8981\u7ed9me\u7528\u6237\u4e00\u4e2a\u5bc6\u7801\uff0c\u8fd9\u6837\u7cfb\u7edf\u5c31\u4f1a\u5728\u5f15\u5bfc\u65f6\u505c\u6b62\u81ea\u52a8\u767b\u5f55(\u8ba9\u6211\u6709\u673a\u4f1a\u4ee5root\u8eab\u4efd\u767b\u5f55)\u3002\u8981\u8bbe\u7f6e\u5bc6\u7801\uff0c\u8bf7\u8f6c\u5230Preference ences.app\u5e76\u5bfc\u822a\u5230\u9501\u56fe\u6807\u3002\n\u4e0b\u6b21\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u6211\u4f1a\u770b\u5230\u767b\u5f55\u5c4f\u5e55(\u800c\u4e0d\u662f\u81ea\u52a8\u8f6c\u5230\u684c\u9762)\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0croot\u5bc6\u7801\u4e3a\u7a7a(\u60a8\u5f53\u7136\u53ef\u4ee5\u5728\u767b\u5f55\u540e\u4fee\u590d\u6b64\u95ee\u9898\uff0c\u65b9\u6cd5\u4e0e\u4e3ame\u5e10\u6237\u8bbe\u7f6e\u5bc6\u7801\u76f8\u540c)\u3002\u6211\u5bfc\u822a\u5230NAS\u4e0a\u653e\u7f6e\u8865\u4e01\u538b\u7f29\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5c06\u5176\u590d\u5236\u5230\u60e0\u666e712\uff0c\u7136\u540e\u5c06\u5176\u89e3\u538b\u3002\n\u5355\u51fb\u201c\u5b89\u88c5\u201d\u4f1a\u63d0\u793a\u6211\u786e\u4fdd\u9009\u62e9\u4e86\u6b63\u786e\u7684\u4f53\u7cfb\u7ed3\u6784(\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\u662fPA-RISC)\uff0c\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u6765\u786e\u5b9a\u517c\u5bb9\u6027\uff0c\u7136\u540e\u8fd0\u884c\u66f4\u65b0\u3002\n\u91cd\u542f\u540e\uff0c\u6211\u6b63\u5728\u4f7f\u7528PA-RISC\u7684\u6700\u65b0\u7248\u672c\u7684NextStep\uff0c\u5e76\u4e3a2000\u5e74\u505a\u597d\u4e86\u51c6\u5907\uff01\n\u5236\u9020\u4e00\u4e2a\u53ef\u7528\u7684\u7cfb\u7edf\u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48\uff1f\u5f00\u53d1\u4eba\u5458\u5de5\u5177\uff01NextStep\u6709\u4e24\u5957\u5149\u76d8--\u4e3b\u64cd\u4f5c\u7cfb\u7edf\u7684\u201c\u7528\u6237\u201d\u5149\u76d8\uff0c\u4ee5\u53ca\u5e26\u6709\u7f16\u8bd1\u5668\u3001GUI\u6784\u5efa\u5de5\u5177\u3001\u5e93\u548c\u6587\u6863\u7684\u53ef\u9009\u7684\u201c\u5f00\u53d1\u4eba\u5458\u201d\u5149\u76d8\u3002\u867d\u7136\u9488\u5bf9CISC(m68k\u548ci386)\u548cRISC(PA-RISC\u548cSPARC)\u5e73\u53f0\u7684NextStep User\u6709\u4e0d\u540c\u7684\u7248\u672c\uff0c\u4f46\u5f00\u53d1\u4eba\u5458\u5149\u76d8\u662f\u201c\u56db\u80d6\u201d\u7684-\u5b83\u5305\u542b\u6240\u6709\u56db\u4e2a\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6211\u4ece\u4e92\u8054\u7f51\u6863\u6848\u9986\u6293\u53d6\u4e86\u663e\u5f71\u5149\u76d8\u6620\u50cf\u3002\n\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9645\u7684ISO\u6620\u50cf\uff0c\u6211\u53ef\u80fd\u4f1a\u5c06\u5176\u6302\u8f7d\u5230\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\uff0c\u5e76\u5c06\u6587\u4ef6\u590d\u5236\u5230\u6211\u7684NAS\u4ee5\u4f7f\u5b89\u88c5\u7a0b\u5e8f\u53ef\u4f9b\u5de5\u4f5c\u7ad9\u4f7f\u7528\uff1b\u4e0d\u5e78\u7684\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u5b83\u662f\u4ec0\u4e48\u683c\u5f0f\u7684\uff1f\u78c1\u76d8\u6620\u50cf\u7684\u524d\u51e0\u4e2a\u5b57\u8282\u901a\u5e38\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff1a\nhead-c 16 nextstepdeveloper3.3.iso|\u5341\u516d\u8fdb\u5236p0000000 64 6c 56 33 00 00 00 4e 45 58 540000010\u3002\n\u5f53\u8bd5\u56fe\u627e\u5230\u8fd9\u6837\u7684\u201c\u9b54\u672f\u6570\u5b57\u201d\u65f6\uff0c\u6211\u901a\u5e38\u4f1a\u67e5\u770bNetBSD\u6765\u6e90\u3002\u7531\u4e8eNetBSD\u4fa7\u91cd\u4e8e\u4e0e\u5c3d\u53ef\u80fd\u5e7f\u6cdb\u7684\u786c\u4ef6\u96c6\u517c\u5bb9\uff0c\u56e0\u6b64\u5b83\u4eec\u901a\u5e38\u5bf9\u9065\u8fdc\u7684\u4e8b\u7269\u5177\u6709\u517c\u5bb9\u6027\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u5b57\u8282\u786e\u5b9e\u51fa\u73b0\u5728sys/sys/bootblock\u4e2d\u3002h\uff1a0x646c5633 is NEXT68K_LABEL_CD_V3\u3002\u56e0\u6b64\uff0c\u8fd9\u662f\u7279\u5b9a\u4e8eNEXT\u7684\u975e\u6807\u51c6\u683c\u5f0f\u3002\u6709\u4e00\u4e9b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u4e0e\u8fd9\u79cd\u7c7b\u578b\u7684\u5149\u76d8\u6807\u7b7e\u4ea4\u4e92-\u4e5f\u8bb8\u5c06\u6765\u6211\u53ef\u4ee5\u50cf\u4e3aSGI EFS\u505a\u7684\u90a3\u6837\u7f16\u5199\u4e00\u4e9b\u4ee3\u7801\u6765\u8bfb\u53d6CD\uff1f\u4e0d\u8fc7\uff0c\u73b0\u5728\u6211\u5c06\u5c1d\u8bd5\u5c06\u78c1\u76d8\u6620\u50cf\u52a0\u8f7d\u5230\u6211\u7684SCSI2SD\u201c\u5047\u201dCD-ROM\u9a71\u52a8\u5668\u4e2d\u3002\n\u60a8\u53ef\u80fd\u4f1a\u60f3\uff0c\u4e3a\u4ec0\u4e48\u6211\u6ca1\u6709\u4ece\u90a3\u65f6\u5f00\u59cb-\u5c06\u5b89\u88c5\u7a0b\u5e8f\u590d\u5236\u5230\u7f51\u7edc\u5b58\u50a8\u4e0d\u662f\u6709\u70b9\u592a\u590d\u6742\u4e86\u5417\uff1f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u3002\u5c06\u65b0\u7684\u5149\u76d8\u6620\u50cf\u590d\u5236\u5230SCSI2SD\u9700\u8981\uff1a\n\u4f7f\u7528\u914d\u7f6e\u7684CD\u90e8\u5206\u7684\u6b63\u786e\u504f\u79fb\u91cf\u7f16\u5199dd\u547d\u4ee4(\u5e0c\u671b\u6211\u5199\u4e0b\u6765\u4e86\uff01)\u3002\n\u8fd9\u4e00\u6b21\uff0c\u6211\u522b\u65e0\u9009\u62e9\uff01\u6240\u4ee5\u73b0\u5728\u662f\u6574\u4e2a\u7e41\u7410\u7684\u65f6\u95f4\u4e86\uff1a\n\u73b0\u5728\u662f\u5b89\u88c5\u5f00\u53d1\u5de5\u5177\u7684\u65f6\u5019\u4e86\uff0c\u5bf9\u5417\uff1f\u6211\u4e5f\u662f\u8fd9\u4e48\u60f3\u7684\uff01\u867d\u7136NEXT\u4e0d\u9002\u5408\u5728CD\u7684\u6839\u76ee\u5f55\u4e2d\u5305\u542b\u4efb\u4f55\u7c7b\u578b\u7684\u201c\u81ea\u8ff0\u201d\u6216\u201c\u5b89\u88c5\u201d\u6587\u6863\uff0c\u4f46\u662f/NextCD/Packages\u5b50\u76ee\u5f55\u4e2d\u7684\u4e00\u4e9b.pkg\u6587\u4ef6\u770b\u8d77\u6765\u5f88\u6709\u5e0c\u671b\uff1a\n\u6211\u4ee5\u8d85\u7ea7\u7528\u6237\u8eab\u4efd\u767b\u5f55\uff0c\u5f00\u59cb\u4f7f\u7528DeveloperTools.pkg\uff0c\u4e2d\u9014\u4f7f\u7528\u4e86\u2026\u3002\u6536\u5230\u9519\u8bef\uff1a\n\u5982\u679c\u4f7f\u7528\u8ba1\u7b97\u673a\u6559\u4f1a\u4e86\u6211\u4ec0\u4e48\uff0c\u90a3\u5c31\u662f\u201c\u6709\u65f6\u5982\u679c\u4f60\u518d\u8bd5\u4e00\u6b21\uff0c\u4e8b\u60c5\u5c31\u4f1a\u594f\u6548\u201d\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u4e86\u51e0\u6b21\u8fd9\u4e2a\u5b89\u88c5\u8fc7\u7a0b\uff0c\u90fd\u4ee5\u7c7b\u4f3c\u7684\u9519\u8bef\u544a\u7ec8\u3002\u8d77\u521d\uff0c\u6211\u4ee5\u4e3a\u6bcf\u6b21\u5b89\u88c5\u8fc7\u7a0b\u90fd\u4f1a\u66f4\u6df1\u5165\uff0c\u4f46\u6700\u7ec8\u6211\u610f\u8bc6\u5230\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u4e0a\u4e00\u6b21\u8fd0\u884c\u6210\u529f\u7684\u6587\u4ef6\u5c06\u662f\u4e0b\u4e00\u6b21\u8fd0\u884cCAT\uff1aWRITE ERROR\uff1aBAD ADDRESS\u7684\u6765\u6e90\u3002\u6211\u8bd5\u56fe\u6d88\u9664\u9519\u8bef\u7684\u6f5c\u5728\u539f\u56e0\uff1a\n\u6362\u7528\u5185\u5b58\u68d2(\u5047\u8bbe\u201c\u9519\u8bef\u5730\u5740\u201d\u610f\u5473\u7740\u5b83\u662fRAM\u95ee\u9898)\u3002\n\u5c1d\u8bd5\u4e0d\u540c\u7684SD\u5361(\u5047\u8bbe\u8fd9\u610f\u5473\u7740\u5199\u5165\u9519\u8bef\u6216\u5176\u4ed6\u539f\u56e0)\u3002\n\u4f46\u4f3c\u4e4e\u6ca1\u6709\u4e00\u4e2a\u80fd\u8d77\u5230\u4f5c\u7528\u3002\u600e\u4e48\u529e\u5462\uff1f\u6211\u51b3\u5b9a\u5c1d\u8bd5\u5c06CD\u7684\u5185\u5bb9\u590d\u5236\u5230\u6211\u7684NAS\uff0c\u7136\u540e\u4ece\u90a3\u91cc\u8fd0\u884c\u5b89\u88c5\u3002\n\u8fd9\u5728\u590d\u5236\u5c11\u6570\u6587\u4ef6\u65f6\u4e5f\u6709\u5931\u8d25\uff0c\u4f46\u6211\u80fd\u591f\u8bb0\u4e0b\u54ea\u4e9b\u6587\u4ef6\uff0c\u7136\u540e\u518d\u8bd5\u4e00\u6b21-\u6210\u529f\u4e86\uff01\n\u5728NextLibrary\u76ee\u5f55(\u5f00\u53d1\u4eba\u5458\u6587\u6863\u6240\u5728\u7684\u76ee\u5f55)\u6216\u5728\u7ebf\u76ee\u5f55\u4e2d\uff0c\u6211\u4f3c\u4e4e\u4e5f\u627e\u4e0d\u5230\u4efb\u4f55\u8fd9\u6837\u7684\u4e1c\u897f\uff01\u5728\u4e3a\u4e13\u4e1a\u4eba\u58eb\u5236\u4f5c\u5de5\u5177\u65f6\uff0c\u201c\u7528\u6237\u53cb\u597d\u6027\u201d\u4e0d\u4e00\u5b9a\u662f\u4e0b\u4e00\u4e2a\u4eba\u9996\u5148\u60f3\u5230\u7684\u3002\u6211\u786e\u5b9e\u76f8\u4fe1\u5b83\u4e0e\u8fd9\u6837\u7684\u6587\u6863\u6253\u5305\u5728\u4e00\u8d77(\u5728\u7eb8\u9762\u4e0a)\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u51d1\u5408\u4f7f\u7528\u6211\u4eec\u7684\u6279\u5224\u6027\u601d\u7ef4\u6280\u80fd-\u5728/NextCD/Packages\u5b50\u76ee\u5f55\u4e2d\u6709\u53ef\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u3002\u6240\u6709\u4e1c\u897f\u88ab\u5206\u6210\u56db\u4e2a\u5305\uff1a\n\u6211\u4ee5root\u8eab\u4efd\u767b\u5f55\uff0c\u4eceDeveloperTools.pkg\u5f00\u59cb\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c\u6240\u6709\u5176\u4ed6\u64cd\u4f5c\u3002\u5b89\u88c5\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u7684\u8fc7\u7a0b\u4e0e\u6211\u4e4b\u524d\u505a\u7684\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u7684\u5b89\u88c5\u8fc7\u7a0b\u662f\u76f8\u540c\u7684-\u4f3c\u4e4e\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u4f7f\u7528\u6807\u51c6\u7684Insteller.app\u8fc7\u7a0b\u3002\n\u8bf4\u5230\u8865\u4e01\uff0c\u8fd8\u6709\u4e00\u4e2a\u9002\u7528\u4e8e\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u7684\u8865\u4e01\u3002\u6700\u65b0\u7684\u662fNextStep3.3\u5f00\u53d1\u8005\u8865\u4e012(VS NextStep\u7528\u6237\u8f6f\u4ef6\u7684\u8865\u4e013)\uff0c\u82f9\u679c\u57281999\u5e74\u6536\u8d2d\u4e86Next\u4e4b\u540e\uff0c\u518d\u6b21\u63a8\u51fa\u4e86NextStep3.3\u5f00\u53d1\u8005\u8865\u4e012(VS NextStep\u7528\u6237\u8f6f\u4ef6\u7684\u8865\u4e013)\u3002nextcomputer s.org\u7f51\u7ad9\u4e0a\u6709\u8be5\u8865\u4e01\u7a0b\u5e8f\u7684\u526f\u672c\u3002\n\u5728\u52aa\u529b\u5b89\u88c5NextStep Developer\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4ec0\u4e48\uff1f\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55NextDeveloper\u4e2d\u7684\u4e00\u4e2a\u65b0\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3001\u6f14\u793a\u3001\u793a\u4f8b\u3001\u5404\u79cdGPL\u8981\u6c42\u7684\u6e90\u4ee3\u7801\u3001\u7cfb\u7edf\u5e93\u7684\u5934\u6587\u4ef6\u548c\u6587\u6863\u3002\u5176\u7ed3\u6784(\u4e0d\u51fa\u6240\u6599)\u4e0eOSX\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u7684\u65e7\u7248\u672c/Developer\u76ee\u5f55\u975e\u5e38\u76f8\u4f3c\u3002\u4e0d\u8fc7\uff0c\u76f8\u4f3c\u4e4b\u5904\u8fd8\u4e0d\u6b62\u4e8e\u6b64-\u6709\u51e0\u4e2a\u5de5\u5177\uff0c\u5982Interface Builder\uff0c\u5bf9\u73b0\u4ee3\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458(\u5982Interface Builder)\u5c06\u76f8\u5f53\u719f\u6089\uff1a\nProjectBuilder\uff0c\u7528\u4e8e\u7ba1\u7406\u6e90\u6587\u4ef6\u548c\u4f9d\u8d56\u9879\u7684\u5de5\u5177\u3002\u5b83\u540e\u6765\u53d1\u5c55\u6210\u4e3aIDE\uff0c\u5e76\u6700\u7ec8\u88ab\u91cd\u547d\u540d\u4e3aXCode\u3002\n\u6211\u7279\u522b\u559c\u6b22\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f-\u5b83\u4eec\u662f\u9884\u5148\u6784\u5efa\u7684\uff0c\u53ef\u4ee5\u5728Demos\u76ee\u5f55\u4e2d\u8fd0\u884c\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u6e90\u4ee3\u7801\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5982\u4f55\u4e3aNextStep\u5f00\u53d1\u7684\u793a\u4f8b\u3002\u56fd\u9645\u8c61\u68cb\u6e38\u620f\u5df2\u7ecf\u5728\u73b0\u4ee3OSX\u4e2d\u5e78\u5b58\u4e0b\u6765\uff1a\u4e00\u4e9b\u8ba9\u6211\u5370\u8c61\u6df1\u523b\u7684\u6f14\u793a\u662f\uff1a\nBoinkOut\u662f\u7ecf\u5178\u96c5\u8fbe\u5229\u8857\u673a\u6e38\u620fBreakout\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u53c2\u4e0e\u4e86\u8fd9\u6b3e\u6e38\u620f\u7684\u610f\u4e49\u4ee4\u4eba\u6000\u7591\u3002\nFileMerge\uff0c\u4e00\u4e2a\u53ef\u89c6\u5316\u7684\u201cdiff\u201d\u5de5\u5177\uff0c\u4f5c\u4e3a\u82f9\u679c\u5f00\u53d1\u5de5\u5177\u7684\u4e00\u90e8\u5206\u4e00\u76f4\u5b58\u5728\u5230\u4eca\u5929\u3002\n\u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u771f\u7684\u5f88\u6b23\u8d4f\u8fd9\u91cc\u5305\u542b\u7684\u6587\u6863\u548c\u5de5\u5177\u7684\u6df1\u5ea6-\u57281995\u5e74\uff0c\u4e92\u8054\u7f51\u4e0a\u51e0\u4e4e\u6ca1\u6709\u53ef\u7528\u7684\u53c2\u8003\u548c\u6559\u7a0b\u4fe1\u606f\u7684\u6df1\u5ea6\uff0c\u6240\u4ee5\u5c06\u5176\u4e0e\u5de5\u5177\u6346\u7ed1\u5728\u4e00\u8d77\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u8bdd\u53c8\u8bf4\u56de\u6765\uff0c\u5bf9\u4e8e\u6210\u672c\u6ea2\u4ef7(\u6839\u636eComputerworld\u7684\u6570\u636e\uff0cNextStep\u5f00\u53d1\u4eba\u5458\u4e3a4999\u7f8e\u5143\uff0c\u800cNextStep\u7528\u6237\u4e3a799\u7f8e\u5143)\uff0c\u6700\u597d\u662f\u5c3d\u53ef\u80fd\u6df1\uff01\u6211\u5f88\u5174\u594b\u80fd\u6f5c\u5165\u5176\u4e2d\uff0c\u5e76\u5c1d\u8bd5\u5728\u672a\u6765\u505a\u51fa\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4e86\u89e3\u5b83\u5728\u5f53\u65f6\u7684\u4f7f\u7528\u60c5\u51b5\u3002\n\u8981\u5236\u9020\u4e00\u53f0\u53ef\u7528\u7684\u673a\u5668\uff0c\u6211\u8fd8\u9700\u8981\u4ec0\u4e48\uff1f\u529e\u516c\u5de5\u5177\u600e\u4e48\u6837\uff1f\u706f\u5854\u8bbe\u8ba1\u516c\u53f8(LighTower Design)\u662fNextStep\u4e13\u6ce8\u4e8e\u8fd9\u4e00\u9886\u57df\u7684\u4e00\u5bb6\u8f6f\u4ef6\u516c\u53f8\u3002\u4ed6\u4eec\u7684\u5e7f\u6cdb\u8f6f\u4ef6\u5728\u5f53\u65f6\u4f3c\u4e4e\u5f88\u53d7\u6b22\u8fce\uff0c\u5f53\u4ed6\u4eec\u57281996\u5e74\u88abSun Microsystems\u6536\u8d2d\u65f6\uff0c\u4ed6\u4eec\u5728\u7f51\u4e0a\u514d\u8d39\u53d1\u5e03\u4e86\u6240\u6709\u4e0b\u4e00\u4e2a\u8f6f\u4ef6\u7684\u5b89\u88c5\u7a0b\u5e8f\u548c\u4ea7\u54c1\u5bc6\u94a5\u3002\u518d\u8bf4\u4e00\u6b21\uff0cnextcomputer s.org\u7ad9\u70b9\u7ef4\u62a4\u7740\u6240\u6709\u8f6f\u4ef6\u7684\u955c\u50cf\uff0c\u6240\u4ee5\u6211\u4e0b\u8f7d\u4e86\u5b83\u6765\u5b89\u88c5\u5728HP712\u4e0a\uff01\n\u6709\u4e9b\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u4ee5\u201c\u56db\u80d6\u201d\u7684\u5f62\u5f0f\u53d1\u5e03\u4e86\u4ed6\u4eec\u7684\u8f6f\u4ef6--\u5305\u542bNextStep\u53ef\u80fd\u8fd0\u884c\u7684\u6240\u6709\u56db\u4e2a\u5e73\u53f0\u7684\u4ee3\u7801\u3002\u7531\u4e8ePA-RISC\u5e73\u53f0\u53ea\u53d7NextStep\u7248\u672c3.3\u652f\u6301\uff0c\u6211\u6000\u7591NextStep\u7684\u5f88\u591a\u8f6f\u4ef6\u4ece\u672a\u53d1\u5e03\u8fc7\u3002\u4e0d\u8fc7\uff0c\u4e0d\u662fLightStep\u7684\uff01\nParasheet\uff0c\u7528\u4e8e\u7535\u5b50\u8868\u683c(\u4e0e\u5176\u529f\u80fd\u66f4\u5f3a\u5927\u7684Quantrix\u8f6f\u4ef6\u76f8\u6bd4\uff0cLighTower\u79f0\u5176\u4e3a\u201c\u4f20\u7edf\u7684\u201d\u7535\u5b50\u8868\u683c)\u3002\nConcurrence\uff0c\u4e00\u4e2a\u6f14\u793a\u7a0b\u5e8f(\u6839\u636e\u5176\u6587\u6863\uff0c\u8bbe\u8ba1\u7528\u4e8e\u5236\u4f5c\u5c4f\u5e55\u6f14\u793a\u548c\u6253\u5370\u523035 mm\u5e7b\u706f\u7247)\u3002\nOmniWeb\u662f\u7531Omni Group\u7f16\u5199\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\uff0c\u5f53\u65f6\u7531\u706f\u5854\u51fa\u7248\u3002\u66f4\u65b0\u7684OSX\u7248\u672c\u4ecd\u7136\u53ef\u7528\u3002\nEquationBuilder\uff0c\u7528\u4e8e\u6392\u7248\u66f4\u590d\u6742\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002NextStep\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5305\u542bTeX\uff0c\u4f46EquationBuilder\u80af\u5b9a\u66f4\u52a0\u7528\u6237\u53cb\u597d\u3002\n\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5e7f\u6cdb\u7684\u8303\u56f4-\u706f\u5854\u7684\u5e94\u7528\u7a0b\u5e8f\u5f88\u597d\u5730\u586b\u5199\u4e86\u6211\u7684NextStep HP712\u3002\n\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u5b8c\u6210\u8fd9\u7bc7\u6587\u7ae0(\u548c\u89c6\u9891)\uff0c\u6211\u4e0d\u60f3\u505a\u51fa\u4efb\u4f55\u4fdd\u8bc1\uff0c\u8fd9\u4e2a\u7cfb\u5217\u7684\u4e0b\u4e00\u7bc7\u4f1a\u66f4\u5feb\u3002\u8fd9\u4e2a\u8bbe\u7f6e\u7684\u4e0b\u4e00\u4e2a\u76ee\u6807\u662f\u7528\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u8fc7\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u53ef\u80fd\u4f1a\u7528\u5176\u4ed6\u673a\u5668\u505a\u4e00\u4e9b\u9879\u76ee\u6765\u6ce8\u5165\u4e00\u4e9b\u53d8\u5316\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u5f88\u4e50\u610f\u542c\u542c\u60a8\u5173\u4e8e\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u7684\u6545\u4e8b\uff01\u60a8\u662f\u5426\u4f7f\u7528NeXT\u7684\u5f00\u53d1\u5de5\u5177\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff1f\u6216\u8005\u7528\u706f\u5854\u7684\u751f\u4ea7\u529b\u5e94\u7528\u7a0b\u5e8f\u505a\u751f\u610f\uff1f\u6211\u5f88\u60f3\u542c\u542c\u8fd9\u4ef6\u4e8b\uff01\u8bf7\u968f\u65f6\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u5730\u5740\u662f\uff1asophe@piczabox.computer\uff01", "note_en": "In the  last post of this series, I set up NeXTstep on an HP PA-RISC  workstation. Today, I\u2019m going to get down to business: configure networking, install system patches, outfit it with developer tools, and install some useful software!\n As with the previous post, I\u2019ve also made a YouTube video that covers roughly the same topics! If video is your speed, I\u2019d love for you to check it out!\n  My goal is to end up with a capable machine that I can use like it might have been when new, and learn from the experience.\n  While it is possible to transfer files from SCSI drives (or even floppies!),  getting a pizzabox on my home network makes loading software much easier.I first tried out NeXTstep on this workstation a couple years ago. The OS installed OK, but I ran in to trouble with networking. I was initially optimistic that I would figure it out:\n I think I&#39;m done for the day but soon if I can fight with NFS and NetInfo (lolololol) I can get screenshots off it and software on\n\u2014 cron mom (@sophaskins)  February 10, 2018\n  Hang on a second: NeXTstep is a workstation-focused Unix operating system from the 80s-90s -  how could it be difficult to get it on a network? The answer is a thing called NetInfo.\n In a surprise to exactly no one, NeXTstep, being from a company founded by Steve Jobs, had it\u2019s own NeXT-only ecosystem of tools that fit together amazingly well.  The cornerstone of NeXTstep networking was NetInfo. If you had a collection of NeXT computers on a network, NetInfo gave you a system to:\n  which is to say: NetInfo is a \u201cdirectory services\u201d system. That\u2019s all well and good - in the early 1990s that space had many competitors and a \u201cright path\u201d hadn\u2019t yet been established, but\u2026 I don\u2019t  want my machine to be part of a directory, **I just want it to be on my existing TCP/IP network.\n      Select  how we\u2019ll integrate with an existing NetInfo network (since I don\u2019t intend to interact with one at all, I have to choose \u201cProvide the services specified below\u201d, a sort of catch-all)\n Specify  my hostname and IP address - if I were connecting to an existing NetInfo network, I might not have to do this. \u201cNetwork Options\u201d lets me set more granular IP settings like netmask and gateway; \u201cNetInfo Options\u201d lets me choose how to integrate with existing domains (if relevant).\n Setup  network services: for my setup I don\u2019t really want  any of these things, but as a standalone NeXTstep system, I do have to \u201cMaintain the master copy of network administrative data\u201d (aka, the NetInfo database).\n  So far, this feels like a really good start, but will it let me fetch files from an NFS share?\n  I immediately tried connecting to my NAS over NFS - after all, the main point of setting up networking was making it easier to transfer files. Unfortunately, it didn\u2019t work - I could set up the NFS mount with NFSMananger (more on how to do that later), but the mountpoint would always be empty. Here you can see me attempting to reach it by IP address:\n  So I had  some sort of problem. To narrow down potential issues, I ran a few tests:\n attempting to ping my NAS from the workstation - this turned out to not work because NeXTstep doesn\u2019t seem to have any  ping command. There are probably ways to accomplish something equivalent with the tools it  does have, but I just moved on\n attempting to ping the workstation from elsewhere on my network. This worked - I was able to ping it from my laptop!\n attempting to connect to my NAS with FTP - one of the few network tools NeXTstep  does seem to have is FTP, so I gave it a shot. To my surprise, this works!\n  It did not work via hostname, though, which points to at least some trouble with DNS. Taking a deeper look at the \u201cNeXTstep 3.3 Network andSystem Administration Manual\u201d section on \u201c NEXTSTEP Computers in a Mixed Network\u201d (which I probably should have done earlier) shows that  I need to manually configure DNS. There\u2019s no GUI options for it, you just have to write out an  /etc/resolv.conf:\n   But still couldn\u2019t use NFS. What gives? I have network connectivity in both directions, and DNS is also now working! I believe this is as far as I got a few years ago, and man I was FRUSTRATED.\n     Can\u2019t get\u2026 my address? Doesn\u2019t the computer know its own address? While I don\u2019t know  why it has to do this (googling has provided me a couple of  quick asides mentioning it, but not much detail),  mounting an NFS server requires working  reverse DNS for your IP.\n I do have a real-ish DNS server for my home network, and it populates based on DHCP leases and IP reservations. This workstation, though, was just  using an IP that I habitually hardcode for pizzaboxes (192.168.1.200). I double-checked the DHCP server config, and it was indeed set up with a different host for that IP, and not set up at all for this hostname. I replaced that entry with one for  hp712 at  192.168.1.200 for the MAC address of my workstation, and crossed my fingers.\n    After all that rigamarole, the right way to configure a remote NFS mount goes through the NFSManager.app. While NFSManager lets you configure both \u201cexports\u201d (local directories I share with others) and \u201cimports\u201d (remote directories I want to mount locally).\n  All I have to is click \u201cAdd\u201d and fill in the details for my NAS:\n  That\u2019s it? A lot of struggle got me to this point, but  finally I can transfer files.\n  The first order of business is to  run system updates. NeXTstep 3.3 was released in mid-1995, and it had three patch updates: the  first at the end of 1995, and the second and  third in late 1999. Since NeXT were acquired by Apple in 1997, this patch was made by Apple to address Y2k bugs and other longstanding issues. Thanks, Apple!   Thapple.\n The third patch is a cumulative update, so that should be all I need. Nextcomputers.org generously  hosts the patch for download. Because I\u2019m using an HP PA-RISC machine, I need  NS33RISCUserPatch3.tar. System updates need to be installed as the  root user, and if you run them as  me (the default user) NeXTstep doesn\u2019t prompt to escalate privilges, it just gives an error. Thus, I need to log in as  root directly. In order to do that, I need to give the  me user a password so the system will stop automatically logging in at boot (giving me a chance to log in as  root). To set a password, you go to Preferences.app and navigate to the lock icon.\n  After the next reboot, I then get the login screen (instead of automatically going to the desktop):\n  By default, the  root password is blank (you can of course fix this after login in the same way as setting a password for the  me account). I navigated to where I had put the patch tarball on my NAS, copied it to the HP 712, and unarchived it.\n    Clicking \u201cInstall\u201d prompts me to make sure I\u2019m choosing the right architecture (in my case, PA-RISC), runs a program to determine compatibility, and runs the update.\n  After a reboot, I\u2019m on the most recent version of NeXTstep for PA-RISC, and ready for the year 2000!\n  What\u2019s next for making a usable system? Developer tools!  NeXTstep came on two sets of discs - \u201cUser\u201d for the main operating system, and the optional \u201cDeveloper\u201d disc with compilers, GUI building tools, libraries, and documentation. While there were separate versions of NeXTstep User for CISC (m68k and i386) and RISC (PA-RISC and SPARC) platforms, the Developer disc is \u201cquad-fat\u201d - it contains binaries for all four platforms. I grabbed the Developer disc image from  the Internet Archive.\n Were this been an actual ISO image, I might have mounted it on my laptop and copied the files to my NAS to make the installer available to the workstation; unfortunately, it\u2019s not. What format is it? The first few bytes of a disk image usually can help figure that out:\n head -c 16 nextstepdeveloper3.3.iso | hexdump0000000 64 6c 56 33 00 00 00 00 00 00 00 00 4e 45 58 540000010\n When trying to find \u201cmagic numbers\u201d like this, I usually check out the  NetBSD sources. Since NetBSD focuses on compatibility with the widest possible set of hardware, they often have compatibility for far-out things. As luck would have it, those bytes  do show up in   sys/sys/bootblock.h:  0x646c5633 is  NEXT68K_LABEL_CD_V3.  So, this is a non-standard format specific to NeXT. There\u2019s  some code that shows how to interact with this kind of disc label - maybe in the future I could put together some code to read the CD like I did for  SGI EFS? For now, though, I\u2019m going to try loading the disc image in to my SCSI2SD \u201cfake\u201d CD-ROM drive.\n You might wonder why I didn\u2019t  start at that point - isn\u2019t copying installers to a network store a bit overcomplicated? In this case, no. Copying a new disc image to the SCSI2SD requires:\n writing a  dd command with the correct offset for where the CD portion of my configuration is (hope I wrote it down!)\n This time, I have no other option! So it\u2019s time for the whole rigamarole:\n  So it\u2019s time to install dev tools, right? I had thought so! While NeXT didn\u2019t see fit to including any sort of \u201cReadme\u201d or \u201cInstallation\u201d document in the root of the CD, there are some  .pkg files in the  /NextCD/Packages subdirectory that look promising:\n  Signed in as  root, I started with DeveloperTools.pkg, got mid-way through, and\u2026got an error:\n  If using computers has taught me anything, it\u2019s that \u201csometimes if you try it again things work\u201d, so I tried this install process several times,  all ending in similar errors. At first I thought that it was making it further in the install process each time, but eventually I realized that wasn\u2019t the case. Files that had succeeded in a previous run would be the source of  cat: write error: Bad address on the next. I tried to eliminate potential causes of the error:\n swapping around RAM sticks (on the assumption \u201cBad address\u201d means it is a RAM problem)\n trying a different SD card (on the assumption it means an error writing or something)\n but none seemed to make a difference. What to do? I decided to try  copying the contents of the CD to my NAS, and then running the install from there.\n This  also had failures during the copying of a handful of files, but I was able to note down which ones and try each again - with success!\n  and I also can\u2019t seem to find any such overall thing in the NextLibrary directory (where the developer docs live) or online!  \u201cUser friendliness\u201d is something that wasn\u2019t necessarily  first on NeXTs mind when making tools for professionals. I do believe that it was packaged with such a document (on paper), but we can make do with our critical thinking skills - there are installable packages in the  /NextCD/Packages subdirectory. Things are split across four packages:\n  Signed in as root, I started with DeveloperTools.pkg and proceeded to do all of the others. The process of installing each package was identical to the installation process of OS update I did earlier - seems reasonable, since they both use the standard Installer.app process.\n Speaking of patches, there is  also a patch for the developer tools available. The most recent is the NeXTstep 3.3 Developer Patch 2 (vs patch 3 for the NeXTstep User software), and once again was made by Apple in 1999 after they acquired NeXT. The  nextcomputers.org website hosts a copy of the patch.\n   After going through the effort to install NeXTstep Developer, what do we get? A new directory in the filesystem root,  NextDeveloper containing some apps, demos, examples, various bits of GPL-required source code, headers for system libraries, and documentation. The structure is (unsurprisingly) rather similar to older versions of the OSX developer tools\u2019  /Developer directory. The similarities don\u2019t end there, though -  several of the tools, like Interface Builder, will be rather familiar to modern Apple-ecosystem devs, like Interface Builder:\n   ProjectBuilder, a tool for managing source files and dependencies. that later grew in to an IDE and was eventually renamed XCode\n  I particularly love the demo apps - they\u2019re pre-built and ready for running in the  Demos directory, but their source is also available as examples of how to develop for NeXTstep.  The Chess game has survived in to modern OSX: Some demos that stood out to me were:\n BoinkOut, a version of  Breakout, the classic Atari arcade game that Steve Jobs had dubiously meaningful involvement with\n FileMerge, a visual \u201cdiff\u201d tool that survives today as part of Apple\u2019s dev tools.\n  As a developer I really appreciate the depth of documentation and tooling included here - in 1995 there wasn\u2019t nearly the depth of reference and tutorial information available on the internet, so bundling it with the tooling was crucial. Then again, for the cost premium ($4999 for NeXTstep Developer, vs $799 for NeXTstep User, according to  Computerworld) it had better have been as deep as possible!  I\u2019m excited to dive in and try to make some applications in the future to get a sense of what it was like to use at the time.\n  What else do I need to make a usable machine? How about some office productivity tools? One software house who focused on that sector for NeXTstep was  Lighthouse Design. Their wide range of software seems to have been popular at the time, and (mercifully) when they were acquired by Sun Microsystems in 1996,  they released installers and product keys for all their NeXT software  for free online. Yet again, the  nextcomputers.org site maintains a mirror of all the software, so I\u2019ve downloaded it to install on the HP 712!\n Somewhat importantly, they seem to have published their software as \u201cquad-fat\u201d - containing code for all four platforms that NeXTstep might run on. Since the PA-RISC platform was only supported by NeXTstep version 3.3, I suspect that much software for NeXTstep was never released for it. Not Lightstep\u2019s, though!\n  ParaSheet, for spreadsheets (Lighthouse calls it a \u201ctraditional\u201d spreadsheet in comparison to their more powerful Quantrix software)\n Concurrence, a presentation program (according to its docs, designed for producing both on-screen presentations and printing to 35mm slides))\n   OmniWeb, a web browser written by the  Omni Group,  published at the time by Lighthouse. Newer OSX versions are  still available.\n EquationBuilder, for typesetting more complex mathematical expressions. NeXTstep includes TeX with the OS, but EquationBuilder is certainly more user-friendly.\n     As you can see, it\u2019s a quite wide range - Lighthouse\u2019s apps fill out my NeXTstep HP 712 nicely.\n  It\u2019s taken me a long time to get this post (and video) done, and I don\u2019t want to make any promises that the next one in this series will be any faster. My next goal with this setup is to write an application with the developer tools. In the mean time, though, I\u2019ll probably do some projects with other machines to inject a little variety.\n As ever, I\u2019d love to hear your stories about using these tools! Did you build apps using NeXT\u2019s developer tools? Or maybe run a business with Lighthouse\u2019s productivity apps? I\u2019d love to hear about it! Feel free to email me at  sophie@pizzabox.computer!", "posttime": "2020-06-27 16:06:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u83b7\u53d6,nextstep", "title": "\u5173\u4e8eHP 712\u7684\u4e0b\u4e00\u6b65\uff0c\u7b2c2\u90e8\u5206\uff1a\u83b7\u53d6\u8f6f\u4ef6", "title_en": "NeXTSTEP on the HP 712 Part 2: Getting Software", "transed": 1, "url": "https://blog.pizzabox.computer/posts/hp712-nextstep-part-2/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u83b7\u53d6", "nextstep"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008537, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Pont\u662fMindware Games\u7684\u68cb\u7c7b\u6e38\u620fQwirkle\u7684\u5728\u7ebf\u5b9e\u73b0\uff0c\u5b83\u662f\u4e3a\u6211\u7684\u7236\u6bcd\u5199\u7684\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u65b0\u51a0\u80ba\u708e\u5446\u5728\u5bb6\u91cc\u7684\u65f6\u4ee3\u548c\u670b\u53cb\u548c\u5bb6\u4eba\u4e00\u8d77\u73a9\u3002\n\u6e38\u620f\u88ab\u5206\u6210\u51e0\u4e2a\u623f\u95f4\uff0c\u7528\u4e09\u4e2a\u5b57\u7684\u4ee3\u7801(\u4e0a\u56fe\u4e2d\u7684\u559c\u6012\u65e0\u5e38\u7684\u5f62\u72b6)\u6765\u6807\u8bc6\u3002\u5728\u6bcf\u4e2a\u623f\u95f4\u91cc\uff0c\u6e38\u620f\u5206\u53d1\u68cb\u5b50\uff0c\u6267\u884c\u6e38\u620f\u89c4\u5219\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u672c\u5730\u804a\u5929\u7a97\u53e3\u3002\n\u4e0d\u540c\u5bfb\u5e38\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u7f51\u7edc\u7684\u591a\u4eba\u6e38\u620f\uff0c\u6ca1\u6709\u4efb\u4f55Javascript\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u662f\u7528Rust\u7f16\u5199\u7684\uff0c\u5b83\u88ab\u7f16\u8bd1\u6210WebAssembly\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u3002(\u6709\u4e00\u4e2aJavascript\u586b\u5145\u7a0b\u5e8f\u6765\u52a0\u8f7dWebAssembly\u6a21\u5757\uff0c\u4f46\u6211\u4e0d\u9700\u8981\u81ea\u5df1\u7f16\u5199\u5b83)\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4e0d\u662f\u4e00\u540dWeb\u5f00\u53d1\u4eba\u5458\uff0c\u56e0\u6b64\u5bf9\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5947\u602a\u7684\u5c40\u5916\u4eba\u67b6\u6784\u3002\u4ee5\u4e0b\u662f\u8be5\u7cfb\u7edf\u7684\u5916\u89c2\uff1a\n\u7cfb\u7edf\u5bf9\u8bc1\u4e66\u4f7f\u7528\u4e86let\u7684\u52a0\u5bc6\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u9759\u6001\u8d44\u4ea7\u548cWebSocket\u901a\u4fe1\u90fd\u662f\u52a0\u5bc6\u7684\u3002\u6e38\u620f\u670d\u52a1\u5668\u4e0d\u80fd\u4e0eNginx\u4ee3\u7406\u5b89\u5168\u901a\u4fe1\uff0c\u4f46\u5982\u679c\u6709\u4eba\u5728\u670d\u52a1\u5668\u4e0a\u89c2\u770b\uff0c\u6211\u5c31\u4f1a\u9047\u5230\u66f4\u5927\u7684\u95ee\u9898\u3002\nWASM\u6346\u7ed1\u5305\u548cPONT-SERVER\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u662f\u7528Rust\u7f16\u5199\u5e76\u5728PONT\u5b58\u50a8\u5e93\u4e2d\u7ba1\u7406\u7684\uff0c\u5b83\u4eec\u90fd\u4f9d\u8d56\u4e8ePONT-COMMON\uff0c\u5b83\u5b9a\u4e49\u4e86\u6e38\u620f\u7684\u57fa\u672c\u7c7b\u578b\u548c\u903b\u8f91(\u4f8b\u5982\uff0c\u8fd9\u6837\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u68c0\u67e5\u79fb\u52a8\u662f\u5426\u5408\u6cd5)\u3002\n\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u901a\u8fc7WebSocket\u8fdb\u884c\u901a\u4fe1\uff0c\u6d88\u606f\u5728PONT-COMMON\u4e2d\u88ab\u5f3a\u7c7b\u578b\u5316\u4e3a\u679a\u4e3e\uff0c\u4f7f\u7528Serde\u5e8f\u5217\u5316\uff0c\u7136\u540e\u6253\u5305\u6210\u4e8c\u8fdb\u5236WebSocket\u6d88\u606f\u4f5c\u4e3a\u4e8c\u8fdb\u5236WebSocket\u6d88\u606f\u53d1\u9001\u3002\n\u8fd9\u4e24\u4e2a\u5927\u56fd\u4e4b\u95f4\u6b63\u5728\u8fdb\u884c\u4e00\u573a\u975e\u5e38\u793c\u8c8c\u7684\u51b7\u6218(\u4e0d\u76f8\u5bb9\uff1f)\u3002\u8fd0\u884c\u65f6\uff0c\u5305\u53ea\u80fd\u5728\u5176\u4e2d\u4e00\u4e2a\u4e2d\u5de5\u4f5c\nFutures\u3001std\uff1a\uff1aFuture\u548cFutures_util\u4e4b\u95f4\u7684\u4e00\u822c\u6df7\u6dc6(Google\u641c\u7d22\u5c06\u4f7f\u60a8\u8fdb\u5165\u6587\u6863\u7684\u968f\u673a\u7248\u672c\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u52a0\u5267\u4e86\u8fd9\u4e00\u60c5\u51b5)\u3002\n\u6211\u6700\u7ec8\u4f7f\u7528\u4e86Smol\u8fd0\u884c\u65f6\uff0c\u56e0\u4e3a\u5b83\u7684\u4f9d\u8d56\u6027\u76f8\u5bf9\u8f83\u5c11\uff0c\u800c\u4e14\u6211\u610f\u8bc6\u5230\u5b83\u4e0d\u4f1a\u8bd5\u56fe\u62e5\u6709\u6574\u4e2a\u5f02\u6b65\u4e16\u754c(\u4e0d\u50cfTokio\u548cAsync-STD)\u3002\n\u8de8\u8fc7\u8fd9\u4e9b\u969c\u788d\u540e\uff0c\u670d\u52a1\u5668\u67b6\u6784\u76f8\u5bf9\u7b80\u5355\uff0c\u4e00\u7ec4\u72ec\u7acb\u7684\u4efb\u52a1\u5f02\u6b65\u8fd0\u884c\uff0c\u901a\u8fc7WebSocket\u4e0e\u5916\u90e8\u901a\u4fe1\uff0c\u5185\u90e8\u901a\u8fc7\u65e0\u9650\u7684MPSC\u961f\u5217\u8fdb\u884c\u901a\u4fe1\u3002\n\u8fd9\u91cc\u662f\u4e00\u4e2a\u670d\u52a1\u5668\u8fd0\u884c\u4e00\u4e2a\u6e38\u620f(\u6709\u4e24\u4e2a\u73a9\u5bb6)\u7684\u793a\u4f8b\uff0c\u5916\u52a0\u4e00\u4e2a\u521a\u521a\u8fde\u63a5\u7684\u65b0\u5ba2\u6237\u7aef\u3002\u6bcf\u4e2a\u77e9\u5f62\u8868\u793a\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\uff1a\n\u6bcf\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\uff0c\u5b83\u5728WebSocket\u8fde\u63a5\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5185\u90e8\u961f\u5217\u4e4b\u95f4\u4f20\u9012\u6d88\u606f\u3002\n\u8fd9\u4e9b\u4efb\u52a1\u6bcf\u4e2a\u90fd\u6620\u5c04\u5230\u4e00\u4e2aSmol\uff1a\uff1aTask\u3002(\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u7684\u4efb\u52a1\u540c\u65f6\u5904\u7406\u73a9\u5bb6\u901a\u4fe1\u548c\u8fd0\u884c\u623f\u95f4\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u4eec\u5728\u4e0a\u56fe\u4e2d\u90fd\u662f\u84dd\u8272\u7684\u539f\u56e0)\u3002\n\u670d\u52a1\u5668\u7f16\u8bd1\u62105MB\u7684\u9759\u6001\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6574\u4e2a\u7cfb\u7edf\u6258\u7ba1\u5728Digital Ocean\u63d0\u4f9b\u7684\u6700\u5c0f\u865a\u62df\u673a\u4e0a\uff0c\u8fd9\u662f\u4e00\u53f0\u6bcf\u67085\u7f8e\u5143\u7684\u673a\u5668\u3002\u6211\u671f\u5f85\u7740\u4e0d\u53ef\u907f\u514d\u7684\u9ed1\u5ba2\u65b0\u95fbDDOS\uff0c\u5728\u90a3\u91cc\u6211\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u53ef\u6269\u5c55\u6027\uff01\n\u5ba2\u6237\u7aef\u662f2000\u884c\u65e0\u6846\u67b6\u7684\u5174\u594b\uff0c\u5b83\u4f7f\u7528\u72b6\u6001\u673a\u6a21\u5f0f\u6765\u8868\u793a\u6e38\u620f\u7684\u6d41\u7a0b\uff0c\u63a5\u53d7\u6765\u81ea\u670d\u52a1\u5668\u7684\u6d88\u606f\uff0c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0\u72b6\u6001\uff1a\u4f8b\u5982\uff0c\u9876\u5c42\u72b6\u6001\u4ece\u8fde\u63a5\u5230\u521b\u5efa\u6216\u52a0\u5165\u5230\u73a9\u3002\n\u6e38\u620f\u677f\u88ab\u8868\u793a\u4e3a\u4e00\u4e2aSVG\uff1b\u5176\u4ed6\u4e00\u5207\u90fd\u662f\u6807\u51c6\u7684HTML\u5143\u7d20\u3002\u5b9e\u9645\u4e0a\uff0c\u6574\u4e2aUI\u90fd\u662f\u5728index.htmland\u4e2d\u6309\u9700\u9884\u6784\u5efa\u7684\u3002\n\u5ba2\u6237\u6709\u70b9\u7cbe\u96d5\u7ec6\u7422\uff1a\u68cb\u5b50\u5728\u68cb\u76d8\u4e0a\u79fb\u52a8\u65f6\u4f1a\u6709\u52a8\u753b\u6548\u679c\uff0c\u8fd8\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u8272\u76f2\u6a21\u5f0f\uff0c\u5b83\u4f1a\u6dfb\u52a0\u89d2\u843d\u6807\u8bb0\u6765\u6307\u793a\u989c\u8272\u3002\n\u6211\u4f7f\u7528\u76f4\u63a5\u7684DOM\u64cd\u4f5c(\u4eceweb-sys\u673a\u7bb1)\u6765\u63a7\u5236\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7ec3\u4e60\u8ba9\u6211\u9886\u7565\u4e86\u865a\u62dfDOM\u7684\u7528\u5904\uff0c\u4f46\u6211\u4e0d\u60f3\u5f15\u5165\u6846\u67b6\u7684\u590d\u6742\u6027\u3002(Svelte\u662f\u5426\u6709Rust+wasm\u7248\u672c\uff1f)\u3002\n\u5bf9\u4e8e\u90e8\u7f72\uff0c\u6211\u4f7f\u7528wasm-pack\uff0c\u5e76\u4ece\u4e0e\u5176\u4ed6\u9759\u6001\u8d44\u4ea7\u76f8\u540c\u7684\u670d\u52a1\u5668\u4e0a\u63d0\u4f9b\u751f\u6210\u7684wasm blob\u3002\n\u5ba2\u6237\u7aef\u9762\u4e34\u7684\u4e3b\u8981\u6311\u6218(\u5f53\u7136)\u662f\u5904\u7406\u8de8\u6d4f\u89c8\u5668\u517c\u5bb9\u6027\uff1a\u7279\u522b\u662fSafari\uff0c\u5b83\u652f\u6301\u7684\u529f\u80fd\u8f83\u5c11\uff0c\u800c\u4e14\u5bf9\u89e6\u6478\u4e8b\u4ef6\u7684\u5904\u7406\u4e5f\u5f88\u65f6\u9ae6\u3002\n\u5ba2\u6237\u7aef\u4ecd\u7136\u6709\u70b9\u6df7\u4e71\uff0c\u52a8\u753b\u3001UI\u8f93\u5165\u548c\u670d\u52a1\u5668\u4e8b\u4ef6\u90fd\u5728\u4e89\u5148\u6050\u540e\u5730\u7834\u574f\u7cfb\u7edf\u7684\u4e0d\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u5728\u52a8\u753b\u8fd0\u884c\u65f6\u62d6\u52a8\u677f\u53ef\u80fd\u4f1a\u4f7f\u7cfb\u7edf\u8fdb\u5165\u65e0\u6548\u72b6\u6001\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u8ba8\u538c\u7684\u9519\u8bef\u3002\n\u8fd9\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\uff1a\u6709\u72b6\u6001UI\u5f88\u96be\uff0c\u8fd9\u89e3\u91ca\u4e86\u58f0\u660e\u5f0f\u65b9\u6cd5\u7684\u6d41\u884c\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5ba2\u6237\u7aef\u7684\u529f\u80fd\u662f\u5b8c\u6574\u7684\uff0c\u5e76\u4e14\u8fd8\u6ca1\u6709\u5b8c\u5168\u5d29\u6e83\uff0c\u6240\u4ee5\u6211\u4e0d\u503e\u5411\u4e8e\u8fdb\u884c\u4efb\u4f55\u620f\u5267\u6027\u7684\u91cd\u6784\u3002\nRust\u4f5c\u4e3a\u4e00\u79cd\u8bed\u8a00\u4ecd\u7136\u5f88\u68d2\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u3002\u6211\u5df2\u7ecf\u5728\u4e0a\u9762\u8ba8\u8bba\u4e86\u5f02\u6b65\u751f\u6001\u7cfb\u7edf\uff0c\u6211\u6ca1\u6709\u518d\u6df1\u5165\u8ba8\u8bba\u8fd9\u4e00\u70b9\u3002\u5728\u5ba2\u6237\u7aef\uff0cWebAssembly\u7ecf\u5e38\u5b58\u5728\u963b\u6297\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff1a\u4f8b\u5982\uff0c\u4f7f\u7528Rust\u95ed\u5305\u4f5c\u4e3a\u56de\u8c03\u9700\u8981\u9690\u6666\u7684\u6837\u677f\u6587\u4ef6\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6240\u6709\u7684\u90e8\u5206\u90fd\u5c31\u4f4d\u4e86\uff0c\u8fdb\u884c\u66f4\u6539\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u800c\u4e14\u6211\u76f8\u4fe1\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u6211\u6ca1\u6709\u7834\u574f\u4efb\u4f55\u4e1c\u897f\u3002\n\u6211\u7279\u522b\u559c\u6b22WebSockets\u3001Serde\u548cbincode\u7684\u7ec4\u5408\uff1a\u8ba9\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u5904\u7406\u5f3a\u7c7b\u578b\u7684\u4e8b\u4ef6\u6d41\uff0c\u8fd9\u8ba9\u4e8b\u60c5\u66f4\u5bb9\u6613\u63a8\u7406\u3002", "note_en": "Pont is an online implementation of Qwirkle, a board game by Mindware Games.It was written for my parents,so they could play with friends and family during the COVID-19 stay-at-home era.\n Play is split into  rooms,which are identified by a three-word code( size moody shape in the image above).Within each room,the game distributes pieces,enforces the game rules,and provides a local chat window.\n Unusually, it&#39;s a web-based multiplayer game  without any Javascript:both the client and server are written in  Rust,which is compiled into  WebAssembly to run on the browser.(There&#39;s a Javascript shim to load the WebAssembly module, but I didn&#39;t have to write it myself)\n  Keep in mind, I&#39;m  not a web developer,so this is probably a weird  outsider architecturefor web applications.Here&#39;s what the system looks like:\n  The system uses  Let&#39;s Encrypt for certificates:both static assets and WebSocket communication are encryptedbetween the client and the server.The game server does not communicate securely with the NGINX proxy,but if anyone is on the server watching,I&#39;ve got bigger problems.\n The  wasm bundle and  pont-server executable are bothwritten in Rust and managed in the   pont repository.They both depend on   pont-common,which defines basic types and logic for gameplay(e.g. so that both the client and server can check whether a move is legal).\n The client and server communicate via  WebSockets.Messages are strongly typed as an   enum in  pont-common,serialized using  Serde,and packed into  bincodeto be sent as binary WebSocket messages.\n   There&#39;s a  &#34;very polite cold war&#34;going on between the two major (incompatible?) runtimes,with packages that only work in one or the other\n  General confusion between   futures,  std::Future, and  futures_util(exacerbated by the fact that Googling for things will land youinto a random version of the docs)\n I ended up using the   smol runtimebecause it&#39;s got relatively few dependencies,and I appreciated that it wasn&#39;t trying to own the entire async universe(unlike Tokio and  async-std).\n After getting over those hurdles,the server architecture is relatively straightforward.A bunch of independent tasks run asynchronously,communicating to the outside world via WebSocketsand internally via  unbounded MPSC queues.\n Here&#39;s an example of the server running one game (with two players),plus one new client who has just connected. Each rectanglerepresents an async task:\n   One async task per client connection, which passes messages between the WebSocket connectionand the application&#39;s internal queues.\n These tasks each map to a   smol::Task.(As a small optimization,the first player&#39;s  Task handles both the player communicationand running the room, which is why they&#39;re both blue in the diagram above)\n The server compiles down to a 5 MB static binary.The whole system is hosted on the smallest VM offered by Digital Ocean,which is a $5/month machine.I&#39;m looking forward to the inevitable  Hacker News DDOS,where I can see how well it scales!\n  The client is  2000 lines of framework-less excitement.It uses a state machine patternto represent the flow of the game,accepting messages from the serverand updating the state accordingly:for example, top-level state flows from Connecting to  CreateOrJoin to  Playing.\n The game board is represented as an SVG;everything else is standard HTML elements.In fact, the whole UI is pre-constructed in  index.htmland revealed on demand.\n The client has a bit of polish:Pieces are animated as they move around the board,and there&#39;s an optional color-blind mode,which adds corner markings to indicate color.\n  I use direct DOM manipulation(from the   web-sys crate)to control the system.This exercise has left me appreciating the usefulness of virtual DOMs,but I didn&#39;t want to bring in the complexity of a framework.(Is there a Rust +  wasm version of  Svelte yet?)\n For deployment,I&#39;m using   wasm-packand serving the resulting  wasm blob from the same server as the other static assets.\n The main challenges on the client side were(of course) dealing with cross-browser compatibility:Safari, in particular, supports fewer featuresand has funky handling of touch events.\n   The client side is still a bit messy,with animations, UI inputs,and server events all fighting to break the system&#39;s invariants.For example,there was a nasty bug where dragging the board whilean animation was running could drop the system into an invalid state.\n This isn&#39;t surprising:stateful UIs are hard,which explains the popularity of declarative approaches.At this point, the client is feature-completeand hasn&#39;t quite collapsed under its own weight,so I&#39;m not inclined to do any dramatic refactorings.\n Rust as a language continues to be great,despite minor complaints.I already discussed the async ecosystem above,and won&#39;t dwell on that any further.On the client side,there are often impedance mismatches with WebAssembly:for example, using Rust closures as callbacksrequires cryptic boilerplate.\n Still, with all of the pieces in place,making changes is pleasantly fast,and I trust the compiler to check that I haven&#39;t broken anything.\n I&#39;m particularly happy with the combination of WebSockets, Serde, and bincode:having both the client and server process a strongly-typed stream of eventsmakes things easy to reason about.", "posttime": "2020-06-27 16:06:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,webassembly,\u6e38\u620f,\u68cb\u76d8,board", "title": "Rust\u548cWebAssembly\u4e2d\u7684\u4e00\u6b3e\u591a\u4eba\u68cb\u76d8\u6e38\u620f", "title_en": "A multiplayer board game in Rust and WebAssembly", "transed": 1, "url": "http://www.mattkeeter.com/projects/pont/", "via": "", "real_tags": ["rust", "\u6e38\u620f", "\u68cb\u76d8", "board"]}, {"category": "", "categoryclass": "", "imagename": "8334c916f55d6265975420a0f02daad1.jpg", "infoid": 1008535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5982\u4f55\u624d\u80fd\u771f\u6b63\u77e5\u9053\uff0c\u5728\u4eba\u7c7b\u51fa\u73b0\u4e4b\u524d\u5f88\u4e45\uff0c\u6211\u4eec\u7684\u661f\u7403\u4e0a\u5c31\u6ca1\u6709\u51fa\u73b0\u8fc7\u8d77\u8d77\u843d\u843d\u7684\u6587\u660e\u5462\uff1f\u8fd9\u662f\u7f57\u5207\u65af\u7279\u5927\u5b66\u7684\u4e9a\u5f53\u00b7\u5f17\u5170\u514b\u6559\u6388\u548c\u7f8e\u56fd\u5b87\u822a\u5c40\u6208\u8fbe\u5fb7\u592a\u7a7a\u7814\u7a76\u6240\u7684\u52a0\u6587\u00b7\u65bd\u5bc6\u7279\u535a\u58eb\u5728\u4e00\u4e2a\u601d\u7ef4\u5b9e\u9a8c\u4e2d\u63d0\u51fa\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u7684\u8bba\u6587\u672c\u5468\u53d1\u8868\u5728\u201c\u56fd\u9645\u5929\u4f53\u751f\u7269\u5b66\u6742\u5fd7\u201d(arxiv.org\u9884\u5370\u672c)\u4e0a\u3002\n\u201c\u6211\u4eec\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u53e6\u4e00\u4e2a\u5de5\u4e1a\u6587\u660e\u7684\u8bc1\u636e\uff0c\u201d\u5f17\u5170\u514b\u6559\u6388\u8bf4\u3002\u201c\u4f46\u662f\uff0c\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u770b\u5f85\u9065\u8fdc\u7684\u8fc7\u53bb\uff0c\u4e00\u7cfb\u5217\u5173\u4e8e\u6587\u660e\u548c\u5730\u7403\u7684\u65b0\u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u6587\u660e\u7559\u4e0b\u4e86\u54ea\u4e9b\u5730\u8d28\u8db3\u8ff9\uff1f\u4e00\u65e6\u4e00\u4e2a\u5de5\u4e1a\u6587\u660e\u4ece\u5176\u5bbf\u4e3b\u661f\u7403\u8868\u9762\u6d88\u5931\uff0c\u662f\u5426\u6709\u53ef\u80fd\u5728\u5730\u8d28\u8bb0\u5f55\u4e2d\u68c0\u6d4b\u5230\u5b83\u5462\uff1f\u201c\u3002\n\u201c\u8fd9\u4e9b\u95ee\u9898\u8ba9\u6211\u4eec\u4ee5\u4e00\u79cd\u622a\u7136\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u672a\u6765\u548c\u8fc7\u53bb\uff0c\u5305\u62ec\u4efb\u4f55\u884c\u661f\u7ea7\u522b\u7684\u6587\u660e\u53ef\u80fd\u4f1a\u5982\u4f55\u5174\u8870\u3002\u201d\n\u5728\u4ed6\u4eec\u8ba4\u4e3a\u7684\u201c\u5fd7\u7559\u7eaa\u5047\u8bf4\u201d\u4e2d\uff0c\u5f17\u5170\u514b\u6559\u6388\u548c\u65bd\u5bc6\u7279\u535a\u58eb\u901a\u8fc7\u80fd\u6e90\u4f7f\u7528\u6765\u5b9a\u4e49\u6587\u660e\u3002\n\u4eba\u7c7b\u521a\u521a\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u5730\u8d28\u65f6\u4ee3\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u5c06\u5176\u79f0\u4e3a\u4eba\u7c7b\u4e16\uff0c\u8fd9\u662f\u4eba\u7c7b\u6d3b\u52a8\u5f3a\u70c8\u5f71\u54cd\u6c14\u5019\u548c\u73af\u5883\u7684\u65f6\u671f\u3002\n\u5728\u4eba\u7c7b\u4e16\uff0c\u5316\u77f3\u71c3\u6599\u5df2\u7ecf\u6210\u4e3a\u4eba\u7c7b\u5c06\u5728\u5730\u7403\u4e0a\u7559\u4e0b\u7684\u5730\u8d28\u8db3\u8ff9\u7684\u4e2d\u5fc3\u3002\n\u901a\u8fc7\u89c2\u5bdf\u4eba\u7c7b\u4e16\u7684\u5370\u8bb0\uff0c\u7814\u7a76\u5c0f\u7ec4\u68c0\u67e5\u4e86\u672a\u6765\u7684\u79d1\u5b66\u5bb6\u53ef\u80fd\u4f1a\u53d1\u73b0\u4ec0\u4e48\u6837\u7684\u7ebf\u7d22\u6765\u786e\u5b9a\u4eba\u7c7b\u7684\u5b58\u5728\u3002\n\u5728\u8fd9\u6837\u505a\u7684\u540c\u65f6\uff0c\u4ed6\u4eec\u8fd8\u63d0\u4f9b\u4e86\u8bc1\u636e\uff0c\u8bc1\u660e\u5982\u679c\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u5de5\u4e1a\u6587\u660e\u5728\u8fc7\u53bb\u6570\u767e\u4e07\u5e74\u524d\u5c31\u5b58\u5728\u4e86\uff0c\u53ef\u80fd\u4f1a\u7559\u4e0b\u4ec0\u4e48\u3002\n300\u591a\u5e74\u524d\uff0c\u4eba\u7c7b\u5f00\u59cb\u71c3\u70e7\u5316\u77f3\u71c3\u6599\uff0c\u6807\u5fd7\u7740\u5de5\u4e1a\u5316\u7684\u5f00\u59cb\u3002\n\u201c\u5316\u77f3\u71c3\u6599\u6392\u653e\u5230\u5927\u6c14\u4e2d\u5df2\u7ecf\u4ee5\u78b3\u540c\u4f4d\u7d20\u8bb0\u5f55\u7684\u65b9\u5f0f\u6539\u53d8\u4e86\u78b3\u5faa\u73af\uff0c\u201d\u4f5c\u8005\u8bf4\u3002\n(I)\u5168\u7403\u53d8\u6696\uff0c\u4ece\u4e8c\u6c27\u5316\u78b3\u7684\u91ca\u653e\u548c\u5316\u80a5\u5bf9\u6c2e\u5faa\u73af\u7684\u6270\u52a8\uff1b\n(Iii)\u5851\u6599\u3001\u5408\u6210\u6c61\u67d3\u7269\uff0c\u751a\u81f3\u7c7b\u56fa\u9187\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u5c06\u5728\u6570\u767e\u4e07\u5e74\u751a\u81f3\u6570\u5341\u4ebf\u5e74\u5185\u88ab\u5730\u7403\u5316\u5b66\u68c0\u6d4b\u5230\uff1b\n\u201c\u4f5c\u4e3a\u4e00\u4e2a\u5de5\u4e1a\u6587\u660e\uff0c\u6211\u4eec\u6b63\u5728\u63a8\u52a8\u540c\u4f4d\u7d20\u4e30\u5ea6\u7684\u53d8\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u71c3\u70e7\u78b3\uff0c\u201d\u5f17\u5170\u514b\u6559\u6388\u8bf4\u3002\n\u201c\u4f46\u71c3\u70e7\u5316\u77f3\u71c3\u6599\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u8fd9\u4e2a\u6587\u660e\u95ed\u5173\u9501\u56fd\u3002\u51e0\u5343\u4e07\u5e74\u6765\uff0c\u8fd9\u79cd\u6216\u5176\u4ed6\u5f62\u5f0f\u7684\u5de5\u4e1a\u6d3b\u52a8\uff0c\u4f1a\u5728\u4e00\u4e2a\u6d88\u4ea1\u5df2\u4e45\u7684\u6587\u660e\u4e2d\u7559\u4e0b\u4ec0\u4e48\u5370\u8bb0\uff1f\u201c\u3002\n\u8fd9\u4e9b\u95ee\u9898\u662f\u4ece\u5929\u4f53\u751f\u7269\u5b66\u7684\u89d2\u5ea6\u89e3\u51b3\u6c14\u5019\u53d8\u5316\u7684\u66f4\u5e7f\u6cdb\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u662f\u4e00\u79cd\u770b\u5f85\u6574\u4e2a\u5b87\u5b99\u7684\u751f\u547d\u548c\u6587\u660e\u7684\u65b0\u65b9\u5f0f\u3002\n\u4ece\u884c\u661f\u5f71\u54cd\u7684\u89d2\u5ea6\u770b\u5f85\u6587\u660e\u7684\u5174\u8870\u4e5f\u4f1a\u5f71\u54cd\u5929\u4f53\u751f\u7269\u5b66\u5bb6\u672a\u6765\u63a2\u7d22\u5176\u4ed6\u884c\u661f\u7684\u65b9\u5f0f\u3002\n\u201c\u6211\u4eec\u77e5\u9053\u65e9\u671f\u7684\u706b\u661f\uff0c\u4e5f\u8bb8\u65e9\u671f\u7684\u91d1\u661f\u6bd4\u73b0\u5728\u66f4\u9002\u5408\u5c45\u4f4f\uff0c\u53ef\u4ee5\u60f3\u8c61\u6709\u4e00\u5929\u6211\u4eec\u4e5f\u4f1a\u94bb\u63a2\u90a3\u91cc\u7684\u5730\u8d28\u6c89\u79ef\u7269\u3002\u201d\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u601d\u8003\u6211\u4eec\u5e94\u8be5\u5bfb\u627e\u4ec0\u4e48\uff0c\u201c\u65bd\u5bc6\u7279\u535a\u58eb\u8bf4\u3002\n\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u5982\u679c\u4e00\u79cd\u6587\u660e\u80fd\u591f\u627e\u5230\u4e00\u79cd\u66f4\u53ef\u6301\u7eed\u7684\u65b9\u5f0f\u6765\u751f\u4ea7\u80fd\u6e90\uff0c\u800c\u4e0d\u4f1a\u635f\u5bb3\u5176\u5bbf\u4e3b\u661f\u7403\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u7559\u4e0b\u66f4\u5c11\u7684\u8bc1\u636e\u6765\u8bc1\u660e\u5b83\u66fe\u5728\u90a3\u91cc\u5b58\u5728\u3002\u201d\n\u201c\u4f60\u5e0c\u671b\u6709\u4e00\u4e2a\u7f8e\u597d\u7684\u3001\u5927\u89c4\u6a21\u7684\u6587\u660e\uff0c\u5b83\u80fd\u505a\u4e00\u4e9b\u5947\u5999\u7684\u4e8b\u60c5\uff0c\u4f46\u4e0d\u4f1a\u628a\u5730\u7403\u63a8\u5165\u5bf9\u5b83\u81ea\u5df1\u6709\u5371\u9669\u7684\u9886\u57df\uff0c\u4e5f\u5c31\u662f\u6587\u660e\u3002\u6211\u4eec\u9700\u8981\u627e\u51fa\u4e00\u79cd\u751f\u4ea7\u548c\u4f7f\u7528\u80fd\u6e90\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f1a\u628a\u6211\u4eec\u7f6e\u4e8e\u5371\u9669\u4e4b\u4e2d\uff0c\u201c\u5f17\u5170\u514b\u6559\u6388\u8bf4\u3002\n\u52a0\u6587\u00b7A\u00b7\u65bd\u5bc6\u7279\u548c\u4e9a\u5f53\u00b7\u5f17\u5170\u514b\u3002\u5fd7\u7559\u7eaa\u5047\u8bf4\uff1a\u6709\u53ef\u80fd\u5728\u5730\u8d28\u8bb0\u5f55\u4e2d\u68c0\u6d4b\u5230\u5de5\u4e1a\u6587\u660e\u5417\uff1f\u201c\u56fd\u9645\u5929\u4f53\u751f\u7269\u5b66\u6742\u5fd7\u201d\uff0c2018\u5e744\u670816\u65e5\u5728\u7ebf\u51fa\u7248\uff1bdoi\uff1a10.1017/S1473550418000095", "note_en": "How do we really know there weren\u2019t previous civilizations on our planet that rose and fell long before humans appeared? That\u2019s the question posed in a thought experiment by University of Rochester\u2019s Professor Adam Frank and Dr. Gavin Schmidt of NASA\u2019s Goddard Institute for Space Studies. Their  paper was published this week in the  International Journal of Astrobiology ( arXiv.org preprint).\n  \u201cWe have not seen any evidence of another industrial civilization,\u201d  Professor Frank said. \u201cBut by looking at the deep past in the right way, a new set of questions about civilizations and the planet appear: What geological footprints do civilizations leave? Is it possible to detect an industrial civilization in the geological record once it disappears from the face of its host planet?\u201d\n \u201cThese questions make us think about the future and the past in a much different way, including how any planetary-scale civilization might rise and fall.\u201d\n In what they deem the \u2018Silurian Hypothesis,\u2019 Professor Frank and  Dr. Schmidt define a civilization by its energy use.\n Human beings are just entering a new geological era that many researchers refer to as the  Anthropocene, the period in which human activity strongly influences the climate and environment.\n In the Anthropocene, fossil fuels have become central to the geological footprint humans will leave behind on Earth.\n By looking at the Anthropocene\u2019s imprint, the team examines what kinds of clues future scientists might detect to determine that human beings existed.\n In doing so, they also lay out evidence of what might be left behind if industrial civilizations like ours existed millions of years in the past.\n Human beings began burning fossil fuels more than 300 years ago, marking the beginnings of industrialization.\n \u201cThe emission of fossil fuels into the atmosphere has already changed the carbon cycle in a way that is recorded in carbon isotope records,\u201d the authors said.\n  (i) global warming, from the release of carbon dioxide and perturbations to the nitrogen cycle from fertilizers;\n  (iii) plastics, synthetic pollutants, and even things such as steroids, which will be geochemically detectable for millions, and perhaps even billions, of years;\n  \u201cAs an industrial civilization, we\u2019re driving changes in the isotopic abundances because we\u2019re burning carbon,\u201d Professor Frank said.\n \u201cBut burning fossil fuels may actually shut us down as a civilization. What imprints would this or other kinds of industrial activity from a long dead civilization leave over tens of millions of years?\u201d\n  These questions are part of a broader effort to address climate change from an astrobiological perspective, and a new way of thinking about life and civilizations across the Universe.\n Looking at the rise and fall of civilizations in terms of their planetary impacts can also affect how astrobiologists approach future explorations of other planets.\n \u201cWe know  early Mars and, perhaps,  early Venus were more habitable than they are now, and conceivably we will one day drill through the geological sediments there, too. This helps us think about what we should be looking for,\u201d Dr. Schmidt said.\n \u201cIf a civilization is able to find a more sustainable way to produce energy without harming its host planet, it will leave behind less evidence that it was there,\u201d he added.\n \u201cYou want to have a nice, large-scale civilization that does wonderful things but that doesn\u2019t push the planet into domains that are dangerous for itself, the civilization. We need to figure out a way of producing and using energy that doesn\u2019t put us at risk,\u201d Professor Frank said.\n  Gavin A. Schmidt &amp; Adam Frank. The Silurian Hypothesis: Would it be possible to detect an industrial civilization in the geological record?  International Journal of Astrobiology, published online April 16, 2018; doi: 10.1017/S1473550418000095", "posttime": "2020-06-27 16:05:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fd7\u7559\u7eaa,hypothesis,\u6587\u660e", "title": "\u5fd7\u7559\u7eaa\u5047\u8bf4\uff1a\u5728\u4eba\u7c7b\u4e4b\u524d\uff0c\u5730\u7403\u4e0a\u6709\u6587\u660e\u5417\uff1f(2018\u5e74)", "title_en": "Silurian Hypothesis: Were There Civilizations on Earth Before Humans? (2018)", "transed": 1, "url": "http://www.sci-news.com/featurednews/silurian-hypothesis-05921.html", "via": "", "real_tags": ["\u5fd7\u7559\u7eaa", "\u6587\u660e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u82f9\u679c\u516c\u53f8\u6700\u8fd1\u5ba3\u5e03\uff0c\u4ed6\u4eec\u5c06\u5728\u672a\u6765\u7684\u7b14\u8bb0\u672c\u7535\u8111\u548c\u53f0\u5f0f\u673a\u4e0a\u4eceIntel X86 CPU\u8f6c\u5411\u4ed6\u4eec\u81ea\u5df1\u7684ARM CPU\uff0c\u6211\u8ba4\u4e3a\u73b0\u5728\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u673a\u6765\u770b\u770b\u53ef\u80fd\u4f1a\u5f71\u54cd\u5728Rust\u5de5\u4f5c\u7684\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u4e00\u4e9b\u5dee\u5f02\u3002\nARM CPU\u4e0eX86\u4e0d\u540c\u7684\u4e00\u4e2a\u5173\u952e\u65b9\u9762\u662f\u5b83\u4eec\u7684\u5185\u5b58\u6a21\u578b\u3002\u672c\u6587\u5c06\u4ecb\u7ecd\u4ec0\u4e48\u662f\u5185\u5b58\u6a21\u578b\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5728\u4e00\u4e2aCPU\u4e0a\u5bfc\u81f4\u4ee3\u7801\u6b63\u786e\uff0c\u800c\u5728\u53e6\u4e00\u4e2aCPU\u4e0a\u5bfc\u81f4\u4e89\u7528\u60c5\u51b5\u3002\n\u7279\u5b9aCPU\u4e0a\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u52a0\u8f7d\u548c\u5b58\u50a8\u5230\u5185\u5b58\u7684\u4ea4\u4e92\u65b9\u5f0f\u79f0\u4e3a\u8be5\u4f53\u7cfb\u7ed3\u6784\u7684\u5185\u5b58\u6a21\u578b\u3002\n\u6839\u636eCPU\u7684\u5185\u5b58\u6a21\u578b\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u591a\u6b21\u5199\u5165\u53ef\u80fd\u4f1a\u4ee5\u4e0e\u53d1\u51fa\u5b83\u4eec\u7684\u987a\u5e8f\u4e0d\u540c\u7684\u987a\u5e8f\u5bf9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\u3002\n\u53d1\u51fa\u591a\u6b21\u8bfb\u53d6\u7684\u7ebf\u7a0b\u4e5f\u662f\u5982\u6b64\u3002\u53d1\u51fa\u591a\u4e2a\u8bfb\u53d6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u63a5\u6536\u8868\u793a\u4e0e\u53d1\u51fa\u987a\u5e8f\u4e0d\u540c\u7684\u65f6\u95f4\u70b9\u7684\u5168\u5c40\u72b6\u6001\u7684\u201c\u5feb\u7167\u201d\u3002\n\u73b0\u4ee3\u786c\u4ef6\u9700\u8981\u8fd9\u79cd\u7075\u6d3b\u6027\u624d\u80fd\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5185\u5b58\u64cd\u4f5c\u7684\u541e\u5410\u91cf\u3002\u867d\u7136CPU\u65f6\u949f\u9891\u7387\u548c\u6838\u5fc3\u8ba1\u6570\u968f\u7740\u6bcf\u4e00\u6b21\u65b0\u7684CPU\u8fed\u4ee3\u800c\u4e0d\u65ad\u589e\u52a0\uff0c\u4f46\u5185\u5b58\u5e26\u5bbd\u5374\u4e00\u76f4\u96be\u4ee5\u8ddf\u4e0a\u3002\u4ece\u5185\u5b58\u4e2d\u79fb\u52a8\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u901a\u5e38\u662f\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u74f6\u9888\u3002\n\u5982\u679c\u60a8\u4ece\u672a\u7f16\u5199\u8fc7\u591a\u7ebf\u7a0b\u4ee3\u7801\uff0c\u6216\u8005\u53ea\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u540c\u6b65\u539f\u8bed(\u5982std\uff1a\uff1async\uff1a\uff1amutex)\u7f16\u5199\u8fc7\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4ece\u672a\u63a5\u89e6\u8fc7\u5185\u5b58\u6a21\u578b\u7684\u7ec6\u8282\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e0d\u7ba1CPU\u7684\u5185\u5b58\u6a21\u578b\u5141\u8bb8\u5b83\u6267\u884c\u4ec0\u4e48\u91cd\u65b0\u6392\u5e8f\uff0c\u5b83\u603b\u662f\u5411\u5f53\u524d\u7ebf\u7a0b\u5448\u73b0\u4e00\u81f4\u7684\u5185\u5b58\u89c6\u56fe\u3002\n\u5982\u679c\u6211\u4eec\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u8be5\u4ee3\u7801\u5199\u5165\u5185\u5b58\uff0c\u7136\u540e\u76f4\u63a5\u8bfb\u56de\u76f8\u540c\u7684\u5185\u5b58\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u8bfb\u53d6\u65f6\uff0c\u6211\u4eec\u603b\u662f\u4f1a\u5f97\u5230\u671f\u671b\u503c58\u3002\u6211\u4eec\u4ece\u6765\u4e0d\u4f1a\u4ece\u8bb0\u5fc6\u4e2d\u8bfb\u5230\u4e00\u4e9b\u9648\u65e7\u7684\u503c\u3002\n\u53d1\u5e03\u4e0d\u5b89\u5168\u7684FN READ_AFTER_WRITE(u32_ptr\uff1a*mut u32){u32_ptr.write_volatile(58)\uff1blet u32_value=u32_ptr.read_volatile()\uff1bprintln\uff01(&#34\uff1b\u503c\u4e3a{}&#34\uff1b\uff0cu32_value)\uff1b}\u3002\n\u6211\u4f7f\u7528\u6613\u5931\u6027\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4f7f\u7528\u666e\u901a\u6307\u9488\u64cd\u4f5c\uff0c\u7f16\u8bd1\u5668\u5c31\u8db3\u591f\u667a\u80fd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u5185\u5b58\u8bfb\u53d6\uff0c\u53ea\u6253\u5370\u503c58\u3002\u6613\u5931\u6027\u64cd\u4f5c\u4f1a\u963b\u6b62\u7f16\u8bd1\u5668\u91cd\u65b0\u6392\u5e8f\u6216\u8df3\u8fc7\u6211\u4eec\u7684\u5185\u5b58\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u5bf9\u786c\u4ef6\u6ca1\u6709\u5f71\u54cd\u3002\n\u4e00\u65e6\u6211\u4eec\u5f15\u5165\u4e86\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6211\u4eec\u73b0\u5728\u5c31\u4f1a\u53d1\u73b0CPU\u53ef\u80fd\u4f1a\u91cd\u65b0\u6392\u5e8f\u6211\u4eec\u7684\u5185\u5b58\u64cd\u4f5c\u3002\n\u53d1\u5e03\u4e0d\u5b89\u5168FN\u7f16\u5199\u5668(u32_ptr_1\uff1a*mut u32\uff0cu32_ptr_2\uff1a*mut u32){u32_ptr_1.write_volatile(58)\uff1bu32_ptr_2.write_volatile(42)\uff1b}\u53d1\u5e03\u4e0d\u5b89\u5168FN\u8bfb\u53d6\u5668(u32_ptr_1\uff1a*mut u32\uff0cu32_ptr_2\uff1a*mut u32)-&gt\uff1b(u32\uff0cu32){(u32\u3002\n\u5982\u679c\u6211\u4eec\u5c06\u4e24\u4e2a\u6307\u9488\u7684\u5185\u5bb9\u521d\u59cb\u5316\u4e3a0\uff0c\u7136\u540e\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\u8fd0\u884c\u6bcf\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a\u8bfb\u53d6\u5668\u5217\u51fa\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u6211\u4eec\u77e5\u9053\u6ca1\u6709\u540c\u6b65\uff0c\u4f46\u662f\u6839\u636e\u6211\u4eec\u4f7f\u7528\u5355\u7ebf\u7a0b\u4ee3\u7801\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u8ba4\u4e3a\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u662f(0\uff0c0)\u3001(58\uff0c0)\u6216(58\uff0c42)\u3002\u4f46\u662f\uff0c\u5f71\u54cd\u591a\u7ebf\u7a0b\u7684\u5b58\u50a8\u5668\u5199\u5165\u7684\u786c\u4ef6\u91cd\u65b0\u6392\u5e8f\u7684\u53ef\u80fd\u6027\u610f\u5473\u7740\u5b58\u5728\u7b2c\u56db\u4e2a\u9009\u9879(0\uff0c42)\u3002\n\u60a8\u53ef\u80fd\u8ba4\u4e3a\u7531\u4e8e\u7f3a\u4e4f\u540c\u6b65\uff0c\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002\u4f46\u6240\u6709\u786c\u4ef6\u5185\u5b58\u578b\u53f7\u90fd\u4fdd\u8bc1\u5bf9\u9f50\u7684\u52a0\u8f7d\u548c\u5b58\u50a8(64\u4f4dCPU\u4e0a\u7684u32\u621632\u4f4dCPU\u3001u64)\u662f\u539f\u5b50\u7684\u3002\u5982\u679c\u6211\u4eec\u5c06\u5176\u4e2d\u4e00\u4e2a\u5199\u5165\u66f4\u6539\u4e3a0xFFFF_FFFF\uff0c\u5219\u8bfb\u53d6\u5c06\u4ec5\u770b\u5230\u65e7\u503c\u6216\u65b0\u503c\u3002\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u50cf0xFFFF_0000\u8fd9\u6837\u7684\u90e8\u5206\u503c\u3002\n\u5982\u679c\u5728\u4f7f\u7528\u5e38\u89c4\u5185\u5b58\u8bbf\u95ee\u65f6\u9690\u85cf\u4e86CPU\u5185\u5b58\u6a21\u578b\u7684\u7ec6\u8282\uff0c\u6211\u4eec\u4f3c\u4e4e\u65e0\u6cd5\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\u63a7\u5236\u5b83\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002\n\u5e78\u8fd0\u7684\u662f\uff0cRust\u63d0\u4f9b\u4e86STD\uff1a\uff1aSYNC\uff1a\uff1aATOM\u6a21\u5757\uff0c\u5176\u4e2d\u5305\u542b\u7ed9\u6211\u4eec\u63d0\u4f9b\u6240\u9700\u63a7\u5236\u7684\u7c7b\u578b\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7cbe\u786e\u5730\u6307\u5b9a\u4ee3\u7801\u6240\u9700\u7684\u5185\u5b58\u6392\u5e8f\u8981\u6c42\u3002\u6211\u4eec\u7528\u6027\u80fd\u6765\u6362\u53d6\u6b63\u786e\u6027\u3002\u6211\u4eec\u5bf9\u786c\u4ef6\u53ef\u4ee5\u6267\u884c\u5185\u5b58\u64cd\u4f5c\u7684\u987a\u5e8f\u8fdb\u884c\u4e86\u9650\u5236\uff0c\u4ece\u800c\u53d6\u6d88\u4e86\u786c\u4ef6\u60f3\u8981\u6267\u884c\u7684\u4efb\u4f55\u5e26\u5bbd\u4f18\u5316\u3002\n\u5728\u4f7f\u7528\u539f\u5b50\u6a21\u5757\u65f6\uff0c\u6211\u4eec\u4e0d\u62c5\u5fc3\u5404\u4e2aCPU\u4f53\u7cfb\u7ed3\u6784\u7684\u5b9e\u9645\u5185\u5b58\u6a21\u578b\u3002\u76f8\u53cd\uff0c\u539f\u5b50\u6a21\u5757\u7684\u64cd\u4f5c\u4f7f\u7528\u4e0eCPU\u65e0\u5173\u7684\u62bd\u8c61\u5185\u5b58\u6a21\u578b\u3002\u4e00\u65e6\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2aRust\u5185\u5b58\u6a21\u578b\u8868\u8fbe\u4e86\u5bf9\u52a0\u8f7d\u548c\u5b58\u50a8\u7684\u8981\u6c42\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6267\u884c\u6620\u5c04\u5230\u76ee\u6807CPU\u7684\u5185\u5b58\u6a21\u578b\u7684\u5de5\u4f5c\u3002\n\u6211\u4eec\u5728\u6bcf\u4e2a\u64cd\u4f5c\u4e0a\u6307\u5b9a\u7684\u8981\u6c42\u91c7\u7528\u6211\u4eec\u60f3\u8981\u5141\u8bb8(\u6216\u62d2\u7edd)\u64cd\u4f5c\u7684\u91cd\u65b0\u6392\u5e8f\u7684\u5f62\u5f0f\u3002\u6392\u5e8f\u5f62\u6210\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u7ea7\u522b\u5bf9CPU\u65bd\u52a0\u66f4\u591a\u9650\u5236\u3002\u4f8b\u5982\uff0cORDING\uff1a\uff1aREAXED\u610f\u5473\u7740CPU\u53ef\u4ee5\u81ea\u7531\u5730\u6267\u884c\u5b83\u60f3\u8981\u7684\u4efb\u4f55\u91cd\u65b0\u6392\u5e8f\u3002Ording\uff1a\uff1aRelease\u610f\u5473\u7740\u5546\u5e97\u53ea\u6709\u5728\u6240\u6709\u540e\u7eed\u5546\u5e97\u90fd\u5b8c\u6210\u4e4b\u540e\u624d\u80fd\u5b8c\u6210\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u539f\u5b50\u5185\u5b58\u5199\u5165\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u7f16\u8bd1\u7684\uff0c\u4e0e\u5e38\u89c4\u5199\u5165\u76f8\u6bd4\u3002\n\u4f7f\u7528std\uff1a\uff1async\uff1a\uff1aatom\uff1a\uff1a*\uff1bpub unSafe FN test_write(Shared_ptr\uff1a*mut u32){*Shared_ptr=58\uff1b}pub unSafe FN test_ATOM_RELAX(Shared_PTR\uff1a&amp\uff1bAtomicU32){Shared_PTR.store(58\uff0cOrder\uff1a\uff1aRelaced)\uff1b}pub unsafe FN test_ATOM_Release(Shared_PTr\uff1a&amp\uff1bAtomicU32){Shared_PTR.store(\u3002}pub unsafe fn test_ATOM_CONSISTENT(SHARED_PTR\uff1a&amp\uff1bAtomicU32){Shared_PTR.store(58\uff0cOrding\uff1a\uff1aSeqCst)\uff1b}\u3002\n\u5982\u679c\u6211\u4eec\u67e5\u770b\u4e0a\u9762\u4ee3\u7801\u7684X86\u7a0b\u5e8f\u96c6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u524d\u4e09\u4e2a\u51fd\u6570\u751f\u6210\u76f8\u540c\u7684\u4ee3\u7801\u3002\u76f4\u5230\u66f4\u4e25\u683c\u7684SeqCst\u987a\u5e8f\uff0c\u6211\u4eec\u624d\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u6307\u4ee4\u3002\n\u793a\u4f8b\uff1a\uff1atest_write\uff1aMOV\u53cc\u5b57PTR[RDI]\uff0c58 ret\u793a\u4f8b\uff1a\uff1atest_ATOM_RELAX\uff1aMOV\u53cc\u5b57PTR[RDI]\uff0c58 ret\u793a\u4f8b\uff1a\uff1aTEST_ATOM_RELEASE\uff1aMOV\u53cc\u5b57PTR[RDI]\uff0c58 ret\u793a\u4f8b\uff1a\uff1aTEST_ATOM_CONSISTENT\uff1aMOV eax\uff0c58xchg\u53cc\u5b57PTR[RDI]\uff0ceAX ret\u3002\n\u524d\u4e24\u4e2a\u6392\u5e8f\u4f7f\u7528MOV(\u79fb\u52a8)\u6307\u4ee4\u5c06\u503c\u5199\u5165\u5185\u5b58\u3002\u53ea\u6709\u6700\u4e25\u683c\u7684\u6392\u5e8f\u624d\u4f1a\u4ea7\u751f\u4e0e\u539f\u59cb\u6307\u9488\u5199\u5165\u4e0d\u540c\u7684\u6307\u4ee4XCHG(\u539f\u5b50e XCHan G)\u3002\n\u793a\u4f8b\uff1a\uff1atest_write\uff1aMOV W8\uff0c#58\u5b57\u7b26\u4e32W8\uff0c[X0]ret\u793a\u4f8b\uff1a\uff1atest_ATOM_RELAX\uff1aMOV W8\uff0c#58\u5b57\u7b26\u4e32W8\uff0c[X0]ret\u793a\u4f8b\uff1a\uff1aTEST_ATOM_RELEASE\uff1aMOV W8\uff0c#58 STLR W8\uff0c[X0]RET\u793a\u4f8b\uff1a\uff1aTEST_ATOM_CONSISTENT\uff1aMOV W8\uff0c#58 STLR W8\uff0c[X0]RET\u793a\u4f8b\uff1a\uff1aTEST_ATOM_CONSISTENT\uff1aMOV W8\uff0c#58 STLR W8\uff0c[X0]RET\u793a\u4f8b\n\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u8fbe\u5230\u53d1\u5e03\u987a\u5e8f\u8981\u6c42\uff0c\u5c31\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u539f\u59cb\u6307\u9488\u548c\u677e\u5f1b\u7684\u539f\u5b50\u5b58\u50a8\u4f7f\u7528STR(\u5b58\u50a8\u5bc4\u5b58\u5668)\uff0c\u800c\u91ca\u653e\u548c\u987a\u5e8f\u6392\u5e8f\u4f7f\u7528\u6307\u4ee4STLR(\u4f7f\u7528RELease\u5bc4\u5b58\u5668\u5b58\u50a8)\u3002MOV\u6307\u4ee4\u662f\u8fd9\u79cd\u53cd\u6c47\u7f16\u5c06\u5e38\u91cf58\u79fb\u52a8\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u8fd9\u4e0d\u662f\u5185\u5b58\u64cd\u4f5c\u3002\n\u6211\u4eec\u5e94\u8be5\u80fd\u5728\u8fd9\u91cc\u770b\u5230\u98ce\u9669\u3002\u7406\u8bbaRust\u5185\u5b58\u6a21\u578b\u548cX86\u5185\u5b58\u6a21\u578b\u4e4b\u95f4\u7684\u6620\u5c04\u66f4\u80fd\u5bb9\u5fcd\u7a0b\u5e8f\u5458\u7684\u9519\u8bef\u3002\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e0e\u62bd\u8c61\u5185\u5b58\u6a21\u578b\u76f8\u5173\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u8ba9\u5b83\u751f\u6210\u6b63\u786e\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u5e76\u5728\u67d0\u4e9bCPU\u4e0a\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6211\u4eec\u5c06\u8981\u63a2\u7d22\u7684\u7a0b\u5e8f\u6784\u5efa\u5728\u8de8\u7ebf\u7a0b\u5b58\u50a8\u539f\u5b50\u6307\u9488\u503c\u7684\u6982\u5ff5\u4e4b\u4e0a\u3002\u4e00\u4e2a\u7ebf\u7a0b\u5c06\u4f7f\u7528\u5b83\u62e5\u6709\u7684\u53ef\u53d8\u5bf9\u8c61\u6267\u884c\u4e00\u4e9b\u5de5\u4f5c\u3002\u4e00\u65e6\u8be5\u5de5\u4f5c\u5b8c\u6210\uff0c\u5b83\u5c06\u628a\u8be5\u5de5\u4f5c\u4f5c\u4e3a\u4e0d\u53ef\u53d8\u7684\u5171\u4eab\u5f15\u7528\u53d1\u5e03\uff0c\u4f7f\u7528\u539f\u5b50\u6307\u9488\u5199\u6765\u901a\u77e5\u5de5\u4f5c\u5df2\u7ecf\u5b8c\u6210\uff0c\u5e76\u5141\u8bb8\u8bfb\u53d6\u7ebf\u7a0b\u4f7f\u7528\u6570\u636e\u3002\n\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u6d4b\u8bd5X86\u7684\u5185\u5b58\u6a21\u578b\u7684\u5bb9\u9519\u7a0b\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u591a\u7ebf\u7a0b\u4ee3\u7801\uff0c\u8df3\u8fc7\u5bf9std\uff1a\uff1async\uff1a\uff1aatom\u6a21\u5757\u7684\u4efb\u4f55\u4f7f\u7528\u3002\u6211\u60f3\u5f3a\u8c03\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u4f60\u771f\u6b63\u5e94\u8be5\u8003\u8651\u505a\u7684\u4e8b\u60c5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6b64\u4ee3\u7801\u53ef\u80fd\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5b66\u4e60\u7ec3\u4e60\u3002\npub struct SynchronisedSum{Shared\uff1aUnsafeCell&lt\uff1b*const u32&gt\uff1b\uff0cSamples\uff1ausize\uff0c}Impl SynchronisedSum{pub FN new(Samples\uff1ausize)-&gt\uff1bself{assert\uff01((Samples As U32)&lt\uff1b=u32\uff1a\uff1amax)\uff1bSelf{Shared\uff1aUnsafeCell\uff1a\uff1aNew(std\uff1aptr\uff1a\uff1anull()\uff0cSamples\uff0c}}pub FN\u751f\u6210\u3002self){//\u5904\u7406\u6b64\u7ebf\u7a0b\u62e5\u6709\u7684\u6570\u636elet data\uff1abox&lt\uff1b[u32]&gt\uff1b=(0.\u3002Self.Samples as u32).Collect()\uff1b//\u53d1\u5e03\u5230\u5176\u4ed6\u7ebf\u7a0b\u8ba9Shared_PTR=sel.Shared.get()\uff1bunsafe{Shared_PTR.write_Volatile(data.as_ptr())\uff1b}std\uff1a\uff1amem\uff1a\uff1aforget(Data)\uff1b}pub FN Calculate(&amp\uff1bself\uff0cExpect_sum\uff1au32){loop{//\u68c0\u67e5\u4f5c\u54c1\u662f\u5426\u5df2\u7ecf\u53d1\u5e03\uff0c\u4f46\u8ba9Shared_PTR=sel.shared.get()\uff1b\u8ba9DATA_PTR=UNSAFE{SHARED_PTR.read_Volatile()}\uff1b\u5982\u679c\uff01data_ptr.is_null(){//\u6570\u636e\u73b0\u5728\u53ef\u7531\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u8bf7\u5c06\u5176\u89c6\u4e3a\u4e0d\u53ef\u53d8\u7684\u5f15\u7528\u3002\u8bbedata=unsafe{std\uff1a\uff1aSlice\uff1a\uff1afrom_raw_part(data_ptr\uff0cself.sample)}\uff1b\u8bbemut sum=0\uff1bfor i in(0.\u3002sel.sample).rev(){sum+=data[i]\uff1b}//\u6211\u4eec\u662f\u5426\u8bbf\u95ee\u4e86\u9884\u671f\u7684\u6570\u636e\uff1fassert_eq\uff01(SUM\uff0cEXPECTED_SUM)\uff1bBreak\uff1b}\u3002\n\u8ba1\u7b97\u6570\u7ec4\u548c\u7684\u51fd\u6570\u4ece\u6267\u884c\u8bfb\u53d6\u5171\u4eab\u6307\u9488\u7684\u503c\u7684\u5faa\u73af\u5f00\u59cb\u3002\u7531\u4e8e\u539f\u5b50\u5b58\u50a8\u4fdd\u8bc1\uff0c\u6211\u4eec\u77e5\u9053read_volatile()\u5c06\u53ea\u8fd4\u56deNULL\u6216\u6307\u5411u32\u7247\u7684\u6307\u9488\u3002\u6211\u4eec\u53ea\u662f\u7b80\u5355\u5730\u4fdd\u6301\u5faa\u73af\uff0c\u76f4\u5230\u751f\u6210\u7ebf\u7a0b\u5b8c\u6210\u5e76\u53d1\u5e03\u5b83\u7684\u5de5\u4f5c\u3002\u4e00\u65e6\u5b83\u51fa\u7248\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9605\u8bfb\u5b83\u5e76\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u5c06\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u7528\u4e8e\u751f\u6210\u503c\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u8ba1\u7b97\u603b\u548c\u3002\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5728\u6267\u884c\u5b8c\u5b83\u4eec\u7684\u5de5\u4f5c\u540e\u9000\u51fa\uff0c\u6211\u4eec\u5c06\u7b49\u5f85\u5b83\u4eec\u4f7f\u7528Join\u5b8c\u6210\u3002\npub fn main(){print_arch()\uff1bfor i in 0..\u300210_000{let SUM_GENERATE=Arc\uff1a\uff1aNew(SynchronisedSum\uff1a\uff1aNew(512%))\uff1b\u8ba9SUM_COMULATE=Arc\uff1a\uff1aClone(&amp\uff1bSUM_GENERATE)\uff1b\u8ba9Calculate_Thread=\u7ebf\u7a0b\uff1a\uff1aSpan(Move||{SUM_Calculate.Calculate(130816)\uff1b})\uff1bThread\uff1a\uff1aSlear(std\uff1a\uff1aTime\uff1a\uff1aDuration\uff1a\uff1aFrom_Millis(1))\uff1b\u8ba9GENERATE_THREAD=THREAD\uff1a\uff1aSpron(Move|{SUM_GENERATE.GENERATE\u3002Calculate_Thread.Join().Expect(&amp\uff1bFormat\uff01(&#34\uff1biteration{}Failed&#34\uff1b\uff0ci))\uff1bGenerate_Thread.Join().unwire()\uff1b}println\uff01(&#34\uff1b\u6240\u6709\u901a\u8fc7\u7684\u8fed\u4ee3&#34\uff1b)\uff1b}\n\u5728aarch64thread&#39\uff1b&lt\uff1bunname&gt\uff1b&#39\uff1b\u4e0a\u8fd0\u884c\u65f6\u6b7b\u673a\u65ad\u8a00\u5931\u8d25\uff1a`(\u5de6==\u53f3)`\u5de6\uff1a`122824`\uff0c\u53f3\uff1a`130816`&#39\uff1b\uff0csrc\\main.rs\uff1a45\uff1a17\u6ce8\u610f\uff1a\u4f7f\u7528`RUST_Backtrace=1`\u73af\u5883\u53d8\u91cf\u8fd0\u884c\u4ee5\u663e\u793a\u5728&#39\uff1bmain&#39\uff1b35\u5904\u6b7b\u673a\u7684\u56de\u6eafethread&#39\uff1bmain&#39\uff1b\u8fed\u4ee3\u5931\u8d25\uff1a\u4efb\u4f55&\u3002\nx86\u5904\u7406\u5668\u80fd\u591f\u6210\u529f\u8fd0\u884c\u6d4b\u8bd5\u6240\u670910,000\u6b21\uff0c\u4f46ARM\u5904\u7406\u5668\u5728\u7b2c35\u6b21\u5c1d\u8bd5\u65f6\u5931\u8d25\u3002\n\u6211\u4eec\u7684\u6a21\u5f0f\u7684\u6b63\u786e\u8fd0\u884c\u8981\u6c42\u6211\u4eec\u6b63\u5728\u505a\u7684\u6240\u6709\u201c\u5de5\u4f5c\u201d\u5728\u5185\u5b58\u4e2d\u5904\u4e8e\u6b63\u786e\u7684\u72b6\u6001\uff0c\u7136\u540e\u6267\u884c\u5bf9\u5171\u4eab\u6307\u9488\u7684\u6700\u7ec8\u5199\u5165\u4ee5\u5c06\u5176\u53d1\u5e03\u5230\u5176\u4ed6\u7ebf\u7a0b\u3002\nARM\u7684\u5185\u5b58\u6a21\u578b\u4e0eX86\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0cARM CPU\u5c06\u76f8\u5bf9\u4e8e\u5176\u4ed6\u5199\u5165\u91cd\u65b0\u6392\u5e8f\u5199\u5165\uff0c\u800cX86\u4e0d\u4f1a\u3002\u56e0\u6b64\uff0cCalculate\u7ebf\u7a0b\u53ef\u4ee5\u770b\u5230\u975e\u7a7a\u6307\u9488\uff0c\u5e76\u5728\u503c\u88ab\u5199\u5165\u4e4b\u524d\u5f00\u59cb\u4ece\u7247\u4e2d\u8bfb\u53d6\u503c\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7a0b\u5e8f\u4e2d\u7684\u5927\u591a\u6570\u5185\u5b58\u64cd\u4f5c\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9CPU\u53ef\u4ee5\u81ea\u7531\u5730\u91cd\u65b0\u5b89\u6392\u64cd\u4f5c\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6027\u80fd\u3002\u6211\u4eec\u53ea\u60f3\u6307\u5b9a\u786e\u4fdd\u6b63\u786e\u6027\u6240\u9700\u7684\u6700\u5c0f\u7ea6\u675f\u3002\n\u5728\u6211\u4eec\u7684GENERATE\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7247\u4e2d\u7684\u503c\u4ee5\u7ed9\u6211\u4eec\u6700\u5feb\u7684\u987a\u5e8f\u5199\u5165\u5185\u5b58\u3002\u4f46\u662f\uff0c\u5728\u6211\u4eec\u5c06\u503c\u5199\u5165\u5171\u4eab\u6307\u9488\u4e4b\u524d\uff0c\u6240\u6709\u5199\u5165\u90fd\u5fc5\u987b\u5b8c\u6210\u3002\n\u4ece\u8ba1\u7b97\u4e0a\u770b\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u3002\u6211\u4eec\u8981\u6c42\u4ece\u7247\u5185\u5b58\u8bfb\u53d6\u7684\u503c\u81f3\u5c11\u6765\u81ea\u4e0e\u5171\u4eab\u6307\u9488\u7684\u503c\u76f8\u540c\u7684\u65f6\u95f4\u70b9\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u6307\u4ee4\u5728\u5171\u4eab\u6307\u9488\u7684\u8bfb\u53d6\u5b8c\u6210\u540e\u624d\u4f1a\u53d1\u51fa\uff0c\u4f46\u6211\u4eec\u9700\u8981\u63a9\u7801\u6765\u786e\u4fdd\u6211\u4eec\u4e0d\u4f1a\u4ece\u8fc7\u65f6\u7684\u7f13\u5b58\u4e2d\u83b7\u53d6\u503c\u3002\n\u4e3a\u4e86\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\uff0c\u5bf9\u5171\u4eab\u6307\u9488\u7684\u5199\u5165\u5fc5\u987b\u5177\u6709\u91ca\u653e\u6392\u5e8f\uff0c\u5e76\u4e14\u7531\u4e8e\u8ba1\u7b97\u4e2d\u7684\u8bfb\u53d6\u987a\u5e8f\u8981\u6c42\uff0c\u6211\u4eec\u4f7f\u7528\u83b7\u53d6\u6392\u5e8f\u3002\n\u6211\u4eec\u5bf9\u6570\u636e\u7684\u521d\u59cb\u5316\u4e0d\u4f1a\u6539\u53d8\uff0c\u6211\u4eec\u7684SUM\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u6539\u53d8\uff0c\u6211\u4eec\u60f3\u8ba9CPU\u81ea\u7531\u5730\u6267\u884c\u6700\u9ad8\u6548\u7684\u64cd\u4f5c\u3002\nstruct SynchronisedSumFixed{Shared\uff1aAtomicPtr&lt\uff1bu32&gt\uff1b\uff0cSamples\uff1ausize\uff0c}Impl SynchronisedSumFixed{fn new(Samples\uff1ausize)-&gt\uff1bSelf{assert\uff01((Samples As U32)&lt\uff1bu32\uff1a\uff1aMax)\uff1bSelf{Shared\uff1aAtomicPtr\uff1a\uff1aNew(std\uff1a\uff1aptr\uff1a\uff1anull_mut())\uff0cSamples\uff0c}}FN Generate(&amp\u3002self){//\u5904\u7406\u6b64\u7ebf\u7a0b\u62e5\u6709\u7684\u6570\u636e\uff0c\u8ba9mut data\uff1abox&lt\uff1b[u32]&gt\uff1b=(0.\u3002Self.Samples as u32).Collect()\uff1b//\u5c06\u6b64\u6570\u636e\u53d1\u5e03(\u4e5f\u79f0\u4e3a\u91ca\u653e)\u5230\u5176\u4ed6\u7ebf\u7a0bunsafe{sel.share.store(data.as_mut_ptr()\uff0corder\uff1a\uff1arelease)\uff1b}std\uff1a\uff1amem\uff1a\uff1aforget(Data)\uff1b}fn Calculate(&amp\uff1bself\uff0cexpecred_sum\uff1au32){loop{let data_ptr=unsafe{sel.Shared.load(order\uff1a\uff1aAcquiire)}\uff1b//\u5f53\u6307\u9488\u4e3a\u975eNULL\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u5b89\u5168\u5730\u83b7\u53d6\u4e86\u5bf9\u5168\u5c40\u6570\u636e\u7684\u5f15\u7528\uff0c\u5982\u679c\uff01data_ptr.is_null(){let data=unsafe{std\uff1a\uff1aSlice\uff1a\uff1afrom_raw_part(data_ptr\uff0cself.sample)}\uff1b\u8bbemut sum=0\uff1bfor i in(0.\u3002Self.Samples).rev(){sum+=data[i]\uff1b}assert_eq\uff01(sum\uff0cprojected_sum)\uff1bBreak\uff1b}\u3002\n\u5f53\u5728\u591a\u4e2aCPU\u4e0a\u5de5\u4f5c\u65f6\uff0c\u4f7f\u7528\u539f\u5b50\u6a21\u5757\u4ecd\u7136\u9700\u8981\u5c0f\u5fc3\u3002\u6b63\u5982\u6211\u4eec\u5728\u67e5\u770bX86\u548cARM\u7a0b\u5e8f\u96c6\u8f93\u51fa\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u5982\u679c\u6211\u4eec\u5728\u6211\u4eec\u7684\u5546\u5e97\u4e0a\u7528Ording\uff1a\uff1aRelease\u66ff\u6362Order\uff1a\uff1aRelease\uff0c\u6211\u4eec\u5c06\u8fd4\u56de\u5230\u5728x86\u4e0a\u5de5\u4f5c\u6b63\u5e38\u4f46\u5728ARM\u4e0a\u5931\u8d25\u7684\u7248\u672c\u3002\n\u4f7f\u7528\u539f\u5b50\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u5458\u6709\u8d23\u4efb\u901a\u8fc7\u4f7f\u7528\u592a\u5f31\u7684\u6392\u5e8f\u6765\u786e\u4fdd\u6ca1\u6709\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\n\u8fd9\u53ea\u662f\u5bf9\u5185\u5b58\u6a21\u578b\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u5e0c\u671b\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u4e0d\u719f\u6089\u7684\u4eba\u4f1a\u5f88\u6e05\u695a\u3002\n\u6211\u60f3\u6211\u5bf9\u65e0\u9501\u7f16\u7a0b\u7684\u7b2c\u4e00\u6b21\u4ecb\u7ecd\u662f\u8fd9\u7bc7\u6587\u7ae0\u3002\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u5e76\u4e0d\u76f8\u5173\uff0c\u56e0\u4e3a\u8be6\u7ec6\u4fe1\u606f\u6db5\u76d6\u4e86C++\u3001Xbox360\u4e2d\u7684PowerPC CPU\u548cWindows API\u3002\u4f46\u8fd9\u4ecd\u7136\u662f\u5bf9\u8fd9\u4e9b\u539f\u5219\u7684\u5f88\u597d\u89e3\u91ca\u3002\u53e6\u5916\uff0c\u5f00\u573a\u767d\u4e2d\u7684\u8fd9\u6bb5\u8bdd\u4ecd\u7136\u7ad9\u4e0d\u4f4f\u811a\uff1a\n\u65e0\u9501\u7f16\u7a0b\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u4e00\u79cd\u6709\u6548\u6280\u672f\uff0c\u4f46\u4e0d\u80fd\u6389\u4ee5\u8f7b\u5fc3\u3002\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\uff0c\u60a8\u5fc5\u987b\u4e86\u89e3\u5b83\u7684\u590d\u6742\u6027\uff0c\u5e76\u4e14\u60a8\u5e94\u8be5\u4ed4\u7ec6\u6d4b\u91cf\u4ee5\u786e\u4fdd\u5b83\u786e\u5b9e\u7ed9\u60a8\u5e26\u6765\u4e86\u60a8\u671f\u671b\u7684\u6536\u76ca\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u6709\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\u4e0d\u90a3\u4e48\u9891\u7e41\u5730\u5171\u4eab\u6570\u636e\uff0c\u5e94\u8be5\u6539\u4e3a\u4f7f\u7528\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u3002\n\u5e0c\u671b\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u7cfb\u7edf\u7f16\u7a0b\u7684\u4e00\u4e2a\u65b0\u65b9\u9762\uff0c\u968f\u7740ARM\u82af\u7247\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\uff0c\u8fd9\u4e00\u65b9\u9762\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u786e\u4fdd\u539f\u5b50\u4ee3\u7801\u7684\u6b63\u786e\u6027\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u4f46\u662f\u5f53\u4f7f\u7528\u4e0d\u540c\u7684\u5185\u5b58\u6a21\u578b\u8de8\u4e0d\u540c\u7684\u67b6\u6784\u5de5\u4f5c\u65f6\uff0c\u5b83\u5c31\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u4e86\u3002", "note_en": "With Apple\u2019s recent announcement that they are moving away from Intel X86 CPU\u2019s to their own ARM CPU\u2019s for future laptops and desktops I thought it would be a good time to take a look at the some differences that can affect systems programmers working in Rust.\n One of the key areas where ARM CPU\u2019s differ from X86 is their memory model. This article will take a look at what a memory model is and how it can cause code to be correct on one CPU but cause race conditions on another.\n  The way loads and stores to memory interact between multiple threads on a specific CPU is called that architecture\u2019s Memory Model.\n Depending on the memory model of the CPU, multiple writes by one thread may become visible to another thread in a different order to the one they were issued in.\n The same is true of a thread issuing multiple reads. A thread issuing multiple reads may receive \u201csnapshots\u201d of global state that represent points in time ordered differently to the order of issue.\n Modern hardware needs this flexibility to be able to maximize the throughput of memory operations. While CPU clock rates and core counts have been increasing with each new CPU iteration, memory bandwidth has struggled to keep up. Moving data from memory to operate on is often the bottle neck in the performance of applications.\n If you\u2019ve never written multi-threaded code, or only done so using higher level synchronization primitives such as  std::sync::Mutex, you\u2019ve probably never been exposed to the details of the memory model. This is because the CPU, despite whatever reordering it\u2019s memory model allows it to perform, always presents a consistent view of memory to the current thread.\n If we look at the below snippet of code that writes to memory and then reads the same memory straight back, we will always get the expected value of  58 back when we read. There is never the case that we\u2019d read some stale value from memory.\n pub  unsafe  fn  read_after_write ( u32_ptr :  * mut  u32 )  {  u32_ptr .write_volatile ( 58 );  let  u32_value  =  u32_ptr .read_volatile ();  println! ( &#34;the value is {}&#34; ,  u32_value ); }\n I\u2019m using volatile operations because if I used normal pointer operations the compiler is smart enough to skip the memory read and just prints the value  58. Volatile operations stop the compiler from reordering or skipping our memory operation. However they have no affect on hardware.\n Once we introduce multiple threads, we\u2019re now exposed to the fact that the CPU may be reordering our memory operations.\n  pub  unsafe  fn  writer ( u32_ptr_1 :  * mut  u32 ,  u32_ptr_2 :  * mut  u32 )  {  u32_ptr_1 .write_volatile ( 58 );  u32_ptr_2 .write_volatile ( 42 ); } pub  unsafe  fn  reader ( u32_ptr_1 :  * mut  u32 ,  u32_ptr_2 :  * mut  u32 )  -&gt;  ( u32 ,  u32 )  {  ( u32_ptr_1 .read_volatile (),  u32_ptr_2 .read_volatile ()) }\n If we initialize the contents of both pointers to  0, and then run each function in a different thread, we can list the possible outcomes for the reader. We know that there is no synchronization, but based on our experience with single threaded code we think the possible return values are  (0, 0),  (58, 0) or  (58, 42). But the possibility of hardware reordering of memory writes affecting multi-threads means that there is a fourth option  (0, 42).\n You might think there are more possibilities due to the lack of synchronization. But all hardware memory models guarantee that aligned loads and store up to the native word size are atomic (u32 or a 32-bit CPU, u64 on a 64-bit CPU). If we changed one of our writes to  0xFFFF_FFFF, the read will only ever see the old value or the new value. It will never see a partial value like  0xFFFF_0000.\n If the details of the CPU\u2019s memory model are hidden away when using regular memory accesses, it seems like we would have no way to control it in multi-threaded programs where it affects program correctness.\n Luckily Rust provides as with the  std::sync::atomic module containing types that gives us the control we need. We use these types to specify exactly the memory ordering requirements our code needs. We trade performance for correctness. We place restrictions on what order the hardware can perform memory operations, taking away any bandwidth optimizations the hardware would want to perform.\n When working with the  atomic module, we don\u2019t worry about the actual memory models of individual CPU architectures. Instead the operation of the  atomic module works on an abstract memory model that\u2019s CPU agnostic. Once we\u2019ve expressed our requirements on the loads and stores using this Rust memory model, the compiler does the job of mapping to the memory model of the target CPU.\n The requirements we specify on each operation takes the form of what reordering we want to allow (or deny) on the operation. The orderings form a hierarchy, with each level placing more restrictions the CPU. For example  Ordering::Relaxed means the CPU is free to perform any reordering it wants.  Ordering::Release means that a store can only complete after all proceeding stores have finished.\n Let\u2019s look at how atomic memory writes are actually compiled, compared to a regular write.\n use  std :: sync :: atomic :: * ; pub  unsafe  fn  test_write ( shared_ptr :  * mut  u32 )  {  * shared_ptr  =  58 ; } pub  unsafe  fn  test_atomic_relaxed ( shared_ptr :  &amp; AtomicU32 )  {  shared_ptr .store ( 58 ,  Ordering :: Relaxed ); } pub  unsafe  fn  test_atomic_release ( shared_ptr :  &amp; AtomicU32 )  {  shared_ptr .store ( 58 ,  Ordering :: Release ); } pub  unsafe  fn  test_atomic_consistent ( shared_ptr :  &amp; AtomicU32 )  {  shared_ptr .store ( 58 ,  Ordering :: SeqCst ); }\n If we look at the  X86 assembly for the above code, we see the first three functions produce identical code. It\u2019s not until the stricter  SeqCst ordering that we get a different instruction being produced.\n example: : test_write:  mov  dword  ptr  [ rdi ],  58  ret example: : test_atomic_relaxed:  mov  dword  ptr  [ rdi ],  58  ret example: : test_atomic_release:  mov  dword  ptr  [ rdi ],  58  ret  example: : test_atomic_consistent:  mov  eax ,  58  xchg  dword  ptr  [ rdi ],  eax  ret\n The first two orderings use the   MOV ( MOVe) instruction to write the value to memory. Only the strictest ordering produces a different instruction,   XCHG (atomic e XCHan G), to a raw pointer write.\n  example: : test_write:  mov  w8 ,  # 58  str  w8 ,  [ x0 ]  ret example: : test_atomic_relaxed:  mov  w8 ,  # 58  str  w8 ,  [ x0 ]  ret example: : test_atomic_release:  mov  w8 ,  # 58  stlr  w8 ,  [ x0 ]  ret  example: : test_atomic_consistent:  mov  w8 ,  # 58  stlr  w8 ,  [ x0 ]  ret\n In contrast we can see there is a difference once we hit the release ordering requirement. The raw pointer and relaxed atomic store use   STR ( STore  Register) while the release and sequential ordering uses the instruction   STLR ( STore with re Lease  Register).  The   MOV instruction is this disassembly is moving the constant  58 into a register, it\u2019s not a memory operation.\n We should be able to see the risk here. The mapping between the theoretical Rust memory model and the X86 memory model is more forgiving to programmer error. It\u2019s possible for us to write code that is wrong with respect to the abstract memory model, but still have it produce the correct assembly code and work correctly on some CPU\u2019s.\n  The program we\u2019ll be exploring builds upon the concept of storing a pointer value being atomic across threads. One thread is going to perform some work using a mutable object it owns. Once it\u2019s finished that work it\u2019s going to publish that work as an immutable shared reference, using an atomic pointer write to both signal the work is complete and allow reading threads to use the data.\n  If we really want to test how forgiving the X86\u2019s memory model is, we can write multi-threaded code that skips any use of the  std::sync::atomic module. I want to stress this is not something you should ever actually consider doing. In fact this code is probably undefined behavior. This is an learning exercise only.\n pub  struct  SynchronisedSum  {  shared :  UnsafeCell &lt;* const  u32 &gt; ,  samples :  usize , } impl  SynchronisedSum  {  pub  fn  new ( samples :  usize )  -&gt;  Self  {  assert ! (( samples  as  u32 )  &lt;=  u32 :: MAX );  Self  {  shared :  UnsafeCell :: new ( std :: ptr :: null ()),  samples ,  }  }  pub  fn  generate ( &amp; self )  {  // do work on data this thread owns  let  data :  Box &lt; [ u32 ] &gt;  =  ( 0 .. self .samples  as  u32 ) .collect ();  // publish to other threads  let  shared_ptr  =  self .shared .get ();  unsafe  {  shared_ptr .write_volatile ( data .as_ptr ());  }  std :: mem :: forget ( data );  }  pub  fn  calculate ( &amp; self ,  expected_sum :  u32 )  {  loop  {  // check if the work has been published yet  let  shared_ptr  =  self .shared .get ();  let  data_ptr  =  unsafe  {  shared_ptr .read_volatile ()  };  if  ! data_ptr .is_null ()  {  // the data is now accessible by multiple threads, treat it as an immutable reference.  let  data  =  unsafe  {  std :: slice :: from_raw_parts ( data_ptr ,  self .samples )  };  let  mut  sum  =  0 ;  for  i  in  ( 0 .. self .samples ) .rev ()  {  sum  +=  data [ i ];  }  // did we access the data we expected?  assert_eq! ( sum ,  expected_sum );  break ;  }  }  } }\n The function that calculates the sum of the array starts by executing a loop that reads the value of the shared pointer. Because of the atomic store guarantee we know that  read_volatile() will only ever return  null or a pointer to our  u32 slice. We simply keep looping until the generate thread has finished and published it\u2019s work. Once it\u2019s published we can read it and calculate the sum of all elements.\n  As a simple test we\u2019re going to run two threads simultaneously, one to generate the values and another to calculate the sum. Both threads exit after performing their work and we\u2019ll wait for both of them to finish using  join.\n pub  fn  main ()  {  print_arch ();  for  i  in  0 .. 10_000  {  let  sum_generate  =  Arc :: new ( SynchronisedSum :: new ( 512 ));  let  sum_calculate  =  Arc :: clone ( &amp; sum_generate );  let  calculate_thread  =  thread :: spawn ( move  ||  {  sum_calculate .calculate ( 130816 );  });  thread :: sleep ( std :: time :: Duration :: from_millis ( 1 ));  let  generate_thread  =  thread :: spawn ( move  ||  {  sum_generate .generate ();  });  calculate_thread  .join ()  .expect ( &amp; format! ( &#34;iteration {} failed&#34; ,  i ));  generate_thread .join () .unwrap ();  }  println! ( &#34;all iterations passed&#34; ); }\n    running on aarch64thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;assertion failed: `(left == right)` left: `122824`, right: `130816`&#39;, src\\main.rs:45:17note: run with `RUST_BACKTRACE=1` environment variable to display a backtracethread &#39;main&#39; panicked at &#39;iteration 35 failed: Any&#39;, src\\main.rs:128:9\n The x86 processor was able to run the test successfully all 10,000 times, but the ARM processor failed on the 35th attempt.\n  Correct functioning of our pattern requires that all the \u201cwork\u201d we\u2019re doing is in the correct state in memory, before we perform the final write to the shared pointer to publish it to other threads.\n Where the memory model of ARM differs from X86 is that ARM CPU\u2019s will re-order writes relative to other writes, whereas X86 will not. So the calculate thread can see a non-null pointer and start reading values from the slice before they\u2019ve been written.\n For most of the memory operations in our program we want to give the CPU the freedom to re-arrange operations to maximize performance. We only want to specify the minimal constraints necessary to ensure correctness.\n In the case of our  generate function we want the values in the slice to be written to memory in whatever order gives us the most speed. But all writes must be complete before we write our value to the shared pointer.\n The opposite is true on the  calculate. We have a requirement the values we read from the slice memory are from at least the same point in time as value of the shared pointer. Although those instructions won\u2019t be issued until the read of the shared pointer has completed, we need the mask sure that we\u2019re not getting values from a stale cache.\n  In order to ensure correctness of our code the write to the shared pointer must have release ordering, and because of the read order requirements in  calculate we use acquire ordering.\n Our initialization of the data doesn\u2019t change, neither does our sum code, we want to give the CPU the freedom to perform that however is most efficient.\n struct  SynchronisedSumFixed  {  shared :  AtomicPtr &lt; u32 &gt; ,  samples :  usize , } impl  SynchronisedSumFixed  {  fn  new ( samples :  usize )  -&gt;  Self  {  assert ! (( samples  as  u32 )  &lt;  u32 :: MAX );  Self  {  shared :  AtomicPtr :: new ( std :: ptr :: null_mut ()),  samples ,  }  }  fn  generate ( &amp; self )  {  // do work on data this thread owns  let  mut  data :  Box &lt; [ u32 ] &gt;  =  ( 0 .. self .samples  as  u32 ) .collect ();  // publish (aka release) this data to other threads  unsafe  {  self .shared .store ( data .as_mut_ptr (),  Ordering :: Release );  }  std :: mem :: forget ( data );  }  fn  calculate ( &amp; self ,  expected_sum :  u32 )  {  loop  {  let  data_ptr  =  unsafe  {  self .shared .load ( Ordering :: Acquire )  };  // when the pointer is non null we have safely acquired a reference to the global data  if  ! data_ptr .is_null ()  {  let  data  =  unsafe  {  std :: slice :: from_raw_parts ( data_ptr ,  self .samples )  };  let  mut  sum  =  0 ;  for  i  in  ( 0 .. self .samples ) .rev ()  {  sum  +=  data [ i ];  }  assert_eq! ( sum ,  expected_sum );  break ;  }  }  } }\n    Using the  atomic module still requires care when working across multiple CPU\u2019s. As we saw from looking at the X86 vs ARM assembly outputs, if we replace  Ordering::Release with  Ordering::Relaxed on our  store we\u2019d be back to a version that worked correctly on x86 but failed on ARM.\n The use of  atomic is unsafe because it\u2019s the responsibility of the programmer to ensure there is no undefined behavior by using too weak an ordering.\n  This is just a brief introduction to memory models, hopefully it\u2019s clear to someone unfamiliar with the topic.\n  I think my first introduction to lock-free programming was this  article. It may not seem relevant because the details cover C++, the PowerPC CPU in the Xbox360, and Windows APIs. But it\u2019s still a good explanation of the principles. Also this paragraphs from the opening still hold ups:\n Lockless programming is a valid technique for multithreaded programming, but it should not be used lightly. Before using it you must understand the complexities, and you should measure carefully to make sure that it is actually giving you the gains that you expect. In many cases, there are simpler and faster solutions, such as sharing data less frequently, which should be used instead.\n  Hopefully we\u2019ve learnt about a new aspect of systems programming that will become increasingly important as ARM chips become more common. Ensuring correctness of atomic code has never been easy but it gets harder when working across different architectures with varying memory models.", "posttime": "2020-06-27 16:04:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u5185\u5b58,\u9508\u8680,memory", "title": "\u4f7f\u7528\u9508\u8680\u68c0\u67e5ARM\u4e0ex86\u5185\u5b58\u578b\u53f7", "title_en": "Examining ARM vs. x86 Memory Models with Rust", "transed": 1, "url": "https://www.nickwilcox.com/blog/arm_vs_x86_memory_model/", "via": "", "real_tags": ["rust", "\u5185\u5b58", "\u9508\u8680", "memory"]}, {"category": "", "categoryclass": "", "imagename": "b4a44babc93cd09265b54fabe11cd38e.jpeg", "infoid": 1008533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7761\u4e2a\u597d\u89c9\u662f\u65b0\u7684\u7518\u84dd\u3002\u201c\u53a8\u5e08\u5927\u536b\u00b7\u5e03\u5229\u6700\u8fd1\u8bf4\u3002\u201c\u6bcf\u4e2a\u4eba\u90fd\u60f3\u5403\uff0c\u8fd9\u5bf9\u4f60\u7684\u5065\u5eb7\u6709\u597d\u5904\u3002\u201d\u4ed6\u662f\u5728\u66fc\u54c8\u987f\u9910\u5385Bouley at Home\u5411\u4e0e\u4f1a\u8005\u53d1\u8868\u8bb2\u8bdd\u65f6\u8bf4\u8fd9\u756a\u8bdd\u7684\uff0c\u8fd9\u662f\u4e00\u9879\u9887\u53d7\u6b22\u8fce\u7684\u6559\u80b2\u665a\u5bb4\u7cfb\u5217\u3002\u5728\u6d3b\u52a8\u4e2d\uff0cBronxCare\u5065\u5eb7\u7cfb\u7edf\u7684\u5185\u79d1\u533b\u751f\u3001\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u7814\u7a76\u5b66\u8005\u5510\u53cb\u5170\u535a\u58eb\u89e3\u91ca\u4e86\u6211\u4eec\u7684\u996e\u98df\u548c\u7761\u7720\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u7528\u9910\u8005\u4e00\u8fb9\u4ed4\u7ec6\u542c\u7740\uff0c\u4e00\u8fb9\u4eab\u53d7\u7740\u4e00\u987f\u7a81\u51fa\u7761\u7720\u53cb\u597d\u83dc\u80b4\u7684\u665a\u9910\uff0c\u6bd4\u5982\u81ea\u5236\u7684\u6838\u6843\u8c46\u8150\u914d\u6838\u6843\u9171\uff0c\u53d1\u82bd\u7cd9\u7c73\u914d\u91ce\u751f\u9999\u83c7\u2026", "note_en": "A GOOD NIGHT\u2019S sleep is the new kale,\u201d chef David Bouley said recently. \u201cEveryone wants it and it\u2019s good for your health.\u201d He was addressing participants in \u201cThe Chef and The Doctor,\u201d a popular educational dinner series at his Manhattan restaurant Bouley at Home. During the event Dr. Youlan Tang , a physician in the BronxCare Health System and research scholar at Columbia University , explained the connection between what we eat and how we sleep. Diners listened keenly while enjoying a meal that highlighted sleep-friendly dishes, such as homemade walnut tofu with walnut dressing, sprouted brown rice with wild shiitake...", "posttime": "2020-06-27 16:04:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7761\u7720,eat,\u6838\u6843", "title": "\u5982\u679c\u4f60\u60f3\u8981\u66f4\u597d\u7684\u7761\u7720\uff0c\u5982\u4f55\u8fdb\u98df", "title_en": "How to Eat If You Want Better Sleep", "transed": 1, "url": "https://www.wsj.com/articles/how-to-eat-if-you-want-better-sleep-11585138783", "via": "", "real_tags": ["\u7761\u7720", "eat", "\u6838\u6843"]}, {"category": "", "categoryclass": "", "imagename": "36bacccb6f9846dad141a3901cf287ac.png", "infoid": 1008531, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u63a8\u51fa\u7b2c\u4e94\u7248\u4e5f\u662f\u6700\u540e\u4e00\u7248\u7684\u201c\u5f15\u5bfc\u56fe\u6807\u201d(Bootstrap Icons)\u3002\u5728\u4eca\u5929\u7684alpha\u53d1\u5e03\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u5bf9\u73b0\u6709\u56fe\u6807\u8fdb\u884c\u6700\u540e\u7684\u4fee\u9970\uff0c\u5173\u95ed\u66f4\u591a\u7684\u8bf7\u6c42\uff0c\u5e76\u4e3a\u7a33\u5b9a\u7684v1\u7248\u672c\u505a\u597d\u51c6\u5907\u3002\u656c\u8bf7\u5173\u6ce8\uff01\n\u8fd9\u4e00\u7248\u672c\u589e\u52a0\u4e86\u8fd1300\u4e2a\u65b0\u7684\u5b57\u5f62\uff0c\u5c06\u6211\u4eec\u5e26\u5230\u4e861000\u591a\u4e2a\u56fe\u6807\u3002\u6211\u4eec\u5145\u5b9e\u4e86\u6240\u6709\u7684\u65e5\u5386\u56fe\u6807\u4ee5\u589e\u52a0\u8303\u56f4\u548c\u4e8b\u4ef6\uff0c\u6dfb\u52a0\u4e86\u4e00\u5957\u65b0\u7684\u7535\u8bdd\u56fe\u6807\uff0c\u6dfb\u52a0\u4e86\u5927\u91cf\u7684\u65b0\u8bbe\u5907\u548c\u786c\u4ef6\u56fe\u6807\uff0c\u51e0\u5341\u4e2a\u5fbd\u7ae0\uff0c\u7b49\u7b49\u3002\n\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u7684alpha\u7248\u672c\u4e00\u6837\uff0c\u6211\u4eec\u4e0d\u4ec5\u6709\u5927\u91cf\u7684\u5168\u65b0\u56fe\u6807\uff0c\u800c\u4e14\u8fd8\u5bf9\u73b0\u6709\u56fe\u6807\u8fdb\u884c\u4e86\u6570\u5341\u6b21\u4fee\u6b63\u548c\u6539\u8fdb\u3002\u6211\u4eec\u6539\u8fdb\u4e86\u6211\u4eec\u7684\u8def\u5f84\u4ee5\u51cf\u5c0f\u56fe\u6807\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u4f7f\u5176\u50cf\u7d20\u5b8c\u7f8e\uff0c\u5728\u6211\u4eec\u7684\u56fe\u5f62\u6587\u4ef6\u4e2d\u51cf\u5c11\u77e2\u91cf\u9ed1\u5ba2\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u66f4\u65b0\u4e86\u56fe\u6807\u5904\u7406\u811a\u672c\uff0c\u4ee5\u5206\u522b\u8bfb\u53d6\u6bcf\u4e2aSVG\u7684ViewBox\u5c3a\u5bf8\uff0c\u4ee5\u8bbe\u7f6e\u5b83\u4eec\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5728\u672a\u6765\u7684\u66f4\u65b0\u4e2d\uff0c\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u5404\u79cd\u5c3a\u5bf8\u7684\u56fe\u6807\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u768416x16\u3002\n\u9664\u4e86\u6570\u767e\u4e2a\u65b0\u56fe\u6807\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684bootstrap-icons.svg\u7cbe\u7075\u3002\u5bf9\u4e8eSVG\u7cbe\u7075\u7684\u65b0\u624b\u6765\u8bf4\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u6574\u4e2a\u9879\u76ee\u4e2d\u52a0\u8f7d\u5355\u4e2a\u8d44\u6e90\u5e76\u5f15\u7528\u5b83\u7684\u7247\u6bb5\uff0c\u800c\u65e0\u9700\u63d2\u5165SVG\u7684\u6574\u4e2aHTML\u3002\n&lt\uff1bSVG class=&#34\uff1bbi&#34\uff1bwidth=&#34\uff1b32&#34\uff1b\u9ad8\u5ea6=&#34\uff1b32&#34\uff1bFill=&#34\uff1bcurrentColor&#34\uff1b&gt\uff1b&lt\uff1buse xlink\uff1ahref=&#34\uff1bbootstrap-icons.svg#HEAT-Fill&#34\uff1b/&gt\uff1b&lt\uff1b/SVG&gt\uff1b&lt\uff1bSVG class=&#34\uff1bbi&\u3002Fill=&#34\uff1bcurrentColor&#34\uff1b&gt\uff1b&lt\uff1buse xlink\uff1ahref=&#34\uff1bbootstrap-icons.svg#toggles&#34\uff1b/&gt\uff1b&lt\uff1b/SVG&gt\uff1b&lt\uff1bSVG class=&#34\uff1bbi&#34\uff1bwidth=&#34\uff1b32&#34\uff1bHeight=&#34\uff1b32&#34\uff1bFill=&#34\uff1bcurrentColor&#34\uff1b&lt\uff1b/svg&gt\uff1b\n\u6211\u4eec\u5e0c\u671b\u5c06\u6765\u80fd\u56f4\u7ed5\u8fd9\u4e00\u70b9\u8fdb\u884c\u4e00\u4e9b\u4f18\u5316\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u9996\u6b21\u5c1d\u8bd5\u4f7f\u7528SVG\u7cbe\u7075\u7cfb\u7edf\u3002\u6211\u4eec\u7684\u95ee\u9898\u603b\u662f\u6b22\u8fce\u53cd\u9988\u548c\u60f3\u6cd5\uff01\n\u5728v1\u7684\u7a33\u5b9a\u7248\u672c\u4e2d\uff0c\u6700\u5927\u7684\u5355\u4e00\u529f\u80fd\u5c06\u662f\u56fe\u6807\u7f51\u9875\u5b57\u4f53\u3002\u516c\u5173\u6b63\u5728\u8fdb\u884c\u4e2d\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7684SVG\u8def\u5f84\u6e05\u7406\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5de5\u5177\u6539\u8fdb\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5b83\u611f\u89c9\u5f88\u6709\u524d\u9014\uff01\n\u867d\u7136\u56fe\u6807\u5b57\u4f53\u51fa\u4e8e\u51e0\u4e2a\u5b9e\u73b0\u539f\u56e0\u662f\u5f88\u68d2\u7684\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u5bf9\u4e8e\u60a8\u7684\u8bbf\u95ee\u8005\u6765\u8bf4\uff0c\u5b83\u4eec\u672c\u8eab\u5e76\u4e0d\u662f\u6700\u5bb9\u6613\u8bbf\u95ee\u7684\u9009\u9879\u3002SVG\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u63a7\u5236\u548c\u6837\u5f0f\u9009\u9879\uff0c\u5e76\u5141\u8bb8\u60a8\u4ece\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528\u548f\u53f9\u8c03\u89d2\u8272\u548c\u6807\u9898\u8fdb\u884c\u8bbf\u95ee\u3002\n\u5982\u679c\u60a8\u6709\u5173\u4e8e\u5982\u4f55\u6539\u8fdb\u6211\u4eec\u7684\u56fe\u6807\u3001\u6587\u6863\u6216\u5de5\u5177\u4ee5\u4f7f\u5176\u66f4\u6613\u4e8e\u8bbf\u95ee\u548c\u5e73\u6613\u8fd1\u4eba\u7684\u5176\u4ed6\u63d0\u793a\uff0c\u8bf7\u6beb\u4e0d\u72b9\u8c6b\u5730\u4e0e\u6211\u4eec\u5206\u4eab\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u6e05\u7406\u548c\u6539\u8fdb\u73b0\u6709\u7684\u56fe\u6807\uff0c\u7136\u540e\u76ee\u6807\u662f\u6dfb\u52a0\u4e00\u4e9b\u65b0\u7684\u56fe\u6807\u3002\nAlpha5\u5df2\u7ecf\u53d1\u5e03\u5230GitHub\u548cNPM(\u5305\u540d\u4e3abootstrap-icons)\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u5230v1.0.0-alpha5\u6216\u4eceFigma\u83b7\u53d6\u56fe\u6807\uff0c\u4eceGitHub\u83b7\u5f97\u5b83\u3002", "note_en": "Today we\u2019re shipping our fifth and final alpha release of  Bootstrap Icons. After today\u2019s alpha release, we\u2019ll be moving onto final touch ups of existing icons, closing out some more requests, and buttoning things up for a stable v1 release. Stay tuned!\n  This release adds nearly 300 new glyphs, taking us right past 1,000 icons. We\u2019ve fleshed out all our calendar icons to add ranges and events, added a suite of new phone icons, added tons of new devices and hardware icons, dozens of badges, and so much more.\n  As was the case with our previous alpha releases, not only do we have tons of brand new icons, but also dozens of fixes and refinements to existing ones. We\u2019ve improved our paths to reduce icon file sizes, spending more time making things pixel perfect and with fewer vector hacks in our Figma files. In addition, we\u2019ve updated our icon processing script to read the  viewBox dimensions of each SVG individually to set their  width and  height. In future updates, this will allow us to create icons of various dimensions instead of our default 16x16.\n  In addition to hundreds of new icons, we\u2019ve added a new  bootstrap-icons.svg sprite. For those new to SVG sprites, it allows you to load a single asset and reference fragments of it across your project without inserting the entire HTML for the SVG.\n  &lt;svg  class= &#34;bi&#34;  width= &#34;32&#34;  height= &#34;32&#34;  fill= &#34;currentColor&#34; &gt;  &lt;use  xlink:href= &#34;bootstrap-icons.svg#heart-fill&#34; /&gt; &lt;/svg&gt; &lt;svg  class= &#34;bi&#34;  width= &#34;32&#34;  height= &#34;32&#34;  fill= &#34;currentColor&#34; &gt;  &lt;use  xlink:href= &#34;bootstrap-icons.svg#toggles&#34; /&gt; &lt;/svg&gt; &lt;svg  class= &#34;bi&#34;  width= &#34;32&#34;  height= &#34;32&#34;  fill= &#34;currentColor&#34; &gt;  &lt;use  xlink:href= &#34;bootstrap-icons.svg#shop&#34; /&gt; &lt;/svg&gt;\n We hope to include some optimizations around this in the future as it\u2019s our first endeavor into an SVG sprite system. Feedback and ideas are always welcome in our issues!\n  The single biggest feature coming in v1\u2019s stable release will be  icon web fonts. There\u2019s a PR underway that requires further SVG path cleanup, as well as some tooling improvements. Overall it feels pretty promising!\n While icon fonts are great for a handful of implementation reasons, please be aware that they are not inherently the most accessible option for your visitors. SVGs provide more control and styling options, and allow you to be accessible from the start with  aria roles and  &lt;title&gt;s.\n If you have additional tips for how we can improve our icons, documentation, or tooling to be more accessible and approachable, don\u2019t hesitate to share.\n Beyond that, we\u2019ll continue to clean up and improve existing icons and then aim to add a handful of new icons.\n  Alpha 5 has been published to GitHub and npm (package name  bootstrap-icons). Get your hands on it  from GitHub, by updating to  v1.0.0-alpha5, or by snagging the  icons from Figma.", "posttime": "2020-06-27 16:03:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fe\u6807,icons", "title": "\u5f15\u5bfc\u56fe\u6807Alpha 5", "title_en": "Bootstrap Icons Alpha 5", "transed": 1, "url": "https://blog.getbootstrap.com/2020/06/26/bootstrap-icons-alpha5/", "via": "", "real_tags": ["\u56fe\u6807", "icons"]}, {"category": "", "categoryclass": "", "imagename": "d37aa18f463b3604863b6fdeec0eb538.jpg", "infoid": 1008530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u6211\u63d0\u5230\u6211\u6700\u8fd1\u5b66\u4e60\u4e86JavaScript\u4e4b\u540e\uff0c\u4eba\u4eec\u5c31\u95ee\u6211\u5982\u4f55\u5b66\u4e60JavaScript\u4ee5\u53ca\u63a8\u8350\u4ec0\u4e48\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u662f\u6211\u5bf92020\u5e74\u7684\u7ecf\u9a8c\u548c\u6700\u597d\u7684\u5efa\u8bae\u3002\n\u4e0d\u8981\u4f9d\u8d56\u4e8e\u4e00\u5927\u5806\u5feb\u6377\u65b9\u5f0f\u3002JavaScript\u5c06\u5b58\u5728\u5f88\u591a\u5e74\uff0c\u800c\u5e93\u548c\u6846\u67b6\u6bcf\u5e74\u90fd\u6765\u6765\u53bb\u53bb\u3002\n\u4e0d\u8981\u53ea\u4ece\u7f51\u4e0a\u7684\u4e00\u4e9b\u5c0f\u6559\u7a0b\u3001\u5c0f\u8d34\u58eb\u6216\u5c0f\u628a\u620f\u4e2d\u5b66\u4e60\u3002\u76f8\u53cd\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u771f\u6b63\u7684\u57fa\u7840\u548c\u575a\u5b9e\u7684\u7406\u89e3\u3002\u90a3\u4e48\u4f60\u5c06\u6765\u6240\u6709\u7684\u5b66\u4e60\u90fd\u4f1a\u5feb\u5f97\u591a\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6559\u5b66\u98ce\u683c\u7684\u5f88\u597d\u7684\u4ecb\u7ecd\uff0c\u8fd9\u5bf9\u4e8e\u8ba9\u4f60\u719f\u6089\u4e00\u4e9b\u5982\u6b64\u65b0\u9c9c\u7684\u4e1c\u897f\u662f\u5f88\u91cd\u8981\u7684\u3002\u5728\u4f60\u5f00\u59cb\u66f4\u6df1\u5165\u7684\u5b66\u4e60\u4e4b\u524d\uff0c\u53ea\u9700\u5728\u51e0\u5929\u5185\u5feb\u901f\u9605\u8bfb\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\u6709600\u540dJavaScript\u5b66\u4e60\u8005\u7684\u4eba\u8bf4\uff0c\u514d\u8d39\u4ee3\u7801\u8425\u7684\u6548\u679c\u6700\u597d\u3002\u5728\u4f60\u770b\u4e66\u7684\u540c\u65f6\u505a\u8fd9\u4ef6\u4e8b\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u611f\u5b98\u5b66\u4e60\u66f4\u5bb9\u6613\u575a\u6301\u3002\n\u6211\u5f3a\u70c8\u5efa\u8bae\u4f60\u628a\u5b66\u5230\u7684\u6bcf\u4e00\u4ef6\u65b0\u4e1c\u897f\u90fd\u5199\u4e0b\u6765\uff0c\u6700\u597d\u662f\u5199\u6210\u62bd\u8ba4\u5361\u7a0b\u5e8f\uff0c\u5c31\u50cf\u8fd9\u6837\u3002\u8981\u6d88\u5316\u7684\u4e1c\u897f\u5f88\u591a\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u63d0\u9192\u81ea\u5df1\u5b66\u8fc7\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u4f1a\u9a6c\u4e0a\u5fd8\u8bb0\u7684\u3002\n\u4e4b\u540e\uff0c\u5982\u679c\u4f60\u60f3\u5de9\u56fa\u4f60\u6240\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5feb\u901f\u591a\u8bfb\u51e0\u672c\u8fd9\u6837\u7684\u4e66\uff1a\n\u65e2\u7136\u4f60\u8bf4\u5f97\u6d41\u5229\u4e86\uff0c\u8fd9\u4e9b\u4e66\u4f1a\u8bfb\u5f97\u66f4\u5feb\u3002\u73a9\u5f04\u8fd9\u4e9b\u4f8b\u5b50\u3002\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u60ca\u559c\u3002\u4f60\u53ea\u662f\u5728\u5f3a\u5316\u4f60\u6240\u77e5\u9053\u7684\u3002\n\u5728\u89e3\u51b3\u95ee\u9898\u65f6\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u7ed9\u4f60\u4e00\u4e9b\u9884\u5148\u51c6\u5907\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\u201c\u4f7f\u7528jQuery\uff01\u4f7f\u7528Reaction\uff01\u4f7f\u7528\u8fd9\u4e2a\u5e93\uff0c\u7701\u53bb\u4e86\u4e00\u4e9b\u6253\u5b57\u5de5\u4f5c\uff01\u201c\u3002\n\u4f46\u662f\u4e0d\u662f\u7684\uff01\u8fd8\u6ca1!\u7528\u5f3a\u786c\u7684\u65b9\u5f0f\u6765\u505a\u5427\u3002\u4f7f\u7528\u7eafJavaScript\u81ea\u5df1\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u8fd9\u662f\u6700\u597d\u7684\u5b66\u4e60\u65b9\u5f0f\u3002\n\u5982\u679c\u4f60\u5df2\u7ecf\u60f3\u597d\u4e86\u4e00\u6b3e\u7f51\u7edc\u5e94\u7528\uff0c\u73b0\u5728\u5c31\u5f00\u59cb\u6784\u5efa\u5427\u3002(\u597d\u7684\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u65b9\u5f0f\u3002)\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4efd\u9ad8\u85aa\u7684\u5de5\u4f5c\uff0c\u4f60\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u627e\u5230\u5de5\u4f5c\u3002\u56e0\u4e3a\u60a8\u6bd4\u5927\u591a\u6570\u4eba\u66f4\u4e86\u89e3\u771f\u6b63\u7684JavaScript\u57fa\u7840\uff0c\u6240\u4ee5\u60a8\u975e\u5e38\u6709\u4ef7\u503c\u3002\u60a8\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u4ed6\u4eec\u4f7f\u7528\u7684\u4efb\u4f55\u6846\u67b6\u3002", "note_en": "Since I\u2019ve  mentioned that I recently learned JavaScript, people have asked me how and what I recommend.\tSo here\u2019s my experience and best advice for 2020.\n   Don\u2019t depend on a library of shortcuts.\tJavaScript will be around for many years, while libraries and frameworks come and go every year.\n  Don\u2019t just learn from little bits of tutorials, tips, or tricks online.\tInstead, you want a real foundation and solid understanding.\tThen all your future learning will be so much faster.\n  It\u2019s a great introduction with a fun teaching style, which is important to get you familiar with something so new.\tJust read through it quickly in a couple days, before your deeper learning begins.\n  Someone who had 600 JavaScript learners  said Free Code Camp had the best results.\tDo it at the same time as you\u2019re reading the books.\tLearning sticks better when coming through different senses.\n  I highly recommend you  write down every new thing you learn, ideally into a flashcard program,  like this.\tIt\u2019s a lot to digest, so you\u2019ll have to remind yourself of what you\u2019ve learned, or you\u2019ll immediately forget.\n  Afterwards, if you want to solidify what you\u2019ve learned, quickly read through a few more books like these:\n  These books will go faster, now that you\u2019re fluent.\tPlay around with the examples.\tThere will be no huge surprises.\tYou\u2019re just enhancing what you know.\n  When solving a problem, everyone will point you to some pre-made solution.\t\u201cUse jQuery! Use React! Use this library and save yourself some typing!\u201d\n But no!\tNot yet!\tDo it the hard way.\tSolve everything yourself with plain JavaScript.\tIt\u2019s the best way to learn.\n  If you had a web app in mind, start building it now.\t(OK, you can use shortcuts.)\n  If you want a good-paying job, you can  get hired almost anywhere.\tSince you know the real JavaScript foundations more than most people, you\u2019re very valuable.\tYou can quickly learn whatever framework they\u2019re using.", "posttime": "2020-06-27 16:02:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "javascript,java,\u5b66\u4e60,sivers", "title": "\u5fb7\u91cc\u514b\u00b7\u897f\u5f17\u65af\uff1a\u5982\u4f55\u5b66\u4e60JavaScript", "title_en": "Derek Sivers: How to Learn JavaScript", "transed": 1, "url": "https://sivers.org/learn-js", "via": "", "real_tags": ["java", "\u5b66\u4e60", "sivers"]}]