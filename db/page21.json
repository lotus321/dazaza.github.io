[{"category": "", "categoryclass": "", "imagename": "a91fc19bdf754215986181a4bee89fed.png", "infoid": 1008296, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u514d\u8d39\u66f4\u65b0\u5c06\u4e8e7\u67083\u65e5\u5230\u6765\uff0c\u8fd9\u6807\u5fd7\u7740\u5b9a\u4e8e\u590f\u5b63\u53d1\u5e03\u7684\u4e24\u6ce2\u65b0\u5185\u5bb9\u4e2d\u7684\u7b2c\u4e00\u6ce2(\u65e0\u8bba\u5982\u4f55\uff0c\u5bf9\u5317\u534a\u7403\u7684\u73a9\u5bb6\u6765\u8bf4\u662f\u5982\u6b64)\u3002\u8fd9\u4e00\u66f4\u65b0\u9080\u8bf7\u73a9\u5bb6\u8df3\u5165\u6d77\u6d0b\uff0c\u56db\u5904\u6e38\u6cf3\uff0c\u6536\u96c6\u6d77\u8475\u3001\u6d77\u661f\u3001\u9cd7\u9c7c\u548c\u5176\u4ed6\u6d77\u6d0b\u52a8\u7269\uff0c\u7136\u540e\u8fd9\u4e9b\u52a8\u7269\u53ef\u4ee5\u6350\u8d60\u7ed9\u4ed6\u4eec\u7684\u535a\u7269\u9986\u85cf\u54c1\u3002\u795e\u79d8\u7684\u540e\u534a\u90e8\u5206\u66f4\u65b0\u5b9a\u4e8e8\u6708\u521d\u53d1\u5e03\u3002\n[\u516c\u544a]\u8fdb\u5165#AnimalCrossing\uff1aNew Horizons\u514d\u8d39\u590f\u5b63\u66f4\u65b0-\u7b2c\u4e00\u6ce2\uff0c7/3\u5230\u6765\uff0c\u4e3a\u8fd9\u4e2a\u590f\u5929\u964d\u6e29\u5427\uff01\u7a7f\u4e0a\u6f5c\u6c34\u670d\u6f5c\u6c34\u548c\u5728\u6d77\u6d0b\u4e2d\u6e38\u6cf3\uff0c\u751a\u81f3\u53ef\u4ee5\u7ed3\u8bc6\u65b0\u89d2\u8272\uff01\u8bf7\u7ee7\u7eed\u5173\u6ce8\u8ba1\u5212\u4e8e8\u6708\u521d\u53d1\u5e03\u7684\u7b2c2\u6ce2\u7684\u76f8\u5173\u4fe1\u606f\u3002pic.twitter.com/cYd86R7g6D\u3002\n\u6e38\u620f\u8fd8\u5c06\u589e\u52a0\u53e6\u4e00\u4e2a\u65b0\u89d2\u8272\uff0c\u5e15\u65af\u5361\uff0c\u4e00\u53ea\u53ef\u4ee5\u4e3a\u4f60\u63d0\u4f9b\u65b0\u98df\u8c31\u7684\u6d77\u736d\u3002\u4efb\u4f55\u73a9\u8fc7\u52a8\u7269\u7a7f\u8d8a\u6e38\u620f\u7684\u4eba\u90fd\u4f1a\u8ba4\u51fa\u5e15\u65af\u5361\u662f\u4e00\u4e2a\u51b7\u9759\u7684\u4eba\uff0c\u4ed6\u5728\u6f2b\u4e0d\u7ecf\u5fc3\u5730\u8e29\u6c34\u7684\u540c\u65f6\uff0c\u4e5f\u540c\u6837\u6563\u53d1\u7740\u51b0\u51b7\u7684\u667a\u6167\u73cd\u73e0\u3002\n\u5bf9\u4e8e\u4e00\u9879\u56f4\u7ed5\u7740\u719f\u6089\u7684\u5faa\u73af-\u6536\u96c6\u6c34\u679c\u3001\u62d4\u8349\u3001\u6447\u6643\u6811\u6728\u4ee5\u627e\u5230\u6f02\u4eae\u7684\u5ba2\u5385\u5bb6\u5177-\u7684\u6e38\u620f\u6765\u8bf4\uff0c\u6e38\u6cf3\u548c\u8df3\u6c34\u7684\u589e\u52a0\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u53d8\u5316\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5728\u5927\u6d41\u884c\u521d\u671f\u4e25\u5389\u6253\u51fb\u201c\u65b0\u5730\u5e73\u7ebf\u201d\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u505a\u7684\u4e86\uff0c\u53ef\u4ee5\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e2a\u6e38\u620f\u3002\u770b\u770b\u4efb\u5929\u5802\u5728New Horizons\u5546\u5e97\u91cc\u8fd8\u6709\u4ec0\u4e48\u4f1a\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u8fd9\u662f\u6e38\u620f\u65f6\u4ee3\u7b2c\u4e00\u6b3e\u671f\u5f85\u53d1\u5e03\u540e\u5927\u91cf\u53ef\u4e0b\u8f7d\u5185\u5bb9\u7684\u6e38\u620f\uff0c\u5df2\u7ecf\u5728\u8def\u7ebf\u56fe\u4e0a\u89c4\u5212\u4e86\u51fa\u6765\u3002\n\u5982\u679c\u50cf\u6211\u4e00\u6837\uff0c\u4f60\u7684\u59bb\u5b50\u4e0d\u5c0f\u5fc3\u5f04\u574f\u4e86\u4f60\u7684\u4e00\u4e2a\u5f00\u5173\u63a7\u5236\u5668\uff0c\u800c\u4f60\u5df2\u7ecf\u4e09\u4e2a\u661f\u671f\u6ca1\u6709\u73a9\u4e86\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u5728\u4f60\u7684\u6751\u6c11\u4e2d\u968f\u610f\u6f2b\u6b65\uff0c\u540c\u65f6\u8868\u73b0\u5f97\u597d\u50cf\u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u65f6\u95f4\u3002Lolly\uff0c\u5982\u679c\u4f60\u6b63\u5728\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u60f3\u8ba9\u4f60\u77e5\u9053\u4ed6\u4eec\u662f\u5ef6\u671f\u8ba2\u8d2d\u7684\uff0c\u8fd9\u4e0d\u4f1a\u6539\u53d8\u6211\u4eec\u4e4b\u95f4\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u771f\u7684\u3002", "note_en": "The free update will arrive on July 3, marking the first of two waves of new content due out in the summer season (for players in the Northern Hemisphere, anyway!). The update invites players to plunge into the ocean and swim around to collect anemones, starfish, eels and other sea-faring creatures, which can then be donated to their museum collection. The mysterious second half of the update is due out in early August.\n [Announcement] Cool off this summer by diving into the  #AnimalCrossing: New Horizons free Summer Update \u2013 Wave 1, arriving 7/3! Put on your wet suit to dive &amp; swim in the ocean, and even meet new characters! Stay tuned for info on Wave 2, planned for release in early August.  pic.twitter.com/cYd86R7g6D\n The game will also add another new character, Pascal, a sea otter who you can hit up for new recipes. Anyone who\u2019s played past Animal Crossing titles will recognize Pascal as a chill guy who doles out equally chill pearls of wisdom while casually treading water.\n For a game that revolves around familiar cycles\u2014collecting fruit, pulling weeds, shaking trees to find nice living room furniture\u2014the addition of swimming and diving is actually a pretty big change. And it\u2019s probably a good reason for anyone who went hard on New Horizons in the early days of the pandemic and ran out of things to do to revisit the game. It\u2019ll be interesting to see what else Nintendo has in store New Horizons, since it\u2019s the first Animal Crossing title in in a gaming era that expects of plenty of post-release downloadable content already plotted out on the roadmap.\n It\u2019s also the perfect time to casually stroll out among your villagers while acting like no time passed at all if, like me, your wife accidentally broke one of your Switch controllers\u00a0and you haven\u2019t played in three weeks. Lolly, if you\u2019re reading this, I want you to know they were back-ordered and this doesn\u2019t change anything between us. Really.", "posttime": "2020-06-26 05:44:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a7f\u8d8a,crossing,\u6e38\u620f", "title": "\n\u52a8\u7269\u7a7f\u8d8a\u7684\u590f\u5b63\u66f4\u65b0\u5c06\u8ba9\u4f60\u4e3a\u6d77\u6d0b\u751f\u7269\u6e38\u6cf3", "title_en": "\n\t\t\t\tAnimal Crossing\u2019s summer update will let you swim for sea critters\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/25/animal-crossing-swimming-new-horizons/", "via": "", "real_tags": ["\u7a7f\u8d8a", "crossing", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "42c7b6d39ffe0f8f62da687a9379d7bd.jpg", "infoid": 1008295, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JPL\u7684Pulse Wearable\u4f7f\u75283D\u6253\u5370\u90e8\u4ef6\u548c\u73b0\u6210\u7684\u3001\u4ef7\u683c\u5b9e\u60e0\u7684\u7535\u5b50\u5143\u4ef6\uff0c\u53ea\u505a\u4e00\u4ef6\u4e8b\uff1a\u63d0\u9192\u4eba\u4eec\u4e0d\u8981\u89e6\u6478\u4ed6\u4eec\u7684\u8138\u3002\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u7684\u8bbe\u8ba1\u8005\u58f0\u79f0\uff0c\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u201c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u590d\u5236\u8fd9\u4e2a\u5c0f\u73a9\u610f\u513f\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u4e13\u4e1a\u6c34\u5e73\u5982\u4f55\u201d\uff0c\u4e3a\u4e86\u9f13\u52b1\u66f4\u591a\u7684\u4eba\u548c\u516c\u53f8\u771f\u6b63\u8fd9\u6837\u505a\uff0c\u5b9e\u9a8c\u5ba4\u901a\u8fc7\u5f00\u653e\u6e90\u7801\u8bb8\u53ef\u8bc1\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u96f6\u90e8\u4ef6\u6e05\u5355\u30013D\u5efa\u6a21\u6587\u4ef6\u548c\u5b8c\u6574\u7684\u7ec4\u88c5\u8bf4\u660e\u3002\n\u8109\u640f\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u540a\u5760\uff0c\u6234\u5728\u79bb\u5934\u90e86\u82f1\u5bf8\u52301\u82f1\u5c3a\u7684\u5730\u65b9\u7ed5\u7740\u8116\u5b50\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8eGaN IR\u7684\u63a5\u8fd1\u4f20\u611f\u5668\u68c0\u6d4b\u5230\u4e00\u4e2a\u4eba\u7684\u624b\u4f55\u65f6\u63a5\u8fd1\u4ed6\u4eec\u7684\u8138\u3002\u7136\u540e\uff0c\u632f\u52a8\u9a6c\u8fbe\u53d1\u51fa\u8b66\u62a5\uff0c\u5f53\u4f60\u7684\u624b\u9760\u8fd1\u4f60\u7684\u8138\u65f6\uff0c\u53cd\u5e94\u4f1a\u53d8\u5f97\u66f4\u5f3a\u3002\n\u786c\u4ef6\u672c\u8eab\u5f88\u7b80\u5355\uff0c\u4f46\u8fd9\u5c31\u662f\u5173\u952e\u6240\u5728\u3002\u5b83\u7684\u8bbe\u8ba1\u4f7f\u7528\u73b0\u6210\u76843V\u786c\u5e01\u7535\u6c60\uff0c\u5982\u679c\u4f60\u6709\u4e00\u53f03D\u6253\u5370\u673a\u53ef\u4ee5\u7528\u6765\u88c5\u7bb1\u5b50\uff0c\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u4e9a\u9a6c\u900a\uff0c\u4f60\u53ef\u80fd\u5f88\u5feb\u5c31\u53ef\u4ee5\u5728\u5bb6\u91cc\u81ea\u5df1\u7ec4\u88c5\u4e00\u53f0\u3002\nPULSE\u7684\u76ee\u6807\u663e\u7136\u4e0d\u662f\u5355\u67aa\u5339\u9a6c\u6d88\u706d\u65b0\u51a0\u80ba\u708e-\u4ece\u53d7\u6c61\u67d3\u7684\u624b\u5230\u4eba\u7684\u5634\u3001\u9f3b\u5b50\u6216\u773c\u775b\u7684\u63a5\u89e6\u6027\u4f20\u64ad\u53ea\u662f\u4e00\u4e2a\u5a92\u4ecb\uff0c\u800c\u4e14\u4f3c\u4e4e\u5f88\u53ef\u80fd\u5bfc\u81f4\u7a7a\u6c14\u4f20\u64ad\u7684\u547c\u5438\u9053\u98de\u6cab\u5728\u4f20\u64ad\u75c5\u6bd2\u65b9\u9762\u81f3\u5c11\u540c\u6837\u6709\u6548\u3002\u4f46\u662f\uff0c\u5c31\u50cf\u7ecf\u5e38\u6234\u53e3\u7f69\u53ef\u4ee5\u6781\u5927\u5730\u964d\u4f4e\u4f20\u64ad\u98ce\u9669\u4e00\u6837\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4f60\u89e6\u6478\u9762\u90e8\u7684\u9891\u7387\u53ef\u4ee5\u4e0e\u5176\u4ed6\u51cf\u5c11\u4f20\u64ad\u7684\u63aa\u65bd\u4ea7\u751f\u5f88\u5927\u7684\u7ec4\u5408\u6548\u5e94\u3002\n\u5b9e\u9645\u4e0a\uff0c\u5176\u4ed6\u5065\u5eb7\u53ef\u7a7f\u6234\u8bbe\u5907\u53ef\u80fd\u4f1a\u5728\u4f60\u51fa\u73b0\u660e\u663e\u75c7\u72b6\u6216\u68c0\u6d4b\u7ed3\u679c\u5448\u9633\u6027\u4e4b\u524d\u544a\u8bc9\u4f60\u65b0\u51a0\u80ba\u708e\u662f\u4ec0\u4e48\u65f6\u5019\u60a3\u4e0a\u7684-\u4f46\u8fd8\u9700\u8981\u505a\u4e00\u4e9b\u5de5\u4f5c\u6765\u4e86\u89e3\u8fd9\u4e00\u529f\u80fd\u6709\u591a\u597d\uff0c\u4ee5\u53ca\u5982\u4f55\u7528\u5b83\u6765\u9650\u5236\u66b4\u9732\u3002\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u7684\u201c\u8109\u640f\u201d\u6709\u4e00\u4e2a\u4f18\u52bf\uff0c\u90a3\u5c31\u662f\u73b0\u5728\u5728\u5efa\u7acb\u79ef\u6781\u7684\u4e60\u60ef\u65b9\u9762\u662f\u6709\u6548\u7684\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u4e60\u60ef\u5c06\u9650\u5236\u65b0\u51a0\u80ba\u708e\u7684\u4f20\u64ad\uff0c\u4ee5\u53ca\u5176\u4ed6\u75c5\u6bd2\u611f\u67d3\u3002", "note_en": "JPL\u2019s PULSE wearable uses 3D-printed parts and readily available, affordable electronic components to do just one thing: remind a person not to touch their face. JPL\u2019s designers claim that its simple enough that the gadget \u201ccan easily be reproduced by anyone regardless of their level of expertise,\u201d and to encourage more people and companies to actually do that, the lab has made available a full list of parts, 3D modelling files and full instructions for its assembly via an open source license.\n The PULSE is essentially a pendant, worn between six inches and 1 foot from the head around the neck, which can detect when a person\u2019s hand is approaching their face using gan IR-based proximity sensor. A vibration motor then shakes out an alert, and the response becomes stronger as your hand gets closer to your face.\n  The hardware itself is simple \u2013 but that\u2019s the point. It\u2019s designed to run on readily available 3V coin batteries, and if you have a 3D printer to hand for the case and access to Amazon, you can probably put one together yourself at home in no time.\n The goal of PULSE obviously isn\u2019t to single-handedly eliminate COVID-19 \u2013 contact transmission from contaminated hands to a person\u2019s mouth, nose or eyes is just one vector, and it seems likely that respiratory droplets that result in airborne transmission is at least as effective at passing\u2019s the virus around. But just like regular mask-wearing can dramatically reduce transmission risk, minimizing how often you touch your face can have a big combinatory effect with other measures taken to reduce the spread.\n Other health wearables might actually be able to tell you when you have COVID-19 before you show significant symptoms or have a positive test result \u2013 but work still needs to be done to understand how well that works, and how it could be used to limit exposure. JPL\u2019s Pulse has the advantage of being effective now in terms of building positive habits that we know will limit the spread of COVID-19, as well as other viral infections.", "posttime": "2020-06-26 05:43:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "nasa,\u5f00\u6e90,\u7f8e\u56fd,\u55b7\u6c14,spread", "title": "\n\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u5f00\u6e90\u4e00\u6b3e\u53cd\u78b0\u8138\u7a7f\u6234\u8bbe\u5907\u6709\u52a9\u4e8e\u51cf\u5c11\u65b0\u51a0\u80ba\u708e\u7684\u4f20\u64ad", "title_en": "\n\t\t\t\tNASA\u2019s JPL open-sources an anti-face touching wearable to help reduce the spread of COVID-19\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/25/nasas-jpl-open-sources-an-anti-face-touching-wearable-to-help-reduce-the-spread-of-covid-19/", "via": "", "real_tags": ["nasa", "\u5f00\u6e90", "\u7f8e\u56fd", "\u55b7\u6c14", "spread"]}, {"category": "", "categoryclass": "", "imagename": "e80d53ce807ce4d270894a0862ab2007.png", "infoid": 1008294, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u7279\u8fea\u58eb\u5c3c\u516c\u53f8\u4ecd\u7136\u81f4\u529b\u4e8e\u6211\u4eec\u7684\u513f\u7ae5\u9891\u9053\u4e1a\u52a1\uff0c\u5e76\u7ee7\u7eed\u5728\u8bb8\u591a\u4e5f\u6709\u8fea\u58eb\u5c3c+\u7684\u5e02\u573a\u6267\u884c\u8fea\u58eb\u5c3c\u9891\u9053\u7684\u5206\u9500\u534f\u8bae\u3002\n\u4eca\u5e74\u79cb\u5929\uff0c\u534e\u7279\u8fea\u58eb\u5c3c\u516c\u53f8(Walt Disney Co.)\u5c06\u5173\u95ed\u5176\u5728\u82f1\u56fd\u7684\u4e09\u4e2a\u7ebf\u6027\u9891\u9053\uff0c\u5e76\u5c06\u5185\u5bb9\u8f6c\u79fb\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u8fea\u58eb\u5c3c+(Disney+)\u3002\n\u8fea\u58eb\u5c3c\u516c\u53f8\u5468\u56db\u8868\u793a\uff0c\u4ece10\u67081\u65e5\u8d77\uff0c\u8fea\u58eb\u5c3c+\u5c06\u6210\u4e3a\u8fea\u58eb\u5c3c\u9891\u9053\u3001\u8fea\u58eb\u5c3cXD\u548c\u8fea\u58eb\u5c3c\u5c11\u5e74\u9891\u9053\u5185\u5bb9\u7684\u82f1\u56fd\u72ec\u5bb6\u603b\u90e8\u3002\n\u8fea\u58eb\u5c3c\u8868\u793a\uff0c\u8fd9\u9879\u76f4\u63a5\u9762\u5411\u6d88\u8d39\u8005\u7684\u670d\u52a1\u5728\u5934\u4e03\u4e2a\u6708\u5c31\u5728\u5168\u7403\u83b7\u5f97\u4e86\u8d85\u8fc75450\u4e07\u8ba2\u6237\uff0c\u73b0\u5728\u5c06\u9996\u64ad\u8fea\u58eb\u5c3c\u4e09\u4e2a\u9891\u9053\u7684\u6240\u6709\u6700\u65b0\u7535\u5f71\u3001\u8fde\u7eed\u5267\u548c\u7279\u8f91\uff0c\u540c\u65f6\u8fd8\u5c06\u5728\u82f1\u56fd\u63d0\u4f9b\u4e30\u5bcc\u800c\u5e9e\u5927\u7684\u8fea\u58eb\u5c3c\u9891\u9053\u7535\u5f71\u76ee\u5f55\uff0c\u5305\u62ec\u7c73\u8001\u9f20\u4ff1\u4e50\u90e8\u3001\u540e\u88d43\u548c\u83f2\u5c3c\u4e9a\u65af\u4e0e\u8d39\u5e03\u3002\n\u8fd9\u5bb6\u597d\u83b1\u575e\u4f01\u4e1a\u96c6\u56e2\u8865\u5145\u8bf4\uff1a\u534e\u7279\u8fea\u58eb\u5c3c\u516c\u53f8\u4ecd\u7136\u81f4\u529b\u4e8e\u6211\u4eec\u7684\u513f\u7ae5\u9891\u9053\u4e1a\u52a1\uff0c\u5e76\u7ee7\u7eed\u5728\u8bb8\u591a\u4e5f\u6709\u8fea\u58eb\u5c3c+\u7684\u5e02\u573a\u6267\u884c\u8fea\u58eb\u5c3c\u9891\u9053\u7684\u5206\u9500\u534f\u8bae\uff0c\u76ee\u6807\u662f\u7ed9\u6211\u4eec\u7684\u7c89\u4e1d\u63d0\u4f9b\u591a\u4e2a\u8bb2\u6545\u4e8b\u7684\u5207\u5165\u70b9\u3002\u202f&#34\uff1b\n\u5eb7\u5361\u65af\u7279\u65d7\u4e0b\u7684\u4ed8\u8d39\u7535\u89c6\u5de8\u5934\u5929\u7a7a\u82f1\u56fd\u516c\u53f8(Sky U.K.)\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u4e0e\u8fea\u58eb\u5c3c+\u8fbe\u6210\u4e86\u5206\u9500\u534f\u8bae\uff0c\u8be5\u516c\u53f8\u7684\u4e00\u540d\u4ee3\u8868\u8868\u793a\uff1a\u9664\u4e86\u6211\u4eec\u51fa\u8272\u7684\u7ebf\u6027\u9891\u9053(\u6765\u81ea\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u7ef4\u4e9a\u5eb7\u59c6(Viacom)\u548c\u7279\u7eb3(Turner))\uff0c\u6211\u4eec\u8fd8\u67095000\u591a\u96c6\u70b9\u64ad\u5185\u5bb9\uff0c\u6211\u4eec\u4e5f\u5728\u6295\u8d44\u81ea\u5df1\u7684\u5929\u7a7a\u513f\u7ae5\u539f\u521b\u9891\u9053\uff0c\u6bd4\u5982Moominvley\u548cMorph\u3002\u5b69\u5b50\u4eec\u53ef\u4ee5\u89c2\u770b\u6700\u559c\u6b22\u7684\u4e50\u9ad8\u73a9\u5177\uff0c\u5982Peppa Pig\u548cPaw Patrol\uff0c\u6d77\u7ef5\u5b9d\u5b9d\u65b9\u88e4\u548c\u53e3\u9999\u7cd6\u7684\u795e\u5947\u4e16\u754c\uff0c\u6240\u6709\u7cbe\u5f69\u7684\u4e50\u9ad8\u5185\u5bb9\u7b49\u7b49\u3002\u800c\u4e14\uff0c\u5728[\u4ed8\u8d39\u7535\u89c6\u670d\u52a1]Sky Q.&#34\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a\u5730\u65b9(\u8fde\u540c\u6700\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u8fea\u58eb\u5c3c+\u548cNetflix)\u83b7\u5f97\u6240\u6709\u8fd9\u4e9b\u670d\u52a1\u3002\n\u4e00\u4f4d\u5206\u6790\u5e08\u8868\u793a\uff0c\u8fea\u58eb\u5c3c\u53ca\u5176\u5728\u82f1\u56fd\u7684\u5206\u9500\u5408\u4f5c\u4f19\u4f34\u8d8a\u6765\u8d8a\u96be\u4e3a\u8be5\u516c\u53f8\u7684\u4e09\u4e2a\u5b69\u5b50\u7535\u89c6\u7f51\u8fbe\u6210\u5bf9\u53cc\u65b9\u90fd\u6709\u8d22\u52a1\u610f\u4e49\u7684\u8fd0\u8f93\u534f\u8bae\uff0c\u8fd9\u4f7f\u5f97\u6574\u5408\u9891\u9053\u5185\u5bb9\u6210\u4e3a\u5408\u4e4e\u903b\u8f91\u7684\u4e0b\u4e00\u6b65\u884c\u52a8\u3002\nPP Foresight\u5206\u6790\u5e08\u4fdd\u7f57\u00b7\u4f69\u65af\u5361\u6258\u96f7\u79f0\u82f1\u56fd\u65b0\u95fb\u662f\u4e00\u4e2a\u91cc\u7a0b\u7891\u5f0f\u7684\u65f6\u523b\uff0c\u4ed6\u89e3\u91ca\u8bf4\uff1a\u6d41\u5a92\u4f53\u9769\u547d\u6b63\u5728\u52a0\u901f\uff0c\u4e0d\u5bb9\u5ffd\u89c6\u3002\u516c\u53f8\u4e0d\u80fd\u518d\u7ee7\u7eed\u652f\u6301\u4e00\u7cfb\u5217\u6e20\u9053\uff0c\u8695\u98df\u6536\u5165\u6d41\u3002\u672a\u6765\u5b8c\u5168\u662f\u6d41\u5a92\u4f53\uff0c\u8fd9\u4e00\u6700\u65b0\u4e3e\u63aa\u4e3a\u5176\u4ed6\u516c\u53f8\u6811\u7acb\u4e86\u6548\u4eff\u7684\u57fa\u51c6\u3002", "note_en": "&#34;The Walt Disney Company remains committed to our kids channels business and continues to execute distribution agreements for Disney channels in many markets where Disney+ is also available.&#34;\n The Walt Disney Co. will close down its three linear channels in the U.K. this fall and move content to streaming service Disney+.\n From Oct. 1, Disney+ will become the exclusive U.K. home for content from Disney Channel, DisneyXD and Disney Junior, the company said Thursday.\n &#34;The direct-to-consumer service, which garnered more than 54.5 million subscribers worldwide in its first seven months, will now premiere all the latest films, series and specials from the three Disney Channels, along with offering a rich and expansive back catalogue of Disney Channel titles in the U.K., including  Mickey Mouse Clubhouse,  Descendants 3 and  Phineas and Ferb,&#34; Disney said.\n The Hollywood conglomerate added: &#34;The Walt Disney Company remains committed to our kids channels business and continues to execute distribution agreements for Disney channels in many markets where Disney+ is also available, with the goal of giving our fans multiple entry points to our storytelling.\u202f&#34;\n A representative for Comcast-owned pay TV giant Sky U.K., which earlier this year  struck a distribution deal for Disney+, said: &#34;We have over 5,000 episodes of on demand content alongside our brilliant linear channels, from our partners Viacom and Turner, and we\u2019re investing more in our own Sky kids originals, too, like  Moominvalley and  Morph. Kids can watch favorites like  Peppa Pig and  Paw Patrol,  SpongeBob Squarepants and  The  Amazing World of Gumball, all the wonderful LEGO content and much, much more. And it is all available in one place \u2013 together with the best apps, like Disney+ and Netflix \u2013 on [premium pay TV service] Sky Q.&#34;\n One analyst suggested that it had been getting more difficult for Disney and its distribution partners in Britain to strike carriage deals for the company&#39;s three kids networks that make financial sense for both sides, making the consolidation of the channels&#39; content a logical next step.\n PP Foresight analyst Paolo Pescatore called the U.K. news &#34;a landmark moment,&#34; explaining: &#34;The streaming revolution is gathering pace and cannot be ignored. Companies can no longer continue to support a slew of channels and cannibalize revenue streams. The future is all about streaming and this latest move sets a benchmark for others to follow suit.&#34;", "posttime": "2020-06-26 05:43:25", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8fea\u58eb\u5c3c,disney", "title": "\u8fea\u58eb\u5c3c\u513f\u7ae5\u9891\u9053\u5728\u82f1\u56fd\u5173\u95ed\uff0c\u5185\u5bb9\u8f6c\u79fb\u5230\u8fea\u58eb\u5c3c+", "title_en": "Disney Kids Channels To Shutter In UK, Content Moving To Disney+", "transed": 1, "url": "https://www.hollywoodreporter.com/news/disney-kids-channels-shutter-uk-content-moving-disney-1300369", "via": "", "real_tags": ["\u8fea\u58eb\u5c3c", "disney"]}, {"category": "", "categoryclass": "", "imagename": "9fae41a828393978daab94b30951889b.jpg", "infoid": 1008293, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\uff0c\u4e09\u540d\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u8b66\u5bdf\u88ab\u89e3\u96c7\uff0c\u56e0\u4e3a\u8c03\u67e5\u4eba\u5458\u53d1\u73b0\u8b66\u5bdf\u81ea\u5df1\u7684\u4eea\u8868\u76d8\u6444\u50cf\u5934\u610f\u5916\u8bb0\u5f55\u4e0b\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u79cd\u65cf\u4e3b\u4e49\u3001\u4ee4\u4eba\u4e0d\u5b89\u7684\u5bf9\u8bdd\u548c\u66b4\u529b\u5a01\u80c1\u3002\n\u5a01\u5c14\u660e\u987f\u8b66\u5bdf\u5c40\u957f\u5510\u5c3c\u00b7\u5a01\u5ec9\u59c6\u65af(Donny Williams)\u5468\u4e09\u8868\u793a\uff0c\u51ef\u6587\u00b7\u76ae\u7eb3(Kevin Piner)\u8b66\u5b98\u5de1\u903b\u8f66\u4e0a\u7684\u4eea\u8868\u76d8\u6444\u50cf\u5934\u4ece\u4e24\u4e2a\u5c0f\u65f6\u7684\u5f55\u97f3\u4e2d\u6355\u6349\u5230\u4e86\u8d85\u8fc746\u5206\u949f\u7684\u76f8\u5173\u955c\u5934\u3002\n\u6839\u636e\u8be5\u90e8\u95e8\u7684\u62a5\u544a(PDF)\uff0c\u76ae\u7eb3\u7684\u76f8\u673a\u662f\u7531\u4e8e\u610f\u5916\u6fc0\u6d3b\u800c\u88ab\u8bb0\u5f55\u4e0b\u6765\u7684\u3002\u90a3\u6b21\u6fc0\u6d3b\u6700\u7ec8\u6355\u6349\u5230\u4e86\u76ae\u7eb3\u548c\u53e6\u5916\u4e24\u540d\u8b66\u5b98\u6770\u897f\u00b7\u6469\u5c14(Jessie Moore)\u548c\u5e03\u83b1\u6069\u00b7\u5409\u5c14\u6469(Brian Gilmore)--\u90fd\u662f\u767d\u4eba--\u4f7f\u7528\u4f17\u6240\u5468\u77e5\u7684\u79cd\u65cf\u4e3b\u4e49\u8bfd\u8c24\uff0c\u8ba8\u8bba\u8b66\u5bdf\u4e2d\u7684\u9ed1\u4eba\u6210\u5458\u548c\u5f53\u5730\u6297\u8bae\u8005\u3002\u6469\u5c14\u4e00\u5ea6\u8bf4\uff0c\u4e00\u540d\u5f53\u5730\u6cbb\u5b89\u5b98\uff0c\u4e00\u540d\u9ed1\u4eba\u5987\u5973\uff0c\u5728\u4e09\u4eba\u8c08\u8bba\u4ed6\u4eec\u5bf9\u5185\u6218\u5373\u5c06\u5230\u6765\u7684\u611f\u53d7\u4e4b\u524d\uff0c\u9700\u8981\u4e00\u9897\u5b50\u5f39\u51fb\u4e2d\u5979\u7684\u5934\u90e8\uff0c\u4e09\u4eba\u90fd\u58f0\u79f0\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u3002\u6211\u4eec\u53ea\u662f\u8981\u51fa\u53bb\u5f00\u59cb\u5c60\u6740\u4ed6\u4eec\uff0c\u4ed6\u5988\u7684-s\uff0c&#34\uff1b\u76ae\u7eb3\u8865\u5145\u9053\u3002\n\u5a01\u5ec9\u59c6\u65af\u8bf4\uff0c\u8fd9\u4e9b\u8c08\u8bdd\u975e\u5e38\u65e0\u793c\uff0c\u7406\u5e94\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u5f97\u77e5\u8fd9\u4e9b\u5bf9\u8bdd\u65f6\uff0c\u6211\u611f\u5230\u9707\u60ca\u3001\u60b2\u4f24\u548c\u538c\u6076\u3002\u5728\u6211\u4eec\u7684\u673a\u6784\u548c\u6211\u4eec\u7684\u57ce\u5e02\u91cc\uff0c\u8fd9\u79cd\u884c\u4e3a\u662f\u6ca1\u6709\u7acb\u8db3\u4e4b\u5730\u7684\uff0c\u4e5f\u662f\u4e0d\u80fd\u5bb9\u5fcd\u7684\u3002\n\u5a01\u5ec9\u59c6\u65af\u8fd8\u8865\u5145\u8bf4\uff0c\u4ed6\u6b63\u5728\u5411\u6cd5\u9662\u8bf7\u613f\uff0c\u6839\u636e\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7684\u6cd5\u5f8b\uff0c\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u516c\u5f00\u53d1\u5e03\u8fd9\u6bb5\u89c6\u9891\u3002\n\u8b66\u5bdf\u8eab\u4f53\u6216\u4eea\u8868\u76d8\u5b89\u88c5\u7684\u6444\u50cf\u5934\u7ecf\u5e38\u88ab\u5ba3\u4f20\u4e3a\u8b66\u65b9\u95ee\u8d23\u7684\u798f\u97f3\uff0c\u5a01\u5c14\u660e\u987f\u6848\u4ef6\u4f3c\u4e4e\u8bc1\u660e\u4e86\u539f\u56e0\u3002\n\u6700\u8fd1\u51e0\u5468\uff0c\u8bb8\u591a\u5dde\u548c\u5730\u65b9\u653f\u5e9c\u4e89\u76f8\u901a\u8fc7\u51b3\u8bae\uff0c\u547c\u5401\u589e\u52a0\u6444\u50cf\u5934\u7684\u4f7f\u7528\u6216\u8d44\u91d1\uff0c\u4ee5\u56de\u5e94\u6b63\u5728\u8fdb\u884c\u7684\u53cd\u5bf9\u8b66\u5bdf\u66b4\u884c\u548c\u652f\u6301\u9ed1\u4eba\u793e\u533a\u7684\u5168\u56fd\u6027\u6297\u8bae\u8fd0\u52a8\u3002\u4f8b\u5982\uff0c\u5728\u7ebd\u7ea6\u5dde\uff0c\u5dde\u8bae\u4f1a\u521a\u521a\u901a\u8fc7\u7acb\u6cd5\uff0c\u8981\u6c42\u6240\u6709\u5dde\u8b66\u5bdf\u90fd\u8981\u914d\u5907\u968f\u8eab\u76f8\u673a\u3002\u8bae\u957f\u5361\u5c14\u00b7\u5e0c\u65af\u8482\u8c08\u5230\u8fd9\u9879\u63aa\u65bd\u65f6\u8bf4\uff0c\u4f5c\u4e3a\u7f8e\u56fd\u6700\u5927\u7684\u5dde\u8b66\u5bdf\u673a\u6784\u4e4b\u4e00\uff0c\u7ebd\u7ea6\u5dde\u8b66\u5bdf\u5c40\u5e94\u8be5\u662f\u7b2c\u4e00\u6279\u6811\u7acb\u699c\u6837\u7684\u673a\u6784\u4e4b\u4e00\uff0c\u5411\u5176\u4ed6\u4eba\u5c55\u793a\u5982\u4f55\u6b63\u786e\u4f7f\u7528\u968f\u8eab\u6444\u50cf\u5934\uff0c\u5411\u516c\u4f17\u4f20\u9012\u900f\u660e\u5ea6\u548c\u95ee\u8d23\u6027\u3002\n\u6709\u65f6\u955c\u5934\u786e\u5b9e\u80fd\u8fbe\u5230\u9884\u671f\u6548\u679c\u3002\u4f8b\u5982\uff0c2017\u5e74\uff0c\u9a6c\u91cc\u5170\u5dde\u670934\u8d77\u5211\u4e8b\u6848\u4ef6\u88ab\u9a73\u56de\uff0c\u56e0\u4e3a\u7a7f\u6234\u5728\u8eab\u4e0a\u7684\u6444\u50cf\u5934\u62cd\u6444\u7684\u753b\u9762\u663e\u793a\uff0c\u8b66\u5bdf\u5728\u5acc\u7591\u4eba\u9644\u8fd1\u79cd\u690d\u6bd2\u54c1\u3002\n\u4f46\u8fd9\u9879\u6280\u672f\u672c\u8eab\u5e76\u4e0d\u662f\u7075\u4e39\u5999\u836f\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d(New York Times)\u65e9\u57282017\u5e74\u5c31\u62a5\u9053\u8fc7\uff0c\u5927\u5927\u5c0f\u5c0f\u7684\u8b66\u5bdf\u90e8\u95e8\u90fd\u5728\u63a8\u51fa\u6602\u8d35\u7684\u968f\u8eab\u76f8\u673a\u9879\u76ee\uff0c\u4f46\u5bf9\u8fd9\u4e9b\u95ee\u9898\u6ca1\u6709\u4e00\u81f4\u7684\u7b54\u6848\uff0c\u6216\u8005\u6839\u636e\u653f\u7b56\u4e13\u5bb6\u7684\u8bf4\u6cd5\uff0c\u6ca1\u6709\u4ee4\u4eba\u4fe1\u670d\u7684\u8bc1\u636e\u8868\u660e\u6444\u50cf\u5934\u786e\u4fdd\u4e86\u516c\u4f17\u8981\u6c42\u7684\u95ee\u8d23\u7a0b\u5ea6\uff0c\u800c\u8fd9\u4e9b\u95ee\u9898\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u7b54\u6848\u3002\n2017\u5e74\u5728\u534e\u76db\u987f\u7279\u533a\u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u81ea\u4ece\u9996\u90fd\u7684\u8b66\u5bdf\u5f00\u59cb\u4f69\u6234\u968f\u8eab\u76f8\u673a\u540e\uff0c\u8b66\u5bdf\u7684\u884c\u4e3a\u6216\u516c\u6c11\u6295\u8bc9\u6ca1\u6709\u6539\u53d8\u30022019\u5e74\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u8868\u4e86\u4e00\u9879\u5bf970\u9879\u5173\u4e8e\u8b66\u5bdf\u968f\u8eab\u76f8\u673a\u7684\u7814\u7a76\u7684\u835f\u8403\u5206\u6790\uff0c\u53d1\u73b0DC\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u4e00\u4e2a\uff0c\u800c\u4e14\u76f8\u673a\u5bf9\u8b66\u5bdf\u884c\u4e3a\u6216\u6295\u8bc9\u7684\u6574\u4f53\u5f71\u54cd\u5e76\u4e0d\u662f\u59cb\u7ec8\u5982\u4e00\u7684\u6216\u663e\u8457\u7684\u3002\n\u9690\u79c1\u6743\u5021\u5bfc\u8005\u4e5f\u4e00\u76f4\u5728\u8b66\u544a\u968f\u8eab\u643a\u5e26\u7684\u8b66\u7528\u6444\u50cf\u5934\u5e26\u6765\u7684\u5371\u9669\uff0c\u4e0d\u4ec5\u662f\u5f53\u8b66\u65b9\u4e0e\u5e94\u8be5\u4eab\u6709\u9690\u79c1\u7684\u4e2a\u4eba\u4ea4\u8c08\u65f6\uff0c\u800c\u4e14\u5728\u793a\u5a01\u8005\u8ba4\u4e3a\u81ea\u5df1\u662f\u533f\u540d\u7684\u5927\u89c4\u6a21\u6297\u8bae\u6d3b\u52a8\u7b49\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(American Civil Liberties Union)\u4eca\u5929\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff0c\u6539\u9769\u79ef\u6781\u5206\u5b50\u4e0d\u5e94\u8be5\u7b80\u5355\u5730\u8981\u6c42\u786c\u4ef6\u3002\u4ed6\u4eec\u5e94\u8be5\u8981\u6c42\u6709\u6548\u7684\u4eba\u4f53\u76f8\u673a\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u4e0d\u4ec5\u5305\u62ec\u76f8\u673a\uff0c\u8fd8\u5305\u62ec\u5f3a\u6709\u529b\u7684\u653f\u7b56\u548c\u5236\u5ea6\u5b9e\u8df5\uff0c\u4ee5\u4f7f\u8fd9\u4e9b\u76f8\u673a\u6709\u6548\u3002", "note_en": "Three North Carolina police officers were fired from their jobs this week after investigators found incredibly racist, troubling conversations, and threats of violence accidentally recorded by the cops&#39; own dashboard camera.\n The dashboard camera in Officer Kevin Piner&#39;s patrol car captured more than 46 minutes of relevant footage from a two-hour recording, Wilmington Police Chief Donny Williams  said Wednesday.\n According to the department&#39;s report ( PDF), Piner&#39;s camera was recording due to &#34;accidental activation.&#34; That activation ended up capturing Piner and two other officers, Jessie Moore and Brian Gilmore\u2014all white\u2014discussing Black members of the force as well as local protesters, using well-known racist slurs. At one point, Moore said a local magistrate, a Black woman, &#34;needed a bullet in her head,&#34; before the three discussed their feelings that a civil war was coming, for which all three claimed to be ready. &#34;We are just gonna go out and start slaughtering them fucking n------s,&#34; Piner added.\n The conversations &#34;were brutally offensive and deserved immediate action,&#34; Williams said. &#34;When I first learned of these conversations, I was shocked, saddened, and disgusted. There is no place for this behavior in our agency or our city and it will not be tolerated.&#34;\n Williams also added that he was petitioning the court to determine whether the footage could be released publicly, in accordance with  North Carolina law.\n  Police body or dashboard-mounted cameras are  often promoted as a boon to police accountability, and the Wilmington case seems to prove why.\n Many state and local governments have rushed to adopt resolutions in recent weeks calling for increased camera usage or funding, in response the ongoing nationwide protest movement against police brutality and in support of Black communities. In New York state, for example, the state Assembly  just passed legislation requiring body cameras for all state police. Speaker Carl Heastie said about the measure, &#34;As one of the largest state police agencies in the country, the New York State Police should be one of the first agencies to set an example, to show others how to properly use body cams to deliver transparency and accountability to the public.&#34;\n Sometimes the footage does indeed work as intended. In 2017, for example, 34 criminal cases were  thrown out in Maryland after footage from body-worn cameras showed police planting drugs near suspects.\n But the technology is not in and of itself a panacea. &#34;Police departments large and small are rolling out expensive body-camera programs without consistent answers to the questions or, according to policy experts, convincing evidence that the cameras ensure the level of accountability that the public demands,&#34;  The New York Times reported back in 2017, and those questions do not yet seem to have answers.\n A study conducted in Washington, DC, in 2017 found  no change in police behavior or citizen complaints after police in the nation&#39;s capital began wearing body cameras. In 2019, researchers who  published a meta-analysis of 70 studies on police body-worn cameras found that DC was not alone, and cameras did not have &#34;a consistent or significant effect&#34; on officer behavior or complaints overall.\n  Privacy advocates have also warned consistently about the dangers posed by body-worn police cameras, not only when police are  speaking with individuals who deserve privacy, but also in situations such as  mass protests when demonstrators believe they have anonymity.\n &#34;Reform activists should not simply demand hardware,&#34; the American Civil Liberties Union wrote in  a blog post today. &#34;They should demand effective body camera  programs, which include not just cameras but also strong policies and institutional practices to make those cameras effective.&#34;", "posttime": "2020-06-26 05:22:38", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6444\u50cf\u5934,fired,\u8b66\u5bdf", "title": "\u4e09\u540d\u8b66\u5bdf\u5728\u610f\u5916\u6fc0\u6d3b\u4eea\u8868\u76d8\u6444\u50cf\u5934\u6355\u6349\u5230\u79cd\u65cf\u4e3b\u4e49\u5486\u54ee\u540e\u88ab\u89e3\u96c7", "title_en": "Three cops fired after accidental dashcam activation captures racist rants", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/06/three-cops-fired-after-accidental-dashcam-activation-captures-racist-rants/", "via": "", "real_tags": ["\u6444\u50cf\u5934", "fired", "\u8b66\u5bdf"]}, {"category": "", "categoryclass": "", "imagename": "9eab1a4a00f30c357c268171abb6b007.jpg", "infoid": 1008292, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Mozilla\u5ba3\u5e03Comcast\u5df2\u7ecf\u52a0\u5165\u5176\u53ef\u4fe1\u9012\u5f52\u89e3\u6790\u5668\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u65e8\u5728\u4f7fDNS(\u57df\u540d\u7cfb\u7edf)\u66f4\u52a0\u53ef\u4fe1\u548c\u5b89\u5168\u3002CloudFlare\u548cNextDNS\u5df2\u7ecf\u662fTRR\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u5411\u9009\u62e9\u5728HTTPS(DoH)\u4e0a\u4f7f\u7528DNS\u7684Firefox\u7528\u6237\u63d0\u4f9bDNS\u670d\u52a1\u3002\n\u5eb7\u5361\u65af\u7279\u516c\u53f8\u5df2\u7ecf\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\u91c7\u7528DNS\u52a0\u5bc6\u6280\u672f\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u8ba9\u4ed6\u4eec\u52a0\u5165TRR\u8ba1\u5212\u3002\u5c06ISP\u7eb3\u5165TRR\u8ba1\u5212\u6709\u52a9\u4e8e\u6211\u4eec\u5728\u4e0d\u4e2d\u65ad\u73b0\u6709\u7528\u6237\u4f53\u9a8c\u7684\u60c5\u51b5\u4e0b\u5728\u7ebf\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e3a\u6d4f\u89c8\u5668\u548cISP\u4e4b\u95f4\u7684\u8fdb\u4e00\u6b65\u5408\u4f5c\u5f00\u521b\u5148\u4f8b\u3002\u201c\u3002\nMozilla\u5728\u5176TRR\u7a0b\u5e8f\u4e2d\u8868\u793a\uff0c\u4f7f\u7528DoH\u52a0\u5bc6DNS\u6570\u636e\u53ea\u662f\u4fdd\u62a4DNS\u5b89\u5168\u7684\u7b2c\u4e00\u6b65\u3002\u5b83\u8bf4\uff0c\u7b2c\u4e8c\u6b65\u8981\u6c42\u5904\u7406\u6570\u636e\u7684\u516c\u53f8\u6709\u9002\u5f53\u7684\u89c4\u5219\u6765\u5904\u7406\u5b83\u3002Mozilla\u8ba4\u4e3a\u8fd9\u4e9b\u89c4\u5219\u5305\u62ec\u9650\u5236\u6570\u636e\u6536\u96c6\u548c\u4fdd\u7559\uff0c\u786e\u4fdd\u4efb\u4f55\u4fdd\u7559\u6570\u636e\u7684\u900f\u660e\u5ea6\uff0c\u4ee5\u53ca\u9650\u5236\u4f7f\u7528\u89e3\u6790\u5668\u6765\u963b\u6b62\u8bbf\u95ee\u6216\u4fee\u6539\u5185\u5bb9\u3002\n\u6211\u4eec\u5f88\u81ea\u8c6a\u80fd\u6210\u4e3a\u7b2c\u4e00\u4e2a\u4e0eMozilla\u4e00\u8d77\u652f\u6301DNS\u9690\u79c1\u8fd9\u4e00\u91cd\u8981\u53d1\u5c55\u7684ISP\u3002\u4e0e\u5168\u7403\u6280\u672f\u754c\u7684\u5408\u4f5c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u5de5\u5177\u6765\u4fdd\u62a4\u6211\u4eec\u7684\u5ba2\u6237\uff0c\u50cf\u8fd9\u6837\u7684\u4f19\u4f34\u5173\u7cfb\u63a8\u8fdb\u4e86\u6211\u4eec\u4f7f\u5ba2\u6237\u7684\u4e92\u8054\u7f51\u4f53\u9a8c\u66f4\u52a0\u79c1\u5bc6\u548c\u5b89\u5168\u7684\u4f7f\u547d\u3002\u201c\u3002\nDNS\u662f\u5728\u7ebf\u57fa\u7840\u8bbe\u65bd\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8e\u7535\u8bdd\u7c3f\uff1b\u5f53\u60a8\u952e\u5165\u50cfFirefox.com\u8fd9\u6837\u7684\u7f51\u7ad9\u65f6\uff0cDNS\u4f1a\u5c06\u6b64URL\u8f6c\u6362\u4e3a\u8ba1\u7b97\u673a\u53ef\u4ee5\u7406\u89e3\u7684\u4e92\u8054\u7f51\u5730\u5740\uff0c\u7136\u540e\u60a8\u7684\u6d4f\u89c8\u5668\u53ef\u4ee5\u5c06\u60a8\u8fde\u63a5\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u5728HTTPS\u4e0a\u5f15\u5165DNS\u4e4b\u7c7b\u7684\u529f\u80fd\uff0c\u7528\u6237\u5c06\u53d7\u76ca\u4e8e\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u79c1\u5bc6\u6027\u3002", "note_en": "Mozilla  has announced that Comcast has joined its  Trusted Recursive Resolver program which aims to make DNS (domain name system) more trusted and secure. Cloudflare and NextDNS are already part of the TRR program and provide their DNS services to Firefox users who opt to use DNS over HTTPS (DoH).\n  \u201cComcast has moved quickly to adopt DNS encryption technology and we\u2019re excited to have them join the TRR program. Bringing ISPs into the TRR program helps us protect user privacy online without disrupting existing user experiences. We hope this sets a precedent for further cooperation between browsers and ISPs.\u201d\n With its TRR program, Mozilla said that encrypting DNS data with DoH is just the first step in securing DNS. It said that the second step requires companies handling the data to have appropriate rules in place for handling it. Mozilla believes these rules include limiting data collection and retention, ensuring transparency about any retained data, and limiting the use of the resolver to block access or modify content.\n  \u201cWe\u2019re proud to be the first ISP to join with Mozilla to support this important evolution of DNS privacy. Engaging with the global technology community gives us better tools to protect our customers, and partnerships like this advance our mission to make our customers\u2019 internet experience more private and secure.\u201d\n DNS is an important part of the online infrastructure as it functions like a phone book; when you type in a website like Firefox.com, the DNS will translate this URL into an internet address that the computer understands, your browser can then connect you to the right place. By introducing things like DNS over HTTPS, users will benefit from more security and privacy.", "posttime": "2020-06-26 05:21:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u52a0\u5165,isp,dns", "title": "\u5eb7\u5361\u65af\u7279\u6210\u4e3a\u52a0\u5165Mozilla TRR\u8ba1\u5212\u7684\u7b2c\u4e00\u5bb6ISP", "title_en": "Comcast Becomes the First ISP To Join Mozilla's TRR Program", "transed": 1, "url": "https://www.neowin.net/news/comcast-becomes-the-first-isp-to-join-mozillas-trr-program/", "via": "", "real_tags": ["\u52a0\u5165", "isp", "dns"]}, {"category": "", "categoryclass": "", "imagename": "b02d9197504a7271eb7875588c6ab4db.jpeg", "infoid": 1008291, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u66fe\u7ecf\u5728\u4e00\u5ea7\u53e4\u8001\u7684\u5efa\u7b51\u4e2d\u5de5\u4f5c\u8fc7\uff0c\u4f60\u5f88\u6709\u53ef\u80fd\u4f1a\u5728\u67d0\u4e2a\u65f6\u5019\u8d70\u8fc7\u4e00\u4e2a\u795e\u79d8\u7684\u5c0f\u9ec4\u94dc\u76d2\u5b50\u3002\u5b83\u4f4d\u4e8e\u5899\u7684\u4e00\u534a\u5de6\u53f3\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u6bb5\u5e73\u7684\u73bb\u7483\u957f\u5ea6\u8fdb\u51fa\u5b83\uff0c\u6d88\u5931\u5728\u5929\u82b1\u677f\u548c\u4e0b\u9762\u7684\u5730\u677f\u4e0a\u3002\u5b83\u4eec\u7ecf\u5e38\u88ab\u7c89\u5237\u4e00\u904d\uff0c\u88ab\u5ffd\u89c6\uff0c\u6ca1\u6709\u4eba\u4f7f\u7528\uff0c\u5b83\u4eec\u662f\u65e9\u671f\u6469\u5929\u5927\u697c\u9ec4\u91d1\u65f6\u4ee3\u7684\u9057\u8ff9\uff0c\u88ab\u79f0\u4e3a\u5361\u7279\u52d2\u90ae\u4ef6\u6ed1\u9053\u3002\n\u5361\u7279\u52d2\u90ae\u69fd\u572820\u4e16\u7eaa\u4e4b\u4ea4\u7b2c\u4e00\u6279\u591a\u5c42\u5efa\u7b51\u51fa\u73b0\u65f6\u84ec\u52c3\u53d1\u5c55\u3002\u8fd9\u9879\u53d1\u660e\u76f8\u5f53\u7b80\u5355\uff1a\u73bb\u7483\u6ed1\u69fd\u5c06\u5728\u5efa\u7b51\u7269\u5185\u90e8\u5ef6\u4f38\uff0c\u6bcf\u5c42\u697c\u90fd\u6709\u4e00\u4e2a\u90ae\u9012\u69fd\u3002\u4f60\u4e0d\u9700\u8981\u957f\u9014\u8dcb\u6d89\u4e0b\u697c\u53bb\u5bfb\u627e\u6700\u8fd1\u7684\u90ae\u7bb1\u6216\u90ae\u5c40\uff0c\u4f60\u53ea\u9700\u628a\u4f60\u7684\u4fe1\u4ece\u4f60\u5de5\u4f5c\u8fc7\u7684\u90a3\u4e2a\u5730\u677f\u4e0a\u7684\u6ed1\u69fd\u91cc\u6254\u8fdb\u53bb\uff0c\u91cd\u529b\u5c31\u4f1a\u8fc5\u901f\u628a\u4f60\u7684\u4fe1\u9001\u5230\u5927\u5802\u7684\u90ae\u7bb1\uff0c\u6bcf\u5929\u4ece\u90ae\u9012\u5458\u90a3\u91cc\u53d6\u4fe1\u3002\u5728\u90a3\u4e2a\u4eba\u4eec\u6bcf\u5929\u90fd\u8981\u5bc4\u4e00\u628a\u4fe1\u7684\u65f6\u4ee3\uff0c\u5361\u7279\u52d2\u90ae\u7b52\u7684\u4fbf\u5229\u7b80\u76f4\u662f\u5929\u8d50\u4e4b\u7269\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4eca\u5929\uff0c\u5361\u7279\u52d2\u90ae\u4ef6\u964d\u843d\u4f1e\u4ecd\u7136\u5728\u4f7f\u7528\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5927\u7ea6\u6709900\u4eba\u5728\u7ebd\u7ea6\u79ef\u6781\u5de5\u4f5c\uff0c\u4ec5\u829d\u52a0\u54e5\u5c31\u6709360\u591a\u4eba\uff0c\u90ae\u5c40\u4ecd\u7136\u5b9a\u671f\u4ece\u90a3\u91cc\u6536\u96c6\u90ae\u4ef6\u3002\n\u90ae\u7b52\u662f\u7531\u7ebd\u7ea6\u5dde\u7f57\u5207\u65af\u7279\u5e02\u7684\u8a79\u59c6\u65af\u00b7\u53e4\u5c14\u5fb7\u00b7\u5361\u7279\u52d2\u4e8e1883\u5e74\u53d1\u660e\u7684\uff0c\u6700\u521d\u5b89\u88c5\u5728\u5e02\u4e2d\u5fc3\u7684\u57c3\u5c14\u4f0d\u5fb7\u5927\u53a6\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b83\u7acb\u5373\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u5361\u7279\u52d2\u83b7\u5f97\u4e86\u90ae\u5bc4\u7cfb\u7edf\u7684\u4e13\u5229\uff0c\u8fd9\u8ba9\u4ed6\u5728\u63a5\u4e0b\u6765\u768420\u5e74\u91cc\u51e0\u4e4e\u83b7\u5f97\u4e86\u5784\u65ad\u5730\u4f4d\u3002\n\u4e13\u5229\u89c4\u5b9a\uff0c\u5927\u5802\u5305\u53a2\u672c\u8eab\u5fc5\u987b\u7531\u201c\u91d1\u5c5e\u5236\u6210\uff0c\u5e76\u660e\u663e\u6807\u6709\u2018US Letter Box\u2019\u5b57\u6837\u201d\uff0c\u201c\u95e8\u5fc5\u987b\u7528\u4e00\u4fa7\u7684\u94f0\u94fe\u6253\u5f00\uff0c\u95e8\u5e95\u79bb\u5730\u9762\u4e0d\u5c11\u4e8e2\u82f1\u5c3a6\u82f1\u5bf8\u201d\u3002\u4e3a\u4e86\u4fdd\u62a4\u53ef\u80fd\u4f1a\u4ece\u8bb8\u591a\u697c\u5c42\u6389\u843d\u7684\u90ae\u4ef6\uff0c\u5361\u7279\u52d2\u4e3a\u5927\u5802\u7684\u7bb1\u5b50\u914d\u5907\u4e86\u4e00\u4e2a\u201c\u5f39\u6027\u57ab\u5b50\uff0c\u4ee5\u9632\u6b62\u90ae\u4ef6\u53d7\u5230\u4f24\u5bb3\u3002\u201d\n\u5728\u4e0e\u90ae\u5c40\u7684\u5bc6\u5207\u5408\u4f5c\u4e0b\uff0c\u5361\u7279\u52d2\u7684\u4e13\u5229\u7cfb\u7edf\u9996\u5148\u5b89\u88c5\u5728\u94c1\u8def\u548c\u516c\u5171\u5efa\u7b51\u4e2d\u3002\n\u4f46\u968f\u7740\u57ce\u5e02\u7684\u84ec\u52c3\u53d1\u5c55\uff0c\u5728\u63a5\u4e0b\u6765\u768420\u5e74\u91cc\uff0c\u5361\u7279\u52d2\u552e\u51fa\u4e861600\u591a\u4e2a\u90ae\u7b52\uff0c\u8fdb\u5165\u4e86\u5168\u65b0\u7684\u3001\u6700\u5148\u8fdb\u7684\u6469\u5929\u5927\u697c\u3001\u5199\u5b57\u697c\u3001\u516c\u5bd3\u548c\u9152\u5e97\u3002\u5728\u4ed6\u4eec\u540d\u4e3a\u88c5\u9970\u827a\u672f\u90ae\u7bb1\u3001\u4f5c\u5bb6\u548c\u90ae\u4ef6\u6ed1\u9053\u7231\u597d\u8005\u51ef\u4f26\u00b7\u683c\u6797(Karen Greene)\u548c\u7433\u6069\u00b7\u62c9\u7ef4\u5c14(Lynne Lavelle)\u7684\u5178\u8303\u63d2\u56fe\u8bbe\u8ba1\u53f2\u4e2d\uff0c\u6ce8\u610f\u5230\u5361\u7279\u52d2\u7684\u7cfb\u7edf\u662f\u5982\u4f55\u8fc5\u901f\u53d8\u5f97\u201c\u5bf9\u4efb\u4f55\u4e3b\u8981\u9152\u5e97\u3001\u5199\u5b57\u697c\u3001\u6c11\u7528\u6216\u4f4f\u5b85\u697c\u7684\u8fd0\u8425\u81f3\u5173\u91cd\u8981\uff0c\u5c31\u50cf\u524d\u95e8\u4e00\u6837\u201d\u3002\u6839\u636e1888\u5e74\u7f57\u5207\u65af\u7279\u7684\u62a5\u544a\uff1a\n\u5728\u5f53\u4eca\u591a\u5c42\u5efa\u7b51\u7684\u65f6\u4ee3\uff0c\u5728\u5361\u7279\u52d2\u7f8e\u56fd\u90ae\u7b52\u6295\u5165\u4f7f\u7528\u4e4b\u524d\uff0c\u6ca1\u6709\u4efb\u4f55\u8fd9\u6837\u4e00\u5ea7\u5927\u53a6\u7684\u5efa\u9020\u8005\u6216\u6240\u6709\u8005\u62e5\u6709\u6240\u6709\u5fc5\u8981\u548c\u65b9\u4fbf\u7684\u7535\u5668-\u8fd9\u662f\u4e00\u79cd\u4e0e\u7535\u68af\u4e00\u6837\u5bf9\u5546\u4eba\u6765\u8bf4\u5fc5\u4e0d\u53ef\u5c11\u7684\u8bbe\u5907\u3002\n\u90ae\u4ef6\u6ed1\u9053\u7cfb\u7edf\u53ef\u80fd\u51fa\u81ea\u529f\u80fd\u6027\uff0c\u4f46\u5361\u7279\u52d2\u4e3a\u90ae\u7bb1\u672c\u8eab\u6ce8\u5165\u4e86\u4f18\u96c5\u3002\u4ed6\u7684\u76ee\u5f55\u63d0\u4f9b\u4e86\u5927\u5802\u76d2\u5b50\uff0c\u914d\u6709\u95ea\u95ea\u53d1\u5149\u7684\u9ec4\u94dc\u914d\u4ef6\u548c\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u7ec6\u8282\u3002\u4ed6\u8fd8\u6709\u8fdc\u89c1\u5353\u8bc6\u5730\u4e0e\u5f53\u65f6\u7684\u9886\u5148\u5efa\u7b51\u5e08\u5408\u4f5c\uff0c\u5141\u8bb8\u8bbe\u8ba1\u51fa\u4e0e\u7279\u5b9a\u5efa\u7b51\u7684\u5b8f\u4f1f\u76f8\u5339\u914d\u7684\u4e2a\u522b\u90ae\u7bb1\u3002\u901a\u8fc7\u5e03\u5965\u827a\u672f\u8fd0\u52a8\uff0c\u5230\u65b0\u827a\u672f\u8fd0\u52a8\uff0c\u518d\u5230\u88c5\u9970\u827a\u672f\uff0c\u5361\u7279\u52d2\u7684\u90ae\u7bb1\u53d8\u5f97\u8d8a\u6765\u8d8a\u6f02\u4eae\u548c\u534e\u4e3d\u3002The Cutler Co.\u4e0e\u4e39\u5c3c\u5c14\u00b7\u4f2f\u7eb3\u59c6(The Flatiron)\u3001\u65bd\u745e\u592b\u00b7\u5170\u59c6\u00b7\u54c8\u8499(Shreve\uff0cLamb\uff1bHarmon)(\u5e1d\u56fd\u5927\u53a6)\u3001\u65af\u9686\u00b7\u7f57\u4f2f\u900a(St.Regis)\u548c\u5361\u65af\u00b7\u5409\u5c14\u4f2f\u7279(Cass Gilbert)(\u4f0d\u5c14\u6c83\u65af)\u7b49\u5efa\u7b51\u5e08\u5408\u4f5c\u3002\n\u968f\u7740\u4fe1\u4ef6\u5c3a\u5bf8\u7684\u589e\u5927\uff0c\u90ae\u4ef6\u901a\u9053\u7684\u5835\u585e\u6210\u4e3a\u4e00\u4e2a\u65e5\u76ca\u4e25\u91cd\u7684\u95ee\u9898\u3002\u4e00\u4e2a\u8457\u540d\u7684\u4f8b\u5b50\u53d1\u751f\u5728\u897f42\u8857\u5b8f\u4f1f\u7684\u8001\u9ea6\u683c\u52b3\u5c71\u5927\u697c\u3002\u8fd9\u5ea7\u5efa\u7b51\u66fe\u7ecf\u662f\u7fe1\u7fe0\u88c5\u9970\u827a\u672f\u7684\u6770\u4f5c\uff0c\u4e5f\u662f\u6f2b\u5a01\u6f2b\u753b\u7684\u6545\u5c45\uff0c\u73b0\u5728\u5df2\u7ecf\u892a\u8272\u5230\u5e74\u4e45\u5931\u4fee\uff0c\u4ed6\u4eec\u7684\u90ae\u7b52\u572820\u4e16\u7eaa80\u5e74\u4ee3\u4e2d\u671f\u88ab\u53d1\u73b0\u5835\u585e\u3002\u5f53\u5b83\u6700\u7ec8\u88ab\u8ffd\u8e2a\u5e76\u6e05\u9664\u65f6\uff0c\u968f\u4e4b\u800c\u6765\u7684\u96ea\u5d29\u822c\u7684\u65e0\u6cd5\u6295\u9012\u7684\u90ae\u4ef6\u586b\u6ee1\u4e8623\u4e2a\u9ebb\u888b\u3002\n\u5076\u5c14\uff0c\u4fe1\u4ef6\u88ab\u5361\u4f4f\u7684\u65f6\u95f4\u4f1a\u6bd4\u8fd9\u957f\u5f97\u591a\u30021995\u5e74\uff0c\u5728\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5e03\u9c81\u514b\u65af\u7ef4\u5c14\uff0c\u4e00\u4f4d\u540d\u53eb\u739b\u683c\u4e3d\u7279\u00b7\u683c\u91cc\u65af\u4ee3\u5c14\u00b7\u6797\u5947(Marguerite Grisdale Lynch)\u7684\u5973\u58eb\u60ca\u8bb6\u5730\u6536\u5230\u4e86\u5979\u4e08\u592b50\u5e74\u524d\u5bc4\u6765\u7684\u4e00\u5c01\u4fe1\uff0c50\u5e74\u524d\uff0c\u4ed6\u628a\u4fe1\u4e22\u5728\u4e86\u5bc6\u6b47\u6839\u4e00\u5bb6\u9000\u4f0d\u519b\u4eba\u533b\u9662\u7684\u90ae\u7b52\u91cc\u3002\u4ed6\u5df2\u7ecf\u53bb\u4e1619\u5e74\u4e86\u3002\n\u5230\u4e8620\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u6d88\u9632\u6cd5\u89c4\u51e0\u4e4e\u7981\u6b62\u5728\u65b0\u5efa\u7b51\u4e2d\u5b89\u88c5Cutler\u90ae\u4ef6\u964d\u843d\u4f1e\u3002\u5b9a\u5236\u7684\u6536\u53d1\u5ba4\u53d6\u4ee3\u4e86\u5b83\u4eec\u7684\u7528\u9014\u3002\u4e00\u4e9b\u4ecd\u5728\u8fd0\u8425\u7684\u516c\u53f8\u6b63\u5728\u9010\u6e10\u8870\u843d\uff1b\u514b\u83b1\u65af\u52d2\u5927\u697c\u6700\u8fd1\u5173\u95ed\u4e86\u4ed6\u4eec\u7684\u5927\u697c\uff0c\u800c\u8000\u773c\u7684\u534e\u5c14\u9053\u592b-\u963f\u65af\u6258\u91cc\u4e9a\u9152\u5e97\u4e5f\u5173\u95ed\u4e86\u4ed6\u4eec\u7684\u4e09\u4e2a\u964d\u843d\u4f1e\u3002\n\u4eca\u5929\u5b58\u653e\u964d\u843d\u4f1e\u7684\u5efa\u7b51\u4e94\u82b1\u516b\u95e8\u3002\u6709\u4e9b\u662f\u5b8f\u4f1f\u7684\uff0c\u6bd4\u5982\u5f17\u96f7\u5fb7\u00b7\u5f17\u4f26\u5947\u9152\u5e97\u95ea\u95ea\u53d1\u5149\u7684\u91d1\u8272\u5927\u5385\uff0c\u514b\u83b1\u65af\u52d2\u6c7d\u8f66\u7684\u5149\u6ed1\u7684\u94ec\u548c\u94a2\uff0c\u7f57\u65af\u798f\u9152\u5e97\u7684\u7cbe\u81f4\uff0c\u4ee5\u53ca\u4e2d\u592e\u8f66\u7ad9\u7684\u5b8f\u4f1f\u3002\u5176\u4ed6\u7684\u529f\u80fd\u66f4\u591a\uff0c\u6bd4\u5982\u6e2f\u52a1\u5c40\u5df4\u58eb\u7ec8\u70b9\u7ad9\uff0c\u767e\u8001\u6c47\u3001\u670d\u88c5\u533a\u548c\u7b2c\u4e94\u5927\u9053\u4e24\u65c1\u6392\u5217\u7740\u65e0\u6570\u7684\u529e\u516c\u5ba4\u3002\n\u6211\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4e2aCutler\u90ae\u4ef6\u6ed1\u9053\u662f\u5728\u6211\u81ea\u5df1\u7684\u5de5\u4f5c\u5927\u697c\u91cc\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u666e\u901a\u768420\u5c42\u529e\u516c\u5ba4\uff0c\u5efa\u4e8e1927\u5e74\uff0c\u4f4d\u4e8e\u7b2c10\u5927\u9053\u548c\u7b2c34\u8857\u7684\u62d0\u89d2\u5904\u3002\u6211\u697c\u5c42\u7684\u964d\u843d\u4f1e\uff0c\u4e5f\u5c31\u662f\u7b2c5\u5c42\uff0c\u65e9\u5df2\u88ab\u6f06\u6210\u767d\u8272\uff0c\u4f46\u69fd\u4ecd\u7136\u655e\u5f00\u7740\u3002\u5927\u5385\u7684\u90ae\u7bb1\u6ca1\u6709\u5c55\u793a\u4efb\u4f55\u88c5\u9970\u827a\u672f\u7684\u4e1c\u897f\uff0c\u6bd4\u65b9\u8bf4\uff0c\u897f\u8054\u6c47\u6b3e\u65e7\u5927\u697c\u91cc\u7684\u5361\u7279\u52d2\u4fe1\u7bb1(Cutler Box)\u3002\u4f46\u4ecd\u7136\u6574\u9f50\u5730\u6446\u653e\u7740\u6807\u51c6\u5361\u7279\u52d24165\u578b\u7684\u9ec4\u94dc\u914d\u4ef6\u548c\u9ed1\u8272\u6cb9\u6f06\u9576\u5d4c\u3002\u5728\u544a\u8bc9\u5927\u5802\u4fdd\u5b89\u65f6\uff0c\u4ed6\u4e0d\u5efa\u8bae\u4f7f\u7528\u5b83\u8d85\u8fc716\u5c42\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u5730\u65b9\u5835\u585e\u4e86\u3002\u4ed6\u8bf4\uff1a\u201c\u6709\u65f6\u5019\u8d85\u7ea7\u5175\u4f1a\u4e0a\u53bb\u628a\u91cd\u7269\u6254\u4e0b\u53bb\uff0c\u628a\u5b83\u6e05\u7406\u5e72\u51c0\u3002\u201d\n\u7136\u800c\uff0c\u90ae\u9012\u5458\u6bcf\u5929\u90fd\u4f1a\u4ece\u5361\u7279\u52d2\u964d\u843d\u4f1e\u5c3d\u5934\u7684\u5927\u5802\u4fe1\u7bb1\u91cc\u53d6\u56de\u4fe1\u4ef6\u3002", "note_en": "If you have ever worked in an old building, the chances are you will have at some point walked past a small mysterious brass box . Located about halfway up the wall, it is notable for a flat length of glass leading both into and out it, disappearing into the ceiling and the floor below. Often painted over, ignored and unused, they are a relic of the golden age of early skyscrapers called the Cutler mail chute.\n The Cutler mail chutes flourished during the advent of the first multi-story buildings in the turn of the 20 th century. The invention was fairly simple: the glass chutes would run internally the length of the building, with a mailing slot on each floor. Rather than having to make the trek downstairs to find the nearest mail box or post office, you would simply pop your letter into the chute from whichever floored you worked on, and gravity would swiftly carry your letter to a mailbox in the lobby, for daily collection from the postman. In an era when people were sending handfuls of letters each day,  the convenience of the Cutler mail chute was a godsend.\n   Remarkably today, the Cutler mail chute is still in use. In fact there are approximately 900 actively working in New York and just over 360 in Chicago alone, from which the post office still routinely collects the mail.\n  The mail chute was invented by James Goold Cutler in Rochester, NY, in 1883 and was first installed at the  Elwood building in the center of the city. It proved an instant success and Cutler received the patent for the mailing system, that secured him  a virtual monopoly for the next 20 years.\n The patent specified that the lobby box itself must be made \u201cof metal, distinctly marked \u2018US Letter Box\u2019\u201d, and that the \u201cdoor must open on hinges on one side, with the bottom of the door not less than 2\u20196 above the floor.\u201d To protect items of mail that would be dropping from many floors, Cutler outfitted the lobby box with an  \u201celastic cushion to prevent injury to the mail.\u201d\n   Working in close co-operation with the post office, Cutler\u2019s patent system was first installed in  railways and public buildings.\n But as cities boomed skywards, over the next 20 years Cutler sold over 1,600 mail chutes, making their way into brand new, state of the art skyscrapers, office buildings, apartments and hotels. In their exemplary illustrated design history called   Art Deco Mailboxes, writers and mail chute aficionados Karen Greene and Lynne Lavelle, note how Cutler\u2019s system quickly became as \u201cessential to the operation of any major hotel, office, civic or residential building as the front door.\u201d And according to report from Rochester in 1888:\n \u201cIn the present age of multi-storied buildings, no builder or owner of such an edifice has all the needful and convenient appliances until the Cutler US Mail Chute is in use therein\u2014a device as necessary for the businessman as the elevator.\u201d\n The mail chute system might have born out of functionality, but Cutler infused the mailboxes themselves with elegance. His catalogue offered lobby boxes furnished with gleaming brass fittings and elaborate detailing. He also had the foresight to collaborate with the leading architects of the day to allow the design of individual mail boxes that would match the grandeur of specific buildings. Through the Beaux Arts movement to Art Nouveau to Art Deco, Cutler\u2019s mailboxes became increasingly beautiful and ornate. The Cutler Co. worked with architects such as Daniel Burnham (the Flatiron), Shreve, Lamb &amp; Harmon (the Empire State), Sloan &amp; Robertson (the St.Regis) and Cass Gilbert (the Woolworth).\n        As letters grew in size, clogging of the mail chutes became an increasing problem. A famous example occurred at the grand old McGraw Hill building on West 42nd Street. Once an emerald Art Deco masterpiece, and former home of Marvel Comics, the building has now faded into disrepair and a clog in their mail chute was discovered in the mid 1980s. When it was eventually tracked down and cleared, the resulting  avalanche of undelivered mail filled 23 sacks.\n Occasionally, letters get stuck for much longer than that. In 1995, in Brooksville, Florida a lady called Marguerite Grisdale Lynch was astonished to receive a letter from her husband 50 years after he dropped it in a mail chute in a Michigan Veteran\u2019s hospital.  He had already been dead for 19 years.\n By the 1990s, fire codes all but outlawed Cutler mail chutes from being installed in new buildings. Bespoke mail rooms replaced their use. And some of the ones still in operation are gradually on the wane; the Chrysler building recently sealed theirs, whilst the glitzy Waldorf-Astoria also closed their three chutes.\n  The buildings that house the chutes today are a varied lot. Some are grand, such as the gleaming gold lobby of the Fred French, the sleek chromium and steel of the Chrysler, the sophistication of the Roosevelt hotel, and the magnificence of Grand Central Station. Others are more functional like the Port Authority bus terminal, and countless offices lining Broadway, the Garment District and Fifth Avenue.\n         The first Cutler mail chute I noticed was in my own work building, a fairly average 20 floor office built in 1927 on the corner of 10th Avenue and 34th Street. The chute on my floor, the 5th, had long been painted over in white, but the slot was still open. The mailbox in the lobby didn\u2019t display any of the art deco flourishes of, say, the Cutler box in the old Western Union building. but was still neatly furnished with the brass fittings and black painted inlays of the standard Cutler model 4165. Speaking to the lobby security guard, he didn\u2019t recommend using it up past floor 16 as there was a blockage somewhere. \u201cSometimes the super will go up and drop something heavy down there to clear it,\u201d he said.\n Every day, though, the postman still retrieves letters from the lobby box at the end of the Cutler chute.", "posttime": "2020-06-26 05:21:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ebd\u7ea6\u5e02,city,\u90ae\u4ef6", "title": "\u7ebd\u7ea6\u5e02\u7684\u90ae\u7b52(2015)", "title_en": "New York City\u2019s Mail Chutes (2015)", "transed": 1, "url": "https://www.atlasobscura.com/articles/new-york-citys-mail-chutes-are-lovely-ingenious-and-almost-entirely-ignored", "via": "", "real_tags": ["\u7ebd\u7ea6\u5e02", "city", "\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008290, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528\u5c55\u5f00\u5143\u7d20\uff0c\u5982\u624b\u98ce\u7434\u3001\u5de5\u5177\u680f\u3001\u5de5\u5177\u63d0\u793a\u6216\u6ed1\u52a8\u4fa7\u680f(\u6216\u5176\u4ed6\u975e\u6a21\u6001\u5143\u7d20)\u3002\n\u5c06\u7528\u6237\u5f15\u5bfc\u5230\u4e0d\u540c\u7684\u9875\u9762\uff0c\u4ee5\u9694\u79bb\u4ea4\u4e92\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5bf9\u5bfc\u822a\u7b49\u529f\u80fd\u7684\u8bbf\u95ee\u3002\n\u8003\u8651\u4f7f\u7528\u5185\u8054\u201c\u64a4\u6d88\u201d\u9009\u9879\u6765\u52a0\u901f\u7528\u6237\u7684\u4ea4\u4e92\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u786e\u8ba4\u6a21\u6001\u3002\n\u5982\u679c\u60a8\u4e00\u5b9a\u8981\u4f7f\u7528\u4e00\u4e2a\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u6a21\u5f0f\u662f\u597d\u7684\uff01\n\u901a\u8fc7\u9000\u51fa\u952e\u3001\u5728\u6a21\u5f0f\u7a97\u53e3\u5916\u5355\u51fb\u4ee5\u53ca\u5e26\u6709\u6e05\u6670\u6807\u7b7e\u7684\u5173\u95ed\u6309\u94ae\uff0c\u53ef\u4ee5\u8f7b\u677e\u6e05\u9664\u7834\u6298\u53f7(&amp\uff1b)\u3002\n\u8fd9\u662f\u76f8\u5f53\u4e0d\u8a00\u800c\u55bb\u7684-\u5982\u679c\u4f60\u4e0d\u80fd\u8ba9\u5b83\u53d8\u5f97\u5bb9\u6613\u8bbf\u95ee\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528\u6a21\u6001\u3002", "note_en": "Use expanding elements such as accordions, toolbars, tooltips, or sliding sidebars (or other modeless elements).\n  Lead the user to a different page to isolate the interaction without losing access to functionality such as navigation.\n  Instead of for instance confirmation modals, consider using inline \u201cUndo\u201d option to speed up the user&#39;s interactions.\n  If you absolutely have to use one, make sure your modal is a good one!\n  Make it simple to get rid of &amp;dash by escape key, clicking outside the modal window, and a clearly labelled close button.\n      This is fairly selfexplanatory \u2014 if you can&#39;t make it accessible, don&#39;t use a modal.", "posttime": "2020-06-26 05:20:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60c5\u6001,damn", "title": "\u6211\u4eec\u7528\u4e86\u592a\u591a\u8be5\u6b7b\u7684\u60c5\u6001\u52a8\u8bcd", "title_en": "We Use Too Many Damn Modals", "transed": 1, "url": "https://modalzmodalzmodalz.com/", "via": "", "real_tags": ["\u60c5\u6001", "damn"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008289, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Fly\u7684\u5934\u51e0\u5468\u662f\u5fd9\u788c\u7684\uff0c\u6211\u8fb9\u8d70\u8fb9\u5199\u4e1c\u897f\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u5fc5\u987b\u5b66\u4e60\uff0c\u4f60\u4e5f\u8981\u5b66\u4e60\u3002\u8fd9\u4f1a\u6709\u70b9\u66f2\u6298\uff0c\u4f60\u5f97\u5e94\u4ed8\u4e00\u4e0b\u3002\n\u8ba9\u6211\u4eec\u4ece\u201c\u4ec0\u4e48\u662f\u98de\u7fd4\uff1f\u201d\u5f00\u59cb\u5427\u3002\u7b80\u8981\u5730\u8bf4\uff1aFly\u662f\u4e00\u4e2a\u7528\u4e8eDocker\u5bb9\u5668\u7684\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc\u3002\u52a8\u6001\u6258\u7ba1\u7684\u5e94\u7528\u7a0b\u5e8f\u901f\u5ea6\u5f88\u5feb\uff0c\u56e0\u4e3a\u5b83\u4eec\u8fd0\u884c\u5728\u79bb\u7528\u6237\u5f88\u8fd1\u7684\u673a\u5668\u4e0a\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u8bb8\u591a\u57ce\u5e02\u8fd0\u884c\u88f8\u673a\u670d\u52a1\u5668\uff0c\u5e76\u5c06\u5bb9\u5668\u6258\u7ba1\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u4e0a\u7684\u201c\u97ad\u70ae\u201d\u865a\u62df\u673a\u4e2d\u3002\u6211\u4eec\u901a\u8fc7\u5168\u5c40WireGuard\u7f51\u683c\u4ee3\u7406\u4ece\u8fb9\u7f18\u670d\u52a1\u5668\u5230\u5bb9\u5668\u7684\u6d41\u91cf\u3002\u5b83\u6bd4ECS\u6216K8\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u6240\u4ee5\u6ce8\u518c\u4e00\u4e2a\u514d\u8d39\u8d26\u6237\u53ef\u80fd\u662f\u4f53\u9a8c\u5b83\u7684\u6700\u597d\u65b9\u5f0f\uff0c\u4e5f\u662f\u4e00\u79cd\u71c3\u70e75-10\u5206\u949f\u7684\u6109\u5feb\u65b9\u5f0f\u3002\n\u663e\u7136\uff0c\u8981\u6267\u884c\u6b64\u7c7b\u64cd\u4f5c\uff0c\u60a8\u9700\u8981\u751f\u6210\u8bc1\u4e66\u30022020\u5e74\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5408\u7406\u7684\u65b9\u5f0f\u662f\u4f7f\u7528LetsEncrypt\u3002\u6211\u4eec\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u7684\u7528\u6237\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u662f\u201c\u5b83\u5c31\u662f\u6709\u6548\u7684\u201d\u4f7f\u5f97\u8fd9\u7bc7\u6587\u7ae0\u76f8\u5f53\u67af\u71e5\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u770b\u770b\u6211\u80fd\u505a\u5f97\u6709\u591a\u590d\u6742\u548c\u591a\u66f2\u6298\u3002\nLetsEncrypt\u4e0d\u662f\u9a8c\u8bc1\u6765\u81ea\u201c\u5408\u683c\u7684\u72ec\u7acb\u4fe1\u606f\u6e90\u201d\u7684\u4fe1\u606f\uff0c\u800c\u662f\u7b80\u5355\u5730\u57fa\u4e8e\u57df\u7684\u6240\u6709\u6743\u8bc1\u660e\u8fdb\u884c\u57df\u9a8c\u8bc1\u8bc1\u4e66\uff0c\u5e76\u7531\u540d\u4e3aACME\u7684\u534f\u8bae\u9a71\u52a8\u3002Acme\u975e\u5e38\u7b80\u5355\u3002\u5b83\u51e0\u4e4e\u662f\u5728\u7eafBourne shell\u4e2d\u5b9e\u73b0\u7684\u3002\u5176\u4e2d\u6700\u590d\u6742\u7684\u662fJWS\u7b7e\u540d\uff0c\u867d\u7136\u5f88\u7cdf\u7cd5\uff0c\u4f46\u81f3\u5c11\u662f\u6807\u51c6\u5316\u7684\u3002ACME\u534f\u8bae\u672c\u8eab\u662f\u901a\u8fc7\u666e\u901aHTTP\u8bf7\u6c42\u5b8c\u6210\u7684\uff1b\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a\n\u60a8\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u5e76\u5c06ECDSA/EdDSA\u5bc6\u94a5\u4e0e\u5176\u76f8\u5173\u8054\uff0c\u968f\u540e\u8be5\u5bc6\u94a5\u5c06\u5bf9\u60a8\u7684\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\n\u7136\u540e\u60a8\u53d1\u5e03\u8bc1\u4e66\u7684\u201c\u8ba2\u5355\u201d\uff0c\u6307\u5b9a\u60a8\u9700\u8981\u7684DNS\u540d\u79f0\u3002\u4f5c\u4e3a\u56de\u62a5\uff0c\u60a8\u5c06\u83b7\u5f97\u201c\u6388\u6743\u201d\u548c\u201c\u6700\u7ec8\u201dURL\u3002\n\u60a8\u5728\u81ea\u5df1\u7aef\u8bbe\u7f6e\u8d28\u8be2\uff0c\u7136\u540e\u8f6e\u8be2\u72b6\u6001URL\u4ee5\u9a8c\u8bc1\u8d28\u8be2\u662f\u5426\u5df2\u5b8c\u6210\u3002\nAcme\u8d28\u8be2\u65e8\u5728\u9a8c\u8bc1\u60a8\u5bf9\u67d0\u4e2a\u57df\u7684\u6240\u6709\u6743\u3002\u5b83\u4eec\u6709\u4e09\u4e2a(\u5982\u679c\u7b97\u4e0a\u9884\u6388\u6743\uff0c\u6709\u56db\u4e2a\uff0cLetsEncrypt\u6ca1\u6709)\uff1b\u6700\u521d\uff0c\u5b83\u4eec\u662f\uff1a\ntls-http-01\uff0c\u5176\u4e2d\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u4ee4\u724c\uff0c\u653e\u5728\u60a8\u7684\u670d\u52a1\u5668\u4e0a\u7684/.well-now/acme-challengl\u4e0b\uff0c\u5e76\u572880/tcp\u4e0a\u670d\u52a1\u4e8eLetsEncrypt\u7684\u5ba2\u6237\u673a\u3002\u8fd9\u5f88\u5bb9\u6613\u63cf\u8ff0\u548c\u5b9e\u73b0\uff0c\u4f46\u662f\u9700\u8981\u60a8\u54cd\u5e9480/TCP\u4e0a\u7684HTTP\u8bf7\u6c42\uff0c\u8fd9\u662f\u5f88\u591a\u4eba(\u660e\u667a\u5730)\u4e0d\u60f3\u505a\u7684\u3002\nTLS-DNS-01\uff0c\u5176\u4e2d\u7ed9\u60a8\u4e00\u4e2a\u4ee4\u724c\u4ee5\u653e\u5165\u60a8\u7684DNS\u533a\u57df\u7684TXT\u8bb0\u5f55\u4e2d\u3002\u8fd9\u76f4\u63a5\u8bc1\u660e\u4e86\u5bf9\u57df\u7684\u63a7\u5236\uff0c\u4f46\u64cd\u4f5c\u5458\u5f88\u96be\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u7279\u522b\u662f\uff0c\u5c24\u5176\u662f\u5728\u8f83\u5927\u7684\u7ec4\u7ec7\u4e2d\uff0c\u9700\u8981\u8bc1\u4e66\u7684\u4eba\u4e0d\u4e00\u5b9a\u88ab\u6388\u4e88\u8bbf\u95eeDNS\u914d\u7f6e\u7684\u6743\u9650\u3002\ntns-sni-01\uff0c\u5176\u4e2d\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u4ee4\u724c\uff0c\u7528\u4e8e\u5c06\u60a8\u5411\u901a\u8fc7TLS SNI\u8bf7\u6c42\u8bc1\u4e66\u7684TLS\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u8bc1\u4e66\u5d4c\u5165\u5230SAN\u4e2d\uff0c\u8fd9\u76f8\u5f53\u4e8eTLS\u7684HTTP\u201cHost\u201d\u6807\u5934\u3002\u8fd9\u4e00\u70b9\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u5374\u662f\u6700\u5927\u7684\u6311\u6218\uff1a\u60a8\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u8fd0\u884c\u60a8\u672c\u6765\u8981\u8fd0\u884c\u7684TLS\u670d\u52a1\u5668\u3002\n\u4f46TLS-SNI-01\u5df2\u4e0d\u590d\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5b89\u5168\u3002SNI\u6311\u6218\u7684\u95ee\u9898\u662f\u5171\u4eab\u4e3b\u673a\u3002\n\u7531\u4e8eIP\u5730\u5740\u7a00\u7f3a\uff0c\u8bb8\u591a\u4e3b\u673a\u63d0\u4f9b\u5546\u5b89\u6392\u5ba2\u6237\u5171\u4eabIP\u5730\u5740\u3002\u5f53\u5ba2\u6237\u7684\u8bf7\u6c42\u5230\u8fbe\u65f6\uff0c\u5b83\u4eec\u57fa\u4e8eSNI\u8fdb\u884c\u8def\u7531\u3002\n\u4e0e\u60a8\u53ef\u4ee5\u914d\u7f6e\u672c\u5730nginx\u4ee5\u54cd\u5e94\u4efb\u4f55Host\u6807\u5934\u800c\u4e0d\u4e2d\u65adInternet\u7684\u65b9\u5f0f\u76f8\u540c\uff0c\u6258\u7ba1\u63d0\u4f9b\u5546\u901a\u5e38\u5141\u8bb8\u4eba\u4eec\u5728\u5176\u5e73\u53f0\u4e0a\u201c\u58f0\u660e\u201d\u4efb\u610f\u4e3b\u673a\u540d\u3002\u8fd9\u8868\u9762\u4e0a\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u5bf9DNS\u7684\u63a7\u5236\uff0c\u60a8\u65e0\u6cd5\u8ba9\u4eba\u4eec\u4e0e\u60a8\u58f0\u79f0\u7684\u4e3b\u673a\u540d\u5bf9\u8bdd\u3002\n\u4f60\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u4e86\u3002\u4e0b\u9762\u662fLetsEncrypt\u4f7f\u7528SNI\u9a8c\u8bc1\u57df\u6240\u6709\u6743\u7684\u65b9\u6cd5\uff1a\n\u5b83\u4e3a\u60a8\u751f\u6210\u4e86\u4e00\u4e2a\u4ee4\u724c\uff0c\u7528\u4e8e\u653e\u5165\u4e00\u4e2a\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u5176\u5f62\u5f0f\u4e3a\u201c.acme.invalid\u201d\u4e3b\u673a\u540d\u3002\n\u5b83\u89e3\u6790\u4e86\u60a8\u5728DNS\u4e2d\u4e3a\u5176\u751f\u6210\u8bc1\u4e66\u7684\u4e3b\u673a\u540d\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230\u8be5\u4e3b\u673a\u540d\u3002\n\u5982\u679c\u4e3b\u673a\u63d0\u4f9b\u5546\u8ba9\u60a8\u5728\u201c.Invalid\u201dTLD\u4e2d\u58f0\u660e\u540d\u79f0\uff0c\u5e76\u4e3a\u5b83\u4eec\u4e0a\u4f20\u60a8\u81ea\u5df1\u7684\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u4e3a\u60a8IP\u4e0a\u6258\u7ba1\u7684\u6240\u6709\u5ba2\u6237\u9881\u53d1\u7684\u8bc1\u4e66\u3002Heroku\u5141\u8bb8\u60a8\u8fd9\u6837\u505a\uff0cAWS CloudFront\u4e5f\u662f\u5982\u6b64\uff0c\u8c01\u77e5\u9053\u8fd8\u4f1a\u6709\u8c01\u5462\u3002\nLetsEncrypt\u5728\u4e3b\u673a\u63d0\u4f9b\u5546\u90e8\u7f72\u4fee\u590d\u7a0b\u5e8f\u7684\u540c\u65f6\uff0c\u8fc5\u901f\u89e3\u51b3\u4e86SNI\u7684\u6311\u6218\u3002\u6700\u7ec8\uff0cSNI\u88ab\u5982\u6b64\u5e7f\u6cdb\u5730\u4f7f\u7528\uff0c\u4ee5\u81f3\u4e8eCA\u5f97\u51fa\u7ed3\u8bba\uff0c\u5c06SNI\u7528\u4f5c\u6311\u6218\u4ece\u6839\u672c\u4e0a\u662f\u4e0d\u5b89\u5168\u7684\uff0cACME SNI\u6311\u6218\u88ab\u5426\u51b3\uff0c\u5e76\u6700\u7ec8\u5728\u53bb\u5e74\u88ab\u5220\u9664\u3002\n\u6b64\u653b\u51fb\u662f\u4e00\u79cd\u79f0\u4e3a\u201c\u5b50\u57df\u63a5\u7ba1\u201d\u7684\u66f4\u5e7f\u6cdb\u653b\u51fb\u7c7b\u522b\u7684\u5b9e\u4f8b\uff0c\u8be5\u653b\u51fb\u7c7b\u522b\u662f\u6f0f\u6d1e\u8d4f\u91d1\u730e\u4eba\u7684\u4e2d\u6d41\u7825\u67f1\u3002\u5982\u679c\u4f60\u60f3\u5728\u4e00\u4e2a\u665a\u4e0a\u8d5a50\u7f8e\u5143\u5de6\u53f3\uff0cHackerOne\u4f1a\u544a\u8bc9\u4f60\u4e00\u5207\u3002\n\u56e0\u6b64\uff0c\u6bcf\u5f53\u60a8\u4e3a\u5ba2\u6237\u57df\u6258\u7ba1\u5185\u5bb9\u65f6\uff0c\u60a8\u90fd\u4f1a\u9047\u5230\u5f53\u5ba2\u6237\u505c\u6b62\u4f7f\u7528\u60a8\u7684\u670d\u52a1\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u7684\u95ee\u9898\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u9884\u671f\u7684\u90a3\u6837\uff0c\u5f88\u591a\u65f6\u5019\u60a8\u4f1a\u5fd8\u8bb0\u505c\u6b62\u5411\u65e7\u7684\u8fc7\u671f\u670d\u52a1\u8f6c\u53d1DNS\u3002\u4f46\u60a8\u5728\u8fd9\u4e9b\u670d\u52a1\u4e0a\u7684\u5e10\u6237\u5df2\u5931\u6548\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u5176\u4ed6\u4eba\u53ef\u4ee5\u58f0\u660e\u4e0e\u60a8\u4f7f\u7528\u7684\u540d\u79f0\u76f8\u540c\u7684\u540d\u79f0\u3002\u7531\u4e8e\u60a8\u4ecd\u5728\u5c06\u6d41\u91cf\u5b9a\u5411\u5230\u8be5\u670d\u52a1\uff0c\u65b0\u7684\u7d22\u8d54\u4eba\u73b0\u5728\u5df2\u7ecf\u52ab\u6301\u4e86\u60a8\u7684\u4e00\u4e2a\u5b50\u57df\u3002\n\u8fd9\u5bf9\u4e8e\u5404\u79cd\u539f\u56e0\u90fd\u662f\u4e0d\u597d\u7684\uff1b\u5b83\u5141\u8bb8\u60a8\u7a83\u53d6cookie\u3001\u8fdd\u53cdCORS\u3001\u7ed5\u8fc7CSP\uff1b\u5b83\u751a\u81f3\u4f1a\u5f71\u54cdOAuth2\u3002\nFly\u901a\u8fc7\u4e0d\u91cd\u590d\u4f7f\u7528IP\u5730\u5740\u7f13\u89e3\u4e86ALPN\u6311\u6218\u7684\u8fd9\u4e00\u95ee\u9898\u3002\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u83b7\u5f97\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u53ef\u8def\u7531\u7684IPv6\u5730\u5740\uff0c\u9664\u975e\u76ee\u6807\u4e3b\u673a\u540d\u901a\u8fc7CNAME\u89e3\u6790\u4e3a\u8be5IPv6\u5730\u5740\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u4f1a\u5c1d\u8bd5\u8ba9\u9a8c\u8bc1\u52a0\u5bc6\u3002(\u6211\u4eec\u4e3aDNS\u6311\u6218\u505a\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5)\u3002\n\u56de\u60f3\u4e00\u4e0bTLS-SNI-01\u6311\u6218\u7684\u4f18\u70b9\uff1a\u5b83\u4e0d\u9700\u8981\u60a8\u6709\u6743\u8bbf\u95ee\u60a8\u7684DNS\u914d\u7f6e\uff0c\u4e5f\u4e0d\u9700\u8981\u6253\u5f0080/tcp\u3002\u4f60\u60f3\u8981\u8fd9\u6837\u7684\u6311\u6218\u3002\u8fd8\u6709\u4e00\u4e2a\uff1a\u65b0\u7684\u7b2c\u4e09\u5c4aACME\u6311\u6218\u8d5b\uff0cTLS-ALPN-01\u3002\n\u8981\u7406\u89e3TLS-ALPN-01\uff0c\u60a8\u5f53\u7136\u9700\u8981\u77e5\u9053ALPN\u662f\u4ec0\u4e48\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff1a\u5047\u8bbeTLS\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u4f20\u8f93\u534f\u8bae\uff0c\u4e0eTCP\u548cUDP\u5e76\u9a7e\u9f50\u9a71\uff1bALPN\u5c06\u662f\u5b83\u7684\u7aef\u53e3\u53f7\u3002\u6211\u662f\u8bf4\uff0c\u5b83\u4eec\u662f\u5b57\u7b26\u4e32\uff0c\u4e0d\u662f\u6570\u5b57\uff0c\u800c\u662f\u4e00\u6837\u7684\u6982\u5ff5\u3002\n\u4e3a\u4ec0\u4e48TLS\u9700\u8981\u8fd9\u6837\u7684\u4e1c\u897f\uff1f\u5927\u591a\u6570\u4f7f\u7528TLS\u7684\u4e1c\u897f\u90fd\u5df2\u7ecf\u6709\u4e86\u81ea\u5df1\u7684TCP\u7aef\u53e3\u3002\u5f53\u7136\uff0c\u7b54\u6848\u662fHTTP/2\u3002HTTP/2\u4e0eHTTP/1(\u5b83\u662f\u4e3a\u6d41\u6c34\u7ebf\u4f18\u5316\u7684\u4e8c\u8fdb\u5236\u534f\u8bae)\u4e0d\u662f\u6709\u7ebf\u517c\u5bb9\u7684\u3002\u4f46\u5b83\u4e0d\u80fd\u6709\u81ea\u5df1\u7684TCP\u7aef\u53e3\uff0c\u56e0\u4e3a\u5982\u679c\u6709\uff0c\u5c31\u6ca1\u6709\u4eba\u80fd\u8bf4\u51fa\u81ea\u5df1\u7684\u8bdd\uff1a\u4e92\u8054\u7f51\u7684\u5927\u91cf\u6570\u636e\u90fd\u88ab\u9501\u5b9a\u5728\u7aef\u53e380\u548c443\u4e0a\u3002\n(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6211\u4eec\u4e0d\u662f\u5728\u8fd0\u884c\uff1b\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fd0\u884c\u60a8\u60f3\u8981\u7684\u4efb\u4f55TCP\u670d\u52a1\u3002\u4f46\u6211\u79bb\u9898\u4e86)\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53Google\u5728\u8bbe\u8ba1SPDY(HTTP/2\u7684\u524d\u8eab)\u65f6\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86NPN\uff0c\u5373\u201c\u4e0b\u4e00\u534f\u8bae\u534f\u5546\u201d\u3002NPN\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff1a\nTLS\u5ba2\u6237\u7aef\u5411\u5176ClientHello\u6dfb\u52a0\u4e86NPN\u6269\u5c55\uff0c\u5373TLS\u5ba2\u6237\u7aef\u53d1\u9001\u4ee5\u6253\u5f00\u8fde\u63a5\u7684\u6d88\u606f\u3002\n\u652f\u6301\u7684TLS\u670d\u52a1\u5668\u5c06\u4f7f\u7528ServerHello\u8fdb\u884c\u54cd\u5e94\uff0c\u8be5\u670d\u52a1\u5668\u5177\u6709\u586b\u5145\u4e86\u5176\u652f\u6301\u7684\u534f\u8bae\u7684NPN\u6269\u5c55\u3002\n\u5bc6\u94a5\u4ea4\u6362\u5df2\u7ecf\u5b8c\u6210\uff0c\u8fde\u63a5\u7684\u4e24\u7aef\u90fd\u5c06\u5f00\u542f\u52a0\u5bc6\u3002\nTLS\u5ba2\u6237\u7aef\u5c06\u53d1\u9001\u52a0\u5bc6\u7684NextProtocol\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u9009\u62e9\u4e0b\u4e00\u4e2a\u534f\u8bae(\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5982\u679c\u53cc\u65b9\u90fd\u8bd5\u56fe\u5077\u5077\u6478\u6478\u7684\u8bdd\uff0c\u8be5\u534f\u8bae\u53ef\u80fd\u662f\u670d\u52a1\u5668\u5217\u51fa\u7684\u534f\u8bae\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f)\u3002\n\u901a\u8fc7\u8fd9\u6837\u505a\uff0cChrome\u53ef\u4ee5\u5728\u4e0e\u8c37\u6b4c\u670d\u52a1\u5668\u4ea4\u8c08\u65f6\u9009\u62e9\u4f7f\u7528SPDY\uff0c\u800c\u4e0d\u9700\u8981\u82b1\u8d39\u5f80\u8fd4\u7684\u8c08\u5224\u65f6\u95f4\u3002\n\u5f53SPDY\u53d8\u6210HTTP/2\u65f6\uff0c\u50cfNPN\u8fd9\u6837\u7684\u4e1c\u897f\u4e5f\u9700\u8981\u6807\u51c6\u5316\u3002\u4f46\u662fIETF TLS-WG\u5e76\u4e0d\u559c\u6b22NPN\uff1b\u5c24\u5176\u662f\uff0c\u5b83\u98a0\u5012\u4e86TLS\u534f\u5546\u7684\u6b63\u5e38\u987a\u5e8f\uff0c\u5373\u5ba2\u6237\u7aef\u63d0\u8bae\u548c\u670d\u52a1\u5668\u9009\u62e9\u3002\u56e0\u6b64\uff0cIETF\u63d0\u51fa\u4e86\u5e94\u7528\u5c42\u534f\u8bae\u534f\u5546(ALPN)\u3002ALPN\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a\nTLS\u5ba2\u6237\u7aef\u5c06ALPN\u6269\u5c55\u6dfb\u52a0\u5230\u5176ClientHello\uff0c\u4ee5\u6307\u793a\u5176\u652f\u6301\u7684\u6240\u6709\u534f\u8bae\u3002\nTLS\u670d\u52a1\u5668\u5728\u5176ServerHello\u4e2d\u6307\u793a\u5176\u5728ALPN\u6269\u5c55\u4e2d\u9009\u62e9\u7684\u534f\u8bae\u3002\n\u8fd9\u91cc\u6709\u660e\u663e\u7684\u9690\u79c1\u6697\u793a\uff0c\u5bf9\u5417\uff1f\u56e0\u4e3a\u60a8\u53ef\u80fd\u8981\u6c42\u7684ALPN\u534f\u8bae\u662f\u201cTOR\u201d\u3002IETF\u6bc1\u4e86\u4e00\u5207\u3002\u8fd9\u662f\u771f\u7684\uff0c\u4f46\u8fd9\u5f88\u590d\u6742\u3002\n\u9996\u5148\uff0c\u52a0\u5bc6\u7684NextProtocol\u5e27\u63d0\u4f9b\u7684\u5b89\u5168\u6027\u6709\u70b9\u7c97\u7565\u3002\u4ee5\u4e0b\u662f\u4e00\u6b21\u88ad\u51fb\u7684\u6982\u8981\uff1a\n\u7231\u4e3d\u4e1d\u8fde\u63a5\u5230\u9c8d\u52c3\uff0c\u9a6c\u6d1b\u91cc\u975e\u5e38\u60f3\u77e5\u9053\u7231\u4e3d\u4e1d\u4f1a\u8981\u6c42\u4ec0\u4e48\u534f\u8bae\u3002\nMallory MITMS\u8fde\u63a5\u5e76\u964d\u4f4e\u5176\u5b89\u5168\u7ea7\u522b\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5f53\u201cFinish\u201d\u6d88\u606f\u5bf9\u63e1\u624b\u8fdb\u884c\u4e86\u5bc6\u7801\u8eab\u4efd\u9a8c\u8bc1\u65f6\uff0cNPN\u6b63\u5728\u8fd0\u884c/Inside/\u63e1\u624b\uff0c\u800c\u4e0d\u662f/After/It\u3002\n\u540c\u65f6\uff0cAlice\u91cd\u65b0\u8fde\u63a5\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u60a8\u8981\u505a\u7684\uff0c\u5e76\u76f4\u63a5\u4e0eBob\u91cd\u590d\u5b8c\u5168\u76f8\u540c\u7684\u8fc7\u7a0b\uff0c\u53d1\u9001\u76f8\u540c\u7684NextProtocol\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u4f7f\u7528Firefox\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u4e00\u4e2a\u5047\u8bc1\u4e66\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\uff1bFirefox\u5c06\u5b8c\u6210\u63e1\u624b(\u5305\u62ecNPN)\uff0c\u5373\u4f7f\u8bc1\u4e66\u6ca1\u6709\u9a8c\u8bc1\u3002\n(\u4e0d\u7ba1\u5b83\u6709\u4ec0\u4e48\u4ef7\u503c\uff0c\u8fd9\u91cc\u7684\u4e00\u4e9b\u9690\u79c1\u95ee\u9898\u5728TLS 1.3\u4e2d\u90fd\u6709\u8ba8\u8bba)\u3002\n\u6b64\u5916\uff0c\u5c3d\u7ba1\u4e9a\u5f53\u00b7\u5170\u5229(Adam Langley)\u5728\u7f16\u5199NPN\u89c4\u8303\u65f6\u65e0\u7591\u8003\u8651\u5230\u4e86\u9690\u79c1\u95ee\u9898\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u95ee\u9898\u53ef\u80fd\u662f\u4e2d\u95f4\u76d2\u517c\u5bb9\u6027\u3002\n\u4e2d\u95f4\u76d2\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u4f01\u4e1a\u8d2d\u4e70\u5b83\u4eec\u3002\u5b83\u4eec\u76f8\u5f53\u6602\u8d35\uff0c\u800c\u4e14\u4f01\u4e1a\u4e00\u53e3\u6c14\u4e70\u4e86\u4e00\u5927\u5806\u53ef\u6015\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4f9b\u5e94\u5546\u4eec\u771f\u7684\u5f88\u52aa\u529b\u5730\u8d62\u5f97\u4e86\u8fd9\u4e9b\u4ea4\u6613\u3002\u8d62\u5f97\u9884\u9009\u8d5b\u7684\u4e00\u4e2a\u76f4\u63a5\u65b9\u6cd5\u662f\u6bd4\u4f60\u7684\u7ade\u4e89\u5bf9\u624b\u62e5\u6709\u66f4\u591a\u7684\u529f\u80fd\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u6027\uff1a\u201c\u6839\u636e\u5ba2\u6237\u7aef\u9009\u62e9\u7684\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u8fc7\u6ee4\u8fde\u63a5\u201d\u3002Chrome\u56e2\u961f\u5927\u6982\u5728\u4e00\u82f1\u91cc\u5916\u770b\u5230\u4e86\u8fd9\u4e2a\u611a\u8822\u7684\u529f\u80fd\uff0c\u901a\u8fc7\u52a0\u5bc6NPN\u9009\u62e9\u5c06\u5176\u4ece\u684c\u9762\u4e0a\u5220\u9664\u3002\n(\u8fd9\u542c\u8d77\u6765\u6709\u70b9\u504f\u6267\uff0c\u4f46\u524d\u63d0\u662f\u60a8\u4ece\u672a\u4f7f\u7528\u8fc7\u771f\u5b9e\u7684TLS\u3002\u5728NPN vs.ALPN TLS-WG\u7ebf\u7a0b\u4e2d\uff0cAGL\u5f15\u7528\u4e86\u4ed6\u4eec\u5728\u82f1\u56fd\u53d1\u73b0\u7684\u4e00\u5bb6ISP\uff0c\u8be5ISP\u81ea\u884c\u963b\u6b62\u4e86\u6240\u6709ECDHE\u5bc6\u7801\u7ec4\u3002\u4e3a\u4ec0\u4e48\uff1f\u8c01\u77e5\u9053\u5462\uff1f\u4eba\u4eec\u4f1a\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u3002)\u3002\n\u6700\u7ec8\uff0cALPN\u5728TLS-WG\u4e2d\u51fb\u8d25\u4e86NPN\u3002\u4f46\u662f\uff0c\u5c31\u5728\u4ed6\u4eec\u5b8c\u6210\u6807\u51c6\u7684\u65f6\u5019\uff0cMozilla\u7684\u5e03\u83b1\u6069\u00b7\u53f2\u5bc6\u65af(\u4e5f\u662fRust\u7684\u6212\u6307\u5bc6\u7801\u5e93\u7684\u4f5c\u8005)\u628a\u4e8b\u60c5\u641e\u7838\u4e86\u3002\n\u6839\u636eMozilla\u7684\u7ecf\u9a8c\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u4ed6\u4eec\u6536\u5230\u957f\u5ea6\u8d85\u8fc7255\u4e2a\u5b57\u8282\u7684ClientHello\u65f6\uff0c\u4e2d\u95f4\u76d2\u5c31\u4f1a\u6302\u8d77\u3002\u6302\u8d77\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\uff0c\u56e0\u4e3aMozilla\u9700\u8981\u8d85\u65f6\u903b\u8f91\u6765\u68c0\u6d4b\u5b83\uff0c\u5e76\u5c1d\u8bd5\u66f4\u7b80\u5355\u7684\u63e1\u624b\uff0c\u4f46\u8fd9\u79cd\u903b\u8f91\u4e5f\u4f1a\u5bf9\u4f7f\u7528\u7cdf\u7cd5\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u4eba\u89e6\u53d1\uff0c\u5e76\u4ea7\u751f\u963b\u6b62\u8fd9\u4e9b\u4eba\u4f7f\u7528\u73b0\u4ee3TLS\u7684\u6548\u679c\u3002\n\u795e\u5947\u7684\u662f\uff0c\u4e00\u5929\u540e\uff0cF5\u7684\u5434\u6653\u52c7\u8df3\u4e0a\u4e86\u7ebf\u7a0b\uff0c\u89e3\u91ca\u8bf4\u65e7\u7684F5\u8f6f\u4ef6\u5c06256\u5b57\u8282\u7684ClientHello\u5e27\u4e0eTLSv2\u6df7\u6dc6\u4e86\u3002TLS\u5e27\u957f\u5ea6\u4e3a2\u5b57\u8282\u5bbd\uff1b\u4e00\u65e6ClientHello\u8d85\u8fc7255\u5b57\u8282\uff0c\u6700\u9ad8\u957f\u5ea6\u5b57\u8282\u53d8\u4e3a01h\u3002\u8be5\u5b57\u8282\u5728\u5e27\u4e2d\u7684\u4f4d\u7f6e\u4e0eSSLv2\u4e2d\u7684\u6d88\u606f\u7c7b\u578b\u76f8\u540c\u3002\u5bf9\u4e8eF5\uff0c\u5e27\u53ef\u4ee5\u662f\u957f\u5ba2\u6237\u7aefHello\u2026\u3002\u6216\u8005\u975e\u5e38\u957f\u7684SSLV2 MTCLIENTHELLO\uff0c\u4e5f\u662f01h\u3002F5\u9009\u62e9\u4e86SSLv2\u3002\n\u89e3\u51b3\u529e\u6cd5\u662f\u4ec0\u4e48\uff1f\u53d1\u9001/\u66f4\u591a/\u5b57\u8282\uff01\u5728512\u5b57\u8282\u65f6\uff0c\u9ad8\u957f\u5b57\u8282\u4e0d\u518d\u662f01h\u3002\u56e0\u6b64\u8bde\u751f\u4e86\u201cjpeg-of-cat\u201d\u6269\u5c55\uff0cAGL\u5c06\u5176\u91cd\u547d\u540d\u4e3a\u201cTLS ClientHello\u586b\u5145\u6269\u5c55\u201d\uff0c\u4ee5\u6b64\u4e3a\u4e50\u8da3\u3002\n\u8fd9\u6709\u70b9\u5e73\u6de1\u65e0\u5947\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u8d70\u4e86\u8fd9\u4e48\u8fdc\uff0c\u6240\u4ee5\u60a8\u4e0d\u59a8\u4e86\u89e3\u4e00\u4e0bFly(\u548c\u5176\u4ed6CDN\uff0c\u4ee5\u53caCaddy\u4e4b\u7c7b\u7684\u4e1c\u897f)\u662f\u5982\u4f55\u4f7f\u7528ACME\u751f\u6210\u8bc1\u4e66\u7684\uff1a\nLetsEncrypt\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee4\u724c\uff0c\u6211\u4eec\u4e3a\u5b83\u751f\u6210\u5d4c\u5165\u4e86\u4ee4\u724c\u7684\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u5e76\u5c06\u5176\u52a0\u8f7d\u5230\u5206\u5e03\u5f0f\u8bc1\u4e66\u5b58\u50a8\u4e2d\u3002\n\u6211\u4eec(\u5728ACME\u4e2d)\u8bf4\u201c\u7ee7\u7eed\u201d\uff0cLetsEncrypt\u67e5\u627e\u6211\u4eec\u6b63\u5728\u670d\u52a1\u7684\u4e3b\u673a\u540d\uff0c\u8fde\u63a5\u5230\u5b83\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a\u5c06\u201cacme-TLS/1\u201d\u8bbe\u7f6e\u4e3aALPN\u534f\u8bae\u7684ClientHello\u3002\n\u6211\u4eec\u7684Rust\u4ee3\u7406\u6355\u83b7ACME ALPN\u6848\u4f8b\uff0c\u68c0\u7d22\u8d28\u8be2\u8bc1\u4e66\uff0c\u5e76\u5c06\u5176\u63d0\u4f9b\u7ed9LetsEncrypt\u3002\nLetsEncrypt\u4e22\u5f03\u8fde\u63a5\uff0c\u5c06\u8d28\u8be2\u8bbe\u7f6e\u4e3a\u5df2\u5b8c\u6210\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u5b8c\u6210\u8bc1\u4e66\u751f\u6210\u3002\nALPN\u6311\u6218\u6bd4SNI\u6311\u6218\u66f4\u660e\u786e\uff1b\u6211\u4eec\u5fc5\u987b\u4e13\u95e8\u8bbe\u7f6e\u5b50\u670d\u52a1\u6765\u4e3a\u5ba2\u6237\u5b8c\u6210ALPN\u6311\u6218\uff0c\u800c\u4e0d\u662f\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u57fa\u4e8e\u6211\u4eec\u672c\u5730\u7684SNI\u5904\u7406\u6765\u9690\u5f0f\u5b8c\u6210\u3002(\u6839\u636e\u6211\u4eec\u7684\u8bc1\u4e66\u5904\u7406\u65b9\u5f0f\uff0c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u4f46\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48ALPN\u53ef\u4ee5\uff0c\u800cSNI\u4e0d\u53ef\u4ee5\u7684\u903b\u8f91)\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u51e0\u4e4e\u662f\u65e0\u7f1d\u7684\uff1b\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u8bf4\u201c\u662f\u7684\uff0c\u6211\u60f3\u8981\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u81ea\u5b9a\u4e49\u57df\u7684TLS\u8bc1\u4e66\u201d\u3002\u4e0d\u8fc7\uff0c\u5b83\u53ea\u9002\u7528\u4e8e\u5355\u4e2a\u4e3b\u673a\u540d\uff0c\u8fd9\u53ef\u80fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5982\u679c\u4e0d\u9002\u7528\uff0c\u60a8\u53ef\u4ee5\u4e0e\u6211\u4eec\u4e00\u8d77\u8fdb\u884cDNS\u8d28\u8be2\uff0c\u4ee5\u751f\u6210\u901a\u914d\u7b26\u8bc1\u4e66\u3002", "note_en": "It\u2019s been a hectic first couple of weeks at Fly, and I\u2019m writing things up as I go along, because if I have to learn, so do you. This is going to be a bit of a meander; you\u2019ll have to deal.\n  Let\u2019s start with \u201c what\u2019s Fly?\u201d Briefly: Fly is a content delivery network for Docker containers. Applications hosted on Fly are fast because they\u2019re running on machines close to users. To do that, we run bare metal servers in a bunch of cities and host containers on them in  Firecracker VMs. We proxy traffic from edge servers to containers through a global  WireGuard mesh. It\u2019s much easier to play with than ECS or K8s is, so  signing up for a free account is probably the best way to get a feel for it, and a pleasant way to burn 5-10 minutes.\n  Obviously, to do stuff like this, you need to generate certificates. The reasonable way to do that in 2020 is with LetsEncrypt. We do that for our users automatically, but \u201cit just works\u201d makes for a pretty boring writeup, so let\u2019s see how complicated and meandering I can make this.\n     Rather than verifying information from  \u201cQualified Independent Information Sources\u201d, LetsEncrypt does domain-validated certificates, based simply on proof of ownership of a domain, and is driven by a protocol called ACME. ACME is really simple. It\u2019s been  implemented in almost pure Bourne shell. The most complicated thing about it is JWS signatures, which are awful, but at least standardized. The ACME protocol is itself done over normal HTTP requests; the flow is roughly:\n  You make an account and associate an ECDSA/EdDSA key with it, which subsequently authenticates all your requests.\n You then post an \u201corder\u201d for a certificate, specifying the DNS names you need it for. You\u2019re given \u201cauthorization\u201d and \u201cfinalization\u201d URLs in return.\n  You set up the challenges on your own side, and then poll a status URL to verify that the challenges have completed.\n  ACME challenges are intended to verify your ownership of a domain. There are three of them (four, if you count preauthorization, which LetsEncrypt doesn\u2019t do); originally, they were:\n  tls-http-01, in which you\u2019re given a token to put on your server, under /.well-known/acme-challenge, and serve to LetsEncrypt\u2019s client on 80/tcp. This is simple to describe and implement, but requires you to respond to HTTP requests on 80/tcp, which lots of people (sensibly) don\u2019t want to do.\n tls-dns-01, in which you\u2019re given a token to put in a TXT record in your DNS zone. This directly proves control over a domain, but it can be hard for operators to do. In particular, especially in larger organizations, the people who need certificates are not necessarily given access to DNS configuration.\n tns-sni-01, in which you\u2019re given a token to embed in the SAN of a certificate you serve to TLS clients who request it through TLS SNI, which is TLS\u2019s equivalent of the HTTP \u201cHost\u201d header. This is more complicated to implement, but is the most seamless of the challenges: all you need to do it is to run the TLS server you were going to run anyways.\n   But  tls-sni-01 no longer exists, because  it\u2019s insecure. The problem with SNI challenges is shared hosting.\n  Because IP addresses are scarce, many hosting providers arrange for customers to share IP addresses. As requests arrive for customers, they\u2019re routed based on SNI.\n  In the same way that you can configure a local nginx to respond to any Host header without breaking the Internet, hosting providers routinely allow people to \u201cclaim\u201d arbitrary hostnames on their platforms. This ostensibly doesn\u2019t matter, because without control of the DNS, you can\u2019t get people to talk to your claimed hostname.\n    You may see where this is going already. Here\u2019s what LetsEncrypt did to verify domain ownership using SNI:\n  It generated a token for you to put in a self-signed certificate, in the form of an \u201c.acme.invalid\u201d hostname.\n It resolved the hostname you were generating a certificate for in the DNS and connected to it.\n  If a hosting provider let you claim names in the \u201c.invalid\u201d TLD, and upload your own certificate for them, you could get a certificate issued for all the customers hosted on your IP. Heroku let you do this, as did AWS Cloudfront, and who knows who else.\n  LetsEncrypt quickly  took the SNI challenges down while hosting providers deployed fixes. Ultimately, SNI was so widely used this way that CAs concluded SNI was fundamentally unsafe to use as a challenge, and the ACME SNI challenge was deprecated, and finally removed last year.\n   This attack is an instance of a broader attack class called \u201csubdomain takeover\u201d, which is a mainstay among bug bounty hunters.  HackerOne will tell you all about it, if you want to make $50 or so in an evening.\n  So, any time you\u2019re hosting content for customer domains, you have the problem of what happens when the customer stops using your service. As you might expect, lots of times you\u2019ll forget to stop forwarding DNS to old expired services. But your account on those services has lapsed, and that usually means that other people can claim the same names you were using. Since you\u2019re still directing traffic to the service, the new claimant has now hijacked one of your subdomains.\n  Which is bad for all kinds of reasons; it allows you to steal cookies, violate CORS, bypass CSP; it even impacts OAuth2.\n  Fly mitigates this problem for ALPN challenges by not reusing IP addresses. Every application gets a unique, routable IPv6 address, and we won\u2019t attempt Lets Encrypt validation unless the target hostname resolves via CNAME to that IPv6 address. (We do something similar for DNS challenges).\n   Recall the virtue of the  tls-sni-01 challenge: it doesn\u2019t require you to have access to your DNS configuration, nor do you need to open 80/tcp. You want a challenge that works this way. And there is one: the new third ACME challenge,  tls-alpn-01.\n  To grok  tls-alpn-01, you\u2019ll of course need to know what ALPN is. It\u2019s an easy concept: Imagine TLS was a transport protocol in its own right, alongside TCP and UDP; ALPN would be its port number. I mean, they\u2019re strings, not numbers, but same idea.\n  Why does TLS need such a thing? Most things that use TLS have their own TCP ports already. The answer is, of course,  HTTP/2. HTTP/2 isn\u2019t wire-compatible with HTTP/1 (it\u2019s a binary protocol optimized for pipelining). But it can\u2019t have its own TCP port, because if it did, nobody would be able to speak it: huge chunks of the Internet are locked down to ports 80 and 443.\n  (We\u2019re not, at Fly, by the way; you can run any TCP service you want here. But I digress from my digressions).\n  To solve this problem, when Google was designing SPDY (HTTP/2\u2019s predecessor), they came up with NPN,  \u201cNext Protocol Negotiation\u201d. The way NPN worked was:\n  A TLS client added an NPN extension to their ClientHello, the message TLS clients send to open up a connection.\n A supportive TLS server would respond with a ServerHello that had an NPN extension populated with the protocols it supported.\n A key exchange having been completed, both sides of the connection would switch on encryption.\n The TLS client would send an encrypted NextProtocol message that chose a next protocol (which technically may or may not have been one listed by the server, if both sides were trying to be sneaky about things).\n  By doing this, Chrome could opt into SPDY when talking to Google servers without burning a round trip for the negotiation.\n  When SPDY turned into HTTP/2, something like NPN needed to get standardized, too. But the IETF tls-wg  wasn\u2019t a fan of NPN; in particular, it reversed the normal order of TLS negotiation, where the client proposes and the server chooses. So the IETF came up with ALPN,  Application Layer Protocol Negotiation. ALPN works like this:\n  A TLS client adds an ALPN extension to its ClientHello indicating all the protocols it supports.\n A TLS server indicates which protocol it selected in the ALPN extension in its ServerHello.\n  There\u2019s a clear privacy implication here, right? Because the ALPN protocol you might be asking for is \u201ctor\u201d. The IETF ruins everything. And that\u2019s true, but it\u2019s complicated.\n  First, the security offered by the encrypted NextProtocol frame was a little sketchy. Here\u2019s an  outline of an attack:\n  Alice connects to Bob, and Mallory really wants to know what protocol Alice is going to ask for.\n Mallory MITMs the connection and downgrades its security. Remember that NPN is running /inside/ the handshake, not /after/ it, when the \u201cFinished\u201d message has cryptographically authenticated the handshake.\n   Alice, meanwhile, re-connects, because that\u2019s what you do, and repeats the exact same process with Bob directly, sending the same NextProtocol.\n  In practice, with Firefox, you could at one point do this  simply by sending a bogus certificate; Firefox would complete the handshake, NPN included, even if the certificate didn\u2019t validate.\n  (For what it\u2019s worth, some of the privacy issues here got mooted in  TLS 1.3).\n   Additionally, while privacy was doubtlessly on Adam Langley\u2019s mind when he wrote the NPN spec, the more important problem was probably middlebox compatibility.\n  The way middleboxes work is, enterprises buy them. They\u2019re quite expensive, and enterprises buy big ghastly bunches of them in one go, so vendors work really hard to win those deals. And one straightforward way to win a bakeoff is to come to it with more features than your competitors. Here\u2019s a feature: \u201cfilter connections based on what application protocol the client selects\u201d. The Chrome team, presumably seeing that dumb feature a mile away, took it off the table by encrypting NPN selections.\n  (This sounds paranoid, but only if you\u2019ve never worked on real-world TLS. In the NPN vs. ALPN tls-wg thread, AGL cited an ISP they found in the UK that took it upon themselves to block all the ECDHE ciphersuites. Why? Who knows? People do stuff like this.)\n  Ultimately, ALPN beat out NPN in the tls-wg. But, just as they were wrapping up the standard, Brian Smith at Mozilla (and author of Rust\u2019s ring crypto library)  threw a wrench in the works.\n  It had been Mozilla\u2019s experience that, in some cases, middleboxes would hang when they got a ClientHello that was more than 255 bytes long. Hanging is very bad, because Mozilla needed timeout logic to detect it and try a simpler handshake, but that logic would also fire for people on crappy Internet connections, and had the effect of preventing those people from using modern TLS at all.\n  Miraculously, a day later, Xiaoyong Wu at F5  jumped onto the thread to explain that older F5 software confused 256 byte ClientHello frames with TLSv2. TLS frame lengths are 2 bytes wide; once the ClientHello ticks past 255 bytes, the high length byte becomes 01h. That byte occupies the same point in the frame as the message type in SSLv2. To the F5, the frame could be a long-ish ClientHello\u2026 or a very long SSLV2 MTCLIENTHELLO, which was also 01h. The F5 chose SSLv2.\n  The fix? Send /more/ bytes! At 512 bytes, the high length byte is no longer 01h. And thus was born the \u201cjpeg-of-a-cat\u201d extension, which AGL took the fun out of by renaming it  \u201cthe TLS ClientHello Padding Extension\u201d.\n   This is a little anti-climactic, but we\u2019ve come all this way, so you might as well understand how Fly (and other CDNs, and things like Caddy) generates certificates with ACME:\n  LetsEncrypt gives us a token, for which we generate a self-signed certificate with the token embedded, that we load into our distributed certificate storage.\n We say (in ACME) \u201cgo ahead\u201d, and LetsEncrypt looks up the hostname we\u2019re serving, connects to it, and sends a ClientHello with \u201cacme-tls/1\u201d set as the ALPN protocol.\n Our Rust proxy catches the ACME ALPN case, retrieves the challenge certificate, and feeds it to LetsEncrypt.\n LetsEncrypt drops the connection, sets the challenge to completed, and allows us to complete the certificate generation.\n  The ALPN challenge is more explicit than the SNI challenge; we had to specifically set up a subservice to complete ALPN challenges for customers, rather than doing it sort of implicitly based on our native SNI handling. (We wouldn\u2019t have had the problem anyways based on how our certificate handling works, but this is the logic behind why ALPN is OK and SNI isn\u2019t).\n  This process is pretty much seamless; all you have to do is say \u201cyeah, I want a TLS certificate for my app\u2019s custom domain\u201d. It only works with individual hostnames, though, which may be fine, but if it isn\u2019t, you can do a DNS challenge with us to generate a wildcard certificate.", "posttime": "2020-06-26 05:20:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u6210,generate,tls", "title": "CDN\u5982\u4f55\u751f\u6210\u8bc1\u4e66", "title_en": "How CDNs Generate Certificates", "transed": 1, "url": "https://fly.io/blog/how-cdns-generate-certificates/", "via": "", "real_tags": ["\u751f\u6210", "generate", "tls"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\u5c31\u5f00\u59cb\u4f7f\u7528\u9762\u5411\u6280\u672f\u4e13\u4e1a\u4eba\u58eb\u7684\u5728\u7ebf\u7b80\u5386\u751f\u6210\u5668\u514d\u8d39\u6784\u5efa\u60a8\u7684\u7b80\u5386\u3002\u6211\u4eec\u5c06\u4e3a\u60a8\u63d0\u4f9b\u6570\u636e\u9a71\u52a8\u7684\u63a8\u8350\uff0c\u5e2e\u52a9\u60a8\u627e\u5230\u68a6\u5bd0\u4ee5\u6c42\u7684\u5de5\u4f5c\u3002", "note_en": "Start building your resume for free today with the online          resume builder for tech professionals. We'll give          you data-driven recommendations to help you land your dream job.", "posttime": "2020-06-26 05:19:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79cd\u65cf,diversity", "title": "\u4ece\u6570\u5b57\u770b\u79d1\u6280\u9886\u57df\u7684\u79cd\u65cf\u591a\u6837\u6027", "title_en": "Racial Diversity In Tech By The Numbers", "transed": 1, "url": "https://www.beamjobs.com/diversity/racial-diversity-in-tech", "via": "", "real_tags": ["\u79cd\u65cf", "diversity"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\u610f\uff1a\u8fd9\u662f\u4e00\u7bc7\u6765\u81eaSixten\u7f16\u7a0b\u8bed\u8a00\u6587\u6863\u7684\u8001\u5e16\u5b50\uff0c\u6211\u5bf9\u5b83\u8fdb\u884c\u4e86\u6da6\u8272\u548c\u5145\u5b9e\u3002\u5728\u5199\u5b8c\u4e4b\u540e\uff0c\u6211\u53d1\u73b0\u4e86Salsa\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0e\u6211\u7684Rock\u5e93\u6709\u7740\u975e\u5e38\u76f8\u4f3c\u76ee\u6807\u7684Rust\u5e93\uff0c\u5b83\u4e5f\u7edd\u5bf9\u503c\u5f97\u4e00\u770b\uff01\n\u7f16\u8bd1\u5668\u4e0d\u518d\u4ec5\u4ec5\u662f\u83b7\u53d6\u4e00\u5806\u6e90\u6587\u4ef6\u5e76\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801\u7684\u9ed1\u5323\u5b50\u3002\u6211\u4eec\u671f\u671b\u4ed6\u4eec\uff1a\n\u662f\u589e\u91cf\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u5728\u505a\u4e86\u4e00\u4e9b\u66f4\u6539\u4e4b\u540e\u91cd\u65b0\u7f16\u8bd1\u4e00\u4e2a\u9879\u76ee\uff0c\u6211\u4eec\u53ea\u4f1a\u91cd\u65b0\u7f16\u8bd1\u53d7\u66f4\u6539\u5f71\u54cd\u7684\u5185\u5bb9\u3002\n\u63d0\u4f9b\u7f16\u8f91\u5668\u5de5\u5177\uff0c\u4f8b\u5982\u901a\u8fc7\u8bed\u8a00\u670d\u52a1\u5668\uff0c\u652f\u6301\u8f6c\u5230\u5b9a\u4e49\u3001\u67e5\u627e\u7279\u5b9a\u4f4d\u7f6e\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\u4ee5\u53ca\u52a8\u6001\u663e\u793a\u9519\u8bef\u6d88\u606f\u7b49\u529f\u80fd\u3002\n\u8fd9\u5c31\u662fAnders Hejlsberg\u5728\u4ed6\u5173\u4e8e\u73b0\u4ee3\u7f16\u8bd1\u5668\u6784\u5efa\u7684\u89c6\u9891\u4e2d\u8c08\u5230\u7684\uff0c\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u4e86\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728Sixten\u4e2d\u901a\u8fc7\u56f4\u7ed5\u67e5\u8be2\u7cfb\u7edf\u6784\u5efa\u7f16\u8bd1\u5668\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u77e5\u9053\u7684\u4eba\u6765\u8bf4\uff0cSixten\u662f\u4e00\u79cd\u5b9e\u9a8c\u6027\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u521b\u5efa\u5b83\u7684\u76ee\u7684\u662f\u8ba9\u7a0b\u5e8f\u5458\u6bd4\u4f20\u7edf\u8bed\u8a00\u66f4\u597d\u5730\u63a7\u5236\u5185\u5b58\u5e03\u5c40\u548c\u88c5\u7bb1\u3002Sixten\u7684\u6700\u65b0\u5f00\u53d1\u662f\u5728Sixty\u5b58\u50a8\u5e93\u4e2d\u5b8c\u6210\u7684\uff0c\u5e76\u4e14\u5b8c\u5168\u662f\u57fa\u4e8e\u67e5\u8be2\u7684\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5c0f\u89c6\u9891\uff0c\u8ba9\u60a8\u4f53\u9a8c\u4e00\u4e0b\u5b83\u7684\u8bed\u8a00\u670d\u52a1\u5668\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\uff0c\u5176\u4e2d\u663e\u793a\u4e86\u57fa\u4e8e\u7c7b\u578b\u7684\u5b8c\u6210\uff1a\n+-++|\u6e90\u6587\u672c|-\u89e3\u6790-&gt\uff1b|AST|-\u7c7b\u578b\u68c0\u67e5-+-&gt\uff1b|\u6838\u5fc3AST|--\u751f\u6210-&gt\uff1b|ASSEMBLY|^|+-++-+|+-++-|\u8bfb\u5199\u7c7b\u578b|v+-+||\u7c7b\u578b\u8868|+-+\n\u6709\u8bb8\u591a\u53d8\u5316\uff0c\u901a\u5e38\u6bd4\u63d2\u56fe\u4e2d\u7684\u6b65\u9aa4\u548c\u4e2d\u95f4\u8868\u793a\u6cd5\u66f4\u591a\uff0c\u4f46\u60f3\u6cd5\u4fdd\u6301\u4e0d\u53d8\uff1a\n\u6211\u4eec\u6cbf\u7740\u7ba1\u9053\u5411\u4e0b\u63a8\u9001\u6e90\u6587\u672c\uff0c\u5e76\u8fd0\u884c\u4e00\u7ec4\u56fa\u5b9a\u7684\u8f6c\u6362\uff0c\u76f4\u5230\u6700\u7ec8\u8f93\u51fa\u6c47\u7f16\u4ee3\u7801\u6216\u5176\u4ed6\u76ee\u6807\u8bed\u8a00\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u9605\u8bfb\u548c\u66f4\u65b0\u4e00\u4e9b\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7c7b\u578b\u68c0\u67e5\u671f\u95f4\u66f4\u65b0\u7c7b\u578b\u8868\uff0c\u4ee5\u4fbf\u7a0d\u540e\u53ef\u4ee5\u67e5\u627e\u4ee3\u7801\u5f15\u7528\u7684\u5b9e\u4f53\u7c7b\u578b\u3002\n\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u53ef\u80fd\u5bf9\u4f20\u7edf\u7684\u7f16\u8bd1\u5668\u6d41\u6c34\u7ebf\u975e\u5e38\u719f\u6089\uff0c\u4f46\u662f\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u5e94\u8be5\u5982\u4f55\u6784\u5efa\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u5e7f\u4e3a\u4eba\u77e5\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u63cf\u8ff0\u4e00\u79cd\u65b9\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5982\u4f55\u624d\u80fd\u83b7\u5f97\u9650\u5b9a\u540d\u79f0\u7684\u7c7b\u578b\uff0c\u5982&#34\uff1bData.List.map&#34\uff1b\uff1f\u5728\u57fa\u4e8e\u7ba1\u9053\u7684\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u5728\u7c7b\u578b\u8868\u4e2d\u67e5\u627e\u5b83\u3002\u5bf9\u4e8e\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u601d\u8003\u3002\u6211\u4eec\u4e0d\u518d\u4f9d\u8d56\u4e8e\u66f4\u65b0\u67d0\u4e2a\u72b6\u6001\uff0c\u800c\u662f\u5c06\u5176\u89c6\u4e3a\u4ece\u5934\u5f00\u59cb\u3002\n\u4f5c\u4e3a\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u6211\u4eec\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u3002\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u50cf\u8fd9\u6837\uff1a\nfetchType\uff1a\uff1aQualifiedName-&gt\uff1bIO\u7c7b\u578bfetchType(QualifiedName\u6a21\u5757\u540d\u79f0)=do\u6587\u4ef6\u540d&lt\uff1b-module eFileName\u6a21\u5757\u540d\u79f0\u6e90\u4ee3\u7801&lt\uff1b-readFile\u6587\u4ef6\u540dparsedModule&lt\uff1b-parseModule\u6e90\u4ee3\u7801\u89e3\u6790\u6a21\u5757&lt\uff1b-solveNames parsedModule let\u5b9a\u4e49=\u67e5\u627e\u540d\u79f0\u89e3\u6790\u6a21\u5757\u63a8\u65adDefinitionType\u5b9a\u4e49\u3002\n\u6211\u4eec\u9996\u5148\u627e\u51fa\u540d\u79f0\u6765\u81ea\u54ea\u4e2a\u6587\u4ef6\uff0c\u53ef\u80fd\u662fData.List\u7684data/List.vix\uff0c\u7136\u540e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u89e3\u6790\u5b83\uff0c\u4e5f\u8bb8\u6211\u4eec\u8fdb\u884c\u540d\u79f0\u89e3\u6790\u4ee5\u627e\u51fa\u4ee3\u7801\u4e2d\u7684\u540d\u79f0\u5728\u7ed9\u5b9a\u5bfc\u5165\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u5f15\u7528\u4e86\u4ec0\u4e48\uff0c\u6700\u540e\u6211\u4eec\u67e5\u627e\u540d\u79f0\u89e3\u6790\u7684\u5b9a\u4e49\u5e76\u952e\u5165check\uff0c\u8fd4\u56de\u5b83\u7684\u7c7b\u578b\u3002\n\u8fd9\u4e00\u5207\u4ec5\u4ec5\u662f\u4e3a\u4e86\u83b7\u53d6\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u5417\uff1f\u8fd9\u4f3c\u4e4e\u5f88\u8352\u8c2c\uff0c\u56e0\u4e3a\u5728\u6a21\u5757\u7684\u7c7b\u578b\u68c0\u67e5\u8fc7\u7a0b\u4e2d\uff0c\u67e5\u627e\u540d\u79f0\u7684\u7c7b\u578b\u662f\u6211\u4eec\u4f1a\u505a\u5f88\u591a\u6b21\u7684\u4e8b\u60c5\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u505a\u5b8c\u3002\nfetchParsedModule\uff1a\uff1aModuleName-&gt\uff1bIO ParsedModule fetchParsedModule module eName=do filename&lt\uff1b-module eFileName module eName sourceCode&lt\uff1b-readFile filename parseModule module name fetchResolvedModule\uff1a\uff1aModuleName-&gt\uff1bIO ResolvedModule fetchResolvedModule fetchResolvedModule module eName=do parsedModule&lt\uff1b-fetchParsedModule modeName\uff1a\uff1aModuleName-&gt\uff1bIO ResolvedModule fetchResolvedModule module eName=do parsedModule&lt\uff1b-fetchParsedModule module\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u662f\u81ea\u5df1\u4ece\u5934\u5f00\u59cb\u505a\u6240\u6709\u4e8b\u60c5\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u6bcf\u4e2a\u90fd\u5728\u505a\u6d41\u6c34\u7ebf\u4e2d\u8981\u505a\u7684\u5de5\u4f5c\u7684\u524d\u7f00(\u8d8a\u6765\u8d8a\u957f)\u3002\u6211\u53d1\u73b0\u8fd9\u662f\u6211\u7684\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\u3002\n\u63d0\u9ad8\u6548\u7387\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u51fd\u6570\u5468\u56f4\u6dfb\u52a0\u4e00\u4e2a\u8bb0\u5fc6\u5c42\u3002\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u4f7f\u7528\u7279\u5b9a\u53c2\u6570\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u4f1a\u505a\u4e00\u4e9b\u4ee3\u4ef7\u9ad8\u6602\u7684\u5de5\u4f5c\uff0c\u4f46\u540e\u7eed\u8c03\u7528\u7684\u4ee3\u4ef7\u5f88\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8fd4\u56de\u7f13\u5b58\u7684\u7ed3\u679c\u3002\n\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u6211\u4eec\u8981\u505a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u4f1a\u4e3a\u6bcf\u4e2a\u51fd\u6570\u4f7f\u7528\u5355\u72ec\u7684\u7f13\u5b58\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u7531\u67e5\u8be2\u7d22\u5f15\u7684\u4e2d\u592e\u7f13\u5b58\u3002\u6b64\u529f\u80fd\u7531Rock\u63d0\u4f9b\uff0cRock\u662f\u4e00\u4e2a\u5c06\u4e00\u4e9b\u529f\u80fd\u6253\u5305\u4ee5\u521b\u5efa\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u7684\u5e93\u3002\nRock\u662f\u4e00\u4e2a\u5b9e\u9a8c\u6027\u7684\u56fe\u4e66\u9986\uff0c\u7075\u611f\u4e3b\u8981\u6765\u81eaShake\u548c\u70b9\u83dc\u7eb8\u4e0a\u7684\u6784\u5efa\u7cfb\u7edf\u3002\u5b83\u5b9e\u8d28\u4e0a\u5b9e\u73b0\u4e86\u6784\u5efa\u7cfb\u7edf\u6846\u67b6\uff0c\u5982make\u3002\n\u6784\u5efa\u7cfb\u7edf\u4e0e\u73b0\u4ee3\u7f16\u8bd1\u5668\u6709\u5f88\u591a\u5171\u540c\u4e4b\u5904\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u662f\u589e\u91cf\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u91cd\u65b0\u6784\u5efa\u65f6\u53ea\u9700\u5f88\u5c11\u7684\u66f4\u6539\u5c31\u53ef\u4ee5\u5229\u7528\u4ee5\u524d\u7684\u6784\u5efa\u7ed3\u679c\u3002\u4f46\u4e5f\u6709\u4e00\u4e2a\u4e0d\u540c\u4e4b\u5904\uff1a\u5927\u591a\u6570\u6784\u5efa\u7cfb\u7edf\u5e76\u4e0d\u5173\u5fc3\u5b83\u4eec\u7684\u67e5\u8be2\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6587\u4ef6\u548c\u6587\u4ef6\u7cfb\u7edf\u7ea7\u522b\u4e0a\u5de5\u4f5c\u3002\n\u6309\u5355\u65b9\u5f0f\u6784\u5efa\u7cfb\u7edf\u66f4\u63a5\u8fd1\u6211\u4eec\u60f3\u8981\u7684\u3002\u5728\u90a3\u91cc\uff0c\u7528\u6237\u7f16\u5199\u4e86\u4e00\u7cfb\u5217\u8ba1\u7b97\u3001\u4efb\u52a1\uff0c\u4e3a\u952e\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\uff0c\u4e3a\u503c\u9009\u62e9\u7c7b\u578b\u3002\u8fd9\u4e9b\u4efb\u52a1\u662f\u5047\u5b9a\u5b83\u4eec\u5728\u8fd9\u6837\u7684\u73af\u5883\u4e2d\u8fd0\u884c\u7684\uff1a\u5b58\u5728Key-&gt;Task Value\u7c7b\u578b\u7684\u51fd\u6570\u83b7\u53d6\uff0c\u5176\u4e2dTask\u662f\u7528\u4e8e\u63cf\u8ff0\u6784\u5efa\u7cfb\u7edf\u89c4\u5219\u7684\u7c7b\u578b\uff0c\u53ef\u7528\u4e8e\u83b7\u53d6\u5177\u6709\u7279\u5b9a\u952e\u7684\u4f9d\u8d56\u9879\u7684\u503c\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5bc6\u94a5\u7c7b\u578b\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u6784\u5efa\u7cfb\u7edf\u53ef\u4ee5\u63a7\u5236\u6211\u4eec\u6267\u884cFETCH\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u901a\u8fc7\u53d8\u5316\uff0c\u5b83\u53ef\u4ee5\u6267\u884c\u7ec6\u7c92\u5ea6\u7684\u4f9d\u8d56\u9879\u8ddf\u8e2a\u3001\u8bb0\u5fc6\u548c\u589e\u91cf\u66f4\u65b0\u3002\n\u6309\u83dc\u5355\u6784\u5efa\u7cfb\u7edf\u4e5f\u662f\u5173\u4e8e\u63a2\u7d22\u5f53\u6211\u4eec\u6539\u53d8\u5141\u8bb8Task\u505a\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4ec0\u4e48\u6837\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u4f8b\u5982\u5b83\u662fMonad\u8fd8\u662fApplicative\u3002\u5728Rock\uff0c\u6211\u4eec\u6ca1\u6709\u63a2\u7d22\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u4efb\u52a1\u662fIO\u4e4b\u4e0a\u7684\u4e00\u5c42\u8584\u8584\u7684\u4e1c\u897f\u3002\n\u7136\u800c\uff0c\u73b0\u5728\u51fa\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6ca1\u6709\u4ee4\u4eba\u6ee1\u610f\u7684\u4ef7\u503c\u7c7b\u578b\u3002\u6211\u4eec\u5e0c\u671bFETCH(ParsedModuleKey&#34\uff1bData.List&#34\uff1b)\u8fd4\u56deParsedModule\uff0c\u800cFETCH(TypeKey&#34\uff1bData.List.map&#34\uff1b)\u5e94\u8be5\u8fd4\u56de\u7c7b\u578b\u4e3aType\u7684\u5185\u5bb9\u3002\nROCK\u5141\u8bb8\u6211\u4eec\u6839\u636e\u67e5\u8be2\u7684\u8fd4\u56de\u7c7b\u578b\u6765\u7d22\u5f15\u952e\u7c7b\u578b\u3002\u6211\u4eec\u8fd0\u884c\u793a\u4f8b\u4e2d\u7684\u952e\u7c7b\u578b\u53d8\u4e3a\u4ee5\u4e0bGADT\uff1a\n\u6570\u636e\u952ea\u5176\u4e2dParsedModuleKey\uff1a\uff1aModuleName-&gt\uff1b\u5bc6\u94a5\u89e3\u6790\u6a21\u5757ResolvedModuleKey\uff1a\uff1aModuleName-&gt\uff1b\u5bc6\u94a5\u89e3\u6790\u6a21\u5757TypeKey\uff1a\uff1aQualifiedName-&gt\uff1b\u5bc6\u94a5\u7c7b\u578b\u3002\nFETCH\u51fd\u6570\u83b7\u53d6\u6240\u6709a.Key a-&gt\uff1b\u4efb\u52a1a\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8fd0\u884cFETCH(ParsedModuleKey&#34\uff1bData.List&#34\uff1b)\u65f6\u4f1a\u83b7\u5f97\u4e00\u4e2aParsedModule\uff0c\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u56e0\u4e3a\u8fd4\u56de\u7c7b\u578b\u53d6\u51b3\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u952e\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86Fetch\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u4e5f\u503c\u5f97\u900f\u9732\u4e00\u4e0bRock\u4e2d\u7684\u4efb\u52a1\u7c7b\u578b\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5982\u524d\u6240\u8ff0\uff0c\u5b83\u662fIO\u5468\u56f4\u7684\u4e00\u5c42\u8584\u5c42\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u83b7\u53d6\u5bc6\u94a5(\u5982\u4e0a\u9762\u7684\u5bc6\u94a5)\u7684\u65b9\u6cd5\uff1a\nNewtype Task Key a=Task{unTask\uff1a\uff1aReaderT(Fetch Key)IO a}Newtype Fetch Key=Fetch(for All a.\u3002\u952ea-&gt\uff1bIO a)\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u7f16\u8bd1\u5668\u7684\u89c4\u5219(\u5373\u5176Makefile)\u53d8\u6210\u4ee5\u4e0b\u51fd\u6570\uff0c\u91cd\u7528\u4e0a\u9762\u7684\u51fd\u6570\uff1a\n\u89c4\u5219\uff1a\uff1akey a-&gt\uff1bTask a Rules Key=Case Key of ParsedModuleKey\u6a21\u5757\u540d\u79f0-&gt\uff1bfetchParsedModule\u6a21\u5757\u540d\u79f0ResolvedModuleKey\u6a21\u5757\u540d\u79f0-&gt\uff1bfetchResolvedModule ModeName TypeKey QualifiedName-&gt\uff1bfetchType QualifiedName\u3002\n\u5728Rock\u4e2d\u8fd0\u884cTask\u7684\u6700\u57fa\u672c\u65b9\u5f0f\u662f\u5728Task\u83b7\u53d6\u5bc6\u94a5\u65f6\u76f4\u63a5\u8c03\u7528\u89c4\u5219\u51fd\u6570\u3002\u8fd9\u4f1a\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u7684\u6784\u5efa\u7cfb\u7edf\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u67e5\u8be2\u3002\n\u4f46\u662fRock\u5e93\u5141\u8bb8\u6211\u4eec\u5728\u6211\u4eec\u7684\u89c4\u5219\u51fd\u6570\u4e0a\u6dfb\u52a0\u66f4\u591a\u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u5907\u5fd8\u5f55\u3002\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\uff0cRock\u901a\u8fc7\u5c06\u5df2\u7ecf\u6267\u884c\u7684\u8bfb\u53d6\u7684\u952e-\u503c\u5bf9\u5b58\u50a8\u5728\u4f9d\u8d56\u7684\u54c8\u5e0c\u56fe\u4e2d\u6765\u7f13\u5b58\u6bcf\u4e2a\u63d0\u53d6\u7684\u952e\u7684\u7ed3\u679c\u3002\u8fd9\u6837\uff0c\u5728\u7f16\u8bd1\u5668\u7684\u4e00\u6b21\u8fd0\u884c\u671f\u95f4\uff0c\u6211\u4eec\u6700\u591a\u6267\u884c\u4e00\u6b21\u6bcf\u4e2a\u67e5\u8be2\u3002\n\u53ef\u4ee5\u5206\u5c42\u5230\u89c4\u5219\u529f\u80fd\u4e0a\u7684\u53e6\u4e00\u79cd\u529f\u80fd\u662f\u589e\u91cf\u66f4\u65b0\u3002\u5f53\u5b83\u88ab\u4f7f\u7528\u65f6\uff0cRock\u4f1a\u8ddf\u8e2a\u4efb\u52a1\u5728\u8868\u4e2d\u6267\u884c\u65f6\u4f7f\u7528\u7684\u4f9d\u8d56\u9879(\u5f88\u50cfShake)\uff0c\u4f8b\u5982\u5b83\u83b7\u53d6\u4e86\u54ea\u4e9b\u952e\u4ee5\u53ca\u503c\u662f\u4ec0\u4e48\u3002\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u5373\u4f7f\u4f9d\u8d56\u5173\u7cfb\u56fe\u7684\u5176\u4ed6\u90e8\u5206\u53ef\u80fd\u53d1\u751f\u66f4\u6539\uff0c\u5b83\u4e5f\u80fd\u591f\u786e\u5b9a\u4f55\u65f6\u53ef\u4ee5\u5b89\u5168\u5730\u91cd\u7528\u7f16\u8bd1\u5668\u4e0a\u4e00\u6b21\u8fd0\u884c\u7684\u7f13\u5b58\u3002\n\u6b64\u7ec6\u7c92\u5ea6\u4f9d\u8d56\u9879\u8ddf\u8e2a\u8fd8\u5141\u8bb8\u5728\u4efb\u52a1\u7684\u4f9d\u8d56\u9879\u4ee5\u4e0d\u8d77\u4f5c\u7528\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\u91cd\u7528\u7f13\u5b58\u3002\u4f8b\u5982\uff0c\u7a7a\u683c\u66f4\u6539\u53ef\u80fd\u4f1a\u89e6\u53d1\u91cd\u65b0\u89e3\u6790\uff0c\u4f46\u7531\u4e8eAST\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4f9d\u8d56\u4e8e\u89e3\u6790\u7ed3\u679c\u7684\u67e5\u8be2\u4e2d\u91cd\u7528\u7f13\u5b58\u3002\n\u5bf9\u4e8e\u50cf\u8bed\u8a00\u670d\u52a1\u5668\u8fd9\u6837\u7684\u5b9e\u65f6\u5de5\u5177\u6765\u8bf4\uff0c\u9a8c\u8bc1\u4f9d\u8d56\u5173\u7cfb\u53ef\u80fd\u592a\u6162\u4e86\uff0c\u56e0\u4e3a\u5fc5\u987b\u904d\u5386\u4f9d\u8d56\u5173\u7cfb\u56fe\u7684\u5927\u90e8\u5206\uff0c\u624d\u80fd\u68c0\u67e5\u5b83\u7684\u5927\u90e8\u5206\u5373\u4f7f\u662f\u5f88\u5c0f\u7684\u66f4\u6539\u4e5f\u662f\u4e0d\u53d8\u7684\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u5177\u6709\u8bb8\u591a\u5927\u578b\u5bfc\u5165\u7684\u6e90\u6587\u4ef6\u8fdb\u884c\u66f4\u6539\uff0c\u5219\u9700\u8981\u904d\u5386\u6240\u6709\u5bfc\u5165\u7684\u4f9d\u8d56\u5173\u7cfb\u6811\uff0c\u4ee5\u4fbf\u66f4\u65b0\u8be5\u5355\u4e2a\u6587\u4ef6\u7684\u7f16\u8f91\u5668\u72b6\u6001\u3002\u8fd9\u662f\u56e0\u4e3a\u4f9d\u8d56\u5173\u7cfb\u9a8c\u8bc1\u672c\u8eab\u9700\u8981\u4e00\u76f4\u904d\u5386\u5230\u7ed9\u5b9a\u67e5\u8be2\u7684\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u6839\u67e5\u8be2\uff0c\u8fd9\u901a\u5e38\u4f1a\u5360\u6574\u4e2a\u4f9d\u8d56\u5173\u7cfb\u6811\u7684\u5f88\u5927\u6bd4\u4f8b\u3002\n\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u8ba9Rock\u8ddf\u8e2a\u67e5\u8be2\u4e4b\u95f4\u7684\u53cd\u5411\u4f9d\u8d56\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5f53\u8bed\u8a00\u670d\u52a1\u5668\u68c0\u6d4b\u5230\u5355\u4e2a\u6587\u4ef6\u5df2\u7ecf\u6539\u53d8\u65f6\uff0c\u901a\u8fc7\u4ece\u6539\u53d8\u7684\u6587\u4ef6\u5f00\u59cb\u904d\u5386\u53cd\u5411\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f7f\u7528\u53cd\u5411\u4f9d\u8d56\u5173\u7cfb\u6811\u6765\u4f7f\u9ad8\u901f\u7f13\u5b58\u4ec5\u5bf9\u4e8e\u4f9d\u8d56\u4e8e\u8be5\u6587\u4ef6\u7684\u67e5\u8be2\u65e0\u6548\u3002\n\u7531\u4e8e\u5bfc\u5165\u7684\u6a21\u5757\u4e0d\u4f9d\u8d56\u4e8e\u8be5\u6587\u4ef6\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u9700\u8981\u91cd\u65b0\u68c0\u67e5\uff0c\u4ece\u800c\u4f7f\u5de5\u5177\u5236\u4f5c\u66f4\u5feb\u4e86\uff01\uff1f\n\u5927\u591a\u6570\u73b0\u4ee3\u8bed\u8a00\u90fd\u9700\u8981\u4e00\u79cd\u5de5\u5177\u7b56\u7565\uff0c\u5728\u6211\u770b\u6765\uff0c\u56f4\u7ed5\u67e5\u8be2\u7cfb\u7edf\u6784\u5efa\u7f16\u8bd1\u5668\u4f3c\u4e4e\u662f\u4e00\u79cd\u975e\u5e38\u6709\u524d\u9014\u7684\u65b9\u6cd5\u3002\n\u4f7f\u7528\u67e5\u8be2\uff0c\u7f16\u8bd1\u5668\u7f16\u5199\u5668\u4e0d\u5fc5\u5904\u7406\u5bf9\u4e00\u7ec4\u7279\u522b\u7f13\u5b58\u7684\u66f4\u65b0\u548c\u5931\u6548\uff0c\u8fd9\u53ef\u80fd\u662f\u5411\u4f20\u7edf\u7f16\u8bd1\u5668\u6d41\u6c34\u7ebf\u6dfb\u52a0\u589e\u91cf\u66f4\u65b0\u65f6\u7684\u7ed3\u679c\u3002\u5728\u57fa\u4e8e\u67e5\u8be2\u7684\u7cfb\u7edf\u4e2d\uff0c\u5b83\u90fd\u662f\u4e00\u52b3\u6c38\u9038\u5730\u96c6\u4e2d\u5904\u7406\uff0c\u8fd9\u610f\u5473\u7740\u51fa\u9519\u7684\u53ef\u80fd\u6027\u8f83\u5c0f\u3002\n\u67e5\u8be2\u662f\u6781\u597d\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u968f\u65f6\u8be2\u95ee\u4efb\u4f55\u67e5\u8be2\u7684\u503c\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u987a\u5e8f\u6216\u65f6\u95f4\u5f71\u54cd\uff0c\u5c31\u50cf\u7f16\u5199\u826f\u597d\u7684Makefile\u4e00\u6837\u3002\u7cfb\u7edf\u5c06\u4ee5\u589e\u91cf\u65b9\u5f0f\u81ea\u52a8\u8ba1\u7b97\u6216\u68c0\u7d22\u67e5\u8be2\u53ca\u5176\u4f9d\u8d56\u9879\u7684\u7f13\u5b58\u503c\u3002\n\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u4e5f\u975e\u5e38\u5bb9\u6613\u5e76\u884c\u5316\u3002\u7531\u4e8e\u6211\u4eec\u88ab\u5141\u8bb8\u5728\u4efb\u4f55\u65f6\u5019\u8fdb\u884c\u4efb\u4f55\u67e5\u8be2\uff0c\u800c\u4e14\u5b83\u4eec\u5728\u7b2c\u4e00\u6b21\u91cd\u65b0\u8fd0\u884c\u65f6\u90fd\u4f1a\u88ab\u8bb0\u4f4f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u592a\u591a\u5c31\u53ef\u4ee5\u5e76\u884c\u5730\u53d1\u51fa\u67e5\u8be2\u3002\u5728Sixty\u4e2d\uff0c\u9ed8\u8ba4\u884c\u4e3a\u662f\u5e76\u884c\u68c0\u67e5\u6240\u6709\u8f93\u5165\u6a21\u5757\u7684\u7c7b\u578b\u3002\n\u6700\u540e\uff0c\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u542f\u53d1\u60a8\u4f7f\u7528\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u4f53\u7cfb\u7ed3\u6784\uff0c\u5e76\u8ba9\u60a8\u4e86\u89e3\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002", "note_en": "Note: This is an old post originally from the documentation of the  Sixten programming language, that I&#39;ve touched up and fleshed out. After the time that it was written I&#39;ve found out about  Salsa, a Rust library with very similar goals to my Rock library, which is definitely worth checking out as well!\n  Compilers are no longer just black boxes that take a bunch of source files and produce assembly code. We expect them to:\n Be incremental, meaning that if we recompile a project after having made a few changes we only recompile what is affected by the changes.\n Provide editor tooling, e.g. through a  language server, supporting functionality like going to definition, finding the type of the expression at a specific location, and showing error messages on the fly.\n This is what Anders Hejlsberg talks about in  his video on modern compiler construction that some of you might have seen.\n In this post I will cover a about how this is achieved in  Sixten by building the compiler around a query system.\n For those of you that don&#39;t know, Sixten is an experimental functional programming language created to give the programmer more control over memory layout and boxing than traditional languages do. The most recent development of Sixten is being done in the  Sixty repository, and is completely query-based. Here&#39;s a little video giving a taste of what its language server can do, showing type-based completions:\n   +-----------+ +-----+ +--------+ +--------+  | | | | | | | |  |source text|---parse---&gt;| AST |---typecheck-+-&gt;|core AST|---generate---&gt;|assembly|  | | | | ^ | | | |  +-----------+ +-----+ | +--------+ +---------   |   read and write   types   |   v   +----------+   | |   |type table|   | |   +----------+\n There are many variations, and often more steps and intermediate representations than in the illustration, but the idea stays the same:\n We push source text down a pipeline and run a fixed set of transformations until we finally output assembly code or some other target language. Along the way we often need to read and update some state. For example, we might update a type table during type checking so we can later look up the type of entities that the code refers to.\n Traditional compiler pipelines are probably quite familiar to many of us, but how query-based compilers should be architected might not be as well-known. Here I will describe one way to do it.\n  What does it take to get the type of a qualified name, such as  &#34;Data.List.map&#34;? In a pipeline-based architecture we would just look it up in the type table. With queries, we have to think differently. Instead of relying on having updated some piece of state, we do it as if it was done from scratch.\n As a first iteration, we do it  completely from scratch. It might look a little bit like this:\n fetchType ::  QualifiedName  -&gt;  IO  Type  fetchType ( QualifiedName moduleName name)  =  do   fileName  &lt;- moduleFileName moduleName   sourceCode  &lt;-  readFile fileName   parsedModule  &lt;- parseModule sourceCode   resolvedModule  &lt;- resolveNames parsedModule    let definition  =  lookup name resolvedModule   inferDefinitionType definition\n We first find out what file the name comes from, which might be  Data/List.vix for  Data.List, then read the contents of the file, parse it, perhaps we do name resolution to find out what the names in the code refer to given what is imported, and last we look up the name-resolved definition and type check it, returning its type.\n All this for just for getting the type of an identifier? It seems ridiculous because looking up the type of a name is something we&#39;ll do loads of times during the type checking of a module. Luckily we&#39;re not done yet.\n  fetchParsedModule ::  ModuleName  -&gt;  IO  ParsedModule  fetchParsedModule moduleName  =  do   fileName  &lt;- moduleFileName moduleName   sourceCode  &lt;-  readFile fileName   parseModule moduleName     fetchResolvedModule ::  ModuleName  -&gt;  IO  ResolvedModule  fetchResolvedModule moduleName  =  do   parsedModule  &lt;- fetchParsedModule moduleName   resolveNames parsedModule     fetchType ::  QualifiedName  -&gt;  IO  Type  fetchType ( QualifiedName moduleName name)  =  do   resolvedModule  &lt;- fetchResolvedModule moduleName    let definition  =  lookup name resolvedModule   inferDefinitionType definition\n Note that each of the functions do everything from scratch on their own, i.e. they&#39;re each doing a (longer and longer) prefix of the work you&#39;d do in a pipeline. I&#39;ve found this to be a common pattern in my query-based compilers.\n One way to make this efficient would be to add a memoisation layer around each function. That way, we do some expensive work the first time we invoke a function with a specific argument, but subsequent calls are cheap as they can return the cached result.\n This is essentially what we&#39;ll do, but we won&#39;t use a separate cache per function, but instead have a central cache, indexed by the query. This functionality is provided by  Rock, a library that packages up some functionality for creating query-based compilers.\n  Rock is an experimental library heavily inspired by  Shake and the  Build systems \u00e0 la carte paper. It essentially implements a build system framework, like  make.\n Build systems have a lot in common with modern compilers since we want them to be incremental, i.e. to take advantage of previous build results when building anew with few changes. But there&#39;s also a difference: Most build systems don&#39;t care about the  types of their queries since they work at the level of files and file systems.\n Build systems \u00e0 la carte is closer to what we want. There the user writes a bunch of computations,  tasks, choosing a suitable type for keys and a type for values. The tasks are formulated assuming they&#39;re run in an environment where there is a function  fetch of type  Key -&gt; Task Value, where  Task is a type for describing build system rules, that can be used to fetch the value of a dependency with a specific key. In our above example, the key type might look like this:\n  The build system has control over what code runs when we do a  fetch, so by varying that it can do fine-grained dependency tracking, memoisation, and incremental updates.\n Build systems \u00e0 la carte is also about exploring what kind of build systems we get when we vary what  Task is allowed to do, e.g. if it&#39;s a  Monad or  Applicative. In Rock, we&#39;re not exploring  that, so our  Task is a thin layer on top of  IO.\n A problem that pops up now, however, is that there&#39;s no satisfactory type for  Value. We want  fetch (ParsedModuleKey &#34;Data.List&#34;) to return a  ParsedModule, while  fetch (TypeKey &#34;Data.List.map&#34;) should return something of type  Type.\n  Rock allows us to index the key type by the return type of the query. The  Key type in our running example becomes the following  GADT:\n data  Key a  where    ParsedModuleKey  ::  ModuleName  -&gt;  Key  ParsedModule    ResolvedModuleKey  ::  ModuleName  -&gt;  Key  ResolvedModule    TypeKey  ::  QualifiedName  -&gt;  Key  Type\n The  fetch function gets the type  forall a. Key a -&gt; Task a, so we get a  ParsedModule when we run  fetch (ParsedModuleKey &#34;Data.List&#34;), like we wanted, because the return type depends on the key we use.\n Now that we know what  fetch should look like, it&#39;s also worth revealing what the  Task type looks like in Rock, more concretely. As mentioned, it&#39;s a thin layer around  IO, providing a way to  fetch  keys (like  Key above):\n newtype  Task key a  =  Task {  unTask ::  ReaderT ( Fetch key)  IO a }   newtype  Fetch key  =  Fetch ( forall a . key a  -&gt;  IO a)\n The rules of our compiler, i.e. its &#34;Makefile&#34;, then becomes the following function, reusing the functions from above:\n rules ::  Key a  -&gt;  Task a  rules key  =  case key  of    ParsedModuleKey moduleName  -&gt;   fetchParsedModule moduleName      ResolvedModuleKey moduleName  -&gt;   fetchResolvedModule moduleName      TypeKey qualifiedName  -&gt;   fetchType qualifiedName\n  The most basic way to run a  Task in Rock is to directly call the  rules function when a  Task fetches a key. This results in an inefficient build system that recomputes every query from scratch.\n But the  Rock library lets us layer more functionality onto our  rules function, and one thing that we can add is memoisation. If we do that Rock caches the result of each fetched key by storing the key-value pairs of already performed fetches in a  dependent hashmap. This way, we perform each query at most once during a single run of the compiler.\n  Another kind of functionality that can be layered onto the  rules function is incremental updates. When it&#39;s used, Rock keeps a track of what dependencies a task used when it was executed (much like Shake) in a table, i.e. what keys it fetched and what the values were. Using this information it&#39;s able to determine when it&#39;s safe to reuse the cache  from a previous run of the compiler even though there might be changes in other parts of the dependency graph.\n This fine-grained dependency tracking also allows reusing the cache when a dependency of a task changes in a way that has no effect. For example, whitespace changes might trigger a re-parse, but since the AST is the same, the cache can be reused in queries that depend on the parse result.\n  Verifying dependencies can be too slow for real-time tooling like language servers, because large parts of the dependency graph have to be traversed just to check that most of it is unchanged even for tiny changes.\n For example, if we make changes to a source file with many large imports, we need to walk the dependency trees of all of the imports just to update the editor state for that single file. This is because dependency verification by itself needs to walk all the way to the root queries for all the dependencies of a given query, which can often be a large proportion of the whole dependency tree.\n To fix this, Rock can also be made to track  reverse dependencies between queries. When e.g. a language server detects that a single file has changed, the reverse dependency tree is used invalidate the cache just for the queries that depend on that file by walking the reverse dependencies starting from the changed file.\n Since the imported modules don&#39;t depend on that file, they don&#39;t need re-checked, resulting in much snappier tooling!\n  Most modern languages need to have a strategy for tooling, and building compilers around query systems seems like an extremely promising approach to me.\n With queries the compiler writer doesn&#39;t have to handle updates to and invalidation of a bunch of ad-hoc caches, which can be the result when adding incremental updates to a traditional compiler pipeline. In a query-based system it&#39;s all handled centrally once and for all, which means there&#39;s less of a chance it&#39;s wrong.\n Queries are excellent for tooling because they allow us to ask for the value of any query at any time without worrying about order or temporal effects, just like a well-written Makefile. The system will compute or retrieve cached values for the query and its dependencies automatically in an incremental way.\n Query-based compilers are also surprisingly easy to parallelise. Since we&#39;re allowed to make any query at any time, and they&#39;re memoised the first time they&#39;re run, we can fire off queries in parallel without having to think much. In Sixty, the default behaviour is for all input modules to be type checked in parallel.\n Lastly, I hope that this post will have inspired you to use a query-based compiler architecture, and given you an idea of how it can be done.", "posttime": "2020-06-26 05:18:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,\u7f16\u8bd1\u5668,based,\u7c7b\u578b", "title": "\u57fa\u4e8e\u67e5\u8be2\u7684\u7f16\u8bd1\u5668\u4f53\u7cfb\u7ed3\u6784", "title_en": "Query-Based Compiler Architectures", "transed": 1, "url": "https://ollef.github.io/blog/posts/query-based-compilers.html", "via": "", "real_tags": ["\u7f16\u8bd1", "\u7f16\u8bd1\u5668", "based", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "527b0695f24fe69fa4af2dddf2528470.png", "infoid": 1008285, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "$\\Beginggroup$\u6bcf\u4e2a\u4eba\u5728\u8ba8\u8bba\u4fe1\u53f7\u5904\u7406\u65f6\u90fd\u4f1a\u8ba8\u8bba\u5085\u91cc\u53f6\u53d8\u6362\u3002\u4e3a\u4ec0\u4e48\u5b83\u5bf9\u4fe1\u53f7\u5904\u7406\u5982\u6b64\u91cd\u8981\uff1f\u5b83\u544a\u8bc9\u6211\u4eec\u5173\u4e8e\u4fe1\u53f7\u7684\u4ec0\u4e48\u4fe1\u606f\uff1f\n\u5b83\u662f\u53ea\u9002\u7528\u4e8e\u6570\u5b57\u4fe1\u53f7\u5904\u7406\uff0c\u8fd8\u662f\u4e5f\u9002\u7528\u4e8e\u6a21\u62df\u4fe1\u53f7\uff1f\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Begingroup$\u6700\u8fd1\u5728Math.SE\u4e0a\u91cd\u65b0\u5f00\u59cb\u4e86\u4e00\u573a\u5173\u4e8e\u5085\u7acb\u53f6\u53d8\u6362\u7684\u8ba8\u8bba\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u7684\u4eba\u4eec\u53ef\u80fd\u4f1a\u89c9\u5f97\u5176\u4e2d\u4e00\u4e9b\u662f\u503c\u5f97\u7684\uff0c\u751a\u81f3\u53ef\u80fd\u60f3\u8981\u53c2\u4e0e\u5176\u4e2d\u3002$\\endgroup$-Dilip Sarwate\u3002\n$\\BEGINGROUP$cf.\u3002\u8fd9\u4e2a\u7b54\u6848\u6709\u5f88\u597d\u7684\u5386\u53f2\u80cc\u666f\u3002\u5085\u7acb\u53f6\u7ea7\u6570\u81f3\u5c11\u53ef\u4ee5\u8ffd\u6eaf\u5230\u6258\u52d2\u5bc6\u7684\u5468\u5929\u6587\u5b66\u3002\u589e\u52a0\u66f4\u591a\u7684\u504f\u5fc3\u7387\u548c\u672c\u8f6e\uff0c\u7c7b\u4f3c\u4e8e\u7ed9\u5085\u7acb\u53f6\u7ea7\u6570\u589e\u52a0\u66f4\u591a\u7684\u9879\uff0c\u5c31\u53ef\u4ee5\u89e3\u91ca\u5929\u7a7a\u4e2d\u7269\u4f53\u7684\u4efb\u4f55\u8fde\u7eed\u8fd0\u52a8\u3002$\\endgroup$-1\u83cc\u8840\u75c7\u3002\n\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5e7f\u6cdb\u7684\u95ee\u9898\uff0c\u786e\u5b9e\u5f88\u96be\u51c6\u786e\u6307\u51fa\u4e3a\u4ec0\u4e48\u5085\u7acb\u53f6\u53d8\u6362\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u5f88\u91cd\u8981\u3002\u6211\u4eec\u80fd\u63d0\u4f9b\u7684\u6700\u7b80\u5355\u7684\u7b54\u6848\u662f\uff0c\u5b83\u662f\u4e00\u79cd\u6781\u5176\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u5728\u4e0d\u540c\u7684\u9886\u57df\u67e5\u770b\u4fe1\u53f7\uff0c\u5728\u4e0d\u540c\u7684\u9886\u57df\u5185\uff0c\u51e0\u4e2a\u56f0\u96be\u7684\u95ee\u9898\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u5206\u6790\u3002\n\u5b83\u51e0\u4e4e\u65e0\u5904\u4e0d\u5728\uff0c\u51e0\u4e4e\u5728\u5de5\u7a0b\u548c\u7269\u7406\u79d1\u5b66\u7684\u6bcf\u4e00\u4e2a\u9886\u57df\uff0c\u90fd\u662f\u51fa\u4e8e\u4e0d\u540c\u7684\u539f\u56e0\uff0c\u8fd9\u4f7f\u5f97\u7f29\u5c0f\u4e00\u4e2a\u539f\u56e0\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u6211\u5e0c\u671b\uff0c\u770b\u770b\u5b83\u7684\u4e00\u4e9b\u5bfc\u81f4\u5b83\u88ab\u5e7f\u6cdb\u91c7\u7528\u7684\u7279\u6027\uff0c\u52a0\u4e0a\u4e00\u4e9b\u5b9e\u9645\u4f8b\u5b50\u548c\u4e00\u70b9\u5386\u53f2\uff0c\u53ef\u80fd\u4f1a\u5e2e\u52a9\u4eba\u4eec\u7406\u89e3\u5b83\u7684\u91cd\u8981\u6027\u3002\n\u8981\u7406\u89e3\u5085\u7acb\u53f6\u53d8\u6362\u7684\u91cd\u8981\u6027\uff0c\u91cd\u8981\u7684\u662f\u9000\u4e00\u6b65\uff0c\u6b23\u8d4f\u7ea6\u745f\u592b\u00b7\u5085\u7acb\u53f6\u63d0\u51fa\u7684\u5085\u7acb\u53f6\u7ea7\u6570\u7684\u5a01\u529b\u3002\u5728\u575a\u679c\u58f3\u4e2d\uff0c\u533a\u57df$\\mathcal{D}=[-\\pi\uff0c\\pi]$\u4e0a\u7684\u4efb\u4f55\u5468\u671f\u51fd\u6570$g(X)$\u53ef\u79ef\u53ef\u8868\u793a\u4e3a\u6b63\u5f26\u548c\u4f59\u5f26\u7684\u65e0\u7a77\u548c\n$e^{\\imath\\theta}=\\cos(\\theta)+\\jmath\\sin(\\theta)$.\u3002\u51fd\u6570\u53ef\u4ee5\u5206\u89e3\u4e3a\u5176\u7ec4\u6210\u9891\u7387(\u5373\u6240\u6709\u9891\u7387\u7684\u6b63\u5f26\u548c\u4f59\u5f26)\u7684\u60f3\u6cd5\u975e\u5e38\u5f3a\u5927\uff0c\u5e76\u6784\u6210\u4e86\u5085\u7acb\u53f6\u53d8\u6362\u7684\u4e3b\u5e72\u3002\n\u5085\u91cc\u53f6\u53d8\u6362\u53ef\u4ee5\u770b\u4f5c\u662f\u4e0a\u8ff0\u5085\u91cc\u53f6\u7ea7\u6570\u5230\u975e\u5468\u671f\u51fd\u6570\u7684\u6269\u5c55\u3002\u4e3a\u5b8c\u6574\u548c\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u5c06\u5728\u8fd9\u91cc\u5b9a\u4e49\u5085\u91cc\u53f6\u53d8\u6362\u3002\u5982\u679c$x(T)$\u662f\u8fde\u7eed\u7684\u53ef\u79ef\u4fe1\u53f7\uff0c\u5219\u5176\u5085\u7acb\u53f6\u53d8\u6362$X(F)$\u7531\u4e0b\u5f0f\u7ed9\u51fa\u3002\n\u9996\u5148\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\uff0c\u4fe1\u53f7\u7684\u5085\u91cc\u53f6\u53d8\u6362\u544a\u8bc9\u60a8\u4fe1\u53f7\u4e2d\u5b58\u5728\u7684\u9891\u7387\u548c\u6bd4\u4f8b\u3002\n\u4f8b\u5982\uff1a\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u5f53\u4f60\u5728\u901a\u8bdd\u8fc7\u7a0b\u4e2d\u6309\u4e0b\u6bcf\u4e2a\u53f7\u7801\u952e\u65f6\uff0c\u6bcf\u4e2a\u6570\u5b57\u952e\u7684\u58f0\u97f3\u90fd\u4e0d\u540c\uff0c\u800c\u4e14\u6bcf\u4e2a\u578b\u53f7\u7684\u7535\u8bdd\u542c\u8d77\u6765\u90fd\u662f\u4e00\u6837\u7684\uff1f\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u6bcf\u4e2a\u90fd\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u6b63\u5f26\u7ec4\u6210\uff0c\u8fd9\u4e24\u4e2a\u6b63\u5f26\u53ef\u4ee5\u7528\u6765\u552f\u4e00\u5730\u8bc6\u522b\u6309\u94ae\u3002\u5f53\u4f60\u7528\u624b\u673a\u8f93\u5165\u7ec4\u5408\u6765\u5bfc\u822a\u83dc\u5355\u65f6\uff0c\u5bf9\u65b9\u77e5\u9053\u4f60\u6309\u4e86\u4ec0\u4e48\u952e\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u5bf9\u8f93\u5165\u8fdb\u884c\u5085\u7acb\u53f6\u53d8\u6362\u5e76\u67e5\u770b\u5b58\u5728\u7684\u9891\u7387\u3002\n\u9664\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u7528\u7684\u57fa\u672c\u6027\u8d28\u4f7f\u6240\u6d89\u53ca\u7684\u6570\u5b66\u53d8\u5f97\u7b80\u5355\u4e4b\u5916\uff0c\u5b83\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u5177\u6709\u5982\u6b64\u5e7f\u6cdb\u7684\u91cd\u8981\u6027\u7684\u5176\u4ed6\u4e00\u4e9b\u539f\u56e0\u662f\uff1a\n\u5085\u7acb\u53f6\u53d8\u6362\u7684\u5e45\u503c\u5e73\u65b9\uff0c$\\vert X(F)\\vert^2$\u7acb\u5373\u544a\u8bc9\u6211\u4eec\u4fe1\u53f7$x(T)$\u5728\u7279\u5b9a\u9891\u7387$f$\u6709\u591a\u5c11\u529f\u7387\u3002\n\u6839\u636eParseval\u5b9a\u7406(\u66f4\u4e00\u822c\u7684Plancherel\u5b9a\u7406)\uff0c\u6211\u4eec\u6709$$int_\\mathbb{R}\\vert x(T)\\vert^2\\dt=int_\\mathbb{R}\\vert X(F)\\vert^2\\df$$\uff0c\u8fd9\u610f\u5473\u7740\u4fe1\u53f7\u4e2d\u6240\u6709\u65f6\u95f4\u7684\u603b\u80fd\u91cf\u7b49\u4e8e\u6240\u6709\u9891\u7387\u4e0a\u53d8\u6362\u7684\u603b\u80fd\u91cf\u3002\u56e0\u6b64\uff0c\u53d8\u6362\u662f\u80fd\u91cf\u5b88\u6052\u7684\u3002\n\u65f6\u57df\u4e2d\u7684\u5377\u79ef\u7b49\u4ef7\u4e8e\u9891\u57df\u4e2d\u7684\u4e58\u6cd5\uff0c\u5373\u7ed9\u5b9a\u4e24\u4e2a\u4fe1\u53f7$x(T)$\u548c$y(T)$\uff0c\u5219\u5982\u679c\n\u5bf9\u4e8e\u79bb\u6563\u4fe1\u53f7\uff0c\u968f\u7740\u9ad8\u6548FFT\u7b97\u6cd5\u7684\u53d1\u5c55\uff0c\u51e0\u4e4e\u603b\u662f\u5728\u9891\u57df\u5b9e\u73b0\u5377\u79ef\u8fd0\u7b97\u6bd4\u5728\u65f6\u57df\u5b9e\u73b0\u5377\u79ef\u8fd0\u7b97\u66f4\u5feb\u3002\n\u4e0e\u5377\u79ef\u8fd0\u7b97\u7c7b\u4f3c\uff0c\u4e92\u76f8\u5173\u4e5f\u5f88\u5bb9\u6613\u5728\u9891\u57df\u5b9e\u73b0\u4e3a$Z(F)=X(F)^*Y(F)$\uff0c\u5176\u4e2d$^*$\u8868\u793a\u590d\u5171\u8f6d\u3002\n\u901a\u8fc7\u80fd\u591f\u5c06\u4fe1\u53f7\u5206\u5272\u6210\u5b83\u4eec\u7684\u7ec4\u6210\u9891\u7387\uff0c\u4eba\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u53d6\u6d88\u5b83\u4eec\u7684\u8d21\u732e\u6765\u9009\u62e9\u6027\u5730\u5c4f\u853d\u67d0\u4e9b\u9891\u7387\u3002\n\u4f8b\u53e5\uff1a\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u8db3\u7403\u8ff7\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf92010\u5e74\u5357\u975e\u4e16\u754c\u676f\u671f\u95f4\u6301\u7eed\u4e0d\u65ad\u7684\u545c\u545c\u7956\u62c9\u58f0\u611f\u5230\u607c\u706b\uff0c\u8fd9\u79cd\u55e1\u55e1\u58f0\u51e0\u4e4e\u6df9\u6ca1\u4e86\u6240\u6709\u7684\u8bc4\u8bba\u3002\u7136\u800c\uff0c\u545c\u545c\u7956\u62c9\u62e5\u6709~235 Hz\u7684\u6052\u5b9a\u97f3\u8c03\uff0c\u8fd9\u4f7f\u5f97\u5e7f\u64ad\u516c\u53f8\u5f88\u5bb9\u6613\u5b9e\u65bd\u9677\u6ce2\u6ee4\u6ce2\u5668\u6765\u5207\u65ad\u4ee4\u4eba\u4e0d\u5feb\u7684\u566a\u97f3\u3002[1]\u3002\n\u65f6\u57df\u4e2d\u7684\u79fb\u4f4d(\u5ef6\u8fdf)\u4fe1\u53f7\u8868\u73b0\u4e3a\u9891\u57df\u4e2d\u7684\u76f8\u53d8\u3002\u867d\u7136\u8fd9\u5c5e\u4e8e\u57fa\u672c\u5c5e\u6027\u7c7b\u522b\uff0c\u4f46\u8fd9\u662f\u5b9e\u8df5\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u5c5e\u6027\uff0c\u7279\u522b\u662f\u5728\u6210\u50cf\u548c\u5c42\u6790\u6210\u50cf\u5e94\u7528\u4e2d\uff0c\n\u5f53\u6ce2\u5728\u975e\u5747\u5300\u4ecb\u8d28\u4e2d\u4f20\u64ad\u65f6\uff0c\u5b83\u4f1a\u6839\u636e\u6ce2\u5728\u4ecb\u8d28\u4e2d\u4f20\u64ad\u901f\u5ea6\u7684\u53d8\u5316\u800c\u51cf\u901f\u548c\u63d0\u901f\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u89c2\u5bdf\u9884\u671f\u548c\u6d4b\u91cf\u5230\u7684\u76f8\u4f4d\u53d8\u5316\uff0c\u53ef\u4ee5\u63a8\u65ad\u51fa\u591a\u4f59\u7684\u65f6\u95f4\u5ef6\u8fdf\uff0c\u8fdb\u800c\u544a\u8bc9\u4f60\u4ecb\u8d28\u4e2d\u7684\u6ce2\u901f\u53d1\u751f\u4e86\u591a\u5927\u53d8\u5316\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5916\u884c\u89e3\u91ca\uff0c\u4f46\u5374\u6784\u6210\u4e86\u65ad\u5c42\u6210\u50cf\u7684\u57fa\u7840\u3002\n\u5085\u7acb\u53f6\u53d8\u6362\u7406\u8bba\u9002\u7528\u4e8e\u4fe1\u53f7\u662f\u8fde\u7eed\u7684\u8fd8\u662f\u79bb\u6563\u7684\uff0c\u53ea\u8981\u5b83\u662f\u597d\u7684\u5e76\u4e14\u662f\u7edd\u5bf9\u53ef\u79ef\u7684\u3002\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u53ea\u8981\u4fe1\u53f7\u6ee1\u8db3\u8fd9\u4e2a\u6807\u51c6\uff0cASP\u5c31\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u3002\u7136\u800c\uff0c\u5728ASP\u4e2d\uff0c\u53ef\u80fd\u66f4\u5e38\u89c1\u7684\u662f\u8ba8\u8bba\u62c9\u666e\u62c9\u65af\u53d8\u6362\uff0c\u5b83\u662f\u4e00\u79cd\u5e7f\u4e49\u7684\u5085\u7acb\u53f6\u53d8\u6362\u3002\u62c9\u666e\u62c9\u65af\u53d8\u6362\u5b9a\u4e49\u4e3a\u3002\n\u4f18\u70b9\u662f\u4e0d\u4e00\u5b9a\u50cf\u5085\u7acb\u53f6\u53d8\u6362\u90a3\u6837\u5c40\u9650\u4e8e\u826f\u597d\u7684\u4fe1\u53f7\uff0c\u4f46\u53d8\u6362\u4ec5\u5728\u7279\u5b9a\u7684\u6536\u655b\u533a\u57df\u5185\u6709\u6548\u3002\u5b83\u88ab\u5e7f\u6cdb\u7528\u4e8e\u7814\u7a76/\u5206\u6790/\u8bbe\u8ba1LC/RC/LCR\u7535\u8def\uff0c\u800c\u8fd9\u4e9b\u7535\u8def\u53c8\u7528\u4e8e\u6536\u97f3\u673a/\u7535\u5409\u4ed6\u3001\u74e6\u74e6\u8e0f\u677f\u7b49\u3002\n\u8fd9\u51e0\u4e4e\u662f\u6211\u73b0\u5728\u6240\u80fd\u60f3\u5230\u7684\u5168\u90e8\uff0c\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u518d\u591a\u7684\u5199\u4f5c/\u89e3\u91ca\u4e5f\u4e0d\u80fd\u5b8c\u5168\u6355\u6349\u5230\u5085\u7acb\u53f6\u53d8\u6362\u5728\u4fe1\u53f7\u5904\u7406\u548c\u79d1\u5b66/\u5de5\u7a0b\u4e2d\u7684\u771f\u6b63\u91cd\u8981\u6027\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u7ed9\u51fa\u4e86\u4e00\u4e9b\u4f7f\u7528FT\u53ca\u5176\u6027\u8d28\u7684\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u7684\u5f88\u597d\u7684\u7b54\u6848\u3002+1.$\\endgroup$-1\u9ec4\u91d1\u5747\u503c\u3002\n\u6211\u5e76\u6ca1\u6709\u8bf4\u5085\u7acb\u53f6\u53d8\u6362\u662f\u7b2c\u4e00\u4e2a\uff0c\u53ea\u662f\u8bf4\u5b83\u5f88\u5f3a\u5927\u3002\u8bf7\u6ce8\u610f\uff0c\u6cf0\u52d2\u7ea7\u6570\u5e76\u4e0d\u662f\u7ec4\u6210\u9891\u7387\u7684\u5c55\u5f00\u5f0f\u3002\u4f8b\u5982\uff0c$\\sin(\\alphax)$\u7684\u6cf0\u52d2\u7ea7\u6570\u7ea6$$\u662f$\\alphax-\\alpha^3x^3/3\uff01+\\alpha^5x^5/5\uff01\\ldots$\uff0c\u800c$\\sin(\\alphax)$\u7684\u5085\u7acb\u53f6\u53d8\u6362\u662f$\\left[\\delta(\\omega-\\alpha)-\\delta(\\omega+\\alpha)\\right]/(2\\jmath)$(\u7ed9\u5b9a\u6216\u53d6\u4e00\u4e9b\u5f52\u4e00\u5316\u56e0\u5b50)\u3002\u540e\u8005\u662f\u6b63\u786e\u7684\u9891\u7387\u8868\u793a\uff0c\u6240\u4ee5\u6211\u4e0d\u786e\u5b9a\u8fd9\u91cc\u662f\u5426\u9002\u5408\u4e0e\u6cf0\u52d2\u7ea7\u6570\u8fdb\u884c\u6bd4\u8f83\u3002$\\endgroup$-Lorem Ipsum\u3002\n$\\Begingroup$\u5f53\u6211\u5f00\u59cb\u9605\u8bfb\u6b64\u56de\u590d\u65f6\uff0c\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u77e5\u9053@Yoda\u5728\u6211\u5411\u4e0b\u6eda\u52a8\u67e5\u770b\u5b83\u5230\u5e95\u662f\u8c01\u4e4b\u524d\u5199\u4e0b\u4e86\u5b83=)$\\endgroup$-1 phon\u3002\n$\\Begingroup$\u8be6\u7ec6\u8bf4\u660e#3\uff1a\u5377\u79ef\u662f\u5c06\u6ee4\u955c\u5e94\u7528\u4e8e\u56fe\u50cf\u65f6\u6240\u505a\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5e73\u5747\u6ee4\u955c\u6216\u9ad8\u65af\u6ee4\u955c(\u867d\u7136\u60a8\u53ef\u4ee5\u5bf9\u975e\u7ebf\u6027\u6ee4\u955c\u8fdb\u884c\u5085\u7acb\u53f6\u53d8\u6362)\u3002$\\endgroup$-1 Jonas\u3002\n\u5f7c\u5f97\u00b7K\u7684\u89c2\u70b9\u771f\u7684\u5f88\u5173\u952e\u3002\u4fe1\u53f7\u53ef\u4ee5\u76f8\u5bf9\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u78b1\u57fa\u6765\u8868\u793a\u3002\u6b63\u5f26\u548c\u4f59\u5f26\u662fLTI\u7cfb\u7edf\u7684\u7279\u5f81\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u662f\u7279\u6b8a\u7684\u3002$\\endgroup$-nnibot\u3002\n$\\Begingroup$Lorem Ipsum\u7684\u4f1f\u5927\u7b54\u6848\u9057\u6f0f\u4e86\u4e00\u4ef6\u4e8b\uff1a\u5085\u7acb\u53f6\u53d8\u6362\u5c06\u4fe1\u53f7\u5206\u89e3\u6210\u7ec4\u6210\u590d\u6570\u7684\u6307\u6570\uff1a\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf$H$\u662f\u7ebf\u6027\u7684\uff0c\u5e76\u4e14\u662f\u65f6\u95f4\u4e0d\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u5bf9\u590d\u6307\u6570\u7684\u54cd\u5e94\u5c06\u662f\u4e00\u4e2a\u5177\u6709\u76f8\u540c\u9891\u7387\u4f46(\u53ef\u80fd)\u4e0d\u540c\u76f8\u4f4d\u7684\u590d\u6307\u6570\uff0c$\\\u03c6$\uff0c\u548c\u632f\u5e45$A$\uff0c-\u5e76\u4e14\u632f\u5e45\u53ef\u4ee5\u662f\u96f6\uff1a\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Begingroup$@Peter K\u6211\u8ba4\u4e3a\uff0c\u9075\u5faa\u5173\u4e8e\u7b54\u6848(\u5b66\u672f)\u6b63\u786e\u6027\u7684\u9009\u62e9\u54f2\u5b66\uff0c\u4f60\u7684\u7b54\u6848\u5e94\u8be5\u88ab\u6574\u5408\u5230\u7531Lorem Ipsum\u63d0\u4f9b\u7684\u4e0a\u8ff0\u7b54\u6848\u4e2d\uff0c\u5c3d\u7ba1Lorem Ipsum\u88ab\u7528\u6237\u9009\u4e3a96\u5206\u7684\u7b54\u6848\uff0c\u4f46\u5b83\u7f3a\u4e4f\u8fd9\u4e00\u975e\u5e38\u91cd\u8981\u7684\u89c2\u70b9\u3002$\\endgroup$-1 FAT32\u3002\n$\\Begingroup$@Peter\u5f88\u62b1\u6b49\u4ee5\u6b64\u8bf7\u6c42\u6253\u6270\u60a8\uff0c\u4f46\u60a8\u662f1)\u7248\u4e3b\uff0c2)\u60a8\u7684\u540d\u5b57\u4e0e\u60a8\u7684\u6ce2\u675f\u6210\u5f62\u6807\u7b7e\u4e00\u8d77\u51fa\u73b0\u5728\u6d3b\u52a8\u7528\u6237\u5217\u8868\u4e2d\u3002\u4f60\u80fd\u7ed9\u51fa\u4e00\u4e2a\u7b80\u77ed\u7684\u610f\u89c1\u5417\uff1fMath.SE\u7684\u8fd9\u4e2a\u5e16\u5b50\u5728\u8fd9\u91cc\u4f1a\u4e0d\u4f1a\u5f88\u53d7\u6b22\u8fce\uff1f\u6211\u4e0d\u786e\u5b9aDSP.SE\u3001Math.SE\u8fd8\u662fEE.SE\u4e2d\u54ea\u4e00\u4e2a\u6700\u6709\u53ef\u80fd\u5e2e\u52a9\u90a3\u4e2a\u63d0\u95ee\u8005\u3002\u6211\u6b63\u5728\u8003\u8651\u8fc1\u79fb(\u4f5c\u4e3aMath.SE\u7248\u4e3b\u6211\u53ef\u4ee5\u505a\u5230)\u3002$\\endgroup$-Jyrki Lahtonen\u3002\n$\\egingroup$@peter K.\uff0c\u8bf7\u91cd\u65b0\u6253\u5f00\u95ee\u9898\uff0c\u5730\u5740\u662f\uff1adsp.stackexchange.com/Questions/37468\u3002\u6211\u628a\u5b83\u4fee\u597d\u4e86\u3002\u8c22\u8c22\u3002$\\endgroup$-1\u7f57\u4f0a\u3002\n$\\BEGINGROUP$Peter(\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4eba\u53ef\u4ee5\u7528@\u63a5\u8fd1\uff0c\u6709\u4e9b\u4eba\u4e0d\u80fd\uff1f\u8fd9\u4e2a\u9009\u9879\u5728\u54ea\u91cc\uff1f)\uff0c\u4f3c\u4e4e\u6709\u4eba\u6253\u5f00\u4e86\u5b83\u3002\u8c22\u8c22\u3002$\\endgroup$-1\u7f57\u4f0a\u3002\n\u7531\u4e8e\u5176\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6(\u5177\u4f53\u5730\u8bf4\uff0c\u662fFFT\u7684\u65f6\u95f4\u590d\u6742\u5ea6)\uff0c\u5b83\u7684\u901f\u5ea6\u5f88\u5feb(\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5377\u79ef\u5f88\u6709\u7528)\u3002\u6211\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u5f88\u53ef\u80fd\u4f1a\u5728\u65f6\u57df\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u800c\u5728\u5085\u7acb\u53f6\u57df\u505a\u7684\u66f4\u5c11\u3002\n\u4e3a\u4e86\u7ed9\u51fa\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u8bf4\u660e\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5047\u8bbe\u60a8\u5c06\u4e24\u4e2a\u591a\u9879\u5f0f\u76f8\u4e58\uff0c$a_0x^0+a_1x^1+\\ldots+a_nx^n$\u548c$b_0x^0+b_1x^1+\\ldots+b_nx^n$\u3002\n\u5982\u679c\u60a8\u8981\u5e7c\u7a1a\u5730\u6267\u884c\u6b64\u64cd\u4f5c(\u4f7f\u7528\u7b94\u7247\u65b9\u6cd5)\uff0c\u60a8\u5c06\u9700\u8981\u5927\u7ea6$n^2$\u7b97\u672f\u8fd0\u7b97(\u7ed9\u5b9a\u6216\u53d6\u4e00\u4e2a\u5e38\u6570\u56e0\u5b50)\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u770b\u4f3c\u5e73\u51e1\u7684\u89c2\u5bdf\uff1a\u4e3a\u4e86\u5c06\u4e24\u4e2a\u591a\u9879\u5f0f\u76f8\u4e58\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u538b\u5236\u7cfb\u6570\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5728(\u8db3\u591f\u7684)\u70b9\u6570\u5904\u8ba1\u7b97\u591a\u9879\u5f0f\uff0c\u5bf9\u8bc4\u4f30\u7684\u503c\u8fdb\u884c\u9010\u70b9\u76f8\u4e58\uff0c\u7136\u540e\u8fdb\u884c\u63d2\u503c\u4ee5\u8fd4\u56de\u7ed3\u679c\u3002\n\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6bd5\u7adf\uff0c\u6bcf\u4e2a\u591a\u9879\u5f0f\u90fd\u6709$n$\u9879\uff0c\u5982\u679c\u6211\u4eec\u7528$2n$\u70b9\u6765\u8ba1\u7b97\u6bcf\u4e2a\u591a\u9879\u5f0f\uff0c\u4ecd\u7136\u4f1a\u5bfc\u81f4$\\\\\u7ea6n^2$\u8fd0\u7b97\uff0c\u6240\u4ee5\u5b83\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u505a\u5f97\u6b63\u786e\uff0c\u5b83\u5c31\u4f1a\u53d1\u751f\uff01\u5982\u679c\u6211\u4eec\u5728\u6b63\u786e\u7684\u70b9\u4e0a\u6c42\u503c\uff0c\u90a3\u4e48\u4e00\u6b21\u5728\u591a\u4e2a\u70b9\u4e0a\u8ba1\u7b97\u4e00\u4e2a\u591a\u9879\u5f0f\u6bd4\u5728\u8fd9\u4e9b\u70b9\u4e0a\u5355\u72ec\u6c42\u503c\u8981\u5feb\u3002\u6b63\u786e\u7684\u5206\u6570\u662f\u4ec0\u4e48\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e9b\u90fd\u662f\u56e2\u7ed3\u7684\u6839\u6e90(\u5373\u6240\u6709\u590d\u6570$z$\uff0c\u4f7f\u5f97$z^n=1$)\u3002\u5982\u679c\u6211\u4eec\u9009\u62e9\u5728\u5355\u4f4d\u6839\u5904\u8ba1\u7b97\u591a\u9879\u5f0f\uff0c\u90a3\u4e48\u5f88\u591a\u8868\u8fbe\u5f0f\u90fd\u5c06\u662f\u76f8\u540c\u7684(\u56e0\u4e3a\u8bb8\u591a\u5355\u9879\u5f0f\u5c06\u88ab\u8bc1\u660e\u662f\u76f8\u540c\u7684)\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u53ea\u505a\u4e00\u6b21\u4ed6\u4eec\u7684\u7b97\u672f\uff0c\u7136\u540e\u91cd\u590d\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u6240\u6709\u5176\u4ed6\u70b9\u7684\u591a\u9879\u5f0f\u3002\n\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u975e\u5e38\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff0c\u901a\u8fc7\u70b9\u7684\u63d2\u503c\uff0c\u5f97\u5230\u7ed3\u679c\u7684\u591a\u9879\u5f0f\u7cfb\u6570\uff0c\u53ea\u9700\u4f7f\u7528\u5355\u4f4d\u6839\u7684\u5012\u6570\u3002\n\u8fd9\u91cc\u663e\u7136\u8df3\u8fc7\u4e86\u5f88\u591a\u6570\u5b66\u8fd0\u7b97\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0cFFT\u57fa\u672c\u4e0a\u5c31\u662f\u6211\u521a\u624d\u63cf\u8ff0\u7684\u7b97\u6cd5\uff0c\u7528\u6765\u8ba1\u7b97\u548c\u63d2\u503c\u591a\u9879\u5f0f\u3002\u6b63\u5982\u6211\u6240\u5c55\u793a\u7684\uff0c\u5b83\u7684\u7528\u9014\u4e4b\u4e00\u662f\u7528\u6bd4\u6b63\u5e38\u5c11\u5f97\u591a\u7684\u65f6\u95f4\u6765\u4e58\u591a\u9879\u5f0f\u3002\u7ed3\u679c\u8bc1\u660e\uff0c\u8fd9\u8282\u7701\u4e86\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5c06\u8fd0\u884c\u65f6\u95f4\u964d\u4f4e\u5230\u4e0e$n\\logn$\u6210\u6b63\u6bd4(\u5373\u7ebf\u6027)\uff0c\u800c\u4e0d\u662f$n^2$(\u4e8c\u6b21)\u3002\n\u56e0\u6b64\uff0c\u80fd\u591f\u4f7f\u7528\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362\u6765\u6267\u884c\u4e00\u4e2a\u5178\u578b\u7684\u8fd0\u7b97(\u5982\u591a\u9879\u5f0f\u4e58\u6cd5)\u8981\u5feb\u5f97\u591a\u662f\u4ec0\u4e48\u4f7f\u5b83\u6709\u7528\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4eba\u4eec\u73b0\u5728\u5bf9\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7a00\u758f\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362\u7b97\u6cd5\u7684\u65b0\u53d1\u73b0\u611f\u5230\u5174\u594b\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Beginggroup$\u4ec0\u4e48\u662f\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u6211\u4e0d\u4f1a\u5426\u51b3\u8fd9\u4e2a\u7b54\u6848\uff0c\u4f46\u6211\u4e0d\u8ba4\u4e3a\u5b83\u4f1a\u7ed9\u8fd9\u4e2a\u5173\u4e8e\u5085\u7acb\u53f6\u53d8\u6362\u7684\u8ba8\u8bba\u589e\u52a0\u4efb\u4f55\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002$\\endgroup$-Dilip Sarwate\u3002\n$\\egingroup$@DilipSarwate\u6211\u6000\u7591\u4ed6\u5728\u7528\u5b83\u4f5c\u4e3aO(n*log(N))\u7684\u7b80\u5199\u3002$\\endgroup$-1\u5409\u59c6\u00b7\u514b\u83b1\u3002\n$\\Begingroup$@DilipSarwate\uff1a\u5409\u59c6\u662f\u5bf9\u7684\u3002\u5b83\u4e0e(\u79bb\u6563\u7684)\u5085\u7acb\u53f6\u53d8\u6362\u6709\u5173\u3002\u5982\u679c\u6ca1\u6709FFT\uff0c\u60a8\u7684\u5085\u7acb\u53f6\u53d8\u6362\u5c06\u82b1\u8d39\u4e0e\u8f93\u5165\u5927\u5c0f\u7684\u5e73\u65b9\u6210\u6bd4\u4f8b\u7684\u65f6\u95f4\uff0c\u8fd9\u5c06\u4f7f\u5b83\u4eec\u7684\u7528\u5904\u5927\u5927\u964d\u4f4e\u3002\u4f46\u662f\u4f7f\u7528FFT\uff0c\u5b83\u4eec\u82b1\u8d39\u7684\u65f6\u95f4\u4e0e\u8f93\u5165\u7684\u5927\u5c0f\u6210\u6bd4\u4f8b(\u4e58\u4ee5\u5176\u5bf9\u6570)\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u66f4\u6709\u7528\uff0c\u8fd9\u52a0\u5feb\u4e86\u5927\u91cf\u8ba1\u7b97\u7684\u901f\u5ea6\u3002\u53e6\u5916\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u672c\u6709\u8da3\u7684\u8bfb\u7269\u3002$\\endgroup$-n\u7528\u6237541686\u3002\n$\\BEGINGROUP$\u60a8\u5e94\u8be5\u63d0\u5230\u4e3a\u4ec0\u4e48\u5b83\u5f88\u5feb\u3002\u5b83\u7684\u901f\u5ea6\u5728\u54ea\u91cc\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5173\u5fc3\u5b83\u7684\u901f\u5ea6\uff1f$\\endgroup$-1Cyberman\u3002\n$\\BEGINGROUP$\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u7b54\u6848\u662f\u5408\u7406\u7684\u3002\u5e94\u8be5\u89e3\u91ca\u4e00\u4e0b\uff0c\u9664\u4e86\u5176\u4ed6\u4eba\u7684\u56de\u7b54\u4e2d\u89e3\u91ca\u7684\u6240\u6709\u597d\u7684\u7279\u6027\u4e4b\u5916\uff0cFFT\u8fd8\u5141\u8bb8\u5b83\u6210\u4e3a\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u3002$\\endgroup$--Andrey Rubshtein\u3002\n\u9664\u4e86\u5f7c\u5f97\u7684\u7b54\u6848\u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u539f\u56e0\u4e5f\u4e0e\u672c\u5f81\u51fd\u6570\u6709\u5173\u3002$e^{kx}$\u662f\u5fae\u5206\u7b97\u5b50$\\frac{d^n}{dx^n}$\u7684\u672c\u5f81\u51fd\u6570\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4f7f\u7528\u5085\u7acb\u53f6\u53d8\u6362(\u5bf9\u5e94\u4e8e\u7eaf\u865a\u6570$k$)\u548c\u62c9\u666e\u62c9\u65af\u53d8\u6362(\u5bf9\u5e94\u4e8e\u590d\u6570$k$)\u6765\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u3002\n\u7531\u4e8e$e^{kx}$\u662f\u5377\u79ef\u7b97\u5b50\u548c\u5fae\u5206\u7b97\u5b50\u7684\u7279\u5f81\u51fd\u6570\uff0c\u8fd9\u53ef\u80fd\u662fLSIV\u7cfb\u7edf\u53ef\u4ee5\u7528\u5fae\u5206\u65b9\u7a0b\u8868\u793a\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\u7f16\u8f91\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u5fae\u5206(\u548c\u79ef\u5206)\u8fd0\u7b97\u7b26\u90fd\u662fLSIV\u8fd0\u7b97\u7b26\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Begingroup$\u672c\u5e16\u5b50\u4e2d\u7684\u5176\u4ed6\u4e00\u4e9b\u7b54\u6848\u5bf9\u5085\u7acb\u53f6\u53d8\u6362\u7684\u5b9a\u4e49\u548c\u6027\u8d28\u8fdb\u884c\u4e86\u5f88\u597d\u7684\u6570\u5b66\u8ba8\u8bba\uff1b\u4f5c\u4e3a\u4e00\u540d\u97f3\u9891\u7a0b\u5e8f\u5458\uff0c\u6211\u53ea\u60f3\u63d0\u4f9b\u6211\u4e2a\u4eba\u7684\u76f4\u89c9\uff0c\u8bf4\u660e\u4e3a\u4ec0\u4e48\u5b83\u5bf9\u6211\u5f88\u91cd\u8981\u3002\n\u5085\u7acb\u53f6\u53d8\u6362\u4f7f\u6211\u80fd\u591f\u56de\u7b54\u6709\u5173\u58f0\u97f3\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5f88\u96be\u6216\u4e0d\u53ef\u80fd\u7528\u5176\u4ed6\u65b9\u6cd5\u6765\u56de\u7b54\u3002\u5b83\u4f7f\u96be\u9898\u53d8\u5f97\u5bb9\u6613\u3002\n\u5f55\u97f3\u5305\u542b\u4e00\u5957\u4e09\u4e2a\u97f3\u7b26\u3002\u97f3\u7b26\u662f\u4ec0\u4e48\uff1f\u5982\u679c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c06\u5f55\u97f3\u4fdd\u7559\u4e3a\u4e00\u7ec4\u632f\u5e45\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5bb9\u6613\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c06\u5f55\u97f3\u8f6c\u6362\u6210\u4e00\u7ec4\u9891\u7387\uff0c\u8fd9\u771f\u7684\u5f88\u5bb9\u6613\u3002\n\u6211\u60f3\u6539\u53d8\u5f55\u97f3\u7684\u97f3\u9ad8\u800c\u4e0d\u6539\u53d8\u5176\u6301\u7eed\u65f6\u95f4\u3002\u6211\u8be5\u600e\u4e48\u505a\u5462\uff1f\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u4e0d\u5bb9\u6613\u505a\u5230\uff0c\u4ec5\u4ec5\u901a\u8fc7\u64cd\u7eb5\u8f93\u5165\u4fe1\u53f7\u7684\u5e45\u5ea6\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u77e5\u9053\u6784\u6210\u4fe1\u53f7\u7684\u9891\u7387\uff0c\u90a3\u5c31\u5f88\u5bb9\u6613\u4e86\u3002\n\u8fd9\u6bb5\u5f55\u97f3\u662f\u5305\u542b\u8bed\u97f3\u8fd8\u662f\u5305\u542b\u97f3\u4e50\uff1f\u4ec5\u4f7f\u7528\u57fa\u4e8e\u632f\u5e45\u7684\u65b9\u6cd5\u5f88\u96be\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4f46\u662f\uff0c\u57fa\u4e8e\u5085\u7acb\u53f6\u53d8\u6362\u53ca\u5176\u65cf\uff0c\u51e0\u4e4e\u6240\u6709\u65f6\u5019\u90fd\u6709\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u731c\u6d4b\u51fa\u6b63\u786e\u7684\u7b54\u6848\u3002\n\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u4f60\u60f3\u95ee\u7684\u5173\u4e8e\u6570\u5b57\u5f55\u97f3\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u79bb\u6563\u7248\u672c\u7684\u5085\u7acb\u53f6\u53d8\u6362\u6765\u53d8\u6362\u5f55\u97f3\u800c\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6bcf\u4e2a\u73b0\u4ee3\u6570\u5b57\u97f3\u9891\u8bbe\u5907\u90fd\u4e25\u91cd\u4f9d\u8d56\u4e8e\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u975e\u5e38\u76f8\u4f3c\u7684\u529f\u80fd\u3002\n\u518d\u8bf4\u4e00\u6b21\uff0c\u8bf7\u539f\u8c05\u9ad8\u5ea6\u975e\u6b63\u5f0f\u7684\u63cf\u8ff0\uff1b\u8fd9\u53ea\u662f\u6211\u4e2a\u4eba\u5173\u4e8e\u4e3a\u4ec0\u4e48\u5085\u7acb\u53f6\u53d8\u6362\u5f88\u91cd\u8981\u7684\u76f4\u89c9\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Beginggroup$\u55e8\uff0c\u7ea6\u7ff0\uff0c\u6211\u6709\u4e00\u4e2a\u611a\u8822\u7684\u95ee\u9898\u3002\u6211\u60f3\u8ba1\u7b97TWA(osha.gov/pls/oshaweb/\u2026)\u3002\u4ece\u6211\u4eec\u5728\u5de5\u4f5c\u573a\u6240\u5f55\u5236\u7684\u58f0\u97f3\u6765\u770b\uff0c\u5982\u679c\u6211\u5728\u5206\u6790\u97f3\u9891\u6587\u4ef6\u65f6\u4f7f\u7528\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u6211\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u6d4b\u91cf\u8fd9\u4e2a\u503c\u3002$\\endgroup$-\u4faf\u8d5b\u56e0\u00b7\u8428\u6c99\u5c14\u3002\n$\\Beginggroup$\u9664\u975e\u5df2\u6821\u51c6\u9ea6\u514b\u98ce\u548c\u5f55\u97f3\u73af\u5883\uff0c\u5426\u5219\u4e0d\u4f1a\u3002$\\endgroup$-1 johnwbyrd\u3002\n$\\BEGINGROUP$\u5176\u4ed6\u4eba\u7ed9\u51fa\u4e86\u5f88\u597d\u7684\u3001\u6709\u7528\u7684\u7b54\u6848\u3002\u53ea\u8981\u60f3\u4e00\u60f3\u4e00\u4e9b\u4fe1\u53f7\uff1a\u4f60\u53ea\u5173\u5fc3\u5b83\u7684\u9891\u7387(\u548c\u5b83\u4eec\u7684\u76f8\u4f4d)\uff0c\u800c\u4e0d\u662f\u65f6\u57df\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u662f\u6700\u7ec8\u7684\u8fd8\u662f\u5b8c\u6574\u7684\u7b54\u6848\uff0c\u4f46\u8fd9\u53ea\u662f\u5085\u7acb\u53f6\u53d8\u6362\u6709\u7528\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u3002\n\u5f53\u4f60\u6709\u4e00\u4e9b\u4fe1\u53f7\u65f6\uff0c\u5b83\u53ef\u4ee5\u7531\u65e0\u9650(\u6216\u63a5\u8fd1)\u7684\u9891\u7387\u7ec4\u6210\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u91c7\u6837\u7387\u3002\u4f46\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff1a\u6211\u4eec\u77e5\u9053\u5927\u591a\u6570\u4fe1\u53f7\u7684\u9891\u7387\u662f\u6700\u5c11\u7684\uff0c\u6216\u8005\u6211\u4eec\u6b63\u5728\u4ee5\u8db3\u591f\u9ad8\u7684\u901f\u7387\u8fdb\u884c\u91c7\u6837\u3002\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5b83\u5462\uff1f\u8fd9\u5c31\u662f\u538b\u7f29\u4f20\u611f\u9886\u57df\u6240\u505a\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u77e5\u9053\u6700\u6709\u53ef\u80fd\u7684\u4fe1\u53f7\u662f\u8bef\u5dee\u6700\u5c0f\u3001\u9891\u7387\u6700\u4f4e\u7684\u4fe1\u53f7\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u5c06\u76f8\u5bf9\u4e8e\u6211\u4eec\u7684\u6d4b\u91cf\u548c\u5085\u91cc\u53f6\u53d8\u6362\u7684\u5e45\u5ea6\u7684\u603b\u4f53\u8bef\u5dee\u6700\u5c0f\u5316\u3002\n\u51e0\u4e2a\u9891\u7387\u7684\u4fe1\u53f7\u901a\u5e38\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u6216\u8005\u5927\u90e8\u5206\u662f\u96f6(\u4e5f\u5c31\u662f\u4ed6\u4eec\u5728\u538b\u7f29\u611f\u6d4b\u4e2d\u6240\u8bf4\u7684\u7a00\u758f)\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u9891\u7387\u7684\u4fe1\u53f7\u4ec5\u5177\u6709\u4f5c\u4e3a\u53d8\u6362\u7684\u589e\u91cf\u51fd\u6570\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6700\u5c0f\u5316\u8bef\u5dee(\u7b2c\u4e00\u7ec4$||\\cdot||$)\u548c\u6700\u5c0f\u5316\u5085\u7acb\u53f6\u53d8\u6362(\u7b2c\u4e8c\u7ec4$||\\cdot||$)\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6709\u3002\n\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5948\u594e\u65af\u7279\u8bf4\u8fc7\uff0c\u4f60\u5fc5\u987b\u4ee5\u4e24\u500d\u7684\u6700\u9ad8\u9891\u7387\u6d4b\u91cf\uff0c\u624d\u80fd\u83b7\u5f97\u826f\u597d\u7684\u8868\u73b0\u3002\u8fd9\u662f\u5047\u8bbe\u4f60\u7684\u4fe1\u53f7\u4e2d\u6709\u65e0\u9650\u7684\u9891\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u6e21\u8fc7\u8fd9\u4e2a\u96be\u5173\u7684\uff01\n\u538b\u7f29\u611f\u6d4b\u9886\u57df\u53ef\u4ee5\u91cd\u6784\u5728\u67d0\u4e9b\u57df\u4e2d\u5927\u90e8\u5206\u4e3a\u96f6(\u6216\u7a00\u758f)\u7684\u4efb\u4f55\u4fe1\u53f7\u3002\u55ef\uff0c\u8fd9\u5c31\u662f\u5085\u7acb\u53f6\u53d8\u6362\u7684\u60c5\u51b5\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n\u5085\u7acb\u53f6\u53d8\u6362\u7684\u4e3b\u8981\u610f\u4e49\u5728\u4e8e\u7cfb\u7edf\u5206\u6790\u3002\u6211\u4eec\u5b87\u5b99\u7684\u4e3b\u8981\u6210\u5206\u662f\u771f\u7a7a\uff0c\u771f\u7a7a\u662f\u573a\u7684\u57fa\u672c\u7ebf\u6027\u548c\u65f6\u4e0d\u53d8\u7684\u8f7d\u4f53\uff1a\u4e0d\u540c\u7684\u573a\u901a\u8fc7\u5c06\u5404\u81ea\u7684\u77e2\u91cf\u76f8\u52a0\u800c\u53e0\u52a0\uff0c\u65e0\u8bba\u4f60\u4f55\u65f6\u91cd\u590d\u67d0\u4e9b\u573a\u7684\u5e94\u7528\uff0c\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u56e0\u6b64\uff0c\u8bb8\u591a\u4e5f\u6d89\u53ca\u7269\u7406\u7269\u8d28\u7684\u7cfb\u7edf\u5728\u5f88\u597d\u7684\u8fd1\u4f3c\u4e0b\u8868\u73b0\u4e3a\u7ebf\u6027\u7684\u3001\u65f6\u4e0d\u53d8\u7684\u7cfb\u7edf\u3002\n\u8fd9\u6837\u7684LTI\u7cfb\u7edf\u53ef\u4ee5\u7528\u5b83\u4eec\u7684\u8109\u51b2\u54cd\u5e94\u6765\u63cf\u8ff0\uff0c\u800c\u5bf9\u4efb\u4f55\u65f6\u95f4\u5206\u5e03\u7684\u4fe1\u53f7\u7684\u54cd\u5e94\u90fd\u53ef\u4ee5\u901a\u8fc7\u5c06\u4fe1\u53f7\u4e0e\u8109\u51b2\u54cd\u5e94\u5377\u79ef\u6765\u63cf\u8ff0\u3002\n\u5377\u79ef\u662f\u4e00\u79cd\u4ea4\u6362\u548c\u7ed3\u5408\u8fd0\u7b97\uff0c\u4f46\u5728\u8ba1\u7b97\u548c\u6982\u5ff5\u4e0a\u4e5f\u76f8\u5f53\u6602\u8d35\u3002\u7136\u800c\uff0c\u51fd\u6570\u7684\u5377\u79ef\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u6620\u5c04\u6210\u5206\u6bb5\u4e58\u6cd5\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u7ecf\u8fc7\u5085\u7acb\u53f6\u53d8\u6362\u540e\uff0c\u7ebf\u6027\u65f6\u4e0d\u53d8\u7cfb\u7edf\u53ca\u5176\u7ec4\u5408\u7684\u6027\u8d28\u5f97\u5230\u4e86\u66f4\u597d\u7684\u63cf\u8ff0\u548c\u5904\u7406\u3002\n\u56e0\u6b64\uff0c\u50cf\u9891\u7387\u54cd\u5e94\u8fd9\u6837\u7684\u4e1c\u897f\u5bf9\u4e8e\u63cf\u8ff0\u8bb8\u591a\u7cfb\u7edf\u7684\u884c\u4e3a\u662f\u5f88\u6709\u7279\u8272\u7684\uff0c\u5e76\u4e14\u53d8\u5f97\u5bf9\u63cf\u8ff0\u5b83\u4eec\u5f88\u6709\u7528\u3002\n\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362\u4e0e\u5085\u7acb\u53f6\u53d8\u6362\u51e0\u4e4e\u4f46\u4e0d\u5b8c\u5168\u4e0d\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u7ed3\u679c\u5e76\u4e0d\u80fd\u771f\u6b63\u5408\u7406\u5730\u89e3\u91ca\u4e3a\u5085\u7acb\u53f6\u53d8\u6362\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u7406\u8bba\u4e0a\u662f\u575a\u5b9a\u7684\u3002\u53ea\u6709\u5728\u8ba8\u8bba\u5177\u6709\u53d8\u6362\u95f4\u9694\u5468\u671f\u7684\u91c7\u6837\u4fe1\u53f7\u65f6\uff0c\u5b83\u4eec\u624d\u5b8c\u5168\u5bf9\u5e94\u4e8e\u5085\u7acb\u53f6\u53d8\u6362\u3002\u7279\u522b\u662f\uff0c\u5468\u671f\u6027\u6807\u51c6\u51e0\u4e4e\u603b\u662f\u4e0d\u80fd\u6ee1\u8db3\u3002\n\u6709\u51e0\u79cd\u6280\u672f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bd4\u5982\u4f7f\u7528\u91cd\u53e0\u7a97\u53e3\u51fd\u6570\u3002\n\u7136\u800c\uff0cFFT\u5728\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u65f6\u53ef\u4ee5\u7528\u6765\u505a\u79bb\u6563\u65f6\u95f4\u5377\u79ef\uff0c\u800c\u4e14\u5b83\u662f\u4e00\u79cd\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u4f7f\u5f97\u5b83\u5728\u5f88\u591a\u4e8b\u60c5\u4e0a\u90fd\u662f\u6709\u7528\u7684\u3002\n\u4eba\u4eec\u8fd8\u53ef\u4ee5\u5c06\u57fa\u672c\u7684FFT\u7b97\u6cd5\u7528\u4e8e\u6570\u8bba\u53d8\u6362(\u5b83\u5728\u79bb\u6563\u6570\u57df\u800c\u4e0d\u662f\u590d\u6742\u7684\u5b9e\u6570\u57df\u4e2d\u5de5\u4f5c)\uff0c\u4ee5\u4fbf\u8fdb\u884c\u5feb\u901f\u5377\u79ef\uff0c\u5c31\u50cf\u4e58\u4ee5\u5927\u6570\u6216\u591a\u9879\u5f0f\u4e00\u6837\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u57fa\u672c\u4e0a\u5bf9\u4e8e\u4efb\u4f55\u8f93\u5165\uff0c\u9891\u57df\u548c\u767d\u566a\u58f0\u90fd\u662f\u65e0\u6cd5\u533a\u5206\u7684\uff0c\u5e76\u4e14\u5728\u60a8\u8fd9\u6837\u505a\u4e4b\u524d\u6ca1\u6709\u6709\u7528\u7684\u89e3\u91ca\u3002\n..", "note_en": "$\\begingroup$  Everyone discusses the Fourier transform when discussing signal processing. Why is it so important to signal processing and what does it tell us about the signal?\n Does it only apply to digital signal processing or does it apply to analog signals as well?\n      $\\endgroup$\n  $\\begingroup$  Recently a  discussion about Fourier transforms was revived on math.SE, and I thought that people on this site might find some of it worthwhile, and might even want to participate.  $\\endgroup$\r\u2013\u00a0 Dilip Sarwate\n  $\\begingroup$  cf.   this answer for some excellent historical background. Fourier series date at least as far back as  Ptolemy&#39;s epicyclic astronomy. Adding more eccentrics and epicycles, akin to adding more terms to a Fourier series, one can account for  any continuous motion of an object in the sky.  $\\endgroup$\r\u2013\u00a0 Geremia\n  $\\begingroup$  This is quite a broad question and it indeed is quite hard to pinpoint  why exactly Fourier transforms are important in signal processing. The simplest, hand waving answer one can provide is that it is an  extremely powerful mathematical tool that allows you to view your signals in a different domain, inside which several difficult problems become very simple to analyze.\n Its ubiquity in nearly every field of engineering and physical sciences, all for different reasons, makes it all the more harder to narrow down a reason. I hope that looking at some of its properties which led to its widespread adoption along with some practical examples and a dash of history might help one to understand its importance.\n  To understand the importance of the Fourier transform, it is important to step back a little and appreciate the power of the Fourier series put forth by Joseph Fourier. In a nut-shell, any periodic function $g(x)$ integrable on the domain $\\mathcal{D}=[-\\pi,\\pi]$ can be written as an infinite sum of sines and cosines as\n  where $e^{\\imath\\theta}=\\cos(\\theta)+\\jmath\\sin(\\theta)$.  This idea that a function could be broken down into its constituent frequencies (i.e., into sines and cosines of all frequencies) was a powerful one and forms the backbone of the Fourier transform.\n  The Fourier transform can be viewed as an extension of the above Fourier series to non-periodic functions. For completeness and for clarity, I&#39;ll define the Fourier transform here. If $x(t)$ is a continuous, integrable signal, then its Fourier transform, $X(f)$ is given by\n     First and foremost, a Fourier transform of a signal tells you  what frequencies are present in your signal and in what proportions.\n Example: Have you ever noticed that each of your phone&#39;s number buttons sounds different when you press during a call and that it sounds the same for every phone model? That&#39;s because they&#39;re each composed of two different sinusoids which can be used to uniquely identify the button. When you use your phone to punch in combinations to navigate a menu, the way that the other party knows what keys you pressed is by doing a Fourier transform of the input and looking at the frequencies present.\n Apart from some very useful  elementary properties which make the mathematics involved simple, some of the other reasons why it has such a widespread importance in signal processing are:\n The magnitude square of the Fourier transform, $\\vert X(f)\\vert^2$ instantly tells us how much power the signal $x(t)$ has at a particular frequency $f$.\n From Parseval&#39;s theorem (more generally Plancherel&#39;s theorem), we have $$\\int_\\mathbb{R}\\vert x(t)\\vert^2\\ dt = \\int_\\mathbb{R}\\vert X(f)\\vert^2\\ df$$which means that  the total energy in a signal across all time is equal to the total energy in the transform across all frequencies. Thus, the transform is energy preserving.\n Convolutions in the time domain are equivalent to multiplications in the frequency domain, i.e., given two signals $x(t)$ and $y(t)$, then if\n   For discrete signals, with the development of efficient FFT algorithms, almost always, it is faster to implement a convolution operation in the frequency domain than in the time domain.\n Similar to the convolution operation, cross-correlations are also easily implemented in the frequency domain as $Z(f)=X(f)^*Y(f)$, where $^*$ denotes complex conjugate.\n By being able to split signals into their constituent frequencies, one can easily block out certain frequencies selectively by nullifying their contributions.\n Example: If you&#39;re a football (soccer) fan, you might&#39;ve been annoyed at the constant drone of the vuvuzelas that pretty much drowned all the commentary during the 2010 world cup in South Africa. However, the vuvuzela has a constant pitch of ~235Hz which made it easy for broadcasters to implement a notch filter to cut-off the offending noise.  [1]\n A shifted (delayed) signal in the time domain manifests as a phase change in the frequency domain. While this falls under the elementary property category, this is a widely used property in practice, especially in imaging and tomography applications,\n Example: When a wave travels through a heterogenous medium, it slows down and speeds up according to changes in the speed of wave propagation in the medium. So by observing a change in phase from what&#39;s expected and what&#39;s measured, one can infer the excess time delay which in turn tells you how much the wave speed has changed in the medium. This is of course, a very simplified layman explanation, but forms the basis for tomography.\n  The theory of Fourier transforms is applicable irrespective of whether the signal is continuous or discrete, as long as it is &#34;nice&#34; and absolutely integrable. So yes, ASP uses Fourier transforms as long as the signals satisfy this criterion. However, it is perhaps more common to talk about Laplace transforms, which is a generalized Fourier transform, in ASP. The Laplace transform is defined as\n  The advantage is that one is not necessarily confined to &#34;nice signals&#34; as in the Fourier transform, but the transform is valid only within a certain region of convergence. It is widely used in studying/analyzing/designing LC/RC/LCR circuits, which in turn are used in radios/electric guitars, wah-wah pedals, etc.\n  This is pretty much all I could think of right now, but do note that  no amount of writing/explanation can fully capture the true importance of Fourier transforms in signal processing and in science/engineering\n    $\\endgroup$\n  $\\begingroup$  Nice answer in giving some realworld application using FT and its properties. +1.  $\\endgroup$\r\u2013\u00a0 goldenmean\n  $\\begingroup$  @endolith I didn&#39;t say the Fourier transform was first, just that it is  powerful. Note that a Taylor series is  not an expansion in terms of the constituent frequencies. For e.g., the Taylor series of $\\sin(\\alpha x)$ about $0$ is $\\alpha x-\\alpha^3x^3/3!+\\alpha^5x^5/5!\\ldots$, whereas the Fourier transform of $\\sin(\\alpha x)$ is $\\left[\\delta(\\omega-\\alpha)-\\delta(\\omega+\\alpha)\\right]/(2\\jmath)$ (give or take some normalization factors). The latter is the correct frequency representation, so I&#39;m not sure if any comparisons with Taylor series is apt here.  $\\endgroup$\r\u2013\u00a0 Lorem Ipsum\n  $\\begingroup$  When I started reading this response, somehow I knew @yoda wrote it before I scrolled down to see who it actually was = )  $\\endgroup$\r\u2013\u00a0 Phonon\n  $\\begingroup$  To elaborate on #3: Convolution is what you do when you apply a filter to an image, such as an average filter, or a Gaussian filter (though you can&#39;t Fourier-transform non-linear filters).  $\\endgroup$\r\u2013\u00a0 Jonas\n  $\\begingroup$  Peter K&#39;s point is really critical. Signals can be represented with respect to  many different bases. Sines and cosines are special because they are the eigenfunctions of LTI systems.  $\\endgroup$\r\u2013\u00a0 nibot\n      $\\begingroup$  Lorem Ipsum&#39;s great answer misses one thing: The Fourier transform decomposes signals into constituent complex exponentials:\n   Put simply, if a system, $H$ is linear and time-invariant, then its response to a complex exponential will be a complex exponential of the same frequency but (possibly) different phase, $\\phi$, and amplitude, $A$, --- and the amplitude may be zero:\n    $\\endgroup$\n  $\\begingroup$  @Peter K. I think that following the philosophy of choice on the (academic) correctness over &#34;popularity&#34; of an answer, your answer should be be integrated into the above answer provideded by Lorem Ipsum, which despite being selected as the answer with 96 points by the users, lacks this very important point of view.  $\\endgroup$\r\u2013\u00a0 Fat32\n  $\\begingroup$  @Peter Sorry to disturb you with this request, but you are 1) a moderator, 2) your name appeared on the list of users &#34;active&#34; with your beamforming tag. Can you give a quick opinion whether  this post in Math.SE would be well received here? I am not sure, whether DSP.SE, Math.SE or EE.SE has the best chance of helping that asker. I am considering migration (which I can do as a Math.SE moderator).  $\\endgroup$\r\u2013\u00a0 Jyrki Lahtonen\n  $\\begingroup$  @Peter K., Could you please reopen the question at:  dsp.stackexchange.com/questions/37468. I fixed it. Thank You.  $\\endgroup$\r\u2013\u00a0 Royi\n    $\\begingroup$  Peter (How come some people can be approached using  @ and some can&#39;t? Where is the option for that?), It seems someone opened it. Thank You.  $\\endgroup$\r\u2013\u00a0 Royi\n    $\\begingroup$  It&#39;s  fast (e.g. useful for convolution), due to its  linearithmic time complexity (specifically, that of the  FFT). I would argue that, if this were not the case, we would probably be doing a lot more in the time domain, and a lot less in the Fourier domain.\n   To give an concrete example of how it works, suppose you were multiplying two polynomials,  $a_0 x^0 + a_1 x^1 + \\ldots + a_nx^n$ and  $b_0 x^0 + b_1 x^1 + \\ldots + b_nx^n$.\n If you were to do this naively (using the  FOIL method), you would need approximately  $n^2$ arithmetic operations (give or take a constant factor).\n However, we can make a seemingly mundane observation: in order to multiply two polynomials,  we don&#39;t need to FOIL the coefficients. Instead, we can simply  evaluate the polynomials at a (sufficient) number of points, do a  pointwise multiplication of the evaluated values, and then  interpolate to get back the result.\n Why is that useful? After all, each polynomial has  $n$ terms, and if we were to evaluate each one at  $2n$ points, that would still result in  $\\approx n^2$ operations, so it doesn&#39;t seem to help.\n But it does, if we do it correctly! Evaluating a single polynomial at  many points at once is  faster than evaluating it at those points individually,  if we evaluate at the &#34;right&#34; points. What are the &#34;right&#34; points?\n It turns out those are the roots of unity (i.e. all complex numbers  $z$ such that  $z^n = 1$). If we choose to evaluate the polynomial at the roots of unity, then a lot of expressions will turn out the same (because a lot of monomials will turn out to be the same). This means we can do their arithmetic  once, and re-use it thereafter for evaluating the polynomial at all the other points.\n We can do a very similar process for interpolating through the points to get back the polynomial coefficients of the result, just by using the  inverse roots of unity.\n There&#39;s obviously a lot of math I&#39;m skipping here, but effectively, the FFT is basically the algorithm I just described, to evaluate and interpolate the polynomials. One of its uses, as I showed, was to multiply polynomials in a lot less time than normal.It turns out that this saves a tremendous amount of work, bringing down the running time to being proportional to  $n \\log n$ (i.e. linearithmic) instead of  $n^2$ (quadratic).\n Thus the ability to use the FFT to perform a typical operation (such as polynomial multiplication) much faster is what makes it useful, and that is also why people are now excited by MIT&#39;s new discovery of the  Sparse FFT algorithm.\n    $\\endgroup$\n  $\\begingroup$  What is linearithmic time complexity? I won&#39;t downvote this answer but I don&#39;t think it adds anything of value to this discussion on Fourier  transforms.  $\\endgroup$\r\u2013\u00a0 Dilip Sarwate\n  $\\begingroup$  @DilipSarwate I suspect he&#39;s using it as shorthand for O(n*log(n)).  $\\endgroup$\r\u2013\u00a0 Jim Clay\n  $\\begingroup$  @DilipSarwate: Jim is right. It has  everything to do with (discrete) Fourier transforms. Without the FFT, your Fourier transforms would take time proportional to the  square of the input size, which would make them a lot less useful. But with the FFT, they take time proportional the size of the input (times its logarithm), which makes them much more useful, and which speeds up a lot of calculations. Also  this might be an interesting read.  $\\endgroup$\r\u2013\u00a0 user541686\n  $\\begingroup$  You should mention WHY its fast. Where its fast and why do we care that its fast?  $\\endgroup$\r\u2013\u00a0 CyberMen\n  $\\begingroup$  I think that this answer is legitimate. It should be paraphrased - &#34;Beside all the nice characteristics explained in other peoples answer, FFT allows it to become a feasible approach in real-time applications&#34;.  $\\endgroup$\r\u2013\u00a0 Andrey Rubshtein\n      $\\begingroup$  Additional to Peter&#39;s answer, there is another reason which is also related to the eigenfunction. That&#39;s, $e^{kx}$ is the eigenfunction of the differential operator $\\frac{d^n}{dx^n}$. That&#39;s why Fourier transform (corresponding to pure imaginary $k$) and Laplace transform (corresponding to complex $k$) can be used to solve differential equations.\n Since $e^{kx}$ is the eigenfunction of both convolution and differential operator, maybe that&#39;s one the of the reasons why LSIV system can be represented by differential equations.\n EDIT: As a matter of fact, differential (and integral) operators are LSIV operators, see  here.\n    $\\endgroup$\n    $\\begingroup$  Some of the other answers in this thread have excellent mathematical discussions of the definition and properties of the Fourier transform; as an audio programmer, I merely want to provide my own personal intuition as to  why it&#39;s important to me.\n The Fourier transform permits me to answer questions about a sound that are difficult or impossible to answer with other methods. It makes hard problems easy.\n A recording contains a set of three musical notes. What are the notes? If you leave the recording as a set of amplitudes over time, this is not an easy problem. If you convert the recording to a set of frequencies over time, it&#39;s really easy.\n I want to change the pitch of a recording without changing its duration. How do I do this? It&#39;s possible, but not easy to do, by just manipulating the amplitude of an input signal. But it&#39;s easy if you know the frequencies that comprise the signal.\n Does this recording contain speech or does it contain music? Super hard to do using only amplitude-based methods. But there are good solutions that guess the right answer nearly all of the time based on the Fourier transform and its family.\n Almost every question you&#39;d like to ask about a digital audio recording is made easier by transforming the recording using a discrete version of the Fourier transform.\n In practice,  every modern digital audio device relies heavily on functions very similar to the Fourier transform.\n Again, forgive the highly informal description; this is merely my personal intuition as to  why the Fourier transform is important.\n    $\\endgroup$\n  $\\begingroup$  Hey John, I have a silly question. I want to calculate the TWA ( osha.gov/pls/oshaweb/\u2026) from the sound we recorded in a workplace, I wonder if I could measure this value more precisely if I employ Fourier Transformation in analyzing my audio file.  $\\endgroup$\r\u2013\u00a0 Hossein Sarshar\n  $\\begingroup$  Not unless the microphone and the recording environment were calibrated, no.  $\\endgroup$\r\u2013\u00a0 johnwbyrd\n    $\\begingroup$  The other people have given great, useful answers. Just think about some signal: you only care what frequencies are in it (and their phase), not about the time domain.  I do not know that this is a final or complete answer, but just another reason why the Fourier transform is useful.\n When you have some signal, it could be composed of an infinite (or close to) number of frequencies, depending on your sampling rate. But, that&#39;s not the case: we know that most signals have the fewest number of frequencies possible, or that we&#39;re sampling at a high enough rate.\n If we know that, why can&#39;t we use it? That&#39;s what the field of compressed sensing does. They know that the most likely signal is one that has the least error and has the fewest frequencies. So, they minimize the overall error relative to our measurements as well as the magnitude of the Fourier transform.\n A signal of a few frequencies often has a minimal Fourier transform, or mostly zeros (aka &#34;sparse,&#34; as they say in compressed sensing). A signal of one frequency just has a delta function as the transform, for example.\n   Here, all we&#39;re doing is minimizing the error (first set of $||\\cdot||$) and minimizing the Fourier transform (second set of $||\\cdot||$). Here, we have\n  You may recall that Nyquist said that you have to measure at twice the highest frequency to get a good representation. Well, that was assuming you had infinite frequencies in your signal. We can get past that!\n The field of compressed sensing can reconstruct any signal that&#39;s mostly zeros (or sparse) in some domain. Well, that&#39;s the case for the Fourier transform.\n    $\\endgroup$\n    $\\begingroup$  The main importance of the Fourier transform lies with system analysis. The main constituent of our universe is vacuum, and vacuum is a fundamentally linear and time-invariant carrier of fields: different fields superimpose by adding their respective vectors, and regardless of when you repeat the application of certain fields, the outcome will be the same.\n As a consequence, a lot of systems also involving physical matter are to a good approximation behaving as linear, time-invariant systems.\n Such LTI systems can be described by their &#34;impulse response&#34;, and the response to any time-distributed signal is described by convolving the signal with the impulse response.\n Convolution is a commutative and associative operation, but it is also quite computationally and conceptually expensive. However, the convolution of functions is mapped by Fourier transform into piecewise multiplication.\n That means that the properties of linear time invariant systems and their combinations are much better described and manipulated after Fourier transformation.\n As a result, things like &#34;frequency response&#34; are quite characteristic for describing the behavior of a lot of systems and become useful for characterizing them.\n Fast Fourier transforms are in the &#34;almost, but not quite, entirely unlike Fourier transforms&#34; class as their results are not really sensibly interpretable as Fourier transforms though firmly routed in their theory. They correspond to Fourier transforms completely only when talking about a sampled signal with the periodicity of the transform interval. In particular the &#34;periodicity&#34; criterion is almost always not met.\n There are several techniques for working around that, like the use of overlapping windowing functions.\n However the FFT  can be employed for doing discrete-time convolution when doing things right, and is it is an efficient algorithm, that makes it useful for a lot of things.\n One can employ the basic FFT algorithm also for number theoretic transforms (which work in discrete number fields rather than complex &#34;reals&#34;) in order to do fast convolution, like when multiplying humongous numbers or polynomials. In this case, the &#34;frequency domain&#34; is indistinguishable from white noise for basically any input and has no useful interpretation before you do t\n......", "posttime": "2020-06-26 05:17:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5085\u7acb\u53f6,transform,\u53d8\u6362", "title": "\u4e3a\u4ec0\u4e48\u5085\u7acb\u53f6\u53d8\u6362\u5982\u6b64\u91cd\u8981\uff1f", "title_en": "Why is the Fourier transform so important?", "transed": 1, "url": "https://dsp.stackexchange.com/questions/69/why-is-the-fourier-transform-so-important", "via": "", "real_tags": ["\u5085\u7acb\u53f6", "transform", "\u53d8\u6362"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008284, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u4e8e\u672c\u9875\u9762\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u6765\u81ea\u60a8\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u5f02\u5e38\u6d41\u91cf\u3002\u8be5\u9875\u9762\u68c0\u67e5\u662f\u5426\u771f\u7684\u662f\u60a8\u53d1\u9001\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u662f\u673a\u5668\u4eba\u3002\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u4e8b\uff1f\u5f53Google\u81ea\u52a8\u68c0\u6d4b\u5230\u6765\u81ea\u60a8\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u8bf7\u6c42\u4f3c\u4e4e\u8fdd\u53cd\u4e86\u670d\u52a1\u6761\u6b3e\u65f6\uff0c\u4f1a\u51fa\u73b0\u6b64\u9875\u9762\u3002\u8be5\u5757\u5c06\u5728\u8fd9\u4e9b\u8bf7\u6c42\u505c\u6b62\u540e\u4e0d\u4e45\u8fc7\u671f\u3002\u5728\u6b64\u671f\u95f4\uff0c\u89e3\u51b3\u4e0a\u8ff0\u9a8c\u8bc1\u7801\u5c06\u8ba9\u60a8\u7ee7\u7eed\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u3002\u6b64\u901a\u4fe1\u91cf\u53ef\u80fd\u662f\u7531\u6076\u610f\u8f6f\u4ef6\u3001\u6d4f\u89c8\u5668\u63d2\u4ef6\u6216\u53d1\u9001\u81ea\u52a8\u8bf7\u6c42\u7684\u811a\u672c\u53d1\u9001\u7684\u3002\u5982\u679c\u60a8\u5171\u4eab\u7f51\u7edc\u8fde\u63a5\uff0c\u8bf7\u5411\u60a8\u7684\u7ba1\u7406\u5458\u5bfb\u6c42\u5e2e\u52a9-\u4f7f\u7528\u76f8\u540cIP\u5730\u5740\u7684\u4e0d\u540c\u8ba1\u7b97\u673a\u53ef\u80fd\u4f1a\u8d1f\u8d23\u3002\u4e86\u89e3\u66f4\u591a\u6709\u65f6\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5df2\u77e5\u673a\u5668\u4eba\u4f7f\u7528\u7684\u9ad8\u7ea7\u672f\u8bed\uff0c\u6216\u8005\u53d1\u9001\u8bf7\u6c42\u975e\u5e38\u8fc5\u901f\uff0c\u5219\u53ef\u80fd\u4f1a\u8981\u6c42\u60a8\u89e3\u51b3\u9a8c\u8bc1\u7801\u95ee\u9898\u3002\nIP\u5730\u5740\uff1a207.46.138.74\u65f6\u95f4\uff1a2020-06-25T21\uff1a16\uff1a46Z\u7f51\u5740\uff1ahttps://www.youtube.com/watch?v=DMUofMagmfc", "note_en": "About this page  Our systems have detected unusual traffic from your computer network. This page checks to see if it&#39;s really you sending the requests, and not a robot.  Why did this happen?   This page appears when Google automatically detects requests coming from your computer network which appear to be in violation of the  Terms of Service. The block will expire shortly after those requests stop. In the meantime, solving the above CAPTCHA will let you continue to use our services.  This traffic may have been sent by malicious software, a browser plug-in, or a script that sends automated requests. If you share your network connection, ask your administrator for help \u2014 a different computer using the same IP address may be responsible.  Learn more  Sometimes you may be asked to solve the CAPTCHA if you are using advanced terms that robots are known to use, or sending requests very quickly.\nIP address: 207.46.138.74 Time: 2020-06-25T21:16:46Z URL: https://www.youtube.com/watch?v=DMUofMagmfc", "posttime": "2020-06-26 05:16:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,raspberry-pi,\u82f9\u679c,arm64,silicon", "title": "\u82f9\u679c\u7845\u5bf9\u6811\u8393PI\u548cARM64\u610f\u5473\u7740\u4ec0\u4e48\uff1f", "title_en": "What Does Apple Silicon Mean for the Raspberry Pi and ARM64?", "transed": 1, "url": "https://www.youtube.com/watch?v=DMUofMagmfc", "via": "", "real_tags": ["apple", "\u82f9\u679c", "arm64", "silicon"]}, {"category": "", "categoryclass": "", "imagename": "7f878e88be3e79edc274b0ed33fbfcb2.jpg", "infoid": 1008282, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u7ef4\u73cd\u822a\u7a7a\u4e0eUnity\u5728\u65b0\u58a8\u897f\u54e5\u5dde\u7684Spaceport America\u53d1\u5c04\u8bbe\u65bd\u8fdb\u884c\u7684\u7b2c\u4e8c\u6b21\u8fd9\u6837\u7684\u8bd5\u98de\uff0c\u4f46\u4e0e\u4e4b\u524d\u7684\u98de\u884c\u76f8\u6bd4\uff0c\u8fd9\u6b21\u98de\u884c\u662f\u5728\u66f4\u9ad8\u7684\u9ad8\u5ea6\u548c\u66f4\u9ad8\u7684\u901f\u5ea6\u8fdb\u884c\u7684\u3002\u8fd9\u4f7f\u5f97\u7ef4\u73cd\u73b0\u5728\u53ef\u4ee5\u4ece\u7f8e\u56fd\u822a\u5929\u6e2f\u8f6c\u79fb\u5230\u52a8\u529b\u592a\u7a7a\u98de\u884c-\u8fd9\u662f\u5b83\u5728\u8be5\u8bbe\u65bd\u7684\u7b2c\u4e00\u6b21\uff0c\u5c3d\u7ba1Unity\u672c\u8eab\u4e4b\u524d\u4e5f\u66fe\u4ee5\u6d4b\u8bd5\u80fd\u529b\u98de\u884c\uff0c\u57282018\u5e74\u4ee5\u8d85\u97f3\u901f\u5230\u8fbe\u5730\u7403\u4e0a\u7a7a41.4\u82f1\u91cc\u7684\u9ad8\u5ea6\uff0c\u8fdb\u884c\u4e86\u6700\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6f14\u793a\u3002\n\u7ef4\u73cd\u94f6\u6cb3\u4e8e2018\u5e74\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u83ab\u54c8\u97e6\u822a\u7a7a\u822a\u5929\u6e2f\u6062\u590d\u4e86\u52a8\u529b\u822a\u5929\u6d4b\u8bd5-\u56db\u5e74\u524d\uff0c\u8be5\u516c\u53f8\u5728\u6d4b\u8bd5Unity\u7684\u524d\u8eabVSS Enterprise\u65f6\u53d1\u751f\u4e86\u81f4\u547d\u7684\u5760\u673a\u4e8b\u4ef6\u3002\u7ef4\u73cd\u822a\u7a7a\u90a3\u6b21\u822a\u73ed\u7684\u526f\u9a7e\u9a76\u8fc8\u514b\u5c14\u00b7\u963f\u5c14\u65af\u4f2f\u91cc(Michael Alsbury)\u5728\u90a3\u6b21\u4e8b\u4ef6\u4e2d\u4e0d\u5e78\u9047\u96be\uff0c\u98de\u884c\u5458\u5f7c\u5f97\u00b7\u897f\u535a\u5c14\u5fb7(Peter Siebold)\u53d7\u4e86\u91cd\u4f24\u3002\nUnity\u6ca1\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u4eca\u5929\u7684\u65e0\u52a8\u529b\u6ed1\u7fd4\u98de\u884c\u4f3c\u4e4e\u5b8c\u5168\u6309\u7167\u8ba1\u5212\u8fdb\u884c\uff0c\u4e3a\u7ef4\u73cd\u63d0\u4f9b\u4e86\u6765\u81ea\u65b0\u58a8\u897f\u54e5\u53d1\u5c04\u573a\u7684\u98de\u884c\u6761\u4ef6\u548c\u98de\u673a/\u822a\u5929\u5668\u884c\u4e3a\u7684\u5173\u952e\u6570\u636e\uff0c\u8be5\u53d1\u5c04\u573a\u6700\u7ec8\u4e5f\u5c06\u670d\u52a1\u4e8e\u7ef4\u73cd\u94f6\u6cb3\u7684\u4ed8\u8d39\u5ba2\u6237\uff0c\u4f5c\u4e3a\u4ed6\u4eec\u524d\u5f80\u592a\u7a7a\u8fb9\u7f18\u7684\u65c5\u6e38\u65c5\u884c\u7684\u51fa\u53d1\u548c\u8fd4\u56de\u5730\u70b9\u3002\n\u8be5\u516c\u53f8\u7684\u4e0b\u4e00\u4e2a\u91cd\u8981\u6b65\u9aa4\u662f\u5728\u7f8e\u56fd\u592a\u7a7a\u6e2f\u8fdb\u884c\u52a8\u529b\u8bd5\u98de\uff0c\u56e0\u4e3a\u5b83\u6b63\u671d\u7740\u771f\u6b63\u8ba9\u8fd9\u4e9b\u95e8\u7968\u6301\u6709\u8005\u53c2\u52a0\u592a\u7a7a\u4e4b\u65c5\u7684\u65b9\u5411\u8fc8\u8fdb\u3002\u5982\u524d\u6240\u8ff0\uff0cUnity\u4e4b\u524d\u66fe\u8fdb\u884c\u8fc7\u52a8\u529b\u8bd5\u98de\uff0c\u5305\u62ec\u7ef4\u73cd\u822a\u7a7a\u7684\u9996\u5e2d\u5b87\u822a\u5458\u6559\u7ec3\u8d1d\u4e1d\u00b7\u6469\u897f\u5728\u98de\u673a\u4e0a\uff0c\u4f46\u4ecd\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u4e2d\u95f4\u6b65\u9aa4\u624d\u80fd\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u5305\u62ec\u5ba1\u67e5\u4eca\u5929\u98de\u884c\u671f\u95f4\u6536\u96c6\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u5bf9\u53d1\u5c04\u548c\u98de\u884c\u7cfb\u7edf\u8fdb\u884c\u4efb\u4f55\u53ef\u80fd\u9700\u8981\u7684\u5c0f\u6539\u52a8\uff0c\u4ee5\u786e\u4fdd\u52a8\u529b\u822a\u5929\u7684\u6210\u529f\u3002\n\u7ef4\u73cd\u822a\u7a7a\u4e00\u76f4\u5728\u5bfb\u6c42\u6700\u65e9\u5728\u4eca\u5e74\u5e74\u4e2d\u5f00\u59cb\u5546\u4e1a\u98de\u884c\uff0c\u4f46\u8003\u8651\u5230\u5b83\u4ecd\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u6d4b\u8bd5\u9700\u8981\u5b8c\u6210\uff0c\u65f6\u95f4\u8868\u770b\u8d77\u6765\u66f4\u50cf\u662f\u4eca\u5e74\u5e74\u5e95\uff0c\u8fd9\u662f\u4efb\u4f55\u5b9e\u9645\u65c5\u6e38\u63a8\u51fa\u7684\u6700\u4f73\u60c5\u51b5\u3002", "note_en": "This flight was the second such test flight that Virgin has flown with Unity from its Spaceport America launch facility in New Mexico, but it was done at higher altitudes and at higher speeds than the earlier flight. This sets up Virgin to now move on to powered spaceflight from Spaceport America \u2013 its first at the facility, though Unity itself has flown previously in a test capacity, reaching a heigh of 41.4 miles above Earth at supersonic speeds back in 2018 for its most impressive demonstration.\n Virgin Galactic returned to powered spaceflight testing at the Mojave Air and  Space   Port in California in 2018 \u2013 four years after it had a fatal crash during testing of Unity\u2019s predecessor, VSS Enterprise. Virgin\u2019s co-pilot for that flight, Michael Alsbury, was tragically killed in that incident, and pilot Peter Siebold suffered serious injuries.\n  Unity has had no such issues, and today\u2019s unpowered glide flight seems to have gone perfectly to plan, providing Virgin with key data about flight conditions and aircraft/spacecraft behaviour from the New Mexico launch site, which will ultimately also serve Virgin Galactic\u2019s paying customers as the departure and return location for their tourist trips to the edge of space.\n The next major step for the company as it moves towards actually getting those ticket-holders on their space tours is performing powered test flights from Spaceport America. As mentioned, Unity has done powered test flights previously, including with Virgin\u2019s Chief Astronaut Trainer Beth Moses on board, but there are still a number of intermediary steps that need to take place to get there, including reviewing the data collected during today\u2019s flight, and making any small changes to the launch and flight system that may be required to ensure the success of a powered spaceflight.\n Virgin had been looking to begin commercial flights as early as the middle of this year, but given that it still has some significant testing to complete, the timeline looks more like end of year as a best-case scenario for any actual tourist launches.", "posttime": "2020-06-26 04:57:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u592a\u7a7a,\u52a8\u529b,galactic,\u98de\u884c", "title": "\n\u7ef4\u73cd\u94f6\u6cb3\u5728\u65b0\u58a8\u897f\u54e5\u5dde\u592a\u7a7a\u6e2f\u8fdb\u884c\u7b2c\u4e8c\u6b21\u592a\u7a7a\u8239\u4e8c\u53f7\u6d4b\u8bd5\uff0c\u4e3a\u52a8\u529b\u822a\u5929\u626b\u6e05\u9053\u8def", "title_en": "\n\t\t\t\tVirgin Galactic flies second SpaceShipTwo test at New Mexico spaceport, clearing the way for powered spaceflight\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/06/25/virgin-galactic-flies-second-spaceshiptwo-test-at-new-mexico-spaceport-clearing-the-way-for-powered-spaceflight/", "via": "", "real_tags": ["\u592a\u7a7a", "\u52a8\u529b", "galactic", "\u98de\u884c"]}, {"category": "", "categoryclass": "", "imagename": "c39fa3b8fb99e4caa79c2656761ca6e3.jpeg", "infoid": 1008281, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5236\u4f5c\u7535\u5b50\u8868\u683c\u7684\u4eba\uff0c\u5236\u4f5c\u5929\u6c14\u5e94\u7528\u7a0b\u5e8f\u7684\u4eba\uff0c\u53ea\u60f3\u521b\u5efa\u5bb6\u8c31\u7f51\u7ad9\u7684\u4eba\uff0c\u4ed6\u4eec\u90fd\u88ab\u4e70\u65ad\u4e86\uff0c\u90fd\u88ab\u98a0\u8986\u4e86\uff0c\u6b63\u5728\u88ab\u8150\u8d25\u3002\u201d", "note_en": "\"People who make spreadsheets, people who make weather apps, people who just wanted to create family tree websites, all of them are being bought out, are being subverted, are being corrupted.\"", "posttime": "2020-06-26 04:34:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5de5\u4f5c\u8005,tech", "title": "\u65af\u8bfa\u767b\uff1a\u79d1\u6280\u5de5\u4f5c\u8005\u662f\u4ed6\u4eec\u7684\u516c\u53f8\u4f24\u5bb3\u793e\u4f1a\u7684\u540c\u8c0b", "title_en": "Snowden: Tech Workers Are Complicit in How Their Companies Hurt Society", "transed": 1, "url": "https://www.vice.com/en_ca/article/wxqx8q/snowden-tech-workers-are-complicit-in-how-their-companies-hurt-society", "via": "", "real_tags": ["\u5de5\u4f5c\u8005", "tech"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008279, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u53d1\u4e00\u4e2a\u53ef\u7528\u7684\u8f6f\u4ef6\u662f\u5f88\u56f0\u96be\u7684\u3002\u5c31\u50cf\u5236\u9020\u98de\u673a\u4e00\u6837\uff0c\u5b83\u9700\u8981\u6709\u624d\u534e\u7684\u4eba\u3001\u5de5\u4f5c\u90e8\u4ef6\u548c\u6d4b\u8bd5\u6846\u67b6\u3002\u5728\u4e00\u5207\u51c6\u5907\u5c31\u7eea\u3001\u68c0\u67e5\u548c\u590d\u6838\u4e4b\u524d\uff0c\u4efb\u4f55\u98de\u673a\u90fd\u4e0d\u80fd\u79bb\u5f00\u673a\u5e93\u3002\n\u5728JetBrains\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u76f8\u540c\u7684\u7406\u5ff5\u6765\u6784\u5efa\u6211\u4eec\u7684\u8f6f\u4ef6\u3002\u4e25\u683c\u7684\u6d4b\u8bd5\u5e2e\u52a9\u6211\u4eec\u5728\u6700\u7ec8\u4ea7\u54c1\u8d77\u98de\u4e4b\u524d\u53d1\u73b0\u9519\u8bef\u548c\u95ee\u9898\u3002\u5c31\u50cf\u9020\u98de\u673a\u4e00\u6837\uff0c\u8f6f\u4ef6\u5f00\u53d1\u662f\u4e00\u4e2a\u7531\u591a\u4e2a\u9636\u6bb5\u7ec4\u6210\u7684\u8fc7\u7a0b\u3002\u867d\u7136\u8fd9\u7bc7\u6587\u7ae0\u7684\u4f5c\u8005\u4e0d\u662f\u822a\u7a7a\u822a\u5929\u5de5\u7a0b\u5e08\uff0c\u4f46\u6211\u4eec\u5c06\u4f7f\u7528\u7b80\u5316\u7684\u98de\u673a\u7c7b\u6bd4\u3002\u8fd9\u6709\u51e0\u4e2a\u539f\u56e0\uff1a\u98de\u673a\u5f88\u6f02\u4eae\uff0c\u5b83\u662f\u7eaf\u7cb9\u7684\u5de5\u7a0b\uff0c\u5b83\u63ed\u793a\u4e86\u6211\u4eec\u5728\u8fd9\u91cc\u63d0\u51fa\u7684\u95ee\u9898\u5e76\u4e0d\u662f\u8f6f\u4ef6\u5de5\u7a0b\u6240\u72ec\u6709\u7684\u3002\n\u4ea7\u54c1\u8d8a\u5927\uff0c\u6b65\u9aa4\u548c\u6a21\u5757\u5c31\u8d8a\u591a\u3002\u8981\u786e\u4fdd\u60a8\u7684\u8f6f\u4ef6\u5df2\u51c6\u5907\u5c31\u7eea\uff0c\u9700\u8981\u6d4b\u8bd5\u6bcf\u4e2a\u6a21\u5757\uff0c\u5e76\u5c06\u5176\u4e0e\u5176\u4ed6\u6240\u6709\u6a21\u5757\u6b63\u786e\u96c6\u6210\u3002\u5982\u679c\u8bbe\u7f6e\u6b63\u786e\uff0cCI/CD\u670d\u52a1\u6709\u52a9\u4e8e\u81ea\u52a8\u6267\u884c\u6b64\u8fc7\u7a0b\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4eec\u6d88\u9664\u4e86\u4ee5\u4e00\u6b21\u7c97\u5fc3\u5927\u610f\u7684\u884c\u4e3a\u53ef\u80fd\u5bfc\u81f4\u5168\u9762\u707e\u96be\u800c\u95fb\u540d\u7684\u4eba\u4e3a\u56e0\u7d20\u3002\n\u4e0e\u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u7684\u76f8\u53cd\uff0c\u6d4b\u8bd5\u5728\u524d\u7aef\u5f00\u53d1\u4e2d\u975e\u5e38\u91cd\u8981\u3002\u7ee7\u7eed\u8fd9\u4e2a\u7c7b\u6bd4\uff0c\u4f60\u7684\u98de\u673a\u4e0d\u4ec5\u9700\u8981\u98de\u884c-\u5b83\u8fd8\u5fc5\u987b\u8212\u9002\u5730\u5750\u5728\u91cc\u9762\uff01\u6b64\u5916\uff0c\u5b83\u7684\u5916\u90e8\u5f71\u54cd\u98de\u673a\u7684\u98de\u884c(\u7a7a\u6c14\u52a8\u529b\u5b66)\u3002\u56de\u5230\u524d\u7aef\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5fc5\u987b\u6d4b\u8bd5\u53ef\u7528\u6027\u548c\u529f\u80fd\u6027\u3002\u8fd9\u4f7f\u5f97\u524d\u7aef\u6d4b\u8bd5\u6210\u4e3a\u5fc5\u987b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u6982\u8ff0TeamCity\u4e2d\u4f7f\u7528\u7684UI\u6d4b\u8bd5\u3002\u5982\u679c\u60a8\u5bf9\u6280\u672f\u7ec6\u8282\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u5c3d\u7ba1\u95ee\u6211\u4eec\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u6bcf\u4e2a\u90e8\u5206\u90fd\u5305\u542b\u5230\u6709\u7528\u8d44\u6e90\u7684\u94fe\u63a5\u3002\u5176\u4e2d\u4e00\u4e9b\u5bfc\u81f4\u516c\u5171TeamCity\u914d\u7f6e\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u68c0\u67e5\u6211\u4eec\u5982\u4f55\u6d4b\u8bd5\u524d\u7aef\u3002\u8bf7\u968f\u65f6\u4ee5\u5ba2\u4eba\u8eab\u4efd\u7b7e\u5230\u5e76\u56db\u5904\u770b\u770b\u3002\nUI\u6d4b\u8bd5\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684\u3002\u6709\u5c4f\u5e55\u622a\u56fe\u3001\u884c\u4e3a\u3001\u53ef\u8bbf\u95ee\u6027\u3001\u6027\u80fd\u3001\u5b89\u5168\u6027\u548c\u611f\u77e5\u6d4b\u8bd5\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002\n\u8ba9\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u5bf9\u95ee\u9898\u7684\u62e6\u622a\u3002\u5728JetBrains\u4e2d\uff0c\u5b83\u5728\u591a\u4e2a\u7ea7\u522b\u4e0a\u5de5\u4f5c\uff0c\u5e76\u4e14\u5927\u591a\u6570\u90fd\u662f\u57fa\u4e8eCI/CD\u7684\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u3001\u6bcf\u4e2a\u90e8\u95e8\u3001\u6bcf\u4e2a\u7ea7\u522b\u90fd\u53c2\u4e0e\u4e86\u53d1\u73b0\u548c\u62a5\u544a\u95ee\u9898\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\u4ee5\u4e0b\u56fe\u8868\u663e\u793a\u4e86\u6240\u6709\u8fd9\u4e9b\u90e8\u5206\uff1a\n\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u4f1a\u5904\u7406\u4e00\u4e9b\u95ee\u9898\u7c7b\u522b\u3002\u6700\u540e\uff0c\u5b83\u5e2e\u52a9\u6211\u4eec\u7f13\u89e3\u95ee\u9898\u3002\n\u4f8b\u5982\uff0c\u6211\u4eec\u6355\u83b7\u7684\u5927\u91cfUI\u95ee\u9898\u5c5e\u4e8e\u5c4f\u5e55\u622a\u56fe\u6d4b\u8bd5\u9636\u6bb5\u3002\u5c5e\u4e8eLinters/Unit/Render\u6d4b\u8bd5\u7684\u95ee\u9898\u8f83\u5c11\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e9b\u6d4b\u8bd5\u6beb\u65e0\u610f\u4e49\u3002\u76f8\u53cd\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u6211\u4eec\u5728\u8fd9\u4e9b\u9886\u57df\u7684\u5de5\u4f5c\u505a\u5f97\u8db3\u591f\u597d\uff0c\u53ef\u4ee5\u9632\u6b62\u5927\u91cf\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u60f3\u5728\u6b64\u63d0\u51fa\u7684\u91cd\u70b9\u662f\uff1a\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff0c\u8d28\u7d20\u4fdd\u8bc1\u90e8\u95e8\u53ea\u9762\u5bf9\u4e09\u5206\u4e4b\u4e00\u7684\u95ee\u9898\u3002\u8fd9\u610f\u5473\u7740\u901a\u8fc7\u4f7f\u7528CI/CD\uff0c\u60a8\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7684\u540c\u4e8b\u8282\u7701\u68c0\u67e5\u6613\u4e8e\u9884\u6d4b\u7684\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u800c\u8fd9\u4e9b\u95ee\u9898\u53ef\u80fd\u4f1a\u88ab\u7ec4\u7ec7\u826f\u597d\u7684\u6d4b\u8bd5\u7cfb\u7edf\u6355\u83b7\u3002\n\u8be5\u56fe\u8868\u5e76\u4e0d\u662f100%\u6709\u4ee3\u8868\u6027\uff0c\u6bcf\u4e2a\u7248\u672c\u7684\u6570\u5b57\u90fd\u662f\u6d6e\u52a8\u7684\uff1a\u67d0\u4e9b\u7ea7\u522b\u53ef\u4ee5\u6d88\u9664\u6bd4\u5176\u4ed6\u7ea7\u522b\u66f4\u591a\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u5b83\u8868\u660e\u6d4b\u8bd5\u7cfb\u7edf\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5373\u4f7f\u5355\u72ec\u7684\u6d4b\u8bd5\u53ea\u6db5\u76d6\u4e00\u4e2a\u6848\u4f8b\u3002\u5728\u8fd9\u91cc\uff0c\u6570\u91cf\u4e0d\u7b49\u4e8e\u8d28\u91cf\uff1a\u6d4b\u8bd5\u53ef\u4ee5\u201c\u53ea\u201d\u627e\u5230\u4e00\u4e2abug\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u6ce8\u610f\uff0c\u8fd9\u4e2abug\u53ef\u80fd\u4f1a\u4f7f\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u5e94\u8be5\u8bf4\u4ee3\u7801\u5e94\u8be5\u662f\u5e72\u51c0\u548c\u4e00\u81f4\u7684\uff0c\u4f46\u8fd9\u662f\u6709\u95ee\u9898\u7684\u3002\u6bcf\u4e2a\u4eba\u5bf9\u5e72\u51c0\u4ee3\u7801\u90fd\u6709\u81ea\u5df1\u7684\u7406\u89e3\u3002\u5728JetBrains\u4e2d\uff0c\u6211\u4eec\u540c\u610f\u4e86200\u591a\u6761\u89c4\u5219\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u4ee3\u7801\u5ba2\u89c2\u4e0a\u4fdd\u6301\u5e72\u51c0\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u6797\u7279\u68c0\u6d4b\u5230\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u6536\u5230\u6765\u81eaIntelliJ Idea\u7684\u8b66\u544a\u3002\u63d0\u5230\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u7c7b\u578b\u811a\u672c\u3001\u6d41\u3001kotlin\u6216\u539f\u56e0\u7684\u9759\u6001\u7c7b\u578b\uff0c\u8fd9\u5e76\u4e0d\u662f\u591a\u4f59\u7684\u3002\u6211\u4eec\uff0cTeamCity\u56e2\u961f\uff0c\u5df2\u7ecf\u51b3\u5b9a\u4f7f\u7528Flow\u3002\u6211\u4eec\u7528\u6765\u6784\u5efa\u524d\u7aef\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u4e4b\u4e00\u5c31\u662feslint/style int\u68c0\u67e5\u3002\u5b83\u7684\u76ee\u7684\u4e0d\u4ec5\u662f\u67e5\u627e\u4ee3\u7801\u6837\u5f0f\u95ee\u9898\uff0c\u8fd8\u5305\u62ec\u9057\u6f0f\u53d8\u91cf\u3001\u5bfc\u5165\u6216\u975e\u5ec9\u4ef7/\u5b89\u5168\u64cd\u4f5c(\u5982\u6ca1\u6709\u4f9d\u8d56\u9879\u7684Reaction Hooks)\u7684\u95ee\u9898\u3002\n\u5f53\u7136\uff0c\u4e5f\u6709\u5355\u5143\u6d4b\u8bd5\u3002\u8fd9\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u7f16\u5199\u7eaf\u539f\u5b50\u51fd\u6570\uff0c\u7136\u540e\u65ad\u8a00\u5b83\u4eec\u7684\u8f93\u51fa\u3002\u5982\u679c\u8f93\u51fa\u6b63\u5e38\uff0cTeamCity\u4f1a\u5c06\u5176\u6807\u8bb0\u4e3a\u7eff\u8272\uff0c\u5e76\u5141\u8bb8\u7ba1\u9053\u7ee7\u7eed\u8fd0\u884c\u3002\n\u8de8\u591a\u4e2a\u8bbe\u5907\u548c\u5e73\u53f0\u663e\u793a\u4e00\u81f4\u7684UI\u662f\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u3002\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6b63\u786e\u663e\u793a\u6240\u6709\u7ec4\u4ef6\uff0c\u800c\u4e0d\u7ba1\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u3001\u5e03\u5c40\u6216\u89c6\u53e3\u5927\u5c0f\u5982\u4f55\u3002\u8fd9\u610f\u5473\u7740\u8981\u6d4b\u8bd5\u7ec4\u4ef6\u5728\u4e0d\u540c\u914d\u7f6e\u4e2d\u7684\u53ef\u89c6\u5448\u73b0\u65b9\u5f0f\u3002\u5c4f\u5e55\u622a\u56fe\u6d4b\u8bd5\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\n\u5728\u5176\u4e2d\u4e00\u4e2a\u66f4\u65b0\u4e4b\u540e\uff0c\u8bc4\u8bba\u90e8\u5206\u5df2\u6dfb\u52a0\u5230\u672a\u7ecf\u6388\u6743\u7684\u4ee3\u7406\u3002\u90a3\u633a\u597d\u7684\u3002\u4f46\u662f\u60f3\u8c61\u4e00\u4e0b\uff0c\u8fd9\u79cd\u6d4b\u8bd5\u53ef\u4ee5\u63ed\u793a\u5143\u7d20\u7684\u6d88\u5931\u3002\u8fd9\u79cd\u60c5\u51b5\u65f6\u6709\u53d1\u751f\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u9879\u6d4b\u8bd5\u975e\u5e38\u6709\u7528\u3002\u867d\u7136\uff0c\u5feb\u7167\u6d4b\u8bd5\uff0c\u60a8\u5f88\u5feb\u5c31\u4f1a\u719f\u6089\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\u4f7f\u7528WebDriver API\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff1b\u6b64API\u5141\u8bb8\u6211\u4eec\u4ee5\u81ea\u52a8\u6a21\u5f0f\u4e0e\u7f51\u7ad9\u4ea4\u4e92-\u800c\u65e0\u9700\u771f\u6b63\u7684\u7528\u6237\u3002\nYandex\u7684\u5b9e\u7528\u5de5\u5177Hermione\u4f7f\u7528WebDriver\u8fde\u63a5\u5230Storybook\uff0c\u5e76\u5728\u6bcf\u4e2a\u6d4f\u89c8\u5668\u4e2d\u62cd\u6444\u9009\u5b9a\u533a\u57df\u7684\u591a\u4e2a\u5c4f\u5e55\u622a\u56fe\u3002\n\u8fd9\u4e9b\u622a\u56fe\u968f\u540e\u88ab\u653e\u5165\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8d6b\u654f\u5728\u90a3\u91cc\u5c06\u5b83\u4eec\u4e0e\u4f7f\u7528Mocha\u7684\u9ed8\u8ba4\u622a\u56fe\u8fdb\u884c\u6bd4\u8f83\u3002\n\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u6700\u5c0f\u5316\u4e0d\u5fc5\u8981\u7684\u6e32\u67d3\u91cf\u6765\u63d0\u9ad8\u754c\u9762\u7684\u6027\u80fd\u3002\u4e00\u822c\u6765\u8bf4\uff0cReaction\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e9b\u60c5\u51b5\u60a8\u5e94\u8be5\u8bb0\u4f4f\uff1a\u5982\u679c\u60a8\u66f4\u6539\u4e86\u7ec4\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5185\u5bb9\uff0cReaction\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7ec4\u4ef6\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u539f\u59cb\u7ec4\u4ef6\u3002\n\u5047\u8bbe\u60a8\u5c06\u65b0\u9053\u5177\u4f20\u9012\u5230\u4e00\u4e2a\u7ec4\u4ef6\u4e2d\u3002\u4e3a\u4e86\u4fdd\u5b58\u91cd\u65b0\u6e32\u67d3\u6240\u9700\u7684\u8d44\u6e90\uff0cReaction\u4f1a\u68c0\u67e5\u4f20\u9012\u7684\u9053\u5177\u662f\u5426\u4e0e\u4ee5\u524d\u7684\u7248\u672c\u4e0d\u540c\u3002\u5982\u679c\u5b83\u4eec\u76f8\u540c\uff0c\u5219\u4e0d\u4f1a\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5fd8\u8bb0\u4e86\uff0c\u5728JavaScript\u4e2d\uff0c\u5177\u6709\u76f8\u540c\u5185\u5bb9\u7684\u4e24\u4e2a\u6570\u7ec4\u6216\u5bf9\u8c61\u662f\u4e0d\u540c\u7684\u5b9e\u4f53(\u56e0\u4e3a\u8fd9\u4e9b\u5bf9\u8c61/\u6570\u7ec4\u5c06\u5177\u6709\u4e0d\u540c\u7684\u5f15\u7528)\u3002\u7ed3\u679c\uff0c\u6211\u4eec\u6700\u7ec8\u4e0d\u5fc5\u8981\u5730\u5448\u73b0\u76f8\u7b49\u7684\u7ec4\u4ef6\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528Reaction\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u542f\u7528Reaction\u66f4\u65b0\u7a81\u51fa\u663e\u793a\u3002\u8fd9\u5c06\u663e\u793a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u91cd\u65b0\u6e32\u67d3\u3002\u4f8b\u5982\uff0c\u6709\u4e00\u4e9b\u91cd\u65b0\u6e32\u67d3\u5668\uff0c\u5b83\u4eec\u5728\u5149\u6807\u79fb\u52a8\u5230Trends Page\u5b50\u7ec4\u4ef6\u4e0a\u65f6\u53d1\u751f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6240\u6709\u8fd9\u4e9b\u91cd\u73b0\u7684\u4eba\u90fd\u662f\u5728\u8fd9\u91cc\u3002\u4f46\u60f3\u8c61\u4e00\u4e0b\uff0c\u6dfb\u52a0\u5230\u8fd9\u4e9b\u91cd\u65b0\u6e32\u67d3\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f1a\u591a\u6fc0\u53d1100\u4e2a\u5462\uff1f\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5371\u9669\u4e86\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u51b3\u5b9a\u4f7f\u7528\u201c\u4e3a\u4ec0\u4e48\u8981\u6e32\u67d3\u201d\u6765\u68c0\u67e5\u5197\u4f59\u6e32\u67d3\u3002\u4ee4\u6211\u4eec\u60ca\u8bb6\u7684\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u591a\u4e2a\u6548\u7387\u4f4e\u4e0b\u7684\u60c5\u51b5\u3002\u6211\u4eec\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff1a\n\u5982\u679c\u6211\u4eec\u66f4\u6539\u4e86\u5b58\u50a8\u533a\u4e2d\u7684\u67d0\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u5c06\u4f7f\u6240\u6709\u7ec4\u4ef6(\u8ba2\u9605\u6b64\u5b58\u50a8\u533a)\u518d\u6b21\u6536\u96c6\u6570\u636e\u3002\u4f7f\u7528mapStateToProps\u56de\u8c03\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u6536\u96c6\u5b8c\u6570\u636e\u540e\uff0c\u6211\u4eec\u5c06\u5176\u4f20\u9012\u7ed9\u7ec4\u4ef6\uff0c\u5e76\u542f\u52a8\u6bd4\u8f83\u529f\u80fd\u6765\u68c0\u67e5\u9053\u5177\u662f\u5426\u5df2\u66f4\u6539\u3002\n\u540c\u65f6\uff0c\u6211\u4eec\u77e5\u9053\u865a\u62df\u64cd\u4f5c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u66f4\u6539\u5b58\u50a8\u4e2d\u7684\u4efb\u4f55\u503c\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u5e94\u8be5\u5411\u7ec4\u4ef6\u4f20\u9012\u4efb\u4f55\u65b0\u7684\u9053\u5177\u3002\n\u5982\u679c\u65b0\u7684\u9053\u5177\u5bfc\u81f4\u7ec4\u4ef6\u91cd\u65b0\u5448\u73b0\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5728\u4e0d\u5e94\u8be5\u521b\u5efa\u65b0\u5bf9\u8c61/\u6570\u7ec4\u7684\u5730\u65b9\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u5bf9\u8c61/\u6570\u7ec4\u3002\u592a\u9057\u61be\u4e86!\u3002\n\u4f7f\u7528\u91cd\u65b0\u9009\u53d6\u5e93\uff0c\u5982\u679c\u751f\u6210\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c\u5219\u53ef\u4ee5\u5bf9\u7ed3\u679c\u8fdb\u884c\u8bb0\u5fc6\u3002\u5982\u679c\u4f20\u9012\u7684\u53c2\u6570\u4e0e\u524d\u9762\u7684\u53c2\u6570\u76f8\u7b49\uff0c\u6211\u4eec\u5c06\u63a5\u6536\u7684\u4e0d\u662f\u65b0\u5bf9\u8c61\uff0c\u800c\u662f\u5bf9\u65e7\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u4e0d\u4f1a\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u51bb\u7ed3\u5bf9\u8c61\u6216\u6570\u7ec4\u6765\u5c06\u5176\u9884\u5b9a\u4e49\u4e3a\u4e0d\u53ef\u53d8\u7684\u3002\u4e0b\u4e00\u6b21\uff0c\u6bcf\u5f53\u60a8\u60f3\u8981\u8fd4\u56de\u56de\u9000\u503c\u65f6\uff0c\u90fd\u5e94\u8be5\u8fd4\u56de\u8fd9\u4e2a\u4e0d\u53ef\u53d8\u7684\u5bf9\u8c61\u3002\u5b83\u4fdd\u8bc1\u5bf9\u6b64\u5bf9\u8c61\u7684\u5f15\u7528\u59cb\u7ec8\u76f8\u540c\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91cd\u65b0\u5448\u73b0\u8be5\u7ec4\u4ef6\u3002\n\u5feb\u7167\u6d4b\u8bd5\u9a8c\u8bc1\u5bf9\u91cd\u8981\u7ec4\u4ef6\u7684\u7ed3\u6784\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u662f\u6709\u610f\u7684\u3002\u518d\u4e00\u6b21\uff0c\u8ba9\u6211\u4eec\u56de\u5230\u6211\u4eec\u7684\u98de\u673a\u7c7b\u6bd4\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u67b6\u98de\u673a\u7684\u7ed3\u6784\u5feb\u7167\uff1a\u5b83\u5e94\u8be5\u6709\u4e00\u4e2a\u673a\u8eab\u3001\u4e00\u4e2a\u673a\u7ffc\u548c\u56db\u4e2a\u55b7\u6c14\u53d1\u52a8\u673a\u3002\u7a81\u7136\uff0c\u6211\u4eec\u51b3\u5b9a\u62c6\u4e0b\u5176\u4e2d\u4e00\u4e2a\u55b7\u6c14\u53d1\u52a8\u673a\uff0c\u7528\u6da1\u8f6e\u673a\u53d6\u800c\u4ee3\u4e4b\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u662f\u4e2a\u597d\u4e3b\u610f\uff0c\u4f46\u5b83\u4e0d\u518d\u9002\u5408\u6211\u4eec\u7684\u5feb\u7167\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f1a\u6536\u5230\u901a\u77e5\u3002\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u8fd9\u4e00\u6539\u53d8\u662f\u6545\u610f\u7684\uff0c\u5177\u6709\u660e\u663e\u7684\u540e\u679c\u3002\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u7684\u98de\u673a\u7684\u5feb\u7167\uff0c\u5b83\u7531\u6570\u767e\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff1a\u8ddf\u8e2a\u6240\u6709\u7684\u4ea4\u4e92\u5c06\u975e\u5e38\u56f0\u96be\u3002JavaScript\u9879\u76ee\u5728\u8fd9\u65b9\u9762\u7c7b\u4f3c\u3002\u5bf9\u4e00\u4e2a\u7ec4\u4ef6\u7684\u5fae\u5c0f\u66f4\u6539\u53ef\u80fd\u4f1a\u7ed9\u6574\u4e2a\u9879\u76ee\u7684\u7ed3\u6784\u5e26\u6765\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u540e\u679c\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u7ed3\u6784\u7684\u5feb\u7167\u6765\u4fdd\u62a4\u7ed3\u6784\u3002\u65e0\u8bba\u4f55\u65f6\u6253\u5370\u9519\u8bef\u3001\u66f4\u6539HTML\u7c7b\u6216\u6dfb\u52a0\u65b0\u7ec4\u4ef6\uff0c\u90fd\u4f1a\u7834\u574f\u7ed3\u6784\u3002\u5982\u679c\u60a8\u8fd9\u6837\u505a\uff0c\u5feb\u7167\u6d4b\u8bd5\u5c06\u901a\u77e5\u60a8\u3002\u68c0\u67e5\u4e0b\u9762\u7684\u793a\u4f8b\uff1a\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u53d1\u52a8\u673a\u7c7b\u578b\u4ece\u6da1\u6247\u6539\u4e3a\u87ba\u65cb\u6868\u3002\u53ea\u662f\u4e3a\u4e86\u6d4b\u8bd5\u4e00\u4e0b\u5b83\u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002\u7531\u4e8e\u65b0\u7684\u641c\u7d22\u5f15\u64ce\u4e0d\u518d\u4e0e\u6211\u4eec\u7684\u5feb\u7167\u5339\u914d\uff0c\u56e0\u6b64\u6d4b\u8bd5\u5931\u8d25\u3002\u6211\u4eec\u6709\u4e00\u4efd\u62a5\u544a\uff0c\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u6b63\u5728\u8c03\u67e5\u95ee\u9898\u7684\u8def\u4e0a\u3002\ne2e\u6d4b\u8bd5\u4e0e\u8bd5\u98de\u975e\u5e38\u76f8\u4f3c\u3002\u5c31\u50cf\u98de\u673a\u4e00\u6837\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u6211\u4eec\u7684\u754c\u9762\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u786e\u5b9e\u662f\u53ef\u7528\u7684\u3002\u7531\u4e8e\u6570\u4ee5\u5343\u8ba1\u7684\u90e8\u4ef6\u76f8\u4e92\u4f5c\u7528\uff0c\u5728\u98de\u884c\u5458\u771f\u6b63\u5c06\u98de\u673a\u9001\u5165\u7a7a\u4e2d\u4e4b\u524d\uff0c\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u77e5\u9053\u4f60\u7684\u98de\u673a\u662f\u5426\u80fd\u8d77\u98de\u3002\ne2e\u6d4b\u8bd5\u65e8\u5728\u4ece\u5934\u5230\u5c3e\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u6d41\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u6a21\u62df\u4e00\u4e2a\u771f\u5b9e\u7684\u7528\u6237\uff0c\u8be5\u7528\u6237\u4e00\u904d\u53c8\u4e00\u904d\u5730\u7ecf\u5386\u76f8\u540c\u7684\u7279\u5b9a\u7528\u4f8b\u3002\n\u6839\u636e\u7528\u6237\u7684POV(\u7528\u6237\u60c5\u666f)\u521b\u5efa\u4e00\u4e2a\u5173\u952e\u573a\u666f\u5217\u8868\u3002\n\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u5e94\u8be5\u63cf\u8ff0Selenium\u5e94\u8be5\u5982\u4f55\u4e0eUI\u4ea4\u4e92\u3002\u58f0\u660e\uff1a\u201c\u786e\u4fdd\u7528\u6237\u5728\u8f6c\u5230\u9875\u9762X\u5e76\u542f\u52a8\u8fdb\u7a0bY\u540e\u83b7\u5f97\u7a97\u53e3Z\u3002\u201d\n\u5199\u8fd9\u7bc7\u6587\u7ae0\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002\u5728\u6b64\u671f\u95f4\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e9b\u65b0\u7684\u6d4b\u8bd5\uff0c\u4f8b\u5982\u4f9d\u8d56\u9879\u5b89\u5168\u5ba1\u8ba1\u3001\u53ef\u8bbf\u95ee\u6027\u6d4b\u8bd5\uff0c\u6211\u4eec\u8fd8\u5728\u8ba8\u8bba\u4e00\u4e9b\u65b0\u7684\u6d4b\u8bd5\u7c7b\u522b\u3002\u6211\u4eec\u671f\u5f85\u60a8\u7684\u53cd\u9988\u610f\u89c1\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u64b0\u5199\u6587\u7ae0\u5e76\u66f4\u6df1\u5165\u5730\u7814\u7a76\u524d\u7aef\u6d4b\u8bd5\u9886\u57df\u3002\nTeamCity\u5141\u8bb8\u60a8\u4e3a\u542f\u52a8\u6d4b\u8bd5\u548c\u90e8\u7f72\u6784\u5efa\u521b\u5efa\u65e0\u9650\u590d\u6742\u7684\u903b\u8f91\u3002\u8fd9\u5c31\u662fTeamCity\u4e3a\u5176\u81ea\u5df1\u7684UI\u663e\u793a\u6784\u5efa\u94fe/\u65f6\u95f4\u7ebf\u7684\u65b9\u5f0f\u3002\n\u5982\u60a8\u6240\u89c1\uff0cTeamCity\u5e76\u884c\u8fd0\u884c\u6d4b\u8bd5\uff0c\u56e0\u6b64\uff0c\u4e00\u4e9b\u6784\u5efa\u4f1a\u7b49\u5f85\u5176\u4ed6\u6784\u5efa\u6210\u529f\u5b8c\u6210\u3002\u5982\u679c\u51fa\u4e86\u95ee\u9898\uff0c\u5b83\u53ef\u80fd\u4f1a\u505c\u6b62\u6574\u4e2a\u7ba1\u9053-\u53ea\u662f\u4e3a\u4e86\u9632\u6b62\u5728\u80af\u5b9a\u4f1a\u5931\u8d25\u7684\u6d4b\u8bd5\u4e0a\u6d6a\u8d39\u8d44\u6e90\u3002\n\u8fd9\u91cc\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u5efa\u9020\u590d\u6742\u7684\u7ba1\u9053\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u597d\u5730\u4f7f\u5b83\u4eec\u53d8\u5f97\u590d\u6742\u3001\u590d\u6742\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u6d41\u6c34\u7ebf\u7684\u67d0\u4e9b\u90e8\u5206\u5fc5\u987b\u6784\u5efa\u5728OS X\u4ee3\u7406\u4e0a\uff0c\u5176\u4e2d\u4e00\u4e9b\u5fc5\u987b\u6784\u5efa\u5728Linux\u7cfb\u7edf\u4e0a\uff0c\u800c\u6709\u4e9b\u5c06\u4f7f\u7528Amazon Cloud\u4ee3\u7406\u6784\u5efa\u3002\n\u4f60\u8fd8\u8bb0\u5f97\u7b2c\u4e00\u5f20\u56fe\u5417\uff1f\u6211\u4eec\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6db5\u76d6\u4e86\u4e00\u534a\u4ee5\u4e0a\u7684\u95ee\u9898\uff0c\u800c\u8d28\u91cf\u4fdd\u8bc1\u90e8\u6db5\u76d6\u4e86\u4e09\u5206\u4e4b\u4e00\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u603b\u4f1a\u6709\u4e00\u4e9b\u4e1c\u897f\u7559\u4e0b\u6765\u3002\u5728JetBrains\u4e2d\uff0c\u6211\u4eec\u5e7f\u6cdb\u5b9e\u8df5\u201c\u72d7\u811a\u201d\uff1a\u6211\u4eec\u4f7f\u7528\u81ea\u5df1\u7684\u4ea7\u54c1(IntelliJ\u3001TeamCity\u3001Space\u3001YouTrack\u7b49)\u6765\u5f00\u53d1\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\u6240\u4ee5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0cJetBrains\u5185\u90e8\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u6765\u627e\u6211\u4eec\uff0c\u5206\u4eab\u53cd\u9988\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u901a\u77e5\u5e76\u4fee\u590d\u901a\u8fc7\u6240\u6709\u5176\u4ed6\u8fc7\u6ee4\u5668\u7684\u9519\u8bef\u3002\n\u5728\u6211\u4eec\u7684Early Access\u8ba1\u5212\u671f\u95f4\uff0c\u60a8\u53ef\u4ee5\u4e86\u89e3\u66f4\u591a\u6709\u5173\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u7684\u65b0\u529f\u80fd\u7684\u4fe1\u606f\uff0c\u5206\u4eab\u60a8\u7684\u53cd\u9988\uff0c\u62a5\u544a\u95ee\u9898\uff0c\u5e76\u8981\u6c42\u6211\u4eec\u5305\u62ec\u4e00\u4e9b\u65b0\u529f\u80fd\uff0c\u4ee5\u4fbf\u5c3d\u5feb\u53d1\u5e03\u3002\n\u5e0c\u671b\u6211\u4eec\u5df2\u7ecf\u660e\u786e\u4e86\u524d\u7aef\u6d4b\u8bd5\u7684\u57fa\u672c\u539f\u5219\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662f\u4fdd\u9669\u7684\uff1a\u5b83\u9700\u8981\u4e00\u4e9b\u52aa\u529b\uff0c\u4f46\u53ef\u4ee5\u633d\u6551\u751f\u547d\u3002\u4e3a\u4e86\u4ece\u5c0f\u89c4\u6a21\u9879\u76ee\u7684CI/CD\u4e2d\u83b7\u5f97\u6700\u5927\u5229\u6da6\uff0c\u60a8\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528TeamCity\u3002\u4fdd\u62a4\u81ea\u5df1\u4e0d\u4f1a\u72af\u4ee3\u4ef7\u9ad8\u6602\u7684\u9519\u8bef\uff01", "note_en": "Developing a working piece of software is difficult. Just like building an airplane, it requires talented people, working components, and a testing framework. No plane leaves the hangar before everything is ready, checked and double-checked.\n In JetBrains, we adopt the same philosophy for building our software. Vigorous testing helps us discover bugs and problems before the final product takes off. Just like building a plane, software development is a process that consists of multiple stages. Although the authors of this post are not aerospace engineers, we will use simplified aircraft analogies. There are several reasons for that: aircraft is beautiful, it is pure engineering, and it reveals that the problems we raise here are not exclusive to software engineering.\n The bigger your product, the more steps and modules there are. To make sure your software is ready to lift off, every module needs to be tested and correctly integrated with everything else. CI/CD services, if set up correctly, help automate this process. Most importantly, they remove the human factor famous for one careless action being able to lead to total disaster.\n Contrary to popular belief, testing is very important in front-end development. To continue the analogy, your plane is not only required to fly \u2013 it has to be comfortable inside! Moreover, its exterior affects how airplane flights (aerodynamics). Getting back to the front end, this means that you have to test the usability as well as functionality. This makes  front-end testing a must. In this article, we will provide an overview of UI testing used in TeamCity. If you have any questions about the technical details \u2013 don\u2019t hesitate to ask us.\n  Each section of this post contains links to useful resources. Some of them lead to public TeamCity configurations where you could examine how we test the front end. Feel free to sign in as a guest and look around.\n  UI testing is not only about the Unit tests. There are screenshots, behavior, accessibility, performance, security, and perception tests. Each of them is listed below.\n  Let\u2019s consider the interception of issues. In JetBrains, it works on multiple levels, and most of them are based on the CI/CD. Each test, each department, each level takes its part in the entire process of revealing and reporting problems. Here is a chart that shows all of these parts:\n  Every test takes care of some issue categories. Finally, it helps us to mitigate issues.\n For example, a huge amount of UI problems we catch belong to the  Screenshot testing stage. Fewer problems belong to the Linters / Unit / Render tests. That doesn\u2019t make those tests meaningless. On the contrary, it could mean that we work in these areas well enough to prevent tons of issues.\n The key point we would like to show here: as you can see, the Quality Assurance Department faces only one-third of the problems. This means that  by using CI/CD you could help your colleagues to save time on inspecting issues that are easy to predict, which could be caught by a well-organized testing system.\n The chart isn\u2019t 100% representative and numbers float from release to release: some level can remove more problems than others. However, it shows that the test system is very important, even if a separate test covers only one case. Quantity doesn\u2019t equal quality here: a test could find \u201conly\u201d one bug but that one bug could\u2019ve crashed your whole application if left unnoticed.\n  Firstly, we ought to say that the code should be clean and consistent, but there\u2019s an issue with that. Everyone has their own understanding of clean code. In JetBrains, we agreed on 200+ rules that make sure our code stays objectively clean. As a result, we get a warning from IntelliJ Idea whenever a  linter detects a problem. It\u2019s not superfluous to mention that static typings with  TypeScript,  Flow,  Kotlin, or  Reason are required for complicated applications. We, the TeamCity team, have decided to use Flow. One of the first tests we use for building the front end is just eslint/stylelint check. Its purpose not only to find code style problems but also issues with missed variables, imports, or non-cheap/safe operations (like React Hooks without dependencies).\n Of course, there are also unit tests. It\u2019s simple: we write pure atomic functions and then assert their output. If the output is OK,  TeamCity marks them green and allows the pipeline to continue.\n   Displaying consistent UI across multiple devices and platforms is one of our main goals. We need to be certain that all the components are displayed correctly, regardless of the used browser, layout, or viewport size. This implies testing how the components are visually presented in different configurations. Screenshot testing does exactly that.\n   After one of the updates Comment sections have been added\u00a0to the Unauthorized Agents. That\u2019s quite ok. But imagine, that this kind of test could reveal the disappearing of elements. It happens from time to time and we find\u00a0this test very useful. Although, Snapshot Testing, you\u2019ll get familiar soon also will help in this case.\n  Connect to the server using the WebDriver API; this API allows us to interact with a website in an automatic mode \u2013 without a real user.\n  Hermione, a utility tool by Yandex, connects to Storybook using WebDriver and takes multiple screenshots of the selected area in every browser.\n Those screenshots are then put into a folder, where Hermione compares them to the default screenshots using Mocha.\n   We try to improve the performance of our interfaces by minimizing the amount of unnecessary rendering. Generally, React is pretty good at that. However, there are some cases you should keep in mind: if you change something in a component, React  creates a new one instead of modifying the original component.\n Imagine that you pass new props into a component. In order to save the resources needed for a re-render, React checks if the passed props differ from the previous version. If they are the same, no re-rendering takes place. Unfortunately, many of us forget that in JavaScript two arrays or objects with equal content are different entities (because those objects/arrays will have different references). As a result, we end up unnecessarily rendering equal components.\n   You can enable React Updates Highlighting with React Developer tools. This will reveal all re-renders in your App. For example, there are rerenders, which take place during cursor moving over the Trends Page subcomponent. Fortunately, all those rerenders are intended here. But imagine, that adding to these re-renders app will fire one hundred more?\n   We already know about the danger. Nevertheless, we decided to check for redundant rendering using  why-did-you-render. To our surprise, we discovered multiple instances of inefficiency. That\u2019s how we did it:\n If we change something in the store, we will make all the components (subscribed to this store) collect data once again. It happens with  mapStateToProps callback.\n After collecting the data, we pass it to the component and launch compare function to check, whether the props had been changed or not.\n Meanwhile, we know that the dummy action doesn\u2019t actually change any values in the store, meaning that no new props should be passed to the component.\n If new props lead the component to a re-render, we know that we created a new object/array somewhere where we should not. What a shame!\n      Using the  reselect library, you can memoize results if all the parameters for the generation function remain the same. If the passed parameters are equal to the previous ones, we will receive not the new objects, but the references to old ones. No re-rendering takes place.\n  You can predefine an object or array as immutable by freezing it. Next time, whenever you would like to return a fallback value, you should return this immutable object. It guarantees that reference to this object always will be the same, so the component will not be re-rendered.\n  Snapshot testing verifies that any changes made to the structure of important components are intentional. Once again, let\u2019s return to our airplane analogy. Imagine that we have a snapshot of a plane\u2019s structure: it should have a body, one wing, and four jet engines. Suddenly, we decide to remove one of the jet engines and replace it with a turbine. While this may be a great idea, it no longer fits our snapshot. Consequently, we would get a notification.\n   In the picture above the change was intentional, with obvious ramifications. Now imagine a snapshot of our plane which consists of hundreds of components: tracking all the interactions would be very difficult. JavaScript projects are similar in this respect. A small change to one component could lead to unwanted consequences for the structure of the whole project.\n You can protect structures by creating their snapshots. Whenever you misprint, change an HTML class, or add a new component, you will break the structure. A snapshot test will notify you if you do. Check the example below:\n Here, we change the engine type\u00a0from turbofan to propfan. Just to test how it works. Since the new\u00a0engine no longer matches our snapshot, the test fails. We\u2019ve got a report, and our engineers are on their way to investigate the problem.\n    E2E tests are very similar to test flights. Like with planes, we have to make sure that our interface is actually usable in the real world. With thousands of components interacting with each other, you never know if your plane can take off before the pilot actually takes it into the air.\n E2E tests are designed to test an application flow from start to finish. Those tests emulate a real user who is going through the same specific use case over and over again.\n    Create a list of\u00a0scenarios\u00a0that are critical from the user\u2019s POV (user stories).\n  Each of those tests should describe how Selenium is supposed to interact with the UI. Declaratively: \u201cMake sure the user gets the window Z after going to page X and start process Y.\u201d\n   Writing this article took a while. During this time we had implemented some new tests, such as  Dependencies Security Audit,  Accessibility tests, and we are also discussing some new categories of tests. We are looking forward to your feedback to continue writing articles and dive deeper into the front-end testing area.\n  TeamCity lets you create infinitely complex logic for launching tests and deploying builds. This is how TeamCity displays the chain/timeline of builds for its own UI.\n  As you can see, TeamCity runs tests in parallel, and in consequence, some builds waiting for others to been finished successfully. And if something goes wrong, it could stop the whole pipeline \u2013 just to prevent wasting resources on the tests which will definitely fail.\n   The important point here is that we could not only build complex pipelines but make them sophisticated, complicated in a good manner. For example, some parts of our pipeline must be built on OS X agents, some of them \u2013 on the Linux system, and some of them are going to be built with  Amazon Cloud Agents.\n   Do you remember the first diagram? Our automated tests cover more than half of those issues, and the Quality Assurance Department covers one-third part. Nevertheless, there is always something left. In JetBrains, we widely practice \u201cdogfooding\u201d: we use our own products (IntelliJ, TeamCity, Space, YouTrack, and so on) to develop and build software. So, at this stage, everyone inside JetBrains could come to us and share feedback. By doing so, we get notice and fix bugs that passed all the other filters.\n  During our  Early Access Program, you can find out more about the new features we are making right now, share your feedback, report issues, and ask us to include some new features so they are released as soon as possible.\n Hopefully, we\u2019ve made the basic principles of front-end testing clear. Summing up, you can consider it insurance: it requires some effort but can be lifesaving. To get the most profit from CI/CD for small-scale projects, you can use TeamCity free of charge. Protect yourself from costly mistakes!", "posttime": "2020-06-26 04:32:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ui,\u6d4b\u8bd5", "title": "TeamCity UI\uff1a\u6211\u4eec\u5982\u4f55\u6d4b\u8bd5\u5b83", "title_en": "TeamCity UI: how do we test it", "transed": 1, "url": "https://blog.jetbrains.com/teamcity/2020/06/teamcity-ui-how-do-we-test-it/", "via": "", "real_tags": ["ui", "\u6d4b\u8bd5"]}]