[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1000370, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e13\u6ce8\u4e8eRust\u8bed\u8a00\u7684Redox OS\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\u73b0\u5728\u80fd\u591f\u542f\u52a8AMD Ryzen ThreadRipper 3990X 64\u6838/128\u7ebf\u7a0b\u5904\u7406\u5668\uff0c\u5e76\u4ee5\u5b8c\u6574\u7684\u591a\u7ebf\u7a0b\u529f\u80fd\u8fd0\u884c\u3002\u867d\u7136Rust\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u539f\u5219\u4e4b\u4e00\u662f\u63d0\u4f9b\u5b89\u5168\u7684\u5e76\u53d1\u6027\uff0c\u4f46Redox OS\u672c\u8eab\u5b58\u5728\u4e00\u4e2a\u591a\u6838\u95ee\u9898\uff0c\u76f4\u5230\u672c\u5468\uff0c\u9996\u5e2dRedox OS\u5f00\u53d1\u4eba\u5458(\u548cSystem76\u5de5\u7a0b\u5e08)Jeremy Soller\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4ed6\u53c8\u901a\u8fc7\u4f7f\u7528System76.\u9a8c\u8bc1\u4e86\u5de5\u4f5c\u4e2d\u7684\u591a\u6838\u7cfb\u7edf\u3002", "note_en": "The Rust language focused  Redox OS open-source operating system is now able to boot the AMD Ryzen Threadripper 3990X 64-core/128-thread processor and run with full multi-threading capabilities.\r   While one of the fundamentals of the Rust programming language is on offering safe concurrency, Redox OS itself had a multi-core issue until this week when it was sorted out by lead Redox OS developer (and System76 engineer) Jeremy Soller.\r   He in turn verified the working multi-core system by using a  System76  ...", "posttime": "2020-05-02 23:50:46", "tags": "rust,\u64cd\u4f5c\u7cfb\u7edf,\u7ebf\u7a0b,ryzen,redox", "title": "\u9508\u5199\u7684\u6c27\u5316\u8fd8\u539f\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5bfc128\u7ebf\u7a0bAMD Ryzen\u7ebf\u7a0b\u88c2\u89e3\u56683990X", "title_en": "Rust-Written Redox OS Booting the 128-Thread AMD Ryzen Threadripper 3990X", "transed": 1, "url": "https://www.phoronix.com/scan.php?page=news_item&px=Redox-OS-On-Threadripper-3990X", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["rust", "\u64cd\u4f5c\u7cfb\u7edf", "\u7ebf\u7a0b", "ryzen", "redox"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000369, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u6cd5\u5f80\u8fd4http\u8bf7\u6c42\u5230\u4e0a\u6e38\uff1a\u62e8\u53f7TCP\uff1a\u67e5\u627e\u9879\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u4e3b\u673a", "note_en": "Unable to round-trip http request to upstream: dial tcp: lookup item: no such host", "posttime": "2020-05-02 23:50:36", "tags": "\u9ad8\u85aa,large,http,trip", "title": "\u5982\u4f55\u5728\u6ca1\u6709\u9ad8\u85aa\u9ad8\u7ba1\u7684\u60c5\u51b5\u4e0b\u7ec4\u7ec7\u4e00\u4e2a\u5927\u578b\u7ec4\u7ec7\uff1f", "title_en": "How to organise a large org without hyper-salaried execs?", "transed": 1, "url": "http://item?id=23051415", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u9ad8\u85aa", "large", "http", "trip"]}, {"category": "", "categoryclass": "", "imagename": "c898d9a4962d6476dce03b83d46acd8e.jpg", "infoid": 1000368, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u591a\uff1ahttps://eater.net/6502\u5728Patreon\uff1ahttps://www.patreon.com/beneater\u6216https://eater.net/support\u4e0a\u652f\u6301\u8fd9\u4e9b\u89c6\u9891\uff0c\u4ee5\u83b7\u5f97\u5176\u4ed6\u65b9\u5f0f\u7684\u652f\u6301\u3002-\u793e\u4ea4\u5a92\u4f53\uff1a\u7f51\u7ad9\uff1ahttps://www.eater.net\u63a8\u7279\uff1ahttps://twitter.com/ben_eater Patreon\uff1ahttps://patreon.com/beneater Reddit\uff1ahttps://www.reddit.com/r/beneater\u7279\u522b\u611f\u8c22\u8fd9\u4e9b\u4f7f\u8fd9\u6bb5\u89c6\u9891\u6210\u4e3a\u53ef\u80fd\u7684\u652f\u6301\u8005\uff1a\u4e9a\u5f53\u00b7\u6797\u5b81\u683c\uff0c\u963f\u5fb7\u91cc\u5b89\u00b7\u5f17\u91cc\u6770\u91cc\uff0c\u4e9a\u5386\u5c71\u5927\u00b7\u6e29\u5fb7\u5170\uff0c\u5b89\u68ee\u00b7\u8303\u591a\u4f26\uff0c.", "note_en": "More 6502:  https://eater.net/6502  Support these videos on Patreon:  https://www.patreon.com/beneater or  https://eater.net/support for other ways to support.  ------------------  Social media: Website:  https://www.eater.net Twitter:  https://twitter.com/ben_eater Patreon:  https://patreon.com/beneater Reddit:  https://www.reddit.com/r/beneater  Special thanks to these supporters for making this video possible: Adam Lininger, Adrien Friggeri, Alexander Wendland, Anson VanDoren,  ...", "posttime": "2020-05-02 23:28:42", "tags": "\u6c47\u7f16,\u5faa\u73af,language,https", "title": "\u6c47\u7f16\u8bed\u8a00\u5faa\u73af\u7684\u5de5\u4f5c\u539f\u7406[\u89c6\u9891]", "title_en": "How assembly language loops work [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=ZYJIakkcLYw", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6c47\u7f16", "\u5faa\u73af", "language", "https"]}, {"category": "", "categoryclass": "", "imagename": "82bf6c191fdca067c24f41d570a6bdb6.jpg", "infoid": 1000366, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Bashtop\u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684Linux\u8d44\u6e90\u76d1\u89c6\u5668\u3002\u6211\u5728Win10\u4e0a\u7684cmd shell\u4e2d\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u6211\u9009\u62e9\u7684shell\u5728Azure VM\u4e0a\u8fde\u63a5\u5230Ubuntu18.04LTS\u65f6\u5b58\u5728\u6e32\u67d3\u95ee\u9898\uff0c\u5e76\u4e14\u5df2\u7ecf\u4f7f\u7528azlux\u7684\u5f00\u6e90\u8d44\u6e90\u5e93\u5b89\u88c5\u4e86\u5b83\u3002\nEcho&#34\uff1bDeb http://packages.azlux.fr/debian/Buster Main&#34\uff1b|sudo tee/etc/apt/Soures.list.d/azLux.listwget-qo-https://azlux.fr/repo.gpg.key|sudo apt-key add-sudo apt update sudo apt install bashtop-babashtop\u3002\n\u8fd9\u91cc\u7684CPU\u4f7f\u7528\u7387\u5f88\u6709\u8da3\uff0c\u6211\u6b63\u5728\u63a2\u7d22\u4e3a\u4ec0\u4e48\u6211\u7684\u4ee3\u7801\u5e94\u8be5\u4f7f\u7528\u6240\u6709\u8d44\u6e90\uff0c\u800c\u6211\u7684\u4ee3\u7801\u5374100%\u5730\u5229\u7528\u4e861\u4e2a\u5185\u6838\u3002\u6211\u4e0d\u786e\u5b9a\u76f8\u5bf9\u767e\u5206\u6bd4\u5e74\u9f84\u662f\u9519\u8bef\u8fd8\u662f\u529f\u80fd\u3002\n\u4f7f\u7528f-filter\u8fc7\u6ee4\u6211\u611f\u5174\u8da3\u7684Web\u8fdb\u7a0b\u3002\u6211\u66f4\u559c\u6b22\u672a\u8fc7\u6ee4\u7684\u5c4f\u5e55\u6765\u63d0\u4f9b\u670d\u52a1\u5668\u7684\u6982\u8ff0\u3002\n\u4e3a\u4e86\u91cd\u65b0\u8bbe\u7f6e\u4e0a\u4f20\u548c\u4e0b\u8f7d\u603b\u6570\uff0c\u8d35\u65cf\u4eec\u53cb\u597d\u5730\u6dfb\u52a0\u4e86\u8fd9\u4e00\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u4ece\u9009\u9879\u83dc\u5355\u6309Esc\u952e\u8fdb\u5165\u8be5\u529f\u80fd\u3002\n\u5982\u679c\u4f60\u559c\u6b22\uff0c\u53ef\u4ee5\u8003\u8651\u8d5e\u52a9https://github.com/aristocratos.\u3002\u6216\u8005\u4e00\u7b14\u8d1d\u5b9d\u6350\u6b3e\u6216\u8005\u4e00\u676fKo-fi\u5496\u5561\u3002", "note_en": "Bashtop is a very handy resource monitor for Linux. I\u2019m using it from the  cmd shell on Win 10, as  cmder my shell of choice has rendering problems connected to Ubuntu 18.04 LTS on an Azure VM, and have installed it using  azlux\u2019s open source repository\n echo  &#34;deb http://packages.azlux.fr/debian/ buster main&#34; |  sudo tee /etc/apt/sources.list.d/azlux.listwget  -qO - https://azlux.fr/repo.gpg.key |  sudo apt-key add - sudo apt update sudo apt  install bashtop  -ybashtop\n     CPU usage is interesting here and I\u2019m exploring why I\u2019ve got 1 core 100% utilised, when ideally my code should use all resources.  I\u2019m not sure if the relative %age is a bug or feature\n Using  f - filter to filter the Web process I\u2019m interested in. I prefer the non filtered screen to give an overview of the server.\n To reset the Total Upload and Download counts,  aristocratos kindly added this feature, which you can do from the options menu press  ESC to get there.\n    If you like it consider sponsoring  https://github.com/aristocratos. Or a single  paypal donate or a  ko-fi coffee.", "posttime": "2020-05-02 23:28:18", "tags": "linux,apt,shell", "title": "Bashtop Linux\u8d44\u6e90\u76d1\u89c6\u5668-\u975e\u5e38\u68d2", "title_en": "Bashtop Linux resource monitor \u2013 it is great", "transed": 1, "url": "https://davemateer.com/2020/05/02/Bashtop-linux-alternative-to-task-manager", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["linux", "apt", "shell"]}, {"category": "", "categoryclass": "", "imagename": "082e051c240df893db56d0d8e7a11419.jpg", "infoid": 1000365, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5468\u524d\uff0c\u6211\u7b2c\u4e00\u6b21\u6ce8\u610f\u5230\uff0c\u4e92\u8054\u7f51\u6863\u6848\u9986\u5f00\u59cb\u8981\u6c42\u4eba\u4eec\u767b\u5f55\u540e\u624d\u80fd\u67e5\u770b\u67d0\u4e9b\u5185\u5bb9\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u5185\u5bb9\u90fd\u9700\u8981\u767b\u5f55\uff0c\u800c\u662f\u4ec5\u7279\u5b9a\u5185\u5bb9\u9700\u8981\u767b\u5f55\u3002\u6b64\u5916\uff0c\u767b\u5f55\u8981\u6c42\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u653e\u5728\u5185\u5bb9\u4e0a-\u53ef\u80fd\u662f\u5f53\u4ed6\u4eec\u6536\u5230\u6295\u8bc9\u65f6\u3002\n\u6211\u51e0\u5468\u524d\u7684\u6848\u4f8b\u6d89\u53ca\u4e00\u6bb5\u89c6\u9891\uff0c\u5176\u4e2d\u5305\u542b\u7684\u5185\u5bb9\u88ab\u66f4\u5f31\u667a\u7684\u4eba\u8ba4\u4e3a\u662f\u201c\u6709\u4e89\u8bae\u7684\u201d\u3002\u8fd9\u6bb5\u89c6\u9891\u8fc7\u53bb\u51e0\u4e2a\u6708\u90fd\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u4e0a\u89c2\u770b\uff0c\u800c\u4e0d\u9700\u8981\u4f60\u767b\u5f55\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u5f53\u6211\u56de\u9996\u5f80\u4e8b\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u4e92\u8054\u7f51\u6863\u6848\u9986\u7f51\u7ad9\u8981\u6c42\u4f60\u5148\u767b\u5f55\u624d\u80fd\u89c2\u770b\u89c6\u9891\u3002\n\u4eca\u5929\uff0c\u6211\u5728\u6700\u8fd1\u52a0\u5dde\u8d1d\u514b\u65af\u83f2\u5c14\u5fb7\u7684\u4e39\u00b7\u57c3\u91cc\u514b\u68ee\u535a\u58eb\u548c\u963f\u5ef7\u00b7\u9a6c\u897f\u5e0c\u535a\u58eb\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u201c\u6709\u4e89\u8bae\u201d\u7684\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\u53d1\u73b0\u4e86\u540c\u6837\u7684\u4e8b\u60c5\u3002\u65b0\u95fb\u53d1\u5e03\u4f1a\u7684\u89c6\u9891\u5728YouTube\u548c\u5176\u4ed6\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u906d\u5230\u5ba1\u67e5\u3002\u5f53\u6211\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u4e0a\u641c\u7d22\u201cDan Erickson\u201d\u65f6\uff0c\u6211\u5f97\u5230\u4e86\u4e0b\u9762\u622a\u56fe\u4e2d\u7684\u7ed3\u679c\uff0c\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u5927\u591a\u6570\u89c6\u9891\u90fd\u9700\u8981\u4f60\u767b\u5f55\u624d\u80fd\u89c2\u770b\u3002\u5373\u4f7f\u662f\u89c6\u9891\u7f29\u7565\u56fe\u4e5f\u662f..\u3002\n\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u660e\u663e\u7684\u5ba1\u67e5\u6848\u4f8b\uff0c\u5728\u5185\u5bb9\u548c\u7528\u6237\u4e4b\u95f4\u8bbe\u7f6e\u4e86\u53e6\u4e00\u4e2a\u969c\u788d\u3002\u5b83\u7528\u6765\u963b\u6b62\u7528\u6237\u67e5\u770b\u5185\u5bb9\u3002\u5fc5\u987b\u767b\u5f55\u7684\u7528\u6237\uff0c\u6216\u8005\u751a\u81f3\u5fc5\u987b\u5148\u5728\u4e92\u8054\u7f51\u6863\u6848\u9986\u4e0a\u521b\u5efa\u8d26\u6237\u7684\u6574\u4e2a\u8fc7\u7a0b\u7684\u7528\u6237\uff0c\u5f88\u53ef\u80fd\u4f1a\u51b3\u5b9a\u4e0d\u770b\u5e76\u79bb\u5f00\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u201c\u51cf\u901f\u201d\u5bf9\u5185\u5bb9\u7684\u5f71\u54cd\uff0c\u4ee5\u53ca\u201c\u7f13\u6162\u7981\u6b62\u201d\u5bf9\u7f51\u7ad9\u7528\u6237\u7684\u5f71\u54cd\u3002\n\u8981\u6c42\u767b\u5f55\u53ea\u662f\u5ba1\u67e5\u4eba\u5458\u6b66\u5668\u5e93\u4e2d\u7684\u53e6\u4e00\u4e2a\u6b66\u5668\uff1b\u5728\u4ed6\u4eec\u5f00\u59cb\u5b9e\u65bd\u8d8a\u6765\u8d8a\u4e25\u5389\u7684\u5ba1\u67e5\u5f62\u5f0f\u4e4b\u524d\uff0cYouTube\u8fc7\u53bb\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\u4ee4\u4eba\u9057\u61be\u7684\u662f\uff0c\u5728\u6240\u6709\u7f51\u7ad9\u4e2d\uff0c\u5373\u4f7f\u662f\u4e92\u8054\u7f51\u6863\u6848\u9986\uff0c\u5728\u4e92\u8054\u7f51\u4e0a\u5e94\u8be5\u5141\u8bb8\u54ea\u4e9b\u4fe1\u606f\u7684\u95ee\u9898\u4e0a\uff0c\u73b0\u5728\u663e\u7136\u4e5f\u5728\u542c\u53d6\u5927\u6280\u672f\u516c\u53f8\u7684\u610f\u89c1\u3002\u5982\u679c\u6211\u4eec\u80fd\u4ee5YouTube\u4e3a\u4f8b\uff0c\u90a3\u4e48\u4e92\u8054\u7f51\u6863\u6848\u9986\u7684\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u53ef\u80fd\u53ea\u662f\u4e2a\u65f6\u95f4\u95ee\u9898\u3002", "note_en": "A few weeks ago I had noticed for the first time that  the Internet Archive started requiring people to login before they are able to view certain content. To be clear, the login is not required for all content but only for specific content. Also, the login requirement is placed on the content after a while \u2014 probably when they receive complaints about it.\n My case from a few weeks ago involved a video containing content that is deemed to be \u2018controversial\u2019 by the more weak-minded. That video used to be viewable on the Internet Archive for many months without requiring you to login. When I looked back after many months I noticed that the Internet Archive website required you to login before you could watch the video.\n Today I discovered the same thing with videos of the recent \u2018controversial\u2019 press conference of Dr. Dan Erickson and Dr. Artin Massihi of Bakersfield, California regarding COVID-19. Videos of that press conference got  censored on YouTubeand other social media platforms. When I did a search on the Internet Archive for \u2018dan erickson \u2019I got the results seen in the screenshot below, and as you can see, most of the videos require you to login before you can view them. Even the video thumbnails are  ...\n  This looks to me like a clear case of  censorship by putting up another hurdle in between the content and the user. It serves to discourage users from viewing the content. Users who have to login, or who even have to go through the whole process of creating an account first on the Internet Archive, are likely to decide not to watch it and leave. It\u2019s similar to the effect that \u2018deboosting\u2019 has on content, and the effect that \u2018slow banning\u2019 has on a website user.\n Requiring a login is just another weapon in the censor\u2019s arsenal; YouTube used to do this before they started implementing increasingly more draconian forms of censorship. It\u2019s a shame that even the Internet Archive, of all websites, is now apparently also listening to Big Tech when it comes to what information should be allowed on the Internet. If we can take YouTube as an example, then it may be just a matter of time before things get much worse on the Internet Archive.", "posttime": "2020-05-02 23:28:05", "tags": "\u767b\u5f55,internet,\u5185\u5bb9,content", "title": "\u901a\u8fc7\u8981\u6c42\u767b\u5f55\u5bf9\u4e92\u8054\u7f51\u6863\u6848\u9986\u8fdb\u884c\u5ba1\u67e5", "title_en": "Censorship on the Internet Archive by requiring login", "transed": 1, "url": "https://blog.kareldonk.com/censorship-on-the-internet-archive-by-requiring-login/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u767b\u5f55", "internet", "\u5185\u5bb9", "content"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000364, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenTitan\u662f\u7b2c\u4e00\u4e2a\u4e3a\u7845\u4fe1\u4efb\u6839(ROT)\u82af\u7247\u6784\u5efa\u900f\u660e\u7684\u3001\u9ad8\u8d28\u91cf\u7684\u53c2\u8003\u8bbe\u8ba1\u548c\u96c6\u6210\u6307\u5357\u7684\u5f00\u6e90\u9879\u76ee\u3002Yosys\u662f\u4e00\u4e2a\u514d\u8d39/libre\u548c\u5f00\u6e90\u7684RTL\u5408\u6210\u5de5\u5177\u6846\u67b6\u3002\u5b83\u76ee\u524d\u62e5\u6709\u5e7f\u6cdb\u7684Verilog-2005\u652f\u6301\uff0c\u5e76\u4e3a\u5404\u79cd\u5e94\u7528\u9886\u57df\u63d0\u4f9b\u4e86\u4e00\u5957\u57fa\u672c\u7684\u7efc\u5408\u7b97\u6cd5\u3002OpenTitan\u662f\u4e00\u4e2aSystemVerilog\u9879\u76ee\uff0c\u4f46\u76ee\u524dyosys\u53ea\u652f\u6301SystemVerilog\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981sv2v\u6765\u8f6c\u6362.\u3002\nsv2v\u63d0\u4f9b\u4e86\u9884\u5efa\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u7cfb\u7edf\u4ece[\u53d1\u5e03\u9875\u9762](https://github.com/zachjs/sv2v/releases))\u4e0b\u8f7d\uff0c\u7136\u540e\u89e3\u538b\u5230\u53ef\u6267\u884c\u8def\u5f84\u3002\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u5f00\u59cb\u6784\u5efa\u3002\u7531\u4e8esv2v\u662fHaskell\u9879\u76ee\uff0c\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Haskell\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u8bf7\u53c2\u9605Stack\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97sv2v\u7684\u6e90\u4ee3\u7801\u5e76\u6784\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u547d\u4ee4\u5b8c\u6210\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4f4d\u4e8e./bin/sv2v\u3002\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230\u53ef\u6267\u884c\u8def\u5f84\uff0c\u5b89\u88c5\u5b8c\u6210\u3002\n\u5982\u679c\u60a8\u7684\u7cfb\u7edf\u6ca1\u6709\u63d0\u4f9byosys\uff0c\u60a8\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5\u3002\u6784\u5efayosys\u9700\u8981\u4e00\u4e9b\u5fc5\u5907\u6761\u4ef6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a\nsudo apt-get install build-Essential clang bison flex\\libreadline-dev gawk tcl-dev libffi-dev git\\raphviz xdot pkg-config python3 libboot-system-dev\\libost-python-dev libost-filessystem-dev zlib1g-dev\u3002\n\u7136\u540e\u60a8\u9700\u8981\u83b7\u53d6yosys\u7684\u6e90\u4ee3\u7801\uff0c\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u83b7\u53d6\uff1a\nOpenTitan\u662f\u4e00\u4e2a\u590d\u6742\u7684\u9879\u76ee\uff0c\u5b83\u6709\u4e00\u4e9b\u8f85\u52a9\u7a0b\u5e8f\u6765\u81ea\u52a8\u751f\u6210\u4e00\u4e9b\u4ee3\u7801\u3002\u901a\u8fc7\u9605\u8bfb\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u83b7\u5f97\u6240\u9700\u7684\u6e90\u4ee3\u7801\uff1a\nsudo apt-get install autoconf bison build-Essential clang-format curl flke8\\flex g++git libelf1 libelf-dev libftdi1-2 libftdi1-dev libssl-dev\\libusb-1.0-0 make ninja-build pkgconf python3python3-pip\\python3-setuptools python3-yaml sRecords tree\u3002\n\u6ce8\u610f\uff1a\u6267\u884c\u4e0a\u8ff0fusesoc\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u66f4\u6b63\uff1a\ndiff--git a/hw/ip/prim/util/primgen.py b/hw/ip/prim/util/primgen.pyindex 49e73436..d22b3214 100755-a/hw/ip/prim/util/primgen.py+b/hw/ip/prim/util/primgen.py@@-364\uff0c8+364\uff0c8@@def_GENERATE_ASTERAL_\u3002\uff0c-DEFAULT_FLOW_STYLE=FALSE\uff0c-SORT_KEYS=FALSE)+DEFAULT_FLOW_STYLE=FALSE)#\uff0c+#SORT_KEYS=FALSE)\u6253\u5370(&#34\uff1b\u6838\u5fc3\u6587\u4ef6\u5199\u5165%s&#34\uff1b%(Summary_prim_core_filepath\uff0c))\u3002\nSystemVerilog\u4e2d\u6709\u5f88\u591a\u58f0\u660e\u6027\u8bed\u53e5\uff0c\u8fd9\u4e9b\u8bed\u53e5\u7684sv2v\u8f6c\u6362\u4e0d\u4f1a\u751f\u6210\u4efb\u4f55\u4ee3\u7801\u3002\u800c\u4e14opentitan\u9879\u76ee\u7684\u6e90\u4ee3\u7801\u7f3a\u5c11include\u8bed\u53e5\uff0csv2v\u627e\u4e0d\u5230\u4e00\u4e9b\u58f0\u660e\u548c\u5b9a\u4e49\uff0c\u4f1a\u9020\u6210\u4e00\u4e9b\u9519\u8bef\u3002\u6240\u4ee5\u6211\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6e90\u4ee3\u7801\u7684\u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u6211\u4f7f\u7528\u7684\u6587\u4ef6(opentitan.sv)\uff1a\n`Include&#34\uff1bbuild/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_prim_all_0.1/rtl/prim_cipher_pkg.sv&#34\uff1b`Include&#34\uff1bbuild/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ip_rstmgr_pkg_0.1/rtl/rstmgr_pkg.sv&#34\uff1b`Include&#34\uff1bbuild/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_pkg_0.1/rtl/ibex_pkg.sv&#34\uff1b`Include&#34\uff1bbuild/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_top_earlgrey_pinmux_reg_0.1/rtl/autogen/pinmux_reg_pkg.sv&#34\uff1b`Include&#34\uff1bbuild/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ip_hmac_0.1/rtl/hmac_pkg.sv&#34\uff1b..\u3002\n#&#34\uff1b\u5408\u6210&#34\uff1b\u5b8f\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\uff0c\u4ee5\u5220\u9664\u4e00\u4e9b\u4e0d\u53ef\u5408\u6210\u7684\u4ee3\u7801v2v-DSYNTHESIS-I build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_prim_assert_0.1/rtl opentitan.sv&gt\uff1bopentitan.v\u3002\nsv2v\u751f\u6210\u7684\u4ee3\u7801\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u6709\u4e00\u4e9b\u95ee\u9898\u9700\u8981\u4fee\u590d\u3002\u4ee5\u4e0b\u662f\u6211\u7684\u4fee\u6539\uff1a\nDiff-r\u4f4e\u98ce\u9669\u7cfb\u7edf_TOP_earlGrey_Verilator_0.1~/workspaces/opentitan/build/lowrisc_systems_top_earlgrey_verilator_0.1 Diff-r lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_core_0.1/rtl/ibex_id_stage.sv/home/merle/workspaces/opentitan/build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_core_0.1/rtl/ibex_id_stage.sv 958c958&lt\uff1b-&gt\uff1b/*1021c1021&lt\uff1b-&gt\uff1b*/diff-r lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_tracer_0.1/rtl/ibex_tracer.sv.\u3002\n\u7531\u4e8eAssert\u8bed\u53e5\u4e0d\u53ef\u7efc\u5408\uff0c\u56e0\u6b64\u4e0d\u4f1a\u751f\u6210\u4efb\u4f55\u4ee3\u7801\u3002\u4f46\u662f\u6e90\u4ee3\u7801\u4e2d\u6709\u4e00\u4e9b\u57fa\u4e8e\u6761\u4ef6\u7684\u65ad\u8a00\uff0c\u8fd9\u5c06\u751f\u6210\u7a7a\u7684IF\u8bed\u53e5\u3002Yosys\u4e0d\u63a5\u53d7\u7a7a\u7684IF\u8bed\u53e5\u3002\n\u5728SystemVerilog\u4e2d\uff0c\u6d41\u6b4c\u5267", "note_en": "OpenTitan is the first open source project building a transparent, high-quality reference design and integration guidelines for silicon root of trust (RoT) chips.  Yosys is a free/libre and open source framework for RTL synthesis tools. It currently has extensive Verilog-2005 support and provides a basic set of synthesis algorithms for various application domains. OpenTitan is a systemverilog project, but currently yosys only supports a small subset of systemverilog. So we need  sv2vto convert the  ...\n     sv2v provides pre-built binaries, we can download from [release page] ( https://github.com/zachjs/sv2v/releases) according to our own system, then unzip to executable path.\n We can also build from source code. Since sv2v is a Haskell project, we need to install Haskell&#39;s build system on our computer, please refer to  Stack. Through the following command we can obtain the source code of sv2v and build an executable file.\n  When the command completes the executable file is located at  ./bin/sv2v. Copy the executable file to executable path, then the installation is complete.\n   If your system does not provide yosys, you can install from source code. Some prerequisites are need to build yosys, you can install the using the following command:\n sudo apt-get install build-essential clang bison flex \\\tlibreadline-dev gawk tcl-dev libffi-dev git \\\tgraphviz xdot pkg-config python3 libboost-system-dev \\\tlibboost-python-dev libboost-filesystem-dev zlib1g-dev\n Then you need to get the source code of yosys, get it by the following command:\n       OpenTitan is a complex project, it has some auxiliary programs to automatically generate some code. By reading the documentation, we can get the source code we need by the following command:\n sudo apt-get install autoconf bison build-essential clang-format curl flake8 \\ flex g++ git libelf1 libelf-dev libftdi1-2 libftdi1-dev libssl-dev \\ libusb-1.0-0 make ninja-build pkgconf python3 python3-pip \\ python3-setuptools python3-wheel python3-yaml srecord tree zlib1g-dev# install some python tools, execute in the path of opentitanpip3 install --user --requirement python-requirements.txt# Get gcc toolchain of riscv, execute in the path of opentitan./util/get-toolchain.py# install verilatorexport  ...\n Note: The execution of fusesoc above will cause an error, and the following corrections need to be made:\n diff --git a/hw/ip/prim/util/primgen.py b/hw/ip/prim/util/primgen.pyindex 49e73436..d22b3214 100755 --- a/hw/ip/prim/util/primgen.py +++ b/hw/ip/prim/util/primgen.py @@ -364,8 +364,8 @@ def _generate_abstract_impl(gapi): yaml.dump(abstract_prim_core, f, encoding=&#34;utf-8&#34;,  - default_flow_style=False,  - sort_keys=False)  + default_flow_style=False)#,  + #sort_keys=False) print(&#34;Core file written to %s&#34; % (abstract_prim_core_filepath, ))\n  There are a lot of declarative statements in systemverilog, and sv2v conversion of these statements will not generate any code. And the source code in the opentitan project lacks the include statement, sv2v will not find some declarations and definitions, which will cause some errors. So I need to create a file includes all the source code, the following is the file(opentitan.sv) I used:\n `include  &#34;build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_prim_all_0.1/rtl/prim_cipher_pkg.sv&#34; `include  &#34;build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ip_rstmgr_pkg_0.1/rtl/rstmgr_pkg.sv&#34; `include  &#34;build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_pkg_0.1/rtl/ibex_pkg.sv&#34; `include  &#34;build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_top_earlgrey_pinmux_reg_0.1/rtl/autogen/pinmux_reg_pkg.sv&#34; `include &#34;build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ip_hmac_0.1/rtl/hmac_pkg.sv&#34;  ...\n  # &#34;SYNTHESIS&#34; macro is used for conditional compilation to remove some non-synthesizable codesv2v -DSYNTHESIS -I build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_prim_assert_0.1/rtl opentitan.sv &gt; opentitan.v\n  The code generated by sv2v cannot be used directly, and there are some problems that need to be fixed. The following are my modifications:\n diff -r lowrisc_systems_top_earlgrey_verilator_0.1 ~/workspaces/opentitan/build/lowrisc_systems_top_earlgrey_verilator_0.1 diff -r lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_core_0.1/rtl/ibex_id_stage.sv /home/merle/workspaces/opentitan/build/lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_core_0.1/rtl/ibex_id_stage.sv 958c958  &lt;  ---  &gt; /* 1021c1021  &lt;  ---  &gt; */ diff -r lowrisc_systems_top_earlgrey_verilator_0.1/src/lowrisc_ibex_ibex_tracer_0.1/rtl/ibex_tracer.sv  ...\n  Since the assert statement is not synthesizable, no code will be generated. But there are some assertions in the source code based on the conditions, which will generate empty if statements. Yosys does not accept empty if statements.\n    In systemverilog, stream operators can easily implement endian conversion. sv2v will translate the stream manipulation into a complex function, causing yosys to report an error. We need to modify the corresponding code to achieve endian conversion by means of verilog. This code is located in  hmac_pkg.sv.\n  typedef logic [31:0] sha_word_t; function automatic sha_word_t conv_endian( input sha_word_t v, input logic swap); sha_word_t conv_data = {&lt;&lt;8{v}}; conv_endian = (swap) ? conv_data : v ; endfunction : conv_endian\n  typedef logic [31:0] sha_word_t; function automatic sha_word_t conv_endian( input sha_word_t v, input logic swap); conv_endian = (swap) ? {v[7:0], v[15:8], v[23:16], v[31:24]} : v ; endfunction : conv_endian\n  The strength syntax is not synthesizable, so the relevant code needs to be modified. The relevant code is located in the  prim_generic_pad_wrapper.sv file\n  // driving strength attributes are not supported by verilator`ifdef VERILATOR assign inout_io = (oe) ? out : 1&#39;bz;`else // different driver types assign (strong0, strong1) inout_io = (oe &amp;&amp; drv == STRONG_DRIVE) ? out : 1&#39;bz; assign (pull0, pull1) inout_io = (oe &amp;&amp; drv == WEAK_DRIVE) ? out : 1&#39;bz; // pullup / pulldown termination assign (highz0, weak1) inout_io = pu; assign (weak0, highz1) inout_io = ~pd; // fake trireg emulation assign (weak0, weak1)  ...\n  assign inout_io = (oe) ? out : 1&#39;bz;/*// driving strength attributes are not supported by verilator`ifdef VERILATOR assign inout_io = (oe) ? out : 1&#39;bz;`else // different driver types assign (strong0, strong1) inout_io = (oe &amp;&amp; drv == STRONG_DRIVE) ? out : 1&#39;bz; assign (pull0, pull1) inout_io = (oe &amp;&amp; drv == WEAK_DRIVE) ? out : 1&#39;bz; // pullup / pulldown termination assign (highz0, weak1) inout_io = pu; assign (weak0, highz1) inout_io = ~pd; //  ...\n  ibex_tracer is a module for outputting debugging and tracing information. It only has input signals no output signals. There are a large number of non-synthesizable codes. Errors will occur during synthesis, so comment out the module body.\n  The prim_lfsr module has a parameter named LfsrType, which is a string. Located in the file prim_lfsr.sv. There are some string comparison codes in the code. These codes use type conversion. Sv2v translates it into a function named sv2v_cast_64. This function will trigger an error. So modify the source code and compare the strings directly.\n    There are restrictions on using two-dimensional arrays in verilog. sv2v converts the two-dimensional array declaration statement to a one-dimensional array when performing code conversion, but does not modify the code to access the two-dimensional array, so you need to manually modify the code to access the two-dimensional array.\n  First, we need to create a synthetic script(build.ys) for yosys. The content is as follows:\n      You can take a look at LUTs usage. It&#39;s not looking good due to the LUTs might be over the limit of the chips I currently have. Both ice40( ~5k) and ecp5( ~20-~85k) won&#39;t make it. Either make the OpenTitan lose some &#34;weight&#34;( optimization/customization) or get more expensive FPGA products.  Virtex-7 FPGA VC707 and  Alveo U250 seems overkill( a bit?) and more importantly those high end device aren&#39;t support well by open/libre FPGA toolchain.  xc7should be  ...", "posttime": "2020-05-02 22:45:19", "tags": "opentitan,rtl,dev,code", "title": "\u57fa\u4e8eYosys\u7684OpenTitan RTL\u7efc\u5408", "title_en": "OpenTitan RTL Synthesis with Yosys", "transed": 1, "url": "https://github.com/hardenedlinux/embedded-iot_profile/blob/master/docs/opentitan/opentitan-rtl-synthesis-with-yosys.md", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["opentitan", "rtl", "dev", "code"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000362, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u91d1\u661f\u662f\u6211\u4eec\u592a\u9633\u7684\u7b2c\u4e8c\u9897\u884c\u661f\uff0c\u5728\u88ab\u6539\u9020\u6210\u4e00\u7247\u4e0d\u9002\u5b9c\u5c45\u4f4f\u7684\u8352\u5730\u4e4b\u524d\uff0c\u5b83\u53ef\u80fd\u6709\u6d77\u6d0b\uff0c\u9002\u5408\u751f\u547d\u5c45\u4f4f\u3002\n\u901a\u8fc7\u7814\u7a76\u91d1\u661f\uff0c\u79d1\u5b66\u5bb6\u4eec\u4e86\u89e3\u4e86\u7c7b\u5730\u884c\u661f\u662f\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5316\u7684\uff0c\u4ee5\u53ca\u5730\u7403\u5927\u5c0f\u7684\u884c\u661f\u56f4\u7ed5\u5176\u4ed6\u6052\u661f\u8fd0\u884c\u7684\u6761\u4ef6\u53ef\u80fd\u662f\u4ec0\u4e48\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e86\u89e3\u8ba1\u5212\u4e2d\u7684\u4efb\u52a1\u5e76\u5206\u4eab\u592a\u7a7a\u7684\u6fc0\u60c5\u3001\u7f8e\u4e3d\u548c\u559c\u60a6\u6765\u5e2e\u52a9\u6211\u4eec\u5efa\u7acb\u516c\u4f17\u5bf9\u91d1\u661f\u63a2\u7d22\u7684\u652f\u6301\u3002\n\u592a\u9633\u4ece\u4e1c\u65b9\u5347\u8d77\uff0c\u5728\u897f\u65b9\u843d\u4e0b\uff0c\u9664\u975e\u4f60\u5728\u91d1\u661f\u4e0a\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u7ed5\u7740\u8f74\u5fc3\u4ee5\u4e0e\u5176\u4ed6\u884c\u661f\u76f8\u53cd\u7684\u65b9\u5411\u65cb\u8f6c\uff0c\u6ca1\u6709\u4eba\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\u8fd9\u53ea\u662f\u91d1\u661f\u4f17\u591a\u8c1c\u56e2\u4e2d\u7684\u4e00\u4e2a\uff0c\u91d1\u661f\u662f\u4e00\u7247\u4e91\u5c42\u7b3c\u7f69\u7684\u5730\u72f1\uff0c\u5927\u6c14\u5bc6\u5ea6\u662f\u5730\u7403\u768450\u500d\uff0c\u8868\u9762\u5e73\u5747\u6e29\u5ea6\u4e3a470\u6444\u6c0f\u5ea6(878\u534e\u6c0f\u5ea6)-\u70ed\u5230\u8db3\u4ee5\u878d\u5316\u94c5\u3002\n\u91d1\u661f\u76ee\u524d\u5e76\u4e0d\u9002\u5b9c\u5c45\u4f4f\uff0c\u4f46\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u8fd9\u6837\u3002\u90a3\u91cc\u7684\u4efb\u52a1\u89c2\u5bdf\u5230\u8868\u9762\u6709\u82b1\u5c97\u5ca9\u6837\u7684\u5ca9\u77f3\uff0c\u9700\u8981\u5927\u91cf\u7684\u6c34\u624d\u80fd\u5f62\u6210\u3002\u5728\u592a\u9633\u8f83\u51b7\u7684\u65e9\u671f\u592a\u9633\u7cfb\uff0c\u79d1\u5b66\u5bb6\u4eec\u8ba4\u4e3a\u8be5\u884c\u661f\u8868\u9762\u53ef\u80fd\u5b58\u5728\u6db2\u6001\u6c34\u5df2\u670920\u4ebf\u5e74\u4e4b\u4e45--\u8fdc\u8fdc\u957f\u4e8e\u706b\u661f\uff0c\u540e\u8005\u53ef\u80fd\u5b58\u5728\u6db2\u6001\u6c34\u5df2\u67093\u4ebf\u5e74\u4e4b\u4e45\u3002\u6b63\u5982\u6211\u4eec\u6240\u77e5\uff0c\u6c34\u662f\u751f\u547d\u7684\u5173\u952e\uff0c\u90a3\u4e48\u91d1\u661f\u66fe\u7ecf\u6709\u8fc7\u751f\u547d\u5417\uff1f\n\u91d1\u661f\u662f\u592a\u9633\u7cfb\u4e2d\u6700\u70ed\u7684\u884c\u661f\uff0c\u5c3d\u7ba1\u6c34\u661f\u79bb\u592a\u9633\u7684\u8ddd\u79bb\u662f\u592a\u9633\u7684\u4e24\u500d\uff0c\u63a5\u6536\u7684\u592a\u9633\u80fd\u4e5f\u662f\u6c34\u661f\u7684\u56db\u500d\u3002\u539f\u56e0\u5462\uff1f\u6c34\u661f\u6ca1\u6709\u5927\u6c14\u5c42\uff0c\u800c\u91d1\u661f\u539a\u539a\u7684\u4e8c\u6c27\u5316\u78b3\u5927\u6c14\u5c42\u9020\u6210\u4e86\u5931\u63a7\u7684\u6e29\u5ba4\u6548\u5e94\uff0c\u56f0\u4f4f\u4e86\u70ed\u91cf\u3002\n\u91d1\u661f\u662f\u5982\u4f55\u4ece\u4e00\u4e2a\u6f5c\u5728\u7684\u5b9c\u5c45\u4e16\u754c\u8f6c\u53d8\u5230\u73b0\u5728\u7684\u72b6\u6001\u7684\uff0c\u6211\u4eec\u4e0d\u5f97\u800c\u77e5\u3002\u5b83\u539a\u539a\u7684\u5927\u6c14\u5c42\u5438\u6536\u4e86\u6765\u81ea\u592a\u9633\u7684\u70ed\u91cf\uff0c\u9020\u6210\u4e86\u5931\u63a7\u7684\u6e29\u5ba4\u6548\u5e94\uff0c\u70e4\u7126\u4e86\u5730\u7403\u3002\u901a\u8fc7\u7814\u7a76\u91d1\u661f\uff0c\u79d1\u5b66\u5bb6\u4eec\u4e86\u89e3\u4e86\u7c7b\u4f3c\u5730\u7403\u7684\u884c\u661f\u662f\u5982\u4f55\u8fdb\u5316\u7684\uff0c\u4ee5\u53ca\u5730\u7403\u5927\u5c0f\u7684\u7cfb\u5916\u884c\u661f\u4e0a\u5b58\u5728\u54ea\u4e9b\u6761\u4ef6\u3002\u91d1\u661f\u8fd8\u5e2e\u52a9\u79d1\u5b66\u5bb6\u6a21\u62df\u5730\u7403\u7684\u6c14\u5019\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u8b66\u793a\u6545\u4e8b\uff0c\u8bf4\u660e\u4e00\u4e2a\u661f\u7403\u7684\u6c14\u5019\u53ef\u80fd\u4f1a\u53d1\u751f\u591a\u4e48\u620f\u5267\u6027\u7684\u53d8\u5316\u3002\n\u76ee\u524d\u5728\u91d1\u661f\u4e0a\u5c42\u5927\u6c14\u4e2d\u5b58\u5728\u5fae\u751f\u7269\u751f\u547d\u7684\u53ef\u80fd\u6027\u4e5f\u5f88\u5c0f\uff0c\u90a3\u91cc\u795e\u79d8\u7684\u6697\u6591\u5438\u6536\u4e86\u5730\u7403\u63a5\u6536\u5230\u7684\u4e00\u534a\u4ee5\u4e0a\u7684\u592a\u9633\u80fd\u3002\u8fd9\u4e00\u533a\u57df\u4f4d\u4e8e\u5730\u8868\u4e0a\u65b9\u7ea650\u516c\u91cc\u5904\uff0c\u5176\u6e29\u5ea6\u548c\u538b\u529b\u4e0e\u5730\u7403\u76f8\u4f3c\u3002\u5e73\u5747\u800c\u8a00\uff0c\u91d1\u661f\u4e0e\u5730\u7403\u7684\u8ddd\u79bb\u51e0\u4e4e\u662f\u706b\u661f\u76843\u500d\uff0c\u901a\u5e38\u5728\u6211\u4eec\u7684\u5929\u7a7a\u4e2d\u50cf\u4e00\u9897\u660e\u4eae\u7684\u591c\u661f\u4e00\u6837\u95ea\u8000\u7740\u5149\u8292\u3002\u6211\u4eec\u662f\u4e0d\u662f\u5728\u9519\u8bef\u7684\u661f\u7403\u4e0a\u5bfb\u627e\u751f\u547d\uff1f\n\u91d1\u661f\u662f\u7b2c\u4e00\u4e2a\u88ab\u5b87\u5b99\u98de\u8239\u8bbf\u95ee\u7684\u884c\u661f\u30021962\u5e74\uff0cNASA\u7684\u201c\u6c34\u624b2\u53f7\u201d\u98de\u8fc7\u8fd9\u9897\u884c\u661f\uff0c\u53d1\u73b0\u5b83\u662f\u4e00\u4e2a\u6ca1\u6709\u81ea\u751f\u78c1\u573a\u7684\u708e\u70ed\u4e16\u754c\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u82cf\u8054\u6210\u4e3a\u65e9\u671f\u91d1\u661f\u63a2\u6d4b\u7684\u4e16\u754c\u9886\u5148\u8005\uff0c\u5411\u91d1\u661f\u53d1\u5c04\u4e86\u591a\u4e2a\u5927\u6c14\u63a2\u6d4b\u5668\u548c\u591a\u8fbe10\u4e2a\u7740\u9646\u5668\u3002\u76f4\u5230\u4eca\u5929\uff0c\u4ed6\u4eec\u4ecd\u7136\u662f\u552f\u4e00\u4e00\u4e2a\u5c06\u822a\u5929\u5668\u964d\u843d\u5728\u5730\u7403\u8868\u9762\u5e76\u5c06\u6570\u636e\u548c\u56fe\u50cf\u4f20\u56de\u5730\u7403\u7684\u56fd\u5bb6\u3002\n\u884c\u661f\u534f\u4f1a\u8054\u5408\u521b\u59cb\u4eba\u4e4b\u4e00\u5361\u5c14\u00b7\u8428\u6839(Carl Sagan)\u65e9\u671f\u7684\u79d1\u5b66\u51fa\u7248\u7269\u4f7f\u7528\u65e0\u7ebf\u7535\u89c2\u6d4b\u6765\u9884\u6d4b\u53ef\u80fd\u7684\u91d1\u661f\u8868\u9762\u6e29\u5ea6\u3002\n\u7531\u4e8e\u4e91\u5c42\u5f88\u539a\uff0c\u6ca1\u6709\u96f7\u8fbe\u662f\u4e0d\u53ef\u80fd\u770b\u5230\u91d1\u661f\u8868\u9762\u7684\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u4e8e1990\u5e74\u53d1\u5c04\u7684\u9ea6\u54f2\u4f26\u8f68\u9053\u5668\uff0c\u4f7f\u7528\u96f7\u8fbe\u7ed8\u5236\u4e86\u91d1\u661f\u8868\u9762\u7684\u5730\u56fe\uff0c\u5206\u8fa8\u7387\u8fbe\u5230\u4e86\u8fc4\u4eca\u4e3a\u6b62\u7684\u6700\u9ad8\u6c34\u5e73\u3002\u9ea6\u54f2\u4f26\u900f\u9732\uff0c\u5730\u7403\u4e0a\u6240\u6709\u7684\u649e\u51fb\u5751\u90fd\u662f\u5728\u8fc7\u53bb7\u4ebf\u5e74\u5185\u5f62\u6210\u7684\u3002\u8fd9\u610f\u5473\u7740\u91d1\u661f\u7684\u8868\u9762\u5728\u5b83\u6700\u8fd1\u7684\u5730\u8d28\u5386\u53f2\u4e2d\u88ab\u4e00\u6b21\u4e16\u754c\u6027\u7684\u706b\u5c71\u4e8b\u4ef6\u5b8c\u5168\u91cd\u5851\u4e86--\u4f46\u662f\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u4ecd\u7136\u662f\u6709\u4e89\u8bae\u7684\u3002\n\u9ea6\u54f2\u4f26\u4e5f\u6ca1\u6709\u53d1\u73b0\u677f\u5757\u6784\u9020\u7684\u8ff9\u8c61\u3002\u5728\u5730\u7403\u4e0a\uff0c\u677f\u5757\u6784\u9020\u662f\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5730\u7403\u5916\u58f3\u7684\u4e00\u90e8\u5206\u6ed1\u8fc7\u5730\u5e54-\u6838\u5fc3\u4e0a\u65b9\u7684\u5ca9\u77f3\u5185\u5c42-\u5141\u8bb8\u70ed\u91cf\u901a\u8fc7\u706b\u5c71\u6d3b\u52a8\u9003\u9038\u3002\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u91d1\u661f\u7684\u5185\u90e8\u4e0e\u5730\u7403\u76f8\u4f3c\uff0c\u7f3a\u4e4f\u677f\u5757\u6784\u9020\u610f\u5473\u7740\u91d1\u661f\u4e0a\u7684\u706b\u5c71\u4e00\u5b9a\u4e0e\u5730\u7403\u4e0a\u7684\u4e0d\u540c\u3002\n\u6b27\u6d32\u822a\u5929\u5c40\u57282006\u5e74\u53d1\u5c04\u4e86\u91d1\u661f\u5feb\u8f66\u8f68\u9053\u98de\u884c\u5668\u3002\u901a\u8fc7\u89c2\u5bdf\u91d1\u661f\u8868\u9762\u7684\u70ed\u70b9\u548c6\u5e74\u6765\u5927\u6c14\u4e2d\u4e8c\u6c27\u5316\u786b\u6c34\u5e73\u7684\u53d8\u5316\uff0c\u822a\u5929\u5668\u6536\u96c6\u4e86\u8fc4\u4eca\u4e3a\u6b62\u91d1\u661f\u4e0a\u6d3b\u706b\u5c71\u6d3b\u52a8\u7684\u6700\u597d\u8bc1\u636e\u3002\u91d1\u661f\u5feb\u8f66\u8fd8\u5728\u5730\u7403\u5404\u5730\u53d1\u73b0\u4e86\u7c7b\u4f3c\u82b1\u5c97\u5ca9\u7684\u5ca9\u77f3\uff0c\u9700\u8981\u5927\u91cf\u7684\u6db2\u6001\u6c34\u624d\u80fd\u5f62\u6210\uff0c\u8fd9\u5de9\u56fa\u4e86\u5730\u7403\u8fc7\u53bb\u6709\u6d77\u6d0b\u7684\u60f3\u6cd5\u3002\n\u65e5\u672c\u7684Akatsuki\u5b87\u5b99\u98de\u8239\u662f\u76ee\u524d\u552f\u4e00\u7ed5\u91d1\u661f\u8fd0\u884c\u7684\u63a2\u6d4b\u5668\u3002\u5b83\u4ee5\u4eba\u773c\u770b\u4e0d\u5230\u7684\u5149\u7684\u9891\u7387\u7814\u7a76\u91d1\u661f\u7684\u5927\u6c14\uff0c\u8fd9\u6709\u52a9\u4e8e\u79d1\u5b66\u5bb6\u66f4\u597d\u5730\u63cf\u7ed8\u51fa\u5730\u7403\u8868\u9762\u4e0a\u65b9\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u56fe\u50cf\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u521b\u5efa\u7f8e\u4e3d\u7684\u589e\u5f3a\u5f69\u8272\u5730\u7403\u56fe\u7247\u3002\n\u5728\u8fc7\u53bb\u768430\u5e74\u91cc\uff0c\u53ea\u67093\u6b21\u4efb\u52a1\u8bbf\u95ee\u8fc7\u91d1\u661f\uff0c\u8bb8\u591a\u79d1\u5b66\u5bb6\u89c9\u5f97\u65b0\u7684\u4efb\u52a1\u65e9\u5c31\u8be5\u6765\u4e86\u3002\u4e00\u8258\u88c5\u6709\u66f4\u9ad8\u5206\u8fa8\u7387\u96f7\u8fbe\u7684\u5b87\u5b99\u98de\u8239\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u5f00\u91d1\u661f\u8868\u9762\u5728\u6d1b\u6749\u77f6\u7684\u53d8\u5316\u4e4b\u8c1c\u3002", "note_en": "Venus, the 2nd planet from our Sun, may have had oceans and been habitable to life before being transformed into an inhospitable wasteland.\n  By studying Venus, scientists learn how Earth-like planets change over time, and what conditions on Earth-sized planets orbiting other stars might be like.\n  You can help us build public support for the exploration of Venus by learning about proposed missions and sharing the passion, beauty, and joy of space.\n    The Sun rises in the east and sets in the west, except if you are on Venus. That\u2019s because it rotates on its axis in the opposite direction from other planets, and nobody knows why. This is just one of the many mysteries of Venus, a cloud-shrouded hellscape with an atmosphere 50 times denser than Earth\u2019s, and average surface temperatures of 470 degrees Celsius (878 degrees Fahrenheit)\u2014hot enough to melt lead.\n  Venus is currently inhospitable, but it wasn\u2019t always that way. Missions there have observed  granite-like rocks on the surface, which require abundant water to form. In the early solar system when the Sun was cooler, scientists think the planet may have had  liquid water on the surface for 2 billion years\u2014far longer than Mars, which may have had liquid water for  300 million years. Water is the key to life as we know it, so did Venus once have life?\n  Venus is the hottest planet in the solar system, even though Mercury is twice as close to the Sun and receives 4 times more solar energy. The reason? Mercury has no atmosphere, whereas Venus\u2019 thick, carbon dioxide atmosphere creates a runaway greenhouse effect, trapping in heat.\n  How Venus transformed from a potentially habitable world to its current state is unknown. Its thick atmosphere traps in heat from the Sun, creating a runaway greenhouse effect that bakes the planet. By studying Venus, scientists learn how Earth-like planets evolve and what conditions exist on Earth-sized exoplanets. Venus also helps scientists model Earth\u2019s climate, and serves as a cautionary tale on how dramatically a planet\u2019s climate can change.\n  There is also a  slim chance microbial life currently exists in Venus\u2019s upper atmosphere, where mysterious dark patches absorb more than half the solar energy the planet receives. This region, approximately 50 kilometers above the surface, has Earth-like temperatures and pressures. Venus is on average almost 3 times closer to Earth than Mars, often shining as a bright evening star in our skies. Have we been looking for life on the wrong planet?\n    Venus was the first planet to be visited by a spacecraft. In 1962, NASA\u2019s  Mariner 2 flew by the planet and discovered it was a hot world with no self-generated magnetic field. The Soviet Union became the world leader in early Venus exploration after that, sending multiple atmospheric probes and as many as ten landers to the planet. To this day, they remain the only nation to have landed spacecraft on the surface and transmitted both data and images back to Earth.\n  One of Planetary Society co-founder Carl Sagan&#39;s  early scientific publications used radio observations to predict possible Venus surface temperatures.\n    Due to thick clouds, it is impossible to see Venus\u2019 surface without radar. NASA\u2019s Magellan orbiter, launched in 1990, used radar to map Venus\u2019 surface at the highest resolution to date. Magellan revealed that all of the planet\u2019s impact craters are formed  within the last 700 million years. This implies that Venus\u2019 surface was completely reshaped by a worldwide volcanic event in its recent geologic past\u2014but  exactly what happened is still up for debate.\n  Magellan also found no sign of plate tectonics. On Earth, plate tectonics is a process in which sections of the planet\u2019s outer crust glide over the mantle\u2014the rocky inner layer above the core\u2014allowing heat to escape through volcanism. Since we think Venus\u2019s interior is similar to Earth&#39;s, the lack of plate tectonics means that volcanoes on Venus must work differently than on Earth.\n    The European Space Agency launched the Venus Express orbiter in 2006. By observing  hotspots on the surface and  changing sulfur dioxide levels in the atmosphere over 6 years, the spacecraft collected the best evidence yet of active volcanism on Venus. Venus Express also discovered granite-like rocks across the planet that require abundant liquid water to form, solidifying the idea of the planet having past oceans.\n  Japan\u2019s Akatsuki spacecraft is the only probe currently orbiting Venus. It studies Venus\u2019s atmosphere in frequencies of light that human eyes cannot see, which helps scientists paint a better picture of what\u2019s happening above the planet\u2019s surface. These images can be processed to  create beautiful enhanced -color  pictures of the planet.\n    Only 3 missions have visited Venus in the past 30 years, and many scientists feel  new missions are long overdue. A spacecraft with a higher-resolution radar could help us solve the mystery of how Venus\u2019s surface changed within the last billion years. Landers and atmospheric probes would analyze the extent that water may have existed on the surface, what the planet\u2019s atmosphere was like, and how it changed into its present-day state.\n  India aims to launch a Venus orbiter called Shukrayaan (English: \u201cVenus craft\u201d) in 2023 equipped with a radar and infrared camera to map the surface. The spacecraft has a total of 12 instruments, and India\u2019s space agency ISRO has  called for instrument proposals in which scientists from international space agencies, including NASA, are expected to participate.\n  In February 2020  NASA announced the selection of 4 mission concepts that are under consideration to fly as part of the agency\u2019s low-cost Discovery program. Two are Venus missions:\n  DAVINCI+ (Deep Atmosphere Venus Investigation of Noble gases, Chemistry, and Imaging Plus) consists of an orbiter and an atmospheric descent probe. The probe would make high precision measurements of trace gases in Venus\u2019 atmosphere, helping firmly determine how much water Venus\u2019 oceans had and how long they existed.\n  VERITAS (Venus Emissivity, Radio Science, InSAR, Topography, and Spectroscopy) would have a radar instrument with up to 100 times higher resolution than Magellan. This would give scientists a better handle on Venus\u2019 geology and evolution and also reveal why the planet lacks large-scale plate tectonics.\n  The Planetary Society is following NASA\u2019s decision whether to select a future Venus mission, as well as the scientific community&#39;s upcoming effort to prioritize exploration targets for the next decade. Sign up for our weekly email newsletter,  The Downlink, to learn about new developments.\n    Sign up for The Downlink, our weekly toolkit that contains news, announcements, and actions you can take to support space science and exploration.\n  Take our Space Advocacy 101 course to learn the inner works of NASA, how Congress develops space legislation, and how to engage with your elected officials.\n  Share this page with a friend, spread the word on social media, and tell others about the importance of knowing the cosmos and our place within it.\n  This page was initially written by  Jatan Mehta in 2020 and is regularly revised and updated by Planetary Society staff writers.\n  Become a member of The Planetary Society and together we will create the future of space exploration.\n      Login  \u00a9 2019 The Planetary Society. All rights reserved.  Privacy Policy \u2022  Cookie Declaration The Planetary Society is a registered 501(c)(3) nonprofit organization.", "posttime": "2020-05-02 22:44:59", "tags": "\u706b\u661f,\u65f6\u95f4,venus,\u91d1\u661f", "title": "\u4e00\u9897\u5e74\u8f7b\u7684\u91d1\u661f\u6709\u6c34\u5b58\u5728\u4e862B\u5e74\uff0c\u53ef\u5c45\u4f4f\u7684\u65f6\u95f4\u6bd4\u706b\u661f\u8fd8\u957f", "title_en": "A young Venus had water for 2B years, habitable for longer than Mars", "transed": 1, "url": "https://www.planetary.org/explore/space-topics/venus/venus.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u706b\u661f", "\u65f6\u95f4", "venus", "\u91d1\u661f"]}, {"category": "", "categoryclass": "", "imagename": "1153cdc9f38d6d108d76837a75ea75d2.jpg", "infoid": 1000361, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4e00\u79cd\u4ee5\u5176\u4e30\u5bcc\u6027\u3001\u6301\u4e45\u6027\u548c\u6700\u4f4e\u4ef7\u800c\u95fb\u540d\u7684\u7269\u8d28\uff0c\u5c18\u571f\u6709\u4e00\u4e2a\u6c38\u6052\u7684\u8c1c\u56e2\uff1a\u5b83\u6765\u81ea\u54ea\u91cc\uff1f\n\u4e00\u822c\u6765\u8bf4\uff0c\u5b83\u4f4d\u4e8e\u5730\u8d28\u3001\u6c14\u8c61\u548c\u65f6\u95f4\u7684\u4ea4\u6c47\u70b9\u4e0a\u3002\u5ca9\u77f3\u56e0\u98ce\u5316\u800c\u53d8\u6210\u6ce5\u571f\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u4eba\u7c7b\u5fc5\u7136\u5f88\u96be\u89c2\u5bdf\u5230\u7684\u8fc7\u7a0b\u3002\n\u957f\u671f\u4ee5\u6765\uff0c\u4eba\u4eec\u4e00\u76f4\u8ba4\u4e3a\u751f\u547d\u4ee5\u67d0\u79cd\u65b9\u5f0f\u53c2\u4e0e\u4e86\u5176\u4e2d(\u5728\u5730\u7403\u4e0a\uff0c\u51e0\u4e4e\u6ca1\u6709\u751f\u547d\u53c2\u4e0e\u5176\u4e2d)\uff0c\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\u8fd9\u5728\u7406\u8bba\u4e0a\u662f\u53ef\u80fd\u7684\u3002\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u4eba\u5728\u666e\u901a\u7c7b\u578b\u7684\u7845\u9178\u94c1\u548c\u5927\u9646\u5ca9\u4e2d\u89c2\u5bdf\u5230\u8fc7\u8fd9\u4e00\u70b9\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u98ce\u5316\u53cd\u5e94\u901f\u5ea6\u4e0e\u79d1\u5b66\u5bb6\u7684\u804c\u4e1a\u901f\u5ea6\u4e4b\u95f4\u5b58\u5728\u7740\u4ee4\u4eba\u62c5\u5fe7\u7684\u5de8\u5927\u5dee\u8ddd\u3002\n\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u9ea6\u8fea\u900a\u5206\u6821\u3001\u5e03\u91cc\u65af\u6258\u5c14\u5927\u5b66\u548c\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u7acb\u5927\u5b66\u7684\u65e0\u754f\u79d1\u5b66\u5bb6\u767b\u573a\uff0c\u4ed6\u4eec\u51b3\u5b9a\u8fdb\u884c\u4e00\u9879\u4e3a\u671f\u4e24\u5e74\u534a\u7684\u5b9e\u9a8c\uff0c\u770b\u770b\u5fae\u751f\u7269\u751f\u547d\u5728\u5ca9\u77f3\u4e0a\u7684\u80fd\u529b\u6709\u591a\u5f3a\uff0c\u800c\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u5fc5\u987b\u60f3\u51fa\u5404\u79cd\u65b9\u6cd5\u6765\u6309\u4e0b\u5feb\u8fdb\u952e\u3002\n\u4e00\u79cd\u65b9\u6cd5\u662f\u627e\u5230\u98ce\u5316\u5feb\u7684\u5ca9\u77f3\u3002\u6ce2\u591a\u9ece\u5404\u91cc\u7ea6\u70ed\u5185\u5362\u51b0\u5ddd\u5206\u6c34\u5cad\u4e0b\u7684\u91cc\u7ea6\u5e03\u5170\u79d1\u77f3\u82f1\u95ea\u957f\u5ca9\u57fa\u5ca9\u98ce\u5316\u5f02\u5e38\u8fc5\u901f\uff0c\u4f7f\u5176\u6210\u4e3a\u6309\u53ef\u516c\u5e03\u7684\u65f6\u95f4\u5c3a\u5ea6\u8fdb\u884c\u5b9e\u9a8c\u7684\u8bf1\u4eba\u76ee\u6807\u3002\u79d1\u5b66\u5bb6\u4eec\u4ece\u4e00\u4e2a\u8def\u5811\u4ee5\u53ca\u4ece\u4e0a\u65b9\u94bb\u5165\u5730\u5c42\u7684\u957f\u7ba1\u571f\u58e4\u548c\u5ca9\u77f3\u4e2d\u63d0\u53d6\u4e86\u7eaf\u57fa\u5ca9\u7684\u6837\u672c\u3002\u8fd9\u4e9b\u5ca9\u5fc3\u4e2d\u5305\u62ec\u7834\u788e\u7684\u57fa\u5ca9\u4e0e\u65b0\u751f\u571f\u8109\u76f8\u95f4\u7684\u8fc7\u6e21\u5e26\u3002\n\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u5c42\u6700\u6df1\u7684\u571f\u58e4\u4e2d\uff0cATP-\u4e00\u79cd\u7531\u65b0\u9648\u4ee3\u8c22\u7ec6\u80de\u4ea7\u751f\u7684\u5316\u5b66\u7269\u8d28-\u6bd4\u571f\u58e4\u7684\u4efb\u4f55\u5176\u4ed6\u90e8\u5206\u90fd\u8981\u4e30\u5bcc\uff0c\u9664\u4e86\u5730\u8868\uff0c\u90a3\u91cc\u6709\u690d\u7269\u548c\u52a8\u7269\u4e22\u5f03\u7684\u8425\u517b\u5783\u573e\uff0c\u4ee5\u53ca\u5145\u8db3\u7684\u6c27\u6c14\uff0c\u4e3a\u70ed\u95f9\u7684\u751f\u957f\u63d0\u4f9b\u4e86\u71c3\u6599\u3002\u6240\u4ee5\u4e0b\u9762\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u95ee\u9898\u662f\uff1a\u4ec0\u4e48\uff1f\n\u5982\u679c\u771f\u7684\u53d1\u751f\u4e86\u751f\u7269\u98ce\u5316\uff0c\u90a3\u5c31\u6d89\u53ca\u5230\u7535\u5b50\u4e86\u3002\u7535\u5b50\u662f\u5e26\u8d1f\u7535\u7684\u7c92\u5b50\uff0c\u56f4\u7ed5\u539f\u5b50\u6838\u8fd0\u884c\u3002\u4e00\u4e2a\u539f\u5b50\u4e2d\u7684\u7535\u5b50\u6570\u76ee\u901a\u5e38\u662f\u4e0d\u540c\u7684\u3002\u542b\u6709\u8f83\u591a\u7535\u5b50\u7684\u7248\u672c\u79f0\u4e3a\u8fd8\u539f\u7248\u672c\uff0c\u800c\u5305\u542b\u8f83\u5c11\u7535\u5b50\u7684\u7248\u672c\u79f0\u4e3a\u6c27\u5316\u7248\u672c\u3002\n\u6240\u6709\u751f\u7269\u90fd\u5728\u73a9\u5f04\u7535\u5b50\uff0c\u901a\u5e38\u662f\u5c06\u5b83\u4eec\u4ece\u7cd6\u548c\u5176\u4ed6\u8fd8\u539f\u7684\u6709\u673a\u5316\u5408\u7269(\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u98df\u7269\u201d\u7684\u4e1c\u897f)\u4e2d\u5265\u79bb\u51fa\u6765\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u7535\u5b50\u901a\u8fc7\u7ec6\u80de\u547c\u5438\u4e3a\u5b83\u4eec\u7684\u7ec6\u80de\u4f9b\u7535\u3002\u4f46\u662f\u4e00\u4e9b\u5fae\u751f\u7269\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u65e0\u673a\u5316\u5408\u7269\u6216\u539f\u5b50\u4f5c\u4e3a\u7535\u5b50\u6e90\u3002\u90a3\u4e9b\u53ef\u4ee5\u5229\u7528\u77f3\u5934\u4f5c\u4e3a\u7535\u5b50\u6e90\u7684\u7269\u8d28\u88ab\u79f0\u4e3a\u517b\u77f3\u5668\u3002\u4ed6\u4eec\u5403\u77f3\u5934\u3002\n\u5bcc\u542b\u8fd8\u539f\u94c1\u7684\u77ff\u7269\uff0c\u5982\u9ec4\u94c1\u77ff(\u611a\u4eba\u91d1)\u3001\u9ed1\u4e91\u6bcd\u548c\u89d2\u95ea\u77f3\u662f\u6f5c\u5728\u7684\u7ec6\u83cc\u98df\u7269\u3002\u7535\u5b50\u5265\u79bb\u5bf9\u8fd9\u4e9b\u77ff\u7269\u9020\u6210\u7684\u7269\u7406\u53d8\u5316\u5e94\u8be5\u4f1a\u542f\u52a8\u5b83\u4eec\u7684\u5316\u5b66\u6eb6\u89e3\u8fc7\u7a0b--\u4e5f\u5c31\u662f\u98ce\u5316\u3002\u5728\u663e\u5fae\u955c\u4e0b\uff0c\u8fd9\u5e94\u8be5\u662f\u67d0\u79cd\u7269\u7406\u53d8\u5316\u3002\n\u56e0\u6b64\uff0c\u79d1\u5b66\u5bb6\u4eec\u628a\u4ed6\u4eec\u9ad8\u5ea6\u8010\u5019\u7684\u5ca9\u77f3\u548c\u542b\u6709\u5fae\u751f\u7269\u7684\u571f\u58e4\u5e26\u56de\u4e86\u5bb6\uff0c\u5e76\u901a\u8fc7\u7814\u78e8\u5ca9\u77f3\u6765\u8fdb\u4e00\u6b65\u52a0\u901f\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u589e\u52a0\u4e86\u5ca9\u77f3\u7684\u8868\u9762\u79ef\u3002\u4ed6\u4eec\u628a\u788e\u77f3\u548c\u5fae\u751f\u7269\u6df7\u5408\u5728\u4e00\u8d77\u3002\n\u4e24\u4e2a\u751f\u65e5\u3001\u4e24\u4e2a\u5723\u8bde\u8282\u548c\u4e24\u4e2a\u6240\u5f97\u7a0e\u7533\u62a5\u622a\u6b62\u65e5\u671f\u8fc7\u53bb\u4e86\uff0c\u4ed6\u4eec\u4ecd\u7136\u5728\u7b49\u5f85\u3002\n30\u4e2a\u6708\u540e\uff0c\u4ed6\u4eec\u628a\u6837\u672c\u653e\u5728\u663e\u5fae\u955c\u4e0b\u3002\u4e0e\u5fae\u751f\u7269\u4e00\u8d77\u5b75\u5316\u7684\u77ff\u7269\u8d28\u5728864\u5929\u7684\u5b75\u5316\u540e\u770b\u8d77\u6765\u7c97\u7cd9\u6216\u51f9\u9677-\u5c31\u50cf\u5b83\u4eec\u6d78\u6ce1\u5728\u9178\u4e2d\uff0c\u800c\u4e0d\u662f\u7ec6\u83cc\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u65e0\u83cc\u5bf9\u7167\u77ff\u7269\u4fdd\u7559\u4e86\u950b\u5229\u3001\u5149\u6ed1\u7684\u8fb9\u7f18\u3002\n\u79d1\u5b66\u5bb6\u4eec\u8fd8\u5728\u5305\u62ec\u5fae\u751f\u7269\u7684\u6df7\u5408\u7269\u4e2d\u68c0\u6d4b\u5230\u4e30\u5bcc\u7684ATP\uff0c\u8fd9\u8868\u660e\u4ed6\u4eec\u6b63\u5728\u5927\u5403\u5927\u559d\u3002\u8bb0\u4f4f\uff1a\u9664\u4e86\u788e\u77f3\uff0c\u7edd\u5bf9\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u5927\u5403\u5927\u559d\u7684\u3002\n\u53e6\u4e00\u4e2a\u8c1c\u56e2\u4ecd\u7136\u5b58\u5728\uff1a\u662f\u8c01\u5728\u5403\u8fd9\u4e9b\u5ca9\u77f3\uff1f\u5f53\u79d1\u5b66\u5bb6\u4eec\u68c0\u67e5\u4ed6\u4eec\u6837\u672c\u4e2d\u7684\u5fae\u751f\u7269\u7684DNA\u65f6\uff0c\u4ed6\u4eec\u51e0\u4e4e\u53ea\u53d1\u73b0\u4e86\u7ec6\u83cc\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u57f9\u517b\u4e2d\u7f3a\u5931\u7684\u662f\u771f\u83cc\u3002\u83cc\u6839\u771f\u83cc\u4e0e\u6811\u6839\u76f8\u5173\uff0c\u5e76\u4ea7\u751f\u8bb8\u591a\u719f\u6089\u7684\u68ee\u6797\u8611\u83c7\uff0c\u6b63\u5982\u6211\u51e0\u5e74\u524d\u4e0eRadiolaba\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u4e5f\u4ee5\u5728\u571f\u58e4\u4e2d\u5f00\u91c7\u5ca9\u77f3\u9897\u7c92\u7684\u80fd\u529b\u800c\u95fb\u540d\u3002\u79d1\u5b66\u5bb6\u4eec\u8ba4\u4e3a\u771f\u83cc\u7684\u6570\u91cf\u3002\n\u4ed6\u4eec\u786e\u5b9e\u53d1\u73b0\u7684\u76ca\u77f3\u83cc\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u80fd\u529b\uff1a\u80fd\u591f\u4ece\u4f53\u5916\u7684\u94c1\u539f\u5b50\u4e2d\u83b7\u53d6\u7535\u5b50\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u4e0d\u541e\u54bd\u98df\u7269\u7684\u60c5\u51b5\u4e0b\u5403\u4e1c\u897f\u3002\u7ec6\u83cc\u901a\u8fc7\u4e00\u79cd\u79f0\u4e3a\u5916\u90e8\u7535\u5b50\u8f6c\u79fb\u7684\u6280\u672f\u201c\u541e\u566c\u201d\u7535\u5b50\u3002\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u94c1\u539f\u5b50\u662f\u77ff\u7269\u8d28\u7684\u4e00\u90e8\u5206\uff0c\u800c\u7ec6\u83cc\u6ca1\u6709\u9632\u62a4\u680f\u6216\u5176\u4ed6\u65b9\u6cd5\u6765\u64ac\u52a8\u5b83\u4eec\u3002\u4f46\u662f\u8fd9\u6837\u505a\u8fd8\u6709\u53e6\u4e00\u4e2a\u597d\u5904\uff1a\u2026\u2026\u3002\n\u56e0\u6b64\uff0c\u7ec6\u83cc\u4f3c\u4e4e\u786e\u5b9e\u80fd\u591f\u542f\u52a8\u548c\u52a0\u901f\u6c61\u57a2\u7684\u4ea7\u751f\u8fc7\u7a0b\u3002\u5728\u9646\u5730\u4e0a\uff0c\u6ce5\u571f\u652f\u6491\u7740\u690d\u7269\uff0c\u800c\u690d\u7269\u51e0\u4e4e\u652f\u6491\u7740\u5176\u4ed6\u4e00\u5207\u3002\u5c31\u8fd9\u6837\uff0c\u5728\u8bb8\u591a\u5176\u4ed6\u65b9\u5f0f\u4e2d\uff0c\u751f\u547d\u5f97\u4ee5\u53cd\u54fa\uff0c\u4ea7\u751f\u4e86\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u8fd9\u4e2a\u661f\u7403\uff0c\u5728\u8fd9\u4e2a\u661f\u7403\u4e0a\uff0c\u6ca1\u6709\u4efb\u4f55\u8868\u9762\u662f\u4e0d\u88ab\u6b96\u6c11\u7684\uff0c\u751f\u547d\u5b58\u5728\u7684\u9ad8\u5ea6\u548c\u6df1\u5ea6\u4e5f\u662f\u5982\u6b64\u3002", "note_en": "For a substance known for its abundance, persistence, and rock-bottom prices, there is an enduring mystery to dirt: where does it come from?\n  Generally speaking,\u00a0it sits at\u00a0the nexus of geology, meteorology, and time. Rock becomes dirt via  weathering. But it is a process that is necessarily difficult for humans\u00a0to observe.\n  It\u2019s long been assumed that life is somehow involved (on Earth, there is very little in which life is not involved), and scientists have demonstrated that it is theoretically possible.\u00a0But no one\u00a0had ever actually observed this in common types of iron-silicate\u00a0continental rocks, likely due to the distressingly large gap in weathering\u2019s reaction velocity relative to scientists\u2019 career velocity.\n  Enter intrepid scientists at\u00a0the University of Wisconsin-Madison, the University of Bristol, and Pennsylvania State University,  who decided to undertake a two and a half year experiment to see how capable microbial life is of\u00a0taking on rock.\u00a0To make this possible, they had to think up\u00a0ways to hit the fast forward button.\n  One way was to find rock that weathers fast. The Rio Blanco Quartz Diorite bedrock beneath the Rio Icacos watershed in Puerto Rico weathers exceptionally fast, making it a tempting target for an experiment conducted on a publishable timescale. The scientists took samples of pure bedrock from a roadcut as well as long tubes of soil and rock drilled into the formation from above. Included in these cores was the transition zone where fractured bedrock alternates with veins of newborn soil,  ...\n    The scientists found that in this deepest layer of soil,\u00a0 ATP\u00a0--\u00a0a chemical generated by metabolizing cells --\u00a0is more abundant\u00a0than in any other part of the soil except the surface, where nutritious junk dropped by plants and animals and abundant oxygen fuel ebullient growth. So something is going on down there. The question is: what?\n    What, if biological weathering is indeed occurring,\u00a0involves electrons.\u00a0Electrons are negatively charged particles that orbit the nuclei of atoms. The number of electrons in an atom often varies. Versions containing more electrons are referred to as reduced, while those containing fewer are oxidized.\n  All living beings juggle electrons, usually by stripping them from sugars and other reduced organic compounds (stuff we call \u201cfood\u201d) and using those electrons to power their cells through  cellular respiration. But some microbes can use simple inorganic compounds or atoms as electron sources. The ones that can use stone as a source of electrons are called lithotrophs. They eat rocks.\n  Minerals rich in reduced iron like  pyrite (fool\u2019s gold),  biotite, and  hornblende are potential bacteria chow. The physical changes to these minerals wrought by electron stripping should initiate the process of their chemical dissolution \u2014 that is, weathering. This should be visible under the microscope as some sort of physical alteration.\n  So the scientists\u00a0took their highly weather-able rock and microbe-laced soil back home and accelerated the proceedings further by grinding the rock, increasing its surface area. They mixed crushed rock with microbes.\n        Two birthdays and two Christmases and two income tax filing deadlines passed.\u00a0And still they waited.\n    After 30 months, they put their samples under the microscope. The minerals incubated with microbes appeared ragged or pitted \u2014 as if they had been dipped in acid, not bacteria \u2014 after their 864-day incubation. The sterile control minerals, by contrast, retained sharp, smooth edges.\n      The scientists also detected abundant ATP in the mixtures that included microbes, indicating feasting. And remember: there was absolutely nothing to feast on except crushed rock.\n  Another mystery remained: who\u00a0was eating the rocks?\u00a0When the scientists checked the DNA of the microbes in their samples, they found almost exclusively bacteria. Missing from the cultures, surprisingly, were fungi. Mycorrhizal fungi that associate with tree roots and generate many familiar forest mushrooms  are also known for their ability to mine rock particles in soil, as  I discussed with\u00a0Radiolaba few years ago. The scientists suggest that the amount of fungus  ...\n  The lithotrophic bacteria they did find have a special power: the ability to harvest electrons from iron atoms  outsidetheir bodies. That is, they can eat without swallowing their food. The bacteria \u201cingest \u201dthe electrons in a technique called external electron transfer. This is vital because the iron atoms are part of the mineral and the bacteria have no crow bars or other means with which to pry them loose. But there is another advantage to doing it this way:  ...\n  So, bacteria indeed appear able to initiate and accelerate the dirt-making process. On land, dirt supports plants, which support most everything else.\u00a0In this way among many others, life\u00a0feeds back, yielding the planet we see today\u00a0in which no surface remains uncolonized, and the height and depth at which life\u00a0vanishes remain unknown.\n    Napieralski, Stephanie A., Heather L. Buss, Susan L. Brantley, Seungyeol Lee, Huifang Xu, and Eric E. Roden. &#34; Microbial chemolithotrophy mediates oxidative weathering of granitic bedrock.&#34;\u00a0 Proceedings of the National Academy of Sciences\u00a0116, no. 52 (2019): 26394-26401.\n The views expressed are those of the author(s) and are not necessarily those of Scientific American.", "posttime": "2020-05-02 22:22:28", "tags": "\u79d1\u5b66\u5bb6,\u77e5\u9053,waited,\u7535\u5b50,electrons", "title": "\u79d1\u5b66\u5bb6\u4eec\u7b49\u4e86\u4e24\u5e74\u534a\u624d\u77e5\u9053\u7ec6\u83cc\u662f\u5426\u80fd\u5403\u6389\u5ca9\u77f3", "title_en": "Scientists Waited Two and a Half Years to See Whether Bacteria Can Eat Rock", "transed": 1, "url": "https://blogs.scientificamerican.com/artful-amoeba/scientists-waited-two-and-a-half-years-to-see-whether-bacteria-can-eat-rock/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u79d1\u5b66\u5bb6", "\u77e5\u9053", "waited", "\u7535\u5b50", "electrons"]}, {"category": "", "categoryclass": "", "imagename": "536ed89e2deb24e34b39c0b77c7a171d.jpg", "infoid": 1000359, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c3d\u7ba1\u62e5\u67094\u4ebf\u7528\u6237\u7684\u5b89\u5168\u4fe1\u4f7f\u670d\u52a1Telegram\u7b49\u516c\u53f8\u5df2\u7ecf\u8bc1\u5b9e\uff0c\u5b83\u6b63\u5728\u8fdb\u519b\u89c6\u9891\u804a\u5929\u9886\u57df\uff0c\u4f46Zoom\u7684\u4e3b\u5bfc\u5730\u4f4d\u9762\u4e34\u7684\u6700\u76f4\u63a5\u5a01\u80c1\u662f\u5fae\u8f6f\u56e2\u961f\u3002\u5c24\u5176\u662f\u5bf9\u4e8e\u5168\u7403\u8fd9\u4e48\u591a\u5458\u5de5\u6765\u8bf4\uff0c\u5728\u79bb\u5bb6\u5de5\u4f5c\u8fc7\u6e21\u671f\u95f4\u505a\u751f\u610f\u65f6\u66f4\u662f\u5982\u6b64\u3002\u8fd9\u5e94\u8be5\u4e0d\u8db3\u4e3a\u5947\uff0c\u56e0\u4e3a\u57283\u6708\u5e95\u7684\u77ed\u77ed\u4e24\u5468\u5185\uff0c\u65e5\u6d3b\u8dc3\u7528\u6237\u6570\u91cf\u4ece4400\u4e07\u8dc3\u5347\u81f37500\u4e07\u3002\n\u4e00\u4efd\u65b0\u7684\u62a5\u544a\u63ed\u793a\u4e86\u5b89\u5168\u7814\u7a76\u4eba\u5458\u662f\u5982\u4f55\u89c2\u5bdf\u5230\u6570\u5343\u4e2a\u514b\u9686\u7684\u5fae\u8f6f\u56e2\u961f\u767b\u5f55\u9875\u9762\u88ab\u7528\u6765\u8bd5\u56fe\u83b7\u53d6\u8d26\u6237\u5bc6\u7801\u7684\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u77e5\u540d\u7ec4\u7ec7\u5df2\u7ecf\u5ba3\u5e03\u7981\u6b62\u4f7f\u7528Zoom\uff0c\u8fd9\u5728\u6211\u770b\u6765\u6709\u4e9b\u4e0d\u516c\u5e73\uff0c\u56e0\u6b64\u8bb8\u591a\u4eba\u8f6c\u800c\u6c42\u52a9\u4e8e\u5fae\u8f6f\u56e2\u961f\u3002\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u5f53\u4ed6\u4eec\u6210\u4e3a\u653b\u51fb\u76ee\u6807\u65f6\uff0c\u4ed6\u4eec\u5c31\u8131\u79bb\u4e86\u7f51\u7edc\u94a9\u5b50\u3002\n\u5728\u4e00\u7bc7\u5173\u4e8e\u5fae\u8f6f\u56e2\u961f\u7528\u6237\u5982\u4f55\u5bb9\u6613\u53d7\u5230\u6076\u610fGIF\u653b\u51fb\u7684\u62a5\u9053\u4e4b\u540e\uff0c\u8fd9\u6761\u6d88\u606f\u5bf9\u90a3\u4e9b\u5bfb\u627eZoom\u66ff\u4ee3\u54c1\u7684\u4eba\u6765\u8bf4\u53c8\u662f\u4e00\u4e2a\u5b89\u5168\u5a01\u80c1\u3002\u6076\u610fGIF\u53ef\u80fd\u4f1a\u7a83\u53d6\u8d26\u6237\u6570\u636e\u3002\n\u5f02\u5e38\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7684\u8fd9\u4e00\u53d1\u73b0\u63ed\u793a\u4e86\u5fae\u8f6f\u56e2\u961f\u591a\u7ba1\u9f50\u4e0b\u7684\u6a21\u4eff\u653b\u51fb\u3002\u7f51\u7edc\u5b89\u5168\u548c\u57fa\u7840\u8bbe\u65bd\u5b89\u5168\u5c40(CISA)\u4e8e4\u670829\u65e5\u53d1\u5e03\u4e86\u4e00\u4efd\u65e5\u671f\u4e3a4\u670829\u65e5\u7684\u8b66\u62a5\uff0c\u8b66\u544a\u79f0\uff0c\u9274\u4e8e\u7ec4\u7ec7\u5728\u51a0\u72b6\u75c5\u6bd2\u9501\u5b9a\u671f\u95f4\u8fc1\u79fb\u5230Microsoft Office 365\u7684\u90e8\u7f72\u901f\u5ea6\uff0c\u6b64\u7c7b\u653b\u51fb\u65b9\u6cd5\u5c06\u4f1a\u4e0a\u5347\u3002\u8fd9\u5f15\u8d77\u4e86\u4eba\u4eec\u7684\u8b66\u89c9\uff0c\u8fd9\u79cd\u4ed3\u4fc3\u7684\u90e8\u7f72\u5982\u4f55\u4f1a\u5bfc\u81f4\u5b89\u5168\u914d\u7f6e\u7684\u758f\u5ffd\uff0c\u5e76\u7834\u574f\u2026\u2026\u3002\n\u7136\u800c\uff0c\u5728\u5f02\u5e38\u7814\u7a76\u516c\u53f8\u770b\u5230\u7684\u653b\u51fb\u6848\u4f8b\u4e2d\uff0c\u65e0\u8bba\u662f\u5b89\u5168\u914d\u7f6e\u8fd8\u662f\u5fae\u8f6f\u56e2\u961f\u7684\u6f0f\u6d1e\u90fd\u4e0d\u662f\u7f6a\u9b41\u7978\u9996\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u89c2\u5bdf\u5230\u7684\u662f\u4ee4\u4eba\u4fe1\u670d\u7684\u7cbe\u5fc3\u5236\u4f5c\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6a21\u4eff\u6765\u81ea\u5fae\u8f6f\u56e2\u961f\u7684\u81ea\u52a8\u901a\u77e5\u7535\u5b50\u90ae\u4ef6\u3002\u5176\u76ee\u7684\u4ec5\u4ec5\u662f\u7a83\u53d6\u5458\u5de5\u7684Microsoft Office 365\u767b\u5f55\u51ed\u636e\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7814\u7a76\u4eba\u5458\u62a5\u544a\u8bf4\uff0c\u622a\u81f35\u67081\u65e5\uff0c\u5df2\u6709\u591a\u8fbe5\u4e07\u540d\u7528\u6237\u53d7\u5230\u4e86\u8fd9\u79cd\u653b\u51fb\u3002\u7136\u800c\uff0c\u8fd9\u4e0e\u666e\u901a\u7684\u7f51\u7edc\u9493\u9c7c\u9a97\u5c40\u76f8\u53bb\u751a\u8fdc\uff0c\u800c\u4e14\u6765\u5f97\u6b63\u662f\u65f6\u5019\uff0c\u53ef\u4ee5\u611a\u5f04\u5df2\u7ecf\u538b\u529b\u5f88\u5927\u3001\u6709\u70b9\u8ff7\u5931\u65b9\u5411\u7684\u5458\u5de5\u3002\u8fd9\u573a\u65b0\u7684\u6218\u5f79\u5728\u65b9\u6cd5\u4e0a\u975e\u5e38\u4e13\u4e1a\uff0c\u800c\u4e0d\u662f\u4e0d\u592a\u8c28\u614e\u7684\u7f51\u7edc\u7f6a\u72af\u4f7f\u7528\u7684\u66f4\u5e38\u7528\u7684\u8b66\u62a5\u548c\u901a\u77e5\u3002&#34\uff1b\u6258\u7ba1\u7684\u767b\u5f55\u9875\u9762.\u3002\n\u653b\u51fb\u8005\u8fd8\u4f7f\u7528\u65b0\u6ce8\u518c\u7684\u57df\u540d\uff0c\u8fd9\u4e9b\u57df\u540d\u65e8\u5728\u6b3a\u9a97\u6536\u4ef6\u4eba\uff0c\u8ba9\u4ed6\u4eec\u8ba4\u4e3a\u901a\u77e5\u6765\u81ea\u5b98\u65b9\u6765\u6e90\u3002\u6211\u6700\u8fd1\u62a5\u9053\u4e86\u7f51\u7edc\u72af\u7f6a\u5206\u5b50\u662f\u5982\u4f55\u4f7f\u7528\u8fd9\u4e00\u7b56\u7565\u7684\uff0c\u76ee\u7684\u662f\u8bc8\u9a97\u7b49\u5f85\u523a\u6fc0\u8ba1\u5212\u4ed8\u6b3e\u5230\u6765\u7684\u7f8e\u56fd\u516c\u6c11\u3002\u5df2\u6ce8\u518c\u7684\u6076\u610f\u6216\u53ef\u7591\u523a\u6fc0\u65b9\u6848\u57df\u540d\u4e0d\u5c11\u4e8e712\u4e2a\u3002\u5f02\u5e38\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6b3a\u8bc8\u6027\u57df\u540d\u6ce8\u518c\u7684\u4f8b\u5b50\u3002\n\u5c31\u51ed\u8bc1\u7a83\u53d6\u6709\u6548\u8d1f\u8f7d\u800c\u8a00\uff0c\u8fd9\u662f\u4ee5\u540c\u6837\u7ec6\u81f4\u7684\u65b9\u5f0f\u4ea4\u4ed8\u7684\u3002\u7531\u4e8e\u653b\u51fb\u8005\u4f7f\u7528\u4e86\u591a\u4e2aURL\u91cd\u5b9a\u5411\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u7684\u6258\u7ba1URL\uff0c\u56e0\u6b64\u65e8\u5728\u7ed5\u8fc7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4\u7cfb\u7edf\uff0c\u7f51\u7edc\u7f6a\u72af\u6700\u7ec8\u4f1a\u5c06\u7528\u6237\u5f15\u5bfc\u5230\u514b\u9686\u7684Microsoft Office 365\u767b\u5f55\u9875\u9762\u3002\n\u7814\u7a76\u4eba\u5458\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6b64\u7c7b\u653b\u51fb\u7684\u4f8b\u5b50\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u6587\u6863\u94fe\u63a5\uff0c\u8be5\u6587\u6863\u4f4d\u4e8e\u7c97\u5fc3\u5927\u610f\u7684\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u63d0\u4f9b\u5546\u7f51\u7ad9\u3002\u6587\u6863\u4e2d\u6709\u4e00\u5f20\u56fe\u7247\uff0c\u8981\u6c42\u8bfb\u8005\u767b\u5f55\u5230\u5fae\u8f6f\u56e2\u961f\u3002\u5355\u51fb\u56fe\u50cf\uff0c\u5b83\u4eec\u5c06\u5b58\u653e\u5728\u514b\u9686\u7684\u767b\u5f55\u9875\u9762\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u6d89\u53caYouTube\u4e0a\u7684\u4e00\u4e2a\u94fe\u63a5\uff0c\u8be5\u94fe\u63a5\u5728\u767b\u9646\u6076\u610f\u7684\u5fae\u8f6f\u56e2\u961f\u51ed\u8bc1\u7a83\u53d6\u7f51\u7ad9\u4e4b\u524d\u91cd\u5b9a\u5411\u4e86\u4e24\u6b21\u3002\n\u6536\u4ef6\u4eba\u5c06\u5f88\u96be\u7406\u89e3\u8fd9\u4e9b\u7ad9\u70b9\u7684\u8bbe\u7f6e\u662f\u4e3a\u4e86\u8bef\u5bfc\u548c\u6b3a\u9a97\u4ed6\u4eec\u6765\u7a83\u53d6\u4ed6\u4eec\u7684\u51ed\u636e\uff0c\u5f02\u5e38\u5b89\u5168\u8bf4\uff0c\u9274\u4e8e\u76ee\u524d\u7684\u60c5\u51b5\uff0c\u4eba\u4eec\u5df2\u7ecf\u4e60\u60ef\u4e86\u6765\u81ea\u534f\u4f5c\u8f6f\u4ef6\u63d0\u4f9b\u5546\u7684\u901a\u77e5\u548c\u9080\u8bf7\u3002\n\u6211\u662f\u4e00\u540d30\u5e74\u7684\u8d44\u6df1\u79d1\u6280\u8bb0\u8005\uff0c\u81ea1994\u5e74\u521b\u520a\u4ee5\u6765\u4e00\u76f4\u62c5\u4efb\u201c\u4e2a\u4eba\u7535\u8111\u4e13\u4e1a\u201d(PC Pro)\u6742\u5fd7\u7684\u7279\u7ea6\u7f16\u8f91\u3002\u4f5c\u4e3a\u82f1\u56fd\u7535\u4fe1\u5e74\u5ea6\u5b89\u5168\u8bb0\u8005\u5956(2006\uff0c2008\uff0c2010)\u7684\u4e09\u6b21\u83b7\u5f97\u8005\uff0c\u6211\u8fd8\u6709\u5e78\u57281996\u5e74\u56e0\u4e2a\u4eba\u7535\u8111\u4e13\u4e1a\u7248(PC Pro)\u7684\u4e00\u7bc7\u540d\u4e3a\u201c\u4e92\u8054\u7f51\u5a01\u80c1\u201d(Threats To The Internet)\u7684\u524d\u77bb\u6027\u4e13\u9898\u800c\u88ab\u8bc4\u4e3a\u82f1\u56fd\u7535\u4fe1\u6280\u672f\u5e74\u5ea6\u8bb0\u8005\u30022011\u5e74\uff0c\u6211\u56e0\u5bf9IT\u5b89\u5168\u65b0\u95fb\u7684\u7ec8\u8eab\u8d21\u732e\u800c\u8363\u83b7\u82f1\u683c\u739b\u5956(Enigma Award)\u3002\u8054\u7cfb..\u3002", "note_en": "Although the likes of Telegram, the secure messenger service with 400 million users, has  confirmed it is moving into the video chat space, the most  immediate threat to the dominance of Zoom is Microsoft Teams. Especially when it comes to doing business during the work from home transition for so many employees worldwide. This should come as no great surprise, given that the number of daily active users jumped from 44 million to 75 million across just two weeks at the end of March.\n  A new report reveals how security researchers have observed thousands of cloned Microsoft Team login pages being used in an attempt to harvest account passwords.\n         At the same time that increasing numbers of prominent organizations have been announcing bans on the use of Zoom,  somewhat unfairly in my never humble opinion, so many have been turning to Microsoft Teams instead. This doesn&#39;t necessarily mean they are off the cyber-hook when it comes to being attack targets.\n     Hot on the heels of a report on how Microsoft Teams users were vulnerable to  a malicious GIF that could have stolen account data, comes this news of another security threat to those looking for  an alternative to Zoom.\n           The discovery by researchers from Abnormal Security reveals what it says is a multi-prong Microsoft Teams impersonation attack. The Cybersecurity and Infrastructure Security Agency (CISA) issued an alert dated April 29, warning of just such attack methodology uptick given the speed of deployment as organizations migrate to Microsoft Office 365 during the COVID-19 lockdown. That  alertwarned how such &#34;hasty deployment can lead to oversights in security configurations and undermine  ...\n  In the case of the attacks seen by Abnormal Research, however, neither security configurations nor vulnerabilities in Microsoft Teams were at fault. Instead, what they observed were  convincingly-crafted emails impersonating the automated notification emails from Microsoft Teams. The aim, simply to steal employee Microsoft Office 365 login credentials.\n      To date, the researchers report that as many as 50,000 users have been subject to this attack as of May 1. This is far from your average phishing scam, however, and comes at precisely the right time to fool already stressed and somewhat disoriented workers. Instead of the far more commonly used &#34;sort of look-alike&#34; alerts and notifications employed by less careful cybercriminals, this new campaign is very professional in approach. &#34;The landing pages that host  ...\n    The attackers are also using newly-registered domains that are designed to fool recipients into thinking the notifications are from an official source. I recently reported how this tactic is being used by cybercriminals looking to defraud U.S. citizens waiting for their stimulus package payments to arrive. No less than  712 malicious or suspicious stimulus package domainshad been registered. Abnormal Security researchers gave the example of a fraudulent domain registered  ...\n      As far as the credential-stealing payload is concerned, this is delivered in an equally meticulous way. With multiple URL redirects employed by the attackers, concealing the real hosting URLs, and so aiming to bypass email protection systems, the cybercriminals will eventually drive the user to the cloned Microsoft Office 365 login page.\n  An example of one such attack was given by the researchers where a document link was provided, that document being located at an unwary email marketing provider site. Within the document was an image asking the reader to log in to Microsoft Teams. Click on the image, and they are deposited at the cloned login page. Another example involved a link hosted on YouTube that redirected twice before landing on the malicious Microsoft Teams credential-stealing site.\n  &#34;Recipients would be hard-pressed to understand that these sites were set up to misdirect and deceive them to steal their credentials,&#34; Abnormal Security said, &#34;given the current situation, people have become accustomed to notifications and invitations from collaboration software providers.&#34;\n  I&#39;m a three-decade veteran technology journalist and have been a contributing editor at PC Pro magazine since the first issue in 1994. A three-time winner of the BT Security Journalist of the Year award (2006, 2008, 2010) I was also fortunate enough to be named BT Technology Journalist of the Year in 1996 for a forward-looking feature in PC Pro called &#39;Threats to the Internet.&#39; In 2011 I was honored with the Enigma Award for a lifetime contribution to IT security journalism. Contact  ...", "posttime": "2020-05-02 21:57:05", "tags": "\u5bc6\u7801,\u9ed1\u5ba2,microsoft,teams,\u5b89\u5168", "title": "\u5f53\u5fc3\u8fd9\u4e2a\u65b0\u7684Microsoft Teams\u5bc6\u7801\u9ed1\u5ba2\u5a01\u80c17500\u4e07\u7528\u6237", "title_en": "Beware This New Microsoft Teams Password Hacking Threat to 75M Users", "transed": 1, "url": "https://www.forbes.com/sites/daveywinder/2020/05/02/beware-this-new-microsoft-teams-password-hacking-threat-to-75-million-users/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5bc6\u7801", "\u9ed1\u5ba2", "microsoft", "teams", "\u5b89\u5168"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000358, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "3_\u62bd\u51fa5\u4e2a\u6570\u5b57/\u4ece0\u52304 2 2 4/2_\u62bd\u51fa0\u4e2a\u968f\u673a\u6570\u7684\u5217\u8868/\u4ece0\u52301 0.2232866 0.9504653\u76842\u4e2a\u968f\u673a\u5b9e\u6570\u7684\u5217\u8868/Deal\uff1a\u4ece0\u52303 2 0 1 3\u548c4 13_Draw-52\u76844\u4e2a\u968f\u673a\u4e0d\u91cd\u590d\u6570\u5b57\u7684\u5217\u8868/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13)/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13)/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13\u3002(39 42 34 50 21 6 19 46 48 45 14 43 2.33 49 4 25 41 30 35 7 32 17 1 12 15)\u548c1 3 4 5 7 9_bin 4\u901a\u8fc7\u5217\u8868\u8fd4\u56de\u7d22\u5f152 1 3 4.\u3002\n\u526f\u8bcd\u8fd9\u5c31\u662fK\u5f00\u59cb\u533a\u522b\u4e8e\u4eca\u5929\u4f7f\u7528\u7684\u5927\u591a\u6570\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u7684\u5730\u65b9\u3002\u60a8\u5f88\u5c11\u7528K\u7f16\u5199\u5faa\u73af(KDB\u662f100%\u65e0\u5faa\u73af\u7684)\uff0c\u800c\u662f\u4f7f\u7528\u526f\u8bcd\u3002\u526f\u8bcd\u4fee\u9970\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u6539\u53d8\u5b83\u5bf9\u5176\u53c2\u6570\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5904\u7406\u5b83\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u91cc\u6709\u51e0\u4e2a\u526f\u8bcd\u7684\u7528\u6cd5\u7cbe\u9009(\u8fd8\u6709\u5176\u4ed6\u7528\u6cd5\u6ca1\u6709\u5728\u8fd9\u91cc\u4ecb\u7ecd)\u3002\u4f8b\u5982\uff1a\u8ba9\u6211\u4e3a\u60a8\u5206\u6790\u4e00\u4e0b\u5c55\u5e73\u3002\u8054\u63a5\u662f\u4e00\u4e2a\u51fd\u6570..\u3002", "note_en": "3_draw 5 \u00a0 \u00a0 \u00a0 \u00a0/ list of 3 random numbers from 0 to 4 2 2 4  \u00a0 2_draw 0 \u00a0 \u00a0 \u00a0 \u00a0/ list of 2 random real numbers from 0 to 1 0.2232866 0.9504653  \u00a0 4_draw-4 \u00a0 \u00a0 \u00a0 \u00a0/ deal: list of 4 random nonrepeating numbers from 0 to 3 2 0 1 3  \u00a0 4 13_draw-52 \u00a0 \u00a0/ deal a deck of cards into four piles (29 27 10 0 23 3 28 5 24 16 40 8 22 \u00a051 20 36 47 18 31 26 11 44 37 38 9 13 \u00a039 42 34 50 21 6 19 46 48 45 14 43 2 \u00a033 49 4 25 41 30 35 7 32 17 1 12 15)  \u00a0 1 3 4 5 7 9_bin 4 \u00a0 \u00a0 / binary search through list returning index 2  1 3 4  ...\n Adverbs This is where K starts to set itself from apart from most of the commonprogramming languages in use today. You rarely write loops in K (KDB is100% loop-free), instead you use adverbs. An adverb modifies a function,returning another function, changing the ways it operates over itsarguments and what it does with it&#39;s return values. Here is a smallselection of adverbs&#39; usages (there are other uses that are not covered here). Examples: Let me break down flatten for you. Join is a function  ...", "posttime": "2020-05-02 21:56:33", "tags": "\u7a0b\u5e8f,\u8bbe\u8ba1,programming language,\u7a0b\u5e8f\u8bbe\u8ba1,introduction", "title": "\u6d45\u8c08K\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00(2002)", "title_en": "A Shallow Introduction to the K Programming Language (2002)", "transed": 1, "url": "https://web.archive.org/web/20070519112242/http://www.kuro5hin.org/story/2002/11/14/22741/791", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7a0b\u5e8f", "\u8bbe\u8ba1", "language", "\u7a0b\u5e8f\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "9ba40a5aa4c962e6db586ef41b25fe54.png", "infoid": 1000357, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u98a4\u632f\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5f00\u53d1\u4e00\u4e2aCOVID19\u4eea\u8868\u677f\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5e94\u7528\u7a0b\u5e8f\u5c06\u663e\u793aCovid19\u611f\u67d3\u7684\u603b\u7edf\u8ba1\u6570\u636e\u3002\u8fd9\u662f\u4e3a\u521d\u5b66\u8005\u7f16\u5199\u7684\u6251\u7ffc\u6559\u7a0b\u3002\u5728\u672c\u6559\u7a0b\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u80fd\u591f\u5f00\u53d1\u4e00\u4e2a\u4ece\u670d\u52a1\u5668\u83b7\u53d6covid19\u7edf\u8ba1\u6570\u636e\u5e76\u5c06\u5176\u663e\u793a\u5728\u5404\u79cdUI\u5c0f\u90e8\u4ef6\u4e2d\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\nGOOGLE Ffltter\u5f00\u53d1\u7684\u662f\u4e00\u6b3e\u5f00\u6e90\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\u3002Ffltter\u662fGoogle\u7684UI\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u6784\u5efa\u672c\u5730\u7f16\u8bd1\u7684\u8de8\u5e73\u53f0(\u79fb\u52a8\u3001\u7f51\u7edc\u3001\u684c\u9762)\u5e94\u7528\u7a0b\u5e8f\u3002\u6709\u52a9\u4e8e\u5b9e\u73b0\u8de8\u5e73\u53f0\u517c\u5bb9\u7684\u672c\u673a\u6027\u80fd\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u663e\u793a\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u7684\u7edf\u8ba1\u6570\u636e\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\uff1a\n\u98a4\u52a8\u9700\u89812.8 GB\u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c\u5728\u5f00\u59cb\u5b89\u88c5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5b83\u53ef\u7528\u3002Ffltter\u51e0\u4e4e\u6ca1\u6709\u5e38\u89c1\u7684\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982bash\u3001curl\u3001git\u3001zip\uff0c\u60a8\u5fc5\u987b\u5df2\u7ecf\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u4e86\u8fd9\u4e9b\u4f9d\u8d56\u9879\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5\u5b83\u4eec\u3002\n\u8fd9\u5c06\u4e0d\u4f1a\u4e0b\u8f7d\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u3002\u538b\u7f29\u5305\u5927\u5c0f\u7ea6\u4e3a1 GB\uff0c\u56e0\u6b64\u8bf7\u8010\u5fc3\u7b49\u5f85\u4e0b\u8f7d\u3002\u5728\u64b0\u5199\u672c\u535a\u5ba2\u65f6\uff0c\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\u662fv1.12.13+hotfix.9-\u7a33\u5b9a\u3002\n\u5982\u679c\u60a8\u4f7f\u7528zsh\uff0c\u8bf7\u786e\u4fdd\u5728~/.zshc\u6587\u4ef6\u7684\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0a\u884c\u3002\u6dfb\u52a0\u5230\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5c06\u5176\u53cd\u6620\u5230\u60a8\u7684\u8def\u5f84\u4e2d\u3002\n\u5982\u679c\u60a8\u6ca1\u6709Android SDK\uff0c\u8fd9\u5c06\u662f\u60a8\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u9519\u8bef\u3002\nhttps://developer.android.com/studio/index.html&lt\uff1bbr&gt\uff1b(Channel STRATE\uff0cv1.12.13+\u2713.9\uff0c\u5728Mac OS X 10.15.4 19E287\u4e0a\uff0c\u533a\u57df\u8bbe\u7f6een-np\u4e0a)&lt\uff1bbr&gt\uff1b[\u2717]Android\u5de5\u5177\u94fe-\u4e3aAndroid\u8bbe\u5907\u5f00\u53d1&lt\uff1bbr&gt\uff1b\u2717\u627e\u4e0d\u5230Android SDK\u3002&lt\uff1bbr&gt\uff1b\u4ece\uff1afltter\u5b89\u88c5Android Studio\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u5b89\u88c5Android SDK\u7ec4\u4ef6\u3002&lt\uff1bbr&gt\uff1b(\u6216\u8bbf\u95eehttps://flutter.dev/setup/#android-setup\u4e86\u89e3\u8be6\u7ec6\u8bf4\u660e)\u3002&lt\uff1bbr&gt\uff1b\u5982\u679cAndroid SDK\u6709.\u3002\n\u4e00\u65e6\u60a8\u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e86Android studio\uff0c\u5728\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u5728\u8fdb\u5165\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\u3002\u8fd9\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u9700\u8981\u66f4\u591a\u7684\u8010\u5fc3\u3002\n\u8981\u4e3aiOS\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u9700\u8981\u5b89\u88c5XCode\u3002\u8fd9\u662fMacOS\u7684\u5e38\u7528\u5f00\u53d1\u5de5\u5177\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u4ece\u6b64\u5904https://developer.apple.com/xcode/\u4e0b\u8f7d\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u6240\u9700\u7684\u5176\u4ed6XCode\u7ec4\u4ef6\uff1a\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528VS\u4ee3\u7801\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4ecehttps://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\u5b89\u88c5VS\u4ee3\u7801\u7684\u98a4\u52a8\u6269\u5c55\u3002\n\u901a\u8fc7\u8fd0\u884c\u98a4\u632f\u533b\u751f\u547d\u4ee4\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u5b89\u88c5\u4e86\u6240\u6709\u4ece\u5c5e\u8bbe\u5907\u3002\u73b0\u5728\u6211\u4eec\u90fd\u51c6\u5907\u597d\u5b89\u88c5\u4e86\u3002\n\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\u3002\u5728\u98a4\u632f\u6559\u7a0b\u7684\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u8fd0\u884c\u5b83\u3002\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u751f\u6210\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u5728iOS\u6a21\u62df\u5668\u4e2d\u8fd0\u884c\u7684\u865a\u62df\u5e94\u7528\u7a0b\u5e8f\uff1a\n\u6211\u4eec\u5df2\u7ecf\u4e3aiOS\u6a21\u62df\u5668\u8fdb\u884c\u4e86\u8bbe\u7f6e\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4e5f\u4e3aAndroid\u8bbe\u7f6e\u4e00\u4e2a\u4eff\u771f\u5668\u3002\n\u5728Android\u4e2d\u8bbe\u7f6e\u4eff\u771f\u5668\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u542f\u7528\u865a\u62df\u673a\u52a0\u901f\u3002\u8fd9\u5c06\u6781\u5927\u5730\u63d0\u9ad8\u6027\u80fd\u3002\n\u5728Android Studio\u4e2d\uff0c\u901a\u8fc7\u5de5\u5177&&gt;Android&&gt;AVD\u7ba1\u7406\u5668\u5bfc\u822a\u81f3AVD\u7ba1\u7406\u5668\u3002\u5728\u6b64\u5904\u9009\u62e9\u521b\u5efa\u865a\u62df\u8bbe\u5907\u3002\u73b0\u5728\uff0c\u9009\u62e9\u60a8\u8981\u6a21\u62df\u7684\u8bbe\u5907\u3002\u6211\u5c06\u9009\u62e9`Pixel 3 XL\u3002\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8bbe\u5907\u3002\n\u5728\u6b64\u4e4b\u540e\uff0c\u9009\u62e9\u8bbe\u5907\u7684\u7cfb\u7edf\u6620\u50cf\u3002\u6211\u5c06\u9009\u62e9Android R\u6765\u8fdb\u884c\u4eff\u771f\u3002\u8bf7\u5148\u4e0b\u8f7d\u6620\u50cf\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u5355\u51fbFinish\u6309\u94ae\u542f\u52a8\u8bbe\u5907\u3002\u9009\u62e9\u786c\u4ef6GLES 2.0\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4eff\u771f\u6027\u80fd\u3002\n\u5355\u51fb\u542f\u52a8\u4eff\u771f\u56fe\u6807\u4ee5\u542f\u52a8\u8bbe\u5907\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u8ba9\u8bbe\u5907\u542f\u52a8\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e24\u4e2a\u4eff\u771f\u8bbe\u5907\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u542f\u7528\u8fd9\u4e24\u4e2a\u8bbe\u5907\u6765\u542f\u52a8FLUTER\u3002\u6309\u2018q\u2019\u9000\u51fa\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528-d\u9009\u9879\u542f\u52a8\uff1a\n\u56e0\u4e3a\u6211\u4eec\u5c06\u4f7f\u7528VS\u4ee3\u7801\u8fdb\u884c\u5f00\u53d1\u3002\u8ba9\u6211\u4eec\u5728VS\u4ee3\u7801\u4e2d\u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939\u3002\u5728VS\u4ee3\u7801\u5de6\u4e0b\u89d2\u7684VS\u4ee3\u7801\u72b6\u6001\u680f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u8981\u5728\u5176\u4e0a\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u5907\u3002\u4ece\u63a7\u5236\u53f0\u505c\u6b62\u4e4b\u524d\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7\u9009\u62e9\u8bbe\u5907\u4eceVS\u4ee3\u7801\u542f\u52a8\u5b83\uff0c\u7136\u540e\u6309f5\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6211\u4eec\u5df2\u7ecf\u628a\u6700\u521d\u7684\u9879\u76ee\u90fd\u51c6\u5907\u597d\u4e86\u3002\u8be5\u9879\u76ee\u5f53\u524d\u662f\u865a\u62df\u7684\uff0c\u5e76\u663e\u793a\u4e86\u70b9\u51fb\u8ba1\u6570\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a\u201chello world\u201d\u5e94\u7528\u7a0b\u5e8f\u6765\u4ee3\u66ff\u5b83\u3002\n//\u7248\u6743\u6240\u67092018\u6251\u7ffc\u5c0f\u5206\u961f\u3002\u7248\u6743\u6240\u6709\u3002//\u6b64\u6e90\u4ee3\u7801\u7684\u4f7f\u7528\u53d7BSD\u6837\u5f0f\u7684\u8bb8\u53ef\u8bc1\u7ba1\u8f96\uff0c\u8be5\u8bb8\u53ef\u8bc1\u53ef\u4ee5//\u5728\u8bb8\u53ef\u8bc1\u6587\u4ef6\u4e2d\u627e\u5230\u3002import&#39\uff1bPackage\uff1aFfltter/Material.dart&39\uff1b\uff1bvoid main()=&gt\uff1brunApp(MyApp())\uff1b\u7c7bMyApp\u6269\u5c55StatelessWidget{@Override Widget Build(BuildContext Context){return MaterialApp(title\uff1a&#39\uff1bWelcome to Ffltter&#39\uff1b\uff0chome\uff1ascaffold(appBar\uff1aAppBar(title\uff1atext(&#39\uff1bWelcome to Ffltter&#39\uff1b)\uff0c)\uff0cBody\uff1a\n\u8fd9\u5c06\u5728\u5c4f\u5e55\u4e0a\u6253\u5370hello world\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6b63\u5728\u5bfc\u5165", "note_en": "In this flutter tutorial, we will be developing a COVID19 dashboard application. This application will display the total stats of covid19 infection. This is a flutter tutorial for beginners. At the end of this tutorial, you will be able to develop a mobile app that fetches covid19 stats data from the server and display them in various UI widgets.\n   Developed by google\u00a0 flutter\u00a0is an open-source software development kit. Flutter is Google\u2019s UI toolkit for building natively compiled cross-platform(mobile, web, desktop) applications. Helps with native performance being cross-platform compatible.\n   In this tutorial, we will be building a flutter app, which displays statistics for the coronavirus cases. This tutorial you will learn to:\n       Flutter requires 2.8 GB of disk space. So make sure you have it available before starting the installation. Flutter has few common dependencies such as bash, curl, git, zip which you must have already installed in your machine. If not you can install them.\n   This will\u00a0 download\u00a0a zipped file. The zip will be around 1GB so be patient with the download. At the time of writing of this blog, the latest stable version is\u00a0 v1.12.13+hotfix.9-stable\n        If you use  zsh, make sure to add the above line at the end of the  ~/.zshrc file. One added to the file run the following to reflect it to your PATH\n  This is the first error you will get if you do not have Android SDK.\n [ \u2713] Flutter (Channel stable, v1.12.13+hotfix.9, on Mac OS X 10.15.4 19E287, locale en-NP)&lt;br&gt;[ \u2717] Android toolchain - develop for Android devices&lt;br&gt; \u2717Unable to locate Android SDK.&lt;br&gt; Install Android Studio from: https://developer.android.com/studio/index.html&lt;br&gt; On first launch it will assist you in installing the Android SDK components.&lt;br&gt; (or visit https://flutter.dev/setup/#android-setup for detailed instructions).&lt;br&gt; If the Android SDK has  ...\n    Once you download and install the android studio, in the first launch it will help you set up a few things, make sure you do it before moving to the next step. This will take some time and needs more patience.\n  To develop apps for iOS you will need XCode installed. This is a common developer tool for macOS. If you have not installed it yet download it from here\u00a0 https://developer.apple.com/xcode/\u00a0. Install required additional XCode components with:\n     I will be using VS code for this tutorial, so make sure to install the flutter extension for VS code from here\u00a0 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\n Check by running the command flutter doctor to ensure that all the dependencies are installed. Now we are all set with the installation.\n  Creating a new flutter app is very simple. In this section of the flutter tutorial, we will learn to create a simple app and run it. Run the following to generate a flutter app.\n      With this you be able to see a dummy app running in the iOS simulator:\n   We already have set up for the iOS emulator. Now let us set up an emulator for Android as well.\n The first thing to set up an emulator in Android is to enable\u00a0 VM acceleration. this will improve the performance drastically.\n In android studio navigate to AVD Manager by\u00a0  tools &gt; Android &gt; AVD Manager.\u00a0Here select\u00a0  Create Virtual Device.\u00a0Now, select the device you want to emulate. I will be selecting\u00a0` Pixel  3 XL.\u00a0You can also select multiple devices.\n  After this select the System image for the device. I will be selecting\u00a0  android R\u00a0for the emulation. Download the image before continuing.\n Now let us start a device by clicking the finish button. Select the  Hardware GLES 2.0 for a better emulation performance.\n Click the launch emulation icon to start the device. Wait a few seconds for the device to boot up.\n Now we have both the emulation devices let us start the fluter by enabling both the device. Press \u2018q\u2019 to quit the running server and start with -d option:\n    Since we will be using the VS code for development. Let us open the project folder in VS Code. In the VS code status bar bottom left corner of VS code you can select the device to start the app on. Stop the previous running server from your console and start it from the VS code by selecting the device and press f5 to launch the app.\n   We have our initial project all setup. The project is currently dummy with the click count being displayed. Now let us replace it with a \u201chello world\u201d app.\n  // Copyright 2018 The Flutter team. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. import &#39;package:flutter/material.dart&#39;; void main() =&gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: &#39;Welcome to Flutter&#39;, home: Scaffold( appBar: AppBar( title: Text(&#39;Welcome to Flutter&#39;), ), body: Center(  ...\n This will print hello world on the screen. Here we are importing the\u00a0 material\u00a0package which contains the material design for the devices.\n  The main method using a one-liner method which calls the  MyApp method. By extending it with\u00a0StatelessWidget\u00a0we are making the MyApp a widget. In flutter, everything is a widget.\n We use the Scaffold widget which have a default  appBar and body layout which is required for most of the application. The\u00a0AppBar\u00a0is another widget and\u00a0Center\u00a0is another widget that aligns the content to the center. Similar for Text widget it displays text.\n  We will be making an HTTP call to a web server to get the data of covid19 stats. For this let us add an HTTP package. To add a package go to  pubspec.yaml file and add the dependency:\n  Once you add this and save the file. The VS code will automatically run you the following command:\n      To fetch the data we can make a fetchData method which uses the HTTP package:\n   The Future keyword we used in the above example is used to handle the async process in Dart. The  http.Response will contain the data received from our API call.\n  { \u00a0Afghanistan: [ \u00a0\u00a0{ \u00a0 \u00a0date: &#34;2020-1-22&#34;, \u00a0 \u00a0confirmed: 0, \u00a0 \u00a0deaths: 0, \u00a0 \u00a0recovered: 0 \u00a0\u00a0}, \u00a0\u00a0{ \u00a0 \u00a0date: &#34;2020-1-23&#34;, \u00a0 \u00a0confirmed: 0, \u00a0 \u00a0deaths: 0, \u00a0 \u00a0recovered: 0 \u00a0\u00a0}, ...\n We get the data from the API call but we are not aware of what the response format would look like. For that let us create a dart class that will store the data in a structured way. this will help us work with the data easily\n class DailyData { \u00a0\u00a0final String date; \u00a0\u00a0final int confirmed; \u00a0\u00a0final int deaths; \u00a0\u00a0final int recovered; \u00a0\u00a0DailyData({this.date, this.confirmed, this.death, this.recovered}); } class CovidData { \u00a0\u00a0final List&lt;DailyData&gt; nepal; \u00a0\u00a0CovidData({this.nepal}); \u00a0\u00a0factory CovidData.fromJson(Map&lt;String, dynamic&gt; json) { \u00a0 \u00a0\u00a0return CovidData( \u00a0 \u00a0 \u00a0\u00a0nepal: json[&#39;Nepal&#39;], \u00a0 \u00a0\u00a0); \u00a0\u00a0} }\n Here we have defined two classes one is the DailyData which is the format for the daily structure and the other is CovidData is for the overall response from the API.\n We have defined the data structure now let us convert the data form API to our data format:\n Future&lt;CovidStatsData&gt; fetchData() async { \u00a0\u00a0final response = await http.get(&#39;&lt;https://pomber.github.io/covid19/timeseries.json&gt;&#39;); \u00a0\u00a0if (response.statusCode == 200) { \u00a0 \u00a0\u00a0return CovidStatsData.fromJson(json.decode(response.body)); \u00a0\u00a0} else { \u00a0 \u00a0\u00a0throw Exception(&#39;Failed to load covid stats&#39;); \u00a0\u00a0} }\n To use the json.decode you need to make sure that the json package is imported\n    Before calling the fetchData method let us consider something. The stateless widget that we have created called MyApp is immutable, that means their value is fixed and cannot be changed. But for this use case we need a changing data to be displayed. So let us create it. To create a stateful widget we need two things:\n   class CovidDataState extends State&lt;CovidData&gt; { \u00a0\u00a0@override \u00a0\u00a0Widget build(BuildContext context) { \u00a0 \u00a0\u00a0final covidStats = fetchData(); \u00a0 \u00a0\u00a0return Text(covidStats.toString()); \u00a0\u00a0} }\n Now let us add the CovidData class which is the dependency for the above class. This is a stateful widget that we will be adding:\n  The build method above is returing a widget. Let us replace our main method to call the CovidData instead the MyApp method. We can delete the MyApp method now.\n  In the CovidDataState we have defined is only rendering the text of  coivdStats instance, let us change that to display something from the response data of the HTTP call we made.\n Let us move the fetchData to the  initState() . We can add it in the build method but flutter calls the method everytime the view needs to change, which we don\u2019t want to.\n class CovidDataState extends State&lt;CovidData&gt; { \u00a0\u00a0@override \u00a0void initState() { \u00a0 \u00a0\u00a0super.initState(); \u00a0 \u00a0\u00a0futureData = fetchData(); \u00a0\u00a0} \u00a0\u00a0Widget build(BuildContext context) { \u00a0 \u00a0\u00a0final covidStats = fetchData(); \u00a0 \u00a0\u00a0return Text(covidStats.toString()); \u00a0\u00a0} }\n Since we want the data to be rendered here and not just the covidStat instant object. Let us modify the CovidStatsData class to return the proper structured data with all the data we need in the required format:\n class CovidStatsData { final List&lt;DailyData&gt; nepal; CovidStatsData({this.nepal}); factory CovidStatsData.fromJson(Map&lt;String, dynamic&gt; json) { List&lt;DailyData&gt; nepal = json[&#39;Nepal&#39;].map&lt;DailyData&gt;( (data) { return DailyData( date: data[&#34;date&#34;], confirmed: data[&#34;confirmed&#34;], deaths: data[&#34;deaths&#34;], recovered: data[&#34;recovered&#34;] ); }).toList(); return CovidStatsData( nepal: nepal, ); } }  ...\n Here the response in fromJson method is converted from dynamic type to DailyData which we can use properly.\n Now, to reflect the data back to the screen, let us modify the CovidDataState class. Here we will be rendering the last date that we have the COVID19 data for:\n class CovidDataState extends State&lt;CovidData&gt; { Future&lt;CovidStatsData&gt; futureData; @override void initState() { super.initState(); futureData = fetchData(); } Widget build(BuildContext context) { return MaterialApp( title: &#39;Fetch Data Example&#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: Text(&#39;Fetch Data Example&#39;), ), body: Center( child: FutureBuilder&lt;CovidStatsData&gt;(  ...\n Here we have used FutureBuilder widget which will help us display loader during the time the API call is being made and also handle any kind of errors present in the while making the API call. Inside the builder, if the snapshot has data we are rendering the data as text.\n   Of course, we do not just want to display the single date data. Let us display all the dates in a list.\n  We want the users to view all the date stats in a list view. This list will be an infinite scrollable list. So let us add a ListView widget with which we will be able to display all the results in a list. This list will contain the date and the number of confirmed cases as well.\n Let us add a component method inside the CovidDataState class which will define how a row will look like:\n final _Font = const TextStyle(fontSize: 18.0); Widget _buildRow(DailyData dailyData) { \u00a0\u00a0return ListTile( \u00a0 \u00a0\u00a0title: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.date, \u00a0 \u00a0 \u00a0\u00a0style: _Font, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0trailing: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.confirmed.toString(), \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0) \u00a0\u00a0); }\n This method job is to return  ListTile. We also have defined a _Font variable which will define the size of the text. The list will have title the date and a trailing data with the total confirmed cases till that date.\n One this method is there we can add this Widget to our body inside the build method which we already have. The build method will now look like follow:\n Widget build(BuildContext context) { return MaterialApp( title: &#39;Fetch Data Example&#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: Text(&#39;Fetch Data Example&#39;), ), body: Center( child: FutureBuilder&lt;CovidStatsData&gt;( future: futureData, builder: (context, snapshot) { if (snapshot.hasData) { return ListView.builder( itemCount: snapshot.data.nepal.length, itemBuilder: (context,  ...\n Here we have added the _buildRow method for rendering the  dailyData stats as a list. This is what it looks like now:\n  This looks good, but it has the only list of dates and confirmed cases. Let us add some image on the top of the app to make it more beautiful.\n  In flutter, even the layout mechanism is a widget. If we want to arrange our widgets in a row or in a column we can use this widget. While designing a layout in flutter we can structure it in the following format:\n     Now based on this let us try to add an image on top of the list. For this let us add an image first. I have chosen an image from Unsplash.\n  Let us create an  images folder on the root directory of the project. Inside this image directory let us add the image we downloaded from above.\n This image can now be used to render in our view as a widget. For this let us change our body to be a column inside which we will have an image widget at the top and the listview bellow it. The body code will look like this:\n body: Column( children: [ Image( image: AssetImage(&#39;images/isolation.jpg&#39;), fit: BoxFit.cover, height: 340, ), FutureBuilder&lt;CovidStatsData&gt;( future: futureData, builder: (context, snapshot) { if (snapshot.hasData) { return SizedBox( height: 400, child: ( ListView.builder( itemCount: snapshot.data.nepal.length, itemBuilder: (context, index) { DailyData dailyData = snapshot.data.nepal[index]; return _buildRow(dailyData);  ...\n We are doing great so far. Now let us add some detailed page where we can view the detail of total deaths and recovered for the selected date. Whenever a user taps on an item in the list, it will show detailed stats for the specific day.\n One thing to keep in mind is that a list inside a column can cause issues with the positioning, so make sure to define the box size. Here I have added a SizedBox widget of 400 height so that it can be displayed properly.\n With this, we now will be able to have an image at the top and the list at the bottom.\n   The application currently has a single page. To view more detail on a specific day, we need another page where we can show those details. In this section, we will add a new page that can be navigated when the user touches an item on the list.\n To do this let us first create a new page. For this, we need to create a new file with a new  StatelessWidget . Let us add a file named  detailDailyStats.dart inside the lib folder. This widget will have a simple build method to display the stats:\n import &#39;package:flutter/material.dart&#39;; import &#39;package:my_app/main.dart&#39;; class DetailDailyStats extends StatelessWidget { final DailyData dailyData; DetailDailyStats({Key key, @required this.dailyData }) : super(key: key); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(&#34;Covid19 stats for &#34; + dailyData.date) ), body: Center(child: Text(dailyData.confirmed.toString()),),  ...\n It needs to be initialized with  dailyData that we already have fetched in our main widget. This widget will display the confirmed cases in the Center for now. Now let us add a Navigator widget which will help us navigate to this page on user touch in the list item. Adding a Navigator on touch is very simple for a ListView which we already have. We only need to add an  onTap property:\n Widget _buildRow(BuildContext context, DailyData dailyData) { \u00a0\u00a0return ListTile( \u00a0 \u00a0\u00a0title: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.date, \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0trailing: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.confirmed.toString(), \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0onTap: () { \u00a0 \u00a0 \u00a0\u00a0Navigator.push( \u00a0 \u00a0 \u00a0 \u00a0\u00a0context, \u00a0 \u00a0 \u00a0 \u00a0\u00a0MaterialPageRoute(builder: (context) =&gt; DetailDailyStats(dailyData: dailyData)), \u00a0 \u00a0 \u00a0\u00a0); \u00a0 \u00a0\u00a0}, \u00a0\u00a0); }\n   I have made a few changes in ThemeData and the title of the page to make it a red theme. This change can be done MaterialApp widget in the build method of the main widget.\n  Now let us make the second page a little more beautiful. For this let us make a card view where we can disable the stats. To make cards let us create a method, which we can reuse for all the 3 different stats:\n Widget _buildCard(BuildContext context, String stat, Color color) { return Container( padding: EdgeInsets.fromLTRB(10,10,10,0), height: 180, width: double.maxFinite, child: Card( elevation: 5, child: Center( child: Column( mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.center, children: &lt;Widget&gt;[ Text(stat, style: TextStyle( fontSize: 72, height: 0.80, color: color, ), ), ] )  ...\n The widget above is a card with some styling. We have centered the text in the Card and did some text styling. Note that everything is a widget in flutter.\n With this now let us add a ListView where we can display all the stats:\n Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(&#34;Covid19 stats for &#34; + dailyData.date) ), body: Container( child: ListView( children:[ _buildCard(context, dailyData.confirmed.toString(), Colors.blue), Center( child: Text(&#34;Confirmed&#34;, style: TextStyle( fontSize: 20, height: 2, ), ), ), _buildCard(context, dailyData.deaths.toString(), Colors.red), Center( child: Text(&#34;Deaths&#34;,  ...\n We have added three cards here using the method above. The cards will display the confirmed, deaths and recovered stats. The UI looks neat now:\n  Widget _buildRow(BuildContext context, DailyData dailyData, int prevDailyData) { int diff = dailyData.confirmed - prevDailyData; Color color = Colors.grey; if(diff == 0){ color = Colors.green; } else if(diff &gt; 0){ color = Colors.red; } return Card( child: ListTile( leading: Icon(Icons.calendar_today, color: color, size: 24.0, ), title: Text( dailyData.date, style: _biggerFont, ), trailing: Text( dailyData.confirmed.toString(),  ...\n  For the first listing page let us add some icons on the list based on the number of new cases. If there are no new cases we will add a green calendar icon and if there are new cases confirmed we will add a red calendar icon. For this, we need to pass in the previous day stats in the  _buildRow method. So let us modify it and add a check for this:\n  itemBuilder: (context, index) { \u00a0 \u00a0\u00a0int prevDailyData; \u00a0 \u00a0\u00a0if(index &gt; 1){ \u00a0 \u00a0 \u00a0\u00a0prevDailyData = snapshot.data.nepal[index-1].confirmed; \u00a0 \u00a0\u00a0} else { \u00a0 \u00a0 \u00a0\u00a0prevDailyData = 0; \u00a0 \u00a0\u00a0} \u00a0 \u00a0\u00a0DailyData dailyData = snapshot.data.nepal[index]; \u00a0 \u00a0\u00a0return _buildRow(context, dailyData, prevDailyData); \u00a0\u00a0},\n Now we have a red icon when case increase and green when no new cases confirmed.\n   Next, let us add a simple refresh button on the top. This will refresh when a user presses the refresh icon. For this let us add a refresh icon in the  appBar and add some action to it so that we can refresh the data:\n appBar: AppBar( \u00a0 \u00a0\u00a0title: Text(&#39;Covid19 Stats for Nepal&#39;), \u00a0 \u00a0\u00a0actions: &lt;Widget&gt;[ \u00a0 \u00a0 \u00a0\u00a0// action button \u00a0 \u00a0 \u00a0\u00a0IconButton( \u00a0 \u00a0 \u00a0 \u00a0\u00a0icon: Icon(Icons.refresh), \u00a0 \u00a0 \u00a0 \u00a0\u00a0onPressed: () { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0setState(() { futureData = fetchData(); }); \u00a0 \u00a0 \u00a0 \u00a0\u00a0}, \u00a0 \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0] \u00a0\u00a0),\n This is it. Very simple. Just add a  IconButton widget with an icon and a  onPressed property. The  onPressed property will call the setState method. This will change the state of the widget, and will automatically refresh the data. That\u2019s it.\n   Now let us add a drawer on the page to add some menu items. For this tutorial, we only have a single page. But we can add more pages, where we can display charts, news about covid19 and lots more. To do this we need to provide the user a mechanism to navigate to different pages. We can either add tabs or drawers for that. Tabs are used when there are few items to navigate. Drawers are used when there are many.  ...\n  drawer: Drawer( child: ListView( // Important: Remove any padding from the ListView. padding: EdgeInsets.zero, children: &lt;Widget&gt;[ DrawerHeader( child: Text(&#39;Covid19&#39;, style: TextStyle( color: Colors.white, fontSize: 40, ) ), decoration: BoxDecoration( color: Colors.red, ), ), ListTile( title: Text(&#39;STATS&#39;), trailing: Icon(Icons.arrow_right), onTap: () { Navigator.pop(context); Navigator.push(  ...\n Now we have a nice looking drawer. This drawer has a DrawerHeader and ListTile from which we can navigate to different pages. For now, we have only added one item on the menu, this will navigate us to the same page. We can add more menu items and more menu pages to navigate. For navigation, we are adding the Navigator on the onTap property.\n  Flutter has a lot of functionality that we can build. This is all that we are building in this flutter tutorial for beginners.\n There are a few more enhancements that you can work on and build on top of this. Here are a few things for you to try out on:\n When the refresh button in pressed show a loading status before the data gets in\n Note: The app is currently named as my_app I have made changes to the name it as COVID19 instead.", "posttime": "2020-05-02 21:47:40", "tags": "\u6559\u7a0b,flutter,\u63d0\u4f9b,tutorial,\u5b89\u88c5", "title": "\u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u7684\u98a4\u632f\u6559\u7a0b", "title_en": "Flutter Tutorial for beginners", "transed": 1, "url": "https://milapneupane.com.np/2020/05/01/the-ultimate-flutter-tutorial-for-beginners", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6559\u7a0b", "flutter", "\u63d0\u4f9b", "tutorial", "\u5b89\u88c5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000356, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6211\u4eec\u5728\u8fd9\u91cc\u4e00\u76f4\u5728\u5904\u7406\u5927\u91cf\u7684\u4e34\u5e8a\u8bd5\u9a8c\u6570\u636e\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u4ece\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u4f1a\u6d89\u53ca\u5230\u5176\u4ed6\u4eba\u4e5f\u5728\u8003\u8651\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\u8fd9\u91cc(\u7ecf\u53d1\u4ef6\u4eba\u5141\u8bb8)\u662f\u8fd9\u6837\u7684\u60f3\u6cd5\uff1a\n\u3002\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u4e34\u5e8a\u8bd5\u9a8c\u7684\u5927\u90e8\u5206\u65f6\u95f4\u548c\u8d39\u7528\u4f3c\u4e4e\u771f\u7684\u53ea\u662f\u5b98\u50da\u4f5c\u98ce\u3002\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u51e0\u79cd\u5316\u5408\u7269(\u6709\u4e9b\u662fFDA\u6279\u51c6\u4f46\u4e0d\u518d\u751f\u4ea7\u7684\uff0c\u6709\u4e9b\u662f\u6279\u51c6\u5728\u7f8e\u56fd\u5883\u5916\u751f\u4ea7\u7684\uff0c\u6709\u4e9b\u662f\u5929\u7136\u5b58\u5728\u7684\uff0c\u4f5c\u4e3a\u8865\u5145\u5242\u51fa\u552e)\uff0c\u5982\u679c\u552f\u4e00\u7684\u95ee\u9898\u662f\u201c\u8fd9\u771f\u7684\u6709\u6548\u5417\uff1f\u201d\uff0c\u6211\u771f\u7684\u53ef\u4ee5\u5728\u6211\u7684\u516c\u5bd3\u91cc\u8fdb\u884c\u8bd5\u9a8c\u3002\u5408\u6210\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u4e00\u4e24\u6b65\u57fa\u672c\u8bbe\u5907\u548c\u5e38\u7528\u8bd5\u5242\u5c31\u53ef\u4ee5\u5728\u4f60\u7684\u53a8\u623f\u91cc\u5b8c\u6210\u3002..\u3002\n\u5236\u9020\u5b89\u6170\u5242\u5f88\u5bb9\u6613\uff0c\u683c\u6e29\u751a\u81f3\u6709\u4e00\u4e2a\u5728\u81ea\u5df1\u8eab\u4e0a\u505a\u5b89\u6170\u5242\u5bf9\u7167\u8bd5\u9a8c\u7684\u534f\u8bae(https://www.gwern.net/Nootropics#blinding-yourself)\uff0c)\uff0c\u5c3d\u7ba1\u5982\u679c\u4f60\u628a\u5316\u5408\u7269(\u6216\u5b89\u6170\u5242)\u5bc4\u7ed9\u4eba\u4eec\u5e76\u5728\u5bb6\u91cc\u8fdb\u884c\u968f\u673a\u5316\uff0c\u5373\u4f7f\u662f\u8fd9\u6837\u4e5f\u4e0d\u662f\u5fc5\u8981\u7684\u3002\u800c\u4e14\u5df2\u7ecf\u6709\u4e00\u4e9b\u7814\u7a76\u5b8c\u5168\u5728\u7f51\u4e0a\u6d4b\u8bd5\u836f\u7269\u6548\u679c\uff0c\u4ece\u53d7\u8bd5\u8005\u90a3\u91cc\u6536\u96c6\u4fe1\u606f\uff0c\u4f7f\u7528\u4e00\u4e9b\u76f8\u5f53\u7b80\u5355\u7684\u8f6f\u4ef6(https://selfblinding-microdose.org/-\u56e0\u4e3a\u8ff7\u5e7b\u836f\u7269\u4ecd\u7136\u53d7\u5230\u63a7\u5236\uff0c.\u3002\n\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u6765\u81ea\u4e8e\u751f\u7269\u9ed1\u5ba2\u8fd0\u52a8\u3002\u6211\u53ef\u4ee5\u60f3\u8c61\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u5236\u836f\u4e1a\u98ce\u683c\u7684\u4e34\u5e8a\u8bd5\u9a8c\u770b\u8d77\u6765\u786e\u5b9e\u50cf\u662f\u4e00\u573a\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u3001\u6602\u8d35\u7684\u7ea0\u845b\u3002\u4e0d\u8fc7\uff0c\u8bf7\u542c\u6211\u8bf4\uff1a\u6211\u4eec\u8fd9\u6837\u505a\u662f\u6709\u539f\u56e0\u7684\u3002\u6211\u6562\u80af\u5b9a\uff0c\u5176\u4e2d\u4e00\u4e9b\u7406\u7531\u6bd4\u5176\u4ed6\u7684\u66f4\u597d\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u597d\u7684\u7406\u7531\u771f\u7684\u5f88\u597d\u3002\u6211\u4f1a\u6309\u7167\u7535\u5b50\u90ae\u4ef6\u4e2d\u63d0\u5230\u7684\u987a\u5e8f\u6765\u8003\u8651\u8fd9\u4e9b\u5efa\u8bae\uff0c\u5e76\u4e14\u8ba9\u6211\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\uff0c\u6211\u662f.\u3002\n\u9996\u5148\uff0c\u5173\u4e8e\u201c\u5408\u6210\u5f88\u5bb9\u6613\u5728\u4f60\u7684\u53a8\u623f\u91cc\u505a\u201d\u7684\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u76f8\u5f53\u591a\u7684\u836f\u7269\u4e2d\uff0c\u6d3b\u6027\u836f\u7269\u6210\u5206\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u751f\u4ea7\uff0c\u56e0\u4e3a\u52a8\u8bcd\u201cProduction\u201d\u7684\u67d0\u4e9b\u503c\u662f\u8fd9\u6837\u7684\u3002\u4f46\u4e0d\u5e78\u7684\u662f\uff0credesivir(\u9009\u62e9\u4e00\u4e2a\u805a\u5149\u706f\u4e0b\u7684\u4eba)\u4e0d\u5728\u5176\u4e2d\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u5b83\u7684\u5236\u9020\u8fc7\u7a0b\uff0c\u867d\u7136\u4e00\u4e9b\u56f0\u96be\u6765\u81ea\u4e8e\u4e0d\u5f97\u4e0d\u5236\u9020\u65e0\u6570\u5242\u91cf\u7684\u8fd9\u79cd\u6750\u6599\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u662f\u76f4\u63a5\u7f29\u51cf\u5230\u90a3\u4e2a\u5242\u91cf\u7684\u2026\u2026\u3002\n\u5373\u4f7f\u8fd9\u662f\u4e00\u79cd\u4f60\u53ef\u4ee5\u5728\u53a8\u623f\u91cc\u5236\u9020\u7684\u836f\u7269\uff0c\u4f46\u4f60\u6700\u597d\u4e0d\u8981\u53ea\u5236\u9020\u90a3\u4e48\u591a\uff0c\u7136\u540e\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5728\u914d\u65b9\u4e0a\u5c06\u4f1a\u6709\u635f\u5931\uff0c\u800c\u4e14\u63a5\u4e0b\u6765\u4f1a\u6709\u66f4\u591a\u7684\u635f\u5931\u3002\u8bf7\u95ee\u4f60\u4eec\u9700\u8981\u591a\u5c11\uff1f\u55ef\uff0c\u6709\u4e00\u6574\u5bb6\u516c\u53f8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8ba1\u7b97\u4f60\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u53ef\u80fd\u9700\u8981\u591a\u5c11\u201c\u8d85\u9f84\u201d-\u5982\u679c\u4f60\u7528\u5b8c\u4e86\u836f\u7269\uff0c\u4f60\u5c31\u641e\u7838\u4e86\u6574\u4e2a\u8bd5\u9a8c\uff0c\u5982\u679c\u4f60\u8d5a\u5f97\u592a\u591a\uff0c\u4f60\u5c31\u662f\u5728\u6d6a\u8d39\u94b1\u3002\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b58\u5728\u8fd9\u6837\u7684..\u3002\n\u4f46\u662f\u5982\u679c\u4f60\u770b\u8d77\u6765\u5feb\u8981\u7528\u5b8c\u4e86\uff0c\u4f60\u5c31\u4e0d\u80fd\u591a\u505a\u70b9\u5417\uff1f\u8fd9\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u5927\u95ee\u9898\uff1a\u826f\u597d\u7684\u5b9e\u9a8c\u5ba4\u89c4\u8303\u548c\u5f53\u524d\u7684\u826f\u597d\u5236\u9020\u89c4\u8303\u3002\u8fd9\u4e24\u8005\u5927\u81f4\u76f8\u4f3c\uff0c\u4f46\u8981\u6c42\u4e0d\u540c\uff0c\u7528\u9014\u4e5f\u4e0d\u540c\u3002GLP/CGMP\u786e\u5b9e\u589e\u52a0\u4e86\u5b98\u50da\u4f5c\u98ce\uff0c\u56e0\u4e3a\u5b83\u589e\u52a0\u4e86\u5927\u91cf\u6807\u51c6\u5316\u7a0b\u5e8f\u548c\u5927\u91cf\u6587\u6863\u3002\u6211\u4ece\u6765\u6ca1\u6709\u5728\u8fd9\u4e9b\u6807\u51c6\u4e0b\u5de5\u4f5c\u8fc7(\u6211\u505a\u7684\u662f\u65e9\u671f\u7814\u7a76\uff0c\u800c\u4e0d\u662f\u4e34\u5e8a\u6279\u6b21)\uff0c\u2026\u2026\u3002\n\u6211\u4e0d\u60f3\u8be6\u8ff0CGMP\u7684\u7ec6\u8282\uff0c\u4f46\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u53a8\u623f\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u3002\u6742\u8d28\u6982\u51b5\u3001\u6279\u6b21\u8bb0\u5f55\u3001\u6240\u6709\u914d\u6599\u548c\u8d77\u59cb\u6750\u6599\u7684\u8ddf\u8e2a\u3001\u6279\u6b21\u4e4b\u95f4\u7684\u53ef\u53d8\u6027\u3002\u3002.\u5373\u4f7f\u53ea\u662f\u5728\u4f60\u771f\u6b63\u5f00\u59cb\u8861\u91cf\u8fd9\u4e9b\u4e8b\u60c5\u4e4b\u524d\u4e3a\u5b83\u4eec\u8bbe\u5b9a\u6b63\u786e\u7684\u6807\u51c6\u4e5f\u662f\u4e00\u9879\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4f60\u7684\u670b\u53cb\u6709\u6838\u78c1\u5171\u632f\u548cLC/MS\u673a\u5668(\u6211\u4e5f\u6709\u4e00\u4e9b\u8fd9\u6837\u7684\u670b\u53cb\uff0c\u6211\u4e0d\u4f1a\u6709\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f)\uff0c\u8c01\u6765\u4fdd\u7ba1LC/MS\u2026\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u6b63\u5728\u5173\u6ce8\u836f\u7269\u7684\u5236\u9020\u548c\u914d\u65b9\uff0c\u4f60\u5230\u5e95\u662f\u5982\u4f55\u914d\u5236\u5b83\u7684\uff1f\u5982\u679c\u5b83\u662f\u7acb\u4f53\u7684\uff0c\u4f60\u5982\u4f55\u786e\u4fdd\u6bcf\u6b21\u90fd\u505a\u51fa\u76f8\u540c\u7684\u7acb\u4f53\u5f62\u72b6\u5462\uff1f\u591a\u6001\u626b\u63cf\u4f3c\u4e4e\u65e0\u7f18\u65e0\u6545\u5730\u51fa\u73b0\u4e86\uff0c\u5e76\u4e14\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u7834\u574f\u4e86\u5f00\u53d1\u65f6\u95f4\u8868\u3002\u5bf9\u4e8e\u8fd9\u79cd\u7269\u8d28\u6765\u8bf4\uff0c\u4f60\u7684\u9897\u7c92\u5927\u5c0f\u5e94\u8be5\u6709\u591a\u7ec6\uff1f\u4f60\u5982\u4f55\u786e\u4fdd\u6bcf\u4e00\u7c92\u836f\u7247\u4e2d\u7684\u9897\u7c92\u5927\u5c0f\u90fd\u662f\u4e00\u6837\u7684\uff1f(\u8fd9\u53ef\u4ee5\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c)\u3002\u4ec0\u4e48\u201c\u8f85\u6599..\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5982\u679c\u4f60\u8ba4\u4e3aCGMP(\u6211\u8fd8\u6ca1\u6709\u6df1\u5165\u5230\u5f88\u8fdc\u7684\u8868\u9762)\u53ea\u662fFDA\u5c55\u793a\u5176\u6743\u529b\u5e76\u5c06\u81ea\u5df1\u53d8\u6210\u74f6\u9888\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\u6301\u4e0d\u540c\u610f\u89c1\uff0c\u786e\u5b9e\u6709\u4eba\u8fd9\u4e48\u8ba4\u4e3a-\u4f46\u8001\u5b9e\u8bf4\uff0c\u8fd9\u4e9b\u4eba\u4e2d\u6ca1\u6709\u591a\u5c11\u4eba\u771f\u6b63\u628a\u836f\u7269\u5e26\u5230\u4e86\u8bca\u6240\uff0c\u8fd9\u4e5f\u662f\u503c\u5f97\u8003\u8651\u7684\u4e8b\u60c5\u3002\u6211\u53ef\u4ee5\u60f3\u8c61\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u7cbe\u7b80\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u6211\u4e0d\u80fd\u60f3\u8c61\u5c31\u8fd9\u6837\u5ffd\u89c6\u5b83\uff0c\u56e0\u4e3a\u6f5c\u5728\u7684\u95ee\u9898\u662f\u2026\u2026\u3002\n\u597d\u7684\uff0c\u73b0\u5728\u5982\u679c\u4f60\u6709\u836f\u4e86\uff0c\u5c31\u662f\u62db\u52df\u75c5\u4eba\u7684\u65f6\u5019\u4e86\u3002\u55ef\uff0c\u5b9e\u9645\u4e0a\uff0c\u5728\u4f60\u5f00\u59cb\u62db\u8058\u4e4b\u524d\uff0c\u662f\u65f6\u5019\u8bbe\u8ba1\u4e00\u4e2a\u8bd5\u9a8c\u4e86\uff0c\u800c\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9886\u57df\u3002\u4f60\u4f1a\u8ba4\u4e3a\u5728\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\u7814\u7a76\u4e00\u79cd\u836f\u7269", "note_en": "Since we\u2019ve been dealing with a lot of clinical trial data around here, I thought I would field a question from my email that might get to some things that others are thinking about as well. Here (with permission of its sender) is the idea:\n . . .it does seem, from the outside, like most of the time and expense of clinical trials really is just bureaucracy. I can easily think of several compounds (some FDA-approved but no longer being made, some approved outside the US, some naturally occurring and sold as supplements) that I could literally run a trial on from my apartment, if the only question were \u201cdoes this actually work? \u201d. The synthesis is easy enough to do in your kitchen, one or two steps with basic equipment and common reagents.  ...\n Making placebos is easy, Gwern even has a protocol for doing a placebo-controlled trial on yourself ( https://www.gwern.net/Nootropics#blinding-yourself),\u00a0although even that wouldn\u2019t be necessary if you mail people the compound (or placebo) and do the randomization at home. And there are already studies that test drug effects, collect information from subjects, etc. entirely online, with some pretty simple software ( https://selfblinding-microdose.org/\u2013since psychedelics are still controlled,  ...\n OK, I can see that some of this query is coming out of the biohacking movement. And I can imagine that from that perspective, a drug-industry-style clinical trial does look like a needlessly complex, expensive tangle. Hear me out, though: there are reasons for doing it the way we do. Some of those reasons are better than others, I \u2019m sure, but the good reasons are in fact really good. I \u2019ll take these suggestions in the order they \u2019re mentioned in the email, and let me say up front that I \u2019m  ...\n First off, the part about \u201cthe synthesis is easy enough to do in your kitchen\u201d. There are indeed quite a few drugs where the active pharmaceutical ingredient could, in fact, be produced that way, for some values of the verb \u201cproduce\u201d. But remdesivir (to pick one that\u2019s in the spotlight) is not one of those, unfortunately. Here\u2019s  a look at its manufacturing, and while some of the difficulties come from having to make zillions of doses of the stuff, some of them scale right back down to that  ...\n Even if this were a drug that you could make in your kitchen, though, you\u2019d better not just make that amount and call it a day. There will be losses in formulation for starters and more losses right down the line. How much do you need? Well, there are  entire companies that  existto help you calculate just how much \u201coverage \u201dyou might need in your clinical trial \u2013if you run out of drug, you \u2019ve blown the whole trial, and if you make too much you \u2019re wasting money. Just the existence of such  ...\n But if you look like you\u2019re running out, can\u2019t you just make more? That brings up another big problem:  Good Laboratory Practices\u00a0and the  Current Good Manufacturing Practices. Those two are broadly similar, but have  different requirements and are used for different purposes. GLP/CGMP does indeed add bureaucracy, because it adds  a lotof standardized procedures and a ton of documentation. I \u2019ve never worked under these standards (I do early stage research, not up next to the clinical batches),  ...\n I won \u2019t go into the details of CGMP, but it \u2019s safe to say that the requirements cannot be met in a kitchen. Impurity profiles, batch documentation, tracking of all ingredients and starting materials, batch-to-batch variability. . .even just setting the right standards for those things before you start measuring them for real is work. So even if your friends have NMR and LC/MS machines available (I have some friends like that, too, and I wouldn \u2019t have it any other way), who keeps the LC/MS  ...\n Keep in mind that you\u2019re watching both the manufacturing of the drug and its formulation, and how exactly do you formulate it? If it\u2019s a solid, how do you make sure that you\u2019ve made the same solid form every time?  Polymorphscan and do appear seemingly out of nowhere and have ruined development timelines again and again. How fine should your particle size be for the substance, and how do you make sure that it \u2019s the same in every pill? (That can made a substantial difference). What \u201cexcipients  ...\n We can disagree at this point if you feel that CGMP (whose surface I have not penetrated very far) is just a way for the FDA to flex its power and turn itself into a bottleneck, and there are indeed people who think that \u2013but to be honest, not many of those people have ever actually taken a drug into the clinic, which is also something to think about. I could imagine streamlining some of this stuff in an emergency, but I can \u2019t imagine just ignoring it, because the underlying issues that  ...\n OK, now if you have your drug, it\u2019s time to recruit patients. Well, actually, it\u2019s time to  design a trial before you start recruiting, and that\u2019s  a whole fieldin itself. You \u2019d figure that studying a single drug in an infectious disease setting might be one of the more simple trial designs, and that \u2019s actually true, but that \u2019s only simple on the relative scale. First off, what are your endpoints \u2013what are you going to measure to see if the drug works? In the case of a coronavirus trial,  ...\n Now, for those decisions. How many doses are you going to check? How do you know you \u2019ve picked the most useful ones? What sorts of patients are you going to recruit? In this case, you have several known variables to consider (or to set aside, if you can make a case for that too): severity of disease, time since onset of symptoms, age, gender, body weight, other medications being taken, known co-morbidities such as hypertension, and so on. While you \u2019re enrolling patients, you \u2019ll need  ...\n The NIAID study ended up recruiting (and dosing, and monitoring) at dozens of clinical centers on several continents just to enroll a properly matched set of 286 treatment patients and 286 control patients, or as properly matched as they could get them under the current conditions. The amount of noise in human clinical data can defy belief if you haven \u2019t seen it in person, and the last thing you want to do is go to the time, trouble, and expense of experimenting on human beings but  ...\n Another factor: you also have to have people in all these locations whose job it is to dose the patients, unfortunately. Mailing participants the drug and asking them to take it will add a lot of unnecessary scatter to the data, because some people will forget to take it. And some of those will try taking double the amount the next day, and some of them won \u2019t be sure if they did the dose yesterday or not. Some of them will have eaten, and some won \u2019t, and some will suddenly remember  ...\n You also need, for both ethical and practical reasons, another set of people who are watching over the whole thing. These folks, the monitoring committee, are the answer to the ancient question of  quis custodiet ipsos custodes, and they will be off to the side of the whole affair, empowered to look at the data being generated at set points during the trial to make sure that things aren \u2019t going off the rails. Most of the time they will say \u201ccarry on \u201d, but a reasonable number of trials  ...\n The big overarching difficulty with running a human trial the way you \u2019re proposing to, though, is that you would open yourself up to criminal prosecution by doing so. The FDA wants to hear about your drug before you give it to human beings: what it is, what you expect it to do and why, the details (GMP!) of how you make it and how you \u2019re sure that you \u2019ve made what you think you \u2019ve made, what your trial design is and why you chose that, and what you \u2019re going to look for as it  ...\n You mention that under your proposal \u201c the data would be noisier than in a traditional Phase II trial, so you\u2019d need a larger sample size\u201d, and I definitely agree about the first part. But as mentioned above, going to a larger sample size under these conditions runs a large risk of just generating every more and louder noise. The amount of noise in human clinical data can defy belief if you haven \u2019t seen it in person. Even under all the constraints and controls that I \u2019ve been describing  ...\n Well, I knew this was going to be a lengthy answer, and I hope it didn\u2019t come across too ranty. The procedures that have grown up around drug development are a sort of  Chesterton\u2019s Fence: we shouldn \u2019t pull them down without considering the reasons why they were put up. I do understand the argument that human lives are at stake when people are dying from a pandemic. But lives are at stake when you test human beings for their response to a new drug, too, and all of the biggest rules  ...\n  I work under cGLP/GMP, and the rules required for them can be picayune and bizarre, even to your typical academic scientist who doesn\u2019t work under those guidelines. However, the best way to describe it is as a return address for everything you do. For everything that can possibly go wrong (and Lord knows, that\u2019s a voluminous and unceasing list), you need to know Why it happened, and explain it in a way that makes the regulators and your bosses happy.\n Even the biohacking movement has *some* regulatory guidelines, even if they\u2019re unseen by endusers. Most of those compounds are made under USP guidelines, most of which can be patched into GLP/GMP without too much of an issue. If you do it in your kitchen, you\u2019re a bad mistake in dishwashing from a lawsuit that would put you out of business.\n  Unfortunately I have seen some \u201cpicayune and bizarre\u201d cGMP interpretations that are promoted as the Gold Standard and thus get followed without true examination of the value they add (or take away) from the process.\n  cGxP applies to instrument and IT systems as well for many the same reasons. Mountains of data will be collected at each of the steps, and systems that generate, retain and report data are formally validated as being fit for purpose, data integrity, etc. Google ALCOA Principles as an FYI.\n Someday all this may be on the cloud as a service, not quite there yet, so data is not something to be farmed out to your nephew who happens to be good at computers.\n  When the lives of people depend on your software you have a similar circus with functional safety. This is the same mixture of being an absolute pain and being necessary for good reasons while many details of the requirements are debatable.\n As an example, when you are flying in a modern plane the pilots no longer control the plane mechanically \u2013 most of that is done by software. When this software crashes, there is a plane full of people that will also crash.\n  Yeah indeed, I\u2019ve worked with DO254 (aviation electronics hardware safety) before and it\u2019s a bit of a chore (particularly when you\u2019re also under ITAR and standard security requirements). I\u2019m glad it exists every time I fly but it takes a certain type of mindest to work well under those restrictions.\n  So, if I haven\u2019t seen it in person, then can the amount of noise in human clinical data defy belief?\n  We shouldn\u2019t let the shop that ground a mirror certify that it\u2019s best for the Hubble. We shouldn\u2019t let the manufacturer certify that their jetliner is airworthy. We shouldn\u2019t let the Drug Company who has an obvious financial interest in the outcome run Phase III clinical studies on its own product.\n  The company can run whatever they want and call it a phase 3, but a \u201csuccessful\u201d phase 3 doesn\u2019t mean that you\u2019ll get approval for your drug. It still has to go through the FDA approval process.\n Yes, the company can improperly influence the FDA into approving something that probably shouldn\u2019t be approved, but that\u2019s a different conversation.\n  Disagree. The beauty of following the rules in prospective, randomized, controlled, double-blinded clinical trials is the answer doesn\u2019t change for you, no matter how much you want it to. All the FDA has to do is make sure the process was followed, including making sure there was enough sufficiently independent oversight.\n The alternative, turning clinical trials over to some other group, misaligns incentives. No other group will be as motivated to do a trial which determines safety and efficacy with minimal wasted resources including time. The company is motivated because it \u2019s necessary to get the treatment approved. The company is paying for this in the hopes of winning the prize of selling the treatment, which is the beauty of capitalism: it pulls on the rope of human desire to have nice  ...\n If you think all Phase III \u2019s are corrupted by being sponsored by a pharmaceutical company, explain why more than half fail. And most of the rest just barely squeak by. Or explain AD trials, where all have failed, despite a $20 billion/year prize if companies can get an approval. And to my knowledge, it \u2019s pretty rare that Ph3 trials are invalidated (meaning proven to be wrong about efficacy/safety, not just testing an unrepresentative population or insufficiently powered,  ...\n  Our current regulatory apparatus is akin to that old joke about democracy: it\u2019s the worst possible form, except for all the other options.\n  Thank you for your continued excellent content in the middle of this time where it is of such importance.\n  From the original e-mail &gt;&gt;heck, there\u2019s 80,000 people on /r/researchchemicals who take experimental compounds just for fun\n  As long as you aren\u2019t messing with controlled substances, the government is quite uninterested in all the different chemicals you choose to give to yourself or why you are doing it. (Okay, they\u2019d prefer you not turn your kitchen into a HazMat site, but that\u2019s not something the FDA cares anything about.)\n  It\u2019s not illegal to win a Darwin Award. It\u2019s just illegal to drag others with you.\n  I was thinking about illegal-drug laws (in the recreational, not medical, sense) not the FDA so much.\n  The 1986 Federal Analogue Act as written seems to cover a whole swathe of these \u2018research chemicals\u2019 by reference to other substances that are controlled, but as enforced in the ground it has been not to universal.\n  Well done and well described. I would have added more details re statistical analyses (especially multiple endpoints) and ongoing safety compilations, but that is only because that is where I worked. Very nice.\n  Any drug developer who\u2019s happy doing their chemistry in a kitchen is probably happy managing their sites from their car and doing their data analysis in a tavern.\n Barry says: We shouldn\u2019t let the Drug Company who has an obvious financial interest in the outcome run Phase III clinical studies on its own product.\n This is just plain wrong, for the precise reason you object to it \u2013 finances. Industry does a far better job, on average, of running trials than government or academia because we devote much greater resources, per data point, than they do. As noted, it\u2019s not perfect but that\u2019s why we have multiple layers of review.\n You want clinical trials controlled by the same scientific politics that are perpetuating the ongoing replication crisis in basic biology?\n  Oh, Boeing has its very ongoing existence invested in proving that the 737MAX is airworthy. That\u2019s not a sound reason to let Boeing certify its airworthyness.\n  Your proposal is not equivalent to saying Boeing shouldn\u2019t be able to certify its planes. It is equivalent to saying they should not be allowed to test them.\n  \u201d is an IND, an Investigational New Drug application, and it is a pain in the rear\u201d\n But isn\u2019t this the main complaint? Bureaucracy is rarely a problem if it operates swiftly \u2013 e.g. few people complain about using their biometric passport to enter the country via automated passport gates. It\u2019s bureaucracy, but it\u2019s fast and painless.\n Could we radically speed up drug development if we increased the FDA budget and mandated lightning speed SLAs for all their approvals?\n Also, wouldn\u2019t we speed up many trials if we dropped the idea of \u201cdo no harm\u201d? This is especially poignant during the COVID crisis \u2013 it seems that regulatory authorities refuse to administer human challenge trials even in the midst of a pandemic that could realistically kill 50 million people around the world of left unchecked.\n  Putting together an IND package is a pain in the rear not because the FDA is being obtuse, but because the questions that need to be answered are tough questions; tough questions that are being asked for good reasons. (As Derek mentions at the end that those questions stem from the hospital beds and graves of the patients that didn\u2019t have the benefit of correct answers to those questions.)\n And a lot of corners *are* being cut for the current pandemic. (How else do you think vaccines are already in clinical trials for a disease that didn\u2019t even exist six months ago? This is a process that would normally still be handled by mice, pigs, monkeys, etc.) And short-circuiting the trial process is how conditional approvals have been granted, also in record time, with standards far lower than we\u2019d normally accept.\n  Yes, you beat me to the conditional acceptance corner-cutting. Hydroxychloroquine demonstrated the problems with that quite ably.\n While it \u2019s rightly not addressed in this post, we \u2019ve got another example of the hazards of corner-cutting going on with all the Covid19 serology tests being commercialized without their false positive and false negative rates being known. I suspect the noise in the resulting test data is going to return to bite the US population rather hard in coming months, if we have problematic testing, inadequate contact tracing, and strong political pressure to get life  ...\n  Fantastic post, thanks. Also then after running the gauntlet of a complete sequence of development, we still don\u2019t always know all we need to about the drug\u2026 Think it also ties to effect size. Most drugs aren\u2019t transforming people\u2019s heathy, rather are having incremental effects in the right direction. You want Everything to be as same as you possibly can (while knowing it can\u2019t truly be) bar the treatment.\n  My understanding from here and other places is there is a history behind this that goes back to the 19th century and well into the 20th. Patent medicine, Adulterated food, The Poison Squad, Cocaine, Heroin, Opium, Nazi human medical experimentation, Thalidomide are just a few of the highlights. Experimentation on humans is not something that is done casually.\n  And for the clinical end of the development, studies are run where the investigators sign and date some documents \u201cmonth / day / year and other documents \u201cday / month /year\u201d and it is a minor infraction if you do the opposite.\n  I did some programming for aviation. There was a lot of \u201cscar tissue\u201d. \u201cWhat\u2019s that code about?\u201d \u201cThere was a crash in \u201993. Pilots should always use full power on that runway.\u201d\n It\u2019s nothing compared to the pharma business. That little reference to unexpected polymorphisms hides a real horror story.\n  I started as a process chemist less than 10 years ago. I\u2019ve had to explain to friends and family that developing a drug, even putting aside the enormous scientific achievements required of the research side of the business, is much more than the chemical synthesis. This is a great explanation and I\u2019ll start reviewing it before family reunions.\n  Why use GMP practices instead of testing the final product. If the final batch is up to standard , why do we care how it was produced? Even the Zantac fiasco was not because of manufacturing defects, it was because the drug degraded that way. If good enough remdesivir can be produced without GMP then for whatever is holly please do. If GMP doesn\u2019t make a difference, then follow it.\n  \u2014 because you cannot inspect quality into a product. In other words, a 50-100 g sample is not representative of a 100 or 500 kg batch \u2026 or, you cannot test 100% of a batch.\n  There are very many answers to your question, but I will just give two\u2026 1) You mention degradation, but that is quite often very sensitive to the purity (and particle size, morphology etc) of both the API and the excipients. The GMP ensures that when the material is produced that it satisfies the criteria that will give a product with a predictable shelf life. Analysis on the final product is not necessarily sufficient, particularly when \u201calmost invisible  ...\n  As a follow on- once a major pharma company used ethanol to clean out a reactor rather than the \u201cstandard\u201d solvent that had been approved for GMP and tox qualified. Unfortunately, the next chemical step used methane sulfonic acid in the synthesis, which produced ethyl mesylate as an impurity. I \u201cthink\u201d that the (very reactive/toxic) ethyl mesylate ended up in the API. It was a couple of years ago- but it is probably in the In the Pipeline files.\n  For a number of years FDA has been advocating Quality by Design which through firm understanding of the manufacturing process and monitoring key quality attributes can minimize the testing in of quality after the fact. Blue sky end objective would be real-time batch release.\n Generally we are not there yet for drug products manufactured for many years (let alone something totally novel) which is why extensive QC testing for batch release and years of follow-up stability testing is done under cGMP.\n  Because you\u2019d like to know that the stuff you make in six months (or next month, or a year) still works and is identical to the stuff you tested to show it works, You\u2019d also like to know if it stops working, why it stopped working, and how to fix it. Not knowing those things means that the test data you got doesn\u2019t apply to what you\u2019re now making, and you don\u2019t know what you claim to know.\n People get cranky when their computers stop working, and that only prevents them from looking at the Internet (and sometimes working, but mostly looking at the Internet). When your drug can make people blind or deaf, or die, people get more protective. COVID-19 isn\u2019t good, but it doesn\u2019t have the death rates of things people already make drugs for and are expected to keep safe.\n  Valsartan contamination was caused by a different production method (solvent, if I remember correctly). But I suppose there is more to it that requires traceability. How far does that traceability go? Across suppliers as well?\n  Giannas Although does involve degradation issues I seem to recall the Zantac problems arose after a change in the manufacturing process involving switch that included use of DMF which introduced trace impurities that react to produce the cancer inducing impurities. The first GMP rule I learned is you can not test Quality into the product where while proper analytical is critical knowledge and control of the entire process is required to assure  ...\n  Testing  for what is the problem that chemists tell me. That you can\u2019t just ask \u201cis this 99.9999999% pure y/n\u201d, you can have a rough test of what\u2019s there, but as far as asking what\u2019s *not* there you need to know what questions to ask. You need to understand the failure modes of the production process.\n  The results seem very dramatic. Any medication that showed an effect like this would have people very excited indeed. Is there something wrong with the study? The number of subjects was 780.\n This was a retrospective study that compared the likelihood of death in three patient groups: normal Vitamin D level in the blood, insufficient Vitamin D level, or deficient Vitamin D level:\n  Even if Vit D deficiency really does correlate with increased risk of death from COVID, as the study claims, that doesn\u2019t mean that giving Vit D itself will help. Patients with Vit D deficiency probably have other issues as well, eg from generally poor nutrition, etc, that could put them at higher risk if death from COVID. In such a case, giving Vit D wouldn\u2019t help.\n Not saying it doesn\u2019t deserve more study, just that going straight to the idea that Vit D itself would reduce deaths is a pretty big leap.\n  You have to work back from the adverse event involved (in this case, \u201cdeath\u201d) and consider  all disease processes involved before you can say whether or not vitamin deficiency was a clinical marker or the actual cause of death. Vitamin D3 deficiency is associated with diabetes, which can cause all sorts of organ damage, including heart disease of various types. But organ damage can have a number of other causes, too.\n The problem with retrospective studies is that they can be highly suggestive of a link to a given disease process, but those trying to use them must consider confounding factors, not all of which might appear in the patient data (was the patient well-nourished? A smoker? A regular drinker of alcohol?).\n This study\u2019s the kind of thing that might give an NIH center reason to commission more studies and either pay for a larger (thousands of patients) retrospective study, or enroll a number of patients into a study which compiled extensive data on each patient\u2019s medical history, their diet, intake of medications and non-prescribed drugs, level of physical activity,  et cetera.\n  Great summary Derek! I believe that thoughtful explanations like yours are really important to address huge misconceptions about therapy development that seem (to me) to be widely held in the general population: -If a potential therapy logically \u2018should\u2019 work, it will work -Drug companies already know everything about their potential therapies right at the start of the development process -The time and expense it takes to bring a potential therapy to market  ...\n As I assume your blog is getting more visits during the pandemic, your consistent education on these points is more important than ever.\n  I started to read this but I got sidetracked imagining using TMSCN in my kitchen.\n  Using chemistry performed by people who don\u2019t necessarily care about the consequences in their end users is likely not a good method by which to make drugs.\n  You mention GMP and GLP, as I would expect a chemist to do (no offense). There \u2019s also GCP (good clinical practice) which governs conduct of a clinical trial. Your post covers some of it, but there \u2019s also regulatory oversight of trial conduct, institutional review boards (IRB also called ethics committees), site inspections, data collection standards that ensure that data can be verified by an outside reviewer, and not changed after the fact (databases  ...\n There \u2019s a lot of skepticism of phase III trials sponsored by pharmaceutical companies. In fact, they are run in a way that allows thorough outside audit of the results, which the FDA usually does before approval. There are many shady practices in the industry, but I don \u2019t know of very many phase III trials that have been shown to be invalid, after drug approval (at least, in US by FDA). The way such trials are run, it \u2019s very difficult to game the  ...\n  Another thing GCP covers is ensuring that of somebody in a trial turns up at an A&amp;E department (or something less dramatic, like becomes pregnant, and being unlikely to become pregnant is often a recruitment criteria for that reason) it is possible for their care team to break the blind and find out what they have been given. There are lots of little corners like this that require you to have planned ahead, and to have the right people on board  ...\n  Thanks, Derek, for comprehensively answering \u201cwhy can\u2019t we ditch all the red tape in clinical trials?\u201d I worked in analysis of the data from human trials (number crunching, not \u201cwhy is this happening?\u201d) for years with various product teams. I got to see a cross-section of the issues involved, from medical experts to tech writers, to statistics (I worked pretty closely with the stats people in most of my projects).\n I didn\u2019t see anyone who was a \u201ctelephone sanitizer\u201d (the useless third of the population Douglas Adams made immortal in  The Hitchhiker \u2019s Guide to the Galaxy) who could have been rounded up and sent off to another solar system with no loss to society. Everyone there was vital to the task of testing new drugs and being as sure as possible they worked (did what they were supposed to, and nothing else significant) and didn \u2019t hurt the patients we tested  ...\n Back in the 1990s when we were doing this, someone i worked with at Lilly estimated getting a drug through clinical testing to NDA approval cost about $300,000/day. I don\u2019t think that included the cost of building pilot plants to make enough study drug to test (at my group in Lilly, that involved a specialized kind of brewery to make huge cultures of recombinant", "posttime": "2020-05-02 21:47:24", "tags": "\u4e34\u5e8a\u8bd5\u9a8c,trials,\u836f\u7269,drug", "title": "\u4e3a\u4ec0\u4e48\u4e34\u5e8a\u8bd5\u9a8c\u5982\u6b64\u590d\u6742\uff1f", "title_en": "Why Are Clinical Trials So Complicated?", "transed": 1, "url": "https://blogs.sciencemag.org/pipeline/archives/2020/05/01/why-are-clinical-trials-so-complicated", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u4e34\u5e8a\u8bd5\u9a8c", "trials", "\u836f\u7269", "drug"]}, {"category": "", "categoryclass": "", "imagename": "ff7eca27b2821f8e8c567bf3a4a6b582.jpg", "infoid": 1000355, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66fc\u54c8\u987f\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u88c1\u5b9a\uff0c\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(Federal Communications Commission)\u5fc5\u987b\u5411\u4e24\u540d\u8bb0\u8005\u63d0\u4f9b\u8bbf\u95ee\u670d\u52a1\u5668\u65e5\u5fd7\u7684\u6743\u9650\uff0c\u8fd9\u4e9b\u65e5\u5fd7\u53ef\u80fd\u4f1a\u4e3a\u8be5\u673a\u67842017\u5e74\u7f51\u7edc\u4e2d\u7acb\u56de\u6eda\u5f15\u53d1\u7684\u6b3a\u8bc8\u6307\u63a7\u63d0\u4f9b\u65b0\u7684\u89c1\u89e3\u3002\n\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u7684\u4e24\u540d\u8bb0\u8005\u5c3c\u53e4\u62c9\u65af\u00b7\u5eb7\u83f2\u7d22\u5c14(Nicholas Confessore)\u548c\u52a0\u5e03\u91cc\u57c3\u5c14\u00b7\u4e39\u65af(Gabriel Dance)\u6839\u636e\u201c\u4fe1\u606f\u81ea\u7531\u6cd5\u201d(Freedom Of Information Act)\u8d77\u8bc9FCC\uff0c\u6b64\u524dFCC\u62d2\u7edd\u4e86\u4ed6\u4eec\u67e5\u770b\u65e5\u5fd7\u526f\u672c\u7684\u8bf7\u6c42\u3002\u65e5\u5fd7\u5c06\u663e\u793a\u57282017\u5e7412\u6708\u7f51\u7edc\u4e2d\u7acb\u6295\u7968\u4e4b\u524d\u53d1\u9001\u7ed9\u8be5\u673a\u6784\u7684\u6570\u767e\u4e07\u6761\u516c\u4f17\u8bc4\u8bba\u80cc\u540e\u7684\u539f\u59cbIP\u5730\u5740\u7b49\u7ec6\u8282\u3002\nFCC\u8bd5\u56fe\u63a8\u7ffb\u8fd9\u7bc7\u8bba\u6587\u7684\u8981\u6c42\uff0c\u4f46\u672a\u80fd\u8bf4\u670d\u5730\u533a\u6cd5\u5b98\u6d1b\u5a1c\u00b7\u65af\u79d1\u83f2\u5c14\u5fb7(Lorna Schofield)\u3002\u5979\u5199\u9053\uff0c\u5c3d\u7ba1\u8be5\u673a\u6784\u63d0\u51fa\u4e86\u9690\u79c1\u95ee\u9898\uff0c\u4f46\u516c\u5e03\u65e5\u5fd7\u53ef\u80fd\u6709\u52a9\u4e8e\u6f84\u6e05\u6b3a\u8bc8\u6d3b\u52a8\u662f\u5426\u5e72\u6270\u4e86\u8bc4\u8bba\u671f\uff0c\u4ee5\u53ca\u8be5\u673a\u6784\u7684\u51b3\u7b56\u8fc7\u7a0b\u662f\u5426\u201c\u5bb9\u6613\u53d7\u5230\u8150\u8d25\u7684\u5f71\u54cd\u201d\u3002\n\u5728\u4e0e\u53bb\u5e74\u6625\u5929\u5173\u4e8e\u865a\u5047\u7f51\u7edc\u653b\u51fb\u7684\u6307\u63a7\u4f5c\u6597\u4e89\u65f6\uff0c\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(Federal Communications\u2026)\u3002\n\u591a\u8bfb\u3002\n\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5728\u6cd5\u5ead\u4e0a\u8fa9\u79f0\uff0c\u5c06\u65e5\u5fd7\u4e2d\u5305\u542b\u7684\u6570\u767e\u4e07\u4e2aIP\u5730\u5740\u516c\u4e4b\u4e8e\u4f17\u5c06\u6784\u6210\u201c\u5bf9\u4e2a\u4eba\u9690\u79c1\u7684\u65e0\u7aef\u4fb5\u72af\u201d\u3002\u867d\u7136\u65af\u79d1\u83f2\u5c14\u5fb7\u5e76\u4e0d\u5b8c\u5168\u4e0d\u540c\u610f\uff0c\u4f46\u5979\u8bf4\uff0c\u8be5\u673a\u6784\u672a\u80fd\u5145\u5206\u9610\u660e\u4efb\u4f55\u4eba\u5c06\u5982\u4f55\u53d7\u5230\u62ab\u9732\u7684\u4f24\u5bb3\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u65af\u79d1\u83f2\u5c14\u5fb7\u8bf4\uff0c\u5979\u8fd8\u51b3\u5b9a\u6743\u8861\u4efb\u4f55\u5047\u8bbe\u7684\u4f24\u5bb3\u4e0e\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u516c\u4f17\u7684\u6f5c\u5728\u4ef7\u503c\u3002\u201c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u516c\u4f17\u5bf9\u4fe1\u606f\u62ab\u9732\u7684\u5174\u8da3\u5f88\u5927\uff0c\u56e0\u4e3a\u8bc4\u8bba\u8fc7\u7a0b\u5bf9\u673a\u5173\u89c4\u5219\u5236\u5b9a\u975e\u5e38\u91cd\u8981\uff0c\u201d\u5979\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\uff1a\u201c\u5982\u679c\u771f\u6b63\u7684\u516c\u4f17\u8bc4\u8bba\u88ab\u6b3a\u8bc8\u6027\u4f20\u771f\u6df9\u6ca1\u4e86\uff0c\u90a3\u4e48\u901a\u77e5\u548c\u8bc4\u8bba\u8fc7\u7a0b\u5c31\u5931\u8d25\u4e86\u3002\u201d\n\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u63d0\u8d77\u8bc9\u8bbc\u4e4b\u524d\uff0cGizmodo\u62a5\u9053\u79f0\uff0cFCC\u591a\u6b21\u8bd5\u56fe\u5236\u9020\u9ed1\u5ba2\u653b\u51fb\u5176\u8bc4\u8bba\u7cfb\u7edf\u7684\u62a5\u9053\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u7535\u5b50\u8bc4\u8bba\u5f52\u6863\u7cfb\u7edf(ECFS)\u57282015\u5e74\u548c2017\u5e74\u90fd\u5d29\u6e83\u4e86\uff0c\u4e0a\u5468\u201c\u4eca\u591c\u79c0\u201d\u4e3b\u6301\u4eba\u7ea6\u7ff0\u00b7\u5965\u5229\u5f17(John Oliver)\u6307\u793a\u6570\u767e\u4e07\u89c2\u4f17\u5411\u8be5\u673a\u6784\u53d1\u51fa\u5927\u91cf\u652f\u6301\u7f51\u7edc\u4e2d\u7acb\u7684\u8bc4\u8bba\u3002\n\u4e00\u5e74\u591a\u6765\uff0cFCC\u58f0\u79f0\u6709\u8bc1\u636e\u8868\u660e\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\u653b\u51fb\u662f\u8bc4\u8bba\u7cfb\u7edf\u95ee\u9898\u7684\u5e55\u540e\u9ed1\u624b\u3002\u7136\u800c\uff0c2018\u5e748\u6708\uff0cFCC\u4e3b\u5e2d\u963f\u5409\u7279\u00b7\u6d3e(Ajit Pai)\u7ec8\u4e8e\u627f\u8ba4\u8fd9\u4e0d\u662f\u771f\u7684\u3002\u5728\u76d1\u5bdf\u957f\u7684\u4e00\u4efd\u62a5\u544a\u6ca1\u6709\u53d1\u73b0\u88ad\u51fb\u7684\u8bc1\u636e\u540e\uff0c\u6d3e\u8bd5\u56fe\u5c06\u8d23\u4efb\u5f52\u548e\u4e8e\u4ed6\u7684\u5de5\u4f5c\u4eba\u5458-\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u524d\u603b\u7edf\u5df4\u62c9\u514b\u00b7\u5965\u5df4\u9a6c(Barack Obama)\u3002\nFCC\u63a8\u52a8\u5e9f\u9664\u5965\u5df4\u9a6c\u65f6\u4ee3\u7684\u7f51\u7edc\u4e2d\u7acb\u89c4\u5219\uff0c\u5bfc\u81f4\u8d85\u8fc72200\u4e07\u6761\u8bc4\u8bba\u88ab\u63d0\u4ea4\u3002(\u4f5c\u4e3a\u89c4\u5219\u5236\u5b9a\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u673a\u6784\u88ab\u8981\u6c42\u5f81\u6c42\u516c\u4f17\u610f\u89c1\u3002)\u3002\u53cd\u590d\u8c03\u67e5\u53d1\u73b0\uff0c\u8bb8\u591a\u8bc4\u8bba\u4f3c\u4e4e\u90fd\u662f\u5047\u7684\u3002\u53bb\u5e74\uff0cGizmodo\u8ffd\u8e2a\u5230\u8bb8\u591a\u770b\u4f3c\u865a\u5047\u7684\u8bc4\u8bba\u6307\u5411\u9ed1\u94b1\u56e2\u4f53-\u5305\u62ec\u4e00\u4e9b\u4e0e\u7279\u6717\u666e\u7ade\u9009\u6d3b\u52a8\u6709\u5173\u7684\u56e2\u4f53-\u5176\u4e2d\u8bb8\u591a\u8bc4\u8bba\u662f\u7531\u603b\u90e8\u4f4d\u4e8e\u534e\u76db\u987f\u7279\u533a\u7684CQ\u70b9\u540d\u8282\u76ee\u4e2d\u5fc3\u4e0a\u4f20\u7684\u3002\nFCC\u7f51\u7ad9\u4e0a\u6570\u5341\u540d\u59d3\u540d\u548c\u5730\u5740\u4e0e\u76f8\u540c\u7684\u53cd\u7f51\u7edc\u4e2d\u7acb\u8bc4\u8bba\u4e00\u8d77\u51fa\u73b0\u7684\u4eba\u544a\u8bc9Gizmodo\uff0c\u4ed6\u4eec\u4e0d\u8bb0\u5f97\u63d0\u4ea4\u8fc7\u8fd9\u4e9b\u8bc4\u8bba\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u4eba\u8bf4\u4ed6\u4eec\u751a\u81f3\u4ece\u6765\u6ca1\u6709\u542c\u8bf4\u8fc7\u201c\u7f51\u7edc\u4e2d\u7acb\u201d\u8fd9\u4e2a\u8bcd\u3002\n\u65f6\u62a5\u8d62\u5f97\u7684\u670d\u52a1\u5668\u65e5\u5fd7\u53ef\u80fd\u6709\u52a9\u4e8e\u8bb0\u8005\u63ed\u793a\u865a\u5047\u8bc4\u8bba\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u8fd9\u4e9b\u8bc4\u8bba\u5df2\u7ecf\u4fc3\u4f7f\u7f8e\u56fd\u53f8\u6cd5\u90e8\u548c\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u529e\u516c\u5ba4\u5c55\u5f00\u8c03\u67e5\u3002\u6cd5\u5ead\u8bb0\u5f55\u663e\u793a\uff0c\u81f3\u5c11\u5728\u4e00\u5f00\u59cb\uff0c\u65f6\u62a5\u8bb0\u8005\u5173\u6ce8\u7684\u662f\u4e00\u7bc7\u58f0\u79f0\u8fd150\u4e07\u6761\u8bc4\u8bba\u53ef\u80fd\u4e0e\u4fc4\u7f57\u65af\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\u6709\u5173\u7684\u62a5\u9053\u3002\nPai\u57282018\u5e74\u7684\u4e00\u4efd\u673a\u6784\u5907\u5fd8\u5f55\u4e2d\u8868\u793a\uff0c\u4fc4\u7f57\u65af\u8d26\u6237\u662f50\u4e07\u6761\u8bc4\u8bba\u7684\u5e55\u540e\u9ed1\u624b\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u4e8b\u5b9e\u201d\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u7684\u5f8b\u5e08\u5728\u6cd5\u5ead\u4e0a\u8fa9\u79f0\u6070\u597d\u76f8\u53cd\u3002", "note_en": "A Manhattan federal judge has ruled the Federal Communications Commission must provide two reporters access to server logs that may provide new insight into the allegations of fraud stemming from agency\u2019s 2017 net neutrality rollback.\n  A pair of New York Times reporters\u2014Nicholas Confessore and Gabriel Dance\u2014sued the FCC under the Freedom of Information Act after it   refused their request to view copies of the logs. The logs will show, among other details, the originating IP addresses behind the millions of public comments sent to the agency ahead of the December 2017 net neutrality vote.\n The FCC attempted to quash the paper\u2019s request but failed to persuade District Judge Lorna Schofield, who wrote that, despite the privacy concerns raised by the agency, releasing the logs may help clarify whether fraudulent activity interfered with the comment period, as well as whether the agency\u2019s decision-making process is \u201cvulnerable to corruption.\u201d\n   As it wrestled with accusations about a fake cyberattack last spring, the Federal Communications\u2026\n Read more\n The FCC argued in court that making the millions of IP addresses contained in the logs publicly accessible would constitute an \u201cunwarranted invasion of personal privacy.\u201d And while Schofield didn\u2019t entirely disagree, she said the agency had failed to adequately spell out how anyone would be harmed by the disclosure.\n   Regardless, Schofield said she also decided to weigh any hypothetical harm against the potential value of the information to the public. \u201cIn this case, the public interest in disclosure is great because the importance of the comment process to agency rulemaking is great,\u201d she said, adding: \u201cIf genuine public comment is drowned out by a fraudulent facsimile, then the notice-and-comment process has failed.\u201d\n  The Times\u2019 lawsuit follows reporting by Gizmodo that exposed   multiple attempts by the FCC to   manufacture stories about hackers attacking its comment system. In reality, the Electronic Comment Filing System (ECFS) crashed, both in 2015 and 2017, after  Last Week Tonight host John Oliver instructed millions of his viewers to flood the agency with pro-net neutrality comments.\n   For over a year, the FCC claimed to have proof that distributed denial-of-service (DDoS) attacks were behind the comment system issues. In August 2018, however, FCC Chairman Ajit Pai finally admitted that wasn\u2019t true. After an   inspector general report found no evidence of an attack, Pai sought to   pin the blame on his staff\u2014and, for some reason, former President Barack Obama.\n  The FCC\u2019s push to repeal the Obama-era net neutrality rules resulted in more than 22 million comments being filed. (As part of its rulemaking process, the agency is required to solicit comments from the public.) Repeated investigations have found that many of the comments appear to be fake. Last year, Gizmodo traced numerous seemingly fake comments to   dark money groups\u2014including some with   links to the Trump campaign\u2014many of which had been uploaded by CQ Roll Call, a Washington D.C.-based  ...\n   Dozens of people whose names and addresses appeared alongside identical anti-net neutrality comments on the FCC\u2019s website told Gizmodo they had no memory of filing the comments. Some, in fact, said they had never even heard of the term \u201cnet neutrality.\u201d\n The server logs won by the Times may aid reporters in shining a light on the culprit (or culprits) responsible for the fake comments, which have already spurred investigations at the U.S. Justice Department and the New York attorney general\u2019s office. Court records show Times reporters were, at least initially, focused on   a report that claimed nearly half a million comments could be tied to Russian email accounts.\n  Pai stated in an   agency memo in 2018 that it was a \u201cfact\u201d that Russian accounts were behind the half-million comments. His attorneys, meanwhile, were   arguing the exact opposite in court.", "posttime": "2020-05-02 21:47:18", "tags": "ip,neutrality,\u8bc4\u8bba,agency", "title": "\u6cd5\u5b98\u547d\u4ee4FCC\u63d0\u4ea4\u94fe\u63a5\u5230\u865a\u5047\u7f51\u7edc\u4e2d\u7acb\u8bc4\u8bba\u7684IP\u5730\u5740", "title_en": "Judge Orders FCC to Hand IP Addresses Linked to Fake Net Neutrality Comments", "transed": 1, "url": "https://gizmodo.com/judge-orders-fcc-to-hand-over-ip-addresses-linked-to-fa-1843202071", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["ip", "\u8bc4\u8bba", "agency"]}, {"category": "", "categoryclass": "", "imagename": "c81364d1d36e71c39d5ae5e8feac8c25.png", "infoid": 1000354, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u8005\u8d21\u732e\uff1aE.K.W.\uff0cA.N.Q\u548cJ.A.M.\u6982\u5ff5\u5316\uff1bE.K.W.\u548cA.N.Q.\u5f62\u5f0f\u5206\u6790\uff1bE.K.W.\uff0cA.N.Q\uff0cC.A.S.\uff0cA.W.N.\u548cG.D.\u8c03\u67e5\uff1bE.K.W.\uff0cA.N.Q\uff0cC.A.S.\uff0cA.W.N.\uff0cG.D.\u548cJ.A.M.\u65b9\u6cd5\u8bba\uff1bE.K.W.\u548cJ.A.M.\u5199\u4f5c-\u539f\u7a3f\uff1bE.K.W.\u3001A.N.Q\u3001C.A.S.\u3001A.W.N.\u3001G.D.\u548cJ.A.M.\u5199\u4f5c-\u5ba1\u67e5\u548c\u7f16\u8f91\uff1bA.N.Q.\u6570\u636e\u7ba1\u7406\uff1bA.W.N.\u548cJ.A.M.\u76d1\u7763\uff1bJ.A.M.\u8d44\u91d1\u83b7\u53d6\uff1bJ.A.M.\u9879\u76ee\u7ba1\u7406\u3002\nT\u7ec6\u80de\u53d7\u4f53(TCR)\u4f5c\u4e3a\u6cbb\u7597\u836f\u7269\u548c\u6297\u4f53\u6837\u8bd5\u5242\u5728\u76d1\u6d4b\u75be\u75c5\u8fdb\u5c55\u548c\u75ab\u82d7\u6548\u529b\u65b9\u9762\u5177\u6709\u76f8\u5f53\u5927\u7684\u6f5c\u529b\u3002\u6297\u4f53\u53ea\u80fd\u8bc6\u522b\u5206\u6ccc\u7684\u548c\u8868\u9762\u7ed3\u5408\u7684\u86cb\u767d\uff0c\u800cTCR\u5219\u8bc6\u522b\u539f\u672c\u65e0\u6cd5\u63a5\u89e6\u5230\u7684\u4e0e\u75be\u75c5\u76f8\u5173\u7684\u7ec6\u80de\u5185\u86cb\u767d\uff0c\u5f53\u5b83\u4eec\u88ab\u5448\u73b0\u4e3a\u4e0e\u4e3b\u8981\u7ec4\u7ec7\u76f8\u5bb9\u6027\u590d\u5408\u4f53(PMHC)\u7ed3\u5408\u7684\u52a0\u5de5\u80bd\u65f6\u3002TCR\u4e3b\u8981\u88ab\u63a2\u7d22\u7528\u4e8e\u764c\u75c7\u6cbb\u7597\uff0c\u4f46\u4e5f\u53ef\u80fd\u9488\u5bf9\u611f\u67d3\u6027.", "note_en": "Author contributions: E.K.W., A.N.Q., and J.A.M. conceptualization; E.K.W. and A.N.Q. formal analysis; E.K.W., A.N.Q., C.A.S., A.W.N., and G.D. investigation; E.K.W., A.N.Q., C.A.S., A.W.N., G.D., and J.A.M. methodology; E.K.W. and J.A.M. writing-original draft; E.K.W., A.N.Q., C.A.S., A.W.N., G.D., and J.A.M. writing-review and editing; A.N.Q. data curation; A.W.N. and J.A.M. supervision; J.A.M. funding acquisition; J.A.M. project administration.\n  T-cell receptors (TCR) have considerable potential as therapeutics and antibody-like reagents to monitor disease progression and vaccine efficacy. Whereas antibodies recognize only secreted and surface-bound proteins, TCRs recognize otherwise inaccessible disease-associated intracellular proteins when they are presented as a processed peptide bound to a major histocompatibility complex (pMHC). TCRs have been primarily explored for cancer therapy applications, but could also target infectious  ...", "posttime": "2020-05-02 21:47:12", "tags": "app,\u7ec6\u80de,creates,\u7ed3\u5408,disease", "title": "\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u521b\u9020\u51fa\u50cf\u6297\u4f53\u4e00\u6837\u81ea\u7531\u5faa\u73af\u7684T\u7ec6\u80de\u53d7\u4f53", "title_en": "New approach creates T-cell receptors that circulate freely like antibodies", "transed": 1, "url": "https://www.jbc.org/content/early/2019/02/22/jbc.RA118.007187", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["app", "\u7ec6\u80de", "creates", "\u7ed3\u5408", "disease"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000353, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Design Squigle\u662f\u5bf9\u8bbe\u8ba1\u8fc7\u7a0b\u7684\u7b80\u5355\u8bf4\u660e\u3002\u7814\u7a76\u3001\u53d1\u73b0\u6d1e\u5bdf\u529b\u3001\u4ea7\u751f\u521b\u9020\u6027\u6982\u5ff5\u3001\u539f\u578b\u8fed\u4ee3\u5e76\u6700\u7ec8\u5728\u4e00\u4e2a\u8bbe\u8ba1\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u7ed3\u675f\u7684\u65c5\u7a0b\u3002\u5b83\u610f\u5728\u4f20\u8fbe\u65c5\u9014\u7684\u611f\u89c9\u3002\u4ece\u6df7\u4e71\u548c\u4e0d\u786e\u5b9a\u7684\u5de6\u8fb9\u5f00\u59cb\uff0c\u5230\u53f3\u8fb9\u7ed3\u675f\uff0c\u53ea\u6709\u4e00\u4e2a\u7126\u70b9\uff1a\u8bbe\u8ba1\u3002\u8bf7\u968f\u65f6\u4e0b\u8f7d\u63d2\u56fe\u5e76\u4f7f\u7528\u3002\u5b83\u5728\u8fd9\u91cc\u4ee5\u77e5\u8bc6\u5171\u4eab\u7248\u6743\u7684\u5f62\u5f0f\u5171\u4eab\uff0c.", "note_en": "The Design Squiggle is a simple illustration of the design process. The journey of researching, uncovering insights, generating creative concepts, iteration of prototypes and eventually concluding in one single designed solution. It is intended to convey the feeling of the journey. Beginning on the left with mess and uncertainty and ending on the right in a single point of focus: the design.  Please feel free to download the illustration and use it. It is shared here under a Creative Commons Copyright,  ...", "posttime": "2020-05-02 21:47:06", "tags": "\u8bbe\u8ba1,design,creative", "title": "\u8bbe\u8ba1\u7684\u4e71\u4e03\u516b\u7cdf", "title_en": "The Design Squiggle", "transed": 1, "url": "https://thedesignsquiggle.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8bbe\u8ba1", "design", "creative"]}]