[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1001353, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u554a\uff0c\u662f\u7684\uff0c\u6240\u4ee5\u6628\u5929\u5173\u4e8e\u6211\u611a\u8822\u7684\u5c0fRPC\u8d1f\u8f7d\u6d4b\u8bd5\u7684\u5e16\u5b50\u70b8\u4e86\u3002\u6709\u5f88\u591a\u5173\u4e8e\u5b83\u7684\u53cd\u9988\u548c\u5176\u4ed6\u51e0\u4e2a\u76f8\u5173\u7684\u5e16\u5b50\u3002\u6211\u5c06\u5c1d\u8bd5\u56de\u7b54\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u89e3\u51b3\u4e00\u4e9b\u95ee\u9898\u3002\n\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\uff0c\u81f3\u5c11\u73b0\u5728\u4e0d\u4f1a\u3002\u8fd9\u5b9e\u9645\u4e0a\u65e0\u5173\u7d27\u8981\u3002\u6211\u8ba4\u4e3a\u60a8\u53ef\u4ee5\u7528\u4efb\u4f55\u8bed\u8a00\u7f16\u5199\u7cdf\u7cd5\u7684\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u7528\u4efb\u4f55\u8bed\u8a00\u7f16\u5199\u76f8\u5f53\u4e0d\u9519\u7684\u670d\u52a1\u3002\u7136\u800c\uff0c\u5f53\u4f60\u5f00\u59cb\u4ece\u4f60\u7684\u786c\u4ef6\u4e2d\u6324\u51fa\u6700\u540e66%\u7684\u65f6\u5019\uff0c\u6a61\u80f6\u5c31\u4f1a\u9047\u5230\u9ebb\u70e6\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u5728\u4e00\u4e2a\u8ba4\u4e3a\u4e3b\u673a\u4e0aCPU\u5229\u7528\u7387\u8fbe\u523033%\u7684\u60c5\u51b5\u4e0b\u6b63\u5e38\u5de5\u4f5c\u7684\u5730\u65b9\u5de5\u4f5c\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\u6211\u66fe\u7ecf\u8fd9\u6837\u505a\u8fc7\u3002\u8fd9\u592a\u53ef\u6015\u4e86\u3002\n\u901a\u8fc7\u4e0d\u544a\u8bc9\u4f60\u5b83\u7528\u7684\u662f\u54ea\u79cd\u8bed\u8a00\uff0c\u6211\u8bbe\u6cd5\u997f\u6b7b\u4e86\u4e00\u6574\u573a\u5173\u4e8e\u5bf9\u8bdd\u7684\u6b21\u8981\u8868\u6f14\uff0c\u5728\u8fd9\u573a\u5bf9\u8bdd\u4e2d\uff0c\u4eba\u4eec\u8fdb\u884c\u4e86\u4e00\u573a\u5168\u9762\u7684\u8bed\u8a00\u6218\u4e89\uff0c\u5fd8\u8bb0\u4e86\u4ed6\u4eec\u4ecd\u7136\u6ca1\u6709\u7528\u81ea\u5df1\u9009\u62e9\u7684\u8bed\u8a00\u5b8c\u6210\u540c\u6837\u7684\u4e8b\u60c5\u3002\n\u6211\u6253\u8d4c\u5b83\u53ef\u4ee5\u7528\u8fd9\u79cd\u8bed\u8a00\u6765\u505a\u3002\u90a3\u4e9b\u6574\u5929\u5420\u4e2a\u4e0d\u505c\u3001\u5e72\u5f97\u5f88\u5c11\u7684\u4eba\uff0c\u80fd\u4e0d\u80fd\u505a\u5230\u5462\uff1f\u90a3\u5b8c\u5168\u662f\u53e6\u4e00\u56de\u4e8b\u4e86\u3002\n\u6211\u8981\u6307\u51fa\u7684\u662f\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u65e9\u671f\uff0c\u4e00\u4f4d\u670b\u53cb\u51b3\u5b9a\u7528\u4e00\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u8bed\u8a00\u7f16\u5199\u4e00\u4e2a\u7c7b\u4f3c\u7684\u670d\u52a1\u5668\uff0c\u5e76\u8bbe\u6cd5\u5b8c\u5168\u9500\u6bc1\u4e86\u5176\u4ed6\u5730\u65b9\u8ba4\u4e3a\u7406\u6240\u5f53\u7136\u7684\u6570\u5b57\u3002\u8fd9\u4f4d\u670b\u53cb\u4f7f\u7528\u7684\u8bed\u8a00\u5728\u8fd9\u91cc\u4e5f\u65e0\u5173\u7d27\u8981\u3002\n\u54e6\uff0c\u6211\u76f8\u4fe1\u4ed6\u4eec\u4f1a\u7684\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u60f3\u8981\u5b83\uff0c\u56e0\u4e3a\u5b83\u80fd\u4f20\u9012\u4fe1\u606f\u3002\u6211\u4e0d\u4f1a\u5c31\u8fd9\u4e48\u628a\u5b83\u9001\u4eba\u7684\u3002\u9274\u4e8e\u76ee\u524d\u8fd9\u7c7b\u4e8b\u60c5\u5728\u4e16\u754c\u4e0a\u4f3c\u4e4e\u4e0d\u5408\u7406\u5730\u7f55\u89c1\uff0c\u6211\u60f3\u8fd9\u91cc\u53ef\u80fd\u4f1a\u8d5a\u5230\u5f88\u591a\u94b1\u3002\n\u597d\u597d\u60f3\u60f3\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u53d7\u9650\u5236\u7684\u4ee3\u7801\u5e93\uff0c\u5176\u4e2d\u552f\u4e00\u7684\u5916\u90e8\u4f9d\u8d56\u9879\u662fprotocol buf\uff0c\u4e0a\u6b21\u6211\u68c0\u67e5\u8fc7\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5305\u542b3\u4e2a\u6761\u6b3e\u7684BSD\uff0c\u6240\u4ee5\u53ea\u8981\u60a8\u9075\u5faa\u6587\u6863/\u7248\u6743\u8981\u6c42\uff0c\u60a8\u57fa\u672c\u4e0a\u53ef\u4ee5\u505a\u4efb\u4f55\u60a8\u60f3\u505a\u7684\u4e8b\u60c5\u3002\n\u53e6\u5916\uff0c\u534f\u8bae\u90e8\u5206\u5e76\u4e0d\u662f\u975e\u5e38\u5173\u952e\u7684\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u66ff\u6362\u4e3a\u4e8c\u8fdb\u5236\u517c\u5bb9\u7684\u5b9e\u73b0\uff0c\u6ca1\u6709\u4eba\u4f1a\u77e5\u9053\u5176\u4e2d\u7684\u533a\u522b\u3002Wire\u534f\u8bae\u6709\u5f88\u597d\u7684\u6587\u6863\u8bb0\u5f55\uff0c\u5982\u679c\u60a8\u53ea\u662f\u60f3\u6d4b\u8bd5\u4e00\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730*\u624b\u5de5*\u4fee\u6539\u5b83\u3002\n\u6709\u6ca1\u6709\u4eba\u5c1d\u8bd5\u8fc7\u4e3aGRPC\u5236\u4f5c\u7b2c\u4e8c\u4e2a\u8d44\u6e90\uff1f\u4f60\u77e5\u9053\uff0c\u8bf4\u76f8\u540c\u7684\u8bed\u8a00\uff0c\u4f46\u4e0d\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u73b0\uff1f\u90a3\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5f53\u4f60\u7b7e\u51fa\u67d0\u4e2a\u4e1c\u897f\u65f6\uff0c\u5b83\u4e0d\u4f1a\u4ece\u4e92\u8054\u7f51\u4e0a\u7684\u968f\u673a\u4f4d\u7f6e\u514b\u9686\u51fa50\u4e2a\u4e0d\u540c\u7684\u5b50\u6a21\u5757\u3002\u591a\u597d\u7684\u6982\u5ff5\u554a\uff0c\u5bf9\u5427\uff1f\n\u6b64\u5916\uff0c\u6b63\u5982\u6211\u5df2\u7ecf\u8bf4\u8fc7\u7684\uff0c\u51fa\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u6211\u4e0d\u662f\u6574\u4e2a\u793e\u533a\u7684\u4e00\u90e8\u5206\u3002\u6211\u80af\u5b9a\u4e0d\u4f1a\u5e26\u7740\u8fd9\u6837\u7684\u4e1c\u897f\u8df3\u8fdb\u53bb\u7684\u3002\n\u5b83\u4e0d\u662f\u5355\u7ebf\u7684\uff0c\u5bf9\u4e0d\u8d77\u3002\u5b83\u5c06\u6bcf\u4e2a\u8fde\u63a5\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\u4f5c\u4e3a\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u9009\u62e9\u3002\u6211\u4e0d\u60f3\u4e3a\u7ebf\u7a0b\u6c60\u800c\u70e6\u607c\u3002\u6211\u53ef\u4ee5\u5417\uff1f\u597d\u7684\u3002\u6211\u6709\u5417\uff1f\u6ca1\u6709\uff0c\u6216\u8005\u81f3\u5c11\u73b0\u5728\u8fd8\u6ca1\u6709\u3002\u5982\u679c\u6211\u9700\u8981\uff0c\u6211\u4f1a\u52a0\u8fdb\u53bb\u7684\u3002\u73b0\u5728\uff0c\u7b80\u5355\u662f\u503c\u5f97\u7684\u3002\n\u6211\u662f\u4e13\u7528\u670d\u52a1\u5668\u5e02\u573a\u7684\u8001\u624b\uff0c\u56e0\u4e3a\u5f88\u4e45\u4ee5\u524d\u6211\u66fe\u4e3a\u4e16\u754c\u7684\u90a3\u4e00\u8fb9\u63d0\u4f9b\u6280\u672f\u652f\u6301\u3002\u5f53\u4ed6\u4eec\u662f\u6bcf\u67085\u7f8e\u5143\u7684\u5458\u5de5\u7279\u60e0\u65f6\uff0c\u62ff\u56de\u4e00\u53f0\u673a\u5668\u662f\u5f88\u81ea\u7136\u7684\u4e8b\u60c5\uff0c\u4e4b\u540e\u5f88\u5bb9\u6613\u628a\u5b83\u7559\u5728\u8eab\u8fb9\u3002\n\u5728\u90a3\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u5df2\u7ecf\u4f7f\u7528\u8fc7\u51e0\u53f0\u4e13\u7528\u670d\u52a1\u5668\u3002\u4ed6\u4eec\u53ea\u662f\u5750\u5728\u90a3\u91cc\uff0c\u6709\u70b9\u50cf\u662f\u5728\u505a\u4ed6\u4eec\u81ea\u5df1\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u5f88\u65e0\u804a\uff0c\u8fd9\u6b63\u662f\u6211\u60f3\u8981\u7684\u3002\u8fd9\u4e9b\u5e74\u6765\uff0c\u6211\u62e5\u6709\u7684\u8fd9\u4e9b\u76d2\u5b50\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\u5145\u5206\u4f53\u73b0\u51e0\u4e2a\u5546\u4e1a\u6982\u5ff5\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u503c\u5f97\u5728\u4e0a\u9762\u6295\u5165\u66f4\u591a\u8d44\u91d1\u3002\u4ed6\u4eec\u7684\u6708\u8d39\u901a\u5e38\u5728100\u7f8e\u5143\u5230200\u7f8e\u5143\u4e4b\u95f4\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u4eba\u4eec\u5728Prem&34\uff1b\u4e0a\u8bf4\u7684\u8bdd\u73b0\u5728\u610f\u5473\u7740\u4ed6\u4eec\u529e\u516c\u5ba4\u91cc\u7684\u67d0\u4e2a\u58c1\u6a71\u3002\u5982\u4eca\u7684\u529e\u516c\u5ba4\u7ecf\u5e38\u6709\u975e\u5e38\u597d\u7684\u8fde\u63a5\uff0c\u6bd4\u5982\u5343\u5146\u6216\u66f4\u597d\u7684\u8fde\u63a5\uff0c\u53ef\u4ee5\u4f53\u9762\u5730\u524d\u5f80\u4efb\u4f55\u91cd\u8981\u7684\u5730\u65b9\u3002\u6211\u662f\u5728\u6709\u4e00\u6761\u4e13\u7528\u4e8e\u4e92\u8054\u7f51\u7684T1\u7ebf\u8def(~1.5 Mbps)\u8fdb\u5165\u60a8\u7684\u4f01\u4e1a\u662f\u4ef6\u5927\u4e8b\u7684\u65f6\u5019\u60f3\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u6211\u5728\u8fd9\u4e9b\u8fde\u63a5\u4e0a\u6258\u7ba1\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5b83\u4eec\u4e5f\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n\u6211\u4f1a\u518d\u505a\u4e00\u6b21\u5417\uff1f\u4e5f\u8bb8\u5427\u3002\u8fd9\u53d6\u51b3\u4e8e\u6211\u9700\u8981\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u8ba9\u4e8b\u60c5\u53d1\u751f\uff0c\u4ee5\u53ca\u6211\u662f\u5426\u80fd\u5c06\u67d0\u4e9b\u4e1c\u897f\u7c98\u5728\u73b0\u6709\u670d\u52a1\u5668\u7684\u4e00\u4fa7\u3002\n\u4efb\u4f55\u4e8b\u60c5\u90fd\u6709\u98ce\u9669\u3002\u4f60\u7684\u529e\u516c\u5ba4\u8fde\u63a5\u5c06\u4f1a\u6709\u7cdf\u7cd5\u7684\u4e00\u5929\u3002\u4f60\u7684\u670d\u52a1\u5668\u4f1a\u6b7b\u7684\u3002\u4e00\u53ea\u677e\u9f20\u4f1a\u5728\u4f60\u7684\u53d8\u538b\u5668\u4e0a\u70e7\u70e4\uff0c\u800c\u4f60\u4e00\u5929\u90fd\u4f1a\u65ad\u7535\u3002\u4e00\u4e2a\u4e13\u5fc3\u81f4\u5fd7\u7684\u63d0\u4f9b\u8005\u4e5f\u4f1a\u65f6\u4e0d\u65f6\u5730\u53d1\u751f\u4e00\u4e9b\u611a\u8822\u7684\u4e8b\u60c5\u3002\u90a3\u4e9b\u673a\u5668\u4e5f\u4f1a\u65f6\u4e0d\u65f6\u5730\u6b7b\u6389\u3002\n\u4e0d\u540c\u7684\u95ee\u9898\u9700\u8981\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u65f6\u95f4\u662f\u4e00\u4e2a\u56e0\u7d20\uff0c\u91d1\u94b1\u662f\u4e00\u4e2a\u56e0\u7d20\uff0c\u4f60\u5df2\u7ecf\u62e5\u6709\u7684\u8d44\u6e90\u662f\u4e00\u4e2a\u56e0\u7d20\uff0c\u6240\u9700\u7684\u7075\u6d3b\u6027\u662f\u4e00\u4e2a\u56e0\u7d20\u3002\n\u58c1\u6a71\u91cc\u7684\u90a3\u4e2a\u5907\u7528\u76d2\u4e5f\u8bb8\u6b63\u597d\u591f\u63d2\u4e0a\u4f60\u7684\u65d7\u5e1c\u3002\u53ea\u662f\u522b\u5fd8\u4e86\u7a0d\u540e\u91cd\u65b0\u8bc4\u4f30\u60c5\u51b5\u3002\n\u6211\u8ba4\u4e3a\u8fd9\u610f\u5473\u7740\u4e22\u5f03EPOLL\u5185\u5bb9\uff0c\u53ea\u9700\u5750\u5728read()\u6216\u7c7b\u4f3c\u7684\u5730\u65b9\u3002\u9664\u4e86\u8fd9\u662f\u6211\u5728\u8bbe\u8ba1\u4e2d\u523b\u610f\u907f\u514d\u7684\u95ee\u9898\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u95ee\u9898\u3002\n\u6211\u7684serviceworker\u7ebf\u7a0b\u9700\u8981\u65f6\u4e0d\u65f6\u5730\u505a\u4e00\u4e9b\u5185\u52a1\u5de5\u4f5c\u3002\u4ed6\u4eec\u53ef\u80fd\u9700\u8981\u505a\u4e00\u6b21\u7a7a\u95f2\u7684\u68c0\u67e5\uff0c\u624d\u80fd\u5c06\u4e00\u4f4d\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u8bf4\u8bdd\u7684\u5ba2\u6237\u5e73\u5e95\u8239\u3002\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u4e8b\u60c5\u8981\u505a\u3002\u6b64\u5916\uff0c\u6211\u8fd8\u5e0c\u671b\u80fd\u591f\u6e05\u7406\u548c\u5173\u95ed\u5b83\u4eec\uff0c\u800c\u4e0d\u5fc5\u505a\u53ef\u6015\u7684\u4e8b\u60c5\u6765\u4f7f\u5b83\u4eec\u89e3\u8131\u3002\n\u4f1a\u53d1\u51fa\u4fe1\u53f7\u8ba9\u5b83\u677e\u5f00\u5417\uff1f\u5443.\u3002\u6b63\u5728\u53d6\u6d88\u7ebf\u7a0b\u5417\uff1f\u5443\uff0c\u4e0d\u3002\u4e0e\u6211\u6700\u7ec8\u6240\u505a\u7684\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u90fd\u662f\u4ee4\u4eba\u8ba8\u538c\u7684\u3002\n\u6211\u559c\u6b22\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8c03\u5ea6\u6211\u7684\u5de5\u4eba\u7684\u552f\u4e00\u4e8b\u60c5\u5c31\u662f\u5185\u6838\u672c\u8eab\u3002\u4f60\u4e0d\u80fd\u628a\u5b83\u5361\u4f4f\u4e86\u3002\u5982\u679c\u4f60\u547c\u558a\u7740\u963b\u6b62\u5de5\u4eba\u7684\u4e1c\u897f\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5f97\u5230\u4e00\u5927\u5806\u5176\u4ed6\u7684\u4e1c\u897f\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4e5f\u9a6c\u4e0a\u5c31\u4f1a\u53d7\u5230\u5f71\u54cd\u3002(\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u5982\u679c\u4f60\u5927\u58f0\u547c\u558a\uff0c\u963b\u6b62\u4e86\u5de5\u4eba\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5f97\u5230\u4e00\u5927\u5806\u5176\u4ed6\u4e1c\u897f\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4e5f\u4f1a\u9a6c\u4e0a\u53d7\u82e6\u3002)\u201d\n\u628a\u6574\u53f0\u673a\u5668\u5f04\u574f\u624d\u80fd\u8ba9\u4e00\u5207\u90fd\u505c\u4e0b\u6765\u3002\u5728\u4f60\u5230\u8fbe\u90a3\u91cc\u4e4b\u524d\uff0c\u4e00\u5207\u90fd\u53ea\u662f\u8df3\u6765\u8df3\u53bb\uff0c\u5b89\u6392\u5176\u4ed6\u5730\u65b9\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7f13\u6162\u4e0b\u964d\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u5f00\u4e0b\u60ac\u5d16\u3002\n\u540c\u6837\u7684\u9053\u7406\u4e5f\u9002\u7528\u4e8e\u6211\uff0c\u5e76\u4e14\u62e5\u6709\u6211\u81ea\u5df1\u7684\u7ebf\u7a0b\u6c60\u5b9e\u73b0\u3002\u4e5f\u4f1a\u6709\u540c\u6837\u7684\u62c5\u5fe7\uff0c\u53e6\u5916\uff0c\u5982\u679c\u6211\u4e0d\u5f97\u4e0d\u81ea\u5df1\u6eda\u7684\u8bdd\uff0c\u8fd8\u4f1a\u589e\u52a0\u6b63\u786e\u64cd\u4f5c\u7684\u62c5\u5fe7\u3002\n\u8fd9\u4e2a\u771f\u7684\u5f88\u8ba9\u4eba\u8ff7\u60d1\u3002\u8fd9\u5c31\u50cf\u662f\uff0c\u662f\u7684\uff0c2013\u5e74\u6211\u786e\u5b9e\u505c\u6b62\u4e86\u6bcf\u5929\u5199\u4f5c\uff0c\u56e0\u4e3a\u6211\u88ab\u62d6\u8fdb\u4e86\u95e8\u6d1b\u5e15\u514b\u7684\u84dd\u8272\u5927\u6cbc\u6cfd\u3002\n\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u65f6\u4e0d\u65f6\u5730\u5728\u6709\u4e9b\u4e1c\u897f\u9700\u8981\u8131\u53e3\u800c\u51fa\u7684\u65f6\u5019\u91cd\u65b0\u9732\u9762\uff1a\u4e0d\u8981\u627c\u6740\u82f9\u679c\u516c\u53f8(Apple)\u63a8\u51fa\u7684\u7cdf\u7cd5\u900f\u9876\u7684Git\u7248\u672c\uff0c\u4f60\u751a\u81f3\u90fd\u4e0d\u80fd\u5173\u6389\u8fd9\u7c7b\u4e1c\u897f\u3002\n\u4e0d\u8fc7\uff0c\u8001\u5b9e\u8bf4\uff0c\u968f\u7740\u5de5\u4f5c\u7684\u589e\u591a\uff0c\u539f\u672c\u4f1a\u7528\u6765\u5728\u8fd9\u91cc\u5199\u4f5c\u7684\u7cbe\u529b\u4f1a\u8d8a\u6765\u8d8a\u591a\u5730\u4ece\u6cf3\u6c60\u4e2d\u6d88\u5931\u3002\u8fd9\u5c31\u662f\u4e8b\u60c5\u7684\u53d1\u5c55\u65b9\u5f0f\u3002\u6211\u7b7e\u7ea6\u4e86\uff0c\u6211\u628a\u6211\u6240\u6709\u7684\u4e00\u5207\u90fd\u7ed9\u4e86\u5b83\u3002\u8bf4\u5b83\u4e0d\u5065\u5eb7\uff0c\u4f46\u8fd9\u662f\u6211\u552f\u4e00\u53ef\u4ee5\u64cd\u4f5c\u7684\u65b9\u6cd5\u3002\u4e0d\u505a\u534a\u9014\u800c\u5e9f\u7684\u4e8b\u3002\n\u6211\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u77e5\u9053\uff0c\u8fd9\u4e2a\u4eba\u662f\u5982\u4f55\u6210\u529f\u5730\u9605\u8bfb\u4e862013\u5e74\u7684\u4e00\u7bc7\u5e16\u5b50\uff0c\u4f46\u5728\u90a3\u4e4b\u540e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u90fd\u6ca1\u6709\u770b\u5230\u5176\u4ed6\u7684\u5e16\u5b50\u3002\n\u6709\u4e9b\u4eba..\u3002\u90fd\u5728\u4f7f\u7528Python..\u3002\u5f88\u7cdf\u7cd5\u3002\u6bd4\u5982\uff0c\u8bad\u7ec3\u6709\u7d20\u7684\u7334\u5b50\u5750\u5728\u4e00\u5806\u8fde\u63a5\u5230Unix shell\u8d26\u6237\u7684\u611a\u8822\u7ec8\u7aef\u524d\uff0c\u5faa\u73af\u8fd0\u884cNC-l(Port)&34\uff1b\u53ef\u4ee5\u66f4\u597d\u5730\u8fd0\u884c\u670d\u52a1\u5668\u2026\u2026\u3002\u90a3\u662f\u5f88\u7cdf\u7cd5\u7684\u3002\n\u5927\u591a\u6570\u4eba\uff1f\u4f60\u4e0d\u4f1a\u542c\u8bf4\u4ed6\u4eec\u7684\u3002\u5bf9\u4ed6\u4eec\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u4ed6\u4eec\u7528\u5f97\u4e0d\u662f\u5f88\u597d\u3002\n\u6709\u4e9b\u4eba\u8fd8\u5728\u4f7f\u7528PHP\u3001C\u3001C++\u3001Perl\u3001Ruby\u3001Rust\u3001Haskell\u3001OCaml\u3001Java\u3001Clojure\u3001Basic\u3001shell\u811a\u672c\u3001D\u3001Nim\u3001Kotlin\u3001Julia\u3001JavaScript\u3001Scala\u548cCrystal\u3002\n\u4e0d\u540c\u516c\u53f8\u7684\u76f8\u5bf9\u9ad8\u5c42\u5df2\u7ecf\u544a\u8bc9\u8fc7\u6211\u597d\u51e0\u6b21\u4e86\u3002\u8fd9\u771f\u662f\u592a\u53ef\u6015\u4e86\uff01\u4f60\u771f\u7684\u4ee5\u4e3a\u4f60\u548c\u4ec0\u4e48\u90fd\u5b66\u4e0d\u5230\u7684\u7b28\u86cb\u4e00\u8d77\u5de5\u4f5c\u5417\uff1f\u5982\u679c\u90a3\u662f\u771f\u7684\uff0c\u4f60\u4e3a\u4ec0\u4e48\u8981\u628a\u5b83\u4eec\u7559\u5728\u8eab\u8fb9\u5462\uff1f\n\u6211\u8fd8\u65ad\u5b9a\uff1a\u8fd9\u4e0d\u662f\u771f\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u662f\u4eba\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u662f\u806a\u660e\u7684\u3001\u4f1a\u6325\u821e\u5de5\u5177\u7684\u7075\u957f\u7c7b\u52a8\u7269\u3002\u4eba\u4eec\uff0c\u5f53\u4f60\u5bf9\u4ed6\u4eec\u6709\u4fe1\u5fc3\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4f1a\u60f3\u51fa\u6709\u8da3\u7684\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u4f60\u6446\u5728\u4ed6\u4eec\u9762\u524d\u7684\u95ee\u9898\u3002\u770b\u770b\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u8fd9\u573a\u201c\u66ae\u5149\u4e4b\u57ce\u201d\u7684\u5c01\u9501\u72c2\u6f6e\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u9910\u9986\u6709\u5927\u91cf\u7684\u6e05\u6d01\u7528\u54c1\uff0c\u6ca1\u6709\u5750\u4e0b\u6765\u7684\u4ea4\u901a\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\u3002\u88ab\u56f0\u5728\u5bb6\u91cc\u7684\u4eba\u9700\u8981\u6e05\u6d01\u7528\u54c1\u3002\u9910\u9986\u628a\u4e24\u4ef6\u4e8b\u653e\u5728\u4e00\u8d77\uff0c\u5f00\u59cb\u76f4\u63a5\u5411\u516c\u4f17\u9500\u552e\u3002\u975e\u5e38\u51fa\u8272!\u3002\n\u6211\u5047\u8bbe\u5927\u591a\u6570\u4eba\u7684\u80fd\u529b\u6bd4\u8fd9\u4e9b\u8bcb\u6bc1\u8005\u60f3\u7684\u8981\u591a\u3002\n\u4f60\u77e5\u9053\u6211\u559c\u6b22\u548c\u8c01\u4e00\u8d77\u5de5\u4f5c\u5417\uff1f\u5728\u8fd9\u65b9\u9762\u662f\u65b0\u624b\u7684\u4eba\u8fd8\u6ca1\u6709\u89c1\u8fc7\u592a\u591a\u4e1c\u897f\uff0c\u4f46\u5bf9\u4efb\u4f55\u4e8b\u60c5\u90fd\u6301\u5f00\u653e\u6001\u5ea6\u3002\u60f3\u8c61\u4e00\u4e0b\u4e00\u4e2a\u5178\u578b\u7684\u5b9e\u4e60\u751f\u3002\u4ed6\u4eec\u8fd8\u5728\u4e0a\u5b66\u3002\u4ed6\u4eec\u5728\u8bfe\u5802\u4e0a\u505a\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4e5f\u8bb8\u5728\u53e6\u5916\u4e00\u4e24\u4e2a\u5b9e\u4e60\u4e2d\u4e5f\u505a\u8fc7\u3002\u4ed6\u4eec\u77e5\u9053\u4ed6\u4eec\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\n\u6211\u5411\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u4ed6\u4eec\u8d70\u4e86\uff0c\u6211\u4e0d\u77e5\u9053\u3002\u6211\u8bf4\uff0c\u55ef\uff0c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u3002\u7136\u540e\u6211\u4eec\u5750\u4e0b\u6765\u4e00\u8d77\u60f3\u529e\u6cd5\u3002\u6211\u7231\u6b7b\u5b83\u4e86\uff01\u8fd9\u4e9b\u90fd\u662f\u6211\u80fd\u60f3\u5230\u7684\u6700\u6709\u6210\u5c31\u611f\u7684\u6545\u4e8b\u3002\u6211\u53bb\u5e74\u590f\u5929\u505a\u4e86\u8fd9\u4ef6\u4e8b\uff0c\u611f\u89c9\u5f88\u68d2\u3002\n\u4f60\u77e5\u9053\u6211\u4e0d\u559c\u6b22\u548c\u8c01\u4e00\u8d77\u5de5\u4f5c\u5417\uff1f\u90a3\u4e9b\u4e0d\u613f\u610f\u4e3a\u4e86\u66f4\u597d\u7684\u7ed3\u679c\u800c\u5c1d\u8bd5\u7684\u4eba\u3002\u751a\u81f3\u662f\u4efb\u4f55\u7ed3\u679c\u3002\u4ed6\u4eec\u4f1a\u56fa\u6267\u5df1\u89c1\uff0c\u4e0d\u4f1a\u5c1d\u8bd5\u6211\u63d0\u51fa\u7684\u4e1c\u897f\uff0c\u4f46\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u5b9e\u73b0\u4ed6\u4eec\u6240\u8c13\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f60\u4e24\u8d25\u4ff1\u4f24\u3002\n\u5bf9\u4efb\u4f55\u4e8b\u60c5\u8bf4\u4e0d\u90fd\u5f88\u5bb9\u6613\u3002\u8fd9\u9700\u8981\u4ed8\u51fa\u5b9e\u9645\u7684\u52aa\u529b\u624d\u80fd\u7ed9\u51fa\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\u3002\u4e0d\u8981\u603b\u662f\u9ed8\u8ba4\u8d70\u6700\u61d2\u60f0\u3001\u6700\u4fbf\u5b9c\u3001\u6700\u7cdf\u7cd5\u3001\u963b\u529b\u6700\u5c0f\u7684\u9053\u8def\u3002\n\u76f8\u4fe1\u4f60\u7684\u5458\u5de5\uff0c\u76f8\u4fe1\u4ed6\u4eec\u6709\u80fd\u529b\u6210\u4e3a\u6709\u601d\u60f3\u3001\u4ee5\u6210\u957f\u4e3a\u5bfc\u5411\u3001\u613f\u610f\u6210\u957f\u548c\u5f00\u62d3\u773c\u754c\u7684\u4eba\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u522b\u4eba\u4e5f\u4f1a\u8fd9\u4e48\u505a\u3002\n\u54e6\uff0c\u522b\u544a\u8bc9\u6211\uff0c\u6211\u4e0d\u77e5\u9053\u3002\u8fd9\u6761\u7ebf\u7684\u95ee\u9898\u662f\uff0c\u5b83\u53ef\u4ee5\u7528\u5f97\u597d\uff0c\u4e5f\u53ef\u4ee5\u7528\u5f97\u4e0d\u597d\uff0c\u6211\u770b\u5230\u5b83\u7ecf\u5e38\u88ab\u7528\u5f97\u4e0d\u597d\u3002\n\u4f46\u4f60\u77e5\u9053\u5417\uff0c\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u90a3\u4e9b\u5927\u5730\u65b9\u548c\u4e00\u4e9b\u5c0f\u5730\u65b9\u7684\u5185\u90e8\u60c5\u51b5--\u6709\u4e9b\u662f\u76f4\u63a5\u770b\u5230\u7684\uff0c\u6709\u4e9b\u662f\u901a\u8fc7\u53ef\u4fe1\u7684\u5185\u5e55\u62a5\u9053\u770b\u5230\u7684\u3002\u4f60\u731c\u600e\u4e48\u7740\uff1f\u5c0f\u5f97\u591a\u7684\u5730\u65b9\u56e0\u4e3a\u8ba4\u4e3a\u81ea\u5df1\u53ef\u4ee5\u7ee7\u7eed\u900d\u9065\u6cd5\u5916\u800c\u82e6\u4e0d\u582a\u8a00\u3002\u6bd5\u7adf\uff0c\u4ed6\u4eec\u662fF\u3001A\u3001\u5176\u4ed6A\u3001N\u6216G\u3002\n\u8bb0\u4f4f\uff0c\u79d1\u6280\u7684\u80ae\u810f\u79d8\u8bc0\u662f\uff0c\u4f60\u5fc5\u987b\u628a\u4efb\u4f55\u7c98\u5728\u5899\u4e0a\u7684\u5c4e\u90fd\u8fd0\u51fa\u53bb\uff0c\u7136\u540e\u5c3d\u5feb\u53d1\u6325\u4f5c\u7528\uff0c\u5426\u5219\u522b\u4eba\u4f1a\u5148\u53d1\u5236\u4eba\uff0c\u62a2\u5148\u4e00\u6b65\u3002\u7136\u540e\uff0c\u5982\u679c\u4f60\u5728\u4f01\u4e1a\u91cc\u5446\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u80fd\u591f\u633a\u8fc7\u90a3\u4e9b\u53ef\u6015\u7684\u4e8b\u60c5-\u65e0\u8bba\u662f\u54ea\u51e0\u5e74\uff0c\u4f60\u5c31\u4f1a\u8d62\u5f97\u6e05\u7406\u4e1c\u897f\u7684\u673a\u4f1a\u3002\n\u95ee\u9898\u5728\u4e8e\uff0c\u8fd9\u4e9b\u5730\u65b9\u4ece\u6765\u6ca1\u6709\u5b8c\u5168\u610f\u8bc6\u5230\uff0c\u662f\u65f6\u5019\u6539\u53d8\u7b56\u7565\uff0c\u505c\u6b62\u50cf\u90a3\u5bb6\u6254\u5c4e\u7684\u5c0f\u516c\u53f8\u90a3\u6837\u884c\u4e8b\u4e86\u3002\u4ed6\u4eec\u8ba4\u4e3a\u4ee5\u524d\u7ba1\u7528\u7684\u4e1c\u897f\u73b0\u5728\u4f1a\u7ee7\u7eed\u7ba1\u7528\uff0c\u6211\u5f88\u62b1\u6b49\uff0c\u60c5\u51b5\u5f80\u5f80\u5e76\u975e\u5982\u6b64\u3002\n\u8981\u70b9\uff1a\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u62e5\u6709\u6240\u6709\u8fd9\u4e9b\u8fde\u63a5\u662f\u5f88\u7cdf\u7cd5\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5b83\u6b7b\u4e86\u600e\u4e48\u529e\uff1f\n\u4f60\u8bf4\u5f97\u5bf9\uff0c\u5982\u679c\u5b83\u6b7b\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u6709\u9ebb\u70e6\u4e86\u3002\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u786e\u4fdd\u5b83\u4e0d\u4f1a\u6b7b\u5f97\u8d8a\u591a\u8d8a\u597d\u3002\u6211\u4eec\u5c06\u68c0\u67e5\u6240\u6709\u8fd4\u56de\u4ee3\u7801\uff0c\u5e76\u4e14\u4e0d\u5047\u5b9a\u4e00\u5207\u6b63\u5e38\u3002\u6211\u4eec\u5c06\u5904\u7406\u6211\u4eec\u7684\u8bed\u8a00\u63d0\u4f9b\u7684\u4efb\u4f55\u5f02\u5e38\u7c7b\u578b\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5c06\u4e2d\u6b62\u5355\u4e2a\u8bf7\u6c42\u6216\u8fde\u63a5\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4f7f\u6574\u4e2a\u8fc7\u7a0b\u5d29\u6e83\u3002\n\u4e0d\u8fc7\uff0c\u5f53\u7136\uff0c\u597d\u7684\uff0c\u5982\u679c\u4f60\u60f3\u7684\u8bdd\u53ef\u4ee5\u67e5\u51e0\u4e2a\u3002\u5982\u679c\u4f60\u5bf9\u6b64\u5982\u6b64\u504f\u6267\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u7bb1\u5b50\u4e0a\u8fd0\u884c\u5b83\u4eec\u3002\u6211\u4e0d\u60f3\uff0c\u4f46\u662f\uff0c\u563f\uff0c\u4f60\u662f\u8001\u677f\u3002\n\u8981\u70b9\uff1a\u5982\u679c\u5b83\u91cd\u65b0\u542f\u52a8\u600e\u4e48\u529e\uff1f\u5929\u54ea\uff0cTIME_WAIT\uff0c\u65e0\u6cd5\u518d\u6b21\u7ed1\u5b9a\u5230\u7aef\u53e3\uff01\n\u6211\u73b0\u5728\u4e0d\u6253\u7b97\u5728\u8fd9\u91cc\u6f14\u793a\u5b83(\u8fd9\u7bc7\u6587\u7ae0\u66f4\u50cf\u662f\u4e00\u4e2a\u9009\u96c6\u8bbe\u5907\uff0c\u6211\u4eec\u4f1a\u4e00\u76f4\u5446\u5728\u706b\u8f66\u4e0a)\uff0c\u4f46\u76f8\u4fe1\u6211\uff0c\u6211\u53ef\u4ee5\u5728\u4e00\u4e2a\u6b63\u786e\u7684\uff1b\u505a\u4e8b\u60c5\uff1b\u5b8c\u6210\uff1b\u5faa\u73af\uff0c^C\u5faa\u73af\u4e2d\u8fd0\u884c\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u7acb\u5373\u6062\u590d--\u5373\u4f7f\u6709\u5ba2\u6237\u5728\u79ef\u6781\u5730\u4f7f\u7528\u5b83\u3002\u5b83\u4e5f\u4e0d\u4e00\u5b9a\u8981\u5e72\u51c0\u5229\u843d\u5730\u5173\u95e8\u3002\u4e0d\u7ba1\u4f60\u60f3\u8981\u4ec0\u4e48\uff0c\u4f60\u90fd\u53ef\u4ee5\u7b7e\u4e0a\u5b83\uff0c\u5b83\u4ecd\u7136\u4f1a\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u505a\u4e86\u529f\u8bfe\uff0c\u6446\u5f04\u4e86\u6240\u6709\u7684\u65cb\u94ae\u3002\u5b83\u4e0d\u4e00\u5b9a\u662f\u5982\u6b64\u91cd\u7528*.\u3002\u8fd8\u6709\u66f4\u591a\u3002\u771f\u7684\u3002\u53bb\u770b\u770b\u5427\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5728\u6211\u5f00\u53d1\u5b83\u7684\u65f6\u5019\uff0c\u6211\u53ea\u662f\u4f7f\u7528Netcat\u4f5c\u4e3a\u6211\u7684\u5ba2\u6237\u7aef\uff0c\u53ea\u662f\u4e3a\u4e86\u751f\u6210TCP\u8fde\u63a5\u6d3b\u52a8\uff0c\u800c\u4e14\u5728\u6740\u6b7b\u670d\u52a1\u5668\u4e4b\u540e\u5fc5\u987b\u7b49\u5f85\u4e00\u4e24\u5206\u949f\u624d\u80fd\u6e05\u7406\u5e72\u51c0\uff0c\u8fd9\u771f\u662f\u592a\u7cdf\u7cd5\u4e86\uff01\n\u5982\u679c\u4f60\u771f\u7684\u8fb9\u8d70\u8fb9\u6d4b\u8bd5\uff0c\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u8fd9\u7c7b\u4e1c\u897f\uff0c\u4e0d\u8981\u53ea\u6ee1\u8db3\u4e8e\u559d\u5496\u5561\uff0c\u6211\u731c\u6211\u4f1a\u53bb\u559d\u676f\u5496\u5561\uff0c\u7136\u540e\u51b3\u5b9a\u597d\u597d\u5730\u6316\u6398\u548c\u6e05\u7406\u4f60\u7684\u70c2\u644a\u5b50\u3002\n\u6b64\u5916\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5408\u7406\u7684\u7cfb\u7edf\u6765\u53d1\u73b0\u60a8\u7684\u670d\u52a1\u7684\u5b9e\u4f8b\uff0c\u60a8\u4e0d\u5e94\u8be5\u9700\u8981\u51fa\u73b0\u5728\u540c\u4e00\u7aef\u53e3\u3002\u4e0d\u7ba1\u4f60\u5728\u54ea\u91cc\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u4eba\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u80fd\u6ee1\u8db3\u4f60\u7684\u5ef6\u8fdf\u8981\u6c42\uff0c\u5c31\u4e0d\u5e94\u8be5\u6709\u95ee\u9898\u3002\n\u4f60\u4f1a\u5bf9\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u7684\u5176\u4ed6\u4e00\u5207\u8bf4\u540c\u6837\u7684\u8bdd\u5417\uff1f\u56e0\u4e3a\uff0c\u8001\u5b9e\u8bf4\uff0c\u5929\u5e95\u4e0b\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\u3002\u60a8\u8bfb\u5230\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4e0e\u4e94\u5e74\u524d\u7684\u5185\u5bb9\u76f8\u540c\uff0c\u4f46\u4e0a\u9762\u52a0\u4e86\u53e6\u4e00\u4e2a\u540d\u79f0(\u4e5f\u8bb8\u8fd8\u589e\u52a0\u4e86\u53e6\u4e00\u5c42\u95f4\u63a5/\u62bd\u8c61\u5c42)\u3002\n\u6211\u770b\u4e86\u6700\u65b0\u7684\u5e16\u5b50\uff0c\u5bfb\u627e\u4e86\u4e00\u4e9b\u7edf\u8ba1\u4e0a\u4e0d\u592a\u53ef\u80fd\u7684\u672f\u8bed\uff0c\u53ea\u662f\u60f3\u770b\u770b\u5b83\u53ef\u80fd\u6709\u591a\u7cdf\u7cd5\u3002\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u5427\u3002\n\u6211\u60f3\u6211\u53ef\u4ee5\u53d1\u5e03\u5173\u4e8e\u70d8\u7119\u5de7\u514b\u529b\u66f2\u5947\u7684\u5e16\u5b50\uff0c\u7136\u540e\u4ece\u67d0\u4e9b\u4eba\u90a3\u91cc\u5f97\u5230\u540c\u6837\u7684\u62b1\u6028\u3002\u5c0f\u82cf\u6253\uff01\u65e0\u76d0\u9ec4\u6cb9\uff01\u676f\u5b50\u5c3a\u5bf8\uff01\u91d1\u68d5\u8272\uff01\u5f00\u7403\u4e86\uff01\n\u57fa\u672c\u4e0a\uff0c\u6211\u6ca1\u6709\u529e\u6cd5\u628a\u5b83\u505a\u597d\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u505a\u7684\u3002\u8bdd\u9898\u65e0\u5173\u7d27\u8981\uff0c\u9648\u8ff0\u65e0\u5173\u7d27\u8981\uff0c\u63aa\u8f9e\u4e5f\u65e0\u5173\u7d27\u8981\u3002\u6211\u5e94\u8be5\u5750\u4e0b\u6765\uff0c\u95ed\u5634\uff0c\u7ed9\u4ed6\u4eec\u63d0\u4f9b\u6280\u672f\u8f93\u51fa\uff0c\u5c31\u50cf\u4e00\u4e2a\u597d\u7684\u5c0f\u52fa\u5b50\u3002\n\u8981\u70b9\uff1a(\u7c7b\u4f3c\u7684\u5173\u4e8e\u53ef\u6015\u7cfb\u7edf\u6cb8\u817e\u7684\u60b2\u5267\u6545\u4e8b\uff0c\u5f53\u4f60\u770b\u8d77\u6765\u5f88\u6ed1\u7a3d\u7684\u65f6\u5019)\u3002\n\u5982\u679c\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4ef6\u68c0\u75ab\u7684\u4e8b\uff0c\u6211\u5f88\u53ef\u80fd\u4f1a\u8bf7\u4f60\u559d\u4e00\u676f\uff0c\u56e0\u4e3a\u4f60\u662f\u201c\u8ba9\u5783\u573e\u968f\u610f\u8fd0\u8f6c\u201d\u4ff1\u4e50\u90e8\u7684\u4e00\u5458\u3002\u575a\u6301\u4f4f\uff0c\u8bb0\u4f4f\uff0c\u6709\u4e9b\u5730\u65b9\u4e0d\u662f\u4e00\u76f4\u90fd\u662f\u8fd9\u6837\u7684\u3002\u7b49\u5f85\u65f6\u673a\uff0c\u4fdd\u7559\u4f60\u7684\u9009\u62e9\u4f59\u5730\u3002\n\u4ece\u6211\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u6ca1\u6709\u505a\u8fc7\u4efb\u4f55\u4e8b\u60c5\u3002\u4ee3\u7801\u4e2d(\u76ee\u524d)\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\u8bf4\uff0c\u54e6\uff0c\u6211\u6b63\u53d7\u5230\u653b\u51fb\uff0c\u6240\u4ee5\u4e5f\u8bb8\u6211\u5e94\u8be5\u4e3a\u6b64\u505a\u70b9\u4ec0\u4e48\u3002\u4f8b\u5982\uff0c\u6211\u53ef\u4ee5\u5728\u67d0\u4e9b\u64cd\u4f5c\u8fbe\u5230\u4e00\u5b9a\u7684\u5ef6\u8fdf\u540e\u5173\u95ed\u8fde\u63a5\uff0c\u6216\u8005\u9650\u5236\u6bcf\u4e2a\u6e90\u5730\u5740\u3001\u6bcf\u4e2a\u7528\u6237\u6216\u4efb\u4f55\u5176\u4ed6\u53ef\u80fd\u6709\u7528\u7684\u7ef4\u5ea6\u7684\u8fde\u63a5\u3002\n\u73b0\u5728\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u4e00\u65e6\u6211\u8fbe\u523032000\u4e2aserviceworker\u7ebf\u7a0b\uff0c\u6211\u5c31\u4f1a\u4e3b\u52a8\u62d2\u7edd\u65b0\u7684\u8fde\u63a5\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8d85\u8d8a\u8fd9\u4e00\u70b9\u5f00\u59cb\u8ba9\u751f\u6d3b\u53d8\u5f97\u975e\u5e38\u6709\u8da3\uff0c\u56e0\u4e3a\u4f60\u7684VSZ\uff0c\u55ef\uff0c\u662f\u5de8\u5927\u7684\u3002\n\u4e3a\u4ec0\u4e48\u6211\u8981\u505a\u7ebf\u7a0b\u9650\u5236\u5668\uff1f\u55ef\uff0c\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4e00\u76f4\u5728\u7528\u8fde\u63a5\u6765\u6572\u6253\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5e76\u6ce8\u610f\u5230\u5f53\u5b83\u8fbe\u5230\u8fd9\u4e2a\u5927\u5c0f\u65f6\uff0c\u5b83\u5c31\u4e0d\u80fd\u50cf\u901a\u5e38\u90a3\u6837\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u4e86\u3002\u73b0\u5728\uff0c\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u8fd9\u4e2a\u8ba1\u5212\u5e76\u6ca1\u6709\u6b7b\u4ea1\u3002\u5f53\u7ebf\u7a0b\u521b\u5efa\u7531\u4e8e\u7f3a\u4e4f\u8d44\u6e90\u800c\u5931\u8d25\u65f6\uff0c\u5b83\u53ea\u4f1a\u51fa\u73b0\u4e00\u4e2a\u6709\u8da3\u7684\u9519\u8bef\uff0c\u6bd4\u5982\u5e55\u540e\u7684mmap\u8c03\u7528\u65e0\u6cd5\u5206\u914d\u66f4\u591a\u7684\u5185\u5b58\u3002\n\u6b63\u5982\u4f60\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u8ba1\u5212\u7684\u5176\u4f59\u90e8\u5206\u7ee7\u7eed\u8fdb\u884c\u3002\u6bd5\u7adf\uff0c\u5185\u5b58\u5206\u914d\u95ee\u9898\u4e0d\u662f\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u7684\u7406\u7531\u3002\n\u5c31\u7f51\u7edc\u95ee\u9898\u800c\u8a00\uff0c\u8fd9\u4e3b\u8981\u662f\u5ba2\u6237\u5173\u5fc3\u7684\u95ee\u9898\u3002\u65e0\u53ef\u5426\u8ba4\uff0c\u8fd9\u4f4d\u5ba2\u6237\u73b0\u5728\u786e\u5b9e\u5f88\u611a\u8822\u3002\u4f60\u7ed9\u5b83\u4e00\u53f0\u4e3b\u673a\u548c\u4e00\u4e2a\u7aef\u53e3\uff0c\u5b83\u5c31\u4f1a\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u7136\u540e\u5b83\u5c31\u53ef\u4ee5\u5f00\u59cb\u6bd4\u8d5b\u4e86\u3002\u5b83\u4e0d\u505a\u670d\u52a1\u53d1\u73b0\u3001\u901a\u9053\u3001\u8d1f\u8f7d\u5e73\u8861\u6216\u4efb\u4f55\u5176\u4ed6\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u60f3\u5148\u89e3\u51b3\u670d\u52a1\u5668\u7aef\u7684\u95ee\u9898\u3002\n\u5ba2\u6237\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u8fd9\u6837\u7684\u5730\u6b65\uff1a\u53bb\u7ed9\u6211\u627e\u4e2aLavaLamp\uff1b\uff0c\u5e26\u4e0a\u4e00\u4efd(\u6709\u9650\u7684)\u540d\u5355\uff0c\u627e\u51fa\u8c01\u5728\u9644\u8fd1\uff0c\u8c01\u4e0d\u5728\uff0c\u7136\u540e\u5f00\u59cb\u5c1d\u8bd5\u8054\u7cfb\uff0c\u5e76\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5\uff0c\u770b\u770b\u8c01\u5b9e\u9645\u4e0a\u662f\u6709\u7a7a\u7684\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u4f60\u53ef\u4ee5\u53bb\u627e\u4e00\u53eaLavaLamp\uff1b\u7ed9\u6211\u627e\u4e00\u53eaLavaLamp\uff1b\uff0c\u62ff\u51fa\u4e00\u4efd(\u6709\u9650\u7684)\u540d\u5355\uff0c\u627e\u51fa\u8c01\u5728\u9644\u8fd1\uff0c\u8c01\u4e0d\u5728\u3002\u201d\u7136\u540e\uff0c\u5b83\u5c06\u53ea\u5e73\u8861\u4ece\u7528\u6237\u5230\u8fd9\u4e9b\u5b9e\u4f8b\u7684\u90a3\u4e9b\u901a\u9053\u4e0a\u7684\u8bf7\u6c42\u3002\u5982\u679c\u4e00\u4e2a\u4eba\u6b7b\u4e86\uff0c\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u5b83\u4f1a\u53e6\u627e\u5730\u65b9\u53bb\u7684\u3002\u7528\u6237\u751a\u81f3\u4e0d\u5e94\u8be5\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u662f\u4f60\u5728\u8c37\u6b4c\u548cStubby\u4e00\u8d77\u5de5\u4f5c\uff0c\u6216\u8005\u5728Facebook\u548cService Router\u4e00\u8d77\u5de5\u4f5c\u65f6\u514d\u8d39\u5f97\u5230\u7684\u3002\u5f53\u4f60\u5728\u4e00\u4e2a\u8fd8\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5730\u65b9\u5de5\u4f5c\u65f6\uff0c\u8fd9\u4e5f\u662f\u4f60\u5f97\u4e0d\u5230\u7684\u3002\n\u65c1\u767d\uff1a\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u5982\u679c\u6211\u60f3\u8981\u8d85\u8fc732K\u7684\u5e76\u53d1\u8fde\u63a5\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u4e0a\u5904\u7406\u591a\u4e2a\u5ba2\u6237\u7aef\uff0c\u6216\u8005\u4ea7\u751f\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6216\u8005\u8bf8\u5982\u6b64\u7c7b\u7684\u4e8b\u60c5\u3002\u6bcf\u4e2a8MB+4096\u5b57\u8282\u768432000\u4e2a\u7ebf\u7a0b\u76f8\u5f53\u4e8e\u5927\u91cf\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64\u6211\u8fbe\u5230\u5982\u6b64\u9ad8\u7684\u9650\u5236\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u6211\u60f3\u4f7f\u7528\u8d85\u8fc71024\u4e2aFDS\uff0c\u800c\u4e0d\u9700\u8981\u592a\u957f\u65f6\u95f4\u3002\u6211\u8fd8\u60f3\u5b66\u4e60\u5982\u4f55\u6b63\u786e\u4f7f\u7528EPOLL\uff0c\u8fd9\u6837\u4e0b\u4e00\u6b21\u6211\u770b\u5230\u4ec0\u4e48\u4e1c\u897f\u7528\u5f97\u4e0d\u597d\u65f6\uff0c\u5b83\u5c31\u4f1a\u53d8\u5f97\u76f8\u5f53\u660e\u663e\u3002\n\u6211\u77e5\u9053\u8fd9\u4f1a\u81ea\u52a8\u9694\u79bb\u975eLinux\u89e3\u51b3\u65b9\u6848\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u6211\u5bf9\u6b64\u6ca1\u6709\u610f\u89c1\u3002\u5982\u679c\u5b83\u5728\u67d0\u4e2a\u65f6\u523b\u5f00\u59cb\u53d8\u5f97\u91cd\u8981\uff0c\u90a3\u4e48\u6211\u4f1a\u62c9\u51fa\u4e00\u4e2alibeventent\uff0c\u5e76\u4ee5\u591a\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5b83\u3002\n\u4f46\u662f\u540e\u6765\u6211\u5f00\u59cb\u628a\u5b9e\u9645\u7684\u7528\u4f8b\u6302\u5728\u4e0a\u9762\uff0c\u563f\uff0c\u8fd9\u771f\u662f\u4e00\u6bb5\u7f8e\u597d\u7684\u65f6\u5149\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u8c08\u5230\u8fd9\u4e9b\uff0c\u4f46\u662f\u54e6\uff0c\u662f\u7684\uff0c\u6211\u62ff\u4e86\u8fd9\u4e2a\u4ee3\u7801\uff0c\u628a\u4e00\u4e9b\u65e7\u7684\u4e1c\u897f\u79fb\u5230\u4e0a\u9762\u3002\u8fd9\u4e9b\u4e1c\u897f\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u771f\u6b63\u7684\u5de5\u4f5c\uff0c\u6bd4\u5982\u6765\u81ea\u78c1\u76d8\u7684I/O-\u5598\u6c14\uff01-\u4ee5\u53ca\u521b\u5efa\u4e92\u65a5\u9501\u540e\u9762\u7684\u6570\u636e\u7ed3\u6784\u3002\u5929\u54ea\uff0c\u7531\u4e8e\u5e76\u53d1\u8bbf\u95ee\u800c\u5bfc\u81f4\u7684\u5b9e\u9645\u9501\u4e89\u7528\uff01\n\u8981\u70b9\uff1a\u8fd9\u76f8\u5f53\u4e8e\u5f00\u7740\u66f4\u5927\u7684\u5361\u8f66\u8fc7\u6865\uff0c\u76f4\u5230\u5b83\u4eec\u65ad\u88c2\u3002\n\u55ef\uff0c\u662f\u7684\uff0c\u8fd9\u5c31\u662f\u95ee\u9898\u7684\u5173\u952e\u3002\u6211\u60f3\u5c55\u793a\u4e00\u4e0b\uff0c\u4f60\u6700\u7ec8\u662f\u5982\u4f55\u65e0\u6cd5\u83b7\u5f97\u66f4\u591a\u7684\u541e\u5410\u91cf\uff0c\u800c\u5b83\u53ea\u662f\u5f00\u59cb\u51cf\u901f\u3002\u60a8\u60f3\u8981\u5728\u56fe\u8868\u4e2d\u627e\u5230\u90a3\u4e2a\u819d\u76d6\uff0c\u7136\u540e\u4fdd\u6301\u5728\u5b83\u7684\u4e0b\u65b9\u3002\n\u53e6\u5916\uff0c\u6211\u5df2\u7ecf\u7528\u5361\u5c14\u6587\u548c\u970d\u5e03\u65af\u7684\u6f2b\u753b\u544a\u8bc9\u8d1f\u8f7d\u6d4b\u8bd5\u4eba\u5458\u505c\u6b62\u6740\u6b7b\u6211\u7684\u7cfb\u7edf\u5df2\u7ecf\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u5176\u4e2d\u4e00\u4e2a\u56e2\u4f53\u628a\u5b83\u4f5c\u4e3a\u4ed6\u4eec\u56e2\u4f53\u7684\u975e\u5b98\u65b9\u65d7\u5e1c\u3002", "note_en": "Ah yes, so yesterday&#39;s postabout my stupid little RPC load tests blew up. There&#39;s been a lot of feedback to it and a couple of other related posts. I will attempt to answer or otherwise address some of the points.\n   I&#39;m not going to tell you, at least, not yet. It actually doesn&#39;t matter. I submit that you can write terrible services in any language, and you can probably write halfway decent services in any language. Where the rubber meets the road, however, is when you start squeezing that last 66% out of your hardware.\n  If you haven&#39;t had to work at a place that thinks that scaling up at 33% CPU utilization on a host is normal, then this might not make any sense.I have. It&#39;s terrible.\n By not telling you what language it&#39;s in, I manage to starve out a whole side-shitshow of the &#34;conversation&#34; in which people have a full-on language war and forget about the fact that they still haven&#39;t managed to accomplish the same thing in their language of choice.\n I bet it can be done in the language. Whether it can be done by the people who just bark all day and accomplish very little? That&#39;s another story entirely.\n I will point out that much earlier in this process, a friend decided to write a similar server in a totally different language and also managed to totally destroy the numbers that other places take for granted. The language that friend used is also irrelevant here.\n   Oh, I&#39;m sure they do. Some people probably want it because it delivers. I&#39;m not going to just give it away. Given that this kind of thing seems to be unreasonably rare in the world right now, I figure maybe there&#39;s money to be made here.\n Just think of it. An unencumbered code base in which the only external dependency is protobuf, and last time I checked that&#39;s basically a 3-clause BSD so you can basically do whatever you want as long as you heed the documentation/copyright requirements.\n Also, the protobuf part isn&#39;t exactly critical. You could replace it with a binary-compatible implementation and nobody would know the difference. The wire protocol is well-documented and is easy enough to hack up *by hand* if you just want to test things.\n Has anyone tried making a second-source for gRPC? You know, speak the same language but not use that same implementation? What would that be like?\n Imagine something that won&#39;t clone 50 different &#34;sub modules&#34; from random places on the Internet when you check it out. What a concept, right?\n Also, as I already said, I&#39;m not a partof that whole community thing for multiple reasons. I&#39;m sure not going to hop into it with something like this.\n   It&#39;s not single-threaded, sorry. It uses one thread per connection as a deliberate design choice. I didn&#39;t feel like bothering with thread pools. Could I? Sure. Have I? No, or at least, not yet. If I need them, I&#39;ll add them. Right now, the simplicity is worth it.\n   I&#39;m a veteran of the &#34;dedicated server&#34; market since I used to do tech support for that side of the world a long time ago. It was a natural thing to get a machine back when they were a $5/month employee special, and it was very easy to keep it around afterward.\n I&#39;ve been through several dedicated servers in that time. They just sit there and kind of do their thing. They&#39;re boring, just the way I want it. Any one of these boxes I&#39;ve had over the years could run several business concepts far enough to find out if it&#39;s worth investing more in it. They usually run between $100 and $200/month.\n To me, people saying &#34;on prem&#34; now means some closet in their office. Offices these days frequently have very nice connections, like gigabit or better, with decent transit to anywhere that matters. I came up in the days when having a dedicated T1 line (~1.5 Mbps) for Internet into your business was a big deal. I hosted stuff on those connections. They also worked fine.\n Would I do that again? Maybe. It depends on how quickly I needed to get things happening, and whether I couldn&#39;t just glue something to the side of my existing server.\n Everything comes with risks. Your office connection will have a bad day. Your servers will die. A squirrel will barbeque itself on your transformer and you&#39;ll lose power for the day. A dedicated provider will also have stupid things happen from time to time. Those machines also die now and then.\n Different problems call for different solutions. Time is a factor, money is a factor, what resources you already possess is a factor, and the needed flexibility is a factor.\n That spare box in the closet might just be enough to plant your flag. Just don&#39;t forget to re-assess the situation later on.\n    I assume this means ditching the epoll stuff and just sitting there in read() or something like that. Besides the fact this is what I deliberately avoided in my design, there are other problems.\n My &#34;serviceworker&#34; threads need to do some housekeeping from time to time. They might need to do an idle check in order to punt a client who hasn&#39;t spoken in a while. There might be other things to do. Also, I wanted the ability to clean up and shut down without having to do terrible things to get them &#34;unstuck&#34;.\n Generating a signal to knock it loose? Ugh. Cancelling a thread? Eww, no. Those are nasty compared to what I ended up doing.\n    I like the fact that the only thing scheduling my workers is the kernel itself. You can&#39;t get it jammed up. If you call out to something that &#34;blocks the worker&#34;, you aren&#39;t going to end up with a whole bunch of other stuff which also suffers right away.\n It takes screwing up the whole machine in order to make everything stop.Until you get there, things just hop around, scheduling other places.It&#39;s also a nice slow descent rather than just driving off a cliff.\n The same goes for me and having my own thread pool implementation. There would be the same concerns, plus the added worry of doing it correctly if I had to roll my own.\n   This one is really confusing. It&#39;s like, yeah, I did stop writing every single day in 2013, because I got pulled into the big blue swamp in Menlo Park.\n But even then, I still resurfaced from time to time when there was something I needed to get out: &#34;don&#39;t kill -9 -1&#34;, &#34;Apple&#39;s shipping a terrible git build you can&#39;t even turn off&#34;, that kind of thing.\n Honestly, though, as a job ramps up, it takes more and more energy away from the pool that would otherwise be used to spend time writing here.That&#39;s how it goes. I sign up and I give it everything I have. Call it unhealthy, but it&#39;s the only way I can operate. No half-assing things.\n How this person managed to read one post from 2013 and not see the rest of them from well past that point, I may never know.\n    Some people... are using Python... BADLY. Like, trained monkeys sitting in front of a bunch of dumb terminals wired up to Unix shell accounts running &#34;nc -l (port)&#34; in a loop could run the server better... that kind of badly.\n Most people? You don&#39;t hear about them. It works well enough for them.They aren&#39;t using it badly.\n Some people are also using PHP, C, C++, Perl, Ruby, Rust, Haskell, OCaml, Java, Clojure, BASIC, shell scripts, D, Nim, Kotlin, Julia, JavaScript, Scala and Crystal badly.\n    I&#39;ve been told this a few times by relatively high-up people at different companies. This is really terrible! You honestly think you work with complete nincompoops who can&#39;t learn anything? If that&#39;s true, why do you keep them around?\n I also posit: it&#39;s not true. The fact that they are people means they are clever tool-wielding primates. People, when you have faith in them, will generally come up with interesting solutions to the problems you put in front of them. Just look at what&#39;s been happening with this Twilight Zone lockdown craziness of the past couple of months.\n Restaurants had tons of cleaning stuff and no sit-down traffic to use it on. People stuck at home needed cleaning stuff. Restaurants put two and two together and started selling directly to the public. Brilliant!\n I posit that most people are capable of more than some of these detractors would think.\n You know who I love working with? People who are new at this stuff, haven&#39;t seen too much yet, but are open to anything. Imagine a typical intern. They&#39;re still in school. They&#39;ve done a few things in classes and maybe at one or two other internships. They know they have a long way to go.\n I present a problem to them. They go &#34;I don&#39;t know&#34;. I say &#34;well, you know what, I don&#39;t either&#34;. Then we sit down and figure it out together. I love that! Those are some of the most fulfilling stories I can think of. I got to do this last summer and it was great.\n You know who I don&#39;t like working with? The people who aren&#39;t willing to try something for a better outcome... or even ANY outcome. They&#39;ll dig in their heels and not try the thing I pitched, but they won&#39;t deliver on their so-called solution, either. You get the worst of both worlds.\n It&#39;s easy to say &#34;no&#34; to everything. It takes actual effort to give an alternative. Don&#39;t be the one who always defaults to the laziest, cheapest, crappiest path of least resistance.\n Trust in your employees and their ability to be thoughtful, growth-oriented human beings who are willing to grow and expand their horizons. If you don&#39;t, someone else will.\n   Oh, don&#39;t I know it. The problem with this line is that it can be used well, and it can be used poorly, and I see it being used poorly more often than not.\n But you know what, I&#39;ve seen the innards of those big places and some smaller places - some directly, some via trusted insider reports. Guess what? Far, far smaller places are having miserable times with their &#34;infra&#34; because they thought they could keep getting away with it.After all, they aren&#39;t F, A, the other A, N, or G.\n  Remember, the dirty &#34;secret&#34; of tech is that you have to ship whatever shit will stick to the wall and kinda-sorta work as soon as you can, or someone else will do it first and beat you to the punch. Then, if you stay in business long enough to survive those terrible do-whatever years, you then  earn the opportunity to clean things up.\n The problem is those places which never quite realize that it&#39;s time to shift gears and stop behaving like that tiny little shit-flinging company. They think what worked before will keep working now, and I&#39;m sorry, that&#39;s frequently not the case.\n  Point: having all of those connections in one process is terrible, because what if it dies?\n You&#39;re right, if it dies, then we have a problem. So let&#39;s make sure it doesn&#39;t die as much as possible. We&#39;ll check all of our return codes and not assume things work. We&#39;ll deal with whatever exception type stuff our language provides. We&#39;ll build a system that aborts individual requests or connections and doesn&#39;t crash the whole process.\n  But still, sure, okay, run a couple of them if you want. You could even run them on the same box if you&#39;re that paranoid about it. I wouldn&#39;t, but hey, you&#39;re the boss.\n  Point: what if it restarts? OMG TIME_WAIT and not being able to bind to the port again!\n I&#39;m not going to demonstrate it here right now (this post is more of an anthology device, and we&#39;re staying on the train), but trust me when I say I can run the server in a &#34;while true; do thing; done&#34; loop, ^C it, and it&#39;ll come right back up -- even if there are clients actively whacking away at it. It doesn&#39;t have to be a clean shutdown either. SIGKILL it or whatever you want, and it&#39;ll still work out fine.\n Why? Because I did my homework and twiddled all of those knobs. It&#39;s not necessarily SO_REUSE* ... there are more. Really. Go look.\n Why? Because while I was developing it, I was just using netcat as my &#34;client&#34; just to generate TCP connection activity, and having to wait for a minute or two for things to clear out after killing the server really sucked!\n This is the kind of stuff that you discover pretty quickly if you&#39;re actually testing as you go, and don&#39;t just settle for &#34;well, guess I&#39;ll go get a coffee&#34;, and decide to dig in and clean up your messes properly.\n Also, if you have a reasonable system for discovering instances of your service, you shouldn&#39;t need to come up on the same port. It shouldn&#39;t matter where you are, as long as there are enough of you available within whatever locality is needed to meet your latency requirements.\n   Do you say the same thing to everything else on Hacker News? Because, honestly, there&#39;s very little new under the sun. Most of what you read about is the same thing from five years ago with another name slapped on it (and perhaps another layer of indirection/abstraction added).\n    I looked at the most recent post for some statistically improbable terms just to see how bad it might be. Let&#39;s just see.\n  I suspect I could post about baking chocolate chip cookies and get the same complaint from certain individuals. Baking soda! Unsalted butter! Cup measures! Golden brown! Kicking off!\n Basically, there&#39;s no way for me to do it right, because it&#39;s done by me. The topic doesn&#39;t matter, the presentation doesn&#39;t matter, and the wording doesn&#39;t matter. I should sit down, shut up, and provide them technical output like a good little peon.\n    Point: (similar tales of woe about terrible systems boiling when you so much as look at them funny)\n If not for this quarantine thing, I&#39;d probably buy you a drink of choice for being a fellow member of the &#34;keeps random crap running&#34; club. Hang in there, and remember, there are places where it&#39;s not like that all the time. Bide your time and keep your options open.\n   I haven&#39;t gone to any lengths from my perspective. There&#39;s nothing in the code (yet) which says &#34;oh, I&#39;m under attack, so maybe I should do something about it&#34;. I could, for example, wave off connections after certain operations reach a certain amount of latency, or limit connections per source address, or per user, or any other dimension that might be useful.\n There is ONE limiter in there right now: I actively reject new connections once I hit 32000 serviceworker threads. It turns out that going much beyond that starts making life very interesting since your VSZ is, well, massive.\n Why did I do the thread limiter? Well, early on, I was hammering the thing with connections, and noticed that it would fail to do the usual stuff to start a new thread when up around that size. Now, to be clear, the program did not die. It would just have a funny error when thread creation failed due to a lack of resources, like a mmap call behind the scenes failing to allocate more memory.\n The rest of the program kept going, as you would expect. A memory allocation problem is no reason to crash the whole thing, after all.\n In terms of &#34;network issues&#34;, those would mostly be the concern of the client. The client is admittedly stupid right now. You give it a host and a port, it nails up a connection, and it&#39;s off to the races. It&#39;s not doing service discovery, channels, load balancing, or anything else of the sort. Why? Because I wanted to solve for the server side first.\n The client could totally get to the point where it is told &#34;go find me a LavaLamp&#34;, brings in a (limited) list of them, figures out who&#39;s close by and who isn&#39;t, then starts attempting connections and doing health checks to see who&#39;s actually available. Then it&#39;ll just balance the requests from the user onto those channels to those instances. If one dies, no big deal, it&#39;ll find another place to go. The user shouldn&#39;t even notice.\n This is what you get for free when you work at Google with Stubby, or at Facebook with Service Router. It&#39;s also what you don&#39;t get when you work at a place that hasn&#39;t solved this problem yet.\n Aside: so, yeah, if I want to go past 32K simultaneous connections, I&#39;m going to have to do multiple clients per thread, or spawn another process, or something like that. 32000 threads at 8 MB + 4096 bytes each equals a LOT of address space, and it&#39;s not surprising that I&#39;m hitting limits up that high.\n    I wanted to use more than 1024 fds without going to lengths. I also wanted to learn how to use epoll correctly so that it&#39;ll be quite obvious the next time I see something using it poorly.\n I know this automatically walls off non-Linux solutions. I&#39;m okay with that for the moment. If it starts to matter at some point, then I&#39;ll pull a libevent and implement it multiple ways.\n    But then I started hanging actual use cases off of it, and hey, good times. We haven&#39;t talked about those yet, but oh yes, I took this code and moved some older stuff onto it. These things actually do real work, like I/O from the disk - gasp! - and frobbing data structures which are behind mutexes. OMG, actual lock contention because of concurrent accesses!\n   Point: this is the equivalent of driving bigger trucks across the bridge until they break.\n Well, yeah, that&#39;s the whole point. I wanted to demonstrate how you eventually can&#39;t get any more throughput and it just starts slowing down. You want to find that knee in the graph and then stay below it.\n  Also, I&#39;ve been using that Calvin and Hobbes comic to tell load testing people to stop killing my systems for a very long time now. One group made it the unofficial banner of their group.", "posttime": "2020-05-09 10:03:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53cd\u9988,reader", "title": "\u5bf9\u8bfb\u8005\u53cd\u9988\u7684\u56de\u5e94", "title_en": "Responses to Reader Feedback", "transed": 1, "url": "https://rachelbythebay.com/w/2020/05/08/feedback/", "via": "", "real_tags": ["\u53cd\u9988", "reader"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f1\u56fd\u300a\u536b\u62a5\u300b\u900f\u9732\uff0c\u653f\u5e9c\u79d1\u5b66\u987e\u95ee\u5bf9\u6b64\u611f\u5230\u6124\u6012\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u5c01\u9501\u671f\u95f4\uff0c\u653f\u5e9c\u79d1\u5b66\u987e\u95ee\u8bd5\u56fe\u901a\u8fc7\u5728\u4e00\u4efd\u5b98\u65b9\u62a5\u544a\u5411\u516c\u4f17\u53d1\u5e03\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u5927\u91cf\u7f16\u8f91\uff0c\u6765\u5ba1\u67e5\u4ed6\u4eec\u5bf9\u653f\u5e9c\u63d0\u6848\u7684\u5efa\u8bae\u3002\n\u8fd9\u4efd\u62a5\u544a\u662f\u7d27\u6025\u60c5\u51b5\u79d1\u5b66\u54a8\u8be2\u5c0f\u7ec4(Sage)\u672c\u5468\u53d1\u5e03\u7684\u4e00\u7cfb\u5217\u6587\u4ef6\u4e4b\u4e00\uff0c\u76ee\u7684\u662f\u5e73\u606f\u8d8a\u6765\u8d8a\u591a\u7684\u6279\u8bc4\uff0c\u5373\u5411\u5e94\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u90e8\u957f\u4eec\u63d0\u4f9b\u7684\u5efa\u8bae\u7f3a\u4e4f\u900f\u660e\u5ea6\u3002\n\u7136\u800c\uff0c\u8fd9\u4efd\u7531SPI-B\u7f16\u5236\u7684\u62a5\u544a\u4e2d\u7684\u5927\u6bb5\u6587\u672c\u88ab\u5b8c\u5168\u5220\u6389\u4e86\u3002SPI-B\u662fSage\u5c0f\u7ec4\u59d4\u5458\u4f1a\uff0c\u63d0\u4f9b\u884c\u4e3a\u79d1\u5b66\u5bb6\u5173\u4e8e\u516c\u4f17\u53ef\u80fd\u5982\u4f55\u5e94\u5bf9\u5c01\u9501\u63aa\u65bd\u7684\u5efa\u8bae\u3002\nSPI-B\u7684\u51e0\u540d\u6210\u5458\u544a\u8bc9\u536b\u62a5\uff0c\u6587\u4ef6\u7684\u7f16\u8f91\u90e8\u5206\u5305\u542b\u4e86\u4ed6\u4eec\u5bf9\u6f5c\u5728\u653f\u5e9c\u653f\u7b56\u7684\u6279\u8bc4\uff0c\u8fd9\u4e9b\u653f\u7b56\u662f\u4ed6\u4eec\u57283\u6708\u5e95\u548c4\u6708\u521d\u88ab\u6b63\u5f0f\u8981\u6c42\u8003\u8651\u7684\u3002\nSPI-B\u7684\u4e00\u4f4d\u987e\u95ee\u8bf4\uff1a\u201c\u8fd9\u592a\u611a\u8822\u4e86\uff0c\u800c\u4e14\u5b8c\u5168\u9002\u5f97\u5176\u53cd\u3002\u201d\u53e6\u4e00\u540d\u59d4\u5458\u4f1a\u6210\u5458\u8bf4\uff1a\u201c\u6211\u5f97\u5230\u7684\u5370\u8c61\u662f\uff0c\u672c\u5c4a\u653f\u5e9c\u4e0d\u60f3\u8981\u4efb\u4f55\u6279\u8bc4\u3002\u201d\n\u5468\u4e94\u4e0b\u5348\uff0c\u5728\u201c\u536b\u62a5\u201d\u62ab\u9732\u4e86\u5bf9\u7f16\u8f91\u540e\u7684\u62a5\u544a\u611f\u5230\u5931\u671b\u4e4b\u540e\uff0c\u653f\u5e9c\u987e\u95ee\u59d4\u5458\u4f1a\u7684\u53e6\u4e00\u540d\u6210\u5458\u5728Twitter\u4e0a\u62b1\u6028\u4ed6\u6240\u8bf4\u7684\u201c\u65af\u5927\u6797\u4e3b\u4e49\u201d\u5ba1\u67e5\u5236\u5ea6\u3002\n\u5723\u5b89\u5fb7\u9c81\u65af\u5927\u5b66(University Of St Andrews)\u793e\u4f1a\u5fc3\u7406\u5b66\u6559\u6388\u65af\u8482\u82ac\u00b7\u8d56\u5f7b(Stephen Reicher)\u8bf4\uff1a\u201c\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u4e0e\u5176\u8bf4\u662f\u6124\u6012\uff0c\u4e0d\u5982\u8bf4\u662f\u56f0\u60d1\u3002\u201d\u201c\u5728\u8fd9\u573a\u5371\u673a\u4e2d\uff0c\u6211\u4eec\u62e5\u6709\u7684\u6700\u5927\u8d44\u4ea7\u662f\u516c\u4f17\u7684\u4fe1\u4efb\u548c\u575a\u5b88\u3002\u4f60\u60f3\u8981\u4fe1\u4efb\u5417\uff1f\u4f60\u9700\u8981\u5bf9\u4eba\u655e\u5f00\u5fc3\u6249\u3002\u8fd9\u4e2a\u4e0d\u662f\u5f00\u7740\u7684\u3002\u8fd9\u8ba9\u4eba\u60f3\u8d77\u65af\u5927\u6797\u4e3b\u4e49\u7684\u4fc4\u7f57\u65af\u3002\u770b\u4e0a\u53bb\u4e0d\u600e\u4e48\u6837\u3002\u201c\u3002\n\u59d4\u5458\u4f1a\u6210\u5458\u4e4b\u95f4\u4e00\u76f4\u5728\u8ba8\u8bba\u5982\u4f55\u6700\u597d\u5730\u5bf9\u7f16\u8f91\u505a\u51fa\u56de\u5e94\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u9879\u5371\u53ca\u4ed6\u4eec\u72ec\u7acb\u6027\u7684\u9ad8\u538b\u4e3e\u63aa\u3002\n\u636e\u6089\uff0c\u81f3\u5c11\u6709\u4e00\u540d\u79d1\u5b66\u987e\u95ee\u6b63\u5728\u8003\u8651\u8f9e\u804c\uff0c\u539f\u56e0\u662f\u653f\u5e9c\u56f4\u7ed5\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u5bf9\u79d1\u5b66\u91c7\u53d6\u4e86\u4fdd\u5bc6\u7684\u505a\u6cd5\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u6b63\u5728\u7834\u574f\u516c\u4f17\u7684\u4fe1\u4efb\u3002\n4\u67081\u65e5\u7684\u8fd9\u4efd\u62a5\u544a\u603b\u7ed3\u4e86SPI-B\u5173\u4e8e\u5982\u4f55\u5904\u7406\u521a\u521a\u4e3a\u51cf\u7f13\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u800c\u5f15\u5165\u7684\u793e\u4f1a\u758f\u8fdc\u63aa\u65bd\u53ef\u80fd\u53d1\u751f\u7684\u53d8\u5316\u7684\u8ba8\u8bba\u3002\n\u5728Sage\u7684\u653f\u5e9c\u7f51\u7ad9\u4e0a\u53d1\u5e03\u7684\u7248\u672c\u4e2d\uff0c\u51e0\u4e4e\u6709\u4e00\u9875\u534a\u7684\u6587\u672c\u88ab\u5927\u91cf\u7f16\u8f91\u3002\u536b\u62a5\u7406\u89e3\u4e0eSPI-B\u5927\u7ea6\u5728\u90a3\u4e2a\u65f6\u5019\u6279\u8bc4\u53ef\u80fd\u7684\u653f\u5e9c\u63d0\u6848\u6709\u5173\u7684\u88ab\u5c4f\u853d\u7684\u6587\u672c\u3002\n\u8fd9\u4e9b\u63aa\u65bd\u5305\u62ec\u51cf\u5c11\u82f1\u56fd\u4eba\u53ef\u4ee5\u82b1\u5728\u953b\u70bc\u6216\u8d2d\u7269\u4e0a\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u5bf9\u90a3\u4e9b\u88ab\u53d1\u73b0\u8fdd\u53cd\u5c01\u9501\u7684\u4eba\u8fdb\u884c\u66f4\u4e25\u5389\u7684\u7ecf\u6d4e\u5904\u7f5a\u3002\u7b2c\u4e09\u9879\u63d0\u6848\u6d89\u53ca\u8981\u6c42\u4eba\u4eec\u81ea\u6211\u9a8c\u8bc1\u4ed6\u4eec\u7684\u884c\u52a8\uff0c\u5c31\u50cf\u6cd5\u56fd\u6240\u53d1\u751f\u7684\u90a3\u6837\uff0c\u90a3\u91cc\u7684\u516c\u6c11\u88ab\u8981\u6c42\u5728\u79bb\u5f00\u5bb6\u4e4b\u524d\u5b8c\u6210\u8bb8\u53ef\u8bc1\u3002\nSPI-B\u7684\u4e13\u5bb6(\u5305\u62ec\u5fc3\u7406\u5b66\u3001\u6d41\u884c\u75c5\u5b66\u548c\u4eba\u7c7b\u5b66\u6559\u6388)\u8868\u793a\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u63d0\u8bae\u8fc7\u4e8e\u60e9\u7f5a\u6027\uff0c\u66f4\u6709\u53ef\u80fd\u5bfc\u81f4\u8d2b\u56f0\u7ecf\u6d4e\u72b6\u51b5\u4e0b\u7684\u4eba\u53d7\u5230\u4e0d\u516c\u5e73\u5f85\u9047\u3002\n\u653f\u5e9c\u79d1\u5b66\u529e\u516c\u5ba4\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u4e4b\u6240\u4ee5\u8fdb\u884c\u7f16\u8f91\uff0c\u662f\u56e0\u4e3a\u6587\u4ef6\u4e2d\u8ba8\u8bba\u7684\u653f\u7b56\u4ecd\u5728\u8003\u8651\u4e2d\u3002\n\u8fd9\u4f4d\u53d1\u8a00\u4eba\u8bf4\uff1a\u201c\u552f\u4e00\u7684\u7f16\u8f91\u5185\u5bb9\u6d89\u53ca\u4e00\u4e2aSage\u5c0f\u7ec4\u7684\u8bc4\u8bba\uff0c\u5176\u4e2d\u5177\u4f53\u63d0\u5230\u4e86\u4ecd\u5728\u8003\u8651\u4e2d\u7684\u653f\u7b56\u6216\u53d6\u6d88\u8054\u7cfb\u3002\u201d\n\u201c\u7f16\u8f91\u5de5\u4f5c\u662f\u7531Sage\u79d8\u4e66\u5904\u7684\u5b98\u5458\u4e0e\u5236\u5b9a\u653f\u7b56\u7684\u90e8\u95e8\u534f\u5546\u540e\u8fdb\u884c\u7684\u3002\u6240\u6709\u5c0f\u7ec4\u5747\u83b7\u901a\u77e5\uff0c\u5e76\u6709\u673a\u4f1a\u5728\u53d1\u8868\u524d\u5c31\u4efb\u4f55\u6587\u4ef6\u7684\u7279\u5b9a\u5185\u5bb9\u6240\u4f5c\u7684\u4fee\u8ba2\u53d1\u8868\u610f\u89c1\u3002\u201c\n\u7136\u800c\uff0c\u63a5\u53d7\u536b\u62a5\u91c7\u8bbf\u7684SPI-B\u987e\u95ee\u9a73\u65a5\u4e86\u4ed6\u4eec\u88ab\u5f81\u8be2\u8fc7\u610f\u89c1\u7684\u8bf4\u6cd5\u3002\u7b2c\u4e8c\u4e2aSPI-B\u6210\u5458\u8bf4\uff1a\u201c\u6211\u4eec\u6ca1\u6709\u5f97\u5230\u4e8b\u5148\u901a\u77e5\uff0c\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u89e3\u91ca\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u4ed6\u4eec\u89c9\u5f97\u7f16\u8f91\u662f\u4e3a\u4e86\u538b\u5236\u6279\u8bc4\u3002\n\u201c\u8fd9\u5c4a\u653f\u5e9c\u6ca1\u6709\u8868\u73b0\u51fa\u4efb\u4f55\u81ea\u6211\u6279\u8bc4\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u5f88\u660e\u663e\u5730\u770b\u5230\uff0c\u4ed6\u4eec\u72af\u4e86\u5927\u9519\u3002\u5982\u679c\u4f60\u60f3\u5f97\u5230\u6c11\u4f17\u7684\u4fe1\u4efb\uff0c\u4f60\u5c31\u4e3e\u624b\u8bf4\u2018\u6211\u4eec\u72af\u4e86\u8fd9\u4e9b\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u4e9b\u9519\u8bef\uff0c\u6211\u4eec\u540e\u6094\uff0c\u6211\u4eec\u6b63\u5728\u4ece\u4e2d\u5438\u53d6\u6559\u8bad\u2019\u3002\u800c\u4e0d\u662f\u4e00\u76f4\u8bf4\u2018\u6211\u4eec\u505a\u5f97\u6700\u68d2\u4e86\u2019\uff0c\u800c\u4e0d\u662f\u4ee5\u4efb\u4f55\u65b9\u5f0f\u63a5\u53d7\u6279\u8bc4\u3002\u201c\u3002\nSPI-B\u7684\u7b2c\u4e09\u540d\u6210\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u4fee\u8ba2\u7834\u574f\u4e86\u4e13\u5bb6\u7ec4\u5bf9\u653f\u5ba2\u7684\u72ec\u7acb\u6027\u3002\u201c\u8fd9\u4efd\u7ecf\u8fc7\u7f16\u8f91\u7684\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u662f\u6211\u4eec\u5bf9\u8fd9\u4e9b\u5efa\u8bae\u7684\u6279\u8bc4\u3002\u4ed6\u4eec\u53ea\u662f\u6ca1\u6709\u7279\u522b\u6df1\u601d\u719f\u8651\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u662f\u72ec\u7acb\u7684\uff0c\u4f60\u770b\u4e0d\u5230\u8fd9\u4e00\u70b9(\u56e0\u4e3a\u7f16\u8f91)\u3002\u201c\u3002\nSPI-B\u7684\u7b2c\u56db\u540d\u6210\u5458\u8d28\u7591\u5927\u91cf\u7684\u7f16\u8f91\u5de5\u4f5c\u662f\u5426\u53ef\u80fd\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6587\u4ef6\u662f\u516c\u52a1\u5458\u7f16\u5236\u7684\u59d4\u5458\u4f1a\u8ba8\u8bba\u7684\u6458\u8981\u3002\n\u201c\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u8fd8\u662f\u6545\u610f\u5e76\u4e0d\u91cd\u8981\uff1b\u8fd9\u4e0d\u5e94\u8be5\u53d1\u751f\uff0c\u8fd9\u662f\u975e\u5e38\u6709\u95ee\u9898\u7684\uff0c\u201d\u8fd9\u4f4d\u987e\u95ee\u8bf4\u3002\u201c\u516c\u4f17\u9700\u8981\u5bf9\u79d1\u5b66\u5efa\u8bae\u6709\u4fe1\u4efb\u548c\u4fe1\u5fc3\uff0c\u653f\u5e9c\u58f0\u79f0\u8fd9\u662f\u5b83\u6240\u4f9d\u8d56\u7684\uff0c\u800c\u770b\u5230\u51fa\u7248\u7684\u6587\u4ef6\u4e2d\u7684\u7ae0\u8282\u88ab\u7f16\u8f91\u4f1a\u524a\u5f31\u4fe1\u4efb\u548c\u4fe1\u5fc3\u3002\u201d\n\u636e\u6089\uff0c\u8be5\u59d4\u5458\u4f1a\u5bf9\u653f\u5e9c\u63d0\u6848\u7684\u5ba1\u8bae\u662f\u57283\u670823\u65e5\u5f00\u59cb\u7684\u5c01\u9501\u7684\u7b2c\u4e00\u5468\u8fdb\u884c\u7684\u3002\n\u884c\u4e3a\u79d1\u5b66\u5bb6\u5728\u4ed6\u4eec\u957f\u8fbe4\u9875\u7684\u62a5\u544a\u4e2d\u8868\u793a\uff0c\u4eba\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u5bf9\u653f\u5e9c\u6307\u5bfc\u65b9\u9488\u7684\u9ad8\u5ea6\u9075\u5b88\u201c\u5f88\u53ef\u80fd\u5728\u4e2d\u77ed\u671f\u5185\u4fdd\u6301\u4e0d\u53d8\uff0c\u53ea\u8981\u51a0\u72b6\u75c5\u6bd2\u6784\u6210\u65e0\u6cd5\u901a\u8fc7\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\u7ba1\u7406\u7684\u4e25\u91cd\u98ce\u9669\u201d\u5c31\u662f\u5982\u6b64\u3002\u8fd9\u4e24\u4f4d\u884c\u4e3a\u79d1\u5b66\u5bb6\u5728\u4ed6\u4eec\u957f\u8fbe4\u9875\u7684\u62a5\u544a\u4e2d\u8868\u793a\uff0c\u4eba\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u53ea\u8981\u51a0\u72b6\u75c5\u6bd2\u6784\u6210\u65e0\u6cd5\u7528\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f\u7ba1\u7406\u7684\u4e25\u91cd\u98ce\u9669\uff0c\u201c\u5728\u4e2d\u77ed\u671f\u5185\u5f88\u53ef\u80fd\u4f1a\u4fdd\u6301\u9ad8\u5ea6\u9075\u5b88\u653f\u5e9c\u6307\u5bfc\u65b9\u9488\u7684\u6c34\u5e73\u201d\u3002\n\u7136\u800c\uff0c\u4ed6\u4eec\u62c5\u5fc3\uff0c\u5f15\u5165\u66f4\u591a\u5f3a\u5236\u6027\u63aa\u65bd\uff0c\u5982\u5bf9\u884c\u52a8\u5b9e\u65bd\u66f4\u4e25\u683c\u7684\u9650\u5236\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u9ad8\u5ea6\u9075\u5b88\u7684\u60c5\u51b5\uff0c\u4ed6\u4eec\u8868\u793a\uff0c\u8fd9\u201c\u5f88\u53ef\u80fd\u662f\u57fa\u4e8e\u793e\u533a\u5408\u4f5c\u7684\u611f\u89c9\u201d\u3002", "note_en": "Government scientific advisers are furious at what they see as an attempt to censor their advice on government proposals during the Covid-19 lockdown by heavily redacting an official report before it was released to the public, the Guardian can reveal.\n The report was one of a series of documents published by the Scientific Advisory Group on Emergencies (Sage) this week to mollify growing criticism about the lack of transparency over the advice given to ministers responding to the coronavirus.\n However, large blocks of text in the report, produced by SPI-B, the Sage subcommittee providing advice from behavioural scientists on how the public might respond to lockdown measures, were entirely blanked out.\n Several SPI\u2013B members told the Guardian that the redacted portions of the document contained criticisms they had made of potential government policies they had been formally asked to consider in late March and early April.\n One SPI-B adviser said: \u201cIt is bloody silly, and completely counterproductive.\u201d A second committee member said: \u201cThe impression I\u2019m getting is this government doesn\u2019t want any criticism.\u201d\n On Friday afternoon, after the Guardian revealed frustrations over the redacted report, another member of the government\u2019s advisory committee took to Twitter to complain of what he said was \u201cStalinist\u201d censorship.\n \u201cPersonally, I am more bemused than furious,\u201d said Stephen Reicher, a professor of social psychology at the University of St Andrews. \u201cThe greatest asset we have in this crisis is the trust and adherence of the public. You want trust? You need to be open with people. This isn\u2019t open. It is reminiscent of Stalinist Russia. Not a good look.\u201d\n Members of the committee have been discussing among themselves how best to respond to the redaction, which they believe was a heavy-handed move that jeopardises their independence.\n  At least one scientific adviser is understood to be considering resigning over the government\u2019s secretive approach to science around the Covid-19 outbreak, which they believe is undermining public trust.\n The report, from 1 April, summarised SPI-B\u2019s discussions about how to handle possible changes to the social distancing measures that had just been introduced to slow the spread of Covid-19.\n In the version published on  Sage\u2019s government website, almost a page and a half of text was heavily redacted. The Guardian understands the blocked text related to SPI\u2013B\u2019s criticism about possible government proposals around that time.\n These included the idea of reducing the amount of time Britons could spend exercising or shopping, and stricter financial penalties for those found to be breaking the lockdown. A third proposal involved requiring people to self-validate their movements, as was occurring in France, where citizens were required to complete permits before leaving home.\n Experts on SPI-B, which includes professors in psychology, epidemiology and anthropology, said they felt the proposals were too punitive and more likely to result in unfair treatment among people in deprived economic circumstances.\n A spokesperson for the Government Office for Science said the redactions took place because the policies discussed in the document were still under consideration.\n \u201cThe only redactions relate to comments made by a Sage subgroup where specific reference is made to policy still under consideration or to remove contact,\u201d the spokesperson said.\n \u201cRedactions were carried out by officials working for the Sage secretariat in consultation with the department developing the policy. All the subgroups were notified and given the opportunity to comment in advance of publication on the redactions being made to specific elements of any papers.\u201d\n However, SPI\u2013B advisers who spoke to the Guardian disputed that they had been consulted.  \u201cWe weren\u2019t given advance notice and we still haven\u2019t been given a satisfactory explanation,\u201d the second SPI\u2013B member said, adding they felt the redaction had been intended to stifle criticism.\n \u201cThis government has failed to show any self-criticism whatsoever, when it is glaringly obvious to everybody that big mistakes have been made. If you want the trust of the population you hold up your hand and you say \u2018we\u2019ve made these mistakes, this is why they happened, we regret it, we\u2019re learning from it\u2019. Rather than just keep saying \u2018we\u2019ve done the most fantastic job\u2019 and not being open to criticism in any way.\u201d\n  A third member of SPI\u2013B said they felt the redactions undermined the expert group\u2019s independence from politicians. \u201cWhat is recorded in the redacted document is us criticising those proposals. They were just not particularly well thought out. Here we were being independent, and you can\u2019t see it [because of the redactions].\u201d\n A fourth member of SPI-B questions whether the heavy redaction might even have been a mistake, as the documents were summaries of the committee\u2019s discussions produced by civil servants.\n  \u201cWhether it was a mistake or deliberate doesn\u2019t matter; it should not have happened, it\u2019s deeply problematic,\u201d the adviser said. \u201cThe public needs to have trust and confidence in the scientific advice, which the government claims it is relying on, and to see sections redacted in published documents diminishes trust and confidence.\u201d\n The committee\u2019s consideration of the government proposals is understood to have occurred during the first week of the lockdown, which began on 23 March.\n The behavioural scientists said in their four-page report that there was a consensus that the high-levels of adherence to government guidelines \u201care likely to be maintained in the short-to-medium term, for as long as it is evident that Covid-19 poses a serious risk that cannot be managed in any other way\u201d.\n However they were concerned that introducing more coercive measures, such as more draconian restrictions on movements, risked undermining the high levels of adherence, which they said was \u201clikely based on a sense of community cooperation\u201d.", "posttime": "2020-05-09 09:33:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,censor,\u653f\u5e9c", "title": "\u82f1\u56fd\u79d1\u5b66\u5bb6\u8c34\u8d23\u201c\u65af\u5927\u6797\u4e3b\u4e49\u201d\u4f01\u56fe\u5ba1\u67e5\u51a0\u72b6\u75c5\u6bd2\u5efa\u8bae", "title_en": "UK scientists condemn 'Stalinist' attempt to censor Covid-19 advice", "transed": 1, "url": "https://www.theguardian.com/world/2020/may/08/revealed-uk-scientists-fury-over-attempt-to-censor-covid-19-advice", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "censor", "\u653f\u5e9c"]}, {"category": "", "categoryclass": "", "imagename": "453380464056990f0f0190b93a81e2df.jpg", "infoid": 1001351, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "IT\u670d\u52a1\u63d0\u4f9b\u5546Cognizant\u5728\u672c\u5468\u7684\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\uff0c\u4e0a\u4e2a\u6708\u53d1\u751f\u57282020\u5e744\u6708\u7684\u52d2\u7d22\u8f6f\u4ef6\u4e8b\u4ef6\u5c06\u5bf9\u5176\u7b2c\u4e8c\u5b63\u5ea6\u6536\u5165\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002\n\u867d\u7136\u6211\u4eec\u9884\u8ba1\u4e0e\u8fd9\u4e2a\u95ee\u9898\u76f8\u5173\u7684\u6536\u5165\u5f71\u54cd\u5c06\u5728\u672c\u5b63\u5ea6\u4e2d\u671f\u57fa\u672c\u5f97\u5230\u89e3\u51b3\uff0c\u4f46\u6211\u4eec\u786e\u5b9e\u9884\u8ba1\u672c\u5b63\u5ea6\u7684\u6536\u5165\u548c\u76f8\u5e94\u7684\u5229\u6da6\u7387\u5f71\u54cd\u5c06\u57285000\u4e07\u81f37000\u4e07\u7f8e\u5143\u4e4b\u95f4\uff0cCognizant\u9996\u5e2d\u8d22\u52a1\u5b98\u5361\u4f26\u00b7\u9ea6\u514b\u6d1b\u592b\u6797(Karen McLoughlin)\u5728\u6628\u5929\u7684\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\u3002\nMcLoughlin\u8fd8\u9884\u8ba1\uff0c\u8be5\u4e8b\u4ef6\u5c06\u62db\u81f4\u4e0e\u8c03\u67e5\u3001\u6062\u590d\u670d\u52a1\u548c\u8865\u6551\u8fdd\u89c4\u76f8\u5173\u7684\u989d\u5916\u548c\u4e0d\u53ef\u9884\u89c1\u7684\u6cd5\u5f8b\u3001\u54a8\u8be2\u548c\u5176\u4ed6\u6210\u672c\u3002\nCognizant\u9996\u5e2d\u8d22\u52a1\u5b98\u8868\u793a\uff0c\u516c\u53f8\u73b0\u5728\u5df2\u7ecf\u5b8c\u5168\u4ece\u52d2\u7d22\u8f6f\u4ef6\u611f\u67d3\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u5e76\u6062\u590d\u4e86\u5927\u90e8\u5206\u670d\u52a1\u3002\n\u5728\u8c08\u5230\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u65f6\uff0cCognizant\u9996\u5e2d\u6267\u884c\u5b98\u5e03\u83b1\u6069\u00b7\u6c49\u5f17\u83b1\u65af(Brian Humphries)\u8868\u793a\uff0c\u8fd9\u8d77\u4e8b\u4ef6\u53ea\u5f71\u54cd\u4e86\u5176\u5185\u90e8\u7f51\u7edc\uff0c\u4f46\u4e0d\u5f71\u54cd\u5ba2\u6237\u7cfb\u7edf\u3002\n\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6c49\u5f17\u83b1\u65af\u8868\u793a\uff0c\u52d2\u7d22\u8f6f\u4ef6\u4e8b\u4ef6\u5f71\u54cd\u4e86(1)Cognizant\u652f\u6301\u5458\u5de5\u5728\u5bb6\u5de5\u4f5c\u7684\u7cbe\u9009\u7cfb\u7edf\uff0c\u4ee5\u53ca(2)\u5728\u51a0\u72b6\u75c5\u6bd2\u6d41\u884c\u671f\u95f4Cognizant\u7528\u6765\u652f\u6301\u5728\u5bb6\u5de5\u4f5c\u80fd\u529b\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u4f9b\u5e94\u3002\n\u6c49\u5f17\u83b1\u65af\u8bf4\uff0c\u5de5\u4f5c\u4eba\u5458\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\uff0c\u5173\u95ed\u4e86\u6240\u6709\u53d7\u5f71\u54cd\u7684\u7cfb\u7edf\uff0c\u8fd9\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5f71\u54cd\u4e86Cognizant\u7684\u8ba1\u8d39\u7cfb\u7edf\u3002\u4f5c\u4e3a\u9884\u9632\u63aa\u65bd\uff0c\u4e00\u4e9b\u5ba2\u6237\u670d\u52a1\u90e8\u95e8\u88ab\u5173\u95ed\u4e86\u3002\nCogizant\u4e0e\u5ba2\u6237\u4e3e\u884c\u4e86\u4f1a\u8bae\uff0c\u7136\u800c\uff0c\u7531\u4e8eCognizant\u907f\u514d\u900f\u9732\u6240\u53d1\u751f\u4e8b\u60c5\u7684\u4efb\u4f55\u5b9e\u9645\u7ec6\u8282\uff0c\u4f1a\u8bae\u8fdb\u884c\u5f97\u5e76\u4e0d\u987a\u5229\u3002\nZDNet\u4e86\u89e3\u5230\u8fd9\u4e00\u4e8b\u4ef6\u7684\u65f6\u95f4\u662f\u57284\u670817\u65e5\uff0c\u5f53\u65f6\u51e0\u540d\u5fc3\u6000\u4e0d\u6ee1\u7684\u5ba2\u6237\u8054\u7cfb\u4e86\u672c\u62a5\u8bb0\u8005\uff0c\u79f0\u8be5\u516c\u53f8\u8bd5\u56fe\u4ee5\u6280\u672f\u95ee\u9898\u4e3a\u5e4c\u5b50\u63a9\u76d6\u4e00\u4e2a\u91cd\u5927\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u5e76\u5207\u65ad\u4e86\u4e00\u7cfb\u5217\u670d\u52a1\u7684\u63a5\u5165\u3002\n\u8d77\u521d\uff0c\u5ba2\u6237\u62c5\u5fc3\u9ed1\u5ba2\u4ece\u670d\u52a1\u5668\u7a83\u53d6\u4e86\u7528\u6237\u6570\u636e\uff0c\u6216\u8005\u53d1\u751f\u4e86\u52d2\u7d22\u8f6f\u4ef6\u4e8b\u4ef6\uff0c\u52d2\u7d22\u8f6f\u4ef6\u4f20\u64ad\u5230\u5ba2\u6237\u670d\u52a1\u5668\uff0c\u52a0\u5bc6\u4e86\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u670d\u52a1\u5668\u53d8\u5f97\u65e0\u6cd5\u8bbf\u95ee\u3002\n\u5728Cognizant\u5411\u6240\u6709\u5ba2\u6237\u53d1\u9001\u5185\u90e8\u8b66\u62a5\uff0c\u6566\u4fc3\u5ba2\u6237\u963b\u6b62IP\u5730\u5740\u5217\u8868\u7684\u6d41\u91cf\u540e\uff0c\u5ba2\u6237\u88ab\u63a8\u5165\u5b8c\u5168\u504f\u6267\u7684\u6a21\u5f0f\u3002\n\u5ba2\u6237\u5f88\u5feb\u5c06IP\u5730\u5740\u94fe\u63a5\u5230\u8fc7\u53bb\u7531\u8ff7\u5bab\u52d2\u7d22\u8f6f\u4ef6\u56e2\u4f19\u8fd0\u8425\u7684\u7f51\u7edc\u670d\u52a1\u5668\u3002\n\u4f5c\u4e3a\u7f8e\u56fd\u6700\u5927\u7684\u670d\u52a1\u5668\u6258\u7ba1\u548cIT\u670d\u52a1\u63d0\u4f9b\u5546\u4e4b\u4e00\uff0cCogizant\u6700\u7ec8\u57284\u670818\u65e5\u516c\u5f00\u627f\u8ba4\uff0c\u5176\u7f51\u7edc\u5728\u4e00\u5929\u540e\u611f\u67d3\u4e86\u8ff7\u5bab\u52d2\u7d22\u8f6f\u4ef6\u3002\n\u8fd9\u8d77\u4e8b\u4ef6\u7684\u8ba4\u77e5\u635f\u5931\u4e0e\u94dd\u751f\u4ea7\u5546\u632a\u5a01\u6d77\u5fb7\u9c81(Norsk Hydro)\u53bb\u5e74\u62a5\u544a\u7684\u8303\u56f4\u76f8\u540c\uff0c\u8be5\u516c\u53f8\u62a5\u544a\u79f0\uff0c2019\u5e743\u6708\u7684\u52d2\u7d22\u8f6f\u4ef6\u4e8b\u4ef6\u5c06\u5bfc\u81f4\u603b\u6536\u5165\u635f\u5931\u8d85\u8fc74000\u4e07\u7f8e\u5143\uff0c\u8be5\u516c\u53f8\u540e\u6765\u5c06\u8fd9\u4e00\u6570\u5b57\u8c03\u6574\u4e3a\u5e74\u5185\u8fd17000\u4e07\u7f8e\u5143\u3002\n\u6c49\u5f17\u83b1\u65af\u8868\u793a\uff0cCognizant\u76ee\u524d\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u5ba2\u6237\u7684\u62c5\u5fe7\uff0c\u8fd9\u4e9b\u5ba2\u6237\u5728\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u540e\u9009\u62e9\u6682\u505cCognizant\u670d\u52a1\uff0c\u8fd9\u4e5f\u5f71\u54cd\u4e86Cognizant\u76ee\u524d\u7684\u5229\u6da6\u3002\n\u8fd1\u5e74\u6765\uff0c\u7f8e\u56fd\u8bc1\u4ea4\u4f1a(SEC)\u5c06\u52d2\u7d22\u8f6f\u4ef6\u5217\u4e3a\u516c\u53f8\u5229\u6da6\u4e3b\u8981\u524d\u77bb\u6027\u98ce\u9669\u56e0\u7d20\u7684\u7533\u8bf7\u6570\u91cf\u4ece2014\u5e74\u76843\u4efd\u98d9\u5347\u81f32019\u5e74\u76841139\u4efd\uff0c2020\u5e74\u5df2\u7ecf\u8fbe\u5230743\u4efd\u3002\u4f01\u4e1a\u4eca\u5929\u5c06\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u89c6\u4e3a\u5176\u5229\u6da6\u7684\u771f\u6b63\u98ce\u9669\uff0c\u56e0\u4e3a\u52d2\u7d22\u8f6f\u4ef6\u4e8b\u4ef6\u5f80\u5f80\u4f1a\u5bf9\u80a1\u4ef7\u9020\u6210\u58f0\u8a89\u635f\u5bb3\uff0c\u5e76\u56e0\u6536\u5165\u635f\u5931\u800c\u9020\u6210\u8d22\u52a1\u635f\u5931\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u53d7\u5bb3\u8005\u9700\u8981\u6570\u5468\u81f3\u6570\u6708\u7684\u65f6\u95f4\u624d\u80fd\u5b8c\u5168\u6062\u590d\u3002", "note_en": "IT services provider Cognizant said in an earnings call this week that a ransomware incident that took place last month in April 2020 will negatively impact its Q2 revenue.\n &#34;While we anticipate that the revenue impact related to this issue will be largely resolved by the middle of the quarter, we do anticipate the revenue and corresponding margin impact to be in the range of $50 million to $70 million for the quarter,&#34; said Karen McLoughlin, Cognizant Chief Financial Officer in an earnings call yesterday.\n McLoughlin also expects the incident to incur additional and unforeseen legal, consulting, and other costs associated with the investigation, service restoration, and remediation of the breach.\n The Cognizant CFO says the company has now fully recovered from the ransomware infection and restored the majority of its services.\n  Speaking on the ransomware attack, Cognizant CEO Brian Humphries said the incident only impacted its internal network, but not customer systems.\n   More precisely, Humphries said the ransomware incident impacted (1) Cognizant&#39;s select system supporting employees&#39; work from home setups and (2) the provisioning of laptops that Cognizant was using to support its work from home capabilities during the COVID-19 pandemic.\n Humphries said staff moved quickly to take down all impacted systems, which impacted Cognizant&#39;s billing system for a period of time. Some customer services were taken down as a precaution.\n   Cognizant held meetings with customers, however, the meetings did not go smoothly as Cognizant avoided sharing any actual details of what had happened.\n ZDNet learned of the incident as it was going on, at the time, on April 17, when several disgruntled customers had reached out to this reporter about the company attempting to hide a major security breach under the guise of &#34;technical issues&#34; and cutting off access to a series of services.\n Initially, customers feared that a hacker had either stole user data from servers, or a ransomware incident had taken place, and the ransomware spread to customer servers, encrypting their data and the servers becoming inaccessible.\n Customers were thrown in full paranoia mode after Cognizant sent an internal alert to all customers, urging clients to block traffic for a list of IP addresses.\n Customers were quick to link the IP addresses to web servers operated in the past by the Maze ransomware gang.\n Cognizant, one of the largest providers of server hosting and IT services in the US, eventually publicly admitted that its network was infected with the Maze ransomware a day later  on April 18.\n  Cognizant losses from the incident are in the same range reported last year by aluminum producer Norsk Hydro, which reported that a March 2019 ransomware incident would cause total revenue losses of  more than $40 million, a number it later adjusted to nearly $70 million during the year.\n Humphries said that Cognizant is now working to address the concerns of customers who opted to suspend Cognizant services in the wake of the ransomware attack, which also impacted Cognizant&#39;s current bottom line.\n  The number of SEC filings listing ransomware as a major forward-looking risk factor to companies&#39; profits  has skyrocketed in recent years from 3 filings in 2014 to 1,139 in 2019, and already 743 in 2020. Companies are seeing today ransomware attacks as a real risk for their bottom lines as ransomware incidents tend to cause reputational damage to stock prices and financial losses due to lost revenue as most victims take weeks and months to fully recover.", "posttime": "2020-05-09 09:17:20", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,cogizant,expects,\u5ba2\u6237", "title": "Cogizant\u9884\u8ba1\u5728\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u540e\u635f\u5931\u57285000\u4e07\u81f37000\u4e07\u7f8e\u5143\u4e4b\u95f4", "title_en": "Cognizant Expects To Lose Between $50 Million and $70 Million Following Ransomware Attack", "transed": 1, "url": "https://www.zdnet.com/article/cognizant-expects-to-lose-between-50m-and-70m-following-ransomware-attack/?ftag=TREc64629f&bhid=24300273679863920476885701297324&mid=12825712&cid=717442900", "via": "", "real_tags": ["\u8f6f\u4ef6", "cogizant", "expects", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001350, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u5e38\uff0c\u5f53\u6211\u5728\u8fd9\u91cc\u5199\u4e1c\u897f\u65f6\uff0c\u6211\u4f1a\u82b1\u65f6\u95f4\u5145\u5206\u601d\u8003\u4e00\u4e2a\u89c2\u70b9\uff0c\u63d0\u51fa\u4e00\u4e2a\u7406\u7531\uff0c\u89e3\u51b3\u6211\u80fd\u60f3\u5230\u7684\u95ee\u9898\u7684\u6240\u6709\u4e3b\u8981\u65b9\u9762\uff0c\u7b49\u7b49\u3002\n\u4f46\u662f\u8fd9\u5468\u6211\u5df2\u7ecf\u56e0\u4e3a\u4f7f\u7528\u4ee3\u7801\u5e93\u800c\u7b4b\u75b2\u529b\u5c3d\u4e86\uff0c\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u4f1a\u51fa\u73b0\u5728\u90a3\u4e9b\u5e16\u5b50\u4e2d\u3002\u6211\u6253\u7b97\u5c1d\u8bd5\u4e00\u4e0b\u610f\u8bc6\u6d41\u535a\u5ba2\u3002\n\u5f53\u7a0b\u5e8f\u5458\u5bf9\u81ea\u5df1\u8bf4\uff0c\u6211\u8fd9\u91cc\u6709\u4e00\u4e9b\u4ee3\u7801\u6216\u60f3\u6cd5\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u4ee3\u7801\u4f1a\u8ba9\u5176\u4ed6\u4eba\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u8f7b\u677e\u65f6\uff0c\u4ee3\u7801\u901a\u5e38\u6709\u4e24\u79cd\u5927\u81f4\u7684\u5f62\u5f0f\uff1a\u5e93\u6216\u6846\u67b6\u3002\n\u5e93\u662f\u4e00\u7ec4\u6784\u5efa\u5757\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u5171\u540c\u7684\u4e3b\u9898\u6216\u5f88\u597d\u5730\u534f\u540c\u5de5\u4f5c\uff0c\u4f46\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u72ec\u7acb\u7684\u3002\n\u6846\u67b6\u662f\u4e00\u4e2a\u4e0a\u4e0b\u6587\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u4ee3\u7801\u3002\u8fd9\u53ef\u4ee5\u91c7\u53d6\u63a7\u5236\u53cd\u8f6c\u3001\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8bed\u8a00\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u4e00\u4e2a\u975e\u5e38\u56fa\u6267\u5df1\u89c1\u7684\u5185\u90e8\u8026\u5408\u5e93\u7684\u5f62\u5f0f\u3002\u8fd9\u662f\u4e00\u79cd\u8c31\u7cfb\uff1b\u4e24\u8005\u4e4b\u95f4\u6ca1\u6709\u786c\u6027\u754c\u9650\u3002\u5224\u65ad\u67d0\u7269\u662f\u5426\u4e3a\u6846\u67b6\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u95ee\u95ee\u81ea\u5df1\uff0c\u6211\u53ef\u4ee5\u5c06\u5176\u4e0e\u5176\u4ed6\u7c7b\u4f3c\u7684\u4e1c\u897f\u7ed3\u5408\u4f7f\u7528\u5417\uff1f\u6216\u8005\u5b83\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e0e\u5176\u4ed6\u53ef\u80fd\u505a\u8fd9\u4e9b\u4e8b\u60c5\u7684\u65b9\u5f0f\u76f8\u4e92\u6392\u65a5\u7684\u505a\u4e8b\u65b9\u5f0f\uff1f&#34\uff1b\n\u6846\u67b6\u7684\u4e3b\u8981\u7279\u70b9\u662f\u5b83\u4eec\u5bf9\u7a0b\u5e8f\u5458\u65bd\u52a0\u4e86\u9650\u5236\u3002\u5b83\u4eec\u6ca1\u6709\u63d0\u4f9b\u4e00\u7ec4\u7a0b\u5e8f\u5458\u53ef\u4ee5\u505a\u7684\u65b0\u4e8b\u60c5\uff0c\u800c\u662f\u5bf9\u7a0b\u5e8f\u5458\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u5efa\u7acb\u4e86\u4e00\u4e2a\u8fb9\u754c\u3002\u4f5c\u4e3a\u7075\u6d3b\u6027\u7684\u4ea4\u6362\uff0c\u5b83\u4eec\u901a\u5e38\u6d88\u9664\u6837\u677f\uff0c\u4e3a\u5728\u5176\u4e0a\u6784\u5efa\u65b0\u7684\u5e93\u5efa\u7acb\u8bd5\u91d1\u77f3\uff0c\u5e76\u5141\u8bb8\u7a0b\u5e8f\u5458\u7684\u6280\u80fd\u5728\u9879\u76ee\u4e4b\u95f4\u53d8\u5f97\u66f4\u5177\u53ef\u79fb\u690d\u6027\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u65f6\u9650\u5236\u672c\u8eab\u662f\u53ef\u53d6\u7684\uff01\u6bd5\u7adf\uff0c\u7c7b\u578b\u7cfb\u7edf\u53ea\u4e0d\u8fc7\u662f\u5bf9\u4ee3\u7801\u65bd\u52a0\u9650\u5236\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u9650\u5236\u672c\u8eab\u5e76\u4e0d\u662f\u574f\u4e8b\u3002\n\u4f46\u662f\u3002\u5f53\u4f60\u7f16\u5199\u4e00\u4e2a\u6846\u67b6\uff0c\u5e0c\u671b\u522b\u4eba\u7528\u5b83\u6765\u6784\u5efa\u771f\u6b63\u7684\u9879\u76ee\u65f6(\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4e0d\u53ea\u662f\u4e00\u4e2a\u73a9\u5177)\uff0c\u4f60\u627f\u62c5\u7684\u8d23\u4efb\u6bd4\u4f60\u4f7f\u7528\u5e93\u8981\u5927\u5f97\u591a\u3002\n\u901a\u5e38\uff0c\u6846\u67b6\u5fc5\u987b\u63d0\u524d\u9884\u6d4b\u5176\u7528\u6237\u5728\u5176\u56f4\u5899\u5185\u53ef\u80fd\u9700\u8981\u505a\u7684\u6bcf\u4e00\u79cd\u4e8b\u60c5\u3002\u5bf9\u4e8e\u5b83\u5438\u6536\u5230\u81ea\u5df1\u7684\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e00\u5757\u62fc\u56fe\uff0c\u5b83\u5fc5\u987b\u627f\u62c5\u8d77\u8fd9\u7ec4\u4efb\u52a1\u7684\u8d23\u4efb\u3002\u5b83\u4e0d\u4ec5\u5fc5\u987b\u6ce8\u610f\u9700\u8981\u5728\u5176\u4e2d\u5b8c\u6210\u7684\u6bcf\u9879\u4efb\u52a1\u90fd\u80fd\u5b8c\u6210\uff0c\u800c\u4e14\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fd8\u9700\u8981\u63d0\u4f9b\u4e00\u79cd\u6bd4\u6b63\u5e38\u65b9\u5f0f\u66f4\u597d\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u8fd9\u4e9b\u4efb\u52a1\u3002\u5426\u5219\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528\u5b83\u5462\uff1f\n\u8fd9\u4e5f\u8f6c\u5316\u4e3a\u5f00\u53d1\u4eba\u5458\u7684\u4f53\u9a8c\u3002\u60a8\u7684\u6846\u67b6\u662f\u5426\u5f15\u5165\u4e86\u8d85\u8d8a\u57fa\u672c\u8bed\u8a00\u7684\u57fa\u4e8e\u7ea6\u5b9a\u7684\u884c\u4e3a\uff1f\u60a8\u6700\u597d\u5f7b\u5e95\u8bb0\u5f55\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5426\u5219\u7528\u6237\u5c06\u65e0\u53ef\u6551\u836f\u5730\u8ff7\u5931\u65b9\u5411\u3002\u60a8\u662f\u5426\u5f15\u5165\u4e86\u4e00\u79cd\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8bed\u8a00\uff1f\u60a8\u73b0\u5728\u8d1f\u8d23\u6784\u5efa\u94fe\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u8d1f\u8d23\u7f16\u8f91\u5668\u96c6\u6210\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u7ec4\u7ec7\u652f\u6301\u8fd9\u4e2a\u6846\u67b6\uff0c\u4e5f\u8bb8\u8fd9\u4e2a\u6f14\u7b97\u5c31\u4f1a\u594f\u6548\u3002\u8c37\u6b4c\u53ef\u4ee5\u80cc\u89d2\u5ea6\uff0c\u67a2\u8f74\u53ef\u4ee5\u80cc\u5f39\u7c27\uff0c\u53f2\u8bd7\u53ef\u4ee5\u80cc\u865a\u5e7b\u5f15\u64ce\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6846\u67b6\u65b9\u6cd5\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u5b58\u5728\u771f\u6b63\u6db5\u76d6\u6240\u6709\u9700\u8981\u8986\u76d6\u7684\u57fa\u7840\u7684\u8d44\u6e90\u548c\u610f\u613f\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u5927\u7684\u7ec4\u7ec7\uff1b\u5982\u679c\u9879\u76ee\u662f\u7531\u4e2a\u4eba\u3001\u521d\u521b\u516c\u53f8\u6216\u4e0d\u662f\u516c\u53f8\u6838\u5fc3\u7684\u5c0f\u56e2\u961f\u7f16\u5199\u548c\u7ef4\u62a4\u7684\uff0c\u90a3\u4e48\u5b83\u51e0\u4e4e\u80af\u5b9a\u4f1a\u5728\u5e93\u4e2d\u51fa\u9519\u3002\u6709\u4e86\u5e93\uff0c\u6838\u5fc3\u6982\u5ff5\u7684\u7f16\u8f91\u5668\u96c6\u6210\u548c\u6587\u6863\u66f4\u6709\u53ef\u80fd\u638c\u63e1\u5728\u8bed\u8a00\u521d\u5b66\u8005\u81ea\u5df1\u624b\u4e2d\u3002\u5bf9\u4e8e\u5e93\uff0c\u4efb\u4f55\u7f3a\u9677--\u5982\u9519\u8bef\u3001\u6587\u6863\u7f3a\u5931\u3001\u529f\u80fd\u7f3a\u5931\u3001\u7f3a\u4e4f\u6301\u7eed\u7ef4\u62a4\u3001\u4e0e\u5176\u4ed6\u5e93\u7684\u4e89\u8bae\u6027\u7b49--\u90fd\u66f4\u6709\u53ef\u80fd\u88ab\u81ea\u5b9a\u4e49\u4ee3\u7801\u6216\u5176\u4ed6\u5e93\u4e2d\u7684\u7247\u6bb5\u6240\u63a9\u76d6\u3002\u6709\u4e86\u5e93\uff0c\u597d\u7684\u90e8\u5206\u53ef\u4ee5\u96f6\u788e\u5730\u4f7f\u7528\uff0c\u800c\u4e0d\u5fc5\u56e0\u4e3a\u4e00\u4e2a\u6ca1\u6709\u4eba\u4f1a\u5728\u540e\u5907\u7bb1\u91cc\u89e3\u51b3\u7684\u95ee\u9898\u800c\u6254\u6389\u6574\u4e2a\u4e1c\u897f\u3002\n\u6240\u4ee5\u6211\u7684\u89c2\u70b9\u662f\uff1a\u6846\u67b6\u5e76\u4e0d\u603b\u662f\u7cdf\u7cd5\u7684\uff0c\u4f46\u5b83\u4eec\u6bd4\u5e93\u66f4\u5927\u7684\u98ce\u9669--\u65e0\u8bba\u662f\u5bf9\u521b\u5efa\u8005\u8fd8\u662f\u7528\u6237\u3002\u5982\u679c\u60a8\u7684\u6846\u67b6\u80fd\u591f\u5728\u4e0d\u635f\u5931\u592a\u591a\u7684\u60c5\u51b5\u4e0b\u6210\u4e3a\u4e00\u4e2a\u5e93\uff0c\u90a3\u4e48\u5b83\u5f88\u53ef\u80fd\u5c31\u5e94\u8be5\u662f\u4e00\u4e2a\u5e93\u3002\u5982\u679c\u4f60\u6ca1\u6709\u5728\u4e00\u5bb6\u5927\u578b\u79d1\u6280\u516c\u53f8\u5de5\u4f5c\uff0c\u4f60\u53ef\u80fd\u6ca1\u6709\u65f6\u95f4\u6216\u7cbe\u529b\u53bb\u7ed9\u4e88\u4e00\u4e2a\u6846\u67b6\u5b83\u6240\u9700\u8981\u7684\u6240\u6709\u5173\u6ce8\u3002\u56fe\u4e66\u9986\u4e0d\u662f\u4e07\u80fd\u7684\uff0c\u4f46\u5b83\u4eec\u5e94\u8be5\u662f\u9996\u9009\u3002", "note_en": "Normally when I write about something on here I take the time to fully think-out a point, make a case, address all the major sides of the issue that I can think of, etc.\n  But I am exhausted from fighting with a codebase this week, so this is not going to be one of those posts. I&#39;m going to try a little stream-of-consciousness blogging.\n  When a programmer thinks to herself &#34;I&#39;ve got some code or an idea for some code here that I think will make others&#39; lives easier&#34;, there are generally two broad-strokes forms that code can take: a library, or a framework.\n  A library is a set of building blocks that may share a common theme or work well together, but are largely independent.\n  A framework is a  context in which someone writes their own code. This could take the form of inversion-of-control, a domain-specific language, or just a very opinionated and internally-coupled library. It&#39;s a spectrum; there&#39;s no hard line between the two. One way to tell if something is a framework is to ask yourself, &#34;Could I use this in combination with something else like it? Or has it established ways of doing things that are mutually-exclusive with other ways those things might be done?&#34;\n  Frameworks&#39; key trait is that they impose  limitations on the programmer. Rather than  providing a set of new things the programmer can do, they establish a  boundary on the things the programmer can do. In exchange for flexibility they often eliminate boilerplate, establish a touchstone for new libraries to be built on top of them, and allow a programmer&#39;s skills to become more transferrable beteen projects. In fact, sometimes the limitations themselves are desirable! After all, type systems are nothing but a way of imposing limitations on code. Limitations are not intrinsically  bad.\n  However. When you write a framework that you expect others to build real projects with (i.e. it isn&#39;t just a toy), you are taking on a much greater responsibility than you would with a library.\n  A framework, usually, must predict ahead of time every kind of thing a user of it might need to do within its walls. For each piece of the puzzle that it assimilates into its own vocabulary, it must take over responsibility for that set of tasks. It must not only take care that every task that needs to be done in it  can be done, it ideally needs to offer a  better way of doing those things than the way they would be done normally. Otherwise, why use it?\n  This translates to the developer experience as well. Does your framework introduce convention-based behaviors that go beyond the base langauge? You&#39;d better thoroughly document those, or users will become hopelessly lost. Do you introduce a domain-specific language? You&#39;re now responsible for part of the build chain, and for editor integration.\n  Now, if there&#39;s a major organization backing the framework, maybe the calculus works out. Google can back Angular, Pivotal can back Spring, Epic can back Unreal Engine. These are the cases where the framework approach can work out, because there exist the resources and the will to really cover all of the bases that need covering.\n  But if there is not a major organization; if the project is written and maintained by an individual, or a startup, or a small team who isn&#39;t central to their company, it almost certainly should err on the &#34;library&#34; side of things. With a library, editor integration and documentation of core concepts are more likely to remain in the hands of the language matinainers themselves. With a library, any shortcomings - in the form of bugs, missing documentation, missing functionality, lack of continued maintenance, combatibility with other libraries, etc. - are much more likely to be able to be papered-over with custom code or with pieces from other libraries. With a library, the good bits can be used piecemeal without having to throw the whole thing away because of one problem that nobody&#39;s ever going to fix in the trunk.\n  So here&#39;s my point: frameworks aren&#39;t always bad, but they are a much bigger risk - for both the creators and the users - than libraries are. If your framework can be a library without losing much, it probably should be. If you don&#39;t work at a major tech company, you probably don&#39;t have the time or energy to give a framework all of the attention it requires. Libraries aren&#39;t everything, but they should be preferred.", "posttime": "2020-05-09 09:16:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u5199,libraries,\u6846\u67b6", "title": "\u7f16\u5199\u5e93\uff0c\u800c\u4e0d\u662f\u6846\u67b6", "title_en": "Write Libraries, Not Frameworks", "transed": 1, "url": "https://www.brandonsmith.ninja/blog/libraries-not-frameworks", "via": "", "real_tags": ["\u7f16\u5199", "libraries", "\u6846\u67b6"]}, {"category": "", "categoryclass": "", "imagename": "9baff3f416b4c1e84b045167f2cc4048.png", "infoid": 1001349, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u5de5\u667a\u80fd\u4e0d\u5e94\u8be5\u4f5c\u5f0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f7f\u7528\u4eba\u7c7b\u73a9\u5bb6\u4e0d\u53ef\u7528\u4efb\u4f55\u8d44\u6e90\u548c/\u6216\u4fe1\u606f\u3002\n\u5bf9AI\u7684\u8c03\u6574\u5fc5\u987b\u5728\u6bcf\u4e2a\u6838\u5fc3\u6a21\u5757\u4e2d\u8fdb\u884c\u6d4b\u8bd5\u3002\u4e00\u4e2a\u65b9\u9762\u7684\u6539\u5584\u4e0d\u5e94\u8be5\u5bf9\u5176\u4ed6\u591a\u5668\u5b98\u529f\u80fd\u969c\u788d\u6709\u8d1f\u9762\u5f71\u54cd\u3002\n\u6211\u4e0d\u5e94\u8be5\u7167\u770b\u7403\u5458\u3002\u5c06Micro\u4eceRTS\u6d41\u6d3e\u4e2d\u79fb\u9664\u5e76\u4e0d\u662fOpenRA\u7684\u76ee\u6807\u3002\n\u7ba1\u9053\u548c\u4e00\u822c\u903b\u8f91\u662f\u7531C#\u4ee3\u7801\u5904\u7406\u7684\uff0c\u4e5f\u5e94\u8be5\u7531C#\u4ee3\u7801\u5904\u7406\u3002\u53d8\u91cf\uff0c\u5982\u5efa\u7b51\u6bd4\u7387\u3001\u73ed\u7ec4\u7ec4\u6210\u3001\u961f\u5217\u548c\u5355\u4f4d\u540d\u79f0\u5b58\u50a8\u5728MiniYAML\u6587\u4ef6\u4e2d\u3002\u8fd9\u4f7f\u5f97\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u76f8\u5bf9\u8f7b\u677e\u5730\u5bf9AI\u8fdb\u884c\u7ec6\u5fae\u7684\u8c03\u6574\u3002\n\u7136\u800c\uff0c\u5927\u591a\u6570\u7279\u5b9a\u4e8eMOD\u7684\u884c\u4e3a\uff0c\u4ee5\u53ca\u6240\u6709\u66f4\u590d\u6742\u7684\u884c\u4e3a\uff0c\u90fd\u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5408\u7406\u5b9e\u73b0\uff0c\u8fd9\u662f\u56e0\u4e3a\u4eba\u5de5\u667a\u80fd\u9700\u8981\u5728\u4e0d\u540c\u7684MOD\u4e2d\u652f\u6301\u8bb8\u591a\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5927\u591a\u662f\u72ec\u5360\u7684\uff0c\u751a\u81f3\u662f\u76f8\u4e92\u51b2\u7a81\u7684\u3002\n\u8fd9\u79cd\u762b\u75ea\u7684\u4eba\u5de5\u667a\u80fd\u5728\u8bb8\u591a\u5173\u952e\u9886\u57df\u4ea7\u751f\u4e86\u95ee\u9898\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\u6218\u672f\u51b3\u7b56\u3001\u8d44\u6e90\u4f7f\u7528\u4f18\u5316\u548c\u57fa\u5730\u5efa\u8bbe\u3002\n\u56e0\u6b64\uff0c\u672a\u6765\u7684OpenRA AI\u5e94\u8be5\u4f7f\u7528Lua\u811a\u672c\u6765\u5236\u5b9a\u6240\u6709\u7279\u5b9a\u4e8eMOD\u7684\u51b3\u7b56\uff0c\u4ee5\u53ca\u6240\u6709\u590d\u6742\u7684\u884c\u4e3a\u3002\u8fd9\u6837\u7684AI\u5b9e\u73b0\u5c06\u5141\u8bb8\u5efa\u6a21\u8005\u548c\u5f00\u53d1\u4eba\u5458\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8f7b\u677e\u5730\u8c03\u6574AI\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u9632\u6b62C#\u4ee3\u7801\u548cMiniYAML\u6587\u4ef6\u4e0d\u5fc5\u8981\u7684\u81a8\u80c0\u3002\u5df2\u7ecf\u6709\u51e0\u6b21\u5c1d\u8bd5\u5b9e\u73b0\u8fd9\u6837\u7684\u4eba\u5de5\u667a\u80fd\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u6ca1\u6709\u5b8c\u5168\u6210\u529f\u3002\u6700\u503c\u5f97\u6ce8\u610f\u7684\u5305\u62ec\uff1a#12949\u3002\n\u56e2\u961f\u534f\u8c03\uff1a\u4eba\u5de5\u667a\u80fd\u5e94\u8be5\u80fd\u591f\u4e0e\u961f\u53cb\u5206\u4eab\u4fe1\u606f\uff0c\u5e76\u5bf9\u4ed6\u4eec\u7684\u73af\u5883\u505a\u51fa\u53cd\u5e94\u3002\u8fd9\u5305\u62ec\u4eba\u7c7b\u548c\u4eba\u5de5\u667a\u80fd\u7403\u5458\u3002\n\u7cbe\u51c6\u7ecf\u6d4e\u7ba1\u7406\u3002\u56e0\u6b64\uff0c\u4eba\u5de5\u667a\u80fd\u610f\u8bc6\u5230\u5b83\u7684\u8d44\u6e90\uff0c\u5e76\u80fd\u591f\u6839\u636e\u9700\u8981\u91cd\u65b0\u5206\u914d\u5b83\u4eec\u3002", "note_en": "AI shouldn&#39;t cheat. That is, use any resources and or information not available to human player.\n   Adjustments to the AI must be tested in each of the core mods. Improvement in one shouldn&#39;t negatively impact other mods.\n   AI shouldn&#39;t babysit the player. Removing micro from RTS genre  is not the goal of OpenRA.\n  The plumbing and general logic is handled, and should be handled, by C# code.The variables, such as building ratios, squad composition, queues and unit names are stored in miniYAML file.This allows developers to perform minor tweaks on the AI, with relative ease.\n However, most mod specific behavior, and all more complex behavior, can not be reasonably implemented in this fashion.This is because of many specific features the AI has to support in different mods, most of which are exclusive and even conflicting with each other.\n Issues arising from this cripple AI in many key areas, including but not limited to: tactical decisions, resource use optimization and base construction.\n  Therefore the future OpenRA AI should use LUA scripts for all mod specific decision making, as well all complex behavior.Such AI implementation would allow modders and developers to easily adjust AI to their needs, while also preventing unnecessary bloat of C# code and miniYAML files. There have been several attempts to implement such AI, so far none of them completely successful.The most notable ones include: #12949\n  Team coordination: The AI should be able to share information with its teammates, and react to their circumstances.This includes both human and AI players.\n  Precise economic management. So that AI is aware of it&#39;s resources and is able to reallocate them as needed.", "posttime": "2020-05-09 09:01:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,ai,\u4eba\u5de5\u667a\u80fd", "title": "OpenRA AI\u5f00\u53d1\u6307\u5357", "title_en": "OpenRA AI Development Guidelines", "transed": 1, "url": "https://github.com/OpenRA/OpenRA/wiki/AI-Development-Guidelines", "via": "", "real_tags": ["\u5f00\u53d1", "ai", "\u4eba\u5de5\u667a\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "4b22f0769d5d63b239b2fff37264705d.png", "infoid": 1001346, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u771f\u7684\u5f88\u60f3\u6210\u4e3a\u4e00\u540d\u5927\u516c\u53f8\u7684\u4eba\uff0c\u4f46\u6211\u662f\u4e00\u4e2a\u5bb9\u6613\u611f\u5230\u65e0\u804a\u7684\u591a\u9762\u624b\uff0c\u800c\u73b0\u5b9e\u662f\u6211\u559c\u6b22\u521b\u4e1a\u3002\u8bda\u7136\uff0c\u5728\u5927\u591a\u6570\u521d\u521b\u516c\u53f8\u4e2d\uff0c\u5927\u591a\u6570\u4e8b\u60c5\u90fd\u662f\u6c38\u65e0\u6b62\u5883\u7684\uff0c\u4f46\u5982\u679c\u4f60\u80fd\u63a5\u53d7\u8fd9\u4e00\u70b9\uff0c\u90a3\u5c31\u6709\u5f88\u591a\u503c\u5f97\u559c\u6b22\u7684\u5730\u65b9\u3002\u6709\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u4f8b\u5b50\uff1a\u5728\u4e00\u5bb6\u5feb\u901f\u53d1\u5c55\u7684\u521d\u521b\u516c\u53f8\uff0c\u4e00\u4e2a\u52e4\u594b\u3001\u6709\u624d\u534e\u7684\u4eba\uff0c\u5982\u679c\u5f97\u5230\u516c\u53f8\u9886\u5bfc\u5c42\u7684\u4e00\u4e9b\u652f\u6301\uff0c\u901a\u5e38\u53ef\u4ee5\u5f88\u5feb\u83b7\u5f97\u4e00\u4e2a\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5934\u8854(\u6216\u8005\u81f3\u5c11\u662f\u5f88\u591a\u4e8b\u5b9e\u4e0a\u7684\u6743\u529b)\u3002\n\u6211\u9047\u5230\u8fc7\u5f88\u591a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e0a\u53f0\u7684\u4eba\uff0c\u4ed6\u4eec\u51e0\u4e4e\u6ca1\u6709\u6216\u6839\u672c\u6ca1\u6709\u7ba1\u7406\u7ecf\u9a8c\uff0c\u6709\u65f6\u751a\u81f3\u5bf9\u81ea\u5df1\u89d2\u8272\u7684\u6838\u5fc3\u804c\u8d23\u6ca1\u6709\u592a\u591a\u7ecf\u9a8c\u3002\u4e00\u5207\u90fd\u662f\u65b0\u7684\uff0c\u800c\u62e5\u6709\u6743\u529b\u672c\u8eab\u53c8\u662f\u4e00\u4ef6\u65b0\u7684\u4e8b\u60c5\u3002\u6211\u5728\u6211\u7684\u7f16\u7a0b\u751f\u6daf\u4e2d\u53ea\u6709\u51e0\u5e74\u7684\u65f6\u95f4\u5c31\u7b2c\u4e00\u6b21\u9047\u5230\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u53d1\u73b0\u5b83\u8ba9\u6211\u8ff7\u5931\u4e86\u65b9\u5411\u3002\u6211\u6709\u65f6\u53ef\u4ee5\u611f\u89c9\u5230\uff0c\u5c31\u50cf\u8d28\u91cf\u626d\u66f2\u65f6\u7a7a\u7ed3\u6784\u4e00\u6837\uff0c\u6743\u529b\u6b63\u5728\u91cd\u5851\u6211\u5468\u56f4\u7684\u4e00\u5207\uff0c\u4f46\u6211\u770b\u4e0d\u5230\u786e\u5207\u7684\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u6211\u5e0c\u671b\u81ea\u5df1\u5f53\u65f6\u5c31\u77e5\u9053\u7684\u4e00\u4e9b\u4e8b\u60c5\uff1a\n\u6743\u529b\u4f1a\u626d\u66f2\u54c1\u5473\u3002\u8fd9\u4e2a\u4e16\u754c\u4e0a\u6211\u6700\u559c\u6b22\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u6709\u4eba\u8bf4\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u8bdd\uff0c\u5374\u6ca1\u6709\u4eba\u7b11--\u53ef\u80fd\u662f\u56e0\u4e3a\u627f\u8ba4\u4f60\u542c\u61c2\u4e86\u8fd9\u4e2a\u7b11\u8bdd\u592a\u5c0f\u4f17\u548c\u602a\u5f02\u4e86\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a\u4f60\u5728\u7535\u8bdd\u4f1a\u8bae\u4e0a\u5047\u88c5\u5728\u542c\uff0c\u4e00\u4f4d\u540c\u4e8b\u7ed9\u4f60\u53d1\u4e86\u4e00\u5f20\u6709\u8da3\u7684\u622a\u56fe\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a\u4f60\u5728\u5077\u542c\uff0c\u8bd5\u56fe\u8868\u73b0\u5f97\u597d\u50cf\u4f60\u5728\u5173\u5fc3\u81ea\u5df1\u7684\u4e8b\u60c5\u3002\u4e0d\u7ba1\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u6211\u559c\u6b22\u770b\u7740\u4eba\u4eec\u5c3d\u91cf\u4e0d\u7b11\u3002\u6211\u8fc7\u53bb\u5e38\u5e38\u8bb2\u5f88\u591a\u7b11\u8bdd\uff0c\u8fd9\u4e9b\u7b11\u8bdd\u8981\u4e48\u5f88\u611a\u8822\uff0c\u8981\u4e48\u6666\u6da9\u96be\u61c2\uff0c\u4ee5\u81f3\u4e8e\u4eba\u4eec\u5f88\u5c11\u7b11\uff0c\u6211\u5bf9\u6b64\u5f88\u9ad8\u5174\u3002\u4f46\u662f\uff0c\u5f53\u6211\u5728\u6211\u7ba1\u7406\u7684\u7b2c\u4e00\u652f\u7403\u961f\u7b7e\u4e0b\u7b2c\u4e00\u4e2a\u65b0\u5458\u5de5\u540e\uff0c\u6211\u6ce8\u610f\u5230\u4e86\u4e00\u4e9b\u4e8b\u60c5-\u4eba\u4eec\u5f00\u59cb\u5632\u7b11\u6211\u6240\u6709\u7684\u7b11\u8bdd\u3002\u6211\u88ab\u641e\u7cca\u6d82\u4e86\u3002\u6211\u5e76\u6ca1\u6709\u53d8\u5f97\u66f4\u6709\u8da3\u3002\u6211\u7684\u540c\u4e8b\u4eec\u5e76\u6ca1\u6709\u53d8\u5f97\u66f4\u52a0\u575a\u5fcd\u3002\u51e0\u5468\u540e\uff0c\u6211\u7a81\u7136\u610f\u8bc6\u5230\uff1a\u8fd9\u662f\u56e0\u4e3a\u6211\u53d8\u5f97\u66f4\u5f3a\u5927\u4e86\u3002\u6211\u4ecd\u7136\u4e0d\u786e\u5b9a\u8fd9\u5230\u5e95\u6709\u4ec0\u4e48\u5173\u7cfb--\u6211\u731c\u4eba\u4eec\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5173\u5fc3\u4e0e\u6211\u4fdd\u6301\u826f\u597d\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u7b11\u8bdd\u65e2\u806a\u660e\u53c8\u65e0\u5bb3\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u52a0\u5165\u5230\u7b11\u58f0\u4e2d\u6765\u5462\uff1f\u8d77\u521d\uff0c\u6211\u5f88\u53cd\u611f--\u8fd9\u4f3c\u4e4e\u662f\u4e00\u79cd\u5351\u8eac\u5c48\u819d\u7684\u7c97\u66b4\u8868\u73b0--\u5c3d\u7ba1\u6211\u77e5\u9053\u8fd9\u4e9b\u4eba\u8c01\u4e5f\u4e0d\u4f1a\u627f\u8ba4(\u751a\u81f3\u53ef\u80fd\u4e0d\u76f8\u4fe1)\u4ed6\u4eec\u5df2\u7ecf\u6539\u53d8\u4e86\u81ea\u5df1\u7684\u884c\u4e3a\u3002\u540e\u6765\u6211\u610f\u8bc6\u5230\uff0c\u8fd9\u5e76\u4e0d\u662f\u771f\u7684(\u6216\u8005\uff0c\u81f3\u5c11\uff0c\u53ea\u662f)\u62cd\u9a6c\u5c41\u3002\u6743\u529b\u5b9a\u4e49\u4e86\u4ec0\u4e48\u662f\u6b63\u5e38\u7684-\u7a81\u7136\u4e4b\u95f4\uff0c\u6211\u7684\u5e7d\u9ed8\u611f\u5411\u4e3b\u6d41\u8dcc\u8dcc\u649e\u649e\u5730\u8d70\u4e86\u4e00\u6b65\uff0c\u521a\u521a\u63a5\u8fd1\u5230\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u5348\u9910\u65f6\u90fd\u7b11\u7684\u4e1c\u897f\u3002\n\u6743\u529b\u626d\u66f2\u4e86\u8d23\u4efb\u3002\u6211\u7ecf\u5e38\u53bb\u7684\u90e8\u95e8\u6709\u4e24\u4e2a\u4eba\u4f1a\u505a\u51fa\u540c\u6837\u7684\u95ee\u9898\u884c\u4e3a\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u4eba\u4f1a\u7ecf\u5e38\u56e0\u6b64\u800c\u88ab\u53eb\u51fa\u6765\u3002\u6709\u65f6\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u5408\u5e76\u6ca1\u6709\u5ba1\u67e5\u8005\u7684\u516c\u5173\uff0c\u6709\u65f6\u662f\u66f4\u5fae\u5999\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u5728\u4f1a\u8bae\u4e0a\u4ee5\u9ad8\u4eba\u4e00\u7b49\u7684\u59ff\u6001\u4e0e\u5176\u4ed6\u4eba\u4ea4\u8c08\u3002\u4e00\u4e2a\u4eba\u4f1a\u5f53\u573a\u9762\u5bf9\uff0c\u800c\u53e6\u4e00\u4e2a\u4eba\u53ef\u80fd\u4f1a\u4e00\u8a00\u4e0d\u53d1\u5730\u9003\u8131\u3002\u603b\u662f\u6709\u7406\u7531\u7684\uff1a\u201c\u55ef\uff0c\u90a3\u4e2a\u4eba\u662f\u4e00\u540d\u9ad8\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u201d\uff0c\u6216\u8005\uff0c\u201c\u6211\u8ba4\u4e3a\u4ed6\u7684\u884c\u4e3a\u8fd8\u4e0d\u591f\u7cdf\u7cd5\uff0c\u4e0d\u8db3\u4ee5\u6311\u8d77\u4e89\u6267\u3002\u201d\u4f46\u66f4\u591a\u65f6\u5019\uff0c\u6211\u5f00\u59cb\u6ce8\u610f\u5230\uff0c\u4e0e\u4ed6\u4eec\u7684\u5f85\u9047\u6700\u76f8\u5173\u7684\u662f\u4ed6\u4eec\u5728\u56e2\u961f\u4e2d\u7684\u6743\u529b\u3002\u5f53\u7136\uff0c\u6548\u679c\u53ea\u80fd\u548c\u90a3\u4e2a\u4eba\u7684\u529b\u91cf\u4e00\u6837\u6301\u4e45\uff1b\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f53\u90a3\u4e2a\u4eba\u7eca\u5012\u5e76\u5931\u53bb\u4e00\u4e9b\u611f\u77e5\u5230\u7684\u529b\u91cf\u65f6\uff0c\u4e00\u7fa4\u624b\u6301\u5e72\u8349\u53c9\u7684\u66b4\u5f92\u7a81\u7136\u51fa\u73b0\u5728\u4ed6\u4eec\u5468\u56f4\u3002\u4ed6\u4eec\u603b\u662f\u5927\u5403\u4e00\u60ca\u3002\u6211\u6c38\u8fdc\u65e0\u6cd5\u89e3\u91ca\u8fd9\u4e00\u70b9--\u4ed6\u4eec\u53ef\u80fd\u6ca1\u6709\u610f\u8bc6\u5230\u522b\u4eba\u5bf9\u4ed6\u4eec\u884c\u4e3a\u7684\u611f\u53d7\uff0c\u4ed6\u4eec\u7684\u6279\u8bc4\u8005\u7a81\u7136\u90fd\u9009\u62e9\u4e86\u540c\u4e00\u65f6\u95f4\u63d0\u51fa\u4ed6\u4eec\u7684\u62b1\u6028\u3002\u4f46\u6743\u529b\u626d\u66f2\u4e86\u8d23\u4efb\u3002\u8fd9\u91cc\u6709\u591a\u4e2a\u56e0\u7d20\uff1a\u5f88\u5c11\u6709\u4eba\u60f3\u7ed9\u6709\u6743\u52bf\u7684\u4eba\u5e26\u6765\u4ee4\u4eba\u4e0d\u5feb\u7684\u53cd\u9988\uff0c\u6709\u6743\u52bf\u7684\u4eba\u6709\u65f6\u89c9\u5f97\u4e0d\u53ef\u6218\u80dc\uff0c\u53ef\u4ee5\u5ffd\u7565\u66f4\u591a\u7684\u6279\u8bc4\u800c\u900d\u9065\u6cd5\u5916\uff0c\u6700\u9634\u9669\u7684\u662f\uff0c\u4eba\u4eec\u6709\u65f6\u4f1a\u5fae\u5999\u5730\u8c03\u6574\u4ed6\u4eec\u5bf9\u56e0\u679c\u548c\u8d23\u4efb\u7684\u7406\u89e3\uff0c\u5c06\u79ef\u6781\u7684\u7ed3\u679c\u5f52\u56e0\u4e8e\u6709\u6743\u52bf\u7684\u4eba\uff0c\u5c06\u6d88\u6781\u7684\u7ed3\u679c\u5f52\u56e0\u4e8e\u4e0d\u90a3\u4e48\u6709\u6743\u52bf\u7684\u4eba\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u4f3c\u4e4e\u613f\u610f\u7ed9\u90a3\u4e9b\u56e0\u81ea\u5df1\u7684\u9519\u8bef\u9009\u62e9\u800c\u8dcc\u8dcc\u649e\u649e\u7684\u5bcc\u4eba\u548c\u6709\u6743\u52bf\u7684\u4eba\u63d0\u4f9b\u5982\u6b64\u591a\u7684\u65b0\u673a\u4f1a\uff0c\u4f46\u6211\u4eec\u559c\u6b22\u618e\u6068\u7a77\u4eba\u7684\u95ee\u9898\uff0c\u5c3d\u7ba1\u6240\u6709\u660e\u663e\u7684\u7ed3\u6784\u6027\u56e0\u7d20\u90fd\u5bf9\u4ed6\u4eec\u4e0d\u5229\u3002\u540c\u6837\u7684\u4e8b\u60c5\u4e5f\u53d1\u751f\u5728\u516c\u53f8\u91cc\u3002\n\u6743\u529b\u626d\u66f2\u4e86\u610f\u4e49\u3002\u5bf9\u65b0\u83b7\u5f97\u7684\u6743\u529b\u6700\u5927\u7684\u8ff7\u5931\u65b9\u5411\u4e4b\u4e00\u662f\uff0c\u5b83\u53ef\u4ee5\u6539\u53d8\u4f60\u6240\u505a\u548c\u6240\u8bf4\u7684\u4e00\u5207\u7684\u610f\u4e49\u3002\u66fe\u7ecf\u4f60\u6ca1\u6709\u56de\u590d\u5076\u5c14\u53d1\u6765\u7684\u201c\u677e\u5f1b\u201d\u4fe1\u606f\uff0c\u662f\u56e0\u4e3a\u4f60\u5934\u8111\u4e0d\u96c6\u4e2d\uff0c\u5f88\u5fd9\uff0c\u73b0\u5728\u662f\u56e0\u4e3a\u4f60\u89c9\u5f97\u81ea\u5df1\u592a\u91cd\u8981\u4e86\uff0c\u4e0d\u4f1a\u88ab\u6253\u6270\u3002**\u4f60\u7684\u884c\u4e3a\u4e00\u70b9\u4e5f\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u662f\u7a81\u7136\u4e4b\u95f4\uff0c\u4eba\u4eec\u8ba4\u4e3a\u4f60\u6709\u4e86\u65b0\u7684\u4e2a\u6027\u3002\u201c\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\uff1a\u4e00\u4f4d\u540c\u4e8b\u66fe\u7ecf\u4ece\u4e00\u4e2a\u7279\u5b9a\u5c0f\u7ec4\u7684\u6210\u5458\u664b\u5347\u4e3a\u8be5\u5c0f\u7ec4\u7684\u9886\u5bfc\u4eba\u3002\u8f6c\u6362\u51e0\u5468\u540e\uff0c\u6211\u8981\u6c42\u5979\u505c\u6b62\u56de\u590d\u201c+1\u201d\u4ee5\u677e\u5f1b\u6d88\u606f", "note_en": "I truly  want to be a big company person, but I am a generalist who gets bored easily, and the reality is that I love startups. It\u2019s true that most things at most startups are perpetually on fire, but if you can accept that, there is a lot to like. One well-known one: at a fast-growing startup, a hard-working, talented person who has some support from company leadership* can often acquire an impressive title (or at least a lot of de facto power) very quickly.\n I\u2019ve met a lot of people who have come to power this way with little or no management experience and sometimes not even much experience with the core responsibilities of their role. Everything is new, and having power itself is one more new thing. I first landed in that situation only a few years into my programming career, and I found it so disorienting. I could sometimes feel that, just as mass distorts the fabric of space time, power was reshaping everything around me, but I couldn\u2019t see exactly how. Here are some things I wish I\u2019d known at the time:\n Power bends taste. One of my favorite things in the world is when someone says something very funny and nobody laughs \u2014 maybe because it\u2019s too niche and weird to admit that you got the joke, maybe because you\u2019re on a conference call pretending to be listening and a coworker sent you a funny screenshot, maybe because you\u2019re eavesdropping and trying to act like you\u2019re minding your own business. Whatever the reason, I love watching people try not to laugh. I used to make a lot of jokes that were either so goofy or obscure that people rarely laughed, and I was happy with that. But after I signed my first new hire on the first team I managed, I noticed something \u2014 people started laughing at all my jokes. I was flummoxed. I hadn\u2019t gotten funnier. My coworkers hadn\u2019t become less stoic. A few weeks later, it hit me: it was because I had become more powerful. I\u2019m still not sure exactly  why that mattered \u2014 I guess people cared more than ever about having a good relationship with me, so why not join in on the laughter if the joke was clever and harmless? At first, I was repelled \u2014 it seemed like a gross display of obsequiousness \u2014 even though I knew none of these people would admit (or probably even believe) they had changed their behavior. I realized later it wasn\u2019t really (or, at least,  only) about sucking up. Power defines what\u2019s normal \u2014 and suddenly my sense of humor had stumbled one tick toward the mainstream, just close enough to be something we could all laugh about at lunch.\n Power bends accountability. I\u2019ve often been in departments where two people would perform the same problematic behavior, but only one person would regularly get called out for it. Sometimes it would be something obvious like merging PRs with no reviewer, and sometimes something more subtle like talking down to someone else in a meeting. One person would be confronted on the spot, while someone else might get away without a word. There are always justifications: \u201cwell, that person is a  senior software engineer,\u201d or, \u201cI didn\u2019t think the behavior was bad enough to pick a fight about it.\u201d But more often than not, I started to notice that the thing most strongly correlated to their treatment was their power on the team. \u00a0\u00a0\u00a0\u00a0Of course, the effect is only as durable as that person\u2019s power is; often, when that person stumbles and loses some perceived power, a mob with pitchforks suddenly appears around them. Invariably they are surprised. I could never explain it \u2014 both that they could be unaware of how others felt about their behavior, and that their critics suddenly all picked the same time to bring up their gripes. But power bends accountability. There are multiple factors here: few people want to give a powerful person unpleasant feedback, powerful people sometimes feel invincible and can get away with ignoring more criticism, and, most insidious of all, people sometimes make subtle adjustments to their understanding of cause, effect, and accountability to attribute positive outcomes to powerful people, and negative outcomes to less-powerful ones. Compare how we seem to be willing to give so many fresh chances to wealthy and powerful people who stumble due to their own bad choices, but we love to  hate on poor people for their problems despite all the obvious structural factors working against them. The same thing happens in companies.\n Power bends meaning. One of the greatest disorientations of newly acquired power is that it can change the meaning of everything you do and say. Where once you didn\u2019t reply to the occasional Slack message because you were scatterbrained and busy, now it\u2019s because you think you\u2019re too important to be bothered.** Your behavior hasn\u2019t changed at all, but all of a sudden people think you have a new personality. One example: a colleague was once promoted from being a member of a particular group to being its leader. A few weeks after the switch, I asked her to stop replying with \u201c+1\u201d to Slack messages in the group. In the past, this behavior had been a benign way to help the group build consensus. Now it had become a way to stifle debate and create new hierarchies within the group. She didn\u2019t need to help build consensus anymore; as the leader of the group, her stated opinion was nearly enough to  be consensus. Tossing a +1 after someone else\u2019s opinion went from putting a thumb on the scale to  standing on the scale, even though we were all typing the exact same things we had been a week before.\n Once I started watching for how newly-acquired power distorts the meanings of everything, I started seeing examples everywhere: it sometimes felt like my startup surroundings had the wavy hallucinatory quality of a mirage in the desert. To help organize my thoughts, I started abbreviating this phenomenon with a phrase:  power bends light.\n I thought I would need it mostly to deal fairly with the leaders on my team, and it helps there sometimes, but again and again, the person I continue to need it most for is myself. You often gain power from doing a good job, but power also makes you  feel like you are doing a good job \u2014 and it makes people around you less likely to tell you differently. When people tell me everything is great even though their faces say something else, when I apologize for something and they insist it was no big deal, when I suddenly get a raised eyebrow for doing something I\u2019ve done 100 times before, I try to remember to ask myself, what\u2019s my relationship to this person? Do I have power over them somehow? Is power bending light?", "posttime": "2020-05-09 08:31:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6298\u5f2f,bends", "title": "\u6743\u529b\u6298\u5f2f\u706f\u5149(2019)", "title_en": "Power Bends Light (2019)", "transed": 1, "url": "https://honkathon.com/2019-08-18-power-bends-light/", "via": "", "real_tags": ["\u6298\u5f2f", "bends"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001345, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662fHTML\u89c4\u8303\u6240\u8981\u6c42\u7684\uff0c\u4f46\u662f99%\u7684\u6d4f\u89c8\u5668\u4f1a\u5728\u6ca1\u6709\u63d0\u4f9b\u7684\u60c5\u51b5\u4e0b\u4e3a\u60a8\u8865\u5145\u4e00\u4e9b\u5185\u5bb9\u3002\u6ce8\u610f\uff1a\u6211\u4e0d\u4f1a\u5728\u751f\u4ea7\u7f51\u7ad9\u4e0a\u4f7f\u7528\u8fd9\u4e2a\u5efa\u8bae\u3002\u4f46\u662f\u4e3a\u4e86\u5feb\u901f\u5f00\u53d1\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u6280\u5de7\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fdb\u884cme.--Here\uff1a*\u6807\u8bb0\u5916\u7684\u6587\u672c\u5728\u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002**\u662fHTML\u89c4\u8303(\u4f46\u4e0d\u662fXHTML\u89c4\u8303)\u6240\u5fc5\u9700\u7684\u300299%\u7684\u6d4f\u89c8\u5668\u4e0d\u4f1a\u5728\u610f\u4f60\u662f\u5426\u7701\u7565\u4e86\u5b83\u3002\u521b\u5efa\u5b83\u662f\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\u4ee5\u524d\u7684HTML\u7248\u672c\u3002\u5bf9\u4e8e\u6700\u5c0f\u7684HTML5\u6587\u6863\uff0c\u60a8\u53ef\u4ee5\u7701\u7565\u5b83\u3002*\uff0c", "note_en": "is required by the HTML spec, but 99%of all browsers will make up something for you if it isn&#39;t supplied.Note: I wouldn&#39;t use this advice on production websites. But for quickdevelopment, here are some tips that help me.-------------------------------------------------------------------------------Here we go:* Text outside of tags is acceptable in modern browsers.*  *is* required by the HTML spec (but not the XHTML spec). 99% of browsers will not care if you omit it. It was created for backwards compatibility with prior HTML versions. You can omit it for minimal HTML5 documents.*  ,", "posttime": "2020-05-09 08:31:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u6210,facts,\u89c4\u8303", "title": "\u5173\u4e8e\u751f\u6210\u6700\u5c0fHTML\u7684\u6709\u8da3\u4e8b\u5b9e", "title_en": "Fun Facts on Producing Minimal HTML", "transed": 1, "url": "https://blog.notryan.com/013.txt", "via": "", "real_tags": ["\u751f\u6210", "facts", "\u89c4\u8303"]}, {"category": "", "categoryclass": "", "imagename": "ec35448b52580fef30c02c3cd178ddde.png", "infoid": 1001344, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7aef\u5230\u7aef\u52a0\u5bc6(E2EE)\u7684\u524d\u63d0\u662f\u5ba2\u6237\u7aef\u5b89\u5168\u53ef\u4fe1\uff0c\u60a8\u7684\u7ec8\u7aef\u8bbe\u5907\u5b89\u5168\u53ef\u4fe1\uff0c\u4f46\u7f51\u7edc\u548c\u670d\u52a1\u5668\u4e0d\u9700\u8981\u53ef\u4fe1\u3002\u60a8\u5df2\u7ecf\u9605\u8bfb\u4e86\u5ba2\u6237\u7aef\u4e2d\u7684\u6240\u6709\u4ee3\u7801\uff0c\u6216\u8005\u60a8\u4fe1\u4efb\u7684\u67d0\u4e2a\u4eba\u5df2\u7ecf\u4e3a\u60a8\u8fd9\u6837\u505a\u4e86\u3002\u4f46\u662f\uff0c\u5728\u5c06\u4ee3\u7801\u52a0\u8f7d\u5230\u60a8\u7684\u624b\u673a\u4e0a--\u5b89\u88c5\u5bc6\u94a5\u5e93\u5e94\u7528\u7a0b\u5e8f--\u5e76\u5f00\u59cb\u4e0e\u60a8\u7684\u670b\u53cb\u804a\u5929\u4e4b\u540e\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u9a8c\u8bc1\u670d\u52a1\u5668\u662f\u5426\u5411\u60a8\u53d1\u9001\u4e86\u6b63\u786e\u7684\u52a0\u5bc6\u5bc6\u94a5\u3002\u56e0\u4e3a\u60a8\u4e0d\u80fd\u6258\u7ba1\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u6240\u4ee5\u5fc5\u987b\u662fKeybase\uff0cInc.\u7684\u670d\u52a1\u5668\u5411\u60a8\u53d1\u9001\u60a8\u670b\u53cb\u7684\u52a0\u5bc6\u5bc6\u94a5\u3002\n\u5bf9\u4e8eE2EE\u8f6f\u4ef6\u6765\u8bf4\uff0c(\u5ba2\u6237\u7aef)\u4ee3\u7801\u662f\u5f00\u653e\u7684\uff0c\u670d\u52a1\u5668\u5411\u60a8\u53d1\u9001\u52a0\u5bc6\u5bc6\u94a5\uff0c\u60a8\u53ef\u4ee5\u5728\u5e26\u5916\u68c0\u67e5\u52a0\u5bc6\u5bc6\u94a5\uff0c\u8fd9\u662fE2EE\u8f6f\u4ef6\u7684\u6807\u51c6\u3002\u5728Signal\u4e2d\u68c0\u67e5\u5b89\u5168\u53f7\u7801\uff0c\u5728Wire\u4e2d\u68c0\u67e5\u8bbe\u5907\u6307\u7eb9\uff0c\u5728Telegram\u4e2d\u68c0\u67e5\u52a0\u5bc6\u5bc6\u94a5\u3002\u5982\u679c\u5b83\u4eec\u5339\u914d\uff0c\u60a8\u5c31\u77e5\u9053(\u57fa\u4e8e\u5f00\u653e\u5ba2\u6237\u7aef\u4ee3\u7801\u548c\u5b83\u4f7f\u7528\u7684\u5bc6\u7801)\u4e2d\u95f4\u6ca1\u6709(Wo)man\u3002\n\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u5171\u4eab\u4e00\u4e2a\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\uff0c\u4ed6\u4eec\u901a\u8fc7\u5c06\u5176\u52a0\u5bc6\u5230\u6bcf\u4e2a\u8bbe\u5907\u7684\u516c\u5171\u52a0\u5bc6\u5bc6\u94a5\u6765\u4f20\u9012\u7ed9\u670d\u52a1\u5668\u3002\n\u597d\u7684\uff0c\u6211\u4eec\u8981\u4e48\u9a8c\u8bc1\u5bf9\u79f0\u5bc6\u94a5(\u5728\u4e24\u90e8\u624b\u673a\u4e0a\u76f8\u540c)\uff0c\u8981\u4e48\u9a8c\u8bc1\u516c\u94a5(\u6211\u5e94\u8be5\u80fd\u591f\u5728\u6211\u7684\u624b\u673a\u4e0a\u663e\u793a\u6211\u7684\u516c\u94a5\uff0c\u6211\u7684\u670b\u53cb\u4f1a\u67e5\u8be2\u4ed6\u4eec\u7684\u624b\u673a\u8ba4\u4e3a\u6211\u7684\u516c\u94a5\u662f\u4ec0\u4e48\uff0c\u8fd9\u5e94\u8be5\u662f\u5339\u914d\u7684)\u3002\n\u5947\u602a\u7684\u662f\uff0c\u6ca1\u6709\u6309\u94ae\u6765\u505a\u8fd9\u4e24\u4ef6\u4e8b\u4e2d\u7684\u4efb\u4f55\u4e00\u4ef6\u3002\u6587\u6863\u91cc\u6ca1\u6709\u63d0\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u6211\u56db\u5904\u770b\u770b\u4e5f\u627e\u4e0d\u5230\u3002\u201c\u3002\n\u6240\u6709\u5bc6\u94a5\u5e93\u8bbe\u5907\u5728\u7b2c\u4e00\u6b21\u63d0\u4f9b\u65f6\u90fd\u4f1a\u53d1\u5e03\u4e00\u4e2acrypto_box\u516c\u94a5\u548c\u4e00\u4e2acrypto_sign\u516c\u94a5\u3002\u8fd9\u4e9b\u5bc6\u94a5\u4f4d\u4e8e\u7528\u6237\u7684\u7b7e\u540d\u94fe\u4e2d[.]\u3002\u804a\u5929\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u662f32\u4e2a\u968f\u673a\u5b57\u8282\u3002\u5b83\u7531\u804a\u5929\u4e2d\u7684\u6bcf\u4e2a\u4eba\u5171\u4eab\uff0c[.]\u3002\u5f53\u65b0\u8bbe\u5907\u9700\u8981\u8be5\u5171\u4eab\u5bc6\u94a5\u65f6\uff0c\u62e5\u6709\u8be5\u5171\u4eab\u5bc6\u94a5\u7684\u53e6\u4e00\u8bbe\u5907\u5c06\u4f7f\u7528\u65b0\u8bbe\u5907\u7684\u516c\u5171CRYPTO_BOX\u5bc6\u94a5\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\uff0c\u7136\u540e\u5c06\u5176\u4e0a\u8f7d\u5230\u5bc6\u94a5\u5e93\u670d\u52a1\u5668\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u6211\u8bfb\u5bf9\u4e86\u8fd9\u4e00\u70b9\uff0c\u5f53\u6211\u7684\u670b\u53cb\u4e0e\u6211\u6253\u5f00\u65b0\u7684\u804a\u5929\u65f6\uff0c\u4ed6\u4eec\u7684\u5ba2\u6237\u7aef\u5c06\u751f\u6210\u5171\u4eab\u5bc6\u94a5\uff0c\u5b83\u5c06\u4ece\u6211\u7684\u7b7e\u540d\u94fe\u5185\u7684crypto_box\u4e2d\u83b7\u53d6\u516c\u94a5\uff0c\u5e76\u4f7f\u7528\u8be5\u516c\u94a5\u52a0\u5bc6\u5171\u4eab\u5bc6\u94a5\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4e0a\u4f20\u5230\u5bc6\u94a5\u5e93\u7684\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u6211\u53ef\u4ee5\u4e0b\u8f7d\u548c\u89e3\u5bc6\u5b83\uff0c\u4ece\u800c\u5efa\u7acb\u5171\u4eab\u5bc6\u94a5\u5e76\u5f00\u59cb\u804a\u5929\u3002\n..\u3002\u4f46\u662f\u8fd9\u4e2a\u7b7e\u540d\u94fe\u662f\u4ece\u54ea\u91cc\u6765\u7684\u5462\uff1f\u5b83\u5fc5\u987b\u4ece\u5bc6\u94a5\u5e93\u670d\u52a1\u5668\u83b7\u53d6\uff0c\u56e0\u6b64\u7531\u4e8e\u65e0\u6cd5\u663e\u793a\u5b83\uff0c\u6211\u5fc5\u987b\u4fe1\u4efb\u670d\u52a1\u5668\u4f1a\u7ed9\u6211\u53d1\u9001\u6b63\u786e\u7684\u5bc6\u94a5\u3002\u5f53\u4ed6\u4eec\u5ba3\u79f0\u6240\u6709\u6d88\u606f\u90fd\u662f\u5b89\u5168\u7684\u3001\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u65f6\uff0c\u8fd9\u53c8\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff1f\u5ba2\u6237\u5076\u5c14\u4e5f\u4f1a\u5728\u804a\u5929\u4e0a\u65b9\u77ed\u6682\u5730\u663e\u793a\u4e00\u4e2a\u6a2a\u5e45\uff0c\u4e0a\u9762\u5199\u7740\u201c\u7aef\u5230\u7aef\u52a0\u5bc6&#34\uff1b\u201d\u3002\n\u6709\u5173\u4e8e\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u8fdb\u884c\u9a8c\u8bc1\u7684\u6587\u6863\uff0c\u4f46\u662f\u9664\u4e86\u6307\u4ee4\u88ab\u7834\u574f\u4e4b\u5916(root_desc\u4e2d\u6ca1\u6709sigs\u5b57\u6bb5\uff0c\u8fd9\u662froot.json\uff1fhash=X\u7684\u7ed3\u679c)\uff0c\u8fd9\u4e0d\u662f\u6211\u53ef\u4ee5\u5728\u6211\u7684\u624b\u673a\u4e0a\u505a\u7684\u4e8b\u60c5\u3002\u6076\u610f\u670d\u52a1\u5668\u53ef\u4ee5\u5411\u6211\u7684\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u8fd4\u56de\u6b63\u786e\u7b54\u6848\uff0c\u540c\u65f6\u544a\u8bc9\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7b7e\u540d\u94fe\u5305\u542b\u5b8c\u5168\u4e0d\u540c\u7684\u5bc6\u94a5(\u5373\u6076\u610f\u884c\u4e3a\u8005\u7528\u6765\u6267\u884cMITM\u7684\u5bc6\u94a5)\u3002\n\u5f53\u4e0e\u5176\u4ed6\u4eba\u8c08\u8bba\u5b83\u65f6\uff0c\u4ed6\u4eec\u4f1a\u63d0\u5230\u533a\u5757\u94fe\u8fd9\u4ef6\u4e8b\uff0c\u56e0\u4e3a\u5b83\u662f\u5b89\u5168\u7684\uff0c\u800c\u4e0d\u9700\u8981\u81ea\u5df1\u9a8c\u8bc1\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u5bc6\u94a5\u5e93\u804a\u5929\u662f\u5426\u9700\u8981\u624b\u52a8\u9a8c\u8bc1\u4efb\u4f55\u7c7b\u578b\u7684\u5bc6\u94a5\u624d\u80fd\u8fdb\u884c\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u6216\u8005\u533a\u5757\u94fe\u6570\u636e(\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u5e55\u540e\u9759\u9ed8\u9a8c\u8bc1)\u662f\u5426\u4ee5\u67d0\u79cd\u65b9\u5f0f\u963b\u6b62\u4e86\u6211\u4eec\u4e0d\u5f97\u4e0d\u6bd4\u8f83\u6307\u7eb9/\u5bc6\u94a5/\u56fe\u7ae0\u94fe\uff1f\n\u5982\u679c\u6211\u4eec\u786e\u5b9e\u9700\u8981\u6bd4\u8f83\u6307\u7eb9/\u5bc6\u94a5/\u56fe\u7ae0\u94fe\uff0c\u90a3\u4e48\u5982\u4f55\u5728\u5bc6\u94a5\u5e93\u5e94\u7528\u7a0b\u5e8f\u4e2d\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f\n\u6700\u65b0\u6d88\u606f\uff1a\u4e00\u4f4d\u670b\u53cb\u5c06GitHub\u7684\u95ee\u9898\u8054\u7cfb\u4e86\u8d77\u6765\uff0c\u57fa\u672c\u4e0a\u662f\u8bf4\u6574\u4e2a\u533a\u5757\u94fe\u7684\u4e8b\u60c5\u8fd8\u4e0d\u662f\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u505a\u7684\u3002\u81f3\u4e8eSPV\u662f\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u5b9e\u73b0\u3002\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0c\u8fd9\u5c31\u6392\u9664\u4e86\u7b2c\u4e00\u4e2a\u9009\u62e9\u3002\n\u7531\u4e8e\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u4e5f\u4e0d\u5141\u8bb8\u5b9e\u73b0\u7b2c\u4e8c\u4e2a\u9009\u9879(\u6bd4\u8f83\u952e)\uff0c\u6211\u731c\u8fd9\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\u76ee\u524d\u5728Keybase\u4e2d\u6ca1\u6709\u5b9e\u73b0E2EE\uff1f\u653b\u51fb\u5f88\u96be\u6210\u529f\uff1a\u5373\u4f7f\u662f\u6076\u610f\u670d\u52a1\u5668(\u975e\u5e38\u7406\u60f3\u7684\u4f4d\u7f6e)\u4e5f\u5fc5\u987b\u4ece\u4e00\u5f00\u59cb\u5c31\u653b\u51fbMITM\uff0c\u56e0\u6b64\u4ed6\u4eec\u5fc5\u987b\u4e8b\u5148\u77e5\u9053\u76ee\u6807\u662f\u8c01\u3002\u4f46\u6211\u4eec\u786e\u5b9e\u76f8\u4fe1\u670d\u52a1\u5668\u662f\u8bda\u5b9e\u7684\uff0c\u81f3\u5c11\u5728\u67d0\u4e9b\u65f6\u5019\u662f\u8fd9\u6837\u3002\u6216\u8005\uff0c\u6211\u662f\u5426\u4ecd\u7136\u7f3a\u5c11\u67d0\u79cd\u65b9\u6cd5\u6765\u5b9e\u73b0\u771f\u6b63\u7684\u7aef\u5230\u7aef\u52a0\u5bc6\uff1f\n\u66f4\u65b02\uff1a\u9ed1\u5ba2\u65b0\u95fb\u63d0\u5230\uff0c\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u81ea\u5df1\u68c0\u67e5\u7b2c\u4e09\u65b9\u7684\u8bc1\u636e\u3002\u8fd9\u5e76\u4e0d\u5b8c\u5168\u662f\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u610f\u601d\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\uff0c\u4f46\u5c3d\u7ba1\u5982\u6b64\uff0c\u5fc5\u987b\u62e5\u6709\u4e24\u5bb6\u6216\u66f4\u591a\u516c\u53f8\u7684\u670d\u52a1\u5668\uff0c\u624d\u80fd\u7a83\u53d6\u67d0\u4eba\u7684\u5bc6\u94a5(\u53e6\u5916\u8fd8\u6709\u8c46\u8150\u5bc6\u94a5)\uff0c\u8fd9\u5e94\u8be5\u4f1a\u7ed9\u4eba\u76f8\u5f53\u5927\u7684\u4fe1\u5fc3\u3002\u7136\u800c\uff0c\u5f53\u68c0\u67e5Wireshark\u662f\u5426\u771f\u7684\u8fd9\u6837\u505a\u65f6(\u5411Twitter API\u8bf7\u6c42\u8bc1\u660e\u5b57\u7b26\u4e32\uff0c\u5e76\u4f7f\u7528\u5b83\u4ece\u5bc6\u94a5\u5e93\u6536\u5230\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d)\uff0c\u6211\u624b\u673a\u4e0a\u7684\u5bc6\u94a5\u5e93\u6839\u672c\u6ca1\u6709\u8054\u7cfbTwitter\u3002(\u7136\u800c\uff0c\u5b83\u786e\u5b9e\u81ea\u8c6a\u5730\u5ba3\u5e03\uff0c\u65b0\u7684\u804a\u5929\u662f\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u3002)\u3002\n\u5728\u6570\u636e\u5305\u6355\u83b7\u4e4b\u524d\uff0c\u4e0e\u5176\u5f00\u59cb\u804a\u5929\u7684\u7528\u6237\u540d\u4ece\u672a\u952e\u5165\u6d4b\u8bd5\u7cfb\u7edf(\u5f00\u59cb\u804a\u5929\u7684\u90a3\u4e2a\u7528\u6237\u540d)\u3002\n\u8fd9\u4e24\u4e2a\u8d26\u6237\u4e4b\u524d\u4ece\u672a\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\u8fdb\u884c\u8fc7\u4efb\u4f55\u5f62\u5f0f\u7684\u8054\u7cfb\u3002\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u4e92\u76f8\u6548\u4eff\u3002\u5728\u804a\u5929\u5efa\u7acb\u4e4b\u524d\uff0c\u5bf9\u65b9\u751a\u81f3\u4e0d\u77e5\u9053\u6211\u7684\u7528\u6237\u540d\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e5f\u4e0d\u53ef\u80fd\u89e6\u53d1\u4efb\u4f55\u4e8b\u60c5\u3002\n\u6570\u636e\u5305\u6355\u83b7\u5728\u7528\u6237\u540d\u8f93\u5165\u5230\u6d4b\u8bd5\u8bbe\u5907\u7684\u641c\u7d22\u5b57\u6bb5\u4e4b\u524d\u5f00\u59cb\uff0c\u53ea\u6709\u5728\u5bc6\u94a5\u5e93\u5b8c\u5168\u5efa\u7acb\u804a\u5929\u5e76\u58f0\u79f0\u5b83\u662f\u7aef\u5230\u7aef\u52a0\u5bc6\u4e4b\u540e\u624d\u7ed3\u675f\u3002\nTwitter\u4f3c\u4e4e\u5c06\u5176\u6240\u6709\u670d\u52a1\u90fd\u6258\u7ba1\u5728\u81ea\u5df1\u7684IP\u8303\u56f4\u5185\uff0c\u6d4b\u8bd5\u7cfb\u7edf\u5728\u804a\u5929\u8fc7\u7a0b\u4e2d\u4e0e\u4e4b\u4ea4\u8c08\u7684IP\u90fd\u4e0d\u5728\u8be5\u8303\u56f4\u5185\u3002\u5982\u679c\u6b64\u5047\u8bbe\u4e3a\u5047\uff0c\u5e76\u4e14\u5bc6\u94a5\u5e93\u5ba2\u6237\u7aef\u4f7f\u7528104.244.40.0/21\u4e4b\u5916\u7684\u7aef\u70b9\uff0c\u8bf7\u53d1\u8868\u8bc4\u8bba\u3002\u6211\u68c0\u67e5\u4e86\u6240\u6709\u7684IP\u5730\u5740\uff0c\u90fd\u4e0d\u592a\u53ef\u80fd\u662fTwitter\u7684\u5e4c\u5b50(\u9ed1\u5ba2\u65b0\u95fb\u7684\u7ec6\u8282)\uff0c\u4f46\u6211\u60f3\u77e5\u9053Twitter\u662f\u5426\u4f1a\u5728\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(Amazon Web Services)\u6216\u5176\u4ed6\u7f51\u7ad9\u4e0a\u53d1\u5e03\u63a8\u6587\u3002\n\u79fb\u52a8\u5bc6\u94a5\u5e93\u5ba2\u6237\u7aef\u7b80\u5355\u5730\u4ece\u5bc6\u94a5\u5e93\u4e0a\u5b58\u5728\u7684\u6240\u6709\u7528\u6237\u4e0b\u8f7d\u4e86\u6240\u6709\u7b7e\u540d\u94fe\uff0c\u5e76\u4e14\u5728\u5f00\u59cb\u6570\u636e\u5305\u6355\u83b7\u4e4b\u524d\u68c0\u67e5\u4e86\u4ed6\u4eec\u7684\u6240\u6709\u8bc1\u636e\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53ef\u4fe1\u7684\u3002\u8fd9\u662f\u6211\u552f\u4e00\u80fd\u60f3\u5230\u5982\u4f55\u5728\u6570\u636e\u5305\u6355\u83b7\u4e4b\u524d\u9a8c\u8bc1\u7b2c\u4e09\u65b9\u6258\u7ba1\u7684\u8bc1\u636e\u7684\u65b9\u6cd5\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u901a\u8fc7\u5bc6\u94a5\u5e93\u8bbf\u95ee\u8fdc\u7a0b\u65b9\u7684\u516c\u94a5\u5982\u6b64\u56f0\u96be\u3002\u4f7f\u7528EncryptedSend(www.cryptedsend.com)\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8bbf\u95ee\u8fdc\u7a0b\u65b9\u7684\u516c\u94a5\u3002-11mti2935\u3002\n\u636e\u6211\u6240\u77e5\uff0c\u7b54\u6848\u662f\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u50cf\u4f60\u63d0\u5230\u7684\u90a3\u6837\u81ea\u5df1\u68c0\u67e5\u7b2c\u4e09\u65b9\u7684\u8bc1\u660e\uff0c\u8fd9\u5c31\u662f\u5141\u8bb8\u4f60\u4fe1\u4efb\u63d0\u4f9b\u7684\u5bc6\u94a5\u7684\u539f\u56e0\u3002\u7136\u800c\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u7684\u60c5\u51b5\u662f\uff0c\u5b83\u53ea\u9a8c\u8bc1\u4e00\u6b21\u6216\u5b9a\u671f\u9a8c\u8bc1-\u5982\u679c\u5b83\u5df2\u7ecf\u68c0\u67e5\u4e86\u60a8\u8bbe\u5907\u4e0a\u7684\u8bc1\u660e\uff0c\u5219\u4e0d\u4f1a\u5728\u6bcf\u4e2a\u65b0\u7684\u804a\u5929\u4f1a\u8bdd\u4e2d\u518d\u6b21\u68c0\u67e5\u3002-CristianTM\u3002\n@CristianTM\u6211\u786e\u4fdd\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u67e5\u8fc7\u548c\u6211\u4e00\u8d77\u5728\u624b\u673a\u4e0a\u6d4b\u8bd5\u8fc7\u7684\u7528\u6237\u540d\uff0c\u5728\u58f0\u79f0\u804a\u5929\u662f\u5b89\u5168\u7684\u4e4b\u524d\uff0c\u5b83\u80af\u5b9a\u6ca1\u6709\u68c0\u67e5\u8fc7\u3002\u8bf7\u6ce8\u610f\uff0c\u9ed1\u5ba2\u65b0\u95fb\u5e16\u5b50\u4e2d\u8bb0\u5f55\u4e86\u8fd9\u4e00\u70b9\u3002-*LUC\u3002\n@CristianTM\u4f60\u770b\u5230\u5e16\u5b50\u91cc\u7684\u7f16\u8f91\u4e86\u5417\uff1f\u6211\u60f3\u8fd9\u5e94\u8be5\u80fd\u6f84\u6e05\u4f60\u7684\u95ee\u9898\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u544a\u8bc9\u6211\u3002-*LUC\n\u770b\u8d77\u6765\u771f\u7684\u5f88\u5947\u602a\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4e3a\u5f00\u53d1\u8005\u6216\u67e5\u770b\u6e90\u4ee3\u7801\u7684\u6848\u4f8b\u3002\u4f46\u662f\uff0c\u5982\u679c\u4ed6\u4eec\u4f9d\u8d56\u4e8e\u670d\u52a1\u5668\u7aef\u7684\u6821\u6837\u68c0\u67e5\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u5b89\u5168\u7684\u671f\u671b\u5728\u8fd9\u91cc\u4f3c\u4e4e\u5c31\u88ab\u6253\u7834\u4e86\u3002-CristianTM\u3002\n\u5f53\u60a8\u7b2c\u4e00\u6b21\u4e0e\u67d0\u4eba\u4ea4\u8c08\u65f6\uff0c\u5b83\u4f1a\u4ece\u5bc6\u94a5\u5e93\u670d\u52a1\u5668\u4e0b\u8f7d\u4ed6\u4eec\u7684\u52a0\u5bc6\u5bc6\u94a5\uff0c\u60a8\u5fc5\u987b\u4fe1\u4efb\u670d\u52a1\u5668\u4f1a\u5411\u60a8\u53d1\u9001\u6b63\u786e\u7684\u5bc6\u94a5\u3002\u5b83\u8fd8\u53ef\u4ee5\u5411\u60a8\u53d1\u9001\u4e00\u4e2a\u5047\u5bc6\u94a5\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u6076\u610f\u5bc6\u94a5\u6765\u52a0\u5bc6\u60a8\u7684\u6d88\u606f\u3002\u6ca1\u6709\u529e\u6cd5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\n\u5728\u5bc6\u94a5\u5e93\u7684\u60c5\u51b5\u4e0b\uff0c\u516c\u5e73\u5730\u8bf4\uff0c\u653b\u51fb\u5f88\u96be\u6210\u529f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u7684\u68c0\u67e5\u53ef\u7528\uff0c\u4f46\u5b83\u4e0d\u662f\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u9664\u975e\u4f60\u60f3\u6269\u5927\u5b9a\u4e49\uff0c\u4ee5\u5305\u62ec\u4fe1\u4efb\u670d\u52a1\u5668\u7684\u5bc6\u94a5\u4ea4\u6362(\u518d\u52a0\u4e0a\u4e00\u70b9\u4e00\u53a2\u60c5\u613f\u7684\u60f3\u6cd5\uff0c\u751a\u81f3\u6709\u5c11\u6570\u4eba\u66fe\u7ecf\u68c0\u67e5Merkle\u6839\u5305\u542b\u4ed6\u4eec\u7684\u5bc6\u94a5\uff0c\u5c3d\u7ba1\u5173\u4e8e\u5982\u4f55\u68c0\u67e5\u7684\u8bf4\u660e\u88ab\u6253\u7834\uff0c\u5982\u95ee\u9898\u6240\u8ff0)\u3002\n\u5982\u679c\u8981\u9a8c\u8bc1\u5bc6\u94a5\u5e93\u670d\u52a1\u5668\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u7c7b\u578b\u7684\u653b\u51fb\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u547d\u4ee4\u884c\uff1b\u8fd9\u5728\u5b98\u65b9\u5e94\u7528\u7a0b\u5e8f\u4e2d\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6821\u6837(\u63a8\u7279\u6821\u6837\u3001\u7f51\u7ad9\u6821\u6837\u7b49)\u3002\u4f3c\u4e4e\u5de5\u4f5c\u4e0d\u53ef\u9760(\u5982\u95ee\u9898\u4e2d\u6240\u8ff0)\uff0c\u4f46\u5373\u4f7f\u5b83\u4eec\u5de5\u4f5c\u53ef\u9760\uff0cKeybase\u4e5f\u4f1a\u5c06\u804a\u5929\u6807\u8bb0\u4e3aE2EE\uff0c\u800c\u4e0d\u9700\u8981\u5728\u60a8\u7684\u5e10\u6237\u4e2d\u63d0\u4f9b\u4efb\u4f55\u7b2c\u4e09\u65b9\u8bc1\u636e\u3002\u5982\u679c\u4e0d\u7ed9\u6211\u4e00\u4e2a\u7406\u7531\uff0c\u6211\u60f3\u6211\u5988\u5988\u4e0d\u4f1a\u52a0\u8bc1\u636e\u7684(\u4e5f\u8bb8\u5373\u4f7f\u5230\u90a3\u65f6\u4e5f\u4e0d\u4f1a\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5979\u4e0d\u5e94\u8be5\u88ab\u8bef\u5bfc\u53bb\u76f8\u4fe1\u5b83\u6bd4\u5b83\u5b9e\u9645\u4e0a\u66f4\u5b89\u5168)\u3002\u6240\u5e94\u7528\u7684\u5bc6\u94a5\u5e93\u673a\u5236\u901a\u5e38\u79f0\u4e3a\u8c46\u8150\uff1a\u9996\u6b21\u4f7f\u7528\u65f6\u4fe1\u4efb\u3002\u5b83\u53ea\u4e0b\u8f7d\u4e00\u6b21\u5bc6\u94a5\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u6539\uff0c\u5b83\u4f1a\u8ba4\u4e3a\u4e00\u5207\u6b63\u5e38\u3002\n\u6211\u540c\u610f\u3002\u597d\u5728\u4ed6\u4eec\u82b1\u4e8610\u4e07\u591a\u7f8e\u5143\u7ed9NCC\u96c6\u56e2\u7684\u5b89\u5168\u548c\u5bc6\u7801\u5b66\u4e13\u5bb6\uff0c\u8ba9\u4ed6\u4eec\u8fdb\u884c\u4e00\u6b21\u5ba1\u8ba1.\u3002\u5728\u4ed6\u4eec\u7684\u62a5\u544a\u4e2d\u4ece\u6765\u6ca1\u6709\u63d0\u5230\u8fc7\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f(\u6211\u8fd8\u7ed9\u5176\u4e2d\u4e00\u540d\u5ba1\u8ba1\u5e08\u53d1\u4e86\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0a\u9762\u6709\u8fd9\u4e2a\u95ee\u9898\u7684\u94fe\u63a5\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u6536\u5230\u8fc7\u786e\u8ba4\u6536\u5230\u7684\u90ae\u4ef6\u3002)\u3002\u5ba1\u8ba1\u5e08\u786e\u5b9e\u53d1\u73b0\u4e86\u5176\u4ed6\u95ee\u9898\uff1a\n[NCC\u53d1\u73b0\u7684\u8fd9\u4e24\u4e2a]\u6f0f\u6d1e\u53ea\u6709\u5728\u6211\u4eec\u7684\u670d\u52a1\u5668\u6076\u610f\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u88ab\u5229\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u5411\u4f60\u4fdd\u8bc1\uff0c\u4ed6\u4eec\u4e0d\u662f\uff0c\u4f46\u4f60\u6ca1\u6709\u7406\u7531\u76f8\u4fe1\u6211\u4eec\u3002\u8fd9\u624d\u662f\u5173\u952e\u6240\u5728\uff01\n\u53ea\u662f\u6211\u4eec\u5fc5\u987b\u76f8\u4fe1\u4ed6\u4eec\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u81ea\u5df1\u68c0\u67e5\u3002\n\u4e0d\u8fc7\uff0c\u4e5f\u8bb8\u6211\u6ca1\u6709\u7ed9\u4e88Keybase\u8db3\u591f\u7684\u4fe1\u4efb\u3002\u6211\u5f15\u7528\u7684\u535a\u5ba2\u6b63\u786e\u5730\u6307\u8d23\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u53ea\u63a5\u53d7\u548c\u4f7f\u7528\u65b0\u7684(\u53ef\u80fd\u662f\u6076\u610f\u7684)\u5bc6\u94a5\uff0c\u800c\u4e0d\u9700\u8981\u7528\u6237\u8f93\u5165\u3002WhatsApp\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff1a\u4f60\u6700\u591a\u53ea\u80fd\u6253\u5f00\u8b66\u544a\uff0c\u4f46WhatsApp\u5ba2\u6237\u7aef\u4ecd\u4f1a\u5f88\u9ad8\u5174\u5730\u53c2\u4e0e\u5207\u6362\uff0c\u5728\u4f60\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u653b\u51fb\u8005\u4f1a\u9a6c\u4e0a\u5411\u4f60\u53d1\u9001\u65b0\u7684\u52a0\u5bc6\u5bc6\u94a5\uff0c\u8ba9\u4ed6\u4eec\u77e5\u9053\u81f3\u5c11\u4e00\u4e2a\u660e\u6587\uff0c\u5373\u4f7f\u4f60\u975e\u5e38\u5c0f\u5fc3\uff0c\u53ea\u5728\u4f60\u770b\u5230\u5bc6\u94a5\u6ca1\u6709\u6539\u53d8\u7684\u65f6\u5019\u624d\u53d1\u9001\u6d88\u606f\u3002\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u663e\u793a\u65b0\u7684\u5bc6\u94a5\u901a\u77e5\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u673a\u4f1a\u6027\u52a0\u5bc6\u7684\u3002\u6211\u8ba4\u8bc6\u7684\u8bb8\u591a\u6280\u672f\u4eba\u5458\u4f3c\u4e4e\u90fd\u4fe1\u4efb\u5b83\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4fe1\u53f7\u534f\u8bae\uff0c\u6240\u4ee5\u5b83\u4e00\u5b9a\u5f88\u597d\u3002\u6211\u5e0c\u671b\u5bc6\u94a5\u5e93\u5e94\u7528\u7a0b\u5e8f\u80fd\u6b63\u786e\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u867d\u7136\u518d\u6b21\u68c0\u67e5\u4e00\u4e0b\u673a\u5236\u4e2d\u662f\u5426\u6ca1\u6709\u4efb\u4f55\u7f3a\u9677\u53ef\u80fd\u662f\u4ef6\u597d\u4e8b\uff0c\u4f46\u6211\u9884\u8ba1\u5982\u679c\u6709\u7f3a\u9677\uff0c\u5ba1\u8ba1\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5Keybase\u53ef\u80fd\u4f1a\u505a\u5f97\u5f88\u597d\u3002\n\u4f46\u662f\u8fd9\u4e2a\u5177\u4f53\u7684\u95ee\u9898\u73b0\u5728\u5df2\u7ecf\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u56e0\u4e3aKeybase\u5df2\u7ecf\u88abZoom\u5173\u95ed\u4e86\u3002\u6211\u5728\u7b49\u5f85Keybase\u8981\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5e76\u53d1\u5e03\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7b54\u6848\uff0c\u8981\u4e48\u7b49\u5f85\u4e00\u4e2a\u72ec\u7acb\u7684\u4eba\u91cd\u65b0\u505a\u6211\u7684\u5206\u6790\u5e76\u7528\u4ed6\u4eec\u7684\u7ed3\u8bba\u56de\u7b54\uff0c\u6216\u8005\u7b49\u5f85Keybase\u627f\u8ba4\u4ed6\u4eec\u6b3a\u9a97\u4e86\u6574\u4e2a\u5b89\u5168\u793e\u533a\u3002\u4e00\u4e2a\u53eb\u8d3e\u91cc\u5fb7\u7684\u597d\u5fc3\u7684\u964c\u751f\u4eba\u5c31\u8fd9\u4e2a\u95ee\u9898\u5f00\u4e86\u8d4f\u91d1\uff0c\u6211\u628a\u5b83\u8d34\u5230\u4e86\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u4ee5\u5438\u5f15\u7b54\u6848\uff0c\u5e0c\u671b\u4e5f\u6709\u4e00\u4e2a\u4eba\u5c1d\u8bd5\u8fc7\u5173\u952e\u7684\u9a8c\u8bc1\u3002\u4f46\u73b0\u5728\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4ece\u66f4\u5e7f\u6cdb\u7684\u89d2\u5ea6\u6765\u770b\u8fd9\u4e2a\u95ee\u9898\u80cc\u540e\u7684\u539f\u56e0\u3002\n\u7528\u6237\u5e94\u8be5\u8981\u6c42\u6709\u53ef\u9075\u5faa\u7684\u8bf4\u660e\u3002\u6211\u4eec\u5e94\u8be5\u8be2\u95eeKeybase\uff0c\u73b0\u5728\u662fZoom\uff0c\u4ee5\u53ca\u4efb\u4f55\u63d0\u51fa\u5f3a\u70c8\u5b89\u5168\u58f0\u660e\u7684\u4eba\u3002\u4ed6\u4eec\u8ba4\u9886\u4e86\u5417\uff1f\u60a8\u5e94\u8be5\u5e0c\u671b\u770b\u5230\u53ef\u4ee5\u9075\u5faa\u7684\u6b65\u9aa4\u6765\u9a8c\u8bc1\u5b83\u3002\u56e0\u4e3a\u60a8\u4fe1\u4efb\u5df2\u53d1\u5e03\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u8fd9\u4e9b\u6307\u4ee4\u4e0d\u5e94\u8be5\u6d89\u53ca\u4efb\u4f55\u547d\u4ee4\u884c\u7f16\u7801\u5de5\u4f5c\uff0c\u5e76\u4e14\u7edd\u5bf9\u4e0d\u4f1a\u6709\u8bf8\u5982\u9a8c\u8bc1\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u7684\u5bc6\u94a5\u548c\u5e0c\u671b\u670d\u52a1\u5668\u5c06\u76f8\u540c\u7684\u5bc6\u94a5\u53d1\u9001\u5230\u60a8\u7684\u624b\u673a\u8fd9\u6837\u7684\u7a7a\u767d\u3002\n\u4e3e\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u6211\u8ba8\u538c\u8fd9\u4e48\u8bf4\uff0cTelegram\u7684\u547c\u53eb\u529f\u80fd\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e86\u56db\u4e2a\u8868\u60c5\u7b26\u53f7\uff0c\u7528\u4e8e\u5bc6\u94a5\u9a8c\u8bc1\u3002\u89c1\u9b3c\uff0c\u8fd9\u5f88\u6709\u8da3\uff1a\u5728\u4e0e\u6211\u5973\u670b\u53cb\u7684\u901a\u8bdd\u4e2d\uff0c\u6211\u6709\u65f6\u53d1\u73b0\u6211\u4eec\u5728\u968f\u673a\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6bd4\u8f83\u8868\u60c5\u7b26\u53f7\u5e93\u7684\u5dee\u5f02\uff0c\u6216\u8005\u53d6\u7b11\u5176\u4e2d\u4e00\u4e2a\u56fe\u6807\u3002\u6211\u8fd8\u6ca1\u6709\u7814\u7a76\u8fc7\u5b83\u7684\u5b89\u5168\u6027\uff0c\u4e5f\u8bb8\u4f60\u9700\u8981\u4e94\u4e2a\u8868\u60c5\u7b26\u53f7\u624d\u80fd\u8fbe\u5230128\u4f4d\u4ee5\u4e0a\u7684\u71b5\uff0c\u4f46\u4ece\u7528\u6237\u4f53\u9a8c\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002Matrix\u5bf9\u8c03\u7528\u505a\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4f46(\u76ee\u524d\u8fd8\u6ca1\u6709)\u3002\n\u9ed1\u5ba2\u65b0\u95fb(Hacker News)\u3001Reddit\u3001PrivacyTools(Keybase[\u63d0\u4f9b]E2EE)\u4e0a\u7684\u6280\u672f\u793e\u533a\uff0c\u751a\u81f3\u8fde\u5ba1\u8ba1\u4eba\u5458\u90fd\u5ffd\u89c6\u4e86\u8fd9\u4e2a\u7eaf\u7cb9\u7684\u5b9e\u9645\u95ee\u9898(\u603b\u7684\u6765\u8bf4\uff0c\u6211\u76f8\u4fe1\u4ed6\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\uff0c\u5728\u50cfKeybase\u6216Zoom\u8fd9\u6837\u590d\u6742\u7684\u9879\u76ee\u4e2d\uff0c\u6ca1\u6709\u4e00\u9879\u5ba1\u8ba1\u662f\u771f\u6b63\u5b8c\u6574\u7684)\u3002\u5f53\u6211\u95ee\u95ee\u9898\u65f6\uff0c\u4eba\u4eec\u90fd\u5f88\u654c\u89c6\u6211\uff0c\u4ee5\u4e3a\u6211\u662f\u4e00\u4e2a\u65b0\u624b\uff0c\u4e0d\u4f1a\u8bfb\u6587\u6863\uff0c\u4e0d\u4f1a\u5f04\u6e05\u695a\u9a8c\u8bc1\u662f\u5982\u4f55\u8fdb\u884c\u7684\uff0c\u800c\u4ed6\u4eec\u81ea\u5df1\u4ece\u6765\u6ca1\u6709\u771f\u6b63\u5c1d\u8bd5\u8fc7\u3002\u4fdd\u6301\u66f4\u591a\u7684\u597d\u5947\u5fc3\u3002\u5f53\u8c03\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u65f6\uff0c\u5bc6\u94a5\u9a8c\u8bc1\u4e0d\u5e94\u8be5\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u6700\u7ec8\u7528\u6237\u5fc5\u987b\u80fd\u591f\u9a8c\u8bc1\u5b83\u3002\u867d\u7136\u6211\u5988\u5988\u53ef\u80fd\u9700\u8981\u4fe1\u4efb\u67d0\u4e2a\u4eba\u6765\u68c0\u67e5\u4ee3\u7801\uff0c\u4f46\u6211(\u6216\u8005\u50cfF-Droid\u8fd9\u6837\u7684\u9879\u76ee)\u53ef\u4ee5\u72ec\u7acb\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u5c06\u5176\u4ea4\u7ed9\u5979\u3002\u4f46\u662f\uff0c\u5982\u679c\u5979\u5e0c\u671b\u8fd9\u6837\u505a\uff0c\u5979\u9700\u8981\u80fd\u591f\u68c0\u67e5\u52a0\u5bc6\u5bc6\u94a5\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5373\u4f7f\u662f\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u4e5f\u5f88\u96be\u7834\u89e3\u597d\u7684\u5bc6\u7801\u5b66\uff0c\u5e76\u79f0\u8d5e\u5bc6\u94a5\u5e93\u5efa\u7acb\u4e86\u597d\u7684\u5bc6\u7801\u5b66\uff0c\u4f46\u653b\u51fb\u8005\u901a\u8fc7\u4ea4\u6362\u670d\u52a1\u5668\u54cd\u5e94\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u95ee\u9898\u3002\n\u70b9\u51fb\u201c\u53d1\u5e03\u60a8\u7684\u7b54\u6848\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u3001\u9690\u79c1\u653f\u7b56\u548cCookie\u653f\u7b56\u3002\n\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u7b54\u6848\u5417\uff1f\u6d4f\u89c8\u6807\u8bb0\u7684\u5176\u4ed6\u95ee\u9898\u6216\u63d0\u51fa\u60a8\u81ea\u5df1\u7684\u95ee\u9898\u3002", "note_en": "The premise of end-to-end encryption (E2EE) is that the client is secure and trustworthy, your end devices is secure and trustworthy, but the network and server need not be trusted. You&#39;ve read all the code in the client, or someone you trust has done so for you. But after loading the code onto your phone -- installing the Keybase app -- and starting a chat with your friend, you still need to verify that the server sent you the right encryption key. Since you can&#39;t host your own server, it has to be the Keybase, Inc&#39;s server that sends you the encryption key of your friend.\n It&#39;s pretty standard for E2EE software that the (client) code is open, the server sends you the encryption key, and you can check the encryption keys out of band. In Signal you check the safety number, in Wire you check the device fingerprints, and in Telegram you check the encryption key. If they match, you know (based on the open client code and the cryptography it uses) that there is no (wo)man in the middle.\n  Alice and Bob share a symmetric encryption key, which they pass through the server by encrypting it to each of their devices&#39; public encryption keys.\n Okay, so either we verify the symmetric key (identical on both phones), or we verify the public key (I should be able to display mine on my phone, and my friend will call up what their phone thinks my public key is, and that should match).\n The weird thing is that there is no button to do either of this. The documentation doesn&#39;t mention any and I can&#39;t find it when looking around.\n  All Keybase devices publish a  crypto_box public key and a  crypto_sign public key when they&#39;re first provisioned. Those keys live in the user&#39;s signature chain [...] A chat symmetric encryption key is 32 random bytes. It&#39;s shared by everyone in the chat, [...] When a new device needs this shared key, another device that has it will encrypt it with the new device&#39;s public  crypto_box key and then upload it to the Keybase server.\n So if I&#39;m reading this right, when my friend opens a new chat with me, their client generates the shared secret, it will take the public key from the  crypto_box inside my signature chain and encrypt the shared secret with that public key, and upload the result to Keybase&#39;s server so that I can download and decrypt it, thereby establishing the shared secret and starting the chat.\n ... but where does that signature chain come from? This has to be fetched from Keybase servers, so since there is no way to display it, I have to trust the server to send me the right key. How does that make sense when they  claim &#34;all messages are secure, end-to-end encrypted&#34;? The client also occasionally and briefly displays a banner above the chat saying &#34;end-to-end encrypted&#34;.\n There is documentation about  how to do the verification step by step, but aside from that the instructions are broken (there is no  sigs field in  root_desc, the result of  root.json?hash=X), this is not something I can do on my phone. A malicious server could return the correct answers to my command line client while telling the mobile app that the signature chain contains an entirely different key (namely the one the malicious actor uses to perform the MitM).\n When talking about it to others, they mention this blockchain thing as the reason why it&#39;s secure without needing to verify anything yourself, but I can&#39;t figure out how it works.\n Do Keybase chats require any kind of key to be manually verified for end-to-end encryption, or does the blockchain data (which the app could verify silently under the hood) somehow prevent us from having to compare fingerprints/keys/sigchains?\n If we do need to compare fingerprints/keys/sigchains, how can that be done in the Keybase app?\n Update: A friend linked  this GitHub issue, where it is basically said that the whole blockchain thing isn&#39;t yet done by the app. Leaving in the middle whether (something like)  SPV is a good solution, it is currently not implemented. That strikes out the first option if I&#39;m not mistaken.\n Since the app also seems not to allow fulfilling the second option (comparing keys), I guess this concludes that there is no E2EE currently implemented in Keybase? An attack is hard to pull off: even a malicious server (very ideal position) would have to MitM from the start, so they have to have prior knowledge of whom to target. But we do  trust the server to be honest at least some of the time. Or am I still missing some way that makes this true end to end encryption?\n Update 2: It was  mentioned on hacker news that the app should check third party proofs by itself. This is not exactly what end to end encryption means since it still relies on third parties, but nevertheless, having to own 2 or more companies&#39; servers before being able to MitM someone&#39;s keys (which are additionally TOFU&#39;d) should give quite some confidence. However, when checking in Wireshark whether it actually does this (ask the Twitter API for the proof string and verify the signature with the the public key it received from Keybase), Keybase on my phone did not contact Twitter at all. (It did, however, proudly proclaim that the new chat was end to end encrypted.)\n  The username with whom a chat was started was never typed into the test system (the one that started the chat) prior to the packet capture.\n The two accounts never had any sort of contact before, on any device. They also don&#39;t follow each other. Until the chat was established, the other party did not even know my username, so they could not have triggered anything either.\n The packet capture started before the username was typed into the search field on the test device and ended only after Keybase completely established the chat and claimed it was end to end encrypted.\n Twitter seems to host all its services on its own IP range, and none of the IPs the test system talked to during chat establishment fell inside that range. If this assumption is false and the Keybase client uses endpoints outside of  104.244.40.0/21, please comment. I checked all IPs and all are implausible to be a front for Twitter (details on hacker news), but I would be interested to know if Twitter publishes tweets on Amazon Web Services&#39; Simple Storage Service or something.\n It is deemed implausible for the mobile Keybase client to simply have downloaded all signature chains from all users that exist on Keybase and to have checked all their proofs prior to starting the packet capture. This is the only way I can think of how the third party hosted proof could have been verified prior to the packet capture.\n  It&#39;s surprising that it&#39;s this difficult to access the remote party&#39;s public keys through Keybase. With EncryptedSend (www.encryptedsend.com) the remote party&#39;s public key is readily accessible.\r \r\u2013\u00a0 mti2935\n  The answer, as far as I understand, is that the app should check third party proofs by itself as you mentioned, and that is what allows you to trust the keys that are provided. What may be happening however is that it only verifies it once or periodically - if it already checked a proof on your device it will not check it again on each new chat session.\r \r\u2013\u00a0 CristianTM\n  @CristianTM I made sure to never have looked up the username with whom I tested on my phone before, it definitely didn&#39;t check before claiming the chat is secure. Do note that this is documented in the hacker news thread.\r \r\u2013\u00a0 Luc\n  @CristianTM Did you see the edit in the post? I think that should clarify your questions. Let me know if not.\r \r\u2013\u00a0 Luc\n  Looks really strange. I think its a case to take for the devs or look on the source code. But really an expectation of security seems to be broken here if they rely on server-side checking of proofs or something like this.\r \r\u2013\u00a0 CristianTM\n  The first time you talk to someone, it downloads their encryption key from the Keybase server and you have to trust the server to send you the right key. It could also send you a fake one such that you encrypt your messages using a malicious key instead. There is no way to verify this in the app.\n In Keybase&#39;s case, to be fair, the attack is hard to pull off due to the checks they made available, but it is not end-to-end encryption unless you want to broaden the definition to include trusting the server for the key exchange (combined with a bit of wishful thinking that there is even a minority of people that ever checked the Merkle root for inclusion of their key despite that the instructions on how to check were broken, as noted in the question).\n If you want to verify that the Keybase server is not performing any kind of attack, you will have to use the command line; it is not possible in the official application. The &#34;proofs&#34; (Twitter proof, website proof, etc.) did not seem to work reliably (as described in the question), but even if they did, Keybase also labeled chats as E2EE without requiring any third party proof to be in your account. And I don&#39;t think my mom would add proofs if not given a reason why (and perhaps not even then, which is okay, but then she shouldn&#39;t be lead to believe it&#39;s more secure than it is). The mechanism Keybase applied is commonly called TOFU: trust on first use. It downloads the keys one time, and if it doesn&#39;t change, it assumes everything is fine.\n   I agree. Good thing they paid over $100 000 to NCC Group&#39;s security and cryptography experts to have an audit which... never mentioned this issue in  their report? (I also emailed one of the auditors with a link to this question, but never got so much as an acknowledgement of receipt.) The auditors did find other issues:\n [The two] bugs [found by NCC] were only exploitable if our servers were acting maliciously. We can assure you they weren&#39;t, but you have no reason to believe us.  That&#39;s the whole point!\n Except that we do have to believe them, because we can&#39;t just check for ourselves.\n Perhaps I am not giving Keybase enough credit, though. The blog I quoted from rightly accuses other apps of just accepting and using new (potentially malicious) keys without requiring input from the user. WhatsApp is a prime example: the best you can do is turn on warnings, but the WhatsApp client will still happily participate in a switcharoo where the attacker sends you a new encryption key right when you send a message, allowing them to learn of at least one plaintext even if you are super careful and only send messages when you saw the key didn&#39;t change. But by default, no new key notices are shown, so it&#39;s opportunistically encrypted by default. Many tech people I know seem to trust it because it uses the Signal protocol and so it must be good. I expect the Keybase app does this properly. While it might be good to check again if there aren&#39;t any flaws in the mechanism, this is the kind of thing I expect an audit  would have revealed if it were there, so Keybase probably does that fine.\n But this specific question is moot now that Keybase is being shut down by Zoom. I was kind of waiting for Keybase to either fix this issue and post a happy answer, for an independent person to re-do my analysis and answer with their conclusion, or for Keybase to acknowledge that they&#39;ve had the whole security community fooled. A kind stranger called  Jared opened a bounty on this question and I posted it to Hacker News to attract an answer, hoping there existed a single person who had attempted the key verification as well. But none of that will happen now, so let&#39;s look at the broader perspective, the reason behind this question.\n Users should have demanded followable instructions. We should have questioned Keybase, now Zoom, and anyone who makes a strong security claim. They claim it? You should want to see steps  you can follow to verify it. Since you put your trust in the published code, those instructions should not involve any command line coding work, and definitely not have gaps like verifying keys on your laptop and hoping that the server sent the same keys to your phone.\n To give one good example, and I hate to say it, Telegram&#39;s calling feature nailed this. They  show four emojis on the screen for key verification. Heck, it&#39;s fun: in calls with my girlfriend I sometimes find us doing the verification randomly, comparing emoji library differences or making fun of one of the icons. I haven&#39;t looked into its security, maybe you&#39;d need five emojis to get above 128 bits of entropy or whatever, but from a UX perspective, this is a great example.  Matrix does something similar but not (yet) for calls.\n The tech communities on Hacker News, Reddit, PrivacyTools (&#34; Keybase [provides] E2EE.&#34;), even the auditors overlooked this purely practical issue (and I do trust their expertise in general, no audit is ever really complete in a project as complex as Keybase&#39;s or Zoom&#39;s). People were hostile when I asked questions, assuming I was a noob who couldn&#39;t read the docs and figure out how the verification worked when they never actually tried it themselves. Be more curious. Key verification should not be hard when it is called &#34;end to end encryption&#34; because the end users have to be able to verify it. While my mom may have to trust someone to have checked the code, I (or a project like F-Droid) can compile the binary independently and give it to her. However, the encryption key is something she  needs to be able to check if she wishes to do so. We know that even the NSA has trouble breaking good cryptography, and kudos to Keybase for building good cryptography, but attackers have no trouble working around it by swapping out server responses.\n    By clicking \u201cPost Your Answer\u201d, you agree to our  terms of service,  privacy policy and  cookie policy\n  Not the answer you&#39;re looking for? Browse other questions tagged         or  ask your own question.", "posttime": "2020-05-09 08:16:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,app,\u5bc6\u94a5,chat", "title": "\u5bc6\u94a5\u5e93\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u804a\u5929\u4ece\u672a\u7ecf\u8fc7\u53ef\u9a8c\u8bc1\u7684\u7aef\u5230\u7aef\u52a0\u5bc6", "title_en": "Keybase's chat in the app was never verifiably end-to-end encrypted", "transed": 1, "url": "https://security.stackexchange.com/a/231344/10863", "via": "", "real_tags": ["\u7a0b\u5e8f", "app", "\u5bc6\u94a5", "chat"]}, {"category": "", "categoryclass": "", "imagename": "cb8e00ebe19434fb550ae5081cac6875.jpg", "infoid": 1001343, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9886\u5bfc\u4e00\u9879\u7814\u7a76\u7684\u827e\u4f2f\u5854\u7701\u4e00\u4f4d\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5927\u9ebb\u63d0\u53d6\u7269\u5728\u4f7f\u4eba\u4eec\u5bf9\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u66f4\u5177\u62b5\u6297\u529b\u65b9\u9762\u663e\u793a\u51fa\u6f5c\u529b\u3002\n\u751f\u7269\u79d1\u5b66\u5bb6\u4f0a\u6208\u5c14\u00b7\u79d1\u74e6\u5c14\u4e18\u514b(Igor Kovalchuk)\u535a\u58eb\u8bf4\uff0c\u5728\u7b5b\u9009\u4e86400\u79cd\u5927\u9ebb\u83cc\u682a\u540e\uff0c\u83b1\u65af\u5e03\u91cc\u5947\u5927\u5b66(University Of Lethbridge)\u7684\u7814\u7a76\u4eba\u5458\u6b63\u4e13\u6ce8\u4e8e\u5927\u7ea612\u79cd\u5927\u9ebb\u83cc\u682a\uff0c\u8fd9\u4e9b\u83cc\u682a\u5728\u786e\u4fdd\u8fd9\u79cd\u6f5c\u5728\u81f4\u547d\u75c5\u6bd2\u751f\u6839\u7684\u80a5\u6c83\u571f\u58e4\u65b9\u9762\u53d6\u5f97\u4e86\u4ee4\u4eba\u632f\u594b\u7684\u7ed3\u679c\u3002\n\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff1a\u201c\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u5df2\u7ecf\u5c06\u8fd9\u4e9b(\u75c5\u6bd2)\u53d7\u4f53\u7684\u6570\u91cf\u51cf\u5c11\u4e8673%\uff0c\u5b83\u8fdb\u5165\u7684\u673a\u4f1a\u8981\u4f4e\u5f97\u591a\u3002\u201d\n\u201c\u5982\u679c\u4ed6\u4eec\u80fd\u51cf\u5c11\u53d7\u4f53\u7684\u6570\u91cf\uff0c\u611f\u67d3\u7684\u51e0\u7387\u5c31\u4f1a\u5c0f\u5f97\u591a\u3002\u201d\n\u5229\u7528\u8fc7\u53bb\u4e09\u4e2a\u6708\u7684\u5927\u9ebb\u6bd2\u682a\uff0c\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5927\u9ebb\u6210\u5206THC\u548cCBD\u4e4b\u95f4\u7684\u6709\u6548\u5e73\u8861-\u540e\u8005\u901a\u5e38\u4e0e\u533b\u7597\u7528\u9014\u6709\u5173-\u5728\u963b\u6b62\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u65b9\u9762\u4ecd\u4e0d\u6e05\u695a\u3002\n\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff1a\u201c\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u627e\u5230\u6709\u6548\u6210\u5206\u662f\u4ec0\u4e48--\u53ef\u80fd\u6709\u5f88\u591a\u3002\u201d\u4ed6\u7684Pathway RX\u90e8\u5206\u5f52\u8001\u724c\u5927\u9ebb\u751f\u4ea7\u5546Sunial Growers\u6240\u6709\uff0c\u5e76\u4e0e\u827e\u4f2f\u5854\u7701\u7684\u5927\u9ebb\u7814\u7a76\u4eba\u5458Swysh\u5408\u4f5c\u3002\n\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6700\u6709\u5e0c\u671b\u7684\u662f\u9ad8CBD\u542b\u91cf\u7684\u6297\u708e\u7279\u6027\u3002\n\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff1a\u201c\u6211\u4eec\u66f4\u5173\u6ce8\u9ad8CBD\uff0c\u56e0\u4e3a\u4eba\u4eec\u53ef\u4ee5\u670d\u7528\u66f4\u9ad8\u5242\u91cf\uff0c\u800c\u4e0d\u4f1a\u53d7\u5230\u635f\u5bb3\u3002\u201d\n\u6839\u636e\u52a0\u62ff\u5927\u536b\u751f\u90e8\u7684\u8bb8\u53ef\uff0c\u8fd9\u9879\u4f7f\u7528\u4eba\u9020\u4eba\u4f533-D\u7ec4\u7ec7\u6a21\u578b\u7684\u7814\u7a76\u4e00\u76f4\u5728\u5bfb\u627e\u65b9\u6cd5\uff0c\u4ee5\u963b\u6b62\u8fd9\u79cd\u9ad8\u4f20\u67d3\u6027\u7684\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u5728\u80ba\u90e8\u3001\u80a0\u9053\u548c\u53e3\u8154\u4e2d\u627e\u5230\u5bbf\u4e3b\u3002\n\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff0c\u5982\u679c\u6210\u529f\uff0c\u8fd9\u9879\u5de5\u4f5c\u53ef\u80fd\u4f1a\u5728\u6f31\u53e3\u3001\u6f31\u53e3\u3001\u5438\u5165\u5242\u6216\u51dd\u80f6\u5e3d\u7b49\u65b9\u9762\u627e\u5230\u5b9e\u9645\u7684\u533b\u7597\u7528\u9014\u3002\n\u201c\u8fd9\u5bf9\u4eba\u4eec\u6765\u8bf4\u4f1a\u66f4\u4fbf\u5b9c\uff0c\u526f\u4f5c\u7528\u4e5f\u4f1a\u5c11\u5f97\u591a\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4f46\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff0c\u7f3a\u4e4f\u4e34\u5e8a\u8bd5\u9a8c\u4ecd\u7136\u662f\u4e00\u4e2a\u969c\u788d\uff0c\u6765\u81ea\u8d44\u91d1\u65e5\u76ca\u7d27\u5f20\u7684\u5927\u9ebb\u884c\u4e1a\u7684\u8d44\u91d1\u5e76\u4e0d\u80fd\u63a8\u52a8\u8fd9\u4e00\u70b9\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u6709\u613f\u610f\u4e0e\u6211\u4eec\u5408\u4f5c\u7684\u4e34\u5e8a\u533b\u751f\uff0c\u4f46\u5bf9\u4e8e\u8bb8\u591a\u4ece\u4e8b\u5927\u9ebb\u4e1a\u52a1\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u8fd9\u662f\u4ed6\u4eec\u8d1f\u62c5\u4e0d\u8d77\u7684\u5927\u91cf\u73b0\u91d1\u3002\u201d\n\u8fd9\u4f4d\u79d1\u5b66\u5bb6\u5f3a\u8c03\uff0c\u8fd9\u4e9b\u53d1\u73b0\u4e0d\u4f1a\u5bfc\u81f4\u75ab\u82d7-\u67d0\u79cd\u201c\u4e0d\u90a3\u4e48\u5177\u4f53\u548c\u7cbe\u786e\u201d\u7684\u4e1c\u897f\uff0c\u4f46\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u4ecd\u7136\u662f\u53e6\u4e00\u79cd\u53ef\u80fd\u7684\u5bf9\u6297\u51a0\u72b6\u75c5\u6bd2\u7684\u6b66\u5668\u3002\n\u79d1\u74e6\u5c14\u4e18\u514b\u8bf4\uff1a\u201c\u6211\u4eec\u6700\u6210\u529f\u548c\u6700\u65b0\u9896\u7684\u9ad8CBD-C\u4e30\u5ea6\u54c1\u7cfb\u7684\u63d0\u53d6\u7269\u6709\u5f85\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u53ef\u80fd\u4f1a\u6210\u4e3a\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u7684\u6709\u7528\u548c\u5b89\u5168\u7684\u8865\u5145\uff0c\u4f5c\u4e3a\u4e00\u79cd\u8f85\u52a9\u7597\u6cd5\u3002\u201d\n\u201c\u9274\u4e8e\u76ee\u524d\u53ef\u6015\u548c\u8fc5\u901f\u6f14\u53d8\u7684\u6d41\u884c\u75c5\u5b66\u60c5\u51b5\uff0c\u5fc5\u987b\u8003\u8651\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u6cbb\u7597\u673a\u4f1a\u548c\u9014\u5f84\u3002\u201d\n\u4ee5\u8272\u5217\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u5f00\u59cb\u5bf9CBD\u8fdb\u884c\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u4f5c\u4e3a\u4e00\u79cd\u6cbb\u7597\u65b9\u6cd5\uff0c\u5229\u7528\u5176\u6297\u708e\u80fd\u529b\u4fee\u590d\u88ab\u51a0\u72b6\u75c5\u6bd2\u7834\u574f\u7684\u7ec6\u80de\u3002\n\u636e\u8ba4\u4e3a\uff0cCBD\u53ef\u4ee5\u589e\u5f3a\u7c7b\u56fa\u9187\u6cbb\u7597\u5371\u53ca\u751f\u547d\u7684\u60a3\u8005\u7684\u4f20\u7edf\u7597\u6548\uff0c\u5e76\u589e\u5f3a\u514d\u75ab\u7cfb\u7edf\u3002\n\u8fd9\u4f4d\u5bc6\u6b47\u6839\u5927\u5b66\u7684\u79d1\u5b66\u5bb6\u8bf4\uff0c\u8fd9\u7c7b\u7814\u7a76\u548c\u4ed6\u81ea\u5df1\u7684\u7814\u7a76\u503c\u5f97\u52a0\u62ff\u5927\u653f\u5e9c\u652f\u6301\uff0c\u52a0\u62ff\u5927\u8054\u90a6\u653f\u5e9c\u5df2\u7ecf\u627f\u8bfa\u4e3a\u51a0\u72b6\u75c5\u6bd2\u7814\u7a76\u63d0\u4f9b11\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u5de5\u4f5c\u53ef\u80fd\u4f1a\u4ea7\u751f\u5de8\u5927\u5f71\u54cd--\u6709\u6f5c\u529b\u5c06\u611f\u67d3\u964d\u4f4e70%\u81f380%\u7684\u836f\u7269\u5e76\u4e0d\u591a\u3002\u201d\n\u90ae\u653f\u5a92\u4f53\u81f4\u529b\u4e8e\u4fdd\u6301\u4e00\u4e2a\u6d3b\u6cfc\u800c\u6587\u660e\u7684\u8ba8\u8bba\u8bba\u575b\uff0c\u5e76\u9f13\u52b1\u6240\u6709\u8bfb\u8005\u5206\u4eab\u4ed6\u4eec\u5bf9\u6211\u4eec\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u8bc4\u8bba\u53ef\u80fd\u9700\u8981\u957f\u8fbe\u4e00\u4e2a\u5c0f\u65f6\u7684\u5ba1\u6838\u65f6\u95f4\u624d\u80fd\u51fa\u73b0\u5728\u7f51\u7ad9\u4e0a\u3002\u6211\u4eec\u8981\u6c42\u60a8\u4fdd\u6301\u76f8\u5173\u548c\u5c0a\u91cd\u60a8\u7684\u8bc4\u8bba\u3002\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86\u7535\u5b50\u90ae\u4ef6\u901a\u77e5-\u5982\u679c\u60a8\u6536\u5230\u5bf9\u60a8\u7684\u8bc4\u8bba\u7684\u56de\u590d\u3001\u60a8\u5173\u6ce8\u7684\u8bc4\u8bba\u5e16\u5b50\u6709\u66f4\u65b0\uff0c\u6216\u8005\u5982\u679c\u7528\u6237\u5173\u6ce8\u60a8\u7684\u8bc4\u8bba\uff0c\u60a8\u73b0\u5728\u5c06\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u6709\u5173\u5982\u4f55\u8c03\u6574\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u8bbe\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\u548c\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u793e\u533a\u6307\u5357\u3002", "note_en": "Cannabis extracts are showing potential in making people more resistant to the novel coronavirus, says an Alberta researcher leading a study.\n After sifting through 400 cannabis strains, researchers at the University of Lethbridge are concentrating on about a dozen that show promising results in ensuring less fertile ground for the potentially lethal virus to take root, said biological scientist Dr. Igor Kovalchuk.\n  \u201cA number of them have reduced the number of these (virus) receptors by 73 per cent, the chance of it getting in is much lower,\u201d said Kovalchuk.\n \u201cIf they can reduce the number of receptors, there\u2019s much less chance of getting infected.\u201d\n Employing cannabis sativa strains over the past three months, the researcher said the effective balance between cannabis components THC and CBD \u2014 the latter more typically associated with medical use \u2014 is still unclear in blocking the novel coronavirus.\n  \u201cIt will take a long time to find what the active ingredient is \u2014 there may be many,\u201d said Kovalchuk, whose Pathway RX is owned partly by Olds-based licensed cannabis producer Sundial Growers and partnered with Alberta cannabis researcher Swysh.\n But it\u2019s generally the anti-inflammatory properties of high-CBD content that have shown most promise, he added.\n \u201cWe focus more on the higher CBD because people can take higher doses and not be impaired,\u201d said Kovalchuk.\n The study under Health Canada licence using artificial human 3-D tissue models has been seeking ways to hinder the highly contagious novel coronavirus from finding a host in the lungs, intestines, and oral cavity.\n  If successful, the work could find practical medical use in the form of mouth wash, gargle, inhalants or gel caps, said Kovalchuk.\n \u201cIt would be cheaper for people and have a lot less side-effects,\u201d he said.\n But the absence of clinical trials remains a barrier, and funding from an increasingly cash-strapped cannabis industry isn\u2019t there to fuel that, said Kovalchuk.\n \u201cWe have clinicians who are willing to work with us but for a lot of companies in the cannabis business, it\u2019s significant cash that they can\u2019t afford,\u201d he said.\n The scientist emphasized the findings wouldn\u2019t lead to a vaccine \u2014 something \u201cless specific and precise\u201d but nonetheless another possible weapon against COVID-19.\n  \u201cThe extracts of our most successful and novel high CBD C sativa lines, pending further investigation, may become a useful and safe addition to the treatment of COVID-19 as an adjunct therapy,\u201d said Kovalchuk.\n \u201cGiven the current dire and rapidly evolving epidemiological situation, every possible therapeutic opportunity and avenue must be considered.\u201d\n Israeli researchers have begun clinical trials of CBD as a treatment to repair cells damaged by COVID-19 by using its anti-inflammatory abilities.\n It\u2019s thought CBD could enhance the traditional effect of steroids in such treatment of patients in life-threatening condition and also bolster the immune system.\n It\u2019s the kind of research and his own that deserves government support in Canada, whose federal government has pledged $1.1 billion in funding for COVID-19 research said the U of L scientist.\n \u201cOur work could have a huge influence \u2014 there aren\u2019t many drugs that have the potential of reducing infection by 70 to 80 per cent,\u201d he said.\n Postmedia is committed to maintaining a lively but civil forum for discussion and encourage all readers to share their views on our articles. Comments may take up to an hour for moderation before appearing on the site. We ask you to keep your comments relevant and respectful. We have enabled email notifications\u2014you will now receive an email if you receive a reply to your comment, there is an update to a comment thread you follow or if a user you follow comments. Visit our  Community Guidelines for more information and details on how to adjust your  email settings.", "posttime": "2020-05-09 08:14:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u663e\u793a,shows", "title": "\u5927\u9ebb\u663e\u793a\u51fa\u963b\u6b62\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u7684\u5e0c\u671b\uff1a\u827e\u4f2f\u5854\u7701\u7814\u7a76\u4eba\u5458", "title_en": "Cannabis shows promise blocking coronavirus infection: Alberta researcher", "transed": 1, "url": "https://calgaryherald.com/cannabis/cannabis-shows-promise-blocking-coronavirus-infection-alberta-researcher/", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u663e\u793a", "shows"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001341, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u56e2\u961f\u6b63\u5728\u5e7f\u573a\u5efa\u9020\u4e00\u4e2a\u901a\u7528\u7684Kubernetes\u96c6\u7fa4\u3002\u4f5c\u4e3a\u6269\u5c55\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5b9e\u65bd\u4e86Pod\u5b89\u5168\u7b56\u7565(PSP)\u6765\u4fdd\u62a4\u6211\u4eec\u7684\u7fa4\u96c6\u514d\u53d7\u8bb8\u591a\u5bb9\u5668\u9003\u9038\u98ce\u9669\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u91cd\u70b9\u662f\u5982\u4f55\u5168\u9762\u90e8\u7f72Pod\u5b89\u5168\u7b56\u7565\uff0c\u5e76\u9501\u5b9a\u6240\u6709\u5185\u5bb9\uff0c\u4ee5\u53ca\u5982\u4f55\u6388\u4e88\u4f8b\u5916\u3002\u6709\u5173PSP\u7684\u4ecb\u7ecd\uff0c\u8bf7\u9605\u8bfbKubernetes PSP\u5b98\u65b9\u6587\u6863\u3002\u5b98\u65b9\u6587\u6863\u5f88\u597d\u5730\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684PSP\u793a\u4f8b\uff0c\u4f46\u662f\u6ca1\u6709\u63cf\u8ff0\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684PSP\u7cfb\u7edf\u5c06\u5982\u4f55\u5de5\u4f5c\uff0c\u5b83\u5c06\u5982\u4f55\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e94\u7528\uff0c\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u5f02\u5e38\u3002\u8fd9\u7bc7\u5e16\u5b50\u5c31\u662f\u4e3a\u4e86\u5e2e\u52a9\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u800c\u5199\u7684\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u60a8\u5728\u5b9e\u65bdPSP\u65f6\u53ef\u80fd\u9047\u5230\u7684\u51e0\u4e2a\u9677\u9631\uff0c\u5e76\u8ba8\u8bba\u4e00\u4e9b\u6545\u969c\u6392\u9664\u7b56\u7565\u3002\nKubernetes\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u548c\u590d\u6742\u7684\u5de5\u5177\uff1b\u7136\u800c\uff0c\u8fd9\u5728\u793e\u533a\u5185\u5bfc\u81f4\u4e86\u51e0\u4e2a\u5b89\u5168\u95ee\u9898\u3002\u5927\u591a\u6570\u5e93\u4f2f\u5185\u65af\u7684\u5b89\u5168\u6545\u969c\u53ef\u5206\u4e3a\u4e24\u5927\u9635\u8425\uff1a\n\u5229\u7528PSP\u7684\u6240\u6709\u529f\u80fd\u53ef\u4ee5\u663e\u8457\u589e\u52a0\u5bb9\u5668\u9003\u9038\u7684\u96be\u5ea6\uff0c\u4ece\u800c\u7f29\u5c0f\u7b2c\u4e00\u4e2a\u4e3b\u8981\u653b\u51fb\u8f7d\u4f53\u3002PSP\u4e0d\u662f\u7075\u4e39\u5999\u836f(\u4ec0\u4e48\u90fd\u4e0d\u662f)\uff0c\u4f46\u5b83\u4eec\u662f\u4fdd\u62a4\u96c6\u7fa4\u548c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f3a\u5927\u5de5\u5177\u3002\n\u6ce8\uff1a\u4ee5\u4e0a\u662f\u5bf9\u590d\u6742\u4e3b\u9898\u7684\u7b80\u5316\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u5fae\u8f6f\u6700\u8fd1\u53d1\u5e03\u4e86\u9488\u5bf9Kubernetes\u7684\u653b\u51fb\u77e9\u9635\u3002PSP\u5141\u8bb8\u60a8\u9650\u523631\u4e2a\u6311\u6218\u4e2d\u76849\u4e2a\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u6f14\u793a\u7684PSP\u53ef\u4ee5\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u4f7f\u7528\uff0c\u4f46\u662f\u60a8\u5e94\u8be5\u4ed4\u7ec6\u9605\u8bfb\u5b98\u65b9\u6587\u6863\uff0c\u4ee5\u786e\u4fdd\u5217\u4e3e\u4e86\u6240\u6709\u53ef\u7528\u7684\u63a7\u4ef6\u3002\n\u4e3a\u4e86\u7b80\u5316\u5f02\u5e38\u7ba1\u7406\uff0c\u672c\u6587\u4e2d\u7684PSP\u793a\u4f8b\u5728\u8bed\u6cd5\u4e2d\u53ea\u91c7\u7528\u4e86\u5f88\u5c11\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5e76\u663e\u5f0f\u5217\u4e3e\u4e86\u6240\u6709\u529f\u80fd/\u6743\u9650\u3002\u4f8b\u5982\uff1a\u5bf9\u4e8erequidDropCapability\uff0c\u6211\u4eec\u63d0\u5230\u4e86\u6bcf\u79cd\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4f7f\u7528&#34\uff1bALL&#34\uff1b\u3002\n\u672c\u6587\u4e2d\u7684PSP\u907f\u514dAppArmor\u548cSELinux\u7ba1\u7406\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u4e3b\u9898\u672c\u8eab\u90fd\u662f\u535a\u5ba2\u6587\u7ae0\u7cfb\u5217\uff0c\u53ea\u63d0\u5230\u5b58\u6839\u3002\n-api\u7248\u672c\uff1a\u7b56\u7565/v1beta1Kind\uff1aPodSecurityPolicyMetadata\uff1a\u6ce8\u91ca\uff1akubernetes.io/Description\uff1a&#39\uff1b\u6240\u6709\u6807\u51c6\u7528\u4f8b\u7684\u53d7\u9650psp&#39\uff1bseccomp.security.alpha.kubernetes.io/allowedProfileNames\uff1a\u505c\u9760\u5668/\u9ed8\u8ba4seccomp.security.alpha.kubernetes.io/defaultProfileName\uff1a\u505c\u9760\u5668/\u9ed8\u8ba4\u540d\u79f0\uff1arestrictedspec\uff1a#alloweCapability\uff1a#-NET_BIND_SERVICE#\u5982\u679c\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u4f4e\u7aef\u53e3\uff0c\u5219\u4f7f\u7528#-NET_BIND_SERVICE#\u3002\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5df2\u6ce8\u91ca\u6389#alloweHostPath\uff1a#-path Prefix\uff1a&#34\uff1b/ome/path&#34\uff1b#\u5982\u4f55\u5141\u8bb8\u7279\u5b9a\u4e3b\u673a\u8def\u5f84\u7684\u793a\u4f8b#readOnly\uff1atrue allowPrivilegeEscalation\uff1afalse#\u7981\u6b62\u5c06\u6743\u9650\u63d0\u5347\u5230\u5141\u8bb8\u7684\u4efb\u4f55\u7279\u6b8a\u529f\u80fdProcmount Types\uff1a#\u4e0d\u5141\u8bb8\u5b8c\u5168/proc\u88c5\u8f7d\uff0c\u4ec5\u5141\u8bb8&#34\uff1b\u9ed8\u8ba4\u503c&#34\uff1b\u63a9\u7801/proc-default fsGroup\uff1a#\u4e0d\u5141\u8bb8\u6839fsGroups\u8fdb\u884c\u5377\u88c5\u8f7d\u89c4\u5219\uff1aMustRunAs\u8303\u56f4\uff1a-max\uff1a65535\u5206\u949f\uff1a1\u4e3b\u673aIpc\uff1aFalse#\u4e0d\u5141\u8bb8\u5171\u4eab\u4e3b\u673aipc\u547d\u540d\u7a7a\u95f4\u4e3b\u673a\u7f51\u7edc\uff1aFALSE#\u4e0d\u5141\u8bb8\u4e3b\u673a\u8054\u7f51\u4e3b\u673aPID\uff1aFALSE#\u4e0d\u5141\u8bb8\u5171\u4eab\u4e3b\u673a\u8fdb\u7a0bID\u547d\u540d\u7a7a\u95f4\u4e3b\u673a\u7aef\u53e3\uff1a#\u4e0d\u5141\u8bb8\u4f4e\u4f4d\u4e3b\u673a\u7aef\u53e3(\u8fd9\u4f3c\u4e4e\u53ea\u9002\u7528\u4e8eEKS\u4e0a\u7684eth0)-\u6700\u5927\uff1a65535\u5206\u949f\uff1a1025\u7279\u6743\uff1aFALSE#\u4e0d\u5141\u8bb8\u7279\u6743POST\u3002quiredDropCapability\uff1a#\u5220\u9664Linux\u5185\u6838\u4e2d\u7684\u6240\u6709\u6743\u9650-AUDIT_CONTROL-AUDIT_READ-WRITE-BLOCK_SUSPEND-CHOWN-DAC_OVERRIDE-DAC_READ_SEARCH-FOWNER-FSETID-IPC_LOCK-IPC_OWNER-KILL-LE-LINUX_IMMOTABLE-MAC_ADMIN-MAC_OVERRIDE-MKNOD-NET_ADMIN-NET_BIND_SERVICE-NET_BROADOAD-NET_RAW-SETGID-SETFCAR\u3002sys_ptrace-SYS_RAWIO-SYS_RESOURCE-SYS_TIME-SYS_TTY_CONFIG-SYSLOG-WAKE_ALARM runAsGroup\uff1a#\u4e0d\u5141\u8bb8Pod\u7684GID 0(\u5757\u6839\u7ec4)\u89c4\u5219\uff1aMustRunAs\u8303\u56f4\uff1a-max\uff1a65535\u5206\u949f\uff1a1 RunAsUser\uff1a#\u4e0d\u5141\u8bb8Pod\u7684UID 0\u89c4\u5219\uff1aMustRunAsNonRoot seLinux\uff1a#\u5229\u7528SELinux\u89c4\u5219\uff1aRunAsAny\u8865\u5145\u7ec4\uff1a#\u9650\u5236\u8865\u5145\u3002emptyDir-Projected-Secret#-hostPath#\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u5141\u8bb8\u4f7f\u7528\u4e3b\u673a\u8def\u5f84\u3002#-sistentVolumeClaim#\u5982\u679c\u4f7f\u7528statefulsets\uff0c\u4f60&#39\uff1b\u6211\u9700\u8981\u8fd9\u4ef6\u3002\n\u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u6240\u6709Kubernetes\u5377\u7c7b\u578b\u7684\u5217\u8868\u3002\u60a8\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u5377\u5217\u8868\uff0c\u53ea\u662f\u8981\u5c0f\u5fc3\u4f7f\u7528\u5b83\u4eec\u3002\n\u7136\u540e\uff0c\u60a8\u5fc5\u987b\u786e\u4fdd\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u8bbf\u95eePSP\u3002\u8981\u7406\u667a\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u60a8\u9700\u8981\u6388\u4e88\u6240\u6709\u7528\u6237\u5bf9\u6700\u4e25\u683c\u7684PSP\u7684\u8bbf\u95ee\u6743\u9650\u3002\n\u6211\u4eec\u5c06\u8fd9\u4e2a\u53d7\u9650\u7684PSP\u6388\u4e88System\uff1aAuthenticated\u7ec4\uff0c\u800c\u4e0d\u662f\u679a\u4e3e\u6240\u6709\u7528\u6237(\u8fd9\u53ef\u80fd\u6700\u7ec8\u5bfc\u81f4\u5728\u542f\u7528PSP\u4e4b\u540e\u6dfb\u52a0\u7684\u4e22\u5931\u7528\u6237)\u3002\u5982\u679c\u7528\u6237\u7f3a\u4e4f\u66f4\u660e\u786e\u7684\u6743\u9650\uff0c\u5219SYSTEM\uff1aAUTHENTED\u7ec4\u662f\u6240\u6709\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u7684\u5907\u7528\u7ec4\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u5141\u8bb8\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u90e8\u7f72\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219PSP\u53ef\u80fd\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u60a8\u7684\u95ee\u9898\u7a7a\u95f4\u3002\u4f46\u662f\uff0c\u6211\u8981\u6ce8\u610f\u7684\u662f\uff0c\u786e\u5b9e\u5b58\u5728System\uff1aUnAuthenticated\u7ec4\u3002\n\u8981\u9644\u52a0\u6b64PSP\u8bbf\u95ee\uff0c\u9700\u8981ClusterRole\u6388\u4e88\u6743\u9650\uff0c\u5e76\u5c06ClusterRoleBinding\u7ed1\u5b9a\u5230SYSTEM\uff1aAUTHENTIZED\u7ec4\u3002ClusterRole\u548cClusterRoleBinding\u7528\u4e8e\u542f\u7528PSP\u8bbf\u95ee\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5c06\u6b64\u9650\u5236\u5e94\u7528\u4e8e\u7fa4\u96c6\u4e2d\u6240\u6709\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u3002\u6b64ClusterRole\u7528\u6cd5\u4e0d\u4f1a\u53d6\u4ee3\u9650\u5236\u7528\u6237\u529f\u80fd(\u5982\u521b\u5efaPod\u6216\u90e8\u7f72)\u7684\u5176\u4ed6\u73b0\u6709RBAC\u7b56\u7565\u3002\n-apiVersion\uff1arbac.authization.k8s.io/v1Kind\uff1aClusterRolemetadata\uff1alabels\uff1aeks.amazonaws.com/component\uff1apod-security-policy kubernetes.io/cluster-service\uff1a&#34\uff1btrue&#34\uff1b\u540d\u79f0\uff1aPSP-\u53d7\u9650\u89c4\u5219\uff1a-apiGroups\uff1a-policy resource\u540d\u79f0\uff1a-\u53d7\u9650\u8d44\u6e90\uff1a-podsecuritypolicy\u8c13\u8bcd\uff1a-use-api\u7248\u672c\uff1arbac.authization.k8s.io/v1Kind\uff1aClusterRoleBindingMetadata\uff1a\u6ce8\u91ca\uff1akubernetes.io/Description\uff1a\u7ed1\u5b9a\u5230\u7cfb\u7edf\u7684\u9650\u5236\u6027PSP\uff1a\u5df2\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u4ee5\u8986\u76d6\u6240\u6709\u7528\u6237\u6807\u7b7e\uff1aeks.amazonaws.com/component\uff1apod-security-policy kubernet.com/component\uff1apod-security-policy kubernet\u3002\u540d\u79f0\uff1apsp-restrictedroleRef\uff1aapiGroup\uff1arbac.authization.k8s.io Kind\uff1a\u7fa4\u96c6\u89d2\u8272\u540d\u79f0\uff1aPSP-RestrictedSubjects\uff1a-apiGroup\uff1arbac.authization.k8s.io Kind\uff1a\u7ec4\u540d\uff1a\u7cfb\u7edf\uff1a\u5df2\u9a8c\u8bc1\u3002\n\u76d1\u63a7\u8282\u70b9\u548c\u5de5\u4f5c\u8d1f\u8f7d\uff1f\u5b83\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u7684\u4e3b\u673a\u6302\u8f7d\uff0c\u4ee5\u53ca\u53ef\u6015\u7684/var/run/docker.sock\n\u6700\u540e\uff0c\u6bcf\u4e2a\u5f02\u5e38\u90fd\u9700\u8981\u56db\u6837\u4e1c\u897f\uff1a\u4e00\u4e2a\u81ea\u5b9a\u4e49PSP\u3001\u4e00\u4e2aServiceAccount\u3001\u4e00\u4e2a\u89d2\u8272\u6216ClusterRole\uff0c\u4ee5\u53ca\u4e00\u4e2aRoleBinding\u6216ClusterRoleBinding\u3002\n\u5982\u679c\u60a8\u7684\u7528\u4f8b\u4ec5\u5728\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u521b\u5efa\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u89d2\u8272/\u89d2\u8272\u7ed1\u5b9a\u3002\u5982\u679c\u60a8\u7684\u5f02\u5e38\u7528\u4f8b\u5c06\u5728\u51e0\u4e2a\u540d\u79f0\u7a7a\u95f4\u4e2d\u91cd\u7528\u7ed9\u5b9a\u7684PSP\uff0c\u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u540d\u79f0\u7a7a\u95f4\u4f7f\u7528\u4e00\u4e2aClusterRole\u548c\u4e00\u4e2a\u670d\u52a1\u5e10\u6237/RoleBinding\u3002\u6216\u8005\uff0c\u6bcf\u4e2aNS\u53ef\u4ee5\u6709\u4e00\u4e2aServiceAccount\u548c\u4e00\u4e2aClusterRole\u548cClusterRoleBinding\uff0c\u540e\u8005\u63d0\u5230\u6240\u6709ServiceAccount\u3002\n\u6211\u786e\u5b9a\u7684\u6a21\u5f0f\u662fPSP\u3001\u96c6\u7fa4\u89d2\u8272\u548c\u7ed1\u5b9a\u5230\u5b83\u7684\u89d2\u8272\u3002\u8fd9\u5177\u6709\u5c06\u6240\u6709\u4e0ePSP\u76f8\u5173\u7684\u7fa4\u96c6\u89d2\u8272\u4fdd\u6301\u5728\u4e00\u8d77\u4ee5\u8fdb\u884c\u5ba1\u6838\u7684\u4f18\u70b9\u3002\u4f7f\u7528\u5230ClusterRole\u7684RoleBinding\u8fd8\u5c06PSP\u5f02\u5e38\u9650\u5236\u4e3a\u5355\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\n\u4e0b\u9762\u663e\u793a\u4e86\u4e00\u4e2a\u6db5\u76d6fluentd DaemonSet(fluentd\u5c06\u65e5\u5fd7\u6d88\u606f\u5bfc\u51fa\u5230\u5176\u6700\u7ec8\u76ee\u6807)\u7684PSP\u5f02\u5e38\u793a\u4f8b\uff0c\u56e0\u4e3a\u4e0e\u9650\u5236\u6027\u7684\u9ed8\u8ba4PSP\u76f8\u6bd4\uff0c\u5b83\u9700\u8981\u5927\u91cf\u7684\u5f02\u5e38\uff1a\n-api\u7248\u672c\uff1a\u7b56\u7565/v1beta1\u79cd\u7c7b\uff1aPodSecurityPolicyMetadata\uff1a\u6ce8\u91ca\uff1akubernetes.io/Description\uff1a&#39\uff1b\u9488\u5bf9Fluentd-&gt\uff1bFluentd&#39\uff1bseccomp.security.alpha.kubernetes.io/allowedProfileNames\uff1a\u6269\u5c55\u575e/\u9ed8\u8ba4seccomp.security.alpha.kubernetes.io/defaultProfileName\uff1a\u6269\u5c55\u575e/\u9ed8\u8ba4\u540d\u79f0\uff1afluentd-fluentdspec\uff1a#alloweCapability\uff1a#-NET_BIND_SERVICE#\u5728\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u4f4e\u7aef\u53e3\u65f6\u6709\u7528\u3002\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5141\u8bb8\u5c06\u5176\u6ce8\u91ca\u6389HostPath\uff1a-path Prefix\uff1a&#34\uff1b/run/fluentd/data&#34\uff1b#Exception\uff1aFluentd\u9700\u8981\u4e00\u4e2a\u4e3b\u673a\u6301\u4e45\u4f4d\u7f6e\u6765\u5b58\u50a8\u72b6\u6001readOnly\uff1afalse-path Prefix\uff1a&#34\uff1b/var/lib/docker/Containers&#34\uff1b#Exception\uff1aFluentd\u9700\u8981\u5177\u6709\u5bf9\u7801\u5934\u5bb9\u5668\u65e5\u5fd7ReadOnly\uff1atrue-path Prefix\uff1a&#34\uff1b/var/log&#34\uff1b\u7684\u8bfb\u53d6\u6743\u9650\u3002#Exception\uff1afluentd\u9700\u8981\u4e3b\u673a\u65e5\u5fd7\u7684\u8bfb\u53d6\u6743\u9650\u53ea\u8bfb\uff1atrue allowPrivilegeEscalation\uff1atrue#Exception\uff1afluentd\u9700\u8981root\u7528\u6237\u624d\u80fd\u8bfb\u53d6\u5141\u8bb8\u7684\u65e5\u5fd7Procmount\u7c7b\u578b\uff1a#\u7981\u6b62\u5b8c\u5168/proc\u88c5\u8f7d\uff0c\u53ea\u5141\u8bb8&#34\uff1b\u9ed8\u8ba4\u503c&#34\uff1bMASTED/PROC-Default fsGroup\uff1a#Exception\uff1aFluentd\u4ee5\u7279\u6743\u8eab\u4efd\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981fsGroup 65535\u89c4\u5219\uff1aMustRunAs\u8303\u56f4\uff1a-max\uff1a1025min\uff1a0 hostIpc\uff1aFALSE#\u4e0d\u5141\u8bb8\u5171\u4eab\u4e3b\u673aipc\u547d\u540d\u7a7a\u95f4hostNetwork\uff1aFALSE#\u4e0d\u5141\u8bb8\u5171\u4eab\u4e3b\u673a\u8054\u7f51\u4e3b\u673aPID\uff1aFALSE#\u4e0d\u5141\u8bb8\u5171\u4eab\u4e3b\u673a\u8fdb\u7a0bID\u547d\u540d\u7a7a\u95f4hostPort\uff1a#\u4e0d\u5141\u8bb8\u4f4e\u4f4d\u4e3b\u673a\u7aef\u53e3(\u8fd9\u4f3c\u4e4e\u53ea\u9002\u7528\u4e8eEKS\u4e0a\u7684eth0)-max\uff1a1025min\uff1a65535\u7279\u6743\uff1aTRUE#EXCEPTION\u3002quiredDropCapability\uff1a#\u5220\u9664Linux\u5185\u6838\u4e2d\u7684\u6240\u6709\u6743\u9650-AUDIT_CONTROL-AUDIT_READ-WRITE-BLOCK_SUSPEND-CHOWN-DAC_OVERRIDE-DAC_READ_SEARCH-FOWNER-FSETID-IPC_LOCK-IPC_OWNER-KILL-LE-LINUX_IMMOTABLE-MAC_ADMIN-MAC_OVERRIDE-MKNOD-NET_ADMIN-NET_BROADIO-NET_RAW-SETGID-SETFCAP-SETPCAP\u3002RAWIO-SYS_RESOURCE-SYS_TIME-SYS_TTY_CONFIG-SYSLOG-WAKE_ALARM runAsGroup\uff1a#Exception\uff1aFluentd\u4ee5\u7279\u6743\u8eab\u4efd\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981GID 0\u89c4\u5219\uff1aMustRunAs\u8303\u56f4\uff1a-max\uff1a65535\u5206\u949f\uff1a0\u8fd0\u884c\u65b9\u5f0f\u7528\u6237\uff1a\u89c4\u5219\uff1aMustRunAs#Exception\uff1aFluentd\u4ee5\u7279\u6743\u8eab\u4efd\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981UID 0\u8303\u56f4\uff1a-max\uff1a65535\u5206\u949f\uff1a0 seLinux\uff1a#\u9002\u7528\u4e8eSELinux\u7684\u5de5\u5177\u89c4\u5219\uff1aRunAs\u4efb\u4f55\u8865\u5145\u7ec4\uff1a#Exception\uff1aFluentd\u4ee5\u7279\u6743\u8eab\u4efd\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981GID 0\u89c4\u5219\uff1aMustRunAs\u8303\u56f4\uff1a-max\uff1a65535\u5206\u949f\uff1a0\u5377\u3002\u4f60&#39\uff1b\u6211\u9700\u8981\u8fd9\u4ef6\u3002\n\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5f02\u5e38\u90fd\u4ee5YAML\u6ce8\u91ca\u7684\u5f62\u5f0f\u8c03\u7528\uff0c\u5e76\u5e26\u6709\u5355\u8bcd&#34\uff1b\u5f02\u5e38&#34\uff1b\u3002\u8fd9\u79cd\u505a\u6cd5\u4f7f\u60a8\u53ef\u4ee5\u5728\u7ba1\u7406\u5f02\u5e38\u7684\u4ee3\u7801\u4e2d\u8f7b\u677e\u8ddf\u8e2a\u5f02\u5e38\uff0c\u5e76\u4f7f\u5ba1\u8ba1\u5e08\u5728\u4ed6\u4eec\u6765\u8bbf\u65f6\u611f\u5230\u9ad8\u5174\u3002\n\u6ce8\u610f2\uff1a\u8fd9\u4e0e\u9650\u5236\u6027PSP\u7684\u5e03\u5c40\u76f8\u540c\uff0c\u4ee5\u4fbf\u4e8e\u4f7f\u7528\u8981\u9a8c\u8bc1\u7684\u98ce\u683c\u5de5\u5177\u3002\n\u4e3a\u4e86\u5141\u8bb8Fluentd\u4f7f\u7528\u4e0a\u9762\u7684PSP\uff0c\u6211\u4eec\u6709\u8fd9\u4e2aClusterRole\u548cRoleBinding\uff1a\n-api\u7248\u672c\uff1arbac.Authization.k8s.io/v1Kind\uff1aClusterRolemetadata\uff1aLabels\uff1aeks.amazonaws.com/Component\uff1apod-security-policy kubernetes.io/cluster-service\uff1a&#34\uff1btrue&#34\uff1b\u540d\u79f0\uff1apsp-fluentd-fluentd#\u4e3a\u7b56\u7565api\u7ec4\u547d\u540d\uff1a-psp-&lt\uff1bnamespace&gt\uff1b-&lt\uff1bserviceaccount&gt\uff1brules\uff1a-\u8d44\u6e90\u540d\u79f0\uff1a-fluentd-fluentd\u8d44\u6e90\uff1a-podsecuritypolicy\u8c13\u8bcd\uff1a-Use\u3002\u4e3afluentd-&gt\uff1bfluentd&#39\uff1b\u91cf\u8eab\u5b9a\u505a\u7684PSP\u6807\u7b7e\uff1aeks.amazonaws.com/component\uff1apod-security-policy kubernetes.io/cluster-service\uff1a&#34\uff1btrue&#34\uff1b\u540d\u79f0\uff1apsp-fluentd-fluentd\u547d\u540d\u7a7a\u95f4\uff1afluentdroleRef\uff1aapiGroup\uff1arbac.Authization.k8s.io Kind\uff1aClusterRole\u540d\u79f0\uff1apsp-fluentd-fluentdSubjects\uff1a-Kind\uff1aServic\u3002\n\u8981\u4f7f\u7528\u6b64PSP\uff0cDaemonSet\u53ea\u9700\u5728\u5176Pod\u89c4\u8303\u4e2d\u6307\u5b9aserviceAccountName\uff1afluentd\uff0c\u5e76\u5728fluentd\u547d\u540d\u7a7a\u95f4\u4e2d\u8fd0\u884c\u4ee5\u5229\u7528RoleBinding\u3002\n\u4e0a\u9762\u7684\u6d41\u7545\u5de5\u4f5c\u8d1f\u8f7d\u5c06\u53ef\u4ee5\u8bbf\u95ee\u4e24\u4e2a\u4e0d\u540c\u7684PSP.\u3002\u8fd9\u662f\u600e\u4e48\u8fd0\u4f5c\u7684\uff1f\nPSP\u51c6\u5165\u63a7\u5236\u5668\u6309\u5b57\u6bcd\u987a\u5e8f\u5bf9\u6240\u6709\u5141\u8bb8\u7684PSP\u8fd0\u884c\u7ed9\u5b9a\u7684PSP\u3002\u4f7f\u7528\u5141\u8bb8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7b2c\u4e00\u4e2aPSP\u3002\u4eba\u4eec\u4f3c\u4e4e\u4f1a\u7ea0\u7ed3\u4e8e\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\u6b64\u6846\u67b6\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5c06\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u6216\u4e24\u4e2aPSP\uff1a\u5b8c\u5168\u53d7\u9650\u7684PSP\uff0c\u4e5f\u53ef\u80fd\u662f\u7279\u6b8a\u7684PSP\u3002\u9996\u5148\u8bc4\u4f30\u54ea\u4e00\u4e2a\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3aPSP\u662f\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7b56\u7565\u4e2d\u5904\u7406\u7684\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7b56\u7565\u5141\u8bb8\u8be5\u5de5\u4f5c\uff0c\u5b83\u5c31\u4f1a\u8fdb\u5165\u6a21\u5f0f\u3002\u5982\u679c\u5b58\u5728\u5b8c\u5168\u53d7\u9650\u7684PSP\uff0c\u5219\u5176\u5de5\u4f5c\u65b9\u5f0f\u5b9e\u9645\u4e0a\u7c7b\u4f3c\u4e8e\u9ed8\u8ba4\u62d2\u7edd\u9632\u706b\u5899\u7b56\u7565\u3002\n\u5982\u679c\u6ca1\u6709PSP\u5141\u8bb8\u8be5\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2aKubernetes\u4e8b\u4ef6\uff0c\u8be5\u4e8b\u4ef6\u663e\u793a\u5de5\u4f5c\u8d1f\u8f7d\u9488\u5bf9\u5176\u62e5\u6709\u8bbf\u95ee\u6743\u9650\u7684\u6bcf\u4e2aPSP\u6240\u5177\u6709\u7684\u6240\u6709\u9519\u8bef\u7684\u5e76\u96c6\u3002\u8fd9\u4f7f\u5f97\u6545\u969c\u6392\u9664\u76f8\u5f53\u75db\u82e6\u3002\n\u7f3a\u70b9\u662f\uff0c\u5f53\u5de5\u4f5c\u8d1f\u8377\u4f7f\u6240\u6709\u53ef\u7528\u7684PSP\u5931\u6548\u65f6\uff0c\u51e0\u4e4e\u6ca1\u6709\u63d0\u4f9b\u6709\u7528\u7684\u4fe1\u606f\u3002\n\u8b66\u544a\u5931\u8d25\u521b\u5efa1s(3s\u4e0a\u7684x2)\u540e\u53f0\u542f\u52a8-\u63a7\u5236\u5668(\u7531\u7c7b\u4f3c\u4e8b\u4ef6\u7ec4\u5408\u800c\u6210)\uff1a\u521b\u5efa\u9519\u8bef\uff1aPod&#34\uff1bfluentd-4mqhj&#34\uff1b\u88ab\u7981\u6b62\uff1a\u65e0\u6cd5\u6839\u636e\u4efb\u4f55Pod\u5b89\u5168\u7b56\u7565\u8fdb\u884c\u9a8c\u8bc1\uff1a[]\u3002\n\u6211\u7528\u6765\u5e2e\u52a9\u5206\u7c7b\u8fd9\u4e9b\u95ee\u9898\u7684\u4e00\u4e2a\u7b56\u7565\u662f\u4e34\u65f6kubectl\u5220\u9664PSP\u9650\u5236\uff0c\u8fd9\u6837\u6211\u5c31\u53ea\u80fd\u770b\u5230\u5f02\u5e38\u8bd5\u56fe\u5229\u7528\u7684\u5b9e\u9645PSP\u4e2d\u7684\u9519\u8bef\u3002\u663e\u7136\uff0c\u6b64\u6d4b\u8bd5\u5c06\u4e2d\u65ad\u6b63\u5728\u8fd0\u884c\u7684\u7fa4\u96c6\u7684\u65b0\u5de5\u4f5c\u8d1f\u8f7d(\u65e0PSP\uff1f\u6ca1\u6709\u542f\u52a8)\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u5728\u975e\u751f\u4ea7\u73af\u5883\u4e2d\u8fdb\u884c\u6b64\u7c7b\u5206\u7c7b\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5728\u542f\u7528PSP\u65f6\u9047\u5230\u7684\u6700\u5927\u6311\u6218\u662f\u56f4\u7ed5\u7740\u6211\u4eec\u53d8\u5f02\u7684\u51c6\u5165\u63a7\u5236\u5668\u3002\n\u5728\u5e55\u540e\uff0cKubernetes\u51c6\u5165\u63a7\u5236\u5668(\u5305\u62ecPSP)\u5177\u6709\u590d\u6742\u7684\u4f18\u5148\u7ea7\u5c42\u6b21\u7ed3\u6784\uff0c\u5bfc\u81f4PSP\u8fd0\u884c\u4e24\u6b21\u3002\u4ee5\u4e0b\u662f\u7f51\u7edc\u6302\u94a9\u7684\u8ba2\u8d2d\u987a\u5e8f\uff1a\n\u5185\u7f6e\u53d8\u5f02WebHooks\uff1aPOD\u5b89\u5168\u7b56\u7565\u53d8\u5f02WebHook\u5728\u6b64\u5904\u8fd0\u884c\uff0c\u4ee5\u6839\u636e\u786e\u5b9a\u6700\u9002\u7528\u7684PSP\u4fee\u6539POD\u9ed8\u8ba4\u503c\u3002\n\u5185\u7f6e\u9a8c\u8bc1WebHooks\uff1aPod Security Policies\u9a8c\u8bc1WebHook\u5728\u6b64\u5904\u8fd0\u884c\uff0c\u4ee5\u9a8c\u8bc1Pod\u5bf9\u8c61\u662f\u5426\u4ecd\u7b26\u5408PSP\u8981\u6c42\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u4e0a\u9762\u7684\u8bbe\u7f6e\u662f\u5408\u7406\u7684\uff0c\u53ef\u80fd\u4e5f\u662f\u542f\u7528\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684WebHook\u529f\u80fd\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5b83\u51e0\u4e4e\u6ca1\u6709\u8bb0\u5f55\u5728\u6848(\u9664\u975e\u4f60\u5076\u7136\u53d1\u73b0\u4e86\u6b63\u786e\u7684GitHub\u95ee\u9898\uff0c\u6bd4\u5982istio\u4e0a\u7684\u8fd9\u4e2a\u95ee\u9898)\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0cPSP\u51c6\u5165\u63a7\u5236\u5668\u7684\u9a8c\u8bc1\u7248\u672c\u4ea7\u751f\u7684\u9519\u8bef\u6d88\u606f\u4e3a\u96f6\uff0c\u56e0\u6b64\u60a8\u662f\u5728\u76f2\u76ee\u5730\u5bf9\u5176\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002\n\u6700\u540e\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u53d8\u5f02\u7684\u51c6\u5165\u63a7\u5236\u5668\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u5b83\u7684\u7a81\u53d8\u5bf9\u4e8e\u96c6\u7fa4\u4e2d\u9650\u5236\u6700\u4e25\u683c\u7684PSP\u662f\u5b8c\u5168\u5b89\u5168\u7684\u3002\u800c\u4e14\u8fd9\u4e2a\u9a8c\u8bc1\u53ef\u80fd\u4f1a\u5f88\u7e41\u7410(\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u8fd9\u6837)\uff0c\u6240\u4ee5\u6211\u4eec\u624d\u4f1a\u5199\u8fd9\u672c\u6307\u5357\u3002", "note_en": "My team is building a general purpose kubernetes cluster at Square. As a part of that build out, we implemented Pod Security Policies (PSPs) to protect our clusters from many container escape risks.\n This post is focused on how to do a full deployment of Pod Security Policies with everything locked down and how to grant exceptions. For an introduction to PSPs, please go read the  Official Kubernetes PSP documentation. The official documentation does a good job of showing how to use a simple PSP example, however fails in describing how a fully functioning PSP system would work, how it would be applied by default, and how exceptions could be managed. This post was written to help fill that gap. At the end, we will discuss several pitfalls you might run into while implementing PSPs, and discuss some troubleshooting tactics.\n  Kubernetes is a very powerful and complicated tool; however, this has led to several security issues within the community. Most kubernetes security failures fall into two broad camps:\n  Leveraging all the capabilities of PSPs allow you to dramatically increase the difficulty of a container escape, which shrinks the first major attack vector. PSPs are not a silver bullet (nothing is), but they are a powerful tool to protect your clusters and workloads.\n NOTE: the above is a simplification of a complex topic. For more information, Microsoft recently released an  Attack Matrix for Kubernetes. PSPs allow you to restrict 9 of those 31 challenges.\n   PSPs demonstrated in this post will work with later versions, but you should go through the official docs to ensureall available controls are enumerated.\n In an effort to simplify exception management, the PSP examples in this post take very few &#34;shortcuts&#34; in theirsyntax and explicitly enumerate all capabilities/permissions. Example: for  requiredDropCapabilities we mentionevery capability rather than using &#34;all&#34;.\n The PSPs found in this post avoid AppArmor and SELinux management as either topic is a blog post series unto itself.Only the stubs are mentioned.\n  ---apiVersion: policy/v1beta1kind: PodSecurityPolicymetadata: annotations: kubernetes.io/description: &#39;restricted psp for all standard use-cases&#39; seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default name: restrictedspec:# allowedCapabilities:# - NET_BIND_SERVICE # useful if a workload needs a low port. but by default it&#39;s commented out# allowedHostPaths:# - pathPrefix: &#34;/some/path&#34; # Example of how to allow a specific host path# readOnly: true allowPrivilegeEscalation: false # Disallow privilege escalation to any special capabilities allowedProcMountTypes: # Disallow full /proc mounts, only allow the &#34;default&#34; masked /proc - Default fsGroup: # disallow root fsGroups for volume mounts rule: MustRunAs ranges: - max: 65535 min: 1 hostIPC: false # disallow sharing the host IPC namespace hostNetwork: false # disallow host networking hostPID: false # disallow sharing the host process ID namespace hostPorts: # disallow low host ports (this seems to only apply to eth0 on EKS) - max: 65535 min: 1025 privileged: false # disallow privileged pods readOnlyRootFilesystem: true # change default from &#39;false&#39; to &#39;true&#39; requiredDropCapabilities: # Drop all privileges in the Linux kernel - AUDIT_CONTROL - AUDIT_READ - AUDIT_WRITE - BLOCK_SUSPEND - CHOWN - DAC_OVERRIDE - DAC_READ_SEARCH - FOWNER - FSETID - IPC_LOCK - IPC_OWNER - KILL - LEASE - LINUX_IMMUTABLE - MAC_ADMIN - MAC_OVERRIDE - MKNOD - NET_ADMIN - NET_BIND_SERVICE - NET_BROADCAST - NET_RAW - SETGID - SETFCAP - SETPCAP - SETUID - SYS_ADMIN - SYS_BOOT - SYS_CHROOT - SYS_MODULE - SYS_NICE - SYS_PACCT - SYS_PTRACE - SYS_RAWIO - SYS_RESOURCE - SYS_TIME - SYS_TTY_CONFIG - SYSLOG - WAKE_ALARM runAsGroup: # disallow GID 0 for pods (block root group) rule: MustRunAs ranges: - max: 65535 min: 1 runAsUser: # disallow UID 0 for pods rule: MustRunAsNonRoot seLinux: # Harness for SELinux rule: RunAsAny supplementalGroups: # restrict supplemental GIDs to be non-zero (non-root) rule: MustRunAs ranges: - max: 65535 min: 1 volumes: # allow only these volume types - configMap - downwardAPI - emptyDir - projected - secret# - hostPath # Host paths are disallowed by default.# - persistentVolumeClaim # If you use statefulsets, you&#39;ll need this one.\n NOTE: Here you can find a  list of all kubernetes volume types. You may require a different volume list, just be careful with them.\n   Then you must ensure that all users have access to a PSP. To do that sanely, you grant all users access to the most restrictive PSP.\n Instead of enumerating all users, which could end up missing users added after PSPs are enabled, we grant this restrictive PSP to the  system:authenticated group. The  system:authenticated group is the fallback group for all authenticated users if the user lacks more explicit permissions.\n NOTE: if you are allowing unauthenticated users to deploy workloads, PSPs might not be sufficient to your problem space. However, I will note that a  system:unauthenticated group does exist.\n Attaching this PSP access requires a ClusterRole to grant the permissions and a ClusterRoleBinding to the  system:authenticated group. A ClusterRole and ClusterRoleBinding are used to enable PSP access as we want this restriction to apply to all authenticated users in the cluster. This ClusterRole usage does not supersede other existing RBAC policies limiting user capabilities like creating pods or deployments.\n ---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata: labels: eks.amazonaws.com/component: pod-security-policy kubernetes.io/cluster-service: &#34;true&#34; name: psp-restrictedrules:- apiGroups: - policy resourceNames: - restricted resources: - podsecuritypolicies verbs: - use---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: annotations: kubernetes.io/description: Restrictive PSP bound to system:authenticated to cover all users labels: eks.amazonaws.com/component: pod-security-policy kubernetes.io/cluster-service: &#34;true&#34; name: psp-restrictedroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: psp-restrictedsubjects: - apiGroup: rbac.authorization.k8s.io kind: Group name: system:authenticated\n   Monitoring nodes and workloads? It will probably need some special host mounts, and the dreaded /var/run/docker.sock\n  In the end you&#39;ll need four things for each exception: a custom PSP, a ServiceAccount, either a Role or ClusterRole, and either a RoleBinding or ClusterRoleBinding.\n If your use-case only makes workloads in a single namespace, you can use a Role/RoleBinding. If your exception use-case will reuse a given PSP in a few namespaces, you could use a ClusterRole, and a service account/RoleBinding per namespace. Or you could have one ServiceAccount per NS and a ClusterRole and ClusterRoleBinding which mentions all the ServiceAccounts.\n The pattern I&#39;ve settled on is a PSP, a ClusterRole and a RoleBinding to it. This has the advantage of keeping all the PSP related cluster roles together for auditing purposes. Using a RoleBinding to a ClusterRole also restricts the PSP exceptions to workloads in a single namespace.\n The following shows an example of a PSP exception which covers a fluentd DaemonSet (fluentd exports log messages to their final destination) as it needs a significant number of exceptions compared to the restrictive default PSP:\n ---apiVersion: policy/v1beta1kind: PodSecurityPolicymetadata: annotations: kubernetes.io/description: &#39;tailored PSP for fluentd-&gt;fluentd&#39; seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default name: fluentd-fluentdspec:# allowedCapabilities:# - NET_BIND_SERVICE # useful if a workload needs a low port. but by default it&#39;s commented out allowedHostPaths: - pathPrefix: &#34;/run/fluentd/data&#34; # EXCEPTION: fluentd needs a host-persistent place to store state readOnly: false - pathPrefix: &#34;/var/lib/docker/containers&#34; # EXCEPTION: fluentd needs read access to docker container logs readOnly: true - pathPrefix: &#34;/var/log&#34; # EXCEPTION: fluentd needs read access to host logs readOnly: true allowPrivilegeEscalation: true # EXCEPTION: fluentd needs root to read logs allowedProcMountTypes: # Disallow full /proc mounts, only allow the &#34;default&#34; masked /proc - Default fsGroup: # EXCEPTION: fluentd runs as privileged, so requires fsGroup 0 rule: MustRunAs ranges: - max: 65535 min: 0 hostIPC: false # disallow sharing the host IPC namespace hostNetwork: false # disallow host networking hostPID: false # disallow sharing the host process ID namespace hostPorts: # disallow low host ports (this seems to only apply to eth0 on EKS) - max: 65535 min: 1025 privileged: true # EXCEPTION: fluentd needs root readOnlyRootFilesystem: true # change default from &#39;false&#39; to &#39;true&#39; requiredDropCapabilities: # Drop all privileges in the Linux kernel - AUDIT_CONTROL - AUDIT_READ - AUDIT_WRITE - BLOCK_SUSPEND - CHOWN - DAC_OVERRIDE - DAC_READ_SEARCH - FOWNER - FSETID - IPC_LOCK - IPC_OWNER - KILL - LEASE - LINUX_IMMUTABLE - MAC_ADMIN - MAC_OVERRIDE - MKNOD - NET_ADMIN - NET_BROADCAST - NET_RAW - SETGID - SETFCAP - SETPCAP - SETUID - SYS_ADMIN - SYS_BOOT - SYS_CHROOT - SYS_MODULE - SYS_NICE - SYS_PACCT - SYS_PTRACE - SYS_RAWIO - SYS_RESOURCE - SYS_TIME - SYS_TTY_CONFIG - SYSLOG - WAKE_ALARM runAsGroup: # EXCEPTION: fluentd runs as privileged, so requires GID 0 rule: MustRunAs ranges: - max: 65535 min: 0 runAsUser: rule: MustRunAs # EXCEPTION: fluentd runs as privileged, so requires UID 0 ranges: - max: 65535 min: 0 seLinux: # Harness for SELinux, if we ever engage with it rule: RunAsAny supplementalGroups: # EXCEPTION: fluentd runs as privileged, so requires GID 0 rule: MustRunAs ranges: - max: 65535 min: 0 volumes: # allow only these volume types - configMap - downwardAPI - emptyDir - hostPath # EXCEPTION: Fluentd needs to mount hostPaths - projected - secret# - persistentVolumeClaim # If you use statefulsets, you&#39;ll need this one.\n NOTE: each exception is called out as a YAML comment with the word &#34;EXCEPTION&#34;. This practice lets you track yourexceptions easily in the code which manages them, and makes the auditors happy when they come calling.\n NOTE2: This is laid out identically to the restrictive PSP for ease of using &#34;diff&#34; style tools to validate.\n To permit usage of the above PSP by fluentd, we have this ClusterRole and RoleBinding:\n ---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata: labels: eks.amazonaws.com/component: pod-security-policy kubernetes.io/cluster-service: &#34;true&#34; name: psp-fluentd-fluentd # named for psp-&lt;namespace&gt;-&lt;serviceaccount&gt;rules:- apiGroups: - policy resourceNames: - fluentd-fluentd resources: - podsecuritypolicies verbs: - use---apiVersion: rbac.authorization.k8s.io/v1kind: RoleBindingmetadata: annotations: kubernetes.io/description: &#39;tailored PSP for fluentd-&gt;fluentd&#39; labels: eks.amazonaws.com/component: pod-security-policy kubernetes.io/cluster-service: &#34;true&#34; name: psp-fluentd-fluentd namespace: fluentdroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: psp-fluentd-fluentdsubjects: - kind: ServiceAccount namespace: fluentd name: fluentd\n To use this PSP, the DaemonSet just needs to specify  serviceAccountName: fluentd in their pod specification and run in the fluentd namespace to leverage the RoleBinding.\n  The fluentd workload above will have access to two distinct PSPs... How does that work?\n The PSP Admission Controller runs the given pod against all allowed PSPs in alphabetical order. The first PSP which allows the workload is used. People seem to get hung up on the alphabetical thing, but in practice it&#39;s not a big deal. Workloads in this framework will have access to one or two PSPs: the fully restrictive one, and perhaps aspecial one. It doesn&#39;t really matter which one gets evaluated first, since PSPs are handled in a &#34;if there is a single policy allowing the work, it goes in&#34; pattern. If there is a fully restrictive PSP, then in effect it works similarly to a &#34;default deny&#34; firewall policy.\n If no PSPs allow the workload, you&#39;ll see a kubernetes event which shows the union of ALL errors the workload has against EVERY PSP it has access. This makes troubleshooting quite painful.\n    The downside is there&#39;s almost no useful information given when workloads FAIL all available PSPs.\n   Warning FailedCreate 1s (x2 over 3s) daemonset-controller (combined from similar events): Error creating: pods&#34;fluentd-4mqhj&#34; is forbidden: unable to validate against any pod security policy: []\n A tactic I used to help triage these problems would be to temporarily  kubectl delete psp restrictive so that I would only see the errors from the actual PSP the exception was trying to leverage. Obviously this testing would break new workloads for a running cluster (no PSP? No launch), so we recommend a non-production environment for such triage.\n  By far the hardest challenge we had enabling PSPs was around our Mutating Admission Controllers.\n Under the covers, kubernetes admission controllers (which include PSPs) have a complex precedence hierarchy that causesPSPs to run twice. Here&#39;s the webhook ordering:\n Builtin Mutating Webhooks: Pod Security Policies mutating webhook runs here to modify pod defaults according to thePSP determined to best apply.\n   Builtin Validating Webhooks: Pod Security Policies validating webhook runs here to verify that pod objects stillabide by the PSP requirements.\n All in all, the above is a reasonable setup, and probably the only way to enable all these distinct webhook features. However, it&#39;s barely documented (unless you stumble onto the right github issues like  this one from istio). Worse, the Validating version of the PSP admission controller yields zero error messages, so you&#39;re blind troubleshooting it.\n In the end, if you have a Mutating Admission Controller, you need to ensure that its mutations are completely safe against the most restrictive PSP in your cluster. And this verification will probably be tedious (it was for us), hence why we wrote this guide.", "posttime": "2020-05-09 07:43:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pod,psp", "title": "Kubernetes-Pod\u5b89\u5168\u7b56\u7565", "title_en": "Kubernetes \u2013 Pod Security Policies", "transed": 1, "url": "https://developer.squareup.com/blog/kubernetes-pod-security-policies/", "via": "", "real_tags": ["pod", "psp"]}, {"category": "", "categoryclass": "", "imagename": "5bbe7968162421a1944b4163427a229f.jpg", "infoid": 1001339, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e09\u661f\u4eca\u5929\u5728\u4e09\u661f\u652f\u4ed8\u5317\u7f8e\u526f\u603b\u88c1\u517c\u603b\u7ecf\u7406Sang Ahn(\u901a\u8fc7Android Central)\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5ba3\u5e03\uff0c\u4e09\u661f\u8ba1\u5212\u5728\u4eca\u5e74\u590f\u5929\u63a8\u51fa\u4e09\u661f\u652f\u4ed8\u501f\u8bb0\u5361\u3002\u5b89\u8bf4\uff0c\u4e09\u661f\u5c06\u4e0e\u4e2a\u4eba\u91d1\u878d\u516c\u53f8SoFi\u5408\u4f5c\u63a8\u51fa\u8fd9\u5f20\u5361\uff0c\u5361\u5c06\u7531\u73b0\u91d1\u7ba1\u7406\u8d26\u6237\u652f\u6301\u3002\n\u6839\u636e\u5b89\u7684\u8bf4\u6cd5\uff0c\u4e09\u661f\u8fd8\u5728\u5f00\u53d1\u4e00\u4e2a\u201c\u79fb\u52a8\u4f18\u5148\u7684\u8d44\u91d1\u7ba1\u7406\u5e73\u53f0\u201d\u3002\u4ed6\u7684\u535a\u5ba2\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u8d44\u91d1\u7ba1\u7406\u5e73\u53f0\u6216\u5373\u5c06\u63a8\u51fa\u7684\u501f\u8bb0\u5361\u53ef\u80fd\u6709\u54ea\u4e9b\u529f\u80fd\uff0c\u4f46\u4ed6\u786e\u5b9e\u8868\u793a\uff0c\u4e09\u661f\u5c06\u5728\u201c\u672a\u6765\u51e0\u5468\u201d\u5206\u4eab\u66f4\u591a\u7ec6\u8282\u3002\n\u4e09\u661f\u52a0\u5165\u82f9\u679c\u7684\u884c\u5217\uff0c\u63a8\u51fa\u54c1\u724c\u652f\u4ed8\u5361\u3002\u82f9\u679c\u7684\u662f\u82f9\u679c\u5361\uff0c\u8fd9\u662f\u4e0e\u9ad8\u76db(Goldman Sachs)\u5408\u4f5c\u53d1\u884c\u7684\u4fe1\u7528\u5361\uff0c\u4e8e2019\u5e748\u6708\u63a8\u51fa\u3002\u82f9\u679c\u5361\u65e2\u662f\u4e00\u5f20\u53ef\u4ee5\u653e\u5165\u94b1\u5305\u7684\u949b\u5361\uff0c\u4e5f\u662f\u4e00\u5f20\u53ef\u4ee5\u901a\u8fc7iPhone\u548cApple Watch\u4e0a\u7684Apple Pay\u4f7f\u7528\u7684\u6570\u5b57\u5361\uff0c\u4f60\u53ef\u4ee5\u5728iOS\u7684\u94b1\u5305\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8ddf\u8e2a\u4f60\u5728\u82f9\u679c\u5361\u4e0a\u7684\u6d88\u8d39\u60c5\u51b5\u3002\n\u636e\u62a5\u9053\uff0c\u8c37\u6b4c\u4e5f\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u54c1\u724c\u652f\u4ed8\u5361\uff0c\u5c3d\u7ba1\u8c37\u6b4c\u7684\u652f\u4ed8\u5361\u663e\u7136\u4f1a\u50cf\u4e09\u661f\u7684\u90a3\u6837\u662f\u501f\u8bb0\u5361\u3002\u8c37\u6b4c\u8fd8\u5c06\u4e3a\u8be5\u5361\u63d0\u4f9b\u6d88\u8d39\u8ddf\u8e2a\u5de5\u5177\u3002", "note_en": "Samsung plans to launch a Samsung Pay debit card this summer,  the company announced today in a blog post by Sang Ahn, vice president and general manager of Samsung Pay in North America ( via  Android Central). Samsung will launch the card, which will be backed by a  cash management account, in partnership with personal finance company SoFi, Ahn said.\n Samsung is also developing a \u201cmobile-first money management platform,\u201d according to Ahn. His blog doesn\u2019t detail what features that money management platform or the upcoming debit card may have, but he does say that Samsung will share more details \u201cin the coming weeks.\u201d\n  Samsung joins Apple in offering a branded payment card. Apple\u2019s is the Apple Card, a credit card issued in partnership with Goldman Sachs and launched in  August 2019. The Apple Card is both a titanium card you can put in your wallet and a digital card you can use via Apple Pay on your iPhone and Apple Watch, and you can track spending on your Apple Card inside iOS\u2019s Wallet app.\n Google is reportedly  working on its own branded payment card as well, though Google\u2019s will apparently be a debit card, like Samsung\u2019s. Google will also supposedly offer spending-tracking tools for the card.", "posttime": "2020-05-09 07:13:39", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e09\u661f,samsung", "title": "\u4e09\u661f\u5c06\u4e8e\u4eca\u5e74\u590f\u5929\u63a8\u51fa\u4e09\u661f\u652f\u4ed8\u501f\u8bb0\u5361", "title_en": "Samsung To Launch a Samsung Pay Debit Card This Summer", "transed": 1, "url": "https://www.theverge.com/2020/5/7/21251293/samsung-pay-debit-card-sofi-this-summer", "via": "", "real_tags": ["\u4e09\u661f", "samsung"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001338, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54ce\u5466\u3002\u73b0\u5728\uff0c\u5728\u8fd9\u9879\u4efb\u52a1\u4e2d\u6295\u516512\u4e2a\u5185\u6838\u9700\u8981\u4e24\u500d\u7684\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\u6211\u5bf9\u7ed3\u679c\u611f\u5230\u60ca\u8bb6\uff0c\u56e0\u4e3a\u6211\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u907f\u514d\u4e86\u9519\u8bef\u5171\u4eab\uff0cScott Meyers[5]\u5f88\u597d\u5730\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u7f13\u5b58\u4e00\u81f4\u6027\u5728\u8fd0\u884c\u65f6\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u65f6\u5c31\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\u5f88\u660e\u663e\uff0c\u6211\u6ca1\u6709\u62b1\u4f4f\u5609\u5e74\u534e\u3002\u5982\u679c\u60a8\u8fd4\u56de\u5230card_cores.cpp\uff0c\u60a8\u80fd\u53d1\u73b0\u9519\u8bef\u5417\uff1f\u5982\u679c\u4f60\u731c\u5bf9\u4e86libc&#39\uff1b\u7684rand()\uff0c\u90a3\u4e48\u4f60\u662f\u5bf9\u7684\u3002\u8fd9\u4e2a\u7248\u672c\u7684\u968f\u673a\u751f\u6210\u5668\u5728\u8c03\u7528\u4e4b\u95f4\u7ef4\u62a4\u5185\u90e8\u72b6\u6001\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u8c03\u7528rand()\u7684\u5185\u6838\u90fd\u4f1a\u4f7f\u5305\u542b\u8be5\u72b6\u6001\u7684\u6240\u6709\u5176\u4ed6\u5185\u6838\u7f13\u5b58\u884c\u53d8\u810f\u3002\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u7ebf\u7a0b\u672c\u5730\u91cd\u65b0\u5b9e\u73b0\u968f\u673a\u51fd\u6570\u751f\u6210\u5668\u3002THREAD_LOCAL INT SEED=1\uff1bFLOAT R(){SEED=(214013*SEED+2531011)\uff1bRETURN((SEED&gt\uff1b&gt\uff1b16)&amp\uff1b0xFFFF)/66635.0f\uff1b}\u3002\n$&gt\uff1bclang-O3-o multithard-lm-lpthread multithard.cpp$&gt\uff1btime./multithard&gt\uff1b/dev/null real 0m1.291suser 0m14.734ssys 0m0.109s\u3002\n\u6b64\u65f6\uff0c\u540d\u7247\u5149\u7ebf\u8ddf\u8e2a\u5668\u8fd0\u884c\u65f6\u95f4\u4ece101\u79d2\u7f29\u77ed\u52301.3\u79d2\u3002\u6211\u4f30\u8ba1\uff0c\u5728\u4ec5\u4f9d\u9760CPU\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5df2\u63a5\u8fd1\u6211\u6240\u80fd\u505a\u5230\u7684\u6700\u597d\u6c34\u5e73\u3002\u662f\u65f6\u5019\u6362\u4e2a\u66f4\u5f3a\u58ee\u7684\u4e1c\u897f\u4e86\u3002\n\u5728\u5c1d\u8bd5\u4e86\u7f16\u8bd1\u5668\u4f18\u5316\u548c\u591a\u7ebf\u7a0b\u4e4b\u540e\uff0c\u4e0b\u4e00\u6b65\u662f\u6d89\u53ca\u5230GPU\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u673a\uff0c\u56e0\u4e3a\u6211\u521a\u521a\u4e3a\u81ea\u5df1\u5efa\u9020\u4e86\u4e00\u53f0\u65b0\u7684PC[6]\u300215\u5e74\u6765\uff0c\u6211\u7684GPU(Pascal GeForce GTX 1050Ti)\u9996\u6b21\u4ec5\u6bd4\u6700\u65b0\u7684\u56fe\u7075\u843d\u540e\u4e00\u4ee3\u3002\u8fdb\u884cGPGPU\u7f16\u7a0b\u6709\u4e24\u79cd\u9009\u62e9\uff1aOpenCL\u548cCUDA\u3002\u6211\u5728id Software\u5927\u5b66\u5b66\u4e60\u591a\u5e74\uff0c\u8fd9\u53e5\u683c\u8a00\u201c\u5f00\u653e\u6807\u51c6\u5f88\u597d\u800c\u4e14\u53ef\u79fb\u690d\u201d\u5f15\u53d1\u4e86\u6211\u7684\u601d\u8003\uff0c\u6240\u4ee5\u6211\u8003\u8651\u4f7f\u7528OpenCL\u3002\u7ecf\u8fc7\u4e00\u4e9b\u7814\u7a76\u4e4b\u540e\uff0c\u5b83\u770b\u8d77\u6765\u5f88\u50cfGLSL\uff0c\u60a8\u9700\u8981\u521b\u5efa\u7f13\u51b2\u533a\u3001\u7ed1\u5b9a\u53d8\u91cf\uff0c\u5e76\u901a\u8fc7\u7ed9\u51fa\u5185\u6838\u7684\u6e90\u4ee3\u7801\u6765\u521b\u5efaProgram\u3002\u6211\u5bf9\u4f7f\u7528\u6b64\u65b9\u6cd5\u5904\u7406\u7f16\u8bd1\u5668\u5b9e\u73b0\u7ec6\u8282\u6709\u8fc7\u75db\u82e6\u7684\u8bb0\u5fc6\u3002\u4f7f\u7528Spir-V\u548cclCreateProgramWithBinary\u6709\u4e00\u4e9b\u5e0c\u671b\uff0c\u4f46\u5173\u4e8e\u67d0\u4e9b\u5e73\u53f0\u4e0d\u652f\u6301\u5b83\u7684\u62a5\u9053\u5f88\u5feb\u5c31\u63a9\u76d6\u4e86\u8fd9\u4e00\u70b9\u3002\u6700\u540e\uff0c\u6211\u9009\u62e9\u4e86CUDA\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee4\u4eba\u6109\u5feb\u7684\u4f53\u9a8c\uff0c\u7a0b\u5e8f\u5458\u53ea\u9700\u901a\u8fc7\u7279\u6b8a\u9650\u5b9a\u7b26(\u5982__global__\u548c__device_)\u6807\u8bb0\u4ee3\u7801/\u6570\u636e\u4f4d\u7f6e\uff0c\u800cNVCC\u7f16\u8bd1\u5668\u51e0\u4e4e\u8d1f\u8d23\u6240\u6709\u4e8b\u60c5\u3002\n\u6709\u5f88\u591a\u5173\u4e8eCUDA\u7684\u4e66\u3002\u4ed6\u4eec\u7684\u5c01\u9762\u4e0a\u4f3c\u4e4e\u90fd\u6709\u4e00\u4e2a\u535a\u683c\u7acb\u65b9\u4f53\u3002\u4ee5Cuda\u4e3a\u4f8b\uff0c\u5b83\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u7aef\uff0c\u5b83\u5c06\u6211\u4ece#34\uff1bHelloWorld\uff1b\u5e26\u5230\u4e86\u4e00\u4e9b\u7f16\u8bd1\u548c\u8fd0\u884c\u65f6\u4e0d\u4f1a\u5d29\u6e83\u7684\u4e1c\u897f\u3002\u901a\u8fc7\u6700\u5c11\u7684\u91cd\u6784\u548c\u4e3b\u8981\u4f9d\u8d56\u4e8e\u9650\u5b9a\u7b26\u5173\u952e\u5b57\uff0c\u6211\u60f3\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684card_cuda.cu\u3002\u6211\u539f\u4ee5\u4e3a\u4f1a\u6709\u4e00\u573a\u5f7b\u5e95\u7684\u8868\u6f14\u5927\u5c60\u6740\uff0c\u4f46\u4e8b\u60c5\u6bd4\u9884\u671f\u7684\u8981\u597d\u3002C\uff1a\\Users\\fab&&gt;\uff1bNVCC-o card_cuda-O3 card_cuda.cuwarning\uff1a\u65e0\u6cd5\u9759\u6001\u786e\u5b9a\u5165\u53e3\u51fd\u6570&#39\uff1b_Z8GetColorPh&#39\uff1b\u7684\u5806\u6808\u5927\u5c0fC\uff1a\\Users\\fab&&gt;\uff1bcard_cuda&gt\uff1bnul\u65f6\u95f4\uff1a984ms\u3002\n\u8be5\u8b66\u544a\u53ef\u80fd\u4e0d\u662f\u4e00\u4ef6\u597d\u4e8b(\u7a0d\u540e\u6211\u4f1a\u518d\u8c08\u5230\u8fd9\u4e00\u70b9)\uff0c\u4f46\u7a0b\u5e8f\u8fd0\u884c\u6210\u529f\u3002\u5728\u96f6\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0cGPU\u7684\u6027\u80fd\u6bd412\u6838CPU\u9ad8\u51fa30%\u3002\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6539\u8fdb\u8fd0\u884c\u65f6\uff0c\u6211\u53d1\u73b0CUDA C\u4e13\u4e1a\u7f16\u7a0b\u662f\u4e00\u5ea7\u91d1\u77ff\u3002\u8fd9\u672c\u4e66\u975e\u5e38\u8be6\u7ec6\u5730\u89e3\u91ca\u4e86CUDA\u6838\u5fc3/\u6d41\u591a\u5904\u7406\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u8bc4\u6d4b/\u4f18\u5316\u5185\u6838\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u690d\u6839\u4e8e\u8fd9\u672c\u4e66\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u5b83\u3002\n\u5728\u8fc7\u53bb\u7684\u4e8c\u5341\u5e74\u91cc\uff0cNVIDIA GPU\u67b6\u6784\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316[7]\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u7f16\u7a0b\u6a21\u578b\u4fdd\u6301\u4e0d\u53d8\u3002\u4e00\u4e2aGPU\u9700\u8981\u6570\u5343\u4e2a\u7ebf\u7a0b\u3002\u8fd9\u4e9b\u6307\u4ee4\u88ab\u5206\u7ec4\u4e3a32\u4e2a\u5305(\u79f0\u4e3aWARP)\uff0c\u5176\u4e2d\u6240\u6709\u8fd9\u4e9b\u6307\u4ee4\u90fd\u5177\u6709\u76f8\u540c\u7684\u6307\u4ee4\u6307\u9488(\u56e0\u6b64\u79f0\u4e3aSIMT)\uff0c\u5e76\u4ee5\u9501\u6b65\u65b9\u5f0f\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002\u5c31\u6027\u80fd\u800c\u8a00\uff0c\u6700\u91cd\u8981\u7684\u662f\u8ba9SM\u4fdd\u6301\u826f\u597d\u7684\u6307\u4ee4\u3001\u6570\u636e\u548c\u504f\u5dee\u3002NVIDIA\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3anvprof\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u5141\u8bb8\u6d4b\u91cf\u8bf8\u5982\u5360\u7528\u7387\u548c\u7ecf\u5ea6\u4e2d\u7684\u7ebf\u7a0b\u53d1\u6563\u7b49\u6307\u6807\u3002\u5206\u652f\u6548\u7387\u6d4b\u91cf\u7ecf\u7eb1\u4e2d\u6709\u591a\u5c11\u7eb1\u7ebf\u53d1\u6563\u3002\u6211\u4eec\u7684\u5149\u7ebf\u8ddf\u8e2a\u5668\u7684\u6570\u5b57\u5f88\u597d\u3002\u6211\u539f\u672c\u4ee5\u4e3a\u5b83\u7684\u8868\u73b0\u4f1a\u5f88\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u5149\u7ebf\u5230\u5904\u90fd\u662f\u53cd\u5f39\u7684\uff0c\u4f46\u5b83\u4f3c\u4e4e\u662f\u7a7a\u95f4\u4f4d\u7f6e\u5e2e\u52a9\u7ebf\u6761\u8fde\u8d2f\u7684\u3002\u53e6\u4e00\u8fb9\u7684\u5165\u4f4f\u7387\u7cdf\u7cd5\u900f\u9876(\u6700\u597d\u662f1.0)\u3002\u4f3c\u4e4eGPU\u7684SMS\u4e0d\u80fd\u5728\u98de\u884c\u4e2d\u4fdd\u6301\u8db3\u591f\u7684\u66f2\u901f\uff0c\u8fd9\u5bfc\u81f4\u4e86\u9965\u997f\u3002\u8fd9\u4e0e\u53d1\u51fa\u7684\u8b66\u544aNVCC\u76f8\u5173\u3002\u56e0\u4e3a\u5149\u7ebf\u8ddf\u8e2a\u5668\u4f7f\u7528\u9012\u5f52\uff0c\u6240\u4ee5\u5b83\u4f7f\u7528\u4e86\u5927\u91cf\u5806\u6808\u3002\u5b9e\u9645\u4e0a\u662f\u5982\u6b64\u4e4b\u591a\uff0c\u4ee5\u81f3\u4e8eSM\u65e0\u6cd5\u8ba9\u66f4\u591a\u7684\u4eba\u5b58\u6d3b\u4e0b\u6765\u3002\u95ee\u9898\u5728\u4e8e\u4ee3\u7801\u7684\u9012\u5f52\u6027\u8d28\u3002\u8fd9\u5c31\u662f\u7f16\u8bd1\u5668\u65e9\u5148\u65e0\u6cd5\u731c\u6d4b\u5806\u6808\u5927\u5c0f\u7684\u539f\u56e0\u3002\u4fee\u6539raytracer\u4ee5\u4f7f\u7528\u5faa\u73af\u800c\u4e0d\u662f\u9012\u5f52(card_cudb.cu)\u51cf\u5c11\u4e86\u5806\u6808\u7684\u6d88\u8017\u91cf\u3002\u8fd9\u610f\u5473\u7740\u5360\u7528\u65f6\u95f4\u662f\u539f\u6765\u7684\u4e24\u500d\uff0c\u8fd0\u884c\u65f6\u95f4\u51cf\u5c11\u4e86\u4e00\u534a\uff01C\uff1a\\Users\\fab&gt\uff1bnvcc-o card_cudb-O3 card_cudb.cuC\uff1a\\Users\\fab&gt\uff1bnvprof--\u5df2\u5b9e\u73b0\u7684\u6307\u6807_\u5360\u7528\u5361_", "note_en": "Oops. Throwing 12 cores at the task now takes twice as long to complete. I was surprised by the result since I was careful to avoid false sharing, an issue well described by Scott Meyers  [5] that arise when cache coherency dominates runtime. I had obviously failed to cuddle the cachelines. If you go back to  card_cores.cpp, can you spot the mistake?  If you guessed libc&#39;s rand(), you were right. This version of the random generator maintains an internal state between calls which mean every core calling rand() made all other core cacheline containing that state dirty. The solution was to re-implement the random function generator with a thread local.  thread_local int seed = 1;float R() { seed = ( 214013 * seed + 2531011); return ((seed &gt;&gt; 16) &amp; 0xFFFF) / 66635.0f;}\n  $&gt; clang -O3 -o multi_thard -lm -lpthread multi_thard.cpp$&gt; time ./multi_thard &gt; /dev/null  real 0m1.291suser 0m14.734ssys 0m0.109s\n At this point, the Business Card Raytracer runtime was down from 101 seconds to 1.3 seconds. I assessed it was close to the best I could do while relying only on a CPU. It was time to move onto something beefier.\n   After playing with compiler optimizations and multi-threading, the next step was to involve the GPU. It was a good timing since I had just finished building myself a new PC  [6]. For the first time in 15 years my GPU (Pascal GeForce GTX 1050 Ti) was only one generation behind the latest Turing.     To do GPGPU programming there are two choices named OpenCL and CUDA. My years studying at University of id Software and the adage &#34;open standards are Good and Portable&#34; triggered so I contemplated using OpenCL. After a little bit of investigation it looked a lot like GLSL where you need to create buffers, bind variables, and createProgram by giving the source code of the kernel. I had painful memories of dealing with compiler implementation details with this method. There was some hope to use Spir-V and clCreateProgramWithBinary but reports of it not being supported on certain platforms buried it quick. In the end, I went with CUDA.     It turned out to be a delightful experience where a programmer only need to tag code/data location via special qualifiers such as __global__ and __device_ with nvcc compiler taking care of almost everything.\n   There are a lot of books about CUDA. They all seem to have a Borg cube on their cover.                                       &#34;Cuda by Example&#34; was a good starter which took me from &#34;HelloWorld&#34; to something that compiled and ran without crashing. With minimal refactoring and relying mostly on qualifier keyword, I came up with a naive  card_cuda.cu.   I was expecting a total performance carnage but things went better than expected.   C:\\Users\\fab&gt;nvcc -o card_cuda -O3 card_cuda.cuwarning : Stack size for entry function &#39;_Z8GetColorPh&#39; cannot be statically determined C:\\Users\\fab&gt;card_cuda &gt; NUL Time: 984ms\n The warning is probably not a good thing (I&#39;ll get back to this later) but the program ran successfully. With zero optimization the GPU outperformed a 12-core CPU by 30%.\n   To improve runtime further, I found &#34;Professional CUDA C Programming&#34; to be a gold mine. The book explains in great details how the CUDA core/stream multiprocessor work and how to profile/optimize a kernel. The rest of this article is rooted in this book, I highly recommend it.\n   Over the past two decades, NVidia GPU architecture has evolved drastically  [7]. Fortunately, the programming model has remained unchanged. A GPU is fed thousands of threads. Those are grouped in packs of 32 (called warps) where all of them have the same Instruction Pointer (hence the name SIMT) and execute the same instruction in lockstep. Performance-wise, the most important thing is to keep the SM well fed with instructions, data, and warps.  Nvidia provides a profiling tool named nvprof which allows to measure metrics such as occupancy and thread divergence in a warp.   &#34;Branch Efficiency&#34; measures how much threads in a warp diverge. The figure for our raytracer is good. I was expecting it to perform badly since rays bounce everywhere but it seems spacial locality helped thread to be coherent.    &#34;Achieved Occupancy&#34; on the other side was abysmal (best is 1.0). It seems the GPU SMs were not able to keep enough warp in-flight which resulted in starvation. This is correlated with the warning nvcc issued. Because the raytracer uses recursion, it uses a lot of stacks. So much actually that the SM cannot keep more than a few alive.   The problem is the recursive nature of the code. That is why the compiler was unable to guess the stack size earlier.Revising the raytracer to use a loop instead of recursion ( card_cudb.cu) reduced the amount of stack consumed. This translated in an occupancy twice as good and halved runtime!  C:\\Users\\fab&gt;nvcc -o card_cudb -O3 card_cudb.cuC:\\Users\\fab&gt;nvprof --metrics achieved_occupancy card_cudb &gt; NULAverage Achieved Occupancy 0.282478C:\\Users\\fab&gt;card_cudb &gt; NUL Time: 546ms", "posttime": "2020-05-09 07:13:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u540d\u7247,business", "title": "\u91cd\u6e29\u540d\u7247\u5149\u7ebf\u8ddf\u8e2a\u5668", "title_en": "Revisiting the Business Card Raytracer", "transed": 1, "url": "https://fabiensanglard.net/revisiting_the_businesscard_raytracer/index.html", "via": "", "real_tags": ["\u540d\u7247", "business"]}, {"category": "", "categoryclass": "", "imagename": "60483bbdd0a4e039d48bc718d580d881.png", "infoid": 1001337, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JavaScript\u9884\u5904\u7406\u5668\u53ef\u4ee5\u5e2e\u52a9\u60a8\u66f4\u8f7b\u677e\u3001\u66f4\u65b9\u4fbf\u5730\u521b\u4f5cJavaScript\u3002\u4f8b\u5982\uff0cCoffeeScript\u53ef\u4ee5\u5e2e\u52a9\u9632\u6b62\u5bb9\u6613\u51fa\u9519\uff0c\u5e76\u63d0\u4f9b\u66f4\u5e72\u51c0\u7684\u8bed\u6cd5\uff0c\u800cBabel\u53ef\u4ee5\u4e3a\u53ea\u652f\u6301ECMAScript 5\u7684\u6d4f\u89c8\u5668\u5e26\u6765ECMAScript 6\u7279\u6027\u3002\n\u9700\u8981\u4f7f\u7528Babel\u6765\u5904\u7406\u5305\u88f9\u5bfc\u5165\u3002\u5982\u679c\u60a8\u9700\u8981\u4e0d\u540c\u7684\u9884\u5904\u7406\u5668\uff0c\u8bf7\u5148\u5220\u9664\u6240\u6709\u8f6f\u4ef6\u5305\u3002\n\u79c1\u4eba\u94a2\u7b14\u9690\u85cf\u5728CodePen\u4e0a\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u9664\u4e86\u60a8\u3002\u60a8\u4ecd\u7136\u53ef\u4ee5\u5171\u4eab\u5b83\u4eec\uff0c\u5176\u4ed6\u4eba\u4e5f\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\uff0c\u53ea\u662f\u4ed6\u4eec\u65e0\u6cd5\u901a\u8fc7\u641c\u7d22\u6216\u6d4f\u89c8\u627e\u5230\u5b83\u4eec\u3002\n\u5347\u7ea7\u5230PRO\u3002\n\u5982\u679c\u542f\u7528\uff0c\u9884\u89c8\u9762\u677f\u5c06\u5728\u60a8\u7f16\u5199\u4ee3\u7801\u65f6\u81ea\u52a8\u66f4\u65b0\u3002\u5982\u679c\u7981\u7528\uff0c\u8bf7\u4f7f\u7528\u8fd0\u884c\u6309\u94ae\u8fdb\u884c\u66f4\u65b0\u3002\n\u5982\u679c\u542f\u7528\uff0c\u60a8\u7684\u4ee3\u7801\u5c06\u5728\u60a8\u4e3b\u52a8\u4fdd\u5b58\u94a2\u7b14\u65f6\u683c\u5f0f\u5316\u3002\u6ce8\u610f\uff1a\u60a8\u7684\u4ee3\u7801\u5728\u683c\u5f0f\u5316\u8fc7\u7a0b\u4e2d\u4f1a\u5c55\u5f00\u3002\n\u6a21\u677f\u662f\u53ef\u7528\u4e8e\u542f\u52a8\u5176\u4ed6\u94a2\u7b14\u7684\u94a2\u7b14\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6a21\u677f\uff0c\u6216\u5728\u6587\u6863\u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\nPens\u7684\u5c4f\u5e55\u622a\u56fe\u663e\u793a\u5728\u79fb\u52a8\u6d4f\u89c8\u5668\u3001RSS\u8ba2\u9605\u6e90\u3001\u9009\u62e9\u56fe\u50cf\u800c\u4e0d\u662fIFRAME\u7684\u7528\u6237\uff0c\u4ee5\u53ca\u793e\u4ea4\u5a92\u4f53\u5171\u4eab\u4e2d\u3002\n\u6b64\u7b14\u6b63\u5728\u4f7f\u7528\u7531CodePen\u751f\u6210\u7684\u9ed8\u8ba4\u5c4f\u5e55\u622a\u56fe\u3002\u5347\u7ea7\u5230PRO\u53ef\u4e0a\u8f7d\u60a8\u81ea\u5df1\u7684\u7f29\u7565\u56fe\uff0c\u8fd9\u4e9b\u7f29\u7565\u56fe\u5c06\u5728\u6574\u4e2a\u7ad9\u70b9\u7684\u6b64\u7b14\u9884\u89c8\u4e2d\u663e\u793a\uff0c\u5e76\u5728\u5171\u4eab\u5230\u793e\u4ea4\u5a92\u4f53\u65f6\u663e\u793a\u3002\n\u5347\u7ea7\u5230PRO", "note_en": "JavaScript preprocessors can help make authoring JavaScript easier and more convenient. For instance, CoffeeScript can help prevent easy-to-make mistakes and offer a cleaner syntax and Babel can bring ECMAScript 6 features to browsers that only support ECMAScript 5.\n  Babel is required to process package imports. If you need a different preprocessor remove all packages first.\n  Private Pens are hidden everywhere on CodePen, except to you. You can still share them and other people can see them, they just can&#39;t find them through searching or browsing.\n Upgrade to PRO\n If enabled, the preview panel updates automatically as you code. If disabled, use the &#34;Run&#34; button to update.\n If enabled, your code will be formatted when you actively save your Pen.  Note: your code becomes un-folded during formatting.\n  Templates are Pens that can be used to start other Pens. You can  view all of your templates, or  learn more in the documentation.\n Screenshots of Pens are shown in mobile browsers, RSS feeds, to users who chose images instead of iframes, and in social media sharing.\n This Pen is using the default Screenshot, generated by CodePen. Upgrade to  PRO to upload your own thumbnail that will be displayed on previews of this pen throughout the site and when sharing to social media.\n Upgrade to PRO", "posttime": "2020-05-09 07:12:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,flutter,codesen,releases", "title": "Codesen\u53d1\u5e03\u5728\u7ebf\u98a4\u632f\u7f16\u8f91\u5668", "title_en": "Codepen releases online Flutter editor", "transed": 1, "url": "https://codepen.io/pen/editor/flutter", "via": "", "real_tags": ["\u53d1\u5e03", "flutter", "codesen", "releases"]}, {"category": "", "categoryclass": "", "imagename": "7fb9a9f522662a5cd4237bb5fd4f3b98.jpg", "infoid": 1001336, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u5728\u5373\u5c06\u6388\u4e88\u80a1\u7968\u671f\u6743\u65f6\u5ba3\u5e03\u4e86\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u6d88\u606f\uff0c\u8be5\u671f\u6743\u6709\u671b\u4f7f\u4ed6\u81f3\u5c11\u5728\u7eb8\u9762\u4e0a\u589e\u52a0\u8fd110\u4ebf\u7f8e\u5143\u7684\u8d22\u5bcc\u3002\n\u201c\u6211\u51e0\u4e4e\u5356\u6389\u4e86\u6240\u6709\u7684\u5b9e\u7269\uff0c\u201d\u7279\u65af\u62c9\u516c\u53f8(Tesla Inc.)\u8bf4\u3002\u9996\u5e2d\u6267\u884c\u5b98\u4e8e5\u67081\u65e5\u5728Twitter\u4e0a\u53d1\u5e16\u3002\u201c\u4e0d\u4f1a\u62e5\u6709\u4efb\u4f55\u623f\u5b50\u3002\u201d", "note_en": "On the cusp of a stock-option grant that promises to make him nearly $1 billion richer, at least on paper, Elon Musk made a surprising announcement.\n  \u201cI am selling almost all physical possessions,\u201d the Tesla Inc. chief executive tweeted on May 1. \u201cWill own no house.\u201d", "posttime": "2020-05-09 06:57:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b,musk,\u671f\u6743", "title": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\uff0c\u79d1\u6280\u516c\u53f8\u73b0\u91d1\u8d2b\u4e4f\u7684\u4ebf\u4e07\u5bcc\u7fc1", "title_en": "Elon Musk, Tech\u2019s Cash-Poor Billionaire", "transed": 1, "url": "https://www.wsj.com/articles/elon-musk-techs-cash-poor-billionaire-11588967043", "via": "", "real_tags": ["\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "musk", "\u671f\u6743"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1001335, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662f\u7684\uff0c\u8fd9\u6b21\u662f\u771f\u7684\u3002\u4e3a\u4e86\u6211\u4eec\u793e\u533a\u7684\u5065\u5eb7\u548c\u5b89\u5168\uff0c\u6211\u4eec\u5df2\u7ecf\u51b3\u5b9a\u5c06DEF CON 28\u8bbe\u4e3a\u201c\u8054\u7f51\u5b89\u5168\u6a21\u5f0f\u201d\u3002\u539f\u5b9a\u4e8e2020\u5e748\u67086\u65e5\u81f39\u65e5\u4e3e\u884c\u7684DEF CON\u9762\u5bf9\u9762\u4f1a\u8bae\u5df2\u88ab\u53d6\u6d88\u3002\u8bf7\u770b\u8fd9\u91cc\u7684\u516c\u544a\uff1ahttps://forum.defcon.org/node/232005\u9ed1\u5e3d\u7f8e\u56fd\u516c\u53f8\u4e5f\u66f4\u65b0\u4e86\u4ed6\u4eec\u7684\u8ba1\u5212\u3002\u8be6\u60c5\u8bf7\u70b9\u51fb\u6b64\u5904\uff1ahttps://www.blackhat.com/us-20/updates.html\u3002\n\u5c3d\u7ba1\u6211\u4eec\u7684\u9762\u5bf9\u9762\u62c9\u65af\u7ef4\u52a0\u65af\u6d3b\u52a8\u88ab\u53d6\u6d88\uff0c\u6211\u4eec\u5c06\u57288\u67087\u65e5\u81f39\u65e5(\u5468\u4e94\u81f3\u5468\u65e5)\u8fd0\u884cDEF CON 28\u5b89\u5168\u6a21\u5f0f\uff0c\u5468\u56db\u5c06\u4e3e\u884c101\u8fce\u65b0\u6d3b\u52a8-\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u8fdc\u7a0b\u7684\u3002\u6211\u4eec\u5c06\u5229\u7528DEF CON\u8bba\u575b\u534f\u8c03\u60a8\u53c2\u4e0e\u7684\u5404\u79cd\u65b9\u5f0f\u3002\u5728\u90a3\u91cc\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5ba3\u5e03\u4ed6\u4eec\u7684\u8ba1\u5212\uff0c\u8fdb\u884c\u6ce8\u518c\uff0c\u53d1\u5e03\u56fe\u7247\u548c\u89c6\u9891\uff0c\u5e76\u8ba9\u4eba\u4eec\u53c2\u4e0e\u8fdb\u6765\u3002\u7136\u540e\u57288\u67086\u65e5\uff0c\u6211\u4eec\u5c06\u5f00\u653eDEF CON Discord.io/DC\u670d\u52a1\u5668\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u52a0\u5165\uff0c\u5f00\u59cb\u4ed6\u4eec\u7684\u9a97\u5c40\u4f53\u9a8c\uff01\n\u5982\u679c\u60a8\u5728DEF CON\u5b98\u65b9\u9152\u5e97\u8857\u533a(\u51ef\u6492\u5bab\u3001\u54c8\u62c9\u65af\u3001\u6797\u80af\u3001\u5f17\u62c9\u660e\u6208\u3001\u597d\u83b1\u575e\u661f\u7403\u3001\u5df4\u9ece\u3001\u5df4\u5229\u3001\u514b\u4f26\u5a01\u5c14)\u5185\u9884\u8ba2\uff0c\u51ef\u6492\u5a31\u4e50\u5c06\u81ea\u52a8\u53d6\u6d88\u60a8\u7684\u9884\u8ba2\uff0c\u5e76\u5c06\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u901a\u77e5\u60a8\u3002\u5982\u679c\u60a8\u5728\u6211\u4eec\u7684DEF CON\u96c6\u56e2\u533a\u5916\u9884\u8ba2\u4e86\u623f\u95f4\uff0c\u8bf7\u76f4\u63a5\u8054\u7cfb\u9152\u5e97\u53d6\u6d88\u60a8\u7684\u9884\u8ba2\u3002\nDef Con 29\u5b9a\u4e8e2021\u5e748\u67085\u65e5\u81f38\u65e5\u4e3e\u884c\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u9884\u8ba2DEF CON 29\u4e2a\u9152\u5e97\u623f\u95f4\u3002\nDEF CON 28\u73b0\u573a\u6b63\u5f0f\u53d6\u6d88\uff0c\u4f46DEF CON\u8bb2\u5ea7\u3001\u7814\u8ba8\u4f1a\u3001\u6f14\u793a\u5b9e\u9a8c\u5ba4\u548c\u57f9\u8badCFPS\u63d0\u4ea4\u7684\u6587\u4ef6\u5c06\u6309\u539f\u8ba1\u5212\u5982\u671f\u5904\u7406\u3002\n\u662f\u7684\uff0c\u8bf7\u67e5\u770b\u60a8\u7684\u72b6\u6001\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u8be6\u7ec6\u4fe1\u606f\u4ee5\u83b7\u53d6\u53cd\u9988\u4fe1\u606f\u3002CFP\u3001\u57f9\u8bad\u3001\u7814\u8ba8\u4f1a\u548c\u6f14\u793a\u5b9e\u9a8c\u5ba4\u7684\u72b6\u6001\u7535\u5b50\u90ae\u4ef6\u90fd\u5e94\u6309\u539f\u8ba1\u5212\u57286\u6708\u7684\u7b2c\u4e00\u5468(\u5982\u679c\u4e0d\u662f\u66f4\u65e9)\u5230\u8fbe\u3002\u5f53\u6240\u6709\u7533\u8bf7\u90fd\u5df2\u6536\u5230\u901a\u77e5\u540e\uff0c\u6211\u4eec\u5c06\u901a\u8fc7DEF CON\u5b98\u65b9\u8d26\u6237\u53d1\u5e03\u6700\u65b0\u6d88\u606f\u3002\n\u4e0d\u53ef\u4ee5\uff0c\u5f53DEF CON 29\u8981\u6c42\u5f00\u653e\u5185\u5bb9\u65f6\uff0c\u60a8\u5fc5\u987b\u63d0\u4ea4\u4e00\u4efd\u65b0\u7684\u8868\u683c\u3002\u65f6\u95f4\u4f1a\u8fc7\u5f97\u592a\u4e45\uff0c\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u60a8\u8fdb\u884c\u4e86\u66f4\u65b0\u4ee5\u4fdd\u6301\u66f4\u65b0\u3002\n\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\uff0c\u4f46\u6b63\u5728\u5185\u90e8\u8bc4\u4f30\u5404\u79cd\u9009\u62e9\u3002\u5982\u679c\u60a8\u7684\u7533\u8bf7\u7b26\u5408\u6211\u4eec\u7684\u6807\u51c6\u63a5\u53d7\u6807\u51c6\uff0c\u6211\u4eec\u5c06\u76f4\u63a5\u4e0e\u60a8\u6c9f\u901a\u9009\u9879\u3002\n\u5bf9\u4e8e\u8bb2\u5ea7\u3001\u7814\u8ba8\u4f1a\u3001\u6f14\u793a\u5b9e\u9a8c\u5ba4\u548c\u57f9\u8bad\uff0c\u652f\u4ed8\u916c\u91d1\u3001\u5fbd\u7ae0\u6216\u652f\u7968\u4ecd\u5c06\u53d7\u5230\u5c0a\u91cd\u3002\u8fdb\u5165\u5fbd\u7ae0\u5f62\u5f0f\u7684\u916c\u91d1\u5c06\u57282021\u5e74\u5ef6\u7eed\u5230DEF CON 29\uff0c\u4f46\u65c5\u884c\u548c\u4f4f\u5bbf\u4e0d\u4f1a\u3002\n\u6211\u4eec\u8ba1\u5212\u5728DEF CON\u8bba\u575b\u4e0a\u7ec4\u7ec7\u8fd9\u91cc\u7684\u4e00\u5207\uff0c\u7136\u540e\u57288\u67086\u65e5\u6211\u4eec\u5c06\u5f00\u653eDEF CON Discord.io/DC\u670d\u52a1\u5668\uff0c\u4f9b\u6bcf\u4e2a\u4eba\u52a0\u5165\u5e76\u5f00\u59cb\u4ed6\u4eec\u7684Con\u4f53\u9a8c\uff01Def Con\u5b89\u5168\u6a21\u5f0f\u5c06\u4e8e8\u67087\u65e5\u81f39\u65e5(\u5468\u4e94\u81f3\u5468\u65e5)\u8fd0\u884c\uff0c\u5468\u56db\u5c06\u4e3e\u884c101\u573a\u8fce\u65b0\u6d3b\u52a8\u3002\u9f13\u52b1\u60f3\u8981\u4e3e\u529e\u865a\u62df\u6d3b\u52a8\u3001\u7ade\u8d5b\u6216\u6d3e\u5bf9\u7684\u5185\u5bb9\u7ec4\u7ec7\u8005\u4f7f\u7528DEF CON\u8bba\u575b\u4f5c\u4e3a\u4e0e\u4e0e\u4f1a\u8005\u8054\u7cfb\u548c\u5171\u4eab\u8ba1\u5212\u7684\u67a2\u7ebd\u3002\u81ea\u53bb\u5e74\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u6dfb\u52a0\u4e86\u76f8\u518c\u3001\u89c6\u9891\u4e0a\u4f20\u652f\u6301\uff0c\u4ee5\u53ca\u4e00\u6b3e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u5e0c\u671b\u6709\u4e00\u4e2a\u8bba\u575b\u7684\u5b58\u5728\uff0c\u8bf7\u9605\u8bfb\u89c4\u5219\uff0c\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\uff0c\u7136\u540e\u5f00\u59cb\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u4e5f\u9605\u8bfb\u8bba\u575b\u89c4\u5212\u516c\u544a\u3002", "note_en": "Yes, for really real this time. For the health and safety of our community, the decision has been made to put DEF CON 28 into \u201csafe-mode with networking\u201d. The DEF CON in-person conference scheduled August 6-9, 2020 has been canceled.   See the announcement here:  https://forum.defcon.org/node/232005  Black Hat USA also has an update to their plans. Details here:  https://www.blackhat.com/us-20/updates.html\n    Even though our in-person Las Vegas event is canceled, we will run DEF CON 28 Safe Mode August 7-9 (Friday through Sunday) with 101 orientation Thursday - all of it remote. We will use the DEF CON Forums to coordinate all the various ways for you to participate. That is where everyone can announce their plans, do signups, post pictures and videos and get people involved.  Then on August 6th we will open the  DEF CON discord.io/dc server up for everyone to join and start their con experience!\n       If you made a reservation within the official DEF CON hotel block (Caesars Palace, Harrahs, Linq, Flamingo, Planet Hollywood, Paris, Bally&#39;s, Cromwell), your reservation will automatically be canceled by Caesars Entertainment and you will be notified by email. If you made a reservation outside of our DEF CON group block, please contact the hotel directly to cancel your reservation.\n   DEF CON 29 is scheduled for August 5-8, 2021. You can reserve  DEF CON 29 hotel rooms now.\n   DEF CON 28 on-site is officially canceled, however DEF CON talks, workshops, demo labs, and training CFPs submissions will be processed on schedule as originally planned.\n   Yes, please review the details in your status email for feedback information. CFP, training, workshops and demo labs status emails should all arrive as originally planned in the first weeks of June, if not earlier. We will post an update via official DEF CON accounts when all applications have been notified.\n   No, you will have to submit a fresh form when the DEF CON 29 calls for content open. Too much time will have passed and we want to make sure you have made updates to keep it fresh.\n   We don&#39;t know yet, but are reviewing options internally. If your application meets our standard criteria for acceptance we will communicate options with you directly.\n   Payment Honorariums, badge(s) or check(s), will still be honored for talks, workshops, demo labs, and training. Honorariums in form of entry Badge(s) will carry over for DEF CON 29 in 2021, but travel and accommodations will not.\n   We plan to organize everything  here on the DEF CON Forums, and then on August 6th we will open the  DEF CON discord.io/dc server up for everyone to join and start their con experience! DEF CON Safe Mode will then run August 7-9 (Friday through Sunday) with 101 orientation Thursday.  Content organizers that want to run a virtual event, contest, or party are encouraged to use the DEF CON Forums as a hub to connect with attendees and share plans. Since last year we have added photo albums, video upload support, along with a mobile app. If you wish to have a forums presence please read the rules, create an account, and get started. We recommend reading the  forums planning announcement too.", "posttime": "2020-05-09 06:57:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "defcon,def", "title": "Defcon 28\u771f\u7684\u88ab\u53d6\u6d88\u4e86", "title_en": "Defcon 28 Is Really Canceled", "transed": 1, "url": "https://defcon.org/html/defcon-safemode/dc-safemode-faq.html", "via": "", "real_tags": ["defcon", "def"]}]