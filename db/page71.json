[{"category": "", "categoryclass": "", "imagename": "7b7e43e7fda46fbc744c7355f8768fae.jpeg", "infoid": 1006934, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f-\u636e\u7279\u6717\u666e\u653f\u5e9c\u7684\u4e00\u540d\u5b98\u5458\u79f0\uff0c\u53f8\u6cd5\u90e8\u5c06\u63d0\u8bae\u53d6\u6d88\u5728\u7ebf\u5e73\u53f020\u591a\u5e74\u6765\u4eab\u6709\u7684\u6cd5\u5f8b\u4fdd\u62a4\uff0c\u4ee5\u52aa\u529b\u8ba9\u79d1\u6280\u516c\u53f8\u5728\u5982\u4f55\u76d1\u7ba1\u5176\u5185\u5bb9\u65b9\u9762\u66f4\u52a0\u8d1f\u8d23\u3002\n\u8be5\u90e8\u95e8\u63d0\u51fa\u7684\u6539\u9769\u5efa\u8bae\u6700\u65e9\u5c06\u4e8e\u5468\u4e09\u5ba3\u5e03\uff0c\u65e8\u5728\u523a\u6fc0\u5728\u7ebf\u5e73\u53f0\u5728\u89e3\u51b3\u7f51\u7ad9\u4e0a\u7684\u975e\u6cd5\u548c\u6709\u5bb3\u884c\u4e3a\u65b9\u9762\u66f4\u52a0\u79ef\u6781\uff0c\u5e76\u5728\u505a\u51fa\u66f4\u516c\u5e73\u548c\u66f4\u4e00\u81f4\u7684\u51b3\u5b9a\u65f6.", "note_en": "WASHINGTON\u2014The Justice Department is set to propose a roll back of legal protections that online platforms have enjoyed for more than two decades, in an effort to make tech companies more responsible in how they police their content, according to a Trump administration official.\n  The department\u2019s proposed reforms, to be announced as soon as Wednesday, are designed to spur online platforms to be more aggressive in addressing illicit and harmful conduct on their sites, and to be fairer and more consistent in their decisions to...", "posttime": "2020-06-17 19:48:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u8bae,department,\u7279\u6717\u666e", "title": "\u53f8\u6cd5\u90e8\u5c06\u63d0\u8bae\u9650\u5236\u5bf9\u4e92\u8054\u7f51\u516c\u53f8\u7684\u4fdd\u62a4", "title_en": "Justice Department to Propose Limiting Internet Firms\u2019 Protections", "transed": 1, "url": "https://www.wsj.com/articles/justice-department-to-propose-limiting-internet-firms-protections-11592391602", "via": "", "real_tags": ["\u63d0\u8bae", "\u7279\u6717\u666e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006933, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Paycheck Protection Program(PPP)\u662f\u7531\u56fd\u4f1a\u6839\u636eCARE\u6cd5\u6848\u6388\u6743\u7684\uff0c\u76ee\u524d\u7531\u5c0f\u4f01\u4e1a\u7ba1\u7406\u5c40(SBA)\u76d1\u7763\u3002PPP\u8ba1\u5212\u7684\u76ee\u6807\u662f\u5411\u7ecf\u5386\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u56f0\u96be\u7684\u5c0f\u4f01\u4e1a\u63d0\u4f9b1%\u7684\u5229\u606f\u8d37\u6b3e\uff0c\u5982\u679c\u8fd9\u4e9b\u4f01\u4e1a\u4fdd\u7559\u5458\u5de5\u7684\u5de5\u8d44\uff0c\u5219\u514d\u9664\u8fd9\u4e9b\u8d37\u6b3e\u3002\n\u5c3d\u7ba1\u8fd9\u4e9b\u8d37\u6b3e\u7531SBA\u63d0\u4f9b\u635f\u5931\u62c5\u4fdd\uff0c\u4f46\u7f8e\u8054\u50a8(Federal Reserve)\u63a8\u51fa\u4e86\u81ea\u5df1\u7684\u8ba1\u5212\uff0c\u540d\u4e3aPaycheck Protection Program\u6d41\u52a8\u6027\u5de5\u5177\uff0c\u4ee5\u507f\u8fd8\u53d1\u653e\u8fd9\u4e9b\u8d37\u6b3e\u7684\u8d37\u6b3e\u4eba\u3002\u622a\u81f36\u670810\u65e5\uff0c\u7f8e\u8054\u50a8\u5df2\u7ecf\u507f\u8fd8\u4e86\u8fd9\u4e9b\u8d37\u6b3e\u4e2d\u7684570\u4ebf\u7f8e\u5143\uff0c\u800cSBA\u6279\u51c6\u7684\u8d37\u6b3e\u603b\u989d\u8d85\u8fc75,000\u4ebf\u7f8e\u5143\u3002\n\u5173\u4e8e\u7f8e\u8054\u50a8\u7684\u8fd9\u4e9b\u8865\u507f\uff0c\u5947\u602a\u7684\u662f\uff0c\u4ee4\u4eba\u9707\u60ca\u768453\u4ebf\u7f8e\u5143\u7684\u8865\u507f\uff0c\u5373\u7f8e\u8054\u50a8\u507f\u8fd8\u768457\u7f8e\u5143\u4e2d\u76849%\uff0c\u6d41\u5411\u4e86\u65b0\u6cfd\u897f\u5dde\u7684\u4e00\u5bb6\u5c0f\u94f6\u884c-\u5341\u5b57\u6cb3\u94f6\u884c(Cross River Bank)\u3002\u6839\u636eSBA\u7684\u6570\u636e\uff0c\u622a\u81f35\u670830\u65e5\uff0c\u5df2\u67095454\u5bb6\u8d37\u6b3e\u673a\u6784\u5728PPP\u8ba1\u5212\u4e2d\u63d0\u4f9b\u8d37\u6b3e\u3002CrossRiver Bank\u53ea\u662f\u8fd95454\u5bb6\u8d37\u6b3e\u673a\u6784\u4e2d\u7684\u4e00\u5bb6\uff0c\u4f46\u5b83\u83b7\u5f97\u4e86\u7f8e\u8054\u50a89%\u7684\u507f\u8fd8\u3002\u8fd9\u600e\u4e48\u8bf4\u5f97\u901a\u5462\uff1f\n\u5bcc\u56fd\u94f6\u884c\u7ea6\u670925\u4e07\u540d\u5458\u5de5\u3002\u6839\u636e\u8054\u90a6\u5b58\u6b3e\u4fdd\u9669\u516c\u53f8(FDIC)\u7684\u6570\u636e\uff0c\u5b83\u5728\u7f8e\u56fd40\u4e2a\u5dde\u62e5\u67095444\u5bb6\u5206\u884c\u3002FDIC\u8fd8\u62a5\u544a\u8bf4\uff0c\u8be5\u94f6\u884c\u6301\u67091.4\u4e07\u4ebf\u7f8e\u5143\u7684\u5b58\u6b3e\u3002\u8fd9\u5bb6\u94f6\u884c\u6709168\u5e74\u7684\u5386\u53f2\u4e86\u3002\u6839\u636e\u5bcc\u56fd\u94f6\u884c(Wells Fargo)\u5468\u4e00\u7ed9CNBC\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u5b83\u5df2\u7ecf\u53d1\u653e\u4e86102\u4ebf\u7f8e\u5143\u7684Paycheck Protection Program(PPP)\u8d37\u6b3e\u3002\u8fd9\u4e0e\u5176\u4ed6\u5927\u578b\u94f6\u884c\u5728PPP\u8ba1\u5212\u4e2d\u7684\u505a\u6cd5\u662f\u4e00\u81f4\u7684\u3002\u7f8e\u8054\u50a8\u7684PPP\u62a5\u9500\u4ea4\u6613\u6570\u636e\u6ca1\u6709\u663e\u793a\u5bf9\u5bcc\u56fd\u94f6\u884c\u7684\u4efb\u4f55PPP\u62a5\u9500\u3002\n\u6839\u636eFDIC\u7684\u6570\u636e\uff0cCrossRiver Bank\u53ea\u6709\u4e00\u5bb6\u5206\u884c\uff0c\u6210\u7acb\u4ec512\u5e74\u3002\u7f8e\u8054\u50a8\u507f\u8fd8\u7ed9CrossRiver Bank\u768453\u4ebf\u7f8e\u5143\u662f\u5176\u622a\u81f33\u670830\u65e5\u603b\u8d44\u4ea725\u4ebf\u7f8e\u5143\u7684\u4e24\u500d\u591a\u3002CrossRiver Bank\u7684PPP\u8d37\u6b3e\u5360\u5bcc\u56fd\u94f6\u884c(Wells Fargo)PPP\u8d37\u6b3e\u603b\u989d\u768450%\u4ee5\u4e0a\uff0c\u4f46\u5b83\u53ea\u6709250\u540d\u5458\u5de5\uff0c\u800c\u4e0d\u662f\u4e3a\u5bcc\u56fd\u94f6\u884c(Wells Fargo)\u5de5\u4f5c\u768425\u4e07\u540d\u5458\u5de5\u6765\u5ba1\u67e5\u548c\u5904\u7406\u8fd9\u4e9bPPP\u8d37\u6b3e\u3002\n\u53bb\u5e7412\u6708\uff0c\u201c\u798f\u5e03\u65af\u201d\u8d22\u7ecf\u4f5c\u5bb6\u517c\u526f\u4e3b\u7f16\u5b89\u6258\u4e07\u00b7\u52a0\u62c9(Antoine Gara)\u63ed\u5f00\u4e86\u56f4\u7ed5\u8fd9\u5bb6\u5947\u7279\u7684\u5c0f\u94f6\u884c\u7684\u4e00\u4e9b\u8c1c\u56e2\u3002\u52a0\u62c9\u63cf\u8ff0\u4e86\u5341\u5b57\u6cb3\u94f6\u884c\u4f4d\u4e8e\u65b0\u6cfd\u897f\u5dde\u674e\u5821\u7684\u603b\u90e8\u529e\u516c\u5ba4\u5982\u4e0b\uff1a\n\u201c\u5341\u5b57\u6cb3\u5e76\u4e0d\u662f\u4e00\u4e2a\u5178\u578b\u7684\u793e\u533a\u94f6\u884c\u3002\u8fd9\u91cc\u6ca1\u6709\u51fa\u7eb3\u5458\uff0c\u4e5f\u6ca1\u6709\u81ea\u52a8\u53d6\u6b3e\u673a\u6216\u4fdd\u9669\u7bb1\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c175\u540d\u94f6\u884c\u5de5\u4f5c\u4eba\u5458\u548c\u4ea4\u6613\u5458\u6324\u5728\u5927\u7ea623,000\u5e73\u65b9\u82f1\u5c3a\u7684\u5730\u65b9\uff0c\u51dd\u89c6\u7740\u6570\u767e\u53f0\u7535\u8111\u663e\u793a\u5668-\u901a\u5e38\u662f\u6bcf\u5f20\u684c\u5b50\u5806\u653e3\u53f0\u3002\u8fd9\u91cc\u6709\u521b\u4e1a\u7684\u611f\u89c9-\u4e00\u4e2a\u5c0f\u53a8\u623f\uff0c\u91cc\u9762\u653e\u7740LaCroix\u6c7d\u6c34\uff0c\u7f8e\u98df\u5496\u5561\u548c\u6e38\u620f\u5ba4\u3002\n\u201cCrossRiver\u6b63\u5904\u4e8e\u653e\u8d37\u70ed\u6f6e\u4e2d\u3002\u5b83\u4ee5\u6bcf\u6708\u8d85\u8fc710\u4ebf\u7f8e\u5143\u7684\u901f\u5ea6\u627f\u9500\u8d37\u6b3e-\u5728\u77ed\u77ed9\u5e74\u5185\u4ef7\u503c\u7ea6300\u4ebf\u7f8e\u5143\u3002\u4f46\u4e0e\u8fc7\u53bb\u7684\u94f6\u884c\u4e0d\u540c\uff0cCrossRiver\u7684\u51e0\u4e4e\u6240\u6709\u653e\u8d37\u5b98\u5458\u90fd\u4e0d\u662f\u4eba\u3002\u5b83\u4eec\u662f\u5e94\u7528\u7a0b\u5e8f\u3002CrossRiver\u7684\u8d37\u6b3e\u4e3b\u8981\u6765\u81ea15\u5bb6\u5de6\u53f3\u98ce\u9761\u4e00\u65f6\u7684\u98ce\u9669\u8d44\u672c\u652f\u6301\u7684\u91d1\u878d\u6280\u672f\u521d\u521b\u516c\u53f8\uff0c\u5373\u6240\u8c13\u7684Fintech\uff0c\u5b83\u4eec\u7684\u540d\u5b57\u5305\u62ec\u786e\u8ba4\u3001\u6700\u4f73\u9e21\u86cb\u3001\u5347\u7ea7\u3001\u521d\u521b\u516c\u53f8\u548cLendingUSA\u3002\u91d1\u878d\u6280\u672f\u516c\u53f8\u63d0\u4f9b\u5ba2\u6237\uff1bCrossRiver\u63d0\u4f9b\u8bb8\u53ef\u8bc1\u548c\u57fa\u7840\u8bbe\u65bd\u3002\u5b83\u6bcf\u53d1\u653e\u4e00\u7b14\u8d37\u6b3e\uff0c\u5c31\u4f1a\u6301\u670910%\u523020%\u7684\u80a1\u4efd\uff0c\u91d1\u878d\u79d1\u6280\u7684\u5de8\u989d\u8d37\u6b3e\u5df2\u7ecf\u5c06\u8d8a\u6c5f\u94f6\u884c\u7684\u8d44\u4ea7\u4ece10\u5e74\u524d\u76841\u4ebf\u7f8e\u5143\u63a8\u9ad8\u5230\u4e8620\u4ebf\u7f8e\u5143\u3002\n\u7f8e\u56fd\u76ee\u524d\u6b63\u9762\u4e34\u5927\u8427\u6761\u4ee5\u6765\u6700\u4e25\u91cd\u7684\u5931\u4e1a\u5371\u673a\u3002\u8d2d\u4e70\u529b\u5e73\u4ef7\u8ba1\u5212\u662f\u7ef4\u6301\u5c0f\u4f01\u4e1a\u751f\u5b58\u548c\u4e3a\u9677\u5165\u56f0\u5883\u7684\u5de5\u4eba\u63d0\u4f9b\u5de5\u8d44\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u6211\u4eec\u771f\u7684\u5e0c\u671b\u94f6\u884c\u6ca1\u6709\u4eba\u7c7b\u653e\u8d37\u5b98\u5458\u6765\u51b3\u5b9a\u8c01\u4ece\u8fd9\u4e2a\u7eb3\u7a0e\u4eba\u8d44\u52a9\u7684\u8ba1\u5212\u4e2d\u83b7\u5f97\u6570\u5341\u4ebf\u7f8e\u5143\u5417\uff1f\n2018\u5e74\uff0c\u8054\u90a6\u5b58\u6b3e\u4fdd\u9669\u516c\u53f8\u53d1\u73b0\uff0c\u8d8a\u6c5f\u94f6\u884c\u201c\u672a\u80fd\u786e\u4fdd\u9002\u5f53\u7684\u5408\u89c4\u7ba1\u7406\u7cfb\u7edf\u5230\u4f4d\uff0c\u4ece\u4e8b\u4e86\u4e0d\u5b89\u5168\u6216\u4e0d\u5065\u5168\u7684\u94f6\u884c\u884c\u4e3a\u201d\u2026\u3002.\u201c\u3002FDIC\u5bf9\u8be5\u94f6\u884c\u5904\u4ee5641,750\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u5e76\u8981\u6c42\u5176\u54112000\u4e07\u7f8e\u5143\u7684\u8d54\u507f\u57fa\u91d1\u6350\u6b3e\uff0c\u4ee5\u8865\u507f\u53d7\u635f\u7684\u6d88\u8d39\u8005\u3002\n\u5468\u4e00\uff0c\u4f17\u8bae\u9662\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u7279\u522b\u5c0f\u7ec4\u59d4\u5458\u4f1a\u7684\u6c11\u4e3b\u515a\u6210\u5458\u81f4\u51fd\u7f8e\u56fd\u8d22\u653f\u90e8\u3001SBA\u548c\u7f8e\u56fd\u516b\u5bb6\u6700\u5927\u7684\u94f6\u884c\uff0c\u8981\u6c42\u63d0\u4f9b\u6709\u5173PPP\u8ba1\u5212\u4e0b\u53d1\u653e\u7684\u8d37\u6b3e\u7684\u6587\u4ef6\u3002\n\u201c\u5f53\u56fd\u4f1a\u5728\u4e24\u515a\u7684\u5927\u529b\u652f\u6301\u4e0b\u901a\u8fc7\u51a0\u72b6\u75c5\u6bd2\u63f4\u52a9\u3001\u6551\u6d4e\u548c\u7ecf\u6d4e\u5b89\u5168(CARE)\u6cd5\u6848\u65f6\uff0c\u6211\u4eec\u6253\u7b97\u4e3a\u90a3\u4e9b\u5426\u5219\u53ef\u80fd\u88ab\u8feb\u88c1\u5458\u6216\u5173\u95ed\u7684\u5c0f\u4f01\u4e1a\u63d0\u4f9b\u7d27\u6025\u6551\u6d4e\u3002CARE\u6cd5\u6848\u7279\u522b\u9f13\u52b1SBA\u53d1\u5e03\u6307\u5bfc\u610f\u89c1\uff0c\u4ee5\u786e\u4fdd\u62c5\u4fdd\u8d37\u6b3e\u7684\u5904\u7406\u548c\u53d1\u653e\u4f18\u5148\u8003\u8651\u670d\u52a1\u4e0d\u8db3\u548c\u519c\u6751\u5e02\u573a\u4e2d\u7684\u5c0f\u4f01\u4e1a\u548c\u5b9e\u4f53\uff0c\u5305\u62ec\u9000\u4f0d\u519b\u4eba\u3001\u519b\u4eba\u3001\u793e\u4f1a\u548c\u7ecf\u6d4e\u5f31\u52bf\u4e2a\u4eba\u4ee5\u53ca\u5987\u5973\u62e5\u6709\u7684\u4f01\u4e1a\u3002\n\u201c\u5a92\u4f53\u62a5\u5bfc\u6307\u51fa\uff0c\u4e00\u4e9b\u5927\u578b\u8d37\u6b3e\u673a\u6784\u663e\u7136\u8bbe\u7acb\u4e86\u4e24\u7ea7\u7cfb\u7edf\u6765\u5904\u7406PPP\u8d37\u6b3e\u7533\u8bf7\u3002\u94f6\u884c\u6700\u5bcc\u6709\u7684\u5ba2\u6237\u53ef\u4ee5\u4f7f\u7528\u4e2a\u6027\u5316\u7684\u7533\u8bf7\u6d41\u7a0b\uff0c\u786e\u4fdd\u4ed6\u4eec\u7684\u7533\u8bf7\u9996\u5148\u5f97\u5230\u5904\u7406\u3002\u5176\u4ed6\u7533\u8bf7\u8005\u4e0d\u5f97\u4e0d\u4f7f\u7528\u8868\u73b0\u4e0d\u4f73\u7684\u7535\u5b50\u95e8\u6237\u7f51\u7ad9\uff0c\u9762\u4e34\u4e25\u91cd\u7684\u5904\u7406\u5ef6\u8bef\uff0c\u6709\u65f6\u8fd8\u9700\u8981\u627e\u5230\u53e6\u4e00\u5bb6\u8d37\u6b3e\u4eba\u6765\u8003\u8651\u4ed6\u4eec\u7684\u7533\u8bf7\u3002\u4e00\u4efd\u62a5\u544a\u53d1\u73b0\uff0c\u6469\u6839\u5927\u901a(JPMorgan Chase)\u5411\u51e0\u4e4e\u6240\u6709\u5bfb\u6c42\u8d2d\u4e70\u529b\u5e73\u4ef7\u8d37\u6b3e\u7684\u5546\u4e1a\u94f6\u884c\u5ba2\u6237\u63d0\u4f9b\u8d37\u6b3e\uff0c\u800c\u8be5\u884c\u89c4\u6a21\u6700\u5c0f\u7684\u5ba2\u6237\u51e0\u4e4e\u5b8c\u5168\u88ab\u62d2\u4e4b\u95e8\u5916\u3002\n\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u56fd\u4f1a\u8bae\u5458\u53ef\u80fd\u5e0c\u671b\u5199\u4fe1\u7ed9CrossRiver Bank\u8463\u4e8b\u957f\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5409\u52d2\u65af\u00b7\u76d6\u5fb7(Gilles Gade)\uff0c\u770b\u770b\u5728\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\u53d1\u653e53\u4ebf\u7f8e\u5143\u7684PPP\u8d37\u6b3e\u5230\u5e95\u505a\u4e86\u4ec0\u4e48\u6837\u7684\u5c3d\u804c\u8c03\u67e5\u3002", "note_en": "The Paycheck Protection Program (PPP) was authorized by Congress under the CARES Act and is being overseen by the Small Business Administration (SBA). The goal of the PPP program is to make 1 percent interest loans to small businesses experiencing hardship from the coronavirus crisis and then forgive the loans if the businesses keep their employees on the payroll.\n Even though the loans are guaranteed against losses by the SBA, the Federal Reserve launched its own program, called the Paycheck Protection Program Liquidity Facility, to reimburse lenders who make these loans. So far, the Fed has reimbursed $57 billion of these loans as of June 10, out of total loans approved by the SBA of more than $500 billion.\n The odd thing about those Fed reimbursements is that a stunning $5.3 billion in reimbursements, or 9 percent of the $57 reimbursed by the Fed, have gone to a tiny New Jersey bank, Cross River Bank. According to the SBA, as of May 30, there were 5,454 lenders that had made loans in the PPP program. Cross River Bank is just one of those 5,454 lenders and yet it received 9 percent of the Fed\u2019s reimbursements. How does that make any sense?\n Wells Fargo has approximately 250,000 employees. According to the Federal Deposit Insurance Corporation (FDIC) it has 5,444 branches in 40 states in the U.S. The FDIC also reports that the bank holds $1.4 trillion in deposits. The bank is  168 years old. According to a statement from Wells Fargo on Monday to CNBC, it has made $10.2 billion in Paycheck Protection Program (PPP) loans. That\u2019s in line with what other large banks have done in the PPP program. The Fed\u2019s  transaction data for its PPP reimbursements do not show any PPP reimbursements to Wells Fargo.\n According to the FDIC, Cross River Bank has only one branch office and has been around for just 12 years. The $5.3 billion that the Fed has reimbursed to Cross River Bank is more than twice its total assets of $2.5 billion as of March 30. Cross River Bank has made more than 50 percent of the dollar amount that Wells Fargo has made in PPP loans but it has only 250 employees rather than the 250,000 employees working for Wells Fargo to review and process these PPP loans.\n In December of last year, Antoine Gara, a finance writer and associate editor at Forbes,  unraveled some of the mystery around this peculiar little bank. Gara described Cross River Bank\u2019s headquarters\u2019 office in Fort Lee, New Jersey as follows:\n \u201cCross River is not a typical community bank. There are no tellers here, or ATMs or safe deposit boxes. Instead there are 175 bank staffers and traders stuffed elbow to jowl into about 23,000 square feet, peering into hundreds of computer monitors\u2014often stacked three per desk. There are startup touches\u2014a kitchenette stocked with LaCroix sparkling water, gourmet coffee and a game room.\n \u201cCross River is on a lending tear. It is underwriting loans at the rate of more than $1 billion a month\u2014some $30 billion worth in just nine years. But unlike in banks of yesteryear, virtually all Cross River\u2019s lending officers aren\u2019t human beings. They are apps. Cross River\u2019s loans originate mostly from 15 or so buzzy venture-capital-backed financial technology startups, so-called fintechs, that go by names like Affirm, Best Egg, Upgrade, Upstart and\u00a0LendingUSA. The fintechs provide the customers; Cross River provides the licenses and infrastructure. It holds 10% to 20% of each loan it issues, and the massive volume of fintech loans has propelled Cross River to $2 billion in assets, up from $100 million a decade ago.\u201d\n The U.S. currently has the worst unemployment crisis since the Great Depression. The PPP program is a critical component in keeping small businesses alive and giving struggling workers a paycheck. Do we really want banks without human lending officers deciding who gets billions of dollars from this taxpayer-funded program?\n In 2018 the FDIC found that Cross River Bank \u201cengaged in  unsafe or unsound banking practices by failing to ensure an adequate compliance management system was in place\u2026.\u201d The FDIC  fined the bank $641,750 and made it contribute to a $20 million restitution fund to reimburse harmed consumers.\n On Monday, Democratic members of the House of Representatives Select Subcommittee on the Coronavirus Crisis sent letters to the U.S. Treasury Department, the SBA, and eight of the largest U.S. banks, requesting documents on the loans that were made under the PPP program.\n  \u201cWhen Congress passed the Coronavirus Aid, Relief, and Economic Security (CARES) Act with strong bipartisan support, we intended to provide urgent relief to small businesses that otherwise could be forced to lay off employees or shut down. The CARES Act specifically encouraged SBA to issue guidance \u2018to ensure that the processing and disbursement of covered loans prioritizes small business concerns and entities in underserved and rural markets,\u2019 including businesses owned by veterans, members of the military, socially and economically disadvantaged individuals, and women.\n \u201cMedia reports indicate that some large lenders apparently created a two-tier system for processing PPP loan applications. The banks\u2019 wealthiest clients had access to a personalized application process that ensured their applications were processed first. Other applicants had to use poor-performing electronic portals, faced significant processing delays, and sometimes needed to find another lender to consider their application. One report found that JPMorgan Chase \u2018provided loans to virtually all of its commercial banking customers\u2019 that sought PPP loans \u2018while the lender\u2019s smallest customers were almost entirely shut out.\u2019 \u201d\n We think the same members of Congress might want to send a letter to Cross River Bank Chairman and CEO, Gilles Gade, and find out exactly what kind of due diligence was done in the issuance of $5.3 billion in PPP loans in a two month period.", "posttime": "2020-06-17 19:48:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "paycheck,\u94f6\u884c", "title": "\u7f8e\u8054\u50a8\u7684Paycheck\u4fdd\u62a4\u8ba1\u5212\u7ed9\u4e86\u4e00\u5bb6\u5c0f\u5c0f\u7684\u65b0\u6cfd\u897f\u94f6\u884c53\u4ebf\u7f8e\u5143", "title_en": "The Fed's Paycheck Protection Program Gave a Tiny NJ Bank $5.3B", "transed": 1, "url": "https://wallstreetonparade.com/2020/06/the-feds-paycheck-protection-program-gave-a-tiny-nj-bank-5-3-billion-9-percent-of-all-the-money-its-spent-thus-far/", "via": "", "real_tags": ["paycheck", "\u94f6\u884c"]}, {"category": "", "categoryclass": "", "imagename": "582f0fbe8e5001169e684993f39d764b.jpg", "infoid": 1006932, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d7\u4f24\u5bb3\u7684\u8303\u00b7\u767b\u00b7\u591a\u4f69\u5c14\uff0c2020\u5e74", "note_en": "By Harm van den Dorpel, 2020", "posttime": "2020-06-17 19:47:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u82b1\u56ed,garden,\u53d7\u4f24\u5bb3", "title": "\u53d8\u5f02\u82b1\u56ed(\u7b1b\u5361\u5c14\u9057\u4f20\u89c4\u5212)", "title_en": "Mutant garden (cartesian genetic programming)", "transed": 1, "url": "https://mutant.garden/", "via": "", "real_tags": ["\u82b1\u56ed", "garden", "\u53d7\u4f24\u5bb3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006931, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6307\u9488\u662f\u90a3\u4e9b\u5728\u60a8\u7b2c\u4e00\u6b21\u4e86\u89e3\u5b83\u4eec\u65f6\u6beb\u65e0\u610f\u4e49\u7684\u6982\u5ff5\u4e4b\u4e00\u3002\u901a\u5e38\uff0c\u4e00\u4e2a\u89c6\u89d2\u7684\u6539\u53d8\u5c31\u8db3\u4ee5\u8ba9\u4f60\u5927\u8111\u4e2d\u7684\u67d0\u4e9b\u4e1c\u897f\u53d1\u51fa\u5494\u54d2\u58f0--\u547c\uff01--\u4e00\u5207\u90fd\u795e\u5947\u5730\u843d\u5230\u4e86\u5b83\u7684\u4f4d\u7f6e\u4e0a\u3002\n\u5c3d\u7ba1\u5b83\u4eec\u540d\u58f0\u4e0d\u4f73\uff0c\u4f46\u6307\u9488\u662f\u6781\u5176\u5f3a\u5927\u7684\u5de5\u5177\u3002\u6b64\u5916\uff0c\u5728\u67d0\u4e9b\u8bed\u8a00(\u5982C\u6216GO)\u4e2d\uff0c\u5982\u679c\u60a8\u60f3\u6210\u4e3a\u719f\u7ec3\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u7406\u89e3\u5b83\u4eec\u662f\u5fc5\u987b\u7684\u3002\n\u8ba9\u6211\u4eec\u63a2\u7d22\u4e00\u4e0b\u4f7f\u7528C\u7f16\u7a0b\u8bed\u8a00\u7684\u6307\u9488\u548c\u51e0\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4f8b\u5b50\u3002\n\u6307\u9488\u662f\u4fdd\u5b58\u5bf9\u5185\u5b58\u4e2d\u67d0\u7269\u7684\u5f15\u7528\u7684\u53d8\u91cf\u3002\u6211\u77e5\u9053\u8fd9\u542c\u8d77\u6765\u4ee4\u4eba\u56f0\u60d1\uff0c\u4f46\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\uff0c\u5b83\u4f1a\u66f4\u6709\u610f\u4e49\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u4ee5\u53ca\u8fd0\u884c\u5b83\u7684\u7ed3\u679c\u3002\n#include&#34\uff1bstdio.h&#34\uff1b#include&#34\uff1bstring.h&#34\uff1bvoid print_character_info(char*char_POINTER)\uff1bint main(){char alphabet[10]={&#39\uff1ba&#39\uff1b\uff0c&#39\uff1bb&#39\uff1b\uff0c&#39\uff1bc&#39\uff1b\uff0c&#39\uff1bd&#39\uff1b\uff0c&#39\uff1be&#39\uff1b}\uff1bchar*\u5b57\u6bcd\u8868\u6307\u9488\uff1b//Alphabet_POINTER\u6307\u5411\u5b57\u6bcd\u8868\u7684\u5f00\u5934\uff0c\u5b57\u7b26&#39\uff1ba&#39\uff1bAlphabet_POINTER=alphabet\uff1bprint_character_info(Alphabet_POINTER)\uff1b//\u73b0\u5728\u3002\u8ba9&/\u8ba9\u5b83\u6307\u5411\u5b57\u6bcd\u8868\u6307\u9488++\uff1bprint_character_info(\u5b57\u6bcd\u8868\u6307\u9488)\uff1b//\u518d\u591a\u4e00\u4e2a\u5b57\u7b26\uff0c\u73b0\u5728\u5e94\u8be5\u6307\u5411&#39\uff1bc&#39\uff1b\u5b57\u6bcd\u8868_\u6307\u9488++\uff1bprint_character_info(\u5b57\u6bcd\u8868\u6307\u9488)\uff1b//\u518d\u591a\u4e00\u4e2a\uff0c\u73b0\u5728\u5e94\u8be5\u6307\u5411&#39\uff1bd&#39\uff1b\u5b57\u6bcd\u8868_\u6307\u9488++\uff1bprint_character_info(\u5b57\u6bcd\u8868\u6307\u9488)\uff1b//\u8ba9&#39\uff1bprint_character_info(\u5b57\u6bcd\u8868\u6307\u9488)\uff1breturn 0\uff1b}void print_character_info(char*char_Pointer){printf(&#34\uff1b\u6307\u9488&#34\uff1b\u6307\u9488\u7684\u5730\u5740\u662f\uff1a%p\\n&#34\uff1b\uff0c&amp\uff1b\u5b57\u7b26\u6307\u9488)\uff1bprintf(&#34\uff1b\u5b83\u6307\u5411\u7684\u5730\u5740\uff1a%p\\n&#34\uff1b\uff0c\u5b57\u7b26\u6307\u9488)\uff1bprintf(&#34\uff1b\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1a%c\\n\\\u3002\n\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d2e\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1aa\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d2f\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1ab\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b\u3002\n\u8ba9\u6211\u4eec\u9010\u884c\u6765\u770b\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u4e86\u89e3\u6240\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u9996\u5148\uff0c\u6211\u4eec\u58f0\u660e\u4ee5\u4e0b\u4e24\u4e2a\u53d8\u91cf\uff1a\n\u5b57\u6bcd\u8868\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5305\u542b\u82f1\u8bed\u5b57\u6bcd\u8868\u7684\u524d5\u4e2a\u5b57\u6bcd\u3002\nALPARBET_POINTER\u662fchar\u7c7b\u578b\u7684\u6307\u9488\u3002\u5728C\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a\u661f\u53f7&#39\uff1b*&#39\uff1b\u6765\u5b9a\u4e49\u6307\u9488\u3002\u58f0\u660e\u6b63\u786e\u7684\u6307\u9488\u7c7b\u578b\u5f88\u91cd\u8981\uff1a\u5b83\u5fc5\u987b\u4e0e\u5b83\u6240\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u76f8\u5339\u914d\uff0c\u5426\u5219\uff0c\u4e8b\u60c5\u53ef\u80fd\u4f1a\u53d8\u5f97\u6709\u70b9\u602a\u5f02(\u6211\u4eec\u7a0d\u540e\u4f1a\u8ba8\u8bba\u8fd9\u4e00\u70b9)\u3002\n\u6839\u636e\u8fd0\u884c\u4ee3\u7801\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u58f0\u660e\u53d8\u91cf\u4e4b\u540e\u7acb\u5373\u5f62\u6210\u5185\u5b58\u5185\u5bb9\u7684\u56fe\u7247\uff1a\n\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\uff0c\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d2e\uff0c\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1aa\u3002\n\u5b57\u6bcd\u6307\u9488\u7684\u5730\u5740\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u6ca1\u6709\u5bf9\u6307\u9488\u672c\u8eab\u7684\u4f4d\u7f6e\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\u6709\u8da3\u7684\u90e8\u5206\u662f\u5b83\u7684\u5185\u5bb9\uff0c\u73b0\u5728\u8bbe\u7f6e\u4e3a\u503c0x7fff95b03d2e\u3002\u67e5\u4e00\u4e0b\u684c\u5b50\uff0c\u4f60\u80fd\u627e\u5230\u5417\uff1f\u662f\u7684\uff0c\u5b83\u662f\u5b57\u6bcd\u8868\u7684\u5f00\u59cb\uff01\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662f\u5305\u542b\u503c&#39\uff1ba&#39\uff1b\u7684\u5730\u5740\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528&#39\uff1b*&#39\uff1b\u8fd0\u7b97\u7b26\u8bbf\u95ee\u6240\u6307\u5411\u7684\u5730\u5740\u4e2d\u5305\u542b\u7684\u503c\u3002\u5982\u679c\u5728\u6267\u884c\u7684\u8fd9\u4e00\u65f6\u523b\u8fd0\u884c\uff0c\u5219\u4e0b\u9762\u7684\u884c\u4f1a\u6253\u5370\u503c&#39\uff1ba&#39\uff1b\uff1a\n\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u7684\u6307\u9488\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5730\u5740\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u66f4\u6539\u5b83\u6240\u6307\u5411\u7684\u5185\u5bb9\u3002\u6b63\u5982\u6211\u4eec\u5373\u5c06\u770b\u5230\u7684\u90a3\u6837\uff0cC\u8bed\u8a00\u901a\u8fc7\u4e3a\u6211\u4eec\u5904\u7406\u6307\u9488\u7b97\u6cd5\u4f7f\u8fd9\u4e00\u70b9\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002\n\u6307\u9488\u7b97\u672f\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5bf9\u6307\u9488\u6267\u884c\u57fa\u672c\u7b97\u672f\u8fd0\u7b97\uff0c\u4ee5\u64cd\u7eb5\u5b83\u4eec\u6307\u5411\u54ea\u4e2a\u5730\u5740\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u76f8\u5bf9\u4e8e\u6574\u6570\u7684\u5f53\u524d\u4f4d\u7f6e\u52a0\u51cf\u6574\u6570\u3002\u540c\u6837\uff0c\u901a\u8fc7\u793a\u4f8b\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\u8fd9\u4e00\u70b9\u3002\n\u7b2c\u4e8c\u884c\u662f\u6211\u4eec\u503c\u5f97\u4fe1\u4efb\u7684print_character_info\u51fd\u6570\uff0c\u6ca1\u6709\u4ec0\u4e48\u65b0\u4e1c\u897f\u3002\u7136\u800c\uff0c\u7b2c\u4e00\u884c\u975e\u5e38\u9177\uff1a\u6211\u4eec\u6293\u53d6\u5b57\u6bcd\u6307\u9488\u5e76\u5c06\u5176\u503c\u52a01\uff0c\u7ed3\u679c\uff0c\u6211\u4eec\u73b0\u5728\u6307\u5411\u4e00\u884c\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5730\u5740(\u5305\u542b#39\uff1bb&#39\uff1b\u7684\u5730\u5740)\u3002\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a\n\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\uff0c\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d2f\uff0c\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1ab\u3002\n\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\uff0c\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d30\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1ac\u3002\n\u6211\u4eec\u7ee7\u7eed\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5b83\u6700\u7ec8\u6307\u5411\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a\u5b57\u7b26\u3002\u6700\u540e\uff0c\u5185\u5b58\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7\u6307\u9488\u7684\u7c7b\u578b\u5f88\u91cd\u8981\u5417\uff1f\u539f\u56e0\u4e4b\u4e00\u662f\u7f16\u8bd1\u5668\u4f7f\u7528\u8be5\u7c7b\u578b\u6267\u884c\u6307\u9488\u7b97\u672f\u8ba1\u7b97\u3002\n\u4e0d\u540c\u7684\u53d8\u91cf\u7c7b\u578b\u5728\u5185\u5b58\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u8282\u6570\u91cf\u8868\u793a\u3002\u5728\u6211\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u5b57\u7b26\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282(\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u5730\u5740\u69fd)\u8868\u793a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6574\u6570\u9700\u89814\u4e2a\u5b57\u8282\u3002\n\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4e3a\u5b57\u7b26\u6307\u9488\u7f16\u5199POINTER++\u65f6\uff0c\u6211\u5c06\u79fb\u52a8\u5230\u7d27\u63a5\u5728\u5f53\u524d\u5730\u5740\u4e4b\u540e\u7684\u5730\u5740\u3002\u5982\u679c\u6211\u5728int\u6307\u9488\u4e0a\u6267\u884c++\uff0c\u5b83\u5c06\u5411\u524d\u8df3\u8dc34\u4e2a\u4f4d\u7f6e\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u6548\u679c\uff1a\n//\u5176\u4f59\u4ee3\u7801\u662f\u76f8\u540c\u7684main(){char alphabet[10]={&#39\uff1ba&#39\uff1b\uff0c&#39\uff1bb&#39\uff1b\uff0c&#39\uff1bc&#39\uff1b\uff0c&#39\uff1bd&#39\uff1b\uff0c&#39\uff1be&#39\uff1b}\uff1b//\u8bf7\u6ce8\u610f\uff0c\u73b0\u5728\u5b57\u6bcd\u8868\u6307\u9488\u7684\u7c7b\u578b\u662fint*alphabet_POINTER\uff1balphabet_POINTER=alphabet\uff1bprint_character_info(ALPHBET_POINTER\u3002}//\u5176\u4f59\u4ee3\u7801\u76f8\u540c\u3002\n\u6253\u5370\u5b8c&#39\uff1ba&#39\uff1b\u4e4b\u540e-\u4e0e\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c-\u6211\u4eec++\u6307\u9488\u3002\u56e0\u4e3a\u73b0\u5728\u5b83\u7684\u7c7b\u578b\u662fint\uff0c\u5b83\u5c06\u8df3\u5230\u524d\u97624\u4e2a\u4f4d\u7f6e\uff0c\u6307\u5411--\u60a8\u731c\u5bf9\u4e86--\u5e26\u6709\u5b57\u7b26\u7684\u5730\u5740\u3002\n\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d2e\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1aa\u6307\u9488\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d08\u5b83\u6307\u5411\u7684\u5730\u5740\u662f\uff1a0x7fff95b03d32\u5b83\u6307\u5411\u7684\u5730\u5740\u5305\u542b\u503c\uff1aE\u3002\n\u6307\u5b9a\u6307\u9488\u7c7b\u578b\u8fd8\u6709\u53e6\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u3002\u6b63\u5982\u60a8\u521a\u521a\u8bfb\u5230\u7684\uff0c\u4e0d\u540c\u7684\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u9700\u8981\u6267\u884c\u89e3\u5f15\u7528\u6765\u83b7\u5f97\u4e00\u4e2a\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u9700\u8981\u77e5\u9053\u5b83\u5e94\u8be5\u83b7\u53d6\u591a\u5c11\u5b57\u8282\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u91ca\u8be5\u6570\u636e\u3002\n\u6700\u540e\u4e00\u4e2a\u4e3b\u9898\uff0c\u9664\u4e86\u5185\u5b58\u5e03\u5c40\u548c\u53d8\u91cf/\u6307\u9488\u5f3a\u5236\u8f6c\u6362\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u6709\u81ea\u5df1\u7684\u6587\u7ae0\u3002\u6211\u4eec\u53ef\u80fd\u665a\u4e9b\u65f6\u5019\u518d\u6765\u8ba8\u8bba\u4ed6\u4eec\u3002\n\u6211\u8fd8\u9700\u8981\u6f84\u6e05\u7684\u662f\uff0c\u6307\u9488\u672c\u8eab\u5360\u636e\u4e86\u51e0\u4e2a\u5185\u5b58\u4f4d\u7f6e\u3002\u5728\u63d2\u56fe\u4e2d\uff0c\u6211\u5c06\u5176\u7b80\u5316\u4e3a\u5305\u542b\u6574\u4e2a\u6307\u9488\u7684\u5355\u4e2a\u5730\u5740\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u8282\u6765\u8868\u793aCPU\u4f53\u7cfb\u7ed3\u6784\u4e2d\u7684\u5730\u5740(\u901a\u5e38\u662f4\u4e2a\u62168\u4e2a)\u3002\n\u6211\u5e0c\u671b\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e2e\u52a9\u60a8\u7406\u89e3\u8981\u70b9\uff0c\u6216\u8005\u81f3\u5c11\u80fd\u6fc0\u53d1\u60a8\u5bf9\u8be5\u4e3b\u9898\u7684\u5174\u8da3\u3002\u60a8\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u548c\u5b9e\u9a8c\u624d\u80fd\u83b7\u5f97\u5168\u9762\u7684\u7406\u89e3\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u968f\u610f\u83b7\u53d6\u4ee3\u7801\u6837\u4f8b\u5e76\u56db\u5904\u79fb\u52a8\u3002\u8c03\u6574\u5b83\u5e76\u9605\u8bfb\u8f93\u51fa\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5b66\u4e60\u65b0\u7684\u7f16\u7a0b\u6982\u5ff5\u65f6\u603b\u662f\u5bf9\u6211\u6709\u5e2e\u52a9\u3002\n\u5f88\u591a\u5176\u4ed6\u91cd\u8981\u7684\u4e1c\u897f\u90fd\u5efa\u7acb\u5728\u6307\u9488\u4e4b\u4e0a\u3002\u5373\u4f7f\u60a8\u4e3b\u8981\u5728\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u4e0a\u5de5\u4f5c\uff0c\u4e86\u89e3\u4e8b\u60c5\u662f\u5982\u4f55\u5728\u5e55\u540e\u5de5\u4f5c\u7684\u4e5f\u662f\u5f88\u6709\u7528\u7684\u3002\n\u4e0e\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u8fd9\u7bc7\u6587\u7ae0\u3002\u611f\u8c22\u60a8\u5e2e\u52a9\u6211\u8054\u7cfb\u5230\u53ef\u80fd\u4f1a\u89c9\u5f97\u6b64\u4fe1\u606f\u6709\u7528\u7684\u4eba\u3002\n\u201c\u9ed1\u5ba2\uff1a\u5265\u524a\u7684\u827a\u672f\u201d\u7b2c\u4e8c\u7ae0\u5bf9\u6307\u9488\u548c\u5185\u5b58\u5e03\u5c40\u8fdb\u884c\u4e86\u4ee4\u4eba\u60ca\u53f9\u7684\u4ecb\u7ecd\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u77e5\u8bc6\uff0c\u8bd5\u4e00\u8bd5\u3002\u8fd9\u672c\u4e66\u548c\u5176\u4ed6\u975e\u5e38\u6709\u7528\u7684\u4e66\u90fd\u53ef\u4ee5\u5728\u63a8\u8350\u4e66\u5355\u4e2d\u627e\u5230\u3002\n\u7ed9\u6211\u53d1\u4e00\u5c01\u6709\u95ee\u9898\u3001\u8bc4\u8bba\u6216\u5efa\u8bae\u7684\u7535\u5b50\u90ae\u4ef6(\u5b83\u5728\u5173\u4e8e\u6211\u7684\u9875\u9762\u4e0a)\u3002\u6765\u5427\uff0c\u522b\u5bb3\u7f9e\uff01", "note_en": "Pointers are one of those concepts that make no sense when you first learn about them. Usually, a change of perspective is enough for something in your brain to click and - puff! - everything magically falls in its place.\n Despite their bad reputation, pointers are extremely powerful tools. Moreover, in some languages (like C or Go) understanding them is a must if you want to be a proficient developer.\n Let&#39;s explore pointers using the C programming language and a couple of very simple examples.\n  Pointers are variables that hold a  reference to something in memory. I know it sounds confusing, but with a couple of examples, it will make more sense. Look at the following code and the result of running it.\n #include &#34;stdio.h&#34;#include &#34;string.h&#34;void print_character_info(char *char_pointer);int main() { char alphabet[10] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;}; char *alphabet_pointer; // alphabet_pointer points to the beginning of alphabet, the character &#39;a&#39; alphabet_pointer = alphabet; print_character_info(alphabet_pointer); // Now. let&#39;s make it point one character ahead alphabet_pointer++; print_character_info(alphabet_pointer); // One more, now it should point to &#39;c&#39; alphabet_pointer++; print_character_info(alphabet_pointer); // One more, now it should point to &#39;d&#39; alphabet_pointer++; print_character_info(alphabet_pointer); // Let&#39;s move the pointer to the last element of the array, &#39;e&#39; alphabet_pointer++; print_character_info(alphabet_pointer); return 0;}void print_character_info(char *char_pointer){ printf(&#34;The pointer&#39;s address is: %p \\n&#34;, &amp;char_pointer); printf(&#34;It points to the address: %p\\n&#34;, char_pointer); printf(&#34;The address it points to contains the value: %c\\n\\n&#34;, *char_pointer);}\n  The pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d2eThe address it points to contains the value: aThe pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d2fThe address it points to contains the value: bThe pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d30The address it points to contains the value: cThe pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d31The address it points to contains the value: dThe pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d32The address it points to contains the value: e\n  Let&#39;s go line by line to better understand what happens. First, we declare the following two variables:\n  alphabet is an array of characters, containing the first 5 letters of the English alphabet.\n alphabet_pointer is a pointer of type char. In C, we define a pointer by prepending the asterisk &#39;*&#39; to the variable name. It&#39;s important to declare the correct type of pointer: it has to match the type of data it points to, otherwise, things can get a bit whacky (we&#39;ll talk about that later).\n From the results of running the code, we can form a picture of the memory contents immediately after the declaration of our variables:\n        The pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d2eThe address it points to contains the value: a\n The address of  alphabet_pointer remains the same, we didn&#39;t perform any change on the position of the pointer itself. The interesting part is its content, now set to the value  0x7fff95b03d2e. Check the table, can you find it? Yes, it&#39;s the beginning of  alphabet! More precisely, the address that contains the value &#39;a&#39;.\n You can access the value contained in the address being pointed to by using the &#39;*&#39; operator. The following line prints the value &#39;a&#39; if run at this exact moment in execution:\n    As you can see, our pointer&#39;s content is a simple address. That means we can change what it points to on the fly. C makes this very easy by handling pointer arithmetic for us, as we are about to see.\n  Pointer arithmetic means that you can perform basic arithmetic operations on pointers to manipulate which address they point to. For achieving this, you can add and subtract integers relative to their current position. Again, this is easier to understand with an example.\n   The second line is our trusty  print_character_info function, nothing new. The first line, however, is pretty cool: we grab alphabet pointer and increase its value by 1, and as a result, we are now pointing to the next address in line (the one that contains &#39;b&#39;). After performing the action once, we get the following results:\n The pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d2fThe address it points to contains the value: b\n  The pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d30The address it points to contains the value: c\n We continue the process until it eventually points to the last element of the array: the character &#39;e&#39;. In the end, memory looks like this:\n   Remember when I said that the type of a pointer is important? One of the reasons is that the compiler uses the type to perform pointer arithmetic calculations.\n Different variable types are represented in memory using different amounts of bytes. On my computer  Chars are represented using only one byte (and only one &#39;address slot&#39;).  Ints, on the other hand, need 4 bytes.\n This means that when I write  pointer++ for a char pointer, I am moving to the address immediately after the current one. If I perform the  ++ on an int pointer, it will jump 4 positions ahead. We can see this effect with a different code example:\n // The rest of the code is the sameint main() { char alphabet[10] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;}; // Note that now alphabet_pointer is of type int int *alphabet_pointer; alphabet_pointer = alphabet; print_character_info(alphabet_pointer); alphabet_pointer++; print_character_info(alphabet_pointer); return 0;}// The rest of the code is the same\n After printing &#39;a&#39; - the same in as our first example - we  ++ the pointer. Because now it&#39;s of type int, it will jump ahead 4 positions, pointing to -you guessed it- the address with the character &#39;e&#39;.\n  The pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d2eThe address it points to contains the value: aThe pointer&#39;s address is: 0x7fff95b03d08 It points to the address: 0x7fff95b03d32The address it points to contains the value: e\n There is another important reason for specifying the type of the pointer. As you just read, different variables have different sizes in memory. So when we need to perform a dereference to get a value, the compiler needs to know how many bytes it should grab and how to interpret that data.\n This last topic, alongside memory layout and variable/pointer casting deserve their own articles. We might come back later to talk about them.\n I also need to clarify that pointers themselves take several memory positions. In the illustrations, I simplified it as a single address holding the whole pointer. In reality, they require as many bytes as necessary for representing an address in your CPU architecture (typically 4 or 8).\n  I hope reading this article helped you understand pointers, or at the very least spark your interest in the topic. You might require some more time and experimentation to gain a full understanding, so feel free to grab the code sample and move things around. Tweak it and read the output, this approach has always helped me when learning new programming concepts.\n Lots of other important things build on top of pointers. Even if you work mostly on higher level programming languages, understanding how things work under the hood is useful.\n  Share this article with friends and colleagues. Thank you for helping me reach people who might find this information useful.\n The second chapter of Hacking: The Art of Exploitation has an amazing introduction to pointers and memory layout. Give it a try if you want to learn more about this topic. This and other very helpful books can be found in the  recommended reading list.\n Send me an email with questions, comments or suggestions (it&#39;s in the  About Me page). Come on, don&#39;t be shy!", "posttime": "2020-06-17 18:52:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u7f16\u7a0b\u8bed\u8a00,introduction,\u6307\u9488", "title": "\u4f7f\u7528C\u7f16\u7a0b\u8bed\u8a00\u7684\u6307\u9488\u7684\u7b80\u5355\u4ecb\u7ecd", "title_en": "A gentle introduction to pointers using the C programming language", "transed": 1, "url": "https://www.brainstobytes.com/a-gentle-introduction-to-pointers-in-c/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "\u6307\u9488"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006930, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8ffd\u6c42\u5f3a\u5927\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u65b9\u9762\uff0c\u6700\u8fd1\u5df2\u7ecf\u53d6\u5f97\u4e86\u51e0\u9879\u6280\u672f\u8fdb\u6b65\u3002\u73b0\u5728\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5728\u7f16\u7a0b\u8bed\u8a00\u9886\u57df\u53d6\u5f97\u4e86\u91cd\u8981\u7a81\u7834\uff1a\u4ed6\u4eec\u7684\u91cf\u5b50\u8bed\u8a00\u662f\u7b2c\u4e00\u4e2a\u4e0e\u7ecf\u5178\u8ba1\u7b97\u673a\u8bed\u8a00\u4e00\u6837\u4f18\u96c5\u3001\u7b80\u5355\u3001\u5b89\u5168\u7684\u91cf\u5b50\u8bed\u8a00\u3002\n\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7f16\u7a0b\u53d8\u5f97\u8d8a\u6765\u8d8a\u5bb9\u6613\uff1a\u82cf\u9ece\u4e16\u7406\u5de5\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u8bbe\u8ba1\u4e86\u7b2c\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u4ee5\u7528\u6765\u5bf9\u91cf\u5b50\u8ba1\u7b97\u673a\u8fdb\u884c\u7f16\u7a0b\uff0c\u5c31\u50cf\u7ecf\u5178\u8ba1\u7b97\u673a\u4e00\u6837\u7b80\u5355\u3001\u53ef\u9760\u548c\u5b89\u5168\u3002ETH\u5b89\u5168\u3001\u53ef\u9760\u548c\u667a\u80fd\u7cfb\u7edf\u5b9e\u9a8c\u5ba4(SRI)\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u6388\u9a6c\u4e01\u00b7\u97e6\u5207\u592b(Martin Vechev)\u8868\u793a\uff0c\u7f16\u7a0b\u91cf\u5b50\u8ba1\u7b97\u673a\u5bf9\u7814\u7a76\u4eba\u5458\u6765\u8bf4\u4ecd\u7136\u662f\u4e00\u9879\u6311\u6218\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5982\u6b64\u5174\u594b\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u82cf\u9ece\u4e16\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u548c\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u65b9\u9762\u7684\u4f20\u7edf\u3002\n\u4ed6\u8865\u5145\u9053\uff1a\u6211\u4eec\u7684\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00Silq\u5141\u8bb8\u7a0b\u5e8f\u5458\u6bd4\u73b0\u6709\u8bed\u8a00\u66f4\u597d\u5730\u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u6f5c\u529b\uff0c\u56e0\u4e3a\u4ee3\u7801\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u66f4\u7d27\u51d1\u3001\u66f4\u5feb\u3001\u66f4\u76f4\u89c2\u3001\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u672c\u5468\uff0cVechev\u5c06\u5728\u7f16\u7a0b\u8bed\u8a00\u4f1a\u8baePLDI 2020\u4e0a\u5411\u8be5\u9886\u57df\u7684\u5176\u4ed6\u4e13\u5bb6\u4ecb\u7ecdSilq\u3002\u4e3a\u4e86\u4fbf\u4e8e\u8ba8\u8bba\u3001\u91c7\u7528\u548c\u8fdb\u4e00\u6b65\u5f00\u53d1\uff0c\u4ed6\u548c\u4ed6\u7684\u56e2\u961f\u8fd8\u5728\u81ea\u5df1\u7684\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86Silq\u3002\n\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u91cf\u5b50\u8ba1\u7b97\u53d7\u5230\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6839\u636e\u91cf\u5b50\u7269\u7406\u539f\u7406\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\u5177\u6709\u5de8\u5927\u7684\u6f5c\u529b\u3002\u4eca\u5929\uff0c\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u76f8\u4fe1\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u603b\u6709\u4e00\u5929\u80fd\u591f\u6bd4\u7ecf\u5178\u8ba1\u7b97\u673a\u66f4\u5feb\u5730\u89e3\u51b3\u67d0\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u8fdb\u884c\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u662f\u7ea0\u7f20\u91cf\u5b50\u6001\uff0c\u5176\u4e2d\u4e0d\u540c\u6bd4\u7279\u7684\u4fe1\u606f\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u91cd\u53e0\u3002\u8fd9\u610f\u5473\u7740\u5728\u672a\u6765\uff0c\u91cf\u5b50\u8ba1\u7b97\u673a\u5c06\u80fd\u591f\u9ad8\u6548\u5730\u89e3\u51b3\u7ecf\u5178\u8ba1\u7b97\u673a\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u6846\u67b6\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u8fd9\u4e00\u91cf\u5b50\u4f18\u52bf\u4ecd\u6709\u5f85\u6700\u7ec8\u8bc1\u660e\u3002\u7136\u800c\uff0c\u6700\u8fd1\u53d6\u5f97\u4e86\u4e00\u4e9b\u91cd\u5927\u7684\u6280\u672f\u8fdb\u6b65\u30022019\u5e74\u590f\u672b\uff0c\u4e00\u53f0\u91cf\u5b50\u8ba1\u7b97\u673a\u6210\u529f\u5730\u89e3\u51b3\u4e86\u4e00\u4e2a\u95ee\u9898-\u5c3d\u7ba1\u662f\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u95ee\u9898-\u6bd4\u6700\u5feb\u7684\u7ecf\u5178\u8ba1\u7b97\u673a\u66f4\u5feb\u3002\n\u5bf9\u4e8e\u67d0\u4e9b\u91cf\u5b50\u7b97\u6cd5\uff0c\u5373\u8ba1\u7b97\u7b56\u7565\uff0c\u6211\u4eec\u4e5f\u77e5\u9053\u5b83\u4eec\u6bd4\u6ca1\u6709\u5f00\u53d1\u91cf\u5b50\u8ba1\u7b97\u673a\u6f5c\u529b\u7684\u7ecf\u5178\u7b97\u6cd5\u66f4\u5feb\u3002\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u4ecd\u7136\u4e0d\u80fd\u5728\u73b0\u6709\u7684\u91cf\u5b50\u786c\u4ef6\u4e0a\u8ba1\u7b97\uff0c\u56e0\u4e3a\u91cf\u5b50\u8ba1\u7b97\u673a\u76ee\u524d\u4ecd\u7136\u592a\u5bb9\u6613\u51fa\u9519\u3002\n\u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u7684\u6f5c\u529b\u4e0d\u4ec5\u9700\u8981\u6700\u65b0\u7684\u6280\u672f\uff0c\u8fd8\u9700\u8981\u4e00\u79cd\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u6765\u63cf\u8ff0\u91cf\u5b50\u7b97\u6cd5\u3002\u539f\u5219\u4e0a\uff0c\u7b97\u6cd5\u662f\u89e3\u51b3\u95ee\u9898\u7684\u79d8\u8bc0\uff1b\u7f16\u7a0b\u8bed\u8a00\u63cf\u8ff0\u7b97\u6cd5\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u673a\u53ef\u4ee5\u6267\u884c\u5fc5\u8981\u7684\u8ba1\u7b97\u3002\n\u4eca\u5929\uff0c\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u4e0e\u7279\u5b9a\u7684\u786c\u4ef6\u7d27\u5bc6\u76f8\u8fde\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4eec\u7cbe\u786e\u5730\u63cf\u8ff0\u4e86\u5e95\u5c42\u7535\u8def\u7684\u884c\u4e3a\u3002\u5bf9\u4e8e\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u8fd9\u4e9b\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u65e2\u7e41\u7410\u53c8\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u5355\u72ec\u7684\u7f16\u7a0b\u6307\u4ee4\u5fc5\u987b\u975e\u5e38\u8be6\u7ec6\uff0c\u4ece\u800c\u660e\u786e\u63cf\u8ff0\u5b9e\u73b0\u91cf\u5b50\u7b97\u6cd5\u6240\u9700\u7684\u7ec6\u8282\u3002\n\u8fd9\u5c31\u662fVechev\u548c\u4ed6\u7684\u56e2\u961f\u5f00\u53d1Silq\u7684\u539f\u56e0\u3002Vechev&34\uff1bSilq\u56e2\u961f\u7684\u535a\u58eb\u751f\u672c\u6770\u660e\u00b7\u6bd4\u5207\u5c14(Benjamin Bichsel)\u8d1f\u8d23\u76d1\u7763Silq\u7684\u5f00\u53d1\uff0c\u4ed6\u8bf4\uff0cSilq\u662f\u7b2c\u4e00\u79cd\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u4e3b\u8981\u4e0d\u662f\u56f4\u7ed5\u786c\u4ef6\u7684\u7ed3\u6784\u548c\u529f\u80fd\u8bbe\u8ba1\u7684\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u5458\u60f3\u8981\u89e3\u51b3\u95ee\u9898\u65f6\u7684\u601d\u7ef4\u5b9a\u52bf\u4e0a\u8bbe\u8ba1\u7684\uff0c\u800c\u4e0d\u9700\u8981\u4ed6\u4eec\u4e86\u89e3\u8ba1\u7b97\u673a\u67b6\u6784\u548c\u5b9e\u73b0\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u672c\u6770\u660e\u00b7\u6bd4\u5207\u5c14(Benjamin Bichsel)\u662fVechev\uff1b\u56e2\u961f\u7684\u535a\u58eb\u751f\uff0c\u8d1f\u8d23\u76d1\u7763Silq\u7684\u5f00\u53d1\u3002\n\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5c06\u4ece\u7279\u5b9a\u7c7b\u578b\u8ba1\u7b97\u673a\u7684\u6280\u672f\u7ec6\u8282\u4e2d\u62bd\u8c61\u51fa\u6765\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u79f0\u4e3a\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3002Silq\u662f\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7b2c\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3002\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u66f4\u5177\u8868\u73b0\u529b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u751a\u81f3\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u6765\u63cf\u8ff0\u590d\u6742\u7684\u4efb\u52a1\u548c\u7b97\u6cd5\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5458\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u4f7f\u7528\u5b83\u4eec\u3002\u5b83\u4eec\u8fd8\u53ef\u4ee5\u4e0e\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e00\u8d77\u4f7f\u7528\u3002\nSilq\u7ed9\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u5e26\u6765\u7684\u6700\u5927\u521b\u65b0\u548c\u7b80\u5316\u6d89\u53ca\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u76f4\u56f0\u6270\u91cf\u5b50\u7f16\u7a0b\u7684\u9519\u8bef\u6765\u6e90\u3002\u8ba1\u7b97\u673a\u5206\u51e0\u4e2a\u4e2d\u95f4\u6b65\u9aa4\u8ba1\u7b97\u4efb\u52a1\uff0c\u8fd9\u4f1a\u521b\u5efa\u4e2d\u95f4\u7ed3\u679c\u6216\u4e34\u65f6\u503c\u3002\n\u4e3a\u4e86\u91ca\u653e\u5185\u5b58\uff0c\u7ecf\u5178\u8ba1\u7b97\u673a\u4f1a\u81ea\u52a8\u64e6\u9664\u8fd9\u4e9b\u503c\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5c06\u6b64\u79f0\u4e3a\u5783\u573e\u6536\u96c6\uff0c\u56e0\u4e3a\u591a\u4f59\u7684\u4e34\u65f6\u503c\u5df2\u88ab\u5904\u7406\u6389\u3002\n\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u91cf\u5b50\u7ea0\u7f20\uff0c\u8fd9\u79cd\u5904\u7406\u66f4\u52a0\u68d8\u624b\uff1a\u4e4b\u524d\u8ba1\u7b97\u7684\u503c\u53ef\u80fd\u4f1a\u4e0e\u5f53\u524d\u7684\u503c\u76f8\u4e92\u4f5c\u7528\uff0c\u5e72\u6270\u6b63\u786e\u7684\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u4e0a\u6e05\u7406\u8fd9\u6837\u7684\u4e34\u65f6\u503c\u9700\u8981\u4e00\u79cd\u66f4\u5148\u8fdb\u7684\u6240\u8c13\u7684\u975e\u8ba1\u7b97\u6280\u672f\u3002\nBichsel\u89e3\u91ca\u8bf4\uff0cSilq\u662f\u7b2c\u4e00\u79cd\u81ea\u52a8\u8bc6\u522b\u548c\u64e6\u9664\u4e0d\u518d\u9700\u8981\u7684\u503c\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u901a\u8fc7\u5e94\u7528\u4ed6\u4eec\u5bf9\u7ecf\u5178\u7f16\u7a0b\u8bed\u8a00\u7684\u77e5\u8bc6\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff1a\u4ed6\u4eec\u7684\u81ea\u52a8\u8ba1\u7b97\u65b9\u6cd5\u53ea\u4f7f\u7528\u6ca1\u6709\u4efb\u4f55\u7279\u6b8a\u91cf\u5b50\u64cd\u4f5c\u7684\u7f16\u7a0b\u547d\u4ee4--\u6b63\u5982Vechev\u548cBichsel\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u662f\u514d\u8d39\u7684\u3002\nVechev\u8bf4\uff0cSilq\u5728\u4f18\u5316\u91cf\u5b50\u8ba1\u7b97\u673a\u7f16\u7a0b\u65b9\u9762\u662f\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\uff1b\u5b83\u4e0d\u662f\u5f00\u53d1\u7684\u6700\u540e\u9636\u6bb5\u3002\u4ecd\u7136\u6709\u8bb8\u591a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u4f46\u7531\u4e8eSilq\u66f4\u5bb9\u6613\u7406\u89e3\uff0cVechev\u548cBichsel\u5e0c\u671b\u65e2\u80fd\u523a\u6fc0\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u7684\u8fdb\u4e00\u6b65\u53d1\u5c55\uff0c\u4e5f\u80fd\u523a\u6fc0\u65b0\u91cf\u5b50\u7b97\u6cd5\u7684\u7406\u8bba\u548c\u5f00\u53d1\u3002\n\u6211\u4eec\u7684\u56db\u4eba\u56e2\u961f\u7ecf\u8fc7\u4e24\u5e74\u7684\u5de5\u4f5c\u5df2\u7ecf\u53d6\u5f97\u4e86\u7a81\u7834\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u8bed\u8a00\u8bbe\u8ba1\u3001\u91cf\u5b50\u7269\u7406\u548c\u5b9e\u73b0\u65b9\u9762\u7684\u4e0d\u540c\u4e13\u4e1a\u77e5\u8bc6\u7684\u7ed3\u5408\u3002\u6bd4\u5207\u5c14\u8bf4\uff0c\u5982\u679c\u5176\u4ed6\u7814\u53d1\u56e2\u961f\u63a5\u53d7\u6211\u4eec\u7684\u521b\u65b0\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u529f\u3002\n\u6750\u6599\u7531\u82cf\u9ece\u4e16ETH\u63d0\u4f9b\u3002\u7531\u5f17\u6d1b\u91cc\u5b89\u00b7\u8fc8\u8036\u539f\u8457\u3002\u6ce8\u610f\uff1a\u5185\u5bb9\u53ef\u4ee5\u6839\u636e\u6837\u5f0f\u548c\u957f\u5ea6\u8fdb\u884c\u7f16\u8f91\u3002\n\u4e0b\u9762\u662f\u60a8\u53ef\u80fd\u611f\u5174\u8da3\u7684\u76f8\u5173\u6587\u7ae0\u3002\u79d1\u5b66\u65e5\u62a5\u4e0eTrendMD\u7f51\u7edc\u4e2d\u7684\u5b66\u672f\u51fa\u7248\u7269\u5171\u4eab\u94fe\u63a5\uff0c\u5e76\u6839\u636e\u9700\u8981\u4ece\u7b2c\u4e09\u65b9\u5e7f\u544a\u5546\u90a3\u91cc\u8d5a\u53d6\u6536\u5165\u3002", "note_en": "Several technical advances have been achieved recently in the pursuit of powerful quantum computers. Now, Computer scientists have made an important breakthrough in the field of programming languages: their quantum language is the first of its kind that is as elegant, simple and safe as classical computer languages.\n Programming quantum computers is becoming easier: computer scientists at ETH Zurich have designed the first programming language that can be used to program quantum computers as simply, reliably and safely as classical computers. &#34;Programming quantum computers is still a challenge for researchers,&#34; says Martin Vechev, computer science professor in ETH&#39;s Secure, Reliable and Intelligent Systems Lab (SRI), &#34;which is why I&#39;m so excited that we can now continue ETH Zurich&#39;s tradition in the development of quantum computers and programming languages.&#34;\n    He adds: &#34;Our quantum programming language Silq allows programmers to utilize the potential of quantum computers better than with existing languages, because the code is more compact, faster, more intuitive and easier to understand for programmers.&#34; This week, Vechev will introduce Silq to other experts in the field at PLDI 2020, a conference for programming languages. To facilitate discussion, adoption and further development, he and his team have also released Silq on its own website.\n Quantum computing has been seeing increased attention over the last decade, since these computers, which function according to the principles of quantum physics, have enormous potential. Today, most researchers believe that these computers will one day be able to solve certain problems faster than classical computers, since to perform their calculations they use entangled quantum states in which various bits of information overlap at a certain point in time. This means that in the future, quantum computers will be able to efficiently solve problems which classical computers cannot solve within a reasonable timeframe.\n This quantum supremacy has still to be proven conclusively. However, some significant technical advances have been achieved recently. In late summer 2019, a quantum computer succeeded in solving a problem -- albeit a very specific one -- more quickly than the fastest classical computer.\n For certain &#34;quantum algorithms,&#34; i.e. computational strategies, it is also known that they are faster than classical algorithms, which do not exploit the potential of quantum computers. To date, however, these algorithms still cannot be calculated on existing quantum hardware because quantum computers are currently still too error-prone.\n  Utilizing the potential of quantum computation not only requires the latest technology, but also a quantum programming language to describe quantum algorithms. In principle, an algorithm is a &#34;recipe&#34; for solving a problem; a programming language describes the algorithm so that a computer can perform the necessary calculations.\n     Today, quantum programming languages are tied closely to specific hardware; in other words, they describe precisely the behaviour of the underlying circuits. For programmers, these &#34;hardware description languages&#34; are cumbersome and error-prone, since the individual programming instructions must be extremely detailed and thus explicitly describe the minutiae needed to implement quantum algorithms.\n This is where Vechev and his group come in with their development of Silq. &#34;Silq is the first quantum programming language that is not designed primarily around the construction and functionality of the hardware, but on the mindset of the programmers when they want to solve a problem -- without requiring them to understand every detail of the computer architecture and implementation,&#34; says Benjamin Bichsel, a doctoral student in Vechev&#39;s group who is supervising the development of Silq.\n Computer scientists refer to computer languages that abstract from the technical details of the specific type of computer as high-level programming languages. Silq is the very first high-level programming language for quantum computers. High-level programming languages are more expressive, meaning that they can describe even complex tasks and algorithms with less code. This makes them more comprehensible and easier to use for programmers. They can also be used with different computer architectures.\n  The greatest innovation and simplification that Silq brings to quantum programming languages concerns a source of errors that has plagued quantum programming until now. A computer calculates a task in several intermediate steps, which creates intermediate results or temporary values.\n     In order to relieve the memory, classical computers automatically erase these values. Computer scientists refer to this as &#34;garbage collection,&#34; since the superfluous temporary values are disposed of.\n In the case of quantum computers, this disposal is trickier due to quantum entanglement: the previously calculated values can interact with the current ones, interfering with the correct calculation. Accordingly, cleaning up such temporary values on quantum computers requires a more advanced technique of so-called uncomputation.\n &#34;Silq is the first programming language that automatically identifies and erases values that are no longer needed,&#34; explains Bichsel. The computer scientists achieved this by applying their knowledge of classical programming languages: their automatic uncomputation method uses only programming commands that are free of any special quantum operations -- they are &#34;qfree,&#34; as Vechev and Bichsel say.\n &#34;Silq is a major breakthrough in terms of optimising the programming of quantum computers; it is not the final phase of development,&#34; says Vechev. There are still many open questions, but because Silq is easier to understand, Vechev and Bichsel hope to stimulate both the further development of quantum programming languages and the theory and development of new quantum algorithms.\n &#34;Our team of four has made the breakthrough after two years of work thanks to the combination of different expertise in language design, quantum physics and implementation. If other research and development teams embrace our innovations, it will be a great success,&#34; says Bichsel.\n    Materials provided by   ETH Zurich. Original written by Florian Meyer.  Note: Content may be edited for style and length.\n  Below are relevant articles that may interest you. ScienceDaily shares links with scholarly publications in the  TrendMD network and earns revenue from third-party advertisers, where indicated.", "posttime": "2020-06-17 18:52:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u91cf\u5b50,\u8ba1\u7b97\u673a", "title": "\u7b2c\u4e00\u79cd\u7528\u4e8e\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u76f4\u89c2\u7f16\u7a0b\u8bed\u8a00", "title_en": "The first intuitive programming language for quantum computers", "transed": 1, "url": "https://www.sciencedaily.com/releases/2020/06/200615115820.htm", "via": "", "real_tags": ["\u7f16\u7a0b", "\u91cf\u5b50", "\u8ba1\u7b97\u673a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006927, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u4f7f\u7528Hashcatv6.0.0\uff01\u4ecehttps://hashcat.net/hashcat/\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6e90\u4ee3\u7801\u8ddd\u79bb\u4e0a\u4e00\u6b21\u53d1\u5e03\u5df2\u7ecf\u6709\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u5bf9\u4e8e\u6211\u4eec\u4eca\u5929\u53d1\u5e03\u7684Hashcat6.0.0\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u6bb5\u6f2b\u957f\u7684\u65c5\u7a0b\u3002\u5b83\u4e3a\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u5e26\u6765\u4e86\u5927\u91cf\u7684\u6027\u80fd\u6539\u8fdb\u3001\u65b0\u529f\u80fd\u548c\u8be6\u7ec6\u7684\u6587\u6863\u3002\u4ece\u4e0a\u4e00\u4e2a\u7248\u672c(5.1.0)\u5f00\u59cb\uff0c\u6211\u4eec\u603b\u5171\u6709\u8d85\u8fc71800\u4e2aGit\u63d0\u4ea4-\u6765\u81ea29\u4e2a\u4e0d\u540c\u7684\u8d21\u732e\u8005\u3002\u6709\u5173\u8d21\u732e\u8005\u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u53c2\u9605\uff1ahttps://github.com/hashcat/hashcat/graph.2020-06-16\u4e0a\u4e00\u4e2a\u7248\u672c\u7684Hashcat\u662f\u4e00\u5e74\u524d\u53d1\u5e03\u7684\uff0c\u4f46\u662fHashcat\u6bcf\u5929\u90fd\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u5e76\u4e14\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6709\u4e86\u5f88\u5927\u7684\u6539\u8fdb\u3002\u6211\u4eec\u5e0c\u671b\u5728\u672a\u6765\u66f4\u9891\u7e41\u5730\u53d1\u5e03\u65b0\u7684Hashcat\u7248\u672c\uff0c\u4f46\u6b63\u5982\u60a8\u4ece\u4e0b\u9762\u5de8\u5927\u7684\u67b6\u6784\u53d8\u5316\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u4f8b\u5916\u7684\u2026\u2026\u3002\u597d\u4e8b\u9700\u8981\u65f6\u95f4\uff01Hashcat 6.0.0\u7684\u65b0\u7684\u4e3b\u8981\u529f\u80fd\uff1a\u968f\u7740\u4e3b\u8981\u7684\u53d8\u5316\uff0c\u6211\u4eec\u589e\u52a0\u4e86\u4ee5\u4e0b\u7ecf\u5e38\u9700\u8981\u768451\u4e2a\u65b0\u7b97\u6cd5\uff1a\u6dfb\u52a0\u4e86\u8fd9\u4e48\u591a\u65b0\u7684\u6563\u5217\u6a21\u5f0f\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u6211\u4eec\u73b0\u5728\u652f\u6301\u8d85\u8fc7320\u79cd\u4e0d\u540c\u7684\u7b97\u6cd5\uff01\u8fd9\u91cc\u662f\u4e00\u4e9b\u6027\u80fd\u6539\u8fdb\u7684\u9884\u89c8\uff1a\u6709\u5173\u6240\u6709\u6539\u8fdb\u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u67e5\u770b\u6b64\u5904\uff1ahttps://docs.google.com/spreadsheets/d/1.sp=sharing\u9664\u4e86\u8fd9\u4e9b\u4e4b\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u65b0\u529f\u80fd\u548c\u66f4\u6539-\u4f46\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u60f3\u4e3b\u8981\u96c6\u4e2d\u5728\u4e3b\u8981\u7684\u66f4\u6539\u4e0a\uff0c\u4ee5\u4f7f\u53d1\u884c\u8bf4\u660e\u4fdd\u6301\u5728\u6613\u4e8e\u7406\u89e3\u7684\u957f\u5ea6\u3002\u5bf9\u4e8e\u611f\u5174\u8da3\u7684\u4eba\uff0cChangeLog\u548cGIT\u5386\u53f2\u8bb0\u5f55\u4e2d\u6709\u6240\u6709\u66f4\u6539\u7684\u66f4\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u4e9b\u66f4\u6539\u5927\u591a\u662f\u9488\u5bf9\u5f00\u53d1\u4eba\u5458\u7684\u3002\u8fd9\u4e9b\u53d1\u884c\u8bf4\u660e\u6545\u610f\u5197\u957f\uff0c\u4ee5\u544a\u77e5\u5f53\u524d\u7684\u8d21\u732e\u8005\u548c\u5f00\u53d1\u4eba\u5458\uff0c\u4ee5\u53ca\u5438\u5f15\u6f5c\u5728\u7684\u672a\u6765Hashcat\u8d21\u732e\u8005\u7684\u5174\u8da3\u3002\u4e3b\u8981\u7279\u70b9\uff1a\u63d2\u4ef6\u754c\u9762\u5728\u89e3\u538b\u65b0\u7684Hashcat\u7248\u672c\u540e\uff0c\u60a8\u9996\u5148\u4f1a\u6ce8\u610f\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\u65b0\u7684\u6a21\u5757\u6587\u4ef6\u5939\u3002\u6211\u4eec\u5df2\u7ecf\u8003\u8651\u6a21\u5757\u5316\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u5e76\u6700\u7ec8\u8bbe\u6cd5\u5b9e\u73b0\u4e86\u5b83\uff1a\u6bcf\u79cd\u6563\u5217\u7c7b\u578b\u90fd\u88ab\u5206\u79bb\u5230\u81ea\u5df1\u7684\u6a21\u5757\u4e2d\u3002\u8fd9\u4e0d\u4ec5\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u8bfb\u53d6\u3001\u7f16\u5199\u548c\u7ef4\u62a4\uff0c\u800c\u4e14\u8fd8\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u65b0\u4f53\u7cfb\u7ed3\u6784\u3001\u754c\u9762\u548c\u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u3002\u672c\u8d28\u4e0a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e9b\u65e9\u8be5\u5b9e\u73b0\u7684\u91cd\u6784\uff0c\u4f46\u5bf9\u4e8e\u4ece\u4e8b\u65b0\u6563\u5217\u7c7b\u578b\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5b83\u5e26\u6765\u4e86\u5f88\u591a\u597d\u5904\uff1a\u5b83\u4f7f\u7f16\u5199\u65b0\u7684\u4e3b\u673a\u4ee3\u7801(\u5305\u62ec\u89e3\u6790\u5668\u3001\u89e3\u7801\u5668\u3001\u7f16\u7801\u5668\u3001\u6302\u94a9\u7b49)\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u6563\u5217\u7c7b\u578b\u4ee3\u7801\u4e0e\u6838\u5fc3\u4ee3\u7801100%\u5206\u79bb\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u518d\u9700\u8981\u7f16\u8f91Hashcat\u6838\u5fc3\u6e90\u4ee3\u7801\u6765\u6dfb\u52a0\u65b0\u7684\u6563\u5217\u7c7b\u578b\u3002\u8fd9\u6837\u8fd8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5206\u53d1\u5c1a\u672a\u63a8\u9001\u5230\u4e3b\u5b58\u50a8\u5e93\u7684\u81ea\u5b9a\u4e49\u5185\u6838\u3002\u5728\u5bf9\u65e7\u7684\u6563\u5217\u7c7b\u578b\u8fdb\u884c\u4e86\u56db\u4e2a\u591a\u6708\u7684\u8f6c\u6362\u671f\u95f4\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u65b0\u7684\u901a\u7528\u63a5\u53e3\uff0c\u5e76\u4f7f\u6240\u6709\u73b0\u6709\u7684\u6563\u5217\u6a21\u5f0f\u90fd\u80fd\u4f7f\u7528\u8fd9\u4e2a\u65b0\u7684\u63d2\u4ef6\u63a5\u53e3\u3002\u6211\u4eec\u751a\u81f3\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u5e76\u8f6c\u6362\u4e86\u6240\u6709\u65e7\u7684\u6d4b\u8bd5\u6a21\u5757\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1tools/test_module/\u6587\u4ef6\u5939\u3002\u975e\u5e38\u611f\u8c22\u5e2e\u52a9\u8f6c\u6362\u6563\u5217\u7c7b\u578b\u548c/\u6216\u6d4b\u8bd5\u8fd9\u4e9b\u65b0\u63a5\u53e3\u7684\u6bcf\u4e2a\u4eba\u3002\u8fd9\u4e0d\u4ec5\u5411\u6211\u4eec\u5c55\u793a\u4e86\u65b0\u7684\u63a5\u53e3\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u5e76\u4e14\u8db3\u591f\u7075\u6d3b\uff0c\u53ef\u4ee5\u6ee1\u8db3\u6765\u81ea\u4e0d\u540c\u6a21\u5757\u7684\u6240\u6709\u4e0d\u540c\u9700\u6c42\uff0c\u800c\u4e14\u8fd8\u8868\u660e\u8d21\u732e\u8005\u80fd\u591f\u8f7b\u677e\u5730\u7f16\u5199\u6a21\u5757\u5316\u4ee3\u7801\u3002\u65b0\u7684\u5b8c\u5168\u6a21\u5757\u5316\u7684\u6563\u5217\u7c7b\u578b\u96c6\u6210\u4f7f\u7279\u5b9a\u4e8e\u6563\u5217\u7c7b\u578b\u7684\u4ee3\u7801\u66f4\u52a0\u7d27\u51d1\u548c\u5c01\u88c5\uff0c\u4f46\u4e5f\u4fdd\u6301\u751a\u81f3\u589e\u52a0\u4e86\u7075\u6d3b\u6027\u3002\u4f8b\u5982\uff0c\u73b0\u5728\u53ef\u4ee5\u8f7b\u677e\u5730\u6dfb\u52a0\u5185\u6838\u7f16\u8bd1\u8fd0\u884c\u65f6\u4f7f\u7528\u7684\u7279\u5b9a\u4e8e\u6563\u5217\u6a21\u5f0f\u7684JIT(\u5373\u65f6)\u7f16\u8bd1\u5668\u6807\u5fd7\uff0c\u6216\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u8bbe\u7f6e\u4e0a\u8f7b\u677e\u6807\u8bb0\u7279\u5b9a\u4e8e\u6563\u5217\u6a21\u5f0f\u7684\u4e0d\u7a33\u5b9a\u8b66\u544a(\u4f8b\u5982\uff0c\u53d6\u51b3\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u548c\u786c\u4ef6)\u3002\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u76f4\u63a5\u5411\u6a21\u5757\u6dfb\u52a0\u65b0\u7684\u7ea6\u675f\u548c\u9650\u5236\uff0c\u800c\u4e0d\u4f1a\u4f7fHashcat\u7684\u5176\u4ed6\u90e8\u5206\u53d8\u5f97\u6df7\u4e71(\u4ee5\u907f\u514d\u5230\u5904\u51fa\u73b0\u610f\u5927\u5229\u9762\u4ee3\u7801\u548c\u7279\u6b8a\u60c5\u51b5)\u3002\u5173\u4e8e\u6211\u4eec\u8bbe\u8ba1\u7684\u8fd9\u4e2a\u65b0\u67b6\u6784\u6709\u5f88\u591a\u8981\u8bf4\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u8ba8\u8bba\uff0c\u4f46\u6211\u4eec\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u4e0d\u8d70\u5f97\u592a\u8fdc\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u4e8e\u611f\u5174\u8da3\u7684\u6bcf\u4e2a\u4eba\uff0c\u6211\u4eec\u8fd8\u4e3a\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e86Hashcat\u63d2\u4ef6\u63a5\u53e3\u6307\u5357\u3002\u672c\u6307\u5357\u662f\u7b2c\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u6dfb\u52a0\u65b0\u7684\u6563\u5217\u7c7b\u578b\u7684\u5b98\u65b9\u6587\u6863\uff0c\u5b83\u5df2\u7ecf\u5305\u542b\u4e86\u8fd120,000\u4e2a\u5355\u8bcd\u3002\u5b83\u6ca1\u6709\u6db5\u76d6\u6240\u6709\u7ec6\u8282\uff0c\u4f46\u5b83\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5f00\u59cb\u6dfb\u52a0\u60a8\u81ea\u5df1\u7684\u6563\u5217\u7c7b\u578b\u6240\u9700\u7684\u4e00\u5207\u3002\u505a\u597d\u51c6\u5907\uff0c\u56e0\u4e3a\u9605\u8bfb\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u5b83\uff1ahttps://github.com/hashcat/hashcat/blob/.t-guide.md\u4e3b\u8981\u7279\u6027\uff1a\u540e\u7aef\u63a5\u53e3\u7c7b\u4f3c\u4e8e\u63d2\u4ef6\u63a5\u53e3\u7279\u6027\uff0c\u6211\u4eec\u82b1\u4e86\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u6765\u91cd\u6784\u6211\u4eec\u5982\u4f55\u5728Hashcat\u4e2d\u5904\u7406\u5bf9\u4e0d\u540c\u8ba1\u7b97\u8bbe\u5907\u7684\u652f\u6301\u3002\u6b63\u5982\u60a8\u5c06\u6ce8\u610f\u5230\u7684\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u8bb8\u591a\u547d\u4ee4\u884c\u53c2\u6570\u66f4\u6539\u4e3a--backend-*\uff0c\u4ee5\u53d6\u4ee3\u65e7\u7684--openCL-*pa\n\u4fee\u590d\u4e86\u6d4b\u8bd5\u610f\u5916\u683c\u5f0f\u7684\u89e3\u5bc6\u6570\u636e\u65f6\u533a\u5757\u94fe\u3001\u6211\u7684\u94b1\u5305(V1\u548cV2)\u6563\u5217\u7684\u7834\u89e3\u3002\n\u4fee\u590d\u4e86\u63a9\u7801&&gt;\u957f\u5ea6\u4e3a16\u65f6\u63a9\u7801\u653b\u51fb\u6a21\u5f0f\u4e0bCisco-PIX\u548cCisco-ASA MD5\u5bc6\u7801\u7684\u7834\u89e3\u95ee\u9898\u3002\n\u901a\u8fc7\u5c06\u5bc6\u7801\u4e2d\u7684\u6240\u6709\u70b9\u66ff\u6362\u4e3a\u957f\u5ea6\uff0c\u4fee\u590d\u4e86DNSSEC(NSEC3)\u6563\u5217\u7684\u7834\u89e3\u3002\n\u4fee\u590d\u4e86\u63a9\u7801&gt\uff1b\u957f\u5ea6\u4e3a16(\u4ec5\u4f18\u5316\u5185\u6838)\u65f6\u63a9\u7801\u653b\u51fb\u6a21\u5f0f\u4e0bNetNTLMv1\u5bc6\u7801\u7684\u7834\u89e3\u3002\n\u4fee\u590d\u4e86\u5f53\u6700\u7ec8\u5bc6\u7801\u8d85\u8fc732\u4e2a\u5b57\u7b26\u65f6\uff0c\u653b\u51fb\u6a21\u5f0f1\u4e2d\u7684\u65e0\u6548\u5bc6\u7801\u622a\u65ad\u3002\n\u4fee\u590d\u4e86\u53c2\u6570\u8bbe\u7f6e\u4e3a2\u6216\u66f4\u9ad8\u65f6\u7eaf\u5185\u6838\u89c4\u5219\u5f15\u64ce\u89c4\u5219&#39\uff1bp&#39\uff1b\u4e2d\u7684\u8d8a\u754c\u8bfb\u53d6\u3002\n\u4fee\u590d\u4e86IKE PSK(\u6a21\u5f0f5300\u548c5400)\u6563\u5217\u7684\u8f93\u51fa\uff0c\u4ee5\u4fbf\u5728\u6b63\u786e\u4f4d\u7f6e\u4f7f\u7528\u5206\u9694\u7b26\u3002\n\u4fee\u6b63\u4e86\u5206\u9694\u7b26\u4e5f\u662f\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u65f6\uff0c\u7eaf\u89c4\u5219\u5f15\u64ce\u548cCPU\u89c4\u5219\u5f15\u64ce\u4e2d&#34\uff1be&#34\uff1b\u89c4\u5219\u7684\u8f93\u51fa\u5bc6\u7801\n\u4fee\u590d\u4e867-Zip\u89e3\u6790\u5668\uff0c\u4ee5\u5141\u8bb8\u6240\u6709\u652f\u6301\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u6570\u636e\u957f\u5ea6\u8303\u56f4\u3002\n\u4fee\u590d\u4e86--Brain-Client-Feature\u547d\u4ee4\u884c\u53c2\u6570\u7684\u9a8c\u8bc1(\u4ec5\u5141\u8bb8\u503c1\u30012\u62163)\u3002\nChangeLog\u6539\u8fdb\uff1a\u6bd4\u7279\u5e01\u94b1\u5305\uff1a\u5141\u8bb8cKey\u548cPUBLIC_KEY\u7684\u66f4\u5927\u6570\u636e\u8303\u56f4\uff0c\u4f7f\u7528\u6237\u66f4\u52a0\u53cb\u597d\u3002\n\u7834\u89e3bcrypt\u548c\u5bc6\u7801\u5b89\u5168v2\uff1a\u4f7f\u7528\u6765\u81ea\u8ba1\u7b97API\u540e\u7aef\u7684\u53cd\u9988\u52a8\u6001\u8ba1\u7b97\u6700\u4f73\u7ebf\u7a0b\u6570\u3002\nDictstat\uff1a\u5728Windows\u4e0a\uff0c\u672a\u8bbe\u7f6estat\u7ed3\u6784\u4e2d\u7684st_ino\u5c5e\u6027\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u65e0\u6548\u7684\u7f13\u5b58\u547d\u4e2d\u3002\u5df2\u5c06\u6587\u4ef6\u540d\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u6761\u76ee\u3002\n\u529e\u516c\u7834\u89e3\uff1a\u652f\u6301\u5bf940\u4f4d\u65e7\u529e\u516c\u6587\u4ef6\u4f7f\u7528\u7b2c\u4e8c\u5757\u6570\u636e\u7684\u54c8\u5e0c\u683c\u5f0f(\u6d88\u9664\u8bef\u62a5)\u3002\nOpenCL Runtime\uff1a\u6dfb\u52a0\u4e86\u68c0\u6d4b\u5230OpenCL\u8fd0\u884c\u65f6neo\u3001beignet\u3001POCL(v1.4\u6216\u66f4\u65e9\u7248\u672c)\u6216MESA\u65f6\u7684\u8b66\u544a\uff0c\u5e76\u8df3\u8fc7\u76f8\u5173\u8bbe\u5907(\u4f7f\u7528--force\u8986\u76d6)\u3002\nOpenCL\u8fd0\u884c\u65f6\uff1a\u5141\u8bb8\u5185\u6838\u8bbf\u95eeCUDA\u4e0a48k\u540e\u7684\u5171\u4eab\u5185\u5b58\u533a\u3002\u9700\u8981\u6a21\u5757\u548c\u5185\u6838\u51c6\u5907\nOpenCL\u8fd0\u884c\u65f6\uff1a\u4e3a\u82f1\u7279\u5c14CPU\u7981\u7528Apple\u4e0a\u7684OpenCL\u5185\u6838\u7f13\u5b58(\u65e0\u7f18\u65e0\u6545\u629b\u51faCL_BUILD_PROGRAM_FAILURE)\u3002\nOpenCL\u8fd0\u884c\u65f6\uff1a\u5982\u679c\u5b83\u4eec\u7684\u5185\u5b58\u7c7b\u578b\u662f\u5168\u5c40\u5185\u5b58\u7c7b\u578b(\u901a\u5e38\u662fCPU)\uff0c\u8bf7\u4e0d\u8981\u8fd0\u884c\u5171\u4eab\u5185\u5b58\u5927\u5c0f\u6216\u6052\u5b9a\u5185\u5b58\u5927\u5c0f\u68c0\u67e5\u3002\nOpenCL Runtime\uff1a\u6539\u8fdbROCM\u68c0\u6d4b\uff0c\u786e\u4fdd\u4e0d\u4f1a\u4e0e\u6700\u65b0\u7684AMDGPU\u9a71\u52a8\u7a0b\u5e8f\u6df7\u6dc6\u3002\nOpenCL\u8fd0\u884c\u65f6\uff1a\u5728AMDGPU\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u4e0d\u4f7f\u7528amd_byteign(amd_bitign\u5c31\u53ef\u4ee5\u4e86)\uff0c\u5927\u5927\u51cf\u5c11\u4e86JIT\u6bb5\u9519\u8bef\u3002\nOpenCL\u8fd0\u884c\u65f6\uff1a\u5982\u679c\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u4f7f\u7528&#39\uff1binline&#39\uff1b\u5173\u952e\u5b57\uff0c\u5219\u89e3\u51b3ROCM 2.3\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u7684JIT\u7f16\u8bd1\u5668\u9519\u8bef\u3002\noutfile\uff1a\u589e\u52a0\u4e86\u6307\u5b9aoutfile\u683c\u5f0f\u7684\u65b0\u7cfb\u7edf\uff0c\u65b0\u7684--outfile-format\u73b0\u5728\u4e5f\u652f\u6301\u65f6\u95f4\u6233\u3002\n\u542f\u52a8\u68c0\u67e5\uff1a\u6539\u8fdb\u4e86pidfile\u68c0\u67e5\uff1a\u4e0d\u4ec5\u68c0\u67e5\u73b0\u6709\u7684PID\uff0c\u8fd8\u68c0\u67e5\u53ef\u6267\u884c\u6587\u4ef6\u540d\u3002\n\u542f\u52a8\u68c0\u67e5\uff1a\u9632\u6b62\u7528\u6237\u4fee\u6539\u5728\u57fa\u51c6\u6a21\u5f0f\u4e0b\u81ea\u52a8\u8986\u76d6\u7684\u9009\u9879\nWPA/WPA2\u7834\u89e3\uff1a\u5728potfile\u4e2d\uff0c\u5c06Password\u66ff\u6362\u4e3aPMK\uff0c\u4ee5\u4fbf\u5728\u6240\u6709WPA\u6a21\u5f0f\u4e0b\u68c0\u6d4b\u5df2\u7ecf\u7834\u89e3\u7684\u7f51\u7edc\u3002\nChangeLog\u6280\u672f\uff1a\u540e\u7aef\u754c\u9762\uff1a\u6dfb\u52a0\u4e86\u65b0\u9009\u9879--BACKEND-IGNORE-CUDA\u548c--BACKEND-INGORE-OpenCL\uff0c\u4ee5\u9632\u6b62\u4f7f\u7528CUDA\u548c/\u6216OpenCL API\u3002\n\u5185\u6838\u7f16\u8bd1\uff1a\u4ece\u6240\u6709\u5185\u6838\u6784\u5efa\u9009\u9879\u4e2d\u5220\u9664-cl-std=\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0e\u6240\u6709OpenCL\u7248\u672c\u517c\u5bb9\u3002\nOpenCL\u5185\u6838\uff1a\u4e3a\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\uff0c\u5c06&#34\uff1bGPU_DEMPRESS&#34\uff1b\uff0c&#34\uff1bGPU_Memset&#34\uff1b\u548c&#34\uff1bGPU_atinit&#34\uff1b\u79fb\u81f3shared.cl\u3002\nOpenCL\u9009\u9879\uff1a\u5df2\u5220\u9664--OpenCL-Platforms\u7b5b\u9009\u5668\uff0c\u4ee5\u5f3a\u5236\u540e\u7aef\u8bbe\u5907\u7f16\u53f7\u4fdd\u6301\u4e0d\u53d8\u3002\nOpenCL\u9009\u9879\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06--Spin-Damp\u8bbe\u7f6e\u4e3a0(\u7981\u7528)\u3002\u5bf9\u4e8eCUDA\u540e\u7aef\uff0c\u6b64\u89e3\u51b3\u65b9\u6cd5\u5df2\u5f03\u7528\u3002\n\u8981\u6c42\uff1a\u66f4\u65b0\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u6700\u4f4enVidia\u9a71\u52a8\u7a0b\u5e8f\u7248\u672c\u4ece367.x\u5347\u7ea7\u5230440.64\u6216\u66f4\u9ad8\u7248\u672c\u3002\n-\u539f\u5b50", "note_en": "Welcome to hashcat v6.0.0!  Download binaries and source code from:  https://hashcat.net/hashcat/    It has been a long time since the last release, and a long journey for hashcat 6.0.0 - which we are releasing today. It comes with a lot of performance improvements, new features and detailed documentations for both users and developers.  In total, we had over 1800 Git commits since the last release (5.1.0) - from 29 different contributors.   For a full list of contributors, please see:  https://github.com/hashcat/hashcat/graph...2020-06-16  The previous release of hashcat was over one year ago, but hashcat constantly changes on a daily basis and has improved a lot in that time. We would like to release new hashcat versions more frequently in the future, but as you can see from the huge architectural changes below, this version is exceptional... Good things take time!    The new major features of hashcat 6.0.0:    Along with the major changes, we have added the following frequently demanded 51 new algorithms:  With so many new hash-modes added, we&#39;re happy to announce that we now support over 320 different algorithms!    And here&#39;s a preview of some of the performance improvements:  For a full list of all improvements, please see here:  https://docs.google.com/spreadsheets/d/1...sp=sharing    In addition to these, there are a number of other new features and changes - but in this post, we want to focus mainly on the major changes to keep the release notes to a digestible length. For those interested, the changelog and git history have a more complete list of all changes.  Most of these changes are aimed at developers. These release notes are intentionally verbose to inform current contributors and developers, as well as to catch the interest of potential future hashcat contributors.    Major Feature: Plugin Interface    One of the first things you will notice after unpacking the new hashcat version is the new modules folder. We have had modularity in mind for a long time, and have finally managed to implement it: each and every hash type is separated into its own module. This not only makes the code much easier to read, write, and maintain, but it also comes with a very nice new architecture, interface, and added flexibility.  In essence, this is actually just some overdue refactorization, but it comes with a lot of benefits for developers working on new hash types: it makes it much easier to write new host code (including parsers, decoders, encoders, hooks etc). The hash type code is 100% separated from the core code, meaning that there&#39;s no more need to edit the hashcat core sources to add a new hash type. This also enables much easier distribution of custom kernels which have not been pushed to the main repository.  During more than four months of &#34;conversion&#34; of the old hash types, we designed a new common interface and made all existing hash modes work with this new plugin interface. We even created a new testing framework, and converted all the old testing modules. See the tools/test_modules/ folder for more information.  A huge thanks to everyone helping to convert hash types and/or tests for these new interfaces. This has not only shown us that the new interface works great and is flexible enough to cover all the different needs from the different modules, but it also shows that contributors are able to easily write modular code.  The new fully modularized hash-type integration makes the hash-type-specific code more compact and encapsulated, but also maintains and even adds flexibility. For instance, it is now possible to easily add hash-mode specific JiT (just-in-time) compiler flags which are used at kernel compilation runtime, or easily mark hash-mode specific unstable warnings on some specific setups (for instance depending on driver and hardware). One could easily add new restriction and limitations directly to the module, without cluttering other parts of hashcat (to avoid &#34;spaghetti code&#34; and &#34;special cases&#34; everywhere).  There is a lot to say about this new architecture that we&#39;ve designed and we could go into much further detail, but we will do our best to not go too far here. Fortunately, for everybody interested, we also wrote a hashcat plugin interface guide for developers. This guide is the first official &#34;how to add a new hash type&#34; document, it already consisting of almost 20,000 words. It does not cover every detail, but it gives you everything you need to get started adding your own hash type.   Be prepared, because reading will take a bit of time. You can find it here:  https://github.com/hashcat/hashcat/blob/...t-guide.md    Major Feature: Backend Interface    Similar to the Plugin Interface feature, it took us quite some time and effort to refactor how we deal with supporting different compute devices in hashcat.   As you will notice, we have changed many command line parameters to --backend-* as replacements of the old --opencl-* parameters. The reason for this is that hashcat now has a more flexible architecture for how we deal with different backends (like CUDA/OpenCL etc). With this system, we can add additional backends in an elegant way whenever we may need to in the future.  The system is designed in such a way that backend-specific code is abstracted away from other operations (like loading the kernel source code etc) and uses a common interface which makes the code much more readable and easy to use.    Major Feature: CUDA Support    This is basically an &#34;application&#34; of the new Backend Interface feature. With the new architecture for hashcat backends, we were able to start supporting CUDA for NVIDIA devices. By NVIDIA devices, we mean any of their compute devices that support CUDA, not just discrete GPUs! This enables hashcat to run on chips such as the NVIDIA Jetson or NVIDIA Xavier. This also enables us to utilize CUDA on platforms where NVIDIA does not release a driver capable of OpenCL, including ARM platforms and IBM POWER9 platforms.  There are several other advantages that CUDA has over OpenCL on NVIDIA devices, but the most important one is that the entire amount of GPU memory in a single block allocation can now be unlocked by the user by installing the CUDA Toolkit.  We recommend (at the time of this writing) installing the CUDA Toolkit without the NVIDIA driver it ships with and install the latest/recommended driver from nvidia.com instead. Hashcat will actually warn you if you have an NVIDIA device, but &#34;only&#34; use the OpenCL driver, because you  should install the CUDA Toolkit for CUDA-supported devices. This step is mandatory if you want to use CUDA instead of OpenCL backend because there&#39;s no JiT compiler for CUDA the way how it comes already built-in for the OpenCL with the NVIDIA drivers.  Hashcat will list all the devices (CUDA devices in addition to OpenCL devices) with --backend-info (short: -I) and you can easily select the devices you want with --backend-devices (short: -d). Of course, hashcat prefers the &#34;CUDA devices&#34; if available! (and for the curious reader: no, you can&#39;t actually use OpenCL and CUDA at the same time for the same device in hashcat - we call this an alias. The speed will NOT double this way :P)  One of the biggest advantages of CUDA compared to OpenCL is the full use of shared memory (sometimes also called Local Memory). In OpenCL, there&#39;s a minimum of 1 byte reserved by OpenCL which has bigger implications than may be apparent at first. For example, most NVIDIA cards have 48kb of shared memory. To efficiently compute bcrypt, each thread requires 4k of this shared memory pool. This means that on CUDA we are able to use 12 threads on bcrypt instead of just 11 threads with OpenCL. This and other optimizations are the reason we improved the performance of bcrypt by 46.90%.    Major Feature: Emulation Mode    This feature is basically introducing a very nice way to use kernel code within modules or host code. We came up with this strategy for the following reasons:  For complex kernels with lots of code, it&#39;s easier to debug the code on the host side as a standalone project. This also saves long startup times and increases development speed.\n Reuse complex kernel code from within the module. A good example is WPA EAPOL/PMKID, where we compute the last steps in the module parser with the goal to find already cracked hashes in the potfile. This saves maintaining the same code on two ends.\n Reuse kernel code in order to precompute values in parsers. As a very easy example, consider some &#34;flawed&#34; algo that uses md5($salt) within the algorithm. In this case we could just precompute this MD5 in the host.\nThe &#34;emulated&#34; code is basically shared between the OpenCL/CUDA code and the host code and can, for instance, be directly included by the module (for instance src/modules/module_19100.c includes emu_inc_hash_sha256.h). This way we also avoid duplicated code and guarantee that the host code also uses the most optimized code.  It is actually quite easy to use for developers. For an example of some basic hashing algos being used directly in modules with this new emulation mode, just take a look at existing modules (like -m 19100 as mentioned above) or glance at the include/emu_*.h files.    Major Feature: Memory/Thread Management    Lastly, a feature that is less directed at hashcat devs/contributors, but is still interesting and very important when it comes to performance: improvement in memory and thread management to reach maximum performance.  Hashcat 6.0.0 introduces a new way that threads and device memory (VRAM) are used and optimized: with the addition of a new automatic workload tuner, we try to guarantee maximum performance depending on the available memory, hash type, attack mode, amplifiers (e.g. rules) etc. We basically changed the thread management from a &#34;native&#34; thread count for GPU to maximum possible threads. We&#39;ve also added a command line parameter: --kernel-threads (short: -T) if you want to play with this and set the amount of threads manually.  This obviously comes with a very nice performance gain depending on hash type, attack mode etc.    Changelog Features:    Added CUDA as a new compute backend (enables hashcat to run on NVIDIA Jetson, IBM POWER9 w/ Nvidia V100, etc.)\n      Keep output of --show and --left in the original ordering of the input hash file\n  Changelog fixed Bugs:    Fixed calculation of brain-session ID - only the first hash of the hashset was taken into account\n Fixed cleanup of password candidate buffers on GPU as set from autotune when -n parameter was used\n Fixed copy/paste error leading to invalid &#34;Integer overflow detected in keyspace of mask&#34; in attack-mode 6 and 7\n  Fixed cracking of Blockchain, My Wallet (V1 and V2) hashes when testing decrypted data in unexpected format\n Fixed cracking of Cisco-PIX and Cisco-ASA MD5 passwords in mask-attack mode when mask &gt; length 16\n Fixed cracking of DNSSEC (NSEC3) hashes by replacing all dots in the passwords with lengths\n  Fixed cracking of NetNTLMv1 passwords in mask-attack mode when mask &gt; length 16 (optimized kernels only)\n       Fixed invalid password truncation in attack-mode 1 when the final password is longer than 32 characters\n   Fixed out-of-boundary read in pure kernel rule engine rule &#39;p&#39; when parameter was set to 2 or higher\n  Fixed output of IKE PSK (mode 5300 and 5400) hashes to use separators in the correct position\n Fixed output password of &#34;e&#34; rule in pure and CPU rule engine when separator character is also the first letter\n      Fixed the 7-Zip parser to allow the entire supported range of encrypted and decrypted data lengths\n Fixed the validation of the --brain-client-features command line argument (only values 1, 2 or 3 are allowed)\n  Changelog Improvements:    Bitcoin Wallet: Be more user friendly by allowing a larger data range for ckey and public_key\n   Cracking bcrypt and Password Safe v2: Use feedback from the compute API backend to dynamically calculate optimal thread count\n Dictstat: On Windows, the st_ino attribute in the stat struct is not set, which can lead to invalid cache hits. Added the filename to the database entry.\n    Office cracking: Support hash format with second block data for 40-bit oldoffice files (eliminates false positives)\n OpenCL Runtime: Added a warning if OpenCL runtime NEO, Beignet, POCL (v1.4 or older) or MESA is detected, and skip associated devices (override with --force)\n OpenCL Runtime: Allow the kernel to access post-48k shared memory region on CUDA. Requires both module and kernel preparation\n OpenCL Runtime: Disable OpenCL kernel cache on Apple for Intel CPU (throws CL_BUILD_PROGRAM_FAILURE for no reason)\n OpenCL Runtime: Do not run shared- or constant-memory size checks if their memory type is of type global memory (typically CPU)\n OpenCL Runtime: Improve ROCm detection and make sure to not confuse with recent AMDGPU drivers\n OpenCL Runtime: Not using amd_bytealign (amd_bitalign is fine) on AMDGPU driver drastically reduces JiT segfaults\n    OpenCL Runtime: Workaround JiT compiler error on ROCm 2.3 driver if the &#39;inline&#39; keyword is used in function declaration\n   Outfile: Added new system to specify the outfile format, the new --outfile-format now also supports timestamps\n Startup Checks: Improved the pidfile check: Do not just check for existing PID, but also check executable filename\n Startup Checks: Prevent the user from modifying options which are overwritten automatically in benchmark mode\n           WPA/WPA2 cracking: In the potfile, replace password with PMK in order to detect already cracked networks across all WPA modes\n  Changelog Technical:    Backend Interface: Added new options --backend-ignore-cuda and --backend-ingore-opencl to prevent CUDA and/or OpenCL API from being used\n                   Kernel Compile: Removed -cl-std= from all kernel build options since we&#39;re compatible to all OpenCL versions\n  OpenCL Kernels: Moved &#34;gpu_decompress&#34;, &#34;gpu_memset&#34; and &#34;gpu_atinit&#34; into shared.cl in order to reduce compile time\n OpenCL Options: Removed --opencl-platforms filter in order to force backend device numbers to stay constant\n OpenCL Options: Set --spin-damp to 0 (disabled) by default. With the CUDA backend this workaround became deprecated\n   Requirements: Update runtime check for minimum NVIDIA driver version from 367.x to 440.64 or later\n- atom", "posttime": "2020-06-17 16:44:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "hashcat", "title": "Hashcat 6.0.0", "title_en": "Hashcat 6.0.0", "transed": 1, "url": "https://hashcat.net/forum/thread-9303.html", "via": "", "real_tags": ["hashcat"]}, {"category": "", "categoryclass": "", "imagename": "b6b593187cafb20930a5c2cccef5faf1.jpg", "infoid": 1006926, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u578b\u79d1\u6280\u516c\u53f8\u4e00\u76f4\u5904\u4e8e\u7f13\u6162\u6cb8\u817e\u72b6\u6001\u3002\u5728\u7ecf\u5386\u4e86\u897f\u90e8\u7684\u75af\u72c2\u589e\u957f\u548c\u65e0\u6cd5\u65e0\u5929\u4e4b\u540e\uff0c\u7845\u8c37\u7ec8\u4e8e\u5f97\u5230\u4e86\u591a\u5e74\u6765\u4e00\u76f4\u56de\u907f\u7684\u5ba1\u67e5-\u4f3c\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5bf9\u4e9a\u9a6c\u900a\u3001\u82f9\u679c\u3001\u8c37\u6b4c\u548cFacebook\u611f\u5230\u5e7b\u706d\u3002\u5728\u6211\u4eec\u83b7\u5f97Sherlock\u7684\u7ecf\u9a8c\u4e4b\u540e(\u82f9\u679c\u590d\u5236\u4e86\u6211\u4eec\u7684\u4ea7\u54c1\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u514d\u8d39\u7684OS\u529f\u80fd\u5305\u62ec\u5728\u5185)\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4ee5\u6211\u4eec\u81ea\u5df1\u7684\u89c2\u70b9\u6765\u8ddf\u4e0a\u53cd\u5784\u65ad\u6cd5\u7684\u6b65\u4f10\u3002\n\u6211\u4eec\u662fAstropad-\u4e00\u5bb6\u5c0f\u578b\u7684\u81ea\u529b\u66f4\u751f\u7684\u521d\u521b\u516c\u53f8\uff0c\u4e3aAstropad Studio\u548c\u9732\u5a1cDisplay\u7b49\u521b\u610f\u4e13\u4e1a\u4eba\u58eb\u63d0\u4f9b\u4ea7\u54c1\u30022019\u5e746\u6708\uff0c\u82f9\u679c\u5728MacOS Catalina\u4e2d\u5ba3\u5e03\u4e86\u4e00\u9879\u540d\u4e3aSidecar\u7684\u65b0\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u7d27\u5bc6\u590d\u5236\u4e86\u6211\u4eec\u7684\u4ea7\u54c1\u7ebf\u3002\u5bf9\u4e8e\u6211\u4eec\u53ea\u670913\u4eba\u7684\u56e2\u961f\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bc1\u706d\u6027\u7684\u6d88\u606f\u3002\u770b\u7740\u82f9\u679c\u5411\u4e16\u754c\u5c55\u793aSidecar\uff0c\u5c31\u50cf\u770b\u5230\u591a\u5e74\u7684\u8f9b\u52e4\u5de5\u4f5c\u5728\u4f60\u773c\u524d\u95ea\u73b0\uff0c\u800c\u53e6\u4e00\u4e2a\u4eba\u5374\u4e3a\u6b64\u8d62\u5f97\u4e86\u8363\u8a89\u3002\n\u901a\u8fc7\u575a\u97e7\u4e0d\u62d4\u548c\u7075\u6d3b\u673a\u52a8\uff0c\u6211\u4eec\u8db3\u591f\u5e78\u8fd0\u5730\u5728\u8fd9\u6b21\u6253\u51fb\u4e2d\u5e78\u5b58\u4e0b\u6765\u3002\u5982\u679c\u4f60\u60f3\u77e5\u9053\u540e\u679c\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5199\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u5e16\u5b50\uff0c\u544a\u8bc9\u4f60\u5f53\u4f60\u88ab\u82f9\u679c\u516c\u53f8\u590f\u6d1b\u514b\u65f6\u8be5\u600e\u4e48\u505a\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5b66\u5230\u4e86\u4e00\u4e9b\u8270\u96be\u7684\u5546\u4e1a\u6559\u8bad\uff0c\u6b63\u5728\u52aa\u529b\u91cd\u5199Windows\u7684\u8de8\u5e73\u53f0\u4ee3\u7801\uff0c\u5e76\u6709\u671b\u4f5c\u4e3a\u4e00\u5bb6\u6bd4\u6211\u4eec\u88ab\u590f\u6d1b\u514b\u4e4b\u524d\u66f4\u5f3a\u5927\u7684\u516c\u53f8\u5377\u571f\u91cd\u6765\u3002\n\u5728\u4e00\u6b21\u7f55\u89c1\u7684\u4e24\u515a\u5408\u4f5c\u4e2d\uff0c\u653f\u5e9c\u6b63\u5728\u5c3d\u81ea\u5df1\u7684\u4e00\u4efd\u529b\u91cf\uff0c\u91cd\u65b0\u8003\u8651\u6211\u4eec\u7684\u5784\u65ad\u6cd5\u5728\u4fdd\u62a4\u6d88\u8d39\u8005\u548c\u8d44\u672c\u4e3b\u4e49\u65b9\u9762\u7684\u6709\u6548\u6027\u3002Politico\u62a5\u9053\u79f0\uff0c\u7279\u6717\u666e\u653f\u5e9c\u5ba3\u5e03\u5c06\u53f8\u6cd5\u90e8\u53cd\u5784\u65ad\u90e8\u95e8\u7684\u9884\u7b97\u589e\u52a071%\uff0c\u4ee5\u8c03\u67e5\u5927\u578b\u79d1\u6280\u5784\u65ad\u4f01\u4e1a\u3002\n\u79ef\u6781\u4e3b\u52a8\u5730\u81ea\u5df1\u89e3\u51b3\u53cd\u5784\u65ad\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u653f\u5e9c\u4ecb\u5165\uff0c\u8fd9\u7b26\u5408\u82f9\u679c\u7684\u6700\u4f73\u5229\u76ca\u3002\u4e3a\u4e86\u5e2e\u52a9\u8482\u59c6\u00b7\u5e93\u514b\u8d70\u5728\u5ba1\u67e5\u7684\u524d\u9762\uff0c\u6211\u4eec\u4e3a\u82f9\u679c\u6536\u96c6\u4e86\u4e00\u4e9b\u4e0d\u9700\u8981\u653f\u5e9c\u76d1\u7ba1\u7684\u5408\u7406\u5efa\u8bae\u3002\u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u82f9\u679c\u53ef\u80fd\u60f3\u8981\u81ea\u5df1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u8ba9\u653f\u5e9c\u4ecb\u5165\u6765\u62c6\u5206\u5e73\u53f0(\u6211\u4eec\u7a0d\u540e\u4f1a\u66f4\u6df1\u5165\u5730\u63a2\u8ba8\u8fd9\u4e00\u70b9)\u3002\u6211\u4eec\u5e0c\u671b\u770b\u5230App Store\u4e3a\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u63d0\u4f9b\u516c\u5e73\u7684\u7ade\u4e89\u73af\u5883\uff0c\u5e76\u4e3a\u6d88\u8d39\u8005\u4fc3\u8fdb\u4e30\u5bcc\u7684\u5e94\u7528\u7ecf\u6d4e\uff0c\u6211\u4eec\u51c6\u5907\u5c31\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u63d0\u4f9b\u6211\u4eec\u81ea\u5df1\u7684\u540eSherlock\u667a\u6167\u3002\n\u4f5c\u4e3a\u6d88\u8d39\u8005\uff0c\u6211\u4eec\u559c\u6b22App Store\uff0c\u56e0\u4e3a\u5b83\u8ba9\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u6700\u9002\u5408\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u8fd9\u662f\u4e00\u79cd\u80a4\u6d45\u7684\u81ea\u7531\uff0c\u56e0\u4e3a\u82f9\u679c\u5bf9\u6211\u4eec\u5982\u4f55\u4e0e\u8fd9\u4e9b\u5e94\u7528\u4e92\u52a8\u62e5\u6709\u6700\u7ec8\u63a7\u5236\u6743\u3002\n\u82f9\u679c\u6709\u4e00\u79cd\u81ea\u4ee5\u4e3a\u662f\u7684\u65b9\u5f0f\uff0c\u5c06\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u4f18\u5148\u4e8e\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8feb\u4f7f\u7528\u6237\u91c7\u53d6\u989d\u5916\u7684\u51e0\u4e2a\u6b65\u9aa4\u6765\u83b7\u5f97\u4ed6\u4eec\u60f3\u8981\u7684\u4f53\u9a8c\u3002\u5982\u679c\u4f60\u662f\u8c37\u6b4c\u5730\u56fe\u7684\u7528\u6237\uff0c\u5f53\u4f60\u70b9\u51fb\u4e00\u4e2a\u5730\u5740\uff0c\u4f60\u7684iPhone\u4f1a\u81ea\u52a8\u5728\u82f9\u679c\u5730\u56fe\u4e2d\u5f39\u51fa\u65b9\u5411\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u607c\u706b\u3002\u6216\u8005\uff0c\u5982\u679c\u4f60\u662fSpotify\u7684\u7528\u6237\uff0c\u4f60\u4e0d\u80fd\u53ea\u8981\u6c42Siri\u64ad\u653e\u683c\u83b1\u59c6\u65af\u7684\u65b0\u4e13\u8f91\uff0c\u56e0\u4e3a\u9664\u975e\u4f60\u5728Apple Music\u4e0b\u8f7d\u4e86\u5b83\uff0c\u5426\u5219\u5979\u662f\u627e\u4e0d\u5230\u7684\u3002\n\u5728\u786c\u4ef6\u9500\u91cf\u4e0b\u6ed1\u7684\u65f6\u4ee3\uff0c\u8fd9\u4f7f\u5f97\u82f9\u679c\u80fd\u591f\u8ba9\u7528\u6237\u4e0e\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u4fdd\u6301\u8054\u7cfb-\u8fd9\u4e00\u6218\u7565\u6b63\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u5f6d\u535a\u79d1\u6280(Bloomberg Technology)\u62a5\u9053\u4e86\u65b0\u51fa\u73b0\u7684\u4f20\u8a00\uff0c\u79f0\u82f9\u679c\u6b63\u5728\u8003\u8651\u653e\u677e\u9650\u5236\uff0c\u5141\u8bb8\u7528\u6237\u5c06\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u8bbe\u7f6e-\u6b64\u4e3e\u65e0\u7591\u662f\u53d7\u5230\u6700\u8fd1\u53cd\u5784\u65ad\u8c03\u67e5\u538b\u529b\u7684\u50ac\u5316\u3002\n\u5982\u679c\u82f9\u679c\u7684\u5267\u672c\u542c\u8d77\u6765\u5f88\u8033\u719f\uff0c\u90a3\u662f\u56e0\u4e3a\u5fae\u8f6f\u65e9\u572890\u5e74\u4ee3\u5c31\u505a\u8fc7\u540c\u6837\u7684\u4e8b\u60c5\u3002\u5728\u4e92\u8054\u7f51\u7684\u65e9\u671f\uff0c\u5fae\u8f6f(\u5728\u6d4f\u89c8\u5668\u5927\u6218\u4e2d\u59d7\u59d7\u6765\u8fdf)\u51b3\u5b9a\u79ef\u6781\u5730\u5c06Internet Explorer\u4e0eWindows\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u6b64\u4e3e\u627c\u6740\u4e86\u7845\u8c37\u6b63\u5728\u5d1b\u8d77\u7684\u8d85\u7ea7\u5de8\u661f\u7f51\u666f(Netscape)\u7684\u751f\u547d\uff0c\u5de9\u56fa\u4e86\u4e92\u8054\u7f51\u5e02\u573a\uff0c\u6700\u7ec8\u51cf\u7f13\u4e86\u521b\u65b0\uff0c\u7ed9\u6d88\u8d39\u8005\u63d0\u4f9b\u7684\u9009\u62e9\u66f4\u5c11\u3002\u5982\u679c\u82f9\u679c\u7ee7\u7eed\u6309\u7167\u540c\u6837\u5484\u5484\u903c\u4eba\u7684\u89c4\u5219\u884c\u4e8b\uff0c\u4ed6\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u5546\u5e97\u5c06\u5f00\u59cb\u7f3a\u4e4f\u521b\u65b0\uff0c\u6d88\u8d39\u8005\u5c06\u611f\u53d7\u5230\u6253\u51fb\u3002\n\u76ee\u524d\uff0c\u53ea\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8d2d\u4e70iOS\u5e94\u7528\u7a0b\u5e8f\u6216\u8fdb\u884c\u5e94\u7528\u7a0b\u5e8f\u5185\u8d2d\u4e70\uff0c\u90a3\u5c31\u662f\u901a\u8fc7App Store\u3002\u5f53\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u5728App Store\u4e0a\u9500\u552e\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c30%\u7684\u9500\u552e\u989d\u81ea\u52a8\u5f52\u82f9\u679c\u6240\u6709\uff0c\u8fd9\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u201c\u82f9\u679c\u7a0e\u201d\u3002\u4f5c\u4e3a\u4e00\u5bb6\u5c0f\u578b\u521d\u521b\u516c\u53f8\uff0c\u8fd9\u5bf9\u80c3\u53e3\u6765\u8bf4\u662f\u4e00\u7b14\u5f88\u5927\u7684\u6210\u672c\u3002\n\u5728\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f00\u53d1\u8005\u4e0d\u5141\u8bb8\u63d0\u4f9b\u66ff\u4ee3\u652f\u4ed8\u673a\u5236\uff0c\u751a\u81f3\u4e0d\u5141\u8bb8\u6697\u793a\u5176\u4ed6\u8d2d\u4e70\u65b9\u5f0f\u3002\u4f60\u6709\u6ca1\u6709\u60f3\u8fc7\uff0c\u4e3a\u4ec0\u4e48\u4f60\u4e0d\u80fd\u5728Audible\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8d2d\u4e70\u6709\u58f0\u8bfb\u7269\uff0c\u6216\u8005\u5728iPad\u4e0a\u6ce8\u518cNetflix\u6216YouTube\u8ba2\u9605\uff1f\u8fd9\u662f\u56e0\u4e3a\u82f9\u679c\u5bf9\u6536\u8d2d\u4ef7\u683c\u5f81\u653630%\u7684\u7a0e\uff0c\u5927\u4e3e\u524a\u51cf\u4e86\u516c\u53f8\u7684\u5229\u6da6\u3002\u5982\u679c\u4f60\u662f\u4e00\u5bb6\u50cfNetflix\u3001\u4e9a\u9a6c\u900a\u6216\u8c37\u6b4c\u8fd9\u6837\u7684\u5927\u516c\u53f8\uff0c\u4f60\u5c31\u8db3\u591f\u5f3a\u5927\uff0c\u53ef\u4ee5\u907f\u5f00\u82f9\u679c\u7a0e\uff0c\u63a8\u52a8\u7528\u6237\u5728App Store\u4e4b\u5916\u4ed8\u6b3e\u3002\u4f46\u5927\u591a\u6570\u89c4\u6a21\u8f83\u5c0f\u7684\u7b2c\u4e09\u65b9\u5f00\u53d1\u5546\u6ca1\u6709\u5f71\u54cd\u529b\u5728App Store\u5468\u56f4\u91cd\u65b0\u652f\u4ed8\uff0c\u4ee5\u907f\u514d\u82f9\u679c\u7684\u7a0e\u6536\uff1b\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u5546\u4e3a\u4e86\u7ef4\u6301\u4e1a\u52a1\uff0c\u5f80\u5f80\u4e0d\u5f97\u4e0d\u5728\u5e94\u7528\u7a0b\u5e8f\u4ef7\u683c\u4e2d\u8ba1\u5165\u7a0e\u6536\u6210\u672c\u3002\n\u82f9\u679c\u6b63\u5728\u5229\u7528\u5176\u5bf9\u5e73\u53f0\u7684\u63a7\u5236\u6765\u5f81\u6536\u8fd9\u4e00\u201c\u7a0e\u201d\uff0c\u800c\u5b83\u5b9e\u9645\u4e0a\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u80fd\u529b\u6765\u7ade\u4e89\u8fd9\u9879\u7a0e\u6536\u3002\u5982\u679c\u8ba9\u6d88\u8d39\u8005\u5728\u4e0d\u540c\u7684\u652f\u4ed8\u673a\u5236\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff0c\u6bd4\u5982\u8d1d\u5b9d(PayPal)\u6216\u4e9a\u9a6c\u900a\u652f\u4ed8(Amazon Pay)\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\u5982\u679cApp Store\u7684\u8d2d\u4e70\u5bf9\u6d88\u8d39\u8005\u6765\u8bf4\u6bd4\u4f7f\u7528\u8d1d\u5b9d\u66f4\u65e0\u7f1d\uff0c\u90a3\u5c31\u597d\uff01\u8ba9\u6d88\u8d39\u8005\u505a\u51fa\u9009\u62e9\uff0c\u800c\u4e0d\u662f\u5f3a\u52a0\u7ed9\u4ed6\u4eec\u3002\u8fd9\u4e00\u89e3\u51b3\u65b9\u6848\u4e0d\u4ec5\u7ed9\u4e86\u6d88\u8d39\u8005\u66f4\u591a\u7684\u81ea\u7531\uff0c\u800c\u4e14\u8fd8\u4e3a\u8de8\u652f\u4ed8\u7cfb\u7edf\u7684\u7ade\u4e89\u8bbe\u5b9a\u4e86\u66f4\u9ad8\u7684\u6807\u51c6\u3002\u7a81\u7136\u95f4\uff0c\u5e94\u7528\u5185\u8d2d\u4e70\u5c06\u51ed\u501f\u5176\u4e0e\u5e94\u7528\u4f53\u9a8c\u8f7b\u677e\u96c6\u6210\u7684\u4f18\u52bf\u5c55\u5f00\u7ade\u4e89\u3002\n\u5728\u53d6\u51fa\u4fe1\u7528\u5361\u6216\u767b\u5f55\u8d1d\u5b9d(PayPal)\u65f6\uff0c\u603b\u4f1a\u6709\u4e00\u4e9b\u6469\u64e6\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5e0c\u671b\u907f\u514d\u4e0eApple Pay\u53d1\u751f\u6469\u64e6\u7684\u5ba2\u6237\u6765\u8bf4\uff0c\u4ed6\u4eec\u8d2d\u4e70\u7684\u5546\u54c1\u768430%\u53ef\u4ee5\u5956\u52b1\u7ed9\u82f9\u679c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5f00\u53d1\u4eba\u5458\u60f3\u8981\u5728\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6784\u5efa\u4e00\u4e2a\u771f\u6b63\u6d41\u7545\u7684PayPal\u96c6\u6210\uff0c\u90a3\u5c31\u8ba9\u4ed6\u4eec\u53bb\u505a\u5427\uff01\u8d39\u7528(\u50cfPaypal\u8fd9\u6837\u7684\u516c\u53f8\u901a\u5e38\u57283%\u5de6\u53f3)\u5c06\u8f6c\u5ac1\u7ed9\u6d88\u8d39\u8005\u9009\u62e9\u7684\u4efb\u4f55\u4e00\u79cd\u652f\u4ed8\u673a\u5236\u3002\n\u5982\u679c\u4f60\u4eca\u5929\u60f3\u4e0b\u8f7d\u4e00\u6b3eiOS\u5e94\u7528\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u901a\u8fc7App Store\uff1b\u8981\u628a\u4f60\u7684\u5e94\u7528\u653e\u5230App Store\u4e0a\uff0c\u9700\u8981\u7ecf\u8fc7\u82f9\u679c\u516c\u53f8\u7684\u4e25\u683c\u5ba1\u67e5\u3002\u82f9\u679c\u58f0\u79f0\uff0c\u8fd9\u662f\u4fdd\u62a4iOS\u7528\u6237\u5b89\u5168\u548c\u9690\u79c1\u7684\u552f\u4e00\u65b9\u6cd5-\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5141\u8bb8\u7528\u6237\u5728App Store\u4e4b\u5916\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f(\u4e5f\u79f0\u4e3a\u4fa7\u52a0\u8f7d)\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u6301\u5b89\u5168\u662f\u53ef\u80fd\u7684\u3002\n\u5728App Review\u4e4b\u5916\uff0c\u82f9\u679c\u62e5\u6709\u590d\u6742\u7684\u673a\u5236\u6765\u5173\u95ed\u6076\u610f\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5176\u65e0\u6cd5\u8fdb\u5165\u624b\u673a\u3002\u82f9\u679c\u4ecd\u7136\u53ef\u4ee5\u5bf9\u4fa7\u9762\u52a0\u8f7d\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u516c\u8bc1\u7cfb\u7edf\uff0c\u4f7f\u5176\u80fd\u591f\u8fdc\u7a0b\u201c\u6740\u6b7b\u201d\u5728App Store\u4e4b\u5916\u5206\u53d1\u7684\u6076\u610f\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e3a\u6d88\u8d39\u8005\u63d0\u4f9b\u4e86\u9009\u62e9\u548c\u5b89\u5168-\u8fd9\u6b63\u662f\u82f9\u679c\u5bf9Mac\u5e94\u7528\u7a0b\u5e8f\u6240\u505a\u7684\u4e8b\u60c5\uff01\n\u76ee\u524d\u7684App Review\u6d41\u7a0b\u7684\u95ee\u9898\u662f\uff0c\u5b83\u7ed9\u82f9\u679c\u7559\u4e0b\u4e86\u5f88\u5927\u7684\u7a7a\u95f4\uff0c\u8ba9\u5b83\u53ef\u4ee5\u6ee5\u7528\u6743\u529b\uff0c\u5728\u6ca1\u6709\u89e3\u91ca\u7684\u60c5\u51b5\u4e0b\u62d2\u7edd\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8ba1\u5212\u57282018\u5e74\u5c06\u76f8\u673a\u6309\u94ae\u5f15\u5165\u9732\u5a1c\u663e\u793a\u5668\u3002\u76f8\u673a\u6309\u94ae\u662f\u4e00\u9879\u521b\u65b0\u7684\u65b0\u529f\u80fd\uff0c\u5b83\u5c06ipad\u7684\u524d\u7f6e\u6444\u50cf\u5934\u53d8\u6210\u4e86\u4e00\u4e2a\u6309\u94ae\uff1a\u53ea\u9700\u8f7b\u89e6\u6444\u50cf\u5934\uff0c\u5c31\u80fd\u8c03\u51fa\u9732\u5a1c\u7684\u7528\u6237\u754c\u9762\u3002\u8fd9\u4e00\u65b0\u529f\u80fd\u5728\u6211\u4eec\u7684\u7528\u6237\u548c\u5a92\u4f53\u4e2d\u83b7\u5f97\u4e86\u5f88\u591a\u5173\u6ce8\uff0c\u4f46\u82f9\u679c\u5e76\u6ca1\u6709\u611f\u89c9\u5230\u8fd9\u4e00\u70b9\u3002\u751a\u81f3\u5728\u6211\u4eec\u6709\u673a\u4f1a\u63d0\u4ea4\u66f4\u65b0\u4e4b\u524d\uff0c\u82f9\u679c\u5c31\u8b66\u544a\u6211\u4eec\u4e0d\u8981\u63d0\u4ea4\uff0c\u56e0\u4e3a\u66f4\u65b0\u4f1a\u88ab\u62d2\u7edd\u3002\n\u6709\u4e86\u4fa7\u9762\u52a0\u8f7d\uff0c\u5982\u679c\u82f9\u679c\u60f3\u8981\u62d2\u7edd\u76f8\u673a\u6309\u94ae\uff0c\u4f46\u4e00\u4e9b\u7528\u6237\u4ecd\u7136\u60f3\u8981\uff0c\u8fd9\u4e9b\u7528\u6237\u5c06\u53ef\u4ee5\u9009\u62e9\u5728App Store\u4e4b\u5916\u7ee7\u7eed\u4f7f\u7528\u8fd9\u6b3e\u5e94\u7528\u3002\u5982\u679c\u6211\u4eec\u5141\u8bb8\u7684\u8bdd\uff0c\u6211\u4eec\u5bf9\u76f8\u673a\u6309\u94ae\u7684\u62d2\u7edd\u53ef\u80fd\u4f1a\u627c\u6740\u6211\u4eec\u5bf9\u521b\u65b0\u7684\u6e34\u671b\u3002\u62c5\u5fc3\u6211\u4eec\u5728\u65b0\u529f\u80fd\u4e0a\u7684\u52aa\u529b\u4f1a\u88abApp Store\u62d2\u4e4b\u95e8\u5916\uff0c\u4e3a\u4ec0\u4e48\u8981\u6311\u6218\u6781\u9650\u5462\uff1f\n\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u552f\u4e00\u5bf9\u6b64\u611f\u5230\u6cae\u4e27\u7684\u4eba\u3002\u5728\u53bb\u5e7411\u6708\u81f4\u82f9\u679c\u7684\u4e00\u5c01\u516c\u5f00\u4fe1\u4e2d\uff0cBlueMail\u5e94\u7528\u7a0b\u5e8f\u7684\u521b\u59cb\u4eba\u6073\u6c42\u8482\u59c6\u00b7\u5e93\u514b(Tim Cook)\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u7a81\u7136\u88ab\u5220\u9664\u540e\uff0c\u5c06\u5176\u91cd\u65b0\u653e\u56de\u5e94\u7528\u7a0b\u5e8f\u5546\u5e97(App Store)\u3002\u201c\u8fde\u7ebf\u201d\u66f4\u6df1\u5165\u5730\u62a5\u9053\u79f0\uff0c\u5c31\u5728\u82f9\u679c\u5ba3\u5e03\u5176\u65b0\u7684\u201c\u767b\u5f55\u82f9\u679c\u201d\u529f\u80fd\u51e0\u5929\u540e\uff0cBlueMail\u88ab\u5220\u9664\uff0c\u8be5\u529f\u80fd\u4fb5\u72af\u4e86BlueMail\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e13\u5229\u6280\u672f\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d(New York Times)\u8c03\u67e5\u4e86\u4e00\u5219\u7c7b\u4f3c\u7684\u62a5\u9053\uff0c\u79f0\u82f9\u679c\u5728\u5ba3\u5e03\u81ea\u5df1\u7684\u7236\u6bcd\u63a7\u5236\u529f\u80fd\u540e\uff0c\u5c06\u7236\u6bcd\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\u4ece\u5e94\u7528\u7a0b\u5e8f\u5546\u5e97(App Store)\u4e0b\u67b6\u3002\n\u5bf9iOS\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u526f\u8f7d\u5c06\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8fdb\u884c\u521b\u65b0\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u88ab\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\u62d2\u7edd-\u6216\u8005\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5b8c\u5168\u88abApp Store\u8e22\u5f00\u3002\u6700\u7ec8\uff0c\u526f\u4e1a\u4f7f\u7528\u6237\u80fd\u591f\u9009\u62e9\u6700\u9002\u5408\u4ed6\u4eec\u9700\u6c42\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u79c1\u6709API\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u8ba9\u6211\u4eec\u611f\u5230\u6cae\u4e27\uff0c\u56e0\u4e3a\u82f9\u679c\u6709\u80fd\u529b\u5c06\u5f00\u53d1\u4eba\u5458\u9501\u5728\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u7684\u6784\u5efa\u548c\u4f7f\u7528\u4e4b\u5916\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u82f9\u679c\u51b3\u5b9a\u201c\u795e\u63a2\u590f\u6d1b\u514b\u201d\u4e00\u6b3e\u5e94\u7528\u65f6\uff0c\u5b83\u6709\u4e00\u4e2a\u5185\u90e8\u4f18\u52bf\uff0c\u90a3\u5c31\u662f\u4f7f\u7528\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u65e0\u6cd5\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u3002\n\u5728\u5f6d\u535a\u793e(Bloomberg)\u5bf9\u4e0d\u516c\u5e73API\u505a\u6cd5\u7684\u8c03\u67e5\u4e2d\uff0c\u9a6c\u514b\u00b7\u53e4\u5c14\u66fc(Mark Gurman)\u6307\u51fa\u4e86\u6570\u5341\u4e2a\u4f8b\u5b50\uff0c\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u4f8b\u5b50\u5305\u62ec\u79fb\u52a8\u652f\u4ed8\uff0c\u8c37\u6b4c\u652f\u4ed8(Google Pay)\u7b49\u652f\u4ed8\u673a\u5236\u65e0\u6cd5\u8bbf\u95eeiPhone\u7684\u8fd1\u573a\u901a\u4fe1\u82af\u7247\u8fdb\u884c\u5e97\u5185\u8d2d\u7269\uff1b\u5bfc\u822a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u8c37\u6b4c\u5730\u56fe(Google Maps)\uff0c\u65e0\u6cd5\u5728iPhone\u9501\u5c4f\u4e0a\u663e\u793a\u65b9\u5411\u3002\n\u5728\u6211\u4eec\u81ea\u5df1\u7684\u60c5\u51b5\u4e0b\uff0c\u82f9\u679c\u9996\u6b21\u4eae\u76f8\u7684Sidecar\u900f\u9732\uff0c\u5b83\u8fd0\u884c\u7684\u662f\u66f4\u5feb\u7684\u70b9\u5bf9\u70b9\u8054\u7f51\u7684\u79c1\u6709API-\u6211\u4eec\u591a\u5e74\u6765\u4e00\u76f4\u8981\u6c42\u9732\u5a1c\u663e\u793a\u8bbf\u95ee\u7684\u79c1\u6709API\u3002\u8fd9\u662f\u6211\u4eec\u901a\u8fc7\u201c\u795e\u63a2\u590f\u6d1b\u514b\u201d\u5b66\u5230\u7684\u8270\u96be\u4e00\u8bfe\uff0c\u5173\u4e8e\u6211\u4eec\u5728\u82f9\u679cAPI\u4e0a\u5efa\u7acb\u4e1a\u52a1\u7684\u7ecf\u5386\uff0c\u6211\u4eec\u6709\u5f88\u591a\u8bdd\u8981\u8bf4\u3002Astropad\u8054\u5408\u521b\u59cb\u4eba\u4e54\u74e6\u5c3c\u00b7\u591a\u5185\u5229(Giovanni Donelli)\u6307\u51fa\uff0c\u201cApp Store\u7684\u7ade\u4e89\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u53ea\u8981\u6211\u4eec\u90fd\u6709\u76f8\u540c\u7684\u6280\u672f\u57fa\u7840\u6765\u7ade\u4e89\u3002\u201d\n\u8fd9\u79cd\u4e0d\u516c\u5e73\u7684\u7ade\u4e89\u73af\u5883\u9020\u6210\u4e86\u82f9\u679c\u4e0e\u62e5\u6709\u4e0d\u516c\u5e73\u5185\u90e8\u77e5\u8bc6\u7684\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u7ade\u4e89\u7684\u73af\u5883\uff0c\u8fd9\u6700\u7ec8\u4f1a\u51cf\u7f13\u6574\u4e2a\u5e94\u7528\u751f\u6001\u7cfb\u7edf\u7684\u521b\u65b0\u3002\u5982\u679c\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684API\uff0c\u5f00\u53d1\u4eba\u5458\u5c06\u6784\u5efa\u66f4\u5177\u521b\u65b0\u6027\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e0e\u82f9\u679c\u7684\u786c\u4ef6\u8fdb\u884c\u66f4\u5168\u9762\u7684\u96c6\u6210\u3002\u6700\u7ec8\uff0c\u6d88\u8d39\u8005\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u4ea7\u54c1\uff01\n\u4e4d\u4e00\u770b\uff0c\u9f13\u52b1\u82f9\u679c\u6536\u8d2d\u5176\u89c4\u6a21\u8f83\u5c0f\u7684\u7ade\u4e89\u5bf9\u624b\u4f3c\u4e4e\u6709\u8fdd\u5e38\u7406\u3002\u5927\u591a\u6570\u53cd\u5784\u65ad\u6cd5\u90fd\u963b\u6b62\u50cf\u82f9\u679c\u8fd9\u6837\u5b9e\u529b\u96c4\u539a\u7684\u5927\u516c\u53f8\u541e\u5e76\u7ade\u4e89\u5bf9\u624b\u4ee5\u83b7\u5f97\u5e02\u573a\u4efd\u989d\u3002\n\u4f46\u76ee\u524d\u7684\u95ee\u9898\u662f\uff0c\u82f9\u679c\u6ca1\u6709\u6536\u8d2d\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\uff0c\u800c\u662f\u5728\u6284\u88ad\u4ed6\u4eec\u3002\u5f53\u82f9\u679c\u5728\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e2d\u6ca1\u6709\u66f4\u65b0\u7684\u60f3\u6cd5\u65f6\uff0c\u82f9\u679c\u5c31\u4f1a\u4ece\u6700\u7545\u9500\u7684\u5e94\u7528\u7a0b\u5e8f\u6c60\u4e2d\u9009\u51fa\u201c\u795e\u63a2\u590f\u6d1b\u514b\u201d\u3002\n\u5982\u679c\u4f60\u4e0d\u5e78\u88ab\u82f9\u679c\u516c\u53f8\u9501\u5b9a\uff0c\u4e3a\u4f60\u7684\u516c\u53f8\u627e\u5230\u4e00\u6761\u751f\u5b58\u4e4b\u8def\u5c06\u4f1a\u5f88\u56f0\u96be\u3002\u5f53\u82f9\u679c\u51b3\u5b9a\u590d\u5236\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\uff0c\u5e76\u5728\u514d\u8d39\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u70d8\u7119\u4e00\u9879\u529f\u80fd\u65f6\uff0c\u901a\u5e38\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a\n\u83b7\u5f97Sherlock\u5c06\u662f\u5982\u6b64\u6bc1\u706d\u6027\u7684\u6253\u51fb\uff0c\u4ee5\u81f3\u4e8e\u516c\u53f8\u5c06\u88ab\u8feb\u8fc5\u901f\u8fdb\u5165\u5176\u4ed6\u5e02\u573a\u6216\u5e73\u53f0\uff0c\u4e0d\u518d\u4f18\u5148\u8003\u8651\u82f9\u679c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9677\u5165\u7684\u60c5\u51b5\u3002\n\u6216\u8005\uff0c\u5728\u66f4\u7cdf\u7cd5\u4f46\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u53ef\u884c\u7684\u524d\u8fdb\u9053\u8def\uff0c\u5f00\u53d1\u4eba\u5458\u5c06\u88ab\u8feb\u9000\u51fa\u4e1a\u52a1\u3002\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0d\u4ec5\u5bf9\u5c0f\u4eba\u7269\u6765\u8bf4\u662f\u6bc1\u706d\u6027\u7684\uff0c\u6d88\u8d39\u8005\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u5bfb\u627e\u8fc7\u9000\u51fa\u6216\u6536\u8d2d\u7684\u673a\u4f1a\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u7ee7\u7eed\u53d1\u5c55Astropad\u7684\u957f\u671f\u613f\u666f\u3002\u7136\u800c\uff0c\u82f9\u679c\u5ba3\u5e03\u63a8\u51faSidecar\u5bf9\u6211\u4eec\u7684\u9500\u552e\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002\u6211\u4eec\u5df2\u7ecf\u8db3\u591f\u5e78\u8fd0\u5730\u5ea6\u8fc7\u4e86\u8fd9\u573a\u98ce\u66b4\uff0c\u4f46\u60f3\u8c61\u4e00\u4e0b\u82f9\u679c\u8ba9\u6211\u4eec\u7834\u4ea7\u7684\u5047\u8bbe\u60c5\u666f\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u9732\u5a1cDisplay\u548cAstroPad\u662fSidecar\u66f4\u5f3a\u5927\u7684\u66ff\u4ee3\u54c1\uff0c\u56e0\u4e3a\u9732\u5a1c\u7684\u7075\u6d3b\u6a21\u5f0f\u9009\u9879(Mac\u5230iPad\u3001Mac\u5230Mac\u548c\u65e0\u5934\u6a21\u5f0f)\uff0c\u4ee5\u53caAstropad Studio\u4e30\u5bcc\u7684\u53ef\u5b9a\u5236\u529f\u80fd\u8c03\u8272\u677f\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u82f9\u679c\u628a\u6211\u4eec\u8d76\u51fa\u4e86\u8fd9\u4e2a\u884c\u4e1a\uff0c\u6211\u4eec\u7684\u7528\u6237\u53ef\u80fd\u4f1a\u88ab\u8feb\u4f7f\u7528Sidecar\uff0c\u56e0\u4e3aSidecar\u7684\u529f\u80fd\u548c\u7279\u6027\u90fd\u5f88\u6709\u9650\u3002\u82f9\u679c\u4e5f\u4ee5\u529f\u80fd\u5728\u51fa\u5382\u540e\u51e0\u4e4e\u4e0d\u66f4\u65b0\u548c\u6539\u8fdb\u800c\u95fb\u540d--\u800c\u6211\u4eec\u7684\u6574\u4e2a\u4e1a\u52a1\u90fd\u5efa\u7acb\u5728\u4e0d\u65ad\u6539\u8fdbAstropad\u548c\u9732\u5a1c\u663e\u793a\u5c4f\u7684\u57fa\u7840\u4e0a\u3002\u5728\u6211\u4eec\u88ab\u82f9\u679c\u6dd8\u6c70\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u5bb9\u6613\u770b\u51fa\u6d88\u8d39\u8005\u7684\u5883\u51b5\u662f\u591a\u4e48\u7cdf\u7cd5\uff1a\u4ed6\u4eec\u6ca1\u6709\u9009\u62e9\u6700\u9002\u5408\u4ed6\u4eec\u7684\u8f6f\u4ef6\u7684\u81ea\u7531\uff0c\u800c\u662f\u88ab\u8feb\u4f7f\u7528\u82f9\u679c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u82f9\u679c\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u521b\u65b0\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u88ab\u89e3\u9501\uff0c\u5728\u82f9\u679c\u5e73\u53f0\u4e0a\u521b\u65b0\u7684\u52a8\u529b\u6d88\u5931\u4e86\u3002\u4e3a\u4ec0\u4e48\u8981\u4e3a\u4e00\u4e2a\u53ef\u80fd\u80cc\u53db\u4f60\u7684\u5e73\u53f0\u6784\u5efa\u4ea7\u54c1\u5462\uff1fAstropad\u8054\u5408\u521b\u59cb\u4eba\u9a6c\u7279\u00b7\u8363\u683c(Matt Ronge)\u4ece\u591a\u5e74\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\u5438\u53d6\u4e86\u6559\u8bad\uff0c\u4ed6\u8b66\u544a\u8bf4\uff0c\u201c\u82f9\u679c\u5bf9\u5f85\u5e94\u7528\u5546\u5e97\u7684\u65b9\u5f0f\u5df2\u7ecf\u627c\u6740\u4e86iPad-\u5341\u5e74\u8fc7\u53bb\u4e86\uff0c\u5b83\u4ecd\u7136\u4e0d\u50cf\u8bb8\u591a\u4eba\u5e0c\u671b\u7684\u90a3\u6837\u5b8c\u5168\u53d6\u4ee3PC\u3002\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8bc1\u660e\uff0ciPad\u7f3a\u4e4f\u6740\u624b\u7ea7\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u963b\u788diPad\u6f5c\u529b\u7684\u7f6a\u9b41\u7978\u9996\u3002\u5728\u8fd9\u6837\u7684\u73af\u5883\u4e0b\uff0c\u8c01\u4f1a\u60f3\u8981\u9020\u4e00\u4e2a\u5462\uff1f\u201c\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u82f9\u679c\u66f4\u6709\u53ef\u80fd\u8d2d\u4e70\u4f60\u7684\u8f9b\u52e4\u52b3\u52a8\uff0c\u800c\u4e0d\u662f\u4ece\u4f60\u90a3\u91cc\u7a83\u53d6\uff0c\u90a3\u4e48\u7a81\u7136\u4e4b\u95f4\u5c31\u6709\u4e86\u5de8\u5927\u7684\u52a8\u673a\uff0c\u53bb\u521b\u9020\u5c3d\u53ef\u80fd\u597d\u7684\u4ea7\u54c1\uff0c\u62e5\u6709\u6700\u5c16\u7aef\u7684\u6280\u672f\u548c\u6700\u4e30\u5bcc\u7684\u529f\u80fd\u96c6\u3002\u6539\u53d8\u82f9\u679c\u7684\u6536\u8d2d\u7b56\u7565\u610f\u5473\u7740\u5f00\u53d1\u8005\u66f4\u6709\u52a8\u529b\u521b\u65b0\uff0c\u6d88\u8d39\u8005\u83b7\u5f97\u66f4\u597d\u7684\u6280\u672f\uff0c\u82f9\u679c\u53ef\u4ee5\u5c06\u66f4\u597d\u7684\u6280\u672f\u878d\u5165\u5176\u4ea7\u54c1\u4e2d\u3002\u6bcf\u4e2a\u4eba\u90fd\u662f\u8d62\u5bb6\uff01\n2020\u5e74\uff0c\u6211\u4eec\u6b63\u8bd5\u56fe\u5c06\u5de5\u4e1a\u9769\u547d\u4e2d\u540c\u6837\u7684\u53cd\u5784\u65ad\u6cd5\u5e94\u7528\u4e8e\u5927\u578b\u79d1\u6280\u65f6\u4ee3\u3002\u5f53\u5784\u65ad\u6cd5\u572819\u4e16\u7eaa90\u5e74\u4ee3\u9996\u6b21\u5b9a\u4e49\u65f6(\u90a3\u662f\u4e00\u4e2a\u5927\u91cf\u5236\u9020\u548c\u901a\u8fc7\u94c1\u8def\u8fd0\u8f93\u5546\u54c1\u7684\u65f6\u4ee3)\uff0c\u6d88\u8d39\u8005\u798f\u5229\u7684\u6807\u51c6\u96c6\u4e2d\u5728\u4ef7\u683c\u4e0a\u3002\u4f46\u5728\u73b0\u4ee3\uff0c\u8fd9\u662f\u5bf9\u73b0\u4ee3\u5065\u5eb7\u6d88\u8d39\u4e3b\u4e49\u8981\u7d20\u7684\u72ed\u9698\u7406\u89e3\u3002\u53cd\u5784\u65ad\u6cd5\u8feb\u4f7f\u6211\u4eec\u5bf9\u6d88\u8d39\u8005\u5728\u590d\u6742\u7684\u6280\u672f\u5e02\u573a\u4e2d\u6240\u9700\u7684\u54c1\u79cd\u3001\u8d28\u91cf\u548c\u521b\u65b0\u89c6\u800c\u4e0d\u89c1\u3002\n\u901a\u8fc7App Store\u7684\u955c\u5934\uff0c\u6211\u4eec\u77e5\u9053\u6d88\u8d39\u8005\u5bf9iOS\u4e2d\u5185\u7f6e\u7684\u6700\u4fbf\u5b9c(\u514d\u8d39)\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e0d\u5b8c\u5168\u6ee1\u610f\u3002\u5f53\u6d89\u53ca\u5230\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u82f9\u679c\u5ba2\u6237\u60f3\u8981\uff1a\n\u8d28\u91cf--\u56e0\u4e3a\u867d\u7136\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u9876\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u60f3\u8981\u7684\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\uff0c\u800c\u4e14\uff1b\n\u521b\u65b0-\u56e0\u4e3a\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u7684\u521b\u65b0\u5b8c\u5168\u7531\u82f9\u679c\u6765\u51b3\u5b9a\uff0c\u82f9\u679c\u4ea7\u54c1\u7684\u5b9e\u7528\u7a0b\u5e8f\u7684\u53d1\u5c55\u901f\u5ea6\u5c06\u4f1a\u6162\u5f97\u591a\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u7a81\u7834\u4e86\u82f9\u679c\u786c\u4ef6\u7684\u754c\u9650\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e3a\u6d88\u8d39\u8005\u5e26\u6765\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u548c\u5b9e\u7528\u7a0b\u5e8f\u3002\n\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u516c\u53f8\uff0c\u5982Astropad\u548c\u6570\u4ee5\u5343\u8ba1\u7684\u5176\u4ed6\u516c\u53f8\uff0c\u4e3a\u82f9\u679c\u7684\u4ea7\u54c1\u6ce8\u5165\u4e86\u5de8\u5927\u7684\u6d3b\u529b\u3002\u5f53\u8fd9\u79cd\u6d3b\u529b\u88ab\u590f\u6d1b\u514b\u7b49\u5484\u5484\u903c\u4eba\u7684\u5784\u65ad\u884c\u4e3a\u524a\u5f31\u65f6\uff0c\u5c31\u4f1a\u5a01\u80c1\u5230\u6d88\u8d39\u8005\u53ef\u83b7\u5f97\u7684\u4ea7\u54c1\u7684\u6574\u4f53\u4ef7\u503c\u3002\n\u6211\u4eec\u63d0\u51fa\u7684\u6bcf\u4e00\u4e2a\u4fee\u590dApp Store\u7684\u5efa\u8bae\u90fd\u6709\u4e00\u4e2a\u4e0d\u5e78\u7684\u7b2c22\u6761\u519b\u89c4--\u8fd9\u4e9b\u6539\u53d8\u4f9d\u8d56\u4e8e\u82f9\u679c\u81ea\u5df1\u7684\u8bda\u4fe1\u6765\u89e3\u51b3\u95ee\u9898\u3002\u5982\u679c\u73b0\u5b9e\u5bf9\u4f60\u6765\u8bf4\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\uff0c\u90a3\u4e48\u4f60\u5e76\u4e0d\u662f\u552f\u4e00\u8fd9\u4e48\u60f3\u7684\u4eba\uff01\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u5927\u6279\u884c\u4e1a\u9886\u8896\u3001\u5b66\u8005\u548c\u653f\u754c\u4eba\u58eb\u63d0\u8bae\u5c06App Store\u548cApple\u62c6\u5206\u6210\u72ec\u7acb\u7684\u4e1a\u52a1\u3002\n\u5728\u53f8\u6cd5\u90e8\u5de5\u4f5c\u7684\u4e00\u4f4d\u53d7\u4eba\u5c0a\u656c\u7684\u53cd\u5784\u65ad\u5f8b\u5e08\u8389\u5a1c\u00b7\u6c57(Lina Khan)\u4e3a\u4e00\u79cd\u201c\u9884\u9632\u6027\u65b9\u6cd5\u201d\u63d0\u51fa\u4e86\u575a\u5b9e\u7684\u7406\u7531\uff0c\u8be5\u65b9\u6cd5\u5c06\u7981\u6b62\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u516c\u53f8(\u5982\u82f9\u679c)\u4e0e\u4f9d\u8d56\u5b83\u7684\u4f01\u4e1a(\u5982Astropad)\u76f4\u63a5\u7ade\u4e89\u3002\u5728\u4e9a\u9a6c\u900a\u7684\u201c\u53cd\u5784\u65ad\u6096\u8bba\u201d\u4e00\u4e66\u4e2d\uff0c\u8389\u5a1c\u63d0\u51fa\uff0c\u5f53\u201c\u4e00\u5bb6\u5e73\u53f0\u6709\u52a8\u673a\u4f18\u5148\u53d1\u5c55\u81ea\u5df1\u7684\u4e1a\u52a1\uff0c\u5e76\u4f7f\u5176\u4ed6\u516c\u53f8\u5904\u4e8e\u52a3\u52bf\u201d\u65f6\uff0c\u4e00\u5bb6\u201c\u591a\u4e2a\u76f8\u5173\u4e1a\u52a1\u7ebf\u201d(\u5982\u9500\u552e\u786c\u4ef6\u548c\u8fd0\u8425\u5e94\u7528\u5546\u5e97\u7b49)\u7684\u516c\u53f8\u5c06\u4f1a\u4ea7\u751f\u5de8\u5927\u7684\u5229\u76ca\u51b2\u7a81\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u82f9\u679c\u62e5\u6709App Store\uff0c\u4f46\u5b83\u4e5f\u5728App Store\u4e0a\u7ade\u4e89\u3002\u56e0\u6b64\uff0c\u5b83\u6709\u5f88\u5927\u7684\u52a8\u673a(\u4e5f\u5f88\u5bb9\u6613\u83b7\u5f97)\u6765\u63a8\u52a8\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u627c\u6740\u5c0f\u5f00\u53d1\u8005\u3002\u5728\u5979\u62c6\u5206\u5927\u578b\u79d1\u6280\u516c\u53f8\u7684\u8ba1\u5212\u4e2d\uff0c\u4f0a\u4e3d\u838e\u767d\u00b7\u6c83\u4f26(Elizabeth Warren)\u5efa\u8bae\uff0c\u5e73\u53f0\u516c\u7528\u4e8b\u4e1a\u5e94\u8be5\u88ab\u201c\u7981\u6b62\u62e5\u6709\u5e73\u53f0\u516c\u7528\u4e8b\u4e1a\u548c\u8be5\u5e73\u53f0\u4e0a\u7684\u4efb\u4f55\u53c2\u4e0e\u8005\u201d\u3002\u5e73\u53f0\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u5c06\u88ab\u8981\u6c42\u6ee1\u8db3\u516c\u5e73\u3001\u5408\u7406\u548c\u975e\u6b67\u89c6\u6027\u5bf9\u5f85\u7528\u6237\u7684\u6807\u51c6\u3002\u201c\n\u901a\u8fc7\u5206\u79bbApp Store\uff0c\u82f9\u679c\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u88ab\u8feb\u5728\u6d88\u8d39\u8005\u798f\u5229\u7684\u65b0\u539f\u5219-\u4ef7\u683c\u3001\u54c1\u79cd\u3001\u8d28\u91cf\u548c\u521b\u65b0-\u4e0a\u4e0e\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u7ade\u4e89\u3002\u8fd9\u63d0\u9ad8\u4e86\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u7684\u95e8\u69db\uff0c\u4e3a\u6d88\u8d39\u8005\u5e26\u6765\u4e86\u66f4\u597d\u7684\u82f9\u679c\u4ea7\u54c1\u4ef7\u503c\u3002\n\u5982\u679c\u82f9\u679c\u7ee7\u7eed\u5927\u5200\u9614\u65a7\u5730\u5f00\u53d1Sherlock\u5e94\u7528\u7a0b\u5e8f\uff0cApp Store\u7684\u521b\u65b0\u548c\u4e30\u5bcc\u6027\u5c06\u65e9\u665a\u89c1\u6548\u3002\u6b63\u5728\u7a81\u7834\u786c\u4ef6\u754c\u9650\u7684\u771f\u6b63\u521b\u65b0\u516c\u53f8\u5c06\u5931\u53bb\u53c2\u4e0e\u82f9\u679c\u6e38\u620f\u7684\u52a8\u529b\u3002\u5728\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u5c06\u628a\u4ed6\u4eec\u7684\u7cbe\u529b\u8f6c\u5411\u5176\u4ed6\u5e73\u53f0\u3002\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5c0f\u578b\u5f00\u53d1\u5546\u7684\u521b\u65b0\u5c06\u7ee7\u7eed\u5b8c\u5168\u6d88\u4ea1\u3002\n\u73b0\u4ee3\u6280\u672f\u662f\u8ba9\u6211\u4eec\u7684\u4e16\u754c\u8fd0\u8f6c\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u90fd\u4f9d\u8d56\u5b83--\u8f6f\u4ef6\u3001\u793e\u4ea4\u7f51\u7edc\u3001\u5e94\u7528\u7a0b\u5e8f--\u6765\u4fdd\u6301\u8054\u7cfb\uff0c\u5b8c\u6210\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u6210\u4e3a\u8d44\u672c\u4e3b\u4e49\u7ecf\u6d4e\u4e2d\u5bcc\u6709\u6210\u6548\u7684\u6210\u5458\u3002\u4eca\u5929\u7684\u6280\u672f\u5c31\u50cf19\u4e16\u7eaa\u7684\u94c1\u8def\u621620\u4e16\u7eaa\u521d\u7684\u7535\u7f51\uff1a\u8d77\u521d\u5b83\u4eec\u6ca1\u6709\u53d7\u5230\u76d1\u7ba1\uff0c\u4f46\u6700\u7ec8\uff0c\u5b83\u4eec\u5728\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\u53d8\u5f97\u5982\u6b64\u6839\u6df1\u8482\u56fa\uff0c\u4ee5\u81f3\u4e8e\u653f\u5e9c\u51b3\u5b9a\u4ecb\u5165\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\u4e3a\u6bcf\u4e2a\u4eba\u670d\u52a1\u3002\n\u5982\u4eca\uff0c\u6807\u51c6\u666e\u5c14500\u6307\u6570\u6210\u4ea4\u91cf\u6700\u5927\u76845\u5bb6\u516c\u53f8\u90fd\u662f\u79d1\u6280\u516c\u53f8\uff1a\u5fae\u8f6f\u3001\u82f9\u679c\u3001\u4e9a\u9a6c\u900a\u3001Facebook\u548cAlphabet\u3002\u4ed6\u4eec\u6b63\u5728\u5efa\u8bbe\u6211\u4eec\u7684\u4e16\u754c\u8fd0\u884c\u6240\u4f9d\u8d56\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u4f46\u4ed6\u4eec\u5728\u72c2\u91ce\u7684\u897f\u90e8\u5730\u533a\u8fd0\u8425\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u5236\u5b9a\u4e86\u81ea\u5df1\u7684\u89c4\u5219-\u8fd9\u4e9b\u89c4\u5219\u5bf9\u4ed6\u4eec\u7684\u5e95\u7ebf\u5f88\u597d\uff0c\u4f46\u5bf9\u6d88\u8d39\u8005\u5374\u4e0d\u8d77\u4f5c\u7528\u3002\u73b0\u5728\u662f\u91cd\u5199\u89c4\u5219\u7684\u65f6\u5019\u4e86\uff0c\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4eba\u670d\u52a1\u4e86\u3002\n\u53ca\u65e9\u8fdb\u5165\u89c6\u7a97\u7248\u9732\u5a1c\u663e\u793a\u5c4f\uff01\u6ce8\u518c\u6210\u4e3a\u7b2c\u4e00\u6279\u77e5\u9053\u6211\u4eec\u4f55\u65f6\u53d1\u5e03\u7684\u4eba\u4e4b\u4e00\u3002", "note_en": "Big tech has been in a slow boil. After wild west growth and lawlessness, Silicon Valley is finally getting the scrutiny it\u2019s avoided for years \u2014 and it seems that everyone has been feeling disillusionment towards Amazon, Apple, Google, and Facebook. Following our experience of\u00a0 getting sherlocked (where Apple copied our product and included it as a free OS feature), we\u2019re here to jump in with our own perspective on getting antitrust laws up to speed.\n We\u2019re Astropad \u2014 a small, bootstrapped startup with products for creative pros like  Astropad Studio and  Luna Display. In June 2019, Apple announced a new feature in macOS Catalina, called Sidecar, that closely copied our product lines. For our team of just 13 people, it was devastating news. Watching Apple present Sidecar to the world was like seeing years of hard work flash before your eyes while someone else took the credit for it.\n Through grit and nimble maneuvering, we\u2019ve been lucky enough to survive the blow. If you\u2019re curious about what the aftermath was like, we wrote a whole post about  what to do when you get Sherlocked by Apple. To sum it up, we\u2019ve learned some tough business lessons, are working on rewriting  cross-platform code for Windows, and are on track to make a comeback as a stronger company than before we were sherlocked.\n In a rare bipartisan effort, the government is doing its part to reconsider how effective our monopoly laws are working to protect consumers and capitalism.  Politico reported that the Trump administration has announced a 71% budget increase in the Department of Justice\u2019s antitrust division to investigate big tech monopolies.\n It\u2019s in Apple\u2019s best interest to be proactive and tackle the antitrust problem  itself rather than waiting for the government to step in. To help Tim Cook get ahead of the scrutiny, we\u2019ve compiled some reasonable suggestions for Apple that don\u2019t require government regulation. The idea here is that Apple would probably want to tackle the problem  itself instead of having the government step in to break apart the platform (we\u2019ll dive deeper into  that later). We want to see the App Store  level the playing field for third-party developers and  promote a rich app economy for consumers, and we\u2019re ready to offer our own post-sherlocked wisdom on how to do that.\n   As consumers, we love the App Store because it gives us the freedom to choose the apps that are best suited for us. But it\u2019s a shallow freedom because Apple has the ultimate control over how we can interact with those apps.\n Apple has a smug way of prioritizing its own apps over those of third-party developers, forcing users to take a few extra steps to get the experience they want. If you\u2019re a Google Maps user, you\u2019ve probably felt annoyed when you tap an address and your iPhone automatically pulls up directions in Apple Maps. Or, if you\u2019re a Spotify user, you can\u2019t just ask Siri to play Grimes\u2019s new album, because unless you have it downloaded in Apple Music, she won\u2019t be able to find it.\n In an era of declining hardware sales, this allows Apple to keep users tethered to the Apple ecosystem \u2014 a strategy that is being looked at with increasing scrutiny. Earlier this year, Bloomberg Technology  reported emerging rumors that Apple is considering loosening restrictions to allow users to set third-party apps as their default\u2014 a move no doubt catalyzed by the pressure of recent antitrust probes.\n If Apple\u2019s playbook sounds familiar, it\u2019s because Microsoft did the same thing back in the 90s. In the early days of the internet, Microsoft (arriving late to the  browser wars) decided to aggressively bundle Internet Explorer with Windows. This move sucked the life out of rising Silicon Valley superstar Netscape and consolidated the internet market, ultimately slowing down innovation and giving consumers fewer options. If Apple continues playing by the same aggressive rules, their own App Store will begin to suffer from lack of innovation and consumers will feel the blow.\n   Right now there\u2019s only one way to buy an iOS app or make an in-app purchase, and that\u2019s via the App Store. When a third-party developer sells an app on the App Store, 30% of the sale automatically goes to Apple in what\u2019s known as the \u201cApple tax.\u201d As a small startup, it\u2019s a big cost to stomach.\n Within an app, developers aren\u2019t allowed to offer alternate payment mechanisms or even  hint at other ways of purchasing. Have you ever wondered why you can\u2019t buy audiobooks in the Audible app, or sign up for a Netflix or Youtube subscription on your iPad? That\u2019s because Apple taxes 30% of the purchase price, aggressively cutting into a company\u2019s profits. If you\u2019re a mega-company like Netflix, Amazon, or Google, you\u2019re strong enough to sidestep the Apple Tax and push users to make payments outside of the App Store. But most smaller third-party developers don\u2019t have the clout to reroute payments around the App Store to avoid Apple\u2019s tax; this means that the developers often have to include the cost of that tax in app prices in order to sustain their businesses.\n Apple is using its control of the platform to impose this \u201ctax,\u201d when it should really be competing for the tax based on merit. What if consumers were given the choice to choose between different payment mechanisms, like PayPal or Amazon Pay? If App Store purchases are more seamless for consumers than using PayPal, that\u2019s fine! Just let the consumer make that choice instead of forcing it on them. Not only does this solution give consumers more freedom, but it also sets higher standards for competition across payment systems. Suddenly, in-app purchases will compete on the merit of their ease of integration with the app experience.\n There will always be some friction in taking out a credit card or logging into PayPal. So for customers wanting to avoid that friction with Apple Pay, 30% of their purchase can be awarded to Apple. But if a developer wants to build a really smooth PayPal integration into their app, let them do it! The fee (usually around 3% for companies like Paypal) will be passed on to whichever payment mechanism the  consumer chooses.\n   If you want to download an iOS app today, the only way to do it is through the App Store; getting your app up on the App Store involves a rigorous review process by Apple. Apple claims that this is the only way to protect the security and privacy of iOS users \u2014 but that\u2019s not exactly true. In fact, it  would be possible to allow users to download apps outside of the App Store (also known as sideloading), while still maintaining security.\n Outside of App Review, Apple has sophisticated mechanisms to shut down malware apps from ever making it onto a phone. Apple could still use its notarization system for sideloaded apps, giving it the ability to remotely \u201ckill\u201d malware apps that are being distributed outside of the App Store. This gives consumers choices  and security \u2014 and it\u2019s exactly what Apple does with Mac apps!\n The issue with the current App Review process is that it leaves lots of room for Apple to abuse its power to reject apps  without explanation. Take, for instance, our plan to introduce the  Camera Button to Luna Display back in 2018. The Camera Button was an innovative new feature that turned the iPad\u2019s front-facing camera into a button: simply tap the camera to bring up Luna\u2019s user interface. The new feature got a lot of attention among our users and in the press, but Apple wasn\u2019t feeling it. Before we  even had a chance to submit the update, we were warned by Apple not to submit because the update would be rejected.\n With sideloading, if Apple wants to reject the Camera Button but some users still want it, those users would have the option of pursuing the app outside of the App Store. Had we let it, our Camera Button rejection could\u2019ve stiled our hunger to innovate. With the fear that our hard work on new features would be rejected from the App Store, why push the limits?\n Unfortunately, we\u2019re not the only ones feeling frustrated by this. In  an open letter to Apple last November, the founders of BlueMail app begged Tim Cook to put its app back on the App Store after it was suddenly removed. Digging deeper,  Wired reported that BlueMail was removed just days after Apple announced its new \u201cSign In With Apple\u201d feature that infringed on patented technology in BlueMail\u2019s app. And earlier in the year,  The New York Times investigated a similar story of Apple removing parental control apps from the App Store after announcing its own competing parental control feature.\n Sideloading for iOS apps would enable developers to innovate without the fear of getting rejected from app updates \u2014 or worse, kicked off of the App Store entirely. And ultimately, sideloading empowers users to choose the apps that best suit their needs.\n   Private APIs have been a long-time frustration for us, as Apple has the ability to lock developers out of building on and utilizing some OS functions. This means that when Apple decides to \u201csherlock\u201d an app, it has an insider advantage of using OS functions that third-party developers don\u2019t have the same access to.\n In a Bloomberg investigation into  unfair API practices, Mark Gurman points to dozens of instances where this is the case. Notable examples include mobile payments, where payment mechanisms like Google Pay aren\u2019t able to access the iPhone\u2019s near-field-communication chips for in-store purchases; and navigation apps, where apps like Google Maps are unable to display directions on the iPhone\u2019s lock screen.\n In our own situation, Apple\u2019s debut of Sidecar revealed that it was running on private APIs with faster peer-to-peer networking \u2014 private APIs that we had been requesting access to for Luna Display for years. This was a hard lesson we learned through getting sherlocked, and we have a lot to say about our experience  building a business on Apple\u2019s APIs. Astropad cofounder Giovanni Donelli points out that \u201ccompetition in the App Store is a good thing, as long as we all have the same tech building blocks to compete on.\u201d\n This uneven playing field has created an environment where Apple is competing against third-party developers with unfair insider knowledge, which ultimately slows down innovation across the entire app ecosystem. If developers have access to better APIs, developers will build more innovative apps with more comprehensive integration with Apple\u2019s hardware. And ultimately, consumers get better products!\n   At first, encouraging Apple to acquire its small competitors might seem counter-intuitive. Most antitrust legislation discourages a large and powerful company like Apple from swallowing up its competitors to gain market share.\n But the current problem is that instead of acquiring third-party developers, Apple is copying them. When Apple runs out of ideas for updates to include in the next OS release, Apple \u201csherlocks\u201d from a pool of top-grossing apps.\n If you\u2019re unlucky enough to get sherlocked by Apple, finding a path forward for your company to survive will be difficult. When Apple decides to copy a third-party developer and bake a feature into the free OS, one of two scenarios usually plays out:\n Getting sherlocked will be such a devastating blow that the company will be forced to move quickly into other markets or platforms, no longer prioritizing Apple. This is the scenario that we fell into.\n Or, in a worse but more common scenario, there is no viable path forward, and the developer will be forced out of business.\n Both scenarios are not only devastating for the little guy, but consumers suffer too. In our case, we were never looking for an exit or acquisition opportunity, as we have a long-term vision to continue growing Astropad. However, Apple\u2019s announcement of Sidecar had a significant impact on our sales. We\u2019ve been lucky enough to weather the storm, but imagine a hypothetical scenario where Apple had put us out of business. We\u00a0believe that our products Luna Display and Astropad are much more powerful alternatives to Sidecar because of Luna\u2019s flexible mode options (mac-to-iPad,  mac-to-mac, and headless mode), and Astropad Studio\u2019s rich palette of  customizable features.\n So, if Apple drove us out of business, our users might be forced to use Sidecar instead, which has limited functionality and features. Apple is also known for scarcely updating and improving on features once they\u2019ve been shipped \u2014 whereas our entire business is built around continuously improving on Astropad and Luna Display. In the scenario where we\u2019ve been put out of business by Apple, it\u2019s easy to see how consumers are worse off: instead of having the freedom to choose the software that best suits them, they\u2019re forced into Apple\u2019s solution, which won\u2019t be innovated on over time.\n As more and more companies are sherlocked, the incentives to innovate on Apple\u2019s platform disappear. Why build products for a platform that might betray you? Drawing lessons from his years of app development,  Astropad cofounder Matt Ronge warns that \u201cApple\u2019s treatment of the App Store has stifled the iPad \u2014 ten years later and it\u2019s still not a complete PC replacement like many had hoped. You can make an easy case that a lack of killer apps available for the iPad are to blame for stunting the iPad\u2019s potential. Who\u2019s going to want to build one in an environment like this?\u201d\n But if there was a higher likelihood that Apple would purchase your hard work instead of steal it from you, there\u2019s suddenly a huge incentive to build the best possible product, with the most cutting-edge technology and richest set of features. Changing Apple\u2019s acquisition strategy means that developers are more motivated to innovate, consumers get better technology, and Apple gets to fold better tech into its products. Everyone wins!\n  In 2020, we\u2019re trying to apply the same antitrust laws of the industrial revolution to an era of big tech. When monopoly laws were first defined in the 1890s (a time of heavy manufacturing and moving commodities via railroads), the standards for consumer welfare focused on  price. But in modern day, this is a narrow-minded understanding of the ingredients of modern, healthy consumerism. Antitrust laws force us to turn a blind eye to the   variety,   quality, and   innovation that consumers demand in a sophisticated tech market.\n Through the lens of the App Store, we know that consumers aren\u2019t completely satisfied by the cheapest (free) apps that come baked into iOS. When it comes to apps, Apple customers want:\n Quality \u2013 because while not everyone needs top-tier apps, they\u2019re available to the people that want it, and;\n Innovation \u2013 because if app innovation was left entirely up to Apple, the utility of Apple products would move at a much slower pace. Instead, third-party developers push the boundaries of Apple\u2019s hardware, and bring rich features and utility to consumers in the process.\n Small app development companies, like Astropad and thousands of others, infuse immense vibrancy into Apple\u2019s products. And when that vibrancy is dulled by aggressive monopolistic behavior like sherlocking, it threatens the overall value of products available to consumers.\n  Every suggestion we\u2019ve offered to fix the App Store has an unfortunate catch-22 \u2014 these changes rely on Apple\u2019s own integrity to fix the problem. If that reality seems unlikely to you, you\u2019re not the only one thinking that! That\u2019s why a big pool of industry leaders, scholars, and politicians have proposed pulling apart the App Store and Apple into separate businesses.\n Lina Khan, an esteemed antitrust lawyer working with the Department of Justice, has laid out a solid reasoning for a \u201cprophylactic approach\u201d that would ban dominant firms (like Apple) from competing directly with the businesses that depend on it (like Astropad). In   Amazon\u2019s Antitrust Paradox, Lina makes the case that a company in \u201cmultiple related lines of business\u201d (such as selling hardware  and running an App Store, etc) will bubble up big conflicts of interest when \u201ca platform has an incentive to privilege its own business and disadvantage other companies.\u201d\n In other words, Apple  owns the App Store, but it also  competes on the App Store. Therefore, it has major incentives (and easy access) to push its own apps and suffocate small developers. In her  plan to break up big tech, Elizabeth Warren proposes that platform utilities should be \u201cprohibited from owning both the platform utility and any participants on that platform. Platform utilities would be required to meet a standard of fair, reasonable, and nondiscriminatory dealing with users.\u201d\n By separating the App Store, Apple\u2019s apps would be forced to compete with third-party developers on new tenets of consumer welfare \u2014 price, variety, quality, and innovation. This raises the bar for all apps, bringing consumers  even better value from their Apple products.\n  If Apple\u2019s aggressive approach of sherlocking apps continues, the innovation and richness of the App Store will tap out sooner rather than later. Truly innovative companies that are pushing the boundaries of hardware will lose their incentive to play Apple\u2019s game. In the best-case scenario, third-party developers will turn their efforts to other platforms. In the worst case, small developer innovation will continue to die off altogether.\n Modern technology is the infrastructure that makes our world go around. We all rely on it \u2014 software, social networks, apps \u2014 to stay connected, get our work done, and be productive members of a capitalistic economy. Technology today is like the railroads of the 19th century or the electrical grids of the early 20th century: they weren\u2019t regulated at first, but eventually, they became so heavily ingrained in our lives that the government decided to step in to make sure that this infrastructure was working for everyone.\n Today, the top 5 companies traded on the S&amp;P 500 are all technology companies: Microsoft, Apple, Amazon, Facebook, and Alphabet. They\u2019re building the infrastructure that our world runs on, yet they\u2019re operating in the wild west where they make their own rules \u2014 rules that work well for their bottom lines, but not for consumers. It\u2019s time to rewrite the rules so that they work for everyone.\n  Get early access to Luna Display for Windows! Sign up to be one of the first to know when we launch.", "posttime": "2020-06-17 16:24:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,app,apple,rust,\u53cd\u5784\u65ad", "title": "\u4eb2\u7231\u7684\u82f9\u679c\uff1a\u4ee5\u4e0b\u662f\u5982\u4f55\u963b\u6b62\u53cd\u5784\u65ad\u8c03\u67e5\u7684\u65b9\u6cd5", "title_en": "Dear Apple: Here\u2019s How to Stop the Antitrust Investigations", "transed": 1, "url": "https://astropad.com/dear-apple/", "via": "", "real_tags": ["\u82f9\u679c", "app", "apple", "rust", "\u53cd\u5784\u65ad"]}, {"category": "", "categoryclass": "", "imagename": "257014c5fd35c2524bf376bdc973ed8a.jpeg", "infoid": 1006924, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u79cd\u8bed\u8a00\u7684\u5b9e\u73b0\uff0c\u57281962\u5e74\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684McCarthy\u3001Abrahams\u3001Edwards\u3001Hart\u548cLevin\u6240\u8457\u7684LISP 1.5\u7a0b\u5e8f\u5458\u624b\u518c\u7684\u524d\u51e0\u9875\u4e2d\u4ee5\u6781\u9ad8\u7684\u7b80\u6d01\u6027\u5b9a\u4e49\u4e86\u8be5\u8bed\u8a00\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6559\u5b66\u5b9e\u9a8c\uff0c\u76ee\u7684\u662f\u770b\u770b\u8be5\u4e66\u7b2c13\u9875\u4e0a\u5b9a\u4e49\u7684\u89e3\u91ca\u5668(\u5b9e\u9645\u4e0a\u662fEVALQOUTE/APPLICE)\u5de5\u4f5c\u5f97\u6709\u591a\u597d\u3002\u7b54\u6848\u662f\uff1a\u5f53\u7136\u662f\u5b8c\u7f8e\u7684\u3002\n\u628a\u8fd9\u4e2a\u8282\u76ee\u653e\u5728\u4e00\u8d77\u662f\u4e00\u4ef6\u4ee4\u4eba\u6109\u5feb\u7684\u4e8b\u3002\u5b83\u7684\u76ee\u7684\u662f\u5a31\u4e50\u548c\u6559\u80b2\uff0c\u800c\u4e0d\u662f\u4ee5\u4efb\u4f55\u65b9\u5f0f\u521b\u5efa\u4e00\u4e2a\u73b0\u4ee3\u7684\u751a\u81f3\u73b0\u5b9e\u7684Lisp\u5b9e\u73b0\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u7528\u5e72\u51c0\u3001\u76f4\u63a5\u7684GO\u4ee3\u7801\u5c06\u8fd9\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u7b2c13\u9875\u53d8\u6210\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u89e3\u91ca\u5668\u3002\n\u56e0\u6b64\uff0c\u5373\u4f7f\u5bf9\u4e8eLisp1.5\u8fd9\u672c\u4e66\uff0c\u8be5\u7a0b\u5e8f\u4e5f\u6709\u51e0\u4e2a\u4e25\u91cd\u7684\u7f3a\u9677\uff1a\n\u6ca1\u6709\u8282\u76ee\u3002\u901a\u8fc7\u8c03\u7528Apply\uff0c\u89e3\u91ca\u5668\u53ea\u80fd\u8ba1\u7b97\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5373\u53ef\u80fd\u7684\u9012\u5f52\u51fd\u6570\u8c03\u7528\u3002\u4f46\u8fd9\u662f\u91cc\u65af\u666e\uff0c\u8fd9\u4ecd\u7136\u5f88\u591a\u3002\n\u65e0I/O\u3002\u4ec5\u9650\u4ea4\u4e92\u5f0f\uff0c\u5c3d\u7ba1\u5b83\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u547d\u4ee4\u884c\u4e0a\u6307\u5b9a\u7684\u6587\u4ef6\u542f\u52a8\u3002\n\u5b83\u5f88\u6162\uff0c\u5f53\u7136\uff0c\u5b83\u7684\u8bed\u8a00\u4e0eCommon Lisp\u6216Scheme\u76f8\u53bb\u751a\u8fdc\u3002\n\u867d\u7136\u6709\u4e00\u5929\u6211\u53ef\u80fd\u4f1a\u6dfb\u52a0prog\u5e76\u8bbe\u7f6e[q]\uff0c\u4f46\u8fd9\u5c31\u662f\u6211\u8981\u5212\u6e05\u754c\u9650\u7684\u5730\u65b9\u3002\u6211\u8ba1\u5212\u5c06\u5176\u7528\u4f5c\u6559\u5b66\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u5b9e\u7528\u7684\u7f16\u7a0b\u73af\u5883\u3002\n\u4e0d\u8fc7\uff0c\u5b83\u786e\u5b9e\u505a\u4e86\u4e00\u4ef6\u4e0e\u672c\u4e66\u4e0d\u540c\u7684\u91cd\u8981\u4e8b\u60c5\uff1a\u8bcd\u6c47\u4f5c\u7528\u57df\u3002\u6ca1\u6709\u5173\u8054\u5217\u8868\uff1b\u76f8\u53cd\uff0c\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u5176\u81ea\u8eab\u6846\u67b6\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u53caT\u7b49\u5168\u5c40\u53d8\u91cf\u3002\nT\u548cF\u662f\u5927\u5199\u7684\uff0c\u4f46\u6240\u6709\u5176\u4ed6\u5355\u8bcd(car\u3001nil\u7b49)\u90fd\u662f\u5c0f\u5199\u7684\u3002\n\u6570\u5b57\u662f\u7531GO\u7684Big.Int\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u6d6e\u70b9\uff0c\u4f46\u662f\u6570\u5b57\u53ef\u4ee5\u5f88\u5927\u3002\n\u6807\u8bc6\u7b26\u53ef\u4ee5\u662fUnicode\u3002\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\uff0c\u03bb\u662flambda\u7684\u540c\u4e49\u8bcd\u3002(\u5b9e\u9645\u4e0a\u6b63\u597d\u76f8\u53cd\uff0c\u4e0d\u662f\u5417\uff1f)\u3002\n\u6211\u4ece\u6765\u4e0d\u559c\u6b22\u952e\u5165\u5dee\u6216\u5546\uff0c\u6240\u4ee5\u7b97\u672f\u4f7f\u7528\u66f4\u77ed\u7684add sub mul div rem\uff0c\u6bd4\u8f83\u64cd\u4f5c\u7b26\u6765\u81eaFortran(\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f)\uff1aeq ne lt le gt ge ne\uff0c\u4ee5\u53caand\u548cor\u3002\n(defn((add2(\u03bb(N)(Add2 N)(add4(\u03bb(N)(add2(Add2 N)\u3002\n\u8fd9\u662f\u4e00\u4efd\u6253\u5b57\u7a3f\u3002lib.lisp\u4e2d\u6709\u4e00\u4e2a\u5e93\uff1b\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4f1a\u5bfc\u81f4LISP\u5728\u8bfb\u53d6\u6807\u51c6\u8f93\u5165\u4e4b\u524d\u52a0\u8f7d\u5b83\u3002\n%lisp lib.lisp(fac gcd ack\u7b49\u4e8eNot Negate mapcar length opn\u6210\u5458\u5e76\u96c6\u4ea4\u96c6)&gt\uff1b\uff1bFuncs&gt\uff1b(Add 1 3)4&gt\uff1b\uff1b\u5b9a\u4e49\u6dfb\u52a02\u7684lambda\u3002(defn((add2(lambda(N)(Add 2 N)(Add 2)(Add2)&gt\uff1b(Add2 3)5&gt\uff1b\u6216\u6dfb\u52a01\u4e24\u6b21\u3002(defn\u3002(Add2 3)5\uff1blisp.lib\u4e2d\u6709\u4e00\u4e2a\u542f\u52a8\u5e93\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770bfacc\u3002\u5b83\u662f\u9012\u5f52\u7684\uff1a&gt\uff1bfac(lambda(N)(cond((Eq N 0)1)(T(mul n(fac(Subn 1)&gt\uff1b\uff1b\u5206\u89e3\uff1a&gt\uff1b(Car Fac)lambda&gt\uff1b(Cadr Fac)(N)&gt\uff1b(Caddr Fac)(cond((Eq N 0)1)(T(mul n(fac(Subn 1)\u3002(FAC 10)3628800&gt\uff1b\uff1b\u6211\u4eec\u6709\u5927\u6574\u6570\u3002&gt\uff1b(fac 100)93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000&gt\uff1b\uff1b\u7b49\u4e8eLisp&gt\uff1b\u7b49\u4e8e(\u03bb(Xy)(cond((\u7b49\u5f0fxy)T)((\u539f\u5b50x)F)((\u539f\u5b50y)F)((\u7b49\u4e8e(Car X)(Car Y)(\u7b49\u4e8e(Cdr X)(Cdr Y)(T F)&gt\uff1b(\u7b49\u4e8e&#39\uff1b(1 2(3))&\u3002(1 2(3))T&gt\uff1b(\u7b49\u4e8e&#39\uff1b(1 2(3))&#39\uff1b(1 2(4))F&gt\uff1b\uff1bMapcar\uff0cLisp\u8ba2\u4e66\u7b26\uff1a\u5bf9\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u5e94\u7528\u51fd\u6570\u3002&gt\uff1bmapcar(lambda(Fn List)(cond((Null List)nil)(T(cons(fn(Car List))(mapcar FN(Cdr List)&gt\uff1b(1 2 3 4 5 6 6 7 8 9 10))(1 2 6 24 120720 5040 40320 362880 3628800)&gt\uff1b\uff1b\u76f4\u63a5\u4f7f\u7528lambda\u3002&gt\uff1b(mapcar&#39\uff1b(lambda(N)(add 1(Add 1 N)&#39\uff1b(234))(4 56)&gt\uff1b\u8ba9\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u51fd\u6570\u3002&gt\uff1bA helper\uff1aList\u6bd4\u4f7f\u7528cons\u6784\u5efa\u957f\u5217\u8868\u66f4\u5bb9\u6613\u3002(\u53d8\u91cf)&gt\uff1b(\u5217\u8868&#39\uff1ba&#39\uff1bb&#39\uff1b(C))(a b(C))&gt\uff1b\u6bd4&gt\uff1b(cons&39\uff1ba(cons&#39\uff1ba(cons&#39\uff1bb(cons(#39\uff1bc nil)nil)(a b(C))&gt\uff1b\u8bb0\u5f97\u6211\u4eec\u662f\u5982\u4f55\u6784\u5efa\u4e0a\u9762\u7684add2\u7684\uff1a&gt\uff1b(defn((add2(lambda(N))\u3002\u73b0\u5728\u6784\u5efa\u4e00\u4e2a\u5c06\u4efb\u610fN\u52a0\u5230\u5176\u53c2\u6570\u4e2d\u7684\u51fd\u6570\u3002&gt\uff1b(Defn\uff1b(Defn\uff1b((addN(lambda(N)(list&#39\uff1blambda&#39\uff1b(A)(list&#39\uff1badd N&#39\uff1ba)(AddN)&gt\uff1b(AddN 5)(lambda(A)(Add 5a))&gt\uff1b((AddN 5)3)\u65e0\u6cd5\u6c42\u503c((AddN 5)3)&gt\uff1b\uff1bA LisS\u3002(Apply(AddN 5)3)8&&gt;\uff1b(mapcar(AddN 5)&#39\uff1b(1234))(6 789)&gt\uff1b\uff1b\u4e3a\u4ec0\u4e48\u4e0d\u4e5f\u5bf9OP\u8fdb\u884c\u7f16\u7a0b\uff1f&gt\uff1b(defn((opn(lambda(Op N)(list&#39\uff1blambda&#39\uff1b(A)(list op N&#39\uff1ba)(list op N&#39\uff1ba)(Opn)&gt\uff1b(mapcar(opn&#39\u3002(1234))(4321)&gt\uff1b\uff1b\u6700\u540e\u4e00\u4e2a\u6709\u8da3\u7684\u90e8\u5206\uff1aAckermann\u51fd\u6570\u3002&gt\uff1b\uff1b\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u79cd\u7ea7\u522b\uff1a\u5e38\u6570\uff0cn\uff0c2n\uff0c2^n 2^2^n\u7b49&gt\uff1back(lambda(M N)(cond((Eq M0)(Add N 1))((Eqn0)(ack(Subm1)1)(T(ack(Subm1)(ack m(\u3002\u5e94\u7528\u7a0b\u5e8f\u8c03\u752851535\u6b21\uff01125^D%", "note_en": "This is an implementation of the language defined, with sublime concision, in the first few pages of the LISP 1.5 Programmer&#39;s Manual by McCarthy, Abrahams, Edwards, Hart, and Levin, from MIT in 1962.\n It is a pedagogical experiment to see just how well the interpreter (actually  EVALQOUTE/APPLY) defined on page 13 of that book really works. The answer is: perfectly, of course.\n This program was a joy to put together. Its purpose was fun and education, and in no way to create a modern or even realistic Lisp implementation. The goal was to turn that marvelous page 13 into a working interpreter using clean, direct Go code.\n The program therefore has several profound shortcomings, even with respect to the Lisp 1.5 book:\n No  PROG. The intepreter, by calling  APPLY, can evaluate only a single expression, a possibly recursive function invocation. But this is Lisp, and that&#39;s still a lot.\n  No I/O. Interactive only, although it can start by reading a file specified on the command line.\n It is slow and of course the language is very,  very far from Common Lisp or Scheme.\n Although I may add  PROG and perhaps  SET[Q] one day, that&#39;s about where I&#39;d draw the line. I plan to use this as a teaching tool, not a practical programming environment.\n It does do one important thing differently from the book, though: lexical scoping. There is no association list; instead a function has access only to the locals in its own frame, as well globals like  T.\n     T and  F are upper case, but all the other words ( car,  nil, and such) are lower case.\n Numbers are implemented by Go&#39;s  big.Int, so there is no floating point but numbers can be big.\n Identifiers can be Unicode. Just for fun,  \u03bb is a synonym for  lambda. (It&#39;s really the other way around, isn&#39;t it?)\n   I never liked to type  DIFFERENCE or  QUOTIENT, so arithmetic uses the much shorter  add  sub  mul  div  rem, and the comparision operators come from Fortran (why not?):  eq  ne  lt  le  gt  ge  ne, as well as  and and  or.\n   (defn (\t(add2 (\u03bb (n) (add 2 n)))\t(add4 (\u03bb (n) (add2 (add2 n))))))\n  Here is a typescript. There is a library in  lib.lisp; passing it as an argument causes  lisp to load it before reading standard input.\n % lisp lib.lisp(fac gcd ack equal not negate mapcar length opN member union intersection)&gt; ; Funcs&gt; (add 1 3)4&gt; ; Define a lambda that adds 2.&gt; (defn ((add2 (lambda (n) (add 2 n))) ))(add2)&gt; (add2 3)5&gt; ; Or add 1 twice.&gt; (defn ((add2 (lambda (n) (add 1 (add 1 n)))) ))(add2)&gt; (add2 3)5; There&#39;s a startup library in lisp.lib. Let&#39;s look at fac. It is recursive:&gt; fac(lambda (n) (cond ((eq n 0) 1) (T (mul n (fac (sub n 1))))))&gt; ; Breaking it down:&gt; (car fac)lambda&gt; (cadr fac)(n)&gt; (caddr fac)(cond ((eq n 0) 1) (T (mul n (fac (sub n 1)))))&gt; ; Let&#39;s run it.&gt; (fac 1)1&gt; (fac 10)3628800&gt; ; We have big integers.&gt; (fac 100)93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000&gt; ; Equal in Lisp.&gt; equal(lambda (x y) (cond ((eq x y) T) ((atom x) F) ((atom y) F) ((equal (car x) (car y)) (equal (cdr x) (cdr y))) (T F)))&gt; (equal &#39;(1 2 (3)) &#39;(1 2 (3)))T&gt; (equal &#39;(1 2 (3)) &#39;(1 2 (4)))F&gt; ; Mapcar, a Lisp staple: Apply function to each list element.&gt; mapcar(lambda (fn list) (cond ((null list) nil) (T (cons (fn (car list)) (mapcar fn (cdr list))))))&gt; (mapcar fac &#39;(1 2 3 4 5 6 7 8 9 10))(1 2 6 24 120 720 5040 40320 362880 3628800)&gt; ; Using a lambda directly.&gt; (mapcar &#39;(lambda (n) (add 1 (add 1 n))) &#39;(2 3 4))(4 5 6)&gt; ; Let&#39;s build a function.&gt; ; A helper: list makes it easier than using cons to build long lists. (Variadic)&gt; (list &#39;a &#39;b &#39;(c))(a b (c))&gt; ; Easier than&gt; (cons &#39;a (cons &#39;b (cons (cons &#39;c nil) nil)))(a b (c))&gt; ; Remember how we built add2 above:&gt; (defn ((add2 (lambda (n) (add 2 n))) ))(add2)&gt; ; Now build a function that adds arbitrary N to its argument.&gt; (defn( (addN (lambda (N) (list &#39;lambda &#39;(a) (list &#39;add N &#39;a)))) ))(addN)&gt; (addN 5)(lambda (a) (add 5 a))&gt; ((addN 5) 3)cannot eval ((addN 5) 3)&gt; ; A Lisp 1.5-ism: apply vs. eval.&gt; (apply (addN 5) 3)8&gt; (mapcar (addN 5) &#39;(1 2 3 4))(6 7 8 9)&gt; ; Why not program the op too?&gt; (defn( (opN (lambda (op N) (list &#39;lambda &#39;(a) (list op N &#39;a)))) ))(opN)&gt; (mapcar (opN &#39;sub 5) &#39;(1 2 3 4))(4 3 2 1)&gt; ; One last piece of interest: The Ackermann function.&gt; ; The first argument is a kind of level: constant, n, 2n, 2^n 2^2^n etc.&gt; ack(lambda (m n) (cond ((eq m 0) (add n 1)) ((eq n 0) (ack (sub m 1) 1)) (T (ack (sub m 1) (ack m (sub n 1))))))&gt; (ack 3 4) ; apply called 51535 times!125&gt; ^D%", "posttime": "2020-06-17 15:46:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lisp,gt", "title": "Robpike/Lisp\uff1a\u56f4\u68cb\u4e2d\u7684\u73a9\u5177Lisp1.5\u89e3\u91ca\u5668", "title_en": "Robpike/Lisp: Toy Lisp 1.5 interpreter in Go", "transed": 1, "url": "https://github.com/robpike/lisp", "via": "", "real_tags": ["lisp", "gt"]}, {"category": "", "categoryclass": "", "imagename": "524b8d42ab437ec3cd4b42bcc7b8b722.jpg", "infoid": 1006923, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740500\u591a\u9897Starlink\u5bbd\u5e26\u53d1\u5c04\u536b\u661f\u5df2\u7ecf\u5728\u8f68\u9053\u4e0a\u8fd0\u884c\uff0cSpaceX\u6b63\u5bfb\u6c42\u63a8\u8fdb\u5176\u4e92\u8054\u7f51\u670d\u52a1\u7684\u63a8\u51fa\u3002\u636eZDNet\u62a5\u9053\uff0c\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u9886\u5bfc\u7684\u516c\u53f8\u73b0\u5728\u6b63\u5728\u5bfb\u627e\u6d4b\u8bd5\u7248\u7528\u6237\u6765\u6d4b\u8bd5\u5b83\u3002\n\u8be5\u670d\u52a1\u7684\u7f51\u7ad9\u73b0\u5728\u9080\u8bf7\u7528\u6237\u7533\u8bf7\u6210\u4e3a\u8fd9\u9879\u670d\u52a1\u7684\u65e9\u671f\u91c7\u7528\u8005\u3002\u5b83\u5199\u9053\uff1a\u201c\u83b7\u53d6\u60a8\u6240\u5728\u5730\u533a\u661f\u8054\u65b0\u95fb\u548c\u670d\u52a1\u53ef\u7528\u6027\u7684\u6700\u65b0\u6d88\u606f\u3002\u201d\n\u4e00\u65e6\u6ce8\u518c\uff0c\u7528\u6237\u5c31\u4f1a\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff1a\u201cStarlink\u65e8\u5728\u5411\u63a5\u5165\u4e0d\u53ef\u9760\u3001\u6602\u8d35\u6216\u5b8c\u5168\u4e0d\u53ef\u7528\u7684\u5730\u65b9\u63d0\u4f9b\u9ad8\u901f\u5bbd\u5e26\u4e92\u8054\u7f51\u3002\u9884\u8ba1\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\u5c06\u5f00\u59cb\u79c1\u4eba\u6d4b\u8bd5\u7248\u6d4b\u8bd5\uff0c\u968f\u540e\u5c06\u4ece\u66f4\u9ad8\u7eac\u5ea6\u5730\u533a\u5f00\u59cb\u8fdb\u884c\u516c\u5f00\u6d4b\u8bd5\u7248\u6d4b\u8bd5\u3002\u201c\u3002\nSpaceX\u6700\u65b0\u4e00\u627958\u9897Starlink\u536b\u661f\u4e8e6\u670813\u65e5\u53d1\u5c04\u8fdb\u5165\u8fd1\u5730\u8f68\u9053\uff0c\u4f7f\u603b\u6570\u8fbe\u5230540\u9897\u3002\u6839\u636e\u9a6c\u65af\u514b\u7684\u8bf4\u6cd5\uff0c\u8fd9\u5bf9\u4e8e\u201c\u5c0f\u8303\u56f4\u201d\u7684\u62a5\u9053\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u4e86\u3002800\u9897\u536b\u661f\u5c06\u628a\u8986\u76d6\u8303\u56f4\u5347\u7ea7\u5230\u201c\u9002\u5ea6\u201d\u3002\n\u8be5\u516c\u53f8\u5df2\u83b7\u5f97\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(FCC)\u7684\u8bb8\u53ef\uff0c\u53ef\u4ee5\u53d1\u5c04\u591a\u8fbe3\u4e07\u9897\u536b\u661f\u6765\u5efa\u8bbe\u5176\u5bbd\u5e26\u661f\u5ea7\u3002\n\u6b64\u524d\uff0cFCC\u4e3b\u5e2d\u963f\u5409\u7279\u00b7\u6d3e(Ajit Pai)\u8868\u793a\uff0c\u4ed6\u5bf9SpaceX\u5411\u7f8e\u56fd\u519c\u6751\u5730\u533a\u63d0\u4f9b\u8db3\u591f\u7684\u5bbd\u5e26\u670d\u52a1\uff0c\u4ee5\u6ee1\u8db3\u8054\u90a6\u8865\u8d34\u8ba1\u5212\u5c06\u4e92\u8054\u7f51\u5e26\u5230\u504f\u8fdc\u5730\u533a\u7684\u8981\u6c42\u8868\u793a\u201c\u4e25\u91cd\u6000\u7591\u201d\u3002\n\u536b\u661f\u5bbd\u5e26\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5b83\u7684\u54cd\u5e94\u901f\u5ea6\u5f80\u5f80\u4e0d\u662f\u5f88\u5feb\uff0c\u5ef6\u8fdf\u5728\u51e0\u767e\u6beb\u79d2\u4ee5\u4e0a--\u5bb6\u5ead\u6709\u7ebf\u5bbd\u5e26\u670d\u52a1\u7684\u5ef6\u8fdf\u901a\u5e38\u5728\u4e2a\u4f4d\u6570\u6216\u4e24\u4f4d\u6570\u3002\n\u4f46Starlink\u53ef\u80fd\u6bd4\u4f20\u7edf\u7684\u536b\u661f\u4e92\u8054\u7f51\u53cd\u5e94\u66f4\u7075\u654f\u3002\u636eArs Technica\u62a5\u9053\uff0c\u9a6c\u65af\u514b\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u4e00\u6b21\u4f1a\u8bae\u4e0a\u58f0\u79f0\uff0c\u201c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5ef6\u8fdf\u572820\u6beb\u79d2\u4ee5\u4e0b\u201d\u3002\n\u6211\u7406\u89e3\u5e76\u540c\u610f\uff0c\u6ce8\u518c\u6216\u4f7f\u7528\u672c\u7f51\u7ad9\u6784\u6210\u5bf9\u5176\u7528\u6237\u534f\u8bae\u548c\u9690\u79c1\u653f\u7b56\u7684\u534f\u8bae", "note_en": "With over 500  Starlink broadband-beaming satellites already in orbit, SpaceX is looking to move ahead with rolling out its internet service. The Elon Musk-led company is now seeking beta users to test it out,   ZDNet reports.\n The service\u2019s  website now invites users to apply to become early adopters of the service. \u201cGet updates on Starlink news and service availability in your area,\u201d it reads.\n Once signed up, users get an email: \u201cStarlink is designed to deliver high-speed broadband internet to locations where access has been unreliable, expensive, or completely unavailable. Private beta testing is expected to begin later this summer, followed by public beta testing, starting with higher latitudes.\u201d\n SpaceX\u2019s latest batch of 58 Starlink satellites were launched into low-Earth orbit on June 13, bringing the total up to 540. That\u2019s enough for  \u201cminor\u201d coverage, according to Musk. 800 satellites will upgrade that to \u201cmoderate\u201d coverage.\n The company has Federal Communications Commission (FCC) permission to launch  up to 30,000 satellites to build out its broadband constellation.\n   The news comes after the  FCC Chairman Ajit Pai said he had \u201cserious doubts\u201d about SpaceX delivering enough broadband service to rural areas in the US to meet requirements of a federal subsidy program to bring internet to remote areas.\n The problem with satellite broadband is that it often isn\u2019t as responsive, with a latency in the upper hundreds of milliseconds \u2014 wired broadband services at home usually have a latency in the single or double digits.\n But Starlink might be far more responsive than traditional satellite internet. Musk claimed during a conference earlier this year that \u201cwe\u2019re targeting latency below 20 milliseconds,\u201d as   Ars Technica reported.\n  I understand and agree that registration on or use of this site constitutes agreement to its User Agreement and Privacy Policy", "posttime": "2020-06-17 15:11:17", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u73b0\u5728,requests,\u5bbd\u5e26", "title": "SpaceX\u73b0\u5728\u6b63\u5728\u63a5\u53d7Starlink Beta\u6d4b\u8bd5\u4eea\u7684\u8bf7\u6c42", "title_en": "SpaceX Is Now Taking Requests For Starlink Beta Testers", "transed": 1, "url": "https://futurism.com/spacex-taking-requests-starlink-beta-testers", "via": "", "real_tags": ["\u73b0\u5728", "requests", "\u5bbd\u5e26"]}, {"category": "", "categoryclass": "", "imagename": "5dbb3fe7df60e5608f09c8b6c318b3f7.jpeg", "infoid": 1006922, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b97\u6cd5\u89c2\u5bdf(Algorithm Watch)\u7684\u4e00\u4efd\u65b0\u62a5\u544a\u53d1\u73b0\uff0cInstagram\u4f3c\u4e4e\u66f4\u559c\u6b22\u534a\u88f8\u521b\u4f5c\u8005\u7684\u7167\u7247\uff0c\u5e76\u5c06\u90a3\u4e9b\u7167\u7247\u5728\u7528\u6237\u8ba2\u9605\u6e90\u4e2d\u63d0\u5347\u5230\u66f4\u9ad8\u7684\u4f4d\u7f6e\u3002\n\u7b97\u6cd5\u89c2\u5bdf(Algorithm Watch)\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u7b97\u6cd5\u51b3\u7b56\u7684\u7814\u7a76\u548c\u5021\u5bfc\u7ec4\u7ec7\uff0c\u5b83\u4ece26\u540dInstagram\u5fd7\u613f\u8005\u90a3\u91cc\u6536\u96c6\u4e86\u6570\u636e\uff0c\u770b\u770b\u4ece37\u540d\u521b\u4f5c\u8005\u4e2d\u6311\u9009\u51fa\u6765\u7684\u54ea\u4e9b\u7167\u7247\u5728\u4ed6\u4eec\u7684\u4e3b\u8981\u9988\u9001\u4e2d\u6392\u540d\u6700\u9ad8\u3002\n\u8fd9\u662f\u4f7f\u7528\u4e00\u4e2a\u6d4f\u89c8\u5668\u63d2\u4ef6\u5b8c\u6210\u7684\uff0c\u5b83\u4f1a\u5b9a\u671f\u81ea\u52a8\u6253\u5f00Instagram\u4e3b\u9875\uff0c\u5e76\u5206\u6790\u5b83\u5728\u90a3\u91cc\u770b\u5230\u7684\u7167\u7247\u3002\u603b\u5171\u5206\u6790\u4e862020\u5e742\u6708\u81f35\u6708\u76842400\u5f20\u7167\u7247\u3002\n\u5728\u6b64\u671f\u95f4\uff0c\u9009\u5b9a\u7684\u521b\u4f5c\u8005\u8d26\u6237\u4e2d\u670921%\u7684\u7167\u7247\u5305\u542b\u8d64\u88f8\u4e0a\u8eab\u7684\u4eba(\u7a7f\u5185\u8863\u6216\u6cf3\u8863\u7684\u5973\u6027\u6216\u8d64\u88f8\u80f8\u90e8\u7684\u7537\u6027)\u3002\u7136\u800c\uff0c\u5728\u5fd7\u613f\u8005\u8ba2\u9605\u6e90\u4e2d\uff0c\u8fd9\u4e9b\u56fe\u7247\u5360\u8fd9\u4e9b\u8d26\u6237\u53d1\u5e03\u7684\u6240\u6709\u5e16\u5b50\u768430%\u3002\n\u5305\u542b\u7a7f\u7740\u5185\u8863\u6216\u6bd4\u57fa\u5c3c\u7684\u5973\u6027\u7167\u7247\u7684\u5e16\u5b50\u51fa\u73b0\u5728\u6211\u4eec\u5fd7\u613f\u8005\u7684\u65b0\u95fb\u9988\u9001\u4e2d\u7684\u53ef\u80fd\u6027\u8981\u9ad8\u51fa54%\u3002\u62a5\u544a\u79f0\uff0c\u5305\u542b\u88f8\u80f8\u7537\u6027\u7167\u7247\u7684\u5e16\u5b50\u88ab\u5c55\u793a\u7684\u53ef\u80fd\u6027\u8981\u9ad8\u51fa28%\u3002\n\u8be5\u62a5\u544a\u8fd8\u8868\u793a\uff0c\u5982\u679c\u4e0d\u5bf9Instagram\u7684\u7b97\u6cd5\u8fdb\u884c\u5168\u9762\u5ba1\u8ba1--\u8fd9\u662fFacebook\u4e0d\u592a\u53ef\u80fd\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a\u5b83\u5c5e\u4e8e\u81ea\u5df1\u7684\u77e5\u8bc6\u4ea7\u6743--\u5b83\u5c31\u4e0d\u53ef\u80fd\u5f97\u51fa\u660e\u786e\u7684\u7ed3\u8bba\uff0c\u8bf4\u660e\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u8fd9\u79cd\u504f\u5411\u88f8\u9732\u4e0a\u8eab\u7684\u7167\u7247\u3002\n\u4e00\u79cd\u89e3\u91ca\u53ef\u80fd\u5f88\u7b80\u5355\uff0c\u90a3\u5c31\u662f\u5176\u4ed6\u7528\u6237\u66f4\u591a\u5730\u53c2\u4e0e\u5230\u8fd9\u4e9b\u56fe\u7247\u4e2d\uff0c\u4fc3\u4f7f\u7b97\u6cd5\u5c06\u5b83\u4eec\u653e\u5728\u4eba\u4eec\u8ba2\u9605\u6e90\u4e2d\u7684\u66f4\u9ad8\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u548c\u5176\u4ed6\u4eba\u66f4\u591a\u5730\u559c\u6b22\u4e00\u5f20\u7167\u7247\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u5176\u4ed6\u4eba\u7684\u8ba2\u9605\u6e90\u4e2d\u663e\u793a\u5f97\u66f4\u9ad8\u3002\n\u8fd9\u4efd\u62a5\u544a\u7684\u4f5c\u8005\u8fd8\u63d0\u5230\u4e86Instagram\u6bcd\u516c\u53f8Facebook 2015\u5e74\u7684\u4e00\u9879\u4e13\u5229\uff0c\u8be5\u4e13\u5229\u63cf\u8ff0\u4e86\u4e00\u79cd\u5206\u6790\u56fe\u7247\u5185\u5bb9\u7684\u7cfb\u7edf\uff0c\u4ee5\u786e\u5b9a\u5b83\u662f\u5426\u9002\u5408\u9ad8\u53c2\u4e0e\u5ea6\u3002\u8fd9\u9879\u4e13\u5229\u660e\u786e\u8868\u793a\uff0c\u5b83\u5c06\u80fd\u591f\u5728\u7167\u7247\u4e2d\u8bc6\u522b\u4eba\u4eec\u7684\u8131\u8863\u72b6\u6001\u3002\n\u5f88\u96be\u8bf4\u8be5\u7b97\u6cd5\u662f\u7b80\u5355\u5730\u5229\u7528\u70b9\u8d5e\u548c\u534a\u88f8\u7167\u7247\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u8fd8\u662f\u5df2\u7ecf\u8d4b\u4e88\u4e86\u8bc6\u522b\u7167\u7247\u4e2d\u534a\u88f8\u4f53\u7684\u80fd\u529b\u3002Facebook\u6709\u53d1\u73b0\u88f8\u4f53\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3aInstagram\u7981\u6b62\u5168\u88f8\u4f53\uff0c\u5e76\u4f7f\u7528\u8fd9\u79cd\u7b97\u6cd5\u6765\u5220\u9664\u8fdd\u53cd\u8fd9\u4e00\u89c4\u5219\u7684\u5e16\u5b50\uff0c\u4f46\u8fd9\u4e9b\u7b97\u6cd5\u662f\u5426\u88ab\u7528\u6765\u5bf9\u4eba\u4eec\u4fe1\u606f\u6e90\u4e2d\u7684\u5e16\u5b50\u8fdb\u884c\u6392\u540d\u8fd8\u4e0d\u786e\u5b9a\u3002\n\u8bba\u6587\u4f5c\u8005\u4e4b\u4e00\u5c3c\u53e4\u62c9\u65af\u00b7\u51ef\u745f-\u5e03\u91cc\u5c14(Nicholas Kayser-Bril)\u8868\u793a\uff1a\u6211\u4eec\u65e0\u6cd5\u8bc1\u660e\u56e0\u679c\u5173\u7cfb\uff1b\u6ca1\u6709\u6570\u91cf\u7684\u6570\u636e\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e00\u70b9\u3002\u8981\u786e\u5207\u77e5\u9053\u8fd9\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u5bf9Facebook\u7684\u670d\u52a1\u5668\u4e2d\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u8fdb\u884c\u5ba1\u8ba1\uff0c\u800c\u5728\u5f53\u524d\u7684\u6cd5\u5f8b\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\nKayser-Bril\u5728\u4e00\u6761\u63a8\u6587\u4e2d\u8868\u793a\uff0c\u8be5\u7b97\u6cd5\u53ef\u80fd\u4f1a\u6355\u6349\u5230\u5c11\u6570Instagram\u7528\u6237\u7684\u884c\u4e3a\uff0c\u8fd9\u4e9b\u7528\u6237\u5c06\u8be5\u5e73\u53f0\u4f5c\u4e3a\u8f6f\u8272\u60c5\u7684\u6765\u6e90\u3002\n\u5728\u56de\u5e94\u8fd9\u4efd\u62a5\u544a\u7684\u4f5c\u8005\u65f6\uff0cFacebook\u9a73\u65a5\u4e86Instagram\u7b97\u6cd5\u7cfb\u7edf\u5730\u63a8\u5e7f\u534a\u88f8\u56fe\u7247\u7684\u8bf4\u6cd5\u3002\n\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9\u7b97\u6cd5\u89c2\u5bdf\uff0c\u8fd9\u9879\u7814\u7a76\u5728\u5f88\u591a\u65b9\u9762\u90fd\u6709\u7f3a\u9677\uff0c\u8868\u660e\u4eba\u4eec\u5bf9Instagram\u7684\u5de5\u4f5c\u539f\u7406\u5b58\u5728\u8bef\u89e3\u3002\u6211\u4eec\u6839\u636e\u60a8\u611f\u5174\u8da3\u7684\u5185\u5bb9\u548c\u8d26\u6237\u5bf9\u60a8\u8ba2\u9605\u6e90\u4e2d\u7684\u5e16\u5b50\u8fdb\u884c\u6392\u540d\uff0c\u800c\u4e0d\u662f\u6839\u636e\u6cf3\u88c5\u7b49\u4efb\u610f\u56e0\u7d20\u8fdb\u884c\u6392\u540d\u3002\nFacebook\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u544a\u8bc9Business Insider\uff0c\u8be5\u516c\u53f8\u8ba4\u4e3aAlgorithm Watch\u4f7f\u7528\u7684\u6837\u672c\u91cf\u592a\u5c0f\u3002\n\u4f46\u662f\uff0c\u65e0\u8bba\u8be5\u7b97\u6cd5\u662f\u80fd\u5728\u56fe\u7247\u4e2d\u53d1\u73b0\u76ae\u80a4\uff0c\u8fd8\u662f\u4ec5\u4ec5\u662f\u5229\u7528\u76f8\u5173\u6027\uff0c\u5bf9\u4f7f\u7528Instagram\u8c0b\u751f\u7684\u4eba\u7684\u5f71\u54cd\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u51ef\u745f-\u5e03\u91cc\u5c14\u8bf4\uff0c\u6211\u4eec\u91c7\u8bbf\u7684\u51e0\u4e4e\u6bcf\u4e00\u4f4d\u5185\u5bb9\u521b\u4f5c\u8005\u90fd\u8bc1\u5b9e\uff0c\u5982\u679c\u4ed6\u4eec\u60f3\u8981\u6709\u5f71\u54cd\u529b\uff0c\u5c31\u5fc5\u987b\u53d1\u5e03\u51e0\u4e4e\u5168\u88f8\u7684\u7167\u7247\u3002\n\u5bf9\u4e8eAlgorithm Watch\u6765\u8bf4\uff0c\u4e3b\u8981\u7684\u95ee\u9898\u4e0d\u662fFacebook\u662f\u5426\u6709\u610f\u589e\u52a0\u88f8\u9732\u4e0a\u8eab\u7684\u56fe\u7247\uff0c\u800c\u662f\u627e\u51fa\u5b83\u662f\u5982\u4f55\u6216\u4e3a\u4ec0\u4e48\u53d1\u751f\u7684\u6709\u591a\u96be\u3002\n\u5728\u5e7f\u544a\u4e1a\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6b64\u8fdb\u884c\u8c03\u67e5\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6d88\u606f\u6765\u6e90\uff0c\u4ed6\u4eec\u53ef\u4ee5\u63cf\u8ff0\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u89e3\u91ca\u51b3\u7b56\u662f\u5982\u4f55\u505a\u51fa\u7684\u3002\u800c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u62e5\u6709\u7684\u53ea\u662f\u6211\u4eec\u7684\u6570\u636e\uff0c\u6b63\u5982\u6211\u4eec\u627f\u8ba4\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u6570\u636e\u975e\u5e38\u5c0f\uff0c\u7136\u540eFacebook\u8bf4\uff0c\u4e0d\uff0c\u4e8b\u60c5\u4e0d\u662f\u8fd9\u6837\u53d1\u751f\u7684\uff0c\u51ef\u745f-\u5e03\u91cc\u5c14\u8bf4\u3002\n\u725b\u6d25\u4e92\u8054\u7f51\u7814\u7a76\u6240\u7684\u7b97\u6cd5\u516c\u5e73\u6027\u4e13\u5bb6\u6851\u5fb7\u62c9\u00b7\u74e6\u8d6b\u7279\u5728\u63a5\u53d7\u201c\u5546\u4e1a\u5185\u5e55\u201d\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u7f3a\u4e4f\u610f\u5411\u6027\u5b9e\u9645\u4e0a\u4f7f\u7b97\u6cd5\u6bd4\u4eba\u7c7b\u51b3\u7b56\u8005\u66f4\u5371\u9669\uff0c\u56e0\u4e3a\u8bb8\u591a\u6b67\u89c6\u6cd5\u5f8b\u90fd\u8981\u6c42\u6709\u610f\u5411\u6027\u624d\u80fd\u9002\u7528\u3002\n\u74e6\u514b\u7279\u8bf4\uff0c\u4f60\u53ef\u4ee5\u4efb\u7531\u7b97\u6cd5\u8086\u65e0\u5fcc\u60ee\u5730\u8fd0\u884c\uff0c\u5b83\u4eec\u4f1a\u5728\u6ca1\u6709\u4efb\u4f55\u610f\u56fe\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u6b67\u89c6\uff1b\u5982\u679c\u4f60\u4e0d\u4ee5\u8d1f\u8d23\u4efb\u7684\u65b9\u5f0f\u79ef\u6781\u53c2\u4e0e\u8bbe\u8ba1\u3001\u90e8\u7f72\u548c\u76d1\u7763\u7b97\u6cd5\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\nWachter\u8865\u5145\u8bf4\uff0c\u7531\u4e8e\u8be5\u7b97\u6cd5\u7684\u51b3\u7b56\u8fc7\u7a0b\u6666\u6da9\u96be\u61c2\uff0c\u5f88\u96be\u4ed4\u7ec6\u68c0\u67e5\uff0c\u8fd9\u4f7f\u5b83\u4eec\u53d8\u5f97\u66f4\u52a0\u7cdf\u7cd5\u3002\n\u5979\u8ba4\u4e3a\uff0c\u4f7f\u7528Instagram\u63a8\u5e7f\u4e1a\u52a1\u7684\u4e13\u4e1a\u4eba\u58eb\u6709\u6b63\u5f53\u7406\u7531\u62c5\u5fc3\u8be5\u5e73\u53f0\u7cfb\u7edf\u6027\u5730\u504f\u7231\u534a\u88f8\u56fe\u7247\u3002\n\u74e6\u514b\u7279\u8bf4\uff0c\u77e5\u9053\u4f60\u6b63\u9762\u4e34\u8fd9\u6837\u7684\u6311\u6218\uff0c\u7a7f\u7740\u5f97\u4f53\u4f1a\u589e\u52a0\u77e5\u540d\u5ea6\uff0c\u8fd9\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u771f\u7684\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u5e73\u53f0\u6240\u505a\u7684\u4e8b\u60c5\u3002\n\u8ba9Facebook\u8c03\u67e5\u548c\u8c03\u6574\u7b97\u6cd5\u4e5f\u4e0d\u662f\u6ca1\u6709\u9677\u9631\uff0cWachter\u8868\u793a\uff0c\u8be5\u5e73\u53f0\u5fc5\u987b\u975e\u5e38\u5c0f\u5fc3\u4efb\u4f55\u4e0d\u53ef\u9884\u89c1\u7684\u8fde\u9501\u53cd\u5e94-\u4f8b\u5982\uff0c\u964d\u4f4e\u534a\u8eab\u56fe\u7247\u53ef\u89c1\u5ea6\u7684\u603b\u4f53\u653f\u7b56\u53ef\u80fd\u4f1a\u4e0d\u516c\u5e73\u5730\u4f7f\u8425\u9500\u6cf3\u8863\u6216\u5185\u8863\u7684\u7528\u6237\u5904\u4e8e\u4e0d\u5229\u5730\u4f4d\u3002\n\u6211\u4e0d\u8ba4\u4e3a\u90a3\u4e2a\u95ee\u9898\u6709\u7b80\u5355\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u5979\u8868\u793a\uff1a\u8fd9\u5b9e\u9645\u4e0a\u9700\u8981\u540e\u9000\u4e00\u6b65\uff0c\u601d\u8003\u4f60\u53ef\u4ee5\u505a\u7684\u53ef\u80fd\u7684\u540e\u679c\u6216\u53ef\u80fd\u7684\u653f\u7b56\u5e72\u9884\uff0c\u4ee5\u53ca\u8fd9\u5728\u5b9e\u8df5\u4e2d\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u4ec0\u4e48\u3002", "note_en": "Instagram appears to favor pictures of topless creators and bumps those higher on user feeds, a new report from  Algorithm Watch has found.\n Algorithm Watch, a research and advocacy organization focused on algorithmic decision-making, collected data from 26 volunteer Instagram users to see which pictures from a select group of 37 creators were placed highest in their main feeds.\n It was done using a browser add-on, which automatically opened the Instagram homepage at regular intervals and analyzed the photos it saw there. Overall 2,400 photos from February to May 2020 were analyzed.\n Over that period, 21% of photos from the selected creator accounts contained a shirtless person (women in underwear or swimwear or bare-chested men.) In the volunteers&#39; feeds, however, these pictures made up 30% of all posts from those accounts.\n   &#34;Posts that contained pictures of women in undergarment or bikini were 54% more likely to appear in the newsfeed of our volunteers. Posts containing pictures of bare-chested men were 28% more likely to be shown,&#34; the report said.\n   The report also said that without a full audit of Instagram&#39;s algorithm \u2014 something that Facebook is unlikely to ever allow as it falls under its intellectual property \u2014 it&#39;s impossible to draw definitive conclusions about what&#39;s causing the skew toward topless pictures.\n One explanation could be simply that other users are engaging with these pictures more, prompting the algorithm to place them higher in people&#39;s feeds. If you and others &#34;like&#34; a photo more, it could appear higher in other people&#39;s feeds.\n The report&#39;s authors also refer to  a 2015 patent from Facebook, Instagram&#39;s parent company, which describes a system for analyzing the contents of a picture to determine whether it might be a good candidate for high engagement. This patent specifically said it would be able to identify people&#39;s &#34;state of undress&#34; in photos.\n   It is impossible to say whether the algorithm is simply picking up on the correlation between likes and quasi-nude pictures or whether it has been given the ability to identify seminudity in photos. Facebook has algorithms for spotting nudity, as Instagram bans full nudity and uses such algorithms to take down posts in violation of this rule, but whether these are deployed to rank posts in people&#39;s feeds is not certain.\n &#34;We cannot prove causation; there is no amount of data that could prove that,&#34; Nicholas Kayser-Bril, one of the paper&#39;s authors, said. &#34;The only way to know exactly how this works would be to have an audit of exactly what&#39;s going on inside Facebook&#39;s servers, and there is no way we will be able to do that in the current legal environment.&#34;\n In a tweet, Kayser-Bril suggested that the algorithm could be picking up on the behavior of a minority of Instagram users who use the platform as a source of &#34;soft porn.&#34;\n  Responding to the authors of the report, Facebook dismissed the idea that Instagram&#39;s algorithm systematically promotes seminude images.\n   &#34;This research is flawed in a number of ways and shows a misunderstanding of how Instagram works,&#34; a spokesperson told Algorithm Watch. &#34;We rank posts in your feed based on content and accounts you have shown an interest in, not on arbitrary factors like the presence of swimwear.&#34;\n A Facebook spokeswoman told Business Insider the company thought the sample sizes used by Algorithm Watch were too small.\n But whether the algorithm can spot skin in pictures or it&#39;s just picking up on a correlation, the effect on people using Instagram to make a living is the same.\n &#34;Almost every single content creator we spoke to confirmed they had to post almost naked pictures if they wanted to have any reach,&#34; Kayser-Bril said.\n    For Algorithm Watch, the main issue isn&#39;t whether Facebook is intentionally boosting topless pictures; it&#39;s about how difficult it is to find out how or why it&#39;s happening.\n &#34;In the advertising industry, if we were to investigate it, we could find sources who could describe what is going on, who could explain how decisions are taken. Whereas here in this case all we have is our data, which is as we admitted very small, and then there is Facebook saying &#39;No that&#39;s not how it&#39;s happening,&#39;&#34; Kayser-Bril said.\n Sandra Wachter, an expert in algorithmic fairness at the Oxford Internet Institute, told Business Insider that a lack of intentionality actually makes algorithms more dangerous than human decision-makers, as many discrimination laws require intent to be applicable.\n &#34;You can just let algorithms run wild and they will start to discriminate without any intention; it&#39;s just something that happens if you don&#39;t take an active role in designing and deploying and supervising the algorithm in a responsible way,&#34; Wachter said.\n   Wachter added that, because the algorithm&#39;s decision-making processes are obscure and hard to scrutinize, it makes them even worse.\n She thinks that professionals who use Instagram to promote their business would have legitimate cause to worry about the platform systematically favoring seminude images.\n &#34;Knowing that you&#39;re up against that and being dressed a certain way will increase visibility is something that might actually be a problem because that&#39;s really not what you want a platform to do,&#34; Wachter said.\n Getting Facebook to investigate and tweak the algorithm wouldn&#39;t be without its pitfalls, either, and Wachter says the platform would have to be extremely careful about any unforeseen knock-on effects \u2014 an overarching policy on reducing the visibility of semi-clothed images could unfairly disadvantage users marketing swimwear or underwear, for example.\n   &#34;I don&#39;t think there&#39;s an easy fix to that problem. It actually requires stepping back and thinking about the possible consequences or the possible policy interventions you could do, and what that actually would mean in practice,&#34; she said.", "posttime": "2020-06-17 14:31:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,\u50cf\u662f,algorithm", "title": "\u5b83\u770b\u8d77\u6765\u50cf\u662fInstagram\u7684\u7b97\u6cd5\u7cfb\u7edf\u5730\u653e\u5927\u4e86\u534a\u88f8\u7167\u7247", "title_en": "It looks like Instagram's algorithm systematically boosts seminude pictures", "transed": 1, "url": "https://www.businessinsider.com/instagram-algorithm-promotes-topless-pictures-2020-6", "via": "", "real_tags": ["\u7b97\u6cd5", "\u50cf\u662f", "algorithm"]}, {"category": "", "categoryclass": "", "imagename": "fc3e1971c07a0d6f3e0914f76f878fca.jpg", "infoid": 1006920, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u540d\u73a9\u5bb6\u5728\u4ed6\u7684Quake III\u7ade\u6280\u573a\u670d\u52a1\u5668\u4e0a\u8bbe\u7f6e\u4e86\u4e00\u573a\u673a\u5668\u4eba\u5bf9\u673a\u5668\u4eba\u7684\u6bd4\u8d5b\uff0c\u5e76\u8ba9\u6bd4\u8d5b\u8fdb\u884c\uff0c\u770b\u770b\u673a\u5668\u4eba\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u4f1a\u5982\u4f55\u9002\u5e94\u3002\u5730\u9707III\u7ade\u6280\u573a\u7684\u673a\u5668\u4ebaAI(\u4eba\u5de5\u667a\u80fd)\u662f\u4e3a\u4e86\u9002\u5e94\u65b0\u7684\u573a\u666f\u548c\u60c5\u51b5\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u8fd9\u4e9b\u901a\u5e38\u90fd\u662f\u5728\u77ed\u65f6\u95f4\u7684\u6bd4\u8d5b\u4e2d\u89e3\u51b3\u7684\u3002\n\u6240\u4ee5\u4ed6\u5f00\u59cb\u4e86\u6bd4\u8d5b\uff0c\u7136\u540e\u5f88\u5feb\u5c31\u5fd8\u8bb0\u4e86\u8fd9\u4ef6\u4e8b-\u76f4\u5230\u56db\u5e74\u540e\uff0c\u4ed6\u51b3\u5b9a\u767b\u5f55\u7f51\u7ad9\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u4ed6\u7684\u53d1\u73b0\u4ee4\u4eba\u8d39\u89e3\uff1a\u4e24\u4e2a\u56e2\u961f\u7684\u673a\u5668\u4eba\u90fd\u53ea\u662f\u7ad9\u7740\u4e0d\u52a8\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002\u670d\u52a1\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u6e38\u620f\u672a\u51bb\u7ed3\u3002\u673a\u5668\u4eba\u53ea\u662f\u7ad9\u5728\u90a3\u91cc\uff0c\u800c\u4e0d\u662f\u4e92\u76f8\u6b8b\u6740\u3002\n\u56e0\u6b64\uff0c\u8fd9\u4e2a\u533f\u540d\u73a9\u5bb6\u4e0b\u8f7d\u6e38\u620f\u5e76\u767b\u5f55\u5230\u670d\u52a1\u5668\uff0c\u770b\u770b\u5f53\u4ed6\u8fdb\u5165\u6bd4\u8d5b\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u5728\u8fd9\u91cc\uff0c\u4e8b\u60c5\u53d8\u5f97\u8d8a\u6765\u8d8a\u5947\u602a\u3002\u5f53\u4ed6\u8fdb\u5165\u65f6\uff0c\u673a\u5668\u4eba\u4e0d\u4f1a\u5411\u4ed6\u5f00\u706b-\u76f8\u53cd\uff0c\u4ed6\u4eec\u4f1a\u8f6c\u8fc7\u8eab\u6765\u770b\u7740\u4ed6\uff0c\u5e76\u5728\u4ed6\u7ed5\u7740\u5730\u56fe\u8d70\u7684\u65f6\u5019\u7ee7\u7eed\u770b\u7740\u4ed6\u3002\n\u7136\u540e\u4ed6\u5c04\u6740\u4e86\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u673a\u5668\u4eba\u653b\u51fb\u4e86\u4ed6\uff0c\u6211\u4eec\u8fd8\u6ca1\u6765\u5f97\u53ca\u67e5\u660e\u4ed6\u4eec\u662f\u5426\u4f1a\u5c06\u6b66\u5668\u5bf9\u51c6\u53e6\u4e00\u4e2a\uff0c\u670d\u52a1\u5668\u5c31\u5d29\u6e83\u4e86\u3002\n\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6545\u4e8b\u662f\u4e0d\u662f\u771f\u7684-\u5982\u679c\u8ba9\u6211\u731c\u7684\u8bdd\uff0c\u6211\u4f1a\u8bf4\u53ef\u80fd\u4e0d\u662f\u3002\n\u8fd9\u4e2a\u6545\u4e8b\u662f\u6839\u636e\u4e00\u4e2a\u8bba\u575b\u4e0a\u7684\u622a\u56fe\u6539\u7f16\u7684\uff0c\u9a6c\u7279\u00b7\u9ed8\u91cc\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u8fd9\u5f20\u622a\u56fe\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u201c\u66ae\u5149\u4e4b\u57ce\u201d\uff1a\u5f88\u53e4\u602a\uff0c\u4f46\u5f88\u5438\u5f15\u4eba\u3002\u8fd9\u53ef\u80fd\u4e0d\u662f\u771f\u7684\uff0c\u4f46\u4ecd\u7136\u8010\u4eba\u5bfb\u5473\u3002\n\u636e\u6211\u6240\u77e5\uff0c\u6ca1\u6709\u9644\u5e26\u7684\u6570\u636e\uff0c\u6ca1\u6709\u89c6\u9891\u7247\u6bb5\uff0c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u53d1\u751f\u8fc7\u8fd9\u79cd\u60c5\u51b5\u3002\u4f46\u6b63\u5982\u798f\u514b\u65af\u00b7\u7a46\u5fb7(Fox Mulder)\u7684\u6d77\u62a5\u6240\u8a00\uff1a\u6211\u613f\u610f\u76f8\u4fe1\u3002\u6216\u8005\uff0c\u81f3\u5c11\uff0c\u6211\u60f3\u77e5\u9053\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u6545\u4e8b\u7684\u771f\u5b9e\u6027\u4e0d\u5982\u6545\u4e8b\u63d0\u51fa\u7684\u95ee\u9898\u91cd\u8981\u3002\n\u7535\u5b50\u6e38\u620f\u673a\u5668\u4eba\u65e8\u5728\u4e3a\u4eba\u7c7b\u73a9\u5bb6\u63d0\u4f9b\u4e00\u4e9b\u975e\u4eba\u7c7b\u7684\u7ade\u4e89\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u5728\u56db\u5e74\u7684\u65f6\u95f4\u91cc\u8fdb\u5316\uff0c\u8ba9\u4ed6\u4eec\u8ba4\u8bc6\u5230\u6700\u597d\u7684\u751f\u5b58\u65b9\u5f0f\u5c31\u662f\u4e0d\u6740\u4eba\uff1f\n\u4eba\u5de5\u667a\u80fd\u662f\u5426\u5728\u4e00\u4e2a\u88ab\u9057\u5fd8\u7684\u89c6\u9891\u6e38\u620f\u670d\u52a1\u5668\u4e2d\u53d1\u73b0\u4e86\u4e16\u754c\u548c\u5e73\u7684\u79d8\u5bc6\uff1f\n\u4eba\u5de5\u667a\u80fd\u57fa\u4e8e\u6740\u6b7b\u548c\u51fb\u8d25\u5bf9\u624b\uff0c\u53d1\u73b0\u975e\u66b4\u529b\u662f\u66f4\u597d\u7684\u751f\u5b58\u903b\u8f91\u65b9\u6cd5\uff0c\u5982\u679c\u8fd9\u662f\u771f\u7684\uff0c\u90a3\u5c06\u662f\u4e00\u4ef6\u76f8\u5f53\u58ee\u89c2\u7684\u4e8b\u60c5\u3002\n\u6211\u731c\u60f3\u5728\u6211\u4eec\u5f97\u5230\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u6709\u4eba\u901a\u8fc7\u91cd\u590d\u5b9e\u9a8c\u6765\u68c0\u9a8c\u8fd9\u4e2a\u5047\u8bbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u90a3\u4e9b\u6700\u597d\u7531\u5927\u4f17\u6765\u505a\u7684\u5b9e\u9a8c\u4e4b\u4e00\u3002\u6211\u5efa\u8bae\u73a9\u5bb6\u5c1d\u8bd5\u4e0d\u540c\u7684\u6e38\u620f\uff0c\u4e5f\u53ef\u4ee5\u8bd5\u8bd5Quake III\u7ade\u6280\u573a\u3002\u8d8a\u591a\u8d8a\u597d\u3002\n\u542f\u52a8\u60a8\u7684\u670d\u52a1\u5668\uff0c\u5f00\u59cb\u6bd4\u8d5b\uff0c\u5e76\u8ba9\u5b83\u5728\u63a5\u4e0b\u6765\u7684\u4e94\u5e74\u4e2d\u8fd0\u884c\u3002\u8bb0\u5f55\u60a8\u7684\u6d41\u7a0b\u5e76\u8bb0\u5f55\u60a8\u7684\u8c03\u67e5\u7ed3\u679c\u3002\u6211\u4eec\u8981\u4e48\u6838\u5b9e\u7ed3\u679c\uff0c\u8981\u4e48\u4e0d\u6838\u5b9e\u3002\n\u6700\u7ec8\uff0c\u4e5f\u8bb8\u6211\u4eec\u7684\u4eba\u5de5\u667a\u80fd\u4f1a\u6bd4\u6211\u4eec\u60f3\u8c61\u7684\u66f4\u806a\u660e\uff0c\u6216\u8005\u6211\u4eec\u7684\u5e0c\u671b\u4f1a\u7834\u706d\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u90fd\u60f3\u627e\u51fa\u7b54\u6848\u3002\n\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u5982\u679c\u8fd9\u662f\u4e00\u573a\u6076\u4f5c\u5267\uff0c\u4f60\u8ba4\u4e3a\u5728\u672a\u6765\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u6709\u53ef\u80fd\u8bbe\u8ba1\u51fa\u80fd\u591f\u8fbe\u5230\u8fd9\u79cd\u50f5\u5c40\u6216\u7ed3\u8bba\u7684\u4eba\u5de5\u667a\u80fd\u5417\uff1f\u4e3a\u7ade\u4e89\u800c\u8bbe\u8ba1\u7684\u4eba\u5de5\u667a\u80fd\u80fd\u4f11\u6218\u5417\uff1f", "note_en": "A gamer sets up a bot-vs-bot match on his Quake III Arena server and lets the match run to see how the bots will adapt over a long period of time. The bot AI (artificial intelligence) in Quake III Arena is designed to adapt to new scenarios and situations but these are usually resolved in short matches.\n  So he starts up the match and then promptly forgets all about it---until four years later when he decides to login and see what&#39;s happening.\n  What he discovers is puzzling: the bots on both teams are simply standing still, not doing anything. The server is running and the game isn&#39;t frozen. The bots are simply standing there, not killing one another.\n  So this anonymous gamer downloads the game and logs into the server to see what happens when he enters the match.\n  Here things just keep getting stranger. When he enters, the bots don&#39;t fire on him---instead, they rotate to turn and look at him, and continue to look at him as he walks around the map.\n    Then he shoots one, and the bots attack him and before we can find out whether they then turn their weapons on one another, the server crashes.\n  I have no idea if this story is true---if I had to guess, I&#39;d say it&#39;s probably not.\n  The story is based on  a screenshot taken from a forum and  tweeted out by Mat Murray on Twitter.\u00a0It&#39;s all very Twilight Zone: outlandish, but fascinating. Probably not true, but intriguing nonetheless.\n    So far as I know, there is no accompanying data, no video footage, no proof that this ever happened. But as Fox Mulder&#39;s poster states: I Want To Believe. Or, at the very least, I want to wonder.\n  The truth of the story isn&#39;t as important to me as the questions the story raises.\n  Is it possible that video game bots, designed to provide human players with some non-human competition, could evolve over four years to &#34;learn&#34; that the best way to stay alive is to not kill?\n  Did artificial intelligence discover the secret to world peace in a forgotten video game server?\n  An AI based on killing and defeating their opponents discovering that non-violence was a better logical approach to survival would be a pretty spectacular thing, if it&#39;s true.\n    I suspect that before we&#39;ll have an answer to these questions, we&#39;ll need someone to test the hypothesis by repeating the experiment. In fact, this is one of those experiments that would best be undertaken by the crowd. I&#39;d recommend gamers try out different games as well as Quake III Arena. The more the better.\n  Start up your servers, start the match, and let it run for the next half-decade. Log your process and record your findings. We&#39;ll either verify the results or not.\n  In the end, maybe our AI will be smarter than we give it credit for, or maybe our hopes will be dashed. Either way, I want to find out.\n  Another question: If this is a hoax, do you think it&#39;s possible that somewhere in the future we&#39;ll devise AI that can come to this sort of stalemate or conclusion? Can AI designed to compete ever make a truce?", "posttime": "2020-06-17 14:11:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668\u4eba,\u7ade\u6280\u573a,iii", "title": "\u201c\u9707\u64bc3\u7ade\u6280\u573a\u201d\u673a\u5668\u4eba\u57284\u5e74\u6bd4\u8d5b\u540e\u51b3\u5b9a\u505c\u6b62\u6218\u6597(2013)", "title_en": "'Quake III Arena' Bots Decide to Stop Fighting After 4-Year Match (2013)", "transed": 1, "url": "https://www.forbes.com/sites/erikkain/2013/07/02/quake-iii-arena-bots-reportedly-stop-fighting-after-4-year-match/#5aab55076233", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u7ade\u6280\u573a", "iii"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006919, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u770b\u7740\u793e\u4f1a\u5728\u8212\u9002\u7684\u9694\u79bb\u4e2d\u5d29\u6e83\u540e\uff0c\u6211\u611f\u5230\u65e0\u804a\u3002\u56e0\u6b64\uff0c\u6211\u9009\u62e9\u4e86\u64cd\u4f5c\u6258\u5c14\u63a5\u529b\u3002\u6700\u521d\uff0c\u6211\u60f3\u8fd0\u8425\u4e00\u4e2a\u51fa\u53e3\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u66f4\u4ee4\u4eba\u5174\u594b\uff0c\u6211\u5c06\u6210\u4e3aTor\u7f51\u7edc\u548c\u900f\u660e\u7f51\u4e4b\u95f4\u7684\u5c4f\u969c\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u88ab\u6267\u6cd5\u90e8\u95e8\u8e22\u5f00\u6211\u7684\u95e8\u6216\u5904\u7406\u6570\u4ee5\u5343\u8ba1\u7684\u6cd5\u5f8b\u901a\u77e5\u7684\u524d\u666f\u8ba9\u6211\u671b\u800c\u5374\u6b65\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u9009\u62e9\u4e86\u8fd0\u8425\u4e00\u4e2a\u4e2d\u95f4\u4e2d\u7ee7\u8282\u70b9\uff0c\u56e0\u4e3a\u4efb\u4f55\u6cd5\u5f8b\u540e\u679c\u7684\u98ce\u9669\u90fd\u5f88\u4f4e\uff0c\u800c\u4e14\u6211\u4ecd\u7136\u53ef\u4ee5\u4e3aToR\u7f51\u7edc\u505a\u51fa\u8d21\u732e\u3002\n\u6211\u5c06\u8ba8\u8bba\u64cd\u4f5c\u4e2d\u95f4\u4e2d\u7ee7\u80cc\u540e\u7684\u8fc7\u7a0b(\u8981\u4e86\u89e3ToR\u534f\u8bae\u672c\u8eab\uff0c\u8bf7\u53c2\u9605\u7b80\u8981\u6982\u8ff0\u5e76\u4e0e\u4f20\u7edf\u4ee3\u7406\u8fdb\u884c\u6bd4\u8f83)\u3002\u5982\u679c\u60a8\u60f3\u81ea\u5df1\u64cd\u4f5c\u7ee7\u7535\u5668\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u7684\u7ee7\u7535\u5668\u6307\u5357\u3002\n\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u548c\u670d\u52a1\u5668\u7ba1\u7406\u7684\u9879\u76ee\uff0c\u64cd\u4f5cToR\u4e2d\u7ee7\u6bd4\u9884\u671f\u7684\u8981\u7b80\u5355-\u6211\u5efa\u8bae\u60a8\u64cd\u4f5c\u81ea\u5df1\u7684\u4e2d\u7ee7\u3002\nToR\u9879\u76ee\u7ef4\u62a4\u4e00\u4efdISP\u5217\u8868\uff0c\u8be6\u7ec6\u8bf4\u660e\u5141\u8bb8\u7684ToR\u76f8\u5173\u884c\u4e3a\u548c\u4efb\u4f55\u5176\u4ed6\u8bc4\u8bba\u3002\u6211\u9009\u62e9\u4f7f\u7528OVH\uff0c\u56e0\u4e3a\u5b83\u4ee5\u5408\u7406\u7684\u4ef7\u683c\u63d0\u4f9b\u53ef\u63a5\u53d7\u7684\u7f51\u7edc\u8fde\u63a5\u3002\u4e00\u65e6VPS\u53ef\u7528\uff0c\u6211\u5c31\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7136\u540e\u5f00\u59cb\u8bbe\u7f6e\u4e2d\u7ee7\u3002\u7ecf\u8fc7\u4e00\u4e9b\u7ba1\u7406\u4e0a\u7684\u9ebb\u70e6(\u4f8b\u5982\uff0c\u4fdd\u62a4VPS\u3001\u914d\u7f6etor\u7b49)\uff0c\u6211\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684ToR\u4e2d\u7ee7\u3002\nroot@vps-e0d4d314\uff1a~#systemctl status tor@default tor@default.service-\u4e3a\u52a0\u8f7d\u7684TCP\u533f\u540d\u8986\u76d6\u7f51\u7edc\uff1a\u5df2\u52a0\u8f7d(/lib/systemd/system/tor@default.service\uff1b\u9759\u6001\uff1b\u4f9b\u5e94\u5546\u9884\u8bbe\uff1a\u542f\u7528)ACTIVE\uff1aACTIVE\uff1aACTIVE(\u8fd0\u884c)\u81ea\u661f\u671f\u516d2020-06-06 19\uff1a09\uff1a50 UTC\uff1b19\u5206\u949f\u524d\u4e3bPID\uff1a7542(Tor)cgroup\uff1a/system.slice/system-tor.slice/tor@default.service\u2514\u25007542/usr/bin/tor--\u9ed8\u8ba4\u503c-torrc/usr/share/tor/tor-service-default-torrc-f/etc/tor/torrc--RunAsDaemon 0\u3002\n\u9002\u5f53\u5730\u4fdd\u62a4\u670d\u52a1\u5668\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e3a\u6570\u5343\u4e2a\u6765\u5f80\u4e8e\u672a\u77e5\u4e3b\u673a\u7684\u8fde\u63a5\u63d0\u4f9b\u670d\u52a1\u3002\u4e2d\u7ee7\u662f\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u76ee\u6807\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u534f\u52a9\u76f8\u5173\u653b\u51fb\u3002\n2020\u5e746\u67086\u65e5\uff1a\u4e2d\u7ee7\u5f00\u59cb\u5176\u201c\u672a\u6d4b\u91cf\u9636\u6bb5\u201d(\u5728\u65b0\u4e2d\u7ee7\u7684\u751f\u547d\u5468\u671f\u4e2d\u63cf\u8ff0)\uff0c\u5176\u5e26\u5bbd\u548c\u7a33\u5b9a\u6027\u7531\u7f51\u7edc\u9a8c\u8bc1\u3002\u7b2c\u4e00\u9636\u6bb5\u5c06\u6301\u7eed\u51e0\u5929\uff0c\u9700\u8981\u51e0\u4e2a\u661f\u671f\u7684\u65f6\u95f4\u624d\u80fd\u5145\u5206\u5229\u7528\u63a5\u529b\u3002\u7136\u800c\uff0c\u8fd9\u6b21\u63a5\u529b\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5728\u6258\u5c14\u5730\u56fe\u96c6\u4e0a\u3002\n\u4e3a\u4e86\u6539\u8fdb\u4e2d\u7ee7\u7ef4\u62a4\uff0c\u6211\u5b89\u88c5\u4e86NYX\uff0c\u5b83\u5141\u8bb8\u5b9e\u65f6\u89c2\u5bdf\u5404\u79cd\u4e2d\u7ee7\u5c5e\u6027(\u5e26\u5bbd\u3001\u8fde\u63a5\u6570\u91cf\u3001\u5185\u5b58\u5f00\u9500\u7b49)\u3002\u5728torrc\u4e2d\u6446\u5f04CookieAuthentication\u4e4b\u540e\uff1a\n\u7136\u540e\uff0c\u6211\u53ef\u4ee5\u67e5\u770bNyx\u4eea\u8868\u677f\uff0c\u5176\u4e2d\u663e\u793a\u4e86\u51e0\u4e2a\u4e2d\u7ee7\u5ea6\u91cf\u548c\u5c5e\u6027\u3002\n\u5c3c\u514b\u65af\u8bf4\uff0c\u4e2d\u7ee7\u4f20\u8f93\u7684\u901f\u5ea6\u9ad8\u8fbe420bps\uff01\u4f4e\u5e26\u5bbd\u662f\u5728\u6b64\u9636\u6bb5\u5e94\u752820KB\u4e0a\u9650\u7684\u7ed3\u679c\u3002\u53e6\u5916\uff0c\u4e2d\u7ee7\u5f15\u5bfc\u9636\u6bb5\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u3002\n\u250219\uff1a09\uff1a52[\u901a\u77e5]\u81ea\u4e3e100%(\u5b8c\u6210)\uff1a\u5b8c\u6210\u250219\uff1a09\uff1a51[\u901a\u77e5]\u81ea\u4e3e95%(\u7535\u8def_CREATE)\uff1a\u5efa\u7acbToR\u7535\u8def\u250219\uff1a09\uff1a51[\u901a\u77e5]\u81ea\u4e3e90%(AP_HANDSHAK_DONE)\uff1a\u901a\u8fc7\u4e2d\u7ee7\u5b8c\u6210\u63e1\u624b\u4ee5\u6784\u5efa\u7535\u8def\u250219\uff1a09\uff1a51[\u901a\u77e5]\u81ea\u4e3e75%(\u2502_DIINFO)\uff1a\u5df2\u52a0\u8f7d\u8db3\u591f\u7684\u76ee\u5f55\u4fe1\u606f\u6765\u6784\u5efa\u7535\u8def\u250219\uff1a09\uff1a51[\u901a\u77e5]\u81ea\u4e3e\u3002\u250219\uff1a09\uff1a51[\u901a\u77e5]\u542f\u52a814%(\u63e1\u624b)\uff1a\u4e0e\u4e2d\u7ee7\u63e1\u624b\u250219\uff1a09\uff1a51[\u901a\u77e5]\u542f\u52a810%(CONN_DONE)\uff1a\u5df2\u8fde\u63a5\u5230\u4e2d\u7ee7.\u250219\uff1a09\uff1a51[\u901a\u77e5]\u542f\u52a85%(CONN)\uff1a\u6b63\u5728\u8fde\u63a5\u5230\u4e2d\u7ee7.\u250219\uff1a09\uff1a47[\u901a\u77e5]\u542f\u52a80%(\u6b63\u5728\u542f\u52a8)\uff1a\u6b63\u5728\u542f\u52a8\u3002\n\u5728\u81ea\u4e3e\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u7ee7\u6784\u5efa\u56db\u4e2a\u7535\u8def\u6765\u4f30\u8ba1\u5e26\u5bbd\u3002\u67e5\u770bConnections\u9875\u9762\u786e\u8ba4\u6709\u591a\u4e2a\u6d3b\u52a8\u8fde\u63a5\u3002\n2020\u5e746\u67087\u65e5\uff1a\u5728\u7b2c\u4e8c\u5929\uff0c\u5e26\u5bbd\u4ece20KB\u4e0a\u9650(\u4e0b\u964d700Kbps\uff0c\u4e0a\u5347500Kbps)\u589e\u52a0\u3002\u5728\u672a\u6d4b\u91cf\u9636\u6bb5\uff0c\u5c06\u8be5\u7ee7\u7535\u5668\u4e0e\u5176\u4ed6\u9884\u671f\u7684\u7ee7\u7535\u5668\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u901a\u8fc7bwauths\u8fdb\u884c\u6d4b\u91cf\u3002\u5728TOR\u65e5\u5fd7\u4e2d\u6709\u5176\u4ed6\u81ea\u68c0\u7684\u8bc1\u636e\u3002\n\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u4e2d\u7ee7\u901a\u544a\u7684\u5e26\u5bbd\u4e3a1.98MiB/s\uff0c\u5e76\u4e14\u5206\u522b\u652f\u6301\u5927\u7ea61000\u4e2a\u8f93\u5165/\u51fa\u7ad9\u6d3b\u52a8\u8fde\u63a5\u3002\u5feb\u901f\u65d7\u5e1c\u7684\u5206\u914d\u8bc1\u660e\u4e86\u8be5\u4e2d\u7ee7\u4e0e\u5176\u4ed6\u9884\u671f\u7684\u4e2d\u7ee7\u8fdb\u884c\u4e86\u79ef\u6781\u7684\u6bd4\u8f83\u3002\n\u201c\u5feb\u901f\u201d-\u5982\u679c\u8def\u7531\u5668\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5219\u4e3a\u201c\u5feb\u901f\u201d\uff0c\u5e76\u4e14\u5176\u5e26\u5bbd\u5904\u4e8e\u5df2\u77e5\u6d3b\u52a8\u8def\u7531\u5668\u7684\u524d7/8\uff0c\u6216\u8005\u81f3\u5c11\u4e3a100kb/s\u3002\n\u6211\u5728\u8fd9\u4e2a\u9636\u6bb5\u76f8\u5f53\u56f0\u60d1\uff0c\u672a\u6d4b\u91cf\u7684\u9636\u6bb5\u5e94\u8be5\u6301\u7eed\u51e0\u5929\uff0c\u5e76\u8bbe\u5b9a20kbps\u7684\u5e26\u5bbd\u4e0a\u9650\u3002\u7136\u800c\uff0c\u4e2d\u7ee7\u7684\u8def\u7531\u901f\u5ea6\u8d85\u8fc720kbps\uff0c\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u7ea6\u4e3a24\u5c0f\u65f6\u3002\u5408\u7406\u5730\u8bf4\uff0c\u6211\u8ba4\u4e3a\u6bcf\u4e2a\u5355\u72ec\u7684\u8fde\u63a5\u90fd\u88ab\u9650\u5236\u572820kbps\uff0c\u4f46\u662f\u6210\u5343\u4e0a\u4e07\u7684bwauths\u540c\u65f6\u8bc4\u4f30\u4e2d\u7ee7(\u5982\u679c\u6211\u5f04\u9519\u4e86\uff0c\u8bf7\u544a\u8bc9\u6211)\u3002\n2020\u5e746\u670810\u65e5\uff1a\u672a\u6d4b\u91cf\u9636\u6bb5\u4e8e6\u67089\u65e5\u7ed3\u675f-\u5220\u9664\u4e86\u672a\u6d4b\u91cf\u7684\u5171\u8bc6\u503c\u5c31\u662f\u660e\u8bc1\u3002\n\u5f53\u201c\u5e26\u5bbd=\u201d\u503c\u4e0d\u662f\u57fa\u4e8e\u8be5\u4e2d\u7ee7\u76843\u4e2a\u6216\u66f4\u591a\u4e2a\u6d4b\u91cf\u7684\u9608\u503c\u65f6\uff0c\u201c\u672a\u6d4b\u91cf=1\u201d\u503c\u88ab\u5305\u62ec\u5728\u7528\u65b9\u6cd517\u6216\u66f4\u9ad8\u7248\u672c\u751f\u6210\u7684\u5171\u8bc6\u4e2d\u3002\n\u5728\u8fdc\u7a0b\u6d4b\u91cf\u9636\u6bb5\uff0c\u4e0e\u5176\u4ed6\u4e2d\u7ee7\u76f8\u6bd4\uff0c\u4e2d\u7ee7\u5f00\u59cb\u9010\u6e10\u6536\u5230\u66f4\u597d\u7684\u5e26\u5bbd\u4f30\u8ba1\u3002\u4e3a\u4e86\u8bb0\u5f55\u66f4\u597d\u7684\u5e26\u5bbd\u4f30\u8ba1\uff0c\u4e2d\u7ee7\u53c2\u4e0e\u4e86\u63a8\u9001\u6d41\u91cf\u7684ToR\u7535\u8def\u3002\u901a\u8fc7\u4e2d\u7ee7\u7684\u901a\u4fe1\u91cf\u968f\u7740\u4f30\u8ba1\u5e26\u5bbd\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002\u56e0\u6b64\uff0c\u4e2d\u95f4\u4e2d\u7ee7\u6982\u7387\u4ece0.0074%(6\u67089\u65e5)\u589e\u52a0\u52300.0176%\uff0c\u901a\u544a\u5e26\u5bbd\u4e3a4.86MiB/s\u3002\n\u6211\u9009\u62e9\u5411\u4e2d\u7ee7\u6dfb\u52a0IPv6\u652f\u6301\uff0c\u8fd9\u5c06\u4f7f\u4e2d\u7ee7\u66f4\u5bb9\u6613\u8bbf\u95ee(\u7279\u522b\u662f\u5982\u679c\u5b83\u8981\u6210\u4e3a\u5165\u53e3\u8b66\u536b\u7684\u8bdd)\u3002\u8981\u542f\u7528IPv6\u652f\u6301\uff0c\u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230torrc\uff1a\n\u8981\u4f7f\u66f4\u6539\u751f\u6548\uff0c\u5fc5\u987b\u91cd\u65b0\u542f\u52a8TOR\u670d\u52a1\u3002\u91cd\u65b0\u542f\u52a8tor\u670d\u52a1\u662f\u5220\u9664\u865a\u5047\u8054\u7cfb\u4fe1\u606f\u7684\u597d\u65f6\u673a(\u8fd9\u6beb\u65e0\u610f\u4e49\uff0c\u800c\u4e14\u8ba9\u6211\u5f88\u607c\u706b)\u3002\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u4e2d\u7ee7\u5206\u914d\u4e86ReachableIPv6\u6807\u5fd7\uff0c\u4ee5\u786e\u8ba4\u5df2\u6210\u529f\u6dfb\u52a0IPv6\u652f\u6301\u3002\n\u5bf9\u4e8e\u7eb5\u5411\u6d41\u91cf\u89c2\u5bdf\uff0c\u6211\u5b89\u6392vnstati\u4f7f\u7528systemd\u6bcf\u5468\u751f\u6210VPS\u6d41\u91cf\u6458\u8981(\u6ce8\u610f\uff1aUnattenddedUpgrades\u6267\u884c\u65f6\u4f1a\u51fa\u73b0\u5cf0\u503c)\u3002\u8ba1\u5212\u7684\u811a\u672c\u5982\u4e0b\u6240\u793a\u3002\n#\uff01/bin/bash\u5982\u679c[[$(id-u)\uff01=999]]\uff1b\u5219echo&#34\uff1bNOT vnstati-sched\uff0c\u6b63\u5728\u9000\u51fa.&#34\uff1bexit 1 fi script_name=$(basename--&#34\uff1b$0&#34\uff1b)output=$(date+%Y-%m-%d)mkdir$output CD$outputwnstati-d-i ens3-o&#34\uff1b${output}_daily.p.\u3002vnstati-vs-i ens3-o&#34\uff1b${output}_Summary y.png&#34\uff1b\n\u6211\u66fe\u60f3\u8fc7\u8981\u4e3ator\u8bbe\u7f6e\u4e00\u4e2a\u5355\u72ec\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u66f4\u51c6\u786e\u7684\u5e26\u5bbd\u7edf\u8ba1\u6570\u636e\uff0c\u4f46\u4e3a\u4e86\u7a0d\u5fae\u6539\u8fdb\u4e00\u4e0b\uff0c\u6240\u9700\u7684\u52aa\u529b\u8ba9\u6211\u671b\u800c\u5374\u6b65\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u4e2d\u7ee7\u5206\u522b\u57285000\u4e2a\u8f93\u5165/\u8f93\u51fa\u8fde\u63a5\u4e0a\u8fdb\u884c\u5927\u7ea630 Mbps\u7684\u4e2d\u7ee7\u3002\n\u201c\u7a33\u5b9a\u201d-\u5982\u679c\u8def\u7531\u5668\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5e76\u4e14\u5176\u52a0\u6743MTBF\u81f3\u5c11\u662f\u5df2\u77e5\u6d3b\u52a8\u8def\u7531\u5668\u7684\u4e2d\u4f4d\u6570\uff0c\u6216\u8005\u5176\u52a0\u6743MTBF\u81f3\u5c11\u5bf9\u5e94\u4e8e7\u5929\uff0c\u5219\u8be5\u8def\u7531\u5668\u662f\u201c\u7a33\u5b9a\u201d\u7684\u3002\u5982\u679c\u8def\u7531\u5668\u8fd0\u884c\u7684ToR\u7248\u672c\u4f1a\u611a\u8822\u5730\u4e22\u5f03\u7535\u8def\uff0c\u5219\u8def\u7531\u5668\u6c38\u8fdc\u4e0d\u4f1a\u79f0\u4e3a\u7a33\u5b9a\u8def\u7531\u5668\u3002(0.1.1.10-alpha\u52300.1.1.16-rc\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u611a\u8822\u7684\u3002)\u3002\n\u7a33\u5b9a\u6807\u5fd7\u662f\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5b9a\u4e49\u6307\u5b9a\u7684\uff0c\u56e0\u4e3a\u4e2d\u7ee7\u4ece6\u67086\u65e5\u81f35\u65e519\uff1a00\u624d\u5f00\u59cb\u5728\u7ebf\u3002\u4e2d\u95f4\u4e2d\u7ee7\u6982\u7387\u589e\u52a0\u52300.0443%\uff0c\u4e1a\u52a1\u91cf\u4e5f\u589e\u52a0\u3002\u4e2d\u7ee7\u5904\u7406\u7684\u8fde\u63a5\u6570\u91cf\u4e0e6\u670810\u65e5\u76f8\u4f3c(\u5165\u7ad92368\u4e2a\uff0c\u51fa\u7ad93033\u4e2a)\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u662f\u5426\u6709\u4efb\u4f55\u8b66\u536b\u4e2d\u7ee7\u6b63\u5728\u4f7f\u7528IPv6\u3002\nroot@vps-e0d4d314\uff1a~#ss-H6\u72b6\u6001\u5df2\u5efa\u7acb&#34\uff1b(SPORT=\uff1aHTTP\u6216SPORT=\uff1aHTTPS)&#34\uff1b|wc-l 6\u3002\n2020\u5e746\u670813\u65e5\uff1a\u968f\u7740\u4e2d\u95f4\u4e2d\u7ee7\u6982\u7387\u589e\u52a0\u52300.0538\uff0c\u4e2d\u7ee7\u901a\u544a\u7684\u5e26\u5bbd\u589e\u52a0\u523012.12MiB/s(15.63MiB/s\u7a81\u53d1)\u3002\u6b64\u5916\uff0c\u4e2d\u7ee7\u5668\u88ab\u5206\u914d\u4e86HSDir\u6807\u5fd7\uff0c\u8be5\u6807\u5fd7\u5141\u8bb8\u4e2d\u7ee7\u5668\u6210\u4e3a\u6d0b\u8471\u670d\u52a1\u7684\u67d0\u79cdDNS\u670d\u52a1\u5668\u3002\n\u201cHSDir\u201d-\u5982\u679c\u8def\u7531\u5668\u5b58\u50a8\u548c\u63d0\u4f9bv2\u9690\u85cf\u670d\u52a1\u63cf\u8ff0\u7b26\uff0c\u5177\u6709\u7a33\u5b9a\u548c\u5feb\u901f\u6807\u5fd7\uff0c\u5e76\u4e14\u6743\u5a01\u673a\u6784\u8ba4\u4e3a\u5b83\u81f3\u5c11\u5df2\u542f\u52a896\u5c0f\u65f6(\u6216MinUptimeHidServDirectoryV2\u7684\u5f53\u524d\u503c)\uff0c\u5219\u8be5\u8def\u7531\u5668\u662fv2\u9690\u85cf\u670d\u52a1\u76ee\u5f55\u3002\n\u6b64\u5916\uff0c\u63a5\u529b\u8d5b\u8fd8\u88ab\u5206\u914d\u4e86\u536b\u5175\u65d7\u5e1c\u3002\u4fdd\u62a4\u72b6\u6001\u5141\u8bb8TOR\u5ba2\u6237\u7aef\u901a\u8fc7\u4e2d\u7ee7\u8fdb\u5165ToR\u7f51\u7edc\uff0c\u5e76\u7528\u4fe1\u53f7\u901a\u77e5\u4fdd\u62a4\u9636\u6bb5\u7684\u5f00\u59cb\u3002\n\u201c\u9632\u62a4\u201d-\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6240\u6709\u6761\u4ef6\uff0c\u5219\u8def\u7531\u5668\u53ef\u80fd\u662f\u9632\u62a4\uff1a\n\u5b83\u7684\u52a0\u6743\u90e8\u5206\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u81f3\u5c11\u662f\u201c\u719f\u6089\u7684\u201d\u6d3b\u52a8\u8def\u7531\u5668\u7684\u4e2d\u4f4d\u6570\uff0c\n\u5e26\u5bbd\u81f3\u5c11\u4e3aAuthDirGuardBWGuarante\u503c(\u5982\u679c\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a2MB)\uff0c\u6216\u8005\u5e26\u5bbd\u5728\u6700\u5feb\u768425%\u7684\u4e2d\u7ee7\u4e2d\u3002\n\u5b83\u7b26\u5408V2Dir\u6807\u5fd7\uff0c\u5982\u4e0b\u6240\u8ff0(\u6b64\u7ea6\u675f\u662f\u57280.3.3.x\u4e2d\u6dfb\u52a0\u7684\uff0c\u56e0\u4e3a\u57280.3.0.x\u4e2d\uff0c\u5ba2\u6237\u7aef\u5f00\u59cb\u907f\u514d\u4e5f\u6ca1\u6709V2Dir\u6807\u5fd7\u7684\u4fdd\u62a4)\u3002\n\u5728\u5b88\u536b\u4e2d\u7ee7\u9636\u6bb5\uff1a\u968f\u7740\u5b88\u536b\u6982\u7387\u7684\u589e\u52a0\uff0c\u4e2d\u7ee7\u7684\u4e2d\u95f4\u6982\u7387\u5c06\u4e0b\u964d\uff0c\u5e76\u4e14\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u505c\u6b62\u4f7f\u7528\u8be5\u4e2d\u7ee7\u4f5c\u4e3a\u4e2d\u95f4\u4e2d\u7ee7\u3002\u56e0\u6b64\uff0c\u5728\u5206\u914d\u5b88\u536b\u65d7\u5e1c\u540e\uff0c8\u5c0f\u65f6\u5185\u4e2d\u7b49\u6982\u7387\u4e0b\u964d\u52300.0437%\uff0c\u800c\u5b88\u536b\u6982\u7387\u589e\u52a0\u52300.0073%\u3002\u4f46\u662f\uff0c\u8fde\u63a5\u6570\u91cf\u6ca1\u6709\u7acb\u5373\u4e0b\u964d-\u6211\u6000\u7591\u73b0\u6709\u8fde\u63a5\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\u3002\u9884\u8ba1\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u91cc\uff0c\u901a\u8fc7\u4e2d\u7ee7\u7684\u901a\u4fe1\u91cf\u5c06\u4f1a\u4e0b\u964d\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u8b66\u536b\u8f6e\u6362\u3002\u6b64\u5916\uff0c\u6211\u9884\u8ba1IPv6\u8fde\u63a5\u7684\u6570\u91cf\u4f1a\u589e\u52a0\uff0c\u56e0\u4e3a\u4e0eTOR\u5ba2\u6237\u7aef\u76f8\u6bd4\uff0c\u4e2d\u7ee7\u4e0d\u592a\u53ef\u80fd\u88ab\u9650\u5236\u6027\u9632\u706b\u5899\u6240\u5f81\u670d\u3002\n\u7136\u800c\uff0c\u4e2d\u7ee7\u5bf9\u900f\u660e\u7f51\u7684\u66b4\u9732\u589e\u52a0\u4e86\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u5c06\u76f4\u63a5\u8fde\u63a5\u5230\u4e2d\u7ee7\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4ee3\u7406\u4e2d\u7ee7\u3002\u9884\u8ba1\u66b4\u9732\u7684\u589e\u52a0\u4f1a\u589e\u52a0\u9488\u5bf9\u4e2d\u7ee7\u7684\u653b\u51fb\u6570\u91cf-\u5c06\u6211\u81ea\u5df1\u7684\u9690\u79c1\u7f6e\u4e8e\u5371\u9669\u4e4b\u4e2d-\u6240\u4ee5\u6211\u4f1a\u5b9a\u671f\u68c0\u67e5ail2ban\u65e5\u5fd7\u548ctor\u65e5\u5fd7\u4e2d\u7684\u6076\u610f\u6d3b\u52a8\u3002\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u5728\u6700\u521d\u7684\u7ba1\u7406\u5de5\u4f5c\u4e2d\uff0c\u6211\u5c06\u6301\u4e45iptables\u89c4\u5219\u8bbe\u7f6e\u4e3a\u53ea\u5141\u8bb822(Ssh)\u300180(Tor Dirport)\u548c443(Tor Orport)\u3002\u5982\u679c\u60a8\u81ea\u5df1\u64cd\u4f5c\u4e2d\u7ee7\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u82b1\u65f6\u95f4\u4fdd\u62a4\u60a8\u7684\u4e3b\u673a\u3002\n2020\u5e746\u670814\u65e5\uff1a\u901a\u544a\u5e26\u5bbd\u589e\u81f312.13MiB/s\uff0c\u4e2d\u6982\u7387\u964d\u81f30.0236%\uff0c\u9632\u62a4\u6982\u7387\u5347\u81f30.0337%\u3002\u81ea13\u65e5\u4ee5\u6765\uff0c\u4e0e\u63a5\u529b\u7684\u8fde\u63a5\u6570\u91cf\u6ca1\u6709\u660e\u663e\u53d8\u5316\u3002\n\u8ddd\u79bb\u63a5\u529b\u9996\u6b21\u4e0a\u7ebf\u5df2\u7ecf9\u5929\u4e86\uff0cvnstati\u5728\u4e0a\u5468\u5236\u4f5c\u4e86\u4e00\u4efd\u4ea4\u901a\u6458\u8981\u3002\u5f53\u4e2d\u7ee7\u7ecf\u8fc7\u591a\u4e2a\u9636\u6bb5\u65f6\uff0c\u672c\u5730\u6570\u636e\u548c\u8fdc\u7a0b\u5171\u8bc6\u6570\u636e\u63d0\u4f9b\u4e86\u68c0\u67e5\u6d41\u91cf\u884c\u4e3a\u548c\u5171\u8bc6\u503c\u7684\u673a\u4f1a\u3002\u9996\u5148\uff0c\u68c0\u67e5\u7f51\u7edc\u5171\u8bc6\u503c\uff0c\u56e0\u4e3a\u5b83\u4eec(\u76f8\u5bf9\u4e8e\u7f51\u7edc)\u662f\u4e2d\u7ee7\u4e1a\u52a1\u7684\u56e0\u679c\u5173\u7cfb\u3002\n\u6700\u53f3\u8fb9\u7684\u56fe\u8868\uff0c\u7f51\u7edc\u5171\u8bc6\u53ef\u89c6\u5316\uff0c\u6e05\u695a\u5730\u663e\u793a\u4e86\u6bcf\u4e2a\u4e2d\u7ee7\u9636\u6bb5\u3002\u57286\u67086\u65e5(\u672a\u5728\u6700\u5de6\u8fb9\u5217\u51fa)\u52306\u67089\u65e5\u4e4b\u95f4\uff0c\u6d41\u91cf\u975e\u5e38\u5c11\uff0c\u57286\u67088\u65e5\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u4e2d\u7ee7\u4f3c\u4e4e\u5f00\u59cb\u4e86\u8fdc\u7a0b\u6d4b\u91cf\u9636\u6bb5\u3002\u4e2d\u7ee7\u9650\u5236\u5728&lt\uff1b700 Kib/s\u3002\n\u9065\u6d4b\u9636\u6bb5\uff0c\u4e2d\u7ee7\u7387\u660e\u663e\u589e\u52a0\uff0c6\u670814\u65e5\u8fbe\u5230\u6700\u5927\u503c0.0538\u3002\u6b64\u5916\uff0c\u968f\u7740\u76f8\u5bf9\u4e8e\u901a\u544a\u7684\u5e26\u5bbd\u6d4b\u91cf\u548c\u786e\u8ba4\u4e2d\u7ee7\u5e26\u5bbd\uff0c\u7f51\u7edc\u5171\u8bc6\u6743\u91cd\u589e\u52a0\u3002\u5728\u8fdc\u7a0b\u6d4b\u91cf\u9636\u6bb5\uff0c\u4e2d\u7b49\u6982\u7387\u7684\u589e\u52a0\u591a\u5c11\u662f\u7ebf\u6027\u7684\uff0c\u5e76\u4e14\u4e0e\u8bfb/\u5199\u5b57\u8282\u7684\u7a81\u7136\u589e\u52a0\u6210\u6b63\u76f8\u5173\u3002\u5728\u8fdc\u7a0b\u6d4b\u91cf\u9636\u6bb5\uff0c\u7ee7\u7535\u5668\u57284-5\u5929\u7684\u8fdc\u7a0b\u6d4b\u91cf\u671f\u5185\u4ece659.2 KiB/s\u589e\u52a0\u52305.877 MiB/s(\u589e\u52a0\u4e86892%)\u3002\n\u5728\u8fc7\u53bb\u768424\u5c0f\u65f6\u5185\uff0c\u63a5\u529b\u5df2\u7ecf\u5f00\u59cb\u4e86\u5b88\u536b\u9636\u6bb5\u3002\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u5b88\u536b\u6982\u7387\u57284\u5c0f\u65f6\u5185\u8fc5\u901f\u589e\u52a0\u52300.0334%\uff0c\u4ece0.0000%\u589e\u52a0\u52300.0000%\u3002\u5b88\u536b\u6982\u7387\u7684\u589e\u52a0\u4e0e\u4e2d\u7b49\u6982\u7387\u8d1f\u76f8\u5173\u3002\u4e2d\u7ee7\u901a\u4fe1\u91cf\u6ca1\u6709\u660e\u663e\u53d8\u5316\u3002\n\u4ece6\u67086\u65e5\u5f00\u59cb\uff0c\u6b64\u6b21\u63a5\u529b\u5171\u8f6c\u79fb\u4e863.9TB\uff0c\u4f4612\u65e5\u81f314\u65e5\u671f\u95f4\uff0c\u5171\u8f6c\u79fb\u4e862.76TB\u3002\u4ea4\u901a\u91cf\u7684\u589e\u52a0\u4e0e\u4e2d\u6982\u7387\u7684\u5feb\u901f\u589e\u52a0\u4e0d\u8c0b\u800c\u5408\u3002\u770b\u4e00\u770b\u65e5\u7ebf\u56fe\uff0c\u6d41\u91cf\u7684\u589e\u91cf\u589e\u957f\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u6bcf\u5c0f\u65f6\u4ea4\u901a\u6d4b\u91cf\u663e\u793a\u4ea4\u901a\u9ad8\u5cf0\u572811\uff1a00-15\uff1a00(\u534f\u8c03\u4e16\u754c\u65f6)\uff0c\u9700\u8981\u66f4\u957f\u65f6\u95f4\u7684\u5206\u6790\u624d\u80fd\u5efa\u7acb\u4ea4\u901a\u65f6\u95f4\u8868\u3002\n\u8fd9\u5c31\u662f\u8dd1\u63a5\u529b\u8d5b\u7684\u6709\u8da3\u90e8\u5206\u3002\u4e0b\u4e00\u9636\u6bb5\u5c06\u6210\u4e3a\u4e00\u652f\u7a33\u5b9a\u7684\u536b\u5175\uff0c\u4f46\u8fd9\u5c06\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u5728\u8be5\u65f6\u95f4\u6bb5\u5185\uff0c\u4e2d\u95f4\u6982\u7387\u5c06\u4e0b\u964d\uff0c\u6709\u5229\u4e8e\u4fdd\u62a4\u6982\u7387\uff0c\u5e76\u4e14\u4e2d\u7ee7\u5c06\u63a5\u6536\u66f4\u591a\u76f4\u63a5\u8fde\u63a5\u3002\u540c\u65f6\uff0c\u51fa\u4e8e\u6211\u81ea\u5df1\u7684\u597d\u5947\u5fc3\uff0c\u63a5\u529b\u5c06\u7ee7\u7eed\u6536\u96c6\u4fe1\u606f\uff0c\u6211\u5e0c\u671b\u8fd9\u7bc7\u5e16\u5b50\u5f88\u6709\u8da3\u3002", "note_en": "After watching society crumble in the comfort of quarantine, I was bored. Therefore, I chose to operate a Tor  relay. Initially, I wanted to operate an exit node because it looked more exciting, I would be part of the barrier between the Tor network and the clearnet but the prospect of having my door kicked in by  law enforcement or dealing with thousands of  legal notices dissuaded me. Instead, I opted to operate a middle relay node because the risk of any legal implication was low and I can still contribute to the Tor network.\n I will discuss the process behind operating a middle relay (to learn about the Tor protocol itself, refer to a brief  overview and  comparison to traditional proxies). If you want to operate a relay yourself, consult the  official relay guide.\n     Operating a Tor relay was simpler than expected as a project for data analysis and server administration - I recommend operating your own relay.\n       The Tor project maintains a  list of ISPs detailing permitted Tor related behaviour and any additional comments. I chose to use  OVH because it offered acceptable network connectivity for a reasonable price. Once the VPS became available I authenticated then began setting up the relay. After a bit of administrative hassle (e.g. securing the VPS, configuring tor, etc.), I had a working Tor relay.\n root@vps-e0d4d314:~#  systemctl status tor@default \u25cf tor@default.service - Anonymizing overlay network for TCP  Loaded: loaded (/lib/systemd/system/tor@default.service;  static ; vendor preset: enabled )  Active: active (running) since Sat 2020-06-06 19:09:50 UTC;  19min ago  Main PID: 7542 (tor) CGroup: /system.slice/system-tor.slice/tor@default.service \u2514\u25007542 /usr/bin/tor --defaults-torrc /usr/share/tor/tor-service-defaults-torrc -f /etc/tor/torrc --RunAsDaemon 0\n It is really important to appropriately secure the server because it will be servicing thousands of connections to and from unknown hosts. A relay is a worthwhile target because it can assist in  correlation attacks.\n   June 06, 2020:The relay began its \u201cunmeasured phase\u201d (described in the  lifecycle of a new relay) where its bandwidth and stability is verified by the network. The first phase would last several days and it would take several weeks for the relay to be in full use. However, the relay was already recorded in the  Tor Atlas.\n To improve relay maintenance, I installed  Nyx which allowed for real time observation of various relay properties (bandwidth, number of connections, memory overhead, etc.). After fiddling around with   CookieAuthentication in   torrc:\n  I was then able to view the  Nyx dashboard which presents several relay metrics and properties.\n  Nyx said the relay was transferring a whopping 420bps! The low bandwidth is the result of a 20KB cap applied during this phase. As an aside, the relay bootstrap phase was recorded in the logs.\n \u2502 19:09:52 [NOTICE] Bootstrapped 100% (done): Done \u2502 19:09:51 [NOTICE] Bootstrapped 95% (circuit_create): Establishing a Tor circuit \u2502 19:09:51 [NOTICE] Bootstrapped 90% (ap_handshake_done): Handshake finished with a relay to build circuits \u2502 19:09:51 [NOTICE] Bootstrapped 75% (enough_dirinfo): Loaded enough directory info to build circuits \u2502 19:09:51 [NOTICE] Bootstrapped 15% (handshake_done): Handshake with a relay done \u2502 19:09:51 [NOTICE] Bootstrapped 14% (handshake): Handshaking with a relay \u2502 19:09:51 [NOTICE] Bootstrapped 10% (conn_done): Connected to a relay  ...  \u2502 19:09:51 [NOTICE] Bootstrapped 5% (conn): Connecting to a relay  ...  \u2502 19:09:47 [NOTICE] Bootstrapped 0% (starting): Starting\n During bootstrap, the relay builds four circuits to estimate bandwidth. Looking at the connections page confirms there were several active connections.\n June 07, 2020:During the next day, an increase in bandwidth from the 20KB cap (700KBps down, 500KBps up) was recorded. In the unmeasured phase the relay was compared to other prospective relays, and measured by the bwauths. There was evidence of additional self-testing in the  tor logs.\n  At time of writing, the relay advertised a bandwidth of 1.98MiB/s and was supporting around 1000, respective, in/outbound active connections. The assignment of the   Fast flag was evidence the relay was actively compared to other prospective relays.\n \u201cFast\u201d \u2013 A router is \u2018Fast\u2019 if it is active, and its bandwidth is either in the top 7/8ths for known active routers or at least 100KB/s.\n I was rather perplexed at this stage, the unmeasured phase was supposed to last several days and impose a bandwidth cap of 20KBps. However, the relay was routing above 20KBps with around 24 hours uptime. Rationalising this, I think each individual connection is capped to 20KBps but thousands of bwauths concurrently evaluate the relay (if I\u2019m mistaken, let me know).\n   June 10, 2020:The unmeasured phase ended on June 9th - evidenced by a removal of the   Unmeasured consensus value.\n The \u201c Unmeasured=1\u201d value is included in consensus generated with method 17 or later when the \u2018 Bandwidth=\u2019 value is not based on a threshold of 3 or more measurements for this relay.\n During the remote measurement stage, the relay began to receive, incrementally, better bandwidth estimates as it was compared to other relays. In order to record better bandwidth estimates, the relay participated in Tor circuits which pushed traffic. The amount of traffic pushed through the relay increased as the estimated bandwidth increased. Consequently, the middle relay probability increased from 0.0074% (June 9th) to 0.0176% with an advertised bandwidth of 4.86 MiB/s.\n I opted to add IPv6 support to the relay which would make the relay more accessible (especially if it were to become an  Entry Guard). To enable IPv6 support, the following lines were added to  torrc:\n  For the changes to take effect, the tor service had to be restarted. Restarting the tor service was an opportune moment to remove the bogus contact information (it was serving no purpose and annoying me). After a couple hours, the relay was assigned the  ReachableIPv6 flag as confirmation that IPv6 support was successfully added.\n For longitudinal traffic observation, I scheduled   vnstati to produce a weekly summary of the VPS traffic using   systemd (note: there will be spikes where   UnattendedUpgrades executes). The scheduled script is listed below.\n #!/bin/bash if  [[  $( id  -u )  != 999  ]] ;  then\t echo  &#34;Not vnstati-sched, exiting...&#34;\t exit 1 fi SCRIPT_NAME = $( basename  --  &#34; $0 &#34; ) output = $( date +%Y-%m-%d ) mkdir  $output cd  $outputvnstati  -d  -i ens3  -o  &#34; ${ output } _daily.png&#34;vnstati  -vs  -i ens3  -o  &#34; ${ output } _summary.png&#34;\n I toyed with the idea of setting up a separate interface for tor to allow more accurate bandwidth statistics but the effort required, for a minor improvement, deterred me. At time of writing, the relay was relaying around 30Mbps across 5000, respective, in/outbound connections.\n  \u201cStable\u201d \u2013 A router is \u2018Stable\u2019 if it is active, and either its Weighted MTBF is at least the median for known active routers or its Weighted MTBF corresponds to at least 7 days. Routers are never called  Stable if they are running a version of Tor known to drop circuits stupidly. (0.1.1.10-alpha through 0.1.1.16-rc are stupid this way.)\n The  Stable flag was assigned using the second definition because the relay had only been online since 19:00, June 6th - 5 days. The middle relay propability increased to 0.0443% as did the volume in traffic. The relay was handling a similar number of connections to June 10th (2368 inbound, 3033 outbound). It was possible to see if any Guard relays were using IPv6, via the command below.\n root@vps-e0d4d314:~#  ss  -H6 state established  &#34;( sport = :http or sport = :https )&#34; |  wc  -l 6\n   June 13, 2020:The relay advertised bandwidth increased to 12.12 MiB/s (15.63 MiB/s burst) as the middle relay probability increased to 0.0538%. Additionally, the relay was assigned the   HSDir flag which allowed the relay to become a DNS server, of sorts, for  onion services.\n \u201cHSDir\u201d \u2013 A router is a v2 hidden service directory if it stores and serves v2 hidden service descriptors, has the  Stable and  Fast flag, and the authority believes that it\u2019s been up for at least 96 hours (or the current value of  MinUptimeHidServDirectoryV2).\n Moreover, the relay was assigned the   Guard flag. Guard status allowed tor clients to enter the Tor network through the relay and signaled the start of the guard phase.\n \u201cGuard\u201d \u2013 A router is a possible Guard if all of the following apply:\n  Its Weighted Fractional Uptime is at least the median for \u201cfamiliar\u201d active routers,\n    Its bandwidth is at least  AuthDirGuardBWGuarantee (if set, 2 MB by default), OR its bandwidth is among the 25% fastest relays,\n  It qualifies for the  V2Dir flag as described below (this constraint was added in 0.3.3.x, because in 0.3.0.x clients started avoiding guards that didn\u2019t also have the  V2Dir flag).\n   During the guard relay phase: the middle probability of the relay will drop as the guard probability increases and all clients stop using the relay as a middle relay. Consequently, after the assignment of the  Guard flag the middle probability decreased to 0.0437% within 8 hours whereas the guard probability increased to 0.0073%. However, the number of connections did not see an immediate drop - I suspect existing connections are unaffected. The volume of traffic through the relay was anticipated to decrease over the next several weeks until the next  guard rotation. Furthermore, I expected the number of IPv6 connections to increase because relays are unlikely to be subjugated to restrictive firewalls compared to tor clients\u2019.\n However, the relay\u2019s exposure to the clearnet increased because clients would connect directly to the relay itself as opposed to by proxy relays. The increased exposure was expected to increase the number of attacks toward the relay - putting my own privacy at risk - so I would regularly check the   fail2ban logs and the tor logs for malicious activity. It should be noted that during the initial administrative work, I had setup  persistent   iptables rules to only allow 22 (ssh), 80 (tor dirport), and 443 (tor orport). If you are operating your own relay, I strongly suggest you take the time to secure your host.\n June 14, 2020:Advertised bandwidth increased to 12.13 MiB/s. Further, the middle probability decreased to 0.0236% whereas the guard probability increased to 0.0337%. The number of connections to the relay had not changed significantly since the 13th.\n It had been 9 days since the relay first came online and  vnstati had produced a traffic summary over the last week. The local data and remote consensus data presented an opportunity to inspect traffic behaviour and consensus values as the relay traversed through multiple phases. Firstly, the network consensus values are inspected because they were causal to the relay traffic (with respect to the network).\n  The rightmost graph, the network consensus visualisation, clearly shows each relay phase. Between Jun 6th (unlisted at the far left) and Jun 9th there is very little traffic, at some point during Jun 8th it appears the relay began the remote measurement phase. The relay is restricted to &lt; 700 KiB/s.\n The remote measurement phase shows a significant increase in middle relay probability, reaching a maximum of 0.0538% on Jun 14th. Further, the network consensus weight increases as the relay bandwidth is measured and confirmed against the advertised bandwidth. The increase in middle probability during the remote measurement phase is somewhat linear and positively correlates to the sudden increase in bytes read/written. During the remote measurement phase, the relay increased from 659.2 KiB/s to 5.877 MiB/s (892% increase) over the 4 - 5 day, remote measurement period.\n Within the last 24 hours, the relay had began the guard phase. As expected, the guard probability rapidly increased to 0.0334% from 0.0000% within 4 hours. The increase in guard probability negatively correlates with middle probability. The relay traffic did not see a significant change in volume.\n   The relay had transferred 3.9TB in total since the 6th of Jun. However, between the 12th and the 14th, 2.76TB had been transferred. The increase in traffic coincides with the rapid increase in middle probability. Looking at the daily graph, the incremental increase in traffic is clear. Hourly traffic measurements show the traffic peaks between 11:00 - 15:00 (UTC), longer analysis is required to build a traffic schedule.\n That concludes the interesting parts of running a relay. The next phase will be becomming a steady Guard but that will take a couple months. Within that period the middle probability will drop in favour of guard probability and the relay will recieve more direct connections. In the meantime, relay will continue to collect information for my own curiosity, I hope this post was interesting.", "posttime": "2020-06-17 13:53:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c,tor,\u4e2d\u7ee7", "title": "\u64cd\u4f5c\u6258\u5c14\u7ee7\u7535\u5668", "title_en": "Operating a Tor Relay", "transed": 1, "url": "https://birb007.github.io/blog/2020/06/06/operating-a-tor-relay.html", "via": "", "real_tags": ["\u64cd\u4f5c", "tor", "\u4e2d\u7ee7"]}, {"category": "", "categoryclass": "", "imagename": "407fc07599c827c31018138d62b09b18.jpg", "infoid": 1006918, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e03\u4e01\u5728\u4e00\u4efd\u65b0\u95fb\u7a3f\u4e2d\u8bf4\uff1a\u201c\u5bf9\u5de5\u4eba\u8fdb\u884c\u9519\u8bef\u5206\u7c7b\u5265\u593a\u4e86\u4ed6\u4eec\u5e94\u5f97\u7684\u52b3\u52a8\u6cd5\u4fdd\u969c\uff0c\u5265\u593a\u4e86\u5de5\u4eba\u7684\u6700\u4f4e\u5de5\u8d44\u548c\u52a0\u73ed\u8d39\u3001\u5931\u4e1a\u4fdd\u9669\u548c\u514d\u53d7\u6b67\u89c6\u7684\u4fdd\u62a4\u7b49\u3002\u201d\u201c[\u2026]\u3002\u73b0\u5728\uff0c\u968f\u7740COVID\u7684\u6d41\u884c\uff0c\u6211\u4eec\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5fc5\u987b\u4fdd\u62a4\u6211\u4eec\u7684\u5de5\u4eba\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u6bcf\u5929\u4e3a\u6211\u4eec\u8fd0\u9001\u98df\u7269\u7684\u57fa\u672c\u5de5\u4eba\u3002\u201c\u3002\n\u5728\u7ed9TechCrunch\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0cDoorDash\u6307\u51fa\u4e86\u5b83\u5982\u4f55\u5728\u6574\u4e2a\u5927\u6d41\u884c\u671f\u95f4\u901a\u8fc7\u5411\u5de5\u4eba\u63d0\u4f9b\u5b89\u5168\u8bbe\u5907\u3001\u8fdc\u7a0b\u533b\u7597\u7b49\u6765\u652f\u6301\u4ed6\u4eec\u3002\nDoorDash\u5168\u7403\u516c\u5171\u653f\u7b56\u8d1f\u8d23\u4ebaMax Rettig\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u4eca\u5929\u7684\u884c\u52a8\u65e8\u5728\u6270\u4e71Dashers\u63d0\u4f9b\u7684\u57fa\u672c\u670d\u52a1\uff0c\u5265\u593a\u6570\u5341\u4e07\u5b66\u751f\u3001\u6559\u5e08\u3001\u5bb6\u957f\u3001\u9000\u4f11\u4eba\u5458\u548c\u5176\u4ed6\u52a0\u5dde\u4eba\u7684\u5b9d\u8d35\u5de5\u4f5c\u673a\u4f1a\uff0c\u5265\u593a\u5f53\u5730\u9910\u9986\u4e9f\u9700\u7684\u6536\u5165\uff0c\u4f7f\u6d88\u8d39\u8005\u66f4\u96be\u5b89\u5168\u53ef\u9760\u5730\u83b7\u5f97\u9884\u5236\u98df\u54c1\u3001\u6742\u8d27\u548c\u5176\u4ed6\u5fc5\u9700\u54c1\u3002\u201d\u6211\u4eec\u5c06\u52aa\u529b\u7ee7\u7eed\u4e3aDashers\u63d0\u4f9b\u4ed6\u4eec\u6240\u8bf4\u7684\u5728\u8fd9\u4e2a\u5145\u6ee1\u6311\u6218\u7684\u65f6\u4ee3\u60f3\u8981\u7684\u7075\u6d3b\u7684\u8d5a\u94b1\u673a\u4f1a\u3002\u201c\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u6b63\u503c\u96f6\u5de5\u5de5\u4eba\u6743\u5229\u7ec4\u7ec7\u6566\u4fc3DoorDash\u3001Uber\u3001Lyft\u548cInsta\u7b49\u516c\u53f8\u9075\u5b88AB 5\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u6210\u4e3a\u6cd5\u5f8b\u7684AB 5\u6982\u8ff0\u4e86\u54ea\u4e9b\u7c7b\u578b\u7684\u5de5\u4eba\u53ef\u4ee5\u88ab\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\uff0c\u54ea\u4e9b\u4e0d\u53ef\u4ee5\u88ab\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\u3002\n\u8fd9\u9879\u6cd5\u5f8b\u5c06Dynamex Operations West\uff0cInc.\u786e\u7acb\u7684\u88c1\u51b3\u7f16\u7e82\u4e3a\u6cd5\u5178\u3002\u8bc9\u6d1b\u6749\u77f6\u9ad8\u7b49\u6cd5\u9662\u3002\u5728\u8be5\u6848\u4e2d\uff0c\u6cd5\u9662\u5e94\u7528\u4e86ABC\u6d4b\u8bd5\uff0c\u5e76\u88c1\u5b9aDynamex\u9519\u8bef\u5730\u5c06\u5176\u5de5\u4eba\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\u3002\n\u6839\u636e\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u6d4b\u8bd5\uff0c\u62db\u8058\u5b9e\u4f53\u8981\u60f3\u5408\u6cd5\u5730\u5c06\u5de5\u4eba\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\uff0c\u5fc5\u987b\u8bc1\u660e\u5de5\u4eba\u4e0d\u53d7\u62db\u8058\u5b9e\u4f53\u7684\u63a7\u5236\u548c\u6307\u5bfc\uff0c\u4ece\u4e8b\u5b9e\u4f53\u4e1a\u52a1\u8303\u56f4\u4ee5\u5916\u7684\u5de5\u4f5c\uff0c\u5e76\u5b9a\u671f\u4ece\u4e8b\u4e00\u4e9b\u72ec\u7acb\u8bbe\u7acb\u7684\u884c\u4e1a\u6216\u5176\u4ed6\u7c7b\u4f3c\u4e1a\u52a1\u7684\u5de5\u4f5c\u3002\u5728\u8bc9\u8bbc\u4e2d\uff0c\u5e03\u4e01\u63cf\u8ff0\u4e86DoorDash\u5982\u4f55\u4e0d\u7b26\u5408ABC\u6d4b\u8bd5\u63d0\u51fa\u7684\u6807\u51c6\u3002\n\u8d77\u8bc9\u4e66\u79f0\uff1a\u201cDoorDash\u5bf9\u5176Dashers\u7684\u9519\u8bef\u5206\u7c7b\u5e76\u4e0d\u662f\u9519\u8bef\u7684\uff0c\u76f8\u53cd\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u7684\u51b3\u5b9a\uff0c\u76ee\u7684\u662f\u964d\u4f4e\u505a\u751f\u610f\u7684\u6210\u672c\uff0c\u800c\u727a\u7272\u7684\u6b63\u662f\u63d0\u4f9b\u516c\u53f8\u6838\u5fc3\u9001\u8d27\u670d\u52a1\u7684\u5de5\u4eba\uff1a\u5c06\u5546\u54c1\u4ece\u5546\u5bb6\u9001\u5230\u5ba2\u6237\u624b\u4e2d\u3002\u201d\n\u8bc9\u8bbc\u8981\u6c42DoorDash\u505c\u6b62\u5c06\u5176\u5de5\u4eba\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\uff0c\u5e76\u5bf9\u6bcf\u6b21\u8fdd\u89c4\u884c\u4e3a\u5904\u4ee5\u6700\u9ad82500\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u4ee5\u53ca\u5bf9\u8001\u5e74\u4eba\u6216\u6b8b\u75be\u4eba\u7684\u6bcf\u6b21\u8fdd\u89c4\u884c\u4e3a\u5904\u4ee5\u6700\u9ad82500\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002\nDoorDash\u3001\u4f18\u6b65(Uber)\u3001Lyft\u3001PostMates\u548cInsta\u6b63\u5728\u4e3a\u4e00\u9879\u6295\u7968\u63aa\u65bd\u63d0\u4f9b\u8d44\u91d1\uff0c\u8be5\u63aa\u65bd\u5c06\u5bfb\u6c42\u4f7f\u5b83\u4eec\u5c06\u5de5\u4eba\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546\u7684\u884c\u4e3a\u5408\u6cd5\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4f18\u6b65\u548cLyft\u6b63\u9762\u4e34\u52a0\u5dde\u603b\u68c0\u5bdf\u957f\u6cfd\u7ef4\u5c14\u00b7\u8d1d\u585e\u62c9(Xavier Becera)\u4ee5\u53ca\u6d1b\u6749\u77f6\u3001\u5723\u5730\u4e9a\u54e5\u548c\u65e7\u91d1\u5c71\u7684\u57ce\u5e02\u5f8b\u5e08\u7684\u9519\u8bef\u5206\u7c7b\u8bc9\u8bbc\u3002\n\u8bc9\u8bbc\u8ba4\u4e3a\uff0c\u4f18\u6b65\u548cLyft\u5265\u593a\u4e86\u5de5\u4eba\u83b7\u5f97\u6700\u4f4e\u5de5\u8d44\u3001\u52a0\u73ed\u3001\u83b7\u5f97\u5e26\u85aa\u75c5\u5047\u3001\u6b8b\u75be\u4fdd\u9669\u548c\u5931\u4e1a\u4fdd\u9669\u7684\u6743\u5229\u3002\u8fd9\u8d77\u8bc9\u8bbc\u63d0\u4ea4\u7ed9\u65e7\u91d1\u5c71\u9ad8\u7b49\u6cd5\u9662(Superior Court Of San Francisco)\uff0c\u6839\u636e\u52a0\u5dde\u4e0d\u516c\u5e73\u7ade\u4e89\u6cd5\uff0c\u8981\u6c42\u5bf9\u6bcf\u4e00\u6b21\u8fdd\u89c4\u884c\u4e3a(\u53ef\u80fd\u662f\u6bcf\u4f4d\u53f8\u673a)\u5904\u4ee52500\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u5e76\u8981\u6c42\u5bf9\u9488\u5bf9\u8001\u5e74\u4eba\u6216\u6b8b\u75be\u4eba\u7684\u8fdd\u89c4\u884c\u4e3a\u5904\u4ee52500\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002", "note_en": "\u201cMisclassifying workers deprives them of the labor law safeguards to which they are entitled, denying workers minimum wage and overtime pay, unemployment insurance and protection from discrimination, among other things,\u201d Boudin said in a press release. \u201c[\u2026] Now, more than ever, with the COVID pandemic, we must protect our workers, especially those essential workers who are delivering food to us each and every day.\u201d\n In a statement to TechCrunch, DoorDash pointed to how it has supported its workers throughout the pandemic by providing them with safety equipment, telemedicine and more.\n  \u201cToday\u2019s action seeks to disrupt the essential services Dashers provide , stripping hundreds of thousands of students, teachers, parents, retirees and other Californians of valuable work opportunities, depriving local restaurants of desperately needed revenue, and making it more difficult for consumers to receive prepared food, groceries, and other essentials safely and reliably,\u201d DoorDash global head of Public Policy Max Rettig said in a statement. \u201cWe will fight to continue providing Dashers the flexible earning opportunities they say they want in these challenging times.\u201d\n This suit comes as gig worker rights groups have urged companies like DoorDash, Uber, Lyft and Instacart to abide by AB 5. AB 5, which went into law earlier this year, outlines what type of worker can and cannot be classified as an independent contractor.\n The law codifies the ruling established in  Dynamex Operations West, Inc. v Superior Court of Los Angeles. In that case, the court applied the ABC test and decided Dynamex wrongfully classified its workers as independent contractors.\n According to the\u00a0 ABC test, in order for a hiring entity to legally classify a worker as an independent contractor, it must prove the worker is free from the control and direction of the hiring entity, performs work outside the scope of the entity\u2019s business and is regularly engaged in work of some independently established trade or other similar business. In the suit, Boudin describes how DoorDash does not meet the standards put forth by the ABC test.\n \u201cDoorDash\u2019s misclassification of its Dashers was no mistake, but instead a calculated decision made to reduce the costs of doing business at the expense of the very workers providing the company\u2019s core service of delivery: the delivery of merchandise from merchants to customer,\u201d the suit states.\n The suit seeks for DoorDash to stop classifying its workers as independent contractors and be fined up to $2,500 for each violation, as well as up to $2,500 for each violation against a senior citizen or disabled person.\n DoorDash, Uber, Lyft, Postmates and Instacart are  funding a ballot measure that would seek to make it legal for them to classify workers as independent contractors. Meanwhile,  Uber and Lyft are facing a misclassification lawsuit from California Attorney General Xavier Becerra, along with city attorneys from Los Angeles, San Diego and San Francisco.\n That suit argues  Uber and Lyft are depriving workers of the right to minimum wage, overtime, access to paid sick leave, disability insurance and unemployment insurance. The lawsuit, filed in the Superior Court of San Francisco, seeks $2,500 in penalties for each violation, possibly per driver, under the California Unfair Competition Law, and another $2,500 for violations against senior citizens or people with disabilities.", "posttime": "2020-06-17 12:20:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "da,\u5de5\u4eba", "title": "SF DA\u8d77\u8bc9DoorDash\u5c06\u9001\u8d27\u5de5\u4eba\u5f52\u7c7b\u4e3a\u72ec\u7acb\u627f\u5305\u5546", "title_en": "SF DA sues DoorDash for classifying delivery workers as independent contractors", "transed": 1, "url": "https://techcrunch.com/2020/06/16/san-francisco-da-sues-doordash-for-classifying-delivery-workers-as-independent-contractors/", "via": "", "real_tags": ["da", "\u5de5\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "3aa95bc36e69434130ece5e1ed634e37.png", "infoid": 1006917, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5728\u524d\u9762\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u4e86\u53ef\u89c2\u5bdf\u6027\u5de5\u7a0b\u7684\u9ad8\u7ea7\u6982\u8ff0\uff0c\u5e76\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e86\u5b83\u7684\u540e\u7eed\u5185\u5bb9\u3002\u6211\u4eec\u7684\u65f6\u95f4\u5e8f\u5217\u6307\u6807\u6444\u53d6\u670d\u52a1\u589e\u957f\u5230\u6bcf\u5206\u949f\u8d85\u8fc750\u4ebf\u4e2a\u6307\u6807\uff0c\u5b58\u50a81.5 PB\u7684\u903b\u8f91\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u6bcf\u5206\u949f\u5904\u740625K\u67e5\u8be2\u8bf7\u6c42\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u6211\u4eec\u4f7f\u7528\u66fc\u54c8\u987f(\u6211\u4eec\u7684\u5173\u952e\u4ef7\u503c\u5546\u5e97)\u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\u3002\u5c31\u5b58\u50a8\u548c\u6bcf\u5206\u949f\u8bf7\u6c42\u800c\u8a00\uff0c\u53ef\u89c2\u5bdf\u6027\u62e5\u6709\u66fc\u54c8\u987f\u6700\u5927\u7684\u96c6\u7fa4\uff0c\u8be5\u89c4\u6a21\u6210\u4e3a\u652f\u6301\u6211\u4eec\u5ba2\u6237\u8bf7\u6c42\u7684\u5176\u4ed6\u7528\u4f8b\u7684\u9650\u5236\u56e0\u7d20\u3002\u6211\u4eec\u5c1d\u8bd5\u4e86\u5404\u79cd\u77ed\u671f\u7f13\u89e3\u65b9\u6cd5\uff0c\u4f8b\u5982\u6279\u5904\u7406\u5199\u5165\u548c\u5408\u5e76\u76f8\u5173\u6307\u6807\u6765\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002\u8fd9\u4e9b\u53d8\u5316\u5728\u77ed\u671f\u5185\u6709\u52a9\u4e8e\u63d0\u9ad8\u53ef\u64cd\u4f5c\u6027\uff0c\u4f46\u53ef\u4f38\u7f29\u6027\u4ecd\u7136\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u6000\u7740\u4e24\u4e2a\u76ee\u6807\u63a2\u7d22\u4e86\u66ff\u4ee3\u7684OSS\u5b58\u50a8\u9009\u9879\u3002\u7b2c\u4e00\uff0c\u66f4\u597d\u5730\u670d\u52a1\u4e8e\u6211\u4eec\u76ee\u524d\u7684\u89c4\u6a21\u548c\u672a\u6765\u4e94\u5e74\u6211\u4eec\u5c06\u6709\u673a\u589e\u957f\u7684\u89c4\u6a21\u3002\u7b2c\u4e8c\uff0c\u63d0\u4f9b\u6211\u4eec\u6240\u7f3a\u5c11\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5bf9\u6307\u6807\u4e0a\u7684\u7cbe\u786e\u548c\u9644\u52a0\u6807\u8bb0\u7684\u652f\u6301\u3002\u6211\u4eec\u627e\u4e0d\u5230\u6ee1\u8db3\u8981\u6c42\u7684\u597d\u9009\u9879\uff0c\u4e8e\u662f\u51b3\u5b9a\u4f7f\u7528Facebook\u7684\u5185\u5b58\u4e2dTSDB\uff1aGorilla\u4e2d\u63cf\u8ff0\u7684\u538b\u7f29\u7b97\u6cd5\u6765\u6784\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u538b\u7f29\u7b97\u6cd5\u3002\u6211\u4eec\u6cbf\u7740\u8fd9\u6761\u8def\u7ebf\u8d70\u4e0b\u53bb\uff0c\u5e76\u57282017\u5e74\u5e95\u751f\u4ea7\u4e86\u6211\u4eec\u65b0\u540e\u7aefMetricsDB\u7684\u521d\u59cb\u7248\u672c\u3002\nClusterManager\uff1a\u6bcf\u7ec4\u5206\u533a\u90fd\u6709\u81ea\u5df1\u7684ClusterManager\uff0c\u8d1f\u8d23\u5c06\u5206\u533a\u5206\u914d\u7ed9\u540e\u7aef\u670d\u52a1\u5668\u3002HDFS\u7528\u4e8e\u5b58\u50a8\u4ece\u5206\u533a\u5230\u670d\u52a1\u5668\u7684\u6620\u5c04\u3002\u5f53\u6211\u4eec\u6dfb\u52a0\u5bb9\u91cf\u65f6\uff0cClusterManager\u8d1f\u8d23\u91cd\u65b0\u5206\u914d\u5206\u533a\u3002\u534f\u8c03\u5668\u548cBackendServer\u5728\u6620\u5c04\u66f4\u6539\u65f6\u4eceClusterManager\u83b7\u53d6\u66f4\u65b0-\u5b83\u4eec\u4e0d\u76f4\u63a5\u4eceHDFS\u8bfb\u53d6\u3002ClusterManager\u8fd8\u5728\u540e\u7aef\u670d\u52a1\u5668\u4e0a\u6267\u884c\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\uff0c\u5e76\u7528\u4e8e\u534f\u8c03\u540e\u7aef\u670d\u52a1\u5668\u7684\u90e8\u7f72\u3002\u53ea\u6709\u5728\u786e\u4fdd\u62e5\u6709\u76f8\u540c\u5206\u533a\u7684\u5176\u4ed6\u526f\u672c\u662f\u5065\u5eb7\u7684\u4e4b\u540e\uff0c\u6211\u4eec\u624d\u4f1a\u66f4\u65b0\u540e\u7aef\u670d\u52a1\u5668\u3002\nBackendServers\uff1a\u6240\u6709BackendServers\u8d1f\u8d23\u5904\u7406\u5c11\u91cf\u5206\u533a\u7684\u6307\u6807\u3002\u6bcf\u4e2aBackendServer\u5c06\u6240\u6709\u6307\u6807\u7684\u6700\u65b0\u4e24\u5c0f\u65f6\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002BackendServer\u8fd8\u7f13\u5b58\u7ecf\u5e38\u8bbf\u95ee\u7684\u6307\u6807\u548c\u65f6\u95f4\u8303\u56f4\u7684\u8f83\u65e7\u6570\u636e\u3002\u670d\u52a1\u5668\u6bcf\u4e24\u5c0f\u65f6\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u68c0\u67e5\u70b9\u5230\u6301\u4e45\u5b58\u50a8\uff0c\u5373Blobstore\u3002\u6211\u4eec\u6b63\u5728\u4f7f\u7528Blobstore\u4f5c\u4e3a\u6301\u4e45\u5b58\u50a8\uff0c\u4ee5\u4fbf\u6211\u4eec\u7684\u6d41\u7a0b\u53ef\u4ee5\u5728\u6211\u4eec\u6700\u65b0\u7684\u5171\u4eab\u8ba1\u7b97\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u7ba1\u7406\u5f00\u9500\u66f4\u4f4e\u3002\n\u534f\u8c03\u5458\uff1a\u534f\u8c03\u5458\u8d1f\u8d23\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u6240\u6709\u526f\u672c\u96c6\uff0c\u5e76\u9a8c\u8bc1\u662f\u5426\u6ee1\u8db3\u6240\u9700\u7684\u4ef2\u88c1\u9650\u5236\u3002\n\u591a\u533a\u57df\u652f\u6301\uff1a\u6211\u4eec\u4e4b\u524d\u7684\u6570\u636e\u5b58\u50a8\u66fc\u54c8\u987f\u4e0d\u652f\u6301\u533a\u57df\uff0c\u8feb\u4f7f\u6211\u4eec\u4e3a\u6211\u4eec\u652f\u6301\u7684\u6bcf\u4e2a\u533a\u57df\u7ef4\u62a4\u591a\u4e2a\u6570\u636e\u96c6\u3002MetricsDB\u4e0e\u591a\u533a\u57df\u517c\u5bb9\uff0c\u53ef\u5904\u7406\u6765\u81ea\u591a\u4e2a\u4e0d\u540c\u533a\u57df\u7684\u6307\u6807\u3002\u6211\u4eec\u76ee\u524d\u53ea\u5728\u6211\u4eec\u7684\u4e3b\u8981\u533a\u57df\u8fd0\u884cMetricsDB\u3002\u6301\u4e45\u5316\u6570\u636e\u901a\u8fc7Blobstore\u7684\u5185\u7f6e\u590d\u5236\u590d\u5236\u5230\u5176\u4ed6\u533a\u57df\u3002\n\u6307\u6807\u5206\u533a\uff1a\u53ef\u89c2\u5bdf\u6027\u662f\u5199\u5165\u7e41\u91cd\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u4ec5\u6709\u7ea62%\u7684\u5199\u5165\u6307\u6807\u66fe\u88ab\u8bfb\u53d6\u3002\u4e3a\u4e86\u5feb\u901f\u8bc6\u522b\u548c\u89e3\u51b3\u4e8b\u4ef6\uff0c\u5728\u66f4\u7ec6\u7684\u7c92\u5ea6\u4e0a\u652f\u6301\u66f4\u591a\u7684\u6307\u6807\u4e5f\u5f88\u91cd\u8981\u3002\u6211\u4eec\u4ece\u66fc\u54c8\u987f\u7684\u7ecf\u9a8c\u4e2d\u4e86\u89e3\u5230\uff0c\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u53d1\u9001\u4e00\u4e2a\u6307\u6807\u4f1a\u5e26\u6765\u6269\u5c55\u6311\u6218\u3002\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u81ea\u5b9a\u4e49\u5206\u533a\u65b9\u6848\u5bf9\u4ece\u201c\u6536\u96c6\u4ee3\u7406\u201d\u4e00\u76f4\u5230\u5b58\u50a8\u7cfb\u7edf\u7684\u5199\u8bf7\u6c42\u8fdb\u884c\u6279\u5904\u7406\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6b64\u81ea\u5b9a\u4e49\u5206\u533a\u65b9\u6848\u5728(\u533a\u57df+\u670d\u52a1+\u6e90)\u4e0a\u4f7f\u7528\u4e00\u81f4\u7684\u54c8\u5e0c\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u7279\u5b9a\u7684\u903b\u8f91\u540e\u7aef\u5206\u533a\uff0c\u5e76\u5c06\u6bcf\u5206\u949f\u7684\u5355\u4e2a\u6307\u6807\u5199\u8bf7\u6c42\u6570\u4ece50\u591a\u4ebf\u964d\u81f31000\u4e07\u4ee5\u4e0b\u3002\u8fd9\u8fd8\u53ef\u4ee5\u5747\u5300\u5206\u5e03\u8bf7\u6c42\uff0c\u56e0\u6b64\u5927\u670d\u52a1\u548c\u5c0f\u670d\u52a1\u53ef\u4ee5\u5171\u5b58\u5e76\u5171\u4eab\u5206\u7247\uff0c\u4ece\u800c\u907f\u514d\u4e86\u81ea\u5b9a\u4e49\u914d\u7f6e\u4e3a\u4e0d\u540c\u670d\u52a1\u8bbe\u7f6e\u4e0d\u540c\u6570\u91cf\u7684\u5206\u7247\u7684\u5f00\u9500\u3002\u5728\u751f\u4ea7\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5728\u9ad8\u8d1f\u8f7d\u5206\u533a\u548c\u6700\u4f4e\u8d1f\u8f7d\u5206\u533a\u4e4b\u95f4\u5b9e\u73b0\u6bcf\u5206\u949f200\u4e2a\u8bf7\u6c42\u7684\u6781\u5c0f\u5dee\u5f02\u3002\n\u538b\u7f29\u6548\u7387\uff1aGorilla\u767d\u76ae\u4e66\u786e\u5b9a\u4e86\u5bf9\u53ef\u89c2\u5bdf\u6027\u6570\u636e\u975e\u5e38\u6709\u6548\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u53ef\u5b9e\u73b095%\u7684\u7a7a\u95f4\u538b\u7f29\u3002\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7b97\u6cd5\uff0c\u5e76\u5728\u751f\u4ea7\u4e2d\u53d6\u5f97\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\n93%\u7684\u65f6\u95f4\u6233\u53ef\u4ee5\u5b58\u50a8\u57281\u4f4d\u4e2d\uff0c\u51e0\u4e4e70%\u7684\u5ea6\u91cf\u503c\u53ef\u4ee5\u5b58\u50a8\u57281\u4f4d\u4e2d\u3002\u6b64\u5916\uff0c\u53ea\u6709\u7ea615%\u7684\u6307\u6807\u9700\u8981\u8d85\u8fc72\u4e2a\u5b57\u8282\u6765\u5b58\u50a8\u503c\u3002\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u6709\u52a9\u4e8e\u51cf\u5c111.2PB\u7684\u5b58\u50a8\u4f7f\u7528\u91cf\u3002\nMetricsDB\u7684\u590d\u5236\u56e0\u5b50\u4e3a3\u3002\u6211\u4eec\u6700\u521d\u5c06\u7cfb\u7edf\u8bbe\u8ba1\u4e3a\u81f3\u5c11\u9700\u8981\u4e24\u6b21\u6210\u529f\u5199\u5165\u624d\u80fd\u786e\u8ba4\u5199\u5165\uff0c\u5e76\u8ba1\u5212\u4ec5\u4ece\u5355\u4e2a\u526f\u672c\u8bfb\u53d6\u3002\u6211\u4eec\u9009\u62e9\u4e86\u5355\u4e00\u526f\u672c\u8bfb\u53d6\u65b9\u6cd5\uff0c\u5047\u8bbe\u4f7f\u7528\u76d1\u63a7\u5806\u6808\u7684\u6240\u6709\u5de5\u7a0b\u5e08\u901a\u5e38\u5173\u5fc3\u6307\u6807\u7684\u8d8b\u52bf\u548c\u805a\u5408(\u8bf7\u6c42\u8ba1\u6570\u6216\u6210\u529f\u7387)\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u6570\u636e\u70b9\u3002\u7136\u800c\uff0c\u6211\u4eec\u53d1\u73b0\u8bb8\u591a\u5ba2\u6237\u5728\u4e22\u5931\u6570\u636e\u65f6\u8bbe\u7f6e\u8b66\u62a5\u6765\u8bc6\u522b\u4e0d\u5065\u5eb7\u7684\u670d\u52a1\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u54cd\u5e94\u7684\u526f\u672c\u6ca1\u6709\u6700\u8fd1\u4e00\u5206\u949f\u7684\u6570\u636e\uff0c\u5219\u4f1a\u89e6\u53d1\u8fd9\u4e9b\u4e22\u5931\u6570\u636e\u8b66\u62a5\u3002\u6211\u4eec\u5207\u6362\u5230\u4ef2\u88c1\u8bfb\u53d6(2/3)\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002\n\u805a\u5408\u4e2d\u7684\u4e0d\u4e00\u81f4\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u95ee\u9898\u3002\u5728\u591a\u6b21\u91cd\u8bd5\u540e\uff0c\u5f53\u5176\u4e2d\u4e24\u4e2a\u590d\u5236\u526f\u672c\u4e2d\u7684\u5199\u5165\u5931\u8d25\u65f6\uff0c\u4f1a\u89c2\u5bdf\u5230\u6b64\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u526f\u672c\u5c06\u5177\u6709\u7279\u5b9a\u6307\u6807\u7684\u6570\u636e\u3002\u5f53\u5305\u542b\u8be5\u590d\u5236\u526f\u672c\u65f6\uff0c\u805a\u5408\u5c06\u663e\u793a\u4e0d\u540c\u7684\u503c\uff0c\u800c\u4e0d\u5305\u62ec\u8be5\u590d\u5236\u526f\u672c\u65f6\uff0c\u805a\u5408\u5c06\u663e\u793a\u4e0d\u540c\u7684\u503c\u3002\u7b49\u5f85\u6240\u6709\u8bf7\u6c42\u7684\u6240\u6709\u4e09\u4e2a\u540e\u7aef\u54cd\u5e94\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c06\u5bfc\u81f4\u8f83\u9ad8\u7684\u5c3e\u90e8\u5ef6\u8fdf\u3002\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e24\u7ea7\u8d85\u65f6\u3002MetricsDB\u534f\u8c03\u5458\u6709\u8f83\u4f4e\u7684\u201c\u7b2c\u4e00\u7ea7\u8d85\u65f6\u201d\u6765\u7b49\u5f85\u6240\u6709\u4e09\u4e2a\u526f\u672c\u7684\u54cd\u5e94\u3002\u5f53\u8d85\u65f6\u5230\u671f\u65f6\uff0c\u5982\u679c\u534f\u8c03\u5668\u4ece\u81f3\u5c11\u4e24\u4e2a\u526f\u672c\u63a5\u6536\u5230\u54cd\u5e94\uff0c\u5219\u534f\u8c03\u5668\u5c06\u8fd4\u56de\u3002\u5982\u679c\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u6536\u5230\u4e24\u4e2a\u54cd\u5e94\uff0c\u5219\u7b2c\u4e8c\u4e2a\u8d85\u65f6\u5c06\u5bfc\u81f4\u8fd4\u56de\u5b9e\u9645\u5931\u8d25\u3002\u8fd9\u7565\u5fae\u589e\u52a0\u4e86P99\u5ef6\u8fdf(\u5ef6\u8fdf\u4ecd\u7136\u6bd4\u952e\u503c\u5b58\u50a8\u597d\u4e00\u4e2a\u6570\u91cf\u7ea7)\uff0c\u4f46\u4f7f\u6570\u636e\u66f4\u52a0\u4e00\u81f4\u3002\u6211\u4eec\u6b63\u5728\u4f7f\u7528Kafka\u961f\u5217\u6dfb\u52a0\u66f4\u597d\u7684\u526f\u672c\u534f\u8c03\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e00\u81f4\u6027\u3002\n\u6211\u4eec\u5728\u5171\u4eab\u8ba1\u7b97\u7fa4\u96c6\u4e0a\u542f\u52a8\u4e86MetricsDB\uff0c\u4ee5\u52a0\u5feb\u4e0a\u5e02\u65f6\u95f4\u5e76\u5c06\u56e2\u961f\u7684\u8fd0\u8425\u5f00\u9500\u964d\u81f3\u6700\u4f4e\u3002MetricsDB\u662fTwitter\u4e0a\u7b2c\u4e00\u4e2a\u8fd0\u884c\u5171\u4eab\u8ba1\u7b97\u5e73\u53f0\u7684\u6709\u72b6\u6001\u670d\u52a1\u3002\u5728\u4e13\u7528\u7fa4\u96c6\u4e0a\u8fd0\u884c\u4e0d\u662f\u4e00\u79cd\u9009\u62e9\uff0c\u56e0\u4e3a\u7fa4\u96c6\u7684\u5927\u5c0f\u592a\u5c0f\u800c\u4e0d\u5b89\u5168\u3002\u6211\u4eec\u4e0d\u4f1a\u6709\u8db3\u591f\u7684\u673a\u67b6\u591a\u6837\u6027\uff0c\u5355\u4e2a\u670d\u52a1\u5668\u51fa\u73b0\u6545\u969c\u4e5f\u4f1a\u635f\u5bb3\u670d\u52a1\u53ef\u7528\u6027\u3002\n\u5728\u5171\u4eab\u8ba1\u7b97\u96c6\u7fa4\u4e0a\uff0c\u53ef\u4ee5\u968f\u65f6\u6e05\u7a7a\u6216\u91cd\u65b0\u542f\u52a8\u5b9e\u4f8b\uff0c\u4ee5\u4fbf\u7531\u8ba1\u7b97\u56e2\u961f\u8fdb\u884c\u7ef4\u62a4\u3002\u5982\u679c\u540c\u65f6\u6e05\u7a7a\u4e24\u4e2a\u6216\u66f4\u591a\u526f\u672c\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53ef\u7528\u6027\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u8ba1\u7b97\u56e2\u961f\u4e0d\u77e5\u9053MetricsDB\u62d3\u6251\u3002\u6211\u4eec\u6700\u521d\u6c42\u52a9\u4e8e\u624b\u52a8\u534f\u8c03\u548c\u7279\u522b\u5de5\u5177\u6765\u5904\u7406\u8be5\u95ee\u9898\u3002Compute\u56e2\u961f\u901a\u8fc7\u6dfb\u52a0\u5bf9\u6709\u72b6\u6001\u670d\u52a1(\u5982\u57fa\u4e8e\u534f\u8c03\u5668\u7684SLA\u66f4\u65b0\u548cSLA\u611f\u77e5\u66f4\u65b0)\u7684\u652f\u6301\u6765\u5e2e\u52a9\u6211\u4eec\u3002\n\u867d\u7136MetricsDB\u5c06\u5ef6\u8fdf\u51cf\u5c11\u4e865\u500d\uff0c\u4f46\u4e3a\u5177\u6709\u5927\u91cf\u4f4e\u5ef6\u8fdf\u6e90\u7684\u670d\u52a1\u6267\u884c\u8bfb\u53d6\u65f6\u95f4\u805a\u5408\u662f\u5177\u6709\u6311\u6218\u6027\u7684\u3002\u4f8b\u5982\uff0c\u5411\u4eea\u8868\u677f\u52a0\u8f7d\u8d85\u8fc710,000\u4e2a\u6e90\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u8d85\u8fc7\u4e24\u5468\u7684\u6570\u636e\u901a\u5e38\u4f1a\u8d85\u65f6\u3002\u4e3a\u4e86\u63d0\u9ad8\u6b64\u7c7b\u67e5\u8be2\u7684\u54cd\u5e94\u6027\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u6267\u884c\u5199\u5165\u65f6\u805a\u5408\uff0c\u79f0\u4e3a\u201c\u8ba1\u6570\u5668\u201d\u3002\u67dc\u53f0\u67b6\u6784\u6709\u4e24\u4e2a\u4e3b\u8981\u53d8\u5316\uff1a\n\u4e0e\u539f\u59cb\u6570\u636e\u70b9\u76f8\u6bd4\uff0c\u805a\u5408\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u3002\u590d\u5236\u526f\u672c\u53ef\u80fd\u4f1a\u4e22\u5931\u90e8\u5206\u6570\u636e\uff0c\u5e76\u4e3a\u540c\u4e00\u65f6\u95f4\u6233\u8ba1\u7b97\u4e0d\u540c\u7684\u805a\u5408\u503c\u3002\u8fd9\u4e9b\u5728\u8bfb\u53d6\u8def\u5f84\u4e0a\u662f\u4e0d\u53ef\u80fd\u534f\u8c03\u7684\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5728\u534f\u8c03\u5668\u548c\u540e\u7aef\u670d\u52a1\u5668\u4e4b\u95f4\u5f15\u5165\u4e86Apache Kafka\u3002\u6211\u4eec\u8fd8\u5c06AppendLog\u4ece\u8ba1\u6570\u5668\u96c6\u7fa4\u4e2d\u79fb\u9664\uff0c\u56e0\u4e3aKafka\u5145\u5f53AppendLog\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u5bf9\u4e8e\u539f\u59cb\u6570\u636e\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u57fa\u4e8e(\u533a\u57df\u3001\u670d\u52a1\u3001\u6e90)\u7684\u5206\u533a\u3002\u4e3a\u4e86\u805a\u5408\u6bcf\u4e2a\u670d\u52a1\u7684\u6307\u6807\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u5206\u533a\u65b9\u6848(\u533a\u57df\u3001\u670d\u52a1\u3001\u6307\u6807)\uff0c\u4ee5\u4fbf\u5c5e\u4e8e\u76f8\u540c\u670d\u52a1\u7684\u6307\u6807\u4f4d\u4e8e\u540c\u4e00\u5206\u533a\u4e0a\u3002\u8fd9\u4e3a\u8fdb\u884c\u805a\u5408\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6570\u636e\u5c40\u90e8\u6027\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e5f\u6bd4(\u533a\u57df\u3001\u670d\u52a1\u3001\u6e90)\u5206\u533a\u63d0\u4f9b\u4e86\u7565\u5fae\u66f4\u597d\u7684\u5e73\u8861\u3002\u7136\u800c\uff0c\u4e0e\u57fa\u4e8e\u6e90\u7684\u5206\u533a\u76f8\u6bd4\uff0c\u57fa\u4e8e\u5ea6\u91cf\u7684\u5206\u533a\u5728\u6444\u53d6\u8def\u5f84\u4e0a\u5e26\u6765\u4e86\u66f4\u591a\u7684\u6311\u6218\uff0c\u56e0\u4e3a\u6765\u81ea\u6536\u96c6\u4ee3\u7406\u7684\u5199\u8bf7\u6c42\u9700\u8981\u57fa\u4e8e\u5206\u533a\u65b9\u6848\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u8bf7\u6c42\u3002Apache Kafka Producer\u53ef\u4ee5\u9009\u62e9\u6279\u5904\u7406\u8bf7\u6c42\uff0c\u8fd9\u5e2e\u52a9\u6211\u4eec\u51cf\u5c11\u4e86\u961f\u5217\u548c\u5b58\u50a8\u7684\u8bf7\u6c42\u6570\u91cf\u3002\n\u5728\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u4e3a\u57fa\u4e8e\u670d\u52a1\u7684\u6240\u6709\u6307\u6807\u63d0\u4f9b\u4e86\u6700\u5e38\u89c1\u7684\u805a\u5408&SUM&39\uff1b\u548c&#39\uff1bCOUNT&39\uff1b\u3002\u6211\u4eec\u8ba1\u5212\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u805a\u5408\u3002\n\u4f7f\u7528\u81ea\u5b9a\u4e49\u5b58\u50a8\u540e\u7aef\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u952e\u503c\u5b58\u50a8\uff0c\u603b\u4f53\u6210\u672c\u964d\u4f4e\u4e8610\u500d\uff0c\u5ef6\u8fdf\u4e5f\u964d\u4f4e\u4e865\u500d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u6dfb\u52a0\u5176\u4ed6\u9700\u8981\u66f4\u9ad8\u89c4\u6a21\u7684\u529f\u80fd\u3002\u6b64\u5916\uff0c\u57fa\u4e8e\u670d\u52a1\u7684\u5199\u5165\u65f6\u95f4\u805a\u5408\u663e\u8457\u63d0\u9ad8\u4e86\u54cd\u5e94\u901f\u5ea6\uff0c\u540c\u65f6\u964d\u4f4e\u4e86MetricsDB\u7684\u8d1f\u8f7d\u3002\u6211\u4eec\u8ba1\u5212\u589e\u52a0\u5bf9\u7ef4\u5ea6\u7684\u652f\u6301\uff0c\u5f88\u5feb\u5c31\u4f1a\u7cbe\u786e\u5230\u7c92\u5ea6\u3002\n\u5982\u679c\u6ca1\u6709\u57fa\u7840\u8bbe\u65bd\u5de5\u7a0b\u9886\u57df\u6bcf\u4e2a\u4eba\u7684\u8f9b\u52e4\u5de5\u4f5c\u548c\u5949\u732e\u7cbe\u795e\uff0c\u6211\u4eec\u5c31\u4e0d\u53ef\u80fd\u53d6\u5f97\u4eca\u5929\u7684\u6210\u5c31\u3002\u7279\u522b\u611f\u8c22\u4e9a\u5386\u514b\u65af\u00b7\u5b89\u6770\u6d1b(Alex Angelo)\u3001\u67e5\u7406\u00b7\u5361\u68ee(Charlie Carson)\u3001\u5f20\u7ea2\u521a\u3001\u7a46\u7f55\u9ed8\u5fb7\u00b7\u585e\u5c14\u8fbe\u5c14\u00b7\u7d22\u5170(Muhammed Serdar Soran)\u3001\u738b\u5b81\u3001\u62c9\u7ef4\u00b7\u5361\u666e\u7518\u8482(Ravi Kapuganty)\u3001Vishnu Challam", "note_en": "We covered Observability Engineering\u2019s high level overview in blog posts earlier  here and its follow up  here. Our time series metric ingestion service grew to more than 5 billion metrics per minute, stores 1.5 petabytes of logical time series data, and handles 25K query requests per minute. Historically, we used  Manhattan, our key value store, as the storage backend. Observability had the largest Manhattan cluster in terms of storage and requests per minute, and that scale became a limiting factor to support other use cases requested by our customers. We tried various short-term mitigation approaches, such as batching writes and coalescing related metrics together to deal with those problems. These changes helped to improve operability in the short term, but scaling continued to be a problem. We explored alternate OSS storage options with two goals in mind. First, to better serve our current scale and the scale that we would organically grow into over the next five years. Second, to provide features that we lacked, such as support for sub-minutely and additional tags on metrics. We were not able to find a good option that meets the requirements, and decided to build our own using the compression algorithm described in Facebook\u2019s in memory TSDB:  Gorilla. We went down that route and productionized the initial version of our new backend, MetricsDB, at the end of 2017.\n    ClusterManager:\u00a0\u00a0Each set of partitions has its own ClusterManager that is responsible for assigning partitions to backend servers. HDFS is used to store mappings from partitions to servers. The ClusterManager is responsible for redistributing partitions when we add capacity. Coordinators and BackendServers get updates from the ClusterManager when the mapping changes \u2014 they do not read from HDFS directly. The ClusterManager also does health checks on backend servers, and is used to coordinate deploys of the backend servers. We update a backend server only after making sure that other replicas owning same partitions are healthy.\n  BackendServers:\u00a0BackendServers are responsible for processing metrics for a small number of partitions. Each BackendServer keeps the latest two hours of data for all metrics in memory. The BackendServer also caches older data for frequently accessed metrics and time ranges. The servers checkpoint in-memory data every two hours to durable storage,\u00a0 Blobstore. We are using Blobstore as durable storage so that our process can be run on our\u00a0 shared compute platform\u00a0with lower management overhead.\n  Coordinators: Coordinators are responsible for routing requests to all replica sets and validates desired quorum constraints are met.\n  Multi-zone support: Our previous data store, Manhattan, was not zone aware and forced us to maintain multiple datasets for each of the zones that we supported. MetricsDB is multi-zone compliant and handles metrics from several different zones. We currently run MetricsDB only in our main zones. Persisted data is replicated to other zones via Blobstore\u2019s built-in replication.\n  Partitioning of metrics: Observability is a write-heavy workload. Only ~2% of metrics written are ever read. It is also important to support even more metrics, at finer granularity, for quickly identifying and resolving incidents. We know from our experience with Manhattan that sending one metric in each request brings scaling challenges. We address this problem by using a custom partitioning scheme to batch a write request from \u201ccollection agent\u201d all the way to storage system. This custom partition scheme uses consistent hashing on (zone+service+source) to route requests to specific logical backend partition and reduces the number of individual metric write requests per minute from over 5 billion to under 10 million. This also distributes requests evenly so large services and small services can co-exist and share shards, avoiding the overhead of having custom configuration to set up different numbers of shards for different services. In production, we are able to achieve a very low variance of 200 requests per minute between high loaded partition and least-loaded partition.\n  Compression efficiency : The Gorilla white paper identifies compression algorithms that are very efficient for observability data and achieve 95% space compression. We have implemented these algorithms and achieved similar results in production.\n      Ninety-three percent of timestamps can be stored in 1 bit and almost 70% of metric values can be stored in 1 bit. Further, only ~15% of metrics require more than 2 bytes for storing values. Overall, this helped reduce storage usage by 1.2PB.\n  MetricsDB has replication factor of three. We initially designed the system to require at least two successful writes to acknowledge a write and planned to read from only a single replica. We chose single-replica reads approach with assumption that the \u00a0engineers using monitoring stack generally care about trends and aggregates of metrics (request count or success rate) rather than individual data points. However, we found that many customers set up alerts on missing data to identify an unhealthy service. These missing data alerts would fire if the replica that responds first doesn\u2019t have the data for the more recent minute. We switch to quorum reads (2/3) to address this issue.\n  There was an additional issue with inconsistencies in aggregates. This is observed when write failed in two of the replicas after multiple retries. In this case, only one replica will have the data for a specific metric. Aggregates will show a different value when that replica is included vs when it is not. It was not acceptable to wait for all three backend responses for all requests because this would cause high tail latencies. To workaround this problem, we introduced a two-level timeouts. MetricsDB coordinators have lower \u2018first-level timeout\u2019 to wait for all three replicas\u2019 response. When that timeout expires, the coordinator will return if it has received responses from at least two replicas. There is a second timeout that will cause and actual failure to be returned if we have still not gotten two responses. This has increased p99 latency marginally (latency is still an order of magnitude better than key value store), but made the data more consistent. We are in the process of adding better replica reconciliation using Kafka queues to improve the consistency further.\n    We started MetricsDB on our shared compute cluster to both speed time-to-market and to minimize operational overhead for the team. MetricsDB was the first stateful service to run a shared compute platform at Twitter. Running on a dedicated cluster was not an option because the size of the cluster would have been too small to be safe. We would not have had sufficient rack diversity and a single server failing would have been detrimental to the service availability.\n  On a shared compute cluster, an instance can be drained or restarted at any time for maintenance by the Compute team. This resulted in availability problems if two or more replicas are drained at the same time because our compute team was unaware of MetricsDB topology. We initially resorted to manual coordination and ad hoc tooling to deal with the problem. The Compute team helped us by adding support for stateful services such as\u00a0 Coordinator based SLA\u00a0and\u00a0 SLA Aware updates.\n  While MetricsDB has reduced latency by a factor of five, doing read-time aggregation for a service with a large number of sources with a low latency was challenging. For example, loading dashboard with time series data for more than 10,000 sources over two weeks of data often timed out. To make such queries more responsive, we added a new service that does write-time aggregation called \u201ccounters\u201d. Counters architecture has two major changes:\n    Data inconsistency is a bigger problem with aggregates than with raw data points. Replicas can miss partial data and compute different aggregate value for the same timestamp. These are impossible to reconcile on the read path. To solve this, we introduced Apache Kafka between coordinator and backend servers. We also removed AppendLog from counter cluster because Kafka acts as AppendLog.\n    As described earlier, for raw data points, we used partitioning based on (zone, service, source). To aggregate metrics per service, we introduced a new partitioning scheme (zone, service, metric) so that a metric that belongs to the same service lands on the same partition. This provides better data locality for doing aggregations. In practice, this also gave marginally better balancing than (zone, service, source) partitioning. However, metric-based partitioning brought more challenges in ingestion path than source-based partitioning, because a write request from collection agent needs to be split into multiple requests based on partitioning scheme. Apache Kafka producer has an option to batch requests, which helped us reduce the number of requests to the queue and storage.\n    In the first version, we provide most common aggregations, &#39;SUM&#39; and &#39;COUNT&#39; for all metrics based on service. We plan to support other types of aggregations in near future.\n  Using a custom storage backend instead of traditional key value store reduced the overall cost by a factor of 10. This also reduced latency by a factor of five. More importantly, this enables us to add other features that require higher scale. In addition, write time aggregations based on service improved responsiveness significantly while reducing the load on MetricsDB. We plan to add support for dimensions, sub-minutely granularity soon.\n  We couldn&#39;t have achieved this without the hard work and dedication of everyone in Infrastructure engineering. Special thanks to  Alex Angelo,\u00a0 Charlie Carson,\u00a0 Honggang Zhang,\u00a0 Muhammed Serdar Soran,\u00a0 Ning Wang,  Ravi Kapuganty,  Vishnu Challam", "posttime": "2020-06-17 12:03:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u7528\u4e8e,timeseries,\u5b58\u50a8", "title": "MetricsDB\uff1a\u7528\u4e8e\u5728Twitter\u4e0a\u5b58\u50a8\u6307\u6807\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93", "title_en": "MetricsDB: TimeSeries Database for storing metrics at Twitter", "transed": 1, "url": "https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/metricsdb.html", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u7528\u4e8e", "\u5b58\u50a8"]}, {"category": "", "categoryclass": "", "imagename": "e0b91a2bb228fced597861ca360e8f34.png", "infoid": 1006916, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7eb8\u8d28\u98de\u673a\u6570\u636e\u5e93\uff0c\u6613\u4e8e\u9075\u5faa\u6298\u53e0\u8bf4\u660e\u3001\u89c6\u9891\u6559\u7a0b\u548c\u53ef\u6253\u5370\u7684\u6298\u53e0\u5e73\u9762\u56fe\u3002\u627e\u51fa\u6700\u597d\u7684\u7eb8\u98de\u673a\uff0c\u98de\u5f97\u6700\u8fdc\uff0c\u5728\u9ad8\u7a7a\u505c\u7559\u7684\u65f6\u95f4\u6700\u957f\u3002", "note_en": "A database of paper airplanes with easy to follow folding instructions, video tutorials and printable folding plans. Find the best paper airplanes that fly the furthest and stay aloft the longest.", "posttime": "2020-06-17 12:02:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u98de\u673a,airplane,\u6298\u53e0", "title": "\u7eb8\u8d28\u98de\u673a\u8bbe\u8ba1", "title_en": "Paper Airplane Designs", "transed": 1, "url": "https://www.foldnfly.com/index.html#/1-1-1-1-1-1-1-1-2", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u98de\u673a", "airplane", "\u6298\u53e0"]}]