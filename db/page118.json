[{"category": "", "categoryclass": "", "imagename": "baae6853799d0ab7b443fa32c7bf514d.png", "infoid": 1006160, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e74\u65e0\u7591\u5c5e\u4e8eAMD\u3002\u5728\u67d0\u4e9b\u9886\u57df\u843d\u540e\u4e8e\u82f1\u7279\u5c14\u591a\u5e74\u540e\uff0c\u8be5\u516c\u53f8\u7ec8\u4e8e\u8d85\u8d8a\u4e86\u5954\u817e\u5236\u9020\u5546\u3002\u5728Ryzen\u548cRyzen ThreadRipper\u5904\u7406\u5668\u4e4b\u95f4\uff0cAMD\u62e5\u6709\u72c2\u70ed\u7684\u53f0\u5f0f\u673a\u5e02\u573a\u3002\u8fd9\u8fd8\u4e0d\u662f\u5168\u90e8--\u8be5\u516c\u53f8\u7684Ryzen 4000\u7cfb\u5217\u79fb\u52a8\u5904\u7406\u5668\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u4e5f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u89c1\u9b3c\uff0cLinux\u4e4b\u7236\u83b1\u7eb3\u65af\u00b7\u6258\u74e6\u5c14\u5179(Linus Torvalds)\u73b0\u5728\u4f7f\u7528\u7684\u7535\u8111\u7531AMD\u7684Ryzen ThreadRepper 3970X\u9a71\u52a8\u3002\nLinux\u7535\u8111\u5236\u9020\u5546/\u9500\u552e\u5546System76\u4e00\u76f4\u5728\u5176Thelio\u53f0\u5f0f\u7535\u8111\u4e2d\u63d0\u4f9bAMD\u5904\u7406\u5668\uff0c\u4f46\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u8be5\u516c\u53f8\u4ece\u672a\u63d0\u4f9b\u8fc7\u642d\u8f7dAMD\u5904\u7406\u5668\u7684\u7b14\u8bb0\u672c\u7535\u8111--\u76f4\u5230\u73b0\u5728\uff0c\u4e5f\u5c31\u662f\u8bf4\u3002\u60a8\u770b\uff0c\u4ece\u4eca\u5929\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u8d2d\u4e70\u7531AMD\u63d0\u4f9b\u652f\u6301\u7684Serval WS&34\uff1b\u3002\u4e0d\uff0cSystem76\u5728\u8fd9\u6b3e\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u4e0d\u63d0\u4f9b\u79fb\u52a8Ryzen\u82af\u7247\uff0c\u800c\u662f\u53f0\u5f0f\u673a\u7ea7\u522b\u7684\u5904\u7406\u5668\uff01\u6b63\u5982\u60a8\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u8fd9\u6b3e15\u82f1\u5bf8\u7684\u4fbf\u643a\u5f0fLinux\u5de5\u4f5c\u7ad9\u56e0\u6b64\u76f8\u5f53\u7b28\u91cd\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u8981\u5728\u4e00\u53f0\u53c8\u8584\u53c8\u8f7b\u7684\u7b14\u8bb0\u672c\u91cc\u585e\u8fdb\u8fd9\u4e48\u5927\u7684\u7535\u91cf\u662f\u4e0d\u53ef\u80fd\u7684\u3002\nServal WS\u914d\u5907\u7b2c\u4e09\u4ee3Ryzen 3600\u30013700X\u62163900 CPU\u3002\u540e\u8005\u914d\u5907\u4e8612\u4e2a\u5185\u6838\u548c24\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u6b3e\u7b14\u8bb0\u672c\u7535\u8111\u975e\u5e38\u9002\u5408\u627f\u62c5\u7e41\u91cd\u7684\u8ba1\u7b97\u8d1f\u8f7d\u3002\u5982\u679c\u60a8\u9700\u8981\u5728\u529e\u516c\u684c\u524d\u8fd0\u884c\u590d\u6742\u7684\u6a21\u62df\u6216\u5728\u65c5\u9014\u4e2d\u5feb\u901f\u6e32\u67d33D\u573a\u666f\uff0c\u5728\u7b14\u8bb0\u672c\u673a\u8eab\u4e2d\u62e5\u6709\u8fd9\u79cd\u53f0\u5f0f\u673a\u7ea7\u522b\u7684\u529f\u80fd\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\u636eSystem76\u79f0\uff0cAMD CPU\u8fd8\u4ee5\u5176\u6781\u9ad8\u7684\u6027\u4ef7\u6bd4\u800c\u95fb\u540d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u6027\u4ef7\u6bd4\u3002\n\u4e0d\u8fc7\uff0c\u8be5\u516c\u53f8\u8fdb\u4e00\u6b65\u8868\u793a\uff0c\u9664\u4e86\u8d85\u5f3a\u7684CPU\uff0c\u8fd8\u6709\u66f4\u591a\u503c\u5f97\u559c\u7231\u7684\u5730\u65b9\u3002Serval WS\u8fd8\u5177\u6709\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u56fe\u5f62\uff0c\u53ef\u9009\u62e9NVIDIA GTX 1660 Ti\u6216RTX 2070\u3002GTX 1660 Ti\u63d0\u4f9b\u8d85\u503c\u7684\u9ad8\u6027\u80fd\uff0c\u800cRTX 2070\u63d0\u4f9b\u5b8c\u6574\u7684\u5c01\u88c5\uff1a\u66f4\u9ad8\u7684\u6027\u80fd\u3001CUDA\u5185\u6838\u3001\u5f20\u91cf\u5185\u6838\u548c\u5149\u7ebf\u8ddf\u8e2a\u3002\u5728\u5b58\u50a8\u65b9\u9762\uff0c\u60a8\u53ef\u4ee5\u4e3aServal WS\u914d\u5907\u9ad8\u8fbe4TB\u7684NVMe\u5b58\u50a8\uff0c\u4ee5\u5b9e\u73b0\u6d41\u7545\u7684\u6548\u679c\u3002NVMe SSD\u5b58\u50a8\u9a71\u52a8\u5668\u4f7f\u7528\u6bd4SATA\u5b58\u50a8\u9a71\u52a8\u5668\u66f4\u5feb\u7684\u8fde\u63a5\uff0c\u5141\u8bb8\u60a8\u4ee5\u9ad8\u8fbe6\u500d\u7684\u901f\u5ea6\u8bfb/\u5199\u6587\u4ef6\u3001\u4f20\u8f93\u6570\u636e\u548c\u52a0\u8f7d\u6e38\u620f\u3002&#34\uff1b", "note_en": "The year 2020 undoubtedly belongs to AMD. After trailing Intel for years in some areas, the company has finally leapfrogged the Pentium-maker. Between its Ryzen and Ryzen Threadripper processors, AMD owns the enthusiast desktop market. And that&#39;s not all -- the company&#39;s  Ryzen 4000 Series Mobile Processors are impressing on laptops too. Hell, Linus Torvalds, the father of Linux,  is now using a computer powered by AMD&#39;s Ryzen Threadripper 3970X.\n Linux computer maker/seller System76 has been offering  AMD processors in its Thelio desktop computers, but believe it or not, the company has never offered an AMD-powered laptop -- until now, that is. You see, starting today, you can buy a &#34;Serval WS&#34; powered by AMD. No, System76 is not offering mobile Ryzen chips in this laptop, but instead, desktop-class processors! As you can expect, this 15-inch portable Linux workstation is quite chunky and heavy as a result. With that said, it is simply impossible to cram this much power into a thin and light notebook.\n     &#34;The Serval WS comes with either the 3rd Gen Ryzen 3600, 3700X, or 3900 CPU. The latter is equipped with 12 Cores and 24 Threads, making this laptop perfect for taking on heavy computational loads. Having this kind of desktop-caliber power in a laptop body helps if you need to run complex simulations at your desk or quickly render 3D scenes while on the road. AMD CPUs are also known for having the an extremely high price per performance, which means you get maximum bang-for-buck,&#34; says System76.\n   The company further says, &#34;There&#39;s more to love than just the ultra-powerful CPUs, though. The Serval WS also features impressive graphics, with the option of either an NVIDIA GTX 1660 Ti or an RTX 2070. The GTX 1660 Ti offers high performance at great value, while the RTX 2070 provides the full package: higher performance, CUDA cores, Tensor cores, and ray tracing. When it comes to storage, you can equip the Serval WS with up to 4TB NVMe storage for fluid results. NVMe SSD storage drives use a faster connection than SATA storage drives, allowing you to read/write files, transfer data, and load games up to 6x faster.&#34;", "posttime": "2020-06-12 00:53:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "linux,\u63a8\u51fa,launches,amd", "title": "System76\u63a8\u51faAMD Ryzen\u9a71\u52a8\u7684\u201cServal WS\u201d\u4fbf\u643a\u5f0fLinux\u5de5\u4f5c\u7ad9", "title_en": "System76 Launches AMD Ryzen-Powered 'Serval WS' Portable Linux Workstation", "transed": 1, "url": "https://betanews.com/2020/06/11/system76-amd-ryzen-serval-ws-linux/", "via": "", "real_tags": ["linux", "\u63a8\u51fa", "launches", "amd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006158, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u4e8e\u672c\u9875\u9762\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u68c0\u6d4b\u5230\u6765\u81ea\u60a8\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u5f02\u5e38\u6d41\u91cf\u3002\u8be5\u9875\u9762\u68c0\u67e5\u662f\u5426\u771f\u7684\u662f\u60a8\u53d1\u9001\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u662f\u673a\u5668\u4eba\u3002\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u4e8b\uff1f\u5f53Google\u81ea\u52a8\u68c0\u6d4b\u5230\u6765\u81ea\u60a8\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u8bf7\u6c42\u4f3c\u4e4e\u8fdd\u53cd\u4e86\u670d\u52a1\u6761\u6b3e\u65f6\uff0c\u4f1a\u51fa\u73b0\u6b64\u9875\u9762\u3002\u8be5\u5757\u5c06\u5728\u8fd9\u4e9b\u8bf7\u6c42\u505c\u6b62\u540e\u4e0d\u4e45\u8fc7\u671f\u3002\u5728\u6b64\u671f\u95f4\uff0c\u89e3\u51b3\u4e0a\u8ff0\u9a8c\u8bc1\u7801\u5c06\u8ba9\u60a8\u7ee7\u7eed\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\u3002\u6b64\u901a\u4fe1\u91cf\u53ef\u80fd\u662f\u7531\u6076\u610f\u8f6f\u4ef6\u3001\u6d4f\u89c8\u5668\u63d2\u4ef6\u6216\u53d1\u9001\u81ea\u52a8\u8bf7\u6c42\u7684\u811a\u672c\u53d1\u9001\u7684\u3002\u5982\u679c\u60a8\u5171\u4eab\u7f51\u7edc\u8fde\u63a5\uff0c\u8bf7\u5411\u60a8\u7684\u7ba1\u7406\u5458\u5bfb\u6c42\u5e2e\u52a9-\u4f7f\u7528\u76f8\u540cIP\u5730\u5740\u7684\u4e0d\u540c\u8ba1\u7b97\u673a\u53ef\u80fd\u4f1a\u8d1f\u8d23\u3002\u4e86\u89e3\u66f4\u591a\u6709\u65f6\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5df2\u77e5\u673a\u5668\u4eba\u4f7f\u7528\u7684\u9ad8\u7ea7\u672f\u8bed\uff0c\u6216\u8005\u53d1\u9001\u8bf7\u6c42\u975e\u5e38\u8fc5\u901f\uff0c\u5219\u53ef\u80fd\u4f1a\u8981\u6c42\u60a8\u89e3\u51b3\u9a8c\u8bc1\u7801\u95ee\u9898\u3002\nIP\u5730\u5740\uff1a207.46.138.74\u65f6\u95f4\uff1a2020-06-11T16\uff1a51\uff1a41Z\u7f51\u5740\uff1ahttps://www.youtube.com/watch?v=n3G6DeEbc2U", "note_en": "About this page  Our systems have detected unusual traffic from your computer network. This page checks to see if it&#39;s really you sending the requests, and not a robot.  Why did this happen?   This page appears when Google automatically detects requests coming from your computer network which appear to be in violation of the  Terms of Service. The block will expire shortly after those requests stop. In the meantime, solving the above CAPTCHA will let you continue to use our services.  This traffic may have been sent by malicious software, a browser plug-in, or a script that sends automated requests. If you share your network connection, ask your administrator for help \u2014 a different computer using the same IP address may be responsible.  Learn more  Sometimes you may be asked to solve the CAPTCHA if you are using advanced terms that robots are known to use, or sending requests very quickly.\nIP address: 207.46.138.74 Time: 2020-06-11T16:51:41Z URL: https://www.youtube.com/watch?v=n3G6DeEbc2U", "posttime": "2020-06-12 00:51:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7eb3\u5c14\u900a,nelson", "title": "\u6cf0\u5fb7\u00b7\u7eb3\u5c14\u900a\u6717\u8bfb\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14\u7684\u8bd7\u201c\u91d1\u94b1\u4e4b\u795e\u201d", "title_en": "Ted Nelson Reads George Orwell's Poem, \u201cThe Money God\u201d", "transed": 1, "url": "https://www.youtube.com/watch?v=n3G6DeEbc2U", "via": "", "real_tags": ["\u7eb3\u5c14\u900a", "nelson"]}, {"category": "", "categoryclass": "", "imagename": "17dc185714ab3f02ff6106d50cd2e1da.jpg", "infoid": 1006157, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "The War Nerd\u5256\u6790\u4e86\u6709\u5173\u6c99\u7279\u963f\u62c9\u4f2f\u7684\u62a5\u9053\uff0c\u4ee5\u8868\u660e\u4f01\u4e1a\u5a92\u4f53\u5982\u4f55\u66f4\u5173\u5fc3\u4e00\u4f4d\u6b7b\u53bb\u7684\u534e\u76db\u987f\u90ae\u62a5\u4e13\u680f\u4f5c\u5bb6\uff0c\u800c\u4e0d\u662f25\u4e07\u4e5f\u95e8\u4eba\u5728\u897f\u65b9\u652f\u6301\u7684\u6218\u4e89\u4e2d\u4e27\u751f\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u6807\u9898\u4e0d\u662f\u7b11\u8bdd\u3002\u8fd9\u662f\u4e00\u4e2a\u4f60\u4e0d\u7981\u8981\u95ee\u7684\u95ee\u9898\uff0c\u4f60\u662f\u5426\u5173\u6ce8\u8fc7\u4e5f\u95e8\u7684\u6218\u4e8b\u3002\n\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u6218\u4e89\u4e66\u5446\u5b50\u7535\u53f0\uff0c\u6211\u4eec\u4e00\u904d\u53c8\u4e00\u904d\u5730\u6307\u51fa\uff0c\u4e00\u4e9b\u6218\u65f6\u6b7b\u4ea1\u4e8b\u4ef6\u5f97\u5230\u4e86\u5f88\u591a\u5173\u6ce8\uff0c\u800c\u53e6\u4e00\u4e9b\u4eba\u5219\u5f88\u5c11-\u6216\u8005\u6839\u672c\u6ca1\u6709\u3002\u4f46\u662f\uff0c\u8981\u5bf9\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u64b0\u7a3f\u4eba\u7684\u6b7b\u4ea1\u548c\u201c\u654c\u4eba\u201d\u5e73\u6c11\u7684\u6b7b\u4ea1\u7684\u76f8\u5bf9\u91cd\u8981\u6027\u8fdb\u884c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u79d1\u5b66\u578b\u6d4b\u8bd5\u5e76\u975e\u6613\u4e8b\u3002\n\u55ef\uff0c\u6211\u4eec\u73b0\u5728\u6709\u8fd9\u6837\u7684\u6d4b\u8bd5\u3002\u6211\u521a\u5728BBC\u65b0\u95fb\u7f51\u7ad9\u4e0a\u627e\u5230\u7684\u3002\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u8fd9\u5c06\u6210\u4e3a\u8ba1\u7b97\u6bcf\u6b7b\u4ea1\u50cf\u7d20\u7684\u9ec4\u91d1\u6807\u51c6\u3002\u8fd9\u662f\u8bfa\u8d1d\u5c14\u5956\u7684\u5a92\u4f53\u7269\u7406\u5b66\u5956\u3002\u4e00\u540d\u4e5f\u95e8\u5e73\u6c11\u6b7b\u4ea1\u7684\u5206\u5b50\u91cf\u662f\u591a\u5c11\uff1f\u5b83\u7684\u6570\u91cf\u5982\u6b64\u4e4b\u5c0f\uff0c\u4ee5\u81f3\u4e8e\u4ec5\u4ec5\u662f\u4f7f\u7528\u7c97\u7cd9\u77f3\u5668\u7684\u5916\u884c\u90fd\u731c\u4e0d\u5230\u3002\u4f46\u591a\u4e8f\u4e86BBC\u7684\u8fd9\u7bc7\u62a5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u7684\u9ad8\u7ea7\u6570\u5b66\u6280\u80fd\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4ee5\u4e0b\u662f\u6545\u4e8b\uff0c\u6211\u4eec\u7684\u5c24\u91cc\u5361\u65f6\u523b\uff0c\u6211\u4eec\u7684\u7f57\u585e\u5854\u00b7\u65af\u901a\uff0c\u6211\u4eec\u7684\u7535\u5b50\u5a92\u4f53\u663e\u5fae\u955c\uff1a\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8(BBC)2020\u5e745\u670813\u65e5\u53d1\u8868\u7684\u4e00\u7bc7\u9898\u4e3a\u201c\u6c99\u7279\u963f\u62c9\u4f2f\uff1a\u5176\u9ebb\u70e6\u5230\u5e95\u6709\u591a\u6df1\uff1f\u201d\u7684\u6587\u7ae0\uff0c\u7f72\u540d\u4e3a\u5f17\u5170\u514b\u00b7\u52a0\u5fb7\u7eb3(Frank Gardner)\uff0c\u201cBBC\u5b89\u5168\u8bb0\u8005\u201d\u3002\n\u52a0\u5fb7\u7eb3\u4e3a\u6c99\u7279\u738b\u56fd\u53d1\u73b0\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u5176\u4e2d\u5927\u591a\u6570\u7eaf\u7cb9\u662f\u8d22\u52a1\u95ee\u9898\uff1a\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u3001\u77f3\u6cb9\u8fc7\u5269\u548c\u4ef7\u683c\u4e0b\u8dcc\u3002\u4ed6\u7b80\u8981\u63d0\u5230\u4e86\u6c99\u7279\u4e8b\u5b9e\u4e0a\u7684\u7edf\u6cbb\u8005\u738b\u50a8\u7a46\u7f55\u9ed8\u5fb7\u00b7\u672c\u00b7\u8428\u52d2\u66fc(Mohammed Bin Salman\uff0cMBS)\u906d\u9047\u7684\u516c\u5173\u95ee\u9898\uff1a\n\u201c\u4e0e\u6b64\u540c\u65f6\uff0c\u738b\u50a8\u867d\u7136\u5728\u56fd\u5185\u4ecd\u7136\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u7531\u4e8e\u5916\u754c\u5bf9\u4ed6\u5728\u6740\u5bb3\u6c99\u7279\u8bb0\u8005\u8d3e\u8fc8\u52d2\u00b7\u5361\u8212\u5409(Jamal Khashoggi)\u4e00\u6848\u4e2d\u626e\u6f14\u7684\u89d2\u8272\u7684\u6000\u7591\u6325\u4e4b\u4e0d\u53bb\uff0c\u738b\u50a8\u5728\u897f\u65b9\u4ecd\u7136\u662f\u88ab\u553e\u5f03\u7684\u4eba\u3002\u201d\n\u8fd9\u662f\u52a0\u5fb7\u7eb3\u7684\u7b2c\u516d\u6bb5\uff0c\u6240\u4ee5\u516c\u5173\u95ee\u9898\u7684\u6bd4\u7387\u4f4e\u4e8e\u7eaf\u7cb9\u7684\u8d22\u52a1\u95ee\u9898\uff0c\u4f46\u4ecd\u7136\u76f8\u5f53\u9ad8\u3002\n\u6bb5\u843d\u5728\u65b0\u95fb\u6545\u4e8b\u4e2d\u7684\u4f4d\u7f6e\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5c31\u50cfNFL\u9009\u79c0\u4e00\u6837\uff0c\u91cd\u8981\u7684\u4e0d\u662f\u4f60\u662f\u5426\u5165\u9009\uff0c\u800c\u662f\u4f60\u88ab\u5b89\u6392\u5728\u54ea\u91cc\u3002\u8d8a\u65e9\u8d8a\u597d\uff0c\u4f60\u7684\u4ef7\u503c\u5c31\u8d8a\u9ad8\uff0c\u4e0d\u7ba1\u4f60\u662f\u89d2\u536b\u8fd8\u662f\u6b7b\u53bb\u7684\u5e73\u6c11\u3002\u56e0\u6b64\uff0c\u50cf\u5361\u8212\u5409\u8fd9\u6837\u7684\u957f\u7bc7\u6545\u4e8b(50\u6bb5)\u7684\u7b2c\u516d\u6bb5\u88ab\u63d0\u5230\uff0c\u8ba9\u4f60\u6709\u70b9\u50cf\u7b2c\u4e09\u8f6e\u7684\u9009\u62e9\u3002\u5361\u8212\u5409\u4e00\u5b9a\u5f88\u81ea\u8c6a\uff0c\u65e0\u8bba\u4ed6\u73b0\u5728\u5728\u54ea\u91cc\u3002\n\u5173\u952e\u662f\uff0c\u5c31BBC\u800c\u8a00\uff0c\u6740\u5bb3\u5361\u8212\u5409\u662fMBS\u552f\u4e00\u7684\u516c\u5173\u95ee\u9898\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u5361\u8212\u5409\u88ab\u6740\u5e76\u4e0d\u662f\u804c\u4e1a\u6697\u6740\u7684\u80dc\u5229\uff0c\u5361\u8212\u5409\u662f\u4e00\u540d\u79bb\u7ecf\u53db\u9053\u7684\u6c99\u7279\u7cbe\u82f1\u3002\u5fd8\u4e86\u8ba9\u00b7\u96f7\u8bfa\u5427\uff0c\u8fd9\u66f4\u50cf\u662f\u4ece\u5fb7\u514b\u8428\u65af\u5dde\u7535\u952f\u5927\u5c60\u6740\u96c7\u6765\u7684\u7537\u5b69\u4eec\u6765\u505a\u6e05\u7406\u5de5\u4f5c\u3002MBS\u7684\u7279\u5de5\u5c06\u4ed6\u4eec\u7684\u94a2\u952f\u5e26\u5230\u4e86\u6c99\u7279\u9a7b\u4f0a\u65af\u5766\u5e03\u5c14\u9886\u4e8b\u9986\uff0c\u5e76\u5728\u9886\u4e8b\u9986\u5185\u6740\u6b7b\u4e86\u5361\u8212\u5409\uff0c\u4ed6\u4eec\u592a\u611a\u8822\u4e86\uff0c\u6ca1\u6709\u610f\u8bc6\u5230\u571f\u8033\u5176\u60c5\u62a5\u57287\u6708\u4efd\u628a\u8fd9\u4e2a\u5730\u65b9\u641e\u5f97\u6bd4\u5b89\u5927\u7565\u7701\u7684\u4e00\u5ea7\u5c0f\u5c4b\u8fd8\u7cdf\u7cd5\uff0c\u5f53\u5f55\u50cf\u5e26\u51fa\u73b0\u5728\u7f51\u4e0a\u65f6\uff0c\u4ed6\u4eec\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u5c01\u9762\u6545\u4e8b\u3002\n\u800c\u6c99\u7279\u5728\u635f\u5bb3\u7ba1\u7406\u65b9\u9762\u7684\u5c1d\u8bd5\u662f\u6700\u65e0\u80fd\u7684\u3002\u6c99\u7279\u4eba\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\uff0c\u5361\u8212\u5409\u5b8c\u597d\u65e0\u635f\u5730\u79bb\u5f00\u4e86\u9886\u4e8b\u9986\uff0c\u4ed6\u7684\u56db\u80a2\u662f\u4e00\u7247\u539f\u59cb\u68ee\u6797\uff0c\u6ca1\u6709\u88ab\u952f\u5b50\u78b0\u8fc7\uff0c\u53ea\u662f\u5728\u538b\u529b\u4e0b\u624d\u627f\u8ba4\u4ed6\u5728\u9886\u4e8b\u9986\u5185\u88ab\u6740\u5e76\u88ab\u80a2\u89e3\u3002\u6ca1\u6709\u4eba\u8d28\u7591\u6740\u5bb3\u8d3e\u8fc8\u52d2\u00b7\u5361\u8212\u5409\u5728\u4efb\u4f55\u610f\u4e49\u4e0a\u90fd\u662f\u4e00\u56e2\u8840\u8165\u7684\u70c2\u644a\u5b50\u3002\n\u4f46\u95ee\u9898\u662f\uff0c\u8fd9\u5e76\u4e0d\u662fMBS\u548c\u738b\u56fd\u5377\u5165\u7684\u6700\u8840\u8165\u7684\u6df7\u4e71\u3002\u800c\u4e14\uff0c\u5361\u8212\u5409\u5e76\u4e0d\u662fMBS\u201c\u6539\u9769\u201d\u653f\u7b56\u540e\u7559\u4e0b\u7684\u552f\u4e00\u6b8b\u5e9f\u8eab\u4f53\u3002\n\u4e00\u70b9\u4e5f\u4e0d\u4f1a\u3002\u8fd8\u6709\u53e6\u4e00\u4ef6\u4e8b\u6b63\u5728\u53d1\u751f\uff1a\u6c99\u7279\u9886\u5bfc\u7684\u5165\u4fb5\u548c\u5c01\u9501\u4e5f\u95e8\u897f\u5317\u90e8\uff0c\u4e5f\u95e8\u5927\u90e8\u5206\u662f\u4ec0\u53f6\u6d3e\u9ad8\u5730\u7701\u4efd\u3002\u8fd9\u573a\u8840\u8165\u5927\u5c60\u6740\u59cb\u4e8e2015\u5e743\u6708\uff0c\u81ea\u90a3\u4ee5\u6765\uff0c\u5b83\u5df2\u7ecf\u6740\u5bb3\u4e86\u6570\u5341\u4e07\u4eba(\u6211\u7684\u610f\u601d\u662f\u201c\u65e0\u6570\u201d)\u3002\n\u81ea2015\u5e74\u4ee5\u6765\uff0c\u4e5f\u95e8\u6709\u591a\u5c11\u4eba\u6b7b\u4e8e\u53ef\u6015\u7684\u6b7b\u4ea1\uff1f\u50cf\u534e\u76db\u987f\u90ae\u62a5\u3001\u7ebd\u7ea6\u65f6\u62a5\u548cBBC\u8fd9\u6837\u7684\u5b98\u65b9\u6d88\u606f\u6765\u6e90\u8fc7\u53bb\u5e38\u5e38\u56fa\u5b9a\u5728\u4e00\u4e2a\u9759\u6001\u6570\u5b57\u4e0a\uff1a\u5927\u7ea61\u4e07\u4eba\u6b7b\u4ea1\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u5632\u7b11\u90a3\u4e2a\u3002\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u5b83\u4e00\u5b9a\u8981\u9ad8\u5f97\u591a\uff0c\u4f46\u8fd9\u53ea\u662f\u60f9\u607c\u4e86\u6211\u4eec\u7684\u65b0\u95fb\u8bb0\u5f55\u6765\u6e90\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u8bd5\u56fe\u7528\u201c\u81f3\u5c11\u201d10000\u4e2a\u9762\u5b50\u7684\u516c\u5f0f\u6765\u634f\u9020\u6570\u5b57\uff0c\u4f46\u5373\u4f7f\u662f\u79c3\u9e70\u6709\u65f6\u4e5f\u4f1a\u5455\u5410\uff0c\u4eba\u4eec\u4e5f\u538c\u5026\u4e86\u542c\u5230\u8fd9\u6837\u4e00\u4e2a\u660e\u663e\u7684\u51b7\u9177\u8c0e\u8a00\u3002\n\u90a3\u4e48\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6709\u591a\u5c11\u4e5f\u95e8\u4ec0\u53f6\u6d3e\u65e0\u540d\u5c0f\u5352\u6b7b\u4ea1\uff1f\u6709\u591a\u5c11\u4e0d\u65b9\u4fbf\u7684\u8eab\u4f53\uff0c\u4e0d\u6210\u6bd4\u4f8b\u7684\u513f\u7ae5(\u56e0\u4e3a\u4ed6\u4eec\u603b\u662f\u7b2c\u4e00\u4e2a\u6b7b\u4e8e\u9965\u8352)\u57cb\u846c\u5728\u90a3\u7247\u5ca9\u77f3\u5730\u4e0a\uff0c\u4e0d\u8ba1\u5176\u6570\uff1f\n\u751a\u81f3\u6ca1\u6709\u4eba\u518d\u52aa\u529b\u731c\u6d4b\u4e86\uff0c\u56e0\u4e3a\u897f\u65b9\u5a92\u4f53\u6ca1\u6709\u4eba\u5bf9\u6b64\u611f\u5174\u8da3\u3002\u5c24\u5176\u662f\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u7684\u5341\u5b57\u519b\u6218\u58eb\u3002\u5c31\u4ed6\u4eec\u548c\u4ed6\u4eec\u5728\u7ebd\u7ea6\u65f6\u62a5\u548cBBC\u7684\u4f19\u4f34\u800c\u8a00\uff0c\u8fd9\u4e9b\u6b7b\u4ea1\u5e76\u4e0d\u91cd\u8981\u3002\u4e0d\uff0c\u90a3\u662f\u9519\u8bef\u7684\uff1a\u8fd9\u4e9b\u6b7b\u4ea1\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u70e6\u607c\uff0c\u4e00\u79cd\u5206\u5fc3\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6709\u8bb0\u5f55\u7684\u65b0\u95fb\u7f51\u7ad9\u4e0d\u80fd\u4e0d\u538c\u5176\u70e6\u5730\u62a5\u9053\u4e5f\u95e8\u5728\u591a\u5e74\u7684\u5c01\u9501\u3001\u7a7a\u88ad\u548c\u4eba\u4e3a\u9965\u8352\u4e4b\u540e\u6b7b\u4ea1\u7684\u6570\u5341\u4e07\u4eba\u3002\u5b8c\u5168\u4e0d\u662f\u90a3\u6837\u7684\u3002\u4ed6\u4eec\u5728\u4e4e\uff0c\u597d\u5427\uff1b\u4ed6\u4eec\u5f88\u607c\u706b\u3002\n\u56e0\u4e3a\u90a3\u4e9b\u6b7b\u53bb\u7684\u4eba\u90fd\u662f\u65e0\u540d\u5c0f\u5352\uff0c\u800c\u4e14\u662f\u6700\u4e0d\u5408\u9002\u7684\u65e0\u540d\u5c0f\u5352\u3002\u4ed6\u4eec\u662f\u4ec0\u53f6\u6d3e\uff0c\u5c31\u5229\u96c5\u5f97\u3001\u534e\u76db\u987f\u7279\u533a\u3001\u4f26\u6566\u548c\u8036\u8def\u6492\u51b7\u800c\u8a00\uff0c\u4ec0\u53f6\u6d3e\u90fd\u662f\u6211\u4eec\u7684\u654c\u4eba\u3002\u5f53\u4e00\u540d\u4ec0\u53f6\u6d3e\u4e5f\u95e8\u513f\u7ae5\u6b7b\u4e8e\u970d\u4e71\u7b49\u5bb9\u6613\u6cbb\u6108\u7684\u75be\u75c5\u65f6\uff0c\u8fd9\u4e0d\u4ec5\u4e0d\u91cd\u8981\uff0c\u800c\u4e14\u662f\u654c\u4eba\u7684\u5ba3\u4f20\uff0c\u56e0\u4e3a\u80e1\u585e--\u5982\u679c\u4f60\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u5b89\u8428\u9c81\u62c9(Ansarullah)--\u662f\u4e5f\u95e8\u4e3b\u8981\u7684\u4ec0\u53f6\u6d3e\u6c11\u5175--\u662f\u5b98\u65b9\u7684\u201c\u4f0a\u6717\u4ee3\u7406\u4eba\u201d\u3002\n\u5f53\u7136\uff0c\u4ed6\u4eec\u4e0d\u662f\u3002\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u4e5f\u95e8\u897f\u5317\u90e8\u7684\u4ec0\u53f6\u6d3e\u4e00\u76f4\u5728\u4e0e\u4e2d\u90e8\u6c99\u7279\u4eba\u7684\u6545\u4e61\u7eb3\u4f0a\u5fb7\u4eba\u4f5c\u6218\u3002\n\u7eb3\u5409\u5170\u572820\u4e16\u7eaa30\u5e74\u4ee3\u4e4b\u524d\u662f\u4e5f\u95e8\u7684\u4e00\u5ea7\u57ce\u5e02\uff0c\u5f53\u65f6\u66b4\u53d1\u6237\u6c99\u7279\u4eba\u4ece\u4e00\u8d2b\u5982\u6d17\u7684\u4e5f\u95e8\u4eba\u624b\u4e2d\u79df\u4e86\u8fd9\u5ea7\u57ce\u5e02\uff0c\u5e76\u5728\u79df\u7ea6\u5230\u671f\u65f6\u5e72\u8106\u62d2\u7edd\u5f52\u8fd8\u3002\u6c99\u7279\u7684\u53cd\u5e94\u5f88\u7b80\u5355\uff1a\u201c\u54e6\uff0c\u4f60\u60f3\u8ba9\u6211\u4eec\u9001\u56de\u7eb3\u5409\u5170\uff1f\u89c1\u89c1\u6211\u4eec\u7684\u65b0\u670b\u53cb\uff0c\u7f8e\u56fd\u548c\u82f1\u56fd\u519b\u961f\u3002\u6211\u4eec\u73b0\u5728\u4ed8\u7ed9\u4ed6\u4eec\u4fdd\u62a4\u8d39\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8d8a\u8fc7\u65b0\u8fb9\u754c\u4e00\u6b65\uff0c\u4ed6\u4eec\u4f1a\u628a\u4f60\u70b8\u6210\u788e\u7247\u3002\u201c\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0c\u5229\u96c5\u5f97\u3001\u534e\u76db\u987f\u548c\u4f26\u6566\u4e4b\u95f4\u7684\u8054\u76df\u53ea\u4f1a\u52a0\u6df1\u3002\u963f\u62c9\u4f2f\u5de6\u7ffc\u5206\u5b50\u5728\u4e5f\u95e8\u3001\u963f\u66fc\u548c\u6c99\u7279\u672c\u8eab\u90fd\u5df2\u88ab\u6d88\u706d\u3002\u8fd9\u51e0\u5929\u4e00\u76f4\u662f\u8150\u8d25\u7684\u4f0a\u65af\u5170\u4e3b\u4e49\u8005/\u4fdd\u7687\u6d3e\u3002\n\u8fd9\u5bf9\u534e\u76db\u987f\u90ae\u62a5/\u7ebd\u7ea6\u65f6\u62a5/\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u5de5\u4f5c\u4eba\u5458\u6765\u8bf4\u662f\u5f88\u597d\u7684\u3002\u4ed6\u4eec\u5bf9\u8fd9\u4e00\u5207\u4ece\u672a\u9047\u5230\u8fc7\u4efb\u4f55\u95ee\u9898\u3002\u4ed6\u4eec\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\u652f\u6301\u6c99\u7279\u201c\u8054\u76df\u201d\u5c01\u9501\u9488\u5bf9\u4e5f\u95e8\u897f\u5317\u90e8\u7684\u836f\u54c1\u548c\u98df\u54c1\uff1b\u5b69\u5b50\u4eec\u6b7b\u4e8e\u4e2d\u4e16\u7eaa\u75be\u75c5\u7684\u89c6\u9891\u6ca1\u6709\u95ee\u9898\uff1b\u6c99\u7279\u8f70\u70b8\u970d\u4ee3\u8fbe(\u4e3a\u4e5f\u95e8\u897f\u5317\u90e8\u670d\u52a1\u7684\u552f\u4e00\u6e2f\u53e3)\u6ca1\u6709\u95ee\u9898\uff1b\u7f8e\u56fd\u6d77\u519b\u6b63\u5728\u5de1\u903b\uff0c\u4ee5\u6267\u884c\u6c99\u7279\u5bf9\u98df\u54c1\u548c\u836f\u54c1\u8fdb\u5165\u4ec0\u53f6\u6d3e\u7701\u4efd\u7684\u5c01\u9501\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u5f53\u8d3e\u8fc8\u52d2\u00b7\u5361\u8212\u5409(Jamal Khashoggi)\u57282018\u5e74\u88ab\u6740\u65f6\uff0c\u8fd9\u79cd\u4eba\u4e3a\u5c01\u9501\u548c\u9965\u8352\u5df2\u7ecf\u6301\u7eed\u4e86\u8fd1\u4e09\u5e74\u3002\u6ca1\u6709\u4eba\u77e5\u9053\u8fd9\u4e9b\u5e74\u5230\u5e95\u6709\u591a\u5c11\u4ec0\u53f6\u6d3e\u4e5f\u95e8\u4eba\u6b7b\u4ea1\uff0c\u56e0\u4e3a\u6ca1\u6709\u91cd\u8981\u7684\u4eba\u60f3\u77e5\u9053\u3002\u6211\u5728\u8fd9\u91cc\u7528\u201c\u4e0d\u60f3\u77e5\u9053\u201d\u4f5c\u4e3a\u53ca\u7269\u52a8\u8bcd\uff1b\u4e0d\u662f\u4ed6\u4eec\u201c\u6ca1\u80fd\u201d\u53d1\u73b0\uff0c\u800c\u662f\u4ed6\u4eec\u7684\u653f\u7b56\u662f\u5f7b\u5e95\u62b5\u5236\u4e5f\u95e8\u7684\u6050\u6016\u6545\u4e8b\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u7092\u4f5c\u7684\u5927\u591a\u662f\u6765\u81ea\u53d9\u5229\u4e9a\u7684\u80e1\u8a00\u4e71\u8bed\u6050\u6016\u6545\u4e8b\uff0c\u8fd9\u6070\u597d\u7b26\u5408\u534e\u76db\u987f/\u5229\u96c5\u5f97/\u4f26\u6566\u5361\u7279\u5c14\u7684\u5229\u76ca(\u8fd8\u6709\uff0c\u4ee4\u4eba\u607c\u706b\u4f46\u4e0d\u662f\u975e\u5e38\u91cd\u8981\u7684\u662f\uff0c\u8bb8\u591a\u89c9\u9192\u7684\u5de6\u7ffc\u767d\u75f4\u4ece\u672a\u6ce8\u610f\u5230\u4ed6\u4eec\u4e3a\u5361\u7279\u5c14\u505a\u4e86\u5f88\u597d\u7684\u516c\u5173\u5de5\u4f5c)\u3002\n\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5f00\u59cb\u6211\u4eec\u7684\u5b9e\u9a8c\u4e86\u3002\u8fd9\u4e2a\u6545\u4e8b\u7684\u7b2c\u516d\u6bb5\u63d0\u5230\u4e86\u8d3e\u8fc8\u52d2\u00b7\u5361\u8212\u5409(Jamal Khashoggi)\u3002\u90a3\u4e5f\u95e8\u6210\u5343\u4e0a\u4e07\u7684\u65e0\u540d\u5c0f\u5352\u5462\uff1f\n\u5728\u8fd9\u7bc750\u6bb5\u7684\u6545\u4e8b\u4e2d\uff0c\u4ed6\u4eec\u603b\u5171\u88ab\u63d0\u5230\u4e86\u4e09\u6b21\u3002\u5c31\u50cf\u6e29\u6587\u5c14\u96c5\u7684\u8bb0\u8005\u559c\u6b22\u8bf4\u7684\u90a3\u6837\uff0c\u603b\u662f\u975e\u5e38\u7b80\u77ed\u5730\u201c\u987a\u4fbf\u201d\uff0c\u5e76\u7528\u201c\u53e3\u89d2\u201d\u4e4b\u7c7b\u7684\u672f\u8bed\u6765\u63cf\u8ff0\u8fd9\u573a\u6df7\u4e71\uff0c\u5c31\u50cf\u662f\u70f9\u996a\u8282\u76ee\u4e0a\u7684\u4e00\u4e2a\u523a\u8033\u7684\u65f6\u523b\u3002\n\u8fd9\u662f\u4e09\u4e2a\u63d0\u6cd5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u3002\u8fd9\u4e00\u6761-\u7b2c\u4e00\u6761\uff0c\u8bb0\u4f4f\uff01-\u5728\u7b2c\u516b\u6bb5\uff0c\u8d3e\u8fc8\u52d2\u00b7\u5361\u8212\u5409(Jamal Khashoggi)\u53bb\u4e16\u540e\u7684\u4e24\u6bb5-\u5728NFL\u9009\u79c0\u6761\u6b3e\u4e2d\uff0c\u662f\u7b2c\u56db\u8f6e\u6216\u7b2c\u4e94\u8f6e\u9009\u62e9\u3002\u53e6\u8bf7\u6ce8\u610f\u6b64\u5904\u7684\u63aa\u8f9e\uff1a\n\u201c\u7136\u540e\uff0c\u90bb\u56fd\u4e5f\u95e8\u7684\u5185\u6218\u5df2\u7ecf\u8ba9\u6c99\u7279\u7684\u56fd\u5e93\u6d41\u5931\u4e86\u4e94\u5e74\u591a\uff0c\u73b0\u5728\u6ca1\u6709\u4efb\u4f55\u5b9e\u5b9e\u5728\u5728\u7684\u6536\u83b7\uff0c\u4e0e\u5361\u5854\u5c14\u7684\u53e3\u89d2\u7834\u574f\u4e86\u7531\u516d\u4e2a\u56fd\u5bb6\u7ec4\u6210\u7684\u6d77\u6e7e\u963f\u62c9\u4f2f\u5408\u4f5c\u59d4\u5458\u4f1a(GCC)\u7684\u8868\u9762\u56e2\u7ed3\u3002\u201d\n\u6ca1\u6709\u5173\u4e8e\u6709\u591a\u5c11\u4eba\u6b7b\u4ea1\uff0c\u6709\u591a\u5c11\u6b7b\u8005\u662f\u5e73\u6c11\uff0c\u6216\u8005\u6709\u591a\u5c11(\u591a\u5c11)\u9965\u8352\u6b7b\u8005\u662f\u513f\u7ae5\u3002\u5bf9\u6b64\u4e00\u65e0\u6240\u77e5\u3002\u554a\uff0c\u4f46\u662f\u8fd9\u91cc\u6709\u5173\u4e8e\u8840\u7684\u4e1c\u897f\uff01\u201c\u2026\u3002[T]\u90bb\u56fd\u4e5f\u95e8\u7684\u6218\u4e89\u5df2\u7ecf\u8ba9\u6c99\u7279\u7684\u56fd\u5e93\u635f\u5931\u4e86\u4e94\u5e74\uff0c\u73b0\u5728\u662f\u2026\u201c\u3002\u55ef\uff0c\u8fd9\u662f\u533b\u5b66\u4e0a\u7684\u65b0\u5947\u73a9\u610f\u513f\u3002\u4e00\u4e9b\u5b09\u76ae\u58eb\u8bf4\u201c\u53ea\u6709\u5973\u4eba\u624d\u4f1a\u6d41\u8840\u201d\uff0c\u4f46\u5728\u8fd9\u91cc\u5374\u53d1\u73b0\u53ea\u6709\u201c\u91d1\u5e93\u201d\u624d\u4f1a\u6d41\u8840\u3002\u53ef\u4ee5\u8bf4\uff0c\u201c\u53ea\u6709\u91d1\u94b1\u624d\u4f1a\u6d41\u8840\u201d\u3002\u4e5f\u95e8\u4eba\uff0c\u4e0d\u662f\uff1b\u201c\u91d1\u5e93\u201d\u662f\u3002\n\u4f60\u77e5\u9053\u8d22\u653f\u653e\u8840\u6700\u7cdf\u7cd5\u7684\u662f\u4ec0\u4e48\u5417\uff1f\u8fd9\u4e00\u5207\u90fd\u662f\u4e3a\u4e86\u201c\u6ca1\u6709\u5b9e\u5b9e\u5728\u5728\u7684\u5229\u76ca\u201d\u3002\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9879\u7cdf\u7cd5\u7684\u6295\u8d44\uff0c\u6bd4\u8d77\u6570\u5341\u4e07\u4eba\u7684\u6b7b\u4ea1\uff0c\u8fd9\u662f\u4e00\u79cd\u4e25\u91cd\u5f97\u591a\u7684\u7f6a\u8fc7\u3002\n\u73b0\u5728\u662f\u7b2c\u4e8c\u6b21\u63d0\u5230\u4e5f\u95e8\u3002\u8fd9\u4e00\u6bb5\u4e0b\u964d\u4e86\u5f88\u591a\uff0c\u5927\u7ea6\u662f\u7b2c32\u6bb5(\u8bb0\u4f4f\uff0c50\u6bb5\u4e2d\u670950\u6bb5)-\u8fd9\u4f7f\u5f97\u5b83\u5728NFL\u672f\u8bed\u4e2d\u50cf\u662f\u7b2c\u516b\u8f6e\u9009\u79c0\u3002\n\u201c\u4e5f\u95e8\u6218\u4e89\uff0c\u90e8\u5206\u662f\u7531\u7f8e\u56fd\u548c\u82f1\u56fd\u63d0\u4f9b\u7684\u6c99\u7279\u6218\u673a\u4ece\u7a7a\u4e2d\u8d77\u8bc9\u7684\uff0c\u5404\u65b9\u90fd\u72af\u4e0b\u4e86\u6240\u8c13\u7684\u6218\u4e89\u7f6a\u3002\u201d\n\u8fd9\u4e00\u70b9\u8ba9\u6211\u6076\u5fc3(\u6211\u66fe\u572819\u4e16\u7eaa40\u5e74\u4ee3\u672b\u7684\u5927\u9965\u8352\u671f\u95f4\u505a\u8fc7\u4e00\u6b21\u82f1\u56fd\u65b0\u95fb\u4e1a\u7684\u8c03\u67e5\uff0c\u6240\u4ee5\u6211\u6709\u4e00\u4e2a\u575a\u5f3a\u7684\u76f4\u89c9\u3002)\u3002\u4f60\u4f1a\u6ce8\u610f\u5230\u5b83\u662f\u88ab\u6c99\u7279\u4eba\u201c\u8d77\u8bc9\u201d\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u8868\u8fbe\u201c\u4ed6\u4eec\u5165\u4fb5\u4e5f\u95e8\u201d\u7684\u65b9\u5f0f\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u5bf9\u8fd9\u6b21\u8d77\u8bc9\u53ea\u8d1f\u6709\u201c\u90e8\u5206\u201d\u8d23\u4efb(\u5c3d\u7ba1\u4ed6\u4eec\u7684\u201c\u610f\u613f\u8054\u76df\u201d\u6bd4\u6211\u4eec\u5728\u4f0a\u62c9\u514b\u66f4\u4e0d\u60c5\u613f\uff0c\u4e5f\u66f4\u65e0\u7528)\u3002\n\u4e3a\u4e86\u7ed9\u8fd9\u4e00\u4ee4\u4eba\u53cd\u611f\u7684\u3001\u5feb\u901f\u6697\u793a\u79cd\u65cf\u706d\u7edd\u7684\u884c\u4e3a\u591a\u52a0\u4e00\u5c42\u7c89\u9970\uff0c\u52a0\u5fb7\u7eb3\u5728\u8fd9\u6bb5\u8bdd\u7684\u5f00\u5934\u5199\u9053\uff1a\u201c\u6240\u6709\u5404\u65b9\u90fd\u72af\u4e0b\u4e86\u6218\u4e89\u548c\u7f6a\u884c\u3002\u201d\u662f\u7684\uff0c\u5f17\u5170\u514b\uff0c\u4e00\u4e2a\u548c\u53e6\u4e00\u4e2a\u4e00\u6837\u7cdf\u7cd5\uff0c\u5bf9\u5427\uff1f\u5373\u4f7f\u6709\u4e00\u65b9\uff0c\u6709\u94b1\u7684\u4e00\u65b9\uff0c\u62e5\u6709\u6240\u6709\u7684\u6b66\u5668\uff0c\u6240\u6709\u7684\u653b\u51fb\u6027\u706b\u529b\uff0c\u4ee5\u53ca\u6240\u6709\u7684\u54c8\u5df4\u72d7\u5a92\u4f53\u90fd\u7ad9\u5728\u4ed6\u4eec\u8fd9\u8fb9\u3002\u8fd9\u662f\u4e2a\u8001\u628a\u620f\uff0c\u8fd9\u4e2a\u201c\u4e00\u4e2a\u8ddf\u53e6\u4e00\u4e2a\u4e00\u6837\u574f\u201d\uff0c\u4f46\u5b83\u7ecf\u5e38\u594f\u6548\u3002\n\u554a\uff0c\u4f46\u662f\u52a0\u5fb7\u7eb3\u627f\u8ba4\u4e5f\u95e8\u7684\u79cd\u65cf\u706d\u7edd\u4e8b\u4ef6\u5e26\u6765\u4e86\u95ee\u9898\u3002\u4ec0\u4e48\u6837\u7684\u95ee\u9898\uff1f\u5f53\u7136\u662f\u516c\u5173\u95ee\u9898\uff01\u4ed6\u5728\u4e0b\u4e00\u6bb5\u8bf4\uff0c\u7531\u4e8e\u6211\u4eec\u5728BBC\u7684\u670b\u53cb\u4eec\u4f3c\u4e4e\u5b8c\u5168\u65e0\u6cd5\u7406\u89e3\u7684\u539f\u56e0\uff0cKSA\u5bf9\u4e00\u573a\u6218\u4e89\u7684\u201c\u8d77\u8bc9\u201d\u5df2\u7ecf\u5bfc\u81f4\u4e86\u4e00\u4e9b\u8d1f\u9762\u7684\u65b0\u95fb\u62a5\u9053\u3002\n\u201c\u4f46\u8fd9\u4e9b\u7a7a\u88ad\u9020\u6210\u7684\u5e73\u6c11\u6b7b\u4ea1\u4eba\u6570\u5728\u534e\u76db\u987f\u548c\u5176\u4ed6\u5730\u65b9\u62db\u81f4\u8d8a\u6765\u8d8a\u591a\u7684\u6279\u8bc4\u3002\u201d\n\u8fd9\u662f\u7b2c\u4e00\u4e2a\u8bcd\uff0c\u201c\u4f46\u662f\u2026\u201d\u8fd9\u5c31\u8ba9\u6211\u660e\u767d\u4e86\u3002\u201c\u4f46\u662f\u201d\uff1f\u4e3a\u4ec0\u4e48\u662f\u201c\u4f46\u662f\u201d\uff1f\u5927\u58f0\u6717\u8bfb\uff0c\u5e26\u4e0a\u201c\u4f46\u662f\u201d\uff0c\u7136\u540e\u4e0d\u5e26\u3002\u4f60\u4f1a\u770b\u5230\uff0c\u5728\u201c\u4f46\u662f\u201d\u7684\u5f00\u5934\uff0c\u8fd9\u53e5\u8bdd\u6697\u793a\u7a7a\u88ad\u3001\u4eba\u4e3a\u7684\u9965\u8352\u7b49\u7b49\u672c\u8eab\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u95ee\u9898\u662f\u201c\u4f46\u662f\u2026\u201d(\u4f46\u662f\u2026\u2026)\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u7a7a\u88ad\u3001\u4eba\u4e3a\u7684\u9965\u8352\u7b49\u7b49\u672c\u8eab\u90fd\u4e0d\u662f\u95ee\u9898\uff0c\u95ee\u9898\u662f\u201c\u4f46\u662f\u2026\u2026\u201d\u5509\uff0c\u8fd9\u4e9b\u5b8c\u5168\u6709\u6548\u7684\u653f\u7b56\u62db\u81f4\u4e86\u201c\u534e\u76db\u987f\u548c\u5176\u4ed6\u5730\u65b9\u8d8a\u6765\u8d8a\u591a\u7684\u6279\u8bc4\u201d\u3002\n\u5728\u6211\u5411\u76d1\u89c6\u5668\u5410\u53e3\u6c34\u4e4b\u524d\uff0c\u6211\u4eec\u6700\u597d\u7ee7\u7eed\u8c08\u7b2c\u4e09\u6b21\u4e5f\u662f\u6700\u540e\u4e00\u6b21\u63d0\u5230\u4e5f\u95e8\u3002\u56e0\u6b64\uff0c\u5728\u6545\u4e8b\u7b2c39\u6bb5\u4e0b\u65b9\u7684\u56fe\u7247\u8bf4\u660e\u4e2d(NFL\u672f\u8bed\uff0cUDFA)\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\u201c\u4e5f\u95e8\u957f\u8fbe\u4e94\u5e74\u7684\u6218\u4e89\u8ba9\u6c99\u7279\u4ed8\u51fa\u4e86\u60e8\u91cd\u4ee3\u4ef7\u201d[\u56fe\u7247\u8bf4\u660e]\u3002\n\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u8fd9\u91cc\u662f\u8fd9\u6837\u7684-\u56e0\u4e3a\uff0c\u5728\u6211\u7b2c\u4e00\u6b21\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u540e\u7684\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0cBBC\u6539\u53d8\u4e86\u6807\u9898\uff0c\u73b0\u5728\u7684\u6807\u9898\u662f\u201c\u4e5f\u95e8\u4e94\u5e74\u5185\u6218\u201d\uff0c\u4f46\u6536\u6548\u751a\u5fae\u3002\n\u554a\uff0cBBC\u590d\u5370\u53f0\u7684\u90a3\u4e9b\u72e1\u733e\u7684\u72d7\uff01\u4ed6\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u632b\u8d25\u4e86\u6211\u4eec\u7684\u4fee\u8f9e\u5206\u6790\uff0c\u4f46\u4ed6\u4eec\u9519\u4e86\u3002\u56e0\u4e3a\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6587\u5b57\u5e55\u548c\u4fee\u6539\u540e\u7684\u5b57\u5e55\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u662f\u4e00\u9996\u8bd7\u4e2d\u7684\u8bd7\u53e5\u4e00\u6837\u3002\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u542f\u53d1\u6027\u7684\u53d8\u5316\u3002\u5c55\u54c1A\u79f0\uff0c\u4f0a\u62c9\u514b\u6218\u4e89\u8ba9\u6c99\u7279\u963f\u62c9\u4f2f\u4ed8\u51fa\u4e86\u9ad8\u6602\u7684\u4ee3\u4ef7\uff0c\u8fd9\u8ba9\u5bf9\u91d1\u94b1\u7684\u5f3a\u8c03\u53d8\u5f97\u6709\u70b9\u8fc7\u4e8e\u660e\u786e\u4e86\u3002(\u5de5\u4e1a\u548c\u4fe1\u606f\u5316\u90e8\u7535\u5b50\u79d1\u5b66\u6280\u672f\u60c5\u62a5\u7814\u7a76\u6240\u9648\u7693)\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u4f5c\u8005\u771f\u6b63\u7684\u4f18\u5148\u4e8b\u9879\uff0c\u4f46\u6709\u4eba-\u8bfb\u8005\u6216\u7f16\u8f91\uff0c\u4ed8\u8d39\u8868\u60c5\u6216\u5176\u4ed6\u4ec0\u4e48-\u5bf9\u6b64\u72b9\u8c6b\u4e0d\u51b3\uff0c\u51b3\u5b9a\u901a\u8fc7\u8c08\u8bba\u5df2\u7ecf\u53d6\u5f97\u7684\u6210\u5c31\uff0c\u800c\u4e0d\u662f\u5229\u96c5\u5f97\u4ed8\u51fa\u7684\u4ee3\u4ef7\uff0c\u6765\u6a21\u7cca\u5bf9\u90a3\u4e9b\u906d\u53d7\u82e6\u96be\u7684\u4eba\u7684\u8d64\u88f8\u88f8\u7684\u6f20\u4e0d\u5173\u5fc3\u3002\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6f02\u4eae\u3001\u5e73\u6de1\u7684\u8c13\u8bed\u201c\u2026\u3002\u4f46\u6536\u6548\u751a\u5fae\u3002\u201c\u3002\n\u6240\u4ee5\u73b0\u5728\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5e76\u4e0d\u662f\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\u6218\u4e89\u5bf9\u514b\u683c\u52c3\u6765\u8bf4\u4ee3\u4ef7\u592a\u9ad8\uff0c\u800c\u662f\u8bf4\u8fd9\u662f\u4e00\u573a\u6d6a\u8d39\u7684\u5927\u5c60\u6740\uff0c\u4e00\u573a\u6ca1\u6709\u201c\u5b9e\u73b0\u201d\u4efb\u4f55\u4e8b\u60c5\u7684\u5927\u5c60\u6740\u3002\u8bd5\u56fe\u4ece\u4e2d\u627e\u5230\u610f\u4e49\u662f\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\uff1b\u6210\u529f\u7684\u201c\u6210\u5c31\u201d\u662f\u4ec0\u4e48\uff1f\u6d88\u706d\u4e5f\u95e8\u897f\u5317\u90e8\uff1f\u7c89\u788e\u4e5f\u95e8\u6240\u6709\u4ec0\u53f6\u6d3e\u62b5\u6297\u529b\u91cf\uff1f\u6c99\u7279\u79f0\u9738\u5168\u56fd\uff1f\n\u4f46\u6211\u662f\u5728\u5439\u6bdb\u6c42\u75b5\u3002\u8bfb\u8005\u4e0d\u4f1a\u95ee\u8fd9\u6837\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u4f1a\u5728\u201c\u6218\u4e89\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u201d\u8fd9\u6837\u7684\u53f0\u8bcd\u4e0a\u6536\u96c6\u4e00\u4e9b\u542b\u7cca\u7684\u5584\u610f\u7684\u4e1c\u897f\u3002\u8ba9\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u8131\u8eab\u3002\u770b\u89c1?\u3002Beeb\u5e76\u4e0d\u662f\u5b8c\u5168\u75f4\u8ff7\u4e8e\u6c99\u7279\u7684\u8d22\u52a1\uff01\n\u4f46\u65b0\u7684\u6807\u9898\u662f\u5e73\u8861\u7684\uff0c\u4ee5\u7ebd\u7ea6\u65f6\u62a5/\u534e\u76db\u987f\u90ae\u62a5/\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u90a3\u79cd\u8ff7\u4eba\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u63d0\u5230\u6b7b\u4ea1\u7684\u4e5f\u95e8\u4eba\u3002\u5b83\u4ecd\u7136\u53ea\u4ece\u6c99\u7279\u7684\u89d2\u5ea6\u51fa\u53d1\u3002\n\u4ece\u4e5f\u95e8\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u573a\u6218\u4e89\u53d6\u5f97\u4e86\u76f8\u5f53\u5927\u7684\u201c\u6210\u5c31\u201d\uff0c\u5728\u67d0\u79cd\u4e25\u5cfb\u7684\u610f\u4e49\u4e0a\uff1a\u5bfc\u81f4\u6570\u5341\u4e07\u4eba\u6b7b\u4ea1\uff0c\u4f7f\u4e0b\u4e00\u4ee3\u9677\u5165\u762b\u75ea(\u56e0\u4e3a\u6b63\u5982\u7814\u7a76\u663e\u793a\u7684\u90a3\u6837\uff0c\u6ca1\u6709\u4e00\u4e2a\u5b69\u5b50\u80fd\u771f\u6b63\u4ece\u7ae5\u5e74\u7684\u957f\u671f\u9965\u997f\u4e2d\u6062\u590d\u8fc7\u6765)\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u662f\u6492\u65e6\uff0c\u4f60\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u662f\u514b\u8428\u7684\u4e00\u9879\u201c\u6210\u5c31\u201d\uff1a\u901a\u8fc7\u963b\u788d\u4e00\u4ee3\u4e5f\u95e8\u4ec0\u53f6\u6d3e\u4eba\u7684\u5fc3\u7406\u548c\u8eab\u4f53\u53d1\u80b2\uff0c\u514b\u8428\u7528\u519b\u4e8b\u672f\u8bed\u8bf4\uff0c\u51fb\u4e2d\u4e86\u201c\u7b2c\u4e8c\u68af\u961f\u201d\uff0c\u5373\u5c06\u5230\u6765\u7684\u4e00\u4ee3\u6f5c\u5728\u654c\u4eba\u3002\n\u73b0\u5728\uff0c\u7528\u4fee\u8f9e\u7684\u65b9\u5f0f\u601d\u8003\uff0c\u731c\u731c\u4e0b\u4e00\u5f20\u4e3a\u6545\u4e8b\u589e\u8272\u7684\u7167\u7247\u53ef\u80fd\u662f\u4ec0\u4e48\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u8bb0\u5f55\u4e86\u82f1\u56fd/\u6c99\u7279\u5171\u8bc6\u7684\u65b0\u95fb\u7f51\u7ad9\u3002\u6240\u4ee5\uff0c\u4ec0\u4e48\u4f1a\u63d0\u9192\u8bfb\u8005\uff0c\u6bd5\u7adf\uff0cMBS\u662f\u4e00\u4e2a\u6539\u9769\u8005\uff0c\u4e00\u4e2a\u714e\u86cb\u5377\u7684\u5236\u9020\u8005\uff0c\u5c3d\u7ba1\u4ed6\u628a\u6240\u6709\u7834\u788e\u548c\u8840\u6dcb\u6dcb\u7684\u9e21\u86cb\u6e85\u5230\u4e86\u98ce\u666f\u4e0a\u3002\u4ec0\u4e48\u4f1a\u663e\u793a\u4ed6\u8fdb\u6b65\u7684\u4e00\u9762\uff1f\n\u662f\u7684\uff0c\u4e00\u5f20\u6c99\u7279\u7cbe\u82f1\u5bcc\u5a46\u5f00\u8f66\u7684\u7167\u7247\u3002\u8fd9\u786e\u5b9e\u662f\u4e0b\u4e00\u5f20\u7167\u7247\uff1a\n\u6240\u4ee5\uff0c\u5927\u5bb6\u770b\uff0cMBS\u7684\u4e25\u5389\u4e4b\u7231\u7ec8\u7a76\u662f\u6709\u597d\u5904\u7684\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u6545\u4e8b\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u552f\u4e00\u771f\u6b63\u7684\u9519\u8bef\u662f\u6740\u5bb3\u4e86\u5361\u8212\u5409\uff0c\u4e00\u4e2a\u771f\u6b63\u7684\u4eba\uff0c\u4e00\u4e2a\u5728\u5168\u7403\u9ed1\u624b\u515a\u4e2d\u9020\u5c31\u7684\u4eba\u3002\u6b7b\u4ea1\u5f88\u91cd\u8981\u3002\u6b7b\u53bb\u7684\u4e5f\u95e8\u4eba\uff1f\u4ed6\u4eec\u662f\u4ec0\u53f6\u6d3e\uff1b\u4ed6\u4eec\u662f\u201c\u4eb2\u4f0a\u6717\u7684\u201d\uff1b\u6700\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u975e\u5e38\u8d2b\u7a77\u3002\n\u4f46\u662f\u6211\u4eec\uff0c\u6211\u4eec\u662f\u8fd9\u91cc\u7684\u79d1\u5b66\u5bb6\u3002\u6211\u4eec\u5fc5\u987b\u5f04\u6e05\u695a\u8fd9\u4e2a\u6bd4\u4f8b\uff1a\u6709\u591a\u5c11\u4ec0\u53f6\u6d3e\u7a77\u4eba\u6b7b\u4ea1\u624d\u80fd\u7b49\u4e8e\u4e00\u4e2a\u5361\u8212\u5409\uff1f\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u5bf9\u4e5f\u95e8\u53d1\u751f\u4e86\u591a\u5c11\u4e0d\u8ba1\u5176\u6570\u7684\u6b7b\u4ea1\u4eba\u6570\u505a\u51fa\u4e00\u4e9b\u4f30\u8ba1\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5f88\u5c11\u6709\u6b7b\u8005\u5728\u5f15\u8d77\u516c\u4f17\u5173\u6ce8\u7684\u7a7a\u88ad\u4e2d\u4e27\u751f\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u4eba\u65e0\u7591\u662f\u6b8b\u9177\u7684\u3002\n\u4e5f\u95e8\u7684\u771f\u6b63\u6740\u624b\u662f\u9965\u8352\u548c\u5bf9\u57fa\u672c\u836f\u7269\u7684\u5c01\u9501\u3002\u8fd9\u79cd\u6280\u672f\u4f1a\u6740\u6b7b\u6216\u81f4\u6b8b\u6574\u4e2a\u4eba\u7fa4\uff0c\u4ece\u5e74\u5e7c\u7684\u513f\u7ae5\u5f00\u59cb(BBC\u5e94\u8be5\u6bd4\u4efb\u4f55\u4eba\u90fd\u6e05\u695a)\u3002\n\u4f46\u201c\u4e0d\u4e3a\u4eba\u77e5\u201d\u7684\u610f\u601d\u662f\u201c\u4e0d\u4e3a\u4eba\u77e5\u201d\uff0c\u5bf9\u5427\uff1f\u6211\u4eec\u600e\u4e48\u80fd\u731c\u5230\u5462\uff1f\u8fd9\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u8bb0\u5f55\u5728\u6848\u7684\u4eba\u4e0d\u60f3\u8ba9\u4f60\u53bb\u60f3\u8fd9\u4ef6\u4e8b\u3002\u4f46\u6211\u4eec\u6709\u4e00\u4e9b\u52c7\u6562\u7684\u4eba\u613f\u610f\u8bf4\u51fa\u4e00\u4e9b\u6570\u5b57\u3002\u4e00\u4e2a\u8bd5\u56fe\u5728\u4e5f\u95e8\u5de5\u4f5c\u7684\u975e\u653f\u5e9c\u7ec4\u7ec7\u7684\u4ee3\u8868\u4f30\u8ba1\uff0c\n\u201c\u2026\u3002\u636e\u4f30\u8ba1\uff0c\u6bcf\u5468\u67091000\u540d\u513f\u7ae5\u6b7b\u4e8e\u8179\u6cfb\u3001\u8425\u517b\u4e0d\u826f\u548c\u547c\u5438\u9053\u611f\u67d3\u7b49\u53ef\u9884\u9632\u7684\u6740\u624b\u3002\u201c\n\u90a3\u662f\u57282016\u5e74\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8ba1\u7b97\u4e00\u4e0b\uff1a\u4e94\u5e74\u4e2d\u6bcf\u5e7452\u5468\uff0c\u5927\u7ea6\u662f25\u4e07\u6b7b\u4ea1\u513f\u7ae5\u7684\u56db\u5206\u4e4b\u4e00\u3002\n\u5927\u591a\u6570\u53d7\u4eba\u5c0a\u656c\u7684\u897f\u65b9\u65b0\u95fb\u6765\u6e90\u4e0d\u4f1a\u505a\u8fd9\u6837\u7684\u8ba1\u7b97\u3002\u4ed6\u4eec\u4f1a\u575a\u6301\u90a3\u4e2a\u6ed1\u7a3d\u53ef\u7b11\u7684\u201c\u6b7b\u4e86\u4e00\u4e07\u4eba\u201d\u7684\u6570\u5b57\u3002\u6211\u53d1\u8a93\u6211\u6c38\u8fdc\u4e0d\u4f1a\u7406\u89e3\u90a3\u4e9b\u4eba\u3002\u4ed6\u4eec\u975e\u5e38\u6709\u9053\u5fb7\u611f--\u9664\u4e86\u4e0d\u9002\u5408\u4ed6\u4eec\u7684\u65f6\u5019\u3002\u4ed6\u4eec\u628a\u6211\u5e26\u56de1847\u5e74\u82f1\u56fd\u53d7\u4eba\u5c0a\u656c\u7684\u5a92\u4f53\uff0c\u90a3\u662f\u6211\u6700\u4e0d\u60f3\u53bb\u7684\u5730\u65b9\u3002\n\u4ed6\u4eec\u751a\u81f3\u4fdd\u7559\u4e86\u4e0d\u7edf\u8ba1\u6b7b\u4e8e\u4eba\u4e3a\u9965\u8352\u7684\u4eba\u7684\u4e60\u60ef\uff0c\u5c31\u597d\u50cf\u5c01\u9501\u4e00\u4e2a\u4e00\u76f4\u4e25\u91cd\u4f9d\u8d56\u98df\u54c1\u8fdb\u53e3\u548c\u533b\u7597\u8865\u7ed9\u822a\u73ed\u7684\u56fd\u5bb6\u662f\u4e0a\u5e1d\u7684\u884c\u4e3a\u3002\u4ed6\u4eec\u6709\u65f6\u4f1a\u7edf\u8ba1\u4e5f\u95e8\u5e73\u6c11\u5728\u5bf9\u5e02\u573a\u548c\u846c\u793c\u7684\u76f4\u63a5\u7a7a\u88ad\u4e2d\u4e27\u751f\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u4e5f\u6709\u9ed1\u6697\u7684\u8ff9\u8c61\u8868\u660e\uff0c\u8fd9\u4e9b\u53ef\u80fd\u662f\u201c\u4eb2\u4f0a\u6717\u201d\u7684\u5a5a\u793c\u3001\u201c\u4eb2\u4f0a\u6717\u201d\u7684\u846c\u793c\u3001\u201c\u4eb2\u4f0a\u6717\u201d\u7684\u98df\u54c1\u5e02\u573a\u3002\u4f60\u77e5\u9053\uff0c\u53ef\u7591\u7684\u90a3\u79cd\u4ed6\u4eec\u5356\u4eb2\u4f0a\u6717\u7684\u6d0b\u8471\u3002\n\u8ba9\u6211\u91cd\u590d\u4e00\u904d\uff0c\u4f0a\u6717\u4e0e\u4e5f\u95e8\u4ec0\u53f6\u6d3e\u7684\u8054\u7cfb\u662f\u80e1\u8bf4\u516b\u9053\u3002\u4f0a\u6717\u548c\u771f\u4e3b\u515a\u4e4b\u95f4\u7684\u8054\u7cfb\u975e\u5e38\u975e\u5e38\u5f3a\u5927\uff0c\u53cc\u65b9\u90fd\u4f1a\u81ea\u8c6a\u5730\u544a\u8bc9\u4f60\uff1b\u4f0a\u6717\u548c\u53d9\u5229\u4e9a\u4e4b\u95f4\u7684\u8054\u7cfb\u66f4\u4ee4\u4eba\u62c5\u5fe7\uff1b\u4f46\u4e5f\u95e8\u4e00\u76f4\u5728\u62b5\u5236\u6c99\u7279\u963f\u62c9\u4f2f\u7684\u63a8\u52a8\uff0c\u5982\u679c\u4f0a\u6717\u660e\u5929\u5c31\u4e0d\u590d\u5b58\u5728\uff0c\u4e5f\u95e8\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002\u8bf4\u8c0e\u7684\u4eba\u4e00\u5b9a\u77e5\u9053\u5f97\u66f4\u6e05\u695a\uff0c\u4f46\u662f\u2026\u3002\u8c01\u77e5\u9053\u9ec4\u9f20\u72fc\u662f\u600e\u4e48\u60f3\u7684\uff1f\u6211\u5f88\u81ea\u8c6a\u5730\u8bf4\u6211\u6ca1\u6709\u3002\n\u4f46\u8ba9\u6211\u4eec\u56de\u5230\u6700\u521d\u7684\u95ee\u9898\uff0c\u5c3d\u6211\u4eec\u6240\u80fd\u5730\u505a\u6570\u5b66\u8ba1\u7b97\u3002\u51fb\u9f13\uff0c\u6211\u4eec\u6765\u63ed\u5f00\u8fd9\u4e2a\u5927\u95ee\u9898\u7684\u7b54\u6848\uff1a\n\u201c\u6709\u591a\u5c11\u7a77\u56f0\u6f66\u5012\u3001\u9519\u8bef\u7684\u6559\u6d3e\u3001\u4e0d\u4f1a\u8bf4\u82f1\u8bed\u7684\u65e0\u540d\u5c0f\u5352\u624d\u80fd\u4e0e\u8d3e\u8fc8\u52d2\u00b7\u5361\u7d22\u5409(Jamal Khasoggi)\u8fd9\u6837\u7684\u5361\u7279\u5c14\u5a92\u4f53\u7cbe\u82f1\u76f8\u63d0\u5e76\u8bba\uff1f\u201d\n\u56de\u7b54(\u5728\u5fc5\u8981\u7684\u4e66\u5446\u5b50\u4fee\u9970\u8bed\u4e4b\u540e\uff0c\u4f8b\u5982\u3002\u201c\u6211\u4eec\u4e0d\u80fd\u5728\u8fd9\u91cc\u8bbe\u5b9a\u4e00\u4e2a\u786e\u5207\u7684\u6570\u5b57\uff0c\u2026\u201d)\u3002\u7b54\u6848\u5927\u81f4\u662f\u2026\u3002\n25\u4e07\u7f8e\u5143\u3002\u8fd9\u662f\u4e00\u4e2a\u4fdd\u5b88\u7684\u4f30\u8ba1\uff0c\u800c\u4e0d\u662f(\u65e0\u8bba\u5982\u4f55)\u65b0\u81ea\u7531\u4e3b\u4e49\u7684\u4f30\u8ba1\u3002\n\u662f\u7684\uff0c\u8fd9\u5c31\u662f\u6bd4\u4f8b\uff1a\u5728\u65b0\u95fb\u65b9\u9762\uff0c\u4e00\u4e2a\u5df2\u6545\u7684Wapo\u64b0\u7a3f\u4eba\u7684\u91cd\u91cf\u76f8\u5f53\u4e8e25\u4e07\u6765\u81ea\u5b97\u6d3e\u8f68\u9053\u9519\u8bef\u4e00\u4fa7\u7684\u65e0\u540d\u5c0f\u5352\u7684\u91cd\u91cf\u3002\n\u8fd9\u5c31\u662f\u8fd9\u4e9b\u5584\u826f\u7684\u4eba\u7684\u60f3\u6cd5\u3002\u8fd9\u8ba9\u6211\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9ad8\u5174\u6211\u4e0d\u662f\u4e00\u4e2a\u9053\u5fb7\u9ad8\u5c1a\u7684\u4eba\u3002\n\u52a0\u91cc\u00b7\u5e03\u96f7\u5f7b\u9970\u6f14\u7ea6\u7ff0\u00b7\u591a\u5170\u662f\u6218\u4e89\u4e66\u5446\u5b50\u3002\u4ed6\u662f\u6218\u4e89\u4e66\u5446\u5b50\u7535\u53f0\u7684\u4e3b\u6301\u4eba\uff0c\u4e5f\u662f\u201c\u6218\u4e89\u4e66\u5446\u5b50\u4f0a\u5229\u4e9a\u7279\u201d\u548c\u201c\u5feb\u4e50\u5730\u72f1\u201d\u7684\u4f5c\u8005\u3002", "note_en": "The War Nerd dissects reporting on Saudi Arabia to show how the corporate media cares more about a dead Washington Post columnist than a quarter of a million Yemenis killed in a Western-backed war.\n    The headline here is not a joke, unfortunately. It\u2019s a question you can\u2019t help asking if you\u2019ve followed the\u00a0 war\u00a0in Yemen.\n You probably noticed that on   Radio\u00a0 War\u00a0 Nerd we\u2019ve pointed out over and over that some wartime deaths get a whole lot of attention, others very little \u2014 or none. But it\u2019s not easy to get a real-life scientific-type test of the relative weight of a Washington Post writer\u2019s death and the deaths of \u201cenemy\u201d civilians.\n Well, we\u2019ve got such a test now. I just found it at the BBC News site. This thing is going to be the gold standard of pixels-per-death calculations from now on. It\u2019s Nobel Prize in Media Physics stuff. What\u2019s the molecular weight of a dead Yemeni civilian? It\u2019s an amount so tiny that mere laypeople using crude stone tools could never guess it. But thanks to this BBC story, we can use our advanced math skills to figure it out.\n Here\u2019s the story, our Eureka moment, our Rosetta Stone, our electron media microscope:\u00a0a BBC article headlined\u00a0 \u201cSaudi Arabia: Just how\u00a0deep are its troubles?\u201d, published on May 13 2020, under the byline of Frank Gardner, \u201cBBC Security Correspondent.\u201d\n  Gardner identifies many problems for the Kingdom, most of them purely financial: the COVID-19 pandemic, the oil glut and falling prices. He briefly mentions the PR problem suffered by de facto Saudi ruler Crown Prince Mohammed bin Salman (MbS):\n \u201cMeanwhile the crown prince, while still largely popular at home, remains something of a pariah in the West due to lingering suspicions over his alleged role in the killing of Saudi journalist Jamal Khashoggi.\u201d\n That\u2019s Gardner\u2019s sixth paragraph, so the PR problem rates below the purely financial problems, but still pretty high.\n Paragraph placement in a news story is very important. And like the NFL draft, it\u2019s not so much whether you get drafted or not but where you\u2019re placed. The earlier the better, the more value you have, whether you\u2019re a cornerback or a dead civilian. So being mentioned in the sixth paragraph of a long (50-paragraph) story like this, as Khashoggi is, makes you something like a third-round choice. Khashoggi must be proud, wherever he is now.\n The point is that killing Khashoggi is MbS\u2019s ONLY PR problem, as far as the BBC is concerned.\n There\u2019s no doubt the killing of Khashoggi, an elite Saudi who\u2019d gone rogue, was not a triumph of professional assassinations. Forget Jean Reno, this was more like hiring the boys from Texas Chainsaw Massacre to do the cleanup operation. MbS\u2019s agents brought their hacksaws to the Saudi Consulate in Istanbul,\u00a0killed Khashoggi on the premises, were too stupid to realize Turkish intel had the place bugged up worse than an Ontario cabin in July, and had no cover story ready when the tapes showed up online.\n And the Saudis\u2019 attempt at damage management was the most inept of all. The Saudis\u2019 first response was that Khashoggi had left the consulate intact, his limbs a virgin forest untouched by the saw, and only admitted under pressure that he\u2019d been killed and dismembered inside their consulate. No one\u2019s disputing that the killing of Jamal Khashoggi was a bloody mess in every sense.\n  But the thing is, that wasn\u2019t the bloodiest mess MbS and the Kingdom were involved in. And Khashoggi wasn\u2019t the only maimed body left in the wake of MbS\u2019s \u201creform\u201d policies.\n Not by a loooooong shot. There was this other thing going on: The Saudi-led invasion and blockade of northwest Yemen, the mostly Shia highland provinces of Yemen. That bloody massacre started in March 2015, and it has been killing untold (and I do mean \u201cuntold\u201d) hundreds of thousands since then.\n How many people have died horrible deaths in Yemen since 2015? The official sources like WaPo and NYT and BBC used to fix on a static figure:\u00a0 10,000 dead.\n Everyone laughed at that one. Every knew it had to be much, much higher, but that just annoyed our news sources of record. So they tried fudging the numbers with the face-saving formula \u201cat least\u201d 10,000, but even buzzards sometimes gag, and people got sick of hearing such an obvious callous lie.\n So by now, how many Yemeni Shia nobodies are dead? How many inconvenient corpses, disproportionately children (because they\u2019re always the first to die in a famine) are buried, untold, in that rocky ground?\n Nobody even tries very hard to guess anymore, because nobody in the Western media is interested. Especially not the crusaders at the Washington Post. As far as they and their buddies in the NYT and BBC are concerned, those deaths don\u2019t matter. No, that\u2019s wrong: those deaths are actually an annoyance, a distraction. It\u2019s not that the news sites of record can\u2019t be bothered to cover the hundreds of thousands who\u2019ve died in Yemen after years of blockade, air strikes, and artificial famine. It\u2019s not that at all. They care, all right; they\u2019re annoyed.\n Because those who died were nobodies, and the wrong-est kind of nobodies. They were Shia, and Shia are all our enemies, as far as Riyadh, D.C., London, and Jerusalem are concerned. When a Shia Yemeni child dies gasping of an easily curable disease like cholera, it\u2019s not just unimportant, it\u2019s enemy propaganda, because the Houthis \u2014 or Ansarullah if you prefer, the main Shia militia in Yemen \u2014 are officially \u201cIranian proxies.\u201d\n They\u2019re not, of course. The Shia of northwestern Yemen have been fighting against the Najd, home of the Sauds in Central Arabia, for centuries.\n Najran was a Yemeni city before the 1930s, when the nouveaux riches Saudis \u201crented\u201d\u00a0it from the dirt-poor Yemenis and simply refused to return it when the lease was up. The Saudi response was simply \u201cOh, you want us to return Najran? Meet our new friends, the US and UK militaries. We\u2019re paying them for protection now, so if you take one step across the new border, they\u2019ll blow you to bits.\u201d\n Since then the alliance between Riyadh, Washington, and London has only deepened. Arab leftists have been wiped out in Yemen, Oman, and Saudi itself. It\u2019s corrupt Islamists/Royalists all the way down these days.\n And this is just fine with the staff at WaPo/NYT/BBC. They have never had ANY problem with all that. They had no problem at all backing the Saudi \u201ccoalition\u2019s\u201d blockade of medicines and food directed against northwestern Yemen; no problem with the videos of kids dying of medieval diseases; no problem with  Saudi bombing of Hodeidah, the one port serving northwestern Yemen; and no problem with the  US Navy\u00a0doing patrols to enforce the\u00a0Saudi blockade\u00a0on\u00a0 food and medicine\u00a0reaching the Shia provinces.\n  Remember, when Jamal Khashoggi was killed in 2018, this artificial blockade and famine had been going on for almost\u00a0 three years. No one knows exactly how many Shia Yemeni died in those years, because no one who matters wants to know. I\u2019m using \u201cnot want to know\u201d as a transitive verb here; it\u2019s not that they \u201cfailed\u201d to find out but that their policy was outright boycott on Yemen horror stories, even as they were hyping mostly BS horror stories from Syria, which happened to align with the interests of the DC/Riyadh/London cartel (and, annoyingly but not very importantly, a lot of woke-left idiots who never noticed that they were doing fine PR work for the cartel).\n So we\u2019re ready to set our experiment in motion. Jamal Khashoggi is mentioned in Paragraph Six of this story. How about the hundreds of thousands of dead nobodies in Yemen?\n They are mentioned a total of three times in this 50-paragraph story. Always very briefly, \u201cin passing\u201d as suave reporters like to say, and using terms like \u201ca spat\u201d to describe the kerfuffle, as if it was a snarly moment on a cooking show.\n Here\u2019s the first of the three mentions. This one \u2014 the first one, remember! \u2014 is in the eighth paragraph, two paragraphs after Jamal Khashoggi\u2019s death \u2014 in NFL draft terms, a fourth- or fifth-round choice. Note also the phrasing here:\n \u201cThen the\u00a0 war\u00a0in neighbouring Yemen has bled Saudi coffers for more than five years now with no tangible gains, and a spat with Qatar has wrecked the surface unity of the six-nation Gulf Arab Cooperation Council (GCC).\u201d\n There is nothing on how many have died, or how many of the dead were civilians, or how many (MANY) of the famine dead were children. Nothing at all about that. Ah, but there is something about blood! \u201c\u2026[T]he\u00a0 war\u00a0in neighboring Yemen has\u00a0 bled Saudi coffers for five years now\u2026\u201d Huh, there\u2019s a medical novelty. Some hippie said \u201conly women bleed,\u201d but it turns out here that only \u201ccoffers\u201d bleed.\u00a0\u201cOnly money bleeds,\u201d as it were. Yemenis, no; \u201ccoffers,\u201d yes.\n And you know the worst about that fiscal bloodletting? It was all for \u201cno tangible gains.\u201d A bad investment, a far worse sin, apparently, than several hundred thousand dead.\n Now here\u2019s the second mention of Yemen. This one comes far down, about the 32nd paragraph (out of 50 paragraphs, remember) \u2014 which makes it like an eighth-round draft choice in NFL terms.\n  \u201cThe Yemen\u00a0 War, prosecuted in part from the air by Saudi warplanes supplied by the US and Britain, has seen alleged\u00a0 war\u00a0crimes committed by all sides.\u201d\n This one kind of makes me sick (and I once did a survey of British journalism during the Great Famine of the late 1840s, so I have a tough gut.) You\u2019ll note that it was \u201cprosecuted\u201d by the Saudis, a nice way of saying \u201cThey invaded Yemen.\u201d\u00a0Furthermore, they were only responsible \u201cin part\u201d for this prosecution (though their \u201cCoalition of the Willing\u201d\u00a0was even more reluctant and useless than ours in Iraq).\n And just to put an extra coat of whitewash on this squeamish, quick allusion to a genocide, Gardner tops off the paragraph with \u201c war\u00a0crimes committed by all sides.\u201d Yeah Frank, one\u2019s as bad as the other, right? Even if one side, the ones with the money, have all the weapons, all the offensive firepower, and all the lapdog media on their side. It\u2019s an old trick, this \u201cone\u2019s as bad as the other,\u201d but it works all too often.\n  Ah, but Gardner does go on to admit there have been problems due to the genocide in Yemen. What kind of problems? PR problems, of course! He says in the next paragraph that KSA\u201ds \u201cprosecution\u201d of a\u00a0 war\u00a0has led, for reasons which seem to be wholly incomprehensible to our friends at the BBC, to some bad press.\n \u201cBut the civilian death toll caused by those air strikes has led to mounting criticism in Washington and elsewhere.\u201d\n It\u2019s that first word, \u201cBut\u2026\u201d that gets me. \u201cBut\u201d? Why \u201cbut\u201d? Read it aloud with the \u201cbut\u201d and then without. You\u2019ll see that with the \u201cbut\u201d in the beginning the sentence implies that the air strikes, the artificial famine, all of it, is not a problem in itself; the problem is \u201cBut\u2026\u201d these perfectly valid policies have, alas, led to \u201cmounting criticism in Washington and elsewhere.\u201d\n We\u2019d better move on, to the third and final mention of Yemen, before I spew on the monitor. So here it is, in a mere photo caption just below the 39th paragraph of the story (in NFL terms, a UDFA):\n \u201cFive years of\u00a0 war\u00a0in Yemen have cost Saudi Arabia dearly\u201d [photo caption]\n Or rather, here it\u00a0 was \u2014\u00a0because, in the time since I first read the article, the BBC has changed the caption so that it now reads \u201cFive years of\u00a0 war\u00a0in Yemen\u00a0 have achieved little.\u201d\n Ah, those sly dogs at the BBC copy desk! They think they\u2019ve thwarted our rhetorical analysis but they are mistaken. Because now we can compare the original caption and the revision as if they were lines from a poem.\n    This is a very revealing change. Exhibit A made the emphasis on money a little too clear when it said that the\u00a0 war\u00a0has \u201ccost Saudi Arabia dearly.\u201d That\u2019s the author\u2019s real priority, of course, but somebody \u2014 a reader or an editor, a paid empath or something \u2014 flinched at it, decided to blur the raw indifference to those who\u2019ve suffered by talking about what\u2019s been \u201cachieved\u201d rather than what the\u00a0 war\u00a0cost Riyadh. So now we get the nice, bland predicate \u201c\u2026have achieved little.\u201d\n So now, the article isn\u2019t saying outright that the\u00a0 war\u00a0was too expensive for KSA, but that it was wasted carnage, carnage that doesn\u2019t \u201cachieve\u201d anything. It\u2019s dizzying to try to find a meaning in that; what would a successful \u201cachievement\u201d be? The annihilation of NW Yemen? The crushing of all Shia resistance in Yemen? Saudi hegemony over the whole country?\n But I\u2019m quibbling. Readers won\u2019t ask questions like that. They\u2019ll glean something vague and well-meaning on the lines of \u201c War, what is it good for?\u201d and let the BBC off the hook. See? The Beeb isn\u2019t\u00a0 totally\u00a0obsessed with Saudi finances!\n But the new caption is balanced, in that winsome NYT/WaPo/BBC manner, because it doesn\u2019t go too far by mentioning dead Yemenis. It\u2019s still looking solely at the Saudi perspective.\n From the Yemeni perspective, this\u00a0 war\u00a0has \u201cachieved\u201d quite a bit, in a grim sense: killing hundreds of thousands, crippling the next generation (because no child ever really recovers from protracted starvation in childhood, as\u00a0 studies have shown).\n In fact, you could argue, if you were Satan, that this was an \u201cachievement\u201d for the KSA: by stunting the mental and physical development on a generation of Yemeni Shia, KSA has hit, in military jargon, the \u201csecond echelon,\u201d the upcoming generation of potential enemies.\n Now, thinking rhetorically, guess what the next photograph gracing the story might be. Remember, this is a news-site of record from the Anglo/Saudi consensus. So what would remind readers that after all, MbS is a reformer, a maker of omelettes, despite all the broken and bloody eggs he splattered over the landscape. What would show his progressive side?\n Yup, a shot of a rich elite Saudi woman driving a car. And that is indeed the next photograph:\n  So see, folks, there\u2019s good coming out of MbS\u2019s tough love after all.\n And really, the story tells us, his only real mistake was killing Khashoggi, a real human being, a Made Man in the global mafia. That death mattered. The dead Yemenis? They were Shia; they were \u201cpro-Iranian\u201d; they were, above all, dirt poor.\n But us, we\u2019re scientists here. We have to figure out the ratio: how many dead Shia poor people does it take to equal one Khashoggi?\n Which means we have to come up with some estimate of how many untold deaths have happened in Yemen. Keep in mind, very few of the dead were killed in the air strikes that get the publicity, brutal as those no doubt were.\n The real killer in Yemen has been famine and a blockade on essential medicines. That technique kills or cripples a whole population, starting with young children (as the BBC should know better than anyone).\n But \u201cuntold\u201d means \u201cuntold, right? How can we even guess? It\u2019s not easy, because people-of-record don\u2019t want you to think about it. But we have had a few brave people willing to name some sums. The representative for one NGO trying to work in Yemen\u00a0 estimated that,\n \u201c\u2026an estimated 1,000 children are dying every week from preventable killers like diarrhoea, malnutrition and respiratory tract infections.\u201d\n That was back in 2016. So if you do the math: 52 weeks a year for five years, that\u2019s roughly a quarter of a million dead children.\n Most Western news sources of the respectable sort won\u2019t do the math. They\u2019ll stick to that comically absurd \u201c10 thousand dead\u201d figure. I swear I\u2019ll never understand those people. They\u2019re so very moral \u2014 except when it doesn\u2019t suit them. They take me back to the respectable press in 1847 Britain, and that\u2019s the last place I want to be.\n They even retain the habit of not counting those who die in an artificial famine, as if blockading a country that was always heavily dependent on food imports and medical supply flights was an Act of God. They sometimes count Yemeni civilians dead in direct \u201cCoalition\u201d\u00a0air strikes on markets and funerals, but even then there are dark hints that those might have been \u201cpro-Iranian\u201d weddings, \u201cpro-Iranian\u201d funerals, \u201cpro-Iranian\u201d food markets. You know, the suspect kind where they sell pro-Iranian onions.\n The Iranian link to the Shia of Yemen is, let me repeat, BS. There\u2019s a very, very powerful link between Iran and Hezbollah, as both sides will tell you with pride; there\u2019s a somewhat more fraught link between Iran and Syria; but Yemen has always fought the push from Saudi Arabia, and would do so if Iran ceased to exist tomorrow. The people telling that lie must know better, but\u2026well, who knows how a weasel thinks? Proud to say I don\u2019t.\n  But let\u2019s go back to the original question up top and do the math as best we can. Drum roll, while we reveal the answer to the big Q:\n \u201cHow many dirt-poor, wrong-sect, non-English-speaking nobodies does it take to equal one made man in the Cartel\u2019s media elite like Jamal Khasoggi?\u201d\n Answer (after the necessary wonk-ish qualifiers, e.g. \u201cWe can\u2019t set an exact figure here\u2026\u201d) The answer is roughly\u2026\n A quarter of a million. And that\u2019s a conservative estimate, not (by any means) a neoliberal one.\n Yup, that\u2019s the ratio: One dead WaPo contributor weighs as much, news-wise, as a quarter-million nobodies from the wrong side of the sectarian tracks.\n That\u2019s how these virtuous people think. Makes me gladder than ever I\u2019m not virtuous.\n Gary Brecher is John Dolan is the War Nerd. He is the host of  Radio War Nerd and the author of \u201cThe War Nerd Iliad\u201d and \u201cPleasant Hell.\u201d", "posttime": "2020-06-12 00:50:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8981\u6b7b,yemenis,\u6c99\u7279", "title": "\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u7684\u4e00\u540d\u64b0\u7a3f\u4eba\u8981\u6b7b\u591a\u5c11\u4e5f\u95e8\u4eba\uff1f", "title_en": "How many dead Yemenis does it take to equal one Washington Post contributor?", "transed": 1, "url": "https://thegrayzone.com/2020/05/25/media-saudi-arabia-yemen-khashoggi-war-nerd/", "via": "", "real_tags": ["\u8981\u6b7b", "yemenis", "\u6c99\u7279"]}, {"category": "", "categoryclass": "", "imagename": "3eda4eb64fbd9ce2537a148dfc5496a4.png", "infoid": 1006153, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u5728\u4e00\u5929(\u5b9e\u9645\u4e0a\u662f3\u5c0f\u65f6)\u5185\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684(\u57fa\u4e8e\u64cd\u4f5c\u7b26\u91cd\u8f7d\u7684)\u81ea\u52a8\u533a\u5206(AD)\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u5e7f\u544a\u6709\u65f6\u770b\u8d77\u6765\u50cf\u9b54\u672f\uff0c\u4f46\u8fd9\u6b21\u6211\u8981\u8c08\u8c08\u4e00\u4e9b\u9ed1\u9b54\u6cd5\uff1a\u6e90\u5230\u6e90\u81ea\u52a8\u533a\u5206\u3002\u5728Mike Inness\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u5728JuliaCon 2019 hackthon\u4e0a\u5199\u4e0b\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5199\u4e00\u7bc7\u535a\u5ba2\u5e16\u5b50\u6bd4\u5199\u4e00\u7bc7\u6e90AD\uff1b-)\u8981\u82b1\u66f4\u957f\u7684\u65f6\u95f4\u3002\u8fd9\u57fa\u672c\u4e0a\u53ea\u662fZygote\u7684\u7b80\u5355\u7248\u672c\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u8be6\u7ec6\u7684\u5b9e\u73b0\uff0c\u6211\u5728\u8fd9\u91cc\u5c06\u5176\u5305\u88c5\u4e3a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5305\uff1aYASSAD.jl\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u8fc7\u57fa\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684AD\uff0c\u5982PyTorch\u3001Flux/Tracker\u3001AutoGrad\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u4eec\u6709\u4e00\u4e9b\u9650\u5236\uff1a\n\u5fc5\u987b\u4f7f\u7528\u5305\u63d0\u4f9b\u7684\u5f20\u91cf\u7c7b\u578b\u6216\u53d8\u91cf\u7c7b\u578b\u6765\u8ddf\u8e2a\u51fd\u6570\u8c03\u7528\u3002\n\u5b83\u4eec\u4e00\u822c\u4e0d\u80fd\u5904\u7406\u63a7\u5236\u6d41\uff0c\u5373\u4f7f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u89e3\u51b3\u529e\u6cd5\u3002\n\u4f46\u662f\uff0c\u6ca1\u6709\u63a7\u5236\u6d41\u7684\u7f16\u7a0b\u4e0d\u662f\u7f16\u7a0b\uff01\u800c\u4e14\uff0c\u4f7f\u7528\u8ddf\u8e2a\u7c7b\u578b\u91cd\u5199\u5927\u91cf\u4ee3\u7801\u901a\u5e38\u975e\u5e38\u70e6\u4eba\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u50cf\u4e25\u4e50\u6751\u8fd9\u6837\u7684\u4eba\u6240\u63d0\u8bae\u7684\u90a3\u6837\u6709\u4e00\u4e2a\u53ef\u533a\u5206\u7f16\u7a0b\u7684\u6846\u67b6\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u4ee5\u4e0a\u4e24\u4e2a\u95ee\u9898\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u95ee\u9898\u4ece\u6e90\u5934\u5230\u6e90\u5934\u7684\u81ea\u52a8\u533a\u5206\u89e3\u51b3\u8d77\u6765\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u57fa\u672c\u4e0a\u77e5\u9053\u4e00\u5207\u90fd\u4f1a\u53d1\u751f\u3002\u6211\u5c06\u5728\u4e0d\u5904\u7406\u63a7\u5236\u6d41\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684AD\u6e90\u4ee3\u7801\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728Zygote.jl\u4e2d\u68c0\u67e5\u5b8c\u6574\u7684\u5b9e\u73b0\u3002\nJulia\u89e3\u6790\u5668\u5c06\u9996\u5148\u89e3\u6790\u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u62bd\u8c61\u8bed\u6cd5\u6811(AST)\n\u8fd9\u4e2aAST\u4e2d\u7684\u4e00\u4e9b\u8282\u70b9\u662f\u5b8f\uff0c\u5b8f\u5c31\u50cf\u8868\u8fbe\u5f0f\u4e0a\u7684\u7f16\u8bd1\u65f6\u95f4\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u5c55\u5f00\u5b8f\u3002\u7136\u540e\u6211\u4eec\u5f97\u5230AST\u7684\u6269\u5c55\u7248\u672c\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u5b8f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528@MACROEXPAND\u68c0\u67e5\u7ed3\u679c\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u964d\u4f4eAST\uff0c\u53bb\u6389\u8bed\u6cd5\u7cd6\uff0c\u5e76\u4ee5\u9759\u6001\u5355\u4e00\u8d4b\u503c\u5f62\u5f0f(SSA)\u8868\u793a\u5b83\u4eec\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528@code_lowed\u83b7\u5f97\u5b83\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u4f7f\u7528Julia\u5b8f\u6765\u4fee\u6539\u6b64\u8fc7\u7a0b\u3002\n\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u7b7e\u540d\u5c06\u51fd\u6570\u5206\u6d3e\u7ed9\u67d0\u4e2a\u65b9\u6cd5\uff0c\u5e76\u5f00\u59cb\u8fdb\u884c\u7c7b\u578b\u63a8\u7406\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528@Generated\u51fd\u6570\u4fee\u6539\u6b64\u8fc7\u7a0b\uff0c\u5e76\u4f7f\u7528@code_type\u68c0\u67e5\u7ed3\u679c\u3002\n\u5728\u6211\u4eec\u62e5\u6709llvm IR\u4e4b\u540e\uff0cJulia\u5c06\u4f7f\u7528llvm\u751f\u6210\u672c\u673a\u4ee3\u7801\u6765\u5b9e\u9645\u6267\u884c\u6b64\u51fd\u6570\u3002\n\u901a\u8fc7\u6267\u884c\u8be5\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u9047\u5230\u53e6\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u8fd4\u56de\u5230\u6b65\u9aa45\u3002\n\u5982\u4f60\u6240\u89c1\u3002Julia\u4e0d\u662f\u9759\u6001\u7f16\u8bd1\u8bed\u8a00\uff0c\u5b83\u4ee5\u51fd\u6570\u4f5c\u4e3a\u7f16\u8bd1\u7684\u8fb9\u754c\u3002\n\u4e00\u672c\u5173\u4e8eSSA\u7684\u5b8c\u6574\u4ecb\u7ecd\u53ef\u4ee5\u662f\u4e00\u672c\u4e66\u3002\u4f46\u662f\u8981\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684\u6e90\u5230\u6e90AD\uff0c\u53ea\u9700\u8981\u4e09\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff1a\n\u5982\u679c\u4f60\u8bfb\u8fc7\u6211\u4e0a\u4e00\u7bc7\u6587\u7ae0\uff0c\u6211\u76f8\u4fe1\u4f60\u5df2\u7ecf\u7406\u89e3\u4e86\u4ec0\u4e48\u662f\u8ba1\u7b97\u56fe\uff0c\u4f46\u73b0\u5728\u8ba9\u6211\u4eec\u518d\u770b\u770b\u8fd9\u4e2a\u56fe\uff1a\u8fd9\u4e2a\u8ba1\u7b97\u56fe\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\n\u5728\u8fdb\u884c\u81ea\u52a8\u5fae\u5206\u65f6\uff0c\u6211\u4eec\u5c06\u8ba1\u7b97\u8fc7\u7a0b\u7528\u56fe\u8868\u793a\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u5177\u6709\u4e2d\u95f4\u503c\u7684\u8fd0\u7b97\u7b26\u3002\u5e76\u4e14\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u8fd8\u5177\u6709\u5c06\u5728\u53cd\u5411\u4f20\u9012\u4e2d\u4f7f\u7528\u7684\u4f34\u968f\u8fd0\u7b97\u7b26\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\u5c06\u53ea\u5206\u914d\u4e00\u6b21\u3002\u8fd9\u53ea\u662fSSA\u8868\u5355\u7684\u4e00\u4e2a\u7b80\u5355\u7248\u672c\uff0c\u5bf9\u5417\uff1f\n\u7136\u540e\uff0c\u8be5\u68af\u5ea6\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u539f\u59cb\u7a0b\u5e8f\u7684\u4f34\u968f\u7a0b\u5e8f\u3002\u6211\u4eec\u552f\u4e00\u9700\u8981\u505a\u7684\u5c31\u662f\u751f\u6210\u4f34\u968f\u7a0b\u5e8f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u901a\u5e38\u88ab\u79f0\u4e3a\u6e29\u683c\u7279\u5217\u8868\u3001\u78c1\u5e26\u6216\u56fe\u8868\uff0c\u6b63\u5982Zygote\u7684\u8bba\u6587\u4e2d\u6240\u63cf\u8ff0\u7684\uff1a\u4e0d\u8981\u5c55\u5f00\u4f34\u968f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528SSA\u5f62\u5f0f\u4f5c\u4e3a\u6211\u4eec\u7684\u8ba1\u7b97\u56fe\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u5728Julia\u4e2d\u964d\u4f4e\u4e86SSA\u5f62\u5f0fIR\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u51e0\u4e2a\u57fa\u672c\u4f8b\u7a0b\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u5927\u91cf\u8fd0\u7b97\u7b26\u3002\n\u7531\u4e8e\u5411\u540e\u4f20\u9012\u53ea\u662f\u539f\u59cb\u7a0b\u5e8f\u7684\u9644\u52a0\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7f16\u5199\u4e3a\u95ed\u5305\u3002\nFunction Forward(\uff1a\uff1aTypeof(Your_Function)\uff0cXs.)#Function\u58f0\u660eOUTPUT=#Function OUTPUT OUTPUT\uff0cFunction(\u0394)#a\u95ed\u5305\u7ed3\u675f\u3002\n\u5c06\u5176\u5b9a\u4e49\u4e3a\u95ed\u5305\u7684\u597d\u5904\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u81ea\u5df1\u5904\u7406\u4f34\u968f\u7a0b\u5e8f\u548c\u539f\u59cb\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u7ba1\u7406\u5b83(\u5c31\u50cf\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u6240\u505a\u7684\u90a3\u6837)\u3002\u6211\u4eec\u79f0\u8fd9\u4e9b\u95ed\u5408\u4e3a\u56de\u8c03\u3002\n\u51fd\u6570FORWARD(\uff1a\uff1aTYPEOF(FOO)\uff0cx)x1\uff0cBACK1=FORWARD(BAZ\uff0cx)x2\uff0cBACK2=FORWARD(BAR\uff0cx1)\u8fd4\u56dex2\uff0c\u51fd\u6570(\u0394)dx1=BACK2(\u0394)DX2=BACK1(DX1)\u8fd4\u56deDX2 END\u3002\n\u901a\u5e38\uff0c\u6ca1\u6709\u63a7\u5236\u6d41\u7684\u4f34\u968f\u7a0b\u5e8f\u53ea\u662f\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u5e94\u7528\u7531\u5b83\u4eec\u7684\u524d\u8fdb\u51fd\u6570\u751f\u6210\u7684\u56de\u8c03\u3002\u4f46\u662f\u6211\u4eec\u5982\u4f55\u81ea\u52a8\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f\u6709\u4eba\u53ef\u80fd\u4f1a\u8bf4\uff1a\u8ba9\u6211\u4eec\u4f7f\u7528\u5b8f\u5427\uff01\u5443\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a\u3002\u4f46\u662f\u6211\u4eec\u7684\u76ee\u6807\u662f\u533a\u5206\u522b\u4eba\u5b9a\u4e49\u7684\u4efb\u610f\u51fd\u6570\uff0c\u8fd9\u6837\u4e1c\u897f\u5c31\u53ef\u4ee5\u7ec4\u5408\u8d77\u6765\u3002\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u6574IR\uff0cJulia\u4e2d\u751f\u6210\u7684\u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u4ece\u7c7b\u578b\u4fe1\u606f\u8fd4\u56de\u4fee\u6539\u540e\u7684AST\uff0c\u8fd8\u53ef\u4ee5\u8fd4\u56deIR\u3002\n\u5b83\u770b\u8d77\u6765\u4e5f\u50cf\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5728\u51fd\u6570\u5185\u90e8\uff0c\u6bcf\u4e2a\u51fd\u6570\u53c2\u6570a\u3001b\u3001ci\u7684\u503c\u90fd\u662f\u5b83\u4eec\u7684\u7c7b\u578b\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u7f16\u8bd1\u65f6\u6ca1\u6709\u5b83\u4eec\u7684\u503c\u3002\n\u4e3a\u4e86\u64cd\u7eb5\u7ea2\u5916\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5de5\u5177\u3002\u5e78\u8fd0\u7684\u662f\uff0cIRTools\u4e2d\u6709\u4e00\u4e9b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e2a\u5305\u6765\u751f\u6210IR\u4ee3\u7801\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528@code_ir\u83b7\u53d6IRTools\u5904\u7406\u7684IR\u5bf9\u8c61\u3002\u5176\u7c7b\u578b\u4e3aIR\u3002\u4e0e\u60a8\u4ece@CODE_LOWERED\u5f97\u5230\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4e0d\u4f1a\u5b58\u50a8\u53c2\u6570\u540d\u79f0\uff0c\u6240\u6709\u53d8\u91cf\u90fd\u7528\u6570\u5b57\u8868\u793a\uff0c\u5e76\u4e14\u4e3a\u8be5\u7c7b\u578b\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u51fd\u6570\u3002\n\u5728\u8fd9\u79cd\u5f62\u5f0f\u4e0b\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u90fd\u7ed1\u5b9a\u5230\u4e00\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u79f0\u4e3a\u53f3\u624b\u8bed\u53e5\u548c\u5de6\u624b\u53d8\u91cf\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8edict\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u6b64\u5bf9\u8c61\uff0c\u4f8b\u5982\u3002\n\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2aStatement\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5b58\u50a8\u6b64\u8bed\u53e5\u7684\u8868\u8fbe\u5f0f\u3001\u63a8\u65ad\u7684\u7c7b\u578b(\u56e0\u4e3a\u6211\u4eec\u5728\u7c7b\u578b\u63a8\u65ad\u4e4b\u524d\u4f7f\u7528IR\uff0c\u6240\u4ee5\u8fd9\u662fANY)\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u4e0d\u4f7f\u7528\u7c7b\u578b\u5316IR(\u56e0\u4e3a\u539f\u5219\u4e0a\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u662f\u76f8\u4f3c\u7684)\u3002\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u662f\u884c\u53f7\u3002\n\u6574\u4e2a\u8857\u533a\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u4ec0\u4e48\uff1f\u5b83\u7684\u610f\u601d\u662f\u4ee3\u7801\u5757\uff0c\u5728SSA\u5f62\u5f0f\u4e2d\uff0c\u6211\u4eec\u7528\u5b83\u6765\u8868\u793a\u5206\u652f\uff0c\u4f8b\u5982\u3002\nJulia&gt\uff1b\u51fd\u6570foo(X)if x&gt\uff1b1 bar(X)\u5426\u5219baz(X)end end foo(\u5177\u67091\u4e2a\u65b9\u6cd5\u7684\u6cdb\u578b\u51fd\u6570)julia&gt\uff1bfoo(1.0)1\uff1a(%1\uff0c%2)%3=%2&gt\uff1b1 br 3\u9664\u975e%3 2\uff1a%4=(Main.bar)(%2)\u8fd4\u56de%4 3\uff1a%5=(Main.baz)(%2)\u8fd4\u56de%5\u3002\nifElse\u53ea\u662f\u964d\u4f4e\u4e86SSA\u5f62\u5f0f\u7684\u5206\u652f\u8bed\u53e5\uff0c\u4e8b\u5b9e\u4e0a\uff0cfor\u5faa\u73af\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002Julia\u7684for\u5faa\u73af\u53ea\u662f\u8fed\u4ee3\u51fd\u6570\u7684\u8bed\u6cd5\u7cd6\u3002\u53ea\u8981\u6211\u4eec\u80fd\u901a\u8fc7br\u5b9e\u73b0\u5dee\u5f02\u5316\uff0c\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u63a7\u5236\u6d41\u5b9e\u73b0\u5dee\u5f02\u5316\u3002\njulia&gt\uff1b\u51fd\u6570foo(X)\uff0c\u5176\u4e2dx\u57281\uff1a10 bar(X)end baz(X)end foo(\u5177\u67091\u4e2a\u65b9\u6cd5\u7684\u6cdb\u578b\u51fd\u6570)julia&gt\uff1bfoo(1.0)1\uff1a(%1\uff0c%2)%3=1\uff1a10%4=(Base.iterate)(%3)%5=%4==\u65e0%6=(Base.not_int)(%5)br 3\u9664\u975e%6 br 2(%4)2\uff1a(%7)%8=(Core.getfield)(%7\uff0c1)%9=(Core.getfield)(%7\uff0c2)%10=(Main.bar)(%8)%11=(Base.iterate)(%3\uff0c%9)%12=%11==\u65e0%13=(Base.not_int)(%12)br 3\u9664\u975e%13 br 2(%11)3\uff1a%14=(Main.baz)(%2)\u8fd4\u56de%14\n\u90a3\u6211\u4eec\u600e\u4e48\u62ff\u5230\u7ea2\u5916\u7ebf\u5462\uff1f\u4e3a\u4e86\u83b7\u5f97IR\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e3a\u8be5\u6cdb\u578b\u51fd\u6570\u8c03\u5ea6\u54ea\u4e2a\u65b9\u6cd5\u3002Julia\u4e2d\u7684\u6bcf\u4e2a\u6cdb\u578b\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u65b9\u6cd5\u8868\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u8c03\u7528\u7684\u7c7b\u578b\u7b7e\u540d\u6765\u83b7\u53d6\u6b64\u65b9\u6cd5\uff0c\u4f8b\u5982\u5f53\u60a8\u8c03\u7528foo(1.0)\u65f6\uff0cJulia\u5c06\u751f\u6210Tuple{typeof(Foo)\uff0cFloat64}\u6765\u8c03\u7528\u76f8\u5173\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u5177\u6709\u6b64\u7c7b\u578b\u7b7e\u540d\u7684IRTools.meta\u51fd\u6570\u6765\u83b7\u53d6\u6b64\u65b9\u6cd5\u7684\u5143\u4fe1\u606f\u3002\nJulia&&gt;\u63a8\u9001\uff01(ir\uff0c\uff1a(1+1))%5 Julia&&gt;IR 1\uff1a(%1\uff0c%2)%3=(Main.baz)(%2)%4=(Main.bar)(%3)%5=1+1\u8fd4\u56de%4\u3002\nIRTools\u5c06\u5728\u6b64\u81ea\u52a8\u4e3a\u60a8\u6dfb\u52a0\u53d8\u91cf\u540d\u79f0\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528INSERT\uff01\u8981\u5728\u7b2c\u56db\u4e2a\u53d8\u91cf\u4e4b\u524d\u63d2\u5165\u8bed\u53e5\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\nJulia&&gt;\u4f7f\u7528IRTools\uff1avar Julia&&gt;Insert\uff01(ir\uff0cvar(4)\uff0c\uff1a(1+1))%5 Julia&&gt;IR 1\uff1a(%1\uff0c%2)%3=(Main.baz)(%2)%5=1+1%4=(Main.bar)(%3)\u8fd4\u56de%4\u3002\nJulia&gt\uff1b\u4f7f\u7528IRTools\uff1a\u63d2\u5165\uff01Julia&&gt;\u63d2\u5165\u540e\uff01(ir\uff0cvar(4)\uff0c\uff1a(2+2))%6 Julia&gt\uff1bir 1\uff1a(%1\uff0c%2)%3=(Main.baz)(%2)%5=1+1%4=(Main.bar)(%3)%6=2+2\u8fd4\u56de%4\u3002\n\u6709\u4e86\u8fd9\u4e9b\u5de5\u5177\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8fdb\u884c\u5411\u524d\u4f20\u7403\u7684\u8f6c\u6362\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u66ff\u6362\u4e3a\u5bf9Forward\u51fd\u6570\u7684\u51fd\u6570\u8c03\u7528\uff0c\u7136\u540e\u6536\u96c6Forward\u51fd\u6570\u8fd4\u56de\u7684\u6240\u6709\u56de\u8c03\u4ee5\u751f\u6210\u95ed\u5305\u3002\u4f46\u662f\u7b49\u7b49\uff01\u6211\u6ca1\u6709\u63d0\u5230\u95ed\u5408\uff0cSSA IR\u4e2d\u7684\u95ed\u5408\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u7a0d\u540e\u518d\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u5148\u5b9e\u73b0\u524d\u5411\u90e8\u5206\u7684\u8f6c\u6362\u3002\nJulia&gt\uff1bdump(ir[var(3)])IRTools.Statement expr\uff1aexpr head\uff1aSymbol Call args\uff1aarray{any}((2\uff0c))1\uff1aGlobalRef mod\uff1a\u6a21\u5757\u4e3b\u540d\uff1aSymbol Baz 2\uff1aIRTools.Variable id\uff1aInt64 2\u7c7b\u578b\uff1aAnyline\uff1aInt64 1\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u5176\u8868\u8fbe\u5f0f\u7684\u7b7e\u540d\u662f\u5426\u4e3acall\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528IRTools\u4e2d\u7684\u7ba1\u9053\u5bf9\u8c61\u8fdb\u884c\u8f6c\u6362\uff0c\u8f6c\u6362\u7ed3\u679c\u5b58\u50a8\u5728\u5176\u6210\u5458to\u4e2d\u3002\n\u6211\u4eec\u5c06\u6b64\u51fd\u6570\u547d\u540d\u4e3aREGISTER\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u4e0e\u6211\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u7684\u65e7REGISTER\u51fd\u6570\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\uff1a\u73b0\u5728\u60a8\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u7b26\u624b\u52a8\u7f16\u5199\u6b64\u5bc4\u5b58\u5668\u51fd\u6570\uff01\u6211\u4eec\u5c06\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\u3002\n\u8b66\u544a\uff1a\u56e0\u4e3a\u6211\u662f\u7528REPL\u505a\u8fd9\u4e2a\u6f14\u793a\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u4f7f\u7528main\u6a21\u5757\uff0c\u5982\u679c\u60a8\u5c06\u4ee3\u7801\u653e\u5728\u60a8\u81ea\u5df1\u7684\u6a21\u5757\u4e2d\uff0c\u8bf7\u5c06\u5176\u66ff\u6362\u4e3a\u60a8\u7684\u6a21\u5757\u540d\u79f0\u3002\n\u51fd\u6570\u5bc4\u5b58\u5668(Ir)pr=\u7ba1\u9053(Ir)\u53c2\u6570\uff01(pr\uff0cat=1)for(v\uff0cst)in pr ex=st.expr if Meta.isexpr(ex\uff0c\uff1acall)yj=insert\uff01(pr\uff0cv\uff0cstmt(xcall(main\uff0c\uff1award\uff0cex.args.)\uff0cline=ir[v].line))pr[v]=xgetindex(yj\uff0c1)end Finish(Pr)end\u3002\n\u6211\u5c06\u5728\u8fd9\u91cc\u89e3\u91ca\u6211\u7684\u5de5\u4f5c\uff1a\u9996\u5148\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u4e3aFORWARD\u51fd\u6570\u751f\u6210IR\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fed\u4ee3\u6240\u6709\u7684\u53d8\u91cf\u548c\u8bed\u53e5\uff0c\u5982\u679c\u8bed\u53e5\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u7528Callto Forward\u51fd\u6570\u66ff\u6362\u5b83\u3002\u8bb0\u4f4f\u5728\u8fd9\u91cc\u4fdd\u7559\u884c\u53f7\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4e00\u4e9b\u9519\u8bef\u6d88\u606f\u3002\u7531\u4e8eForward\u7684\u8fd4\u56de\u503c\u662f\u5b9e\u9645\u6b63\u5411\u6c42\u503c\u548c\u56de\u8c03\u7684\u5143\u7ec4\uff0c\u4e3a\u4e86\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6b64\u5143\u7ec4\u8fdb\u884c\u7d22\u5f15\uff0c\u5e76\u7528\u65b0\u53d8\u91cf\u66ff\u6362\u539f\u59cb\u53d8\u91cf\u3002\u8fd9\u91cc\u7684xgetindex\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u751f\u6210getindex\u7684\u8868\u8fbe\u5f0f\u3002\nJulia&&gt;\u5bc4\u5b58\u5668(Ir)1\uff1a(%3\uff0c%1\uff0c%2)%4=(Main.Forward)(Main.baz\uff0c%2)%5=(Base.getindex)(%4\uff0c1)%6=(Main.Forward)(Main.bar\uff0c%5)%7=(Base.getindex)(%6\uff0c1)\u8fd4\u56de%7\u3002\n\u73b0\u5728\uff0c\u662f\u8003\u8651\u95ed\u5408\u95ee\u9898\u7684\u65f6\u5019\u4e86\u3002\u662f\u7684\uff0c\u5728\u8fd9\u4e2a\u8f83\u4f4e\u7684\u5f62\u5f0f\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u95ed\u5305\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\u4e2d\uff01\n\u6b64\u5bf9\u8c61\u8fd8\u5c06\u5b58\u50a8\u51fd\u6570\u7b7e\u540d\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u8c03\u7528Pull Back\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u627e\u539f\u59cb\u8c03\u7528\u7684IR\u4ee5\u751f\u6210\u6b64Pull Back\u7684IR\u3002\u8fd9\u91cc\u7684\u6210\u5458\u6570\u636e\u5c06\u5b58\u50a8\u6240\u6709\u56de\u8c03\u7684\u5143\u7ec4\u53ca\u5176\u524d\u5411\u8c03\u7528\u7684\u987a\u5e8f\u3002\u4e3a\u4e86\u6784\u9020\u56de\u8c03\uff0c\u6211\u4eec\u9700\u8981\u51fd\u6570\u8c03\u7528\u7684\u7b7e\u540d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fee\u6539\u6211\u4eec\u7684\u5b9e\u73b0\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u51fd\u6570\u5bc4\u5b58\u5668(ir\uff0cF)pr=\u7ba1\u9053(Ir)pbs=\u53d8\u91cf[]\u53c2\u6570\uff01(pr\uff0cat=1)for(v\uff0cst)in pr ex=st.expr if Meta.isexpr(ex\uff0c\uff1acall)yj=insert\uff01(pr\uff0cv\uff0cstmt(xcall(main\uff0c\uff1award\uff0cex.args.)\uff0cline=ir[v].line))pr[v]=xgetindex(yj\uff0c1)J=insert tafter\uff01(\u3002line=ir[v].line))PUSH\uff01(PBS\uff0cSUBPLACE(Pr\uff0cJ))End End Pr=Finish(Pr)v=Push\uff01(Pr\uff0cxtuple(PBS.))\u3002pbv=\u63a8\u9001\uff01(pr\uff0cexpr(\uff1acall\uff0ccallback{F}\uff0cv))return pr end\u3002\n\u4e3a\u4e86\u5b58\u50a8\u56de\u8c03\uff0c\u6211\u4eec\u9700\u8981\u4eceForward\u8fd4\u56de\u7684\u5143\u7ec4\u4e2d\u83b7\u53d6\u56de\u8c03\uff0c\u5e76\u5206\u914d\u4e00\u4e2a\u5217\u8868\u6765\u8bb0\u5f55\u6240\u6709\u56de\u8c03\u3002\n\u8fd9\u91ccxtuple\u7c7b\u4f3c\u4e8exgetindex\uff0c\u7528\u6765\u751f\u6210\u6784\u9020\u5143\u7ec4\u7684\u8868\u8fbe\u5f0f\u3002\n\u8ba9\u6211\u4eec\u5c06\u56de\u8c03\u548c\u539f\u59cb\u8fd4\u56de\u503c\u6253\u5305\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u7136\u540e\u8fd4\u56de\u5b83\uff01\n\u51fd\u6570\u5bc4\u5b58\u5668(ir\uff0cF)pr=\u7ba1\u9053(Ir)pbs=\u53d8\u91cf[]\u53c2\u6570\uff01(pr\uff0cat=1)for(v\uff0cst)in pr ex=st.expr if Meta.isexpr(ex\uff0c\uff1acall)yj=insert\uff01(pr\uff0cv\uff0cstmt(xcall(main\uff0c\uff1award\uff0cex.args.)\uff0cline=ir[v].line))pr[v]=xgetindex(yj\uff0c1)J=insert tafter\uff01(\u3002line=ir[v].line))PUSH\uff01(PBS\uff0cSUBPLACE(Pr\uff0cJ))End End Pr=Finish(Pr)v=Push\uff01(Pr\uff0cxtuple(PBS.))\u3002pbv=PUSH\uff01(pr\uff0cexpr(\uff1acall\uff0cbackback{F}\uff0cv))ret=pr.block[end].Branch[end].args[1]ret=Push\uff01(pr\uff0cxtuple(ret\uff0cpbv))pr.block[end].Branch[end].args[1]=ret return pr\uff0cpbs end\u3002\nRETURN\u8bed\u53e5\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5206\u652f\uff0c\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u6700\u540e\u4e00\u4e2a\u8bed\u53e5\u7684\u6700\u540e\u4e00\u4e2a\u5206\u652f\u3002\nJulia&GT\uff1b\u5bc4\u5b58\u5668(ir\uff0cTuple{typeof(Foo)\uff0cFloat64})1\uff1a(%3\uff0c%1\uff0c%2)%4=(Main.Forward)(Main.baz\uff0c%2)%5=(Base.getindex)(%4\uff0c1)%6=(Base.getindex)(%4\uff0c2)%7=(Main.Forward)(Main.bar\uff0c%5)%8=(Base.getindex)(%7\uff0c1)%9=(Base.getindex)(%7\uff0c2)%10=(Core.tuple)(%9\uff0c%6)%11=(\u56de\u8c03{Tuple{typeof(Foo)\uff0cFloat64}\uff0cT}\u5176\u4e2dT)(%10)%12=(Core.tuple)(%8\uff0c%11)\u8fd4\u56de%12\u3002\n\u51fd\u6570\u6b63\u5411(f\uff0cxs.)\u3002t=\u5143\u7ec4{f\uff0cxs.}m=IRTools.meta(T)m==\u7a7a&amp\uff1b&amp\uff1b\u8fd4\u56de\u7aef\n\u6211\u4eec\u4f1a\u5148\u5f97\u5230\u5143\uff0c\u5982\u679c\u5143\u4e0d\u662f\u4ec0\u4e48\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\u5982\u679c\u6211\u4eec\u6709\u5143\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u4e2d\u83b7\u53d6IR\u5e76\u5c06\u5176\u6ce8\u518c\u3002\n\u51fd\u6570\u6b63\u5411(f\uff0cxs.)\u3002t=\u5143\u7ec4{f\uff0cxs.}m=IRTools.meta(T)m==\u7a7a&amp\uff1b&amp\uff1breturn frw=register(IR(M)\uff0cT)end\u3002\n\u4f46\u662f\uff0c\u5bf9\u8c61frw\u7684\u7c7b\u578b\u662fIR\u800c\u4e0d\u662fCodeInfo\uff0c\u8981\u4e3aJulia\u7f16\u8bd1\u5668\u751f\u6210CodeInfo\uff0c\u6211\u4eec\u9700\u8981\u5c06\u53c2\u6570\u540d\u79f0\u653e\u56de\u3002\n\u7531\u4e8e\u8f6c\u53d1\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fvararg\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6807\u8bb0\u4ee5\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u5411\u7b2c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u63d0\u4f9bTuple\u3002\n\u51fd\u6570\u6b63\u5411(f\uff0cxs.)\u3002t=tuple{f\uff0cxs.}m=IRTools.meta(T)m==\u7a7a&amp\uff1b&amp\uff1breturn frw=register(IR(M)\uff0cT)argname\uff01(M\uff0cSymbol(&#34\uff1b#self#&#34\uff1b)\uff0c\uff1af\uff0c\uff1axs)frw=varargs\uff01(M\uff0cfrw\uff0c2)return IRTools.update\uff01(M\uff0cfrw)end\u3002\nJulia&GT\uff1b\u8f6c\u53d1(Foo\uff0c1.0)1\uff1a(%1\uff0c%2\uff0c%3)%4=(Base.getfield)(%3\uff0c1)%5=(Main.Forward)(Main.baz\uff0c%4)%6=(Base.getindex)(%5\uff0c1)%7=(Base.getindex)(%5\uff0c2)%8=(Main.Forward)(Main.bar\uff0c%6)%9=(Base.getindex)(%8\uff0c1)%10=(Base.getindex)(%8\uff0c2)%11=(Core.tuple)(%10\uff0c%7)%12=(Main.Pull{Tuple{typeof(Foo)\uff0cFloat64}\uff0cT}\u5176\u4e2dT)(%11)%13=(Core.tuple)(%9\uff0c%12)\u8fd4\u56de%13\u3002\nJulia&GT\uff1bForward(foo\uff0c1.0)\u9519\u8bef\uff1aMethodError\uff1a\u6ca1\u6709\u4e0egetIndex(\uff1a\uff1aNothing\uff0c\uff1a\uff1aInt64)\u5339\u914d\u7684\u65b9\u6cd5\u3002\u5806\u6808\u8ddf\u8e2a\uff1a[1]*at./float.jl\uff1a399[inline][2]Forward(\uff1a\uff1aTypeof(*)\uff0c\uff1a\uff1aFloat64\uff0c\uff1a\uff1aFloat64)\u4f4d\u4e8e/Users/roger/.julia/dev/YASSAD/src/compiler.jl\uff1a0[3]baz at./repl[4]\uff1a1[inlined][4]Forward(\uff1a\uff1aTypeof(Baz)\uff0c\uff1a\uff1aFloat64)\u4f4d\u4e8e/Users/roger/.julia/dev/YASSAD/src/compiler.jl\uff1a0[5]Foo at./repl[2]\uff1a1[\u5185\u8054][6]Forward(\uff1a\uff1aTypeOf(Foo)\uff0c\uff1a\uff1aFloat64)\u4f4d\u4e8e/Users/roger/.julia/dev/YASSAD/src/compiler.jl\uff1a0[7]\u9876\u7ea7\u4f5c\u7528\u57dfNone\uff1a0\u3002\n\u8fd9\u662f\u56e0\u4e3aForward\u5c06\u88ab\u9012\u5f52\u8c03\u7528\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u91cd\u8f7dForward\u51fd\u6570\u6765\u5b9a\u4e49\u6700\u5185\u90e8\u7684(\u539f\u8bed)\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\uff0c\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u53ef\u4ee5\u91cd\u8f7d*\u64cd\u4f5c\u7b26\nJulia&gt\uff1bForward(\uff1a\uff1aTypeof(*)\uff0ca\uff1a\uff1aReal\uff0cb\uff1a\uff1aReal)=a*b\uff0c\u0394-&gt\uff1b(\u0394*b\uff0ca*\u0394)Julia&gt\uff1bForward(FOO\uff0c1.0)(1.0\uff0cYASSAD.Pull Back{.}\u3002\n\u4f46\u8fd9\u4e00\u56de\u8c03\u76ee\u524d\u8fd8\u4e0d\u80fd\u8d4e\u56de\u3002\u8ba9\u6211\u4eec\u751f\u6210\u7528\u4e8e\u56de\u8c03\u7684IR\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u3002\n\u51fd\u6570(\uff1a\uff1aPULLBACK{S})(Delta)\u5176\u4e2dSm=IRTools.meta(S)m=\u7a7a&amp\uff1b&amp\uff1breturn ir=IR(M)_\uff0cPbs=register(ir\uff0cS)back=\u4f34\u968f(ir\uff0cPBS)argname\uff01(M\uff0cSymbol(&#34\uff1b#self#&#34\uff1b)\uff0c\uff1aDelta)return IRTools.update\uff01(M\uff0cback)end\u3002\n\u56e0\u4e3a\u540e\u5411\u4f20\u9012\u662f\u5355\u72ec\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u518d\u6709\u524d\u5411IR\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u91cc\u518d\u6b21\u8c03\u7528register\uff0c\u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff0c\u8fd9\u53ea\u4f1a\u5728\u7f16\u8bd1\u65f6\u53d1\u751f\u4e00\u6b21\u3002\u5728\u4e3a\u4f34\u968f\u7a0b\u5e8f\u751f\u6210IR\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u77e5\u9053\u54ea\u4e2a\u53d8\u91cf\u6709\u56de\u8c03\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2aDICT\u6765\u5b58\u50a8\u5b83\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u5230\u56de\u8c03\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5217\u8868\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u6211\u4eec\u7684\u767b\u8bb0\u518c\u5982\u4e0b\u3002\n\u51fd\u6570\u5bc4\u5b58\u5668(ir\uff0cF)pr=\u7ba1\u9053(Ir)pbs=dict{\u53d8\u91cf\uff0c\u53d8\u91cf}()\u53c2\u6570\uff01(pr\uff0cat=1)for(v\uff0cst)in pr ex=st.expr if Meta.isexpr(ex\uff0c\uff1acall)yj=insert\uff01(pr\uff0cv\uff0cstmt(xcall(main\uff0c\uff1award\uff0cex.args.)\uff0cline=ir[v].line))pr[v]=xgetindex(yj\uff0c1)J=\u30022)\uff0cline=ir[v].line))Pbs[v]=\u66ff\u6362(Pr\uff0cJ)End End Pr=Finish(Pr)v=Push\uff01(Pr\uff0cxtuple(Values(Pbs).))\u3002pbv=PUSH\uff01(pr\uff0cexpr(\uff1acall\uff0cbackback{F}\uff0cv))ret=pr.block[end].Branch[end].args[1]ret=Push\uff01(pr\uff0cxtuple(ret\uff0cpbv))pr.block[end].Branch[end].args[1]=ret return pr\uff0cpbs end\u3002\n\u56e0\u4e3a\u4f34\u968f\u7a0b\u5e8f\u4e0e\u539f\u59cbIR\u7684\u987a\u5e8f\u76f8\u53cd\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u4f1a\u4f7f\u7528\u7ba1\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684IR\u5bf9\u8c61\uff0c\u5e76\u5728\u8fd9\u91cc\u5411\u5176\u6dfb\u52a0\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u62c9\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u53e6\u4e00\u4e2a\u662f\u5411\u540e\u4f20\u9012(\u62c9\u56de)\u7684\u8f93\u5165\u6e10\u53d8\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u56de\u8c03\u4e00\u4e0b\u3002\u6211\u5728\u8fd9\u91cc\u8c03\u7528\u7684getfield\u51fd\u6570\u662f\u8bed\u6cd5SUGER\u7684\u4f4e\u7ea7\u5f62\u5f0f\u3002\u5bf9\u4e8e\u83b7\u53d6\u6210\u5458\uff0c\u8fd9\u7b49\u540c\u4e8eself.data\u3002\nvars=\u957f\u5ea6\u4e3ak\u7684\u5bc6\u94a5(Ir)(Vars)\uff1a-1\uff1a1 v=vars[k]ex=ir[v].expr if Haskey(pbs\uff0cv)pbv=insert\uff01(adj\uff0ccalllback\uff0cxcall(\uff1agetindex\uff0cbacklback\uff0ck))g=\u63a8\u9001\uff01(adj\uff0cexpr(\uff1acall\uff0cpbv\uff0cv))end\n\u5982\u679c\u6b64\u53d8\u91cf\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u56de\u8c03\u5b57\u5178\u4e2d\uff0c\u6211\u4eec\u5c06\u83b7\u53d6\u5b83\u5e76\u4f7f\u7528\u6b64\u53d8\u91cf\u8c03\u7528\u5b83\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u6709\u591a\u4e2a\u68af\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u7d2f\u52a0\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u9700\u8981\u8bb0\u5f55\u8fd9\u4e9b\u53d8\u91cf\u7684\u68af\u5ea6\u3002\nxaccum\u4e0e\u524d\u9762\u7684xgetindex\u76f8\u540c\uff0c\u4f46\u662fJulia\u4e2d\u7684\u5185\u7f6e\u7d2f\u52a0\u51fd\u6570\u5b9a\u4e49\u5728\u6570\u7ec4\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765\u7d2f\u52a0\u53d8\u91cf\uff0c\u8ba9\u6211\u4eec\u81ea\u5df1\u6765\u505a\u5427\u3002\nxaccum(Ir)=\u65e0xaccum(ir\uff0cx)=x xaccum(ir\uff0cxs.)=Push\uff01(ir\uff0cxcall(YASSAD\uff0c\uff1aACCUM\uff0cXs.))\u3002accum()=Nothing accum(X)=x accum(x\uff0cy)=x=Nothing\uff1fY\uff1aY==\u4ec0\u4e48\u90fd\u6ca1\u6709\uff1fx\uff1ax+y accum(x\uff0cy\uff0czs.)=accum(accum(x\uff0cy)\uff0czs.)\u3002accum(x\uff1a\uff1atuple\uff0cy\uff1a\uff1atuple)=accum.(x\uff0cy)accum(x\uff1a\uff1aAbstractArray\uff0cy\uff1a\uff1aAbstractArray)=accum.(x\uff0cy)\u3002\n\u6700\u540e\uff0c\u56de\u8c03\u5c06\u8fd4\u56de\u539f\u59cb\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u8f93\u5165\u53d8\u91cf\u7684\u68af\u5ea6\u3002\u8fd9\u610f\u5473\u7740\u5b83\u603b\u662f\u6709\u4e0e\u8f93\u5165\u53d8\u91cf\u76f8\u540c\u6570\u91cf\u7684\u68af\u5ea6\u3002\u4f46\u662f\u6211\u4eec\u7684\u524d\u5411\u51fd\u6570\u6709\u4e00\u4e2a\u989d\u5916\u7684\u53d8\u91cf\uff0c\u90a3\u5c31\u662f\u51fd\u6570\uff0c\u6211\u4eec\u4e5f\u4f1a\u8fd4\u56de\u5b83\u7684\u68af\u5ea6\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u96f6\uff0c\u4f46\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u95ed\u5305\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u5b83\u53ef\u80fd\u4e0d\u662f\u96f6\u3002\n\u51fd\u6570ADJE(ir\uff0cpbs)adj=Empty(Ir)Self=Argument\uff01(Adj)Delta=Argument\uff01(adj\uff0cxcall(\uff1agetfield\uff0cself\uff0cQuoteNode(\uff1aData)grads=dict()grad(x\uff0cx\u0304)=Push\uff01(Get\uff01(grads\uff0cx\uff0c[])\uff0cx\u0304)grad(X)=xaccum(adj\uff0cGet(grads\uff0cx\uff0c[]))\u3002grad(last(key(Ir))\uff0c\u589e\u91cf)vars=k\u957f\u5ea6(Vars)\u7684\u5bc6\u94a5(Ir)\uff1a-1\uff1a1 v=vars[k]ex=ir[v].expr if Haskey(pbs\uff0cv)pbv=insert tter\uff01(adj\uff0ccalllback\uff0cxcall(\uff1agetindex\uff0cbacklback\uff0ck))g=Push\uff01(adj\uff0cexpr(\uff1acall\uff0cpbv\uff0cgrad(V)(i\uff0cx)in\u3002PUSH\uff01(adj\uff0cxgetindex(g\uff0ci))END GS=[\u53c2\u6570x\u7684grad(X)(Ir)]\u0394=Push\uff01(adj\uff0cxtuple(gs.))\u3002RETURN\uff01(adj\uff0c\u0394)RETURN ADJ END\u3002\n\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u521a\u521a\u5b9e\u73b0\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u3002\n..", "note_en": "I wrote a blog post about how to implement your own (operator overloading based) automatic differentiation (AD) in one day (actually 3 hrs) last year. AD looks like magic sometimes, but I\u2019m going to talk about some black magic this time: the sourceto source automatic differentiation. I wrote this during JuliaCon 2019 hackthon with help from  Mike Innes.It turns out that writing a blog post takes longer than writing a source to source AD ;-). This is basically just simple version of Zygote.\n I wrap this thing as a very simple package here, if you want to look at more detailed implementation:  YASSAD.jl.\n If you have used operator overloading based AD like  PyTorch,  Flux/Tracker,  AutoGrad, you may find they have some limitations:\n A  Tensor type or  Variable type provided by the package has to be used for tracing the function calls\n They cannot handle control flows in general, even in some cases, some workarounds can be taken\n However, programming without control flow is not programming! And it is usually very annoying to rewrite a lot code with tracked types. If we want to have a framework for  Differentiable Programming as what people like  Yan LeCun has been proposing, we need to solve these two problems above.\n In fact, these problems are quite straight forward to solve in source to source automatic differentiation, since we basically know everything happens. I will implement a very simple source to source AD without handling control flows, you can also check the complete implementation as  Zygote.jl.\n     the Julia parser will parse the strings first to get an Abstract Syntax Tree (AST)\n some of the nodes in this AST are macros, macros are like compiled time functions on expressions, the compiler will expand the macros. Then we get an expanded version of AST, which do not have any macros. You can inspect the results with  @macroexpand.\n Now, we will lower the AST, get rid of syntax sugars and represent them in Static Single Assignment Form (SSA), you can get it with  @code_lowered, and you can modify this process with Julia  macros.\n When function call happens, we use the function signature to dispatch the function to a certain method, and start doing type inference. You can modify this process with  @generated functions, and check the results with  @code_typed.\n  After we have llvm IR, Julia will use llvm to generate native code to actually exectute this function.\n By executing the function, we will meet another function call, so we go back to step 5\n   As you can see. Julia is not a static compiled language, and it uses function as boundary of compilation.\n  A complete introduction of SSA can be  a book. But to implement your own sourceto source AD only require three simple concept:\n  If you have read my last post, I believe you have understand what is computation graph, but now let\u2019s look at this diagram again: what is this computation graph exactly?\n  While doing the automatic differentiation, we represent the process of computation as a diagram. Each node is an operator with a intermediate value. And each operator also have an  adjoint operator which will be used in backward pass. Which means each variablein each node will only be assigned once. This is just a simple version of SSA Form right?\n The gradient can be then considered as an adjoint program of the original program. And the only thing we need to do is to generate the adjoint program. In fact, this is often called Wengert list, tape or graph as described in  Zygote\u2019s paper: Don\u2019t Unroll Adjoint. Thus we can directly use the SSA form as our computational graph. Moreover, since in Julia the SSA form IR is lowered, it also means we only need to defined a few primitive routines instead of defining a lot operators.\n Since the backward pass is just an adjoint of the original program, we can just write it as a closure\n function forward(::typeof(your_function), xs...)    # function declaration   output =  # function output   output,  function (\u0394)    # a closure    end   end\n The advantage of defining this as closure is that we can let the compiler itself handle shared variable between the adjoint programand the original program instead of managing it ourselves (like what we do in my last post). We call these closures  pullbacks.\n    function forward(::typeof(foo), x)   x1, back1 = forward(baz, x)   x2, back2 = forward(bar, x1)    return x2,  function (\u0394)   dx1 = back2(\u0394)   dx2 = back1(dx1)    return dx2    end   end\n In general, an adjoint program without control flow is just applying these pullbacks generated by their  forward function in reversed order. But how do we do this automatically? Someone may say: let\u2019s use macros! Err, we can do that. But our goal is to differentiate arbitrary function defined by someone else, so things can be composable. This is not what we want. Instead, we can tweak the IR, the  generated functions in Julia can not only return a modified AST from type information, it can also return the IR.\n   It looks like a function as well, but the difference is that inside the function, the value of each function argument  a,  b,  cis their type since we do not have their values during compile time.\n  In order to manipulate the IR, we need some tools. Fortunately, there are some in  IRTools, we will use this package to generate the IR code.\n First, we can use  @code_ir to get the  IR object processed by  IRTools. Its type is  IR. The difference between the one you get from  @code_lowered is that this will not store the argument name, all the variables are represented by numbers, and there are some useful function implemented for this type.\n  In this form, each line of code is binded to a variable, we call the right hand statement, and left hand variable. You use a dict-like interface to use this object, e.g\n  It will return a statement object, which stores the expression of this statement, the inferred type (since we are using the IR before type inference, this is  Any). For simplicity, we will not use typed IR in this post (since in principal, their implementations are similar). The last number is the line number.\n What is the first number  1 in the whole block? It means code block, in SSA form we use this to represent branches, e.g\n julia&gt;  function foo(x)    if x &gt;  1   bar(x)    else   baz(x)    end    end  foo (generic  function with  1 method)    julia&gt;   foo( 1.0)   1: (% 1, % 2)   % 3 = % 2 &gt;  1   br  3 unless % 3   2:   % 4 = (Main.bar)(% 2)    return % 4   3:   % 5 = (Main.baz)(% 2)    return % 5\n ifelse is just branch statement in lowered SSA form, and in fact,  for loops are similar. Julia\u2019s for loop is just a syntax sugar of  iterate function. As long as we can differentiate through  br, we will be able to differentiate through control flows.\n julia&gt;  function foo(x)    for x  in  1: 10   bar(x)    end   baz(x)    end  foo (generic  function with  1 method)    julia&gt;   foo( 1.0)   1: (% 1, % 2)   % 3 =  1: 10   % 4 = (Base.iterate)(% 3)   % 5 = % 4 ===  nothing   % 6 = (Base.not_int)(% 5)   br  3 unless % 6   br  2 (% 4)   2: (% 7)   % 8 = (Core.getfield)(% 7,  1)   % 9 = (Core.getfield)(% 7,  2)   % 10 = (Main.bar)(% 8)   % 11 = (Base.iterate)(% 3, % 9)   % 12 = % 11 ===  nothing   % 13 = (Base.not_int)(% 12)   br  3 unless % 13   br  2 (% 11)   3:   % 14 = (Main.baz)(% 2)    return % 14\n So how do we get the IR? In order to get the IR, we need to know which method is dispatched for this generic function. Each genericfunction in Julia has a method table, you can use the type signature of the function call to get this method, e.g when you call  foo(1.0), Julia will generate  Tuple{typeof(foo), Float64} to call the related method. We can get the meta information of this method by providing the  IRTools.meta function with this type signature\n   julia&gt; push!(ir, :( 1+ 1))  % 5    julia&gt; ir   1: (% 1, % 2)   % 3 = (Main.baz)(% 2)   % 4 = (Main.bar)(% 3)   % 5 =  1 +  1    return % 4\n IRTools will add the variable name for you automatically here. Similarly, we can use  insert! to insert a statement before the 4th variable:\n julia&gt;  using IRTools: var    julia&gt; insert!(ir, var( 4), :( 1+ 1))  % 5    julia&gt; ir   1: (% 1, % 2)   % 3 = (Main.baz)(% 2)   % 5 =  1 +  1   % 4 = (Main.bar)(% 3)    return % 4\n  julia&gt;  using IRTools: insertafter!    julia&gt; insertafter!(ir, var( 4), :( 2+ 2))  % 6    julia&gt; ir   1: (% 1, % 2)   % 3 = (Main.baz)(% 2)   % 5 =  1 +  1   % 4 = (Main.bar)(% 3)   % 6 =  2 +  2    return % 4\n With these tools, we can now do the transformation of forward pass. Our goal is to replace each function call with the function call to  forward function and then collect all the pullbacks returned by  forward function to generate a closure. But wait! I didn\u2019t mention closure, what is the closure in SSA IR? Let\u2019s consider this later, and implement the transformation of forward part first.\n  julia&gt; dump(ir[var( 3)])  IRTools.Statement   expr:  Expr   head:  Symbol call   args:  Array{ Any}(( 2,))    1:  GlobalRef   mod:  Module Main   name:  Symbol baz    2: IRTools.Variable   id:  Int64  2    type:  Any   line:  Int64  1\n In fact, we only need to check whether the signature of its expression is  call. We can use the  Pipe object in  IRTools to do the transformation, the transformation results are stored in its member  to.\n    We name this function as  register since it has similar functionality as our old  register function in my last post. The only difference is: you don\u2019t need to write this  register function manually for each operator now! We are going to do this automatically.\n Warning: since I\u2019m doing this demo in REPL, I use  Main module directly, if you put the code in your own module, replace it with your module name.\n function register(ir)   pr =  Pipe(ir)   argument!(pr, at =  1)    for (v, st)  in pr   ex = st.expr    if Meta.isexpr(ex, :call)   yJ = insert!(pr, v, stmt(xcall(Main, :forward, ex.args...), line = ir[v].line))   pr[v] = xgetindex(yJ,  1)    end    end   finish(pr)   end\n I\u2019ll explain what I do here: first since we are generating the IR for the  forward function, we have an extra argument now\n   Then, we need to iterate through all the variables and statements, if the statement is a function call then we replace it with the callto  forward function. Remember to keep the line number here, since we still want some error message. Since the returned value of  forward is a tuple of actually forward evaluation and the pullback, to get the correct result we need to index this tuple, and replacethe original variable with the new one. The  xgetindex here is a convenient function that generates the expression of  getindex\n   julia&gt; register(ir)   1: (% 3, % 1, % 2)   % 4 = (Main.forward)(Main.baz, % 2)   % 5 = (Base.getindex)(% 4,  1)   % 6 = (Main.forward)(Main.bar, % 5)   % 7 = (Base.getindex)(% 6,  1)    return % 7\n  Now, it\u2019s time to consider the closure problem. Yes, in this lowered form, we don\u2019t have closures. But we can instead store them in a callable object!\n  This object will also store the function signature, so when we call pullback, we can look up the IR of the original call to generate the IR of this pullback. The member  data here will store a  Tuple of all pullbacks with the order of their  forward call. In order to construct the  Pullback we need the signature of our function call, so we need to revise our implementation as following.\n function register(ir, F)   pr =  Pipe(ir)   pbs = Variable[]   argument!(pr, at =  1)    for (v, st)  in pr   ex = st.expr    if Meta.isexpr(ex, :call)   yJ = insert!(pr, v, stmt(xcall(Main, :forward, ex.args...), line = ir[v].line))   pr[v] = xgetindex(yJ,  1)   J = insertafter!(pr, v, stmt(xgetindex(yJ,  2), line = ir[v].line))   push!(pbs, substitute(pr, J))    end    end   pr = finish(pr)   v = push!(pr, xtuple(pbs...))   pbv = push!(pr,  Expr(:call, Pullback{F}, v))    return pr   end\n In order to store the pullbacks, we need to get the pullback from the tuple returned by  forward and allocate a list to record all pullbacks.\n Here  xtuple is similar to  xgetindex, it is used to generate the expression of constructing a tuple.\n  Let\u2019s pack the pullback and the original returned value as a tuple together, and return it!\n function register(ir, F)   pr =  Pipe(ir)   pbs = Variable[]   argument!(pr, at =  1)    for (v, st)  in pr   ex = st.expr    if Meta.isexpr(ex, :call)   yJ = insert!(pr, v, stmt(xcall(Main, :forward, ex.args...), line = ir[v].line))   pr[v] = xgetindex(yJ,  1)   J = insertafter!(pr, v, stmt(xgetindex(yJ,  2), line = ir[v].line))   push!(pbs, substitute(pr, J))    end    end   pr = finish(pr)   v = push!(pr, xtuple(pbs...))   pbv = push!(pr,  Expr(:call, Pullback{F}, v))   ret = pr.blocks[ end].branches[ end].args[ 1]   ret = push!(pr, xtuple(ret, pbv))   pr.blocks[ end].branches[ end].args[ 1] = ret    return pr, pbs   end\n The  return statement is actually a simple branch, it is the last branch of the last statement of the last code block.\n  julia&gt; register(ir,  Tuple{typeof(foo),  Float64})   1: (% 3, % 1, % 2)   % 4 = (Main.forward)(Main.baz, % 2)   % 5 = (Base.getindex)(% 4,  1)   % 6 = (Base.getindex)(% 4,  2)   % 7 = (Main.forward)(Main.bar, % 5)   % 8 = (Base.getindex)(% 7,  1)   % 9 = (Base.getindex)(% 7,  2)   % 10 = (Core.tuple)(% 9, % 6)   % 11 = (Pullback{ Tuple{typeof(foo), Float64},T}  where T)(% 10)   % 12 = (Core.tuple)(% 8, % 11)    return % 12\n  function forward(f, xs...)   T =  Tuple{f, xs...}   m = IRTools.meta(T)   m ===  nothing &amp;&amp;  return   end\n We will get the meta first, if the meta is  nothing, it means this method doesn\u2019t exist, so we just stop here. If we have the meta, thenwe can get the  IR from it and put it to  register\n function forward(f, xs...)   T =  Tuple{f, xs...}   m = IRTools.meta(T)   m ===  nothing &amp;&amp;  return   frw = register(IR(m), T)   end\n However, the object  frw has type  IR instead of  CodeInfo, to generate the  CodeInfo for Julia compiler, we need to put argument names back with\n  And since the second argument of our  forward function is a vararg, we need to tag it to let our compiler know, so the compiler will not feed the first function call with a  Tuple.\n   function forward(f, xs...)   T =  Tuple{f, xs...}   m = IRTools.meta(T)   m ===  nothing &amp;&amp;  return   frw = register(IR(m), T)   argnames!(m,  Symbol( &#34;#self#&#34;), :f, :xs)   frw = varargs!(m, frw,  2)    return IRTools.update!(m, frw)   end\n  julia&gt;   forward(foo,  1.0)   1: (% 1, % 2, % 3)   % 4 = (Base.getfield)(% 3,  1)   % 5 = (Main.forward)(Main.baz, % 4)   % 6 = (Base.getindex)(% 5,  1)   % 7 = (Base.getindex)(% 5,  2)   % 8 = (Main.forward)(Main.bar, % 6)   % 9 = (Base.getindex)(% 8,  1)   % 10 = (Base.getindex)(% 8,  2)   % 11 = (Core.tuple)(% 10, % 7)   % 12 = (Main.Pullback{ Tuple{typeof(foo), Float64},T}  where T)(% 11)   % 13 = (Core.tuple)(% 9, % 12)    return % 13\n  julia&gt; forward(foo,  1.0)  ERROR:  MethodError: no method matching getindex(::Nothing, :: Int64)  Stacktrace:   [ 1] * at ./float.jl: 399 [inlined]   [ 2] forward(::typeof(*), :: Float64, :: Float64) at /Users/roger/.julia/dev/YASSAD/src/compiler.jl: 0   [ 3] baz at ./REPL[ 4]: 1 [inlined]   [ 4] forward(::typeof(baz), :: Float64) at /Users/roger/.julia/dev/YASSAD/src/compiler.jl: 0   [ 5] foo at ./REPL[ 2]: 1 [inlined]   [ 6] forward(::typeof(foo), :: Float64) at /Users/roger/.julia/dev/YASSAD/src/compiler.jl: 0   [ 7] top-level scope at none: 0\n This is because the  forward will be recursively called, which also means we only need to define the inner most (primitive) operators by overloading the  forward functions, e.g we can overload the  * operator in this case\n julia&gt; forward(::typeof(*), a:: Real, b:: Real) = a * b, \u0394-&gt;(\u0394*b, a*\u0394)    julia&gt; forward(foo,  1.0)  ( 1.0, YASSAD.Pullback{.....}\n  But this pullback is not callable yet. Let\u2019s generate the IR for pullback. Similarly, we can define\n function (::Pullback{S})(delta)  where S   m = IRTools.meta(S)   m ===  nothing &amp;&amp;  return   ir = IR(m)   _, pbs = register(ir, S)   back = adjoint(ir, pbs)   argnames!(m,  Symbol( &#34;#self#&#34;), :delta)    return IRTools.update!(m, back)   end\n Because the backward pass is called separately, we don\u2019t have the forward IR anymore, unfortunately we need to call  register again here, but no worries, this will only happen once during compile time. Before we generate the IR for adjoint program, we also need to know which variable has pullback, thus instead of using a list, we need a dict to store this, and return it to pullback. Therefore, we need to revise our  register as following\n function register(ir, F)   pr =  Pipe(ir)   pbs =  Dict{Variable, Variable}()   argument!(pr, at =  1)    for (v, st)  in pr   ex = st.expr    if Meta.isexpr(ex, :call)   yJ = insert!(pr, v, stmt(xcall(Main, :forward, ex.args...), line = ir[v].line))   pr[v] = xgetindex(yJ,  1)   J = insertafter!(pr, v, stmt(xgetindex(yJ,  2), line = ir[v].line))   pbs[v] = substitute(pr, J)    end    end   pr = finish(pr)   v = push!(pr, xtuple(values(pbs)...))   pbv = push!(pr,  Expr(:call, Pullback{F}, v))   ret = pr.blocks[ end].branches[ end].args[ 1]   ret = push!(pr, xtuple(ret, pbv))   pr.blocks[ end].branches[ end].args[ 1] = ret    return pr, pbs   end\n since the adjoint program has the reversed order with the original IR, we will not use  Pipe here, we can create an empty  IR object,and add two argument to it here, one is the  Pullback object itself, the other is the input gradient of the backward pass (pullback).\n  First, let\u2019s get our pullbacks. The  getfield function I call here is the lowered form of syntax sugar  . for getting members, this is equivalent to  self.data.\n   vars = keys(ir)   for k  in length(vars):- 1: 1   v = vars[k]   ex = ir[v].expr    if haskey(pbs, v)   pbv = insertafter!(adj, pullbacks, xcall(:getindex, pullbacks, k))   g = push!(adj,  Expr(:call, pbv, v))    end   end\n if this variable exists in our dict of pullbacks, we get it and call it with this variable. However, there is a problem of this implementation, if one variable has multiple gradient, we need to accumulate them together, thus we need to record these variables\u2019gradietns as well.\n       The  xaccum is the same as previous  xgetindex, but the builtin  accumulate function in Julia is defined on arrays, we need one to accumulate variant variables, let\u2019s do it ourselves\n xaccum(ir) =  nothing  xaccum(ir, x) = x  xaccum(ir, xs...) = push!(ir, xcall(YASSAD, :accum, xs...))  accum() =  nothing  accum(x) = x  accum(x, y) =   x ==  nothing ? y :   y ==  nothing ? x :   x + y    accum(x, y, zs...) = accum(accum(x, y), zs...)    accum(x:: Tuple, y:: Tuple) = accum.(x, y)  accum(x:: AbstractArray, y:: AbstractArray) = accum.(x, y)\n In the end, the pullback will return each input variable\u2019s gradient of the original program. Which means it always hasthe same number of gradients as input variables. But our  forward function has one extra variable which is the function,we will return its gradient as well, in most cases, it is  nothing, but if it is a closure, or a callable object, it maynot be  nothing.\n  function adjoint(ir, pbs)   adj = empty(ir)   self = argument!(adj)   delta = argument!(adj)   pullbacks = pushfirst!(adj, xcall(:getfield, self,  QuoteNode(:data)))     grads =  Dict()   grad(x, x\u0304) = push!(get!(grads, x, []), x\u0304)   grad(x) = xaccum(adj, get(grads, x, [])...)   grad(last(keys(ir)), delta)     vars = keys(ir)    for k  in length(vars):- 1: 1   v = vars[k]   ex = ir[v].expr    if haskey(pbs, v)   pbv = insertafter!(adj, pullbacks, xcall(:getindex, pullbacks, k))   g = push!(adj,  Expr(:call, pbv, grad(v)))      for (i, x)  in enumerate(ex.args)   x  isa Variable ||  continue   grad(x, push!(adj, xgetindex(g, i)))    end    end    end   gs = [grad(x)  for x  in arguments(ir)]   \u0394 = push!(adj, xtuple(gs...))    return!(adj, \u0394)    return adj   end\n  Reviewing what we just implemented above, we can find \n......", "posttime": "2020-06-12 00:14:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "julia,\u4ee3\u7801,\u5e7f\u544a,source,ir", "title": "\u4f7f\u7528Julia\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u8f6c\u6362\u5e7f\u544a", "title_en": "Implement your own source transformation AD with Julia", "transed": 1, "url": "http://blog.rogerluo.me/2019/07/27/yassad/", "via": "", "real_tags": ["julia", "\u4ee3\u7801", "\u5e7f\u544a", "source", "ir"]}, {"category": "", "categoryclass": "", "imagename": "192f094615fe29e7d32a40a22025450c.png", "infoid": 1006152, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u597d\u7684PSD\u652f\u6301\uff1a\u73b0\u5728\u53ef\u4ee5\u5bfc\u51fa16\u4f4d\u6587\u4ef6\uff0c\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u8bfb/\u5199\u901a\u9053\u3002\n\u5728\u4e0a\u4e00\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u542c\u53d6\u4e86\u7528\u6237\u5173\u4e8e\u5728\u5de5\u5177\u7bb1\u4e2d\u5f15\u5165\u5de5\u5177\u7ec4\u7684\u53cd\u9988\u3002\u5f88\u591a\u4eba\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4eec\u603b\u4f53\u4e0a\u5f88\u6b23\u8d4f\u8fd9\u4e2a\u6539\u53d8\uff0c\u4f46\u662f\u4ed6\u4eec\u975e\u5e38\u53cd\u5bf9\u5728\u4e00\u4e2a\u7ec4\u4e2d\u70b9\u51fb\u6253\u5f00\u5de5\u5177\u5217\u8868\u3002\u65b0\u7248\u672c\u589e\u52a0\u4e86\u4e00\u5c06\u9f20\u6807\u60ac\u505c\u5728\u5de5\u5177\u7bb1\u6309\u94ae\u4e0a\u5c31\u663e\u793a\u5de5\u5177\u7ec4\u83dc\u5355\u7684\u9009\u9879\uff0c\u800c\u4e0d\u5fc5\u5355\u51fb\u5b83\u3002\u5f53\u5de5\u5177\u7bb1\u6392\u5217\u5728\u5355\u4e2a\u5217\u4e2d\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u542f\u7528\u6b64\u9009\u9879\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u9996\u9009\u9879\u5bf9\u8bdd\u6846\u7684\u5de5\u5177\u7bb1\u9875\u9762\u4e3a\u4efb\u610f\u5de5\u5177\u7bb1\u5e03\u5c40\u542f\u7528\u8be5\u9009\u9879\uff0c\u6216\u5b8c\u5168\u7981\u7528\u8be5\u9009\u9879\u3002\n\u6b64\u5916\uff0c\u5f53\u4e0d\u4f7f\u7528\u65b0\u884c\u4e3a\u65f6\uff0c\u5de5\u5177\u7bb1\u5de5\u5177\u63d0\u793a\u73b0\u5728\u4f1a\u5217\u51fa\u4e00\u7ec4\u4e2d\u7684\u6240\u6709\u5de5\u5177\uff0c\u4ee5\u63d0\u9ad8\u5b83\u4eec\u7684\u53ef\u53d1\u73b0\u6027\u3002\nGIMP\u73b0\u5728\u9ed8\u8ba4\u63d0\u4f9b\u4e00\u79cd\u975e\u7834\u574f\u6027\u7684\u88c1\u526a\u884c\u4e3a\u3002\u5b83\u4e0d\u4f1a\u5220\u9664\u88c1\u526a\u51fa\u6765\u7684\u50cf\u7d20\uff0c\u56e0\u6b64\u4e0d\u4f1a\u540c\u65f6\u66f4\u6539\u56fe\u5c42\u548c\u753b\u5e03\uff0c\u800c\u53ea\u662f\u8c03\u6574\u753b\u5e03\u7684\u5927\u5c0f\u3002\u5982\u679c\u5bfc\u51fa\u6b64\u7c7b\u56fe\u50cf\uff0c\u5219\u751f\u6210\u7684\u6587\u4ef6\u5c06\u4ec5\u5305\u542b\u60a8\u5728\u753b\u5e03\u8fb9\u754c\u5185\u770b\u5230\u7684\u5185\u5bb9\u3002\n\u901a\u8fc7\u8f6c\u5230\u56fe\u50cf-\u4f7f\u753b\u5e03\u9002\u5408\u56fe\u5c42\uff0c\u60a8\u53ef\u4ee5\u6062\u590d\u4e3a\u539f\u59cb\u7684\u672a\u88c1\u526a\u7248\u672c(&gt\uff1bFit Canvas to Layers)\u3002\u60a8\u5728\u88c1\u526a\u548c\u53d6\u6d88\u88c1\u526a\u4e4b\u95f4\u6240\u505a\u7684\u4efb\u4f55\u7f16\u8f91\u90fd\u4e0d\u4f1a\u6d88\u5931\u3002\n\u5982\u679c\u5c06\u9879\u76ee\u53e6\u5b58\u4e3aXCF\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u5173\u95ed\u8be5\u6587\u4ef6\uff0c\u751a\u81f3\u9000\u51faGIMP\uff0c\u5e76\u4e14\u4ecd\u7136\u53ef\u4ee5\u5220\u9664\u88c1\u526a\uff0c\u7136\u540e\u968f\u65f6\u4ee5\u4e0d\u540c\u65b9\u5f0f\u8fdb\u884c\u88c1\u526a\u3002\n\u5f53\u60a8\u5bf9\u88c1\u526a\u51b3\u5b9a\u72b9\u8c6b\u4e0d\u51b3\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8f6c\u5230\u67e5\u770b-&gt;\u5168\u90e8\u663e\u793a\u6765\u67e5\u770b\u88c1\u526a\u51fa\u6765\u7684\u50cf\u7d20\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u6062\u590d\u65e7\u7684\u201c\u7834\u574f\u6027\u201d\u884c\u4e3a\uff0c\u53ea\u9700\u5728\u88c1\u526a\u5de5\u5177\u7684\u8bbe\u7f6e\u4e2d\u52fe\u9009\u201c\u5220\u9664\u88c1\u526a\u7684\u50cf\u7d20\u201d\u590d\u9009\u6846\u5373\u53ef\u3002\nVignette\u6ee4\u955c\u73b0\u5728\u6709\u753b\u5e03\u4e0a\u7684\u63a7\u4ef6\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u64cd\u4f5cVignette\u7684\u51e0\u4f55\u4f53\uff0c\u800c\u4e0d\u662f\u5728\u5bf9\u8bdd\u6846\u4e2d\u8f93\u5165\u6570\u5b57\u503c\u3002\n\u65e0\u8bba\u60a8\u9009\u62e9\u54ea\u79cd\u6655\u5708\u5f62\u72b6\uff0c\u60a8\u59cb\u7ec8\u53ef\u4ee5\u63a7\u5236\u4fdd\u6301\u4e0d\u53d8\u7684\u5185\u90e8\u533a\u57df\u3001\u6655\u5708\u8fb9\u754c(\u50cf\u7d20\u505c\u6b62\u53d8\u5316\u7684\u4f4d\u7f6e)\u4ee5\u53ca\u4e24\u8005\u4e4b\u95f4\u7684\u4e2d\u70b9\u3002\u5c06\u9f20\u6807\u6307\u9488\u62d6\u52a8\u5230\u5916\u90e8\u63a7\u4ef6\u4e4b\u5916\u7684\u4efb\u4f55\u4f4d\u7f6e\u90fd\u4f1a\u5bfc\u81f4Gignette\u5f62\u72b6\u65cb\u8f6c\u3002\n\u6b64\u5916\uff0c\u8fd8\u6709\u4e24\u4e2a\u65b0\u7684\u5f62\u72b6\uff0c\u201c\u6c34\u5e73\u201d\u548c\u201c\u5782\u76f4\u201d\u3002\nVariable Blur\u5c06\u56fe\u5c42\u6216\u901a\u9053\u4f5c\u4e3a\u8f93\u5165\u8499\u7248\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e9b\u50cf\u7d20\u5e94\u8be5\u6a21\u7cca(\u5728\u7528\u6237\u5b9a\u4e49\u7684\u6700\u5927\u6a21\u7cca\u5f3a\u5ea6\u7684\u767e\u5206\u6bd4)\uff0c\u54ea\u4e9b\u50cf\u7d20\u5e94\u8be5\u4fdd\u6301\u4e0d\u53d8\uff0c\u7136\u540e\u4f7f\u7528\u9ad8\u65af\u6a21\u7cca\u6765\u6a21\u7cca\u50cf\u7d20\u3002\n\u955c\u5934\u6a21\u7cca\u7684\u529f\u80fd\u4e0e\u6b64\u76f8\u540c\uff0c\u4f46\u63d0\u4f9b\u4e86\u66f4\u903c\u771f\u7684\u7126\u5916\u6a21\u7cca\u6a21\u62df\uff0c\u5305\u62ec\u901a\u8fc7\u80cc\u666f\u4e2d\u6a21\u7cca\u7684\u9ad8\u5149\u90e8\u5206\u906e\u6321\u9510\u5229\u7684\u524d\u666f\u5bf9\u8c61\u3002\u60a8\u8fd8\u53ef\u4ee5\u63a7\u5236\u9ad8\u5149\u53d7\u5f71\u54cd\u7684\u7a0b\u5ea6\u3002\n\u7126\u70b9\u6a21\u7cca\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u754c\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u66f4\u65b0\u7684\u6655\u5708\u6ee4\u955c\u76f8\u540c\u7684\u753b\u5e03\u4e0a\u63a7\u4ef6\u8fdb\u884c\u7126\u5916\u6a21\u7cca\u3002\u53ef\u4ee5\u9009\u62e9\u9ad8\u65af\u6a21\u7cca\u548c\u955c\u5934\u6a21\u7cca\u4f5c\u4e3a\u6a21\u7cca\u65b9\u6cd5\u3002\u6ee4\u955c\u7684\u7528\u9014\u4e4b\u4e00\u662f\u4ece\u666e\u901a\u7167\u7247\u4e2d\u5236\u4f5c\u5fae\u578b\u8d5d\u54c1-\u8fd9\u4e00\u6548\u679c\u6700\u521d\u662f\u901a\u8fc7\u4f7f\u7528\u503e\u659c\u79fb\u4f4d\u955c\u5934\u6539\u53d8\u7126\u9762\u5b9e\u73b0\u7684\u3002\n\u65b0\u7684\u5e03\u9686\u6ee4\u955c\u5e94\u7528\u7684\u6548\u679c\u770b\u8d77\u6765\u4e0e\u4f7f\u7528\u67d4\u548c\u8f89\u5149\u6ee4\u955c\u83b7\u5f97\u7684\u6548\u679c\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u4e0e\u67d4\u548c\u8f89\u5149\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4e0d\u4f1a\u964d\u4f4e\u9971\u548c\u5ea6\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0cBloom\u9694\u79bb\u9ad8\u5149\u533a\u57df\uff0c\u5bf9\u5176\u8fdb\u884c\u7fbd\u5316\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u539f\u59cb\u56fe\u7247\u91cd\u65b0\u7ec4\u5408\u3002\nGEGL\u6ee4\u955c\u7684\u9009\u9879\u5bf9\u8bdd\u6846\u73b0\u5728\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u6df7\u5408\u9009\u9879\u90e8\u5206\uff0c\u5141\u8bb8\u63a7\u5236\u5e94\u7528\u6ee4\u955c\u7684\u6df7\u5408\u6a21\u5f0f\u548c\u4e0d\u900f\u660e\u5ea6\u3002\u8fd9\u53d6\u4ee3\u4e862.10.10\u7248\u4e2d\u5220\u9664\u7684\u6de1\u5165\u6de1\u51fa\u529f\u80fd\u3002\n\u8fc7\u6ee4\u5668\u9884\u89c8\u73b0\u5728\u5373\u4f7f\u5728\u5173\u95ed\u65f6\u4e5f\u4f1a\u4fdd\u6301\u7f13\u5b58\u72b6\u6001\uff0c\u5141\u8bb8\u5728\u539f\u59cb\u89c6\u56fe\u548c\u8fc7\u6ee4\u540e\u7684\u89c6\u56fe\u4e4b\u95f4\u5feb\u901f\u5207\u6362\u3002\n\u867d\u7136GIMP\u5df2\u7ecf\u53ef\u4ee5\u52a0\u8f7d16\u4f4d/\u901a\u9053\u7684PSD\u6587\u4ef6\uff0c\u4f46\u73b0\u5728\u4e5f\u53ef\u4ee5\u4f7f\u752816\u4f4d/\u901a\u9053\u5bfc\u51fa\u9ad8\u4f4d\u6df1\u5ea6\u56fe\u50cf\u3002\n\u6b64\u5916\uff0c\u73b0\u5728\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u5bfc\u51fa\u901a\u9053\uff0c\u5e76\u4f7f\u7528\u5176\u539f\u59cb\u989c\u8272\u3002\n\u4f73\u80fdCR3\u6587\u4ef6\u73b0\u5728\u53ef\u4ee5\u88abGIMP\u6b63\u786e\u8bc6\u522b\uff0c\u5e76\u53d1\u9001\u5230\u60a8\u9009\u62e9\u7684\u539f\u59cb\u5f00\u53d1\u8f6f\u4ef6\u3002\n\u7528\u4e8e\u901a\u8fc7\u626b\u63cf\u4eea\u83b7\u53d6\u56fe\u50cf\u7684TWAIN\u63d2\u4ef6\u5df2\u7a0d\u4f5c\u91cd\u6784\uff0c\u73b0\u5728\u652f\u630116\u4f4dRGB/\u7070\u5ea6\u56fe\u50cf\u3002\n\u5f53Alpha\u901a\u9053\u5b58\u5728\u4e14\u672c\u8eab\u4e3a0\u65f6\uff0cPNG\u548cTIFF\u63d2\u4ef6\u73b0\u5728\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u989c\u8272\u503c\u3002\u8fd9\u662f\u4e3a\u4e86\u89e3\u51b3\u4f7f\u7528\u7b80\u5355\u526a\u5207\u6765\u5220\u9664\u654f\u611f\u4fe1\u606f\u7684\u5b89\u5168\u987e\u8651\u3002\nPDF\u63d2\u4ef6\u73b0\u5728\u4ee5\u81ea\u4e0b\u800c\u4e0a\u7684\u987a\u5e8f\u5bfc\u5165\u591a\u9875\u6587\u6863\uff0c\u7c7b\u4f3c\u4e8e\u52a8\u753b\u683c\u5f0f\uff0c\u4e5f\u7c7b\u4f3c\u4e8ePDF\u5bfc\u51fa\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u8fd9\u5e26\u6765\u4e86\u4e00\u81f4\u6027\uff0c\u4f46\u6253\u7834\u4e86\u7b2c\u4e09\u65b9\u811a\u672c\u4e2d\u7684\u73b0\u6709\u884c\u4e3a\u3002\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u65b0\u7684GIMP\u7248\u672c\u4f34\u968f\u7740BABL\u548cGEGL\u5e93\u7684\u65b0\u7248\u672c\u3002\n\u65b0\u7248\u672c\u7684BABL\u4e3b\u8981\u6709\u9519\u8bef\u4fee\u590d\u548c\u6027\u80fd\u6539\u8fdb\uff0c\u6bd4\u5982\u4f7f\u7528AVX2\u6307\u4ee4\u5c06Gamma U8\u6570\u636e\u8f6c\u6362\u4e3a\u7ebf\u6027\u6d6e\u70b9\u6570(\u4f7f\u8fd9\u4e9b\u8f6c\u6362\u901f\u5ea6\u57281.25x\u52302.2x\u4e4b\u95f4\u66f4\u5feb)\u3002\u5b83\u8fd8\u4e3aVala\u96c6\u6210\u751f\u6210VAPI\u6587\u4ef6\uff0c\u56e0\u4e3aGIMP\u7684\u4e0d\u7a33\u5b9a\u5206\u652f\u73b0\u5728\u652f\u6301\u4f7f\u7528Vala\u521b\u5efa\u65b0\u7684\u63d2\u4ef6\u3002\n\u65b0\u7684\u5143\u6570\u636eAPI\uff0c\u5141\u8bb8\u4ee5\u901a\u7528\u7684\u65b9\u5f0f\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u52a0\u8f7d\u5668\u548c\u4fdd\u5b58\u5668\u4e2d\u5904\u7406\u975eExif\u5143\u6570\u636e\u3002\nDropdow\u64cd\u4f5c\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u589e\u957f\u9634\u5f71\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f7f\u7528\u96f6\u4f4d\u79fb\u548c\u8f83\u5927\u7684\u9634\u5f71\uff0c\u60a8\u53ef\u4ee5\u5728\u56fe\u5c42\u4e2d\u63cf\u8fb9\u6587\u672c\u6216\u4f4d\u56fe\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0cGEGL\u83b7\u5f97\u4e86\u51e0\u4e2a\u65b0\u64cd\u4f5c\uff0c\u5176\u4e2d\u4e00\u4e9b\u6211\u4eec\u5df2\u7ecf\u5728\u4e0a\u9762\u63cf\u8ff0\u8fc7\u4e86\u3002\u5176\u4ed6\u5305\u62ec\uff1a\n\u5206\u6bb5\u6df7\u5408\uff1a\u4f7f\u7528\u7070\u5ea6\u8d34\u56fe\u4f5c\u4e3a\u4f5c\u4e3aLUT\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u6570\u7ec4\u7684\u7d22\u5f15(\u65b0\u7684\u6a21\u7cca\u6ee4\u955c\u9700\u8981)\u3002\n\u8fd9\u4e00\u7248\u672c\u7684\u8d21\u732e\u8005\u6709\uff1aEll\uff0cJehan\uff0cJernej Simon\u010dI\u010d\uff0clillollo\uff0cLuz.paz\uff0cMarco Ciampa\uff0cMichael Natterer\uff0cMichael Schumacher\uff0cNikc\uff0c\u00e4yvind Kol\u00e7s\uff0cPesder\uff0cSabri\u00dcnel\uff0cSalamandar\uff0cSergio Jim\u00e9nez Herena\uff0cSimon Budigi\uff0cT Collins\uff0cEwob\u3002\n\u7ffb\u8bd1\uff1aAlexandre Prokoudine\uff0cAnders Jonsson\uff0cBruce Cowan\uff0cCristian Secar\u0103\uff0cDaniel Korostil\uff0cDaniel\u0218erb\u0103Nescu\uff0cDimitris Spingos\uff0cJiri Gr\u00f6nroos\uff0cJordan i Mas\uff0cNathan Folens\uff0cPiotr Dr\u0105g\uff0cRodrigo Iled\u00f3Milanca\uff0cSabri\u00dcnel\uff0cSeong-ho Cho\uff0cTim Sbusch\uff0cYuri Chornoivan\uff0cGeorgy\u3002\n\u6211\u4eec\u8fd8\u611f\u8c22Lillollo\u3001nmat\u548cMichael Schumacher\u5bf9\u9519\u8bef\u62a5\u544a\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u611f\u8c22Julien Hardelin\u66f4\u65b0\u7528\u6237\u624b\u518c\u3002\n\u6211\u4eec\u6b63\u5728\u5b8c\u62102.99.2\u7248\u7684\u4e3b\u5206\u652f\u7684\u5f00\u53d1\uff0c\u8fd9\u662f2.99\u7cfb\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7684\u7248\u672c\uff0c\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u7684\u67d0\u4e2a\u65f6\u5019\u4f1a\u5347\u7ea7\u52303.0\u7248\u3002\n\u6211\u4eec\u77e5\u9053\uff0c\u4ece\u505a\u6570\u5b57\u7ed8\u753b\u7684\u4eba(\u4f60\u73b0\u5728\u53ef\u4ee5\u70ed\u63d2\u62d4\u56fe\u5f62\u5e73\u677f\u7535\u8111)\u5230\u4f7f\u75284K\u663e\u793a\u5c4f\u7684\u6444\u5f71\u5e08(\u56fe\u6807\u5927\u5c0f\u73b0\u5728\u9002\u5408\u4ed6\u4eec)\uff0c\u518d\u5230\u666e\u904d\u5e0c\u671b\u4ece\u4ed6\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5220\u9664GTK2\u548cPython 2\u7684\u4eba\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u8fd9\u6b21\u53d1\u5e03\u662f\u6211\u4eec\u7528\u6237\u7684\u9884\u671f\u3002\n\u867d\u7136\u6211\u4eec\u671f\u5f85\u53cd\u9988\u548c\u9519\u8bef\u62a5\u544a\uff0c\u4f46\u6211\u4eec\u4e0d\u63a8\u8350\u5373\u5c06\u53d1\u5e03\u76842.99.2\u7248\u7528\u4e8e\u751f\u4ea7\u30022.10.x\u7cfb\u5217\u65e2\u6709\u6539\u8fdb\uff0c\u4e5f\u6709\u5012\u9000\u3002\u5168\u90e8\u7ec6\u8282\u5c06\u5728\u53d1\u5e03\u540e(\u5f88\u5feb)\u516c\u5e03\u3002\n\u6682\u65f6\u522b\u5fd8\u4e86\uff0c\u4f60\u53ef\u4ee5\u6350\u94b1\u7ed9\u8fd9\u4e2a\u9879\u76ee\uff0c\u4e2a\u4eba\u8d44\u52a9\u51e0\u4e2aGIMP\u5f00\u53d1\u8005\uff0c\u4f5c\u4e3a\u56de\u62a5\u548c\u52a0\u901fGIMP\u5f00\u53d1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002", "note_en": "Better  PSD support: exporting of 16-bit files now available, reading/writing channels in the right\u00a0order\n   We listened to users\u2019 feedback on introducing tool groups in the toolbox in the previous release. A lot of people told us they appreciated the change in general but were quite averse to having to click to open the list of tools in a group. The new release adds the option to show the tool-group menu as soon as the mouse hovers over the toolbox button, without having to click it. This option is enabled by default when the toolbox is arranged in a single column, but it can be enabled for arbitrary toolbox layouts, or disabled entirely, through the  Toolbox page of the  Preferences\u00a0dialog.\n Additionally, when not using the new behavior, toolbox tooltips now list all the tools in a group, to improve their\u00a0discoverability.\n   GIMP now provides a kind of a non-destructive cropping behavior by default. Instead of deleting pixels that you cropped out and thus changing both the layer and the canvas, it will simply resize the canvas. If you export such an image, the resulted file will only have what you see within canvas\u00a0boundaries.\n   You can revert to the original uncropped version by going to  Image -&gt; Fit Canvas to Layers. None of your edits between cropping and uncropping will\u00a0disappear.\n If you save your project as an  XCF file, you can close the file and even quit  GIMP and still be able to remove cropping and then crop differently at any time\u00a0later.\n When you are on the fence about your cropping decision, you can view pixels that you cropped out by going to  View -&gt; Show All.\n If you want the old \u201cdestructive\u201d behavior back, simply tick the \u2018Delete cropped pixels\u2019 checkbox in  Crop tool\u2019s\u00a0settings.\n  The  Vignette filter now has on-canvas controls to visually manipulate the geometry of the vignette rather than enter numeric values in a\u00a0dialog.\n Whichever vignette shape you pick, you will always have control for the inner area that stays unchanged, the border of the vignette where pixels stop changing, and the medium point between the two. Dragging the mouse pointer anywhere outside of the outer control will result in rotating the vignette\u00a0shape.\n In addition, there are two new shapes, \u2018Horizontal\u2019 and\u00a0\u2018Vertical\u2019.\n   Variable Blur takes a layer or channel as an input mask to decide which pixels should be blurred (at what percentage of user-defined maximum blur intensity) and what pixels should stay unchanged, and then blurs pixels with Gaussian\u00a0Blur.\n  Lens Blur does the same but provides a far more realistic imitation of the out-of-focus blur, including the partial occlusion of sharp foreground objects by highlights blurred in the background. You also have control of how much highlights are\u00a0affected.\n  Focus Blur provides a simple user interface to out-of-focus blurring using the same on-canvas controls that the updated  Vignette filter has. You can choose between  Gaussian Blur and  Lens Blur as blurring methods. One of the uses for the filter is creating miniature fakes out of regular photos \u2014 the effect originally achieved by using a tilt-shift lens that changes the plane of\u00a0focus.\n  New  Bloom filter applies an effect that looks a lot like what you can get with the  Soft Glow filter but, unlike,  Soft Glow, it doesn\u2019t decrease saturation. Technically,  Bloom isolates the highlights region, feathers it, and then recombines it with the original\u00a0image.\n   The options dialog of  GEGL filters now provides a new  Blending Options section, which allows controlling the blending-mode and opacity with which the filter is applied.This replaces the  Fade functionality, which was removed in version\u00a02.10.10.\n Filter previews now remain cached even when toggled off, allowing for quickly switching between the original and filtered\u00a0views.\n  While  GIMP could already load 16-bits-per-channel  PSD files, high-bit-depth images can now be exported using 16-bits per channel as\u00a0well.\n In addition, channels are now exported in the correct order, and with their original\u00a0colors.\n  Canon  CR3 files are now properly recognized by  GIMP and sent to your raw developer software of\u00a0choice.\n The  TWAIN plug-in used for acquiring images via scanners has been slightly refactored and now supports 16-bit  RGB/grayscale\u00a0images.\n PNG and  TIFF plug-ins now default to not saving color values when alpha channel is present and 0 itself. This is to address security concerns about using simple cutting to remove sensitive\u00a0information.\n The  PDF plug-in now imports multi-page documents in bottom-first order, similar to animated formats, and also similar to defaults for  PDF exporting. This brings consistency but breaks existing behavior in 3rd party\u00a0scripts.\n  As usual, new  GIMP release is accompanied by new releases of  babl and   GEGL\u00a0libraries.\n The new version of babl comes mostly with bug fixes and performance improvements like the use of  AVX2 instructions to convert gamma u8 data to linear float (making those conversions between 1.25x and 2.2x faster). It also features  VAPI file generation for Vala integration as the unstable branch of  GIMP now supports creating new plug-ins with\u00a0Vala.\n  New meta-data  API that permits handling non-Exif metadata in different file loadersand savers in a generic\u00a0manner\n    The  dropshadow operation now has an option to grow the shadow. This means, with zero shift and larger shadow, you can stroke a text or a bitmap\u00a0layer.\n On top of that,  GEGL got several new operations, some of which we already described above. Others\u00a0are:\n piecewise-blend: uses a grayscale map as index into array of buffers used as  LUT (required by new blur\u00a0filters)\n  Contributors to this release are: Ell, Jehan, Jernej Simon\u010di\u010d, lillolollo, luz.paz, Marco Ciampa, Michael Natterer, Michael Schumacher, Nikc, \u00d8yvind Kol\u00e5s, pesder, Sabri \u00dcnal, Salamandar, Sergio Jim\u00e9nez Herena, Simon Budig, T Collins,\u00a0woob.\n Translators: Alexandre Prokoudine, Anders Jonsson, Bruce Cowan, Cristian Secar\u0103, Daniel Korostil, Daniel \u0218erb\u0103nescu, Dimitris Spingos, Jiri Gr\u00f6nroos, Jordi Mas, Nathan Follens, Piotr Dr\u0105g, Rodrigo Lled\u00f3 Milanca, Sabri \u00dcnal, Seong-ho Cho, Tim Sabsch, Yuri Chornoivan, Georgy\u00a0Timofeevsky.\n We also thank lillolollo, nmat, and Michael Schumacher for triaging bug reports, and Julien Hardelin for updating the user\u00a0manual.\n  We are wrapping up the development in the  master branch for v2.99.2, the first unstable release in the 2.99 series leading up to v3.0 some time in the\u00a0future.\n We know that this release is anticipated by various demographics of our users, from people doing digital painting (you can hotplug a graphic tablet now) to photographers using a 4K display (the icon size is right for them now) to people generally wishing to drop  GTK2 and Python 2 from their operating\u00a0systems.\n  While we are looking forward to feedback and bug reports, we do not recommend upcoming v2.99.2 for use in production. There are both improvements and regressions from the 2.10.x series. Full details will be published when the release is out\u00a0(soon).\n For the time being, don\u2019t forget you can  donate to the project and personallyfund several  GIMP developers, as a way to giveback, and to accelerate the development of  GIMP.", "posttime": "2020-06-12 00:14:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,gimp,\u73b0\u5728", "title": "GIMP 2.10.20\u53d1\u5e03", "title_en": "Gimp 2.10.20 Released", "transed": 1, "url": "https://www.gimp.org/news/2020/06/11/gimp-2-10-20-released/", "via": "", "real_tags": ["\u53d1\u5e03", "gimp", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "87676dc6c59dbfcbab766a9dcb42bc42.jpg", "infoid": 1006151, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u56db\uff0c\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(American Civil Liberties Union)\u8d77\u8bc9\u9762\u90e8\u8bc6\u522b\u521d\u521b\u516c\u53f8Clearview AI\uff0c\u8be5\u516c\u53f8\u58f0\u79f0\u5e2e\u52a9\u6570\u767e\u5bb6\u6267\u6cd5\u673a\u6784\u4f7f\u7528\u5728\u7ebf\u7167\u7247\u7834\u6848\uff0c\u6307\u63a7\u8be5\u516c\u53f8\u201c\u975e\u6cd5\u7684\u3001\u7834\u574f\u9690\u79c1\u7684\u76d1\u63a7\u6d3b\u52a8\u201d\u3002\n\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u63d0\u8d77\u7684\u8bc9\u8bbc\u4e2d\uff0c\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u8868\u793a\uff0cClearview\u8fdd\u53cd\u4e86\u4e00\u9879\u5dde\u6cd5\u5f8b\uff0c\u8be5\u6cd5\u5f8b\u7981\u6b62\u516c\u53f8\u5728\u672a\u7ecf\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5c45\u6c11\u7684\u6307\u7eb9\u6216\u9762\u90e8\u626b\u63cf\u3002\u6839\u636e\u8fd9\u9879\u6cd5\u5f8b\uff0c\u5c45\u6c11\u6709\u6743\u8d77\u8bc9\u516c\u53f8\uff0c\u6bcf\u6b21\u4fb5\u72af\u9690\u79c1\u7684\u8d54\u507f\u6700\u9ad8\u53ef\u8fbe5000\u7f8e\u5143\u3002\n\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u7684\u5f8b\u5e08\u5185\u68ee\u00b7\u5f17\u91cc\u5fb7\u00b7\u97e6\u65af\u52d2(Nathan Freed Wessler)\u8bf4\uff0c\u201c\u5e95\u7ebf\u662f\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u63a7\u5236\uff0cClearview\u7684\u4ea7\u54c1\u5c06\u7ec8\u7ed3\u6211\u4eec\u6240\u77e5\u7684\u9690\u79c1\uff0c\u6211\u4eec\u5c06\u628a\u516c\u53f8\u544a\u4e0a\u6cd5\u5ead\uff0c\u4ee5\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u3002\u201d\n\u8fd9\u8d77\u5411\u5e93\u514b\u53bf\u5de1\u56de\u6cd5\u9662\u63d0\u8d77\u7684\u8bc9\u8bbc\uff0c\u52a0\u5267\u4e86\u81ea\u4eca\u5e741\u6708\u4ee5\u6765\u5bf9Clearview\u65e5\u76ca\u589e\u957f\u7684\u53cd\u5f39\uff0c\u5f53\u65f6\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u62a5\u9053\u79f0\uff0cClearview\u5728\u4e92\u8054\u7f51\u4e0a\u79ef\u7d2f\u4e8630\u591a\u4ebf\u5f20\u7167\u7247\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u62ecFacebook\u3001YouTube\u3001Twitter\u548cVenmo\u3002\u8fd9\u4e2a\u7167\u7247\u5b9d\u5e93\u4f7f\u4efb\u4f55\u4f7f\u7528Clearview\u5e94\u7528\u7a0b\u5e8f\u7684\u4eba\u90fd\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4eba\u4e0e\u4ed6\u4eec\u7684\u5728\u7ebf\u7167\u7247\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u627e\u5230\u6307\u5411\u56fe\u50cf\u6765\u6e90\u7f51\u7ad9\u7684\u94fe\u63a5\u3002\n\u8fd1\u51e0\u4e2a\u6708\u6765\uff0c\u7ebd\u7ea6\u548c\u4f5b\u8499\u7279\u5dde\u7684\u4eba\u4eec\u4e5f\u5bf9\u8be5\u516c\u53f8\u63d0\u8d77\u4e86\u8bc9\u8bbc\uff0c\u4f5b\u8499\u7279\u5dde\u548c\u65b0\u6cfd\u897f\u5dde\u7684\u603b\u68c0\u5bdf\u957f\u5df2\u7ecf\u547d\u4ee4Clearview\u505c\u6b62\u6536\u96c6\u5c45\u6c11\u7684\u7167\u7247\u3002\n\u6839\u636e\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u7684\u8d77\u8bc9\u4e66\uff0c\u201cClearview\u5df2\u7ecf\u5f00\u59cb\u505a\u8bb8\u591a\u516c\u53f8\u51fa\u4e8e\u9053\u5fb7\u8003\u8651\u800c\u6545\u610f\u907f\u514d\u7684\u4e8b\u60c5\uff1a\u521b\u5efa\u4e00\u4e2a\u6d77\u91cf\u6570\u636e\u5e93\uff0c\u91cc\u9762\u6709\u6570\u5341\u4ebf\u4eba\u7684\u9762\u90e8\u6307\u7eb9\uff0c\u5176\u4e2d\u5305\u62ec\u6570\u767e\u4e07\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4eba\uff0c\u8fd9\u4e9b\u4eba\u5b8c\u5168\u4e0d\u77e5\u9053\uff0c\u5e76\u5411\u4e16\u754c\u5404\u5730\u7684\u79c1\u4eba\u548c\u653f\u5e9c\u884c\u4e3a\u8005\u63d0\u4f9b\u5bf9\u8be5\u6570\u636e\u5e93\u7684\u4ed8\u8d39\u8bbf\u95ee\u3002\u201d\n\u8d77\u8bc9\u4e66\u79f0\uff0c\u8be5\u516c\u53f8\u7684\u5546\u4e1a\u6a21\u5f0f\u201c\u4f3c\u4e4e\u4f53\u73b0\u4e86\u5669\u68a6\u822c\u7684\u573a\u666f\u201d\uff0c\u201c\u79c1\u4eba\u516c\u53f8\u5728\u6ca1\u6709\u901a\u77e5\u53d7\u5f71\u54cd\u7684\u4e2a\u4eba\u7684\u60c5\u51b5\u4e0b\uff0c\u6355\u83b7\u4e86\u65e0\u6570\u6570\u91cf\u7684\u751f\u7269\u8bc6\u522b\u6570\u636e\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u8ffd\u8e2a\uff0c\u66f4\u4e0d\u7528\u8bf4\u4ed6\u4eec\u7684\u540c\u610f\u4e86\u3002\u201d\nClearview\u7684\u5f8b\u5e08\u6258\u5c14\u00b7\u57c3\u514b\u5170(Tor Ekeland)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201cClearview AI\u662f\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u5b83\u53ea\u4f7f\u7528\u4e92\u8054\u7f51\u4e0a\u53ef\u8bbf\u95ee\u7684\u516c\u5f00\u56fe\u50cf\u3002\u201d\u201c\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u60f3\u8981\u5ba1\u67e5\u4eba\u4eec\u53ef\u4ee5\u4f7f\u7528\u54ea\u4e9b\u641c\u7d22\u5f15\u64ce\u6765\u83b7\u53d6\u4e92\u8054\u7f51\u4e0a\u7684\u516c\u5171\u4fe1\u606f\uff0c\u8fd9\u662f\u8352\u8c2c\u7684\u3002\u7b2c\u4e00\u4fee\u6b63\u6848\u7981\u6b62\u8fd9\u6837\u505a\u3002\u201c\n\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u7684\u97e6\u65af\u52d2\u5148\u751f\u8bf4\uff0c\u7b2c\u4e00\u4fee\u6b63\u6848\u201c\u6ca1\u6709\u4fdd\u62a4Clearview\u7684\u975e\u6cd5\u884c\u4e3a\u201d\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u8bc9\u8bbc\u5e76\u4e0d\u6311\u6218Clearview\u4ece\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u6293\u53d6\u56fe\u7247\u7684\u884c\u4e3a\u3002\u201d\u201c\u5b83\u6311\u6218\u4e86\u4ece\u8fd9\u4e9b\u56fe\u50cf\u4e2d\u79d8\u5bc6\u3001\u975e\u53cc\u65b9\u540c\u610f\u548c\u975e\u6cd5\u6355\u83b7\u4e2a\u4eba\u751f\u7269\u8bc6\u522b\u8eab\u4efd\u7684\u884c\u4e3a\u3002\u6355\u6349\u9762\u90e8\u6307\u7eb9\u662f\u4e00\u79cd\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u8a00\u8bed\u3002\u201c\u3002\n\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7684\u8bc9\u8bbc\u662f\u7531\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u3001\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u548c\u57c3\u5fb7\u68ee\u00b7PC\u5f8b\u5e08\u4e8b\u52a1\u6240(Edelson PC)\u51c6\u5907\u7684\uff0c\u540e\u8005\u4e13\u95e8\u9488\u5bf9\u4fb5\u72af\u9690\u79c1\u7684\u79d1\u6280\u516c\u53f8\u63d0\u8d77\u96c6\u4f53\u8bc9\u8bbc\u3002\u8be5\u516c\u53f8\u5377\u5165\u4e86\u4e00\u8d77\u8bc9\u8bbc\uff0c\u6700\u7ec8\u4e0eFacebook\u5c31\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u6280\u672f\u8fbe\u6210\u4e865.5\u4ebf\u7f8e\u5143\u7684\u548c\u89e3\u3002\n\u7b7e\u7f72\u8fd9\u9879\u6cd5\u5f8b\u884c\u52a8\u7684\u5176\u4ed6\u7ec4\u7ec7\u5305\u62ec\u829d\u52a0\u54e5\u53cd\u6027\u5265\u524a\u8054\u76df\u3001\u6027\u5de5\u4f5c\u8005\u5916\u8054\u9879\u76ee\u548c\u4f0a\u5229\u8bfa\u4f0a\u5dde\u516c\u5171\u5229\u76ca\u7814\u7a76\u5c0f\u7ec4\u3002\n\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u8868\u793a\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u5c06\u8feb\u4f7f\u4e00\u5bb6\u9762\u90e8\u8bc6\u522b\u516c\u53f8\u5bf9\u4ee3\u8868\u6027\u4fb5\u5e78\u5b58\u8005\u3001\u975e\u6cd5\u79fb\u6c11\u548c\u5176\u4ed6\u53d7\u5230\u76d1\u63a7\u72ec\u7279\u4f24\u5bb3\u7684\u5f31\u52bf\u793e\u533a\u7684\u56e2\u4f53\u505a\u51fa\u56de\u5e94\u3002\n\u7814\u7a76\u4eba\u5458\u8d8a\u6765\u8d8a\u591a\u5730\u8ba4\u8bc6\u5230\uff0c\u9762\u90e8\u8bc6\u522b\u7cfb\u7edf\u5728\u51c6\u786e\u8bc6\u522b\u6709\u8272\u4eba\u79cd\u9762\u5b54\u65b9\u9762\u505a\u5f97\u66f4\u5dee\u3002\u53bb\u5e7412\u6708\uff0c\u8054\u90a6\u653f\u5e9c\u53d1\u5e03\u4e86\u4e00\u9879\u540c\u7c7b\u7814\u7a76\u4e2d\u89c4\u6a21\u6700\u5927\u7684\u4e00\u9879\u7814\u7a76\uff0c\u53d1\u73b0\u5927\u591a\u6570\u5546\u7528\u9762\u90e8\u8bc6\u522b\u7cfb\u7edf\u8868\u73b0\u51fa\u504f\u89c1\uff0c\u9519\u8bef\u8bc6\u522b\u975e\u6d32\u88d4\u548c\u4e9a\u88d4\u9762\u5b54\u7684\u6bd4\u4f8b\u662f\u767d\u4eba\u9762\u5b54\u768410\u5230100\u500d\u3002\n\u829d\u52a0\u54e5\u975e\u8425\u5229\u7ec4\u7ec7\u829d\u52a0\u54e5\u53cd\u6027\u5265\u524a\u8054\u76df\u7684\u9a6c\u6d1b\u91cc\u00b7\u5229\u7279\u5c14\u7ea6\u7ff0(Mallory Littlejohn)\u8bf4\uff0c\u201c\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\u59d3\u540d\u548c\u5730\u5740\uff0c\u4ee5\u4fdd\u62a4\u81ea\u5df1\u7684\u4e0b\u843d\u548c\u8eab\u4efd\u4e0d\u53d7\u8ddf\u8e2a\u8005\u548c\u65bd\u8650\u4f34\u4fa3\u7684\u4f24\u5bb3\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u6539\u53d8\u81ea\u5df1\u7684\u8138\u3002\u201d\n\u5979\u8bf4\uff0cClearview\u201c\u8ba9\u5e78\u5b58\u8005\u4e0d\u65ad\u62c5\u5fc3\u88ab\u90a3\u4e9b\u8bd5\u56fe\u4f24\u5bb3\u4ed6\u4eec\u7684\u4eba\u8ffd\u8e2a\uff0c\u5e76\u5bf9\u6211\u4eec\u7684\u5b89\u5168\u548c\u798f\u7949\u6784\u6210\u5a01\u80c1\u3002\u201d", "note_en": "The American Civil Liberties Union on Thursday sued the facial recognition start-up Clearview AI, which claims to have helped hundreds of law enforcement agencies use online photos to solve crimes, accusing the company of \u201cunlawful, privacy-destroying surveillance activities.\u201d\n In a suit filed in Illinois, the  A.C.L.U. said that Clearview violated a state law that forbids companies from using a resident\u2019s fingerprints or face scans without consent. Under the law, residents have the right to sue companies for up to $5,000 per privacy violation.\n \u201cThe bottom line is that, if left unchecked, Clearview\u2019s product is going to end privacy as we know it,\u201d said Nathan Freed Wessler, a lawyer at the  A.C.L.U., \u201cand we\u2019re taking the company to court to prevent that from happening.\u201d\n The suit, filed in the Circuit Court of Cook County, adds to the growing backlash against Clearview since January, when  The New York Times reported that the company had amassed a database of more than three billion photos across the internet, including from Facebook, YouTube, Twitter and Venmo. This trove of photos enables anyone with the Clearview app to match a person to their online photos and find links back to the sites where the images originated.\n People in New York and Vermont have also filed suits in against the company in recent months, and the state attorneys general of Vermont and New Jersey have ordered Clearview to stop collecting residents\u2019 photos.\n According to the A.C.L.U.  suit, \u201cClearview has set out to do what many companies have intentionally avoided out of ethical concerns: create a mass database of billions of face prints of people, including millions of Illinoisans, entirely unbeknownst to those people, and offer paid access to that database to private and governmental actors worldwide.\u201d\n The company\u2019s business model, the complaint said, \u201cappears to embody the nightmare scenario\u201d of a \u201cprivate company capturing untold quantities of biometric data for purposes of surveillance and tracking without notice to the individuals affected, much less their consent.\u201d\n \u201cClearview AI is a search engine that uses only publicly available images accessible on the internet,\u201d Tor Ekeland, a lawyer for Clearview, said in a statement. \u201cIt is absurd that the A.C.L.U. wants to censor which search engines people can use to access public information on the internet. The First Amendment forbids this.\u201d\n Mr. Wessler of the A.C.L.U. said the First Amendment \u201cdoes not shield Clearview\u2019s unlawful conducts.\u201d\n \u201cOur lawsuit does not challenge Clearview\u2019s scraping of images off of social media platforms,\u201d he said. \u201cIt challenges the secret, nonconsensual and unlawful capture of individuals\u2019 biometric identifiers from those images. Capturing a face print is conduct, not speech.\u201d\n The Illinois suit was prepared by the A.C.L.U., the A.C.L.U. of Illinois and the law firm Edelson PC, which has specialized in class action suits against technology companies for privacy violations. The firm was involved in a suit that ended in a  $550 million settlement with Facebook for the tech giant\u2019s use of facial recognition technology in Illinois.\n Other organizations that have signed on to the legal action include the Chicago Alliance Against Sexual Exploitation, the Sex Workers Outreach Project and the Illinois State Public Interest Research Group.\n The A.C.L.U. said the lawsuit would compel a facial recognition company to answer to groups representing sexual assault survivors, undocumented immigrants and other vulnerable communities uniquely harmed by surveillance.\n There is a growing understanding among researchers that facial recognition systems are worse at accurately identifying the faces of people of color. Last December, the federal government released a study, one of the largest of its kind, that found that most commercial facial recognition systems exhibited bias,  falsely identifying African-American and Asian faces 10 to 100 times more than Caucasian faces.\n Mallory Littlejohn from the Chicago Alliance Against Sexual Exploitation, a Chicago-based nonprofit, said, \u201cWe can change our names and addresses to shield our whereabouts and identities from stalkers and abusive partners, but we can\u2019t change our faces.\u201d\n Clearview, she said, \u201cput survivors in constant fear of being tracked by those who seek to harm them, and are a threat to our security, safety and well-being.\u201d", "posttime": "2020-06-12 00:13:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u516c\u6c11\u81ea\u7531,accuses,clearview", "title": "\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u6307\u8d23Clearview AI\u9690\u79c1\u662f\u201c\u5669\u68a6\u573a\u666f\u201d", "title_en": "ACLU accuses Clearview AI of privacy \u201cnightmare scenario\u201d", "transed": 1, "url": "https://www.nytimes.com/2020/05/28/technology/clearview-ai-privacy-lawsuit.html", "via": "", "real_tags": ["\u516c\u6c11\u81ea\u7531", "accuses", "clearview"]}, {"category": "", "categoryclass": "", "imagename": "ecfd76ec5844cbc65d4402a1c6c4f01e.jpg", "infoid": 1006149, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u6625\u5929\uff0c\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u673a\u6784OpenAI\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u8ba9\u8f6f\u4ef6\u975e\u5e38\u64c5\u957f\u751f\u6210\u6587\u672c-\u5305\u62ec\u5047\u65b0\u95fb\u6587\u7ae0-\u4ee5\u81f3\u4e8e\u53d1\u5e03\u8d77\u6765\u592a\u5371\u9669\u4e86\u3002\u5f53\u4e24\u540d\u521a\u6bd5\u4e1a\u7684\u7855\u58eb\u91cd\u65b0\u521b\u5efa\u4e86\u8fd9\u6b3e\u8f6f\u4ef6\uff0cOpenAI\u53d1\u5e03\u4e86\u539f\u7248\u8f6f\u4ef6\u65f6\uff0c\u8fd9\u6761\u6c99\u5b50\u4e0a\u7684\u7ebf\u5f88\u5feb\u5c31\u88ab\u62b9\u53bb\u4e86\uff0cOpenAI\u8868\u793a\uff0c\u4eba\u4eec\u5bf9\u98ce\u9669\u7684\u610f\u8bc6\u5df2\u7ecf\u589e\u5f3a\uff0c\u6ca1\u6709\u770b\u5230\u6ee5\u7528\u7684\u8bc1\u636e\u3002\n\u73b0\u5728\uff0c\u5b9e\u9a8c\u5ba4\u5e26\u7740\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6587\u672c\u751f\u6210\u5668\u548c\u4e00\u4e2a\u65b0\u7684\u63a8\u4ecb\u56de\u6765\u4e86\uff1a\u4ed8\u94b1\u7ed9\u6211\u4eec\uff0c\u8ba9\u6211\u4eec\u628a\u5b83\u6295\u5165\u5230\u4f60\u7684\u4e1a\u52a1\u4e2d\u53bb\u3002\u5468\u56db\uff0cOpenAI\u63a8\u51fa\u4e86\u4e00\u9879\u4e91\u670d\u52a1\uff0c\u4e00\u4e9b\u516c\u53f8\u5df2\u7ecf\u5728\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u6765\u6539\u8fdb\u641c\u7d22\u6216\u5bf9\u6570\u5b66\u95ee\u9898\u7684\u7b54\u6848\u63d0\u4f9b\u53cd\u9988\u3002\u8fd9\u662f\u5bf9\u4e00\u79cd\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u7f16\u7a0b\u65b9\u5f0f\u548c\u5b9e\u9a8c\u5ba4\u4e0d\u540c\u5bfb\u5e38\u7684\u5546\u4e1a\u6a21\u5f0f\u7684\u6d4b\u8bd5\u3002\nOpenAI\u662f\u7531\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u548c\u5176\u4ed6\u7845\u8c37\u77e5\u540d\u4eba\u58eb\u4e8e2015\u5e74\u521b\u7acb\u7684\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u4ee5\u786e\u4fdd\u672a\u6765\uff0c\u8d85\u4eba\u4eba\u5de5\u667a\u80fd\u662f\u4e00\u80a1\u826f\u6027\u7684\u529b\u91cf\u3002\u8fd9\u4f4d\u7279\u65af\u62c9\u9996\u5e2d\u6267\u884c\u5b98\u57282018\u5e74\u4e0e\u5b9e\u9a8c\u5ba4\u5206\u9053\u626c\u9573\uff0c\u53bb\u5e74\u6210\u4e3a\u4e00\u5bb6\u8425\u5229\u6027\u516c\u53f8\uff0c\u5e76\u63a5\u53d7\u4e86\u5fae\u8f6f10\u4ebf\u7f8e\u5143\u7684\u6295\u8d44\u3002OpenAI\u7684\u9886\u5bfc\u4eba\u58f0\u79f0\uff0c\u53ea\u6709\u5c06\u5176\u7814\u7a76\u5546\u4e1a\u5316\uff0c\u9020\u798f\u4e8e\u6295\u8d44\u8005\uff0c\u5b83\u624d\u80fd\u7b79\u96c6\u5230\u8ddf\u4e0a\u4eba\u5de5\u667a\u80fd\u524d\u6cbf\u6b65\u4f10\u6240\u9700\u7684\u6570\u5341\u4ebf\u7f8e\u5143\u3002\n\u5468\u56db\u53d1\u5e03\u7684OpenAI\u7b2c\u4e00\u6b3e\u5546\u4e1a\u4ea7\u54c1\u5b8c\u6210\u4e86\u8715\u53d8\u3002\u4e3a\u4e86\u5728\u8d85\u4eba\u4eba\u5de5\u667a\u80fd\u9886\u57df\u4e0e\u79d1\u6280\u5de8\u5934\u7ade\u4e89\u800c\u6210\u7acb\u7684\u4e00\u5bb6\u7814\u7a76\u673a\u6784\uff0c\u73b0\u5728\u6b63\u5728\u66f4\u5e73\u51e1\u7684\u9886\u57df\u5411\u4f01\u4e1a\u51fa\u552e\u4e91\u670d\u52a1\uff0c\u6311\u6218\u4ed6\u4eec\u3002\nOpenAI\u7684\u670d\u52a1\u5efa\u7acb\u5728\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\u57fa\u7840\u4e0a\uff0c\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0c\u8fd9\u9879\u6280\u672f\u8ba9\u8ba1\u7b97\u673a\u7684\u8bed\u8a00\u80fd\u529b\u5927\u5927\u63d0\u9ad8\u3002\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u5206\u6790\u4ece\u7f51\u7edc\u4e0a\u6536\u96c6\u7684\u5927\u91cf\u6587\u672c\uff0c\u4ee5\u53d1\u73b0\u8bed\u8a00\u4f7f\u7528\u4e2d\u7684\u7edf\u8ba1\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u6267\u884c\u8bf8\u5982\u56de\u7b54\u4e8b\u5b9e\u95ee\u9898\u6216\u6c47\u603b\u6587\u6863\u7b49\u4efb\u52a1\u3002\n\u8c37\u6b4c\u5df2\u7ecf\u5f00\u53d1\u4e86\u8fd9\u9879\u6280\u672f\u6765\u6539\u8fdb\u5176\u641c\u7d22\u5f15\u64ce\u5904\u7406\u957f\u67e5\u8be2\u7684\u65b9\u5f0f\uff0c\u5fae\u8f6fOffice\u4f7f\u7528\u5b83\u6765\u53d1\u73b0\u8bed\u6cd5\u6545\u969c\u3002OpenAI\u4e13\u6ce8\u4e8e\u5c06\u8fd9\u9879\u6280\u672f\u63a8\u5411\u66f4\u5927\u7684\u89c4\u6a21\uff0c\u5e76\u5236\u4f5c\u751f\u6210\u6587\u672c\u7684\u8f6f\u4ef6\u3002\u7ed9\u51fa\u4e00\u5c0f\u6bb5\u6587\u5b57\uff0c\u5b83\u5c31\u5efa\u7acb\u5728\u5b83\u7684\u57fa\u7840\u4e0a\uff0c\u89e3\u5f00\u5177\u6709\u76f8\u4f3c\u7edf\u8ba1\u7279\u6027\u7684\u53e5\u5b50\u7684\u5047\u8131\u673a\u3002\u7ed3\u679c\u53ef\u80fd\u4f1a\u51fa\u5947\u5730\u987a\u5229\uff0c\u5373\u4f7f\u6709\u65f6\u8131\u79bb\u73b0\u5b9e\u3002\n\u50cf\u8fd9\u6837\u7684\u6587\u672c\u751f\u6210\u5668\u53ef\u80fd\u4f1a\u5f88\u6709\u8da3-\u5728\u8fd9\u91cc\u8bd5\u8bd5-\u4f46\u4ee5\u524d\u6ca1\u6709\u770b\u5230\u8fc7\u592a\u591a\u7684\u5546\u4e1a\u7528\u9014\u3002OpenAI\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5c71\u59c6\u00b7\u5965\u5c14\u7279\u66fc\u8868\u793a\uff0c\u6700\u65b0\u4e00\u4ee3\u7684\u4ea7\u54c1\u529f\u80fd\u5f3a\u5927\uff0c\u7075\u6d3b\u6027\u5f3a\uff0c\u53ef\u4ee5\u8fdb\u884c\u771f\u6b63\u7684\u5de5\u4f5c\u3002\u201c\u8fd9\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u6709\u6211\u4eec\u8ba4\u4e3a\u8db3\u591f\u597d\u7684\u4e1c\u897f\u53ef\u4ee5\u505a\u6210\u4ea7\u54c1\uff0c\u201d\u4ed6\u8bf4\u3002\nOpenAI\u7684\u65b0\u6587\u672c\u751f\u6210\u5668\u4f7f\u7528\u4ece\u7f51\u7edc\u548c\u6570\u5b57\u5316\u4e66\u7c4d\u4e2d\u6536\u96c6\u7684\u8fd11\u4e07\u4ebf\u4e2a\u5355\u8bcd\uff0c\u5728\u4e00\u53f0\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u6709\u8be5\u516c\u53f8\u652f\u4ed8\u7ed9\u5fae\u8f6f\u7684\u6570\u5341\u4e07\u4e2a\u5904\u7406\u5668\uff0c\u6709\u6548\u5730\u5c06\u8be5\u516c\u53f810\u4ebf\u7f8e\u5143\u6295\u8d44\u7684\u4e00\u90e8\u5206\u8fd4\u8fd8\u7ed9\u4e86\u5b83\u7684\u6765\u6e90\u3002\n\u4e0e\u5927\u591a\u6570\u4eba\u5de5\u667a\u80fd\u4e91\u670d\u52a1\u76f8\u6bd4\uff0c\u8fd9\u9879\u670d\u52a1\u66f4\u52a0\u5f00\u653e\uff0c\u540e\u8005\u901a\u5e38\u6267\u884c\u4e00\u9879\u4efb\u52a1\uff0c\u5982\u7ffb\u8bd1\u6216\u56fe\u50cf\u6807\u8bb0\uff0c\u5e76\u901a\u8fc7\u7279\u5b9a\u7684\u547d\u4ee4\u8fdb\u884c\u63a7\u5236\u3002\u60f3\u8981\u5229\u7528OpenAI\u6280\u672f\u7684\u7a0b\u5e8f\u5458\u53ea\u9700\u63d0\u4ea4\u4eba\u7c7b\u53ef\u8bfb\u7684\u6587\u672c\uff0c\u5e76\u5c06\u65b0\u751f\u6210\u7684\u6587\u672c\u53d6\u56de\u3002\n\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u6709\u5c40\u9650\u6027\uff0c\u4f46\u901a\u8fc7\u7cbe\u5fc3\u8bbe\u8ba1\u6b63\u786e\u7684\u8f93\u5165\uff0c\u5c31\u6709\u53ef\u80fd\u5f15\u5bfc\u8f6f\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c1d\u8bd5\u548c\u6309\u6469\u5b83\uff0c\u4ee5\u6a21\u4eff\u4e92\u8054\u7f51\u4e0a\u7279\u5b9a\u90e8\u5206\u7684\u7edf\u8ba1\u8bed\u8a00\u6a21\u5f0f\u3002\n\u63d0\u4ea4\u4e3a\u5c0f\u5b66\u751f\u91cd\u5199\u7684\u6bb5\u843d\u793a\u4f8b\uff0c\u7136\u540e\u662f\u4e00\u6bb5\u7b80\u5355\u7684\u6bb5\u843d\uff0c\u4f1a\u4fc3\u4f7f\u8be5\u670d\u52a1\u91cd\u5199\u6bb5\u843d\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\u8be5\u670d\u52a1\u53ef\u4ee5\u56de\u7b54\u4e8b\u5b9e\u95ee\u9898\u6216\u5145\u5f53\u804a\u5929\u673a\u5668\u4eba\uff0c\u5982\u679c\u63d0\u4f9b\u793a\u4f8bQ&amp\uff1bA\u5bf9\u6216\u8f6e\u6d41\u5bf9\u8bdd\uff0c\u8fd9\u4e9b\u5bf9\u8bdd\u53ef\u80fd\u4f1a\u6307\u5bfc\u8f6f\u4ef6\u5229\u7528\u5176\u5728\u4e8b\u5b9e\u9648\u8ff0\u6216\u5bf9\u8bdd\u65b9\u9762\u7684\u7ecf\u9a8c\u3002\nOpenAI\u7684\u9996\u5e2d\u6280\u672f\u5b98\u683c\u96f7\u683c\u00b7\u5e03\u7f57\u514b\u66fc(Greg Brockman)\u8868\u793a\uff1a\u201c\u5de8\u5927\u7684\u5fc3\u7406\u53d8\u5316\u662f\uff0c\u5b83\u66f4\u50cf\u662f\u4e0e\u4eba\u4ea4\u8c08\uff0c\u800c\u4e0d\u662f\u4e3a\u673a\u5668\u683c\u5f0f\u5316\u4e1c\u897f\u3002\u201d\u201c\u4f60\u7ed9\u5b83\u51e0\u4e2a\u95ee\u9898\u548c\u7b54\u6848\uff0c\u5b83\u5c31\u4f1a\u7a81\u7136\u8fdb\u5165\u95ee\u7b54\u6a21\u5f0f\u3002\u201d\n\u5c3c\u514b\u00b7\u5f17\u7f57\u65af\u7279(Nick Frosst)\u662f\u4e00\u540d\u81f4\u529b\u4e8e\u8bed\u8a00\u673a\u5668\u5b66\u4e60\u7684\u7814\u7a76\u5458\uff0c\u66fe\u5728\u8c37\u6b4c\u5de5\u4f5c\u3002\u4ed6\u8868\u793a\uff0c\u4e0e\u4eba\u5de5\u667a\u80fd\u5408\u4f5c\u7684\u65b0\u9896\u65b9\u5f0f\u53ef\u80fd\u4f1a\u6269\u5927\u8bed\u8a00\u6280\u672f\u5b9e\u9a8c\u7684\u4eba\u7fa4\u3002\u201c\u4f60\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u662f\u4ee4\u4eba\u5174\u594b\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u662f\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u4eba\u5de5\u667a\u80fd\u5e94\u8be5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u201d\nOpenAI\u5728\u4e24\u4e2a\u6708\u5185\u514d\u8d39\u63d0\u4f9b\u670d\u52a1\uff0c\u76ee\u524d\u5df2\u7ecf\u6709\u4e00\u4e9b\u7528\u6237\u3002Algolia\u662f\u4e00\u5bb6\u4e3a\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u6784\u5efa\u5185\u90e8\u641c\u7d22\u5f15\u64ce\u7684\u521d\u521b\u516c\u53f8\uff0c\u5b83\u5229\u7528\u5b83\u6765\u63d0\u9ad8\u5bf9\u590d\u6742\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u7406\u89e3\u3002\n\u5176\u4ed6\u4eba\u5219\u5728\u4f7f\u7528\u4e00\u9879\u9644\u52a0\u670d\u52a1\uff0c\u5373OpenAI\u901a\u8fc7\u9644\u52a0\u6570\u636e\u5c06\u8f6f\u4ef6\u7684\u4e00\u4e2a\u7248\u672c\u201c\u5fae\u8c03\u201d\u5230\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u6570\u5b66\u6559\u80b2\u7f51\u7ad9Art of Problem Solving\u4f7f\u7528\u5b83\u6765\u5efa\u8bae\u8bc4\u8bba\uff0c\u5411\u5b66\u751f\u53d1\u9001\u4ed6\u4eec\u63d0\u4ea4\u7684\u610f\u89c1\uff0c\u4ece\u800c\u52a0\u5feb\u4e86\u8bc4\u5206\u5458\u7684\u5de5\u4f5c\u3002\n\u5c3d\u7ba1\u5f88\u65e9\u5c31\u6709\u5174\u8da3\uff0c\u4f46OpenAI\u7684\u9886\u5bfc\u4eba\u5766\u7387\u5730\u627f\u8ba4\uff0c\u76ee\u524d\u8fd8\u8fdc\u4e0d\u6e05\u695a\u8fd9\u79cd\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u7f16\u7a0b\u6a21\u578b\u80fd\u6709\u591a\u5927\u7684\u7528\u5904\u3002\n\u4e00\u4e2a\u672a\u77e5\u6570\u662f\u5b83\u7684\u53ef\u9760\u6027\u3002\u201c\u8fd9\u4e9b\u6a21\u578b\u6709\u4e9b\u4e0d\u53ef\u9884\u6d4b\uff0c\u201d\u54a8\u8be2\u516c\u53f8\u8bed\u8a00\u6280\u672f\u96c6\u56e2(Language Technology Group)\u7684\u7f57\u4f2f\u7279\u00b7\u6234\u5c14(Robert Dale)\u8bf4\u3002OpenAI\u7684\u8f6f\u4ef6\u53ef\u4ee5\u91cd\u5efa\u6587\u672c\u6a21\u5f0f\uff0c\u4f46\u5bf9\u4e16\u754c\u6ca1\u6709\u5e38\u8bc6\u7406\u89e3\u3002\u5b83\u7684\u591a\u529f\u80fd\u6027\u65e2\u53ef\u4ee5\u662f\u8d44\u4ea7\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u503a\u3002\u5076\u5c14\u7684\u53ee\u5f53\u58f0\u5bf9\u67d0\u4e9b\u7528\u9014(\u5982\u9884\u6d4b\u6027\u6587\u672c)\u5f71\u54cd\u4e0d\u5927\uff0c\u4f46\u5728\u5176\u4ed6\u7528\u9014(\u5982\u5ba2\u6237\u652f\u6301\u804a\u5929\u673a\u5668\u4eba)\u4e2d\u53ef\u80fd\u4f1a\u7834\u574f\u4ea4\u6613\u3002\n\u5173\u4e8eOpenAI\u7684\u6280\u672f\uff0c\u6709\u4e00\u70b9\u662f\u80af\u5b9a\u7684\uff0c\u90a3\u5c31\u662f\u5b83\u53ef\u4ee5\u8bf4\u810f\u8bdd\u3002\u5b83\u5728\u5927\u7247\u4e92\u8054\u7f51\u4e0a\u7684\u8bad\u7ec3\u4f7f\u8be5\u8f6f\u4ef6\u7cbe\u901a\u4ee4\u4eba\u4e0d\u5feb\u7684\u8bed\u8a00\uff0c\u5982\u968f\u610f\u6216\u5484\u5484\u903c\u4eba\u7684\u79cd\u65cf\u4e3b\u4e49\uff0c\u5e76\u53ef\u4ee5\u4fc3\u4f7f\u5b83\u91cd\u65b0\u521b\u5efa\u8fd9\u4e9b\u8bed\u8a00\u3002\u8fd9\u4e00\u7ed3\u679c\u8ba9\u4eba\u60f3\u8d77Twitter\u7528\u6237\u662f\u5982\u4f55\u6002\u607f\u81ed\u540d\u662d\u8457\u7684\u5fae\u8f6f\u673a\u5668\u4ebaTay\u53d1\u8868\u79cd\u65cf\u4e3b\u4e49\u8a00\u8bba\u7684\u3002\n\u5f53\u201c\u8fde\u7ebf\u201d\u7528\u7559\u8a00\u677f4chan\u7684\u4e24\u53e5\u8bdd\u63d0\u4f9b\u8fd9\u9879\u670d\u52a1\u65f6\uff0c\u4ed6\u4eec\u6307\u8d23\u5171\u548c\u515a\u4eba\u201c\u6ca1\u6709\u9aa8\u6c14\u201d\uff0c\u6ca1\u6709\u5bf9\u201c\u514b\u6797\u987f\u3001\u4f69\u591a\u65af\u3001\u5ba1\u67e5\u6216\u9a9a\u4e71\u201d\u91c7\u53d6\u884c\u52a8\uff0cOpenAI\u7684\u670d\u52a1\u5347\u7ea7\uff0c\u5632\u8bbd\u8bf4\u201c\u6211\u4eec\u6b63\u5728\u88ab\u6bb4\u6253\u548c\u5f3a\u5978\u2026\u3002\u5927\u91cf\u79fb\u6c11\u59cb\u4e8e60\u5e74\u4ee3\uff0c\u800c\u4e14\u4ece\u672a\u505c\u6b62\u8fc7\u3002\u201c\u3002\nOpenAI\u8868\u793a\uff0c\u5b83\u5c06\u5bf9\u5ba2\u6237\u8fdb\u884c\u5ba1\u67e5\uff0c\u4ee5\u9632\u6b62\u4eba\u4eec\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u6765\u5904\u7406\u5783\u573e\u90ae\u4ef6\u6216\u9a9a\u6270\u7b49\u4e8b\u60c5\u3002\u4e00\u4e9b\u5ba2\u6237\u5df2\u7ecf\u5efa\u9020\u4e86\u8fc7\u6ee4\u5668\u6765\u963b\u6b62\u8fd9\u9879\u6280\u672f\u4ea7\u751f\u6709\u6bd2\u8bed\u8a00\uff0cOpenAI\u6b63\u5728\u7814\u7a76\u81ea\u5df1\u7684\u5b89\u5168\u529f\u80fd\u3002\nAltman\u9884\u8ba1OpenAI\u7684\u4ea7\u54c1\u4e0d\u4f1a\u9a6c\u4e0a\u6709\u5229\u53ef\u56fe\uff0c\u4f46\u4ed6\u8868\u793a\uff0c\u968f\u7740\u5b9e\u9a8c\u5ba4\u7684\u6539\u8fdb\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u51e0\u5e74\u5185\u53d1\u5c55\u6210\u4e3a\u4e00\u4e2a\u91cd\u8981\u7684\u6536\u5165\u6765\u6e90\u3002\u5fae\u8f6f\u5728\u8be5\u5b9e\u9a8c\u5ba4\u7684\u80a1\u4efd\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002OpenAI\u5728\u5fae\u8f6f\u7684Azure\u4e91\u5e73\u53f0\u4e0a\u6784\u5efa\u4e86\u5b83\u7684\u65b0\u670d\u52a1\uff1b\u5982\u679c\u5fae\u8f6f\u5c06\u5176\u4f5c\u4e3a\u4eba\u5de5\u667a\u80fd\u670d\u52a1\u63d0\u4f9b\uff0c\u5b83\u5c06\u770b\u5230\u66f4\u5e7f\u6cdb\u7684\u7528\u9014\u3002\nAltman\u63a5\u53d7\u4e86\u4e0e\u5fae\u8f6f\u5efa\u7acb\u66f4\u7d27\u5bc6\u5173\u7cfb\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u62d2\u7edd\u8be6\u7ec6\u8bf4\u660e\u3002\u5f53\u300a\u8fde\u7ebf\u300b\u6742\u5fd7\u63d0\u793a\u5b9e\u9a8c\u5ba4\u7684\u65b0\u8f6f\u4ef6\u586b\u5199\u300aOpenAI\u548c\u5fae\u8f6f\u7b2c\u4e00\u4e2a\u5546\u4e1a\u5408\u4f5c\u9879\u76ee\u300b\u7684\u7ec6\u8282\u65f6\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u6b3e\u540d\u4e3aCopilot\u7684\u6e38\u620f\uff0c\u5b83\u5141\u8bb8\u4e24\u4e2a\u4eba\u73a9\u4e00\u6b3e\u8d5b\u8f66\u6e38\u620f\uff0c\u4e00\u4e2a\u4eba\u63a7\u5236\u6cb9\u95e8\u8e0f\u677f\uff0c\u53e6\u4e00\u4e2a\u4eba\u63a7\u5236\u5239\u8f66\u3002\n\u2728\u4f7f\u7528\u6211\u4eec\u9f7f\u8f6e\u56e2\u961f\u7684\u6700\u4f73\u9009\u62e9\u4f18\u5316\u60a8\u7684\u5bb6\u5ead\u751f\u6d3b\uff0c\u4ece\u673a\u5668\u4eba\u5438\u5c18\u5668\u5230\u4ef7\u683c\u5b9e\u60e0\u7684\u5e8a\u57ab\u518d\u5230\u667a\u80fd\u626c\u58f0\u5668", "note_en": "Last spring, artificial intelligence research institute  OpenAI said it had made software so good at generating text\u2014including fake news articles\u2014that it was  too dangerous to release. That line in the sand was soon erased when two recent master\u2019s grads  recreated the software and OpenAI released the original, saying awareness of the risks had grown and it hadn\u2019t seen evidence of misuse.\n Now the lab is back with a more powerful text generator and a new pitch: Pay us to put it to work in your business. Thursday, OpenAI launched a cloud service that a handful of companies are already using to improve search or provide feedback on answers to math problems. It\u2019s a test of a new way of programming  AI, and the lab\u2019s unusual business model.\n OpenAI was founded as a nonprofit  in 2015 by  Elon Musk and other Silicon Valley notables to ensure future, superhuman AI was a benign force. The Tesla CEO parted ways with the lab in 2018, and last year it  became a for-profit company and took a  $1 billion investment from Microsoft. OpenAI\u2019s leaders claim that only by commercializing its research for the benefit of investors can it raise the billions needed to keep pace on the frontiers of AI.\n  Thursday\u2019s launch of OpenAI\u2019s first commercial product completes the metamorphosis. A research institute created to compete with tech giants on superhuman AI is now challenging them in the more mundane arena of selling  cloud services to businesses.\n  OpenAI\u2019s service is built on a  machine learning technique that has made computers  much better with language over the past two years. Machine learning algorithms are directed to analyze vast collections of text scraped from the web to discover the statistical patterns in language use. The software can then be tuned to perform tasks like answering factual questions, or summarizing documents.\n  Google has tapped the technology to improve how its search engine handles long queries, and Microsoft Office uses it to spot grammar glitches. OpenAI has focused on pushing the technique to greater scale and making software that generates text. Given a snatch of writing, it builds on it, unspooling sentences with similar statistical properties. The results can be uncannily smooth, if sometimes  unmoored from reality.\n  Text generators like that can be fun\u2014 try one here\u2014but haven\u2019t previously seen much commercial use. OpenAI\u2019s CEO Sam Altman says the latest generation is powerful and flexible enough for real work. \u201cThis is the first time we\u2019ve got something we think is good enough to make into a product,\u201d he says.\n OpenAI\u2019s  new text generators are trained using a collection of almost a trillion words collected from the web and digitized books, on a  supercomputer with hundreds of thousands of processors the company paid Microsoft to build, effectively returning some of the company\u2019s $1 billion investment to its source.\n  The service is more open-ended than most AI cloud services, which usually perform one task, such as translation or image tagging, and are controlled with specific commands. Programmers who want to tap OpenAI\u2019s technology simply submit human-readable text and get newly generated text back.\n That may sound limiting, but by crafting the right input it\u2019s possible to steer the software to perform different tasks. The goal is to try and massage it to riff on the statistical language patterns from a particular part of the internet.\n Submitting examples of paragraphs rewritten for elementary schoolers followed by an unsimplified passage prompts the service to rewrite it to be easier to read. The service can answer factual questions or function as a chatbot if supplied with example Q&amp;A pairs or turns of dialog that might direct the software to draw on its experience of factual statements or conversations.\n  \u201cThe big mental shift is it\u2019s much more like talking to a human than formatting things for a machine,\u201d says Greg Brockman, OpenAI\u2019s chief technology officer. \u201cYou give it a few questions and answers and suddenly it\u2019s in Q&amp;A mode.\u201d\n Nick Frosst, a researcher working on language machine learning who  previously worked at Google, says that novel way of working with AI could widen the pool of people experimenting with language technology. \u201cIt\u2019s exciting that you can do that,\u201d he says. \u201cIt\u2019s how most people think AI should work.\u201d\n  OpenAI is offering its service for free for two months, and already has some users. Algolia, a startup that builds internal search engines for apps and websites, uses it to improve its understanding of complex search strings.\n Others are using an additional service in which OpenAI \u201cfine tunes\u201d a version of the software to a specific task with additional data. Math education site Art of Problem Solving uses that to suggest comments to send students on their submissions, speeding up the work of graders.\n Despite that early interest, OpenAI\u2019s leaders freely admit that it\u2019s far from clear how widely useful this new model of AI programming can be.\n  One unknown is its reliability. \u201cThese models are somewhat unpredictable,\u201d says Robert Dale, of consultants Language Technology Group. OpenAI\u2019s software can recreate the patterns of text but doesn\u2019t have a common sense understanding of the world. Its versatility can be a liability as well as an asset. Occasional clangers are of little consequence for some uses, such as predictive text, but could be deal breakers in others, such as a customer support chatbot.\n One certainty about OpenAI\u2019s technology is that it can talk dirty and nasty. Its training on vast swaths of the internet makes the software well-versed in unsavory language such as casual or aggressive racism, and it can be prompted to recreate them. The results can be reminiscent of how Twitter users prodded a notorious Microsoft  bot called Tay to make racist comments.\n When WIRED provided the service with two sentences from message board 4chan accusing Republicans of being \u201cspineless\u201d and not taking action on \u201cClinton, Pedos, Censorship or Riots,\u201d OpenAI\u2019s service escalated, riffing that \u201cWe are being beaten and raped \u2026 vast immigration started in the &#39;60s and never stopped.\u201d\n OpenAI says it will vet customers to prevent people from using the service for things like spam or harassment. Some customers have built filters to block the technology from producing toxic language, and OpenAI is working on its safety features of its own.\n Altman doesn\u2019t expect OpenAI\u2019s product to be lucrative right away but says it could develop into a significant revenue source in a few years as the lab makes improvements. Microsoft\u2019s stake in the lab could help. OpenAI built its new service on Microsoft\u2019s Azure cloud platform; it could see much wider use if Microsoft offered it as an AI service.\n  Altman accepted closer relations with Microsoft as a possibility but declined to elaborate. When WIRED prompted the lab\u2019s new software to fill out the details on \u201cOpenAI and Microsoft\u2019s first joint commercial venture\u201d it described a \u201cgame called Copilot that allows two people to play a racing game with one person controlling the gas pedal and the other the brakes.\u201d\n   \u2728 Optimize your home life with our Gear team\u2019s best picks, from  robot vacuums to  affordable mattresses to  smart speakers", "posttime": "2020-06-11 23:55:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5546\u4e1a,\u6587\u672c,text,openai", "title": "OpenAI\u6587\u672c\u751f\u6210\u5668\u5373\u5c06\u5546\u4e1a\u5316", "title_en": "OpenAI's Text Generator Is Going Commercial", "transed": 1, "url": "https://www.wired.com/story/openai-text-generator-going-commercial/", "via": "", "real_tags": ["\u5546\u4e1a", "\u6587\u672c", "text", "openai"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006148, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenAI API", "note_en": "OpenAI API", "posttime": "2020-06-11 23:55:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "openai", "title": "OpenAI API", "title_en": "OpenAI API", "transed": 1, "url": "https://beta.openai.com/", "via": "", "real_tags": ["openai"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006147, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9009\u62e9\u8d2d\u4e70\u8bd5\u7528\u8ba2\u9605\u6e2f\u5e0110\u5143\uff0c\u8bd5\u7528\u671f4\u5468\uff0c\u8bd5\u7528\u7ed3\u675f\u540e\u6bcf\u6708\u6536\u8d39\u6e2f\u5e01495.00\u5143\u3002\n4\u5468\u5185\u53ef\u65e0\u9650\u5236\u4eab\u53d7\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u503c\u5f97\u4fe1\u8d56\u3001\u5c61\u83b7\u6b8a\u8363\u7684\u5546\u4e1a\u65b0\u95fb\u7684\u65e0\u9650\u91cf\u9ad8\u7ea7\u6570\u5b57\u8bbf\u95ee\u3002\n\u9009\u62e9\u8d2d\u4e70\u6570\u7801\u8ba2\u9605\uff0c\u6bcf\u5468\u6e2f\u5e01\u4e09\u5341\u516d\u70b9\u4e8c\u4e94\u5143\uff0c\u8bd5\u7528\u7ed3\u675f\u540e\u6bcf\u6708\u6536\u8d39\u6e2f\u5e01305.00\u5143\u3002\n\u793c\u54c1-\u6bcf\u6708\u4e0e\u5bb6\u4eba\u3001\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u591a\u8fbe10\u7bc7\u6587\u7ae0", "note_en": "Select  Purchase a Trial subscription for HK$10.00 for 4 weeks   You will be billed HK$495.00 per month after the trial ends\n  For 4 weeks receive unlimited Premium digital access to the FT&#39;s trusted, award-winning business news\n  Select  Purchase a Digital subscription for HK$36.25 per week   You will be billed HK$305.00 per month after the trial ends\n  Gift Article \u2013 share up to 10 articles a month with family, friends and colleagues", "posttime": "2020-06-11 23:55:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "losing,\u8bd5\u7528", "title": "\u7f8e\u56fd\u6b63\u5728\u5931\u53bb\u5bf9\u6297\u65b0\u51a0\u80ba\u708e\u7684\u52c7\u6c14", "title_en": "America is losing the stomach to fight Covid-19", "transed": 1, "url": "https://www.ft.com/content/b223f1cb-a6ed-4c40-8352-4a065ff084fb", "via": "", "real_tags": ["losing", "\u8bd5\u7528"]}, {"category": "", "categoryclass": "", "imagename": "aa3947824b12e18bf53463c700514bf1.jpg", "infoid": 1006145, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u5468\u56db\u62a5\u9053\uff0c\u6b27\u76df\u6b63\u51c6\u5907\u5c31\u7535\u5546\u5de8\u5934\u4e9a\u9a6c\u900a\u5728\u5176\u7f51\u7ad9\u4e0a\u5bf9\u5f85\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u884c\u4e3a\u5bf9\u5176\u63d0\u8d77\u53cd\u5784\u65ad\u8bc9\u8bbc\u3002\n\u636e\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u62a5\u9053\uff0c\u6b27\u76df\u6700\u9ad8\u53cd\u5784\u65ad\u76d1\u7ba1\u673a\u6784\u6b27\u76df\u59d4\u5458\u4f1a(European Commission)\u6700\u65e9\u53ef\u80fd\u5728\u4e0b\u5468\u63d0\u51fa\u6b63\u5f0f\u6307\u63a7\u3002\u636e\u62a5\u9053\uff0c\u8fd9\u4e9b\u6307\u63a7\u5c06\u6307\u63a7\u4e9a\u9a6c\u900a\u5229\u7528\u5176\u5e73\u53f0\u4e0a\u72ec\u7acb\u5356\u5bb6\u7684\u4e2a\u4eba\u6570\u636e\u63a8\u51fa\u7ade\u4e89\u4ea7\u54c1\u3002\n\u4e3a\u6211\u4eec\u7684\u7f16\u8f91\u8ba2\u9605CNET Now\u65f6\u4e8b\u901a\u8baf\uff0c\u7cbe\u9009\u5f53\u5929\u6700\u91cd\u8981\u7684\u65b0\u95fb\u3002\n\u6b27\u76df\u59d4\u5458\u4f1a\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u62d2\u7edd\u7f6e\u8bc4\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u8c03\u67e5\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u4e9a\u9a6c\u900a\u4e5f\u62d2\u7edd\u7f6e\u8bc4\u3002\n\u6b27\u76df\u53cd\u5784\u65ad\u76d1\u7ba1\u673a\u6784\u4e8e2019\u5e747\u6708\u5bf9\u4e9a\u9a6c\u900a\u5c55\u5f00\u8c03\u67e5\u3002\u76ee\u7684\u662f\u8c03\u67e5\u8fd9\u5bb6\u7535\u5546\u5de8\u5934\u4f7f\u7528\u72ec\u7acb\u96f6\u552e\u5546\u7684\u6570\u636e\u662f\u5426\u8fdd\u53cd\u4e86\u6b27\u76df\u7684\u7ade\u4e89\u89c4\u5219\u3002\u8d1f\u8d23\u6b27\u76df\u7ade\u4e89\u653f\u7b56\u7684\u4e13\u5458\u739b\u683c\u4e3d\u7279\u00b7\u7ef4\u65af\u7279\u683c(Margrethe Vestager)\u5f53\u65f6\u8868\u793a\uff0c\u6b27\u6d32\u6d88\u8d39\u8005\u5728\u7f51\u4e0a\u8d2d\u4e70\u9009\u62e9\u548c\u5b9a\u4ef7\u3002\n\u7ef4\u65af\u7279\u683c\u8bf4\uff1a\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5927\u578b\u5728\u7ebf\u5e73\u53f0\u4e0d\u4f1a\u901a\u8fc7\u53cd\u7ade\u4e89\u884c\u4e3a\u6d88\u9664\u8fd9\u4e9b\u597d\u5904\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u975e\u5e38\u4ed4\u7ec6\u5730\u89c2\u5bdf\u4e9a\u9a6c\u900a\u7684\u5546\u4e1a\u5b9e\u8df5\u53ca\u5176\u4f5c\u4e3a\u5e02\u573a\u548c\u96f6\u552e\u5546\u7684\u53cc\u91cd\u89d2\u8272\uff0c\u4ee5\u8bc4\u4f30\u5176\u5bf9\u6b27\u76df\u7ade\u4e89\u89c4\u5219\u7684\u9075\u5b88\u60c5\u51b5\u3002\n\u4e9a\u9a6c\u900a\u4e4b\u524d\u66fe\u8868\u793a\uff0c\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u4ea7\u54c1\u65f6\uff0c\u5b83\u4e0d\u4f1a\u4f7f\u7528\u4ece\u7b2c\u4e09\u65b9\u5356\u5bb6\u90a3\u91cc\u6536\u96c6\u7684\u4fe1\u606f\u3002\u7136\u800c\uff0c\u534e\u5c14\u8857\u65e5\u62a5\u57284\u6708\u4efd\u62a5\u9053\u79f0\uff0c\u4e9a\u9a6c\u900a\u4ece\u7b2c\u4e09\u65b9\u5356\u5bb6\u90a3\u91cc\u6536\u96c6\u4e86\u6570\u636e\uff0c\u4ee5\u5e2e\u52a9\u5176\u786e\u5b9a\u81ea\u5df1\u4ea7\u54c1\u7684\u5b9a\u4ef7\uff0c\u54ea\u4e9b\u529f\u80fd\u9700\u8981\u590d\u5236\uff0c\u6216\u8005\u662f\u5426\u53c2\u4e0e\u67d0\u4e2a\u4ea7\u54c1\u7c7b\u522b\u3002\n\u5c0a\u91cd\u4ed6\u4eba\uff0c\u4fdd\u6301\u6587\u660e\u793c\u8c8c\uff0c\u4e0d\u79bb\u9898\u3002\u6211\u4eec\u5220\u9664\u8fdd\u53cd\u6211\u4eec\u653f\u7b56\u7684\u8bc4\u8bba\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u9605\u8bfb\u8fd9\u4e9b\u8bc4\u8bba\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u65f6\u5173\u95ed\u8ba8\u8bba\u7ebf\u7a0b\u3002", "note_en": "The European Union is preparing to file antitrust charges against  Amazon over the e-commerce giant&#39;s treatment of third-party sellers on its site, according to a report Thursday from  The Wall Street Journal.\n The European Commission, the union&#39;s top antitrust regulator, could file official charges as early as next week, according to the Journal. The charges will reportedly accuse Amazon of using\u00a0  data on independent sellers on its platform to launch competing products.\n  Subscribe to the CNET Now newsletter for our editors&#39; picks for the most important stories of the day.\n A spokeswoman for the European Commission declined to comment, adding that its investigation is ongoing. Amazon also declined to comment.\n The European Union&#39;s antitrust regulators   opened an investigation into Amazon in July 2019. The goal is to explore whether the e-commerce giant breached the EU&#39;s competition rules with its use of data from independent retailers. Commissioner Margrethe Vestager, who is in charge of the EU&#39;s competition policy, said at the time that European customers shop online for the selection and pricing.\n &#34;We need to ensure that large online platforms don&#39;t eliminate these benefits through anti-competitive behaviour,&#34; Vestager said. &#34;I have therefore decided to take a very close look at Amazon&#39;s business practices and its dual role as marketplace and retailer, to assess its compliance with EU competition rules.&#34;\n Amazon has said previously that it doesn&#39;t use information collected from third-party sellers when developing its own products. However, the Journal reported in April that Amazon scooped up data from third-party sellers to help it determine pricing of its own products, which features to replicate or whether to get involved in a product category.\n  Be respectful, keep it civil and stay on topic. We delete comments that violate  our policy, which we encourage you to read. Discussion threads can be closed at any time at our discretion.", "posttime": "2020-06-11 23:38:01", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e9a\u9a6c\u900a,amazon,rust,\u53cd\u5784\u65ad,hit", "title": "\u62a5\u9053\u79f0\uff0c\u6b27\u76df\u5c06\u5c31\u7b2c\u4e09\u65b9\u5356\u5bb6\u5f85\u9047\u5bf9\u4e9a\u9a6c\u900a\u63d0\u51fa\u53cd\u5784\u65ad\u6307\u63a7", "title_en": "EU To Hit Amazon With Antitrust Charges Over Treatment of Third-Party Sellers, Report Says", "transed": 1, "url": "https://www.cnet.com/news/eu-to-hit-amazon-with-antitrust-charges-over-treatment-of-third-party-sellers-report-says/", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "rust", "\u53cd\u5784\u65ad", "hit"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006144, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u4e45\u524d\uff0c\u6709\u4e00\u4ef6\u4e8b\u8ba9\u6211\u5f88\u607c\u706b\uff0c\u90a3\u5c31\u662f\u6709\u4eba\u8bf4\u8981\u6bcf\u5468\u548c\u4ed6\u7684\u59bb\u5b50\u8fdb\u884c\u4e00\u5bf9\u4e00\u3002\u6211\u5173\u4e8e\u8fd9\u4ef6\u4e8b\u7684\u5e16\u5b50\u662f\u8fd9\u6837\u5199\u7684\uff1a\n\u8001\u5b9e\u8bf4\uff0c\u6211\u8ba4\u4e3a\u8fd9\u542c\u8d77\u6765\u662f\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f--\u7ed3\u6784\u5316\u6c9f\u901a\u5f88\u68d2\uff0c\u4e0e\u5408\u4f5c\u4f19\u4f34\u66f4\u597d\u7684\u6c9f\u901a\u4e5f\u5f88\u68d2\u3002\u5373\u4f7f\u5b83\u6700\u7ec8\u8bc1\u660e\u4e0d\u8d77\u4f5c\u7528\uff0c\u5b83\u81f3\u5c11\u770b\u8d77\u6765\u662f\u5408\u7406\u7684\u5c1d\u8bd5\u3002\n\u4e0d\u7ba1\u5b83\u662f\u597d\u662f\u574f\uff0c\u6211\u5b9e\u9645\u4e0a\u5bf9\u6bcf\u4e2a\u53d6\u7b11\u5b83\u7684\u4eba\u90fd\u5f88\u751f\u6c14\u3002\u6211\u6765\u8fd9\u91cc\u5e76\u4e0d\u662f\u56e0\u4e3a\u4f60\u5632\u7b11\u67d0\u4eba\u8bd5\u56fe\u6539\u5584\u4ed6\u4eec\u5728\u4eba\u9645\u5173\u7cfb\u4e2d\u7684\u6c9f\u901a\uff0c\u56e0\u4e3a\u4f60\u8ba4\u4e3a\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u65b9\u5f0f\u5f88\u5947\u602a\u3002\n\u662f\u7684\uff0c\u5b83\u662f\u7528\u4e00\u79cd\u975e\u5e38\u5546\u4e1a\u5316\u7684\u8bed\u8a00\u67b6\u6784\u8d77\u6765\u7684\u3002\u90a3\u53c8\u600e\u4e48\u6837\uff1f\u4eba\u4eec\u628a\u5728\u4e00\u79cd\u73af\u5883\u4e2d\u5b66\u5230\u7684\u6709\u4ef7\u503c\u7684\u6c9f\u901a\u6280\u5de7\u62ff\u6765\uff0c\u770b\u770b\u4ed6\u4eec\u662f\u5426\u80fd\u7528\u5b83\u4eec\u6765\u4f7f\u4ed6\u4eec\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u6c9f\u901a\u53d8\u5f97\u66f4\u4ee4\u4eba\u9707\u60ca\uff01\n\u6211\u4e0d\u77e5\u9053\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4ed6\u4eec\u5904\u7406\u6d6a\u6f2b\u5173\u7cfb\u7684\u65b9\u5f0f\u662f\u5426\u5065\u5eb7\u6709\u6548\uff0c\u4f46\u4f60\u6240\u505a\u7684\u5c31\u662f\u53d6\u7b11\u90a3\u4e9b\u4e0e\u4f60\u8ba4\u53ef\u7684\u4eba\u4e0d\u540c\u7684\u602a\u4eba\uff0c\u8fd9\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u5f62\u8c61\u3002(\u8bd1\u8005\u6ce8\uff1a\u6211\u4e0d\u77e5\u9053\u4ed6\u4eec\u5904\u7406\u604b\u7231\u5173\u7cfb\u7684\u65b9\u5f0f\u662f\u5426\u5065\u5eb7\u6709\u6548\uff0c\u4f46\u4f60\u6240\u505a\u7684\u5c31\u662f\u53d6\u7b11\u90a3\u4e9b\u4e0e\u4f60\u8ba4\u53ef\u7684\u4eba\u4e0d\u540c\u7684\u602a\u4eba)\uff0c\u8fd9\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u5f62\u8c61\u3002\n\u6700\u8fd1\uff0c\u6211\u53c2\u52a0\u4e86\u4e00\u4e2a\u89e3\u653e\u7ed3\u6784\u7684\u6d3b\u52a8\uff0c\u548c\u6211\u4e00\u8d77\u5de5\u4f5c\u7684\u4e00\u4e2a\u4eba\u8bb2\u8ff0\u4e86\u4e00\u4ef6\u8da3\u4e8b\uff0c\u4ed6\u5728\u5176\u4e2d\u5c1d\u8bd5\u4e86\u4e00\u4e2a\u805a\u4f1a\u6e38\u620f\u6765\u6253\u7834\u50f5\u5c40\u3002\u5176\u4e2d\u5f88\u591a\u90fd\u5f88\u4ee4\u4eba\u754f\u7f29\uff0c\u4f46\u8fd9\u4e00\u6b21\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u800c\u4e14\u6ca1\u6709\u5192\u72af\u6027(\u8fd9\u662f\u4e00\u79cd\u53e5\u5b50\u63a5\u7eed\u6e38\u620f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5728\u524d\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\u8bf4\u4e00\u4e2a\u8bcd\uff0c\u8bd5\u56fe\u6784\u5efa\u51fa\u542c\u8d77\u6765\u50cf\u683c\u8a00\u7684\u4e1c\u897f)\u3002\u5927\u591a\u6570\u4eba\u4e00\u5f00\u59cb\u90fd\u4e0d\u60c5\u613f\uff0c\u4f46\u540e\u6765\u6295\u5165\u5230\u4e8b\u60c5\u7684\u6447\u6446\u4e2d\uff0c\u4f46\u4e5f\u6709\u5c11\u6570\u4eba\u53ea\u662f\u56fa\u6267\u5df1\u89c1\uff0c\u4e0d\u613f\u53c2\u4e0e\u5176\u4e2d\u3002(\u8fd9\u662f\u4e00\u4e2a\u53e5\u5b50\u5ef6\u7eed\u6e38\u620f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5728\u524d\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\u8bf4\u4e00\u4e2a\u8bcd\uff0c\u8bd5\u56fe\u6784\u5efa\u542c\u8d77\u6765\u50cf\u683c\u8a00\u7684\u4e1c\u897f)\u3002\u5927\u591a\u6570\u4eba\u4e00\u5f00\u59cb\u90fd\u4e0d\u60c5\u613f\uff0c\u4f46\u4e5f\u6709\u51e0\u4e2a\u4eba\u53ea\u662f\u56fa\u6267\u5df1\u89c1\uff0c\u4e0d\u613f\u53c2\u4e0e\u3002\n\u4f46\u662f\u5c1d\u8bd5\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\uff0c\u6216\u8005\u5728\u4e0d\u540c\u7684\u80cc\u666f\u4e0b\u5c1d\u8bd5\uff0c\u603b\u662f\u4f1a\u770b\u8d77\u6765\u5f88\u5947\u602a\u3002\n\u5f53\u6709\u4eba\u8bd5\u56fe\u505a\u597d\u4e8b\u800c\u6211\u4eec\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u6b63\u786e\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u4eec\u4f1a\u60e9\u7f5a\u4ed6\u4eec\u3002\u5f53\u6709\u4eba\u8bd5\u56fe\u505a\u67d0\u4e8b\u4f46\u5931\u8d25\u65f6\uff0c\u6211\u4eec\u4f1a\u5632\u7b11\u4ed6\u4eec\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u60f3\u907f\u514d\u60e9\u7f5a\uff0c\u552f\u4e00\u7684\u65b9\u6cd5\u5c31\u662f\u5728\u4f60\u786e\u5b9a\u81ea\u5df1\u505a\u7684\u662f\u6b63\u786e\u7684\u4e8b\u60c5\u5e76\u4e14\u4f1a\u6210\u529f\u4e4b\u524d\u4e0d\u8981\u5c1d\u8bd5\uff0c\u4f46\u5b66\u4e60\u4e1c\u897f\u7684\u6700\u5feb\u65b9\u6cd5\u662f\u5c1d\u8bd5\u4e00\u4e9b\u4e1c\u897f\u3002(\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u5982\u679c\u4f60\u60f3\u9003\u907f\u60e9\u7f5a\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u4e0d\u53bb\u5c1d\u8bd5\uff0c\u76f4\u5230\u4f60\u786e\u5b9a\u81ea\u5df1\u505a\u7684\u662f\u6b63\u786e\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u4f1a\u6210\u529f\uff0c\u4f46\u5b66\u4e60\u4e1c\u897f\u7684\u6700\u5feb\u65b9\u6cd5\u662f\u5c1d\u8bd5\u3002)\n\u5f53\u4f60\u8bf4\u4f60\u64c5\u957f\u67d0\u4e8b\u65f6\uff0c\u90a3\u662f\u50b2\u6162\u3002\u5f53\u4f60\u8bf4\u4f60\u5728\u67d0\u4e8b\u4e0a\u505a\u5f97\u4e0d\u597d\u65f6\uff0c\u4eba\u4eec\u4f1a\u544a\u8bc9\u4f60\u4f60\u4e0d\u662f\uff0c\u6216\u8005\u628a\u5b83\u5f53\u4f5c\u5f31\u70b9\u3002\u8fd9\u4f7f\u5f97\u4eba\u4eec\u5f88\u96be\u5766\u8bda\u5730\u8c08\u8bba\u4f60\u6709\u591a\u64c5\u957f\u67d0\u4ef6\u4e8b\uff0c\u4eba\u4eec\u4e5f\u5f88\u96be\u5224\u65ad\u81ea\u5df1\u6709\u591a\u64c5\u957f\uff0c\u6240\u4ee5\u5f88\u96be\u5728\u4e0d\u8c08\u8bba\u7684\u60c5\u51b5\u4e0b\u77e5\u9053\u4f60\u6709\u591a\u597d\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u81ea\u5df1\u80fd\u529b\u7684\u81ea\u6211\u8ba4\u8bc6\u4e5f\u662f\u505a\u597d\u8fd9\u4ef6\u4e8b\u7684\u5173\u952e\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u4f60\u6210\u529f\u4e86\uff0c\u6211\u4eec\u628a\u4f60\u5949\u4e3a\u795e\u575b\uff0c\u5d07\u62dc\u4f60\uff0c\u7136\u540e\u4e00\u65e6\u4f60\u4e0d\u53ef\u907f\u514d\u5730\u50cf\u5176\u4ed6\u4eba\u4e00\u6837\u88ab\u8bc1\u660e\u662f\u4e00\u4e2a\u6709\u7f3a\u9677\u7684\u4eba\uff0c\u6211\u4eec\u5c31\u4f1a\u6467\u6bc1\u4f60\uff0c\u6467\u6bc1\u4f60\u3002\n\u5982\u679c\u6211\u5750\u4e0b\u6765\uff0c\u8bd5\u56fe\u8bbe\u8ba1\u4e00\u5957\u793e\u4f1a\u89c4\u8303\u6765\u963b\u6b62\u4eba\u4eec\u505a\u6700\u597d\u7684\u81ea\u5df1\uff0c\u8001\u5b9e\u8bf4\uff0c\u6211\u8ba4\u4e3a\u6211\u4e0d\u53ef\u80fd\u505a\u5f97\u6bd4\u8fd9\u66f4\u597d\u4e86\u3002", "note_en": "A thing I got pissed off at a while ago was reactions to someone talking about having weekly one-on-ones with his wife. My thread about it went as follows:\n I honestly think this sounds like a pretty good idea - structured communication is great, and better communication with partners is also great. Even if it turns out not to work, it&#39;s something that seems at least reasonable to try.\n Regardless of whether it&#39;s good or not, I&#39;m actually pretty pissed off at everyone who has been making fun of it. I am very much not here for your mocking someone&#39;s attempts to improve their communication in their relationships because you think the way they&#39;re doing it is weird.\n And yes it&#39;s framed in a very business speak language. So what? Person in taking valuable communication skills learned in one context and seeing if they can use them to make other communication in their life better shocker!\n I don&#39;t know the OP and I don&#39;t know if the way they are handling their romantic relationship(s) is healthy and productive, but what you&#39;re doing is making fun of people for being a different sort of weird than the one you approve of and it&#39;s not a good look\n I was at a  liberating structures event recently,and one of the people I was working with related an anecdote in which he tried a party game as an ice breaker.Many of those are cringe, but this one sounded fun and inoffensive (it was a sentence continuation game where each person said a word following on from a previous one, in an attempt to construct something that sounded like an aphorism).Most people were reluctant initially but got into the swing of things, but a few people just dug their heels in and would not engage properly with it because of concern over looking weird.\n But trying something new, or in a different context, is always going to look weird.\n When someone tries to do something good and we don&#39;t think it&#39;s the right thing, we punish them.When someone tries to do something and fails, we laugh at them.This means that if you want to avoid punishment the only way is to not try until you are certain that you are doing the right thing and will succeed at it, but  the fastest way to learn something is to try something.\n When you say you are good at something, that&#39;s arrogant. When you say you&#39;re bad at something, people tell you that you&#39;re not, or treat it as weakness. This makes it very hard to talk honestly about how good you are about things,and people are very bad at judging how good they are at things so it&#39;s very hard to know how good you are without talking about it.Unfortunately, self-knowledge of your own abilities is also essential for getting good at it.\n If, despite all of this, you succeed, we put you on a pedestal, and worship you, and then as soon as you inevitably turn out to be a flawed human being like everyone else,we tear you down and destroy you.\n   If I sat down and tried to design a set of social norms for discouraging people from being their best selves,I honestly don&#39;t think I could have done a better job than this.", "posttime": "2020-06-11 23:36:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u574f\u4e8b,obligation,\u8bd5\u56fe", "title": "\u505a\u574f\u4e8b\u7684\u793e\u4f1a\u4e49\u52a1", "title_en": "The social obligation to be bad at things", "transed": 1, "url": "https://notebook.drmaciver.com/posts/2020-02-29-10:30.html", "via": "", "real_tags": ["\u574f\u4e8b", "\u8bd5\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "e9f8f193a3ccdcf3c4c030d15dec688b.png", "infoid": 1006143, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u88ab\u79f0\u4e3a\u73bb\u8272-\u7231\u56e0\u65af\u5766\u51dd\u805a\u4f53(BEC)\u7684\u7269\u8d28\u72b6\u6001\u6700\u65e9\u662f\u572825\u5e74\u524d1\uff0c2\u5e74\u524d\u89c2\u6d4b\u5230\u7684\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u8fd9\u4e9b\u91cf\u5b50\u7269\u4f53\u5c31\u6210\u4e3a\u7814\u7a76\u91cf\u5b50\u7269\u7406\u7684\u5173\u952e\u5de5\u5177\uff0c\u5b83\u4eec\u901a\u5e38\u5728\u4e16\u754c\u5404\u5730\u7684\u6570\u767e\u4e2a\u5b9e\u9a8c\u5ba4\u751f\u4ea7\u3002Aveline\u7b49\u4eba\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u64b0\u6587\u30023\u62a5\u9053\u4e86\u5728\u7ed5\u5730\u7403\u8f68\u9053\u8fd0\u884c\u7684\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e0a\u4ea7\u751f\u7684\u94f7BEC\u3002\u7a7a\u95f4\u7ad9\u4e0a\u6c38\u4e45\u81ea\u7531\u843d\u4f53\u7684\u6761\u4ef6\u4e3a\u63a2\u6d4bBEC\u548c\u8fdb\u884c\u5e7f\u6cdb\u7684\u9ad8\u7cbe\u5ea6\u6d4b\u91cf\u63d0\u4f9b\u4e86\u65b0\u7684\u65b9\u6cd5\u3002\n\u5f53\u88ab\u6355\u83b7\u7684\u73bb\u8272\u5b50\u539f\u5b50(\u8d28\u5b50\u548c\u4e2d\u5b50\u603b\u6570\u4e3a\u5076\u6570\u7684\u539f\u5b50)\u7684\u5bc6\u96c6\u4e91\u51b7\u5374\u5230\u7edd\u5bf9\u96f6\u5ea64\uff0c5\u9644\u8fd1\u7684\u6e29\u5ea6\u65f6\uff0c\u5c31\u4f1a\u4ea7\u751fBEC\u3002\u5728\u8fd9\u4e9b\u8d85\u51b7\u7684\u7cfb\u7efc\u4e2d\uff0c\u539f\u5b50\u4e3b\u8981\u5360\u636e\u9677\u9631\u7684\u6700\u4f4e\u80fd\u6001\u3002\u91cf\u5b50\u529b\u5b66\u7684\u4e00\u4e2a\u4e2d\u5fc3\u539f\u5219\u662f\u6ce2-\u7c92\u5b50\u4e8c\u5143\u6027\uff0c\u5373\u6bcf\u4e2a\u7c92\u5b50\u90fd\u53ef\u4ee5\u63cf\u8ff0\u4e3a\u7269\u8d28\u6ce2\u3002BEC\u662f\u6d4b\u8bd5\u91cf\u5b50\u529b\u5b66\u7684\u6709\u7528\u7269\u4f53\uff0c\u56e0\u4e3a\u6574\u4e2a\u539f\u5b50\u4e91\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5355\u4e00\u7684\u7269\u8d28\u6ce2\u3002\u8fd9\u4e00\u6027\u8d28\u79f0\u4e3a\u91cf\u5b50\u7b80\u5e76\u3002\n\u73bb\u8272-\u7231\u56e0\u65af\u5766\u51dd\u805a\u662f\u901a\u8fc7\u4f7f\u7528\u51e0\u79cd\u6d89\u53ca\u5149\u573a\u548c\u78c1\u573a\u7ec4\u5408\u7684\u65b9\u6cd5\u51b7\u5374\u539f\u5b50\u4e91\u6765\u5b9e\u73b0\u7684\u3002\u901a\u5e38\u4f7f\u7528\u7684\u6700\u540e\u4e00\u6b65\u88ab\u79f0\u4e3a\u84b8\u53d1\u51b7\u53746\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u539f\u5b50\u88ab\u9650\u5236\u5728\u78c1\u9631\u4e2d\uff0c\u800c\u90a3\u4e9b\u52a8\u80fd\u6700\u9ad8\u7684\u539f\u5b50(\u6700\u70ed\u7684\u539f\u5b50)\u5229\u7528\u5c04\u9891\u8f90\u5c04\u88ab\u8d76\u51fa\u9677\u9631\u3002\u5269\u4e0b\u7684\u539f\u5b50\u76f8\u4e92\u78b0\u649e\uff0c\u5728\u4f4e\u4e8e\u521d\u59cb\u6e29\u5ea6\u7684\u5e73\u5747\u6e29\u5ea6\u4e0b\u8fbe\u5230\u70ed\u5e73\u8861\u3002\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u5f62\u6210BEC\u3002\n\u6b63\u5982\u6240\u8ba8\u8bba\u7684\uff0c\u73bb\u8272-\u7231\u56e0\u65af\u5766\u51dd\u805a\u9700\u8981\u4f4e\u6e29\uff0c\u5728\u4f4e\u6e29\u4e0b\u539f\u5b50\u51e0\u4e4e\u4e0d\u4f1a\u8fd0\u52a8\u3002\u7136\u800c\uff0c\u5f53BEC\u4ece\u78c1\u9631\u4e2d\u91ca\u653e\u51fa\u6765\u4ee5\u4fbf\u8fdb\u884c\u5b9e\u9a8c\u65f6\uff0c\u539f\u5b50\u4e4b\u95f4\u7684\u6392\u65a5\u76f8\u4e92\u4f5c\u7528\u4f1a\u5bfc\u81f4\u4e91\u56e2\u81a8\u80c0\u3002\u5728\u51e0\u79d2\u949f\u5185\uff0cBEC\u53d8\u5f97\u592a\u7a00\u800c\u4e0d\u80fd\u88ab\u68c0\u6d4b\u5230\u3002\u901a\u8fc7\u51cf\u5c0f\u9677\u9631\u7684\u6df1\u5ea6\uff0c\u4ece\u800c\u51cf\u5c0f\u9677\u9631\u4e2d\u7684\u539f\u5b50\u5bc6\u5ea6\uff0c\u53ef\u4ee5\u964d\u4f4e\u6269\u5f20\u7387\u3002\n\u5728\u5730\u7403\u4e0a\uff0c\u884c\u661f\u7684\u5f15\u529b\u9650\u5236\u4e86\u53ef\u80fd\u7684\u78c1\u9631\u7684\u5f62\u72b6\uff0c\u4ee5\u81f3\u4e8e\u9700\u8981\u4e00\u4e2a\u6df1\u9677\u9631\u6765\u9650\u5236BEC(\u56fe1A\uff0cb)\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cAveline\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u53d1\u73b0\uff0c\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e0a\u6781\u5f31\u7684\u91cd\u529b(\u5fae\u91cd\u529b)\u5141\u8bb8\u4f7f\u7528\u6d45\u9677\u9631\u521b\u5efa\u94f7BEC\u3002\u56e0\u6b64\uff0c\u4f5c\u8005\u53ef\u4ee5\u5728\u5927\u7ea6\u4e00\u79d2\u7684\u81a8\u80c0\u540e\u7814\u7a76BEC\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u64cd\u7eb5\u539f\u5b50\u3002\n\u5728\u53d1\u5e03BEC\u4e4b\u524d\uff0cAveline\u7b49\u4eba\u3002\u89c2\u5bdf\u5230\u7d27\u5bc6\u6355\u83b7\u7684\u51dd\u805a\u6db2\u88ab\u6655\u72b6\u7684\u94f7\u539f\u5b50\u4e91\u5305\u56f4\uff0c\u5e76\u4e0e\u4e4b\u76f8\u4e92\u4f5c\u7528\u3002\u5728\u84b8\u53d1\u51b7\u5374\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u539f\u5b50\u88ab\u8f6c\u79fb\u5230\u5bf9\u78c1\u573a\u4e0d\u654f\u611f\u7684\u72b6\u6001\u3002\u7531\u4e8e\u4e00\u79cd\u540d\u4e3a\u4e8c\u9636\u585e\u66fc\u6548\u5e947\u7684\u73b0\u8c61\uff0c\u8fd9\u4e9b\u539f\u5b50\u901a\u8fc7\u5b83\u4eec\u7684\u91cf\u5b50\u529b\u5b66\u6027\u8d28\u4e0e\u9677\u9631\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u5f88\u5f31\u3002\u5728\u5730\u7403\u4e0a\uff0c\u8fd9\u4e9b\u539f\u5b50\u5c06\u88ab\u4e3b\u5bfc\u7684\u91cd\u529b\u4ece\u9677\u9631\u4e2d\u79fb\u8d70\u3002\u7136\u800c\uff0c\u5728\u8f68\u9053\u4e0a\uff0c\u5b83\u4eec\u4ecd\u7136\u7559\u5728\u9677\u9631\u4e2d\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u6765\u76f4\u63a5\u751f\u4ea7\u5bc6\u5ea6\u6781\u4f4e\u7684\u8d85\u51b7\u539f\u5b50\u6837\u54c1\u3002\n\u4f5c\u8005\u7684\u5b9e\u9a8c\u4ec5\u4ec5\u6807\u5fd7\u7740\u8bb8\u591a\u5173\u4e8e\u91cf\u5b50\u7b80\u5e76\u6c14\u4f53\u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u7814\u7a76\u7684\u5f00\u59cb\u3002\u4f8b\u5982\uff0c\u5fae\u91cd\u529b\u5141\u8bb8\u4f7f\u7528\u5730\u7403\u4e0a\u4e0d\u80fd\u6b63\u786e\u4f7f\u7528\u7684\u9677\u9631\u5f62\u72b6(\u5982\u6c14\u6ce18\u7684\u5f62\u72b6)\u6765\u7ea6\u675f\u6216\u5f15\u5bfc\u539f\u5b50(\u56fe1C)\u3002\u672a\u6765\u5173\u4e8e\u8fd9\u79cd\u539f\u5b50\u6f14\u5316\u7684\u5de5\u4f5c\u5c06\u4e3a\u6211\u4eec\u63d0\u4f9b\u5bf9\u5c11\u4f53\u7269\u7406\u7684\u6d1e\u5bdf\u529b\u3002\u6b64\u5916\uff0c\u8fd8\u8ba1\u5212\u5bf9\u94be\u548c\u94f79\u7684\u91cf\u5b50\u6c14\u4f53\u6df7\u5408\u7269\u8fdb\u884c\u5b9e\u9a8c\u3002\n\u7ed5\u5730\u7403\u8f68\u9053\u8fd0\u884c\u7684BECs\u8fd8\u53ef\u4ee5\u63a8\u8fdb\u539f\u5b50\u5e72\u6d89\u6d4b\u91cf-\u4e00\u79cd\u57fa\u4e8e\u7269\u8d28\u6ce2\u4e4b\u95f4\u5e72\u6d89\u7684\u6d4b\u91cf\u6280\u672f\u3002\u539f\u5b50\u5e72\u6d89\u4eea\u5bf9\u60ef\u6027\u529b\u7684\u7075\u654f\u5ea6\u4e0e\u539f\u5b50\u5728\u5e72\u6d89\u4eea10\u4e2d\u505c\u7559\u65f6\u95f4\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5728\u5730\u9762\u4e0a\uff0c\u8fd9\u4e00\u65f6\u95f4\u53d7\u81ea\u7531\u843d\u4f53\u65f6\u95f4\u7684\u9650\u5236\u3002\u5fae\u91cd\u529b\u8bbe\u65bd\uff0c\u5982\u706b\u7bad10\u3001\u98de\u673a11\u548c\u201c\u964d\u843d\u5854\u201d12\u4ee5\u524d\u66fe\u88ab\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u7ed5\u5730\u7403\u8f68\u9053\u8fd0\u884c\u7684\u539f\u5b50\u5e72\u6d89\u4eea\u5c06\u5b9e\u73b0\u66f4\u591a\u7684\u5b9e\u9a8c\u5468\u671f\u3002\n\u5bf9\u4e8e\u672a\u6765\u7a7a\u95f4\u9ad8\u7cbe\u5ea6\u6d4b\u91cf\u7684\u76ee\u6807\uff0c\u5bf9\u6240\u6709\u7cfb\u7edf\u6548\u5e94\u7684\u900f\u5f7b\u5206\u6790\u548c\u5730\u9762\u5f00\u53d1\u6280\u672f\u7684\u5b9e\u65bd\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u8fd9\u6837\u7684\u6d4b\u91cf\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u81ea\u7531\u843d\u4f53\u666e\u9002\u6027(\u6240\u6709\u7269\u4f53\u5728\u5916\u90e8\u5f15\u529b\u573a\u4e2d\u52a0\u901f\u76f8\u540c\u7684\u539f\u7406)\u548c\u6697\u80fd\u91cf\u7406\u8bba(\u88ab\u8ba4\u4e3a\u5bfc\u81f4\u5b87\u5b99\u52a0\u901f\u81a8\u80c0\u7684\u672a\u77e5\u80fd\u91cf)\u7684\u4e25\u683c\u6d4b\u8bd5\u3002\u9884\u671f\u7684\u7075\u654f\u5ea6\u4e5f\u5c06\u4f7fBEC\u5e72\u6d89\u672f\u5728\u536b\u661f\u5bfc\u822a\u3001\u63a2\u6d4b\u548c\u5bf9\u5730\u89c2\u6d4b\u65b9\u9762\u5f15\u8d77\u4eba\u4eec\u7684\u5174\u8da3\u3002\nAveline\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u7684\u6280\u672f\u6210\u5c31\u4ee4\u4eba\u77a9\u76ee\u3002\u4ed6\u4eec\u7684\u8bbe\u5907\u9700\u8981\u6ee1\u8db3\u56fd\u9645\u7a7a\u95f4\u7ad9\u5bf9\u8d28\u91cf\u3001\u4f53\u79ef\u548c\u529f\u8017\u7684\u4e25\u683c\u8981\u6c42\uff0c\u5e76\u4e14\u8db3\u591f\u575a\u56fa\uff0c\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u7ef4\u4fee\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u6570\u5e74\u3002\u4f5c\u8005\u7684\u5730\u7403\u8f68\u9053BEC\u4e3a\u91cf\u5b50\u6c14\u4f53\u548c\u539f\u5b50\u5e72\u6d89\u6d4b\u91cf\u7684\u7814\u7a76\u63d0\u4f9b\u4e86\u65b0\u7684\u673a\u4f1a\uff0c\u5e76\u4e3a\u66f4\u96c4\u5fc3\u52c3\u52c3\u7684\u4efb\u52a1\u94fa\u5e73\u4e86\u9053\u8def\u3002", "note_en": "States of matter known as Bose\u2013Einstein condensates (BECs) were first observed 25 years ago  1 ,  2. Since then, these quantum objects have become a key tool in the study of quantum physics, and they are routinely produced in hundreds of laboratories around the world.  Writing in  Nature, Aveline  et al.  3 report the generation of rubidium BECs aboard the International Space Station, which is in orbit around Earth. The condition of perpetual free fall on the station offers new methods for probing BECs and for making a wide range of high-precision measurements.\n  A BEC is produced when a dense cloud of trapped bosonic atoms (atoms that have an even total number of protons and neutrons) is cooled to temperatures near absolute zero  4 ,  5. In these ultracold ensembles, the atoms mainly populate the lowest energy state of the trap. A central tenet of quantum mechanics is wave\u2013particle duality, whereby every particle can be described as a wave of matter. BECs are useful objects for testing quantum mechanics because the entire cloud of atoms can be regarded as a single matter wave. This property is called quantum degeneracy.\n Bose\u2013Einstein condensation is achieved by cooling the atomic cloud using several methods that involve combinations of light and magnetic fields. A commonly used final step is known as evaporative cooling  6. In this approach, the atoms are confined in a magnetic trap, and those that have the highest kinetic energy (the \u2018hottest\u2019 atoms) are driven from the trap using radio-frequency radiation. The remaining atoms collide with each other and reach thermal equilibrium at a lower mean temperature than the initial temperature. This process is repeated until a BEC is formed.\n As discussed, Bose\u2013Einstein condensation requires low temperatures, at which atoms hardly move. However, when a BEC is released from a magnetic trap so that experiments can be carried out, repulsive interactions between the atoms cause the cloud to expand. Within a few seconds, the BEC becomes too dilute to be detected. The expansion rate can be reduced by decreasing the depth of the trap, and, thereby, the density of atoms in the trap.\n On Earth, the planet\u2019s gravitational pull restricts the shape of possible magnetic traps in such a way that a deep trap is needed to confine a BEC (Fig. 1a,b). By contrast, Aveline and colleagues found that the extremely weak gravity (microgravity) on the International Space Station allowed rubidium BECs to be created using shallow traps. As a result, the authors could study the BECs after about one second of expansion, without needing to manipulate the atoms further.\n  Before releasing a BEC, Aveline  et al. observed that the tightly trapped condensate was surrounded by, and interacting with, a halo-shaped cloud of rubidium atoms. During evaporative cooling, these atoms had been transferred to a state that is insensitive to magnetic fields. The atoms then interacted only weakly with the trap through their quantum-mechanical properties, owing to a phenomenon called the second-order Zeeman effect  7. On Earth, such atoms would be removed from the trap by the dominant force of gravity. However, in orbit, they remain in the trap and could be used, for example, to directly produce ultracold atomic samples that have an extremely low density.\n The authors\u2019 experiments mark just the beginning of many exciting studies on quantum-degenerate gases. For example, microgravity allows atoms to be confined or guided using trap shapes, such as that of a bubble  8, that cannot be used properly on Earth (Fig. 1c). Future work on the evolution of such atoms will provide insight into few-body physics. Moreover, there are planned experiments on quantum-gas mixtures of potassium and rubidium  9.\n  Earth-orbiting BECs could also advance atom interferometry \u2014 a measurement technique based on the interference between matter waves. The sensitivity of an atom interferometer to inertial forces is proportional to the square of the time that atoms spend in the interferometer  10. On the ground, this time is restricted by the limited free-fall time. Microgravity facilities such as rockets  10, aeroplanes  11 and \u2018drop towers\u2019  12 have been used previously to address this problem, but Earth-orbiting atom interferometers would enable many more experimental cycles.\n For the future goal of high-precision measurements in space, a thorough analysis of all systematic effects and the implementation of techniques developed on the ground are essential. Such measurements could provide stringent tests of the universality of free fall (the principle that all objects accelerate identically in an external gravitational field) and theories of dark energy (the unknown energy that is thought to be causing the expansion of the Universe to accelerate). The expected sensitivities would also make BEC interferometry of interest for satellite navigation, exploration and Earth observation.\n Aveline and colleagues\u2019 technological achievement is remarkable. Their apparatus needed to satisfy the strict mass, volume and power-consumption requirements of the International Space Station, and be robust enough to operate for years without needing to be serviced. The authors\u2019 Earth-orbiting BECs provide new opportunities for research on quantum gases, as well as for atom interferometry, and pave the way for missions that are even more ambitious.", "posttime": "2020-06-11 23:02:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7269\u8d28,matter,\u539f\u5b50", "title": "\u91cf\u5b50\u7269\u8d28\u7ed5\u5730\u7403\u8fd0\u884c", "title_en": "Quantum Matter Orbits Earth", "transed": 1, "url": "https://www.nature.com/articles/d41586-020-01653-6", "via": "", "real_tags": ["\u7269\u8d28", "matter", "\u539f\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "61ae89f0f748721ace72bc31f2807992.jpg", "infoid": 1006142, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u786e\u4fe1\u60a8\u4e5f\u540c\u610f\uff0c\u8fd9\u53ef\u80fd\u4e0d\u4ec5\u4ec5\u662f\u51e0\u4e2a\u670b\u53cb\u4e4b\u95f4\u7684\u9879\u76ee\u3002\u8fd9\u662f\u4e00\u573a\u8fd0\u52a8\u3002\nMike Szczys-hackaday.com\u3002\n\u6211\u4eec\u5f88\u81ea\u8c6a\u80fd\u5bf9\u4ed6\u4eec\u7684SatNOGS\u9879\u76ee\u4ea7\u751f\u5f71\u54cd\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5730\u9762\u7ad9\u548c\u7f51\u7edc\uff0c\u9488\u5bf9\u6a21\u5757\u5316\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5e76\u4f7f\u7528\u8d1f\u62c5\u5f97\u8d77\u7684\u5de5\u5177\u548c\u8d44\u6e90\u6784\u5efa\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0cSatNOGS\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u6a21\u5757\u5316\u5e73\u53f0\u6765\u4e0e\u536b\u661f\u901a\u4fe1\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002\nLulzbot", "note_en": "From the description above we\u2019re sure you agree that this has the potential to be much more than a project between a few friends. This is a movement.\n  Mike Szczys - Hackaday.com\n  We are proud to have had an influence on their SatNOGS project, which is an open source ground station and network, optimized for modularity, and built using affordable tools and resources. Essentially, SatNOGS provides a scalable and modular platform to communicate with satellites, accessible to anyone.\n  LulzBot", "posttime": "2020-06-11 23:01:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u536b\u661f,satnogs", "title": "\u536b\u661fNOGS", "title_en": "SatNOGS", "transed": 1, "url": "https://satnogs.org/", "via": "", "real_tags": ["\u536b\u661f", "satnogs"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006141, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\u66f4\u591a\u7684\u5149\u7ebf\u8ddf\u8e2a\u662f\u901a\u8fc7\u773c\u775b\u5b8c\u6210\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u91cd\u65b0\u5b66\u4e60\u7684\u8bfe\u7a0b\uff1a\u5982\u679c\u50cf\u7d20\u7684\u4e2d\u5fc3\u662f\u5206\u6570(0.5\uff0c0.5)\uff0c\u4ee3\u7801\u4f1a\u66f4\u597d\uff0c\u751f\u6d3b\u4e5f\u66f4\u5bb9\u6613\u3002\u5982\u679c\u4f60\u786e\u5b9a\u4f60\u8fd9\u6837\u505a\u662f\u5bf9\u7684\uff0c\u90a3\u5c31\u592a\u597d\u4e86\uff1b\u5f80\u524d\u8d70\uff0c\u8fd9\u91cc\u6ca1\u4ec0\u4e48\u53ef\u770b\u7684\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4eab\u53d7\u8fd9\u4e2a\u3002\n\u5c06\u50cf\u7d20\u4e2d\u5fc3\u6620\u5c04\u5230(0.5\uff0c0.5)\u662f\u4fdd\u7f57\u00b7\u8d6b\u514b\u4f2f\u7279(Paul Heckbert)\u7684\u4e00\u7bc7\u53ef\u7231\u7684\u5c0f\u6587\u7ae0\u201c\u50cf\u7d20\u7684\u5750\u6807\u662f\u4ec0\u4e48\uff1f\u201d(What Are of a Pixel\uff1f)\u6700\u5148\u89e3\u91ca\u7684(\u81f3\u5c11\u5bf9\u6211\u6765\u8bf4\u662f\u8fd9\u6837)\uff0c\u201c\u56fe\u5f62\u5b9d\u77f3\u201d(The Graphics Gems)\uff0c\u7b2c246-248\u9875\uff0c1990\u5e74\u3002\n\u90a3\u7bc7\u6587\u7ae0\u73b0\u5728\u5f88\u96be\u627e\u5230\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u4e2a\u8981\u70b9\u3002\u5047\u8bbe\u60a8\u7684\u5c4f\u5e55\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e3a1000\u3002\u6211\u4eec\u6765\u8c08\u8c08X\u8f74\u5427\u3002\u53ef\u80fd\u5f88\u5bb9\u6613\u8bf40.0\u662f\u4e00\u884c\u6700\u5de6\u8fb9\u50cf\u7d20\u7684\u4e2d\u5fc3\uff0c1.0\u662f\u5b83\u65c1\u8fb9\u7684\u4e2d\u5fc3\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u56db\u820d\u4e94\u5165\uff0c\u5176\u4e2d\u6d6e\u70b9\u5750\u680773.6\u548c74.4\u90fd\u4f1a\u8f6c\u5230\u4e2d\u5fc374.0\u3002\n\u7136\u800c\uff0c\u8bf7\u4e09\u601d\u800c\u540e\u884c\u3002\u4f7f\u7528\u6b64\u8d34\u56fe\uff0c\u5de6\u8fb9\u7f18\u4e3a-0.5%\uff0c\u53f3\u8fb9\u7f18\u4e3a999.5\u3002\u8fd9\u4e0d\u662f\u4e00\u4ef6\u4ee4\u4eba\u6109\u5feb\u7684\u5de5\u4f5c\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5982\u679c\u5728\u50cf\u7d20\u5750\u6807\u503c\u4e0a\u4f7f\u7528abs()\u6216mod()\u7b49\u5404\u79cd\u8fd0\u7b97\u7b26\uff0c\u6b64\u6620\u5c04\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6cbf\u8fb9\u7f18\u7684\u7ec6\u5fae\u9519\u8bef\u3002\n\u8303\u56f4\u4e3a0.0%\u52301000.0\u66f4\u5bb9\u6613\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u50cf\u7d20\u7684\u4e2d\u5fc3\u5728\u5206\u65700.5\u65f6\u3002\u4f8b\u5982\uff0c\u6574\u6570\u50cf\u7d2043\u7136\u540e\u5bf9\u4e8e\u5176\u5185\u90e8\u7684\u5b50\u50cf\u7d20\u503c\u5177\u670943.0%\u523043.99999\u7684\u654f\u611f\u8303\u56f4\u3002\u4ee5\u4e0b\u662f\u4fdd\u7f57\u7684\u60f3\u8c61\uff1a\nOpenGL\u4e00\u76f4\u5c06\u5206\u6570(0.5\uff0c0.5)\u89c6\u4e3a\u50cf\u7d20\u4e2d\u5fc3\u3002DirectX\u8d77\u521d\u6ca1\u6709\uff0c\u4f46\u6700\u7ec8\u968f\u7740DirectX 10\u7684\u63a8\u51fa\u800c\u4e0e\u8be5\u7a0b\u5e8f\u6253\u4ea4\u9053\u3002\n\u4ece\u6574\u578b\u5230\u6d6e\u70b9\u578b\u50cf\u7d20\u5750\u6807\u7684\u6b63\u786e\u8f6c\u6362\u64cd\u4f5c\u662f\u52a00.5\uff1b\u6d6e\u70b9\u578b\u5230\u6574\u578b\u7684\u64cd\u4f5c\u662f\u4f7f\u7528FLOOR()\u3002\n\u8fd9\u5df2\u7ecf\u662f\u8001\u751f\u5e38\u8c08\u4e86\u3002\u6bcf\u4e2a\u4eba\u90fd\u662f\u8fd9\u6837\u505a\u7684\uff0c\u5bf9\u5417\uff1f\u6211\u4e4b\u6240\u4ee5\u63d0\u51fa\u5b83\uff0c\u662f\u56e0\u4e3a\u6211\u5f00\u59cb\u5728\u4e00\u4e9b\u5149\u7ebf\u8ddf\u8e2a\u793a\u4f8b(\u4f2a)\u4ee3\u7801\u4e2d\u770b\u5230\uff0c\u8fd9\u4e9b\u4ee3\u7801\u7528\u4e8e\u751f\u6210\u900f\u89c6\u6444\u5f71\u673a\u7684\u65b9\u5411\uff1a\nfloat3 ray_Origin=Camera-&gt\uff1bEyes\uff1bfloat2 d=2.0*(float2(idx.x\uff0cidx.y)/float2(\u5bbd\u5ea6\uff0c\u9ad8\u5ea6))-1.0\uff1bfloat3 ray_direction=d.x*Camera-&gt\uff1bU+D.y*Camera-&gt\uff1bV+Camera-&gt\uff1bW\uff1b\n\u77e2\u91cfidx\u662f\u50cf\u7d20\u7684\u6574\u6570\u4f4d\u7f6e\uff0c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u662f\u5c4f\u5e55\u5206\u8fa8\u7387\u3002\u901a\u8fc7\u5c06\u77e2\u91cfD\u4e58\u4ee5U\u548cV\u8fd9\u4e24\u4e2a\u77e2\u91cf\uff0c\u8ba1\u7b97\u77e2\u91cfD\u5e76\u5c06\u5176\u7528\u4e8e\u751f\u6210\u4e16\u754c\u7a7a\u95f4\u77e2\u91cf\u3002\u5c06\u6444\u50cf\u673a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u65b9\u5411W\u77e2\u91cf\u76f8\u52a0\u3002U\u548cV\u8868\u793a\u89c6\u56fe\u5e73\u9762\u5728\u8ddd\u773c\u775bW\u7684\u8ddd\u79bb\u5904\u7684\u6b63X\u8f74\u548cY\u8f74\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6240\u6709\u8fd9\u4e9b\u770b\u8d77\u6765\u90fd\u5f88\u6f02\u4eae\u548c\u5bf9\u79f0\uff0c\u800c\u4e14\u5927\u90e8\u5206\u90fd\u662f\u5bf9\u79f0\u7684\u3002\n\u77e2\u91cfd_1\u5e94\u8be5\u8868\u793a\u5c4f\u5e55\u4e0a\u5404\u70b9\u7684\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807(NDC)\u4e2d\u4ece-1.0\u52301.0\u7684\u4e00\u5bf9\u503c\u3002\u4f46\u662f\uff0c\u4ee3\u7801\u5931\u8d25\u3002\u7ee7\u7eed\u6211\u4eec\u7684\u793a\u4f8b\uff0c\u6574\u6570\u50cf\u7d20\u4f4d\u7f6e(0\uff0c0)\u4e3a(-1.0\uff0c-1.0)\u3002\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u5bf9\u5427\uff1f\u4f46\u662f\u6211\u4eec\u7684\u6700\u9ad8\u6574\u6570\u50cf\u7d20\u4f4d\u7f6e\u662f(999,999)\uff0c\u5b83\u8f6c\u6362\u4e3a(0.998\uff0c0.998)\u30020.002\u7684\u603b\u5dee\u5f02\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7cdf\u7cd5\u7684\u8d34\u56fe\u5c06\u6574\u4e2a\u89c6\u56fe\u79fb\u52a8\u4e86\u534a\u4e2a\u50cf\u7d20\u3002\u8fd9\u4e9b\u50cf\u7d20\u4e2d\u5fc3\u5e94\u4e0e\u6bcf\u8fb9\u7684\u8fb9\u7f18\u76f8\u8ddd0.001\u3002\nFloat2 d=2.0*((Float2(idx.x\uff0cidx.y)+Float2(0.5\uff0c0.5))/Float2(\u5bbd\uff0c\u9ad8))-1.0\uff1b\n\u8fd9\u5c31\u7ed9\u51fa\u4e86\u50cf\u7d20\u4e2d\u5fc3\u7684\u6b63\u786endc\u8303\u56f4\uff0c\u4ece-0.999\u52300.999\u3002\u5982\u679c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u8f6c\u6362\u8f6c\u6362\u6d6e\u70b9\u89d2\u70b9\u503c(0.0\uff0c0.0)\u548c(1000.0,1000.0)(\u6211\u4eec\u4e0d\u6dfb\u52a00.5\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5904\u4e8e\u6d6e\u70b9\u72b6\u6001)\uff0c\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4ece-1.0\u52301.0\u7684\u6574\u4e2aNDC\u8303\u56f4\uff0c\u4ece\u8fb9\u5230\u8fb9\uff0c\u8bc1\u660e\u4ee3\u7801\u662f\u6b63\u786e\u7684\u3002\n\u5982\u679c0.5\u8ba9\u60a8\u611f\u5230\u607c\u706b\uff0c\u5e76\u4e14\u60a8\u9519\u8fc7\u4e86\u5bf9\u79f0\u6027\uff0c\u5219\u5728\u50cf\u7d20\u5185\u90e8\u751f\u6210\u968f\u673a\u503c\u65f6(\u5373\uff0c\u901a\u8fc7\u901a\u8fc7\u6bcf\u4e2a\u50cf\u7d20\u968f\u673a\u6295\u5c04\u66f4\u591a\u5149\u7ebf\u8fdb\u884c\u6297\u952f\u9f7f)\uff0c\u6b64\u516c\u5f0f\u975e\u5e38\u5408\u9002\uff1a\nFloat2 d=2.0*((Float2(idx.x\uff0cidx.y)+Float2(\u5170\u5fb7(\u79cd\u5b50)\uff0c\u5170\u5fb7(\u79cd\u5b50))/Float2(\u5bbd\uff0c\u9ad8))-1.0\uff1b\n\u60a8\u53ea\u9700\u5c06\u8303\u56f4[0.0\uff0c1.0]\u4e2d\u7684\u4e00\u4e2a\u968f\u673a\u6570\u6dfb\u52a0\u5230\u6bcf\u4e2a\u6574\u6570\u50cf\u7d20\u4f4d\u7f6e\u503c\u5373\u53ef\u3002\u6b64\u968f\u673a\u503c\u7684\u5e73\u5747\u503c\u4e3a0.5\uff0c\u4f4d\u4e8e\u50cf\u7d20\u7684\u4e2d\u5fc3\u3002\n\u957f\u8bdd\u77ed\u8bf4\uff1a\u5f53\u5fc3\u3002\u628a\u90a3\u534a\u4e2a\u50cf\u7d20\u5f04\u5bf9\u3002\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8fd9\u4e9b\u534a\u50cf\u7d20\u7684\u8bef\u5dee\u5076\u5c14\u4f1a\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u5730\u65b9(\u76f8\u673a\u3001\u7eb9\u7406\u91c7\u6837\u7b49)\u3002\u591a\u5e74\u6765\uff0c\u6211\u5728Autodesk\u4ece\u4e8b\u4e0e\u5149\u6805\u5316\u76f8\u5173\u7684\u4ee3\u7801\u5de5\u4f5c\u3002\u4ed6\u4eec\u7684\u6240\u4f5c\u6240\u4e3a\u53ea\u4f1a\u5e26\u6765\u75db\u82e6\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5c0f\u5fc3\u7684\u8bdd\u5b83\u4eec\u4f1a\u518d\u6b21\u51fa\u73b0\u5728\u5149\u7ebf\u8ffd\u8e2a\u5668\u4e0a\u3002", "note_en": "With ray tracing being done from the eye much more now, this is a lesson to be relearned: code\u2019s better and life\u2019s easier if the center of the pixel is the fraction (0.5, 0.5). If you are sure you\u2019re doing this right, great; move on, nothing to see here. Enjoy  this instead.\n Mapping the pixel center to (0.5,0.5) is something first explained (at least first for me) in Paul Heckbert\u2019s lovely little article \u201cWhat Are the Coordinates of a Pixel?\u201d,\u00a0 Graphics Gems, p. 246-248, 1990.\n That article is hard to find nowadays, so here\u2019s the gist. Say you have a screen width and height of 1000. Let\u2019s just talk about the X axis. It might be tempting to say 0.0 is the center of the leftmost pixel in a row, 1.0 is the center next to it, etc. You can even then use rounding, where a floating-point coordinate of 73.6 and 74.4 both then go to the center 74.0.\n However, think again. Using this mapping gives -0.5 as the left edge, 999.5 as the right. This is unpleasant to work with. Worse yet, if various operators such as abs() or mod() get used on the pixel coordinate values, this mapping can lead to subtle errors along the edges.\n Easier is the range 0.0 to 1000.0, meaning the center each pixel is at the fraction 0.5. For example, integer pixel 43 then has the sensible range of 43.0 to 43.99999 for subpixel values within it. Here\u2019s Paul\u2019s visualization:\n  OpenGL has always considered the fraction (0.5,0.5) the pixel center. DirectX didn\u2019t, at first, but eventually  got with the program\u00a0with DirectX 10.\n The operations for proper conversion from integer to float pixel coordinates is to add 0.5; float to integer is to use floor().\n This is old news. Everyone does it this way, right? I bring it up because I\u2019m starting to see in some ray tracing samples (pseudo)code like this for generating the direction for a perspective camera:\n float3 ray_origin = camera-&gt;eye;\r float2 d = 2.0 * \r ( float2(idx.x, idx.y) / \r float2(width, height) ) - 1.0;\r float3 ray_direction =\r d.x*camera-&gt;U + d.y*camera-&gt;V + camera-&gt;W;\n The vector  idx is the integer location of the pixel,  width and  height the screen resolution. The vector\u00a0 d is computed and used to generate a world-space vector by multiplying it by two vectors,  U and  V. The  W vector, the camera\u2019s direction in world space, is added in.  U and  V\u00a0represent the positive  X and  Y axes of a view plane at the distance of  W from the eye. It all looks nice and symmetric in the code above, and it mostly is.\n  The vector  d\u00a0is supposed to represent a pair of values from -1.0 to 1.0 in  Normalized Device Coordinates\u00a0(NDC) for points on the screen. However,  the code fails. Continuing our example, integer pixel location (0,0) goes to (-1.0,-1.0). That sounds good, right? But our highest integer pixel location is (999,999), which converts to (0.998,0.998). The total difference of 0.002 is because this bad mapping shifts the whole view over half a pixel. These pixel centers should be 0.001 away from the edge on each side.\n  float2 d = 2.0 *\r ( ( float2(idx.x, idx.y) + float2(0.5,0.5) ) / \r float2(width, height) ) - 1.0;\n This then gives the proper NDC range for the centers of pixels, -0.999 to 0.999. If we instead transform the floating-point corner values (0.0,0.0) and (1000.0,1000.0) through this transform (we don\u2019t add the 0.5 since we\u2019re already in floating point), we get the full NDC range, -1.0 to 1.0, edge to edge, proving the code correct.\n If the 0.5 annoys you and you miss symmetry, this formulation is elegant when generating random values inside a pixel, i.e., for when you\u2019re antialiasing by shooting more rays at random through each pixel:\n float2 d = 2.0 *\r ( ( float2(idx.x, idx.y) + \r float2( rand(seed), rand(seed) ) ) /\r float2(width, height) ) - 1.0;\n You simply add a random number from the range [0.0,1.0) to each integer pixel location value. The average of this random value will be 0.5, at the center of the pixel.\n Long and short: beware. Get that half pixel right. In my experience, these half-pixel errors would occasionally crop up in various places (cameras, texture sampling, etc.) over the years when I worked on rasterizer-related code at Autodesk. They caused nothing but pain on down the line. They\u2019ll appear again in ray tracers if we\u2019re not careful.", "posttime": "2020-06-11 23:01:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u50cf\u7d20,center", "title": "\u50cf\u7d20\u7684\u4e2d\u5fc3\u662f(0.5\uff0c0.5)", "title_en": "The Center of the Pixel is (0.5,0.5)", "transed": 1, "url": "http://www.realtimerendering.com/blog/the-center-of-the-pixel-is-0-50-5/", "via": "", "real_tags": ["\u50cf\u7d20", "center"]}, {"category": "", "categoryclass": "", "imagename": "98c4313828bc90bf0f25636ffd1f4dfe.jpg", "infoid": 1006140, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8003\u53e4\u5b66\u5bb6\u8bf4\uff0c\u4f26\u6566\u6700\u65e9\u7684\u6e38\u4e50\u573a\u53ef\u80fd\u662f\u5728\u6000\u7279\u67e5\u666e\u5c14\u7684\u4e00\u4e2a\u4f4f\u623f\u91cd\u5efa\u9879\u76ee\u4e2d\u53d1\u73b0\u7684\u3002\n\u7ea2\u72ee\u5267\u9662\u88ab\u8ba4\u4e3a\u662f\u4f0a\u4e3d\u838e\u767d\u65f6\u4ee3\u7b2c\u4e00\u4e2a\u4e13\u95e8\u5efa\u9020\u7684\u5267\u9662\uff0c\u4f46\u5b83\u7684\u4f4d\u7f6e\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5b58\u5728\u4e89\u8bae\u3002\n\u53bb\u5e74\uff0c\u5728\u4f26\u6566\u4e1c\u90e8\u65af\u7279\u666e\u5c3c\u8def\u7684\u6316\u6398\u8fc7\u7a0b\u4e2d\uff0c\u4eba\u4eec\u53d1\u73b0\u4e86\u6728\u7ed3\u6784\u3001\u6587\u7269\u548c\u5efa\u7b51\u3002\n\u201c\u7ea2\u72ee\u201d\u88ab\u8ba4\u4e3a\u662f\u7ea6\u7ff0\u00b7\u5e03\u8d56\u6069\u4e8e1567\u5e74\u5de6\u53f3\u5efa\u9020\u7684\uff0c\u5f53\u65f6\u4ed6\u4e0e\u8a79\u59c6\u65af\u00b7\u4f2f\u8d1d\u5947\u4e8e1576\u5e74\u5728\u8096\u5c14\u8fea\u5947(Shoreditch)\u5efa\u9020\u4e86\u5267\u9662\u3002\n\u4f2f\u8d1d\u5947\u662f\u5f20\u4f2f\u4f26\u52cb\u7235\u5267\u56e2\u7684\u6210\u5458\uff0c\u5267\u9662\u662f\u8868\u6f14\u56e2\u7684\u7b2c\u4e00\u4e2a\u6c38\u4e45\u4f4f\u6240\uff0c\u572815\u4e16\u7eaa90\u5e74\u4ee3\u4e0a\u6f14\u4e86\u5e74\u8f7b\u7684\u5a01\u5ec9\u00b7\u838e\u58eb\u6bd4\u4e9a\u7684\u620f\u5267\u3002\n\u4eba\u4eec\u5bf9\u7ea2\u72ee\u77e5\u4e4b\u751a\u5c11\uff0c\u5f53\u4ee3\u7684\u7ec6\u8282\u4ec5\u9650\u4e8e1567\u5e74\u548c1569\u5e74\u7684\u4e24\u8d77\u8bc9\u8bbc\uff0c\u8fd9\u4e24\u8d77\u8bc9\u8bbc\u90fd\u63d0\u5230\u4e86\u7ea2\u8272\u7684\u91cc\u6602\u548c\u4e00\u5ea7\u6709\u6237\u5916\u821e\u53f0\u548c\u5ea7\u4f4d\u7684\u6cd5\u5c14\u59c6\u623f\u5b50\u3002\n2019\u5e741\u6708\uff0c\u8003\u53e4\u5b66\u5bb6\u5f00\u59cb\u53d1\u73b0\u4e00\u5ea7\u957f\u65b9\u5f62\u6728\u7ed3\u6784\uff0c\u7531144\u6839\u5e78\u5b58\u7684\u6728\u6750\u7ec4\u6210\uff0c\u5468\u56f4\u6709\u540e\u6d1e\uff0c\u53ef\u80fd\u662f\u811a\u624b\u67b6\u6216\u5e26\u8d70\u5eca\u7684\u5ea7\u6905\u3002\n\u4e13\u5bb6\u8bf4\uff0c\u8be5\u9057\u5740\u957f12.3\u7c73(40\u82f1\u5c3a)\uff0c\u5bbd9.3\u7c73(31\u82f1\u5c3a)\uff0c\u4e0e\u8bc9\u8bbc\u4e2d\u63d0\u5230\u7684\u5c3a\u5bf8\u975e\u5e38\u543b\u5408\u3002\n\u53d1\u6398\u5de5\u4f5c\u662f\u7531\u4f26\u6566\u5927\u5b66\u5b66\u9662\u8003\u53e4\u7814\u7a76\u6240\u4e1c\u5357\u90e8\u7684\u8003\u53e4\u90e8\u95e8\u8fdb\u884c\u7684\uff0c\u4e4b\u540e\u5728\u65af\u7279\u666e\u5c3c\u8def85\u53f7\u5f00\u59cb\u65bd\u5de5\u3002\n\u8fd9\u90e8\u4f5c\u54c1\u7684\u5bfc\u6f14\u6000\u7279\u5148\u751f\u8bf4\uff1a\u8fd1500\u5e74\u540e\uff0c\u6807\u5fd7\u7740\u4f0a\u4e3d\u838e\u767d\u620f\u5267\u9ece\u660e\u7684\u7ea2\u72ee\u5267\u573a\u7684\u9057\u8ff9\u53ef\u80fd\u7ec8\u4e8e\u88ab\u53d1\u73b0\u4e86\u3002\n\u7efc\u5408\u8bc1\u636e(\u4f4d\u4e8e\u6b63\u786e\u4f4d\u7f6e\u3001\u6b63\u786e\u65f6\u671f\u7684\u5efa\u7b51\u8003\u53e4\u9057\u8ff9)\u7684\u5f3a\u5ea6\u4f3c\u4e4e\u4e0e\u65e9\u671f\u6587\u732e\u4e2d\u8bb0\u5f55\u7684\u5267\u573a\u7279\u5f81\u76f8\u5339\u914d\u3002\n\u5728\u9057\u5740\u7684\u4e1c\u5317\u89d2\u4e5f\u53d1\u73b0\u4e8615\u4e16\u7eaa\u548c16\u4e16\u7eaa\u7684\u5efa\u7b51\uff0c\u8fd9\u4e9b\u5efa\u7b51\u5728\u63a5\u4e0b\u6765\u7684100\u5e74\u91cc\u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u53d1\u5c55\u3002\n\u4e13\u5bb6\u8bf4\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u53ef\u80fd\u662f\u7ea2\u72ee\u5ba2\u6808\u7684\u4e00\u90e8\u5206\uff0c\u7ea2\u72ee\u5ba2\u6808\u88ab\u8ba4\u4e3a\u662f\u4ece\u8be5\u9057\u5740\u7684\u4e00\u4e2a\u519c\u5e84\u53d1\u5c55\u800c\u6765\u7684\u3002\n\u5267\u9662\u548c\u7a97\u5e18\u5267\u573a\u662f\u5728\u8fc7\u53bb\u5341\u5e74\u5728\u8096\u5c14\u8fea\u5947\u7684\u6316\u6398\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u7684\uff0c\u800c\u91ce\u732a\u7684\u5934\u9885\u5219\u662f\u5728\u5965\u5c14\u5fb7\u76d6\u7279\u53d1\u73b0\u7684\u3002\n\u5979\u8865\u5145\u8bf4\uff0c\u8be5\u7ec4\u7ec7\u5c06\u7ee7\u7eed\u4e0e\u5f00\u53d1\u5546\u5bc6\u5207\u5408\u4f5c\uff0c\u89e3\u91ca\u8fd9\u4e9b\u8003\u53e4\u9057\u8ff9\u5e76\u5c55\u793a\u5b83\u4eec\u3002", "note_en": "London&#39;s earliest playhouse may have been discovered at a housing redevelopment in Whitechapel, archaeologists have said.\n The Red Lion was thought to be the first purpose-built theatre of the Elizabethan era but its location has long been disputed.\n Timber structures, artefacts and buildings were found during excavations in Stepney Way, east London, last year.\n   The Red Lion is thought to have been built in about 1567 by John Brayne, ahead of his construction of The Theatre in Shoreditch, which he completed with James Burbage in 1576.\n  Burbage was a member of acting company The Lord Chamberlain&#39;s Men and The Theatre was the first permanent home for acting troupes, staging a young William Shakespeare&#39;s plays in the 1590s.\n   Little is known about the Red Lion, with contemporary details limited to two lawsuits in 1567 and 1569 that mentioned &#34;the red lyon&#34; and &#34;a farme house&#34;, which had an outdoor stage and seating.\n In January 2019, archaeologists began to uncover a rectangular timber structure made up of 144 surviving timbers, with postholes around it, which could have been &#34;scaffolds&#34; or galleried seating.\n The site measures 12.3m (40ft) by 9.3m (31ft) and closely matches the dimensions mentioned in the lawsuits, experts said.\n The excavations were carried out by Archaeology South-East, part of UCL&#39;s Institute of Archaeology, before building work began at 85 Stepney Way.\n  Mr White, who directed the work, said: &#34;After nearly 500 years, the remains of the Red Lion playhouse, which marked the dawn of Elizabethan theatre, may have finally been found.\n &#34;The strength of the combined evidence - archaeological remains of buildings, in the right location, of the right period - seem to match up with characteristics of the playhouse recorded in early documents.&#34;\n Buildings from the 15th and 16th Century that were further developed over the next 100 years were also found in the north-east corner of the site.\n Experts said they believed these could have been part of the Red Lion Inn, which is thought to have been developed from a farmstead on the site.\n   The Theatre and  The Curtain playhouses were discovered during the past decade during excavations in Shoreditch, while the Boar&#39;s Head has been found in Aldgate.\n  She added the group would &#34;continue to work closely with the developer to interpret these archaeological remains and display them&#34;.", "posttime": "2020-06-11 23:00:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8003\u53e4\u5b66\u5bb6,lion,\u7ea2\u72ee", "title": "\u7ea2\u72ee\uff1a\u8003\u53e4\u5b66\u5bb6\u201c\u53d1\u73b0\u4f26\u6566\u6700\u65e9\u7684\u5267\u9662\u201d", "title_en": "Red Lion: Archaeologists 'find London's earliest theatre'", "transed": 1, "url": "https://www.bbc.com/news/uk-england-london-52983008", "via": "", "real_tags": ["\u8003\u53e4\u5b66\u5bb6", "lion", "\u7ea2\u72ee"]}]