[{"category": "", "categoryclass": "", "imagename": "656b17e5a9ed557453b1cb84df51d48a.png", "infoid": 1003687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u4e1a\u52a1\u6d88\u606f\u4f20\u9012\u5e73\u53f0\uff0c\u63d0\u4f9b\u552f\u4e00\u5b8c\u5168\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u5957\u4ef6\uff0c\u4ee5\u63a8\u52a8\u6574\u4e2a\u5ba2\u6237\u751f\u547d\u5468\u671f\u7684\u589e\u957f\u3002", "note_en": "A business messaging platform that offers the only totally customizable messaging suite to drive growth throughout the customer lifecycle.", "posttime": "2020-05-25 22:44:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5730\u65b9,decks,\u6d88\u606f\u4f20\u9012", "title": "\u6211\u5728\u4e00\u4e2a\u5730\u65b9\u6536\u96c6\u4e86600\u591a\u4e2a\u6ca5\u9752\u5e73\u53f0", "title_en": "I've collected over 600 pitch decks in one place", "transed": 1, "url": "https://starthouse.xyz?ref=hn", "via": "", "real_tags": ["\u5730\u65b9", "decks", "\u6d88\u606f\u4f20\u9012"]}, {"category": "", "categoryclass": "", "imagename": "e6d37728f42a510e13c60602b301d7ea.png", "infoid": 1003686, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5e74\u6765\uff0c\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5(CBT)\u4e00\u76f4\u662f\u6cbb\u7597\u5931\u7720\u7684\u91d1\u6807\u51c6\u3002CBT\u6cbb\u7597\u5931\u7720\u7684\u6280\u672f\u5df2\u7ecf\u5728\u8bb8\u591a\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u88ab\u8bc1\u660e\u662f\u6709\u6548\u7684\uff0c\u800c\u4e14\u6bd4\u836f\u7269\u66f4\u6709\u6548\u3002\n\u7f8e\u56fd\u7761\u7720\u533b\u5b66\u5b66\u4f1a\u3001\u7f8e\u56fd\u533b\u5e08\u5b66\u4f1a\u548c\u6b27\u6d32\u7761\u7720\u7814\u7a76\u534f\u4f1a\u90fd\u63a8\u8350CBT\u6cbb\u7597\u5931\u7720(CBT-I)\u4f5c\u4e3a\u4e00\u7ebf\u6cbb\u7597\u3002\n\u9605\u8bfb\u672c\u6307\u5357\u5927\u7ea6\u9700\u898115-20\u5206\u949f\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5feb\u901f\u6982\u8ff0\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u503c\u5f97\u82b1\u65f6\u95f4\u9605\u8bfb\u5b8c\u6574\u7684\u6307\u5357\u3002\nCBT\u662f\u4e00\u79cd\u6cbb\u7597\u5f62\u5f0f\uff0c\u6700\u521d\u662f\u4f5c\u4e3a\u4e00\u79cd\u6cbb\u7597\u6291\u90c1\u75c7\u800c\u5f00\u53d1\u7684\u3002CBT\u4e2d\u7684\u8ba4\u77e5\u662f\u6307\u601d\u7ef4\u3001\u4fe1\u5ff5\u3001\u8bb0\u5fc6\u3001\u56fe\u50cf\u6216\u4ef7\u503c\u89c2\u7b49\u5fc3\u7406\u6d3b\u52a8\u3002\u884c\u4e3a\u90e8\u5206\u5305\u62ec\u6211\u4eec\u6bcf\u5929\u505a\u7684\u6240\u6709\u4e8b\u60c5\u3002\u8fd9\u53ef\u4ee5\u662f\u4f60\u548c\u522b\u4eba\u4e00\u8d77\u505a\u7684\u4e8b\u60c5\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f60\u4e00\u4e2a\u4eba\u505a\u7684\u4e8b\u60c5\u3002\n\u5f53\u7f8e\u56fd\u7cbe\u795e\u75c5\u5b66\u5bb6\u4e9a\u4f26\u00b7T\u00b7\u8d1d\u514b(Aaron T.Beck)(\u548c\u5176\u4ed6\u4eba)\u6ce8\u610f\u5230\u8bb8\u591a\u6291\u90c1\u75c7\u60a3\u8005\u666e\u904d\u5b58\u5728\u7684\u601d\u7ef4\u6a21\u5f0f\u65f6\uff0cCBT\u5c31\u770b\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u5bf9\u4f20\u7edf\u7597\u6cd5\u7684\u7ed3\u679c\u4e0d\u592a\u6ee1\u610f\uff0c\u4ed6\u4eec\u60f3\u7528\u4e00\u79cd\u66f4\u76f4\u63a5\u3001\u66f4\u76f4\u63a5\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u4e8e\u662f\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\u5e94\u8fd0\u800c\u751f\u3002\nCBT\u7684\u4e00\u4e2a\u6838\u5fc3\u539f\u5219\u662f\uff0c\u6211\u4eec\u7684\u60c5\u7eea\u53cd\u5e94\u548c\u884c\u4e3a\u53d7\u5230\u6211\u4eec\u5982\u4f55\u770b\u5f85\u81ea\u5df1\u3001\u4ed6\u4eba\u548c\u5468\u56f4\u4e16\u754c\u7684\u5f71\u54cd\u3002\u4eba\u7c7b\u6709\u5f88\u5f3a\u7684\u601d\u8003\u80fd\u529b\uff0c\u4f46\u8fd9\u9700\u8981\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u5927\u591a\u6570\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u8d70\u6377\u5f84\uff0c\u5bf9\u53d1\u751f\u7684\u4e8b\u60c5\u4e0d\u5047\u601d\u7d22\u5730\u505a\u51fa\u53cd\u5e94\u3002\u8fd9\u4e9b\u6377\u5f84\uff0c\u6216\u8ba4\u77e5\u504f\u5dee\uff0c\u5f80\u5f80\u4f1a\u5bfc\u81f4\u6211\u4eec\u5bf9\u4fe1\u606f\u7684\u89e3\u8bfb\u548c\u5904\u7406\u4e0d\u51c6\u786e\u3002\n\u5982\u679c\u4f60\u8ba9\u4e24\u4e2a\u4eba\u5c31\u4ed6\u4eec\u90fd\u5f88\u4e86\u89e3\u7684\u4e8b\u60c5\u53d1\u8868\u6f14\u8bb2\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u4e24\u79cd\u4e0d\u540c\u7684\u53cd\u5e94\u3002\u4e00\u4e2a\u662f\u72b9\u8c6b\u4e0d\u51b3\u7684\uff0c\u5efa\u8bae\u662f\u53e6\u4e00\u4e2a\u4eba\u3002\u53e6\u4e00\u4f4d\u7acb\u5373\u70ed\u60c5\u5730\u8868\u793a\u540c\u610f\u3002\u60c5\u51b5\u4e5f\u5b8c\u5168\u4e00\u6837\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7684\u53cd\u5e94\u4f1a\u5982\u6b64\u4e0d\u540c\u5462\uff1f\nCBT\u89e3\u91ca\u8bf4\uff0c\u8fd9\u79cd\u60c5\u7eea\u53cd\u5e94\u548c\u884c\u4e3a\u7684\u5dee\u5f02\u6765\u81ea\u4e8e\u5bf9\u60c5\u51b5\u7684\u4e0d\u540c\u601d\u8003\u65b9\u5f0f\u3002\u6709\u4eba\u8ba4\u4e3a\u4ed6\u53ef\u80fd\u4f1a\u5f00\u59cb\u53d1\u6296\uff0c\u5176\u4ed6\u4eba\u4f1a\u6ce8\u610f\u5230\u7684\u3002\u53e6\u4e00\u4f4d\u5219\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5206\u4eab\u77e5\u8bc6\u7684\u597d\u673a\u4f1a\u3002\nCBT\u63d0\u51fa\uff0c\u8ba9\u6211\u4eec\u611f\u89c9\u5230\u67d0\u79cd\u4e1c\u897f\u7684\u4e0d\u662f\u60c5\u5883\uff0c\u800c\u662f\u5bf9\u90a3\u79cd\u60c5\u5883\u7684\u60f3\u6cd5\u3002\n\u6539\u53d8\u4f60\u7684\u6240\u4f5c\u6240\u4e3a\u5f80\u5f80\u662f\u6539\u53d8\u4f60\u5bf9\u67d0\u4e8b\u7684\u60f3\u6cd5\u548c\u611f\u53d7\u7684\u6700\u6709\u529b\u7684\u65b9\u5f0f\u3002CBT\u4e2d\u7684\u884c\u4e3a\u90e8\u5206\u662f\u5173\u4e8e\u6d4b\u8bd5\u65b0\u7684\u884c\u4e3a\uff0c\u5e76\u4e86\u89e3\u5f53\u60a8\u83b7\u5f97\u65b0\u7684\u4f53\u9a8c\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u5982\u679c\u4f60\u603b\u662f\u56de\u907f\u6f14\u8bb2\uff0c\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u4f53\u9a8c\u5230\u6210\u529f\u7684\u6f14\u8bb2\u3002\u5728\u90a3\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5bf9\u81ea\u5df1\u7684\u8d1f\u9762\u60f3\u6cd5\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u3002\u5f53\u4eba\u4eec\u5728\u4eba\u7fa4\u4e2d\u8bb2\u8bdd\u65f6\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u65e0\u76ca\u7684\u4fe1\u5ff5\uff0c\u90a3\u5c31\u662f\u4ed6\u4eec\u4f1a\u53d8\u5f97\u7126\u8651\uff0c\u5f00\u59cb\u98a4\u6296\uff0c\u89c2\u4f17\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u8f6f\u5f31\u7684\u8868\u73b0\u3002\n\u4e3a\u4e86\u9488\u5bf9\u8fd9\u6837\u4e00\u79cd\u8ba4\u77e5\uff0c\u5373\u6447\u6643\u662f\u8f6f\u5f31\u7684\u8ff9\u8c61\uff0cCBT\u4f7f\u7528\u4e86\u4e00\u79cd\u540d\u4e3a\u884c\u4e3a\u5b9e\u9a8c\u7684\u65b9\u6cd5\u3002\u5728\u8fd9\u7c7b\u5b9e\u9a8c\u4e2d\uff0c\u76ee\u6807\u662f\u83b7\u5f97\u771f\u5b9e\u7684\u4f53\u9a8c\uff0c\u4e86\u89e3\u5982\u679c\u4f60\u6447\u6643\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5176\u4ed6\u4eba\u662f\u5426\u771f\u7684\u4f1a\u5bf9\u6b64\u505a\u51fa\u8d1f\u9762\u53cd\u5e94\u3002\u4e00\u4e2a\u5178\u578b\u7684\u884c\u4e3a\u5b9e\u9a8c\u53ef\u80fd\u662f\u628a\u81ea\u5df1\u5728\u4eba\u7fa4\u4e2d\u8bb2\u8bdd\u7684\u8fc7\u7a0b\u5f55\u4e0b\u6765\u3002\u5f53\u4e8b\u540e\u89c2\u770b\u89c6\u9891\u65f6\uff0c\u8bd5\u7740\u6ce8\u610f\u6447\u6643\u7684\u7a0b\u5ea6\u4ee5\u53ca\u5c0f\u7ec4\u5bf9\u6b64\u6709\u4ec0\u4e48\u53cd\u5e94\u3002\u6700\u6709\u53ef\u80fd\u7684\u662f\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u98a4\u6296\u51e0\u4e4e\u5bdf\u89c9\u4e0d\u5230\uff0c\u800c\u90a3\u4e9b\u5728\u542c\u7684\u4eba\u6839\u672c\u6ca1\u6709\u53cd\u5e94\u3002\n\u6cbb\u7597\u5305\u62ec\u6539\u53d8\u4f60\u5bf9\u67d0\u4e8b\u7684\u611f\u89c9\u3002\u65e0\u8bba\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e00\u4e2a\u76ee\u6807\uff0c\u8fd8\u662f\u505c\u6b62\u7126\u8651\u6216\u60b2\u4f24--\u8fd9\u4e00\u5207\u90fd\u662f\u4e3a\u4e86\u6539\u53d8\u60c5\u7eea\u3002\u73b0\u5728\uff0c\u8fd9\u5f88\u96be\u76f4\u63a5\u505a\u5230\u3002\u6211\u4eec\u51e0\u4e4e\u65e0\u6cd5\u63a7\u5236\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u4e0d\u7ba1\u4f60\u559c\u6b22\u4e0e\u5426\uff0c\u5b83\u4eec\u90fd\u4f1a\u7a81\u7136\u5192\u51fa\u6765\u3002CBT\u65e8\u5728\u901a\u8fc7\u6211\u4eec\u7684\u601d\u60f3(\u8ba4\u77e5)\u548c\u884c\u4e3a\u6539\u53d8\u4f60\u5bf9\u67d0\u4e8b\u7684\u611f\u89c9\u3002\n\u6211\u4eec\u53ef\u4ee5\u628aCBT\u7684\u65b9\u6cd5\u753b\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u3002\u4f60\u7684\u601d\u8003\u65b9\u5f0f\u5f71\u54cd\u4f60\u7684\u884c\u4e3a\uff0c\u4f60\u7684\u611f\u89c9\u5f71\u54cd\u4f60\u7684\u601d\u8003\u65b9\u5f0f\uff0c\u4f60\u7684\u611f\u89c9\u5f71\u54cd\u4f60\u7684\u884c\u4e3a\uff0c\u7b49\u7b49\u3002\n\u4e3a\u4e86\u8ba9\u6539\u53d8\u53d1\u751f\uff0c\u6211\u4eec\u8981\u4e48\u6539\u53d8\u6211\u4eec\u601d\u8003\u67d0\u4e8b\u7684\u65b9\u5f0f\uff0c\u8981\u4e48\u6539\u53d8\u6211\u4eec\u5bf9\u67d0\u4e8b\u7684\u53cd\u5e94\u65b9\u5f0f\uff0c\u6216\u8005\u66f4\u597d--\u4e24\u8005\u540c\u65f6\u53d1\u751f\u3002\n\u81ea20\u4e16\u7eaa60\u5e74\u4ee3\u4ee5\u6765\uff0cCBT\u5df2\u7ecf\u88ab\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u6570\u5343\u540d\u6cbb\u7597\u5e08\u548c\u6570\u767e\u4e07\u60a3\u8005\u4f7f\u7528\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u9488\u5bf9\u4e00\u7cfb\u5217\u95ee\u9898\u5f00\u53d1\u4e86\u4e0d\u540c\u7684CBT\u65b9\u6cd5\uff0c\u7814\u7a76\u4e00\u518d\u8868\u660e\u5176\u6709\u6548\u6027\u3002\u6211\u4eec\u5e38\u8bf4CBT\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7597\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\u6709\u5f88\u591a\u79cd\u6a21\u5f0f\u3002\nCBT\u6709\u52a9\u4e8e\u6cbb\u7597\u65e0\u76ca\u7684\u601d\u7ef4\u548c\u884c\u4e3a\uff0c\u4f46\u5b83\u5982\u4f55\u7528\u4e8e\u6cbb\u7597\u5931\u7720\u5e76\u4e0d\u660e\u663e\u3002\u4e3a\u4e86\u8bf4\u660e\u5931\u7720\u662f\u5982\u4f55\u7531\u8ba4\u77e5\u5f15\u8d77\u7684\uff0c\u4ee5\u53caCBT\u5982\u4f55\u5e2e\u52a9\u4f60\u7761\u7720\uff0c\u8ba9\u6211\u4eec\u7528\u4e24\u4e2a\u865a\u6784\u7684\u4eba\u6765\u4ee3\u8868\u4e24\u79cd\u4e0d\u540c\u7684\u7761\u7720\u4f53\u9a8c\u65b9\u5f0f\u3002\u89c1\u89c1\u60a3\u6709\u5931\u7720\u75c7\u7684\u4e54\u6cbb\u548c\u6ca1\u6709\u5931\u7720\u7684\u82cf\u73ca\u3002\n\u4e54\u6cbb\u5931\u7720\u5df2\u6709\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u591a\u5e74\u6765\uff0c\u4ed6\u7ecf\u5386\u4e86\u8bb8\u591a\u4e0d\u7720\u4e4b\u591c\uff0c\u8f97\u8f6c\u53cd\u4fa7\uff0c\u7b49\u5f85\u5165\u7761\u3002\u4e54\u6cbb\u7684\u5931\u7720\u75c7\u6700\u8fd1\u8d8a\u6765\u8d8a\u4e25\u91cd\uff0c\u4ed6\u7ecf\u5e38\u5728\u534a\u591c\u9192\u6765\uff0c\u7761\u4e0d\u7740\u89c9\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u4ed6\u6bcf\u665a\u7684\u7761\u7720\u65f6\u95f4\u4e0d\u8d85\u8fc74\u52305\u4e2a\u5c0f\u65f6\u3002\n\u82cf\u73ca\u4e00\u76f4\u7761\u5f97\u5f88\u597d\u3002\u5979\u603b\u662f\u5728\u4e0a\u5e8a\u524d\u5341\u4e94\u5206\u949f\u5185\u5165\u7761\uff0c\u9192\u6765\u540e\u7cbe\u795e\u7115\u53d1\u3002\u82cf\u73ca\u5e76\u4e0d\u771f\u7684\u60f3\u592a\u591a\u5173\u4e8e\u7761\u7720\u7684\u4e8b\uff0c\u8fd9\u53ea\u662f\u5979\u4e0a\u5e8a\u7761\u89c9\u65f6\u4f1a\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u4e54\u6cbb\u548c\u82cf\u73ca\u7684\u4e0d\u540c\u4e4b\u5904\u53ef\u80fd\u5e76\u4e0d\u660e\u663e\uff0c\u90a3\u5c31\u662f\u4ed6\u4eec\u5bf9\u7761\u7720\u7684\u770b\u6cd5\u622a\u7136\u4e0d\u540c\u3002\u4ed6\u4eec\u6bcf\u665a\u90fd\u7ecf\u5386\u5b8c\u5168\u76f8\u540c\u7684\u60c5\u51b5\uff1b\u4ed6\u4eec\u90fd\u4e0a\u5e8a\u7761\u89c9\uff0c\u7136\u540e\u8bd5\u7740\u5165\u7761\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u7684\u60f3\u6cd5\u548c\u611f\u53d7\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\n\u4e54\u6cbb\u62c5\u5fc3\u53c8\u4f1a\u662f\u4e00\u4e2a\u5931\u7720\u4e4b\u591c\uff0c\u62c5\u5fc3\u7b2c\u4e8c\u5929\u4e0a\u73ed\u4f1a\u7d2f\u5f97\u8981\u6b7b\u3002\u4ed6\u60f3\u7740\u7761\u7720\u4e0d\u8db3\u53ef\u80fd\u4f1a\u5bf9\u4ed6\u7684\u8eab\u4f53\u9020\u6210\u600e\u6837\u7684\u635f\u5bb3\uff0c\u5e76\u60f3\u77e5\u9053\u81ea\u5df1\u662f\u5426\u8fd8\u80fd\u7761\u5f97\u597d\u3002\u4ed6\u7684\u5934\u4e00\u78b0\u5230\u6795\u5934\uff0c\u4ed6\u5c31\u5b8c\u5168\u6e05\u9192\u4e86\u3002\u4ed6\u5fc3\u6025\u5982\u711a\uff0c\u5f00\u59cb\u611f\u5230\u7126\u8651\u548c\u4e0d\u5b89\u3002\u4ed6\u7b4b\u75b2\u529b\u5c3d\uff0c\u4f46\u4f3c\u4e4e\u7761\u4e0d\u7740\u89c9\u3002\u5728\u82b1\u4e86\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u8bd5\u56fe\u5165\u7761\u4f46\u6ca1\u6709\u6210\u529f\u540e\uff0c\u4ed6\u62ff\u51fa\u624b\u673a\uff0c\u542c\u4e86\u4e00\u4e2a\u64ad\u5ba2\u6765\u5206\u6563\u81ea\u5df1\u7684\u6ce8\u610f\u529b\u3002\u4ed6\u7ec8\u4e8e\u5728\u8d77\u5e8a\u4e0a\u73ed\u524d\u51e0\u4e2a\u5c0f\u65f6\u7761\u7740\u4e86\u3002\n\u82cf\u73ca\u4e0a\u5e8a\u7761\u89c9\u4e86\uff0c\u6839\u672c\u6ca1\u6709\u591a\u60f3\u8fd9\u4ef6\u4e8b\u3002\u5979\u5173\u706f\u5341\u4e94\u5206\u949f\u540e\u5c31\u719f\u7761\u4e86\u3002\n\u4e54\u6cbb\u7684\u7761\u7720\u95ee\u9898\u5f00\u59cb\u4e8e\u4ed6\u5de5\u4f5c\u7684\u516c\u53f8\u9047\u5230\u8d22\u52a1\u56f0\u96be\u5e76\u4e0d\u5f97\u4e0d\u88c1\u5458\u7684\u65f6\u5019\u3002\u4ed6\u62c5\u5fc3\u4e22\u6389\u5de5\u4f5c\uff0c\u4ed8\u4e0d\u8d77\u623f\u79df\u3002\u4e54\u6cbb\u53d1\u73b0\u4ed6\u4e00\u5929\u4e2d\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u53d1\u6101\uff0c\u591c\u5e55\u964d\u4e34\u65f6\u66f4\u662f\u5982\u6b64\uff0c\u8be5\u7761\u89c9\u4e86\u3002\u4ed6\u50cf\u5927\u591a\u6570\u4eba\u4e00\u6837\uff0c\u5728\u9762\u5bf9\u751f\u6d3b\u4e2d\u7684\u95ee\u9898\u65f6\uff0c\u52aa\u529b\u60f3\u529e\u6cd5\u6446\u8131\u56f0\u5883\u3002\u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c\u4e54\u6cbb\u6ce8\u610f\u5230\u4ed6\u7684\u7761\u7720\u8d8a\u6765\u8d8a\u5dee\u3002\u7ecf\u5e38\u8981\u82b1\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5165\u7761\uff0c\u4ed6\u6bcf\u665a\u7ecf\u5e38\u9192\u6765\u597d\u51e0\u6b21\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u4e54\u6cbb\u6ca1\u6709\u4e22\u6389\u5de5\u4f5c\u3002\u516c\u53f8\u73b0\u5728\u505a\u5f97\u5f88\u597d\uff0c\u4ed6\u4e0d\u518d\u62c5\u5fc3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u4ed6\u4ecd\u7136\u5728\u4e3a\u7761\u7720\u800c\u82e6\u82e6\u6323\u624e\u3002\n\u5f53\u8c08\u5230\u5931\u7720\u65f6\uff0c\u4e54\u6cbb\u7684\u6545\u4e8b\u662f\u5178\u578b\u7684\u3002\u4e00\u4e9b\u6700\u521d\u7684\u6709\u538b\u529b\u7684\u751f\u6d3b\u4e8b\u4ef6\u4f1a\u5f15\u53d1\u5b83\uff0c\u8fd9\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4f46\u5373\u4f7f\u5f53\u538b\u529b\u6e90\u89e3\u51b3\u4e86\uff0c\u8fd9\u4e9b\u95ee\u9898\u4e5f\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6700\u521d\u5bfc\u81f4\u5931\u7720\u7684\u4e8b\u4ef6\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u5f53\u5931\u7720\u5f97\u5230\u8bc1\u5b9e\u540e\uff0c\u4eba\u4eec\u5f00\u59cb\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u884c\u4e8b\u548c\u601d\u8003\u3002\nCBT\u5e76\u4e0d\u592a\u5173\u5fc3\u6700\u521d\u5bfc\u81f4\u4e54\u6cbb\u5931\u7720\u7684\u539f\u56e0\u3002\u76f8\u53cd\uff0c\u5b83\u5173\u6ce8\u7684\u662f\u7ef4\u6301\u5b83\u7684\u601d\u60f3\u3001\u611f\u89c9\u548c\u884c\u4e3a\u3002\u5728\u4e54\u6cbb\u7684\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ed6\u975e\u5e38\u62c5\u5fc3\u7761\u7720\u548c\u7761\u7720\u4e0d\u8db3\u7684\u540e\u679c\u3002\u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c\u4ed6\u5f00\u59cb\u628a\u5e8a\u4e0e\u632b\u6298\u611f\u548c\u7126\u8651\u611f\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\u5f53\u4e54\u6cbb\u7684\u601d\u60f3\u4e0d\u65ad\u56f4\u7ed5\u7740\u7761\u7720\u548c\u4ed6\u5f97\u4e0d\u5230\u8db3\u591f\u7761\u7720\u7684\u540e\u679c\u65f6\uff0c\u4ed6\u7684\u5927\u8111\u4f1a\u628a\u8fd9\u7406\u89e3\u4e3a\u4e00\u79cd\u5a01\u80c1\u3002\u5927\u8111\u7684\u5a01\u80c1\u68c0\u6d4b\u7cfb\u7edf\u4e0d\u4f1a\u533a\u5206\u601d\u8003\u5a01\u80c1\u548c\u5b9e\u9645\u7ecf\u5386\u5a01\u80c1\u3002\u5b83\u505a\u5b83\u5e94\u8be5\u505a\u7684\u4e8b\uff0c\u5e76\u544a\u8bc9\u8eab\u4f53\u505a\u597d\u5e94\u5bf9\u5a01\u80c1\u7684\u51c6\u5907\u3002\n\u5f53\u5927\u8111\u53d1\u51fa\u4fe1\u53f7\u8ba9\u8eab\u4f53\u505a\u597d\u51c6\u5907\u65f6\uff0c\u8eab\u4f53\u4f1a\u7acb\u5373\u505a\u51fa\u53cd\u5e94\u3002\u5b83\u8fdb\u5165\u89c9\u9192\u72b6\u6001\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u505a\u597d\u5e94\u5bf9\u4efb\u4f55\u4e8b\u60c5\u7684\u51c6\u5907\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u89c9\u9192\u662f\u4e00\u79cd\u4e0e\u7761\u7720\u76f8\u53cd\u7684\u72b6\u6001\u3002\u4f60\u7684\u5fc3\u8df3\u4f1a\u52a0\u5feb\u4e00\u70b9\uff0c\u4f60\u7684\u547c\u5438\u9891\u7387\u5f00\u59cb\u589e\u52a0\u3002\u77b3\u5b54\u653e\u5927\u4e86\uff0c\u4f60\u5c31\u66f4\u8b66\u60d5\u4e86\u3002\u56e0\u4e3a\u5927\u8111\u8ba4\u4e3a\u4f60\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\uff0c\u6240\u4ee5\u4f60\u8fdb\u5165\u4e86\u4e00\u79cd\u6e29\u548c\u7684\u6218\u6597\u6216\u9003\u8dd1\u6a21\u5f0f\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u4f60\u7684\u611f\u5b98\u4f1a\u5f97\u5230\u589e\u5f3a\uff0c\u808c\u8089\u4e5f\u51c6\u5907\u597d\u5f00\u59cb\u884c\u52a8\u3002\n\u6700\u6709\u8bf4\u670d\u529b\u548c\u6700\u6709\u8bf4\u670d\u529b\u7684\u65b9\u5f0f\u662f\u8ba4\u8bc6\u5230\u4ee5\u524d\u6301\u6709\u7684\u4fe1\u5ff5\u662f\u9519\u8bef\u7684\uff0c\u4f46\u73b0\u5728\u5374\u7ecf\u5386\u4e86\u76f8\u53cd\u7684\u60c5\u51b5\u3002\u4e54\u6cbb\u8ba4\u4e3a\u4ed6\u5fc5\u987b\u82b1\u5f88\u5927\u529b\u6c14\u624d\u80fd\u5165\u7761\u3002CBT\u6cbb\u7597\u5931\u7720\u7684\u4e00\u4e2a\u76ee\u6807\u662f\u7761\u89c9\u65f6\u4e0d\u53bb\u60f3\u6216\u62c5\u5fc3\u592a\u591a\u3002\u6211\u4eec\u5e0c\u671b\u4e54\u6cbb\u66f4\u50cf\u82cf\u73ca\uff0c\u4f53\u9a8c\u4e00\u4e0b\u4e0d\u8d39\u5439\u7070\u4e4b\u529b\u5c31\u80fd\u5165\u7761\uff0c\u5e76\u56e0\u6b64\u4e86\u89e3\u5230\u4ed6\u4e0d\u7528\u60f3\u592a\u591a\u5c31\u80fd\u8f7b\u677e\u5165\u7761\u3002\u4e3a\u4e86\u5e2e\u52a9\u4eba\u4eec\u83b7\u5f97\u8fd9\u79cd\u5b9d\u8d35\u7684\u4f53\u9a8c\uff0cCBT\u6cbb\u7597\u5931\u7720\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a\u7761\u7720\u9650\u5236\u7684\u4e1c\u897f\u3002\n\u5f53\u7761\u7720\u56f0\u96be\u7684\u4eba\u7b2c\u4e00\u6b21\u542c\u5230\u7761\u7720\u9650\u5236\u65f6\uff0c\u4ed6\u4eec\u7acb\u523b\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u8fdd\u53cd\u76f4\u89c9\u7684\u3002\u5f53\u4f60\u60f3\u8981\u66f4\u591a\u7761\u7720\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u8981\u9650\u5236\u7761\u7720\u5462\uff1f\n\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7761\u7720\u9a71\u52a8\u529b\u3002\u7761\u7720\u9a71\u52a8\u529b\u662f\u5f53\u4f60\u9192\u7740\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u65f6\u8ba9\u4f60\u660f\u660f\u6b32\u7761\u7684\u529b\u91cf\u3002\u4e3a\u4e86\u6d4b\u91cf\u4f60\u7684\u7761\u7720\u9a71\u52a8\u529b\u6709\u591a\u5f3a\uff0c\u8eab\u4f53\u4f1a\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u817a\u82f7\u7684\u8377\u5c14\u8499\u3002\u4f60\u65e9\u4e0a\u4e00\u9192\u6765\uff0c\u8eab\u4f53\u5c31\u5f00\u59cb\u5206\u6ccc\u817a\u82f7\u3002\u5f53\u5927\u8111\u68c0\u6d4b\u5230\u8db3\u591f\u9ad8\u7684\u6c34\u5e73\u65f6\uff0c\u5b83\u5c31\u4f1a\u5f00\u59cb\u5173\u95ed\u5927\u8111\u4e2d\u4fc3\u8fdb\u89c9\u9192\u7684\u533a\u57df\uff0c\u7136\u540e\u4f60\u5c31\u4f1a\u72af\u56f0\u3002\u4f60\u9192\u7740\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u8eab\u4f53\u4ea7\u751f\u7684\u817a\u82f7\u5c31\u8d8a\u591a\uff0c\u4f60\u7684\u7761\u7720\u52a8\u529b\u5c31\u4f1a\u589e\u5f3a\u3002\n\u201c\u7761\u7720\u9650\u5236\u201d\u8fd9\u4e2a\u540d\u79f0\u6709\u70b9\u8bef\u5bfc\u4eba\uff0c\u5b8c\u5168\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u201c\u5e8a\u4e0a\u65f6\u95f4\u9650\u5236\u201d\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u7761\u7720\u9650\u5236\u5c31\u662f\u51cf\u5c11\u5367\u5e8a\u65f6\u95f4\uff0c\u4ee5\u589e\u52a0\u7761\u7720\u52a8\u529b\u3002\u5f53\u4f60\u5f00\u59cb\u9650\u5236\u7761\u7720\u65f6\uff0c\u4f60\u8981\u786e\u5b9a\u4f60\u5728\u8fc7\u53bb\u4e00\u5468\u603b\u5171\u7761\u4e86\u591a\u5c11\u89c9\u3002\u5982\u679c\u4f60\u6bcf\u665a\u7684\u5e73\u5747\u7761\u7720\u65f6\u95f4\u7ea6\u4e3a7\u5c0f\u65f6\uff0c\u90a3\u4e48\u4f60\u6700\u521d\u53ea\u67097\u5c0f\u65f6\u7684\u7761\u7720\u65f6\u95f4\u7a97\u53e3\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u5fc5\u987b\u6bcf\u5929\u65e9\u4e0a8\u70b9\u8d77\u5e8a\uff0c\u4f60\u5c31\u4e0d\u5e94\u8be5\u8bd5\u56fe\u5728\u51cc\u66681\u70b9\u4e4b\u524d\u7761\u89c9\u3002\u51cc\u66681\u70b9\u52308\u70b9\u4e4b\u95f4\u76847\u4e2a\u5c0f\u65f6\u88ab\u79f0\u4e3a\u7761\u7720\u7a97\u53e3\u3002\u4f60\u662f\u5426\u7761\u5728\u7a97\u6237\u91cc\u5e76\u4e0d\u91cd\u8981\uff0c\u81f3\u5c11\u5728\u4e00\u5f00\u59cb\u662f\u8fd9\u6837\u3002\u91cd\u8981\u7684\u662f\u4f60\u4e0d\u8981\u7761\u5728\u7a97\u5916\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7761\u7720\u9650\u5236\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u5e94\u8be5\u4e00\u8f88\u5b50\u90fd\u8fd9\u6837\u505a\u3002\u968f\u7740\u60a8\u7684\u8fdb\u6b65\uff0c\u5b83\u4e5f\u4f1a\u53d8\u5f97\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002\u5f53\u4f60\u4e0d\u518d\u82b1\u90a3\u4e48\u591a\u65f6\u95f4\u8bd5\u56fe\u7761\u89c9\u65f6\uff0c\u4f60\u7684\u7761\u7720\u7a97\u53e3\u4f1a\u589e\u52a0\u3002\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u5bfc\u81f4\u65b0\u4f53\u9a8c\u7684\u884c\u4e3a\u53d8\u5316\u662f\u5e26\u6765\u8ba4\u77e5\u53d8\u5316\u7684\u6700\u6709\u529b\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u901a\u8fc7\u9650\u5236\u4f60\u5728\u5e8a\u4e0a\u7684\u65f6\u95f4\u548c\u5efa\u7acb\u4f60\u7684\u7761\u7720\u9a71\u52a8\u529b\uff0c\u4f60\u4f1a\u589e\u5f3a\u8ba9\u4f60\u5165\u7761\u7684\u529b\u91cf\uff0c\u6240\u4ee5\u5b83\u4eec\u6bd4\u8ba9\u4f60\u4fdd\u6301\u6e05\u9192\u7684\u529b\u91cf\u66f4\u5f3a\u5927\u3002\u7761\u7720\u9650\u5236\u7684\u76ee\u7684\u662f\u8ba9\u4f60\u4f53\u9a8c\u4e00\u4e0b\u4e0d\u7528\u62c5\u5fc3\u5c31\u80fd\u7761\u89c9\u7684\u611f\u89c9\u3002\u4f60\u4f1a\u5bf9\u4f60\u7684\u8eab\u4f53\u6709\u80fd\u529b\u81ea\u5df1\u5165\u7761\u800c\u4e0d\u9700\u8981\u8003\u8651\u6240\u6709\u7684\u4e8b\u60c5\u83b7\u5f97\u4fe1\u5fc3\u3002\n\u4f8b\u5982\uff0c\u8bb8\u591a\u5931\u7720\u60a3\u8005\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u5728\u6c99\u53d1\u4e0a\u5165\u7761\u8981\u6bd4\u5728\u5e8a\u4e0a\u5bb9\u6613\u5f97\u591a\u3002\u8fd9\u53ef\u4ee5\u7528\u4e00\u79cd\u53eb\u505a\u7ecf\u5178\u6761\u4ef6\u4f5c\u7528\u7684\u4e1c\u897f\u6765\u89e3\u91ca\uff0c\u8fd9\u662f\u6211\u4eec\u90fd\u80fd\u63a5\u53d7\u7684\u3002\n\u6761\u4ef6\u53cd\u5c04\u662f\u4e00\u79cd\u5c06\u4e00\u4ef6\u4e8b\u4e0e\u53e6\u4e00\u4ef6\u4e8b\u8054\u7cfb\u8d77\u6765\u7684\u5b66\u4e60\u5f62\u5f0f\u3002\u6761\u4ef6\u53cd\u5c04\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u5f53\u4f60\u542c\u5230\u4e00\u9996\u7279\u5b9a\u7684\u6b4c\u66f2\u65f6\uff0c\u8fd9\u9996\u6b4c\u8ba9\u4f60\u611f\u5230\u9ad8\u5174\uff0c\u56e0\u4e3a\u4f60\u628a\u8fd9\u9996\u6b4c\u4e0e\u4e00\u6bb5\u7f8e\u597d\u7684\u65f6\u5149\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\u5f53\u6211\u4eec\u7ecf\u5e38\u96be\u4ee5\u5165\u7761\u548c/\u6216\u4fdd\u6301\u7761\u7720\u65f6\uff0c\u6211\u4eec\u5f00\u59cb\u5c06\u5e8a\u548c\u8bd5\u56fe\u5165\u7761\u4e0e\u8d1f\u9762\u60c5\u7eea\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u6211\u4eec\u56e0\u7761\u4e0d\u7740\u89c9\u800c\u611f\u5230\u6cae\u4e27\u3001\u6124\u6012\u3001\u60b2\u4f24\u548c\u7126\u8651\u3002\u6211\u4eec\u8f97\u8f6c\u53cd\u4fa7\uff0c\u5c3d\u7ba1\u5f88\u7d2f\uff0c\u6211\u4eec\u8fd8\u662f\u7761\u4e0d\u7740\u3002\u5e8a\u548c\u5367\u5ba4\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u79cd\u523a\u6fc0\uff0c\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u6d88\u6781\u7684\u611f\u89c9\u3002\nCBT\u6cbb\u7597\u5931\u7720\u4f7f\u7528\u523a\u6fc0\u63a7\u5236\u6765\u6253\u7834\u5c1d\u8bd5\u7761\u7720\u548c\u8d1f\u9762\u611f\u89c9\u4e4b\u95f4\u7684\u8d1f\u9762\u8054\u7cfb\u3002\u91c7\u7528\u523a\u6fc0\u63a7\u5236\u7684\u4e00\u79cd\u5e38\u89c1\u65b9\u5f0f\u662f\u5236\u5b9a\u4e00\u5957\u7761\u7720\u6307\u5357\u6216\u89c4\u5219\u3002\n\u5982\u679c\u4f60\u7761\u4e0d\u7740\uff0c\u90a3\u5c31\u4ece\u5e8a\u4e0a\u8d77\u6765\u4e00\u4f1a\u513f\uff0c\u7a0d\u540e\u518d\u8bd5\u3002\n\u4e0d\u559d\u5496\u5561\u56e0\uff0c\u6d17\u6fa1\uff0c\u6709\u89c4\u5f8b\u7684\u5c31\u5bdd\u65f6\u95f4\uff0c\u6bcf\u665a\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u4e0a\u5e8a\u7761\u89c9\u3002\u542c\u8d77\u6765\u719f\u6089\u5417\uff1f\u5982\u679c\u4f60\u4e00\u76f4\u7761\u7720\u4e0d\u597d\uff0c\u4f60\u5f88\u6709\u53ef\u80fd\u4ee5\u524d\u542c\u5230\u8fc7\u8fd9\u6837\u7684\u5efa\u8bae\u3002\n\u5173\u4e8eCBT\u6cbb\u7597\u5931\u7720\u7684\u4e00\u4e2a\u5e38\u89c1\u8bef\u89e3\u662f\uff0c\u5b83\u662f\u4f60\u4ee5\u524d\u542c\u8fc7\u7684\u5173\u4e8e\u7761\u7720\u7684\u5efa\u8bae\u3002\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\u7761\u7720\u536b\u751f\u5efa\u8bae\u672c\u8eab\u5e76\u4e0d\u4e00\u5b9a\u6709\u5bb3\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u662f\u6709\u76ca\u7684\u3002\u7136\u800c\uff0c\u51e0\u4e4e\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u7761\u7720\u536b\u751f\u5355\u72ec\u5bf9\u5931\u7720\u75c7\u60a3\u8005\u6709\u5e2e\u52a9\u3002\n\u7761\u7720\u536b\u751f\u5efa\u8bae\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5b83\u7ed9\u4f60\u7684\u5370\u8c61\u662f\uff0c\u5982\u679c\u4f60\u66f4\u52a0\u52aa\u529b\uff0c\u7761\u7720\u662f\u53ef\u4ee5\u63a7\u5236\u7684\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5931\u7720\u53ef\u80fd\u5c31\u4e0d\u5b58\u5728\u4e86\u3002\nCBT\u6cbb\u7597\u5931\u7720\u4e5f\u5305\u62ec\u8fdb\u884c\u884c\u4e3a\u6539\u53d8\uff0c\u4f46\u76ee\u7684\u975e\u5e38\u4e0d\u540c\u3002\u8fd9\u91cc\u7684\u5e72\u9884\u63aa\u65bd\u65e8\u5728\u5e2e\u52a9\u60a8\u8f7b\u677e\u4f53\u9a8c\u7761\u7720\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7761\u7720\u9650\u5236\u52a0\u4e0a\u523a\u6fc0\u63a7\u5236\u6307\u5357\u662fCBT\u6cbb\u7597\u5931\u7720\u6700\u91cd\u8981\u7684\u65b9\u9762\u3002\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u6280\u672f\u4e5f\u53ef\u80fd\u8d77\u5230\u4e00\u5b9a\u4f5c\u7528\u3002\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u5728\u601d\u7ef4\u4e0a\u8d70\u6377\u5f84\u7684\u503e\u5411\u3002\u8d70\u6377\u5f84\u548c\u5feb\u901f\u601d\u8003\u5927\u591a\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u5982\u679c\u6211\u4eec\u5fc5\u987b\u628a\u4e8b\u60c5\u60f3\u900f\uff0c\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u52aa\u529b\u610f\u8bc6\u5230\u6bcf\u4e00\u4e2a\u60f3\u6cd5\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u592a\u591a\u7684\u65f6\u95f4\u505a\u5176\u4ed6\u7684\u4e8b\u60c5\u3002\n\u7136\u800c\uff0c\u6709\u65f6\u601d\u8003\u5f97\u592a\u5feb\uff0c\u8349\u7387\u4e0b\u7ed3\u8bba\u53ef\u80fd\u4f1a\u53d8\u5f97\u65e0\u6d4e\u4e8e\u4e8b\u3002\u601d\u60f3\u53d7\u5230\u6211\u4eec\u7684\u611f\u53d7\u548c\u6211\u4eec\u8fc7\u53bb\u7ecf\u5386\u7684\u4e8b\u60c5\u7684\u5f71\u54cd\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u53d7\u5230\u8ba4\u77e5\u504f\u5dee\u7684\u5f71\u54cd--\u8fd9\u53ea\u662f\u6211\u4eec\u503e\u5411\u4e8e\u8d70\u7684\u4e0d\u540c\u6377\u5f84\u7684\u53e6\u4e00\u79cd\u8bf4\u6cd5\u3002\u6709\u5f88\u591a\u4e0d\u540c\u7684\u8ba4\u77e5\u504f\u5dee\uff0c\u4f46\u5b83\u4eec\u90fd\u8ba9\u6211\u4eec\u7684\u601d\u60f3\u66f4\u52a0\u504f\u79bb\u73b0\u5b9e\uff0c\u626d\u66f2\u4e86\u6211\u4eec\u770b\u5f85\u4e16\u754c\u7684\u65b9\u5f0f\u3002\u4e00\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\u662f\u786e\u8ba4\u504f\u5dee--\u4e00\u79cd\u8fc7\u6ee4\u4fe1\u606f\uff0c\u53ea\u6ce8\u610f\u786e\u8ba4\u6211\u4eec\u5df2\u7ecf\u76f8\u4fe1\u662f\u771f\u7684\u4e1c\u897f\u7684\u503e\u5411\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u6211\u4eec\u653e\u6162\u811a\u6b65\uff0c\u8ba9\u6211\u4eec\u81ea\u5df1\u771f\u6b63\u505a\u4e00\u4e9b\u4e8b\u60c5\u6765\u6539\u53d8\u8fd9\u4e9b\u504f\u89c1\u548c\u6b6a\u66f2\u7684\u601d\u7ef4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u8ba4\u77e5\u91cd\u7ec4\u7684\u4e1c\u897f\u3002\u8fd9\u9879\u6280\u672f\u5305\u62ec\u8bc6\u522b\u60c5\u666f\u4e2d\u7684\u60f3\u6cd5\uff0c\u8fd9\u4e9b\u60f3\u6cd5\u4e4b\u540e\u662f\u4ec0\u4e48\u60c5\u7eea\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u60c5\u7eea\u6709\u591a\u5f3a\u70c8\u3002\u901a\u8fc7\u628a\u5b83\u4eec\u5199\u6210\u53e5\u5b50\uff0c\u6211\u4eec\u8feb\u4f7f\u6211\u4eec\u7684\u5927\u8111\u8db3\u591f\u6162\u4e0b\u6765\uff0c\u4ee5\u6293\u4f4f\u6211\u4eec\u6709\u504f\u89c1\u7684\u601d\u7ef4\u65b9\u5f0f\u3002\n\u73b0\u5728\u662f\u51cc\u66682\u70b9\uff0c\u4e54\u6cbb\u53c8\u7761\u4e0d\u7740\u89c9\u3002\u4ed6\u611f\u89c9\u5230\u81ea\u5df1\u7684\u60c5\u7eea\u53d1\u751f\u4e86\u53d8\u5316--\u4ed6\u7ad9\u8d77\u6765\uff0c\u5750\u5728\u9910\u684c\u65c1\uff0c\u5f00\u59cb\u7528\u601d\u7ef4\u8bb0\u5f55\u4ee5\u4e00\u79cd\u6709\u6761\u7406\u7684\u65b9\u5f0f\u8bb0\u5f55\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\n\u6211\u60f3\u5982\u679c\u6211\u4e0d\u5feb\u70b9\u7761\u89c9\uff0c\u660e\u5929\u5c31\u4f1a\u4e00\u56e2\u7cdf\u3002\u6211\u5f00\u4f1a\u65f6\u6839\u672c\u4e0d\u80fd\u96c6\u4e2d\u6ce8\u610f\u529b\u3002\n\u4e0b\u4e00\u6b65\u662f\u68c0\u67e5\u8fd9\u4e9b\u60f3\u6cd5\uff0c\u770b\u770b\u662f\u5426\u6709\u4e0d\u540c\u7684\u3001\u66f4\u6709\u5e2e\u52a9\u7684\u770b\u5f85\u4e8b\u7269\u7684\u65b9\u5f0f\u3002\u4e54\u6cbb\u88ab\u6559\u5bfc\u5728\u505a\u8fd9\u4ef6\u4e8b\u65f6\u8981\u95ee\u81ea\u5df1\u4e00\u4e9b\u95ee\u9898\uff1a\n\u662f\u7684\uff0c\u6211\u662f\u8981\u7d2f\u4e86\uff0c\u4f46\u662f\u6211\u603b\u662f\u8bbe\u6cd5\u71ac\u8fc7\u5de5\u4f5c\u65e5\uff0c\u5373\u4f7f\u6211\u7684\u7761\u7720\u4e0d\u597d\u3002\n\u6211\u5df2\u7ecf\u548c\u6211\u7684\u533b\u751f\u8c08\u8fc7\u8fd9\u4ef6\u4e8b\uff0c\u6700\u8fd1\u505a\u4e86\u4e00\u6b21\u5168\u9762\u7684\u4f53\u68c0\uff0c\u7ed3\u679c\u53d1\u73b0\u6211\u7684\u5065\u5eb7\u72b6\u51b5\u975e\u5e38\u597d\u3002\n\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u5230\uff0c\u62c5\u5fc3\u7761\u7720\u662f\u5bfc\u81f4\u5931\u7720\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\u4f46\u662f\u5bf9\u4e8e\u8bb8\u591a\u5931\u7720\u7684\u4eba\u6765\u8bf4\uff0c\u62c5\u5fc3\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e\u7761\u7720\uff0c\u5904\u7406\u7126\u8651\u7684\u4e00\u822c\u65b9\u6cd5\u53ef\u80fd\u662f\u6709\u76ca\u7684\u3002\n\u5c31\u50cf\u7761\u7720\u4e00\u6837\uff0c\u5fe7\u8651\u4e5f\u4e0d\u662f\u771f\u6b63\u53ef\u4ee5\u63a7\u5236\u7684\u3002\u4f60\u65e0\u6cd5\u963b\u6b62\u8111\u6d77\u4e2d\u7a81\u7136\u5192\u51fa\u7684\u60f3\u6cd5\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u6539\u53d8\u4f60\u5bf9\u5b83\u4eec\u7684\u53cd\u5e94\u3002\n\u6539\u53d8\u4f60\u5bf9\u60f3\u6cd5\u7684\u53cd\u5e94\u65b9\u5f0f\u53ef\u80fd\u662f\u4e00\u4e2a\u5947\u602a\u7684\u6982\u5ff5\uff0c\u4f46\u4f60\u5bf9\u4e00\u4e9b\u60f3\u6cd5\u7684\u53cd\u5e94\u5df2\u7ecf\u4e0e\u5176\u4ed6\u60f3\u6cd5\u4e0d\u540c\u4e86\u3002\u4f60\u6bcf\u5929\u90fd\u6709\u6210\u5343\u4e0a\u4e07\u7684\u60f3\u6cd5\u3002\u6709\u4e9b\u4f60\u4e0d\u592a\u6ce8\u610f\uff0c\u6709\u4e9b\u4f60\u7559\u604b\u3002\u6211\u4eec\u90fd\u503e\u5411\u4e8e\u8ba4\u4e3a\u67d0\u4e9b\u60f3\u6cd5\u6bd4\u5176\u4ed6\u60f3\u6cd5\u66f4\u91cd\u8981\uff0c\u9700\u8981\u5173\u6ce8\u3002\u4f46\u5b83\u4eec\u672c\u8d28\u4e0a\u90fd\u662f\u4e00\u4ef6\u4e8b--\u53ea\u662f\u60f3\u6cd5\u3002\n\u901a\u5e38\uff0c\u6211\u4eec\u4e0d\u4f1a\u6ce8\u610f\u5230\u81ea\u5df1\u4f1a\u5bf9\u62c5\u5fe7\u505a\u51fa\u53cd\u5e94\uff0c\u800c\u4e14\u5927\u591a\u6570\u65f6\u5019\uff0c\u8fd9\u90fd\u662f\u81ea\u52a8\u53d1\u751f\u7684\u3002\u5f53\u6d89\u53ca\u5230\u4e2a\u4eba\u60f3\u6cd5\u65f6\uff0c\u8981\u505c\u4e0b\u6765\u5f00\u59cb\u79ef\u6781\u9009\u62e9\uff0c\u6211\u4eec\u9700\u8981\u8bad\u7ec3\u6211\u4eec\u4ece\u9e1f\u77b0\u7684\u89d2\u5ea6\u770b\u5f85\u81ea\u5df1\u7684\u60f3\u6cd5\u7684\u80fd\u529b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b63\u5ff5\u662f\u7528\u6765\u505a\u8fd9\u4ef6\u4e8b\u7684\uff0c\u4f46\u4e5f\u6709\u4e13\u95e8\u7684\u6ce8\u610f\u529b\u8bad\u7ec3\u7ec3\u4e60\uff0c\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u7528\u58f0\u97f3\u6765\u5207\u6362\u4f60\u7684\u6ce8\u610f\u529b\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u4f60\u9700\u8981\u610f\u8bc6\u5230\u62c5\u5fe7\uff0c\u624d\u80fd\u505a\u70b9\u4ec0\u4e48\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u51e0\u79cd\u65b9\u5f0f\u6765\u5e94\u5bf9\u62c5\u5fe7--\u6700\u76f4\u63a5\u7684\u5f00\u59cb\u65b9\u5f0f\u5c31\u662f\u63a8\u8fdf\u62c5\u5fe7\u3002\u8fd9\u662f\u901a\u8fc7\u6ce8\u610f\u767d\u5929\u62c5\u5fc3\u7684\u60f3\u6cd5\u5e76\u628a\u5b83\u4eec\u5199\u4e0b\u6765\u6765\u5b9e\u73b0\u7684\u3002\u4f60\u4e0d\u662f\u9a6c\u4e0a\u53bb\u60f3\u8fd9\u4e9b\u60f3\u6cd5\uff0c\u800c\u662f\u7ec3\u4e60\u63a8\u8fdf\u5bf9\u8ba1\u5212\u597d\u7684\u62c5\u5fe7\u65f6\u95f4\u7684\u56de\u5e94\u3002\n\u5728\u4f60\u62c5\u5fc3\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u4ed4\u7ec6\u770b\u4e00\u904d\u4f60\u4e00\u5929\u4e2d\u7684\u62c5\u5fc3\u6e05\u5355\uff0c\u7136\u540e\u51b3\u5b9a\u4f60\u60f3\u8981\u5982\u4f55\u5e94\u5bf9\u3002\u5982\u679c\u8fd9\u79cd\u62c5\u5fc3\u662f\u4f60\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u7684\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u6bb5\u65f6\u95f4\u6765\u5236\u5b9a\u4e00\u4e2a\u8ba1\u5212\u3002\u5982\u679c\u8fd9\u662f\u4e00\u79cd\u4f60\u65e0\u80fd\u4e3a\u529b\u7684\u62c5\u5fe7(\u5927\u591a\u6570\u90fd\u662f)\u3002\u55ef\uff0c\u90a3\u4f60\u5c31\u4ec0\u4e48\u90fd\u522b\u505a\u4e86\u3002\u4f60\u53ea\u662f\u8ba9\u4ed6\u4eec\u5446\u5728\u90a3\u91cc\uff0c\u800c\u4e0d\u4e0e\u4ed6\u4eec\u6253\u4ea4\u9053\u3002\n\u7f8e\u56fd\u7761\u7720\u533b\u5b66\u5b66\u4f1a\u3001\u7f8e\u56fd\u533b\u5e08\u5b66\u4f1a\u548c\u6b27\u6d32\u7761\u7720\u7814\u7a76\u534f\u4f1a\u5df2\u7ecf\u53d1\u5e03\u4e86\u5982\u4f55\u6cbb\u7597\u5931\u7720\u7684\u6307\u5357\u3002\u4ed6\u4eec\u90fd\u7814\u7a76\u4e86\u5173\u4e8e\u8fd9\u4e00\u4e3b\u9898\u7684\u5927\u91cf\u7814\u7a76\uff0c\u5e76\u90fd\u5efa\u8baeCBT\u6cbb\u7597\u5931\u7720\u5e94\u8be5\u662f\u4e00\u7ebf\u6cbb\u7597(Morgenthaler\u7b49\u4eba\uff1bQaseem\u7b49\u4eba\uff1bRiemann\u7b49\u4eba)\u3002\nCBT\u4f7f\u7528\u5177\u6709\u81ea\u52a8\u652f\u6301\u548c\u793e\u533a\u8bba\u575b\u7684\u5bcc\u5a92\u4f53\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\uff0c\u5728\u6539\u5584\u60a3\u6709\u5931\u7720\u969c\u788d\u7684\u6210\u5e74\u4eba\u7684\u7761\u7720\u548c\u76f8\u5173\u65e5\u95f4\u529f\u80fd\u65b9\u9762\u662f\u6709\u6548\u7684(Espie\u7b49\u4eba)\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eCBTI\u548c\u5176\u4ed6\u884c\u4e3a\u7597\u6cd5\u6539\u5584\u7761\u7720\u7684\u6280\u672f\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\uff01\n\u7231\u5c14\u5170\u4eba\uff0cLeah A.\u7b49\u4eba\u3002\u201c\u7761\u7720\u536b\u751f\u5728\u4fc3\u8fdb\u516c\u5171\u5065\u5eb7\u4e2d\u7684\u4f5c\u7528\uff1a\u7ecf\u9a8c\u8bc1\u636e\u7684\u56de\u987e\u3002\u201d\u201c\u7761\u7720\u533b\u5b66\u201d\uff0c2015\u5e748\u6708\u7248\uff0c\u7b2c22\uff1a23-36\u9875\u3002\n\u6469\u6839\u5854\u52d2\u3001\u8482\u83ab\u897f\u7b49\u4eba\u3002\u201c\u5931\u7720\u5fc3\u7406\u548c\u884c\u4e3a\u6cbb\u7597\u7684\u5b9e\u8df5\u53c2\u6570\uff1a\u6700\u65b0\u8fdb\u5c55\u201d\u3002\u4e00\u4efd\u7f8e\u56fd\u7761\u7720\u533b\u5b66\u5b66\u4f1a\u7684\u62a5\u544a\u3002\u201c\u3002\u7761\u5427\uff0c\u6c83\u5c14\u300229\uff0c\u7b2c11\u671f\uff0c2006\u5e7411\u6708\uff0c\u7b2c1415-19\u9875\u3002\nQaseem\u3001Amir\u7b49\u4eba\u7684\u7814\u7a76\u6210\u679c\u3002\u201c\u6210\u4eba\u6162\u6027\u5931\u7720\u75c7\u7684\u7ba1\u7406\uff1a\u7f8e\u56fd\u533b\u5e08\u5b66\u4f1a\u7684\u4e34\u5e8a\u5b9e\u8df5\u6307\u5357\u3002\u201d\u201c\u5185\u79d1\u533b\u5b66\u5e74\u9274\u201d\uff0c\u7b2c\u4e00\u5377\u3002165\uff0c\u7b2c2\u671f\uff0c2016\u5e747\u6708\uff0c\u7b2c125-33\u9875\u3002\nRiemann\uff0cDieter\u7b49\u4eba\u3002\u201c\u6b27\u6d32\u5931\u7720\u8bca\u65ad\u548c\u6cbb\u7597\u6307\u5357\u201d\u7761\u7720\u7814\u7a76\u6742\u5fd7\uff0c\u7b2c\u4e00\u5377\u300226\uff0c\u7b2c6\u671f\uff0c2017\u5e7412\u6708\uff0c\u7b2c675-700\u9875\u3002\n\u7279\u52b3\u5c14\uff0c\u8a79\u59c6\u65af\u00b7M\u7b49\u4eba\u3002\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\u6cbb\u7597\u6162\u6027\u5931\u7720\uff1a\u4e00\u9879\u7cfb\u7edf\u56de\u987e\u548c\u835f\u8403\u5206\u6790\u3002\u5b9e\u4e60\u533b\u751f\u30022015\u5e748\u6708163(3)\uff1a191-204", "note_en": "For years, Cognitive Behavioral Therapy (CBT) has been the gold standard for treating insomnia. CBT techniques for insomnia have been proven to work in numerous clinical trials and are more effective than medication.\n The American Academy for Sleep Medicine, the American College of Physicians, and the European Sleep Research Society all recommend CBT for insomnia (CBT-I) as first-line treatment.\n This guide takes about 15-20 minutes to read. Here&#39;s a quick overview so you can decide if reading the full guide is worth your time.\n   CBT is a form of therapy that was initially developed as a treatment for depression. The Cognitive in CBT refers to mental activity, such as thoughts, beliefs, memories, images or values. The behavioral part includes all the things we do on a daily basis. This can be things you do with others or things you do alone.\n CBT saw it&#39;s beginning when the American psychiatrist Aaron T. Beck (and others) noticed a pattern of thinking that was common for many clients with depression. Not very impressed with the result of traditional therapies, they wanted to address these issues with a more straightforward and direct approach. And so Cognitive Behavioral Therapy was born.\n  A core principle in CBT is that our emotional reactions and behaviors are influenced by how we think about ourselves, others, and the world around us. Humans have a great capacity for thinking, but that requires time and energy. Most of the time, we take mental shortcuts and react to events that happen without giving them much thought. These shortcuts, or cognitive biases, often lead us to interpret and process information inaccurately.\n If you ask two people to give a presentation on something they are both knowledgeable about, you might get two different reactions. One is hesitant and suggests someone else. The other immediately and enthusiastically agrees. It&#39;s the exact same situation. So why do they react so differently?\n CBT explains that this difference in emotional reactions and behaviors comes from different ways of thinking about the situation. One thinks he might start to shake and others will notice. The other one thinks that this is a good opportunity to share his knowledge.\n     CBT proposes that it\u2019s not the  situation that makes us feel something, but the  thoughts about that situation.\n  Changing what you do is often the most powerful way of changing how you think and feel about something. The behavioral part in CBT is about testing new behaviors and learning what happens when you gain new experiences.\n If you always avoid giving presentations, you will never experience a successful one. Your negative thoughts about yourself in that situation will never change. A common unhelpful belief that people have when speaking to a crowd is that they will get anxious, start to shake, and the audience will see that as a sign of weakness.\n To target the cognition that shaking is a sign of weakness, CBT uses something called a behavioral experiment. In these kinds of experiments, the goal is to get real experiences about what happens if you shake and if it&#39;s true that other people will react negatively to this. A typical behavioral experiment might be to videotape yourself talking in front of a crowd. When viewing the video afterward, try to notice the level of shaking and what reaction the group had to this. Most likely, you will see that your shaking was barely noticeable, and those who were listening didn&#39;t react at all.\n  Therapy involves changing how you feel about something. Whether it is to achieve a goal or to stop being anxious or sad \u2014 it&#39;s all about changing emotions. Now, this is hard to do directly. We have little control over our emotions; they will pop up whether you like it or not. CBT aims to change how you feel about something through our thoughts (cognitions) and behaviors.\n  We can draw CBT&#39;s approach as a triangle because each element is linked together. The way you think affects your behavior, the way you feel affects the way you think, the way you feel affects your behavior, etc.\n To make change happen, we either change how we think about something or the way we react to something or better yet \u2014 both at the same time.\n  CBT has been used by thousands of therapists and millions of patients from all over the world since the 1960s. Since then, different CBT approaches have been developed for a wide range of problems, and research has repeatedly shown its effectiveness. It\u2019s common to talk about CBT as a specific kind of therapy, but in reality there are many models of cognitive behavioral therapies.\n   CBT helps with unhelpful thinking and behavior, but how it is used to treat insomnia isn\u2019t obvious. To illustrate how insomnia is caused by cognitions and how CBT can help you sleep, let\u2019s use two fictional people who represent two different ways of experiencing sleep. Meet George who has insomnia and Susan who doesn\u2019t.\n  George has had insomnia for a long time. Over the years he\u2019s had many sleepless nights, spent tossing and turning and waiting for sleep. George&#39;s insomnia has been getting worse lately and he frequently wakes up in the middle of the night and can&#39;t get back to sleep. For the last couple of months, he hasn\u2019t been getting more than 4 or 5 hours of sleep each night.\n  Susan has always been a good sleeper. She always falls asleep within fifteen minutes of going to bed and wakes up feeling refreshed. Susan doesn\u2019t really think much about sleep, it\u2019s just something that happens when she goes to bed.\n  What may not be obvious but separates George from Susan, is that they have very different beliefs about sleep. They experience precisely the same situation each night; they both go to bed and try to sleep. Their thoughts and feelings in this situation, are very different.\n George worries that it&#39;s going to be another night of sleeplessness and that he will be dead tired at work the following day. He thinks about how a lack of sleep might damage his body and wonders if he will ever sleep well again. The minute his head hits the pillow, he&#39;s wide awake. His mind races and he starts feeling anxious and upset. He&#39;s exhausted but can&#39;t seem to fall asleep. After spending quite a bit of time unsuccessfully trying to sleep, he pulls out his phone and listens to a podcast to distract himself. He finally falls asleep a few hours before he has to get up for work.\n Susan goes to bed and doesn&#39;t think much about it at all. She is fast asleep fifteen minutes after she turns off the lights.\n  George\u2019s sleep problems started when the company he was working for experienced financial trouble and had to downsize. He worried about losing his job and not being able to afford rent. George found that he became preoccupied with thoughts of worry most of the day and even more as nighttime approached and it was time to sleep. He tried, as most do when facing problems in life, to think his way out of it. After a while, George noticed that his sleep was getting worse. It frequently took a long time to fall asleep, and he often woke up multiple times every night.\n Fortunately, George didn\u2019t lose his job. The company is now doing fine, and he doesn\u2019t worry about it anymore, but he\u2019s still struggling with sleep.\n George\u2019s story is typical when it comes to insomnia. It&#39;s common that some initial stressful life event sets it off, but the problems persist even when the stressor has resolved. It is notable that the event that causes insomnia in the first place varies, but when insomnia has been established, people begin to behave and think the same way.\n CBT does not concern itself much with what initially caused George&#39;s insomnia. Instead, it focuses on the thoughts, feelings, and behaviors that maintain it. In George&#39;s case, we can see a pattern of him worrying a lot about sleep and the consequences of not getting enough. After a while, he starts to associate the bed with feelings of frustration and anxiety.\n When George&#39;s thoughts constantly revolve around sleep and the consequences of him not getting enough, his mind will interpret this as a threat. The brain&#39;s threat detection system doesn&#39;t make the distinction between thinking about a threat or actually experiencing one. It does what it\u2019s supposed to do and tells the body to get prepared for the threat.\n When the brain signals the body to get ready, the body reacts immediately. It goes into a state of arousal where the main goal is to be prepared to handle anything. Arousal is, in many ways, a state that is the opposite of sleeping. Your heart beats a little faster, your breathing starts to increase in frequency. Pupils dilate, and you are more vigilant. Because the brain believes you are in danger, you go into a mild form of fight-or-flight mode where your senses are heightened, and muscles are ready to spring into action.\n The most convincing and compelling way of learning that a previously held belief is false is experiencing the opposite. George has the view that he has to put in a lot of effort to get to sleep. A goal of CBT for insomnia is going to sleep without thinking or worrying too much about it. We want George to be more like Susan and experience falling asleep without effort, and as a result, learn that he can fall asleep easily without thinking too much about it. To help people get this valuable experience, CBT for insomnia uses something called sleep restriction.\n  When people who struggle with sleep hear about sleep restriction the first time, they immediately think it&#39;s counterintuitive. Why should you restrict your sleep when you want more of it?\n To answer this question, we need to learn about sleep drive. Sleep drive is the force that makes you sleepy when you have been awake for a long time. To measure how strong your sleep drive is, the body uses a hormone called adenosine. The moment you wake up in the morning, the body starts producing adenosine. When the brain detects high enough levels, it starts shutting off wake-promoting areas in the brain, and you get sleepy. The longer you stay awake, the more adenosine the body produces, and your sleep drive increases.\n The name sleep restriction is a bit misleading, and it could just as well have been called time-in-bed restriction. Sleep restriction is, in essence, spending less time in bed to increase the sleep drive. When starting with sleep restriction, you determine how much sleep you have been getting in total for the last week. If you have been getting an average of about 7 hours of sleep each night, you get an initial 7 hour window of time to sleep. This means that if you have to get up at 8 am each morning, you shouldn&#39;t try to sleep before 1 am. The 7 hours between 1 am and 8 am is called your sleep window. Whether you sleep or not in your window is not important, at least in the beginning. What is important is that you do not sleep outside of your sleep window.\n It&#39;s important to note that sleep restriction isn&#39;t meant as something you should do for the rest of your life. It also gets a little easier as you progress. Your sleep window will increase when you stop spending so much time trying to sleep.\n As previously mentioned, behavioral changes that lead to new experiences are amongst the most powerful methods for bringing about change in cognitions. By restricting your time in bed and building your sleep drive, you will strengthen the forces that make you sleep, so they are stronger than the forces that keep you awake. Sleep restriction aims to get you to experience what it&#39;s like to sleep without worrying about it. You gain confidence in your body&#39;s ability to go to sleep on its own without you having to think about it all.\n  Many people who suffer from insomnia report that they have a much easier time falling asleep on their couch, for example, than in their bed. This can be explained with something called classical conditioning, which we are all receptive to.\n Conditioning is a form of learning by associating one thing to another. An example of being conditioned is when you hear a particular song and the song makes you happy because you associate the song with a good time.\n When we have regular problems falling asleep and or staying asleep, we begin to associate the bed and trying to sleep with negative emotions. We get frustrated, angry, sad and anxious about not sleeping. We toss and turn, and despite being tired, we can&#39;t get to sleep. The bed and bedroom can become a stimulus that we associate with negative feelings.\n CBT for insomnia uses stimulus control to break the negative association between trying to sleep and negative feelings. A common way to employ stimulus control is by having a set of guidelines or rules for sleep.\n  If you can&#39;t sleep, get out of bed for a while and try again later.\n  &#34;Avoid caffeine, take a shower, have a bedtime routine, get to bed at the same time each night.&#34; Sounds familiar? Chances are high that you have heard advice like this before if you&#39;ve been having trouble sleeping.\n A common misconception about CBT for insomnia is that it&#39;s advice about sleep that you have heard before. Sleep hygiene recommendations like the above ones aren&#39;t necessarily harmful on their own and can be beneficial in some situations. There is, however, little evidence that sleep hygiene alone helps people with insomnia.\n A problem with sleep hygiene advice is that it gives you the impression that sleep is something you can control if you try harder. If this were the case, insomnia probably wouldn\u2019t exist.\n CBT for insomnia involves making behavioral changes too, but with a very different intent. Here the interventions are designed to help you experience sleep without any effort.\n  Sleep restriction coupled with guidelines for stimulus control is by far the most important aspect of CBT for insomnia. There are also other techniques that may play a part.\n  As mentioned earlier, we have a tendency to take shortcuts in our thinking. Taking shortcuts and thinking fast is mostly a good thing. If we had to think things through and make an effort to be conscious of every thought, in every situation, we wouldn&#39;t have much time for anything else.\n However, there are times when thinking fast, and jumping to conclusions can become unhelpful. Thoughts are influenced by how we feel and the things we have experienced in the past. We are susceptible to something called cognitive biases \u2013 which is just another word for the different shortcuts we tend to take. There are a lot of different cognitive biases, but they all make our thoughts stray further from reality and distort how we see the world. A classic example is confirmation bias \u2013 the tendency to filter information and only notice what confirms what we already believe to be true.\n To help us slow down and put ourselves in a position to actually do something about these biases and skewed thinking, we can use something called cognitive restructuring. This technique involves identifying thoughts in a situation, what emotions follow these thoughts, and how strong these emotions are. By writing them down as sentences, we force our minds to slow down enough to catch our biased way of thinking.\n  It&#39;s 2 am, and George is again failing to sleep. He feels his mood change \u2013 he gets up and sits down at the dinner table and starts to write down what is happening in a structured manner using a thought record. It looks something like this:\n  Thoughts If I don&#39;t sleep soon, I&#39;m going to be a mess tomorrow. I won&#39;t be able to concentrate at all during my meeting.\n   The next step is to examine these thoughts and see if there are different, more helpful ways of seeing things. George has been taught to ask himself some questions when doing this:\n   Discussion Yes, I&#39;m going to be tired, but I have always managed to get through the workday, even when my sleep has been terrible.\n I have talked to my doctor about this and recently had a full physical exam, and I was found to be in excellent health.\n    We have already learned that worrying about sleep is a factor that sustains insomnia. But for many with insomnia, worry isn&#39;t just limited to sleep, and a general approach for handling worry might be beneficial.\n Like sleep, worry can&#39;t really be controlled. You can&#39;t stop thoughts from popping up in your head. But you can change how you react to them.\n Changing how you respond to thoughts can be a strange concept, but you already react to some thoughts differently than others. You have thousands of thoughts every day. Some you don&#39;t pay much attention to, and some you dwell on. We all tend to think some thoughts are more important than others and require attention. But they are all essentially the same thing \u2013 just thoughts.\n Usually, we don&#39;t notice ourselves responding to worry, and most of the time, this just happens automatically. To pause and start making active choices when it comes to individual thoughts, we need to train our ability to take a birds-eye perspective on our thoughts. Typically mindfulness is used for this, but also specific attention training exercises where you, for example, train on switching your attention with sounds.\n The idea is that you need to become aware of worry to do something about it. There are several ways you can respond to worry - the most straightforward way to start is by postponing worry. This works by noticing thoughts of worry during the day and writing them down. Instead of engaging with these thoughts right away, you practice delaying the response to a planned &#34;worry time.&#34;\n In your worry time, you go through your list of worries during the day and decide how you want to respond. If the worry is something you can do something about, you use the time to make a plan. If it&#39;s the kind of worry that you can&#39;t do something about (most of them are). Well, then you don&#39;t do anything about it. You just let them be there without engaging with them.\n  The American Academy for Sleep Medicine, the American College of Physicians and the European Sleep Research Society have published guidelines on how to treat insomnia. They have all looked at the tremendous amount of research available on the subject and all recommend that CBT for insomnia should be first-line treatment (Morgenthaler et al.; Qaseem et al.; Riemann et al.).\n CBT delivered using a media-rich web application with automated support and a community forum is effective in improving the sleep and associated daytime functioning of adults with insomnia disorder (Espie et al.).\n  If you&#39;d like to know more about CBTI and other behavioral therapy techniques to improve sleep, check out our  website!\n   Irish, Leah A., et al. \u201cThe role of sleep hygiene in promoting public health: A review of empirical evidence.\u201d Sleep Med Rev. August 2015 pp. 22:23-36.\n Morgenthaler, Timothy, et al. \u201cPractice Parameters for the Psychological and Behavioral Treatment of Insomnia: An Update. An American Academy of Sleep Medicine Report.\u201d Sleep, vol. 29, no. 11, November 2006, pp. 1415\u201319.\n Qaseem, Amir, et al. \u201cManagement of Chronic Insomnia Disorder in Adults: A Clinical Practice Guideline From the American College of Physicians.\u201d Annals of Internal Medicine, vol. 165, no. 2, July 2016, pp. 125\u201333.\n Riemann, Dieter, et al. \u201cEuropean Guideline for the Diagnosis and Treatment of Insomnia.\u201d Journal of Sleep Research, vol. 26, no. 6, Dec. 2017, pp. 675\u2013700.\n Trauer, James M. et al. \u201c Cognitive Behavioral Therapy for Chronic Insomnia: A Systematic Review and Meta-analysis. Ann Intern Med. August 2015 163(3) : 191-204", "posttime": "2020-05-25 22:43:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,behavioral,\u7761\u7720", "title": "\u5931\u7720\u7684\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5", "title_en": "Cognitive Behavioral Therapy for Insomnia", "transed": 1, "url": "https://www.sleepedy.com/cbt-for-insomnia/", "via": "", "real_tags": ["\u8ba4\u77e5", "\u7761\u7720"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003685, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u90a3\u4e9b\u957f\u671f\u9605\u8bfbSoylentNews\u7684\u4eba\u6765\u8bf4\uff0c\u6211\u4e2a\u4eba\u5bf9\u590d\u53e4\u8ba1\u7b97\u548c\u8bb0\u5f55\u4e2a\u4eba\u8ba1\u7b97\u673a\u7684\u5386\u53f2\u548c\u6f14\u53d8\u611f\u5174\u8da3\u5e76\u4e0d\u662f\u4ec0\u4e48\u79d8\u5bc6\u3002\u5927\u7ea6\u4e09\u5e74\u524d\uff0c\u6211\u53d1\u8868\u4e86\u4e00\u7cfb\u5217\u5173\u4e8e\u6062\u590dXenix 2.2.3c\u7684\u6587\u7ae0\uff0c\u6211\u65e9\u5c31\u5e94\u8be5\u5199\u4e00\u7bc7\u65b0\u7684\u4e86\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4ece\u4e8b\u4efb\u4f55\u7f16\u7a0b\u5de5\u4f5c\u7684\u4eba\u6765\u8bf4\uff0c\u60a8\u8fd8\u5c06\u719f\u6089\u201cHello World\u201d\uff0c\u8fd9\u662f\u5927\u591a\u6570(\u5982\u679c\u4e0d\u662f\u5168\u90e8)\u7a0b\u5e8f\u5458\u5728\u5176\u804c\u4e1a\u751f\u6daf\u4e2d\u7f16\u5199\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002\n\u6700\u8fd1\uff0c\u6211\u53d7\u5230\u542f\u53d1\uff0c\u7814\u7a76\u4e86Windows 1.0\u7248\u7684\u539f\u7248HELLO.C\uff0c\u8fd9\u662f\u4e00\u4e2a125\u884c\u7684\u5e9e\u7136\u5927\u7269\uff0c\u4eba\u4eec\u7528\u6c89\u9ed8\u7684\u8bed\u6c14\u8c08\u8bba\u5b83\u3002\u4e3a\u6b64\uff0c\u6211\u5728YouTube\u4e0a\u5f55\u5236\u4e86\u4e00\u6bb5\u89c6\u9891\uff0c\u8ba9\u4eba\u4eec\u4e86\u89e3Windows1.0\u7684\u7f16\u7a0b\u4e16\u754c\uff0c\u7136\u540e\u6d4b\u8bd5Windows\u5230Windows10\u7684\u5411\u540e\u517c\u5bb9\u6027\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u592a\u559c\u6b22\u770b\u89c6\u9891\u7684\u4eba\uff0c\u6211\u5bf9\u8fd9\u6bb5\u7ecf\u5386\u7684\u8bc4\u4ef7\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u8be5\u6587\u4ef6\u7684\u6ce8\u91ca\u7248\u672c\u53ef\u4ee5\u5728giHub(https://github.com/NCommander/win1-hello-world-annotations))\u4e0a\u627e\u5230\u3002\n\u4e0d\u8fc7\uff0c\u5728\u6211\u4eec\u5f00\u59cb\u8ba8\u8bbaHELLO.C\u4e4b\u524d\uff0c\u5173\u4e8e\u8fd9\u4e9b\u53e4\u8001\u7248\u672c\u7684Windows\u8fd8\u6709\u5f88\u591a\u8981\u8bf4\u7684\u3002\u50cf\u6240\u670995\u4e4b\u524d\u7684\u7248\u672c\u4e00\u6837\uff0cWindows1.0\u9700\u8981\u9884\u88c5DOS\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u7279\u5b9a\u7248\u672c\u7684Windows\u6709\u4e00\u4e2a\u5947\u602a\u4e4b\u5904\uff0c\u90a3\u5c31\u662f\u5f53\u5b83\u5728\u4efb\u4f55\u9ad8\u4e8eDOS 3.3\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u65f6\u90fd\u4f1a\u5d29\u6e83\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u4e8e\u53ef\u4ee5\u4f7f\u7528SETVER\u89e3\u51b3\u7684\u5185\u90e8\u7248\u672c\u68c0\u67e5\u3002\u7136\u800c\uff0c\u5373\u4f7f\u7ed5\u8fc7\u4e86\u8fd9\u4e2a\u7248\u672c\u68c0\u67e5\uff0c\u636e\u8bf4\u8fd0\u884cCOMMAND.COM\u4e5f\u5b58\u5728\u4e00\u4e9b\u5df2\u77e5\u7684\u95ee\u9898\u3002\u4e3a\u4e86\u51cf\u5c11\u6f5c\u5728\u7684\u4ee4\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u6211\u51b3\u5b9a\u7b80\u5355\u5730\u5b89\u88c5PC-DOS 3.3\uff0c\u7136\u540e\u7ed9Windows\u5b83\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u6ca1\u6709\u8bf4\u5fae\u8f6fDOS 3.3\u3002\u539f\u56e0\u662fDOS\u5728\u5f53\u65f6\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4ea7\u54c1\u5b58\u5728\u7684\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u7cfb\u7edf\u5efa\u9020\u5546\u5c06\u6388\u6743DOS OEM\u9002\u914d\u5de5\u5177\u5305\uff0c\u5e76\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684DOS\uff0c\u5982Compaq DOS 3.3\u3002\u8003\u8651\u5230PC-DOS\u662f\u4e3aIBM\u81ea\u5df1\u7684PC\u7cfb\u5217\u6784\u5efa\u7684\uff0c\u5b83\u901a\u5e38\u88ab\u8ba4\u4e3a\u662fDOS 5.0\u4e4b\u524d\u7248\u672c\u4e2d\u6700\u201c\u901a\u7528\u201d\u7684\u7248\u672c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u88ab\u9009\u4e3a\u6211\u4eec\u7684\u57fa\u7840\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5b83\u7684\u5e74\u9f84\uff0c\u5b83\u6709\u4e00\u4e9b\u602a\u7656\uff0c\u5c06\u6d88\u5931\u5728\u8f83\u65b0\u7684\u548c\u66f4\u5e38\u89c1\u7684DOS\u7248\u672c\u3002\nPCDOS3.3\u5728VirtualBox\u4e2d\u52a0\u8f7d\u5f97\u5f88\u597d\uff0c\u800c\u4e14\u5728\u5355\u5f20720KiB\u8f6f\u76d8\u53ef\u5f15\u5bfc\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u7acb\u5373\u8fdb\u5165\u4e86\u547d\u4ee4\u63d0\u793a\u7b26\u3002\u540c\u6837\uff0cFDISK\u548cFORMAT\u53ef\u7528\u4e8e\u5bf9\u786c\u76d8\u8fdb\u884c\u5206\u533a\u4ee5\u8fdb\u884c\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u5355\u72ec\u7684\u5206\u533a\u9650\u5236\u4e3a32 MiB\u3002\u5373\u4f7f\u5728\u90a3\u4e2a\u65f6\u5019\uff0c\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6709\u9650\u5236\u7684\uff0c\u800cCompaq DOS\u662f\u7b2c\u4e00\u4e2a(\u636e\u6211\u6240\u77e5)\u53d6\u6d88\u8fd9\u4e00\u9650\u5236\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd0\u884c\u683c\u5f0fC\uff1a/S\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u5f15\u5bfc\u9a71\u52a8\u5668\uff0c\u4f46\u662f\u7ecf\u5e38\u88ab\u9057\u5fd8\u7684\u662fIBM\u5b9e\u9645\u4e0a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3aSELECT\u7684\u5b89\u88c5\u5b9e\u7528\u7a0b\u5e8f\u3002\nSELECT\u7684\u9ed8\u9ed8\u65e0\u95fb\u4e3b\u8981\u5728\u4e8e\u5b83\u4e0d\u660e\u663e\u7684\u540d\u79f0\u6216\u7528\u6cd5\uff0c\u4e5f\u4e0d\u5728\u4e8e\u5b89\u88c5DOS\u5b9e\u9645\u4e0a\u9700\u8981\u5b83\uff1b\u53ea\u9700\u5c06\u6587\u4ef6\u590d\u5236\u5230\u786c\u76d8\u4e0a\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u662f\uff0cSELECT\u786e\u5b9e\u521b\u5efa\u4e86CONFIG.SYS\u548cAUTOEXEC.BAT\uff0c\u56e0\u6b64\u4f7f\u7528\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u4e0e\u540e\u6765\u7684DOS\u8bbe\u7f6e\u76f8\u6bd4\uff0cSELECT\u9700\u8981\u4f7f\u7528\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u7684\u76ee\u6807\u5b89\u88c5\u6587\u4ef6\u5939\u3001\u952e\u76d8\u5e03\u5c40\u548c\u56fd\u5bb6\u4ee3\u7801\u8fdb\u884c\u76f8\u5bf9\u795e\u79d8\u7684\u8c03\u7528\uff0c\u5982\u679c\u8fd9\u4e9b\u5185\u5bb9\u4e0d\u6b63\u786e\uff0c\u5219\u53ea\u9700\u8f93\u51fa\u9519\u8bef\u5373\u53ef\u3002\u952e\u5165\u6b63\u786e\u7684\u7b26\u6587\u540e\uff0c\u9009\u62e9\u683c\u5f0f\u5316\u76ee\u6807\u9a71\u52a8\u5668\uff0c\u590d\u5236DOS\uff0c\u7136\u540e\u5b8c\u6210\u5b89\u88c5\u3002\n\u5728\u6ca1\u6709\u5927\u5f20\u65d7\u9f13\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u969c\u788d\u5df2\u7ecf\u8de8\u8fc7\uff0c\u6211\u4eec\u5f00\u59cb\u5b89\u88c5Windows\u3002\n\u5b89\u88c5\u4e86DOS\u4e4b\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5b89\u88c5\u5230Windows\u4e0a\u4e86\u3002\u4e0e\u6781\u7b80\u4e3b\u4e49\u7684SELECT\u547d\u4ee4\u76f8\u6bd4\uff0cWindows1.0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e13\u7528\u7684\u5b89\u88c5\u7a0b\u5e8f\u548c\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e\u6587\u672c\u7684\u754c\u9762\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u5927\u591a\u6570\u7528\u6237\u4f1a\u88ab\u671f\u671b\u81ea\u5df1\u5b89\u88c5Windows\uff0c\u800c\u4e0d\u662f\u9884\u5148\u5b89\u88c5\u3002\n\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u602a\u4e8b\u662f\uff0c\u7531\u4e8e\u90a3\u4e2a\u65f6\u4ee3\u786c\u76d8\u9a71\u52a8\u5668\u7684\u7a00\u7f3a\u6027\uff0cWindows\u53ef\u4ee5\u5b89\u88c5\u5230\u7b2c\u4e8c\u5f20\u8f6f\u76d8\u4e0a\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u7a0d\u540e\u5c06\u5728Microsoft C4.0\u4e2d\u770b\u5230\u3002\u5b89\u88c5(\u5927\u90e8\u5206)\u8fdb\u884c\u5f97\u5f88\u987a\u5229\uff0c\u5c3d\u7ba1\u7531\u4e8e\u6253\u5b57\u9519\u8bef\uff0c\u6211\u82b1\u4e86\u4e24\u6b21\u65f6\u95f4\u624d\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u5b89\u88c5\u3002\u8f93\u5165win\u5c06\u6211\u5e26\u5230Windows1.0\u76f8\u5f53\u7b80\u7ea6\u7684\u754c\u9762\u3002\n\u867d\u7136\u529f\u80fd\u6b63\u5e38\uff0c\u4f46\u7f3a\u5c11\u7684\u662f\u9f20\u6807\u652f\u6301\u3002\u7531\u4e8e\u5e74\u4ee3\u4e45\u8fdc\uff0cWindows\u65e9\u4e8e\u9f20\u6807\u6210\u4e3a\u6807\u51c6\u8bbe\u5907\uff0c\u4e5f\u65e9\u4e8ePS/2\u9f20\u6807\u534f\u8bae\uff1b\u5f00\u7bb1\u5373\u652f\u6301\u4e32\u884c\u548c\u603b\u7ebf\u9f20\u6807\u3002\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff1a\n\u7b2c\u4e00\u4e2a\u662f\u6211\u4f7f\u7528\u7684\uff0c\u5b83\u6d89\u53ca\u5c06MOUSE.DRV\u4eceWindows2.0\u590d\u5236\u5230Windows1.0\u5b89\u88c5\u4ecb\u8d28\uff0c\u7136\u540e\u91cd\u65b0\u5b89\u88c5\uff0c\u4ece\u83dc\u5355\u4e2d\u9009\u62e9\u201cMicrosoft Mouse\u201d\u9009\u9879\u3002\u9700\u8981\u91cd\u65b0\u5b89\u88c5\uff0c\u56e0\u4e3aWIN.COM\u662f\u4f5c\u4e3a\u5b89\u88c5\u7684\u4e00\u90e8\u5206\u9759\u6001\u94fe\u63a5\u7684\uff0c\u53ea\u5305\u542b\u5fc5\u8981\u7684\u9a71\u52a8\u7a0b\u5e8f\uff1b\u4e4b\u540e\u6ca1\u6709\u66f4\u6539\u8bbe\u7f6e\u7684\u9009\u9879\u3002SDK\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u9759\u6001\u94fe\u63a5\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u201c\u6162\u6a21\u5f0f\u201d\u4e0b\u8fd0\u884cWindows\u8fdb\u884c\u9a71\u52a8\u5f00\u53d1\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u8981\u91cd\u65b0\u914d\u7f6e\uff0c\u5219\u9700\u8981\u91cd\u65b0\u5b89\u88c5\u3002\n\u7b2c\u4e8c\u79cd\u9009\u62e9\u662f\u4f7f\u7528Windows 1.0\u7684PS/2\u7248\u672c\uff0c\u8fd9\u662f\u6211\u5728\u5236\u4f5c\u89c6\u9891\u540e\u624d\u610f\u8bc6\u5230\u7684\u3002\u5c31\u50cf\u90a3\u4e2a\u65f6\u4ee3\u7684DOS\u4e00\u6837\uff0cWindows\u88ab\u6388\u6743\u7ed9OEM\uff0c\u8fd9\u4e9bOEM\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u786c\u4ef6\u8fdb\u884c\u8c03\u6574\u3002\u4e8b\u5b9e\u4e0a\uff0cIBM\u786e\u5b9e\u4e3a\u4ed6\u4eec\u5f53\u65f6\u7684\u65b0PS/2\u7cfb\u5217\u8ba1\u7b97\u673a\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u5f53\u65f6\u589e\u52a0\u4e86\u5bf9PS/2\u9f20\u6807\u7684\u652f\u6301\u3002\u5c3d\u7ba1\u662fPS/2\u7cfb\u5217\uff0c\u4f46\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u4e2a\u7248\u672c\u7684Windows\u53ef\u4ee5\u5728AT\u517c\u5bb9\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u3002\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u7b2c\u4e8c\u5173\u5df2\u7ecf\u8fc7\u53bb\u4e86\uff0c\u6211\u6709\u4e86\u4e00\u53ea\u53ef\u4ee5\u5de5\u4f5c\u7684\u8001\u9f20\u3002\u8fd9\u4f7f\u5f97\u63a2\u7d22Windows1.0\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\n\u5982\u679c\u4f60\u6709\u5174\u8da3\u5c1d\u8bd5Windows 1.0\uff0c\u6211\u5efa\u8bae\u4f60\u53bbPCjs.org\u7f51\u7ad9\uff0c\u4f7f\u7528\u4ed6\u4eec\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u6a21\u62df\u5668\u6765\u73a9\u5b83\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u6709\u5de5\u4f5c\u9f20\u6807\u652f\u6301\uff0c\u4e0d\u9700\u8981\u8d2d\u4e70\u670935\u5e74\u5386\u53f2\u7684\u8f6f\u4ef6\u3002\u540c\u6837\uff0c\u6709\u5f88\u591a\u5173\u4e8e\u8fd9\u4e2a\u7248\u672c\u7684\u8bc4\u8bba\uff0c\u4f46\u5982\u679c\u6211\u4e0d\u82b1\u4e00\u70b9\u65f6\u95f4\u8c08\u8bba\u5b83\uff0c\u81f3\u5c11\u4ece\u6280\u672f\u5c42\u9762\u6765\u8bf4\uff0c\u6211\u5c06\u662f\u73a9\u5ffd\u804c\u5b88\u7684\u3002\n\u4e0e\u7a0d\u665a\u4e00\u4e9b\u7684Windows2.0\u76f8\u6bd4\uff0cWindows1.0\u6bd4\u4efb\u4f55\u5176\u4ed6\u7248\u672c\u7684Windows\u90fd\u66f4\u63a5\u8fd1DOSSHELL\uff0c\u672c\u8d28\u4e0a\u662fDOS\u7684\u56fe\u5f62\u5316\u63d2\u4ef6\uff0c\u5c3d\u7ba1\u901a\u8fc7\u6df1\u5965\u7684\u9b54\u529b\uff0c\u5b83\u80fd\u591f\u8fdb\u884c\u534f\u4f5c\u591a\u4efb\u52a1\u5904\u7406\u3002\u8fd9\u5b8c\u5168\u662f\u901a\u8fc7\u8f6f\u4ef6\u8be1\u8ba1\u5b8c\u6210\u7684\uff0c\u56e0\u4e3a\u89c6\u7a97\u7cfb\u7edf\u65e9\u4e8e80286\uff0c\u5e76\u5728\u6700\u521d\u76848086\u673a\u4e0a\u8fd0\u884c\u3002COMMAND.COM\u53ef\u4ee5\u4f5c\u4e3a\u57fa\u4e8e\u6587\u672c\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\uff0c\u7136\u800c\uff0c\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u542f\u52a8\u5168\u5c4f\u4f1a\u8bdd\u5e76\u63a7\u5236UI\u3002\n\u8fd9\u53ef\u80fd\u662fWindows 1.0\u5728\u66f4\u9ad8\u7248\u672c\u7684DOS\u4e0a\u51fa\u73b0\u95ee\u9898\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u63a7\u5236DOS\u4e2d\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5728\u6ca1\u6709\u5185\u5b58\u4fdd\u62a4\u6982\u5ff5\u7684\u5904\u7406\u5668\u4e0a\u6267\u884c\u8fb9\u754c\u9b54\u672f\u3002\n\u53e6\u4e00\u4e2a\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e2a\u7248\u672c\u7684Windows\u5e76\u6ca1\u6709\u5b9e\u9645\u7684\u201c\u7a97\u53e3\u201d\u3002\u76f8\u53cd\uff0c\u5e94\u7528\u7a0b\u5e8f\u662f\u5e73\u94fa\u7684\uff0c\u53ea\u6709\u5bf9\u8bdd\u6846\u663e\u793a\u4e3a\u81ea\u7531\u6d6e\u52a8\u7a97\u53e3\u3002\u91cd\u53e0\u7684\u7a97\u53e3\u5c06\u51fa\u73b0\u57282.0\u4e2d\uff0c\u4f46\u4eceAPI\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u51fa\uff0c\u5b83\u4eec\u81f3\u5c11\u5728\u67d0\u4e2a\u65f6\u5019\u662f\u6709\u8ba1\u5212\u7684\u3002\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCreateWindow()\u51fd\u6570\u8c03\u7528\u6709x\u548cy\u5750\u6807\u7684\u53c2\u6570\u3002\n\u6211\u6700\u597d\u7684\u731c\u6d4b\u662f\uff0c\u5fae\u8f6f\u5e0c\u671b\u907f\u514d\u6fc0\u6012\u82f9\u679c\uff0c\u56e0\u4e3a\u82f9\u679c\u5df2\u7ecf\u8d70\u4e0a\u4e86\u4e0e\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u4e00\u6837\u7684\u6cd5\u5f8b\u6218\u4e89\u9053\u8def\uff0c\u56e0\u4e3a\u5b83\u8fc7\u4e8e\u4e25\u683c\u5730\u6284\u88ad\u4e86\u5f53\u65f6\u65b0\u6b3e\u82f9\u679cMacintosh\u7684\u7528\u6237\u754c\u9762\u3002\u4e0e\u540e\u6765\u7684\u7248\u672c\u76f8\u6bd4\uff0c\u4e5f\u51e0\u4e4e\u6ca1\u6709\u5305\u542b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5176\u4e2d\u6700\u503c\u5f97\u6ce8\u610f\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\uff1a\u8bb0\u4e8b\u672c\u3001\u753b\u56fe\u3001\u5199\u5165\u548cCARDFILE\u3002\n\u867d\u7136\u8bb0\u4e8b\u672c\u4e0e\u5176\u73b0\u4ee3\u7248\u672c\u57fa\u672c\u4e0a\u6ca1\u6709\u53d8\u5316\uff0c\u4f46Write\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662fWord\u7684\u7cbe\u7b80\u7248\u672c\uff0c\u5728Windows95\u88ab\u5199\u5b57\u677f\u53d6\u4ee3\u4e4b\u524d\uff0cWrite\u4ecd\u5c06\u662f\u4e3b\u6d41\u3002\u540c\u6837\uff0cCARDFILE\u4e5f\u662f\u4e00\u4e2a\u6570\u5b57Rolodex\u3002\u5728Windows3.1\u4e4b\u524d\uff0cCARDFILE\u4e00\u76f4\u662f\u9ed8\u8ba4\u5b89\u88c5\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5728\u5b8c\u5168\u6d88\u5931\u4e4b\u524d\u4e00\u76f4\u4fdd\u7559\u572895\u300198\u548cME\u7684CD-ROM\u4e0a\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cPaint\u4e0e\u540e\u6765\u6210\u4e3a\u4e3b\u6d41\u7684\u753b\u7b14\u5e94\u7528\u7a0b\u5e8f\u5b8c\u5168\u4e0d\u540c\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u4ec5\u9650\u4e8e\u5355\u8272\u56fe\u5f62\uff0c\u5e76\u4e14\u6587\u4ef6\u4ee5MSP\u683c\u5f0f\u4fdd\u5b58\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u4e8e\u5f53\u65f6Windows API\u7684\u5c40\u9650\u6027\uff1a\u4e3a\u4e86\u5c06\u4f4d\u56fe\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0cWindows\u63d0\u4f9b\u4e86\u72ec\u7acb\u4e8e\u663e\u793a\u7684\u4f4d\u56fe(Display Independent Bitmap\uff0c\u7b80\u79f0DIB)\u3002\u8fd9\u4e9b\u6ca1\u6709\u8c03\u8272\u677f\u7684\u6982\u5ff5\uff0c\u4ec5\u9650\u4e8eWindows\u4f5c\u4e3aEGA\u8c03\u8272\u677f\u7684\u4e00\u90e8\u5206\u4f7f\u7528\u76848\u79cd\u989c\u8272\u3002\u989c\u8272\u652f\u6301\u4f3c\u4e4e\u662fWindows\u8f83\u665a\u624d\u589e\u52a0\u7684\u529f\u80fd\uff0c\u4f3c\u4e4e\u76f4\u5230Windows3.0\u624d\u5b8c\u5168\u5b9e\u73b0\u3002\n\u753b\u7b14(\u4ee5\u53ca\u540e\u6765\u547d\u540d\u6df7\u4e71\u7684Paint)\u5b9e\u9645\u4e0a\u662f\u7531ZSoft\u521b\u5efa\u7684\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\uff0c\u6709DOS\u548cWindows1.0\u7248\u672c\u3002ZSoft\u753b\u7b14\u4e0eWindows3.0\u9644\u5e26\u7684\u753b\u7b14\u975e\u5e38\u76f8\u4f3c\uff0c\u5e76\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u672f\u6280\u5de7\u6765\u5229\u7528\u5b8c\u6574\u7684EGA\u8c03\u8272\u677f\u3002\n\u5feb\u901f\u67e5\u770b\u5b8c\u6210\u540e\uff0c\u8ba9\u6211\u4eec\u56de\u5230\u5b9e\u9645\u7684HELLO.C\uff0c\u8fd9\u6d89\u53ca\u5230\u5b89\u88c5SDK\u3002\n\u83b7\u5f97Windows SDK\u5b89\u88c5\u7a0b\u5e8f\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u4e00\u79cd\u4f53\u9a8c\u3002\u5fae\u8f6f\u8fd9\u4e2a\u65f6\u4ee3\u7684\u5927\u90e8\u5206\u6587\u6863\u5df2\u7ecf\u4e22\u5931\uff0c\u4f46\u5fae\u8f6fOS/2\u535a\u7269\u9986\u5df2\u7ecf\u626b\u63cf\u4e86\u4e00\u4e9b\u53c2\u8003\u6d3b\u9875\u5939\u7684\u526f\u672c\uff0cSDK\u4e2d\u7684\u7b2c\u4e8c\u5f20\u78c1\u76d8\u65e2\u6709\u81ea\u8ff0\u6587\u4ef6\uff0c\u4e5f\u6709\u5b89\u88c5\u6279\u5904\u7406\u6587\u4ef6\uff0c\u8bbe\u6cd5\u83b7\u5f97\u4e86\u6240\u9700\u7684\u5927\u90e8\u5206\u5fc5\u8981\u4fe1\u606f\u3002\n\u4e0e\u540e\u6765\u7684SDK\u7248\u672c\u4e0d\u540c\uff0c\u63d0\u4f9b\u7f16\u8bd1\u5668\u662f\u7a0b\u5e8f\u5458\u7684\u8d23\u4efb\u3002\u5fae\u8f6f\u6b63\u5f0f\u652f\u6301\u4ee5\u4e0b\u5de5\u5177\uff1a\n\u975e\u5b98\u65b9\u7684(\u672a\u7ecf\u8bc1\u5b9e\u7684)\uff0cBorland C\u7684\u4e00\u4e9b\u7248\u672c\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u5c3d\u7ba1\u8fd9\u662f\u672a\u7ecf\u6d4b\u8bd5\u7684\uff0c\u9664\u4e86Usenet\u4e0a\u7684\u4e00\u4e9b\u6ce8\u91ca\u4e4b\u5916\uff0c\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u8bb0\u5f55\u5728\u6848\u3002\u66f4\u6709\u8da3\u7684\u662f\uff0c\u4e0a\u8ff0\u6240\u6709\u5de5\u5177\u90fd\u662f\u9488\u5bf9DOS\u7684\u7f16\u8bd1\u5668\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u9488\u5bf9Windows\u7684\u7279\u5b9a\u652f\u6301\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cSDK\u4e2d\u9644\u5e26\u4e86\u4e00\u4e2a\u66ff\u6362\u7684\u94fe\u63a5\u5668\uff0c\u5b83\u53ef\u4ee5\u521b\u5efaWindows 1.0\u201cNE\u201d\u65b0\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u79cd\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u5728\u88ab\u5206\u522b\u66ff\u6362\u4e3a\u53ef\u79fb\u690d(PE)\u548c\u7ebf\u6027\u53ef\u6267\u884c\u6587\u4ef6(LX)\u4e4b\u524d\uff0c\u4e5f\u5c06\u5728\u65e9\u671f\u7684OS/2\u4e0a\u4f7f\u7528\u3002\n\u4e3a\u4e86\u7f16\u8bd1HELLO.C\uff0c\u5b89\u88c5\u4e86Microsoft C4.0\u3002\u548cWindows\u4e00\u6837\uff0cMSC\u4e5f\u53ef\u4ee5\u4ece\u8f6f\u76d8\u8fd0\u884c\uff0c\u5c3d\u7ba1\u9700\u8981\u5927\u91cf\u7684\u78c1\u76d8\u4ea4\u6362\u3002\u6ca1\u6709\u63d0\u4f9b\u5b89\u88c5\u7a0b\u5e8f\uff0c\u76f8\u53cd\uff0c\u5e78\u5b58\u4e0b\u6765\u7684PDF\u6709\u51e0\u9875\u590d\u5236\u547d\u4ee4\uff0c\u5e76\u7ed3\u5408\u4e86\u5bf9AUTOEXEC.BAT\u548cCONFIG.SYS\u7684\u7f16\u8f91\uff0c\u7528\u4e8e\u786c\u76d8\u5b89\u88c5\u3002\u4e5f\u662f\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u5b89\u88c5\u4e86Sled\uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c4f\u7f16\u8f91\u5668\uff0c\u56e0\u4e3aDOS 3.3\u53ea\u968fEdlin\u4e00\u8d77\u63d0\u4f9b\u3002\u7f16\u8f91\u5728DOS 5.0\u4e4b\u524d\u4e0d\u4f1a\u51fa\u73b0\u3002\n\u7ecf\u8fc7\u591a\u6b21\u78c1\u76d8\u9988\u9001\u548c\u4e00\u4e9b\u6545\u969c\u6392\u9664\uff0c\u6211\u8bbe\u6cd5\u4e3aDOS\u7f16\u8bd1\u4e86\u4e00\u4e2a\u53c8\u5feb\u53c8\u810f\u7684Hello World\u7a0b\u5e8f\u3002MSC 4.0\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u602a\u73b0\u8c61\u662f\u5b83\u4e0d\u5305\u62ec\u72ec\u7acb\u7684\u6c47\u7f16\u5668\uff1bMASM\u5728\u5f53\u65f6\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u96f6\u552e\u4ea7\u54c1\u3002\u7f16\u8bd1\u5668\u6392\u5e8f\u5b8c\u6bd5\u540e\uff0c\u662f\u65f6\u5019\u53d1\u5e03SDK\u4e86\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b89\u88c5\u811a\u672c\u3002\u4e0eSELECT\u4e00\u6837\uff0c\u5b83\u9700\u8981\u5217\u51fa\u4e00\u5806\u6587\u4ef6\u5939\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\u7531\u4e8e\u53ef\u80fd\u57281985\u5e74\u624d\u6709\u610f\u4e49\u7684\u539f\u56e0\uff0c\u811a\u672c\u548c\u81ea\u8ff0\u6587\u4ef6\u90fd\u5728\u78c1\u76d82\u4e0a\uff0c\u800c\u4e0d\u662f\u78c1\u76d81\u4e0a\u3002\u8fd9\u88ab\u786e\u8ba4\u4e0d\u662f\u6807\u7b7e\u9519\u8bef\uff0c\u56e0\u4e3a\u811a\u672c\u7acb\u5373\u8981\u6c42\u63d2\u5165\u78c1\u76d81\u3002\n\u5728\u8fd4\u56de\u5230\u547d\u4ee4\u884c\u4e4b\u524d\uff0c\u5b89\u88c5\u811a\u672c\u4ece\u4e03\u4e2a\u78c1\u76d8\u4e2d\u7684\u56db\u4e2a\u78c1\u76d8\u590d\u5236\u6587\u4ef6\u3002\u78c1\u76d85\u5305\u542bWindows\u7684\u8c03\u8bd5\u7248\u672c\uff0c\u5927\u81f4\u76f8\u5f53\u4e8e\u73b0\u4ee3Windows\u7684\u68c0\u67e5\u7248\u672c\u3002\u78c1\u76d86\u548c7\u6709\u793a\u4f8b\u4ee3\u7801\uff0c\u5305\u62ecHELLO.C\u3002\n\u901a\u8fc7\u6700\u540e\u4e00\u5173\u540e\uff0c\u8981\u7f16\u8bd1HELLO.EXE\u5e76\u4e0d\u592a\u96be\u3002\n\u6211\u5c06\u4ece\u66f4\u9ad8\u7684\u5c42\u6b21\u6765\u4ecb\u7ecd\u8fd9\u4e9b\uff0c\u6211\u7684\u6ce8\u91cahello.c\u5bf9\u6240\u6709\u8fd9\u4e9b\u70b9\u90fd\u505a\u4e86\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u5b83\u4e86\uff0c\u63a5\u4e0b\u6765\u6765\u770b\u770b16\u4f4dWindows\u5e94\u7528\u7a0b\u5e8f\u7684\u5177\u4f53\u6784\u6210\u3002\u7531\u4e8e\u5e74\u9f84\u7684\u539f\u56e0\uff0c\u7b2c\u4e00\u4e2a\u4e3b\u8981\u533a\u522b\u662fHELLO.C\u4f7f\u7528K&amp\uff1bR C\u4ec5\u4ec5\u662f\u57fa\u4e8eANSI C\u51fd\u6570\u4e4b\u524d\u7684\u57fa\u7840\u4e0a\u3002\u540c\u6837\u660e\u663e\u7684\u662f\uff0c\u67d0\u4e9b\u7ea6\u5b9a\u8fd8\u4e0d\u5e38\u89c1\uff1a\u4f8b\u5982\uff0cwindows.h\u7f3a\u5c11\u5305\u542b\u4fdd\u62a4\u3002\n\u54e6\uff0c\u5929\u54ea\uff0c\u4efb\u4f55\u4eba\u5728\u5b9e\u6a21\u5f0f\u4e0b\u7f16\u7801\u7684\u7978\u5bb3\uff0c\u8fd1\u6307\u9488\u548c\u8fdc\u6307\u9488\u662f\u8bb8\u591a\u4eba\u7b80\u5355\u5730\u60f3\u8981\u5fd8\u8bb0\u7684\u4e00\u4e2a\u201c\u529f\u80fd\u201d\u3002\u533a\u522b\u4f3c\u4e4e\u5f88\u7b80\u5355\uff0c\u8fd1\u6307\u9488\u4e0eC\u4e2d\u7684\u6807\u51c6\u6307\u9488\u51e0\u4e4e\u76f8\u540c\uff0c\u53ea\u662f\u5b83\u6307\u5411\u5df2\u77e5\u6bb5\u5185\u7684\u5185\u5b58\uff0c\u800c\u8fdc\u6307\u9488\u662f\u5305\u62ec\u6bb5\u9009\u62e9\u5668\u7684\u6307\u9488\u3002\u5b89\u5168\uff0c\u5bf9\u5417\uff1f\n\u662f\u554a\uff0c\u6211\u53ef\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u3002\u8981\u771f\u6b63\u7406\u89e3\u8fd9\u4e9b\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u9700\u8981\u7ec6\u5206\u52308086\u768420\u4f4d\u5185\u5b58\u6620\u5c04\u4e2d\u3002\u5728\u5185\u90e8\uff0c8086\u662f\u4e00\u4e2a16\u4f4d\u5904\u7406\u5668\uff0c\u56e0\u6b64\u4e00\u6b21\u53ef\u4ee5\u76f4\u63a5\u5bfb\u57402^16\u4f4d\u5185\u5b58\uff0c\u6216\u603b\u517164KB\u3002\u4e3a\u4e86\u6253\u783416\u4f4d\u5b58\u50a8\u5668\u7684\u969c\u788d\uff0c\u4eba\u4eec\u91c7\u53d6\u4e86\u5404\u79cd\u6280\u5de7\uff0c\u4f8b\u5982\u5b58\u50a8\u4f53\u5207\u6362\uff0c\u6216\u8005\u57288086\u7684\u60c5\u51b5\u4e0b\uff0c\u5206\u6bb5\u3002\n\u4e0d\u662f\u76f4\u63a5\u8bbf\u95ee\u6240\u670920\u4f4d\uff0c\u800c\u662f\u5c06\u5185\u5b58\u6307\u9488\u5212\u5206\u4e3a\u9009\u62e9\u5668(\u6784\u6210\u7ed9\u5b9a\u6307\u9488\u7684\u57fa\u5740)\u548c\u8ddd\u8be5\u57fa\u5740\u7684\u504f\u79fb\u91cf\uff0c\u4ece\u800c\u5141\u8bb8\u6620\u5c04\u6574\u4e2a\u5730\u5740\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\uff0c8086\u901a\u8fc7\u4f7f\u7528\u4ee3\u7801\u6bb5(CS)\u3001\u6570\u636e\u6bb5(DS)\u3001\u5806\u6808\u6bb5(SS)\u548c\u989d\u5916\u6bb5(ES)\u5411\u7cfb\u7edf\u5185\u5b58\u63d0\u4f9b\u4e86\u56db\u4e2a\u72ec\u7acb\u7684\u7a97\u53e3\u3002\n\u56e0\u6b64\uff0c\u5728\u6570\u636e\u6216\u51fd\u6570\u8c03\u7528\u5728\u540c\u4e00\u6bb5\u4e2d\u4e14\u4ec5\u5305\u542b\u504f\u79fb\u91cf\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u8fd1\u6307\u9488\uff1b\u5b83\u4eec\u5728\u529f\u80fd\u4e0a\u4e0e\u7ed9\u5b9a\u6bb5\u5185\u7684\u666e\u901aC\u6307\u9488\u76f8\u540c\u3002\u8fdc\u6307\u9488\u5305\u62ec\u6bb5\u548c\u504f\u79fb\u91cf\uff0c8086\u6709\u4f7f\u7528\u8fd9\u4e9b\u6307\u9488\u7684\u7279\u6b8a\u64cd\u4f5c\u7801\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fdc\u8c03\u7528\uff0c\u5b83\u81ea\u52a8\u63a8\u9001\u548c\u5f39\u51fa\u7528\u4e8e\u5728\u5185\u5b58\u4f4d\u7f6e\u4e4b\u95f4\u8df3\u8f6c\u7684\u4ee3\u7801\u6bb5\u3002\u8fd9\u5c06\u5728\u7a0d\u540e\u8fdb\u884c\u76f8\u5173\u8ba8\u8bba\u3002\nHelloWndProc\u662f\u5bf9Hello\u7a97\u53e3\u56de\u8c03\u7684\u8f6c\u53d1\u58f0\u660e\uff0cHello\u7a97\u53e3\u56de\u8c03\u662fWindows\u7f16\u7a0b\u7684\u6807\u51c6\u529f\u80fd\u3002\u56de\u8c03\u51fd\u6570\u603b\u662f\u5fc5\u987b\u58f0\u660e\uff0c\u56e0\u4e3aWindows\u5728\u4ece\u4efb\u52a1\u7ba1\u7406\u5668\u8df3\u8f6c\u5230\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u65f6\u9700\u8981\u52a0\u8f7d\u6b63\u786e\u7684\u6bb5\u3002\u56e0\u6b64\u624d\u6709\u4e86FAR\u58f0\u660e\u3002\u6b64\u5916\uff0cWindows1.0\u548c2.0\u8fd8\u6709\u5176\u4ed6\u89c4\u5219\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u67e5\u770b\u3002\nWindows API\u51fd\u6570\u90fd\u58f0\u660e\u4e3aPascal\u8c03\u7528\u7ea6\u5b9a\uff0c\u5728\u73b0\u4ee3Windows\u4e0a\u4e5f\u79f0\u4e3aSTDCALL\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cC\u7f16\u7a0b\u8bed\u8a00\u6709\u4e00\u4e2a\u540d\u4e49\u8c03\u7528\u7ea6\u5b9a(\u79f0\u4e3aCDECL)\uff0c\u5b83\u4e3b\u8981\u4e0e\u51fd\u6570\u8c03\u7528\u540e\u5982\u4f55\u6e05\u7406\u5806\u6808\u6709\u5173\u3002\u5728CDECL\u58f0\u660e\u7684\u51fd\u6570\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u8d1f\u8d23\u6e05\u7406\u5806\u6808\u3002\u8fd9\u662fvardiac\u51fd\u6570(\u4e5f\u5c31\u662f\u63a5\u53d7\u53ef\u53d8\u6570\u91cf\u53c2\u6570\u7684\u51fd\u6570)\u5de5\u4f5c\u6240\u5fc5\u9700\u7684\uff0c\u56e0\u4e3a\u88ab\u8c03\u7528\u8005\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u53c2\u6570\u88ab\u538b\u5165\u5806\u6808\u3002\nCDECL\u7684\u7f3a\u70b9\u662f\uff0c\u5b83\u9700\u8981\u4e3a\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u63d0\u4f9b\u989d\u5916\u7684\u5e8f\u8a00\u548c\u7ed3\u5c3e\u6307\u4ee4\uff0c\u4ece\u800c\u964d\u4f4e\u6267\u884c\u901f\u5ea6\u5e76\u589e\u52a0\u78c1\u76d8\u7a7a\u95f4\u9700\u6c42\u3002\u76f8\u53cd\uff0cPascal\u8c03\u7528\u7ea6\u5b9a\u5c06\u6e05\u7406\u7559\u7ed9\u88ab\u8c03\u7528\u51fd\u6570\u6267\u884c\uff0c\u5e76\u4e14\u901a\u5e38\u53ea\u9700\u8981\u5355\u4e2a\u64cd\u4f5c\u7801\u6765\u6e05\u7406\u51fd\u6570\u672b\u5c3e\u7684\u5806\u6808\u3002\u5f88\u53ef\u80fd\u662f\u51fa\u4e8e\u6267\u884c\u548c\u78c1\u76d8\u7a7a\u95f4\u65b9\u9762\u7684\u8003\u8651\uff0cWindows\u5bf9\u6b64\u7ea6\u5b9a\u8fdb\u884c\u4e86\u6807\u51c6\u5316(\u5b9e\u9645\u4e0a\u4ecd\u572832\u4f4dWindows\u4e0a\u4f7f\u7528\u5b83)\u3002\nIf(\uff01hPrevInstance){/*\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5219\u8c03\u7528\u521d\u59cb\u5316\u8fc7\u7a0b*/If(\uff01HelloInit(HInstance))\u8fd4\u56defalse\uff1b}Else{/*\u4ece\u4e0a\u4e00\u4e2a\u5b9e\u4f8b\u590d\u5236\u6570\u636e*/GetInstanceData(hPrevInstance\uff0c(PSTR)szAppName\uff0c10)\uff1bGetInstanceData(hPrevInstance\uff0c(PSTR)szAbout\uff0c10)\uff1bGetInstanceData(hPrevInstance\uff0c(PSTR)szAppName\uff0c10)\uff1bGetInstanceData(hPrevInstance\uff0c(PSTR)szAppName\uff0c10)\uff1bGetInstanceData(hPrevInstance\uff0c(PSTR)szAppName\uff0c10\u3002\n\u51e0\u5341\u5e74\u6765\uff0chPrevInstance\u4e00\u76f4\u662f\u73b0\u4ee3Windows\u4e2d\u7684\u6b8b\u7559\u5668\u5b98\u3002\u5b83\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u8bbe\u7f6e\u4e3aNULL\uff0c\u5728Win32\u4e2d\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u603b\u662f\u6beb\u65e0\u610f\u4e49\u300216\u4f4dWindows\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u5b58\u5728\u4e8e\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u822c\u6c64\u4e2d\u3002\u6b64\u5916\uff0cWindows\u6ca1\u6709\u7acb\u5373\u56de\u6536\u6807\u8bb0\u4e3a\u672a\u4f7f\u7528\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u4f7f\u5176\u81ea\u8eab\u7684\u90e8\u5206\u4fdd\u6301\u9a7b\u7559\u72b6\u6001\u3002\nhPrevInstance\u662f\u6307\u5411\u8fd9\u4e9b\u5148\u524d\u5b9e\u4f8b\u7684\u6307\u9488\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4ecd\u7136\u78b0\u5de7\u5c06\u5176\u8d44\u6e90\u6ce8\u518c\u5230Windows\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u5219\u5b83\u53ef\u4ee5\u56de\u6536\u8fd9\u4e9b\u8d44\u6e90\uff0c\u800c\u4e0d\u5fc5\u91cd\u65b0\u4ece\u78c1\u76d8\u52a0\u8f7d\u5b83\u4eec\u3002\u5982\u679c\u6ca1\u6709\u52a0\u8f7d\u4ee5\u524d\u7684\u5b9e\u4f8b\uff0c\u5219\u5c06hPrevInstance\u8bbe\u7f6e\u4e3aNULL\uff0c\u4ece\u800c\u6307\u793a\u5e94\u7528\u7a0b\u5e8f\u91cd\u65b0\u52a0\u8f7d\u5b83\u9700\u8981\u7684\u6240\u6709\u5185\u5bb9\u3002\u8d44\u6e90\u662f\u4f7f\u7528\u5168\u5c40\u952e\u6ce8\u518c\u7684\uff0c\u56e0\u6b64\u5c1d\u8bd5\u6ce8\u518c\u540c\u4e00\u8d44\u6e90\u4e24\u6b21\u5c06\u5bfc\u81f4\u521d\u59cb\u5316\u5931\u8d25\u3002\n\u6211\u8fd8\u5f97\u5230\u4e86\u8d44\u6e90\u53ef\u4ee5\u8de8\u5e94\u7528\u7a0b\u5e8f\u5171\u4eab\u7684\u5370\u8c61\uff0c\u5c3d\u7ba1\u6211\u8fd8\u6ca1\u6709\u660e\u786e\u8bc1\u5b9e\u8fd9\u4e00\u70b9\u3002\n\u6ce8\uff1a\u5927\u90e8\u5206\u6284\u88ad\u81ea\u96f7\u8499\u5fb7\u00b7\u9648(Raymond Chen)\u7684\u535a\u5ba2\uff0c\u8fd9\u662f\u4e00\u672c\u5f88\u597d\u7684\u8bfb\u7269\uff0c\u89e3\u91ca\u4e86Windows\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5de5\u4f5c\u3002\n\u53e6\u4e00\u4e2a\u57fa\u672c\u6d88\u5931\u7684\u6982\u5ff5\u662f\uff0c\u5185\u5b58\u5206\u914d\u88ab\u5f52\u7c7b\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u672c\u5730\u5185\u5b58\u5206\u914d\u6216\u5168\u5c40\u5185\u5b58\u5206\u914d\u3002\u7531\u4e8e\u5206\u6bb5\u4f53\u7cfb\u7ed3\u6784\uff0c\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u591a\u4e2a\u5806\uff1a\u4e00\u4e2a\u662f\u4f7f\u7528\u7a0b\u5e8f\u521d\u59cb\u5316\u5e76\u5b58\u5728\u4e8e\u672c\u5730\u6570\u636e\u6bb5\u4e2d\u7684\u672c\u5730\u5806\uff0c\u53e6\u4e00\u4e2a\u662f\u9700\u8981\u8fdc\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\u7684\u5168\u5c40\u5806\u3002\n\u6bcf\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u548cDLL\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730\u5806\uff0c\u4f46\u662f\u5168\u5c40\u5806\u53ef\u4ee5\u8de8\u8fdb\u7a0b\u8fb9\u754c\u5171\u4eab\uff0c\u800c\u4e14\u636e\u6211\u6240\u77e5\uff0c\u5728\u8fdb\u7a0b\u7ed3\u675f\u65f6\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u3002HEAPWALK\u53ef\u7528\u4e8e\u67e5\u770b\u8c01\u5206\u914d\u4e86\u4ec0\u4e48\uff0c\u5e76\u67e5\u627e\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u6f0f\u6d1e\u3002\u5b83\u4e5f\u53ef\u4ee5\u4e0eShaker\u7ed3\u5408\u4f7f\u7528\uff0cShaker\u91cd\u65b0\u6392\u5217\u8bb0\u5fc6\u5757\uff0c\u8bd5\u56fe\u6296\u52a8\u677e\u6563\u7684\u866b\u5b50\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u66f4\u73b0\u4ee3\u7684\u5de5\u5177\uff0c\u5982Linux\u4e0a\u7684valgrind\u6216\u5fae\u8f6f\u7684\u5e94\u7528\u7a0b\u5e8f\u6d4b\u8bd5\u5de5\u5177\u3002\n\u54e6\uff0c\u5929\u54ea\uff0c\u8fd9\u771f\u662f\u4e2a\u6076\u81ed\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u3002MakeProcInstance\u751a\u81f3\u6ca1\u6709\u8fdb\u5165Windows3.1\uff0c\u5b83\u7684\u5b58\u5728\u5b8c\u5168\u662f\u56e0\u4e3a\u5fae\u8f6f\u5fd8\u8bb0\u4e86\u4ed6\u4eec\u81ea\u5df1\u64cd\u4f5c\u73af\u5883\u7684\u7ec6\u8282\u3002\u4e3a\u4e86\u89e3\u91ca\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6df1\u5165\u5730\u6316\u6398\u5206\u6bb5\u6a21\u5f0f\u7f16\u7a0b\u3002\nMakeProcInstance\u7684\u76ee\u7684\u662f\u6ce8\u518c\u4e00\u4e2a\u9002\u5408\u4f5c\u4e3a\u56de\u8c03\u7684\u51fd\u6570\u3002\u53ea\u6709\u5728\u6a21\u5757\u6587\u4ef6\u4e2d\u7528MPI\u6807\u8bb0\u6216\u58f0\u660e\u4e3a\u5bfc\u51fa\u7684\u51fd\u6570\u624d\u80fd\u8de8\u8fdb\u7a0b\u8fb9\u754c\u5b89\u5168\u8c03\u7528\u3002\u539f\u56e0\u662fWindows\u9700\u8981\u5c06\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u6ce8\u518c\u5230\u5168\u5c40\u5b58\u50a8\u533a\uff0c\u4ee5\u4fbf\u5b89\u5168\u5730\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730\u5806\uff0c\u8be5\u5806\u9a7b\u7559\u5728DS\u4e2d\u81ea\u5df1\u7684\u9009\u62e9\u5668\u4e2d\u3002\n\u5728\u5b9e\u6a21\u5f0f\u4e2d\uff0c\u6267\u884c\u4e00\u4e2a\u8fdc\u8c03\u7528\u4ee5\u8df3\u8f6c\u5230\u4e00\u4e2a\u8fdc\u6307\u9488\u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u63a8\u5165\u548c\u5f39\u51fa\u4ee3\u7801\u6bb5\uff0c\u4f46\u6570\u636e\u6bb5\u4fdd\u6301\u4e0d\u53d8\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u79cd\u673a\u5236\u6765\u5b58\u50a8\u67e5\u627e\u672c\u5730\u5806\u6240\u9700\u7684\u9644\u52a0\u4fe1\u606f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u542c\u8d77\u6765\u662f\u76f8\u5bf9\u5408\u7406\u7684\u3002\n\u95ee\u9898\u662f16\u4f4d\u7a97\u53e3\u6709\u4e00\u4e2a\u4e0d\u53d8\u91cf\uff1ads=SS\u2026\u3002\n\u5982\u679c\u60a8\u662f\u4e00\u540d\u771f\u6b63\u7684\u6a21\u5f0f\u7a0b\u5e8f\u5458\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u6211\u6e05\u695a\u5730\u77e5\u9053\u6211\u8981\u505a\u7684\u662f\u4ec0\u4e48\u3002\u5806\u6808\u6bb5\u9009\u62e9\u5668\u7528\u4e8e\u6307\u793a\u5806\u6808\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u3002\u5728\u8de8\u8d8a\u8fdb\u7a0b\u8fb9\u754c\u7684\u51fd\u6570\u8c03\u7528\u671f\u95f4\uff0cSS\u4e5f\u4e0e\u524d\u4e00\u4e2aSP\u4e00\u8d77\u88ab\u63a8\u9001\u5230\u5806\u6808\u3002\u60a8\u53ef\u80fd\u4f1a\u5f00\u59cb\u660e\u767d\u4e3a\u4ec0\u4e48MakeProcInstance\u53d8\u5f97\u5b8c\u5168\u4e0d\u5fc5\u8981\u4e86\u3002\n\u4e0e\u51fd\u6570\u8c03\u7528\u4e0d\u9700\u8981\u5168\u5c40\u6ce8\u518c\u7cfb\u7edf\u4e0d\u540c\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u67e5\u770b\u5806\u6808\u57fa\u6307\u9488(BP)\u5e76\u4ece\u90a3\u91cc\u68c0\u7d22\u4ee5\u524d\u7684SS\u5373\u53ef\u3002\u56e0\u4e3aSS=DS\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u4fdd\u5b58\u4e86\u4e4b\u524d\u7684\u6570\u636e\u6bb5\uff0c\u4e0d\u9700\u8981\u6ce8\u518c\uff0c\u53ea\u9700\u66f4\u6539Windows\u5904\u7406\u51fd\u6570\u7ed3\u5c3e\u548c\u5e8f\u8a00\u7684\u65b9\u5f0f\u5373\u53ef\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u88ab\u7b2c\u4e09\u65b9\u53d1\u73b0\u7684\uff0cMichael Geary\u53d1\u5e03\u4e86\u4e00\u4e2a\u540d\u4e3aFixDS\u7684\u5de5\u5177\uff0c\u5b83\u91cd\u5199\u4e86\u51fd\u6570\u4ee3\u7801\u6765\u505a\u6211\u521a\u624d\u63cf\u8ff0\u7684\u4e8b\u60c5\u3002\u5fae\u8f6f\u6700\u7ec8\u5c06\u4ed6\u7684\u4fee\u590d\u7a0b\u5e8f\u76f4\u63a5\u6574\u5408\u5230Windows\u4e2d\uff0cMakeProcInstance\u4f5c\u4e3a\u5fc5\u9700\u54c1\u6d88\u5931\u4e86\u3002\n\u6839\u636eRaymond Chen\u7684\u535a\u5ba2\u548c\u5176\u4ed6\u6765\u6e90\uff0c16\u4f4dWindows\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u65b9\u9762\u662f\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5728\u8bbe\u8ba1\u65f6\u8003\u8651\u5230\u4e86\u5e94\u7528\u7a0b\u5e8f\u5c06\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u7684\u53ef\u80fd\u6027\uff0c\u800c\u4e14\u6709\u4f20\u8a00\u8bf4\uff0cWindows\u5c06\u88ab\u79fb\u690d\u5230\u5fae\u8f6f\u57fa\u4e8eUNIX\u7684\u64cd\u4f5c\u7cfb\u7edfXENIX\u4e0a\u8fd0\u884c\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695aOS/2\u7684Presentation Manager\u662f\u5426\u4e0e16\u4f4dWindows\u5171\u4eab\u4ee3\u7801\uff0c\u5c3d\u7ba1\u51e0\u4e2a\u8bbe\u8ba1\u65b9\u9762\u548cAPI\u540d\u79f0\u7d27\u5bc6\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\u4ece16\u4f4d\u89c6\u7a97\u7684\u8bbe\u8ba1\u548c\u4f7f\u7528\u6765\u770b\uff0c\u5f88\u6e05\u695a\u7684\u662f\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f80286\u4e0a\u7684\u4fdd\u62a4\u6a21\u5f0f(\u6709\u65f6\u79f0\u4e3a\u5206\u6bb5\u4fdd\u62a4\u6a21\u5f0f)\u7684\u672a\u6765\u9632\u62a4\u6a21\u5f0f\u3002\u5728286\u7684\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u5f53\u5904\u7406\u5668\u4e3a32\u4f4d\u65f6\uff0cMe\u3002\n..", "note_en": "For those who\u2019ve been long-time readers of SoylentNews, it\u2019s not exactly a secret that I have a personal interest in retro computing and documenting the history and evolution of the Personal Computer. About three years ago, I ran a series of articles about restoring Xenix 2.2.3c, and I\u2019m far overdue on writing a new one. For those who do programming work of any sort, you\u2019ll also be familiar with \u201cHello World\u201d, the first program most, if not all, programmers write in their careers.\n   Recently, I was inspired to investigate the original HELLO.C for Windows 1.0, a 125 line behemoth that was talked about in\u00a0hush\u00a0tones. To that end, I recorded a video on YouTube that provides a look into the world of programming for Windows 1.0, and then testing the backward compatibility of Windows through to Windows 10.\n For those less inclined to watch a video, my write-up of the experience is past the fold and an annotated version of the file is available on GitHub ( https://github.com/NCommander/win1-hello-world-annotations)\n   Before we even get into the topic of HELLO.C though, there\u2019s a fair bit to be said about these ancient versions of Windows. Windows 1.0, like all pre-95 versions, required DOS to be pre-installed. One quirk however with this specific version of Windows is that it blows up when run on anything later than DOS 3.3. Part of this is due to an internal version check which can be worked around with SETVER. However, even if this version check is bypassed, there are supposedly known issues with running\u00a0 COMMAND.COM. To reduce the number of potential headaches, I decided to simply install PC-DOS 3.3, and give Windows what it wants.\n You might notice I\u00a0 didn\u2019t\u00a0say Microsoft DOS 3.3. The reason is that DOS didn\u2019t exist as a standalone product at the time. Instead, system builders would license the DOS OEM Adaptation Kit and create their own DOS such as Compaq DOS 3.3. Given that PC-DOS was built for IBM\u2019s own line of PCs, it\u2019s generally considered the most \u201cgeneric\u201d version of the pre-DOS 5.0 versions, and this version was chosen for our base. However, due to its age, it has some quirks that would disappear with the later and more common DOS versions.\n PC DOS 3.3 loaded just fine in VirtualBox and \u2014 with the single 720 KiB floppy being bootable \u2014 immediately dropped me to a command prompt. Likewise, FDISK and FORMAT were available to partition the hard drive for installation. Each individual partition is limited, however, to 32 MiB. Even at the time, this was somewhat constrained and Compaq DOS was the first (to the best of my knowledge) to remove this limitation. Running FORMAT C: /S created a bootable drive, but something oft-forgotten was that IBM actually provided an installation utility known as SELECT.\n SELECT\u2019s obscurity primarily lies in its non-obvious name or usage, nor the fact that it\u2019s actually needed to install DOS; it\u2019s sufficient to simply copy the files to the hard disk. However, SELECT does create CONFIG.SYS and AUTOEXEC.BAT so it\u2019s handy to use. Compared to the later DOS setup, SELECT requires a relatively arcane invocation with the target installation folder, keyboard layout, and country-code entered as arguments and simply errors out if these are incorrect. Once the correct runes are typed, SELECT formats the target drive, copies DOS, and finishes installation.\n  Without much fanfare, the first hurdle was crossed, and we\u2019re off to installing Windows.\n  With DOS installed, it was on to Windows. Compared to the minimalist SELECT command, Windows 1.0 comes with a dedicated installer and a simple text-based interface. This bit of polish was likely due to the fact that most users would be expected to install Windows themselves instead of having it pre-installed.\n  Another interesting quirk was that Windows could be installed to a second floppy disk due to the rarity of hard drives of the era, something that we would see later with Microsoft C 4.0. Installation went (mostly) smoothly, although it took me two tries to get a working install due to a typo. Typing WIN brought me to the rather spartan interface of Windows 1.0.\n  Although functional, what was missing was mouse support. Due to its age, Windows predates the mouse as a standard piece of equipment and predates the PS/2 mouse protocol; only serial and bus mice were supported out of the box. There are two ways to solve this problem:\n The first, which is what I used, involves copying MOUSE.DRV from Windows 2.0 to the Windows 1.0 installation media, and then reinstalling, selecting the \u201cMicrosoft Mouse\u201d option from the menu. Re-installation is required because\u00a0 WIN.COM\u00a0is statically linked as part of installation with only the necessary drivers included; there is no option to change settings afterward. The SDK documentation details the static linking process, and how to run Windows in \u201cslow mode\u201d for driver development, but the end result is the same. If you want to reconfigure, you need to re-install.\n The second option, which I was unaware of until after producing my video is to use the PS/2 release of Windows 1.0. Like DOS of the era, Windows was licensed to OEMs who could adapt it to their individual hardware. IBM did in fact do so for their then-new PS/2 line of computers, adding in PS/2 mouse support at the time. Despite being for the PS/2 line, this version of Windows is known to run on AT-compatible machines.\n Regardless, the second hurdle had been passed, and I had a working mouse. This made exploring Windows 1.0 much easier.\n  If you\u2019re interested in trying Windows 1.0, I\u2019d recommend heading over to\u00a0 PCjs.org\u00a0and using their browser-based emulator to play with it as it already has working mouse support and doesn\u2019t require acquiring 35 year old software. Likewise, there are numerous write-ups about this version, but I\u2019d be remiss if I didn\u2019t spend at least a little time talking about it, at least from a technical level.\n Compared to even the slightly later Windows 2.0, Windows 1.0 is much closer to DOSSHELL than any other version of Windows, and is essentially a graphical bolt-on to DOS although through deep magic, it is capable of cooperative multitasking. This was done entirely with software trickery as Windows pre-dates the 80286, and ran on the original 8086.\u00a0 COMMAND.COM\u00a0could be run as a text-based application, however, most DOS applications would launch a full-screen session and take control of the UI.\n This is likely why Windows 1.0 has issues on later versions of DOS as it\u2019s likely taking control of internal structures within DOS to perform borderline magic on a processor that had no concept of memory protection.\n Another oddity is that this version of Windows doesn\u2019t actually have \u201cwindows\u201d per say. Instead applications are tiled, with only dialogue boxes appearing as free-floating Windows. Overlapping Windows would appear in 2.0, but it\u2019s clear from the API that they were at least planned for at some point. Most notable, the CreateWindow() function call has arguments for x and y coordinates.\n My best guess is Microsoft wished to avoid the wrath of Apple who had gone on a legal warpath of any company that too-closely copied the UI of the then-new Apple Macintosh. Compared to later versions, there are also almost no included applications. The most notable applications that were included are: NOTEPAD, PAINT, WRITE, and CARDFILE.\n   While NOTEPAD is essentially unchanged from its modern version, Write could be best considered a stripped-down version of Word, and would remain a mainstay until Windows 95 where it was replaced with Wordpad. CARDFILE likewise was a digital Rolodex. CARDFILE remained part of the default install until Windows 3.1, and remained on the CD-ROM for 95, 98, and ME before disappearing entirely.\n  PAINT, on the other hand, is entirely different from the Paintbrush application that would become a mainstay. Specifically, it\u2019s limited to monochrome graphics, and files are saved in MSP format. Part of this is due to limitations of the Windows API of the era: for drawing bitmaps to the screen, Windows provided Display Independent Bitmaps or DIBs. These had no concept of a palette and were limited to the 8 colors that Windows uses as part of the EGA palette. Color support appears to have been a late addition to Windows, and seemingly wasn\u2019t fully realized until Windows 3.0.\n Paintbrush (and the later and confusingly-named Paint) was actually a third party application created by ZSoft which had DOS and Windows 1.0 versions. ZSoft Paintbrush was very similar to what shipped in Windows 3.0 and used a bit of technical trickery to take advantage of the full EGA palette.\n  With that quick look completed, let\u2019s go back to actually getting to HELLO.C, and that involved getting the SDK installed.\n  Getting the Windows SDK setup is something of an experience. Most of Microsoft\u2019s documentation for this era has been lost, but the\u00a0 OS/2 Museum\u00a0has scanned copies of some of the reference binders, and the second disk in the SDK has both a README file and an installation batch file that managed to have most of the necessary information needed.\n Unlike later SDK versions, it was the responsibility of the programmer to provide a compiler. Officially, Microsoft supported the following tools:\n  Unofficially (and unconfirmed), there were versions of Borland C that could also be used, although this was untested, and appeared to not have been documented beyond some notes on USENET. More interestingly, all the above tools were compilers for DOS, and didn\u2019t have any specific support for Windows. Instead, a replacement linker was shipped in the SDK that could create Windows 1.0 \u201cNE\u201d New Executables, an executable format that would also be used on early OS/2 before being replaced by Portable (PE) and Linear Executables (LX) respectively.\n For the purposes of compiling HELLO.C, Microsoft C 4.0 was installed. Like Windows, MSC could be run from floppy disk, albeit it with a lot of disk swapping. No installer is provided, instead, the surviving PDFs have several pages of COPY commands combined with edits to AUTOEXEC.BAT and CONFIG.SYS for hard drive installation. It was also at this point I installed SLED, a full screen editor as DOS 3.3 only shipped with EDLIN. EDIT wouldn\u2019t appear until DOS 5.0\n After much disk feeding and some troubleshooting, I managed to compile a quick and dirty Hello World program for DOS. One other interesting quirk of MSC 4.0 was it did not include a standalone assembler; MASM was a separate retail product at the time. With the compiler sorted, it was time for the SDK.\n Fortunately, an installation script is provided. Like SELECT, it required listing out a bunch of folders, but otherwise was simple enough to use. For reasons that probably only made sense in 1985, both the script and the README file was on Disk 2, and not Disk 1. This was confirmed not to be a labeling error as the script immediately asks for Disk 1 to be inserted.\n  The install script copies files from four of the seven disks before returning to a command line. Disk 5 contains the debug build of Windows, which are roughly equivalent to checked builds of modern Windows. Disk 6 and 7 have sample code, including HELLO.C.\n With the final hurdle passed, it wasn\u2019t too hard to get to compiled HELLO.EXE.\n    I\u2019m going to go through these at a high level, my annotated hello.c goes into much more detail on all these points.\n  Now that we can build it, it\u2019s time to take a look at what actually makes up the nuts and bolts of a 16-bit Windows application. The first major difference, simply due to age is that HELLO.C uses K&amp;R C simply on the basis of pre-dating the ANSI C function. It\u2019s also clear that certain conventions weren\u2019t commonplace yet: for example, windows.h lacks inclusion guards.\n   Oh boy, the bane of anyone coding in real mode, near and far pointers are a \u201cfeature\u201d that many would simply like to forget. The difference is seemingly simple, a near pointer is nearly identical to a standard pointer in C, except it refers to memory within a known segment, and a far pointer is a pointer that includes the segment selector. Clear right?\n Yeah, I didn\u2019t think so. To actually understand what these are, we need to segue into the 8086\u2019s 20-bit memory map. Internally, the 8086 was a 16-bit processor, and thus could directly address 2^16 bits of memory at a time, or 64 kilobytes in total. Various tricks were done to break the 16-bit memory barrier such as bank switching, or in the case of the 8086, segmentation.\n Instead of making all 20-bits directly accessible, memory pointers are divided into a selector which forms the base of a given pointer, and an offset from that base, allowing the full address space to be mapped. In effect, the 8086 gave four independent windows into system memory through the use of the Code Segment (CS), Data Segment (DS), Stack Segment (SS), and the Extra Segment (ES).\n Near pointers thus are used in cases where data or a function call is in the same segment and only contain the offset; they\u2019re functionally identical to normal C pointers within a given segment. Far pointers include both segment and offset, and the 8086 had special opcodes for using these. Of note is the far call, which automatically pushed and popped the code segment for jumping between locations in memory. This will be relevant later.\n HelloWndProc is a forward declaration for the Hello Window callback, a standard feature of Windows programming. Callback functions always had to be declared FAR as Windows would need to load the correct segment when jumping into application code from the task manager. Hence the far declaration. Windows 1.0 and 2.0, in addition, had other rules we\u2019ll look at below.\n    Windows API functions are all declared as PASCAL calling convention, also known as STDCALL on modern Windows. Under normal circumstances, the C programming language has a nominal calling convention (known as CDECL) which primarily relates to how the stack is cleaned up after a function call. In CDECL-declared functions, its the responsibility of the calling function to clean the stack. This is necessary for vardiac functions (aka, functions that take a variable number of arguments) to work as the callee won\u2019t know how many were pushed onto the stack.\n The downside to CDECL is that it requires additional prologue and epilogue instructions for each and every function call, thereby slowing down execution speed and increasing disk space requirements. Conversely, PASCAL calling convention left cleanup to be performed by the called function and usually only needed a single opcode to clean the stack at function end. It was likely due to execution and disk space concerns that Windows standardized on this convention (and in fact still uses it on 32-bit Windows.\n  if (!hPrevInstance) {/* Call initialization procedure if this is the first instance */if (!HelloInit( hInstance ))return FALSE;} else {/* Copy data from previous instance */GetInstanceData( hPrevInstance, (PSTR)szAppName, 10 );GetInstanceData( hPrevInstance, (PSTR)szAbout, 10 );GetInstanceData( hPrevInstance, (PSTR)szMessage, 15 );GetInstanceData( hPrevInstance, (PSTR)&amp;MessageLength, sizeof(int) );}\n hPrevInstance has been a vestigial organ in modern Windows for decades. It\u2019s set to NULL on program start, and has no purpose in Win32. Of course, that doesn\u2019t mean it was always meaningless. Applications on 16-bit Windows existed in a general soup of shared address space. Furthermore, Windows didn\u2019t immediately reclaim memory that was marked unused. Applications thus could have pieces of themselves remain resident beyond the lifespan of the application.\n hPrevInstance was a pointer to these previous instances. If an application still happened to have its resources registered to the Windows Resource Manager, it could reclaim them instead of having to load them fresh from disk. hPrevInstance was set to NULL if no previous instance was loaded, thereby instructing the application to reload everything it needs. Resources are registered with a global key so trying to register the same resource twice would lead to an initialization failure.\n I\u2019ve also gotten the impression that resources could be shared across applications although I haven\u2019t explicitly confirmed this.\n  NOTE: Mostly cribbled off\u00a0 Raymond Chen\u2019s blog, a great read for why Windows works the way it does.\n  Another concept that\u2019s essentially gone is that memory allocations were classified as either local to an application or global. Due to the segmented architecture, applications have multiple heaps: a local heap that is initialized with the program and exists in the local data segment, and a global heap which requires a far pointer to make access to and from.\n Every executable and DLL got their own local heaps, but global heaps could be shared across process boundaries, and as best I can tell, weren\u2019t automatically deallocated when a process ended. HEAPWALK could be used to see who allocated what and find leaks in the address space. It could also be combined with SHAKER which rearranged blocks of memories in an attempt to shake loose bugs. This is similar to more modern-day tools like valgrind on Linux, or Microsoft\u2019s Application Testing tools.\n    Oh boy, this is a real stinker and an entirely unnecessary one at that. MakeProcInstance didn\u2019t even make it to Windows 3.1 and its entire existence is because Microsoft forgot details of their own operating environment. To explain, we\u2019re going to need to dig a bit deeper into segmented mode programming.\n MakeProcInstance\u2019s purpose was to register a function suitable as a callback. Only functions that have been marked with MPI or declared as an EXPORT in the module file can be safely called across process boundaries. The reason for this is that Windows needs to register the Code Segment and Data Segment to a global store to make function calls safely. Remember, each application had its own local heap which lived in its own selector in DS.\n In real mode, doing a CALL FAR to jump to a far pointer automatically push and popped the code segment as needed, but the data segment was left unchanged. As such, a mechanism was required to store the additional information needed to find the local heap. So far, this is sounding relatively reasonable.\n The problem is that 16-bit Windows has this as an invariant: DS = SS \u2026\n If you\u2019re a real mode programmer, that might make it clear where I\u2019m going with this. The Stack Segment selector is used to denote where in memory the stack is living. SS also got pushed to the stack during a function call across process boundaries along with the previous SP. You might begin to see why MakeProcInstance becomes entirely unnecessary.\n Instead of needing a global registration system for function calls, an application could just look at the stack base pointer (bp) and retrieve the previous SS from there. Since SS = DS, the previous data segment was in fact saved and no registration is required, just a change to how Windows handles function epilogs and prologs. This was actually found by a third party, and a tool\u00a0 FixDS\u00a0was released by Michael Geary that rewrote function code to do what I just described. Microsoft eventually incorporated his fix directly into Windows, and MakeProcInstance disappeared as a necessity.\n  From Raymond Chen\u2019s blog and other sources, one interesting aspect of 16-bit Windows was it was actually designed with the possibility that applications would have their own address space, and there was talk that Windows would be ported to run on top of XENIX, Microsoft\u2019s UNIX-based operating system. It\u2019s unclear if OS/2\u2019s Presentation Manager shared code with 16-bit Windows although several design aspects and API names were closely linked together.\n From the design of 16-bit Windows and playing with it, what\u2019s clear is this was actually future-proofing for Protected Mode on the 80286, sometimes known as segmented protection mode. On 286\u2019s Protected Mode, while the processor was 32-bit, the me\n......", "posttime": "2020-05-25 22:13:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,\u68c0\u67e5,examining", "title": "\u68c0\u67e5Windows 1.0 Hello.c", "title_en": "Examining Windows 1.0 Hello.c", "transed": 1, "url": "https://virtuallyfun.com/wordpress/2020/05/22/examining-windows-1-0-hello-c/", "via": "", "real_tags": ["windows", "\u68c0\u67e5", "examining"]}, {"category": "", "categoryclass": "", "imagename": "6d83a25524af7e489763176c8bd2a06a.jpeg", "infoid": 1003684, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u4e0a\u5468\u5f00\u59cb\uff0cTikTok\u5728Play Store\u4e0a\u7684\u7528\u6237\u8bc4\u8bba\u5df2\u7ecf\u4ece2700\u4e07\u7528\u6237\u4e0b\u964d\u52302200\u4e07\u7528\u6237\u3002\n\u8c37\u6b4c\u5728\u4e00\u5468\u5185\u4eceTikTok\u7684Playstore\u4e2d\u5220\u9664\u4e86500\u591a\u4e07\u6761\u7528\u6237\u8bc4\u8bba\u3002", "note_en": "TikTok\u2019s user reviews have dropped on Play Store from 27 million users to 22 million users from last week\n  Google has removed over 5 million user reviews from Playstore for TikTok in a week.", "posttime": "2020-05-25 21:57:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,play,tiktok", "title": "\u8c37\u6b4c\u4ecePlay Store\u5220\u9664500\u591a\u4e07\u6761\u8bc4\u8bba\u4ee5\u63d0\u9ad8TikTok\u8bc4\u7ea7", "title_en": "Google removes over 5M reviews from Play Store to improve TikTok rating", "transed": 1, "url": "https://www.indiatoday.in/technology/news/story/google-removes-over-5-million-reviews-from-play-store-to-improve-tiktok-rating-1681721-2020-05-25", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "play", "tiktok"]}, {"category": "", "categoryclass": "", "imagename": "44dc1f67a145d9db0c0f222d026f0704.png", "infoid": 1003683, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8fd9\u662f\u4e00\u4e2a80/20\u7684\u5e16\u5b50\u3002\u572820%\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u662f80%\u7684\u4e8b\u5b9e\u3002)\u3002\n\u5927\u591a\u6570\u4e0a\u5e02\u516c\u53f8\u90fd\u662fC-Corps\u3002C-Corp\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u4e3a\u80a1\u4e1c\u8d5a\u94b1\u3002\u5f53\u6709\u4eba\u8d2d\u4e70\u80a1\u7968\u65f6\uff0c\u4ed6\u4eec\u5e0c\u671b\u80a1\u7968\u7684\u4ef7\u503c\u6bcf\u5e74\u81f3\u5c11\u589e\u52a0~8%\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8d44\u672c\u589e\u503c\u3002\u5982\u679c\u4e00\u5bb6\u516c\u53f8\u7684\u80a1\u7968\u4e0d\u80fd\u4ee5\u6bcf\u5e748%\u7684\u901f\u5ea6\u589e\u503c\uff0c\u516c\u53f8\u5c31\u4f1a\u4ed8\u94b1\u8ba9\u4eba\u6301\u6709\u80a1\u7968\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5206\u7ea2\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u516c\u53f8\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u4e3a\u5176\u80a1\u4e1c\u589e\u503c\u8d44\u672c\u6216\u652f\u4ed8\u80a1\u606f\u3002\n\u6709\u5f88\u591a\u80a1\u4e1c\u3002\u4e00\u4e9b\u4eba\u62e5\u6709\u5927\u91cf\u80a1\u4efd\uff0c\u4e00\u4e9b\u4eba\u62e5\u6709\u5c11\u91cf\u80a1\u4efd\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u957f\u671f\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u662f\u6765\u6765\u53bb\u53bb\u7684\u3002\u56e0\u4e3a\u516c\u53f8\u7684\u5b58\u5728\u6700\u7ec8\u662f\u4e3a\u4e86\u8ba9\u80a1\u4e1c\u8d5a\u94b1\uff0c\u6240\u4ee5\u80a1\u4e1c\u6bcf\u80a1\u90fd\u6709\u6295\u7968\u6743\u3002\u6b63\u5982\u9009\u4e3e\u56e2\u4e00\u6837\uff0c\u6709\u4e0d\u540c\u7c7b\u522b\u7684\u9009\u7968\uff0c\u51b3\u5b9a\u7531\u8c01\u4ee3\u8868\u8fd9\u4e9b\u9009\u7968\u8fdb\u5165\u201c\u8463\u4e8b\u5c40\u201d\u3002\u8463\u4e8b\u4f1a\u662f\u4e00\u4e9b\u5f53\u9009\u7684\u4e2a\u4eba\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ee3\u8868\u80a1\u4e1c\u7684\u5229\u76ca\uff0c\u8fd9\u4e9b\u5229\u76ca\u662f\uff1a\n\u80a1\u4e1c\u6295\u7968\u51b3\u5b9a\u8058\u7528\u548c\u89e3\u96c7\u8463\u4e8b\u4f1a\uff0c\u6279\u51c6\u6216\u62d2\u7edd\u4e3a\u4ed6\u4eec\u52a0\u85aa\u3002\n\u901a\u5e38\uff0c\u8463\u4e8b\u4f1a\u6210\u5458\u975e\u5e38\u5173\u5fc3\u4fdd\u4f4f\u81ea\u5df1\u7684\u5de5\u4f5c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u81ea\u5df1\u62e5\u6709\u5f88\u5927\u4e00\u90e8\u5206\u80a1\u4efd\uff0c\u6216\u8005\u56e0\u4e3a\u4ed6\u4eec\u4eab\u6709\u8463\u4e8b\u4f1a\u6210\u5458\u7684\u5730\u4f4d\u548c\u85aa\u916c\u3002\u8463\u4e8b\u4f1a\u6210\u5458\u6709\u4e09\u9879\u4e3b\u8981\u6743\u529b\uff1a\n\u8463\u4e8b\u4f1a\u8bd5\u56fe\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u6216\u5c11\u53c2\u4e0e\u9996\u5e2d\u6267\u884c\u5b98\u7684\u65e5\u5e38\u8fd0\u8425\uff0c\u8fd9\u4e00\u52a8\u6001\u56e0\u516c\u53f8\u800c\u5f02\u3002\n\u4ece\u90a3\u91cc\uff0c\u9996\u5e2d\u6267\u884c\u5b98\u8058\u8bf7\u4e86\u4e00\u7ec4\u4ed6\u4eec\u4fe1\u4efb\u7684\u4eba\uff0c\u5c06\u4ed6\u4eec\u7684\u804c\u8d23\u59d4\u6d3e\u7ed9\u4ed6\u4eec\u3002\u867d\u7136\u9996\u5e2d\u6267\u884c\u5b98\u662f\u4e00\u4e2a\u6cd5\u5f8b\u529e\u516c\u5ba4\uff0c\u4f46\u6cd5\u5f8b\u773c\u4e2d\u7684\u5176\u4f59\u804c\u4f4d\u90fd\u662f\u5458\u5de5\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u9996\u5e2d\u6267\u884c\u5b98\u5bf9\u6bcf\u4e2a\u4eba\u8d1f\u8d23\uff0c\u5e76\u62e5\u6709\u6700\u7ec8\u51b3\u5b9a\u6743\u3002\u56e0\u4e3a\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u80fd\u6269\u5927CEO\u4eec\u7684\u6743\u529b\u3002\u4e0d\u540c\u7684\u5458\u5de5\u88ab\u6388\u4e88\u4e0d\u540c\u7684\u6743\u529b\uff0c\u5e76\u6839\u636e\u4ed6\u4eec\u7684\u98ce\u683c\u4e0b\u653e\u81ea\u5df1\u7684\u8d23\u4efb\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u8d1f\u8d23\u516c\u53f8\u80a1\u4ef7\u6bcf\u5e74\u589e\u957f\u7ea68%\u3002\u7406\u60f3\u7684\u60c5\u51b5\u662f\u66f4\u591a\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u88ab\u8463\u4e8b\u4f1a\u89e3\u96c7\u3002\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\u4e86\uff0c\u7279\u522b\u662f\u5982\u679c\u4ed6\u4eec\u8d85\u8fc7\u4e86\u516c\u53f8\u7684\u76ee\u6807\uff0c\u4ed6\u4eec\u4f1a\u5f97\u5230\u66f4\u9ad8\u7684\u62a5\u916c\u548c\u66f4\u591a\u7684\u80a1\u7968\uff0c\u4ee5\u4fbf\u5728\u80a1\u7968\u5f52\u5c5e\u7684\u540c\u65f6\u8bd5\u56fe\u957f\u671f\u4fdd\u7559\u8fd9\u4e9b\u80a1\u7968\u3002\n\u56e0\u4e3a\u9996\u5e2d\u6267\u884c\u5b98\u548c\u5176\u4ed6\u4eba\u4e00\u6837\u90fd\u662f\u4eba\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u6bcf\u5e74\u4f1a\u5173\u5fc33\u52306\u9879\u4ed6\u4eec\u8ba4\u4e3a\u4f1a\u5e26\u6765\u5927\u91cf\u989d\u5916\u6536\u5165\u7684\u8ba1\u5212\u3002\u4ed6\u4eec\u8fd8\u5173\u5fc3\u7684\u662f\uff0c\u4e0d\u8981\u56e0\u4e3a\u4f24\u5bb3\u54c1\u724c\u6216\u505a\u4e00\u4e9b\u4f1a\u5bfc\u81f4\u957f\u671f\u635f\u5931\u7684\u574f\u4e8b\u800c\u73b7\u6c61\u73b0\u6709\u7684\u6536\u5165\u6765\u6e90\u3002\n\u901a\u8fc7\u67e5\u770b\u6536\u5165\u62a5\u544a\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u51fa\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u5173\u5fc3\u7684\u662f\u4ec0\u4e48\u3002\u4ed6\u4eec\u6240\u8bf4\u7684\u201c\u575a\u5f3a\u201d\u6216\u53cd\u590d\u8c08\u8bba\u7684\u4e1c\u897f\u770b\u8d77\u6765\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u90a3\u5c31\u662f\u201c\u4fdd\u62a4\u548c\u4fdd\u5b58\u201d\u8d44\u4ea7\u3002\u88ab\u5206\u6210\u81ea\u5df1\u7684\u6536\u5165\u6d41\u6216\u663e\u793a\u51fa\u6709\u663e\u7740\u589e\u957f\u7684\u9886\u57df\u901a\u5e38\u662f\u516c\u53f8\u7684\u9ad8\u589e\u957f\u90e8\u5206\u3002\u8fd9\u4e9b\u901a\u5e38\u662f3-6\u4e2a\u5021\u8bae\u3002\n\u5982\u679c\u4f60\u5728\u516c\u53f8\u7684\u90e8\u95e8\u5de5\u4f5c\uff0c\u8ffd\u9010CEO\u7684\u516d\u5927\u4e3e\u63aa\u4e4b\u4e00\uff0c\u5982\u679c\u4f60\u505a\u5f97\u597d\uff0c\u4f60\u901a\u5e38\u4f1a\u5f88\u5feb\u5f97\u5230\u664b\u5347\u3002\u4f60\u4e5f\u4f1a\u5f97\u5230\u5f88\u9ad8\u7684\u62a5\u916c\u3002\u56e0\u4e3a\u77e5\u9053\u5982\u4f55\u5feb\u901f\u53d1\u73b0\u4ef7\u503c\u7684\u4eba\u4e0d\u591a\uff0c\u4f60\u5c06\u5f88\u96be\u88ab\u53d6\u4ee3\u3002\n\u5982\u679c\u4f60\u5728\u516c\u53f8\u7684\u7ef4\u4fee\u90e8\u5de5\u4f5c\uff0c\u4f60\u901a\u5e38\u4f1a\u542c\u5230\u5f88\u591a\u5173\u4e8e\u56e2\u961f\u7684\u201c\u6587\u5316\u201d\uff0c\u66f4\u591a\u7684\u662f\u62c5\u5fc3\u8bf8\u5982\u8d28\u91cf\u8fd9\u6837\u7684\u201c\u57fa\u672c\u9762\u201d\u3002\u4f60\u5728\u8d28\u91cf\u548c\u652f\u6301\u65b9\u9762\u8d8a\u597d\uff0c\u4f60\u7559\u4e0b\u6765\u4fdd\u62a4\u7684\u94b1\u5c31\u8d8a\u591a\u3002\u56e0\u4e3a\u4e0d\u4f1a\u6709\u592a\u591a\u5b66\u4e60\u548c\u6210\u957f\u7684\u7a7a\u95f4\uff0c\u91d1\u94b1\u548c\u4e50\u8da3\u5c06\u662f\u7559\u4f4f\u4f60\u7684\u6700\u91cd\u8981\u7684\u5de5\u5177\u3002\u56e0\u4e3a\u4f60\u7684\u6280\u80fd\u53ef\u80fd\u662f\u53ef\u66ff\u4ee3\u7684\uff0c\u4f60\u7684\u6280\u80fd\u5f88\u5feb\u5c31\u4f1a\u5546\u54c1\u5316\u3002\n\u6bcf\u4e2a\u89d2\u8272\u901a\u5e38\u9700\u89815\u523010\u500d\u4ee5\u4e0a\u7684\u4eba\u5458\u6765\u964d\u4f4e\u98ce\u9669\u3002\u8fd9\u4f1a\u8ba9\u4f60\u89c9\u5f97\u81ea\u5df1\u7684\u8303\u56f4\u5f88\u5c0f\u3002\u5728\u9996\u5e2d\u6267\u884c\u5b98\u4fdd\u62a410\u4ebf\u6216100\u4ebf\u7f8e\u5143\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u4ed81000\u4e07\u7f8e\u5143\u800c\u4e0d\u662f100\u4e07\u7f8e\u5143\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4ee3\u4ef7\u3002\nC-\u516c\u53f8\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u8ba9\u80a1\u4e1c\u8d5a\u94b1\u3002\u80a1\u4e1c\u9009\u4e3e\u8463\u4e8b\u4f1a\uff0c\u4ee3\u8868\u80a1\u4e1c\u76d1\u7763\u516c\u53f8\u7684\u8fd0\u4f5c\u3002\u8463\u4e8b\u4f1a\u4efb\u547d\u4e86\u4e00\u4f4d\u9996\u5e2d\u6267\u884c\u5b98\u6765\u7ba1\u7406\u516c\u53f8\u3002\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u505a\u5f97\u597d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u80fd\u8d5a\u66f4\u591a\u7684\u94b1\u3002\u5982\u679c\u4e8b\u60c5\u8fdb\u5c55\u4e0d\u987a\u5229\uff0c\u94fe\u6761\u7684\u4e0d\u540c\u90e8\u5206\u5c31\u4f1a\u88ab\u89e3\u96c7\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8c01\u88ab\u8ba4\u4e3a\u662f\u95ee\u9898\u7684\u6839\u6e90\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u6bcf\u5e74\u5173\u5fc33-6\u9879\u5021\u8bae\u3002\u8fd9\u4e9b\u4e3e\u63aa\u9700\u8981\u4f7f\u516c\u53f8\u7684\u6536\u5165\u6bcf\u5e74\u589e\u957f\u7ea68%\u3002\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u8fd8\u5173\u5fc3\u786e\u4fdd\u73b0\u6709\u6536\u5165\u6765\u6e90\u4e0d\u4f1a\u51cf\u5c11\uff0c\u4ee5\u53ca\u516c\u53f8\u7684\u957f\u671f\u6536\u5165\u6f5c\u529b\u5f97\u5230\u4fdd\u62a4\u3002\n\u4f5c\u4e3a\u4e00\u540d\u5458\u5de5\uff0c\u4f60\u8981\u4e48\u5728\u516c\u53f8\u7684\u9ad8\u589e\u957f\u90e8\u95e8\u5de5\u4f5c\uff0c\u8fd9\u53ef\u4ee5\u4ece\u516c\u53f8\u7684\u6536\u76ca\u8868\u4e2d\u786e\u5b9a\uff0c\u8981\u4e48\u4f60\u5728\u516c\u53f8\u7684\u4fdd\u62a4\u548c\u7ef4\u62a4\u90e8\u95e8\u6267\u884c\u7ef4\u62a4\u804c\u8d23\u3002", "note_en": "(This is an  80/20 post . It\u2019s 80% of the truth in 20% of the time.)\n Most publicly traded companies are C-Corps. A C-Corp exists to make money for its shareholders. When someone buys a share they are hoping the share\u2019s value will increase by at least ~8% per year. This is called capital appreciation. If a company\u2019s shares don\u2019t increase in value by ~8% per year, companies pay people to own shares. This is called dividends. In summary, companies exist to appreciate capital for its shareholders or to pay dividends.\n   There are many shareholders. Some own a lot of shares and some own a few. Some are in it for the long term while others come and go. Because corporations ultimately exist to make shareholders money, shareholders get a vote per share. Much like the electoral college, there are different classes of votes and the decisions are about who will represent those votes on \u201cThe Board Of Directors\u201d. The Board is some number of elected individuals that get to represent the shareholders\u2019 interests which are:\n  Shareholders vote to hire and fire The Board and approve or reject raises for them.\n   Usually members of The Board care deeply about keeping their jobs because they own a large portion of shares themselves or because they enjoy the status and pay of being a board member. Board members have three primary powers:\n  The dynamics of how little or how much the board tries to involve itself with the CEO\u2019s day to day operations varies from company to company.\n   From there the CEO hires a set of people they trust to delegate their responsibilities to. While the CEO is a legal office, the rest of the positions in the eyes of the law are employees. Technically the CEO is responsible for everybody and has the final decision making power. Because in practice that doesn\u2019t scale CEOs delegate out their powers. Various employees get delegated various powers and depending on their style delegate their own responsibilities.\n CEOs are responsible for growing the company\u2019s stock prices about 8% a year. Ideally more. If they don\u2019t, they usually get fired by The Board. If they do, and especially if they exceed the company\u2019s goals, they get paid more and get more shares to try to keep them for the longterm while their shares vest.\n Because CEOs are human like everybody else, they realistically care about 3 to 6 initiatives a year that they think will generate significant additional revenue. They also care about not tarnishing existing revenue streams by hurting the brand or doing something bad that will result in long term losses.\n You can easily tell what CEOs care about by looking at earning reports. The things they mention as \u201cstrong\u201d or talk about over and over again without any seeming change are the \u201cprotect and preserve\u201d assets. The areas that get split out into their own revenue streams or are shown to have significant growth are usually the high growth parts of the company. Those are usually the 3-6 initiatives.\n   If you work in the part of the company chasing one of the top 6 initiatives of the CEO, you\u2019ll usually get promoted fast if you do well. You\u2019ll also get paid a lot. Because not a lot of people know how to discover value quickly, you\u2019ll be hard to replace.\n If you work in the part of the company in maintenance mode you\u2019ll usually hear a lot about the \u201cculture\u201d of the team and worry more about \u201cfundamentals\u201d such as quality. The better you are at quality and support the more money you\u2019ll be paid to stick around and protect. Since there won\u2019t be much room to learn and grow, money and fun will be the top tools used to keep you.  Because your skills are likely replaceable, your skillset will quickly become commoditized.\n There are usually 5x to 10x more people per role to de-risk. This will make your scope feel tiny. Paying $10M instead of $1M is a small price to pay when the CEO is protecting $1B or $10B.\n  C-Corporations exist to make shareholders money. Shareholders elect the Board of Directors to supervise the operation of the corporation for them. The Board Of Directors put a CEO in charge to run the company. If everyone does well, everyone makes more money. If something is not going well, different parts of the chain get fired depending on who\u2019s perceived to be the source of the problem.\n CEOs care about 3-6 initiatives per year. Those initiatives need to grow the company\u2019s revenue about 8% per year. CEOs also care about making sure existing sources of revenue don\u2019t decline and that the company\u2019s long term revenue potential is protected.\n As an employee you\u2019re either working in the high growth sectors of the company as can be determined by the company\u2019s earning statement or you\u2019re on maintenance duty in the protect and preserve parts of the company.", "posttime": "2020-05-25 21:57:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6280\u672f,quickly", "title": "\u5728\u5927\u6280\u672f\u516c\u53f8\u5feb\u901f\u664b\u5347\u9700\u8981\u77e5\u9053\u4ec0\u4e48", "title_en": "What to know to get promoted quickly in Big Tech", "transed": 1, "url": "https://philippcannons.com/what-you-should-know-about-how-corporations-work/", "via": "", "real_tags": ["\u6280\u672f", "quickly"]}, {"category": "", "categoryclass": "", "imagename": "ac90d32b417868cfe0d109c0677b8187.png", "infoid": 1003682, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u4f7f\u7528\u5728OS X\u3001Windows\u548cLinux\u4e0a\u8fd0\u884c\u7684Smalltalk-80\u7cfb\u7edf\u7684\u84dd\u76ae\u4e66C++\u5b9e\u73b0\u7684My&#34\uff1bby the Bluebook&#34\uff1bC++\u3002\u81ea\u4ece\u7b2c\u4e00\u6b21\u57281981\u5e748\u6708\u7684Byte\u6742\u5fd7\u4e0a\u8bfb\u5230\u5173\u4e8eSmalltalk\u7684\u5185\u5bb9\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u5bf9\u5b83\u5f88\u611f\u5174\u8da3\u3002\u90a3\u65f6\uff0c\u6211\u4eec\u6240\u6709\u7684\u90fd\u662f\u8fd0\u884c\u901f\u5ea6\u5f88\u6162\u76848\u4f4d\u8ba1\u7b97\u673a\uff0c4K\u5185\u5b58\u7684\u8fd0\u884c\u901f\u5ea6\u8fd8\u4e0d\u591f\u5feb\uff0c\u4e0d\u8db3\u4ee5\u505a\u4efb\u4f55\u6709\u7528\u7684\u4e8b\u60c5\u3002\u5f53\u6211\u901a\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u60ca\u5446\u4e86--\u8fd9\u662f\u4e00\u79cd\u672a\u6765\u4e3b\u4e49\u7684\u5916\u661f\u4eba\u6280\u672f\uff0c\u80af\u5b9a\u8d85\u51fa\u4e86\u6211\u7684\u80fd\u529b\u8303\u56f4\u30021988\u5e74\uff0c\u5728\u534e\u76db\u987f\u5927\u5b66\u5c31\u8bfb\u671f\u95f4\uff0c\u6211\u63a5\u89e6\u5230\u4e86\u4e24\u4ef6\u4ee4\u4eba\u96be\u5fd8\u7684\u6280\u672f\uff1a\u7b2c\u4e00\u4ef6\u662f\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u7684NeXTcube\uff0c\u53e6\u4e00\u4ef6\u662fTektronix(4400\uff1f)\u3002\u8fd0\u884cSmalltalk-80\u7684\u5de5\u4f5c\u7ad9\u3002\u8fd9\u4e24\u4e2a\u90fd\u66fe\u7ecf\u662f\uff0c\u73b0\u5728\u4ecd\u7136\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\u3002\u6211\u5728NeXTcube\u7684\u540e\u4ee3--MacBook Pro\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5b9e\u73b0\u8fd9\u4e2aSmalltalk\u662f\u518d\u5408\u9002\u4e0d\u8fc7\u7684\u4e86\u3002\n90\u5e74\u4ee3\u672b\uff0c\u6211\u53d1\u73b0\u6211\u5728\u65bd\u4e50\u5e15\u6d1b\u5e15\u514b\u7684\u82f1\u96c4\u4eec\u91cd\u65b0\u7ec4\u5efa\u4e86\u4e50\u961f\uff0c\u5e76\u91ca\u653e\u4e86Squeak\u3002\u6211\u5f88\u9ad8\u5174\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u7cfb\u7edf\u6765\u73a9\u3002\u4f46\u662f\uff0c\u6211\u5e76\u4e0d\u5728\u610f\u5916\u89c2\u548c\u611f\u89c9\uff0c\u9519\u8fc7\u4e86\u6211\u5728Tektronix\u7cfb\u7edf\u4e0a\u4f53\u9a8c\u5230\u7684\u6781\u7b80\u4e3b\u4e49\u3002\u6211\u8fd8\u6709\u4e00\u672c\u84dd\u76ae\u4e66\u548c\u7eff\u76ae\u4e66\uff0c\u603b\u662f\u5e7b\u60f3\u7740\u81ea\u5df1\u5b9e\u73b0\uff0c\u4f46\u6211\u65e0\u6cd5\u8bbf\u95ee\u4f7f\u7528\u7684\u79fb\u690d\u5de5\u5177\u5305\u3002\u51e0\u5e74\u524d\uff0c\u5f53\u6211\u627e\u5230\u9a6c\u91cc\u5965\u00b7\u6c83\u5c14\u5947\u79d1(Mario Wolczko)\u7684\u7f51\u7ad9http://www.wolczko.com/st80/\u65f6\uff0c\u60c5\u51b5\u53d1\u751f\u4e86\u53d8\u5316\u3002\u4ed6\u6709\u65bd\u4e50Release 2\u865a\u62df\u6620\u50cf(\u4ece\u78c1\u5e26\u4e0a)\uff0c\u8fd8\u6709\u64cd\u4f5c\u624b\u518c\u548c\u84dd\u76ae\u4e66\u4e2d\u7684\u624b\u5199Smalltalk\u6e90\uff01\u4ed6\u4e5f\u6709\u4ed6\u7684\u5b9e\u73b0\uff0c\u8fd9\u662f\u7528ANSI C\u4e4b\u524d\u7f16\u5199\u7684\uff0c\u4f46\u662f\uff0c\u5c3d\u7ba1\u82b1\u4e86\u5f88\u591a\u5c0f\u65f6\uff0c\u6211\u8fd8\u662f\u65e0\u6cd5\u8fd0\u884c\u4efb\u4f55\u4e1c\u897f\u3002\u7136\u540e\u6211\u5f00\u59cb\u8003\u8651\u81ea\u5df1\u5b9e\u73b0\u3002\n\u6211\u77e5\u9053\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u56e0\u4e3a\u4e66\u4e2d\u65e0\u7591\u4f1a\u6709\u9519\u8bef\u3002\u6211\u4e5f\u77e5\u9053C++\u559c\u6b22\u4ece\u96f6\u5f00\u59cb\u7d22\u5f15\u6570\u7ec4\uff0c\u800cSmalltalk\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5\u80af\u5b9a\u4f1a\u6709\u5dee\u5206\u9519\u8bef(\u6709)\u3002SmallTalk\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4e0eC/C++\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4e5f\u5bf9\u6b64\u4fdd\u6301\u8b66\u60d5(\u503c\u5f97\u79f0\u8d5e\u7684\u662f\uff0c\u9664\u4e86\u5c11\u6570\u4f8b\u5916\uff0c\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u4e86\u62ec\u53f7\uff0c\u8fd9\u4e0d\u662f\u95ee\u9898)\u3002\u7136\u540e\u662f\u5f15\u7528\u8ba1\u6570\uff0c\u6240\u4ee5\u53ef\u80fd\u4e5f\u4f1a\u6709\u5f15\u7528\u8ba1\u6570\u9519\u8bef(\u6709)\uff0c\u6700\u540e\u5185\u5b58\u662f\u4e00\u580616\u4f4d\u5b57\uff0c\u6240\u4ee5\u60a8\u53ef\u80fd\u4f1a\u610f\u5916\u5730\u5b58\u50a8/\u83b7\u53d6\u9519\u8bef\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u6700\u91cd\u8981\u7684\u662f\uff0cAlto\u662f\u5927\u7aef\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u5904\u7406(\u6211\u6309\u7167Xerox\u6307\u5357\u7684\u5efa\u8bae\u5b57\u8282\u4ea4\u6362\u4e86\u865a\u62df\u6620\u50cf--\u4ed6\u4eec\u7684\u6307\u5bfc\u5f88\u53ef\u9760\uff0c\u4f46\u4ed6\u4eec\u5ffd\u7565\u4e86\u5b57\u8282\u4ea4\u6362\u6d6e\u70b9\u7684\u9700\u8981)\u3002\n\u6211\u4ece2019\u5e7412\u6708\u4e0b\u65ec\u5f00\u59cb\u505a\u8fd9\u9879\u5de5\u4f5c\uff0c\u4f46\u51e0\u4e2a\u6708\u540e\u624d\u771f\u6b63\u4e13\u6ce8\u4e8e\u8fd9\u4ef6\u4e8b\uff0c\u76f4\u5230\u79d1\u7f57\u5a1c\u75c5\u6bd2\u6765\u88ad\uff0c\u6211\u51b3\u5b9a\u5c06\u81ea\u5df1\u9694\u79bb\uff0c\u4ee5\u514d\u5c06\u75c5\u6bd2\u4f20\u64ad\u7ed9\u5176\u4ed6\u4eba\u3002\u7136\u540e\u6211\u8ba4\u771f\u5730\u505a\u4e86\u8fd9\u4ef6\u4e8b\u3002\u65bd\u4e50\u79fb\u690d\u5de5\u5177\u5305\u5305\u62ec\u53c2\u8003\u8ddf\u8e2a\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u4e0e\u60a8\u7684\u7cfb\u7edf\u8fdb\u884c\u6bd4\u8f83\u3002\u5f53\u6211\u7ecf\u8fc7Trace2\u65f6\uff0c\u6211\u611f\u89c9\u5230\u4e00\u79cd\u96be\u4ee5\u7f6e\u4fe1\u7684\u5306\u5fd9\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u7cfb\u7edf\u8fd0\u884c\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u5185\u5b58\u7528\u5b8c\u4e86\u3002\u6211\u4e0d\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48(\u8fd9\u662f\u5728\u6211\u8ba9\u5c55\u54c1\u6b63\u5e38\u5de5\u4f5c\u4e4b\u524d)\u3002\u4e3a\u4e86\u83b7\u5f97\u53ef\u89c1\u6027\uff0c\u6211\u4f7f\u7528show\uff1a\u548cerror\uff1a\u9009\u62e9\u5668\u4ee5\u53ca\u5728\u5806\u6808\u4e0a\u538b\u5165\u7684\u770b\u8d77\u6765\u5f88\u5927\u7684\u5b57\u7b26\u4e32\u622a\u53d6\u5e76\u8bb0\u5f55\u4e86\u6d88\u606f\u53d1\u9001\u3002\u679c\u4e0d\u5176\u7136\uff0c\u5982\u679cSmallTalk\u8c03\u8bd5\u5668\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5c31\u4f1a\u663e\u793a\u4e00\u4e2a\u56de\u6eaf\u5b57\u7b26\u4e32\u3002\u4f46\u662f\uff0c\u5f53\u5c4f\u5e55\u88ab\u7ed8\u5236\u6210\u6211\u53ef\u4ee5\u8f6c\u50a8\u5230.pbm\u6587\u4ef6\u7684\u5f62\u5f0f\u65f6\uff0c\u6211\u80fd\u591f\u8ba1\u7b97\u51fa\u6211\u5728\u54ea\u91cc\u641e\u7838\u4e86\uff0c\u7136\u540e\u53c8\u611f\u89c9\u5230\u4e86\u53e6\u4e00\u79cd\u5feb\u611f\uff0c\u7136\u540e\u770b\u770b\uff01\u4e4b\u540e\uff0c\u6211\u4f7f\u7528SDL\u5b9e\u73b0\u4e86\u5bf9Smalltalk\u7684\u4e3b\u673a\u56fe\u5f62\u652f\u6301\uff0c\u5e76\u5b9e\u73b0\u4e86\u8f93\u5165\u539f\u8bed\uff0c\u8fd9\u6837\u6211\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u7684\u9f20\u6807\u548c\u952e\u76d8\u3002\u6211\u7ec8\u4e8e\u80fd\u591f\u771f\u6b63\u4f7f\u7528\u8fd9\u4e2a\u7cfb\u7edf\u4e86\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u7cfb\u7edf\u5e2e\u52a9\u6211\u627e\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff01\u56fe\u5f62\u5316\u7684Smalltalk\u68c0\u67e5\u5668\u548c\u8c03\u8bd5\u5668\u771f\u7684\u5e2e\u6211\u5b8c\u6210\u4e86\u7e41\u91cd\u7684\u4efb\u52a1\uff0c\u4e3a\u6211\u8282\u7701\u4e86\u65e0\u6570\u4e2a\u5c0f\u65f6\u3002\u8be5\u7cfb\u7edf\u7684\u5f39\u6027\u4ee4\u4eba\u60ca\u53f9\u3002\n\u4f46\u662f.\u3002\u56e0\u4e3a\u6ca1\u6709\u53ef\u7528\u7684\u6587\u4ef6\u7cfb\u7edf\u652f\u6301(\u7cfb\u7edf\u6620\u50cf\u4f7f\u7528Alto\u6587\u4ef6\u7cfb\u7edf\u7c7b)\uff0c\u6240\u4ee5\u6211\u53ea\u80fd\u5728\u6e90\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u53cd\u7f16\u8bd1\u7684\u4ee3\u7801(\u8fd9\u4ecd\u7136\u975e\u5e38\u6709\u7528\uff0c\u60a8\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u7f16\u8f91--\u53ea\u662f\u5b83\u6ca1\u6709\u663e\u793a\u60a8\u5b9e\u9645\u4f7f\u7528\u7684\u4e34\u65f6\u540d\u79f0\uff0c\u60a8\u7684\u6ce8\u91ca\u4e5f\u4f1a\u4e22\u5931)\u3002\u55ef\uff0c\u6211\u5fc5\u987b\u51b3\u5b9a\u8be5\u600e\u4e48\u505a\u3002\u6211\u662f\u5426\u5e94\u8be5\u5c1d\u8bd5\u6a21\u4effAlto\u6587\u4ef6\u7cfb\u7edf\uff1f\u6211\u51b3\u5b9a\u4e0d\u8fd9\u6837\u505a\uff0c\u5e76\u9075\u5faaTektronix\u5728\u7eff\u76ae\u4e66\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5--\u6211\u5c06FileDirectory\u3001File\u548cPage\u5b50\u7c7b\u5316\uff0c\u5e76\u521b\u5efa\u4e86PosiFileDirectory\u3001PosiFile\u548cPosiPage\u3002\u6211\u542f\u52a8\u4e86VSCode\u5e76\u4e3a\u5b83\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u6211\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5e76\u7c98\u8d34\u5230\u6211\u7684Smalltalk\u4e2d(\u6211\u6dfb\u52a0\u4e86\u4e00\u79cd\u5c06\u526a\u8d34\u677f\u4e2d\u7684\u5b57\u7b26\u7c98\u8d34\u5230\u8f93\u5165\u961f\u5217\u4e2d\u7684\u65b9\u6cd5)\u3002\u5b9e\u73b0\u8fd9\u4e9b\u4e4b\u540e\uff0c\u6211\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u6ee1\u610f\u4e4b\u540e\uff0c\u6211\u4f7f\u7528Smalltalk-80\u548cSmalltalk-80\u7684\u6587\u4ef6\u6d41\u521b\u5efa\u4e86SourceFiles\u6570\u7ec4\u3002\n\u6309\u7167\u4e66\u6765\u6784\u5efa\u4e1c\u897f\u7684\u597d\u5904\u662f\uff0c\u6709\u4e66\u8bb0\u5f55\u4e86\u5982\u4f55\u4f7f\u7528\u7cfb\u7edf\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff01\n\u60a8\u9700\u8981\u5b89\u88c5SDL 2.0.12\u6216\u66f4\u9ad8\u7248\u672c\u3002\u60a8\u53ef\u4ee5\u4ecehttp://libsdl.org.\u4e0b\u8f7d\u3002\u9009\u62e9\u5f00\u53d1\u5e93.dmg\u5e76\u5b89\u88c5\u3002\u7136\u540e\uff0c\u8fdb\u5165OSX\u6587\u4ef6\u5939\u5e76\u952e\u5165make\u3002\u7136\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u547d\u4ee4\u884c\u9009\u9879\u90e8\u5206\u4e86\u89e3\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2aXcode\u9879\u76ee\u3002\n\u6211\u5df2\u7ecf\u5305\u542b\u4e86SDL 2.0.12\u5934\u6587\u4ef6/\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6240\u4ee5\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u5728WINDOWS\u76ee\u5f55\u4e2d\u6253\u5f00\u9879\u76ee\u5e76\u70b9\u51fbRun\u3002\n\u60a8\u9700\u8981\u5b89\u88c5SDL 2.0.12\u6216\u66f4\u9ad8\u7248\u672c\u3002\u60a8\u53ef\u4ee5\u8f6c\u5230http://libsdl.org\u4e0b\u8f7d\u5e76\u81ea\u5df1\u6784\u5efa\u5b83\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u5b83\u3002\n\u7136\u540e\uff0ccd\u8fdb\u5165\u8be5\u9879\u76ee\u7684Linux\u5b50\u76ee\u5f55\u5e76\u952e\u5165make\u3002\u7136\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\nSmalltalk\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u7684#Define\u8bbe\u7f6e\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002\n\u5bf9\u8c61Memory#\u5b9a\u4e49\u786e\u5b9a\u8981\u4f7f\u7528\u7684\u5783\u573e\u6536\u96c6\u65b9\u6848(\u84dd\u76ae\u4e66\u4e2d\u63cf\u8ff0\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u53ef\u7528)\u3002\n\u8fd9\u672c\u4e66\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u6d88\u8017\u5806\u6808\u7a7a\u95f4\u7684\u9012\u5f52\u6807\u8bb0\u7b97\u6cd5\u3002\u5982\u679c\u5b9a\u4e49\u4e86\u6b64\u7b26\u53f7\uff0c\u5219\u4f7f\u7528\u8be5\u7b97\u6cd5\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4f7f\u7528\u66f4\u590d\u6742\u3001\u66f4\u667a\u80fd\u7684\u6307\u9488\u53cd\u8f6c\u65b9\u6cd5\u3002\nGC_MARK_SWEEP\u548cGC_REF_COUNT\u6807\u5fd7\u4e0d\u662f\u4e92\u65a5\u7684\u3002\u5982\u679c\u4e24\u8005\u90fd\u5df2\u5b9a\u4e49(\u5e76\u4e14\u5b83\u4eec\u90fd\u5df2\u5b9a\u4e49)\uff0c\u5219\u5c06\u6267\u884c\u6b63\u5e38\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u4ec5\u5728\u5185\u5b58\u8017\u5c3d\u6216\u5bf9\u8c61\u8868\u5df2\u6ee1\u65f6\u624d\u6267\u884c\u5b8c\u5168\u5783\u573e\u56de\u6536\u3002SmallTalk-80\u751f\u6210\u8bb8\u591a\u5faa\u73af\u5f15\u7528(\u4f8b\u5982\uff0c\u901a\u8fc7\u4e34\u65f6\u5b57\u6bb5\u7684MethodContext\u5f15\u7528\uff0c\u901a\u8fc7\u53d1\u9001\u8005\u5b57\u6bb5\u53cd\u5411\u5f15\u7528\u4e0a\u4e0b\u6587\u7684BlockContext)\u3002Mark and Sweep Only\u65b9\u6cd5\u5c06\u5bfc\u81f4\u8bb8\u591a\u9891\u7e41\u7684\u6536\u96c6\uff0c\u56e0\u4e3a\u5728\u7cfb\u7edf\u8fd0\u884c\u65f6\uff0c\u5bf9\u8c61\u8868\u5c06\u5feb\u901f\u586b\u5145MethodContext\u548c\u5176\u4ed6\u9891\u7e41\u5206\u914d\u7684\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u4e00\u4e9bSmalltalk\u5b9e\u73b0\u4f1a\u56de\u6536\u4e0a\u4e0b\u6587\u3002\n\u63d0\u4f9b\u89e3\u91ca\u5668#\u5b9a\u4e49\u662f\u4e3a\u4e86\u5141\u8bb8\u5305\u542b/\u6392\u9664\u53ef\u9009\u7684\u539f\u8bed\u4ee5\u53ca\u4e00\u4e9b\u6709\u7528\u7684\u8c03\u8bd5\u65b9\u6cd5\u3002\u5982\u679c\u672a\u5b9e\u73b0\u53ef\u9009\u539f\u8bed\uff0c\u5219\u6539\u4e3a\u6267\u884cSmalltalk\u56de\u9000\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\n\u5728Windows\u4e0b\u8fd0\u884c\u65f6\uff0c\u6211\u9047\u5230\u4e86\u4e24\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u5982\u679c\u6309\u4f4f\u9f20\u6807\u5de6\u952e(\u4f8b\u5982\uff0c\u91cd\u65b0\u6784\u5efa\u7a97\u53e3\u65f6)\uff0c\u9f20\u6807\u5149\u6807\u4e0d\u4f1a\u53ef\u9760\u5730\u6539\u53d8\u3002\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u9f20\u6807\u5149\u6807\u5728\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u5668\u4e0a\u975e\u5e38\u5c0f\uff0c\u5373\u4f7f\u8bbe\u7f6e\u4e86\u7cfb\u7edf\u7f29\u653e\u9009\u9879\u6765\u8865\u507f\u4e5f\u662f\u5982\u6b64\u3002\u51fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u6211\u6dfb\u52a0\u4e86\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5448\u73b0\u9f20\u6807\u5149\u6807\u800c\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u9009\u9879\u3002\u53ef\u4ee5\u5b9a\u4e49SOFTWARE_MOUSE_CURSOR\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5982\u679c\u5b83\u662fWindows\u7248\u672c\uff0c\u6211\u4f1a\u6709\u6761\u4ef6\u5730\u8bbe\u7f6e\u5b83\u3002\u5b83\u53ef\u4ee5\u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\u5de5\u4f5c\uff0c\u4f46\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6ca1\u6709\u5b83\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\nSmalltalk\u5e94\u7528\u7a0b\u5e8f\u63a5\u53d7\u8bb8\u591a\u53c2\u6570\u3002\u552f\u4e00\u5fc5\u9700\u7684\u53c2\u6570\u662f-directory path\uff0c\u5b83\u6307\u5b9a\u53ef\u4ee5\u627e\u5230\u5feb\u7167\u6620\u50cf\u7684\u76ee\u5f55\u3002\u4ee5\u4e0b\u662f\u5b8c\u6574\u7684\u540d\u5355\uff1a\n\u6307\u5b9a\u5305\u542b\u5feb\u7167\u56fe\u50cf\u4ee5\u53caSmalltalk-80.source\u548cSmalltalk-80.change\u6587\u4ef6\u7684\u76ee\u5f55\u3002\u76ee\u5f55\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u6587\u4ef6\u90fd\u53ef\u4ee5\u4f7f\u7528\u6b63\u5e38\u7684\u6587\u4ef6/\u76ee\u5f55\u8bbf\u95ee\u65b9\u6cd5\u4eceSmalltalk-80\u8bbf\u95ee\u3002\n\u6253\u5f00\u5782\u76f4\u540c\u6b65\u4ee5\u4f7f\u5e27\u901f\u7387\u4e0e\u76d1\u89c6\u5668\u5237\u65b0\u7387\u540c\u6b65\u3002\u8fd9\u53ef\u4ee5\u6d88\u9664\u5c4f\u5e55\u6495\u88c2\u548c\u5176\u4ed6\u4f2a\u50cf\uff0c\u4f46\u4ee3\u4ef7\u662f\u4e00\u4e9b\u8f93\u5165\u5ef6\u8fdf\u3002\n\u5982\u679c\u4e0d\u4f7f\u7528vsync\uff0c\u5219\u53ef\u4ee5\u5728\u5411GPU\u5448\u73b0\u4e0b\u4e00\u5e27\u4e4b\u540e\u6307\u5b9a\u5ef6\u8fdf\u3002\u8fd9\u5bf9\u4e8e\u964d\u4f4eCPU\u4f7f\u7528\u7387\uff0c\u540c\u65f6\u4ecd\u7136\u4eab\u53d7\u4e0d\u4f7f\u7528vsync\u7684\u597d\u5904\u975e\u5e38\u6709\u7528\n\u6307\u5b9a\u663e\u793a\u5e94\u52a0\u500d\u3002\u5bf9\u6709\u8fdc\u89c1\u7684\u4eba\u6216\u5728\u975e\u5e38\u9ad8\u5206\u8fa8\u7387\u7684\u663e\u793a\u5668\u4e0a\u8fd0\u884c\u7684\u4eba\u5f88\u6709\u5e2e\u52a9", "note_en": "Welcome to my &#34;by the Bluebook&#34; C++ implementation of the Smalltalk-80 system that runs on OS X, Windows, and Linux! Since first reading about Smalltalk in the August 1981 issue of Byte magazine, I have always been intrigued by it. At that time all we had were slow 8-bit computers with 4K of RAM barely running fast enough to do anything useful. I was stunned as I read through the article -- this was futuristic alien technology that was surely beyond my reach. In 1988, while attending the University of Washington, I was exposed to two memorable pieces of technology: The first was Steve Job&#39;s NeXTCube and the other was a Tektronix (4400?) workstation running Smalltalk-80. Both were, and still are, amazing. It was only fitting that I implemented this Smalltalk on a descendent of the NeXTCube -- a MacBook Pro laptop.\n In the late 90s, I discovered that my heroes from Xerox PARC got the &#34;band back together&#34; and released Squeak. I was thrilled to finally have a nice system to play with. But, I didn&#39;t care for the look and feel and missed the minimalism I had experienced on the Tektronix system. I also had a copy of the Bluebook and Greenbook and always daydreamed about making my own implementation, but I had no access to the porting kit that was used. That changed a few years ago when I found Mario Wolczko&#39;s website:  http://www.wolczko.com/st80/ He had the Xerox release 2 virtual image (from magnetic tape) as well as the instruction manual and hand-typed smalltalk sources from the Bluebook! He also had his implementation, which was written in pre-ANSI C. But, despite many hours, I was not able to get anything to run. I then started to consider making my own implementation.\n I knew this wouldn&#39;t be an easy task, as there would undoubtedly be errors in the book (there were). I also knew that C++ likes to index arrays starting from zero whereas Smalltalk starts at 1, so surely there would be off-by-one errors (there were). Smalltalk has a different operator precedence than C/C++, so I was on guard about that as well (to their credit, with a few exceptions, the expressions were parenthesized in a way where that wasn&#39;t an issue). Then there is reference counting being used, so there would probably be reference counting errors too (there were) and finally memory was a bunch of 16-bit words so you could accidentally store/fetch the wrong thing without realizing it. To top it off, the Alto is a big-endian system so I had to decide what to do about that (I byte swapped the virtual image as recommended by the Xerox guide -- their guidance was solid, but they missed the need to byte swap floats).\n I started working on this in late December of 2019, but didn&#39;t really focus on it for a few months until the Corona virus struck and I decided to &#34;quarantine myself&#34; so as not to vector the virus to someone else. I then worked in earnest on it. The Xerox porting kit included reference &#34;trace files&#34; you could compare against your system. I felt an incredible rush when I passed trace2. After that the system ran a little while longer, and ran out of memory. I had no idea what was going on (this is before I had the display stuff working). To gain visibility, I intercepted and logged message sends using the  show: and  error: selectors as well as big-looking strings being pushed on the stack. Sure enough there was a traceback string that would have been displayed by the smalltalk debugger had only it made it that far. But, I was able to figure where I screwed up and then felt another rush when the screen was drawn into a Form I was able to dump to a  .pbm file and see! After that I implemented the host graphical support for Smalltalk using SDL and implemented the input primitives so I had a working mouse and keyboard. I was finally able to really use the system. At that point, the system helped me find other issues! The graphical Smalltalk inspector and debugger really did the heavy lifting for me and saved me countless hours. The resiliency of the system is amazing.\n But... since no file system support was available (the system image used the Alto file system classes), I could only see decompiled code in the source browser (which is still very useful and you could edit that -- it just didn&#39;t show temporary names you actually used and you lose your comments). Well, I had to decide what to do about that. Should I try to emulate the Alto file system? I decided against that and followed the approach used by Tektronix in the Greenbook -- I subclassed FileDirectory, File, and Page and created PosixFileDirectory, PosixFile, and PosixPage. I fired up VSCode and wrote an implementation for them that I could copy and paste into my Smalltalk (I added a way to paste characters from the clipboard into the input queue). After I had those implemented, I tested them, and once I was satisfied, I created the SourceFiles array with file streams for Smalltalk-80.sources and Smalltalk-80.changes. Once I did that --the instant I assigned that variable -- the magic happened. BANG! All of a sudden I could browse real source code in the browser! Now that I had a working file system, I re-pasted my implementation which was then stored by the system (to the changes file) and I could finally see my implementation with real temporary names and comments! It was the very delightful bootstrapping experience that makes you grin from ear to ear. I then did  Smalltalk condenseChanges and saved the image. After I got it working on OS X, I moved it over to Windows in under an hour and also got it running under Linux in 15 minutes (for Linux, I tested it in a VirtualBox without graphics acceleration and the performance was bad -- hopefully on a &#34;real&#34; Linux machine it performs better).\n Is the system usable? YES! You will definitely be constrained by the size of the object table, but you can still do stuff. I have to admit that I prefer the spartan look of Smalltalk-80 vs Pharo and Squeak (even though they are far superior).\n There&#39;s a lot more to tell, but that&#39;s the gist of it. It was fun to do, and I&#39;m glad that after all these years I was able to make it happen. I am still amazed by what the geniuses at PARC did. To think that amazing system I read about in 1981 was almost ten years old at the time of publication is mind boggling.\n  Smalltalk-80 uses a three button mouse labeled Red (the left mouse button), Yellow (the middle), and Blue (the right button). The Red button is for clicking and selection. The Yellow is for running commands like &#34;doit&#34; and the Blue for things like closing a window. If you have a three button mouse you can use the  -three command line option to use the traditional mapping. If you do  not have a three button mouse, you can use the alternate (and default) mapping:\n    The nice thing about building things by the book is there are books to document how to use the system and how it works!\n   You will need to install SDL 2.0.12 or later. You can download it from  http://libsdl.org. Choose the development library  .dmg and install. Then, go into the osx folder and type  make. You should then be able to do:\n  See the command line options section below for what this means.There is an xcode project you can open if you like.\n  I have included the SDL 2.0.12 headers/binary so all you need to do is open the project in the windows directory and hit Run.\n  You need to install SDL 2.0.12 or later. You can either go to  http://libsdl.org and download and build it yourself or use a package manager to install it.\n Then, cd into the linux subdirectory of this project and type  make.You should then be able to do:\n    The behavior of the Smalltalk application can be customized through  #define settings in the header file for each module.\n  The Object Memory  #defines determines the garbage collection scheme to be used (all the approaches described in the Bluebook are available).\n The book describes a recursive marking algorithm that is simple, but consumes stack space. If this symbol is defined, that algorithm is used. If  not the more complicated, and clever,  pointer reversal approach is used instead.\n The  GC_MARK_SWEEP and  GC_REF_COUNT flags are  not mutually exclusive. If both are defined (and they are), normal reference counting will be performed, with full garbage collection only when memory is exhausted or the object table becomes full. Smalltalk-80 generates a lot of cyclical references (e.g. a MethodContext references, through a temporary field, a BlockContext that back references the context through the  sender field). A Mark and Sweep only approach will result in many frequent collections as the object table will quickly fill with MethodContexts and other frequently allocated objects as the system runs. Some Smalltalk implementations recycle contexts for this reason.\n  The interpreter  #defines are provided to allow the inclusion/exclusion of optional primitives as well as a handful of helpful debugging methods. If an optional primitive is not implemented, a Smalltalk fall-back is executed instead. This can have a significant effect on performance.\n   When running under Windows I ran into two problems. First, the mouse cursor wouldn&#39;t reliably change if the left mouse button was being held down (e.g. when reframing a window). The second issue was that the mouse cursor was very small on high resolution displays, even when system scaling options were set to compensate for it. For these reasons, I added the option to have the app render the mouse cursor rather than the operating system. The  SOFTWARE_MOUSE_CURSOR can be defined to do this. I set this conditionally if it&#39;s a Windows build. It works on the other platforms, but is unnecessary as they behave properly without it.\n  The Smalltalk application takes a number of arguments. The only required argument is  -directory  path which specifies the directory where the snapshot image can be found. Here is the complete list:\n Specifies the directory that contains the snapshot image, as well as the Smalltalk-80.sources and Smalltalk-80.changes files. Any other files in the directory will be accessible from Smalltalk-80 using the normal file/directory access methods.\n    Turn on vertical sync for synchronizing the frame rate with the monitor refresh rate. This can eliminate screen tearing and other artifacts, at the cost of some input latency.\n if vsync is  not used a delay can be specified after presenting the next frame to the GPU. This is useful for lowering the CPU usage while still enjoying the benefits of not using vsync\n Specifies that the display should be doubled. Helpful for farsighted folks, or people running on very high resolution displays", "posttime": "2020-05-25 21:40:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,smalltalk", "title": "Dbanay/Smalltalk-\u201cby the Blue book\u201dC++Implementation of Smalltalk-80", "title_en": "Dbanay/Smalltalk \u2013 \u201cby the blue book\u201d C++ implementation of Smalltalk-80", "transed": 1, "url": "https://github.com/dbanay/Smalltalk", "via": "", "real_tags": ["c++", "smalltalk"]}, {"category": "", "categoryclass": "", "imagename": "327f6c59832259a0a0e6be1c6b696a94.jpg", "infoid": 1003681, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u9700\u8981\u4ece\u963f\u62c9\u65af\u52a0\u7684\u8d39\u5c14\u73ed\u514b\u65af\u83b7\u5f97500\u5428\u7269\u8d44\u5230\u5317\u51b0\u6d0b-\u8fd9\u662f\u4e00\u6b21\u5927\u7ea6400\u82f1\u91cc\u7684\u7a7f\u8d8a\u7eaf\u51c0\u8352\u91ce\u7684\u65c5\u7a0b\u3002\u8fd9\u91cc\u6ca1\u6709\u9053\u8def\uff0c\u51e0\u4e4e\u6ca1\u6709\u7b80\u6613\u673a\u573a\uff0c\u6d77\u6d0b\u662f\u4e00\u5c42\u575a\u5b9e\u7684\u51b0\u5c42\u3002\u4f60\u5f97\u5fcd\u53d7\u96f6\u4e0b68\u5ea6\u7684\u6e29\u5ea6\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u4e0d\u5feb\u70b9\u7684\u8bdd\uff0c\u6838\u672b\u65e5\u4e5f\u5728\u83dc\u5355\u4e0a\u3002\n\u52301954\u5e74\uff0c\u968f\u7740\u51b7\u6218\u7684\u987a\u5229\u8fdb\u884c\uff0c\u7f8e\u56fd\u653f\u5e9c\u610f\u8bc6\u5230\u5c06\u4e00\u67b6\u6838\u8f70\u70b8\u673a\u4ece\u4fc4\u7f57\u65af\u8fd0\u5f80\u7f8e\u56fd\u7684\u6700\u5feb\u65b9\u5f0f\u662f\u76f4\u63a5\u98de\u8d8a\u5317\u6781\u5708\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u4efb\u4f55\u9632\u6b62\u6838\u707e\u96be\u7684\u673a\u4f1a\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u82cf\u8054\u8f70\u70b8\u673a\u662f\u5426\u6b63\u5728\u5c3d\u5feb\u8d8a\u8fc7\u5317\u6781\u3002\u4e3a\u6b64\uff0c\u9646\u519b\u8ba1\u5212\u5728\u5317\u7eac69\u5ea6(\u5317\u6781\u5708\u4ee5\u5317200\u82f1\u91cc)\u9644\u8fd1\u7684\u9ad8\u5317\u6781\u5730\u533a\u5efa\u7acb63\u4e2a\u8f7d\u4eba\u96f7\u8fbe\u7ad9\u3002\u8981\u628a\u6240\u6709\u5fc5\u8981\u7684\u6750\u6599\u8fd0\u5230\u90a3\u4e48\u8fdc\u7684\u5317\u65b9\uff0c\u5b83\u5fc5\u987b\u8981\u6709\u521b\u610f\u3002\n\u52a0\u62ff\u5927\u548c\u7f8e\u56fd\u653f\u5e9c\u901a\u529b\u5408\u4f5c\uff0c\u51b3\u5b9a\u5efa\u9020\u6240\u6709\u8fd9\u4e9b\u6838\u7535\u7ad9\u9700\u8981\u5927\u7ea6500\u5428\u6750\u6599\u3002\u7531\u4e8e\u6ca1\u6709\u5408\u9002\u7684\u8dd1\u9053\u6216\u6e2f\u53e3\uff0c\u91cd\u578b\u76f4\u5347\u673a\u4ecd\u5904\u4e8e\u521d\u7ea7\u9636\u6bb5\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5c06\u4e0d\u5f97\u4e0d\u901a\u8fc7\u9646\u8def\u8fd0\u62b5\u3002\u5f04\u6e05\u695a\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4efb\u52a1\u843d\u5728\u4e86\u88ab\u9009\u4e2d\u81ea\u884c\u5efa\u9020\u6838\u7535\u7ad9\u7684\u540c\u4e00\u5bb6\u516c\u53f8-\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&amp\uff1bT\uff1b)\u7684\u5b50\u516c\u53f8\u897f\u90e8\u7535\u529b\u516c\u53f8(Western Electric Company)\u8eab\u4e0a\u3002\n\u89e3\u51b3\u65e0\u6cd5\u89e3\u51b3\u7684\u7269\u6d41\u95ee\u9898\u5e76\u4e0d\u5b8c\u5168\u662f\u5b83\u7684\u5f3a\u9879\u3002\u4f46\u5728TRADCOM(\u7f8e\u56fd\u9646\u519b\u8fd0\u8f93\u7814\u7a76\u548c\u53d1\u5c55\u53f8\u4ee4\u90e8)\u7684\u5e2e\u52a9\u4e0b\uff0c\u5b83\u627e\u5230\u4e86\u4e00\u5bb6\u516c\u53f8-\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662f\u4e00\u5bb6\u4eba-\u53ef\u80fd\u80fd\u591f\u63d0\u4f9b\u5e2e\u52a9\u3002\n\u7f57\u4f2f\u7279\u00b7\u5409\u5c14\u6469\u00b7\u52d2\u56fe\u8bfa\u751f\u4e8e1888\u5e74\uff0c\u662f\u91cd\u578b\u673a\u68b0\u7684\u53d1\u660e\u5bb6\u3002\u5728\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4e2d\uff0c70%\u7684\u76df\u519b\u571f\u65b9\u8bbe\u5907\u662f\u7531LeTourneau\u6280\u672f\u516c\u53f8\u5236\u9020\u7684\u3002\u52d2\u56fe\u8bfa\u53ea\u53d7\u8fc7\u5f88\u5c11\u7684\u6b63\u89c4\u6559\u80b2\uff0c\u5f00\u59cb\u4e86\u4ed6\u7684\u5de5\u4f5c\u751f\u6daf\uff0c\u6210\u4e3a\u4e00\u540d\u94c1\u5320\u3002\u52301969\u5e74\u4ed6\u53bb\u4e16\u65f6\uff0c\u4ed6\u975e\u5e38\u5bcc\u6709\uff0c\u4e2a\u4eba\u62e5\u6709\u8fd1300\u9879\u4e13\u5229\u3002\u4ed6\u88ab\u5b89\u846c\u5728\u4ed6\u4ee5\u4ed6\u7684\u540d\u5b57\u521b\u5efa\u7684\u5927\u5b66\u6821\u56ed\u91cc\uff0c\u4ed6\u7684\u5893\u7891\u4e0a\u5199\u7740\u201c\u4eba\u4e0e\u5c71\u7684\u79fb\u52a8\u8005\u201d\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6027\u683c\u53d1\u5c55\u7ed9\u4f60\u3002\n\u83b1\u56fe\u8bfa\u572820\u4e16\u7eaa50\u5e74\u4ee3\u521d\u4e00\u76f4\u5728\u5b8c\u5584\u4e00\u79cd\u7528\u4e8e\u591a\u8f6e\u91cd\u578b\u673a\u68b0\u7684\u67f4\u7535\u4f20\u52a8\u7cfb\u7edf\u3002\u8be5\u7cfb\u7edf\u5728\u6982\u5ff5\u4e0a\u4e0e\u8bb8\u591a\u673a\u8f66\u4e0a\u4f7f\u7528\u7684\u7cfb\u7edf\u6709\u4e9b\u76f8\u4f3c\uff0c\u5b83\u4f7f\u7528\u5185\u71c3\u673a\u6765\u65cb\u8f6c\u53d1\u7535\u673a\u3002\u8fd9\u79cd\u53d1\u7535\u673a\u5c06\u628a\u5b83\u7684\u80fd\u91cf\u4f20\u9012\u7ed9\u5b89\u88c5\u5728\u8f66\u8f86\u6bcf\u4e2a\u8f66\u8f6e\u4e0a\u7684\u8f6e\u6bc2\u7535\u673a\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u8f6e\u9a71\u52a8\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u5dee\u901f\u5668\u3001\u4f20\u52a8\u8f74\u6216\u4e0e\u4e4b\u76f8\u5173\u7684\u4f20\u52a8\u7cfb\u7edf\u635f\u8017\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u8bfb\u8fc7\u6211\u4eec\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5173\u4e8e\u5357\u6781\u96ea\u4e0a\u5de1\u6d0b\u8230\u5931\u4e8b\u7684\u6545\u4e8b\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e2a\u52a8\u529b\u603b\u6210\u7684\u8bbe\u7f6e\u542c\u8d77\u6765\u90fd\u5f88\u719f\u6089\u3002\u4f46\u52d2\u56fe\u8bfa\u7684\u8bbe\u8ba1\u663e\u7136\u6bd4\u6258\u9a6c\u65af\u00b7\u4fdd\u5c14\u7279(Thomas Poulter)\u7684\u8f6e\u6bc2\u9a6c\u8fbe\u9886\u5148\u4e86\u4e00\u4ee3\u4eba\uff0c\u540e\u8005\u7684\u9f7f\u8f6e\u4e0d\u9002\u5408\u5904\u7406\u7f13\u5761\u4ee5\u5916\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\nLetourneau\u6700\u521d\u5c06\u8fd9\u9879\u6280\u672f\u5e94\u7528\u4e8e\u94f2\u8fd0\u673a\u548c\u5e73\u5730\u673a\uff0c\u4f46\u610f\u8bc6\u5230\u8fd9\u6837\u4e00\u4e2a\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\uff0c\u4ed6\u5f88\u5feb\u5c31\u8d85\u8d8a\u4e86\u4ec5\u4ec5\u662f\u571f\u65b9\u65bd\u5de5\u30021953\u5e74\uff0c\u4ed6\u68a6\u60f3\u7740\u7b2c\u4e00\u8f86\u534f\u52a9\u4f10\u6728\u4f5c\u4e1a\u7684\u65e0\u8f68\u9646\u5730\u5217\u8f66VC-12-\u4e00\u79cd\u56db\u8f6e\u63a7\u5236\u9a7e\u9a76\u5ba4\uff0c500\u9a6c\u529b\u7684\u5eb7\u660e\u65af\u67f4\u6cb9\u4e0e\u53d1\u7535\u673a\u76f8\u8fde\uff0c\u7528\u575a\u56fa\u7684\u5de8\u578b\u8f6e\u80ce\u7275\u5f15\u4e09\u8f86\u8d27\u8fd0\u62d6\u8f66\uff0c\u6240\u6709\u8fd9\u4e9b\u8f6e\u80ce\u90fd\u7531\u8f6e\u6bc2\u7535\u673a\u63d0\u4f9b\u52a8\u529b\uff0c\u4f7f\u5176\u6210\u4e3a\u771f\u6b63\u768416\u8f6e\u9a71\u52a8\u8f66\u8f86\u3002\u5b83\u975e\u5e38\u4e11\u964b\uff0c\u4f46\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u5b83\u594f\u6548\u4e86\u3002\nVC-12\u7684\u5f00\u53d1\u76ee\u7684\u662f\u5728\u5d0e\u5c96\u7684\u5730\u5f62\u4e0a\u5c06\u6728\u6750\u4ece\u68ee\u6797\u4e2d\u62d6\u51fa\uff0c\u8fd0\u8f93\u80fd\u529b\u4e3a140\u5428\u3002\u5728\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e2d\uff0cLeTourneau\u53c8\u589e\u52a0\u4e86\u4e09\u4e2a\u8d27\u8fd0\u62d6\u8f66\uff0c\u53e6\u4e00\u4e2a\u540e\u90e8\u914d\u5907\u4e86\u7b2c\u4e8c\u4e2a\u5eb7\u660e\u65af\u67f4\u6cb9\u7684\u63a7\u5236\u9a7e\u9a76\u5ba4\uff0c\u5f88\u50cf\u4e00\u5217\u771f\u6b63\u7684\u706b\u8f66\u5c06\u5b89\u88c5\u591a\u4e2a\u673a\u8f66\u3002TRADCOM\u542c\u5230\u4e86\u8be5\u9879\u76ee\u7684\u98ce\u58f0\uff0c\u8981\u6c42\u8fdb\u884c\u6f14\u793a\u3002\nTRADCOM\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\u8fd9\u5c06\u662f\u5e2e\u52a9\u5de5\u7a0b\u5e08\u5efa\u9020\u9732\u6c34\u7ebf\u8def\u7684\u5de5\u5177\uff0c\u6216\u8005\u81f3\u5c11\u662f\u5b83\u7684\u4e00\u4e2a\u7248\u672c\u3002\u653f\u5e9c\u51b3\u5b9a\u51fa\u8d44\u5efa\u9020\u4e00\u4e2a\u7531LeTourneau\u5efa\u9020\u7684\u4e13\u4e3a\u5317\u6781\u6761\u4ef6\u8bbe\u8ba1\u7684\u539f\u578b\u63a7\u5236\u8231\u3002\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1fTC-264 Sno-Buggy-\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd8\u6709\u602a\u7269\u5361\u8f66\u3002\nSno-Buggy\u53ea\u6709\u4e00\u4e2a28\u5347\u7684Allison V-1710V12\u53d1\u52a8\u673a\uff0c\u4e0e\u4e8c\u6218\u671f\u95f4\u8bb8\u591a\u7f8e\u56fd\u6218\u6597\u673a\u4f7f\u7528\u7684\u53d1\u52a8\u673a\u76f8\u540c\uff0c\u5305\u62ec\u6d1b\u514b\u5e0c\u5fb7\u516c\u53f8\u7684P-38\u95ea\u7535\u6218\u6597\u673a\u3002\u5728\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u4f7f\u7528\u4e01\u70f7\u8fd0\u884c\uff0c\u5e76\u4e3a\u53d1\u7535\u673a\u63d0\u4f9b\u52a8\u529b\uff0c\u53d1\u7535\u673a\u53cd\u8fc7\u6765\u5c06\u679c\u6c41\u9001\u5230\u56db\u4e2a\u8f6e\u6bc2\u9a6c\u8fbe\uff0c\u6bcf\u4e2a\u9a6c\u8fbe\u65cb\u8f6c\u4e24\u4e2a\u5de8\u5927\u7684\u76f4\u5f8410\u82f1\u5c3a\u7684\u8f6e\u5b50\u3002\u6ca1\u6709\u60ac\u6302\u7cfb\u7edf\uff1b\u4efb\u4f55\u98a0\u7c38\u7684\u7f13\u51b2\u90fd\u662f\u7531\u4f4e\u538b\u8f6e\u80ce\u63d0\u4f9b\u7684\u3002\n\u8bf4\u5230\u8fd9\u4e9b\u5de8\u5927\u7684\u8f6e\u5b50\uff0c\u5176\u4e2d\u56db\u4e2a\u6700\u7ec8\u572820\u4e16\u7eaa80\u5e74\u4ee3\u51fa\u73b0\u5728\u6807\u5fd7\u6027\u7684\u5927\u811a\u602a\u5361\u8f66\u4e0a\uff0c\u5f53\u65f6\u8f66\u4e3b\u9c8d\u52c3\u00b7\u94b1\u5fb7\u52d2(Bob Chandler)\u82b1\u4e861000\u7f8e\u5143\u4ece\u897f\u96c5\u56fe\u5730\u533a\u7684\u4e00\u4e2a\u5783\u573e\u573a\u4e70\u4e0b\u4e86\u8fd9\u4e9b\u8f6e\u5b50\u3002\nSno-buggy\u5728\u5730\u9762\u4e0a\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u63a5\u89e6\u533a\u57df\uff0c\u8fd9\u4f7f\u5f97\u5b83\u53ef\u4ee5\u5c06\u91cd\u91cf\u5206\u6563\u5728\u677e\u8f6f\u7684\u51b0\u96ea\u4e0a\u3002\u56e0\u6b64\uff0c1954\u5e74\u5728\u683c\u9675\u5170\u5c9b\u6d4b\u8bd5\u65f6\uff0c\u5b83\u8868\u73b0\u51fa\u8272\uff0c\u7f8e\u56fd\u9646\u519b\u548c\u963f\u62c9\u65af\u52a0\u8d27\u8fd0\u516c\u53f8(\u603b\u90e8\u4f4d\u4e8e\u897f\u96c5\u56fe\u7684\u897f\u90e8\u7535\u6c14\u516c\u53f8(Western Electric)\u7b7e\u7ea6\u5411\u5317\u8fd0\u8f93\u8d27\u7269)\u90fd\u5370\u8c61\u6df1\u523b\uff0c\u8ba2\u8d2d\u4e86\u4e24\u8f86\u9646\u4e0a\u5217\u8f66\u3002\u963f\u62c9\u65af\u52a0\u8d27\u8fd0\u7ebf\u94bb\u4e95\u5e73\u53f0\u662f\u7b2c\u4e00\u4e2a\u5b8c\u6210\u7684\uff0c\u88ab\u79f0\u4e3aVC-22Sno-Freighter\u3002\nVC-22\u5728\u4e00\u4e2a\u591a\u6708\u7684\u65f6\u95f4\u91cc\u8fc5\u901f\u7ec4\u88c5\u5b8c\u6bd5\u3002\u8003\u8651\u5230\u5b83\u662f\u5f53\u65f6\u5efa\u9020\u7684\u6700\u957f(\u5982\u679c\u4e0d\u662f\u6700\u957f\u7684)\u8d8a\u91ce\u8f66\u4e4b\u4e00\uff0c\u5b83\u76846\u8282\u8f66\u53a2(\u5305\u62ec\u706b\u8f66\u5934)\u603b\u5171274\u82f1\u5c3a\u957f\uff0c\u8fd9\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u3002\u6bcf\u8f86\u8f66\u90fd\u6709\u56db\u4e2a\u9a71\u52a8\u8f6e\uff0c24\u8f6e\u9a71\u52a8\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4e24\u4e2a400\u9a6c\u529b\u7684\u5eb7\u660e\u65af\u67f4\u6cb9\u53d1\u52a8\u673a\u548c\u73b0\u5728\u719f\u6089\u7684\u8f6e\u6bc2\u7535\u673a\u8bbe\u7f6e\u3002\u5b83\u7684\u6709\u6548\u8f7d\u8377\u4e3a150\u5428\u3002\n\u591a\u4e8f\u4e867.3\u82f1\u5c3a\u9ad8\u7684\u8f6e\u5b50\u548c\u8f6e\u80ce\uff0c\u5b83\u51e0\u4e4e\u53ef\u4ee5\u7a7f\u8d8a\u4efb\u4f55\u5730\u5f62\u3002\u5b83\u5728\u7b2c\u4e00\u5b63\u5c06\u8d27\u7269\u8fd0\u5230\u9732\u5929\u94c1\u8def\u975e\u5e38\u6210\u529f\uff0c\u4f46\u4e00\u5e74\u540e\u5b83\u53d1\u751f\u4e86\u5200\u5203\u65ad\u88c2\uff0c\u5f15\u64ce\u5ba4\u8d77\u706b\uff0c\u4f7f\u5176\u65e0\u6cd5\u64cd\u4f5c\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u963f\u62c9\u65af\u52a0\u8d27\u8fd0\u516c\u53f8\u4e0e\u897f\u65b9\u7535\u6c14\u516c\u53f8\u7684\u5408\u540c\u7ec8\u6b62\uff0cVC-22\u88ab\u62d6\u51fa\u52a0\u62ff\u5927\uff0c\u505c\u5728\u963f\u62c9\u65af\u52a0\u4e2d\u90e8\u7684\u4e00\u6761\u9ad8\u901f\u516c\u8def\u65c1\uff0c\u81f3\u4eca\u4ecd\u5728\u90a3\u91cc\u3002\n\u8bf4\u771f\u7684\uff0c\u65e0\u8bba\u662f\u5728\u8c37\u6b4c\u5730\u56fe\u7684\u536b\u661f\u56fe\u50cf\u4e2d\uff0c\u8fd8\u662f\u4ece\u963f\u62c9\u65af\u52a0\u798f\u514b\u65af\u90ca\u5916\u7684\u65af\u8482\u65af\u9ad8\u901f\u516c\u8def\u7684\u8857\u666f\u900f\u89c6\u56fe\u4e2d\uff0c\u90fd\u53ef\u4ee5\u770b\u5230\u5b83\u3002\u4f60\u81ea\u5df1\u770b\u5427\u3002\nVC-22\u5b8c\u6210\u540e\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u9646\u519b\u7684\u66f4\u590d\u6742\u7684\u673a\u5668\u4e5f\u5b8c\u6210\u4e86\u3002\u8fd9\u8f86\u6240\u8c13\u7684LCC-1\u4e0eSno-Buggy\u7684\u8f6e\u5b50\u76f8\u540c\uff0c\u957f10\u82f1\u5c3a\uff0c\u7ed9\u5b98\u5458\u4eec\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\uff0c\u5b83\u6709\u56db\u8282\u8f66\u53a2\uff0c\u5305\u62ec\u524d\u9762\u7684\u4e00\u4e2a\u94f0\u63a5\u5f0f\u706b\u8f66\u5934\u3002\u5b83\u7684600\u9a6c\u529b\u67f4\u6cb9\u53d1\u52a8\u673a\u4e3a\u6240\u670916\u4e2a\u8f6e\u5b50\u63d0\u4f9b\u52a8\u529b\uff0c\u80fd\u591f\u7275\u5f1545\u5428\u3002\n\u8fd9\u53f0\u673a\u5668\u7684\u5bff\u547d\u6bd4VC-22\u957f\u5f97\u591a\uff0c\u4e5f\u66f4\u6210\u529f\u3002\u4ece1956\u5e74\u52301962\u5e74\uff0c\u5b83\u88ab\u6d3e\u5f80\u683c\u9675\u5170\u5c9b\uff0c\u5c06\u8d27\u7269\u8fd0\u5f80\u6574\u4e2a\u5730\u533a\u3002\u4f46\u5b83\u6700\u7ec8\u4e5f\u88ab\u9057\u5f03\u5728\u963f\u62c9\u65af\u52a0\u7684\u4e00\u4e2a\u6253\u635e\u573a\u91cc\uff0c\u540e\u6765\u88ab\u8425\u6551\u51fa\u6765\uff0c\u5e76\u5728\u52a0\u62ff\u5927\u6000\u7279\u970d\u65af\u7684\u80b2\u7a7a\u4ea4\u901a\u535a\u7269\u9986\u5c55\u51fa\uff0c\u5728\u90a3\u91cc\uff0c\u5b83\u4e5f\u53ef\u4ee5\u5728\u8c37\u6b4c\u5730\u56fe\u4e0a\u4ece\u592a\u7a7a\u4e2d\u770b\u5230\u3002\n\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u4e0d\u50cf\uff0c\u4f46\u9646\u519b\u5bf9LCC-1\u7684\u80fd\u529b\u5370\u8c61\u975e\u5e38\u6df1\u523b\u3002\u56e0\u6b64\uff0c\u57281958\u5e74\uff0c\u5b98\u5458\u4eec\u59d4\u6258\u5efa\u9020\u4e86\u5b83\u7684\u7ee7\u4efb\u8005\uff0c\u6709\u53f2\u4ee5\u6765\u6700\u957f\u7684\u8d8a\u91ce\u8f66\uff0c\u4e5f\u662f\u52d2\u56fe\u8bfa\u7684\u6700\u540e\u80dc\u5229\uff1aTC-497\u9646\u4e0a\u5217\u8f66Mark II\u3002\nTC-497\u662f\u4e00\u9879\u771f\u6b63\u4e86\u4e0d\u8d77\u7684\u5de5\u7a0b\u58ee\u4e3e\u3002\u5b83\u80fd\u591f\u4ee5\u6bcf\u5c0f\u65f620\u82f1\u91cc\u7684\u901f\u5ea6\u8fd0\u8f93150\u5428\uff0c\u884c\u9a76\u8fd1400\u82f1\u91cc(\u8fd9\u4e00\u8303\u56f4\u53ef\u4ee5\u901a\u8fc7\u643a\u5e26\u989d\u5916\u7684\u71c3\u6cb9\u8f66\u6765\u6269\u5c55)\uff0c\u5b83\u7531\u56db\u4e2a1170\u9a6c\u529b\u7684\u71c3\u6c14\u8f6e\u673a\u53d1\u52a8\u673a\u63d0\u4f9b\u52a8\u529b\u3002\u8fd9\u4e9b\u53d1\u52a8\u673a\u4e2d\u53ea\u6709\u4e00\u4e2a\u5728\u706b\u8f66\u5934\u91cc\uff0c\u5176\u4f59\u4e09\u4e2a\u5206\u522b\u88c5\u5728\u5404\u81ea\u7684\u8f66\u53a2\u91cc\u3002\u4f46\u5b83\u4e5f\u4fdd\u7559\u4e86\u4ee5\u524d\u9646\u4e0a\u5217\u8f66\u7684\u8f6e\u6bc2\u7535\u673a\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u8f66\u8f86\u4e0a\u7684\u6240\u670954\u4e2a\u8f6e\u5b50\u90fd\u6709\u52a8\u529b\u3002\n\u4f46\u4e0e\u52d2\u56fe\u8bfa\u7684\u5176\u4ed6\u9646\u5730\u5217\u8f66\u4e0d\u540c\u7684\u662f\uff0c\u62d6\u8f66\u4e5f\u662f\u53ef\u64cd\u7eb5\u7684\uff0c\u56e0\u6b64\u8f6c\u5f2f\u534a\u5f84(\u4ee5\u524d\u7ea6\u4e3a\u56db\u5206\u4e4b\u4e00\u82f1\u91cc)\u73b0\u5728\u8981\u7d27\u5f97\u591a\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\u706b\u8f66\u5934\u672c\u8eab\u662f\u5de8\u5927\u7684\uff0c\u8d85\u8fc730\u82f1\u5c3a\u9ad8\uff0c\u4f46\u5b83\u7684\u5927\u5c0f\u63a9\u76d6\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8f83\u5c0f\u7684\u71c3\u6c14\u8f6e\u673a\u53d1\u52a8\u673a\u5141\u8bb8\u52d2\u56fe\u8bfa\u4e5f\u589e\u52a0\u751f\u6d3b\u533a\u3002\u706b\u8f66\u5934\u91cc\u9762\u53ef\u4ee5\u7761\u516d\u4e2a\u4eba\uff0c\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u53a8\u623f\u548c\u536b\u751f\u95f4\u3002\u8fd9\u5217\u706b\u8f66\u5168\u957f570\u82f1\u5c3a\uff0c\u5dee\u4e0d\u591a\u6709\u4e24\u4e2a\u8db3\u7403\u573a\u3002\u7531\u4e8e\u5217\u8f66\u7684\u6a21\u5757\u5316\u7ed3\u6784\uff0c\u7406\u8bba\u4e0a\u6700\u5927\u957f\u5ea6\u662f\u65e0\u9650\u7684\u3002\u53ea\u8981\u6709\u5fc5\u8981\uff0c\u5c31\u53ef\u4ee5\u589e\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u52a8\u529b\u8f66\uff0c\u4ee5\u53ca\u7ef4\u6301\u5b83\u4eec\u8fd0\u8f6c\u7684\u71c3\u6599\u3002\n1962\u5e74\uff0c\u9646\u519b\u5728\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u5c24\u9a6c\u8bd5\u9a8c\u573a\u5bf9TC-497\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u7ed3\u679c\u518d\u6b21\u4ee4\u4eba\u5370\u8c61\u6df1\u523b-\u4f46\u50cfSikorsky CH-54 Tarhe\u8fd9\u6837\u7684\u91cd\u578b\u76f4\u5347\u673a\u7684\u540c\u6b65\u8fdb\u6b65\u4e5f\u662f\u5982\u6b64\uff0c\u4e00\u652f\u673a\u961f\u53ef\u4ee5\u5b9e\u73b0TC-497\u627f\u8bfa\u7684\u4e00\u5c0f\u90e8\u5206\u65f6\u95f4\u548c\u7cbe\u529b\u3002\n\u6700\u7ec8\uff0cTC-497\u4ee5\u53ca\u8d8a\u91ce\u9646\u4e0a\u5217\u8f66\u8fd9\u4e00\u66f4\u5927\u7684\u6982\u5ff5\u4e5f\u88ab\u653e\u5f03\u4e86\u3002\u5728\u62d6\u8f66\u62a5\u5e9f\u4e4b\u524d\uff0c\u5b83\u5728\u4e9a\u5229\u6851\u90a3\u5dde\u5b8c\u597d\u65e0\u635f\u5730\u653e\u4e86\u8fd1\u5341\u5e74\uff1b\u4eca\u5929\uff0c\u53ea\u6709\u51fa\u79df\u8f66\u5e78\u5b58\u4e0b\u6765\uff0c\u4ecd\u7136\u5728\u6c99\u6f20\u7684\u9633\u5149\u4e0b\u70d8\u70e4\uff0c\u79ef\u5c18\u3002\u5bf9\u4e8e\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u9646\u4e0a\u4ea4\u901a\u5de5\u5177\u4e4b\u4e00\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5408\u9002\u7684\u7ed3\u5c40\u3002", "note_en": "You need to get 500 tons of supplies from Fairbanks, Alaska to the Arctic Ocean\u2014a journey of about 400 miles through pure wilderness. There are no roads, very few airstrips, and the ocean is a solid sheet of ice. You&#39;re going to have to withstand minus 68 degree temperatures. Also, nuclear armageddon is on the menu if you&#39;re not quick about it.\n   By 1954, with the Cold War well underway, the U.S. government realized the quickest way to get a nuclear bomber from Russia to America was to go right over the Arctic circle. If we wanted any chance of preventing a nuclear apocalypse, we needed to know if Soviet bombers were crossing the North Pole as soon as possible. To do this, the Army planned to build 63 manned radar stations in the high Arctic around the 69th parallel (200 miles north of the Arctic circle). And to transport all the necessary material that far north, it would have to get creative.\n  Working together, Canadian and American governments determined they would need about 500 tons of materials to create all of these stations. With no suitable runways or ports and heavy lift helicopters still in their infancy, it would all have to be hauled in over land. The task of figuring out how exactly to get that done fell to the same company that had been chosen to build the stations themselves\u2014The Western Electric Company, a subsidiary of AT&amp;T.\n Solving unsolvable logistics issues wasn&#39;t exactly its forte. But with the help of TRADCOM (U.S. Army Transportation Research and Development Command), it found the one company\u2014more accurately, the one man\u2014that might be able to help.\n  Born in 1888, Robert Gilmore LeTourneau was an inventor of heavy machinery. In WWII, 70 percent of the Allies&#39; earthmoving equipment was created by LeTourneau Technologies, Inc. Having very little formal education, LeTourneau began his working career as an ironmonger. By the time he died in 1969 he was tremendously wealthy and personally held nearly 300 patents. He is buried on the campus of the University he founded in his name, where his gravestone reads &#34;MOVER OF MEN AND MOUNTAINS.&#34; Just a little character development for you.\n LeTourneau had spent the early 1950s perfecting a sort of diesel-electric drivetrain for multi-wheeled heavy-machinery. The system\u2014somewhat similar in concept to the sort used on many locomotives\u2014used a combustion engine to spin an electric generator. This generator would send its power to hub motors mounted to each wheel of the vehicle, allowing for multi-wheel-drive without differentials, driveshafts, or the drivetrain losses associated with them.\n This powertrain setup will sound familiar to anyone who read our story  on the doomed Antarctic Snow Cruiser earlier this month. But LeTourneau&#39;s design was clearly a generation ahead of Thomas Poulter&#39;s hub motors, which weren&#39;t geared properly to handle anything beyond a gentle incline.\n  LeTourneau originally applied this technology to scrapers and graders, but realizing the scalability of such a system, he soon moved beyond just earthmoving. In 1953, he dreamed up the first trackless land train to assist logging operations, the VC-12\u2014a four-wheeled control cab with a 500-horsepower Cummins diesel connected to a generator, pulling three cargo trailers on giant, rugged tires, all of which were powered by hub motors to make it a true 16-wheel-drive vehicle. It was brutally ugly, but critically, it worked.\n Developed to haul lumber out of forests over rough terrain, the VC-12 had a hauling capacity of 140 tons. A second version saw LeTourneau add three more cargo trailers and another control cab out back with a second Cummins diesel, much like a real train would be set up with multiple locomotives. TRADCOM caught wind of the project and asked for a demonstration.\n  TRADCOM came away impressed. This would be the vehicle to help engineers build up the DEW Line, or at least a version of it. The government decided to pay for the construction of a prototype control cabin built by LeTourneau and designed specifically for Arctic conditions. The result? The TC-264 Sno-Buggy\u2014and, incidentally, monster trucks.\n  The Sno-Buggy had a single, 28-liter Allison V-1710 V12, the same engine used in many American fighter aircraft during WWII including Lockheed&#39;s P-38 Lightning. In this application, it ran on butane and powered a generator, which in turn sent the juice to four hub motors, each spinning two massive 10-foot-diameter wheels. There was no suspension system; any cushioning of bumps was provided by the low-pressure tires instead.\n  Speaking of those huge wheels, four of them eventually made their way to the iconic Bigfoot monster truck in the 1980s after owner Bob Chandler bought them from a Seattle-area junkyard for $1,000.\n The Sno-buggy had an exceptionally large contact area on the ground, which allowed it to spread its weight over the soft snow and ice. As a result it excelled when tested in Greenland in 1954, and both the U.S. Army and Alaska Freightlines (the Seattle-based company Western Electric contracted to transport their freight north) were impressed enough to order a pair of overland trains. Alaska Freightlines&#39; rig was the first to be completed, dubbed the VC-22 Sno-Freighter.\n  The  VC-22 was quickly assembled in a little more than a month. This is impressive considering it was one of the longest (if not the longest) off-road vehicle ever built at the time, with its six cars (including the locomotive) measuring a total of 274 feet long. Each car had four driven wheels, resulting in 24-wheel-drive courtesy of two 400 horsepower Cummins diesel engines and the now-familiar hub motor setup. It had a payload of 150 tons.\n  Thanks to its 7.3-foot-tall wheels and tires, it could traverse nearly any terrain. It had a very successful first season hauling freight to the DEW Line, but a year later it jackknifed and a fire started in the engine room that rendered it inoperable. Soon after, Alaska Freightlines&#39; contract with Western Electric ended and the VC-22 was hauled out of Canada and left on the side of a highway in central Alaska, where it remains to this day.\n Seriously,  it&#39;s visible in both Google Maps satellite images and the Street View perspective from Steese Highway outside Fox, Alaska.  See for yourself.\n Sometime after the VC-22 was completed, the Army&#39;s more complex machine was also finished. Donning the same 10-foot wheels as the Sno-Buggy that impressed officials, the so-called LCC-1 had four cars including an articulating locomotive at the front. Its 600-hp diesel engine sent power to all sixteen wheels, and it was capable of hauling 45 tons.\n  This machine led a much longer and more successful life than the VC-22. Dispatched to Greenland, it hauled cargo all over the region from 1956-1962. But it too was eventually abandoned in an Alaska salvage yard before being rescued and put on display at the Yukon Transportation Museum in Whitehorse, Canada,  where it&#39;s also visible from space on Google Maps.\n It might not sound like it, but the Army was very impressed with the LCC-1&#39;s capabilities. So in 1958, officials commissioned the construction of its successor, the longest off-road vehicle ever and LeTourneau&#39;s final triumph: the TC-497 Overland Train Mark II.\n  The TC-497 is a truly remarkable feat of engineering. Capable of hauling 150 tons at 20 mph for nearly 400 miles (this range could be extended by carrying extra fuel cars), it was powered by four 1,170-hp gas turbine engines. Only one of these engines was in the locomotive, with the other three were housed in their own separate cars. \u00a0It retained the hub motor system from previous overland trains as well, meaning all 54 wheels on the vehicle were powered.\n But unlike on LeTourneau&#39;s other land trains, the trailers were also steerable, so the turning radius (which was formerly something like a quarter mile) was now much tighter, as seen in the image above.\n The locomotive itself was massive at over 30 feet tall, but its size belied the fact that the smaller gas turbine engines allowed LeTourneau to add living quarters as well. The inside of the locomotive could sleep six and had a complete galley and bathroom. The train&#39;s total length? 570 feet\u2014nearly two football fields. And due to the train&#39;s modular construction, the max length was theoretically infinite. As many power cars as were necessary could be added, along with the fuel to keep them running.\n  The TC-497 was tested by the Army in 1962 at the Yuma Proving Grounds in Arizona. The results were once again impressive\u2014but so were simultaneous advances in heavy-lift helicopters like the Sikorsky CH-54 Tarhe, a fleet of which could accomplish what the TC-497 promised with a fraction of the time and effort.\n In the end, the  TC-497 was also abandoned, along with the larger concept of the off-road overland train. It sat intact in Arizona for almost a decade before its trailers were scrapped; today only the cab survives, still baking in the desert sun and collecting dust. An unfitting end to one of the largest land vehicles ever made.", "posttime": "2020-05-25 21:25:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60ca\u5929\u52a8\u5730,earth,\u5efa\u9020", "title": "\u7f8e\u56fd\u9646\u519b\u60ca\u5929\u52a8\u5730\u7684\u8d8a\u91ce\u9646\u4e0a\u5217\u8f66", "title_en": "The US Army's Earth-Shaking, Off-Road Land Trains", "transed": 1, "url": "https://www.thedrive.com/news/33645/the-incredible-story-of-the-us-armys-earth-shaking-off-road-land-trains", "via": "", "real_tags": ["\u60ca\u5929\u52a8\u5730", "earth", "\u5efa\u9020"]}, {"category": "", "categoryclass": "", "imagename": "1fb6a69fd2d506e6dcdae7a97a49fff4.png", "infoid": 1003680, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u4fe1\uff0c\u6570\u4ee5\u5343\u8ba1\u7684\u4f01\u4e1a\u7cfb\u7edf\u611f\u67d3\u4e86\u4e00\u79cd\u52a0\u5bc6\u8d27\u5e01\u6316\u6398\u6076\u610f\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u7531\u4e00\u4e2a\u4ee3\u53f7\u4e3aBlue Mockingbird\u7684\u7ec4\u7ec7\u8fd0\u8425\u3002\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u4e91\u5b89\u5168\u516c\u53f8Red Canary\u7684\u6076\u610f\u8f6f\u4ef6\u5206\u6790\u5e08\u53d1\u73b0\u4e86\u84dd\u8272\u5632\u9e1f\u7ec4\u7ec7\uff0c\u636e\u4fe1\u8be5\u7ec4\u7ec7\u81ea2019\u5e7412\u6708\u4ee5\u6765\u4e00\u76f4\u6d3b\u8dc3\u3002\n\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0cBlue Mockingbird\u653b\u51fb\u8fd0\u884cASP.NET\u5e94\u7528\u7a0b\u5e8f\u7684\u9762\u5411\u516c\u4f17\u7684\u670d\u52a1\u5668\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528Telerik\u6846\u67b6\u4f5c\u4e3a\u5176\u7528\u6237\u754c\u9762(UI)\u7ec4\u4ef6\u3002\n\u9ed1\u5ba2\u5229\u7528CVE2019-18935\u6f0f\u6d1e\u5728\u53d7\u653b\u51fb\u7684\u670d\u52a1\u5668\u4e0a\u690d\u5165Web\u5916\u58f3\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f7f\u7528\u67d0\u4e2a\u7248\u672c\u7684\u591a\u6c41\u571f\u8c46\u6280\u672f\u6765\u83b7\u5f97\u7ba1\u7406\u5458\u7ea7\u522b\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5e76\u4fee\u6539\u670d\u52a1\u5668\u8bbe\u7f6e\u4ee5\u83b7\u5f97(\u91cd\u65b0)\u5f15\u5bfc\u6301\u4e45\u6027\u3002\n\u4e00\u65e6\u4ed6\u4eec\u83b7\u5f97\u5bf9\u7cfb\u7edf\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\uff0c\u4ed6\u4eec\u5c31\u4f1a\u4e0b\u8f7d\u5e76\u5b89\u88c5XMRRig\u7684\u4e00\u4e2a\u7248\u672c\uff0cXMRRig\u662fMonero(XMR)\u52a0\u5bc6\u8d27\u5e01\u7684\u4e00\u4e2a\u6d41\u884c\u7684\u52a0\u5bc6\u8d27\u5e01\u6316\u6398\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7ea2\u91d1\u4e1d\u96c0\u4e13\u5bb6\u8868\u793a\uff0c\u5982\u679c\u9762\u5411\u516c\u4f17\u7684IIS\u670d\u52a1\u5668\u8fde\u63a5\u5230\u4e00\u5bb6\u516c\u53f8\u7684\u5185\u90e8\u7f51\u7edc\uff0c\u8be5\u7ec4\u7ec7\u8fd8\u4f1a\u8bd5\u56fe\u901a\u8fc7\u5b89\u5168\u6027\u8f83\u5f31\u7684RDP(\u8fdc\u7a0b\u684c\u9762\u534f\u8bae)\u6216SMB(\u670d\u52a1\u5668\u6d88\u606f\u5757)\u8fde\u63a5\u5728\u5185\u90e8\u4f20\u64ad\u3002\n\u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684\u4e00\u6b21\u7535\u5b50\u90ae\u4ef6\u91c7\u8bbf\u4e2d\uff0cRed Canary\u544a\u8bc9ZDNet\uff0c\u4ed6\u4eec\u5e76\u6ca1\u6709\u5168\u9762\u4e86\u89e3\u8fd9\u4e2a\u50f5\u5c38\u7f51\u7edc\u7684\u8fd0\u4f5c\uff0c\u4f46\u4ed6\u4eec\u76f8\u4fe1\uff0c\u4ec5\u51ed\u4ed6\u4eec\u6709\u9650\u7684\u53ef\u89c1\u5ea6\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u50f5\u5c38\u7f51\u7edc\u81f3\u5c11\u67091000\u4eba\u53d7\u5230\u611f\u67d3\u3002\n\u7ea2\u91d1\u4e1d\u96c0\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9\u6211\u4eec\uff0c\u4e0e\u4efb\u4f55\u5b89\u5168\u516c\u53f8\u4e00\u6837\uff0c\u6211\u4eec\u5bf9\u5a01\u80c1\u60c5\u51b5\u7684\u53ef\u89c1\u6027\u6709\u9650\uff0c\u65e0\u6cd5\u51c6\u786e\u4e86\u89e3\u8fd9\u4e00\u5a01\u80c1\u7684\u5168\u90e8\u8303\u56f4\u3002\n\u8fd9\u4e00\u5a01\u80c1\u5c24\u5176\u5f71\u54cd\u4e86\u6211\u4eec\u76d1\u63a7\u5176\u7aef\u70b9\u7684\u7ec4\u7ec7\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u7136\u800c\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u7ec4\u7ec7\u4e2d\u89c2\u5bdf\u5230\u4e86\u5927\u7ea61000\u4f8b\u611f\u67d3\uff0c\u800c\u4e14\u662f\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u3002\n\u7136\u800c\uff0c\u7ea2\u91d1\u4e1d\u96c0\u8bf4\uff0c\u53d7\u5f71\u54cd\u7684\u516c\u53f8\u6570\u91cf\u53ef\u80fd\u8981\u9ad8\u5f97\u591a\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u8ba4\u4e3a\u5b89\u5168\u7684\u516c\u53f8\u4e5f\u6709\u53d7\u5230\u653b\u51fb\u7684\u98ce\u9669\u3002\n\u8fd9\u662f\u56e0\u4e3a\u6613\u53d7\u653b\u51fb\u7684Telerik UI\u7ec4\u4ef6\u53ef\u80fd\u662f\u5728\u5176\u6700\u65b0\u7248\u672c\u4e0a\u8fd0\u884c\u7684ASP.NET\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u662f\uff0cTelerik\u7ec4\u4ef6\u53ef\u80fd\u6709\u8bb8\u591a\u7248\u672c\u5df2\u8fc7\u65f6\uff0c\u4ecd\u4f7f\u516c\u53f8\u9762\u4e34\u653b\u51fb\u3002\n\u8bb8\u591a\u516c\u53f8\u548c\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u751a\u81f3\u4e0d\u77e5\u9053Telerik UI\u7ec4\u4ef6\u662f\u5426\u662f\u5176\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u518d\u6b21\u4f7f\u516c\u53f8\u9762\u4e34\u653b\u51fb\u3002\n\u81ea\u4ece\u5173\u4e8e\u6f0f\u6d1e\u7684\u7ec6\u8282\u516c\u4e4b\u4e8e\u4f17\u4ee5\u6765\uff0c\u8fd9\u79cd\u6df7\u4e71\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\u4e00\u76f4\u88ab\u653b\u51fb\u65e0\u60c5\u5730\u5229\u7528\u3002\n\u4f8b\u5982\uff0c\u57284\u6708\u4e0b\u65ec\u53d1\u5e03\u7684\u4e00\u4efd\u516c\u544a\u4e2d\uff0c\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u5c06Telerik UICVE-2019-18935\u6f0f\u6d1e\u5217\u4e3a\u7528\u4e8e\u5728\u670d\u52a1\u5668\u4e0a\u690d\u5165Web shell\u7684\u5229\u7528\u6700\u591a\u7684\u6f0f\u6d1e\u4e4b\u4e00\u3002\n\u5728\u4e0a\u5468\u53d1\u5e03\u7684\u53e6\u4e00\u4efd\u5b89\u5168\u516c\u544a\u4e2d\uff0c\u6fb3\u5927\u5229\u4e9a\u7f51\u7edc\u5b89\u5168\u4e2d\u5fc3(ACSC)\u8fd8\u5c06Telerik UICVE-2019\u5e74-18935\u6f0f\u6d1e\u5217\u4e3a2019\u5e74\u548c2020\u5e74\u653b\u51fb\u6fb3\u5927\u5229\u4e9a\u7ec4\u7ec7\u7684\u5229\u7528\u6700\u591a\u7684\u6f0f\u6d1e\u4e4b\u4e00\u3002\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u7ec4\u7ec7\u53ef\u80fd\u65e0\u6cd5\u9009\u62e9\u66f4\u65b0\u5176\u6613\u53d7\u653b\u51fb\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u516c\u53f8\u9700\u8981\u786e\u4fdd\u5728\u5176\u9632\u706b\u5899\u7ea7\u522b\u963b\u6b62\u9488\u5bf9CVE2019-18935\u7684\u653b\u51fb\u4f01\u56fe\u3002\n\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u7f51\u7edc\u9632\u706b\u5899\uff0c\u516c\u53f8\u9700\u8981\u5728\u670d\u52a1\u5668\u548c\u5de5\u4f5c\u7ad9\u5c42\u9762\u5bfb\u627e\u59a5\u534f\u7684\u8ff9\u8c61\u3002\u5728\u8fd9\u91cc\uff0c\u7ea2\u91d1\u4e1d\u96c0\u53d1\u5e03\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u5176\u4e2d\u5217\u51fa\u4e86\u4e00\u4e9b\u5371\u5bb3\u6307\u6807\uff0c\u516c\u53f8\u53ef\u4ee5\u7528\u8fd9\u4e9b\u6307\u6807\u6765\u626b\u63cf\u670d\u52a1\u5668\u548c\u7cfb\u7edf\uff0c\u4ee5\u5bfb\u627e\u84dd\u77e5\u66f4\u9e1f\u653b\u51fb\u7684\u8ff9\u8c61\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4eec\u53d1\u5e03\u6b64\u7c7b\u4fe1\u606f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5e2e\u52a9\u5b89\u5168\u56e2\u961f\u4e3a\u53ef\u80fd\u88ab\u7528\u6765\u5bf9\u4ed8\u4ed6\u4eec\u7684\u5a01\u80c1\u6280\u672f\u5236\u5b9a\u68c0\u6d4b\u7b56\u7565\u3002Red Canary\u544a\u8bc9ZDNet\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u8ba4\u4e3a\u8bc4\u4f30\u4ed6\u4eec\u68c0\u6d4b\u8bf8\u5982\u57fa\u4e8eCOR_PROFILER\u7684\u6301\u4e45\u6027\u548c\u901a\u8fc7Telerik\u6f0f\u6d1e\u5229\u7528\u7684\u521d\u59cb\u8bbf\u95ee\u7684\u80fd\u529b\u5bf9\u4e8e\u5b89\u5168\u6765\u8bf4\u662f\u5f88\u91cd\u8981\u7684\u3002", "note_en": "Thousands of enterprise systems are believed to have been infected with a cryptocurrency-mining malware operated by a group tracked under the codename of Blue Mockingbird.\n Discovered earlier this month by malware analysts from cloud security firm Red Canary, the Blue Mockingbird group is believed to have been active since December 2019.\n Researchers say Blue Mockingbird attacks public-facing servers running ASP.NET apps that use the Telerik framework for their user interface (UI) component.\n Hackers exploit the  CVE-2019-18935 vulnerability to plant a web shell on the attacked server. They then use a version of  the Juicy Potato technique to gain admin-level access and modify server settings to obtain (re)boot persistence.\n Once they gain full access to a system, they download and install a version of XMRRig, a popular cryptocurrency mining app for the Monero (XMR) cryptocurrency.\n    Red Canary experts say that if the public-facing IIS servers are connected to a company&#39;s internal network, the group also attempts to spread internally via weakly-secured RDP (Remote Desktop Protocol) or SMB (Server Message Block) connections.\n In an email interview earlier this month, Red Canary told  ZDNet that they don&#39;t have a full view of this botnet&#39;s operations, but they believe the botnet made at least 1,000 infections so far, just from the limited visibility they had.\n   &#34;Like any security company, we have limited visibility into the threat landscape and no way of accurately knowing the full scope of this threat,&#34; a Red Canary spokesperson told us.\n &#34;This threat, in particular, has affected a very small percentage of the organizations whose endpoints we monitor. However, we observed roughly 1,000 infections within those organizations, and over a short amount of time.&#34;\n However, Red Canary says the number of companies impacted could be much higher, and even companies who believe to be safe are at risk of attack.\n  This is because the vulnerable Telerik UI component might be part of ASP.NET applications that are running on their latest versions, yet, the Telerik component might be many versions out of date, still exposing companies to attacks.\n Many companies and developers may not even know if the Telerik UI component is even part of their applications, which, again, leaves companies exposed to attacks.\n And this confusion has been ruthlessly exploited by attacks over the past year, ever since details about the vulnerability became public.\n For example, in an advisory published in late April,  the US National Security Agency (NSA) listed the Telerik UI CVE-2019-18935 vulnerability as one of the most exploited vulnerabilities used to plant web shells on servers.\n In another security advisory published last week,  the Australian Cyber Security Centre (ACSC) also listed the Telerik UI CVE-2019-18935 vulnerability as one of the most exploited vulnerabilities to attack Australian organizations in 2019 and 2020.\n In many cases, organizations may not have an option to update their vulnerable apps. In these cases, many companies would need to ensure that they block exploitation attempts for CVE-2019-18935 at their firewall level.\n In case they don&#39;t have a web firewall, companies need to look for signs of a compromise at the server and workstation level. Here,  Red Canary has released a report with indicators of compromise that companies can use to scan servers and systems for signs of a Blue Mockingbird attack.\n &#34;As always, our primary purpose in publishing information like this is to help security teams develop detection strategies for threat techniques that are likely to be used against them. In this way, we think that it&#39;s important for security to evaluate their ability to detect things like  COR_PROFILER-based persistence and initial access via Telerik vulnerability exploitation,&#34; Red Canary told  ZDNet.", "posttime": "2020-05-25 20:55:48", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u4f01\u4e1a,enterprise,\u670d\u52a1\u5668", "title": "\u6570\u4ee5\u5343\u8ba1\u7684\u4f01\u4e1a\u7cfb\u7edf\u88ab\u65b0\u7684\u84dd\u8272\u77e5\u66f4\u9e1f\u6076\u610f\u8f6f\u4ef6\u56e2\u4f19\u611f\u67d3", "title_en": "Thousands of Enterprise Systems Infected by New Blue Mockingbird Malware Gang", "transed": 1, "url": "https://www.zdnet.com/article/thousands-of-enterprise-systems-infected-by-new-blue-mockingbird-malware-gang/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u4f01\u4e1a", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003679, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u9875\u9762\u4ee5\u524d\u7684\u5185\u5bb9\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e0eGuile\u548cEmacs\u96c6\u6210\u7684\u5386\u53f2\u6709\u5173\uff0c\u8bf7\u53c2\u9605GuileEmacsHistory\u3002\n\u57fa\u4e8eGuile\u7684Emacs\u662fGNU Emacs\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5b83\u7528Guile\u7684Elisp\u7f16\u8bd1\u5668\u66ff\u6362\u4e86Emacs\u81ea\u5df1\u7684EmacsLisp\u5f15\u64ce\u3002\u5b83\u5e76\u4e0d\u8bd5\u56fe\u5220\u9664Elisp\uff0c\u800c\u662f\u901a\u8fc7\u5b8c\u5168\u5411\u540e\u517c\u5bb9\u6765\u6210\u4e3a\u672a\u6765\u89c4\u8303\u7684GNU Emacs\u3002\u6700\u597d\u5c06\u5176\u547d\u540d\u4e3a\u201cGuileEmacs\u201d\u6216\u201cGuile/Emacs\u201d\uff0c\u4ee5\u8868\u660e\u5b83\u4ecd\u7136\u662fGNU Emacs\u3002\n\u4e00\u4e2a\u4f18\u70b9\u662fElisp\u53ef\u80fd\u4f1a\u6267\u884c\u5f97\u66f4\u5feb\uff0c\u56e0\u4e3aGuile\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e26\u6709\u8bb8\u591a\u4f18\u5316\u904d\u7684\u7f16\u8bd1\u5668\u5854\uff0c\u5e76\u6700\u7ec8\u7f16\u8bd1\u6210Guile VM\u5b57\u8282\u7801\uff0c\u8fd9\u6bd4\u5f53\u524d\u7684Elisp\u5b57\u8282\u7801\u66f4\u9ad8\u6548\u3002\u6b64\u5916\uff0c\u4ece3.0\u7248\u5f00\u59cb\uff0cGuile\u5c31\u6709\u4e86\u539f\u751fJIT\u3002\u5c06\u6765\uff0cGuile\u53ef\u80fd\u4f1a\u5b9e\u73b0\u67d0\u79cd\u5f62\u5f0f\u7684AOT\u7f16\u8bd1\u3002\n\u7b2c\u4e8c\u4e2a\u4f18\u70b9\u662f\uff0c\u4e3aElisp\u5b9e\u73b0Guile\u7f16\u8bd1\u5668\u5854\u548cVM\u80fd\u591f\u5b9e\u73b0\u7684\u4e00\u4e9b\u9644\u52a0\u8bed\u8a00\u7279\u6027\u4f1a\u66f4\u5bb9\u6613\uff0c\u6bd4\u5982\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u503c\u5854\uff0c\u5b83\u4e0d\u4ec5\u5305\u542b\u65e0\u9650\u5927\u7684\u6574\u6570(GNU Emacs 27.0.50\u5df2\u7ecf\u62e5\u6709)\uff0c\u800c\u4e14\u8fd8\u5305\u542b\u7cbe\u786e\u7684\u6709\u7406\u6570\u3001\u865a\u6570\u7b49)\u3001\u8bb0\u5f55\u7c7b\u578b(\u5982\u6539\u8fdb\u7684Defstruct)\u3001\u7c7bClos\u7684OOP\u3001FFI\u3001\u53ef\u7ec4\u5408\u7684\u5ef6\u7eed\u3001\u6a21\u5757\u7cfb\u7edf\u3001\u536b\u751f\u5b8f\u3001\u591a\u503c\u8fd4\u56de\u548c\u7ebf\u7a0b(GNU Emstruct\u3002\n\u7b2c\u4e09\u4e2a\u4f18\u52bf\u662f\u6240\u6709\u7684GuileAPI/\u5e93\u90fd\u53ef\u4ee5\u7528\u4e8eElisp\u4ee3\u7801\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3aGuileVM\u4e0a\u7684\u4e0d\u540c\u8bed\u8a00\u53ef\u4ee5\u5f88\u597d\u5730\u4e92\u64cd\u4f5c\uff0c\u7279\u522b\u662f\u5982\u679c\u5b83\u4eec\u90fd\u662fLisp\u7684\u8bdd\u3002C\u5b9e\u73b0\u7684\u51fd\u6570(ELISP\u672f\u8bed\u4e2d\u7684\u201csubr\u201d)\u3001ElISP\u51fd\u6570\u3001Scheme\u8fc7\u7a0b\u7b49\u90fd\u7f16\u8bd1\u6210\u76f8\u540c\u7684\u201c\u8fc7\u7a0b\u201d\u6570\u636e\u7c7b\u578b\uff0c\u8be5\u6570\u636e\u7c7b\u578b\u53ef\u80fd\u51fa\u73b0\u5728ElISP\u7b26\u53f7\u7684\u51fd\u6570\u69fd\u4e2d\uff0c\u7ed1\u5b9a\u5230Scheme\u53d8\u91cf\uff0c\u5426\u5219\u5728\u4e24\u79cd\u73af\u5883\u4e2d\u90fd\u662f\u4e00\u7ea7\u5bf9\u8c61\uff0c\u53ef\u4ee5\u663e\u5f0f\u5730\u6216\u901a\u8fc7\u8bed\u8a00\u7684\u6b63\u5e38\u8bed\u6cd5\u8c03\u7528\u51fd\u6570\u6765\u5b9e\u73b0\u6216\u5e94\u7528\u3002\u7c7b\u4f3c\u5730\uff0c\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u5728\u8bed\u8a00\u4e4b\u95f4\u662f\u7edf\u4e00\u7684\uff1bELISP\u6574\u6570\u548c\u7cbe\u786e\u65b9\u6848\u6574\u6570\u3001\u4e0d\u7cbe\u786e\u7684\u65b9\u6848\u6570\u5b57\u548cELISP\u6d6e\u70b9\u6570\u3001ELISP\u5706\u9525\u5355\u5143\u683c\u548c\u65b9\u6848\u5bf9\u3001\u7b26\u53f7\u7b49\u5728\u6240\u6709\u8bed\u8a00\u4e2d\u90fd\u662f\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002(\u4e0d\u8fc7\uff0c\u5b57\u7b26\u4e32\u662f\u4e2a\u4f8b\u5916\uff1b\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u5185\u5bb9\u3002)\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u7f16\u5199\u7684\u5e93\uff0c\u5c31\u597d\u50cf\u5b83\u662f\u7528\u540c\u4e00\u79cd\u8bed\u8a00\u7f16\u5199\u7684\u4e00\u6837\u3002\n\u6700\u540e\uff0c\u53ef\u4ee5\u7528Scheme\u4ee3\u66ffElisp\u7f16\u5199Emacs\u6269\u5c55\uff0c\u5728Elisp\u4e2d\u53ef\u4ee5\u5c06Elisp\u51fd\u6570\u548c\u53d8\u91cf\u540d\u79f0\u7a7a\u95f4\u4f5c\u4e3a\u6a21\u5757\u52a0\u8f7d(\u6bd4\u5982\u4e3a\u6bcf\u4e2a\u6a21\u5757\u6dfb\u52a0\u524d\u7f00\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8986\u76d6\u50cf\u2018car\u2019\u8fd9\u6837\u7684\u5e38\u89c1\u540d\u79f0)\u3002\n\u6700\u65b0\u7684\u516c\u5f00\u53ef\u7528\u7684GuileEmacs\u72b6\u6001\u53ef\u4ee5\u5728BT Templeton\u7684Emacs\u5b58\u50a8\u5e93\u548cGuile\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u540e\u8005\u8fdb\u5165\u4e86guile\u4e3b\u8981git\u8d44\u6e90\u5e93\u7684wip-elisp\u5206\u652f\u3002\u4e24\u8005\u7684\u201cwip\u201d\u5206\u652f\u90fd\u8868\u793aGuileEmacs\u7684\u6700\u65b0\u72b6\u6001\uff0c\u8fd9\u4e24\u4e2a\u5206\u652f\u90fd\u662f\u6d4b\u8bd5\u5b83\u6240\u5fc5\u9700\u7684\u3002(\u9996\u5148\u6784\u5efaGuile repo\u7684wp\u5206\u652f\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u6784\u5efaEmacs repo\u7684wp\u5206\u652f\u3002)\u3002\n\u5728GoogleSummerOfCode2014\u5e74\u672b\uff0cEmacs\u7684Elisp\u5f15\u64ce\u5b8c\u5168\u88abGuile\u6240\u53d6\u4ee3\uff0c\u800c\u4e14\u5927\u591a\u6570\u4e1c\u897f\u90fd\u53ef\u4ee5\u5728\u2122\u4e0a\u8fd0\u884c\u3002\u4e00\u4e9b\u6027\u80fd\u9000\u5316\u4ecd\u7136\u5b58\u5728\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u4f7f\u7528\u52a8\u6001\u4f5c\u7528\u57df\u7684\u7a0b\u5e8f\u3002\u8bf7\u53c2\u89c1GuileEmacsTODO\u3002\n\u5f53\u6ca1\u6709\u4e3aElisp\u6587\u4ef6\u542f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df\u65f6\uff0cElisp\u5b9a\u4e49\u53d8\u91cf\u4ee5\u53calet\u7ed1\u5b9a\u53d8\u91cf\u90fd\u662f\u52a8\u6001\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u3002\u5b83\u4eec\u4e0eScheme\u4e2d\u7684\u53c2\u6570\u5bf9\u8c61\u4f7f\u7528\u76f8\u540c\u7684\u673a\u5236\u3002\u76ee\u524d\uff0c\u8fd9\u4e9b\u90fd\u6ca1\u6709\u8fbe\u5230\u5e94\u6709\u7684\u6548\u7387\uff0c\u800c\u4e14\u7f13\u51b2\u533a\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u5728\u548cElisp\u7ed1\u5b9a\u673a\u5236\u7684\u5176\u4ed6\u5947\u602a\u4e4b\u5904\u7ed9Guile\u5b9e\u73b0ElISP\u5e26\u6765\u4e86\u989d\u5916\u7684\u9ebb\u70e6\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u975e\u5e38\u5927\u7684\u6027\u80fd\u56de\u5f52\u3002\u8fd9\u4e2a\u95ee\u9898\u6709\u671b\u5f88\u5feb\u5f97\u5230\u89e3\u51b3\u3002\n\uff1b\uff1b\u6b64\u7f13\u51b2\u533a\u7528\u4e8e\u60a8\u4e0d\u60f3\u4fdd\u5b58\u7684\u7b14\u8bb0\u548cLisp\u8bc4\u4f30\u3002\uff1b\uff1b\u5982\u679c\u8981\u521b\u5efa\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528C-xC-f\uff0c\uff1b\uff1b\u8bbf\u95ee\u8be5\u6587\u4ef6\uff0c\u7136\u540e\u5728\u8be5\u6587\u4ef6\u81ea\u5df1\u7684\u7f13\u51b2\u533a\u4e2d\u8f93\u5165\u6587\u672c\u3002(Load-library&#34\uff1bScheme&#34\uff1b)(Scheme-interaction-mode)\uff1b\uff1b\u8fd9\u5c31\u662fElisp\uff1b\u73b0\u5728\u6211\u4eec\u6b63\u5728\u4f7f\u7528Scheme\uff1a(use-module((elisp-symbols)#\uff1aprefix ev-))\uff1b\u53d8\u91cf((elisp\u51fd\u6570)#\uff1a\u524d\u7f00ef-)((elisp-plists)#\uff1a\u524d\u7f00EP-))(ef-message(ef-Symbol-Name&#39\uff1bCool\uff01))&#34\uff1bCool\uff01&#34\uff1b\n\u6ce8\u610f\uff1a\u60a8\u9700\u8981\u4f7f\u7528C-j\u8fdb\u884c\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u4f7f\u7528C-x\u3001C-e\u6216C-M-x\u3002\n\u5bf9\u4e8e\u7eafELISP\u7528\u6237\u6765\u8bf4\uff0c\u4f3c\u4e4e\u6ca1\u6709\u957f\u671f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u90a3\u4e9b\u60f3\u8981\u5c06ELISP\u4e0eScheme\u6df7\u5408\u5728\u4e00\u8d77\u7684\u7528\u6237\u5c06\u9762\u4e34\u4ee5\u4e0b\u6311\u6218\uff1a\nElisp\u5b57\u7b26\u4e32\u4ee5\u6269\u5c55\u7684UTF-8\u683c\u5f0f\u7f16\u7801\uff0c\u800cGuile\u4ec5\u4f7f\u7528libunstring\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0cElisp\u5b57\u7b26\u4e32\u5c06\u662f\u4e0e\u5176\u4ed6Guile\u5b57\u7b26\u4e32(\u6bd4\u5982\u6765\u81eaScheme\u4ee3\u7801)\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002\u8fd9\u4e0d\u4f1a\u7ed9\u7eafElisp\u4ee3\u7801\u5e26\u6765\u95ee\u9898\uff0c\u4f46\u4f1a\u9650\u5236\u4eba\u4eec\u4eceElisp\u65e0\u7f1d\u4f7f\u7528Scheme\u5e93\uff0c\u4ee5\u53ca\u5728Scheme\u4e2d\u7f16\u5199Emacs\u6269\u5c55\u7684\u80fd\u529b\uff0c\u56e0\u4e3a\u9700\u8981\u5728Elisp\u548cScheme\u5b57\u7b26\u4e32\u4e4b\u95f4\u663e\u5f0f\u5730\u6765\u56de\u8f6c\u6362\u3002\nScheme\u5bf9false boolean\u5217\u8868\u548c\u7a7a\u5217\u8868(\u4e5f\u79f0\u4e3anull)\u4f7f\u7528\u5355\u72ec\u7684\u5bf9\u8c61\uff1bElisp\u5bf9\u4e24\u8005\u90fd\u4f7f\u7528nil\u3002\u8fd9\u5bf9\u8bed\u8a00\u7684\u4e92\u64cd\u4f5c\u63d0\u51fa\u4e86\u6311\u6218\u3002Guile\u901a\u8fc7\u5728\u5185\u90e8\u652f\u6301\u6240\u6709\u4e09\u4e2a\u5bf9\u8c61(false\u3001null\u548cnil)\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u8ba9Elisp\u548cScheme\u4ee5\u7a0b\u5e8f\u5458\u901a\u5e38\u4e0d\u4f1a\u6ce8\u610f\u5230\u7684\u65b9\u5f0f\u5904\u7406\u5b83\u4eec\u3002\n\u5728Elisp\u4e2d\uff0c\u8fd9\u4e09\u4e2a\u5bf9\u8c61(\u51e0\u4e4e)\u5b8c\u5168\u65e0\u6cd5\u533a\u5206\uff0c\u5373\u4f7f\u4f7f\u7528\u2018eq\u2019\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5ffd\u7565\u6574\u4e2a\u95ee\u9898\uff0c\u5e76\u4e14\u6240\u6709\u7684Elisp\u4ee3\u7801\u7ee7\u7eed\u6309\u539f\u6837\u5de5\u4f5c\u3002FALSE\u548cNULL\u5bf9\u8c61\u53ef\u80fd\u8868\u73b0\u4e0d\u540c\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5728\u2018\u6253\u5370\u2019\u5b83\u4eec\u65f6\uff1b\u8fd9\u8fd8\u6ca1\u6709\u786e\u5b9a\u5b83\u4eec\u5e94\u8be5\u5177\u6709\u4ec0\u4e48\u884c\u4e3a\uff1a\u5b83\u4eec\u53ef\u80fd\u6253\u5370\u9664\u201cNIL\u201d\u4e4b\u5916\u7684\u5176\u4ed6\u4e1c\u897f\uff0c\u56e0\u6b64\u5982\u679c\u5b83\u4eec\u50cf\u65b9\u6848\u2192\u3001ElISP\u2192\u548cPrint\u2192\u4e00\u6837\u5f80\u8fd4\u8bfb\u53d6\u2192\u548cElISP\u2192\u65b9\u6848\uff0c\u5219\u65b9\u6848\u4ee3\u7801\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u4fe1\u606f\uff1b\u6216\u8005\u53ef\u4ee5\u63a5\u53d7\u4fe1\u606f\u7684\u4e22\u5931\uff0c\u4f7f\u5b83\u4eec\u5728\u4eceELISP\u4ee3\u7801\u6253\u5370\u65f6\u6253\u5370\u201cnil\u201d\u3002\n\u5728Scheme\u4e2d\uff0cnil(\u5176\u8bed\u6cd5\u4e3a#nil)\u53ef\u4ee5\u540c\u65f6\u5145\u5f53false\u548cnull\u7684\u89d2\u8272(\u5728\u2018if\u2019\u3001\u2018not\u2019\u3001null\uff1f\u7b49\u4e2d)\uff0c\u4f46\u662f\u8fd9\u4e09\u4e2a\u89d2\u8272\u90fd\u4e0d\u76f8\u7b49\uff1f(\u66f4\u4e0d\u7528\u8bf4eqv\u4e86\uff1f\u6216\u7b49\u5f0f\uff1f)\u3002\u4e3a\u4e86\u5f7c\u6b64\u3002\u8fd9\u662f\u56e0\u4e3a\u5982\u679cx\u548cy\u76f8\u7b49\uff0cy\u548cz\u76f8\u7b49\uff0c\u90a3\u4e48x\u548cz\u4e5f\u5fc5\u987b\u76f8\u7b49\uff0c\u4f46\u662f\u5728Scheme\u4e2d\u6211\u4eec\u4e0d\u80fd\u4f7ffalse\u548cnull\u76f8\u7b49\u3002\u901a\u8fc7\u4e00\u4e9b\u4ee3\u7801\u793a\u4f8b\u6765\u8be6\u7ec6\u8bf4\u660e\uff1a(if#nil 0 1)\u4ea7\u751f1\uff0c(and(not#nil)(null\uff1f#nil))\u4ea7\u751ftrue\uff0c(cons&#39\uff1bfoo#nil)\u4ea7\u751f(Foo)\u3002\u8fd9\u610f\u5473\u7740\u53ea\u8981\u7528\u6237\u4f7f\u7528\u2018if\u2019\u3001\u2018not\u2019\u3001null\uff1f\u7b49\u800c\u4e0d\u662f\u5c06\u76f8\u7b49\u4e0e\u6587\u5b57\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e00\u5207\u90fd\u5f88\u597d\u3002\n\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u7b97\u6cd5\u662f\u627e\u5230\u4e24\u4e2a\u5171\u4eab\u7ed3\u6784\u7684\u5217\u8868\u7684\u516c\u5171\u5c3e\u5df4\uff0c\u8be5\u7b97\u6cd5\u4e0d\u4fee\u6539\u5c31\u4e0d\u80fd\u5728Scheme\u4e2d\u5de5\u4f5c\u3002\u8be5\u7b97\u6cd5\u5c06\u4e24\u4e2a\u5217\u8868\u5207\u5272\u6210\u76f8\u540c\u7684\u957f\u5ea6\uff0c\u7136\u540e\u5e76\u884c\u904d\u5386\u5b83\u4eec\uff0c\u5e76\u505a\u4e00\u4e2a\u7b49\u5f0f\uff1f\u68c0\u67e5\u6bcf\u5bf9\u8282\u70b9\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u81f3\u5c11\u4f1a\u5728\u5230\u8fbe\u4e24\u4e2a\u5217\u8868\u672b\u5c3e\u7684()\u65f6\u7ed3\u675f(\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u552f\u4e00\u7684\u516c\u5171\u5c3e\u90e8\u662f\u7a7a\u5217\u8868)\uff0c\u4f46\u662f\u5728\u5904\u7406\u6df7\u5408Elisp\u6570\u636e\u7684Scheme\u4ee3\u7801\u4e2d\uff0c\u5fc5\u987b\u5206\u522b\u68c0\u67e5(\u548c(null\uff1flist1-ail)(\u7a7a\uff1flist2-ail)\u7684\u60c5\u51b5(\u5b9e\u9645\u4e0a\u6d4b\u8bd5\u4e24\u4e2a\u4e2d\u7684\u4e00\u4e2a\u5c31\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6)\uff0c\u5426\u5219\u5fc5\u987b\u63d0\u524d\u89c4\u8303\u5316\u5217\u8868\u7684\u7ec8\u6b62\u503c\u3002\n\u66f4\u5947\u602a\u7684\u662f\uff0c\u5728Elisp\u4e2d\uff0cnil\u548ctrue\u5bf9\u8c61\u4e5f\u662f\u7b26\u53f7\uff0c\u56e0\u4e3a\u5b83\u4eec\u6bd5\u7adf\u662f\u201cnil\u201d\u548c\u201ct\u201d\u3002\u5c3d\u7ba1\u5b83\u4eec\u662f\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u4f46\u5728Scheme\u4e2d\u4e0d\u662f\u7b26\u53f7\u3002Elisp\u2018SYMBOL\u2019\u51fd\u6570\u548c\u65b9\u6848\u7b26\u53f7\uff1f\u8fd9\u91cc\u7684\u8fc7\u7a0b\u4e0e\u5176\u4ed6\u5904\u7406\u7b26\u53f7\u7684\u8fc7\u7a0b\u5b8c\u5168\u4e0d\u540c\u3002\n\u957f\u8bdd\u77ed\u8bf4\uff1aElisp\u901a\u5e38\u4e0d\u53d7\u5f71\u54cd\uff0c\u4f46\u662f\u5982\u679c\u60a8\u7684\u4ee3\u7801\u5728\u9884\u671f\u7684\u201cnil\u201d\u5904\u6253\u5370\u51fa\u4e00\u4e9b\u201cfalse\u201d\u6216\u201cnull\u201d\u5bf9\u8c61\uff0c\u8bf7\u4e0d\u8981\u60ca\u614c\u3002\u5982\u679c\u60a8\u7f16\u5199\u4e0eElisp\u6570\u636e\u4ea4\u4e92\u7684Scheme\u4ee3\u7801\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u2018if\u2019/\u2018not\u2019/null\uff1f/\u7b49\uff0c\u800c\u4e0d\u662f\u5c06\u76f8\u7b49\u4e0e#f\u6216&#39\uff1b()\u8fdb\u884c\u6bd4\u8f83\u3002\u4e5f\u4e0d\u8981\u5047\u8bbe\u5217\u8868\u4ee5\u76f8\u7b49\u7684\u5bf9\u8c61\u7ed3\u5c3e\uff0c\u8fd9\u5728\u4ee5\u524d\u662f\u6709\u4fdd\u8bc1\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u4ee5NULL\u7ed3\u5c3e\u3002\n\u867d\u7136\u8fc7\u7a0b\u5728\u8bed\u8a00\u4e4b\u95f4\u662f\u5171\u4eab\u7684\uff0c\u4f46\u5b8f\u66f4\u4e3a\u56f0\u96be\u3002\u5f53\u7136\uff0cElisp\u5b8f\u53ea\u662f\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u56e0\u6b64\u539f\u5219\u4e0a\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u4e0d\u536b\u751f\u7684Scheme\u5b8f\u5de5\u4f5c\uff0c\u800cElISP\u4ee3\u7801\u901a\u8fc7\u4e0eScheme\u76f8\u540c\u7684\u4e2d\u95f4\u8bed\u8a00\uff0c\u6240\u4ee5\u4e5f\u8bb8\u536b\u751f\u7684Scheme\u5b8f\u53ef\u4ee5\u5728ElISP\u4e0a\u5de5\u4f5c\u3002\n\u524d\u8005\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b8f\u8f93\u51fa\u4e2d\u51fa\u73b0\u7684Elisp\u51fd\u6570\u548c\u53d8\u91cf\u540d\u5c06\u63d2\u5165\u5230\u672a\u5b9a\u4e49\u7684Scheme\u4ee3\u7801\u4e2d\u3002\n\u540e\u8005\u53ef\u80fd\u4f1a\u594f\u6548\u3002\u65b9\u6848\u7684\u536b\u751f\u5b8f\u4e0d\u8f93\u51fa\u65b9\u6848\u4ee3\u7801(\u539f\u59cb\u7684SXPRs)\uff1b\u5b83\u4eec\u4ee5\u4e2d\u95f4\u8bed\u8a00(IL)\u8f93\u51fa\u4ee3\u7801\uff0c\u8be5\u4e2d\u95f4\u8bed\u8a00\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u4efb\u4f55\u6a21\u5757\u4e2d\u7684\u7ed1\u5b9a\uff0c\u5e76\u4e14\u8868\u793a\u8f83\u4f4e\u7ea7\u522b\u7684Guile\u652f\u6301\u7684\u6240\u6709\u4ee3\u7801\u6982\u5ff5\u3002\u5728\u8fdb\u4e00\u6b65\u7f16\u8bd1\u6216\u89e3\u91ca\u4e4b\u524d\uff0cScheme\u548cElisp\u90fd\u5df2\u8f6c\u6362\u4e3a\u6b64IL\uff0c\u56e0\u6b64\u5728ElISP\u4ee3\u7801\u4e0a\u4f7f\u7528Scheme\u4e2d\u5b9a\u4e49\u7684\u536b\u751f\u5b8f\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898\uff1b\u5b83\u53ea\u9700\u5c06\u5b8f\u6a21\u677f\u7684Scheme\u6b63\u6587\u548c\u8f93\u5165\u5230\u5b8f\u7684Elisp\u4ee3\u7801\u7247\u6bb5\u5206\u522b\u7f16\u8bd1(\u4e3aIL)\uff0c\u5e76\u5408\u5e76\u5f15\u7528\u6b63\u786e\u7684Scheme\u548cElisp\u53d8\u91cf\u548c\u51fd\u6570\u7ed1\u5b9a\u7684\u8fd9\u4e9bIL\u7247\u6bb5\u5373\u53ef\u3002\u751a\u81f3\u662f\u4e0e\u2018let\u2019\u7ed1\u5b9a\u7684\u5b8f\u7684\u6807\u8bc6\u7b26\u8f93\u5165\uff0c\u5982(\u8bed\u6cd5-\u89c4\u5219()((with-foo foo body.))\u3002(Foo What))Body.)\uff0c\u5728\u6982\u5ff5\u4e0a\u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c(\u5728\u8bcd\u6cd5\u4e0a\u5c06\u2018foo\u2019\u7ed1\u5b9a\u5230\u2018body\u2019\u4e2d\u7684Elisp\u4ee3\u7801)\u3002\n\u8fd8\u5e94\u8be5\u53ef\u4ee5\u4e3aElisp\u5b9e\u73b0\u4e00\u4e2a\u5b89\u5168\u7684\u5b8f\u5b9a\u4e49\u8868\u5355\uff0c\u5c3d\u7ba1\u2018def\u5b8f\u2019\u672c\u8eab\u53ef\u80fd\u4e0d\u80fd\u88ab\u8bbe\u7f6e\u4e3a\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u4f7f\u7528Scheme\u4e2d\u5f53\u524d\u6240\u6709\u73b0\u6709\u7684Elisp\u5b8f\u4ecd\u7136\u662f\u6709\u95ee\u9898\u7684\u3002\u5b83\u4eec\u53ef\u80fd\u9700\u8981\u6162\u6162\u91cd\u65b0\u5b9e\u73b0\u4e3aElisp\u6216Scheme\u4e2d\u5b9a\u4e49\u7684\u536b\u751f\u5b8f\u3002\nGuile\u57fa\u672c\u4e0a\u901a\u8fc7POSIX\u7ebf\u7a0b\u652f\u6301\u5e76\u53d1\u6027\u3002\u5728Guile-Emacs\u4e2d\uff0c\u53ef\u4ee5\u542f\u52a8\u4efb\u610f\u6570\u91cf\u7684\u7ebf\u7a0b\u6267\u884cScheme\uff0c\u4f46\u8fd9\u5e76\u4e0d\u80fd\u89e3\u51b3Emacs\u5145\u6ee1\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u6570\u636e\u7ed3\u6784\u548c\u5168\u5c40\u8d44\u6e90\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u4f7f\u7528\u5e76\u53d1Scheme\u4ee3\u7801\u7f16\u5199Emacs\u6269\u5c55\u53ef\u80fd\u4f1a\u88ab\u8bc1\u660e\u5145\u6ee1\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u969c\u788d\u548c\u6f0f\u6d1e\u3002\u4e00\u4e9bElisp\u51fd\u6570\u751a\u81f3\u6ee5\u7528Emacs\u7684\u5355\u7ebf\u7a0b\u7279\u6027\uff0c\u4f7f\u5168\u5c40\u8d44\u6e90\u53d1\u751f\u53d8\u5f02\uff0c\u7136\u540e\u518d\u5c06\u5b83\u4eec\u53d8\u5f02\u56de\u6765\uff0c\u4ece\u800c\u4ea7\u751f\u5f15\u7528\u900f\u660e\u7684\u5047\u8c61\uff0c\u56e0\u6b64\u5728\u5e76\u53d1\u4ee3\u7801\u4e2d\u6f20\u4e0d\u5173\u5fc3\u5730\u4f7f\u7528ElispAPI\u4ecd\u7136\u662f\u6709\u95ee\u9898\u7684\u3002", "note_en": "For the former contents of this page which were for a large part concerned with the history of all efforts to integrate Guile and Emacs, see  GuileEmacsHistory.\n   Guile-based Emacs is a branch of GNU Emacs that replaces Emacs\u2019s own  EmacsLisp engine with the Elisp compiler of  Guile. It does  not attempt to remove Elisp, and instead aims to become the canonical GNU Emacs of the future by being fully backwards compatible. It\u2019s best to call it \u201c GuileEmacs\u201d or \u201cGuile/Emacs\u201d or such to make it clear that it\u2019s still GNU Emacs.\n One advantage is that Elisp will potentially execute faster, because Guile uses a compiler tower with many optimization passes and ultimately compiles to Guile VM bytecode, which is more efficient than current Elisp bytecode. Also, Guile has native JIT since version 3.0. In the future, Guile is likely to implement some forms of AOT compilation.\n A second advantage is that it will be easier to implement some additional language features for Elisp which the Guile compiler tower and VM are capable of, like a full numeric tower with not only infinite-sized integers (which GNU Emacs 27.0.50 already has) but also exact rational numbers, imaginary numbers, etc.), record types (like an improved defstruct), CLOS-like OOP, an FFI, composable continuations, a module system, hygienic macros, multiple-value returns, and threads (GNU Emacs has a limited support for concurrency \u2013 LISP threads \u2013 since version 26.1).\n A third advantage is all Guile APIs/libraries becoming available to Elisp code, no matter what language they\u2019re implemented in, because different languages on the Guile VM can inter-operate quite well, especially if they\u2019re both a Lisp. C-implemented functions (\u201csubrs\u201d in Elisp terminology), Elisp functions, Scheme procedures, etc. all compile to the same \u201cprocedure\u201d data type, which may appear in Elisp symbols\u2019 function-slots, be bound to Scheme variables, and are otherwise first-class objects in both environments which can be funcalled or applied explicitly or by the language\u2019s normal syntactic way of calling functions. Similarly, other data types are unified between the languages; Elisp integers and exact Scheme integers, inexact Scheme numbers and Elisp floats, Elisp cons cells and Scheme pairs, symbols, etc. are the same data type across the languages. (Strings are an exception though; see below.) Therefore one can generally use a library written in another language as if it were written in the same language.\n Lastly, it will become possible to write Emacs extensions in Scheme instead of Elisp, where it\u2019s possible to load the Elisp function and variable namespaces as modules (say with a prefix for each so common names like  \u2018car\u2019 aren\u2019t overwritten).\n  The latest publicly available state of  GuileEmacs can be found at  BT Templeton&#39;s Emacs repository and in  their Guile repository. The latter has in the meanwhile made it into the  wip-elisp branch of guile\u2019s main git repository. The \u201cwip\u201d branches of both represent the latest state of  GuileEmacs and  both are necessary to test it. (Build the wip branch of the Guile repo first, then build the wip branch of the Emacs repo with that.)\n As of the end of  GoogleSummerOfCode 2014, the Elisp engine of Emacs is fully replaced with that of Guile, and most things Just Work\u2122. Some performance regressions remain, especially with programs using dynamic scope. See  GuileEmacsTodo.\n  Elisp defvars are dynamically scoped, as well as let-bound variables when lexical scope isn\u2019t enabled for an Elisp file. These use the same machinery as parameter objects in Scheme. Currently these are not as efficient as they should be, and the presence of buffer-local variables and other weirdities of Elisp binding mechanisms cause additional headaches to Guile in implementing Elisp, which so far leads to a very big performance regression. This will hopefully be addressed shortly.\n     ;; This buffer is for notes you don&#39;t want to save, and for Lisp evaluation. ;; If you want to create a file, visit that file with C-x C-f, ;; then enter the text in that file&#39;s own buffer.(load-library  &#34;scheme&#34;)(scheme-interaction-mode) ;; that was Elisp; now we&#39;re in Scheme:(use-modules ((elisp-symbols) # :prefix ev-)  ;variables ((elisp-functions) # :prefix ef-) ((elisp-plists) # :prefix ep-) )(ef-message (ef-symbol-name &#39;cool!)) &#34;cool!&#34;\n Note: You\u2019ll need to use  C-j for evaluation, not  C-x C-e or  C-M-x.\n  There seem no long-term issues for pure Elisp users, but the following challenges will face those who want to mix Elisp with Scheme:\n  Elisp strings are encoded in an extended UTF-8 format, whereas Guile just uses libunistring. For this reason Elisp strings will for starters be a separate data type from other Guile strings (say coming from Scheme code). This poses no problems to pure Elisp code, but limits one\u2019s ability to seamlessly use Scheme libraries from Elisp, and to write Emacs extensions in Scheme, because one needs to explicitly convert back and forth between Elisp and Scheme strings.\n  Scheme uses separate objects for the false Boolean and empty list (AKA null); Elisp uses nil for both. This poses a challenge in the interoperation of the languages. Guile approaches the issue by internally supporting all three objects (false, null, and nil) but making Elisp and Scheme treat them in such ways that the programmer generally doesn\u2019t notice.\n In Elisp, all three objects are (almost) completely indistinguishable, even with  \u2018eq\u2019, meaning one can ignore the whole issue and all Elisp code continues working as-is. The one way in which the false and null objects might behave different is when  \u2018print\u2019ing them; it is not set in stone yet what behavior they should have: they might print something other than \u201cnil\u201d, so if they make a round trip like Scheme \u2192\u00a0Elisp \u2192\u00a0print \u2192\u00a0read \u2192\u00a0Elisp \u2192\u00a0Scheme, the Scheme code loses no information; or the loss of information could be accepted, making them print \u201cnil\u201d when printed from Elisp code.\n In Scheme, nil (which has the syntax  #nil) can take the role of both false and null (in  \u2018if\u2019,  \u2018not\u2019,  null?, etc.), but none of the three are  equal? (let alone  eqv? or  eq?) to each other. That\u2019s because if x and y are equal, and y and z are equal, then x and z must be equal too, but we can\u2019t make false and null equal in Scheme. To elaborate through some code examples:  (if #nil 0 1) yields 1,  (and (not #nil) (null? #nil)) yields true, and  (cons &#39;foo #nil) yields  (foo). This means that everything is fine so long as the user uses  \u2018if\u2019,  \u2018not\u2019,  null?, etc. instead of comparing equality to literal objects.\n A noteworthy algorithm that won\u2019t work in Scheme without modification is one to find the common tail of two lists that share structure. This algorithm cuts two lists to the same length, then walks them in parallel and does an  eq? check on every pair of nodes. Normally this will end at least when the  () at the end of both lists is reached (meaning their only common tail is the empty list), but in Scheme code messing with mixed Elisp data one has to separately check for the  (and (null? list1-tail) (null? list2-tail)) case at every node (actually testing one of the two is enough because they have the same length), or else one has to canonicalize the lists\u2019s terminating value in advance.\n As an additional weirdity, the nil and true objects are also symbols in Elisp, since after all they\u2019re  \u2018nil\u2019 and  \u2018t\u2019. They are not symbols in Scheme though, despite being the same objects. The Elisp  \u2018symbolp\u2019 function and Scheme  symbol? procedure simply disagree here, among others which deal with symbols.\n Long story short: Elisp is generally unaffected, but don\u2019t freak out if your code prints out some \u201cfalse\u201d or \u201cnull\u201d object where you expected \u201cnil\u201d. If you write Scheme code interacting with Elisp data, make sure to use  \u2018if\u2019/ \u2018not\u2019/ null?/etc. instead of comparing equality to  #f or  &#39;(). Don\u2019t assume that lists end with equal objects either, which was previously guaranteed because they all ended in null.\n  While procedures are shared between the languages, macros are more difficult. Elisp macros are just procedures of course so they could in principle work as unhygienic Scheme macros, and Elisp code goes through the same intermediate language as Scheme so perhaps hygienic Scheme macros could work on Elisp.\n The former would probably not work sensibly though, since Elisp function and variable names appearing in the macro output would be inserted into Scheme code where they\u2019re undefined.\n The latter might just work. Scheme\u2019s hygienic macros don\u2019t output Scheme code (raw sexprs); they output code in an intermediate language (IL) that can make direct references to bindings in any modules, as well as represent all code concepts that Guile supports in the lower levels. Scheme and Elisp are already both translated to this IL before further compilation or interpretation, so using hygienic macros defined in Scheme on Elisp code would not have any issues; it would simply separately compile (to IL) the Scheme body of the macro template and the Elisp code snippet input to the macro, and merge these IL snippets which both reference the correct Scheme and Elisp variable and function bindings. Even identifier inputs to the macro which it binds with  \u2018let\u2019, like in  (syntax-rules () ((with-foo foo body ...) (let ((foo whatever)) body ...))), should conceptually work ( lexically bind  \u2018foo\u2019 for the Elisp code in  \u2018body\u2019).\n It should also be possible to implement a hygienic macro definition form for Elisp, though  \u2018defmacro\u2019 itself can probably not be made hygienic so using all the currently existing Elisp macros from Scheme remains problematic. They will probably need to be slowly reimplemented as hygienic macros defined in Elisp or Scheme.\n  Guile supports concurrency essentially via POSIX threads. In Guile-Emacs it is possible to launch any number of threads executing Scheme, but this doesn\u2019t solve the problem that Emacs is full of thread-unsafe data structures and global resources, so programming an Emacs extension using concurrent Scheme code might prove to be full of unexpected roadblocks and pitholes. Some Elisp functions even abuse the single-threaded nature of Emacs, mutating global resources then mutating them back to give the illusion of referential transparency, so nonchalant usage of Elisp APIs from concurrent code remains problematic.", "posttime": "2020-05-25 20:54:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "emacs,elisp", "title": "Guilemacs-Emacs with Guile\u65b9\u6848", "title_en": "Guilemacs \u2013 Emacs with Guile Scheme", "transed": 1, "url": "https://www.emacswiki.org/emacs/GuileEmacs", "via": "", "real_tags": ["emacs", "elisp"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u524d\u51e0\u5929\uff0c\u6211\u5728\u5bfb\u627e\u65b0\u57df\u540d\u65f6\u7cbe\u795e\u9519\u4e71\uff0c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6211\u5728\u57df\u540d\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u4e86\u8c37\u6b4c(Google)\u3002\u8fd9\u5c31\u662f\u6211\u770b\u5230\u7684\uff1a\n\u4e0d\u51fa\u6240\u6599\uff0c200\u591a\u4e2a\u57df\u540d\u7ed3\u5c3e\u90fd\u88ab\u62ff\u8d70\u4e86\u3002\u5927\u6982\u90fd\u88ab\u8c37\u6b4c\u62a2\u8d2d\u4e00\u7a7a\u3002\n\u4e0d\u8fc7\uff0c\u6211\u7684\u597d\u5947\u5fc3\u88ab\u6fc0\u6012\u4e86\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u4e86\u5176\u4ed6\u4e00\u4e9b\u5927\u578b\u79d1\u6280\u516c\u53f8\uff1aFacebook\u3001\u82f9\u679c\u3001\u5fae\u8f6f\u548c\u4e9a\u9a6c\u900a\u3002\u8fd8\u662f\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u7edd\u5bf9\u6ca1\u6709\u9876\u7ea7\u57df\u540d\u4e86\u3002\n\u6211\u6b63\u8981\u5f00\u59cb\u6211\u7684\u4e00\u5929\uff0c\u8fd9\u65f6\u6211\u51b3\u5b9a\u5c1d\u8bd5\u6700\u540e\u4e00\u5bb6\u516c\u53f8\uff1aNetflix\u3002\n\u8fd8\u5269\u4e0b\u4e00\u4e2a\uff1anetflix.soy(\u5982\u679c\u4f60\u6ca1\u6709\u70b9\u51fb\u94fe\u63a5\uff0csoy\u5728\u897f\u73ed\u7259\u8bed\u4e2d\u7684\u610f\u601d\u662f\u6211)\u3002\u5f53\u6211\u80fd\u591f\u76f4\u63a5\u4e70\u4e0b\u5b83\u7684\u65f6\u5019\uff0c\u6211\u6709\u70b9\u4e0d\u6562\u76f8\u4fe1\u3002\n\u4e0d\u8fc7\uff0c\u6211\u8fd8\u662f\u5f88\u597d\u5947\u3002\u6211\u6240\u5728\u7684\u7f51\u7ad9\u6709\u5927\u7ea6200\u4e2a\u57df\u540d\u7ed3\u5c3e\u5728\u51fa\u552e\uff0c\u4f8b\u5982\uff0cGoPardy\u6709\u8fd1500\u4e2a\uff0c\u4f46\u76ee\u524d\u4e16\u754c\u4e0a\u603b\u5171\u67091500\u591a\u4e2a\u9876\u7ea7\u57df\u540d\uff0c\u4ece.horse\u5230.wtf\u3002\n\u6211\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u771f\u7684\u8fd8\u6709\u4e00\u4e9b\u8c37\u6b4c\u57df\u540d\u8fd8\u5728\u90a3\u91cc\u600e\u4e48\u529e\uff1f\n\u68c0\u67e5\u6bcf\u4e2a\u57df\u540d\u6ce8\u518c\u5546\u76841500\u4e2a\u7ed3\u5c3e\u4f1a\u82b1\u8d39\u592a\u957f\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2a\u5c0f\u811a\u672c\uff0c\u5728\u6bcf\u4e2a\u9876\u7ea7\u57df\u540d\u4e0a\u6267\u884cWHOIS\u67e5\u627e\uff0c\u5e76\u544a\u8bc9\u6211\u54ea\u4e9b\u662f\u53ef\u7528\u7684\u3002\u8fd9\u662f\u8c37\u6b4c\u7684\u7ed3\u679c\uff1a\n\u6211\u5f00\u59cb\u5411\u4e0b\u641c\u7d22\u82f1\u6587\u57df\u540d\u7684\u7ed3\u5c3e\uff1a.autos\u3001.au\u3001.bm\uff1b\uff0c\u5f88\u5feb\u5c31\u53d1\u73b0\u6bcf\u4e2a\u57df\u540d\u90fd\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u666e\u901a\u4eba\u4e0d\u80fd\u6ce8\u518c\u5b83\u3002\u4f8b\u5982\uff0c\u6211\u5b9e\u9645\u4e0a\u652f\u4ed8\u4e86google.gi(\u76f4\u5e03\u7f57\u9640\u662fgi)\u7684\u8d39\u7528\uff0c\u51e0\u4e2a\u5c0f\u65f6\u540e\u624d\u6536\u5230\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff1a\n\u867d\u7136\u6211\u66fe\u7ecf\u5728\u5ca9\u77f3\u4e0a\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u6109\u5feb\u7684\u5047\u671f\uff0c\u4f46\u6211\u4e0d\u662f\u76f4\u5e03\u7f57\u9640\u4eba\u3002\u8c37\u6b4c\u81ea\u5df1\u62e5\u6709google.com.gi\uff0c\u663e\u7136\u4ed6\u4eec\u751a\u81f3\u65e0\u6cd5\u6ce8\u518cgoogle.gi\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e5f\u4e0d\u662f\u76f4\u5e03\u7f57\u9640\u4eba\u3002\n\u7528\u5c3d\u4e86\u6240\u6709\u7684\u82f1\u6587\u57df\u540d\u7ed3\u5c3e\uff0c\u610f\u8bc6\u5230\u6211\u6d6a\u8d39\u4e86\u592a\u591a\u65f6\u95f4\u505a\u8fd9\u4ef6\u4e8b\uff0c\u6211\u51b3\u5b9a\u4eca\u5929\u5230\u6b64\u4e3a\u6b62\u3002\u6211\u53ea\u662f\u4e2a\u7a7f\u7740\u7f51\u98de\u7684\u5927\u8c46\u7537\u5b69\u3002\u5927\u8c46\u3002\n\u51e0\u5929\u540e\uff0c\u5728\u505a\u5b9e\u9645\u6709\u7528\u7684\u5de5\u4f5c\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u6211\u4ece\u6765\u6ca1\u6709\u68c0\u67e5\u8fc7\u90a3\u4e9b\u5947\u602a\u7684.xn--zfr164b\u57df\u540d\u662f\u4ec0\u4e48\u3002\u4ed6\u4eec\u5230\u5e95\u662f\u4ec0\u4e48\u4e1c\u897f\uff1f\u6211\u8ba4\u4e3a\u5b83\u4eec\u4e00\u5b9a\u662f\u9519\u8bef\u7684\u57df\u6216\u4ec0\u4e48\u7684\u3002\n\u4ed4\u7ec6\u9605\u8bfb\u6bcf\u4e00\u4e2a\uff0c\u6211\u610f\u8bc6\u5230\u5b83\u4eec\u5b9e\u9645\u4e0a\u4ee3\u8868\u4e86\u6765\u81ea\u5176\u4ed6\u8bed\u8a00\u7684\u5b57\u7b26\uff1a\u6c49\u8bed\u3001\u65e5\u8bed\u3001\u4fc4\u8bed\u3001\u5e0c\u814a\u8bed\uff0c\u968f\u4fbf\u4f60\u80fd\u8bf4\u51fa\u4ec0\u4e48\u3002\n\u540c\u6837\uff0c\u5b83\u4eec\u90fd\u6709\u5947\u602a\u7684\u9650\u5236\uff0c\u8981\u4e48\u662f\u79c1\u4eba\u6240\u6709\u7684\uff0c\u8981\u4e48\u662f\u4e3a\u8c37\u6b4c\u4fdd\u7559\u7684\u3002\u8fd0\u6c14\u4e0d\u597d\u3002\n\u6211\u89c9\u5f97\u81ea\u5df1\u50cf\u963f\u4ec0\u00b7\u51ef\u5f7b\u59c6(Ash Ketchum)\uff0c\u60f3\u628a\u4ed6\u4eec\u90fd\u6293\u8d77\u6765\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u6253\u5f00\u4e86Facebook\u3002\u7f51\u7ad9(facebook.web\u4e2d\u6587\u7248)\u548c\u5fae\u8f6f\u3002\u307f\u3093\u306a(\u5fae\u8f6f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u7528\u65e5\u8bed)\u3002\u5b83\u4eec\u4e5f\u90fd\u975e\u5e38\u4fbf\u5b9c\u3002\n\u90a3\u4e48\uff0c\u6211\u4e3a\u4ec0\u4e48\u8981\u6d6a\u8d39\u65f6\u95f4\u548c\u91d1\u94b1\u53bb\u505a\u8fd9\u4e9b\u5462\uff1f\u6211\u662f\u4e0d\u662f\u8981\u5728\u8fd9\u4e9b\u57df\u540d\u4e0a\u5750\u4e0a\u51e0\u5e74\uff0c\u76f4\u5230\u8c37\u6b4c(Google)\u3001\u5fae\u8f6f(Microsoft)\u3001Netflix\u548cFacebook\u652f\u4ed8\u5927\u7b14\u73b0\u91d1\u593a\u56de\u5b83\u4eec\u7684\u57df\u540d\uff0c\u7136\u540e\u4ece\u57df\u540d\u6295\u8d44\u4ebf\u4e07\u5bcc\u7fc1\u7684\u8eab\u4efd\u9000\u4f11\uff1f\n\u4e0d\u662f\u7684\u3002\u6b22\u8fce\u4ed6\u4eec\u968f\u65f6\u53d6\u56de\u3002\u5982\u679c\u6211\u4e5f\u62d2\u7edd\u8ba9\u6b65\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u975e\u5e38\u5f3a\u884c\u5730\u8fd9\u4e48\u505a(\u53c2\u89c1\u5fae\u8f6f\u4e0eMikeRoweSoft\u7684\u5bf9\u51b3)\u3002\n\u8001\u5b9e\u8bf4\uff0c\u6211\u8ba4\u4e3a\u6211\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u662f\u76f8\u5f53\u7cdf\u7cd5\u7684\u3002\u5982\u679c\u6211\u662f\u90aa\u6076\u7684\uff0c\u6211\u53ef\u4ee5\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u641e\u51fa\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u5047\u7684\u8c37\u6b4c\u767b\u5f55\u9875\u9762\uff0c\u7136\u540e\u5bf9\u65e0\u8f9c\u7684\u4eba\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u8fdb\u884c\u7f51\u7edc\u9493\u9c7c\u3002\u4eba\u4eec\u901a\u5e38\u53ef\u80fd\u4fe1\u4efb.com\u57df\u540d\uff0c\u4f46\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u9876\u7ea7\u57df\u540d\u53d1\u5e03\uff0c.com\u6b63\u5728\u6162\u6162\u53d8\u5f97\u4e0d\u90a3\u4e48\u91cd\u8981\u3002\n\u4f60\u77e5\u9053\u521b\u5efa\u81ea\u5df1\u7684\u57df\u540d\u7ed3\u5c3e\u81f3\u5c11\u8981\u82b118.5\u4e07\u7f8e\u5143\u5417\uff1f\u5bf9\u4e8e\u8fd9\u7b14\u94b1\uff0c\u6211\u8ba4\u4e3aICANN\u3001\u6ce8\u518c\u673a\u6784\u548c\u6ce8\u518c\u7f51\u7ad9\u6709\u5de8\u5927\u7684\u8d23\u4efb\u786e\u4fdd\u8fd9\u79cd\u60c5\u51b5\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u3002", "note_en": "The other day I had a mental lapse whilst looking for a new domain name, and for some reason typed &#39;google&#39; into the domain search box. This is what I saw:\n    Unsurprisingly, all 200+ domain name endings had been taken. All snapped up by Google presumably.\n  My curiosity had piqued though, so I tried some other big technology companies: Facebook, Apple, Microsoft and Amazon. Still nothing, absolutely no top level domains left.\n  I was about to get on with my day when I decided to try one last company: Netflix.\n    There was one left:  netflix.soy (if you didn&#39;t click the link, soy means &#34;I am&#34; in Spanish). I was sort of in disbelief when I was able to just go ahead and buy it.\n  I was still really curious though. The site I was on had around 200 domain endings for sale, GoDaddy, for example, has nearly 500, but in total there are currently over 1500 top level domains in the world, from .horse to .wtf.\n  I had one question:  What if there were still actually some Google domains left out there?\n  Checking all 1500 endings across every domain registrar would take far too long, so I wrote a tiny script to perform WHOIS lookups on each top level domain and tell me which were available. This was the result for Google:\n      I started going down the list of English domain endings: .autos, .au, .bm; quickly discovering that each one had a restriction meaning the average person couldn&#39;t register it. For example, I actually paid for google.gi (gi for Gibraltar), only to get this email a few hours later:\n    Although I had once been on a nice holiday to the rock, I was not Gibraltan. Google themselves own google.com.gi and apparently aren&#39;t even able to register google.gi on the basis that they are also not Gibraltans.\n  Exhausting all the English domain endings, and realising I&#39;d wasted far too much time doing this, I decided to call it a day. I was just a soy boy with my  netflix.soy.\n  A couple of days later whilst doing actual useful work, I realised I&#39;d never checked out what those weird .xn--zfr164b domains were. What the heck were they? I thought they must have been erroneous domains or something.\n  Meticulously going through each one, I realised they actually represented characters from other languages: Chinese, Japanese, Russian, Greek, you name it.\n  Again, they all had strange restrictions, were privately owned, or reserved for Google. No luck.\n      I felt like Ash Ketchum and wanted to catch&#39;em all. Next I picked up  facebook.\u7f51\u7ad9 (facebook.website in Chinese) and  microsoft.\u307f\u3093\u306a (microsoft.everyone in Japanese). They were all dirt cheap too.\n    So, why did I waste time and money doing this? Am I going to sit on these domains for years until Google, Microsoft, Netflix and Facebook pay large sums of cash to get their domains back, then retire as a domain name investing billionaire?\n  No. They&#39;re welcome to have them back anytime they want. They could probably do it pretty forcibly if I refused to budge too (see  Microsoft vs. MikeRoweSoft).\n  Truthully, I think its pretty bad that I was able to do this. If I was evil, I could knock up a fake looking Google login page and be phishing for innocent people&#39;s usernames &amp; passwords within hours. People may generally trust a .com domain, but with more and more top level domains being released, .coms are slowly becoming less relevant.\n  Did you know it costs a minimum of $185,000 to create your own domain name ending? For that kind of money, I think ICANN, the registries and registrar sites have a massive responsibility to ensure that this never happens.", "posttime": "2020-05-25 20:54:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "netflix,bought,\u57df\u540d", "title": "\u6211\u4e70\u4e86Netflix.Soy", "title_en": "I Bought Netflix.soy", "transed": 1, "url": "https://tinyprojects.dev/posts/i_bought_netflix_dot_soy", "via": "", "real_tags": ["netflix", "bought", "\u57df\u540d"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003677, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51fa\u53d1\u5730\uff1a\u83b1\u7eb3\u65af\u00b7\u6258\u74e6\u5c14\u5179\u65e5\u671f\uff1a\u7f8e\u56fd\u4e1c\u90e8\u590f\u4ee4\u65f62020\u5e745\u670824\u65e5-19\uff1a01\uff1a24\u6240\u4ee5\u5982\u679cRC6\u6bd4\u6211\u5e0c\u671b\u7684\u8981\u5927\u4e00\u70b9\uff0cRC7\u770b\u8d77\u6765\u975e\u5e38\u6b63\u5e38\u3002\u4e0d\u662f\u6211\u4eec\u5403\u8fc7\u7684\u6700\u5c0f\u7684\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\u3002\u5b83\u6b63\u597d\u5728\u5305\u7684\u4e2d\u95f4\u3002\u800c\u4e14\u8fd9\u4e9b\u4fee\u590d\u770b\u8d77\u6765\u90fd\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u53ef\u6015\u7684\u5730\u65b9\u3002\u5927\u591a\u6570\u8865\u4e01\u90fd\u5f88\u5c0f\uff0c\u7a0d\u5927\u7684\u8865\u4e01\u4e5f\u4e0d\u5927\uff0c\u800c\u4e14\u5305\u542b\u5f97\u5f88\u597d(\u4e24\u4e2a\u7a0d\u5927\u7684\u8865\u4e01\u9002\u7528\u4e8es390\u548crxrpc-\u5373\u4f7f\u662f\u90a3\u4e9b\u8865\u4e01\u4e5f\u4e0d\u662f\u771f\u7684\u90a3\u4e48\u5927)\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4e3b\u8981\u662f\u9a71\u52a8\u7a0b\u5e8f(GPU\u548c\u7f51\u7edc\u5f88\u7a81\u51fa\uff0c\u4f46\u5404\u79cd\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u5c0f\u4e1c\u897f)\u548c\u4e00\u4e9b\u6df7\u6742\u7684\u5c0f\u8865\u4e01\u5230\u5904\u90fd\u662f\u3002\u6240\u4ee5\u770b\u8d77\u6765\u4e0a\u4e2aRC\u6211\u6ca1\u4ec0\u4e48\u597d\u62c5\u5fc3\u7684\u3002\u5f53\u7136\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u6709\u53ef\u80fd\u6539\u53d8\uff0c\u4f46\u662f\u4e00\u5207\u90fd\u5c06\u5728\u4e0b\u5468\u672b\u6b63\u5f0f\u53d1\u5e03\u3002\u6572\u6572\u6728\u5934\u3002\u6211\u770b\u5230\u7684\u5927\u591a\u6570\u8ba8\u8bba\u90fd\u662f\u5173\u4e8e5.8\u7684\u5404\u79cd\u6e05\u7406\u548c\u65b0\u7279\u6027\uff0c\u6211\u8fd8\u6709\u4e00\u4e2a\u63d0\u65e9\u62c9\u5165\u8bf7\u6c42\u6b63\u5728\u7b49\u5f85\u4e2d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u672c\u5468\u5bf9\u6211\u6765\u8bf4\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\u6211\u5347\u7ea7\u4e86\u6211\u7684\u4e3b\u673a\uff0c\u800c\u4e14\u6211\u7684\u53f0\u5f0f\u673a15\u5e74\u6765\u7b2c\u4e00\u6b21\u4e0d\u662f\u57fa\u4e8e\u82f1\u7279\u5c14\u7684\u3002\u6ca1\u6709\uff0c\u6211\u8fd8\u6ca1\u6709\u6362\u6210ARM\uff0c\u4f46\u6211\u73b0\u5728\u6b63\u5728\u6446\u52a8\u4e00\u53f0AMD\u5206\u7ebf\u56683970x\u3002\u6211\u7684allmodconfig\uff1b\u6d4b\u8bd5\u7248\u672c\u73b0\u5728\u6bd4\u4ee5\u524d\u5feb\u4e86\u4e09\u500d\uff0c\u8fd9\u5728\u73b0\u5728\u7684\u5e73\u9759\u9636\u6bb5\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u6211\u80af\u5b9a\u4f1a\u5728\u4e0b\u4e00\u4e2a\u5408\u5e76\u7a97\u53e3\u4e2d\u6ce8\u610f\u5230\u5347\u7ea7\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u51fa\u53bb\u505a\u4e2a\u597d\u7684\u6700\u540e\u6d4b\u8bd5\u5427\uff0c\u8fd9\u6837\u6211\u4eec\u57285.7\u53d1\u5e03\u540e\u5c31\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e0d\u6109\u5feb\u7684\u60ca\u559c\u4e86\u3002Linus-Al Viro(2)\uff1a\u4fee\u590dcopy_fdtable()arm64\u4e2d\u7684\u500d\u589e\u6ea2\u51fa\uff1a\u5728\uff01access_ok()\u8def\u5f84\u4e0a\u6dfb\u52a0get_user()\u7c7b\u578b\u6279\u6ce8Alain Volmat(1)\uff1aI2C\uff1a\u4fee\u590di2c_device_probe Alex Elder(1)\u4e2d\u7f3a\u5c11\u7684pm_runtime_put_sync\uff1anet\uff1aipa\uff1adon&#39\uff1bt\u5728gsi_channel_poll()Alexander Monakov(1)\uff1aIOMMU/amd\uff1a\u4fee\u590dIVRS\u8868Alexander Usykin\u4e2dACPI UID\u7684\u8fc7\u5ea6\u8bfb\u53d6(1)\uff1aMEI\uff1a\u91ca\u653eMe_cl\u5bf9\u8c61\u5f15\u7528Amit Cohen(1)\uff1aselftest\uff1amlxsw\uff1aqos_mc_ware\uff1a\u6307\u5b9aarping\u8d85\u65f6\u4e3a\u6574\u6570Andrii Nakryi ko(1)\uff1abpf\uff1a\u963b\u6b62mmap()&#39\uff1bING\u53ea\u8bfb\u6620\u5c04\u4e3a\u53ef\u5199Antoine Tenart(1)\uff1aNET\uff1aPHY\uff1aMSCC\uff1aFIX\u521d\u59cb\u5316MACsec\u534f\u8bae\u6a21\u5f0fArnd Bergmann(1)\uff1ash\uff1ainclude linux/time_tyes.h for sockios Arvind Sankar(1)\uff1ax86/boot\uff1a\u5c06\u5168\u5c40\u53d8\u91cf\u6807\u8bb0\u4e3aStatic Atsushi Nemoto(1)\uff1aI2C\uff1aAltera\uff1a\u4fee\u590dxfer_msg\u548cISR\u7ebf\u7a0b\u4e4b\u95f4\u7684\u7ade\u4e89\u3002Bijan Mottahedeh(1)\uff1aIo_uring\uff1aDon&#39\uff1bt\u4f7f\u7528kiocb.private\u5b58\u50a8buf_index Bodo Stroesser(1)\uff1ascsi\uff1atarget\uff1a\u5728tmr\u5904\u7406\u7ed3\u675f\u65f6\u653e\u7f6elun_ref Boris Sukholitko(1)\uff1a__netif_Receive_SKB_core\uff1a\u901a\u8fc7\u5f15\u7528\u4f20\u9012SKB Brent Lu(1)\uff1aalsa\uff1apcm\uff1a\u4fee\u590d\u4e0d\u6b63\u786e\u7684HW_BASE\u9012\u589eCalvin Johnson(1)\uff1aCoreSight\uff1aCTI\uff1a\u5220\u9664\u4e0d\u6b63\u786e\u7684NULL\u8fd4\u56de\u68c0\u67e5CAN Guo(1)\uff1ascsi\uff1apm\u3002t\u5141\u8bb8\u4e22\u5f03\u5206\u533a\u6a21\u5f0fChristian Gmeiner(1)\uff1adrm/etNaviv\uff1afix Perfmon\u57df\u4ea4\u4e92Christian Lachner(1)\uff1aalsa\uff1ahda/Realtek-\u4fee\u590d\u5343\u5146\u5b57\u8282X570 Aorus Xtreme Christoph Hellwig\u4e0a\u7684\u9759\u9ed8\u8f93\u51fa(2)\uff1aUBFS\uff1a\u5220\u9664\u635f\u574f\u7684\u60f0\u6027\u65f6\u95f4\u652f\u6301ext4\uff1a\u4fee\u590d\u4f4d\u56fe\u6587\u4ef6Christophe Jaillet\u7684\u6587\u4ef6\u6620\u5c04\u5927\u5c0f\u68c0\u67e5(4)\uff1aIIO\uff1aDAC\uff1avBOS\u3002I2C\uff1aMUX\uff1aDEMUX-pinctrl\uff1a\u4fee\u590d&#39\uff1bi2c_demux_pinctrl_Probe()&#39\uff1bdmaengine\uff1ategra210-ADMA\uff1a\u4fee\u590d&#39\uff1bTegra_ADMA_Probe()&#39\uff1bChristophe Leroy(1)\uff1aREVERT&#34\uff1bPowerPC/32s\uff1a\u91cd\u65b0\u6392\u5e8fLinux PTE\u4f4d\u4ee5\u66f4\u597d\u5730\u5339\u914d\u54c8\u5e0cPTE\u4f4d\u3002&#34\uff1bClaudiu Manoil(1)\uff1aFelix\uff1a\u4fee\u590dioremap\u8d44\u6e90\u7684\u521d\u59cb\u5316Codrin Ciubotariu(1)\uff1aI2C\uff1aAT91\uff1a\u4fee\u590d\u603b\u7ebf\u6062\u590d\u7684devm_gpiod_get()\u4e4b\u540e\u7684pinmux Colin Ian King(1)\uff1adrm/vmwgfx\uff1a\u5220\u9664\u5bf9\u53d8\u91cfret\u7684\u5197\u4f59\u8d4b\u503cCristian Ciocaltea(1)\uff1admaengine\uff1aowl\uff1a\u5728owl_dma_get_pchan()\u4e2d\u4f7f\u7528\u6b63\u786e\u7684\u9501\u3002st_lsm6dsx_Shub_write_raw()OVL\uff1aovl_fid_to_fh()\u5206\u6bb5\u4e2d\u7684\u6f5c\u5728\u5d29\u6e83\uff1awfx\uff1a\u9519\u8bef\u8def\u5f84\u4e0a\u7684\u89e3\u9501EVM\uff1a\u4fee\u590dinit_desc()\u4e2d\u7684\u5c0f\u4e89\u7528\uff0cdrm/etNaviv\uff1a\u4fee\u590dmit_pin_Objects()\u4e2d\u7684\u6cc4\u6f0fDave\u9171(1)\uff1admaengine\uff1aidxd\uff1a\u5728\u53d6\u6d88\u5c4f\u853dDave Young\u4e4b\u540e\u4fee\u590d\u4e2d\u65ad\u5b8c\u6210(1)\uff1aefi/earlycon\uff1a\u4fee\u590d\u65e9\u671f\u3002t\u5378\u8f7dkmem David Howells\u540e\u5c06\u5185\u6838\u5185\u5b58\u6cc4\u6f0f\u5230\u7528\u6237\u7a7a\u95f4(5)\uff1arxrpc\uff1a\u4fee\u590d\u8fc7\u957f\u7684\u521d\u59cb\u91cd\u65b0\u4f20\u8f93\u8d85\u65f6afs\uff1a\u5728", "note_en": "From: Linus Torvalds  Date:  Sun May 24 2020 - 19:01:24 EST So if rc6 was a bit bigger than I would have liked, rc7 looks very normal. Not the smallest we&#39;ve had, not the largest. It&#39;s right in the middle of the pack.  And none of the fixes look like there&#39;s anything particularly scary going on. Most of it is very small, and the slightly larger patches aren&#39;t huge either and are well-contained (the two slightly larger patches are to s390 and rxrpc - and even those patches aren&#39;t really all _that_ big).  Other than that, it&#39;s mostly drivers (gpu and networking stand out, but small stuff in various other drivers) and some misc small patches all over.  So it looks like I was worried for nothing last rc. Of course, anything can still change, but everything _looks_ all set for a regular release scheduled for next weekend. Knock wood.  Most of the discussion I have seen has already been about various cleanups and new features for 5.8, and I have one early pull request already pending.  In fact, the biggest excitement this week for me was just that I upgraded my main machine, and for the first time in about 15 years, my desktop isn&#39;t Intel-based. No, I didn&#39;t switch to ARM yet, but I&#39;m now rocking an AMD Threadripper 3970x. My &#39;allmodconfig&#39; test builds are now three times faster than they used to be, which doesn&#39;t matter so much right now during the calming down period, but I will most definitely notice the upgrade during the next merge window.  Anyway, go out and give this a good final test so that we won&#39;t have any unhappy surprises after 5.7 is released..   Linus  ---  Al Viro (2):  fix multiplication overflow in copy_fdtable()  arm64: Add get_user() type annotation on the !access_ok() path  Alain Volmat (1):  i2c: fix missing pm_runtime_put_sync in i2c_device_probe  Alex Elder (1):  net: ipa: don&#39;t be a hog in gsi_channel_poll()  Alexander Monakov (1):  iommu/amd: Fix over-read of ACPI UID from IVRS table  Alexander Usyskin (1):  mei: release me_cl object reference  Amit Cohen (1):  selftests: mlxsw: qos_mc_aware: Specify arping timeout as an integer  Andrii Nakryiko (1):  bpf: Prevent mmap()&#39;ing read-only maps as writable  Antoine Tenart (1):  net: phy: mscc: fix initialization of the MACsec protocol mode  Arnd Bergmann (1):  sh: include linux/time_types.h for sockios  Arvind Sankar (1):  x86/boot: Mark global variables as static  Atsushi Nemoto (1):  i2c: altera: Fix race between xfer_msg and isr thread  Baoquan He (1):  MAINTAINERS: add files related to kdump  Benjamin Thiel (1):  efi: Pull up arch-specific prototype efi_systab_show_arch()  Bijan Mottahedeh (1):  io_uring: don&#39;t use kiocb.private to store buf_index  Bodo Stroesser (1):  scsi: target: Put lun_ref at end of tmr processing  Boris Sukholitko (1):  __netif_receive_skb_core: pass skb by reference  Brent Lu (1):  ALSA: pcm: fix incorrect hw_base increase  Calvin Johnson (1):  coresight: cti: remove incorrect NULL return check  Can Guo (1):  scsi: pm: Balance pm_only counter of request queue during system resume  Chaitanya Kulkarni (2):  null_blk: return error for invalid zone size  null_blk: don&#39;t allow discard for zoned mode  Christian Gmeiner (1):  drm/etnaviv: fix perfmon domain interation  Christian Lachner (1):  ALSA: hda/realtek - Fix silent output on Gigabyte X570 Aorus Xtreme  Christoph Hellwig (2):  ubifs: remove broken lazytime support  ext4: fix fiemap size checks for bitmap files  Christophe JAILLET (4):  iio: dac: vf610: Fix an error handling path in &#39;vf610_dac_probe()&#39;  iio: sca3000: Remove an erroneous &#39;get_device()&#39;  i2c: mux: demux-pinctrl: Fix an error handling path in &#39;i2c_demux_pinctrl_probe()&#39;  dmaengine: tegra210-adma: Fix an error handling path in &#39;tegra_adma_probe()&#39;  Christophe Leroy (1):  Revert &#34;powerpc/32s: reorder Linux PTE bits to better match Hash PTE bits.&#34;  Claudiu Manoil (1):  felix: Fix initialization of ioremap resources  Codrin Ciubotariu (1):  i2c: at91: Fix pinmux after devm_gpiod_get() for bus recovery  Colin Ian King (1):  drm/vmwgfx: remove redundant assignment to variable ret  Cristian Ciocaltea (1):  dmaengine: owl: Use correct lock in owl_dma_get_pchan()  DENG Qingfang (1):  net: dsa: mt7530: fix roaming from DSA user ports  Dan Carpenter (5):  iio: imu: st_lsm6dsx: unlock on error in st_lsm6dsx_shub_write_raw()  ovl: potential crash in ovl_fid_to_fh()  staging: wfx: unlock on error path  evm: Fix a small race in init_desc()  drm/etnaviv: Fix a leak in submit_pin_objects()  Dave Jiang (1):  dmaengine: idxd: fix interrupt completion after unmasking  Dave Young (1):  efi/earlycon: Fix early printk for wider fonts  David Ahern (1):  nexthop: Fix attribute checking for groups  David Hildenbrand (1):  device-dax: don&#39;t leak kernel memory to user space after unloading kmem  David Howells (5):  rxrpc: Fix the excessive initial retransmission timeout  afs: Don&#39;t unlock fetched data pages until the op completes successfully  rxrpc: Trace discarded ACKs  rxrpc: Fix ack discard  rxrpc: Fix a warning  Dinghao Liu (1):  net: smsc911x: Fix runtime PM imbalance on error  Dragos Bogdan (1):  staging: iio: ad2s1210: Fix SPI reading  Eran Ben Elisha (2):  net/mlx5: Fix a race when moving command interface to events mode  net/mlx5: Avoid processing commands before cmdif is ready  Eric Biggers (1):  ubifs: fix wrong use of crypto_shash_descsize()  Eric Dumazet (2):  ax25: fix setsockopt(SO_BINDTODEVICE)  tipc: block BH before using dst_cache  Eric Sandeen (1):  exfat: use iter_file_splice_write  Eugeniy Paltsev (3):  ARC: Fix ICCM &amp; DCCM runtime size checks  ARC: [plat-hsdk]: fix USB regression  ARC: guard dsp early init against non ARCv2  Ewan D. Milne (1):  scsi: qla2xxx: Do not log message when reading port speed via sysfs  Fabrice Gasnier (2):  iio: adc: stm32-adc: fix device used to request dma  iio: adc: stm32-dfsdm: fix device used to request dma  Gerald Schaefer (2):  s390/mm: fix set_huge_pte_at() for empty ptes  s390/kaslr: add support for R_390_JMP_SLOT relocation type  Greg Kroah-Hartman (1):  Revert &#34;kobject: Make sure the parent does not get released before its children&#34;  Gregory CLEMENT (1):  iio: adc: ti-ads8344: Fix channel selection  Grygorii Strashko (1):  net: ethernet: ti: cpsw: fix ASSERT_RTNL() warning during suspend  Guixiong Wei (1):  drm/vmwgfx: Fix parameter name in vmw_bo_init  Gustavo A. R. Silva (1):  i2c: mux: Replace zero-length array with flexible-array  Heikki Krogerus (1):  kobject: Make sure the parent does not get released before its children  Heiner Kallweit (1):  r8169: fix OCP access on RTL8117  Heinrich Schuchardt (1):  efi/libstub: Avoid returning uninitialized data from setup_graphics()  Ido Schimmel (2):  netdevsim: Ensure policer drop counter always increases  selftests: netdevsim: Always initialize &#39;RET&#39; variable  Ignat Korchagin (1):  um: Fix typo in vector driver transport option definition  Ilya Dryomov (1):  vsprintf: don&#39;t obfuscate NULL and error pointers  Jakub Sitnicki (1):  flow_dissector: Drop BPF flow dissector prog ref on netns cleanup  Jan Schmidt (1):  drm/edid: Add Oculus Rift S to non-desktop list  Jason A. Donenfeld (4):  wireguard: selftests: use newer iproute2 for gcc-10  wireguard: noise: read preshared key while taking lock  wireguard: queueing: preserve flow hash across packet scrubbing  wireguard: noise: separate receive counter from send counter  Jason Yan (1):  drm/vmwgfx: Return true in function vmw_fence_obj_signaled()  Jens Axboe (4):  io_uring: initialize ctx-&gt;sqo_wait earlier  io_uring: remove dead check in io_splice()  io_uring: cancel work if task_work_add() fails  io_uring: don&#39;t add non-IO requests to iopoll pending list  Jere Lepp\u00c3nen (1):  sctp: Start shutdown on association restart if in SHUTDOWN-SENT state and socket is closed  Jeremy Kerr (1):  net: bmac: Fix read of MAC address from ROM  Jiri Pirko (1):  mlxsw: spectrum: Fix use-after-free of split/unsplit/type_set in case reload fails  Joerg Roedel (1):  iommu: Fix deferred domain attachment  Johannes Berg (2):  um: Fix xor.h include  um: syscall.c: include &lt;asm/unistd.h&gt;  John Hubbard (3):  rapidio: fix an error in get_user_pages_fast() error handling  selftests/vm/.gitignore: add mremap_dontunmap  selftests/vm/write_to_hugetlbfs.c: fix unused variable warning  Jonathan McDowell (1):  net: ethernet: stmmac: Enable interface clocks on probe for IPQ806x  Josh Poimboeuf (1):  x86/unwind/orc: Fix unwind_get_return_address_ptr() for inactive tasks  KP Singh (1):  security: Fix hook iteration for secid_to_secctx  Kamal Dasu (1):  mtd:rawnand: brcmnand: Fix PM resume crash  Kefeng Wang (1):  riscv: Fix print_vm_layout build error if NOMMU  Keno Fischer (1):  arm64: Fix PTRACE_SYSEMU semantics  Klaus Doth (1):  misc: rtsx: Add short delay after exit from ASPM  Kurt Kanzenbach (1):  dt-bindings: net: dsa: b53: Add missing size and address cells to example  Lenny Szubowicz (1):  efi/libstub/x86: Avoid EFI map buffer alloc in allocate_e820()  Leon Romanovsky (1):  net: phy: propagate an error back to the callers of phy_sfp_probe  Leon Yu (1):  net: stmmac: don&#39;t attach interface until resume finishes  Linus Torvalds (1):  Linux 5.7-rc7  Lo\u00c3c Yhuel (1):  tpm: check event log version before reading final events  Luca Coelho (1):  iwlwifi: pcie: handle QuZ configs with killer NICs as well  Madhuparna Bhowmik (2):  evm: Fix RCU list related warnings  ipv6: Fix suspicious RCU usage warning in ip6mr  Manivannan Sadhasivam (1):  net: qrtr: Fix passing invalid reference to qrtr_local_enqueue()  Maor Dickman (1):  net/mlx5e: Fix allowed tc redirect merged eswitch offload cases  Marc Payne (1):  r8152: support additional Microsoft Surface Ethernet Adapter variant  Marco Elver (1):  kasan: disable branch tracing for core runtime  Martin KaFai Lau (1):  net: inet_csk: Fix so_reuseport bind-address cache in tb-&gt;fast*  Masahiro Yamada (2):  arc: ptrace: hard-code &#34;arc&#34; instead of UTS_MACHINE  arc: remove #ifndef CONFIG_AS_CFI_SIGNAL_FRAME  Matt Ranostay (1):  iio: chemical: atlas-sensor: correct DO-SM channels  Michael Ellerman (1):  powerpc/64s: Disable STRICT_KERNEL_RWX  Michael S. Tsirkin (1):  vhost: missing __user tags  Michal Kubecek (1):  ethtool: count header size in reply size estimate  Mike Rapoport (2):  sparc32: use PUD rather than PGD to get PMD in srmmu_nocache_init()  sparc32: fix page table traversal in srmmu_nocache_init()  Miquel Raynal (1):  mtd: spinand: Propagate ECC information to the MTD structure  Moshe Shemesh (3):  net/mlx5: Add command entry handling completion  net/mlx5: Fix memory leak in mlx5_events_init  net/mlx5e: Update netdev txq on completions during closure  Namjae Jeon (1):  exfat: add the dummy mount options to be backward compatible with staging/exfat  Naoya Horiguchi (1):  MAINTAINERS: update email address for Naoya Horiguchi  Nathan Chancellor (1):  x86/mmiotrace: Use cpumask_available() for cpumask_var_t variables  Navid Emamdoost (1):  apparmor: Fix use-after-free in aa_audit_rule_init  Neil Horman (1):  sctp: Don&#39;t add the shutdown timer if its already been added  Nicholas Kazlauskas (1):  drm/amd/display: Defer cursor lock until after VUPDATE  Nick Desaulniers (1):  x86: bitops: fix build regression  Niklas Schnelle (1):  s390/pci: Fix s390_mmio_read/write with MIO  Oscar Carter (1):  staging: greybus: Fix uninitialized scalar variable  Palmer Dabbelt (1):  RISC-V: gp_in_global needs register keyword  Pavankumar Kondeti (1):  sched/debug: Fix requested task uclamp values shown in procfs  Pavel Begunkov (2):  io_uring: don&#39;t prepare DRAIN reqs twice  io_uring: fix FORCE_ASYNC req preparation  PeiSen Hou (1):  ALSA: hda/realtek - Add more fixup entries for Clevo machines  Peter Ujfalusi (1):  dmaengine: ti: k3-udma: Fix TR mode flags for slave_sg and memcpy  Phil Auld (1):  sched/fair: Fix enqueue_task_fair() warning some more  Philipp Rudo (1):  s390/kexec_file: fix initrd location for kdump kernel  Punit Agrawal (1):  efi: cper: Add support for printing Firmware Error Record Reference  Qii Wang (1):  MAINTAINERS: add maintainer for mediatek i2c controller driver  Qiushi Wu (3):  net: sun: fix missing release regions in cas_init_one().  rxrpc: Fix a memory leak in rxkad_verify_response()  net/mlx4_core: fix a memory leak bug.  Rafael J. Wysocki (1):  ACPI: EC: PM: Avoid flushing EC work when EC GPE is inactive  Rafa\u00c5 Hibner (1):  dmaengine: zynqmp_dma: Move list_del inside zynqmp_dma_free_descriptor.  Raul E Rangel (1):  iommu/amd: Fix get_acpihid_device_id()  Ricardo Ribalda Delgado (1):  mtd: Fix mtd not registered due to nvmem name collision  Richard Weinberger (1):  ubi: Fix seq_file usage in detailed_erase_block_info debugfs file  Ritesh Harjani (1):  ext4: fix EXT4_MAX_LOGICAL_BLOCK macro  Roberto Sassu (3):  ima: Set file-&gt;f_mode instead of file-&gt;f_flags in ima_calc_file_hash()  evm: Check also if *tfm is an error pointer in init_desc()  ima: Fix return value of ima_write_policy()  Rodrigo Siqueira (1):  drm/amd/display: Remove dml_common_def file  Roi Dayan (5):  net/mlx5e: Fix inner tirs handling  net/mlx5: Fix cleaning unmanaged flow tables  net/mlx5: Don&#39;t maintain a case of del_sw_func being null  net/mlx5: Annotate mutex destroy for root ns  net/mlx5e: CT: Correctly get flow rule  Roland Scheidegger (1):  drm/vmwgfx: update MAINTAINERS entry  Roman Mashak (1):  net sched: fix reporting the first-time use timestamp  Russell King (1):  net: mvpp2: fix RX hashing for non-10G ports  Sabrina Dubroca (1):  net: don&#39;t return invalid table id error when we fall back to PF_UNSPEC  Sagar Shrikant Kadam (1):  tty: serial: add missing spin_lock_init for SiFive serial console  Saravana Kannan (2):  driver core: Fix SYNC_STATE_ONLY device link implementation  driver core: Fix handling of SYNC_STATE_ONLY + STATELESS device links  Scott Bahling (1):  ALSA: iec1712: Initialize STDSP24 properly when using the model=staudio option  Shay Drory (1):  net/mlx5: Fix error flow in case of function_setup failure  Stephen Worley (1):  net: nlmsg_cancel() if put fails for nhmsg  Tang Bin (1):  net: sgi: ioc3-eth: Fix return value check in ioc3eth_probe()  Tariq Toukan (1):  net/mlx5e: kTLS, Destroy key object after destroying the TIS  Tetsuo Handa (1):  pipe: Fix pipe_full() test in opipe_prep().  Tiezhu Yang (1):  net: Fix return value about devm_platform_ioremap_resource()  Todd Malsbary (2):  mptcp: use rightmost 64 bits in ADD_ADDR HMAC  mptcp: use untruncated hash in ADD_ADDR HMAC  Uladzislau Rezki (1):  z3fold: fix use-after-free when freeing handles  Vadim Fedorenko (3):  net/tls: fix encryption error checking  net/tls: free record only on encryption error  net: ipip: fix wrong address family in init error path  Valentin Longchamp (1):  net/ethernet/freescale: rework quiesce/activate for ucc_geth  Vincent Guittot (1):  sched/fair: Fix unthrottle_cfs_rq() for leaf_cfs_rq list  Vineet Gupta (3):  ARC: entry: comment  ARC: [plat-eznps]: Restrict to CONFIG_ISA_ARCOMPACT  ARC: show_regs: avoid extra line of output  Vitaly Kuznetsov (1):  x86/hyperv: Properly suspend/resume reenlightenment notifications  Vivek Goyal (2):  ovl: clear ATTR_FILE from attr-&gt;ia_valid  ovl: clear ATTR_OPEN from attr-&gt;ia_valid  Vladimir Murzin (1):  dmaengine: dmatest: Restore default for channel  Vladimir Oltean (1):  net: mscc: ocelot: fix address ageing time (again)  Vladimir Stempen (1):  drm/amd/display: DP training to set properly SCRAMBLING_DISABLE  Wei Yongjun (6):  staging: kpc2000: fix error return code in kp2000_pcie_probe()  ipack: tpci200: fix error return code in tpci200_register()  bus: mhi: core: Fix some error return code  exfat: fix possible memory leak in exfat_find()  net: ethernet: ti: fix some return value check of cpsw_ale_create()  net: ethernet: ti: am65-cpsw-nuss: fix error handling of am65_cpsw_nuss_probe  Wolfram Sang (2):  i2c: use my kernel.org address from now on  i2c: algo-pca: update contact email  Xiaoguang Wang (1):  io_uring: reset -EBUSY error when io sq thread is waken up  Xiyu Yang (2):  apparmor: fix potential label refcnt leak in aa_change_profile  apparmor: Fix aa_label refcnt leak in policy_update  YueHaibing (1):  vdpasim: remove unused variable &#39;ret&#39;  Yuqi Jin (1):  net: revert &#34;net: get rid of an signed integer overflow in ip_idents_reserve()&#34;", "posttime": "2020-05-25 20:53:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,torvalds,\u4fee\u590d", "title": "Linus Torvalds\u58f0\u79f0\u6539\u7528AMD\u5904\u7406\u5668\u540e\u6027\u80fd\u6709\u6240\u63d0\u9ad8", "title_en": "Linus Torvalds claims performance improvement after switching to AMD processor", "transed": 1, "url": "http://lkml.iu.edu/hypermail/linux/kernel/2005.3/00406.html", "via": "", "real_tags": ["\u6027\u80fd", "torvalds", "\u4fee\u590d"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003676, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5468\u6211\u7ed9\u81ea\u5df1\u5efa\u4e86\u4e00\u4e2aRSS1\u805a\u5408\u56682\u3002\u6709\u5f88\u591a\u7f51\u7ad9\u90fd\u662f\u6211\u7684\u670b\u53cb\u5199\u7684\uff0c\u6216\u8005\u8d28\u91cf\u8db3\u591f\u9ad8\uff0c\u6211\u60f3\u9605\u8bfb\u4e0a\u9762\u53d1\u5e03\u7684\u6240\u6709\u5185\u5bb9\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u90a3\u4e9b\u8db3\u591f\u53d7\u6b22\u8fce\u7684\u4e1c\u897f\u901a\u8fc7\u9ed1\u5ba2\u65b0\u95fb(Hacker News)\u6216\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4f20\u7ed9\u6211\u3002\n\u6211\u5f88\u4eab\u53d7\u5efa\u9020\u5b83\u7684\u4e50\u8da3\uff0c\u6211\u8ba4\u4e3a\u5b83\u7684\u8bbe\u8ba1\u5f88\u6709\u8da3\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6211\u4e5f\u4f1a\u7528\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u6765\u8c08\u8c08\u6211\u6700\u8fd1\u975e\u5e38\u559c\u6b22\u5199\u7684\u90a3\u79cd\u5b9a\u5236\u8f6f\u4ef6\u3002\n\u8fd9\u5c31\u662f\u5b83\u770b\u8d77\u6765\u7684\u6837\u5b50\u3002\u8fd9\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6258\u7ba1\u5728news.routley.io\u4e0a\uff0c\u5176\u4e2d\u5305\u542b\u6307\u5411\u6211\u8ba2\u9605\u7684\u6bcf\u4e2a\u535a\u5ba2\u6700\u8fd130\u5929\u7684\u5e16\u5b50\u7684\u94fe\u63a5\u3002\n\u7f51\u7ad9\u548c\u751f\u6210\u5b83\u7684\u4ee3\u7801\u5b58\u50a8\u5728\u5355\u4e00\u7684GitHub repo\u4e2d\uff0c\u5b83\u901a\u8fc7\u5c06GitHub\u7684\u51e0\u4e2a\u529f\u80fd\u7c98\u5408\u5728\u4e00\u8d77\u6765\u5de5\u4f5c\u3002\n\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684go\u811a\u672c\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u6211\u8ba2\u9605\u7684RSS\u63d0\u8981\u7684\u5217\u8868\u3002\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u5b83\u4f1a\uff1a\n\u904d\u5386\u63d0\u8981\uff0c\u4ece\u6bcf\u4e2a\u63d0\u8981\u4e2d\u83b7\u53d6\u5e16\u5b50\u5217\u8868\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u6240\u6709\u5e16\u5b50\u7684\u5927\u5217\u8868\u4e2d\u3002\n\u4f7f\u7528Go\u7684HTML\u6a21\u677f\u5305\u751f\u6210\u5305\u542b\u5e16\u5b50\u5217\u8868\u7684\u81ea\u5305\u542bHTML\u9875\u9762\u3002\n\u5df2\u4e3a\u56de\u8d2d\u542f\u7528GitHub\u9875\u9762\u3002\u5b83\u63d0\u4f9b\u5b9a\u5236\u57dfnews.routley.io\u4e0a\u7684docsdirectory(\u53ea\u5305\u542bindex.html\u6587\u4ef6)\u7684\u5185\u5bb9\u3002\n\u6b64\u64cd\u4f5c\u7531cron\u89e6\u53d1\uff0c\u6bcf\u5c0f\u65f6\u8fd0\u884c\u4e00\u6b21\u3002\u5f53\u66f4\u65b0\u7684index.html\u88ab\u63a8\u9001\u5230\u56de\u8d2d\u65f6\uff0cGitHub\u9875\u9762\u4f1a\u81ea\u52a8\u66f4\u65b0\u7f51\u7ad9\u3002\n\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u6211\u4f1a\u5c06\u5176\u4f5c\u4e3aCLI\u5de5\u5177\u6765\u6784\u5efa\uff0c\u8fd9\u6837\u5176\u4ed6\u4eba\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u751f\u6210\u4ed6\u4eec\u81ea\u5df1\u7684RSS\u805a\u5408\u5668\u3002\u8fd9\u589e\u52a0\u4e86\u6211\u9700\u8981\u8003\u8651\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\u4f8b\u5982\uff0c\u6211\u9700\u8981\uff1a\n\u5b9a\u4e49\u4e00\u79cd\u65b9\u5f0f\uff0c\u8ba9\u4eba\u4eec\u6307\u5b9a\u8981\u4ece\u4e2d\u62c9\u51fa\u5e16\u5b50\u7684\u63d0\u8981\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5e26\u6709\u9884\u5b9a\u4e49\u8bed\u6cd5\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8bfb\u53d6\u548c\u89e3\u6790\u5b83\u3002\n\u5982\u679c\u7528\u6237\u4e0d\u60f3\u4f7f\u7528GitHub\u9875\u9762\uff0c\u5219\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u8981\u5c06HTML\u8f93\u51fa\u5230\u7684\u6587\u4ef6\u7684\u540d\u79f0\u3002\n\u5c06\u751f\u6210RSS\u805a\u5408\u5668\u7684\u4ee3\u7801\u5b58\u50a8\u5728\u4e0e\u5b58\u50a8\u548c\u670d\u52a1\u6211\u7684RSS\u805a\u5408\u5668\u7684repo\u4e0d\u540c\u7684repo\u4e2d\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u53ef\u4ee5\u514b\u9686\u6216\u6d3e\u751f\u5b83\uff0c\u800c\u4e0d\u4f1a\u5f97\u5230\u7279\u5b9a\u4e8e\u6211\u7684\u805a\u5408\u5668\u7684\u4e1c\u897f\u3002\n\u66f4\u65b0\u811a\u672c\u4ee5\u540c\u65f6\u8bfb\u53d6\u591a\u4e2a\u63d0\u8981\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8ba2\u9605\u5927\u91cf\u63d0\u8981\u7684\u7528\u6237\u6765\u8bf4\uff0c\u5b83\u4ecd\u7136\u5f88\u5feb\u3002\n\u8fd9\u4e9b\u90fd\u4e0d\u662f\u7279\u522b\u96be\u6dfb\u52a0\u7684\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u90fd\u589e\u52a0\u4e86\u9879\u76ee\u7684\u603b\u4f53\u590d\u6742\u6027\u3002\u5728\u6211\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u6211\u7f16\u5199\u4e86\u8bb8\u591a\u4ee3\u7801\uff0c\u4f9b\u5176\u4ed6\u4eba\u2018\u4f7f\u7528\u2019-\u6709\u65f6\u662f\u76f4\u63a5\u7684\uff0c\u4f46\u4e5f\u6709\u95f4\u63a5\u7684\uff0c\u5f53\u4ed6\u4eec\u9605\u8bfb\u4ee3\u7801\u65f6\uff0c\u5bf9\u5176\u8fdb\u884c\u66f4\u6539\u5e76\u4f7f\u5176\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\u3002\u7f16\u5199\u5176\u4ed6\u4eba\u4f7f\u7528\u7684\u4ee3\u7801\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\u3002\u6709\u65f6\uff0c\u60a8\u53ef\u4ee5\u9000\u4e00\u6b65\uff0c\u4e3a\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\uff0c\u8fd9\u662f\u4ef6\u597d\u4e8b\u3002\nRSS\u4ee3\u8868\u201c\u771f\u6b63\u7684\u7b80\u5355\u8054\u5408\u201d\u3002\u8fd9\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5141\u8bb8\u7f51\u7ad9\u4ee5\u673a\u5668\u53ef\u8bfb\u7684\u683c\u5f0f\u5217\u51fa\u5176\u5185\u5bb9\u3002\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bfb\u53d6RSS\u63d0\u8981\uff0c\u5c06\u591a\u4e2a\u7f51\u7ad9\u7684\u5185\u5bb9\u96c6\u4e2d\u5230\u4e00\u4e2a\u5730\u65b9\u3002\n[\u8fd4\u56de]\u3002\n\u6211\u79f0\u5b83\u4e3a\u201cRSS\u805a\u5408\u5668\u201d\uff0c\u800c\u4e0d\u662f\u66f4\u5e38\u89c1\u7684\u201cRSS\u9605\u8bfb\u5668\u201d\uff0c\u56e0\u4e3a\u6211\u7684\u9605\u8bfb\u5668\u4e0d\u5141\u8bb8\u4f60\u76f4\u63a5\u9605\u8bfb\u4efb\u4f55\u5185\u5bb9--\u5b83\u53ea\u662f\u94fe\u63a5\u5230\u6e90\u7f51\u9875\u3002\n[\u8fd4\u56de]", "note_en": "This week I built myself an RSS  1 aggregator  2. There are acouple of websites that are written by friends, or are of high enough qualitythat I want to read everything published on them, not just the things that arepopular enough make their way to me via Hacker News or similar.\n I had fun building it, and I think its design is interesting, so let\u2019s take alook at how it works. I\u2019ll also use it as an example to talk about the sort ofbespoke software that I\u2019ve really been enjoying writing recently.\n   This is what it looks like. It\u2019s a webpage, hosted at news.routley.io, which contains links to the last 30days worth of posts from each of the blogs I subscribe to.\n The website and the code which generates it are stored in a single GitHub repo, and it works bygluing together a couple of GitHub features.\n  I wrote a simple Go script,which stores a list of RSS feeds I subscribe to. When the script is run, it:\n Iterates over the feeds, fetches the list of posts from each one, and storesthem in a big list of all posts\n Uses Go\u2019s HTML templating package to generate a self-contained HTML pagecontaining the list of posts\n  Github Pages is enabled for the repo. It serves the contents of the  docsdirectory (which just contains the  index.html file) on my custom domain news.routley.io.\n    This action is triggered by a cron, and runs every hour. When the updated index.html is pushed to the repo, GitHub Pages automatically updates thewebsite.\n  Historically, I would have built this as a CLI tool, so other people could useit to generate their own RSS aggregators. This adds a number of things I\u2019d needto think about. For example I\u2019d need to:\n Define a way to let people specify feeds to pull posts from. This wouldprobably be a config file with a pre-defined syntax, which we\u2019d need to readand parse.\n Let the user specify the name of the file to output HTML to in case they don\u2019twant to use GitHub Pages.\n  Store the code which generates the RSS aggregator to be in a separate repofrom the repo which stores and serves my RSS aggregator, so users can clone orfork it without getting things specific to my aggregator.\n Update the script to read multiple feeds concurrently, so it remains fast forusers who subscribe to large numbers of feeds.\n None of these are particularly difficult to add, but each adds to the totalcomplexity of the project. In my day job as a software engineer, I write a lotof code which is \u2018used\u2019 by other people - sometimes directly, but alsoindirectly when they read it, make changes to it and keep it running inproduction. Writing code that other people use requires extra work. Sometimesit\u2019s nice to step back from it and write code that\u2019s just for yourself.\n RSS stands for \u2018Really SimpleSyndication\u2019. It\u2019s a protocol that lets websites list their content in amachine-readable format. Applications can read RSS feeds to pull contentfrom multiple websites into one place.\n   [return]\n I call it an \u2018RSS aggregator\u2019 rather than the more common \u2018RSSreader\u2019 because mine doesn\u2019t let you read any of the content directly - itjust links out to the source webpages.\n   [return]", "posttime": "2020-05-25 20:39:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u805a\u5408,software,rss", "title": "\u5b9a\u5236\u8f6f\u4ef6\u548c\u4e00\u4e2a\u7b80\u5355\u7684RSS\u805a\u5408\u5668", "title_en": "Bespoke software, and a simple RSS aggregator", "transed": 1, "url": "https://routley.io/posts/bespoke-software-rss-aggregator/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u805a\u5408", "software", "rss"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u4e92\u8054\u7f51\u4e0a\u7684\u5927\u91cf\u6d41\u5a92\u4f53\u548c\u89c6\u9891\u4f1a\u8bae\u7f3a\u4e4f\u97f3\u4e50\u4e50\u8da3\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u800c\u8fd9\u5c31\u662f\u672c\u8bfe\u7a0b\u7684\u4e3b\u9898\uff1a\u9ad8\u8d28\u91cf\u3001\u8fd1\u540c\u6b65\u7684\u97f3\u4e50\u534f\u4f5c\u3002\u5728\u9002\u5f53\u7684\u6761\u4ef6\u4e0b\uff0c\u4e92\u8054\u7f51\u53ef\u4ee5\u7528\u4e8e\u8d85\u4f4e\u5ef6\u8fdf\u3001\u672a\u538b\u7f29\u7684\u58f0\u97f3\u4f20\u8f93\u3002\u672c\u8bfe\u7a0b\u6559\u6388\u5efa\u7acb\u57ce\u5e02\u5230\u57ce\u5e02\u6f14\u64ad\u5ba4\u5230\u6f14\u64ad\u5ba4\u97f3\u9891\u94fe\u63a5\u7684\u5f00\u6e90(\u514d\u8d39)\u6280\u672f\u3002\u76ee\u6807\u662f\u5206\u6563\u6392\u7ec3\u3001\u5236\u4f5c\u548c\u5206\u79bb\u5408\u594f\u97f3\u4e50\u4f1a\u3002\u8bbe\u7f6e\u8fd9\u6837\u7684\u94fe\u8def\u5e76\u5bf9\u5176\u8fdb\u884c\u8c03\u8bd5\u9700\u8981\u7f51\u7edc\u534f\u8bae\u77e5\u8bc6\u3001\u7f51\u7edc\u97f3\u9891\u95ee\u9898\u548c\u4e00\u4e9b\u542c\u529b\u8bad\u7ec3\u3002\n\u8bfe\u7a0b3\uff1aJackTrip\u5e94\u7528\u7a0b\u5e8f+\u8fde\u63a5\u4e0eJackTrip\u6709\u5173\u7684\u95ee\u9898\uff1a\u7f51\u7edc\u548c\u97f3\u9891\u3002P2P\u4f1a\u8bdd\u548c\u591a\u7ad9\u70b9\u8bbe\u7f6e\u3002\u7b2c\u516d\u8bb2\uff1a\u7f51\u7edc\u97f3\u9891\u827a\u672f\u4e0e\u5b9e\u8df5\u7684\u672a\u6765\uff0c\u7f51\u7edc\u97f3\u9891\u7684\u66ff\u4ee3\u5e73\u53f0\u3002\n\u514b\u91cc\u65af\u00b7\u67e5\u592b(Chris Chafe)\uff0c\u97f3\u4e50\u7cfb\u526f\u6559\u6388\u517cCCRMA\u4e3b\u4efb", "note_en": "Today&#39;s vast amount of streaming and video conferencing on the Internet lacks one aspect of musical fun and that&#39;s what this course is about: high-quality, near-synchronous musical collaboration. Under the right conditions, the Internet can be used for ultra-low-latency, uncompressed sound transmission. The course teaches open-source (free) techniques for setting up city-to-city studio-to-studio audio links. Distributed rehearsing, production and split ensemble concerts are the goal. Setting up such links and debugging them requires knowledge of network protocols, network audio issues and some ear training.\n    Session 3: Jacktrip Application + Connection Things that go wrong with Jacktrip: Network &amp; Audio. P2P Sessions and Multi-site setups.    Session 6: Future Future of the art and practice of network audio, alternative platforms for network audio.\n   Chris Chafe,\u00a0Professor of Music and Director of  CCRMA", "posttime": "2020-05-25 20:38:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f14\u5531\u4f1a,jamming,\u97f3\u9891", "title": "\u5728\u7ebf\u5e72\u6270\u4e0e\u6f14\u5531\u4f1a\u6280\u672f", "title_en": "Online Jamming and Concert Technology", "transed": 1, "url": "https://online.stanford.edu/courses/sohs-music0001-online-jamming-and-concert-technology", "via": "", "real_tags": ["\u6f14\u5531\u4f1a", "jamming", "\u97f3\u9891"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u65e7\u7684\u4f46\u6027\u80fd\u826f\u597d\u7684Dell Latitude E6410\u7b14\u8bb0\u672c\u5728\u51e0\u4e2a\u6708\u524d\u505c\u6b62\u5145\u7535\uff0c\u5e76\u4f7f\u7528\u539f\u6765\u7684\u6234\u5c14\u4ea4\u6d41\u7535\u6e90\u9002\u914d\u5668\u3002\u5b83\u53ea\u662f\u5076\u5c14\u5de5\u4f5c\uff0c\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6d41\u7535\u6e90\u9002\u914d\u5668\u7684\u84dd\u8272LED\u5728\u63d2\u5165\u540e\u7184\u706d\u3002\u6211\u5c1d\u8bd5\u4e86\u53e6\u4e00\u4e2a\u6234\u5c14\u7535\u6e90\u9002\u914d\u5668\uff0c\u4f46\u7ed3\u679c\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u8fd9\u662f\u7b14\u8bb0\u672c\u7535\u8111\u4e00\u4fa7\u7684\u786c\u4ef6\u6545\u969c\u3002\n\u7136\u800c\uff0cKrischan\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4ed6\u5c1d\u8bd5\u4e86\u53e6\u4e00\u5bb6\u5236\u9020\u5546\u768420V\u7535\u6e90\u9002\u914d\u5668\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u53f0\u7b14\u8bb0\u672c\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5145\u7535\u4ecd\u7136\u662f\u65e0\u6548\u7684\u3002BIOS\u4e2d\u5f39\u51fa\u9519\u8bef\u4fe1\u606f\u201c\u65e0\u6cd5\u786e\u5b9a\u4ea4\u6d41\u7535\u6e90\u9002\u914d\u5668\u201d\u3002\n\u6211\u4eec\u505a\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u53d1\u73b0\u4e86\u4e00\u7bc7\u6709\u8da3\u7684\u6587\u7ae0\uff0c\u63d0\u5230\u4e86\u7535\u6e90\u9002\u914d\u5668\u7684\u4e00\u4e2a\u989d\u5916\u7684\u6570\u636e\u7ba1\u811a(\u63d2\u5934\u7684\u5185\u90e8\u7ba1\u811a)\uff0c\u7b14\u8bb0\u672c\u4f7f\u7528\u5b83\u6765\u901a\u8fc7\u4e00\u7ebf\u534f\u8bae\u201c\u901a\u4fe1\u201d\u548c\u9a8c\u8bc1\u7535\u6e90\u9002\u914d\u5668\u3002\n\u56e0\u6b64\uff0c\u4e0b\u4e00\u4e2a\u60f3\u6cd5\u76f8\u5f53\u4e0d\u540c\u5bfb\u5e38\uff0c\u4f46\u5374\u662f\u671d\u7740\u6b63\u786e\u65b9\u5411\u8fc8\u51fa\u7684\u4e00\u6b65\u3002\u6211\u4eec\u4f7f\u7528\u975eHP\u7535\u6e90\u9002\u914d\u5668\u7684\u7535\u6e90\u7ebf(PWR/GND)\uff0c\u5e76\u5c06\u63d2\u5934\u7684\u6570\u636e\u5f15\u811a+GND\u8fde\u63a5\u5230\u539f\u59cbHP\u7535\u6e90\u9002\u914d\u5668\u3002\n\u6211\u4eec\u6b3a\u9a97\u7b14\u8bb0\u672c\u201c\u8ba4\u4e3a\u201d\u5b83\u4ecd\u7136\u901a\u8fc7\u6570\u636e\u7ebf\u8fde\u63a5\u5230\u6709\u6545\u969c\u768419V\u7535\u6e90\u9002\u914d\u5668\uff0c\u5e76\u4f7f\u7528\u6765\u81ea\u8f85\u52a9\u5de5\u4f5c\u7535\u6e90\u7684\u4ea4\u6d41\u7535\u6e90\u3002\n\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u7834\u83b7\u4e86\u60e0\u666e\u9002\u914d\u5668\u7684\u6848\u4f8b\uff0c\u5e76\u5bf9\u4e0a\u9762\u63d0\u5230\u7684\u6676\u4f53\u7ba1\u6837\u5f0f\u82af\u7247\u8fdb\u884c\u4e86\u62c6\u710a\u3002\u5b83\u8fde\u63a5\u5230\u6570\u636e\u7ebf\u4e0a\uff0c\u5e76\u6807\u6709\u201cDallas-250X\u201d\u3002\n\u4e0b\u4e00\u4e2a\u60f3\u6cd5\u662f\u628a\u8fd9\u4e2a\u82af\u7247\u76f4\u63a5\u653e\u5230\u7b14\u8bb0\u672c\u91cc\u3002\u6211\u4eec\u5c06\u6570\u636e\u9488\u4ece\u63d2\u5b54\u8ffd\u6eaf\u5230\u4e3b\u677f\u4e0a\u7684\u8fde\u63a5\u5668\u3002\u6211\u4eec\u5207\u65ad\u4e86\u6570\u636e\u7ebf\uff0c\u5c06Dallas(Maxim One Wire)\u82af\u7247\u3001\u7535\u963b\u5668\u548c\u4e8c\u6781\u7ba1\u710a\u63a5\u5230\u7535\u8def\u677f\u8fde\u63a5\u5668\u4e0a\u3002\u4e8c\u6781\u7ba1\u548c\u7535\u963b\u5668\u53ef\u80fd\u662f\u53ef\u9009\u7684\uff0c\u5c5e\u4e8e\u4fdd\u62a4\u7535\u8def\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u4e2a\u9ed1\u5ba2\u771f\u7684\u594f\u6548\u4e86\uff01\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u7535\u6e90\u9002\u914d\u5668\uff0c\u7b14\u8bb0\u672c\u8fd0\u884c\u548c\u5145\u7535\u60c5\u51b5\u826f\u597d\u3002BIOS\u4ecd\u80fd\u4eceDallas\u82af\u7247\u63a5\u6536\u5230\u6b63\u786e\u7684\u4fe1\u606f\uff0c\u8be5\u4fe1\u606f\u73b0\u5728\u5df2\u710a\u63a5\u5230\u7b14\u8bb0\u672c\u4e2d\u3002\n*\u6b64\u8868\u5355\u6536\u96c6\u60a8\u7684\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u5185\u5bb9\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8ddf\u8e2a\u7f51\u7ad9\u4e0a\u7684\u8bc4\u8bba\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\uff0c\u5728\u8be5\u653f\u7b56\u4e2d\uff0c\u60a8\u5c06\u83b7\u5f97\u6709\u5173\u6211\u4eec\u5b58\u50a8\u60a8\u7684\u6570\u636e\u7684\u4f4d\u7f6e\u3001\u65b9\u5f0f\u548c\u539f\u56e0\u7684\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "My old but good Dell Latitude E6410 notebook stopped charging and working with the original Dell AC power adapter some months ago. It was working only sporadic but in most of the cases the blue led of the AC power adapter went off after plugging it in. I tried an other Dell power adapter but with the same results so I thought it was a hardware fault on the notebook side.\n Nethertheless Krischan had an idea and tried an 20V power adapter from an other manufacturer. Turns out this one worked powering the notebook but charging was still disabled. An error message popped up in the BIOS \u201c AC Power adapter could not be determined\u201c.\n We did some research and  found an interesting article mentioning an additional data pin (inner pin of plug) of the power adapter which is used by the notebook to \u201ccommunicate\u201d and validate the power adapter via 1-wire-protocol.\n So the next idea was quite unusual but a step into the right direction. We used the power wires (PWR/GND) from the non-HP power adapter and wired the data pin + GND of the plug to the original HP power adapter.\n  We tricked the notebook into \u201cthinking\u201d it was still connected to the faulty 19V power adapter via the data wire and used the ac power from a secondary working power supply.\n In the next step, we cracked the case of the HP adapter and desoldered the transistor style chip mentioned in the article above. It is connected to the data wire and marked with \u201cDALLAS \u2013 250X\u201d.\n  The next idea was to put this chip directly into the notebook. We traced the data pin from the jack back to the connector on the motherboad. We cut the data line and soldered the DALLAS (MAXIM one wire) chip together with a resistor and diode to the board connector. The diode and the resistor are probably optional and belong to the protection circuit.\n  Surprisingly this hack is really working! We can now use any power adapter and the notebook is running and charging well. The BIOS still receives the correct information from the DALLAS chip, which is now soldered into the notebook.\n    *  This form collects your name, email and content so that we can keep track of the comments placed on the website. For more info check our privacy policy where you&#39;ll get more info on where, how and why we store your data.", "posttime": "2020-05-25 20:38:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u6234\u5c14,dell,\u7b14\u8bb0\u672c", "title": "\u6b3a\u9a97\u6234\u5c14\u7b14\u8bb0\u672c\u7535\u8111\u63a5\u53d7\u672a\u547d\u540d\u7684\u4ea4\u6d41\u7535\u6e90\u9002\u914d\u5668", "title_en": "Trick DELL laptop to accept no-name AC power adaptors", "transed": 1, "url": "https://blog.project-insanity.org/2020/05/25/hardware-fix-for-dell-ac-power-adapter-could-not-be-determined/", "via": "", "real_tags": ["\u7535\u8111", "\u6234\u5c14", "dell", "\u7b14\u8bb0\u672c"]}, {"category": "", "categoryclass": "", "imagename": "a11bb86277ade0387dc0bfd010e1988a.png", "infoid": 1003673, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e9b\u662f\u6211\u4ece\u9a6c\u4fee\u00b7\u9c8d\u5c14\u548c\u96c5\u5404\u5e03\u00b7\u7eb3\u6c83\u514b\u7684\u53f2\u8bd7\u6e38\u620f\u5165\u95e8\u8bfb\u7269\u4e2d\u6458\u5f55\u7684\u7b14\u8bb0\u3002\u8fd9\u662f\u6211\u5728\u6570\u5b57\u5e73\u53f0\u4e0a\u8bfb\u8fc7\u7684\u6700\u597d\u7684\u4f5c\u54c1\u4e4b\u4e00\u3002\u8fd9\u672c16000\u591a\u5b57\u7684\u5165\u95e8\u8bfb\u7269\u7531\u4e94\u7bc7\u6587\u7ae0\u7ec4\u6210(II\u548cAmp\uff1bIII\u662f\u4e00\u7bc7\u6587\u7ae0)\uff1a\nEPIC\u6709\u6f5c\u529b\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u6709\u5f71\u54cd\u529b\u7684\u79d1\u6280\u516c\u53f8\u4e4b\u4e00\u3002\nEPIC\u662f\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u89c6\u9891\u6e38\u620f\u4e4b\u4e00--\u300a\u5821\u5792\u4e4b\u591c\uff1a\u7687\u5ba4\u4f5c\u6218\u300b\u7684\u521b\u9020\u8005\u3002\nEPIC\u662f\u6700\u5927\u548c\u589e\u957f\u6700\u5feb\u7684\u793e\u4ea4\u7f51\u7edc\u4e4b\u4e00\uff0c\u62e5\u6709350\u591a\u4e07\u7528\u6237\u548c23\u4ebf\u793e\u4ea4\u7f51\u7edc\u3002\nEPIC\u7684\u5546\u4e1a\u6218\u7565\u53ef\u4ee5\u7528\u4e0a\u56fe\u6240\u793a\u7684\u201c\u98de\u8f6e\u201d\u6765\u6982\u62ec\u3002\n\u89c6\u9891\u6e38\u620f\u5f00\u53d1\u5546\u4e3b\u8981\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u6e38\u620f\u5f15\u64ce\uff0cEpicc\u7684\u865a\u5e7b\u5f15\u64ce\u548cUnity\u3002\n\u7535\u5f71\u5236\u4f5c\u516c\u53f8\u4e0d\u662f\u81ea\u5df1\u9020\u6444\u50cf\u673a\u7684\uff0c\u4e3a\u4ec0\u4e48\u89c6\u9891\u6e38\u620f\u5f00\u53d1\u5546\u8981\u9020\u81ea\u5df1\u7684\u5f15\u64ce\u5462\uff1f\n\u4f20\u7edf\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u6e38\u620f\u5f15\u64ce\uff0c\u4f46\u8fd9\u4e0d\u662f\u6807\u51c6\u3002\n\u82f1\u96c4\u8054\u76df\u7684\u521b\u9020\u8005Riot Games\u521a\u521a\u5f00\u59cb\u4f7f\u7528\u865a\u5e7b\u5f15\u64ce\uff0c\u8fd9\u5bf9\u4e1a\u754c\u6765\u8bf4\u662f\u4e00\u4e2a\u5173\u4e8e\u7b2c\u4e09\u65b9\u6e38\u620f\u5f15\u64ce\u7684\u5de8\u5927\u4fe1\u53f7\u3002\n\u4f7f\u7528\u6e38\u620f\u5f15\u64ce\u7684\u4eba\u8d8a\u591a\uff0c\u5b83\u5c31\u53d8\u5f97\u8d8a\u5f3a\u5927(\u7f51\u7edc\u6548\u679c)\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u865a\u5e7b\u51b3\u5b9a\u6295\u8d44\u865a\u62df\u73b0\u5b9e\uff0c\u66f4\u591a\u7684\u5f00\u53d1\u5546\u5c06\u5236\u4f5c\u865a\u62df\u73b0\u5b9e\u6e38\u620f\uff0c\u66f4\u591a\u7684\u4eba\u5c06\u8d2d\u4e70\u5b83\u4eec\u3002\n\u4e9a\u9a6c\u900a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u514d\u8d39\u7684\u6e38\u620f\u5f15\u64ce\uff0c\u4f46\u5b83\u8fd8\u6ca1\u6709\u83b7\u5f97\u5438\u5f15\u529b\uff0c\u8fd9\u8868\u660e\u4e86\u865a\u5e7b\u548cUnity\u5728\u8be5\u884c\u4e1a\u7684\u5f71\u54cd\u529b\u6709\u591a\u5927\u3002\n\u53d1\u884c\u5546\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u624d\u80fd\u5236\u4f5c\u6e38\u620f\uff0c\u5e76\u5fc5\u987b\u4e0e\u5e73\u53f0\u6240\u6709\u8005\u5206\u4eab30%\u7684\u6536\u5165\u3002\n\u624b\u673a\u548c\u6e38\u620f\u673a\u6e38\u620f\u901a\u8fc7\u8be5\u5e73\u53f0\u7684\u4e13\u6709\u5546\u5e97\u8d2d\u4e70\uff0c\u901a\u5e38\u6536\u53d630%\u7684\u8d39\u7528\u3002\n\u4e0b\u8f7dPC\u6e38\u620f\u5b58\u5728\u5927\u91cf\u95ee\u9898\uff0c\u56e0\u6b64\u57282003\u5e74\uff0cValve\u63a8\u51fa\u4e86\u4e00\u5bb6\u540d\u4e3aSteam\u7684\u5546\u5e97\u3002\n\u4eba\u4eec\u559c\u6b22Steam\u5f88\u5bb9\u6613\u4f7f\u7528\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u81ea\u52a8\u4fee\u8865\u4e0b\u8f7d\u7684\u8865\u4e01\u3002\n30%\u7684\u8d39\u7528\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u9500\u552e\u60a8\u7684\u6e38\u620f\uff0c\u5982\u53e6\u4e00\u5bb6\u5546\u5e97\u6216\u5b9e\u4f53\u96f6\u552e\u5e97\u3002\n\u53f2\u8bd7\u6e38\u620f\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u65af\u5a01\u5c3c(Tim Sweeney)\u8ba4\u4e3a\uff0cValve\u7684\u8d39\u7528\u592a\u9ad8\u4e86\u3002\u4e0e\u82f9\u679c\u6216\u7d22\u5c3c\u4e0d\u540c\uff0cValve\u4e0d\u9500\u552e\u786c\u4ef6\u6216\u7ef4\u62a4\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u4ed6\u4eec\u6548\u4eff\u4e86\u90a3\u4e9b\u5b89\u88c5\u4e86\u5821\u5792\u4e4b\u591c\u7684\u4eba\uff0c\u5e76\u5728\u5b83\u53d1\u5e03\u7684\u5f53\u5929\u5c31\u5b89\u88c5\u4e86\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u8bbe\u5907\u3002\nEGS\u5411\u51fa\u7248\u5546\u63d0\u4f9b\u72ec\u5bb6\u5206\u9500\u534f\u8bae\uff0c\u4ee5\u63d0\u5347\u5546\u5e97\u7684\u5438\u5f15\u529b\uff0c\u4f46\u5b83\u7f3a\u4e4f\u8bb8\u591a\u6838\u5fc3\u529f\u80fd\uff0c\u5982\u8d2d\u7269\u8f66(\u8fd9\u662f\u6545\u610f\u7684)\u3002\n\u4f5c\u4e3a\u8d44\u91d1\u7684\u56de\u62a5\uff0c\u5f00\u53d1\u5546\u653e\u5f03\u4e86\u672a\u6765\u6536\u5165\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fd8\u653e\u5f03\u4e86\u77e5\u8bc6\u4ea7\u6743\u3002\n\u7269\u7406\u5a92\u4f53\u5206\u53d1\u6b63\u5728\u6d88\u5931\uff0c\u5f00\u53d1\u4eba\u5458\u5bf9\u878d\u8d44\u548c\u8f6c\u5411\u81ea\u52a9\u53d1\u5e03\u7684\u4f9d\u8d56\u7a0b\u5ea6\u964d\u4f4e\u3002\n\u9884\u8ba1Etic\u5c06\u4ee5\u4e0eNetflix\u7b7e\u7ea6\u9876\u7ea7\u5185\u5bb9\u521b\u4f5c\u8005\u76f8\u540c\u7684\u65b9\u5f0f\u7b7e\u7ea6\u4eba\u624d\u3002\n\u4f7f\u7528EGP\u7684\u5f00\u53d1\u4eba\u5458\u8d8a\u591a\uff0cEtic\u7684\u53cd\u9988\u5faa\u73af\u5c31\u8d8a\u591a\uff0c\u4ece\u800c\u4f7f\u865a\u5e7b\u53d8\u5f97\u66f4\u597d\n\u201c\u5982\u679c\u4f60\u7684\u4eba\u8109\u8f83\u5f31\uff0c\u4e0e\u5176\u4ed6\u4eba\u5408\u4f5c\u4f1a\u6709\u66f4\u591a\u7684\u6536\u83b7\u548c\u66f4\u5c11\u7684\u635f\u5931\uff1b\u9886\u5bfc\u8005\u8d8a\u5f3a\u5927\uff0c\u4ed6\u4eec\u5c31\u8d8a\u4e0d\u5e0c\u671b\u4e8b\u60c5\u53d1\u751f\u53d8\u5316\u3002\u201d\n\u56e0\u6b64\uff0c\u53f2\u8bd7\u5efa\u9020\u4e86\u5b83\u3002\u4ed6\u4eec\u7684\u5728\u7ebf\u670d\u52a1\u73b0\u5728\u62e5\u67093.5\u4ebf\u7528\u6237\uff0c\u603b\u8fde\u63a5\u6570\u4e3a23\u4ebf\u3002\nEOS\u4e0eEtic\u7684\u5f00\u653e\u6218\u7565\u662f\u4e00\u81f4\u7684\uff0c\u5373\u8fde\u63a5\u751f\u6001\u7cfb\u7edf\uff0c\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u9694\u5f00\u3002\n\u4e0eEpicc\u7684\u6218\u7565\u76f8\u4e00\u81f4\uff0c\u201c\u4e00\u4e2a\u4e16\u754c\u7ea7\u7684\u7aef\u5230\u7aef\u7684\u5546\u5e97\u201d(a world-class\uff0cend-to-end shop\u2026\u3002\u800c\u4e14\u662f\u5e02\u573a\u4e0a\u6700\u4fbf\u5b9c\u7684\u3002\u201c\u3002\n\u5b69\u5b50\u4eec\u4e0d\u5728\u7535\u8bdd\u91cc\u804a\u5929\uff0c\u4e5f\u4e0d\u5728\u5546\u573a\u95f2\u901b\uff0c\u800c\u662f\u5728\u5821\u5792\u4e4b\u591c\u8eab\u8fb9\u95f2\u901b\u3002\n\u5b69\u5b50\u4eec\u8c08\u8bba\u7684\u4e0d\u662f\u5821\u5792\u4e4b\u591c\uff0c\u800c\u662f\u4f53\u80b2\u3001\u7535\u5f71\u3001\u97f3\u4e50\u7b49\u8bdd\u9898\u3002\n\u5b83\u7684\u5546\u4e1a\u6a21\u5f0f\u5e76\u4e0d\u72ec\u7279\u3002\u5728\u5821\u5792\u4e4b\u591c\u4e4b\u524d\uff0c\u6709\u5f88\u591a\u6210\u529f\u7684\u514d\u8d39\u6e38\u620f\u3002\nEPIC\u4ece\u4e8b\u6e38\u620f\u5f15\u64ce\u4e1a\u52a1\uff0c\u5e76\u6b63\u5728\u51cf\u5c11\u5176\u5236\u4f5c\u7684\u6e38\u620f\u6570\u91cf\n\u4f8b\u5982\uff0c\u5b83\u5c06\u5176\u975e\u5e38\u6210\u529f\u7684\u6e38\u620f\u201c\u6218\u4e89\u673a\u5668\u201d\u5356\u7ed9\u4e86\u5fae\u8f6f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u65e0\u6cd5\u8ba1\u7b97\u51fa\u4e0eEic\u7684\u534f\u540c\u6548\u5e94\u3002\nEPIC\u6709\u4e00\u4e2a\u4e0d\u540c\u5bfb\u5e38\u7684\u6218\u7565\uff0c\u5b83\u6ca1\u6709\u5728\u8bb8\u591a\u4e1a\u52a1\u4e2d\u83b7\u53d6\u4ef7\u503c\uff0c\u800c\u662f\u4ece\u5b83\u4eec\u7ade\u4e89\u7684\u8bb8\u591a\u7c7b\u522b\u4e2d\u8f6c\u79fb\u4e86\u4ef7\u503c\u3002\n\u4f8b\u5982\uff0cEtic\u53ef\u4ee5\u50cf\u5927\u591a\u6570\u5546\u5e97\u4e00\u6837\u5bf9EOS\u6536\u53d630%\u7684\u8d39\u7528\uff0c\u4f46\u5b83\u9009\u62e9\u4e0d\u8fd9\u6837\u505a\u3002\u8fd9\u538b\u4f4e\u4e86\u6e38\u620f\u5546\u5e97\u83b7\u53d6\u7684\u884c\u4e1a\u6536\u5165\u3002\n\u8be5\u884c\u4e1a\u7684\u5927\u591a\u6570\u516c\u53f8\u90fd\u5df2\u7ecf\u79bb\u5f00\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u529f\u80fd\u5df2\u7ecf\u88ab\u6e38\u620f\u5f15\u64ce\u5438\u6536\uff0c\u6216\u8005\u4e0eAWS\u548cAzure\u7b49\u57fa\u7840\u8bbe\u65bd\u6346\u7ed1\u5728\u4e00\u8d77\u3002\nEPIC\u6b63\u5728\u514d\u8d39\u8d60\u9001\u4e00\u5207\uff0c\u4ee5\u589e\u52a0\u89c6\u9891\u6e38\u620f\u884c\u4e1a\u7684\u603b\u6f5c\u5728\u5e02\u573a\u4ef7\u503c\u3002\n\u8482\u59c6\u00b7\u65af\u6e29\u5c3c\u76f8\u4fe1\uff0c\u603b\u6709\u4e00\u5929\u865a\u62df\u4e16\u754c\u5c06\u88ab\u521b\u9020\u51fa\u6765\uff0c\u5b83\u5c06\u628a\u7269\u7406\u4e16\u754c\u548c\u6570\u5b57\u4e16\u754c\u6574\u5408\u5728\u4e00\u8d77\uff0c\n\u201c\u5c31\u50cf\u51e0\u5341\u5e74\u524d\u6bcf\u5bb6\u516c\u53f8\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7f51\u9875\uff0c\u7136\u540e\u5728\u67d0\u4e2a\u65f6\u5019\u6bcf\u5bb6\u516c\u53f8\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u8138\u4e66\u9875\u9762\u4e00\u6837\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u6b63\u5728\u63a5\u8fd1\u8fd9\u6837\u4e00\u4e2a\u70b9\uff1a\u901a\u8fc7\u4e0e\u6e38\u620f\u516c\u53f8\u7684\u5408\u4f5c\uff0c\u6216\u8005\u901a\u8fc7\u50cf\u201d\u5821\u5792\u4e4b\u591c\u201c\u3001\u201d\u6211\u7684\u4e16\u754c\u201c\u548c\u201d\u7f57\u4f2f\u514b\u65af\u201c\u8fd9\u6837\u7684\u6e38\u620f\uff0c\u6bcf\u5bb6\u516c\u53f8\u90fd\u5c06\u62e5\u6709\u5b9e\u65f6\u76843D\u5b9e\u51b5\u5c55\u793a\u3002\u201d\u73b0\u5728\u8fd9\u79cd\u60c5\u51b5\u5f00\u59cb\u53d1\u751f\u4e86\u3002\u8fd9\u5c06\u662f\u4e00\u4ef6\u6bd4\u524d\u51e0\u4ee3\u4eba\u66f4\u8fed\u66f4\u5927\u7684\u4e8b\u60c5\u3002\u8fd9\u4e0d\u4ec5\u662f\u6e38\u620f\u5f00\u53d1\u8005\u7684\u798f\u97f3\uff0c\u4e5f\u662f\u6253\u7834\u5e73\u53f0\u4e4b\u95f4\u548c\u6e38\u620f\u4e4b\u95f4\u58c1\u5792\u7684\u5f00\u59cb\u3002\u201c--\u8482\u59c6\u00b7\u65af\u5a01\u5c3c(Tim Sweeney)\u3002\n\u865a\u62df\u4e16\u754c\u9762\u4e34\u7684\u6700\u5927\u6311\u6218\u662f\u6280\u672f\u9650\u5236\u548c\u5927\u578b\u79d1\u6280\u516c\u53f8\u63a5\u53d7\u4e92\u64cd\u4f5c\u6027\u7684\u963b\u788d\u3002\n\u6ca1\u6709\u4e00\u5bb6\u516c\u53f8\u4f1a\u62e5\u6709\u865a\u62df\u4e16\u754c\uff0c\u751a\u81f3\u50cfUnity\u8fd9\u6837\u7684\u865a\u5e7b\u7ade\u4e89\u5bf9\u624b\u4e5f\u4f1a\u53c2\u4e0e\u5176\u4e2d\u3002\n\u201c\u8fd9\u5c31\u662f\u8bf4\uff0c\u65af\u5a01\u5c3c\u4e0d\u4ec5\u5e0c\u671b\u521b\u9020\u4e00\u4e2a\u5f00\u53d1\u8005\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5236\u4f5c\u6e38\u620f\u6216\u4ece\u4e2d\u83b7\u5f97\u66f4\u5927\u5229\u6da6\u7684\u4e16\u754c\uff0c\u800c\u4e14\u5e0c\u671b\u521b\u9020\u4e00\u4e2a\u6280\u672f\u7ee7\u7eed\u6210\u4e3a\u4e00\u80a1\u5411\u5584\u7684\u529b\u91cf\u7684\u4e16\u754c\u3002\u201d", "note_en": "These are my notes from  Matthew Ball &amp;  Jacob Navok\u2019s 6-part primer on Epic Games. It was one of the best pieces of writing I ever read on digital platforms. The 16,000+ word primer consists of five essays (II &amp; III are one essay):\n   Epic has the potential to be one of the most influential tech companies in the world.\n Epic is the creator of Fortnite: Battle Royale, one of the most popular video games in the world.\n   Epic is one of the largest and fastest-growing social networks with 350MM+ users and 2.3B social connections.\n  Epic\u2019s business strategy can be summed up by the \u201cFlywheel\u201d which is shown above.\n Video game developers primarily rely on two game-engines, Epic\u2019s Unreal Engine and Unity.\n  A movie production company doesn\u2019t build their own camera, why should a video game developer, built their own engine?\n   Legacy game developers use their own game engines, but it\u2019s not the norm.\n Riot Games, creator of League of Legends, just started using the Unreal Engine which was a huge signal to the industry about third-party game engines.\n The more people who use a game engine, the more powerful it becomes (network effects).\n     For example, if Unreal decides to invest in VR, more developers will make VR games and more people will buy them\n  Amazon offers a free game engine and it has yet to gain traction showing how influential Unreal and Unity are in the industry.\n  Publishers needed permission to build a game and had to share 30% of their revenue with platform owners.\n  Mobile and console games are bought through the proprietary stores of the platform and typically charge a 30% fee.\n  Tons of problems with downloading PC game so in 2003 Valve launched a store called Steam\n People liked that Steam was easy to use, but most importantly would automatically patch downloads.\n 30% fee, but you could also sell your games through other means such as another store or physical retail\n Tim Sweeney, CEO of Epic Games, believed Valve\u2019s fee was too high. Unlike, Apple or Sony, Valve didn\u2019t sell hardware or maintain an OS\n  They piggybacked off of the folks who had Fortnite installed and were on millions of devices the day it launched\n EGS offered exclusive distribution deals to publishers to boost the traction of the store, but it lacked many core features like a shopping cart (this was intentional).\n  In return for funding a developer gives up a large portion of future revenue and in most cases IP\n  Physical media distribution is going away and developers are less reliant on financing and switching to self-publishing\n   Expect Epic to sign talent in the same way Netflix\u2019s signs top content creators\n The more developers that use EGP, the more feedback loops for Epic to make Unreal better\n    \u201cIf your network is weaker, there\u2019s more to gain and less to lose from partnering with other ones; the stronger the leader was, the less they\u2019d want things to change.\u201d\n Thus, Epic built it. Their online service now has 350MM users with 2.3B total connections.\n EOS is in line with Epic\u2019s open strategy of connecting ecosystems rather than walling them off.\n Aligns with Epic\u2019s strategy of, \u201ca world-class, end-to-end shop\u2026 and the cheapest in the market.\u201d\n  Instead of talking on the phone or hanging out at the mall, kids hang out on Fortnite\n Kids aren\u2019t talking about Fortnite, but about topics like sports, movies, music etc.\n  It\u2019s business model is not unique. There were many successful free to play games before Fortnite.\n  Epic is in the game engine business and is reducing the amount of games it makes\n For example, it sold it\u2019s highly successful game, Gears of War, to Microsoft because they couldn\u2019t figure out synergy with Epic\n  Epic has an unusual strategy, instead of capturing value in many of its businesses, it has shifted value away from many of the categories they compete.\n For example, Epic could charge 30% for EOS like most stores, but chooses not to. This drives down industry revenue captured by game stores.\n Most of the companies in the industry have gone away because their features have been absorbed by game engines or tied to infrastructure like AWS and Azure\n  Epic is giving everything away for free to increase the total addressable market value of video game industry.\n  Tim Swenney believes that one day the metaverse will be created that will integrate the physical and digital world,\n \u201cJust as every company a few decades ago created a webpage, and then at some point every company created a Facebook page, I think we\u2019re approaching the point where every company will have a real-time live 3D presence, through partnerships with game companies or through games like Fortnite and Minecraft and Roblox... That\u2019s starting to happen now. It\u2019s going to be a much bigger thing than these previous generational shifts. Not only will it be a boon for game developers, but it will be the beginning of tearing down the barriers not just between platforms but between games.\u201d - Tim Sweeney\n  The biggest challenges to the metaverse is technical limitations and the disincentives for big tech companies to embrace interoperability.\n No company will own the metaverse and even Unreal\u2019s competitors like Unity will be a part of it.\n \u201cWhich is to say Sweeney hopes to produce not just a world where developers can make games more easily, or make greater profits from doing so, but one where technology continues to be a force for good.\u201d", "posttime": "2020-05-25 20:36:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,epic", "title": "\u53f2\u8bd7\u6e38\u620f\u672d\u8bb0", "title_en": "Notes on Epic Games", "transed": 1, "url": "https://www.arilewis.com/aris-posts/notes-on-epic-games", "via": "", "real_tags": ["\u6e38\u620f", "epic"]}]