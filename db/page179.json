[{"category": "", "categoryclass": "", "imagename": "dc9c09e38ef90276a613df27ec6a8202.jpg", "infoid": 1004090, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u8ba1\u5212\u7b7e\u7f72\u4e00\u9879\u884c\u653f\u547d\u4ee4\uff0c\u8d4b\u4e88\u653f\u5e9c\u5bf9\u4e92\u8054\u7f51\u7684\u5de8\u5927\u65b0\u6743\u529b\u3002\u636e\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u6628\u65e5\u62a5\u9053\uff0c\u7279\u6717\u666e\u5c06\u547d\u4ee4\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u548c\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u53d6\u6d88\u79d1\u6280\u516c\u53f8\u6839\u636e\u300a\u901a\u4fe1\u4f53\u9762\u6cd5\u300b\u7b2c230\u6761\u4eab\u6709\u7684\u8d23\u4efb\u4fdd\u62a4\u3002\u8fd9\u662f\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u63d0\u6848\uff0c\u53ef\u4ee5\u8bf4\u662f\u76d1\u7ba1\u4e92\u8054\u7f51\u5e73\u53f0\u7684\u6700\u5927\u4e00\u6b21\u5c1d\u8bd5\uff0c\u65e0\u8bba\u662f\u597d\u662f\u574f\uff0c\u5b83\u6807\u5fd7\u7740\u7279\u6717\u666e\u4e0e\u4efb\u4f55\u8bd5\u56fe\u6838\u5b9e\u4e8b\u5b9e\u7684\u5e73\u53f0\u4e4b\u95f4\u5168\u9762\u6218\u4e89\u7684\u5f00\u59cb\u3002\n\u6b63\u5982\u7279\u6717\u666e\u5728\u63a8\u7279\u4e0a\u4e0d\u7965\u5730\u8bf4\u7684\u90a3\u6837\uff0c\u201c\u8fd9\u5c06\u662f\u793e\u4ea4\u5a92\u4f53\u548c\u516c\u5e73\u7684\u5927\u65e5\u5b50\uff01\u201d\n\u7b2c230\u6761\u6709\u65f6\u88ab\u79f0\u4e3a\u4e92\u8054\u7f51\u4e0a\u6700\u91cd\u8981\u7684\u6cd5\u5f8b\uff0c\u5b83\u514d\u9664\u4e86\u516c\u53f8\u5728\u5176\u5e73\u53f0\u4e0a\u53d1\u8868\u8a00\u8bba\u7684\u5927\u90e8\u5206\u8d23\u4efb\uff0c\u5e76\u8d4b\u4e88\u5b83\u4eec\u5728\u5982\u4f55\u7f13\u548c\u8a00\u8bba\u65b9\u9762\u7684\u5e7f\u6cdb\u81ea\u7531\u88c1\u91cf\u6743\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u8d77\u8bc9Twitter\u7981\u6b62\u6216\u4e0d\u7981\u6b62\u67d0\u4e2a\u7279\u5b9a\u7684\u8d26\u6237-\u5c3d\u7ba1\u5f88\u591a\u4eba\u5df2\u7ecf\u5c1d\u8bd5\u8fc7\u4e86\u3002\n\u4eca\u5929\u7684\u547d\u4ee4\u4f3c\u4e4e\u4e0e2019\u5e748\u6708\u4f20\u8a00\u7684\u884c\u653f\u547d\u4ee4\u76f8\u540c\uff0c\u5f15\u53d1\u4e86\u4e00\u540dFCC\u4e13\u5458\u7684\u8fd9\u6761\u4ee4\u4eba\u96be\u5fd8\u7684\u63a8\u6587\u3002\u57fa\u672c\u7684\u60f3\u6cd5\u662f\uff0c\u5173\u4e8e\u504f\u89c1\u7684\u6295\u8bc9\u7531\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a(\u901a\u5e38\u8d1f\u8d23\u6d88\u8d39\u8005\u4fdd\u62a4)\u8d1f\u8d23\u3002\u5982\u679c\u4e00\u5bb6\u516c\u53f8\u88ab\u53d1\u73b0\u5728\u4e0d\u516c\u5e73\u5730\u5220\u9664\u6216\u7981\u6b62\u5185\u5bb9\uff0c\u884c\u653f\u547d\u4ee4\u5c06\u59d4\u6258FCC(\u901a\u5e38\u8d1f\u8d23\u7535\u4fe1\u57fa\u7840\u8bbe\u65bd)\u6765\u88c1\u51b3\u8be5\u516c\u53f8\u662f\u5426\u4e0d\u518d\u6709\u8d44\u683c\u7b26\u5408\u7b2c230\u6761\u7684\u201c\u8bda\u4fe1\u201d\u6761\u6b3e\u3002\u672c\u8d28\u4e0a\uff0cFCC\u73b0\u5728\u5c06\u51b3\u5b9a\u662f\u5426\u5141\u8bb8\u79d1\u6280\u5e73\u53f0\u83b7\u5f97\u6784\u6210\u5176\u5546\u4e1a\u6a21\u5f0f\u57fa\u7840\u7684\u6cd5\u5f8b\u4fdd\u62a4\u3002\n\u8fd9\u4e00\u60f3\u6cd5\u5f53\u65f6\u906d\u5230\u4e86\u5f3a\u70c8\u7684\u8d28\u7591\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3a\u5b83\u56e0\u6b64\u88ab\u6401\u7f6e\u4e86\u3002\u4f46\u5728\u7279\u6717\u666e\u4e0e\u63a8\u7279\u5c55\u5f00\u4e8b\u5b9e\u6838\u67e5\u4e4b\u4e89\u540e\uff0c\u8fd9\u4e00\u95ee\u9898\u4f3c\u4e4e\u53c8\u56de\u5230\u4e86\u8c08\u5224\u684c\u4e0a\u3002\n\u4e00\u4efd\u6cc4\u9732\u7684\u547d\u4ee4\u8349\u6848\u6b63\u5728\u7f51\u4e0a\u6d41\u4f20\uff0c\u5b83\u4e3a\u516c\u53f8\u5e94\u8be5\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5e94\u8be5\u53d6\u6d88230\u9879\u4fdd\u62a4\uff0c\u4ee5\u53ca\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5e94\u8be5\u5982\u4f55\u5bf9\u8fd9\u4e00\u7a0b\u5e8f\u63d0\u8d77\u8bc9\u8bbc\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u7b2c230\u6761\u591a\u5e74\u6765\u4e00\u76f4\u5b58\u5728\u4e89\u8bae\uff0c\u8bb8\u591a\u56fd\u4f1a\u8bae\u5458\u8ba4\u4e3a\uff0c\u53d6\u6d88\u5b83\u662f\u63a7\u5236\u79d1\u6280\u516c\u53f8\u7684\u6700\u4f73\u9009\u62e9\u3002\u4f46\u662f\uff0c\u5728\u6ca1\u6709\u56fd\u4f1a\u7684\u60c5\u51b5\u4e0b\u8fd9\u6837\u505a\uff0c\u5e76\u8ba9\u8d8a\u6765\u8d8a\u4e0d\u63d2\u624b\u7684FCC\u627f\u62c5\u63d0\u8d77\u8bc9\u8bbc\u7684\u8270\u5de8\u4efb\u52a1\uff0c\u5c06\u662f\u653f\u5e9c\u5728\u4e92\u8054\u7f51\u65e5\u5e38\u4e8b\u52a1\u4e2d\u89d2\u8272\u7684\u91cd\u5927\u53d8\u5316\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u5b58\u5728\u5de8\u5927\u7684\u6cd5\u5f8b\u95ee\u9898\u3002\u6700\u5927\u7684\u4e00\u4e2a\u662f\u7b2c\u4e00\u4fee\u6b63\u6848\uff0c\u5b83\u963b\u6b62\u7f8e\u56fd\u653f\u5e9c\u9650\u5236\u79c1\u4eba\u8a00\u8bba\u3002\u544a\u8bc9Twitter\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u53ef\u4ee5\u7f13\u548c\u770b\u8d77\u6765\u975e\u5e38\u50cf\u9650\u5236\u516c\u53f8\u7684\u79c1\u4eba\u8a00\u8bba-\u7279\u522b\u662f\u5728\u717d\u52a8\u4e8b\u4ef6\u662f\u5173\u4e8e\u589e\u52a0\u5185\u5bb9\u800c\u4e0d\u662f\u963b\u6b62\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u80af\u5b9a\u4f1a\u6709\u6cd5\u9662\u6311\u6218\uff0c\u6307\u63a7\u8be5\u547d\u4ee4\u8fdd\u5baa\uff0c\u8fd9\u5c06\u963b\u788dFCC\u7684\u4efb\u4f55\u5c1d\u8bd5\u884c\u52a8\u3002\n\u8fd9\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u6cd5\u5f8b\u95ee\u9898\uff0c\u5c3d\u7ba1\u6211\u4e0d\u786e\u5b9a\u6211\u4eec\u8fd9\u91cc\u6709\u6ca1\u6709\u5730\u65b9\u628a\u5b83\u4eec\u90fd\u770b\u4e00\u904d\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u662f\u5426\u6709\u6743\u5728\u884c\u653f\u547d\u4ee4\u7684\u57fa\u7840\u4e0a\u8fd9\u6837\u505a\u3002\u5728\u6ca1\u6709\u56fd\u4f1a\u6279\u51c6\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u662f\u5426\u53ef\u4ee5\u6539\u53d8230(\u6211\u4eec\u8981\u8bb0\u4f4f\uff0c\u8fd9\u662f\u6cd5\u5f8b\u7684\u4e00\u90e8\u5206)\uff0c\u8fd9\u4e00\u70b9\u771f\u7684\u4e0d\u6e05\u695a\u3002\u800c\u4e14\uff0c\u5373\u4f7f\u4f60\u53ef\u4ee5\uff0c\u6240\u6709\u5173\u4e8e\u6539\u53d8230\u7684\u5e38\u89c1\u62c5\u5fe7\u4ecd\u7136\u9002\u7528\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u4f1a\u5f71\u54cd\u5230\u63a8\u7279\u3002\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5c06\u7a81\u7136\u638c\u7ba1YouTube\u3001Craigslist\u548c\u4e92\u8054\u7f51\u4e0a\u7684\u6240\u6709\u8bc4\u8bba\u90e8\u5206\u3002\n\u4f46\u662f\uff0c\u95ee\u5982\u679c\u8fd9\u4e00\u70b9\u5f97\u5230\u5b9e\u65bd\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u51e0\u4e4e\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u6b63\u5982\u6211\u4eec\u6628\u5929\u63d0\u5230\u7684\uff0c\u7279\u6717\u666e\u66f4\u60f3\u4e0e\u5927\u578b\u79d1\u6280\u516c\u53f8\u8f83\u91cf\uff0c\u800c\u4e0d\u662f\u60f3\u5236\u5b9a\u653f\u7b56\u3002(Twitter\u7b97\u4e0d\u4e0a\u662f\u5927\u578b\u79d1\u6280\u516c\u53f8\uff0c\u4f46\u8fd9\u5c31\u66f4\u597d\u4e86\uff1b\u6b3a\u51cc\u5f31\u5c0f\u7684\u4eba\u4ece\u6765\u4e0d\u559c\u6b22\u6b3a\u8d1f\u81ea\u5df1\u7684\u8eab\u6750\u3002)\u3002\u4eca\u5929\uff0c\u7279\u6717\u666e\u6b63\u5728\u8ba4\u771f\u5730\u5f00\u59cb\u8fd9\u573a\u6597\u4e89\uff0c\u8fd9\u573a\u6597\u4e89\u73b0\u5728\u5bf9\u4e92\u8054\u7f51\u4e0a\u7684\u6bcf\u4e00\u5bb6\u516c\u53f8\u90fd\u6709\u5de8\u5927\u7684\u5f71\u54cd\u3002\u968f\u7740\u603b\u7edf\u5e0c\u671b\u8f6c\u79fb\u4eba\u4eec\u5bf9\u6b63\u5728\u8fdb\u884c\u7684\u516c\u5171\u536b\u751f\u5371\u673a\u7684\u6ce8\u610f\u529b\uff0c\u4ed6\u51c6\u5907\u5728\u63a5\u4e0b\u6765\u7684\u516d\u4e2a\u6708\u91cc\u8fdb\u884c\u4e00\u573a\u6050\u5413\u8fd0\u52a8\uff0c\u53cd\u5bf9\u4efb\u4f55\u8bd5\u56fe\u9650\u5236\u4ed6\u7684\u7ade\u9009\u6d3b\u52a8\u53ef\u4ee5\u8bf4\u7684\u8bdd\u4ee5\u53ca\u4ed6\u4eec\u53ef\u4ee5\u8bf4\u5f97\u6709\u591a\u660e\u76ee\u5f20\u80c6\u7684\u4eba\u3002\u6700\u5927\u7684\u95ee\u9898\u662f\uff0c\u4f5c\u4e3a\u56de\u5e94\uff0c\u5e73\u53f0\u516c\u53f8\u4f1a\u5c55\u793a\u51fa\u591a\u5c11\u9aa8\u5e72\u529b\u91cf\u3002", "note_en": "Today, President Donald Trump plans to sign an executive order that would give the government huge new powers over the internet.  As reported yesterday by  The Washington Post, Trump will order the Federal Communications Commission and Federal Trade Commission to roll back the liability protections enjoyed by tech companies under  Section 230 of the Communications Decency Act. It\u2019s a hugely ambitious proposal, arguably the biggest single attempt to regulate internet platforms, and for better or worse, it signals the beginning of an all-out war between Trump and any platform that tries to fact-check him.\n As Trump ominously put it  on Twitter, \u201cThis will be a Big Day for Social Media and FAIRNESS!\u201d\n Sometimes called the most important law on the internet, Section 230 exempts companies from most liability for speech on their platform and gives them broad discretion in how they moderate speech. In concrete terms, it means you can\u2019t sue Twitter for banning or not banning a particular account \u2014 although  lots of people have tried.\n  Today\u2019s order appears to be the same executive order that was rumored back in August 2019, provoking  this memorable tweet from an FCC commissioner. The basic idea is for complaints about bias to be fielded by the FTC (usually in charge of consumer protection). If a company is found to be removing or suppressing content unfairly, the executive order deputizes the FCC (usually in charge of telecom infrastructure) to rule on whether it no longer qualifies for the \u201cgood faith\u201d provision of Section 230. In essence, the FCC will now decide whether tech platforms are allowed to have the legal protections that form the basis of their business models.\n The idea was met with intense skepticism at the time, and many believed it had been shelved as a result. But after Trump\u2019s fact-checking fight with Twitter, it appears to be back on the table.\n A leaked draft of the order is  circulating online, and it lays out the basis of how and why companies should have their 230 protections revoked, and how the FCC should litigate that process. Section 230 has been controversial for years now, and many in Congress see rolling it back as the best option for reining in tech companies. But doing so without Congress and tasking an increasingly hands-off FCC with the monumental task of litigating would be a major change in the role of government in the everyday business of the internet.\n There are huge legal problems with all of this. The biggest one is the First Amendment, which  prevents the US government from limiting private speech. Telling Twitter how and when it can moderate is going to look an awful lot like limiting the company\u2019s private speech \u2014 particularly when the inciting incident was about  adding content rather than blocking it. In practical terms, it means that there is certain to be a court challenge alleging that the order is unconstitutional, which will hamstring any attempted action by the FCC.\n That\u2019s not the only legal problem, although I\u2019m not sure we have room to run through all of them here. It\u2019s not clear that the FCC has the authority to do any of this on the basis of an executive order. It\u2019s  really not clear that you can change 230 (which is part of a law, let\u2019s remember) without congressional approval. And even if you could, all the usual concerns about changing 230 still apply. This wouldn\u2019t just hit Twitter. The FCC would suddenly be in charge of YouTube, Craigslist, and every comments section on the internet.\n But asking what would happen if this gets implemented is almost beside the point.  As we noted yesterday, Trump wants to pick a fight with Big Tech more than he wants to set policy. (Twitter isn\u2019t exactly Big Tech, but that\u2019s all the better; bullies never like to pick on someone their own size.) Today, Trump is starting that fight in earnest, and it\u2019s one with huge implications for every company on the internet right now. As the president looks to distract from  the ongoing public health crisis, he\u2019s ready to turn the next six months into an intimidation campaign against anyone who tries to limit what his campaign can say and how flagrantly they can say it. The big question is how much backbone platform companies will show in response.", "posttime": "2020-05-28 23:13:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u6717\u666e,trump", "title": "\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u6b63\u5728\u4e0e\u6574\u4e2a\u4e92\u8054\u7f51\u5c55\u5f00\u4e00\u573a\u6df7\u4e71\u7684\u6597\u4e89", "title_en": "Donald Trump is starting a messy fight with the entire internet", "transed": 1, "url": "https://www.theverge.com/2020/5/28/21273019/donald-trump-executive-order-twitter-liability-facebook-230-ftc-fcc", "via": "", "real_tags": ["\u7279\u6717\u666e", "trump"]}, {"category": "", "categoryclass": "", "imagename": "2d97b4f5d666c3a3be5aaf6ec6052373.png", "infoid": 1004088, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u53ef\u80fd\u8fd8\u5e0c\u671b\u6b63\u786e\u914d\u7f6emypy\u5e76\u5c06\u6211\u4eec\u7684\u63d2\u4ef6\u5b89\u88c5\u5230\u4fee\u590d\u6b64\u73b0\u6709\u95ee\u9898\uff1a\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u6765\u68c0\u67e5\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u662f\u5426\u6ca1\u6709\u7a7a\u503c\u5462\uff1f\u60a8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684\u53ef\u9009\u7c7b\u578b\uff0c\u5e76\u7f16\u5199\u5f88\u591a\u6761\u4ef6(\u5982\u679c\u6709\u4e9b\u4e0d\u662fNone\u7684\u8bdd)\uff1a\u6761\u4ef6\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u91cc\u548c\u90a3\u91cc\u8fdb\u884cNULL\u68c0\u67e5\u4f1a\u4f7f\u60a8\u7684\u4ee3\u7801\u4e0d\u53ef\u8bfb\u3002\nUSER\uff1a\u53ef\u9009[USER]\u5982\u679cUSER\u4e0d\u662f\u65e0\uff1aBALANCE=USER\u3002\u5982\u679cBALANCE\u4e0d\u662fNONE\uff0c\u5219GET_BALANCE()\uff1aBALANCE_Credit=B\u3002\u5982\u679cBalance_Credit\u4e0d\u662fNONE\u4e14Balance_Credit&gt\uff1b0\uff1aCan_Buy_Stuff=True\uff0c\u5219Credit_Amount()\uff1aCan_Buy_Stuff=False\uff1aCan_Buy_Stuff=False\u3002\n\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528Maybe CONTAINER\uff01\u5b83\u7531\u4e00\u4e9b\u548cNothing\u7c7b\u578b\u7ec4\u6210\uff0c\u5206\u522b\u8868\u793a\u73b0\u6709\u72b6\u6001\u548c\u7a7a(\u800c\u4e0d\u662fNone)\u72b6\u6001\u3002\n\u4ece\u8fd4\u56de\u952e\u5165IMPORTIONAL OPTIONAL\u3002\u53ef\u80fd\u5bfc\u5165\u53ef\u80fd\uff0c\u53ef\u80fd@\u53ef\u80fd#\u4fee\u9970\u7b26\u5c06\u73b0\u6709\u53ef\u9009\u7684[int]\u8f6c\u6362\u4e3a\u53ef\u80fd\u7684[int]def BAD_Function()-&gt\uff1b\u53ef\u9009\u7684[int]\uff1a.\u3002\u53ef\u80fd_\u7ed3\u679c\uff1a\u53ef\u80fd[\u6d6e\u70b9]=BAD_Function()\u3002MAP(lambda number\uff1anumber/2\uff0c)#=&gt\uff1b\u53ef\u80fd\u4ec5\u5f53\u5b58\u5728\u975eNone\u503c\u65f6\u624d\u8fd4\u56de\u67d0\u4e2a[Float]\uff0c\u5426\u5219\u5c06\u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u3002\n\u60a8\u53ef\u4ee5\u786e\u5b9a.map()\u65b9\u6cd5\u4e0d\u4f1a\u56e0\u4e3a\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u88ab\u8c03\u7528\u3002\u6c38\u8fdc\u5fd8\u6389\u4e0e\u6b64\u65e0\u5173\u7684\u9519\u8bef\u5427\uff01\nUSER\uff1a\u53ef\u9009[USER]CAN_BUY_STUSITH\uff1a\u53ef\u80fd[bool]=\u53ef\u80fd\u3002FROM_VALUE(\u7528\u6237)\u3002map(#type hint\u4e0d\u662f\u5fc5\u9700\u7684\uff0clambda REAL_USER\uff1aREAL_USER\u3002get_Balance()\uff0c)\u3002MAP(\u03bb\u5e73\u8861\uff1a\u5e73\u8861\u3002Credit_Amount()\uff0c)\u3002map(lambda Balance_Credit\uff1aBalance_Credit&gt\uff1b0\uff0c)\u3002\n\u8bb8\u591a\u5f00\u53d1\u4eba\u5458\u786e\u5b9e\u5728Python\u4e2d\u4f7f\u7528\u4e86\u67d0\u79cd\u4f9d\u8d56\u6ce8\u5165\uff0c\u800c\u4e14\u901a\u5e38\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff0c\u5373\u5b58\u5728\u67d0\u79cd\u5bb9\u5668\u548c\u7ec4\u88c5\u8fc7\u7a0b\u3002\n\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a\u57fa\u4e8eDjango\u7684\u6e38\u620f\uff0c\u60a8\u4e3a\u7528\u6237\u5728\u4e00\u4e2a\u5355\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u731c\u5230\u7684\u5b57\u6bcd\u5956\u52b1\u79ef\u5206(\u672a\u731c\u5230\u7684\u5b57\u6bcd\u6807\u8bb0\u4e3a&#39\uff1b.&#39\uff1b)\uff1a\n\u4ece\u59dc\u6208\u6765\u7684\u3002HTTP\u4eceWORD_APP\u5bfc\u5165HttpRequest\u3001HttpResponse\u3002\u903b\u8f91\u5bfc\u5165Calculate_Points def view(Request\uff1aHttpRequest)-&gt\uff1bHttpResponse\uff1aUSER_WORD\uff1aSTR=REQUEST\u3002POST[&#39\uff1bWord&#39\uff1b]#Just a Example Points=Calculate_Points(User_Word).#\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5728`WORD_APP/logic.py`\uff1adef Calculate_Points(Word\uff1aStr)-&gt\uff1bint\uff1a[Letter for Letter if Letter\uff01=&#39\uff1b.&#39\uff1b\u4e2d\u7684\u5b57\u6bcd\uff01=&#39\uff1b.&#39\uff1b])RETURN_INDUTE_POINTS_FOR_LETERS(GUIESSED_LETERS_COUNT)def_INDUTE_POINTS_FOR_LETERS(\u731c\u60f3\uff1aint)-&gt\uff1bint\uff1a\u5982\u679c\u731c\u5230\uff0c\u5219\u8fd4\u56de0&lt\uff1b5\uff0c\u5426\u5219\u731c#\u81f3\u5c116\u5206\uff01\n\u592a\u68d2\u4e86\uff01\u5b83\u5f88\u7ba1\u7528\uff0c\u7528\u6237\u5f88\u9ad8\u5174\uff0c\u4f60\u7684\u903b\u8f91\u662f\u7eaf\u7cb9\u800c\u4ee4\u4eba\u656c\u754f\u7684\u3002\u4f46\u662f\uff0c\u540e\u6765\u4f60\u51b3\u5b9a\u8ba9\u8fd9\u4e2a\u6e38\u620f\u66f4\u6709\u8da3\uff1a\u8ba9\u6211\u4eec\u4f7f\u6700\u5c0f\u7684\u53ef\u8bc6\u522b\u5b57\u6bcd\u9608\u503c\u53ef\u914d\u7f6e\u7528\u4e8e\u989d\u5916\u7684\u6311\u6218\u3002\nDEF_INDUTE_POINTS_FOR_LETERS(\u731c\u6d4b\uff1aINT\uff0cTHRESHOLD\uff1aINT)-&gt\uff1bINT\uff1a\u5982\u679c\u731c\u6d4b&lt\uff1bTHRESHOLD\u5219\u8fd4\u56de0\u3002\n\u95ee\u9898\u662f_rediate_points_for_letters\u662f\u6df1\u5ea6\u5d4c\u5957\u7684\u3002\u7136\u540e\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7\u6574\u4e2a\u8c03\u7528\u5806\u6808\u4f20\u9012\u9608\u503c\uff0c\u5305\u62ecCalculate_Points\u548c\u6240\u6709\u5176\u4ed6\u53ef\u80fd\u6b63\u5728\u8fdb\u884c\u7684\u51fd\u6570\u3002\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u5fc5\u987b\u63a5\u53d7\u9608\u503c\u4f5c\u4e3a\u53c2\u6570\uff01\u8fd9\u6839\u672c\u6ca1\u6709\u7528\uff01\u5927\u578b\u4ee3\u7801\u5e93\u5c06\u5f88\u96be\u4ece\u8fd9\u4e2a\u66f4\u6539\u4e2d\u83b7\u76ca\u3002\n\u597d\u7684\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u5728\u60a8\u7684_INDUTE_POINTS_FOR_LETERS\u51fd\u6570\u4e2d\u4f7f\u7528django.settings(\u6216\u7c7b\u4f3c\u7684)\uff0c\u7136\u540e\u7528\u6846\u67b6\u7279\u5b9a\u7684\u7ec6\u8282\u6765\u7834\u574f\u60a8\u7684\u7eaf\u903b\u8f91\u3002\u90a3\u592a\u96be\u770b\u4e86\uff01\n\u4ece\u59dc\u6208\u6765\u7684\u3002Django\u4e2d\u7684\u4f1a\u8bae\u5bfc\u5165\u8bbe\u7f6e\u3002HTTP\u4eceWORD_APP\u5bfc\u5165HttpRequest\u3001HttpResponse\u3002\u903b\u8f91\u5bfc\u5165Calculate_Points def view(Request\uff1aHttpRequest)-&gt\uff1bHttpResponse\uff1aUSER_WORD\uff1aSTR=REQUEST\u3002post[&#39\uff1bword&#39\uff1b]#Just a Example Points=Calculate_Points(USER_WORD)(SETTINGS)#\u4f20\u9012\u4f9d\u8d56\u5173\u7cfb.#\u4e4b\u540e\uff0c\u5728\u60a8\u7684`WORD_APP/logic.py`\uff1afrom Typing_Extensions import Protocol from Returns\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5411\u7528\u6237\u663e\u793a\u7ed3\u679c\u3002Context import RequiresContext CLASS_Dep(\u534f\u8bae)\uff1a#\u6211\u4eec\u4f9d\u8d56\u62bd\u8c61\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7684\u503c\u6216\u7c7b\u578bWORD_THRESHOLD\uff1aint def Calculate_Points(Word\uff1aStr)-&gt\uff1bRequiresContext[_Dep\uff0cint]\uff1aGUESSED_LETERS_COUNT=len([Letter for Letter if Letter\uff01=&#39\uff1b.&#39\uff1b])RETURN_INDUTE_POINTS_FOR_Letters(GUSED_Letters_Count)def_INDUTE_POINTS_FOR_Letters\u3002RequiresContext[_Dep\uff0cint]\uff1a\u8fd4\u56deRequiresContext(\u5982\u679c\u731c\u6d4b&lt\uff1bdeps\uff0c\u5219lambda deps\uff1a0\u3002WORD_THRESHOLD ELSE\u731c\u6d4b\uff0c)\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u771f\u6b63\u76f4\u63a5\u800c\u663e\u5f0f\u5730\u4f20\u9012\u4f9d\u8d56\u9879\uff0c\u5e76\u4e14\u5177\u6709\u7c7b\u578b\u5b89\u5168\u529f\u80fd\u6765\u68c0\u67e5\u60a8\u4f20\u9012\u7684\u5185\u5bb9\u4ee5\u63a9\u62a4\u60a8\u7684\u540e\u80cc\u3002\u8bf7\u67e5\u770bRequiresContext\u6587\u6863\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\u5728\u90a3\u91cc\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f&#39\uff1b.&#39\uff1b\u4e5f\u662f\u53ef\u914d\u7f6e\u7684\u3002\n\u5bfc\u5165\u8bf7\u6c42def FETCH_USER_PROFILE(user_id\uff1aint)-&&gt;\uff1b&#39\uff1bUserProfile&#39\uff1b\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u4ece\u5916\u90e8API\u83b7\u53d6UserProfile\u5224\u51b3\u3002&#34\uff1b&#34\uff1b&#34\uff1bResponse=Requests\u3002GET(&#39\uff1b/api/Users/{0}&#39\uff1b\u3002format(User_Id))\u54cd\u5e94\u3002RAISE_FOR_STATUS()\u8fd4\u56de\u54cd\u5e94\u3002json()\u3002\n\u770b\u8d77\u6765\u662f\u5408\u6cd5\u7684\uff0c\u4e0d\u662f\u5417\uff1f\u5b83\u770b\u8d77\u6765\u4e5f\u50cf\u662f\u8981\u6d4b\u8bd5\u7684\u975e\u5e38\u7b80\u5355\u7684\u4ee3\u7801\u3002\u6240\u6709\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u6a21\u62df\u8bf7\u6c42\u3002\u8fd4\u56de\u60a8\u9700\u8981\u7684\u7ed3\u6784\u3002\n\u4f46\u662f\uff0c\u5728\u8fd9\u4e2a\u5fae\u5c0f\u7684\u4ee3\u7801\u6837\u672c\u4e2d\u6709\u9690\u85cf\u7684\u95ee\u9898\uff0c\u4e4d\u4e00\u770b\u51e0\u4e4e\u4e0d\u53ef\u80fd\u53d1\u73b0\u8fd9\u4e9b\u95ee\u9898\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b8c\u5168\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u4f46\u8981\u89e3\u91ca\u6240\u6709\u9690\u85cf\u7684\u95ee\u9898\u3002\n\u5bfc\u5165\u8bf7\u6c42def FETCH_USER_PROFILE(user_id\uff1aint)-&&gt;\uff1b&#39\uff1bUserProfile&#39\uff1b\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u4ece\u5916\u90e8API\u83b7\u53d6UserProfile\u5224\u51b3\u3002&#34\uff1b&#34\uff1b&#34\uff1bResponse=Requests\u3002GET(&#39\uff1b/api/Users/{0}&#39\uff1b\u3002format(User_Id))#\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u7528\u6237\u600e\u4e48\u529e\uff1f#\u5426\u5219\u7f51\u7edc\u5c06\u5173\u95ed\uff1f\u5426\u5219\u670d\u52a1\u5668\u5c06\u8fd4\u56de500\uff1f#\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0b\u4e00\u884c\u5c06\u5931\u8d25\u5e76\u51fa\u73b0\u5f02\u5e38\u3002#\u6211\u4eec\u9700\u8981\u5904\u7406\u6b64\u51fd\u6570\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u9519\u8bef#\uff0c\u4e0d\u8981\u5411\u6d88\u8d39\u8005\u8fd4\u56de\u635f\u574f\u7684\u6570\u636e\u3002\u56de\u5e94\u3002raise_for_status()#\u5982\u679c\u6211\u4eec\u6536\u5230\u65e0\u6548\u7684JSON\u600e\u4e48\u529e\uff1f#\u4e0b\u4e00\u884c\u5c06\u5f15\u53d1\u5f02\u5e38\uff01\u8fd4\u56de\u54cd\u5e94\u3002json()\u3002\n\u73b0\u5728\uff0c\u5168\u90e8(\u53ef\u80fd\u5168\u90e8\uff1f)\u3002\u95ee\u9898\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u6211\u4eec\u5982\u4f55\u786e\u4fdd\u5728\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u4e2d\u4f7f\u7528\u6b64\u51fd\u6570\u662f\u5b89\u5168\u7684\u5462\uff1f\n\u6211\u4eec\u771f\u7684\u4e0d\u80fd\u786e\u5b9a\uff01\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u521b\u5efa\u5927\u91cf\u7684\u5c1d\u8bd5\u548c\u6392\u9664\u6848\u4f8b-\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6355\u6349\u9884\u671f\u7684\u5f02\u5e38\u3002\n\u4ece\u9000\u8d27\u5bfc\u5165\u8bf7\u6c42\u3002\u7ed3\u679c\u5bfc\u5165\u7ed3\u679c\uff0c\u5b89\u5168\u4e0d\u9000\u8d27\u3002\u6765\u81ea\u9000\u8d27\u7684\u7ba1\u9053\u5bfc\u5165\u6d41\u3002\u65e0\u6307\u9488\u5bfc\u5165\u7ed1\u5b9adef fetch_user_profile(user_id\uff1aint)-&gt\uff1bresult[&#39\uff1bUserProfile&#39\uff1b\uff0cException]\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u4ece\u5916\u90e8API\u83b7\u53d6`UserProfile`TypedDict\u3002&#34\uff1b&#34\uff1b&#34\uff1b\u8fd4\u56de\u6d41(user_id\uff0c_make_request\uff0cbind(_Parse_Json)\uff0c)@safe def_make_request(user_id\u3002Response\uff1a#TODO\uff1a\u8fd9\u4e2a\u793a\u4f8b\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u8bf7\u9605\u8bfb\u66f4\u591a\u5173\u4e8e`IO`\uff1aResponse=Requests\u7684\u5185\u5bb9\u3002GET(&#39\uff1b/api/Users/{0}&#39\uff1b\u3002format(User_Id))\u54cd\u5e94\u3002raise_for_status()return response@safe def_parse_json(Response\uff1aRequests\u3002\u54cd\u5e94)-&gt\uff1b&#39\uff1bUserProfile&#39\uff1b\uff1a\u8fd4\u56de\u54cd\u5e94\u3002json()\n\u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u79cd\u5e72\u51c0\u3001\u5b89\u5168\u548c\u58f0\u660e\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u6211\u4eec\u7684\u4e1a\u52a1\u9700\u6c42\uff1a\n\u73b0\u5728\uff0c\u591a\u4e8f\u4e86@safedecorator\uff0c\u6211\u4eec\u8fd4\u56de\u4e86\u5305\u88c5\u5728\u7279\u6b8a\u5bb9\u5668\u4e2d\u7684\u503c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5e38\u89c4\u503c\u3002\u5b83\u5c06\u8fd4\u56deSuccess[YourType]\u6216Failure[Exception]\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u5411\u6211\u4eec\u629b\u51fa\u5f02\u5e38\uff01\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u4ee3\u7801\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u4e9b\u9690\u5f0f\u5f02\u5e38\u800c\u5728\u968f\u673a\u4f4d\u7f6e\u4e2d\u65ad\u3002\u73b0\u5728\u6211\u4eec\u63a7\u5236\u4e86\u6240\u6709\u90e8\u5206\uff0c\u5e76\u4e3a\u663e\u6027\u9519\u8bef\u505a\u597d\u4e86\u51c6\u5907\u3002\n\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u5728\u4e0b\u4e00\u7ae0\u7ee7\u7eed\u6539\u8fdb\u5b83\u3002\n\u8ba9\u6211\u4eec\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u770b\u6211\u4eec\u7684\u4f8b\u5b50\u3002\u5b83\u7684\u6240\u6709\u529f\u80fd\u770b\u8d77\u6765\u90fd\u5f88\u666e\u901a\uff1a\u4e4d\u4e00\u770b\u662f\u7eaf\u7684\u8fd8\u662f\u4e0d\u7eaf\u7684\u3002\n\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u540e\u679c\uff1a\u6211\u4eec\u5f00\u59cb\u5c06\u7eaf\u4ee3\u7801\u548c\u4e0d\u7eaf\u4ee3\u7801\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\uff01\n\u5f53\u8fd9\u4e24\u4e2a\u6982\u5ff5\u6df7\u5408\u5728\u4e00\u8d77\u65f6\uff0c\u6211\u4eec\u5728\u6d4b\u8bd5\u6216\u91cd\u7528\u5b83\u65f6\u4f1a\u53d7\u5230\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u5e94\u8be5\u662f\u7eaf\u7684\uff0c\u800c\u4e14\u6211\u4eec\u5e94\u8be5\u660e\u786e\u5730\u6807\u8bb0\u7a0b\u5e8f\u4e2d\u4e0d\u7eaf\u7684\u90e8\u5206\u3002\n\u5c06\u968f\u673a\u5bfc\u5165\u65e5\u671f\u65f6\u95f4\u4f5c\u4e3aDT\u4ece\u8fd4\u56de\u5bfc\u5165\u3002IO import IO def get_Random_Number()-&gt\uff1bIO[int]\uff1a#\u6216\u4f7f\u7528`@impure`\u4fee\u9970\u7b26\u8fd4\u56deIO(Random.\u3002randint(1\uff0c10))#is&#39\uff1b\u4e0d\u662f\u7eaf\u7684\uff0c\u56e0\u4e3a\u73b0\u5728\u968f\u673a\uff1aCallable[[]\uff0cIO[dt.datetime]]=unure(dt.datetime.\u3002NOW)@unure def return_and_show_next_number(previous\uff1aint)-&gt\uff1bint\uff1anext_number=previous+1 print(Next_Number)#\u4e0d\u662f\u7eaf\u7684\uff0c\u56e0\u4e3aIO\u8fd4\u56deNEXT_NUMBER\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u54ea\u4e9b\u51fd\u6570\u662f\u7eaf\u51fd\u6570\uff0c\u54ea\u4e9b\u51fd\u6570\u662f\u9519\u8bef\u51fd\u6570\uff0c\u8fd9\u5bf9\u6211\u4eec\u6784\u5efa\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u3001\u5bf9\u4ee3\u7801\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u4ee5\u53ca\u5171\u540c\u7ec4\u6210\u4e1a\u52a1\u903b\u8f91\u6709\u5f88\u5927\u5e2e\u52a9\u3002\n\u6b63\u5982\u5df2\u7ecf\u8bf4\u8fc7\u7684\uff0c\u5f53\u6211\u4eec\u5904\u7406\u4e0d\u5931\u8d25\u7684\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u4f7f\u7528IO\u3002\n\u5982\u679c\u6211\u4eec\u7684\u51fd\u6570\u53ef\u80fd\u5931\u8d25\u5e76\u4e14\u4e0d\u7eaf\u5462\uff1f\u5c31\u50cf\u6211\u4eec\u5728\u524d\u9762\u7684\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684requests.get()\u4e00\u6837\u3002\n\u5bf9\u4e8e\u76f8\u540c\u7684\u8f93\u5165\uff0c\u6211\u4eec\u7684_parse_json\u51fd\u6570\u603b\u662f\u8fd4\u56de\u76f8\u540c\u7684\u7ed3\u679c(\u5e0c\u671b\u5982\u6b64)\uff1a\u60a8\u53ef\u4ee5\u89e3\u6790\u6709\u6548\u7684json\uff0c\u4e5f\u53ef\u4ee5\u89e3\u6790\u65e0\u6548\u7684json\u5931\u8d25\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u8fd4\u56de\u7eaf\u7ed3\u679c\u7684\u539f\u56e0\u3002\n\u6211\u4eec\u7684_make_request\u51fd\u6570\u4e0d\u7eaf\uff0c\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\u5c1d\u8bd5\u5728\u8fde\u63a5\u548c\u4e0d\u8fde\u63a5Internet\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\u4e24\u4e2a\u7c7b\u4f3c\u7684\u8bf7\u6c42\u3002\u5bf9\u4e8e\u76f8\u540c\u7684\u8f93\u5165\uff0c\u7ed3\u679c\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5fc5\u987b\u5728\u6b64\u5904\u4f7f\u7528IOResult\u7684\u539f\u56e0\u3002\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u5e76\u5c06\u7eaf\u4ee3\u7801\u4e0e\u4e0d\u7eaf\u4ee3\u7801\u5206\u5f00\uff0c\u6211\u4eec\u5fc5\u987b\u91cd\u6784\u6211\u4eec\u7684\u793a\u4f8b\u3002\n\u4ece\u9000\u8d27\u5bfc\u5165\u8bf7\u6c42\u3002IO\u4ece\u8fd4\u56de\u5bfc\u5165IO\u3001IOResult\u3001INPURE_SAFE\u3002\u7ed3\u679c\u5bfc\u5165\u5b89\u5168\uff0c\u4e0d\u4f1a\u9000\u8d27\u3002\u6765\u81ea\u9000\u8d27\u7684\u7ba1\u9053\u5bfc\u5165\u6d41\u3002\u65e0\u6307\u9488\u5bfc\u5165BIND_RESULT def FETCH_USER_PROFILE(user_id\uff1aint)-&gt\uff1bIOResult[&#39\uff1bUserProfile&#39\uff1b\uff0cException]\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u4ece\u5916\u90e8API\u68c0\u7d22`UserProfile`TypedDict\u3002&#34\uff1b&#34\uff1b&#34\uff1bReturn Flow(user_id\uff0c_make_request\uff0c#BEFORE\uff1adef(Response)-&gt\uff1bUserProfile#After\u3002ResultE[UserProfile]#After Bind_ResultE\uff1adef(IOResultE[Response])-&gt\uff1bIOResultE[UserProfile]bind_result(_Parse_Json)\uff0c)@unure_safe def_make_request(user_id\uff1aint)-&gt\uff1b\u8bf7\u6c42\u3002\u54cd\u5e94\uff1a\u54cd\u5e94=\u8bf7\u6c42\u3002GET(&#39\uff1b/api/Users/{0}&#39\uff1b\u3002format(User_Id))\u54cd\u5e94\u3002raise_for_status()return response@safe def_parse_json(Response\uff1aRequests\u3002\u54cd\u5e94)-&gt\uff1b&#39\uff1bUserProfile&#39\uff1b\uff1a\u8fd4\u56de\u54cd\u5e94\u3002json()\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7684\u9876\u5c42\u53d6\u6d88Safe_Performance_iosomewhere\uff0c\u4ee5\u83b7\u5f97\u7eaf\u503c\u3002\n\u672a\u6765\u7684\u4e3b\u8981\u7279\u70b9\u662f\uff0c\u5b83\u5141\u8bb8\u5728\u4fdd\u6301\u540c\u6b65\u4e0a\u4e0b\u6587\u7684\u540c\u65f6\u8fd0\u884c\u5f02\u6b65\u4ee3\u7801\u3002\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\uff0c\u7b2c\u4e8c\u4e2a\u51fd\u6570\u4f7f\u5176\u9012\u589e\uff1a\n\u5f02\u6b65def first()-&gt\uff1bint\uff1a\u8fd4\u56de1 def Second()\uff1a#\u4ece\u8fd9\u91cc\u600e\u4e48\u8c03\u7528`first()`\uff1f\u8fd4\u56deFIRST()+1#BOOM\uff01\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u8fd9\u662f\u9519\u8bef\u7684\u3002\u8fd9\u53ea\u662f\u4e2a\u4f8b\u5b50\u3002\n\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u53ea\u8fd0\u884cfirst()\uff0c\u6211\u4eec\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a\u610f\u5916\u7684\u534f\u8bae\u8868\uff0c\u5b83\u4e0d\u4f1a\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u7684\u503c\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u5148\u8fd0\u884cawait first()\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06Second\u66f4\u6539\u4e3a\u5f02\u6b65\u3002\u6709\u65f6\uff0c\u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u6ca1\u6709\u63a5\u89e6\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\u6216\u4f7f\u7b2c\u4e8c\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u76ee\u6807\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u5f02\u6b65\u503c\u5728\u540c\u6b65\u51fd\u6570\u4e2d\u9012\u589e\u3002\nimport anyio#\u6216asyncio\u6216\u4efb\u4f55\u5176\u4ed6\u5e93#\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u6211\u4eec\u7684\u2018Future\u2019\u4f20\u9012\u5230\u4efb\u4f55\u5e93\uff1aasyncio\u3001trio\u3001curio\u3002#\u5e76\u4f7f\u7528\u4efb\u4f55\u4e8b\u4ef6\u5faa\u73af\uff1aRegular\u3001uvloop\uff0c\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u5faa\u73af\uff0c\u7b49\u7b49\uff0c\u65ad\u8a00anyio\u3002\u8fd0\u884c(Second()\u3002\u53ef\u7b49\u5f85)==2\u3002\n\u5982\u60a8\u6240\u89c1\uff0cFuture\u5141\u8bb8\u60a8\u5728\u540c\u6b65\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u3002\u5e76\u5c06\u8fd9\u4e24\u4e2a\u9886\u57df\u6df7\u5408\u5728\u4e00\u8d77\u3002\u5bf9\u4e0d\u80fd\u5f15\u53d1\u5f02\u5e38\u7684\u64cd\u4f5c\u4f7f\u7528RAW Future\u3002\n\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u7ed3\u679c\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5176\u4e3b\u8981\u601d\u60f3\u662f\uff1a\u6211\u4eec\u4e0d\u5f15\u53d1\u5f02\u5e38\uff0c\u800c\u662f\u8fd4\u56de\u5b83\u4eec\u3002\u8fd9\u5728\u5f02\u6b65\u4ee3\u7801\u4e2d\u5c24\u5176\u5173\u952e\uff0c\u56e0\u4e3a\u5355\u4e2a\u5f02\u5e38\u53ef\u80fd\u4f1a\u7834\u574f\u5728\u5355\u4e2a\u4e8b\u4ef6\u5faa\u73af\u4e2d\u8fd0\u884c\u7684\u6240\u6709\u534f\u7a0b\u3002\n\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684Future\u548cResult\u5bb9\u5668\u7ec4\u5408\uff1aFutureResult.\u5f53\u60a8\u7684Future\u53ef\u80fd\u6709\u95ee\u9898\u65f6\u4f7f\u7528\u5b83\uff1a\u6bd4\u5982HTTP\u8bf7\u6c42\u6216\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u3002\n\u4ece\u9000\u8d27\u5bfc\u5165Anio\u3002\u5c06\u6765\u4ece\u9000\u8d27\u5bfc\u5165FURRENT_SAFE\u3002IO\u4ece\u9000\u8d27\u5bfc\u5165IOFailure\u3002\u7ba1\u9053\u5bfc\u5165IS_SUCCESS@FORUD_SAFE\u5f02\u6b65\u5b9a\u4e49\u63d0\u5347()\uff1a\u63d0\u5347ValueError(&#39\uff1b\u522b\u6025\uff01&#39\uff1b)ioresult=anyio\u3002\u5954\u8dd1(\u4e3e\u8d77\u3002\u53ef\u7b49\u5f85)#all`Future\u7684\u8fd4\u56deIO\u5bb9\u5668Assert NOT_SUCCESS(Ioresult)#True Assert ioresult==IOFailure(ValueError(&#39\uff1b\u522b\u8fd9\u4e48\u5feb\uff01&#39\uff1b))#Also True\u3002\n\u4f7f\u7528FutureResult\u5c06\u4fdd\u62a4\u60a8\u7684\u4ee3\u7801\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38\u3002\u60a8\u53ef\u4ee5\u59cb\u7ec8\u5728EventLoop\u4e2d\u7b49\u5f85\u6216\u6267\u884c\u4efb\u4f55FutureResult\u4ee5\u83b7\u53d6\u540c\u6b65IOResult\u5b9e\u4f8b\u4ee5\u540c\u6b65\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002\n\u5f02\u6b65def FETCH_USER(USER_ID\uff1aINT)-&gt\uff1b&#39\uff1bUSER&#39\uff1b\uff1a.\u3002\u5f02\u6b65\u5b9a\u4e49GET_USER_PERMISSIONS(USER\uff1a&#39\uff1bUSER&#39\uff1b)-&&gt;&39\uff1b\u6743\u9650&#39\uff1b\uff1a.\u3002\u5f02\u6b65\u5b9a\u4e49SECURE_ALLOWED(\u6743\u9650\uff1a&#39\uff1b\u6743\u9650&#39\uff1b)-&gt\uff1bbool\uff1a.\u3002Async def main(user_id\uff1aint)-&gt\uff1bbool\uff1a#\u53e6\u5916\uff0c\u4e0d\u8981\u5fd8\u8bb0\u4f7f\u7528`try/except`\u5904\u7406\u6240\u6709\u53ef\u80fd\u7684\u9519\u8bef\uff01user=await FETCH_USER(User_Id)#\u6211\u4eec\u6bcf\u6b21\u4f7f\u7528CORO\u65f6\u90fd\u4f1a\u7b49\u5f85\uff01\u6743\u9650=\u7b49\u5f85GET_USER_PERMISSIONS(\u7528\u6237)\u8fd4\u56de\u7b49\u5f85\u786e\u4fdd_\u5141\u8bb8(\u6743\u9650)\u3002\n\u6709\u4e9b\u4eba\u53ef\u4ee5\u63a5\u53d7\uff0c\u4f46\u6709\u4e9b\u4eba\u4e0d\u559c\u6b22\u8fd9\u79cd\u547d\u4ee4\u5f0f\u7684\u98ce\u683c\u3002\u95ee\u9898\u662f\u522b\u65e0\u9009\u62e9\u3002\n\u4f46\u662f\u73b0\u5728\uff0c\u501f\u52a9Future\u548cFutureResult\u5bb9\u5668\uff0c\u60a8\u53ef\u4ee5\u5728\u51fd\u6570\u98ce\u683c\u4e2d\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff01\n\u4ece\u9000\u8d27\u5bfc\u5165Anio\u3002\u5c06\u6765\u5bfc\u5165FutureResultE\uff0cFORMURE_SAFE FORMERS FORMENT\u3002IO\u5bfc\u5165IOSuccess\uff0cIOFailure@Future_Safe\u5f02\u6b65DEF FETCH_USER(user_id\uff1aint)-&gt\uff1b&#39\uff1bUSER&#39\uff1b\uff1a.@Future_Safe\u5f02\u6b65DEF GET_USER_PERSIONS(USER\uff1a&#39\uff1bUSER&#39\uff1b)-&&gt;&39\uff1b\u6743\u9650&#39\uff1b\uff1a.@FORFORY_SAFE ASYNC DEF SUBURE_ALLOWED(\u6743\u9650\uff1a&#39\uff1b\u6743\u9650&#39\uff1b)-&gt\u3002def main(user_id\uff1aint)-&gt\uff1bFutureResultE[bool]\uff1a#\u73b0\u5728\u53ef\u4ee5\u5c06`main`\u53d8\u6210\u540c\u6b65\u51fd\u6570\uff0c\u5b83\u6839\u672c\u4e0d\u4f1a`wait`\u3002#\u6211\u4eec\u4e5f\u4e0d\u518d\u5173\u5fc3\u5f02\u5e38\uff0c\u5b83\u4eec\u5df2\u7ecf\u88ab\u5904\u7406\u4e86\u3002\u8fd4\u56deFETCH_USER(USER_ID)\u3002\u7ed1\u5b9a(GET_USER_PERMISSIONS)\u3002\u7ed1\u5b9a(\u786e\u4fdd_\u5141\u8bb8)\u6b63\u786e\u7684\u7528\u6237\u6807\u8bc6\uff1aint#\u5177\u6709\u6240\u9700\u7684\u6743\u9650\u7981\u7528\u7528\u6237\u6807\u8bc6\uff1aint#\u6ca1\u6709\u6240\u9700\u7684\u6743\u9650\u9519\u8bef\u7684\u7528\u6237\u6807\u8bc6\uff1aint#\u4e0d\u5b58\u5728#\u6211\u4eec\u53ef\u4ee5\u6709\u6b63\u786e\u7684\u4e1a\u52a1\u7ed3\u679c\uff1a\u65ad\u8a00anyio\u3002\u8fd0\u884c(main(Right_User_Id)\u3002\u53ef\u7b49\u5f85)==IOSuccess(True)\u65ad\u8a00anyio\u3002\u8fd0\u884c(Main(BIREBLED_USER_ID)\u3002waitable)==IOSuccess(False)#\u5426\u5219\u6211\u4eec\u53ef\u80fd\u4f1a\u9047\u5230\u9519\u8bef\uff1a\u65ad\u8a00anyio\u3002\u8fd0\u884c(main(Error_User_Id)\u3002\u53ef\u7b49\u5f85)==IOFailure(UserDoesNotExistError(.)\uff0c)\n\u4ece\u9000\u8d27\u4e2d\u3002\u4ece\u8fd4\u56de\u7684\u65e0\u6307\u9488\u5bfc\u5165\u7ed1\u5b9a\u3002\u7ba1\u9053\u5bfc\u5165\u6d41\u7a0bdef main(user_id\uff1aint)-&gt\uff1bFutureResultE[bool]\uff1aReturn Flow(FETCH_USER(User_Id)\uff0cBIND(GET_USER_PERMISSIONS)\uff0cBIND(Assure_Allowed)\uff0c)", "note_en": "You might also want to  configure mypy correctly and install our pluginto fix  this existing issue:\n        So, what can we do to check for  None in our programs?You can use builtin  Optional typeand write a lot of  if some is not None: conditions.But,  having  null checks here and there makes your code unreadable.\n user:  Optional[ User] if  user  is  not  None:  balance  =  user. get_balance()  if  balance  is  not  None:  balance_credit  =  balance. credit_amount()  if  balance_credit  is  not  None  and  balance_credit  &gt;  0:  can_buy_stuff  =  True else:  can_buy_stuff  =  False\n Or you can use Maybe container!It consists of  Some and  Nothing types,representing existing state and empty (instead of  None) state respectively.\n from  typing  import  Optional from  returns. maybe  import  Maybe,  maybe @ maybe  # decorator to convert existing Optional[int] to Maybe[int] def  bad_function() -&gt;  Optional[ int]: ... maybe_result:  Maybe[ float]  =  bad_function(). map(  lambda  number:  number  /  2,) # =&gt; Maybe will return Some[float] only if there&#39;s a non-None value # Otherwise, will return Nothing\n You can be sure that  .map() method won&#39;t be called for  Nothing.Forget about  None-related errors forever!\n  user:  Optional[ User] can_buy_stuff:  Maybe[ bool]  =  Maybe. from_value( user). map(  # type hint is not required  lambda  real_user:  real_user. get_balance(),). map(  lambda  balance:  balance. credit_amount(),). map(  lambda  balance_credit:  balance_credit  &gt;  0,)\n   Many developers do use some kind of  dependency injection in Python.And usually it is based on the ideathat there&#39;s some kind of a container and assembly process.\n  Imagine that you have a  django based game, where you award users with points for each guessed letter in a word (unguessed letters are marked as  &#39;.&#39;):\n from  django. http  import  HttpRequest,  HttpResponse from  words_app. logic  import  calculate_points def  view( request:  HttpRequest) -&gt;  HttpResponse:  user_word:  str  =  request. POST[ &#39;word&#39;]  # just an example  points  =  calculate_points( user_word) ...  # later you show the result to user somehow # Somewhere in your `words_app/logic.py`: def  calculate_points( word:  str) -&gt;  int:  guessed_letters_count  =  len([ letter  for  letter  in  word  if  letter  !=  &#39;.&#39;])  return  _award_points_for_letters( guessed_letters_count) def  _award_points_for_letters( guessed:  int) -&gt;  int:  return  0  if  guessed  &lt;  5  else  guessed  # minimum 6 points possible!\n Awesome! It works, users are happy, your logic is pure and awesome.But, later you decide to make the game more fun:let&#39;s make the minimal accoutable letters thresholdconfigurable for an extra challenge.\n  def  _award_points_for_letters( guessed:  int,  threshold:  int) -&gt;  int:  return  0  if  guessed  &lt;  threshold  else  guessed\n The problem is that  _award_points_for_letters is deeply nested.And then you have to pass  threshold through the whole callstack,including  calculate_points and all other functions that might be on the way.All of them will have to accept  threshold as a parameter!This is not useful at all!Large code bases will struggle a lot from this change.\n Ok, you can directly use  django.settings (or similar)in your  _award_points_for_letters function.And  ruin your pure logic with framework specific details. That&#39;s ugly!\n  from  django. conf  import  settings from  django. http  import  HttpRequest,  HttpResponse from  words_app. logic  import  calculate_points def  view( request:  HttpRequest) -&gt;  HttpResponse:  user_word:  str  =  request. POST[ &#39;word&#39;]  # just an example  points  =  calculate_points( user_words)( settings)  # passing the dependencies ...  # later you show the result to user somehow # Somewhere in your `words_app/logic.py`: from  typing_extensions  import  Protocol from  returns. context  import  RequiresContext class  _Deps( Protocol):  # we rely on abstractions, not direct values or types  WORD_THRESHOLD:  int def  calculate_points( word:  str) -&gt;  RequiresContext[ _Deps,  int]:  guessed_letters_count  =  len([ letter  for  letter  in  word  if  letter  !=  &#39;.&#39;])  return  _award_points_for_letters( guessed_letters_count) def  _award_points_for_letters( guessed:  int) -&gt;  RequiresContext[ _Deps,  int]:  return  RequiresContext(  lambda  deps:  0  if  guessed  &lt;  deps. WORD_THRESHOLD  else  guessed, )\n And now you can pass your dependencies in a really direct and explicit way.And have the type-safety to check what you pass to cover your back.Check out  RequiresContext docs for more. There you will learn how to make  &#39;.&#39; also configurable.\n      import  requests def  fetch_user_profile( user_id:  int) -&gt;  &#39;UserProfile&#39;:  &#34;&#34;&#34;Fetches UserProfile dict from foreign API.&#34;&#34;&#34;  response  =  requests. get( &#39;/api/users/{0}&#39;. format( user_id))  response. raise_for_status()  return  response. json()\n Seems legit, does not it?It also seems like a pretty straight forward code to test.All you need is to mock  requests.get to return the structure you need.\n But, there are hidden problems in this tiny code samplethat are almost impossible to spot at the first glance.\n  Let&#39;s have a look at the exact same code,but with the all hidden problems explained.\n import  requests def  fetch_user_profile( user_id:  int) -&gt;  &#39;UserProfile&#39;:  &#34;&#34;&#34;Fetches UserProfile dict from foreign API.&#34;&#34;&#34;  response  =  requests. get( &#39;/api/users/{0}&#39;. format( user_id))  # What if we try to find user that does not exist?  # Or network will go down? Or the server will return 500?  # In this case the next line will fail with an exception.  # We need to handle all possible errors in this function  # and do not return corrupt data to consumers.  response. raise_for_status()  # What if we have received invalid JSON?  # Next line will raise an exception!  return  response. json()\n Now, all (probably all?) problems are clear.How can we be sure that this function will be safeto use inside our complex business logic?\n We really can not be sure!We will have to create  lots of  try and  except casesjust to catch the expected exceptions.\n   import  requests from  returns. result  import  Result,  safe from  returns. pipeline  import  flow from  returns. pointfree  import  bind def  fetch_user_profile( user_id:  int) -&gt;  Result[ &#39;UserProfile&#39;,  Exception]:  &#34;&#34;&#34;Fetches `UserProfile` TypedDict from foreign API.&#34;&#34;&#34;  return  flow(  user_id,  _make_request,  bind( _parse_json), ) @ safe def  _make_request( user_id:  int) -&gt;  requests. Response:  # TODO: we are not yet done with this example, read more about `IO`:  response  =  requests. get( &#39;/api/users/{0}&#39;. format( user_id))  response. raise_for_status()  return  response @ safe def  _parse_json( response:  requests. Response) -&gt;  &#39;UserProfile&#39;:  return  response. json()\n Now we have a clean and a safe and declarative wayto express our business needs:\n  Now, instead of returning regular valueswe return values wrapped inside a special containerthanks to the @safedecorator. It will return  Success[YourType] or Failure[Exception].And will never throw exception at us!\n  This way we can be sure that our code won&#39;t break inrandom places due to some implicit exception.Now we control all parts and are prepared for the explicit errors.\n We are not yet done with this example,let&#39;s continue to improve it in the next chapter.\n  Let&#39;s look at our example from another angle.All its functions look like regular ones:it is impossible to tell whether they are  pureor impure from the first sight.\n It leads to a very important consequence: we start to mix pure and impure code together.We should not do that!\n When these two concepts are mixedwe suffer really bad when testing or reusing it.Almost everything should be pure by default.And we should explicitly mark impure parts of the program.\n   import  random import  datetime  as  dt from  returns. io  import  IO def  get_random_number() -&gt;  IO[ int]:  # or use `@impure` decorator  return  IO( random. randint( 1,  10))  # isn&#39;t pure, because random now:  Callable[[],  IO[ dt. datetime]]  =  impure( dt. datetime. now) @ impure def  return_and_show_next_number( previous:  int) -&gt;  int:  next_number  =  previous  +  1  print( next_number)  # isn&#39;t pure, because does IO  return  next_number\n Now we can clearly see which functions are pure and which ones are impure.This helps us a lot in building large applications, unit testing you code,and composing bussiness logic together.\n  As it was already said, we use  IO when we handle functions that do not fail.\n What if our function can fail and is impure?Like  requests.get() we had earlier in your example.\n  Our  _parse_json function always returnthe same result (hopefully) for the same input:you can either parse valid  json or fail on invalid one.That&#39;s why we return pure  Result\n Our  _make_request function is impure and can fail.Try to send two similar requests with and without internet connection.The result will be different for the same input.That&#39;s why we must use  IOResult here\n So, in order to fulfill our requirement and separate pure code from impure one,we have to refactor our example.\n   import  requests from  returns. io  import  IO,  IOResult,  impure_safe from  returns. result  import  safe from  returns. pipeline  import  flow from  returns. pointfree  import  bind_result def  fetch_user_profile( user_id:  int) -&gt;  IOResult[ &#39;UserProfile&#39;,  Exception]:  &#34;&#34;&#34;Fetches `UserProfile` TypedDict from foreign API.&#34;&#34;&#34;  return  flow(  user_id,  _make_request,  # before: def (Response) -&gt; UserProfile  # after safe: def (Response) -&gt; ResultE[UserProfile]  # after bind_result: def (IOResultE[Response]) -&gt; IOResultE[UserProfile]  bind_result( _parse_json), ) @ impure_safe def  _make_request( user_id:  int) -&gt;  requests. Response:  response  =  requests. get( &#39;/api/users/{0}&#39;. format( user_id))  response. raise_for_status()  return  response @ safe def  _parse_json( response:  requests. Response) -&gt;  &#39;UserProfile&#39;:  return  response. json()\n And latter we can  unsafe_perform_iosomewhere at the top level of our program to get the pure value.\n        The main feature of  Futureis that it allows to run async codewhile maintaining sync context. Let&#39;s see an example.\n Let&#39;s say we have two functions,the  first one returns a number and the  second one increments it:\n async  def  first() -&gt;  int:  return  1 def  second():  # How can we call `first()` from here?  return  first()  +  1  # Boom! Don&#39;t do this, this is wrong. Just an example.\n If we try to just run  first(), we will just create an unawaited coroutine.It won&#39;t return the value we want.\n But, if we would try to run  await first(),then we would need to change  second to be  async.And sometimes it is not possible for various reasons.\n   Without touching our  first async functionor making  second async we have achieved our goal.Now, our async value is incremented inside a sync function.\n  import  anyio  # or asyncio, or any other lib # We can then pass our `Future` to any library: asyncio, trio, curio. # And use any event loop: regular, uvloop, even a custom one, etc assert  anyio. run( second(). awaitable)  ==  2\n As you can see  Future allows youto work with async functions from a sync context.And to mix these two realms together.Use raw  Future for operations that cannot raise exceptions.\n  We have already covered how   Result works.The main idea is: we don&#39;t raise exceptions, we return them.It is  especially critical in async code,because a single exception can ruinall our coroutines running in a single eventloop.\n We have a handy combination of  Future and  Result containers:  FutureResult.Use it when your  Future might have problems:like HTTP requests or filesystem oprations.\n  import  anyio from  returns. future  import  future_safe from  returns. io  import  IOFailure from  returns. pipeline  import  is_successful @ future_safe async  def  raising():  raise  ValueError( &#39;Not so fast!&#39;) ioresult  =  anyio. run( raising. awaitable)  # all `Future`s return IO containers assert  not  is_successful( ioresult)  # True assert  ioresult  ==  IOFailure( ValueError( &#39;Not so fast!&#39;))  # Also True\n Using  FutureResult will keep your code safe from exceptions.You can always  await or execute inside an eventloop any  FutureResultto get sync  IOResult instance to work with it in a sync manner.\n   async  def  fetch_user( user_id:  int) -&gt;  &#39;User&#39;: ... async  def  get_user_permissions( user:  &#39;User&#39;) -&gt;  &#39;Permissions&#39;: ... async  def  ensure_allowed( permissions:  &#39;Permissions&#39;) -&gt;  bool: ... async  def  main( user_id:  int) -&gt;  bool:  # Also, don&#39;t forget to handle all possible errors with `try / except`!  user  =  await  fetch_user( user_id)  # We will await each time we use a coro!  permissions  =  await  get_user_permissions( user)  return  await  ensure_allowed( permissions)\n Some people are ok with it, but some people don&#39;t like this imperative style.The problem is that there was no choice.\n But now, you can do the same thing in functional style!With the help of  Future and  FutureResult containers:\n import  anyio from  returns. future  import  FutureResultE,  future_safe from  returns. io  import  IOSuccess,  IOFailure @ future_safe async  def  fetch_user( user_id:  int) -&gt;  &#39;User&#39;: ... @ future_safe async  def  get_user_permissions( user:  &#39;User&#39;) -&gt;  &#39;Permissions&#39;: ... @ future_safe async  def  ensure_allowed( permissions:  &#39;Permissions&#39;) -&gt;  bool: ... def  main( user_id:  int) -&gt;  FutureResultE[ bool]:  # We can now turn `main` into a sync function, it does not `await` at all.  # We also don&#39;t care about exceptions anymore, they are already handled.  return  fetch_user( user_id). bind( get_user_permissions). bind( ensure_allowed) correct_user_id:  int  # has required permissions banned_user_id:  int  # does not have required permissions wrong_user_id:  int  # does not exist # We can have correct business results: assert  anyio. run( main( correct_user_id). awaitable)  ==  IOSuccess( True) assert  anyio. run( main( banned_user_id). awaitable)  ==  IOSuccess( False) # Or we can have errors along the way: assert  anyio. run( main( wrong_user_id). awaitable)  ==  IOFailure(  UserDoesNotExistError(...),)\n  from  returns. pointfree  import  bind from  returns. pipeline  import  flow def  main( user_id:  int) -&gt;  FutureResultE[ bool]:  return  flow(  fetch_user( user_id),  bind( get_user_permissions),  bind( ensure_allowed), )", "posttime": "2020-05-28 22:57:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,python,\u8fd4\u56de", "title": "Python\u4e2d\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b", "title_en": "Functional Programming in Python", "transed": 1, "url": "https://github.com/dry-python/returns", "via": "", "real_tags": ["\u7f16\u7a0b", "python", "\u8fd4\u56de"]}, {"category": "", "categoryclass": "", "imagename": "694dbabbf8752068a5e140db4c3a6c7e.jpeg", "infoid": 1004087, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f-\u5468\u56db\uff0c\u4f17\u8bae\u9662\u53d6\u6d88\u4e86\u4e00\u9879\u5173\u4e8e\u5ef6\u957f\u4e00\u5957\u5230\u671f\u7684\u56fd\u5185\u76d1\u63a7\u6743\u7684\u91cd\u5927\u56fd\u5bb6\u5b89\u5168\u7acb\u6cd5\u7684\u6295\u7968\u8ba1\u5212\uff0c\u56e0\u4e3a\u5728\u7279\u6717\u666e\u603b\u7edf\u53d1\u51fa\u5426\u51b3\u5a01\u80c1\u540e\uff0c\u8be5\u7acb\u6cd5\u4f3c\u4e4e\u4e0d\u786e\u5b9a\u80fd\u5426\u83b7\u5f97\u901a\u8fc7\u3002\n\u4f17\u8bae\u9662\u591a\u6570\u515a\u9886\u8896\u970d\u8036(Steny Hoyer)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u5468\u4e09\u665a\u95f4\u63a8\u8fdf\u7684\u6295\u7968\u5b8c\u5168\u662f\u5728\u5171\u548c\u515a\u4eba\u5e7f\u6cdb\u53cd\u5bf9\u7684\u60c5\u51b5\u4e0b\u53d6\u6d88\u7684\u3002\u4e00\u4e9b\u8fdb\u6b65\u7684\u6c11\u4e3b\u515a\u4eba\uff0c\u5bf9\u66f4\u591a\u7684\u9690\u79c1\u4fee\u6b63\u6848\u4e0d\u5305\u62ec\u800c\u611f\u5230\u6cae\u4e27\uff0c\u4e5f\u8868\u8fbe\u4e86\u7f3a\u4e4f.", "note_en": "WASHINGTON\u2014The House of Representatives scrapped a planned vote Thursday on major national security legislation to renew a set of expired domestic surveillance powers after passage appeared uncertain following a veto threat by President Trump.\n  In a statement, House Majority Leader Steny Hoyer said the vote, which had been postponed late Wednesday, was being pulled entirely amid widespread Republican opposition. Some progressive Democrats, frustrated that more privacy amendments wouldn\u2019t be included, had also expressed a lack...", "posttime": "2020-05-28 22:56:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5a01\u80c1,cancels,\u4f17\u8bae\u9662", "title": "\u7279\u6717\u666e\u5a01\u80c1\u5426\u51b3\u540e\uff0c\u4f17\u8bae\u9662\u53d6\u6d88\u6295\u7968\u5ef6\u957f\u76d1\u63a7\u6743", "title_en": "House Cancels Vote to Renew Surveillance Powers After Trump Threatened Veto", "transed": 1, "url": "https://www.wsj.com/articles/house-cancels-vote-to-renew-surveillance-powers-after-trump-threatened-veto-11590675372", "via": "", "real_tags": ["\u5a01\u80c1", "cancels", "\u4f17\u8bae\u9662"]}, {"category": "", "categoryclass": "", "imagename": "08f5b71612225eaeb5a80c85268c908f.jpg", "infoid": 1004086, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u636e\u8f6c\u50a8\u5305\u62ec\u6570\u5343\u4e07\u4eba\u7684\u4e2a\u4eba\u4fe1\u606f\u4ee5\u53ca\u4ed6\u4eec\u5728\u54ea\u91cc\u76f8\u9047-\u5b83\u7684\u6765\u6e90\u662f\u4e00\u4e2a\u8c1c\u3002\n\u6b64\u6b21\u6cc4\u9732\u5305\u62ec\u8fd190 GB\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u5305\u62ec\u4ed6\u4eec\u53bb\u8fc7\u54ea\u91cc\u548c\u89c1\u8fc7\u4eba\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\u4f46\u6ca1\u6709\u4efb\u4f55\u7ebf\u7d22\u8868\u660e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u6700\u521d\u5b9e\u9645\u4e0a\u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\n\u867d\u7136\u8fd9\u4e9b\u4fe1\u606f\u5df2\u7ecf\u516c\u5f00\u6258\u7ba1\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u8ff9\u8c61\u8868\u660e\u5b83\u6700\u521d\u662f\u4ece\u54ea\u91cc\u6536\u96c6\u7684\u3002\n\u8f6c\u50a8\u5305\u62ec\u4e2a\u4eba\u5217\u8868\uff0c\u5305\u62ec\u4ed6\u4eec\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u4e0a\u7684\u4fe1\u606f\uff0c\u7535\u8bdd\u53f7\u7801\u548c\u5730\u5740\u3002\u7136\u800c\uff0c\u4e0d\u540c\u5bfb\u5e38\u7684\u662f\uff0c\u5b83\u8fd8\u5305\u62ec\u4eba\u4eec\u5728\u54ea\u91cc\u76f8\u9047\u7684\u7ec6\u8282\uff0c\u4ee5\u53ca\u5783\u573e\u573a\u4e2d\u5217\u51fa\u7684\u4eba\u53ef\u80fd\u4ece\u54ea\u91cc\u8ba4\u8bc6\u5f7c\u6b64\u7684\u4fe1\u606f\u3002\n\u56e0\u6b64\uff0c\u8fd9\u4e9b\u6570\u636e\u5f88\u53ef\u80fd\u662f\u4eceCRM\u6216\u5ba2\u6237\u5173\u7cfb\u7ba1\u7406\u8f6f\u4ef6\u4e2d\u6536\u96c6\u7684\u3002\u636e\u63a8\u6d4b\uff0c\u7528\u6237\u53ef\u80fd\u8bb0\u4e0b\u4e86\u8054\u7cfb\u4eba\u7684\u4e2a\u4eba\u4fe1\u606f\uff0c\u4ee5\u53ca\u4e00\u5f20\u5173\u4e8e\u4ed6\u4eec\u672a\u6765\u5728\u54ea\u91cc\u89c1\u8fc7\u9762\u7684\u4fbf\u6761\uff0c\u5e76\u5c06\u5176\u8bb0\u5f55\u5728\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\uff0c\u8be5\u8f6f\u4ef6\u540e\u6765\u88ab\u653b\u7834\u3002\n\u4f46\u7279\u6d1b\u4f0a\u00b7\u4ea8\u7279(Troy Hunt)\u8ffd\u8e2a\u8fd9\u7c7b\u6570\u636e\u6cc4\u9732\u4e8b\u4ef6\uff0c\u5e76\u8fd0\u8425\u7f51\u7ad9haveibeenpwned.com\uff0c\u8ba9\u7528\u6237\u67e5\u770b\u81ea\u5df1\u662f\u5426\u88ab\u5377\u5165\u5176\u4e2d\u3002\u4ed6\u8bf4\uff0c\u4ed6\u4e00\u76f4\u627e\u4e0d\u5230\u4efb\u4f55\u5173\u4e8e\u8be5\u8f6f\u4ef6\u53ef\u80fd\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u5b83\u662f\u5982\u4f55\u516c\u4e4b\u4e8e\u4f17\u7684\u7ebf\u7d22\u3002\n\u4ed6\u5728\u5ba3\u5e03\u8fd9\u4e00\u53d1\u73b0\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff0c\u6ca1\u6709\u4efb\u4f55\u5730\u65b9-\u7edd\u5bf9\u6ca1\u6709\u4efb\u4f55\u5730\u65b9-\u6ca1\u6709\u4efb\u4f55\u8ff9\u8c61\u8868\u660e\u8fd9\u4e9b\u6570\u636e\u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\n\u4ea8\u7279\u6307\u51fa\uff0c\u8003\u8651\u5230\u8fd9\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5176\u4ed6\u4eba\u548c\u4ed6\u4eec\u4f7f\u7528\u7684\u7cfb\u7edf\u7684\u5b89\u5168\uff0c\u6ca1\u6709\u771f\u6b63\u7684\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u62a4\u4e00\u4e2a\u4eba\u7684\u6570\u636e\u4e0d\u4f1a\u5728\u8fd9\u6837\u7684\u5165\u4fb5\u4e2d\u66b4\u9732\u3002\n\n\u4ed6\u603b\u7ed3\u9053\uff1a\u9664\u4e86\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u66f4\u6e05\u695a\u5730\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u7684\u4e2a\u4eba\u4fe1\u606f\u5728\u6ca1\u6709\u6211\u4eec\u540c\u610f\u7684\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u5728\u6211\u4eec\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u4f20\u64ad\u5230\u4e86\u4ec0\u4e48\u7a0b\u5ea6\uff0c\u5bf9\u6b64\u4f60\u6211\u90fd\u65e0\u80fd\u4e3a\u529b\u3002\n\u6240\u6709\u7684\u6570\u636e\u73b0\u5728\u90fd\u5df2\u7ecf\u52a0\u8f7d\u5230\u4ea8\u7279\u5148\u751f\u7684\u7f51\u7ad9\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u68c0\u67e5\u4ed6\u4eec\u662f\u5426\u53d7\u5230\u4e86\u5f71\u54cd\u3002\n\u8f93\u5165\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u8bf7\u8f93\u5165\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u586b\u5199\u6b64\u5b57\u6bb5\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u7535\u5b50\u90ae\u4ef6\u5df2\u5b58\u5728\u3002\u767b\u5f55\u4ee5\u66f4\u65b0\u60a8\u7684\u65f6\u4e8b\u901a\u8baf\u9996\u9009\u9879\uff0c\u6211\u5e0c\u671b\u6bcf\u5468\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u63a5\u6536\u751f\u6d3b\u65b9\u5f0f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u529f\u80fd\u548c\u8d8b\u52bf\u3002\n\u60a8\u53ef\u80fd\u4e0d\u540c\u610f\u6211\u4eec\u7684\u89c2\u70b9\uff0c\u4e5f\u53ef\u80fd\u4e0d\u540c\u610f\u5176\u4ed6\u7528\u6237\u7684\u89c2\u70b9\uff0c\u4f46\u8bf7\u606d\u656c\u5730\u56de\u5e94\u3002\n\u5492\u9a82\u3001\u4eba\u8eab\u8fb1\u9a82\u3001\u79cd\u65cf\u4e3b\u4e49\u3001\u6027\u522b\u6b67\u89c6\u3001\u4ec7\u89c6\u540c\u6027\u604b\u548c\u5176\u4ed6\u6b67\u89c6\u6027\u6216\u717d\u52a8\u6027\u7684\u8bed\u8a00\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\n\u60a8\u53ef\u80fd\u4e0d\u540c\u610f\u6211\u4eec\u7684\u89c2\u70b9\uff0c\u4e5f\u53ef\u80fd\u4e0d\u540c\u610f\u5176\u4ed6\u7528\u6237\u7684\u89c2\u70b9\uff0c\u4f46\u8bf7\u606d\u656c\u5730\u56de\u5e94\n\u5492\u9a82\u3001\u4eba\u8eab\u8fb1\u9a82\u3001\u79cd\u65cf\u4e3b\u4e49\u3001\u6027\u522b\u6b67\u89c6\u3001\u4ec7\u89c6\u540c\u6027\u604b\u548c\u5176\u4ed6\u6b67\u89c6\u6027\u6216\u717d\u52a8\u6027\u7684\u8bed\u8a00\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\n\u60f3\u8981\u8ba8\u8bba\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u53c2\u4e0e\u6700\u5f15\u4eba\u5165\u80dc\u7684\u8ba8\u8bba\uff0c\u542c\u53d6\u8bb0\u8005\u7684\u610f\u89c1\u5417\uff1f\u7acb\u5373\u5f00\u59cb\u60a8\u7684\u72ec\u7acb\u9ad8\u7ea7\u8ba2\u9605\u3002\n\u5df2\u7ecf\u6ce8\u518c\u4e86\uff1f\u767b\u5165\u3002\n\u72ec\u7acb\u9ad8\u7ea7\u8bc4\u8bba\u53ef\u4ee5\u7531\u6211\u4eec\u4f1a\u5458\u8ba1\u5212\u7684\u6210\u5458\u53d1\u5e03\uff0c\u72ec\u7acb\u9ad8\u7ea7\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u53c2\u4e0e\u5ea6\u6700\u9ad8\u7684\u8bfb\u8005\u8fa9\u8bba\u91cd\u5927\u95ee\u9898\uff0c\u5206\u4eab\u4ed6\u4eec\u81ea\u5df1\u7684\u7ecf\u9a8c\uff0c\u8ba8\u8bba\u73b0\u5b9e\u4e16\u754c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7b49\u7b49\u3002\u6211\u4eec\u7684\u8bb0\u8005\u5c06\u5c1d\u8bd5\u56de\u5e94\uff0c\u5728\u4ed6\u4eec\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u52a0\u5165\u8fd9\u4e9b\u5e16\u5b50\uff0c\u4ee5\u521b\u9020\u4e00\u6b21\u771f\u6b63\u7684\u72ec\u7acb\u6ea2\u4ef7\u4f1a\u8bae\u3002\u5173\u4e8e\u6240\u6709\u4e3b\u9898\u7684\u6700\u6709\u6d1e\u5bdf\u529b\u7684\u8bc4\u8bba\u5c06\u6bcf\u5929\u53d1\u8868\u5728\u4e13\u95e8\u7684\u6587\u7ae0\u4e2d\u3002\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u5728\u6709\u4eba\u56de\u590d\u60a8\u7684\u8bc4\u8bba\u65f6\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u8ba2\u9605\u72ec\u7acb\u9ad8\u7ea7\u7684\u4eba\uff0c\u73b0\u6709\u7684\u5f00\u653e\u8bc4\u8bba\u7ebf\u7a0b\u5c06\u7ee7\u7eed\u5b58\u5728\u3002\u7531\u4e8e\u8fd9\u4e2a\u8bc4\u8bba\u793e\u533a\u7684\u5de8\u5927\u89c4\u6a21\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u6bcf\u4e2a\u5e16\u5b50\u7ed9\u4e88\u540c\u7b49\u7a0b\u5ea6\u7684\u5173\u6ce8\uff0c\u4f46\u51fa\u4e8e\u516c\u5f00\u8fa9\u8bba\u7684\u5229\u76ca\uff0c\u6211\u4eec\u4fdd\u7559\u4e86\u8fd9\u4e00\u533a\u57df\u3002\u8bf7\u7ee7\u7eed\u5c0a\u91cd\u6240\u6709\u8bc4\u8bba\u8005\uff0c\u5e76\u8fdb\u884c\u5efa\u8bbe\u6027\u7684\u8fa9\u8bba\u3002", "note_en": "A huge data dump includes the personal information of tens of millions of people and where they have met \u2013 and its origin is a mystery.\n  The breach includes almost 90GB of people&#39;s personal data, including details of where they have been and met people.\n    But there is no clue where the information has actually come from in the first place.\n     Though the information has been hosted publicly, and available to anyone, there is no hint about where it was first collected from.\n         The dump includes listings of individual people, including information on their social media sites, phone numbers and addresses. Unusually, however, it also includes details about where people have met, and information about where the people listed within the dump may know each other from.\n      As such, it appears that the data was probably collected from CRM, or customer relationship management, software. Users presumably took down a contact&#39;s personal information as well as a note about where they had met them to remember in future, and recorded it in a piece of software, which has since been breached.\n  But Troy Hunt, who tracks such data breaches and runs the website  HaveIBeenPwned.com to allow users to check if they have been caught up in them, said that he had been unable to find any clue about what that software might be or how it had become public.\n    &#34;Nowhere \u2013  absolutely nowhere \u2013 was there any indication of where the data had originated from,&#34; he wrote in  a blog post announcing the find.\n  Mr Hunt noted that there is no real way to protect one&#39;s data from being exposed in such a breach, given that it depends entirely on other people and the security of the systems they use.\n    \n  &#34;There&#39;s nothing you nor I can do about it beyond being more conscious than ever about just how far our personal information spreads without our consent and indeed, without our knowledge,&#34; he concluded.\n  All of the data has now been loaded into Mr Hunt&#39;s website, meaning that users can easily check if they have been affected.\n        Enter your email address      Please enter an email address  Email address is invalid  Fill out this field  Email address is invalid  Email already exists. Log in to update your newsletter preferences    I  would like to receive the best features and trends across the world of lifestyle every week by email\n        You may not agree with our views, or other users\u2019, but please respond to them respectfully\n  Swearing, personal abuse, racism, sexism, homophobia and other discriminatory or inciteful language is not acceptable\n    You may not agree with our views, or other users\u2019, but please respond to them respectfully\n  Swearing, personal abuse, racism, sexism, homophobia and other discriminatory or inciteful language is not acceptable\n                 Want to discuss real-world problems, be involved in the most engaging discussions and hear from the journalists? Start your Independent Premium subscription today.\n       Already registered?  Log in\n          Independent Premium Comments can be posted by members of our membership scheme, Independent Premium. It allows our most engaged readers to debate the big issues, share their own experiences, discuss real-world solutions, and more. Our journalists will try to respond by joining the threads when they can to create a true meeting of independent Premium. The most insightful comments on all subjects will be published daily in dedicated articles. You can also choose to be emailed when someone replies to your comment.\n  The existing Open Comments threads will continue to exist for those who do not subscribe to Independent Premium. Due to the sheer scale of this comment community, we are not able to give each post the same level of attention, but we have preserved this area in the interests of open debate. Please continue to respect all commenters and create constructive debates.", "posttime": "2020-05-28 22:56:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u51fa\u73b0,list,\u53ef\u80fd", "title": "\u795e\u79d8\u540d\u5355\u51fa\u73b0\u4eba\u4eec\u5728\u54ea\u91cc\u76f8\u9047\uff0c\u4e2a\u4eba\u4fe1\u606f\uff0c\u6570\u5343\u4e07", "title_en": "Mystery list appears of where people met, personal info, of tens of millions", "transed": 1, "url": "https://www.independent.co.uk/life-style/gadgets-and-tech/news/data-dump-personal-information-breach-crm-a9515931.html", "via": "", "real_tags": ["app", "\u51fa\u73b0", "list", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "16b54cf975ce8aa2765d403e496a6733.png", "infoid": 1004085, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Trilium Notes\u662f\u4e00\u4e2a\u5c42\u6b21\u5316\u7684\u7b14\u8bb0\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e13\u6ce8\u4e8e\u6784\u5efa\u5927\u578b\u4e2a\u4eba\u77e5\u8bc6\u5e93\u3002\u6709\u5173\u5feb\u901f\u6982\u8ff0\uff0c\u8bf7\u53c2\u9605\u5c4f\u5e55\u622a\u56fe\uff1a\n\u97f3\u7b26\u53ef\u4ee5\u6392\u5217\u6210\u4efb\u610f\u6df1\u7684\u6811\u3002\u53ef\u4ee5\u5c06\u5355\u4e2a\u97f3\u7b26\u653e\u7f6e\u5230\u6811\u4e2d\u7684\u591a\u4e2a\u4f4d\u7f6e(\u8bf7\u53c2\u9605\u514b\u9686)\u3002\nTrilium\u4ee5\u684c\u9762\u5e94\u7528\u7a0b\u5e8f(Linux\u548cWindows)\u6216\u6258\u7ba1\u5728\u60a8\u7684\u670d\u52a1\u5668\u4e0a\u7684Web\u5e94\u7528\u7a0b\u5e8f(Linux)\u7684\u5f62\u5f0f\u63d0\u4f9b\u3002Mac OS\u684c\u9762\u7248\u672c\u53ef\u7528\uff0c\u4f46\u4e0d\u53d7\u652f\u6301\u3002\n\u5982\u679c\u60a8\u60f3\u5728\u684c\u9762\u4e0a\u4f7f\u7528Trilium\uff0c\u8bf7\u4ece\u6700\u65b0\u7248\u672c\u4e0b\u8f7d\u9002\u7528\u4e8e\u60a8\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u7248\u672c\uff0c\u89e3\u538b\u7f29\u5305\u5e76\u8fd0\u884ctrilium\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb\u4e2a\u4eba\u77e5\u8bc6\u5e93\u7684\u6a21\u5f0f\uff0c\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u4f7f\u7528Trilium\u7684\u7075\u611f\u3002\nFancyTree-\u529f\u80fd\u975e\u5e38\u4e30\u5bcc\u7684\u6811\u5e93\uff0c\u6ca1\u6709\u771f\u6b63\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u5982\u679c\u6ca1\u6709\u5b83\uff0cTrilium Notes\u5c06\u4e0d\u4f1a\u662f\u4e00\u6837\u7684\u3002", "note_en": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. See  screenshots for quick overview:\n   Notes can be arranged into arbitrarily deep tree. Single note can be placed into multiple places in the tree (see  cloning)\n  Trilium is provided as either desktop application (Linux and Windows) or web application hosted on your server (Linux). Mac OS desktop build is available, but it is  unsupported.\n If you want to use Trilium on the desktop, download binary release for your platform from  latest release, unzip the package and run  trilium executable.\n   You can also read  Patterns of personal knowledge base to get some inspiration on how you might use Trilium.\n       FancyTree - very feature rich tree library without real competition. Trilium Notes would not be the same without it.", "posttime": "2020-05-28 22:55:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e2a\u4eba,notes,trilium", "title": "Trilium Notes-Markdown AutoFormat(\u6240\u89c1\u5373\u6240\u5f97)\u4e2a\u4eba\u77e5\u8bc6\u5e93", "title_en": "Trilium Notes \u2013 Markdown autoformat (WYSIWYG) personal knowledge base", "transed": 1, "url": "https://github.com/zadam/trilium", "via": "", "real_tags": ["\u4e2a\u4eba", "notes", "trilium"]}, {"category": "", "categoryclass": "", "imagename": "f7d6e1ab61e3444df68a8eeb8f0e554f.jpg", "infoid": 1004084, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ec5\u4f9b\u5a31\u4e50\uff0c\u7cbe\u9009\u7684\u590d\u53e4\u63a7\u5236\u5ba4\u53ef\u4ee5\u8ffd\u6eaf\u5230\u82cf\u8054\u65f6\u4ee3\uff01\u4e00\u4e2a\u6f02\u4eae\u7684\u63a7\u5236\u5ba4\u96c6\u5408\uff0c\u91cc\u9762\u5145\u6ee1\u4e86\u5927\u6309\u94ae\u548c\u6a21\u62df\u62e8\u53f7\u76d8\uff0c\u65e9\u5728\u8ba1\u7b97\u673a\u548c\u5c4f\u5e55\u5927\u4f17\u5316\u4e4b\u524d\u5f88\u4e45\u3002\u66f4\u591a\u4fe1\u606f\uff1a\u663e\u793a\u5e76\u6b63\u786e\u663e\u793a", "note_en": "Just for the pleasure, a selection of vintage control rooms dating back to the Soviet era! A beautiful collection of control rooms filled with large buttons and analog dials, long before the democratization of computers and screens.\r\rMore info: Present And Correct", "posttime": "2020-05-28 22:55:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82cf\u8054,\u63a7\u5236\u5ba4,beauty", "title": "\u82cf\u8054\u63a7\u5236\u5ba4\u7684\u590d\u53e4\u4e4b\u7f8e", "title_en": "The Vintage Beauty of Soviet Control Rooms", "transed": 1, "url": "https://designyoutrust.com/2018/01/vintage-beauty-soviet-control-rooms/", "via": "", "real_tags": ["\u82cf\u8054", "\u63a7\u5236\u5ba4", "beauty"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004083, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9632\u5f39TLS\u65f6\u4e8b\u901a\u8baf\u662f\u4e00\u4efd\u514d\u8d39\u7684\u5b9a\u671f\u65f6\u4e8b\u901a\u8baf\uff0c\u4e3a\u60a8\u5e26\u6765\u5173\u4e8eSSL/TLS\u548cInternet PKI\u7684\u8bc4\u8bba\u548c\u65b0\u95fb\uff0c\u65e8\u5728\u8ba9\u60a8\u968f\u65f6\u4e86\u89e3\u8be5\u9886\u57df\u7684\u6700\u65b0\u53d1\u5c55\u3002\n\u672c\u671f\uff1aF-Secure\u516c\u53f8\u57283\u6708\u4efd\u53d1\u73b0\u7684Saltstack\u914d\u7f6e\u7ba1\u7406\u8f6f\u4ef6\u4e2d\u7684\u4e00\u4e2a\u4e25\u91cd\u6f0f\u6d1e\u6700\u8fd1\u88ab\u5e7f\u6cdb\u653b\u51fb\u3002\u5728\u53d7\u5f71\u54cd\u7684\u4e3b\u673a\u4e2d\uff0c\u6709\u4e00\u4e2a\u7531DigiCert\u64cd\u4f5c\u7684\u8bc1\u4e66\u900f\u660e\u65e5\u5fd7\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u8bbf\u95eeCT2\u65e5\u5fd7\u7684\u79c1\u94a5\u3002\u6839\u636eDigiCert\u7684\u8bf4\u6cd5\uff0c\u8be5\u516c\u53f8\u8fd0\u8425\u7684\u5176\u4ed6\u65e5\u5fd7\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u6709\u6548\u7684TLS\u8bc1\u4e66\uff0cGoogle Chrome\u6d4f\u89c8\u5668\u90fd\u9700\u8981\u4e24\u4e2a\u6240\u8c13\u7684\u7b7e\u540d\u8bc1\u4e66\u65f6\u95f4\u6233(SCT)\u3002\u8fd9\u4e9bSCT\u5fc5\u987b\u6765\u81ea\u4e0d\u540c\u7684\u65e5\u5fd7\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u4e00\u4e2a\u65e5\u5fd7\u88ab\u7834\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u603b\u6709\u7b2c\u4e8c\u4e2aSCT\u4e0d\u53d7\u5f71\u54cd\u3002\n\u5fb7\u6587\u00b7\u5965\u5e03\u83b1\u6069(Devon O\u2018Brien)\u89e3\u91ca\u4e86\u8c37\u6b4c\u5bf9\u8fd9\u4e00\u4e8b\u4ef6\u7684\u56de\u5e94\u3002\u8bc1\u4e66\u53ef\u4ee5\u5d4c\u5165SCT\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7TLS\u6269\u5c55\u6216OCSP\u63d0\u4f9b\u3002\u5bf9\u4e8e\u88ab\u7834\u574f\u7684CT2\u65e5\u5fd7\u4e2d\u7684SCT\u88ab\u5d4c\u5165\u7684\u60c5\u51b5\uff0c\u5982\u679c\u8bc1\u4e66\u662f\u5728\u4e8b\u6545\u53d1\u751f\u4e4b\u524d\u9881\u53d1\u7684\uff0cChrome\u5c06\u7ee7\u7eed\u63a5\u53d7\u6b64\u65e5\u5fd7\u4e2d\u7684SCT\u8bc1\u4e66\u3002\u4f46\u662f\uff0c\u901a\u8fc7TLS\u6269\u5c55\u6216OCSP\u4ea4\u4ed8\u5176SCT\u7684\u8bc1\u4e66\u5982\u679c\u4f9d\u8d56\u4e8e\u53d7\u635f\u7684\u65e5\u5fd7\uff0c\u5219\u9700\u8981\u4ece\u4e0d\u540c\u7684\u65e5\u5fd7\u83b7\u53d6\u65b0\u7684SCT\u3002\nMozilla\u53d1\u5e03\u4e86\u4e00\u4efdFirefox\u5b89\u5168\u901a\u8baf\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u4e0eTLS\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6d89\u53caHTTPS\u4e0a\u7684DNS(DoH)\u3001TLS 1.0/1.1\u5f03\u7528\uff0c\u4ee5\u53caNSS\u4e2d\u65b0\u9a8c\u8bc1\u7684\u52a0\u5bc6\u539f\u8bed\u3002\nKEMTLS\u662f\u4e00\u79cd\u5728\u5177\u6709\u8ba4\u8bc1\u5bc6\u94a5\u4ea4\u6362\u7684\u540e\u91cf\u5b50\u573a\u666f\u4e2d\u8fdb\u884cTLS\u63e1\u624b\u7684\u4e0d\u540c\u65b9\u5f0f\u7684\u5efa\u8bae\u3002\n\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0cOpenSSL\u89e3\u91ca\u4e86\u5176\u5b89\u5168\u901a\u77e5\u7b56\u7565\u7684\u4e00\u4e9b\u53d8\u5316\uff0c\u7279\u522b\u662f\u201c\u5305\u62ec\u6211\u4eec\u5411\u4e0e\u6211\u4eec\u6709\u5546\u4e1a\u5173\u7cfb\u7684\u516c\u53f8\u63d0\u4f9b\u9884\u5148\u901a\u77e5\u7684\u9009\u9879\u201d\u3002\n\u5fae\u8f6f\u5ba3\u5e03\u5bf9\u6700\u65b0\u7684Windows10Insider\u9884\u89c8\u7248\u63d0\u4f9b\u53ef\u9009\u7684DoH\u652f\u6301\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5904\u4e8e\u7981\u7528\u72b6\u6001\u3002\nPython\u5f00\u53d1\u4eba\u5458Christian Heimes\u62a5\u544a\u8bf4\uff0c\u5728\u5404\u79cd\u53d1\u884c\u7248\u672c\u4e2d\uff0cPython\u8f6f\u4ef6\u5305\u6700\u5c0f\u5b89\u88c5\u4e2d\u7684\u8bc1\u4e66\u9a8c\u8bc1\u88ab\u7834\u574f\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b89\u88c5ca-certifits\u8f6f\u4ef6\u5305\u3002\u6709\u5173\u4e8eUbuntu\u3001Debian\u548cOpenWRT\u7684bug\u62a5\u544a\u3002\n\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u5fae\u8f6f\u5ba3\u5e03\u5728Office 365 Exchange Online\u4e2d\u652f\u6301Dane\u548cDNSSEC\u3002\nLadderLeak\u662f\u5229\u7528ECDSA\u7b97\u6cd5\u9488\u5bf9\u692d\u5706\u66f2\u7ebf\u7b7e\u540d\u7684\u4e00\u79cd\u65b0\u7684\u8fb9\u4fe1\u9053\u653b\u51fb\u3002\u7d22\u6258\u514b\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u89e3\u91ca\u4e86\u8fd9\u8d77\u88ad\u51fb\u4e8b\u4ef6\u3002", "note_en": "Bulletproof TLS Newsletter is a free periodic newsletter bringing you commentary and news surrounding SSL/TLS and Internet PKI, designed to keep you informed about the latest developments in this space.\n  In this issue:        A critical vulnerability in the Saltstack configuration management software that was  discovered in March by the F-Secure company was recently used for widespread attacks. Among the affected hosts was  one of the Certificate Transparency logs operated by DigiCert.\n  The attackers had access to the private key of the CT2 log. According to DigiCert, other logs operated by the company were not affected.\n  The Google Chrome browser requires two so-called signed certificate timestamps (SCTs) for every valid TLS certificate. These SCTs have to come from different logs. Therefore, in a case like this in which one log is compromised, there is always a second SCT that is unaffected.\n  Devon O\u2019Brien  explained Google\u2019s response to this incident. Certificates can have SCTs embedded or they can be delivered via TLS extensions or OCSP. For cases in which the SCTs from the compromised CT2 log are embedded, Chrome will continue to accept the certificates with SCTs from this log if they were issued before the incident. However, certificates that deliver their SCTs via TLS extensions or OCSP need to get a new SCT from a different log if they relied on the compromised log.\n      Mozilla published a  Firefox Security Newsletter with some TLS-related info about DNS over HTTPS (DoH), TLS 1.0/1.1 deprecation, and new verified crypto primitives in NSS.\n  KEMTLS is a proposal for a different way to do TLS handshakes in a postquantum scenario with an authenticated key exchange.\n  In a blog post,  OpenSSL explains some changes to its security notification policy, particularly \u201cto include the option of us giving prenotification to companies with which we have a commercial relationship.\u201d\n    Microsoft announced optional  DoH support for the latest Windows 10 Insider Preview Build. It is disabled by default.\n            Python developer Christian Heimes reports that in various distributions, certificate validation in minimal installations of the Python package is broken because the ca-certificates package is not installed. There are bug reports for  Ubuntu,  Debian, and  OpenWRT.\n    In a blog post, Microsoft announces  DANE and DNSSEC support in Office 365 Exchange Online.\n  LadderLeak is a new side-channel attack against elliptic curve signatures with the ECDSA algorithm. Soatok  explains the attack in a blog post.", "posttime": "2020-05-28 22:38:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bc1\u4e66,key", "title": "DigiCert\u8bc1\u4e66\u900f\u660e\u65e5\u5fd7\u7684\u79c1\u94a5\u5df2\u6cc4\u9732", "title_en": "Private key of DigiCert Certificate Transparency log compromised", "transed": 1, "url": "https://www.feistyduck.com/bulletproof-tls-newsletter/issue_65_private_key_of_digicert_certificate_transparency_log_compromised", "via": "", "real_tags": ["\u8bc1\u4e66", "key"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004082, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LWN\u8ba2\u6237\u5df2\u5411\u60a8\u63d0\u4f9b\u4ee5\u4e0b\u4ec5\u9650\u8ba2\u9605\u7684\u5185\u5bb9\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u7528\u6237\u4f9d\u8d56LWN\u83b7\u53d6\u6765\u81eaLinux\u548c\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u7684\u6700\u597d\u6d88\u606f\u3002\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u8bf7\u8003\u8651\u63a5\u53d7\u53f3\u8fb9\u7684\u8bd5\u7528\u62a5\u4ef7\u3002\u611f\u8c22\u60a8\u8bbf\u95eeLWN.net\uff01\n\u514d\u8d39\u8bd5\u7528LWN 1\u4e2a\u6708\uff1a\u65e0\u9700\u4ed8\u6b3e\u6216\u4fe1\u7528\u5361\u3002\u73b0\u5728\u6fc0\u6d3b\u60a8\u7684\u8bd5\u7528\u8ba2\u9605\uff0c\u770b\u770b\u4e3a\u4ec0\u4e48\u6210\u5343\u4e0a\u4e07\u7684\u8bfb\u8005\u8ba2\u9605LWN.net\u3002\nPython\u8bed\u8a00\u5cf0\u4f1a\u662f\u5404\u79cdPython\u5b9e\u73b0\u7684\u5f00\u53d1\u8005\u7684\u5e74\u5ea6\u805a\u4f1a\uff0c\u4e0d\u8fc7\uff0c\u4eca\u5e74\u7684\u805a\u4f1a\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u89c6\u9891\u4f1a\u8bae\u8fdb\u884c\u7684-\u5c31\u50cf\u7531\u4e8e\u6df7\u4e71\u800c\u4e3e\u884c\u7684\u8bb8\u591a\u5176\u4ed6\u4f1a\u8bae\u4e00\u6837\u3002\u4ec5\u9650\u53d7\u9080\u7684\u805a\u4f1a\u901a\u5e38\u6709\u8bb8\u591a\u6709\u8da3\u7684\u4f1a\u8bae\uff0c\u6b63\u5982LWN\u5bf9\u5cf0\u4f1a\u7684\u62a5\u9053\u4e2d\u6240\u770b\u5230\u7684\u90a3\u6837", "note_en": "The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider accepting the trial offer on the right. Thank youfor visiting LWN.net!\n Try LWN for free for 1 month: no payment or credit card required.  Activate your trial subscription now and see why thousands of readers subscribe to LWN.net.\n The Python Language Summit is an annual gathering for the developers ofvarious Python implementations, though, this year, the gathering actuallyhappened via videoconference\u2014as with so many other conferences due to the pandemic.The invite-only gathering typically has numerous interesting sessions, ascan be seen in the LWN  coverage ofthe summit", "posttime": "2020-05-28 22:38:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u8bed\u8a00,lwn", "title": "Python\u8bed\u8a00\u5cf0\u4f1a\u7684\u51e0\u4e2a\u73af\u8282", "title_en": "Some Sessions from the Python Language Summit", "transed": 1, "url": "https://lwn.net/SubscriberLink/821412/9fbb4093d7945bdb/", "via": "", "real_tags": ["python", "\u8bed\u8a00", "lwn"]}, {"category": "", "categoryclass": "", "imagename": "83f83f4025c4689e07f9b1bf62137ad0.jpg", "infoid": 1004081, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AudioMasse\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u3001\u529f\u80fd\u9f50\u5168\u7684\u57fa\u4e8eWeb\u7684\u97f3\u9891\u548c\u6ce2\u5f62\u7f16\u8f91\u5de5\u5177", "note_en": "AudioMass is a free full-featured web-based audio & waveform editing tool", "posttime": "2020-05-28 22:22:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u8d39,\u5f00\u6e90,\u97f3\u9891,free", "title": "\u514d\u8d39\u3001\u5f00\u6e90\u3001\u57fa\u4e8eWeb\u7684\u97f3\u9891\u548c\u6ce2\u5f62\u7f16\u8f91\u5668", "title_en": "AudioMass \u2013 free, open source, web-based Audio and Waveform editor", "transed": 1, "url": "https://audiomass.co/", "via": "", "real_tags": ["\u514d\u8d39", "\u5f00\u6e90", "\u97f3\u9891", "free"]}, {"category": "", "categoryclass": "", "imagename": "28b8c25644756fec59fb2e8c7266d8eb.png", "infoid": 1004078, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u590f\u5a01\u5937\u706b\u5974\u9c81\u9c81(HawaiNewsNow)-\u5728\u5168\u5dde\u8303\u56f4\u5185\u6ca1\u6709\u65b0\u7684\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u4e24\u5929\u540e\uff0c\u4e00\u4e9b\u4eba\u6025\u4e8e\u91cd\u542f\u590f\u5a01\u5937\u7684\u65c5\u6e38\u4e1a\u3002\n\u6000\u57fa\u57fa\u7684\u5c45\u6c11\u62c9\u91cc\u00b7\u4ea8\u5229\u8bf4\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u6240\u6709\u7684\u4e1c\u897f\u90fd\u91cd\u65b0\u6253\u5f00\uff0c\u56e0\u4e3a\u6211\u4eec\u57fa\u672c\u4e0a\u6ca1\u6709\u51a0\u72b6\u75c5\u6bd2\u4e86\u3002\n\u7136\u800c\uff0c\u9152\u5e97\u5458\u5de5\u8868\u793a\uff0c\u5728\u786e\u8ba4\u5de5\u4f5c\u573a\u6240\u5b89\u5168\u4e4b\u524d\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u56de\u53bb\u3002\n\u83ab\u963f\u5a1c\u51b2\u6d6a\u524d\u53f0\u5de5\u4f5c\u4eba\u5458\u80af\u00b7\u897f\u91d1\u65af\u8bf4\uff1a\u201c\u5982\u679c\u96c7\u4e3b\u4eec\u80fd\u548c\u6211\u4eec\u6c9f\u901a\uff0c\u6211\u4f1a\u89c9\u5f97\u51c6\u5907\u5f97\u66f4\u5145\u5206\u3002\u201d\nUnite Here Local 5\u5de5\u4f1a\u8981\u6c42\u4e3a\u5de5\u4eba\u914d\u5907\u4e2a\u4eba\u9632\u62a4\u88c5\u5907\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u57f9\u8bad\uff0c\u4ed6\u4eec\u5e0c\u671b\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u80fd\u62ff\u56de\u5de5\u4f5c\u3002\n\u6ca1\u6709\u4eba\u80fd\u4fdd\u8bc1\u91cd\u65b0\u627e\u5230\u5de5\u4f5c\uff0c\u201c\u897f\u91d1\u65af\u8bf4\u3002\u201c\u5c3d\u7ba1\u6211\u5df2\u7ecf\u5de5\u4f5c\u4e86\u4e03\u5e74\uff0c\u4f46\u6211\u7684\u8d44\u5386\u6709\u70b9\u504f\u4f4e\u3002\u201d\u6240\u4ee5\uff0c\u6211\u6000\u7591\u6211\u662f\u5426\u4f1a\u957f\u671f\u5168\u804c\u5de5\u4f5c\u3002\u201c\u3002\n\u4e3a\u4e86\u53d1\u51fa\u81ea\u5df1\u7684\u58f0\u97f3\uff0c\u5de5\u4f1a\u5c06\u4e8e\u5468\u4e09\u5728\u6000\u57fa\u57fa\u4e3e\u884c\u8f6e\u5f0f\u5927\u7bf7\u8f66\u3002\n\u6709\u4eba\u53ef\u80fd\u4f1a\u751f\u75c5\uff0c\u8fd9\u4f1a\u6253\u51fb\u6211\u4eec\u7684\u884c\u4e1a\u3002\u6240\u4ee5\uff0c\u8fd9\u4e2a\u884c\u4e1a\u7684\u6bcf\u4e2a\u4eba\u90fd\u8981\u91c7\u7528\u9ad8\u6807\u51c6\u3002\u5728\u590f\u5a01\u5937\uff0c\u4f4e\u6807\u51c6\u7684\u5b89\u5168\u5e94\u8be5\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u8fd9\u5c06\u6467\u6bc1\u6211\u4eec\u8fd9\u4e2a\u884c\u4e1a\u7684\u957f\u671f\u751f\u5b58\u80fd\u529b\uff0c\u8be5\u5de5\u4f1a\u7684\u8d22\u653f\u90e8\u957f\u57c3\u91cc\u514b\u00b7\u5409\u5c14(Eric Gill)\u8868\u793a\u3002\n\u5728\u9152\u5e97\u5de5\u4f1a\u63a8\u52a8\u65b0\u7684\u4fdd\u969c\u63aa\u65bd\u7684\u540c\u65f6\uff0c\u526f\u5dde\u957f\u8ba4\u4e3a\u590f\u5a01\u5937\u53ef\u80fd\u4f1a\u57287\u6708\u4efd\u4e4b\u524d\u91cd\u65b0\u542f\u52a8\u6e38\u5ba2\u884c\u4e1a\u3002\n\u4e54\u5e0c\u00b7\u683c\u6797\u8bf4\uff1a\u201c\u901a\u8fc7\u4e8b\u5148\u5bf9\u4eba\u4eec\u8fdb\u884c\u68c0\u6d4b\uff0c\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u6240\u6709\u7167\u987e\u6e38\u5ba2\u7684\u597d\u4eba\u7684\u98ce\u9669\u3002\u201d\n\u683c\u6797\u8868\u793a\uff0c\u8be5\u5dde\u53ef\u80fd\u4f1a\u8981\u6c42\u4efb\u4f55\u4e58\u5ba2\u5728\u62b5\u8fbe\u590f\u5a01\u5937\u4e4b\u524d\u8fdb\u884c\u65b0\u51a0\u80ba\u708e\u9634\u6027\u6d4b\u8bd5\u3002\n\u4ed6\u4eec\u7684COVID\u7387\u6781\u4f4e\uff0c\u201c\u683c\u6797\u8bf4\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6211\u4eec\u66f4\u6709\u53ef\u80fd\u4e0e\u67d0\u4e2a\u56fd\u5bb6\u8fbe\u6210\u5168\u9762\u7684\u8c08\u5224\u534f\u8bae\uff0c\u800c\u4e0d\u662f\u4e0e\u5927\u9646\u2026\u3002\u201c\u65e5\u672c\u5360\u6211\u4eec\u6240\u6709\u6e38\u5ba2\u768420%\uff0c\u4f46\u6211\u4eec\u6240\u6709\u7ecf\u6d4e\u6d3b\u52a8\u768430%\u6765\u81ea\u65c5\u6e38\u4e1a\u3002\u56e0\u6b64\uff0c\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u8d77\u70b9\u3002\u201c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5dde\u653f\u5e9c\u5b98\u5458\u9884\u6d4b\uff0c\u4eca\u5e74\u7ecf\u6d4e\u53ef\u80fd\u840e\u7f29\u8d85\u8fc712%\uff0c\u65c5\u6e38\u4e1a\u5c06\u4e0b\u964d67%\u3002\n\u5dde\u52b3\u5de5\u5c40\u957f\u9884\u8ba1\u5c06\u6709\u4e0d\u5230\u4e00\u534a\u7684\u4eba\u80fd\u591f\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u3002\n\u6751\u4e0a\u8bf4\uff1a\u201c\u6211\u6000\u7591\u8fd9\u4e00\u6570\u5b57\u53ef\u80fd\u9ad8\u8fbe19\u4e07\u3002\u201d\u201c\u6211\u8ba4\u4e3a\uff0c\u5230\u4eca\u5e74\u5e74\u5e95\uff0c\u5982\u679c\u6211\u4eec\u5e78\u8fd0\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u628a\u5728\u9ad8\u5cf0\u65f6\u671f\u5931\u53bb\u7684\u5927\u7ea635%\u7684\u4eba\u5e26\u56de\u6765\u3002\u201d\n\u8be5\u5dde\u8868\u793a\uff0c\u6e38\u5ba2\u6570\u91cf\u53ef\u80fd\u9700\u8981\u4e94\u5e74\u65f6\u95f4\u624d\u80fd\u6062\u590d\u6b63\u5e38\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u77e5\u9053\u6211\u4eec\u7684\u7ecf\u6d4e\u9664\u4e86\u4e25\u91cd\u4f9d\u8d56\u65c5\u6e38\u4e1a\u5916\uff0c\u8fd8\u4e25\u91cd\u4f9d\u8d56\u65c5\u6e38\u4e1a\u3002\u4f46\u5982\u679c\u5b83\u771f\u7684\u91cd\u65b0\u5f00\u653e\uff0c\u6211\u4eec\u5e94\u8be5\u5c0f\u5fc3\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u201c\u6000\u57fa\u57fa\u5c45\u6c11\u5170\u5fb7\u5c14\u00b7\u74e6\u7279(Randall Wat)\u8bf4\u3002\u201c\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u5728\uff0c\u4e00\u5b9a\u8981\u5c0f\u5fc3\u3002\u201d", "note_en": "HONOLULU, Hawaii (HawaiiNewsNow) - After two days with  no new coronavirus cases statewide, some people are anxious to restart Hawaii\u2019s tourism industry.\n  &#34;We should open everything back up because we&#39;re pretty much coronavirus free,&#34; said Waikiki resident Larry Henley.\n  However, hotel employees say they won\u2019t go back until they know their workplaces are safe.\n  &#34;I would feel more ready if the employers would communicate to us,\u201d said Moana Surfrider front desk worker Ken Seekins.\n  The UNITE HERE Local 5 union is demanding personal protective equipment for workers, along with better training, and they want to ensure that everyone gets their jobs back.\n  &#34;Nobody is guaranteed jobs back,\u201d Seekins said. \u201cAnd I&#39;m kind of in the lower end of the seniority even though I&#39;ve been working for seven years. So, I doubt that I will work full time for a long time.\u201d\n  To make their voices heard, the union is staging a caravan on wheels through Waikiki on Wednesday.\n  &#34;Somebody could get sick and it would blow our industry. So, everybody in the industry has to adopt high standards. Low standards for safety should not be acceptable in Hawaii. That will destroy our long-term viability of our industry,&#34; said Eric Gill, the union\u2019s financial secretary treasurer.\n  While the hotel union pushes for new safeguards, the Lieutenant Governor thinks Hawaii could restart its visitor industry by July.\n  \u201cBy having people tested beforehand, it reduces the risk very greatly on all those good people that are going to be taking care of the tourists,\u201d said Josh Green.\n  Green says the state will likely require a negative COVID-19 test from any passenger before arriving in Hawaii.\n    &#34;Where they have extremely low rates of COVID,\u201d Green said. \u201cIt\u2019s more possible for us to have comprehensive negotiated agreements with a country ironically than with the mainland \u2026 \u201cJapan is 20-percent of all our travelers but 30-percent of all our economic activity from tourism. So, in some ways, it\u2019s the perfect place to start.\u201d\n  This comes as state officials predict the economy could shrink more than 12-percent this year, with a 67-percent drop in tourism.\n    The state labor director expects fewer than half will be able to return to work.\n  \u201cMy suspicion is that could be upwards as high as 190,000,\u201d Murakami said. \u201cI think by the end of this year, if we\u2019re lucky, we\u2019ll maybe bring back about 35-percent of the people that we lost at the peak.\u201d\n  The state says it could be five years before visitor numbers get back to normal.\n    \u201cI understand that our economy depends heavily upon tourism, beyond heavily on tourism. But if it does reopen, we should be careful about what happens,\u201d said Waikiki resident Randall Wat. \u201cBe careful knowing that this thing is still around.\u201d", "posttime": "2020-05-28 22:06:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e58\u5ba2,passengers,\u53ef\u80fd", "title": "\u590f\u5a01\u5937\u53ef\u80fd\u8981\u6c42\u4e58\u5ba2\u5728\u62b5\u8fbe\u524d\u8fdb\u884c\u65b0\u51a0\u80ba\u708e\u9634\u6027\u6d4b\u8bd5", "title_en": "Hawaii likely to require negative Covid-19 test from passengers before arriving", "transed": 1, "url": "https://www.hawaiinewsnow.com/2020/05/26/lt-gov-josh-green-hopes-reopen-hawaiis-tourism-industry-by-july/", "via": "", "real_tags": ["\u4e58\u5ba2", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "80cc16c40f58a2fbb24f4ac85fe69d4c.jpg", "infoid": 1004077, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5c14\u897f\u5728\u5468\u4e09\u665a\u4e0a\u7684\u4e00\u7cfb\u5217\u63a8\u6587\u4e2d\u56de\u5e94\u4e86\u624e\u514b\u4f2f\u683c\u7684\u8a00\u8bba\uff0c\u6073\u6c42Twitter\u7684\u6279\u8bc4\u8005\u201c\u4e0d\u8981\u8ba9\u6211\u4eec\u7684\u5458\u5de5\u5377\u5165\u8fd9\u4ef6\u4e8b\u3002\u201d\u4ed6\u8fd8\u8a93\u8a00\uff0c\u8be5\u516c\u53f8\u5c06\u201c\u7ee7\u7eed\u6307\u51fa\u6709\u5173\u5168\u7403\u9009\u4e3e\u7684\u4e0d\u6b63\u786e\u6216\u6709\u4e89\u8bae\u7684\u4fe1\u606f\u201d\uff0c\u5e76\u201c\u627f\u8ba4\u5e76\u627f\u8ba4\u6211\u4eec\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u72af\u4e0b\u7684\u4efb\u4f55\u9519\u8bef\u201d\u3002\n\u201c\u8fd9\u5e76\u4e0d\u80fd\u8ba9\u6211\u4eec\u6210\u4e3a\u2018\u771f\u76f8\u7684\u4ef2\u88c1\u8005\u2019\uff0c\u201d\u591a\u5c14\u897f\u8865\u5145\u9053\u3002\u201c\u6211\u4eec\u7684\u76ee\u7684\u662f\u5c06\u76f8\u4e92\u77db\u76fe\u7684\u9648\u8ff0\u8fde\u63a5\u8d77\u6765\uff0c\u5e76\u5c55\u793a\u6709\u4e89\u8bae\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u53ef\u4ee5\u81ea\u5df1\u5224\u65ad\u3002\u201d\u6211\u4eec\u63d0\u9ad8\u900f\u660e\u5ea6\u81f3\u5173\u91cd\u8981\uff0c\u8fd9\u6837\u4eba\u4eec\u624d\u80fd\u6e05\u695a\u5730\u770b\u5230\u6211\u4eec\u884c\u52a8\u80cc\u540e\u7684\u539f\u56e0\u3002\u201c\u3002\n\u8fd9\u573a\u7845\u8c37\u9ad8\u7ba1\u4e4b\u95f4\u7684\u4e89\u6267\u53d1\u751f\u4e4b\u9645\uff0c\u7f8e\u56fd\u603b\u7edf\u6b63\u7ee7\u7eed\u53d1\u6cc4\u5bf9Twitter\u9996\u6b21\u5728\u4ed6\u559c\u6b22\u7684\u793e\u4ea4\u5a92\u4f53\u4e0a\u8fdb\u884c\u5e72\u9884\u7684\u6301\u7eed\u6124\u6012\uff0c\u58f0\u79f0\u8be5\u516c\u53f8\u53c2\u4e0e\u4e86\u5e72\u9884\u9009\u4e3e\u548c\u627c\u6740\u8a00\u8bba\u81ea\u7531\u3002\n\u5468\u4e09\u4e0a\u5348\uff0c\u7279\u6717\u666e\u5a01\u80c1\u8981\u201c\u4e25\u683c\u76d1\u7ba1\u201d\u6216\u5b8c\u5168\u5173\u95ed\u77e5\u540d\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\uff0c\u56e0\u4e3a\u5171\u548c\u515a\u58f0\u79f0\u8fd9\u4e9b\u5e73\u53f0\u201c\u5b8c\u5168\u538b\u5236\u4e86\u4fdd\u5b88\u6d3e\u7684\u58f0\u97f3\u201d\u3002\u516c\u5171\u5229\u76ca\u56e2\u4f53\u548c\u516c\u6c11\u81ea\u7531\u5021\u5bfc\u8005\u8bf4\uff0c\u6ca1\u6709\u660e\u786e\u7684\u8bc1\u636e\u652f\u6301\u8fd9\u4e00\u65ad\u8a00\u3002\n\u767d\u5bab\u65b0\u95fb\u79d8\u4e66\u51ef\u5229\u00b7\u9ea6\u514b\u7eb3\u5c3c(Kayleigh McEnany)\u5f53\u5929\u665a\u4e9b\u65f6\u5019\u8fd8\u544a\u8bc9\u8bb0\u8005\uff0c\u9884\u8ba1\u603b\u7edf\u5c06\u4e8e\u5468\u56db\u7b7e\u7f72\u4e00\u9879\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u7684\u884c\u653f\u547d\u4ee4\uff0c\u8fd9\u52a0\u5267\u4e86\u4eba\u4eec\u5bf9\u653f\u5e9c\u5c06\u4ee51996\u5e74\u4e00\u9879\u4fdd\u62a4\u8fd9\u4e9b\u516c\u53f8\u514d\u53d7\u8bc9\u8bbc\u7684\u6cd5\u89c4\u4e3a\u76ee\u6807\u7684\u731c\u6d4b\u3002\n\u7279\u6717\u666e\u5bf9\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u6124\u6012\u4e0e\u4ed6\u572811\u6708\u5927\u9009\u524d\u53cd\u5bf9\u90ae\u5bc4\u6295\u7968\u7684\u7c7b\u4f3c\u8fd0\u52a8\u4e0d\u8c0b\u800c\u5408\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6b63\u662f\u4ed6\u5468\u4e8c\u5728\u7f51\u4e0a\u9519\u8bef\u5730\u58f0\u79f0\u7f3a\u5e2d\u9009\u7968\u5f88\u53ef\u80fd\u662f\u201c\u4e25\u91cd\u6b3a\u8bc8\u7684\u201d\uff0c\u8fd9\u6700\u521d\u4fc3\u4f7fTwitter\u5bf9\u4ed6\u7684\u5e16\u5b50\u8fdb\u884c\u4e86\u6ce8\u91ca\u3002\n\u5c3d\u7ba1\u9009\u4e3e\u4e13\u5bb6\u627f\u8ba4\uff0c\u901a\u8fc7\u90ae\u5bc4\u6295\u7968\u5b9e\u65bd\u7684\u9009\u6c11\u6b3a\u8bc8\u884c\u4e3a\u7565\u9ad8\u4e8e\u9762\u5bf9\u9762\u6295\u7968\uff0c\u4f46\u4ed6\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u9009\u4e3e\u821e\u5f0a\u6848\u4ef6\u6781\u5176\u7f55\u89c1\uff0c\u5730\u65b9\u5b98\u5458\u53ef\u4ee5\u91c7\u53d6\u63aa\u65bd\u963b\u6b62\u6b64\u7c7b\u6d3b\u52a8\u3002\n\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u90ae\u5bc4\u6295\u7968\u5bf9\u4e00\u65b9\u6ca1\u6709\u597d\u5904\u3002\u6700\u8fd1\u6700\u7a81\u51fa\u7684\u90ae\u5bc4\u9009\u6c11\u6b3a\u8bc8\u4e8b\u4ef6\u53d1\u751f\u57282019\u5e74\uff0c\u5f53\u65f6\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u4f17\u8bae\u9662\u5e2d\u4f4d\u7684\u9009\u4e3e\u5728\u4e00\u540d\u5171\u548c\u515a\u7279\u5de5\u975e\u6cd5\u6536\u96c6\u9009\u7968\u540e\u88ab\u5426\u51b3\u3002", "note_en": "Dorsey  responded to Zuckerberg\u2019s remarks in a string of tweets Wednesday evening, imploring Twitter\u2019s critics to \u201cleave our employees out of this.\u201d He also vowed the company would \u201ccontinue to point out incorrect or disputed information about elections globally\u201d and \u201cadmit to and own any mistakes we make\u201d in the process.\n \u201cThis does not make us an \u2018arbiter of truth,\u2019\u201d Dorsey  added. \u201cOur intention is to connect the dots of conflicting statements and show the information in dispute so people can judge for themselves. More transparency from us is critical so folks can clearly see the why behind our actions.\u201d\n The back-and-forth between the top Silicon Valley executives comes as the president continues to vent sustained outrage over Twitter\u2019s first-of-its-kind intervention on his preferred social media feed,  alleging the company is engaged in election interference and stifling free speech.\n On Wednesday morning, Trump  threatened to \u201cstrongly regulate\u201d or altogether shutter prominent social media platforms over Republican claims that they \u201ctotally silence conservatives voices.\u201d Public-interest groups and civil liberties advocates say there is no clear evidence to support that assertion.\n White House press secretary Kayleigh McEnany also  told reporters later in the day the president was expected to sign an executive order Thursday aimed at social media platforms, contributing to speculation the administration would target a 1996 statute protecting the companies from lawsuits.\n Trump\u2019s fury toward social media companies coincides with his similar campaign against mail-in voting ahead of November\u2019s general election. Indeed, it was his  false claim online Tuesday that absentee ballots are likely to be \u201csubstantially fraudulent\u201d which initially prompted Twitter\u2019s annotation of his posts.\n Although election experts  acknowledge there are slightly higher levels of voter fraud perpetrated through mail-in voting than in-person voting, they agree overall cases of election fraud are exceedingly rare and that local officials can implement measures to thwart such activity.\n A recent study found that, on the whole, voting by mail  does not benefit one party over another. The most prominent, recent example of mail-in voter fraud came in 2019, when an election for a North Carolina House seat was  tossed out after a Republican operative illegally collected ballots.", "posttime": "2020-05-28 22:05:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u7279,\u63a8\u6587,dorsey", "title": "\u624e\u514b\u4f2f\u683c\u548c\u591a\u5c14\u897f\u5c31\u63a8\u7279\u5bf9\u7279\u6717\u666e\u63a8\u6587\u7684\u538b\u5236\u4e89\u6267\u4e0d\u4e0b", "title_en": "Zuckerberg, Dorsey spar over Twitter\u2019s flagging of Trump\u2019s tweets", "transed": 1, "url": "https://www.politico.com/news/2020/05/28/zuckerberg-dorsey-spar-over-twitters-flagging-of-trumps-tweets-286881", "via": "", "real_tags": ["\u63a8\u7279", "\u63a8\u6587", "dorsey"]}, {"category": "", "categoryclass": "", "imagename": "1028a62b932bf75aada86ffc2536fe21.jpeg", "infoid": 1004076, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0cVue\u56e2\u961f\u4e00\u76f4\u5728\u7814\u7a76Vue.js\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u6211\u4eec\u5e0c\u671b\u57282020\u5e74\u4e0a\u534a\u5e74\u53d1\u5e03\u3002(\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u8fd9\u9879\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d\u3002)\u3002Vue\u65b0\u4e3b\u7248\u7684\u60f3\u6cd5\u662f\u57282018\u5e74\u672b\u5f62\u6210\u7684\uff0c\u5f53\u65f6Vue 2\u7684\u4ee3\u7801\u5e93\u5927\u7ea6\u6709\u4e24\u5e74\u534a\u7684\u5386\u53f2\u3002\u5728\u901a\u7528\u8f6f\u4ef6\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u8fd9\u542c\u8d77\u6765\u4e0d\u662f\u5f88\u957f\u7684\u65f6\u95f4\uff0c\u4f46\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u524d\u7aef\u7684\u683c\u5c40\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\u3002\n\u4e24\u4e2a\u5173\u952e\u7684\u8003\u8651\u56e0\u7d20\u5bfc\u81f4\u4e86Vue\u7684\u65b0\u7684\u4e3b\u8981\u7248\u672c(\u548c\u91cd\u5199)\uff1a\u7b2c\u4e00\uff0c\u65b0\u7684JavaScript\u8bed\u8a00\u7279\u6027\u5728\u4e3b\u6d41\u6d4f\u89c8\u5668\u4e2d\u7684\u666e\u904d\u53ef\u7528\u6027\u3002\u7b2c\u4e8c\uff0c\u5f53\u524d\u4ee3\u7801\u5e93\u4e2d\u7684\u8bbe\u8ba1\u548c\u67b6\u6784\u95ee\u9898\u5df2\u7ecf\u66b4\u9732\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002\n\u968f\u7740ES2015\u7684\u6807\u51c6\u5316\uff0cJavaScript(\u6b63\u5f0f\u540d\u79f0\u4e3aECMAScript\uff0c\u7f29\u5199\u4e3aES)\u5f97\u5230\u4e86\u91cd\u5927\u6539\u8fdb\uff0c\u4e3b\u6d41\u6d4f\u89c8\u5668\u7ec8\u4e8e\u5f00\u59cb\u4e3a\u8fd9\u4e9b\u65b0\u529f\u80fd\u63d0\u4f9b\u50cf\u6837\u7684\u652f\u6301\u3002\u7279\u522b\u662f\u4e00\u4e9b\u4eba\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6781\u5927\u5730\u63d0\u9ad8Vue\u7684\u5f00\u53d1\u80fd\u529b\u7684\u673a\u4f1a\u3002\n\u5176\u4e2d\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662fProxy\uff0c\u5b83\u5141\u8bb8\u6846\u67b6\u62e6\u622a\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002Vue\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u6027\u662f\u80fd\u591f\u76d1\u542c\u5bf9\u7528\u6237\u5b9a\u4e49\u7684\u72b6\u6001\u6240\u505a\u7684\u66f4\u6539\uff0c\u5e76\u53cd\u5e94\u6027\u5730\u66f4\u65b0DOM\u3002VUE 2\u901a\u8fc7\u7528getter\u548csetter\u66ff\u6362state\u5bf9\u8c61\u4e0a\u7684\u5c5e\u6027\u6765\u5b9e\u73b0\u6b64\u53cd\u5e94\u6027\u3002\u5207\u6362\u5230Proxy\u5c06\u5141\u8bb8\u6211\u4eec\u6d88\u9664Vue\u7684\u73b0\u6709\u9650\u5236\uff0c\u4f8b\u5982\u65e0\u6cd5\u68c0\u6d4b\u65b0\u7684\u5c5e\u6027\u6dfb\u52a0\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\u3002\n\u4f46\u662f\uff0c\u4ee3\u7406\u662f\u4e00\u79cd\u672c\u673a\u8bed\u8a00\u529f\u80fd\uff0c\u4e0d\u80fd\u5728\u4f20\u7edf\u6d4f\u89c8\u5668\u4e2d\u5b8c\u5168\u591a\u586b\u5145\u3002\u4e3a\u4e86\u5229\u7528\u5b83\uff0c\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u8c03\u6574\u6846\u67b6\u7684\u6d4f\u89c8\u5668\u652f\u6301\u8303\u56f4-\u8fd9\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u7a81\u7834\u6027\u53d8\u5316\uff0c\u53ea\u80fd\u5728\u65b0\u7684\u4e3b\u8981\u7248\u672c\u4e2d\u63d0\u4f9b\u3002\n\u5728\u7ef4\u62a4Vue 2\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u79ef\u7d2f\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u7531\u4e8e\u73b0\u6709\u67b6\u6784\u7684\u9650\u5236\u800c\u96be\u4ee5\u89e3\u51b3\u3002\u4f8b\u5982\uff0c\u6a21\u677f\u7f16\u8bd1\u5668\u7684\u7f16\u5199\u65b9\u5f0f\u4f7f\u5f97\u6b63\u786e\u7684\u6e90\u4ee3\u7801\u6620\u5c04\u652f\u6301\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\u3002\u6b64\u5916\uff0c\u867d\u7136Vue 2\u5728\u6280\u672f\u4e0a\u652f\u6301\u6784\u5efa\u9762\u5411\u975eDOM\u5e73\u53f0\u7684\u9ad8\u7ea7\u6e32\u67d3\u5668\uff0c\u4f46\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u6d3e\u751f\u4ee3\u7801\u5e93\u5e76\u590d\u5236\u5927\u91cf\u4ee3\u7801\u3002\u5728\u5f53\u524d\u7684\u4ee3\u7801\u5e93\u4e2d\u4fee\u590d\u8fd9\u4e9b\u95ee\u9898\u5c06\u9700\u8981\u5de8\u5927\u7684\u3001\u9ad8\u98ce\u9669\u7684\u91cd\u65b0\u8003\u8651\uff0c\u8fd9\u51e0\u4e4e\u7b49\u540c\u4e8e\u91cd\u65b0\u7f16\u5199\u4ee3\u7801\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u79ef\u7d2f\u4e86\u5404\u79cd\u6a21\u5757\u5185\u90e8\u4e0e\u4f3c\u4e4e\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5730\u65b9\u7684\u6d6e\u52a8\u4ee3\u7801\u4e4b\u95f4\u7684\u9690\u5f0f\u8026\u5408\u5f62\u5f0f\u7684\u6280\u672f\u503a\u52a1\u3002\u8fd9\u4f7f\u5f97\u5b64\u7acb\u5730\u7406\u89e3\u4ee3\u7801\u5e93\u7684\u4e00\u90e8\u5206\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8d21\u732e\u8005\u5f88\u5c11\u6709\u4fe1\u5fc3\u505a\u51fa\u91cd\u8981\u7684\u66f4\u6539\u3002\u91cd\u5199\u5c06\u4f7f\u6211\u4eec\u6709\u673a\u4f1a\u91cd\u65b0\u601d\u8003\u4ee3\u7801\u7ec4\u7ec7\uff0c\u540c\u65f6\u8003\u8651\u5230\u8fd9\u4e9b\u4e8b\u60c5\u3002\n\u6211\u4eec\u57282018\u5e74\u672b\u5f00\u59cb\u5236\u4f5cVue 3\u7684\u539f\u578b\uff0c\u521d\u6b65\u76ee\u6807\u662f\u9a8c\u8bc1\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8fd9\u4e00\u9636\u6bb5\uff0c\u6211\u4eec\u4e3b\u8981\u96c6\u4e2d\u5728\u4e3a\u8fdb\u4e00\u6b65\u7684\u53d1\u5c55\u5960\u5b9a\u575a\u5b9e\u7684\u57fa\u7840\u3002\nVUE 2\u6700\u521d\u662f\u7528\u7b80\u660e\u7684ES\u5199\u6210\u7684\u3002\u5728\u539f\u578b\u9636\u6bb5\u4e4b\u540e\u4e0d\u4e45\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u4e00\u4e2a\u7c7b\u578b\u7cfb\u7edf\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u89c4\u6a21\u5982\u6b64\u5e9e\u5927\u7684\u9879\u76ee\u5c06\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u7c7b\u578b\u68c0\u67e5\u6781\u5927\u5730\u51cf\u5c11\u4e86\u5728\u91cd\u6784\u8fc7\u7a0b\u4e2d\u5f15\u5165\u610f\u5916\u9519\u8bef\u7684\u673a\u4f1a\uff0c\u5e76\u5e2e\u52a9\u8d21\u732e\u8005\u66f4\u6709\u4fe1\u5fc3\u8fdb\u884c\u91cd\u5927\u66f4\u6539\u3002\u6211\u4eec\u91c7\u7528\u4e86Facebook\u7684\u6d41\u7c7b\u578b\u68c0\u67e5\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u9010\u6e10\u6dfb\u52a0\u5230\u73b0\u6709\u7684Plain-ES\u9879\u76ee\u4e2d\u3002\u6d41\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8d77\u5230\u4e86\u5e2e\u52a9\u4f5c\u7528\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u4ece\u4e2d\u53d7\u76ca\uff1b\u5c24\u5176\u662f\uff0c\u4e0d\u65ad\u7684\u7a81\u7834\u6027\u53d8\u5316\u4f7f\u5347\u7ea7\u6210\u4e3a\u4e00\u4ef6\u75db\u82e6\u7684\u4e8b\u60c5\u3002\u4e0eTypeScript\u4e0eVisual Studio\u4ee3\u7801\u7684\u6df1\u5ea6\u96c6\u6210\u76f8\u6bd4\uff0c\u5bf9\u96c6\u6210\u5f00\u53d1\u73af\u5883\u7684\u652f\u6301\u4e5f\u4e0d\u7406\u60f3\u3002\n\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u7528\u6237\u8d8a\u6765\u8d8a\u591a\u5730\u540c\u65f6\u4f7f\u7528Vue\u548cTypeScript\u3002\u4e3a\u4e86\u652f\u6301\u4ed6\u4eec\u7684\u7528\u4f8b\uff0c\u6211\u4eec\u5fc5\u987b\u4e0e\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7cfb\u7edf\u7684\u6e90\u4ee3\u7801\u5206\u5f00\u521b\u4f5c\u548c\u7ef4\u62a4\u7c7b\u578b\u811a\u672c\u58f0\u660e\u3002\u5207\u6362\u5230TypeScript\u5c06\u5141\u8bb8\u6211\u4eec\u81ea\u52a8\u751f\u6210\u7533\u62a5\u6587\u4ef6\uff0c\u4ece\u800c\u51cf\u8f7b\u7ef4\u62a4\u8d1f\u62c5\u3002\n\u6211\u4eec\u8fd8\u91c7\u7528\u4e86Monorepo\u8bbe\u7f6e\uff0c\u5176\u4e2d\u6846\u67b6\u7531\u5185\u90e8\u5305\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5305\u90fd\u6709\u5404\u81ea\u7684API\u3001\u7c7b\u578b\u5b9a\u4e49\u548c\u6d4b\u8bd5\u3002\u6211\u4eec\u5e0c\u671b\u4f7f\u8fd9\u4e9b\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u66f4\u52a0\u660e\u786e\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u66f4\u5bb9\u6613\u9605\u8bfb\u3001\u7406\u89e3\u548c\u66f4\u6539\u6240\u6709\u6a21\u5757\u3002\u8fd9\u662f\u6211\u4eec\u52aa\u529b\u964d\u4f4e\u9879\u76ee\u7684\u8d21\u732e\u95e8\u69db\u5e76\u63d0\u9ad8\u5176\u957f\u671f\u53ef\u7ef4\u62a4\u6027\u7684\u5173\u952e\u3002\n\u52302018\u5e74\u5e95\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u4f7f\u7528\u65b0\u53cd\u5e94\u7cfb\u7edf\u548c\u865a\u62dfDOM\u6e32\u67d3\u5668\u7684\u5de5\u4f5c\u539f\u578b\u3002\u6211\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\u6211\u4eec\u60f3\u8981\u8fdb\u884c\u7684\u5185\u90e8\u67b6\u6784\u6539\u8fdb\uff0c\u4f46\u53ea\u6709\u9762\u5411\u516c\u4f17\u7684API\u66f4\u6539\u7684\u7c97\u7565\u8349\u7a3f\u3002\u73b0\u5728\u662f\u65f6\u5019\u628a\u5b83\u4eec\u53d8\u6210\u5177\u4f53\u7684\u8bbe\u8ba1\u4e86\u3002\n\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u53ca\u65e9\u4ed4\u7ec6\u5730\u505a\u8fd9\u4ef6\u4e8b\u3002VUE\u7684\u5e7f\u6cdb\u4f7f\u7528\u610f\u5473\u7740\u7834\u574f\u66f4\u6539\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237\u7684\u5927\u91cf\u8fc1\u79fb\u6210\u672c\u548c\u6f5c\u5728\u7684\u751f\u6001\u7cfb\u7edf\u788e\u7247\u5316\u3002\u4e3a\u4e86\u786e\u4fdd\u7528\u6237\u80fd\u591f\u5c31\u7a81\u53d1\u66f4\u6539\u63d0\u4f9b\u53cd\u9988\uff0c\u6211\u4eec\u57282019\u5e74\u521d\u91c7\u7528\u4e86RFC(\u8bf7\u6c42\u8bc4\u8bba)\u6d41\u7a0b\u3002\u6bcf\u4e2aRFC\u90fd\u9075\u5faa\u4e00\u4e2a\u6a21\u677f\uff0c\u5404\u90e8\u5206\u91cd\u70b9\u4ecb\u7ecd\u52a8\u673a\u3001\u8bbe\u8ba1\u7ec6\u8282\u3001\u6743\u8861\u548c\u91c7\u7528\u7b56\u7565\u3002\u7531\u4e8e\u8be5\u8fc7\u7a0b\u662f\u5728GitHub\u56de\u8d2d\u4e2d\u8fdb\u884c\u7684\uff0c\u5efa\u8bae\u4ee5\u62c9\u53d6\u8bf7\u6c42\u7684\u5f62\u5f0f\u63d0\u4ea4\uff0c\u56e0\u6b64\u5728\u8bc4\u8bba\u4e2d\u6709\u673a\u5730\u5c55\u5f00\u4e86\u8ba8\u8bba\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0cRFC\u8fc7\u7a0b\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u601d\u7ef4\u6846\u67b6\uff0c\u8feb\u4f7f\u6211\u4eec\u5145\u5206\u8003\u8651\u6f5c\u5728\u53d8\u5316\u7684\u6240\u6709\u65b9\u9762\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u7684\u793e\u533a\u53c2\u4e0e\u8bbe\u8ba1\u8fc7\u7a0b\u5e76\u63d0\u4ea4\u6df1\u601d\u719f\u8651\u7684\u529f\u80fd\u9700\u6c42\u3002\n\u6027\u80fd\u5bf9\u524d\u7aef\u6846\u67b6\u81f3\u5173\u91cd\u8981\u3002\u5c3d\u7ba1Vue 2\u53f7\u79f0\u5177\u6709\u7ade\u4e89\u529b\u7684\u6027\u80fd\uff0c\u4f46\u91cd\u5199\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u8fc7\u8bd5\u9a8c\u65b0\u7684\u6e32\u67d3\u7b56\u7565\u6765\u8d70\u5f97\u66f4\u8fdc\u7684\u673a\u4f1a\u3002\nVUE\u6709\u4e00\u4e2a\u76f8\u5f53\u72ec\u7279\u7684\u5448\u73b0\u7b56\u7565\uff1a\u5b83\u63d0\u4f9b\u7c7b\u4f3cHTML\u7684\u6a21\u677f\u8bed\u6cd5\uff0c\u4f46\u662f\u5c06\u6a21\u677f\u7f16\u8bd1\u6210\u8fd4\u56de\u865a\u62dfDOM\u6811\u7684\u5448\u73b0\u51fd\u6570\u3002\u8be5\u6846\u67b6\u901a\u8fc7\u9012\u5f52\u904d\u5386\u4e24\u4e2a\u865a\u62dfDOM\u6811\u5e76\u6bd4\u8f83\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u5c5e\u6027\u6765\u786e\u5b9a\u8981\u66f4\u65b0\u5b9e\u9645DOM\u7684\u54ea\u4e9b\u90e8\u5206\u3002\u591a\u4e8f\u4e86\u73b0\u4ee3JavaScript\u5f15\u64ce\u6267\u884c\u7684\u9ad8\u7ea7\u4f18\u5316\uff0c\u8fd9\u79cd\u6709\u70b9\u86ee\u529b\u7684\u7b97\u6cd5\u901a\u5e38\u76f8\u5f53\u5feb\uff0c\u4f46\u662f\u66f4\u65b0\u4ecd\u7136\u6d89\u53ca\u5927\u91cf\u4e0d\u5fc5\u8981\u7684CPU\u5de5\u4f5c\u3002\u5f53\u60a8\u67e5\u770b\u4e00\u4e2a\u4e3b\u8981\u5305\u542b\u9759\u6001\u5185\u5bb9\u800c\u53ea\u6709\u51e0\u4e2a\u52a8\u6001\u7ed1\u5b9a\u7684\u6a21\u677f\u65f6\uff0c\u6548\u7387\u4f4e\u4e0b\u5c24\u4e3a\u660e\u663e-\u6574\u4e2a\u865a\u62dfDOM\u6811\u4ecd\u7136\u9700\u8981\u9012\u5f52\u904d\u5386\u624d\u80fd\u627e\u51fa\u66f4\u6539\u4e86\u4ec0\u4e48\n\u5e78\u8fd0\u7684\u662f\uff0c\u6a21\u677f\u7f16\u8bd1\u6b65\u9aa4\u4f7f\u6211\u4eec\u6709\u673a\u4f1a\u6267\u884c\u6a21\u677f\u7684\u9759\u6001\u5206\u6790\uff0c\u5e76\u63d0\u53d6\u6709\u5173\u52a8\u6001\u90e8\u4ef6\u7684\u4fe1\u606f\u3002VUE 2\u901a\u8fc7\u8df3\u8fc7\u9759\u6001\u5b50\u6811\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u7531\u4e8e\u8fc7\u4e8e\u7b80\u5355\u7684\u7f16\u8bd1\u5668\u67b6\u6784\uff0c\u66f4\u9ad8\u7ea7\u7684\u4f18\u5316\u5f88\u96be\u5b9e\u73b0\u3002\u5728Vue 3\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9002\u5f53\u7684AST\u8f6c\u6362\u6d41\u6c34\u7ebf\u91cd\u5199\u4e86\u7f16\u8bd1\u5668\uff0c\u8fd9\u5141\u8bb8\u6211\u4eec\u4ee5\u8f6c\u6362\u63d2\u4ef6\u7684\u5f62\u5f0f\u7f16\u5199\u7f16\u8bd1\u65f6\u4f18\u5316\u3002\n\u6709\u4e86\u65b0\u7684\u67b6\u6784\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u79cd\u53ef\u4ee5\u5c3d\u53ef\u80fd\u591a\u5730\u6d88\u9664\u5f00\u9500\u7684\u5448\u73b0\u7b56\u7565\u3002\u4e00\u79cd\u9009\u62e9\u662f\u653e\u5f03\u865a\u62dfDOM\uff0c\u76f4\u63a5\u751f\u6210\u547d\u4ee4\u5f0fDOM\u64cd\u4f5c\uff0c\u4f46\u8fd9\u5c06\u6d88\u9664\u76f4\u63a5\u521b\u4f5c\u865a\u62dfDOM\u5448\u73b0\u51fd\u6570\u7684\u80fd\u529b\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u5bf9\u9ad8\u7ea7\u7528\u6237\u548c\u5e93\u4f5c\u8005\u975e\u5e38\u6709\u4ef7\u503c\u3002\u6b64\u5916\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u7a81\u7834\u6027\u53d8\u5316\u3002\n\u5176\u6b21\u662f\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u865a\u62dfDOM\u6811\u904d\u5386\u548c\u5c5e\u6027\u6bd4\u8f83\uff0c\u8fd9\u5f80\u5f80\u4f1a\u5728\u66f4\u65b0\u671f\u95f4\u4ea7\u751f\u6700\u5927\u7684\u6027\u80fd\u5f00\u9500\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u5e93\u9700\u8981\u534f\u540c\u5de5\u4f5c\uff1a\u7f16\u8bd1\u5668\u5206\u6790\u6a21\u677f\u5e76\u751f\u6210\u5e26\u6709\u4f18\u5316\u63d0\u793a\u7684\u4ee3\u7801\uff0c\u800c\u8fd0\u884c\u5e93\u63d0\u53d6\u63d0\u793a\u5e76\u5c3d\u53ef\u80fd\u91c7\u7528\u5feb\u901f\u8def\u5f84\u3002\u8fd9\u91cc\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u4f18\u5316\u63aa\u65bd\uff1a\n\u9996\u5148\uff0c\u5728\u6811\u7ea7\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5728\u6ca1\u6709\u52a8\u6001\u6539\u53d8\u8282\u70b9\u7ed3\u6784\u7684\u6a21\u677f\u6307\u4ee4(\u4f8b\u5982\uff0cv-if\u548cv-for)\u7684\u60c5\u51b5\u4e0b\uff0c\u8282\u70b9\u7ed3\u6784\u4fdd\u6301\u5b8c\u5168\u9759\u6001\u3002\u5982\u679c\u6211\u4eec\u5c06\u6a21\u677f\u5212\u5206\u4e3a\u5d4c\u5957\u7684\u5757\u201c\uff0c\u5219\u6bcf\u4e2a\u5757\u4e2d\u7684\u8282\u70b9\u7ed3\u6784\u5c06\u518d\u6b21\u53d8\u4e3a\u5b8c\u5168\u9759\u6001\u3002\u5f53\u6211\u4eec\u66f4\u65b0\u5757\u4e2d\u7684\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u9012\u5f52\u5730\u904d\u5386\u6811-\u53ef\u4ee5\u5728\u5e73\u9762\u6570\u7ec4\u4e2d\u8ddf\u8e2a\u5757\u5185\u7684\u52a8\u6001\u7ed1\u5b9a\u3002\u8fd9\u79cd\u4f18\u5316\u5c06\u6211\u4eec\u9700\u8981\u6267\u884c\u7684\u6811\u904d\u5386\u91cf\u51cf\u5c11\u4e86\u4e00\u4e2a\u6570\u91cf\u7ea7\uff0c\u4ece\u800c\u89c4\u907f\u4e86\u5927\u91cf\u865a\u62dfDOM\u7684\u5f00\u9500\u3002\u201c\\\u3002\n\u5176\u6b21\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3b\u52a8\u68c0\u6d4b\u6a21\u677f\u4e2d\u7684\u9759\u6001\u8282\u70b9\u3001\u5b50\u6811\u751a\u81f3\u6570\u636e\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u4eec\u6302\u8d77\u5230\u751f\u6210\u7684\u4ee3\u7801\u4e2d\u7684\u5448\u73b0\u51fd\u6570\u4e4b\u5916\u3002\u8fd9\u907f\u514d\u4e86\u5728\u6bcf\u6b21\u6e32\u67d3\u65f6\u91cd\u65b0\u521b\u5efa\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u4e86\u5185\u5b58\u4f7f\u7528\u7387\u5e76\u964d\u4f4e\u4e86\u5783\u573e\u56de\u6536\u7684\u9891\u7387\u3002\u201c\\\u3002\n\u7b2c\u4e09\uff0c\u5728\u5143\u7d20\u7ea7\u522b\uff0c\u7f16\u8bd1\u5668\u8fd8\u6839\u636e\u9700\u8981\u6267\u884c\u7684\u66f4\u65b0\u7c7b\u578b\uff0c\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\u4e3a\u6bcf\u4e2a\u5143\u7d20\u751f\u6210\u4f18\u5316\u6807\u5fd7\u3002\u4f8b\u5982\uff0c\u5177\u6709\u52a8\u6001\u7c7b\u7ed1\u5b9a\u548c\u591a\u4e2a\u9759\u6001\u5c5e\u6027\u7684\u5143\u7d20\u5c06\u6536\u5230\u4e00\u4e2a\u6807\u5fd7\uff0c\u8be5\u6807\u5fd7\u6307\u793a\u53ea\u9700\u8981\u8fdb\u884c\u7c7b\u68c0\u67e5\u3002\u8fd0\u884c\u5e93\u5c06\u62fe\u53d6\u8fd9\u4e9b\u63d0\u793a\uff0c\u5e76\u91c7\u7528\u4e13\u7528\u7684\u5feb\u901f\u8def\u5f84\u3002\n\u7efc\u5408\u8d77\u6765\uff0c\u8fd9\u4e9b\u6280\u672f\u663e\u8457\u63d0\u9ad8\u4e86\u6211\u4eec\u7684\u6e32\u67d3\u66f4\u65b0\u57fa\u51c6\uff0c\u6709\u65f6Vue 3\u5360\u7528\u7684CPU\u65f6\u95f4\u8fd8\u4e0d\u5230Vue 2\u7684\u5341\u5206\u4e4b\u4e00\u3002\n\u6846\u67b6\u7684\u5927\u5c0f\u4e5f\u4f1a\u5f71\u54cd\u5176\u6027\u80fd\u3002\u8fd9\u662fWeb\u5e94\u7528\u7a0b\u5e8f\u552f\u4e00\u9700\u8981\u5173\u6ce8\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u9700\u8981\u52a8\u6001\u4e0b\u8f7d\u8d44\u4ea7\uff0c\u5e76\u4e14\u5728\u6d4f\u89c8\u5668\u89e3\u6790\u4e86\u5fc5\u8981\u7684JavaScript\u4e4b\u524d\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u4ea4\u4e92\u3002\u5bf9\u4e8e\u5355\u9875\u5e94\u7528\u7a0b\u5e8f\u5c24\u5176\u5982\u6b64\u3002\u867d\u7136Vue\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u76f8\u5bf9\u8f7b\u91cf\u7ea7\u7684--Vue 2\u7684\u8fd0\u884c\u65f6\u5927\u5c0f\u7ea6\u4e3a23KB gzip--\u4f46\u6211\u4eec\u6ce8\u610f\u5230\u4e86\u4e24\u4e2a\u5173\u952e\u95ee\u9898\uff1a\n\u9996\u5148\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u4f7f\u7528\u8be5\u6846\u67b6\u7684\u6240\u6709\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u4ece\u672a\u4f7f\u7528\u8fc7\u6e21\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u4ecd\u9700\u652f\u4ed8\u4e0e\u8fc7\u6e21\u76f8\u5173\u7684\u4ee3\u7801\u7684\u4e0b\u8f7d\u548c\u89e3\u6790\u8d39\u7528\u3002\n\u5176\u6b21\uff0c\u968f\u7740\u6211\u4eec\u6dfb\u52a0\u65b0\u529f\u80fd\uff0c\u6846\u67b6\u4f1a\u65e0\u9650\u589e\u957f\u3002\u5f53\u6211\u4eec\u8003\u8651\u6dfb\u52a0\u65b0\u7279\u6027\u7684\u6743\u8861\u65f6\uff0c\u8fd9\u7ed9\u51fa\u4e86\u675f\u5927\u5c0f\u4e0d\u6210\u6bd4\u4f8b\u7684\u6743\u91cd\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u53ea\u5305\u62ec\u6211\u4eec\u7684\u5927\u591a\u6570\u7528\u6237\u5c06\u4f7f\u7528\u7684\u529f\u80fd\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e94\u8be5\u80fd\u591f\u5728\u6784\u5efa\u65f6\u5220\u9664\u672a\u4f7f\u7528\u7684\u6846\u67b6\u529f\u80fd\u7684\u4ee3\u7801-\u4e5f\u79f0\u4e3a\u201c\u6811\u6447\u52a8\u201d-\u5e76\u4e14\u53ea\u4e3a\u4ed6\u4eec\u4f7f\u7528\u7684\u5185\u5bb9\u4ed8\u8d39\u3002\u8fd9\u8fd8\u5c06\u5141\u8bb8\u6211\u4eec\u4ea4\u4ed8\u6211\u4eec\u7684\u90e8\u5206\u7528\u6237\u4f1a\u53d1\u73b0\u6709\u7528\u7684\u529f\u80fd\uff0c\u800c\u4e0d\u4f1a\u589e\u52a0\u5176\u4ed6\u7528\u6237\u7684\u6709\u6548\u8d1f\u8f7d\u6210\u672c\u3002\n\u5728Vue 3\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u5927\u591a\u6570\u5168\u5c40API\u548c\u5185\u90e8\u52a9\u624b\u79fb\u5230ES\u6a21\u5757\u5bfc\u51fa\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u8fd9\u5141\u8bb8\u73b0\u4ee3\u6346\u7ed1\u7a0b\u5e8f\u9759\u6001\u5206\u6790\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5220\u9664\u4e0e\u672a\u4f7f\u7528\u7684\u5bfc\u51fa\u76f8\u5173\u7684\u4ee3\u7801\u3002\u6a21\u677f\u7f16\u8bd1\u5668\u8fd8\u4f1a\u751f\u6210\u6811\u6296\u52a8\u53cb\u597d\u7684\u4ee3\u7801\uff0c\u53ea\u6709\u5728\u6a21\u677f\u4e2d\u5b9e\u9645\u4f7f\u7528\u67d0\u4e2a\u529f\u80fd\u65f6\u624d\u4f1a\u5bfc\u5165\u8be5\u529f\u80fd\u7684\u5e2e\u52a9\u5668\u3002\n\u6846\u67b6\u7684\u67d0\u4e9b\u90e8\u5206\u6c38\u8fdc\u4e0d\u80fd\u52a8\u6447\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u6211\u4eec\u79f0\u8fd9\u4e9b\u4e0d\u53ef\u7f3a\u5c11\u7684\u90e8\u5206\u7684\u5ea6\u91cf\u4e3a\u57fa\u7ebf\u5927\u5c0f\u3002VUE 3\u7684\u57fa\u7ebf\u5927\u5c0f\u7ea6\u4e3a10KB gzip-\u4e0d\u5230Vue 2\u7684\u4e00\u534a\uff0c\u5c3d\u7ba1\u589e\u52a0\u4e86\u8bb8\u591a\u65b0\u529f\u80fd\u3002\n\u6211\u4eec\u8fd8\u5e0c\u671b\u63d0\u9ad8Vue\u5904\u7406\u5927\u89c4\u6a21\u5e94\u7528\u7a0b\u5e8f\u7684\u80fd\u529b\u3002\u6211\u4eec\u6700\u521d\u7684VUE\u8bbe\u8ba1\u4fa7\u91cd\u4e8e\u8f83\u4f4e\u7684\u5165\u95e8\u95e8\u69db\u548c\u5e73\u7f13\u7684\u5b66\u4e60\u66f2\u7ebf\u3002\u4f46\u662f\uff0c\u968f\u7740Vue\u88ab\u66f4\u5e7f\u6cdb\u5730\u91c7\u7528\uff0c\u6211\u4eec\u5bf9\u5305\u542b\u6570\u767e\u4e2a\u6a21\u5757\u7684\u9879\u76ee\u7684\u9700\u6c42\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u5e76\u4e14\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u4e9b\u9879\u76ee\u7531\u6570\u5341\u540d\u5f00\u53d1\u4eba\u5458\u7ef4\u62a4\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u9879\u76ee\uff0c\u50cfTypeScript\u8fd9\u6837\u7684\u7c7b\u578b\u7cfb\u7edf\u548c\u5e72\u51c0\u5730\u7ec4\u7ec7\u53ef\u91cd\u7528\u4ee3\u7801\u7684\u80fd\u529b\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u800cVue 2\u5728\u8fd9\u4e9b\u65b9\u9762\u7684\u652f\u6301\u5e76\u4e0d\u7406\u60f3\u3002\n\u5728\u8bbe\u8ba1Vue 3\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u63d0\u4f9b\u5bf9\u4f7f\u7528\u7c7b\u521b\u4f5c\u7ec4\u4ef6\u7684\u5185\u7f6e\u652f\u6301\u6765\u6539\u8fdbTypeScript\u96c6\u6210\u3002\u6311\u6218\u5728\u4e8e\uff0c\u8ba9\u7c7b\u53d8\u5f97\u53ef\u7528\u6240\u9700\u7684\u8bb8\u591a\u8bed\u8a00\u7279\u6027(\u5982\u7c7b\u5b57\u6bb5\u548c\u88c5\u9970\u7b26)\u4ecd\u7136\u662f\u63d0\u6848-\u5728\u6b63\u5f0f\u6210\u4e3aJavaScript\u7684\u4e00\u90e8\u5206\u4e4b\u524d\uff0c\u8fd9\u4e9b\u7279\u6027\u53ef\u80fd\u4f1a\u6709\u6240\u66f4\u6539\u3002\u6240\u6d89\u53ca\u7684\u590d\u6742\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u8ba9\u6211\u4eec\u8d28\u7591\u6dfb\u52a0Class API\u662f\u5426\u771f\u7684\u5408\u7406\uff0c\u56e0\u4e3a\u5b83\u53ea\u63d0\u4f9b\u7a0d\u597d\u7684TypeScript\u4e0e\u96c6\u6210\u3002\n\u6211\u4eec\u51b3\u5b9a\u7814\u7a76\u5176\u4ed6\u65b9\u6cd5\u6765\u89e3\u51b3\u4f38\u7f29\u95ee\u9898\u3002\u53d7Reaction Hooks\u7684\u542f\u53d1\uff0c\u6211\u4eec\u8003\u8651\u516c\u5f00\u8f83\u4f4e\u7ea7\u522b\u7684\u53cd\u5e94\u6027\u548c\u7ec4\u4ef6\u751f\u547d\u5468\u671fAPI\uff0c\u4ee5\u652f\u6301\u4e00\u79cd\u66f4\u81ea\u7531\u5f62\u5f0f\u7684\u7ec4\u4ef6\u903b\u8f91\u521b\u4f5c\u65b9\u5f0f\uff0c\u79f0\u4e3a\u7ec4\u5408API\u3002\u5408\u6210API\u4e0d\u662f\u901a\u8fc7\u6307\u5b9a\u4e00\u957f\u4e32\u9009\u9879\u6765\u5b9a\u4e49\u7ec4\u4ef6\uff0c\u800c\u662f\u5141\u8bb8\u7528\u6237\u50cf\u7f16\u5199\u51fd\u6570\u4e00\u6837\u81ea\u7531\u8868\u8fbe\u3001\u5408\u6210\u548c\u91cd\u7528\u6709\u72b6\u6001\u7ec4\u4ef6\u903b\u8f91\uff0c\u540c\u65f6\u63d0\u4f9b\u51fa\u8272\u7684TypeScript\u548c\u652f\u6301\n\u6211\u4eec\u5bf9\u8fd9\u4e2a\u60f3\u6cd5\u771f\u7684\u5f88\u5174\u594b\u3002\u5c3d\u7ba1\u7ec4\u5408API\u662f\u4e3a\u89e3\u51b3\u7279\u5b9a\u7c7b\u522b\u7684\u95ee\u9898\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u53ea\u6709\u5728\u521b\u4f5c\u7ec4\u4ef6\u65f6\u624d\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u5728\u63d0\u6848\u7684\u7b2c\u4e00\u7a3f\u4e2d\uff0c\u6211\u4eec\u6709\u70b9\u8d85\u524d\u4e86\uff0c\u5e76\u6697\u793a\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u7528\u7ec4\u5408API\u66ff\u6362\u73b0\u6709\u7684Options API\u3002\u8fd9\u5bfc\u81f4\u4e86\u793e\u533a\u6210\u5458\u7684\u5927\u89c4\u6a21\u62b5\u5236\uff0c\u8fd9\u7ed9\u6211\u4eec\u4e0a\u4e86\u4e00\u5802\u5b9d\u8d35\u7684\u8bfe\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u6e05\u6670\u5730\u6c9f\u901a\u957f\u671f\u8ba1\u5212\u548c\u610f\u56fe\uff0c\u4ee5\u53ca\u7406\u89e3\u7528\u6237\u7684\u9700\u6c42\u3002\u5728\u542c\u53d6\u4e86\u6211\u4eec\u793e\u533a\u7684\u53cd\u9988\u540e\uff0c\u6211\u4eec\u5b8c\u5168\u4fee\u6539\u4e86\u63d0\u6848\uff0c\u660e\u786e\u8868\u793a\u7ec4\u5408API\u5c06\u662fOptions API\u7684\u8865\u5145\u548c\u8865\u5145\u3002\u4fee\u8ba2\u540e\u7684\u63d0\u6848\u5f97\u5230\u4e86\u79ef\u6781\u5f97\u591a\u7684\u63a5\u53d7\uff0c\u5e76\u6536\u5230\u4e86\u8bb8\u591a\u5efa\u8bbe\u6027\u7684\u5efa\u8bae\u3002\n\u5728Vue 100\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u7528\u6237\u7fa4\u4e2d\uff0c\u6709\u5bf9HTML/CSS\u53ea\u6709\u57fa\u672c\u4e86\u89e3\u7684\u521d\u5b66\u8005\u3001\u4ecejQuery\u8f6c\u884c\u7684\u4e13\u4e1a\u4eba\u58eb\u3001\u4ece\u53e6\u4e00\u4e2a\u6846\u67b6\u8fc1\u79fb\u8fc7\u6765\u7684\u8001\u624b\u3001\u5bfb\u627e\u524d\u7aef\u89e3\u51b3\u65b9\u6848\u7684\u540e\u7aef\u5de5\u7a0b\u5e08\uff0c\u4ee5\u53ca\u5927\u89c4\u6a21\u5904\u7406\u8f6f\u4ef6\u7684\u8f6f\u4ef6\u67b6\u6784\u5e08\u3002\u5f00\u53d1\u4eba\u5458\u914d\u7f6e\u6587\u4ef6\u7684\u591a\u6837\u6027\u4e0e\u7528\u4f8b\u7684\u591a\u6837\u6027\u76f8\u5bf9\u5e94\uff1a\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u5e0c\u671b\u5728\u9057\u7559\u5e94\u7528\u7a0b\u5e8f\u4e0a\u5206\u6563\u4ea4\u4e92\u6027\uff0c\u800c\u53e6\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u6b63\u5728\u8fdb\u884c\u4e00\u6b21\u6027\u9879\u76ee\uff0c\u5468\u8f6c\u65f6\u95f4\u5f88\u5feb\uff0c\u4f46\u7ef4\u62a4\u95ee\u9898\u6709\u9650\uff1b\u67b6\u6784\u5e08\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5904\u7406\u5927\u89c4\u6a21\u3001\u591a\u5e74\u7684\u9879\u76ee\u4ee5\u53ca\u5728\u9879\u76ee\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u4e0d\u65ad\u53d8\u5316\u7684\u5f00\u53d1\u4eba\u5458\u56e2\u961f\u3002\nVUE\u7684\u8bbe\u8ba1\u4e0d\u65ad\u53d7\u5230\u8fd9\u4e9b\u9700\u6c42\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u6211\u4eec\u5bfb\u6c42\u5728\u5404\u79cd\u6743\u8861\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002VUE\u7684\u53e3\u53f7\u662f\u6e10\u8fdb\u5f0f\u6846\u67b6\uff0c\u201c\u5c01\u88c5\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u4ea7\u751f\u7684\u5206\u5c42API\u8bbe\u8ba1\u3002\u521d\u5b66\u8005\u53ef\u4ee5\u901a\u8fc7CDN\u811a\u672c\u3001\u57fa\u4e8eHTML\u7684\u6a21\u677f\u548c\u76f4\u89c2\u7684Options API\u4eab\u53d7\u6d41\u7545\u7684\u5b66\u4e60\u66f2\u7ebf\uff0c\u800c\u4e13\u5bb6\u53ef\u4ee5\u901a\u8fc7\u529f\u80fd\u9f50\u5168\u7684CLI\u3001\u6e32\u67d3\u51fd\u6570\u548cAPI\u7ec4\u5408\u6765\u5904\u7406\u96c4\u5fc3\u52c3\u52c3\u7684\u4f7f\u7528\u6848\u4f8b\u3002\n\u8981\u5b9e\u73b0\u6211\u4eec\u7684\u613f\u666f\uff0c\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a-\u6700\u91cd\u8981\u7684\u662f\uff0c\u66f4\u65b0\u652f\u6301\u5e93\u3001\u6587\u6863\u548c\u5de5\u5177\u4ee5\u786e\u4fdd\u987a\u5229\u8fc1\u79fb\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u5c06\u52aa\u529b\u5de5\u4f5c\uff0c\u6211\u4eec\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u770b\u770b\u793e\u533a\u5c06\u7528Vue 3\u521b\u9020\u4ec0\u4e48", "note_en": "Over the past year, the Vue team has been working on the next major version of Vue.js, which we hope to release in the first half of 2020. (This work is ongoing at the time of writing.) The idea for a new major version of Vue took shape in late 2018, when the codebase of Vue 2 was about two-and-a-half years old. That may not sound like a long time in the life span of generic software, but the frontend landscape had changed drastically during that\u00a0period\n Two key considerations led us to the new major version (and rewrite) of Vue: First, the general availability of new JavaScript language features in mainstream browsers. Second, design and architectural issues in the current codebase that had been exposed over\u00a0time\n   With the standardization of  ES2015, JavaScript \u2014formally known as  ECMAScript, abbreviated to ES \u2014received major improvements, and mainstream browsers were finally starting to provide decent support for these new additions. Some in particular presented opportunities for us to greatly improve Vue\u2019s\u00a0capabilities\n The most noteworthy among them is  Proxy, which allows the framework to intercept operations on objects. A core feature of Vue is the ability to listen to changes made to the user-defined state and reactively update the  DOM. Vue 2 implements this reactivity by replacing the properties on state objects with getters and setters. Switching to Proxy would allow us to eliminate Vue\u2019s existing limitations, such as the inability to detect new property additions, and provide better\u00a0performance\n However, Proxy is a native language feature that cannot be fully polyfilled in legacy browsers. In order to leverage it, we knew we\u2019d have to adjust the framework\u2019s browser support range \u2014a big breaking change that could only be shipped in a new major\u00a0version\n   Over the course of maintaining Vue 2, we\u2019ve accumulated a number of issues that have been difficult to address due to the limitations of the existing architecture. For example, the template compiler was written in a way that makes proper source-map support very challenging. Also, while Vue 2 technically enables building higher-level renderers that target non- DOM platforms, we had to fork the codebase and duplicate lots of code in order to make this possible. Fixing these issues in the current codebase would require huge, risky refactors that are almost equivalent to a\u00a0rewrite\n At the same time, we\u2019ve accumulated technical debt in the form of implicit coupling between the internals of various modules and floating code that doesn\u2019t seem to belong anywhere. This made it harder to understand a part of the codebase in isolation, and we noticed that contributors rarely felt confident making nontrivial changes. The rewrite would give us the opportunity to rethink the code organization with these things in\u00a0mind\n We started prototyping Vue 3 in late 2018 with the preliminary goal of validating the solutions to these problems. During this stage, we mostly focused on building a solid foundation for further\u00a0development\n  Vue 2 was originally written in plain  ES. Shortly after the prototyping stage, we realized that a type system would be very helpful for a project of this magnitude. Type checks greatly reduce the chance of introducing unintended bugs during refactors and help contributors be more confident in making nontrivial changes. We adopted Facebook\u2019s  Flow type checker because it can be gradually added to an existing plain- ES project. Flow helped to a certain extent, but we didn\u2019t benefit from it as much as we\u2019d hoped; in particular, the constant breaking changes made upgrading a pain. The support for integrated development environments was also not ideal compared to TypeScript\u2019s deep integration with Visual Studio\u00a0Code\n We also noticed that users were increasingly using Vue and TypeScript together. To support their use cases, we had to author and maintain the TypeScript declarations separately from the source code, which used a different type system. Switching to TypeScript would allow us to automatically generate the declaration files, alleviating the maintenance\u00a0burden\n  We also adopted a monorepo setup in which the framework is made up of internal packages, each with their own individual  APIs, type definitions, and tests. We wanted to make the dependencies between these modules more explicit, making it easier for developers to read, understand, and make changes to all. This was key to our endeavor to lower the project\u2019s contribution barriers and improve its long-term maintainability\n  By the end of 2018, we had a working prototype with the new reactivity system and virtual  DOM renderer. We had validated the internal architectural improvements we wanted to make, but only had rough drafts of the public-facing  API changes. It was time to turn them into concrete\u00a0designs\n We knew we had to do this early and carefully. Vue\u2019s widespread usage means breaking changes can lead to massive migration costs for users and potential ecosystem fragmentation. To ensure users would be able to provide feedback on breaking changes, we adopted an   RFC (Request for Comments) process at the beginning of 2019. Each  RFC follows a template, with sections focused on motivation, design details, trade-offs, and adoption strategies. Since the process is conducted in a GitHub repo with proposals submitted as pull requests, discussions unfold organically in the\u00a0comments\n The  RFC process has proven immensely helpful, serving as a thought framework that forces us to fully consider all aspects of a potential change, and allowing our community to participate in the design process and submit well-thought-out feature\u00a0requests\n Performance is essential to frontend frameworks. Although Vue 2 boasts competitive performance, the rewrite offers an opportunity to go even further by experimenting with new rendering\u00a0strategies\n  Vue has a fairly unique rendering strategy: It provides an  HTML-like template syntax but compiles the templates into render functions that return virtual  DOM trees. The framework figures out which parts of the actual  DOM to update by recursively walking two virtual  DOM trees and comparing every property on every node. This somewhat brute-force algorithm is generally pretty quick, thanks to the advanced optimizations performed by modern JavaScript engines, but updates still involve a lot of unnecessary  CPU work. The inefficiency is particularly obvious when you look at a template with largely static content and only a few dynamic bindings \u2014the whole virtual  DOM tree still needs to be recursively walked to figure out what\u2019s\u00a0changed\n Luckily, the template compilation step gives us a chance to perform a static analysis of the template and extract information about dynamic parts. Vue 2 did this to some extent by skipping static sub-trees, but more advanced optimizations were difficult to implement due to the overly simplistic compiler architecture. In Vue 3, we rewrote the compiler with a proper  AST transform pipeline, which allows us to compose compile-time optimizations in the form of transform\u00a0plug-ins\n With the new architecture in place, we wanted to find a rendering strategy that would eliminate as much overhead as possible. One option was to ditch virtual  DOM and directly generate imperative  DOM operations, but that would eliminate the ability to directly author virtual  DOM render functions, which we\u2019ve found to be highly valuable to advanced users and library authors. Plus, it would be a huge breaking\u00a0change\n The next best thing was to get rid of unnecessary virtual  DOM tree traversals and property comparisons, which tend to have the most performance overhead during updates. In order to achieve this, the compiler and the runtime need to work together: The compiler analyzes the template and generates code with optimization hints, while the runtime picks up the hints and takes fast paths whenever possible. There are three major optimizations at work\u00a0here:\n First, at the tree level, we noticed that node structures stay completely static in the absence of template directives that dynamically alter the node structure ( e.g.,  v-if and  v-for). If we divide a template into nested  blocks\u201d separated by these structural directives, the node structures within each block become completely static again. When we update the nodes within a block, we no longer need to recursively traverse the tree \u2014dynamic bindings within the block can be tracked in a flat array. This optimization circumvents much of the virtual  DOM\u2019s overhead by reducing the amount of tree traversal we need to perform by an order of magnitude.\u00a0\\\n Second, the compiler aggressively detects static nodes, subtrees, and even data objects in a template and hoists them outside the render function in the generated code. This avoids recreating these objects on each render, greatly improving memory usage and reducing the frequency of garbage collection.\u00a0\\\n Third, at the element level, the compiler also generates an optimization flag for each element with dynamic bindings based on the type of updates it needs to perform. For example, an element with a dynamic class binding and a number of static attributes will receive a flag that indicates only a class check is needed. The runtime will pick up these hints and take the dedicated fast\u00a0paths\n  Combined, these techniques have significantly improved our render update benchmarks, with Vue 3 sometimes taking less than a tenth of Vue 2\u2019s   CPU\u00a0time\n  The size of the framework also affects its performance. This is a unique concern for web applications because assets need to be downloaded on the fly, and the app will not be interactive until the browser has parsed the necessary JavaScript. This is particularly true for single-page applications. While Vue has always been relatively lightweight \u2014Vue 2\u2019s runtime size is around 23  KB gzipped \u2014we\u2019ve noticed two\u00a0problems:\n First, not everyone uses all of the framework\u2019s features. For example, an app that never uses the transition features still pays the download and parse costs of transition-related\u00a0code\n Second, the framework keeps growing indefinitely as we add new features. This gives bundle size disproportionate weight when we consider the trade-offs of a new feature addition. As a result, we tend to only include features that will be used by the majority of our\u00a0users\n Ideally, the user should be able to drop code for unused framework features at build time \u2014also known as  tree-shaking\u201d \u2014and only pay for what they use. This would also allow us to ship features that a subset of our users would find useful without adding payload costs for the\u00a0rest\n In Vue 3, we achieved this by moving most of the global  APIs and internal helpers to  ES module exports. This allows modern bundlers to statically analyze the module dependencies and drop code related to unused exports. The template compiler also generates tree-shaking friendly code, which only imports helpers for a feature if the feature is actually used in the\u00a0template\n Some parts of the framework can never be tree-shaken because they\u2019re essential to any type of app. We call the measure of these indispensable parts the baseline size. Vue 3\u2019s baseline size is around 10  KB gzipped \u2014less than half that of Vue 2, despite the addition of numerous new\u00a0features\n We also wanted to improve Vue\u2019s ability to handle large-scale applications. Our initial Vue design focused on a low barrier to entry and a gentle learning curve. But as Vue became more widely adopted, we learned more about the needs of projects that contain hundreds of modules and are maintained by dozens of developers over time. For these types of projects, a type system like TypeScript and the ability to cleanly organize reusable code are critical, and Vue 2\u2019s support in these areas was less than\u00a0ideal\n In the early stages of designing Vue 3, we attempted to improve TypeScript integration by offering built-in support for authoring components using classes. The challenge was that many of the language features we needed to make classes usable, such as class fields and decorators, were still proposals \u2014and subject to change before officially becoming part of JavaScript. The complexity and uncertainty involved made us question whether the addition of the Class  API was really justified, since it didn\u2019t offer anything other than slightly better TypeScript\u00a0integration\n We decided to investigate other ways to attack the scaling problem. Inspired by React Hooks, we thought about exposing the lower-level reactivity and component lifecycle  APIs to enable a more free-form way of authoring component logic, called  Composition  API. Instead of defining a component by specifying a long list of options, the Composition  API allows the user to freely express, compose, and reuse stateful component logic just like writing a function, all while providing excellent TypeScript\u00a0support\n We were really excited about this idea. Although the Composition  API was designed to address a specific category of problems, it\u2019s technically possible to use it only when authoring components. In the first draft of the proposal, we got a bit ahead of ourselves and hinted that we might replace the existing Options  API with the Composition  API in a future release. This resulted in massive pushback from community members, which taught us a valuable lesson about communicating longer-term plans and intentions clearly, as well as understanding users\u2019 needs. After listening to feedback from our community, we completely reworked the proposal, making it clear that the Composition  API would be additive and complementary to the Options  API. The reception of the revised proposal was much more positive, and received many constructive\u00a0suggestions\n Among Vue\u2019s user base of over a million developers are beginners with only a basic knowledge of  HTML/ CSS, professionals moving on from jQuery, veterans migrating from another framework, backend engineers looking for a frontend solution, and software architects dealing with software at scale. The diversity of developer profiles corresponds to the diversity of use cases: Some developers might want to sprinkle interactivity on legacy applications, while others may be working on one-off projects with a fast turnaround but limited maintenance concerns; architects may have to deal with large-scale, multiyear projects and a fluctuating team of developers over the project\u2019s\u00a0lifetime\n Vue\u2019s design has been continuously shaped and informed by these needs as we seek to strike a balance between various trade-offs. Vue\u2019s slogan,  the progressive framework,\u201d encapsulates the layered  API design that results from this process. Beginners can enjoy a smooth learning curve with a  CDN script,  HTML-based templates, and the intuitive Options  API, while experts can handle ambitious use cases with full-featured  CLI, render functions, and the Composition\u00a0 API\n There\u2019s still a lot of work left to do to realize our vision \u2014most importantly, updating supporting libraries, documentation, and tools to ensure a smooth migration. We\u2019ll be working hard in the coming months, and we can\u2019t wait to see what the community will create with Vue\u00a03", "posttime": "2020-05-28 21:33:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5236\u4f5c,making,vue", "title": "\u5236\u4f5cVue 3", "title_en": "Making Vue 3", "transed": 1, "url": "https://increment.com/frontend/making-vue-3/", "via": "", "real_tags": ["\u5236\u4f5c", "making", "vue"]}, {"category": "", "categoryclass": "", "imagename": "c1e0bab4a9985fab8605be6ad5ea70e7.jpg", "infoid": 1004075, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u62a5\u9053\uff0c\u5468\u4e09\uff0c\u4e9a\u5229\u6851\u90a3\u5dde\u8d77\u8bc9\u8c37\u6b4c\uff0c\u79f0\u8c37\u6b4c\u5728\u7528\u6237\u5173\u95ed\u4f4d\u7f6e\u8ddf\u8e2a\u7684\u60c5\u51b5\u4e0b\u4ecd\u6536\u96c6\u7528\u6237\u4e0b\u843d\u6570\u636e\u3002\n\u8c37\u6b4c\u7684Android\u5141\u8bb8\u7528\u6237\u5728\u5176\u8bbe\u7f6e\u4e2d\u5173\u95ed\u4f4d\u7f6e\u8ddf\u8e2a\u3002\u4f46\u6839\u636e\u4e9a\u5229\u6851\u90a3\u5dde\u603b\u68c0\u5bdf\u957f\u9a6c\u514b\u00b7\u5e03\u8bfa\u7ef4\u5947(Mark Brnovich)\u63d0\u8d77\u7684\u8bc9\u8bbc\uff0cAndroid\u8bbe\u5907\u7ee7\u7eed\u5728\u5730\u56fe\u3001\u5929\u6c14\u548c\u641c\u7d22\u5e94\u7528\u7a0b\u5e8f\u7b49\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55\u548c\u4fdd\u5b58\u4f4d\u7f6e\u8bb0\u5f55\uff0c\u5373\u4f7f\u4f4d\u7f6e\u8ddf\u8e2a\u88ab\u7981\u7528\u3002\u4e3a\u4e86\u5b8c\u5168\u963b\u6b62\u4ed6\u4eec\u7684\u8bbe\u5907\u6536\u96c6\u4f4d\u7f6e\u6570\u636e\uff0cAndroid\u7528\u6237\u4e0d\u5f97\u4e0d\u5173\u95ed\u7b2c\u4e8c\u4e2a\u5f88\u96be\u627e\u5230\u7684\u8bbe\u7f6e\u3002\n\u8bc9\u8bbc\u8fd8\u58f0\u79f0\uff0c\u8c37\u6b4c\u7684Android\u6709\u65f6\u4f1a\u5728\u6ca1\u6709\u5f81\u5f97\u7528\u6237\u540c\u610f\u751a\u81f3\u6ca1\u6709\u901a\u77e5\u4ed6\u4eec\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u9ed8\u8ba4\u7684\u8ddf\u8e2a\u8bbe\u7f6e\u3002\n\u201c\u5305\u62ec\u4e9a\u5229\u6851\u90a3\u5dde\u5728\u5185\u7684\u7528\u6237\u5df2\u7ecf\u5f00\u59cb\u6bcf\u5929\u4f9d\u8d56\u8c37\u6b4c\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6b3a\u9a97\u6027\u548c\u4e0d\u516c\u5e73\u7684\u884c\u4e3a\u548c\u505a\u6cd5\uff0c\u8c37\u6b4c\u4f7f\u7528\u6237\u5373\u4f7f\u4e0d\u662f\u4e0d\u53ef\u80fd\uff0c\u4e5f\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u5982\u679c\u7528\u6237\u5bfb\u6c42\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u4ed6\u4eec\u4f1a\u6709\u610f\u4e49\u5730\u9009\u62e9\u9000\u51fa\u8c37\u6b4c\u6536\u96c6\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\nBrnovich\u8bf4\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u8981\u6c42\u4e9a\u5229\u6851\u90a3\u5dde\u5c45\u6c11\u83b7\u5f97\u672a\u6307\u660e\u7684\u8d54\u507f\uff0c\u4f46\u6700\u7ec8\u91d1\u989d\u53ef\u80fd\u9ad8\u8fbe\u6570\u4ebf\u7f8e\u5143\u3002\u6839\u636e\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u6cd5\u5f8b\uff0c\u8c37\u6b4c\u6bcf\u6b21\u8fdd\u89c4\u8fd8\u53ef\u80fd\u88ab\u5904\u4ee5\u6700\u9ad81\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u4e00\u76f4\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u5185\u7f6e\u9690\u79c1\u529f\u80fd\uff0c\u5e76\u4e3a\u4f4d\u7f6e\u6570\u636e\u63d0\u4f9b\u5f3a\u5927\u7684\u63a7\u5236\u3002\u6211\u4eec\u671f\u5f85\u7740\u6f84\u6e05\u4e8b\u5b9e\uff0c\u201c\u8c37\u6b4c\u53d1\u8a00\u4eba\u544a\u8bc9\u201d\u534e\u76db\u987f\u90ae\u62a5\u201c\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u6e90\u4e8e2018\u5e74\u4e9a\u5229\u6851\u90a3\u5dde\u5bf9\u8c37\u6b4c\u4f4d\u7f6e\u8ddf\u8e2a\u505a\u6cd5\u7684\u8c03\u67e5\u3002\u8fd9\u7edd\u5bf9\u4e0d\u662f\u7b2c\u4e00\u6b21\uff1a2018\u5e747\u6708\uff0c\u8c37\u6b4c\u56e0\u8fdd\u53cdAndroid\u53cd\u5784\u65ad\u88ab\u7f5a\u6b3e50\u4ebf\u7f8e\u5143\uff0c2019\u5e743\u6708\uff0c\u8c37\u6b4c\u56e0\u53cd\u7ade\u4e89\u5e7f\u544a\u884c\u4e3a\u88ab\u7f5a\u6b3e17\u4ebf\u7f8e\u5143\u3002\u57289\u67081\u65e5\u30022019\u5e74\uff0c\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u4ee5\u8fdd\u53cd\u300a\u513f\u7ae5\u7f51\u7edc\u9690\u79c1\u4fdd\u62a4\u6cd5\u300b\u4e3a\u7531\uff0c\u5bf9\u8c37\u6b4c\u65d7\u4e0b\u7684YouTube\u5904\u4ee51.7\u4ebf\u7f8e\u5143\u7f5a\u6b3e\uff1b2019\u5e7412\u6708\uff0c\u6cd5\u56fd\u4ee5\u53cd\u7ade\u4e89\u884c\u4e3a\u5bf9\u8c37\u6b4c\u7f5a\u6b3e1.66\u4ebf\u7f8e\u5143\u3002", "note_en": "According to a report by the   Washington Post, the state of Arizona sued Google on Wednesday for allegedly collecting data about users&#39; whereabouts even if they had turned off location tracking.\n Google&#39;s Android allows users to turn off location tracking in its settings. But according to the lawsuit, filed by Arizona Attorney General Mark Brnovich, Android devices continued to record and keep location records in some apps, such as mapping, weather, and search apps, even if location tracking was disabled. To fully prevent their devices from collecting location data, Android users had to turn off a second setting which was hard to find.\n The lawsuit also alleges that Google&#39;s Android sometimes changed the default tracking settings without seeking user consent or even informing them.\n \u201cUsers, including in Arizona, have come to rely on Google\u2019s products and services on a daily basis. At the same time, through these deceptive and unfair acts and practices, Google makes it impractical if not impossible for users to meaningfully opt-out of Google\u2019s collection of location information, should the users seek to do so,\u201d \u00a0the complaint reads.\n The lawsuit seeks unspecified damages for Arizona residents, but the final tally might go up to hundreds of millions of dollars, Brnovich said. Per Arizona laws, Google could also be fined up to $10,000 for each violation.\n  \u201cWe have always built privacy features into our products and provided robust controls for location data. We look forward to setting the record straight,\u201d a Google spokesperson told the Washington Post.\n The lawsuit stems from a 2018  Arizona probe into Google&#39;s location tracking practices. It&#39;s definitely not the first of its kind: In July 2018, Google was fined $5 billion for Android  antitrust breach, and in March 2019, Google was  fined $1.7 billion for anticompetitive ad practices. In Sept. 2019, the FTC  fined Google&#39;s YouTube $170 million for violating the Children\u2019s Online Privacy Protection Act, and in Dec. 2019, France  fined Google $166 million for anti-competitive behavior.", "posttime": "2020-05-28 21:33:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,sues", "title": "\u4e9a\u5229\u6851\u90a3\u5dde\u8d77\u8bc9\u8c37\u6b4c\u5373\u4f7f\u5728\u5173\u95ed\u7684\u60c5\u51b5\u4e0b\u4e5f\u8ffd\u8e2a\u7528\u6237\u7684\u4f4d\u7f6e", "title_en": "Arizona sues Google for tracking users' location even when it's turned off", "transed": 1, "url": "https://mashable.com/article/arizona-google-lawsuit/", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "sues"]}, {"category": "", "categoryclass": "", "imagename": "8327870a812486924f344d8a1a83f0a3.png", "infoid": 1004074, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u597d\u7684\uff0c\u6240\u4ee5\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u8352\u8c2c\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u7b54\u6848\u53ef\u80fd\u662f\u2026\u3002\u4f46\u8fd9\u53ef\u80fd\u4e0d\u662f\u4f60\u60f3\u7684\u90a3\u6837\u3002\n\u5f53\u6211\u542c\u5230\u201c\u756a\u8304\u9171\u201d\u8fd9\u4e2a\u8bcd\u65f6\uff0c\u6d53\u90c1\u7684\u897f\u7ea2\u67ff\u8c03\u5473\u54c1\u7acb\u523b\u5728\u753b\u5e03\u4e0a\u6325\u4e4b\u4e0d\u53bb\uff0c\u5c31\u50cf\u6df1\u7ea2\u8272\u7684\u7f57\u590f\u6d4b\u9a8c\u4e00\u6837\u3002\u756a\u8304\u9171\u662f\u540e\u9662\u91ce\u9910\u7684\u5fc5\u8981\u7ec4\u6210\u90e8\u5206\u3002\u5bf9\u4e8e\u8bb8\u591a\u84dd\u4e1d\u5e26\u8089\u997c\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u79cd\u4e0d\u90a3\u4e48\u795e\u79d8\u7684\u914d\u6599\u3002\u51e0\u4e4e\u6bcf\u5bb6\u9910\u5385\u7684\u9910\u684c\u4e0a\u90fd\u653e\u7740\u4e00\u74f6\u5b83\uff0c\u50cf\u8c03\u76ae\u7684\u5b69\u5b50\u4e00\u6837\u628a\u76d0\u548c\u80e1\u6912\u74f6\u5206\u5f00\u3002\n\u4f46\u662f\u5f53\u4f60\u5728\u829d\u52a0\u54e5\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u5728\u4f60\u7684\u70ed\u72d7\u4e0a\u8981\u756a\u8304\u9171\uff0c\u5426\u5219\u4f60\u4f1a\u88ab\u8d34\u4e0a\u6e38\u5ba2\u7684\u70d9\u5370\u3002Um\u2026\u3002\u8170\u5305\u53ef\u80fd\u4e5f\u4f1a\u51fa\u5356\u4f60\u3002\n\u6211\u4e00\u76f4\u4ee5\u6765\u6700\u559c\u6b22\u7684\u5468\u65e5\u65e9\u6668\u6f2b\u753b\u4e4b\u4e00\u662f\u6f2b\u753b\u5927\u5e08\u52a0\u91cc\u00b7\u62c9\u68ee(Gary Larsen)\u7684\u4f5c\u54c1\u3002\u5b83\u7684\u7279\u8272\u662f\u4e00\u4e2a\u7531\u53cd\u7701\u7684\u79c3\u9e6b\u7ec4\u6210\u7684\u59d4\u5458\u4f1a\uff0c\u6324\u5728\u4ed6\u4eec\u76f8\u5f53\u6210\u719f\u7684\u8def\u8fb9\u6b7b\u4ea1\u5c0f\u5403\u4e0a\uff0c\u5176\u4e2d\u4e24\u4e2a\u4eba\u56de\u5fc6\u8d77\u4e86\u2026\u7684\u4f18\u70b9\u3002(\u4f60\u4e5f\u8bb0\u5f97\u8fd9\u4e2a\u5417\uff1f)\u2026\u3002\u756a\u8304\u9171\u3002\n\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u756a\u8304\u9171\u5df2\u7ecf\u5b58\u5728\u4e86\u51e0\u767e\u5e74\uff1b\u5c31\u5728\u56f4\u7ed5\u8fd9\u4e2a\u8bcd\u662f\u62fc\u6210\u201cC-A-T-C-H-U-P\u201d\u3001\u201cC-A-T-S-I-P\u201d\u8fd8\u662f\u201cK-E-T-C-H-U-P\u201d\u7684\u6fc0\u70c8\u4e89\u8bba\u671f\u95f4\uff0c\u201c\u725b\u6d25\u82f1\u8bed\u8bcd\u5178\u201d\u5ba3\u5e03\u4e86\u83b7\u80dc\u8005\uff1a\u201c\u756a\u8304\u9171\u201d\u663e\u7136\u662f\u8fd9\u4e09\u4e2a\u8bcd\u4e2d\u66f4\u5e38\u7528\u7684\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u73b0\u5728\u8fd8\u662f\u7528\u8fd9\u4e2a\u540d\u5b57\u5427\u3002\n\u8bb8\u591a\u4eba\u8fd9\u6837\u505a\u4e86\uff0c\u800c\u4e14\u6709\u5f88\u597d\u7684\u7406\u7531\u3002\u897f\u7ea2\u67ff\u5c5e\u4e8e\u8304\u79d1\u3002\u8d34\u7740\u201c\u8304\u5b50\u201d\u7684\u6807\u7b7e\uff0c\u897f\u7ea2\u67ff\u770b\u8d77\u6765\u5f88\u90aa\u6076\u3002\u5176\u4ed6\u4eba-\u4e00\u4e9b\u663e\u7136\u6709\u6b7b\u4ea1\u613f\u671b\u7684\u4eba-\u77e5\u9053\u5f97\u66f4\u6e05\u695a\u3002\n\u636e\u4fe1\uff0c\u4f1f\u5927\u7684\u897f\u73ed\u7259\u63a2\u9669\u5bb6\u8d6b\u5c14\u5357\u00b7\u79d1\u5c14\u7279\u65af\u4ece\u5357\u7f8e\u56de\u6765\u540e\uff0c\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u5c06\u8fd9\u79cd\u201c\u7231\u60c5\u82f9\u679c\u201d\u5f15\u5165\u6b27\u6d32\u7684\u4eba\u3002\u5230\u4e8616\u4e16\u7eaa\u521d\uff0c\u897f\u7ea2\u67ff\u6210\u4e3a\u897f\u73ed\u7259\u548c\u610f\u5927\u5229\u996e\u98df\u4e2d\u7684\u4e3b\u98df\u3002\u5230\u4e861600\u5e74\uff0c\u8bb8\u591a\u82f1\u56fd\u53a8\u5e08\u8ba4\u4e3a\u662f\u897f\u73ed\u7259\u4eba\u548c\u610f\u5927\u5229\u4eba\u5206\u4eab\u4e50\u8da3\u7684\u65f6\u5019\u4e86\u3002\u5230\u4e8618\u4e16\u7eaa\u4e2d\u53f6\uff0c\u897f\u7ea2\u67ff\u662f\u76f8\u5f53\u5e38\u89c1\u7684\u82f1\u56fd\u98df\u7269\uff0c\u901a\u5e38\u7528\u5728\u6c64\u91cc\uff0c\u4e5f\u7528\u4f5c\u8089\u7c7b\u7684\u88c5\u9970\u54c1\u6216\u8c03\u5473\u6c41\u3002\n\u5728\u7ea6\u7ff0\u00b7\u963f\u4f2f\u514b\u9f99\u6bd4(John Abercrombie)\u548c\u6258\u9a6c\u65af\u00b7\u9a6c(Thomas Mawe)1767\u5e74\u51fa\u7248\u7684\u300a\u6bcf\u4e2a\u4eba\u90fd\u662f\u81ea\u5df1\u7684\u56ed\u4e01\u300b(Everyone Man Our Gardener)\u4e00\u4e66\u4e2d\uff0c\u4e66\u4e2d\u5199\u9053\uff0c\u201c(\u897f\u7ea2\u67ff)\u5728\u4e00\u4e9b\u5bb6\u5ead\u91cc\uff0c\u7ecf\u5e38\u7528\u6765\u505a\u6c64\uff0c\u4e5f\u7ecf\u5e38\u7528\u6765\u814c\u5236\uff0c\u65e0\u8bba\u662f\u5728\u9752\u7eff\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u5728\u6210\u719f\u7684\u65f6\u5019\u3002\u201d\n\u5173\u4e8e\u897f\u7ea2\u67ff\u505a\u7684\u8c03\u5473\u6c41\uff0c\u6709\u5f88\u591a\u53c2\u8003\u8d44\u6599\u548c\u98df\u8c31\u3002\u5176\u4e2d\u4e00\u4e9b\u98df\u8c31\u5305\u62ec\u5927\u849c\u548c\u9999\u6599\uff0c\u4ee5\u53ca\u918b-\u73b0\u4ee3\u756a\u8304\u9171\u7684\u5178\u578b\u6210\u5206\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u98df\u8c31\u6765\u81eaCulina Famulatrix Medin\u00e6\uff1a\u6216\u8005\u8bf4\uff0c\u4e9a\u5386\u5c71\u5927\u00b7\u4ea8\u7279(Alexander Hunter)\u4e8e1810\u5e74\u51fa\u7248\u7684\u73b0\u4ee3\u70f9\u996a\u4e2d\u7684\u6536\u636e\uff1a\n\u8c01\u77e5\u9053\u5462\uff1f\u5173\u4e8e\u8fd9\u4e2a\u8bcd\u7684\u8d77\u6e90\u6709\u5f88\u591a\u4e89\u8bba\u3002\u6709\u4eba\u8bf4\u8fd9\u662f\u4e00\u4e2a\u4e2d\u6587\u5355\u8bcd\u7684\u53d8\u4f53\uff0c\u610f\u601d\u662f\u9c7c\u9732\u3002\u5176\u4ed6\u4eba\u8bf4\uff0c\u8fd9\u662f\u9a6c\u6765\u8bed\u4e2d\u7684\u4e00\u4e2a\u8bcd\uff0c\u610f\u601d\u662f\u76f8\u540c\u7684\u3002\n\u6211\u4eec\u4ece\u53c2\u8003\u6587\u732e\u548c\u98df\u8c31\u4e2d\u4e86\u89e3\u5230\uff0c\u5230\u4e8618\u4e16\u7eaa\u4e2d\u671f\uff0c\u201c\u756a\u8304\u9171\u201d\u662f\u82f1\u56fd\u53a8\u623f\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u70f9\u996a\u672f\u8bed\u3002\u7136\u800c\uff0c\u4e0e\u4e4b\u76f8\u5173\u7684\u8c03\u5473\u54c1\u4e0d\u662f\u756a\u8304\u9171\uff0c\u800c\u662f\u4e00\u79cd\u7f8e\u5473\u7684\u6df7\u5408\u7269\uff0c\u6709\u65f6\u53d1\u9175\uff0c\u6709\u65f6\u4e0d\u53d1\u9175\uff0c\u57fa\u4e8e\u51e4\u5c3e\u9c7c\u6216\u8d1d\u7c7b\uff0c\u6838\u6843\u6216\u8611\u83c7\u3002\u739b\u838e\u00b7\u534e\u76db\u987f(Martha Washington)\u5728\u5979\u7684\u201c\u70f9\u996a\u4e4b\u4e66\u201d(Booke Of Cookery)\u4e2d\u5305\u62ec\u4e86\u4e00\u4efd\u814c\u5236\u7261\u86ce\u7684\u98df\u8c31\uff0c\u8fd9\u662f\u4e00\u79cd\u53d1\u9175\u7684\u756a\u8304\u9171\u53d8\u4f53\u3002\n\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728\u4f60\u7684\u51b0\u7bb1\u91cc\uff0c\u6216\u8005\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u5728\u4f60\u5f53\u5730\u6742\u8d27\u5e97\u7684\u8d27\u67b6\u4e0a\u627e\u5230\u4e00\u79cd18\u4e16\u7eaa\u756a\u8304\u9171\u7684\u76f4\u7cfb\u540e\u88d4\uff1a\u5b83\u88ab\u79f0\u4e3a\u4f0d\u65af\u7279\u90e1\u9171\u6cb9(\u53d1\u97f3\u4e3a\u201cwuus-ter-shher\u201d\uff0c\u6307\u7684\u662f\u90a3\u4e9b\u50cf\u6211\u4e00\u6837\u96be\u4ee5\u5f04\u6e05\u695a\u8fd9\u4e2a\u8bcd\u7684\u4eba)\u3002\u6211\u51b0\u7bb1\u91cc\u7684\u74f6\u5b50\u53ef\u80fd\u65e9\u572818\u4e16\u7eaa\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff01\n\u5982\u679c\u4f60\u662f\u4e00\u540d18\u4e16\u7eaa\u7684\u91cd\u6f14\u6f14\u5458\u3001\u5386\u53f2\u5b66\u5bb6\u6216\u7f8e\u98df\u5bb6\uff0c\u800c\u4f60\u4ecd\u7136\u6e34\u671b\u4f60\u7684\u7ea2\u8272\u98df\u7269\uff0c\u90a3\u4e48\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u98df\u8c31\u662f\u76f8\u5f53\u5b89\u5168\u7684\u3002\u897f\u7ea2\u67ff\u65e2\u4e0d\u4f1a\u6740\u6b7b\u4f60\uff0c\u4e5f\u4e0d\u4f1a\u6740\u6b7b\u4f60\u7684\u771f\u5b9e\u6027\uff0c\u5f53\u7136\uff0c\u9664\u975e\u4f60\u5bf9\u897f\u7ea2\u67ff\u6709\u81f4\u547d\u7684\u8fc7\u654f\u53cd\u5e94\u3002\u53ea\u662f\u5728\u6d3b\u52a8\u671f\u95f4\u4e0d\u8981\u53eb\u5b83\u756a\u8304\u9171\uff0c\u800c\u662f\u53eb\u5b83\u756a\u8304\u9171\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u771f\u6b63\u7684\u201c\u756a\u8304\u9171\u4f53\u9a8c\u201d\uff0c\u5e76\u4e14\u4f60\u613f\u610f\u81ea\u5df1\u505a\uff0c\u90a3\u4e48\u5728\u65e7\u7684\u98df\u8c31\u4e2d\u53ef\u4ee5\u627e\u5230\u5f88\u591a\u98df\u8c31\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50\uff1a\n\u597d\u7684\uff0c\u8fd9\u4e9b\u90fd\u6709\u70b9\u8d39\u65f6\u8d39\u529b\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u6b63\u5b97\u7684\u672a\u53d1\u9175\u7684\u8611\u83c7\u756a\u8304\u9171\u98df\u8c31\uff0c\u975e\u5e38\u597d\u5403\uff01\u6211\u4eec\u5728\u201c\u4e0eJas\u4e00\u8d77\u70f9\u996a\u201d\u7684\u89c6\u9891\u4e2d\u6f14\u793a\u4e86\u8fd9\u4e2a\u98df\u8c31\u3002Townsend&amp\uff1bson\u89c6\u9891\u7cfb\u5217\u3002\n\u6750\u6599\uff1a2\u78c5\u65b0\u9c9c\u8611\u83c7\uff0c\u64e6\u5e72\u51c0\uff0c\u788e\u6216\u5207\u6210\u5c0f\u5757\u30022T\u72b9\u592a\u6216\u6d77\u76d02-3\u6e7e\u5269\u4e0b1\u4e2a\u5927\u6d0b\u8471\uff0c1\u4e2a\u67e0\u6aac\u5207\u788e\u7684\u76ae\u5c511/4\u5428\u78e8\u788e\u7684\u8fa3\u68391/4\u5428\u78e8\u788e\u7684\u4e01\u99991/2\u5428\u78e8\u788e\u7684\u5168\u9999\u6599\u4e00\u5c0f\u64ae\u5361\u5bb41/2C\u82f9\u679c\u9152\u918b\u3002\n\u4f7f\u7528\u65b9\u6cd5\uff1a\u5c06\u8611\u83c7\u3001\u76d0\u548c\u6708\u6842\u53f6\u6df7\u5408\u5728\u4e00\u4e2a\u975e\u91d1\u5c5e\u9505\u6216\u7897\u4e2d\u3002\u76d6\u4e0a\u76d6\u5b50\uff0c\u8ba9\u5b83\u8fc7\u591c\u3002\n\u5c06\u8611\u83c7\u6df7\u5408\u7269\u8f6c\u79fb\u5230\u70f9\u996a\u9505\u4e2d\uff0c\u5e76\u52a0\u5165\u5269\u4f59\u7684\u914d\u6599\u3002\u7528\u4e2d\u9ad8\u706b\u716e\u6cb8\uff0c\u7136\u540e\u5c06\u706b\u8c03\u4f4e\u81f3\u5c0f\u706b\uff0c\u5c06\u6df7\u5408\u7269\u709615\u5206\u949f\u3002(\u53ef\u9009\uff1a\u60a8\u53ef\u4ee5\u5c06\u6df7\u5408\u7269\u7096\u5f97\u66f4\u957f\u65f6\u95f4\uff0c\u4e00\u76f4\u6405\u62cc\uff0c\u4ee5\u5c06\u6db2\u4f53\u51cf\u5c11\u5230\u5927\u7ea6\u4e00\u534a\uff0c\u4ee5\u83b7\u5f97\u66f4\u6d53\u90c1\u7684\u5473\u9053\u3002)\u3002\n\u79bb\u5f00\u6696\u6c14\uff0c\u8ba9\u5b83\u51b7\u5374\u3002\u7528\u4e00\u5757\u5e03\u8fc7\u6ee4\u6389\u6240\u6709\u7684\u56fa\u4f53\uff0c\u6324\u538b\u6216\u62e7\u7d27\u5e03\uff0c\u4ee5\u5c3d\u53ef\u80fd\u591a\u5730\u53bb\u9664\u6db2\u4f53\u3002\n\u8bf7\u6ce8\u610f\uff01\u522b\u628a\u538b\u6241\u7684\u8611\u83c7\u6df7\u5408\u7269\u6254\u6389\uff01\u628a\u5b83\u644a\u5f00\u653e\u5728\u70e4\u76d8\u4e0a\uff0c\u5728200\u534e\u6c0f\u5ea6\u7684\u70e4\u7bb1\u91cc\u5f7b\u5e95\u70d8\u5e72\u3002\u5f53\u8611\u83c7\u5b8c\u5168\u5e72\u71e5\u53d8\u786c\u65f6\uff0c\u628a\u5b83\u4eec\u79fb\u8d70\u3002\u5b83\u53ef\u4ee5\u78e8\u6210\u7c89\u672b\uff0c\u50a8\u5b58\u5728\u7f50\u5934\u91cc\u8c03\u5473\uff0c\u6216\u8005\u7559\u5728\u539f\u6765\u7684\u5f62\u5f0f\u6dfb\u52a0\u5230\u6c64\u548c\u7096\u8089\u4e2d\u3002\u8fd9\u8611\u83c7\u8c03\u5473\u6599\u7edd\u5bf9\u597d\u5403\uff01\n\u867d\u7136\u53ef\u80fd\u6709\u66f4\u65e9\u7684\u4ee5\u897f\u7ea2\u67ff\u4e3a\u57fa\u7840\u7684\u756a\u8304\u9171\u7684\u98df\u8c31\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u7684\u6700\u65e9\u7684\u98df\u8c31\u662f\u57281817\u5e74\u7531\u5a01\u5ec9\u00b7\u57fa\u5947\u7eb3(William Kitchiner)\u6240\u8457\u7684Apicius ReDivus\uff1a\u6216\u8005\uff0c\u53a8\u5e08\u7684\u5148\u77e5\u3002\u8fd9\u662f\u4e00\u672c\u6709\u8da3\u7684\u4e66\uff0c\u56e0\u4e3a\u5b83\u548c\u524d\u9762\u63d0\u5230\u7684\u590f\u6d1b\u7279\u00b7\u6885\u68ee(Charlotte Mason)\u7684\u4e66\u4e00\u6837\uff0c\u4e5f\u5305\u62ec\u4e86\u5927\u91cf\u7684\u756a\u8304\u9171\u98df\u8c31\uff0c\u5305\u62ec\u7528\u767d\u9152\u918b\u548c\u51e4\u5c3e\u9c7c\u5236\u6210\u7684\u201c\u767d\u756a\u8304\u9171\u201d\u3001\u9ec4\u74dc\u756a\u8304\u9171\u3001\u751c\u6a59\u548c\u767d\u5170\u5730\u53e3\u5473\u7684\u5e03\u4e01\u756a\u8304\u9171\u3001\u201c\u9e21\u8089\u548c\u808c\u8089\u201d\u756a\u8304\u9171\u3001\u7261\u86ce\u756a\u8304\u9171\u3001\u6838\u6843\u756a\u8304\u9171\uff0c\u4ee5\u53ca\u8611\u83c7\u756a\u8304\u9171\u3002\u4f46\u5438\u5f15\u6211\u6ce8\u610f\u529b\u7684\u662f\u201c\u756a\u8304\u756a\u8304\u9171\u201d\u3002\n\u8fd9\u4e2a\u98df\u8c31\u4f3c\u4e4e\u662f\u5178\u578b\u7684\u756a\u8304\u9171\u98df\u8c31\u548c\u5178\u578b\u7684\u4ee5\u9c7c\u4e3a\u57fa\u7840\u7684\u756a\u8304\u9171\u98df\u8c31\u7684\u7ed3\u5408\u3002\n\u5230\u4e8619\u4e16\u7eaa\u4e2d\u671f\uff0c\u4eba\u4eec\u5199\u51fa\u4e86\u5927\u91cf\u7684\u756a\u8304\u9171\u98df\u8c31\uff0c\u5176\u4e2d\u8bb8\u591a\u98df\u8c31\u5df2\u7ecf\u5c06\u53d1\u9175\u7684\u6d77\u6d0b\u751f\u7269\u4ece\u914d\u6599\u8868\u4e2d\u53bb\u6389\u4e86\u3002\u7136\u800c\uff0c\u76f4\u523019\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u53c2\u8003\u6587\u732e\uff0c\u5176\u4e2d\u63d0\u5230\u4e86\u8611\u83c7\u756a\u8304\u9171\u7684\u5236\u4f5c(\u8bf7\u67e5\u770b\u6b64\u94fe\u63a5)\u3002\u56e0\u6b64\uff0c\u756a\u8304\u9171\u8fd8\u6ca1\u6709\u5b8c\u5168\u51fb\u8d25\u7ade\u4e89\u5bf9\u624b\u3002\n\u6211\u4eec\u5c06\u201c\u756a\u8304\u9171\u201d\u8fd9\u4e2a\u8bcd\u4e0e\u886c\u886b\u4e0a\u7684\u7ea2\u8272\u6c61\u70b9\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u5f88\u53ef\u80fd\u662f\u5927\u5bb6\u90fd\u719f\u6089\u7684\u4ea8\u6c0f\u5bb6\u65cf(Heinz Family)\u57281876\u5e74\u5f00\u59cb\u4ed6\u4eec\u7684\u4e00\u4e9b\u5947\u7279\u7684\u4fc3\u9500\u548c\u5206\u9500\u5de5\u4f5c\u7684\u7ed3\u679c\u3002\u5230\u4e8620\u4e16\u7eaa\u4e4b\u4ea4\uff0c\u4ed6\u4eec\u5df2\u7ecf\u58f0\u540d\u9e4a\u8d77\uff0c\u8ba9\u4f0d\u65af\u7279\u7684\u5c45\u6c11\u4eec\u5927\u5403\u4e00\u60ca\u3002\u5b83\u4eec\u4e5f\u5f88\u53ef\u80fd\u6c38\u8fdc\u6539\u53d8\u4e86\u4eba\u4eec\u5bf9\u756a\u8304\u9171\u7684\u666e\u904d\u770b\u6cd5\u3002\u523020\u4e16\u7eaa\u521d\uff0c\u4ed6\u4eec\u6bcf\u5e74\u5c061200\u4e07\u4e2a\u719f\u6089\u7684\u73bb\u7483\u74f6\u8fd0\u5230\u4e16\u754c\u5404\u5730\u7684\u53a8\u623f\u548c\u50cf\u4f60\u9644\u8fd1\u7684\u5f53\u5730\u7528\u9910\u8005\u90a3\u91cc\u3002\n\u8fd9\u4e2a\u6761\u76ee\u88ab\u8d34\u5728\u98df\u8c31\uff0c\u89c6\u9891\u548c\u6807\u7b7e\u51e4\u5c3e\u9c7c\uff0c\u8c03\u5473\u6c41\uff0c\u67f3\u4e1d\uff0c\u756a\u8304\u9171\uff0c\u8611\u83c7\uff0c\u98df\u8c31\uff0c\u9171\u6c41\uff0c\u918b\uff0c\u6838\u6843\uff0c\u6c83\u5207\u65af\u7279\u90e1\u3002\u4e3a\u56fa\u5b9a\u94fe\u63a5\u6dfb\u52a0\u4e66\u7b7e\u3002", "note_en": "O.k., so it may be an absurd question. The answer, however, is probably\u2026but it may not be what you think.\n When I hear the word \u201cKETCHUP,\u201d the tangy tomato condiment immediately blots across the canvas my mind like a crimson Rorschach test. Ketchup is a necessary component of the backyard cookout. It\u2019s the not-so-secret ingredient to many a blue-ribbon meatloafs. There\u2019s a bottle of it sitting on the tables of most every diner, separating the salt and pepper shakers like misbehaving children.\n But when you\u2019re in Chicago, don\u2019t ask for ketchup on your hot dog, or you\u2019ll be branded a tourist. Um\u2026the fanny pack may give you away too.\n One of my all-time favorite Sunday-morning comics was by the master cartoonist, Gary Larsen. It featured a committee of ruminating vultures huddling over their rather ripe roadkill repast, while two of them reminisce the virtues of\u2026(you remember this one too?)\u2026ketchup.\n Believe it or not, ketchup has been around for hundreds of years; that\u2019s just about as long as the debate that has raged over whether the word is spelled \u201cC-A-T-C-H-U-P,\u201d C-A-T-S-I-P,\u201d or \u201cK-E-T-C-H-U-P.\u201d\u00a0 The Oxford English Dictionary declares the winner: \u201cKetchup\u201d is apparently the more commonly used of the three, so I\u2019ll stick with that name for now.\n  Many did, and for good reason. The tomato belongs to the nightshade family. And with the tag \u201cnightshade,\u201d the tomato is looking pretty evil. Other people \u2014 some apparently with a death wish, knew better.\n It is believed that the great Spanish explorer, Hernan Cortes, may have been the first to introduce the \u201clove apple\u201d to Europe upon his return from South America. By the early 1500s, tomatoes became a staple in Spanish and Italian diets. By 1600, many British cooks decided it was time for the Spaniards and Italians to share in the fun. By the mid-18th century, tomatoes were fairly common English fare, typically used in soups and as garnishes or sauces for meats.\n In the book  Every Man His Own Gardener, by\u00a0John Abercrombie and Thomas Mawe, 1767,\u00a0 it reads, \u201c[Tomatoes] in some families, are much used in soups, and are also often used to pickle, both when they are green, and when they are ripe.\u201d\n There are numerous references and recipes for sauces made from tomatoes. Some of these recipes included garlic and spices, as well as vinegar \u2014 typical ingredients in modern-day tomato ketchup. Here\u2019s a recipe from the  Culina famulatrix medicin\u00e6: or, Receipts in modern cookery,\u00a0 by Alexander Hunter, published in 1810:\n      Who knows? There\u2019s much debate over the origin of this word. Some say it\u2019s a variant of a Chinese word for fish sauce. Others say it is a Malay word for the same.\n We know from references and recipes that by the mid 1700s, \u201cKetchup\u201d was a culinary term spoken frequently in English kitchens. The condiment, however, associated with it was not a tomato sauce, but rather a flavorful concoction, sometimes fermented, sometimes not, based on either anchovies or shellfish,\u00a0 walnuts, or mushrooms. Martha Washington included a recipe in her Booke of Cookery for pickled oysters, a fermented variant of ketchup.\n You can still find a direct descendant of 18th century ketchup either in your refrigerator, or if not there, on a shelf at your local grocer: it\u2019s called Worcestershire sauce (that\u2019s pronouced  \u201cwuus-ter-sher\u201d for those who, like me, have difficulty slurring the word enough). The bottle in my refrigerator has been there since, well, maybe even the 18th century!\n  If you\u2019re an 18th century reenactor, historian, or foodie and you still crave your red stuff, you\u2019re pretty safe to use a recipe like those above. Tomatoes will kill neither you nor generally your authenticity, unless, of course, you\u2019re deathly allergic to them. Just don\u2019t call it ketchup during the event; instead, call it tomato sauce. But if you want that authentic \u201cketchup experience,\u201d and you\u2019re up to making your own, there are many recipes found in the old cookbooks. Here are  a couple:\n  Ok, those are a bit time- and labor-intensive. Here\u2019s an authentic non-fermented recipe for mushroom ketchup that is quite tasty! We demonstrated this recipe in our  video from our  Cooking with Jas. Townsend &amp; Son video series.\n    Ingredients: 2lbs fresh mushrooms, wiped clean and broken or cut into small pieces. 2T Kosher or Sea Salt 2 -3 Bay Leaves 1 Large Onion, chopped Zest of 1 Lemon 1T Grated Horseradish 1/4t Ground Clove 1/2t Ground Allspice Pinch of Cayenne 1/2c Cider Vinegar\n Instructions: Combine the mushrooms, salt, and bay leaves in a non-metallic pot or  bowl. Cover and let set overnight.\n Transfer mushroom mixture to a  cooking pot and add the remaining ingredients. Bring to a boil over medium-high heat, then reduce heat to low to simmer the mixture for 15 minutes. (Optional: you could simmer the mixture longer, stirring all the while, to reduce the liquid to about half for a more concentrated flavor.)\n Remove from the heat and allow to cool. Strain out all the solids through a piece of cloth, squeezing or wringing the cloth to remove as much liquid as possible.\n  PLEASE NOTE! Don\u2019t throw away the wrung-out mushroom mixture! Spread it out on a baking sheet and dry it thoroughly in a 200-degree (F) oven. Remove the mushrooms when they are completely dry and hard. This can be ground into a powder and stored in a  tin for seasoning or left in its original form to be added to soups and stews. This mushroom seasoning is absolutely delicious!\n  While there may be earlier recipes for a tomato-based ketchup, the earliest we found was in the  Apicius Redivivus: Or, The Cook\u2019s Oracle, by\u00a0William Kitchiner from 1817. This is an interesting book in that it, like the aforementioned  book by Charlotte Mason, also includes a good number of ketchup recipes, including \u201cWhite Catsup\u201d made with white wine vinegar and anchovies, cucumber ketchup, a sweet orange and brandy flavored ketchup for puddings, \u201cCockle and Muscle\u201d ketchup, oyster ketchup, walnut ketchup, as well as mushroom ketchup. But it\u2019s the \u201cTomata Catsup\u201d that captures my attention.\n  This recipe seems to be a marriage of a typical tomato sauce recipe with a typical fish-based ketchup recipe.\n By the mid 1800\u2019s numerous recipes were written for tomato ketchup, many of which had dropped the fermented sea creatures from the list of ingredients. References, however, still are found from as late as the 1870\u2019s\u00a0 ( Check this link) which refer to the making of mushroom ketchup. So tomato ketchup hadn\u2019t entirely beaten out the competition yet.\n Our association of the word \u201cketchup\u201d to that red blot running down our shirts, is likely the result of some fancy promotion and distribution footwork by the all-familiar Heinz family, who got their start in 1876. By the turn of the 20th century they had made a name for themselves and had given the folks of Worcester a run for their money. It\u2019s also very likely that they changed forever the common perception of what ketchup was. By the early 1900s, they were shipping every year 12 million of those familiar glass bottles to kitchens around the world and to local diners like the one near you.\n  This entry was posted in  Recipe,  Video and tagged  anchovies,  catchup,  catsip,  ketchup,  mushrrom,  recipe,  sauce,  vinegar,  walnuts,  worchestershire. Bookmark the  permalink.", "posttime": "2020-05-28 21:17:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u534e\u76db\u987f,washington,\u756a\u8304\u9171", "title": "\u4e54\u6cbb\u00b7\u534e\u76db\u987f\u7528\u8fc7\u756a\u8304\u9171\u5417\uff1f(2012)", "title_en": "Did George Washington Use Ketchup? (2012)", "transed": 1, "url": "https://savoringthepast.net/2012/08/01/did-george-washington-use-ketchup/", "via": "", "real_tags": ["\u534e\u76db\u987f", "\u756a\u8304\u9171"]}, {"category": "", "categoryclass": "", "imagename": "829cc64ddb0ef3206700cd8c3106ffd1.jpeg", "infoid": 1004073, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5168\u9762\u8c03\u67e5\u5404\u79cd\u5f62\u5f0f\u7684\u51f8\u7248\u3001\u7248\u6750\u7b49\u53ca\u5176\u751f\u4ea7\u65b9\u6cd5\u548c\u673a\u5668\u3002\u6700\u8be6\u5c3d\u7684\u5de5\u4f5c\u5728.", "note_en": "Comprehensive survey of all forms of relief printing type, plates, etc. and the methods of and machines for their production. The most exhaustive work in...", "posttime": "2020-05-28 21:17:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5370\u5237,printing,\u8c03\u67e5", "title": "\u6392\u7248\u5370\u5237--\u8868\u9762(1916\u5e74)", "title_en": "Typographical Printing-Surfaces (1916)", "transed": 1, "url": "https://archive.org/details/LegrosGrantTypographicalPrintingSurfaces1916", "via": "", "real_tags": ["\u5370\u5237", "printing", "\u8c03\u67e5"]}]