[{"category": "", "categoryclass": "", "imagename": "a498557a343dfd09fe4bac13a5a04699.png", "infoid": 1007433, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "NimConf 2020\u5c06\u4e8e\u4e16\u754c\u534f\u8c03\u65f66\u670820\u65e5\u4e0a\u534811\u70b9\u4e3e\u884c\u3002\u4eceYouTube\u4e0a\u514d\u8d39\u76f4\u64ad\u3002", "note_en": "NimConf 2020 will take place on June 20th at 11am UTC. Streamed live and for free from YouTube.", "posttime": "2020-06-21 02:10:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,utc,\u534f\u8c03", "title": "NimConf 2020-\u7acb\u5373\u76f4\u64ad\u81f320\uff1a45 UTC[\u89c6\u9891]", "title_en": "NimConf 2020 \u2013 Live now until 20:45 UTC [video]", "transed": 1, "url": "https://conf.nim-lang.org/index.html?ref=hn", "via": "", "real_tags": ["2020", "utc", "\u534f\u8c03"]}, {"category": "", "categoryclass": "", "imagename": "2fbabde141b2fe942579872e591cf2ae.png", "infoid": 1007430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u662f\u4e00\u540d\u65b0\u7684Ubuntu Linux20.04LTS\u670d\u52a1\u5668\u7cfb\u7edf\u7ba1\u7406\u5458\u3002\u5982\u4f55\u5728Ubuntu Linux\u7248\u672c20.04 LTS\u670d\u52a1\u5668\u4e0a\u8bbe\u7f6eOpenVPN\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u5728\u516c\u5171Wi-Fi\u4e0a\u4fdd\u62a4\u6211\u7684\u6d4f\u89c8\u6d3b\u52a8\u4e0d\u88ab\u574f\u4eba\u653b\u51fb\uff0c\u5728\u8fde\u63a5\u52304G LTE\u7f51\u7edc\u65f6\u52a0\u5bc6\u6240\u6709\u6d41\u91cf\uff0c\u7b49\u7b49\uff1f\u7b80\u4ecbOpenVPN\u662f\u975e\u5e38\u6d41\u884c\u4e14\u529f\u80fd\u9f50\u5168\u7684SSL VPN(\u865a\u62df\u4e13\u7528\u7f51)\u8f6f\u4ef6\u3002\u5b83\u4f7f\u7528SSL/TLS\u534f\u8bae\u5b9e\u65bdOSI\u7b2c2\u5c42\u6216\u7b2c3\u5c42\u5b89\u5168\u7f51\u7edc\u6269\u5c55\u3002\u4e0e\u8bb8\u591a\u5176\u4ed6\u6d41\u884c\u8f6f\u4ef6\u4e00\u6837\uff0c\u5b83\u662f\u5f00\u653e\u6e90\u7801\u7684\u81ea\u7531\u8f6f\u4ef6\uff0c\u5e76\u5728GNU GPL\u4e0b\u5206\u53d1\u3002VPN\u5141\u8bb8\u60a8\u5b89\u5168\u5730\u8fde\u63a5\u5230\u4e0d\u5b89\u5168\u7684\u516c\u5171\u7f51\u7edc\uff0c\u4f8b\u5982\u673a\u573a\u6216\u9152\u5e97\u7684wifi\u7f51\u7edc\u3002\u5728\u8bb8\u591a\u4f01\u4e1a\u548c\u653f\u5e9c\u529e\u516c\u5ba4\u4e2d\uff0c\u9700\u8981VPN\u6765\u8bbf\u95ee\u60a8\u7684\u516c\u53f8\u670d\u52a1\u5668\u8d44\u6e90\u3002\u7ed5\u8fc7\u88ab\u5730\u7406\u5c4f\u853d\u7684\u7f51\u7ad9/\u5e94\u7528\u7a0b\u5e8f\u5e76\u589e\u52a0\u60a8\u7684\u9690\u79c1\u6216\u5728\u7ebf\u5b89\u5168\u7684\u53e6\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u3002\u672c\u6559\u7a0b\u63d0\u4f9b\u4e86\u5728Ubuntu Linux20.04LTS\u670d\u52a1\u5668\u4e0a\u914d\u7f6eOpenVPN\u670d\u52a1\u5668\u7684\u5206\u6b65\u8bf4\u660e\u3002", "note_en": "I am a new Ubuntu Linux 20.04 LTS server system administrator. How can I set up an OpenVPN Server on an Ubuntu Linux version 20.04 LTS server to shield my browsing activity from bad guys on public Wi-Fi, encrypt all traffic while connecting to 4G LTE network, and more?    Introduction OpenVPN is extremely popular and a full-featured SSL VPN (Virtual Private Network) software. It implements OSI layer 2 or 3 secure network extension using the SSL/TLS protocol. Like much other popular software, it is open-source, free software and distributed under the GNU GPL. A VPN allows you to connect securely to an insecure public network such as wifi network at the airport or hotel. In many enterprises and government offices, VPN is needed to access your corporate server resources. Another widespread usage to bypass the geo-blocked sites/apps and increase your privacy or safety online. This tutorial provides step-by-step instructions for configuring an OpenVPN server on Ubuntu Linux 20.04 LTS server.", "posttime": "2020-06-21 02:08:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ubuntu,\u8bbe\u7f6e,set,\u7f51\u7edc", "title": "Ubuntu 20.04 LTS\u57285\u5206\u949f\u5185\u8bbe\u7f6e\u597dOpenVPN\u670d\u52a1\u5668", "title_en": "Ubuntu 20.04 LTS Set Up OpenVPN Server in 5 Minutes", "transed": 1, "url": "https://www.cyberciti.biz/faq/ubuntu-20-04-lts-set-up-openvpn-server-in-5-minutes/", "via": "", "real_tags": ["ubuntu", "\u8bbe\u7f6e", "set", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007428, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u9519\u8bef\u62a5\u544a\u4e0e\u4ee5\u4e0b\u9519\u8bef\u91cd\u590d\uff1a\u9519\u8bef#1538615\uff1aCAT\u5bfc\u81f4\u767b\u5f55\u5c4f\u5e55\u6302\u8d77\u3002\u7f16\u8f91\u5220\u9664\u3002\n14.04\uff0c\u9501\u4f4f\u5c4f\u5e55\u53bb\u5403\u5348\u996d\uff0c\u732b\u5403\u5b8c\u5348\u996d\u56de\u6765\u5750\u5728\u952e\u76d8\u4e0a\uff0c\u767b\u5f55\u5c4f\u5e55\u88ab\u51bb\u7ed3\uff0c\u6ca1\u6709\u53cd\u5e94\u3002\n\u952e\u76d8\u8f93\u5165\u4f3c\u4e4e\u6b63\u5728\u88ab\u7f13\u51b2\uff0c\u7136\u540e\u7f13\u6162\u5730\u8f93\u5165\u5230\u5bc6\u7801\u6587\u672c\u8f93\u5165\u4e2d\uff0c\u8fd9\u963b\u6b62\u4e86\u767b\u5f55\u5c4f\u5e55\u4e2d\u7684\u5176\u4ed6\u4e8b\u4ef6(\u83dc\u5355\u3001Esc)\u3002\n&gt\uff1b\u6211\u5df2\u7ecf\u572815.10\u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u65e0\u6cd5\u590d\u5236\u5b83\u3002\u4f60\u7528\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u732b\uff1f\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u5b9a\u7684\u6743\u91cd\u5206\u5e03\u548c\u6293\u53d6\u884c\u4e3a\uff0c\u4ee5\u907f\u514d\u952e\u76d8\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\n\u5b83\u8fd8\u4f1a\u548c\u5c0f\u72d7\u4e00\u8d77\u5de5\u4f5c\u5417\uff0c\u8bf7\u627e\u4e00\u4e2a\u5e26\u5c0f\u72d7\u7684\u6765\u6d4b\u8bd5\u4e00\u4e0b\u5427\uff01\n\u6211\u4e5f\u9047\u5230\u8fc7\u51e0\u6b2115.04\u5de6\u53f3\u4ec0\u4e48\u90fd\u6ca1\u6709\u7684\u60c5\u51b5\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u5b8c\u5168\u505c\u6b62lightdm\uff0c\u7136\u540e\u4f7f\u7528systemctl\u542f\u52a8\u670d\u52a1\u3002\n\u7cfb\u7edf\u4f3c\u4e4e\u5b8c\u5168\u6ca1\u6709\u53cd\u5e94\uff0c\u4f46\u6211\u4e0d\u8ba4\u4e3a\u5b83\u5df2\u7ecf\u5b8c\u5168\u9501\u5b9a\uff1b\u5728\u6309\u4f4fBackspace\u51e0\u5206\u949f\u540e(UI\u4e2d\u6ca1\u6709\u663e\u793a\u5b57\u7b26\u5b9e\u9645\u4e0a\u6b63\u5728\u88ab\u5220\u9664)\uff0c\u6211\u6700\u7ec8\u8bbe\u6cd5\u6e05\u9664\u4e86\u5bc6\u7801\u8f93\u5165\u6846\u3002\u6309\u56de\u8f66\u952e(\u5373\u901a\u8fc7\u6267\u884c\u65e0\u6548\u767b\u5f55\u6765\u6e05\u9664\u5bc6\u7801\u6846)\u4f3c\u4e4e\u4e5f\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002\u770b\u8d77\u6765\u5bc6\u7801\u6846\u4e2d\u8fc7\u591a\u7684\u5b57\u7b26\u51cf\u6162\u4e86\u7528\u6237\u754c\u9762\u7684\u901f\u5ea6\u3002\n\u66f4\u6539\u4e3atty1\u5e76\u6267\u884cPS\u64cd\u4f5c\u5e76\u672a\u663e\u793alightdm\u5904\u4e8e\u4efb\u4f55\u5f02\u5e38\u72b6\u6001\u3002\n\u8fd9\u79cd\u4e8b\u6211\u5df2\u7ecf\u53d1\u751f\u8fc7\u5f88\u591a\u6b21\u4e86\u3002\u4e0a\u6b21\u53d1\u73b0\u6309\u4f4fEsc\u952e\u51e0\u79d2\u949f\u901a\u5e38\u4f1a\u6e05\u9664\u5b83\uff0c\u81f3\u5c11\u5047\u8bbe\u6240\u8bf4\u7684\u732b\u5df2\u7ecf\u79fb\u52a8\u4e86\u3002\n\u6211\u8bd5\u7740\u628a\u5b83\u590d\u5236\u5230VIVID\u4e0a\u3002\u95ee\u9898\u662f\u6211\u6ca1\u6709\u732b\u3002\u6211\u6709\u4e09\u6761\u72d7\uff0c\u4f46\u6211\u7684\u72d7\u90fd\u6ca1\u6709\u8db3\u591f\u7684\u8010\u5fc3\u5728\u6211\u4e0d\u5728\u7684\u65f6\u5019\u5750\u5728\u952e\u76d8\u4e0a\u3002\u6240\u4ee5\uff0c\u751f\u52a8\u7684+\u72d7\u4e3b\u4eba=\u597d\u7684\uff0c\u6ca1\u95ee\u9898\u3002\n\u9644\u4ef6\u662f\u5bf9\u60c5\u51b5\u7684\u51c6\u786e\u63cf\u8ff0\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u5728\u663e\u793a\u56fe\u7247\u65f6\u6ca1\u6709\u663e\u793alightdm\u5c4f\u5e55\u3002\n\u53ea\u9700\u9009\u62e9\u6240\u6709\u6587\u672c\uff0c\u7136\u540e\u4f7f\u7528Ctrl+A\u6216Ctrl+Shift\u548c\u5411\u5de6\u7bad\u5934\u5c06\u5176\u5220\u9664\u3002\u7136\u540e\u6309\u9000\u683c\u952e\u3002\n\u6211\u548c\u6211\u4eec\u7684\u732b\u6709\u8fc7\u51e0\u6b21\u8fd9\u6837\u7684\u7ecf\u5386\u3002\u4eca\u5929\u6211\u663e\u7136\u53ca\u65f6\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0cShift-Home Backspace\u5c31\u8db3\u591f\u89e3\u51b3\u5b83\u4e86\uff0c\u5c3d\u7ba1\u5b83\u82b1\u4e86\u51e0\u79d2\u949f\u7684\u65f6\u95f4\u3002\u6628\u5929\u7b49\u4e86\u51e0\u5206\u949f\u540e\u6211\u653e\u5f03\u4e86-\u9664\u4e86\u9f20\u6807\u79fb\u52a8\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94-\u6211\u4e0d\u5f97\u4e0d\u4ece\u6211\u7684\u624b\u673assh\u8fdb\u6765\u6740\u6b7b\u4f7f\u7528\u4e86\u6574\u4e2a\u5185\u6838\u7684compiz\u3002", "note_en": "This bug report is a duplicate of:\u00a0  Bug #1538615: Cat causes login screen to hang.   Edit  Remove\n         14.04, locked screen to go to lunch, upon return from lunch cat was sitting on keyboard, login screen was frozen &amp; unresponsive.\n  Seems like keyboard input is being buffered and then fed into the password text input slowly, this is blocking other events (menu, esc) in the login screen.\n          &gt;I have tested this on 15.10 and cannot reproduce it. What type of cat did you use? This may require a certain weight distribution and pawing behaviour to avoid keyboard buffer overflow.\n  will it also work with a small dog, please some one with a small size dogs test it!\n also happened to me with nothing around a few time 15.04, solved by fully stopping lightdm and then starting the service with systemctl\n      The system seemed to be completely unresponsive, but I don&#39;t think it had locked completely; after a few minutes of holding down backspace (with no indication in the UI that characters are actually being deleted), I managed to eventually clear the password entry box. Hitting enter (ie, to clear the password box by performing an invalid login) didn&#39;t seem to do anything either. It seemed like the excessive chars in the password box was slowing the UI down.\n Changing to tty1 and doing a ps didn&#39;t show lightdm to be in any unusual state.\n    I&#39;ve had this happen many times. Last time found out that holding the esc key for a couple seconds will usually clear it, at least assuming said cat has moved.\n  I have tried to replicate it on vivid. Problem is I don&#39;t have a cat. I have 3 dogs but none of my dogs had enough patience to sit on the keyboard while I was being away. So, vivid+dog owner = OK, no problem.\n  The attachment is an accurate description of the situation. However, the computer is not showing the lightdm screen at the moment of the picture.\n  Just select all the text and remove it with Ctrl + A or with Ctrl + Shift and Left Arrow. Then hit backspace.\n  I&#39;ve had this a few times with our cats. Today I evidently caught it in time and Shift-Home Backspace was enough to sort it out, although it took a few seconds. Yesterday I gave up after waiting several minutes - there was no response to anything other than mouse movement - and I had to ssh in from my phone and kill compiz, which was using an entire core.", "posttime": "2020-06-21 02:07:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u952e\u76d8,\u5750\u5728,sitting", "title": "\u732b\u5750\u5728\u952e\u76d8\u4e0a\u5d29\u6e83\uff0clightdm", "title_en": "Cat sitting on keyboard crashes lightdm", "transed": 1, "url": "https://bugs.launchpad.net/unity/+bug/1463112", "via": "", "real_tags": ["\u952e\u76d8", "\u5750\u5728", "sitting"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007427, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d2d\u4e70\u6570\u5b66\u4ece\u4f55\u800c\u6765\uff1a\u5177\u4f53\u5316\u7684\u5934\u8111\u5982\u4f55\u5728\u4e9a\u9a6c\u900a\u2713\u4e0a\u5b9e\u73b0\u6570\u5b66\u7b26\u5408\u6761\u4ef6\u7684\u8ba2\u5355\u514d\u8d39\u9001\u8d27", "note_en": "Buy Where Mathematics Come From: How The Embodied Mind Brings Mathematics Into Being on Amazon.com \u2713 FREE SHIPPING on qualified orders", "posttime": "2020-06-21 02:07:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u5b66,mathematics", "title": "\u6570\u5b66\u4ece\u4f55\u800c\u6765\uff1a\u5177\u8eab\u5fc3\u7075\u662f\u5982\u4f55\u4f7f\u6570\u5b66\u4ea7\u751f\u7684", "title_en": "Where Mathematics Come From: How the Embodied Mind Brings Mathematics into Being", "transed": 1, "url": "https://www.amazon.com/Where-Mathematics-Come-Embodied-Brings/dp/0465037712", "via": "", "real_tags": ["\u6570\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "4454a88028fa5d62942043f78ab91533.png", "infoid": 1007426, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c1d\u8bd5\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\u5f88\u5bb9\u6613\u3002\u4f46\u5728\u4e00\u4e2a\u8001\u7684\u5927\u578b\u9879\u76ee\u7684\u5f00\u53d1\u4e2d\u5f15\u5165\u5b83\u9700\u8981\u6280\u80fd\u3002\u5982\u679c\u65b9\u6cd5\u4e0d\u6b63\u786e\uff0c\u5206\u6790\u5668\u53ef\u80fd\u4f1a\u589e\u52a0\u5de5\u4f5c\uff0c\u51cf\u6162\u5f00\u53d1\u901f\u5ea6\uff0c\u5e76\u6253\u51fb\u56e2\u961f\u7684\u79ef\u6781\u6027\u3002\u8ba9\u6211\u4eec\u7b80\u8981\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u5c06\u9759\u6001\u5206\u6790\u6070\u5f53\u5730\u96c6\u6210\u5230\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u5f00\u59cb\u5c06\u5176\u4f5c\u4e3aCI/CD\u7684\u4e00\u90e8\u5206\u4f7f\u7528\u3002\u6700\u8fd1\uff0c\u6211\u5bf9\u201c\u9759\u6001\u5206\u6790\u5165\u95e8\u201d\u8fd9\u7bc7\u6587\u7ae0\u5f88\u611f\u5174\u8da3\uff0c\u540c\u65f6\u53c8\u4e0d\u4f1a\u8ba9\u56e2\u961f\u4e0d\u77e5\u6240\u63aa\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u7bc7\u4e0d\u9519\u7684\u6587\u7ae0\uff0c\u503c\u5f97\u4e00\u8bfb\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u6211\u770b\u6765\uff0c\u5bf9\u4e8e\u5982\u4f55\u5728\u5305\u542b\u5927\u91cf\u9057\u7559\u4ee3\u7801\u7684\u9879\u76ee\u4e2d\u5b89\u5168\u5730\u91c7\u7528\u9759\u6001\u5206\u6790\uff0c\u5b83\u4f3c\u4e4e\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u7b54\u6848\u3002\u8fd9\u7bc7\u6587\u7ae0\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5fcd\u53d7\u6280\u672f\u503a\u52a1\uff0c\u53ea\u80fd\u4f7f\u7528\u65b0\u7684\u4ee3\u7801\uff0c\u4f46\u5b83\u6ca1\u6709\u6db5\u76d6\u4ee5\u540e\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u6280\u672f\u503a\u52a1\u7684\u95ee\u9898\u3002\u6211\u4eec\u7684PVS-Studio\u56e2\u961f\u5c31\u8fd9\u4e00\u4e3b\u9898\u63d0\u51fa\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u89c2\u70b9\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5d4c\u5165\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\u7684\u95ee\u9898\u4e00\u822c\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u5982\u4f55\u514b\u670d\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ee5\u53ca\u5982\u4f55\u9010\u6b65\u65e0\u7f1d\u5730\u6d88\u9664\u6280\u672f\u503a\u52a1\u3002\u542f\u52a8\u5206\u6790\u4eea\u5e76\u67e5\u770b\u5176\u5de5\u4f5c\u539f\u7406\u901a\u5e38\u5f88\u5bb9\u6613[1]\u3002\u60a8\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u770b\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u9519\u8bef\uff0c\u751a\u81f3\u662f\u53ef\u6015\u7684\u6f5c\u5728\u6f0f\u6d1e\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u4fee\u590d\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u5728\u6b64\u4e4b\u540e\uff0c\u8bb8\u591a\u7a0b\u5e8f\u5458\u653e\u5f03\u4e86\u3002\u6240\u6709\u9759\u6001\u5206\u6790\u5668\u90fd\u4f1a\u53d1\u51fa\u8bef\u62a5\u3002\u8fd9\u662f\u9759\u6001\u4ee3\u7801\u5206\u6790\u65b9\u6cd5\u8bba\u7684\u7279\u6b8a\u6027\uff0c\u5bf9\u6b64\u65e0\u80fd\u4e3a\u529b\u3002\u56e0\u6b64\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u8d56\u65af\u5b9a\u7406[2]\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e5f\u65e0\u6d4e\u4e8e\u4e8b[3]\u3002\u5982\u679c\u5373\u4f7f\u662f\u4e00\u4e2a\u4eba\u4e5f\u4e0d\u80fd\u603b\u662f\u5206\u8fa8\u51fa\u67d0\u4e2a\u7279\u5b9a\u7684\u4ee3\u7801\u662f\u5426\u9519\u8bef\uff0c\u90a3\u4e48\u60a8\u5c31\u4e0d\u5e94\u8be5\u4ece\u7a0b\u5e8f\u4e2d\u671f\u5f85\u8fd9\u4e00\u70b9\uff1a)\u3002\u5982\u679c\u5df2\u7ecf\u914d\u7f6e\u4e86\u9759\u6001\u5206\u6790\u5668\uff0c\u5219\u8bef\u62a5\u4e0d\u662f\u95ee\u9898\uff1a\u5982\u679c\u6211\u4eec\u8c08\u8bba\u7684\u662fC\u6216C++\uff0c\u5219\u5305\u542b\u7279\u5b9a\u7ed3\u6784\u7684\u5b8f\u4f1a\u88ab\u6807\u8bb0(\u8fd9\u4f1a\u5bfc\u81f4\u65e0\u7528\u7684\u5bf9\u8c61\u51fa\u73b0\u5728\u4f7f\u7528\u8fd9\u4e9b\u5b8f\u7684\u6bcf\u4e2a\u5730\u65b9)\uff1b\n\u6267\u884c\u7c7b\u4f3c\u4e8e\u7cfb\u7edf\u529f\u80fd\u7684\u52a8\u4f5c\u7684\u81ea\u5b9a\u4e49\u529f\u80fd\u88ab\u6807\u8bb0(\u81ea\u5b9a\u4e49\u6a21\u62dfmemcpy\u6216printf)[4]\uff1b\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u671f10-15%[5]\u91cf\u7ea7\u7684\u4f4e\u6c34\u5e73\u5047\u9633\u6027\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c10\u4e2a\u5206\u6790\u5668\u8b66\u544a\u4e2d\u67099\u4e2a\u5c06\u6307\u793a\u4ee3\u7801\u4e2d\u5b58\u5728\u771f\u6b63\u7684\u95ee\u9898\uff0c\u6216\u8005\u81f3\u5c11\u662f\u201c\u5e26\u6709\u5f3a\u70c8\u6c14\u5473\u7684\u4ee3\u7801\u201d\u3002\u540c\u610f\uff0c\u8fd9\u4e2a\u573a\u666f\u975e\u5e38\u4ee4\u4eba\u6109\u5feb\uff0c\u5206\u6790\u5668\u6210\u4e3a\u7a0b\u5e8f\u5458\u771f\u6b63\u7684\u670b\u53cb\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u5728\u4e00\u4e2a\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u6700\u521d\u7684\u60c5\u51b5\u4f1a\u6709\u5f88\u5927\u4e0d\u540c\u3002\u5206\u6790\u5668\u5bf9\u9057\u7559\u4ee3\u7801\u53d1\u51fa\u6210\u767e\u4e0a\u5343\u7684\u8b66\u544a\u3002\u4e0d\u53ef\u80fd\u5f88\u5feb\u5f97\u5230\uff0c\u8fd9\u4e9b\u8b66\u544a\u4e2d\u54ea\u4e9b\u662f\u76f8\u5173\u7684\uff0c\u54ea\u4e9b\u662f\u4e0d\u76f8\u5173\u7684\u3002\u5750\u4e0b\u6765\u5f00\u59cb\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u8b66\u544a\u662f\u4e0d\u7406\u6027\u7684\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u4e3b\u8981\u5de5\u4f5c\u5c06\u505c\u6b62\u51e0\u5929\u6216\u51e0\u5468\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u56e2\u961f\u4e0d\u80fd\u6c89\u8ff7\u4e8e\u8fd9\u6837\u7684\u573a\u666f\u3002\u6b64\u5916\uff0c\u8fd8\u4f1a\u6709\u5927\u91cf\u7684\u4e0d\u540c\u4e4b\u5904\u7834\u574f\u53d8\u9769\u7684\u5386\u53f2\u3002\u5feb\u901f\u6279\u91cf\u4fee\u590d\u4ee3\u7801\u4e2d\u5982\u6b64\u5927\u91cf\u7684\u7247\u6bb5\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u5bfc\u81f4\u65b0\u7684\u6253\u5b57\u9519\u8bef\u548c\u9519\u8bef\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5728\u5bf9\u6297\u8b66\u544a\u7684\u6597\u4e89\u4e2d\u8fd9\u6837\u7684\u58ee\u4e3e\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u60a8\u5fc5\u987b\u627f\u8ba4\uff0c\u7531\u4e8e\u8be5\u9879\u76ee\u5df2\u7ecf\u6210\u529f\u8fd0\u884c\u591a\u5e74\uff0c\u5176\u4e2d\u7684\u5927\u90e8\u5206\u5173\u952e\u9519\u8bef\u90fd\u5df2\u7ecf\u4fee\u590d\u3002\u662f\u7684\uff0c\u8fd9\u4e9b\u4fee\u590d\u975e\u5e38\u6602\u8d35\uff0c\u4f60\u5fc5\u987b\u5bf9\u5b83\u4eec\u8fdb\u884c\u8c03\u8bd5\uff0c\u5f97\u5230\u7528\u6237\u5bf9\u9519\u8bef\u7684\u8d1f\u9762\u8bc4\u8bba\uff0c\u7b49\u7b49\u3002\u9759\u6001\u5206\u6790\u5668\u5c06\u6709\u52a9\u4e8e\u5728\u4ee3\u7801\u7f16\u5199\u9636\u6bb5\u5feb\u901f\u4e14\u5ec9\u4ef7\u5730\u4fee\u590d\u8bb8\u591a\u8fd9\u6837\u7684\u9519\u8bef\u3002\u4f46\u76ee\u524d\uff0c\u8fd9\u4e9b\u9519\u8bef\u5df2\u7ecf\u4fee\u590d\uff0c\u5206\u6790\u5668\u4e3b\u8981\u68c0\u6d4b\u65e7\u4ee3\u7801\u4e2d\u7684\u975e\u5173\u952e\u9519\u8bef\u3002\u6b64\u4ee3\u7801\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528\uff0c\u4e5f\u53ef\u80fd\u5f88\u5c11\u4f7f\u7528\uff0c\u5e76\u4e14\u5176\u4e2d\u7684\u9519\u8bef\u53ef\u80fd\u4e0d\u4f1a\u5bfc\u81f4\u660e\u663e\u7684\u540e\u679c\u3002\u6309\u94ae\u7684\u67d0\u4e2a\u5730\u65b9\u7684\u9634\u5f71\u53ef\u80fd\u662f\u9519\u8bef\u7684\u989c\u8272\uff0c\u4f46\u8fd9\u5e76\u4e0d\u59a8\u788d\u4efb\u4f55\u4eba\u4f7f\u7528\u8be5\u4ea7\u54c1\u3002\u5f53\u7136\uff0c\u5373\u4f7f\u662f\u5c0f\u9519\u8bef\u4e5f\u662f\u9519\u8bef\u3002\u6709\u65f6\u9519\u8bef\u53ef\u80fd\u4f1a\u9690\u85cf\u771f\u6b63\u7684\u6f0f\u6d1e\u3002\u7136\u800c\uff0c\u653e\u5f03\u4e00\u5207\uff0c\u82b1\u51e0\u5929/\u51e0\u5468\u7684\u65f6\u95f4\u6765\u5904\u7406\u90a3\u4e9b\u4e0d\u663e\u9732\u7684\u7f3a\u9677\u4f3c\u4e4e\u662f\u4e00\u4e2a\u503c\u5f97\u6000\u7591\u7684\u60f3\u6cd5\u3002\u7a0b\u5e8f\u5458\u4e0d\u65ad\u5730\u67e5\u770b\u5173\u4e8e\u65e7\u5de5\u4f5c\u4ee3\u7801\u2026\u7684\u6240\u6709\u8fd9\u4e9b\u8b66\u544a\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff1a\u8ba9\u6211\u4eec\u4e0d\u8981\u8fdb\u884c\u9759\u6001\u5206\u6790\u3002\u8ba9\u6211\u4eec\u53bb\u5199\u4e00\u4e2a\u65b0\u7684\u6709\u7528\u7684\u7279\u6027\u5427\u3002\u4ece\u4ed6\u4eec\u81ea\u5df1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4ed6\u4eec\u662f\u5bf9\u7684\u3002\u4ed6\u4eec\u8ba4\u4e3a\u5e94\u8be5\u5148\u6d88\u9664\u6240\u6709\u8fd9\u4e9b\u8b66\u544a\u3002\u53ea\u6709\u5728\u6b64\u4e4b\u540e\uff0c\u4ed6\u4eec\u624d\u80fd\u4ece\u5b9a\u671f\u4f7f\u7528\u4ee3\u7801\u5206\u6790\u5668\u4e2d\u83b7\u76ca\u3002\u5426\u5219\uff0c\u65b0\u7684\u8b66\u544a\u53ea\u4f1a\u6c89\u6d78\u5728\u65e7\u7684\u8b66\u544a\u4e2d\uff0c\u6ca1\u6709\u4eba\u4f1a\u6ce8\u610f\u5230\u5b83\u4eec\u3002\u8fd9\u4e0e\u7f16\u8bd1\u5668\u8b66\u544a\u662f\u76f8\u540c\u7684\u7c7b\u6bd4\u3002\u5efa\u8bae\u6ca1\u6709\u7f16\u8bd1\u5668\u8b66\u544a\u5e76\u4e0d\u662f\u5076\u7136\u7684\u3002\u5982\u679c\u67091000\u6761\u8b66\u544a\uff0c\u90a3\u4e48\u5f53\u5b83\u4eec\u53d8\u62101001\u6761\u65f6\uff0c\u5c31\u6ca1\u6709\u4eba\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u4e5f\u4e0d\u6e05\u695a\u5230\u54ea\u91cc\u53bb\u5bfb\u627e\u8fd9\u6761\u6700\u65b0\u7684\u8b66\u544a\u3002\u8fd9\u4e2a\u6545\u4e8b\u6700\u7cdf\u7cd5\u7684\u90e8\u5206\u662f\u5982\u679c\u697c\u4e0a\u6709\u4eba\u5f3a\u8feb\u4f60", "note_en": "It is easy to try a static code analyzer. But it requires skills to introduce it in the development of an old large project. If the approach is incorrect, the analyzer can add work, slow down development, and demotivate the team. Let&#39;s briefly discuss how to properly integrate static analysis into the development process and start using it as part of CI/CD.       \rRecently I got interested in the post &#34; Getting Started With Static Analysis Without Overwhelming the Team&#34;. On the one hand, this is a decent article that is worth reading. On the other hand, it seems to me that it didn&#39;t provide a complete answer on how to safely adopt static analysis in a project with a large amount of legacy code. The article says that you can put up with technical debt and work only with new code, but there it doesn&#39;t cover the question what to do with this technical debt later.   \rOur PVS-Studio team offers our own view on this topic. Let&#39;s look at how the problem of embedding a static code analyzer arises in general, how to overcome this problem, and how to gradually eliminate technical debt seamlessly.      \rIt is usually easy to start the analyzer and see how it works [ 1]. You can see some intriguing bugs, or even scary potential vulnerabilities in the code. You can even fix something, but after this many programmers give up.   \rAll static analyzers issue false positives. This is a particularity of the static code analysis methodology, and nothing can be done about it. So this is an unsolvable problem, which is confirmed by the Rice&#39;s theorem [ 2]. Machine learning algorithms will not help either [ 3]. If even a person can&#39;t always tell whether a particular code is wrong, you shouldn&#39;t expect this from the program :).   \rFalse positives aren&#39;t a problem if the static analyzer is already configured:     If we are talking about C or C++, macros containing specific constructs (that cause useless objects to appear in every place where such macros are used) are marked up;\n  Custom functions that perform actions similar to system functions are marked up (custom analog of  memcpy or  printf) [ 4];\n \rIn this case, we can expect a low level of false positives on the order of 10-15% [ 5]. In other words, 9 out of 10 analyzer warnings will indicate a real problem in the code, or at least \u00abcode with a strong smell\u00bb. Agree, this scenario is extremely pleasant, and the analyzer becomes a real friend of the programmer.       \rIn reality, in a large project, the initial picture will be quite different. The analyzer issues hundreds or thousands of warnings for legacy code. It is impossible to quickly get, which of these warnings are relevant and which are not. It&#39;s not rational to sit down and start dealing with all these warnings, since the main work in this case will stop for days or weeks. As a rule, the team can&#39;t indulge in following such a scenario. Also there will be a huge number of diffs that spoil the history of changes. A quick mass fixing of such a large number of fragments in the code will inevitably result in new typos and errors.   \rMost importantly, such a feat in the fight against warnings makes little sense. You have to admit that since the project has been successfully running for many years, most of the critical errors in it have already been fixed. Yes, these fixes were very expensive, you had to debug them, get negative user reviews about bugs, and so on. A static analyzer would help fix many of these errors at the code writing stage, quickly and cheaply. But at the moment, these errors are fixed anyway, and the analyzer mainly detects non-critical errors in the old code. This code may not be used, it may be used very rarely, and an error in it may not lead to noticeable consequences. It is possible that somewhere the shadow of the button is the wrong color, but this doesn&#39;t prevent anyone from using the product.   \rOf course, even minor mistakes are still mistakes. And sometimes the error can hide a real vulnerability. However, it seems a dubious idea to give up everything and spend days/weeks dealing with defects that don&#39;t reveal themselves obviously.   \rProgrammers keep looking and looking at all these warnings on the old working code\u2026 And they think: let&#39;s do without static analysis. Let&#39;s go write a new useful feature.   \rIn their own way, they are right. They think they should get rid of all these warnings first. Only after this they will be able benefit from regular use of the code analyzer. Otherwise, the new warnings will simply sink into the old ones, and no one will pay attention to them.   \rThis is the same analogy as with compiler warnings. It&#39;s no accident that it&#39;s recommended to have 0 compiler warnings. If there are 1000 warnings, then when they become 1001, no one will pay attention to this, and it is not clear where to look for this newest warning.       \rThe worst part of this story is if someone from upstairs forces you to use static code analysis at this point. This only demotivates the team, since from their point of view there will be an additional bureaucratic complexity that only hinders their work. The analyzer reports will not be viewed by anyone, and all usage will only be \u00abon paper\u00bb. That is, formally, analysis is built into the DevOps process, but in practice, this doesn&#39;t benefit anyone. We have heard detailed stories from conference visitors when chatting at the booths. Such experience can discourage programmers from using static analysis tools for a long time, if not always.      \rIn fact, there is nothing difficult or scary about integrating static analysis even in a large old project.      \rMoreover, the analyzer can be immediately made part of the continuous development process. For example, the PVS-Studio distribution has utilities for convenient viewing of the report in the format you need, and notifications to developers who wrote problematic sections of code. For those who are more interested in running PVS-Studio from CI/CD systems, I recommend reading the corresponding  section of the documentation and a series of articles:      \rBut let&#39;s return to the issue of a large number of false positives in the first stages of implementing code analysis tools.      \rModern commercial static analyzers allow you to review only new warnings that appear in new or modified code. The implementation of this mechanism differs, but the essence is the same. In the PVS-Studio static analyzer, this functionality is implemented as follows.   \rTo quickly start using static analysis, we suggest that PVS-Studio users apply the mass warning suppression mechanism [ 6]. The general idea is the following. Imagine, the user has started the analyzer and received many warnings. Since a project that has been developed for many years, is alive, still developing and bringing money, then most likely there won&#39;t be many warnings in the report indicating critical defects. In other words, critical bugs have already been fixed due to more expensive ways or with the help of feedback from customers. Thus, everything that the analyzer now finds can be considered technical debt, which is impractical to try to eliminate immediately.   \rYou can tell PVS-Studio to consider all these warnings irrelevant so far (to postpone the technical debt for later), and not to show them any more. The analyzer creates a special file where it stores information about as-yet-uninteresting errors. From now on, PVS-Studio will issue warnings only for new or modified code. By the way, it&#39;s all implemented in a very smart way. If an empty line is added at the beginning of a file, the analyzer will size up the situation as if nothing has really changed and will remain quiet. You can put the markup file in the version control system. Even though the file is large, it&#39;s not a problem, as there&#39;s no need to upload it very often.   \rFrom this point, developers will see only warnings related to newly written or modified code. So you can start using the analyzer, as they say, from the next day. You can get back to technical debt later and gradually correct errors and tweak the analyzer.   \rSo, the first problem with introducing the analyzer in a large old project is solved. Now let&#39;s figure out what to do with technical debt.      \rThe simplest and most natural thing is to spend some time analyzing massively suppressed analyzer warnings and gradually deal with them. In some cases you should fix bugs in code, in others \u2014 perform refactoring to tell the analyzer that the code is not problematic. A simple example:      \rMost C++ compilers and analyzers complain about such code, since there is high probability that they actually wanted to write  (a == b). But there is an unspoken agreement, and this is usually noted in the documentation, that if there are additional brackets, it is considered that the programmer deliberately wrote such code, and there is no need to trigger a warning for it. For example, the PVS-Studio documentation for the  V559 (CWE-481) diagnostic clearly states that the next line will be considered correct and safe:      \rAnother example: Is  break forgotten in this C++ code or not?      \rThe PVS-Studio analyzer will issue the  V796 (CWE-484) warning here. This may not be an error, and then you should give the analyzer a hint by adding the   [[fallthrough]] attribute or, for example,  __attribute__((fallthrough)):      \rWe can say that code changes of such kind don&#39;t really fix errors. Yes, this is true, but there are still two useful consequences. First, the analyzer report gets rid of false positives. Secondly, the code becomes more understandable for people who are involved in its maintenance. Which is extremely significant! For the sake of this alone, it is already worth going for small refactoring, so that the code becomes clearer and easier to maintain. Since the analyzer doesn&#39;t understand whether \u00abbreak\u00bb is needed or not, it will also be unclear to fellow programmers.   \rIn addition to bug fixes and refactoring, you can selectively suppress false warnings of the analyzer. You can disable some irrelevant diagnostics. For example, some consider  V550 warnings about comparing float/double values meaningless. And some consider them significant and worthy of study [ 7]. It is up to the development team to decide which warnings are relevant and which are not.   \rThere are other ways to suppress false warnings. For example, the macro markup which was mentioned earlier. All this is described in more detail in the documentation. The most vital thing is to understand that if you gradually and consistently work with false positives, there is nothing scary about them. The vast majority of uninteresting warnings disappear after configuration, leaving only places that really require careful study and some changes in the code.   \rAlso, we always help our clients set up PVS-Studio if there are any difficulties. Moreover, there were cases when we ourselves eliminated false warnings and corrected errors [ 8]. Just in case, I decided to mention that this option of extended cooperation is also possible :).      \rThere is another interesting approach of gradually improving the quality of the code by eliminating static analyzer warnings. The bottom line is that the number of warnings can only decrease.       \rThe number of warnings issued by the static analyzer gets counted. Quality gate is configured in such a way that now you can only commit code that doesn&#39;t increase the number of triggers. As a result, the process of consistent reducing of the warnings number starts by configuring the analyzer and editing errors.   \rEven if a person wants to cheat a little and decides to pass quality gate not by eliminating warnings in their new code, but by improving the old third-party code, it&#39;s not a big deal. All the same, the ratchet turns in one direction and gradually the number of defects will decrease. Even if a person doesn&#39;t want to edit their own new defects, they will still have to improve something in the neighboring code. At some point, the easy ways to reduce the number of warnings end, and there comes a moment when real errors will be fixed.   \rThis methodology is described in more detail in a very interesting article by Ivan Ponomarev &#34; Introduce Static Analysis in the Process, Don&#39;t Just Search for Bugs with It&#34;, which I recommend to read to anyone who is interested in improving the quality of code.      \rI hope that after checking out this article, readers will be more friendly to static analysis tools and will want to introduce them in the development process. If you still have questions, we are always ready to  consult users of our PVS-Studio static analyzer and help with its implementation.    \rThere are other typical doubts about whether a static analyzer can really be convenient and useful. I tried to dispel most of these doubts in the publication \u00abWhy You Should Choose the PVS-Studio Static Analyzer to Integrate into Your Development Process\u00bb [ 9].    \rThank you for your attention! Come  download and try the PVS-Studio analyzer.", "posttime": "2020-06-21 02:06:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u6790\u5668,analyzer,\u4ee3\u7801", "title": "\u5982\u4f55\u5728\u9057\u7559\u9879\u76ee\u4e2d\u5f15\u5165\u5206\u6790\u5668\uff0c\u800c\u4e0d\u4f1a\u8ba9\u56e2\u961f\u7070\u5fc3\u4e27\u6c14", "title_en": "How to introduce a analyzer in a legacy project and not to discourage the team", "transed": 1, "url": "https://habr.com/en/company/pvs-studio/blog/507504/", "via": "", "real_tags": ["\u5206\u6790\u5668", "analyzer", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007425, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9e\u73b0\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u7b56\u7565\u5fc5\u987b\u4e0e\u8bbe\u8ba1\u8303\u4f8b\u4e00\u8d77\u7814\u7a76\u3002\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u4e00\u79cd\u8bed\u8a00\u7684\u6210\u529f\u53d6\u51b3\u4e8e\u5176\u5b9e\u73b0\u7684\u8d28\u91cf\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u7b56\u7565\u7684\u80fd\u529b\u6709\u65f6\u4f1a\u5236\u7ea6\u8bed\u8a00\u7684\u8bbe\u8ba1\u3002\u8bed\u8a00\u7684\u5b9e\u73b0\u59cb\u4e8e\u8ba1\u7b97\u7a0b\u5e8f\u53e5\u6cd5\u7ed3\u6784\u6240\u9700\u7684\u8bed\u6cd5\u5206\u6790\u548c\u8bcd\u6c47\u626b\u63cf\u3002\u4eca\u5929\u7684\u8bed\u6cd5\u5206\u6790\u6280\u672f\uff0c\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\u63cf\u8ff0\uff0c\u662f\u6709\u53f2\u4ee5\u6765\u5f00\u53d1\u7684\u6700\u6f02\u4eae\u7684\u7b97\u6cd5\u4e4b\u4e00\uff0c\u662f\u4f7f\u7528\u6570\u5b66\u5bf9\u8c61\u521b\u5efa\u5b9e\u7528\u5de5\u5177\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5b83\u4eec\u662f\u503c\u5f97\u7684\u3002\u8981\u7406\u89e3\u8fd9\u4e9b\u7b56\u7565\u7684\u4f1f\u5927\u4e4b\u5904\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\u662f\u56de\u5230\u7b2c\u4e00\u4e2aFortran\u7f16\u8bd1\u5668\uff0c\u7814\u7a76\u6784\u5efa\u8be5\u7f16\u8bd1\u5668\u7684\u5148\u9a71\u4eec\u7528\u6765\u5b9e\u73b0\u8fd0\u7b97\u7b26\u4f18\u5148\u7684\u4e34\u65f6\u7b56\u7565\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u7b56\u7565\u975e\u5e38\u5de7\u5999\u3002\u5b9e\u73b0\u7684\u53e6\u4e00\u4e2a\u5e38\u89c1\u7ec4\u4ef6\u662f\u7f16\u8bd1\u5668\u7ec4\u4ef6\uff0c\u5b83\u4eec\u6267\u884c\u4ece\u9ad8\u7ea7\u8bed\u8a00\u8868\u793a\u5230\u9002\u5408\u4e8e\u7531\u771f\u5b9e\u6216\u865a\u62df\u673a\u6267\u884c\u7684\u4f4e\u7ea7\u5f62\u5f0f\u7684\u8f6c\u6362\u3002\u7ffb\u8bd1\u53ef\u4ee5\u63d0\u524d\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u5728\u6267\u884c\u671f\u95f4(\u6070\u597d\u53ca\u65f6)\u5b8c\u6210\uff0c\u6216\u8005\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002\u672c\u4e66\u8ba8\u8bba\u4e86\u8fd9\u4e24\u79cd\u7ffb\u8bd1\u3002\u6709\u6548\u5730\u5229\u7528\u5185\u5b58\u5c42\u6b21\u7ed3\u6784\uff0c\u5e76\u5229\u7528\u5904\u7406\u5668\u5185\u7684\u5e76\u884c\u6027\u3002\u8fd9\u4e9b\u6709\u65f6\u76f8\u4e92\u51b2\u7a81\u7684\u76ee\u6807\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ec4\u4ef6\u6765\u5b9e\u73b0\u7684\u3002\u867d\u7136\u8fd9\u4e2a\u4e3b\u9898\u901a\u5e38\u4e0d\u5728\u7f16\u8bd1\u5668\u7b2c\u4e00\u8bfe\u7684\u8303\u56f4\u4e4b\u5185\uff0c\u4f46\u672c\u4e66\u5728\u7b2c\u56db\u90e8\u5206\u4e2d\u8ba9\u8bfb\u8005\u53ef\u4ee5\u5f88\u597d\u5730\u4e86\u89e3\u7a0b\u5e8f\u4f18\u5316\u7684\u6982\u51b5\u3002\u8ba1\u7b97\u9886\u57df\u6700\u8fd1\u7684\u4e00\u4e2a\u91cd\u8981\u53d1\u5c55\u662f\u5e76\u884c\u6027\u7684\u666e\u53ca\uff0c\u5e76\u671f\u671b\u5728\u53ef\u9884\u89c1\u7684\u5c06\u6765\uff0c\u6027\u80fd\u63a7\u5236\u5c06\u4e3b\u8981\u662f\u6709\u6548\u5229\u7528\u8fd9\u79cd\u5e76\u884c\u6027\u7684\u7ed3\u679c\u3002\u968f\u7740\u5e76\u884c\u6027\u9010\u6e10\u6210\u4e3a\u8ba1\u7b97\u7684\u6807\u51c6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u7f16\u7a0b\u8bed\u8a00\u662f\u7a0b\u5e8f\u5458\u548c\u673a\u5668\u4e4b\u95f4\u7684\u6865\u6881\u3002\u53ea\u6709\u5728\u5b83\u4eec\u4e2d\uff0c\u7b97\u6cd5\u624d\u80fd\u88ab\u8868\u793a\u51fa\u6765\u624d\u80fd\u6267\u884c\u3002\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7684\u7814\u7a76\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u6559\u80b2\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u8981\u6c42\u7406\u89e3\u8fde\u63a5\u8ba1\u7b97\u7684\u4e0d\u540c\u65b9\u9762\u6240\u4f7f\u7528\u7684\u7b56\u7565\u3002\u8fc8\u514b\u5c14\u00b7\u65af\u79d1\u7279\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8bed\u7528\u5b66\u901a\u8fc7\u63d0\u51fa\u5bf9\u8fd9\u4e00\u4e3b\u9898\u7684\u5982\u6b64\u5e7f\u6cdb\u7684\u5904\u7406\uff0c\u662f\u5bf9\u6587\u5b66\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5de8\u5927\u8d21\u732e\u3002\u5b83\u662f\u5bf9\u7a0b\u5e8f\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7684\u7814\u7a76\uff0c\u5b83\u8981\u6c42\u7406\u89e3\u7528\u4e8e\u8fde\u63a5\u8ba1\u7b97\u7684\u4e0d\u540c\u65b9\u9762\u7684\u7b56\u7565\u3002\u56e0\u6b64\uff0c\u8fc8\u514b\u5c14\u00b7\u65af\u79d1\u7279\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8bed\u7528\u5b66\u662f\u5bf9\u6587\u732e\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u5de8\u5927\u8d21\u732e\uff0c\u5b83\u8981\u6c42\u7406\u89e3\u7528\u4e8e\u8fde\u63a5\u8ba1\u7b97\u7684\u4e0d\u540c\u65b9\u9762\u7684\u7b56\u7565\u3002\u56e0\u6b64\uff0c\u8fc8\u514b\u5c14\u00b7\u65af\u79d1\u7279\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u5b9e\u7528", "note_en": "Strategies to implement programming languages must be studied together withthe design paradigms.\u00a0 A reason is that success of a language depends on thequality of its implementation.\u00a0 Also, the capabilities of these strategiessometimes constraint the design of languages.\u00a0 The implementation of alanguage starts with parsing and lexical scanning needed to compute thesyntactic structure of programs.\u00a0 Today\u2019s parsing techniques, described inPart\u00a0I, are among the most beautiful algorithms ever developed and are agreat example of the use of mathematical objects to create practicalinstruments.\u00a0 They are worthwhile studying just as an intellectualachievement.\u00a0 They are of course of great practical value, and a good way toappreciate the greatness of these strategies is to go back to the firstFortran compiler and study the ad hoc, albeit highly ingenious, strategyused to implement precedence of operators by the pioneers that built thatcompiler.\u00a0 The other usual component of implementation are the compiler components thatcarry out the translation from the high-level language representation to alower level form suitable for execution by real or virtual machines.\u00a0 Thetranslation can be done ahead of time, during execution (just in time), orboth.\u00a0 The book discusses these approaches and implementation strategiesincluding the elegant mechanisms of translation driven by parsing.\u00a0 Toproduce highly efficient code, translation routines apply strategies toavoid redundant computations, make efficient use of the memory hierarchy,and take advantage of intra-processor parallelism.\u00a0 These, sometimesconflicting goals, are undertaken by the optimization components ofcompilers.\u00a0 Although this topic is typically outside the scope of a firstcourse on compilers, the book gives the reader access to a good overview ofprogram optimization in Part\u00a0IV.\u00a0 An important recent development in computing is the popularization ofparallelism and the expectation that, in the foreseeable future, performancegains will mainly be the result of effectively exploiting this parallelism.\u00a0The book responds to this development by presenting the reader with a rangeof topics in concurrent programming including mechanisms forsynchronization, communication, and coordination across threads.\u00a0 Thisinformation will become increasingly important as parallelism consolidatesas the norm in computing.\u00a0 Programming languages are the bridge between programmers andmachines.\u00a0 It isin them that algorithms must be represented for execution.\u00a0 The study ofprogramming languages design and implementation offers great educationalvalue by requiring an understanding of the strategies used to connectthe different aspects of computing.\u00a0 By presenting such an extensivetreatment of the subject, Michael Scott\u2019s  Programming LanguagePragmatics, is a great contribution to the literature and a valuablesource of information for computer scientists.\u00a0    Back to the book home page", "posttime": "2020-06-21 02:06:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u8bbe\u8ba1,programming,\u8bed\u8a00,language", "title": "\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8bed\u7528\u5b66", "title_en": "Programming Language Pragmatics", "transed": 1, "url": "https://www.cs.rochester.edu/u/scott/pragmatics/4e/foreword.shtml", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u8bbe\u8ba1", "\u8bed\u8a00", "language"]}, {"category": "", "categoryclass": "", "imagename": "004de7c7ef830c022b04eedfdd96c610.jpg", "infoid": 1007424, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5199\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u8f6f\u4ef6\u5de5\u7a0b\u9762\u8bd5\u3002\u6211\u7684\u89c2\u70b9\u662f\u533a\u5206\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u62db\u8058\u7ecf\u7406\u7684\u4e24\u79cd\u4e3b\u8981\u9762\u8bd5\u7c7b\u578b\u3002\u6709\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u65b9\u6cd5\uff0c\u8fd8\u6709\u6784\u5efa\u67d0\u7269\u6216\u8c08\u8bba\u60a8\u6784\u5efa\u4e86\u4ec0\u4e48\u7684\u65b9\u6cd5\u3002\u8fd9\u5e76\u4e0d\u5b8c\u5168\u662f\u4e8c\u5143\u7684\uff0c\u5728\u67d0\u4e9b\u9762\u8bd5\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u88ab\u8981\u6c42\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002\u8fd8\u9700\u8981\u8003\u8651\u7cfb\u7edf\u8bbe\u8ba1\u548c\u884c\u4e3a\u95ee\u9898\u3002\n\u6280\u672f\u9762\u8bd5\u5f88\u96be\u3002\u6295\u8d44\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a\u5f88\u56f0\u96be\u3002\u62db\u8058\u3001\u5458\u5de5\u7559\u4efb\u548c\u4e1a\u52a1\u6210\u672c\u90fd\u662f\u51b3\u5b9a\u8c01\u88ab\u9009\u4e2d\u7684\u56e0\u7d20\u3002\u4f5c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6bcf\u4e2a\u4eba\u90fd\u5728\u8d70\u81ea\u5df1\u7684\u804c\u4e1a\u6210\u957f\u4e4b\u8def\u3002\u6211\u5217\u51fa\u8fd9\u4e9b\u8d44\u6e90\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u90a3\u4e9b\u5728\u5c31\u4e1a\u5e02\u573a\u9886\u57df\u5bfc\u822a\u7684\u4eba\u6709\u6240\u51c6\u5907\uff0c\u5e76\u5c06\u8fd9\u4e9b\u8d44\u6e90\u4f5c\u4e3a\u884c\u4e1a\u7684\u53cd\u6620\u3002\u8fd9\u4e9b\u662f\u4e00\u4e9b\u5b66\u4e60\u8d44\u6e90\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u4eec\u5bf9\u4f60\u7684\u65c5\u7a0b\u5f88\u6709\u5e2e\u52a9\u3002\n\u9644\u5e26\u9879\u76ee\u662f\u5728\u4f4e\u538b\u529b\u6216\u65e0\u538b\u529b\u7684\u73af\u5883\u4e2d\u6d4b\u8bd5\u4f60\u7684\u6280\u80fd\u548c\u5c1d\u8bd5\u65b0\u4e8b\u7269\u7684\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u6709\u65f6\u5019\uff0c\u9762\u8bd5\u5b98\u5bf9\u4f60\u7684\u526f\u4e1a\u751a\u81f3\u6bd4\u4f60\u671d\u4e5d\u665a\u4e94\u7684\u5de5\u4f5c\u66f4\u611f\u5174\u8da3\uff01\u5982\u679c\u4f60\u5728\u79d1\u6280\u884c\u4e1a\u6ca1\u6709\u4efb\u4f55\u4f20\u7edf\u7684\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u4ece\u5934\u5f00\u59cb\u505a\u4e00\u4e2a\u7f51\u7edc\u9879\u76ee\u662f\u5c55\u793a\u4f60\u80fd\u529b\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u6784\u5efa\u526f\u9879\u76ee\u65f6\u53ef\u53c2\u8003\u7684\u4e00\u4e9b\u7ad9\u70b9\u548c\u6587\u7ae0\uff1a\n\u72ec\u7acb\u9ed1\u5ba2\uff1a\u662f\u4e00\u4e2a\u4e3a\u90a3\u4e9b\u5e0c\u671b\u5efa\u7acb\u5728\u7ebf\u9879\u76ee\u521b\u6536\u7684\u4eba\u63d0\u4f9b\u7684\u793e\u533a\u3002\u8fd9\u662f\u4e00\u4e2a\u5145\u6ee1\u6d3b\u529b\u3001\u76f8\u4e92\u652f\u6301\u7684\u793e\u533a\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5206\u4eab\u4f60\u7684\u9879\u76ee\u548c\u8fdb\u5c55\u3002\n\u5728\u201c\u5982\u4f55\u5728\u4e0d\u8f9e\u53bb\u65e5\u5e38\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u521d\u521b\u200a-\u200a\u201d\u4e00\u6587\u4e2d\uff0cJotForm\u7684\u521b\u59cb\u4eba\u827e\u7279\u91d1\u00b7\u5766\u514b\u6982\u8ff0\u4e86\u51e0\u4e2a\u53ef\u4ee5\u9760\u526f\u4e1a\u8fc7\u6d3b\u7684\u79df\u6237\uff1a\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u5766\u7eb3\u00b7\u514b\u91cc\u65af\u6ed5\u68ee\u6982\u8ff0\u4e86\u5982\u4f55\u8c08\u8bba\u4f60\u7684\u526f\u4e1a\u3002\u6587\u7ae0\u4e2d\u7684\u7247\u6bb5\uff1a\u201c\u53ea\u8981\u6709\u673a\u4f1a\u5c31\u8c08\u8c08\u4f60\u7684\u526f\u4e1a\u9879\u76ee\u201d\u3002\n\u5982\u679c\u4f60\u60f3\u6df1\u5165\u7814\u7a76\u8bb2\u6545\u4e8b\u548c\u6218\u7565\u53d9\u4e8b\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u4f60\u5173\u6ce8\u5b89\u8fea\u00b7\u62c9\u65af\u91d1(Andy Raskin)\uff0c\u4ee5\u83b7\u5f97\u5c0f\u8d34\u58eb\uff1a)\u3002\n\u9664\u4e86\u52aa\u529b\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u4e4b\u5916\uff0c\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u6377\u5f84\u53ef\u4f9b\u5b66\u4e60\u3002\u95ee\u9898\u5e76\u4e0d\u603b\u662f\u5f88\u5bb9\u6613\uff0c\u4f46\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u90fd\u9075\u5faa\u5b9a\u4e49\u7684\u6a21\u5f0f\u3002\u5b66\u4e60\u8fd9\u4e9b\u6a21\u5f0f\u9700\u8981\u5927\u91cf\u7684\u5de5\u4f5c\u548c\u7ec3\u4e60\u3002\u6211\u6700\u559c\u6b22\u7684\u5173\u4e8e\u79d1\u6280\u9762\u8bd5\u51c6\u5907\u8fc7\u7a0b\u7684\u535a\u5ba2\u5e16\u5b50\u6765\u81eaFacebook\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u963f\u91cc\u00b7\u7c73\u5c14(Ali Mir)\u3002\u5b83\u4eec\u4e0d\u662f\u957f\u7bc7\u6587\u7ae0\uff0c\u5b83\u4eec\u76f4\u622a\u4e86\u5f53\uff0c\u6ca1\u6709\u592a\u591a\u542b\u7cca\u4e4b\u5904\u3002\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u666e\u904d\u8ba4\u540c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u8fdb\u884c\u6280\u672f\u9762\u8bd5\u65f6\u4e86\u89e3\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4f1a\u5f88\u6709\u5e2e\u52a9\uff1a\n\u8fd9\u4e2aitsy-bitsy\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u5e93\u5305\u542b\u8bb8\u591a\u7528Javascript\u5b9e\u73b0\u7684\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u7684\u6307\u5bfc\u6027\u4ee3\u7801\u6f14\u7ec3\u3002\n\u8fd9\u4e9b\u662f\u5728\u8f6f\u4ef6\u5de5\u7a0b\u6280\u672f\u9762\u8bd5\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u641c\u7d22\u548c\u6392\u5e8f\u8fc7\u7a0b\u3002\n\u6478\u7d22\u7b97\u6cd5-\u514d\u8d39\u7684\u4e66\uff0c\u8bbe\u8ba1\u4e3a\u6613\u4e8e\u9075\u5faa\uff0c\u89e3\u91ca\u5e38\u89c1\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7b97\u6cd5\u3002\nHackerRank\u9762\u8bd5\u51c6\u5907\u5de5\u5177\u5305-HackerRank\u56e2\u961f\u56f4\u7ed5\u60a8\u9700\u8981\u4e86\u89e3\u7684\u5173\u952e\u6982\u5ff5\u7ec4\u7ec7\u7684\u7ec3\u4e60\u5217\u8868\u3002\n\u91cc\u65af\u59c6\u5b66\u6821\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u57fa\u7840\u4e0eJavaScript-\u6211\u4e00\u76f4\u5728\u8ddf\u968f\u5176\u4e2d\u7684\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u4e00\u4e2a\u6bd4\u8f83\u79d1\u5b66\u5b66\u4f4d\u3002\u201c\u3002\u4ed6\u4eec\u4f1a\u89e3\u91ca\u76f8\u5173\u6982\u5ff5\uff0c\u7136\u540e\u5411\u60a8\u4ecb\u7ecd\u5b66\u4e60\u6750\u6599\u7684\u5176\u4ed6\u8d44\u6e90(\u5982YouTube\u89c6\u9891\u548c\u7279\u5b9a\u7684\u7801\u6218\u95ee\u9898)\uff0c\u8fd9\u5bf9\u60a8\u975e\u5e38\u6709\u5e2e\u52a9\u3002\n\u9633\u987a/\u6280\u672f-\u9762\u8bd5-\u624b\u518c-GitHub\u56de\u8d2d\uff0c\u63d0\u4f9b\u6709\u7528\u7684\u975e\u6280\u672f\u63d0\u793a\u3002\u53e6\u5916\u8fd8\u6709\u8986\u76d6\u7b97\u6cd5\u3001\u524d\u7aef\u548c\u7cfb\u7edf\u8bbe\u8ba1\u65b9\u9762\u7684\u95ee\u9898\u3002\n\u7c73\u683c\u5148\u751f/\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053--\u4e0d\u8981\u8ba9\u6807\u9898\u5413\u5230\u4f60\u3002\u8fd9\u4efd\u56de\u8d2d\u4ece\u9ad8\u5c42\u6b21\u4e0a\u6db5\u76d6\u4e86\u4ece\u804c\u4e1a\u63d0\u793a\u5230\u6570\u636e\u7ed3\u6784\u3001\u5b89\u5168\u6027\u3001\u4f53\u7cfb\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5404\u79cd\u5185\u5bb9\u3002\u5b83\u6709\u5f88\u591a\uff0c\u4f46\u5bf9\u6982\u8ff0\u6982\u5ff5\u548c\u53d1\u73b0\u8981\u5b66\u4e60\u7684\u65b0\u4e1c\u897f\u5f88\u6709\u5e2e\u52a9\njwasham/\u8c37\u6b4c\u9762\u8bd5\u5927\u5b66-\u4e00\u4e2a\u4eba\u6210\u4e3a\u8c37\u6b4c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6709\u70b9\u75af\u72c2\u7684\u4efb\u52a1\u300248K+\u661f\u3002\u6211\u76f8\u4fe1\u4ed6\u6700\u7ec8\u5728\u4e9a\u9a6c\u900a\u5de5\u4f5c\u3002\u53bb\u60f3\u4e00\u60f3\u5427\u3002\n30\u4e2a\u7b2c\u4e8c\u6b21\u9762\u8bd5\u95ee\u9898--\u5728\u68d8\u624b\u7684JS\u9762\u8bd5\u4e2d\u4f60\u4e00\u5b9a\u4f1a\u9047\u5230\u7684\u5e38\u89c1\u9762\u8bd5\u95ee\u9898\u7684\u6e05\u5355\u548c\u7f51\u7ad9\u3002\n\u8fd9\u4e9b\u662f\u4e00\u4e9b\u514d\u8d39\u548c\u4ed8\u8d39\u7684\u670d\u52a1\uff0c\u81f4\u529b\u4e8e\u5e2e\u52a9\u4f60\u5728\u9762\u8bd5\u548c\u6280\u672f\u804c\u4e1a\u751f\u6daf\u4e2d\u63d0\u9ad8\u6c34\u5e73\u3002\n\u91c7\u8bbf\u86cb\u7cd5-\u91c7\u8bbf\u86cb\u7cd5\u662f\u4e00\u4e2a\u5173\u4e8e\u8282\u76ee\u3001\u91c7\u8bbf\u548c\u6982\u5ff5\u7684\u8be6\u7ec6\u8bb0\u5f55\u7684\u7f51\u7ad9\u3002\u8fd9\u53ef\u80fd\u662f\u6602\u8d35\u7684\u4e00\u5e74\u4f1a\u5458\u8d39\uff0c\u4f46\u5982\u679c\u4f60\u662f\u8ba4\u771f\u7684\uff0c\u8ba4\u771f\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\u53ef\u80fd\u662f\u503c\u5f97\u7684\u3002\u4ed6\u4eec\u8fd8\u63d0\u4f9b\u9000\u6b3e\u62c5\u4fdd\u3002\n\u6bcf\u65e5\u7f16\u7801\u95ee\u9898-\u6bcf\u5929\u514d\u8d39\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5411\u60a8\u53d1\u9001\u7f16\u7801\u95ee\u9898\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u7b54\u6848\u7b2c\u4e8c\u5929\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5bc4\u7ed9\u4f60\uff0c\u90a3\u5c31\u662f\u6bcf\u67088\u7f8e\u5143\u3002\n\u7ec3\u4e60-\u901a\u8fc748\u79cd\u8bed\u8a00\u76842,629\u4e2a\u7ec3\u4e60\u63d0\u5347\u60a8\u7684\u7f16\u7a0b\u6280\u80fd\uff0c\u5e76\u4e0e\u6211\u4eec\u656c\u4e1a\u7684\u5bfc\u5e08\u56e2\u961f\u8fdb\u884c\u5bcc\u6709\u6d1e\u5bdf\u529b\u7684\u8ba8\u8bba\u3002\u953b\u70bc\u6c38\u8fdc\u662f100%\u514d\u8d39\u7684\u3002\nCodewar-Codewar\u793e\u533a\u4ea7\u751f\u4e86\u6570\u4ee5\u5343\u8ba1\u7684\u95ee\u9898\u3002\u4f60\u7684\u7ec3\u4e60\u95ee\u9898\u6c38\u8fdc\u4e0d\u4f1a\u7528\u5b8c\u3002\u5b83\u4eec\u6309\u96be\u5ea6\u3001\u6982\u5ff5\u548c\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u7ec4\u7ec7\u3002\n\u5171\u540c\u8bbe\u8ba1-\u975e\u5e38\u68d2\u7684\u7528\u6237\u754c\u9762\u548c\u7528\u6237\u4f53\u9a8c\u3002\u6211\u559c\u6b22\u4ed6\u4eec\u6b63\u5728\u8fdb\u884c\u7684\u6e38\u620f\u5316\u548c\u79ef\u5206\u5236\u3002\nIrfan Baqui\uff1a\u738b\u724c\u7f16\u7801\u9762\u8bd5-\u6bcf\u5468\u514d\u8d39\u7ec3\u4e60\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u5728\u4e0b\u5468\u5f97\u5230\u89e3\u51b3\u65b9\u6848\u3002\nPramp-\u4e0e\u5b9e\u9645\u5de5\u7a0b\u5e08\u8fdb\u884c\u5b9e\u9645\u7ec3\u4e60\u3002\u9884\u7ea6\u65f6\u95f4\uff0c\u7ec3\u4e60\u4e0e\u771f\u4eba\u9762\u8c08\u3002\nLeetCode-\u4ece190\u591a\u4e2a\u95ee\u9898\u7684\u6269\u5c55\u5e93\u4e2d\u9009\u62e9\uff0c\u7f16\u5199\u4ee3\u7801\u5e76\u63d0\u4ea4\u60a8\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u770b\u770b\u60a8\u662f\u5426\u6b63\u786e\u5730\u89e3\u51b3\u4e86\u5b83\u3002\nHackerRank-\u975e\u5e38\u6d41\u884c\u7684\u7ec3\u4e60\u7f16\u7801\u95ee\u9898\u7684\u5e73\u53f0\u3002\u516c\u53f8\u4e5f\u4f7f\u7528HackerRank\u6765\u8bc4\u4f30\u5019\u9009\u4eba\u3002\nInterviewBit-\u7ec3\u4e60\u7f16\u5199\u9762\u8bd5\u95ee\u9898\u7684\u4ee3\u7801\u3002\u7ed9\u6211\u4eec\u65f6\u95f4\uff0c\u6211\u4eec\u4f1a\u7ed9\u4f60\u5e94\u5f97\u7684\u5de5\u4f5c\u3002\n\u4ee3\u7801--\u6210\u4e3a\u4e00\u540d\u66f4\u597d\u7684\u7a0b\u5e8f\u5458\u3002\u901a\u8fc7\u6211\u4eec\u7684\u8bfe\u7a0b\u53d1\u5c55\u60a8\u7684\u7f16\u7801\u6280\u80fd\u3002\u53c2\u52a0\u6211\u4eec\u7684\u6311\u6218\u5427\u3002\n\u6d4b\u8bd5\u7a79\u9876-\u83b7\u5f97\u8ba4\u8bc1\uff0c\u5e76\u5411\u6f5c\u5728\u96c7\u4e3b\u8bc1\u660e\u4f60\u7684\u77e5\u8bc6\u3002\u5728\u6211\u4eec\u7684\u4e00\u6b21\u516c\u5f00\u8003\u8bd5\u4e2d\u53d6\u5f97\u597d\u6210\u7ee9\uff0c\u4f60\u5c06\u83b7\u5f97\u4e00\u4efd\u514d\u8d39\u7684\u6210\u7ee9\u8bc1\u4e66\u3002\nCodeEval-\u4e86\u89e3\u60a8\u5bf9\u9876\u7ea7\u7a0b\u5e8f\u5458\u7684\u8bc4\u4ef7\u3002\u91ca\u653e\u4ee4\u4eba\u60ca\u53f9\u7684\u521b\u4e1a\u5de5\u4f5c\u548c\u9ed1\u5ba2\u4ea4\u6613\u3002\nromyilano/Learning-JavaScript-Data-Structures-and-Algorithms-\u5b66\u4e60javascript\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0cLoiane Groner\u8457(\u56fe\u4e66pdf)\u3002\nPHP7\u7684\u9ad8\u6548\u6570\u636e\u7ed3\u6784-\u5173\u4e8e\u4f7f\u7528\u73b0\u4ee3PHP\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u7684\u4e2d\u7b49\u6587\u7ae0\u3002\n30\u79d2\u7684php-code--\u7cbe\u5fc3\u6311\u9009\u7684\u6709\u7528PHP\u7247\u6bb5\u7684\u96c6\u5408\uff0c\u60a8\u53ef\u4ee5\u572830\u79d2\u6216\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u7406\u89e3\u8fd9\u4e9b\u4ee3\u7801\u3002\nPHP-Solid\u4e2d\u7684\u53ef\u9760\u539f\u5219\u4ee3\u8868\u4e86\u4e00\u7cfb\u5217\u6307\u5bfc\u539f\u5219\uff0c\u5982\u679c\u505a\u5f97\u597d\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6307\u5bfc\u539f\u5219\u6765\u7b80\u5316\u548c\u6f84\u6e05\u4ed6\u4eec\u7684\u4ee3\u7801\u3002\nPHP\u4e2d\u7684\u9762\u5411\u5bf9\u8c61BootCamp-\u6db5\u76d6PHP\u4e2d\u9762\u5411\u5bf9\u8c61\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u4e00\u4e9b\u68d8\u624b\u7684\u6982\u5ff5\uff0c\u5982\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u4e4b\u95f4\u7684\u533a\u522b\u3002\n\u96c4\u8fa9\u7684\u6027\u80fd\u6a21\u5f0f--\u4e86\u89e3\u5982\u4f55\u901a\u8fc7\u5c06\u66f4\u591a\u7684\u5de5\u4f5c\u63a8\u7ed9\u6570\u636e\u5e93\uff0c\u540c\u65f6\u4ecd\u7136\u4f7f\u7528\u96c4\u8fa9\u7684ORM\uff0c\u4ece\u800c\u6781\u5927\u5730\u63d0\u9ad8\u60a8\u7684Laravel\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u3002\n\u9ad8\u7ea7\u53e3\u624d--\u5f53\u7136\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5728\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u53e3\u624d\u7684\u8981\u9886\uff0c\u4f46\u662f\u4f60\u771f\u7684\u4e86\u89e3\u5e55\u540e\u662f\u600e\u4e48\u56de\u4e8b\u5417\uff1f\nGit\u6e38\u620f-Git\u6e38\u620f\u662f\u4e00\u6b3e\u57fa\u4e8e\u7ec8\u7aef\u7684\u6e38\u620f\uff0c\u5411\u7528\u6237\u4f20\u6388Git SCM(\u6e90\u4ee3\u7801\u63a7\u5236\u7ba1\u7406)\u7cfb\u7edf\u7684\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u529f\u80fd\u3002\nwebpack\uff1a\u6838\u5fc3\u6982\u5ff5-\u6838\u5fc3\u56e2\u961f\u6210\u5458\u4e0d\u5230\u4e00\u5c0f\u65f6\u7684webpack\u57fa\u7840\u8bfe\u7a0b\u3002\n50\u4e2a\u7f16\u7801\u9762\u8bd5\u95ee\u9898-\u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u5df2\u5c06\u6211\u4eec\u9010\u4e2a\u5b57\u8282\u4ecb\u7ecd\u8fc7\u7684\u6240\u6709\u9762\u8bd5\u95ee\u9898\u7ec4\u7ec7\u6210\u4e00\u4e2a\u65b9\u4fbf\u7684PDF\u683c\u5f0f\uff0c\u4f9b\u60a8\u968f\u65f6\u53c2\u8003\u3002\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u53ea\u9009\u62e9\u4e0e\u4f60\u7684\u9762\u8bd5\u76f4\u63a5\u76f8\u5173\u7684\u95ee\u9898\u3002\u672c\u6307\u5357\u5c06\u5b83\u4eec\u6574\u5408\u5230\u4e00\u4e2a\u5730\u65b9\uff0c\u5b8c\u5168\u514d\u8d39\u4f9b\u60a8\u4e0b\u8f7d\u3002&#34\uff1b\n500\u4e2a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5b9e\u8df5\u95ee\u9898\u53ca\u5176\u89e3\u51b3\u65b9\u6848-\u8fd9\u4e9b\u90fd\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u6309\u4e3b\u9898\u5206\u7ec4\uff0c\u5982\u6570\u7ec4\u3001BST\u3001\u52a8\u6001\u7f16\u7a0b\u7b49\u3002\n\u9762\u8bd5\u95ee\u9898\u7684\u53f2\u8bd7\u822c\u7684\u5217\u8868-\u53ef\u4ee5\u5728\u9762\u8bd5\u73af\u5883\u4e2d\u6d4b\u8bd5\u548c\u8bc4\u4f30\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6280\u80fd\u6216\u9886\u57df\u7684\u5217\u8868\u3002\n\u8fd9\u4e0e\u9762\u8bd5\u6709\u5207\u9898\u7684\u5173\u7cfb\u3002\u4ee5\u4e0b\u662f\u4ee5\u5ba2\u5ea7\u4f5c\u8005\u7684\u535a\u5ba2\u5e16\u5b50\u4e3a\u7279\u8272\u7684\u516c\u53f8\u540d\u5355\u3002\u5199\u535a\u5ba2\u548c\u6559\u522b\u4eba\u53ef\u4ee5\u662f\u7406\u89e3\u65b0\u6750\u6599\u3001\u5fae\u8c03\u5199\u4f5c\u6280\u5de7\u3001\u83b7\u5f97\u66dd\u5149\u7387\u751a\u81f3\u53ef\u80fd\u8d5a\u94b1\u7684\u6709\u529b\u9014\u5f84\uff01\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u9762\u5411\u65b0\u8d21\u732e\u8005\u7684\u6280\u672f\u535a\u5ba2\uff0c\u8bf7\u63d0\u4ea4\u516c\u5173\u3002\nio-\u591a\u5e74\u6765\uff0c\u8fd9\u4e00\u76f4\u662f\u6211\u5bfb\u627eweb\u5f00\u53d1\u6559\u7a0b\u7684\u6765\u6e90\u3002\u77f3\u5757\u4e0a\u7684\u5bc6\u7801\u3002\nSnipcart-\u5bf9Vue.js\u3001\u7535\u5b50\u5546\u52a1\u3001Javascript\u548cJAMstack\u611f\u5174\u8da3\u7684\u516c\u53f8\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u975e\u5e38\u68d2\u7684\u7f16\u5199\u548c\u4ee3\u7801\u793a\u4f8b\u3002\nJScrmbler-\u5bf9Javascript\u6559\u7a0b\u611f\u5174\u8da3\u7684\u516c\u53f8\u3002\u6211\u4e3a\u4ed6\u4eec\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u4f7f\u7528Vue.js\u548cVuelog\u5236\u4f5c\u9759\u6001\u535a\u5ba2\u5e94\u7528\u7684\u5e16\u5b50\u3002\u70b9\u51fb\u6b64\u5904\u67e5\u770b\u5168\u6587\n1)\u4e0d\u8981\u5356\u4f60\u4e0d\u4f1a\u7ed9\u81ea\u5df1\u4e70\u7684\u4e1c\u897f2)\u4e0d\u8981\u4e3a\u4f60\u4e0d\u5c0a\u91cd\u548c\u94a6\u4f69\u7684\u4eba\u5de5\u4f5c3)\u53ea\u548c\u4f60\u559c\u6b22\u7684\u4eba\u4e00\u8d77\u5de5\u4f5c\u3002\n\u5c31\u4e1a\u5e02\u573a\u7684\u53d8\u5316\u53ef\u80fd\u4f1a\u76f8\u5f53\u5feb\u3002\u516c\u53f8\u8fc5\u901f\u6269\u5f20\u548c\u6536\u7f29\u3002\u4eca\u5929\u7099\u624b\u53ef\u70ed\u7684\u521b\u4e1a\u516c\u53f8\u660e\u5929\u53ef\u80fd\u4f1a\u88c1\u5458\u3002\u4e0b\u9762\u7684\u94fe\u63a5\u53ef\u4ee5\u5e2e\u52a9\u60a8\u53d1\u73b0\u8981\u7533\u8bf7\u7684\u516c\u53f8\u548c\u5730\u70b9\u3002\u5916\u9762\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u4e16\u754c\u3002\u6709\u65f6\u9700\u8981\u5de5\u4f5c\u624d\u80fd\u627e\u5230\u60a8\u5728\u5176\u4e2d\u7684\u4f4d\u7f6e\uff1a)\u3002\nhttps://employbl.com/companies-Employbl\u662f\u65e7\u91d1\u5c71\u6e7e\u533a\u79d1\u6280\u516c\u53f8\u548c\u521d\u521b\u516c\u53f8\u7684\u76ee\u5f55\u3002\u6309\u7c7b\u578b\u6216\u5730\u70b9\u67e5\u627e\u516c\u53f8\uff0c\u4e0a\u4f20\u60a8\u7684\u7b80\u5386\u5e76\u627e\u5230\u9002\u5408\u60a8\u7684\u516c\u53f8\uff1a)\u3002\nhttps://whoishiring.io/-\u6211\u6709\u751f\u4ee5\u6765\u89c1\u8fc7\u7684\u6700\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6c42\u804c\u7f51\u7ad9\u805a\u5408\u5668\u3002\u522e\u6389\u6240\u6709\u7684\u677f\u5b50\uff0c\u5e76\u4e14\u6709\u4e00\u5f20\u6bcf\u5bb6\u516c\u53f8\u6240\u5728\u7684\u5730\u56fe\u3002\nhttps://huntr.co/-\u7528\u4e8e\u5728\u7279\u96f7\u6d1b\u98ce\u683c\u7684\u677f\u4e0a\u7ec4\u7ec7\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u641c\u7d22\u7684\u5de5\u5177\u3002\u4ed6\u4eec\u8fd8\u6709\u4e00\u4e2aChrome\u6269\u5c55\uff0c\u53ef\u4ee5\u5feb\u901f\u6dfb\u52a0\u6765\u81ea\u5404\u79cd\u6765\u6e90\u7684\u5de5\u4f5c\u3002\nhttps://breezy.hr-\u6211\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u62db\u8058\u4eba\u5458\u3002\u5b83\u5b9e\u9645\u4e0a\u662f\u4e3a\u4eba\u529b\u8d44\u6e90\u90e8\u95e8\u6784\u5efa\u7684\uff0c\u4f46\u6709\u4e00\u4e2aChrome\u6269\u5c55\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6dfb\u52a0\u60a8\u6b63\u5728\u8054\u7cfb\u7684\u4eba\u5458\u548c\u7279\u5b9a\u4e2a\u4eba\u3002\u8fd9\u6837\u4f60\u5c31\u4f1a\u8bb0\u5f97\u8ddf\u8fdb\uff0c\u53ef\u4ee5\u627e\u5230\u5fd7\u540c\u9053\u5408\u7684\u4eba\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u5982@your-domain.com\u3002\u7528\u4f60\u7684Gmail\u5e10\u6237\u6ce8\u518c\u662f\u884c\u4e0d\u901a\u7684\u3002\nhttps://betalist.com/jobs/collections-\u6309\u7c7b\u522b\u5206\u7ec4\u7684\u516c\u53f8\u548c\u5de5\u4f5c\uff0c\u5982\u5973\u6027\u9886\u5bfc\u7684\u521d\u521b\u516c\u53f8\u6216\u5206\u6563\u533a\u5757\u94fe\u76f8\u5173\u5de5\u4f5c\u7684\u6240\u6709\u4e8b\u60c5\u3002\nhttps://github.com/connor11528/tech-companies-and-startups-\u65e0\u803b\u7684\u63d2\u5934\u5728\u8fd9\u91cc\u3002\u6211\u548c\u4f4d\u4e8e\u65e7\u91d1\u5c71\u5e02\u4e2d\u5fc3\u7684\u516c\u53f8\u6709\u53e6\u4e00\u4efd\u56de\u8d2d\u534f\u8bae\u3002\u6570\u636e\u4ee5CSV\u6587\u4ef6\u7684\u5f62\u5f0f\u63d0\u4f9b\uff0c\u5e76\u5305\u62ec\u516c\u53f8\u5730\u5740\u3002\n\u6211\u4eec\u5206\u4eab\u4e86\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u5728\u65e7\u91d1\u5c71\u6e7e\u533a\u83b7\u5f97\u6280\u672f\u5b9e\u4e60\u673a\u4f1a\u7684\u7b14\u8bb0\u3002\u4e0d\u8fc7\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u5b9e\u4e60\u8fc7\uff0c\u7ade\u4e89\u4f3c\u4e4e\u5f88\u6fc0\u70c8\u3002\u6211\u8ba4\u4e3a\u627e\u5b9e\u4e60\u548c\u627e\u5de5\u4f5c\u6709\u5f88\u591a\u76f8\u540c\u7684\u89c4\u5219\uff0c\u5c3d\u7ba1\u66f4\u591a\u5730\u5173\u6ce8\u622a\u6b62\u65e5\u671f\u548c\u4ee5\u5b9e\u4e60\u4e3a\u91cd\u70b9\u7684\u804c\u4f4d\u3002\u671f\u5f85\u66f4\u591a\u5730\u4e86\u89e3\u548c\u5206\u4eab\u6e7e\u533a\u7684\u6280\u672f\u5b9e\u4e60\u8fc7\u7a0b\u3002\ud83d\udcc8", "note_en": "In a previous article I wrote about the  2 types of software engineering interviews. My point there was to distinguish between the two primary types of interviews you can expect from software engineer hiring managers. There\u2019s the data structures and algorithms approach and there\u2019s the build something or talk about what you\u2019ve built approach. It\u2019s not completely binary and in some interviews you may be asked to do both. There are also system design and behavioral questions to account for.\n Technical interviews are hard. Investing in software engineers can be trying. Hiring, employee retention and business costs all factor in to who gets picked. As software engineers we need to know what to expect. Each person is taking their own path to career growth. My intention with listing out these resources is to provide for those navigating the job market terrain and to hold these resources up as a reflection for the industry. These are some study resources that you many find helpful in your journey.\n   Side projects are a great way to test out your skills and try new things in a low to no pressure environment. Sometimes interviewers will be even more interested in your side projects than the work you did at your 9-5 job! If you don\u2019t have any traditional work experience in the tech industry making a web project from scratch is a great way to demonstrate what you\u2019re capable of. Below are a few sites and articles to reference when building a side project:\n Indie Hackers: is a community for people looking to build online projects that generate revenue. It\u2019s a vibrant, supportive community where you can share your projects and progress.\n In the article   How to build a startup\u200a\u2014\u200awithout quitting your day job Aytekin Tank, founder of  JotForm outlines a few tenants to live by with side projects:\n  In this post Tanner Christensen outlines   How to Talk About Your Side Projects. Snippet from the article: \u201cTalk about your side projects whenever you get a chance\u201d.\n  If you\u2019d like to dive more into storytelling and strategic narrative I highly recommend following   Andy Raskin for tips :)\n  There doesn\u2019t seem to be any shortcut for learning data structures and algorithms besides grinding it out. The problems are not always easy but the solutions generally do follow defined patterns. Learning the patterns takes a lot of work and practice. My favorite blog posts about the tech interview prep process come from  Ali Mir, Software Engineer at Facebook. They\u2019re not long articles; they\u2019re straight to the point without a lot of fluff.\n  These are some commonly agreed data structures it\u2019s helpful to know going into technical interviews:\n   This   itsy-bitsy-data-structures repo contains a guided code walkthrough of many of these data structures types implemented in Javascript.\n  These are searching and sorting processes to be aware of in technical software engineering interviews..\n     Grokking Algorithms - Free book designed to be easy to follow explaining common computer science algorithms.\n HackerRank Interview Prep Kit - Curated list of exercises from the HackerRank team organized around key concepts you&#39;ll need to know.\n Rithm School Computer Science Fundamentals with JavaScript - I&#39;ve been following along with some of this as I don&#39;t have a comp sci degree. They explain the concepts and then point you to additional resources for learning the material (like youtube videos and specific codewars problems) Very helpful.\n   yangshun/tech-interview-handbook - GitHub repo with helpful non-technical tips. Additionally has section covering Algorithm, Front End and System Design questions\n mr-mig/every-programmer-should-know - Don&#39;t let the title scare you. This repo covers at a high level things ranging from  Career Tips to  Data Structures,  Security,  Architecture and  Algorithms. It&#39;s a lot but can be helpful to overview concepts and find new things to learn\n jwasham/google-interview-university - One man&#39;s somewhat crazy task to become a google software engineer. 48k+ stars. I believe he ended up working at Amazon. go figure\n 30 second interview questions - A list and website of common interview questions you&#39;re bound to encounter during tricky JS interviews.\n   These are some free and paid services dedicated to helping you improve at interviews and in your tech career.\n Interview Cake - Interview Cake is a thoroughly documented site on programming interviews and concepts. It can be expensive for the year membership but if you&#39;re serious about buckling down to learn the fundamentals can be worth it. They also offer a money-back gaurantee.\n Daily Coding Questions - Coding question emailed to you everyday for free. If you want the answer emailed to you the following day it&#39;s $8/month.\n exercism - Level up your programming skills with 2,629 exercises across 48 languages, and insightful discussion with our dedicated team of welcoming mentors. Exercism is 100% free forever.\n codewars - Codewars has thousands of questions generated by the community. You&#39;ll never run out of practice problems. They&#39;re organized by difficulty, concept and programming language.\n codesignal - Really great user interface and user experience. I like the gamification and points system they have going on.\n Irfan Baqui: ace coding interviews - get one free problem to practice each week and get the solution next week\n  Pramp - Real practice with  actual engineers. Book a time and practice interviewing with real human beings\n LeetCode - Pick from an expanding library of more than 190 questions, code and submit your solution to see if you have solved it correctly.\n  HackerRank - Very popular platform for practicing coding questions. HackerRank is used by companies to evaluate candidates also\n InterviewBit - Practice Coding Interview Questions. Give us time and we get you the job you deserve.\n Codility - Become a better programmer. Develop your coding skills with our lessons. Take part in our challenges.\n  Testdome - Get certified and prove your knowledgeto potential employers. Score well on one of our public tests, and you will get a free certificate of achievement.\n CodeEval - Find out how you rate against top coders. Unlock awesome startup jobs and hacker deals.\n  romyilano/Learning-JavaScript-Data-Structures-and-Algorithms - Solutions to Learning JavaScript Data Structures and Algorithms by Loiane Groner ( book pdf)\n  Efficient data structures for PHP 7 - Medium article about implementing data structures with modern PHP\n 30-seconds-of-php-code - A curated collection of useful PHP snippets that you can understand in 30 seconds or less.\n SOLID Principles in PHP - SOLID represents a series of guidelines that developers can use to, if done well, simplify and clarify their code.\n Object Oriented Bootcamp in PHP - covers fundamentals of OOP in PHP, including tricky concepts like difference between Interfaces and Abstract Classes\n    Eloquent Performance Patterns - Learn how to drastically improve the performance of your Laravel applications by pushing more work to the database, all while still using the Eloquent ORM.\n Advanced Eloquent - Sure, you&#39;ve learned the essentials of using Eloquent in your applications, but do you really understand what&#39;s going on under the hood?\n  Git Game - The git-game is a terminal based game that teaches both new and advances users some pretty cool features of the git scm (source control management) system.\n  webpack: The Core Concepts - less than an hour long course on webpack fundamentals from core team member\n             50 Coding Interview Questions - &#34;In this guide, I\u2019ve organized all of the interview questions we\u2019ve ever covered on Byte by Byte into a convenient PDF for you to reference whenever you like. Over the years, I\u2019ve been careful to select only problems that are directly relevant to your interviews. This guide combines them all in one place and is completely free for you to download.&#34;\n 500 Data Structures and Algorithms practice problems and their solutions - these are good because they are grouped by topic such as array, BST, Dynamic Programming etc\n  Epic List of Interview Questions - a list of software engineer skills or areas that can be tested and evaluated in an interview context\n  This is tangentially related to interviews. Below is a list of companies that feature blog posts from guest authors. Blogging and teaching others can be a powerful way to comprehend new material, fine tune your writing skills, gain exposure and potentially even make money! If you have a technical blog open to new contributors please  submit a PR\n Scotch.io - this has been my go to source for web development tutorials for years. Code on the rocks\n Snipcart - company interested in Vue.js, eCommerce, Javascript and the JAMstack. There is some really great writing and code samples on here\n JScrambler - company interested in Javascript tutorials. I wrote a post for them on using Vue.js and Vuelog to make a static blogging app. Check out the full article  here\n   1) Don\u2019t sell anything you wouldn\u2019t buy yourself2) Don\u2019t work for anyone you don\u2019t respect and admire3) Work only with people you enjoy\n     The job market can move pretty fast. Companies expand and contract at rapid pace. The hot startup today could be laying everyone off tomorrow. The below links can help you discover companies and places to apply to. There&#39;s a whole world out there. Sometimes it takes work to find your place in it :)\n https://employbl.com/companies - Employbl is a directory of tech companies and startups in the Bay Area. Find companies by type or location, upload your resume and find a company right for you :)\n https://whoishiring.io/ - Most impressive job site aggregator I&#39;ve ever seen in my life. Scrapes all the boards and has a map of where every company is located.\n https://huntr.co/ - Tool for keeping your applications and search organized on a Trello-style board. they also have a chrome extension for quickly adding jobs from various sources.\n https://breezy.hr - I used this one as a recruiter. It is actually built for HR departments but has a chrome extension and can be helpful for adding people and specific individuals you&#39;re reaching out to. This way you remember to follow up and can find like-minded people. One catch is that you need a custom email address like @your-domain.com. Signing up with your gmail account won&#39;t work.\n https://betalist.com/jobs/collections - companies and jobs grouped by category like  female led startup or  decentralize all the things for blockchain related jobs.\n https://github.com/connor11528/tech-companies-and-startups - shameless plug here. I&#39;ve got another repo going with companies located in downtown San Francisco. The data is available as a CSV file and includes company addresses.\n  We&#39;ve shared some notes about  how to land a technical internship in the Bay Area. Tbh though I&#39;ve never done an internship and the competition seems fierce. I think a lot of the same rules apply to finding internships as finding jobs, though more focus on deadlines and internship-focused positions. Looking forward to learning and sharing more about the tech internship process in the Bay Area. \ud83d\udcc8", "posttime": "2020-06-21 01:10:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u9762\u8bd5,\u8f6f\u4ef6\u5de5\u7a0b\u5e08,interview", "title": "\u9762\u5411\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6280\u672f\u9762\u8bd5\u51c6\u5907\u8d44\u6e90", "title_en": "Tech interview prep resources for software engineers", "transed": 1, "url": "https://employbl.com/blog/tech-interview-prep-resources-software-engineers", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u9762\u8bd5", "\u8f6f\u4ef6\u5de5\u7a0b\u5e08", "interview"]}, {"category": "", "categoryclass": "", "imagename": "0a3fc96db5baccd4a142aedc3253da07.jpg", "infoid": 1007423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(CNN)\u7531\u4e8e\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u64a4\u9500\u4e86\u53d1\u653e\u7528\u4e8e\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u7684\u836f\u7269\u7684\u8bb8\u53ef\uff0c\u8054\u90a6\u653f\u5e9c\u88ab\u56f0\u57286300\u4e07\u5242\u7f9f\u57fa\u6c2f\u55b9\u4e0a\u3002\n\u653f\u5e9c\u57283\u6708\u4e0b\u65ec\u5f00\u59cb\u56e4\u79ef\u6350\u8d60\u7684\u7f9f\u57fa\u6c2f\u55b9\uff0c\u6b64\u524d\u7279\u6717\u666e\u603b\u7edf\u5c06\u5176\u5439\u6367\u4e3a\u975e\u5e38\u4ee4\u4eba\u9f13\u821e\u548c\u975e\u5e38\u5f3a\u5927\uff0c\u662f\u6e38\u620f\u89c4\u5219\u7684\u6539\u53d8\u8005\u3002\n\u4f46\u5468\u4e00\uff0c\u7f8e\u56fd\u98df\u54c1\u836f\u54c1\u76d1\u7763\u7ba1\u7406\u5c40\u64a4\u9500\u4e86\u4f7f\u7528\u8be5\u836f\u6cbb\u7597\u65b0\u51a0\u80ba\u708e\u7684\u7d27\u6025\u4f7f\u7528\u6388\u6743\uff0c\u79f0\u6ca1\u6709\u7406\u7531\u76f8\u4fe1\u8be5\u836f\u5bf9\u75c5\u6bd2\u6709\u6548\uff0c\u5e76\u8868\u793a\u5b83\u589e\u52a0\u4e86\u526f\u4f5c\u7528\u7684\u98ce\u9669\uff0c\u5305\u62ec\u5fc3\u810f\u95ee\u9898\u3002\n\u636e\u7f8e\u56fd\u536b\u751f\u4e0e\u516c\u4f17\u670d\u52a1\u90e8\u53d1\u8a00\u4eba\u5361\u7f57\u5c14\u00b7\u4e39\u79d1(Carol Danko)\u8868\u793a\uff0c\u8fd9\u4f7f\u5f97\u6218\u7565\u56fd\u5bb6\u50a8\u5907\u4e2d\u8fd8\u67096300\u4e07\u5242\u7f9f\u57fa\u6c2f\u55b9\uff0c\u5916\u52a0200\u4e07\u5242\u7531\u62dc\u8033\u6350\u8d60\u7684\u76f8\u5173\u836f\u7269\u6c2f\u55b9\u3002\n\u8bb8\u591a\u516c\u5171\u536b\u751f\u4e13\u5bb6\u6307\u51fa\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u662f\u5927\u6d41\u884c\u5386\u53f2\u4e0a\u4e0d\u5e78\u7684\u4e00\u7ae0\u3002\n\u5965\u5c14\u5df4\u5c3c\u5927\u5b66(University At Albany)\u516c\u5171\u536b\u751f\u5b66\u9662\u9662\u957f\u5927\u536b\u00b7\u970d\u5c14\u7279\u683c\u96f7\u592b(David Holtgrave)\u8bf4\uff0c\u5728\u5168\u56fd\u8303\u56f4\u5185\uff0c\u6211\u4eec\u975e\u5e38\u91cd\u89c6\u4e00\u79cd\u836f\u7269--\u7f9f\u57fa\u6c2f\u55b9\u3002\u970d\u5c14\u7279\u683c\u96f7\u592b\u4e0e\u4eba\u5408\u8457\u4e86\u4e00\u9879\u5173\u4e8e\u8be5\u836f\u7269\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u7684\u7814\u7a76\u3002\u6211\u62c5\u5fc3\u5386\u53f2\u4f1a\u5224\u65ad\u8fd9\u662f\u5bf9\u4e00\u79cd\u6cbb\u7597\u9014\u5f84\u7684\u8fc7\u5ea6\u6295\u8d44\uff0c\u800c\u4e0d\u662f\u66f4\u5e7f\u6cdb\u5730\u7814\u7a76\u66f4\u591a\u7684\u5019\u9009\u6cbb\u7597\u65b9\u6cd5\u3002\n\u5728FDA\u64a4\u9500\u6388\u6743\u4e4b\u524d\uff0c\u5e93\u5b58\u5df2\u7ecf\u5206\u53d1\u4e863100\u4e07\u5242\u3002\u8bfa\u534e\u516c\u53f8\u548c\u8fc8\u5170\u516c\u53f8\u5411\u5e93\u5b58\u6350\u8d60\u4e86\u5242\u91cf\u7684\u836f\u7269\u3002\n\u4e39\u79d1\u5728\u7ed9CNN\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\u5199\u9053\uff0cHHS\u6b63\u5728\u4e0e\u6350\u8d60\u8be5\u4ea7\u54c1\u7684\u516c\u53f8\u5408\u4f5c\uff0c\u4e3a\u4fdd\u7559\u5728\u56fd\u5bb6\u6218\u7565\u50a8\u5907\u4e2d\u7684\u4ea7\u54c1\u786e\u5b9a\u53ef\u7528\u7684\u9009\u62e9\u3002\n\u7f9f\u57fa\u6c2f\u55b9\u591a\u5e74\u6765\u4e00\u76f4\u7528\u4e8e\u6cbb\u7597\u759f\u75be\u3001\u7c7b\u98ce\u6e7f\u6027\u5173\u8282\u708e\u3001\u72fc\u75ae\u7b49\u75be\u75c5\u3002\u5728\u7279\u6717\u666e\u603b\u7edf\u5f00\u59cb\u515c\u552e\u7f9f\u57fa\u6c2f\u55b9\u4f5c\u4e3a\u65b0\u51a0\u80ba\u708e\u7684\u6cbb\u7597\u65b9\u6cd5\u540e\uff0c\u8fd9\u4e9b\u75be\u75c5\u7684\u60a3\u8005\u62a5\u544a\u8bf4\u5f88\u96be\u627e\u5230\u8fd9\u79cd\u836f\u7269\u3002\n\u4e0a\u4e2a\u6708\uff0cFDA\u4e13\u5458\u65af\u8482\u82ac\u00b7\u54c8\u6069\u535a\u58eb\u5199\u9053\uff0c\u4ed6\u7684\u673a\u6784\u57283\u6708\u4efd\u6388\u6743\u7f9f\u57fa\u6c2f\u55b9\u7684\u51b3\u5b9a\u662f\u57fa\u4e8e\u5bf9\u6b27\u76df\u6807\u51c6\u7684\u8bc4\u4f30\u548c\u5f53\u65f6\u53ef\u7528\u7684\u79d1\u5b66\u8bc1\u636e\u3002\n\u7136\u800c\uff0c\u8bb8\u591a\u4f20\u67d3\u75c5\u4e13\u5bb6\uff0c\u5305\u62ec\u90a3\u4e9b\u7814\u7a76\u8fc7\u8fd9\u79cd\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u7684\u836f\u7269\u7684\u4eba\u8bf4\uff0c\u4ece\u6765\u6ca1\u6709\u4efb\u4f55\u8bc1\u636e\u8868\u660e\u8fd9\u79cd\u836f\u7269\u5bf9\u75c5\u6bd2\u6709\u6548\u3002\n\u4eca\u5e743\u6708\uff0c\u7279\u6717\u666e\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u6cd5\u56fd\u7684\u4e00\u9879\u7814\u7a76\u663e\u793a\uff0c\u7f9f\u6c2f\u55b9\u548c\u6297\u751f\u7d20\u963f\u5947\u9709\u7d20\u5f88\u6709\u53ef\u80fd\u6210\u4e3a\u533b\u5b66\u53f2\u4e0a\u6700\u5927\u7684\u6e38\u620f\u89c4\u5219\u6539\u53d8\u8005\u4e4b\u4e00\u3002\u51e0\u4e2a\u6708\u6765\uff0c\u4ed6\u4e00\u76f4\u662f\u8be5\u836f\u7269\u7684\u5566\u5566\u961f\u957f\uff0c\u751a\u81f3\u8868\u793a\uff0c\u5728\u63a5\u89e6\u5230\u643a\u5e26\u75c5\u6bd2\u7684\u5de5\u4f5c\u4eba\u5458\u540e\uff0c\u4ed6\u81ea\u5df1\u670d\u7528\u4e86\u8fd9\u79cd\u836f\u7269\u3002\n\u90a3\u9879\u6cd5\u56fd\u7814\u7a76\u6709\u592a\u591a\u95ee\u9898\uff0c\u4ee5\u81f3\u4e8e\u53d1\u8868\u5b83\u7684\u793e\u4f1a\u5df2\u7ecf\u653e\u5f03\u4e86\u5b83\u3002\n\u9996\u5148\uff0c\u8fd9\u9879\u7814\u7a76\u5e76\u6ca1\u6709\u5f97\u51fa\u8fd9\u79cd\u836f\u7269\u5bf9Covid\u60a3\u8005\u6709\u6548\u7684\u7ed3\u8bba--\u53ea\u662f\u5b83\u51cf\u5c11\u4e86\u5728\u9f3b\u5b50\u548c\u5589\u5499\u4e2d\u53d1\u73b0\u7684\u75c5\u6bd2\u6570\u91cf\u3002\n\u5728\u8fd9\u91cc\u6ce8\u518c\uff0c\u6bcf\u5468\u4e8c\u4e0eCNN\u5065\u5eb7\u56e2\u961f\u7684\u6851\u6770\u00b7\u53e4\u666e\u5854\u535a\u58eb\u4e00\u8d77\u83b7\u5f97\u7ed3\u679c\u3002\n\u6b64\u5916\uff0c\u8fd9\u662f\u4e00\u9879\u975e\u5e38\u5c0f\u7684\u7814\u7a76-\u53ea\u670920\u540d\u60a3\u8005-\u5b83\u5ffd\u7565\u4e86\u670d\u7528\u7f9f\u57fa\u6c2f\u55b9\u5e76\u6b7b\u4ea1\u6216\u6700\u7ec8\u8fdb\u5165\u91cd\u75c7\u76d1\u62a4\u75c5\u623f\u7684\u60a3\u8005\u3002\n\u5728\u6536\u5230\u5bf9\u8be5\u7814\u7a76\u7684\u6295\u8bc9\u540e\uff0c\u5728\u5176\u533b\u5b66\u671f\u520a\u4e0a\u53d1\u8868\u8be5\u7814\u7a76\u7684\u201c\u56fd\u9645\u6297\u83cc\u5316\u7597\u7814\u7a76\u201d\u5f97\u51fa\u7ed3\u8bba\uff0c\u8ba4\u4e3a\u8be5\u7814\u7a76\u6ca1\u6709\u8fbe\u5230\u534f\u4f1a\u7684\u9884\u671f\u6807\u51c6\u3002\n\u81ea\u90a3\u4ee5\u540e\uff0c\u4e24\u9879\u4e3b\u8981\u7814\u7a76\u53d1\u73b0\uff0c\u8be5\u836f\u7269\u5bf9\u51a0\u72b6\u75c5\u6bd2\u65e0\u6548\u3002\u5176\u4e2d\u4e00\u9879\u53d1\u8868\u5728\u7f8e\u56fd\u533b\u5b66\u4f1a\u6742\u5fd7\u4e0a\u7684\u7814\u7a76\u8fd8\u663e\u793a\uff0c\u670d\u7528\u8fd9\u79cd\u836f\u7269\u7684Covid\u60a3\u8005\u906d\u53d7\u5fc3\u810f\u9aa4\u505c\u7684\u53ef\u80fd\u6027\u662f\u524d\u8005\u7684\u4e24\u500d\u591a\u3002", "note_en": "(CNN)The federal government is stuck with 63 million doses of hydroxychloroquine now that the US Food and Drug Administration has revoked permission for the drug to be distributed to treat coronavirus patients.\n  The government started stockpiling donated hydroxychloroquine in late March, after President Trump touted it as &#34;very encouraging&#34; and &#34;very powerful&#34; and a &#34;game-changer.&#34;\n    But Monday, the  FDA revoked its emergency use authorization to use the drug to treat Covid-19, saying there was &#34;no reason to believe&#34; the drug was effective against the virus, and that it increased the risk of side effects, including heart problems.\n  That leaves the Strategic National Stockpile with 63 million doses of hydroxychloroquine, plus another 2 million doses of chloroquine, a related drug donated by Bayer, according to Carol Danko, a spokesperson for the US Department of Health and Human Services.\n    Many public health experts point to all of this as an unfortunate chapter in the history of the pandemic thus far.\n  &#34;Nationally, we put a great emphasis on one drug, hydroxychloroquine,&#34; said David Holtgrave, the dean of the School of Public Health at the University at Albany, who co-authored a study of the drug as a treatment for coronavirus. &#34;I worry that history will judge this as having over-invested in one treatment pathway as opposed to looking more broadly at a larger number of treatment candidates.&#34;\n  Before the FDA revoked its authorization, the stockpile had already distributed 31 million doses. Novartis and Mylan donated doses of the drug to the stockpile.\n  &#34;HHS is working with the companies that donated the product to determine the available options for the product that remains in the Strategic National Stockpile,&#34; Danko wrote in a statement to CNN.\n  Hydroxychloroquine has been used for many years to treat diseases such as malaria, rheumatoid arthritis, lupus. After President Trump started touting hydroxychloroquine as a treatment for Covid-19,  patients with those illnesses reported having trouble finding the drug.\n     Last month, FDA Commissioner Dr. Stephen Hahn wrote that his agency&#39;s decision to authorize hydroxychloroquine in March &#34;was based on evaluation of the EUA criteria and the scientific evidence available at that time.&#34;\n  However, many infectious disease experts, including those who&#39;ve studied the drug for coronavirus, say there was never any evidence that the drug worked for the virus.\n  In March, Trump  tweeted that a French study showed hydroxychloroquine and the antibiotic azithromycin &#34;have a real chance to be one of the biggest game changers in the history of medicine.&#34; He continued to be a cheerleader for the drug for several months, and even said he took it himself after being exposed to staffers with the virus.\n That  French study had so many problems that the society that published it has backed away from it.\n First, the study didn&#39;t conclude that the drug worked for Covid patients -- just that it decreased the amount of the virus found in the nose and throat.\n Sign up here to get  The Results Are In with Dr. Sanjay Gupta every Tuesday from the CNN Health team.\n  Also, it was a very small study -- just 20 patients -- and it ignored patients who took hydroxychloroquine and died or ended up in the intensive care unit.\n    After complaints about the study, the  International Study of Antimicrobial Chemotherapy, which published the study in its medical journal, concluded that the study &#34;does not meet the Society&#39;s expected standard.&#34;\n Since then, two major studies have found that  the drug is ineffective against coronavirus. One of the studies, published in the Journal of the American Medical Association, also showed that Covid patients who took the drug were more than twice as likely to suffer cardiac arrest.", "posttime": "2020-06-21 00:52:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u73b0\u5728,doses,\u7814\u7a76", "title": "\u7f8e\u56fd\u653f\u5e9c\u73b0\u5728\u53d7\u56f0\u4e8e6300\u4e07\u5242\u7f9f\u6c2f\u55b9", "title_en": "The US Government Is Now Stuck with 63 Million Doses of Hydroxychloroquine", "transed": 1, "url": "https://www.cnn.com/2020/06/17/health/hydroxychloroquine-national-stockpile/index.html", "via": "", "real_tags": ["\u7f8e\u56fd", "\u73b0\u5728", "doses", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "ed4df090a7e9eb8c44c877ac6df5b85d.jpg", "infoid": 1007422, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u611f\u8c22SimpliSafe\u8d5e\u52a9\u672c\u89c6\u9891\u3002SimpliSafe\u662f\u5c61\u83b7\u6b8a\u8363\u7684\u5bb6\u5ead\u5b89\u5168\u4ea7\u54c1\uff0c\u53ef\u5168\u5929\u5019\u4fdd\u62a4\u60a8\u7684\u5bb6\u3002\u5b83\u771f\u7684\u5f88\u53ef\u9760\uff0c\u5f88\u5bb9\u6613..\u3002", "note_en": "Thanks SimpliSafe for sponsoring this video. SimpliSafe is award-winning home security that keeps your home safe around the clock. It's really reliable, easy...", "posttime": "2020-06-21 00:50:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u770b\u5f97\u89c1,ipad,simplisafe", "title": "\u4e3a\u76f2\u4eba\u5236\u4f5c\u4e00\u6b3e\u89e6\u6478\u5f0f\u201c\u770b\u5f97\u89c1\u201d\u7684iPad\u4fdd\u62a4\u5957", "title_en": "Making an iPad case for blind to \u201cSee\u201d with touch", "transed": 1, "url": "https://youtu.be/8Au47gnXs0w", "via": "", "real_tags": ["\u770b\u5f97\u89c1", "ipad"]}, {"category": "", "categoryclass": "", "imagename": "ea04b3389f148c16c5e919069f6f7130.jpeg", "infoid": 1007421, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u9891\u9053\u662f\u5173\u4e8e\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u548c\u7ade\u4e89\u6027\u7f16\u7a0b\u7684\u3002", "note_en": "This channel is about algorithms, data structures and competitive programming.", "posttime": "2020-06-21 00:49:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u52a8\u6001,\u7b97\u6cd5", "title": "\u521d\u5b66\u8005\u7684\u52a8\u6001\u89c4\u5212", "title_en": "Dynamic Programming for Beginners", "transed": 1, "url": "https://www.youtube.com/channel/UClnwNEngsXoIp_tgJ2jZWfw", "via": "", "real_tags": ["\u52a8\u6001", "\u7b97\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "41df76bac09ccdc2017349a0de2a3d2e.png", "infoid": 1007420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e03\u96f7\u7279\u00b7\u65af\u62c9\u7279\u91d1(Brett Slatkin)\u8457\u7684\u201c\u6709\u6548\u7684Python\uff1a\u5199\u51fa\u66f4\u597dPython\u768459\u79cd\u5177\u4f53\u65b9\u6cd5\u201d\u4e00\u4e66\u7684\u4ee3\u7801\u793a\u4f8b\u3002\n\u76ee\u524d\u4ecd\u5728\u4f7f\u7528\u7684Python\u6709\u4e24\u4e2a\u4e3b\u8981\u7248\u672c\uff1aPython2\u548cPython3\u3002\n\u786e\u4fdd\u5728\u60a8\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884cPython\u7684\u547d\u4ee4\u884c\u662f\u60a8\u671f\u671b\u7684\u7248\u672c\u3002\n\u66f4\u559c\u6b22Python3\u4f5c\u4e3a\u60a8\u7684\u4e0b\u4e00\u4e2a\u9879\u76ee\uff0c\u56e0\u4e3a\u8fd9\u662fPython\u793e\u533a\u7684\u4e3b\u8981\u5173\u6ce8\u70b9\u3002\n\u5728Python3\u4e2d\uff0c\u5b57\u8282\u5305\u542b8\u4f4d\u503c\u5e8f\u5217\uff0c\u5b57\u7b26\u4e32\u5305\u542bUnicode\u5b57\u7b26\u5e8f\u5217\u3002\u5b57\u8282\u548c\u5b57\u7b26\u4e32\u5b9e\u4f8b\u4e0d\u80fd\u4e0e\u8fd0\u7b97\u7b26(\u5982&gt\uff1b\u6216+)\u4e00\u8d77\u4f7f\u7528\u3002\n\u5728Python2\u4e2d\uff0c\u5b57\u7b26\u4e32\u5305\u542b8\u4f4d\u503c\u5e8f\u5217\uff0cUnicode\u5305\u542bUnicode\u5b57\u7b26\u5e8f\u5217\u3002\u5982\u679c\u5b57\u7b26\u4e32\u53ea\u5305\u542b7\u4f4dASCII\u5b57\u7b26\uff0c\u5219\u5b57\u7b26\u4e32\u548cUnicode\u53ef\u4ee5\u4e0e\u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\u3002\n\u4f7f\u7528\u52a9\u624b\u51fd\u6570\u786e\u4fdd\u60a8\u64cd\u4f5c\u7684\u8f93\u5165\u662f\u60a8\u671f\u671b\u7684\u5b57\u7b26\u5e8f\u5217\u7c7b\u578b(8\u4f4d\u503c\u3001UTF-8\u7f16\u7801\u5b57\u7b26\u3001Unicode\u5b57\u7b26\u7b49)\u3002\n\u5982\u679c\u8981\u5728\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6216\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f(\u5982&#39\uff1bRB&39\uff1b\u6216&#39\uff1bWB&#39\uff1b)\u6253\u5f00\u8be5\u6587\u4ef6\u3002\nPython\u7684\u8bed\u6cd5\u4f7f\u5f97\u7f16\u5199\u8fc7\u4e8e\u590d\u6742\u548c\u96be\u4ee5\u9605\u8bfb\u7684\u5355\u884c\u8868\u8fbe\u5f0f\u592a\u5bb9\u6613\u4e86\u3002\n\u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u79fb\u5230\u52a9\u624b\u51fd\u6570\u4e2d\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\u3002\nIF/ELSE\u8868\u8fbe\u5f0f\u63d0\u4f9b\u4e86\u6bd4\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u8bf8\u5982or\u548cadn\u4e4b\u7c7b\u7684\u5e03\u5c14\u8fd0\u7b97\u7b26\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u9009\u62e9\u3002\n\u907f\u514d\u5197\u957f\uff1a\u4e0d\u8981\u4e3a\u8d77\u59cb\u7d22\u5f15\u63d0\u4f9b0\uff0c\u4e5f\u4e0d\u8981\u4e3a\u7ed3\u675f\u7d22\u5f15\u63d0\u4f9b\u5e8f\u5217\u957f\u5ea6\u3002\n\u5207\u7247\u5141\u8bb8\u8d85\u51fa\u754c\u9650\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u7d22\u5f15\uff0c\u8fd9\u4f7f\u5f97\u5728\u5e8f\u5217\u7684\u524d\u8fb9\u754c\u6216\u540e\u8fb9\u754c(\u5982[\uff1a20]\u6216[-20\uff1a])\u4e0a\u8868\u793a\u5207\u7247\u53d8\u5f97\u5bb9\u6613\u3002\n\u5206\u914d\u7ed9\u5217\u8868\u5207\u7247\u5c06\u7528\u5f15\u7528\u7684\u5185\u5bb9\u66ff\u6362\u539f\u59cb\u5e8f\u5217\u4e2d\u7684\u8be5\u8303\u56f4\uff0c\u5373\u4f7f\u5b83\u4eec\u7684\u957f\u5ea6\u4e0d\u540c\u3002\n\u66f4\u559c\u6b22\u5728\u6ca1\u6709\u5f00\u59cb\u6216\u7ed3\u675f\u7d22\u5f15\u7684\u5207\u7247\u4e2d\u4f7f\u7528\u6b63\u6b65\u5e45\u503c\u3002\u5982\u679c\u53ef\u80fd\uff0c\u907f\u514d\u4f7f\u7528\u8d1f\u7684\u6b65\u5e45\u503c\u3002\n\u907f\u514d\u5728\u5355\u4e2a\u5207\u7247\u4e2d\u540c\u65f6\u4f7f\u7528\u5f00\u59cb\u3001\u7ed3\u675f\u548c\u8de8\u6b65\u3002\u5982\u679c\u60a8\u9700\u8981\u6240\u6709\u8fd9\u4e09\u4e2a\u53c2\u6570\uff0c\u8bf7\u8003\u8651\u6267\u884c\u4e24\u4e2a\u8d4b\u503c(\u4e00\u4e2a\u7528\u4e8e\u5207\u7247\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u8de8\u6b65)\u6216\u4f7f\u7528islice form itertools\u5185\u7f6e\u6a21\u5757\u3002\n\u5217\u8868\u7406\u89e3\u6bd4map\u548cfilter\u5185\u7f6e\u51fd\u6570\u66f4\u6e05\u6670\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u9700\u8981\u989d\u5916\u7684lambda\u8868\u8fbe\u5f0f\u3002\n\u5217\u8868\u7406\u89e3\u5141\u8bb8\u60a8\u8f7b\u677e\u5730\u8df3\u8fc7\u8f93\u5165\u5217\u8868\u4e2d\u7684\u9879\u76ee\uff0c\u884c\u4e3a\u6620\u5c04\u4e0d\u652f\u6301\uff0c\u800c\u65e0\u9700\u8fc7\u6ee4\u5668\u7684\u5e2e\u52a9\u3002\n\u5305\u542b\u4e24\u4e2a\u4ee5\u4e0a\u8868\u8fbe\u5f0f\u7684\u5217\u8868\u7406\u89e3\u975e\u5e38\u96be\u4ee5\u9605\u8bfb\uff0c\u5e94\u8be5\u907f\u514d\u3002\n\u901a\u8fc7\u5c06\u8fed\u4ee3\u5668\u4ece\u4e00\u4e2a\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u7684for\u5b50\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u7ec4\u6210\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u3002\nEnumererate\u63d0\u4f9b\u4e86\u7b80\u6d01\u7684\u8bed\u6cd5\uff0c\u7528\u4e8e\u5faa\u73af\u904d\u5386\u8fed\u4ee3\u5668\uff0c\u5e76\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u4ece\u8fed\u4ee3\u5668\u4e2d\u83b7\u53d6\u6bcf\u4e2a\u9879\u76ee\u7684\u7d22\u5f15\u3002\n\u60a8\u53ef\u4ee5\u63d0\u4f9b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u679a\u4e3e\uff0c\u4ee5\u6307\u5b9a\u5f00\u59cb\u8ba1\u6570\u7684\u6570\u5b57(\u9ed8\u8ba4\u503c\u4e3a\u96f6)\u3002\n\u5728Python3\u4e2d\uff0czip\u662f\u4e00\u4e2a\u751f\u6210\u5143\u7ec4\u7684\u61d2\u60f0\u751f\u6210\u5668\u3002\u5728Python2\u4e2d\uff0czip\u4ee5\u5143\u7ec4\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de\u5b8c\u6574\u7ed3\u679c\u3002\nitertools\u5185\u7f6e\u6a21\u5757\u4e2d\u7684zip_long\u51fd\u6570\u5141\u8bb8\u60a8\u5e76\u884c\u8fed\u4ee3\u591a\u4e2a\u8fed\u4ee3\u5668\uff0c\u800c\u4e0d\u8003\u8651\u5b83\u4eec\u7684\u957f\u5ea6(\u53c2\u89c1\u7b2c46\u9879\uff1a\u4f7f\u7528\u5185\u7f6e\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784)\u3002\nPython\u6709\u7279\u6b8a\u7684\u8bed\u6cd5\uff0c\u5141\u8bb8Else\u5757\u7d27\u8ddf\u5728For\u548cWhile\u5faa\u73af\u5185\u90e8\u5757\u4e4b\u540e\u3002\n\u4ec5\u5f53\u5faa\u73af\u4f53\u672a\u9047\u5230BREAK\u8bed\u53e5\u65f6\uff0c\u5faa\u73af\u540e\u7684ELSE\u5757\u624d\u4f1a\u8fd0\u884c\u3002\nTry/Finally\u590d\u5408\u8bed\u53e5\u5141\u8bb8\u60a8\u8fd0\u884c\u6e05\u7406\u4ee3\u7801\uff0c\u800c\u4e0d\u7ba1Try\u5757\u4e2d\u662f\u5426\u5f15\u53d1\u4e86\u5f02\u5e38\u3002\nElse\u5757\u53ef\u4ee5\u5e2e\u52a9\u60a8\u6700\u5c0f\u5316try\u5757\u4e2d\u7684\u4ee3\u7801\u91cf\uff0c\u5e76\u76f4\u89c2\u5730\u5c06\u6210\u529f\u6848\u4f8b\u4e0etry/exclude\u5757\u533a\u5206\u5f00\u6765\u3002\nElse\u5757\u53ef\u7528\u4e8e\u5728\u6210\u529f\u7684try\u5757\u4e4b\u540e\u4f46\u5728Finally\u5757\u4e2d\u7684\u516c\u5171\u6e05\u7406\u4e4b\u524d\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002\n\u8fd4\u56deNONE\u4ee5\u6307\u793a\u7279\u6b8a\u542b\u4e49\u7684\u51fd\u6570\u662f\u9519\u8bef\u4f18\u5148\u7684\uff0c\u56e0\u4e3a\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d\uff0cNONE\u548c\u5176\u4ed6\u503c(\u4f8b\u5982\uff0c\u96f6\uff0c\u7a7a\u5b57\u7b26\u4e32)\u7b49\u503c\u4e3aFALSE\u3002\n\u5f15\u53d1\u5f02\u5e38\u4ee5\u6307\u793a\u7279\u6b8a\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u8fd4\u56deNone\u3002\u671f\u671b\u8c03\u7528\u4ee3\u7801\u5728\u8bb0\u5f55\u5f02\u5e38\u65f6\u6b63\u786e\u5904\u7406\u5b83\u4eec\u3002\n\u95ed\u5305\u51fd\u6570\u53ef\u4ee5\u5f15\u7528\u5b9a\u4e49\u5b83\u4eec\u7684\u4efb\u4f55\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u3002\n\u5728Python3\u4e2d\uff0c\u4f7f\u7528\u975e\u672c\u5730\u8bed\u53e5\u6307\u793a\u95ed\u5305\u4f55\u65f6\u53ef\u4ee5\u4fee\u6539\u5176\u5c01\u95ed\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u3002\n\u5728Python2\u4e2d\uff0c\u4f7f\u7528\u53ef\u53d8\u503c(\u5982\u5355\u9879\u5217\u8868)\u6765\u89e3\u51b3\u975e\u672c\u5730\u8bed\u53e5\u7684\u4e0d\u8db3\u3002\n\u751f\u6210\u5668\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u751f\u6210\u4f20\u9012\u7ed9\u751f\u6210\u5668\u51fd\u6570\u4f53\u4e2d\u7684\u8f93\u51fa\u8868\u8fbe\u5f0f\u7684\u4e00\u7ec4\u503c\u3002\n\u751f\u6210\u5668\u53ef\u4ee5\u4e3a\u4efb\u610f\u5927\u7684\u8f93\u5165\u4ea7\u751f\u4e00\u7cfb\u5217\u8f93\u51fa\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5de5\u4f5c\u8bb0\u5fc6\u4e0d\u5305\u62ec\u6240\u6709\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\n\u6ce8\u610f\u591a\u6b21\u8fed\u4ee3\u8f93\u5165\u53c2\u6570\u7684\u51fd\u6570\u3002\u5982\u679c\u8fd9\u4e9b\u53c2\u6570\u662f\u8fed\u4ee3\u5668\uff0c\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u5947\u602a\u7684\u884c\u4e3a\u548c\u9057\u6f0f\u7684\u503c\u3002\nPython\u7684\u8fed\u4ee3\u5668\u534f\u8bae\u5b9a\u4e49\u4e86\u5bb9\u5668\u548c\u8fed\u4ee3\u5668\u5982\u4f55\u4e0eITER\u548cNEXT\u5185\u7f6e\u51fd\u6570\u3001for\u5faa\u73af\u548crelateexpression\u4ea4\u4e92\u3002\n\u901a\u8fc7\u5c06ITER\u65b9\u6cd5\u5b9e\u73b0\u4e3a\u751f\u6210\u5668\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9a\u4e49\u81ea\u5df1\u7684\u53ef\u8fed\u4ee3\u5bb9\u5668\u7c7b\u578b\u3002\n\u5982\u679c\u5bf9\u67d0\u4e2a\u503c\u8c03\u7528ITER\u4e24\u6b21\u4f1a\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u5219\u53ef\u4ee5\u68c0\u6d4b\u5230\u8be5\u503c\u662f\u8fed\u4ee3\u5668(\u800c\u4e0d\u662f\u5bb9\u5668)\uff0c\u7136\u540e\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\u3002\n\u901a\u8fc7\u5728def\u8bed\u53e5\u4e2d\u4f7f\u7528*args\uff0c\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u6570\u91cf\u53ef\u53d8\u7684\u4f4d\u7f6e\u53c2\u6570\u3002\n\u60a8\u53ef\u4ee5\u5c06\u5e8f\u5217\u4e2d\u7684\u9879\u7528\u4f5c\u5e26*\u8fd0\u7b97\u7b26\u7684\u51fd\u6570\u7684\u4f4d\u7f6e\u53c2\u6570\u3002\n\u5c06*\u8fd0\u7b97\u7b26\u4e0e\u751f\u6210\u5668\u4e00\u8d77\u4f7f\u7528\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5185\u5b58\u4e0d\u8db3\u5e76\u5d29\u6e83\u3002\n\u5f53\u5173\u952e\u5b57\u4e0e\u4f4d\u7f6e\u53c2\u6570\u6df7\u6dc6\u65f6\uff0c\u5173\u952e\u5b57\u53ef\u4ee5\u6e05\u695a\u5730\u8bf4\u660e\u6bcf\u4e2a\u53c2\u6570\u7684\u7528\u9014\u3002\n\u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5173\u952e\u5b57\u53c2\u6570\u4f7f\u5411\u51fd\u6570\u6dfb\u52a0\u65b0\u884c\u4e3a\u53d8\u5f97\u5f88\u5bb9\u6613\uff0c\u7279\u522b\u662f\u5f53\u51fd\u6570\u5177\u6709\u73b0\u6709\u8c03\u7528\u65b9\u65f6\u3002\n\u95ed\u5305\u51fd\u6570\u53ef\u4ee5\u5f15\u7528\u5b9a\u4e49\u5b83\u4eec\u7684\u4efb\u4f55\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u3002\n\u5728Python3\u4e2d\uff0c\u4f7f\u7528\u975e\u672c\u5730\u8bed\u53e5\u6307\u793a\u95ed\u5305\u4f55\u65f6\u53ef\u4ee5\u4fee\u6539\u5176\u5c01\u95ed\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u3002\n\u5728Python2\u4e2d\uff0c\u4f7f\u7528\u53ef\u53d8\u503c(\u5982\u5355\u9879\u5217\u8868)\u6765\u89e3\u51b3\u975e\u672c\u5730\u8bed\u53e5\u7684\u4e0d\u8db3\u3002\n\u4f7f\u7528\u4ec5\u9650\u5173\u952e\u5b57\u7684\u53c2\u6570\u5f3a\u5236\u8c03\u7528\u65b9\u4e3a\u53ef\u80fd\u6df7\u6dc6\u7684\u51fd\u6570\u63d0\u4f9b\u5173\u952e\u5b57\u53c2\u6570\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u63a5\u53d7\u591a\u4e2a\u5e03\u5c14\u6807\u5fd7\u7684\u51fd\u6570\u3002\nPython2\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528**kwargs\u5e76\u624b\u52a8\u5f15\u53d1TypeError\u5f02\u5e38\u6765\u6a21\u62df\u51fd\u6570\u7684\u4ec5\u5173\u952e\u5b57\u53c2\u6570\u3002\n\u5728\u9700\u8981\u5b8c\u6574\u7c7b\u7684\u7075\u6d3b\u6027\u4e4b\u524d\uff0c\u5c06namedtuple\u7528\u4e8e\u8f7b\u91cf\u7ea7\u3001\u4e0d\u53ef\u53d8\u7684\u6570\u636e\u5bb9\u5668\u3002\n\u5f53\u5185\u90e8\u72b6\u6001\u5b57\u5178\u53d8\u5f97\u590d\u6742\u65f6\uff0c\u79fb\u52a8\u8bb0\u8d26\u4ee3\u7801\u4ee5\u4f7f\u7528\u591a\u4e2a\u52a9\u624b\u7c7b\u3002\n\u5bf9\u4e8ePython\u4e2d\u7ec4\u4ef6\u4e4b\u95f4\u7684\u7b80\u5355\u63a5\u53e3\uff0c\u901a\u5e38\u53ea\u9700\u8981\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u548c\u5b9e\u4f8b\u5316\u7c7b\u3002\nPython\u4e2d\u5bf9\u51fd\u6570\u548c\u65b9\u6cd5\u7684\u5f15\u7528\u662f\u7b2c\u4e00\u7c7b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u4e00\u6837\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u3002\n\u901a\u8fc7\u8c03\u7528\u7279\u6b8a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u50cf\u8c03\u7528\u666e\u901aPython\u51fd\u6570\u4e00\u6837\u8c03\u7528\u7c7b\u7684\u5b9e\u4f8b\u3002\n\u5f53\u60a8\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765\u7ef4\u62a4\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u5b9a\u4e49\u4e00\u4e2a\u63d0\u4f9b\u8c03\u7528\u65b9\u6cd5\u7684\u7c7b\uff0c\u800c\u4e0d\u662f\u5b9a\u4e49\u4e00\u4e2a\u6709\u72b6\u6001\u95ed\u5305(\u53c2\u89c1\u7b2c15\u9879\uff1a&#34\uff1b\u4e86\u89e3\u95ed\u5305\u5982\u4f55\u4e0e\u53d8\u91cf\u4f5c\u7528\u57df\u4ea4\u4e92)\u3002\nPython\u7684\u6807\u51c6\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f(MRO)\u89e3\u51b3\u4e86\u8d85\u7c7b\u521d\u59cb\u5316\u987a\u5e8f\u548c\u83f1\u5f62\u7ee7\u627f\u7684\u95ee\u9898\u3002\n\u5f53\u6df7\u5408\u7c7b\u53ef\u80fd\u9700\u8981\u65f6\uff0c\u5728\u5b9e\u4f8b\u7ea7\u522b\u4f7f\u7528\u53ef\u63d2\u5165\u884c\u4e3a\u6765\u63d0\u4f9b\u6309\u7c7b\u5b9a\u5236\u3002\n\u4ece\u5934\u5f00\u59cb\u8ba1\u5212\uff0c\u5141\u8bb8\u5b50\u7c7b\u66f4\u591a\u5730\u4f7f\u7528\u5185\u90e8API\u548c\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u5730\u5c06\u5176\u9501\u5b9a\u3002\n\u4f7f\u7528\u53d7\u4fdd\u62a4\u5b57\u6bb5\u7684\u6587\u6863\u6765\u5f15\u5bfc\u5b50\u7c7b\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4f7f\u7528\u79c1\u6709\u5c5e\u6027\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\u3002\n\u53ea\u8003\u8651\u4f7f\u7528\u79c1\u6709\u5c5e\u6027\uff0c\u4ee5\u907f\u514d\u4e0e\u60a8\u65e0\u6cd5\u63a7\u5236\u7684\u5b50\u7c7b\u7684\u547d\u540d\u51b2\u7a81\u3002\n\u8ba9\u60a8\u7684\u81ea\u5b9a\u4e49\u5bb9\u5668\u7c7b\u578b\u7ee7\u627f\u81ea\u5b9a\u4e49\u7684\u5728\u96c6\u5408.abc\u4e2d\u5b9a\u4e49\u7684\u63a5\u53e3\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u7c7b\u4e0e\u6240\u9700\u7684\u63a5\u53e3\u548c\u884c\u4e3a\u76f8\u5339\u914d\u3002\n\u5f53\u60a8\u53d1\u73b0\u81ea\u5df1\u8fc7\u5ea6\u4f7f\u7528@Property\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u91cd\u6784\u4e00\u4e2a\u7c7b\u548c\u6240\u6709\u8c03\u7528\u70b9\u3002\n\u4e0d\u8981\u7ea0\u7ed3\u4e8e\u8bd5\u56fe\u786e\u5207\u5730\u7406\u89e3getAttribute\u662f\u5982\u4f55\u4f7f\u7528\u63cf\u8ff0\u7b26\u534f\u8bae\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u5c5e\u6027\u7684\u3002\n\u8bf7\u7406\u89e3\uff0cgetattr\u5728\u8bbf\u95eeamissing\u5c5e\u6027\u65f6\u53ea\u88ab\u8c03\u7528\u4e00\u6b21\uff0c\u800cgetattribute\u5728\u6bcf\u6b21\u8bbf\u95ee\u5c5e\u6027\u65f6\u90fd\u4f1a\u88ab\u8c03\u7528\u3002\n\u901a\u8fc7\u4f7f\u7528\u6765\u81eaSuper()(\u5373Object\u7c7b)\u7684\u65b9\u6cd5\u76f4\u63a5\u8bbf\u95eeinstanceAttributes\uff0c\u907f\u514dgetattribute\u548csetattr\u4e2d\u7684\u65e0\u9650\u9012\u5f52\u3002\n\u4f7f\u7528\u5143\u7c7b\u6765\u786e\u4fdd\u5728\u5b9a\u4e49\u5b50\u7c7b\u65f6\uff0c\u5728\u6784\u9020\u5176\u7c7b\u578b\u7684\u5bf9\u8c61\u4e4b\u524d\uff0c\u5b50\u7c7b\u7684\u7ed3\u6784\u662f\u826f\u597d\u7684\u3002\n\u5143\u7c7b\u7684\u65b0\u65b9\u6cd5\u662f\u5728\u6574\u4e2a\u6b63\u6587\u5904\u7406\u5b8cclass\u8bed\u53e5\u4e4b\u540e\u8fd0\u884c\u7684\u3002\n\u5143\u7c7b\u5141\u8bb8\u60a8\u5728\u7a0b\u5e8f\u4e2d\u6bcf\u6b21\u5bf9\u57fa\u7c7b\u8fdb\u884c\u5b50\u7c7b\u5316\u65f6\u81ea\u52a8\u8fd0\u884c\u6ce8\u518c\u4ee3\u7801\u3002\n\u4f7f\u7528\u5143\u7c7b\u8fdb\u884c\u7c7b\u6ce8\u518c\u53ef\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u9519\u8fc7\u6ce8\u518c\u8c03\u7528\uff0c\u4ece\u800c\u907f\u514d\u9519\u8bef\u3002\n\u901a\u8fc7\u4f7f\u7528\u5143\u7c7b\u548c\u63cf\u8ff0\u7b26\uff0c\u53ef\u4ee5\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u5f31\u5f15\u7528\u6a21\u5757\u3002\n\u5b50\u8fdb\u7a0b\u4e0ePython\u89e3\u91ca\u5668\u5e76\u884c\u8fd0\u884c\uff0c\u4f7f\u60a8\u80fd\u591f\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8CPU\u4f7f\u7528\u7387\u3002\n\u7531\u4e8e\u5168\u5c40\u89e3\u91ca\u5668\u9501(GIL)\uff0cPython\u7ebf\u7a0b\u53ef\u4ee5\u5728\u591a\u4e2aCPU\u6838\u5fc3\u4e0a\u5e76\u884c\u4f7f\u7528\u5b57\u8282\u7801\u3002\n\u5c3d\u7ba1\u6709\u4e86GIL\uff0cPython\u7ebf\u7a0b\u4ecd\u7136\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u770b\u4f3c\u540c\u65f6\u505a\u591a\u4ef6\u4e8b\u60c5\u7684\u7b80\u5355\u65b9\u6cd5\u3002\n\u4f7f\u7528Python\u7ebf\u7a0b\u5e76\u884c\u6267\u884c\u591a\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\u8fd9\u5141\u8bb8\u60a8\u5728\u8ba1\u7b97\u7684\u540c\u65f6\u6267\u884c\u963b\u585eI/O\u3002\n\u5373\u4f7fPython\u6709\u4e00\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff0c\u60a8\u4ecd\u7136\u6709\u8d23\u4efb\u4fdd\u62a4\u6ca1\u6709\u9501\u7684\u5bf9\u8c61\u3002\n\u5982\u679c\u60a8\u5141\u8bb8\u591a\u7ebf\u7a0b\u5728\u6ca1\u6709\u9501\u5b9a\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u60a8\u7684\u7a0b\u5e8f\u5c06\u635f\u574f\u5b83\u4eec\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u7ba1\u9053\u662f\u7ec4\u7ec7\u4f7f\u7528\u591a\u4e2aPython\u7ebf\u7a0b\u5e76\u53d1\u8fd0\u884c\u7684\u5de5\u4f5c\u5e8f\u5217\u7684\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\u3002\n\u8981\u6ce8\u610f\u6784\u5efa\u5e76\u53d1\u7ba1\u9053\u7684\u8bb8\u591a\u95ee\u9898\uff1a\u5fd9\u788c\u7b49\u5f85\u3001\u505c\u6b62\u5de5\u4f5c\u8fdb\u7a0b\u548c\u5185\u5b58\u7206\u70b8\u3002\nQueue\u7c7b\u62e5\u6709\u6784\u5efa\u5065\u58ee\u7ba1\u9053\u6240\u9700\u7684\u6240\u6709\u8bbe\u65bd\uff1a\u963b\u585e\u64cd\u4f5c\u3001\u7f13\u51b2\u533a\u5927\u5c0f\u548c\u8fde\u63a5\u3002\n\u534f\u540c\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f3c\u4e4e\u540c\u65f6\u8fd0\u884c\u6570\u4e07\u4e2a\u529f\u80fd\u7684\u6709\u6548\u65b9\u5f0f\u3002\n\u5728\u751f\u6210\u5668\u4e2d\uff0c\u6536\u76ca\u8868\u8fbe\u5f0f\u7684\u503c\u5c06\u662f\u4ece\u5916\u90e8\u4ee3\u7801\u4f20\u9012\u7ed9\u751f\u6210\u5668\u7684send\u65b9\u6cd5\u7684\u503c\u3002\n\u534f\u7a0b\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u5c06\u7a0b\u5e8f\u7684\u6838\u5fc3\u903b\u8f91\u4e0e\u5176\u4e0e\u5468\u56f4\u73af\u5883\u7684\u4ea4\u4e92\u5206\u79bb\u3002\n\u5c06CPU\u74f6\u9888\u8f6c\u79fb\u5230C\u6269\u5c55\u6a21\u5757\u53ef\u4ee5\u6709\u6548\u5730\u63d0\u9ad8\u6027\u80fd\uff0c\u540c\u65f6\u6700\u5927\u5316\u60a8\u5728Python\u4ee3\u7801\u4e0a\u7684\u6295\u8d44\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u505a\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5f15\u5165\u9519\u8bef\u3002\n\u591a\u5904\u7406\u6a21\u5757\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u4ee5\u6700\u5c0f\u7684\u52aa\u529b\u5e76\u884c\u5316\u67d0\u4e9b\u7c7b\u578b\u7684Python\u8ba1\u7b97\u3002\n\u591a\u5904\u7406\u7684\u5f3a\u5927\u529f\u80fd\u6700\u597d\u662f\u901a\u8fc7\u5185\u7f6e\u7684Conccurrent.Futures\u6a21\u5757\u53ca\u5176\u7b80\u5355\u7684ProcessPoolExecutor\u7c7b\u6765\u5b9e\u73b0\u3002\n\u5728\u5b9a\u4e49\u81ea\u5df1\u7684\u88c5\u9970\u5668\u65f6\uff0c\u8bf7\u4f7f\u7528functools\u5185\u7f6e\u6a21\u5757\u4e2d\u7684Wraps\u88c5\u9970\u5668\uff0c\u4ee5\u907f\u514d\u4efb\u4f55\u95ee\u9898\u3002\ncontextlib\u5185\u7f6e\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2acontextmanager\u4fee\u9970\u5668\uff0c\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728WITH\u8bed\u53e5\u4e2d\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u51fd\u6570\u3002\n\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u4ea7\u751f\u7684\u503c\u4f5c\u4e3awith\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u7ed9\u3002\u7531\u4e8e\u7279\u6b8a\u7684\u4e0a\u4e0b\u6587\uff0c\u5b83\u5bf9\u4e8e\u8ba9\u60a8\u7684\u4ee3\u7801\u76f4\u63a5\u8bbf\u95ee\u975e\u5e38\u6709\u7528\u3002\n\u4f7f\u7528\u5e26\u6709PICLE\u7684Copyreg\u5185\u7f6e\u6a21\u5757\u6765\u6dfb\u52a0\u7f3a\u5931\u7684\u5c5e\u6027\u503c\uff0c\u5141\u8bb8\u5bf9\u7c7b\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff0c\u5e76\u63d0\u4f9b\u7a33\u5b9a\u7684\u5bfc\u5165\u8def\u5f84\u3002\n\u7ed3\u5408\u4f7f\u7528DateTime\u5185\u7f6e\u6a21\u5757\u548cpytz\u6a21\u5757\uff0c\u53ef\u4ee5\u53ef\u9760\u5730\u5728\u4e0d\u540c\u65f6\u533a\u7684\u65f6\u95f4\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\n\u59cb\u7ec8\u4ee5UTC\u8868\u793a\u65f6\u95f4\uff0c\u5e76\u6839\u636e\u5f53\u5730\u65f6\u95f4\u8fdb\u884c\u5bf9\u8bdd\uff0c\u4f5c\u4e3a\u6f14\u793a\u524d\u7684\u6700\u540e\u4e00\u6b65\u3002\nPython\u5728\u6a21\u5757\u4e2d\u6709\u5185\u7f6e\u7684\u7c7b\u578b\u548c\u7c7b\uff0c\u51e0\u4e4e\u53ef\u4ee5\u8868\u793a\u6bcf\u79cd\u7c7b\u578b\u7684\u6570\u503c\u3002\nDecimal\u7c7b\u975e\u5e38\u9002\u5408\u9700\u8981\u9ad8\u7cbe\u5ea6\u548c\u7cbe\u786e\u820d\u5165\u884c\u4e3a\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8d27\u5e01\u503c\u7684\u8ba1\u7b97\u3002\nPython\u5305\u7d22\u5f15(PyPI)\u5305\u542b\u5927\u91cf\u7531Python\u793e\u533a\u6784\u5efa\u548c\u7ef4\u62a4\u7684\u516c\u5171\u5305\u3002\nPIP\u5728Python3.4\u548c\u66f4\u9ad8\u7248\u672c\u4e2d\u9ed8\u8ba4\u5b89\u88c5\uff1b\u5bf9\u4e8e\u65e7\u7248\u672c\uff0c\u60a8\u5fc5\u987b\u81ea\u5df1\u5b89\u88c5\u3002\n\u4f7f\u7528docstring\u4e3a\u6bcf\u4e2a\u6a21\u5757\u3001\u7c7b\u548c\u51fd\u6570\u7f16\u5199\u6587\u6863\u3002\u5728\u4ee3\u7801\u66f4\u6539\u65f6\u4f7f\u5b83\u4eec\u4fdd\u6301\u6700\u65b0\u3002\n\u5bf9\u4e8e\u6a21\u5757\uff1a\u4ecb\u7ecd\u6a21\u5757\u7684\u5185\u5bb9\u4ee5\u53ca\u6240\u6709\u7528\u6237\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u4efb\u4f55\u91cd\u8981\u7684\u7c7b\u6216\u51fd\u6570\u3002\n\u5bf9\u4e8e\u7c7b\uff1aCLASS\u8bed\u53e5\u540e\u9762\u7684\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u7684\u6587\u6863\u884c\u4e3a\u3001\u91cd\u8981\u5c5e\u6027\u548c\u5b50\u7c7b\u884c\u4e3a\u3002\n\u5bf9\u4e8e\u51fd\u6570\u548c\u65b9\u6cd5\uff1a\u8bb0\u5f55def\u8bed\u53e5\u540e\u9762\u7684\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u5f15\u53d1\u7684\u5f02\u5e38\u548c\u5176\u4ed6\u884c\u4e3a\u3002\nPython\u4e2d\u7684\u5305\u662f\u5305\u542b\u5176\u4ed6\u6a21\u5757\u7684\u6a21\u5757\u3002\u5305\u5141\u8bb8\u60a8\u5c06\u4ee3\u7801\u7ec4\u7ec7\u5230\u72ec\u7acb\u7684\u3001\u4e0d\u51b2\u7a81\u7684\u540d\u79f0\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u4e9b\u540d\u79f0\u7a7a\u95f4\u5177\u6709\u552f\u4e00\u7684\u7edd\u5bf9\u6a21\u5757\u540d\u79f0\u3002\n\u901a\u8fc7\u5c06init.py\u6587\u4ef6\u6dfb\u52a0\u5230\u5305\u542b\u5176\u4ed6\u6e90\u6587\u4ef6\u7684\u76ee\u5f55\u6765\u5b9a\u4e49\u7b80\u5355\u5305\u3002\u8fd9\u4e9b\u6587\u4ef6\u6210\u4e3a\u76ee\u5f55\u8f6f\u4ef6\u5305\u7684\u5b50\u6a21\u5757\u3002\u8f6f\u4ef6\u5305\u76ee\u5f55\u8fd8\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u8f6f\u4ef6\u5305\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u6a21\u5757\u7684\u6240\u6709\u7279\u6b8a\u5c5e\u6027\u4e2d\u5217\u51fa\u5176\u516c\u5171\u53ef\u89c1\u540d\u79f0\u6765\u4e3a\u6a21\u5757\u63d0\u4f9b\u663e\u5f0fAPI\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ec5\u5bfc\u5165\u5305\u7684init.py\u6587\u4ef6\u4e2d\u7684\u516c\u7528\u540d\u6216\u4f7f\u7528\u524d\u5bfc\u4e0b\u5212\u7ebf\u547d\u540d\u4ec5\u5185\u90e8\u6210\u5458\u6765\u9690\u85cf\u5305\u7684\u5185\u90e8\u5b9e\u73b0\u3002\n\u5f53\u5728\u5355\u4e2a\u56e2\u961f\u5185\u6216\u5728\u5355\u4e2a\u4ee3\u7801\u5e93\u4e0a\u534f\u4f5c\u65f6\uff0c\u53ef\u80fd\u6ca1\u6709\u5fc5\u8981\u5bf9\u663e\u5f0fAPI\u4f7f\u7528ALL\u3002\n\u4e2d\u95f4\u6839\u5f02\u5e38\u5141\u8bb8\u60a8\u5728\u5c06\u6765\u6dfb\u52a0\u66f4\u591a\u7279\u5b9a\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u60a8\u7684API\u4f7f\u7528\u8005\u3002\n\u5f53\u4e24\u4e2a\u6a21\u5757\u5728\u5bfc\u5165\u65f6\u5fc5\u987b\u4e92\u76f8\u8c03\u5165\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u5faa\u73af\u4f9d\u8d56\u3002\u5b83\u4eec\u53ef\u80fd\u4f1a\u5bfc\u81f4\u60a8\u7684\u7a0b\u5e8f\u5728\u542f\u52a8\u65f6\u5d29\u6e83\u3002\n\u6253\u7834\u5faa\u73af\u4f9d\u8d56\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u5c06\u76f8\u4e92\u4f9d\u8d56\u91cd\u6784\u5230\u4f9d\u8d56\u6811\u5e95\u90e8\u7684\u5355\u72ec\u6a21\u5757\u4e2d\u3002\n\u52a8\u6001\u5bfc\u5165\u662f\u6253\u7834\u6a21\u5757\u4e4b\u95f4\u5faa\u73af\u4f9d\u8d56\u7684\u6700\u7b80\u5355\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u5c06\u91cd\u6784\u548c\u590d\u6742\u6027\u964d\u81f3\u6700\u4f4e\u3002\n\u865a\u62df\u73af\u5883\u5141\u8bb8\u60a8\u4f7f\u7528pip\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u540c\u4e00\u8f6f\u4ef6\u5305\u7684\u591a\u4e2a\u4e0d\u540c\u7248\u672c\uff0c\u800c\u4e0d\u4f1a\u53d1\u751f\u51b2\u7a81\u3002\n\u60a8\u53ef\u4ee5\u5728pip\u51bb\u7ed3\u7684\u60c5\u51b5\u4e0b\u8f6c\u50a8\u73af\u5883\u7684\u6240\u6709\u8981\u6c42\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06requirements.txt\u6587\u4ef6\u63d0\u4f9b\u7ed9pip install-r\u6765\u91cd\u73b0\u8be5\u73af\u5883\u3002\n\u57283.4\u4e4b\u524d\u7684Python\u7248\u672c\u4e2d\uff0cpyvenv\u5de5\u5177\u5fc5\u987b\u5355\u72ec\u4e0b\u8f7d\u548c\u5b89\u88c5\u3002\u8be5\u547d\u4ee4\u884c\u5de5\u5177\u540d\u4e3aviralenv\uff0c\u800c\u4e0d\u662fpyvenv\u3002\n\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u5728\u591a\u4e2a\u90e8\u7f72\u73af\u5883\u4e2d\u8fd0\u884c\uff0c\u6bcf\u4e2a\u73af\u5883\u90fd\u6709\u72ec\u7279\u7684\u5047\u8bbe\u548c\u914d\u7f6e\u3002\n\u901a\u8fc7\u5728\u6a21\u5757\u4f5c\u7528\u57df\u4e2d\u4f7f\u7528\u666e\u901a\u7684Python\u8bed\u53e5\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u90e8\u7f72\u73af\u5883\u5b9a\u5236\u6a21\u5757\u7684\u5185\u5bb9\u3002\n\u6a21\u5757\u5185\u5bb9\u53ef\u4ee5\u662f\u4efb\u4f55\u5916\u90e8\u6761\u4ef6\u7684\u4ea7\u7269\uff0c\u5305\u62ec\u901a\u8fc7sys\u548cos\u6a21\u5757\u8fdb\u884c\u7684\u4e3b\u673a\u81ea\u7701\u3002\n\u5bf9\u5185\u7f6ePython\u7c7b\u578b\u8c03\u7528print\u5c06\u751f\u6210\u503c\u7684\u4eba\u7c7b\u53ef\u8bfb\u5b57\u7b26\u4e32\u7248\u672c\uff0c\u8fd9\u5c06\u9690\u85cf\u7c7b\u578b\u4fe1\u606f\u3002\n\u5bf9\u5185\u7f6ePython\u7c7b\u578b\u8c03\u7528repr\u5c06\u751f\u6210\u503c\u7684\u53ef\u6253\u5370\u5b57\u7b26\u4e32\u7248\u672c\u3002\u8fd9\u4e9bREPR\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f20\u9012\u7ed9valBuild-in\u51fd\u6570\u4ee5\u8fd4\u56de\u539f\u59cb\u503c\u3002\n\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u7684%s\u5c06\u751f\u6210\u7c7b\u4f3c\u4e8estr\u7684\u4eba\u7c7b\u53ef\u8bfb\u5b57\u7b26\u4e32\u3002%r\u5c06\u751f\u6210\u7c7b\u4f3c\u4e8erepr\u7684\u53ef\u6253\u5370\u5b57\u7b26\u4e32\u3002\n\u60a8\u53ef\u4ee5\u5b9a\u4e49repr\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u7c7b\u7684\u53ef\u6253\u5370\u8868\u793a\u5f62\u5f0f\uff0c\u5e76\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u8c03\u8bd5\u4fe1\u606f\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06TestCase\u5b50\u7c7b\u5316\u5e76\u6839\u636e\u60a8\u60f3\u8981\u6d4b\u8bd5\u7684\u884c\u4e3a\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\u6765\u5b9a\u4e49\u6d4b\u8bd5\u3002TestCase\u7c7b\u4e0a\u7684\u6d4b\u8bd5\u65b9\u6cd5\u5fc5\u987b\u4ee5\u5355\u8bcdtest\u5f00\u5934\u3002\n\u540c\u65f6\u7f16\u5199\u5355\u5143\u6d4b\u8bd5(\u9488\u5bf9\u72ec\u7acb\u7684\u529f\u80fd)\u548c\u96c6\u6210\u6d4b\u8bd5(\u9488\u5bf9\u4ea4\u4e92\u7684\u6a21\u5757)\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528import pdb\uff1bpdb.set_trace()\u8bed\u53e5\u5728\u7a0b\u5e8f\u4e2d\u7684\u5174\u8da3\u70b9\u76f4\u63a5\u542f\u52a8Python\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u3002\nPython\u8c03\u8bd5\u5668\u63d0\u793a\u7b26\u662f\u4e00\u4e2a\u5b8c\u6574\u7684Python shell\uff0c\u5141\u8bb8\u60a8\u68c0\u67e5\u548c\u4fee\u6539\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u72b6\u6001\u3002\nPDB shell\u547d\u4ee4\u5141\u8bb8\u60a8\u7cbe\u786e\u63a7\u5236\u7a0b\u5e8f\u6267\u884c\uff0c\u5141\u8bb8\u60a8\u5728\u68c0\u67e5\u7a0b\u5e8f\u72b6\u6001\u548c\u8fdb\u884c\u7a0b\u5e8f\u6267\u884c\u4e4b\u95f4\u5207\u6362\u3002\n\u5728\u4f18\u5316\u4e4b\u524d\uff0c\u5206\u6790Python\u7a0b\u5e8f\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u901f\u5ea6\u51cf\u6162\u7684\u6765\u6e90\u901a\u5e38\u662f\u6a21\u7cca\u4e0d\u6e05\u7684\u3002\n\u4f7f\u7528cProfile\u6a21\u5757\u4ee3\u66ff\u914d\u7f6e\u6587\u4ef6\u6a21\u5757\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u66f4\u51c6\u786e\u7684\u914d\u7f6e\u4fe1\u606f\u3002\nProfile\u5bf9\u8c61\u7684runcall\u65b9\u6cd5\u63d0\u4f9b\u4e86\u9694\u79bb\u5206\u6790\u51fd\u6570\u8c03\u7528\u6811\u6240\u9700\u7684\u4e00\u5207\u3002\nStats\u5bf9\u8c61\u5141\u8bb8\u60a8\u9009\u62e9\u548c\u6253\u5370\u60a8\u9700\u8981\u67e5\u770b\u4ee5\u4e86\u89e3\u7a0b\u5e8f\u6027\u80fd\u7684\u5206\u6790\u4fe1\u606f\u5b50\u96c6\u3002\nGC\u6a21\u5757\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4e86\u89e3\u5b58\u5728\u54ea\u4e9b\u5bf9\u8c61\uff0c\u4f46\u5b83\u6ca1\u6709\u5173\u4e8e\u8fd9\u4e9b\u5bf9\u8c61\u662f\u5982\u4f55\u5206\u914d\u7684\u4fe1\u606f\u3002", "note_en": "Code Sample of Book &#34;Effective Python: 59 Specific Ways to Write Better Python&#34; by Brett Slatkin.\n   There are two major version of Python still in active use: Python 2 andPython 3.\n  Be sure that the command-line for running Python on your system is theversion you expect it to be.\n Prefer Python 3 for your next project because that is the primary focusof the Python community.\n    In Python 3, bytes contains sequences of 8-bit values, str containssequences of Unicode characters. bytes and str instances can&#39;t beused together with operators (like &gt; or +).\n In Python 2, str contains sequences of 8-bit values, unicode containssequences of Unicode characters. str and unicode can be used togetherwith operators if the str only contains 7-bit ASCII characters.\n Use helper functions to ensure that the inputs you operate on are thetype of character sequence you expect (8-bit values, UTF-8 encodedcharacters, Unicode characters, etc.)\n If you want to read or write binary data to/from a file, always open thefile using a binary mode (like &#39;rb&#39; or &#39;wb&#39;).\n  Python&#39;s syntax makes it all too easy to write single-line expressionsthat are overly complicated and difficult to read.\n Move complex expressions into helper functions, especially if you need touse the same logic repeatedly.\n The if/else expression provides a more readable alternative to usingBoolean operators like or and adn in expressions.\n  Avoid being verbose: Don&#39;t supply 0 for the start index or the length ofthe sequence for the end index.\n Slicing is forgiving of start or end indexes that are out of bounds,making it easy to express slices on the front or back boundaries of asequence (like a[:20] or a[-20:]).\n Assigning to a list slice will replace that range in the originalsequence with what&#39;s referenced even if their lengths are different.\n  Prefer using positive stride values in slices without start or endindexes. Avoid negative stride values if possible.\n Avoid using start, end and stride together in a single slice. If you needall three parameters, consider doing two assignments (one to slice,another to stride) or using islice form itertools built-in module.\n  List comprehensions are clearer than the map and filter built-infunctions because they don&#39;t require extra lambda expressions.\n List comprehensions allow you easily skip items from the input list, abehavior map doesn&#39;t support without help from filter.\n  List comprehensions with more than two expressions are very difficult toread and should be avoided.\n  Generator expressions can be composed by passing the iterator from onegenerator expression into the for subexpression of another.\n  enumerate provides concise syntax for looping over an iterator andgetting the index of each item from the iterator as you go.\n  You can supply a second parameter to enumerate to specify the number fromwhich to begin counting (zero is default).\n  In Python 3, zip is a lazy generator that produces tuples. In Python 2,zip returns the full result as a list of tuples.\n  The zip_longest function from the itertools built-in module lets youiterate over multiple iterators in parallel regardless of theirlengths (see Item 46: Use built-in algorithms and data structures).\n  Python has special syntax that allows else blocks to immediately followfor and while loop interior blocks.\n The else block after a loop only runs if the loop body did not encountera break statement.\n  The try/finally compound statement lets you run cleanup code regardlessof whether exceptions were raised in the try block.\n The else block helps you minimize the amount of code in try blocks andvisually distinguish the success case from the try/except blocks.\n An else block can be used to perform additional actions after asuccessful try block but before common cleanup in a finally block.\n   Functions that return None to indicate special meaning are error pronebecause None and other values (e.g., zero, the empty string) allevaluate to False in conditional expressions.\n Raise exceptions to indicate special situations instead of returningNone. Expect the calling code to handle exceptions properly when theyare documented.\n  Closure functions can refer to variables from any of the scopes in whichthey were defined.\n  In Python 3, use the nonlocal statement to indicate when a closure canmodify a variable in its enclosing scopes.\n In Python 2, use a mutable value (like a single-item list) to work aroundthe lack of the nonlocal statement.\n  The iterator returned by a generator produces the set of values passed toyield expressions within the generator function&#39;s body.\n Generators can produce a sequence of outputs for arbitrarily large inputsbecause their working memory doesn&#39;t include all inputs and outputs.\n  Beware of functions that iterate over input arguments multiple times. Ifthese arguments are iterators, you may see strange behavior and missingvalues.\n Python&#39;s iterator protocol defines how containers and iterators interactwith the iter and next built-in functions, for loops, and relatedexpression.\n You can easily define your own iterable container type by implementingthe  iter method as a generator.\n You can detect that a value is an iterator (instead of a container) ifcalling iter on it twice produces the same result, which can then beprogressed with the next built-in function.\n  Functions can accept a variable number of positional arguments by using*args in the def statement.\n You can use the items from a sequence as the positional arguments for afunction with the * operator.\n Using the * operator with a generator may cause your program to run outof memory and crash.\n  Keywords make it clear what the purpose of each arguments is when itwould be confusing with only positional arguments.\n Keywords arguments with default values make it easy to add new behaviorsto a function, especially when the function has existing callers.\n  Closure functions can refer to variables from any of the scopes in whichthey were defined.\n  In Python 3, use the nonlocal statement to indicate when a closure canmodify a variable in its enclosing scopes.\n In Python 2, use a mutable value (like a single-item list) to work aroundthe lack of the nonlocal statement.\n  Use keyword-only arguments to force callers to supply keyword argumentsfor potentially confusing functions, especially those that acceptmultiple Boolean flags.\n  Python 2 can emulate keyword-only arguments for functions by using**kwargs and manually raising TypeError exceptions.\n   Use namedtuple for lightweight, immutable data containers before you needthe flexibility of a full class.\n Move your bookkeeping code to use multiple helper classes when yourinternal state dictionaries get complicated.\n  Instead of defining and instantiating classes, functions are often allyou need for simple interfaces between components in Python.\n References to functions and methods in Python are first class, meaningthey can be used in expressions like any other type.\n The  call special method enables instances of a class to be calledlike plain Python functions.\n When you need a function to maintain state, consider defining a classthat provides the  call method instead of defining a stateful closure(see Item 15: &#34;Know how closures interact with variable scope&#34;).\n    Python&#39;s standard method resolution order (MRO) solves the problems tosuperclass initialization order and diamond inheritance.\n  Use pluggable behaviors at the instance level to provide per-classcustomization when mix-in classes may require it.\n  Plan from the beginning to allow subclass to do more with your internalAPIs and attributes instead of locking them out by default.\n Use documentation of protected fields to guide subclass instead of tryingto force access control with private attributes.\n Only consider using private attributes to avoid naming conflicts withsubclasses that are out of your control.\n  Have your custom container types inherit from the interface defined incollections.abc to ensure that your classes match required interfacesand behaviors.\n     Consider refactoring a class and all call sites when you find yourselfusing @property too heavily.\n  Don&#39;t get bogged down trying to understand exactly how  getattributeuses the descriptor protocol for getting and setting attributes.\n  Understand that  getattr only gets called once when accessing amissing attribute, whereas  getattribute gets called every time anattribute is accessed.\n Avoid infinite recursion in  getattribute and  setattr by usingmethods from super() (i.e., the object class) to access instanceattributes directly.\n  Use metaclasses to ensure that subclass are well formed at the time theyare defined, before objects of their type are constructed.\n  The  new method of metaclasses is run after the class statement&#39;sentire body has been processed.\n  Metaclass let you run registration code automatically each time yourbase class is subclassed in a program.\n Using metaclass for class registration avoids errors by ensuring thatyou never miss a registration call.\n  You can avoid both memory leaks and the weakref module by usingmetaclasses along with descriptors.\n   Child processes run in parallel with the Python interpreter, enabling youto maximize your CPU usage.\n  Python threads can&#39;t bytecode in parallel on multiple CPU cores becauseof the global interpreter lock (GIL).\n Python threads are still useful despite the GIL because they provide aneasy way to do multiple things at seemingly the same time.\n Use Python threads to make multiple system calls in parallel. This allowsyou to do blocking I/O at the same time as computation.\n  Even though Python has a global interpreter lock, you&#39;re stillresponsible for protecting against objects without locks.\n Your programs will corrupt their data structures if you allow multiplethreads to modify the same objects without locks.\n  Pipelines are a great way to organize sequences of work that runconcurrently using multiple Python threads.\n Be aware of the many problems in building concurrent pipelines: busywaiting, stopping workers, and memory explosion.\n The Queue class has all of the facilities you need to build robustpipelines: blocking operations, buffer sizes, and joining.\n  Coroutines provide an efficient way to run tens of thousands of functionsseemingly at the same time.\n Within a generator, the value of the yield expression will be whatevervalue was passed to the generator&#39;s send method from the exterior code.\n Coroutines give you a powerful tool for separating the core logic of yourprogram from its interaction with the surrounding environment.\n  Moving CPU bottlenecks to C-extension modules can be an effective way toimprove performance while maximizing your investment in Python code.However, the cost of doing so is high and may introduce bugs.\n The multiprocessing module provides powerful tools that can parallelizecertain types of Python computation with minimal effort.\n The power of multiprocessing is best accessed through theconcurrent.futures built-in module and its simple ProcessPoolExecutorclass.\n   Use the wraps decorator from the functools built-in module when youdefine your own decorators to avoid any issues.\n  The contextlib built-in module provides a contextmanager decorator thatmakes it easy to use your own functions in with statements.\n The value yielded by context managers is supplied to the as part of thewith statement. It&#39;s useful for letting your code directly access thecause of the special context.\n  Use the copyreg built-in module with pickle to add missing attributesvalues, allow versioning of classes, and provide stable import paths.\n  Use the datetime built-in module along with the pytz module to reliablyconvert between times in different time zones.\n Always represent time in UTC and do conversations to local time as thefinal step before presentation.\n    Python has built-in types and classes in modules that can representpractically every type of numerical value.\n The Decimal class is ideal for situations that require high precision andexact rounding behavior, such as computations of monetary values.\n  The Python Package Index (PyPI) contains a wealth of common packagesthat are built and maintained by the Python community.\n  pip is installed by default in Python 3.4 and above; you must install ityourself for older versions.\n   Write documentation for every module, class and function usingdocstrings. Keep them up to date as your code changes.\n For modules: introduce the contents of the module and any importantclasses or functions all users should know about.\n For classes: document behavior, important attributes, and subclassbehavior in the docstring following the class statement.\n For functions and methods: document every argument, returned value,raised exception, and other behaviors in the docstring following thedef statement.\n  Packages in Python are modules that contain other modules. Packages allowyou to organize your code into separate, non-conflicting namespaces withunique absolute module names.\n Simple package are defined by adding an  init.py file to a directorythat contains other source files. These files become that child modulesof the directory&#39;s package. Package directories may also contain otherpackages.\n You can provide an explict API for a module by listing its publiclyvisible name in its  all special attribute.\n You can hide a package&#39;s internal implementation by only importing publicnames in the package&#39;s  init.py file or by naming internal-onlymembers with a leading underscore.\n When collaborating within a single team or on a single codebase, using all for explicit APIs is probably unnecessary.\n  Intermediate root exceptions let you add more specific types ofexceptions in the future without breaking your API consumers.\n  Circular dependencies happen when two modules must call into each otherat import time. They can cause your program to crash at startup.\n The best way to break a circular dependency is refactoring mutualdependencies into a separate module at the bottom of the dependency tree.\n Dynamic imports are the simplest solution for breaking a circulardependency between modules while minimizing refactoring and complexity.\n  Virtual environment allow you to use pip to install many differentversions of the same package on the same machine without conflicts.\n  You can dump all of the requirements of an environment with pip freeze.You can reproduce the environment by supplying the requirements.txt fileto pip install -r.\n In versions of Python before 3.4, the pyvenv tool must be downloaded andinstalled separately. The command-line tool is called virtualenv insteadof pyvenv.\n   Programs often need to run in multiple deployment environments that eachhave unique assumptions and configurations.\n You can tailor a module&#39;s contents to different deployment environmentsby using normal Python statements in module scope.\n Module contents can be the product of any external condition, includinghost introspection through the sys and os modules.\n  Calling print on built-in Python types will produce the human-readablestring version of a value, which hides type information.\n Calling repr on built-in Python types will produce the printable stringversion of a value. These repr strings could be passed to the evalbuilt-in function to get back the original value.\n %s in format strings will produce human-readable strings like str.%r willproduce printable strings like repr.\n You can define the  repr method to customize the printablerepresentation of a class and provide more detailed debugginginformation.\n  You can define tests by subclassing TestCase and defining one method perbehavior you&#39;d like to test. Test methods on TestCase classes must startwith the word test.\n It&#39;s important to write both unit tests (for isolated functionality) andintegration tests (for modules that interact).\n  You can initiate the Python interactive debugger at a point of interestdirectly in your program with the import pdb; pdb.set_trace() statements.\n The Python debugger prompt is a full Python shell that lets you inspectand modify the state of a running program.\n pdb shell commands let you precisely control program execution, allowingyou to alternate between inspecting program state and progressing programexecution.\n  It&#39;s import to profile Python programs before optimizing because thesource of slowdowns is often obscure.\n Use the cProfile module instead of the profile module because it providesmore accurate profiling information.\n The Profile object&#39;s runcall method provides everything you need toprofile a tree of function calls in isolation.\n The Stats object lets you select and print the subset of profilinginformation you need to see to understand your program&#39;s performance.\n  The gc module can help you understand which objects exist, but it has noinformation about how they were allocated.", "posttime": "2020-06-21 00:29:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python", "title": "\u66f4\u597d\u7684Python 59\u79cd\u65b9\u5f0f", "title_en": "Better Python 59 Ways", "transed": 1, "url": "https://github.com/SigmaQuan/Better-Python-59-Ways", "via": "", "real_tags": ["python"]}, {"category": "", "categoryclass": "", "imagename": "609a35d66c21620e3b9bff2c5b3f07ef.jpeg", "infoid": 1007419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u7684\u76ee\u7684\u662f\u4fc3\u8fdb\u66f4\u597d\u5730\u7406\u89e3ElasticSearch\u4e2d\u7684\u4e8b\u60c5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u672c\u6587\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053ElasticSearch\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb\u4e0b\u9762\u7684\u6587\u7ae0\u6765\u4e86\u89e3\u66f4\u591a\uff1a\nLucene\u662fElasticSearch\u7684\u57fa\u7840\uff0c\u4f46\u60a8\u5728\u5f00\u8f66\u65f6\u4e0d\u80fd\u76f4\u63a5\u4e0e\u4ed6\u4ea4\u4e92\uff0c\u4e5f\u4e0d\u80fd\u8981\u6c42\u76f4\u63a5\u542f\u52a8\u5f15\u64ce\u3002\u4f46\u662f\u5982\u679c\u4f60\u7684\u8f66\u574f\u4e86\uff0c\u4f60\u4e0d\u8ba4\u4e3a\u77e5\u9053\u4f60\u7684\u53d1\u52a8\u673a\u662f\u600e\u4e48\u5de5\u4f5c\u7684\u662f\u4e2a\u597d\u4e3b\u610f\u5417\uff1f\n\u4f60\u6709\u5927\u91cf\u7684\u6587\u4ef6\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u7279\u5b9a\u7684\u8bcd\uff0c\u5982\u4f55\u5feb\u901f\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f\u5982\u4f55\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\uff1f\u8fd9\u5c31\u662f\u7d22\u5f15\u7684\u7528\u6b66\u4e4b\u5730\uff1a\u8981\u5feb\u901f\u641c\u7d22\u5927\u91cf\u6587\u672c\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u4e3a\u8be5\u6587\u672c\u7f16\u5236\u7d22\u5f15\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u79cd\u53ef\u8ba9\u60a8\u5feb\u901f\u641c\u7d22\u7684\u683c\u5f0f\u3002\u6b64\u8f6c\u6362\u8fc7\u7a0b\u79f0\u4e3a\u7d22\u5f15\uff0c\u5176\u8f93\u51fa\u79f0\u4e3a\u7d22\u5f15\u3002\n\u7d22\u5f15\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6bb5\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6bb5\u7531\u51e0\u4e2a\u7d22\u5f15\u7ec4\u6210\uff0c\u5f88\u6df7\u4e71\uff0c\u5bf9\u5427\uff1f\u5f53\u5b83\u88ab\u521b\u5efa\u65f6\uff0c\u5b83\u88ab\u5206\u6210\u66f4\u5c0f\u7684\u6bb5\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5b50\u7d22\u5f15\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7d22\u5f15\u5e76\u4e0d\u662f\u5b8c\u5168\u72ec\u7acb\u7684\u3002\n\u7247\u6bb5\u662f\u4e0d\u53d8\u7684\uff0c\u6bcf\u4e2a\u7247\u6bb5\u90fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aLucene\u6587\u6863\uff0c\u5728\u60a8\u4f7f\u7528ES\u7684\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u4f1a\u9047\u5230\u4e0d\u5f97\u4e0d\u5220\u9664\u6587\u6863\u7684\u60c5\u51b5\u3002\u663e\u7136\u8fd9\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u5e55\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u5220\u9664\u6587\u6863\u65f6\uff0c\u4ec5\u5c06\u5176\u201c\u6807\u8bb0\u201d\u4e3a\u5df2\u5220\u9664\uff0c\u5e76\u5c06\u6587\u6863\u7684\u65b0\u7248\u672c\u6dfb\u52a0\u5230\u6bb5\u4e2d\u3002\u53ea\u6709\u5f53\u8f83\u5927\u6bb5\u7684\u201c\u8fde\u63a5\u201d\u53d1\u751f\u65f6\uff0c\u624d\u4f1a\u65f6\u4e0d\u65f6\u5730\u6267\u884c\u5b83\u7684\u771f\u6b63\u6267\u884c\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6587\u6863\u7ee7\u7eed\u5360\u7528\u78c1\u76d8\u7a7a\u95f4\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7d22\u5f15\u5c06\u79ef\u7d2f\u8bb8\u591a\u6bb5\u3002\u6570\u636e\u6bb5\u5b9a\u671f\u5408\u5e76\u4e3a\u5355\u4e2a\u65b0\u6570\u636e\u6bb5\u5e76\u5220\u9664\u65e7\u6570\u636e\u6bb5\u3002\n\u57fa\u672c\u4e0a\uff0c\u56e0\u4e3a\u6709\u4e24\u4ef6\u91cd\u8981\u4e8b\u60c5\uff0c\u4e22\u5f03\u65e7\u6587\u6863\uff0c\u4ece\u800c\u51cf\u5c11\u6211\u4eec\u5728\u78c1\u76d8\u4e0a\u7684\u7d22\u5f15\u7a7a\u95f4\uff1b\u7b2c\u4e8c\uff0c\u5220\u9664\u65e7\u7684\u6bb5\uff0c\u5e76\u521b\u5efa\u65b0\u7684\u66f4\u5927\u7684\u6bb5\uff0c\u4ece\u800c\u63d0\u9ad8\u60a8\u7684\u641c\u7d22\u901f\u5ea6\u3002\n\u7406\u89e3LUNCE\u5bf9\u4e8e\u7406\u89e3Elasticsearch\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u5f53\u7136\u5b83\u4eec\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662f\u6982\u5ff5\u548c\u5de5\u4f5c\u539f\u7406\u662f\u76f8\u540c\u7684\u3002\u8fd9\u79cd\u6982\u5ff5\u5728ElasticSearch\u6587\u6863\u4e2d\u5f88\u96be\u627e\u5230\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e3a\u60a8\u62bd\u8c61\u4e86\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\u3002\u6211\u5e0c\u671b\u6211\u80fd\u89e3\u91ca\u4e00\u4e9b\u5173\u4e8eLucene\u6838\u5fc3\u7684\u4e8b\u60c5\uff0c\u4ee5\u5c55\u793aElasticSearch\u662f\u5982\u4f55\u771f\u6b63\u5de5\u4f5c\u7684\u3002", "note_en": "The purpose of this article is to promote a better understanding of how things work within ElasticSearch. If you are reading this article, you probably already know how ElasticSearch works, if that is not true, you can learn a little more by reading the following article:\n   Lucene is the base of ElasticSearch, but you don\u2019t interract directly with him, as you drive your car, but you don\u2019t ask direct to your engine to start. But what if your car break, don\u2019t you think is a good idea to know how your engine works?\n  You have a big a mount of files, and you need to find a specificy file, wich contais a certain word, how to be quickly to do this? how to be scalable? Here\u2019s where indexing comes in: to search large amounts of text quickly, you must first index that text and convert it into a format that will let you search it rapidly. This conversion process is called indexing, and its output is called an index.\n  The index is composed of one or more segments, and each segment is composed of several indexes, confusing, right? When it is created, it is separated into smaller segments, or you can see it as sub-indices, where each index is not completely independent.\n   Segments are immutable .Each segment contains one or more Lucene Documents At some point, on your journey through ES, you have been in the situation of having to delete a document. And apparently that was no problem, but what is going on behind the scenes? When you delete a document, it is only \u201cmarked\u201d as deleted and a new version of the document is added to the segment. Its real execution is only carried out from time to time when a \u201cjoining\u201d of larger segments occurs. In the meantime, documents continue to take up disk space.\n  Over time the index will accumulate many segments. Periodically, segments are merged into a single new segment and removing the old segments.\n  Basically, because two important things, discard old documents and as result reduce our index space on disk, and the second one is the old segments are remove, and a new bigger segment are create, incresing your search speed.\n  Understand Lunce is essential to understand Elasticsearch, of course are difference beetwen them, but the concept and how things works, is the same. This kind of concepts is hard to find in ElasticSearch documents, because they abstract all this job for you. I hope i can explain some things about the core of Lucene, to show how ElasticSearch trully works.", "posttime": "2020-06-21 00:29:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e86\u89e3,understand,\u7d22\u5f15", "title": "\u4e86\u89e3Lucene\u4ee5\u4e86\u89e3ElasticSearch", "title_en": "Understand Lucene to Understand ElasticSearch", "transed": 1, "url": "https://medium.com/@guilherme.lb/understand-lucene-to-understand-elasticsearch-85037d5b7577#0a2a-6f579ef7ae80", "via": "", "real_tags": ["\u4e86\u89e3", "\u7d22\u5f15"]}, {"category": "", "categoryclass": "", "imagename": "537bab02d4f5ba4955900b57ea2d0b64.jpg", "infoid": 1007418, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u897f\u683c\u8499\u5fb7\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u665a\u5e74--\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u5df2\u7ecf80\u591a\u5c81\u4e86--\u4fe1\u5949\u5b97\u6559\u3002\u4e0d\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5e76\u4e0d\u662f\u6bcf\u5468\u516d\u90fd\u4f1a\u51fa\u73b0\u5728\u5bfa\u5e99\u91cc\uff0c\u7528\u7948\u7977\u62ab\u80a9\u5305\u88f9\u81ea\u5df1\uff0c\u6717\u8bfb\u201c\u5f8b\u6cd5\u201d\u4e2d\u7684\u7ecf\u6587\u3002\u76f4\u5230\u4ed6\u751f\u547d\u7684\u5c3d\u5934\uff0c\u4ed6\u4e00\u76f4\u575a\u6301\u4ed6\u4f5c\u4e3a\u4e00\u4e2a\u575a\u5b9a\u7684\u65e0\u795e\u8bba\u8005\u7684\u7acb\u573a\uff0c\u8fd9\u662f\u4ed6\u6700\u8457\u540d\u7684\u7acb\u573a\uff0c\u76f4\u5230\u73b0\u5728\u3002\u5728\u201c\u5e7b\u89c9\u7684\u672a\u6765\u201d\u4e00\u4e66\u4e2d\uff0c\u4ed6\u5c06\u5bf9\u4e0a\u5e1d\u7684\u4fe1\u4ef0\u63cf\u8ff0\u4e3a\u96c6\u4f53\u795e\u7ecf\u75c7\uff1a\u4ed6\u79f0\u4e4b\u4e3a\u201c\u5bf9\u7236\u4eb2\u7684\u6e34\u671b\u201d\u3002\u4f46\u5728\u4ed6\u5b8c\u6210\u7684\u6700\u540e\u4e00\u672c\u4e66\u201c\u6469\u897f\u4e0e\u4e00\u795e\u8bba\u201d\u4e2d\uff0c\u51fa\u73b0\u4e86\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\u3002\u5728\u90a3\u91cc\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5728\u6ca1\u6709\u653e\u5f03\u4ed6\u7684\u65e0\u795e\u8bba\u7684\u60c5\u51b5\u4e0b\uff0c\u5f00\u59cb\u5c06\u4ed6\u51fa\u751f\u7684\u72b9\u592a\u4fe1\u4ef0\u89c6\u4e3a\u8fc7\u53bb\u6587\u5316\u8fdb\u6b65\u548c\u73b0\u5728\u4e2a\u4eba\u7075\u611f\u7684\u6e90\u6cc9\u3002\u4e34\u8fd1\u6b7b\u4ea1\u65f6\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5f00\u59cb\u8ba4\u8bc6\u5230\u5b97\u6559\u4e2d\u7684\u8bd7\u610f\u548c\u627f\u8bfa\u3002\n\u6700\u8fd1\u5728\u6211\u4eec\u7684\u6587\u5316\u4e2d\u5e7f\u6cdb\u6d41\u4f20\u7684\u8bb8\u591a\u53cd\u5b97\u6559\u8bba\u6218\u90fd\u662f\u6309\u7167\u5f17\u6d1b\u4f0a\u5fb7\u65e9\u671f\u4f5c\u54c1\u7684\u7cbe\u795e\u8fdb\u884c\u7684\u3002\u514b\u91cc\u65af\u6258\u5f17\u00b7\u5e0c\u94a6\u65af(Christopher Hitchens)\u5728\u4e3a\u65e0\u795e\u8bba\u8fa9\u62a4\u65f6\uff0c\u5f15\u7528\u4e86\u5f17\u6d1b\u4f0a\u5fb7(Freud)\u4f5c\u4e3a\u76df\u53cb\uff0c\u4ed6\u8ba4\u4e3a\u5f17\u6d1b\u4f0a\u5fb7\u63ed\u9732\u4e86\u5b97\u6559\u7684\u8f6f\u5f31\u5e7c\u7a1a\u3002\u8428\u59c6\u00b7\u54c8\u91cc\u65af(Sam Harris)\u548c\u7406\u67e5\u5fb7\u00b7\u9053\u91d1\u65af(Richard Dawkins)\u6765\u81ea\u540c\u6837\u7684\u542f\u8499\u8fd0\u52a8\u7cbe\u795e\uff0c\u5373\u5bf9\u4fe1\u4ef0\u6000\u6709\u654c\u610f\u7684\u6000\u7591\u4e3b\u4e49\uff0c\u8fd9\u79cd\u7cbe\u795e\u6ce8\u5165\u4e86\u201c\u5e7b\u89c9\u7684\u672a\u6765\u201d(The Future Of A Illusion)\u3002\u6240\u6709\u4e09\u4f4d\u5f53\u4ee3\u4f5c\u5bb6\u90fd\u5e0c\u671b\u7acb\u5373\u6446\u8131\u5b97\u6559\uff0c\u4e0d\u7559\u4f59\u5730\u3002\n\u4f46\u5f17\u6d1b\u4f0a\u5fb7\u5bf9\u5b97\u6559\u7684\u770b\u6cd5\u8fdc\u4e0d\u6b62\u4e8e\u6b64\u3002\u5728\u4ed6\u7684\u4e0a\u4e00\u672c\u4e66\u4e2d\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5728\u4ed6\u5e74\u8001\u4f53\u5f31\u3001\u60a3\u6709\u4e25\u91cd\u988c\u764c\u7684\u65f6\u5019\u5199\u9053\uff0c\u4ed6\u63d0\u4f9b\u4e86\u5173\u4e8e\u4fe1\u4ef0\u7684\u53e6\u4e00\u79cd\u89c2\u70b9\u3002\u4ed6\u8ba4\u4e3a\uff0c\u72b9\u592a\u6559\u5e2e\u52a9\u4eba\u7c7b\u4ece\u76f4\u63a5\u7684\u7ecf\u9a8c\u4e16\u754c\u7684\u675f\u7f1a\u4e2d\u89e3\u653e\u51fa\u6765\uff0c\u4e3a\u4eba\u7c7b\u7684\u601d\u60f3\u548c\u884c\u52a8\u6253\u5f00\u4e86\u65b0\u7684\u53ef\u80fd\u6027\u3002\u4ed6\u8fd8\u6697\u793a\uff0c\u5bf9\u4e0a\u5e1d\u7684\u4fe1\u4ef0\u4fc3\u8fdb\u4e86\u5411\u5185\u5728\u751f\u6d3b\u7684\u8f6c\u53d8\uff0c\u6709\u52a9\u4e8e\u4f7f\u4e30\u5bcc\u7684\u81ea\u7701\u751f\u6d3b\u6210\u4e3a\u53ef\u80fd\u3002\n\u201c\u6469\u897f\u4e0e\u4e00\u795e\u8bba\u201d\u5bf9\u5f17\u6d1b\u4f0a\u5fb7\u6765\u8bf4\u4e0d\u662f\u4e00\u672c\u5bb9\u6613\u5199\u6216\u51fa\u7248\u7684\u4e66\u3002\u4ed6\u572820\u4e16\u7eaa30\u5e74\u4ee3\u5f00\u59cb\u5199\u8fd9\u672c\u4e66\uff0c\u5f53\u65f6\u4ed6\u4f4f\u5728\u7ef4\u4e5f\u7eb3\uff0c\u4ed6\u5f88\u6e05\u695a\uff0c\u5f53\u4ed6\u62ff\u51fa\u8fd9\u672c\u4e66\u7684\u65f6\u5019\uff0c\u4ed6\u53ef\u80fd\u4f1a\u9047\u5230\u5965\u5730\u5229\u5929\u4e3b\u6559\u4f1a\u7684\u9ebb\u70e6\u3002\u6bd5\u7adf\uff0c\u8fd9\u672c\u4e66\u575a\u6301\u4e86\u4e00\u4e9b\u5947\u602a\u548c\u4ee4\u4eba\u4e0d\u5b89\u7684\u4e1c\u897f\u3002\u6700\u4ee4\u4eba\u5403\u60ca\u7684\u662f\uff0c\u5b83\u8fa9\u79f0\u6469\u897f\u672c\u4eba\u4e0d\u662f\u72b9\u592a\u4eba\u3002\u5f17\u6d1b\u4f0a\u5fb7\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f\u9996\u5148\uff0c\u4ed6\u58f0\u79f0\u6469\u897f\u4e0d\u662f\u72b9\u592a\u4eba\u7684\u540d\u5b57\uff0c\u800c\u662f\u57c3\u53ca\u7684\u540d\u5b57\uff1b\u5176\u6b21\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5bf9\u68a6\u548c\u7ae5\u8bdd\u7684\u7814\u7a76\u4f7f\u4ed6\u76f8\u4fe1\u5723\u7ecf\u4e2d\u6709\u98a0\u5012\u7684\u4e1c\u897f\u3002\u5728\u201c\u51fa\u57c3\u53ca\u8bb0\u201d\u4e2d\uff0c\u6469\u897f\u7684\u6bcd\u4eb2\u5bb3\u6015\u6cd5\u8001\u4e0b\u4ee4\u6740\u6b7b\u6240\u6709\u72b9\u592a\u7537\u5b69\uff0c\u628a\u5a74\u513f\u6469\u897f\u653e\u5728\u6cb3\u8fb9\u7684\u4e00\u4e2a\u7bee\u5b50\u91cc\uff0c\u6cd5\u8001\u7684\u5973\u513f\u5728\u90a3\u91cc\u53d1\u73b0\u4e86\u4ed6\u3002\u4f46\u5f17\u6d1b\u4f0a\u5fb7\u575a\u6301\u8ba4\u4e3a\u662f\u72b9\u592a\u4eba\u5728\u6cb3\u8fb9\u53d1\u73b0\u4e86\u4ed6\u3002(\u5728\u7ae5\u8bdd\u548c\u68a6\u5883\u4e2d\uff0c\u5b69\u5b50\u603b\u662f\u4ece\u5bcc\u6709\u7684\u7236\u6bcd\u5f00\u59cb\uff0c\u88ab\u8d2b\u7a77\u7684\u7236\u6bcd\u6536\u517b\uff0c\u4f46\u4ed6\u9ad8\u5c1a\u7684\u5929\u6027\u5360\u4e0a\u98ce--\u81f3\u5c11\u5f17\u6d1b\u4f0a\u5fb7\u662f\u8fd9\u6837\u575a\u6301\u7684\u3002)\u3002\u5f17\u6d1b\u4f0a\u5fb7\u8fd8\u8bf4\uff0c\u4e00\u795e\u8bba\u4e0d\u662f\u72b9\u592a\u4eba\uff0c\u800c\u662f\u57c3\u53ca\u4eba\u7684\u53d1\u660e\uff0c\u6e90\u4e8e\u5bf9\u57c3\u53ca\u592a\u9633\u795e\u827e\u987f\u7684\u5d07\u62dc\u3002\n1938\u5e743\u6708\uff0c\u7eb3\u7cb9\u5165\u4fb5\u5965\u5730\u5229\uff0c\u5c06\u5f17\u6d1b\u4f0a\u5fb7\u548c\u4ed6\u7684\u5bb6\u4eba\u7f6e\u4e8e\u81f4\u547d\u5371\u9669\u4e4b\u4e2d\u3002\u5f17\u6d1b\u4f0a\u5fb7\u5728\u4ed6\u5d07\u62dc\u7684\u5bcc\u6709\u7684\u739b\u4e3d\u00b7\u6ce2\u62ff\u5df4\u516c\u4e3b\u548c\u4ed6\u65e0\u60c5\u5730\u4e0d\u559c\u6b22\u7684\u7f8e\u5229\u575a\u5408\u4f17\u56fd\u653f\u5e9c\u7684\u5e2e\u52a9\u4e0b\u8bbe\u6cd5\u9003\u79bb\u4e86\u7ef4\u4e5f\u7eb3\u3002\u7f57\u65af\u798f\u603b\u7edf\u751a\u81f3\u5bf9\u5f17\u6d1b\u4f0a\u5fb7\u7684\u6848\u4f8b\u8868\u793a\u4e86\u5174\u8da3\uff0c\u4f46\u8fd9\u4e1d\u6beb\u6ca1\u6709\u6539\u53d8\u5f17\u6d1b\u4f0a\u5fb7\u5bf9\u8fd9\u4e2a\u65e0\u8d56\u5171\u548c\u56fd\u7684\u770b\u6cd5\u3002\u4ed6\u559c\u6b22\u8bf4\uff0c\u7f8e\u56fd\u5e45\u5458\u8fbd\u9614\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\u3002\n\u5728\u79bb\u5f00\u7ef4\u4e5f\u7eb3\u4e4b\u524d\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u9001\u7ed9\u7eb3\u7cb9\u4e00\u4efd\u4e34\u522b\u793c\u7269\u3002\u4ed6\u4eec\u5df2\u7ecf\u5411\u4ed6\u660e\u786e\u8868\u793a\uff0c\u4ed6\u7684\u79fb\u6c11\u53d6\u51b3\u4e8e\u7b7e\u7f72\u4e00\u4efd\u58f0\u660e\uff0c\u58f0\u660e\u4ed6\u6ca1\u6709\u53d7\u5230\u4efb\u4f55\u5f62\u5f0f\u7684\u7325\u4eb5\uff0c\u4ed6\u80fd\u591f\u7ee7\u7eed\u8fdb\u884c\u4ed6\u7684\u79d1\u5b66\u5de5\u4f5c\u3002\u5f17\u6d1b\u4f0a\u5fb7\u7b7e\u4e86\u540d\uff0c\u4f46\u53c8\u52a0\u4e86\u4e00\u53e5\u4ed6\u81ea\u5df1\u8bbe\u8ba1\u7684\u7ed3\u675f\u8bed\uff1a\u201c\u6211\u53ef\u4ee5\u5411\u6bcf\u4e2a\u4eba\u6781\u529b\u63a8\u8350\u76d6\u4e16\u592a\u4fdd\u3002\u201d\n1938\u5e746\u6708\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u62b5\u8fbe\u4f26\u6566\uff0c\u5728\u5b8c\u6210\u548c\u51fa\u7248\u201c\u6469\u897f\u201d\u4e00\u4e66\u65f6\uff0c\u4ed6\u9047\u5230\u4e86\u53e6\u4e00\u79cd\u963b\u529b\u3002\u7b2c\u4e00\u4e2a\u5230\u4ed6\u4f4d\u4e8e\u57c3\u5c14\u65af\u6c83\u65af\u8def\u7684\u5bb6\u4e2d\u770b\u671b\u4ed6\u7684\u4eba\u662f\u4ed6\u7684\u90bb\u5c45\uff0c\u4e00\u4f4d\u540d\u53eb\u4e9a\u4f2f\u62c9\u7f55\u00b7\u96c5\u80e1\u8fbe(Abraham Yahuda)\u7684\u72b9\u592a\u5b66\u8005\u3002\u96c5\u80e1\u8fbe\u5df2\u7ecf\u542c\u8bf4\u4e86\u8fd9\u672c\u4e66\u7684\u5185\u5bb9\uff0c\u4ed6\u6765\u6073\u6c42\u5f17\u6d1b\u4f0a\u5fb7\u4e0d\u8981\u51fa\u7248\u3002\u5982\u679c\u72b9\u592a\u4eba\u4e2d\u6ca1\u6709\u4e00\u4e2a\u4eba\u8bf4\u6469\u897f\u4e0d\u662f\u72b9\u592a\u4eba\uff0c\u800c\u4e14\u4e0e\u5723\u7ecf\u4e2d\u63cf\u7ed8\u7684\u548c\u5e73\u6b7b\u4ea1\u76f8\u53cd\uff0c\u6469\u897f\u662f\u88ab\u72b9\u592a\u4eba\u81ea\u5df1\u8c0b\u6740\u7684\uff0c\u4ed6\u4eec\u618e\u6068\u4ed6\u8bd5\u56fe\u5f3a\u52a0\u7ed9\u4ed6\u4eec\u7684\u4e25\u5389\u6cd5\u5f8b\uff0c\u96be\u9053\u72b9\u592a\u4eba\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\u7684\u9ebb\u70e6\u8fd8\u4e0d\u591f\u591a\u5417\uff1f\u5f17\u6d1b\u4f0a\u5fb7\u771f\u7684\u6253\u7b97\u5ba3\u79f0\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8c0b\u6740\u7684\u7f6a\u884c\u63d0\u9ad8\u4e86\u6469\u897f\u7684\u5730\u4f4d\u548c\u4ed6\u7684\u4e00\u795e\u8bba\u9057\u4ea7\uff0c\u5728\u72b9\u592a\u4eba\u4e2d\u521b\u9020\u4e86\u5f17\u6d1b\u4f0a\u5fb7\u559c\u6b22\u8bf4\u7684\u201c\u53cd\u5e94\u5f62\u6210\u201d\u5417\uff1f\u96c5\u80e1\u8fbe\u8fdc\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u8fd9\u6837\u7684\u8bf7\u613f\u4eba\u3002\u5728\u4ed6\u5728\u4f26\u6566\u7684\u65e9\u671f\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u6536\u5230\u4e86\u6ca1\u5b8c\u6ca1\u4e86\u7684\u6073\u6c42\uff0c\u8981\u6c42\u4ed6\u653e\u624b\u8fd9\u4e2a\u9879\u76ee\u3002\n\u5f17\u6d1b\u4f0a\u5fb7\u505a\u4e86\u4ec0\u4e48\uff1f\u5f53\u7136\uff0c\u4ed6\u4e0d\u4ec5\u7528\u5fb7\u8bed\u53d1\u8868\u4e86\u6587\u7ae0\uff0c\u800c\u4e14\u4ee5\u5c3d\u53ef\u80fd\u5feb\u548c\u9192\u76ee\u7684\u65b9\u5f0f\u7528\u82f1\u8bed\u53d1\u8868\u4e86\u6587\u7ae0\u3002\u8bc4\u8bba\u5f88\u7cdf\u7cd5\u3002\u79c1\u4e0b\u91cc\u7684\u53cd\u5e94\u5f80\u5f80\u662f\u82e6\u6da9\u7684\u3002\u548cF\n\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u4f46\u4e3b\u8981\u4e0d\u662f\u56e0\u4e3a\u5173\u4e8e\u6469\u897f\u8eab\u4efd\u7684\u5947\u602a\u731c\u6d4b\uff0c\u8fd9\u8ba9\u96c5\u80e1\u8fbe\u611f\u5230\u62c5\u5fe7\uff0c\u4e5f\u8ba9\u8fd9\u672c\u4e66\u7684\u7b2c\u4e00\u6279\u8bfb\u8005\u611f\u5230\u9707\u60ca\u3002\u8fd9\u672c\u4e66\u6709\u4e00\u4e2a\u66f4\u5fae\u5999\u548c\u66f4\u5177\u539f\u521b\u6027\u7684\u7ef4\u5ea6\uff0c\u4e5f\u8bb8\u6b63\u662f\u8fd9\u4e2a\u7ef4\u5ea6\u8ba9\u5f17\u6d1b\u4f0a\u5fb7\u5982\u6b64\u51b3\u5fc3\u5b8c\u6210\u5e76\u51fa\u7248\u5b83\uff0c\u5c3d\u7ba1\u5b58\u5728\u79cd\u79cd\u963b\u529b\u3002\u56e0\u4e3a\u5728\u201c\u6469\u897f\u4e0e\u4e00\u795e\u8bba\u201d\u4e2d\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5bf9\u5b97\u6559\u6709\u4e00\u4e9b\u771f\u6b63\u65b0\u9c9c\u7684\u4e1c\u897f\u8981\u8bf4\u3002\n\u5728\u8fd9\u672c\u4e66\u5927\u7ea6\u4e09\u5206\u4e4b\u4e8c\u7684\u7bc7\u5e45\u4e2d\uff0c\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u800c\u53c8\u76f8\u5f53\u6df1\u523b\u7684\u89c2\u70b9-\u8fd9\u662f\u5f17\u6d1b\u4f0a\u5fb7\u6700\u64c5\u957f\u7684\u90a3\u79cd\u89c2\u70b9\u3002\u4ed6\u8bf4\uff0c\u72b9\u592a\u6559\u4f5c\u4e3a\u4e00\u79cd\u4fe1\u4ef0\u7684\u72ec\u7279\u4e4b\u5904\u6765\u81ea\u4e8e\u5b83\u5bf9\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u4fe1\u4ef0\u7684\u627f\u8bfa\uff0c\u4ece\u8fd9\u79cd\u627f\u8bfa\u4e2d\uff0c\u8bb8\u591a\u76f8\u5e94\u7684\u4e8b\u60c5\u63a5\u8e35\u800c\u81f3\u3002\u5f17\u6d1b\u4f0a\u5fb7\u4e89\u8fa9\u8bf4\uff0c\u628a\u4e0a\u5e1d\u5e26\u5165\u5934\u8111\u4f1a\u7ed9\u4e2a\u4eba\u5e26\u6765\u65e0\u53ef\u4f30\u91cf\u7684\u4e30\u5bcc\u3002\u76f8\u4fe1\u5185\u5728\u7684\u3001\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u80fd\u529b\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u4eba\u4eec\u7684\u62bd\u8c61\u80fd\u529b\u3002\u4ed6\u8bf4\uff1a\u201c\u7981\u6b62\u5236\u4f5c\u4e0a\u5e1d\u7684\u8096\u50cf--\u5d07\u62dc\u4e00\u4e2a\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u51b2\u52a8--\u610f\u5473\u7740\u5728\u72b9\u592a\u6559\u4e2d\uff0c\u611f\u5b98\u77e5\u89c9\u88ab\u653e\u5728\u4e86\u53ef\u4ee5\u88ab\u79f0\u4e3a\u62bd\u8c61\u89c2\u5ff5\u7684\u6b21\u8981\u4f4d\u7f6e--\u77e5\u6027\u6218\u80dc\u4e86\u611f\u5b98\u3002\u201d\n\u5982\u679c\u4eba\u4eec\u53ef\u4ee5\u5d07\u62dc\u4e0d\u5728\u90a3\u91cc\u7684\u4e1c\u897f\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u53cd\u601d\u4e0d\u5728\u90a3\u91cc\u7684\u4e1c\u897f\uff0c\u6216\u8005\u601d\u8003\u4ee5\u8c61\u5f81\u6027\u7684\u800c\u4e0d\u662f\u76f4\u63a5\u7684\u65b9\u5f0f\u5448\u73b0\u7ed9\u4ed6\u4eec\u7684\u4e1c\u897f\u3002\u56e0\u6b64\uff0c\u4e00\u795e\u8bba\u7684\u8111\u529b\u52b3\u52a8\u4f7f\u72b9\u592a\u4eba\u505a\u597d\u4e86\u51c6\u5907-\u5c31\u50cf\u5b83\u6700\u7ec8\u4f1a\u8ba9\u897f\u65b9\u5176\u4ed6\u4eba\u505a\u597d\u51c6\u5907\u4e00\u6837-\u5728\u6cd5\u5f8b\u3001\u6570\u5b66\u3001\u79d1\u5b66\u548c\u6587\u5b66\u827a\u672f\u65b9\u9762\u53d6\u5f97\u5353\u8d8a\u6210\u5c31\u3002\u5b83\u4f7f\u4ed6\u4eec\u5728\u6240\u6709\u7684\u6d3b\u52a8\u4e2d\u90fd\u6709\u4f18\u52bf\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u5305\u62ec\u7528\u6587\u5b57\u3001\u6570\u5b57\u6216\u7ebf\u6761\u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u7684\u7ecf\u9a8c\u6a21\u578b\uff0c\u5e76\u4e0e\u62bd\u8c61\u4e00\u8d77\u5de5\u4f5c\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u81ea\u7136\u7684\u63a7\u5236\u6216\u7ed9\u751f\u6d3b\u5e26\u6765\u4eba\u9053\u79e9\u5e8f\u3002\u5f17\u6d1b\u4f0a\u5fb7\u79f0\u8fd9\u79cd\u5185\u5316\u8fc7\u7a0b\u4e3a\u201c\u77e5\u6027\u7684\u8fdb\u6b65\u201d\uff0c\u4ed6\u5c06\u5176\u76f4\u63a5\u5f52\u529f\u4e8e\u5b97\u6559\u3002\n\u91cc\u5fb7\u63a8\u6d4b\uff0c\u4eba\u7c7b\u6700\u5f3a\u70c8\u7684\u613f\u671b\u4e4b\u4e00\u5c31\u662f\u76f4\u63a5\u4e0e\u4e0a\u5e1d\u6216\u8bf8\u795e\u76f8\u9047\u3002\u6211\u4eec\u60f3\u8981\u770b\u5230\u6211\u4eec\u7684\u795e\u5e76\u8ba4\u8bc6\u4ed6\u4eec\u3002\u5e0c\u814a\u5b97\u6559\u7684\u90e8\u5206\u5438\u5f15\u529b\u5728\u4e8e\u5b83\u4e3a\u8ffd\u968f\u8005\u63d0\u4f9b\u4e86\u76f4\u63a5\u7684\u3001\u5f80\u5f80\u662f\u534e\u4e3d\u7684\u795e\u4ed9\u6548\u679c\u56fe-\u6216\u8bb8\u8fd8\u63d0\u4f9b\u4e86\u5728\u5730\u7403\u4e0a\u4e0e\u795e\u4ed9\u89c1\u9762\u7684\u53ef\u80fd\u6027\u3002\u968f\u7740\u5723\u5f92\u7684\u51fa\u73b0\uff0c\u57fa\u7763\u6559\u6062\u590d\u4e86\u5b97\u6559\u7684\u89c6\u89c9\u5f3a\u5ea6\uff1b\u5b83\u4ece\u72b9\u592a\u6559\u5411\u5f02\u6559\u4fe1\u4ef0\u7684\u65b9\u5411\u540e\u9000\u4e86\u4e00\u6b65\u3002\u5f17\u6d1b\u4f0a\u5fb7\u8bf4\uff0c\u8fd9\u662f\u5b83\u7e41\u8363\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u72b9\u592a\u6559\u4ece\u6765\u6ca1\u6709\u653e\u5f03\u8fc7\u8fd9\u79cd\u4f1f\u5927\u7684\u653e\u5f03\u3002\u6839\u636e\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8bf4\u6cd5\uff0c\u8fd9\u79cd\u653e\u5f03\u7ed9\u4e86\u72b9\u592a\u4eba\u975e\u51e1\u7684\u667a\u529b\u529b\u91cf\uff0c\u8fd9\u662f\u4ed6\u94a6\u4f69\u7684\uff0c\u4f46\u8fd9\u4e5f\u8ba9\u4ed6\u4eec\u76f8\u5f53\u81ea\u8c6a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u89c9\u5f97\u81ea\u5df1\u662f\u6240\u6709\u6c11\u65cf\u4e2d\u80fd\u591f\u7ef4\u6301\u8fd9\u79cd\u4fe1\u4ef0\u7684\u4eba\u3002\n\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8bba\u70b9\u8868\u660e\uff0c\u5bf9\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u4fe1\u4ef0\u4e0d\u4ec5\u53ef\u4ee5\u4e3a\u79d1\u5b66\u3001\u6587\u5b66\u548c\u6cd5\u5f8b\u5960\u5b9a\u57fa\u7840\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6fc0\u70c8\u7684\u53cd\u7701\u5960\u5b9a\u57fa\u7840\u3002\u5f17\u6d1b\u4f0a\u5fb7\u6697\u793a\uff0c\u80fd\u591f\u601d\u8003\u4e00\u4e2a\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u4eba\uff0c\u5904\u4e8e\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u5730\u4f4d\uff0c\u80fd\u591f\u8ba4\u771f\u5bf9\u5f85\u5185\u5fc3\u751f\u6d3b\u4e2d\u770b\u4e0d\u89c1\uff0c\u4f46\u4e5f\u8bb8\u662f\u51b3\u5b9a\u6027\u7684\u52a8\u6001\u3002\u4ed6\u80fd\u66f4\u597d\u5730\u4e86\u89e3\u81ea\u5df1\u3002\u8981\u6d3b\u5f97\u597d\uff0c\u73b0\u4ee3\u4eba\u5fc5\u987b\u5b66\u4f1a\u4e86\u89e3\u81ea\u5df1\u6240\u6709\u7684\u5947\u7279\u4e4b\u5904\u3002\u4ed6\u5fc5\u987b\u80fd\u591f\u505c\u4e0b\u6765\u601d\u8003\u4ed6\u81ea\u5df1\u7684\u6027\u683c\uff0c\u4ed6\u7684\u6b32\u671b\uff0c\u4ed6\u7684\u7981\u5fcc\u548c\u4ef7\u503c\u89c2\uff0c\u4ed6\u7684\u5185\u5728\u77db\u76fe\u3002\u72b9\u592a\u6559\uff0c\u5bf9\u4e00\u4e2a\u770b\u4e0d\u89c1\u7684\u4e0a\u5e1d\u7684\u627f\u8bfa\uff0c\u4e3a\u8fd9\u6837\u505a\u6253\u5f00\u4e86\u9053\u8def\u3002\u5b83\u7ed9\u4e86\u6211\u4eec\u5185\u5728\u7684\u793c\u7269\u3002\n\u5f17\u6d1b\u4f0a\u5fb7\u610f\u8bc6\u5230\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u79cd\u81ea\u7701\u6a21\u5f0f\uff0c\u4f46\u4ed6\u5f53\u7136\u8ba4\u4e3a\u7cbe\u795e\u5206\u6790\u662f\u76ee\u524d\u4e3a\u6b62\u6700\u597d\u7684\u3002\u4ed6\u8bf4\uff0c\u8bd7\u4eba\u4eec\u5728\u4ed6\u4e4b\u524d\u662f\u5185\u5fc3\u751f\u6d3b\u7684\u53d1\u73b0\u8005\uff0c\u4f46\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u80fd\u591f\u4f7f\u4ed6\u4eec\u5bf9\u5185\u5fc3\u751f\u6d3b\u7684\u77e5\u8bc6\u7cfb\u7edf\u5316\u548c\u53ef\u83b7\u5f97\u6027\u3002\u6240\u4ee5\u5728\u6574\u672c\u6469\u897f\u7684\u4e66\u4e2d\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u5de7\u5999\u5730\u5c06\u81ea\u5df1\u4e0e\u5148\u77e5\u76f8\u63d0\u5e76\u8bba\uff0c\u5e76\u6697\u793a\u7cbe\u795e\u5206\u6790\u53ef\u80fd\u662f\u72b9\u592a\u4eba\u201c\u667a\u529b\u8fdb\u6b65\u201d\u6700\u91cd\u8981\u7684\u7ee7\u627f\u4eba\u3002\u5f17\u6d1b\u4f0a\u5fb7\u8ba4\u4e3a\uff0c\u4ed6\u56e0\u81f4\u529b\u4e8e\u7cbe\u795e\u5206\u6790\u800c\u53d7\u82e6(\u7cbe\u795e\u5206\u6790\u4e0d\u7f3a\u4e4f\u6279\u8bc4\u8005)\uff0c\u663e\u7136\u5c06\u6469\u897f\u89c6\u4e3a\u52c7\u6562\u62b5\u6297\u4ed6\u7684\u4fe1\u4ef0\u7684\u4f1f\u5927\u4eba\u7269\u7684\u699c\u6837\uff0c\u65e0\u8bba\u662f\u57c3\u53ca\u7684\u6cd5\u8001\u8fd8\u662f\u4ed6\u81ea\u5df1\u7684\u4eba\u6c11\u3002\u6469\u897f\u575a\u6301\u81ea\u5df1\u7684\u4fe1\u5ff5--\u5c31\u50cf\u5f17\u6d1b\u4f0a\u5fb7\u6e34\u671b\u505a\u7684\u90a3\u6837\u3002\n\u867d\u7136\u5f17\u6d1b\u4f0a\u5fb7\u5e0c\u671b\u4eba\u7c7b\u8d85\u8d8a\u5b97\u6559\uff0c\u4f46\u4ed6\u80af\u5b9a\u662f\u4ece\u6469\u897f\u7684\u6545\u4e8b\u4e2d\u83b7\u5f97\u7075\u611f\u7684\uff0c\u6469\u897f\u662f\u4ed6\u591a\u5e74\u6765\u4e00\u76f4\u7740\u8ff7\u7684\u4eba\u7269\u3002(\u4ed6\u57281914\u5e74\u53d1\u8868\u4e86\u7b2c\u4e00\u7bc7\u5173\u4e8e\u5148\u77e5\u7684\u6587\u7ae0\u3002)\u3002\u5f17\u6d1b\u4f0a\u5fb7\u60f3\u8981\u9886\u5bfc\u4eba\u4eec\uff0c\u4ed6\u60f3\u8981\u505a\u51fa\u5177\u6709\u6301\u4e45\u529b\u91cf\u548c\u529b\u91cf\u7684\u89c2\u5ff5\u521b\u65b0\uff1a\u56e0\u6b64\uff0c\u6ca1\u6709\u6bd4\u5148\u77e5\u66f4\u9ad8\u7684\u5178\u8303\u4e86\u3002\n\u201c\u6469\u897f\u548c\u4e00\u795e\u8bba\u201d\u8868\u660e\uff0c\u5c3d\u7ba1\u5f17\u6d1b\u4f0a\u5fb7\u4e0d\u4fe1\u6559\uff0c\u4f46\u4ed6\u4ecd\u7136\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b97\u6559\u4eba\u7269\u8eab\u4e0a\u627e\u5230\u7075\u611f\u3002\u5f17\u6d1b\u4f0a\u5fb7\u7684\u524d\u4efb\u5c3c\u91c7\u4e5f\u6709\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u5c3c\u91c7\u4ee5\u618e\u6076\u57fa\u7763\u6559\u800c\u95fb\u540d\uff0c\u5927\u4f53\u4e0a\u4ed6\u786e\u5b9e\u662f\u8fd9\u6837\u505a\u7684\u3002\u4f46\u4ed6\u5e76\u4e0d\u618e\u6076\u8036\u7a23\u57fa\u7763-\u4ed6\u6e34\u671b\u6548\u4eff\u4ed6\u7684\u81ea\u53d1\u6027\u3001\u575a\u97e7\u548c\u7cbe\u795e\u81ea\u7531\u3002\u201c\u53ea\u6709\u4e00\u4e2a\u57fa\u7763\u5f92\uff0c\u201d\u4ed6\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u4e00\u4e2a\u771f\u6b63\u7b26\u5408\u798f\u97f3\u6807\u51c6\u7684\u4eba\uff0c\u201c\u4ed6\u6b7b\u5728\u4e86\u5341\u5b57\u67b6\u4e0a\u3002\u201d\n\u53d4\u672c\u534e\uff0c\u5c3c\u91c7\u548c\u5f17\u6d1b\u4f0a\u5fb7\u90fd\u6df1\u6df1\u5730\u611f\u8c22\u4ed6\uff0c\u4ed6\u81ea\u5df1\u65e2\u662f\u4e00\u4e2a\u4e0d\u4fe1\u4ef0\u8005\uff0c\u4e5f\u662f\u4e00\u4e2a\u65e0\u60c5\u7684\u60b2\u89c2\u4e3b\u4e49\u8005\u3002\u5bf9\u53d4\u672c\u534e\u6765\u8bf4\uff0c\u751f\u6d3b\u5c31\u662f\u75db\u82e6\u3001\u60b2\u4f24\u3001\u60b2\u4f24\uff0c\u51e0\u4e4e\u6ca1\u6709\u522b\u7684\u3002\u7136\u800c\uff0c\u4ed6\u4e5f\u80fd\u591f\u4ece\u57fa\u7763\u6559\u4e2d\u83b7\u5f97\u7075\u611f\uff0c\u4ed6\u80af\u5b9a\u4e86\u8fd9\u6837\u4e00\u79cd\u4fe1\u4ef0\uff0c\u5373\u4ee5\u4e00\u4e2a\u4eba\u88ab\u6298\u78e8\u5728\u5341\u5b57\u67b6\u4e0a\u4f5c\u4e3a\u5176\u6838\u5fc3\u6807\u5fd7\u7684\u4fe1\u4ef0\uff0c\u5728\u6574\u4f53\u4e0a\u4e0d\u53ef\u80fd\u5b8c\u5168\u8bef\u5bfc\u751f\u547d\u3002\n\u53d4\u672c\u534e\u3001\u5c3c\u91c7\u548c\u5f17\u6d1b\u4f0a\u5fb7\u603b\u662f\u80fd\u591f\u8ba4\u8bc6\u5230\u5b97\u6559\u6b63\u5982\u54c8\u7f57\u5fb7\u00b7\u5e03\u9c81\u59c6(Harold Bloom)\u6240\u8bf4\u7684\u90a3\u6837\uff1a\u4e0d\u662f\u4eba\u6c11\u7684\u9e26\u7247\uff0c\u800c\u662f\u4eba\u6c11\u7684\u8bd7\u6b4c\u3002\u4ed6\u4eec\u8bfb\u201c\u5723\u7ecf\u201d\u5c31\u50cf\u8bfb\u8bd7\u4e00\u6837\uff0c\u5e76\u76f8\u5e94\u5730\u4ece\u4e2d\u5b66\u4e60\u3002\u4ed6\u4eec\u770b\u5230\uff0c\u5373\u4f7f\u6709\u4eba\u4e0d\u76f8\u4fe1\u8d85\u7136\u7684\u4e0a\u5e1d\uff0c\u5b97\u6559\u4ecd\u7136\u53ef\u4ee5\u6210\u4e3a\u5982\u4f55\u751f\u6d3b\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\u7684\u7075\u611f\u548c\u5b9e\u8df5\u667a\u6167\u7684\u6e90\u6cc9\u3002\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u901a\u5e38\u9700\u8981\u52aa\u529b\u7684\u667a\u529b\u5de5\u4f5c\u624d\u80fd\u627e\u5230\u8fd9\u79cd\u667a\u6167\u3002(\u6b63\u5982\u8c1a\u8bed\u6240\u8bf4\uff0c\u201c\u60f3\u8981\u628a\u5370\u5ea6\u7684\u8d22\u5bcc\u5e26\u56de\u5bb6\u7684\u4eba\u5fc5\u987b\u968f\u8eab\u643a\u5e26\u5370\u5ea6\u7684\u8d22\u5bcc\u3002\u201d)\u3002\u7136\u800c\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u665a\u5e74\u7684\u8f6c\u53d8\u544a\u8bc9\u6211\u4eec\uff0c\u5b97\u6559\u6709\u592a\u591a\u6301\u4e45\u7684\u4ef7\u503c-\u5373\u4f7f\u5bf9\u975e\u4fe1\u5f92\u6765\u8bf4-\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8981\u51b7\u843d\u5b83\u3002", "note_en": "Late in life \u2014 he was in his 80s, in fact \u2014 Sigmund Freud got religion. No, Freud didn\u2019t begin showing up at temple every Saturday, wrapping himself in a prayer shawl and reading from the Torah. To the end of his life, he maintained his stance as an uncompromising atheist, the stance he is best known for down to the present. In \u201cThe Future of an Illusion,\u201d he described belief in God as a collective neurosis: he called it \u201clonging for a father.\u201d But in his last completed book, \u201cMoses and Monotheism,\u201d something new emerges. There Freud, without abandoning his atheism, begins to see the Jewish faith that he was born into as a source of cultural progress in the past and of personal inspiration in the present. Close to his own death, Freud starts to recognize the poetry and promise in religion.\n A good deal of the antireligious polemic that has recently been abroad in our culture proceeds in the spirit of Freud\u2019s earlier work. In his defense of atheism, \u201cGod Is Not Great,\u201d Christopher Hitchens cites Freud as an ally who, he believes, exposed the weak-minded childishness of religion. Sam Harris and Richard Dawkins come out of the same Enlightenment spirit of hostile skepticism to faith that infuses \u201cThe Future of an Illusion.\u201d All three contemporary writers want to get rid of religion immediately and with no remainder.\n But there\u2019s more to Freud\u2019s take on religion than that. In his last book, written when he was old and ill, suffering badly from cancer of the jaw, Freud offers another perspective on faith. He argues that Judaism helped free humanity from bondage to the immediate empirical world, opening up fresh possibilities for human thought and action. He also suggests that faith in God facilitated a turn toward the life within, helping to make a rich life of introspection possible.\n \u201cMoses and Monotheism\u201d was not an easy book for Freud to write or to publish. He began it in the 1930s while he was living in Vienna, and he was well aware that when and if he brought the book out he could expect trouble from the Austrian Catholic Church. The book, after all, insisted on some strange and disturbing things. Most startling, it argued that Moses himself was not a Jew. How did Freud know? First of all, he claimed that Moses is not a Jewish name but an Egyptian one; second, Freud\u2019s study of dreams and fairy tales convinced him that the Bible had inverted things. In the Exodus story, Moses\u2019 mother, fearing Pharaoh\u2019s order to kill all Jewish boys, leaves the infant Moses in a basket on the river\u2019s edge, where he is discovered by Pharaoh\u2019s daughter. But Freud maintained that the Jews were the ones who had found him by the river. (In fairy tales and dreams, the child always begins with rich parents and is adopted by poor ones, yet his noble nature wins out \u2014 or so Freud insisted.) Freud also said that monotheism was not a Jewish but an Egyptian invention, descending from the cult of the Egyptian sun god Aton.\n In March 1938, the Nazis invaded Austria and put Freud and his family in mortal danger. Freud managed to escape from Vienna with the help of the wealthy Princess Marie Bonaparte, whom he adored, and of the government of the United States of America, which he relentlessly disliked. President Roosevelt even took a measure of interest in Freud\u2019s case, but that did not change Freud\u2019s mind about the rogue republic at all. America is enormous, he liked to say, but it is an enormous mistake.\n  Before leaving Vienna, Freud gave the Nazis a parting gift. They had made it clear to him that his emigration was contingent on signing a statement saying that he had not been molested in any way and that he had been able to continue with his scientific work. Freud signed, but then added a coda of his own devising: \u201cI can most highly recommend the Gestapo to everyone.\u201d\n n  London,  where Freud arrived in June 1938, he encountered another sort of resistance to finishing and publishing the Moses book. The first person who came to see him at his house on Elsworthy Road was his neighbor, a Jewish scholar named Abraham Yahuda. Yahuda had gotten wind of the contents of the volume and had come to beseech Freud not to publish. Didn\u2019t the Jews have enough trouble in the world without one of their number saying that Moses was not Jewish and that \u2014 in contrast to the peaceful death depicted in the Bible \u2014 Moses had been murdered by the Jews themselves, who resented the harsh laws he had tried to impose on them? Did Freud actually intend to claim that over time guilt for the murder had enhanced Moses\u2019 status and his legacy of monotheism, creating in the Jews what Freud liked to call a \u201creaction formation\u201d? Yahuda was far from being the last of such petitioners. During his early days in London, Freud received no end of entreaties to let the project go.\n What did Freud do? He published of course \u2014 and not just in German but, as quickly and conspicuously as possible, in English. The reviews were terrible. The private response was often bitter. And Freud was delighted. He reveled in the strong sales figures, shrugged off the nasty reviews and sang his own praises. \u201cQuite a worthy exit,\u201d he called the Moses book.\n And it was, but not chiefly because of the strange speculations about Moses\u2019 identity that worried Yahuda and scandalized the book\u2019s first readers. There is a more subtle and original dimension to the book, and perhaps it was that dimension that made Freud so determined to complete and publish it, despite all the resistance. For in \u201cMoses and Monotheism\u201d Freud has something truly fresh to say about religion.\n About two-thirds of the way into the volume, he makes a point that is simple and rather profound \u2014 the sort of point that Freud at his best excels in making. Judaism\u2019s distinction as a faith, he says, comes from its commitment to belief in an invisible God, and from this commitment, many consequential things follow. Freud argues that taking God into the mind enriches the individual immeasurably. The ability to believe in an internal, invisible God vastly improves people\u2019s capacity for abstraction. \u201cThe prohibition against making an image of God \u2014 the compulsion to worship a God whom one cannot see,\u201d he says, meant that in Judaism \u201ca sensory perception was given second place to what may be called an abstract idea \u2014 a triumph of intellectuality over sensuality.\u201d\n If people can worship what is not there, they can also reflect on what is not there, or on what is presented to them in symbolic and not immediate terms. So the mental labor of monotheism prepared the Jews \u2014 as it would eventually prepare others in the West \u2014 to achieve distinction in law, in mathematics, in science and in literary art. It gave them an advantage in all activities that involved making an abstract model of experience, in words or numbers or lines, and working with the abstraction to achieve control over nature or to bring humane order to life. Freud calls this internalizing process an \u201cadvance in intellectuality,\u201d and he credits it directly to religion.\n reud speculates that one of the strongest human desires is to encounter God \u2014 or the gods \u2014 directly. We want to see our deities and to know them. Part of the appeal of Greek religion lay in the fact that it offered adherents direct, and often gorgeous, renderings of the immortals \u2014 and also, perhaps, the possibility of meeting them on earth. With its panoply of saints, Christianity restored visual intensity to religion; it took a step back from Judaism in the direction of the pagan faiths. And that, Freud says, is one of the reasons it prospered.\n  Judaism, on the other hand, never let go of the great renunciation. The renunciation, according to Freud, gave the Jews remarkable strength of intellect, which he admired, but it also made them rather proud, for they felt that they, among all peoples, were the ones who could sustain such belief.\n Freud\u2019s argument suggests that belief in an unseen God may prepare the ground not only for science and literature and law but also for intense introspection. Someone who can contemplate an invisible God, Freud implies, is in a strong position to take seriously the invisible, but perhaps determining, dynamics of inner life. He is in a better position to know himself. To live well, the modern individual must learn to understand himself in all his singularity. He must be able to pause and consider his own character, his desires, his inhibitions and values, his inner contradictions. And Judaism, with its commitment to one unseen God, opens the way for doing so. It gives us the gift of inwardness.\n Freud was aware that there were many modes of introspection abroad in the world, but he of course thought psychoanalysis was by far the best. He said that the poets were there before him as discoverers of the inner life but that they had never been able to make their knowledge about it systematic and accessible. So throughout the Moses book, Freud subtly identifies himself with the prophet and implies that psychoanalysis may be the most consequential heir of the Jewish \u201cadvance in intellectuality.\u201d Freud believed that he had suffered for his commitment to psychoanalysis (which did not and does not lack detractors) and clearly looked to Moses as an example of a great figure who had braved resistance to his beliefs, both by Pharaoh in Egypt and by his own people. Moses hung on to his convictions \u2014 much as Freud aspired to do.\n Though Freud hoped that mankind would pass beyond religion, he surely took inspiration from the story of Moses, a figure with whom he had been fascinated for many years. (He published his first essay on the prophet in 1914.) Freud wanted to lead people, and he wanted to make conceptual innovations that had staying power and strength: for this there could be no higher exemplar than the prophet.\n \u201cMoses and Monotheism\u201d indicates that Freud, irreligious as he was, could still find inspiration in a religious figure. Something similar was true about Freud\u2019s predecessor, Nietzsche. Nietzsche is famous for detesting Christianity, and by and large he did. But he did not detest Jesus Christ \u2014 whose spontaneity, toughness and freedom of spirit he aspired to emulate. \u201cThere has been only one Christian,\u201d he once said, one person who truly lived up to the standards of the Gospel, \u201cand he died on the cross.\u201d\n Schopenhauer, to whom both Nietzsche and Freud were deeply indebted, was himself an unbeliever, as well as being an unrelenting pessimist. To Schopenhauer, life was pain, grief, sorrow and little else. Yet he, too, was able to take inspiration from Christianity, affirming as he did that a faith that had a man being tortured on a cross as its central emblem couldn\u2019t be entirely misleading in its overall take on life.\n Schopenhauer, Nietzsche and Freud were all at times able to recognize religion as being what Harold Bloom has wisely called it: not the opium of the people but the poetry of the people. They read Scripture as though it were poetry, and they learned from it accordingly. They saw that even if someone does not believe in a transcendent God, religion can still be a source of inspiration and of practical wisdom about how to live in the world. To be sure, it often takes hard intellectual work to find that wisdom. (As the proverb has it, \u201cHe who would bring home the wealth of the Indies must carry the wealth of the Indies with him.\u201d) Yet Freud\u2019s late-life turn shows us that there is too much of enduring value in religion \u2014 even for nonbelievers \u2014 ever to think of abandoning it cold.", "posttime": "2020-06-21 00:28:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fe1\u4ef0,freud,\u6469\u897f", "title": "\u201c\u5f17\u6d1b\u4f0a\u5fb7\u4e0e\u4fe1\u4ef0\u201d(2007)", "title_en": "Freud and Faith (2007)", "transed": 1, "url": "https://www.nytimes.com/2007/09/09/magazine/09wwln-lede-t.html", "via": "", "real_tags": ["\u4fe1\u4ef0", "freud", "\u6469\u897f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007417, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u6545\u4e8b\u66dd\u5149\u540e\uff0c\u6211\u5bf9Hey.com App Store\u62d2\u7edd\u7684\u4e89\u8bae\u6709\u4e00\u4e2a\u538b\u5012\u4e00\u5207\u7684\u60f3\u6cd5\u3002\u8fd9\u4e00\u70b9\u6211\u5df2\u7ecf\u5728\u6700\u8fd1\u7684\u4e00\u671fATP\u8282\u76ee\u548c\u63a8\u7279\u4e0a\u5c1d\u8bd5\u8fc7\u4e86\u3002\u5728WWDC\u5e26\u7740\u81ea\u5df1\u7684\u4e00\u6ce2\u82f9\u679c\u76f8\u5173\u65b0\u95fb\u5230\u6765\u4e4b\u524d\uff0c\u6211\u60f3\u518d\u6765\u4e00\u6b21\u3002\u5f00\u59cb\u4e86\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u60f3\u8981\u529f\u80fd\u4e30\u5bcc\u3001\u6613\u4e8e\u4f7f\u7528\u3001\u5b89\u5168\u4e14\u5177\u6709\u826f\u597d\u5ba2\u6237\u652f\u6301\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u82f9\u679c\u3001\u5f00\u53d1\u8005\u548c\u5ba2\u6237\u90fd\u540c\u610f\u8fd9\u4e00\u70b9\u3002\u6fc0\u52b1\u63aa\u65bd\u4e0e\u6b64\u7565\u6709\u4e0d\u540c\u3002\u82f9\u679c\u548c\u5f00\u53d1\u8005\u90fd\u60f3\u8d5a\u94b1\u3002\u5ba2\u6237\u5e0c\u671b\u5e94\u7528\u7a0b\u5e8f\u4ef7\u683c\u4f4e\uff0c\u4f46\u4e5f\u5e0c\u671b\u5e94\u7528\u7a0b\u5e8f\u5f97\u5230\u826f\u597d\u7684\u652f\u6301\u548c\u7ef4\u62a4\u3002\n\u82f9\u679c\u901a\u8fc7\u5bf9App Store\u7684\u63a7\u5236\uff0c\u89c4\u5b9a\u4e86\u5f00\u53d1\u8005\u5fc5\u987b\u540c\u610f\u7684\u6761\u6b3e\uff0c\u624d\u80fd\u5c06iOS\u5e94\u7528\u5206\u53d1\u7ed9\u5ba2\u6237\u3002\u82f9\u679c\u7684\u89c4\u5219\u51b3\u5b9a\u4e86\u5404\u65b9\u5229\u76ca\u5982\u4f55\u5e73\u8861\u3002\n\u591a\u5e74\u6765\uff0c\u82f9\u679c\u4e00\u76f4\u4ee5\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u76ee\u6807\u4e3a\u76ee\u6807\uff1a\u5efa\u7acb\u4e00\u4e2a\u529f\u80fd\u4e30\u5bcc\u3001\u6613\u4e8e\u4f7f\u7528\u3001\u5b89\u5168\u7684\u5e94\u7528\u5546\u5e97\uff0c\u4ee5\u5ba2\u6237\u8ba4\u4e3a\u6709\u5438\u5f15\u529b\u7684\u4ef7\u683c\u51fa\u552e\uff0c\u5e76\u4ee5\u4e00\u79cd\u8ba9\u5f00\u53d1\u8005\u6ee1\u610f\u548c\u76c8\u5229\u7684\u65b9\u5f0f\u5b9e\u73b0\u8d27\u5e01\u5316\uff0c\u540c\u65f6\u4ece\u6240\u6709\u4e0e\u5e94\u7528\u76f8\u5173\u7684\u6536\u5165\u4e2d\u83b7\u5f97\u76f8\u5f53\u5927\u7684\u6bd4\u4f8b\uff1a\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f30%\uff0c\u8ba2\u9605\u7b2c\u4e00\u5e74\u540e\u662f15%\uff0c\u5176\u4ed6\u4e00\u4e9b\u901a\u5e38\u662f\u975e\u516c\u5f00\u7684\u6570\u5b57\uff0c\u5982\u679c\u4f60\u78b0\u5de7\u662fNetflix\u6216\u4e9a\u9a6c\u900a\u8fd9\u6837\u7684\u79d1\u6280\u5de8\u5934\uff0c\u8fd9\u4e00\u6570\u5b57\u4e0d\u523030%\u3002\nApp Store\u89c4\u5219\u662f\u82f9\u679c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5176\u76ee\u6807\u7684\u6700\u5f3a\u5927\u7684\u5de5\u5177\u3002\u4e3a\u6b64\uff0c\u89c4\u5219\u591a\u5e74\u6765\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\u3002\u4f46\u5728\u6240\u6709\u8fd9\u4e9b\u53d8\u5316\u4e2d\uff0c\u82f9\u679c\u4ece\u672a\u653e\u5f03\u5b83\u7684\u68a6\u60f3\uff0c\u5373\u4e00\u4e2a\u5145\u6ee1\u4f1f\u5927\u5e94\u7528\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u5546\u5e97\uff0c\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u611f\u5230\u9ad8\u5174\uff0c\u5e76\u4e3a\u82f9\u679c\u548c\u5f00\u53d1\u8005\u8d5a\u5f97\u76c6\u6ee1\u94b5\u6ee1\u3002\n\u4eca\u5929\uff0c\u82f9\u679c\u7684\u7acb\u573a\u4f3c\u4e4e\u662f\uff0c\u5982\u679c\u4ed6\u4eec\u53ea\u9075\u5b88App Store\u89c4\u5219\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6761\u6b3e\uff0c\u516c\u53f8\u5c31\u4f1a\u56f4\u7ed5\u82f9\u679c\u7684\u6536\u5165\u524a\u51cf\u6765\u5efa\u7acb\u4ed6\u4eec\u7684\u5546\u4e1a\u6a21\u5f0f\uff0c\u5c31\u50cf\u516c\u53f8\u5728\u4e92\u8054\u7f51\u65f6\u4ee3\u4e4b\u524d\u56f4\u7ed5\u5b9e\u4f53\u96f6\u552e\u6210\u672c\u5efa\u7acb\u5546\u4e1a\u6a21\u5f0f\u4e00\u6837\u3002\u82f9\u679c\u4f3c\u4e4e\u575a\u4fe1\uff0c\u53ea\u8981\u63a5\u8fd1\u76ee\u524d\u7684\u4e00\u5957App Store\u89c4\u5219\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5176\u96c4\u5fc3\u52c3\u52c3\u7684\u76ee\u6807\u72b6\u6001\u3002\n\u8fd9\u4e00\u4fe1\u5ff5\u6ca1\u6709\u8bc1\u636e\u652f\u6301\u3002\u591a\u5e74\u7684\u5386\u53f2\u8868\u660e\uff0c\u82f9\u679c\u79bb\u76ee\u6807\u8d8a\u6765\u8d8a\u8fdc\uff0c\u800c\u4e0d\u662f\u8d8a\u6765\u8d8a\u8fd1\u3002\u770b\u770bNetflix\u653e\u5f03\u5e94\u7528\u5185\u8d2d\u4e70\uff0c\u82f9\u679c\u4e0d\u5f97\u4e0d\u4e0e\u4e9a\u9a6c\u900a\u8fbe\u6210\u7279\u6b8a\u534f\u8bae\uff0c\u4ee5\u53ca\u6240\u6709\u5c3d\u5176\u6240\u80fd\u89c4\u907f\u73b0\u6709\u89c4\u5219\u7684\u5e94\u7528\uff0c\u635f\u5bb3\u4e86\u7528\u6237\u4f53\u9a8c\u4ee5\u53ca\u82f9\u679c\u548c\u5f00\u53d1\u8005\u7684\u6536\u5165\u3002\u8fd9\u751a\u81f3\u8fd8\u6ca1\u6709\u8003\u8651\u5230\u5ba2\u6237\u652f\u6301\u7684\u60c5\u51b5\uff0c\u8fd9\u4e00\u76f4\u662f\u53ef\u6015\u7684\uff0c\u6216\u8005\u50cf\u7535\u5b50\u4e66\u9500\u552e\u8fd9\u6837\u7684\u4e1a\u52a1\u7684\u5b58\u5728\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u6709\u989d\u5916\u768430%\u7ed9\u82f9\u679c\u3002\n\u82f9\u679c\u5e94\u7528\u5546\u5e97\u7684\u89c4\u5219\u9700\u8981\u6539\u53d8\uff0c\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5f00\u53d1\u8005\u4e0d\u559c\u6b22\u5b83\u4eec\u3002\u4ed6\u4eec\u9700\u8981\u6539\u53d8\uff0c\u56e0\u4e3a\u65f6\u95f4\u548c\u7ecf\u9a8c\u8868\u660e\uff0c\u8003\u8651\u5230\u73b0\u6709\u7684\u89c4\u5219\uff0c\u6ca1\u6709\u53ef\u884c\u7684\u9014\u5f84\u6765\u5b9e\u73b0\u82f9\u679c\u7684\u76ee\u6807\u72b6\u6001\u3002\u4efb\u4f55\u7279\u5b9aApp Store\u4e89\u8bae\u7684\u7ec6\u8282\u5f80\u5f80\u4f1a\u5206\u6563\u4eba\u4eec\u5bf9\u8fd9\u4e00\u66f4\u5927\u73b0\u5b9e\u7684\u6ce8\u610f\u529b\u3002\u5f3a\u786c\u7684\u7acb\u573a\u4e0d\u4f1a\u52a8\u6447\u4eba\u5fc3\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u4e0d\u727a\u7272\u7528\u6237\u4f53\u9a8c\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u65e0\u6cd5\u6539\u53d8\u5f00\u53d1\u4eba\u5458\u7684\u5546\u4e1a\u6a21\u5f0f\u3002\u82f9\u679c\u9700\u8981\u51b3\u5b9a\u5b83\u662f\u60f3\u8981\u201c\u6b63\u786e\u201d\uff0c\u8fd8\u662f\u60f3\u8981\u5feb\u4e50\u3002", "note_en": "Ever since the  story  broke, I\u2019ve had one overriding thought about the  Hey.com App Store rejection controversy. It\u2019s a point I\u2019ve already tried to make on  a recent episode of ATP and  on Twitter. Before WWDC arrives with its own wave of Apple-related news, I\u2019d like to take one more run at it. Here goes.\n Everyone wants apps that are feature-rich, easy-to-use, secure, and have good customer support. Apple, developers, and customers all agree on this. Incentives diverge slightly from here. Both Apple and developers want to make money. Customers want app prices to be low, but also want apps that are well-supported and maintained.\n Apple, through its control of the App Store, dictates the terms that developers must agree to in order to distribute iOS apps to customers. Apple\u2019s rules determine how the interests of all parties are balanced.\n For many years now, Apple has been aiming for an ambitious goal state: an App Store filled with feature-rich, easy-to-use, secure apps, sold at prices customers find attractive, and monetized in a way that keeps developers happy and profitable while also giving Apple significant percentage of all app-related revenue: 30% for most things,  15% after the first year of subscriptions, and some other, usually non-public number that&#39;s less than 30% if you happen to be a fellow tech giant like Netflix or Amazon.\n The App Store rules are the most powerful tool Apple can use to achieve its goal. To this end, the rules have been adjusted many times over the years. But throughout all these changes, Apple has never given up on its dream of an App Store filled with great apps that make everyone happy and make lots of money for both Apple and developers.\n Today, Apple\u2019s stance seems to be that if they just hold the line on a few key provisions of the App Store rules, companies will build their business models around the Apple&#39;s revenue cut in the same way companies built their business models around the costs of brick-and-mortar retail in the pre-Internet days. Apple seems to firmly believe that its ambitious goal state can be achieved with something close to the current set of App Store rules.\n This belief is not supported by the evidence. Years of history has shown that Apple is getting further away from its goal, not closer. Witness  Netflix abandoning in-app purchase, Apple having to  strike a special deal with Amazon, and  all the apps skirting the existing rules as best they can, to the detriment of the user experience and both Apple\u2019s and developers\u2019 revenue. And this is before even considering  the customer support situation, which has always been dire, or the existence of businesses like ebook sales that will never have an extra 30% handy to give to Apple.\n Apple\u2019s App Store rules need to change not (just) because developers don\u2019t like them. They need to change because time and experience has shown that there is  no viable path to Apple\u2019s goal state given the existing rules. The details of  any  particular  App  Store  controversy can often distract from this larger reality. A hardline stance will not sway hearts and minds, and it has proven unable to change developers&#39; business models without sacrificing the user experience. Apple needs to decide if it wants to be \u201cright,\u201d or if it wants to be happy.", "posttime": "2020-06-21 00:28:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u6279\u5224,hypercritical,\u82f9\u679c", "title": "\u8fc7\u5ea6\u6279\u5224\uff1a\u53ef\u80fd\u7684\u827a\u672f", "title_en": "Hypercritical: The Art of the Possible", "transed": 1, "url": "https://hypercritical.co/2020/06/20/the-art-of-the-possible", "via": "", "real_tags": ["\u827a\u672f", "\u6279\u5224", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "e0836f942d63e36795b541c9c748055d.jpg", "infoid": 1007416, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u897f\u5df4\u5c14\u7684\u6469\u9a6c\u91cc\u5170\u6d78\u4fe1\u4f1a\u8001\u4eba\u4e4b\u5bb6(Marland Baptist\u8001\u5e74\u9662)\u7684\u4e3b\u4efb\u5fb7\u91cc\u514b\u00b7\u5fb7\u7ef4\u7279\u7267\u5e08(Rev.Derrick DeWitt)\u6765\u8bf4\uff0c\u4e00\u4e2a\u5173\u952e\u95ee\u9898\u662f\uff1a\u4f60\u4ec0\u4e48\u65f6\u5019\u610f\u8bc6\u5230\u5a01\u80c1\u662f\u771f\u5b9e\u7684\uff0c\u4f60\u5fc5\u987b\u91c7\u53d6\u884c\u52a8\u4fdd\u62a4\u4f60\u7684\u5c45\u6c11\u548c\u5458\u5de5\uff1f\u8fd9\u662f\u4e00\u5bb6\u6709100\u5e74\u5386\u53f2\u7684\u62a4\u7406\u673a\u6784\uff0c\u6ca1\u6709\u611f\u67d3\u8fc7\u51a0\u72b6\u75c5\u6bd2\u3002\n\u201c\u5c31\u5728\u7279\u6717\u666e\u603b\u7edf\u8bf4\u6211\u4eec\u670915\u4e2a\u75c5\u4f8b\u4e4b\u540e\uff0c\u5f88\u5feb\u5c31\u4f1a\u964d\u5230\u96f6\u3002\u201d\n\u6211\u4e0d\u6562\u628a\u8bdd\u585e\u8fdb\u6d78\u793c\u4f1a\u7267\u5e08\u7684\u5634\u91cc\uff0c\u4f46\u542c\u8d77\u6765\u4ed6\u542c\u4e86\u7f8e\u56fd\u603b\u7edf\u7684\u8bdd\uff0c\u7136\u540e\u8ba4\u5b9a\u4e8b\u5b9e\u6070\u6070\u76f8\u53cd\u3002\n\u5f53\u7136\uff0c\u7279\u6717\u666e\u5df2\u7ecf\u6492\u8c0e\u6216\u53d1\u8868\u4e86\u6570\u5343\u6b21\u8bef\u5bfc\u6027\u8a00\u8bba\u3002\u56e0\u6b64\uff0c\u5230\u4ed6\u5c31\u804c\u4ee5\u6765\u7684\u7b2c\u56db\u4e2a2\u6708\uff0c\u9664\u4e86\u7279\u6717\u666e\uff0c\u6ca1\u6709\u4eba\u4f1a\u8ba4\u771f\u5bf9\u5f85\u4ed6\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u9884\u6d4b\u3002\n\u7279\u6717\u666e\u57282\u670826\u65e5\u7684\u767d\u5bab\u7b80\u62a5\u4f1a\u4e0a\u8bf4\uff1a\u201c\u5f53\u4f60\u670915\u8d77(\u6848\u4ef6)\uff0c\u800c\u51e0\u5929\u5185\u768415\u8d77\u5c06\u964d\u81f3\u63a5\u8fd1\u4e8e\u96f6\uff0c\u8fd9\u662f\u6211\u4eec\u6240\u505a\u7684\u76f8\u5f53\u597d\u7684\u5de5\u4f5c\u3002\u201d\n\u5f53\u7136\uff0c\u7f8e\u56fd\u65b0\u51a0\u80ba\u708e\u7684\u6b7b\u4ea1\u4eba\u6570\u5df2\u7ecf\u8d85\u8fc7\u5341\u4e00\u4e07\u4e03\u5343\u4eba\u3002\u534e\u5c14\u8857\u65e5\u62a5\u5bf9\u5dde\u6570\u636e\u7684\u5206\u6790\u663e\u793a\uff0c\u517b\u8001\u9662\u548c\u5176\u4ed6\u957f\u671f\u62a4\u7406\u8bbe\u65bd\u7684\u6b7b\u4ea1\u4eba\u6570\u63a5\u8fd15\u4e07\u4eba\u3002\u5728\u9a6c\u91cc\u5170\u5dde\uff0c\u8be5\u5dde\u8868\u793a\uff0c\u8001\u5e74\u62a4\u7406\u673a\u6784\u5df2\u670912,168\u4f8b\u75c5\u4f8b\u548c1,830\u4eba\u6b7b\u4ea1\u3002\u6b63\u5982\u201c\u592a\u9633\u62a5\u201d\u672c\u5468\u65e9\u4e9b\u65f6\u5019\u62a5\u9053\u7684\u90a3\u6837\uff0c\u8fd9\u5927\u7ea6\u662f\u4e94\u5206\u4e4b\u4e00\u7684\u9633\u6027\u68c0\u6d4b\u548c\u81ea\u5927\u6d41\u884c\u88ad\u51fb\u8be5\u5dde\u4ee5\u6765\u6b7b\u4ea1\u4eba\u6570\u7684\u8fd1\u4e09\u5206\u4e4b\u4e8c\u3002\n\u6839\u636e\u592a\u9633\u62a5\u7597\u517b\u9662\u75c5\u4f8b\u6570\u636e\u5e93\uff0c\u4f4d\u4e8e\u897f\u5df4\u5c14\u7684\u6469\u96f7\u7eb3\u5927\u9053\u7684\u9a6c\u91cc\u5170\u5dde\u6d78\u4fe1\u4f1a\u517b\u8001\u9662\u6ca1\u6709\u53d1\u751f\u8fc7\u4efb\u4f55\u4e8b\u4ef6\u3002\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u57282\u6708\u4e0b\u65ec\uff0c\u5728\u542c\u53d6\u4e86\u7279\u6717\u666e\u7684\u610f\u89c1\u540e\uff0c\u5fb7\u7ef4\u7279\u8ba4\u4e3a\u7f8e\u56fd\u9762\u4e34\u7740\u8303\u56f4\u4e0d\u53ef\u9884\u6d4b\u7684\u81f4\u547d\u5a01\u80c1\u3002\u4ed6\u7acb\u5373\u91c7\u53d6\u4e86\u884c\u52a8\u3002\n\u201c\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u53d6\u6d88\u6240\u6709\u7684\u8bbf\u95ee\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u6240\u4ee5\u5bb6\u4eba\u3001\u5fd7\u613f\u8005\u3001\u524d\u6765\u505a\u793c\u62dc\u7684\u4eba\u90fd\u88ab\u544a\u77e5\u4e0d\u80fd\u53c2\u89c2\u3002\u4e00\u5f00\u59cb\u5e76\u4e0d\u592a\u53d7\u6b22\u8fce\uff0c\u4f46\u4ed6\u4eec\u660e\u767d\u8fd9\u662f\u4e3a\u4e86\u5c45\u6c11\u7684\u5b89\u5168\u3002\u201c\u3002\n\u9a6c\u91cc\u5170\u5dde\u6d78\u4fe1\u4f1a\u517b\u8001\u9662\u6210\u7acb\u4e8e1920\u5e74\u5df4\u5c14\u7684\u6469\u79cd\u65cf\u9694\u79bb\u6761\u4f8b\uff0c\u88ab\u8ba4\u4e3a\u662f\u8be5\u5dde\u62e5\u6709\u548c\u7ecf\u8425\u7684\u6700\u53e4\u8001\u7684\u975e\u88d4\u7f8e\u56fd\u4eba\u7597\u517b\u9662\u3002\u5b83\u670930\u540d\u5e38\u4f4f\u5c45\u6c11\uff0c21\u540d\u5168\u804c\u5458\u5de5\u548c19\u540d\u517c\u804c\u5458\u5de5\u3002\u5b83\u53d7\u201c\u8054\u5408\u6d78\u4fe1\u4f1a\u4f20\u6559\u58eb\u516c\u7ea6\u201d\u7ba1\u8f96\u3002DeWitt\u662f\u6851\u5fb7\u6566-\u6e29\u5f7b\u65af\u7279\u7b2c\u4e00\u5c71\u52a0\u7565\u5c71\u6d78\u4fe1\u4f1a\u6559\u5802\u7684\u7267\u5e08\uff0c\u62c5\u4efb\u8be5\u4e4b\u5bb6\u7684\u9996\u5e2d\u8d22\u52a1\u5b98\u517c\u4e3b\u4efb\u5df2\u6709\u4e03\u5e74\u4e4b\u4e45\u3002\n\u4ed6\u63a5\u53d7\u8fd9\u4efd\u5de5\u4f5c\u540e\u7684\u7b2c\u4e00\u4e2a\u96c7\u5458\u662f\u4e00\u540d\u4e13\u95e8\u4ece\u4e8b\u611f\u67d3\u9884\u9632\u548c\u8d28\u91cf\u63a7\u5236\u7684\u62a4\u58eb\u3002\u90a3\u540d\u62a4\u58eb\u5c3c\u5965\u5361\u00b7\u5965\u65af\u672c(Nioca Osbourne)\u5236\u5b9a\u4e86\u5904\u7406\u611f\u67d3\u7684\u65b9\u6848\uff0c\u5e76\u5bf9\u5de5\u4f5c\u4eba\u5458\u8fdb\u884c\u4e86\u57f9\u8bad\u3002\n\u201c\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u5236\u5b9a\u4e86\u5e94\u5bf9\u611f\u67d3\u7684\u7a0b\u5e8f\uff0c\u201d\u5fb7\u7ef4\u7279\u7267\u5e08\u8bf4\u3002\u201c\u6211\u4eec\u505a\u7684\u4e0b\u4e00\u4ef6\u4e8b\u5c31\u662f\u6392\u9664\u5c45\u6c11\u5916\u51fa\uff0c\u9664\u975e\u662f\u4e3a\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u533b\u7597\u7a0b\u5e8f\u3002\u6240\u6709\u6ca1\u6709\u53c2\u4e0e\u76f4\u63a5\u62a4\u7406\u7684\u5458\u5de5\u90fd\u88ab\u544a\u77e5\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u7559\u5728\u5bb6\u91cc\u5de5\u4f5c\u3002\u6211\u4e2a\u4eba\u5df2\u7ecf\u670911\u4e2a\u661f\u671f\u6ca1\u6709(\u5728\u517b\u8001\u9662\u91cc)\u4e86\u3002\u201c\u3002\n\u5bb6\u91cc\u5f88\u5feb\u5c31\u56e4\u79ef\u4e86\u989d\u5916\u7684\u53e3\u7f69\u3001\u624b\u5957\u548c\u957f\u888d\u3002DeWitt\u5b89\u6392\u4e86\u4ed6\u7684\u770b\u95e8\u4eba\uff0c\u4ee5\u4fbf\u7597\u517b\u9662\u65e5\u591c\u5f97\u5230\u5f7b\u5e95\u7684\u6e05\u6d01\u3002\u4ed6\u8981\u6c42\u6bcf\u4e2a\u53c2\u4e0e\u7167\u987e\u5c45\u6c11\u7684\u5de5\u4f5c\u4eba\u5458\u9650\u5236\u65c5\u884c\u548c\u4e0e\u5bb6\u4eba\u7684\u63a5\u89e6\u3002\u5728\u62a5\u5230\u5de5\u4f5c\u65f6\uff0c\u5458\u5de5\u5fc5\u987b\u586b\u5199\u4e00\u4efd\u5173\u4e8e\u4ed6\u4eec\u7684\u6237\u5916\u6d3b\u52a8\u548c\u5065\u5eb7\u72b6\u51b5\u7684\u95ee\u5377\u3002\u201c\u6211\u4eec\u6bcf\u5929\u7ed9\u4ed6\u4eec\u91cf\u4e09\u6b21\u4f53\u6e29\uff0c\u201d\u5fb7\u7ef4\u7279\u8bf4\u3002\n\u6240\u6709\u5c45\u6c11\u90fd\u5206\u53d1\u4e86\u53e3\u7f69\u3002\u53d6\u6d88\u4e86\u793e\u533a\u7528\u9910\uff0c\u5c45\u6c11\u5728\u623f\u95f4\u91cc\u5403\u996d\u3002\u5411\u5458\u5de5\u63d0\u4f9b\u98df\u7269\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u5916\u51fa\u5403\u5348\u996d\u6216\u665a\u9910\u4e86\u3002\u6709\u4e00\u53f0\u7535\u89c6\u548c\u4e24\u4f4d\u5c45\u6c11\u7684\u623f\u95f4\u6709\u7b2c\u4e8c\u53f0\u7535\u89c6\uff0c\u4ee5\u5e2e\u52a9\u6ee1\u8db3\u793e\u4ea4\u8ddd\u79bb\u3002\n\u7597\u517b\u9662\u989d\u5916\u8058\u8bf7\u4e86\u4e00\u540d\u6d3b\u52a8\u534f\u8c03\u5458\u4e0e\u5c45\u6c11\u89c1\u9762\uff0c\u6307\u5bfc\u4ed6\u4eec\u8fdb\u884c\u65e5\u5e38\u953b\u70bc\uff0c\u4e0e\u4ed6\u4eec\u73a9\u68cb\u76d8\u6e38\u620f\u6216\u5e26\u4ed6\u4eec\u6563\u6b65\u3002DeWitt\u8bf4\uff0c\u8fd9\u4e00\u70b9\u7279\u522b\u91cd\u8981\uff0c\u56e0\u4e3a\u4ed6\u7684\u5c45\u6c11\u4e2d\u6709\u591a\u8fbe\u4e00\u534a\u6ca1\u6709\u4eb2\u621a\u6765\u63a2\u671b\u4ed6\u4eec\uff0c\u4ed6\u62c5\u5fc3\u4ed6\u4eec\u4f1a\u5728\u5927\u6d41\u884c\u671f\u95f4\u611f\u5230\u66f4\u52a0\u5b64\u7acb\u3002\nDeWitt\u548c\u4ed6\u7684\u5de5\u4f5c\u4eba\u5458\u5728\u770b\u5230\u653f\u5e9c\u673a\u6784\u7684\u6307\u4ee4\u4e4b\u524d\u505a\u4e86\u6240\u6709\u8fd9\u4e9b\u3002\u201c\u6211\u4eec\u6ca1\u6709\u7b49\u5f85\u75be\u75c5\u63a7\u5236\u4e2d\u5fc3\u3001\u9a6c\u91cc\u5170\u5dde\u536b\u751f\u90e8\u6216\u5df4\u5c14\u7684\u6469\u5e02\u7684\u6307\u5bfc\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u6211\u4eec\u5728\u5927\u6d41\u884c\u4e4b\u521d\u5c31\u505a\u4e86\u6211\u4eec\u8ba4\u4e3a\u8c28\u614e\u7684\u4e8b\u60c5\u3002\u201d\n\u4ed6\u628a\u56e2\u961f\u7684\u52aa\u529b\u5f52\u529f\u4e8e\u62a4\u58eb\u548c\u4ed6\u4eec\u7684\u52a9\u624b\u4eec\uff0c\u62a4\u7406\u4e3b\u4efb\u7ea6\u745f\u82ac\u00b7\u8499\u91d1(Josephine Mungin)\uff0c\u5bb6\u5ead\u7ba1\u7406\u5458\u7ea6\u7ff0\u5a1c\u00b7\u6c83\u5c14\u672c(Johana Walbourn)\uff0c\u533b\u7597\u4e3b\u4efb\u7eb3\u4f26\u5fb7\u00b7\u5df4\u62c9\u4f0a(Narender Bharaj)\u535a\u58eb\uff0c\u6e05\u6d01\u4eba\u5458\u3001\u8425\u517b\u5e08\u3001\u98df\u54c1\u4eba\u5458\u3001\u793e\u4f1a\u5de5\u4f5c\u8005\u548c\u6cbb\u7597\u5e08\u3002\nDeWitt\u8868\u793a\uff0c\u77ed\u671f\u5185\u4e0d\u4f1a\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u4e0d\u4f1a\u653e\u677e\u4ed6\u57282\u6708\u548c3\u6708\u5b9e\u65bd\u7684\u9650\u5236\u3002\u5c31\u50cf\u4ed6\u503e\u542c\u7684\u8bb8\u591a\u5065\u5eb7\u4e13\u4e1a\u4eba\u58eb\u4e00\u6837\uff0cDeWitt\u8ba4\u4e3a\u5bf9\u4ed6\u7684\u5f31\u52bf\u5c45\u6c11\u6765\u8bf4\uff0c\u73b0\u5728\u8fd9\u6837\u505a\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\n\u201c\u4f46\u6211\u4eec\u5141\u8bb8\u53c2\u89c2\u95e8\u5eca\uff0c\u201d\u4ed6\u8bf4\u3002\u5c45\u6c11\u4eec\u88ab\u5141\u8bb8\u4e00\u6b21\u4e00\u4e2a\u5730\u8d70\u51fa\u7597\u517b\u9662\u7684\u95e8\u5eca\uff0c\u4e0e12\u523018\u82f1\u5c3a\u5916\u7684\u4eba\u884c\u9053\u4e0a\u7684\u4eb2\u621a\u4ea4\u8c08\u3002\nDeWitt\u8bf4\uff1a\u201c\u6211\u81ea\u5df1\u7684\u59d1\u59d1Gerri Alston\u963f\u59e8\u662f\u4e00\u540d\u5c45\u6c11\u3002\u201d\u201c\u5979\u8d70\u51fa\u95e8\u5eca\uff0c\u54ed\u4e86\u8d77\u6765\u3002\u5979\u5f88\u9ad8\u5174\u89c1\u5230\u6211\u4eec\u3002\u201c", "note_en": "Here\u2019s a key question for the Rev. Derrick DeWitt, director of the Maryland Baptist Aged Home in West Baltimore, a 100-year-old nursing facility that has had no coronavirus infections: What was the moment you realized the threat was real and that you had to take action to protect your residents and staff?\n  \u201cRight after President Trump said we had 15 cases and it would soon be down to zero.\u201d\n    I dare not put words in a Baptist minister\u2019s mouth, but it sounds like he listened to what the President of the United States had to say, then decided just the opposite would be true.\n        Trump, of course, has lied or made misleading statements thousands of times. So, by the fourth February since his inauguration, none but the Trumpiest would take seriously his prediction for coronavirus.\n   \u201cWhen you have 15 [cases], and the 15 within a couple of days is going to be down to close to zero, that\u2019s a pretty good job we\u2019ve done,\u201d Trump said at a White House briefing on Feb. 26.\n      Of course, the U.S. death toll from COVID-19 has surpassed 117,000. An analysis of state data by The Wall Street Journal puts the number of deaths in nursing homes and other long-term care facilities at close to 50,000. In Maryland, the state says there have been 12,168 cases and 1,830 deaths at elder care facilities. As the Sun reported earlier this week, that\u2019s about one in five positive tests and nearly two-thirds of the deaths since the pandemic hit the state.\n  None has occurred at the Maryland Baptist Aged Home on Rayner Avenue in West Baltimore, according to the Sun\u2019s database of nursing home cases.\n    That\u2019s because, in late February, after hearing from Trump, DeWitt believed the country faced a deadly threat of unpredictable scope. He took immediate action.\n  \u201cThe first thing we did was eliminate all visitations,\u201d he says. \u201cSo family, volunteers, the church people who visit were all told they could not visit. It wasn\u2019t too popular at first, but they understood it was for the safety of the residents.\u201d\n   The Maryland Baptist Aged Home, established in the segregated-by-ordinance Baltimore of 1920, is considered the oldest African American owned and operated nursing home in the state. It has 30 residents and 21 full-time and 19 part-time employees. It is governed by the United Baptist Missionary Convention. DeWitt, pastor of First Mount Calvary Baptist Church in Sandtown-Winchester, has been chief financial officer and director of the home for seven years.\n  His first hire after taking the job was a nurse who specialized in infection prevention and quality control. That nurse, Nioca Osbourne, established protocols for dealing with infections and trained the staff.\n    \u201cSo we already had procedures in place for dealing with infections,\u201d Reverend DeWitt says. \u201cThe next thing we did was eliminate residents going out unless it was for a crucial medical procedure. All employees who were not involved in direct care were told to stay home and work from there if they could. I personally have not been [inside the nursing home] for 11 weeks.\u201d\n  The home stocked up quickly on extra masks, gloves and gowns. DeWitt scheduled his janitors so that the nursing home received thorough cleanings day and night. He asked each staff member involved in the care of residents to limit travel and contact with their family members. On reporting for work, staffers had to fill out a questionnaire about their outside activities and health conditions. \u201cAnd we took their temperature three times a day,\u201d DeWitt says.\n  Masks were dispensed to all the residents. Community meals were eliminated, and residents ate in their rooms. Employees were provided food so they would not have to go out for lunch or dinner. Rooms with one television and two residents got a second TV to help meet social distancing.\n   The nursing home hired an extra activities coordinator to visit with residents, coach them through daily exercises, play board games with them or take them for walks. This was particularly important because, says DeWitt, up to half of his residents have no relatives who visit them, and he was concerned they would feel even more isolated during the pandemic.\n    DeWitt and his staff did all this before seeing directives from government agencies. \u201cWe didn\u2019t wait for guidance from the Centers for Disease Control or from the Maryland Department of Health or from Baltimore City,\u201d he says. \u201cWe did what we thought was prudent at the very beginning of the pandemic.\u201d\n  He gives credit for a team effort to the nurses and their assistants, the nursing director, Josephine Mungin; the home\u2019s administrator, Johana Walbourn; the medical director, Dr. Narender Bharaj; the janitorial staff, dietician, food staff, social worker and therapists.\n  DeWitt says there will be no changes any time soon, no loosening up of the restrictions he put in place in February and March. Like many of the health professionals he listens to, DeWitt thinks it\u2019s too soon for that for his vulnerable residents.\n  \u201cBut we have allowed porch visits,\u201d he says. One at a time, residents are allowed to come out on the nursing home porch and speak to relatives on the sidewalk 12 to 18 feet away.\n    \u201cMy own aunt, Aunt Gerri Alston, is a resident,\u201d DeWitt says. \u201cShe came out on the porch and cried. She was happy to see us.\u201d", "posttime": "2020-06-21 00:07:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65b0\u51a0,baltimore,\u5c45\u6c11", "title": "\u5df4\u5c14\u7684\u6469\u897f\u90e8\u4e00\u5bb6\u7597\u517b\u9662\u65b0\u51a0\u80ba\u708e\u611f\u67d3\u4e3a\u96f6", "title_en": "A West Baltimore nursing home has zero Covid-19 infections", "transed": 1, "url": "https://www.baltimoresun.com/opinion/columnists/dan-rodricks/bs-md-rodricks-0619-20200618-re2obahhbzbddojazrkf65gdoq-story.html", "via": "", "real_tags": ["\u65b0\u51a0", "baltimore", "\u5c45\u6c11"]}]