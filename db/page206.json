[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1004774, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7248\u6743\u6240\u6709\u00a92012 www.avabodh.com\u3002\u7248\u6743\u6240\u6709\u3002", "note_en": "Copyright \u00a9 2012 www.avabodh.com. All rights reserved.", "posttime": "2020-06-02 10:11:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6784\u4ef6,internals,\u7248\u6743\u6240\u6709", "title": "C\u5185\u90e8\u6784\u4ef6", "title_en": "C Internals", "transed": 1, "url": "http://www.avabodh.com/cin/cin.html", "via": "", "real_tags": ["\u6784\u4ef6", "internals", "\u7248\u6743\u6240\u6709"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004773, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9009\u62e9\u8d2d\u4e70\u8bd5\u7528\u8ba2\u9605\u6e2f\u5e0110\u5143\uff0c\u8bd5\u7528\u671f4\u5468\uff0c\u8bd5\u7528\u7ed3\u675f\u540e\u6bcf\u6708\u6536\u8d39\u6e2f\u5e01495.00\u5143\u3002\n4\u5468\u5185\u53ef\u65e0\u9650\u5236\u4eab\u53d7\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u503c\u5f97\u4fe1\u8d56\u3001\u5c61\u83b7\u6b8a\u8363\u7684\u5546\u4e1a\u65b0\u95fb\u7684\u65e0\u9650\u91cf\u9ad8\u7ea7\u6570\u5b57\u8bbf\u95ee\u3002\n\u9009\u62e9\u8d2d\u4e70\u6570\u7801\u8ba2\u9605\uff0c\u6bcf\u5468\u6e2f\u5e01\u4e09\u5341\u516d\u70b9\u4e8c\u4e94\u5143\uff0c\u8bd5\u7528\u7ed3\u675f\u540e\u6bcf\u6708\u6536\u8d39\u6e2f\u5e01305.00\u5143\u3002\n\u793c\u54c1-\u6bcf\u6708\u4e0e\u5bb6\u4eba\u3001\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u591a\u8fbe10\u7bc7\u6587\u7ae0", "note_en": "Select  Purchase a Trial subscription for HK$10.00 for 4 weeks   You will be billed HK$495.00 per month after the trial ends\n  For 4 weeks receive unlimited Premium digital access to the FT&#39;s trusted, award-winning business news\n  Select  Purchase a Digital subscription for HK$36.25 per week   You will be billed HK$305.00 per month after the trial ends\n  Gift Article \u2013 share up to 10 articles a month with family, friends and colleagues", "posttime": "2020-06-02 09:21:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c45\u6c11,opens,\u8bd5\u7528", "title": "\u82f1\u56fd\u4e3a30\u4e07\u9999\u6e2f\u5c45\u6c11\u6253\u5f00\u5165\u7c4d\u5927\u95e8", "title_en": "UK opens door to citizenship for 300k HK residents", "transed": 1, "url": "https://www.ft.com/content/0cf70de8-fd10-4a5c-8303-fbd2b0b3811e", "via": "", "real_tags": ["\u5c45\u6c11", "opens", "\u8bd5\u7528"]}, {"category": "", "categoryclass": "", "imagename": "d7a41efb8db9481b52b05fc8ecdada58.png", "infoid": 1004772, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u516c\u6c11\u8b66\u5bdf\u6570\u636e\u9879\u76ee(CPDP.co)\u662f\u4e00\u4e2a\u8ba9\u8b66\u5bdf\u5bf9\u4ed6\u4eec\u6240\u670d\u52a1\u7684\u516c\u4f17\u8d1f\u8d23\u7684\u5de5\u5177\u3002\nCPDP\u8bb0\u5f55\u8b66\u5bdf\u4e0e\u516c\u4f17\u7684\u4e92\u52a8-\u5426\u5219\u8fd9\u4e9b\u8bb0\u5f55\u4f1a\u88ab\u57cb\u85cf\u5728\u5185\u90e8\u6570\u636e\u5e93\u4e2d-\u5e76\u5c06\u5176\u5f00\u653e\uff0c\u4f7f\u6570\u636e\u5bf9\u516c\u4f17\u6709\u7528\uff0c\u4ece\u800c\u4e3a\u6bcf\u4e00\u540dCPD\u8b66\u5bdf\u521b\u5efa\u4e00\u4e2a\u6c38\u4e45\u8bb0\u5f55\u3002\n\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86CPDP\uff0c\u91cd\u70b9\u662f\u901a\u8fc7\u4e0e\u6700\u80fd\u5145\u5206\u5229\u7528\u6570\u636e\u7684\u4eba\u5bc6\u5207\u5408\u4f5c\uff0c\u4f7f\u6570\u636e\u65e2\u53ef\u8bbf\u95ee\u53c8\u6709\u7528\u3002\u5982\u679c\u60a8\u4f7f\u7528\u8fc7CPDP\uff0c\u5e76\u4e14\u613f\u610f\u4e0e\u6211\u4eec\u8ba8\u8bba\u60a8\u7684\u4f53\u9a8c\uff0c\u8bf7\u968f\u65f6\u52a0\u5165\u6211\u4eec\u7684\u53cd\u9988\u793e\u533a\u6216\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684\u5b9e\u65f6\u804a\u5929\u6c14\u6ce1\u3002\n\u4ee3\u7801\u5e93\u548c\u4e0d\u65ad\u589e\u957f\u7684\u5e95\u5c42\u6570\u636e\u96c6\u96c6\u5408\u4ee5\u53ca\u6570\u636e\u5904\u7406\u811a\u672c\u548c\u539f\u59cb\u7684FOIA\u54cd\u5e94\u53ef\u5728\u6b64\u5904\u516c\u5f00\u83b7\u5f97\uff1a\n\u516c\u6c11\u8b66\u5bdf\u6570\u636e\u9879\u76ee\u6700\u521d\u7684\u76ee\u7684\u662f\u4f5c\u4e3a\u5168\u56fd\u900f\u660e\u5ea6\u7684\u5178\u8303\uff0c\u5b83\u662f\u5728\u4e0e\u829d\u52a0\u54e5\u5927\u5b66\u6cd5\u5b66\u9662\u66fc\u5fb7\u5c14\u6cd5\u5f8b\u63f4\u52a9\u8bca\u6240\u957f\u8fbe\u5341\u5e74\u7684\u5408\u4f5c\u4e2d\u4ea7\u751f\u7684\u3002CPDP\u73b0\u5728\u662f\u51e0\u4e2a\u76f8\u4e92\u4ea4\u7ec7\u7684\u9879\u76ee\u548c\u4f19\u4f34\u5173\u7cfb\u7684\u4e2d\u5fc3\uff0c\u8fd9\u4e9b\u9879\u76ee\u548c\u4f19\u4f34\u5173\u7cfb\u7684\u5171\u540c\u76ee\u6807\u662f\u901a\u8fc7\u900f\u660e\u5ea6\u3001\u8c03\u67e5\u548c\u95ee\u8d23\u4f7f\u8b66\u65b9\u6570\u636e\u5bf9\u516c\u4f17\u66f4\u6709\u7528\u3002\n\u901a\u8fc7\u4e3a\u6295\u8bc9\u6570\u636e\u7ba1\u7406\u3001\u8c03\u67e5\u6570\u636e\u5de5\u5177\u548c\u6570\u636e\u5904\u7406\u7ba1\u9053\u6784\u5efa\u6a21\u5757\u5316\u7684\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u6765\u52a0\u5f3a\u6211\u4eec\u7684\u6838\u5fc3\u57fa\u7840\u3002\u9664\u4e86\u4e3a\u6bcf\u5929\u4f9d\u8d56CPDP\u7684\u6570\u4ee5\u5343\u8ba1\u7684\u8c03\u67e5\u8bb0\u8005\u3001\u793e\u533a\u7ec4\u7ec7\u8005\u548c\u6c11\u6743\u5f8b\u5e08\u66f4\u9ad8\u6548\u5730\u4fdd\u6301\u6709\u5173CPDP\u7684\u4fe1\u606f\u6700\u65b0\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4e0e\u6211\u4eec\u7684\u6570\u636e\u751f\u547d\u5468\u671f\u4e2d\u5904\u4e8e\u4e0a\u4e0b\u6e38\u7684\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\u3002\u8fd9\u610f\u5473\u7740\u5e2e\u52a9\u6587\u804c\u76d1\u7763\u5b98\u5458\u5728\u521d\u59cb\u63a5\u6536\u70b9(\u4e0a\u6e38)\u63d0\u9ad8\u6570\u636e\u8d28\u91cf\uff0c\u5e76\u901a\u8fc7\u4e0e\u73b0\u6709\u5de5\u4f5c\u5de5\u5177(\u4e0b\u6e38)\u6574\u5408\uff0c\u5c06\u5173\u4e8e\u8b66\u5b98\u7684\u81f3\u5173\u91cd\u8981\u7684\u6709\u7528\u4fe1\u606f\u76f4\u63a5\u63d0\u4ea4\u5230\u516c\u8bbe\u8fa9\u62a4\u4eba\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u3002\n\u901a\u8fc7\u4e3a\u76ee\u524d\u901a\u8fc7Green v.Chicago\u8bc9\u8bbc\u53d1\u5e03\u768423\u4e07\u591a\u9875\u6295\u8bc9\u6587\u4ef6\u5e93\u542f\u7528\u57fa\u4e8e\u4e3b\u9898\u7684NLP\u6587\u672c\u5206\u6790\u529f\u80fd\u6765\u6df1\u5316\u6211\u4eec\u7684\u8c03\u67e5\uff0c\u901a\u8fc7\u6211\u4eec\u4e0e\u897f\u5317\u5927\u5b66N3\u5021\u8bae\u7684\u7814\u7a76\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u521b\u5efa\u5de5\u5177\u6765\u63a2\u7d22\u4e0d\u5f53\u884c\u4e3a\u6570\u636e\u7684\u7f51\u7edc\u7ef4\u5ea6\uff0c\u4ee5\u53ca\u901a\u8fc7\u6211\u4eec\u4e0e\u829d\u52a0\u54e5\u62a5\u9053\u8005\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u5f15\u5165\u65b0\u7684\u8b66\u5bdf\u8bc9\u8bbc(\u548c\u548c\u89e3)\u6570\u636e\u5e93\u3002\n\u901a\u8fc7\u5728\u5176\u4ed6\u57ce\u5e02(\u65b0\u5965\u5c14\u826f\u3001\u8fbe\u62c9\u65af\u3001\u7ebd\u7ea6\u5e02\u3001\u5965\u514b\u5170\u3001\u65e7\u91d1\u5c71\u3001\u534e\u76db\u987f\u7279\u533a)\u57f9\u517b\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34/\u76df\u53cb\u7f51\u7edc\u6765\u6269\u5927\u6211\u4eec\u7684\u8986\u76d6\u8303\u56f4\u3002\u5e76\u4e0e\u793e\u533a\u5229\u76ca\u76f8\u5173\u8005\u5408\u4f5c\uff0c\u5236\u5b9a\u90e8\u7f72\u8fd9\u4e9b\u516c\u5171\u5de5\u5177\u548c\u5b9e\u65bd\u5f00\u653e\u6570\u636e\u7ba1\u7406\u6700\u4f73\u5b9e\u8df5\u7684\u7b56\u7565\u3002", "note_en": "The Citizens Police Data Project ( CPDP.co) is a tool for holding police accountable to the public they serve.\n CPDP takes records of police interactions with the public \u2013 records that would otherwise be buried in internal databases \u2013 and opens them up to make the data useful to the public, creating a permanent record for every CPD police officer.\n  We\u2019ve built CPDP with a focus on making data both accessible and  useful by collaborating closely with the people who can best make use of it. If you\u2019ve used CPDP and you\u2019re open to talking with us about your experience, please  join our feedback community or click on the live chat bubble in the bottom-right corner at any time.\n The codebase and the growing collection of underlying datasets plus data processing scripts and the original FOIA responses are available publicly here:\n   Originally intended to serve as a national model for transparency, the Citizens Police Data Project emerged from a decade-long  collaboration with the University of Chicago Law School\u2019s Mandel Legal Aid Clinic. CPDP is now the hub of several inter-woven projects and partnerships that share the common goal of making police data more useful to the public through transparency, investigation, and accountability.\n  Strengthening our core foundation by building out a modular open-source infrastructure for\u00a0complaint data management,\u00a0investigative data tools, and data processing pipelines. Apart from becoming more efficient at keeping the information on CPDP up-to-date for the thousands of investigative journalists, community organizers, and civil rights attorneys who rely on it every day, we are also working together with partners who are upstream and downstream in the life cycle of our data. This means helping officials in civilian oversight to improve data quality at the point of initial intake (upstream), and delivering critically useful information about police officers directly into the workflows of public defenders by integrating with their existing work tools (downstream).\n Deepening our investigation by enabling theme-based NLP text analysis capabilities for a growing library of 230,000+ pages of complaint documents now being released through the  Green v. Chicago lawsuit,\u00a0creating tools to explore the networks dimension of misconduct data through our research partnership with the N3 Initiative at Northwestern University, and introducing a new dataset of police lawsuits (and settlements) through our partnership with the  Chicago Reporter.\n Expanding our reach by\u00a0cultivating our network of partners/allies in other cities (New Orleans, Dallas,\u00a0New York City,\u00a0Oakland, San Francisco,\u00a0Washington, D.C.) and working together with community stakeholders to develop strategies for deploying these public tools and implementing best practices in open data stewardship.", "posttime": "2020-06-02 09:19:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,police", "title": "\u516c\u6c11\u8b66\u5bdf\u6570\u636e\u9879\u76ee-\u516c\u5f00\u8b66\u65b9\u6307\u63a7\u6570\u636e", "title_en": "Citizen Police Data Project \u2013 Police allegation data made accessible", "transed": 1, "url": "https://invisible.institute/police-data", "via": "", "real_tags": ["\u6570\u636e", "police"]}, {"category": "", "categoryclass": "", "imagename": "a6076a1475686ff274d85feb92fb5631.jpg", "infoid": 1004771, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e00\u753b\u9762\u51e0\u4e4e\u4f1a\u8ba9\u4efb\u4f55\u4eba\u611f\u5230\u9707\u60ca\uff1a\u5927\u706b\u5982\u6b64\u4e4b\u5927\uff0c\u4f3c\u4e4e\u5ef6\u4f38\u5230550\u82f1\u5c3a\u9ad8\u7684\u534e\u76db\u987f\u7eaa\u5ff5\u7891\u7684\u4e00\u534a\uff0c\u71c3\u70e7\u5f97\u5982\u6b64\u660e\u4eae\uff0c\u4ee5\u81f3\u4e8e\u620f\u5267\u6027\u5730\u7167\u4eae\u4e86\u8fd9\u5ea7\u5730\u6807\u3002\n\u8fd9\u5f20\u56fe\u7247\u662f\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\u865a\u6784\u7684\u7535\u89c6\u5267\u201c\u6307\u5b9a\u5e78\u5b58\u8005\u201d\u7684\u622a\u56fe\uff0c\u4f46\u5728\u767d\u5bab\u5468\u56f4\u53cd\u5bf9\u8b66\u5bdf\u66b4\u529b\u7684\u55a7\u95f9\u6297\u8bae\u6d3b\u52a8\u8fdb\u5165\u7b2c\u4e09\u5929\u65f6--\u5176\u4e2d\u786e\u5b9e\u5305\u62ec\u4e00\u4e9b\u6545\u610f\u7eb5\u706b--\u5b83\u770b\u8d77\u6765\u50cf\u662f\u771f\u7684\u3002\n\u8fd9\u5f20\u7167\u7247\u8fc5\u901f\u5728Twitter\u4e0a\u75af\u4f20\uff0c\u4e0e\u5468\u672b\u5728\u4e0d\u786e\u5b9a\u548c\u6df7\u4e71\u65f6\u523b\u4f20\u64ad\u7684\u5176\u4ed6\u4e00\u4e9b\u8c23\u8a00\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u8fd9\u4e9b\u8c23\u8a00\u8868\u660e\uff0c\u5f53\u524d\u7684\u5f3a\u70c8\u4e24\u6781\u5206\u5316\u662f\u7f51\u7edc\u9020\u8c23\u6d3b\u52a8\u7684\u6c83\u571f\u3002\n\u4e00\u540dCNN\u8bb0\u8005\u88ab\u4e00\u4e9b\u6297\u8bae\u8005\u6307\u63a7\u4e3a\u534e\u76db\u987f\u7279\u533a\u7684\u4e00\u540d\u8b66\u5bdf\uff0c\u8feb\u4f7f\u8be5\u7f51\u7edc\u6f84\u6e05\u4ed6\u662f\u4ed6\u4eec\u5728\u5f53\u5730\u7684\u8bb0\u8005\u4e4b\u4e00\u3002\n\u5728#dcBlackout\u6807\u7b7e\u4e0b\u6d41\u4f20\u7684\u8bf4\u6cd5\u662f\uff0c\u624b\u673a\u548c\u5176\u4ed6\u901a\u4fe1\u8bbe\u5907\u88ab\u5c4f\u853d\uff0c\u8fd9\u662f\u5141\u8bb8\u66b4\u529b\u8b66\u5bdf\u62a5\u590d\u4e0d\u88ab\u62a5\u544a\u7684\u6218\u7565\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e5f\u4e0d\u662f\u771f\u7684\u3002\n\u6211\u7684\u4e00\u4e9b\u89c6\u9891\u548c\u7167\u7247\u88ab\u8d26\u53f7\u53d1\u5e03\uff0c\u8bf4\u4ed6\u4eec\u6700\u540e\u4e00\u6b21\u662f\u5728\u6d41\u548c\u7ec6\u80de\u5173\u95ed\u7684\u505c\u7535\u4e4b\u524d\u3002\u6211\u6ca1\u6709\u7ecf\u5386\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5c3d\u7ba1\u6211\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u6d41\u5a92\u4f53\uff0c\u4f46\u6211\u7684\u624b\u673a\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u53d1\u63a8\u6587\uff0c\u81f3\u5c11\u5de5\u4f5c\u5230\u51cc\u66682\uff1a30\uff0c\u63a8\u7279\u4e0a\u5199\u9053\uff0c\u96c5\u864e\uff01\u8bb0\u8005\u4ea8\u7279\u00b7\u6c83\u514b\u5468\u4e00\u65e9\u4e0a\u3002\n\u54e5\u4f26\u6bd4\u4e9a\u5e7f\u64ad\u516c\u53f8(CBS)\u8bb0\u8005\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u9c81\u83f2\u5c3c(Christina Ruffini)\u8865\u5145\u9053\uff0c\u505c\u6b62\u8f6c\u53d1#dcblout\uff0c#34\uff1b\u8fd9\u4e9b\u90fd\u4e0d\u662f\u771f\u7684\u3002\u6700\u7ec8\uff0c\u5373\u4f7f\u662f\u7535\u89c6\u6444\u5236\u7ec4\u4e5f\u9700\u8981\u7761\u89c9\uff0c\u4f46\u6211\u4eec\u548c\u5176\u4ed6\u8bb8\u591a\u4eba\u90fd\u5728\u5916\u9762\u5f85\u5230\u6df1\u591c\u3002\u4ed6\u4eec\u7684\u7535\u8bdd\u8d77\u4f5c\u7528\u4e86\u3002\u73b0\u573a\u4fe1\u53f7\u5f88\u5f3a\u3002\u8fd9\u4e9b\u63a8\u6587\u4e2d\u7684\u8bb8\u591a\u90fd\u662f\u76f8\u540c\u7684\u63aa\u8f9e\u3002\u65e0\u8bba\u8fd9\u91cc\u53d1\u751f\u4ec0\u4e48\u4e8b\uff0c\u90fd\u4e0d\u8981\u4e0a\u5f53\u3002\n\u4e13\u5bb6\u8868\u793a\uff0c#\u505c\u7535\u6807\u7b7e\u4f3c\u4e4e\u662f\u4e00\u4e2a\u8d44\u91d1\u5145\u8db3\u3001\u6709\u7ec4\u7ec7\u7684\u4e92\u8054\u7f51\u6d3b\u52a8\u7684\u6210\u679c\uff0c\u800c\u4e14\u5728\u8fd9\u65b9\u9762\u53d6\u5f97\u4e86\u6210\u529f\u3002\n\u5e03\u9c81\u91d1\u65af\u5b66\u4f1a(Brookings Institution)\u5b66\u8005\u4e9a\u5386\u514b\u65af\u00b7\u6069\u683c\u52d2(Alex Enger)\u8868\u793a\uff0c\u8bb8\u591a\u5ba3\u4f20#dc\u505c\u7535\u58f0\u660e\u7684\u8d26\u6237\u672c\u8eab\u51e0\u4e4e\u6ca1\u6709\u8ffd\u968f\u8005\uff0c\u8fd9\u8868\u660e\u5b83\u4eec\u53ef\u80fd\u662f\u4e13\u95e8\u4e3a\u4e86\u4f20\u64ad\u865a\u5047\u4fe1\u606f\u800c\u521b\u5efa\u7684\u3002\u6069\u683c\u52d2\u4e00\u76f4\u5173\u6ce8\u4f7f\u7528\u793e\u4ea4\u5a92\u4f53\u548c\u6280\u672f\u4f20\u64ad\u5ba3\u4f20\u3002\n\u5f88\u591a\u8fd9\u6837\u7684\u8d26\u6237\u90fd\u76f8\u5f53\u53ef\u7591\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u5728\u591c\u95f4\u4f20\u64ad\u5b83\u4eec\u7684\u8d26\u6237\u3002\u4f46\u73b0\u5728\u6709\u975e\u5e38\u771f\u5b9e\u7684\u4eba\u5728\u63a8\u52a8\u8fd9\u4e00\u70b9\u3002\u5230\u4e0a\u53489\u70b9\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u6545\u4e8b\u7684\u8d77\u6e90\u4f3c\u4e4e\u662f\u634f\u9020\u7684\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u5bf9\u4f60\u6765\u8bf4\u5df2\u7ecf\u6a21\u7cca\u4e0d\u6e05\u4e86\u3002\n\u514b\u83b1\u59c6\u68ee\u5927\u5b66(Clemson University)\u4f20\u64ad\u5b66\u6559\u6388\u8fbe\u4f26\u00b7\u6797\u7ef4\u5c14(Darren Linvill)\u8868\u793a\uff0c\u622a\u81f3\u5468\u4e00\u4e0b\u5348\uff0c#DC Blackout\u6807\u7b7e\u88ab\u63d0\u53ca\u8fd1100\u4e07\u6b21\u3002\n\u6797\u7ef4\u5c14\u8bf4\uff0c\u5373\u4f7f\u8fd9\u4e9b\u771f\u5b9e\u7684\u4eba\u4e2d\u6709\u5f88\u5927\u4e00\u90e8\u5206\u4eba\u5728\u4f7f\u7528\u8fd9\u4e2a\u6807\u7b7e\u8bf4\uff0c\u563f\uff0c\u8fd9\u4e0d\u662f\u771f\u7684\uff0c\u4f46\u8fd9\u65e0\u5173\u7d27\u8981\u3002\u5373\u4f7f\u53ea\u670920%\u7684\u4eba\u53d1\u5e16\u76f8\u4fe1\uff0c\u767e\u4e07\u4eba\u4e2d\u768420%\u4ecd\u7136\u662f20\u4e07\u4eba\u3002\n#DC\u65ad\u7535\u8fd0\u52a8\u8fd8\u663e\u793a\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u6570\u5b57\u590d\u6742\u6027\uff0c\u76f4\u5230\u6700\u521d\u7684\u8c0e\u8a00\u5f00\u59cb\u4f20\u64ad12\u5c0f\u65f6\u540e\uff0c\u8fd9\u4e00\u6c34\u5e73\u624d\u53d8\u5f97\u660e\u6717\u8d77\u6765\u3002\n\u867d\u7136\u53ef\u9760\u7684\u6d88\u606f\u6765\u6e90\u5df2\u7ecf\u5728\u5468\u4e00\u65e9\u4e0a\u63ed\u7a7f\u4e86\u8fd9\u4e9b\u8bf4\u6cd5\uff0c\u4f46\u7f51\u4e0a\u7684\u64cd\u7eb5\u8fd8\u6ca1\u6709\u7ed3\u675f\u3002\u7136\u540e\uff0c\u4e00\u4e2a\u7531\u9ed1\u5ba2\u8d26\u6237\u7ec4\u6210\u7684\u534f\u8c03\u7f51\u7edc\u5f00\u59cb\u5728\u63a8\u7279\u4e0a\u8c08\u8bba\u8fd9\u4e2a\u6807\u7b7e\u662f\u5982\u4f55\u4f2a\u9020\u7684\uff0c\u4eba\u4eec\u4e0d\u9700\u8981\u6050\u614c\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u770b\u5230#dc\u505c\u7535\u8d8b\u52bf\u7684\u4eba\uff0c\u4ed6\u5728\u534e\u76db\u987f\u5927\u90fd\u4f1a\u5730\u533a\u751f\u6d3b\u548c\u5de5\u4f5c\uff0c\u4ed6\u6709\u670b\u53cb\u8fdc\u7a0b\u529e\u516c\u5230\u534e\u76db\u987frn.n\u3002\u8fd9\u4e2a\u6807\u7b7e\u770b\u8d77\u6765\u50cf\u662f\u9519\u8bef\u4fe1\u606f\uff0c\u6570\u767e\u6761\u63a8\u6587\u90fd\u662f\u8fd9\u6837\u5199\u7684\u3002\nLinvill\u8bf4\uff0c\u901a\u8fc7\u8ba9\u6240\u8c13\u7684BOT\u8d26\u6237\u4e0e\u6700\u521d\u7684\u6545\u4e8b\u60c5\u8282\u80cc\u9053\u800c\u9a70\uff0c\u4e00\u4e9b\u7528\u6237\u5b9e\u9645\u4e0a\u53ef\u80fd\u6700\u7ec8\u66f4\u6709\u53ef\u80fd\u76f8\u4fe1\u5b83\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u662f\u5728\u4e0a\u6f14\u63ed\u7a7f\u3002\n\u4ed6\u4eec\u6b63\u5728\u5236\u9020\u8fd9\u79cd\u53cc\u91cd\u5426\u5b9a\uff0c\u4ed6\u8bf4\u3002\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u8d28\u7591\u81ea\u5df1\u7684\u73b0\u5b9e\u3002\n\u4ed6\u4e0d\u613f\u5c06\u7ade\u9009\u6d3b\u52a8\u5f52\u56e0\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u6f14\u5458\uff0c\u4f46\u79f0\u63a8\u52a8\u591a\u4e2a\u76f8\u4e92\u7ade\u4e89\u7684\u53d9\u4e8b\u7684\u7b56\u7565\u662f\u5178\u578b\u7684\u4fc4\u7f57\u65af\u4e3e\u63aa\u3002\n#DCBlackOut\u662f\u6211\u7814\u7a76\u8fc7\u7684\u6bd4\u8f83\u6709\u8da3\u7684\u865a\u5047\u4fe1\u606f\u6d3b\u52a8\u4e4b\u4e00\u3002\u9ed1\u5ba2\u5728\u63a8\u7279\u4e0a\u8bf4\u865a\u5047\u8d26\u6237\u5728\u6492\u8c0e\uff0c\u5176\u4ed6\u865a\u5047\u8d26\u6237\u6b63\u5728\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u8bc1\u660e\u7b2c\u4e00\u7ec4\u865a\u5047\u8d26\u6237\u4e00\u76f4\u90fd\u662f\u771f\u7684\uff01\u6839\u672c\u5c31\u6ca1\u6709\u771f\u76f8\uff01https://t.co/DhHvLNfVeb\u3002\n-Darren Linvill(@DarrenLinvill)2020\u5e746\u67081\u65e5\u3002\n\u6797\u7ef4\u5c14\u548c\u6069\u683c\u52d2\u90fd\u8868\u793a\uff0c\u968f\u7740\u6297\u8bae\u6d3b\u52a8\u7684\u7ee7\u7eed\uff0c\u968f\u7740\u603b\u7edf\u9009\u4e3e\u7684\u4e34\u8fd1\uff0c\u4ee5\u53ca\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5bfc\u81f4\u4eba\u4eec\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u591a\u5730\u4f7f\u7528\u793e\u4ea4\u5a92\u4f53\uff0c\u4ed6\u4eec\u9884\u8ba1\u4f1a\u770b\u5230\u66f4\u591a\u7c7b\u4f3c\u4e8e\u8fd9\u6b21\u884c\u52a8\u7684\u884c\u52a8\u3002\n\u8fd9\u662f\u7f8e\u56fd\u653f\u575b\u7684\u4e00\u4e2a\u91cd\u5927\u65f6\u523b\u3002\u5b83\u5f15\u8d77\u4e86\u6574\u4e2a\u56fd\u5bb6\u7684\u5173\u6ce8\u3002\u6069\u683c\u52d2\u8bf4\uff0c\u5f53\u51fa\u73b0\u8fd9\u6837\u7684\u65f6\u523b\uff0c\u5c24\u5176\u662f\u5145\u6ee1\u5206\u6b67\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u770b\u5230\u5916\u56fd\u653f\u515a\u52a0\u5267\u4e86\u8fd9\u4e9b\u89c2\u70b9\u7684\u5206\u6b67\uff0c\u5bfc\u81f4\u4e86\u4e0d\u4fe1\u4efb\u548c\u6df7\u4e71\u3002\u5982\u679c\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u4fe1\u4efb\u2026\u2026\u3002\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u573a\u80dc\u5229\u3002\u5982\u679c\u8fd9\u8ba9\u4eba\u4eec\u66f4\u96be\u8fa8\u522b\u4ec0\u4e48\u662f\u771f\u7684\uff0c\u4ec0\u4e48\u662f\u5047\u7684\u2026\u2026\u3002\u90a3\u4e48\u5b83\u5c31\u8d77\u4f5c\u7528\u4e86\u3002", "note_en": "The image would shock just about anyone: a fire so large that it seems to stretch halfway up the 550-foot-tall Washington Monument, and burning so bright that it dramatically illuminated the landmark.\n       The image was a  screenshot from the fictional ABC show &#34;Designated Survivor.&#34; But coming on the third day of raucous protests around the White House against police violence \u2014 which did include some fires that were intentionally set \u2014 it could have seemed like it was real.\n  The image quickly went viral on Twitter, not unlike a number of other rumors that spread during moments of uncertainty and chaos over the weekend, and which showed how the intense polarization of the current moment is fertile ground for online disinformation campaigns.\n  A CNN reporter was accused by some  protesters of being a D.C. police officer in disguise, forcing the network to clarify that  he was one of their journalists on the ground.\n       And there were claims spread under the #dcblackout hashtag that cell phones and other communication devices were blocked as part of a strategy to allow violent police reprisals to go unreported. That, too, was not true.\n  &#34;Some of my videos and pics being posted by accounts saying they were last before a &#34;#dcblackout&#34; where streams and cells shut down. I didn&#39;t experience anything like that and \u2014 though I didn&#39;t try streaming \u2014 had no issue with phone as I tweeted and worked until 2:30 am at least,&#34;  tweeted Yahoo! reporter Hunter Walker on Monday morning.\n  &#34;Stop retweeting #dcblackout,&#34; added CBS reporter Christina Ruffini. &#34;None of this is true. Eventually, even TV crews need to sleep, but ours and many others were out late into the night. Their phones worked. Live signal was strong. Many of these tweets are the same wording. Don&#39;t fall for whatever is happening here.&#34;\n     Experts say the #dcblackout hashtag seemed to be the work of a&#34;well-funded&#34; and organized internet campaign, and a successful one at that.\n  Many of the accounts promoting the #dcblackout claims had few followers themselves, indicating that they could have been created specifically for the purposes of spread disinformation, said Alex Engler, a scholar at the Brookings Institution who has followed the use of social media and technology to spread propaganda.\n  &#34;A lot of these accounts are pretty suspicious, especially the ones disseminating them at night. But there are very real people now promoting this. By 9 a.m. the fact that the origin of the story seems to be manufactured would already be obscured to you,&#34; he says.\n     The #DCBlackout hashtag was approaching a million mentions by Monday afternoon, according to Clemson University communication professor Darren Linvill.\n  &#34;Even if a huge percentage of those real people are using that hashtag to say, &#39;hey, this isn&#39;t real&#39; \u2014 it doesn&#39;t matter,&#34; Linvill said. Even if only 20% of people posting about it believe it, &#34;20% of a million is still 200,000 people.&#34;\n    The #DCBlackout campaign also showed a level of digital sophistication that didn&#39;t become clear until 12 hours after the original lie began spreading.\n     While reputable sources had debunked the claims by Monday morning, the online manipulation wasn&#39;t finished. A coordinated network of hacked accounts then began tweeting about how the hashtag was faked and that people don&#39;t need to panic.\n  &#34;As someone seeing  #dcblackout trending, who lives and works in the DC metro area, and who has friends telecommuting into DC rn..... this hashtag looks like misinformation,&#34; wrote the hundreds of tweets.\n    By having so-called bot accounts push back against the original storyline, Linvill says some users may have actually ended up more likely to believe it because it could seem like a staged debunking.\n     &#34;They&#39;re creating this double negative,&#34; he said. &#34;And causing everyone to question their own reality.&#34;\n  He hesitated to attribute the campaign to a specific actor but called the strategy of pushing multiple competing narratives, &#34;a classic Russian move.&#34;\n  #DCBlackOut is among the more interesting disinfo campaigns I&#39;ve examined. Hacked accounts tweeting that fake accounts are lying are being used by other fake accounts as proof that the first set of fake accounts were real all along! THERE IS NO TRUTH!  https://t.co/DhHvLNfVeb\n\u2014 Darren Linvill (@DarrenLinvill)  June 1, 2020\n   Both Linvill and Engler said they expect to see more operations similar to this one as the protests continue, as the presidential election draws nearer, and as people are using  social media more than they ever have before as a result of the coronavirus pandemic.\n     &#34;This is an enormous moment in American politics. It has the entire country&#39;s attention. When there have been moments like this, especially when fraught with divisions, we&#39;ve routinely seen foreign parties exacerbate those differences of opinions and drive distrust and chaos,&#34; Engler said. &#34;If what this does is drive distrust... then that&#39;s a victory. If it makes it harder to tell what&#39;s true and what isn&#39;t... then that&#39;s working.&#34;", "posttime": "2020-06-02 09:02:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d3b\u52a8,fertile", "title": "\u6297\u8bae\u6d3b\u52a8\u6210\u4e3a\u7f51\u4e0a\u865a\u5047\u4fe1\u606f\u7684\u6c83\u571f", "title_en": "Protests become fertile ground for online disinformation", "transed": 1, "url": "https://www.npr.org/2020/06/01/867137863/none-of-this-is-true-protests-become-fertile-ground-for-online-disinformation", "via": "", "real_tags": ["\u6d3b\u52a8", "fertile"]}, {"category": "", "categoryclass": "", "imagename": "d95971bf0f13a669b760989d038dbf71.jpg", "infoid": 1004769, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e0e\u5404\u5dde\u5dde\u957f\u7684\u79c1\u4eba\u7535\u8bdd\u4e2d\uff0c\u7279\u6717\u666e\u7684AG\u6bd4\u5c14\u00b7\u5df4\u5c14\u8868\u793a\uff0c\u8054\u90a6\u653f\u5e9c\u53ef\u4ee5\u8d77\u8bc9\u4efb\u4f55\u4f7f\u7528\u7535\u4fe1\u201c\u53c2\u4e0e\u2026", "note_en": "In a private call with state governors, Trump's AG Bill Barr indicated that the federal government could prosecute anyone using telecommunication to \"partici...", "posttime": "2020-06-02 09:02:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u80fd,prosecute,\u79c1\u4eba", "title": "AG\u53ef\u80fd\u8d77\u8bc9\u4f7f\u7528\u7535\u4fe1\u201c\u53c2\u4e0e\u201d\u6216\u201c\u9f13\u52b1\u201d\u9a9a\u4e71", "title_en": "AG may prosecute telecommunication use to \u201cparticipate in\u201d or \u201cencourage\u201d riots", "transed": 1, "url": "https://www.youtube.com/watch?v=psyE8NMcPR8", "via": "", "real_tags": ["\u53ef\u80fd", "prosecute", "\u79c1\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "46f8bc62440be12a60a2110d2d48ff38.jpg", "infoid": 1004768, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u516d\uff0c\u666e\u5229\u7b56\u5956\u83b7\u5f97\u8005\u82ad\u82ad\u62c9\u00b7\u6234\u7ef4\u68ee(Barbara Davidson)\u5728\u6d1b\u6749\u77f6\u683c\u7f57\u592b\u8d2d\u7269\u4e2d\u5fc3\u9644\u8fd1\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\uff0c\u4e00\u540d\u8b66\u5bdf\u547d\u4ee4\u5979\u642c\u5bb6\u3002\n\u5979\u5728\u4e00\u6b21\u91c7\u8bbf\u4e2d\u8bf4\uff0c\u5979\u5411\u4ed6\u5c55\u793a\u4e86\u5979\u7684\u8bb0\u8005\u8bc1\u3002\u8fd9\u540d\u8b66\u5b98\u8bf4\u4ed6\u4e0d\u5728\u4e4e\uff0c\u5e76\u518d\u6b21\u544a\u8bc9\u5979\u79bb\u5f00\u8be5\u5730\u533a\u3002\n\u6234\u7ef4\u68ee\u8bf4\uff0c\u201c\u5148\u751f\uff0c\u6211\u662f\u4e00\u540d\u62a5\u9053\u6b64\u4e8b\u7684\u8bb0\u8005\u3002\u201d\u4e4b\u540e\uff0c\u6234\u7ef4\u68ee\u8f6c\u8eab\u8d70\u5f00\uff0c\u8b66\u5bdf\u4ece\u80cc\u540e\u63a8\u4e86\u5979\u4e00\u628a\uff0c\u5bfc\u81f4\u5979\u7eca\u5012\uff0c\u5934\u90e8\u649e\u5230\u4e86\u6d88\u9632\u6813\u4e0a\u3002\u5979\u8865\u5145\u8bf4\uff0c\u5979\u6ca1\u6709\u53d7\u4f24\uff0c\u56e0\u4e3a\u5979\u6234\u7740\u7ed9\u4f84\u5b50\u4e70\u6ed1\u677f\u8bbe\u5907\u65f6\u4e70\u7684\u5934\u76d4\u3002\n\u6234\u7ef4\u68ee\u901a\u8fc7Redux Pictures\u51fa\u552e\u81ea\u5df1\u7684\u4f5c\u54c1\u3002Redux Pictures\u662f\u4e00\u5bb6\u5411\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u3001\u201c\u65b0\u95fb\u5468\u520a\u201d\u548c\u5176\u4ed6\u65b0\u95fb\u673a\u6784\u63d0\u4f9b\u7167\u7247\u7684\u673a\u6784\u30025\u670825\u65e5\uff0c\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u88ab\u8b66\u65b9\u62d8\u7559\u671f\u95f4\u6b7b\u4ea1\uff0c\u81ea\u90a3\u4ee5\u6765\uff0c\u5728\u53cd\u5bf9\u79cd\u65cf\u4e3b\u4e49\u548c\u8b66\u5bdf\u66b4\u884c\u7684\u5168\u56fd\u6027\u793a\u5a01\u6d3b\u52a8\u4e2d\uff0c\u6709\u8bb8\u591a\u8bb0\u8005\u4e0e\u8b66\u65b9\u53d1\u751f\u4e86\u7d27\u5f20\u7684\u51b2\u7a81\uff0c\u6234\u7ef4\u68ee\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\u8bb8\u591a\u8bb0\u8005\u3001\u6444\u5f71\u5e08\u548c\u5a92\u4f53\u5021\u5bfc\u8005\u8868\u793a\uff0c\u6700\u8fd1\u51e0\u5929\u8b66\u5bdf\u5bf9\u5f85\u8bb0\u8005\u7684\u65b9\u5f0f\u53cd\u6620\u4e86\u5bf9\u65b0\u95fb\u5a92\u4f53\u4fe1\u4efb\u7684\u4fb5\u8680\uff0c\u8fd9\u79cd\u4fe1\u4efb\u5df2\u7ecf\u6e17\u900f\u5230\u7279\u6717\u666e\u603b\u7edf\u9886\u5bfc\u4e0b\u7684\u6267\u6cd5\u90e8\u95e8\uff0c\u7279\u6717\u666e\u8ba4\u4e3a\u5bf9\u4ed6\u7684\u653f\u5e9c\u7684\u6279\u5224\u6027\u62a5\u9053\u662f\u201c\u5047\u65b0\u95fb\u201d\uff0c\u5e76\u7ecf\u5e38\u7ed9\u4e00\u4e9b\u65b0\u95fb\u673a\u6784\u548c\u8bb0\u8005\u8d34\u4e0a\u201c\u4eba\u6c11\u7684\u654c\u4eba\u201d\u7684\u6807\u7b7e\u3002\n\u6234\u7ef4\u68ee\u8bf4\uff0c\u201c\u5c24\u5176\u662f\u8fd9\u7bc7\u62a5\u9053\uff0c\u4f3c\u4e4e\u8bb0\u8005\u771f\u7684\u6210\u4e86\u8b66\u65b9\u7684\u76ee\u6807\u3002\u201d\u201c\u8fd9\u662f\u6211\u4ee5\u524d\u6ca1\u6709\u7ecf\u5386\u8fc7\u7684\u4e8b\u60c5\uff0c\u5230\u4e86\u8fd9\u4e2a\u5730\u6b65\u3002\u201d\n\u5728\u4e13\u5236\u56fd\u5bb6\uff0c\u8bb0\u8005\u5728\u793a\u5a01\u548c\u9a9a\u4e71\u4e2d\u88ab\u902e\u6355\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4f46\u5728\u7f8e\u56fd\u5f88\u5c11\u89c1\uff0c\u56e0\u4e3a\u7f8e\u56fd\u7684\u65b0\u95fb\u81ea\u7531\u53d7\u5230\u7b2c\u4e00\u4fee\u6b63\u6848\u7684\u4fdd\u969c\u3002\u5468\u4e94\uff0c\u660e\u5c3c\u82cf\u8fbe\u5dde\u5de1\u903b\u8b66\u5bdf\u902e\u6355\u4e86CNN\u73b0\u573a\u76f4\u64ad\u7684\u4e00\u4e2a\u62a5\u9053\u5c0f\u7ec4\uff0c\u8fd9\u8868\u660e\u8b66\u5bdf\u4e0d\u4f1a\u9075\u5faa\u60ef\u5e38\u7684\u4e0d\u63d2\u624b\u505a\u6cd5\u3002\u540c\u4e00\u5929\uff0c\u80af\u5854\u57fa\u5dde\u8def\u6613\u65af\u7ef4\u5c14\u7684\u4e00\u540d\u7535\u89c6\u8bb0\u8005\u88ab\u4e00\u540d\u8b66\u5bdf\u7528\u80e1\u6912\u7403\u51fb\u4e2d\uff0c\u8fd9\u540d\u8b66\u5bdf\u4f3c\u4e4e\u662f\u5728\u5979\u901a\u8fc7\u7535\u89c6\u76f4\u64ad\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\u7784\u51c6\u5979\u7684\u3002\nCNN\u56e2\u961f\u7684\u88ab\u6355\u62db\u81f4\u4e86\u7b2c\u4e00\u4fee\u6b63\u6848\u5021\u5bfc\u8005\u7684\u6279\u8bc4\u548c\u660e\u5c3c\u82cf\u8fbe\u5dde\u5dde\u957f\u7684\u9053\u6b49\uff0c\u4f46\u8fd8\u6709\u6570\u5341\u540d\u8bb0\u8005\u5728\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\u53d7\u5230\u8b66\u5bdf\u7684\u7c97\u66b4\u5bf9\u5f85\u3002\u5728\u91c7\u8bbf\u4e2d\uff0c\u8bb0\u8005\u4eec\u8bf4\uff0c\u5728\u8b66\u5bdf\u53d1\u5c04\u70ae\u5f39\u3001\u62d4\u51fa\u6b66\u5668\u6216\u5411\u4ed6\u4eec\u55b7\u6d12\u80e1\u6912\u4e4b\u524d\uff0c\u4ed6\u4eec\u81ea\u79f0\u662f\u5a92\u4f53\u6210\u5458\u3002\n\u897f\u5317\u5927\u5b66\u6885\u8fea\u5c14\u65b0\u95fb\u5b66\u9662(Medill School Of Journism At Northwest University)\u6559\u6388\u3001\u56fd\u5bb6\u5b89\u5168\u65b0\u95fb\u5021\u8bae(National Security Journism Initiative)\u8054\u5e2d\u4e3b\u4efb\u827e\u4f26\u00b7\u5e0c\u52d2(Ellen Sheeller)\u8bf4\uff0c\u201c\u6211\u771f\u7684\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u201d\u201c\u603b\u7edf\u79f0\u65b0\u95fb\u5a92\u4f53\u4e3a\u2018\u4eba\u6c11\u7684\u654c\u4eba\u2019\u3002\u6211\u8ba4\u4e3a\u6240\u6709\u8fd9\u4e9b\u90fd\u9020\u6210\u4e86\u635f\u5931\u3002\u201c\u3002\n\u5468\u65e5\uff0c\u7279\u6717\u666e\u5728\u4e00\u6761\u63a8\u6587\u4e2d\u6307\u8d23\u201c\u8ddb\u811a\u6d41\u5a92\u4f53\u201d\u5e94\u5bf9\u6297\u8bae\u6d3b\u52a8\u8d1f\u8d23\uff0c\u79f0\u8bb0\u8005\u662f\u201c\u6709\u7740\u75c5\u6001\u8bae\u7a0b\u7684\u771f\u6b63\u574f\u4eba\u201d\u3002\n\u7f8e\u56fd\u65b0\u95fb\u81ea\u7531\u8ddf\u8e2a\u8005(U.S.Press Freedom Tracker)\u548cBellingcat\u7f51\u7ad9\u7684\u4e00\u540d\u4f5c\u5bb6\u5404\u81ea\u8ffd\u8e2a\u4e86\u5927\u7ea6100\u8d77\u8bb0\u8005\u5728\u6297\u8bae\u6d3b\u52a8\u4e2d\u53d7\u5230\u9a9a\u6270\u6216\u53d7\u4f24\u7684\u4e8b\u4ef6\u3002\u8bb8\u591a\u8bb0\u8005\u5b9e\u9645\u4e0a\u4e0e\u6297\u8bae\u8005\u6df7\u5728\u4e00\u8d77\uff0c\u5f88\u53ef\u80fd\u4e0d\u662f\u76ee\u6807\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u8bb0\u8005\u3002\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8bb0\u8005\u5728\u544a\u8bc9\u8b66\u5bdf\u4ed6\u4eec\u6b63\u5728\u5de5\u4f5c\u540e\u906d\u5230\u88ad\u51fb\u3002\n\u534e\u5c14\u8857\u65e5\u62a5\u8bb0\u8005\u6cf0\u52d2\u00b7\u5e03\u6797\u7279-\u5a01\u5c14\u58eb(Tyler Blint-Welsh)\u8868\u793a\uff0c\u4ed6\u5468\u65e5\u5728\u7ebd\u7ea6\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\u591a\u6b21\u88ab\u8b66\u5bdf\u51fb\u4e2d\u3002\u201c\u6211\u4e3e\u8d77\u53cc\u624b\uff0c\u5e94\u8981\u6c42\u540e\u9000\uff0c\u201d\u9ed1\u4eba\u5e03\u6797\u7279-\u5a01\u5c14\u58eb\u5728Twitter\u4e0a\u5199\u9053\u3002\u201c\u6211\u7684\u7ebd\u7ea6\u8b66\u5bdf\u5c40\u9881\u53d1\u7684\u8bb0\u8005\u8bc1\u6e05\u6670\u53ef\u89c1\u3002\u201d(\u4ed6\u62d2\u7edd\u5bf9\u672c\u6587\u53d1\u8868\u8bc4\u8bba\u3002)\u3002\n\u5728\u4e39\u4f5b\u90ae\u62a5(Denver Post)\u5de5\u4f5c\u4e8623\u5e74\u7684HYoung Chang\u5468\u56db\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u8bae\u4f1a\u9644\u8fd1\u5446\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u8116\u5b50\u4e0a\u6234\u7740\u8bb0\u8005\u8bc1\u7ed9\u793a\u5a01\u8005\u62cd\u7167\u3002\u665a\u4e0a\uff0c\u8b66\u5bdf\u8bd5\u56fe\u9a71\u6563\u4eba\u7fa4\uff0c\u5f20\u5148\u751f\u542c\u5230\u4e86\u542c\u8d77\u6765\u50cf\u662f\u80e1\u6912\u7403\u53d1\u5c04\u7684\u58f0\u97f3\u3002\n\u201c\u7136\u540e\u4e00\u540d\u8b66\u5bdf\u5f00\u59cb\u6307\u7740\u6211\uff0c\u5f00\u59cb\u5f00\u67aa\uff0c\u201d\u4ed6\u8bf4\u3002\n\u5f20\u5148\u751f\u80f8\u90e8\u88ab\u4ec0\u4e48\u4e1c\u897f\u51fb\u4e2d\uff0c\u7136\u540e\u662f\u8098\u90e8\u3002\u4ed6\u7684\u8bb0\u8005\u8bc1\u6709\u4e00\u90e8\u5206\u88ab\u5439\u6389\u4e86\u3002\n\u201c\u6211\u5446\u5728\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u201d\u5f20\u5148\u751f\u8bf4\uff0c\u5e76\u5f3a\u8c03\u4ed6\u62ff\u7740\u76f8\u673a\u548c\u8bbe\u5907\u7ad9\u5728\u8b66\u5bdf\u8eab\u8fb9\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u201c\u6211\u60f3\u4ed6\u4eec\u77e5\u9053\u6211\u662f\u4e2a\u6444\u5f71\u5e08\u3002\u201d\n\u201c\u6d1b\u6749\u77f6\u65f6\u62a5\u201d\u6444\u5f71\u5e08\u5361\u7f57\u7433\u00b7\u79d1\u5c14(Carolyn Cole)\u5728\u4e00\u6761\u77ed\u4fe1\u4e2d\u8bf4\uff0c\u5468\u516d\uff0c\u5f53\u8b66\u65b9\u91c7\u53d6\u884c\u52a8\u9a71\u6563\u4eba\u7fa4\u65f6\uff0c\u5979\u6b63\u5728\u62a5\u9053\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u4e00\u573a\u6297\u8bae\u6d3b\u52a8\u3002\u5979\u8bf4\uff0c\u7ad9\u5728\u6297\u8bae\u8005\u65c1\u8fb9\u7684\u5927\u7ea620\u540d\u8bb0\u8005\u8ba9\u5f00\u4e86\uff0c\u4f46\u8b66\u65b9\u76f4\u63a5\u7528\u80e1\u6912\u55b7\u96fe\u548c\u6a61\u76ae\u5b50\u5f39\u88ad\u51fb\u4e86\u4ed6\u4eec\u3002\u4e00\u4f4d\u540c\u4e8b\uff0c\u8bb0\u8005\u83ab\u8389\u00b7\u8f69\u5c3c\u8bd7-\u83f2\u65af\u514b(Molly Hennessy-Fiske)\u558a\u9053\uff0c\u201c\u6211\u4eec\u662f\u8bb0\u8005\uff01\u201d\n\u79d1\u5c14\u8bf4\uff0c\u5979\u8116\u5b50\u4e0a\u6234\u7740\u8bb0\u8005\u8bc1\uff0c\u8eab\u7a7f\u5370\u6709\u201c\u7535\u89c6\u201d\u5b57\u6837\u7684\u9632\u5f39\u8863\u3002\u5979\u8bf4\uff0c\u5979\u7684\u5de6\u8033\u548c\u5de6\u773c\u88ab\u80e1\u6912\u55b7\u6d12\uff0c\u89d2\u819c\u53d7\u635f\u3002\n\u201c\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u5728\u62a5\u9053\u56fd\u5185\u548c\u56fd\u9645\u4e0a\u7684\u51b2\u7a81\uff0c\u6240\u4ee5\u6211\u77e5\u9053\u8fd9\u4e9b\u60c5\u51b5\u6240\u6d89\u53ca\u7684\u5371\u9669\uff0c\u7279\u522b\u662f\u5728\u9632\u66b4\u8b66\u5bdf\u548c\u6297\u8bae\u8005\u4e4b\u95f4\u7684\u65f6\u5019\uff0c\u201d\u79d1\u5c14\u8bf4\uff0c\u201c\u4f46\u6211\u6ca1\u60f3\u5230\u4ed6\u4eec\u4f1a\u76f4\u63a5\u653b\u51fb\u6211\u4eec\u3002\u201d\nNBC\u65b0\u95fb\u7684\u89c6\u9891\u548c\u6444\u5f71\u8bb0\u8005\u57c3\u5fb7\u00b7\u6b27(Ed Ou)\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\uff0c\u4ed6\u88ab\u80e1\u6912\u55b7\u6d12\uff0c\u5e76\u88ab\u8b66\u65b9\u53d1\u5c04\u7684\u8b66\u68cd\u548c\u6295\u5c04\u7269\u51fb\u4e2d\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u662f\u8b66\u65b9\u53d1\u5c04\u7684\u8b66\u68cd\u548c\u6295\u5c04\u7269\u3002\nMSNBC\u8bb0\u8005\u963f\u91cc\u00b7\u7ef4\u5c14\u5e0c(Ali Velshi)\u8bf4\uff0c\u4ed6\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u4e00\u6b21\u96c6\u4f1a\u53d8\u5f97\u66b4\u529b\u540e\u8fd4\u56de\u7684\u8def\u4e0a-\u5728\u96c6\u4f1a\u671f\u95f4\uff0c\u4ed6\u7684\u5de6\u817f\u88ab\u6a61\u76ae\u5b50\u5f39\u51fb\u4e2d-\u8b66\u65b9\u5728\u5341\u5b57\u8def\u53e3\u62e6\u4f4f\u4e86\u4ed6\u548c\u4ed6\u7684\u6444\u5236\u7ec4\u3002\u7ef4\u5c14\u5e0c\u8bf4\uff0c\u8bb0\u8005\u548c\u4ed6\u7684\u540c\u4e8b\u4e3e\u8d77\u624b\uff0c\u81ea\u79f0\u662f\u65b0\u95fb\u5a92\u4f53\u7684\u6210\u5458\u3002\u4e00\u540d\u8b66\u5b98\u56de\u5e94\u8bf4\uff0c\u201c\u6211\u4eec\u4e0d\u5728\u4e4e\uff0c\u201d\u7ef4\u5c14\u5e0c\u8bf4\u3002\u4ed6\u8bf4\uff0c\u4e00\u540d\u8b66\u5bdf\u5411\u4ed6\u4eec\u53d1\u5c04\u4e86\u4e00\u679a\u70ae\u5f39\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u53d7\u4f24\u3002\nFiveThirtyEight\u7f51\u7ad9\u7684\u9ad8\u7ea7\u79d1\u5b66\u8bb0\u8005\u739b\u5409\u00b7\u79d1\u601d(Maggie Koerth)\u8bf4\uff0c\u5468\u516d\uff0c\u5979\u6b63\u5728\u62a5\u9053\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u4eba\u884c\u9053\u4e0a\u7684\u4e00\u573a\u6297\u8bae\u6d3b\u52a8\uff0c\u5f53\u65f6\u4e00\u540d\u8b66\u5bdf\u62ff\u8d77\u6b66\u5668\u6307\u7740\u5979\u548c\u53e6\u4e00\u540d\u6b63\u5728\u5de5\u4f5c\u7684\u8bb0\u8005\u3002\n\u201c\u6211\u4eec\u8bf4\uff0c\u2018\u5a92\u4f53\uff0c\u5a92\u4f53--\u6211\u4eec\u662f\u5a92\u4f53\uff0c\u2019\u6211\u4eec\u4e3e\u8d77\u5fbd\u7ae0\uff0c\u4e3e\u8d77\u53cc\u624b\uff0c\u201d\u5979\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\u3002\u201c\u5f53\u6211\u4eec\u8fd9\u4e48\u505a\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e00\u76f4\u7528\u6b66\u5668\u6307\u7740\u6211\u4eec\uff0c\u5176\u4e2d\u4e00\u4eba\u8bf4\uff0c\u2018\u95ed\u5634\u3002\u2019\u201d\n\u526f\u65b0\u95fb\u8bb0\u8005\u8fc8\u514b\u5c14\u00b7\u5b89\u4e1c\u5c3c\u00b7\u4e9a\u5f53\u65af(Michael Anthony Adams)\u8868\u793a\uff0c\u5468\u516d\u665a\u4e0a\u8b66\u5bdf\u62b5\u8fbe\u4ed6\u6b63\u5728\u8fdb\u884c\u91c7\u8bbf\u7684\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u52a0\u6cb9\u7ad9\u65f6\uff0c\u4ed6\u81ea\u79f0\u662f\u4e00\u540d\u5a92\u4f53\u6210\u5458\u3002\u5728\u4e9a\u5f53\u65af\u5f55\u5236\u7684\u4e00\u6bb5\u5173\u4e8e\u8fd9\u4e00\u4e8b\u4ef6\u7684\u89c6\u9891\u4e2d\uff0c\u53ef\u4ee5\u542c\u5230\u4ed6\u53cd\u590d\u81ea\u79f0\u662f\u4e00\u540d\u8bb0\u8005\u3002\n\u4e9a\u5f53\u65af\u8eba\u5728\u5730\u4e0a\u7ee7\u7eed\u62cd\u6444\u89c6\u9891\uff0c\u4e00\u53ea\u624b\u4e3e\u7740\u4ed6\u7684\u8bb0\u8005\u8bc1\u3002\u7136\u540e\u4ed6\u88ab\u55b7\u4e0a\u4e86\u4ed6\u8ba4\u4e3a\u662f\u80e1\u6912\u55b7\u96fe\u3002\n\u8fd9\u8d77\u4e8b\u4ef6\u8ba9\u4e9a\u5f53\u65af\u60f3\u8d77\u4eca\u5e74\u5728\u571f\u8033\u5176\u6267\u884c\u4efb\u52a1\u65f6\u88ab\u8b66\u5bdf\u5bf9\u4ed8\u8fc7\u3002\u201c\u8fd9\u662f\u6211\u5728\u571f\u8033\u5176\u6240\u671f\u5f85\u7684\uff0c\u201d\u4ed6\u5728\u8c08\u5230\u571f\u8033\u5176\u65f6\u8bf4\u3002\u5728\u603b\u7edf\u96f7\u6770\u666e\u00b7\u5854\u4f0a\u666e\u00b7\u57c3\u5c14\u591a\u5b89(Recep Tayyip Erdogan)\u7684\u9886\u5bfc\u4e0b\uff0c\u8be5\u56fd\u7684\u8bb0\u8005\u4e00\u76f4\u88ab\u76d1\u7981\u3002\u201c\u4f46\u5728\u7f8e\u56fd\uff0c\u6211\u4e0d\u4f1a\u60f3\u5230\u4f1a\u8fd9\u6837\u3002\u201d\n\u8bb0\u8005\u4e5f\u4e00\u76f4\u53d7\u5230\u6297\u8bae\u8005\u7684\u4e25\u5389\u5bf9\u5f85\u3002\u5468\u516d\uff0c\u793a\u5a01\u8005\u5728\u767d\u5bab\u9644\u8fd1\u8ffd\u8d76\u5e76\u5411\u798f\u514b\u65af\u65b0\u95fb\u8bb0\u8005\u5229\u5170\u00b7\u7ef4\u7279\u7279(Leland Vittert)\u548c\u4ed6\u7684\u5de5\u4f5c\u4eba\u5458\u6295\u63b7\u7269\u54c1\u3002\u5468\u4e94\uff0c\u6297\u8bae\u8005\u7834\u574f\u4e86CNN\u5728\u4e9a\u7279\u5170\u5927\u7684\u603b\u90e8\u3002\n\u7136\u540e\u5c31\u6709\u4e86\u902e\u6355\u884c\u52a8\u3002\u5468\u65e5\u665a\u4e0a\uff0c\u201c\u5f97\u6885\u56e0\u7eaa\u4e8b\u62a5\u201d(Des Moines Register)\u8bb0\u8005\u5b89\u5fb7\u91cc\u4e9a\u00b7\u6885\u00b7\u8428\u80e1\u91cc(Andrea May Sahouri)\u5728\u62a5\u9053\u5f97\u6885\u56e0\u4e00\u5bb6\u8d2d\u7269\u4e2d\u5fc3\u7684\u6297\u8bae\u6d3b\u52a8\u65f6\uff0c\u81ea\u79f0\u662f\u4e00\u540d\u8bb0\u8005\uff0c\u968f\u540e\u88ab\u55b7\u6d12\u80e1\u6912\uff0c\u5e76\u6234\u4e0a\u62c9\u94fe\u3002\u5468\u65e5\u665a\u4e0a\uff0c\u5979\u4ece\u4e00\u8f86\u8b66\u8f66\u7684\u540e\u5ea7\u62cd\u6444\u4e86\u76f4\u64ad\u89c6\u9891\u3002\u5979\u540e\u6765\u88ab\u91ca\u653e\u3002\n\u201c\u8d6b\u82ac\u987f\u90ae\u62a5\u201d(HuffPost)\u8bb0\u8005\u514b\u91cc\u65af\u6258\u5f17\u00b7\u9a6c\u8482\u4e9a\u65af(Christopher Mathias)\u5468\u516d\u665a\u4e0a\u5728\u5e03\u9c81\u514b\u6797\u62a5\u9053\u4e00\u573a\u6297\u8bae\u6d3b\u52a8\u65f6\uff0c\u4e00\u540d\u8b66\u5bdf\u649e\u5230\u4e86\u4ed6\uff0c\u4ed6\u8bf4\uff0c\u201c\u6eda\u5f00\uff01\u201d\u9a6c\u8482\u4e9a\u65af\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\uff0c\u4ed6\u968f\u540e\u4fae\u8fb1\u4e86\u8fd9\u540d\u8b66\u5b98\uff0c\u8fd9\u540d\u8b66\u5b98\u8f6c\u8fc7\u8eab\u6765\uff0c\u7528\u8b66\u68cd\u51fb\u4e2d\u4e86\u9a6c\u8482\u4e9a\u65af\u7684\u8179\u90e8\u3002\n\u9a6c\u8482\u4e9a\u65af\u5148\u751f\u88ab\u62d8\u7981\u5e76\u6234\u4e0a\u624b\u94d0\u3002\u4ed6\u8bf4\uff0c\u4ed6\u6234\u7740\u8d6b\u82ac\u987f\u90ae\u62a5\u9881\u53d1\u7684\u8bb0\u8005\u8bc1\uff0c\u5e76\u4e00\u518d\u544a\u8bc9\u8b66\u65b9\uff0c\u4ed6\u662f\u4e00\u540d\u8bb0\u8005\u3002\u4ed6\u7684\u6848\u4ef6\u4e8e\u51cc\u66681\u70b9\u5de6\u53f3\u5728\u4e00\u4e2a\u5206\u5c40\u5904\u7406\u3002\u5468\u65e5\uff0c\u4ed6\u6536\u5230\u4e86\u4f20\u7968\u3002\n\u9a6c\u8482\u4e9a\u65af\u8bf4\uff0c\u4ed6\u4e0d\u8ba4\u4e3a\u8bb0\u8005\u5e94\u8be5\u5f97\u5230\u7279\u6b8a\u5f85\u9047\u3002\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u8fd9\u5728\u4ed6\u7684\u7ecf\u5386\u4e2d\u662f\u4e0d\u5bfb\u5e38\u7684--\u4ed6\u62a5\u9053\u8fc7\u5df4\u5c14\u7684\u6469\u3001\u7ebd\u7ea6\u548c\u5f17\u5409\u5c3c\u4e9a\u5dde\u590f\u6d1b\u8328\u7ef4\u5c14\u7684\u6297\u8bae\u6d3b\u52a8\u3002-\u8b66\u65b9\u4e0e\u8bb0\u8005\u7ea0\u7f20\u5e76\u902e\u6355\u4ed6\u4eec\u3002\n\u201c\u6211\u4e0d\u8ba4\u4e3a\u6211\u4e00\u5f00\u59cb\u5c31\u662f\u76ee\u6807\uff0c\u201d\u4ed6\u8bf4\u3002\u4f46\u662f\uff0c\u4ed6\u8865\u5145\u8bf4\uff0c\u201c\u4ed6\u4eec\u80af\u5b9a\u77e5\u9053\u6211\u662f\u4e00\u540d\u8bb0\u8005\u3002\u201d\n\u7f8e\u56fd\u65b0\u95fb\u81ea\u7531\u8ffd\u8e2a\u673a\u6784(U.S.Press Freedom Tracker)\u7edf\u8ba1\uff0c\u5468\u65e5\u67095\u540d\u8bb0\u8005\u5728\u6297\u8bae\u6d3b\u52a8\u4e2d\u88ab\u6355\u3002\u7ebd\u7ea6\u3001\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u3001\u6d1b\u6749\u77f6\u548c\u4e39\u4f5b\u7684\u8b66\u5bdf\u5c40\u6ca1\u6709\u56de\u590d\u8bb0\u8005\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u65b0\u95fb\u5b66\u9662DART\u65b0\u95fb\u4e0e\u521b\u4f24\u4e2d\u5fc3\u7684\u6267\u884c\u4e3b\u4efb\u5e03\u9c81\u65af\u00b7\u590f\u76ae\u7f57(Bruce Shapiro)\u8bf4\uff0c\u201c\u73b0\u5728\u6709\u4e00\u79cd\u5bf9\u5a92\u4f53\u7684\u653b\u51fb\u4e0d\u53d7\u60e9\u7f5a\u7684\u6587\u5316\u3002\u201d\u201c\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fd9\u662f\u5bf9\u65b0\u95fb\u81ea\u7531\u4f5c\u4e3a\u7f8e\u56fd\u4ef7\u503c\u89c2\u7684\u629b\u5f03\u3002\u201d\n\u65b0\u95fb\u81ea\u7531\u8bb0\u8005\u59d4\u5458\u4f1a(Reports Committee For The Freedom Of The Press)\u7684\u4e13\u804c\u5f8b\u5e08\u8428\u62c9\u00b7\u9a6c\u4fee\u65af(Sarah Matthews)\u8868\u793a\uff0c\u867d\u7136\u7b2c\u4e00\u4fee\u6b63\u6848\u6ca1\u6709\u514d\u9664\u8bb0\u8005\u7684\u4eba\u7fa4\u63a7\u5236\u4ee4\uff0c\u4f46\u5b83\u5bf9\u65b0\u95fb\u81ea\u7531\u7684\u5f3a\u8c03\u5e94\u8be5\u4f1a\u4e3a\u90a3\u4e9b\u62a5\u9053\u793a\u5a01\u6d3b\u52a8\u7684\u4eba\u63d0\u4f9b\u4e00\u4e9b\u4fdd\u62a4\u3002\n\u5979\u8bf4\uff1a\u201c\u8bb0\u8005\u5728\u90a3\u91cc\u662f\u4f5c\u4e3a\u516c\u4f17\u7684\u4ee3\u8868\uff0c\u5982\u679c\u6267\u6cd5\u90e8\u95e8\u653b\u51fb\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5c31\u4e0d\u80fd\u505a\u597d\u81ea\u5df1\u7684\u5de5\u4f5c\uff0c\u8fd9\u4f1a\u4f24\u5bb3\u5230\u6bcf\u4e2a\u4eba\u3002\u201d", "note_en": "Barbara Davidson, a Pulitzer Prize-winning photojournalist, was covering a protest near the Grove shopping mall in Los Angeles on Saturday when a police officer ordered her to move.\n She showed him her press credentials, she said in an interview. The officer said he did not care and again told her to leave the area.\n After saying, \u201cSir, I am a journalist covering this,\u201d Ms. Davidson turned to walk away, and the officer shoved her in the back, causing her to trip and hit her head against a fire hydrant, she said. She was not hurt, she added, because she was wearing a helmet she had bought while getting skateboarding equipment for a nephew.\n Ms. Davidson, who sells her work through Redux Pictures, an agency that supplies photographs to The New York Times, Newsweek and other news organizations, was among the many journalists who had tense encounters with the police during the nationwide demonstrations against racism and police brutality that have taken place since George Floyd  died in police custody on May 25 in Minneapolis.\n  Many reporters, photographers and press advocates said the treatment of journalists by police officers in recent days reflected an erosion of trust in the news media that has seeped into law enforcement under President Trump, who has deemed critical coverage of his administration \u201cfake news\u201d and has  frequently labeled some news organizations and journalists with variants of the phrase \u201c enemies of the people.\u201d\n \u201cThis story, in particular, it seems journalists are really being targeted by the police,\u201d Ms. Davidson said. \u201cThat\u2019s not something I have experienced before to this degree.\u201d\n It is common in autocratic countries for journalists to be arrested during demonstrations and riots, but rare in the United States, where freedom of the press is guaranteed by the First Amendment. In a sign that police officers would not follow the customary hands-off approach, Minnesota State Patrol officers arrested a  CNN reporting team live on the air on Friday. That same day, a  TV reporter in Louisville, Ky., was hit by a pepper ball by an officer who appeared to be aiming at her while she covered the protest on live television.\n The arrest of the CNN team drew criticism from First Amendment advocates and an apology from Minnesota\u2019s governor, but there have been dozens of other instances of journalists receiving rough treatment at the hands of police officers while covering the protests. In interviews, reporters said they had identified themselves as members of the press before police fired projectiles, drew their weapons or pepper-sprayed them.\n  \u201cI\u2019ve really never seen anything like this,\u201d said Ellen Shearer, a professor at the Medill School of Journalism at Northwestern University and a co-director of its National Security Journalism Initiative. \u201cThe president has called the news media \u2018the enemy of the people.\u2019 I think all of that has taken a toll.\u201d\n On Sunday, Mr. Trump blamed the \u201cLamestream Media\u201d for the protests in a  tweet, calling journalists \u201ctruly bad people with a sick agenda.\u201d\n  The U.S. Press Freedom Tracker and a writer for the Bellingcat website have  each  tracked about 100 instances of reporters being harassed or injured at the protests. Many of the reporters were effectively embedded with protesters and were likely not targeted because they were journalists. But in some instances, journalists were attacked after telling officers that they were on the job.\n Tyler Blint-Welsh, a reporter for The Wall Street Journal, said he was hit multiple times by police officers while covering a protest in New York on Sunday. \u201cI was backing away as request, with my hands up,\u201d Mr. Blint-Welsh, who is black, wrote on Twitter. \u201cMy NYPD-issued press badge was clearly visible.\u201d (He declined to comment for this article.)\n Hyoung Chang, a staff photographer for The Denver Post for 23 years, spent a few hours near the Colorado statehouse on Thursday, taking photos of demonstrators while wearing his press badge around his neck. In the evening, police officers tried to break up the crowd, and Mr. Chang heard what sounded like pepper balls being fired.\n \u201cThen one police officer started pointing at me and started to shoot,\u201d he said.\n Mr. Chang was hit with something in his chest, and then in his elbow. Part of his press card was blown off.\n \u201cI was staying in the same spot,\u201d Mr. Chang said, emphasizing that he had been standing near the police for some time while holding cameras and equipment. \u201cI think they know I\u2019m a photographer.\u201d\n Carolyn Cole, a Los Angeles Times photographer, was covering a protest in Minneapolis on Saturday when the police moved to disperse a crowd, she said in a text message. A group of roughly 20 journalists standing apart from the protesters moved aside, but the police attacked them directly with pepper spray and rubber bullets, she said. A colleague, the reporter Molly Hennessy-Fiske, shouted, \u201cWe\u2019re reporters!\u201d\n Ms. Cole was wearing a press pass around her neck and a flak jacket with \u201cTV\u201d on it, she said. She was pepper-sprayed in her left ear and eye, and her cornea was damaged, she said.\n \u201cI\u2019ve been covering conflict both nationally and internationally for many years, so I know the dangers involved in these situations, especially when you get between riot police and protesters,\u201d Ms. Cole said, \u201cbut I wasn\u2019t expecting them to attack us directly.\u201d\n Ed Ou, a video and photojournalist for NBC News who was next to Ms. Cole, was pepper-sprayed and hit with what he believes was a baton and a projectile fired by the police, he said in an interview.\n Ali Velshi, an MSNBC reporter, said he was on his way back from a rally in Minneapolis that had become violent \u2014 during which he was hit in the left leg by a rubber bullet \u2014 when the police stopped him and his camera crew at an intersection. With hands raised, the reporter and his colleagues identified themselves as members of the news media, Mr. Velshi said. One police officer responded, \u201cWe don\u2019t care,\u201d Mr. Velshi said. A police officer fired a projectile at them, he said, but they were not injured.\n  Maggie Koerth, a senior science reporter for the website FiveThirtyEight, said she was covering a protest from a Minneapolis sidewalk on Saturday when a police officer drew a weapon on her and another working journalist.\n \u201cWe said, \u2018Press, press \u2014 we are press,\u2019 and we held up our badges and put our hands up in the air,\u201d she said in an interview. \u201cThey kept pointing the weapon at us while we were doing that, and one of them said, \u2018Shut up.\u2019\u201d\n Michael Anthony Adams, a correspondent at Vice News, said he identified himself as a member of the press when police arrived on Saturday night at the Minneapolis gas station where he was conducting interviews. In a  video that Mr. Adams recorded of the incident, he can be heard repeatedly identifying himself as a reporter.\n  Mr. Adams continued to take video as he lay on the ground, holding up his press badge with one hand. Then he was sprayed with what he believes was pepper spray.\n The incident reminded Mr. Adams of being tackled by police officers while on assignment in Turkey this year. \u201cThat\u2019s something that I would expect in Turkey,\u201d he said of the country, where journalists have been  jailed under President  Recep Tayyip Erdogan. \u201cBut in America, I wouldn\u2019t have expected this.\u201d\n Journalists have also been on the receiving end of harsh treatment from protesters. Near the White House on Saturday, demonstrators chased and threw objects at the  Fox News reporter Leland Vittert and members of his crew. On Friday, protesters vandalized CNN headquarters in Atlanta.\n Then there were the arrests. Andrea May Sahouri, a reporter at The Des Moines Register, was pepper-sprayed and handcuffed in zip ties after identifying herself as a journalist while covering a protest at a Des Moines mall on Sunday evening. She took livestream video from the back of a police vehicle Sunday evening. She was later released.\n  Christopher Mathias, a HuffPost reporter, was covering a protest on Saturday night in Brooklyn when an officer ran into him, saying, \u201cGet out of my way!\u201d Mr. Mathias said in an interview that he then insulted the officer, who turned around and hit Mr. Mathias in the abdomen with his baton.\n Mr. Mathias was restrained and handcuffed. He said he was wearing a press pass issued by HuffPost and had repeatedly told the police he was a journalist. His case was processed at a precinct at around 1 a.m. Sunday, and he was issued a summons.\n Mr. Mathias said he does not believe journalists deserve special treatment. But he added that it was unusual in his experience \u2014 he has covered protests in Baltimore, New York and Charlottesville, Va. \u2014 for the police to tangle with reporters and arrest them.\n \u201cI don\u2019t think I was initially targeted,\u201d he said. But, he added, \u201cthey definitely knew I was a journalist.\u201d\n The U.S. Press Freedom Tracker counted five reporters  arrested at protests on Sunday. Police departments in New York, Minneapolis, Los Angeles and Denver did not reply to requests for comment.\n \u201cThere is now a culture of impunity for attacks on the press,\u201d said Bruce Shapiro, executive director of the Dart Center for Journalism and Trauma, an organization at the Columbia University School of Journalism. \u201cIt\u2019s essentially the abandonment of press freedom as an American value.\u201d\n Sarah Matthews, a staff attorney for the Reporters Committee for Freedom of the Press, said that while the First Amendment does not exempt journalists from crowd-control orders, its emphasis on freedom of the press should offer some protection to those covering demonstrations.\n \u201cJournalists are there as representatives of the public, and if law enforcement is attacking them, they can\u2019t do their job, and that hurts everybody,\u201d she said.", "posttime": "2020-06-02 09:01:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb0\u8005,target", "title": "\u8b66\u65b9\u5c06\u8bb0\u8005\u4f5c\u4e3a\u76ee\u6807\uff0c\u7279\u6717\u666e\u5c06\u6297\u8bae\u6d3b\u52a8\u5f52\u548e\u4e8e\u201c\u8ddb\u811a\u6d41\u5a92\u4f53\u201d", "title_en": "Police Target Journalists as Trump Blames \u2018Lamestream Media\u2019 for Protests", "transed": 1, "url": "https://www.nytimes.com/2020/06/01/business/media/reporters-protests-george-floyd.html", "via": "", "real_tags": ["\u8bb0\u8005", "target"]}, {"category": "", "categoryclass": "", "imagename": "61fbcccc19914c7a163f115040e6e4eb.jpeg", "infoid": 1004767, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5e74\u524d\uff0cTake-Two\u9996\u5e2d\u6267\u884c\u5b98\u65bd\u7279\u52b3\u65af\u00b7\u6cfd\u5c14\u5c3c\u514b(Strauss Zelnick)\u8868\u793a\uff0c\u4ed6\u5bf9\u8c37\u6b4c\u7684\u4f53\u80b2\u573a\u6e38\u620f\u6d41\u5a92\u4f53\u670d\u52a1\u76f8\u5f53\u4e50\u89c2\u3002\u4ed6\u57282019\u5e745\u6708\u63d0\u51fa\u7684\u6982\u5ff5\u662f\uff0c\u80fd\u591f\u5728\u4e16\u754c\u5404\u5730\u7684\u4efb\u4f55\u8bbe\u5907\u4e0a\u73a9\u6211\u4eec\u7684\u6e38\u620f\uff0c\u800c\u4e14\u5ef6\u8fdf\u5f88\u4f4e\uff0c\u5982\u679c\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u90a3\u5c31\u975e\u5e38\u6709\u8bf4\u670d\u529b\u4e86\u3002\n\u4e0d\u8fc7\uff0c\u73b0\u5728\u6cfd\u5c14\u5c3c\u514b\u7684\u8bed\u6c14\u6709\u70b9\u6539\u53d8\u4e86\u3002\u4e0a\u5468\u665a\u4e9b\u65f6\u5019\uff0c\u5728\u4f2f\u6069\u65af\u5766\u5e74\u5ea6\u6218\u7565\u51b3\u7b56\u4f1a\u8bae(Bernstein\u5e74\u5ea6Strategic Decisions Conference)\u4e0a\u63a5\u53d7\u91c7\u8bbf\u65f6\uff0c\u6cfd\u5c14\u5c3c\u514b\u627f\u8ba4\u4e86\u884c\u4e1a\u89c2\u5bdf\u4eba\u58eb\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\u663e\u800c\u6613\u89c1\u7684\u4e8b\u5b9e\uff1a\u4f53\u80b2\u573a\u7684\u63a8\u51fa\u4e00\u76f4\u5f88\u7f13\u6162\uff0c\u4ed6\u8bf4\u3002\u6211\u8ba4\u4e3a\u8fd9\u9879\u6280\u672f\u6240\u80fd\u63d0\u4f9b\u7684\u4e1c\u897f\u6709\u4e9b\u8a00\u8fc7\u5176\u5b9e\uff0c\u7ed3\u679c\u4e5f\u8ba9\u6d88\u8d39\u8005\u6709\u4e9b\u5931\u671b\u3002\n\u867d\u7136\u827a\u7535\u548c\u52a8\u89c6\u7b49\u5927\u578b\u53d1\u884c\u5546\u6ca1\u6709\u53c2\u4e0e\u53bb\u5e7411\u6708\u63a8\u51fa\u7684\u4f53\u80b2\u573a\uff0c\u4f46Take-Two\u5728\u63a8\u51fa\u5934\u51e0\u4e2a\u6708\u5c31\u63d0\u4f9b\u4e86\u8be5\u670d\u52a1\u6700\u53d7\u77a9\u76ee\u7684\u4e09\u6b3e\u6e38\u620f--\u201c\u7ea2\u8272\u6b7b\u795e\u6551\u8d4e2\u201d(Red Dead Reemption 2)\u3001\u201cNBA 2K20\u201d\u548c\u201c\u8fb9\u754c\u5730\u5e263\u201d(Borderland 3)\u3002\u6cfd\u5c14\u5c3c\u514b\u8868\u793a\uff0c\u53ea\u8981\u8fd9\u79cd\u5546\u4e1a\u6a21\u5f0f\u662f\u5408\u7406\u7684\uff0c\u8fd9\u6837\u7684\u4f53\u80b2\u573a\u652f\u6301\u5c31\u4f1a\u5728\u672a\u6765\u7ee7\u7eed\u5b58\u5728\u3002(Take-Two\u2018s PGA TGA)(Take-Two\uff1b\u2019s PGA TGA\u2018s PGA(Take-Two\uff1b\u2019s PGA TGA)\u3002(Take-Two\u2018s PGA TGA\u2019s PGA)\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6cfd\u5c14\u5c3c\u514b\u5bf9\u6d41\u5a92\u4f53\u4e1a\u52a1\u6a21\u5f0f\u5c06\u5bf9Take-Two\u7684\u5e95\u7ebf\u9500\u552e\u989d\u4ea7\u751f\u591a\u5927\u5f71\u54cd\u6301\u76f8\u5f53\u60b2\u89c2\u7684\u6001\u5ea6\u3002\n\u6cfd\u5c14\u5c3c\u514b\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u80fd\u6539\u53d8\u6e38\u620f\u89c4\u5219\u3002\u73b0\u5728\u60f3\u8981\u6211\u4eec\u7684\u6e38\u620f\u7684\u4eba\u73b0\u5728\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u6e38\u620f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u63a7\u5236\u53f0\u754c\u9762\u7684\u60c5\u51b5\u4e0b\u64ad\u653e\u5b83\u4eec\uff0c\u8fd9\u771f\u7684\u4e0d\u662f\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u4e8b\u3002\n\u6cfd\u5c14\u5c3c\u514b\u63a5\u7740\u5632\u7b11\u4e86\u652f\u6491\u6574\u4e2a\u4f53\u80b2\u573a\u5546\u4e1a\u6a21\u5f0f\u7684\u4e00\u4e2a\u5173\u952e\u6982\u5ff5\uff1a\u6d41\u5a92\u4f53\u5c06\u5438\u5f15\u6570\u5341\u4ebf\u540d\u5728\u624b\u673a\u6216\u4f4e\u7aefPC\u4e0a\u53eb\u56a3\u7740\u8981\u73a9\u9ad8\u7aef\u6e38\u620f\u7684\u6f5c\u5728\u73a9\u5bb6\u3002\n\u6cfd\u5c14\u5c3c\u514b\u82e5\u6709\u6240\u601d\u5730\u8bf4\uff0c\u5982\u679c\u4f60\u6253\u7b97\u652f\u4ed860\u7f8e\u5143\u4ee5\u4e0a\u7684\u7f8e\u5143\u8d2d\u4e70\u4e00\u7ebf\u7248\u672c\uff0c\u66f4\u591a\u7684\u662f\u8d2d\u4e70\u56fd\u9645\u7248\u672c\uff0c\u4f60\u771f\u7684\u4e0d\u613f\u610f\u4e70300\u7f8e\u5143\u7684\u6e38\u620f\u673a\u5417\uff1fZelnick\u82e5\u6709\u6240\u601d\u5730\u8bf4\uff0c\u4f60\u662f\u4e0d\u662f\u771f\u7684\u4e0d\u613f\u610f\u4e70300\u7f8e\u5143\u7684\u6e38\u620f\u673a\uff1f\u6cfd\u5c14\u5c3c\u514b\u82e5\u6709\u6240\u601d\u5730\u8bf4\u3002\u8ba4\u4e3a\u6d41\u5a92\u4f53\u5c06\u5e26\u6765\u53d8\u9769\u7684\u89c2\u70b9\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u6709\u5f88\u591a\u4eba\u771f\u7684[\u5bf9]\u4e92\u52a8\u5a31\u4e50\u611f\u5174\u8da3\uff0c\u771f\u7684\u60f3\u4ed8\u94b1\uff0c\u4f46\u53ea\u662f\u4e0d\u60f3\u62e5\u6709\u6e38\u620f\u673a\u3002\u6211\u4e0d\u786e\u5b9a\u4e8b\u5b9e\u662f\u5426\u5982\u6b64\u3002\n\u5982\u679c\u6574\u4e2a\u8bba\u70b9\u542c\u8d77\u6765\u8033\u719f\u80fd\u8be6\uff0c\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f972010\u5e74\u521d\u548c\u5e74\u4e2d\u90a3\u6b21\u547d\u8fd0\u591a\u821b\u7684\u5fae\u578b\u6e38\u620f\u673a\u70ed\u6f6e\u3002\u5f53\u65f6\uff0c\u6570\u91cf\u60ca\u4eba\u7684\u786c\u4ef6\u5236\u9020\u5546\u8ba4\u4e3a\u6f5c\u5728\u6e38\u620f\u673a\u5e02\u573a\u5de8\u5927\uff0c\u4ed6\u4eec\u4e0d\u613f\u82b1400\u7f8e\u5143\u8d2d\u4e70\u4e00\u53f0\u88c5\u6ee1\u5927\u5c4f\u5e55\u6e38\u620f\u7684\u9ad8\u7aef\u6e38\u620f\u673a\uff0c\u4f46\u613f\u610f\u82b1100\u7f8e\u5143\u8d2d\u4e70\u4e00\u53f0\u88c5\u6ee1\u72ec\u7acb\u6e38\u620f\u7684\u4f4e\u7aef\u6e38\u620f\u673a\u3002\nStadia\u548c\u5176\u4ed6\u6d41\u5a92\u4f53\u6e38\u620f\u670d\u52a1\u5e76\u4e0d\u5b8c\u5168\u662f\u5fae\u578b\u6e38\u620f\u673a\u8d8b\u52bf\u7684\u91cd\u6f14\u3002\u4f8b\u5982\uff0c\u8be5\u5e73\u53f0\u53ef\u4ee5\u5904\u7406\u9ad8\u7aef\u6e38\u620f\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u667a\u80fd\u624b\u673a\u3001\u5e73\u677f\u7535\u8111\u6216\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u90a3\u4e48\u786c\u4ef6\u5165\u95e8\u8d39\u51e0\u4e4e\u4e3a\u96f6(\u5c3d\u7ba1\u5728Stadia\u63a8\u51fa\u65f6\u60c5\u51b5\u5e76\u975e\u5982\u6b64)\u3002\n\u4f46\u6d41\u5a92\u4f53\u4e1a\u52a1\u7684\u7406\u7531\u4ecd\u7136\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5373\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6e38\u620f\u73a9\u5bb6\u5e02\u573a\uff0c\u4ed6\u4eec\u4e0d\u613f\u8d2d\u4e70\u6e38\u620f\u673a\u5e02\u573a(\u6216\u82b1\u94b1\u8d2d\u4e70\u4e00\u53f0\u6e38\u620fPC)\u6765\u73a9\u7cbe\u54c1\u6e38\u620f\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u6e38\u620f\u73a9\u5bb6\u9700\u8981\u613f\u610f\u5904\u7406\u6f5c\u5728\u7684\u5ef6\u8fdf\u548c\u5bbd\u5e26\u8fde\u63a5\u95ee\u9898\uff0c\u624d\u80fd\u83b7\u5f97\u73a9\u6e38\u620f\u7684\u7279\u6743\u3002\u4e5f\u8bb8\uff0c\u5bf9\u4e8e\u73b0\u6709\u7684\u53ef\u4e0b\u8f7d\u6e38\u620f\u4e1a\u52a1\u6765\u8bf4\uff0c\u6d41\u5a92\u4f53\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u79fb\u52a8\u8bbe\u5907\u7684\u989d\u5916\u529f\u80fd\u6548\u679c\u66f4\u597d\uff0c\u8fd9\u4f3c\u4e4e\u662f\u5fae\u8f6f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u53d1\u5c55\u65b9\u5411\u3002\n\u56e0\u6b64\uff0c\u6211\u5bf9(\u6d41\u5a92\u4f53)\u6280\u672f\u53ca\u5176\u6240\u80fd\u505a\u7684\u611f\u5230\u5174\u594b\uff0c\u6cfd\u5c14\u5c3c\u514b\u5728\u4ed6\u7684\u4f1a\u8bae\u91c7\u8bbf\u4e2d\u603b\u7ed3\u4e86\u8fd9\u4e00\u70b9\u3002\u4f46\u6211\u4e0d\u76f8\u4fe1\u5b83\u4f1a\u4f7f\u6211\u4eec\u7684\u5e02\u573a\u6269\u592710\u500d\u621620\u500d\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u6211\u4e0d\u559c\u6b22\u72af\u9519\u3002\n\u8d2d\u4e7060\u7f8e\u5143\u6e38\u620f\uff0c\u6709\u5f88\u68d2\u7684\u4e92\u8054\u7f51\uff0c\u5e76\u4e14\u6ca1\u6709\u529e\u6cd5\u73a960\u7f8e\u5143\u6e38\u620f\u7684\u4eba\u7684\u7ef4\u6069\u56fe\u5e76\u4e0d\u91cd\u53e0\u3002", "note_en": "A year ago, Take-Two CEO Strauss Zelnick  said he was &#34;pretty optimistic&#34; about Google&#39;s Stadia game-streaming service. The concept of &#34;being able to play our games on any device whatsoever around the world, and to do it with low latency, well that\u2019s very compelling if that can be delivered,&#34; he offered in May of 2019.\n Now, though, Zelnick has changed his tune a bit. In  an interview given during the Bernstein Annual Strategic Decisions Conference late last week, Zelnick acknowledges  what has been apparent to  industry watchers for a while: &#34;The launch of Stadia has been slow,&#34; he said. &#34;I think there was some overpromising on what the technology could deliver and some consumer disappointment as a result.&#34;\n While major publishers like EA and Activision stayed away from  Stadia&#39;s &#34;Founders&#34; launch last November, Take-Two provided three of the service&#39;s highest-profile games in its early months\u2014 Red Dead Redemption 2,  NBA 2K20, and  Borderlands 3. And Zelnick said such Stadia support will continue in the future &#34;as long as the business model makes sense.&#34; (Take-Two&#39;s  PGA Tour 2K21,  WWE2K Battlegrounds, and the  Mafia series are currently planned for future Stadia release.)\n That said, Zelnick was pretty bearish on how much of an impact the streaming business model will really have on Take-Two&#39;s bottom-line sales.\n &#34;It&#39;s not a game changer,&#34; Zelnick said. &#34;People who want our games now can get our games now. The fact that you could stream them and not have to have a console interface is really not that big of a deal.&#34;\n  Zelnick went on to deride a key concept underpinning the entire Stadia business model: the idea that streaming would appeal to  billions of potential players clamoring for high-end games on their mobile phone or low-end PCs.\n &#34;If you&#39;re going to pay $60-plus in US dollars for a frontline release, and more internationally, are you really unwilling to buy a $300 console?&#34; Zelnick mused. &#34;The belief that streaming was going to be transformative was based on a view that there were loads of people who really [had] an interest in interactive entertainment, really wanted to pay for it, but just didn&#39;t want to have a console. I&#39;m not sure that turned out to be the case.&#34;\n If this whole argument sounds familiar, you may be remembering  the ill-fated microconsole boom of  the early- and mid-2010&#39;s. Back then, a surprising number of hardware makers thought there was a huge market of potential gamers who  weren&#39;t willing to spend $400 on a high-end console full of marquee releases but  were willing to spend $100 on a low-end console full of indie games.\n  Stadia and other streaming gaming services aren&#39;t an exact repeat of the microconsole trend. The platform can handle high-end games, for one, and the hardware cost-of-entry is practically nothing if you already have a smartphone, tablet, or laptop (though  that wasn&#39;t the case when Stadia launched).\n But the streaming business case still rests on the idea that there&#39;s a significant market of gamers who aren&#39;t willing to buy in to the console market (or shell out for a gaming PC) to play marquee titles. Plus those gamers need to be willing to deal with  potential latency and  broadband connection issues for the privilege of playing. Maybe streaming works better as a mobile-focused bonus add-on for an existing downloadable games business, which is  the direction Microsoft seems to be heading with the idea.\n &#34;So I&#39;m excited about [streaming] technology and what it can do,&#34; Zelnick summed it up in his conference interview. &#34;But I don&#39;t believe it&#39;s going to multiply our market by 10 times or 20 times. And if it does, that&#39;d be great. I&#39;d love to be wrong.&#34;\n  The venn diagram of people who buy $60 games, have great internet, and don&#39;t already have a way to play $60 games does not overlap.", "posttime": "2020-06-02 08:12:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8c37\u6b4c,\u4f53\u80b2,google,app,\u51fa\u7248\u5546", "title": "RDR2\u51fa\u7248\u5546\u8bf4\uff0c\u8c37\u6b4c\u7684\u201c\u8fc7\u5ea6\u627f\u8bfa\u201d\u5bfc\u81f4\u4e86\u4f53\u80b2\u573a\u7684\u201c\u5931\u671b\u201d", "title_en": "Google's 'Overpromising' Led To Stadia 'Disappointment,' Says RDR2 Publisher", "transed": 1, "url": "https://arstechnica.com/gaming/2020/06/one-of-stadias-biggest-publishers-says-streaming-is-not-a-game-changer/", "via": "", "real_tags": ["\u8c37\u6b4c", "\u4f53\u80b2", "google", "app", "\u51fa\u7248\u5546"]}, {"category": "", "categoryclass": "", "imagename": "c65b35199d40b0ce3a8af4e695138832.jpeg", "infoid": 1004766, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9e\u9a8c\u6ce8\u610f\u4e8b\u9879\uff1a\u6b64\u9879\u76ee\u4ecd\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u4ec5\u4f5c\u4e3a\u5728WebAssembly\u8fd0\u884c\u65f6\u8fd0\u884cMindSporte\u7684\u6982\u5ff5\u9a8c\u8bc1\u3002\nWebAssembly\u662f\u4e3a\u4e86\u5e2e\u52a9\u89e3\u51b3javascript\u4ee3\u7801\u6267\u884c\u6027\u80fd\u95ee\u9898\u800c\u63d0\u51fa\u7684\u3002WASM\u73b0\u5728\u5df2\u7ecf\u6210\u4e3aWeb\u5f00\u53d1\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e8b\u5b9e\u4e0a\u7684\u8fd0\u884c\u65f6\u6807\u51c6\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\nWASI\u662f\u7528\u4e8eWebAssembly\u7684\u6a21\u5757\u5316\u7cfb\u7edf\u63a5\u53e3\u3002\u6b63\u5982\u672c\u6587\u6240\u8ff0\uff0cWebAssembly\u662f\u6982\u5ff5\u6027\u673a\u5668\u7684\u6c47\u7f16\u8bed\u8a00\uff0c\u56e0\u6b64\u5b83\u9700\u8981\u6982\u5ff5\u6027\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u5355\u4e00\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u6837\uff0c\u5b83\u5c31\u53ef\u4ee5\u5728\u6240\u6709\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\n\u6211\u4eec\u76f8\u4fe1\uff0c\u968f\u7740WASI\u66f4\u52a0\u6210\u719f\uff0c\u6211\u4eec\u6709\u53ef\u80fd\u62e5\u6709\u4e00\u4e2a\u53ef\u4ee5\u5728\u6240\u6709\u573a\u666f(\u4e91/\u8fb9\u7f18/\u79fb\u52a8)\u4e2d\u5de5\u4f5c\u7684\u901a\u7528\u540e\u7aef\u64cd\u4f5c\u5458\u5e93\u3002\u518d\u52a0\u4e0a\u6211\u4eec\u6700\u65b0\u5f00\u6e90\u7684\u5168\u573a\u666f\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6MindSporate\u7684WASM\u7aef\u53e3\uff0cWASI\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u65b0\u7684\u540e\u7aef\u4e0d\u53ef\u77e5\u3001\u9ad8\u5ea6\u5b89\u5168\u548c\u9ad8\u6027\u80fd\u7684\u5806\u6808\uff0c\u5e2e\u52a9\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5f00\u53d1\u5177\u6709\u66f4\u597d\u53ef\u79fb\u690d\u6027\u7684\u65b0AI\u5e94\u7528\u7a0b\u5e8f\u3002\nWASM\u8fd8\u53ef\u4ee5\u7ed9\u8054\u5408\u5b66\u4e60\u7b49\u4eba\u5de5\u667a\u80fd\u6280\u672f\u5e26\u6765\u521b\u65b0\u3002\u4e0e\u4f20\u7edf\u7684\u57fa\u4e8e\u5bb9\u5668\u7684\u8054\u5408\u5b66\u4e60\u5e94\u7528\u90e8\u7f72\u4e0d\u540c\uff0c\u57fa\u4e8eWASM\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5e26\u6765\u826f\u597d\u7684\u9694\u79bb\u6027\u548c\u8f83\u5c0f\u7684\u5185\u5b58\u6d88\u8017\uff0c\u4ece\u800c\u4f7fMPC\u66f4\u52a0\u9ad8\u6548\u548c\u5b89\u5168\u3002\nTensorFlow\u793e\u533a\u6700\u8fd1\u57283\u670811\u65e5\u53d1\u5e03\u4e86\u4e00\u7bc7\u535a\u6587\uff0c\u79f0TF\u73b0\u5728\u53ef\u4ee5\u652f\u6301TensorFlow.js\u7684WebAssembly(WASM)\u540e\u7aef\u3002TensorFlow WASM\u540e\u53f0\u4e3a\u7528\u6237\u5728\u79fb\u52a8CPU\u4e0a\u76f4\u63a5\u8fd0\u884c\u63a8\u7406\u63d0\u4f9b\u4e86\u65b0\u7684\u9009\u62e9\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u6027\u80fd\u589e\u5f3a\u548c\u53ef\u79fb\u690d\u6027\u7684\u826f\u597d\u7ec4\u5408\u3002\u6267\u884c\u901f\u5ea6\u6bd4javascript\u5feb2-10\u500d\uff0c\u5bf9\u79fb\u52a8\u7aef\u7684\u652f\u6301\u6bd4WebGL\u66f4\u597d\u3002\u9274\u4e8eWASM\u793e\u533a\u5bf9SIMD\u652f\u6301\u7684\u6700\u65b0\u53d1\u5c55\uff0c\u63a8\u7406\u6027\u80fd\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u3002\n\u8fd9\u4e2a\u9879\u76ee\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u8bd5\u9a8c\u6027\u7684\u5728\u975e\u5e38\u65e9\u671f\u7684\u9636\u6bb5\uff0c\u6240\u6709\u4e30\u5bcc\u7684\u529f\u80fd\u90fd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\u3002\u4ee5\u4e0b\u662f\u5f53\u524d\u8fd0\u8425\u5546\u652f\u6301\u5217\u8868\uff1a\n\u6ce8\u610f\uff1a\u672c\u9879\u76ee\u76ee\u524d\u4ec5\u5728Ubuntu\u7cfb\u7edf\u4e0a\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u73af\u5883\u5e94\u4e3aUbuntu 16.04+\u3002\n\u5982\u679c\u60a8\u60f3\u5728Web\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528ms-backend-wasm\u5305\uff0c\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5Node.js\u3002\n~#wasm-front end-hUsage\uff1awam-front end[\u9009\u9879]\u9009\u9879\uff1a-c\uff0c--ms-backend-config file_path set wasm backend config file-o\uff0c--op-type value\u8bbe\u7f6e\u8fd0\u7b97\u7b26\u7c7b\u578b\uff0c\u4ec5\u652f\u6301add\u3001mul\u3001argmax\u548cEqualCount\uff0c\u9ed8\u8ba4\u503c\uff1aadd\u3002-d\uff0c--data-type value\u8bbe\u7f6e\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u652f\u6301FP32\u3001INT32\u3001INT8\uff0c\u9ed8\u8ba4\u503c\uff1aFP32\u3002-i\uff0c--input value\u8bbe\u7f6e\u8f93\u5165\u6570\u636e-i\uff0c--input-data-file file_path set input data file-h\uff0c--help\u6253\u5370\u6b64\u5e2e\u52a9\u83dc\u5355\u3002\n\u76ee\u524d\u64cd\u4f5c\u7b26libs\u662f\u7eaf\u624b\u5199\u7684\uff0c\u5411\u5916\u6269\u5c55\u4e0d\u591f\u7075\u6d3b\uff0c\u6267\u884c\u6548\u7387\u4e5f\u4e0d\u9ad8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6b63\u81f4\u529b\u4e8e\u5728\u77ed\u671f\u5185\u589e\u52a0TVM\u8fd0\u884c\u65f6\u652f\u6301\u3002\n\u6b63\u5982TVM\u8fd0\u884c\u65f6\u6559\u7a0b\u4e2d\u6240\u5c55\u793a\u7684\uff0cTVM\u5df2\u7ecf\u652f\u6301WASM\u4f5c\u4e3a\u53ef\u9009\u7684\u786c\u4ef6\u540e\u7aef\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5229\u7528WebAssembly(\u53ef\u79fb\u690d\u6027\u3001\u5b89\u5168\u6027)\u548cTVM\u8fd0\u884c\u65f6(\u7279\u5b9a\u4e8e\u57df\u3001\u4f18\u5316)\u7684\u7279\u6027\u6765\u4e3aMindSpores\u6784\u5efa\u7075\u6d3b\u7684\u3001\u81ea\u52a8\u4f18\u5316\u7684\u540e\u7aef\u3002\nTOPI(TVM Operator Inventory)\u63d0\u4f9b\u4e86\u6bd4TVM\u62bd\u8c61\u7a0b\u5ea6\u66f4\u9ad8\u7684Numpy\u98ce\u683c\u7684\u901a\u7528\u64cd\u4f5c\u548c\u8c03\u5ea6\uff0c\u56e0\u6b64\u5728TVM\u793e\u533a\u4e2d\u6dfb\u52a0\u5177\u6709WASM\u540e\u7aef\u652f\u6301\u7684TOPI\u5305\u7f16\u8bd1\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\n\u867d\u7136\u5728WebAssembly\u8fd0\u884c\u65f6\u53ea\u662f\u4e00\u4e2a\u8fd0\u884cMindSporter\u7684PoC\uff0c\u4f46\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u4f1a\u9a71\u52a8\u5feb\u901f\u8fed\u4ee3\uff0c\u5c06\u96c6\u6210\u53d1\u5e03\u5230MindSporter\u524d\u7aef\u3002\n\u5728\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c(v0.16.0)\u4e2d\uff0c\u6682\u65f6\u4eceWasmtime\u4e2d\u5220\u9664\u4e86\u5bf9\u63a5\u53e3\u7c7b\u578b\u7684\u652f\u6301\u3002\u56e0\u6b64\uff0c\u76ee\u524d\u4f7f\u7528WebAssembly\u6a21\u5757\u610f\u5473\u7740\u5b83\u53ea\u80fd\u5904\u7406\u6574\u6570\u548c\u6d6e\u70b9\u6570\uff0c\u4ee5\u53ca\u66f4\u4e30\u5bcc\u7684\u7c7b\u578b(\u5982\u5b57\u8282\u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u3001\u7ed3\u6784\u7b49)\u3002\u4e0d\u53d7\u652f\u6301\u3002\u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://github.com/bytecodealliance/wasmtime/issues/677.\u3002\n\u5982\u679c\u60a8\u8fd0\u884c\u7684\u662fWindows\uff0c\u8981\u5b89\u88c5Rust\uff0c\u8bf7\u4e0b\u8f7d\u5e76\u8fd0\u884crust-INIT.EXE\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5982\u679c\u60a8\u662fLinux\u7528\u6237\uff0c\u8bf7\u5728\u60a8\u7684\u7ec8\u7aef\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u5b89\u88c5Rust\u3002\nsudo apt-get install-y npmsudo npm install n-gsudo n Stability#\u68c0\u67e5npm\u548cnodenpm-vnode-v\u7684\u7248\u672c\u3002\n\u5982\u679c\u60a8\u8fd0\u884c\u7684\u662f64\u4f4dWindows\uff0c\u8bf7\u4e0b\u8f7d\u5e76\u8fd0\u884cWasmtime\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5982\u679c\u60a8\u662fLinux\u7528\u6237\uff0c\u8bf7\u5728\u60a8\u7684\u7ec8\u7aef\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u5b89\u88c5wa mtime\uff1a\n\u5982\u679c\u60a8\u8fd0\u884c\u7684\u662f64\u4f4dWindows\uff0c\u8bf7\u4e0b\u8f7d\u5e76\u8fd0\u884cwasm-pack-init.exe\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5982\u679c\u60a8\u662fLinux\u7528\u6237\uff0c\u8bf7\u5728\u60a8\u7684\u7ec8\u7aef\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7136\u540e\u6309\u7167\u5c4f\u5e55\u4e0a\u7684\u8bf4\u660e\u5b89\u88c5wasm-pack\uff1a", "note_en": "Experimental notice: This project is still  experimental and only serves as a proof of concept for running  MindSpore on WebAssembly runtime.\n    WebAssembly was proposed to help address the javascript code execution performance problem. WASM has now became a widely used and de-facto runtime standard in web development, especially for mobile applications.\n WASI is a modular system interface for WebAssembly. As described in this  blogpost, WebAssembly is an assembly language for a conceptual machine, so it needs a system interface for a conceptual operating system, not any single operating system. This way, it can be run across all different OSs.\n  We believe that with more maturity at WASI, it is possible that we could have a general backend operator library that could work across all scenarios (Cloud/Edge/Mobile). Together with a WASM port of  MindSpore, our newly open sourced all scenario deep learning framework, WASI could enable a new backend-agnostic, highly secure and performant stack that help user and developers alike to be able to develop new AI applications with better portability.\n WASM could also bring innovation to AI technologies like  Federated Learning. Unlike the conventional container based deployment for federated learning applications, WASM based solution could bring good isolation, small memory consumption and therefore making the MPC more efficient and secure.\n  TensorFlow community recently released a  blogpost on Mar 11th that TF can now support a  WebAssembly (WASM) backend for TensorFlow.js. TensorFlow WASM backend provides a new choice for the user to directly run inference on mobile CPU. It also provides a good combination of performance enhancement and portability. The execution speed is 2\u201310 times faster than javascript and the support for mobile is better than WebGL. In light of the recent development of  SIMD support in WASM community, the inference performance could be further enhanced.\n  This project should be considered  experimental at the very early stage, all rich features are under active development. Here is the current operator support matrix:\n  NOTICE: Currently this project is ONLY tested on Ubuntu system, so  Ubuntu 16.04+ should be prepared as the testing environment.\n   If you want to utilize the  ms-backend-wasm package in web browser, please make sure   Node.js has been installed.\n         ~  # wasm-frontend -hUsage: wasm-frontend [options]Options: -c, --ms-backend-config FILE_PATH  set wasm backend config file -o, --op-type VALUE  set the operator type, ONLY supports Add, Mul, Argmax and EqualCount, default: Add. -d, --data-type VALUE  set the data type, ONLY supports FP32, INT32 and INT8, default: FP32. -I, --input VALUE  set the input data -i, --input-data-file FILE_PATH  set input data file -h, --help print this  help menu\n   Currently the operator libs is  handwriting-only, which is not flexible enough to scale out and not efficient to be executed. Therefore, we are working on adding  TVM runtime support in the short term.\n  As demonstrated in TVM runtime  tutorials, TVM already supports WASM as the optional hardware backend, so we can leverage the features of WebAssembly (portability, security) and TVM runtime (domain-specific, optimization) to build a flexible and auto-optimized backend for MindSpore.\n  TOPI (TVM Operator Inventory) provides numpy-style generic operations and schedules with higher abstractions than TVM, so it&#39;s highly required to add the topi package compilation with WASM backend support in TVM community.\n  Although it is ONLY a PoC on running MindSpore on WebAssembly runtime, we will drive fast iteration to release the integration to MindSpore frontend in later versions.\n  With the latest stable version ( v0.16.0), support for interface types has temporarily removed from Wasmtime. So currently working with WebAssembly modules means it can only deal with integers and floats, and more rich types (like byte arrays, strings, structure, etc.) are not supported. For more information see  https://github.com/bytecodealliance/wasmtime/issues/677.\n   If you are running Windows, to install Rust, download and run the  RUST-INIT.EXE, and then follow the onscreen instructions.\n If you are a Linux user, run the following in your terminal, then follow the on-screen instructions to install Rust.\n sudo apt-get install -y npmsudo npm install n -gsudo n stable  # Check the version of npm and nodenpm -vnode -v\n If you are running Windows 64-bit, download and run  Wasmtime Installer then follow the onscreen instructions.\n If you&#39;re a Linux user run the following in your terminal, then follow the onscreen instructions to install  wasmtime:\n If you are running Windows 64-bit, download and run  wasm-pack-init.exe then follow the onscreen instructions.\n If you&#39;re a Linux user run the following in your terminal, then follow the onscreen instructions to install  wasm-pack:", "posttime": "2020-06-02 08:11:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "webassembly,mindsporte,wasm", "title": "MindSporte WebAssembly\u540e\u7aef", "title_en": "MindSpore WebAssembly Backend", "transed": 1, "url": "https://github.com/leonwanghui/ms-backend-wasm", "via": "", "real_tags": ["wasm"]}, {"category": "", "categoryclass": "", "imagename": "dfce435a5053ed60dd968c80d2770521.jpeg", "infoid": 1004765, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "4\u6708\u4e0b\u65ec\uff0c\u9a6c\u7279\u00b7\u7ebd\u7ef4(Matt Newey)\u5728\u6e05\u7406\u5df2\u6545\u7956\u6bcd\u7684\u5bb6\u4e2d\u65f6\u60c5\u7eea\u6fc0\u52a8\uff1a\u4ed6\u4f38\u624b\u53bb\u62ff\u5979\u7684\u9999\u6c34\uff0c\u4f46\u4ed6\u4ec0\u4e48\u4e5f\u95fb\u4e0d\u5230\u3002\n\u201c\u6211\u592a\u7231\u5979\u4e86\u3002\u6211\u60f3\u8bb0\u4f4f\u5979\u6700\u540e\u4e00\u6b21\u7684\u5473\u9053\uff0c\u201c\u8fd9\u4f4d23\u5c81\u7684\u5973\u5b69\u8bf4\uff0c\u4ed6\u57283\u6708\u4efd\u4ece\u65b0\u51a0\u80ba\u708e\u90a3\u91cc\u6062\u590d\u8fc7\u6765\u3002\u201c\u611f\u89c9\u5c31\u50cf\u662f\u6211\u6b63\u5728\u5931\u53bb\u90a3\u6bb5\u8bb0\u5fc6\u3002\u5f88\u75bc\u3002\u201c", "note_en": "Matt Newey was overcome with emotion clearing his deceased grandmother\u2019s home in late April: He reached for her perfume, but he couldn\u2019t smell a thing.\n  \u201cI loved her so much. I wanted to remember what she smelled like one last time,\u201d said the 23-year-old, who recovered from Covid-19 in March. \u201cIt felt like I was losing that memory. It hurt.\u201d", "posttime": "2020-06-02 08:10:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u5473\u89c9,patients", "title": "\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u6709\u65f6\u56de\u4e0d\u6765\u5473\u89c9\u3001\u55c5\u89c9", "title_en": "Coronavirus Patients Sometimes Don't Get Back Taste, Smell Senses", "transed": 1, "url": "https://www.wsj.com/articles/coronavirus-patients-lose-senses-of-taste-smelland-havent-gotten-them-back-11591007522", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u5473\u89c9", "patients"]}, {"category": "", "categoryclass": "", "imagename": "0ec9b91f2fd0228ada974dd3e5427f42.jpg", "infoid": 1004763, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u641c\u7d222011\u5e74\u82f1\u683c\u5170\u9a9a\u4e71\uff0c\u66f4\u5e7f\u4e3a\u4eba\u77e5\u7684\u662f\u4f26\u6566\u9a9a\u4e71\uff0c\u8fd9\u662f2011\u5e748\u67086\u65e5\u81f311\u65e5\u4e4b\u95f4\u7684\u4e00\u7cfb\u5217\u9a9a\u4e71\uff0c\u5f53\u65f6\u6570\u5343\u4eba\u5728\u82f1\u683c\u5170\u5404\u5730\u7684\u57ce\u9547\u53d1\u751f\u9a9a\u4e71\uff0c\u62a2\u52ab\u3001\u7eb5\u706b\u548c\u5927\u89c4\u6a21\u90e8\u7f72\u8b66\u5bdf\uff0c\u5bfc\u81f45\u4eba\u6b7b\u4ea1\u3002\n\u4f26\u6566\u6258\u7279\u7eb3\u59c6\u7684\u6297\u8bae\u6d3b\u52a8\u59cb\u4e8e\u5f53\u5730\u7537\u5b50\u9a6c\u514b\u00b7\u675c\u6839(Mark Duggan)\u7684\u6b7b\u4ea1\uff0c\u4ed6\u4e8e8\u67084\u65e5\u88ab\u8b66\u5bdf\u5f00\u67aa\u6253\u6b7b\u3002[9]\u968f\u540e\u4e0e\u8b66\u65b9\u53d1\u751f\u4e86\u51e0\u6b21\u66b4\u529b\u51b2\u7a81\uff0c\u5e76\u6467\u6bc1\u4e86\u8b66\u8f66\u3001\u4e00\u8f86\u53cc\u5c42\u5df4\u58eb\u4ee5\u53ca\u8bb8\u591a\u623f\u5c4b\u548c\u4f01\u4e1a\uff0c\u56e0\u6b64\u8fc5\u901f\u5f15\u8d77\u4e86\u5a92\u4f53\u7684\u5173\u6ce8\u3002\u4e00\u591c\u4e4b\u95f4\uff0c\u6258\u7279\u7eb3\u59c6\u9ed1\u5c14\u96f6\u552e\u516c\u56ed\u548c\u9644\u8fd1\u7684\u4f0d\u5fb7\u683c\u6797\u53d1\u751f\u4e86\u62a2\u52ab\u4e8b\u4ef6\u3002\u63a5\u4e0b\u6765\u7684\u51e0\u5929\uff0c\u4f26\u6566\u5176\u4ed6\u5730\u533a\u4e5f\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u573a\u9762\uff0c\u6700\u4e25\u91cd\u7684\u9a9a\u4e71\u53d1\u751f\u5728\u54c8\u514b\u5c3c\u3001\u5e03\u91cc\u514b\u65af\u987f\u3001\u6c83\u5c14\u745f\u59c6\u65af\u6258\u3001\u4f69\u5361\u59c6\u3001\u6069\u83f2\u5c14\u5fb7\u3001\u5df4\u7279\u897f\u3001\u514b\u7f57\u4f0a\u767b\u3001\u4f0a\u7075\u3001\u5df4\u91d1\u3001\u4f0d\u5c14\u7ef4\u5947\u3001\u5218\u6613\u6c99\u59c6\u548c\u4e1c\u706b\u817f\u3002\n\u4ece8\u67088\u65e5\u523010\u65e5\uff0c\u82f1\u683c\u5170\u7684\u5176\u4ed6\u57ce\u9547(\u5305\u62ec\u4f2f\u660e\u7ff0\u3001\u5e03\u91cc\u65af\u6258\u5c14\u3001\u8003\u6587\u5782\u3001\u5fb7\u6bd4\u3001\u83b1\u65af\u7279\u3001\u5229\u7269\u6d66\u3001\u66fc\u5f7b\u65af\u7279\u3001\u8bfa\u4e01\u6c49\u3001\u897f\u5e03\u7f57\u59c6\u7ef4\u5947\u548c\u4f0d\u5c14\u5f17\u6c49\u666e\u987f)\u90fd\u770b\u5230\u4e86\u88ab\u5a92\u4f53\u63cf\u8ff0\u4e3a\u6a21\u4eff\u6027\u66b4\u529b\u7684\u4e8b\u4ef6\uff0c\u793e\u4ea4\u5a92\u4f53\u4e5f\u53d1\u6325\u4e86\u4f5c\u7528\u3002\u622a\u81f38\u670810\u65e5\uff0c\u82f1\u683c\u5170\u5404\u5730\u902e\u6355\u4e863000\u591a\u4eba\uff0c1000\u591a\u4eba\u56e0\u4e0e\u9a9a\u4e71\u6709\u5173\u7684\u5404\u79cd\u7f6a\u884c\u53d7\u5230\u5211\u4e8b\u6307\u63a7\u3002[10]\u6700\u521d\uff0c\u6cd5\u9662\u5f00\u5ead\u65f6\u95f4\u8f83\u957f\u3002\u4f26\u6566\u5404\u5730\u603b\u5171\u67093443\u8d77\u4e0e\u8fd9\u79cd\u75be\u75c5\u6709\u5173\u7684\u72af\u7f6a\u3002[11]\u96645\u4eba\u6b7b\u4ea1\u5916\uff0c\u81f3\u5c11\u8fd8\u670916\u4eba\u56e0\u76f8\u5173\u66b4\u529b\u884c\u4e3a\u76f4\u63a5\u53d7\u4f24\u3002\u4f30\u8ba1\u9020\u6210\u4e86\u4ef7\u503c2\u4ebfGB\u7684\u8d22\u4ea7\u635f\u5931\uff0c\u5f53\u5730\u7ecf\u6d4e\u6d3b\u52a8-\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u5df2\u7ecf\u7531\u4e8e\u7ecf\u6d4e\u8870\u9000\u800c\u82e6\u82e6\u6323\u624e-\u4e25\u91cd\u53d7\u635f\u3002\n\u9a9a\u4e71\u5728\u653f\u754c\u3001\u793e\u4f1a\u548c\u5b66\u672f\u754c\u4eba\u58eb\u4e4b\u95f4\u5c31\u53d1\u751f\u9a9a\u4e71\u7684\u539f\u56e0\u548c\u80cc\u666f\u8fdb\u884c\u4e86\u91cd\u5927\u7684\u6301\u7eed\u8fa9\u8bba\u3002\u66b4\u5f92\u7684\u884c\u4e3a\u5f52\u56e0\u4e8e\u793e\u4f1a\u56e0\u7d20\uff0c\u5982\u79cd\u65cf\u7d27\u5f20\u3001\u9636\u7ea7\u7d27\u5f20\u3001\u7ecf\u6d4e\u8870\u9000\u4ee5\u53ca\u8870\u9000\u5e26\u6765\u7684\u5931\u4e1a\u3002[6][10][12][13]\u3002\n2011\u5e748\u67084\u65e5\uff0c\u4e00\u540d\u8b66\u5bdf\u5728\u6258\u7279\u7eb3\u59c6\u00b7\u9ed1\u5c14\u8f66\u7ad9\u65c1\u8fb9\u7684\u6e21\u53e3\u5c0f\u5df7\u5927\u6865\u4e0a\u8fdb\u884c\u7684\u4e00\u6b21\u60c5\u62a5\u4e3b\u5bfc\u7684\u3001\u6709\u9488\u5bf9\u6027\u7684\u8f66\u8f86\u62e6\u622a\u7a0b\u5e8f\u4e2d\u5f00\u67aa\u6253\u6b7b\u4e8629\u5c81\u7684\u9a6c\u514b\u00b7\u8fbe\u6839(Mark Duggan)\u3002[14][15][16][17]\u72ec\u7acb\u8b66\u5bdf\u6295\u8bc9\u59d4\u5458\u4f1a(IPCC)\u8bf4\uff0c\u8ba1\u5212\u4e2d\u7684\u902e\u6355\u662f\u5f53\u65f6\u8c03\u67e5\u9ed1\u4eba\u793e\u533a\u67aa\u652f\u72af\u7f6a\u7684\u4e09\u53c9\u621f\u884c\u52a8\u7684\u4e00\u90e8\u5206\u3002[13]\u8be5\u4e8b\u4ef6\u5df2\u63d0\u4ea4\u7ed9\u6c14\u4e13\u59d4\uff0c[14]\u8fd9\u662f\u8b66\u65b9\u63a5\u89e6\u540e\u6b7b\u4ea1\u6216\u4e25\u91cd\u53d7\u4f24\u7684\u6807\u51c6\u505a\u6cd5\u3002[18]\u3002\n\u67aa\u51fb\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u5a92\u4f53\u5e7f\u6cdb\u62a5\u9053\u79f0\uff0c\u8b66\u65b9\u4e00\u53f0\u6536\u97f3\u673a\u5185\u5d4c\u6709\u4e00\u9897\u5b50\u5f39\uff0c\u6697\u793a\u675c\u6839\u5411\u8b66\u65b9\u5f00\u67aa\u3002[15]\u8fbe\u6839\u7684\u670b\u53cb\u548c\u4eb2\u621a\u8bf4\u4ed6\u624b\u65e0\u5bf8\u94c1\u3002\u8b66\u65b9\u540e\u6765\u900f\u9732\uff0c\u5bf9\u4ece\u8b66\u65b9\u7535\u53f0\u627e\u5230\u7684\u5b50\u5f39\u8fdb\u884c\u7684\u521d\u6b65\u5f39\u9053\u6d4b\u8bd5\u8868\u660e\uff0c\u8fd9\u662f\u4e00\u679a\u975e\u5e38\u72ec\u7279\u7684\u8b66\u65b9\u53d1\u5c04\u7684\u7a7a\u5fc3\u5b50\u5f39\u3002[15][19]\u6c14\u4e13\u59d4\u540e\u6765\u8bf4\uff0c\u4ece\u73b0\u573a\u53d1\u73b0\u4e86\u4e00\u628a\u88c5\u4e86\u5b50\u5f39\u7684Bruni BBM\u7a7a\u5c04\u624b\u67aa\uff0c\u6539\u88c5\u6210\u5b9e\u5f39\u3002[20][21]\u5b83\u662f\u7528\u889c\u5b50\u5305\u7740\u7684\uff0c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u5b83\u662f\u88ab\u53d1\u5c04\u7684\u3002[22]\u3002\n8\u670813\u65e5\uff0cIPCC\u8868\u793a\uff0c\u675c\u6839\u6ca1\u6709\u5f00\u706b\uff1a\u4f3c\u4e4e\u6211\u4eec\u53ef\u80fd\u5728\u53e3\u5934\u4e0a\u8bef\u5bfc\u8bb0\u8005[\u9519\u8bef\u5730]\u76f8\u4fe1\u67aa\u51fb\u53d1\u751f\u4e86\u3002\u5c04\u5165\u4e00\u540d\u8b66\u5b98\u65e0\u7ebf\u7535\u7684\u5b50\u5f39\u636e\u4fe1\u662f\u7a7f\u900f\u4e86\u675c\u6839\u7684\u8eab\u4f53\u3002[23][24]\u3002\n8\u67086\u65e5\u5348\u9910\u65f6\u95f4\uff0c\u8b66\u65b9\u53ec\u96c6\u5f53\u5730\u793e\u533a\u9886\u8896\u3001\u8bae\u5458\u548c\u8b66\u5bdf\u54a8\u8be2\u5c0f\u7ec4\u6210\u5458\u4e3e\u884c\u4f1a\u8bae\u3002\u5728\u8fd9\u6b21\u4f1a\u8bae\u4e0a\uff0c\u8b66\u65b9\u591a\u6b21\u88ab\u8b66\u544a\uff0c\u5982\u679c\u5f53\u5730\u5bf9\u6b7b\u4ea1\u7684\u62c5\u5fe7\u5f97\u4e0d\u5230\u89e3\u51b3\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u53e6\u4e00\u573a\u7c7b\u4f3c1985\u5e74\u5e03\u7f57\u5fb7\u6c83\u7279\u519c\u573a\u9a9a\u4e71\u7684\u9a9a\u4e71\u3002[25][26]\n2014\u5e741\u67088\u65e5\uff0c\u7687\u5bb6\u6cd5\u9662\u7684\u966a\u5ba1\u56e2\u5f97\u51fa\u7ed3\u8bba\uff0c\u675c\u6839\u662f\u88ab\u5408\u6cd5\u6740\u5bb3\u7684\u3002\n8\u67086\u65e5\u661f\u671f\u516d\uff0c\u4e3e\u884c\u4e86\u6297\u8bae\u6d3b\u52a8\uff0c\u6297\u8bae\u6700\u521d\u548c\u5e73\u8fdb\u884c\uff0c\u4ece\u5e03\u7f57\u5fb7\u6c83\u7279\u519c\u573a\u5f00\u59cb\uff0c\u5728\u6258\u7279\u7eb3\u59c6\u8b66\u5bdf\u5c40\u7ed3\u675f\u3002[27]\u6297\u8bae\u6d3b\u52a8\u662f\u7531\u675c\u6839\u7684\u670b\u53cb\u548c\u4eb2\u621a\u7ec4\u7ec7\u7684\uff0c\u76ee\u7684\u662f\u4e3a\u8fd9\u5bb6\u4eba\u4f38\u5f20\u6b63\u4e49\u3002[13][28]\u7ea6300\u4eba\u7ec4\u6210\u7684\u5c0f\u7ec4\u8981\u6c42\u5f53\u5730\u4e00\u540d\u9ad8\u7ea7\u8b66\u5b98\u51fa\u6765\u5bf9\u4ed6\u4eec\u8bb2\u8bdd\u3002\u5f53\u603b\u7763\u5bdf\u963f\u5fb7\u00b7\u963f\u5fb7\u52d2\u574e\u5230\u8fbe\u65f6\uff0c\u4ed6\u906d\u5230\u4e86\u6c64\u59c6\u53d4\u53d4\u548c\u6930\u5b50\u53d4\u53d4\u7684\u5618\u58f0\u548c\u54ed\u58f0\u3002[30]\u4eba\u7fa4\u5728\u8b66\u5bdf\u5c40\u95e8\u524d\u9017\u7559\u7684\u65f6\u95f4\u6bd4\u4ed6\u4eec\u539f\u8ba1\u5212\u7684\u65f6\u95f4\u957f\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5bf9\u5f53\u65f6\u53ef\u7528\u8b66\u5458\u7684\u8d44\u5386\u4e0d\u6ee1\u610f\u3002\u6709\u4f20\u8a00\u79f0\uff0c\u4e00\u540d16\u5c81\u7684\u5973\u5b69\u5728\u7528\u9999\u69df\u9152\u74f6\u88ad\u51fb\u8b66\u5bdf\u540e\u53d7\u4f24\uff0c\u8fd9\u4e00\u4f20\u8a00\u5f00\u59cb\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u6d41\u4f20\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5973\u5b69\u7684\u8eab\u4efd\u4ecd\u7136\u4e0d\u660e\uff0c\u62a5\u9053\u4e5f\u6ca1\u6709\u5f97\u5230\u8bc1\u5b9e\u3002\u7136\u800c\uff0c\u5149\u662f\u8c23\u8a00\u5c31\u8db3\u4ee5\u8fdb\u4e00\u6b65\u52a0\u5267\u8be5\u5730\u533a\u7684\u7d27\u5f20\u5c40\u52bf\u3002[12][31][32]\u3002\n8\u67086\u65e5\u661f\u671f\u516d\uff0c\u6258\u7279\u7eb3\u59c6\u4e3e\u884c\u548c\u5e73\u6e38\u884c\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u9a9a\u4e71\u548c\u62a2\u52ab\uff0c\u5148\u662f\u5728\u6258\u7279\u7eb3\u59c6\uff0c\u540e\u6765\u5728\u6258\u7279\u7eb3\u59c6\u9ed1\u5c14\u96f6\u552e\u516c\u56ed(Tottenham Hale Retail Park)\u3002\u5728\u5927\u7ea6120\u4eba\u4ece\u5e03\u7f57\u5fb7\u6c83\u7279\u519c\u573a\u5e84\u56ed\u901a\u8fc7\u9ad8\u901f\u516c\u8def\u6e38\u884c\u5230\u6258\u7279\u7eb3\u59c6\u8b66\u5bdf\u5c40\u540e\u4e0d\u4e45\u5c31\u53d1\u751f\u4e86\u9a9a\u4e71\u3002[34]\u3002\n\u5173\u4e8e\u524d\u4e00\u5929\u665a\u4e0a\u6258\u7279\u7eb3\u59c6\u9a9a\u4e71\u7684\u65b0\u95fb\u548c\u8c23\u8a00\u7684\u4f20\u64ad\u57288\u67087\u65e5\u5468\u65e5\u665a\u4e0a\u5728\u4f26\u6566\u7684\u5e03\u91cc\u514b\u65af\u987f\u3001\u6069\u83f2\u5c14\u5fb7\u3001\u4f0a\u65af\u7075\u987f\u548c\u4f0d\u5fb7\u683c\u6797\u5730\u533a\u4ee5\u53ca\u4f26\u6566\u5e02\u4e2d\u5fc3\u7684\u725b\u6d25\u9a6c\u620f\u56e2\u5f15\u53d1\u4e86\u9a9a\u4e71\u3002\n8\u67088\u65e5\u661f\u671f\u4e00\u4e0a\u5348\u5f88\u5e73\u9759\uff0c\u4f46\u5230\u4e86\u508d\u665a\uff0c\u4f26\u6566\u5404\u5730\u90fd\u53d7\u5230\u4e86\u5927\u8303\u56f4\u62a2\u52ab\u3001\u7eb5\u706b\u548c\u66b4\u529b\u7684\u5f71\u54cd\uff0c\u5df4\u7279\u897f\u3001\u5e03\u91cc\u514b\u65af\u987f\u3001\u5e03\u7f57\u59c6\u5229\u3001\u5361\u59c6\u767b\u3001\u514b\u7f57\u4f0a\u767b\u3001\u4f0a\u7075\u3001\u4e1c\u54c8\u59c6\u3001\u54c8\u514b\u5c3c\u3001\u54c8\u7f57\u3001\u8def\u6613\u6c99\u59c6\u3001\u4f69\u5361\u59c6\u3001\u65af\u7279\u62c9\u7279\u798f\u5fb7\u3001\u6c83\u5c14\u745f\u59c6\u68ee\u6797\u3001\u4f0d\u5c14\u7ef4\u5947\u548c\u4f0d\u5fb7\u683c\u6797\u7684\u90e8\u5206\u5730\u533a\u7206\u53d1\u4e86\u4e25\u91cd\u7684\u75ab\u60c5\u3002\u4e00\u540d\u7537\u5b50\u88ab\u53d1\u73b0\u5728\u514b\u7f57\u4f0a\u767b\u4e2d\u67aa\uff0c\u540e\u6765\u5728\u533b\u9662\u6b7b\u4ea1\u3002\u53e6\u4e00\u540d\u5728\u4f0a\u4ee4\u5e02\u906d\u5230\u88ad\u51fb\u7684\u7537\u5b50\u4e8e8\u670811\u65e5\u661f\u671f\u56db\u5728\u533b\u9662\u6b7b\u4ea1\u3002\n\u5728\u5927\u5e45\u589e\u52a0\u8b66\u529b\u540e\uff0c\u4f26\u6566\u4e8e8\u67089\u65e5\u661f\u671f\u4e8c\u4fdd\u6301\u5e73\u9759\uff0c\u4f46\u8bfa\u4e01\u6c49\u548c\u4f2f\u660e\u7ff0\u7684\u9a9a\u4e71\u4ecd\u5728\u7ee7\u7eed(\u6839\u636e\u8b66\u65b9\u7684\u8bf4\u6cd5\uff0c\u5171\u670911\u67aa\u5411\u8b66\u5bdf\u5f00\u67aa\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u67b6\u8b66\u7528\u76f4\u5347\u673a\uff0c\u5411\u8b66\u5bdf\u6295\u63b7\u6c7d\u6cb9\u5f39[36])\uff0c\u9a9a\u4e71\u8513\u5ef6\u5230\u83b1\u65af\u7279\u3001\u897f\u7c73\u5fb7\u5170\u5179\u90e8\u5206\u5730\u533a\u548c\u82f1\u683c\u5170\u897f\u5317\u90e8\u7684\u5927\u66fc\u5f7b\u65af\u7279\u548c\u9ed8\u897f\u585e\u5fb7\u90e8\u5206\u5730\u533a\u30028\u670810\u65e5\u661f\u671f\u4e09\uff0c\u4f26\u6566\u4fdd\u6301\u5b89\u9759\uff0c\u800c\u8b66\u65b9\u6b63\u5728\u902e\u6355\u6570\u767e\u4eba\u3002\n\u4e09\u540d\u7537\u5b50\u5728\u4f2f\u660e\u7ff0\u4e00\u8d77\u4e0e\u9a9a\u4e71\u6709\u5173\u7684\u8087\u4e8b\u9003\u9038\u4e8b\u4ef6\u4e2d\u4e27\u751f\u3002\u5728\u66fc\u5f7b\u65af\u7279\u548c\u5229\u7269\u6d66\u5468\u56f4\u7684\u4e24\u4e2a\u5730\u70b9\uff0c\u62a2\u52ab\u548c\u66b4\u529b\u4e8b\u4ef6\u4ecd\u5728\u7ee7\u7eed\u3002\n\u5728\u6574\u4e2a\u9a9a\u4e71\u8fc7\u7a0b\u4e2d\uff0c\u8bb8\u591a\u66b4\u5f92\u90fd\u6ca1\u6709\u906e\u4f4f\u8138\u3002\u4e00\u4e9b\u4eba\u6446\u597d\u59ff\u52bf\u4e0e\u8d43\u7269\u5408\u5f71\uff0c\u5e76\u5c06\u5176\u53d1\u5e03\u5728\u793e\u4ea4\u7f51\u7ad9\u4e0a\u3002[37]\n\u5c3d\u7ba1\u4f26\u6566\u4f7f\u7528\u95ed\u8def\u7535\u89c6\u6444\u50cf\u673a\u76d1\u63a7\u72af\u7f6a\u548c\u5927\u578b\u6d3b\u52a8\uff0c\u4f46\u62a5\u544a\u663e\u793a\uff0c\u4e0e\u8b66\u5bdf\u76f8\u6bd4\uff0c\u516c\u6c11\u955c\u5934\u5728\u884c\u52a8\u4e2d\u6355\u6349\u62a2\u52ab\u8005\u7684\u8d21\u732e\u66f4\u5927\u3002[38]\u5728\u95ed\u8def\u7535\u89c6\u4e4b\u5916\uff0c\u62a2\u52ab\u8005\u88ab\u62cd\u5230\u5e76\u62cd\u4e0b\u4e86\u4ed6\u4eec\u7684\u8138\u3002\u8b66\u65b9\u548c\u8c03\u67e5\u4eba\u5458\u4f7f\u7528Flickr\u7b49\u7f51\u7ad9\u67e5\u627e\u62a2\u52ab\u8005\u7684\u753b\u5eca\uff0c\u4ee5\u5e2e\u52a9\u89e3\u51b3\u548c\u9632\u6b62\u7834\u574f\u516c\u7269\u548c\u8fdb\u4e00\u6b65\u7834\u574f\u7684\u6848\u4ef6\u3002\u8fd8\u521b\u5efa\u4e86Facebook\u9875\u9762\u6765\u8bc6\u522b\u62a2\u52ab\u8005\u3002[39]\u3002\n\u8c37\u6b4c\u5730\u56fe\u7f51\u7ad9\u4e0a\u5b89\u88c5\u4e86\u51e0\u5f20\u4e92\u52a8\u5730\u56fe\uff0c\u663e\u793a\u9a9a\u4e71\u671f\u95f4\u8857\u9053\u4e0a\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u536b\u661f\u89c6\u56fe\u3002\u514d\u8d39\u5a92\u4f53\u8d44\u6e90\u7684\u5e38\u52a1\u8463\u4e8b\u8a79\u59c6\u65af\u00b7\u514b\u91cc\u5fb7\u5170(James Cridland)\u521b\u5efa\u4e86\u4e00\u5f20\u8c37\u6b4c\u5730\u56fe\uff0c\u8ffd\u8e2a\u7ecf\u8fc7\u6838\u5b9e\u7684\u9a9a\u4e71\u5730\u70b9\u3002\u7b2c\u56db\u9891\u9053\u65b0\u95fb\u9891\u9053\u4e5f\u6709\u7c7b\u4f3c\u7684\u5730\u56fe\uff0c\u9010\u6b65\u8ffd\u8e2a\u8857\u9053\u4e0a\u7684\u7834\u574f\u60c5\u51b5\u3002[40]\u65b0\u95fb\u9891\u9053\u8fd8\u80fd\u591f\u5229\u7528\u8fd9\u9879\u516c\u5171\u670d\u52a1\u6765\u6355\u6349\u8857\u9053\u4e0a\u7684\u5b9e\u51b5\u753b\u9762\uff0c\u5e76\u544a\u77e5\u516c\u6c11\u5371\u9669\u6216\u62e5\u6324\u7684\u5730\u533a\u3002\n\u6709\u62a5\u9053\u79f0\uff0c\u62a2\u52ab\u8005\u5229\u7528\u9ed1\u8393\u4fe1\u4f7f\u670d\u52a1\u6765\u7ec4\u7ec7\u4ed6\u4eec\u7684\u6d3b\u52a8\uff0c\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u4e0a\u5173\u4e8e\u9a6c\u514b\u00b7\u8fbe\u6839\u88ab\u6740\u7684\u717d\u52a8\u6027\u548c\u4e0d\u51c6\u786e\u7684\u62a5\u9053\u53ef\u80fd\u717d\u52a8\u4e86\u9a9a\u4e71\u3002[41]\u5728\u7528\u6237\u4e4b\u95f4\u5171\u4eab\u7684\u4f17\u591a\u4fe1\u606f\u4e2d\uff0c\u6709\u4e00\u6761\u5982\u4e0b\uff1a\n\u57c3\u5fb7\u8499\u987f\u00b7\u6069\u83f2\u5c14\u5fb7\u7684\u6bcf\u4e2a\u4eba\uff0c\u5317\u65b9\u5230\u5904\u90fd\u662f\u7eff\u8272\u7684\u6811\u6797\uff0c4\u70b9\u6574\u5728\u6069\u83f2\u5c14\u5fb7\u9547\u8f66\u7ad9\u4f1a\u5408\uff01\u5f00\u59cb\u3002\u5f00\u59cb\u79bb\u5f00\u4f60\u7684\u9662\u5b50\uff0c\u4e0e\u4f60\u7684NI**\u8fde\u63a5\u8d77\u6765\u3002\u53bb\u4ed6\u5988\u7684\u8054\u90a6\u8c03\u67e5\u5c40\uff0c\u5e26\u4e0a\u4f60\u4eec\u7684\u7403\u548c\u4f60\u4eec\u7684\u888b\u5b50\uff0c\u624b\u63a8\u8f66\uff0c\u9762\u5305\u8f66\uff0c\u6572\u6253\u505c\u8f66\u573a\uff01\uff01&#34\uff1b[44]\u3002\nResearch in Motion\u534f\u52a9\u82f1\u56fd\u8b66\u65b9\u8ffd\u8e2a\u4f7f\u7528BBM\u7684\u66b4\u5f92\uff0c\u58f0\u660e\uff1a\u6211\u4eec\u9075\u5b88\u201c\u8c03\u67e5\u6743\u529b\u6761\u4f8b\u201d\uff0c\u5e76\u4e0e\u5185\u653f\u90e8\u548c\u82f1\u56fd\u8b66\u5bdf\u90e8\u961f\u5145\u5206\u5408\u4f5c\u3002\n\u4e2a\u4eba\u4e4b\u95f4\u8054\u7cfb\u7684\u589e\u52a0\u5bfc\u81f4\u4e86\u7ec4\u7ec7\u548c\u6267\u884c\u5927\u89c4\u6a21\u96c6\u4f1a\u7684\u80fd\u529b\u66f4\u5f3a\u3002[46]\u8fd9\u4e0d\u4ec5\u53d1\u751f\u5728\u82f1\u56fd\u7684\u9a9a\u4e71\u4e2d\uff0c\u4e5f\u53d1\u751f\u5728\u5176\u4ed6\u96c6\u4f53\u96c6\u4f1a\u4e0a\uff0c\u5982\u963f\u62c9\u4f2f\u4e4b\u6625\u548c2011\u5e74\u7684\u57c3\u53ca\u9769\u547d\u3002[47]\u3002\n\u5c31\u50cfBBM\u4e00\u6837\uff0c\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u6d3b\u52a8\u5851\u9020\u4e86\u4f26\u6566\u9a9a\u4e71\u3002\u57281985\u5e74\u6258\u7279\u7eb3\u59c6\u9a9a\u4e71\u671f\u95f4\uff0c\u5e02\u6c11\u4eec\u4e0d\u5f97\u4e0d\u524d\u5f80\u516c\u5171\u573a\u6240\u8868\u8fbe\u4ed6\u4eec\u7684\u4fe1\u606f\u3002[48]\u7136\u800c\uff0c\u7531\u4e8e\u53ef\u4ee5\u4f7f\u7528\u63a8\u7279\u4f5c\u4e3a\u4ea4\u6d41\u5a92\u4ecb\uff0c\u793e\u4ea4\u5a92\u4f53\u88ab\u7528\u6765\u8fc5\u901f\u4f20\u64ad\u9a9a\u4e71\u7684\u4fe1\u606f\u3002[48][48]\u3002\n\u5e7f\u64ad\u56db\u53f0\u6279\u8bc4Twitter\u901a\u8fc7\u8d2a\u5a6a\u548c\u72af\u7f6a\u884c\u4e3a\u52a9\u957f\u4e86\u9a9a\u4e71\u3002[49]\u300a\u6bcf\u65e5\u7535\u8baf\u62a5\u300b\u5c06\u63a8\u7279\u63cf\u8ff0\u4e3a\u5ba3\u626c\u5e2e\u6d3e\u66b4\u529b\u7684\u6e20\u9053\u3002[49]\u6709\u8bc1\u636e\u8868\u660e\uff0cTwitter\u4e4b\u6240\u4ee5\u5f3a\u5927\uff0c\u662f\u56e0\u4e3a\u4e2a\u4eba\u7684\u63a8\u6587\u53d7\u5230\u65b0\u95fb\u5185\u5bb9\u7684\u542f\u53d1\u3002[50]\u7136\u800c\uff0c\u300a\u65f6\u4ee3\u300b\u6742\u5fd7\u7684\u4e00\u7bc7\u6587\u7ae0\u6697\u793a\uff0c\u9ed1\u8393Messenger\u5e94\u8be5\u627f\u62c5\u66f4\u591a\u8d23\u4efb\u3002[48][48]\n\u5728\u9a9a\u4e71\u671f\u95f4\uff0c\u57288\u67088\u65e5\u661f\u671f\u4e00\uff0c\u63a8\u7279\u5360\u636e\u4e86\u82f1\u56fd\u6bcf170\u6b21\u4e92\u8054\u7f51\u8bbf\u95ee\u4e2d\u76844\u6b21\u3002\u6b64\u5916\uff0c\u7834\u574f\u53d1\u751f\u540e\uff0c\u5e02\u6c11\u4eec\u8fd8\u4f7f\u7528\u63a8\u7279\u56e2\u7ed3\u5728\u4e00\u8d77\u3002\u9a9a\u4e71\u7684\u540e\u679c\u5bfc\u81f4\u57ce\u5e02\u9677\u5165\u6df7\u4e71\uff0c\u7136\u800c\u63a8\u7279\u88ab\u8fdb\u4e00\u6b65\u7528\u6765\u7ef4\u62a4\u548c\u5e73\uff0c\u8bdd\u9898\u6807\u7b7e\u5305\u62ec#34\uff1b#\u66b4\u4e71\u6e05\u7406#\u3002[50]\u6709\u8bc1\u636e\u8868\u660e\uff0c\u4eba\u4eec\u5728\u63a8\u7279\u4e0a\u4e0d\u65ad\u8f6c\u53d1\u4e0e\u9a9a\u4e71\u6709\u5173\u7684\u65b0\u95fb\uff0c\u800c\u4e0d\u662f\u539f\u521b\u5185\u5bb9\u3002[50][50]\u3002\n\u9664\u4e86\u9ed1\u8393\u4fe1\u4f7f(BlackBerry Messenger)\u548c\u793e\u4ea4\u7f51\u7ad9\uff0c\u79fb\u52a8\u7535\u8bdd\u8fd0\u8425\u5546T-Mobile\u548cOrange\u4f18\u5148\u8003\u8651\u8b66\u65b9\u8981\u6c42\u63d0\u4f9b\u6709\u5173\u7528\u4e8e\u7b56\u5212\u82f1\u56fd\u57ce\u5e02\u9a9a\u4e71\u7684\u624b\u673a\u7684\u4fe1\u606f\u3002\u6839\u636e\u201c\u8c03\u67e5\u6743\u529b\u6761\u4f8b\u201d(Regulatory Of Investigatory Power Act)\uff0c\u7535\u8bdd\u516c\u53f8\u5fc5\u987b\u4ea4\u51fa\u6709\u5173\u62e8\u6253\u7535\u8bdd\u7684\u5730\u70b9\u3001\u7535\u8bdd\u62e5\u6709\u8005\u4ee5\u53ca\u62e8\u6253\u548c\u63a5\u542c\u7279\u5b9a\u624b\u673a\u7684\u7535\u8bdd\u5217\u8868\u7684\u6570\u636e\u3002[45]\u3002\n\u7279\u96f7\u5f17\u00b7\u57c3\u5229\u65af(Trevor Ellis)\uff0c26\u5c81\uff0c\u6765\u81ea\u5e03\u91cc\u514b\u65af\u987f\u5c71\uff0c8\u67088\u65e5\u5728\u4f26\u6566\u5357\u90e8\u514b\u7f57\u4f0a\u767b\u53d1\u751f\u67aa\u51fb\u4e8b\u4ef6\u540e\u6b7b\u4ea1\u3002[51]\u4ed6\u7684\u5bb6\u4eba\u5426\u8ba4\u6709\u5173\u57c3\u5229\u65af\u4e0e\u4e00\u7fa4\u670b\u53cb\u4ece\u5e03\u91cc\u514b\u65af\u987f\u5730\u533a\u6765\u5230\u514b\u7f57\u4f0a\u767b\u53c2\u4e0e\u62a2\u52ab\u7684\u62a5\u9053\u3002[54]\u622a\u81f32013\u5e7412\u670816\u65e5\uff0c\u5df2\u902e\u6355\u4e8613\u540d\u4e0e\u8fd9\u8d77\u8c0b\u6740\u6848\u6709\u5173\u7684\u4eba\u3002\u6240\u6709\u4eba\u540e\u6765\u90fd\u88ab\u4fdd\u91ca\uff0c\u7136\u540e\u5728\u6ca1\u6709\u91c7\u53d6\u884c\u52a8\u7684\u60c5\u51b5\u4e0b\u83b7\u91ca\u300212\u670816\u65e5\uff0c\u57c3\u5229\u65af\u751f\u65e5\u524d\u5915\uff0c\u4fa6\u63a2\u4eec\u5bf9\u8fd9\u8d77\u8c0b\u6740\u6848\u5c55\u5f00\u4e86\u65b0\u7684\u4e0a\u8bc9\uff0c\u8981\u6c42\u8bc1\u4eba\u633a\u8eab\u800c\u51fa\u3002\u622a\u81f32020\u5e74\uff0c\u8fd8\u6ca1\u6709\u4eba\u88ab\u8d77\u8bc9\u3002[56][56]\u3002\n8\u670810\u65e5\uff0c\u5728\u4f2f\u660e\u7ff0\u6e29\u68ee\u683c\u6797\uff0c\u4e09\u540d\u7537\u5b50--21\u5c81\u7684Haroon Jahan\u300130\u5c81\u7684\u5144\u5f1fShahzad Ali\u548c31\u5c81\u7684Abdul Musavir--\u5728\u4e00\u6b21\u8087\u4e8b\u9003\u9038\u4e8b\u4ef6\u4e2d\u4e27\u751f\uff0c\u5f53\u65f6\u4ed6\u4eec\u6b63\u8bd5\u56fe\u4fdd\u62a4\u81ea\u5df1\u7684\u793e\u533a\u514d\u53d7\u66b4\u5f92\u548c\u62a2\u52ab\u8005\u7684\u4f24\u5bb3\u3002[57]2012\u5e744\u670819\u65e5\uff0c\u5728\u4f2f\u660e\u7ff0\u7687\u5bb6\u6cd5\u9662\u5bf9\u5f17\u6d1b\u514b\u65af\u6cd5\u5b98\u8fdb\u884c\u4e86\u5bf98\u540d\u7537\u5b50\u7684\u5ba1\u5224\uff0c\u4ed6\u4eec\u6bcf\u4eba\u88ab\u63a7\u72af\u67093\u9879\u8c0b\u6740\u7f6a\uff1b\u966a\u5ba1\u56e2\u5ba3\u5224\u6240\u6709\u6307\u63a7\u7684\u6240\u6709\u88ab\u544a\u65e0\u7f6a\u3002[60][font=\u5b8b\u4f53]\u3002\n68\u5c81\u7537\u5b50\u7406\u67e5\u5fb7\u00b7\u66fc\u5b81\u987f\u00b7\u9c8d\u65af(Richard Mannington Bowes)\u57288\u67088\u65e5\u665a\u8bd5\u56fe\u6251\u706d\u4f0a\u5cad\u5783\u573e\u7bb1\u5927\u706b\u65f6\u906d\u5230\u88ad\u51fb\uff0c\u4e8e8\u670811\u65e5\u6b7b\u4ea1\u3002[61][61]\u3002\n2011\u5e748\u67088\u65e5\uff0cBowes\u5728\u8bd5\u56fe\u6251\u706d\u6625\u6865\u8def\u5de5\u4e1a\u5783\u573e\u6876\u5185\u6545\u610f\u7eb5\u706b\u65f6\u906d\u5230\u4e00\u7fa4\u66b4\u5f92\u7684\u88ad\u51fb\u3002\u8fd9\u6b21\u88ad\u51fb\u9020\u6210\u4e86\u4e25\u91cd\u7684\u5934\u90e8\u53d7\u4f24\uff0c\u5bfc\u81f4\u660f\u8ff7\u3002\u8fd9\u8d77\u88ad\u51fb\u4e8b\u4ef6\u88ab\u95ed\u8def\u7535\u89c6\u6355\u6349\u5230\uff0c\u636e\u62a5\u9053\uff0c\u88ab\u6307\u63a7\u7684\u88ad\u51fb\u8005\u7684\u540c\u4f19\u7528\u624b\u673a\u62cd\u6444\u4e86\u8fd9\u4e00\u8fc7\u7a0b\u3002\u51e0\u540d\u8b66\u5bdf\u76ee\u7779\u4e86\u5bf9\u9c8d\u65af\u7684\u88ad\u51fb\uff0c\u4f46\u7531\u4e8e\u66b4\u5f92\u7684\u6570\u91cf\uff0c\u4ed6\u4eec\u65e0\u6cd5\u5e2e\u52a9\u4ed6\uff0c\u76f4\u5230\u9632\u66b4\u961f\u8b66\u5bdf\u5728\u88ab\u88ad\u51fb\u5230\u8fbe\u9c8d\u65af\u65f6\u5c06\u66b4\u5f92\u51fb\u9000\u3002\u5f53\u533b\u62a4\u4eba\u5458\u5230\u8fbe\u65f6\uff0c\u4e00\u961f\u8b66\u5bdf\u968f\u540e\u963b\u6b62\u4e86\u66b4\u5f92\u3002\u9c8d\u65af\u7684\u94b1\u5305\u548c\u624b\u673a\u90fd\u88ab\u5077\u4e86\uff0c\u8b66\u65b9\u5f88\u96be\u786e\u8ba4\u4ed6\u7684\u8eab\u4efd\u3002\u4ed6\u4e8e2011\u5e748\u670811\u65e5\u5728\u5723\u739b\u4e3d\u533b\u9662\u56e0\u4f24\u53bb\u4e16\uff0c\u6b64\u524d\u4ed6\u88ab\u64a4\u9664\u4e86\u751f\u547d\u652f\u6301\u7cfb\u7edf\u3002[62][\u4e2d\u82f1\u6587\u5bf9\u7167]\u3002\n\u4eba\u4eec\u5411\u9c8d\u65af\u81f4\u656c\uff0c\u5305\u62ec\u4f0a\u4ee4\u5e02\u8bae\u4f1a\uff0c\u4ed6\u5728\u5e02\u653f\u5385\u964d\u534a\u65d7\uff0c\u5e76\u5ba3\u5e03\u4ee5\u4ed6\u7684\u540d\u4e49\u542f\u52a8\u4e00\u9879\u6551\u6d4e\u57fa\u91d1\uff0c[63]\uff0c\u4ee5\u53ca\u5f53\u65f6\u7684\u4f26\u6566\u5e02\u957f\u9c8d\u91cc\u65af\u00b7\u7ea6\u7ff0\u900a(Boris Johnson)\uff0c\u4ed6\u79f0\u9c8d\u5c14\u65af\u4e3a\u82f1\u96c4\u3002[64]\u3002\n\u4e00\u540d16\u5c81\u7684\u7537\u5b50\uff0c\u540e\u6765\u88ab\u547d\u540d\u4e3aDarrell Desuze\uff0c[65]\u4f4f\u5728\u8c6a\u6069\u65af\u6d1b\uff0c\u88ab\u63a7\u8c0b\u6740\u9c8d\u65af\u3001\u66b4\u529b\u9a9a\u4e71\u548c\u56db\u6b21\u5165\u5ba4\u76d7\u7a83\u3002[66]\u4ed6\u4e8e2011\u5e748\u670816\u65e5\u5728\u514b\u7f57\u4f0a\u767b\u5730\u65b9\u6cd5\u9662\u51fa\u5ead\uff0c\u5728\u90a3\u91cc\u4ed6\u88ab\u8fd8\u62bc\u5019\u5ba1\uff0c\u76f4\u52302011\u5e748\u670818\u65e5\u5728\u4e2d\u592e\u5211\u4e8b\u6cd5\u9662\u51fa\u5ead\u3002[66]\u4ed631\u5c81\u7684\u6bcd\u4eb2\u62c9\u7ef4\u5c3c\u4e9a\u00b7\u5fb7\u82cf\u6cfd(Lavinia Desuze)[68]\u88ab\u63a7\u59a8\u788d\u53f8\u6cd5\u516c\u6b63\u3002[66]2012\u5e743\u670812\u65e5\uff0c\u8fbe\u96f7\u5c14\u00b7\u5fb7\u82cf\u6cfd\u5728\u5185\u4f26\u6566\u5211\u4e8b\u6cd5\u9662\u627f\u8ba4\u72af\u6709\u8fc7\u5931\u6740\u4eba\u7f6a\uff0c\u6b64\u524d\u4ed6\u66fe\u627f\u8ba4\u72af\u6709\u5165\u5ba4\u884c\u7a83\u548c\u66b4\u529b\u9a9a\u4e71\u7f6a\u3002[69]\u7b2c\u4e8c\u5929\uff0c\u738b\u5ba4\u64a4\u9500\u4e86\u5bf9\u4ed6\u7684\u8c0b\u6740\u6307\u63a7\u3002[70]\u5728\u5185\u4f26\u6566\u5211\u4e8b\u6cd5\u9662\u5bf9\u6851\u5fb7\u65af\u6cd5\u5b98\u548c\u966a\u5ba1\u56e2\u8fdb\u884c\u5ba1\u5224\u540e\uff0c\u62c9\u7ef4\u5c3c\u5a05\u00b7\u5fb7\u82cf\u6cfd(Lavinia Desuze)\u88ab\u5224\u59a8\u788d\u53f8\u6cd5\u516c\u6b63\uff0c\u56e0\u4e3a\u5979\u9500\u6bc1\u4e86\u513f\u5b50\u5728\u9c8d\u65af\u6b7b\u4ea1\u5f53\u5929\u7a7f\u7684\u8863\u670d\u3002[71]2012\u5e744\u670817\u65e5\uff0c\u6851\u5fb7\u65af\u6cd5\u5b98\u5224\u5904Darrell Desuze 8\u5e74\u76d1\u7981\uff0cLavinia Desuze 18\u4e2a\u6708\u76d1\u7981\u3002[72][font=\u5b8b\u4f53]\n\u5728\u4f26\u6566\uff0c\u4ece\u5468\u4e00\u4e0b\u5348\u5230\u5468\u4e8c\u51cc\u6668\uff0c\u670914\u4eba\u88ab\u66b4\u5f92\u6253\u4f24\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u540d\u5728\u54c8\u514b\u5c3c\u9acb\u90e8\u9aa8\u6298\u768475\u5c81\u5987\u5973\u3002[3]\u3002\n\u5728\u4f26\u6566\u4e1c\u90e8\u7684\u5df4\u91d1\uff0c20\u5c81\u7684\u9a6c\u6765\u897f\u4e9a\u5b66\u751f\u963f\u4ec0\u62c9\u592b\u00b7\u7f57\u65af\u5229(Ashraf Rossli)\u906d\u5230\u6bb4\u6253\uff0c\u7136\u540e\u88ab\u62a2\u52ab\u4e24\u6b21\uff0c\u62a2\u52ab\u8005\u6e05\u7a7a\u4e86\u4ed6\u7684\u80cc\u5305\u3002\u7b2c\u4e8c\u6b21\u62a2\u52ab\u7684\u89c6\u9891\u88ab\u4e0a\u4f20\u5230YouTube\u4e0a\uff0c\u89c6\u9891\u4f3c\u4e4e\u663e\u793a\u7b2c\u4e8c\u7ec4\u62a2\u52ab\u8005\u5047\u88c5\u5e2e\u52a9\u4ed6\uff0c\u7136\u540e\u7ee7\u7eed\u6d17\u52ab\u4ed6\u7684\u80cc\u5305\u3002\u4ed6\u4e0b\u5df4\u9aa8\u6298\uff0c\u9700\u8981\u52a8\u624b\u672f\u3002[4][4]2012\u5e743\u67082\u65e5\uff0c\u4e24\u540d\u7537\u5b50\uff0c\u4f0a\u5c14\u798f\u5fb7\u7684John Kafunda\u548cRomford\u7684Reess Donovan\u88ab\u4f0d\u5fb7\u683c\u6797\u5211\u4e8b\u6cd5\u9662\u7684\u966a\u5ba1\u56e2\u88c1\u5b9a\u72af\u6709\u62a2\u52ab\u7f57\u65af\u5229\u7f6a\u548c\u66b4\u529b\u9a9a\u4e71\u7f6a\u3002[74]\u4e0a\u8bc9\u6cd5\u9662\u4e8e2012\u5e7411\u670829\u65e5\u64a4\u9500\u4e86\u5224\u51b3\u3002[75][75]\u3002\n\u5728\u4f26\u6566\u4e1c\u90e8\u7684\u6e05\u798f\u5fb7\uff0c\u4e09\u540d\u8b66\u5bdf\u88ab\u4e00\u7fa4\u62a2\u52ab\u6e05\u798f\u5fb7\u5c71\u8def\u4e0a\u7684\u8d35\u65cf\u5546\u5e97\u7684\u4eba\u7528\u4f5c\u9003\u8dd1\u8f66\u8f86\u7684\u6c7d\u8f66\u649e\u5012\u3002\u5176\u4e2d\u4e24\u540d\u8b66\u5b98\u53d7\u4e86\u91cd\u4f24\uff0c\u88ab\u9001\u5f80\u533b\u9662\u3002[76][76]\u3002\n\u603b\u5171\u6709186\u540d\u8b66\u5bdf\u53d7\u4f24[6]\uff0c\u8fd8\u67093\u540d\u8b66\u5bdf\u793e\u533a\u652f\u6301\u4eba\u5458\u53d7\u4f24\u3002[5]\u636e\u62a5\u9053\uff0c\u8fd8\u6709\u4e94\u53ea\u8b66\u72ac\u53d7\u4f24\u3002[77][font=\u5b8b\u4f53]\u3002\n\u4f26\u6566\u6d88\u9632\u961f\u5904\u7406\u4e86100\u591a\u8d77\u9a9a\u4e71\u5f15\u53d1\u7684\u4e25\u91cd\u706b\u707e\uff0c\u9020\u621010\u540d\u6d88\u9632\u5458\u53d7\u4f24\u3002LFB\u8fd8\u62a5\u544a\u8bf4\uff0c\u5b83\u7684\u516b\u8f86\u6d88\u9632\u8f66\u7684\u6321\u98ce\u73bb\u7483\u88ab\u7838\u788e\uff0c\u4e24\u8f86\u6d88\u9632\u8f66\u906d\u5230\u88ad\u51fb\u3002[78][78]\u3002\n\u8f66\u8f86\u3001\u623f\u5c4b\u548c\u5546\u5e97\u906d\u5230\u88ad\u51fb\u5e76\u88ab\u7eb5\u706b\u3002\u81f3\u5c11\u6709100\u4e2a\u5bb6\u5ead\u88ab\u8ba4\u4e3a\u56e0\u7eb5\u706b\u548c\u62a2\u52ab\u800c\u65e0\u5bb6\u53ef\u5f52\u3002[79]\u5e97\u4e3b\u4f30\u8ba1\u4ed6\u4eec\u5728\u6258\u7279\u7eb3\u59c6\u9ed1\u5c14\u548c\u6258\u7279\u7eb3\u59c6\u5206\u5e97\u7684\u635f\u5931\u4e3a\u6570\u767e\u4e07\u82f1\u9551\u3002[80]\u9a9a\u4e71\u9020\u6210\u4e86\u9057\u4ea7\u5efa\u7b51\u4e0d\u53ef\u633d\u56de\u7684\u635f\u5931\u3002[81]\u636e\u4f30\u8ba1\uff0c\u96f6\u552e\u5546\u81f3\u5c11\u635f\u5931\u4e8630,000\u4e2a\u4ea4\u6613\u5c0f\u65f6\u3002[82][82]\u3002\n\u82f1\u56fd\u4fdd\u9669\u534f\u4f1a(Association Of British Insurers)\u8868\u793a\uff0c\u4ed6\u4eec\u9884\u8ba1\u8be5\u884c\u4e1a\u7684\u8d54\u4ed8\u91d1\u989d\u5c06\u8d85\u8fc72\u4ebfGB\u3002[83]\u4f26\u6566\u7684\u4f30\u8ba1\u635f\u5931\u7ea6\u4e3a1\u4ebf\u52a0\u5143\u3002[84][\u4e2d\u82f1\u6587\u5bf9\u7167]\u3002\n2011\u5e748\u67088\u65e5\uff0c\u4f4d\u4e8e\u6069\u83f2\u5c14\u5fb7Enfield Lock\u7684\u7d22\u5c3cDADC\u4ed3\u5e93\u88ab\u5927\u706b\u70e7\u6bc1\uff0c\u8be5\u4ed3\u5e93\u4e5f\u662f\u72ec\u7acb\u97f3\u4e50\u53d1\u884c\u5546PIAS\u5a31\u4e50\u96c6\u56e2\u7684\u4e3b\u8981\u5206\u9500\u4e2d\u5fc3\u3002[85]\u6700\u521d\uff0c\u7531\u4e8e\u4e22\u5931\u4e86\u6570\u767e\u4e07\u4ef6\u5e93\u5b58\uff0c\u5305\u62ecPIAS\u7684\u5927\u90e8\u5206\u5e93\u5b58\uff0c\u4eba\u4eec\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u82f1\u56fd\u72ec\u7acb\u97f3\u4e50\u4ea7\u4e1a\u9020\u6210\u957f\u671f\u635f\u5bb3\u3002[85]2011\u5e748\u670818\u65e5\uff0cPIA\u786e\u8ba4\u5176\u4e1a\u52a1\u5df2\u6062\u590d\u6b63\u5e38\u3002[90]2011\u5e748\u670811\u65e5\uff0c\u4f26\u6566\u8b66\u65b9\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u902e\u6355\u4e86\u4e09\u540d\u4e0e\u4ed3\u5e93\u706b\u707e\u6709\u5173\u7684\u9752\u5c11\u5e74\u3002[91][font=\u5b8b\u4f53]\n\u82f1\u56fd\u201c\u91d1\u878d\u65f6\u62a5\u201d\u62a5\u9053\u79f0\uff0c\u4e00\u9879\u5206\u6790\u663e\u793a\uff0c\u7531\u4e8e\u82f1\u56fd\u8857\u5934\u7684\u62a2\u52ab\u548c\u9a9a\u4e71\uff0c\u5f53\u57304.8\u4e07\u5bb6\u4f01\u4e1a--\u5546\u5e97\u3001\u9910\u9986\u3001\u9152\u5427\u548c\u4ff1\u4e50\u90e8--\u906d\u53d7\u4e86\u7ecf\u6d4e\u635f\u5931\u3002[92][font=\u5b8b\u4f53]\u3002\n2011\u5e748\u6708\uff0c\u4e00\u540d15\u5c81\u7684\u5973\u5b69\u88ab\u63a7\u5728\u9a9a\u4e71\u53d1\u751f\u65f6\u5f3a\u5978\u4e86\u4e00\u540d13\u5c81\u7684\u5973\u5b69\u3002\u68c0\u65b9\u79f0\uff0c\u8fd9\u8d77\u4e8b\u4ef6\u5728\u5730\u7406\u4e0a\u4e0e\u9a9a\u4e71\u5f88\u63a5\u8fd1\u3002[93][font=\u5b8b\u4f53]\u3002\n20\u5c81\u7684\u5b66\u751fAshraf Haziq\u5728\u5df4\u91d1\u7684\u7687\u540e\u5927\u9053\u4e0a\u9a91\u8f66\u65f6\u906d\u5230\u88ad\u51fb\u3002\u68c0\u65b9\u8868\u793a\uff0c\u53d7\u5bb3\u8005\u7684\u9762\u90e8\u662f\u88ab100\u540d\u5e74\u8f7b\u4eba\u4e2d\u7684\u4e00\u4eba\u62f3\u6253\u811a\u8e22\u7684\u3002\u4ed6\u7684\u81ea\u884c\u8f66\u3001PlayStation\u4fbf\u643a\u6e38\u620f\u673a\u548c\u624b\u673a\u90fd\u88ab\u5077\u4e86\u3002[93]2011\u5e749\u6708\uff0c24\u5c81\u7684\u91cc\u65af\u00b7\u591a\u8bfa\u4e07(Reess Donovan)\u88ab\u6307\u63a7\u72af\u6709\u62a2\u52ab\u7f6a\u3002\u540c\u6708\uff0c\u4e00\u540d17\u5c81\u7684\u5c11\u5e74\u5728\u6cd5\u5ead\u4e0a\u88ab\u63a7\u7528\u65e0\u7aef\u62f3\u5934\u6253\u788e\u4e86\u53d7\u5bb3\u8005\u7684\u4e0b\u5df4\u3002[94]2012\u5e742\u6708\uff0c\u7ea6\u7ff0\u00b7\u5361\u82ac\u8fbe\u548c\u91cc\u65af\u00b7\u591a\u8bfa\u4e07\u5728\u88ab\u6444\u50cf\u673a\u53d1\u73b0\u5047\u88c5\u5e2e\u52a9\u4ed6\u540e\uff0c\u88ab\u5224\u4ece\u7f57\u65af\u5229\u5077\u7a83\u3002[95]\u5728\u4e00\u6bb5\u653b\u51fb\u89c6\u9891\u8d70\u7ea2\u540e\uff0c\u7d22\u5c3c\u63d0\u51fa\u66f4\u6362\u4ed6\u7684PSP\uff0cNamco Bandai\u7ed9\u4ed6\u5bc4\u6765\u4e86\u4e00\u5957\u6e38\u620f\u3002[96][97][97]\u3002\n\u56db\u8f86\u4f26\u6566\u516c\u4ea4\u8f66\u5728\u9a9a\u4e71\u4e2d\u88ab\u7eb5\u706b(\u5176\u4e2d\u4e24\u8f86\u88ab\u5b8c\u5168\u70e7\u6bc1\uff0c\u4e00\u8f86\u4e25\u91cd\u53d7\u635f\uff0c\u4f46\u968f\u540e\u5f97\u5230\u4fee\u590d\uff0c\u4e00\u8f86\u53d7\u635f\u8f83\u8f7b\uff0c\u4e5f\u5f97\u5230\u4e86\u4fee\u590d)\uff0c\u5176\u4ed6\u516c\u4ea4\u8f66\u88ab\u6bc1\u635f\uff0c\u7a97\u6237\u7834\u788e\uff0c\u5176\u4ed6\u8f7b\u5fae\u635f\u574f\u3002\n8\u67089\u65e5\uff0c\u514b\u7f57\u4f0a\u767b\u7684\u6709\u8f68\u7535\u8f66\u56e0\u6cbf\u9014\u53d7\u635f\u800c\u90e8\u5206\u5173\u95ed\u3002[98]\u4f26\u6566\u3001\u4f26\u6566\u5730\u9762\u548c\u4f26\u6566\u5730\u94c1\u7684\u8fd0\u8f93\u5173\u95ed\u4e86\u5df4\u91d1\u3001\u4f69\u5361\u59c6\u9ea6\u7530\u3001\u54c8\u7f57-\u5c71\u4e0a\u548c\u54c8\u514b\u5c3c\u4e2d\u592e\u8f66\u7ad9\u3002\u706b\u8f66\u8fd0\u8425\u516c\u53f8\u5357\u65b9\u516c\u53f8\u540e\u6765\u5ba3\u5e03\uff0c\u706b\u8f66\u5728\u4f26\u6566\u5357\u90e8\u7684\u8bb8\u591a\u8f66\u7ad9\u6ca1\u6709\u505c\u9760\u3002[98]\u5168\u56fd\u5feb\u8f66\u505c\u6b62\u4e86\u5728\u4f2f\u660e\u7ff0\u5730\u533a(\u4f46\u4e0d\u5305\u62ec\u4f2f\u660e\u7ff0\u957f\u9014\u6c7d\u8f66\u7ad9\u672c\u8eab)\u548c\u66fc\u5f7b\u65af\u7279(\u4f46\u4e0d\u5305\u62ec\u66fc\u5f7b\u65af\u7279\u673a\u573a)\u7684\u4f0d\u5c14\u5f17\u6c49\u666e\u987f\u548c\u90ca\u533a\u505c\u9760\u7ad9\u7684\u670d\u52a1\u3002[99][99]\u3002\n\u539f\u5b9a\u4e8e8\u67089\u65e5\u548c10\u65e5\u4e3e\u884c\u7684\u4e94\u573a\u8db3\u7403\u8054\u8d5b\u676f\u6bd4\u8d5b\u5728\u8b66\u65b9\u56e0\u9a9a\u4e71\u800c\u63d0\u51fa\u8981\u6c42\u540e\u88ab\u63a8\u8fdf\u3002\u5e03\u91cc\u65af\u6258\u5c14\u57ce\u3001\u5e03\u91cc\u65af\u6258\u5c14\u6d41\u6d6a\u8005\u961f\u3001\u67e5\u5c14\u987f\u7ade\u6280\u3001\u6c34\u6676\u5bab\u548c\u897f\u6c49\u59c6\u8054\u961f\u7684\u6bd4\u8d5b\u90fd\u88ab\u63a8\u8fdf\u4e86\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u4f4d\u4e8e\u8ddd\u79bb\u53d1\u751f\u8fc7\u4e00\u4e9b\u6700\u4e25\u91cd\u9a9a\u4e71\u7684\u5730\u533a\u5f88\u8fd1\u7684\u5730\u65b9\u3002[101]\u5370\u5ea6\u548c\u82f1\u683c\u5170\u5728\u4f2f\u660e\u7ff0\u57c3\u5947\u5df4\u65af\u987f\u4e3e\u884c\u7684\u7b2c\u4e09\u573a\u677f\u7403\u6d4b\u8bd5\u8d5b\u4e5f\u5b58\u5728\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u6bd4\u8d5b\u8fd8\u662f\u8fdb\u884c\u4e86\u3002[103][104]\u3002\n\u539f\u5b9a\u4e8e8\u670810\u65e5\u5728\u6e29\u5e03\u5229\u4f53\u80b2\u573a\u4e3e\u884c\u7684\u82f1\u683c\u5170\u548c\u8377\u5170\u4e4b\u95f4\u7684\u56fd\u9645\u8db3\u7403\u53cb\u8c0a\u8d5b\u88ab\u53d6\u6d88\uff0c\u539f\u5b9a8\u67089\u65e5\u5728\u6c83\u7279\u798f\u5fb7\u7ef4\u5361\u62c9\u5947\u8def\u4e3e\u884c\u7684\u52a0\u7eb3\u548c\u5c3c\u65e5\u5229\u4e9a\u4e4b\u95f4\u7684\u56fd\u9645\u53cb\u8c0a\u8d5b\u4e5f\u88ab\u53d6\u6d88\u3002[105][106]\u3002\n\u6258\u7279\u7eb3\u59c6\u70ed\u523a2011-12\u8d5b\u5b63\u9996\u573a\u5bf9\u9635\u57c3\u5f17\u987f\u7684\u6bd4\u8d5b\u88ab\u63a8\u8fdf\u3002[107]\u4e59\u7ea7\u8054\u8d5b\n..", "note_en": "Jump to navigation  Jump to search  The  2011 England riots, more widely known as the  London Riots, were a series of  riots between 6 and 11 August 2011, when thousands of people rioted in cities and towns across  England, which saw  looting,  arson, and mass deployment of police, and resulted in the deaths of five people.\n Protests started in  Tottenham,  London, following the  death of Mark Duggan, a local man who was shot dead by police on 4 August.  [9] Several violent clashes with police ensued, along with the destruction of police vehicles, a  double-decker bus and many homes and businesses, thus rapidly gaining attention from the media. Overnight, looting took place in  Tottenham Hale retail park and nearby  Wood Green. The following days saw similar scenes in other parts of London, with the worst rioting taking place in  Hackney,  Brixton,  Walthamstow,  Peckham,  Enfield,  Battersea,  Croydon,  Ealing,  Barking,  Woolwich,  Lewisham and  East Ham.\n From 8 to 10 August, other towns and cities in England (including  Birmingham,  Bristol,  Coventry,  Derby,  Leicester,  Liverpool,  Manchester,  Nottingham,  West Bromwich, and  Wolverhampton) saw what was described by the media as &#34;copycat violence&#34;, with  social media playing a role. By 10 August, more than 3,000 arrests had been made across England, with more than 1,000 people issued with criminal charges for various offences related to the riots.  [10] Initially, courts sat for extended hours. There were a total of 3,443 crimes across London that were linked to the disorder.  [11] Along with the five deaths, at least 16 others were injured  as a direct result of related violent acts. An estimated \u00a3200 million worth of property damage was incurred, and local economic activity \u2013 which in many cases was already struggling due to  the recession \u2013 was significantly compromised.\n The riots have generated significant ongoing debate among political, social, and academic figures about the causes and context in which they happened. Attributions for the rioters&#39; behaviour include social factors such as racial tension, class tension, economic decline, and the unemployment that decline had brought.  [6]  [10]  [12]  [13]\n     On 4 August 2011, a police officer shot and killed 29-year-old Mark Duggan during an intelligence-led, targeted vehicle stop procedure on the Ferry Lane bridge next to  Tottenham Hale station.  [14]  [15]  [16]  [17] The  Independent Police Complaints Commission (IPCC) said that the planned arrest was part of  Operation Trident, which at that time investigated gun crime in the  black community.  [13] The incident had been referred to the IPCC,  [14] which is standard practice if death or serious injury follows police contact.  [18]\n After the shooting, the media widely reported that a bullet was found embedded in a police radio, implying that Duggan fired on the police.  [15] Friends and relatives of Duggan said that he was unarmed. The police later revealed that initial  ballistics tests on the bullet recovered from the police radio indicate that it was a &#34;very distinct&#34; police issue  hollow-point bullet.  [15]  [19] The IPCC later stated that a loaded  Bruni BBM  blank-firing pistol, converted to fire live ammunition, was recovered from the scene.  [20]  [21] It was wrapped in a sock, and there was no evidence that it had been fired.  [22]\n On 13 August, the IPCC stated that Duggan did not open fire: &#34;It seems possible that we may have verbally led journalists to [wrongly] believe that shots were exchanged.&#34; The bullet that had lodged in an officer&#39;s radio is believed to have been an  overpenetration, having passed through Duggan&#39;s body.  [23]  [24]\n At lunchtime on 6 August, a meeting was called by police between local community leaders, councillors and members of police advisory groups. In this meeting, police were warned several times that there could possibly be another riot similar to the  Broadwater Farm riot of 1985 if local concerns regarding the death were not addressed.  [25]  [26]\n On 8 January 2014, a jury at the  Royal Courts of Justice concluded that Duggan was  lawfully killed.\n  On Saturday 6 August, a protest was held, initially peacefully, beginning at  Broadwater Farm and finishing at Tottenham police station.  [27] The protest was organised by friends and relatives of Duggan to demand justice for the family.  [13]  [28]  [29] The group of some 300 people demanded that a senior local police officer come out to speak to them. When Chief Inspector Ade Adelekan arrived, he was met with boos and cries of &#34;murderer&#34;, &#34; Uncle Tom&#34; and &#34; coconut&#34;.  [30]The crowd stayed in front of the police station hours longer than they originally planned because they were not satisfied with the seniority of the officers available at the time. Rumours that a 16-year-old girl had sustained injuries after attacking police with a champagne bottle began circulating on social media. To date, the girl remains unidentified and the report unconfirmed. However the rumour alone was sufficient to further fuel tensions in the area.  [12]  [31]  [32]\n    A peaceful march on Saturday 6 August in Tottenham was followed by rioting and looting, first in Tottenham and later in Tottenham Hale Retail Park.  Rioting occurred shortly after about 120 people marched from the Broadwater Farm estate to Tottenham Police Station via the High Road.  [34]\n The spread of news and rumours about the previous evening&#39;s disturbances in Tottenham sparked riots during the night of Sunday 7 August in the London districts of Brixton, Enfield, Islington and  Wood Green and in Oxford Circus in the centre of London.\n  The morning of Monday 8 August was quiet, but by evening, areas across London were affected by widespread looting, arson and violence, with significant outbreaks in parts of Battersea, Brixton, Bromley, Camden, Croydon, Ealing, East Ham, Hackney, Harrow, Lewisham, Peckham, Stratford, Waltham Forest, Woolwich, and Wood Green. A man was found shot in Croydon and died later in hospital. Another man who had been assaulted in Ealing died in hospital on Thursday 11 August.\n   Following a greatly increased police presence, London was quiet on Tuesday 9 August, but rioting continued in Nottingham and Birmingham (where, according to the police account, eleven shots were fired at police, including at a police helicopter, and petrol bombs thrown at officers  [36]) and spread to Leicester, parts of the  West Midlands and to parts of  Greater Manchester and  Merseyside in the north-west of England.  On Wednesday 10 August, London remained quiet while hundreds of arrests were being made by the police.\n Three men were killed in Birmingham in a hit-and-run incident related to the disturbances. Looting and violence continued in two locations around Manchester and Liverpool.\n   Throughout the rioting, many of the rioters failed to cover their faces. Some posed for pictures with stolen goods, posting them on social-networking sites.  [37]\n Although London employs  CCTV cameras to monitor crime and large events, reports indicate that citizen footage contributed more to capturing looters in action than the police force.  [38] Beyond the CCTV, looters were filmed and photographed with their faces visible. Police forces and investigators used websites like  Flickr to find galleries of the looters to help solve and prevent cases of vandalism and further damage.  Facebook pages were also created to identify looters.  [39]\n  Several interactive maps were implemented in the  Google Maps website that showed satellite views of what was happening in the streets during the rioting. James Cridland, the managing director of the free media resources, created a Google Map that tracked verified locations of rioting. Channel 4 News also had similar maps that progressively tracked the damage in the streets as well.  [40] News channels also were able to utilise this public service to capture live footage on the streets and inform citizens of dangerous or crowded areas.\n   There were reports that the  BlackBerry Messenger service was used by looters to organise their activities, and that inflammatory and inaccurate accounts of Mark Duggan&#39;s killing on social media sites may have incited disturbances.  [41]  [42]  [43] One of the many messages shared between users was the following:\n &#34;Everyone in edmonton enfield wood green everywhere in north link up at enfield town station at 4 o clock sharp!!!!,&#34; it began. &#34;Start leaving ur yards n linking up with your ni**as. F**k da feds, bring your ballys and your bags trollys, cars vans, hammers the lot!!&#34;  [44]\n  Research in Motion assisted British police in tracking rioters who used BBM, stating, &#34;We comply with the  Regulation of Investigatory Powers Act and co-operate fully with the Home Office and UK police forces.&#34;  [45]\n Increased connectivity among individuals has led to a greater ability to organise and execute massive gatherings.  [46] This has not occurred only with the riots in England, but with other collective gatherings such as the  Arab Spring and the  Egyptian revolution of 2011.  [47]\n  Much like BBM, activity on social media shaped the London riots. During the Tottenham riots of 1985, citizens had to head into a public place to voice their message.  [48] Yet, with access to  Twitter as a communication medium, social media was used to rapidly spread messages of the riots.  [48]\n Radio 4 criticised Twitter&#39;s contribution to the riots through greed and criminality.  [49]  The Daily Telegraph described Twitter as being an outlet for promoting gang violence.  [49] Evidence shows that Twitter is powerful because tweets of individuals were inspired by news content.  [50] However, an article in  Time magazine suggested BlackBerry Messenger was more to blame.  [48]\n During the riots, Twitter accounted for four out of every 170 UK Internet visits on Monday 8 August. In addition, citizens also used Twitter to band together, after the destruction.The aftermath of the riots resulted in a disrupted city, yet Twitter was further used to maintain peace, with hashtags including &#34;#riotcleanup&#34;.  [50] Evidence shows that people were tweeting and re-tweeting news related to the riots, not original content.  [50]\n  Other than BlackBerry Messenger and social networking sites, mobile phone operators T-Mobile and Orange prioritised police requests for information about the phones that were used to plan the riots that hit British cities. Under the  Regulation of Investigatory Powers Act, phone companies were required to hand over data about the locations calls were made from, the owners of phones, and lists of calls made to and from a particular handset.  [45]\n     Trevor Ellis, a 26-year-old from  Brixton Hill, died following a shooting in  Croydon,  South London, on 8 August.  [51]  [52]  [53] His family denied reports that Ellis, who had come from the Brixton area to Croydon with a group of friends, had been involved in looting.  [54]  [55] By 16 December 2013, 13 people had been arrested in connection with the murder. All were later bailed and then released without action. On 16 December, the eve of Ellis&#39;s birthday, detectives opened up a fresh appeal into the murder, asking for witnesses to come forward. As of 2020, no one has been charged.  [56]\n  On 10 August, in  Winson Green, Birmingham, three men \u2013 Haroon Jahan, 21, and brothers Shahzad Ali, 30, and Abdul Musavir, 31 \u2013 were killed in a  hit-and-run incident while attempting to protect their neighbourhood from rioters and looters.  [57]  [58]  [59] On 19 April 2012, a trial of eight men, each  indicted on three counts of murder, was held in the Crown Court at Birmingham before Mr Justice Flaux; the jury acquitted all of the defendants on all charges.  [60]\n   A 68-year-old man, Richard Mannington Bowes, died on 11 August after he was attacked while attempting to stamp out a litter-bin fire in  Ealing on the evening of 8 August.  [61]\n Bowes was attacked by members of a mob on 8 August 2011, while attempting to extinguish a fire that had been  deliberately started in industrial bins on Spring Bridge Road. The attack inflicted severe head injuries which resulted in a coma. The assault was caught on  CCTV and reportedly filmed on mobile phones by associates of the alleged assailant. [   citation needed] The attack on Bowes was witnessed by several police officers, but due to the number of rioters they were unable to come to his aid until riot squad officers pushed back the rioters while being attacked to reach Bowes. A line of officers then held back the rioters as paramedics arrived. Bowes&#39; wallet and phone had been stolen, and police faced difficulty in identifying him. He died of his injuries at  St Mary&#39;s Hospital on 11 August 2011 after being removed from life support.  [62]\n Many tributes were paid to Bowes, including Ealing Council, who flew the  Union Flag at half-mast over its town hall and announced the launch of a relief fund in his name,  [63] and then- Mayor of London  Boris Johnson, who described him as a hero.  [64]\n A sixteen-year-old male, later named as Darrell Desuze,  [65] who lives in  Hounslow was charged with the murder of Bowes, violent disorder and four burglaries.  [66]  [67] He appeared at  Croydon  Magistrates&#39; Court on 16 August 2011, where he was remanded in custody until his appearance at the  Central Criminal Court on 18 August 2011.  [66] His 31-year-old mother, Lavinia Desuze,  [68] was charged with perverting the course of justice.  [66] On 12 March 2012 at the Crown Court at Inner London, Darrel Desuze pleaded guilty to manslaughter, after previously pleading guilty to burglary and violent disorder.  [69] The following day the Crown withdrew the murder charge against him.  [70] After a trial at the Crown Court at Inner London before  Mr Justice Saunders and a jury, Lavinia Desuze was convicted of perverting the course of justice after she destroyed the clothing her son wore on the day of Bowes&#39; death.  [71] On 17 April 2012, Mr Justice Saunders sentenced Darrell Desuze to detention for a term of eight years, and Lavinia Desuze to imprisonment for eighteen months.  [72]\n   In London, between Monday afternoon and the early hours of Tuesday, 14 people were injured by rioters.These included a 75-year-old woman who suffered a broken hip in  Hackney.  [3]\n In  Barking,  East London, 20-year-old  Malaysian student Ashraf Rossli was beaten and then robbed twice by looters emptying his rucksack. Footage of the second mugging, which appears to show the second set of muggers pretend to help him then proceed to ransack his rucksack, was uploaded onto YouTube. He suffered a broken jaw, requiring surgery.  [4]  [73] On 2 March 2012, two men, John Kafunda of  Ilford and Reece Donovan of  Romford, were found guilty of the robbery of Rossli and also violent disorder by a jury at Wood Green Crown Court.  [74] The convictions were quashed by the Court of Appeal on 29 November 2012.  [75]\n In  Chingford,  East London, three police officers were hit by a car used as a getaway vehicle by a group who looted the Aristocrat store on Chingford Mount Road. Two of the officers were seriously injured and taken to hospital.  [76]\n  In total, 186 police officers were injured  [6] as well as 3  Police Community Support Officers.  [5] Five police dogs were also reported injured.  [77]\n Ten firefighters were injured as the  London Fire Brigade dealt with over 100 serious fires caused by the disturbances. The LFB also reported that eight of its  fire engines had their windscreens smashed and that two  fire cars were attacked.  [78]\n  Vehicles, homes and shops were attacked and set alight. At least 100 families are thought to have been made homeless by arson and looting.  [79] Shopkeepers estimated the damages in their Tottenham Hale and Tottenham branches at several million pounds.  [80] The riots caused the irretrievable loss of heritage architecture.  [81] It was estimated that retailers lost at least 30,000 trading hours.  [82]\n  The Association of British Insurers said they expect the industry to pay out in excess of \u00a3200\u00a0million.  [83] Estimated losses in London were indicated to be in the region of \u00a3100m.  [84]\n  On 8 August 2011, a  Sony DADC warehouse in  Enfield at  Enfield Lock, which also acted as the primary distribution centre for  independent music distributor  PIAS Entertainment Group, was destroyed by fire.  [85]  [86] Initially, because millions of items of stock were lost, including most of PIAS&#39;s inventory, it was thought that long-term damage to the British independent music industry might result.  [85]  [87]  [88]  [89] On 18 August 2011, PIAS confirmed that their operations were back to normal.  [90] On 11 August 2011, London police reported that they had arrested three teenagers in connection with the warehouse fire.  [91]\n The  Financial Times reported that an analysis showed that 48,000 local businesses \u2013 shops, restaurants, pubs and clubs \u2013 had suffered financial losses as a result of the looting and rioting in English streets.  [92]\n  A 15-year-old was accused in August 2011 of raping a 13-year-old girl while the riots were taking place. The prosecution described the incident as being geographically &#34;close&#34; to the riots.  [93]\n Twenty-year-old student Ashraf Haziq was attacked while cycling along Queen&#39;s Road in  Barking. The prosecution said that the victim was punched in the face by one of a group of 100 youths. His bike,  PlayStation Portable and mobile phone were stolen.  [93] In September 2011, an accusation of robbery was made against 24-year-old Reece Donovan.The same month, a 17-year-old was accused in court of breaking the victim&#39;s jaw with an unprovoked punch.  [94] In February 2012 John Kafunda and Reece Donovan were convicted of stealing from Rossli, after being identified on camera pretending to help him.  [95]  Sony offered to replace his  PSP after a video of the attack became popular, and  Namco Bandai sent him a package of games.  [96]  [97]\n  Four London buses were set on fire during the riots (two of which were completely destroyed, one suffered serious damage but was subsequently repaired, and one suffered less serious damage and was also repaired) and other buses were defaced with broken windows and other minor damage.\n On 9 August, Croydon&#39;s  Tramlink was partly shut down due to damage inflicted along its route.  [98]  Transport for London,  London Overground and  London Underground shut Barking, Peckham Rye and Harrow-on-the-Hill and Hackney Central stations.The train operating company  Southern later announced that trains were not stopping at many stations in south London.  [98]  National Express Coaches stopped serving Wolverhampton and suburban stops in the Birmingham area (but not  Birmingham Coach Station itself) and Manchester (but not Manchester Airport).  [99]\n  Five  Football League Cup games due to be played on 9 and 10 August were postponed after requests from police due to the riots. The games at  Bristol City,  Bristol Rovers,  Charlton Athletic,  Crystal Palace and  West Ham United were all postponed, as they were all situated within a short distance of areas which had seen some of the worst disturbances.  [100]  [101]  [102] There was also uncertainty as to the  Third Test cricket match between  India and  England, at  Edgbaston in Birmingham, but the match was played.  [103]  [104]\n The international  football  friendly match between  England and the  Netherlands at  Wembley Stadium due to take place on 10 August was cancelled,  [101] as well as the international friendly between  Ghana and  Nigeria scheduled for 9 August at  Vicarage Road,  Watford.  [105]  [106]\n Tottenham Hotspur&#39;s opening game of the  2011\u201312 Premier League season against  Everton on 13 August was postponed.  [107]  [108] The League Two \n......", "posttime": "2020-06-02 07:52:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u56fd,england,\u9a9a\u4e71", "title": "2011\u5e74\u82f1\u56fd\u9a9a\u4e71", "title_en": "2011 England Riots", "transed": 1, "url": "https://en.wikipedia.org/wiki/2011_England_riots", "via": "", "real_tags": ["\u82f1\u56fd", "england", "\u9a9a\u4e71"]}, {"category": "", "categoryclass": "", "imagename": "d991ea195e84a9ab8fab51effd756c45.jpg", "infoid": 1004762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u65b0\uff0c\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f46\u67081\u65e5\u65e9\u4e0a06\uff1a15\uff1a\u6211\u4eec\u5728\u8fd9\u91cc\u5bf9\u5899\u7eb8\u5d29\u6e83\u95ee\u9898\u80cc\u540e\u7684\u53ef\u80fd\u539f\u56e0\u8fdb\u884c\u4e86\u6df1\u5165\u7684\u89e3\u91ca\u3002\n\u66f4\u65b0\uff0c\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f45\u670831\u65e5\u4e0b\u534812\uff1a30\uff1a\u65e9\u57282018\u5e74\uff0c\u8c37\u6b4c\u7684Android\u95ee\u9898\u8ddf\u8e2a\u5668\u5c31\u62a5\u544a\u4e86\u4e00\u4e2a\u63cf\u8ff0\u975e\u5e38\u76f8\u4f3c\u7684\u95ee\u9898\u3002\u5f53\u65f6\uff0c\u8c37\u6b4c\u5f00\u53d1\u8005\u8bf4\u4ed6\u4eec\u65e0\u6cd5\u91cd\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u5c06\u5176\u5173\u95ed(Hat Tip\uff1aReddit\u4e0a\u7684Inverimus)\u3002\u6211\u4eec\u5df2\u7ecf\u8054\u7cfb\u8c37\u6b4c\u8981\u6c42\u6f84\u6e05\u3002\n\u6839\u636eReddit\u548cTwitter\u4e0a\u7684\u51e0\u4f4d\u7528\u6237\uff0c\u4ee5\u53ca\u6211\u4eec\u8bc4\u8bba\u533a\u7684Partha Sarathi Tripy\u7684\u8bf4\u6cd5\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u7531\u56fe\u7247\u7684\u989c\u8272\u914d\u7f6e\u6587\u4ef6\u5f15\u8d77\u7684\uff0c\u8d85\u51fa\u4e86Android\u53ef\u4ee5\u5904\u7406\u7684\u8303\u56f4\uff0c\u5bfc\u81f4\u5d29\u6e83\u3002\n\u4ece\u7528\u6237\u62a5\u544a\u6765\u770b\uff0c\u8c37\u6b4c\u3001\u4e09\u661f\u3001\u4e00\u52a0\u3001\u8bfa\u57fa\u4e9a\u548c\u5c0f\u7c73\u7684\u8bbe\u5907\u4f3c\u4e4e\u90fd\u53d7\u5230\u4e86\u5f71\u54cd\uff0c\u5c3d\u7ba1\u5e76\u4e0d\u662f\u6240\u6709\u578b\u53f7\u7684\u8bbe\u5907\u90fd\u6709\u76f8\u540c\u7684\u8868\u73b0\u3002\n\u539f\u521b\u6545\u4e8b\uff0c\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f45\u670831\u65e5\u51cc\u666804\uff1a40\uff1a\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u9177\u7684\u6545\u4e8b\uff0c\u8fd9\u4e2a\u5468\u65e5\u65e9\u4e0a\u6709\u4e00\u4e2a\u5c0f\u9ebb\u70e6\u7ed9\u4f60\u3002\n\u7b80\u5355\u5730\u5c06\u624b\u673a\u4e0a\u7684\u56fe\u50cf\u8bbe\u7f6e\u4e3a\u5899\u7eb8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u624b\u673a\u5d29\u6e83\u5e76\u65e0\u6cd5\u542f\u52a8\u3002\n\u77e5\u540d\u6cc4\u5bc6\u8005\u5b87\u5b99\u51b0\u5728\u63a8\u7279\u4e0a\u62a5\u9053\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u5e76\u5f97\u5230\u4e86\u6570\u5341\u540d\u5176\u4ed6\u7528\u6237\u7684\u8bc1\u5b9e\u3002\n\u6211\u81ea\u5df1\u6d4b\u8bd5\u8fc7\u7684\u3002\u9996\u5148\uff0c\u611a\u8822\u7684\u662f\uff0c\u5728\u6211\u7684\u65e5\u5e38\u9a71\u52a8\u7a0b\u5e8fMate 20 Pro\u4e0a\uff0c\u5b83\u4f3c\u4e4e\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\u3002\u6211\u53ef\u4ee5\u5728\u8c37\u6b4cPixel 2\u4e0a\u590d\u5236\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u5c06\u6709\u95ee\u9898\u7684\u56fe\u50cf\u8bbe\u7f6e\u4e3a\u5899\u7eb8\u540e\uff0c\u624b\u673a\u7acb\u5373\u5d29\u6e83\u3002\u5b83\u8bd5\u56fe\u91cd\u65b0\u542f\u52a8\uff0c\u4f46\u5c4f\u5e55\u4f1a\u4e0d\u65ad\u5730\u6253\u5f00\u548c\u5173\u95ed\uff0c\u4f7f\u5176\u65e0\u6cd5\u901a\u8fc7\u5b89\u5168\u5c4f\u5e55\u3002\n\u5728\u5b89\u5168\u6a21\u5f0f\u4e0b\u91cd\u65b0\u542f\u52a8\u8bbe\u5907(\u901a\u8fc7\u5728\u542f\u52a8\u671f\u95f4\u6309\u4f4f\u97f3\u91cf\u6309\u94ae)\u672a\u89e3\u51b3\u95ee\u9898\u3002\n\u6700\u540e\uff0c\u6211\u7684Pixel2\u663e\u793a\u4e86\u4e00\u6761\u4fe1\u606f\uff0c\u8bf4\u624b\u673a\u65e0\u6cd5\u542f\u52a8\uff0c\u5e76\u63d0\u4f9b\u4e86\u91cd\u8bd5(\u6211\u8fd0\u6c14\u4e0d\u4f73)\u6216\u51fa\u5382\u91cd\u7f6e\u8bbe\u5907\u7684\u9009\u9879\u3002\n\u51fa\u5382\u91cd\u7f6e\u786e\u5b9e\u8ba9\u6211\u7684Pixel2\u6062\u590d\u4e86\u6b63\u5e38\uff0c\u4f46\u663e\u7136\u8fd9\u610f\u5473\u7740\u4e22\u5931\u4e86\u6211\u6240\u6709\u7684\u6570\u636e\u3002\nTwitter\u4e0a\u7684\u8bb8\u591a\u7528\u6237\u62a5\u544a\u8bf4\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6b63\u5982\u7528\u6237Sebastian\u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e5f\u53ef\u4ee5\u5728Android Studio\u6346\u7ed1\u7684\u4eff\u771f\u5668\u4e0a\u91cd\u73b0\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8fd8\u4e0d\u6e05\u695a\u662f\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u7684\uff0c\u4f46\u8003\u8651\u5230\u5305\u62ec\u8c37\u6b4c\u5728\u5185\u7684\u591a\u4e2a\u54c1\u724c\u7684\u8bbe\u5907\u4e0a\u90fd\u53d1\u751f\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u8be5\u6620\u50cf\u4e0d\u77e5\u4f55\u6545\u4e0eAndroid\u64cd\u4f5c\u7cfb\u7edf\u53d1\u751f\u4e86\u51b2\u7a81\u3002\u4e5f\u6709\u53ef\u80fd\u662f\u7cbe\u5fc3\u7f16\u5236\u7684\uff0c\u4ee5\u5229\u7528\u73b0\u6709\u7684\u6f0f\u6d1e\u3002\n\u6211\u4e0d\u9f13\u52b1\u4efb\u4f55\u4eba\u5c1d\u8bd5\u5c06\u56fe\u50cf\u8bbe\u7f6e\u4e3a\u4e2a\u4eba\u624b\u673a\u7684\u58c1\u7eb8\u3002\u5982\u679c\u4f60\u6ca1\u529e\u6cd5\uff0c\u53ea\u8981\u786e\u4fdd\u4f60\u4e0d\u4ecb\u610f\u91cd\u7f6e\u5de5\u5382\u5c31\u884c\u4e86\u3002", "note_en": "Update, June 1, 06:15AM EST: We have an in-depth explanation on the  likely reasons behind the wallpaper crash issue here.\n Update, May 31, 12:30PM EST: An issue with a very similar description has been reported in Google\u2019s  Android issue tracker back in 2018. At the time, Google developers said they were unable to reproduce the issue and closed it out (Hat tip:  inverimus on Reddit). We\u2019ve reached out to Google for clarification.\n According to several users on Reddit and Twitter, as well as Partha Sarathi Tripathy in our comments section, the issue is caused by the color profile of the image, which exceeds the bounds of what Android can handle, causing a crash.\n Looking at user reports, it looks like devices from Google, Samsung, OnePlus, Nokia, Xiaomi are affected, though not all models behave the same.\n  Original story, May 31, 04:40AM EST:\u00a0Here\u2019s a cool and a little troubling story for you this Sunday morning.\n  Simply setting an image as wallpaper on your phone could cause it to crash and become unable to boot.\n The issue was reported by well-known leaker  Universe Ice on Twitter and confirmed by dozens of other users.\n I tested it myself. First, foolishly, on my daily driver, the  Mate 20 Pro, which doesn\u2019t appear to be affected.\u00a0I  was able to replicate the issue on a  Google Pixel 2. After setting the image in question as a wallpaper, the phone immediately crashed. It attempted to reboot, but the screen would constantly turn on and off, making it impossible to pass the security screen.\n Restarting the device in safe mode (by holding down the volume button during boot-up) did not fix the issue.\n  Eventually, my Pixel 2 displayed a message saying the phone can\u2019t boot and offered the option to try again (which I did with no luck) or factory reset the device.\n A factory reset did bring my Pixel 2 back to normal, but obviously that meant losing all my data.\n Many users on Twitter report running into the issue. As user  Sebastian noted, the issue can also be reproduced on the emulator bundled with Android Studio.\n At this point, it\u2019s not clear what\u2019s causing it, but considering it\u2019s happening on devices from multiple brands, including Google, it\u2019s possible that the image somehow conflicts into an underlying issue with the Android OS. It\u2019s also possible that it was specially crafted to take advantage of an existing vulnerability.\n I do  not encourage anyone to try setting the image as wallpaper on personal phones. If you can\u2019t help it, just make sure you\u2019re okay with doing a factory reset.", "posttime": "2020-06-02 07:35:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u624b\u673a,\u8bbe\u7f6e,image,\u95ee\u9898", "title": "\u5c06\u6b64\u56fe\u50cf\u8bbe\u7f6e\u4e3a\u5899\u7eb8\u53ef\u80fd\u4f1a\u8f6f\u5316\u60a8\u7684\u624b\u673a", "title_en": "Setting This Image As Wallpaper Could Soft-Brick Your Phone", "transed": 1, "url": "https://www.androidauthority.com/image-wallpaper-crash-soft-brick-1124505/", "via": "", "real_tags": ["\u624b\u673a", "\u8bbe\u7f6e", "image", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004761, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u841d\u535c\u662f\u201c\u7a7f\u8d8a\u52a8\u7269\uff1a\u65b0\u5730\u5e73\u7ebf\u201d(Animal Crossing\uff1aNew Horizons)\u4e2d\u4e00\u4e2a\u5f15\u4eba\u5165\u80dc\u7684\u8865\u5145\uff0c\u800c\u4e14\u53ef\u4ee5\u8bf4\u662f\u4ec0\u4e48\u63a8\u52a8\u4e86\u8fd9\u6b3e\u6e38\u620f\u7684\u793e\u4ea4\u65b9\u9762\u4ece\u53ef\u7231\u7684\u5206\u5fc3\u53d8\u6210\u4e86\u7edd\u5bf9\u7684\u5fc5\u9700\u54c1(\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u60f3\u73a9\u5f97\u6700\u597d\u7684\u8bdd)\u3002\u8fd9\u662f\u8fd9\u4e2a\u8352\u5c9b\u4e0a\u4e8b\u5b9e\u4e0a\u7684\u80a1\u7968\u5e02\u573a\uff0c\u5728\u90a3\u91cc\u4f60\u52aa\u529b\u4f4e\u4e70\u9ad8\u5356\uff0c\u4ee5\u4fbf\u83b7\u5f97\u53ef\u89c2\u7684\u5229\u6da6\u3002\u53e6\u5916\uff0c\u6211\u6709\u6ca1\u6709\u63d0\u8fc7\u4f60\u53ef\u4ee5\u53bb\u4f60\u670b\u53cb\u7684\u5c9b\u4e0a\u627e\u4e00\u4e9b\u5956\u91d1\u4ea4\u6613\u7684\u673a\u4f1a\uff1f\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u901a\u8fc7\u5747\u503c-\u65b9\u5dee\u4f18\u5316\u955c\u5934\u7814\u7a76\u4e86\u201c\u830e\u201d\u5e02\u573a\u3002\u503c\u5f97\u5417\uff1f\u4f60\u5e94\u8be5\u4ec0\u4e48\u65f6\u5019\u5356\u5462\uff1f\u4f60\u7684\u670b\u53cb\u80fd\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u63d0\u4f9b\u5e2e\u52a9\uff1f\u6b63\u5982\u4e00\u4e9b\u4eba\u53ef\u80fd\u9884\u671f\u7684\u90a3\u6837\uff0c\u7b54\u6848\u5c31\u5728\u73b0\u4ee3\u6295\u8d44\u7ec4\u5408\u7406\u8bba\u4e2d\u3002\n\u841d\u535c\uff0c\u867d\u7136\u770b\u8d77\u6765\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u5546\u54c1\uff0c\u4f46\u5b83\u6709\u51e0\u4e2a\u660e\u663e\u7684\u7279\u70b9-\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u5468\u4e00\u5230\u5468\u516d\u7684\u6bcf\u4e2a\u4e0a\u5348\u548c\u4e0b\u5348\uff0cNook\u2018s Cranny\u90fd\u4f1a\u63d0\u4f9b\u65b0\u7684\u62a5\u4ef7\u3002\n\u7136\u800c\uff0c\u841d\u535c\u81f3\u5c11\u5728\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u65b9\u9762\u4e0e\u5927\u591a\u6570\u91d1\u878d\u8d44\u4ea7\u4e0d\u540c\u3002\u76ee\u524d\u8fd8\u8fdc\u4e0d\u6e05\u695a\u6807\u7684\u4ef7\u683c\u662f\u5426\u9075\u5faa\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u7684\u67d0\u79cd\u53d8\u5316\uff0c\u5982\u679c\u6211\u4eec\u51b3\u5b9a\u4ece\u8d44\u4ea7\u5b9a\u4ef7\u673a\u5236\u501f\u94b1\uff0c\u8fd9\u5fc5\u7136\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u5206\u652f\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u5b8c\u5168\u6ca1\u6709\u5e0c\u671b\u7684\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u770b\u5230-\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u5b57\u6765\u786e\u5b9a\u5b83\u3002\n\u540c\u6837\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u7f3a\u4e4f\u6700\u4f18\u9500\u552e\u7b56\u7565\u7684\u60c5\u51b5\u4e0b(\u5982\u679c\u60a8\u77e5\u9053\u5f97\u66f4\u597d\uff0c\u8bf7\u8bc4\u8bba\u4e00\u4e0b\uff01)\uff0c\u6211\u5c06\u505a\u4e00\u4e2a\u5047\u8bbe\uff0c\u4f7f\u95ee\u9898\u66f4\u5bb9\u6613\u5904\u7406(\u5e76\u4e14\u4e0d\u90a3\u4e48\u4f9d\u8d56\u4e8e\u8def\u5f84)\uff1a\u8ba9\u6211\u4eec\u53ea\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u65f6\u95f4\u7a97\u53e3(\u603b\u517112\u4e2a\u65f6\u95f4\u7a97\u53e3\u4e2d)\u9500\u552e\u6211\u4eec\u7684\u841d\u535c\uff0c\u8fd9\u6837\u7684\u51b3\u5b9a\u5c06\u5b8c\u5168\u57fa\u4e8e\u590f\u666e\u6bd4\u7387(Sharpe Ratio)\u3002\n\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u52a8\u7269\u7a7f\u8d8a\u793e\u533a\u90fd\u77e5\u9053\uff0c\u841d\u535c\u7684\u4ef7\u683c\u5e76\u4e0d\u662f\u771f\u7684\u4e0d\u53ef\u9884\u6d4b\u3002\u76f8\u53cd\uff0c\u5b83\u9075\u5faa\u4ee5\u4e0b\u56db\u79cd\u6a21\u5f0f\u4e4b\u4e00\uff1a\n\u73b0\u5728\uff0c\u591a\u4e8f\u4e86Treeki\u6240\u505a\u7684\u975e\u51e1\u7684\u9006\u5411\u5de5\u7a0b\u5de5\u4f5c(\u89c1\u8fd9\u91cc)\uff0c\u841d\u535c\u4ef7\u683c\u80cc\u540e\u7684\u5965\u79d8\u5df2\u7ecf\u5168\u90e8\u7834\u89e3\uff0c\u4ee5\u81f3\u4e8e\u6709\u53ef\u80fd\u7528\u6570\u5b57\u6a21\u62df\u4ef7\u683c\uff0c\u4ece\u800c\u5b9e\u73b0\u8499\u7279\u5361\u6d1b\u5f0f\u7684\u5206\u6790\uff1a\n\u6839\u636e\u6211\u5bf9100K\u8bd5\u9a8c\u7684\u5b9e\u9a8c\u5224\u65ad\uff0c\u5982\u679c\u6211\u4eec\u5fc5\u987b\u5c06\u51fa\u552e\u841d\u535c\u7684\u65f6\u95f4\u9650\u5236\u572812\u4e2a\u53ef\u7528\u65f6\u6bb5\u4e2d\u7684\u4e00\u4e2a\uff0c\u5468\u4e09\u4e0a\u5348\u3002\u65e0\u8bba\u4ece\u9884\u671f\u6536\u76ca\u8fd8\u662f\u590f\u666e\u6bd4\u7387\u6765\u770b\uff0c\u4f3c\u4e4e\u90fd\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u9075\u5faa\u8fd9\u4e00\u7b56\u7565\uff0c\u57283\u5929\u7684\u65f6\u95f4\u6846\u67b6\u5185\u53ef\u4ee5\u9884\u671f\u8fd110%\u7684\u56de\u62a5\u7387-\u8fdc\u8fdc\u8d85\u8fc7\u73b0\u5b9e\u4e16\u754c\u4e2d\u51e0\u4e4e\u6bcf\u4e00\u79cd\u8d44\u4ea7\u7c7b\u522b\u7684\u8868\u73b0\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u9644\u5f55\u3002\n\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u66f4\u6709\u8da3\uff0c\u8fd9\u6b3e\u6e38\u620f\u8fd8\u5141\u8bb8\u4f60(\u5728\u5468\u65e5)\u5728\u670b\u53cb\u7684\u5c9b\u4e0a\u4e70\u5356\u4f60\u7684\u841d\u535c(\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5468\u91cc)\u3002\u5229\u7528\u8fd9\u79cd\u7075\u6d3b\u6027\uff0c\u7406\u6027\u7684\u841d\u535c\u6295\u8d44\u8005\u4f1a\u6bd4\u8f83\u5c3d\u53ef\u80fd\u591a\u7684\u9009\u62e9\uff0c\u5728\u6240\u6709\u5c9b\u5c7f\u4e0a\u53ea\u4ee5\u6700\u5c0f\u7684\u4ef7\u683c\u4e70\u5165\uff0c\u4ee5\u6700\u5927\u7684\u4ef7\u683c\u5356\u51fa\u3002\n\u89e3\u6790\u5730\uff0c\u8bbe$P_1$\uff0c$P_2$\uff0c\u2026\u3002\uff0c$P_N$\u662f\u5728$N$\u4e0d\u540c\u5c9b\u5c7f\u4e0a\u89c2\u5bdf\u5230\u7684\u841d\u535c\u4ef7\u683c\u3002\u5047\u8bbe\u5b83\u4eec\u662fIID\uff0c\u5e76\u9075\u5faa\u7684\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u3002\n\u6700\u5927\u503c$Q$\uff0c\u5176\u4e2d$Q=MAX(P_1\uff0cP_2\uff0c\u2026\u3002\uff0cP_N)$\u5c06\u5177\u6709\u4ee5\u4e0b\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff1a\n\u56e0\u6b64\uff0c\u65b0\u7684\u5206\u5e03\u5bf9\u8f83\u5c0f\u7684\u503c\u8fdb\u884c\u6b20\u91c7\u6837\uff0c\u540c\u65f6\u5bf9\u8f83\u5927\u7684\u503c\u8fdb\u884c\u8fc7\u91c7\u6837\uff0c\u6709\u6548\u5730\u5c06\u6982\u7387\u8d28\u91cf\u53f3\u79fb\u3002\u6211\u4eec\u53ef\u4ee5\u652f\u914d\u7684\u5c9b\u5c7f\u8d8a\u591a\uff0c\u5f62\u52bf\u5c31\u8d8a\u6709\u5229\u3002\u4e00\u4e2a\u989d\u5916\u7684\u5c9b\u5c7f\u5e26\u6765\u4e86\u4ee4\u4eba\u9707\u60ca\u7684\u4e94\u500d\u7684\u9884\u671f\u56de\u62a5\u548c\u51e0\u4e4e\u4e94\u500d\u7684\u590f\u666e\u6bd4\u7387\u3002\u4e00\u65e6\u5b83\u5230\u8fbe6\u4e2a\u5c9b\u5c7f\uff0c\u4f60\u53ef\u4ee5\u9884\u671f\u5728\u540c\u6837\u76843\u5929\u65f6\u95f4\u5185\u83b7\u5f97122%\u7684\u56de\u62a5\uff0c\u590f\u666e\u6bd4\u7387\u4e3a0.98\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u4efb\u4f55\u66fe\u5728\u8fd9\u4e2a\u5730\u7403\u4e0a\u884c\u8d70\u8fc7\u7684\u5bf9\u51b2\u57fa\u91d1\u8d85\u7ea7\u660e\u661f\u3002\n\u5728\u6211\u4eec\u7684\u6700\u7ec8\u60f3\u6cd5\u5b9e\u9a8c\u4e2d\uff0c\u8ba9\u6211\u4eec\u628a\u5c9b\u5c7f\u7684\u6570\u91cf\u63a8\u5230\u65e0\u7a77\u5927\u3002\u4eba\u4eec\u5df2\u7ecf\u5728\u5229\u7528\u4ef7\u683c\u53d1\u73b0\u7f51\u7ad9(\u5982\u841d\u535c\u4ea4\u6613\u6240)\u6765\u6269\u5927\u4ed6\u4eec\u7684\u673a\u4f1a\u96c6\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u56de\u62a5\u5206\u5e03\u5d29\u6e83\u4e3a\u4e00\u4e2a\u5355\u4e00\u6570\u5b57\uff0c\u56e0\u4e3a\u841d\u535c\u6295\u8d44\u8005\u5728\u5168\u7403\u6700\u4f4e\u4e70\u5165\uff0c\u5728\u5168\u7403\u6700\u5927\u503c\u5356\u51fa(\u6839\u636e\u6211\u7684\u6a21\u62df\uff0c\u5206\u522b\u4e3a90\u548c660\u8d1d\u5c14)\uff0c\u4e0d\u518d\u662f\u4e00\u4e2a\u968f\u673a\u4e8b\u4ef6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fdd\u8bc1\u7ed9\u7ec8\u6781\u841d\u535c\u5927\u5e08633%\u7684\u56de\u62a5\u3002\n\u841d\u535c\u5f53\u7136\u662f\u4e00\u9879\u5f88\u597d\u7684\u6295\u8d44\u3002\u901a\u8fc7\u4e00\u70b9\u8ba1\u5212\uff0c\u4e00\u4e9b\u52aa\u529b\u548c\u51e0\u4e2a\u670b\u53cb\uff0c\u5b83\u4e0d\u65ad\u5730\u63d0\u4f9b\u4e00\u4e9b\u4eba\u7c7b\u6240\u77e5\u7684\u6700\u597d\u7684\u56de\u62a5\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u6b3e\u6e38\u620f\u7684\u754c\u9762\u5e76\u6ca1\u6709\u771f\u6b63\u8ba9\u73a9\u5bb6\u6ee5\u7528\u7cfb\u7edf\u53d8\u5f97\u5bb9\u6613\uff0c\u4f46\u8fd9\u662f\u53e6\u4e00\u56de\u4e8b\u4e86\u3002\n\u540c\u65f6\uff0c\u795d\u6211\u7684\u841d\u535c\u4ea4\u6613\u5458\u540c\u4e8b\u4eec\u6295\u8d44\u6109\u5feb\u3002\u5c0f\u5fc3\u70b9\uff0c\u522b\u8ba9\u52aa\u514b\u4e00\u5bb6\u77e5\u9053\u3002\n2020\u5e745\u67084\u65e5\u66f4\u65b0\uff1a\u66f4\u6b63\u4e86\u4e4b\u524d\u4e0d\u51c6\u786e\u7684\u8bf4\u6cd5Re\uff1a\u841d\u535c\u4ef7\u683c\u7684\u968f\u673a\u6027\u3002\u591a\u4e8f\u4e86\u738b\u5468\u4f1f\u3002\n2020\u5e745\u67086\u65e5\u66f4\u65b0\uff1a\u8ba8\u8bba\u4e86\u4eba\u4eec\u4f7f\u7528\u4ef7\u683c\u53d1\u73b0\u5e94\u7528\u6765\u786e\u5b9a\u6700\u4f18\u60e0\u4ef7\u683c\u7684\u60c5\u51b5\uff0c\u4ee5\u53ca\u5982\u679c\u67d0\u4eba\u6709\u65e0\u9650\u6570\u91cf\u7684\u670b\u53cb\u600e\u4e48\u529e\u3002\u591a\u4e8f\u4e86\u5f17\u96f7\u5a05\u00b7\u6613\u3002\n\u8fd9\u662f\u6211\u7684\u52a8\u7269\u7a7f\u8d8a\u5e16\u5b50\u7cfb\u5217\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u8bf7\u770b\u8fd9\u91cc\uff1b\u7b2c\u4e09\u90e8\u5206\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002", "note_en": "Turnip is a fascinating addition in  Animal Crossing: New Horizons, and arguably what promotes the game\u2019s social aspect from a cute distraction to an absolute necessity (that is, if you want to play optimally). It is the de facto stock market on the deserted island, where you strive to buy low and sell high in order to pocket a decent profit. Plus, did I mention that you can visit your friends\u2019 island for some bonus trading opportunities?\n In this post, I examine the \u201cstalk\u201d market through the mean-variance optimization lens. Is it worth it? When should you sell? To what extent can your friends be of assistance? As some might expect, the answers lie in the modern portfolio theory.\n  Turnip, though appears to be a common commodity, has a few distinct traits to it -\n Every morning and afternoon of the following Monday to Saturday, a new quote will become available at Nook\u2019s Cranny\n However, turnip differs from most financial assets in at least one meaningful way. It is far from clear whether the underlying price follows some variation of geometric Brownian motion, which is bound to have unintended ramification if we decide to borrow from the asset pricing machinery. But it\u2019s not totally hopeless, as will be shown shortly - we can pin it down numerically.\n It\u2019s also worth noting that in the absence of an optimal selling strategy (comment if you know better!), I am going to make an assumption that makes the problem far more tractable (and less path-dependent): let\u2019s only sell our turnips at one specific time window (out of the total 12 of them), and such decision will be made solely based on  Sharpe ratio.\n  For a long time, it has been known to the Animal Crossing community that the turnip price isn\u2019t truly unpredictable. Instead, it follows one of the following four  patterns:\n  Now thanks to the extraordinary reverse-engineering work done by Treeki (see  here), the mystery behind turnip price has been deciphered in its entirety, to the point where it becomes possible to simulate the prices numerically, enabling Monte-Carlo-style analysis:\n   Juding from my experiment of 100K trials, if we have to limit our timing of selling turnips to one of the 12 available slots, Wednesday a.m. seems to be the best choice both in terms of expected return and Sharpe ratio. If we follow this strategy, a return of almost 10% can be expected over the 3-day time frame - significantly outperforming virtually every asset class in the real world, mind you. See appendix for details.\n   To make things more interesting, the game also allows you to buy (on Sunday) and sell your turnips (in the following week) on a friend\u2019s island. Taking advantage of such flexibility, a rational turnip investor will compare as many options as possible and only buy at the minimum and sell at the maximum across all islands.\n Analytically, let $P_1$, $P_2$, \u2026, $P_N$ be the turnip prices observed on $N$ different islands. Assuming they are IID and follow the cumulative distribution function of\n the maximum value $Q$ where $Q = max(P_1, P_2, \u2026, P_N)$ will have the cumulative distribution function of:\n As a result, the new distribution undersamples the smaller values and oversamples the larger ones at the same time, effectively shifting the probability mass to the right. The more islands we have at our disposal, the more advantageous the situation becomes. A single additional island brings a staggering fivefold increase in expected return and almost fivefold increase in Sharpe ratio. Once it reaches 6 islands, you can expect a 122% return over the same 3-day time period with a Sharpe ratio of 0.98, dwarfing any hedge fund super star who has ever walked this Earth by far.\n  For our final thought experiment, let\u2019s push the number of islands to infinity. People have already been taking advantage of price discovery websites (such as  Turnip Exchange) to expand their opportunity set. In the extreme case, the return distribution collapses to one single number as the turnip investor buys at the global minimum and sell at the global maximum (90 and 660 Bells respectively per my simulation) and is no longer a random event. In other words, a guaranteed 633% return for the ultimate turnip master.\n  Turnip is a great investment by all means. With a little planning, some hardwork and a few friends, it consistently delivers some of the best returns known to humankind. Some might argue that the game\u2019s interface doesn\u2019t really make it easy for players to abuse the system, but that\u2019s another story for another day.\n Meanwhile, to my fellow turnip traders, happy investing. Just be careful and don\u2019t let the Nooks know.\n       Update on May 4th, 2020: Corrected previously-inaccurate statement re: randomness of turnip price. Thanks to Chau-Wai Wong.\n Update on May 6th, 2020: Discussed the cases where people use price discovery app to pinpoint the best price available and what if somebody has infinite number of friends. Thanks to Freya Yi.\n This is Part II of my Animal Crossing post series. For Part I, see  here; for Part III, see  here.", "posttime": "2020-06-02 07:33:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6295\u8d44,portfolio,\u841d\u535c", "title": "\u73b0\u4ee3\u6295\u8d44\u7ec4\u5408\u7406\u8bba\uff1a\u4ee5\u829c\u83c1\u4e3a\u4f8b", "title_en": "Modern Portfolio Theory: A Case Study on Turnips", "transed": 1, "url": "https://www.shawenyao.com/Modern-Portfolio-Theory-a-Case-Study-on-Turnips/", "via": "", "real_tags": ["\u6295\u8d44", "portfolio", "\u841d\u535c"]}, {"category": "", "categoryclass": "", "imagename": "ece3dd97d7342bc3e8218f8f146a8cb7.jpg", "infoid": 1004760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528OpenCV\u3001\u6df1\u5ea6\u5b66\u4e60\u548c\u8ba1\u7b97\u673a\u89c6\u89c9\u5b9e\u73b0\u65b0\u51a0\u80ba\u708e\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u3002\n\u6211\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u89c1\u8fc7\u5f88\u591a\u4eba\u4f7f\u7528\u201c\u793e\u4ea4\u8ddd\u79bb\u63a2\u6d4b\u5668\u201d\uff0c\u4f46\u6211\u4e0d\u786e\u5b9a\u4ed6\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u654f\u4fca\u662f\u5bf9\u7684-\u6211\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u770b\u5230\u4e86\u5f88\u591a\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u7684\u5b9e\u73b0\uff0c\u6211\u6700\u559c\u6b22\u7684\u662f\u6765\u81eareddit\u7528\u6237danrapko\u548crohit kumar sriastava\u7684\u5b9e\u73b0\u3002\n\u4eca\u5929\uff0c\u6211\u5c06\u4e3a\u4f60\u63d0\u4f9b\u4e00\u4e2a\u4f60\u81ea\u5df1\u7684\u793e\u4ea4\u8ddd\u79bb\u63a2\u6d4b\u5668\u7684\u8d77\u70b9\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u60a8\u8ba4\u4e3a\u5408\u9002\u7684\u65f6\u5019\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u5f00\u53d1\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u3002\n\u5728\u672c\u6559\u7a0b\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u8ba8\u8bba\u4ec0\u4e48\u662f\u793e\u4ea4\u8ddd\u79bb\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528OpenCV\u548c\u6df1\u5ea6\u5b66\u4e60\u6765\u5b9e\u73b0\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u3002\n\u6211\u4eec\u7684Detect_People\u5b9e\u7528\u51fd\u6570\uff0c\u5b83\u4f7f\u7528YOLO\u5bf9\u8c61\u68c0\u6d4b\u5668\u68c0\u6d4b\u89c6\u9891\u6d41\u4e2d\u7684\u4eba\u3002\n\u6211\u4eec\u7684Python\u9a71\u52a8\u7a0b\u5e8f\u811a\u672c\uff0c\u5b83\u5c06\u6240\u6709\u7247\u6bb5\u7c98\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684OpenCV\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u3002\n\u6211\u4eec\u5c06\u901a\u8fc7\u56de\u987e\u7ed3\u679c\u6765\u7ed3\u675f\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5305\u62ec\u5bf9\u9650\u5236\u548c\u672a\u6765\u6539\u8fdb\u7684\u7b80\u8981\u8ba8\u8bba\u3002\n\u6700\u540e\uff0c\u5982\u679c\u4f60\u4e0d\u60f3/\u4e0d\u80fd\u5e94\u7528\u76f8\u673a\u6821\u51c6\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u793e\u4ea4\u8ddd\u79bb\u63a2\u6d4b\u5668\uff0c\u4f46\u4f60\u5fc5\u987b\u4e25\u683c\u4f9d\u8d56\u50cf\u7d20\u8ddd\u79bb\uff0c\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u90a3\u4e48\u51c6\u786e\u3002\n\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u7684OpenCV\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u5b9e\u73b0\u5c06\u4f9d\u8d56\u4e8e\u50cf\u7d20\u8ddd\u79bb-\u6211\u5c06\u628a\u5b83\u7559\u7ed9\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\uff0c\u6309\u7167\u60a8\u8ba4\u4e3a\u5408\u9002\u7684\u65b9\u5f0f\u6269\u5c55\u5b9e\u73b0\u3002\n\u8bf7\u52a1\u5fc5\u4ece\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u7684\u201c\u4e0b\u8f7d\u201d\u90e8\u5206\u83b7\u53d6\u4ee3\u7801\u3002\u4ece\u90a3\u91cc\u89e3\u538b\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528tree\u547d\u4ee4\u67e5\u770b\u6211\u4eec\u7684\u9879\u76ee\u662f\u5982\u4f55\u7ec4\u7ec7\u7684\uff1a\n$tree--dirsfirst.\u251c\u2500\u2500pyimagesearch\u2502\u251c\u2500\u2500__init__.py\u2502\u548c\u251c\u2500\u2500Detection.py\u2502\u4f7f\u7528\u2514\u2500\u2500Social_Distance_config.py\u251c\u2500\u2500yolo-coco\u2502\u251c\u2500\u2500coco\u2502\u251c\u2500\u2500yolov3.cfg\u2502\u251c\u2500\u2500\u2502\u251c\u2500\u2500yolov3.cfg\u2502\u2502\u251c\u2500\u2500yolov3.weights\u251c\u2500\u2500output.avi\u251c\u2500\u2500equans.mp4\u2514\u2500\u2500Social_Distance_Detector.py2\u76ee\u5f55\uff0c9\u4e2a\u6587\u4ef6\u3002\n\u6211\u4eec\u7684YOLO\u5bf9\u8c61\u68c0\u6d4b\u5668\u6587\u4ef6(\u5305\u62ecCNN\u67b6\u6784\u5b9a\u4e49\u3001\u9884\u5148\u8bad\u7ec3\u7684\u6743\u91cd\u548c\u7c7b\u540d)\u4fdd\u5b58\u5728yolo-coco/\u76ee\u5f55\u4e2d\u3002\u6b64YOLO\u6a21\u578b\u4e0eOpenCV\u7684DNN\u6a21\u5757\u517c\u5bb9\u3002\npy\uff1a\u4e0e\u4e00\u4e9b\u66f4\u7b80\u5355\u7684\u6a21\u578b\u76f8\u6bd4\uff0c\u4f7f\u7528OpenCV\u8fdb\u884cYOLO\u5bf9\u8c61\u68c0\u6d4b\u9700\u8981\u66f4\u591a\u7684\u4ee3\u7801\u884c\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u51b3\u5b9a\u5c06\u5bf9\u8c61\u68c0\u6d4b\u903b\u8f91\u653e\u5728\u6b64\u6587\u4ef6\u7684\u51fd\u6570\u4e2d\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u9a71\u52a8\u7a0b\u5e8f\u811a\u672c\u7684\u5e27\u5904\u7406\u5faa\u73af\u4e0d\u4f1a\u53d8\u5f97\u7279\u522b\u6df7\u4e71\u3002\n\u6211\u4eec\u7684\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u9a7b\u7559\u5728Social_Distance_Detector.py\u811a\u672c\u4e2d\u3002\u8be5\u6587\u4ef6\u8d1f\u8d23\u5728\u89c6\u9891\u6d41\u7684\u5e27\u4e0a\u5faa\u73af\uff0c\u5e76\u786e\u4fdd\u5728\u5927\u6d41\u884c\u671f\u95f4\u4eba\u4eec\u5f7c\u6b64\u4fdd\u6301\u5065\u5eb7\u7684\u8ddd\u79bb\u3002\u5b83\u4e0e\u89c6\u9891\u6587\u4ef6\u548c\u7f51\u7edc\u6444\u50cf\u5934\u6d41\u90fd\u517c\u5bb9\u3002\n\u6211\u4eec\u7684\u8f93\u5165\u89c6\u9891\u6587\u4ef6\u662fwalewans.mp4\uff0c\u5b83\u6765\u81eaTride\u7684\u7269\u4f53\u68c0\u6d4b\u6d4b\u8bd5\u89c6\u9891\u3002output.avi\u6587\u4ef6\u5305\u542b\u5904\u7406\u540e\u7684\u8f93\u51fa\u6587\u4ef6\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u4fdd\u6301\u4ee3\u7801\u7684\u6574\u6d01\u548c\u7ec4\u7ec7\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u5b58\u50a8\u91cd\u8981\u7684\u53d8\u91cf\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u4eec--\u6253\u5f00pyimagesearch\u6a21\u5757\u5185\u7684Social_Distance_config.py\u6587\u4ef6\uff0c\u5e76\u6d4f\u89c8\u4e00\u4e0b\uff1a\n#YOLO\u76ee\u5f55\u7684\u57fa\u672c\u8def\u5f84MODEL_PATH=&#34\uff1byolo-coco&#34\uff1b#\u521d\u59cb\u5316\u6700\u5c0f\u6982\u7387\u4ee5\u8fc7\u6ee4\u5f31\u68c0\u6d4b\u548c#\u5e94\u7528\u975e\u6700\u5927\u503c\u6291\u5236\u65f6\u7684\u9608\u503cMIN_CONF=0.3NMS_THRESH=0.3\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6709\u5230YOLO\u5bf9\u8c61\u68c0\u6d4b\u6a21\u578b(\u7b2c2\u884c)\u7684\u8def\u5f84\u3002\u5b9a\u4e49\u4e86\u6700\u5c0f\u76ee\u6807\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\u548c\u975e\u6700\u5927\u503c\u6291\u5236\u9608\u503c\u3002\n#\u6307\u793a\u662f\u5426\u5e94\u4f7f\u7528NVIDIA CUDA GPU\u7684\u5e03\u5c14\u503cUSE_GPU=FALSE#\u5b9a\u4e49\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u6700\u5c0f\u5b89\u5168\u8ddd\u79bb(\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d)#MIN_DISTANCE=50\u3002\n\u7b2c10\u884c\u4e0a\u7684USE_GPU\u5e03\u5c14\u503c\u6307\u793a\u662f\u5426\u4f7f\u7528\u652f\u6301NVIDIA CUDA\u7684GPU\u6765\u52a0\u5feb\u63a8\u7406\u901f\u5ea6(\u8981\u6c42OpenCV\u7684\u201cdnn\u201d\u6a21\u5757\u5b89\u88c5\u65f6\u652f\u6301NVIDIA GPU)\u3002\n\u7b2c14\u884c\u5b9a\u4e49\u4e86\u4e3a\u4e86\u9075\u5b88\u793e\u4ea4\u8ddd\u79bb\u534f\u8bae\uff0c\u4eba\u4eec\u5fc5\u987b\u4fdd\u6301\u7684\u6700\u5c0f\u8ddd\u79bb(\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d)\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528YOLO\u5bf9\u8c61\u68c0\u6d4b\u5668\u6765\u68c0\u6d4b\u89c6\u9891\u6d41\u4e2d\u7684\u4eba\u3002\n\u4e0e\u5176\u4ed6\u5bf9\u8c61\u68c0\u6d4b\u65b9\u6cd5(\u5982\u5355\u955c\u5934\u68c0\u6d4b\u5668\u6216\u66f4\u5feb\u7684R-CNN)\u76f8\u6bd4\uff0c\u5c06YOLO\u4e0eOpenCV\u4e00\u8d77\u4f7f\u7528\u9700\u8981\u66f4\u591a\u7684\u8f93\u51fa\u5904\u7406\uff0c\u56e0\u6b64\u4e3a\u4e86\u4fdd\u6301\u4ee3\u7801\u7684\u6574\u6d01\uff0c\u8ba9\u6211\u4eec\u5b9e\u73b0\u5c01\u88c5\u4efb\u4f55YOLO\u5bf9\u8c61\u68c0\u6d4b\u903b\u8f91\u7684Detect_People\u51fd\u6570\u3002\n\u6253\u5f00pyimagesearch\u6a21\u5757\u5185\u7684Detection.py\u6587\u4ef6\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff1a\n#\u4ece.Social_Distance_config\u5bfc\u5165NMS_THRESH\u5bfc\u5165\u6240\u9700\u7684\u5305\u4ece.Social_Distance_config\u5bfc\u5165MIN_CONF\u5bfc\u5165Numpy\u4f5c\u4e3anpimport CV2\u3002\n\u6211\u4eec\u4ece\u5bfc\u5165\u5f00\u59cb\uff0c\u5305\u62ec\u7b2c2\u884c\u548c\u7b2c3\u884c\u7684\u914d\u7f6e\u6587\u4ef6(nms_Thresh\u548cmin_conf)\u4e2d\u9700\u8981\u7684\u90a3\u4e9b\u5185\u5bb9(\u6839\u636e\u9700\u8981\uff0c\u8bf7\u53c2\u9605\u4e0a\u4e00\u8282)\u3002\u6211\u4eec\u8fd8\u5c06\u5728\u6b64\u811a\u672c\u4e2d\u5229\u7528NumPy\u548cOpenCV(\u7b2c4\u884c\u548c\u7b2c5\u884c)\u3002\n\u6211\u4eec\u7684\u811a\u672c\u7531\u7528\u4e8e\u68c0\u6d4b\u4eba\u5458\u7684\u5355\u4e2a\u51fd\u6570\u5b9a\u4e49\u7ec4\u6210-\u73b0\u5728\u8ba9\u6211\u4eec\u5b9a\u4e49\u8be5\u51fd\u6570\uff1a\ndef Detect_People(frame\uff0cnet\uff0cln\uff0cPersonIdx=0)\uff1a#\u83b7\u53d6\u6846\u67b6\u7684\u5c3a\u5bf8\u5e76\u521d\u59cb\u5316#Results\u5217\u8868(H\uff0cW)=frame\u3002Shape[\uff1a2]Results=[]\u3002\nPersonIdx\uff1aYOLO\u6a21\u578b\u53ef\u4ee5\u68c0\u6d4b\u8bb8\u591a\u7c7b\u578b\u7684\u5bf9\u8c61\uff1b\u8fd9\u4e2a\u7d22\u5f15\u662f\u4e13\u95e8\u9488\u5bf9Person\u7c7b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u4f1a\u8003\u8651\u5176\u4ed6\u5bf9\u8c61\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u521d\u59cb\u5316\u7ed3\u679c\u5217\u8868\uff0c\u51fd\u6570\u6700\u7ec8\u8fd4\u56de\u8be5\u5217\u8868\u3002\u7ed3\u679c\u5305\u62ec(1)\u4eba\u7684\u9884\u6d4b\u6982\u7387\uff0c(2)\u68c0\u6d4b\u7684\u5305\u56f4\u76d2\u5750\u6807\uff0c(3)\u76ee\u6807\u7684\u8d28\u5fc3\u3002\n#\u4ece\u8f93\u5165\u5e27\u6784\u9020BLOB\uff0c\u7136\u540e\u6267\u884cYOLO\u5bf9\u8c61\u68c0\u6d4b\u5668\u7684\u524d\u5411#\u904d\uff0c\u7ed9\u51fa\u6211\u4eec\u7684\u8fb9\u754c\u6846#\u548c\u76f8\u5173\u6982\u7387blob=cv2.dnn.blobFromImage(frame\uff0c1/255.0\uff0c(416416)\uff0cswapRB=True\uff0cCrop=False)net.setInput(Blob)layerOutput=net.ward(Ln)#\u521d\u59cb\u5316\u68c0\u6d4b\u5230\u7684\u8fb9\u754c\u6846\u3001\u8d28\u5fc3\u548c#\u7f6e\u4fe1\u5ea6\u7684\u5217\u8868\uff0c\u5206\u522b\u4e3a\u6846\u3002\n\u9884\u5904\u7406\u6211\u4eec\u7684\u5e27\u9700\u8981\u6211\u4eec\u6784\u9020\u4e00\u4e2aBLOB(\u7b2c16\u548c17\u884c)\u3002\u4ece\u90a3\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528YOLO\u548cOpenCV\u6267\u884c\u5bf9\u8c61\u68c0\u6d4b(\u7b2c18\u884c\u548c\u7b2c19\u884c)\u3002\n\u7b2c23-25\u884c\u521d\u59cb\u5316\u5c06\u5f88\u5feb\u5305\u542b\u6211\u4eec\u7684\u8fb9\u754c\u6846\u3001\u5bf9\u8c61\u8d28\u5fc3\u548c\u5bf9\u8c61\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\u7684\u5217\u8868\u3002\n#\u5728\u6bcf\u4e00\u5c42\u8f93\u51fa\u4e0a\u5faa\u73af\u4ee5\u4fbf\u5728\u5c42\u4e2d\u8f93\u51fa\u8f93\u51fa\uff1a#\u5728\u6bcf\u4e2a\u68c0\u6d4b\u4e0a\u5faa\u73af\u4ee5\u4fbf\u5728\u8f93\u51fa\u4e2d\u8fdb\u884c\u68c0\u6d4b\uff1a#\u63d0\u53d6\u7c7b\u522bID\u548c\u7f6e\u4fe1\u5ea6(\u5373\u6982\u7387)#\u5f53\u524d\u5bf9\u8c61\u68c0\u6d4b\u5206\u6570=\u68c0\u6d4b[5\uff1a]classID=np.argmax(\u5206\u6570)\u7f6e\u4fe1\u5ea6=\u5206\u6570[classID]#\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fc7\u6ee4\u68c0\u6d4b\uff1a(1)\u786e\u4fdd\u68c0\u6d4b\u5230\u7684\u5bf9\u8c61#\u662f\u4eba\uff0c\u4ee5\u53ca(2)\u5982\u679cclassID==PersonIdx\u548c\u7f6e\u4fe1\u5ea6&gt\uff0c\u5219\u6ee1\u8db3\u6700\u4f4e#\u7f6e\u4fe1\u5ea6\uff1bmin_conf\uff1a#\u76f8\u5bf9\u4e8e#\u56fe\u50cf\u5927\u5c0f\u5411\u540e\u7f29\u653e\u8fb9\u754c\u6846\u5750\u6807\uff0c\u8bf7\u8bb0\u4f4f\uff0cYOLO#\u5b9e\u9645\u4e0a\u8fd4\u56de#\u8fb9\u754c\u6846\u7684\u4e2d\u5fc3(x\uff0cy)\u5750\u6807\uff0c\u540e\u8ddf\u6846&#39\uff1bwidth\u548c#Height box=\u68c0\u6d4b[0\uff1a4]*np.array([W\uff0cH\uff0cW\uff0cH])(centerX\uff0ccenterY\uff0cwidth\uff0chigh)=box.astype(&#34\uff1bint&#34\uff1b)#\u4f7f\u7528center(x\uff0cy)\u5750\u6807\u5bfc\u51fa\u8fb9\u754c\u6846\u7684\u5de6\u4e0a\u89d2x=int(centerX-(width/2))y=int(centerY-(\u9ad8\u5ea6/2))#\u66f4\u65b0\u6211\u4eec\u7684\u8fb9\u754c\u6846\u5750\u6807\u5217\u8868\u3001#\u8d28\u5fc3\u548c\u7f6e\u4fe1\u5ea6\u6846\u3002append([x\uff0cy\uff0cint(Width)\uff0cint(Height)])\u8d28\u5fc3\u3002append((centerX\uff0ccenterY))\u7f6e\u4fe1\u5ea6.append(Float(\u7f6e\u4fe1\u5ea6\u3002\n\u5728\u6bcf\u4e00\u5c42\u8f93\u51fa\u548c\u68c0\u6d4b\u4e0a\u5faa\u73af(\u7b2c28-30\u884c)\uff0c\u6211\u4eec\u9996\u5148\u63d0\u53d6\u5f53\u524d\u68c0\u6d4b\u5bf9\u8c61\u7684\u7c7bID\u548c\u7f6e\u4fe1\u5ea6(\u5373\uff0c\u6982\u7387)(\u7b2c33-35\u884c)\u3002\n\u4ece\u90a3\u91cc\uff0c\u6211\u4eec\u9a8c\u8bc1(1)\u5f53\u524d\u68c0\u6d4b\u5230\u7684\u662f\u4e00\u4e2a\u4eba\uff0c\u4ee5\u53ca(2)\u6ee1\u8db3\u6216\u8d85\u8fc7\u4e86\u6700\u4f4e\u7f6e\u4fe1\u5ea6(\u7b2c40\u884c)\u3002\n\u5047\u8bbe\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u8ba1\u7b97\u8fb9\u754c\u6846\u5750\u6807\uff0c\u7136\u540e\u5bfc\u51fa\u8fb9\u754c\u6846\u7684\u4e2d\u5fc3(\u5373\uff0c\u8d28\u5fc3)(\u7b2c46\u548c47\u884c)\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u662f\u5982\u4f55\u901a\u8fc7\u5148\u524d\u6536\u96c6\u7684\u6846\u67b6\u5c3a\u5bf8\u7f29\u653e(\u5373\u4e58\u4ee5)\u68c0\u6d4b\u7684\u3002\n\u7136\u540e\uff0c\u7b2c51\u548c52\u884c\u4f7f\u7528\u8fb9\u754c\u6846\u5750\u6807\u5bfc\u51fa\u5bf9\u8c61\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u3002\n#\u5e94\u7528\u975e\u6700\u5927\u503c\u6291\u5236\u6765\u6291\u5236\u5f31\u7684\u3001\u91cd\u53e0\u7684#\u5305\u56f4\u76d2idxs=cv2.dnn.NMSBooks(Box\uff0cConfience\uff0cmin_conf\uff0cnms_Thresh)#\u5982\u679clen(Idxs)&gt\uff1b0\uff1a#\u5faa\u73af\u904d\u5386idxs.flatten()\u4e2d\u4e3ai\u4fdd\u5b58\u7684\u7d22\u5f15\uff1a#\u63d0\u53d6\u8fb9\u754c\u6846\u5750\u6807(x\uff0cy)=(boxs[i][0]\uff0cboxs[i][1])(w\uff0ch)=(boxes[i][2]\uff0cboxs[i][3])#\u66f4\u65b0\u6211\u4eec\u7684\u7ed3\u679c\u5217\u8868\uff0c\u4f7f\u5176\u5305\u542bPerson#\u9884\u6d4b\u6982\u7387\u3001\u8fb9\u754c\u6846\u5750\u6807\u3001#\u548c\u8d28\u5fc3r=(\u7f6e\u4fe1\u5ea6[i]\uff0c(x\uff0cy\uff0cx+w\uff0cy+h\u3002Centroids[i])result\u3002append(R)#\u8fd4\u56de\u8fd4\u56de\u7ed3\u679c\u5217\u8868\u3002\n\u975e\u6700\u5927\u503c\u6291\u5236\u7684\u76ee\u7684\u662f\u6291\u5236\u5f31\u7684\u3001\u91cd\u53e0\u7684\u8fb9\u754c\u6846\u3002\u7b2c62\u884c\u5e94\u7528\u6b64\u65b9\u6cd5(\u5b83\u5185\u7f6e\u5230OpenCV\u4e2d)\u5e76\u4ea7\u751f\u68c0\u6d4b\u7684IDX\u3002\n\u5047\u8bbeNMS\u7684\u7ed3\u679c\u81f3\u5c11\u4ea7\u751f\u4e00\u4e2a\u68c0\u6d4b(\u7b2c65\u884c)\uff0c\u6211\u4eec\u5faa\u73af\u904d\u5386\u5b83\u4eec\uff0c\u63d0\u53d6\u8fb9\u754c\u6846\u5750\u6807\uff0c\u5e76\u66f4\u65b0\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u7684\u7ed3\u679c\u5217\u8868\uff1a\n#\u5bfc\u5165\u6240\u9700\u7684\u5305\u4ecepyimagesearch\u6839\u636e\u914d\u7f6e\u4ecepyimagesearch\u5bfc\u5165Social_Distance_config\u3002\u68c0\u6d4b\u5bfc\u5165Detect_Peoplefrom scip.\u7a7a\u95f4\u5bfc\u5165\u8ddd\u79bb\u4f5c\u4e3a\u663e\u793a\u7aef\u53e3\u53f7py\u4f5c\u4e3anpimport argparseimport imutilsimport cv2import os\u3002\n\u7b2c2-9\u884c\u4e2d\u6700\u503c\u5f97\u6ce8\u610f\u7684\u5bfc\u5165\u5305\u62ec\u6211\u4eec\u7684\u914d\u7f6e\u3001\u6211\u4eec\u7684Detect_People\u51fd\u6570\u548c\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u5ea6\u91cf(\u7f29\u5199\u4e3adist\uff0c\u7528\u4e8e\u786e\u5b9a\u8d28\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb)\u3002\n#\u6784\u9020\u53c2\u6570parse\u5e76\u89e3\u6790\u53c2\u6570sap=argparse.ArgumentParser()ap.add_argument(&#34\uff1b-i&#34\uff1b\uff0c&#34\uff1b--input&#34\uff1b\uff0ctype=str\uff0cdefault=&#34\uff1b&#34\uff1b\uff0chelp=&#34\uff1b)ap.add_argument(&#34\uff1b-o&#34\uff1b\uff0c&#34\uff1b--output&#34\uff1b\uff0ctype=str\uff0cdefault=&#34\uff1b&#34\uff1b\uff0chelp=&#34\uff1b)ap.add_argument(&#34\uff1b-o&#34\uff1b\uff0c&#34\uff1b--output&#34\uff1b\uff0ctype=str\uff0cdefault=&#34\uff1b&#34\uff1b\uff0chelp=&#34\uff1b)\u3002(\u53ef\u9009)\u8f93\u51fa\u89c6\u9891\u6587\u4ef6\u7684\u8def\u5f84&#34\uff1b)ap.add_\u53c2\u6570(&#34\uff1b-d&#34\uff1b\uff0c&-display&#34\uff1b\uff0ctype=int\uff0cdefault=1\uff0chelp=&#34\uff1b\u662f\u5426\u5e94\u663e\u793a\u8f93\u51fa\u5e27&#34\uff1b)args=vars(ap.parse_args())\u3002\n--input\uff1a\u53ef\u9009\u89c6\u9891\u6587\u4ef6\u7684\u8def\u5f84\u3002\u5982\u679c\u672a\u63d0\u4f9b\u89c6\u9891\u6587\u4ef6\u8def\u5f84\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u4f7f\u7528\u8ba1\u7b97\u673a\u7684\u7b2c\u4e00\u4e2a\u7f51\u7edc\u6444\u50cf\u5934\u3002\n--OUTPUT\uff1a\u8f93\u51fa(\u5373\u5df2\u5904\u7406)\u89c6\u9891\u6587\u4ef6\u7684\u53ef\u9009\u8def\u5f84\u3002\u5982\u679c\u672a\u63d0\u4f9b\u6b64\u53c2\u6570\uff0c\u5219\u4e0d\u4f1a\u5c06\u5904\u7406\u540e\u7684\u89c6\u9891\u5bfc\u51fa\u5230\u78c1\u76d8\u3002\n--Display\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5728\u5904\u7406\u6bcf\u4e00\u5e27\u65f6\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u6211\u4eec\u7684\u793e\u4ea4\u8ddd\u79bb\u5e94\u7528\u7a0b\u5e8f\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a0\u4ee5\u5728\u540e\u53f0\u5904\u7406\u6d41\u3002\n#LOAD COCO\u7c7b\u6807\u7b7e\u6211\u4eec\u7684YOLO\u6a21\u578b\u662f\u5728labelsPath=os.path.sep.Join([config.MODEL_PATH\uff0c&#34\uff1bCOCO.NAMES&#34\uff1b])Labels=open(labelsPath).read().strip().split(&#34\uff1b\\n&#34\uff1b)#\u4e0a\u5bfc\u51faYOLO\u6743\u91cd\u548c\u6a21\u578b\u914d\u7f6e\u6743\u91cd\u7684\u8def\u5f84Path=os.path.sep.Join([config.MODEL_PATH\uff0c&#34\uff1byolov3.weight&#34\uff1b])configPath=os.path.sep.join([config.MODEL_PATH\uff0c&#34\uff1byolov3.cfg&#34\uff1b])\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u52a0\u8f7d\u6211\u4eec\u7684Load Coco\u6807\u7b7e(\u7b2c22\u548c23\u884c)\uff0c\u5e76\u5b9a\u4e49\u6211\u4eec\u7684YOLO\u8def\u5f84(\u7b2c26\u548c27\u884c)\u3002\n#\u52a0\u8f7d\u6211\u4eec\u5728COCO\u6570\u636e\u96c6(80\u4e2a\u7c7b)\u4e0a\u57f9\u8bad\u7684YOLO\u5bf9\u8c61\u68c0\u6d4b\u5668\u6253\u5370(&#34\uff1b[INFO]\u6b63\u5728\u4ece\u78c1\u76d8\u52a0\u8f7dYOLO.&#34\uff1b)net=cv2.dnn.readNetFromDarknet(configPath\uff0cWeight tsPath)#\u68c0\u67e5\u6211\u4eec\u662f\u5426\u8981\u4f7f\u7528GPUif config.USE_GPU\uff1a#\u5c06CUDA\u8bbe\u7f6e\u4e3a\u9996\u9009\u7684\u540e\u7aef\u548c\u76ee\u6807\u6253\u5370(&#34\uff1b[info]\u5c06\u9996\u9009\u7684\u540e\u7aef\u548c\u76ee\u6807\u8bbe\u7f6e\u4e3aCUDA.&#34\uff1b)\u3002\n\u4f7f\u7528OpenCV\u7684DNN\u6a21\u5757\uff0c\u6211\u4eec\u5c06YOLO\u7f51\u7edc\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d(\u7b2c31\u884c)\u3002\u5982\u679c\u60a8\u5728\u914d\u7f6e\u4e2d\u8bbe\u7f6e\u4e86USE_GPU\u9009\u9879\uff0c\u5219\u540e\u7aef\u5904\u7406\u5668\u5c06\u8bbe\u7f6e\u4e3a\u652f\u6301NVIDIA CUDA\u7684GPU\u3002\u5982\u679c\u60a8\u6ca1\u6709\u652f\u6301CUDA\u7684GPU\uff0c\u8bf7\u786e\u4fdd\u5c06\u914d\u7f6e\u9009\u9879\u8bbe\u7f6e\u4e3aFalse\uff0c\u4ee5\u4fbf\u60a8\u7684CPU\u662f\u4f7f\u7528\u7684\u5904\u7406\u5668\u3002\n#\u4eceYOLOln=net.getLayerNames()ln=[ln[i[0]-1]for i in net.getUnconnectedOutLayers()]#\u521d\u59cb\u5316\u89c6\u9891\u6d41\u548c\u6307\u5411\u8f93\u51fa\u89c6\u9891\u6587\u4ef6\u7684\u6307\u9488(&#34\uff1b[info]\u8bbf\u95ee\u89c6\u9891\u6d41.&#34\uff1b)vs=cv2\u3002VideoCapture(args[&#34\uff1binput&#34\uff1b]if args[&#34\uff1binput&#34\uff1b]\u3002\n\u8fd9\u91cc\uff0c\u7b2c41\u548c42\u884c\u6536\u96c6\u4e86\u6765\u81eaYOLO\u7684\u8f93\u51fa\u5c42\u540d\u79f0\uff1b\u6211\u4eec\u9700\u8981\u5b83\u4eec\u6765\u5904\u7406\u6211\u4eec\u7684\u7ed3\u679c\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u6211\u4eec\u7684\u89c6\u9891\u6d41(\u901a\u8fc7--input\u547d\u4ee4\u884c\u53c2\u6570\u7684\u89c6\u9891\u6587\u4ef6\u6216\u7f51\u7edc\u6444\u50cf\u673a\u6d41)\u7b2c46\u884c\u3002\n\u76ee\u524d\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u89c6\u9891\u5199\u5165\u5668\u521d\u59cb\u5316\u4e3aNone\u3002\u8fdb\u4e00\u6b65\u7684\u8bbe\u7f6e\u53d1\u751f\u5728\u5e27\u5904\u7406\u5faa\u73af\u4e2d\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u51c6\u5907\u5f00\u59cb\u5904\u7406\u6846\u67b6\uff0c\u5e76\u786e\u5b9a\u4eba\u4eec\u662f\u5426\u4fdd\u6301\u5b89\u5168\u7684\u793e\u4ea4\u8ddd\u79bb\uff1a\n#\u5faa\u73af\u904d\u5386\u89c6\u9891\u6d41\u4e2d\u7684\u5e27\uff0c\u800cTrue\uff1a#\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e0b\u4e00\u5e27(\u5df2\u6293\u53d6\uff0c\u5e27)=vs.read()#\u5982\u679c\u672a\u6293\u53d6\u5e27\uff0c\u5219\u6211\u4eec\u5df2\u5230\u8fbe\u6d41\u7684\u672b\u5c3e#\u5982\u679c\u672a\u6293\u53d6\uff1aBreak#\u8c03\u6574\u5e27\u5927\u5c0f\uff0c\u7136\u540e\u68c0\u6d4b\u5176\u4e2d\u7684\u4eba(\u4e14\u4ec5\u68c0\u6d4b\u4eba)frame=imutils.resize(frame\uff0cwidth=700)Results=Detect_People(frame\uff0cnet\uff0cln\uff0cPersonIdx=LABELS.index(&#34\uff1bPerson&#\u3002\n\u6211\u4eec\u7528\u4e8e\u6d4b\u8bd5\u7684\u8f93\u5165\u89c6\u9891\u7684\u5c3a\u5bf8\u76f8\u5f53\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u4fdd\u6301\u7eb5\u6a2a\u6bd4\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u8c03\u6574\u6bcf\u4e00\u5e27\u7684\u5927\u5c0f(\u7b2c60\u884c)\u3002\n\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u5b9e\u73b0\u7684Detect_People\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u83b7\u53d6YOLO\u5bf9\u8c61\u68c0\u6d4b\u7684\u7ed3\u679c(\u7b2c61\u548c62\u884c)\u3002\u5982\u679c\u9700\u8981\u5237\u65b0\u51fd\u6570\u8c03\u7528\u6240\u9700\u7684\u8f93\u5165\u53c2\u6570\u6216\u8f93\u51fa\u7ed3\u679c\u7684\u683c\u5f0f\uff0c\u8bf7\u52a1\u5fc5\u53c2\u8003\u4e0a\u4e00\u8282\u4e2d\u7684\u6e05\u5355\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5728\u7b2c66\u884c\u521d\u59cb\u5316\u6211\u4eec\u7684\u8fdd\u89c4\u96c6\u5408\uff1b\u8be5\u96c6\u5408\u7ef4\u62a4\u8fdd\u53cd\u516c\u5171\u536b\u751f\u4e13\u4e1a\u4eba\u5458\u5236\u5b9a\u7684\u793e\u4f1a\u8ddd\u79bb\u89c4\u5219\u7684\u4eba\u7684\u5217\u8868\u3002\n\u6211\u4eec\u73b0\u5728\u51c6\u5907\u68c0\u67e5\u753b\u9762\u4e2d\u4eba\u7269\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1a\n\u5982\u679clen(Results)&gt\uff1b=2\uff1a#\u4ece\u7ed3\u679c\u4e2d\u63d0\u53d6\u6240\u6709\u8d28\u5fc3\u5e76\u8ba1\u7b97\u6240\u6709\u8d28\u5fc3\u5bf9\u4e4b\u95f4\u7684#\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb=np.array([r[2]for r in Results])D=dis.cdist(\u8d28\u5fc3\uff0c\u8d28\u5fc3\uff0c\u6307\u6807=&#34\uff1b\u6b27\u51e0\u91cc\u5f97&#34\uff1b)#\u5728\u8303\u56f4(0\uff0cD.Shape[0])\u7684\u8ddd\u79bb\u77e9\u9635\u7684\u4e0a\u4e09\u89d2\u5f62\u4e0a\u5faa\u73af\uff1a\u5bf9\u4e8e\u8303\u56f4(i+1\uff0cD.Shape[1])\u4e2d\u7684j\uff1a#\u5982\u679cD[i\uff0cj]&lt\uff1bconfig.MIN_DISTANCE\uff1a#\u4f7f\u7528#\u8fdd\u53cd\u7684\u8d28\u5fc3\u5bf9\u7684\u7d22\u5f15\u66f4\u65b0\u6211\u4eec\u7684\u8fdd\u4f8b\u96c6\u5408\u3002add(I)Violate.add(J)\uff0c\u67e5\u770b\u4efb\u610f\u4e24\u4e2a#\u8d28\u5fc3\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e\u914d\u7f6e\u7684\u50cf\u7d20\u6570#\u3002\n\u5047\u8bbe\u5728\u5e27(\u7b2c70\u884c)\u4e2d\u81f3\u5c11\u68c0\u6d4b\u5230\u4e24\u4e2a\u4eba\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u4ece\u7b2c77\u884c\u548c\u7b2c78\u884c\u5f00\u59cb\uff0c\u5728\u8ddd\u79bb\u77e9\u9635\u7684\u4e0a\u4e09\u89d2\u5f62\u4e0a\u5faa\u73af(\u56e0\u4e3a\u77e9\u9635\u662f\u5bf9\u79f0\u7684\u3002\n\u68c0\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u8ddd\u79bb\u662f\u5426\u8fdd\u53cd\u4e86\u516c\u5171\u536b\u751f\u4e13\u4e1a\u4eba\u5458\u89c4\u5b9a\u7684\u6700\u5c0f\u793e\u4ea4\u8ddd\u79bb(\u7ebf\u8def82)\u3002\u5982\u679c\u4e24\u4e2a\u4eba\u8ddd\u79bb\u592a\u8fd1\uff0c\u6211\u4eec\u4f1a\u5c06\u4ed6\u4eec\u6dfb\u52a0\u5230\u8fdd\u89c4\u96c6\u5408\u4e2d\u3002\n\u6211\u8bf4\uff0c\u4e00\u70b9\u4e5f\u4e0d\u597d\u73a9\uff01\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528\u77e9\u5f62\u3001\u5706\u5f62\u548c\u6587\u672c\u6765\u6ce8\u91ca\u6211\u4eec\u7684\u6846\u67b6\uff1a\n#\u5faa\u73af\u679a\u4e3e(Results)\u4e2d(i\uff0c(prob\uff0cbbox\uff0ccentroid))\u7684\u7ed3\u679c\uff1a#\u63d0\u53d6\u8fb9\u754c\u6846\u548c\u8d28\u5fc3\u5750\u6807\uff0c\u7136\u540e#\u521d\u59cb\u5316\u6279\u6ce8\u7684\u989c\u8272(startX\uff0cstarty\uff0cendX\uff0cendy)=bbox(cx\uff0ccy)=centroid color=(0,255\uff0c0)#\u5982\u679c\u8fdd\u89c4\u96c6\u4e2d\u5b58\u5728\u7d22\u5f15\u5bf9\uff0c\u5219#\u5982\u679ci\u5728Violation\u4e2d\u66f4\u65b0\u989c\u8272\uff1acolor=(0\uff0c0,255)cv2.Rectangle(Frame\uff0c(StartX\uff0cstarty)\uff0c(endX\uff0cEndy)\uff0ccolor\uff0c2)cv2.Circle(Frame\uff0c(cx\uff0cCy)\uff0c5\uff0ccolor\uff0c1)#\u7ed8\u5236#\u8f93\u51faFrame text=&#34\uff1b\u793e\u4ea4\u8ddd\u79bb\u8fdd\u89c4\uff1a{}&#34\uff1b.format(len(\u8fdd\u89c4))cv2.putText(frame\uff0ctext\uff0c(10\uff0cframe.shape[0]-25)\uff0ccv2.FONT_Hershey_Simplex\uff0c0.85\uff0c(0\uff0c0,255)\uff0c3)\u3002\n\u68c0\u67e5\u5f53\u524d\u7d22\u5f15\u662f\u5426\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u8fdd\u89c4\u96c6\u4e2d\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u5c06\u989c\u8272\u66f4\u65b0\u4e3a\u7ea2\u8272(\u7b2c98\u548c99\u884c)\u3002\n\u7ed8\u5236\u4eba\u7269\u7684\u8fb9\u754c\u6846\u548c\u4ed6\u4eec\u7684\u5bf9\u8c61\u8d28\u5fc3(\u7ebf103\u548c104)\u3002\u6bcf\u4e2a\u90fd\u662f\u989c\u8272\u534f\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u770b\u770b\u54ea\u4e9b\u4eba\u79bb\u5f97\u592a\u8fd1\u3002\n\u663e\u793a\u6709\u5173\u793e\u4ea4\u8ddd\u79bb\u8fdd\u89c4\u603b\u6570\u7684\u4fe1\u606f(\u6211\u4eec\u8fdd\u89c4\u96c6\u5408\u7684\u957f\u5ea6(\u7b2c108-110\u884c)\n#\u5982\u679cargs[&#34\uff1bdisplay&#34\uff1b]&gt\uff1b0\uff1a#show the output frame cv2.imshow(&#34\uff1bframe&#34\uff1b\uff0cframe)key=cv2.waitKey(1)&amp\uff1b0xFF#\u5982\u679c\u6309\u4e0b\u4e86`q`\u952e\uff0c\u5982\u679ckey==order(&#34\uff1bq&#34\uff1b)\uff1aBreak#\u5982\u679c\u63d0\u4f9b\u4e86\u8f93\u51fa\u89c6\u9891\u6587\u4ef6\u8def\u5f84\uff0c\u5219\u4e2d\u65ad\u5faa\u73af\u3002\u4ea7\u51fa&#34\uff1b]\uff01=&#34\uff1b&#34\uff1b\u4e14Writer\u4e3aNone\uff1a#Initialize our video Writer Fourcc=cv2.VideoWriter_Fourcc(*&#34\uff1bMJPG&#34\uff1b)Writer=cv2.VideoWriter(args[&#34\uff1boutput&#34\uff1b]\uff0courcc\uff0c25\uff0c(frame.Shape[1]\uff0cframe.Shape[0])\uff0cTrue)#\u5982\u679c\u89c6\u9891\u7f16\u5199\u5668\u4e0d\u4e3aNone\uff0c\u8bf7\u5c06\u5e27\u5199\u5165\u8f93\u51fa#video file if Writer\u3002\n\u5728\u7b49\u5f85\u6309\u4e0bQ(\u9000\u51fa)\u952e\u65f6(\u7b2c117-121\u884c)\uff0c\u5982\u679c\u9700\u8981\uff0c\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u5e27(\u7b2c114-116\u884c)\u3002\n\u786e\u4fdd\u4f7f\u7528\u672c\u6559\u7a0b\u7684\u201c\u4e0b\u8f7d\u201d\u90e8\u5206\u4e0b\u8f7d\u6e90\u4ee3\u7801\u548c\u793a\u4f8b\u6f14\u793a\u89c6\u9891\u3002\n$time python Social_Distance_Detector.py--\u8f93\u5165\u884c\u4eba.mp4\\-\u8f93\u51fa\u8f93\u51fa\u3002avi--display 0[info]\u6b63\u5728\u4ece\u78c1\u76d8\u52a0\u8f7dYOLO.[info]\u8bbf\u95ee\u89c6\u9891\u6d41.real 3m43.120suser 23m20.616ssys 0m25.824s\u3002\n\u5728\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u80fd\u591f\u5728\u6211\u7684CPU\u4e0a\u4ee53m43s\u7684\u901f\u5ea6\u5904\u7406\u6574\u4e2a\u89c6\u9891\uff0c\u7ed3\u679c\u663e\u793a\uff0c\u6211\u4eec\u7684\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u6b63\u786e\u5730\u6807\u8bb0\u4e86\u8fdd\u53cd\u793e\u4ea4\u8ddd\u79bb\u89c4\u5219\u7684\u4eba\u3002\n\u5f53\u524d\u5b9e\u73b0\u7684\u95ee\u9898\u662f\u901f\u5ea6\u3002\u6211\u4eec\u7684\u57fa\u4e8eCPU\u7684\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668\u83b7\u5f97\u4e86~2.3FPS\uff0c\u8fd9\u5bf9\u4e8e\u5b9e\u65f6\u5904\u7406\u6765\u8bf4\u592a\u6162\u4e86\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7(1)\u4f7f\u7528\u652f\u6301NVIDIA CUDA\u7684GPU\u548c(2)\u7f16\u8bd1/\u5b89\u88c5\u652f\u6301NVIDIA GPU\u7684OpenCV\u201cdnn\u201d\u6a21\u5757\u6765\u83b7\u5f97\u66f4\u9ad8\u7684\u5e27\u5904\u7406\u901f\u7387\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86\u652f\u6301NVIDIA GPU\u7684OpenCV\uff0c\u5219\u53ea\u9700\u5728Social_Distance_config.py\u6587\u4ef6\u4e2d\u8bbe\u7f6euse_gpu=True\u5373\u53ef\uff1a\n$time python Social_Distance_Detector.py--\u8f93\u5165\u884c\u4eba.mp4\\-\u8f93\u51fa\u8f93\u51fa\u3002avi--display 0[info]\u6b63\u5728\u4ece\u78c1\u76d8\u52a0\u8f7dYOLO.[info]\u5c06\u9996\u9009\u540e\u7aef\u548c\u76ee\u6807\u8bbe\u7f6e\u4e3aCUDA.[info]\u8bbf\u95ee\u89c6\u9891\u6d41.real 0m56.008suser 1m15.772ssys 0m7.036s\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u7528\u4e8656\u79d2\u5c31\u5904\u7406\u4e86\u6574\u4e2a\u89c6\u9891\uff0c\u76f8\u5f53\u4e8e~9.38 FPS\uff0c\u8fd9\u662f307%\u7684\u52a0\u901f\uff01\n\u6b63\u5982\u672c\u6559\u7a0b\u524d\u9762\u63d0\u5230\u7684\u3002\n..", "note_en": "In this tutorial, you will learn how to implement a COVID-19 social distancing detector using OpenCV, Deep Learning, and Computer Vision.\n  I\u2019ve seen a number of people in the computer vision community implementing \u201csocial distancing detectors\u201d, but I\u2019m not sure how they work.\n Min-Jun is correct \u2014 I\u2019ve seen a number of social distancing detector implementations on social media, my favorite ones being from  reddit user danlapko and  Rohit Kumar Srivastava\u2019s implementation.\n Today, I\u2019m going to provide you with a starting point for your own social distancing detector. You can then extend it as you see fit to develop your own projects.\n    In the first part of this tutorial, we\u2019ll briefly discuss what social distancing is and how OpenCV and deep learning can be used to implement a social distancing detector.\n  Our  detect_people utility function, which detects people in video streams using the  YOLO object detector\n Our Python driver script, which glues all the pieces together into a full-fledged OpenCV social distancing detector\n We\u2019ll wrap up the post by reviewing the results, including a brief discussion on limitations and future improvements.\n    As the name suggests, social distancing implies that  people should physically distance themselves from one another, reducing close contact, and thereby reducing the spread of a contagious disease (such as coronavirus):\n  Social distancing is not a new concept, dating back to the fifth century ( source), and has even been referenced in religious texts such as the Bible:\n And the leper in whom the plague is \u2026 he shall dwell alone; [outside] the camp shall his habitation be. \u2014 Leviticus 13:46\n Social distancing is arguably the most effective nonpharmaceutical way to prevent the spread of a disease \u2014 by definition, if people are not close together, they cannot spread germs.\n     Apply  object detection to detect all people (and  only people) in a video stream (see this tutorial on building an  OpenCV people counter)\n  Based on these distances,  check to see if any two people are less than  N pixels apart\n For the most accurate results, you should  calibrate your camera through intrinsic/extrinsic parameters so that you can map  pixels to  measurable units.\n An easier alternative (but less accurate) method would be to apply triangle similarity calibration (as discussed in  this tutorial).\n  Finally, if you do not want/cannot apply camera calibration, you can  still utilize a social distancing detector, but you\u2019ll have to rely strictly on the pixel distances, which won\u2019t necessarily be as accurate.\n For the sake of simplicity, our OpenCV social distancing detector implementation will rely on pixel distances \u2014 I will leave it as an exercise for you, the reader, to extend the implementation as you see fit.\n  Be sure to grab the code from the   \u201cDownloads\u201d section of this blog post. From there, extract the files, and use the  tree command to see how our project is organized:\n $ tree --dirsfirst.\u251c\u2500\u2500 pyimagesearch\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\u2502\u00a0\u00a0 \u251c\u2500\u2500 detection.py\u2502\u00a0\u00a0 \u2514\u2500\u2500 social_distancing_config.py\u251c\u2500\u2500 yolo-coco\u2502\u00a0\u00a0 \u251c\u2500\u2500 coco.names\u2502\u00a0\u00a0 \u251c\u2500\u2500 yolov3.cfg\u2502\u00a0\u00a0 \u2514\u2500\u2500 yolov3.weights\u251c\u2500\u2500 output.avi\u251c\u2500\u2500 pedestrians.mp4\u2514\u2500\u2500 social_distance_detector.py2 directories, 9 files\n Our YOLO object detector files including the CNN architecture definition, pre-trained weights, and class names are housed in the  yolo-coco/ directory. This YOLO model is compatible with OpenCV\u2019s DNN module.\n  detection.py: YOLO object detection with OpenCV involves more lines of code that some easier models. I\u2019ve decided to put the object detection logic in a function in this file for convenience. Doing so frees up our driver script\u2019s frame processing loop from becoming especially cluttered.\n Our social distance detector application logic resides in the  social_distance_detector.py script. This file is responsible for looping over frames of a video stream and ensuring that people are maintaining a healthy distance from one another during a pandemic. It is compatible with both video files and webcam streams.\n Our input video file is  pedestrians.mp4 and comes from TRIDE\u2019s   Test video for object detection. The  output.avi file contains the processed output file.\n   To help keep our code tidy and organized, we\u2019ll be using a configuration file to store important variables.\n Let\u2019s take a look at them now \u2014 open up the  social_distancing_config.py file inside the  pyimagesearch module, and take a peek:\n # base path to YOLO directoryMODEL_PATH = &#34;yolo-coco&#34;# initialize minimum probability to filter weak detections along with# the threshold when applying non-maxima suppressionMIN_CONF = 0.3NMS_THRESH = 0.3\n Here, we have the path to the YOLO object detection model ( Line 2). We also define the minimum object detection confidence and  non-maxima suppression threshold.\n  # boolean indicating if NVIDIA CUDA GPU should be usedUSE_GPU = False# define the minimum safe distance (in pixels) that two people can be# from each otherMIN_DISTANCE = 50\n The  USE_GPU boolean on  Line 10 indicates whether your NVIDIA CUDA-capable GPU will be used to speed up inference (requires that  OpenCV\u2019s \u201cdnn\u201d module be installed with NVIDIA GPU support).\n Line 14 defines the minimum distance (in pixels) that people must stay from each other in order to adhere to social distancing protocols.\n   We\u2019ll be using the  YOLO object detector to detect people in our video stream.\n Using YOLO with OpenCV requires a bit more output processing than other object detection methods (such as  Single Shot Detectors or Faster R-CNN), so in order to keep our code tidy, let\u2019s implement a  detect_people function that encapsulates any YOLO object detection logic.\n Open up the  detection.py file inside the  pyimagesearch module, and let\u2019s get started:\n # import the necessary packagesfrom .social_distancing_config import NMS_THRESHfrom .social_distancing_config import MIN_CONFimport numpy as npimport cv2\n We begin with imports, including those needed from our configuration file on  Lines 2 and 3 \u2014 the  NMS_THRESH and  MIN_CONF (refer to the previous section as needed). We\u2019ll also take advantage of NumPy and OpenCV in this script ( Lines 4 and 5).\n Our script consists of a single function definition for detecting people \u2014 let\u2019s define that function now:\n def detect_people(frame, net, ln, personIdx=0):\t# grab the dimensions of the frame and initialize the list of\t# results\t(H, W) = frame.shape[:2]\tresults = []\n  personIdx: The YOLO model can detect many types of objects; this index is specifically for the person class, as we won\u2019t be considering other objects\n  We then initialize our  results list, which the function ultimately returns. The  results consist of (1) the person prediction probability, (2) bounding box coordinates for the detection, and (3) the centroid of the object.\n  # construct a blob from the input frame and then perform a forward\t# pass of the YOLO object detector, giving us our bounding boxes\t# and associated probabilities\tblob = cv2.dnn.blobFromImage(frame, 1 / 255.0, (416, 416),\t\tswapRB=True, crop=False)\tnet.setInput(blob)\tlayerOutputs = net.forward(ln)\t# initialize our lists of detected bounding boxes, centroids, and\t# confidences, respectively\tboxes = []\tcentroids = []\tconfidences = []\n Pre-processing our  frame requires that we  construct a blob ( Lines 16 and 17). From there, we are able to perform object detection with YOLO and OpenCV ( Lines 18 and 19).\n Lines 23-25 initialize lists that will soon hold our bounding  boxes, object  centroids, and object detection  confidences.\n  # loop over each of the layer outputs\tfor output in layerOutputs:\t\t# loop over each of the detections\t\tfor detection in output:\t\t\t# extract the class ID and confidence (i.e., probability)\t\t\t# of the current object detection\t\t\tscores = detection[5:]\t\t\tclassID = np.argmax(scores)\t\t\tconfidence = scores[classID]\t\t\t# filter detections by (1) ensuring that the object\t\t\t# detected was a person and (2) that the minimum\t\t\t# confidence is met\t\t\tif classID == personIdx and confidence &gt; MIN_CONF:\t\t\t\t# scale the bounding box coordinates back relative to\t\t\t\t# the size of the image, keeping in mind that YOLO\t\t\t\t# actually returns the center (x, y)-coordinates of\t\t\t\t# the bounding box followed by the boxes&#39; width and\t\t\t\t# height\t\t\t\tbox = detection[0:4] * np.array([W, H, W, H])\t\t\t\t(centerX, centerY, width, height) = box.astype(&#34;int&#34;)\t\t\t\t# use the center (x, y)-coordinates to derive the top\t\t\t\t# and and left corner of the bounding box\t\t\t\tx = int(centerX - (width / 2))\t\t\t\ty = int(centerY - (height / 2))\t\t\t\t# update our list of bounding box coordinates,\t\t\t\t# centroids, and confidences\t\t\t\tboxes.append([x, y, int(width), int(height)])\t\t\t\tcentroids.append((centerX, centerY))\t\t\t\tconfidences.append(float(confidence))\n Looping over each of the  layerOutputs and detections ( Lines 28-30), we first extract the  classID and  confidence (i.e., probability) of the current detected object ( Lines 33-35).\n From there, we verify that (1) the current detection is a person and (2) the minimum confidence is met or exceeded ( Line 40).\n Assuming so, we compute bounding box coordinates and then derive the center (i.e., centroid) of the bounding box ( Lines 46 and 47). Notice how we scale (i.e., multiply) our  detection by the frame dimensions we gathered earlier.\n Using the bounding box coordinates,  Lines 51 and 52 then derive the  top-left coordinates for the object.\n   # apply non-maxima suppression to suppress weak, overlapping\t# bounding boxes\tidxs = cv2.dnn.NMSBoxes(boxes, confidences, MIN_CONF, NMS_THRESH)\t# ensure at least one detection exists\tif len(idxs) &gt; 0:\t\t# loop over the indexes we are keeping\t\tfor i in idxs.flatten():\t\t\t# extract the bounding box coordinates\t\t\t(x, y) = (boxes[i][0], boxes[i][1])\t\t\t(w, h) = (boxes[i][2], boxes[i][3])\t\t\t# update our results list to consist of the person\t\t\t# prediction probability, bounding box coordinates,\t\t\t# and the centroid\t\t\tr = (confidences[i], (x, y, x + w, y + h), centroids[i])\t\t\tresults.append(r)\t# return the list of results\treturn results\n The purpose of non-maxima suppression is to suppress weak, overlapping bounding boxes.  Line 62 applies this method (it is built-in to OpenCV) and results in the  idxs of the detections.\n Assuming the result of NMS yields at least one detection ( Line 65), we loop over them, extract bounding box coordinates, and update our  results list consisting of the:\n      # import the necessary packagesfrom pyimagesearch import social_distancing_config as configfrom pyimagesearch.detection import detect_peoplefrom scipy.spatial import distance as distimport numpy as npimport argparseimport imutilsimport cv2import os\n The most notable imports on  Lines 2-9 include our  config, our  detect_people function, and the Euclidean  distance metric (shortened to  dist and to be used to determine the distance between centroids).\n  # construct the argument parse and parse the argumentsap = argparse.ArgumentParser()ap.add_argument(&#34;-i&#34;, &#34;--input&#34;, type=str, default=&#34;&#34;,\thelp=&#34;path to (optional) input video file&#34;)ap.add_argument(&#34;-o&#34;, &#34;--output&#34;, type=str, default=&#34;&#34;,\thelp=&#34;path to (optional) output video file&#34;)ap.add_argument(&#34;-d&#34;, &#34;--display&#34;, type=int, default=1,\thelp=&#34;whether or not output frame should be displayed&#34;)args = vars(ap.parse_args())\n  --input: The path to the  optional video file.  If no video file path is provided, your computer\u2019s first webcam will be used by default.\n --output: The  optional path to an output (i.e., processed) video file. If this argument is not provided, the processed video will  not be exported to disk.\n --display: By default, we\u2019ll display our social distance application on-screen as we process each frame. Alternatively, you can set this value to  0 to process the stream in the background.\n  # load the COCO class labels our YOLO model was trained onlabelsPath = os.path.sep.join([config.MODEL_PATH, &#34;coco.names&#34;])LABELS = open(labelsPath).read().strip().split(&#34;\\n&#34;)# derive the paths to the YOLO weights and model configurationweightsPath = os.path.sep.join([config.MODEL_PATH, &#34;yolov3.weights&#34;])configPath = os.path.sep.join([config.MODEL_PATH, &#34;yolov3.cfg&#34;])\n Here, we load our load COCO labels ( Lines 22 and 23) as well as define our YOLO paths ( Lines 26 and 27).\n  # load our YOLO object detector trained on COCO dataset (80 classes)print(&#34;[INFO] loading YOLO from disk...&#34;)net = cv2.dnn.readNetFromDarknet(configPath, weightsPath)# check if we are going to use GPUif config.USE_GPU:\t# set CUDA as the preferable backend and target\tprint(&#34;[INFO] setting preferable backend and target to CUDA...&#34;)\tnet.setPreferableBackend(cv2.dnn.DNN_BACKEND_CUDA)\tnet.setPreferableTarget(cv2.dnn.DNN_TARGET_CUDA)\n Using OpenCV\u2019s DNN module, we load our YOLO  net into memory ( Line 31). If you have the  USE_GPU option set in the  config, then the  backend processor is set to be your NVIDIA CUDA-capable GPU. If you don\u2019t have a CUDA-capable GPU, ensure that the configuration option is set to  False so that your CPU is the processor used.\n  # determine only the *output* layer names that we need from YOLOln = net.getLayerNames()ln = [ln[i[0] - 1] for i in net.getUnconnectedOutLayers()]# initialize the video stream and pointer to output video fileprint(&#34;[INFO] accessing video stream...&#34;)vs = cv2.VideoCapture(args[&#34;input&#34;] if args[&#34;input&#34;] else 0)writer = None\n Here,  Lines 41 and 42 gather the output layer names from YOLO; we\u2019ll need them in order to process our results.\n We then start our video stream (either a video file via the  --input command line argument or a webcam stream)  Line 46.\n For now, we initialize our output video  writer to  None. Further setup occurs in the frame processing loop.\n Finally, we\u2019re ready to begin processing frames and determining if people are maintaining safe social distance:\n # loop over the frames from the video streamwhile True:\t# read the next frame from the file\t(grabbed, frame) = vs.read()\t# if the frame was not grabbed, then we have reached the end\t# of the stream\tif not grabbed:\t\tbreak\t# resize the frame and then detect people (and only people) in it\tframe = imutils.resize(frame, width=700)\tresults = detect_people(frame, net, ln,\t\tpersonIdx=LABELS.index(&#34;person&#34;))\t# initialize the set of indexes that violate the minimum social\t# distance\tviolate = set()\n  The dimensions of our input video for testing are quite large, so we  resize each  frame while maintaining aspect ratio ( Line 60).\n Using our  detect_people function implemented in the previous section, we grab  results of YOLO object detection ( Lines 61 and 62). If you need a refresher on the  input parameters required or the format of the  output  results for the function call, be sure to refer to the listing in the previous section.\n We then initialize our  violate set on  Line 66; this set maintains a listing of people who violate social distance regulations set forth by public health professionals.\n We\u2019re now ready to check the distances among the people in the frame:\n # ensure there are *at least* two people detections (required in\t# order to compute our pairwise distance maps)\tif len(results) &gt;= 2:\t\t# extract all centroids from the results and compute the\t\t# Euclidean distances between all pairs of the centroids\t\tcentroids = np.array([r[2] for r in results])\t\tD = dist.cdist(centroids, centroids, metric=&#34;euclidean&#34;)\t\t# loop over the upper triangular of the distance matrix\t\tfor i in range(0, D.shape[0]):\t\t\tfor j in range(i + 1, D.shape[1]):\t\t\t\t# check to see if the distance between any two\t\t\t\t# centroid pairs is less than the configured number\t\t\t\t# of pixels\t\t\t\tif D[i, j] &lt; config.MIN_DISTANCE:\t\t\t\t\t# update our violation set with the indexes of\t\t\t\t\t# the centroid pairs\t\t\t\t\tviolate.add(i)\t\t\t\t\tviolate.add(j)\n Assuming that at least two people were detected in the frame ( Line 70), we proceed to:\n Loop over the upper triangular of distance matrix (since the matrix is symmetrical) beginning on  Lines 77 and 78\n Check to see if the distance violates our minimum social distance set forth by public health professionals ( Line 82). If two people are too close, we add them to the  violate set\n  No fun at all, I say! So let\u2019s annotate our frame with rectangles, circles, and text:\n # loop over the results\tfor (i, (prob, bbox, centroid)) in enumerate(results):\t\t# extract the bounding box and centroid coordinates, then\t\t# initialize the color of the annotation\t\t(startX, startY, endX, endY) = bbox\t\t(cX, cY) = centroid\t\tcolor = (0, 255, 0)\t\t# if the index pair exists within the violation set, then\t\t# update the color\t\tif i in violate:\t\t\tcolor = (0, 0, 255)\t\t# draw (1) a bounding box around the person and (2) the\t\t# centroid coordinates of the person,\t\tcv2.rectangle(frame, (startX, startY), (endX, endY), color, 2)\t\tcv2.circle(frame, (cX, cY), 5, color, 1)\t# draw the total number of social distancing violations on the\t# output frame\ttext = &#34;Social Distancing Violations: {}&#34;.format(len(violate))\tcv2.putText(frame, text, (10, frame.shape[0] - 25),\t\tcv2.FONT_HERSHEY_SIMPLEX, 0.85, (0, 0, 255), 3)\n  Check to see if the current index exists in our  violate set, and if so, update the  color to  red ( Lines 98 and 99)\n Draw both the bounding box of the person and their object centroid ( Lines 103 and 104). Each is  color-coordinated, so we\u2019ll see which people are too close.\n Display information on the total number of social distancing violations (the length of our  violate set ( Lines 108-110)\n  # check to see if the output frame should be displayed to our\t# screen\tif args[&#34;display&#34;] &gt; 0:\t\t# show the output frame\t\tcv2.imshow(&#34;Frame&#34;, frame)\t\tkey = cv2.waitKey(1) &amp; 0xFF\t\t# if the `q` key was pressed, break from the loop\t\tif key == ord(&#34;q&#34;):\t\t\tbreak\t# if an output video file path has been supplied and the video\t# writer has not been initialized, do so now\tif args[&#34;output&#34;] != &#34;&#34; and writer is None:\t\t# initialize our video writer\t\tfourcc = cv2.VideoWriter_fourcc(*&#34;MJPG&#34;)\t\twriter = cv2.VideoWriter(args[&#34;output&#34;], fourcc, 25,\t\t\t(frame.shape[1], frame.shape[0]), True)\t# if the video writer is not None, write the frame to the output\t# video file\tif writer is not None:\t\twriter.write(frame)\n  Display the frame to the screen if required ( Lines 114-116) while waiting for the  q (quit) key to be pressed ( Lines 117-121)\n   Make sure you use the   \u201cDownloads\u201d section of this tutorial to download the source code and example demo video.\n  $ time python social_distance_detector.py --input pedestrians.mp4 \\\t--output output.avi --display 0[INFO] loading YOLO from disk...[INFO] accessing video stream...real 3m43.120suser 23m20.616ssys 0m25.824s\n  Here, you can see that I was able to process the entire video in 3m43s on my CPU, and as the results show,  our social distancing detector is correctly marking people who violate social distancing rules.\n The problem with this current implementation is  speed. Our CPU-based social distancing detector is obtaining  ~2.3 FPS, which is  far too slow for real-time processing.\n You can obtain a higher frame processing rate by (1) utilizing an NVIDIA CUDA-capable GPU and (2)  compiling/installing OpenCV\u2019s \u201cdnn\u201d module with NVIDIA GPU support.\n Provided you already have OpenCV installed with NVIDIA GPU support, all you need to do is set  USE_GPU = True in your  social_distancing_config.py file:\n    $ time python social_distance_detector.py --input pedestrians.mp4 \\\t--output output.avi --display 0[INFO] loading YOLO from disk...[INFO] setting preferable backend and target to CUDA...[INFO] accessing video stream...real 0m56.008suser 1m15.772ssys 0m7.036s\n Here, we processed the entire video in only 56 seconds, amounting to  ~9.38 FPS, which is a  307% speedup!\n  As already mentioned earlier in this tu\n......", "posttime": "2020-06-02 07:31:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ddd\u79bb,distancing,\u68c0\u6d4b", "title": "\u793e\u4ea4\u8ddd\u79bb\u68c0\u6d4b\u5668", "title_en": "Social Distancing Detector", "transed": 1, "url": "https://www.pyimagesearch.com/2020/06/01/opencv-social-distancing-detector/", "via": "", "real_tags": ["\u8ddd\u79bb", "\u68c0\u6d4b"]}, {"category": "", "categoryclass": "", "imagename": "c57ff7163517e348ab3d81e7dece1198.png", "infoid": 1004758, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e94\u5927\u4f17\u9700\u6c42\uff0c\u5feb\u901f\u4ecb\u7ecdMPWTest(\u201c\u53ef\u80fd\u5de5\u4f5c\u7684\u6700\u7b80\u5355\u7684\u6d4b\u8bd5\u6846\u67b6\u201d)\uff0c\u8fd9\u662f\u6211\u81ea\u5df1\u7684\u4e2a\u4eba\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u4f7fTDD\u53d8\u5f97\u5feb\u901f\u3001\u6709\u8da3\u548c\u987a\u7545\u3002\u6211\u4e4b\u6240\u4ee5\u521b\u5efaMPWTest\uff0c\u662f\u56e0\u4e3a\u4e00\u65e6\u6211\u88abTDD bug\u54ac\u4e86\u4e00\u53e3\uff0c\u5982\u679c\u6211\u80fd\u5e2e\u4e0a\u5fd9\u7684\u8bdd\uff0c\u6211\u80af\u5b9a\u518d\u4e5f\u4e0d\u60f3\u5728\u6ca1\u6709TDD\u7684\u60c5\u51b5\u4e0b\u7f16\u5199\u8f6f\u4ef6\u4e86\u3002\u8fd9\u662f\u5728XCTest\u4e4b\u524d\u5f88\u4e45\uff0c\u751a\u81f3\u5b83\u7684\u9012\u5f52\u5668SenTestKit\u5145\u5176\u91cf\u4e5f\u53ea\u662f\u5728\u5e76\u884c\u5f00\u53d1\u4e2d\uff0c\u6211\u80af\u5b9a\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u5b83\u6709\u4e00\u70b9\u4e0d\u540c\uff0c\u8fd9\u4e9b\u4e0d\u540c\u4e4b\u5904\u4f7f\u5b83\u8db3\u591f\u597d\uff0c\u6211\u66f4\u559c\u6b22\u5b83\u800c\u4e0d\u662f\u6211\u4f7f\u7528\u8fc7\u7684xUnit\u53d8\u4f53(JUnit\u3001Sunit\u3001XCTest)\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u6bd4\u4e0d\u505aTDD\u8981\u597d\u5f97\u591a\uff0c\u4f46\u5b83\u4eec\u5f15\u5165\u4e86\u5927\u91cf\u7684\u5f00\u9500\u548c\u6469\u64e6\uff0c\u4f7f\u5f97\u6d4b\u8bd5\u4f53\u9a8c\u6bd4\u9700\u8981\u7684\u8981\u9ebb\u70e6\u5f97\u591a\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u81f3\u5c11\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u91ca\u4e86\u6211\u770b\u5230\u7684\u5f00\u53d1\u4eba\u5458\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u4e00\u4e9b\u53cd\u611f\u3002\u6211\u770b\u5230\u7684\u6001\u5ea6\u662f\uff0c\u8003\u8bd5\u5c31\u50cf\u5403\u852c\u83dc\u4e00\u6837\uff0c\u4f60\u77e5\u9053\u5b83\u5e94\u8be5\u5bf9\u4f60\u6709\u597d\u5904\uff0c\u4f60\u4f1a\u52c9\u5f3a\u53bb\u505a\uff0c\u4f46\u5b83\u771f\u7684\u5f88\u70e6\u4eba\uff0c\u597d\u5904\u66f4\u591a\u7684\u662f\u4f60\u5728\u667a\u529b\u4e0a\u77e5\u9053\u7684\u4e1c\u897f\u3002\u5bf9\u4e8e\u6211\u5728MPWTest\u5de5\u4f5c\u7684\u6211\u6765\u8bf4\uff0cTDD\u5728\u667a\u529b\u4e0a\u4e5f\u662f\u4e00\u4ef6\u597d\u4e8b\u2122\uff0c\u4f46\u4ece\u5185\u5fc3\u6765\u8bf4\u4e5f\u5f88\u6709\u8da3\uff0c\u4e0d\u592a\u50cf\u852c\u83dc\uff0c\u66f4\u50cf\u662f\u7f8e\u5473\u7684\u96f6\u98df\uff0c\u53ea\u662f\u90a3\u4e9b\u96f6\u98df\u4e0d\u4ec5\u597d\u5403\uff0c\u800c\u4e14\u5065\u5eb7\u3002\u5b83\u5e2e\u52a9\u6211\u8ddf\u4e0a\u6f6e\u6d41\uff0c\u628a\u4e8b\u60c5\u505a\u597d\u3002\u6211\u4f1a\u662fMPWTest\u7684\u7b2c\u4e8c\u540d\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4e0d\u77e5\u9053\u5b83\u901a\u5e38\u662f\u5982\u4f55\u5b8c\u6210\u7684-\u4f46\u4e8b\u5b9e\u662f\u6240\u6709\u5185\u5bb9\u90fd\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d&amp\uff1b&amp\uff1b\u662f\u6784\u5efa\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4f7f\u5f97\u5b83\u53d8\u5f97\u66f4\u5feb\u3002\u8003\u8651\u5230SwiftUI\u7684\u51fa\u73b0\uff0c\u5b83\u5c31\u50cfXcode\u9884\u89c8\u7248--\u53ea\u662f\u4e3a\u4e86\u6d4b\u8bd5\u30021/\u3002\n--\ud835\udd3e\ud835\udd66\ud835\udd64\ud835\udd65\ud835\udd52\ud835\udd67\ud835\udd60\ud835\udd44\ud835\udd66\ud835\udd54\ud835\udd59\ud835\udd60\ud835\udd43\ud835\udd60\ud835\udd67\ud835\udd56\ud83d\udc4c\ud83c\udffb(@LongMuchoLove)2020\u5e745\u670828\u65e5\u3002\n\u5b83\u7684\u4f5c\u7528\u662f\u8ba9\u6211\u5feb\u901f\u800c\u5b89\u5168\u5730\u66f4\u6539\u4ee3\u7801\uff0c\u8fd9\u662f\u654f\u6377\u7684\u5173\u952e\uff1a\u4e0e\u60a8\u5728\u654f\u6377\u6587\u732e\u4e2d\u53ef\u80fd\u8bfb\u5230\u7684\u76f8\u53cd\uff0c\u654f\u6377\u7684\u5173\u952e\u662f\u5feb\u901f\u800c\u5b89\u5168\u5730\u66f4\u6539\u4ee3\u7801\u7684\u80fd\u529b\u3002\u5173\u952e\u662f\u80fd\u591f\u5feb\u901f\u6709\u6548\u5730\u91cd\u65b0\u6d4b\u8bd5\u4ee3\u7801\u3002\u5feb\u901f\u8fd0\u884c\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5(\u5355\u5143\u6d4b\u8bd5)\u662f\u654f\u6377\u6027\u7684\u5173\u952e\u3002\n-\u6770\u68ee\u00b7\u6208\u5c14\u66fc(Jason Gorman)(\u4ec5\u9650\uff0c\u6bd4\u5f80\u5e38\u66f4\u591a\u7684\u5ba4\u5185\u6d3b\u52a8)(@jasongorman)2020\u5e744\u670818\u65e5\u3002\n\u4e0b\u9762\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u6784\u5efaMPWTest\u9879\u76ee\u7684\u6d4b\u8bd5\u8bb0\u5f55\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6211\u628a\u6211\u7684\u653e\u5728/usr/local/bin\u4e2d\uff0c\u7136\u540e\u5c31\u5fd8\u4e86\u5b83\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u4f60\u559c\u6b22\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u4f46\u5728\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u4e2d\u5fc5\u987b\u8c03\u6574\u8def\u5f84\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u811a\u672c\u6784\u5efa\u9636\u6bb5\u6dfb\u52a0\u5230\u60a8\u7684(\u6846\u67b6)\u9879\u76ee\u4e2d\u3002MPWTest\u76ee\u524d\u53ea\u6d4b\u8bd5\u6846\u67b6\u3002tester=/usr/local/bin/testloggerframework=${TARGET_BUILD_DIR}/${FULL_PRODUCT_NAME}if[-f${tester}]\uff1b\u7136\u540e$tester${framework}\u5426\u5219\u56de\u663e&#34\uff1b\u9879\u76ee\u6587\u4ef6\uff1a0\uff1a1\uff1a\u8b66\u544a\uff1a$tester\u6216$framework\u672a\u627e\u5230\uff0c\u6d4b\u8bd5\u672a\u8fd0\u884c&#34\uff1bfi\u3002\n\u7136\u540e\uff0c\u9879\u76ee\u7684\u6784\u5efa\u9636\u6bb5\u7a97\u683c\u7684\u5e95\u90e8\u5e94\u8be5\u5927\u81f4\u5982\u4e0b\u6240\u793a\uff1a\u6ca1\u6709\u5355\u72ec\u7684\u6d4b\u8bd5\u5305\uff0c\u6ca1\u6709\u989d\u5916\u7684\u76ee\u6807\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\u5f53\u60a8\u53ea\u6709\u4e00\u4e2a\u76ee\u6807\u65f6\uff0c\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u662f\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u4e00\u65e6\u60a8\u5f00\u59cb\u62e5\u6709\u51e0\u4e2a\u6846\u67b6\uff0c\u4e3a\u6bcf\u4e2a\u6846\u67b6\u589e\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u6d4b\u8bd5\u76ee\u6807\u5c31\u5f00\u59cb\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u4e2a\u51b3\u7b56\u70b9\uff1a\u6211\u771f\u7684\u5e94\u8be5\u4e3a\u8fd9\u4e2a\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u989d\u5916\u7684\u6d4b\u8bd5\u5305\u5417\uff1f\u4e5f\u8bb8\u6211\u53ef\u4ee5\u6539\u53d8\u4e00\u4e0b\u73b0\u6709\u7684\u8fd9\u4e2a\uff1f\u5728\u8981\u6d4b\u8bd5\u7684\u7c7b\u4e2d\uff0c\u6dfb\u52a0+(NSArray*)testSelectors\u65b9\u6cd5\uff0c\u8fd4\u56de\u8981\u8fd0\u884c\u7684\u6d4b\u8bd5/\u8981\u6267\u884c\u7684\u6d4b\u8bd5\u65b9\u6cd5\u7684\u5217\u8868\u3002\u8fd9\u91cc\u6709\u4e00\u4e2aJSON\u89e3\u6790\u5668\u7684\u793a\u4f8b\uff0c\u6211\u4e00\u76f4\u5728\u5199\uff1a+testSelectors{return@[@&#34\uff1btestParseJSONString&#34\uff1b\uff0c@&#34\uff1btestParseSimpleJSONDict&#34\uff1b\uff0c@&#34\uff1btestParseSimpleJSONArray&#34\uff1b\uff0c@&#34\uff1btestParseWritals&#34\uff1b\uff0c@&#34\uff1btestParseNumbers&#34\uff1b\uff0c@&#34\uff1btestParseNumbers&#34\uff1b\uff0c@&#34\u3002\uff0c@&#34\uff1btestUnicodeEscapes&#34\uff1b\uff0c@&#34\uff1btestCommonStrings&#34\uff1b\uff0c@&#34\uff1btestSpaceBeforeColon&#34\uff1b\uff0c]\uff1b}\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u81ea\u52a8\u786e\u5b9a\u8fd9\u4e9b\u540d\u79f0\uff0c\u4f46\u6211\u66f4\u559c\u6b22\u5c06\u663e\u5f0f\u5217\u8868\u4f5c\u4e3a\u89c4\u8303\u7684\u4e00\u90e8\u5206\uff1a\u8fd9\u4e9b\u662f\u5e94\u8be5\u8fd0\u884c\u7684\u6d4b\u8bd5\u3002\u5426\u5219\uff0c\u5f88\u5bb9\u6613\u5c31\u4f1a\u56e0\u4e3a\u7f16\u8f91\u9519\u8bef\u800c\u8f93\u6389\u4e00\u6b21\u6d4b\u8bd5\uff0c\u800c\u4e0d\u4f1a\u56e0\u6b64\u800c\u53d8\u5f97\u66f4\u52a0\u660e\u667a\u3002\u7136\u540e\u53ea\u9700\u6267\u884c\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u4f8b\u5982testUnicodeEscapes\uff1a+(Void)testUnicodeEscapes{MPWMASONParser*parser=[MPWMASONParser parser]\uff1bNSData*json=[self frame Resource\uff1a@&#34\uff1bunicodeEscapes&#34\uff1bclass\uff1a@&#34\uff1bjson&#34\uff1b]\uff1bNSArray*array=[parser parsedData\uff1ajson]\uff1bNSString*first=\u3002IDEXPECT([array objectAtIndex\uff1a1]\uff0c@&#34\uff1b\\n&#34\uff1b\uff0c@&#34\uff1bSecond is newline&#34\uff1b)\uff1b}\u3002\n\u662f\u7684\uff0c\u8fd9\u5927\u90e8\u5206\u662f\u65e7\u4ee3\u7801\u3002\u5b8f\u7684\u4f5c\u7528\u4e0e\u60a8\u7684\u9884\u671f\u4e0d\u8c0b\u800c\u5408\uff1aINTEXPECT()\u671f\u671b\u6574\u6570\u76f8\u7b49(\u8001\u5b9e\u8bf4\uff0c\u6216\u8005\u5176\u4ed6\u6807\u91cf)\uff0cIDEXPECT()\u671f\u671b\u5bf9\u8c61\u76f8\u7b49\u3002\u5bf9\u4e8enil\u3001\u975enil\u3001true\u548cfalse\u4e5f\u6709\u4e00\u4e9b\u4fbf\u5229\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u7528\u4e8e\u6d6e\u70b9\u6570\u7684\u51fd\u6570\uff0c\u5b83\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u8303\u56f4\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u4f60\u53ef\u4ee5", "note_en": "By popular demand, a quick rundown of  MPWTest (\u201c The Simplest Testing Framework That Could Possibly Work\u201d), my own personal unit testing framework, andhow it makes TDD fast, fun, and frictionless. I created MPWTest because once I had been bitten by the TDD bug, I definitely did notwant to write software without TDD ever again, if I could help it. This was long before XCTest, and even itsprecursor SenTestKit was in at best in parallel development, I certainlywasn&#39;t aware of it. It is a bit different, and the differences make it sufficiently better that I much prefer it to the xUnit variants that I&#39;ve worked with (JUnit, some SUnit, XCTest). All of these arevastly better than not doing TDD, but they introduce significant amounts ofoverhead, friction, that make the testing experience much more cumbersome than it needs to be, and to me at least partly explains some of the antipathyI see towards unit testing from developers. The attitude I see is that testing is like eating your vegetables, you knowit&#39;s supposed to be good for you and you do it, grudgingly, but it reallyis rather annoying and the benefits are more something you know intellectually. For me with MPWTest, TDD is also still intellectually a Good Thing\u2122, but alsoviscerally  fun, less like vegetables and more like tasty snacks, exceptthat those snacks are not just yummy, but also healthy. It helps me stay inthe flow and get things done. I would second MPWTest.  Mind you, I don&#39;t know how it&#39;s normally done\u2014but the fact that everything is in one file &amp;&amp; part of the build process makes it WAY WAY WAY faster.  Given the advent of SwiftUI\u2014it&#39;s like Xcode previews\u2014but for tests.  1/\n\u2014 \ud835\udd3e\ud835\udd66\ud835\udd64\ud835\udd65\ud835\udd52\ud835\udd67\ud835\udd60 \ud835\udd44\ud835\udd66\ud835\udd54\ud835\udd59\ud835\udd60 \ud835\udd43\ud835\udd60\ud835\udd67\ud835\udd56 \ud83d\udc4c\ud83c\udffb (@LongMuchoLove)  May 28, 2020\n  What it does is let me change code quickly and safely, the key to agile: Contrary to what you may have read in the Agile literature, the key to agility is the ability to change code quickly and safely. And the key to that is the ability to re-test code quickly and effectively. Fast-running automated tests (&#34;unit tests&#34;) are the key to agility.\n\u2014 Jason Gorman (only, more indoors than usual) (@jasongorman)  April 18, 2020\n Here is how it works. First you need to build the  testlogger binary of the  MPWTest project. I put mine in  /usr/local/bin and forget about it. You can put it anywhere you like, but will have to adjust the pathsin what follows. Next, add a &#34;Script&#34; build phase to your (framework) project. MPWTest currently onlytests frameworks. tester=/usr/local/bin/testloggerframework=${TARGET_BUILD_DIR}/${FULL_PRODUCT_NAME}if [ -f ${tester} ] ; then $tester ${framework}else echo &#34;projectfile:0:1: warning: $tester or $framework not found, tests not run&#34;fi\n The bottom of the Build Phases pane of your project should then look something roughly like the following: There is no separate test bundle, no extra targets, nada. This may not seem sucha big deal when you have just a single target, but once you start getting havinga few frameworks, having an additional test target for each really starts toadd up. And adds a decision-point: should I really create an additional test bundle for this project? Maybe I can just repurpose this existing one? In the class to be tested, add the  +(NSArray*)testSelectors method, returning the list of tests to run/test methods to execute. Here is an examplefrom the JSON parser I&#39;ve been writing about: +testSelectors{ return @[ @&#34;testParseJSONString&#34;, @&#34;testParseSimpleJSONDict&#34;, @&#34;testParseSimpleJSONArray&#34;, @&#34;testParseLiterals&#34;, @&#34;testParseNumbers&#34;, @&#34;testParseGlossaryToDict&#34;, @&#34;testDictAfterNumber&#34;, @&#34;testEmptyElements&#34;, @&#34;testStringEscapes&#34;, @&#34;testUnicodeEscapes&#34;, @&#34;testCommonStrings&#34;, @&#34;testSpaceBeforeColon&#34;, ];}\n You could also determine these names automagically, but I prefer the explicit listas part of the specification: these are the tests that should be run. Otherwise it is too easy to just lose a test to editing mistakes and be none the wiser for it. Then just implement a test, for example  testUnicodeEscapes:   +(void)testUnicodeEscapes{\tMPWMASONParser *parser=[MPWMASONParser parser];\tNSData *json=[self frameworkResource:@&#34;unicodeescapes&#34; category:@&#34;json&#34;];\tNSArray *array=[parser parsedData:json];\tNSString *first = [array objectAtIndex:0];\tINTEXPECT([first length],1,@&#34;length of parsed unicode escaped string&#34;);\tINTEXPECT([first characterAtIndex:0], 0x1234, @&#34;expected value&#34;);\tIDEXPECT([array objectAtIndex:1], @&#34;\\n&#34;, @&#34;second is newline&#34;);}\n Yes, this is mostly old code. The macros do what you, er, expect:  INTEXPECT() expects integer equality (or other scalars, to be honest),  IDEXPECT() expects object equality. There are also some conveniences for nil, not nil, true and false, as well as a specialized onefor floats that sets an acceptable range. In theory, you can put these methods anywhere, but I tend to place them in a  testing category at the bottom of the file. The  DebugMacros.h header has the various  EXPCECT() macros.The header is the only dependency in your code, you do not need to link anything. Even more than not having a separate test bundle, not having a separate test class(-hierarchy) really simplifies things. A lot. First, there is no question as to where to find the tests for a particular class: at the bottom of the file, just scroll down. Same for the class for some tests:scroll up. I find this incredibly useful, because the tests serve as specification,documentation and example code for class. There is also no need to maintain parallel class hierarchies, which are widelyregarded as a fairly serious  code-smell, for the obvious reasons: the need to keep those hierarchies in sync alongwith the problems once they do get out of sync, which they will, etc. After the setup, you just build your projects, the tests will be run automaticallyas part of the build. If there are test failures, they are reported by Xcodeas you would expect: My steps tend to be:  This may seem like a lot of steps, but it&#39;s really mostly just lettingXcode check things while I am doing the edits that need to be done anyhow. Hitting Cmd-B a couple of times while editing doesn&#39;t hurt. The fact that tests run as part of every build, because you cannotbuild without running the tests, gives you a completely differentlevel of confidence in your code, which translates to  courage. Running the tests all the time is also splendid motivation to keep thosetests green, because if the tests fail, the build fails. And if thebuild fails, you cannot run the program. Last not least, running thetests on every build also is strong motivation to keep those testsfast. Testing just isn&#39;t this separate activity, it&#39;s as integrala part of the development process as writing code and compiling it. There are some drawbacks to this approach, one that the pretty Xcode unit test integration doesn&#39;t work, as when this was done Apple hadalready left the platform idea behind and was only focused on makingan integrated solution. As noted above, displaying test failures as errors and jumping to theline of the failed test-expectation  does work. This hooksinto the mechanism Xcode uses to get that information from compilers,which simply output the line number and error message on  stdout.Any tool that formats its output the same way will work wth Xcode. In the end, while I do enojoy the blinkenlights of Xcode&#39;s unit testintegration, and being able to run tests individually with simplemouse-click, all this bling really just reinforces that idea oftests as a separate entity. If my tests are always run andare always green, and are always fast, then I don&#39;t need oreven want UI for them, the UI is a distraction, the testsshould fade into the background. Another slightly more annoying issue is debugging: as the tests are runas part of the build, a test failure is a build failure and willblock any executables from running. However, Xcode only debugsexecutables, so you can&#39;t actually get to a debuggable run session. As I don&#39;t use debuggers all that much, and failure in TDD usually manifests itself in test failure rather than something you need thedebugger to track, this hasn&#39;t been much of a problem. In the past,I would then just revert to the command line, for example with  lldb testlogger MPWFoundation to debug my foundation framework,as you can&#39;t actually run a framewework. Or so I thought. Only receentlydid I find out that you can set an executable parameter in your target&#39;sbuild scheme. I now set that to  testlogger and can debug theframework to my heart&#39;s content. Leaving the problem of Xcode not actually letting me run the executable due to the build failing, and as far as I know having no facility for debuggingbuild phases. The workaround for that is temporarily disabling the Test build phase,which can be accomplished by misusing the &#34;Run script only when installing&#34; flag. While these issues aren&#39;t actually all the significant, they are somewhat morejarring than you might expect because the experience is so buttery smooth therest of the time. Of course, if you want a pure test class, you can do that: just create a class that only has tests. Furthermore, each class is actually asked fora test fixture object for each test. The default is just to return theclass object itself, but you can also return an instance, which can havesetup and teardown methods the way you expect from xUnit. The code to enumerate and probe all classes in the system in order to findtests is also interesting, if straightforward, and needs to be updated from time to time, as there are a few class in the system that do not like to be probed. I&#39;d obviously be happy if people try out MPWTest and find it useful. Or findit not so useful and provide good feedback. I currently have no specific plans for Swift support. Objective-C compatible classes should probably work, the rest of the language probably isn&#39;t dynamic enough to support this kindof transparent integration, certainly not without more compiler work.But I am currently investigating Swift interop. more generally, and nowthat I am no longer restricted to C/Objective-C, more might be possible. I will almost certainly use the lessons learned here to create linguisticallyintegrated testing in Objective-Smalltalk. As with many other aspects ofObjective-Smalltalk, the gap to be bridged for super-smooth is actually notthat large. Another takeaway is that unit testing is really, really simple. In fact,when I asked Kent Beck about it, his response was that everyone shouldbuild their own. So go and build wonderful things!", "posttime": "2020-06-02 07:14:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d85\u8d8a,reducing,\u6d4b\u8bd5", "title": "MPWTest\uff1a\u901a\u8fc7\u8d85\u8d8aXunit\u6a21\u578b\u6765\u51cf\u5c11\u6d4b\u8bd5\u6469\u64e6", "title_en": "MPWTest: Reducing Test Friction by Going Beyond the XUnit Model", "transed": 1, "url": "https://blog.metaobject.com/2020/05/mpwtest-reducing-test-friction-by-going.html", "via": "", "real_tags": ["\u8d85\u8d8a", "reducing", "\u6d4b\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "dd566083aeaa56b81a59529e650cffe1.jpg", "infoid": 1004757, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u516d\u665a\u4e0a\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\uff0c\u5f53\u963f\u91cc\u00b7\u7ef4\u5c14\u5e0c\u611f\u5230\u817f\u90e8\u5267\u75db\u65f6\uff0c\u4ed6\u51e0\u4e4e\u7acb\u523b\u5c31\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\uff1a\u4ed6\u88ab\u8b66\u5bdf\u53d1\u5c04\u7684\u6a61\u76ae\u5b50\u5f39\u51fb\u4e2d\u3002\n\u201c\u4f5c\u4e3a\u4e00\u4e2a\u5728\u52a0\u62ff\u5927\u957f\u5927\u7684\u5b69\u5b50\uff0c\u8fd9\u611f\u89c9\u5f88\u719f\u6089\u3002\u611f\u89c9\u5c31\u50cf\u662f\u51b0\u7403\u51fb\u4e2d\u4e86\u6211\u7684\u80eb\u9aa8\uff0c\u201c\u8fd9\u4f4dMSNBC\u4e3b\u64ad\u8bf4\uff0c\u4ed6\u5f53\u65f6\u6b63\u5728\u62a5\u9053\u4ed6\u6240\u8bf4\u7684\u6297\u8bae\u8005\u7684\u548c\u5e73\u6e38\u884c\u3002\u201c\u5b83\u51fb\u4e2d\u4e86\u4e00\u4e2a\u5f88\u75bc\u7684\u5730\u65b9\u3002\u201d\n\u7ef4\u5c14\u5e0c\u53d7\u4e86\u8f7b\u5fae\u7600\u4f24\uff0c\u4ed6\u662f\u672c\u5468\u672b\u5728\u7f8e\u56fd\u5404\u5730\u57ce\u5e02\u81f3\u5c11\u6709\u5341\u51e0\u540d\u8bb0\u8005\u53d7\u4f24\u7684\u8bb0\u8005\u4e4b\u4e00-\u5176\u4e2d\u5305\u62ec\u4e00\u540d\u4e00\u53ea\u773c\u775b\u5931\u660e\u7684\u6444\u5f71\u5e08-\u8b66\u65b9\u53d1\u5c04\u6a61\u76ae\u5b50\u5f39\u3001\u80e1\u6912\u55b7\u96fe\u548c\u50ac\u6cea\u74e6\u65af\u4ee5\u5e73\u606f\u9a9a\u4e71\u3002\u81ea20\u4e16\u7eaa60\u5e74\u4ee3\u4ee5\u6765\uff0c\u7f8e\u56fd\u4e00\u76f4\u9971\u53d7\u6c11\u6743\u793a\u5a01\u3001\u53cd\u6218\u6297\u8bae\u548c\u57ce\u5e02\u9a9a\u4e71\u7684\u56f0\u6270\uff0c\u81ea\u90a3\u4ee5\u6765\uff0c\u5a92\u4f53\u4ece\u672a\u5377\u5165\u8fc7\u7f8e\u56fd\u6d77\u5cb8\u4e0a\u5982\u6b64\u591a\u7684\u66b4\u529b\u4e8b\u4ef6\u3002\n\u5728\u51e0\u8d77\u6848\u4ef6\u4e2d\uff0c\u8bb0\u8005\u4f3c\u4e4e\u88ab\u5f53\u5c40\u9a71\u6563\u4eba\u7fa4\u7684\u4e0d\u5206\u9752\u7ea2\u7682\u767d\u7684\u52aa\u529b\u5377\u4e86\u8d77\u6765\u3002\u4f46\u5728\u4e00\u4e9b\u4e8b\u4ef6\u4e2d\uff0c\u8bb0\u8005\u5373\u4f7f\u5728\u81ea\u79f0\u8bb0\u8005\u4e4b\u540e\u4e5f\u4f1a\u53d7\u4f24\u3001\u53d7\u5230\u9a9a\u6270\u6216\u88ab\u6355-\u8fd9\u662f\u5bf9\u5baa\u6cd5\u4fdd\u62a4\u548c\u6307\u5bfc\u5a92\u4f53\u4e0e\u6267\u6cd5\u5b98\u5458\u4e92\u52a8\u7684\u957f\u671f\u57fa\u672c\u89c4\u5219\u7684\u516c\u7136\u8fdd\u53cd\u3002\n\u4f8b\u5982\uff0c\u5468\u516d\u665a\u4e9b\u65f6\u5019\uff0c\u7ef4\u5c14\u5e0c\u8bf4\uff0c\u4ed6\u548c\u53e6\u4e00\u540d\u7535\u89c6\u6444\u5236\u7ec4\u5728\u4e00\u4e2a\u51e0\u4e4e\u7a7a\u65e0\u4e00\u4eba\u7684\u505c\u8f66\u573a\u4e0e\u8b66\u5bdf\u5bf9\u5cd9\uff0c\u5e76\u544a\u8bc9\u4ed6\u4eec\u4ed6\u4eec\u662f\u65b0\u95fb\u5a92\u4f53\u3002\u201c\u2018\u6211\u4eec\u4e0d\u5728\u4e4e\uff0c\u2019\u201d\u7ef4\u5c14\u5e0c\u8bf4\uff0c\u8b66\u5bdf\u5728\u5f00\u67aa\u524d\u544a\u8bc9\u4ed6\uff0c\u6ca1\u6709\u53d7\u4f24\u3002\n\u5728\u4e16\u754c\u5176\u4ed6\u5730\u65b9\uff0c\u8bb0\u8005\u5728\u62a5\u9053\u793a\u5a01\u6d3b\u52a8\u65f6\u7ecf\u5e38\u88ab\u902e\u6355\u6216\u53d7\u4f24\uff0c\u56e0\u4e3a\u653f\u5e9c\u8bd5\u56fe\u538b\u5236\u5a01\u80c1\u4ed6\u4eec\u5408\u6cd5\u6027\u7684\u62a5\u9053\u3002\u4f46\u8fd9\u6837\u7684\u4f8b\u5b50\u5728\u7f8e\u56fd\u4e00\u76f4\u5f88\u5c11\u89c1\u3002\u636e\u4fdd\u62a4\u8bb0\u8005\u59d4\u5458\u4f1a(Committee To Protect Journers)\u6267\u884c\u4e3b\u4efb\u4e54\u5c14\u00b7\u897f\u8499(Joel Simon)\u79f0\uff0c\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u6297\u8bae\u6d3b\u52a8\u4e4b\u524d\uff0c\u8fc7\u53bb\u4e09\u5e74\u91cc\uff0c\u8fd9\u91cc\u53ea\u670943\u540d\u8bb0\u8005\u5728\u62a5\u9053\u793a\u5a01\u6d3b\u52a8\u65f6\u88ab\u8b66\u65b9\u62d8\u7559-\u5176\u4e2d37\u4eba\u662f\u5728\u9488\u5bf9\u7279\u6717\u666e\u603b\u7edf2017\u5e74\u5c31\u804c\u5178\u793c\u7684\u6297\u8bae\u6d3b\u52a8\u671f\u95f4\u88ab\u62d8\u7559\u7684\u3002\n\u65e0\u8bba\u8fd9\u4e9b\u88ad\u51fb\u662f\u5076\u7136\u53d1\u751f\u7684\u8fd8\u662f\u6545\u610f\u53d1\u751f\u7684\uff0c\u5b83\u4eec\u7684\u6548\u679c\u90fd\u662f\u963b\u788d\u4e86\u65b0\u95fb-\u963b\u788d\u4e86\u516c\u4f17\u770b\u5230\u548c\u5224\u65ad\u5bf9\u4ed6\u4eec\u8d1f\u8d23\u7684\u5b98\u5458\u7684\u884c\u4e3a\u7684\u80fd\u529b\u3002\u5b83\u4eec\u4e5f\u53ef\u80fd\u6784\u6210\u5bf9\u4eba\u6743\u7684\u4fb5\u72af\u3002\n\u897f\u8499\u770b\u5230\u4e86\u8b66\u5bdf\u548c\u8bb0\u8005\u4e4b\u95f4\u4e0d\u65ad\u6076\u5316\u7684\u52a8\u6001\u80cc\u540e\u7684\u51e0\u80a1\u4ee4\u4eba\u4e0d\u5b89\u7684\u529b\u91cf\u3002\u8b66\u5bdf\u90e8\u95e8\u8d8a\u6765\u8d8a\u591a\u5730\u4f9d\u9760\u201c\u51c6\u519b\u4e8b\u201d\u7b56\u7565\u6765\u9547\u538b\u793a\u5a01\u6d3b\u52a8\uff0c\u6bd4\u5982\u201c\u5f00\u58f6\u201d\uff0c\u5373\u4e24\u961f\u8b66\u5bdf\u628a\u6297\u8bae\u8005\u5173\u5728\u4e00\u4e2a\u72ed\u5c0f\u7684\u7a7a\u95f4\u91cc\uff0c\u7136\u540e\u902e\u6355\u6240\u6709\u88ab\u5939\u5728\u4e2d\u95f4\u7684\u4eba\uff0c\u5305\u62ec\u8bb0\u8005\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u4eca\u5728\u8bb8\u591a\u793e\u533a\uff0c\u7ecf\u6d4e\u538b\u529b\u8feb\u4f7f\u5a92\u4f53\u88c1\u5458\u548c\u51cf\u5c11\u62a5\u9053\uff0c\u201c\u8b66\u5bdf\u6839\u672c\u4e0d\u8ba4\u8bc6\u62a5\u9053\u4ed6\u4eec\u7684\u8bb0\u8005\uff0c\u201d\u897f\u8499\u8bf4\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u793e\u4ea4\u5a92\u4f53\u524a\u5f31\u4e86\u516c\u4f17\u5bf9\u65b0\u95fb\u5a92\u4f53\u7684\u4fe1\u4efb\uff0c\u7279\u6717\u666e\u5bf9\u5a92\u4f53\u7684\u9891\u7e41\u6279\u8bc4\u52a0\u5267\u4e86\u8fd9\u4e00\u73b0\u8c61\u3002\u8fd9\u4f7f\u5f97\u8bb0\u8005\u66f4\u6709\u53ef\u80fd\u906d\u5230\u8b66\u5bdf\u6216\u793a\u5a01\u8005\u7684\u654c\u610f\u3002\n\u201c\u6211\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u201d\u897f\u8499\u8bf4\u3002\u201c\u8bb8\u591a\u89c4\u8303\u5df2\u7ecf\u5d29\u6e83\u3002\u201d\n\u5728\u672c\u5468\u672b\u7684\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u662f\u6297\u8bae\u8005\u628a\u76ee\u6807\u5bf9\u51c6\u4e86\u8bb0\u8005\uff1a\u5468\u516d\u65e9\u4e9b\u65f6\u5019\uff0c\u798f\u514b\u65af\u65b0\u95fb(Fox News)\u7684\u4e00\u4e2a\u5de5\u4f5c\u4eba\u5458\u5728\u767d\u5bab\u5916\u906d\u5230\u62f3\u6253\u811a\u8e22\u548c\u9a9a\u6270\uff1b\u4e00\u7fa4\u4eba\u6c61\u635f\u4e86CNN\u4e9a\u7279\u5170\u5927\u603b\u90e8\u7684\u6b63\u9762\u3002\n\u5468\u516d\u665a\u4e0a\uff0cCNN\u6444\u5f71\u5e08\u83b1\u6602\u5185\u5c14\u00b7\u95e8\u5fb7\u65af\u548c\u5236\u7247\u4eba\u6bd4\u5c14\u00b7\u67ef\u79d1\u65af\u5728\u62a5\u9053\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8857\u5934\u6297\u8bae\u6d3b\u52a8\u65f6\u90fd\u88ab\u6a61\u76ae\u5b50\u5f39\u51fb\u4e2d\uff0c\u53d7\u4e86\u8f7b\u4f24\u3002\u4e00\u5929\u524d\uff0c\u95e8\u5fb7\u65af\u548c\u57fa\u5c14\u79d1\u65af\u4e0e\u8bb0\u8005\u5965\u9a6c\u5c14\u00b7\u5e0c\u95e8\u5c3c\u65af\u4e00\u8d77\u5728\u7f51\u7edc\u4e0a\u76f4\u64ad\u7684\u4e00\u8d77\u4e8b\u4ef6\u4e2d\u88ab\u6355\u3002\n\u526f\u65b0\u95fb\u8bb0\u8005\u8fc8\u514b\u5c14\u00b7\u5b89\u4e1c\u5c3c\u00b7\u4e9a\u5f53\u65af(Michael Anthony Adams)\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u5bdf\u4ece\u4e00\u8f86\u9762\u5305\u8f66\u91cc\u6d8c\u51fa\u5e76\u5927\u558a\u4eba\u4eec\u79bb\u5f00\u65f6\uff0c\u8fd1\u5341\u51e0\u6b21\u5927\u558a\u4ed6\u662f\u5a92\u4f53\u7684\u4e00\u5458\u3002\n\u201c\u6211\u4e0d\u5728\u4e4e\uff0c\u201d\u4e00\u540d\u8b66\u5b98\u8bf4\uff0c\u547d\u4ee4\u4e9a\u5f53\u65af\u5012\u5730\u3002\u5f53\u4e9a\u5f53\u65af\u8138\u671d\u4e0b\u8eba\u7740\uff0c\u51fa\u793a\u4ed6\u7684\u8bb0\u8005\u8bc1\u65f6\uff0c\u4ed6\u88ab\u80e1\u6912\u55b7\u96fe\u51fb\u4e2d\u3002\u8fd9\u573a\u4ea4\u950b\u88ab\u6444\u50cf\u673a\u6355\u6349\u5230\u4e86\u3002\n\u8b66\u65b9\u521a\u521a\u7a81\u88ad\u4e86\u6211\u4eec\u85cf\u8eab\u7684\u52a0\u6cb9\u7ad9\u3002\u5728\u591a\u6b21\u547c\u558a\u5a92\u4f53\uff0c\u5e76\u5728\u7a7a\u4e2d\u4e3e\u8d77\u6211\u7684\u8bb0\u8005\u8bc1\u540e\uff0c\u6211\u88ab\u6454\u5012\u5728\u5730\u3002\u7136\u540e\uff0c\u53e6\u4e00\u4e2a\u8b66\u5bdf\u8d70\u8fc7\u6765\uff0c\u5728\u6211\u88ab\u6309\u4f4f\u7684\u65f6\u5019\u7528\u80e1\u6912\u55b7\u96fe\u55b7\u5230\u4e86\u6211\u7684\u8138\u4e0a\u3002pic.twitter.com/23EkZIMAFC\n-\u8fc8\u514b\u5c14\u00b7\u5b89\u4e1c\u5c3c\u00b7\u4e9a\u5f53\u65af(@MichaelAdams317)2020\u5e745\u670831\u65e5\u3002\n\u5176\u4e2d\u51e0\u4e2a\u6700\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\u7684\u62a5\u9053\u6765\u81ea\u660e\u5c3c\u963f\u6ce2\u5229\u65af\uff0c\u4e0a\u5468\uff0c\u5728\u975e\u6d32\u88d4\u7f8e\u56fd\u4eba\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u6b7b\u4ea1\u540e\uff0c\u4e00\u540d\u767d\u4eba\u57ce\u5e02\u8b66\u5bdf\u5728\u902e\u6355\u4ed6\u7684\u65f6\u5019\u8dea\u5728\u4ed6\u7684\u8116\u5b50\u4e0a\u8d85\u8fc78\u5206\u949f\uff0c\u5728\u90a3\u91cc\u9996\u6b21\u7206\u53d1\u4e86\u5168\u56fd\u6027\u7684\u6297\u8bae\u6d3b\u52a8\u3002\n\u201c\u6d1b\u6749\u77f6\u65f6\u62a5\u201d\u8bb0\u8005Molly Hennessy-Fiske\u5199\u9053\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u51e0\u540d\u8bb0\u8005\u9ad8\u558a\u201c\u5a92\u4f53\u201d\uff0c\u6325\u821e\u7740\u8bc1\u4ef6\uff0c\u4f46\u4ecd\u88ab\u8b66\u5bdf\u56f4\u4f4f\u5e76\u8ffd\u8d76\uff0c\u4ed6\u4eec\u55b7\u6d12\u50ac\u6cea\u74e6\u65af\u548c\u53d1\u5c04\u6a61\u76ae\u5b50\u5f39\u3002\u5176\u4e2d\u4e00\u4eba\u51fb\u4e2d\u4e86\u5979\u7684\u6444\u5f71\u5e08\u540c\u4e8b\u5361\u7f57\u7433\u00b7\u79d1\u5c14(Carolyn Cole)\u7684\u8138\u3002\nHennessy-Fiske\u5199\u9053\uff1a\u201c\u6211\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u7684\u817f\u4e0a\u6709\u51e0\u5904\u4f24\u53e3\u5728\u6d41\u8840\u3002\u201d\u201c\u6211\u65c1\u8fb9\u4e00\u540d\u8bb0\u8005\u7684\u9762\u7f69\u4e0a\u6cbe\u6ee1\u4e86\u9c9c\u8840\uff0c\u4ed6\u60ca\u5446\u4e86\uff0c\u4e0d\u5f97\u4e0d\u6709\u4eba\u544a\u8bc9\u4ed6\u53d7\u4f24\u4e86\u3002\u201d\n\u8def\u900f\u793e\u7535\u89c6\u6444\u5f71\u5e08\u80e1\u91cc\u5965-\u585e\u8428\u5c14\u00b7\u67e5\u97e6\u65af\u665a\u4e0a8\u70b9\u5de6\u53f3\u6b63\u5728\u62cd\u6444\u8b66\u5bdf\u3002\u5468\u516d\uff0c\u5f53\u4ed6\u4eec\u5f00\u59cb\u5f00\u706b\u7684\u65f6\u5019\u3002\u201c\u6211\u7684\u8138\u88ab\u6a61\u76ae\u5b50\u5f39\u51fb\u4e2d\u4e86\uff01\u201d\u4ed6\u5728\u955c\u5934\u524d\u8bf4\u3002\u636e\u901a\u8baf\u793e\u62a5\u9053\uff0c\u67e5\u97e6\u65af\u7684\u9888\u90e8\u540e\u90e8\u3001\u5de6\u773c\u548c\u624b\u81c2\u88ab\u51fb\u4e2d\uff0c\u800c\u4e00\u540d\u8def\u900f\u793e\u5b89\u5168\u987e\u95ee\u4e5f\u53d7\u4f24\u3002\n\u8bb0\u8005\u4eec\u751a\u81f3\u5728\u8f66\u91cc\u90fd\u4e0d\u5b89\u5168\u3002\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u660e\u661f\u8bba\u575b\u62a5\u8bb0\u8005\u745e\u5b89\u00b7\u8d39\u5c14\u5e03\u5fb7(Ryan FairCloth)\u5bf9\u7740\u6444\u50cf\u673a\u8bf4\uff0c\u4ed6\u201c\u53ea\u662f\u60f3\u79bb\u5f00\u8fd9\u4e2a\u5730\u533a\u201d\uff0c\u8fd9\u65f6\u8b66\u5bdf\u7684\u50ac\u6cea\u5f39\u6253\u788e\u4e86\u4e00\u6247\u8f66\u7a97\uff0c\u4ed6\u7684\u8138\u4e0a\u9c9c\u8840\u76f4\u6d41\u3002\u4ed6\u7684\u8138\u548c\u624b\u81c2\u88ab\u51fb\u4e2d\u3002\n\u6211\u662f@RyanFairCloth\uff0c@StarTribune\u7684\u8bb0\u8005\u3002\u4ed6\u8bf4\uff0c\u5f53\u8b66\u5bdf\u671d\u4ed6\u7684\u7a97\u6237\u5f00\u67aa\u65f6\uff0c\u4ed6\u6b63\u8bd5\u56fe\u56de\u5bb6\u3002\u4ed6\u5728\u6d41\u8840\uff0c\u4f46\u770b\u8d77\u6765\u8fd8\u597d\u3002pic.twitter.com/LYH0h7c4hf\u3002\n-\u8d3e\u91cc\u5fb7\u00b7\u6208\u8036\u7279(@JaredGoyette)2020\u5e745\u670831\u65e5\n\u5728\u7f8e\u56fd\u4e00\u4e9b\u5730\u533a\uff0c\u8b66\u65b9\u62d8\u7559\u4e86\u8bb0\u8005\uff0c\u5176\u4e2d\u5305\u62ec\u8d6b\u82ac\u987f\u90ae\u62a5\u8bb0\u8005\u514b\u91cc\u65af\u6258\u5f17\u00b7\u9a6c\u8482\u4e9a\u65af(Christopher Mathias)\uff0c\u4ed6\u5728\u88ab\u6d3e\u5f80\u5e03\u9c81\u514b\u6797\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\u6234\u7740\u8bb0\u8005\u8bc1\u3002\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u4ed6\u88ab\u91ca\u653e\u3002\n\u5728\u5bc6\u6b47\u6839\u5dde\uff0c\u5e95\u7279\u5f8b\u81ea\u7531\u5a92\u4f53(Detroit Free Press)\u9ad8\u7ea7\u65b0\u95fb\u603b\u76d1\u5409\u59c6\u00b7\u8c22\u5f17(Jim Schaefer)\u5728Twitter\u4e0a\u8868\u793a\uff0c\u4ed6\u7684\u51e0\u540d\u8bb0\u8005\u88ab\u8b66\u5bdf\u55b7\u80e1\u6912\u55b7\u96fe\uff0c\u4e00\u540d\u8b66\u5b98\u5728\u8bd5\u56fe\u505a\u81ea\u5df1\u7684\u5de5\u4f5c\u65f6\uff0c\u4ece\u6444\u5f71\u5e08\u624b\u4e2d\u62a2\u8d70\u4e86\u4e00\u53f0\u76f4\u64ad\u76f8\u673a\u3002\u8fd9\u662f\u4e0d\u5bf9\u7684\u3002\u201c\u3002\u81ea\u7531\u65b0\u95fb\u793e\u8bb0\u8005J.C.Reindl\u6355\u6349\u5230\u4e86\u4e00\u5f20\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\u7684\u7167\u7247\uff0c\u7167\u7247\u4e2d\u4e00\u540d\u8b66\u5bdf\u6234\u7740\u9632\u6bd2\u9762\u5177\uff0c\u5c31\u5728\u4e00\u81c2\u8fdc\u7684\u5730\u65b9\u3002\u201c\u6211\u88ab\u55b7\u4e4b\u524d\u770b\u5230\u7684\u6700\u540e\u4e00\u6837\u4e1c\u897f\uff0c\u201d\u4ed6\u5728\u63a8\u7279\u4e0a\u5199\u9053\u3002\u201c\u6211\u751a\u81f3\u4e3e\u7740\u2018\u5a92\u4f53\u2019\u5fbd\u7ae0\u3002\u201d\n\u6211\u88ab\u55b7\u4e4b\u524d\u770b\u5230\u7684\u6700\u540e\u4e00\u6837\u4e1c\u897f\u3002\u6211\u751a\u81f3\u4e3e\u7740\u201c\u5a92\u4f53\u201d\u5fbd\u7ae0pic.twitter.com/XGNN32dl1v\u3002\n-JC Reindl(@jcreindl)2020\u5e745\u670831\u65e5\u3002\n\u201c\u8fd9\u662f\u6211\u804c\u4e1a\u751f\u6daf\u4e2d\u6700\u75af\u72c2\u7684\u591c\u665a\u4e4b\u4e00\u3002\u591a\u6b21\u906d\u5230\u50ac\u6cea\u74e6\u65af\u88ad\u51fb\uff0c\u201c\u81ea\u7531\u65b0\u95fb\u8bb0\u8005\u5927\u536b\u00b7\u6770\u897f\u5728\u63a8\u7279\u4e0a\u5199\u9053\u3002\u201c\u8b66\u5bdf\u5411\u6211\u4eec\u53d1\u5c04\u6a61\u76ae\u5b50\u5f39\uff0c\u5c3d\u7ba1\u6211\u4eec\u6b63\u5728\u5411\u4ed6\u4eec\u60f3\u8981\u6211\u4eec\u53bb\u7684\u5730\u65b9\u79fb\u52a8\uff0c\u4e3e\u7740\u6211\u4eec\u7684\u8bb0\u8005\u8bc1\uff0c\u5bf9\u5a92\u4f53\u5927\u558a\u5927\u53eb\u3002\u201d\n\u5468\u65e5\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u548c\u5e95\u7279\u5f8b\u7684\u8b66\u65b9\u4ee3\u8868\u6ca1\u6709\u56de\u590d\u8bb0\u8005\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u5468\u4e94\u665a\u4e0a\uff0c\u8def\u6613\u65af\u7ef4\u5c14\u7684\u4e00\u540d\u8b66\u5bdf\u7528\u4e00\u628a\u88c5\u6709\u80e1\u6912\u7403\u7684\u67aa\u6307\u7740\u5f53\u5730\u4e00\u540d\u7535\u89c6\u65b0\u95fb\u6444\u5f71\u5e08\uff0c\u5f53\u65f6\u8bb0\u8005\u51ef\u7279\u7433\u00b7\u62c9\u65af\u7279(Kaitlin Rust)\u5728\u7535\u89c6\u76f4\u64ad\u4e2d\u5c16\u53eb\u9053\uff1a\u201c\u6211\u4e2d\u67aa\u4e86\uff01\u201d\u6f14\u64ad\u5ba4\u91cc\u7684\u4e00\u4f4d\u4e3b\u64ad\u95ee\u8b66\u5bdf\u7684\u76ee\u6807\u662f\u8c01\u3002\u201c\u770b\u7740\u6211\u4eec\uff01\u6b63\u5bf9\u7740\u6211\u4eec\uff01\u201c\u3002\u5979\u56de\u7b54\u3002\n\u8def\u6613\u65af\u7ef4\u5c14\u8b66\u65b9\u53d1\u8a00\u4eba\u6770\u897f\u00b7\u54c8\u62c9\u8fea(Jessie Halladay)\u8868\u793a\uff0c\u8b66\u65b9\u6b63\u5728\u52aa\u529b\u67e5\u660e\u5411\u4ed6\u4eec\u5f00\u67aa\u7684\u8b66\u5bdf\u7684\u8eab\u4efd\u3002\u201c\u9488\u5bf9\u5a92\u4f53\u5e76\u4e0d\u662f\u6211\u4eec\u7684\u672c\u610f\u3002\u636e\u7535\u89c6\u53f0\u62a5\u9053\uff0c\u6628\u665a\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\uff0c\u4e3a\u4e86\u5bf9\u8b66\u5b98\u548c\u51ef\u7279\u7433\u516c\u5e73\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6df1\u5165\u5730\u8c03\u67e5\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u662f\u4ec0\u4e48\u4fc3\u4f7f\u4e86\u8fd9\u4e00\u884c\u52a8\u3002\u201c\u636e\u7535\u89c6\u53f0\u62a5\u9053\uff0c\u54c8\u62c9\u8fea\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002\u201c\u56e0\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u6211\u4eec\u4f1a\u8fd9\u4e48\u505a\uff0c\u5982\u679c\u9700\u8981\u7eaa\u5f8b\uff0c\u6211\u4eec\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u201d\n\u5728\u6d1b\u6749\u77f6\uff0cKCRW\u8bb0\u8005Cerise Castle\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u5f20\u6a61\u76ae\u5b50\u5f39\u7684\u7167\u7247\uff0c\u5979\u8bf4\u8b66\u5bdf\u5411\u5979\u548c\u6297\u8bae\u8005\u5f00\u67aa\u3002\u5176\u4e2d\u4e00\u4eba\u6253\u4e86\u5979\u3002\n\u201c\u6d1b\u6749\u77f6\u65f6\u62a5\u201d\u8bb0\u8005\u8f69\u5c3c\u8bd7-\u83f2\u65af\u514b(Hennessy-Fiske)\u5199\u9053\uff0c\u5979\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u7ecf\u5386\u4e0e\u5979\u804c\u4e1a\u751f\u6daf\u4e2d\u7ecf\u5386\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u540c\uff0c\u5979\u7ecf\u5386\u8fc7\u4f0a\u62c9\u514b\u548c\u963f\u5bcc\u6c57\u7684\u6218\u533a\uff0c\u4ee5\u53ca\u5bc6\u82cf\u91cc\u5dde\u5f17\u683c\u68ee\u548c\u8fbe\u62c9\u65af\u7b49\u57ce\u5e02\u7684\u6297\u8bae\u6d3b\u52a8\u3002\n\u201c\u6211\u4ece\u6765\u6ca1\u6709\u88ab\u8b66\u5bdf\u5f00\u67aa\uff0c\u201d\u5979\u5468\u516d\u5199\u9053\uff0c\u201c\u76f4\u5230\u4eca\u665a\u3002\u201d", "note_en": "Ali Velshi knew almost instantly what had happened when he felt a sharp pain in his leg Saturday night in Minneapolis: He\u2019d been hit with a rubber bullet fired by police.\n \u201cAs a kid growing up in Canada, it felt familiar. It felt like a puck hit me in the shin,\u201d said the MSNBC anchor, who was covering what he described as a peaceful march of protesters. \u201cIt hit in a place that hurt.\u201d\n Velshi, who suffered minor bruises, was one of at least a dozen journalists injured in cities across America this weekend \u2014 including a photographer who was blinded in one eye \u2014 as police fired rubber bullets, pepper spray and tear gas to quell unrest. Not since the 1960s, when the nation was racked by civil rights demonstrations, antiwar protests and urban riots, has the press been embroiled in so much violence on American shores.\n    In several cases, reporters appear to have been swept up in indiscriminate efforts by authorities to disperse crowds. But in a number of incidents, journalists were injured, harassed or arrested even after identifying themselves as reporters \u2014 a blatant violation of constitutional protections and long-standing ground rules that guide interactions between media and law enforcement officials.\n Later on Saturday, for example, Velshi said his and another TV crew were confronted by police in a nearly deserted parking lot and informed them they were news media. \u201c \u2018We don\u2019t care,\u2019 \u201d Velshi said the police told him before opening fire, without injury.\n Elsewhere around the world, journalists are regularly arrested or injured covering demonstrations as governments attempt to suppress reporting that threatens their legitimacy. But such examples have been rare in the United States. Before the Minnesota protests, only 43 journalists here over the past three years had been detained by police while covering demonstrations \u2014 37 of them during protests over President Trump\u2019s 2017 inauguration, according to Joel Simon, executive director of the Committee to Protect Journalists.\n   Whether these assaults are happening by accident or on purpose, they have the effect of impeding the news \u2014 hampering the public\u2019s ability to see and judge the behavior of officials who are accountable to them. They may also amount to an infringement of human rights.\n Simon sees several troubling forces behind the deteriorating dynamic between police and reporters. Police departments are increasingly relying on \u201cquasi-military\u201d tactics to suppress demonstrations \u2014 such as \u201ckettling,\u201d in which two lines of officers bottle up protesters in a confined space and arrest everyone caught in between, including reporters.\n And unfortunately, in many communities these days, where economic pressures have forced media layoffs and cutbacks in coverage, \u201cthe police simply don\u2019t know the journalists who are covering them,\u201d Simon said.\n   Meanwhile, social media has undermined public trust in the news media, a phenomenon fueled by Trump\u2019s frequent criticism of the press. Which makes it more likely that reporters will be met with hostility by police or demonstrators.\n \u201cI\u2019ve never seen anything quite like this,\u201d Simon said. \u201cMany of the norms have broken down.\u201d\n In some cases this weekend, it was protesters who targeted journalists: A Fox News crew was punched and harassed outside the White House early Saturday; a crowd defaced the facade of CNN headquarters in Atlanta.\n  CNN cameraman Leonel Mendez and producer Bill Kirkos were both hit by rubber bullets as they were covering the street protests in Minneapolis Saturday evening, suffering minor injuries. A day earlier, Mendez and Kirkos were  arrested along with correspondent Omar Jimenez in an incident carried live on the network.\n    Vice News reporter Michael Anthony Adams shouted nearly a dozen times that he was a member of the media as police in Minneapolis poured out of a van and yelled for people to leave.\n \u201cI don\u2019t care,\u201d said one officer, ordering Adams to the ground. As Adams lay facedown, showing his press badge, he was hit by a blast of pepper spray. The exchange was caught on camera.\n Police just raided the gas station we were sheltering at. After shouting press multiple times and raising my press card in the air, I was thrown to the ground. Then another cop came up and peppered sprayed me in the face while I was being held down.  pic.twitter.com/23EkZIMAFC\n\u2014 Michael Anthony Adams (@MichaelAdams317)  May 31, 2020\n Several of the most chilling accounts came from Minneapolis, where the national protests first erupted last week after the death of an African American man, George Floyd, after a white city police officer arresting him knelt on his neck for more than eight minutes.\n  Los Angeles Times reporter Molly Hennessy-Fiske  wrote that several journalists in Minneapolis shouted \u201cpress\u201d and waved credentials but were nonetheless cornered and chased by police spraying tear gas and firing rubber bullets. One hit her photographer colleague, Carolyn Cole, in the face.\n   \u201cI didn\u2019t realize it, but I was bleeding from several wounds to my leg,\u201d Hennessy-Fiske wrote. \u201cBlood covered the face mask of a reporter next to me, who was so stunned someone had to tell him he was hurt.\u201d\n Reuters TV cameraman Julio-Cesar Chavez was filming police about 8 p.m. Saturday when they began firing. \u201cI\u2019ve been hit in the face by a rubber bullet!\u201d  he said on camera. Chavez was hit in the back of his neck, under his left eye and his arm, while a Reuters security adviser also suffered injuries, according to the wire service.\n Journalists weren\u2019t even safe in their cars. Minneapolis Star Tribune reporter Ryan Faircloth had blood running down his face as he said on camera that he was \u201cjust trying to get out of the area\u201d when a police tear-gas round shattered a car window. He was hit in the face and arm.\n   This is  @RyanFaircloth, a reporter with the  @StarTribune. He says he was trying to get home when police shot out his window.  He is bleeding but seems ok.  pic.twitter.com/LYH0h7c4hf\n\u2014 Jared Goyette (@JaredGoyette)  May 31, 2020\n In some parts of the country, police detained journalists, including HuffPost reporter  Christopher Mathias, who wore a press badge while on assignment to cover protests in Brooklyn. He was released several hours later.\n In Michigan, Detroit Free Press senior news director  Jim Schaefer said on Twitter that several of his reporters were pepper-sprayed by police, and an officer slapped a live-stream camera out of the hand of a photographer \u201cas she tried to do her job. This is not OK.\u201d Free Press reporter J.C. Reindl captured a chilling image of a police officer wearing a gas mask just an arm\u2019s-length away. \u201cLast thing I saw before I got sprayed,\u201d he tweeted. \u201cI was even holding up \u2018media\u2019 badge.\u201d\n Last thing I saw before I got sprayed. I was even holding up \u201cmedia\u201d badge  pic.twitter.com/XGNN32dl1v\n\u2014 JC Reindl (@jcreindl)  May 31, 2020\n \u201cOne of the craziest nights of my career. Got tear gassed multiple times,\u201d  tweeted Free Press reporter David Jesse. \u201cPolice shot rubber bullets at us even [though] we were moving where they wanted us to go, holding up our press passes and yelling media.\u201d\n   Police representatives in Minneapolis and Detroit did not respond to requests for comment on Sunday.\n An officer in Louisville on Friday night pointed a gun containing pepper balls at a local TV news cameraman as reporter  Kaitlin Rust screamed on live TV, \u201cI\u2019m getting shot!\u201d An anchor back in the studio asked who the officers were targeting. \u201cAt us! Directly at us!\u201d she replied.\n Louisville police spokeswoman Jessie Halladay said the department was trying to identify the officer who fired at them. \u201cTargeting the media is not our intention. There was a lot going on last night, and to be fair to both the officer and to Kaitlin, we need to take a deeper look at what happened and what prompted that action,\u201d Halladay  said in a statement, according to the station. \u201cSo we have said that we will do that and if there needs to be discipline we will address it.\u201d\n   In Los Angeles, KCRW journalist Cerise Castle  tweeted a photo of the rubber bullets that she said police fired at her and protesters. One of them hit her.\n Hennessy-Fiske, the Los Angeles Times reporter, wrote that what she experienced in Minneapolis was unlike anything she\u2019s experienced in a career that has taken her to war zones in Iraq and Afghanistan and protests in cities like Ferguson, Mo., and Dallas.\n \u201cI have never been fired at by police,\u201d she wrote Saturday, \u201cuntil tonight.\u201d", "posttime": "2020-06-02 07:14:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u902e\u6355,arrested,\u8bb0\u8005", "title": "\u8bb0\u8005\u5728\u8bd5\u56fe\u62a5\u9053\u6297\u8bae\u6d3b\u52a8\u65f6\u88ab\u8b66\u5bdf\u902e\u6355\u53d7\u4f24", "title_en": "Journalists are arrested injured by police while trying to cover protests", "transed": 1, "url": "https://www.washingtonpost.com/lifestyle/media/journalists-at-several-protests-were-injured-arrested-by-police-while-trying-to-cover-the-story/2020/05/31/bfbc322a-a342-11ea-b619-3f9133bbb482_story.html", "via": "", "real_tags": ["\u902e\u6355", "arrested", "\u8bb0\u8005"]}]