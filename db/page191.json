[{"category": "", "categoryclass": "", "imagename": "7d6ec9c22e2a3b96cb40a8cb0026429e.jpg", "infoid": 1004005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ESET\u7684\u5b89\u5168\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u7531Turla\u5b9e\u65bd\u7684\u65b0\u653b\u51fb\uff0cTurla\u662f\u4fc4\u7f57\u65af\u6700\u5148\u8fdb\u7684\u56fd\u5bb6\u652f\u6301\u7684\u9ed1\u5ba2\u7ec4\u7ec7\u4e4b\u4e00\u3002\n\u65b0\u7684\u88ad\u51fb\u53d1\u751f\u57282020\u5e741\u6708\u3002ESET\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u88ad\u51fb\u7684\u76ee\u6807\u662f\u4e09\u4e2a\u5907\u53d7\u77a9\u76ee\u7684\u5b9e\u4f53\uff0c\u5982\u9ad8\u52a0\u7d22\u7684\u56fd\u5bb6\u8bae\u4f1a\u548c\u4e1c\u6b27\u7684\u4e24\u4e2a\u5916\u4ea4\u90e8\u3002\u7531\u4e8e\u56fd\u5bb6\u5b89\u5168\u539f\u56e0\uff0c\u65e0\u6cd5\u70b9\u540d\u8bc6\u522b\u76ee\u6807\u3002\n\u8fd9\u4e9b\u5165\u4fb5\u662f\u4e00\u957f\u4e32\u53d7\u5bb3\u8005\u540d\u5355\u4e2d\u7684\u6700\u65b0\u4e00\u4f8b\uff0c\u5176\u4e2d\u5927\u591a\u6570\u5305\u62ec\u5916\u4ea4\u548c\u519b\u4e8b\u5b9e\u4f53\u3002\u8fd9\u4efd\u6e05\u5355\u59cb\u4e8e2000\u5e74\u4ee3\u4e2d\u671f\u7684\u4e94\u89d2\u5927\u697c\uff0c\u591a\u5e74\u6765\u4e00\u76f4\u6301\u7eed\u5230\u6b27\u6d32\u3001\u4e2d\u4e1c\u3001\u4e9a\u6d32\u548c\u975e\u6d32\u7684\u76ee\u6807\u3002\n\u7136\u800c\uff0c2020\u5e741\u6708\u7684\u653b\u51fb\u4e4b\u6240\u4ee5\u8131\u9896\u800c\u51fa\uff0c\u662f\u56e0\u4e3a\u90e8\u7f72\u4e86\u66f4\u65b0\u7248\u672c\u7684Comrat\u6076\u610f\u8f6f\u4ef6\uff0cESET\u8868\u793a\uff0c\u8be5\u8f6f\u4ef6\u5305\u542b\u4e86\u4e00\u4e9b\u76f8\u5f53\u806a\u660e\u7684\u65b0\u529f\u80fd\u3002\nComrat\u6076\u610f\u8f6f\u4ef6\uff0c\u4e5f\u88ab\u79f0\u4e3aAgent.BTZ\uff0c\u662fTurla\u6700\u53e4\u8001\u7684\u6b66\u5668\u4e4b\u4e00\uff0c\u4e5f\u662f\u4ed6\u4eec\u57282008\u5e74\u7528\u6765\u4ece\u4e94\u89d2\u5927\u697c\u7f51\u7edc\u4e2d\u8679\u5438\u6570\u636e\u7684\u5de5\u5177\u3002\n\u8be5\u5de5\u5177\u591a\u5e74\u6765\u7ecf\u5386\u4e86\u51e0\u6b21\u66f4\u65b0\uff0c\u5206\u522b\u57282014\u5e74\u548c2017\u5e74\u53d1\u73b0\u4e86\u65b0\u7248\u672c\u3002\n\u6700\u65b0\u7684Comrat v4\u9996\u6b21\u51fa\u73b0\u57282017\u5e74\uff0c\u7136\u800c\uff0c\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\uff0cESET\u8868\u793a\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86Comrat v4\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u5176\u4e2d\u5305\u62ec\u4e24\u4e2a\u65b0\u529f\u80fd\uff0c\u6bd4\u5982\u80fd\u591f\u6e17\u51fa\u53cd\u75c5\u6bd2\u65e5\u5fd7\uff0c\u4ee5\u53ca\u80fd\u591f\u4f7f\u7528Gmail\u6536\u4ef6\u7bb1\u63a7\u5236\u6076\u610f\u8f6f\u4ef6\u3002\n\u8fd9\u4e9b\u529f\u80fd\u4e2d\u7684\u7b2c\u4e00\u4e2a\u662f\u6076\u610f\u8f6f\u4ef6\u4ece\u53d7\u611f\u67d3\u7684\u4e3b\u673a\u6536\u96c6\u9632\u75c5\u6bd2\u65e5\u5fd7\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u5176\u4e2d\u4e00\u4e2a\u547d\u4ee4\u548c\u63a7\u5236\u670d\u52a1\u5668\u7684\u80fd\u529b\u3002\n\u9ed1\u5ba2\u7ec4\u7ec7\u7684\u786e\u5207\u52a8\u673a\u4e00\u76f4\u4e0d\u6e05\u695a\uff0c\u4f46\u5206\u6790\u6076\u610f\u8f6f\u4ef6\u7684ESET\u7814\u7a76\u5458Matthieu Faou\u544a\u8bc9ZDNet\uff0cTurla\u64cd\u4f5c\u5458\u53ef\u80fd\u6b63\u5728\u6536\u96c6\u9632\u75c5\u6bd2\u65e5\u5fd7\uff0c\u4ee5\u4fbf\u8ba9\u4ed6\u4eec\u66f4\u597d\u5730\u4e86\u89e3\u662f\u5426\u68c0\u6d4b\u5230\u4e86\u6076\u610f\u8f6f\u4ef6\u6837\u672c\uff0c\u4ee5\u53ca\u68c0\u6d4b\u5230\u4e86\u54ea\u4e9b\u6076\u610f\u8f6f\u4ef6\u6837\u672c\u3002\n\u4eba\u4eec\u76f8\u4fe1\uff0c\u5982\u679cTurla\u64cd\u4f5c\u5458\u770b\u5230\u68c0\u6d4b\u5230\u7684\u4e1c\u897f\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u4ed6\u4eec\u7684\u6076\u610f\u8f6f\u4ef6\uff0c\u907f\u514d\u5c06\u6765\u5728\u5176\u4ed6\u7cfb\u7edf\u4e0a\u88ab\u68c0\u6d4b\u5230\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u4e0d\u88ab\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u64cd\u4f5c\u3002\nFaou\u8bf4\uff0c\u7a83\u53d6\u65e5\u5fd7\u7684\u6076\u610f\u8f6f\u4ef6\u5f88\u5e38\u89c1\uff0c\u4f46\u4e8b\u4ef6\u54cd\u5e94\u4eba\u5458\u603b\u662f\u5f88\u96be\u68c0\u6d4b\u5230\u8fd9\u79cd\u884c\u4e3a\u3002\n\u6cd5\u4e4c\u544a\u8bc9\u6211\u4eec\uff0c\u95ee\u9898\u662f\u901a\u5e38\u5f88\u96be\u786e\u5b9a\u653b\u51fb\u8005\u6cc4\u9732\u4e86\u54ea\u4e9b\u6587\u4ef6\u3002\u4f46\u5bf9\u4e8e\u76f8\u5bf9\u5148\u8fdb\u7684\u7fa4\u4f53\u6765\u8bf4\uff0c\u8bd5\u56fe\u4e86\u89e3\u4ed6\u4eec\u662f\u5426\u88ab\u53d1\u73b0\u6216\u662f\u5426\u7559\u4e0b\u75d5\u8ff9\u5e76\u4e0d\u5c11\u89c1\u3002\n\u4f46\u8fd9\u5e76\u4e0d\u662f\u6700\u65b0\u7684Comrat\u6076\u610f\u8f6f\u4ef6\u7248\u672c\u4e2d\u552f\u4e00\u7684\u91cd\u5927\u53d8\u5316\u3002Faou\u8bf4\uff0c\u6076\u610f\u8f6f\u4ef6\u73b0\u5728\u5305\u62ec\u7684\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e24\u4e2a\u547d\u4ee4\u548c\u63a7\u5236\u673a\u5236\u3002\n\u7b2c\u4e00\u79cd\u662f\u901a\u8fc7HTTP\u8054\u7cfb\u8fdc\u7a0b\u670d\u52a1\u5668\u5e76\u68c0\u7d22\u5728\u53d7\u611f\u67d3\u4e3b\u673a\u4e0a\u6267\u884c\u7684\u6307\u4ee4\u7684\u7ecf\u5178\u65b9\u6cd5\u3002\n\u7b2c\u4e8c\u4e2a\uff0c\u4e5f\u662f\u65b0\u7684\u4e00\u4e2a\uff0c\u662f\u4f7f\u7528Gmail\u7684\u7f51\u7edc\u754c\u9762\u3002Faou\u8bf4\uff0c\u6700\u65b0\u7684Comrat v4\u63a5\u7ba1\u4e86\u53d7\u5bb3\u8005\u7684\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0c\u52a0\u8f7d\u4e86\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684cookie\u6587\u4ef6\uff0c\u7136\u540e\u542f\u52a8\u4e86\u4e0eGmail Web\u4eea\u8868\u677f\u7684\u4f1a\u8bdd\u3002\n\u5728\u8fd9\u91cc\uff0c\u6076\u610f\u8f6f\u4ef6\u8bfb\u53d6\u6536\u4ef6\u7bb1\u4e2d\u7684\u6700\u65b0\u7535\u5b50\u90ae\u4ef6\uff0c\u4ece\u6536\u4ef6\u7bb1\u4e0b\u8f7d\u6587\u4ef6\u9644\u4ef6\uff0c\u7136\u540e\u8bfb\u53d6\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u8bf4\u660e\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u6bcf\u5f53Turla\u64cd\u4f5c\u5458\u60f3\u8981\u5411\u5728\u53d7\u611f\u67d3\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684Comrat\u5b9e\u4f8b\u53d1\u51fa\u65b0\u547d\u4ee4\u65f6\uff0c\u9ed1\u5ba2\u53ea\u9700\u5411Gmail\u5730\u5740\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u5373\u53ef\u3002\u6267\u884c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u53d1\u9001\u7684\u6307\u4ee4\u540e\u6536\u96c6\u7684\u6240\u6709\u6570\u636e\u90fd\u88ab\u53d1\u9001\u56deGmail\u6536\u4ef6\u7bb1\uff0c\u5e76\u91cd\u5b9a\u5411\u56deTurla\u64cd\u4f5c\u5458\u3002\nESET\u8bf4\uff0c\u5c3d\u7ba1\u6709\u65b0\u7684\u529f\u80fd\uff0cTurla\u8fd0\u8425\u5546\u4ecd\u7136\u50cf\u4ee5\u524d\u4e00\u6837\u4f7f\u7528Comrat\uff0c\u8fd9\u4e3b\u8981\u662f\u4f5c\u4e3a\u5df2\u7ecf\u611f\u67d3\u7684\u4e3b\u673a\u4e0a\u7684\u7b2c\u4e8c\u9636\u6bb5\u6709\u6548\u8f7d\u8377\u3002\u5728\u8fd9\u91cc\uff0cComrat\u7528\u4e8e\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u641c\u7d22\u7279\u5b9a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6570\u636e\u6e17\u900f\u5230\u8fdc\u7a0b\u70b9\uff0c\u901a\u5e38\u662fOneDrive\u62164Shared\u4e0a\u7684\u4e91\u6587\u4ef6\u5171\u4eab\u5e10\u6237\u3002\n\u4e24\u5468\u524d\uff0c\u5361\u5df4\u65af\u57fa\u8fd8\u53d1\u5e03\u4e86\u4e00\u4efd\u5173\u4e8e\u4e00\u4e9b\u8f83\u65e7\u7684Turla\u6076\u610f\u8f6f\u4ef6\u7684\u62a5\u544a\uff0c\u8be5\u8f6f\u4ef6\u6536\u5230\u4e86\u6f02\u4eae\u7684\u66f4\u65b0\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7248\u672c\u7684COMPFUN\u6076\u610f\u8f6f\u4ef6\uff0cTurla\u64cd\u4f5c\u5458\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u4f9d\u8d56HTTP\u72b6\u6001\u7801\u7684\u65b0\u9896\u4e14\u524d\u6240\u672a\u89c1\u7684\u7cfb\u7edf\u6765\u63a7\u5236\u8fd9\u79cd\u6076\u610f\u8f6f\u4ef6\u3002", "note_en": "Security researchers from ESET have discovered new attacks carried out by  Turla, one of Russia&#39;s most advanced state-sponsored hacking groups.\n The new attacks have taken place in January 2020. ESET researchers say the attacks targeted three high-profile entities, such as a national parliament in the Caucasus and two Ministries of Foreign Affairs in Eastern Europe. Targets could not be identified by name due to national security reasons.\n These intrusions represent the latest entries in a long list of victims, most of which include diplomatic and military entities. This list started in the mid-2000s with the Pentagon and has continued throughout the years with targets in Europe, the Middle East, Asia, and Africa.\n The January 2020 attacks, however, stood out due to the deployment of an updated version of the ComRAT malware, which ESET says contained some pretty clever new features.\n  The  ComRAT malware, also known as Agent.BTZ, is one of Turla&#39;s oldest weapons, and the one they  used to siphon data from the Pentagon&#39;s network in 2008.\n   The tool has seen several updates across the years, with new versions discovered in  2014 and  2017, respectively.\n  The latest version, known as ComRAT v4, was first seen in 2017, however, in a report published today, ESET says they&#39;ve spotted a variation of ComRAT v4 that includes two new features, such as the ability to exfiltrate antivirus logs and the ability to control the malware using a Gmail inbox.\n   The first of these features is the malware&#39;s ability to collect antivirus logs from an infected host and upload it to one of its command and control servers.\n The exact motives of a hacker group will always remain unclear, but Matthieu Faou, the ESET researcher who analyzed the malware, told  ZDNet that Turla operators might be collecting antivirus logs to &#34;allow them to better understand if and which one of their malware sample was detected.&#34;\n The belief is that if Turla operators see a detection, they can then tweak their malware and avoid future detections on other systems, where they can then operate undetected.\n Faou says that malware that steals logs is common, but it&#39;s always hard for incident responders to detect the behavior.\n &#34;The thing is that it is generally hard to determine what files were exfiltrated by the attackers,&#34; Faou told us. &#34;But for relatively advanced groups, it is not uncommon to try to understand if they are detected or if they leave traces behind them or not.&#34;\n  But this wasn&#39;t the only major change in the latest ComRAT malware version. Faou says that the malware now includes not one, but two command-and-control mechanisms.\n The first is the classic method of contacting a remote server via HTTP and retrieving instructions to execute on infected hosts.\n The second, and the new one, is the use of Gmail&#39;s web interface. Faou says that the latest ComRAT v4 takes over one of the victim&#39;s browsers, loads a predefined cookie file, and then initiates a session to the Gmail web dashboard.\n Here, the malware reads recent emails in the inbox, from where it downloads file attachments, and then reads the instructions contained within the file.\n The idea is that whenever Turla operators want to issue new commands to ComRAT instances running on infected hosts, the hackers merely have to send an email to the Gmail address. All data collected following the execution of instructions sent this way is sent back to the Gmail inbox, and redirected back to Turla operators.\n  ESET says that despite the new features, Turla operators continue to use ComRAT as they did before, which is primarily as a second-stage payload on already infected hosts. Here, ComRAT is used to search the filesystem for specific files, and then exfiltrate the data to a remote point, usually a cloud file sharing account on OneDrive or 4shared.\n  Two weeks ago, Kaspersky also published a report on some older Turla malware that received a nifty update. Researchers said they spotted a new version of the COMpfun malware, which Turla operators could control using a novel and never-before-seen system  that relied on HTTP status codes.", "posttime": "2020-05-28 08:05:46", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u75c5\u6bd2,hacker,\u6076\u610f\u8f6f\u4ef6", "title": "Turla Hacker Group\u7a83\u53d6\u9632\u75c5\u6bd2\u65e5\u5fd7\u4ee5\u67e5\u770b\u662f\u5426\u68c0\u6d4b\u5230\u5176\u6076\u610f\u8f6f\u4ef6", "title_en": "Turla Hacker Group Steals Antivirus Logs To See If Its Malware Was Detected", "transed": 1, "url": "https://www.zdnet.com/article/turla-hacker-group-steals-antivirus-logs-to-see-if-its-malware-was-detected/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u75c5\u6bd2", "hacker", "\u6076\u610f\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "5253dd6c43cd039d295da84a253dd826.jpg", "infoid": 1004004, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u5fae\u8f6f\u53d1\u5e03\u4e86Winget(\u4e0d\u8981\u4e0eAppGet\u6df7\u6dc6)\uff0c\u4f5c\u4e3a\u51762020\u7248\u672c\u58f0\u660e\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5929\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u6574\u7406\u6211\u7684\u60f3\u6cd5\uff0c\u5f04\u6e05\u695a\u8fc7\u53bb12\u4e2a\u6708\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\nTLDR\uff1b\u6211\u5c06\u4e0d\u518d\u5f00\u53d1AppGet\u3002\u5ba2\u6237\u7aef\u548c\u540e\u7aef\u670d\u52a1\u5c06\u7acb\u5373\u8fdb\u5165\u7ef4\u62a4\u6a21\u5f0f\uff0c\u76f4\u52302020\u5e748\u67081\u65e5\uff0c\u5c4a\u65f6\u5b83\u4eec\u5c06\u88ab\u6c38\u4e45\u5173\u95ed\u3002\n\u4e00\u5e74\u524d(2019\u5e747\u67083\u65e5)\uff0c\u6211\u6536\u5230\u4e00\u5c01\u6765\u81ea\u5fae\u8f6f\u9ad8\u7ea7\u7ecf\u7406\u5b89\u5fb7\u9c81\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\n\u6211\u8d1f\u8d23Windows\u5e94\u7528\u7a0b\u5e8f\u6a21\u578b\u5de5\u7a0b\u56e2\u961f\uff0c\u7279\u522b\u662f\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u56e2\u961f\u3002\u6211\u53ea\u60f3\u7ed9\u4f60\u4e00\u5f20\u7b80\u77ed\u7684\u4fbf\u6761\uff0c\u611f\u8c22\u4f60\u6784\u5efa\u4e86Appget-\u8fd9\u662f\u5bf9Windows\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8865\u5145\uff0c\u8ba9Windows\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u672a\u6765\u51e0\u5468\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u6e29\u54e5\u534e\u4e0e\u5176\u4ed6\u516c\u53f8\u4f1a\u9762\uff0c\u4f46\u5982\u679c\u60a8\u6709\u65f6\u95f4\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u4e0e\u60a8\u548c\u60a8\u7684\u56e2\u961f\u4f1a\u9762\uff0c\u542c\u53d6\u6709\u5173\u5982\u4f55\u8ba9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u5de5\u4f5c\u66f4\u8f7b\u677e\u7684\u53cd\u9988\u3002\n\u81ea\u7136\uff0c\u6211\u5f88\u5174\u594b\uff1b\u6211\u7684\u7231\u597d\u9879\u76ee\u88ab\u5fae\u8f6f\u6ce8\u610f\u5230\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u6211\u56de\u590d\u4e86\uff0c\u4e24\u4e2a\u6708\u540e\uff0c\u52a0\u4e0a\u51e0\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4eec\u7ec8\u4e8e\u8ba1\u5212\u4e8e8\u670820\u65e5\u5728\u5fae\u8f6f\u6e29\u54e5\u534e\u5f00\u4f1a\u3002\u4f1a\u8bae\u662f\u5728\u6211\u3001\u5b89\u5fb7\u9c81\u548c\u540c\u4e00\u4ea7\u54c1\u7ec4\u7684\u53e6\u4e00\u4f4d\u5de5\u7a0b\u7ecf\u7406\u4e4b\u95f4\u8fdb\u884c\u7684\u3002\u6211\u73a9\u5f97\u5f88\u5f00\u5fc3\uff1b\u6211\u4eec\u8c08\u8bba\u4e86AppGet\u80cc\u540e\u7684\u60f3\u6cd5\uff0c\u6211\u8ba4\u4e3a\u76ee\u524dWindows\u4e2d\u7684\u5305\u7ba1\u7406\u5668\u7cfb\u7edf\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4ee5\u53ca\u6211\u5bf9AppGet\u7684\u672a\u6765\u6709\u4ec0\u4e48\u8ba1\u5212\u3002\u6211\u4eec\u51fa\u53bb\u5403\u5348\u996d\uff0c\u804a\u4e86\u66f4\u591a\u5173\u4e8eAppGet\u3001Windows Phone\u548c\u5176\u4ed6\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u4f1a\u8bae\u7684\u7ed3\u679c\u662f\uff0c\u5fae\u8f6f\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u5e2e\u52a9\u6211\u4eec\uff1f\u6211\u63d0\u5230\u8fc7\u4e00\u4e9bAzure\u4fe1\u7528\u4f1a\u5f88\u597d\uff0c\u5f97\u5230\u4e00\u4e9b\u5173\u4e8e\u65b0\u7684MSIX\u5305\u5982\u4f55\u5de5\u4f5c\u7684\u6587\u6863\uff0c\u5982\u679c\u4ed6\u4eec\u80fd\u4fee\u590d\u6211\u5728\u4e0b\u8f7d\u94fe\u63a5\u4e0a\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u5f88\u9ad8\u5174\u89c1\u5230\u60a8\uff0c\u5e76\u4e86\u89e3\u66f4\u591a\u5173\u4e8eAppget\u7684\u60c5\u51b5\u3002\u6211\u6b63\u5728\u4e3a\u60a8\u8ddf\u8fdbAzure\u542f\u52a8\u5b9a\u4ef7\u3002\u5982\u4f60\u6240\u77e5\uff0c\u6211\u4eec\u662fWindows\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u8fd9\u4e00\u9886\u57df\u505a\u5f97\u66f4\u591a\u3002\u6211\u7684\u56e2\u961f\u6b63\u5728\u58ee\u5927\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u5efa\u7acb\u4e00\u4e2a\u56e2\u961f\uff0c\u8d1f\u8d23\u786e\u4fddWindows\u4e0a\u7684\u5305\u7ba1\u7406\u5668\u548c\u8f6f\u4ef6\u5206\u53d1\u5411\u524d\u8fc8\u8fdb\u4e00\u5927\u6b65\u3002\u6211\u4eec\u6b63\u5728\u5bfb\u6c42\u5bf9\u6211\u4eec\u5728Windows\u4e0a\u542f\u7528\u8f6f\u4ef6\u5206\u53d1\u7684\u65b9\u5f0f\u505a\u51fa\u4e00\u4e9b\u91cd\u5927\u6539\u53d8\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a(\u55ef\uff0c\u6211\u60f3\u8bf4\u8fd9\u4e0d\u662f\u5417\uff1f)\u3002\u5e2e\u52a9\u5b9a\u4e49\u6574\u4e2aAzure/Microsoft 365\u4e2dWindows\u548c\u5e94\u7528\u7a0b\u5e8f\u5206\u53d1\u7684\u672a\u6765\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u6709\u6ca1\u6709\u8003\u8651\u8fc7\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u81f4\u529b\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5728\u5fae\u8f6f\uff1f\n\u8d77\u521d\uff0c\u6211\u6709\u70b9\u72b9\u8c6b\uff1b\u6211\u4e0d\u60f3\u53bb\u5fae\u8f6f\u4ece\u4e8bWindows Store\u3001MSI Engine\u6216\u5176\u4ed6\u4e00\u4e9b\u4e0e\u5e94\u7528\u90e8\u7f72\u76f8\u5173\u7684\u5de5\u4f5c\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u5f97\u5230\u4e86\u4fdd\u8bc1\uff0c\u6211\u4f1a\u628a\u6240\u6709\u7684\u65f6\u95f4\u90fd\u82b1\u5728AppGet\u4e0a\u3002\u7ecf\u8fc7\u5927\u7ea6\u4e00\u4e2a\u6708\u7684\u957f\u65f6\u95f4\u7535\u5b50\u90ae\u4ef6\u6765\u56de\u53d1\u9001\uff0c\u6211\u4eec\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u8fd9\u4e00\u5b89\u6392\u5c06\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6536\u8d2d-\u8058\u7528\uff1b\u5fae\u8f6f\u5c06\u8058\u7528\u6211\uff0cAppGet\u5c06\u4e0e\u6211\u4e00\u8d77\u6765\uff0c\u4ed6\u4eec\u5c06\u51b3\u5b9a\u662f\u60f3\u8981\u91cd\u65b0\u547d\u540d\u4e3a\u5176\u4ed6\u540d\u79f0\uff0c\u8fd8\u662f\u5c06\u5176\u66f4\u540d\u4e3aMicrosoft AppGet\u3002\n\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u975e\u5e38\u4e0d\u6e05\u695a\u6211\u5728\u5fae\u8f6f\u5c06\u626e\u6f14\u4ec0\u4e48\u89d2\u8272\u3002\u6211\u7684\u804c\u8d23\u662f\u4ec0\u4e48\uff1f\u6211\u8be5\u5411\u8c01\u6c47\u62a5\u5462\uff1f\u8c01/\u4efb\u4f55\u4eba\u4f1a\u5411\u6211\u6c47\u62a5\uff1f\u5728\u90a3\u4e9b\u7f13\u6162\u7684\u5bf9\u8bdd\u4e2d\uff0c\u6211\u8bd5\u56fe\u6f84\u6e05\u5176\u4e2d\u7684\u4e00\u4e9b\u7b54\u6848\uff0c\u4f46\u4ece\u672a\u5f97\u5230\u660e\u786e\u7684\u7b54\u6848\u3002\n\u5728\u53c8\u8fdb\u884c\u4e86\u51e0\u4e2a\u6708\u7684\u975e\u5e38\u7f13\u6162\u7684\u7535\u5b50\u90ae\u4ef6\u4ea4\u8c08\u540e\uff0c\u6211\u88ab\u544a\u77e5\u901a\u8fc7BizDev\u8fdb\u884c\u6536\u8d2d-\u62db\u8058\u8fc7\u7a0b\u5c06\u9700\u8981\u975e\u5e38\u957f\u7684\u65f6\u95f4\u3002\u52a0\u5feb\u8fd9\u4e00\u8fc7\u7a0b\u7684\u53e6\u4e00\u79cd\u9009\u62e9\u662f\uff0c\u53ea\u9700\u7528\u201c\u5956\u91d1\u201d\u8058\u7528\u6211\uff0c\u7136\u540e\u5728\u4e8b\u540e\u8fc1\u79fb\u4ee3\u7801\u6240\u6709\u6743\u3002\u6211\u6ca1\u6709\u4efb\u4f55\u5f02\u8bae\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u96f7\u5fb7\u8499\u5fb7\u5b89\u6392\u4e86\u4e00\u4e9b\u4f1a\u8bae/\u9762\u8bd5\u3002\n12\u67085\u65e5\uff0c\u6211\u98de\u5f80\u897f\u96c5\u56fe\uff0c\u5728\u5fae\u8f6f\u603b\u90e8\u53c2\u52a0\u4e86\u4e00\u6574\u5929\u7684\u9762\u8bd5/\u4f1a\u8bae\u3002\u6211\u4f1a\u89c1\u4e86\u56db\u4e2a\u4e0d\u540c\u7684\u4eba\uff1b\u5176\u4e2d\u4e09\u4e2a\u4f1a\u8bae\u66f4\u50cf\u662f\u5178\u578b\u7684\u9762\u8bd5\uff1b\u4e0eAndrew\u7684\u4f1a\u8bae\u66f4\u591a\u7684\u662f\u5173\u4e8e\u5728\u8fd9\u4e00\u5207\u7ed3\u675f\u540e\u6211\u4eec\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u8fc1\u79fbAppGet\u7684\u6d41\u7a0b\u548c\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u4fbf\u80fd\u591f\u5904\u7406Microsoft\u7684\u89c4\u6a21\u3002\u6211\u4eec\u8c08\u5230\u4e86\u6211\u4eec\u7684\u4e00\u4e9b\u9009\u62e9\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u8ba4\u4e3a\u4e00\u5207\u90fd\u5f88\u987a\u5229\u3002\n\u6211\u6700\u540e\u4e00\u6b21\u4f1a\u8bae\u5728\u4e0b\u53486\u70b9\u5de6\u53f3\u7ed3\u675f\u3002\u6211\u6253\u4e86\u4e00\u8f86\u4f18\u6b65\u53bb\u673a\u573a\uff0c\u7136\u540e\u56de\u5230\u4e86\u6e29\u54e5\u534e\u3002\n\u7136\u540e\uff0c\u6211\u6709\u516d\u4e2a\u6708\u6ca1\u6709\u6536\u5230\u5fae\u8f6f\u4efb\u4f55\u4eba\u7684\u4efb\u4f55\u56de\u97f3\u3002\n\u76f4\u5230\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u5f97\u5230\u4e86Winget\u7b2c\u4e8c\u5929\u53d1\u5c04\u7684\u901a\u77e5\uff0c\n\u55e8\uff0c\u51ef\u6587\uff0c\u6211\u5e0c\u671b\u4f60\u548c\u4f60\u7684\u5bb6\u4eba\u8fc7\u5f97\u5f88\u597d-\u4e0e\u7f8e\u56fd\u76f8\u6bd4\uff0cBC\u4f3c\u4e4e\u5728Covid\u65b9\u9762\u5904\u7406\u5f97\u5f88\u597d\u3002\n\u6211\u5f88\u62b1\u6b49\uff0c\u9996\u76f8\u7684\u804c\u4f4d\u6ca1\u6709\u6210\u529f\u3002\u6211\u60f3\u82b1\u65f6\u95f4\u544a\u8bc9\u60a8\uff0c\u6211\u4eec\u975e\u5e38\u611f\u8c22\u60a8\u7684\u610f\u89c1\u548c\u89c1\u89e3\u3002\u6211\u4eec\u4e00\u76f4\u5728\u6784\u5efawindows\u5305\u7ba1\u7406\u5668\uff0c\u7b2c\u4e00\u4e2a\u9884\u89c8\u7248\u5c06\u5728\u660e\u5929\u7684build\u4e0a\u4e0a\u7ebf\u3002\u6211\u4eec\u5728\u535a\u5ba2\u4e2d\u4e5f\u7ed9\u4e86appget\u4e00\u4e2a\u547c\u5401\uff0c\u56e0\u4e3a\u6211\u4eec\u76f8\u4fe1Windows\u4e0a\u4f1a\u6709\u4e0d\u540c\u7684\u5305\u7ba1\u7406\u5668\u7684\u7a7a\u95f4\u3002\u60a8\u5c06\u770b\u5230\u6211\u4eec\u7684\u5305\u7ba1\u7406\u5668\u4e5f\u662f\u57fa\u4e8eGitHub\u7684\uff0c\u4f46\u663e\u7136\u662f\u57fa\u4e8e\u6211\u4eec\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u7b49\u7b49\u3002\u6211\u4eec\u7684\u5305\u7ba1\u7406\u5668\u4e5f\u5c06\u662f\u5f00\u6e90\u7684\uff0c\u6240\u4ee5\u663e\u7136\u6211\u4eec\u6b22\u8fce\u60a8\u7684\u4efb\u4f55\u8d21\u732e\u3002\n\u6211\u671f\u5f85\u7740\u5728\u6211\u4eec\u660e\u5929\u4e0a\u7ebf\u540e\u4e0e\u60a8\u8ba8\u8bba\u6211\u4eec\u7684\u5957\u9910\u7ba1\u7406\u5668\u3002\u663e\u7136\u5728\u660e\u5929\u65e9\u4e0a\u4e4b\u524d\u8fd9\u662f\u4fdd\u5bc6\u7684\u6240\u4ee5\u8bf7\u4fdd\u5b88\u79d8\u5bc6\u3002\u4f60\u548c\u5de7\u514b\u529b\u662f\u6211\u4eec\u4e8b\u5148\u544a\u8bc9\u7684\u552f\u4e00\u4e24\u4e2a\u4eba\u3002\n\u6211\u5e76\u4e0d\u592a\u60ca\u8bb6\uff1b\u51e0\u4e2a\u6708\u524d\u6211\u5c31\u77e5\u9053\u201c\u5fae\u8f6f\u7684\u4e8b\u60c5\u201d\u5e76\u6ca1\u6709\u53d1\u751f\u3002\n\u6211\u7b49\u5230\u7b2c\u4e8c\u5929\u624d\u770b\u5230\u8fd9\u4e2a\u65b0\u7684\u5305\u7ba1\u7406\u5668\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5f53\u6211\u6700\u7ec8\u770b\u5230\u516c\u544a\u548cGitHub\u5b58\u50a8\u5e93\u65f6\uff0c\u6211\u611f\u5230\u9707\u60ca\uff1f\u5fc3\u70e6\u610f\u4e71\uff1f\u6211\u751a\u81f3\u4e0d\u786e\u5b9a\u6211\u5728\u770b\u7684\u662f\u4ec0\u4e48\u3002\n\u5f53\u6211\u628a\u5b83\u62ff\u7ed9\u6211\u59bb\u5b50\u770b\u65f6\uff0c\u5979\u8bf4\u7684\u7b2c\u4e00\u53e5\u8bdd\u5c31\u662f\uff1a\u201c\u4ed6\u4eec\u7ba1\u5b83\u53eb\u7ffc\u7247\uff1f\u4f60\u662f\u8ba4\u771f\u7684\u5417\uff1f\u201c\u3002\u6211\u751a\u81f3\u4e0d\u9700\u8981\u5411\u5979\u89e3\u91ca\u6838\u5fc3\u673a\u5236\u3001\u672f\u8bed\u3001\u6e05\u5355\u683c\u5f0f\u548c\u7ed3\u6784\uff0c\u751a\u81f3\u5305\u5e93\u7684\u6587\u4ef6\u5939\u7ed3\u6784\u662f\u5982\u4f55\u53d7\u5230AppGet\u7684\u542f\u53d1\u7684\u3002\n\u4ed6\u4eec\u6ca1\u96c7\u6211\uff0c\u6211\u662f\u4e0d\u662f\u5f88\u751f\u6c14\uff1f\u4e0d\u662f\u7684\uff0c\u53c2\u89c2\u5b8c\u6821\u56ed\u540e\uff0c\u6211\u4e0d\u592a\u786e\u5b9a\u6211\u662f\u5426\u60f3\u4e3a\u8fd9\u4e48\u5927\u7684\u516c\u53f8\u5de5\u4f5c\uff0c\u800c\u4e14\u4ece\u52a0\u62ff\u5927\u642c\u5230\u7f8e\u56fd\u4e5f\u4e0d\u662f\u6211\u592a\u5174\u594b\u7684\u4e8b\u60c5\u3002\u6b64\u5916\uff0c\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u8ba4\u4e3a\u8fd9\u662f\u4e00\u7b14\u4ea4\u6613\u3002\n\u5fae\u8f6f\uff0c\u4e00\u5bb6\u5e02\u503c1.4\u4e07\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\uff0c\u6700\u7ec8\u9f50\u5fc3\u534f\u529b\uff0c\u4e3a\u4ed6\u4eec\u7684\u65d7\u8230\u4ea7\u54c1\u53d1\u5e03\u4e86\u4e00\u4e2a\u50cf\u6837\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u6211\u662f\u4e0d\u662f\u611f\u5230\u4e0d\u5b89\uff1f\u4e0d\uff0c\u4ed6\u4eec\u51e0\u5e74\u524d\u5c31\u8be5\u8fd9\u4e48\u505a\u4e86\u3002\u4ed6\u4eec\u4e0d\u5e94\u8be5\u50cf\u4ed6\u4eec\u90a3\u6837\u628aWindows Store\u641e\u5f97\u4e00\u56e2\u7cdf\u3002\n\u5b9e\u9645\u4e0a\uff0c\u65e0\u8bba\u6211\u591a\u4e48\u52aa\u529b\u5730\u63a8\u5e7fAppGet\uff0c\u5b83\u7684\u589e\u957f\u901f\u5ea6\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u5fae\u8f6f\u89e3\u51b3\u65b9\u6848\u90a3\u6837\u5feb\u3002\u6211\u521b\u5efaAppGet\u4e0d\u662f\u4e3a\u4e86\u53d1\u8d22\uff0c\u4e0d\u662f\u4e3a\u4e86\u6210\u540d\uff0c\u4e5f\u4e0d\u662f\u4e3a\u4e86\u53d7\u96c7\u4e8e\u5fae\u8f6f\u3002\u6211\u521b\u5efaAppGet\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u6211\u4eec\u8fd9\u4e9bWindows\u7528\u6237\u4e5f\u5e94\u8be5\u5f97\u5230\u4e0d\u9519\u7684\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u4f53\u9a8c\u3002\n\u8ba9\u6211\u70e6\u607c\u7684\u662f\u6574\u4ef6\u4e8b\u662f\u600e\u4e48\u5904\u7406\u7684\u3002\u7f13\u6162\u800c\u53ef\u6015\u7684\u4ea4\u6d41\u901f\u5ea6\u3002\u6700\u540e\u5b8c\u5168\u7684\u65e0\u7ebf\u7535\u5bc2\u9759\u3002\u4f46\u6700\u8ba9\u4eba\u75db\u5fc3\u7684\u662f\u516c\u544a\u3002\u5ba2\u89c2\u4e0a\uff0cWinget\u7684\u5927\u90e8\u5206\u60f3\u6cd5\u90fd\u6765\u81eaAppGet\uff0c\u53ea\u662f\u63d0\u5230\u5b83\u662f\u78b0\u5de7\u5b58\u5728\u7684\u53e6\u4e00\u4e2a\u5305\u7ba1\u7406\u5668\uff1b\u800c\u5176\u4ed6Winget\u5f88\u5c11\u5171\u4eab\u7684\u5305\u7ba1\u7406\u5668\u5219\u88ab\u63d0\u5230\uff0c\u5e76\u66f4\u4ed4\u7ec6\u5730\u8fdb\u884c\u4e86\u89e3\u91ca\u3002\n\u8fd8\u6709\u4e00\u7ebf\u5e0c\u671b\u3002Winget\u5c06\u5efa\u7acb\u5728\u575a\u5b9e\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5177\u6709\u6210\u529f\u7684\u6f5c\u529b\u3002\u6211\u4eec\u5ffd\u89c6\u4e86Windows\u7528\u6237\u53ef\u80fd\u6700\u7ec8\u4f1a\u6709\u4e00\u4e2a\u50cf\u6837\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u3002-", "note_en": "Microsoft released  WinGet (  Not to be mistaken with    AppGet) earlier this week as part of their  Build 2020 announcements. For the past few days, I\u2019ve been collecting my thoughts figuring out what actually happened in the past 12 months.\n TLDR;   I\u2019m no longer going to be developing AppGet. The client and backend services will go into maintenance mode immediately until August 1st, 2020, at which point they\u2019ll be shut down permanently.\n  A year ago (July 3rd  , 2019) I got this email from Andrew, a high-level manager at Microsoft,\n I run the Windows App Model engineering team and in particular the app deployment team. Just wanted to drop you a quick note to thank you for building appget \u2014 it\u2019s a great addition to the Windows ecosystem and makes Windows developers life so much easier. We will likely be up in Vancouver in the coming weeks for meetings with other companies but if you had time we\u2019d love to meet up with you and your team to get feedback on how we can make your life easier building appget.\n Naturally, I was excited; my hobby project being noticed by Microsoft was a big deal. I replied, and two months and a few emails later, we finally had a meeting planned on August 20th at Microsoft Vancouver. The meeting was between me, Andrew and another engineering manager in the same product group. I had a great time; we talked about the ideas behind AppGet,  what I thought was broken about the current package manager systems in Windows and what I had planned for AppGet\u2019s future. We went out for lunch and talked a bit more about AppGet, Windows Phone, and a few other things, but the outcome of the meeting as far as I understood it was,   what can Microsoft do to help? I mentioned some Azure credit would be nice, getting some doc on how the new MSIX packages work and if they could fix a few issues I had with some of their download links.\n  it was a pleasure to meet you and to find out more about appget. I\u2019m following up on the azure startup pricing for you. As you know we are big fans of package managers on Windows and we are looking to do more in that space. My team is growing and part of that is to build a team who is responsible for ensuring package managers and software distribution on Windows makes a big step forward. We are looking to make some significant changes to the way that we enable software distribution on Windows and there\u2019s a great opportunity (well I would say that wouldn\u2019t I?) to help define the future of Windows and app distribution throughout Azure/Microsoft 365.\n With that in mind have you considered spending more time dedicated to appget and potentially at Microsoft?\n Initially, I was a bit hesitant; I didn\u2019t want to go to Microsoft to work on Windows Store, MSI engine or some other app deployment-related stuff. Shortly after, I was assured that I would spend all my time on AppGet. After about a month of prolonged email back and forth, we came to the conclusion that the arrangement will be very similar to an acqui-hire; Microsoft would hire me, AppGet would come with me, and they would decide if they wanted to rename it something else, or it would become Microsoft AppGet.\n Throughout the whole process, I was very unclear on what my role would be at Microsoft. What would my responsibilities be? Who would I report to? Who/anyone would report to me? I tried clearing some of these answers throughout those slow conversations but never got a clear answer.\n After another few months of again very slow email conversations, I was told that the acqui-hire process through BizDev would take a very long time. An alternative to speed up the process would be just to hire me with a \u201c  bonus\u201d and then work on migrating the code ownership after the fact. I didn\u2019t have any objections, so we scheduled some meetings/interviews in Redmond.\n I flew to Seattle on December 5th to have a full day of interviews/meetings at Microsoft HQ. I met with four different people; three of the meetings were more like your typical interviews; the meeting with Andrew was more about what we should do once this is all over and how we would migrate AppGet\u2019s process and infrastructure to be able to handle Microsoft\u2019s scale. We talked about some of our options, but in general, I thought everything went well.\n My last meeting ended at around 6 pm. I took an Uber to the airport and was back in Vancouver.\n And then, I didn\u2019t hear anything back from anyone at Microsoft for six months.\n Until earlier this week when I was given heads up about WinGet\u2019s launch the next day,\n Hi Keivan, I hope you and your family are doing well \u2014 BC seems to have a good handle on covid compared to the us.\n I\u2019m sorry that the pm position didn\u2019t work out. I wanted to take the time to tell you how much we appreciated your input and insights. We have been building the windows package manager and the first preview will go live tomorrow at build. We give appget a call out in our blog post too since we believe there will be space for different package managers on windows. You will see our package manager is based on GitHub too but obviously with our own implementation etc. our package manager will be open source too so obviously we would welcome any contribution from you.\n I look forward to talking to you about our package manager once we go live tomorrow. Obviously this is confidential until tomorrow morning so please keep this to yourself. You and chocolatey are the only folks we have told about this in advance.\n I wasn\u2019t too surprised; I had figured out months ago that the \u201cMicrosoft thing\u201d isn\u2019t happening.\n I waited until the next day to see what this new package manager was going to be like. When I finally saw the  announcement and the  GitHub repositories, I was shocked? Upset? I wasn\u2019t even sure what I was looking at.\n When I showed it to my wife, the first thing she said was, \u201cThey Called it WinGet? are you serious!?\u201d I didn\u2019t even have to explain to her how the core mechanics, terminology, the  manifest format and structure, even the package repository\u2019s folder structure, are very   inspired by AppGet.\n Am I upset they didn\u2019t hire me? Not really, after visiting the campus, I wasn\u2019t too sure I wanted to work for such a big company, also moving from Canada to the U.S. wasn\u2019t something I was too excited about. Also, throughout the process, at no time I assumed this was done deal.\n Am I upset that Microsoft, a 1.4 trillion-dollar company, finally got their act together and released a decent package manager for their flagship product? No, they should\u2019ve done it years ago. They shouldn\u2019t have screwed Windows Store as badly as they did.\n Realistically, no matter how hard I tried to promote AppGet, it would never grow at the rate a   Microsoft solution would. I didn\u2019t create AppGet to get rich or to become famous or get hired by Microsoft. I created AppGet because I thought us Windows users deserved a decent app management experience too.\n What bothers me is how the whole thing was handled. The slow and dreadful communication speed. The total radio silence at the end. But the part that hurts the most was the announcement. AppGet, which is objectively where most ideas for WinGet came from, was only mentioned as another package manager   that just happened to exist; While other package managers that WinGet shares very little with were mentioned and explained much more deliberately.\n There is a silver lining. WinGet will be built on a solid foundation and has the potential to succeed. And we neglected Windows users might finally have a decent package manager. \u2014", "posttime": "2020-05-28 08:04:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,appget", "title": "AppGet\u53bb\u4e16\u7684\u90a3\u4e00\u5929", "title_en": "The Day AppGet Died", "transed": 1, "url": "https://keivan.io/the-day-appget-died/", "via": "", "real_tags": ["app", "appget"]}, {"category": "", "categoryclass": "", "imagename": "e7df6d203f02a2964574bc6841958324.jpg", "infoid": 1004003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "IBM3270\u578b\u7ec8\u7aef\u662f\u5927\u578b\u8ba1\u7b97\u673a\u7ec8\u7aef\u3002\u6211\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5bf9IBM\u7684\u5927\u578b\u673a\u7740\u8ff7\uff0c\u5c24\u5176\u662f\u8fd9\u4e9b\u7ec8\u7aef\u30023278\u548c3279\u7b49\u65e9\u671f\u673a\u578b\u6709\u72ec\u7279\u7684\u7f8e\u5b66\uff0c\u5b83\u4eec\u7684\u5757\u72b6\u8bbe\u8ba1\u4e0e\u65e0\u5904\u4e0d\u5728\u7684VT\u7cfb\u5217\u7ec8\u7aef\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\n\u6211\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u60f3\u8981\u5c06\u771f\u6b63\u7684IBM\u7ec8\u7aef\u8fde\u63a5\u5230Hercules\u4eff\u771f\u5668\u4e0a\u7684\u4eba\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f88\u96be\u627e\u5230\u5fc5\u8981\u7684\u5e26\u4ee5\u592a\u7f51\u6216\u4ee4\u724c\u73af\u63a5\u53e3\u7684IBM3174\u7ec8\u7aef\u63a7\u5236\u5668\uff0c\u8fd9\u662f\u652f\u6301TCP/IP\u4e14\u5904\u4e8e\u5de5\u4f5c\u72b6\u6001\u7684\u8f6f\u4ef6\u7248\u672c\u3002\u6b64\u5916\uff0c\u5b83\u4eec\u5f88\u5927\uff0c\u566a\u97f3\u5f88\u5927\uff0c\u800c\u4e14\u5f88\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u662f\u4ece\u4e00\u5f20\u4e0d\u5e38\u89c1\u76842.4MB 5.25\u82f1\u5bf8\u8f6f\u76d8\u4e0a\u52a0\u8f7d\u7684-\u5982\u679c\u4f60\u5e78\u8fd0\u7684\u8bdd\uff0c\u8fd8\u6709\u4e00\u4e2a20MB\u7684\u786c\u76d8\u9009\u9879\u3002\u6240\u4ee5\u6211\u51b3\u5b9a\u5efa\u9020\u6211\u81ea\u5df1\u7684\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\n\u6839\u636eIBM\u7684\u8bf4\u6cd5\uff0c3270\u4fe1\u606f\u663e\u793a\u7cfb\u7edf\u4e8e1972\u5e74\u63a8\u51fa\uff0c5\u5e74\u540e\u76841977\u5e74\u6210\u4e3a\u6807\u5fd7\u6027\u76843278\u7ec8\u7aef\u3002\u5f69\u8272\u7ec8\u7aef\u4e8e1979\u5e74\u4e0e3279\u4e00\u8d77\u95ee\u4e16\u3002\u5c06IBM\u578b\u53f7\u548c\u65e5\u671f\u6df7\u4e3a\u4e00\u8c08\u975e\u5e38\u4ee4\u4eba\u56f0\u60d1\uff01\n3270\u662f\u6700\u6613\u8bc6\u522b\u7684\u9762\u5411\u5757\u7684\u7ec8\u7aef\u4e4b\u4e00\u30023270\u6570\u636e\u6d41\u5141\u8bb8\u7a0b\u5e8f\u5458\u63cf\u8ff0\u5305\u542b\u53d7\u4fdd\u62a4\u6587\u672c\u3001\u4e0d\u53d7\u4fdd\u62a4\u5b57\u6bb5\u548c\u683c\u5f0f\u5c5e\u6027\u7684\u5c4f\u5e55\u3002\u4e0d\u53d7\u4fdd\u62a4\u7684\u5b57\u6bb5\u5141\u8bb8\u60a8\u8f93\u5165\u6216\u4fee\u6539\u6570\u636e\u3002\u7ec8\u7aef\u4e0d\u4f1a\u50cf\u9762\u5411\u5b57\u7b26\u7684\u7ec8\u7aef\u90a3\u6837\u7acb\u5373\u5c06\u60a8\u6309\u4e0b\u7684\u6bcf\u4e2a\u952e\u90fd\u53d1\u9001\u7ed9\u4e3b\u673a\uff0c\u800c\u662f\u4f1a\u5b58\u50a8\u8f93\u5165\uff0c\u76f4\u5230\u60a8\u6309\u4e0b\u6ce8\u610f\u952e(\u5982Enter)\u3002\u53ea\u6709\u5f53\u60a8\u6309\u4e0b\u6ce8\u91ca\u952e\u65f6\uff0c\u8f93\u5165\u624d\u4f1a\u53d1\u9001\u5230\u4e3b\u673a\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f29\u77ed\u7f13\u6162\u6216\u4e0d\u53ef\u9760\u8fde\u63a5\u7684\u611f\u77e5\u54cd\u5e94\u65f6\u95f4\u3002\u5b83\u8fd8\u964d\u4f4e\u4e86\u4e3b\u673a\u5904\u7406\u8981\u6c42\uff0c\u5141\u8bb8\u8fde\u63a5\u5230\u4e3b\u673a\u7684\u7ec8\u7aef\u6bd4\u9762\u5411\u5b57\u7b26\u7684\u7ec8\u7aef\u591a\u5f97\u591a\u3002\u5b83\u4e0eHTML\u8868\u5355\u6ca1\u6709\u592a\u5927\u4e0d\u540c\u3002\n\u65e9\u671f\u76843270\u7ec8\u7aef\u4e0a\u6709\u4ee4\u4eba\u5174\u594b\u7684\u5916\u56f4\u8bbe\u5907\uff0c\u5305\u62ec\u7528\u4e8e\u6539\u8fdb\u5bfc\u822a\u548c\u78c1\u5361\u8bfb\u5361\u5668\u7684\u5149\u7b14\uff1b\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4ece\u672a\u5728eBay\u4e0a\u770b\u5230\u8fc7\u8fd9\u4e9b\u3002\n\u5728\u661f\u5f62\u62d3\u6251\u4e2d\uff0c\u7ec8\u7aef\u901a\u8fc7\u540c\u8f74\u7535\u7f06\u8fde\u63a5\u5230\u63a7\u5236\u5668\u3002Balun\u53ef\u4ee5\u5c06\u6b64\u8f6c\u6362\u4e3a\u66f4\u5e38\u89c1\u7684\u53cc\u7ede\u7ebf\u5e03\u7ebf\uff0c\u5c3d\u7ba1\u6211\u8ba4\u4e3aIBM\u66f4\u559c\u6b22\u60a8\u4f7f\u7528\u4ed6\u4eec\u7684\u5e03\u7ebf\u7cfb\u7edf\u3002\u63a7\u5236\u5668\u6839\u636e\u662f\u672c\u5730\u63a7\u5236\u5668\u8fd8\u662f\u9065\u63a7\u5668\u548c\u5e74\u4efd\u901a\u8fc7\u4e0d\u540c\u7684\u63a5\u53e3\u8fde\u63a5\u5230\u4e3b\u673a\uff0c\u63a5\u53e3\u5305\u62ec\uff1a\n\u56e0\u6b64\uff0cIBM 3174\u548c3274\u63a7\u5236\u5668\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5f62\u72b6\u548c\u5927\u5c0f-\u4ece\u5c0f\u578b\u53f0\u5f0f\u8bbe\u5907\u3001\u4e2d\u578b\u673a\u67b6\u5b89\u88c5\u8bbe\u5907\u5230\u5927\u578b\u843d\u5730\u5f0f\u8bbe\u5907\u3002\n\u5305\u62ecMemorex\u5728\u5185\u7684\u5176\u4ed6\u516c\u53f8\u4e5f\u751f\u4ea7\u517c\u5bb9\u7684\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u3002\u4e00\u65e6\u4e2a\u4eba\u8ba1\u7b97\u673a\u53d8\u5f97\u53f8\u7a7a\u89c1\u60ef\uff0c\u7ec8\u7aef\u5c31\u53ef\u4ee5\u88abISA\u3001PCMCIA\u4ee5\u53ca\u540e\u6765\u7684PCI\u5361\u53d6\u4ee3\uff0cPCI\u5361\u5141\u8bb8\u8fd0\u884c\u4eff\u771f\u5668\u7684PC\u4f7f\u7528\u76f8\u540c\u7684\u540c\u8f74\u7535\u7f06\u8fdb\u884c\u8fde\u63a5\u3002\u540e\u6765\uff0c\u968f\u7740LAN\u548cTCP/IP\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fde\u63a5\u88ab\u4e0d\u9700\u8981\u989d\u5916\u786c\u4ef6\u6216\u540c\u8f74\u7535\u7f06\u7684TN3270 Telnet\u6240\u53d6\u4ee3\u3002\n\u5bf9\u4e8e\u73b0\u5728\u62e5\u6709TCP/IP\u7f51\u7edc\u4f46\u4e5f\u62e5\u6709\u5927\u91cf\u7269\u7406\u7ec8\u7aef\u7684\u5ba2\u6237\uff0c\u540e\u6765\u76843174\u63a7\u5236\u5668\u63d0\u4f9b\u4e86\u901a\u8fc7TCP/IP\u4e0a\u7684Telnet\u5c06\u8fd9\u4e9b\u7ec8\u7aef\u8fde\u63a5\u5230\u5927\u578b\u673a\u7684\u80fd\u529b\u3002\u8fd9\u4e9b\u662f\u60a8\u8981\u8fde\u63a5\u5230\u5927\u529b\u795e\u7684\u63a7\u5236\u5668\u3002\u8ba9\u6211\u611f\u5174\u8da3\u7684\u662f\uff0c\u8fd9\u4e9b\u540e\u6765\u7684\u63a7\u5236\u5668\u8fd8\u63d0\u4f9b\u4e86VT100\u4eff\u771f\u529f\u80fd\uff0c3270\u7ec8\u7aef\u53ef\u4ee5\u901a\u8fc7telnet\u8fde\u63a5\u5230UNIX\u6216VMS\u4e3b\u673a\uff0c\u5c31\u50cf\u5b83\u662fVT100\u4e00\u6837\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u4f3c\u4e4e\u5f88\u5947\u602a\uff1b\u5982\u679c\u7ec8\u7aef\u662f\u9762\u5411\u5757\u7684\uff0c\u4f3c\u4e4e\u4e0d\u53ef\u80fd\u4ee5\u4e00\u79cd\u6709\u7528\u7684\u65b9\u5f0f\u6a21\u62dfVT100\u3002\n\u6700\u540e\u4e00\u53f0IBM\u7ec8\u7aef\u662f20\u4e16\u7eaa90\u5e74\u4ee3\u672b\u63a8\u51fa\u76843483\u3002\u5230\u90a3\u65f6\uff0c\u8be5\u7ec8\u7aef\u7c7b\u4f3c\u4e8e\u7626\u5ba2\u6237\u7aef\uff0c\u5e76\u4f7f\u7528\u884c\u4e1a\u6807\u51c6\u7684VGA\u663e\u793a\u5668\u548cPS/2\u952e\u76d8\u8fde\u63a5\u3002\n\u6211\u6700\u521d\u7684\u641c\u7d22\u53d1\u73b0\u4e86\u6240\u4f7f\u7528\u7684\u7535\u7f06\u548c3270\u6570\u636e\u6d41\u7684\u63cf\u8ff0\uff0c\u8fd9\u662f\u6709\u8be6\u7ec6\u8bb0\u5f55\u7684\uff0c\u4f46\u6ca1\u6709\u5173\u4e8e\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u4f7f\u7528\u7684\u534f\u8bae\u7684\u63cf\u8ff0\u3002\u76f4\u5230\u6211\u627e\u5230\u4e86\u7528\u4e8e\u6784\u5efaPC\u63a5\u53e3\u7684\u73b0\u5df2\u8fc7\u65f6\u7684\u82af\u7247\u7684\u6570\u636e\u8868\uff0c\u6211\u624d\u4ece\u82af\u7247\u548c\u56fd\u5bb6\u534a\u5bfc\u4f53\u516c\u53f8(National Semiconductor)\u627e\u5230\u4e86\u6211\u60f3\u8981\u7684\u7ec6\u8282\uff1a\n\u8bbe\u5907\u901a\u8fc7\u7279\u6027\u963b\u6297\u4e3a93&Amp\uff1bOhm\u7684RG-62\u578b\u540c\u8f74\u7535\u7f06\u8fdb\u884c\u70b9\u5bf9\u70b9\u8fde\u63a5-\u4e0e\u4f7f\u7528\u603b\u7ebf\u62d3\u6251\u548c50&Amp\uff1bOhm\u963b\u6297\u7535\u7f06\u768410BASE2\u4ee5\u592a\u7f51\u4e0d\u540c\u3002\u4e3a\u4e86\u51cf\u5c11\u957f\u7535\u7f06\u7ebf\u8def\u4e0a\u7684\u566a\u58f0\u5e72\u6270\uff0c\u4f7f\u7528\u4e86\u5dee\u5206\u4fe1\u4ee4\uff0c\u8be5\u89c4\u8303\u5141\u8bb8\u8bbe\u5907\u4e4b\u95f4\u7684\u8ddd\u79bb\u957f\u8fbe1.5\u516c\u91cc\u3002\n\u4f7f\u7528MACHESTER\u7f16\u7801\u4ee52.3587 Mb/s\u7684\u6bd4\u7279\u7387\u53d1\u9001\u6570\u636e\u3002\u8be5\u7f16\u7801\u65b9\u6848\u786e\u4fdd\u6bcf\u4e2a\u6bd4\u7279\u4e2d\u95f4\u7684\u8f6c\u6362(\u4ece\u9ad8\u5230\u4f4e\u6216\u4ece\u4f4e\u5230\u9ad8)\uff0c\u4ece\u800c\u5141\u8bb8\u63a5\u6536\u5668\u53ef\u9760\u5730\u6062\u590d\u6570\u636e\u3002\u4e00\u5e27\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a10\u4f4d\u5b57\uff1b\u5e27\u4e2d\u7684\u6bcf\u4e2a\u5b57\u4ee5\u540c\u6b65\u4f4d\u5f00\u59cb\uff0c\u4ee5\u5947\u5076\u6821\u9a8c\u4f4d\u7ed3\u675f\u3002\u552f\u4e00\u7684\u5e8f\u5217\u6307\u793a\u5e27\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\n\u63a7\u5236\u5668\u53d1\u8d77\u6240\u6709\u901a\u4fe1\uff1b\u5b83\u5411\u7ec8\u7aef\u53d1\u9001\u5305\u542b\u547d\u4ee4\u5b57\u548c\u53ef\u9009\u6570\u636e\u5b57(\u5c06\u5176\u89c6\u4e3a\u53c2\u6570)\u7684\u5e27\u3002\u7ec8\u7aef\u7528\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u636e\u5b57\u7684\u5e27\u8fdb\u884c\u54cd\u5e94\u3002\n\u539f\u6765\u6709\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u7ec8\u7aef\u5207\u5272\u548cDFT\u3002\u5207\u5272\u578b\u7ec8\u7aef\u4f9d\u9760\u63a7\u5236\u5355\u5143\u6765\u5904\u74063270\u6570\u636e\u6d41\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u57fa\u672c\u64cd\u4f5c\uff0c\u4f8b\u5982\u5c06\u5149\u6807\u79fb\u52a8\u5230\u8be5\u5730\u5740\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b57\u7b26\u5199\u5165\u663e\u793a\u7f13\u51b2\u5668(\u79f0\u4e3a\u518d\u751f\u7f13\u51b2\u5668)\u3002\u8be5\u63a7\u5236\u5668\u5904\u7406\u4e0e3270\u7ec8\u7aef\u76f8\u5173\u7684\u5927\u90e8\u5206\u667a\u80fd\u4eba\u5458\uff0c\u8fd9\u610f\u5473\u7740CUT\u7ec8\u7aef\u903b\u8f91\u6bd4\u53ef\u6bd4\u7684VT100\u66f4\u7b80\u5355\u3002DFT\u7c7b\u578b\u7684\u7ec8\u7aef\u53ef\u4ee5\u81ea\u5df1\u5904\u74063270\u6570\u636e\u6d41\uff0c\u5e76\u4e14\u63a7\u5236\u5668\u5c06\u5176\u4f20\u9012\u7ed9\u7ec8\u7aef\u3002\n\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728\u6613\u8da3\u4e0a\u627e\u5230\u56fd\u5bb6\u534a\u5bfc\u4f53DP8340\u53d1\u5c04\u5668\u548cDP8341\u63a5\u6536\u5668\uff0c\u6240\u4ee5\u6211\u548c\u6570\u636e\u624b\u518c\u53c2\u8003\u7535\u8def\u4e2d\u663e\u793a\u7684\u5176\u4ed6\u5143\u4ef6\u4e00\u8d77\u8d2d\u4e70\u4e86\u4e00\u4e9b\u3002\u6211\u6700\u521d\u8ba4\u4e3a\u6211\u5fc5\u987b\u4ece\u5934\u5f00\u59cb\u5efa\u7acb\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f46\u8fd9\u4e9b\u53d1\u5c04\u5668\u548c\u63a5\u6536\u5668IC\u4e3a\u6211\u63d0\u4f9b\u4e86\u6570\u636e\u94fe\u8def\u5c42\u5904\u7406\u3002\n\u6211\u8fd8\u627e\u5230\u4e86\u4e00\u4e2a\u5e26\u4ee4\u724c\u73af\u63a5\u53e3\u7684IBM3174-23R\u673a\u67b6\u5f0f\u63a7\u5236\u5668\uff0c\u6211\u60f3\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u51fa\u53d1\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u63a7\u5236\u7a0b\u5e8f\u8f6f\u76d8\u5df2\u635f\u574f\uff0c\u53ea\u80fd\u52a0\u8f7d\u8bca\u65ad\u76d8\u3002\u8bca\u65ad\u7a0b\u5e8f\u786e\u5b9e\u5728\u7ec8\u7aef\u4e0a\u663e\u793a\u83dc\u5355\uff0c\u8fd9\u8db3\u4ee5\u6355\u83b7\u7ec8\u7aef\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u4e00\u4e9b\u6d41\u91cf\u8fdb\u884c\u5206\u6790\u3002\n\u6211\u6839\u636eDP8341\u6570\u636e\u8868\u5728\u9762\u5305\u677f\u4e0a\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u6536\u5668\u7535\u8def\uff0c\u5c06\u5176\u8fde\u63a5\u5230Arduino Mega\u4e0a\uff0c\u5e76\u4f7f\u7528T\u5f62\u8fde\u63a5\u5668\u8fde\u63a5\u63a7\u5236\u5668\u548c\u7ec8\u7aef\u4e4b\u95f4\u7684\u7ebf\u8def\u3002\u5f53\u6570\u636e\u53ef\u7528\u5f15\u811a\u7b2c\u4e00\u6b21\u53d8\u9ad8\u65f6\uff0c\u6211\u975e\u5e38\u5174\u594b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86\u6211\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u53ef\u9760\u5730\u4ece\u63a5\u6536\u5668\u8bfb\u53d6\u6570\u636e\u3002\u6211\u5f88\u5feb\u5c31\u53d1\u73b0Arduino Mega\uff1b\u76848KB\u5185\u5b58\u6ea2\u51fa\u4e86\uff0c\u800c\u4e14\u6570\u636e\u901f\u7387\u592a\u5feb\uff0c\u65e0\u6cd5\u901a\u8fc7\u4e32\u53e3\u5b9e\u65f6\u5c06\u6570\u636e\u5378\u8f7d\u5230\u6211\u7684PC\u4e0a\u3002\n\u6211\u6355\u83b7\u7684\u5927\u90e8\u5206\u6d88\u606f\u90fd\u662f\u6765\u81ea\u63a7\u5236\u5668\u7684\u8f6e\u8be2\u547d\u4ee4\u548c\u6765\u81ea\u7ec8\u7aef\u7684\u786e\u8ba4\u54cd\u5e94\u3002\u56e0\u4e3a\u63a7\u5236\u5668\u53d1\u8d77\u6240\u6709\u901a\u4fe1\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u8f6e\u8be2\u7ec8\u7aef\u4ee5\u8fde\u7eed\u68c0\u67e5\u6309\u952e\u3002\u8fc7\u6ee4\u6389\u65e0\u6309\u952e\u6d88\u606f\u540e\uff0c\u6211\u53ef\u4ee5\u5c06\u7ec8\u7aef\u8fd4\u56de\u7684\u626b\u63cf\u7801\u6620\u5c04\u5230\u952e\u4e0a\u3002\n\u6211\u8fd8\u6355\u83b7\u4e86\u4e0e\u663e\u793a\u7f13\u51b2\u533a\u76f8\u5173\u7684LOAD ADDRESS COUNTER\u548cWRITE DATA\u547d\u4ee4\u3002\u63d0\u53d6\u5730\u5740\u5f88\u5bb9\u6613\uff0c\u4f46\u6839\u636e\u7ec8\u7aef\u4e0a\u663e\u793a\u7684\u8bca\u65ad\u754c\u9762\uff0c\u6211\u6ca1\u6709\u770b\u5230\u4ee5EBCDIC\u7f16\u7801\u5199\u5165\u663e\u793a\u7f13\u51b2\u533a\u7684\u6570\u636e\uff0c\u5b83\u4e5f\u4e0d\u662fASCII\u3002\u539f\u6765\u7ec8\u7aef\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u6211\u4e0d\u77e5\u9053\u5b83\u53eb\u4ec0\u4e48\uff0c\u4e5f\u627e\u4e0d\u5230\u4efb\u4f55\u4e0e\u5b83\u76f8\u5173\u7684\u4fe1\u606f\u3002\u6211\u4ece\u8bca\u65ad\u754c\u9762\u83b7\u5f97\u4e86\u8db3\u591f\u7684\u793a\u4f8b\uff0c\u53ef\u4ee5\u4ece\u6355\u83b7\u7684\u6570\u636e\u6784\u5efa\u5927\u90e8\u5206\u6620\u5c04\u3002\u5f53\u6211\u5c06DP8340\u53d1\u9001\u5668\u6dfb\u52a0\u5230\u9762\u5305\u677f\u65f6\uff0c\u5728\u7b2c\u4e00\u6b21\u5199\u5165\u540e\u80fd\u591f\u751f\u6210\u5b8c\u6574\u7684\u6620\u5c04\u3002\u5f53\u7136\uff0chello world\uff01\n3270\u7ec8\u7aef\u5728\u663e\u793a\u5c4f\u5e95\u90e8\u663e\u793a\u72b6\u6001\u884c\u3002\u9664\u5f53\u524d\u5149\u6807\u4f4d\u7f6e\u5916\uff0c\u72b6\u6001\u884c\u7531\u63a7\u5236\u5668\u7ba1\u7406\u3002\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u72b6\u6001\u884c\u5f00\u59cb\u4e8e\u663e\u793a\u7f13\u51b2\u5668\u7684\u5730\u57400\uff0c\u5c3d\u7ba1\u5b83\u4f4d\u4e8e\u5c4f\u5e55\u7684\u5e95\u90e8\uff0c\u4f46\u5730\u574080\u662f80\u5217\u6a21\u5f0f\u4e2d\u7684\u5de6\u4e0a\u89d2\u5355\u5143\u3002\u6b64\u5916\uff0c\u72b6\u6001\u884c\u7684\u5b57\u7b26\u7f16\u7801\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e14\u5305\u62ec\u8bb8\u591a\u4e0d\u5bfb\u5e38\u7684\u7b26\u53f7\u3002\n\u6700\u7ec8\uff0c\u6211\u80fd\u591f\u521b\u5efa\u4e00\u4e2aPython\u5e93pycoax\u6765\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u53163270\u5e27-Python\u4ee3\u7801\u5728\u60a8\u7684PC\u4e0a\u8fd0\u884c\uff0c\u5e76\u901a\u8fc7\u4e32\u884c(\u771f\u6b63\u7684USB)\u4e0eArduino\u901a\u4fe1\u3002\n\u6700\u540e\uff0c\u6211\u4f7f\u7528KiCad\u8bbe\u8ba1\u4e86\u6211\u7684\u7b2c\u4e00\u4e2aPCB\uff0c\u5e76\u5c06\u8bbe\u8ba1\u53d1\u9001\u5230JLCPCB\u300215\u7f8e\u5143\uff0c\u4e00\u5468\u540e\uff0c\u6211\u51c6\u5907\u597d\u4e865\u4e2aArduino\u76fe\u724c\uff0c\u53ef\u4ee5\u7ec4\u88c5\u4e86\u3002\u4e0e\u9762\u5305\u677f\u7535\u8def\u76f8\u6bd4\uff0cPCB\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6539\u8fdb\uff0c\u6211\u6ce8\u610f\u5230\u63a5\u6536\u5668\u9519\u8bef\u663e\u8457\u51cf\u5c11\u3002\u597d\u7684\uff0c\u6211\u627f\u8ba4\u7b2c\u4e00\u6b21\u6709\u4e00\u4e2a\u8def\u7ebf\u9519\u8bef-\u6211\u786e\u5b9e\u4e0d\u5f97\u4e0d\u8ba2\u8d2d\u4e00\u4e2a\u4fee\u8ba2\u7248\uff01\n\u6211\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u53ef\u4ee5\u4e0eHercules\u4e00\u8d77\u4f7f\u7528\u7684IBM3174\u63a7\u5236\u5668\u7684\u66ff\u4ee3\u54c1\u3002\u73b0\u5728\u6211\u660e\u767d\u4e86\u5207\u5272\u578b\u7ec8\u7aef\u4e0d\u4f1a\u76f4\u63a5\u5904\u74063270\u6570\u636e\u6d41\uff0c\u6211\u610f\u8bc6\u5230\u9996\u5148\u5b9e\u73b0VT100\u4eff\u771f\u6bd4\u5b9e\u73b0TN3270\u66f4\u5bb9\u6613\u3002\n\u6211\u53d1\u73b0\u4e86pyte\uff0c\u5b83\u63d0\u4f9b\u5185\u5b58\u4e2d\u7684VT100\u4eff\u771f\uff0c\u6211\u53ef\u4ee5\u8fde\u63a5\u5230\u8fdb\u7a0b(\u6bd4\u5982shell\u6216SSH)\u3002\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u8f6e\u8be2\u7ec8\u7aef\u4e0a\u7684\u6309\u952e\uff0c\u5c06\u8fd9\u4e9b\u6309\u952e\u4f20\u9012\u7ed9\u8fdb\u7a0b\uff0c\u7528\u8fdb\u7a0b\u8f93\u51fa\u66f4\u65b0pyte\u4eff\u771f\u5668\uff0c\u7136\u540e\u5c06\u6a21\u62df\u7684\u7ec8\u7aef\u5c4f\u5e55\u5199\u5165\u7ec8\u7aef-\u9700\u8981\u4e00\u4e9b\u6620\u5c04\u3002\u518d\u91cd\u590d\u4e00\u904d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u8fd8\u5fc5\u987b\u76d1\u89c6\u7ec8\u7aef\u662f\u5426\u8fde\u63a5(\u901a\u7535)\u6216\u65ad\u5f00\uff0c\u5e76\u76d1\u63a7\u8fdb\u7a0b\u8fd0\u884c\u72b6\u51b5\u3002\n\u5728\u5185\u5b58\u6602\u8d35\u7684\u65f6\u4ee3\uff0c\u50cf\u6211\u8fd9\u6837\u5728\u63a7\u5236\u5668\u5185\u5b58\u4e2d\u7ef4\u62a4\u5c4f\u5e55\u526f\u672c\u4e0d\u662f\u65e9\u671f\u63a7\u5236\u5668\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5207\u5272\u7ec8\u7aef\u63d0\u4f9b\u547d\u4ee4\u4ee5\u4ece\u663e\u793a\u7f13\u51b2\u5668\u8bfb\u53d6\u5e76\u67e5\u627e\u4e0e\u7279\u5b9a\u6a21\u5f0f\u5339\u914d\u7684\u5355\u5143\uff0c\u4f8b\u5982\u6307\u793a\u672a\u53d7\u4fdd\u62a4\u5b57\u6bb5\u7684\u5f00\u59cb\u7684\u5c5e\u6027\u3002\u6ca1\u6709\u540c\u6837\u7684\u8d44\u6e90\u9650\u5236\uff0c\u6211\u53d1\u73b0\u7ef4\u62a4\u5c4f\u5e55\u526f\u672c\u548c\u4f7f\u7528\u66f4\u6539\u7684\u5185\u5bb9\u66f4\u65b0\u7ec8\u7aef\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u53d7pyte\u7684\u542f\u53d1\uff0c\u6211\u7f16\u5199\u4e86pytn3270\uff0c\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9b\u7c7b\u4f3c\u5185\u5b58\u4eff\u771f\u7684\u7eafPython TN3270\u5e93\u3002\u5c06\u5176\u4e0e\u63a7\u5236\u5668\u96c6\u6210\u51e0\u4e4e\u4e0d\u9700\u8981\u66f4\u6539\uff1b\u6211\u9700\u8981\u505a\u7684\u6240\u6709\u4e0d\u540c\u4e4b\u5904\u5c31\u662f\u5c06\u5b57\u6bb5\u5c5e\u6027\u6620\u5c04\u52303270\u7ec8\u7aef\u5c5e\u6027\u5b57\u8282\u3002\u6211\u672c\u6765\u53ef\u4ee5\u4f7f\u7528x3270\uff0c\u4f46\u6211\u60f3\u66f4\u597d\u5730\u7406\u89e3telnet\u534f\u8bae\u548c3270\u6570\u636e\u6d41\u3002\u6211\u53ea\u5b9e\u73b0\u4e86\u6700\u4f4e\u9650\u5ea6\u7684TN3270\u534f\u8bae\uff0c\u4f46\u662f\u8fde\u63a5\u5230z/OS\u5c31\u8db3\u591f\u4e86\uff0c\u4e00\u4e2a\u7eafPython\u5e93\u53ef\u80fd\u4f1a\u5728\u672c\u9879\u76ee\u4e4b\u5916\u6d3e\u4e0a\u7528\u573a\u3002\n\u4eca\u5929\uff0cOEC\u8fdc\u4e0d\u80fd\u63d0\u4f9bIBM3174\u63a7\u5236\u5668\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f46\u5b83\u662f\u53ef\u7528\u7684\u3002\n\u9996\u5148\uff0c\u6211\u60f3\u6dfb\u52a0\u4e00\u4e2a\u8fde\u63a5\u83dc\u5355\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u9009\u62e9\u4e3b\u673a(\u5b83\u5f53\u524d\u53ea\u80fd\u8fde\u63a5\u5230\u5355\u4e2a\u4e3b\u673a)\u548c\u591a\u4e2a\u903b\u8f91\u7ec8\u7aef\u652f\u6301\u3002\u7a0d\u540e\u7684EAB\u548cTN3270E\u652f\u6301-\u6211\u9700\u8981\u5b9e\u73b0\u4e00\u4e9b\u7f3a\u5c11\u7684pytn3270\u529f\u80fd\u6765\u652f\u6301\u8fd9\u4e9b\u529f\u80fd\u3002\n\u6211\u6b63\u5728\u7814\u7a76\u4e00\u4e2a\u57fa\u4e8eFPGA\u7684\u63a5\u53e3\uff0c\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u65f6\u7684\u56fd\u5bb6\u534a\u5bfc\u4f53IC-\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e86\u89e3\u4e86\u66f4\u591a\u5173\u4e8e\u534f\u8bae\u548c\u4e00\u4e9bVerilog\u7684\u77e5\u8bc6\u3002\n\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9b\u611f\u5174\u8da3\uff0c\u6211\u5f88\u4e50\u610f\u6536\u5230\u60a8\u7684\u6765\u4fe1\u3002\u76ee\u524d\u5173\u4e8e\u8fd9\u4e9b\u7ec8\u7aef\u7684\u4fe1\u606f\u5f88\u5c11\uff0c\u6211\u53ef\u80fd\u628a\u73b0\u5b58\u7684\u4e1c\u897f\u548c\u5386\u53f2\u9519\u8bef\u5730\u62fc\u51d1\u5728\u4e00\u8d77\u4e86-\u6b22\u8fce\u4efb\u4f55\u66f4\u6b63\u3001\u6f84\u6e05\u6216\u5176\u4ed6\u4fe1\u606f\uff01", "note_en": "The IBM 3270 type terminal is a mainframe computer terminal. I&#39;ve long been fascinated by the IBM mainframe, and especially these terminals. Early models such as the 3278 and 3279 have a unique aesthetic, and their block-oriented design is so different from the ubiquitous VT series terminals.\n    I&#39;m not alone in wanting to  connect a real IBM terminal to the Hercules emulator. Unfortunately, it&#39;s difficult to find the necessary IBM 3174 terminal controller with Ethernet or Token Ring interface, version of the software that supports TCP/IP and in working condition. Also, they are large, noisy, and difficult to maintain, given the software is loaded from an uncommon 2.4 MB 5\u00bc-inch floppy disk - if you are lucky, there is a 20 MB hard disk option. So I decided to build my own and learn a little in the process.\n  According to IBM, the 3270 information display system was introduced in 1972, the iconic  3278 terminal 5 years later, in 1977. Color terminals arrived in 1979 with the 3279. Mixing IBM model numbers and dates is very confusing!\n  The 3270 is one of the most recognizable  block-oriented terminals. The  3270 data stream allows the programmer to describe a screen containing protected text, unprotected fields, and formatting attributes. Unprotected fields allow you to input or modify data. Instead of sending every key you press to the host immediately, as is the case with a character-oriented terminal, the terminal stores the input until you press an attention key - such as  enter. Only when you press an attention key is the input sent to the host, this improves the perceived response time over a slow or unreliable connection. It also reduces the host processing requirements allowing many more terminals to be connected to a host than could be with character-oriented terminals. It&#39;s not that different from an HTML form.\n  Exciting peripherals were available on early 3270 terminals, including light pens for improved navigation and magnetic card readers; unfortunately, I&#39;ve never seen these on eBay.\n  Terminals are connected to a controller by coax cable in a star topology. A balun can convert this to more common twisted pair cabling, although I think IBM would prefer you use their  cabling system. The controller is connected to the mainframe by different interfaces depending on whether it is a local or remote controller and year, interfaces include:\n    As a result, IBM 3174 and 3274 controllers come in many different shapes and sizes - from small desktop units, medium rack-mount, and large floor standing units.\n    Other companies, including Memorex, manufactured compatible terminals and controllers. Once personal computers became commonplace, terminals could be replaced with ISA, PCMCIA, and later PCI cards that allowed a PC running an emulator to connect using the same coax cable. Later, with the advent of LANs and TCP/IP, these connections were replaced with TN3270 telnet needing no additional hardware or coax cabling.\n  For customers that by now had a TCP/IP network but also a large number of physical terminals, the later 3174 controllers offered the ability to connect these terminals to the mainframe via telnet over TCP/IP. These are the controllers you want to connect to Hercules. It intrigued me that these later controllers also offered a VT100 emulation feature where a 3270 terminal could connect to a UNIX or VMS host via telnet as if it were a VT100. That seemed strange to me; if the terminal is block-oriented, it would seem impossible to emulate VT100 in a useful way.\n  The last IBM terminal was the 3483 introduced in the late 1990s. By then, the terminal resembled a thin-client and used industry-standard VGA display and PS/2 keyboard connections.\n  My initial search uncovered a description of the cabling used and the 3270 data stream, that is well-documented, but nothing about the protocol used between the terminal and the controller. It was not until I found datasheets for the now-obsolete chips used to build  PC interfaces that I found the detail I was looking for, from CHIPS and National Semiconductor:\n    Devices are connected point-to-point by coaxial cable with a characteristic impedance of 93 &amp;ohm, type RG-62 cable - unlike 10BASE2 Ethernet networks that use a bus topology and 50 &amp;ohm impedance cable. To reduce noise interference over long cable runs differential signaling is used, the specification allows up to 1.5 km between devices.\n  Data is sent at a bit rate of 2.3587 Mb/s using  Machester encoding. This encoding scheme ensures a transition (from high to low or low to high) in the middle of each bit, allowing the data to be recovered reliably by the receiver. A frame contains one or more 10-bit words; each word in a frame starts with a sync-bit and ends with a parity bit. Unique sequences indicate the start and end of a frame.\n    The controller initiates all communication; it sends a frame containing a command word and optional data words (think of these as parameters) to the terminal. The terminal responds with a frame containing one or more data words.\n  It turns out that there are two different types of terminal  CUT and  DFT. CUT type terminals rely on the control unit to process the 3270 data stream and convert this to basic operations such as move the cursor to this address and write these characters to the display buffer (known as the  regen buffer). The controller handles much of the intelligence people associate with 3270 terminals, meaning the CUT terminal logic is simpler than a comparable VT100. DFT type terminals can process the 3270 data stream themselves, and the controller passes this on to the terminal.\n  You can still find National Semiconductor DP8340 transmitters and DP8341 receivers on eBay, so I bought some along with the other components shown in the datasheet reference circuits. I had initially thought I&#39;d have to build an interface from scratch, but these transmitter and receiver ICs provided the data link layer handling for me.\n  I also found an IBM 3174-23R rack-mount controller with Token Ring interface and thought I was ready to go. Unfortunately, the control program floppy disk was corrupt, and only the diagnosis disk could be loaded. The diagnosis program did display menus on the terminal, which was sufficient to capture some traffic between the terminal and the controller for analysis.\n  I built a simple receiver circuit from the DP8341 datasheet on a breadboard, attached it to an Arduino Mega, and using a tee connector tapped the wire between controller and terminal. I was very excited when the  DATA AVAILABLE pin went high for the first time, and my interrupt handler was called. It took me a while to reliably read data from the receiver. I soon discovered I was overflowing the Arduino Mega&#39;s 8 KB of memory, and the data rate was too fast to to unload the data to my PC over the serial port in real-time.\n  The majority of the messages I captured were  poll commands from the controller and acknowledgment responses from the terminal. Because the controller initiates all communication, it has to poll the terminal to check for keypresses continually. After filtering out the no keypress messages, I was able to map the scan codes returned by the terminal to the keys.\n  I also captured  load address counter and  write data commands associated with the display buffer. Extracting the addresses was easy, but I did not see the data written to the display buffer in the  EBCDIC encoding that I expected based on the diagnosis interface shown on the terminal, it wasn&#39;t ASCII either. It turns out the terminal uses a different character encoding, I don&#39;t know what it&#39;s called and couldn&#39;t find any reference to it. I had enough examples from the diagnosis interface to build most of the mapping from captured data. When I added the DP8340 transmitter to the breadboard was able to generate a complete mapping after first writing &#34;hello world,&#34; of course!\n  3270 terminals have a status line shown at the bottom of the display. Other than the current cursor position, the status line is managed by the controller. Confusingly the status line starts at address  0 of the display buffer, although it is at the bottom of the screen, address  80 is the top-left cell in 80 column mode. Also, the character encoding for the status line is different and includes many unusual symbols.\n  Eventually, I was able to create a Python library,  pycoax, to serialize and deserialize 3270 frames - the Python code runs on your PC and communicates with the Arduino over serial (really USB).\n  Finally, I designed my first PCB using KiCad and sent the design off to  JLCPCB. $15 and a week later, I had 5 Arduino shields ready to assemble. The PCB was a considerable improvement over the breadboard circuit, and I noticed a dramatic reduction in receiver errors. Ok, I admit there was a routing mistake the first time around - I did have to order a revision!\n  My goal was to build a replacement for the IBM 3174 controller that I could use with Hercules. Now that I understood CUT type terminals don&#39;t process the 3270 data stream directly, I realized implementing VT100 emulation first would be easier than TN3270.\n  I found  pyte, which provides in-memory VT100 emulation that I could connect to a process (such as a shell or SSH). All I had to do was poll the terminal for keypresses, pass these to the process, update the pyte emulator with the process output and then write the emulated terminal screen to the terminal - some mapping required. And repeat. Other than that, I had to watch for a terminal being attached (powered on) or detached and monitor the process health.\n  Maintaining a copy of the screen in the controller memory as I do is not how early controllers operated in an era where memory was expensive. Instead, the CUT terminal provides commands to read from the display buffer and to find cells matching a particular pattern, such as an attribute indicating the start of an unprotected field. Without the same resource constraints, I found it far easier to maintain a copy of the screen and update the terminal with what changed.\n  Inspired by pyte, I wrote  pytn3270, a pure Python TN3270 library providing similar in-memory emulation. Integrating this with the controller required little change; all I had to do differently was to map the field attributes to the 3270 terminal attribute byte. I could have used x3270, but I wanted a better understanding of the telnet protocol and 3270 data stream. I&#39;ve only implemented the bare minimum of the TN3270 protocol, but it is enough to connect to z/OS, and a pure Python library may be useful beyond this project.\n  Today oec is far from providing all of the IBM 3174 controller features, but it is useable.\n  First, I want to add a connection menu so you can select the host (it can only currently connect to a single host) and multiple logical terminal support. Later EAB and TN3270E support - I&#39;ll need to implement some missing pytn3270 features to support those.\n  I&#39;m working on an FPGA based interface that doesn&#39;t depend on obsolete National Semiconductor ICs - learning a little more about the protocol and some Verilog in the process.\n  I&#39;d love to  hear from you if you are interested in any of this. There is very little out there currently about these terminals, I may have pieced what does exist and the history together incorrectly - any corrections, clarifications or additional information is welcome!", "posttime": "2020-05-28 08:04:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ibm3270,building,\u7ec8\u7aef", "title": "\u6784\u5efaIBM3270\u7ec8\u7aef\u63a7\u5236\u5668", "title_en": "Building an IBM 3270 terminal controller", "transed": 1, "url": "https://ajk.me/building-an-ibm-3270-terminal-controller", "via": "", "real_tags": ["ibm3270", "building", "\u7ec8\u7aef"]}, {"category": "", "categoryclass": "", "imagename": "6df6ff571c944ed2d5c0f8ccf96980b7.jpg", "infoid": 1004002, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u53d1\u5e03\u4e8640\u591a\u4e2a\u6d4b\u8bd5\u7248\u548c\u5019\u9009\u7248\u672c\u4e4b\u540e\uff0c\u6211\u4eec\u975e\u5e38\u5174\u594b\u5730\u63a8\u51fa\u4e86SnowPack 2.0\uff1a\u4e00\u4e2a\u7528\u4e8e\u73b0\u4ee3\u7f51\u7edc\u7684\u6784\u5efa\u7cfb\u7edf\u3002\nSnowPack 1.0\u7684\u8bbe\u8ba1\u76ee\u7684\u5f88\u7b80\u5355\uff1a\u5b89\u88c5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684NPM\u5305\u3002\u5f53\u65f6\u7684\u7406\u8bba\u662f\uff0cJavaScript\u5305\u662f\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u552f\u4e00\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u6346\u7ed1\u5668\u7684\u4e1c\u897f\u3002\u53bb\u6389\u8fd9\u4e00\u8981\u6c42\uff0c\u53bb\u6389\u6346\u7ed1\u5305\uff0c\u52a0\u5feb\u6bcf\u4e2a\u4eba\u7684web\u5f00\u53d1\u3002\n\u4f60\u731c\u600e\u4e48\u7740\uff1f\u554a\uff0c\u771f\u7075!\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u5f00\u53d1\u4eba\u5458\u5f00\u59cb\u4f7f\u7528SnowPack\u6765\u5b89\u88c5\u4ed6\u4eec\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u4f7f\u7528\u66f4\u5c11\u7684\u5de5\u5177\u6784\u5efa\u7f51\u7ad9\u3002\u4e00\u79cd\u5168\u65b0\u7684\u66f4\u5feb\u3001\u66f4\u8f7b\u7684\u5f00\u53d1\u7a81\u7136\u6210\u4e3a\u53ef\u80fd\u3002\nSnowPack 2.0\u662f\u4e3a\u8fd9\u4e2aweb\u5f00\u53d1\u7684\u65b0\u65f6\u4ee3\u8bbe\u8ba1\u7684\u6784\u5efa\u7cfb\u7edf\u3002SnowPack\u4ece\u60a8\u7684\u5f00\u53d1\u73af\u5883\u4e2d\u5220\u9664\u4e86\u6346\u7ed1\u5305\uff0c\u5229\u7528\u6d4f\u89c8\u5668\u4e2d\u7684\u672c\u5730ES\u6a21\u5757(ESM)\u8bed\u6cd5\u76f4\u63a5\u63d0\u4f9b\u6784\u5efa\u7684\u6587\u4ef6\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u901f\u5ea6\u66f4\u5feb\u7684\u5de5\u5177\uff0c\u5b83\u8fd8\u662fWeb\u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u79cd\u65b0\u65b9\u6cd5\u3002\n\u6346\u7ed1\u662f\u4e00\u4e2aO(N)\u590d\u6742\u5ea6\u7684\u8fc7\u7a0b\u3002\u968f\u7740\u9879\u76ee\u7684\u53d1\u5c55\uff0c\u60a8\u7684\u5f00\u53d1\u6346\u7ed1\u7a0b\u5e8f\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u6765\u542f\u52a8\u5e76\u5bf9\u66f4\u6539\u505a\u51fa\u53cd\u5e94\u3002\u4e00\u4e9b\u6346\u7ed1\u5305\u751a\u81f3\u53ef\u80fd\u5177\u6709O(n^2)\u590d\u6742\u5ea6\uff1a\u968f\u7740\u9879\u76ee\u7684\u589e\u957f\uff0c\u60a8\u7684\u5f00\u53d1\u73af\u5883\u4f1a\u53d8\u5f97\u6210\u500d\u5730\u53d8\u6162\uff0c\u56e0\u4e3a\u5b83\u5728\u542f\u52a8\u548c\u6bcf\u6b21\u66f4\u6539\u65f6\u90fd\u8981\u5904\u7406\u4ee3\u7801\u62c6\u5206\u3001\u6811\u6296\u52a8\u548c\u5176\u4ed6\u6346\u7ed1\u5305\u6392\u5217\u3002\u5728\u5904\u7406\u6570\u767e\u751a\u81f3\u6570\u5343\u4e2a\u6587\u4ef6\u7684\u5f00\u53d1\u671f\u95f4\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u7406\u60f3\u3002\nSnowPack\u662f\u4e00\u4e2aO(1)\u6784\u5efa\u7cfb\u7edf\u3002\u8fd9\u4e2a\u672f\u8bed\u6700\u65e9\u662f\u7531Ives van Hoorne\u9996\u521b\u7684\uff0c\u5b83\u5b8c\u7f8e\u5730\u6982\u62ec\u4e86\u6211\u4eec\u7684\u613f\u666f\uff1a\u6bcf\u4e2a\u6587\u4ef6\u90fd\u901a\u8fc7\u7ebf\u6027\u8f93\u5165&&gt\uff1bbuild-&gt\uff1boutput build\u7ba1\u9053\uff0c\u7136\u540e\u8f93\u51fa\u5230\u6d4f\u89c8\u5668(\u6216\u8005\u6700\u7ec8\u7684\u6784\u5efa\u76ee\u5f55\uff0c\u5982\u679c\u60a8\u662f\u4e3a\u751f\u4ea7\u800c\u6784\u5efa\u7684\u8bdd)\u3002\u591a\u6587\u4ef6\u6346\u7ed1\u6210\u4e3a\u5355\u6587\u4ef6\u6784\u5efa\u6b65\u9aa4\u3002\n\u6700\u540e\u4e00\u70b9\u5f88\u5173\u952e\uff1a\u6bcf\u4e2a\u6784\u5efa\u7684\u6587\u4ef6\u90fd\u88ab\u5355\u72ec\u7f13\u5b58\u5e76\u65e0\u9650\u671f\u5730\u91cd\u7528\u3002\u5982\u679c\u60a8\u4ece\u4e0d\u66f4\u6539\u6587\u4ef6\uff0c\u5219\u6c38\u8fdc\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u5efa\u5b83\u3002\n\u8fd0\u884cSnowpack dev\u6765\u542f\u52a8\u65b0\u7684web\u5f00\u53d1\u73af\u5883\uff0c\u60a8\u9996\u5148\u4f1a\u6ce8\u610f\u5230\u7684\u662fO(1)\u6784\u5efa\u5de5\u5177\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u79ef\u96ea\u542f\u52a8\u65f6\u95f4\u4e0d\u523050\u6beb\u79d2\u3002\u8fd9\u4e0d\u662f\u6253\u5b57\u9519\u8bef\uff1a50\u6beb\u79d2\u6216\u66f4\u5c11\u3002\n\u65e0\u9700\u5f00\u59cb\u6346\u7ed1\u5de5\u4f5c\uff0c\u60a8\u7684\u670d\u52a1\u5668\u5c06\u7acb\u5373\u542f\u52a8\u3002\u5728\u60a8\u7684\u7b2c\u4e00\u4e2a\u9875\u9762\u52a0\u8f7d\u65f6\uff0cSnowpack\u4f1a\u6784\u5efa\u60a8\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7684\u6587\u4ef6\uff0c\u7136\u540e\u7f13\u5b58\u5b83\u4eec\u4ee5\u5907\u5c06\u6765\u4f7f\u7528\u3002\u5373\u4f7f\u60a8\u7684\u9879\u76ee\u5305\u542b\u4e00\u767e\u4e07\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\uff0cSnowPack\u4e5f\u53ea\u751f\u6210\u52a0\u8f7d\u5f53\u524d\u9875\u9762\u6240\u9700\u7684\u6587\u4ef6\u3002\u8fd9\u5c31\u662f\u79ef\u96ea\u4fdd\u6301\u5feb\u901f\u7684\u539f\u56e0\u3002\nSnowPack dev\u5305\u62ec\u4e00\u4e2a\u5f00\u53d1\u670d\u52a1\u5668\u548c\u4e00\u7cfb\u5217\u719f\u6089\u7684\u5f00\u7bb1\u5373\u7528\u529f\u80fd\uff1a\n\u6784\u5efa\u811a\u672c\u5141\u8bb8\u60a8\u8fde\u63a5\u60a8\u6700\u559c\u6b22\u7684\u6784\u5efa\u5de5\u5177\u3002\u4f7f\u7528SnowPack\uff0c\u60a8\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u6784\u5efa\u8868\u793a\u4e3a\u7ebf\u6027\u8f93\u5165-&gt\uff1b\u6784\u5efa-&gt\uff1b\u8f93\u51fa\u5de5\u4f5c\u6d41\u3002\u8fd9\u5141\u8bb8Snowpack\u901a\u8fc7\u7ba1\u9053\u5c06\u60a8\u7684\u6587\u4ef6\u4f20\u5165\u548c\u4f20\u51fa\u4efb\u4f55\u73b0\u6709\u7684UNIX-y CLI\u5de5\u5177\uff0c\u800c\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u3002\n//nowPack.config.json{&#34\uff1bscript&#34\uff1b\uff1a{//\u6bcf&#34\uff1b*.css&34\uff1b\u6587\u4ef6\u901a\u8fc7PostCSS CLI//stdin(\u6e90\u6587\u4ef6)&gt\uff1bpostcss&gt\uff1bstdout(\u751f\u6210\u8f93\u51fa)&#34\uff1bbuild\uff1acss&#34\uff1b\uff1a&#34\uff1bpostcss&34\uff1b\uff0c}}\u3002\n\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7\u60a8\u7684Package.json\u201c\u811a\u672c\u201d\u914d\u7f6e\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u719f\u6089\u8fd9\u79cd\u683c\u5f0f\u3002\u6211\u4eec\u559c\u6b22\u76f4\u63a5\u4f7f\u7528CLI\u7684\u7b80\u5355\u6027\uff0c\u4e0d\u9700\u8981\u4e0d\u5fc5\u8981\u7684\u63d2\u4ef6\u7cfb\u7edf\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u6a21\u5f0f\u80fd\u63d0\u4f9b\u7c7b\u4f3c\u7684\u76f4\u89c2\u8bbe\u8ba1\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u66f4\u597d\u5730\u63a7\u5236\u60a8\u7684\u6784\u5efa(\u6216\u8005\u5e0c\u671b\u7f16\u5199\u60a8\u81ea\u5df1\u7684\u6784\u5efa\u5de5\u5177)\uff0cSnowPack\u8fd8\u652f\u6301\u7b2c\u4e09\u65b9JavaScript\u63d2\u4ef6\u3002\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u6587\u6863\uff0c\u4e86\u89e3\u6709\u5173\u81ea\u5b9a\u4e49\u6784\u5efa\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSnowPack\u5e76\u4e0d\u53cd\u5bf9\u6346\u7ed1\u751f\u4ea7\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u63a8\u8350\u5b83\u3002\u6587\u4ef6\u7f29\u5c0f\u3001\u538b\u7f29\u3001\u6d88\u9664\u6b7b\u7801\u548c\u7f51\u7edc\u4f18\u5316\u90fd\u53ef\u4ee5\u8ba9\u6346\u7ed1\u7ad9\u70b9\u4e3a\u60a8\u7684\u7528\u6237\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u8fd9\u662f\u4efb\u4f55\u6784\u5efa\u5de5\u5177\u7684\u6700\u7ec8\u76ee\u6807\u3002\nSnowPack\u5c06\u6346\u7ed1\u89c6\u4e3a\u6700\u7ec8\u7684\u3001\u4ec5\u9650\u751f\u4ea7\u7684\u6784\u5efa\u4f18\u5316\u3002\u901a\u8fc7\u5c06\u6346\u7ed1\u4f5c\u4e3a\u6700\u540e\u4e00\u6b65\uff0c\u60a8\u53ef\u4ee5\u907f\u514d\u5728\u540c\u4e00\u4e2a\u5de8\u5927\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6df7\u5408\u4f7f\u7528\u6784\u5efa\u903b\u8f91\u548c\u6346\u7ed1\u903b\u8f91\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u60a8\u7684\u6346\u7ed1\u5668\u83b7\u5f97\u5df2\u7ecf\u6784\u5efa\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u53ea\u4e13\u6ce8\u4e8e\u5b83\u6700\u64c5\u957f\u7684\u4e8b\u60c5\uff1a\u6346\u7ed1\u3002\nSnowPack\u4e3awebpack\u548cAmp\uff1bParcel\u7ef4\u62a4\u5b98\u65b9\u63d2\u4ef6\u3002\u8fde\u63a5\u60a8\u6700\u559c\u6b22\u7684\u7f51\u7ad9\uff0c\u7136\u540e\u8fd0\u884cSnowpack Build\u6765\u6784\u5efa\u60a8\u7684\u7ad9\u70b9\u4ee5\u7528\u4e8e\u751f\u4ea7\u3002\n\u5982\u679c\u4f60\u4e0d\u60f3\u7528\u6346\u7ed1\u673a\uff0c\u4e5f\u6ca1\u5173\u7cfb\u3002SnowPack\u7684\u9ed8\u8ba4\u6784\u5efa\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u8fd0\u884c\u826f\u597d\u7684\u975e\u6346\u7ed1\u7ad9\u70b9\u3002\u8fd9\u5c31\u662f\u79ef\u96ea\u9879\u76ee\u4ece\u4e00\u5f00\u59cb\u5c31\u8981\u505a\u7684\uff1a\u4f7f\u7528\u6346\u7ed1\u5668\u662f\u56e0\u4e3a\u4f60\u60f3\u8981\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u9700\u8981\u8fd9\u6837\u505a\u3002\n\u4eca\u5929\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u4e0e\u5927\u5bb6\u5206\u4eab\u8fd9\u4e00\u5207\u3002\u4e0b\u8f7dSnowPack\uff0c\u4f53\u9a8c\u7f51\u7edc\u53d1\u5c55\u7684\u672a\u6765\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u6709\u4e00\u4e2a\u73b0\u6709\u7684SnowPack\u5e94\u7528\u7a0b\u5e8f\uff0cSnowPack 2.0\u5c06\u6307\u5bfc\u60a8\u66f4\u65b0\u4efb\u4f55\u8fc7\u65f6\u7684\u914d\u7f6e\u3002SnowPack\u6700\u521d\u7684\u8f6f\u4ef6\u5305\u5b89\u88c5\u7a0b\u5e8f\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u901a\u8fc7\u65b0\u7684dev&amp\uff1bbuild\u547d\u4ee4\uff0cSnowpack\u751a\u81f3\u53ef\u4ee5\u4e3a\u60a8\u7ba1\u7406\u60a8\u7684Web\u8f6f\u4ef6\u5305\u3002\n\u5f00\u59cb\u4f7f\u7528\u79ef\u96ea\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u79ef\u96ea\u5e94\u7528\u7a0b\u5e8f(CSA)\u3002CSA\u4f7f\u7528\u9884\u914d\u7f6e\u7684\u96ea\u5730\u9a71\u52a8\u5f00\u53d1\u73af\u5883\u81ea\u52a8\u4e3a\u60a8\u521d\u59cb\u5316\u5165\u95e8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u611f\u8c22\u6211\u4eec\u6240\u6709\u768480\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u611f\u8c22\u4ed6\u4eec\u4f7f\u8fd9\u4e2a\u7248\u672c\u6210\u4e3a\u53ef\u80fd\u3002\u9a6c\u4e91\u611f\u8c22Melissa McEwen&amp\uff1b@TheoOnTwitch\u5e2e\u52a9\u7f16\u8f91\u4e86\u8fd9\u7bc7\u5e16\u5b50\u3002", "note_en": "After 40+ beta versions &amp; release candidates we are very excited to introduce  Snowpack 2.0: A build system for the modern web.\n     Snowpack 1.0 was designed for a simple mission: install npm packages to run directly in the browser. The theory was that JavaScript packages are the only thing still   requiring the use of a bundler during development. Remove that requirement, remove the bundler, and speed up web development for everyone.\n Guess what? It worked! Thousands of developers started using Snowpack to install their dependencies and build websites with less tooling. A whole new type of faster, lighter-weight development suddenly became possible.\n Snowpack 2.0 is a build system designed for this new era of web development. Snowpack removes the bundler from your dev environment, leveraging native  ES Module (ESM) syntax in the browser to serve built files directly. This isn\u2019t just a faster tool, it\u2019s a new approach to web build systems.\n   Bundling is a process of  O(n) complexity. As your project grows, your dev bundler takes longer to startup and react to changes. Some bundlers may even have  O(n^2) complexity: as your project grows, your dev environment gets   exponentially slower as it handles code splitting, tree-shaking, and other bundle permutations on startup and on every change. Neither scenario is ideal during development when you\u2019re working with hundreds or even thousands of files.\n Snowpack is a O(1) build system. The term was first coined by  Ives van Hoorne and it perfectly encapsulates our vision: Every file goes through a linear  input -&gt; build -&gt; output build pipeline and then out to the browser (or the final build directory, if you\u2019re building for production). Mutli-file bundling becomes a single-file build step.\n   That last point is key: every built file is cached individually and reused indefinitely.  If you never change a file, you will never need to re-build it again.\n   Run  snowpack dev to start your new web dev environment and the first thing you\u2019ll notice is  how flippin\u2019 fast O(1) build tooling is. Snowpack starts up in less than 50ms. That\u2019s no typo: 50 milliseconds or less.\n With no bundling work needed to start, your server spins up immediately. On your very first page load, Snowpack builds your first requested files and then caches them for future use. Even if your project contains a million different files, Snowpack only builds the files needed to load the current page. This is how Snowpack stays fast.\n snowpack dev includes a development server and a bunch of familiar features right out of the box:\n   Build Scripts let you connect your favorite build tools. With Snowpack, you express every build as a linear  input -&gt; build -&gt; output workflow. This allow Snowpack to pipe your files into and out of any existing UNIX-y CLI tools without the need for a special plugin ecosystem.\n // snowpack.config.json  {   &#34;scripts&#34; :  {   // Pipe every &#34;*.css&#34; file through the PostCSS CLI   // stdin (source file) &gt; postcss &gt; stdout (build output)   &#34;build:css&#34; :  &#34;postcss&#34; ,   }  }\n If you\u2019ve ever used your  package.json \u201cscripts\u201d config, this format should feel familiar. We love the simplicity of using your CLIs directly without an unnecessary plugin system. We hope this pattern offers a similar intuitive design.\n If you want more control over your build (or want to write your own build tool) Snowpack also supports  third-party JavaScript plugins.  Check out our docs to learn more about customizing your build.\n   To be clear, Snowpack isn\u2019t against bundling for production. In fact, we recommend it. File minification, compression, dead-code elimination and network optimizations can all make a bundled site run faster for your users, which is the ultimate goal of any build tool.\n Snowpack treats bundling as a final, production-only build optimization. By bundling as the final step, you avoid mixing build logic and bundle logic in the same huge configuration\u00a0file. Instead, your bundler gets already-built files and can focus solely on what it does best: bundling.\n Snowpack maintains official plugins for both Webpack &amp; Parcel. Connect your favorite, and then run  snowpack build to build your site for production.\n  If you don\u2019t want to use a bundler, that\u2019s okay too. Snowpack\u2019s default build will give you an unbundled site that also runs just fine. This is what the Snowpack project has been all about from the start:  Use a bundler because you want to, and not because you need to.\n  We are so excited to share this all with you today. Download Snowpack to experience the future of web development.\n  If you already have an existing Snowpack application, Snowpack 2.0 will walk you through updating any outdated configuration. Snowpack\u2019s original package installer still works as expected, and with the new  dev &amp;  build commands Snowpack even manages your web packages for you.\n   The easiest way to get started with Snowpack is with  Create Snowpack App (CSA). CSA automatically initializes a starter application for you with a pre-configured, Snowpack-powered dev environment.\n     Thank you to all of our  80+ contributors for making this release possible. ma Thanks to  Melissa McEwen &amp;  @TheoOnTwitch for helping to edit this post.", "posttime": "2020-05-28 07:18:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u7ecd,introducing,\u6784\u5efa", "title": "\u4ecb\u7ecd\u79ef\u96ea2.0", "title_en": "Introducing Snowpack 2.0", "transed": 1, "url": "https://www.snowpack.dev/posts/2020-05-26-snowpack-2-0-release/", "via": "", "real_tags": ["\u4ecb\u7ecd", "\u6784\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "htmx\u5141\u8bb8\u60a8\u4f7f\u7528\u5c5e\u6027\u5728HTML\u4e2d\u76f4\u63a5\u8bbf\u95eeAjax\u3001WebSockets\u548cServer Sent Event\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u8d85\u6587\u672c\u7684\u7b80\u5355\u6027\u548c\u5f3a\u5927\u529f\u80fd\u6784\u5efa\u73b0\u4ee3\u7528\u6237\u754c\u9762\u3002\n&lt\uff1b\uff01--\u4eceunpkg\u52a0\u8f7d--&gt\uff1b&lt\uff1bScript src=&#34\uff1bhttps://unpkg.com/htmx.org@0.0.4&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1b\uff01--\u8ba9\u6309\u94ae\u901a\u8fc7AJAX\u53d1\u5e03\u5355\u51fb--&gt\uff1b&lt\uff1b\u6309\u94aeHX-POST=&#34\uff1b/\u5355\u51fb&#34\uff1bHX-SWAP=&#34\uff1b\u5916\u90e8HTML&#34\uff1b&gt\uff1b\u5355\u51fb\u6211&lt\uff1b/\u6309\u94ae&gt\uff1b\n&#34\uff1b\u5f53\u7528\u6237\u5355\u51fb\u6b64\u6309\u94ae\u65f6\uff0c\u5411/CLICED\u53d1\u51faAJAX\u8bf7\u6c42\uff0c\u5e76\u5c06\u6574\u4e2a\u6309\u94ae\u66ff\u6362\u4e3a\u54cd\u5e94&#34\uff1b", "note_en": "htmx allows you to access  AJAX, WebSockets and  Server Sent Eventsdirectly in HTML, using  attributes, so you can build modern user interfaces with the  simplicity and power of hypertext\n   &lt;!-- Load from unpkg --&gt; &lt;script src=&#34;https://unpkg.com/htmx.org@0.0.4&#34;&gt;&lt;/script&gt; &lt;!-- have a button POST a click via AJAX --&gt; &lt;button hx-post=&#34;/clicked&#34; hx-swap=&#34;outerHTML&#34;&gt; Click Me &lt;/button&gt;\n  &#34;When a user clicks on this button, issue an AJAX request to /clicked, and replace the entire button with the response&#34;", "posttime": "2020-05-28 07:03:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u7528\u4e8e,high,ajax", "title": "htmx-\u7528\u4e8eHTML\u7684\u9ad8\u6027\u80fd\u5de5\u5177", "title_en": "htmx \u2013 high power tools for HTML", "transed": 1, "url": "https://htmx.org/", "via": "", "real_tags": ["\u6027\u80fd", "\u7528\u4e8e", "high", "ajax"]}, {"category": "", "categoryclass": "", "imagename": "0b37347f047636e8d42e1c654625a8da.jpeg", "infoid": 1003999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a7a\u519b\u4e00\u53f7(\u8def\u900f\u793e)-\u767d\u5bab\u53d1\u8a00\u4eba\u5468\u4e09\u8868\u793a\uff0c\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u4e0d\u4e45\u5c06\u7b7e\u7f72\u4e00\u9879\u5173\u4e8e\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u547d\u4ee4\u3002\n\u53d1\u8a00\u4eba\u51ef\u8389\u00b7\u9ea6\u514b\u7eb3\u5c3c(Kayleigh McEnany)\u5728\u4e0e\u7279\u6717\u666e\u4e00\u8d77\u4ece\u4f5b\u7f57\u91cc\u8fbe\u5dde\u524d\u5f80\u534e\u76db\u987f\u7684\u7a7a\u519b\u4e00\u53f7\u4e0a\u5bf9\u8bb0\u8005\u53d1\u8868\u4e86\u4e0a\u8ff0\u8a00\u8bba\u3002\u4e00\u5929\u524d\uff0c\u63a8\u7279\u516c\u53f8(Twitter Inc)\u5bf9\u7279\u6717\u666e\u7684\u4e00\u4e9b\u63a8\u6587\u53d1\u51fa\u8b66\u544a\uff0c\u4fc3\u4f7f\u8bfb\u8005\u5bf9\u603b\u7edf\u7684\u8bf4\u6cd5\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002", "note_en": "ABOARD AIR FORCE ONE (Reuters) - U.S. President Donald Trump will sign an executive order shortly regarding social media companies, a White House spokeswoman said on Wednesday.\n Spokeswoman Kayleigh McEnany made the remark to reporters aboard Air Force One, traveling with Trump to Washington from Florida a day after Twitter Inc attached a warning to some of his tweets prompting readers to fact-check the president\u2019s claims.", "posttime": "2020-05-28 07:02:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5a92\u4f53,sign", "title": "\u7279\u6717\u666e\u5c06\u7b7e\u7f72\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u4ee4", "title_en": "Trump will sign an executive order on social media companies", "transed": 1, "url": "https://www.reuters.com/article/us-twitter-trump-executive-order/trump-will-sign-an-executive-order-on-social-media-companies-white-house-spokeswoman-idUSKBN2333BT", "via": "", "real_tags": ["\u5a92\u4f53", "sign"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5728Facebook\u4e0a\u5173\u6ce8\u6211\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u6bcf\u5929\u90fd\u5728\u53d1\u5e03\u51a0\u72b6\u75c5\u6bd2\u7684\u7edf\u8ba1\u6570\u636e\u3002\u6211\u4f7f\u7528Johns Hopkins GitHub\u5b58\u50a8\u5e93\u4e2d\u7684\u6bcf\u65e5\u66f4\u65b0\u6765\u751f\u6210\u8fd9\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\n\u8d77\u521d\uff0c\u6211\u53ea\u662f\u624b\u5de5\u5c06\u6570\u636e\u590d\u5236\u5230\u7535\u5b50\u8868\u683c\u4e2d\u3002\u4f46\u8fd9\u5f88\u5feb\u5c31\u53d8\u5f97\u5355\u8c03\u4e4f\u5473\u4e86\u3002\n\u7136\u540e\uff0c\u57283\u6708\u4e0b\u65ec\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u5c0fClojure\u7a0b\u5e8f\u6765\u63d0\u53d6\u548c\u5904\u7406\u6570\u636e\u3002\u6bcf\u5929\u65e9\u4e0a\u6211\u90fd\u4f1a\u542f\u52a8\u56de\u8d2d\uff0c\u7136\u540e\u8fd0\u884c\u6211\u7684\u5c0f\u7a0b\u5e8f\u3002\u5b83\u8bfb\u53d6\u6587\u4ef6\u3001\u8ba1\u7b97\u6570\u5b66\u5e76\u6253\u5370\u7ed3\u679c\u3002\n\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u5bf9\u8fd9\u4e2a\u7a0b\u5e8f\u505a\u4e86\u76f8\u5f53\u591a\u7684\u5c0f\u4fee\u6539\uff1b\u800c\u4e14\u5b83\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u589e\u957f\u3002\u5728\u8fdb\u884c\u8fd9\u4e9b\u8c03\u6574\u65f6\uff0c\u6211\u9009\u62e9\u4f7f\u7528\u4e0d\u540c\u7684\u89c4\u7a0b\uff1aREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u3002\nREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u5728Clojure\u5708\u5b50\u91cc\u975e\u5e38\u6d41\u884c\u3002\u5b83\u4e5f\u5f88\u6709\u8bf1\u60d1\u529b\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u60a8\u53ef\u4ee5\u5728REPL\u4e2d\u5c1d\u8bd5\u4e00\u4e9b\u5b9e\u9a8c\uff0c\u4ee5\u786e\u4fdd\u60a8\u6709\u6b63\u786e\u7684\u60f3\u6cd5\u3002\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u60f3\u6cd5\u5728\u4ee3\u7801\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u3002\u6700\u540e\uff0c\u901a\u8fc7\u5728REPL\u8c03\u7528\u8be5\u51fd\u6570\u6765\u6d4b\u8bd5\u8be5\u51fd\u6570\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4ee4\u4eba\u6ee1\u610f\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u5468\u671f\u65f6\u95f4-\u4ee3\u7801\u5b9e\u9a8c\u548cREPL\u6d4b\u8bd5\u4e4b\u95f4\u7684\u65f6\u95f4-\u51e0\u4e4e\u4e0eTDD\u4e00\u6837\u5c0f\u3002\u8fd9\u4f7f\u4eba\u4eec\u5bf9\u89e3\u51b3\u65b9\u6848\u5145\u6ee1\u4fe1\u5fc3\u3002\u5b83\u4f3c\u4e4e\u8fd8\u8282\u7701\u4e86\u6a21\u62df\u548c\u521b\u5efa\u5047\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u81f3\u5c11\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u53ef\u4ee5\u5728REPL\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u771f\u5b9e\u7684\u751f\u4ea7\u6570\u636e\u3002\u56e0\u6b64\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u6bd4TDD\u8d70\u5f97\u66f4\u5feb\u3002\n\u4f46\u540e\u6765\uff0c\u57284\u6708\u4e0b\u65ec\uff0c\u6211\u60f3\u505a\u4e00\u4e9b\u6bd4\u5f80\u5e38\u66f4\u590d\u6742\u7684\u4e8b\u60c5\u3002\u8fd9\u9700\u8981\u5bf9\u6211\u7684\u57fa\u672c\u7ed3\u6784\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\u3002\u7a81\u7136\u6211\u53d1\u73b0\u81ea\u5df1\u5145\u6ee1\u4e86\u6050\u60e7\u3002\u6211\u65e0\u6cd5\u786e\u4fdd\u8fd9\u4e9b\u8bbe\u8ba1\u66f4\u6539\u4e0d\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u7834\u574f\u7cfb\u7edf\u3002\u5982\u679c\u6211\u505a\u4e86\u8fd9\u4e9b\u66f4\u6539\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8f93\u51fa\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u90fd\u6ca1\u6709\u635f\u574f\u3002\u56e0\u6b64\uff0c\u6211\u63a8\u8fdf\u4e86\u6539\u9769\uff0c\u76f4\u5230\u6211\u53ef\u4ee5\u9f13\u8d77\u52c7\u6c14\uff0c\u628a\u9700\u8981\u7684\u4e13\u95e8\u65f6\u95f4\u653e\u5728\u4e00\u8fb9\u3002\n\u8fd9\u4e2a\u53d8\u5316\u5e76\u4e0d\u592a\u75db\u82e6\u3002Clojure\u662f\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u7684\u8bed\u8a00\u3002\u4f46\u9a8c\u8bc1\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u8fd9\u5bfc\u81f4\u6211\u5728\u90e8\u7f72\u7a0b\u5e8f\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef-4\u5929\u540e\u6211\u6355\u6349\u5230\u7684\u4e00\u4e2a\u5c0f\u9519\u8bef\u3002\u8fd9\u4e2a\u9519\u8bef\u8feb\u4f7f\u6211\u56de\u53bb\u66f4\u6b63\u6211\u751f\u6210\u7684\u6570\u636e\u548c\u56fe\u8868\u3002\n\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4fee\u6539\u8bbe\u8ba1\uff1f\u56e0\u4e3a\u6211\u6ca1\u6709\u5632\u7b11\u548c\u521b\u9020\u5047\u6570\u636e\u3002\u6211\u7684\u51fd\u6570\u53ea\u662f\u76f4\u63a5\u4ecerepo\u6587\u4ef6\u4e2d\u8bfb\u53d6\u3002\u6ca1\u6709\u529e\u6cd5\u7ed9\u4ed6\u4eec\u4f20\u9012\u5047\u6570\u636e\u3002\u6211\u9700\u8981\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u4e0e\u5632\u7b11\u548c\u4f2a\u9020\u6570\u636e\u6240\u9700\u7684\u8bbe\u8ba1\u66f4\u6539\u5b8c\u5168\u76f8\u540c\u3002\n\u5982\u679c\u6211\u575a\u6301TDD\u539f\u5219\uff0c\u6211\u5c31\u4f1a\u81ea\u52a8\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\uff0c\u5c31\u4e0d\u4f1a\u9762\u4e34\u6050\u60e7\u3001\u5ef6\u8fdf\u548c\u9519\u8bef\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0cTDD\u4f1a\u5f3a\u8feb\u6211\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u6b63\u662f\u6211\u6700\u7ec8\u9700\u8981\u7684\u8bbe\u8ba1\u66f4\u6539\uff1f\u4e0d\u7528\u8c22\u3002\u4e3a\u4e86\u4f20\u9012\u5b64\u7acb\u7684\u8f93\u5165\u548c\u6536\u96c6\u5b64\u7acb\u7684\u8f93\u51fa\uff0cTDD\u5f3a\u52a0\u7ed9\u6211\u4eec\u7684\u89e3\u8026\u51e0\u4e4e\u603b\u662f\u5f3a\u8c03\u7075\u6d3b\u6027\u548c\u4fc3\u8fdb\u53d8\u5316\u7684\u8bbe\u8ba1\u3002\n\u6240\u4ee5\u6211\u5df2\u7ecf\u5438\u53d6\u4e86\u6559\u8bad\u3002REPL\u9a71\u52a8\u7684\u5f00\u53d1\u611f\u89c9\u6bd4TDD\u66f4\u5bb9\u6613\u3001\u66f4\u5feb\uff1b\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u53c8\u56de\u5230TDD\u4e86\u3002", "note_en": "If you follow me on facebook you know that I\u2019ve been publishing daily CoronaVirus statistics. I generate these statistics using the daily updates in the Johns Hopkins github  repository.\n At first I just hand copied the data into a spreadsheet. But that became tedious quite rapidly.\n Then, in late March, I wrote a little Clojure program to extract and process the data. Every morning I pull the repo, and then run my little program. It reads the files, does the math, and prints the results.\n  But over the last several weeks I\u2019ve made quite a few small modifications to the program; and it has grown substantially. In making these adaptations I chose to use a different discipline: REPL Driven Design.\n REPL Driven Design is quite popular in Clojure circles. It\u2019s also quite seductive. The idea is that you try some experiments in the REPL to make sure you\u2019ve got the right ideas. Then you write a function in your code using those idea. Finally, you test that function by invoking it at the REPL.\n It turns out that this is a very satisfying way to work. The cycle time \u2013 the time between a code experiment and the test at the REPL \u2013 is nearly as small as TDD. This breeds lots of confidence in the solution. It also seems to save the time needed to mock, and create fake data because, at least in my case, I could use real production data in my REPL tests. So, overall, it felt like I was moving faster than I would have with TDD.\n But then, in late April, I wanted to do something a little more complicated than usual. It required a design change to my basic structure. And suddenly I found myself full of fear. I had no way to ensure that those design changes wouldn\u2019t leave the system broken in some way. If I made those changes, I\u2019d have to examine every output to make sure that none of them had broken. So I postponed the change until I could muster the courage, and set aside the dedicated time it would require.\n The change was not too painful. Clojure is an easy language to work with. But the verfication was not trivial, which led me to deploy the program with a small bug \u2013 a bug I caught 4 days later. That bug forced me to go back and correct the data and graphs that I generated.\n Why did I need the design change? Because I was not mocking and creating fake data. My functions just read from the repo files directly. There was no way to pass them fake data. The design change I needed to make was precisely the same as the design change that I\u2019d have needed for mocking and fake data.\n Had I stuck with the TDD discipline I would have automatically made that design change, and I would not have faced the fear, the delay, and the error.\n Is it ironic that the very design change that TDD would have forced upon me was the design change I eventually needed? Not at all. The decoupling that TDD forces upon us in order to pass isolated inputs and gather isolated outputs is almost always the design that fascilitates flexibility and promotes change.\n So I\u2019ve learned my lesson. REPL driven development feels easier and faster than TDD; but it is not. Next time, it\u2019s back to TDD for me.", "posttime": "2020-05-28 07:02:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u9a71\u52a8,driven,tdd", "title": "REPL\u9a71\u52a8\u7684\u8bbe\u8ba1", "title_en": "REPL Driven Design", "transed": 1, "url": "http://blog.cleancoder.com/uncle-bob/2020/05/27/ReplDrivenDesign.html", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u9a71\u52a8", "driven", "tdd"]}, {"category": "", "categoryclass": "", "imagename": "9947574ad946f0dbe022efabe4ac64a4.jpg", "infoid": 1003997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u897f\u96c5\u56fe-\u5df2\u6545\u4fdd\u7f57\u00b7\u827e\u4f26(Paul Allen)\u521b\u7acb\u7684\u5730\u533a\u6587\u5316\u673a\u6784\uff0c\u5305\u62ec\u897f\u7eb3\u9a6c\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\uff0c\u5728\u74e6\u80af\u516c\u53f8(Vulcan Inc.)\u4e4b\u540e\u9762\u4e34\u6c38\u4e45\u5173\u95ed\u7684\u53ef\u80fd\u6027\u3002\u5468\u56db\u5ba3\u5e03\uff0c\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u706b\u795e\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u706b\u795e\u5236\u4f5c\u516c\u53f8\u3002\n\u5728\u74e6\u80af\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u8be5\u7ec4\u7ec7\u63d0\u5230\u4e86\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u7684\u7834\u574f\u6027\u5f71\u54cd\uff0c\u4ee5\u53ca\u57282018\u5e74\u5fae\u8f6f\u8054\u5408\u521b\u59cb\u4eba\u827e\u4f26\u53bb\u4e16\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u8bc4\u4f30\u5176\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7684\u6f14\u53d8\u3002\n\u867d\u7136\u6301\u7eed\u7684\u5065\u5eb7\u5371\u673a\u5bfc\u81f4\u8bb8\u591a\u4f01\u4e1a\u5728\u5dde\u653f\u5e9c\u5f3a\u5236\u5173\u95ed\u671f\u95f4\u5173\u95ed\uff0c\u4f46\u74e6\u80af\u7684\u4e3e\u52a8\u8ba9\u4eba\u6000\u7591\u5b83\u7684\u4e00\u4e9b\u7ec4\u7ec7\u662f\u5426\u4f1a\u56de\u6765\u3002\n\u8fd9\u4e00\u4e3e\u63aa\u5f71\u54cd\u4e86\u5386\u53f2\u60a0\u4e45\u7684\u897f\u7eb3\u9a6c\u535a\u7269\u9986(Cineama)\uff0c\u5b83\u6b63\u5728\u8fdb\u884c\u56e0\u75ab\u60c5\u800c\u6682\u505c\u7684\u7ffb\u4fee\uff1b\u751f\u6d3b\u7535\u8111\uff1a\u8ba1\u7b97\u6280\u672f\u548c\u4e92\u52a8\u5c55\u54c1\u7684\u5386\u53f2\u5c55\u793a--\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4(Museum+Labs)\uff1b\u897f\u96c5\u56fe\u73b0\u5f53\u4ee3\u827a\u672f\u535a\u89c8\u4f1a\uff1b\u534e\u76db\u987f\u5dde\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u88c5\u7532\u535a\u7269\u9986(Fly Heritage And Tighting Armor Museum)\uff0c\u7b49\u7b49\u3002\n\u4e0e\u4e16\u754c\u5404\u5730\u7684\u8bb8\u591a\u4f01\u4e1a\u4e00\u6837\uff0c\u65b0\u51a0\u80ba\u708e\u5371\u673a\u7684\u7ecf\u6d4e\u5f71\u54cd\u8981\u6c42\u74e6\u80af\u8bc4\u4f30\u5176\u89c4\u6a21\u548c\u7ed3\u6784\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6548\u7387\u548c\u5f71\u54cd\uff0c\u5e76\u5728\u6211\u4eec\u7684\u8054\u5408\u521b\u59cb\u4eba\u53bb\u4e16\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7ee7\u7eed\u53d1\u5c55\u3002\u6211\u4eec\u5df2\u7ecf\u505a\u51fa\u4e86\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u5173\u95ed\u4e24\u4e2a\u90e8\u95e8\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u8fc8\u5411\u4e00\u4e2a\u5c06\u56e0\u5927\u6d41\u884c\u800c\u4ee5\u65e0\u6cd5\u9884\u6d4b\u7684\u65b9\u5f0f\u6539\u53d8\u7684\u672a\u6765\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u74e6\u80af\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u74e6\u80af\u5236\u4f5c\u516c\u53f8\u3002\n\u8fd9\u573a\u5927\u6d41\u884c\u5bf9\u8bb8\u591a\u4f01\u4e1a\u548c\u975e\u8425\u5229\u7ec4\u7ec7\u90fd\u4ea7\u751f\u4e86\u6bc1\u706d\u6027\u7684\u5f71\u54cd\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u4f9d\u8d56\u516c\u5171\u96c6\u4f1a\u548c\u7279\u6b8a\u6d3b\u52a8\u4f5c\u4e3a\u5b9e\u73b0\u4f7f\u547d\u7684\u4e00\u90e8\u5206\u7684\u4f01\u4e1a\u3002\n\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u201c\u6d3b\u7740\u7684\u8ba1\u7b97\u673a\uff1a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\u201d\u5c06\u6682\u65f6\u5173\u95ed\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u91cd\u65b0\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u897f\u5185\u62c9\u9a6c\u7684\u7ffb\u4fee\u5df2\u7ecf\u6682\u505c\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\u4e5f\u5c06\u7ee7\u7eed\u5173\u95ed\u3002\u5df2\u7ecf\u53d6\u6d88\u4e862020\u5e74\u7684\u897f\u96c5\u56fe\u827a\u672f\u535a\u89c8\u4f1a\uff0c\u5728\u51b3\u5b9a\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u8ba1\u5212\u4e4b\u524d\uff0c\u5c06\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u770b\u770b\u5f62\u52bf\u548c\u827a\u672f\u4e16\u754c\u65e5\u5386\u7684\u53d1\u5c55\u60c5\u51b5\u3002\u540c\u6837\uff0c\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u76d4\u7532\u535a\u7269\u9986\u7684\u8463\u4e8b\u4f1a\u5df2\u7ecf\u51b3\u5b9a\uff0c\u5b83\u73b0\u5728\u4e5f\u5c06\u4fdd\u6301\u5173\u95ed\uff0c\u4ee5\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u6211\u4eec\u8fd8\u505a\u51fa\u4e86\u6c38\u4e45\u5173\u95ed\u6d1b\u6749\u77f6h\u4ff1\u4e50\u90e8\u7684\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5e76\u5f00\u59cb\u4e86\u5173\u95ed\u4f26\u6566\u539f\u6765\u7684h\u4ff1\u4e50\u90e8\u7684\u63d0\u6848\u7a0b\u5e8f\u3002\nVulcan Productions\u4eca\u5e74\u5c06\u7ee7\u7eed\u4e0e\u4ed6\u4eec\u503c\u5f97\u4fe1\u8d56\u7684\u5408\u4f5c\u4f19\u4f34\u548c\u8054\u5408\u5236\u7247\u4eba\u5408\u4f5c\uff0c\u9010\u6b65\u7ed3\u675f\u548c\u8fc7\u6e21\u9879\u76ee\uff0c\u5728\u6211\u4eec\u9010\u6b65\u9000\u51fa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u6700\u5927\u52aa\u529b\u4e3a\u8fd9\u4e9b\u9879\u76ee\u7684\u6210\u529f\u505a\u597d\u51c6\u5907\u3002\n\u6211\u4eec\u4e3a\u6570\u5341\u4e07\u4eba\u53d7\u5230\u8fd9\u4e9b\u72ec\u7279\u7684\u673a\u6784\u548c\u7535\u5f71\u9879\u76ee\u7684\u6559\u80b2\u3001\u5a31\u4e50\u548c\u542f\u53d1\u800c\u611f\u5230\u81ea\u8c6a\uff0c\u5b83\u4eec\u7684\u5168\u7403\u5f71\u54cd\u4e0d\u53ef\u4f4e\u4f30\u3002Vulcan\u4ecd\u7136\u81f4\u529b\u4e8e\u4f7f\u4e16\u754c\u53d8\u5f97\u66f4\u7f8e\u597d\u7684\u4f7f\u547d\uff0c\u6211\u4eec\u611f\u8c22\u6bcf\u4e00\u4f4d\u56e2\u961f\u6210\u5458\u6bcf\u5929\u6240\u8868\u73b0\u51fa\u7684\u5949\u732e\u548c\u627f\u8bfa\u3002\u6b63\u662f\u901a\u8fc7\u4ed6\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u5bf9\u6211\u4eec\u4f7f\u547d\u7684\u70ed\u60c5\uff0c\u6211\u4eec\u591a\u5e74\u6765\u5728\u8fd9\u4e9b\u9879\u76ee\u4e2d\u53d6\u5f97\u4e86\u5982\u6b64\u591a\u7684\u6210\u5c31\u3002\n\u827e\u4f26\u7684\u53bb\u4e16\u5728\u897f\u96c5\u56fe\u7684\u6148\u5584\u827a\u672f\u754c\u7559\u4e0b\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7f3a\u53e3\uff0c\u56e0\u4e3a\u4ed6\u662f\u97f3\u4e50\u3001\u827a\u672f\u3001\u7535\u5f71\u548c\u79d1\u5e7b\u5c0f\u8bf4\u7684\u957f\u671f\u62e5\u62a4\u8005\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u70ed\u60c5\u82b1\u8d39\u4e86\u5927\u91cf\u8d22\u5bcc\u3002\n\u5728\u963f\u4f26\u59d0\u59d0\u4e54\u8fea\u00b7\u827e\u4f26\u7684\u9886\u5bfc\u4e0b\uff0c\u74e6\u80af\u7684\u672a\u6765\u4ee5\u53ca\u963f\u4f26\u8eab\u8fb9\u548c\u4eb2\u7231\u7684\u5927\u91cf\u8d44\u4ea7\uff0c\u5305\u62ec\u897f\u96c5\u56fe\u6d77\u9e70\u961f\u548c\u6ce2\u7279\u5170\u5f00\u62d3\u8005\u961f\uff0c\u90fd\u9762\u4e34\u7740\u4e0d\u786e\u5b9a\u7684\u51e0\u5e74\u3002\n\u706b\u795e\u6ca1\u6709\u5c06\u6d41\u884c\u6587\u5316\u535a\u7269\u9986(MoPOP)\u5217\u4e3a\u9762\u4e34\u4e0d\u786e\u5b9a\u6027\u7684\u7ec4\u7ec7\u4e4b\u4e00\uff0c\u8fd9\u662f\u827e\u4f26\u7684\u53e6\u4e00\u4ef6\u4f5c\u54c1\uff0c\u706b\u795e\u8868\u793a\uff0c\u97f3\u4e50\u548c\u79d1\u5e7b\u535a\u7269\u9986\u662f\u4e00\u4e2a\u72ec\u7acb\u7684501(C)3\u7ec4\u7ec7\uff0c\u4e0d\u53d7\u8fd9\u4e9b\u51b3\u5b9a\u7684\u5f71\u54cd\u3002\n\u827e\u4f26\u57281998\u5e74\u6536\u8d2d\u7684\u9ad8\u79d1\u6280\u7535\u5f71\u9662Cineama\u57282014\u5e74\u8fdb\u884c\u4e86\u4e00\u6b21\u91cd\u5927\u7684\u6700\u5148\u8fdb\u7684\u6280\u672f\u5347\u7ea7\uff0c\u5e76\u57282\u6708\u4efd\u5173\u95ed\uff0c\u8fdb\u884c\u4e86\u66f4\u591a\u7684\u6539\u53d8\u3002\u7531\u4e8e\u5f53\u65f6\u88ab\u5ba3\u4f20\u4e3a\u4e34\u65f6\u5173\u95ed\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u4e4b\u524d\uff0c\u74e6\u80af\u89e3\u96c7\u4e86\u4e00\u6279\u5458\u5de5\u3002\nGeekWire Space&amp\uff1bScience-\u83b7\u5956\u822a\u7a7a\u822a\u5929\u548c\u79d1\u5b66\u7f16\u8f91\u827e\u4f26\u00b7\u535a\u4f0a\u5c14(Alan Boyle)\u6bcf\u5468\u5934\u6761", "note_en": "Seattle-area cultural institutions founded by the late Paul Allen, including the  Cinerama\u00a0movie theater and\u00a0 Living Computers Museum + Labs, face the possibility of permanent closure after Vulcan Inc. announced Thursday that it will wind down Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n In a statement from Vulcan, the organization cited the devastating impact of the COVID-19 pandemic as well as the need to continue to assess its evolution as an organization following the 2018 death of Allen, the Microsoft co-founder.\n While the ongoing health crisis has caused numerous businesses to close during state-mandated lockdowns, Vulcan\u2019s move called into question whether some of its organizations would ever return.\n  The move affects the historic Cinerama, which was undergoing renovations that had been halted by the pandemic; Living Computers: Museum + Labs, a historical showcase of computing technology as well as interactive exhibits;  Seattle Art Fair, a modern and contemporary art showcase in Seattle; the  Flying Heritage and Combat Armor Museum in Everett, Wash.; and more.\n  Like so many businesses worldwide, the economic impacts of the COVID-19 crisis require Vulcan to assess its size and structure to maximize effectiveness and impact, and continue to evolve as an organization following the death of our co-founder. We have made the extremely hard decision to close two divisions over the next several months as we move to a future that will be changed in untold ways by the pandemic. This means we are winding down both Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n The pandemic has had devastating effects on many businesses and nonprofits alike, especially those that rely on public gatherings and special events as part of achieving their mission.\n For this reason, Living Computers: Museum + Labs will remain closed for now and spend the coming months reassessing if, how, and when to reopen. Cinerama\u2019s renovation was already paused given the pandemic, and will also stay closed for the foreseeable future. The Seattle Art Fair, which was already cancelled for 2020, will take some time to see how the situation and art world calendar evolve before deciding any further plans. And similarly, the board of the Flying Heritage and Combat Armor Museum in Everett has decided it will also remain closed for now to evaluate if, how, and when to reopen. We have also made the extremely difficult decision to permanently close h Club LA and are beginning the proposal process toward closing the original h Club in London.\n Vulcan Productions will continue to work with their trusted partners and co-producers to wind down and transition projects this year, doing their best to set these projects up for success as we make a gradual exit.\n We are proud of the hundreds of thousands of people that have been educated, entertained, and inspired by these unique institutions and film projects, and their global impact cannot be underestimated. Vulcan remains committed to its mission of making and leaving the world a better place, and we are grateful to each and every team member for the dedication and commitment they have exhibited on a daily basis. It is through their expertise and passion for our mission that we have accomplished so much in these projects throughout the years.\n Allen\u2019s death left a gaping hole in Seattle\u2019s philanthropic arts scene, as he was a longtime champion of music, art, film and science fiction, and spent large sums of his wealth in accordance with those passions.\n The future of Vulcan and the vast array of holdings near and dear to Allen, including the Seattle Seahawks and Portland Trail Blazers, have  faced an uncertain couple of years under the leadership of Allen\u2019s sister, Jody Allen.\n  The Museum of Pop Culture, or MoPOP, another Allen creation, was not listed by Vulcan among the organizations facing uncertainty, and Vulcan said the music and sci-fi museum is an independent 501(c)3 organization that is not impacted by the decisions.\n Cinerama, the high-tech movie theater that Allen purchased in 1998, underwent a major start-of-the-art technology upgrade in 2014 and was  closed for more changes in February. With what was billed as a temporary closure at the time, before COVID-19, Vulcan laid off a number of employees.\n      GeekWire Space &amp; Science - Weekly headlines from Alan Boyle, award-winning aerospace and science editor", "posttime": "2020-05-28 06:31:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u7535\u5f71\u9662,seattle,\u5173\u95ed", "title": "\u897f\u96c5\u56fe\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986\u7684\u672a\u6765\u60ac\u800c\u672a\u51b3", "title_en": "Future of Seattle\u2019s Cinerama and Living Computers Museum in Doubt", "transed": 1, "url": "https://www.geekwire.com/2020/paul-allens-vulcan-inc-shuttering-divisions-impact-cinerama-cultural-institutions/", "via": "", "real_tags": ["\u7535\u5f71", "\u7535\u5f71\u9662", "seattle", "\u5173\u95ed"]}, {"category": "", "categoryclass": "", "imagename": "78a4bff214844f9aaec3cd17cf4cd57e.jpg", "infoid": 1003996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u6b3e\u771f\u6b63\u4ee4\u4eba\u60ca\u53f9\u7684\u89c6\u9891\u6e38\u620f\u7ed3\u5408\u4e86\u5de7\u5999\u7684\u4ee3\u7801\u3001\u534e\u4e3d\u7684\u56fe\u5f62\u548c\u5de7\u5999\u7684\u52a8\u753b-\u5916\u52a0\u6570\u5343\u5c0f\u65f6\u7684\u8f9b\u52e4\u5de5\u4f5c\u3002\n\u56fd\u9645\u8db3\u8054(FIFA)\u3001\u72c2\u4eba(Madden)\u548c\u5176\u4ed6\u6d41\u884c\u6e38\u620f\u80cc\u540e\u7684\u827a\u7535\u516c\u53f8(Electronic Arts)\u7684\u7814\u7a76\u4eba\u5458\u6b63\u5728\u6d4b\u8bd5\u4eba\u5de5\u667a\u80fd\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u4ee5\u6b64\u6765\u52a0\u5feb\u5f00\u53d1\u8fdb\u7a0b\uff0c\u4f7f\u6e38\u620f\u66f4\u903c\u771f\u3002\u4e00\u4e2a\u5de7\u5999\u7684\u8f6c\u6298\u662f\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u5229\u7528\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u901a\u8fc7\u73a9\u4e00\u4e9b\u6700\u65e9\u7684\u6e38\u620f\u673a\u89c6\u9891\u6e38\u620f\u6765\u8bc1\u660e\u81ea\u5df1\u3002\n\u6765\u81eaEA\u548c\u6e29\u54e5\u534e\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u4e00\u4e2a\u56e2\u961f\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u5f3a\u5316\u5b66\u4e60\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u5927\u81f4\u4e0a\u662f\u53d7\u5230\u52a8\u7269\u5bf9\u6b63\u9762\u548c\u8d1f\u9762\u53cd\u9988\u505a\u51fa\u53cd\u5e94\u7684\u5b66\u4e60\u65b9\u5f0f\u7684\u542f\u53d1\uff0c\u4ee5\u81ea\u52a8\u5236\u4f5c\u7c7b\u4eba\u89d2\u8272\u7684\u52a8\u753b\u3002\u201c\u7ed3\u679c\u975e\u5e38\u975e\u5e38\u6709\u5e0c\u671b\uff0c\u201d\u827a\u7535\u9ad8\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6cd5\u6bd4\u5965\u00b7\u6d25\u8bfa(Fabio Zinno)\u8bf4\u3002\n\u4f20\u7edf\u4e0a\uff0c\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u89d2\u8272\u548c\u4ed6\u4eec\u7684\u52a8\u4f5c\u90fd\u662f\u624b\u5de5\u5236\u4f5c\u7684\u3002\u56fd\u9645\u8db3\u8054(FIFA)\u7b49\u4f53\u80b2\u6e38\u620f\u5229\u7528\u52a8\u4f5c\u6355\u6349(Motion Capture)\uff0c\u8fd9\u662f\u4e00\u79cd\u6d89\u53ca\u8ddf\u8e2a\u771f\u4eba\u7684\u6280\u672f\uff0c\u901a\u5e38\u4f7f\u7528\u771f\u4eba\u8138\u4e0a\u6216\u8eab\u4f53\u4e0a\u7684\u6807\u8bb0\u6765\u5448\u73b0\u66f4\u903c\u771f\u7684\u4eba\u7c7b\u89d2\u8272\u52a8\u4f5c\u3002\u4f46\u53ef\u80fd\u6027\u53d7\u5230\u5df2\u7ecf\u5f55\u5236\u7684\u52a8\u4f5c\u7684\u9650\u5236\uff0c\u4ecd\u7136\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u4e3a\u89d2\u8272\u8bbe\u7f6e\u52a8\u753b\u3002\n\u4f8b\u5982\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u52a8\u753b\u8fc7\u7a0b\u4ee5\u53ca\u6e38\u620f\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\u5176\u4ed6\u5143\u7d20\uff0c\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u6e38\u620f\u516c\u53f8\u8282\u7701\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u540c\u65f6\u4f7f\u6e38\u620f\u66f4\u52a0\u903c\u771f\u548c\u9ad8\u6548\uff0c\u8fd9\u6837\u4e00\u6b3e\u590d\u6742\u7684\u6e38\u620f\u5c31\u53ef\u4ee5\u5728\u667a\u80fd\u624b\u673a\u4e0a\u8fd0\u884c\u3002\n\u8fd1\u5e74\u6765\uff0c\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u8ba9\u8ba1\u7b97\u673a\u5728\u6ca1\u6709\u4efb\u4f55\u6307\u5bfc\u7684\u60c5\u51b5\u4e0b\u5b66\u4f1a\u73a9\u590d\u6742\u7684\u6e38\u620f\u548c\u89e3\u51b3\u4ee4\u4eba\u70e6\u607c\u7684\u95ee\u9898\u800c\u6fc0\u8d77\u4e86\u4eba\u4eec\u7684\u5174\u594b\u30022013\u5e74\uff0c\u540e\u6765\u88ab\u8c37\u6b4c(Google)\u6536\u8d2d\u7684\u82f1\u56fd\u516c\u53f8DeepMind\u7684\u7814\u7a76\u4eba\u5458\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u521b\u5efa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4f1a\u4e86\u5c06\u51e0\u6b3e\u96c5\u8fbe\u5229(Atari)\u89c6\u9891\u6e38\u620f\u73a9\u5230\u8d85\u4eba\u7684\u6c34\u5e73\u3002\u8be5\u7a0b\u5e8f\u901a\u8fc7\u5b9e\u9a8c\u4ee5\u53ca\u50cf\u7d20\u548c\u6e38\u620f\u5206\u6570\u7684\u53cd\u9988\u5b66\u4f1a\u4e86\u73a9\u6e38\u620f\u3002DeepMind\u540e\u6765\u4f7f\u7528\u540c\u6837\u7684\u6280\u672f\u6784\u5efa\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u638c\u63e1\u4e86\u6781\u5176\u590d\u6742\u548c\u5fae\u5999\u7684\u68cb\u7c7b\u6e38\u620f\u56f4\u68cb\u7b49\u3002\n\u57287\u6708\u4efd\u5c06\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4f1a\u8baeSiggraph 2020\u4e0a\u5c55\u793a\u7684\u5de5\u4f5c\u4e2d\uff0cEA-UBC\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u521b\u9020\u51fa\u4e00\u79cd\u53ef\u63a7\u7684\u8db3\u7403\u8fd0\u52a8\u5458\uff0c\u65e0\u9700\u4f7f\u7528\u4f20\u7edf\u7684\u7f16\u7801\u6216\u52a8\u753b\u5c31\u53ef\u4ee5\u771f\u5b9e\u5730\u79fb\u52a8\u3002\n\u4e3a\u4e86\u5236\u4f5c\u8fd9\u4e2a\u89d2\u8272\uff0c\u7814\u7a76\u5c0f\u7ec4\u9996\u5148\u8bad\u7ec3\u4e86\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u4ee5\u8bc6\u522b\u548c\u590d\u5236\u52a8\u4f5c\u6355\u6349\u6570\u636e\u4e2d\u7684\u7edf\u8ba1\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u8bad\u7ec3\u53e6\u4e00\u4e2a\u6a21\u578b\uff0c\u4ee5\u518d\u73b0\u5177\u6709\u7279\u5b9a\u76ee\u6807\u7684\u771f\u5b9e\u8fd0\u52a8\uff0c\u4f8b\u5982\u5728\u6e38\u620f\u4e2d\u5411\u7403\u8dd1\u53bb\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4f1a\u751f\u6210\u539f\u59cb\u8fd0\u52a8\u6355\u6349\u6570\u636e\u4e2d\u627e\u4e0d\u5230\u7684\u52a8\u753b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4e60\u8db3\u7403\u8fd0\u52a8\u5458\u5982\u4f55\u79fb\u52a8\uff0c\u7136\u540e\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u89d2\u8272\u6162\u8dd1\u3001\u51b2\u523a\u548c\u6446\u52a8\u7684\u52a8\u753b\u3002\n\u7ebd\u7ea6\u5927\u5b66(NYU)\u6559\u6388\u6731\u5229\u5b89\u00b7\u6258\u683c\u5229\u5384\u65af(Julian Togelius)\u8bf4\uff1a\u201c\u6211\u7edd\u5bf9\u53ef\u4ee5\u770b\u5230\u8fd9\u9879\u6280\u672f\u5728\u4e0d\u540c\u65b9\u9762\u90fd\u5f88\u6709\u7528\u3002\u201d\u4ed6\u4e5f\u662f\u4e00\u5bb6\u4e3a\u6e38\u620f\u5236\u9020\u4eba\u5de5\u667a\u80fd\u5de5\u5177\u7684\u516c\u53f8a Modl.ai\u7684\u8054\u5408\u521b\u59cb\u4eba\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u5f3a\u5316\u5b66\u4e60\u9879\u76ee\u662f\u81ea\u52a8\u5316\u6216\u201c\u7a0b\u5e8f\u751f\u6210\u201d\u65b9\u6cd5\u6d6a\u6f6e\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u6539\u53d8\u6e38\u620f\u5185\u5bb9\u7684\u521b\u5efa\u65b9\u5f0f\u3002\n\u6258\u683c\u5229\u5384\u65af\u8bf4\uff1a\u201c\u7a0b\u5e8f\u5316\u52a8\u753b\u5c06\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u201d\u201c\u5b83\u57fa\u672c\u4e0a\u81ea\u52a8\u5316\u4e86\u6784\u5efa\u6e38\u620f\u5185\u5bb9\u7684\u5927\u91cf\u5de5\u4f5c\u3002\u201d\n\u968f\u7740\u6e38\u620f\u673a\u3001\u4e2a\u4eba\u7535\u8111\u548c\u667a\u80fd\u624b\u673a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u6e38\u620f\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u548c\u590d\u6742\uff0c\u9700\u8981\u6e38\u620f\u516c\u53f8\u8fdb\u884c\u66f4\u5927\u7684\u6295\u8d44\u3002\u73b0\u6709\u7684\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u52a8\u753b\u5e08\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u5b83\u4eec\u3002\u5c31\u50cf\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u5728\u8f93\u5165\u8db3\u591f\u7684\u6570\u636e\u65f6\u70ae\u5236\u51fa\u7167\u7247\u7ea7\u7684\u9762\u5b54\u548c\u573a\u666f\u4e00\u6837\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u81ea\u52a8\u521b\u5efa\u65b0\u7684\u89d2\u8272\u548c\u573a\u666f\u3002\n\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u5176\u4ed6\u6d41\u6d3e\u751f\u6210\u5185\u5bb9\uff0c\u5305\u62ec\u52a8\u4f5c\u548c\u89d2\u8272\u626e\u6f14\u6e38\u620f\u3002\u4e00\u4e9b\u6e38\u620f\u516c\u53f8\u6b63\u5728\u8bd5\u9a8c\u7a0b\u5e8f\u751f\u6210\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4f7f\u6e38\u620f\u66f4\u5177\u6269\u5c55\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u88ab\u7528\u6765\u751f\u6210\u65b0\u7684\u4e16\u754c\uff0c\u4f9b\u73a9\u5bb6\u57282016\u5e74\u53d1\u5e03\u7684\u592a\u7a7a\u751f\u5b58\u6e38\u620f\u201c\u65e0\u4eba\u7684\u5929\u7a7a\u201d\u4e2d\u63a2\u7d22\u3002Togelius\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u4e5f\u6b63\u5728\u6210\u4e3a\u4e00\u79cd\u4f7f\u7528\u4eba\u9020\u73a9\u5bb6\u6d4b\u8bd5\u6e38\u620f\u548c\u53d1\u73b0\u9519\u8bef\u7684\u5f3a\u5927\u65b9\u5f0f\u3002\n\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u4eba\u5de5\u667a\u80fd\u6709\u53ef\u80fd\u4ece\u5934\u5f00\u59cb\u751f\u6210\u7b80\u5355\u7684\u89c6\u9891\u6e38\u620f\u3002\u5468\u4e94\uff0c\u6765\u81ea\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u548c\u5236\u9020\u6e38\u620f\u82af\u7247\u7684\u82f1\u4f1f\u8fbe(Nvidia)\u7684\u7814\u7a76\u4eba\u5458\u62ab\u9732\u4e86\u4e00\u6b3e\u4eba\u5de5\u667a\u80fd\u5f15\u64ce\uff0c\u5b83\u5b66\u4f1a\u4e86\u5982\u4f55\u5728\u6ca1\u6709\u4efb\u4f55\u539f\u59cb\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u91cd\u73b0\u7ecf\u5178\u6e38\u620f\u5403\u8c46\u4eba(Pac-Man)\u3002\n\u5728\u8857\u673a\u6e38\u620f\u53d1\u5e0340\u5468\u5e74\u4e4b\u9645\uff0c\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u4e3aGameGan\u7684\u7a0b\u5e8f\u5982\u4f55\u901a\u8fc7\u89c2\u5bdf\u5c4f\u5e55\u5e76\u76d1\u63a75\u4e07\u4e2a\u5403\u8c46\u4eba\u6e38\u620f\u671f\u95f4\u4f7f\u7528\u7684\u63a7\u4ef6\u6765\u91cd\u73b0\u7b80\u5355\u7684\u6e38\u620f\u3002GameGan\u968f\u540e\u751f\u6210\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u5305\u62ec\u65b0\u7684\u573a\u666f\u548c\u5e73\u53f0\u3002\nPac-Man\u80cc\u540e\u7684Namco\u516c\u53f8\u768410\u540d\u5de5\u7a0b\u5e08\u82b1\u4e8617\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u8bbe\u8ba1\u3001\u7f16\u7a0b\u548c\u6d4b\u8bd5\u6700\u521d\u7684\u6e38\u620f\u3002\u5982\u679c\u63d0\u4f9b\u8db3\u591f\u7684\u6570\u636e\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u6700\u7ec8\u53ef\u80fd\u4f1a\u521b\u9020\u51fa\u4e00\u6b3e\u5f15\u4eba\u6ce8\u76ee\u7684\u65b0\u6e38\u620f--\u201c\u6124\u6012\u7684\u5c0f\u9e1f\u201d\u6216\u201c\u7cd6\u679c\u7c89\u788e\u4f20\u5947\u201d\uff0c\u6ca1\u6709\u4eba\u9700\u8981\u7f16\u5199\u4ee3\u7801\u3002\n\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u52a9\u7406\u6559\u6388\u3001\u82f1\u4f1f\u8fbe(Nvidia)\u4eba\u5de5\u667a\u80fd\u4e3b\u4efb\u6851\u8d3e\u00b7\u83f2\u5fb7\u52d2(Sanja Fidler)\u8868\u793a\uff1a\u201c\u4f60\u53ef\u4ee5\u60f3\u8c61\u5728\u8bb8\u591a\u6e38\u620f\u4e0a\u8bad\u7ec3\u5b83-\u6570\u5343\u79cd\u4e0d\u540c\u7684\u6e38\u620f\u3002\u201d\u201c\u4eba\u4eec\u4f1a\u5e0c\u671b\uff0c\u73b0\u5728\u4f60\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u4e0d\u540c\u6e38\u620f\u4e2d\u7684\u4e0d\u540c\u4e1c\u897f\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u63d2\u5165\u5176\u4e2d\u3002\u201d\nEA\u7684Zinno\u8bf4\uff0c\u6e38\u620f\u5f00\u53d1\u8005\u53ef\u80fd\u9700\u8981\u51e0\u5e74\u65f6\u95f4\u624d\u80fd\u4f8b\u884c\u516c\u4e8b\u5730\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\uff0c\u90e8\u5206\u539f\u56e0\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5f88\u96be\u7406\u89e3\u548c\u8c03\u8bd5\u3002\u4ed6\u6307\u51fa\uff0c\u8bc1\u636e\u5c06\u5728\u7531\u6b64\u4ea7\u751f\u7684\u6e38\u620f\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e2d\u5f97\u5230\u8bc1\u660e\uff1a\u201c\u6e38\u620f\u5f00\u53d1\u5c31\u662f\u5b83\u81ea\u5df1\u7684\u91ce\u517d\u3002\u4e0d\u7ba1\u4f60\u7684\u52a8\u753b\u6280\u672f\u6709\u591a\u4e0d\u53ef\u601d\u8bae\uff0c\u5173\u952e\u662f\uff0c\u73a9\u8d77\u6765\u597d\u73a9\u5417\uff1f\u201c\u3002\n\u53c2\u4e0eEA\u9879\u76ee\u7684UBC\u6559\u6388Michiel van de Panne\u8bf4\uff0c\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u5728\u7269\u7406\u73b0\u5b9e\u73af\u5883\u4e2d\u8bad\u7ec3\u975e\u4eba\u7c7b\u7684\u89c6\u9891\u6e38\u620f\u89d2\u8272\u3002\u4f46\u4ed6\u627f\u8ba4\uff0c\u8bad\u7ec3\u7b97\u6cd5\u4ece\u5934\u5f00\u59cb\u5236\u4f5c\u5168\u65b0\u7684\u52a8\u753b\u5c06\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5f88\u96be\u91cf\u5316\u73a9\u5bb6\u4f1a\u53d1\u73b0\u4ec0\u4e48\u662f\u6709\u5438\u5f15\u529b\u7684\u3002Van de Panne\u8bf4\uff1a\u201c\u6211\u5728\u7b49\u7740\u770b\u771f\u6b63\u5145\u5206\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6765\u751f\u6210\u52a8\u753b\u7684\u4e1c\u897f\u3002\u201d\u201c\u4f46\u5b83\u80af\u5b9a\u4f1a\u6765\u7684\u3002\u201d\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u60f3\u8981\u6700\u597d\u7684\u5065\u5eb7\u5de5\u5177\u5417\uff1f\u770b\u770b\u6211\u4eecGear\u56e2\u961f\u6311\u9009\u7684\u6700\u597d\u7684\u5065\u8eab\u8ddf\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907(\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50)\u548c\u6700\u597d\u7684\u8033\u673a", "note_en": "A truly kick-ass videogame combines clever code, gorgeous graphics, and artful animation\u2014plus thousands of hours of hard work.\n Researchers at  Electronic Arts\u2014the company behind   FIFA,   Madden, and other popular games\u2014are testing recent advances in  artificial intelligence as a way to speed the development process and make games more lifelike. And in a neat twist, the researchers are harnessing an AI technique that proved itself by playing some of the earliest console videogames.\n A team from EA and the University of British Columbia in Vancouver is using a technique called  reinforcement learning, which is loosely inspired by the way animals learn in response to positive and negative feedback, to automatically animate humanoid characters. \u201cThe results are very, very promising,\u201d says Fabio Zinno, a senior software engineer at Electronic Arts.\n  Traditionally, characters in videogames and their actions are crafted manually. Sports games, such as  FIFA, make use of  motion capture, a technique that involves tracking a real person often using markers on their face or body, to render more lifelike actions in human characters. But the possibilities are limited by the actions that have been recorded, and code still needs to be written to animate the character.\n By automating the animation process, as well as other elements of game design and development, AI could save game companies millions of dollars while making games more realistic and efficient, so that a complex game can run on a smartphone, for example.\n  Reinforcement learning has sparked excitement in recent years by letting computers learn to play complex games and solve vexing problems without any instruction. In 2013, researchers at  DeepMind, a UK company later acquired by Google, used reinforcement learning to create a computer program that  learned to play several Atari videogames to a superhuman level. The program learned to play through experimentation and feedback from the pixels and the game score. DeepMind later  employed the same technique to build a program that  mastered the fiendishly complex and subtle board game Go, among other things.\n  In work to be presented in July at  Siggraph 2020, a computer graphics conference, the EA-UBC researchers show that reinforcement learning can  create a controllable soccer player that moves realistically without using conventional coding or animation.\n  To make the character, the team first trained a  machine-learning model to identify and reproduce statistical patterns in motion-capture data. They then used reinforcement learning to train another model to reproduce realistic motion with a specific objective, such as running toward a ball in the game. Crucially, this produces animations not found in the original motion-capture data. In other words, the program learns how a soccer player moves, and can then animate the character jogging, sprinting, and shimmying by itself.\n \u201cI can definitely see this technology being useful in different ways,\u201d says  Julian Togelius, a professor at NYU and the cofounder of a  Modl.ai, a company that makes AI tools for games. He adds that the reinforcement learning project is part of a wave of automated or \u201cprocedural generation\u201d methods that will transform how game content is created.\n \u201cProcedural animation will be a huge thing,\u201d Togelius says. \u201cIt basically automates a lot of the work that goes into building game content.\u201d\n As consoles, PCs, and smartphones become ever-more powerful, games will become increasingly sophisticated and complex, requiring greater investment from game companies. Existing tools can help make designers and animators more efficient, but they\u2019re still needed at every step. Just as AI can concoct photo-realistic  faces and  scenes when fed enough data, algorithms may automate the creation of new characters and scenes.\n AI could generate content for other genres, including action and role-playing games. Some game companies are experimenting with procedural generation as a way to make games more expansive. A simple method is used to generate new worlds for players to explore in   No Man\u2019s Sky, a space-based survival game released in 2016. Togelius says AI is also emerging as a powerful way to test games and find bugs, using artificial players.\n  At the other end of the spectrum, there\u2019s potential for AI to generate simple videogames from scratch. On Friday, researchers from the University of Toronto, MIT, and  Nvidia, which makes gaming chips, revealed an AI engine that learned how to recreate the classic game  Pac-Man without any of the original code.\n  On the  40th anniversary of the arcade game\u2019s release, the researchers showed how a program called  GameGAN can recreate simple games by watching the screen and monitoring the controls used during 50,000 games of  Pac-Man. GameGAN then generated its own version, complete with new scenarios and platforms.\n  It took 10 engineers at Namco, the company behind  Pac-Man, 17 months to design, program, and test the original game. If fed enough data, such an algorithm might eventually fashion a compelling new game\u2014an  Angry Birds or  Candy Crush that no one needed to code.\n \u201cYou can imagine training it on many games\u2014thousands of different games,\u201d says  Sanja Fidler, an assistant professor at the University of Toronto and director of AI at Nvidia. \u201cAnd one would hope that now you can somehow mash up and interpolate different things from different games.\u201d\n Zinno of EA says it may be several years before game developers routinely use AI, partly because machine-learning algorithms are tricky to understand and debug. The proof will be in the popularity of the resulting games, he notes: \u201cGame development is its own beast. No matter how incredible your animation technology, the point is, is it fun to play?\u201d\n Michiel van de Panne, a professor at UBC who is involved in the EA project, says the next step is to use reinforcement learning to train nonhuman videogame characters inside physically realistic environments. But he acknowledges it will be more difficult to train algorithms to come up with entirely new animation from scratch, because it is difficult to quantify what players will find appealing. \u201cI\u2019m waiting to see something that really takes full advantage of AI for the generation of animation,\u201d van de Panne says. \u201cBut it will come for sure.\u201d\n   \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2020-05-28 06:16:42", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f00\u53d1,\u6e38\u620f,\u4eba\u5de5\u667a\u80fd,\u5236\u4f5c,inject", "title": "\u6e38\u620f\u5236\u4f5c\u4eba\u6ce8\u5165\u4eba\u5de5\u667a\u80fd\u4ee5\u5f00\u53d1\u66f4\u903c\u771f\u7684\u89d2\u8272", "title_en": "Gamemakers Inject AI To Develop More Lifelike Characters", "transed": 1, "url": "https://www.wired.com/story/game-makers-inject-ai-develop-more-lifelike-characters/", "via": "", "real_tags": ["\u5f00\u53d1", "\u6e38\u620f", "\u4eba\u5de5\u667a\u80fd", "\u5236\u4f5c", "inject"]}, {"category": "", "categoryclass": "", "imagename": "ecd2506e767922c9713a626ebdc9df18.png", "infoid": 1003994, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90e8\u5206Word\u529f\u80fd\u7121\u6cd5\u65bc\u201c\u8c37\u6b4c\u6587\u4ef6\u201d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664.", "note_en": "\u90e8\u5206 Word \u529f\u80fd\u7121\u6cd5\u65bc\u300cGoogle \u6587\u4ef6\u300d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664\u3002", "posttime": "2020-05-28 05:59:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u81ea\u52a9\u5f0f,bootstrapped,\u8b8a\u66f4", "title": "\u6211\u8981\u5356\u6211\u7684\u81ea\u52a9\u5f0fSaaS\u9879\u76ee\u3002\u76ee\u524d\u7684MRR\u4e3a2500\u7f8e\u5143\uff0c\u800c\u4e14\u8fd8\u5728\u4e0d\u65ad\u589e\u957f", "title_en": "I'm selling my bootstrapped SaaS project. Currently doing $2500 MRR and growing", "transed": 1, "url": "https://docs.google.com/document/d/1BwBZUhgTLJTIXPV6GhC4ihBodlmjdJ0lH_vW9xoKxKA/edit?usp=sharing", "via": "", "real_tags": ["app", "\u81ea\u52a9\u5f0f", "\u8b8a\u66f4"]}, {"category": "", "categoryclass": "", "imagename": "0033f61c541dbe022aa163d2689519e4.png", "infoid": 1003993, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u521d\u7ea7\u7cfb\u7edf\u7ba1\u7406\u5458(\u6216\u5fc3\u70e6\u610f\u4e71\u7684\u4eba)\u6765\u8bf4\uff0c\ud83d\ude06\ud83d\ude23", "note_en": "For the junior sysadmins (or the distracted ones) \ud83d\ude06\ud83d\ude23", "posttime": "2020-05-28 05:59:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7cfb\u7edf\u7ba1\u7406\u5458,memes,\u5fc3\u70e6\u610f\u4e71", "title": "\u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u8ff7\u56e0", "title_en": "Memes for Sysadmins", "transed": 1, "url": "https://sysadminmemes.com/", "via": "", "real_tags": ["\u7cfb\u7edf\u7ba1\u7406\u5458", "memes", "\u5fc3\u70e6\u610f\u4e71"]}, {"category": "", "categoryclass": "", "imagename": "59f5d937570b5b372ac725cea83cafe2.jpg", "infoid": 1003992, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u548cOneWeb\u5df2\u7ecf\u8bf7\u6c42\u7f8e\u56fd\u5141\u8bb8\u5411\u8fd1\u5730\u8f68\u9053\u53d1\u5c04\u6570\u4e07\u9897\u989d\u5916\u7684\u536b\u661f\u3002\n\u9664\u4e86\u5df2\u7ecf\u83b7\u5f97\u8bb8\u53ef\u7684\u8fd112000\u9897\u536b\u661f\u4e4b\u5916\uff0cSpaceX\u8fd8\u7533\u8bf7\u53d1\u5c043\u4e07\u9897\u536b\u661f\uff0c\u8fd9\u4e0eSpaceX\u4e4b\u524d\u5ba3\u5e03\u7684Starlink\u8ba1\u5212\u662f\u4e00\u81f4\u7684\u3002\nOneWeb\u7533\u8bf7\u53d1\u5c04\u8fd14.8\u4e07\u9897\u536b\u661f\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u8fd9\u5bb6\u536b\u661f\u5bbd\u5e26\u516c\u53f8\u57283\u6708\u4efd\u7533\u8bf7\u7834\u4ea7\u3002\u5728\u76ee\u524d\u7684\u7ed3\u6784\u4e0b\uff0cOneWeb\u4e0d\u592a\u53ef\u80fd\u53d1\u5c04\u5f88\u5927\u6bd4\u4f8b\u7684\u536b\u661f\uff0c\u56e0\u4e3a\u636e\u62a5\u9053\uff0c\u8be5\u516c\u53f8\u5728\u7533\u8bf7\u7834\u4ea7\u65f6\u88c1\u51cf\u4e86\u5927\u90e8\u5206\u5458\u5de5\uff0c\u5e76\u8868\u793a\u6253\u7b97\u5229\u7528\u7834\u4ea7\u7a0b\u5e8f\u51fa\u552e\u4e1a\u52a1\uff0c\u4ee5\u5b9e\u73b0\u516c\u53f8\u4ef7\u503c\u7684\u6700\u5927\u5316\u3002\u83b7\u5f97\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u7684\u6279\u51c6\uff0c\u53d1\u5c04\u66f4\u591a\u536b\u661f\u53ef\u80fd\u4f1a\u63d0\u9ad8OneWeb\u7684\u8d44\u4ea7\u4ef7\u503c\uff0c\u5e76\u4e3a\u6536\u8d2d\u8be5\u516c\u53f8\u7684\u4eba\u63d0\u4f9b\u66f4\u591a\u9009\u62e9\u3002\nOneWeb\u5728\u5176FCC\u7533\u8bf7\u4e2d\u8868\u793a\uff0cOneWeb\u5df2\u7ecf\u83b7\u5f97\u503a\u52a1\u4eba\u5360\u6709\u878d\u8d44\uff0c\u9884\u8ba1\u5f88\u5feb\u5c31\u4f1a\u9000\u51fa\u7834\u4ea7\u6cd5\u7b2c11\u7ae0\u7684\u7a0b\u5e8f\uff0c\u4f7fOneWeb\u7684\u6218\u7565\u8d44\u4ea7\u4ef7\u503c\u6700\u5927\u5316\uff0c\u5e76\u786e\u4fdd\u5176\u5229\u76ca\u76f8\u5173\u8005\u548c\u5ba2\u6237\u6709\u4e00\u6761\u53ef\u884c\u7684\u524d\u8fdb\u9053\u8def\u3002\n\u7531\u4e8eFCC\u7684\u6700\u540e\u671f\u9650\uff0cSpaceX\u548cOneWeb\u7684\u7533\u8bf7\u662f\u6628\u5929\u63d0\u4ea4\u7684\u3002\u5176\u4ed6\u4f9b\u5e94\u5546\uff0c\u5982Telesat(1671\u9897\u536b\u661f)\u3001\u5f00\u666e\u52d2(360\u9897\u536b\u661f)\u548cViasat(288\u9897\u536b\u661f)\u63d0\u4ea4\u4e86\u8f83\u5c0f\u7684\u4f4e\u5730\u7403\u8f68\u9053\u661f\u5ea7\u7533\u8bf7\u3002Mangata Networks\u63d0\u4ea4\u4e86791\u9897\u4e2d\u5730\u7403\u8f68\u9053\u536b\u661f\u7684\u7533\u8bf7\u3002\n\u91cd\u8981\u7684\u662f\u8981\u660e\u767d\uff0cOneWeb\u7533\u8bf7\u8fd9\u4e48\u591a\u536b\u661f\u7684\u539f\u56e0\u662f\uff0c\u8fd9\u5c06\u4f7f\u5176\u4ed6\u52aa\u529b\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u7279\u522b\u662f(\u5bf9\u4e9a\u9a6c\u900a\u7684\u5b50\u516c\u53f8)Kuiper\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u63d0\u9ad8OneWeb\u7684\u7b2c\u4e00\u4ee3\u8bb8\u53ef\u8bc1\u7684\u4ef7\u503c\u3002\u536b\u661f\u884c\u4e1a\u987e\u95ee\u8482\u59c6\u00b7\u6cd5\u52d2(Tim Farrar)\u5728Twitter\u4e0a\u5199\u9053\uff0c\u8fd9\u4e0eSpaceX\u63d0\u51fa\u768430K\u536b\u661f\u63d0\u6848\u7684\u7406\u7531\u7c7b\u4f3c\u3002\nFCC\u89c4\u5b9a\uff0c\u9664\u975e\u83b7\u5f97\u8c41\u514d\uff0c\u5426\u5219\u536b\u661f\u8bb8\u53ef\u8bc1\u6301\u6709\u4eba\u53ef\u4ee5\u57286\u5e74\u5185\u53d1\u5c0450%\u7684\u8bb8\u53ef\u536b\u661f\uff0c\u5e76\u57289\u5e74\u5185\u53d1\u5c04\u6240\u6709\u536b\u661f\u3002\nOneWeb\u5df2\u7ecf\u83b7\u5f97\u4e86\u53d1\u5c04720\u9897\u536b\u661f\u7684\u8bb8\u53ef\uff0c\u5176\u7533\u8bf7\u5bfb\u6c42\u753147,844\u9897\u536b\u661f\u7ec4\u6210\u7684\u7b2c\u4e8c\u9636\u6bb5\u7684\u6388\u6743\u3002OneWeb\u6ca1\u6709\u8981\u6c42\u6539\u53d8\u51761200\u516c\u91cc\u7684\u8f68\u9053\u9ad8\u5ea6\u3002\u8be5\u516c\u53f8\u5728\u672c\u6587\u4ef6\u4e2d\u5411FCC\u63d0\u4f9b\u4e86\u6709\u5173\u5176\u8ba1\u5212\u7684\u66f4\u591a\u6280\u672f\u7ec6\u8282\u3002\nOneWeb\u5199\u9053\uff0c\u7531\u4e8e\u8054\u5408\u8f68\u9053\u7684\u4f7f\u7528\uff0cOneWeb\u536b\u661f\u57fa\u672c\u4e0a\u8986\u76d6\u4e86\u5730\u7403\u8868\u9762\u7684\u6240\u6709\u90e8\u5206\uff0c\u56e0\u6b64\uff0c\u539f\u5219\u4e0a\u8bb2\uff0c\u5b83\u4eec\u6709\u80fd\u529b\u4e3a\u5730\u7403\u4e0a\u6240\u6709\u4f4d\u7f6e\u63d0\u4f9b\u670d\u52a1\u3002\u5730\u7403\u8868\u9762\u7684\u6bcf\u4e00\u70b9\u90fd\u4f1a\u770b\u5230\u9ad8\u5ea6\u4e0d\u4f4e\u4e8e55\u00ba\u7684OneWeb\u536b\u661f\uff0c\u6700\u5c0f\u4ef0\u89d2\u968f\u7eac\u5ea6\u589e\u52a0\u3002\u4f8b\u5982\uff0c\u963f\u62c9\u65af\u52a0\u7684\u7528\u6237\u603b\u4f1a\u4f53\u9a8c\u5230\u660e\u663e\u9ad8\u4e8e55\u00ba\u7684\u4ef0\u89d2\u3002\n\u4e0e\u8f68\u9053\u7ea635000\u516c\u91cc\u7684\u5730\u7403\u9759\u6b62\u536b\u661f\u76f8\u6bd4\uff0c\u4f4e\u5730\u7403\u8f68\u9053\u536b\u661f\u9884\u8ba1\u5c06\u63d0\u4f9b\u66f4\u4f4e\u7684\u5ef6\u8fdf\u548c\u66f4\u5feb\u7684\u901f\u5ea6\u3002OneWeb\u8868\u793a\uff0c\u5b83\u7684\u7528\u6237\u5f80\u8fd4\u5ef6\u8fdf\u5c06\u4e0d\u523050\u6beb\u79d2\uff0c\u5927\u7ea6\u662fGSO(\u5730\u7403\u9759\u6b62\u8f68\u9053)\u536b\u661f\u5ef6\u8fdf\u76841/13\uff0c\u4e0e\u5730\u9762\u7f51\u7edc\u76f8\u5f53\u3002OneWeb\u8fd8\u8868\u793a\uff0c\u5176\u6280\u672f\u53ef\u4ee5\u63d0\u4f9b32ms\u7684\u5e73\u5747\u5ef6\u8fdf\u3002\nSpaceX\u516c\u5f00\u9884\u6d4b\u5176\u670d\u52a1\u7684\u5ef6\u8fdf\u4f4e\u4e8e20ms\uff0c\u4f46\u8be5\u516c\u53f8\u5728\u5411FCC\u7533\u8bf7\u65f6\u4e5f\u4f7f\u7528\u4e86\u4f4e\u4e8e50ms\u7684\u6570\u5b57\uff0c\u5e76\u8868\u793a\u6d88\u8d39\u8005\u51e0\u4e4e\u4e0d\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u5ef6\u8fdf\u6c34\u5e73\u3002FCC\u6d4b\u91cf\u5230\u5eb7\u5361\u65af\u7279\u5728\u9ad8\u5cf0\u65f6\u6bb5\u7684\u5ef6\u8fdf\u4e2d\u503c\u7565\u9ad8\u4e8e20ms\uff0c\u800cVerizon FiOS\u7684\u4e2d\u503c\u5ef6\u8fdf\u7565\u9ad8\u4e8e10ms\u3002\nSpaceX\u63d0\u4ea4\u7ed9\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u7684\u6587\u4ef6\u79f0\uff0c\u5176\u62df\u8bae\u76843\u4e07\u9897\u536b\u661f\u5c06\u7528\u4e8e\u7b2c\u4e8c\u4ee3\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5efa\u7acb\u5728\u8be5\u516c\u53f8\u76ee\u524d\u90e8\u7f72\u7684\u7b2c\u4e00\u4ee3\u7cfb\u7edf\u4e4b\u4e0a\u3002\u5728\u62df\u8bae\u768430,000\u9897\u536b\u661f\u4e2d\uff0c\u8d85\u8fc785%\u7684\u536b\u661f\u5c06\u5728400\u516c\u91cc\u4ee5\u4e0b\u7684\u6781\u4f4e\u9ad8\u5ea6\u8fd0\u884c\uff0c\u4f7f\u75288\u9897\u603b\u8f68\u9053\u9ad8\u5ea6\u4ece328\u516c\u91cc\u5230614\u516c\u91cc\u4e0d\u7b49\u7684\u536b\u661f\u3002\n\u5c31\u50cf\u65b0\u7684\u589e\u5bc6\u578b5G\u7f51\u7edc\u7684\u5927\u89c4\u6a21\u90e8\u7f72\u6b63\u5728\u5e2e\u52a9\u90a3\u4e9b\u5904\u4e8e\u66f4\u591a\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u4eba\u4e00\u6837\uff0cSpaceX\u63d0\u51fa\u7684\u589e\u5bc6\u578b\u536b\u661f\u661f\u5ea7\u5c06\u5927\u5e45\u589e\u52a0\u5bb9\u91cf\uff0c\u5e76\u63a8\u52a8\u5373\u4f7f\u5728\u519c\u6751\u548c\u504f\u8fdc\u5730\u533a\u4e5f\u80fd\u63a5\u5165\u771f\u6b63\u5f3a\u5927\u5bbd\u5e26\u7684\u6d88\u8d39\u8005\u6570\u91cf\u3002\u867d\u7136SpaceX\u7684\u4e0b\u4e00\u4ee3\u661f\u5ea7\u5c06\u53ea\u4f7f\u7528\u5730\u9762\u6280\u672f\u90e8\u7f72\u7684\u5929\u7ebf\u6570\u91cf\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f46\u5176\u9891\u8c31\u6548\u7387\u9ad8\u7684\u8bbe\u8ba1\u548c\u5bc6\u96c6\u7684\u9891\u8c31\u91cd\u7528\u5c06\u4f7f\u5176\u80fd\u591f\u4e3a\u519c\u6751\u5730\u533a\u5e26\u6765\u4ee5\u524d\u4ec5\u4e3a\u57ce\u5e02\u5ba2\u6237\u4fdd\u7559\u7684\u670d\u52a1\u7c7b\u578b\u548c\u4ef7\u683c\u3002\n\u901a\u8fc7\u5728\u4f4e\u6d77\u62d4\u548c\u6781\u4f4e\u6d77\u62d4\u8fd0\u884c\uff0cSpaceX Gen2\u7cfb\u7edf\u5c06\u5b9e\u73b0\u66f4\u5c0f\u7684\u5149\u6591\u6ce2\u675f\u548c\u66f4\u5927\u7684\u536b\u661f\u5206\u96c6\uff0c\u5b9e\u73b0\u63d0\u9ad8\u4e16\u754c\u4efb\u4f55\u5730\u65b9\u53ef\u7528\u5bb9\u91cf\u6240\u9700\u7684\u5bc6\u96c6\u9891\u7387\u91cd\u7528\u3002SpaceX\u7684\u4e0b\u4e00\u4ee3\u7cfb\u7edf\u4fdd\u8bc1\u4e86\u4f4d\u4e8e\u5730\u9762\u4efb\u4f55\u5730\u70b9\u7684\u6bcf\u4e2a\u5ba2\u6237\u90fd\u80fd\u770b\u5230\u591a\u9897\u536b\u661f\uff0c\u4ece\u800c\u5177\u5907\u4e86\u4e0e\u5176\u4ed6\u9891\u8c31\u7528\u6237\u534f\u8c03\u6240\u9700\u7684\u7075\u6d3b\u6027\uff0c\u540c\u65f6\u4ecd\u80fd\u63d0\u4f9b\u5f3a\u5927\u7684\u670d\u52a1\uff0c\u5373\u4f7f\u5728\u62e5\u6324\u7684\u9891\u8c31\u73af\u5883\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\n\u5728\u7533\u8bf7\u7834\u4ea7\u4e4b\u524d\uff0cOneWeb\u5df2\u7ecf\u53d1\u5c04\u4e8674\u9897\u536b\u661f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cSpaceX\u5df2\u7ecf\u53d1\u5c04\u4e86\u5927\u7ea6420\u9897\u536b\u661f\uff0c\u76ee\u6807\u662f\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u63d0\u4f9b\u670d\u52a1\uff0c\u521a\u521a\u4e0e\u7f8e\u56fd\u9646\u519b\u7b7e\u7f72\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u6d4b\u8bd5Starlink\u7528\u4e8e\u519b\u4e8b\u7528\u9014\u3002", "note_en": "SpaceX and OneWeb have asked for US permission to launch tens of thousands of additional satellites into low Earth orbit.\n SpaceX&#39;s application to launch 30,000 satellites\u2014in addition to the nearly 12,000 it already has permission for\u2014is consistent with  SpaceX&#39;s previously announced plans for Starlink.\n OneWeb&#39;s  application to launch nearly 48,000 satellites is surprising because the satellite-broadband company  filed for bankruptcy in March. OneWeb is highly unlikely to launch a significant percentage of these satellites under its current structure, as the company  reportedly &#34;axed most of its staff&#34; when it filed for bankruptcy and says it intends to use bankruptcy proceedings &#34;to pursue a sale of its business in order to maximize the value of the company.&#34; Getting FCC approval to launch more satellites could improve the value of OneWeb&#39;s assets and give more options to whoever buys the company.\n &#34;OneWeb has already secured debtor-in-possession financing and expects to soon exit the Chapter 11 process in a manner that maximizes the value of OneWeb&#39;s strategic assets and also ensures a viable path forward for its stakeholders and customers,&#34; the company said in its FCC application.\n The SpaceX and OneWeb applications were filed yesterday because of an  FCC deadline. Other providers such as Telesat ( 1,671 satellites), Kepler ( 360 satellites), and Viasat ( 288 satellites) filed applications for smaller low-Earth-orbit constellations. Mangata Networks filed an  application for 791 satellites in medium-Earth orbits.\n &#34;It&#39;s important to understand that the reason OneWeb filed for so many satellites is that it will make others&#39; efforts more difficult, especially [for  Amazon subsidiary] Kuiper, and thereby potentially enhance the value of OneWeb&#39;s first gen license. Similar rationale to SpaceX&#39;s 30K satellite proposal,&#34; satellite-industry consultant Tim Farrar  wrote on Twitter.\n FCC rules give satellite licensees six years to launch 50 percent of licensed satellites and nine years to launch all of them, unless a waiver is granted.\n  OneWeb already had permission to launch 720 satellites, and its application seeks authorization of a second phase consisting of 47,844 satellites. OneWeb did not ask for a change in its orbital altitude of 1,200km. The company provided the FCC with more technical details on its plan in  this document.\n &#34;Because of the use of combined orbits, the OneWeb satellites essentially pass over all parts of the Earth&#39;s surface and therefore, in principle, have the ability to provide service to all Earth locations,&#34; OneWeb wrote. &#34;Every point on the Earth&#39;s surface will see, at all times, a OneWeb satellite at an elevation no less than 55\u00ba, with increasing minimum elevation angles with latitude. For instance, users in Alaska will always experience elevation angles significantly higher than 55\u00ba.&#34;\n Low-Earth-orbit satellites are expected to provide much lower latency and faster speeds than geostationary satellites that orbit at about 35,000km. OneWeb said its users &#34;will experience round-trip latency of less than 50 milliseconds, which is approximately 1/13th of the latency of GSO [geo-stationary orbit] satellites, and comparable to terrestrial networks.&#34; OneWeb has also  said its technology can provide average latency of 32ms.\n SpaceX has publicly  predicted sub-20ms latency for its service, but the company also used a sub-50ms figure in its application to the FCC and said this level of latency &#34;is nearly unnoticeable to consumers.&#34; The FCC has  measured Comcast&#39;s median latency at just over 20ms during peak usage hours and Verizon FiOS at just over 10ms.\n SpaceX&#39;s FCC filing says its proposed 30,000 satellites would be for a &#34;Gen2 System&#34; that builds on the first-generation system the company is currently deploying. More than 85 percent of the proposed 30,000 satellites would &#34;operate at very low altitudes below 400km, using eight total orbital altitudes ranging from 328km to 614km.&#34;\n  Just as large deployments of new densified 5G networks are helping those in more urban environments, the densified satellite constellation SpaceX proposes will substantially increase capacity and drive up the number of consumers even in rural and remote areas with access to truly robust broadband. While SpaceX&#39;s next-generation constellation will use only a small fraction of the number of antennas being deployed for terrestrial technologies, its spectrally efficient designs and intensive spectral reuse will allow it to bring to rural areas the type of services and prices previously reserved only for urban customers.\n By operating at low and very low altitudes, the SpaceX Gen2 System will enable smaller spot beams and greater satellite diversity, achieving the intensive frequency reuse needed to heighten capacity available anywhere in the world. And by guaranteeing multiple satellites in view for every customer located at any point on the ground, SpaceX&#39;s next-generation system incorporates the flexibility necessary to coordinate with other spectrum users while still delivering robust service, even in a crowded spectrum setting.\n OneWeb had launched 74 satellites before filing for bankruptcy. SpaceX has launched about  420 satellites\u00a0so far, is aiming to provide service later this year, and just  signed a deal with the US Army to test Starlink for military use.", "posttime": "2020-05-28 05:59:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7533\u8bf7,oneweb,\u536b\u661f", "title": "\u7834\u4ea7\u7684OneWeb\u4e3a48,000\u9897\u536b\u661f\u7533\u8bf7\u724c\u7167", "title_en": "Bankrupt OneWeb seeks license for 48,000 satellites", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/05/spacex-and-oneweb-seek-licenses-to-launch-78000-broadband-satellites/", "via": "", "real_tags": ["\u7533\u8bf7", "oneweb", "\u536b\u661f"]}, {"category": "", "categoryclass": "", "imagename": "aaba03073006f7d91342f5066d42f863.jpg", "infoid": 1003991, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b66\u8005\u4eec\u8bf4\uff0c\u4ed6\u4eec\u5728Linux\u3001MacOS\u3001Windows\u548cFreeBSD\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u7684USB\u9a71\u52a8\u7a0b\u5e8f\u5806\u6808\u4e2d\u53d1\u73b0\u4e8626\u4e2a\u65b0\u6f0f\u6d1e\u3002\n\u7531\u666e\u6e21\u5927\u5b66(Purdue University)\u7684\u60e0\u9e4f(\u97f3\u8bd1)\u548c\u745e\u58eb\u6d1b\u6851\u8054\u90a6\u7406\u5de5\u5b66\u9662\u7684\u9a6c\u8482\u4e9a\u65af\u00b7\u4f69\u8036(Mathias Payer)\u7ec4\u6210\u7684\u7814\u7a76\u56e2\u961f\u8868\u793a\uff0c\u6240\u6709\u7684\u6f0f\u6d1e\u90fd\u662f\u901a\u8fc7\u4ed6\u4eec\u521b\u5efa\u7684\u4e00\u79cd\u540d\u4e3aUSBFuzz\u7684\u65b0\u5de5\u5177\u53d1\u73b0\u7684\u3002\n\u8fd9\u4e2a\u5de5\u5177\u5c31\u662f\u5b89\u5168\u4e13\u5bb6\u6240\u8bf4\u7684\u7ed2\u6bdb\u5668\u3002\u6a21\u7cca\u5668\u662f\u5141\u8bb8\u5b89\u5168\u7814\u7a76\u4eba\u5458\u5c06\u5927\u91cf\u65e0\u6548\u3001\u610f\u5916\u6216\u968f\u673a\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u5230\u5176\u4ed6\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7136\u540e\uff0c\u5b89\u5168\u7814\u7a76\u4eba\u5458\u5206\u6790\u6d4b\u8bd5\u7684\u8f6f\u4ef6\u5982\u4f55\u53d1\u73b0\u65b0\u7684\u6f0f\u6d1e\uff0c\u5176\u4e2d\u4e00\u4e9b\u6f0f\u6d1e\u53ef\u80fd\u4f1a\u88ab\u6076\u610f\u5229\u7528\u3002\n\u4e3a\u4e86\u6d4b\u8bd5USB\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5f6d\u548c\u4f69\u8036\u5f00\u53d1\u4e86USBFuzz\uff0c\u8fd9\u662f\u4e00\u79cd\u4e13\u95e8\u4e3a\u6d4b\u8bd5\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684USB\u9a71\u52a8\u7a0b\u5e8f\u6808\u800c\u8bbe\u8ba1\u7684\u65b0\u7684Fuzz\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0cUSBFuzz\u7684\u6838\u5fc3\u662f\u4f7f\u7528\u8f6f\u4ef6\u6a21\u62df\u7684USB\u8bbe\u5907\u5411\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u968f\u673a\u8bbe\u5907\u6570\u636e(\u5f53\u4ed6\u4eec\u6267\u884cIO\u64cd\u4f5c\u65f6)\u3002\n\u7531\u4e8e\u6a21\u62df\u7684USB\u8bbe\u5907\u5728\u8bbe\u5907\u7ea7\u522b\u5de5\u4f5c\uff0c\u56e0\u6b64\u5c06\u5176\u79fb\u690d\u5230\u5176\u4ed6\u5e73\u53f0\u975e\u5e38\u7b80\u5355\u3002&#34\uff1b\n\u8fd9\u4f7f\u5f97\u7814\u7a76\u5c0f\u7ec4\u4e0d\u4ec5\u53ef\u4ee5\u5728\u5927\u591a\u6570Fuzzer\u7a0b\u5e8f\u5de5\u4f5c\u7684Linux\u4e0a\u6d4b\u8bd5USBFuzz\uff0c\u8fd8\u53ef\u4ee5\u5728\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6d4b\u8bd5USBFuzz\u3002\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u5bf9USBFuzz\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff1a\n9 Linux\u5185\u6838\u7684\u6700\u65b0\u7248\u672c\uff1av4.14.81\u3001v4.15\u3001v4.16\u3001v4.17\u3001v4.18.19\u3001v4.19\u3001v4.19.1\u3001v4.19.2\u548cv4.20-rc2(\u8bc4\u4f30\u65f6\u7684\u6700\u65b0\u7248\u672c)\u3002\n\u5728\u4ed6\u4eec\u7684\u6d4b\u8bd5\u4e4b\u540e\uff0c\u7814\u7a76\u5c0f\u7ec4\u8bf4\uff0c\u5728USBFuzz\u7684\u5e2e\u52a9\u4e0b\uff0c\u4ed6\u4eec\u603b\u5171\u53d1\u73b0\u4e8626\u4e2a\u65b0\u7684\u6f0f\u6d1e\u3002\n\u7814\u7a76\u4eba\u5458\u5728FreeBSD\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5728MacOS\u4e2d\u53d1\u73b0\u4e86\u4e09\u4e2a\u6f0f\u6d1e(\u4e24\u4e2a\u5bfc\u81f4\u8ba1\u5212\u5916\u91cd\u542f\uff0c\u4e00\u4e2a\u7cfb\u7edf\u51bb\u7ed3)\uff0c\u5728Windows 8\u548cWindows 10\u4e2d\u53d1\u73b0\u4e86\u56db\u4e2a\u6f0f\u6d1e(\u5bfc\u81f4\u84dd\u5c4f\u6b7b\u4ea1)\u3002\n\u7136\u800c\uff0c\u7edd\u5927\u591a\u6570\u4e14\u6700\u4e25\u91cd\u7684\u9519\u8bef\u90fd\u662f\u5728Linux\u4e2d\u53d1\u73b0\u7684--\u603b\u517118\u4e2a\u3002\n16\u4e2a\u662f\u5404\u79cdLinux\u5b50\u7cfb\u7edf(USB\u6838\u5fc3\u3001USB\u58f0\u97f3\u548c\u7f51\u7edc)\u4e2d\u5177\u6709\u9ad8\u5b89\u5168\u6027\u5f71\u54cd\u7684\u5185\u5b58\u9519\u8bef\uff0c\u4e00\u4e2a\u9519\u8bef\u9a7b\u7559\u5728Linux USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u9a7b\u7559\u5728USB\u76f8\u673a\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u3002\n\u5f6d\u548c\u4f69\u8036\u8bf4\uff0c\u4ed6\u4eec\u5411Linux\u5185\u6838\u56e2\u961f\u62a5\u544a\u4e86\u8fd9\u4e9b\u9519\u8bef\uff0c\u5e76\u63d0\u51fa\u4e86\u4fee\u8865\u6f0f\u6d1e\u7684\u8865\u4e01\uff0c\u4ee5\u51cf\u8f7b\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5728\u4fee\u590d\u62a5\u544a\u7684\u6f0f\u6d1e\u65f6\u7684\u8d1f\u62c5\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8868\u793a\uff0c\u572818\u4e2aLinux\u6f0f\u6d1e\u4e2d\uff0c\u670911\u4e2a\u81ea\u53bb\u5e74\u9996\u6b21\u62a5\u544a\u4ee5\u6765\u6536\u5230\u4e86\u8865\u4e01\u3002\u8fd911\u4e2a\u6f0f\u6d1e\u4e2d\u670910\u4e2a\u8fd8\u6536\u5230\u4e86CVE\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u914d\u7ed9\u4e3b\u8981\u5b89\u5168\u6f0f\u6d1e\u7684\u72ec\u7279\u4ee3\u7801\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5269\u4e0b\u7684\u6f0f\u6d1e\u5206\u4e3a\u4e24\u7c7b\uff1a\u4ecd\u5728\u7981\u8fd0\u6216\u6b63\u5728\u62ab\u9732\u7684\u6f0f\u6d1e\uff0c\u4ee5\u53ca\u90a3\u4e9b\u540c\u65f6\u88ab\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u548c\u62a5\u544a\u7684\u6f0f\u6d1e\u3002\nPayer\u6628\u5929\u516c\u5e03\u4e86\u7814\u7a76\u56e2\u961f\u7684\u767d\u76ae\u4e66\u8349\u7a3f\uff0c\u63cf\u8ff0\u4e86\u4ed6\u4eec\u5728USBFuzz\u4e0a\u7684\u5de5\u4f5c\u3002\u5f6d\u548c\u4f69\u8036\u8ba1\u5212\u5728\u5b9a\u4e8e2020\u5e748\u6708\u4e3e\u884c\u7684Usenix\u5b89\u5168\u7814\u8ba8\u4f1a\u865a\u62df\u5b89\u5168\u4f1a\u8bae\u4e0a\u5c55\u793a\u4ed6\u4eec\u7684\u7814\u7a76\u6210\u679c\u3002\n\u8fc7\u53bb\u4e5f\u8fdb\u884c\u8fc7\u7c7b\u4f3c\u7684\u5de5\u4f5c\u30022017\u5e7411\u6708\uff0c\u4e00\u540d\u8c37\u6b4c\u5b89\u5168\u5de5\u7a0b\u5e08\u4f7f\u7528\u8c37\u6b4c\u5236\u9020\u7684\u540d\u4e3asyzkaller\u7684Fuzzer\u53d1\u73b0\u4e8679\u4e2a\u5f71\u54cdLinux\u5185\u6838USB\u9a71\u52a8\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u3002\nPeng\u548cPayer\u8868\u793a\uff0cUSBFuzz\u4f18\u4e8e\u4e4b\u524d\u7684\u5de5\u5177\uff0c\u5982vUSBf\u3001syzkaller\u548cusb-fuzzer\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5de5\u5177\u4e3a\u6d4b\u8bd5\u4eba\u5458\u63d0\u4f9b\u4e86\u5bf9\u6d4b\u8bd5\u6570\u636e\u7684\u66f4\u591a\u63a7\u5236\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u8de8\u64cd\u4f5c\u7cfb\u7edf\u79fb\u690d\uff0c\u800c\u4e0d\u50cf\u4e0a\u9762\u6240\u6709\u7684\u5de5\u5177\u901a\u5e38\u53ea\u80fd\u5728*Nix\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u3002\nUSBFuzz\u8ba1\u5212\u5728Peng\u548cPayer\u7684Usenix Talk\u4e4b\u540e\u4f5c\u4e3a\u5f00\u6e90\u9879\u76ee\u5728GitHub\u4e0a\u53d1\u5e03\u3002\u56de\u8d2d\u5c06\u5728\u8fd9\u91cc\u63d0\u4f9b\u3002\nPeng\u548cPayer\u7684\u8bba\u6587\u540d\u4e3a\u201cUSBFuzz\uff1aA Framework for Fuzing USB Drivers by Device Emulation\u201d(USBFuzz\uff1aA Framework for Fuzing USB Drivers by Device Emulation)\uff0c\u8fd9\u91cc\u548c\u8fd9\u91cc\u90fd\u6709PDF\u683c\u5f0f\u7684\u6587\u7ae0\u3002", "note_en": "Academics say they discovered 26 new vulnerabilities in the USB driver stack employed by operating systems such as Linux, macOs, Windows, and FreeBSD.\n The research team, made up by Hui Peng from Purdue University and Mathias Payer from the Swiss Federal Institute of Technology Lausanne, said all the bugs were discovered with a new tool they created, named  USBFuzz.\n The tool is what security experts call a  fuzzer. Fuzzers are applications that let security researchers send large quantities of invalid, unexpected, or random data as inputs to other programs.\n Security researchers then analyze how the tested software behaves to discover new bugs, some of which may be exploited in a malicious way.\n  To test USB drivers, Peng and Payer developed USBFuzz, a new fuzzer specifically designed to test the USB driver stack of modern-day operating systems.\n   &#34;At its core, USBFuzz uses a software-emulated USB device to provide random device data to drivers (when they perform IO operations),&#34; the researchers said.\n &#34;As the emulated USB device works at the device level, porting it to other platforms is straight-forward.&#34;\n   This allowed the research team to test USBFuzz not only on Linux, where most fuzzer programs work, but also other operating systems. Researchers said they tested USBFuzz on:\n 9 recent versions of the Linux kernel: v4.14.81, v4.15,v4.16, v4.17, v4.18.19, v4.19, v4.19.1, v4.19.2, and v4.20-rc2 (the latest version at the time of evaluation)\n  Following their tests, the research team said that with the help of USBFuzz, they discovered a total of 26 new bugs.\n Researchers found one bug in FreeBSD, three in MacOS (two resulting in an unplanned reboot and one freezing the system), and four in Windows 8 and Windows 10 (resulting in Blue Screens of Death).\n However, the vast majority of bugs, and the most severe, were found in Linux -- 18 in total.\n Sixteen were memory bugs of high-security impact in various Linux subsystems (USB core, USB sound, and net-work), one bug resided in the Linux USB host controller driver, and the last in a USB camera driver.\n Peng and Payer said they reported these bugs to the Linux kernel team, along with proposed patches to reduce &#34;the burden on the kernel developers when fixing the reported vulnerabilities.&#34;\n Of the 18 Linux bugs, the research team said 11 received a patch since their initial reports last year. Ten of these 11 bugs also received a CVE, a unique code that&#39;s assigned to major security flaws.\n   &#34;The remaining bugs fall into two classes: those still under embargo/being disclosed and those that were concurrently found and reported by other researchers,&#34; researchers said.\n  Payer published yesterday a draft of the research team&#39;s white paper describing their work on USBFuzz. Peng and Payer plan to present their research at the Usenix Security Symposium virtual security conference, scheduled for August 2020.\n Similar work has been carried out in the past. A Google security engineer used a Google-made fuzzer named syzkaller to discover  79 bugs impacting Linux kernel USB drivers in November 2017.\n Peng and Payer said that USBFuzz is superior to previous tools like vUSBf, syzkaller, and usb-fuzzer because their tool grants testers more control over the test data and is also portable across operating systems, unlike all the above, which usually work only on *NIX systems.\n USBFuzz is scheduled to be released on GitHub as an open source project following Peng and Payer&#39;s Usenix talk. The repo will be available  here.\n Copies of Peng and Payer&#39;s paper, titled &#34; USBFuzz: A Framework for Fuzzing USB Drivers by Device Emulation,&#34; are available in PDF format  here and  here.", "posttime": "2020-05-28 05:44:09", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "windows,linux,tool,\u6f0f\u6d1e", "title": "\u65b0\u7684\u6a21\u7cca\u5de5\u5177\u5728Linux\u3001Windows\u3001MacOS\u548cFreeBSD\u4e2d\u53d1\u73b026\u4e2aUSB\u9519\u8bef", "title_en": "New Fuzzing Tool Finds 26 USB Bugs in Linux, Windows, macOS, and FreeBSD", "transed": 1, "url": "https://www.zdnet.com/article/new-fuzzing-tool-finds-26-usb-bugs-in-linux-windows-macos-and-freebsd/", "via": "", "real_tags": ["windows", "linux", "tool", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "f1754e98ed8bcff3effa8f206460c3fc.jpg", "infoid": 1003989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5404\u5730\u81f3\u5c11\u670911\u5bb6\u5730\u65b9\u7535\u89c6\u53f0\u4f3c\u4e4e\u64ad\u653e\u4e86\u4e0e\u4e9a\u9a6c\u900a\u7f16\u5199\u7684\u76f8\u540c\u7684\u65b0\u95fb\u5957\u9910\uff0c\u5728\u4eba\u4eec\u5bf9\u516c\u53f8\u4ed3\u5e93\u5de5\u4eba\u5b89\u5168\u7684\u62c5\u5fe7\u65e5\u76ca\u52a0\u5267\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u5ba3\u4f20\u4e86\u8be5\u516c\u53f8\u4e3a\u4fdd\u6301\u53f8\u673a\u548c\u5ba2\u6237\u5065\u5eb7\u6240\u505a\u7684\u52aa\u529b\uff0c\u4e9a\u9a6c\u900a\u62d2\u7edd\u900f\u9732\u6709\u591a\u5c11\u5458\u5de5\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\n\u5468\u4e8c\uff0c\u5de6\u503e\u65b0\u95fb\u673a\u6784Courier Newsroom\u4ee5\u89c6\u9891\u8499\u592a\u5947\u7684\u5f62\u5f0f\u53d1\u5e03\u4e86\u8fd9\u4e2a\u7535\u89c6\u8282\u76ee\u5305\uff0c\u5176\u4e2d\u663e\u793a\u5f53\u5730\u65b0\u95fb\u4e3b\u64ad\u5927\u58f0\u6717\u8bfb\u6765\u81ea\u4e9a\u9a6c\u900a\u7684\u811a\u672c\u7247\u6bb5\uff0c\u515c\u552e\u8be5\u516c\u53f8\u7684\u5b89\u5168\u534f\u8bae\u3002\n\u4e9a\u9a6c\u900a\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u4e3a\u516c\u53f8\u901a\u8fc7\u65b0\u95fb\u7ebf\u53d1\u9001\u89c6\u9891\u65b0\u95fb\u7a3f\u8fdb\u884c\u4e86\u8fa9\u62a4-\u901a\u8baf\u7ebf\u5305\u542b\u4e00\u4e2a\u811a\u672c\u548c\u89c6\u9891-\u544a\u8bc9\u798f\u5e03\u65af\uff0c\u8fd9\u4e0d\u662f\u5ba3\u4f20\u89c6\u9891\uff0c\u8fd9\u662f\u516c\u53f8\u7684\u5e38\u89c1\u505a\u6cd5\u3002\n\u8fd9\u4efd\u65b0\u95fb\u7a3f\u53d1\u5e03\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u7684\u80a1\u4e1c\u8ba1\u5212\u5728\u5468\u4e09\u4e3e\u884c\u5e74\u4f1a\u65f6\u5411\u8be5\u516c\u53f8\u65bd\u538b\uff0c\u8981\u6c42\u5176\u91c7\u53d6\u5b89\u5168\u63aa\u65bd\u3002\u622a\u81f3\u5468\u4e8c\uff0c\u4e9a\u9a6c\u900a\u7684\u5e02\u503c\u8d85\u8fc71.2\u4e07\u4ebf\u7f8e\u5143\uff0c\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u6709\u4ef7\u503c\u7684\u516c\u53f8\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u4e00\u76f4\u5f00\u653e\u7684\u4ed3\u5e93\u7684\u6761\u4ef6\u53d7\u5230\u4e86\u5bc6\u5207\u5173\u6ce8\uff0c\u5de5\u4eba\u4eec\u4e3e\u884c\u6297\u8bae\u6d3b\u52a8\uff0c\u8981\u6c42\u8fdb\u4e00\u6b65\u4fdd\u62a4\u4ed6\u4eec\u514d\u53d7\u75c5\u6bd2\u7684\u4fb5\u88ad\uff0c\u540c\u65f6\u4e5f\u8981\u6c42\u516c\u53f8\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u5e26\u85aa\u75c5\u5047\u3002\n\u5173\u4e8e\u8fd9\u4e9b\u6761\u4ef6\u7684\u95ee\u9898\u5df2\u7ecf\u5f15\u8d77\u4e86\u5341\u51e0\u4e2a\u5dde\u603b\u68c0\u5bdf\u957f\u7684\u6ce8\u610f\uff0c\u4ed6\u4eec\u7ed9\u4e9a\u9a6c\u900a\u53d1\u4e86\u4e00\u5c01\u4fe1\uff0c\u8981\u6c42\u4e9a\u9a6c\u900a\u516c\u5e03\u5176\u4ed3\u5e93\u548c\u5168\u98df\u8d85\u5e02(Whole Foods)\u6709\u591a\u5c11\u5de5\u4eba\u611f\u67d3\u4e86\u51a0\u72b6\u75c5\u6bd2\uff0c\u4ee5\u53ca\u6709\u591a\u5c11\u4eba\u6b7b\u4ea1\u7684\u7edf\u8ba1\u6570\u636e\u3002\n\u5728\u53d1\u9001\u7ed9\u5f53\u5730\u4e00\u5bb6\u65b0\u95fb\u7f16\u8f91\u90e8\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u4e9a\u9a6c\u900a\u5439\u5618\u81ea\u5df1\u53d1\u9001\u7684\u89c6\u9891\u7247\u6bb5\u201c\u8ba9\u89c2\u4f17\u7b2c\u4e00\u6b21\u6df1\u5165\u4e86\u89e3\u4e86\u516c\u53f8\u7684\u5efa\u7b51\uff0c\u770b\u770b\u516c\u53f8\u662f\u5982\u4f55\u6539\u53d8\u8fd0\u8425\u65b9\u5f0f\u7684\uff0c\u4ee5\u56de\u5e94\u65b0\u51a0\u80ba\u708e\u201d\u3002\u798f\u5e03\u65af\u83b7\u5f97\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5b83\u6b63\u5728\u5411\u5458\u5de5\u63d0\u4f9b\u53e3\u7f69\u548c\u4f53\u6e29\u68c0\u6d4b\uff0c\u5e76\u8fdb\u884c\u4ee4\u4eba\u9707\u60ca\u7684\u8f6e\u73ed\uff0c\u4f46\u4ed3\u5e93\u5de5\u4f5c\u4eba\u5458\u8868\u793a\uff0c\u516c\u53f8\u505a\u5f97\u8fd8\u4e0d\u591f\u3002\u5de5\u4eba\u4eec\u8868\u793a\uff0c\u5bf9\u793e\u4f1a\u8ddd\u79bb\u7684\u6267\u884c\u529b\u5ea6\u4e0d\u591f\uff0c\u5e76\u8981\u6c42\u5173\u95ed\u548c\u6e05\u7406\u6709\u611f\u67d3\u7684\u8bbe\u65bd\u3002\n\u8be5\u516c\u53f8\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u53cd\u5e94\u5f15\u8d77\u4e86\u52b3\u5de5\u6d3b\u52a8\u4eba\u58eb\u548c\u6c11\u4e3b\u515a\u653f\u5ba2\u7684\u6124\u6012\uff0c\u4f5b\u8499\u7279\u5dde\u53c2\u8bae\u5458\u4f2f\u5c3c\u00b7\u6851\u5fb7\u65af(Bernie Sanders)\u3002\u5468\u4e8c\uff0c\u5728\u4e00\u6761\u63d0\u5230Courier Newsroom\u89c6\u9891\u7684\u63a8\u6587\u4e2d\uff0c\u5bf9\u8be5\u516c\u53f8\u8fdb\u884c\u4e86\u731b\u70c8\u62a8\u51fb\u3002\n\u64ad\u653e\u8fd9\u6bb5\u89c6\u9891\u7684\u7535\u89c6\u53f0\u7684\u7f16\u8f91\u5224\u65ad\u529b\u4e5f\u53d7\u5230\u4e86\u8d28\u7591\u3002\n\u8fd9\u6bb5\u6c47\u7f16\u89c6\u9891\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf92018\u5e74\u53d1\u5e03\u7684\u4e00\u6bb5\u7c7b\u4f3c\u8499\u592a\u5947\u89c6\u9891\u7684\u56de\u5fc6\uff0c\u5f53\u65f6\u8f9b\u514b\u83b1SBGI\u5e7f\u64ad\u7ad9\u7684190\u591a\u540d\u4e3b\u64ad\u6717\u8bfb\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u811a\u672c\uff0c\u8b66\u544a\u4eba\u4eec\u8b66\u60d5\u201c\u504f\u89c1\u548c\u5047\u65b0\u95fb\u201d\u3002\u5728\u64ad\u653e\u4e9a\u9a6c\u900a\u8282\u76ee\u7684\u7535\u89c6\u53f0\u4e2d\uff0c\u4f3c\u4e4e\u53ea\u6709\u4e00\u4e2a\u662f\u8f9b\u514b\u83b1\u7535\u89c6\u53f0\u3002", "note_en": "At least 11 local TV stations across the U.S. appear to have run identical news packages that Amazon scripted, promoting the company\u2019s efforts to keep drivers and customers healthy as concerns grow about worker safety at the company\u2019s warehouses, with Amazon refusing to say how many of its workers have died from the coronavirus.\n      The TV package, which the left-leaning news outlet Courier Newsroom published as a  video montage that widely spread on Tuesday, shows local news anchors reading aloud the scripted segment from Amazon, touting the company\u2019s safety protocols.\n  A spokesperson for Amazon defended the company sending out the video news release over a news wire\u2014which contained a script as well as video\u2014telling  Forbes it was not a promotional video and is common practice for companies.\n    The release comes as Amazon shareholders plan to press the company on its  safety measures when it holds its annual meeting Wednesday, with its market capitalization as of Tuesday sitting at over $1.2 trillion\u2014making it the most valuable company in the world.\n  Conditions at warehouses\u2014which have remained open throughout the coronavirus pandemic\u2014have come under scrutiny, with workers staging  protests demanding further protection from the virus while also asking the company to provide them with paid sick leave.\n    Questions about those conditions have drawn the attention of a group of over a dozen states\u2019 attorneys general, which sent a  letter to Amazon demanding the company release statistics on how many workers at its warehouses and Whole Foods have been infected with coronavirus, as well as how many have died.\n  In an email sent to a local newsroom and obtained by  Forbes, Amazon touts the video footage it sent as \u201cgiving viewers for the first time an inside look at its buildings to see how the company has transformed its operations in response to COVID-19.\u201d\n    Amazon has said it\u2019s providing masks and temperature checks to employees and staggering shifts, but warehouse workers say the company hasn\u2019t done enough. Workers have said there\u2019s not enough enforcement of social distancing, and have asked that facilities with infections be shut down and cleaned.\n    The company\u2019s response to coronavirus has drawn the ire of labor activists and Democratic politicians, with Sen. Bernie Sanders (I-Vt.) lashing out at the company in a tweet Tuesday referencing the Courier Newsroom video.\n    The TV stations that aired the video have also had their editorial judgment brought into question.\n            The compilation video sparked memories of a similar montage  video published in 2018, where more than 190 anchors at Sinclair    SBGI  Broadcast stations read an identical script warning against \u201cbiased and fake news.\u201d Only one of the stations that ran Amazon\u2019s segment appeared to be a Sinclair station.", "posttime": "2020-05-28 05:27:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u53d1\u5e03,\u7167\u672c\u5ba3\u79d1,scripted", "title": "\u4e9a\u9a6c\u900a\u53d1\u5e03\u4e86\u4e00\u6bb5\u7167\u672c\u5ba3\u79d1\u7684\u65b0\u95fb\u7247\u6bb5\uff0c11\u5bb6\u7535\u89c6\u53f0\u64ad\u51fa\u4e86\u8fd9\u4e00\u7247\u6bb5", "title_en": "Amazon Sent Out a Scripted News Segment, and 11 Stations Aired It", "transed": 1, "url": "https://www.forbes.com/sites/nicholasreimann/2020/05/26/amazon-sent-out-a-scripted-news-segment-and-11-stations-aired-it/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u53d1\u5e03", "\u7167\u672c\u5ba3\u79d1", "scripted"]}, {"category": "", "categoryclass": "", "imagename": "f4aa39bdbd75645727f02b2c1805e62c.png", "infoid": 1003986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Concurnas\u662f\u4e00\u79cd\u5f00\u6e90\u7684JVM\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e8\u5728\u6784\u5efa\u53ef\u9760\u3001\u53ef\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u7684\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u548c\u5e76\u884c\u7cfb\u7edf\u3002\n\u4f7f\u7528Concurnas\u4f7f\u5e76\u53d1\u548c\u5e76\u884c\u7f16\u7a0b\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4ece\u800c\u5e2e\u52a9\u7ec4\u7ec7\u5145\u5206\u5229\u7528\u73b0\u4ee3\u591a\u6838CPU\u548cGPU\u786c\u4ef6\u3002\nConcurnas\u53ef\u4e0eJava(\u548c\u5176\u4ed6JVM\u8bed\u8a00)\u4e92\u64cd\u4f5c-\u7ec4\u7ec7\u80fd\u591f\u5728\u5e76\u53d1\u73af\u5883\u4e2d\u5229\u7528\u73b0\u6709\u7684Java\u8f6f\u4ef6\u3002\n\u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\uff0c\u4f7f\u7528Concurnas\u5f00\u53d1\u4eba\u5458\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801\u884c\u66f4\u5c11\u3002\u8be5\u4ee3\u7801\u66f4\u5b89\u5168\u3001\u66f4\u6613\u4e8e\u6d4b\u8bd5\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u8d28\u91cf\u5e76\u63d0\u9ad8\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u53d7Python\u548cJava\u7b49\u8bed\u8a00\u7684\u542f\u53d1\uff0cConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u5783\u573e\u56de\u6536\u8bed\u8a00\uff0c\u5b83\u5229\u7528\u6613\u4e8e\u5b66\u4e60\u7684\u8bed\u6cd5\u8fdb\u884c\u7c7b\u578b\u63a8\u7406\u3002\nConcurnas\u662f\u4e00\u79cd\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u7f16\u8bd1\u8bed\u8a00\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95eeJVM\u63d0\u4f9b\u7684\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\u3002\nConcurnas\u4f7f\u4ece\u5c0f\u578b\u7814\u7a76\u539f\u578b\u5230\u5168\u7403\u8303\u56f4\u7684\u5206\u5e03\u5f0f\u751f\u4ea7\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u6210\u4e3a\u53ef\u80fd\u3002\nConcurnas\u662f\u4e00\u9879\u5f00\u6e90\u6280\u672f\uff0c\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u548c\u4fee\u6539\u3002\u7531Concurnas Ltd\u63d0\u4f9b\u7684\u6301\u7eed\u5f00\u53d1\u548c\u5546\u4e1a\u652f\u6301\nConcurnas@JAX\u4f26\u65662020.\u3002\u6211\u4eec\u5c06\u57282020\u4f26\u6566JAX\u5927\u4f1a\u4e0a\u8c08\u8bbaConcurnas\u3002\nConcurnas\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u6781\u5176\u5f3a\u5927\u7684\u5e76\u53d1\u6a21\u578b\uff0c\u5b83\u5141\u8bb8\u60a8\u7f16\u5199\u5e76\u53d1\u4ee3\u7801\uff0c\u800c\u4e0d\u5fc5\u7f16\u5199\u6837\u677f\u4ee3\u7801\u6765\u7ba1\u7406\u7ebf\u7a0b\u3001\u4e34\u754c\u533a\u6216\u9501\uff01\nConcurnas\u4f5c\u4e3a\u5e76\u53d1\u8ba1\u7b97\u7684\u4e13\u95e8\u5316\uff0c\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u4e3aGPU\u7f16\u7a0b\u63d0\u4f9b\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u60a8\u53ef\u4ee5\u7528\u60ef\u7528\u7684Concurnas\u4ee3\u7801\u7f16\u5199\u4ee3\u7801\u5e76\u5728GPU\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u5fc5\u5207\u6362\u5230C/C++\uff01\nConcurnas\u4e3a\u4e0e\u975e\u5806\u7ba1\u7406\u3001\u975e\u5783\u573e\u56de\u6536\u7684\u5185\u5b58\u4ea4\u4e92\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4f7f\u5f97\u4f7f\u7528GPU\u3001\u5927\u6570\u636e\u548c\u81ea\u5b9a\u4e49\u6570\u636e\u5e93\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\nConcurnas\u652f\u6301\u73b0\u4ee3\u547d\u4ee4\u5f0f\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5e38\u7528\u6784\u9020\uff0c\u4f8b\u5982\uff1aif-Elif-Else\u3001for\u3001while\u5faa\u73af\u3001\u65ad\u8a00\u3001\u5f02\u5e38\u3002\u52a0\u4e0a\u6765\u81ea\u5757\u7684\u9690\u5f0f\u8fd4\u56de\uff0c\u4ee5\u53ca\u8bed\u53e5\u3001\u5217\u8868\u7406\u89e3\u3001\u590d\u5370\u673a\u7b49\u7b49\uff01\nConcurnas\u4ece\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u53bb\u6389\u4e86\u7e41\u91cd\u7684\u5de5\u4f5c\u548c\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u8ba9\u5b83\u518d\u6b21\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u3002Concurnas\u9ad8\u7ea7\u652f\u6301\u7c7b(\u5177\u4f53\u3001\u62bd\u8c61\u3001\u7ee7\u627f)\u3001\u6cdb\u578b(\u8f93\u5165\u3001\u8f93\u51fa\u3001\u901a\u914d\u7b26\u3001\u6709\u754c)\u3001\u679a\u4e3e\u3001\u6ce8\u91ca\u3002\u4ee5\u53ca\u8bf8\u5982\u7279\u5f81\u3001\u5143\u7ec4\u3001\u5bf9\u8c61\u63d0\u4f9b\u7a0b\u5e8f\u3001\u7c7b\u578b\u5b9a\u4e49\u3001\u57fa\u4e8e\u7528\u6cd5\u7684\u6cdb\u578b\u7c7b\u578b\u63a8\u65ad\u3001\u7c7b\u5b57\u6bb5getter/setter\u7684\u81ea\u52a8\u751f\u6210/\u91cd\u5b9a\u5411\u3001\u7c7b\u6563\u5217\u4ee3\u7801\u548c\u7b49\u5f0f\u7b49\u65b0\u7279\u6027\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u8303\u4f8b\u7ed3\u5408\u4e86\u4e00\u7ec4\u975e\u5e38\u6709\u7528\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7eaf\u51fd\u6570\u5f0f\u7f16\u7a0b\u5728\u4e16\u754c\u4e0a\u5f88\u5c11\u89c1\u3002\u5728Concurnas\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5b83\u4eec\u96c6\u6210\u5230Concurnas\u4e2d\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u65b9\u6cd5\u548c\u51fd\u6570\u5f15\u7528\u3001lambdas\u3001\u90e8\u5206\u51fd\u6570\u6c42\u503c\u3001\u60f0\u6027\u6c42\u503c\u3001\u6a21\u5f0f\u5339\u914d\u7b49\u7b49\uff01\nConcurnas\u5bf9\u65b0\u5174\u7684\u53cd\u5e94\u5f0f\u7f16\u7a0b\u8303\u4f8b\u62e5\u6709\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u81ea\u52a8\u54cd\u5e94\u8f93\u5165\u53c2\u6570\u66f4\u6539\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u5141\u8bb8\u60a8\u521b\u5efa\u53cd\u5e94\u5f0f\u7ba1\u9053\u3002\u4e00\u79cd\u975e\u5e38\u81ea\u7136\u7684\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u7684\u65b9\u6cd5\u3002\nConcurnas\u4e3a\u6838\u5fc3\u6570\u636e\u7ed3\u6784(\u5305\u62ec\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5217\u8868\u3001\u6620\u5c04\u3001\u8303\u56f4\u548c\u96c6\u5408)\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u5728\u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u4e2d\u6d41\u884c\u7684\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u4e00\u4e2a\u5b57\u7b26\u8fd0\u7b97\u7b26\u5c06\u8fd0\u7b97\u7b26\u5e94\u7528\u4e8e\u6570\u7ec4/\u77e9\u9635/\u5217\u8868\u7684\u6240\u6709\u5143\u7d20\u3002\nConcurnas\u63d0\u4f9b\u72ec\u7acb\u7f16\u8bd1\u5668\u3001\u4ea4\u4e92\u5f0fREPL shell\u3001Jupyter Notebook\u3001VS Code\u3001Atom\u548cSublime Text\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u7a7a\u5b89\u5168\u8bed\u8a00\uff0c\u8fd9\u6709\u52a9\u4e8e\u6d88\u9664\u73b0\u4ee3\u7f16\u7a0b\u4e2d\u6700\u5e38\u89c1\u7684\u9519\u8bef\u6765\u6e90\u4e4b\u4e00\uff1a\u7a7a\u6307\u9488\u5f02\u5e38\uff01\nConcurnas\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u60a8\u53ef\u4ee5\u8bbf\u95eeJDK\u548cJVM\u63d0\u4f9b\u7684\u51fa\u8272\u7684\u591a\u5e73\u53f0\u6027\u80fd\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4e0e\u5176\u4ed6JVM\u8bed\u8a00(\u5982Java\u3001Scala\u3001Kotlin\u548cClojure)\u517c\u5bb9-\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u96c6\u6210/\u4f7f\u7528\u6240\u6709\u73b0\u6709\u7684JVM\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u4fee\u6539\u3002\nConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5e7f\u6cdb\u4f7f\u7528\u7c7b\u578b\u63a8\u7406\u6765\u6d88\u9664\u7c7b\u578b\u8d1f\u62c5\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cConcurnas\u4ee3\u7801\u4e0ePython\u4ee3\u7801(\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u6700\u5bb9\u6613\u7f16\u7801\u7684\u8bed\u8a00\u4e4b\u4e00)\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f46\u5177\u6709Java\u7684\u6027\u80fd\uff01\n\u7f16\u7a0b\u8bed\u8a00\u4e0d\u4ec5\u4ec5\u662f\u673a\u5668\u7528\u7684--\u4eba\u4eec\u4e5f\u9700\u8981\u9605\u8bfb\u5b83\u4eec\uff01Concurnas\u63d0\u4f9b\u4e86\u7b80\u6d01\u7684\u8bed\u6cd5\u548c\u8bb8\u591a\u5feb\u6377\u65b9\u5f0f\uff0c\u4f7f\u7f16\u5199\u6613\u4e8e\u9605\u8bfb\u548c\u7ef4\u62a4\u7684\u4ee3\u7801\u6210\u4e3a\u89c4\u8303\u3002\u5bf9\u4e8e\u9700\u8981\u989d\u5916\u6e05\u6670\u5ea6\u7684\u4ee3\u7801\uff0cConcurnas\u4e5f\u53ef\u4ee5\u5197\u957f\u3002\nConcurnas\u901a\u8fc7\u8868\u8fbe\u5f0f\u5217\u8868\u3001\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5bf9\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00\u63d0\u4f9b\u5e7f\u6cdb\u652f\u6301\u3002Concurnas\u8fd8\u652f\u6301\u8bed\u8a00\u6269\u5c55\uff0c\u5141\u8bb8\u60a8\u5c06\u975eConcurnas\u4ee3\u7801\u6bb5\u76f4\u63a5\u5d4c\u5165\u5230Concurnas\u4ee3\u7801\u6587\u4ef6\u4e2d\u3002\ndef gcd(x int\uff0cy int){//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570While(Y){(x\uff0cy)=(y\uff0cx mod y)}x}calc1=gcd(8\uff0c20)\uff01//\u5728\u9694\u79bbcalc2=gcd(6\uff0c45)\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97\uff01//\u5982\u679ccalc1&gt\uff1bcalc2\u5426\u5219calc2\uff0c\u8bf7\u5728\u5355\u72ec\u7684\u9694\u79bbcalc3=calc1\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97//^\u7b49\u5f85calc1\u7684\u7ed3\u679c\u3002\nConcurnas\u5141\u8bb8\u60a8\u901a\u8fc7\u4f7f\u7528bang\uff01\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u578b\u5bb9\u5668(\u79f0\u4e3a\u9694\u79bb)\u4e2d\u8f7b\u677e\u5730\u5e76\u53d1\u6267\u884c\u8ba1\u7b97\uff01\u63a5\u7ebf\u5458\u3002\n\u5e76\u53d1\u8ba1\u7b97\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u6700\u56f0\u96be\u7684\u65b9\u9762\u4e4b\u4e00\u3002\n\u8bf7\u6ce8\u610f\u5e76\u53d1\u8ba1\u7b97\u662f\u5982\u4f55\u5728Concurnas\u4e2d\u6210\u4e3a\u4e00\u884c\u7a0b\u5e8f\u7684\uff0c\u521b\u5efa/\u7ba1\u7406\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u3001\u751f\u547d\u5468\u671f\u3001\u9501(\u6216\u6b7b\u9501\uff01)\u3001\u4e34\u754c\u533a\u3001\u540c\u6b65\u3001\u7b49\u5f85\u3001\u901a\u77e5\u7ebf\u7a0b\u7b49\u90fd\u4e0d\u7528\u62c5\u5fc3\u3002\u6240\u6709\u8fd9\u4e9b\u56f0\u96be\u7684\u4e8b\u60c5\u90fd\u4f1a\u81ea\u52a8\u5904\u7406-\u8ba9\u60a8\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u4e8b\u60c5\u3002\nn=10 nplusone={n+=1\uff1bn}\uff01//\u5728\u4e00\u4e2a\u5206\u79bb\u7269\u4e2d\u6267\u884c\u6b64\u8ba1\u7b97\uff0cn\u7684\u526f\u672c\u4e3anminusone={n-=1\uff1bn}\uff01//\u53e6\u4e00\u4e2a\u5206\u79bb\u7269\u5728n\u7684\u5355\u72ec\u526f\u672c\u4e0a//\u4ee5\u4e0a\u4e24\u4e2a\u5206\u79bb\u7269\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\u3002n//nplusone==11//nminusone==9\u3002\nConcurnas\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u90fd\u5728\u9694\u79bb\u4e2d\u6267\u884c\u3002\u9694\u79bb\u88ab\u6620\u5c04\u5230\u8fd0\u884c\u4ee3\u7801\u7684\u673a\u5668\u7684\u5e95\u5c42\u786c\u4ef6\u7ebf\u7a0b\u4e0a\u3002\u9694\u79bb\u5668\u5728\u5176\u81ea\u5df1\u7684\u4e13\u7528\u5185\u5b58\u7a7a\u95f4\u5185\u8fd0\u884c\u3002\n\u5c06\u590d\u5236\u9694\u79bb\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u72b6\u6001\uff0c\u4f46\u5f15\u7528\u3001\u53c2\u4e0e\u8005\u548c\u4e00\u4e9b\u7279\u6b8a\u6807\u8bb0\u7684\u53ef\u5171\u4eab\u7c7b\u9664\u5916\u3002\u8fd9\u79cd\u72b6\u6001\u9694\u79bb\u4f7f\u63a8\u7406\u548c\u8bbe\u8ba1\u5e76\u53d1\u7b97\u6cd5\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u4e3a\u540c\u6b65\u548c\u7ade\u4e89\u6761\u4ef6\u7f16\u5199\u4ee3\u7801\u7684\u9700\u8981\u3002\nAREF INT\uff1a//\u8fd9\u662f\u4e00\u4e2aINT{//\u5e76\u53d1\u6267\u884c\u7684\u590d\u6742\u9694\u79bb\u6700\u7ec8\u8bbe\u7f6eAREF.//\u6b64\u5904\u7684\u590d\u6742\u4ee3\u7801.AREF=10}\uff01//AREF&#39\uff1b\u9700\u8981\u5176\u5f53\u524d\u503c\uff1aRESULT INT=AREF//\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\u4efb\u4f55\u503c\uff0c\u6267\u884c\u5c06\u6682\u505cSystem.out.println(&#34\uff1bAREF\u7684\u503c\u4e3a\uff1a&#34\uff1b+RESULT)\u3002\nexeccount int\uff1a=0 for(A In 1 To 10){//\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97..execount++}\uff01//\u751f\u6210\u9694\u79bb\u4ee5\u5e76\u53d1\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u3002\u7b49\u5f85(execount\uff1bexecount==10)//\u6682\u505c\u8fdb\u4e00\u6b65\u6267\u884c\uff0c\u76f4\u5230execount==10\u3002\naval int\uff1a//\u672a\u8bbe\u7f6e\u521d\u59cb\u503cbval int\uff1a=22//\u521d\u59cb\u503c\u5df2\u77e5SUMMARTS int\uff1a=EVERY(aval\uff0cbval){aval+bval}//\u4ee5\u4e0a\u521d\u59cb\u5316\u540e\uff0c\u5141\u8bb8\u6267\u884c.aval=100 bval=200//\u4e0a\u9762\u7684\u6bcf\u4e2a\u5757\u90fd\u5c06\u5e76\u53d1\u8fd0\u884c\uff0c\u5e76\u6700\u7ec8\u5c06SUMMICS\u8bbe\u7f6e\u4e3a\uff1aAWAIT(SUMMILES\uff1bSUMMILES==300)\u3002\n\u5b83\u4eec\u4e0d\u662f\u5728\u9694\u79bb\u4e4b\u95f4\u590d\u5236\uff0c\u800c\u662f\u5171\u4eab\uff0c\u4f46\u63d0\u4f9b\u5bf9\u5176\u53ef\u53d8\u72b6\u6001\u7684\u53d7\u63a7\u539f\u5b50\u8bbf\u95ee\u3002\u5982\u679c\u8bf7\u6c42\u65f6\u5c1a\u672a\u5728REF\u4e0a\u8bbe\u7f6e\u503c\uff0c\u5219\u6682\u505c\u6267\u884c\uff0c\u5e76\u5141\u8bb8\u6267\u884c\u5176\u4ed6\u9694\u79bb\uff0c\u76f4\u5230\u8bbe\u7f6e\u4e86\u503c\uff0c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Concurnas\u63d0\u4f9b\u7684\u4ee5\u4e0b\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020\u5bf9\u5f15\u7528\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94\uff1a\n\u7b49\u5f85\u5c06\u6682\u505c\u6267\u884c\uff0c\u76f4\u5230\u5728REF\u4e0a\u8bbe\u7f6e\u4e86\u503c\u5e76\u4e14\u6ee1\u8db3\u4e86\u53ef\u9009\u7684\u4fdd\u62a4\u6761\u4ef6\u3002\nonchange\u5c06\u5728\u5176\u76d1\u89c6\u7684\u4efb\u4f55\u5f15\u7528\u53d1\u751f\u66f4\u6539\u65f6\u89e6\u53d1\u5176\u4ee3\u7801\u5757\u7684\u5e76\u53d1\u6267\u884c\u3002\n\u6bcf\u4e2a\u53c2\u6570\u7684\u884c\u4e3a\u4e0eonchange\u76f8\u540c\uff0c\u4f46\u5982\u679c\u5728\u4efb\u4f55\u53d7\u76d1\u89c6\u7684\u5f15\u7528\u4e0a\u8bbe\u7f6e\u4e86\u521d\u59cb\u503c\uff0c\u5219\u4f1a\u89e6\u53d1\na int\uff1ab int\uff1ac&lt\uff1b=a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=Every(a\uff0cb){a+b}d&lt\uff1b-a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=onchange(a\uff0cb){a+b}\u3002\n\u4e0eConcurnas\u7684\u5927\u591a\u6570\u8bed\u6cd5\u5143\u7d20\u4e00\u6837\uff0c\u63d0\u4f9b\u4e86\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020Every and OnChange\u7684\u7b80\u660e\u7248\u672c\u3002\u8fd9\u6709\u6548\u5730\u5c06\u53cd\u5e94\u5f0f\u8ba1\u7b97\u53d8\u6210\u4e86\u4e00\u884c\u64cd\u4f5c\u3002\ncount1 int\uff1a=100 count2 int\uff1a=100 onchange(count1\uff0ccount2){System.out.println(&#34\uff1bsum\uff1a{count1+count2}&#34\uff1b)}trans{count1-=10 count2+=10}//\u5c06\u8f93\u51fa\uff1a&#34\uff1bsum\uff1a200&#34\uff1b\nConcurnas\u901a\u8fc7TRANS BLOCK\u5173\u952e\u5b57\u652f\u6301\u8f6f\u4ef6\u4e8b\u52a1\u5185\u5b58\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u5f15\u7528\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u66f4\u6539\u5728\u4e8b\u52a1\u4e4b\u5916\u4ee5\u539f\u5b50\u4e3a\u57fa\u7840\u53ef\u89c1\u3002\n\u6765\u81eacom.concurnas.lang.Pulsar\u5bfc\u5165Pulsar\uff0cRealtimePulsar\u6765\u81eajava.time\u5bfc\u5165\u6301\u7eed\u65f6\u95f4Pulsar=new RealtimePulsar()oneOffTrigger\uff1a=10\u79d2\u65f6\u95f4\u5185\u7684pulsar.after(Duration.ofSeconds(10))//schedule\u4e8b\u4ef6.\u6bcf\u4e2a(OneOffTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+oneOffTrigger)}//\u6bcf2\u79d2\u5b89\u639210\u6b21\u4e8b\u4ef6.RepeatingTrigger\uff1a=Pulsar.Repeat(Duration.ofSecond(2)\uff0c10)\u6bcf(RepeatingTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+RepeatingTrigger)}\u3002\n\u5e76\u53d1\u7cfb\u7edf\u5de5\u7a0b\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\u662f\u5e0c\u671b\u6709\u4e00\u4e9b\u57fa\u4e8e\u65f6\u95f4\u7684\u89e6\u53d1\u5668\uff0c\u7b49\u5f8510\u79d2\uff0c\u7136\u540e\u6267\u884cx&#34\uff1b\u6216\u6bcf\u96943\u79d2\u505a\u4e00\u6b21y\u7b49\uff0c\u6216\u5728\u6b64\u7279\u5b9a\u65f6\u95f4\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5728Concurnas\uff0c\u6211\u4eec\u5c06\u6b64\u79f0\u4e3a\u65f6\u95f4\u8ba1\u7b97\u3002\n\u65f6\u95f4\u8ba1\u7b97\u901a\u8fc7\u5185\u7f6e\u7684Pulsar\u5e93\u5f97\u5230\u652f\u6301\uff0c\u8be5\u5e93\u4f4d\u4e8e\uff1acom.concurnas.lang.Pulsar\u3002\u6b64\u5e93\u5141\u8bb8\u6211\u4eec\u5c06\u6d3b\u52a8\u5b89\u6392\u5728\u7ecf\u8fc7\u4e00\u5b9a\u65f6\u95f4\u540e\u5728\u5c06\u6765\u8fdb\u884c\u3002\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u4e3a\u5c06\u6765\u7684\u91cd\u590d\u5b89\u6392\u4efb\u52a1\u3002\nConcurnas\u63d0\u4f9b\u8109\u51b2\u661f\u7684\u5b9e\u65f6\u5b9e\u73b0\u548c\u51b0\u51bb\u65f6\u95f4\u5b9e\u73b0(\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u65f6\u95f4\u5e94\u7528)\uff0c\u5141\u8bb8\u65f6\u95f4\u4f5c\u4e3a\u53d7\u63a7\u53d8\u91cf\u6ce8\u5165\u3002\nresult=parfor(b in 0\u523010){gcd(b\uff0c10-b)}//result==[10\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c5\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c10\uff1a]\u3002\nConcurnas\u62e5\u6709\u5bf9\u5e76\u884cfor\u5faa\u73af\u7684\u5934\u7b49\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4e9b\u662f\u7528\u4e8e\u5728\u5faa\u73af\u4e0a\u4e0b\u6587\u4e2d\u5e76\u884c\u6267\u884c\u57fa\u4e8e\u4efb\u52a1\u7684\u64cd\u4f5c\u7684\u65b9\u4fbf\u800c\u76f4\u89c2\u7684\u673a\u5236\u3002\u5b83\u4eec\u4e0eConcurnas\u4e2d\u7684\u5e38\u89c4\u5faa\u73af\u5177\u6709\u76f8\u540c\u7684\u8bed\u6cd5\u3002\nACTOR MyActor{//\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aACTOR-count=0 def Increment(){count++}}//\u4f7f\u7528\u4e0a\u9762\u7684ACTOR\uff1ama=new MyActor()ma.incremental()//\u5c31\u50cf\u6b63\u5e38\u7684\u65b9\u6cd5\u8c03\u7528\u4e00\u6837\uff0c\u5c06\u963b\u585e\uff0c\u76f4\u5230\u6267\u884c\u5b8c\u6210sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210{ma.increate()}\uff01//\u5e76\u53d1\u8c03\u7528{ma.increate()}\uff01}count=ma.getCount()//count==3\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\nConcurnas\u4e2d\u7684\u53c2\u4e0e\u8005\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u5fae\u670d\u52a1\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u5728\u81ea\u5df1\u7684\u4e13\u7528\u9694\u79bb\u5185\u8fd0\u4f5c\u3002\u4ece\u8c03\u7528\u4ee3\u7801\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53c2\u4e0e\u8005\u7684\u5916\u89c2\u548c\u884c\u4e3a\u4e0e\u5e38\u89c4\u5bf9\u8c61\u4e00\u6837\u3002\n\u53c2\u4e0e\u8005\u5141\u8bb8\u6211\u4eec\u4ee5\u5355\u7ebf\u7a0b\u6837\u5f0f\u7f16\u5199\u670d\u52a1\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u591f\u4ee5\u5e76\u53d1\u65b9\u5f0f\u5b89\u5168\u5730\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u540c\u6b65\u6216\u4e89\u7528\u6761\u4ef6\uff0c\u56e0\u4e3a\u5bf9\u53c2\u4e0e\u8005\u7684\u6bcf\u4e2a\u8c03\u7528\u90fd\u662f\u6309\u987a\u5e8f\u8fd0\u884c\u7684\uff0c\u5e76\u4e14\u5728\u5b8c\u6210\u4e4b\u524d\u5177\u6709\u5bf9\u53c2\u4e0e\u8005\u72b6\u6001\u7684\u72ec\u5360\u8bbf\u95ee\u6743\u9650\u3002\u81ea\u7136\uff0c\u56e0\u4e3a\u53c2\u4e0e\u8005\u5b9e\u73b0\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u5e76\u53d1\u63a7\u5236\uff0c\u6240\u4ee5\u65e0\u9700\u8de8\u591a\u4e2a\u9694\u79bb\u8fdb\u884c\u590d\u5236\u5c31\u53ef\u4ee5\u5b89\u5168\u5730\u5171\u4eab\u5b83\u4eec\u3002\nclass MyCounter(-count int){//\u666e\u901a\u7c7bdef increment(){count++}}//\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7of\u5173\u952e\u5b57\u5b9a\u4e49\u548c\u4f7f\u7528\u6211\u4eec\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff0c\u5982\u4e0b\u6240\u793a\uff1aActor MyActor of MyCounter(0)//\u8ba9\u6211\u4eec\u4f7f\u7528\u65b0\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff1ama=new MyActor()ma.incremental()sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210ma.increate()\uff01ma.increate()\uff01}count=ma.count//count==3\u3002\n\u6709\u65f6\u6211\u4eec\u6ca1\u6709\u4ece\u96f6\u5f00\u59cb\u5b9a\u4e49\u6f14\u5458\u7684\u5962\u4f88\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u9884\u5148\u5b58\u5728\u7684\u4ee3\u7801\uff0c\u60c5\u51b5\u5c24\u5176\u5982\u6b64\u3002\u4e3a\u6b64\uff0cConcurnas\u63d0\u4f9b\u4e86\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u3002\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u6784\u9020\u5b83\u4eec\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u5e76\u56f4\u7ed5\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\n\u7528\u4e8e\u521b\u5efa\u88ab\u5305\u88c5\u7684\u7c7b\u6216\u65b9\u6cd5\u7684\u5b9e\u4f8b\u7684\u4efb\u4f55\u6784\u9020\u51fd\u6570\u4e5f\u7531\u7c7b\u578b\u5316\u53c2\u4e0e\u8005\u63d0\u4f9b\u3002\nclass MyCounter(-count int){def increate(){count++}}inst1=\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u65b0\u5efa\u6267\u884c\u5143inst2=new\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u521b\u5efa\u65b0\u6267\u884c\u5143\u3002\n\u521b\u5efa\u7c7b\u578b\u5316\u6267\u884c\u5143\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b(\u73b0\u5728\u662fAND ACTOR\uff01)\u65f6\uff0c\u53ea\u9700\u4f7f\u7528ACTOR\u5173\u952e\u5b57\u4ee3\u66ff\u6216\u9644\u52a0\u4e8eNEW\u5173\u952e\u5b57\u3002\n//\u4e00\u4e2a\u7b80\u5355\u7684\u77e9\u9635\u4e58\u6cd5\u5185\u6838.gpukernel 2 matMult(M int\uff0cK int\uff0cGLOBAL in A Float[2]\uff0cGLOBAL in B Float[2]\uff0cGLOBAL OUT result Mat Float[2]){globalRow=get_global_id(0)globalCol=get_global_id(1)acc=0.0f\uff1bfor(k=0\uff1bk&lt\uff1bK\uff1bk++){acc+=A[k*M+globalRow]*B[globalCol*K+k]}\u3002\nConcurnas\u62e5\u6709GPU\u8ba1\u7b97\u7684\u4e00\u6d41\u5e02\u6c11\u652f\u6301\u3002GPU\u53ef\u4ee5\u50cfCPU\u534f\u5904\u7406\u5668\u4e00\u6837\u4f7f\u7528\uff0c\u901a\u8fc7\u5b83\u4eec\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u7ecf\u5e38\u80fd\u591f\u5c06\u8bb8\u591a\u8ba1\u7b97\u9650\u5236\u95ee\u9898\u7684\u8ba1\u7b97\u901f\u5ea6\u63d0\u9ad8100\u500d\u4ee5\u4e0a\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u57fa\u4e8eCPU\u7684\u8ba1\u7b97\u3002\nGPU\u8ba1\u7b97\u7684\u6838\u5fc3\u662f\u5185\u6838\u3002\u8fd9\u4e9b\u90fd\u662f\u5728\u6211\u4eec\u7684GPU\u4e0a\u6267\u884c\u7684\uff0c\u4ee5\u4fbf\u6267\u884c\u8ba1\u7b97\u3002Concurnas\u5141\u8bb8\u60a8\u4f7f\u7528Concurnas\u7f16\u7a0b\u8bed\u8a00\u7684\u5b50\u96c6\u521b\u5efa\u5185\u6838\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u7a0d\u52a0\u4fee\u6539\u5c31\u53ef\u4ee5\u7f16\u5199\u60ef\u7528\u7684\u5e76\u53d1\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728GPU\u4e0a\u6267\u884c\u8ba1\u7b97\u3002\n//\u5728GPU\u8bbe\u5907\u4e0a\u521b\u5efa\u6570\u7ec4\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayMixed&lt\uff1bint[]&gt\uff1b(int[].class\uff0c10)//\u5c06\u6570\u636e\u4ece\u5806\u590d\u5236\u5230\u7f13\u51b2\u533a.copy Complete\u5e03\u5c14\u503c\uff1agps.GPURef=ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])//\u5728\u6211\u4eec\u7b49\u5f85\u590d\u5236\u5b8c\u6210\u7684\u540c\u65f6\uff0c\u53ef\u80fd\u5728GPU\u4e0a\u6267\u884c\u5176\u4ed6\u8ba1\u7b97.await(Copy Complete)//a\u4ec5\u8f93\u5165\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayIn&lt\uff1bint[]&gt\uff1b(INT[].class\uff0c10)//a 2 x 4\u8f93\u51fa\u77e9\u9635\u77e9\u9635\u57abgpus.GPUBufferOutput=device.makeOffHeapArrayOut&lt\uff1bint[2]&gt\uff1b(int[2].class\uff0c2\uff0c4)\u3002\n\u5f53\u6211\u4eec\u68c0\u67e5\u8981\u5728GPU\u4e0a\u6267\u884c\u7684\u7b97\u6cd5\u65f6\uff0c\u901a\u5e38\u5b83\u4eec\u8bbe\u8ba1\u548c\u4f7f\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u662f\u4e0eGPU\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u6709\u5173\u3002Concurnas\u4e3a\u6b64\u8fc7\u7a0b\u63d0\u4f9b\u4e13\u95e8\u7684\u652f\u6301\u3002\n\u4e00\u4e9b\u6700\u9ad8\u6548\u7684GPU\u7b97\u6cd5\u901a\u8fc7\u540c\u65f6\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u548c\u8ba1\u7b97\u7684\u6d41\u6c34\u7ebf\u6765\u5b9e\u73b0\u5b83\u4eec\u7684\u6548\u7387\uff0c\u4ece\u800c\u4f7fGPU\u59cb\u7ec8\u5fd9\u4e8e\u505a\u6709\u7528\u7684\u5de5\u4f5c\u3002Concurnas\u51ed\u501f\u5176\u5bf9\u975e\u963b\u585eGPU\u64cd\u4f5c(\u5982\u901a\u8fc7Refs\u8fdb\u884c\u6570\u636e\u4f20\u8f93)\u7684\u672c\u673a\u652f\u6301\uff0c\u4f7f\u5f97\u8fd9\u4e00\u70b9\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\n//\u5b9a\u4e49\u7b26\u5408C99\u7684\u539f\u59cbOpenCL C\u4ee3\u7801\uff1a@GPUStubFunction(Source=&#34\uff1bFloat plus1(Float a\uff0cFloat b){return a+b\uff1b}&#34\uff1b)gpudef plus1(a Float\uff0cb Float)Float//\u4f7f\u7528\u73b0\u6709\u7684\u7b26\u5408C99\u7684OPENCL C\u4ee3\u7801\uff1a@GPUStubFunction(sources=[&#39\uff1b./cpucode.cl&#39\uff1b\uff0c&#39\uff1b./gpuutilCode.cl&#39\uff1b])gpudef plus2(a Float\uff0cb Float)Float\u3002\nConcurnas\u4f7f\u7528OpenCL\u5b9e\u73b0GPU\u8ba1\u7b97\u3002\u8fd9\u662f\u6709\u5229\u7684\uff0c\u56e0\u4e3a\u9664\u4e86\u5176\u591a\u4f9b\u5e94\u5546\u652f\u6301(\u4e3b\u8981\u662f\u82f1\u7279\u5c14\u3001NVIDIA\u548cAMD)\u5916\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u7528\u4e8eGPU\u8ba1\u7b97\u7684\u6574\u4e2a\u73b0\u6709\u5e93\u4ee3\u7801\u3002\nConcurnas\u5141\u8bb8\u4ee5\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\uff0c\u8981\u4e48\u76f4\u63a5\u901a\u8fc7\u7528\u7b26\u5408C99\u7684OpenCL C\u4ee3\u7801\u7f16\u5199\u7684\u4ee3\u7801\u5b57\u7b26\u4e32\u4f7f\u7528\uff0c\u8981\u4e48\u4f5c\u4e3a\u9644\u52a0\u5230\u5b58\u6839\u5185\u6838\u7684\u6ce8\u91ca\u4e2d\u7684\u76f4\u63a5\u6587\u4ef6\u5f15\u7528\u3002\n//\u4e00\u79cd\u5229\u7528GPU\u672c\u5730\u5185\u5b58gpukernel 2matMultLocal(M int\uff0cN int\uff0cK int\uff0c\u5e38\u91cfA\u6d6e\u70b9[2]\uff0c\u5e38\u91cfB\u6d6e\u70b9[2]\uff0cGLOBAL OUT RESULT FLOAT[2]){row=get_local_id(0)col=get_local_id(1)globalRow=CacheSize*get_group_id(0)+row//\u7ed3\u679c\u884c(0..M)globalCol=CacheSize*get_group_id(1)+colof result(0..N)//\u672c\u5730\u5185\u5b58\u4fdd\u5b58\u7f13\u5b58A\u548cB\u4e2d\u7684CacheSize\u5143\u7d20*CacheSize\u5143\u7d20\u3002CacheSize]acc=0.0f//\u5faa\u73af\u904d\u5386\u6240\u6709\u5206\u7247cacheSize int=K/CacheSize for(t=0\uff1bt&lt\uff1bcacheSize\uff1bt++){//\u5c06\u5168\u5c40\u5185\u5b58\u4e2d\u7684A\u548cB\u7684\u4e00\u6bb5\u7f13\u5b58//\u5230\u672c\u5730\u5185\u5b58tiledRow=CacheSize*t+row tiledCol=CacheSize*t+colcacheA[ol][row]=A[tiledCol*M+globalRow]cacheb[ol][row]=B[globalCol*K+tiledRow]\u5c4f\u969c(True)/\u3002k++){//\u7d2f\u52a0\u77e9\u9635\u5b50\u90e8\u5206\u7684\u7ed3\u679cacc+=cacheA[k][row]*cacheb[ol][k]}\u5c4f\u969c(True)//\u786e\u4fdd\u5728\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7f13\u5b58\u8282\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u9879}result[globalCol*M+globalRow]=acc}\u3002\nConcurnas\u5177\u6709\u5bf9\u672c\u5730GPU\u5185\u5b58\u548c\u5c4f\u969c\u7684\u672c\u5730\u60ef\u7528\u652f\u6301\u3002\u901a\u5e38\uff0c\u5f53\u5728GPU\u4e0a\u4f7f\u7528\u672c\u5730\u5185\u5b58\u5b9e\u73b0\u7a7a\u95f4\u5c40\u90e8\u6027\u5f88\u5f3a\u7684\u7b97\u6cd5\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u6027\u80fd\u65b9\u9762\u53d7\u76ca\u826f\u591a\u3002\nConcurnas GPU\u5b9e\u65bd\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u6027\u80fd\u5206\u6790\u9009\u9879\u3002\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u3001\u4f7f\u4eba\u80fd\u591f\u8c03\u8bd5GPU\u4ee3\u7801\u4ee5\u4fbf\u786e\u5b9a\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u4ee5\u53ca\u7528\u4e8e\u76d1\u89c6\u76ee\u7684\u90fd\u662f\u6709\u7528\u7684\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer(port=42001)remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n//\u5ba2\u6237\u7aef\uff1arm=Remote(&#39\uff1blocalhost&#39\uff1b\uff0cport=42001)//\u8fdc\u7a0b\u6267\u884c\u4ee3\u7801\uff0c\u8fd4\u56deref\uff1aans int\uff1a={10+10}\uff01(rm.onailReter())rm.close()//ans==20\nConcurnas\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u3001\u76f4\u89c2\u548c\u975e\u4fb5\u5165\u5f0f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u662f\u5bf9\u5e76\u53d1\u8ba1\u7b97\u9694\u79bb\u6a21\u578b\u7684\u6269\u5c55\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef/\u5df2\u7ecf\u4f7f\u7528\u7684\u5e76\u53d1\u8ba1\u7b97\u6a21\u578b\u6765\u6784\u5efa\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u6269\u5c55\u5230\u8fdc\u7a0b\u5de5\u4f5c\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53\u6211\u4eec\u7684\u8ba1\u7b97\u9700\u6c42\u589e\u957f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6269\u5c55\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u6765\u9002\u5e94\u3002\nConcurnas\u62bd\u8c61\u5316\u4e86\u8bb8\u591a\u5173\u4e8e\u7ba1\u7406\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u8270\u82e6\u5de5\u4f5c\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u66f4\u6709\u8da3\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f7f\u7528Concurnas\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u5c06\u7f13\u5b58\u7ed3\u679c\uff0c\u5e76\u5728\u53d1\u751f\u7f51\u7edc\u6545\u969c\u65f6\u7b49\u5f85\u5ba2\u6237\u7aef\u91cd\u65b0\u8fde\u63a5\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer()//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000 remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n\u7c7bMyCalculator{//\u4f9d\u8d56\u4ee3\u7801-callCounter=0//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570.def gcd(x int\uff0cy int){//+\u8ba1\u6570\u5668\u548cResult While(Y){(x\uff0cy)=(y\uff0cx mod y)}&#34\uff1bcount\uff1a{++callCounter}\uff0cresult\uff1a{x}&#34\uff1b}}//\u8fdc\u7a0b\u8fde\u63a5\u5e76\u6267\u884cRM=Remote(&#39\uff1b127.0.0.1&#39\uff1b)//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000\u7ed3\u679c=try{calc=MyCalculator()calc.gcd(344756)//\u8fd8\u4f20\u8f93\u4f9d\u8d56\u4ee3\u7801(MyCalculator.class)\u548c\u5bf9\u8c61\u72b6\u6001(CallCounter).res\u5b57\u7b26\u4e32\uff1a={calc.gcd(97,7081)}\uff01(rm.onailReter())res\uff1aget()}Finally{rm.close()}//result==count\uff1a2\uff0cresult\uff1a97\u3002\n\u4f7f\u7528Concurnas\uff0c\u53ef\u4ee5\u5bf9\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u8fd0\u884c\u63d0\u4ea4\u7ed9\u5b83\u4eec\u7684\u4efb\u4f55\u88ab\u8ba4\u4e3a\u53ef\u4ee5\u5b89\u5168\u6267\u884c\u7684\u4ee3\u7801\u3002\n\u5185\u90e8Concurnas\u5206\u5e03\u5f0f\u8ba1\u7b97API\u5305\u62ec\u5bf9\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u7684\u89c4\u5b9a\uff0c\u8be5\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u672c\u8eab\u76f8\u5f53\u590d\u6742\uff0c\u5e76\u4e14\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u80fd\u591f\u6267\u884c\u9759\u6001\u4ee3\u7801\u4f9d\u8d56\u5173\u7cfb\u5206\u6790\uff0c\u4ee5\u4fbf\u9884\u5148\u786e\u5b9a\u5e76\u62a2\u5148\u63d0\u4f9b\u6267\u884c\u6240\u9700\u7684\u4ee3\u7801\u3002\n..", "note_en": "Concurnas is an open source JVM programming language designed for building reliable, scalable, high performance concurrent, distributed and parallel systems\n    Using Concurnas helps organizations take full advantage of modern multi-core CPU and GPU hardware by making concurrent and parallel  programming easier.\n  Concurnas is  interoperable with Java (and other JVM languages) - organizations are able to leverage existing Java software in a concurrent environment.\n  Compared to other languages, with Concurnas  developers need to write fewer lines of code. That code is safer and easier to test, increasing quality and boosting developer productivity.\n    Inspired by languages such as  Python and  Java, Concurnas is a statically typed, garbage collected language utilizing type inference with an easy to learn syntax.\n  Concurnas is a compiled language which runs on the Java Virtual Machine and as such has access to the incredible performance offered by the JVM\n  Concurnas makes it possible to use the same code from a small research prototype to a planet scale distributed production solution\n  Concurnas is an open source technology, free to use and modify. With on going development and commercial support provided by  Concurnas Ltd\n  Concurnas @ JAX London 2020... We will be speaking about Concurnas at  JAX LONDON 2020\n    Concurnas offers a simple but extremely powerful concurrency model which allows you to write concurrent code without having to write boilerplate code to manage threads, critical sections or locks!\n  Concurnas offers first class citizen support for distributed computing as a specialization of concurrent computing\n  Concurnas offers first class citizen support for GPU programming. You can write your code in idiomatic Concurnas code and run on the GPU without having to switch to C/C++!\n  Concurnas offers first class citizen support for interacting with non heap managed, non garbage collected memory. This makes working with GPUs, big data and custom databases a breeze.\n  Concurnas supports all the usual constructs used in modern imperative computing such as: if-elif-else, for, while loops, assertions, exceptions. Plus implicit returns from blocks, with statements, list comprehension, copiers and much much more!\n  Concurnas takes the hard work and boiler plate out of object oriented programming and makes it fun again. Concurnas has advanced support for\r\t\t\tclasses (concrete, abstract, inheritance), generics (in out, wild cards, bounded), enumerations, annotations. As well as new features such as traits, tuples, object providers, typedefs, usage based generic type inference, automatic generation/ redirection of class field getters/setters, class hashcodes and equalities.\n  The functional programming paradigm incorporates a set of tremendously useful approaches to solving problems, but pure functional programming is rarely seen in the wild. With Concurnas we&#39;ve taken the most widely used elements of functional programming, and integrated them into Concurnas. With Concurnas you have access to method and function references, lambdas, partial function evaluation, lazy evaluation, pattern matching plus a whole lot more!\n  Concurnas has first class citizen support for the emerging reactive programming paradigm. With Concurnas you can write code which will react to changes in input parameters automatically - thus allowing you to create reactive pipelines. A very natural way of solving algorithmic problems.\n  Concurnas has first class citizen support for core data structures including arrays, matrices, lists, maps, ranges and sets.\n  A technique popular in the scientific computing community, Concurnas allows you to apply an operator to all elements of an array/matrix/list via a one character operator\n  Concurnas offers a standalone compiler, an interactive REPL shell, Jupyter Notebook, VS Code, Atom and Sublime text support.\n  Concurnas is a null safe language, this helps to eliminate one of the most common sources of bugs in modern programming: the null pointer exception!\n  Concurnas runs on the Java Virtual Machine, which not only gives you access to the JDK and fantastic multi-platform performance offered by the JVM but also compatibility with other JVM languages such as  Java,  Scala,  Kotlin and  Clojure - plus you can easily integrate/use all your existing JVM code without modification.\n  Concurnas is a statically typed language which uses type inference extensively to remove the burden of types. Often times Concurnas code is indistinguishable from Python code (widely recognized as one of the easiest languages to code in) but with the performance of  Java!\n  Programming languages are not just for machines - people need to read them too! Concurnas offers a concise syntax and many shortcuts to make writing easy to read and maintainable code the norm. Concurnas is also able to be verbose, for code which requires that extra bit of clarity.\n  Concurnas has extensive support for Domain Specific Languages via; expression lists, extension functions and operator overloading. Concurnas also supports language extensions, which allow you to directly embed segments of non Concurnas code into your Concurnas code files.\n    def gcd(x int, y int){//greatest common divisor of two integers\r while(y){\r (x, y) = (y, x mod y)\r }\r x\r}\r\rcalc1 = gcd(8, 20)!//run this calculation in an isolate\rcalc2 = gcd(6, 45)!//run this calculation in a separate isolate\r\rcalc3 = calc1 if calc1 &gt; calc2 else calc2\r//^^^ wait for the results of calc1 and calc2 before assigning calc3\n  Concurnas allows you to easily execute computation, concurrently, in separate thread-like containers called  isolates via use of the bang  ! operator.\n  Concurrent computation is often recognized as one of the most difficult aspects of modern software engineering\n  Notice how concurrent computation is a one liner in Concurnas, there is no worry about creating/managing threads, thread pools, life-cycles, locks (or deadlocks!), critical sections, synchronization, wait, notifying threads etc. All this hard stuff is taken care of automatically - leaving you to focus on what&#39;s important.\n    n = 10\r\rnplusone = { n += 1; n }!//perform this calculation in an isolate, a copy of n is made\rnminusone = { n -= 1; n }!//another isolate, on a separate copy of n\r//The above two isolates will never interfere with one another&#39;s copy of n\r\r//nplusone == 11\r//nminusone == 9\n  All code in Concurnas is executed in isolates. Isolates are mapped onto the underlying hardware threads of the machine upon which one is running one&#39;s code. Isolates operate within their own dedicated memory space.\n  All state used in an isolate is copied with the exception of references, actors and some specially marked shareable classes. This isolation of state makes reasoning and designing concurrent algorithms easier since it reduces the need to code for synchronization and race conditions.\n    aRef int://this is a ref of type int\r{//complex isolate executed concurrently eventually sets aRef...\r //complex code here...\r aRef = 10\r}!\r\r//aRef&#39;s current value is requested of it:\rresult int = aRef//If no value has yet been set execution will pause\r\rSystem.out.println(&#34;The value of aRef is: &#34; + result)\n  execount int: = 0\rfor(a in 1 to 10){\r //some complex calculation..\r execount++\r}!//spawn an isolate to execute the above concurrently.\r\rawait(execount; execount==10)//pause further execution until execount == 10\n  aval int://no initial value set\rbval int: = 22 //initial value known\r\rsumvals int: = every(aval, bval) { aval + bval }\r//after initializing above, execution is allowed to carry on...\r\raval = 100\rbval = 200\r\r//every block above will run concurrently and eventually set sumvals to:\rawait(sumvals; sumvals==300)\n  They are not copied between isolates, rather they are shared but provide controlled, atomic access to their changeable state. If a value is not yet set on a ref when it is requested, execution is paused and other isolates are allowed to execute until a value has been set, after which execution continues.\n  We can react to changes to refs via the following reactive programming constructs provided by Concurnas:\n  await\u00a0Will pause execution until a value has been set on a ref and an optional guard condition has been satisfied\n  onchange\u00a0Will trigger execution of its code block to occur concurrently upon any of its monitored refs being changed\n  every\u00a0Behaves as  onchange but will trigger if an initial value has been set on any monitored ref\n    a int:\rb int:\r\rc &lt;= a + b //same as: c int: = every(a, b) { a + b }\rd &lt;- a + b //same as: c int: = onchange(a, b) { a + b }\n  As with most syntactical elements of Concurnas, a concise version of the reactive programming constructs  every and  onchange is provided. This effectively turns reactive computing into a one line operation.\n    account1 int: = 100\raccount2 int: = 100\ronchange(account1, account2) {\r System.out.println(&#34;sum: {account1 + account2}&#34;)\r}\r\rtrans{\r account1 -= 10\r account2 += 10\r}\r\r//will output: &#34;sum: 200&#34;\n  Concurnas supports software transactional memory via the trans block keyword. This allows us to make changes to one or more refs and have those changes visible outside of our transaction on an atomic basis.\n    from com.concurnas.lang.pulsar import Pulsar, RealtimePulsar\rfrom java.time import Duration\r\rpulsar = new RealtimePulsar()\r\roneOffTrigger := pulsar.after(Duration.ofSeconds(10))//schedule event for 10 seconds time...\revery(oneOffTrigger){\r System.out.println(&#34;Current time: &#34; + oneOffTrigger)\r}\r//schedule event every 2 seconds 10 times...\rrepeatingTrigger := pulsar.repeat(Duration.ofSeconds(2), 10)\revery(repeatingTrigger){\r System.out.println(&#34;Current time: &#34; + repeatingTrigger)\r}\n  A common pattern in concurrent systems engineering is to want to have some for of time based trigger, &#34;wait 10 seconds then do x&#34; or &#34;do y every 3 seconds etc&#34; or &#34;perform this action at this certain time&#34;. At Concurnas we refer to this as temporal computing.\n  Temporal computing is supported via the built in Pulsar library found at: com.concurnas.lang.pulsar. This library allows us to schedule activities to take place in the future after a certain amount of time has elapsed. It also allows us to schedule tasks for future repetition.\n  Concurnas offers both a realtime implementation of pulsars and a &#39;Frozen&#39;-time implementation (designed primarily for testing temporal applications), which permits time to be injected as a controlled variable.\n    result = parfor(b in 0 to 10){\r gcd(b, 10-b)\r}\r\r//result == [10:, 1:, 2:, 1:, 2:, 5:, 2:, 1:, 2:, 1:, 10:]\n  Concurnas has first class citizen support for parallel for loops. These are a convenient and intuitive mechanism for performing task based operations in the context of a loop, in parallel. They have the same syntax as conventional loops in Concurnas.\n  actor MyActor{//lets define an actor\r -count = 0\r def increment(){\r count++\r }\r}\r\r//Use of the above actor:\rma = new MyActor()\r\rma.increment()//just like normal method call, will block until execution is complete\r\rsync{//sync - wait for all isolates created in the block to complete\r {ma.increment()}!//called concurrently\r {ma.increment()}!\r}\r\rcount = ma.getCount()\r//count == 3, not possible with regular objects!\n  Actors in Concurnas enable us to build micro-services. Each actor operates within its own dedicated isolate. Actors look and behave just like regular objects from the perspective of the calling code.\n  Actors allow us to write service code in a single threaded style and be able to run them safety in a concurrent manner without having to concern ourselves with synchronization or race conditions as each call to an actor runs sequentially and has exclusive access to the sate of the actor until it completes. Naturally, because actors implement their own concurrency control they are safe to be shared without copying across multiple isolates.\n    class MyCounter(-count int){//ordinary class\r def increment(){\r count++\r }\r}\r\r//We can now define and use our typed actor through the aid of the of keyword as follows:\ractor MyActor of MyCounter(0)\r\r\r//let&#39;s use our new typed actor:\rma = new MyActor()\r\rma.increment()\r\rsync{//sync - wait for all isolates created in the block to complete\r ma.increment()!\r ma.increment()!\r}\r\rcount = ma.count//count == 3\n  Sometimes we do not have the luxury of defining actors from scratch. This is particularly the case if we are working with pre existing code. To this end Concurnas provides typed actors. Typed actors construct their own and wrap around an instance of an ordinary object.\n  Any constructor used to create an instance of the class or method being wrapped is also provided by the typed actor.\n    class MyCounter(-count int){\r def increment(){\r count++\r }\r}\r\rinst1 = actor MyCounter(0) //create a new actor on MyCounter\rinst2 = new actor MyCounter(0) //create a new actor on MyCounter\n  Another way to create a typed actor is to simply use the actor keyword in place of or in addition to the new keyword when creating an instance of an object (now and actor!).\n  //a simple kernel for performing matrix multiplication...\rgpukernel 2 matMult(M int, K int, \r global in A float[2], global in B float[2], global out resultMat float[2]) {\r globalRow = get_global_id(0) \r globalCol = get_global_id(1) \r acc = 0.0f;\r for (k=0; k&lt;K; k++) {\r acc += A[k*M + globalRow] * B[globalCol*K + k]\r }\r resultMat[globalCol*M + globalRow] = acc;\r}\n  Concurnas has first class citizen support for GPU computing. GPUs can be used like CPU co processors and through their use we&#39;re often able to improve the speed of computation for many compute bound problems by over 100x compared to conventional CPU based computation.\n  Central to GPU computing are kernels. These are executed on our GPUs in order to perform computation. Concurnas allows you to create kernels in a subset of the Concurnas programming language. This means we can write idiomatic Concurnas code with only slight modifications in order to perform computation on the GPU.\n    //create an array buffer on a GPU device\rar gpus.GPUBufferInput = device.makeOffHeapArrayMixed&lt;int[]&gt;(int[].class, 10)\r//copy data from the heap into the buffer...\rcopyComplete boolean:gps.GPURef = ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])\r//perform other computation, possibly on the GPU, whilst we wait for the copy to complete...\rawait(copyComplete)\r\r//an input only buffer\rar gpus.GPUBufferInput = device.makeOffHeapArrayIn&lt;int[]&gt;(int[].class, 10)\r//a 2 by 4 output matrix\rmat gpus.GPUBufferOutput = device.makeOffHeapArrayOut&lt;int[2]&gt;(int[2].class, 2, 4)\n  When we examine algorithms to execute on the GPU, often a big factor in their design and usage concerns transference of data to and from the GPU. Concurnas offers dedicated support for this process.\n  Some of the most efficient GPU algorithms achieve their efficiency by implementing pipelining of data transference and computation together so to always keep the GPU busy doing useful work. Concurnas makes this easy by virtue of its native support for non blocking GPU operations such as data transference via refs.\n    //defining raw C99 compliant OpenCL C code:\r@GPUStubFunction(source=&#34;float plus1(float a, float b){ return a + b;}&#34;)\rgpudef plus1(a float, b float) float\r\r//using existing C99 compliant OpenCL C code:\r@GPUStubFunction(sources=[&#39;./cpucode.cl&#39;, &#39;./gpuutilCode.cl&#39;])\rgpudef plus2(a float, b float) float\n  Concurnas implements GPU computing by using OpenCL. This is advantageous because in addition to its multi vendor support (mainly Intel, Nvidia and AMD) one has access to a whole host of existing library code for GPU computation.\n  Concurnas allows for existing code to be used in one of two ways, either directly via a code string written in C99 compliant OpenCL C code or as a direct file reference in an annotation attached to a stub kernel.\n    //a matrix multiplication algorithm leveraging GPU local memory\rgpukernel 2 matMultLocal(M int, N int, K int, \r constant A float[2], constant B float[2], global out result float[2]) {\r row = get_local_id(0)\r col = get_local_id(1)\r globalRow = CacheSize*get_group_id(0) + row //row of result (0..M)\r globalCol = CacheSize*get_group_id(1) + col //col of result (0..N)\r\t\r //local memory holding cache of CacheSize*CacheSize elements from A and B\r local cacheA = float[CacheSize, CacheSize]\r local cacheb = float[CacheSize, CacheSize]\r\t\r acc = 0.0f\r\t\r //loop over all tiles\r cacheSize int = K/CacheSize\r for (t=0; t&lt;cacheSize; t++) {\r //cache a section of A and B from global memory\r //into local memory tiledRow = CacheSize*t + row\r tiledCol = CacheSize*t + col\r cacheA[col][row] = A[tiledCol*M + globalRow]\r cacheb[col][row] = B[globalCol*K + tiledRow]\r\t\t\r barrier(true)//ensure all work items finished caching\r\t\t\r for (k=0; k&lt;CacheSize; k++) {//accumulate result for matrix subsections\r acc += cacheA[k][row] * cacheb[col][k]\r }\r\t\t\r barrier(true)//ensure all work items finished before moving on to next cache section\r }\r \r result[globalCol*M + globalRow] = acc\r}\n  Concurnas has native idiomatic support for local GPU memory and barriers. Often algorithms with a strong degree of spatial locality benefit hugely in terms of performance when they are implemented with local memory on a GPU\n    The Concurnas GPU implementation provides detailed profiling options. This is useful for both development, in enabling one to debug one&#39;s GPU code so as to determine how much time is spent performing certain operations, and for monitoring purposes\n  //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer(port = 42001)\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  //A client:\rrm = Remote(&#39;localhost&#39;, port = 42001)\r//execute code remotely, returning a ref:\rans int: = {10+10}!(rm.onfailRetry())\rrm.close()\r//ans == 20\n  Concurnas provides an easy to use, intuitive and non invasive solution for distributed computing which acts as an extension of the isolate model of concurrent computation. In this way we are able to use the concurrent computing model which we are used to/have already built our software using and can easily extend this to working on a remote basis. In this way as our computational requirements grow we can easily scale our solutions to accommodate.\n  Concurnas abstracts away much of the hard work Concerning managing distributed computing, allowing us to focus on the more interesting problems which we are trying to solve. For instance, with Concurnas remote servers will cache results and wait for clients to reconnect in the event of network failure.\n    //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer()//use default port 42000\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  class MyCalculator{//dependent code\r -callCounter = 0\r //greatest common divisor of two integers...\r def gcd(x int, y int){//+ counter and result\r while(y){\r (x, y) = (y, x mod y)\r }\r &#34;count: {++callCounter}, result: {x}&#34;\r }\r}\r\r//connect and execute remotely\rrm = Remote(&#39;127.0.0.1&#39;)//use default port 42000\rresult = try{\r calc = MyCalculator()\r calc.gcd(34, 4756)\r\r //Dependant code (MyCalculator.class) and object state (callCounter) is also transmitted...\r res String: = {calc.gcd(97, 7081)}!(rm.onfailRetry())\r res:get()\r}finally{\r rm.close()\r}\r//result == count: 2, result: 97\n  With Concurnas, remote servers are able to be configured such that they can run any code submit to them deemed safe for execution.\n  The internal Concurnas distributed computing API includes a provision for dependency resolution which itself is quite sophisticated and in the interests of performance is able to perform static code dependency analysis in order to determine and preemptively provide upfront the code that is required in order to execut\n......", "posttime": "2020-05-28 04:55:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,\u7f16\u7a0b\u8bed\u8a00,\u4ee3\u7801", "title": "\u5e76\u53d1\u7f16\u7a0b\u8bed\u8a00(Concurnas Programming Language)", "title_en": "The Concurnas Programming Language", "transed": 1, "url": "https://concurnas.com/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "\u4ee3\u7801"]}]