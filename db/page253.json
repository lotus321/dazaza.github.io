[{"category": "", "categoryclass": "", "imagename": "16253b04abd3b63e601896163a152577.jpeg", "infoid": 1003626, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fb7\u5dde\u4eea\u5668(Texas Instruments)\u7684\u56fe\u5f62\u8ba1\u7b97\u5668\u56e0\u5176\u7a0b\u5e8f\u652f\u6301\u800c\u88ab\u8a89\u4e3a\u4e1a\u4f59\u8bbe\u5907\uff0c\u4f46\u5b83\u4eec\u53ea\u662f\u5931\u53bb\u4e86\u4e00\u4e9b\u5438\u5f15\u529b\u3002Cemetech\u5df2\u7ecf(\u901a\u8fc7Linus Tech Tips)\u4e86\u89e3\u5230\uff0c\u5fb7\u5dde\u4eea\u5668\u6b63\u5728\u53d6\u6d88\u5bf9TI-84 Plus CE\u548c\u5176\u6cd5\u56fd\u540c\u884cTI-83 Premium CE\u4e0a\u57fa\u4e8e\u6c47\u7f16\u548cC\u8bed\u8a00\u7684\u7a0b\u5e8f\u7684\u652f\u6301\u3002\u5b89\u88c5\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7cfb\u7edf(\u5206\u522b\u4e3aOS5.6\u548cOS5.5)\u7684\u6700\u65b0\u56fa\u4ef6\uff0c\u4f60\u4e0d\u4ec5\u65e0\u6cd5\u8bbf\u95ee\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u4e5f\u65e0\u6cd5\u56de\u6eda\u3002\n\u8be5\u516c\u53f8\u89e3\u91ca\u8bf4\uff0c\u6b64\u4e3e\u662f\u4e3a\u4e86\u201c\u4f18\u5148\u5b66\u4e60\uff0c\u5e76\u5c06\u4efb\u4f55\u5b89\u5168\u98ce\u9669\u964d\u81f3\u6700\u4f4e\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u662f\u4e3a\u4e86\u51cf\u5c11\u4f5c\u5f0a\u3002\u5728\u4e0eCemetech\u7684\u4ea4\u8c08\u4e2d\uff0cEdTech\u603b\u88c1Peter Balyta\u5e0c\u671b\u793e\u533a\u5c06\u91cd\u70b9\u8f6c\u79fb\u5230\u63a8\u8fdbPython\u5f00\u53d1\u4e0a\uff0c\u5e76\u63d0\u51fa\u80fd\u591f\u6ee1\u8db3\u5b66\u6821\u3001\u5b66\u751f\u548c\u5f00\u53d1\u4eba\u5458\u9700\u6c42\u7684\u60f3\u6cd5\u3002\n\u867d\u7136\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u62c5\u5fc3\u5b66\u751f\u5728\u8003\u8bd5\u671f\u95f4\u4f7f\u7528APP\u4f5c\u5f0a\u7684\u8001\u5e08\u611f\u5230\u9ad8\u5174\uff0c\u4f46\u7231\u597d\u8005\u4eec\u5e76\u4e0d\u610f\u5916\u5730\u611f\u5230\u6124\u6012\u3002\u8fd9\u51cf\u5c11\u4e86\u7a0b\u5e8f\u5458\u5bf9\u5176\u8ba1\u7b97\u5668\u5e94\u7528\u7a0b\u5e8f\u7684\u63a7\u5236\u91cf\u3002\u7167\u76ee\u524d\u60c5\u51b5\u6765\u770b\uff0c\u8fd9\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u6548\u679c\u3002\u4e00\u4e9b\u4eba\u5df2\u7ecf\u627e\u5230\u4e86\u7ed5\u8fc7\u8ba1\u7b97\u5668\u7684\u8003\u8bd5\u6a21\u5f0f\u7684\u65b9\u6cd5--\u66f4\u65b0\u53ef\u80fd\u4f1a\u963b\u6b62\u201c\u968f\u610f\u201d\u7684\u4f5c\u5f0a\u8005\uff0c\u4f46\u4e0d\u4f1a\u963b\u6b62\u51b3\u5fc3\u575a\u5b9a\u7684\u4f5c\u5f0a\u8005\u3002\u76ee\u524d\uff0c\u7c89\u4e1d\u4eec\u5c06\u4e0d\u5f97\u4e0d\u575a\u6301\u4f7f\u7528\u65e7\u7684TI\u8f6f\u4ef6\uff0c\u6216\u8005\u63a5\u53d7\u4ed6\u4eec\u7684\u8ba1\u7b97\u5668\u6ca1\u6709\u90a3\u4e48\u7075\u6d3b\u7684\u4e8b\u5b9e\u3002", "note_en": "Texas Instruments\u2019  graphing calculators have a reputation as hobbyist devices given their program support, but they just lost some of their appeal.  Cemetech has  learned (via   Linus Tech Tips) that Texas Instruments is pulling support for assembly- and C-based programs on the TI-84 Plus CE and its French counterpart, the TI-83 Premium CE. Install the latest firmware for both (OS 5.6 and OS 5.5 respectively) and you\u2019ll not only lose access to those apps, but won\u2019t have a way to roll back.\n The company explained the move as an effort to \u201cprioritize learning and minimize any security risks.\u201d It\u2019s to reduce cheating, to put it another way. In a chat with  Cemetech, EdTech President Peter Balyta hoped that the community would shift its focus to advancing Python development and suggest ideas that would satisfy the needs of schools, students and developers.\n  While this could please teachers worried that students will use apps to cheat during exams, enthusiasts are unsurprisingly mad. This reduces the amount of control programmers have over their calculator apps. As it stands, this might not have the intended effect. Some have already found ways to bypass the calculators\u2019 Exam Mode \u2014 the updates may block \u2018casual\u2019 cheaters, but not determined ones. For now, fans will have to either cling to older TI software or accept that their calculators aren\u2019t as flexible.", "posttime": "2020-05-25 19:50:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,instruments,\u8ba1\u7b97\u5668", "title": "\u5fb7\u5dde\u4eea\u5668\u4f7f\u5f97\u5728\u5176\u8ba1\u7b97\u5668\u4e0a\u8fd0\u884c\u7a0b\u5e8f\u53d8\u5f97\u66f4\u52a0\u56f0\u96be", "title_en": "Texas Instruments Makes It Harder to Run Programs on its Calculators", "transed": 1, "url": "https://www.engadget.com/ti-bans-assembly-programs-on-calculators-002335088.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u8ba1\u7b97\u5668"]}, {"category": "", "categoryclass": "", "imagename": "c2e46c96a3aaa9250f6af8693630b051.png", "infoid": 1003625, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u8981\u6253\u8d4c\u54ea\u79cd\u6280\u672f\u53ef\u80fd\u5f88\u5feb\u5c31\u80fd\u5b8c\u6210\u7279\u6280\u6f14\u5458\u7684\u5de5\u4f5c\uff0c\u4f60\u53ef\u80fd\u4f1a\u731c\u5230CGI\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u673a\u5668\u4eba\u4e5f\u6709\u673a\u4f1a-\u8fea\u58eb\u5c3c\u5236\u9020\u7684\u673a\u5668\u4eba\u3002\nTechCrunch\u7684\u4e00\u4efd\u65b0\u62a5\u544a\u5c55\u793a\u4e86\u8be5\u516c\u53f8\u5728\u52a8\u753b\u7535\u5b50\u9886\u57df\u53d6\u5f97\u7684\u8fdb\u5c55\u3002\u8fd9\u4e9b\u673a\u5668\u4eba\u6829\u6829\u5982\u751f\uff0c\u901a\u5e38\u662f\u9759\u6001\u7684\uff0c\u65e8\u5728\u5a31\u4e50\u8fea\u58eb\u5c3c\u4e3b\u9898\u516c\u56ed\u548c\u5ea6\u5047\u6751\u7684\u4eba\u7fa4\u3002\u60f3\u60f3\u5728\u52a0\u52d2\u6bd4\u6d77\u76d7\u4e4b\u65c5\u4e2d\u72c2\u6b22\u7684\u8c6a\u996e\u6d77\u76d7\uff0c\u6216\u8005\u6700\u8fd1\u5728\u65b0\u7684\u6f58\u591a\u62c9\uff1a\u963f\u51e1\u8fbe\u4e16\u754c\u666f\u70b9\u4e2d\u63ed\u5f00\u9762\u7eb1\u7684\u7eb3\u7f8e\u4eba\u3002\n\u4f46\u662f\uff0c\u65b0\u4e00\u4ee3\u7684\u52a8\u6f2b\u7535\u5b50\u5b66\u6b63\u5728\u7a81\u7834\u673a\u5668\u4eba\u5de5\u7a0b\u7684\u6781\u9650\u3002\u5728\u8be5\u516c\u53f8\u7684Stickman\u9879\u76ee\u4e4b\u540e\uff0c\u8fea\u58eb\u5c3c\u7684\u5de5\u7a0b\u5e08\u4eec\u73b0\u5728\u6b63\u5728\u5236\u9020\u65e8\u5728\u53c2\u52a0\u7a7a\u4e2d\u7279\u6280\u8868\u6f14\u7684\u4eba\u5f62\u673a\u5668\u4eba\u3002\u5728\u6fc0\u5149\u5236\u5bfc\u548c\u5185\u7f6e\u52a0\u901f\u8ba1\u548c\u9640\u87ba\u4eea\u7684\u5e2e\u52a9\u4e0b\uff0c\u8fd9\u4e9b\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u534a\u7a7a\u4e2d\u8c03\u6574\u4f4d\u7f6e\uff0c\u505a\u51fa\u5b8c\u7f8e\u7684\u8d85\u7ea7\u82f1\u96c4\u98de\u884c\u59ff\u52bf\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u89c2\u770b\u4ed6\u4eec\u884c\u52a8\u7684\u89c6\u9891\uff1a\n\u8fea\u58eb\u5c3c\u6ca1\u6709\u8bf4\u8fd9\u4e9b\u673a\u5668\u4eba\u5c06\u5728\u5176\u4e3b\u9898\u516c\u56ed\u7684\u4ec0\u4e48\u5730\u65b9\u7ed3\u675f\uff0c\u4f46\u4e0d\u96be\u60f3\u8c61\u5b83\u4eec\u4f1a\u6253\u626e\u6210\u6f2b\u5a01(Marvel)\u6216\u76ae\u514b\u65af(Pixar)\u8457\u540d\u89d2\u8272\uff0c\u51c6\u5907\u98de\u8d8a\u821e\u53f0(\u6216\u8005\u8fd9\u5e94\u8be5\u662f\u65f6\u5c1a\u7684\uff1f)\u3002\u4f5c\u4e3a\u4eba\u7c7b\u540c\u7c7b\u7684\u66ff\u8eab\u3002\n\u8fea\u58eb\u5c3c\u526f\u7814\u7a76\u79d1\u5b66\u5bb6\u6469\u6839\u00b7\u6ce2\u666e\u5728\u63a5\u53d7TechCrunch\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u52a8\u6f2b\u673a\u5668\u4eba\u7ecf\u5e38\u9677\u5165\u201c\u8be1\u5f02\u8c37\u201d--\u65e2\u4e0d\u662f\u5b8c\u5168\u771f\u5b9e\u7684\uff0c\u4e5f\u4e0d\u662f\u660e\u663e\u5047\u7684\u5c34\u5c2c\u5883\u5730\u3002\u4f46\u662f\u4e00\u65e6\u4f60\u4ece\u79cb\u5343\u4e0a\u53d1\u5c04\u4e86\u4e00\u679a\uff0c\u6ce2\u666e\u8bf4\uff0c\u8fd9\u4e00\u5207\u90fd\u4f1a\u6d88\u5931\u5f97\u65e0\u5f71\u65e0\u8e2a\u3002\n\u6ce2\u666e\u8bf4\uff1a\u201c\u5f53\u4f60\u5728\u7a7a\u4e2d\u98de\u884c\u65f6\uff0c\u4f60\u53ef\u4ee5\u6709\u4e00\u70b9\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u5236\u9020\u51fa\u5f88\u591a\u770b\u8d77\u6765\u76f8\u5f53\u4e0d\u9519\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7269\u7406\u673a\u4f1a\u3002\u201d\u201c\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u7f8e\u4e3d\u7684\u629b\u7269\u7ebf\u548c\u6b63\u5f26\u6ce2\uff0c\u5b83\u4eec\u4ee5\u4eba\u4eec\u96be\u4ee5\u9884\u6d4b\u7684\u65b9\u5f0f\u5728\u7a7a\u6c14\u4e2d\u65cb\u8f6c\u548c\u65cb\u8f6c\uff0c\u4f46\u770b\u8d77\u6765\u5f88\u68d2\u3002\u201d", "note_en": "If you were going to bet on which technology might soon do the work of a stuntman, you\u2019d probably guess CGI. It turns out robots have a shot, too \u2014 robots built by Disney.\n A new  report from  TechCrunch lays out the advances the company has made in the field of animatronics. These are the lifelike, usually static robots, designed to entertain the crowds at Disney theme parks and resorts. Think of the grog-swilling pirates carousing in the  Pirates of the Caribbean ride, or the  recently unveiled Na\u2019vi in the new Pandora: The World of  Avatar attraction.\n But a new breed of animatronics are pushing the limits of robot engineering. Following the company\u2019s  Stickman project, Disney\u2019s engineers are now building humanoid robots designed to take part in aerial stunts. With the help of laser guiding and built-in accelerometers and gyroscopes, these robots adjust their position in mid-air, nailing that perfect superhero flight pose. You can watch a video of them in action below:\n  Disney hasn\u2019t said where in its theme parks these robots will end up, but it\u2019s not hard to imagine them dressed up as famous Marvel or Pixar characters, ready to fly across a stage (or should that be fall with style?) as a stand-in for their human counterpart.\n Speaking to  TechCrunch, Morgan Pope, an associate research scientist at Disney, said that animatronic robots often fall into the \u201cuncanny valley\u201d \u2014 that awkward position of being neither fully realistic or obviously fake. But once you launch one off a swing, says Pope, that all goes away.\n \u201cWhen you\u2019re flying through the air, you can have a little bit of function and you can produce a lot of stuff that looks pretty good, because of this really neat physics opportunity,\u201d says Pope. \u201cYou\u2019ve got these beautiful kinds of parabolas and sine waves that just kind of fall out of rotating and spinning through the air in ways that are hard for people to predict, but that look fantastic.\u201d", "posttime": "2020-05-25 19:50:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668\u4eba,\u98de\u884c,flying", "title": "\u8fea\u58eb\u5c3c\u7684\u98de\u884c\u673a\u5668\u4eba\u7279\u6280\u66ff\u8eab\u53ef\u4ee5\u6446\u51fa\u8d85\u7ea7\u82f1\u96c4\u7684\u59ff\u52bf(2018)", "title_en": "Disney\u2019s flying robot stunt double can pose just like a superhero (2018)", "transed": 1, "url": "https://www.theverge.com/2018/6/30/17517512/disney-robot-stunt-double-animatronic-superhero", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u98de\u884c", "flying"]}, {"category": "", "categoryclass": "", "imagename": "d62ca2a625fb09a79b35c48c324c29b0.jpg", "infoid": 1003624, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bbf\u95eeeBay.com\u7ad9\u70b9\u65f6\uff0c\u5c06\u8fd0\u884c\u4e00\u4e2a\u811a\u672c\uff0c\u8be5\u811a\u672c\u5c06\u5bf9\u60a8\u7684\u8ba1\u7b97\u673a\u6267\u884c\u672c\u5730\u7aef\u53e3\u626b\u63cf\uff0c\u4ee5\u68c0\u6d4b\u8fdc\u7a0b\u652f\u6301\u548c\u8fdc\u7a0b\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5176\u4e2d\u8bb8\u591a\u7aef\u53e3\u4e0e\u8fdc\u7a0b\u8bbf\u95ee/\u8fdc\u7a0b\u652f\u6301\u5de5\u5177\u76f8\u5173\uff0c\u5982Windows\u8fdc\u7a0b\u684c\u9762\u3001VNC\u3001TeamViewer\u3001Ammy Admin\u7b49\u3002\n\u4e86\u89e3\u5230\u8fd9\u4e00\u70b9\u540e\uff0cBleepingcomputer\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u786e\u8ba4eBay.com\u5728\u8bbf\u95ee\u8be5\u7f51\u7ad9\u65f6\u786e\u5b9e\u5728\u8fdb\u884c14\u4e2a\u4e0d\u540c\u7aef\u53e3\u7684\u672c\u5730\u7aef\u53e3\u626b\u63cf\u3002\n\u6b64\u626b\u63cf\u7531eBay.com\u4e0a\u7684check.js\u811a\u672c[\u5b58\u6863]\u6267\u884c\uff0c\u8be5\u811a\u672c\u5c1d\u8bd5\u8fde\u63a5\u5230\u4ee5\u4e0b\u7aef\u53e3\uff1a\n\u4e0b\u9762\u5217\u51fa\u4e86\u626b\u63cf\u768414\u4e2a\u4e0d\u540c\u7aef\u53e3\u53ca\u5176\u5173\u8054\u7684\u7a0b\u5e8f\u548c\u6613\u8da3\u53c2\u8003\u5b57\u7b26\u4e32\u3002\n\u8702\u9e23\u5668\u8ba1\u7b97\u673a\u65e0\u6cd5\u8bc6\u522b\u7aef\u53e363333\u4e0a\u7684\u76ee\u6807\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u8ba4\u5f97\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\u3002\n\u8be5\u811a\u672c\u4f7f\u7528WebSockets\u8fde\u63a5\u5230\u6307\u5b9a\u7aef\u53e3\u4e0a\u7684\u672c\u5730\u8ba1\u7b97\u673a127.0.0.1\u6765\u6267\u884c\u8fd9\u4e9b\u626b\u63cf\u3002\n\u6839\u636e\u6700\u5148\u62a5\u9053\u7aef\u53e3\u626b\u63cf\u7684NullSweep\u7684\u8bf4\u6cd5\uff0c\u5728\u4f7f\u7528Linux\u6d4f\u89c8\u7f51\u7ad9\u65f6\u4e0d\u4f1a\u53d1\u751f\u7aef\u53e3\u626b\u63cf\u3002\n\u8fd9\u5f88\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u8981\u626b\u63cf\u7684\u7a0b\u5e8f\u90fd\u662fWindows\u8fdc\u7a0b\u8bbf\u95ee\u5de5\u5177\u3002\n\u7531\u4e8e\u7aef\u53e3\u626b\u63cf\u53ea\u67e5\u627e\u8fdc\u7a0b\u8bbf\u95ee\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u662f\u4e3a\u4e86\u68c0\u67e5\u7528\u4e8e\u8fdb\u884c\u6b3a\u8bc8\u6027\u6613\u8da3\u8d2d\u4e70\u7684\u53d7\u635f\u8ba1\u7b97\u673a\u3002\n2016\u5e74\uff0c\u6709\u5927\u91cf\u62a5\u9053\u79f0\uff0c\u4eba\u4eec\u7684\u7535\u8111\u901a\u8fc7TeamViewer\u88ab\u63a5\u7ba1\uff0c\u5e76\u88ab\u7528\u6765\u5728eBay\u4e0a\u8fdb\u884c\u6b3a\u8bc8\u6027\u8d2d\u4e70\u3002\n\u7531\u4e8e\u8bb8\u591aeBay\u7528\u6237\u4f7f\u7528cookie\u81ea\u52a8\u767b\u5f55\u8be5\u7f51\u7ad9\uff0c\u653b\u51fb\u8005\u80fd\u591f\u8fdc\u7a0b\u63a7\u5236\u8ba1\u7b97\u673a\u5e76\u8bbf\u95eeeBay\u8fdb\u884c\u8d2d\u4e70\u3002\n\u4e8b\u60c5\u53d8\u5f97\u5982\u6b64\u7cdf\u7cd5\uff0c\u4ee5\u81f3\u4e8e\u4e00\u4e2a\u4eba\u521b\u5efa\u4e86\u4e00\u4e2a\u7535\u5b50\u8868\u683c\u6765\u8ddf\u8e2a\u6240\u6709\u62a5\u544a\u7684\u653b\u51fb\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u63d0\u5230\u4e86eBay\u3002\n\u8fd9\u4e9b\u7aef\u53e3\u626b\u63cf\u4ecd\u7136\u662f\u4fb5\u5165\u6027\u7684\uff0c\u5e76\u4e0d\u662f\u8bb8\u591a\u7528\u6237\u5728\u8bbf\u95ee\u7ad9\u70b9\u65f6\u5e0c\u671b\u53d1\u751f\u7684\u4e8b\u60c5\u3002\nBleepingcomputer\u5df2\u5c31\u6b64\u7aef\u53e3\u626b\u63cf\u4e0eeBay\u8054\u7cfb\uff0c\u4f46\u76ee\u524d\u5c1a\u672a\u6536\u5230\u56de\u590d\u3002", "note_en": "When visiting the eBay.com site, a script will run that performs a local\u00a0port scan of your computer to\u00a0detect remote support and remote access applications.\n Many of these ports are related to remote access/remote support tools such as the Windows Remote Desktop, VNC, TeamViewer, Ammy Admin, and more.\n After learning about this, BleepingComputer conducted a test and can confirm that eBay.com is indeed performing a local port scan of 14 different ports when visiting the site.\n  This scan is being conducted by a  check.js script [ archived] on eBay.com that attempts to connect to the following ports:\n  The fourteen different ports that are scanned and their associated programs and eBay reference string is listed below.\n  BleepingComputer has not been able to identify the targeted program on port 63333. If you recognize it, please let us know.\n The script performs these scans using WebSockets to connect to 127.0.0.1, which is the local computer, on the specified port.\n  According to Nullsweep, who  first reported on the port scans, they do not occur when browsing the site with Linux.\n  This makes sense as the programs being scanned for are all Windows remote access tools.\n  As the port scan is only looking for remote access programs, it is most likely being done to check for compromised computers used to make fraudulent eBay purchases.\n In 2016, reports were flooding in that people&#39;s computers were being  taken over through TeamViewer and used to make fraudulent purchases on eBay.\n As many eBay users use cookies to automatically login to the site, the attackers were able to remote control the computer and access eBay to make purchases.\n It got so bad that one person  created a spreadsheet to keep track of all the reported attacks. As you can see, many of them reference eBay.\n These port scans are still intrusive and not something that many users would want to happen when visiting a site.\n BleepingComputer has contacted eBay about this port scan but has not heard back at this time.", "posttime": "2020-05-25 19:49:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u8bbf\u95ee\u8005,port,ebay", "title": "\u6613\u8da3\u7aef\u53e3\u626b\u63cf\u8bbf\u95ee\u8005\u7684\u8ba1\u7b97\u673a\u4ee5\u67e5\u627e\u8fdc\u7a0b\u8bbf\u95ee\u7a0b\u5e8f", "title_en": "eBay port scans visitors' computers for remote access programs", "transed": 1, "url": "https://www.bleepingcomputer.com/news/security/ebay-port-scans-visitors-computers-for-remote-access-programs/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u8bbf\u95ee\u8005", "port", "ebay"]}, {"category": "", "categoryclass": "", "imagename": "d73065cee3829a93a1bfeee1a87fa81d.png", "infoid": 1003623, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u9879\u76ee\uff0c\u65e8\u5728\u6536\u96c6\u5168\u7403\u4f7f\u7528BSD\u7684\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5e2e\u52a9BSD\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u534f\u4f5c\u8c03\u8bd5\u786c\u4ef6\u76f8\u5173\u95ee\u9898\u3001\u68c0\u67e5BSD\u517c\u5bb9\u6027\u548c\u67e5\u627e\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u5bf9\u60a8\u7684\u8ba1\u7b97\u673a\u8fdb\u884c\u4e00\u6b21\u63a2\u7d22\uff0c\u4ee5\u4fbf\u53c2\u4e0e\u5e76\u8be6\u7ec6\u53d1\u73b0\u786c\u4ef6\u4e16\u754c\u3002\u4e0eBSD\u5f00\u53d1\u4eba\u5458\u5171\u4eab\u60a8\u7684\u63a2\u6d4b\u548c\u65e5\u5fd7\uff0c\u4ee5\u8c03\u8bd5\u548c\u4fee\u590d\u60a8\u8ba1\u7b97\u673a\u4e0a\u7684\u95ee\u9898\u3002\u8bf7\u5728\u6211\u4eec\u7684\u535a\u5ba2\u4e0a\u9605\u8bfb\u66f4\u591a\u5185\u5bb9\u3002\n3f72b768\uff1b\u8054\u60f320AR003VMS b44fe941\uff1bSuperMicro X10DRi-T4+\u53f0\u5f0f\u673a(SSG-2028R-E1CR24N)3e9076f2\uff1bHP ZBook 15 23ec663f\uff1bHP ZBook 15 528e3782\uff1bMiTAC PH12SI\u53f0\u5f0f\u673a02926228\uff1b\u5176\u4ed6PC 7def094a\uff1b\u8054\u60f3ThinkPad X270 20HNCT.\u3002..\u3002", "note_en": "This is a project to collect hardware details of BSD-powered computers over the world and help BSD users and developers to collaboratively debug hardware related issues, check for BSD-compatibility and find drivers.\n Make a probe of your computer in order to participate and discover the world of hardware in details. Share your probes and logs with BSD developers to debug and fix problems on your computer. Please read more in   our blog.\n           3f72b768\u00a0 Lenovo 20AR003VMS   b44fe941\u00a0 Supermicro X10DRi-T4+ desktop PC (SSG-2028R-E1CR24N)   3e9076f2\u00a0 HP ZBook 15   23ec663f\u00a0 HP ZBook 15   528e3782\u00a0 MiTAC PH12SI desktop PC   02926228\u00a0 other PC   7def094a\u00a0 Lenovo ThinkPad X270 20HNCT...   ...", "posttime": "2020-05-25 19:47:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,bsd", "title": "BSD\u786c\u4ef6-\u5168\u7403\u91c7\u7528BSD\u6280\u672f\u7684\u8ba1\u7b97\u673a\u8be6\u7ec6\u4fe1\u606f", "title_en": "BSD Hardware \u2013 Details of BSD Powered Computers over the World", "transed": 1, "url": "https://bsd-hardware.info", "via": "", "real_tags": ["\u786c\u4ef6", "bsd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003622, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u521d\u6211\u60f3\u5206\u522b\u5199\u8fd9\u4e24\u4e2a\u4e3b\u9898\u7684\u6587\u7ae0(\u6a21\u62df\u65f6\u95f4\u548c\u6d4b\u8bd5\u4e8b\u4ef6\u5faa\u73af)\uff0c\u4f46\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u610f\u8bc6\u5230\u6211\u60f3\u8981\u8c08\u8bba\u7684\u4e1c\u897f\u592a\u76f8\u5173\u4e86\uff1a\u5f53\u6211\u9700\u8981\u6a21\u62df\u65f6\u95f4\u65f6\uff0c\u901a\u5e38\u662f\u7528\u5b83\u6765\u6d4b\u8bd5\u4e00\u4e9b\u4e8b\u4ef6\u5faa\u73af\uff0c\u800c\u5f53\u6211\u6d4b\u8bd5\u4e8b\u4ef6\u5faa\u73af\u65f6\uff0c\u901a\u5e38\u4e5f\u4f1a\u6d89\u53ca\u5230\u6a21\u62df\u65f6\u95f4\u3002\n\u6240\u4ee5\u6700\u540e\uff0c\u628a\u6240\u6709\u8fd9\u4e9b\u90fd\u6574\u5408\u5230\u4e00\u7bc7\u6587\u7ae0\u91cc\u611f\u89c9\u66f4\u597d\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5230\u4eca\u5929\u4e3a\u6b62\uff0cgo stdlib\u4e2d\u7684\u65f6\u95f4\u51fd\u6570\u662f\u4e0d\u53ef\u6a21\u62df\u7684\uff1a\u6bcf\u5f53\u6211\u4eec\u4f7f\u7528\u4f8b\u5982time.Now()\u6216time.NewTicker\u7b49\u65f6\uff0c\u5b83\u4eec\u5c06\u4f7f\u7528\u5b9e\u65f6\uff0c\u8fd9\u4f7f\u5f97\u5bf9\u65f6\u95f4\u654f\u611f\u7684\u4ee3\u7801\u5f88\u96be\u6b63\u786e\u6d4b\u8bd5\u3002\nhttps://github.com/benbjohnson/clock\uff1a\u662f\u4e00\u4e2a\u66f4\u5b8c\u6574\u7684\u5e93\uff0c\u5b83\u8bd5\u56fe\u6a21\u62dfstdlib\u65f6\u95f4\u5305\u7684\u6240\u6709\u529f\u80fd\u3002\n\u5728Github\u4e2d\u4e5f\u6709\u4e00\u4e2a\u5173\u4e8e\u53ef\u6a21\u4eff\u65f6\u95f4\u652f\u6301\u7684\u8001\u95ee\u9898\uff0c\u5176\u4e2d\u63d0\u5230\u4e86\u4e0a\u9762\u7684\u4e24\u4e2a\u5e93\uff0c\u6211\u786e\u5b9e\u6709\u4e00\u4e9b\u5e0c\u671b\uff0c\u5632\u7b11\u65f6\u95f4\u8fdf\u65e9\u4f1a\u4ee5\u67d0\u79cd\u5f62\u5f0f\u5305\u62ec\u5728stdlib\u4e2d\uff0c\u4f46\u6211\u4eec\u8981\u6709\u8010\u5fc3\u3002\u56e0\u6b64\uff0c\u4ece\u4eca\u5929\u8d77\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u62e5\u6709\u88ab\u5632\u5f04\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5b9a\u5236\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u91cd\u70b9\u4ecb\u7ecd\u7b2c\u4e8c\u4e2a\u5e93\uff0cbenbjohnson/Clock\uff0c\u8fd9\u662f\u6211\u5df2\u7ecf\u4f7f\u7528\u4e86\u51e0\u5e74\u7684\u5e93(\u7684\u4e00\u4e2a\u5206\u652f)\uff0c\u603b\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u4f7f\u7528\u5f97\u5f53\uff0c\u5b83\u5c31\u80fd\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u5b83\u3002\n\u8fd9\u4e2a\u5e93\u7684\u6838\u5fc3\u53ea\u6709\u4e00\u4e2a\u540d\u4e3aClock\u7684\u63a5\u53e3\uff0c\u5b83\u8bd5\u56fe\u6a21\u62df\u65f6\u95f4\u5305\u7684\u529f\u80fd\uff1a\n//Clock\u8868\u793a\u6807\u51c6\u5e93Time\u5305\u4e2d\u51fd\u6570\u7684\u63a5\u53e3//\u3002\u65f6\u949f\u5c01\u88c5\u4e2d\u63d0\u4f9b\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u7b2c\u4e00\u4e2a//\u662f\u4e00\u4e2a\u5b9e\u65f6\u65f6\u949f\uff0c\u5b83\u7b80\u5355\u5730\u5305\u88c5\u4e86\u65f6\u95f4\u5305\u7684\u529f\u80fd\u3002//\u79d2\u662f\u6a21\u62df\u65f6\u949f\uff0c\u53ea\u6709\u5728//\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8c03\u6574\u65f6\u624d\u4f1a\u524d\u8fdb\u3002\u952e\u5165\u65f6\u949f\u63a5\u53e3{\u5728(d\u65f6\u95f4.Duration)&lt\uff1b-\u66f4\u6539\u65f6\u95f4\u4e4b\u540e\u3002Time AfterFunc(d\u65f6\u95f4.\u6301\u7eed\u65f6\u95f4\uff0cf\u51fd\u6570())*Timer Now()\u65f6\u95f4\u3002\u4ece(t\u65f6\u95f4\u8d77)\u81f3\u4eca\u5df2\u6709\u4e00\u6bb5\u65f6\u95f4\u3002\u65f6\u95f4)\u65f6\u95f4\u3002\u6301\u7eed\u65f6\u95f4\u7761\u7720(d\u65f6\u95f4\u3002\u6301\u7eed\u65f6\u95f4)\u6ef4\u7b54(d\u65f6\u95f4\u3002\u6301\u7eed\u65f6\u95f4)&lt\uff1b-\u66f4\u6539\u65f6\u95f4\u3002Time Ticker(%d\u65f6\u95f4.Duration)*Ticker Timer(%d\u65f6\u95f4.Duration)*Timer}\n\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u4f8b\u5982time.Now()\uff0c\u800c\u662f\u9700\u8981\u8fd9\u4e2a\u65f6\u949f\u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u4f7f\u7528\u5b83\u3002\u6240\u4ee5\u4e0d\u662f\u8fd9\u6837\uff0c\u800c\u662f\uff1a\n//\u5728\u521d\u59cb\u5316\u4ee3\u7801\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u521b\u5efaClock\u63a5\u53e3\u7684\u5b9e\u4f8b\uff1aC\uff1a=Clock\u3002new()\uff1a//\u7a0d\u540e\u5728\u67d0\u4e2a\u5730\u65b9\u4f7f\u7528\u8be5\u5b9e\u4f8b\uff1afmt\u3002Println(c.\u3002\u73b0\u5728()\u3002\n\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u53d1\u73b0\u81ea\u5df1\u6709\u4e00\u4e2a\u65f6\u949f\u5b9e\u4f8b\u4f5c\u4e3a\u67d0\u4e9b\u4e1c\u897f\u7684\u53c2\u6570\u7684\u4e00\u90e8\u5206\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u952e\u5165foo struct{lock lock.Clock}\uff0c\u7136\u540e\u952e\u5165FooParams struct{lock lock.Clock}\u548cfunc NewFoo(params*FooParams)*foo{foo\uff1a=&amp\uff1bfoo{lock\uff1aparams.Clock\uff0c}//\u6ce8\u610f\uff1a\u6211\u4eec\u6709\u610f\u4e0d\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002\u6309\u65f6\u949f\u8ba1\u65f6\u3002\u65b0\u5efa\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684//\u8b66\u544a\u90e8\u5206\u3002\u8fd4\u56defoo}\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u663e\u7136\u5e94\u8be5\u5728foo\u7684\u65b9\u6cd5\u4e2d\u4f7f\u7528\u65f6\u949f\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5b9e\u65f6\u51fd\u6570\uff1a\nfoo\uff1a=NewFoo(&amp\uff1bFooParams{CLOCK\uff1aCLOCK\u3002new()\uff0c//\u4f7f\u7528\u5b9e\u65f6}))//\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528foo\u3002\nconst testTimeLayout=&#34\uff1b2006\u5e741\u67082\u65e515\uff1a04\uff1a05.000&#34\uff1bunc TestFoo(t*testing.t){//\u521b\u5efa\u6a21\u62df\u65f6\u949fmockedClock\uff1a=\u65f6\u949f\u3002NewMock()NOW\uff0c_\uff1a=\u65f6\u95f4\u3002parse(testTimeLayout\uff0c&#34\uff1bMay 1,2020 at 00\uff1a00\uff1a00.000&#34\uff1b)mockedClock\u3002\u8bbe\u7f6e(\u73b0\u5728)foo\uff1a=NewFoo(&amp\uff1bFooParams{Clock\uff1amockedClock\uff0c})*//\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6d4b\u8bd5foo\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u63d0\u524d\u6a21\u62df\u65f6\u95f4\uff1amockedClock.Add(1*time.Second)foo.PrintTime()*mockedClock.Add(1*time.Second)foo.PrintTime()}\u3002\n\u8fd9\u4e00\u5207\u90fd\u975e\u5e38\u76f4\u622a\u4e86\u5f53\uff0c\u4f46\u4e5f\u4e0d\u662f\u90a3\u4e48\u6709\u8da3\u3002\u5f53\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u5e26\u8ba1\u65f6\u5668\u6216\u62a5\u4ef7\u5668\u7684Goroutine\u65f6\uff0c\u4e8b\u60c5\u4f1a\u53d8\u5f97\u66f4\u52a0\u68d8\u624b\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0cClock\u8bd5\u56fe\u6a21\u4effstdlib\u65f6\u95f4\u5305\uff0c\u6240\u4ee5\u5b83\u5f53\u7136\u6709\u8ba1\u65f6\u5668\u548c\u62a5\u4ef7\u5668\u3002\u8981\u6b63\u786e\u4f7f\u7528\u5b83\u4eec\uff0c\u5e76\u907f\u514d\u610f\u5916(\u5982flkey\u6d4b\u8bd5)\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e86\u89e3\u88ab\u5632\u7b11\u7684\u8ba1\u65f6\u5668\u548c\u81ea\u52a8\u62a5\u4ef7\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u662f\u5f88\u6709\u7528\u7684\u3002\n(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u662f\u7684\uff0c\u8be5\u65b9\u6cd5\u7684\u540d\u5b57\u5f88\u5947\u602a\uff0c\u547d\u540d\u4e3aTicker\uff0c\u800c\u4e0d\u662fstdlib\u4e2d\u7684NewTicker\uff1bTimer vs NewTimer\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u662f\u5426\u662f\u6545\u610f\u7684\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u4e0d\u4f1a\u9020\u6210\u592a\u5927\u4f24\u5bb3\uff0c\u53ea\u662f\u8981\u8bb0\u4f4f\u4e00\u4e9b\u4e8b\u60c5)\u3002\n\u56e0\u6b64\uff0c\u5982\u679cc\u5b9e\u4f8b\u8868\u793a\u5b9e\u9645(\u800c\u4e0d\u662f\u6a21\u62df)\u65f6\u95f4\uff0c\u90a3\u4e48\u6b63\u5982\u60a8\u6240\u671f\u671b\u7684\u90a3\u6837\uff0cTicker\u65b9\u6cd5\u53ea\u662f\u59d4\u6258\u7ed9Time.NewTicker\uff0c\u9664\u6b64\u4e4b\u5916\u4e0d\u505a\u66f4\u591a\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u5982\u679cc\u662f\u6a21\u62df\u65f6\u95f4\uff0c\u5219\u8c03\u7528Ticker\u4f1a\u5728\u5185\u90e8\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684\u6a21\u62df\u81ea\u52a8\u6536\u62a5\u673a\uff0c\u56e0\u6b64\u6bcf\u5f53\u6211\u4eec\u7a0d\u540e\u901a\u8fc7\u8c03\u7528add\u5c06\u6a21\u62df\u65f6\u95f4\u63d0\u524d\u65f6\uff0c\u5148\u524d\u521b\u5efa\u7684\u81ea\u52a8\u6536\u62a5\u673a\u5c06\u5728\u9002\u5f53\u7684\u65f6\u5019\u63a5\u6536\u5230\u81ea\u52a8\u6536\u62a5\u673a\u3002\n\u540c\u6837\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u901a\u8fc7\u8c03\u7528add\u6765\u63a8\u8fdb\u6a21\u62df\u65f6\u95f4\u65f6\uff0c\u6240\u6709\u9700\u8981\u89e6\u53d1\u7684\u5b9a\u65f6\u5668\u548c\u5b9a\u65f6\u5668\u90fd\u4f1a\u5728Goroutine\u8c03\u7528add\u4e2d\u540c\u6b65\u89e6\u53d1\u3002\u4f8b\u5982\uff0c\u62e5\u6709\u4ee5\u4e0b\u5185\u5bb9\uff1a\nC\uff1a=\u949f\u3002NewMock()NOW\uff0c_\uff1a=\u65f6\u95f4\u3002parse(testTimeLayout\uff0c&#34\uff1b20205.01\uff0c00\uff1a00\uff1a00.000&#34\uff1b)c.\u3002\u8bbe\u7f6e(NOW)\uff1a//\u4f7f\u7528AfterFunc\u521b\u5efa\u4e00\u4e9b\u8ba1\u65f6\u5668\uff0c\u5e26\u6709\u81ea\u5b9a\u4e49\u56de\u8c03c.AfterFunc(200*time.Millissec\uff0cfunc(){fmt.Println(&#34\uff1bAfterFunc1 fired\uff0ctime\uff1a&#34\uff1b\uff0cc.Now())})c.AfterFunc(50*time.Millissec\uff0cfunc(){fmt.Println(&#34\uff1bAfterFunc2 fired\uff0cnow())})//\u521b\u5efa\u4e00\u4e9b\u5e38\u89c4\u8ba1\u65f6\u5668var mytimers[]*\u65f6\u949f.Timer mytimers=append(mytimers\uff0cc.Timer(1*time.Second))mytimers=append(mytimers\uff0cc.Timer(2*time.Second))mytimers=append(mytimers\uff0cc.Timer(5*time.Second))mytimers=append(mytimers\uff0cc.Timer(100*time.Millisond)\u3002\n\u5230Add Call\u8fd4\u56de\u65f6\uff0c\u6211\u4eec\u7684\u4e24\u4e2aAfterFunc\u56de\u8c03\u5df2\u7ecf\u5728\u8fd9\u4e2a\u76f8\u540c\u7684Goroutine\u4e2d\u88ab\u8c03\u7528\uff0c\u6240\u6709\u8fd9\u4e9b\u5e38\u89c4\u8ba1\u65f6\u5668\u90fd\u6536\u5230\u4e86\u4e00\u6761\u6d88\u606f\u5230\u5b83\u4eec\u7684C\u901a\u9053(\u9664\u4e865\u79d2\u7684\u90a3\u4e2a\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5c06\u65f6\u95f4\u63d0\u524d\u4e863\u79d2)\uff0c\u5e76\u4e14\u81ea\u52a8\u6536\u62a5\u673a\u88ab\u5c1d\u8bd5\u5411\u5b83\u7684C\u901a\u9053\u53d1\u9001\u6d88\u606f6\u6b21\uff0c\u4f46\u662f\u53ea\u6709\u7b2c\u4e00\u6b21\u6210\u529f\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eba\u4ece\u8be5\u901a\u9053\u8bfb\u53d6\u6570\u636e\u3002\u56e0\u6b64\uff0c\u5728\u6dfb\u52a0\u8c03\u7528\u4e4b\u540e\uff0c\u5df2\u7ecf\u6253\u5370\u4e86\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u68c0\u67e5mytimers\u5207\u7247\uff0c\u5e76\u4ece\u5b83\u4eec\u7684C\u901a\u9053\u83b7\u53d6\u6d88\u606f\uff1a\n\u5bf9\u4e8ei\uff0ctmr\uff1a=range mytimers{var val string select{case t\uff1a=&lt\uff1b-tmr.c\uff1aval=fmt.Sprintf(&#34\uff1b%s&#34\uff1b\uff0ct)\u9ed8\u8ba4\u503c\uff1aval=&#34\uff1b\u5c1a\u672a\u4ecefmt\u6fc0\u53d1&#34\uff1b}\u3002Printf(&#34\uff1b\u8ba1\u65f6\u5668#%d\uff1a%s\\n&#34\uff1b\uff0ci\uff0cval)}\n\u5b9a\u65f6\u5668#0\uff1a2020-05-01 00\uff1a00\uff1a01+0000\u534f\u8c03\u4e16\u754c\u65f6#1\uff1a2020-05-01 00\uff1a00\uff1a02+0000\u534f\u8c03\u4e16\u754c\u65f6#2\uff1a\u5c1a\u672a\u89e6\u53d1\u5b9a\u65f6\u5668#3\uff1a2020-05-01 00\uff1a00\uff1a00.1+0000\u534f\u8c03\u4e16\u754c\u65f6\u3002\n\u53e6\u4e00\u4e2a\u91cd\u8981\u7684(\u4e5f\u662f\u607c\u4eba\u7684)\u7ec6\u8282\u662f\uff0c\u5230\u4eca\u5929\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u901a\u7528\u65b9\u6cd5\u6765\u544a\u8bc9Go\u8fd0\u884c\u65f6\uff1a\u201c\u8fd0\u884c\u6240\u6709\u53ef\u8fd0\u884c\u7684Goroutines\uff0c\u76f4\u5230\u5b83\u4eec\u963b\u585e\u4e3a\u6b62\u201d\u3002\u4f46\u662f\uff0c\u4f7f\u7528\u6a21\u62df\u65f6\u95f4\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u786e\u5b9e\u9700\u8981\u8fd9\u6837\u7684\u65f6\u95f4\uff1a\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u4ece\u67d0\u4e2a\u81ea\u52a8\u6536\u62a5\u673a\u7684C\u901a\u9053\u8bfb\u53d6\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u5e76\u4e14\u6211\u4eec\u63d0\u524d\u4e86\u6a21\u62df\u65f6\u95f4\uff0c\u4ee5\u4fbf\u8fd9\u4e2aC\u901a\u9053\u53ef\u80fd\u5df2\u7ecf\u63a5\u6536\u5230\u4e00\u6761\u6d88\u606f(\u56e0\u4e3a\u81ea\u52a8\u6536\u62a5\u673a\u53ef\u80fd\u5df2\u7ecf\u6253\u52fe\u4e86)\uff0c\u6211\u4eec\u60f3\u8981\u786e\u4fdd\u5728\u6211\u4eec\u7ee7\u7eed\u4e4b\u524d\uff0c\u8fd9\u4e2aGoroutine\u5904\u7406\u4e86\u8be5\u6d88\u606f\u3002\n\u4f46\u662f\u7531\u4e8e\u6ca1\u6709\u5f88\u597d\u7684\u901a\u7528\u65b9\u6cd5\uff0c\u65f6\u949f\u5e93\u4f7f\u7528\u4e86\u4e00\u79cd\u7cdf\u7cd5\u7684\u65b9\u6cd5\uff1a\u6bcf\u6b21\u63a8\u8fdb\u6a21\u62df\u65f6\u95f4\uff0c\u5b83\u4e5f\u53ea\u4f11\u77201ms(\u6211\u7684\u610f\u601d\u662f\uff0c\u5b83\u4f11\u7720\u7684\u662f\u201c\u771f\u6b63\u7684\u201d1ms\uff0c\u800c\u4e0d\u662f\u6a21\u62df\u76841ms)\u3002\u8fd9\u786e\u5b9e\u610f\u5473\u7740\u4f7f\u7528\u5b83\u7684\u6d4b\u8bd5\u5728\u5b9a\u4e49\u4e0a\u662f\u4e0d\u53ef\u9760\u7684(\u56e0\u4e3a\u7761\u7720\u65f6\u95f4\u957f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4efb\u4f55Goroutine\u7a0b\u5e8f\u90fd\u4f1a\u5b9e\u9645\u8fd0\u884c)\uff0c\u800c\u4e14\u5982\u679c\u6d4b\u8bd5\u5c06\u6a21\u62df\u65f6\u95f4\u63d0\u524d\u4e86\u5f88\u591a\uff0c\u6d4b\u8bd5\u5c31\u4f1a\u663e\u8457\u53d8\u6162(\u56e0\u4e3a\u7761\u7720\u201c1ms\u201d\u663e\u7136\u4e0d\u80fd\u7cbe\u786e\u5730\u7761\u77201ms\uff1a\u901a\u5e38\u5b83\u6700\u7ec8\u4f1a\u957f\u5f97\u591a)\u3002\n\u56e0\u6b64\uff0c\u867d\u7136\u6211\u540c\u610f\u4f5c\u4e3a\u6700\u901a\u7528\u7684\u903b\u8f91\uff0c\u9ed8\u8ba4\u53ea\u4f11\u7720\u4e00\u4e9b\u4efb\u610f\u7684\u6301\u7eed\u65f6\u95f4(\u59821ms)\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u6211\u76f8\u4fe1\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e00\u4e9b\u81ea\u5b9a\u4e49\u903b\u8f91\u8986\u76d6\u8fd9\u79cd\u884c\u4e3a\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u6709\u4e00\u4e9b\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u9760\u65b9\u6cd5\u6765\u786e\u4fdd\u6211\u4eec\u9700\u8981\u8fd0\u884c\u7684Goroutine\u786e\u5b9e\u8fd0\u884c\u4e86(\u6bd4\u5982\u6dfb\u52a0\u4e00\u4e9b\u53ef\u6a21\u62df\u7684\u56de\u8c03\uff0c\u53ea\u8981\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u4e86\u67d0\u4e9b\u4e8b\u4ef6\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u56de\u8c03)\u3002\n\u56e0\u6b64\uff0c\u6211\u4e0d\u5f97\u4e0d\u5c06\u65f6\u949f\u5e93\u6d3e\u751f\u4e3ahttps://github.com/dimonomid/clock\u5e76\u5b9e\u73b0\u5b83\uff1b\u5982\u679c\u60a8\u611f\u5174\u8da3\uff0c\u8fd9\u91cc\u662f\u627f\u8bfa\uff1a\u4f7fGosed\u7684\u5b9e\u73b0\u53ef\u914d\u7f6e\u3002\nAPI\u662f\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u65b0\u7684\uff1a\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u53ea\u8c03\u7528clock.NewMock()\uff0c\u5e76\u4e14\u6211\u4eec\u5c06\u5f97\u5230\u76f8\u540c\u7684\u6a21\u62df\u65f6\u949f\uff0c\u5b83\u5728\u63a8\u8fdb\u6a21\u62df\u65f6\u95f4\u65f6\u4ec5\u4f11\u77201ms\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8986\u76d6\u8be5\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\nc\uff1a=lock.NewMockOpt(lock.MockOpt{Gosked\uff1afunc(){//\u63d0\u524d\u6a21\u62df\u65f6\u95f4\u540e\u8fd0\u884c\u7684\u4efb\u4f55\u81ea\u5b9a\u4e49\u903b\u8f91}\uff0c})\u3002\n\u6211\u7684\u90a3\u4e9b\u66f4\u6539\u7684\u62c9\u53d6\u8bf7\u6c42\u5df2\u7ecf\u6253\u5f00\u4e86\u8fd1\u4e24\u5e74\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e0d\u786e\u5b9a\u5b83\u662f\u5426\u4f1a\u5408\u5e76\u5230\u4e0a\u6e38\uff0c\u6240\u4ee5\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528\u6211\u7684\u53c9\u5b50\u3002\n\u6211\u4eec\u7a0d\u540e\u5c06\u8ba8\u8bba\u6b64Gosted\u56de\u8c03\u7684\u66ff\u4ee3\u5b9e\u73b0\uff0c\u4f46\u73b0\u5728\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u5207\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\u3002\n\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7ec4\u4ef6foo\uff0c\u5b83\u5360\u7528\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694(\u59821\u79d2)\u548c\u4e00\u4e2aint\u7684\u8f93\u51fa\u901a\u9053\uff0c\u5e76\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u95f4\u9694(\u59820\u30011\u30012\u7b49)\u5411\u8be5\u901a\u9053\u53d1\u9001\u4e00\u4e2a\u4e0d\u65ad\u9012\u589e\u7684\u6570\u5b57\u3002\nPackage Foo\u548cimport(&#34\uff1btime&#34\uff1bt&#34\uff1bgithub.com/dimonomid/lock&34\uff1b)\u7c7b\u578bfoo struct{nextNum int out chan&lt\uff1b-int\u65f6\u949f\u65f6\u949f.Clock}\u7c7b\u578bFooParams struct{lock.Clock//out\u662f\u5411out Chan&lt\uff1b\u4f20\u9012\u6570\u5b57\u7684\u901a\u9053-int//Interval\u662f\u5c06\u6570\u5b57\u4f20\u9012\u5230out\u95f4\u9694\u65f6\u95f4\u7684\u9891\u7387\u3002Duration}\uff1a//NewFoo\u521b\u5efa\u5e76\u8fd4\u56defoo\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd8\u542f\u52a8\u4e00\u4e2a\u5185\u90e8//goroutine\uff0c\u5b83\u5c06\u5411\u63d0\u4f9b\u7684\u9891\u9053params.Out\u53d1\u9001\u6570\u5b57\u3002func NewFoo(params*FooParams)*foo{if params.Clock==nil{\u9700\u8981\u65f6\u949f&#34\uff1b)}*foo\uff1a=&amp\uff1bfoo{lock\uff1aparams.Clock\uff0cout\uff1aparams.out\uff0c}\u5982\u679cfoo.lock==nil{foo.lock=lock.New()}\uff0c\u5219\u4f7f\u7528foo.run(params.Interval)\u6216return foo}infunc(foo*foo)run(Interval Time.Duration){//\u6ce8\u610f\uff1a\u5728\u6b64Goroutine\u4e2d\u521b\u5efa\u81ea\u52a8\u6536\u62a5\u673a\u65f6\u51fa\u73b0\u95ee\u9898\uff0c//\u5982\u4e0b\u6240\u8ff0\u3002\u80a1\u7968\u4ee3\u7801\uff1a=foo.lock.Ticker(\u95f4\u9694)\uff0c{&lt\uff1b-ticker.C foo.out&lt\uff1b-foo.nextNum foo.nextNum+=1}}\u3002\n\u57282006\u5e741\u67082\u65e515\uff1a04\uff1a05.000&#34\uff1bFunc TestFoo(t*test.t){//\u521b\u5efa\u6a21\u62df\u65f6\u95f4\uff0c\u521d\u59cb\u5316\u4e8e2020\u5e74\u5348\u591c5\uff1a04\uff1b05.000&#34\uff1bFunc TestFoo(t*Testing.T){//\u521b\u5efa\u6a21\u62df\u65f6\u95f4\uff0c\u521d\u59cb\u5316\u65f6\u95f4\u4e3a5\u67081\u65e5\u96f6\u65f6\u96f6\u5206)(&#34\uff1bTesting&34\uff1b&#34\uff1btime&#34\uff1bTesting&#34\uff1bgithub.com/dimonomid/lock&#34\uff1b)\uff1bConst testTimeLayout=&#34\uff1bTestLayout=&#34\uff1bTestLayout=&#34\uff1bmockedClock\uff1a=\u65f6\u949f\u3002NewMock()NOW\uff0c_\uff1a=\u65f6\u95f4\u3002parse(testTimeLayout\uff0c&#34\uff1bMay 1,2020 at 00\uff1a00\uff1a00.000&#34\uff1b)mockedClock\u3002\u8bbe\u7f6e(\u73b0\u5728)//\u521b\u5efa\u8f93\u51fa\u901a\u9053\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u68c0\u67e5\u5b83\u662f\u5426\u63a5\u6536\u5230\u6211\u4eec//\u671f\u671b\u7684\u6570\u5b57\u3002out\uff1a=make(chan int\uff0c1)//\u521b\u5efafoo\uff0c\u5b83\u8fd8\u5c06\u542f\u52a8\u5185\u90e8goroutine\u4ee5//\u5411\u901a\u9053\u53d1\u9001\u6570\u5b57\u3002NewFoo(&amp\uff1bFooParams{lock\uff1amockedClock\uff0cout\uff1aout\uff0cinterval\uff1a1*time.Second\uff0c})2//\u65ad\u8a00\u6211\u4eec\u6536\u5230\u9884\u671f\u7684\u6570\u5b57mockedClock.Add(1*time.Second)assertRecvInt(t\uff0cout\uff0c0)nmockedClock.Add(1*time.Second)assertRecvInt(t\uff0cout\uff0c1)*mockedClock.Add(1*time.Second\u3002-chan int\uff0cwant int){select{case get\uff1a=&lt\uff1b-ch\uff1aif get\uff01=Want{t.Errorf(&#34\uff1bwant%d\uff1b\uff0cget%d&#34\uff1b\uff0cwant\uff0cget)}\u9ed8\u8ba4\u503c\uff1at.Errorf(&#34\uff1bwant%d\uff1b\uff0cget&#34\uff1b\uff0cwant)}}\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd0\u884c\u5b83\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6d4b\u8bd5\u7ecf\u5e38\u5931\u8d25\uff0c\u7ed3\u679c\u4e0d\u786e\u5b9a\u3002\u6709\u65f6\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a\n-\u5931\u8d25\uff1aTestFoo(0.01s)foo_test.Go\uff1a50\uff1a\u60f3\u89810\uff0c\u6ca1\u6709\u5f97\u5230foo_test.Go\uff1a47\uff1a\u60f3\u89811\uff0c\u5f97\u52300 foo_test.Go\uff1a47\uff1a\u60f3\u89812\uff0c\u5f97\u52301\u3002\n-\u5931\u8d25\uff1aTestFoo(0.01s)foo_test.Go\uff1a50\uff1a\u60f3\u89810\uff0c\u6ca1\u6709\u5f97\u5230foo_test.Go\uff1a47\uff1a\u60f3\u89811\uff0c\u6ca1\u6709\u5f97\u5230foo_test.Go\uff1a47\uff1a\u60f3\u89812\uff0c\u5f97\u52300\u3002\n\u4e5f\u53ef\u80fd\u662f\u522b\u7684\u4ec0\u4e48\u3002\u56e0\u6b64\uff0c\u5f88\u660e\u663e\uff0c\u5728\u5982\u4f55\u4f7f\u7528\u88ab\u5632\u7b11\u7684\u65f6\u95f4\u65b9\u9762\u5b58\u5728\u7740\u4e00\u573a\u7ade\u8d5b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u573a\u7ade\u8d5b\u662f\u5728\u521b\u9020\u4e00\u4e2a\u80a1\u7968\u4ee3\u7801\u548c\u63a8\u8fdb\u88ab\u5632\u5f04\u7684\u65f6\u95f4\u4e4b\u95f4\u8fdb\u884c\u7684\u3002\u60a8\u8fd8\u8bb0\u5f97\uff0c\u5728\u6a21\u62df\u65f6\u949f\u5b9e\u4f8b\u4e0a\u8c03\u7528Ticker\u4f1a\u5bfc\u81f4\u5b83\u5728\u5185\u90e8\u6ce8\u518c\u8be5\u6ef4\u7b54\u5668\uff0c\u8fd9\u6837\u5f53\u6a21\u62df\u65f6\u95f4\u7a0d\u540e\u63d0\u524d\u65f6\uff0c\u5b83\u5c31\u53ef\u4ee5\u5c06\u6ef4\u7b54\u58f0\u4f20\u9012\u7ed9\u8be5\u6a21\u62df\u6ef4\u7b54\u5668\u3002\u4f46\u662f\u6211\u4eec\u4e0a\u9762\u7684\u4ee3\u7801\u5728Run\u4e2d\u521b\u5efa\u4e86\u80a1\u7968\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u5728\u5355\u72ec\u7684Goroutine\u4e2d\u8fd0\u884c\uff1a\n\u51fd\u6570(foo*foo)Run(Interval Time.Duration){ticker\uff1a=foo.lock.Ticker(Interval){/*.*/}}\u3002\n\u5f53\u6211\u4eec\u5728\u4e3b\u8981\u7684\u6d4b\u8bd5\u5927\u7329\u7329\u8d5b\u9053\u4e0a\u63a8\u8fdb\u6a21\u62df\u65f6\u95f4\u7684\u65f6\u5019\u3002\u56e0\u6b64\uff0c\u7ed3\u679c\u53d6\u51b3\u4e8eGO\u8fd0\u884c\u65f6\u76f8\u5bf9\u4e8emockedClock.Add\u8c03\u7528\u8c03\u5ea6run goroutine\u7684\u65f6\u95f4\u3002\u5982\u679cRun\u5728\u6211\u4eec\u521b\u5efa\u4e4b\u540e\u7acb\u5373\u8fd0\u884c\uff0c\u5219\u6d4b\u8bd5\u901a\u8fc7\uff0c\u56e0\u4e3a\u6eda\u52a8\u6761\u662f\u5728\u6211\u4eec\u63d0\u524d\u6a21\u62df\u65f6\u95f4\u4e4b\u524d\u521b\u5efa\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u81f3\u5c11\u6709\u4e00\u6b21\u5bf9mockedClock.Add\u7684\u8c03\u7528\u53d1\u751f\u5728\u521b\u5efa\u81ea\u52a8\u6536\u62a5\u673a\u4e4b\u524d\uff0c\u5219\u6d4b\u8bd5\u5c06\u5931\u8d25\u3002\n\u56e0\u6b64\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5728NewFoo\u4e2d\u540c\u6b65\u521b\u5efa\u6eda\u52a8\u6761\uff1a\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728NewFoo\u4e2d\u521b\u5efa\u6eda\u52a8\u6761\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4ee5\u8fd0\u884c\uff1a\nfunc NewFoo(params*FooParams)*foo{foo\uff1a=&amp\uff1bfoo{lock\uff1aparams.Clock\uff0cout\uff1aparams.out\uff0c}\u80a1\u7968\u4ee3\u7801\uff1a=foo.lock.Ticker(params.Interval)go foo.run(Ricker)and return foo}Func(foo*foo)run(ticker*lock.Ticker){for{/*.\u3002\u76f8\u540c\u7684\u5faa\u73af\u4f53.*/}}\u3002\n\u5728\u8fd9\u4e00\u53d8\u5316\u4e4b\u540e\uff0c\u8003\u8bd5\u5c31\u4e0d\u518d\u662f\u96f6\u788e\u7684\u4e86\uff0c\u800c\u4e14\u5b83\u4eec\u90fd\u901a\u8fc7\u4e86\u3002\u8fd9\u4e00\u66f4\u6539\u4e0d\u4f1a\u5bf9\u751f\u4ea7\u4ee3\u7801\u4ea7\u751f\u4efb\u4f55\u5b9e\u9645\u5f71\u54cd\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u4f7f\u7528\u65f6\u949f\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u7262\u8bb0\u8fd9\u6837\u6a21\u62df\u65f6\u95f4\u7684\u5185\u90e8\u7ec6\u8282\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8bbe\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5SetInterval\u6765\u6539\u8fdbfoo\u7ec4\u4ef6\uff0c\u8be5\u65b9\u6cd5\u5c06\u5728\u8fd0\u884c\u65f6\u66f4\u65b0\u5c06\u6570\u5b57\u53d1\u9001\u5230out\u7684\u95f4\u9694\u3002\u6b64\u65b9\u6cd5\u5c06\u53ea\u5411\u4e8b\u4ef6\u5faa\u73af\u53d1\u9001\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u4e8b\u4ef6\u5faa\u73af\u5c06\u63a5\u6536\u8be5\u6d88\u606f\u5e76\u91cd\u65b0\u521b\u5efa\u5177\u6709\u65b0\u95f4\u9694\u7684\u81ea\u52a8\u6536\u62a5\u673a\u3002\nfunc(foo*foo)run(ticker*lock.Ticker){for{select{case&lt\uff1b-ticker.c\uff1afoo.out&lt\uff1b-foo.nextNum foo.nextNum+=1\u4e2a\u6848\u4f8b\u95f4\u9694\uff1a=&lt\uff1b-foo.intervalReqCH\uff1aticker.Stop()ticker=foo.lock.Ticker(Interval)}\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u6dfb\u52a0\u5230TestFoo\u7684\u672b\u5c3e\uff0c\u4ee5\u6d4b\u8bd5\u6b64\u65b0\u529f\u80fd\uff1a\n//\u5ef6\u957f\u95f4\u969450\u6beb\u79d2//foo.SetInterval(1050*\u65f6\u95f4.\u6beb\u79d2)//\u786e\u4fdd\u5c06\u65f6\u95f4\u63d0\u524d\u66f4\u65b0\u95f4\u9694\u540e\uff0c//\u6211\u4eec\u83b7\u5f97\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002mockedClock.add(1050*\u65f6\u95f4.\u6beb\u79d2)assertRecvInt(t\uff0cout\uff0c3)\u3002\n\u56e0\u6b64\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u8c03\u8bd5\u4e4b\u540e\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u5373\u4f7f\u6ca1\u6709\u7f13\u51b2\u901a\u9053intervalReqCH\uff0c\u53d1\u9001\u5230\u8be5\u901a\u9053\u5e76\u4e0d\u610f\u5473\u7740\u4e8b\u4ef6\u5faa\u73af\u5b8c\u5168\u5904\u7406\u4e86\u6d88\u606f(\u5373\uff0c\u7528\u65b0\u7684\u6301\u7eed\u65f6\u95f4\u91cd\u65b0\u521b\u5efa\u4e86\u81ea\u52a8\u6536\u62a5\u673a)\u3002\u53d1\u751f\u7684\u60c5\u51b5\u662f\uff1a\u6211\u4eec\u8c03\u7528SetInterval\uff0c\u5b83\u5c06\u6d88\u606f\u53d1\u9001\u5230intervalReqCH\uff0c\u800c\u8be5\u6d88\u606f\u5df2\u7ecf\u7531run goroutine\u63a5\u6536\uff0c\u4f46\u5c1a\u672a\u5904\u7406\uff1b\u7136\u540e\u6211\u4eec\u63d0\u524d\u6a21\u62df\u65f6\u95f4\uff0c\u6b64\u65f6\u5b83\u4e5f\u4f1a\u4f11\u77201ms\u4ee5\u91ca\u653e\u8fd0\u884c\u65f6\u8c03\u5ea6goroutine(\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e2a\u607c\u4eba\u7684\u7ec6\u8282)\uff0c\u7136\u540erun goroutine\u6700\u7ec8\u88ab\u8c03\u5ea6\uff0c\u56e0\u6b64\u5b83\u5904\u7406\u6765\u81eaintervalReqCH\u7684\u6d88\u606f\u5e76\u91cd\u65b0\u521b\u5efa\u62a5\u4ef7\u5668\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u518d\u63d0\u524d\u65f6\u95f4\uff0c\u56e0\u6b64\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u8ba1\u65f6\u3002\n\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u79cd\u65b9\u6cd5\u6765\u786e\u4fdd\u6d88\u606f\u5b9e\u9645\u4e0a\u5df2\u7ecf\u7531\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5b9e\u73b0\u4e00\u4e9b\u201c\u53ef\u6a21\u62df\u7684\u201d\u56de\u8c03\uff0c\u5982\u679c\u4e0d\u662fnil\uff0c\u5219\u53ea\u8981intervalReqCH\u88ab\u5b8c\u5168\u5904\u7406\uff0c\u5c31\u4f1a\u8c03\u7528\u8be5\u56de\u8c03\u3002\u5982\u4e0b\u6240\u793a\uff1a\u5411foo\u7ed3\u6784\u4e2d\u518d\u6dfb\u52a0\u4e00\u4e2a\u672a\u5bfc\u51fa\u7684\u5b57\u6bb5\uff1a\n//intervalApplication\u4ec5\u7528\u4e8e\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u4ee3\u7801\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u975enil//\u51fd\u6570\uff0c\u7136\u540e\u53ea\u8981\u5904\u7406\u6765\u81eaintervalReqCH\u7684//\u6d88\u606f\uff0c\u5c31\u4f1a\u4ece\u4e8b\u4ef6\u5faa\u73af\u4e2d\u8c03\u7528\u5b83\u3002\u95f4\u9694\u5e94\u7528\u51fd\u6570()\u3002\n\u6848\u4f8b\u95f4\u9694\uff1a=&lt\uff1b-foo.intervalReqCH\uff1aticker.Stop()ticker=foo.lock.Ticker(Interval)if foo.intervalApplication\uff01=nil{foo.intervalApplication()}\u3002\n\u7136\u540e\uff0c\u5728\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u5728\u521b\u5efafoo\u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\u586b\u5145intervalApplication\u56de\u8c03\uff0c\u8be5\u51fd\u6570\u5c06\u6d88\u606f\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u901a\u9053\uff1a\n\u73b0\u5728\uff0c\u6d4b\u8bd5\u901a\u8fc7\u4e86\u3002\u7136\u800c\uff0c\u5b83\u4e5f\u8ba9\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u5fc5\u987b\u4e3a\u6211\u4eec\u671f\u671b\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u7684\u6bcf\u6761\u6d88\u606f\u6dfb\u52a0\u90a3\u4e9b\u53ef\u6a21\u62df\u7684\u56de\u8c03\uff0c\u8fd9\u5f88\u96be\u95fb\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u6d4b\u8bd5\u4ee3\u7801\u6765\u4e86\u89e3\u592a\u591a\u5173\u4e8e\u5b9e\u73b0\u7684\u7ec6\u8282\u3002\u5728\u8fd9\u6837\u7684\u5c0f\u7ec4\u4ef6\u4e2d\uff0c\u5b83\u53ef\u80fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u5f00\u53d1\u5177\u6709\u8f83\u5927\u4e8b\u4ef6\u5faa\u73af\u7684\u7ec4\u4ef6\u65f6\uff0c\u77e5\u9053\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u7684\u5185\u90e8\u4e8b\u4ef6\u7684\u786e\u5207\u5e8f\u5217\u53ef\u80fd\u4f1a\u53d8\u5f97\u592a\u591a\u3002\n\u6211\u786e\u5b9e\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u5efa\u8bae\u7ed9\u4f60\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u8bf7\u5bb9\u5fcd\u6211\u3002\u663e\u7136\u6211\u4eec\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u8981\u5148\u89e3\u51b3\u3002\n\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u7528\u4e8e\u66f4\u65b0\u65f6\u95f4\u95f4\u9694\u7684\u6d4b\u8bd5\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u6d4b\u8bd5\u662f\u5426\u5e94\u7528\u4e86\u65b0\u7684\u65f6\u95f4\u95f4\u9694\uff1a\u6211\u4eec\u5c06\u65b0\u7684\u65f6\u95f4\u95f4\u9694\u8bbe\u7f6e\u4e3a1050ms\uff0c\u5c06\u65f6\u95f4\u63d0\u524d\u8be5\u6301\u7eed\u65f6\u95f4\uff0c\u5e76\u68c0\u67e5\u6211\u4eec\u662f\u5426\u4ecefoo\u83b7\u5f97\u4e86\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u81ea\u52a8\u6536\u62a5\u673a\u6ca1\u6709\u53d8\u5316\uff0c\u6d4b\u8bd5\u4ecd\u7136\u4f1a\u901a\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u7684\u65b0\u65f6\u95f4\u95f4\u9694\u5927\u4e8e\u65e7\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u56e0\u6b64\u5c06\u6a21\u62df\u65f6\u95f4\u63d0\u524d1050ms\u610f\u5473\u77401000ms\u7684\u81ea\u52a8\u6536\u62a5\u673a\u4e5f\u4f1a\u89e6\u53d1\u3002\u8fd9\u5f88\u5bb9\u6613\u9a8c\u8bc1\uff1a\u53ea\u9700\u6ce8\u91ca\u8fd9\u4e24\u884c\uff1a\n//ticker.Stop()//ticker=foo.clock.Ticker(Interval)_=Interval//\u907f\u514d\u672a\u4f7f\u7528\u53d8\u91cf\u7684\u7f16\u8bd1\u9519\u8bef\u3002\n\u7136\u540e\u6211\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u771f\u7684\u4e0d\u80fd\u8f7b\u6613\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6ca1\u6709\u53ef\u9760\u7684\u65b9\u6cd5\u6765\u505a(2)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9a8c\u8bc1\u67d0\u4e9b\u4e8b\u60c5\u8fd8\u6ca1\u6709\u53d1\u751f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u6b64\u529f\u80fd\u6765\u5c3d\u6700\u5927\u52aa\u529b\uff0c\u4ee5\u786e\u4fdd\u901a\u9053\u4e2d\u6ca1\u6709\u6d88\u606f\uff1a\nFunc assertNoRecvInt(t*Testing.T\uff0cch&lt\uff1b-chan int){select{case get\uff1a=&lt\uff1b-ch\uff1at.Errorf(&#34\uff1bWant Nothing\uff0cGet%d&#34\uff1b\uff0cGet)Default\uff1a//All Good}}\u3002\n\u4f46\u662f\uff0c\u5728\u6ce8\u91ca\u4e86\u81ea\u52a8\u6536\u62a5\u673a\u903b\u8f91(\u5373\uff0c\u635f\u574f\u7684\u4ee3\u7801)\u4e4b\u540e\uff0c\u6d4b\u8bd5\u6709\u65f6\u8fd8\u662f\u4f1a\u901a\u8fc7\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728Go Scheduler\u8fd9\u91cc\u662f\u4ec1\u6148\u7684\uff1a\u6211\u4eec\u53ef\u80fd\u8fd8\u6ca1\u6709\u6536\u5230\u4e00\u4e2a\u9879\u76ee\uff0c\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u903b\u8f91\u662f\u6b63\u786e\u7684\uff0c\u800c\u662f\u56e0\u4e3aGo Scheduler\u78b0\u5de7\u8fd8\u6ca1\u6709\u8fd0\u884c\u4e8b\u4ef6\u5faa\u73afGoroutine\uff0c\u6240\u4ee5\u8fd9\u662f\u56e0\u4e3aGo Scheduler\u5728\u8fd9\u91cc\u662f\u4ec1\u6148\u7684\uff1a\u6211\u4eec\u53ef\u80fd\u8fd8\u6ca1\u6709\u6536\u5230\u4e00\u4e2a\u9879\u76ee\uff0c\u8fd9\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u903b\u8f91\u662f\u6b63\u786e\u7684\uff0c\u800c\u662f\u56e0\u4e3aGo Scheduler\u78b0\u5de7\u8fd8\u6ca1\u6709\u8fd0\u884c\u4e8b\u4ef6\u5faa\u73afGoroutine\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u7b80\u5355\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f8b\u5982\u5c06\u65b0\u95f4\u9694\u8bbe\u7f6e\u5f97\u66f4\u5c0f\u6765\u89e3\u51b3\u5b83\uff1a\u7136\u540e\uff0c\u901a\u8fc7\u5c06\u65f6\u95f4\u63d0\u524d\u8f83\u5c0f\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u5b83\u5c1a\u672a\u53d1\u751f\uff0c\u5e76\u4e14\u6b64\u68c0\u67e5\u5c06\u53ef\u9760\u5730\u5de5\u4f5c\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u89e3\u51b3\u529e\u6cd5\u5e76\u4e0d\u603b\u662f\u53ef\u4ee5\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u4ee3\u7801\u4e2d\u5b9e\u73b0\uff1a\u6709\u65f6\uff0c\u53ef\u9760\u5730\u9a8c\u8bc1\u67d0\u4e9b\u4e8b\u4ef6\u5c1a\u672a\u53d1\u751f\u5b9e\u9645\u4e0a\u662f\u53ef\u53d6\u7684\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u8bd5\u7740\u60f3\u4e00\u60f3\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u5bf9\u4e8e{SELECT{{case msg\uff1a=&lt\uff1b-foo\uff1ahandleFoo(Msg)\u6848\u4f8bmsg\uff1a=&lt\uff1b-bar\uff1ahandlebar(Msg)}\u3002\n\u6211\u4eec\u60f3\u8981\u7684\u662f\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u786e\u4fdd\u90a3\u4e9b\u901a\u9053foo\u548cbar(\u53ef\u80fd\u88ab\u7f13\u51b2)\u4e2d\u7684\u6240\u6709\u6302\u8d77\u6d88\u606f(\u5982\u679c\u6709\u7684\u8bdd)\u5df2\u7ecf\u7531\u8be5\u5faa\u73af\u5904\u7406\u3002\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u4f7f\u6240\u6709\u7684\u6d4b\u8bd5\u901a\u9053\u90fd\u6ca1\u6709\u7f13\u51b2\uff0c\u90a3\u4e48\u8fd9\u5c31\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u9001\u6d88\u606f\u65f6\u4f1a\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\u7136\u800c\uff0c\u672a\u7f13\u51b2\u7684\u901a\u9053\u5e76\u4e0d\u603b\u662f\u5408\u9002\u7684\uff1a\u4f8b\u5982\uff0c\u81ea\u52a8\u6536\u62a5\u673a\u548c\u5b9a\u65f6\u5668\u901a\u9053C\u662f1\u7f13\u51b2\u7684\uff0c\u6216\u8005\u67d0\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u591a\u4e2a\u6d88\u606f\u88ab\u53d1\u9001\u5230\u4e00\u4e2a\u901a\u9053\uff0c\u56e0\u6b64\u5728\u6211\u4eec\u68c0\u67e5\u5b83\u4eec\u4e4b\u524d\uff0c\u8be5\u901a\u9053\u5e94\u8be5\u6709\u4e00\u4e2a\u7f13\u51b2\u533a\u6765\u5bb9\u7eb3\u5b83\u4eec\u3002\n\u56e0\u6b64\uff0c\u540c\u6837\uff0c\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u786e\u4fdd\u6240\u6709\u6302\u8d77\u7684\u6d88\u606f\uff0c\u65e0\u8bba\u6211\u4eec\u7f13\u51b2\u4e86\u591a\u5c11\u6d88\u606f\uff0c\u90fd\u5df2\u7ecf\u5f97\u5230\u4e86\u5904\u7406\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u50cfcycleEventLoop\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u5b83\u5c31\u662f\u8fd9\u6837\u505a\u7684\uff1a\u5b83\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u4e8b\u4ef6\u5faa\u73af\u6709\u66f4\u591a\u7684\u6d88\u606f\u8981\u5904\u7406\u3002\u5f53\u6ca1\u6709\u66f4\u591a\u6d88\u606f\u65f6\uff0ccycleEventLoop\u8fd4\u56de\u3002\u5b83\u8fd8\u610f\u5473\u7740\u8c03\u7528cycleEventLoop\u662f\u65e0\u5bb3\u7684\uff0c\u5373\u4f7f\u4e8b\u4ef6\u5faa\u73af\u6839\u672c\u6ca1\u6709\u8981\u5904\u7406\u7684\u6d88\u606f\uff1a\u5728\u672c\u4f8b\u4e2d\uff0cc\u3002\n..", "note_en": "Initially I wanted to write articles on those two topics separately (mocking time and testing event loops), but during the process I realized that the things I want to talk about are too interrelated: when I need to mock time, it&#39;s usually to test some event loop with it, and when I test event loops, typically mocked time is also involved in that.\n So in the end, it felt better to just combine all that in a single article.\n  Unfortunately, as of today, time functions in Go stdlib aren&#39;t mockable: whenever we use e.g.  time.Now(), or  time.NewTicker, etc, they are going to use real time, and this makes the time-sensitive code quite hard to test properly.\n  https://github.com/benbjohnson/clock: a more complete library which attempts to mock all functionality of the stdlib  time package.\n Also there is an old  Go issue in Github about mockable time support, which mentions the two libraries above, and I do have some kind of hope that mocking time sooner or later will be included to the stdlib in some form, but we gotta be patient. So as of today, if we want to have mocked time, we have to use custom solutions.\n In this article, I&#39;m going to be focusing on the second library,  benbjohnson/clock, ( a fork of) which I&#39;ve been using for a few years already, and overall it does the job when used properly. So let&#39;s take a closer look at it.\n  At its core, this library just has an interface named  Clock, which tries to mimic functionality of the  time package:\n // Clock represents an interface to the functions in the standard library time // package. Two implementations are available in the clock package. The first // is a real-time clock which simply wraps the time package&#39;s functions. The // second is a mock clock which will only make forward progress when // programmatically adjusted. type Clock  interface  { After (d time .Duration ) &lt; - chan   time. Time AfterFunc (d time .Duration , f  func ())  *Timer Now ()   time. Time Since (t   time. Time ) time .Duration Sleep (d time .Duration ) Tick (d time .Duration ) &lt; - chan   time. Time Ticker (d time .Duration )  *Ticker Timer (d time .Duration )  *Timer }\n So in our code, instead of using e.g.  time.Now(), we need to have an instance of this  Clock interface, and use it. So instead of this:\n   // Somewhere in initialization code, create an instance of the Clock interface:c  := clock . New ()\u00a0 // Somewhere later, use that instance:fmt . Println (c . Now ())\n Most of the time, I find myself having an instance of  Clock as part of the params of something, like this:\n type Foo  struct  { clock clock .Clock }\u00a0 type FooParams  struct  { Clock clock .Clock }\u00a0 func NewFoo (params  *FooParams )  *Foo  { foo  := &amp;Foo { clock : params .Clock ,  }\u00a0  // NOTE: we intentionally don&#39;t default params.Clock to clock.New, see the  // caveat section below.\u00a0  return foo }\n And then we should obviously use that  clock instance in the methods of  Foo, instead of real  time functions:\n   foo  := NewFoo ( &amp;FooParams { Clock : clock . New (),  // Use real time })\u00a0 // Use foo in some way\n  const testTimeLayout  =  &#34;Jan 2, 2006 at 15:04:05.000&#34;\u00a0 func TestFoo (t  *testing .T )  {  // Create mocked clock mockedClock  := clock . NewMock () now , _  := time . Parse (testTimeLayout ,  &#34;May 1, 2020 at 00:00:00.000&#34; ) mockedClock . Set (now )\u00a0 foo  := NewFoo ( &amp;FooParams { Clock : mockedClock ,  })\u00a0  // Test foo somehow, e.g. we can advance mocked time like this: mockedClock .Add ( 1  * time .Second ) foo .PrintTime ()\u00a0 mockedClock .Add ( 1  * time .Second ) foo .PrintTime () }\n   That is all very straightforward, but also not so interesting. Things get more tricky when we start using goroutines with timers or tickers, so let&#39;s get to it.\n  As mentioned above,  clock tries to mimic the stdlib  time package, so of course it has timers and tickers. To use them properly and to avoid surprises (such as flakey tests), it&#39;s useful to understand how mocked timers and tickers work, to a certain extent.\n   (By the way yeah, the method is weirdly named  Ticker and not  NewTicker as in stdlib; the same is true for  Timer vs  NewTimer. I don&#39;t know if that was done intentionally, but in any case, doesn&#39;t hurt much, just something to keep in mind)\n So if that  c instance represents actual (not mocked) time, then, as you&#39;d expect, the  Ticker method just delegates to  Time.NewTicker and doesn&#39;t do much besides that. If however  c is a mocked time, then calling  Ticker registers a new mocked ticker internally, so that whenever we advance mocked time later by calling  Add, that ticker created previously will receive ticks when appropriate.\n It&#39;s also worth noting that when we advance mocked time by calling  Add, all tickers and timers which need to fire, get fired  synchronously right in the goroutine calling  Add. For example, having that:\n c  := clock . NewMock ()\tnow , _  := time . Parse (testTimeLayout ,  &#34;May 1, 2020 at 00:00:00.000&#34; )\tc . Set (now )\u00a0\t // Create some timers using AfterFunc with a custom callback\tc .AfterFunc ( 200 *time .Millisecond ,  func ()  {\t\tfmt .Println ( &#34;AfterFunc1 fired, time:&#34; , c .Now ())\t })\tc .AfterFunc ( 50 *time .Millisecond ,  func ()  {\t\tfmt .Println ( &#34;AfterFunc2 fired, time:&#34; , c . Now ())\t })\u00a0\t // Create some regular timers\t var mytimers  [] *clock .Timer\tmytimers  = append (mytimers , c .Timer ( 1 *time .Second ))\tmytimers  = append (mytimers , c .Timer ( 2 *time .Second ))\tmytimers  = append (mytimers , c .Timer ( 5 *time .Second ))\tmytimers  = append (mytimers , c .Timer ( 100 *time .Millisecond ))\u00a0\t // Create some tickers\t var mytickers  [] *clock .Ticker\tmytickers  = append (mytickers , c .Ticker ( 500 *time .Millisecond ))\n   And by the time that  Add call returns, both our  AfterFunc callbackswere called already in this same goroutine, all those regular timers have received a message to their  C channels (except the one at 5 seconds, because we only advanced the time by 3s), and the ticker was  attempted to send a message to its  C channel 6 times, however only the first attempt succeeded, because nobody was reading from that channel. So, after that  Add call, the following is already printed:\n  And we can also go over the  mytimers slice and get the messages from their  C channels:\n for  i , tmr  :=  range mytimers  {\t\t var val  string\t\t select  {\t\t case t  := &lt; -tmr .C :\t\t\tval  = fmt .Sprintf ( &#34;%s&#34; , t )\t\t default :\t\t\tval  =  &#34;not fired yet&#34;\t\t }\u00a0\t\tfmt . Printf ( &#34;Timer #%d: %s \\n&#34; , i , val )\t }\n  Timer #0: 2020-05-01 00:00:01 +0000 UTCTimer #1: 2020-05-01 00:00:02 +0000 UTCTimer #2: not fired yetTimer #3: 2020-05-01 00:00:00.1 +0000 UTC\n  Ane one more important (and annoying) detail is that as of today, there is no good universal way to tell to the Go runtime: \u201crun all runnable goroutines until they block\u201d. But, with mocked time, we actually do need that: for example, if we have an event loop which reads from some ticker&#39;s  C channel, and we advance mocked time so that this  C channel might have received a message already (because the ticker might have ticked), we want to make sure that this goroutine handles the message before we proceed further.\n But since there is no good universal way to do that, the  clock library uses a poor way: every time it advances mocked time, it also  just sleeps for 1ms (I mean, it sleeps \u201creal\u201d 1ms, not mocked 1ms). It does mean that the tests using that are flakey by definition (because sleeping for w/e duration doesn&#39;t provide any guarantees that any goroutines will actually run), and also if the tests advance mocked time a lot, it slows down the tests dramatically (because sleeping for \u201c1ms\u201d obviously doesn&#39;t sleep exactly 1ms: usually it end up being a lot longer).\n So, while I agree that as the most generic logic it&#39;s okay to default to just sleeping some arbitrary duration like 1ms, but I believe that applications should have a way to override that behavior with some custom logic, because we might have some application-specific reliable way to ensure that goroutines which we need to run, did run (like adding some mockable callbacks which get called whenever certain events are handled by an event loop).\n So, I had to fork  clock library as  https://github.com/dimonomid/clock and implement that; if you&#39;re interested, here&#39;s the commit:  Make the implementation of gosched configurable.\n The  API was updated in a backwards-compatible way: we can still just call  clock.NewMock(), and we&#39;ll get the same mocked clock which would just sleep 1ms when advancing mocked time. But, if we want to override that behavior, we can do that:\n c  := clock .NewMockOpt (clock .MockOpt {\t\tGosched :  func ()  {\t\t\t // Any custom logic to run after advancing mocked time\t\t },\t })\n My pull request with those changes was opened for almost 2 years already, and unfortuately I&#39;m not sure if it is ever going to be merged to the upstream, so in the examples below I&#39;ll use my fork.\n We&#39;ll discuss alternative implementations of this  Gosched callback later, but for now, keeping all this in mind, let&#39;s move on.\n  As an example, let&#39;s consider a simple component  Foo, which takes an interval (like 1 second) and an output channel of ints, and sends an ever-incremented number to that channel on a given interval, just like 0, 1, 2, etc.\n  package foo\u00a0 import  (\t &#34;time&#34;\u00a0\t &#34;github.com/dimonomid/clock&#34; )\u00a0 type Foo  struct  {\tnextNum  int\tout chan&lt; -  int\u00a0\tclock clock .Clock }\u00a0 type FooParams  struct  {\tClock clock .Clock\u00a0\t // Out is the channel to deliver numbers to\tOut chan&lt; -  int\t // Interval is how often to deliver numbers to Out\tInterval time . Duration }\u00a0 // NewFoo creates and returns an instance of Foo, and also starts an internal // goroutine which will send numbers to the provided channel params.Out. func NewFoo (params  *FooParams )  *Foo  {\t if params .Clock  ==  nil  {\t\t panic ( &#34;Clock is required&#34; )\t }\u00a0\tfoo  := &amp;Foo {\t\tclock : params .Clock ,\t\tout : params .Out ,\t }\u00a0\t if foo .clock  ==  nil  {\t\tfoo .clock  = clock .New ()\t }\u00a0\t go foo .run (params .Interval )\u00a0\t return foo }\u00a0 func  (foo  *Foo ) run (interval time .Duration )  {\t // NOTE: there is an issue with creating ticker right in this goroutine,\t // explained below.\tticker  := foo .clock .Ticker (interval )\u00a0\t for  {\t\t&lt; -ticker .C\t\tfoo .out &lt; - foo .nextNum\t\tfoo .nextNum  +=  1\t } }\n  package foo\u00a0 import  (\t &#34;testing&#34;\t &#34;time&#34;\u00a0\t &#34;github.com/dimonomid/clock&#34; )\u00a0 const testTimeLayout  =  &#34;Jan 2, 2006 at 15:04:05.000&#34;\u00a0 func TestFoo (t  *testing .T )  {\t // Create a mocked time, initialized at May 1, 2020 midnight.\tmockedClock  := clock . NewMock ()\tnow , _  := time . Parse (testTimeLayout ,  &#34;May 1, 2020 at 00:00:00.000&#34; )\tmockedClock . Set (now )\u00a0\t // Create output channel, we&#39;ll check later that it receives the numbers we\t // expect.\tout  :=  make ( chan  int ,  1 )\u00a0\t // Create Foo, it will also start the internal goroutine to send numbers\t // to the channel.\tNewFoo (&amp;FooParams {\t\tClock : mockedClock ,\u00a0\t\tOut : out ,\t\tInterval :  1  * time .Second ,\t })\u00a0\t // Assert that we receive the numbers we expect\tmockedClock .Add ( 1  * time .Second )\tassertRecvInt (t , out ,  0 )\u00a0\tmockedClock .Add ( 1  * time .Second )\tassertRecvInt (t , out ,  1 )\u00a0\tmockedClock .Add ( 1  * time .Second )\tassertRecvInt (t , out ,  2 ) }\u00a0 func assertRecvInt (t  *testing .T , ch &lt; - chan  int , want  int )  {\t select  {\t case got  := &lt; -ch :\t\t if got  != want  {\t\t\tt .Errorf ( &#34;wanted %d, got %d&#34; , want , got )\t\t }\t default :\t\tt .Errorf ( &#34;wanted %d, got nothing&#34; , want )\t } }\n However if we run it, we&#39;ll see that the tests are often failing with non-deterministic result. Sometimes it could be this:\n --- FAIL: TestFoo (0.01s) foo_test.go:50: wanted 0, got nothing foo_test.go:47: wanted 1, got 0 foo_test.go:47: wanted 2, got 1\n  --- FAIL: TestFoo (0.01s) foo_test.go:50: wanted 0, got nothing foo_test.go:47: wanted 1, got nothing foo_test.go:47: wanted 2, got 0\n Or it could be something else. So clearly, there is a race in how mocked time is used. And indeed, the race is in between of creating a ticker and advancing mocked time. As you remember, calling  Ticker on a mocked clock instance causes it to register that ticker internally, so that when the mocked time is advanced later, it can deliver ticks to that mocked ticker. But our code above creates the ticker right in the  run which runs in a separate goroutine:\n func  (foo  *Foo ) run (interval time .Duration )  {\tticker  := foo .clock .Ticker (interval )\u00a0\t for  {  /* ... */  } }\n While we advance mocked time in the main test goroutine. Therefore the outcome depends on when Go runtime schedules the  run goroutine, relatively to the  mockedClock.Add calls. If  run runs right after we create it, then tests pass, because the ticker is created before we advance mocked time. If however at least a single call to  mockedClock.Add happens before the ticker is created, the tests will fail.\n So to fix that, we need to make sure that the ticker is created synchronously in  NewFoo: that is, create the ticker right in  NewFoo, and pass it as a param to  run:\n func NewFoo (params  *FooParams )  *Foo  {\tfoo  := &amp;Foo {\t\tclock : params .Clock ,\t\tout : params .Out ,\t }\u00a0\tticker  := foo .clock .Ticker (params .Interval )\t go foo .run (ricker )\u00a0\t return foo }\u00a0 func  (foo  *Foo ) run (ticker  *clock .Ticker )  {\t for  {\t\t /* ... the same loop body ... */\t } }\n After that change, tests aren&#39;t flakey, and they pass. That change doesn&#39;t have any practical effect on production code, but as we use  clock, we have to keep in mind the internal details of mocked time like that.\n  Now let&#39;s imagine that we need to improve our  Foo component by adding a method  SetInterval, which would update the interval at which numbers are sent to  Out, in run time. This method would just send a message to the event loop, and then event loop will receive it and recreate the ticker with the new interval.\n        func  (foo  *Foo ) run (ticker  *clock .Ticker )  {\t for  {\t\t select  {\t\t case &lt; -ticker .C :\t\t\tfoo .out &lt; - foo .nextNum\t\t\tfoo .nextNum  +=  1\u00a0\t\t case interval  := &lt; -foo .intervalReqCh :\t\t\tticker .Stop ()\t\t\tticker  = foo .clock .Ticker (interval )\t\t }\t } }\n Then we add the following snippet to the end of  TestFoo, to test this new functionality:\n // Make the interval longer by 50 milliseconds.\tfoo .SetInterval ( 1050  * time .Millisecond )\u00a0\t // Make sure that after advancing the time by the updated interval, we get\t // the next number.\tmockedClock .Add ( 1050  * time .Millisecond )\tassertRecvInt (t , out ,  3 )\n    So after some debugging, we realize that even though the channel  intervalReqCh is unbuffered, sending to that channel doesn&#39;t mean that the event loop fully handled the message (that is, recreated the ticker with the new duration). What happens is: we call  SetInterval, it sends the message to  intervalReqCh, and the message is already  received by the  run goroutine, but not handled yet; then we advance mocked time, at this moment it also sleeps 1ms to let Go runtime schedule goroutines (that annoying detail I mentioned above), and then  run goroutine is finally scheduled, so it handles the message from  intervalReqCh and recreates the ticker, but we don&#39;t advance time anymore, so it never ticks.\n We need to add a way to make sure that the message was actually handled by the event loop already. For example, implement some \u201cmockable\u201d callback which, if not nil, gets called whenever  intervalReqCh is fully handled. Like this: add one more unexported field to the  Foo struct:\n // intervalApplied is only used for tests: test code can set it to non-nil\t // function, and then it&#39;ll be called from the event loop whenever the\t // message from intervalReqCh is handled.\tintervalApplied  func ()\n  case interval  := &lt; -foo .intervalReqCh :\t\t\tticker .Stop ()\t\t\tticker  = foo .clock .Ticker (interval )\t\t\t if foo .intervalApplied  !=  nil  {\t\t\t\tfoo .intervalApplied ()\t\t\t }\n Then in test code, right after creating  foo, we populate that  intervalApplied callback with a function which sends a message to another channel:\n    Now, tests pass. However, it also makes us realize that we would have to add those mockable callbacks for every message we expect event loop to handle, and that smells quite a bit because it requires test code to know too much about the implementation details. In a small component like that, it might be acceptable, but as we develop components with larger event loops, knowing the exact sequence of internal events handled by the event loop might become too much.\n I do have a better proposal for you, but for now, bear with me. Apparently we&#39;ve got another problem to solve first.\n An attentive reader might notice that our tests for updating the interval do not actually test that the new interval was applied: we set a new interval to 1050ms, we advance time by that duration and check that we get the next number from  Foo, but actually, even if the ticker is unchanged, the tests would still pass, because the new interval we set is larger than the old one, therefore advancing mocked time by 1050ms means that a 1000ms-ticker would fire as well. It&#39;s easy to verify: just comment those two lines:\n //ticker.Stop()\t\t\t //ticker = foo.clock.Ticker(interval)\t\t\t_  = interval  // To avoid compile errors about unused variable\n    And then we realize that we can&#39;t really do that easily, because there is no reliable way to do the (2), that is, to verify that something did not happen yet. We can do our best by adding this function which ensures that there are no messages in the channel:\n func assertNoRecvInt (t  *testing .T , ch &lt; - chan  int )  {\t select  {\t case got  := &lt; -ch :\t\tt .Errorf ( &#34;wanted nothing, got %d&#34; , got )\t default :\t\t // All good\t } }\n   But then, still having commented  ticker logic (i.e. broken code), tests sometimes pass anyway. That&#39;s because we&#39;re at Go scheduler&#39;s mercy here: it&#39;s possible that we don&#39;t yet receive an item  not because our logic is correct, but just because it happened that Go scheduler didn&#39;t run the event loop goroutine yet.\n In fact, for this simple component, we can work it around by e.g. setting the new interval to be  smaller: then, by advancing the time by a smaller duration, we can verify that it did not yet happen, and this check would work reliably. But this kind of workaround isn&#39;t always possible with real world code: sometimes it&#39;s actually desirable to reliably verify that some event did not happen yet, so let&#39;s try to figure how to do that.\n  for  {\t\t select  {\t\t case msg  := &lt; -foo :\t\t\thandleFoo (msg )\u00a0\t\t case msg  := &lt; -bar :\t\t\thandleBar (msg )\t }\n What we want is to have a way to make sure that all pending messages (if any) in those channels  foo and  bar (which might be buffered) are already handled by that loop.\n If we can make all the channels unbuffered for tests, then it&#39;s not a problem, because the messages will be handled as we send them. However, unbuffered channels aren&#39;t always appropriate: e.g. ticker and timer channels  C are 1-buffered, or maybe some action results in multiple messages being sent to a channel, so this channel should have a buffer to fit them all before we check them.\n So again, we want to have a way to make sure that all pending messages, however many of them we have buffered, are already handled.\n Imagine for a moment that we have a function like  cycleEventLoop, which does exactly that: it blocks until event loop has any more messages to handle. When there are no more messages,  cycleEventLoop returns. It also means that it&#39;s harmless to call  cycleEventLoop even if the event loop has no messages to handle at all: in this case,  c\n......", "posttime": "2020-05-25 18:25:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u95f4,foo", "title": "\u56f4\u68cb\u4e2d\u7684\u6a21\u62df\u65f6\u95f4\u548c\u6d4b\u8bd5\u4e8b\u4ef6\u5faa\u73af", "title_en": "Mocking time and testing event loops in Go", "transed": 1, "url": "https://dmitryfrank.com/articles/mocking_time_in_go", "via": "", "real_tags": ["\u65f6\u95f4", "foo"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003621, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f9d\u8d56\u60a8\u7684\u652f\u6301\uff1a\u60a8\u542c\u8bf4\u8fc7Phoronix Premium\u5417\uff1f\u8fd9\u662f\u4ec0\u4e48\u8865\u5145\u672c\u7f51\u7ad9\u4e0a\u7684\u5e7f\u544a\uff0c\u4e3a\u6211\u4eec\u7684\u4f18\u8d28\u65e0\u5e7f\u544a\u670d\u52a1\u3002\u6bcf\u6708\u53ea\u97003\u7f8e\u5143\uff0c\u60a8\u5c31\u53ef\u4ee5\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u7684\u7f51\u7ad9\uff0c\u540c\u65f6\u4ea7\u751f\u7684\u8d44\u91d1\u5141\u8bb8\u6211\u4eec\u7ee7\u7eed\u8fdb\u884cLinux\u786c\u4ef6\u5ba1\u67e5\u3001\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u3001\u7ef4\u62a4\u6211\u4eec\u7684\u793e\u533a\u8bba\u575b\u7b49\u7b49\u3002\u4f60\u4e5f\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u8d1d\u5b9d\u652f\u4ed8\u5c0f\u8d39\u3002\u5728\u4eca\u5929\u7684Linux5.7-RC7\u58f0\u660e\u4e2d\u5206\u4eab\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u8f76\u4e8b\uff0c\u90a3\u5c31\u662fLinux\u548cGit\u7684\u521b\u5efa\u8005Linus Torvalds\u5c06\u4ed6\u7684\u4e3b\u8981\u94bb\u673a\u6362\u6210\u4e86AMD Ryzen ThreadRipper\u3002\u81f3\u5c11\u5bf9\u4e8e\u4ed6\u8fc7\u53bb\u6240\u8bf4\u7684\uff0cLinus\u4e00\u76f4\u5728\u4f7f\u7528Intel Box\uff0c\u56e0\u4e3a\u4ed6\u4e0e\u516c\u53f8\u5173\u7cfb\u5bc6\u5207(\u751a\u81f3\u4e0eIntel Portland\u7684\u8bb8\u591a\u5f00\u6e90\u56e2\u961f\u5173\u7cfb\u5bc6\u5207)\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u8bc4\u8bba\u8bf4\uff0c\u8fd9\u662f\u5927\u7ea615\u5e74\u6765\u7b2c\u4e00\u6b21\u6ca1\u6709\u4f7f\u7528\u82f1\u7279\u5c14\u7cfb\u7edf\u4f5c\u4e3a\u4ed6\u7684\u4e3b\u8981\u8ba1\u7b97\u673a\u3002\u4ed6\u5728RC7\u7684\u58f0\u660e\u4e2d\u8bf4\u4e86\u4e00\u53e5\u6709\u8da3\u7684\u8bdd\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u672c\u5468\u5bf9\u6211\u6765\u8bf4\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\u6211\u5347\u7ea7\u4e86\u6211\u7684\u4e3b\u673a\uff0c\u5927\u7ea615\u5e74\u6765\uff0c\u6211\u7684\u53f0\u5f0f\u673a\u7b2c\u4e00\u6b21\u4e0d\u662f\u57fa\u4e8e\u82f1\u7279\u5c14\u7684\u3002\u6ca1\u6709\uff0c\u6211\u8fd8\u6ca1\u6709\u6362\u6210ARM\uff0c\u4f46\u6211\u73b0\u5728\u6b63\u5728\u6446\u52a8\u4e00\u53f0AMD\u5206\u7ebf\u56683970x\u3002\u6211\u7684allmodconfig\uff1b\u6d4b\u8bd5\u7248\u672c\u73b0\u5728\u6bd4\u4ee5\u524d\u5feb\u4e86\u4e09\u500d\uff0c\u8fd9\u5728\u73b0\u5728\u7684\u5e73\u9759\u9636\u6bb5\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u6211\u80af\u5b9a\u4f1a\u5728\u4e0b\u4e00\u4e2a\u5408\u5e76\u7a97\u53e3\u4e2d\u6ce8\u610f\u5230\u5347\u7ea7\u3002\nThreadRipper 3970X\u548c3900\u7cfb\u5217\u7684\u5176\u4ed6\u4ea7\u54c1\u5bf9\u4e8e\u5185\u6838\u5f00\u53d1\u4eba\u5458\u548c\u90a3\u4e9b\u9891\u7e41\u7f16\u8bd1\u5927\u578b\u4ee3\u7801\u5e93\u7684\u4eba\u6765\u8bf4\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\u3002\u4ed6\u6ca1\u6709\u5728\u4ed6\u4e4b\u524d\u7684Intel\u76d2\u5b50\u4e2d\u63d0\u5230CPU\uff0c\u4f46\u4ed6\u770b\u5230\u6784\u5efa\u901f\u5ea6\u5feb\u4e863\u500d\u3002\u968f\u77406\u6708\u521dLinux5.8\u5408\u5e76\u7a97\u53e3\u7684\u5373\u5c06\u5230\u6765\uff0c\u4ed6\u7684ThreadRipper\u7cfb\u7edf\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u953b\u70bc\u3002\u8fd9\u53cd\u8fc7\u6765\u5bf9AMD Ryzen Linux\u7528\u6237\u6765\u8bf4\u4e5f\u662f\u4e2a\u597d\u6d88\u606f\uff1a\u7531\u4e8eTorvalds\u4e00\u76f4\u5728\u4e3a\u4e3b\u7ebf\u6784\u5efa\u6700\u65b0\u7684\u5185\u6838\u4ee3\u7801\uff0c\u5f53\u4ed6\u7684\u7cfb\u7edf\u4e0a\u6709\u4efb\u4f55\u7531\u4e8e\u62d9\u52a3/\u6d4b\u8bd5\u4e0d\u4f73\u7684\u62c9\u8bf7\u6c42\u800c\u5bfc\u81f4\u7684\u4ee3\u7801\u5d29\u6e83\u65f6\uff0c\u4ed6\u5f80\u5f80\u4f1a\u76f8\u5f53\u516c\u5f00\u548c\u5927\u58f0\u5730\u53eb\u558a\u2026\u2026\u3002\u56e0\u6b64\uff0c\u968f\u7740ThreadRipper\u4e0a\u7684\u989d\u5916\u548c\u7acb\u5373\u66dd\u5149\uff0c\u4ed6\u5c06\u6709\u671b\u66f4\u5feb\u5730\u53d1\u73b0\u4efb\u4f55\u7834\u574f\u5185\u6838\u7684\u56de\u5f52\uff0c\u8c01\u77e5\u9053\u4ed6\u5728\u65b0\u7cfb\u7edf\u4e2d\u71c3\u70e7\u65f6\u53ef\u80fd\u4f1a\u6709\u4ec0\u4e48\u5176\u4ed6\u6539\u8fdb\u3002", "note_en": "We Rely On Your Support: Have you heard of  Phoronix Premium? It&#39;s what complements advertisements on this site for our premium ad-free service. For as little as $3 USD per month, you can help support our site while the funds generated allow us to keep doing Linux hardware reviews, performance benchmarking, maintain our community forums, and much more. You can also consider  a tip via PayPal.   An interesting anecdote shared in today&#39;s  Linux 5.7-rc7 announcement is word that Linux and Git creator Linus Torvalds switched his main rig over to an AMD Ryzen Threadripper.\r   At least for what he has said in the past, Linus has long been using Intel boxes given his close relationship with the company (and even close proximity to many of the Intel Portland open-source crew). In fact, he commented this is the first time in about fifteen years not using an Intel system as his primary machine. He made this interesting remark in the RC7 announcement:\r  In fact, the biggest excitement this week for me was just that I upgraded my main machine, and for the first time in about 15 years, my desktop isn&#39;t Intel-based. No, I didn&#39;t switch to ARM yet, but I&#39;m now rocking an AMD Threadripper 3970x. My &#39;allmodconfig&#39; test builds are now three times faster than they used to be, which doesn&#39;t matter so much right now during the calming down period, but I will most definitely notice the upgrade during the next merge window.\n  The  Threadripper 3970X and the rest of the 3900 series line-up are incredibly great options for kernel developers and those frequently compiling large code-bases. He didn&#39;t mention the CPU in his prior Intel box, but he is seeing 3x faster builds.\r    With the upcoming  Linux 5.8 merge window in early June, his Threadripper system is sure to have a great workout.     This in turn is actually good news as well for AMD Ryzen Linux users: as Torvalds is constantly building the latest kernel code for mainline, he tends to shout quite publicly and loudly when any code breaks on his systems stemming from botched/poorly-tested pull requests... Thus with the extra and immediate exposure on Threadripper, he will hopefully be spotting any kernel-breaking regressions more quickly and who knows whatever other improvements he may be able to wrangle up as he&#39;s burning in his new system.", "posttime": "2020-05-25 17:36:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,torvalds,linux", "title": "Linus Torvalds\u5728\u4f7f\u7528\u82f1\u7279\u5c1415\u5e74\u540e\u6539\u7528AMD Ryzen ThreadRipper", "title_en": "Linus Torvalds Switches to AMD Ryzen Threadripper After 15 Years of Using Intel", "transed": 1, "url": "http://www.phoronix.com/scan.php?page=news_item&px=Torvalds-Threadripper", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "torvalds", "linux"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003620, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u897f\u5170\u603b\u7406\u6770\u8f9b\u8fbe\u00b7\u963f\u5fb7\u6069(Jacinda Ardern)\u5efa\u8bae\u96c7\u4e3b\u8003\u8651\u4e00\u5468\u56db\u5929\u5de5\u4f5c\u5236\u548c\u5176\u4ed6\u7075\u6d3b\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u4ee5\u6b64\u6765\u4fc3\u8fdb\u65c5\u6e38\u4e1a\uff0c\u5e2e\u52a9\u5458\u5de5\u89e3\u51b3\u957f\u671f\u5b58\u5728\u7684\u5de5\u4f5c/\u751f\u6d3b\u5e73\u8861\u95ee\u9898\u3002\n\u5728\u4e00\u6bb5Facebook\u76f4\u64ad\u89c6\u9891\u4e2d\uff0cArdern\u8868\u793a\uff0c\u4eba\u4eec\u5efa\u8bae\u91c7\u53d6\u4e00\u5207\u63aa\u65bd\uff0c\u4ece\u7f29\u77ed\u4e00\u5468\u5de5\u4f5c\u65f6\u95f4\u5230\u589e\u52a0\u516c\u5171\u5047\u671f\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u523a\u6fc0\u7ecf\u6d4e\u548c\u9f13\u52b1\u56fd\u5185\u65c5\u6e38\u4e1a\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u540c\u65f6\u8fb9\u5883\u4ecd\u7136\u5bf9\u5916\u56fd\u4eba\u5173\u95ed\u3002\n\u603b\u7406\u7684\u975e\u6b63\u5f0f\u8bc4\u8bba\u8ba9\u65b0\u897f\u5170\u4eba\u5174\u594b\u4e0d\u5df2\uff0c\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u5728\u8d28\u7591\u5927\u6d41\u884c\u662f\u5426\u4f1a\u5e26\u6765\u7ffb\u5929\u8986\u5730\u7684\u7cfb\u7edf\u6027\u53d8\u5316\uff0c\u6216\u8005\u751f\u6d3b\u662f\u5426\u4f1a\u6062\u590d\u6b63\u5e38\uff0c\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u5173\u7684\u95ee\u9898\u3002\nArdern\u5728\u8be5\u56fd\u7684\u65c5\u6e38\u4e2d\u5fc3\u4e4b\u4e00\u7f57\u6258\u9c81\u4e9a\u8bf4\uff0c\u8bb8\u591a\u65b0\u897f\u5170\u4eba\u8868\u793a\uff0c\u5982\u679c\u4ed6\u4eec\u7684\u5de5\u4f5c\u751f\u6d3b\u6709\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u4ed6\u4eec\u4f1a\u66f4\u591a\u5730\u5728\u56fd\u5185\u65c5\u884c\u3002\u75ab\u60c5\u7206\u53d1\u540e\uff0c\u65b0\u897f\u5170\u7684\u65c5\u6e38\u5e02\u573a\u5927\u5e45\u4e0b\u6ed1\uff0c\u6240\u6709\u8fb9\u5883\u4ecd\u7136\u5bf9\u5916\u56fd\u4eba\u5173\u95ed\uff0c\u8bb8\u591a\u65b0\u897f\u5170\u4eba\u5728\u88c1\u5458\u7684\u60c5\u51b5\u4e0b\u63a5\u53d7\u51cf\u85aa\u6216\u52d2\u7d27\u88e4\u8170\u5e26\u3002\n\u201c\u6211\u542c\u5230\u5f88\u591a\u4eba\u5efa\u8bae\u6211\u4eec\u5e94\u8be5\u5b9e\u884c\u4e00\u5468\u56db\u5929\u5de5\u4f5c\u5236\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u96c7\u4e3b\u548c\u96c7\u5458\u4e4b\u95f4\u7684\u95ee\u9898\u3002\u4f46\u6b63\u5982\u6211\u5df2\u7ecf\u8bf4\u8fc7\u7684\uff0c\u5173\u4e8eCovid\u548c\u4eba\u4eec\u5728\u5bb6\u5de5\u4f5c\u7684\u7075\u6d3b\u6027\uff0c\u4ee5\u53ca\u53ef\u4ee5\u4ece\u8fd9\u79cd\u7075\u6d3b\u6027\u4e2d\u83b7\u5f97\u7684\u751f\u4ea7\u529b\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u5230\u4e86\u5f88\u591a\u3002\u201c\u963f\u5fb7\u6069\u8bf4\u3002\n\u201c\u5982\u679c\u4f60\u662f\u4e00\u540d\u96c7\u4e3b\uff0c\u5e76\u4e14\u6709\u80fd\u529b\u8fd9\u4e48\u505a\uff0c\u6211\u771f\u7684\u4f1a\u9f13\u52b1\u4eba\u4eec\u8003\u8651\u8fd9\u4e00\u70b9\u3002\u60f3\u4e00\u60f3\u8fd9\u662f\u5426\u9002\u7528\u4e8e\u4f60\u7684\u5de5\u4f5c\u573a\u6240\uff0c\u56e0\u4e3a\u8fd9\u80af\u5b9a\u4f1a\u5e2e\u52a9\u5168\u56fd\u5404\u5730\u7684\u65c5\u6e38\u4e1a\u3002\u201c\u3002\n\u5b89\u5fb7\u9c81\u00b7\u5df4\u6069\u65af(Andrew Barnes)\u662fPerpetual Guardian\u7684\u521b\u59cb\u4eba\uff0c\u8fd9\u5bb6\u62e5\u6709200\u591a\u540d\u5458\u5de5\u7684\u4f01\u4e1a\u57282018\u5e74\u8fc7\u6e21\u5230\u6bcf\u5468\u5de5\u4f5c\u56db\u5929\u3002\n\u5df4\u6069\u65af\u53d1\u73b0\uff0c\u8fd9\u4e00\u8f6c\u53d8\u8ba9\u4ed6\u7684\u5458\u5de5\u66f4\u5feb\u4e50\uff0c\u5de5\u4f5c\u6548\u7387\u66f4\u9ad8\uff0c\u5e76\u8868\u793a\uff0c\u8fd9\u4e00\u5236\u5ea6\u5bf9\u8eab\u5fc3\u5065\u5eb7\u3001\u73af\u5883\u3001\u5bb6\u5ead\u548c\u793e\u4f1a\u751f\u6d3b\u4ee5\u53ca\u6c14\u5019\u53d8\u5316\u4e5f\u6709\u597d\u5904\u3002\n\u5df4\u6069\u65af\u8bf4\uff1a\u201c\u5728Covid\u4e8b\u4ef6\u4e4b\u540e\uff0c\u65b0\u897f\u5170\u80af\u5b9a\u4f1a\u5b9e\u884c\u4e00\u5468\u56db\u5929\u5de5\u4f5c\u5236\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c06\u662f\u4e00\u79cd\u91cd\u5efa\u7ecf\u6d4e\u7684\u6218\u7565\uff0c\u7279\u522b\u662f\u5728\u65b0\u897f\u5170\u8f6c\u5411\u56fd\u5185\u91cd\u70b9\u7684\u65f6\u5019\uff0c\u91cd\u5efa\u906d\u53d7\u91cd\u521b\u7684\u65c5\u6e38\u5e02\u573a\u3002\u201d\n\u201c\u6211\u4eec\u9700\u8981\u4fdd\u7559\u5728\u5bb6\u5de5\u4f5c\u5e26\u6765\u7684\u6240\u6709\u751f\u4ea7\u529b\u597d\u5904\uff0c\u5305\u62ec\u66f4\u6e05\u6d01\u7684\u7a7a\u6c14\u548c\u907f\u514d\u4ea4\u901a\u62e5\u5835\uff0c\u5728\u5e2e\u52a9\u4f01\u4e1a\u7ef4\u6301\u8fd0\u8425\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u901a\u52e4\u5e26\u6765\u7684\u751f\u4ea7\u529b\u635f\u5931\u3002\u201d\u6211\u4eec\u5fc5\u987b\u5927\u80c6\u5bf9\u5f85\u6211\u4eec\u7684\u6a21\u5f0f\u3002\u8fd9\u662f\u4e00\u6b21\u5927\u89c4\u6a21\u91cd\u542f\u7684\u673a\u4f1a\u3002\u201c\u3002\n\u5df4\u6069\u65af\u8bf4\uff0c\u65b0\u897f\u5170\u53ef\u4ee5\u6548\u4eff\u5fb7\u56fd\u7684\u5e93\u5c14\u624e\u8d1d\u7279(Kurzarbeit)\u4f53\u7cfb\uff0c\u5373\u201c\u77ed\u65f6\u5de5\u4f5c\u201d\uff0c\u8ba9\u66f4\u591a\u7684\u4eba\u7559\u5728\u5de5\u4f5c\u5c97\u4f4d\u4e0a\uff0c\u5e76\u5229\u7528\u989d\u5916\u7684\u4e00\u5929\u6765\u63d0\u9ad8\u6280\u80fd\u6216\u518d\u57f9\u8bad\u3002\n\u201c\u6700\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u8003\u8651\u5230\u89e3\u51b3\u666e\u904d\u5b58\u5728\u7684\u7cbe\u795e\u5065\u5eb7\u95ee\u9898\u7684\u5fc5\u8981\u6027\uff0c\u201d\u5df4\u6069\u65af\u8bf4\u3002\n\u201c\u4ec1\u6148\u7814\u7a76\u6240\u62a5\u544a\u8bf4\uff0c\u5728\u5c01\u9501\u671f\u95f4\uff0c\u5176\u670d\u52a1\u7684\u4f7f\u7528\u7387\u4e0a\u5347\u4e8625%\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u7406\u89e3\uff0c\u4e3a\u4e86\u5728\u7ecf\u6d4e\u4e0a\u590d\u82cf\uff0c\u5fc5\u987b\u628a\u91cd\u70b9\u653e\u5728\u5fc3\u7406\u5065\u5eb7\u4e0a\u3002\u6bcf\u54684\u5929\u662f\u4e00\u4e2a\u5728\u5404\u4e2a\u65b9\u9762\u4fdd\u62a4\u5de5\u4eba\u5065\u5eb7\u7684\u5de5\u5177\uff0c\u4f7f\u8fd9\u4e00\u6a21\u5f0f\u4e0e\u6211\u4eec\u6240\u5904\u7684\u65b0\u4e16\u754c\u66f4\u52a0\u76f8\u5173\u3002\u201c\u3002\n\u6570\u4ee5\u4e07\u8ba1\u7684\u65b0\u897f\u5170\u4eba\u5728\u5c01\u9501\u671f\u95f4\u88ab\u88c1\u5458\uff0c\u5efa\u7b51\u516c\u53f8\u5f17\u83b1\u5f7b\u4eca\u5929\u5ba3\u5e03\u88c1\u54581000\u4eba\u3002\n\u56fd\u9645\u8d27\u5e01\u57fa\u91d1\u7ec4\u7ec7\u8868\u793a\uff0c\u9884\u8ba1\u4eca\u5e74\u7ecf\u6d4e\u5c06\u6536\u7f29\u9ad8\u8fbe8%\uff0c\u800c\u5931\u4e1a\u7387\u53ef\u80fd\u8d85\u8fc715%\uff0c\u6700\u9ad8\u53ef\u8fbe30%\u3002", "note_en": "New Zealand\u2019s prime minister  Jacinda Ardern has suggested employers consider a four-day working week and other flexible working options as a way to boost tourism and help employees address persistent work/life balance issues.\n In a Facebook live video Ardern said people had suggested everything from the shorter work week to more public holidays as a means to stimulate the economy and encourage domestic tourism, while the borders remain closed to foreign nationals.\n The prime minister\u2019s informal comments have excited New Zealanders, many of whom are questioning whether seismic, systemic change will result from the pandemic \u2013 or whether life will return to normal; with its associated problems.\n  Speaking from Rotorua, one of the country\u2019s tourist hubs, Ardern said many New Zealanders said they would travel more domestically if they had more flexibility in their working lives. The country\u2019s tourism market has taken a massive downturn after the pandemic, with all borders remaining closed to foreign nationals and many New Zealanders taking pay-cuts or tightening their belt in case of lay-offs.\n \u201cI hear lots of people suggesting we should have a four-day workweek. Ultimately that really sits between employers and employees. But as I\u2019ve said there\u2019s just so much we\u2019ve learnt about Covid and that flexibility of people working from home, the productivity that can be driven out of that,\u201d Ardern said.\n \u201cI\u2019d really encourage people to think about that if you\u2019re an employer and in a position to do so. To think about if that\u2019s something that would work for your workplace because it certainly would help tourism all around the country.\u201d\n  Andrew Barnes is the founder of Perpetual Guardian, a business of more than 200 people that transitioned to a four-day workweek in 2018.\n Barnes found the shift made his employees happier and more productive and said the regime also had benefits for mental and physical health, the environment, family and social lives, and climate change.\n \u201cNew Zealand could definitely go to a four-day week in the aftermath of Covid, and in fact it would be a strategy to rebuild the economy and particularly the hard-hit tourism market as it pivots to a domestic focus,\u201d Barnes said.\n  \u201cWe need to retain all the productivity benefits working from home has brought, including cleaner air and a lack of gridlock lost productivity from commuting while helping businesses stay afloat. We have to be bold with our model. This is an opportunity for a massive reset.\u201d\n Barnes said  New Zealand could model its new way of work on the German system of  kurzarbeit, meaning \u201cshort work\u201d, allowing more people to stay in jobs and using the extra day to upskill or retrain.\n \u201cFinally, we have to factor in the need to address widespread mental health problems,\u201d Barnes said.\n \u201cThe Kindness Institute reported a 25% uptick in use of its services during lockdown, so we must understand that there has to be a focus on mental health in order to resurge economically. The 4 Day Week is a tool to protect the health of workers in every respect, making this model all the more relevant to the new world we find ourselves in.\u201d\n Tens of thousands of New Zealanders have been made redundant during the lockdown period, with building company Fletchers announcing 1000 lay-offs today.\n The economy is expected to contract by up to 8% this year, the IMF has said, while unemployment figures could exceed 15%, and reach as high as 30%.", "posttime": "2020-05-25 17:03:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,\u5de5\u4f5c\u5236,working", "title": "\u6bcf\u5468\u56db\u5929\u5de5\u4f5c\u5236\u662f\u5728\u51a0\u72b6\u75c5\u6bd2\u4e4b\u540e\u91cd\u5efa\u65b0\u897f\u5170\u7684\u65b9\u5f0f", "title_en": "Four-day working week as way to rebuild New Zealand after Covid-19", "transed": 1, "url": "https://www.theguardian.com/world/2020/may/20/jacinda-ardern-flags-four-day-working-week-as-way-to-rebuild-new-zealand-after-covid-19", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u5de5\u4f5c\u5236", "working"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003618, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4ec0\u4e48\u4f60\u4eec\u8fd9\u4e9b\u8822\u8d27\u8981\u7528\u8fd9\u4e9b\u4f4e\u52a3\u7684\u8bed\u8a00\u8f7d\u4f53\uff0c\u800c\u6211\u4eec\u8fd9\u91cc\u5374\u6709\u8fd9\u6837\u7684\u4e1c\u897f\u3002\n\u73cd\u8d35\uff0c\u5982\u6b64\u4f18\u96c5\uff0c\u8ba9\u6211\u5982\u6b64\u6109\u60a6\uff1f\u4f60\u600e\u4e48\u80fd\u8fd9\u4e48\u778e\u8fd9\u4e48\u50bb\uff1f\n\u90a3\u573a\u8fa9\u8bba\u4f60\u6c38\u8fdc\u8d62\u4e0d\u4e86\uff0c\u6211\u8ba4\u4e3a\u4f60\u4e5f\u4e0d\u5e94\u8be5\u5c1d\u8bd5\u3002\n\u572820\u4e16\u7eaa70\u5e74\u4ee3\u672b\uff0c\u65bd\u4e50\u5e15\u6d1b\u963f\u5c14\u6258\u7814\u7a76\u4e2d\u5fc3\u7684\u7814\u7a76\u4eba\u5458\u53d1\u660e\u4e86\u73b0\u4ee3\u8ba1\u7b97\u673a\u3002\u5f53\u7136\uff0c\u8fd8\u6709\u5176\u4ed6\u4eba\u3002\n\u5176\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u662f\u7528Smalltalk\u7f16\u7a0b\u8bed\u8a00\u5b8c\u6210\u7684\uff0c\u5e76\u4e14\u57fa\u4e8eSmalltalk\u7f16\u7a0b\u8bed\u8a00\u3002\u56db\u5341\u5e74\u3002\n\u4e3b\u6d41\u8bed\u8a00\u5c31\u662f\u4eca\u5929\u3002\u8be5\u8bed\u8a00\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u63d0\u4f9b\u4e86\u4e00\u4e2aIDE\uff0c\u5b83\u5728\u3002\n\u8bb8\u591a\u65b9\u6cd5\u4ecd\u7136\u628a\u76ee\u524d\u65e5\u98df\u3001\u9ed1\u6d1e\u3001\u7ea2\u77ee\u661f\u548c\u5176\u4ed6\u60b2\u5267\u3002\n\u4ee4\u4eba\u7f9e\u6127\u7684\u662f\uff0c\u5728\u90a3\u4e2a\u672f\u8bed\u4e0b\u4f2a\u88c5\u3002Smalltalk\u7684\u5f62\u8c61\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6bd4Docker\u597d\u5f97\u591a\u7684Docker\n(\u5f39\u51fa\u83dc\u5355\u3001\u6eda\u52a8\u6761\u3001\u4f7f\u5b83\u4eec\u6210\u4e3a\u53ef\u80fd\u7684Bit-BLT\u539f\u8bed)\u4ee5\u53caGUI\u6784\u5efa\u5668\uff0c\n\u7136\u800c\uff0c\u4eca\u5929\u7684Smalltalk\u88ab\u964d\u7ea7\u5230\u4e86\u771f\u6b63\u7684\u4fe1\u5f92\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\u7b54\u6848\u662f\u4e0d\u53ef\u77e5\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u8fd0\u884c\u5e73\u884c\u5b87\u5b99\u5e76\u8c03\u6574\u4e8b\u7269\u6765\u770b\u54ea\u4e00\u4e2a\u3002\n\u6211\u57282016\u5e74\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u786e\u5b9e\u63cf\u8ff0\u4e86\u8fd9\u6837\u4e00\u4e2a\u53e6\u4e00\u4e2a\u5b87\u5b99\uff1b\u8fd9\u53ef\u80fd\u662f\u6211\u505a\u8fc7\u7684\u6700\u597d\u7684\u6f14\u8bb2\u3002\n\u7136\u800c\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u95ee\u9898\u4e2d\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u5c06\u8bb2\u8ff0\u5386\u53f2\u7684\u4e00\u90e8\u5206\u3002\n\u636e\u6211\u6240\u77e5\uff0c\u6211\u8ba4\u4e3a\u662f\u76f8\u5173\u7684\u3002\u6211\u6562\u80af\u5b9a\u4e0b\u9762\u7684\u8d26\u76ee\u6709\u8bef\u3002\n\u5f53\u7136\u8fd8\u6709\u6bd4\u6211\u66f4\u63a5\u8fd1\u5386\u53f2\u7684\u4eba\u3002\u6211\u5e0c\u671b\u4ed6\u4eec\u80fd\u6269\u5927\u6211\u7684\u7814\u7a76\u8303\u56f4\u3002\n\u5982\u679c\u9700\u8981\uff0c\u8bf7\u8bc4\u8bba\u5e76\u66f4\u6b63\u6211\u3002\u6211\u76f8\u4fe1\u6211\u4f1a\u56e0\u4e3a\u8fd9\u4ef6\u4e8b\u88ab\u9a82\u7684\u3002\u770b\u6211\u662f\u5426\u5728\u4e4e\u3002\n\u7f3a\u4e4f\u6807\u51c6\u3002SmallTalk\u66fe\u7ecf(\u73b0\u5728\u4ecd\u7136\u62e5\u6709)\u591a\u4e2a\u5b9e\u73b0--\u8fdc\u8fdc\u4e0d\u6b62\u5982\u6b64\u3002\n\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u4f18\u52bf\u3002\u7136\u800c\uff0c\u5728Smalltalk\u7684\u6848\u4f8b\u4e2d\uff0c\u4e8b\u5b9e\u8bc1\u660e\u60c5\u51b5\u622a\u7136\u4e0d\u540c\u3002\n\u6bcf\u4e2a\u4f9b\u5e94\u5546\u7684\u7248\u672c\u90fd\u7565\u6709\u4e0d\u540c--\u4e0e\u5176\u8bf4\u662f\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u4e0d\u5982\u8bf4\u662f\u5e73\u53f0\u7684\u4e0d\u540c\u3002\n\u7279\u522b\u662f\uff0cSmalltalk\u7c7b\u6ca1\u6709\u5e38\u89c4\u8bed\u6cd5\uff1b\u76f8\u53cd\uff0c\u5b83\u4eec\u662f\u901a\u8fc7\u3002\n\u7a0b\u5e8f\u5b9a\u4e49\u672c\u8eab\u662f\u4e0d\u53ef\u79fb\u690d\u7684\uff0c\u4e0d\u7ba1\u3002\n\u5f53\u7136\uff0c\u6709\u52aa\u529b\u6765\u8865\u6551\u8fd9\u4e00\u70b9\u3002Smalltalk\u6807\u51c6\u5316\u7684\u52aa\u529b\u53ef\u4ee5\u8ffd\u6eaf\u523080\u5e74\u4ee3\u672b\uff0c\n\u4f46\u572890\u5e74\u4ee3\u88ab\u63a8\u5f97\u66f4\u8fdc\u3002\u5509\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u4eec\u7684\u5f71\u54cd\u5fae\u4e4e\u5176\u5fae\u3002\n\u5f53\u7136\uff0c\u65b0\u8bf4\u6cd5\u5f7b\u5e95\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\u3002\u4f46\u662f\u6211\u4eec\u7684\u8d44\u91d1\u5f88\u5c11\n\u793e\u533a\u5bf9\u89e3\u51b3Smalltalk-80\u6a21\u578b\u4e2d\u7684\u5f31\u70b9\u7f3a\u4e4f\u5174\u8da3\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u3002\n\u5546\u4e1a\u6a21\u5f0f\u3002Smalltalk\u5546\u8d29\u5bf9\u5efa\u9020\u66f4\u597d\u7684\u6355\u9f20\u5668\u7684\u60f3\u6cd5\u6709\u4e00\u79cd\u53e4\u602a\u7684\u4fe1\u5ff5\u3002\n\u8fd9\u4e2a\u4e16\u754c\u4f1a\u6572\u51fa\u4e00\u6761\u8def\u5230\u4f60\u7684\u95e8\u53e3\u3002\u65e2\u7136\u4ed6\u4eec\u9020\u4e86\u4e00\u4e2a\u597d\u5f97\u591a\u7684\u6355\u9f20\u5668\uff0c\u4ed6\u4eec\u3002\n\u8fd9\u751a\u81f3\u662f\u5728\u5f00\u6e90\u6982\u5ff5\u63d0\u51fa\u4e4b\u524d\uff1b\u5c3d\u7ba1Smalltalk\u7f16\u8bd1\u5668\u3001\u5de5\u5177\u3002\n\u5509\uff0c\u5927\u591a\u6570\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5b81\u613f\u7528\u6253\u706b\u77f3\u5de5\u5177\u628a\u4ed6\u4eec\u7684\u7a0b\u5e8f\u523b\u5728\u77f3\u677f\u4e0a\u3002\n\u5939\u5728\u7259\u7f1d\u91cc\u4e5f\u6bd4\u82b1\u94b1\u4e70\u5de5\u5177\u597d\uff0c\u4e0d\u7ba1\u591a\u4e48\u7cbe\u81f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u4f9b\u5e94\u5546\u5bf9\u6b64\u63d0\u51fa\u4e86\u6307\u63a7\u3002\n\u6b21\u4f18\uff0c\u800c\u4e14\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u5927\u591a\u6570\u65b9\u6cd5\u66f4\u8d2a\u5a6a\u3001\u66f4\u4e0d\u7406\u60f3\u3002\u5b83\u7684\u660e\u663e\u6210\u529f\u8bf4\u660e\u4e86\u3002\n\u5728\u4e00\u4e2a\u7279\u522b\u6076\u52a3\u548c\u60b2\u60e8\u7684\u6848\u4f8b\u4e2d\uff0c\u6211\u544a\u8bc9ParcPlace\u62d2\u7edd\u4e86Sun\u7684\u62a5\u4ef7\n\u5141\u8bb8\u5728Sun\u5de5\u4f5c\u7ad9\u4e0a\u5206\u53d1ParcPlace Smalltalk\u7684\u5fae\u7cfb\u7edf\u3002Sun\u4f1a\u4e3a\u6bcf\u4e2a\u4eba\u652f\u4ed8\u3002\nSmalltalk\u8fc7\u53bb\u548c\u73b0\u5728\u90fd\u6bd4C\u6162\u5f97\u591a\uff0c\u5bf9\u5185\u5b58\u7684\u8981\u6c42\u4e5f\u66f4\u9ad8\u3002\u572820\u4e16\u7eaa80\u5e74\u4ee3\uff0c\n20\u4e16\u7eaa90\u5e74\u4ee3\u521d\uff0c\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u771f\u6b63\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\u3002\u572820\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\uff0c\u5f53\u6211\u4eec\u81f4\u529b\u4e8eStrongtalk\u65f6\uff0c\u745e\u58eb\u3002\n\u5728\u6218\u573a\u4e0a\u3002\u4ed6\u4eec\u53ef\u4ee5\u5728\u5176\u4ed6\u4eba\u505a\u4e0d\u5230\u7684\u5730\u65b9\u8fd9\u6837\u505a\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u613f\u610f\u88c5\u5907\u3002\n\u4ed6\u4eec\u7684\u51fa\u7eb3\u5458\u62e5\u6709\u5927\u591a\u6570\u516c\u53f8\u8ba4\u4e3a\u6210\u672c\u8fc7\u9ad8\u7684\u5f3a\u5927\u8ba1\u7b97\u673a-IBM PCS\u3002\n\u5b9e\u73b0\u6280\u672f\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u8d76\u4e0a\uff0c\u5f53\u5b83\u8d76\u4e0a\u65f6\uff0c\u5b83\u88ab\u5e94\u7528\u5230\u8f83\u5c0f\u7684\u3002\n\u8bed\u8a00\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u6b8b\u9177\u7684\u8bbd\u523a\u3002JIT\u8d77\u6e90\u4e8eAPL\uff0c\u4f46Smalltalk\u4e5f\u662f\u8fd9\u65b9\u9762\u7684\u5148\u9a71\u3002\n\u793a\u4f8b\uff1a\u81ea\u5df1\u9700\u898164MB\uff0c\u6700\u597d\u662f96 MB\uff0c\u5e76\u4e14\u53ea\u80fd\u5728Sun\u5de5\u4f5c\u7ad9\u4e0a\u8fd0\u884c\u3002StrongTalk\u8fd0\u884c\u901f\u5ea6\u4e3a8Mb\n\u7136\u540e\uff0cJava\u51fa\u73b0\u4e86\uff0c1997\u5e74StrongTalk\u6bd4Java\u8fd8\u5feb\uff0c\u4f46StrongTalk\u88abSun\u6536\u8d2d\u4e86\uff1b\nSmalltalk\u7cfb\u7edf\u88ab\u6d3b\u57cb\u4e86\uff0c\u76f4\u5230\u4e3a\u65f6\u5df2\u665a\u3002\u5f53\u6211\u6700\u7ec8\u628a\u5b83\u5f00\u6e90\u7684\u65f6\u5019\uff0c\n\u6bd4\u7279\u5df2\u7ecf\u8150\u70c2\u6216\u6d88\u5931\uff0c\u7cfb\u7edf\u6ca1\u6709\u652f\u6301\uff0c\u4e16\u754c\u5df2\u7ecf\u5411\u524d\u770b\u4e86\u3002\u7136\u800c\uff0c\nSmalltalk\u793e\u533a\u5bf9\u8be5\u9879\u76ee\u51e0\u4e4e\u6ca1\u6709\u5174\u8da3\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u4ecd\u7136\u5f88\u80fd\u8bf4\u660e\u95ee\u9898\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679cJVM\u6295\u5165\u7684\u6240\u6709\u5de5\u7a0b\u5de5\u4f5c\u90fd\u96c6\u4e2d\u5728Smalltalk VM\u4e0a\u3002\n\u540c\u6837\u503c\u5f97\u6df1\u601d\u7684\u662f\uff0c\u539f\u59cb\u901f\u5ea6\u5f80\u5f80\u6ca1\u6709\u4eba\u4eec\u60f3\u8c61\u7684\u90a3\u4e48\u91cd\u8981\u3002\n\u5728\u7f51\u9875\u4e2d\u8fd0\u884c\u3002\u5509\uff0cJava\u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u5ba2\u6237\u7aef\u6280\u672f\u3002\u5728\u795d\u8d3a\u4e2d\uff0c\u5373\u4f7f\u662fSqueak\u3002\n\u89e3\u91ca\u5668(\u66f4\u4e0d\u7528\u8bf4Strongtalk\u4e86)\u7684\u542f\u52a8\u65f6\u95f4\u6bd4Java\u597d\u5f97\u591a\uff0c\u4ea4\u4e92\u6027\u4e5f\u66f4\u597d\n\u4e5f\u4f1a\u6709\u56de\u5e94\u3002\u5b83\u7684\u8db3\u8ff9\u4e5f\u8981\u5c0f\u5f97\u591a\u3002\u8fd9\u5bf9\u8868\u73b0\u51fa\u8272\u7684\u5ba2\u6237\u6765\u8bf4\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u57fa\u7840\u3002\n\u4e00\u65b9\u9762\uff0c\u7f51\u666f\u4e3a\u6d4f\u89c8\u5668\u5f00\u53d1\u4e86\u4e00\u79cd\u811a\u672c\u8bed\u8a00\u3002\u6bd5\u7adfJava\u4e0d\u4f1a\u88ab\u780d\u6389\u3002\n\u5b83\u3002Sun\u5141\u8bb8\u4ed6\u4eec\u4f7f\u7528Java\u540d\u79f0\u4f5c\u4e3a\u4ed6\u4eec\u7684\u8bed\u8a00\u3002\u201c\u4f60\u53ef\u80fd\u542c\u8bf4\u8fc7\u8fd9\u4ef6\u4e8b\u3002\n\u6700\u7ec8\uff0c\u4eba\u4eec\u627e\u5230\u4e86\u4e00\u79cd\u8ba9Javascript\u53d8\u5f97\u66f4\u5feb\u7684\u65b9\u6cd5\u3002\u54ea\u4e9b\u4eba\uff1f\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u6709\u4e9b\u662f\u76f8\u540c\u7684\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679cSun\u62e5\u6709\u4e00\u79cd\u53ef\u884c\u7684\u5ba2\u6237\u7aef\u6280\u672f\u3002\u4e5f\u8bb8\u70edJava Web\u6d4f\u89c8\u5668\u8fd8\u4f1a\u662f\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u5ba2\u6237\u7aefJava\u7684\u5931\u8d25\u5bfc\u81f4\u4e86\u5bf9\u670d\u52a1\u5668\u7aefJava\u7684\u5f3a\u8c03\u3002\n\u8fd9\u5728\u5f53\u65f6\u770b\u8d77\u6765\u662f\u4e2a\u597d\u4e3b\u610f\uff0c\u4f46\u6700\u7ec8\u5c06Sun\u7684\u4ea7\u54c1\u5546\u54c1\u5316\u5e76\u505a\u51fa\u4e86\u8d21\u732e\u3002\n\u76f4\u63a5\u5bfc\u81f4\u592a\u9633\u516c\u53f8\u7684\u57ae\u53f0\u3002Sun\u5728Strongtalk\u4e2d\u62e5\u6709\u4e00\u6d41\u7684\u5ba2\u6237\u7aef\u6280\u672f\uff0c\u4f46\u8be5\u516c\u53f8\u7684\n\u5f53\u7136\uff0c\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5462\uff1f\u51e0\u5e74\u524d\uff0c\u4e3a\u4e86\u4e13\u6ce8\u4e8eJava\uff0c\u4ed6\u4eec\u5173\u95ed\u4e86Self\u9879\u76ee\u3002\n\u4e24\u5e74\u540e\uff0c\u4ed6\u4eec\u82b1\u4e86\u6bd4\u53d1\u5c55\u81ea\u6211\u7684\u6210\u672c\u591a\u4e00\u4e2a\u6570\u91cf\u7ea7\u7684\u94b1\uff0c\u4e70\u56de\u4e86\u81ea\u5df1\u7684\u80a1\u7968\u3002\nSmalltalk\u6709\u5176\u72ec\u7279\u7684\u505a\u4e8b\u65b9\u5f0f\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u867d\u7136\u4e0d\u603b\u662f\u8fd9\u6837\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u8981\u597d\u5f97\u591a\u3002\nFFIS\u3002Smalltalk FFI\u7b28\u62d9\u3001\u53d7\u9650\u4e14\u6548\u7387\u4f4e\u4e0b\u3002\u6bd5\u7adf\uff0c\u4f60\u4e3a\u4ec0\u4e48\u8981\u3002\n\u6211\u4eec\u65e9\u572890\u5e74\u4ee3\u4e2d\u671f\u7684Strongtalk\u4e2d\u5c31\u63d0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f88\u4e45\u4ee5\u540e\uff0c\u6211\u4eec\u53c8\u5728Newtalk\u4e2d\u8c08\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\nStrongtalk\u4e5f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1b\u5076\u5c14\uff0c\u5176\u4ed6\u4eba\u4e5f\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u4e3b\u8981\u5de5\u4f5c\u4ecd\u7136\u96c6\u4e2d\u5728\u3002\n\u4ed6\u4eec\u81ea\u5df1\u4e0e\u4e16\u9694\u7edd\u7684\u4e16\u754c\uff0c\u5c31\u50cf\u6240\u6709\u5176\u4ed6\u65b9\u5f0f\u4e00\u6837\u3002\u540e\u6765\uff0c\u6211\u4eec\u6709\u4e86NewSpeech\u7684\u539f\u751fUI\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u6e90\u4ee3\u7801\u7ba1\u7406\u3002\u7f3a\u5c11\u5e38\u89c4\u8bed\u6cd5\u610f\u5473\u7740\u65e0\u6cd5\u7ba1\u7406Smalltalk\u4ee3\u7801\n\u4f7f\u7528\u4f20\u7edf\u7684\u6e90\u4ee3\u7801\u63a7\u5236\u7cfb\u7edf\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5b9a\u5236\u5de5\u5177\u3002\u6709\u4e9b\u5f88\u68d2-\u4f46\u662f\u3002\n\u901a\u5e38\uff0c\u5c06Smalltalk\u4ee3\u7801\u4fdd\u5b58\u5728\u50cf\u6587\u4ef6\u8fd9\u6837\u666e\u901a\u7684\u6587\u4ef6\u4e2d\u662f\u6709\u95ee\u9898\u7684\u3002\u4f7f\u7528\u7684Smalltalk\u3002\n\u4e00\u79cd\u79f0\u4e3a\u6587\u4ef6\u8f93\u51fa\u683c\u5f0f(file-out format)\u7684\u4e1c\u897f\uff0c\u5b83\u88ab\u5584\u610f\u5730\u63cf\u8ff0\u4e3a\u4e00\u7cfb\u5217\u53cd\u5c04API\u8c03\u7528\uff0c\u4ee5\u53ca\u3002\n\u4f7f\u7528\u5143\u6570\u636e\uff0c\u5176\u4e2d\u5305\u62ec\u4ee3\u7801\u88ab\u5f52\u6863\u65f6\u7684\u65f6\u95f4\u548c\u65e5\u671f\u3002\u8fd9\u662f\u4e00\u79cd\u590d\u5408\u3002\n\u73af\u5883\u3002\u539f\u56e0\u662fSmalltalk\u4ece\u6765\u90fd\u4e0d\u662f\u4f20\u7edf\u7684\u3002\n\u7406\u667a\u3002\u8fd9\u662f\u4e00\u4e2a\u6574\u4f53\u6784\u601d\u7684\u7f16\u7a0b\u7cfb\u7edf\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5c31\u662f\u8ba1\u7b97\u3002\n\u53d1\u751f\u5728\u6c9f\u901a\u7684\u5bf9\u8c61\u4e4b\u95f4\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u90fd\u5b58\u5728\u4e8e\u67d0\u4e2a\u5b87\u5b99\u4e2d\uff0c\u5c31\u50cf\u5bf9\u8c61\u7684\u6d77\u6d0b\u4e00\u6837\u3002\u4e00\u4e9b\u3002\n\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u7684\u5927\u591a\u6570\u77e5\u9053\u5982\u4f55\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff1b\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a\u7c7b(\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6ca1\u6709\n\u5f53\u60a8\u5c1d\u8bd5\u5c06\u67d0\u4e9b\u5bf9\u8c61\u4ece\u521b\u5efa\u5b83\u4eec\u7684\u73af\u5883(IDE)\u4e2d\u53d6\u51fa\u65f6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\n\u5982\u679c\u60a8\u5e0c\u671b\u901a\u8fc7\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0eIDE\u5206\u79bb\u6765\u90e8\u7f72\u8be5\u5e94\u7528\u7a0b\u5e8f(\u4e3a\u4e86\u51cf\u5c11\u5360\u7528\u7a7a\u95f4\u6216\u4fdd\u62a4\u60a8\u7684IP\uff0c\n\u6216\u8005\u907f\u514d\u5728\u6bcf\u4e2a\u90e8\u7f72\u7684\u526f\u672c\u4e0a\u652f\u4ed8IDE\u7684\u8bb8\u53ef\u8d39)\uff0c\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002\n\u81ea\u52a9\u8f66\u4ee5\u4e00\u79cd\u806a\u660e\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u7ebd\u6d3e\u514b\u5bf9\u6b64\u7684\u8bba\u8ff0\u8981\u591a\u5f97\u591a\u3002\n\u5982\u4eca\uff0c\u77e5\u8bc6\u4ea7\u6743\u66dd\u5149\u95ee\u9898\u5df2\u4e0d\u518d\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u57fa\u4e8e\u670d\u52a1\u5668\u7684\u670d\u52a1\u5668\u6765\u8bf4\uff0c\u8fd9\u65e0\u5173\u7d27\u8981\u3002\n\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u7528\u4e8e\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002\u5c3d\u7ba1\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u6d6a\u8d39\u7684\u5185\u5b58\u5360\u7528\u4ecd\u7136\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\u3002\n\u53ef\u4ee5\u505a\u5f97\u5f88\u597d\u3002Avi Bryant\u66fe\u7ecf\u5411\u6211\u89e3\u91ca\u8fc7\u4ed6\u662f\u5982\u4f55\u4e3a\u5df2\u6545\u7684\u3001\u4f1f\u5927\u7684\u3002\n\u6d89\u730eDB\u3002\u8fd9\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4f60\u53ea\u9700\u8981\u54ed\uff0c\u5b83\u7684\u8868\u73b0\u5c31\u50cf\u4e00\u4e2a\u7b26\u5492\u4f7f\u7528Squeak\u56fe\u50cf\u3002\n\u901a\u8fc720/20\u7684\u540e\u89c1\u4e4b\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4ece\u5c16\u5934\u8001\u677f\u7684\u89d2\u5ea6\u6765\u770b\uff0cSmalltalk\u7684\u4ef7\u503c\u3002\n\u82b1\u5f88\u591a\u94b1\u88ab\u9501\u5b9a\u5728\u901f\u5ea6\u6162\u7684\u8f6f\u4ef6\u4e0a\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u4f1a\u66b4\u9732\u4f60\u7684IP\uff0c\u5728\u5c4f\u5e55\u4e0a\u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u800c\u4e14\u3002\n\u4e0d\u80fd\u4e0e\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u5f88\u597d\u5730\u4ea4\u4e92\uff1b\u4f46\u662f\u7ef4\u62a4\u548c\u5f00\u53d1\u8981\u5bb9\u6613\u5f97\u591a\uff01\n\u7136\u800c\uff0c\u90a3\u4e9b\u770b\u5230\u8fc7\u53bb\u7684\u4eba\uff0c\u4eca\u5929\u4ecd\u7136\u5728\u8fd0\u884cSmalltalk\u7cfb\u7edf\uff0c\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u679c\uff1b\u52aa\u529b\u3002\n\u6211\u4eec\u8fd9\u4e9b\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u4eba\u53d1\u73b0\uff0c\u66f4\u5e7f\u6cdb\u7684\u4e16\u754c\u4e0d\u60f3\u542c-\u3002\n\u5373\u4f7f\u8fd9\u662f\u4e3a\u4e86\u5b83\u81ea\u5df1\u7684\u6700\u5927\u5229\u76ca\u3002\u8fd9\u4e0d\u4ec5\u9002\u7528\u4e8e\u76ee\u5149\u77ed\u6d45\u7684\u4f01\u4e1a\u9886\u5bfc\u5c42\uff0c\n\u6211\u76f8\u4fe1\uff0c\u8fd9\u4e2a\u793e\u533a\u662f\u7531\u90a3\u4e9b\u4e0d\u53d7Smalltalk\u56f0\u6270\u7684\u4eba\u81ea\u5df1\u6311\u9009\u51fa\u6765\u7684\u3002\n\u6700\u521d\u7684\u9650\u5236\uff0c\u56e0\u6b64\u6ca1\u6709\u52a8\u529b\u53bb\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u6216\u652f\u6301\u90a3\u4e9b\u8fd9\u6837\u505a\u7684\u4eba\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u7ecf\u5e38\n\u6211\u751a\u81f3\u770b\u4e0d\u5230\u8fd9\u4e9b\u9650\u5236\u6b63\u6446\u5728\u4ed6\u4eec\u9762\u524d\uff0c\u5bfc\u81f4\u4ed6\u4eec\u91c7\u7528\u4e0d\u5207\u5b9e\u9645\u7684\u3002\n\u4e5f\u8bb8Smalltalk\u7684\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u7684\u95ee\u9898\u662f\uff0c\u5b83\u5438\u5f15\u4e86\u4e00\u4e9b\u6709\u70b9\u592a\u6709\u521b\u9020\u529b\u7684\u4eba\uff0c\n\u7136\u800c\uff0cSmalltalk\u4ecd\u7136\u5728\u4f7f\u7528\uff0c\u6bd4\u5927\u591a\u6570\u4eba\u610f\u8bc6\u5230\u7684\u8981\u591a\u5f97\u591a\u3002\u52c7\u6562\u7684\u7075\u9b42\u7ee7\u7eed\u3002\n\u5728Smalltalk\u7cfb\u7edf\u4e0a\u5de5\u4f5c\uff0c\u65e2\u6709\u5546\u4e1a\u7684\uff0c\u4e5f\u6709\u5f00\u6e90\u7684\u3002\u6211\u63d0\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u662f\u3002\n\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u5373\u4f7f\u6211\u89c9\u5f97\u4ed6\u4eec\u6ca1\u6709\u5f97\u5230\u5f7b\u5e95\u548c\u6709\u6548\u7684\u5904\u7406\u3002\n\u5c3d\u4ed6\u4eec\u6240\u80fd\u3002\u7ed9\u4ed6\u4eec\u66f4\u591a\u7684\u6743\u529b\u3002\u540c\u6837\uff0c\u6211\u4eec\u4ecd\u5728\u82b1\u65f6\u95f4\u8bd5\u56fe\u5c06\u65b0\u8bdd\u5e26\u56de\u3002\n\u66f4\u53ef\u7528\u7684\u72b6\u6001\u3002\u771f\u6b63\u7684\u8fdb\u6b65\u4e0d\u662f\u7531\u5b66\u7a76\u548c\u5e73\u51e1\u7684\u4eba\u53d6\u5f97\u7684\uff0c\u800c\u662f\u7531\u68a6\u60f3\u5bb6\u53d6\u5f97\u7684\uff0c\u4ed6\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002", "note_en": "&#34;Why do you jackasses use these inferior linguistic vehicles when we have something here that\u2019s so\n precious, so elegant, which gives me so much pleasure? How can you be so blind and so foolish?&#34;\n That debate you\u2019ll never win, and I don\u2019t think you ought to try.\n       In the late 1970s, researchers at Xerox Parc invented modern computing.\u00a0 Of course, there were others\n    A large part of that was done in, and based upon, the Smalltalk programming language. Forty years\n  mainstream language is today. The language leveraged those capabilities to provide an IDE that in\n many ways still puts the eclipses, black holes, red dwarfs and other travesties that currently\n masquerade under that term to shame.\u00a0 The Smalltalk image provided a much better Docker than\n     (pop-up menus, scroll bars, the bit-blt primitives that make them possible) as well as GUI builders,\n    And yet, today Smalltalk is relegated to a small niche of true believers.\u00a0 Whenever two or more\n    The answer is unknowable, since we cannot run parallel universes and tweak things to see which\n    I did describe such an alternate universe in a  talk in 2016; it may be the best talk I ever gave.\n   Nevertheless, I think we can learn something from looking into this question. I&#39;ll relate parts of history\n that I deem relevant, as I know them. I&#39;m sure there are inaccuracies in the account below.\n There are certainly people who were closer to the history than I.\u00a0 My hope is that they&#39;ll expand on my\n comments and correct me as needed. I&#39;m sure I&#39;ll be yelled at for some of this. See if I care.\n      Lack of a Standard.  Smalltalk had (and still has) multiple implementations - more so than much\n  would be considered an advantage. However, in Smalltalk&#39;s case, things proved to be quite different.\n   Each vendor had a slightly different version - not so much a different language, as a different platform.\n In particular, Smalltalk classes do not have a conventional syntax; instead, they are defined via\n  program definitions themselves were not portable, irrespective of other differences in APIs used by the\n    There were of course efforts to remedy this. Smalltalk standardization efforts go back to the late 80s,\n but were pushed further in the 90s. Alas, in practice they had very little impact.\n   Newspeak of course, fixed this problem thoroughly, along with many others. But we were poorly funded\n  The community&#39;s lack of interest in addressing weaknesses in the Smalltalk-80 model will be a\n    Business model.  Smalltalk vendors had the quaint belief in the notion of &#34;build a better mousetrap\n and the world will beat a path to your door&#34;.\u00a0 Since they had built a vastly better mousetrap, they\n    This was before the notion of open source was even proposed; though the Smalltalk compilers, tools\n    Alas, most software developers would rather carve their programs onto stone tablets using flint tools\n held between their teeth than pay for tools, no matter how exquisite. Indeed, some vendors charged\n  suboptimal, and this approach was greedier and less optimal than most. Its evident success speaks\n    In one particularly egregious and tragic case, I&#39;m told ParcPlace declined an offer from Sun\n Microsystems to allow ParcPlace Smalltalk to be distributed on Sun workstations. Sun would pay a per\n            Smalltalk was and is a lot slower than C, and more demanding in terms of memory. In the 1980s and\n early 1990s, these were a real concern. In the mid-1990s, when we worked on Strongtalk, Swiss\n  in the field. They could afford to do so where others could not. For example, they were willing to equip\n their tellers with powerful computers that most companies found cost-prohibitive - IBM PCS with a\n    It took a long time for implementation technology to catch up, and when it did, it got applied to lesser\n languages. This too was a cruel irony. JITs originated in APL, but Smalltalk was also a pioneer in that\n        Examples: Self needed 64Mb, preferably 96, and only ran on Sun workstations. Strongtalk ran in 8Mb\n    Then, Java happened.\u00a0 Strongtalk was faster than Java in 1997, but Strongtalk was acquired by Sun;\n    The Smalltalk system was buried alive until it was too late. By the time I finally got it open-sourced ,\n bits had rotted or disappeared, the system had no support, and the world had moved on. And yet, the\n fact that the Smalltalk community took almost no interest in the project is still telling.\n   Imagine if all the engineering efforts sunk into the JVM had focused on Smalltalk VMs.\n   It&#39;s also worth dwelling on the fact that raw speed is often much less relevant than people think.\n  running in web pages. Alas, Java was a terrible client technology. In congrats, even a Squeak\n interpreter, let alone Strongtalk, had much better start up times than Java, and better interactive\n response as well. It also had much smaller footprint. It was a much better basis for performant client\n    On the one hand, Netscape developed a scripting language for the browser. After all Java wouldn&#39;t cut\n it. Sun gave them permission to use the Java name for their language.\u00a0 You may have heard of this\n    Eventually, people found a way to make Javascript fast. Which people? Literally some of the same\n    Imagine if Sun had a workable client technology. Maybe the  Hot Java web browser would still be\n    On the other hand, the failure of Java on the client led to an emphasis on server side Java instead.\n This seemed like a good idea at the time, but ultimately commoditized Sun&#39;s product and contributed\n directly to Sun&#39;s downfall. Sun had a superb client technology in Strongtalk, but the company&#39;s\n    Of course, why would they? They had shut down the Self project some years earlier to focus on Java.\n Two years later, they spent an order of magnitude more money than it cost to develop Self, to buy back\n        Smalltalk had its unique way of doing things. Often, though not always, these ways were much better\n     FFIs.  Smalltalk FFIs were awkward, restrictive and inefficient. After all, why would you want to reach\n    We addressed this back in the mid-90s in Strongtalk, and much later, again, in  Newspeak.\n       Strongtalk addressed this too; occasionally, so did others, but the main efforts remained focused on\n their own isolated world, graphically as in every other way. Later, we had a native UI for Newspeak as\n    Source control.  The lack of a conventional syntax meant that Smalltalk code could not be managed\n with conventional source control systems. Instead, there were custom tools. Some were great - but\n    In general, saving Smalltalk code in something so mundane as a file was problematic. Smalltalk used\n something called file-out format, which is charitably described as a series of reflective API calls, along\n with meta-data that includes things like times and dates when the code was filed out. This compounded\n      environment. The reason for this is that Smalltalk was never a programming language in the traditional\n sense. It was a holistically conceived programming system. In particular, the idea is that computation\n take place among communicating objects, which all exist in some universe,\u00a0 a &#34;sea of objects&#34;. Some\n of these object know how to create new ones; we call them classes (and that is why there was no\n    What happens when you try to take some objects out of the sea in which they were created (the IDE)?\n    If you want to deploy an application by separating it from the IDE (to reduce footprint, or protect your IP,\n or avoid paying license fees for the IDE on each deployed copy) it turns out to be very hard.\n    The Self transporter addressed this problem in a clever way. Newpeak addressed it much more\n     The problem of IP exposure is much less of a concern today. It doesn&#39;t matter much for server based\n applications, or for open source software. Wasted footprint is still a concern, though in many cases you\n can do just fine. Avi Bryant once explained to me how he organized the server for the late, great\n Dabble DB. It was so simple you could just cry, and it performed like a charm using Squeak images.\n        With 20/20 hindsight, we can see that from the pointy-headed boss perspective, the Smalltalk value\n    Pay a lot of money to be locked in to slow software that exposes your IP, looks weird on screen and\n cannot interact well with anything else; it is much easier to maintain and develop though!\n    And yet, those who saw past that, are still running Smalltalk systems today with great results; efforts to\n     Those of us who have tried to address them have found that the wider world did not want to listen -\n even when it was in its own best interest. This was true not only of short sighted corporate leadership,\n       I believe, the community has been self-selected to consist of those who are not bothered by Smalltalk&#39;s\n initial limitations, and so are unmotivated to address them or support those who do. In fact, they often\n could not even see these limitations staring them in the face, causing them to adopt unrealistic\n    Perhaps an even deeper problem with Smalltalk is that it attracts people who are a tad too creative and\n    Nevertheless, Smalltalk remains in use, much more so than most people realize. Brave souls continue\n to work on Smalltalk systems, both commercial and open source. Some of the issues I cite have been\n addressed to a certain degree, even if I feel they haven&#39;t been dealt with as thoroughly and effectively\n as they might. More power to them. Likewise, w e still spend time trying to bring Newspeak back to a\n more usable state.  Real progress is not made by the pedantic and mundane, but by the dreamers who realize that we can do so much better.", "posttime": "2020-05-25 16:47:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u70b9\u6ef4,history,smalltalk", "title": "\u5386\u53f2\u7684\u70b9\u6ef4\uff0c\u5fe0\u544a\u7684\u8bdd\u8bed(\u65b0\u8bdd)", "title_en": "Bits of history, words of advice (Newspeak)", "transed": 1, "url": "https://gbracha.blogspot.com/2020/05/bits-of-history-words-of-advice.html", "via": "", "real_tags": ["\u70b9\u6ef4", "history", "smalltalk"]}, {"category": "", "categoryclass": "", "imagename": "cb5f7d6edd57dd40a283cd6c095ab3eb.png", "infoid": 1003617, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u65b0\u7684GDPR\u4e8e2018\u5e745\u670825\u65e5\u9002\u7528\u540e\u7684\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u6b27\u6d32\u975e\u8425\u5229\u7ec4\u7ec7nobi.eu\u5bf9Facebook\u96c6\u56e2(\u5305\u62ecWhatsApp\u548cInstagram)\u63d0\u51fa\u4e86\u4e09\u8d77\u6295\u8bc9\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u7231\u5c14\u5170\u6570\u636e\u4fdd\u62a4\u59d4\u5458\u4f1a(DPC)\u5ba3\u5e03\u8fd9\u4e00\u6781\u5176\u7f13\u6162\u7684\u7a0b\u5e8f\u7684\u5185\u5bb9\u662f\u201c\u673a\u5bc6\u7684\u201d\uff0c\u5e76\u8981\u6c42nobi.eu\u4e0d\u8981\u516c\u5f00\u8ba8\u8bba\u8fd9\u4e9b\u5185\u5bb9\u3002\n\u5c3d\u7ba1\u6709\u8fd9\u79cd\u6240\u8c13\u7684(\u4e14\u4e0d\u5177\u6cd5\u5f8b\u7ea6\u675f\u529b\u7684)\u673a\u5bc6\u6027\uff0cnobi.eu\u4eca\u5929\u8fd8\u662f\u53d1\u8868\u4e86\u4e00\u5c01\u516c\u5f00\u4fe1(PDF)\uff0c\u63ed\u9732\u4e86GDPR\u5728\u9002\u7528\u4e24\u5e74\u540e\u662f\u5982\u4f55(\u6ca1\u6709)\u5f97\u5230\u6267\u884c\u7684\u3002\u5373\u4f7f\u5728\u4fe1\u4e2d\u548c\u4e0b\u9762\u63cf\u8ff0\u7684\u5361\u592b\u5361\u5f0f\u7a0b\u5e8f\u4e0b\uff0c\u5982\u679cDPC\u9075\u5faa\u5176\u5185\u90e8\u8c03\u67e5\u62a5\u544a\uff0cFacebook\u96c6\u56e2\u672a\u6765\u53ef\u80fd\u4ecd\u5c06\u9762\u4e34\u9ad8\u8fbe25\u4ebf\u6b27\u5143\u7684\u7f5a\u6b3e\u3002\nDPC\u548cFacebook\u4e4b\u95f4\u5173\u4e8e\u201c\u7ed5\u8fc7\u540c\u610f\u201d\u7684\u79d8\u5bc6\u4f1a\u8bae\u3002\u8fd9\u5c01\u516c\u5f00\u4fe1\u9996\u6b21\u66dd\u5149\u4e86\u7231\u5c14\u5170DPC\u548cFacebook\u96c6\u56e2(\u5305\u62ecWhatsApp\u548cInstagram)\u57282018\u5e74GDPR\u9002\u7528\u4e4b\u524d\u4e3e\u884c\u4e8610\u6b21\u79d8\u5bc6\u4f1a\u8bae\u3002\u5728\u8fd9\u4e9b\u4f1a\u8bae\u4e0a\uff0cFacebook\u58f0\u79f0\u201c\u5728\u5b9e\u65bd\u660e\u663e\u7684\u201d\u540c\u610f\u7ed5\u8fc7\u201c(\u7ec6\u8282\u5982\u4e0b)\u201d\u4ee5\u89c4\u907fGDPR\u7684\u4e25\u683c\u540c\u610f\u89c4\u5219\u4e4b\u524d\uff0c\u5df2\u7ecf\u201c\u4e0e\u6b27\u76df\u59d4\u5458\u4f1a\u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u76f4\u63a5\u63a5\u89e6\u201d\u3002\u5c3d\u7ba1Facebook\u5728\u5176\u63d0\u4ea4\u7684\u6587\u4ef6\u4e2d\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u4f1a\u8bae\uff0c\u5e76\u5f3a\u8c03\u8fd9\u4e9b\u6587\u4ef6\u201c\u6709\u5f85DPC\u5ba1\u8bae\u201d\uff0c\u4f46\u5f53\u5c40\u62d2\u7edd\u8bbf\u95ee\u8fd9\u4e9b\u79d8\u5bc6\u4f1a\u8bae\u7684\u4efb\u4f55\u8bb0\u5f55\uff0c\u5305\u62ecFacebook\u63d0\u4ea4\u7684\u4e00\u4efd\u767d\u76ae\u4e66\u3002\nnobi.eu\u8463\u4e8b\u957f\u9a6c\u514b\u65af\u00b7\u65bd\u96f7\u59c6\u65af(Max Schrems)\uff1a\u201c\u8fd9\u542c\u8d77\u6765\u5f88\u50cf\u90a3\u4e9b\u79d8\u5bc6\u7684\u2018\u7a0e\u6536\u88c1\u51b3\u2019\uff0c\u5373\u7a0e\u52a1\u90e8\u95e8\u79d8\u5bc6\u4e0e\u5927\u578b\u79d1\u6280\u516c\u53f8\u5c31\u5982\u4f55\u7ed5\u8fc7\u7a0e\u6cd5\u8fbe\u6210\u4e00\u81f4--\u53ea\u662f\u4ed6\u4eec\u73b0\u5728\u5bf9GDPR\u4e5f\u8fd9\u4e48\u505a\u4e86\u3002\u201d\nFacebook\u7684\u975e\u6cd5\u201c\u7ed5\u8fc7\u540c\u610f\u201d\u3002\u5728\u4e24\u5e74\u524d(\u5728GDPR\u5f00\u59cb\u9002\u7528\u7684\u6700\u521d\u51e0\u4e2a\u5c0f\u65f6\u5185)\u7531nobi.eu\u63d0\u51fa\u7684\u4e09\u9879\u6295\u8bc9\u5f15\u53d1\u7684\u7a0b\u5e8f\u4e2d\uff0cFacebook\u96c6\u56e2\u516c\u5f00\u627f\u8ba4\uff0c\u5b83\u53ea\u662f\u4ece\u53d7\u5230\u4e25\u683c\u76d1\u7ba1\u7684\u201c\u540c\u610f\u201d\u8f6c\u53d8\u4e3a\u6240\u8c13\u7684\u201c\u6570\u636e\u4f7f\u7528\u5408\u540c\u201d\u3002\u636e\u79f0\uff0c\u8fd9\u4efd\u5408\u540c\u8981\u6c42Facebook\u5bf9\u5176\u7528\u6237\u8fdb\u884c\u8ddf\u8e2a\u3001\u5b9a\u4f4d\u548c\u7814\u7a76\u3002\u6839\u636eFacebook\u7684\u8bf4\u6cd5\uff0c\u8fd9\u79cd\u8f6c\u53d8\u53d1\u751f\u5728\u5348\u591c\u949f\u58f0\u6572\u54cd\u7684\u65f6\u5019\uff0c\u5f53\u65f6GDPR\u5f00\u59cb\u9002\u7528\u3002\u8fd9\u79cd(\u76f8\u4e92)\u91cd\u65b0\u5236\u5b9a\u534f\u8bae(\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u4ece\u540c\u610f\u5408\u540c)\u7ed5\u8fc7\u6cd5\u5f8b\u7684\u505a\u6cd5\u88ab\u79f0\u4e3a\u6a21\u62df\uff0c\u662f\u65e0\u6548\u7684\u3002\n\u9a6c\u514b\u65af\u00b7\u65bd\u96f7\u59c6\u65af\uff1a\u201c\u8fd9\u4e0d\u8fc7\u662f\u732a\u8eab\u4e0a\u7684\u53e3\u7ea2\u3002\u4ece\u7f57\u9a6c\u65f6\u4ee3\u5f00\u59cb\uff0c\u6cd5\u5f8b\u5c31\u7981\u6b62\u4ec5\u4ec5\u4e3a\u4e86\u7ed5\u8fc7\u6cd5\u5f8b\u800c\u201c\u91cd\u547d\u540d\u201d\u67d0\u4e9b\u4e1c\u897f\u3002Facebook\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\u4e0d\u662f\u806a\u660e\u7684\uff0c\u800c\u662f\u53ef\u7b11\u7684\u3002\u552f\u4e00\u771f\u6b63\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u7231\u5c14\u5170DPC\u5728\u8bbe\u8ba1\u8fd9\u4e00\u9a97\u5c40\u65f6\u663e\u7136\u4e0eFacebook\u6709\u8fc7\u63a5\u89e6\uff0c\u73b0\u5728\u5e94\u8be5\u5bf9\u5176\u8fdb\u884c\u72ec\u7acb\u5ba1\u67e5\u3002\u201c\u3002\n\u5728\u76d6\u6d1b\u666e\u7814\u7a76\u6240\u8fdb\u884c\u7684\u4e00\u9879\u5173\u4e8e\u201c\u7ed5\u8fc7\u540c\u610f\u201d\u7684\u7814\u7a76\u4e2d\uff0c1.000\u540d\u7528\u6237\u4e2d\u670964%\u7684\u4eba\u8ba4\u4e3a\u4ed6\u4eec\u540c\u610f\u4e86\uff0c\u5c3d\u7ba1\u8138\u4e66\u58f0\u79f0\u4ed6\u4eec\u540c\u610f\u4e86\u3002\u6839\u636e\u95ee\u9898\u7684\u4e0d\u540c\uff0c\u53ea\u67091.6%-2.5%\u7684\u4eba\u8ba4\u4e3a\u4ed6\u4eec\u5b9e\u9645\u4e0a\u7b7e\u8ba2\u4e86\u201c\u6570\u636e\u4f7f\u7528\u5408\u540c\u201d\uff0c\u5176\u4e2d\u5305\u62ecFacebook\u6709\u4e49\u52a1\u5c06\u4ed6\u4eec\u7684\u6570\u636e\u7528\u4e8e\u5e7f\u544a\u6216\u7814\u7a76\u3002\u5176\u4f59\u7684\u4eba\u8ba4\u4e3a\u8fd9\u53ea\u662f\u4e00\u4efd\u4fe1\u606f\uff0c\u4e00\u4efd\u6ca1\u6709\u8fd9\u6837\u7684\u8d23\u4efb\u7684\u5408\u540c\uff0c\u6216\u8005\u770b\u4e0d\u5230\u9875\u9762\u4e0a\u7684\u4efb\u4f55\u610f\u4e49\u3002\n\u65bd\u96f7\u59c6\u65af\uff1a\u201c\u5728\u6211\u4eec\u8be2\u95ee\u76841000\u540d\u7528\u6237\u4e2d\uff0c\u57fa\u672c\u4e0a\u6ca1\u6709\u4eba\u8ba4\u4e3a\u4ed6\u4eec\u4e0eFacebook\u7b7e\u7f72\u4e86\u8fd9\u6837\u4e00\u4efd\u6240\u8c13\u7684\u2018\u6570\u636e\u4f7f\u7528\u5408\u540c\u2019\u3002\u201d\nDPC\u5c06\u5bf9\u201c\u6570\u636e\u4f7f\u7528\u5408\u540c\u201d\u7684\u6cd5\u5f8b\u5206\u6790\u9650\u5236\u5728\u201c\u725b\u6d25\u82f1\u8bed\u8bcd\u5178\u201d\u3002DPC\u627e\u4e0d\u5230Facebook\u6240\u4f9d\u8d56\u7684\u6240\u8c13\u201c\u6570\u636e\u5904\u7406\u5408\u540c\u201d\u6709\u4efb\u4f55\u95ee\u9898\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0cDPC\u53ea\u662f\u8ba4\u5b9a\u5bf9\u8fd9\u6837\u7684\u5408\u540c\u7684\u5206\u6790\u8d85\u51fa\u4e86\u5b83\u7684\u6743\u529b\u8303\u56f4(\u201c\u8d8a\u6743\u201d)\u3002DPC\u6ca1\u6709\u6839\u636e\u9002\u7528\u7684\u6cd5\u5f8b\u5206\u6790\u5408\u540c\uff0c\u800c\u662f\u5728\u5176\u62a5\u544a\u4e2d\u76f4\u63a5\u5f15\u7528\u4e86\u201c\u725b\u6d25\u82f1\u8bed\u8bcd\u5178\u201d\u4e2d\u201c\u5408\u540c\u201d\u7684\u5b9a\u4e49\u3002\nSchrems\uff1a\u201c\u5728\u6cd5\u5b66\u9662\uff0c\u4f60\u5b66\u4e60\u9605\u8bfb\u6cd5\u5f8b\u4e66\u7c4d\u6765\u89e3\u51b3\u6cd5\u5f8b\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u9605\u8bfb\u5b57\u5178\u3002\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u8fd9\u4f3c\u4e4e\u4e00\u76f4\u662f\u4e00\u79cd\u53d6\u80dc\u7684\u6280\u672f\u3002\u5f88\u660e\u663e\uff0cDPC\u8bd5\u56fe\u4e0d\u5ba1\u67e5Facebook\u6240\u8c13\u7684\u201c\u6570\u636e\u4f7f\u7528\u5408\u540c\u201d\u3002\u201c\u3002\nDPC\u5e86\u795d\u5728\u4e24\u5e74\u5185\u5b8c\u62106\u4e2a\u6b65\u9aa4\u4e2d\u76841\u4e2a\uff1f\u5728\u4e0a\u5468\u4e94\u665a\u4e9b\u65f6\u5019\u7684\u4e00\u4efd\u516c\u5f00\u58f0\u660e\u4e2d\uff0cDPC\u51fa\u4eba\u610f\u6599\u5730\u5c06nobi.eu\u5f15\u53d1\u7684\u4e09\u4e2a\u7a0b\u5e8f\u5217\u4e3aDPC\u5de5\u4f5c\u53d6\u5f97\u5de8\u5927\u8fdb\u5c55\u7684\u4f8b\u5b50\u3002\u5c3d\u7ba1DPC\u82b1\u4e86\u4e24\u5e74\u65f6\u95f4\u5728WhatsApp\u548cInstagram\u4e0a\u5b8c\u6210\u4e866\u4e2a\u6b65\u9aa4\u4e2d\u76841\u4e2a\uff0c\u5728Facebook\u4e0a\u5b8c\u6210\u4e866\u4e2a\u6b65\u9aa4\u4e2d\u76842\u4e2a(\u89c1\u6982\u89c8\u8868)\u3002\u9274\u4e8eDPC\u4ec5\u57282019\u5e74\u5c31\u62a5\u544a\u4e867125\u8d77\u6295\u8bc9\uff0c\u800c\u4e14\u5bf9\u4efb\u4f55\u79c1\u4eba\u884c\u4e3a\u8005\u7684GDPR\u7f5a\u6b3e\u4e3a\u96f6\uff0c\u8fd9\u5f88\u96be\u8bf4\u662f\u4e00\u9879\u6210\u5c31\u3002\n\u65bd\u96f7\u59c6\u65af\uff1a\u201c\u5982\u679cDPC\u5728\u4e24\u5e74\u540e\u5f3a\u8c03\u4e86\u4e24\u4e2a\u6848\u4ef6\u4e2d\u516d\u4e2a\u6b65\u9aa4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4f5c\u4e3a\u4e00\u9879\u6210\u5c31\uff0c\u8fd9\u662f\u5bf9\u5927\u7ea61\u4e07\u540d\u6295\u8bc9\u4eba\u7684\u4e00\u8bb0\u8033\u5149\u3002\n\u5373\u4f7f\u662f\u6284\u88ad\u81ea\u5df1\u7684\u62a5\u544a\u4e5f\u82b1\u4e86DPC 10\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u4e0a\u5468\uff0cDPC\u5728WhatsApp\u548cInstagram\u4e0a\u53d1\u5e03\u4e86\u4e24\u4efd\u62a5\u544a\u8349\u7a3f(\u7b2c1\u6b65\uff0c\u51716\u6b65)\uff0c\u8fd9\u4e00\u81ea\u8c6a\u4e4b\u60c5\u4f3c\u4e4e\u66f4\u52a0\u79bb\u5947\uff0c\u56e0\u4e3anobi.eu\u610f\u8bc6\u5230\u8fd9\u4e9b\u62a5\u544a\u4e0e2019\u5e74Facebook\u7684\u62a5\u544a(\u5c4f\u5e55\u622a\u56fe)\u91cd\u53e0\u4e8676%\u81f382%\u3002\nMax Schrems\uff1a\u201c\u6211\u4eec\u5728Instagram\u548cWhatsApp\u4e0a\u8fd0\u884c\u4e86DPC\u4e0a\u5468\u901a\u8fc7\u4e00\u6b3e\u8f6f\u4ef6\u81ea\u8c6a\u5730\u5f3a\u8c03\u7684\u62a5\u544a\u8349\u7a3f\uff0c\u4ee5\u8bc6\u522b\u6284\u88ad\u884c\u4e3a\uff0c\u5e76\u5927\u7b11\u8d77\u6765\uff1a\u5206\u522b\u670976%\u548c82%\u7684\u62a5\u544a\u8349\u7a3f\u4e0e\u53bb\u5e74Facebook\u4e0a\u7684\u62a5\u544a\u8349\u7a3f\u76f8\u540c\u3002\u770b\u6765\uff0c\u5149\u662f\u5927\u8303\u56f4\u590d\u5236\u7c98\u8d34\u4e00\u4efd\u62a5\u544a\u8349\u7a3f\uff0c\u4ed6\u4eec\u5c31\u82b1\u4e86\u5341\u591a\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u201c\u3002\nDPC\u62a5\u544a\u8ba4\u4e3a\u8fdd\u53cd\u4e86GDPR\u900f\u660e\u5ea6\u89c4\u5219\u3002\u7f5a\u6b3e\u53ef\u80fd\u9ad8\u8fbe\u6570\u5341\u4ebf\u7f8e\u5143\u3002\u5c3d\u7ba1DPC\u62d2\u7edd\u5ba1\u67e5Facebook\u201c\u7ed5\u8fc7\u540c\u610f\u201d\u7684\u5408\u6cd5\u6027\uff0c\u4f46\u4e00\u4efd\u5185\u90e8\u8c03\u67e5\u62a5\u544a\u53d1\u73b0\uff0c\u7531\u4e8e\u6ca1\u6709\u5145\u5206\u544a\u77e5Facebook\u3001WhatsApp\u548cInstagram\u7684\u7528\u6237\u4f7f\u7528\u4ed6\u4eec\u7684\u6570\u636e\u7684\u6cd5\u5f8b\u57fa\u7840\uff0cGDRP\u8fdd\u53cd\u4e86GDPR\u7b2c5\u6761\u4e2d\u7684\u900f\u660e\u5ea6\u8981\u6c42\u3002\u5982\u679cDPC\u6700\u7ec8\u575a\u6301\u8fd9\u4e00\u89c2\u70b9\uff0c\u5b83\u5c06\u4e0d\u5f97\u4e0d\u5f00\u51fa\u4e00\u5f20\u201c\u6709\u6548\u7684\u3001\u76f8\u79f0\u7684\u548c\u529d\u963b\u7684\u201d\u7f5a\u5355\uff0c\u6700\u9ad8\u53ef\u8fbeFacebook\u5e74\u6536\u5165\u76844%(\u6700\u9ad8\u53ef\u8fbe25\u4ebf\u6b27\u5143\u621628.3\u4ebf\u7f8e\u5143)\u3002\nMax Schrems\uff1a\u201c\u57fa\u672c\u4e0a\uff0cDPC\u7684\u8c03\u67e5\u8ba4\u4e3a\uff0c\u53ea\u8981\u7528\u6237\u5bf9\u6b64\u66f4\u52a0\u900f\u660e\uff0cFacebook\u5c31\u53ef\u4ee5\u6b3a\u9a97\u7528\u6237\u3002\u7136\u800c\uff0c\u8fd9\u610f\u5473\u7740Facebook\u3001Instagram\u548cWhatsApp\u5df2\u7ecf\u8fdd\u53cd\u4e86GDPR\u5904\u7406\u4e86\u6240\u6709\u6b27\u6d32\u7528\u6237\u7684\u6570\u636e\u3002\u5373\u4f7fDPC\u53ea\u8ba4\u5b9a\u8fd9\u4e00\u8f83\u6709\u9650\u7684\u8fdd\u89c4\u884c\u4e3a\uff0c\u7f5a\u91d1\u4e5f\u53ef\u80fd\u9ad8\u8fbe25\u4ebf\u6b27\u5143\u3002\u201c\n\u6b27\u76df\u59d4\u5458\u4f1a\u548cDPA\u5fc5\u987b\u91c7\u53d6\u884c\u52a8\u3002nobi.eu\u5728\u516c\u5f00\u4fe1\u4e2d\u8fd8\u547c\u5401\u6b27\u76df\u6267\u59d4\u4f1a\u5bf9\u7231\u5c14\u5170\u91c7\u53d6\u884c\u52a8\u3002\u7531\u4e8e\u4e24\u5e74\u5185\u7ea6\u67091\u4e07\u8d77\u6295\u8bc9\uff0c\u800c\u4e14\u5b8c\u5168\u6ca1\u6709\u9488\u5bf9\u79c1\u4eba\u884c\u4e3a\u8005\u7684\u7f5a\u6b3e\uff0c\u5f88\u660e\u663e\uff0c\u7231\u5c14\u5170\u6ca1\u6709\u6709\u6548\u5730\u6267\u884c\u6b27\u76df\u6cd5\u5f8b\u3002\n\u516c\u5f00\u4fe1\u8fd8\u547c\u5401\u5176\u4ed6\u6b27\u6d32\u6570\u636e\u4fdd\u62a4\u673a\u6784(DPA)\u5728\u540c\u4e8b\u62d2\u7edd\u5c65\u884c\u804c\u8d23\u65f6\u91c7\u53d6\u63aa\u65bd\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u867d\u7136GDPR\u901a\u5e38\u7f3a\u4e4f\u660e\u786e\u7684\u622a\u6b62\u65e5\u671f\uff0c\u4f46\u5b83\u5141\u8bb8DPA\u8981\u6c42\u540c\u4e8b\u91c7\u53d6\u67d0\u4e9b\u884c\u52a8\uff0c\u6216\u8005\u5728\u53e6\u4e00\u4e2aDPA\u4e0d\u6d3b\u52a8\u65f6\u542f\u52a8\u201c\u7d27\u6025\u7a0b\u5e8f\u201d\u3002\nSchrems\uff1a\u201c\u8bb8\u591aDPA\u5bf9\u50cf\u7231\u5c14\u5170\u8fd9\u6837\u7684\u60c5\u51b5\u611f\u5230\u6cae\u4e27\uff0c\u4f46\u4ec5\u4ec5\u628a\u4ed6\u4eec\u53eb\u51fa\u6765\u662f\u4e0d\u591f\u7684\u3002\u4ed6\u4eec\u8fd8\u5fc5\u987b\u4f7f\u7528GDPR\u9884\u89c1\u7684\u5de5\u5177\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5411\u5965\u5730\u5229DPA\u63d0\u51fa\u4e86\u8fd9\u6837\u7684\u7533\u8bf7\u3002\u201c\u3002\n\u4e3a\u4e86\u534f\u52a9\u8fd9\u4e00\u52aa\u529b\uff0cnomb.eu\u5df2\u5c06\u6240\u6709\u6709\u5173\u5f85\u51b3\u7a0b\u5e8f\u7684\u6587\u4ef6\u53d1\u9001\u7ed9\u5176\u4ed6\u6b27\u6d32dpa\uff0c\u5c3d\u7ba1\u7231\u5c14\u5170dpc\u5df2\u660e\u786e\u575a\u6301noye.eu\u4e0d\u5f97\u5411\u5176\u540c\u4e8b\u63d0\u4f9b\u8fd9\u4e9b\u6587\u4ef6\u3002\nnob.eu\u7684\u80cc\u666f\u8d44\u6599\u3002nomb.eu\u662f\u4e00\u5bb6\u6b27\u6d32\u6570\u636e\u4fdd\u62a4\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u8bd5\u56fe\u786e\u4fddGDPR\u7684\u6267\u884c\u3002nomb.eu\u75313200\u591a\u4e2a\u652f\u6301\u6210\u5458\u63d0\u4f9b\u8d44\u91d1\u3002nobi.eu\u56e2\u961f\u753115\u4eba\u7ec4\u6210\uff0c\u5176\u4e2d\u5305\u62ec\u6765\u81ea\u4e0d\u540c\u6b27\u76df\u6210\u5458\u56fd\u7684GDPR\u5f8b\u5e08\u548c\u6280\u672f\u4e13\u5bb6\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cnobi.eu\u5df2\u7ecf\u5c31\u4e0d\u540c\u7684\u95ee\u9898\u548c\u4e9a\u9a6c\u900a\u3001\u82f9\u679c\u3001\u8c37\u6b4c\u3001Facebook\u3001DAZN\u3001SoundCloud\u548cNetflix\u7b49\u516c\u53f8\u63d0\u4ea4\u4e8620\u591a\u8d77GDPR\u6295\u8bc9\u3002", "note_en": "Within hours of the new GDPR being applicable on 25 May 2018, the European non-profit organisation    noyb.eu  filed three complaints against the Facebook Group (including WhatsApp and Instagram). Since then, the   Irish Data Protection Commission (DPC)  has declared the contents of the extremely slow procedure \u201c confidential\u201d and asked  noyb.eu not to discuss them in public.\n Despite this alleged (and legally non-binding) confidentiality,  noyb.eu publishes an  Open Letter (PDF) today that exposes how the GDPR has (not) been enforced two years after it became applicable. Even under the Kafkaesque procedure described in the letter and below, the Facebook Group may still have to face a fine of up to \u20ac 2.5 Billion down the road, if the DPC follows its internal investigator report.\n  Secret meetings on \u201c consent bypass\u201d between DPC and Facebook. The open letter exposes for the first time that the Irish DPC and the Facebook Group (including WhatsApp and Instagram) had ten secret meetings before the GDPR became applicable in 2018. In these meetings, Facebook claims to have had \u201c detailed direct engagement with the Commission prior to the implementation\u201d of an apparent \u201cconsent bypass\u201d (details below) to circumvent the GDPR\u2019s strict consent rules. Despite the fact that Facebook relied on these meetings in its submissions and highlighted that the documents were \u2018 subject to consideration\u2019 by the DPC, the authority refuses access to any records of these secret meetings, including a White Paper submitted by Facebook.\n Max Schrems, chairman of noyb.eu: \u201c It sounds a lot like those secret \u2018tax rulings\u2019 where tax authorities secretly agree with large tech companies on how to bypass the tax laws \u2013 just that they now do this with the GDPR too.\u201d\n Facebook\u2019s illegal \u201c consent bypass\u201d. In the procedures that were triggered by  three complaints filed by  noyb.eu two years ago (within the first hours of the GDPR becoming applicable), the Facebook Group openly acknowledges that it simply switched from highly regulated \u201cconsent\u201d to an alleged \u201cdata use contract\u201d. This contract allegedly obliges Facebook to track, target and conduct research on its users. According to Facebook, this switch happened at the stroke of midnight when the GDPR became applicable.\u00a0 Such a (mutual) reframing of an agreement (in this case from consent to contract) to bypass the law is called  simulatio and is invalid.\n Max Schrems: \u201c It is nothing but lipstick on a pig.  Since Roman times, the law prohibits \u2018renaming\u2019 something just to bypass the law. What Facebook tried to do is not smart, but laughable. The only thing that is really concerning is that the Irish DPC apparently engaged with Facebook when they were designing this scam and is now supposed to independently review it.\u201d\n In a  study conducted by the Gallup Institute on the \u201cconsent bypass\u201d, 64% of 1.000 users believe they gave consent, despite Facebook\u2019s claims to the opposite. Depending on the question, only 1.6-2.5% thought they actually entered into a \u201cdata use contract\u201d that includes a duty of Facebook to use their data for advertisement or research. The rest thought it is mere information, a contract without such duties or could not see any meaning in the page.\n Max Schrems: \u201c Basically none of the 1,000 users we have asked thinks they have signed such an alleged \u2018data use contract\u2019 with Facebook.\u201d\n DPC limits legal analysis of the \u201cdata use contract\u201d to the Oxford English Dictionary. One reason the DPC could not find any problem with the alleged \u201cdata processing contract\u201d that Facebook relies upon is that the DPC simply decided that the analysis of such a contract is outside its powers (\u201c ultra vires\u201d). Instead of analysing the contract under the applicable law, the DPC literally cited the definition of a \u201ccontract\u201d from the Oxford English Dictionary in its reports.\n Schrems: \u201c In law school, you learn to read law books for legal questions, not a dictionary. It seems this was a winning technique for centuries. It is obvious that the DPC is trying to not review Facebook\u2019s alleged \u2018data use contract\u2019.\u201d\n    DPC celebrates finishing 1 of 6 steps in two years? In a  public statement late last Friday  , the DPC surprisingly named the three procedures triggered by  noyb.eu as examples of great progress in the DPC\u2019s work. This is despite the fact that the DPC took two years to complete 1 out of 6 steps of its procedure on WhatsApp and Instagram, and 2 out of 6 steps on Facebook (see overview table). Given that the DPC reported 7,125 complaints in 2019 alone and zero GDPR fines against any private actor, this is hardly an achievement.\n Max Schrems: \u201c It is a slap in the face of about 10,000 complainants if the DPC highlights the first of six steps in two cases after two years as an achievement.\u201d\n Even plagiarising own report took DPC 10 months. The pride that the DPC took in delivering two draft reports (step 1 of 6) on WhatsApp and Instagram last week seemed even more grotesque when  noyb.eu realized that these reports overlap 76 to 82% with the 2019 Facebook report (screenshot).\n Max Schrems:  \u201cWe ran the draft reports on Instagram and WhatsApp that the DPC proudly highlighted last week through a software to identify plagiarism and had a good laugh: 76% and 82%, respectively, were identical to a draft report from last year on Facebook. It seems that even just widely copy and pasting a draft report took them more than 10 months.\u201d\n    DPC report sees a violation of GDPR transparency rules. Fine could reach billions. Even though the DPC resisted reviewing the legality of Facebook\u2019s \u201c consent bypass\u201d, an internal inquiry report nevertheless finds a violation of the GDRP\u2019s transparency requirements in Article 5 GDPR by not adequately informing users of Facebook, WhatsApp, and Instagram about the legal basis for using their data. If the DPC ultimately holds on to this view, it would have to issue an \u201c effective, proportionate and dissuasive\u201d fine of up to 4% of Facebook\u2019s annual revenue (up to \u20ac 2.5 billion or US$ 2.83 billion).\n Max Schrems: \u201c Basically, the DPC investigation took the position that Facebook can screw users as long as they are more transparent about it. This would nevertheless mean that Facebook, Instagram, and WhatsApp have processed the data of all European users in violation of the GDPR. Even if the DPC only finds this more limited violation, the fine could amount to up to \u20ac 2.5 billion.\u201d\n European Commission and DPAs must take action. In the Open Letter,  noyb.eu also calls on the European Commission to take actions against Ireland. With about 10,000 complaints in two years and no fines at all against private actors, it is obvious that Ireland does not effectively implement EU law.\n The Open Letter also calls on other European Data Protection Authorities (DPAs) to take steps when colleagues refuse to do their job. While the GDPR unfortunately often lacks clear deadlines, it allows that DPAs request colleagues to take certain actions or to start an \u201curgency procedure\u201d if another DPA is inactive.\n Schrems: \u201c Many DPAs are frustrated with situations like in Ireland, but only calling them out is not enough. They also have to use the tools that the GDPR foresees. We have for example made such applications with the Austrian DPA now.\u201d\n To assist this effort,  noyb.eu has sent all relevant documents on the pending procedures to the other European DPAs, despite the fact that the Irish DPC has explicitly insisted that  noyb.eu may not provide these documents to its colleagues.\n Background on  noyb.eu.  noyb.eu is a European data protection non-profit that tries to ensure GDPR enforcement.  noyb.eu is funded by more than  3,200 supporting members. The  noyb.eu team of 15 people include GDPR lawyers and tech experts from different EU member states. So far,  noyb.eu has filed more than 20 GDPR complaints on different matters and against companies such as Amazon, Apple, Google, Facebook, DAZN, SoundCloud, and Netflix.", "posttime": "2020-05-25 16:46:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ea4\u6613,facebook,gdpr,letter", "title": "\u5173\u4e8eFacebook[GDPR]\u6848\u4ef6\u4e2d\u201c\u4fdd\u5bc6\u201d\u4ea4\u6613\u7684\u516c\u5f00\u4fe1", "title_en": "Open Letter on \u201cconfidential\u201d dealings in Facebook [GDPR] case", "transed": 1, "url": "https://noyb.eu/en/open-letter", "via": "", "real_tags": ["\u4ea4\u6613", "facebook", "gdpr", "letter"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003616, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u5e38\u7528\u4e8e\u9ea6\u5f53\u52b3\u65e9\u9910\u7684\u4e0d\u65f6\u9ae6\u7684\u767d\u8272\u9e21\u86cb\u9ea6\u5f53\u52b3\u677e\u997c\u5728\u4e50\u8d2d\u7684\u8d27\u67b6\u4e0a\u51fa\u4eba\u610f\u6599\u5730\u5377\u571f\u91cd\u6765--\u8fd9\u662f\u8be5\u8d85\u5e0240\u591a\u5e74\u6765\u9996\u6b21\u51fa\u552e\u8fd9\u79cd\u9e21\u86cb\u3002\n\u5728\u8bd5\u9a8c\u6210\u529f\u540e\uff0c\u8fd9\u5bb6\u82f1\u56fd\u6700\u5927\u7684\u96f6\u552e\u5546\u5c06\u51fa\u552e\u767d\u58f3\u6563\u517b\u9e21\u86cb\uff0c\u4ee5\u6ee1\u8db3\u8d2d\u7269\u8005\u524d\u6240\u672a\u6709\u7684\u9700\u6c42\uff0c\u540c\u65f6\u652f\u6301\u4f9b\u5e94\u5546\uff0c\u907f\u514d\u6d6a\u8d39\u3002\n\u81ea\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u4ee5\u6765\uff0c\u65b0\u9c9c\u9e21\u86cb\u5728\u82f1\u56fd\u7684\u9500\u91cf\u98d9\u5347-\u5728\u65e9\u671f\u56e4\u79ef\u671f\u95f4\u9500\u552e\u4e00\u7a7a-\u56e0\u4e3a\u6d88\u8d39\u8005\u56e4\u79ef\u4e86\u8fd9\u79cd\u9ad8\u86cb\u767d\u3001\u591a\u529f\u80fd\u7684\u98df\u7269\uff0c\u4ee5\u53ca\u65e9\u9910\u548c\u65e9\u5348\u9910\u7684\u4e3b\u98df\u6210\u5206\u3002\n\u81ea\u75ab\u60c5\u5f00\u59cb\u4ee5\u6765\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u5728\u5bb6\u91cc\u505a\u996d\u548c\u5403\u996d\uff0c\u540c\u65f6\u51fa\u73b0\u4e86\u5728\u5bb6\u70d8\u7119\u7684\u70ed\u6f6e\uff0c\u4e50\u8d2d\u5bf9\u9e21\u86cb\u7684\u9700\u6c42\u540c\u6bd4\u98d9\u5347\u4e8630%\u3002\n\u5411\u4e50\u8d2d\u4f9b\u5e94\u9e21\u86cb\u7684Noble Foods\u4e3b\u7ba1\u8ba9-\u4fdd\u7f57\u00b7\u7c73\u54c8\u5c14\u65af\u57fa(Jean-Paul Michalski)\u8bf4\uff1a\u201c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u767d\u8272\u9e21\u86cb\u4f1a\u5356\u7ed9\u4e00\u5bb6\u975e\u5e38\u5927\u7684\u5168\u7403\u8fde\u9501\u9910\u5385\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u8fd9\u5bb6\u8fde\u9501\u9910\u5385\u4e0d\u5f97\u4e0d\u5173\u95e8\u3002\u201d\u5b83\u4eec\u4e5f\u7528\u4e8e\u9e21\u86cb\u52a0\u5de5\uff0c\u9e21\u86cb\u88ab\u7834\u788e\u6210\u6db2\u4f53\uff0c\u4f9b\u98df\u54c1\u5236\u9020\u5546\u3001\u9152\u5e97\u6216\u9910\u9986\u4f7f\u7528\u3002\n\u201c\u6211\u4eec\u7684\u6807\u51c6\u96f6\u552e\u5ba2\u6237\u90fd\u6ca1\u6709\u5e93\u5b58\u767d\u8272\u9e21\u86cb\uff0c\u6240\u4ee5\u6211\u4eec\u771f\u7684\u5f88\u611f\u8c22\u4e50\u8d2d\u7684\u4ecb\u5165\uff0c\u56e0\u4e3a\u767d\u8272\u9e21\u86cb\u4f1a\u88ab\u6d6a\u8d39\u6389\u3002\u201d\n\u8fd9\u79cd\u9e21\u86cb\u7684\u4ef7\u683c\u4e0e\u68d5\u8272\u81ea\u7531\u653e\u517b\u9e21\u86cb\u7684\u4ef7\u683c\u76f8\u540c\uff0c\u4ece89\u4fbf\u58eb\u8d77\uff0c\u6bcf\u76d26\u4e2a\u4e2d\u7b49\u89c4\u683c\u7684\u9e21\u86cb\u3002\n\u76f4\u523020\u4e16\u7eaa70\u5e74\u4ee3\u521d\uff0c\u767d\u8272\u9e21\u86cb-\u901a\u5e38\u662f\u4e2d\u7b49\u5927\u5c0f-\u5728\u82f1\u56fd\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u5230\u4e86\u672c\u4e16\u7eaa\u672b\uff0c\u5f53\u8d2d\u7269\u8005\u5f00\u59cb\u8f6c\u5411\u66f4\u5927\u3001\u66f4\u5065\u5eb7\u7684\u68d5\u8272\u9e21\u86cb\u65f6\uff0c\u5b83\u4eec\u5c31\u4e0d\u518d\u53d7\u6b22\u8fce\u4e86\u3002\n\u81ea20\u4e16\u7eaa80\u5e74\u4ee3\u4ee5\u6765\uff0c\u82f1\u56fd\u7684\u884c\u4e1a\u5df2\u7ecf\u4e3a\u5546\u4e1a\u8857\u96f6\u552e\u5546\u751f\u4ea7\u4e86\u51e0\u4e4e100%\u7684\u68d5\u8272\u53bb\u58f3\u9e21\u86cb\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u82f1\u56fd\u7684\u767d\u8272\u86cb\u9e21\u975e\u5e38\u5c11\uff0c\u4f30\u8ba1\u5728\u82f1\u56fd4000\u4e07\u53ea\u86cb\u9e1f\u4e2d\u53ea\u670925\u4e07\u523030\u4e07\u53ea\u3002\n\u4e50\u8d2d\u9e21\u86cb\u91c7\u8d2d\u7ecf\u7406\u6885\u6839\u00b7\u57fa\u5c14\u6bd4(Megan Kilby)\u8bf4\uff1a\u201c\u7981\u95ed\u671f\u95f4\u7684\u521d\u6b65\u8bd5\u9a8c\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u572840\u591a\u5e74\u6765\u9996\u6b21\u50a8\u5907\u767d\u8272\u7684\u81ea\u7531\u653e\u517b\u9e21\u86cb\u3002\u201d\u8fd9\u4e9b\u9e21\u86cb\u5728\u6574\u4e2a\u9910\u996e\u4e1a\u90fd\u6709\u4f7f\u7528\uff0c\u6240\u4ee5\u8d2d\u7269\u8005\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u4eec\u7684\u8d28\u91cf\u3002\n\u201c\u8fd9\u4e00\u4e3e\u63aa\u4e5f\u53ef\u80fd\u5e26\u6765\u519c\u4e1a\u4e0a\u7684\u597d\u5904\uff0c\u56e0\u4e3a\u767d\u8272\u6bcd\u9e21\u6bd4\u68d5\u8272\u6bcd\u9e21\u66f4\u6e29\u987a\uff0c\u4e0b\u86cb\u65f6\u95f4\u66f4\u957f\uff0c\u66f4\u53ef\u9760\u3002\u201d\n\u5c01\u9501\u5bfc\u81f4\u82f1\u56fd\u98df\u54c1\u4f9b\u5e94\u94fe\u4e25\u91cd\u4e2d\u65ad\uff0c\u519c\u6c11\u3001\u751f\u4ea7\u5546\u548c\u6279\u53d1\u5546\u7aed\u529b\u8f6c\u79fb\u9910\u9986\u3001\u9152\u5427\u3001\u9152\u5e97\u548c\u5b66\u6821\u4e0d\u518d\u9700\u8981\u7684\u6570\u4e07\u5428\u6613\u8150\u70c2\u98df\u54c1\u3002\n\u6839\u636e\u82f1\u56fd\u9e21\u86cb\u5de5\u4e1a\u7406\u4e8b\u4f1a\u7684\u6570\u636e\uff0c\u5728\u82f1\u56fd\u9996\u6b21\u5c01\u9501\u4e4b\u524d\u7684\u56db\u5468\u5185\uff0c\u82f1\u56fd\u4eba\u5728\u65b0\u9c9c\u9e21\u86cb\u4e0a\u82b1\u8d39\u4e868800\u4e07\u82f1\u9551\uff0c\u56e0\u4e3a\u4ed6\u4eec\u56e4\u79ef\u4e86\u4e3b\u98df\u3002\u57283\u670822\u65e5\u7ed3\u675f\u7684\u4e00\u5468\u524d\u7684\u56db\u5468\u5185\uff0c\u4f30\u8ba1\u552e\u51fa\u4e866.21\u4ebf\u679a\u9e21\u86cb-\u6bd4\u53bb\u5e74\u540c\u671f\u9ad8\u51fa\u8fd120%\uff0c\u5f53\u65f6\u552e\u51fa\u4e865.18\u4ebf\u679a\u9e21\u86cb\uff0c\u4ef7\u503c7400\u4e07GB\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u4e4b\u524d\uff0c\u7531\u4e8e\u7d20\u98df\u548c\u5f39\u6027\u996e\u98df\u7684\u6d41\u884c\uff0c\u8d85\u5e02\u5df2\u7ecf\u62a5\u544a\u4e86\u5065\u5eb7\u7684\u9500\u552e\u60c5\u51b5\u3002\n\u4f46\u6700\u521d\u7684\u6050\u614c\u6027\u8d2d\u4e70\u5bfc\u81f4\u4e00\u4e9b\u8d85\u5e02\u5bf9\u9e21\u86cb\u7684\u8d2d\u4e70\u5b9e\u65bd\u4e86\u8d2d\u7269\u8005\u9650\u5236\u3002\u96f6\u552e\u5546\u7ea6\u7ff0\u00b7\u5218\u6613\u65af(John Lewis)\u8868\u793a\uff0c\u86cb\u676f\u6b63\u5728\u552e\u7f44\uff0c\u56e0\u4e3a\u6d88\u8d39\u8005\u6709\u65f6\u95f4\u5750\u4e0b\u6765\u5403\u65e9\u9910\uff0c\u518d\u6b21\u5f00\u59cb\u716e\u9e21\u86cb\u3002", "note_en": "Unfashionable white  eggs normally used in  McDonald\u2019s breakfast McMuffins are making a surprise comeback on the shelves of  Tesco \u2013 the first time the supermarket has sold them for more than 40 years.\n Following a successful trial, the UK\u2019s largest retailer will sell the white shelled free-range eggs in order to meet unprecedented demand from shoppers, while supporting suppliers and avoiding  waste.\n Sales of fresh eggs have soared in the UK since the outbreak of coronavirus \u2013 and sold out during  early stockpiling \u2013 as consumers stocked up with the high-protein, versatile food and staple  breakfast and  brunch ingredient.\n  With more people cooking and eating at home alongside  a home-baking boom since the pandemic started, Tesco has seen demand for eggs rocket by 30% year on year.\n Jean-Paul Michalski, the director of Noble Foods, which is supplying  Tesco with the eggs, said: \u201cGenerally our white eggs are sold to a very large global restaurant chain which unfortunately had to close its doors because of the pandemic. They are also used within egg processing where the egg is broken into a liquid to be used for food manufacturers, hotel or restaurants.\n \u201cNone of our standard retail customers stock white eggs so we are really grateful to Tesco for stepping in as the white eggs would have gone to waste.\u201d\n The eggs will cost the same as the brown free-range equivalent, starting from 89p for a box of six medium eggs.\n Until the early 1970s white eggs \u2013 which are generally medium-sized \u2013 were popular in the UK but they had fallen out of favour by the end of the decade when shoppers began switching to the brown variety, which were larger and seen as healthier.\n  Since the 1980s, the UK industry has produced almost 100% brown shelled eggs for high street retailers. As a result there are now very few white egg-laying flocks in the UK; down to an estimated 250,000-300,000 of the 40m egg-laying birds in the UK.\n Tesco eggs buying manager Megan Kilby said: \u201cThe initial trial during the lockdown has been a success and we will now be stocking white free range eggs for the first time in more than 40 years. These eggs are used throughout the restaurant industry so shoppers can be assured of their quality.\n \u201cThe move could also have an agricultural benefit as white hens are more docile than brown ones and lay eggs for longer and more reliably.\u201d\n The lockdown has led to serious disruption of the UK\u2019s food supply chain, with farmers, producers and wholesalers struggling to divert tens of thousands of tonnes of perishable food no longer required by restaurants, pubs, hotels and schools.\n Britons spent \u00a388m on  fresh eggs as they stockpiled staple foods in the four weeks preceding the UK\u2019s initial lockdown, according to data from the British Egg Industry Council. Over the four weeks leading to the week ending 22 March, an estimated 621m eggs were sold \u2013 nearly 20% more than the same time last year when 518m eggs worth \u00a374m were sold.\n  Before the outbreak of the coronavirus, supermarkets were already reporting healthy sales thanks to the popularity of vegetarian and  flexitarian diets.\n But initial panic buying led to some supermarkets to impose shopper restrictions on purchases of eggs. Retailer  John Lewis said egg cups were selling out as consumers, with time for a sit-down breakfast, took to boiling eggs again.", "posttime": "2020-05-25 16:45:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e50\u8d2d,shelled,\u9e21\u86cb", "title": "\u767d\u58f3\u86cb40\u5e74\u6765\u9996\u6b21\u5728\u4e50\u8d2d\u70ed\u9500", "title_en": "White shelled eggs are selling in Tesco for the first time in 40 years", "transed": 1, "url": "https://www.theguardian.com/business/2020/may/25/white-shelled-eggs-are-selling-in-tesco-for-the-first-time-in-40-years", "via": "", "real_tags": ["\u4e50\u8d2d", "shelled", "\u9e21\u86cb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003615, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u540d\u8ba1\u7b97\u673a\u5de5\u7a0b\u5e08\uff0c\u6211\u7684\u5de5\u4f5c\u662f\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u91cd\u8981\u95ee\u9898\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u7684\u89e3\u51b3\u65b9\u6848\u5c06\u662f\u9ad8\u6548\u7684\uff0c\u901a\u5e38\u8fd9\u610f\u5473\u7740\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u624b\u5934\u7684\u8d44\u6e90\u3002\u5f88\u591a\u65f6\u5019\uff0c\u8fd9\u4e9b\u8d44\u6e90\u90fd\u662f\u8fd0\u884cWindows\u7684\u673a\u5668\uff0c\u5c3d\u7ba1\u6211\u5bf9\u8be5\u5e73\u53f0\u5fc3\u5b58\u7591\u8651\uff0c\u4f46\u6b63\u786e\u6709\u6548\u5730\u5229\u7528\u5b83\u4f1a\u5e26\u6765\u5f88\u591a\u597d\u5904\u3002\n\u6709\u65f6\u5728\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u5de5\u4f5c\u65f6\u4ee5Windows\u4e3a\u76ee\u6807\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u5176\u4ed6\u65f6\u5019\u6211\u5fc5\u987b\u5728\u5e73\u53f0\u4e0a\u5de5\u4f5c\u3002C\u5f00\u53d1\u6709\u591a\u79cd\u9009\u62e9\uff0c\u6211\u6700\u7ec8\u6b63\u5f0f\u786e\u5b9a\u4e86\u6211\u81ea\u5df1\u7684\u5f00\u53d1\u5de5\u5177\u5305\uff1aw64devkit\u3002\n\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u4e2a\u503c\u5728GitHub\u7684\u201cRelease\u201d\u4e2d\u63d0\u4f9b\u768478MiB.zip\u4e2d\u3002\u8fd9\u4e2a(\u76f8\u5bf9)\u5c0f\u7684\u8f6f\u4ef6\u5305\u5305\u62ec\u6700\u5148\u8fdb\u7684C\u548cC++\u7f16\u8bd1\u5668(\u6700\u65b0\u7684GCC)\u3001\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6587\u672c\u7f16\u8f91\u5668\u3001\u8c03\u8bd5\u5668\u3001\u4e00\u4e2a\u5b8c\u6574\u7684x86\u6c47\u7f16\u5668\u548c\u5fae\u578bUNIX\u73af\u5883\u3002\u5b83\u662f\u201c\u4fbf\u643a\u7684\u201d\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b89\u88c5\u3002\u53ea\u9700\u5c06\u5176\u89e3\u538b\u5e76\u5f00\u59cb\u5c31\u5730\u4f7f\u7528\u5373\u53ef\u3002\u6709\u4e86w64devkit\uff0c\u5728\u4efb\u4f55Windows\u4e0a\u90fd\u53ea\u9700\u8981\u51e0\u79d2\u949f\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u5728\u529f\u80fd\u9f50\u5168\u3001\u8bbe\u5907\u9f50\u5168\u7684\u4e00\u6d41\u5f00\u53d1\u73af\u5883\u4e2d\u542f\u52a8\u5e76\u8fd0\u884c\u3002\n\u5f00\u53d1\u5de5\u5177\u5305\u5b8c\u5168\u4f7f\u7528Docker\u4ece\u6e90\u4ee3\u7801\u4ea4\u53c9\u7f16\u8bd1\uff0c\u4f46\u5b9e\u9645\u4f7f\u7528\u65f6\u5e76\u4e0d\u9700\u8981Docker\u3002\u5b58\u50a8\u5e93\u53ea\u662f\u4e00\u4e2aDockerfile\u548c\u4e00\u4e9b\u6587\u6863\u3002\u552f\u4e00\u7684\u6784\u5efa\u4f9d\u8d56\u9879\u662fDocker\u672c\u8eab\u3002\u5982\u679c\u60a8\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u4e0d\u4fe1\u4efb\u6211\u7684\u53d1\u884c\u7248\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e3a\u60a8\u81ea\u5df1\u7684\u4e2a\u4eba\u4f7f\u7528\u5b9a\u5236\u5b83\uff0c\u6216\u8005\u5ba1\u6838\u548c\u6784\u5efa\u60a8\u81ea\u5df1\u7684\u53d1\u884c\u7248\u3002\u8fd9\u4e0e\u5927\u591a\u6570\u5f00\u6e90\u8f6f\u4ef6\u7684Windows\u6784\u5efa\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\uff0c\u5728Windows\u6784\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u6784\u5efa\u8fc7\u7a0b\u901a\u5e38\u6ca1\u6709\u6587\u6863\u3001\u6587\u6863\u4e0d\u8db3\u3001\u8fdf\u949d\u6216\u975e\u5e38\u590d\u6742\u3002\n\u53d1\u5e03\u672c\u6587\u5e76\u4e0d\u4e00\u5b9a\u8981\u4fdd\u8bc1w64devkitt\u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\uff0c\u4f46\u662f\u8fd9\u4e2aDockerfile\u662f\u4ece(\u5e76\u53d6\u4ee3)\u6211\u5df2\u7ecf\u8fde\u7eed\u4f7f\u7528\u4e86\u4e24\u5e74\u591a\u7684shell\u811a\u672c\u6d3e\u751f\u800c\u6765\u7684\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0cGCC\u6bcf\u6b21\u53d1\u5e03\uff0c\u6211\u90fd\u4f1a\u7ed9\u81ea\u5df1\u642d\u5efa\u4e00\u4e2a\u65b0\u7684\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u6240\u4ee5\u6211\u5df2\u7ecf\u517b\u6210\u4e86\u8fd9\u4e2a\u4e60\u60ef\u3002\n\u6211\u65ad\u65ad\u7eed\u7eed\u5730\u4f7f\u7528Docker\u5927\u7ea6\u670918\u4e2a\u6708\u4e86\u3002\u8fd9\u5f88\u5947\u602a\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u5728\u5de5\u4f5c\u4e2d\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u5728\u81ea\u5df1\u7684\u65f6\u95f4\u91cc\u5b66\u5230\u7684\u3002\u6211\u65e9\u671f\u5f62\u6210\u7684\u5370\u8c61\u4ecd\u7136\u57fa\u672c\u6210\u7acb\uff1aDocker\u7684\u4e3b\u8981\u76ee\u7684\u662f\u904f\u5236\u548c\u9694\u79bb\u884c\u4e3a\u4e0d\u4f73\u7684\u8f6f\u4ef6\uff0c\u4ee5\u63d0\u9ad8\u5176\u53ef\u9760\u6027\u3002\u884c\u4e3a\u826f\u597d\u3001\u8bbe\u8ba1\u826f\u597d\u7684\u8f6f\u4ef6\u51e0\u4e4e\u4e0d\u4f1a\u4ece\u5bb9\u5668\u4e2d\u83b7\u76ca\u3002\n\u6211\u5728\u8fd9\u91cc\u5bf9Docker\u7684\u4e0d\u540c\u5bfb\u5e38\u7684\u5e94\u7528\u4e5f\u4e0d\u4f8b\u5916\u3002\u5927\u591a\u6570\u8f6f\u4ef6\u6784\u5efa\u90fd\u662f\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u548c\u8106\u5f31\u7684\uff0c\u7279\u522b\u662f\u57fa\u4e8eAutoconf\u7684\u6784\u5efa\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6211\u5904\u7406\u8fc7\u7684\u6700\u7cdf\u7cd5\u7684\u914d\u7f6e\u811a\u672c\u6765\u81eaGNU\u9879\u76ee\u3002\u4ed6\u4eec\u6d6a\u8d39\u65f6\u95f4\u505a\u65e0\u7528\u7684\u68c0\u67e5(\u201c\u60a8\u7684\u7f16\u8bd1\u5668\u662f\u5426\u5b9a\u4e49size_t\uff1f\u201d)\u3002\u7136\u540e\u751f\u6210\u4e00\u4e2a\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u5de5\u4f5c\u7684\u6784\u5efa\uff0c\u56e0\u4e3a\u60a8\u6b63\u5728\u505a\u4e00\u4e9b\u7a0d\u5fae\u4e0d\u5bfb\u5e38\u7684\u4e8b\u60c5\u3002\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u5c3d\u7ba1\u6211\u5c3d\u4e86\u6700\u5927\u52aa\u529b\uff0c\u6784\u5efa\u8fd8\u662f\u4f1a\u88ab\u6267\u884c\u6784\u5efa\u7684\u7cfb\u7edf\u7684\u72b6\u6001\u6240\u6c61\u67d3\u3002\n\u6211\u6700\u521d\u7684\u6784\u5efa\u811a\u672c\u6269\u5c55\u8d77\u6765\u5f88\u8106\u5f31\u3002\u5b83\u53ef\u4ee5\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e0a\u5de5\u4f5c\uff0c\u4f46\u4e0d\u80fd\u5728\u53e6\u4e00\u4e2a\u7cfb\u7edf\u4e0a\u5de5\u4f5c\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e9b\u5fae\u5999\u7684\u73af\u5883\u53d8\u5316-\u4e00\u4e2a\u7a0d\u5fae\u4e0d\u540c\u7684\u7cfb\u7edf\u5934\u663e\u793a\u4e86\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\u9519\u8bef(\u4f8b\u5982\u5728GCC\u4e2d)\uff0c\u6216\u8005\u7cfb\u7edf\u5728\u67d0\u4e2a\u4e0d\u5e94\u8be5\u786c\u7f16\u7801\u7684\u786c\u7f16\u7801\u7edd\u5bf9\u8def\u5f84\u4e0a\u6ca1\u6709\u6587\u4ef6\u3002\u5c06MyScript\u8f6c\u6362\u4e3aDockerfile\u53ef\u4ee5\u9501\u5b9a\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u4f7f\u6784\u5efa\u66f4\u52a0\u53ef\u9760\u548c\u53ef\u91cd\u590d\u3002\u8fd9\u4e00\u4e0d\u7aef\u884c\u4e3a\u5df2\u7531\u591a\u514b\u8d1f\u8d23\u5904\u7406\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u5e76\u6ca1\u6709\u5b8c\u5168\u5f97\u5230\u63a7\u5236\u3002\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u90fd\u4f7f\u7528make\u7684-j\u9009\u9879\u6765\u5e76\u884c\u5316\u6784\u5efa\uff0c\u5426\u5219\u5c06\u82b1\u8d39\u6570\u5c0f\u65f6\u3002\u4e00\u4e9b\u6784\u5efa\u5177\u6709\u5fae\u5999\u7684\u7ade\u4e89\u6761\u4ef6\uff0c\u4e00\u4e9b\u7cdf\u7cd5\u7684Luckin\u8ba1\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6784\u5efa\u5931\u8d25\u3002\u591a\u514b\u5584\u4e8e\u4ece\u505c\u6b62\u7684\u5730\u65b9\u91cd\u65b0\u5f00\u59cb\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u518d\u8bd5\u4e00\u6b21\u5c31\u884c\u4e86\u3002\n\u5728\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6784\u5efa\u5931\u8d25\u662f\u56e0\u4e3a\u6ca1\u6709\u5b89\u88c5Bison\u548cFlex\uff0c\u5c3d\u7ba1\u901a\u5e38\u4e0d\u9700\u8981\u5b83\u4eec\u3002\u67d0\u4e9b\u4f9d\u8d56\u9879\u6ca1\u6709\u6b63\u786e\u8868\u8fbe\uff0c\u5e76\u4e14\u4e0d\u5409\u5229\u7684\u6392\u5e8f\u4f1a\u5bfc\u81f4\u672a\u4f7f\u7528\u7684.y\u6587\u4ef6\u5177\u6709\u9519\u8bef\u7684\u65f6\u95f4\u6233\u3002\u5443.\u3002\u6211\u5728Docker\u4e2d\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u6b21\u6570\u6bd4\u5728Out\u4e2d\u591a\u5f97\u591a\uff0c\u53ef\u80fd\u662f\u56e0\u4e3aDocker\u5185\u90e8\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u5f88\u6162\uff0c\u9020\u6210\u4e86\u66f4\u5927\u7684\u65f6\u95f4\u5dee\u5f02\u3002\n\u81ea\u8ff0\u6587\u4ef6\u89e3\u91ca\u4e86\u6211\u7684\u4e00\u4e9b\u51b3\u5b9a\uff0c\u4f46\u6211\u5c06\u5728\u8fd9\u91cc\u603b\u7ed3\u51e0\u4e2a\uff1a\n\u5409\u7279\u3002\u53c8\u91cd\u8981\u53c8\u6709\u7528\uff0c\u6240\u4ee5\u6211\u5f88\u60f3\u8981\u5b83\u3002\u4f46\u662f\u5b83\u6709\u5947\u602a\u7684\u4f9d\u8d56\u9879(Perl\u3001Bourne shell\u7b49)\uff0c\u5e76\u4e14\u6784\u5efa\u7cfb\u7edf\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u3002\u6211\u5e0c\u671b\u770b\u5230\u7528\u4e00\u79cd(\u5408\u9002\u7684)\u5b9e\u73b0\u8bed\u8a00\u7f16\u5199\u5e72\u51c0\u3001\u76f4\u622a\u4e86\u5f53\u7684Git\u3002\u60f3\u8c61\u4e00\u4e0b\u7528go get git-scm.com/git\u5b89\u88c5\u6700\u65b0\u7684Git\u3002\n\u5df4\u4ec0\u3002\u5b83\u662f\u4e00\u4e2a\u6bd4BusyBox-W32ash\u66f4\u597d\u7684\u4ea4\u4e92\u5f0fshell\u3002\u4f46\u662f\u6784\u5efa\u7cfb\u7edf\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\uff0c\u800c\u4e14\u6211\u4e0d\u786e\u5b9a\u5b83\u662f\u5426\u652f\u6301\u6ca1\u6709\u67d0\u79cd\u517c\u5bb9\u5c42\u7684Windows\u3002\n\u827e\u739b\u514b\u3002\u53c8\u4e00\u4f4d\u5b9e\u529b\u96c4\u539a\u7684\u7f16\u8f91\u3002\u4f46\u662f\u6784\u5efa\u7cfb\u7edf\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u3002\u5b83\u4e5f\u592a\u5927\u4e86\u3002\n\u53bb\u3002\u6211\u5f88\u60f3\u628a\u5b83\u6254\u8fdb\u53bb\uff0c\u4f46\u662f\u56f4\u68cb\u5df2\u7ecf\u6b63\u786e\u800c\u6709\u6548\u5730\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u5b83\u6839\u672c\u4e0d\u9700\u8981\u4e13\u95e8\u7684\u53d1\u884c\u7248\u3002\u5728\u4efb\u4f55\u7cfb\u7edf\u4e0a\u7ba1\u7406\u4e00\u4e2a\u5b8c\u6574\u7684\u56f4\u68cb\u5de5\u5177\u94fe\uff0c\u9664\u4e86\u56f4\u68cb\u672c\u8eab\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u8fd9\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u4eba\u4eec\u53ef\u80fd\u4f1a\u8bf4\u5b83\u7684\u8bed\u8a00\u8bbe\u8ba1\u6765\u81ea20\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u4f46\u5b83\u7684\u5de5\u5177\u6bd4\u5176\u4ed6\u4efb\u4f55\u4eba\u90fd\u9886\u5148\u4e86\u51e0\u5341\u5e74\u3002\n\u5728\u5f88\u957f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0cCygwin\u4e3a\u6211\u586b\u8865\u4e86\u8fd9\u4e2a\u89d2\u8272\u3002\u7136\u800c\uff0c\u6211\u4ece\u6765\u4e0d\u559c\u6b22\u5b83\u7684\u7b28\u91cd\u7279\u6027\uff0c\u8fd9\u4e0e\u4fbf\u643a\u5b8c\u5168\u76f8\u53cd\u3002Cygwin\u8fdb\u7a0b\u5728Windows\u4e0a\u603b\u662f\u611f\u89c9\u662f\u4e8c\u6d41\u7684\uff0c\u7279\u522b\u662f\u4e0e\u5176\u4ed6Windows\u8fdb\u7a0b\u76f8\u6bd4\uff0cCygwin\u8fdb\u7a0b\u5bf9\u6587\u4ef6\u7cfb\u7edf\u6709\u81ea\u5df1\u7684\u770b\u6cd5\uff0c\u5b83\u4eec\u6c38\u8fdc\u4e0d\u80fd\u5b8c\u5168\u5408\u4f5c\u3002\u6211\u4e5f\u4e0d\u559c\u6b22\u4ee5Cygwin\u4e3a\u76ee\u6807\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u7684\u5de5\u5177\u94fe--\u6bd4\u5982\u7f16\u8bd1Linux\u4e2d\u7684Cygwin\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6700\u540e\uff0c\u5b83\u57fa\u672c\u4e0a\u5df2\u7ecf\u88abWSL\u6dd8\u6c70\u4e86\uff0c\u5b83\u5728\u6bcf\u4e00\u6761\u6218\u7ebf\u4e0a\u90fd\u4e0e\u5b83\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u751a\u81f3\u8d85\u8fc7\u4e86\u5b83\u3002\n\u8fd8\u6709msys\u548cmsys2\uff0c\u5b83\u4eec\u7a0d\u5fae\u8f7b\u4e00\u4e9b\u3002\u7136\u800c\uff0c\u6211\u4ecd\u7136\u5728\u4e00\u4e2a\u4e0e\u4e16\u9694\u7edd\u7684\u4e8c\u6d41\u73af\u5883\u4e2d\uff0c\u6709\u5947\u602a\u7684\u8def\u5f84\u7ffb\u8bd1\u95ee\u9898\u3002\u8fd9\u4e9b\u5de5\u5177\u786e\u5b9e\u6709\u91cd\u8981\u7684\u7528\u9014\uff0c\u800c\u4e14\u5b83\u662f\u5728Windows\u4e0a\u672c\u5730\u7f16\u8bd1\u5927\u591a\u6570\u5f00\u6e90\u8f6f\u4ef6\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u7684\u6784\u5efa\uff0c\u8fd9\u662f\u751f\u6210Windows\u6784\u5efa\u7684\u552f\u4e00\u9014\u5f84\u3002\u8fd9\u4e0d\u662f\u6211\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u8f6f\u4ef6\u65f6\u60f3\u8981\u7684\u3002\n\u6211\u8fd8\u5c06\u6211\u7684GnuPG\u6784\u5efa\u811a\u672c\u8f6c\u6362\u4e3aDockerfile\u3002\u5f53\u7136\uff0c\u6211\u4e0d\u6253\u7b97\u5728Windows\u4e0a\u5b9e\u9645\u4f7f\u7528GnuPG\u3002\u6211\u53ea\u9700\u8981\u5b83\u4f5c\u4e3aPassphrase2pgp\uff0c\u6211\u7528\u5b83\u6765\u6d4b\u8bd5GnuPG\u3002\u8fd9\u5c06\u6d4b\u8bd5Windows\u7248\u672c\u3002\n\u5c06\u6765\uff0c\u6211\u53ef\u80fd\u4f1a\u5c06\u8fd9\u4e2a\u60f3\u6cd5\u6269\u5c55\u5230\u5176\u4ed6\u4e00\u4e9b\u6211\u4e0d\u6253\u7b97\u5305\u542b\u5728w64devkit\u4e2d\u7684\u5de5\u5177\u3002\u5982\u679c\u60a8\u6709\u4ec0\u4e48\u60f3\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528my Dockerfiles\u4f5c\u4e3a\u4e00\u79cd\u5165\u95e8\u6a21\u677f\u3002\n\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u6709\u4ec0\u4e48\u8bc4\u8bba\u5417\uff1f\u901a\u8fc7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3~Skeeto/public-inbox@lists.sr.ht[\u90ae\u4ef6\u5217\u8868\u793c\u4eea]\u5f00\u59cb\u6211\u7684\u516c\u5171\u6536\u4ef6\u7bb1\u4e2d\u7684\u8ba8\u8bba\uff0c\u6216\u67e5\u770b\u73b0\u6709\u8ba8\u8bba\u3002", "note_en": "As a computer engineer, my job is to use computers to solve importantproblems. Ideally my solutions will be efficient, and typically thatmeans making the best use of the resources at hand. Quite often theseresources are machines running Windows and, despite my misgivings aboutthe platform, there is much to be gained by properly and effectivelyleveraging it.\n Sometimes  targeting Windows while working from another platformis sufficient, but other times I must work on the platform itself. There are various options available for C development, and I\u2019vefinally formalized my own development kit:   w64devkit.\n For most users, the value is in the  78MiB .zip available in the\u201cReleases\u201d on GitHub. This (relatively) small package includes astate-of-the-art C and C++ compiler ( latest GCC), a  powerfultext editor,  debugger, a  complete x86 assembler,and  miniature unix environment. It\u2019s \u201cportable\u201d in that there\u2019s noinstallation. Just unzip it and start using it in place. With w64devkit,it literally takes a few seconds on any Windows to get up and runningwith a fully-featured, fully-equipped, first-class  developmentenvironment.\n The development kit is cross-compiled entirely from source using Docker,though Docker is not needed to actually use it. The repository is just aDockerfile and some documentation. The only build dependency is Dockeritself. It\u2019s also easy to customize it for your own personal use, or toaudit and build your own if, for whatever reason, you didn\u2019t trust mydistribution. This is in stark contrast to Windows builds of most opensource software where the build process is typically undocumented,under-documented, obtuse, or very complicated.\n  Publishing this is not necessarily a commitment to always keep w64devkitup to date, but this Dockerfile  is derived from (and replaces) a shellscript I\u2019ve been using continuously  for over two years now. Inthis period, every time GCC has made a release, I\u2019ve built myself a newdevelopment kit, so I\u2019m already in the habit.\n I\u2019ve been using Docker on and off for about 18 months now. It\u2019s anoddball in that it\u2019s something I learned on the job rather than my owntime. I formed an early impression that still basically holds:  Themain purpose of Docker is to contain and isolate misbehaved software toimprove its reliability. Well-behaved, well-designed software benefitslittle from containers.\n My unusual application of Docker here is no exception.  Most softwarebuilds are needlessly complicated and fragile, especiallyAutoconf-based builds. Ironically, the worst configure scripts I\u2019vedealt with come from GNU projects. They waste time doing useless checks(\u201cDoes your compiler define  size_t?\u201d) then produce a build thatdoesn\u2019t work anyway because you\u2019re doing something slightly unusual.Worst of all, despite my best efforts, the build will be contaminated bythe state of the system doing the build.\n My original build script was fragile by extension. It would work on onesystem, but not another due to some subtle environment change \u2014 aslightly different system header that reveals a build system bug( example in GCC), or the system doesn\u2019t have a file at a certainhard-coded absolute path that shouldn\u2019t be hard-coded. Converting myscript to a Dockerfile locks these problems in place and makes buildsmuch more reliable and repeatable. The misbehavior is contained andisolated by Docker.\n Unfortunately it\u2019s not  completely contained. In each case I use make\u2019s -j option to parallelize the build since otherwise it would takehours. Some of the builds have subtle race conditions, and some bad luckin timing can cause a build to fail. Docker is good about picking upwhere it left off, so it\u2019s just a matter of trying again.\n In one case a build failed because Bison and flex were not installedeven though they\u2019re not normally needed. Some dependency isn\u2019t expressedcorrectly, and unlucky ordering leads to an unused  .y file having thewrong timestamp. Ugh. I\u2019ve had this happen a lot more in Docker thanout, probably because file system operations are slow inside Docker andit creates greater timing variance.\n  The README explains some of my decisions, but I\u2019ll summarize a few here:\n Git. Important and useful, so I\u2019d love to have it. But it has weirddependencies (Perl, Bourne shell, etc.), and the build system doesn\u2019tsupport cross-compilation. I\u2019d love to see a clean, straightforwardrewrite of Git in a single (appropriate) implementation language.Imagine installing the latest Git with  go get git-scm.com/git.\n  Bash. It\u2019s a much nicer interactive shell than BusyBox-w32  ash. Butthe build system doesn\u2019t support cross-compilation, and I\u2019m not sureit supports Windows without some sort of compatibility layer anyway.\n  Emacs. Another powerful editor. But the build system doesn\u2019t supportcross-compilation. It\u2019s also  way too big.\n  Go. Tempting to toss it in, but  Go already does this all correctlyand effectively. It simply doesn\u2019t require a specializeddistribution. It\u2019s trivial to manage a complete Go toolchain withnothing but Go itself on any system. People may say its languagedesign comes from the 1970s, but the tooling is decades ahead ofeveryone else.\n  For a long, long time Cygwin filled this role for me. However, I neverliked its bulky nature, the complete opposite of portable. Cygwinprocesses always felt second-class on Windows, particularly in that ithas its own view of the file system compared to other Windows processes.They could never fully cooperate. I also don\u2019t like that there\u2019s notoolchain for cross-compiling with Cygwin as a target \u2014 e.g. compileCygwin binaries from Linux. Finally  it\u2019s been essentially obsoleted byWSL which matches or surpasses it on every front.\n There\u2019s msys and  msys2, which are a bit lighter. However, I\u2019mstill in an isolated, second-class environment with weird pathtranslation issues. These tools  do have important uses, and it\u2019s theonly way to compile most open source software natively on Windows. Forthose builds that don\u2019t support cross-compilation, it\u2019s  the only pathfor producing Windows builds. It\u2019s just not what I\u2019m looking for whendeveloping my own software.\n  I also  converted my GnuPG build script to a Dockerfile. Ofcourse I don\u2019t plan to actually  use GnuPG on Windows. I just need it for passphrase2pgp, which I test against GnuPG. This tests theWindows build.\n In the future I may extend this idea to a few other tools I don\u2019t intendto include with w64devkit. If you have something in mind, you could usemy Dockerfiles as a kind of starter template.\n      Have a comment on this article? Start a discussion in my  public inbox by sending an email to   ~skeeto/public-inbox@lists.sr.ht    [ mailing list etiquette] , or see  existing discussions.", "posttime": "2020-05-25 16:30:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,c++,\u5f00\u53d1,portable,\u6784\u5efa", "title": "W64devkit\uff1a\u4e00\u4e2a\u53ef\u79fb\u690d\u7684Windows C\u548cC++\u5f00\u53d1\u5305", "title_en": "W64devkit: A Portable C and C++ Development Kit for Windows", "transed": 1, "url": "https://nullprogram.com/blog/2020/05/15/", "via": "", "real_tags": ["windows", "c++", "\u5f00\u53d1", "portable", "\u6784\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "a1ece968eab07ae5b041c1cd519468d2.jpeg", "infoid": 1003614, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5728\u6d4f\u89c8BinaryEdge\u548cShodan\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u516c\u5f00\u7684ElasticSearch\u6570\u636e\u5e93\u3002\u8be5\u6570\u636e\u5e93\u4f3c\u4e4e\u7531\u6cf0\u56fd\u4e00\u5bb6\u540d\u4e3a\u9ad8\u7ea7\u4fe1\u606f\u670d\u52a1(AIS)\u7684\u4e3b\u8981\u79fb\u52a8\u7f51\u7edc\u8fd0\u8425\u5546\u7684\u5b50\u516c\u53f8\u63a7\u5236\u3002*\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u6570\u636e\uff0c\u622a\u81f32016\u5e74\uff0cAIS\u662f\u6cf0\u56fd\u6700\u5927\u7684GSM\u79fb\u52a8\u7535\u8bdd\u8fd0\u8425\u5546\uff0c\u62e5\u67093987\u4e07\u5ba2\u6237\u3002\u8be5\u6570\u636e\u5e93\u53ef\u80fd\u7531AIS\u5b50\u516c\u53f8\u9ad8\u7ea7\u65e0\u7ebf\u7f51\u7edc(AWN)\u63a7\u5236\u3002\u5b83\u5305\u542b\u4f3c\u4e4e\u662fAWN\u5ba2\u6237\u7684DNS\u67e5\u8be2\u65e5\u5fd7\u548cNetFlow\u65e5\u5fd7\u7684\u7ec4\u5408\u3002\u5229\u7528\u8fd9\u4e9b\u6570\u636e\uff0c\u5f88\u5bb9\u6613\u63cf\u7ed8\u51fa\u4e00\u4e2a\u4eba\u5728\u4e92\u8054\u7f51\u4e0a\u505a\u4e86\u4ec0\u4e48\u3002\u6211\u591a\u6b21\u5c1d\u8bd5\u8054\u7cfbAIS\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u5e93\u7684\u5b89\u5168\uff0c\u4f46\u90fd\u6ca1\u6709\u6210\u529f\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u8054\u7cfb\u4e86TechCrunch\u7684\u8bb0\u8005\u624e\u514b\u00b7\u60e0\u7279\u514b(Zack Whittaker)\u5bfb\u6c42\u5e2e\u52a9\u3002\u6211\u4eec\u4ecd\u7136\u65e0\u6cd5\u4e0eAIS\u53d6\u5f97\u8054\u7cfb\u3002\u7136\u540e\u6211\u8054\u7cfb\u4e86\u6cf0\u56fd\u56fd\u5bb6CERT\u56e2\u961f(ThaiCERT)\u3002\u662fThaiCERT\uff0c\u4ed6\u80fd\u591f\u4e0eAIS\u53d6\u5f97\u8054\u7cfb\uff0c\u6211\u4eec\u6210\u529f\u5730\u786e\u4fdd\u4e86\u6570\u636e\u5e93\u7684\u5b89\u5168\u3002\n\u636e\u5f6d\u535a\u793e\u62a5\u9053\uff0cAWN\u63d0\u4f9b\u6709\u7ebf\u548c\u65e0\u7ebf\u7f51\u7edc\u670d\u52a1\u3001\u7535\u4fe1\u7f51\u7edc\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u4ed6\u4eec\u7684\u7f51\u7ad9\u663e\u793a\u8be5\u516c\u53f8\u6210\u7acb\u4e8e2005\u5e74\u3002\u4ed6\u4eec\u7279\u522b\u6307\u51fa\uff0cAWN\u201c\u662f\u5148\u8fdb\u4fe1\u606f\u670d\u52a1\u516c\u5171\u6709\u9650\u516c\u53f8(AIS)\u7684\u5b50\u516c\u53f8\u201d\u3002\nAWN(AS131445)\u7f51\u7edc\u76f4\u63a5\u4e0eAIS(AS45430)\u76f8\u8fde\uff0c\u4e8b\u5b9e\u4e0aAIS\u662f\u4ed6\u4eec\u552f\u4e00\u7684\u4e0a\u6e38\u5bf9\u7b49\u4f53\u3002\u4f7f\u7528\u98d3\u98ce\u7535\u6c14\u53d1\u5e03\u7684\u6570\u636e\u53ef\u4ee5\u6e05\u695a\u5730\u663e\u793a\u8fd9\u79cd\u5173\u7cfb\uff1a\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cThaiCERT\u5c31\u66b4\u9732\u7684\u6570\u636e\u5e93\u8054\u7cfb\u4e86AIS\uff0c\u4e0d\u4e45\u4e4b\u540e\u6570\u636e\u5e93\u5c31\u79bb\u7ebf\u4e86\u3002AIS\u53ef\u80fd\u7acb\u5373\u901a\u77e5\u4e86AWN\uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u80fd\u53ea\u662f\u7b80\u5355\u5730\u963b\u6b62\u4e86\u5bf9\u66b4\u9732\u7684\u6570\u636e\u5e93\u7684\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u4e3a\u4ed6\u4eec\u7684\u5b50\u516c\u53f8\u5feb\u901f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6839\u636eBinaryEdge\u4e2d\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u8be5\u6570\u636e\u5e93\u57282020\u5e745\u67081\u65e5\u9996\u6b21\u516c\u5f00\u5e76\u53ef\u4f9b\u516c\u4f17\u8bbf\u95ee\u3002\u5927\u7ea66\u5929\u540e\uff0c\u6211\u57282020\u5e745\u67087\u65e5\u53d1\u73b0\u4e86\u8fd9\u4e2a\u6570\u636e\u5e93\u3002\n\u8fd9\u4e0d\u662f\u4e00\u53f0\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u5c31\u66b4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\u7684\u670d\u52a1\u5668\u3002\u6211\u627e\u5230\u7684\u4e3b\u6570\u636e\u5e93\u662f\u7531\u4e09\u4e2aElasticSearch\u8282\u70b9\u7ec4\u6210\u7684\u96c6\u7fa4\u7684\u4e00\u90e8\u5206\u3002\u6211\u8fd8\u627e\u5230\u4e86\u7b2c\u56db\u4e2a\u5305\u542b\u7c7b\u4f3c\u6570\u636e\u7684ElasticSearch\u6570\u636e\u5e93\u3002\u6240\u6709\u8fd9\u4e9b\u66b4\u9732\u7684\u6570\u636e\u5e93\u5747\u5df2\u901a\u77e5\u8ba4\u53ef\u673a\u6784\u3002\n\u5728\u6570\u636e\u5e93\u516c\u5f00\u7684\u5927\u7ea63\u5468\u5185\uff0c\u6570\u636e\u91cf\u4e00\u76f4\u5728\u663e\u7740\u589e\u957f\u3002\u8be5\u6570\u636e\u5e93\u6bcf24\u5c0f\u65f6\u6dfb\u52a0\u5927\u7ea62\u4ebf\u884c\u65b0\u6570\u636e\u3002\n\u51c6\u786e\u5730\u8bf4\uff0c\u622a\u81f32020\u5e745\u670821\u65e5\uff0c\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u4e868,336,189,132\u4efd\u6587\u4ef6\u3002\u8be5\u6570\u636e\u662fNetFlow\u6570\u636e\u548cDNS\u67e5\u8be2\u65e5\u5fd7\u7684\u7ec4\u5408\u3002\nDNS\u67e5\u8be2\u6d41\u91cf\u4f3c\u4e4e\u53ea\u8bb0\u5f55\u4e86\u5927\u7ea68\u5929(2020-04-30 20\uff1a00 UTC-2020-05-07 07\uff1a00 UTC)\u3002\u8fd9\u6355\u83b7\u4e863,376,062,859\u4e2aDNS\u67e5\u8be2\u65e5\u5fd7\u3002\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u5728\u8fd9\u4e48\u77ed\u7684\u65f6\u95f4\u4e4b\u540e\u5c31\u505c\u6b62\u8bb0\u5f55DNS\u67e5\u8be2\u3002\u4e5f\u8bb8\u8fd9\u6bd4\u4ed6\u4eec\u6253\u7b97\u6355\u83b7\u7684\u6570\u636e\u8981\u591a\u5f97\u591a\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u4ed6\u4eec\u6bcf\u79d2\u5927\u7ea6\u8bb0\u5f552538\u4e2aDNS\u4e8b\u4ef6\u3002\n\u8fd9\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u5f53\u6309\u53d1\u51faDNS\u8bf7\u6c42\u7684\u5355\u4e2a\u6e90IP\u5730\u5740(\u4e2a\u4eba/\u8bbe\u5907/\u623f\u5c4b)\u805a\u5408\u65f6\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u63cf\u7ed8\u51fa\u6709\u5173\u6b64\u4eba\u7684\u60c5\u51b5\u3002\u7a0d\u540e\u518d\u8bb2\u3002\n\u5269\u4e0b\u7684\u5927\u7ea650\u4ebf\u884c\u6570\u636e\u662fN etFlow\u6570\u636e\u3002NetFlow\u6570\u636e\u662f\u5728\u6570\u636e\u5e93\u4fdd\u6301\u516c\u5f00\u7684\u6574\u4e2a\u65f6\u95f4\u6bb5\u5185\u6355\u83b7\u7684\u3002SolarWinds\u5c06Netflow\u63cf\u8ff0\u4e3a\uff1a\nNetFlow\u662f\u601d\u79d1\u5f00\u53d1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u7528\u4e8e\u6536\u96c6IP\u6d41\u91cf\u4fe1\u606f\u548c\u76d1\u63a7\u7f51\u7edc\u6d41\u91cf\u3002\u901a\u8fc7\u5206\u6790\u6d41\u91cf\u6570\u636e\uff0c\u53ef\u4ee5\u5efa\u7acb\u7f51\u7edc\u6d41\u91cf\u548c\u6d41\u91cf\u7684\u56fe\u50cf\u3002\nNetFlow\u6570\u636e\u7684\u8bb0\u5f55\u901f\u5ea6\u7ea6\u4e3a\u6bcf\u79d23200\u4e2a\u4e8b\u4ef6\u3002\u5355\u4e2aNetFlow\u65e5\u5fd7\u884c\u5982\u4e0b\u6240\u793a\uff1a\n\u6b64\u9ad8\u7ea7\u4fe1\u606f\u8bb0\u5f55\u54ea\u4e9b\u6e90IP\u5411\u7279\u5b9a\u76ee\u7684IP\u53d1\u9001\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u6d41\u91cf\uff0c\u4ee5\u53ca\u4f20\u8f93\u4e86\u591a\u5c11\u6570\u636e\u3002\u5728\u793a\u4f8b\u5c4f\u5e55\u622a\u56fe\u4e2d\uff0c\u8fd9\u662f\u5bf9\u76ee\u6807IP\u5730\u5740\u7684HTTPS(TCP\u7aef\u53e3443)\u8bf7\u6c42\u3002\u53ef\u4ee5\u5bf9\u76ee\u6807IP\u6267\u884c\u53cd\u5411DNS\u67e5\u627e\uff0c\u4ee5\u5feb\u901f\u786e\u5b9a\u6b64\u4eba\u5c06\u4f7f\u7528HTTPS\u7684\u7f51\u7ad9\u3002\nAwn\u4f7f\u7528\u7684\u662f\u4e00\u79cd\u540d\u4e3aElastiFlow\u7684\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u7b80\u5316\u4e86\u5c06netFlow\u6216sFlow\u6570\u636e\u5bfc\u5165Elasticsearch\u7684\u8fc7\u7a0b\uff0c\u5728Elasticsearch\u4e2d\u53ef\u4ee5\u4f7f\u7528Kibana\u5feb\u901f\u53ef\u89c6\u5316\u3002\n\u9884\u7f6e\u7684\u5730\u7406\u4f4d\u7f6e\u63a7\u5236\u9762\u677f\u6c47\u603b\u4e86\u8981\u6355\u83b7\u7684\u6d41\u91cf\u7684\u5730\u7406\u5206\u5e03\u60c5\u51b5\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u5927\u90e8\u5206\u6d41\u91cf\u6765\u81ea\u6cf0\u56fd\uff0c\u5c3d\u7ba1\u4e5f\u6709\u76f8\u5f53\u6570\u91cf\u7684\u6d41\u91cf\u6765\u81ea\u5468\u8fb9\u56fd\u5bb6\u3002\nAwn\u5df2\u7ecf\u6784\u5efa\u4e86\u4e00\u4e2a\u4eea\u8868\u677f\uff0c\u7528\u4e8e\u68c0\u67e5\u8bb0\u5f55\u7684DNS\u6d41\u91cf\u3002\u8fd9\u5c06\u6309\u67e5\u8be2\u9891\u7387\u7ec6\u5206ASN\u3001\u9876\u7ea7\u57df\u548c\u9876\u7ea7IP\u3002\u6211\u4e0d\u4f1a\u53bb\u63a8\u6d4b\u4e3a\u4ec0\u4e48AWN\u4f1a\u8bb0\u5f55\u4ed6\u4eec\u5ba2\u6237\u7684DNS\u67e5\u8be2\u3002\n\u6709\u8da3\u7684\u662f\uff0cAWN\u7528\u4e00\u4e2a\u4e13\u95e8\u67e5\u770bFacebook\u6d41\u91cf\u7684\u8fc7\u6ee4\u5668\u4fdd\u5b58\u4e86\u8fd9\u4e2aDNS\u4eea\u8868\u677f\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u4f1a\u5bf9\u8c01\u4f1a\u53bbFacebook\u7279\u522b\u611f\u5174\u8da3\u3002\n\u4e3a\u4e86\u8bc1\u660e\u5e94\u8be5\u5c06DNS\u67e5\u8be2\u65e5\u5fd7\u89c6\u4e3a\u654f\u611f\u4fe1\u606f\u8fd9\u4e00\u70b9\uff0c\u6211\u4ece\u8be5\u6570\u636e\u5e93\u4e2d\u9009\u62e9\u4e86\u4e00\u4e2a\u5177\u6709\u4f4e\u5230\u4e2d\u7b49\u6d41\u91cf\u7684\u5355\u4e2a\u6e90IP\u5730\u5740\u3002\u6211\u4e0d\u60f3\u9009\u62e9\u6d41\u91cf\u6700\u9ad8\u7684IP\u4e4b\u4e00\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5b83\u66f4\u53ef\u80fd\u662f\u4e00\u4e2a\u540e\u9762\u6709\u591a\u53f0\u673a\u5668\u7684NAT IP\u3002\u53ea\u9700\u4e00\u4e2a\u6765\u6e90IP\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u786e\u5b9a\u4ed6\u4eec\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u7c7b\u578b\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7ecf\u5e38\u4f7f\u7528\u7684\u793e\u4ea4\u7f51\u7edc--Google\u3001YouTube\u3001Facebook\u3001Soichat.com\u3001TikTok\u3001Line(\u804a\u5929\u5e94\u7528\u7a0b\u5e8f)\u7b49\u3002\n\u5bf9\u4e8e\u540c\u4e00\u6e90IP\u5730\u5740\uff0c\u6211\u968f\u540e\u67e5\u8be2\u4e86\u6309\u5e94\u7528\u7a0b\u5e8f\u548c\u7c7b\u578b\u7ec6\u5206\u7684\u6240\u6709NetFlow\u65e5\u5fd7\u3002\n\u5bf9\u4e8e\u8fd9\u4e2a\u5355\u4e00\u7684IP\u5730\u5740\uff0c\u6570\u636e\u5e93\u5305\u542b668\u6761\u7f51\u7edc\u6d41\u91cf\u8bb0\u5f55\u3002\u6570\u636e\u5e93\u8fd8\u8be6\u7ec6\u5217\u51fa\u4e86\u6765\u81ea\u6b64IP\u7684\u901a\u4fe1\u91cf\u7c7b\u578b-\u6709\u591a\u5c11DNS\u901a\u4fe1\u91cf\u3001HTTP\u3001HTTPS\u3001SMTP\u7b49\u3002\u8fd9\u4e9b\u4fe1\u606f\u7684\u7ec6\u8282\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\uff0c\u4f46\u4e0d\u80fd\u8fc7\u4e8e\u4e2a\u4eba\u5316\u3002\n\u4e0d\u8fc7\uff0c\u9488\u5bf9\u6b64\u5355\u4e2aIP\u5730\u5740\u7684DNS\u67e5\u8be2\u4f1a\u53d8\u5f97\u66f4\u52a0\u4e2a\u4eba\u5316\u3002\u8fd9\u5bfc\u81f4\u4e86\u6b64IP\u5730\u5740\u7684429\u884c\u6570\u636e\u3002\n\u4ec5\u6839\u636eDNS\u67e5\u8be2\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u6709\u5173\u6b64\u4eba/\u5bb6\u5ead\u7684\u4ee5\u4e0b\u8be6\u7ec6\u4fe1\u606f\uff1a\n\u4ed6\u4eec\u8981\u4e48\u6709\u4e09\u661fAndroid\u8bbe\u5907\uff0c\u8981\u4e48\u6709\u5176\u4ed6\u4e09\u661f\u8bbe\u5907\uff0c\u5982\u8054\u7f51\u7535\u89c6\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u6570\u636e\u5e93\u53ea\u8bb0\u5f55\u4e868\u5929\u7684DNS\u6d41\u91cf\uff0c\u4f46\u8fd9\u4ecd\u7136\u76f8\u5f53\u4e8e33\u4ebf+DNS\u67e5\u8be2\u3002\u6b64DNS\u67e5\u8be2\u65e5\u5fd7\u6570\u636e\u53ef\u4ee5\u8bb2\u8ff0\u8bb8\u591a\u5176\u4ed6\u6709\u8da3\u800c\u6050\u6016\u7684\u6545\u4e8b\uff0c\u5c31\u50cf\u4e0a\u9762\u7684\u6570\u636e\u4e00\u6837\u3002\nElasticSearch\u6570\u636e\u5e93\u5728\u6ca1\u6709\u4efb\u4f55\u5f62\u5f0f\u7684\u8eab\u4efd\u9a8c\u8bc1\u7684\u60c5\u51b5\u4e0b\u66b4\u9732\u5728\u516c\u5171Internet\u4e0a\u663e\u7136\u662f\u4e00\u4e2a\u53cd\u590d\u51fa\u73b0\u7684\u95ee\u9898\u3002\u6211\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u505a\u8fd9\u7c7b\u8c03\u67e5\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u53d1\u73b0\u5e76\u5199\u4e0b\u4e869\u8d77\u8fd9\u6837\u7684\u6cc4\u5bc6\u4e8b\u4ef6\u3002\nElasticSearch\u548cKibana(\u7531\u540c\u4e00\u5bb6\u516c\u53f8\u5236\u9020)\u9700\u8981\u66f4\u5b89\u5168\u3001\u66f4\u5408\u7406\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u663e\u7136\uff0c\u5982\u679c\u8bbe\u7f6e\u8fd9\u4e9b\u5de5\u5177\u7684\u4eba\u51b3\u5fc3\u628a\u5b83\u4eec\u653e\u5230\u516c\u5171\u4e92\u8054\u7f51\u4e0a\uff0c\u90a3\u662f\u65e0\u6cd5\u963b\u6b62\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b\u5de5\u5177(\u7279\u522b\u662fKibana)\u53ef\u80fd\u4f1a\u663e\u793a\u4e00\u4e2a\u5de8\u5927\u7684\u8b66\u544a\u6a2a\u5e45\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u8be5\u5de5\u5177\u65e0\u9700\u8eab\u4efd\u9a8c\u8bc1\u5373\u53ef\u516c\u5f00\u8bbf\u95ee\uff0c\u8be5\u6a2a\u5e45\u4f1a\u63d0\u9192\u7528\u6237\uff0c\u5e76\u4f7f\u7528\u6237\u786e\u8ba4\u4ed6\u4eec\u7406\u89e3\u8fd9\u79cd\u60c5\u51b5\u7684\u98ce\u9669\u548c\u5f71\u54cd\u3002\n\u5bf9\u4e8e\u4ece\u60a8\u7684ISP\u6536\u96c6\u7684NetFlow\u6216sFlow\u6570\u636e\uff0c\u6ca1\u6709\u4efb\u4f55\u9690\u85cf\u3002\u5982\u679c\u60a8\u5728\u4ed6\u4eec\u7684\u7f51\u7edc\u4e0a\uff0c\u4ed6\u4eec\u53ef\u4ee5(\u5e76\u4e14\u5c06)\u8ddf\u8e2a\u8fde\u63a5\u7684\u59cb\u53d1\u4f4d\u7f6e\u4ee5\u53ca\u8be5\u6d41\u91cf\u7684\u76ee\u7684\u5730\u3002\n\u4e0d\u8fc7\uff0c\u5173\u4e8eDNS\u67e5\u8be2\u65e5\u5fd7\uff0c\u8fd9\u5f88\u5bb9\u6613\u89e3\u51b3\u3002\u4f7f\u7528DOH\u6216DOT\u4fdd\u62a4\u4f20\u8f93\u4e2d\u7684DNS\u901a\u4fe1\uff0c\u8fd9\u6837\u60a8\u7684ISP\u5c31\u4e0d\u80fd\u67e5\u770b\u3001\u767b\u5f55\u3001\u76d1\u89c6\uff0c\u6709\u65f6\u751a\u81f3\u65e0\u6cd5\u51fa\u552e\u60a8\u7684DNS\u67e5\u8be2\u901a\u4fe1\u3002\u6211\u77e5\u9053\u53cd\u5bf9DoH\u548cDOT\u7684\u5404\u79cd\u8bba\u636e\uff0c\u5176\u4e2d\u7edd\u5927\u591a\u6570\u90fd\u662f\u6765\u81ea\u7ec4\u7ec7\u548c\u516c\u53f8\u7684\u6beb\u65e0\u6839\u636e\u7684\u5371\u8a00\u8038\u542c\u7b56\u7565(\u548cFUD)\uff0c\u8fd9\u4e9b\u7ec4\u7ec7\u548c\u516c\u53f8\u4e0e\u60a8\u6ca1\u6709\u4fdd\u62a4DNS\u67e5\u8be2\u6d41\u91cf\u6709\u7ecf\u6d4e\u5229\u76ca\u3002\n\u591a\u548c\u591a\u662f\u672a\u6765\u3002Mozilla Firefox\u652f\u6301\u5b83\uff0cGoogle Chrome\u652f\u6301\u5b83\uff0cInternet Explorer Edge\u652f\u6301\u5b83\uff0cAndroid\u652f\u6301\u5b83\uff0c\u751a\u81f3\u5fae\u8f6fWindows10\u4e5f\u5c06\u5f88\u5feb\u6dfb\u52a0\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u5728\u4e3b\u8981\u6d4f\u89c8\u5668\u4e0a\u542f\u7528DoH\u7684\u6709\u7528\u6307\u5357\uff1a\u8fd9\u91cc\u662f\u5982\u4f55\u5728\u6bcf\u4e2a\u6d4f\u89c8\u5668\u4e2d\u542f\u7528DoH\u7684\uff0c\u8be5\u6b7b\u7684ISP\uff01\n\u9700\u8981\u660e\u786e\u7684\u662f\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cDOH\u548c/\u6216DOT\u5c06\u505c\u6b62DNS\u67e5\u8be2\u6570\u636e\u7684\u6536\u96c6\u3002\u5b83\u7684\u8bbe\u7f6e\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u4efb\u4f55\u5173\u5fc3\u4ed6\u4eec\u9690\u79c1\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u90fd\u662f\u4e00\u4ef6\u660e\u667a\u7684\u4e8b\u60c5\u3002", "note_en": "I recently discovered an exposed ElasticSearch database when browsing  BinaryEdge and  Shodan. This database appears to be controlled by a subsidiary of a major Thailand-based mobile network operator named  Advanced Info Service (AIS). \u00a0 According to Wikipedia, AIS is &#34;Thailand&#39;s largest GSM mobile phone operator with 39.87 million customers&#34; as of 2016. The database was likely controlled by AIS subsidiary Advanced Wireless Network (AWN). It contained a combination of DNS query logs and NetFlow logs for what appears to be AWN customers. Using this data it is quite simple to paint a picture of what a person does on the Internet. I made multiple attempts to contact AIS to get the database secured without success. At that point I \u00a0contacted  Zack Whittaker \u2013 a journalist from TechCrunch \u2013 for assistance. We were still unable to make contact with AIS. I then contacted the Thailand National CERT team (ThaiCERT). \u00a0ThaiCERT who was able to make contact with AIS, and we were successful in getting the database secured.\n  According to  Bloomberg AWN provides &#34;wired and wireless network services, telecommunications network, and computer systems.&#34; Their  website indicates the company was founded in 2005. They specifically call out that AWN  \u201cis a subsidiary company of Advanced Info Service Public Limited Company or AIS.\u201d\n AWN&#39;s (AS131445) network connects directly with AIS (AS45430), in fact AIS is their only upstream peer. This relationship is clearly visualized using the data published by  Hurricane Electric:\n  It is important to note that ThaiCERT contacted AIS about the exposed database, and then the database was offline shortly after. It&#39;s possible that AIS promptly notified AWN, or they may have simply blocked access to the exposed database to quickly address the issue for their subsidiary company.\n  Based on data available in BinaryEdge this database was first observed as exposed and publicly accessible on May 1, 2020. I discovered this database roughly 6 days later on May 7, 2020.\n  This was not a single server left exposed to the Internet without authentication. The main database I located was part of a cluster of three ElasticSearch nodes. I also located a fourth ElasticSearch database containing similar data as well. AIS has been notified of all of these exposed databases.\n   Over the course of the roughly 3 weeks the database has been exposed the volume of data has been growing significantly. The database was adding approximately  200M new rows of data every 24 hours.\n  To be precise, as of May 21st , 2020:  8,336,189,132 documents were stored in the database. This data was a combination of NetFlow data and DNS query logs.\n It appears DNS query traffic was only logged for roughly 8 days (2020-04-30 20:00 UTC - 2020-05-07 07:00 UTC). This captured  3,376,062,859 DNS query logs. It&#39;s unclear why they stopped logging DNS queries after this brief period of time. Perhaps it was significantly more data than they intended to capture. They were logging roughly  2,538 DNS events per second for that period of time.\n     This doesn&#39;t look like much, but when aggregated by a single source IP address (the person/device/house) that made the DNS request you can quickly paint a picture about that person. More on that later.\n The remaining roughly 5 billion rows of data was N etFlow data. The NetFlow data was being captured for the entire period of time the database remained exposed.  Solarwinds describes Netflow as:\n &#34;NetFlow is a network protocol developed by Cisco for collecting IP traffic information and monitoring network traffic. By analyzing flow data, a picture of network traffic flow and volume can be built.&#34;\n The NetFlow data was being logged at rate of  roughly 3,200 events per second. A single NetFlow log line looked like this:\n  This high level information records which source IP sent different types of traffic to a particular destination IP, and how much data was transferred. In the example screenshot this was an HTTPS (TCP port 443) request to a destination IP address. It would be possible to do a reverse DNS lookup on the destination IP to quickly identify which website this person going to use HTTPS.\n   AWN was using a tool called  ElastiFlow that simplifies the process of getting NetFlow or sFlow data into Elasticsearch where it can quickly visualized using Kibana.\n The prebuilt &#34;Geo IP&#34; dashboard summarizes the geographic spread of traffic being capture. Unsurprisingly the majority of the traffic was from Thailand, although there is a decent amount of traffic logged from surrounding countries as well.\n  AWN had built a dashboard for reviewing the DNS traffic that was logged. This breaks down the ASNs, top domains, and top IPs by query frequency. I am not going to speculate why AWN was logging their customer&#39;s DNS queries.\n  Interestingly enough AWN had this DNS dashboard saved with a filter  specifically looking at Facebook traffic. It&#39;s unclear why they would be particularly interested in who was going to Facebook.\n    To prove the point that DNS query logs should be treated like sensitive information I picked a single source IP address with low to moderate traffic from this database. I didn&#39;t want to pick one of the highest traffic IPs as I assumed that would be more likely be a NATed IP with multiple machines behind it. With a single source IP address it&#39;s possible to quickly determine the type of devices on their network, and the social networks they frequent \u2013 Google, YouTube, Facebook, Soichat.com, TikTok, Line (a chat application), among many other domains.\n  For the same source IP address I then queried for all NetFlow logs broken down by application and type.\n  For this single IP address the database contained 668 netflow records. The database also had a detailed breakdown of the types of traffic from this IP \u2013 how much DNS traffic, HTTP, HTTPS, SMTP, etc. This information is creepy in detail, but not overly personally identifiable.\n  The DNS queries for this single IP address though get a bit more personal. This resulted in 429 rows of data for this IP address.\n   Based on just the DNS queries it is possible to identify the following details about this person/household:\n They either have a Samsung Android device, or some other Samsung device such as an Internet-connected TV.\n Keep in mind the database was only logging DNS traffic for 8 days, and yet that still amounts to 3.3B+ DNS queries. This DNS query log data can tell many other interesting and creepy stories like the above data.\n    ElasticSearch databases being exposed on the public Internet without any form of authentication is  clearly a reoccurring problem. I don&#39;t get much time to do these kinds of investigations, but I&#39;ve found and written about 9 such leaks over the past year.\n ElasticSearch and Kibana (made by the same company) need more secure and sane defaults. Obviously if the person setting up these tools is determined to put them on the public Internet there&#39;s no way to prevent that. That being said, these tools (Kibana in particular) could display a gigantic warning banner that alerts users if the tool is detected to be publicly accessible without authentication and make the user acknowledge they understand the risk and implications of that.\n  There&#39;s no hiding from NetFlow or sFlow data collection from your ISP. If you&#39;re on their network they can (and will) track where connections are originating and what the destination is for that traffic.\n Regarding the DNS query logs though \u2013 that is easy to solve. Use DoH or DoT to secure your DNS communications in transit so that your ISP can&#39;t see, log, spy on, and sometimes sell your DNS query traffic. I know the various arguments against DoH and DoT, and the vast majority of them are unfounded scare mongering tactics (and FUD) from organizations and companies with a financial interest in you not securing your DNS query traffic.\n DoH and DoT are the future. Mozilla Firefox supports it, Google Chrome supports it, Internet Explorer Edge supports it, Android supports it, and even Microsoft Windows 10 will be adding it soon. \u00a0Here&#39;s a helpful guide for enabling it on the major browsers:  &#34;Here&#39;s how to enable DoH in each browser, ISPs be damned&#34;\n To be clear: DoH and/or DoT would have stopped the gathering of DNS query data in this case. It&#39;s simple to set up, and it&#39;s just a smart thing to do for anyone concerned about their privacy.", "posttime": "2020-05-25 16:30:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "database,\u6570\u636e\u5e93,\u6570\u636e", "title": "\u6cf0\u56fd\u6570\u636e\u5e93\u6cc4\u973283\u4ebf\u4efd\u4e92\u8054\u7f51\u8bb0\u5f55", "title_en": "Thai Database Leaks 8.3B Internet Records", "transed": 1, "url": "https://rainbowtabl.es/2020/05/25/thai-database-leaks-internet-records/?=may-23-2020", "via": "", "real_tags": ["database", "\u6570\u636e\u5e93", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "3e2ca322d954bd82ca363a2ea4ebd3fb.png", "infoid": 1003613, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u4f01\u4e1a\u6587\u5316\u5b58\u5728\u4ee5\u6765\uff0c\u5c31\u4e00\u76f4\u4e0d\u592a\u6b22\u8fce\u67d0\u4e2a\u5e74\u9f84\u6bb5\u7684\u4eba\u3002\u5373\u4f7f\u5728\u4eca\u5929\u5f8b\u5e08\u4e50\u4e8e\u63a5\u624b\u4e00\u5bb6\u516c\u53f8\u4f3c\u4e4e\u56e0\u8eab\u4f53\u7279\u5f81\u800c\u6b67\u89c6\u4e2a\u4eba\u7684\u6848\u4ef6\u7684\u8bc9\u8bbc\u73af\u5883\u4e2d\uff0c\u8bb8\u591a(\u5982\u679c\u4e0d\u662f\u5927\u591a\u6570\u516c\u53f8)\u4e5f\u5b58\u5728\u516c\u7136\u7684\u5e74\u9f84\u6b67\u89c6\uff0c\u5c3d\u7ba1\u5f88\u5c11\u6709\u4eba\u63d0\u5230\u6216\u627f\u8ba4\u8fd9\u4e00\u70b9\u3002\u62e5\u670920\u4e16\u7eaa70\u5e74\u4ee3\u5927\u5b66\u5b66\u4f4d\u7684\u6c42\u804c\u8005\u901a\u5e38\u4f1a\u7acb\u5373\u88ab\u6392\u9664\u5728\u8003\u8651\u4e4b\u5916\uff0c\u5373\u4f7f\u4ed6\u4eec\u5728\u5176\u4ed6\u65b9\u9762\u53ef\u80fd\u662f\u7ba1\u7406\u804c\u4f4d\u7684\u7406\u60f3\u4eba\u9009\u3002\n\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u4eba\u4eec\u9884\u8ba1\u4e0d\u540c\u5e74\u9f84\u6bb5\u7684\u4eba\u4f1a\u88ab\u70ed\u5207\u6b22\u8fce\u8fdb\u5165\u7ec4\u7ec7\uff0c\u4ee5\u8868\u8fbe\u591a\u6837\u6027-\u8fd9\u662f\u4eba\u529b\u8d44\u6e90\u90e8\u95e8\u7684\u4e00\u9879\u4e3b\u8981\u4e3e\u63aa-\u4f46\u4e8b\u5b9e\u6839\u672c\u4e0d\u662f\u8fd9\u6837\u3002\u4e0d\u5e78\u7684\u4e8b\u5b9e\u662f\uff0c\u7f8e\u56fd\u5de5\u4f5c\u573a\u6240\u5bf9\u8001\u5e74\u4eba\u7684\u6b67\u89c6\u662f\u53f8\u7a7a\u89c1\u60ef\u7684(\u4e5f\u662f\u975e\u6cd5\u7684)\uff0c\u8fd9\u662f\u6211\u4eec\u6839\u6df1\u8482\u56fa\u7684\u6587\u5316\u538c\u6076\u7684\u4ea7\u7269\uff0c\u8fd9\u4e9b\u4eba\u88ab\u8ba4\u4e3a\u5df2\u7ecf\u8fc7\u4e86\u58ee\u5e74\u3002\u7531\u4e8e\u5404\u79cd\u5404\u6837\u7684\u539f\u56e0\uff0c\u5e74\u8f7b\u4eba\u66f4\u559c\u6b22\u548c\u5176\u4ed6\u5e74\u8f7b\u4eba\u5728\u4e00\u8d77\uff0c\u8fd9\u4f7f\u5f97\u5e74\u9f84\u6210\u4e3a\u552f\u4e00\u53ef\u4ee5\u63a5\u53d7\u6b67\u89c6\u7684\u4eba\u53e3\u7edf\u8ba1\u6807\u51c6\uff0c\u901a\u5e38\u662f\u4ee5\u201c\u8d44\u683c\u8fc7\u9ad8\u201d\u7684\u540d\u4e49\u3002\n\u8fd9\u663e\u7136\u662f\u4e00\u4ef6\u53ef\u803b\u7684\u4e8b\u60c5\uff0c\u4e0e\u524d\u51e0\u4ee3\u7ecf\u7406\u7684\u65b9\u6cd5\u6ca1\u6709\u592a\u5927\u4e0d\u540c\uff0c\u5982\u679c\u4ed6\u4eec\u78b0\u5de7\u662f\u975e\u6d32\u88d4\u7f8e\u56fd\u4eba\u6216\u5973\u6027\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u8058\u7528\u5408\u683c\u7684\u5019\u9009\u4eba\u3002\u4eba\u529b\u8d44\u6e90\u4eba\u5458\u7528\u80a4\u8272\u548c\u6027\u522b\u6765\u5b9a\u4e49\u591a\u6837\u6027\uff0c\u800c\u4e0d\u662f\u7528\u4e00\u4e2a\u4eba\u7684\u5bff\u547d\u6765\u5b9a\u4e49\u591a\u6837\u6027\u7684\u505a\u6cd5\uff0c\u4e0d\u4ec5\u5bf9\u8001\u5e74\u4eba\u4e0d\u5229\uff0c\u5bf9\u516c\u53f8\u672c\u8eab\u4e5f\u662f\u4e0d\u5229\u7684\u3002\u5e74\u957f\u7684\u4eba\u901a\u5e38\u4f1a\u7ed9\u4efb\u4f55\u7ec4\u7ec7\u5e26\u6765\u4e00\u5957\u6709\u4ef7\u503c\u7684\u6280\u80fd\uff0c\u5373\u4f7f\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u4eec\u6709\u66f4\u591a\u7684\u751f\u6d3b\u7ecf\u9a8c\u3002\n\u5f53\u7136\uff0c\u65e0\u8bba\u4ee5\u4ec0\u4e48\u6807\u51c6\u8861\u91cf\uff0c\u8fd9\u573a\u5927\u6d41\u884c\u90fd\u662f\u4e00\u4ef6\u53ef\u6015\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u53ef\u80fd\u4e3a\u4f01\u4e1a\u6587\u5316\u63d0\u4f9b\u4e86\u4e00\u4e2a\u673a\u4f1a\uff0c\u8ba9\u5b83\u5151\u73b0\u5176\u58f0\u79f0\u7684\u673a\u4f1a\u5e73\u7b49\u548c\u201c\u6700\u4f73\u5b9e\u8df5\u201d\u3002\u201c\u5728\u5927\u6d41\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u6b63\u7f13\u6162\u4f46\u7a33\u6b65\u5730\u671d\u7740\u66f4\u52a0\u865a\u62df\u7684\u5de5\u4f5c\u573a\u6240\u6f02\u6d41\uff0c\u4f46\u73b0\u5728\u7f51\u7edc\u5b87\u5b99\u6b63\u5728\u8fc5\u901f\u53d6\u4ee3\u4f20\u7edf\u529e\u516c\u5ba4\u3002\u968f\u7740\u6211\u4eec\u4e0d\u65ad\u6269\u5c55\u7684\u7f51\u7edc\u548c\u4e0d\u65ad\u589e\u52a0\u7684\u5e26\u5bbd\uff0c\u6211\u4eec\u6b63\u5728\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7279\u5b9a\u7684\u65e5\u671f\u548c\u7279\u5b9a\u7684\u65f6\u95f4\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u800c\u4e0d\u5fc5\u5728\u7279\u5b9a\u7684\u65e5\u671f\u548c\u7279\u5b9a\u7684\u65f6\u95f4\u5f80\u8fd4\u4e8e\u529e\u516c\u697c\u3002\n\u4e0e\u5de5\u4f5c\u76f8\u5173\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u5206\u89e3\u7684\u5f71\u54cd\u73b0\u5728\u6b63\u53d8\u5f97\u8d8a\u6765\u8d8a\u6e05\u695a\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\uff0c\u7279\u522b\u662f\u79d1\u6280\u884c\u4e1a\u7684\u516c\u53f8\uff0c\u660e\u667a\u5730\u5f97\u51fa\u7ed3\u8bba\uff0c\u4e3a\u5c06\u5458\u5de5\u805a\u96c6\u5728\u4e00\u8d77\u800c\u5efa\u9020\u7684\u6709\u5f62\u57fa\u7840\u8bbe\u65bd\u5373\u4f7f\u4e0d\u662f\u6ca1\u6709\u5fc5\u8981\uff0c\u4e5f\u57fa\u672c\u4e0a\u6548\u7387\u4f4e\u4e0b\u3002\u9664\u4e86\u6f5c\u5728\u7684\u5065\u5eb7\u98ce\u9669\uff0c\u5199\u5b57\u697c\u7684\u5efa\u9020\u548c\u7ef4\u62a4\u90fd\u5f88\u6602\u8d35\uff0c\u79df\u91d1\u3001\u7a0e\u6536\u548c\u4fdd\u9669\u5360\u8fd0\u8425\u6210\u672c\u7684\u6bd4\u4f8b\u5f88\u9ad8\u3002\u5047\u8bbe\u6709\u4e00\u79cd\u53ef\u4ee5\u8ba9\u4eba\u4eec\u6709\u6548\u6c9f\u901a\u7684\u53ef\u63a5\u53d7\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u7ed5\u8fc7\u8fd9\u4e9b\u8d39\u7528\u5728\u8d22\u52a1\u4e0a\u662f\u7b80\u5355\u7684\u3002\n\u4e92\u8054\u7f51\u5c31\u662f\u8fd9\u79cd\u9009\u62e9\u3002\u7ecf\u8fc7\u51e0\u5341\u5e74\u7684\u5efa\u8bbe\uff0c\u4e92\u8054\u7f51\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u4f5c\u4e3a\u516c\u53f8\u5927\u90e8\u5206\u5de5\u4f5c\u7684\u529f\u80fd\u5e73\u53f0\u7684\u5730\u6b65\u3002\u968f\u7740\u6280\u672f\u7684\u4e0d\u65ad\u6539\u8fdb\u548c\u8fdb\u6b65\uff0c\u4ece\u6a21\u62df\u5de5\u4f5c\u5411\u6570\u5b57\u5de5\u4f5c\u7684\u8fc7\u6e21\u5c06\u4f1a\u52a0\u5feb\uff0c\u529e\u516c\u5ba4\u7684\u6982\u5ff5\u5c06\u8fdb\u4e00\u6b65\u8fc7\u65f6\u3002\u4ee4\u4eba\u9ad8\u5174\u7684\u662f\uff0c\u529e\u516c\u5ba4\u7684\u65f6\u4ee3\u4f3c\u4e4e\u5373\u5c06\u7ed3\u675f\uff0c\u4e0d\u4e45\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u4f1a\u8ba4\u4e3a\uff0c\u5728\u5de5\u4f5c\u65e59\u70b9\u81f35\u70b9\u5c06\u5458\u5de5\u805a\u96c6\u5728\u4e00\u5ea7\u5927\u578b\u5efa\u7b51\u4e2d\u7684\u60f3\u6cd5\uff0c\u662f20\u4e16\u7eaa\u7684\u4e00\u4ef6\u5947\u602a\u7684\u827a\u672f\u54c1\uff0c\u5b58\u5728\u7684\u65f6\u95f4\u6709\u70b9\u592a\u957f\u4e86\u3002\n\u529e\u516c\u5ba4\u7684\u7ed3\u675f\u5bf9\u8001\u5e74\u4eba\u548c\u90a3\u4e9b\u7531\u4e8e\u6b67\u89c6\u6027\u505a\u6cd5\u800c\u6ca1\u6709\u53d1\u6325\u5176\u6f5c\u529b\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u90fd\u53ef\u80fd\u662f\u4e00\u4ef6\u975e\u5e38\u597d\u7684\u4e8b\u60c5\u3002\u7531\u4e8eZoom\u6216\u7c7b\u4f3c\u5e73\u53f0\u4e0a\u7684\u4eba\u6bd4\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4eba\u8981\u5c11\u5f97\u591a\uff0c\u7ecf\u7406\u4eec\u53ef\u80fd\u4f1a\u66f4\u613f\u610f\u8058\u7528\u4e2d\u5e74\u4ee5\u4e0a\u7684\u4eba\u3002\u540c\u6837\uff0c\u5e74\u8f7b\u4eba\u53ef\u80fd\u66f4\u613f\u610f\u5728\u865a\u62df\u73af\u5883\u4e2d\u4e0e\u8001\u5e74\u4eba\u4e00\u8d77\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4ef6\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u4f46\u4e0e\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u91cc\u76f8\u6bd4\uff0c\u5c4f\u5e55\u4e0a\u4e00\u4e2a\u5c0f\u65b9\u6846\u91cc\u7684\u4eba\u7684\u8eab\u4f53\u5c5e\u6027\u53d7\u5230\u7684\u5173\u6ce8\u66f4\u5c11\u3002\n\u5bf9\u4e8e\u6570\u5343\u4e07\u5a74\u513f\u6f6e\u4e00\u4ee3\u6765\u8bf4\uff0c\u7531\u4e8e\u6280\u672f\u8fdb\u6b65\u800c\u4f7f\u4f01\u4e1a\u6587\u5316\u53d8\u5f97\u5bf9\u5e74\u9f84\u66f4\u53cb\u597d\u7684\u524d\u666f\u5c06\u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u53d1\u5c55\u3002\u4e0e\u5176\u5728\u9884\u5b9a\u7684\u5e74\u9f84(\u901a\u5e38\u662f65\u5c81)\u7ed3\u675f\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u5f00\u59cb\u5728\u9633\u5149\u660e\u5a9a\u3001\u6e29\u6696\u7684\u5730\u65b9\u8fc7\u4e0a\u4f11\u95f2\u751f\u6d3b\uff0c\u4eca\u5929\u7684\u5927\u591a\u657060\u591a\u5c81\u548c70\u591a\u5c81\u7684\u4eba\u90fd\u60f3\u5c3d\u53ef\u80fd\u957f\u65f6\u95f4\u5730\u5de5\u4f5c\u3002\u9664\u4e86\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0--\u6323\u94b1--\u5de5\u4f5c\u662f\u4e2a\u4eba\u8eab\u4efd\u7684\u4e3b\u8981\u6765\u6e90\uff0c\u4e5f\u63d0\u4f9b\u4e86\u65e9\u6668\u8d77\u5e8a\u7684\u7406\u7531\u3002\u7814\u7a76\u8868\u660e\uff0c\u5728\u751f\u6d3b\u4e2d\u62e5\u6709\u67d0\u79cd\u610f\u4e49\u548c\u76ee\u6807\u4e0e\u8eab\u4f53\u548c\u5fc3\u7406\u5065\u5eb7\u90fd\u6709\u8054\u7cfb\uff0c\u800c\u4e14\u901a\u5e38\u4f1a\u5ef6\u957f\u5bff\u547d\u3002\n\u8ba9\u6211\u4eec\u5e0c\u671b\u8fd9\u573a\u5927\u6d41\u884c\u6700\u7ec8\u80fd\u6210\u4e3a\u79ef\u6781\u7684\u793e\u4f1a\u548c\u7ecf\u6d4e\u53d8\u9769\u7684\u50ac\u5316\u5242\uff0c\u6bd4\u5982\u4e00\u4e2a\u66f4\u52a0\u5e73\u7b49\u7684\u5de5\u4f5c\u573a\u6240\u3002", "note_en": "For as long as it has existed, corporate culture has been less than welcoming towards people of a certain age. Even in today\u2019s litigious climate, where lawyers are happy to take a case in which a company appears to have discriminated against a person based on a physical attribute, blatant, although hardly ever mentioned or acknowledged ageism is present in many, if not most, corporations. Job applicants with college degrees from the 1970s are typically promptly eliminated from consideration even though they may be otherwise ideally qualified for a  management position.\n  If anything, one would expect people of different ages to be eagerly welcomed into organizations as an expression of diversity\u2014a prime initiative of human resource departments\u2014but this is simply not the case.\u00a0The unfortunate truth is that  discrimination against older people in the American workplace is commonplace (and illegal), a product of our deeply embedded cultural aversion to people considered past their prime. For a variety of reasons, young adults prefer to be around other younger adults, making age the only remaining demographic criterion in which it is acceptable to discriminate, often in the name of something like \u201coverqualification.\u201d\n  This is obviously a shameful thing and not much different than the methods of previous generations of managers who would not hire qualified candidates if they happened to be African American or female. Human resource people\u2019s practice of defining diversity in terms of skin color and  gender but not by how many years a person has lived is bad not just for older people but for companies themselves. Older people often bring a valuable set of skills to any organization if only because they have more life experience.\n  The pandemic is a horrible thing by any measure, of course, but it may present an opportunity for corporate culture to live up to its claims of equal opportunity and \u201cbest practices.\u201d\u00a0We were slowly but steadily drifting towards a more virtual workplace before the pandemic, but now the online universe is rapidly replacing the traditional office. With our ever-expanding network and ever-increasing bandwidth, we\u2019re realizing that we can get much of our work done without having to go to and from an office building on certain days at specified times.\n  The implications of the breakdown of time and space as related to work are now becoming clear. More and more companies, especially those in the tech sector, are wisely concluding that the physical infrastructure constructed to put employees together in a building is largely inefficient if not unnecessary. Beyond the potential health risks, office buildings are expensive to construct and maintain, and rents, taxes, and insurance comprise a high percentage of operating costs.\u00a0It makes simple fiscal sense to bypass these expenses, assuming there is an acceptable alternative with which people can effectively communicate with each other.\n  The internet is that alternative.\u00a0After a few decades of construction, the internet has reached a point where it can serve as a functional platform for much of what companies do. With continued improvements and advancements in technology, the transition from analog to digital work will accelerate, further making the notion of the office obsolete. Happily, the era of the office appears to be ending, and it will not be long before we view the idea of clustering employees in a big building on weekdays from 9 to 5 as a curious artifact of the 20th century that lingered a bit too long.\n  The end of the office could be a very good thing for both older people and for companies that are not living up to their potential due to their discriminatory practices. Because a person on Zoom or its equivalent has far less physical presence than in real life, managers may be more open to hiring someone past middle age. Likewise, young adults may be more receptive to working with older adults in a virtual setting than in a real one. It may be an odd thing to contemplate, but less  attention is paid to a person\u2019s physical attributes in a little square box on a screen than if he or she is in the same room.\n  For tens of millions of baby boomers, the prospect of corporate culture becoming more age-friendly due to advancing technology would be a very welcome development. Rather than end one\u2019s  career at a predetermined age, usually 65, to embark on a life of leisure in a sunny, warm place, most of today\u2019s sexagenarians and septuagenarians want to work as long as they possibly can. Besides the obvious reason\u2014money\u2014work is a prime source of  identity for individuals, and offers a reason to get up in the morning. Research shows that having some kind of meaning and purpose in life is linked to both physical and emotional health, and often adds years to longevity.\n  Let\u2019s hope that the pandemic ultimately serves as a catalyst for positive social and economic change such as a more equal workplace.", "posttime": "2020-05-25 15:43:06", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6b67\u89c6,age", "title": "\u5927\u6d41\u884c\u662f\u5426\u610f\u5473\u7740\u5a74\u513f\u6f6e\u4e00\u4ee3\u7684\u5e74\u9f84\u6b67\u89c6\u51cf\u5c11\uff1f", "title_en": "Will The Pandemic Mean Less Age Discrimination For Boomers?", "transed": 1, "url": "https://www.psychologytoday.com/us/blog/boomers-30/202005/will-the-pandemic-make-corporate-culture-more-age-friendly", "via": "", "real_tags": ["\u6b67\u89c6", "age"]}, {"category": "", "categoryclass": "", "imagename": "cab9c07120aa128baba93a1ecc80d6fa.jpeg", "infoid": 1003612, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c\u4e00\u6761\u89c4\u5219\u662f\u4f60\u4e0d\u80fd\u8c08\u8bba\u4e0a\u4e86\u9501\u7684\u623f\u95f4\u3002\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u4f60\u4eec\u6ca1\u6709\u76f8\u4e92\u4ea4\u8c08\uff0c\u4e5f\u6ca1\u6709\u4ece\u623f\u95f4\u91cc\u79fb\u8d70\u4efb\u4f55\u6750\u6599\uff0c\u4e5f\u6ca1\u6709\u4ee5\u4efb\u4f55\u65b9\u5f0f\u8bb0\u5f55\u4e0b\u6765\u3002\n1969\u5e749\u6708\uff0c\u4f26\u6566\u5723\u9a6c\u4e01\u827a\u672f\u5b66\u9662(Saint Martin\u2018s School Of Art)\u65b0\u5230\u7684\u4e00\u5e74\u7ea7\u96d5\u5851\u5b66\u751f\u6536\u5230\u4e86\u540d\u724c\u548c\u4e00\u5757\u7528\u725b\u76ae\u7eb8\u5305\u88f9\u7684\u805a\u82ef\u4e59\u70ef\u65b9\u5757\uff0c\u5e76\u88ab\u5e26\u8fdb\u4e86\u4e00\u4e2a\u9501\u7740\u87ba\u6813\u7684\u623f\u95f4\u3002\u5728\u91cc\u9762\uff0c\u4ed6\u4eec\u53d1\u73b0\u4ed6\u4eec\u7684\u540d\u5b57\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5c31\u8d34\u5728\u5730\u677f\u4e0a\uff0c\u8fd8\u6709\u4e00\u4efd\u89c4\u5219\u6e05\u5355\u3002\u5b66\u751f\u4eec\u88ab\u544a\u77e5\uff0c\u4ed6\u4eec\u4e0d\u5141\u8bb8\u5728\u4e0a\u534810\u70b9\u4e4b\u95f4\u79bb\u5f00\u623f\u95f4\u3002\u4e0b\u53484\u70b9\u534a\uff0c\u9664\u4e86\u53bb\u62ff\u5de5\u5177\uff0c\u4e00\u76f4\u90fd\u6709\u81f3\u5c11\u4e00\u4f4d\u6559\u6388\u9ed8\u9ed8\u76d1\u7763\u3002\n\u4e25\u683c\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u5802\u7f8e\u672f\u8bfe\u3002\u4f46\u8fd9\u4e5f\u662f\u4e00\u4e2a\u6559\u5b66\u5b9e\u9a8c\uff0c\u540e\u6765\u88ab\u79f0\u4e3a\u201c\u4e0a\u4e86\u9501\u7684\u623f\u95f4\u201d\u3002\u5b83\u6301\u7eed\u4e86\u4e24\u5e74\uff0c\u662f\u5bfc\u5e08\u52a0\u601d\u00b7\u57c3\u6587\u65af\u3001\u52a0\u96f7\u65af\u00b7\u743c\u65af\u3001\u5f7c\u5f97\u00b7\u5361\u8fea\u4e9a\u548c\u5f7c\u5f97\u00b7\u54c8\u7ef4\u7684\u521b\u610f\u3002\u4eca\u5929\u770b\u6765\uff0c\u8fd9\u662f\u827a\u672f\u53f2\u7f16\u5e74\u53f2\u4e0a\u4e00\u4e2a\u5947\u602a\u7684\u811a\u6ce8\uff0c\u4e0e\u51a0\u72b6\u75c5\u6bd2\u65f6\u4ee3\u7684\u9694\u79bb\u548c\u53d7\u76d1\u89c6\u7684\u52b3\u52a8\u5f62\u5f0f\u76f8\u5bf9\u5e94\u3002\n\u8be5\u9879\u76ee\u6ca1\u6709\u592a\u591a\u9057\u4ea7\uff0c\u6700\u8fd1\u624d\u88ab\u91cd\u65b0\u8bc4\u4f30\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4f26\u6566\u6d1b\u5c14\u00b7\u6770\u5c3c\u4e9a\u5fb7\u753b\u5eca(Laure Genillard)2019\u5e74\u7684\u4e00\u6b21\u5c55\u89c8\uff0c\u4ee5\u53ca\u7531\u7b56\u5c55\u4eba\u51fa\u7248\u7684\u65b0\u7684\u91c7\u8bbf\u96c6\u548c\u300a\u9501\u5b9a\u7684\u623f\u95f4\uff1a\u64bc\u52a8\u827a\u672f\u548c\u6559\u80b2\u7684\u56db\u5e74\uff0c1969-73\u5e74\u300b(\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u51fa\u7248\u793e\u51fa\u7248)\u3002\u4f46\u5f53\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u63a2\u7d22\u4eba\u4eec\u5982\u4f55\u5728\u53d7\u63a7\u73af\u5883\u4e0b\u76f8\u4e92\u4ea4\u6d41\u7684\u9879\u76ee-\u5b83\u5f88\u53ef\u80fd\u6fc0\u53d1\u4e86\u827a\u672f\u6559\u80b2\u548c\u827a\u672f\u521b\u4f5c\u7684\u8f6c\u53d8\u3002\n\u5728\u63a5\u53d7ARTNews\u91c7\u8bbf\u65f6\uff0c\u57c3\u6587\u65af\u8bb2\u8ff0\u4e86\u8fd9\u4e2a\u9879\u76ee\u662f\u5982\u4f55\u4ece\u5bfc\u5e08\u4eec\u5bf9\u8bf4\u6559\u6a21\u5f0f\u3001\u8bed\u8a00\u7684\u65e0\u6548\u6027\u4ee5\u53ca\u201c\u88f8\u4f53\u7269\u4f53\u548c\u8bed\u8a00\u4e4b\u95f4\u5b58\u5728\u7684\u4e0d\u76f8\u5bb9\u201d\u7684\u632b\u8d25\u611f\u4e2d\u5192\u51fa\u6765\u7684\u3002\n\u201c\u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u201d\u57c3\u6587\u65af\u8bf4\u3002\u201c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u7ed9\u5b66\u751f\u7269\u8d28\u4e0a\u7684\u4e1c\u897f\uff0c\u522b\u7684\u4ec0\u4e48\u90fd\u4e0d\u7ed9\u5462\uff1f\u201d\u6ca1\u6709\u6307\u793a\uff0c\u8ba9\u4ed6\u4eec\u6309\u7167\u6307\u793a\u53bb\u505a\u5427\u3002\u201c\u3002\n\u5728\u7b2c\u4e8c\u5468\uff0c\u5b66\u751f\u4eec\u8d70\u8fdb\u623f\u95f4\uff0c\u53d1\u73b0\u623f\u95f4\u91cc\u7a7a\u65e0\u4e00\u4eba\uff0c\u4ed6\u4eec\u4e00\u76f4\u5728\u5b66\u4e60\u7684\u4e1c\u897f\u90fd\u6ca1\u6709\u4e86\u3002\u7528\u4e00\u5377\u725b\u76ae\u7eb8\u4ee3\u66ff\u4e86\u805a\u82ef\u4e59\u70ef\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e00\u5927\u56e2\u7ef3\u5b50\uff0c\u4e00\u888b\u77f3\u818f\uff0c\u540e\u6765\u8fd8\u63d0\u4f9b\u4e86\u6c34\u3002\u9664\u4e86\u79d2\u8868\u4e4b\u5916\uff0c\u4ed6\u4eec\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u5173\u4e8e\u4ed6\u4eec\u5c06\u62e5\u6709\u6bcf\u79cd\u6750\u6599\u7684\u65f6\u95f4\u7684\u6307\u793a\uff0c\u4e5f\u6ca1\u6709\u7ed9\u4ed6\u4eec\u4efb\u4f55\u6846\u67b6\u6765\u89e3\u91ca\u9879\u76ee\u7684\u610f\u56fe\u6216\u6301\u7eed\u65f6\u95f4\u3002\u968f\u7740\u51e0\u5468\u7684\u65f6\u95f4\u8fc7\u53bb\uff0c\u5b9e\u9a8c\u7684\u4fc3\u8fdb\u8005\u4e5f\u6ca1\u6709\u4efb\u4f55\u8bc4\u4f30\u6216\u79ef\u6781\u7684\u53cd\u9988\u3002\u4efb\u4f55\u65b0\u7684\u89c4\u5219\u90fd\u662f\u4ee5\u4e66\u9762\u5f62\u5f0f\u51fa\u53f0\u7684\uff0c\u5b66\u751f\u4eec\u53ea\u6709\u5728\u8fdf\u5230\u6216\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u53d7\u5230\u53e3\u5934\u8b66\u544a\u3002\n\u201c\u4e0a\u9501\u7684\u623f\u95f4\u201d\u5728\u5b83\u7684\u65f6\u4ee3\u662f\u6709\u4e89\u8bae\u7684\u3002\u8003\u8651\u5230\u5b66\u751f\u7684\u5fc3\u7406\u5065\u5eb7\uff0c\u6821\u957f\u8bf7\u6765\u4e86\u4e00\u4f4d\u7cbe\u795e\u79d1\u533b\u751f\u6765\u8bc4\u4f30\u60c5\u51b5\u3002\u4f46\u6709\u53ef\u80fd\uff0c\u9664\u4e86\u8fd9\u8d77\u4e11\u95fb\u4e4b\u5916\uff0c\u5b83\u4e5f\u53ef\u80fd\u662f\u5f53\u65f6\u5728\u6b27\u6d32\u8bde\u751f\u7684\u4e00\u79cd\u6982\u5ff5\u827a\u672f\u7684\u91cd\u8981\u5148\u9a71\u3002\u6709\u4eba\u751a\u81f3\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u4e2a\u9879\u76ee\u9884\u793a\u4e86\u827a\u672f\u5bb6\u7ea6\u745f\u592b\u00b7\u535a\u4f0a\u65af(Joseph Beuys)\u5173\u4e8e\u201c\u793e\u4f1a\u96d5\u5851\u201d\u7684\u60f3\u6cd5\uff0c\u8fd9\u662f\u4e00\u79cd\u7531\u521b\u4f5c\u8005\u548c\u4e0e\u4e4b\u4e92\u52a8\u7684\u4eba\u5e73\u7b49\u5851\u9020\u7684\u827a\u672f\u3002\u6709\u4e00\u4e9b\u8bc1\u636e\u8868\u660e\uff0c\u5b66\u751f\u4eec\u751a\u81f3\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4ef6\u6982\u5ff5\u6027\u7684\u4f5c\u54c1\u3002\u57c3\u6587\u65af\u8bf4\uff0c\u57282010\u5e74\u4e00\u6b21\u4e0a\u4e86\u9501\u7684\u623f\u95f4\u56e2\u805a\u4f1a\u8bae\u4e0a\uff0c\u4ed6\u4e86\u89e3\u5230\u4e00\u4e9b\u5b66\u751f\u542b\u84c4\u5730\u5c06\u8fd9\u4e2a\u9879\u76ee\u7406\u89e3\u4e3a\u4e00\u4ef6\u827a\u672f\u54c1\uff0c\u5c3d\u7ba1\u5de5\u4f5c\u4eba\u5458\u5e76\u6ca1\u6709\u8fd9\u6837\u8ba4\u4e3a\u3002\n\u57c3\u6587\u65af\u60f3\u8981\u4e0e\u5f53\u65f6\u827a\u672f\u5b66\u6821\u7684\u4e3b\u6d41\u98ce\u6c14\u80cc\u9053\u800c\u9a70\uff0c\u4ed6\u5f62\u5bb9\u8fd9\u79cd\u98ce\u6c14\u662f\u677e\u6563\u7684\u3001\u65e0\u7ec4\u7ec7\u7684\u3001\u4e0d\u53d7\u76d1\u7ba1\u7684\u3002\u4e0d\u4e45\u4e4b\u540e\uff0cColdstream\u6539\u9769\u5c06\u620f\u5267\u6027\u5730\u5f7b\u5e95\u6539\u9769\u82f1\u56fd\u7684\u827a\u672f\u6559\u80b2\uff0c\u4f7f\u5176\u6446\u8131\u4ee5\u6280\u80fd\u4e3a\u57fa\u7840\u7684\u4f53\u7cfb\uff0c\u5e76\u521b\u5efa\u6807\u51c6\uff0c\u4f7f\u5176\u4e0e\u5b66\u4f4d\u76f8\u5f53\u3002\u4ed6\u8fd8\u5e0c\u671b\u6446\u8131\u4f20\u64ad\u548c\u590d\u5236\u7684\u6559\u5b66\u6a21\u5f0f\uff0c\u201c\u4e3a\u81ea\u5df1\u627e\u5230\u4e00\u4e2a\u89d2\u8272\uff0c\u5728\u8fd9\u4e2a\u89d2\u8272\u4e2d\uff0c\u6211\u4e0d\u662f\u7b80\u5355\u5730\u8bd5\u56fe\u8ba9\u4ed6\u4eec\u63a5\u53d7\u6211\u7684\u4ef7\u503c\u89c2\u548c\u4e16\u754c\u89c2\u3002\u201d\u628a\u65b0\u4e1c\u897f\u5e26\u5230\u4e16\u754c\u4e0a\u6765\u7684\u751f\u610f\u786e\u5b9e\u5f88\u96be\u4fc3\u6210\u3002\u201c\u3002\u4e5f\u8bb8\u4ed6\u4eec\u6210\u529f\u4e86\uff1a\u57c3\u6587\u65af\u8bb2\u8ff0\u4e86\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0c\u5176\u4ed6\u6559\u6388\u5982\u4f55\u62b1\u6028\u201c\u7b2c\u4e00\u5e74\u7684\u6559\u5b66\u65b9\u5f0f(1969\u5e74\u7684\u4e00\u6279)\u8ba9\u5b66\u751f\u65e0\u6cd5\u63a5\u53d7\u6559\u80b2\u3002\u201d\u5982\u679c\u5141\u8bb8\u6211\u4eec\u7ee7\u7eed\u4e0b\u53bb\uff0c\u6574\u4e2a\u7cfb\u90fd\u4f1a\u5145\u65a5\u7740\u65e0\u6cd5\u6559\u5bfc\u7684\u5b66\u751f\u3002\u201c\u3002\n\u4f46\u5b66\u751f\u4eec\u4ecd\u7136\u5bf9\u8fd9\u4e9b\u9650\u5236\u611f\u5230\u607c\u706b\u3002\u96d5\u5851\u5bb6\u662f\u201c\u4e0a\u4e86\u9501\u7684\u623f\u95f4\u201d\u7684\u53c2\u4e0e\u8005\u4e4b\u4e00\uff0c\u4ed6\u544a\u8bc9ARTnews\uff0c\u201c\u6211\u8ba4\u4e3a\u8fd9\u95e8\u8bfe\u7a0b\u662f\u6ee5\u7528\u7684\uff0c\u4f9d\u8d56\u4e8e\u4e00\u7fa4\u5bf9\u672a\u6765\u62b1\u6709\u8fdc\u5927\u62b1\u8d1f\u7684\u5e74\u8f7b\u5b66\u751f\u5bf9\u89c4\u5219\u7684\u5929\u771f\u63a5\u53d7\u3002\u201d\u4ed6\u63cf\u8ff0\u8bf4\uff0c\u5f53\u65f6\u6ca1\u6709\u6e05\u695a\u5730\u7406\u89e3\u8fd9\u4e00\u70b9\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6ca1\u6709\u9f13\u52b1\u5b66\u751f\u53d6\u5f97\u8fdb\u6b65\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u79bb\u5f00\u5723\u9a6c\u4e01\u65af\u65f6\uff0c\u7cbe\u529b\u548c\u7075\u611f\u90fd\u8017\u5c3d\u4e86\uff0c\u5c3d\u7ba1\u6211\u5728\u90a3\u91cc\u7684\u7b2c\u4e8c\u5e74\u53d6\u5f97\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6210\u679c\uff0c\u4ea7\u751f\u4e86\u4e00\u4e9b\u95ee\u9898\u548c\u62c5\u5fe7\uff0c\u8fd9\u4e9b\u95ee\u9898\u548c\u62c5\u5fe7\u7ee7\u7eed\u5728\u6211\u7684\u5b9e\u8df5\u4e2d\u4ea7\u751f\u53cd\u54cd\u3002\u201d\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u4ecd\u7136\u5e7f\u6cdb\u652f\u6301\u8fd9\u9879\u5b9e\u9a8c\uff0c\u7406\u7531\u662f\u5b66\u751f\u4e4b\u95f4\u7684\u201c\u975e\u51e1\u7a0b\u5ea6\u7684\u56e2\u7ed3\u201d\uff0c\u4ee5\u53ca\u4ed6\u540e\u6765\u4e0e\u4e00\u4e9b\u6559\u5e08\u5efa\u7acb\u7684\u5173\u7cfb\u3002\n\u7535\u5f71\u5236\u4f5c\u4eba\u6258\u5c3c\u00b7\u5e0c\u5c14(Tony Hill)\u8bf4\uff0c\u4ed6\u540c\u6837\u201c\u53d1\u73b0\u8fd9\u4e9b\u89c4\u5219\u8fc7\u4e8e\u4e13\u5236\u201d\uff0c\u5c3d\u7ba1\u4ed6\u56de\u5fc6\u8bf4\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4ed6\u90fd\u662f\u9075\u5faa\u8fd9\u4e9b\u89c4\u5219\u7684\u3002\u96c6\u4f53\u4e0d\u6ee1\u5bfc\u81f4\u8bfe\u7a0b\u88ab\u5206\u6210A\u6d41\u548cB\u6d41\uff0c\u5b66\u751f\u4eec\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u60f3\u5728\u7b2c\u4e8c\u5e74\u8f6c\u5411\u66f4\u4f20\u7edf\u7684\u6a21\u5f0f\uff0c\u5e0c\u5c14\u91c7\u53d6\u4e86\u8fd9\u4e00\u9009\u62e9\u3002\u4ed6\u53d1\u73b0\u5934\u51e0\u5468\u662f\u6700\u6709\u4ef7\u503c\u7684\uff0c\u4ed6\u8bf4\u201c\u9762\u5bf9\u4e00\u4efd\u6750\u6599\uff0c\u5e76\u60f3\u77e5\u9053\u5982\u4f55\u5904\u7406\u5b83\u662f\u4e00\u9879\u6709\u8da3\u7684\u521b\u9020\u6027\u6311\u6218\u201d\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u89c4\u5219\u5bf9\u5458\u5de5\u6765\u8bf4\u4f3c\u4e4e\u66f4\u50cf\u662f\u4e00\u79cd\u81ea\u8d1f\u3002\n\u4e0a\u4e86\u9501\u7684\u623f\u95f4\u4e0d\u592a\u53ef\u80fd\u5bf9\u827a\u672f\u6559\u80b2\u7684\u66f4\u5927\u8f6c\u53d8\u4ea7\u751f\u5f71\u54cd-\u4f46\u6709\u53ef\u80fd\u7684\u662f\uff0c\u968f\u7740\u5bf9Zoom\u7684\u6279\u8bc4\u6b63\u5728\u53d1\u751f\uff0c\u827a\u672f\u8bfe\u7a0b\u6b63\u5728\u8fdc\u7a0b\u6388\u8bfe\uff0c\u5b66\u751f\u4eec\u73b0\u5728\u53ef\u4ee5\u4ece\u5b83\u8eab\u4e0a\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u3002\u5e0c\u5c14\u8bf4\uff1a\u201c\u6211\u76f8\u4fe1\uff0c\u8ba9\u5b66\u751f\u5728\u5f62\u5f0f\u548c\u5185\u5bb9\u7684\u4e25\u683c\u9650\u5236\u4e0b\u4fdd\u6301\u521b\u9020\u6027\u548c\u521b\u9020\u6027\u662f\u5f88\u6709\u597d\u5904\u7684\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u4ed6\u4f7f\u7528\u201c\u4e0a\u9501\u7684\u623f\u95f4\u201d\u7684\u7ecf\u5386\u73b0\u5728\u5df2\u7ecf\u4e3a\u4ed6\u81ea\u5df1\u7684\u6559\u5b66\u5b9e\u8df5\u63d0\u4f9b\u4e86\u6307\u5bfc\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u770b\u4e0d\u51fa\u89c4\u7ba1\u5b66\u751f\u7684\u793e\u4ea4\u6d3b\u52a8\u6709\u4f55\u597d\u5904\u3002\u901a\u5e38\u5728\u827a\u672f\u5b66\u6821\uff0c\u4ed6\u4eec\u4ece\u5f7c\u6b64\u8eab\u4e0a\u5b66\u5230\u7684\u4e1c\u897f\u548c\u4ece\u6559\u804c\u5458\u5de5\u8eab\u4e0a\u5b66\u5230\u7684\u4e00\u6837\u591a\u3002", "note_en": "The first rule of the   was that you didn\u2019t talk about the Locked Room. The second was that you didn\u2019t talk to each other, or remove any material from the room or document it in any way.\n In September 1969, newly arrived first-year sculpture students at Saint Martin\u2019s School of Art in London were handed name badges and a cube of polystyrene wrapped in brown paper, and ushered inside a bolted and padlocked room. Inside, they found their names pasted at distanced intervals on the floor, along with a list of rules. Students were told that they were not allowed to leave the room between 10 a.m. and 4:30 p.m., except to fetch tools, and were silently supervised by at least one professor at all times.\n  Technically, this was an art class. But it was also a pedagogical experiment that later came to be dubbed the Locked Room. It ran for two years and was the brainchild of tutors Garth Evans, Gareth Jones, Peter Kardia, and Peter Harvey. Looked at today, it\u2019s a bizarre footnote in the annals of art history that corresponds with coronavirus-era quarantining and surveilled forms of labor.\n The project doesn\u2019t have much of a legacy, and has only recently being re-evaluated, thanks to a 2019 exhibition at London\u2019s Laure Genillard gallery and a new collection of interviews and ephemera  The Locked Room: Four Years That Shook Art and Education, 1969\u201373 (published by the MIT Press), both from curator  . But back then, it was meant as a project exploring how people might communicate with each other under controlled settings\u2014and it may well have inspired shifts in art education and art-making.\n Speaking to  ARTnews, Evans related how the project sprung out of the tutors\u2019 frustration with didactic models of teaching, the inefficacy of language, and \u201cthe incompatibility that exists between nude objects and words.\u201d\n \u201cThat led to an idea,\u201d Evans said. \u201cWhy don\u2019t we give the students material stuff and nothing else? No instructions, and let them work with that.\u201d\n During the second week, students entered the room to find it emptied of everything they had been working on. The polystyrene was replaced by a roll of Kraft paper; a large ball of string, a bag of plaster, and, later, water were also supplied. They received no indication of how long they would have each material, apart from a stopwatch, and they were given no framework explaining the project\u2019s intentions or duration. As the weeks bore on, there was no assessment or positive feedback from the experiment\u2019s facilitators, either. Any new rules arrived in the form of writing, and students were verbally admonished only for tardiness or breaking a rule.\n  Locked Room was controversial in its time. Concerned for the students\u2019 mental health, the school principal brought in a psychiatrist to evaluate the situation. But it\u2019s possible that, beyond that scandal, it was an important forerunner to a kind of conceptual art being birthed in Europe at the time. One could even say that the project prefigured artist Joseph Beuys\u2019s idea of the \u201csocial sculpture,\u201d a kind of art that was shaped equally by its creator and the people who interact with it. There\u2019s some evidence that the students even considered it a conceptual piece. During a 2010 Locked Room reunion conference, Evans said, he learned that some of the students implicitly understood the project as an artwork, although the staff did not conceive of it as such.\n  Evans wanted to work against the prevailing ethos in art schools at the time, which he described as being loose, unstructured, and unregulated. Soon after, the Coldstream reforms would dramatically overhaul British art education, moving it away from a skill-based system and creating standards to make it degree-equivalent. He also wanted to move away from a pedagogical model of transmission and replication to \u201cfind a role for myself in which I was not simply trying to get them to adopt my values and my worldview. The business of bringing something new into the world is truly difficult to contrive to facilitate.\u201d And perhaps they succeeded: Evans related how, during the next year, other professors complained that \u201cthe way [the 1969 batch] had been taught during the first year had made the students unteachable. And if we were allowed to continue, the entire department would be full of unteachable students.\u201d\n But students chafed at the restrictions all the same. Sculptor  , one of the Locked Room\u2019s participants, told  ARTnews, \u201cI thought the course was abusive and relied on the naive acceptance of the rules imposed by a group of young students with high aspirations and ambitions for the future. He described not having a clear understanding at the time what its point was and why students weren\u2019t being encouraged for progress made. \u201cI left St. Martins drained of energy and inspiration, although my second year there was incredibly fruitful and productive of issues and concerns that continue to reverberate through my practice,\u201d he said. Still, he remains broadly supportive of the experiment, citing the \u201cextraordinary degree of solidarity\u201d between the students, and the relationships he later built with some of the teaching staff.\n Filmmaker Tony Hill said he similarly \u201cfound the rules overly authoritarian,\u201d although he recalled mostly following them. Collective disgruntlement led to the course being bifurcated into A and B streams, where students were given a choice whether they wanted to shift to a more traditional model for their second year, an option Hill took. He found the first few weeks the most valuable, saying that \u201cconfronting a material and wondering what to do with it was an interesting creative challenge,\u201d even as the rules seemed to be more of a conceit for the staff.\n It\u2019s unlikely that Locked Room had an impact on larger shifts in art education\u2014but it is possible that, with critiques now taking place over Zoom and art classes being taught remotely, students could learn a lot from it right now. \u201cI believe there is great benefit to having students be inventive and creative with form and content within tight limits,\u201d Hill said, adding that his experience with the Locked Room has now informed his own teaching practice. \u201cI do not see a benefit in regulating the social interactions of students. Often in art schools, they learn as much from each other as from the staff.\u201d", "posttime": "2020-05-25 15:41:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u6539\u53d8,locked,\u5b66\u751f", "title": "1969\u5e74\u5728\u9501\u7740\u7684\u623f\u95f4\u91cc\u7684\u4e00\u6b21\u5b9e\u9a8c\u6539\u53d8\u4e86\u827a\u672f\u53f2", "title_en": "A 1969 Experiment in a Locked Room Changed Art History", "transed": 1, "url": "https://www.artnews.com/art-news/news/locked-room-experiment-art-education-1202687843/", "via": "", "real_tags": ["\u827a\u672f", "\u6539\u53d8", "locked", "\u5b66\u751f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003609, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6cd5\u56fd\u6700\u5bcc\u6709\u7684\u4eba\u4e4b\u4e00\u81ea\u79f0\u662f\u4e00\u540d\u524d\u95f4\u8c0d\uff0c\u66fe\u9ed1\u8fc7\u524d\u603b\u7edf\u5f17\u6717\u7d22\u74e6\u00b7\u5bc6\u7279\u6717(Francois Mitterrand)\u3002\n\u4e16\u754c\u62a5(Le Monde)\u7684\u4ebf\u4e07\u5bcc\u7fc1\u5171\u540c\u6240\u6709\u8005\u300152\u5c81\u7684\u6cfd\u7ef4\u5c14\u00b7\u5c3c\u5c14(Xavier Niel)\u544a\u8bc9\u8bae\u4f1a\u9891\u9053\uff0c20\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u5728\u88ab\u6293\u5230\u4fb5\u5165\u6cd5\u56fdCanal+\u9891\u9053\u540e\uff0c\u4ed6\u8fd8\u662f\u4e2a\u9752\u5c11\u5e74\uff0c\u5c31\u66fe\u5728\u9886\u571f\u76d1\u5bdf\u5c40\u5367\u5e95\u5de5\u4f5c\u3002\n\u201c\u6211\u662f\u4e00\u540d\u517c\u804c\u8bb0\u8005\uff0c\u4f1a\u5b9a\u671f\u544a\u8bc9\u4ed6\u4eec\u6211\u4eec\u5728\u9ed1\u5ba2\u4e16\u754c\u91cc\u53d1\u73b0\u4e86\u4ec0\u4e48\uff0c\u770b\u5230\u4e86\u4ec0\u4e48\uff0c\u201d\u5c3c\u5c14\u544a\u8bc9\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u5b89\u5168\u90e8\u95e8\u8981\u6c42\u4ed6\u5e2e\u52a9\u5411\u4ed6\u4eec\u89e3\u91ca\u65b0\u7684\u3001\u6280\u672f\u4e0a\u7684\u7f51\u7edc\u4e16\u754c\u3002\n\u5c3c\u5c14\u58f0\u79f0\uff0c\u4ed6\u7684\u4efb\u52a1\u662f\u57281986\u5e74\u4fb5\u5165\u5bc6\u7279\u6717\u603b\u7edf\u548c\u96f7\u8bfa\u6c7d\u8f66\u516c\u53f8\u7684\u79fb\u52a8\u7535\u8bdd\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4ed6\u53d1\u73b0\u96f7\u8bfa\u6b63\u5728\u88ab\u6765\u81ea\u6fb3\u5927\u5229\u4e9a\u7684\u4eba\u9ed1\u5ba2\u653b\u51fb\uff0c\u8fd9\u4e9b\u4eba\u6b63\u5728\u4e0b\u8f7d\u5927\u91cf\u6570\u636e\u3002\n\u5c3c\u5c14\u8bf4\uff1a\u201c\u6211\u4eec\u628a\u8fd9\u4e00\u5207\u90fd\u5f53\u4f5c\u4e00\u573a\u6e38\u620f\u6765\u505a\uff0c\u6211\u4eec\u4f1a\u628a\u4fe1\u606f\u4f20\u9012\u51fa\u53bb\u3002\u201d\u201c\u8fd9\u53ea\u662f\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u3002\u7ed5\u8fc7\u8fd9\u4e2a\u7cfb\u7edf\u662f\u4e00\u4ef6\u4ee4\u4eba\u5174\u594b\u7684\u4e8b\u3002\u4ed6\u4eec\u544a\u8bc9\u6211\u4eec\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u201c\u3002\n\u636e\u82f1\u56fd\u201c\u6bcf\u65e5\u90ae\u62a5\u201d\u62a5\u9053\uff0c\u5bc6\u7279\u6717\u603b\u7edf\u7684\u653f\u5e9c\u201c\u540e\u6765\u5377\u5165\u4e86\u4e00\u573a\u88ab\u79f0\u4e3a\u2018\u6cd5\u56fd\u6c34\u95e8\u4e8b\u4ef6\u2019\u7684\u7535\u8bdd\u7a83\u542c\u4e11\u95fb\uff0c\u4ed6\u5728\u90a3\u91cc\u7a83\u542c\u4e86\u6570\u767e\u540d\u6cd5\u56fd\u540d\u4eba\u7684\u7535\u8bdd\u3002\u201d\n\u8fd9\u4f4d\u7535\u4fe1\u5927\u4ea8\u6ca1\u6709\u900f\u9732\u4ed6\u6536\u96c6\u7684\u4fe1\u606f\u662f\u5982\u4f55\u4f7f\u7528\u7684\uff0c\u4f46\u4ed6\u6307\u51fa\uff0c\u4ed6\u60f3\u5206\u4eab\u4ed6\u5341\u51e0\u5c81\u65f6\u9ed1\u5ba2\u751f\u6daf\u7684\u7ec6\u8282\uff0c\u201c\u4f5c\u4e3a\u4eca\u5929\u7684\u5b69\u5b50\u4eec\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5411\u4ed6\u4eec\u5c55\u793a\u4f60\u5982\u4f55\u505a\u50bb\u4e8b\uff0c\u7136\u540e\u53d8\u5f97\u597d\u8d77\u6765\u3002\u201d", "note_en": "One of the richest men in France claims to be a former spy who once hacked former President Francois Mitterrand.\n The billionaire co-owner of Le Monde newspaper, Xavier Niel, 52, told the Parliamentary Channel that as a teen in the 1980s he worked undercover for the Directorate of Territorial Surveillance after he was caught hacking the French channel Canal+.\n \u201cI was a sort of part-time correspondent who would tell them regularly what we\u2019re finding, what we were seeing, in our world of hacking,\u201d Niel told the Channel, adding the security service asked him to help explain the new, technological cyber world to them\n Niel claims he was tasked with hacking into the mobile telephone of President Mitterrand in 1986 as well as the car company Renault. In the process he found that Renault was being hacked by people from Australia who were downloading large chunks of data.\n \u201cWe were doing all this for ourselves as a game and we would pass on the information,\u201d Niel said. \u201cIt was just fun. It was thrilling to get around the system. They told us it was impossible.\u201d\n President Mitterrand\u2019s administration was \u201clater caught up in a phone hacking scandal dubbed the \u2018French Watergate\u2019 where he had the phones of hundreds of French personalities tapped,\u201d  according to the Daily Mail.\n The telecommunications tycoon didn\u2019t say how the information he gathered was used, but noted that he wanted to share details about his teenage hacking years \u201cas an example for kids today to show how you can do silly things and come good.\u201d", "posttime": "2020-05-25 14:35:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,niel,xavier,\u544a\u8bc9", "title": "\u5927\u4ea8\u6cfd\u7ef4\u5c14\u00b7\u5c3c\u5c14(Xavier Niel)\u8868\u793a\uff0c\u4ed6\u662f\u9ed1\u5ba2\u653b\u51fb\u6cd5\u56fd\u524d\u603b\u7edf\u7684\u95f4\u8c0d", "title_en": "Tycoon Xavier Niel says he was spy who hacked ex-French president", "transed": 1, "url": "https://nypost.com/2020/05/23/tycoon-xavier-niel-says-he-was-spy-who-hacked-ex-french-president/", "via": "", "real_tags": ["\u9ed1\u5ba2", "niel", "xavier", "\u544a\u8bc9"]}]