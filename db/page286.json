[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1002457, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u8fd8\u8bb0\u5f97\u5b89\u683c\u65af\u00b7\u9ea6\u51ef\u5f17(Angus&34\uff1bMac&34\uff1bMacGyver)\u5417\uff1f\u8fd9\u4f4d80\u5e74\u4ee3/90\u5e74\u4ee3\u9887\u53d7\u6b22\u8fce\u7684\u7535\u89c6\u5267\u7684\u4e3b\u4eba\u516c\u5b89\u683c\u65af\u00b7\u9ea6\u76d6\u5f17(Angus&34\uff1bMac&34\uff1bMacGyver)\u603b\u662f\u5bcc\u6709\u521b\u9020\u529b\uff0c\u4ed6\u53ea\u9700\u4e00\u628a\u745e\u58eb\u519b\u5200\u3001\u80f6\u5e26\u3001\u978b\u5e26\u548c\u56de\u5f62\u9488\u5c31\u80fd\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\nKafka Connect\u7684\u5355\u6d88\u606f\u8f6c\u6362(SMT)\u51e0\u4e4e\u548cMacGyver\u7684\u745e\u58eb\u519b\u5200\u4e00\u6837\u591a\u624d\u591a\u827a\uff1a\nSMT\u53ef\u4ee5\u662fKafka Connection\u4e0a\u4e0b\u6587\u4e2d\u51fa\u73b0\u7684\u8fd9\u4e9b\u548c\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u7528\u4e8e\u6e90\u8fde\u63a5\u5668\u6216\u5bbf\u8fde\u63a5\u5668\uff0cSMT\u5141\u8bb8\u5206\u522b\u5728\u5c06Kafka\u8bb0\u5f55\u53d1\u9001\u5230Kafka\u4e4b\u524d\u6216\u5728\u4ece\u4e3b\u9898\u4e2d\u4f7f\u7528\u5b83\u4eec\u4e4b\u540e\u4fee\u6539Kafka\u8bb0\u5f55\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0bSMT\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u7528\u6cd5(\u5e0c\u671b\u4e0d\u7ba1\u600e\u6837)\u3002\u8fd9\u4e9b\u7528\u4f8b\u5927\u591a\u57fa\u4e8e\u6211\u4f7f\u7528Kafka Connect\u548cDebezium\u7684\u7ecf\u9a8c\uff0cDebezium\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53d8\u66f4\u6570\u636e\u6355\u83b7(CDC)\u5e73\u53f0\u3002\u4e0d\u4e45\u524d\uff0c\u5f53\u6211\u5728Twitter\u4e0a\u8be2\u95ee\u793e\u533a\u6709\u5173\u8fd9\u65b9\u9762\u7684\u95ee\u9898\u65f6\uff0c\u6211\u4e5f\u5f97\u5230\u4e86\u4e00\u4e9b\u5173\u4e8eSMT\u7528\u6cd5\u7684\u5f88\u597d\u7684\u5efa\u8bae\uff1a\n\u6211\u7edd\u5bf9\u63a8\u8350\u53bb\u770b\u770b\u8fd9\u4e2a\u5e16\u5b50\uff1b\u975e\u5e38\u611f\u8c22\u6240\u6709\u56de\u590d\u7684\u4eba\uff01\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSMT\u7684\u4e00\u822c\u77e5\u8bc6\uff0c\u5982\u4f55\u914d\u7f6e\u5b83\u4eec\u7b49\uff0c\u8bf7\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\u6700\u540e\u7ed9\u51fa\u7684\u8d44\u6e90\u3002\n\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u7528\u4f8b\uff0c\u6211\u8fd8\u8be2\u95ee\u4e86\u6211\u4eec\u5bcc\u6709\u540c\u60c5\u5fc3\u7684\u7535\u89c6\u82f1\u96c4\u5bf9SMT\u5bf9HAND\u4efb\u52a1\u7684\u6709\u7528\u6027\u7684\u770b\u6cd5\u3002\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e2a\u90e8\u5206\u7684\u672b\u5c3e\u627e\u5230\u4ed6\u7684\u8bc4\u7ea7\uff0c\u4ece\ud83d\udcce(\u4e0d\u9002\u5408)\u5230\ud83d\udcce(\u975e\u5e38\u9002\u5408)\u3002\nSMTS\u6700\u5e38\u89c1\u7684\u5e94\u7528\u53ef\u80fd\u662f\u683c\u5f0f\u8f6c\u6362\uff0c\u5373\u8c03\u6574\u6570\u636e\u7684\u7c7b\u578b\u3001\u683c\u5f0f\u548c\u8868\u793a\u5f62\u5f0f\u3002\u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u6574\u4e2a\u6d88\u606f\uff0c\u4e5f\u53ef\u80fd\u9002\u7528\u4e8e\u7279\u5b9a\u7684\u6d88\u606f\u5c5e\u6027\u3002\u8ba9\u6211\u4eec\u9996\u5148\u770b\u51e0\u4e2a\u8f6c\u6362\u5355\u4e2a\u6d88\u606f\u5c5e\u6027\u683c\u5f0f\u7684\u793a\u4f8b\uff1a\n\u65f6\u95f4\u6233\uff1a\u4e0d\u540c\u7684\u7cfb\u7edf\u5f80\u5f80\u5bf9\u5982\u4f55\u952e\u5165\u548c\u683c\u5f0f\u5316\u65f6\u95f4\u6233\u6709\u4e0d\u540c\u7684\u5047\u8bbe\u3002\u4f8b\u5982\uff0cDebezium\u5c06\u5927\u591a\u6570\u65f6\u95f4\u5217\u7c7b\u578b\u8868\u793a\u4e3a\u81ea\u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u3002\u53e6\u4e00\u65b9\u9762\uff0cChange\u4e8b\u4ef6\u4f7f\u7528\u8005\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528Kafka Connect\u7684Date\u7c7b\u578b\u6216ISO-8601\u683c\u5f0f\u7684\u5b57\u7b26\u4e32(\u53ef\u80fd\u4f7f\u7528\u7279\u5b9a\u65f6\u533a)\u83b7\u5f97\u8fd9\u6837\u7684\u65e5\u671f\u548c\u65f6\u95f4\u503c\n\u503c\u5c4f\u853d\uff1a\u654f\u611f\u6570\u636e\u53ef\u80fd\u9700\u8981\u5c4f\u853d\u6216\u622a\u65ad\uff0c\u6216\u8005\u751a\u81f3\u5e94\u8be5\u5b8c\u5168\u5220\u9664\u7279\u5b9a\u5b57\u6bb5\uff1b\u968fKafka Connect\u4e00\u8d77\u63d0\u4f9b\u7684org.apache.kafka.connect.transs.MaskField\u548cReplaceField SMT\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u6709\u7528\u3002\n\u6570\u5b57\u7c7b\u578b\uff1a\u4e0e\u65f6\u95f4\u6233\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7cfb\u7edf\u5bf9(\u5c0f\u6570)\u6570\u5b57\u8868\u793a\u7684\u8981\u6c42\u53ef\u80fd\u4e0d\u540c\uff1b\u4f8b\u5982\uff0cKafka Connect\u7684Decimal\u7c7b\u578b\u5141\u8bb8\u4f20\u9012\u4efb\u610f\u7cbe\u5ea6\u7684\u5c0f\u6570\uff0c\u4f46\u5176\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ef\u80fd\u4e0d\u53d7\u6240\u6709\u63a5\u6536\u5668\u8fde\u63a5\u5668\u548c\u6d88\u8d39\u8005\u7684\u652f\u6301\u3002\n\u540d\u79f0\u8c03\u6574\uff1a\u6839\u636e\u6240\u9009\u7684\u5e8f\u5217\u5316\u683c\u5f0f\uff0c\u53ef\u80fd\u4e0d\u652f\u6301\u7279\u5b9a\u7684\u5b57\u6bb5\u540d\u79f0\uff1b\u4f8b\u5982\uff0c\u5728\u4f7f\u7528Apache Avro\u65f6\uff0c\u5b57\u6bb5\u540d\u79f0\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002\n\u5728\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u73b0\u6210SMT\u6216\u5b9a\u5236\u5b9e\u73b0\u6765\u5e94\u7528\u6240\u9700\u7684\u5c5e\u6027\u7c7b\u578b\u548c/\u6216\u683c\u5f0f\u8f6c\u6362\u3002\n\u5f53\u4f7f\u7528Kafka Connect\u5c06\u9057\u7559\u670d\u52a1\u548c\u6570\u636e\u5e93\u4e0e\u65b0\u5efa\u7684\u5fae\u670d\u52a1\u96c6\u6210\u65f6\uff0c\u8fd9\u6837\u7684\u683c\u5f0f\u8f6c\u6362\u53ef\u4ee5\u5728\u521b\u5efa\u53cd\u8150\u8d25\u5c42\u65b9\u9762\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff1a\u901a\u8fc7\u4f7f\u7528\u66f4\u597d\u7684\u5b57\u6bb5\u540d\u79f0\u3001\u9009\u62e9\u66f4\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\u6216\u5220\u9664\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\uff0cSMT\u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u65b0\u670d\u52a1\u7684\u6a21\u578b\u4e0d\u53d7\u9057\u7559\u4e16\u754c\u7684\u53e4\u602a\u548c\u602a\u7656\u7684\u5f71\u54cd\u3002\n\u4f46\u662fSMT\u4e0d\u80fd\u53ea\u4fee\u6539\u5355\u4e2a\u5b57\u6bb5\u7684\u8868\u793a\uff0c\u8fd8\u53ef\u4ee5\u8c03\u6574\u6574\u4e2a\u6d88\u606f\u7684\u683c\u5f0f\u548c\u7ed3\u6784\u3002Kafka Connect\u7684ExtractField\u8f6c\u6362\u5141\u8bb8\u4ece\u6d88\u606f\u4e2d\u63d0\u53d6\u5355\u4e2a\u5b57\u6bb5\u5e76\u4f20\u64ad\u8be5\u5b57\u6bb5\u3002\u4e00\u4e2a\u76f8\u5173\u7684SMT\u662fDebezium\u7528\u4e8e\u66f4\u6539\u4e8b\u4ef6\u6241\u5e73\u5316\u7684SMT\u3002\u5b83\u53ef\u7528\u4e8e\u5c06\u590d\u6742\u7684Debezium\u66f4\u6539\u4e8b\u4ef6\u7ed3\u6784(\u5177\u6709\u65b0\u65e7\u884c\u72b6\u6001\u3001\u5143\u6570\u636e\u7b49)\u8f6c\u6362\u4e3a\u53ef\u7531\u8bb8\u591a\u73b0\u6709\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4f7f\u7528\u7684\u5e73\u9762\u884c\u8868\u793a\u5f62\u5f0f\u3002\nSMT\u8fd8\u5141\u8bb8\u5fae\u8c03\u6a21\u5f0f\u547d\u540d\u7a7a\u95f4\uff1b\u5f53\u4f7f\u7528\u6a21\u5f0f\u6ce8\u518c\u8868\u6765\u7ba1\u7406\u6a21\u5f0f\u53ca\u5176\u7248\u672c\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f88\u6709\u610f\u4e49\uff0c\u5e76\u4e14\u5e94\u8be5\u4e3a\u7ed9\u5b9a\u4e3b\u9898\u7684\u6d88\u606f\u5f3a\u5236\u4f7f\u7528\u7279\u5b9a\u7684\u6a21\u5f0f\u547d\u540d\u7a7a\u95f4\u3002\u8fd9\u4e00\u7c7b\u522b\u4e2d\u7684\u53e6\u5916\u4e24\u4e2a\u975e\u5e38\u6709\u7528\u7684SMT\u793a\u4f8b\u662fJeremy Cutenborde\u7684Kafka-connect-Transform-xml\u548ckafka-connect-json-schema\uff0c\u5b83\u5c06\u83b7\u53d6XML\u6216\u6587\u672c\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684XML\u6a21\u5f0f\u6216JSON\u751f\u6210\u7c7b\u578b\u5316\u7684Kafka Connect Struct\u3002\n\u6700\u540e\uff0c\u4f5c\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u683c\u5f0f\u8f6c\u6362\uff0cSMT\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u6216\u8bbe\u7f6eKafka\u8bb0\u5f55\u7684\u952e\u3002\u5982\u679c\u6e90\u8fde\u63a5\u5668\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u6709\u610f\u4e49\u7684\u952e\uff0c\u4f46\u53ef\u4ee5\u4ece\u8bb0\u5f55\u503c\u4e2d\u63d0\u53d6\u4e00\u4e2a\u952e\uff0c\u8fd9\u53ef\u80fd\u662f\u7406\u60f3\u7684\u3002\u6b64\u5916\uff0c\u5728\u8003\u8651\u540e\u7eed\u6d41\u5904\u7406\u65f6\uff0c\u66f4\u6539\u6d88\u606f\u952e\u4e5f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5728\u6e90\u7aef\u9009\u62e9\u5339\u914d\u7684\u952e\u5141\u8bb8\u901a\u8fc7Kafka\u6d41\u8fde\u63a5\u591a\u4e2a\u4e3b\u9898\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u8bb0\u5f55\u7684\u952e\u3002\nMac\u8bc4\u7ea7\uff1a*\ud83d\udcce+SMT\u662f\u8fdb\u884c\u5361\u592b\u5361\u8fde\u63a5\u8bb0\u5f55\u683c\u5f0f\u8f6c\u6362\u7684\u5b8c\u7f8e\u5de5\u5177\u3002\n\u5bf9Kafka\u8bb0\u5f55\u6a21\u5f0f\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u5bf9\u6d88\u8d39\u8005\u9020\u6210\u6f5c\u5728\u7684\u7834\u574f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bb0\u5f55\u5b57\u6bb5\u88ab\u91cd\u547d\u540d\uff0c\u6d88\u8d39\u8005\u5fc5\u987b\u76f8\u5e94\u5730\u8fdb\u884c\u8c03\u6574\uff0c\u4f7f\u7528\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u8bfb\u53d6\u503c\u3002\u5982\u679c\u5b57\u6bb5\u88ab\u5b8c\u5168\u5220\u9664\uff0c\u6d88\u8d39\u8005\u4e0d\u80fd\u518d\u671f\u5f85\u6b64\u5b57\u6bb5\u3002\n\u6d88\u606f\u8f6c\u6362\u53ef\u4ee5\u5e2e\u52a9\u5b9e\u73b0\u4ece\u4e00\u4e2a\u6a21\u5f0f\u7248\u672c\u5230\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u7248\u672c\u7684\u8fd9\u79cd\u8f6c\u6362\uff0c\u4ece\u800c\u51cf\u5c11\u6d88\u606f\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u751f\u547d\u5468\u671f\u7684\u8026\u5408\u3002\u5728\u91cd\u547d\u540d\u5b57\u6bb5\u7684\u60c5\u51b5\u4e0b\uff0cSMT\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u540d\u79f0\u518d\u6b21\u6dfb\u52a0\u8be5\u5b57\u6bb5\u3002\u8fd9\u5c06\u5141\u8bb8\u6d88\u8d39\u8005\u7ee7\u7eed\u4f7f\u7528\u65e7\u540d\u79f0\u8bfb\u53d6\u8be5\u5b57\u6bb5\uff0c\u5e76\u4e14\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u901f\u5ea6\u5347\u7ea7\u4e3a\u4f7f\u7528\u65b0\u540d\u79f0\u3002\u5728\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u4e00\u65e6\u6240\u6709\u6d88\u8d39\u8005\u90fd\u5df2\u88ab\u8c03\u6574\uff0c\u5219SMT\u53ef\u4ee5\u518d\u6b21\u88ab\u79fb\u9664\uff0c\u53ea\u66b4\u9732\u51fa\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u5f53\u6240\u6709\u6d88\u8d39\u8005\u90fd\u88ab\u8c03\u6574\u4e4b\u540e\uff0cSMT\u53ef\u4ee5\u518d\u6b21\u88ab\u79fb\u9664\uff0c\u53ea\u66b4\u9732\u65b0\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u7c7b\u4f3c\u5730\uff0c\u4e00\u4e2a\u3002\u4f8b\u5982\u4f7f\u7528\u67d0\u79cd\u6052\u5b9a\u7684\u5360\u4f4d\u7b26\u503c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4ece\u5176\u4ed6\u4ecd\u7136\u5b58\u5728\u7684\u5b57\u6bb5\u5bfc\u51fa\u8be5\u5b57\u6bb5\u503c\u3002\u7136\u540e\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u81ea\u5df1\u7684\u901f\u5ea6\u88ab\u66f4\u65b0\u4ee5\u4e0d\u518d\u671f\u671b\u548c\u8bbf\u95ee\u8be5\u5b57\u6bb5\u3002\n\u4f46\u662f\u5e94\u8be5\u8bf4\uff0c\u8fd9\u79cd\u4f7f\u7528\u662f\u6709\u9650\u5236\u7684\uff1a\u4f8b\u5982\uff0c\u5f53\u6539\u53d8\u5b57\u6bb5\u7684\u7c7b\u578b\u65f6\uff0c\u4e8b\u60c5\u5f88\u5feb\u53d8\u5f97\u68d8\u624b\u3002\u4e00\u79cd\u9009\u62e9\u53ef\u4ee5\u662f\u591a\u6b65\u9aa4\u65b9\u6cd5\uff0c\u5176\u4e2d\u9996\u5148\u6dfb\u52a0\u5177\u6709\u65b0\u7c7b\u578b\u7684\u5355\u72ec\u5b57\u6bb5\uff0c\u7136\u540e\u5982\u4e0a\u6240\u8ff0\u518d\u6b21\u91cd\u547d\u540d\u5b83\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0cSMT\u4e3b\u8981\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u56f4\u7ed5\u6a21\u5f0f\u6f14\u53d8\u7684\u57fa\u672c\u517c\u5bb9\u6027\u95ee\u9898\u3002\n\u5728\u6e90\u7aef\u5e94\u7528\u65f6\uff0cSMT\u5141\u8bb8\u8fc7\u6ee4\u51fa\u8fde\u63a5\u5668\u751f\u6210\u7684\u7279\u5b9a\u8bb0\u5f55\u3002\u5b83\u4eec\u8fd8\u53ef\u7528\u4e8e\u63a7\u5236\u8bb0\u5f55\u53d1\u9001\u5230\u7684Kafka\u4e3b\u9898\u3002\u5f53\u8fc7\u6ee4\u548c\u8def\u7531\u57fa\u4e8e\u5b9e\u9645\u8bb0\u5f55\u5185\u5bb9\u65f6\uff0c\u8fd9\u5c24\u5176\u6709\u8da3\u3002\u4f8b\u5982\uff0c\u5728\u4f7f\u7528Kafka Connect\u4ece\u67d0\u79cd\u4f20\u611f\u5668\u83b7\u53d6\u6570\u636e\u7684\u7269\u8054\u7f51\u65b9\u6848\u4e2d\uff0cSMT\u53ef\u7528\u4e8e\u8fc7\u6ee4\u6389\u4f4e\u4e8e\u7279\u5b9a\u9608\u503c\u7684\u6240\u6709\u4f20\u611f\u5668\u6d4b\u91cf\u7ed3\u679c\uff0c\u6216\u5c06\u9ad8\u4e8e\u9608\u503c\u7684\u6d4b\u91cf\u4e8b\u4ef6\u8def\u7531\u5230\u7279\u5b9a\u4e3b\u9898\u3002\n\u903b\u8f91\u4e3b\u9898Routing SMT\u5141\u8bb8\u5c06\u6e90\u81ea\u591a\u4e2a\u8868\u7684\u66f4\u6539\u4e8b\u4ef6\u53d1\u9001\u5230\u540c\u4e00Kafka\u4e3b\u9898\uff0c\u8fd9\u5728\u5904\u7406Postgres\u4e2d\u7684\u5206\u533a\u8868\u6216\u5904\u7406\u5206\u7247\u5230\u591a\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\u975e\u5e38\u6709\u7528\u3002\nFilter\u548cContentBasedRouter SMT\u5141\u8bb8\u60a8\u4f7f\u7528Groovy\u6216JavaScript\u7b49\u8bed\u8a00\u4e2d\u7684\u811a\u672c\u8868\u8fbe\u5f0f\uff0c\u6839\u636e\u66f4\u6539\u4e8b\u4ef6\u7684\u5185\u5bb9\u8fc7\u6ee4\u548c\u8def\u7531\u66f4\u6539\u4e8b\u4ef6\uff1b\u8fd9\u79cd\u57fa\u4e8e\u811a\u672c\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u6613\u7528\u6027(\u6ca1\u6709Java\u4ee3\u7801\u5fc5\u987b\u7f16\u8bd1\u548c\u90e8\u7f72\u5230Kafka Connect)\u548c\u8868\u73b0\u529b\u4e4b\u95f4\u6709\u8da3\u7684\u4e2d\u95f4\u5730\u5e26\uff1b\u4f8b\u5982\uff0c\u8def\u7531SMT\u5982\u4f55\u4e0eGraalVM\u7684JavaScript\u5f15\u64ce\u4e00\u8d77\u4f7f\u7528\uff0c\u6839\u636e\u8ba2\u5355\u7c7b\u578b\u5c06\u66f4\u6539\u4e8b\u4ef6\u4ece\u5305\u542b\u91c7\u8d2d\u8ba2\u5355\u7684\u8868\u8def\u7531\u5230Kafka\u4e2d\u7684\u4e0d\u540c\u4e3b\u9898\uff1a\n\u53d1\u4ef6\u7bb1\u4e8b\u4ef6\u8def\u7531\u5668\u5728\u5b9e\u73b0\u5fae\u670d\u52a1\u4e4b\u95f4\u6570\u636e\u4f20\u64ad\u7684\u4e8b\u52a1\u53d1\u4ef6\u7bb1\u6a21\u5f0f\u65f6\u975e\u5e38\u65b9\u4fbf\uff1a\u5b83\u53ef\u4ee5\u7528\u4e8e\u5c06\u6e90\u81ea\u5355\u4e2a\u53d1\u4ef6\u7bb1\u8868\u7684\u4e8b\u4ef6\u53d1\u9001\u5230\u6bcf\u4e2a\u805a\u5408(\u5f53\u8003\u8651\u57df\u9a71\u52a8\u8bbe\u8ba1\u65f6)\u6216\u4e8b\u4ef6\u7c7b\u578b\u7684\u7279\u5b9aKafka\u4e3b\u9898\u3002\n\u5728Kafka Connect\u672c\u8eab\u4e2d\u8fd8\u6709\u4e24\u4e2a\u7528\u4e8e\u8def\u7531\u7684SMT\uff1aRegexRouter\uff0c\u5b83\u5141\u8bb8\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u91cd\u65b0\u8def\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u4e3b\u9898\uff1b\u4ee5\u53caTimestampRouter\uff0c\u7528\u4e8e\u6839\u636e\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\u786e\u5b9a\u4e3b\u9898\u540d\u79f0\u3002\n\u867d\u7136\u8def\u7531SMT\u901a\u5e38\u5e94\u7528\u4e8e\u6e90\u8fde\u63a5\u5668(\u5b9a\u4e49\u8bb0\u5f55\u53d1\u9001\u5230\u7684Kafka\u4e3b\u9898)\uff0c\u4f46\u5c06\u5b83\u4eec\u4e0e\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4e00\u8d77\u4f7f\u7528\u4e5f\u662f\u6709\u610f\u4e49\u7684\u3002\u5f53\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4ece\u4e3b\u9898\u540d\u79f0\u6d3e\u751f\u4e0b\u6e38\u8868\u540d\u3001\u7d22\u5f15\u540d\u6216\u7c7b\u4f3c\u540d\u79f0\u65f6\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0c\u6d88\u606f\u8fc7\u6ee4\u548c\u4e3b\u9898\u8def\u7531\u2009-\u2009\u5bf9SMT\u6ca1\u6709\u95ee\u9898\u3002\n\u5893\u7891\u8bb0\u5f55\u662f\u7a7a\u503c\u7684Kafka\u8bb0\u5f55\uff0c\u5b83\u4eec\u5728\u5904\u7406\u538b\u7f29\u4e3b\u9898\u65f6\u5177\u6709\u7279\u6b8a\u7684\u8bed\u4e49\uff1a\u5728\u65e5\u5fd7\u538b\u7f29\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u4e0e\u5893\u7891\u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5173\u952e\u5b57\u7684\u8bb0\u5f55\u90fd\u5c06\u4ece\u4e3b\u9898\u4e2d\u79fb\u9664\u3002\n\u5728\u538b\u7f29\u53d1\u751f\u4e4b\u524d\uff0c\u5893\u7891\u5c06\u5728\u4e3b\u9898\u4e0a\u4fdd\u7559\u4e00\u6bb5\u53ef\u914d\u7f6e\u7684\u65f6\u95f4(\u901a\u8fc7delete.retention.ms\u4e3b\u9898\u8bbe\u7f6e\u8fdb\u884c\u63a7\u5236)\uff0c\u8fd9\u610f\u5473\u7740Kafka Connect\u63a5\u6536\u5668\u8fde\u63a5\u5668\u4e5f\u9700\u8981\u5904\u7406\u5b83\u4eec\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8fde\u63a5\u5668\u90fd\u4e3anull\u503c\u7684\u8bb0\u5f55\u505a\u597d\u4e86\u51c6\u5907\uff0c\u901a\u5e38\u4f1a\u5bfc\u81f4NullPointerException\u548c\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u8fd9\u6837\u7684\u8fc7\u6ee4SMT\u6765\u5220\u9664\u5893\u7891\u8bb0\u5f55\u3002\n\u73b0\u5728\uff0c\u5f53\u4f7f\u7528\u50cfDebezium\u8fd9\u6837\u7684\u2009-\u2009\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6(\u5373\uff0c\u4e0d\u7269\u7406\u5730\u5220\u9664\u8bb0\u5f55\uff0c\u4f46\u662f\u5728\u5220\u9664\u8bb0\u5f55\u65f6\u5c06\u903b\u8f91\u5220\u9664\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u771f)\uff0c\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684)\u3002\u73b0\u5728\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982Debezium\u7684\u2009-\u2009\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6\uff0c\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684)\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982Debezium\u8fd9\u6837\u7684CDC\u8fde\u63a5\u5668\u6765\u4ece\u4f7f\u7528\u8f6f\u5220\u9664\u7684\u6570\u636e\u5e93\u6355\u83b7\u66f4\u6539\u65f6(\u5373\uff0c\u6ca1\u6709\u7269\u7406\u5220\u9664\u8bb0\u5f55\uff0c\u4f46\u662f\u5728\u5220\u9664\u8bb0\u5f55\u65f6\u5c06\u903b\u8f91\u5220\u9664\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u771f)\uff0c\u5219\u8fd9\u4e9b\u66f4\u6539\u4e8b\u4ef6\u5c06\u88ab\u5bfc\u51fa\u4e3a\u66f4\u65b0\u4e8b\u4ef6(\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u8fd9\u6837\u7684\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8868\u793a\uff0cSMT\u5728\u4e22\u5f03\u5893\u7891\u6216\u5c06\u8f6f\u5220\u9664\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u5893\u7891\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4e0d\u8fc7\uff0c\u4e0d\u53ef\u80fd\u5728\u4fdd\u7559\u539f\u59cb\u4e8b\u4ef6\u7684\u540c\u65f6\u751f\u6210\u989d\u5916\u7684\u5893\u7891\u8bb0\u5f55\n\u751a\u81f3\u4e00\u4e9b\u9ad8\u7ea7\u7684\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u5728SMT\u7684\u5e2e\u52a9\u4e0b\u5b9e\u73b0\uff0c\u7d22\u8d54\u68c0\u67e5\u6a21\u5f0f\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u6b64\u6a21\u5f0f\u5728\u5982\u4e0b\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\uff1a\n\u6d88\u606f\u53ef\u80fd\u5305\u542b\u6d88\u606f\u6d41\u7a0d\u540e\u53ef\u80fd\u9700\u8981\u7684\u4e00\u7ec4\u6570\u636e\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u4e2d\u95f4\u5904\u7406\u6b65\u9aa4\u90fd\u9700\u8981\u8fd9\u4e9b\u6570\u636e\u9879\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u60f3\u5728\u6bcf\u4e2a\u5904\u7406\u6b65\u9aa4\u4e2d\u643a\u5e26\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u5e76\u4e14\u56e0\u4e3a\u6211\u4eec\u643a\u5e26\u4e86\u5982\u6b64\u591a\u7684\u989d\u5916\u6570\u636e\u800c\u4f7f\u8c03\u8bd5\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u662f\u4ece\u6570\u636e\u5e93\u8868USERS\u6355\u83b7\u66f4\u6539\u7684CDC\u8fde\u63a5\u5668\uff0c\u5b83\u5177\u6709\u4e00\u4e2a\u5305\u542b\u7528\u6237\u4e2a\u4eba\u8d44\u6599\u56fe\u7247\u7684BLOB\u5217(\u5f53\u7136\u4e0d\u662f\u6700\u4f73\u5b9e\u8df5\uff0c\u5728\u73b0\u5b9e\u2026\u4e2d\u4ecd\u7136\u4e0d\u662f\u90a3\u4e48\u5c11\u89c1\u3002\u200b)\u3002\nApache Kafka\u4e0d\u9002\u7528\u4e8e\u5927\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u6d88\u606f\u5927\u5c0f\u4e3a1 MB\uff0c\u867d\u7136\u8fd9\u4e2a\u5927\u5c0f\u53ef\u4ee5\u589e\u52a0\uff0c\u4f46\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\uff0c\u5c0f\u5f97\u591a\u7684\u6d88\u606f\u5177\u6709\u6700\u4f73\u541e\u5410\u91cf\u3002\u56e0\u6b64\uff0c\u5206\u5757\u548c\u5916\u90e8\u5316\u5927\u6709\u6548\u8d1f\u8f7d\u7b49\u7b56\u7565\u5bf9\u4e8e\u786e\u4fdd\u4ee4\u4eba\u6ee1\u610f\u7684\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\n\u5c06\u66f4\u6539\u6570\u636e\u4e8b\u4ef6\u4ece\u8be5\u8868\u4f20\u64ad\u5230Apache Kafka\u65f6\uff0c\u5c06\u56fe\u7247\u6570\u636e\u6dfb\u52a0\u5230\u6bcf\u4e2a\u4e8b\u4ef6\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u5f00\u9500\uff0c\u7279\u522b\u662f\u5982\u679c\u56fe\u7247blob\u5728\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u6839\u672c\u6ca1\u6709\u66f4\u6539\u3002\n\u4f7f\u7528SMT\uff0cBLOB\u6570\u636e\u53ef\u4ee5\u5916\u90e8\u5316\u5230\u5176\u4ed6\u5b58\u50a8\u3002\u5728\u6e90\u7aef\uff0cSMT\u53ef\u4ee5\u4ece\u539f\u59cb\u8bb0\u5f55\u63d0\u53d6\u56fe\u50cf\u6570\u636e\uff0c\u4f8b\u5982\u5c06\u5176\u5199\u5165\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u6216Amazon S3\u5b58\u50a8\u6876\u3002\u8bb0\u5f55\u4e2d\u7684\u76f8\u5e94\u5b57\u6bb5\u5c06\u66f4\u65b0\uff0c\u4ee5\u4fbf\u4ec5\u5305\u542b\u5916\u90e8\u5316\u6709\u6548\u8d1f\u8f7d\u7684\u552f\u4e00\u5730\u5740\uff0c\u5982S3\u5b58\u50a8\u6876\u540d\u79f0\u548c\u6587\u4ef6\u8def\u5f84\uff1a\n\u4f5c\u4e3a\u4f18\u5316\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u5916\u90e8\u5316\u6587\u4ef6\u7684\u65e9\u671f\u6563\u5217\u548c\u5f53\u524d\u6563\u5217\u6765\u907f\u514d\u518d\u6b21\u91cd\u65b0\u4e0a\u4f20\u672a\u6539\u53d8\u7684\u6587\u4ef6\u5185\u5bb9\u3002\n\u5e94\u7528\u4e8e\u63a5\u6536\u5668\u8fde\u63a5\u5668\u7684\u76f8\u5e94SMT\u5b9e\u4f8b\u5c06\u4ece\u4f20\u5165\u8bb0\u5f55\u4e2d\u68c0\u7d22\u5916\u90e8\u5316\u6587\u4ef6\u7684\u6807\u8bc6\u7b26\uff0c\u4ece\u5916\u90e8\u5b58\u50a8\u5668\u83b7\u53d6\u5185\u5bb9\uff0c\u5e76\u5728\u5c06\u5176\u4f20\u9012\u5230\u8fde\u63a5\u5668\u4e4b\u524d\u5c06\u5176\u653e\u56de\u8bb0\u5f55\u4e2d\u3002\nMac\u7684\u8bc4\u7ea7\uff1a\ud83d\udcce\u8ba4\u4e3aSMT\u53ef\u4ee5\u5e2e\u52a9\u5c06\u6709\u6548\u8f7d\u8377\u5916\u90e8\u5316\uff0c\u907f\u514d\u5927\u91cf\u7684\u5361\u592b\u5361\u8bb0\u5f55\u3002\u4e0d\u8fc7\uff0c\u4f9d\u8d56\u53e6\u4e00\u9879\u670d\u52a1\u4f1a\u589e\u52a0\u6574\u4f53\u590d\u6742\u6027\u3002\n\u6b63\u5982\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u7684\uff0c\u5355\u4e00\u6d88\u606f\u8f6c\u6362\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3Kafka Connection\u7528\u6237\u901a\u5e38\u63d0\u51fa\u7684\u76f8\u5f53\u591a\u7684\u8981\u6c42\u3002\u4f46\u4e5f\u6709\u5c40\u9650\u6027\uff1b\u5c31\u50cfMacGyver\u4e00\u6837\uff0c\u9664\u4e86\u4ed6\u5fc3\u7231\u7684\u745e\u58eb\u519b\u5200\u4e4b\u5916\uff0c\u6709\u65f6\u8fd8\u5fc5\u987b\u4f7f\u7528\u5176\u4ed6\u5de5\u5177\uff0c\u60a8\u4e0d\u5e94\u8be5\u4e00\u76f4\u8ba4\u4e3aSMT\u662f\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6700\u5927\u7684\u7f3a\u70b9\u5df2\u7ecf\u5728\u5b83\u4eec\u7684\u540d\u5b57\u4e2d\u88ab\u6697\u793a\u4e86\uff1aSMT\u53ea\u80fd\u7528\u6765\u5904\u7406\u5355\u4e2a\u8bb0\u5f55\uff0c\u4e00\u6b21\u53ea\u80fd\u5904\u7406\u4e00\u4e2a\u8bb0\u5f55\u3002\u60a8\u4e0d\u80fd\u4f7f\u7528SMT\u5c06\u4e00\u6761\u8bb0\u5f55\u5206\u5272\u4e3a\u591a\u6761\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5b83\u4eec\u6700\u591a\u53ea\u80fd\u8fd4\u56de\u4e00\u6761\u8bb0\u5f55\u3002\u6b64\u5916\uff0c\u4efb\u4f55\u7c7b\u578b\u7684\u72b6\u6001\u5904\u7406(\u5982\u805a\u5408\u591a\u6761\u8bb0\u5f55\u4e2d\u7684\u6570\u636e\u6216\u5173\u8054\u591a\u4e2a\u4e3b\u9898\u4e2d\u7684\u8bb0\u5f55)\u90fd\u662fSMT\u7684\u7981\u533a\u3002\u5bf9\u4e8e\u6b64\u7c7b\u7528\u4f8b\uff0c\u60a8\u5e94\u8be5\u8003\u8651Kafka Streams\u548cApache Flink\u7b49\u6d41\u5904\u7406\u6280\u672f\uff1b\u6b64\u5916\uff0cApache Camel\u7b49\u96c6\u6210\u6280\u672f\u5728\u6b64\u4e5f\u975e\u5e38\u6709\u7528\u3002\n\u5728\u4f7f\u7528SMT\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\u914d\u7f6e\u7684\u590d\u6742\u6027\uff1b\u5f53\u4f7f\u7528\u901a\u7528\u7684\u3001\u9ad8\u5ea6\u53ef\u914d\u7f6e\u7684SMT\u65f6\uff0c\u60a8\u53ef\u80fd\u6700\u7ec8\u4f1a\u5f97\u5230\u5f88\u96be\u638c\u63e1\u548c\u8c03\u8bd5\u7684\u5197\u957f\u914d\u7f6e\u3002\u60a8\u6700\u597d\u5b9e\u73b0\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u4e00\u4e2a\u7279\u5b9a\u4efb\u52a1\u7684\u5b9a\u5236SMT\uff0c\u5145\u5206\u5229\u7528Java\u7f16\u7a0b\u8bed\u8a00\u7684\u5168\u90e8\u529f\u80fd\u3002\n\u65e0\u8bba\u60a8\u662f\u901a\u8fc7\u914d\u7f6e\u4f7f\u7528\u73b0\u6210\u7684SMT\uff0c\u8fd8\u662f\u5728Java\u4e2d\u5b9e\u73b0\u81ea\u5b9a\u4e49SMT\uff0c\u6d4b\u8bd5\u60a8\u7684\u5de5\u4f5c\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u867d\u7136\u5355\u5143\u6d4b\u8bd5\u662f\u5b9a\u5236SMT\u5b9e\u73b0\u7684\u57fa\u672c\u6d4b\u8bd5\u7684\u53ef\u884c\u9009\u62e9\uff0c\u4f46\u662f\u5efa\u8bae\u4f7f\u7528\u9488\u5bf9Kafka Connect\u8fde\u63a5\u5668\u8fd0\u884c\u7684\u96c6\u6210\u6d4b\u8bd5\u6765\u6d4b\u8bd5SMT\u914d\u7f6e\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u786e\u4fddSMT\u53ef\u4ee5\u5904\u7406\u5b9e\u9645\u6d88\u606f\uff0c\u5e76\u4e14\u5df2\u7ecf\u6309\u7167\u60a8\u60f3\u8981\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u914d\u7f6e\u3002\nTestContainers\u548c\u5bf9TestContainers\u7684Debezium\u652f\u6301\u662f\u8bbe\u7f6e\u6240\u6709\u5fc5\u9700\u7ec4\u4ef6(\u5982Apache Kafka\u3001Kafka Connect\u3001\u8fde\u63a5\u5668\u548c\u8981\u6d4b\u8bd5\u7684SMT)\u7684\u91cd\u8981\u57fa\u7840\u3002\n\u6211\u65f6\u4e0d\u65f6\u5e0c\u671b\u7684\u4e00\u4e2a\u7279\u5b9a\u529f\u80fd\u662f\uff0c\u80fd\u591f\u5c06SMT\u4ec5\u5e94\u7528\u4e8e\u8fde\u63a5\u5668\u521b\u5efa\u6216\u4f7f\u7528\u7684\u4e3b\u9898\u7684\u7279\u5b9a\u5b50\u96c6\u3002\u5c24\u5176\u662f\uff0c\u5982\u679c\u8fde\u63a5\u5668\u521b\u5efa\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u4e3b\u9898(\u5982\u5b9e\u9645\u7684\u6570\u636e\u4e3b\u9898\u548c\u53e6\u4e00\u4e2a\u5177\u6709\u5143\u6570\u636e\u7684\u4e3b\u9898)\uff0c\u5219\u53ef\u80fd\u5e0c\u671b\u53ea\u5c06SMT\u5e94\u7528\u4e8e\u4e00\u4e2a\u7ec4\u7684\u4e3b\u9898\uff0c\u800c\u4e0d\u5e94\u7528\u4e8e\u53e6\u4e00\u4e2a\u7ec4\u7684\u4e3b\u9898\u3002KIP-585(\u7b5b\u9009\u548c\u6761\u4ef6SMT)\u4e2d\u5305\u542b\u4e86\u8fd9\u4e00\u8981\u6c42\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u8981\uff0c\u8bf7\u52a0\u5165\u5230\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\u4e2d\u3002\u5982\u679c\u60a8\u6709\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5230\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\u4e2d\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\u9700\u6c42\uff0c\u8bf7\u52a0\u5165\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u60a8\u6709\u9700\u6c42\u6216\n\u6709\u51e0\u4e2a\u5f88\u68d2\u7684\u6f14\u793a\u6587\u7a3f\u548c\u535a\u5ba2\u6587\u7ae0\u6df1\u5165\u63cf\u8ff0\u4e86\u4ec0\u4e48\u662fSMT\uff0c\u60a8\u53ef\u4ee5\u5982\u4f55\u5b9e\u73b0\u60a8\u81ea\u5df1\u7684SMT\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u914d\u7f6e\u7684\uff0c\u7b49\u7b49\u3002\n\u5355\u4e00\u6d88\u606f\u8f6c\u6362\u4e0d\u662f\u60a8\u6b63\u5728\u5bfb\u627e\u7684\u8f6c\u6362\uff1a\u5173\u4e8eSMT\u3001\u5b83\u4eec\u7684\u529f\u80fd\u4ee5\u53ca\u9650\u5236\u7684\u5f88\u597d\u7684\u6982\u8ff0\uff0cEwen Cheslake-Postava\u8457\u3002\nKafka Connect SMT\u7684\u5b9e\u8df5\u4f53\u9a8c\uff1a\u5173\u4e8eSMT\u4f7f\u7528\u6848\u4f8b\u3001\u6ce8\u610f\u4e8b\u9879\u7b49\u7684\u6df1\u5165\u535a\u5ba2\u6587\u7ae0\uff0c\u4f5c\u8005\uff1aGian D\u2018Uia\u3002\n\u73b0\u5728\uff0c\u8003\u8651\u5230SMT\u7684\u5e7f\u6cdb\u4f7f\u7528\u6848\u4f8b\uff0cMacGyver\u4f1a\u559c\u6b22\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u5b9e\u65bdKafka Connect\u5468\u56f4\u7684\u5404\u79cd\u4efb\u52a1\u5417\uff1f\u6211\u5f53\u7136\u4f1a\u8fd9\u6837\u8ba4\u4e3a\u3002\u4f46\u4e00\u5982\u65e2\u5f80\uff0c\u5fc5\u987b\u9009\u62e9\u9002\u5408\u8fd9\u9879\u5de5\u4f5c\u7684\u6b63\u786e\u5de5\u5177\uff1a\u6709\u65f6SMT\u53ef\u80fd\u975e\u5e38\u5408\u9002\uff0c\u800c\u6709\u65f6\u66f4\u7075\u6d3b(\u66f4\u590d\u6742)\u7684\u6d41\u5904\u7406\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u66f4\u53ef\u53d6\u3002\n\u5c31\u50cfMacGyver\u4e00\u6837\uff0c\u5f53\u4f60\u4f7f\u7528\u745e\u58eb\u519b\u5200\u3001\u7ba1\u9053\u80f6\u5e26\u6216\u56de\u5f62\u9488\u65f6\uff0c\u4f60\u5fc5\u987b\u6253\u4e2a\u7535\u8bdd\u3002\n\u7531Disqus\u63d0\u4f9b\u652f\u6301\u7684\u8bc4\u8bba", "note_en": "Do you remember Angus &#34;Mac&#34; MacGyver?The always creative protagonist of the popular 80ies/90ies TV show, who could solve about any problem with nothing more than a Swiss Army knife, duct tape, shoe strings and a paper clip?\n The single message transformations (SMTs) of Kafka Connect are almost as versatile as MacGyver\u2019s Swiss Army knife:\n  SMTs can be the answer to these and many other questions that come up in the context of Kafka Connect.Applied to source or sink connectors,SMTs allow to modify Kafka records before they are sent to Kafka, or after they are consumed from a topic, respectively.\n In this post I\u2019d like to focus on some interesting (hopefully anyways) usages of SMTs.Those use cases are mostly based on my experiences from using Kafka Connect with  Debezium, an open-source platform for change data capture (CDC).I also got some great pointers on interesting SMT usages when  asking the community about this on Twitter some time ago:\n  I definitely recommend to check out the thread; thanks a lot to all who replied!In order to learn more about SMTs in general, how to configure them etc., refer to the resources given towards the end of this post.\n For each category of use cases, I\u2019ve also asked our sympathetic TV hero for his opinion on the usefulness of SMTs for the task at hand.You can find his rating at the end of each section,ranging from \ud83d\udcce (poor fit) to \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce (perfect fit).\n Probably the most common application of SMTs is format conversion,i.e. adjustments to type, format and representation of data.This may apply to entire messages, or to specific message attributes.Let\u2019s first look at a few examples for converting individual message attribute formats:\n Timestamps: Different systems tend to have different assumptions of how timestamps should be typed and formatted.Debezium for instance represents most temporal column types as milli-seconds since epoch.Change event consumers on the other hand might expect such date and time values using Kafka Connect\u2019s  Date type, or as an ISO-8601 formatted string, potentially using a specific timezone\n Value masking: Sensitive data might have be to masked or truncated, or specific fields should even be removed altogether; the  org.apache.kafka.connect.transforms.MaskField and  ReplaceField SMTs  shipping with Kafka Connect out of the box come in handy for that\n Numeric types: Similar to timestamps, requirements around the representation of (decimal) numbers may differ between systems; e.g. Kafka Connect\u2019s  Decimal type allows to convey arbitrary-precision decimals, but its binary representation of numbers might not be supported by all sink connectors and consumers\n Name adjustments: Depending on the chosen serialization formats, specific field names might be unsupported; when working with  Apache Avro for instance, field names must not start with a number\n In all these cases, either existing, ready-made SMTs or bespoke implementations can be used to apply the required attribute type and/or format conversions.\n When using Kafka Connect for integrating legacy services and databases with newly built microservices, such format conversions can play an important role for creating an  anti-corruption layer: by using better field names, choosing more suitable data types or by removing unneeded fields, SMTs can help to shield a new service\u2019s model from the oddities and quirks of the legacy world.\n But SMTs cannot only modify the representation of single fields, also the format and structure of entire messages can be adjusted.E.g. Kafka Connect\u2019s  ExtractField transformation allows to extract a single field from a message and propagate that one.A related SMT is Debezium\u2019s SMT for  change event flattening.It can be used to convert the complex Debezium change event structure with old and new row state, metadata and more, into a flat row representation, which can be consumed by many existing sink connectors.\n SMTs also allow to fine-tune schema namespaces; that can be of interest when working with a schema registry for managing schemas and their versions, and specific schema namespaces should be enforced for the messages on given topics.Two more, very useful examples of SMTs in this category are  kafka-connect-transform-xml and  kafka-connect-json-schema by Jeremy Custenborder, which will take XML or text and produce a typed Kafka Connect  Struct,based on a given XML schema or JSON schema, respectively.\n Lastly, as a special kind of format conversion, SMTs can be used to modify or set the key of Kafka records.This may be desirable if a source connector doesn\u2019t produce any meaningful key, but one can be extracted from the record value.Also  changing the message key can be useful, when considering subsequent stream processing.Choosing matching keys right at the source side e.g. allows for joining multiple topics via Kafka Streams, without the need for re-keying records.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs are the perfect tool for format conversions of Kafka Connect records\n Changes to the schema of Kafka records can potentially be disruptive for consumers.If for instance a record field gets renamed, a consumer must be adapted accordingly,reading the value using the new field name.In case a field gets dropped altogether, consumers must not expect this field any longer.\n Message transformations can help with such transition from one schema version to the next,thus reducing the coupling of the lifecycles of message producers and consumers.In case of a renamed field, an SMT could add the field another time, using the original name.That\u2019ll allow consumers to continue reading the field using the old name and to be upgraded to use the new name at their own pace.After some time, once all consumers have been adjusted, the SMT can be removed again,only exposing the new field name going forward.Similarly, a field that got removed from a message schema could be re-added,e.g. using some sort of constant placeholder value.In other cases it might be possible to derive the field value from other, still existing fields.Again consumers could then be updated at their own pace to not expect and access that field any longer.\n It should be said though that there are limits for this usage: e.g. when changing the type of a field, things quickly become tricky.One option could be a multi-step approach where at first a separate field with the new type is added, before renaming it again as described above.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs can primarily help to address basic compatibility concerns around schema evolution\n When applied on the source side,SMTs allow to filter out specific records produced by the connector.They also can be used for controlling the Kafka topic a record gets sent to.That\u2019s in particular interesting when filtering and routing is based on the actual record contents.In an IoT scenario for instance where Kafka Connect is used to ingest data from some kind of sensors,an SMT might be used to filter out all sensor measurements  below a certain threshold, or route measurement events  above a threshold to a special topic.\n  The  logical topic routing SMT allows to send change events originating from multiple tables to the same Kafka topic,which can be useful when working with partition tables in Postgres, or with data that is sharded into multiple tables\n The   Filter and   ContentBasedRouter SMTs let you use script expressions in languages such as Groovy or JavaScript for filtering and routing change events based on their contents;such script-based approach can be an interesting middleground between ease-of-use (no Java code must be compiled and deployed to Kafka Connect) and expressiveness; e.g. here is how the routing SMT could be used with  GraalVM\u2019s JavaScript engine for routing change events from a table with purchase orders to different topics in Kafka, based on the order type:\n The  outbox event router comes in handy when implementing the  transactional outbox pattern for data propagation between microservices: it can be used to send events originating from a single outbox table to a specific Kafka topic per aggregate (when thinking of domain driven design) or event type\n There are also two SMTs for routing purposes in Kafka Connect  itself:  RegexRouter which allows to re-route records two different topics based on regular expressions, and  TimestampRouter for determining topic names based on the record\u2019s timestamp.\n While routing SMTs usually are applied to source connectors(defining the Kafka topic a record gets sent to),it can also make sense to use them with sink connectors.That\u2019s the case when a sink connector derives the name of downstream table names, index names or similar from the topic name.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  Message filtering and topic routing\u2009\u2014\u2009no problem for SMTs\n Tombstone records are Kafka records with a  null value.They carry special semantics when working with  compacted topics:during log compaction, all records with the same key as a tombstone record will be removed from the topic.\n Tombstones will be retained on a topic for a configurable time before compaction happens (controlled via   delete.retention.ms topic setting),which means that also Kafka Connect sink connectors need to handle them.Unfortunately though, not all connectors are prepared for records with a  null value,typically resulting in  NullPointerExceptions and similar.A filtering SMT such as the one above can be used to drop tombstone records in such case.\n But also the exact opposite\u2009\u2014\u2009producing tombstone records\u2009\u2014\u2009can be useful:some sink connectors use tombstone records as the indicator to delete corresponding rows from a downstream datastore.Now when using a CDC connector like Debezium to capture changes from a database where &#34;soft deletes&#34; are used (i.e. records are not physically deleted, but a logically deleted flag is set to  true when deleting a record), those change events will be exported as update events (which they technically are).A bespoke SMT can be used to translate these update events into tombstone records, triggering the deletion of corresponding records in downstream datastores.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs work well to discard tombstones or convert soft delete events into tombstones. What\u2019s not possible though is to keep the original event and produce an additional tombstone record at the same time\n Even some advanced  enterprise application patterns can be implemented with the help of SMTs, one example being the  claim check pattern.This pattern comes in handy in situations like this:\n A message may contain a set of data items that may be needed later in the message flow, but that are not necessary for all intermediate processing steps. We may not want to carry all this information through each processing step because it may cause performance degradation and makes debugging harder because we carry so much extra data.\n A specific example could again be a CDC connector that captures changes from a database table  Users, with a BLOB column that contains the user\u2019s profile picture(surely not a best practice, still not that uncommon in reality\u2026\u200b).\n Apache Kafka isn\u2019t meant for large messages.The maximum message size is 1 MB by default, and while this can be increased,benchmarks are showing best throughput for much smaller messages.Strategies like  chunking and externalizing large payloads can thus be vital in order to ensure a satisfying performance.\n When propagating change data events from that table to Apache Kafka,adding the picture data to each event poses a significant overhead.In particular, if the picture BLOB hasn\u2019t changed between two events at all.\n Using an SMT, the BLOB data could be externalized to some other storage.On the source side, the SMT could extract the image data from the original record and e.g. write it to a network file system or an Amazon S3 bucket.The corresponding field in the record would be updated so it just contains the unique address of the externalised payload, such as the S3 bucket name and file path:\n  As an optimization, it could be avoided to re-upload unchanged file contents another time by comparing earlier and current hash of the externalized file.\n A corresponding SMT instance applied to sink connectors would retrieve the identifier of the externalized files from the incoming record, obtain the contents from the external storage and put it back into the record before passing it on to the connector.\n Mac\u2019s rating: \u00a0\u00a0 \ud83d\udcce\ud83d\udcce\ud83d\udcce\ud83d\udcce\u00a0\u00a0  SMTs can help to externalize payloads, avoiding large Kafka records. Relying on another service increases overall complexity, though\n As we\u2019ve seen, single message transformations can help to address quite a few requirements that commonly come up for users of Kafka Connect.But there are limitations, too;Like MacGyver, who sometimes has to reach for some other tool than his beloved Swiss Army knife, you shouldn\u2019t think of SMTs as the perfect solution all the time.\n The biggest shortcoming is already hinted at in their name:SMTs only can be used to process  single records, one at a time.E.g. you cannot split up a record into multiple ones using an SMT, as they only can return (at most) one record.Also any kind of stateful processing, like aggregating data from multiple records, or correlating records from several topics is off limits for SMTs.For such use cases, you should be looking at stream processing technologies like  Kafka Streams and  Apache Flink; also integration technologies like  Apache Camel can be of great use here.\n One thing to be aware of when working with SMTs is configuration complexity;when using generic, highly configurable SMTs, you might end up with lengthy configuration that\u2019s hard to grasp and debug.You might be better off implementing a bespoke SMT which is focussing on one particular task, leveraging the full capabilities of the Java programming language.\n Whether you use ready-made SMTs by means of configuration, or you implement custom SMTs in Java,testing your work is essential.\n While unit tests are a viable option for basic testing of bespoke SMT implementations,integration tests running against Kafka Connect connectors are recommended for testing SMT configurations.That way you\u2019ll be sure that the SMT can process actual messages and it has been configured the way you intended to.\n Testcontainers and the Debezium  support for Testcontainers are a great foundation for setting up all the required components such as Apache Kafka, Kafka Connect, connectors and the SMTs to test.\n A specific feature I wished for every now and then is the ability to apply SMTs only to a specific sub-set of the topics created or consumed by a connector.In particular if connectors create different kinds of topics (like an actual data topic and another one with with metadata),it can be desirable to apply SMTs only to the topics of one group but not the other.This requirement is captured in  KIP-585 (&#34;Filter and Conditional SMTs&#34;),please join the discussion on that one if you got requirements or feedback related to that.\n There are several great presentations and blog posts out there which describe in depth what SMTs are,how you can implement your own one,how they are configured etc.\n  Singe Message Transforms are not the Transformations You\u2019re Looking For: A great overview on SMTs, their capabilities as well as limitations, by Ewen Cheslack-Postava\n A hands-on experience with Kafka Connect SMTs: In-depth blog post on SMT use cases, things to be aware of and more, by Gian D\u2019Uia\n Now, considering this wide range of use cases for SMTs, would MacGyver like and use them for implementing various tasks around Kafka Connect?I would certainly think so.But as always, the right tool for the job must be chosen: sometimes an SMT may be a great fit, another time a more flexible (and complex) stream processing solution might be preferable.\n Just as MacGyver, you got to make a call when to use your Swiss Army knife, duct tape or a paper clip.\n    comments powered by  Disqus", "posttime": "2020-05-17 06:53:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6c\u6362,message,smt", "title": "\u5355\u4e00\u4fe1\u606f\u8f6c\u6362-\u5361\u592b\u5361\u8fde\u63a5\u7684\u745e\u58eb\u519b\u5200", "title_en": "Single Message Transformations \u2013 The Swiss Army Knife of Kafka Connect", "transed": 1, "url": "https://www.morling.dev/blog/single-message-transforms-swiss-army-knife-of-kafka-connect/", "via": "", "real_tags": ["\u8f6c\u6362", "message", "smt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002456, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Design Studio\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u60a8\u4ee5\u56fe\u5f62\u65b9\u5f0f\u89c4\u5212\u590d\u6742\u7684vPC\u8bbe\u8ba1\u3001\u8ba1\u7b97\u5b50\u7f51\u7684\u6700\u4f73CIDR\u8303\u56f4\u5e76\u52a8\u6001\u751f\u6210Terraform/Pulumi\u4ee3\u7801\u3002", "note_en": "Design studio tool to help you graphically plan complex VPC design, calculate the optimal CIDR range for subnets and generate Terraform/Pulumi code on the fly.", "posttime": "2020-05-17 06:53:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aws,vpc,\u8bbe\u8ba1", "title": "\u9ed8\u8ba4\u5177\u6709\u6700\u4f73\u5b9e\u8df5\u7684AWS vPC Design Studio", "title_en": "AWS VPC design studio with best practices default", "transed": 1, "url": "https://houqp.github.io/vpcstudio/", "via": "", "real_tags": ["aws", "vpc", "\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "9eee82cd44609f8fe1a1cb4cc57ca40c.jpg", "infoid": 1002455, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7cfb\u5217\u9762\u5411\u7684\u662f\u65b0\u63a5\u89e6Kubernetes\u548cGKE\u7684\u5de5\u7a0b\u5e08\u3002\u5b83\u63d0\u4f9b\u4e86Kubernetes\u7684\u57fa\u672c\u6982\u8ff0\u3001\u5b9a\u4e49\u548c\u5728GKE\u4e2d\u6784\u5efaKubernetes\u96c6\u7fa4\u7684\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u53ca\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u591a\u5c42WebApp\u7684\u7814\u8ba8\u4f1a\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u66f4\u6df1\u5165\u7684Kubernetes\u6700\u4f73\u5b9e\u8df5\u548c\u5e2e\u52a9\uff0c\u8bf7\u8054\u7cfb\u3002\n\u5728\u6211\u4eec\u5f00\u59cb\u6784\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2aGKE\u96c6\u7fa4\u4e4b\u524d\uff0c\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8eKubernetes\u7684\u4e8b\u60c5\u662f\u5f88\u91cd\u8981\u7684\u3002\nKubernetes(K8S)\u662f\u4e00\u4e2a\u5f00\u6e90\u7cfb\u7edf\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u3002\u6d88\u606f\u6765\u6e90\uff1aKubernetes.io\u3002\n2005\u5e74\uff0c\u8c37\u6b4c\u63a8\u51fa\u4e86\u535a\u683c\u7cfb\u7edf\u3002\u5b83\u4e00\u5f00\u59cb\u53ea\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e09\u4e2a\u4eba\u53c2\u4e0e\u7684\u5c0f\u9879\u76ee\u3002\u8fd9\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u7684\u96c6\u7fa4\u7ba1\u7406\u548c\u8d44\u6e90\u8c03\u5ea6\u7cfb\u7edf\uff0c\u5b83\u5f15\u5165\u4e86\uff1a\n\u8fc7\u5ea6\u627f\u8bfa\u7684\u88c5\u7bb1-\u5982\u4f55\u8ba9\u591a\u4e2a\u7cfb\u7edf\u548c\u8fdb\u7a0b\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u4e0d\u53d7\u5e72\u6270\u5730\u8fd0\u884c\u3002\n\u8fdb\u7a0b\u7ea7\u8d44\u6e90\u9694\u79bb-\u5982\u679c\u60a8\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u8c03\u5ea6\u5bb9\u5668\uff0c\u5982\u4f55\u786e\u4fdd\u8fdb\u7a0b\u9700\u6c42\u4e0d\u4f1a\u5e72\u6270\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u8fdb\u7a0b\u9700\u6c42\u3002\n\u5e93\u4f2f\u5185\u65af\u628a\u8fd9\u4e00\u5207\u90fd\u53d8\u6210\u4e86\u9648\u8ff0\u6027\u7684\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u83b7\u53d6\u60a8\u9700\u8981\u8c03\u5ea6\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5728YAML\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5b83\u4eec\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u63d0\u4ea4\u7ed9API\uff0cAPI\u4f1a\u544a\u8bc9\u60a8\u5b83\u662f\u5426\u80fd\u591f\u8c03\u5ea6\u5de5\u4f5c\u3002\n2014\u5e74\uff0c\u8c37\u6b4c\u5f15\u5165Kubernetes\u4f5c\u4e3aBorg\u7cfb\u7edf\u7684\u5f00\u6e90\u7248\u672c\u30022015\u5e74\uff0c\u8c37\u6b4c\u4e0eLinux\u57fa\u91d1\u4f1a\u8054\u5408\u6210\u7acb\u4e86\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a(CNCF)\u3002\u540c\u5e74\uff0c\u7b2c\u4e00\u6b21KubeCon\u6d3b\u52a8\u4e3e\u884c\uff0cCNCF\u5f00\u59cb\u4e86Kubernetes\u7684\u5b63\u5ea6\u53d1\u5e03\u5468\u671f\u3002\n\u5f53\u60a8\u4f7f\u7528Kubernetes\u8fd9\u6837\u7684\u5bb9\u5668\u7f16\u6392\u7a0b\u5e8f\u65f6\uff0c\u60a8\u53ef\u4ee5\u5728\u8bb8\u591a\u4e0d\u540c\u7684\u65f6\u95f4\u8de8\u591a\u53f0\u673a\u5668\u8c03\u5ea6\u8282\u70b9\u6216\u8fdb\u7a0b\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u4e22\u5931\u4e00\u4e2a\u8282\u70b9\u6216\u8fdb\u7a0b\uff0c\u800c\u4e0d\u4f1a\u770b\u5230\u670d\u52a1\u7684\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u4e2d\u65ad\u3002\n\u5982\u679c\u60a8\u662f\u7cfb\u7edf\u64cd\u4f5c\u5458\uff0c\u5f00\u53d1\u4eba\u5458\u5e0c\u671b\u60a8\u7ed9\u4ed6\u4eec\u4e00\u5929\u591a\u6b21\u90e8\u7f72\u4ee3\u7801\u7684\u673a\u4f1a\u3002Kubernetes\u5141\u8bb8\u60a8\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u6eda\u52a8\u66f4\u65b0\u7684\u667a\u80fd\u6d41\u7a0b\u548c\u65b9\u6848\u3002\n\u60a8\u53ef\u4ee5\u5728\u5355\u4e2a\u8282\u70b9\u4e0a\u8c03\u5ea6\u591a\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u8ba9\u60a8\u5168\u5929\u5019\u4ed8\u8d39\u5728\u5355\u4e2a\u4e91\u8282\u70b9\u4e0a\u8fd0\u884c\u5355\u4e2a\u8fdb\u7a0b\u3002\u60a8\u7684\u4e91\u8282\u70b9\u8fd8\u53ef\u4ee5\u8bc6\u522b\u4f55\u65f6\u65e0\u6cd5\u8c03\u5ea6\u65b0\u8fdb\u7a0b\u4ece\u800c\u9700\u8981\u65b0\u8d44\u6e90\uff0c\u6216\u8005\u4f55\u65f6\u8d44\u6e90\u7a7a\u95f2\u5e76\u9700\u8981\u964d\u901f\u3002\u5e93\u4f2f\u5185\u65af\u63d0\u4f9b\u4e86\u5207\u6362\u8fd9\u79cd\u5f39\u6027\u7684\u7b80\u5355\u65b9\u6cd5\u3002\nKubernetes\u63d0\u4f9b\u4e86\u53ef\u9760\u6027\u3002\u5982\u679c\u5bb9\u5668\u6216\u6574\u4e2a\u8282\u70b9\u5b95\u673a\uff0c\u8d44\u6e90\u6216\u5355\u4e2a\u8fdb\u7a0b\u5c06\u7531Kubernetes\u5728\u5065\u5eb7\u8282\u70b9\u4e0a\u91cd\u65b0\u8c03\u5ea6\u3002\nKubernetes\u5141\u8bb8\u60a8\u542f\u52a8\u65b0\u8282\u70b9\u5e76\u81ea\u52a8\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u96c6\u7fa4\u4e2d\u3002\u5982\u679c\u5355\u4e2a\u670d\u52a1\u662f\u8d44\u6e90\u53d7\u9650\u7684\uff0cKubernetes\u4f1a\u68c0\u6d4b\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u5e26\u6765\u65b0\u7684\u5b9e\u4f8b\u6765\u5904\u7406\u989d\u5916\u7684\u8d1f\u8f7d\u3002", "note_en": "This series is intended for engineers new to Kubernetes and GKE. It provides a basic overview of Kubernetes,  definitions \u00a0and  a quick start for building a Kubernetes cluster in GKE \u00a0and a workshop for building your first multi-tier webapp. If you are looking for more in-depth Kubernetes best practices and help,  get in touch.\n Before we get into building your first GKE cluster, it\u2019s important to understand a few things about Kubernetes.\n  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications. Source:  Kubernetes.io\n  In 2005, Google introduced the Borg System. It started as a small project with two or three people working on it. It was a large scale cluster management and resource scheduling system that introduced:\n Bin packing with over-commitment - how do we get many systems and processes running on a single node without interference\n Process level resource isolation - if you schedule a container on a single node, how do you ensure the process requirements doesn\u2019t interfere with the process requirements of another\n Kubernetes made all of this declarative. That means you can take your workloads you need to schedule, define them in a YAML file, submit them to an API and the API tells you if it was able to schedule the work.\n  In 2014, Google introduced Kubernetes as an open source version of the Borg system. In 2015, Google joined with the Linux Foundation to form the  Cloud Native Computing Foundation (CNCF). That same year the first KubeCon event was held and the CNCF started quarterly release cycles for Kubernetes.\n   When you work with a container orchestrator like Kubernetes, you can schedule nodes or processes across many machines, many different times. This allows you to lose a node or process without seeing a disruption in uptime of your service.\n  If you are a systems operator, developers want you to give them the opportunity to deploy code multiple times a day. Kubernetes allows you to implement smart processes and schemes for rolling updates without downtime.\n  Rather than having a single process running on a single cloud node that you pay for 24/7, you can schedule many processes on a single node. Your cloud nodes can also recognize when new processes cannot be scheduled and thus require new resources, or alternatively, when resources are idle and need to be spun down. Kubernetes offers easy ways to toggle this elasticity.\n  Kubernetes provides reliability. If a container or entire node goes down, resources or a single process will be rescheduled by Kubernetes on a healthy node.\n  Kubernetes allows you to bring up new nodes and automatically add them to your cluster. If a single service is resource constrained, Kubernetes will detect this and bring up new instances to handle the additional load.", "posttime": "2020-05-17 06:52:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u65af,kubernetes", "title": "\u5e93\u4f2f\u5185\u65af\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\uff1f", "title_en": "What Problems Does Kubernetes Solve?", "transed": 1, "url": "https://www.fairwinds.com/blog/what-problems-does-kubernetes-solve", "via": "", "real_tags": ["\u5185\u65af"]}, {"category": "", "categoryclass": "", "imagename": "f3bf8287c7a47b84a51a73a9a3560e72.png", "infoid": 1002454, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5206\u4eab\u4e86ELK\u6808\u53ef\u4ee5\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5e26\u6765\u591a\u5c11\u4ef7\u503c\uff0c\u56e0\u4e3a\u5b83\u4e3a\u60a8\u63d0\u4f9b\u4e86\u76d1\u63a7\u529f\u80fd\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5e26\u60a8\u4e86\u89e3\u5982\u4f55\u5c06Go\u5e94\u7528\u7a0b\u5e8f\u4e0eelk\u96c6\u6210\uff0celk\u6709\u54ea\u4e9b\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u4e3a\u5b83\u4eec\u521b\u5efa\u57fa\u672c\u914d\u7f6e\u3002\n\u5bf9\u4e8e\u575e\u7ad9\uff0c\u8bf7\u6309\u7167\u6b64\u5904\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\u5bf9\u4e8e\u575e\u7ad9\u7ec4\u5408\uff0c\u8bf7\u6309\u7167\u6b64\u5904\u7684\u5b89\u88c5\u8bf4\u660e\u64cd\u4f5c\u3002\n\u76ee\u524d\uff0crepo\u53ea\u6709\u4e00\u4e2amain.go\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4ee5\u4e00\u5b9a\u7684\u95f4\u9694\u8bb0\u5f55\u968f\u673a\u65e5\u5fd7\u884c\u3002\u6709\u65f6\uff0c\u5b83\u4f1a\u4f20\u64ad\u9519\u8bef\u65e5\u5fd7\u884c\u3002\n\u8fd9\u662f\u4e09\u79cd\u4e0d\u540c\u7684\u5de5\u5177\uff0c\u7531Elastic\u516c\u53f8\u521b\u5efa\uff0c\u901a\u5e38\u4e00\u8d77\u4f7f\u7528\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u80fd\u591f\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u6216\u7cfb\u7edf\u65e5\u5fd7\u76d1\u63a7\u751f\u4ea7\u7cfb\u7edf\u3002\nBeats\u662f\u4e00\u7ec4\u7ecf\u8fc7\u5fae\u8c03\u7684\u5c0f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6536\u96c6\u4e0d\u540c\u7c7b\u578b\u7684\u65e5\u5fd7\u6570\u636e-\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u3001\u4ece\u64cd\u4f5c\u7cfb\u7edf\u65e5\u5fd7\u3001\u4eceWindows\u4e8b\u4ef6\u65e5\u5fd7\u7b49\u3002\n\u7531\u4e8eELBK\u542c\u8d77\u6765\u6ca1\u6709ELK\u90a3\u4e48\u82b1\u54e8\uff0c\u6211\u4eec\u4ecd\u7136\u5c06\u8be5\u5806\u6808\u79f0\u4e3aELK\u5806\u6808\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5206\u522b\u7814\u7a76\u8fd9\u4e9b\u7ec4\u4ef6\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u5e76\u76f8\u5e94\u5730\u5b89\u88c5\u5b83\u4eec(amp\uff1bInstall)\u3002\n\u8fd9\u53ef\u4ee5\u662f\u4efb\u4f55JSON\u5e8f\u5217\u5316\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u8fd9\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521b\u5efa\u9762\u5411\u7528\u6237\u7684\u641c\u7d22\u680f\u3002\n\u60a8\u53ef\u4ee5\u5c06\u8fd9\u9879\u5de5\u4f5c\u5916\u5305\u7ed9ElasticSearch\uff0c\u8fd9\u5c06\u6bd4\u6211\u4eec\u4e24\u4e2a\u90fd\u505a\u5f97\u597d\u5f97\u591a\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u5904\u7406\u7cdf\u7cd5\u7684\u5b57\u7b26\u4e32\u3002\n\u4f46\u662f\uff0c\u5728\u6211\u4eec\u7684\u7528\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Elasticsearch\u6765\u5b58\u50a8\u7ed3\u6784\u5316\u65e5\u5fd7\u3002\u7ed3\u6784\u5316\u65e5\u5fd7\u662f\u5c06\u5176\u5185\u5bb9\u7ec4\u7ec7\u5230JSON\u5bf9\u8c61\u4e2d\u7684\u65e5\u5fd7\u3002\n\u4f7f\u7528\u7ed3\u6784\u5316\u65e5\u5fd7\uff0c\u60a8\u53ef\u4ee5\u7a0d\u540e\u7d22\u5f15\u8fd9\u4e9b\u952e\uff0c\u5e76\u5feb\u901f\u65e0\u7f1d\u5730\u5206\u6790\u5927\u91cf\u65e5\u5fd7\u3002\u8fd9\u6b63\u662f\u9e8b\u9e7f\u5806\u6808\u63d0\u4f9b\u7684\u529f\u80fd\u3002\n\u7279\u522b\u662f\uff0cElasticSearch\u5c06\u4ee5\u4f18\u5316\u7684\u65b9\u5f0f\u5b58\u50a8\u6b64\u65e5\u5fd7\u884c\uff0c\u4ee5\u4fbf\u7a0d\u540e\u8fdb\u884c\u641c\u7d22\u548c\u5206\u6790\u3002\n\u8981\u5b89\u88c5ElasticSearch\uff0c\u9996\u5148\u5728repo\u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2adocker-compose.yml\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u521d\u59cbYAML\uff1a\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u8c03\u51fa\u4e00\u4e2a\u540d\u4e3aElasticSearch\u7684\u670d\u52a1\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u540d\u79f0\uff0c\u4f46\u8003\u8651\u5230\u5b83\u7684\u4f5c\u7528\uff0c\u8fd9\u4e2a\u540d\u79f0\u6700\u5177\u63cf\u8ff0\u6027\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7ed9\u5b9a\u7684\u7248\u672c\u62c9\u53d6\u4e00\u4e2a\u5df2\u7ecf\u8bbe\u7f6e\u597d\u7684\u575e\u7ad9\u6620\u50cf\u3002\n\u8fd9\u4f7f\u6211\u4eec\u4e0d\u5fc5\u8d39\u5fc3\u4ece\u5934\u5f00\u59cb\u8bbe\u7f6e\u56fe\u50cf\u3002\u5df2\u7ecf\u6709\u4eba\u63d0\u4f9b\u4e86\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u6b63\u5728\u91cd\u7528\u5b83\u3002\n\u5426\u5219\uff0c\u60a8\u5c06\u4e0d\u5f97\u4e0d\u8d39\u5fc3\u5730\u8bbe\u7f6e\u73af\u5883\u3001\u5b89\u88c5\u4f9d\u8d56\u9879\u3001\u914d\u7f6e\u5b83\u4eec\u3001\u624b\u52a8\u5b89\u88c5ElasticSearch\u7b49\u3002\n\u901a\u8fc7\u6b64\u884c\uff0c\u6211\u4eec\u8868\u793a\u672c\u5730\u76ee\u5f55./config/elasticsearch.yml\u5c06\u6302\u8f7d\u5728/usr/Share/Elasticsearch/\u2026\u4e0a\u3002\u5e76\u4e14\u5b83\u5c06\u662f\u53ea\u8bfb\u7684(\u7531ro\u6807\u5fd7\u6307\u793a)\u3002\n\u6b64\u90e8\u5206\u6307\u5b9a\u6211\u4eec\u5c06\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5bf9\u5bb9\u5668\u8fdb\u884c\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\uff1a\n\u6211\u4eec\u603b\u5171\u5c06\u8fdb\u884c10\u6b21\u91cd\u8bd5\uff0c\u5982\u679c\u6240\u6709\u91cd\u8bd5\u90fd\u5931\u8d25\uff0cdocker\u4f1a\u5c06\u6b64\u5bb9\u5668\u6807\u8bb0\u4e3a\u4e0d\u5065\u5eb7\uff0c\u5e76\u901a\u77e5\u4f9d\u8d56\u7684\u5bb9\u5668\u3002\n\u914d\u7f6e\u7684\u6700\u540e\u4e00\u90e8\u5206\u5c06\u5bb9\u5668\u7684\u5185\u90e89200\u7aef\u53e3\u6620\u5c04\u5230\u5b9e\u9645\u76849200\u7aef\u53e3\uff1a\n\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u4e3aElasticSearch\u6dfb\u52a0\u5230docker-compose.yml\u7684\u5168\u90e8\u5185\u5bb9\u3002\u6700\u540e\uff0c\u5c06\u6b64\u914d\u7f6e\u6dfb\u52a0\u5230./config/astic ticsearch.yml\u4e2d\uff1a\n\u901a\u5e38\uff0cElasticSearch\u5728\u8282\u70b9\u7fa4\u96c6\u4e2d\u8fd0\u884c\uff0c\u5176\u4e2d\u5305\u542b\u5fc5\u987b\u914d\u7f6e\u7684\u4e3b\u548c\u4ece\u8282\u70b9\u3002\n\u4e3a\u4e86\u4f7f\u672c\u7ec3\u4e60\u7b80\u5355\u6613\u61c2\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5355\u4e2aElasticSearch\u8282\u70b9\u3002\n\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u60a8\u5e94\u8be5\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5f00\u59cb\u770b\u5230ElasticSearch\u65e5\u5fd7\uff0c\u5e76\u4e14\u5bb9\u5668\u5e94\u8be5\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u9519\u8bef\u884c\u6216\u4efb\u4f55\u6307\u5411\u95ee\u9898\u7684\u5185\u5bb9\uff1a\n\u6b64\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u53ef\u80fd\u4f1a\u5f39\u51fa\u4e00\u4e9b\u95ee\u9898\u3002\n\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u5806\u6808\u4e2d\u7684\u4e0b\u4e00\u4e2a\u7ec4\u4ef6-logstash\u3002\n\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4e0eElasticSearch\u4ea4\u4e92\uff0c\u4f46\u662flogstash\u901a\u5e38\u7528\u4f5c\u4e00\u4e2a\u6709\u7528\u7684\u4e2d\u4ecb\uff0c\u4ee5\u8282\u7701\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u7aef\u7684\u4e00\u4e9b\u5de5\u4f5c\u3002\n\u4e0e\u524d\u9762\u4e00\u6837\uff0c\u6211\u4eec\u5c06./config/logstash.conf\u6587\u4ef6\u6302\u8f7d\u5230logstash\u7684\u9ed8\u8ba4\u914d\u7f6e\u4f4d\u7f6e\u3002\n\u6700\u540e\uff0cDependers_on\u90e8\u5206\u6307\u51fa\uff0c\u53ea\u6709\u5f53ElasticSearch\u670d\u52a1\u542f\u52a8\u5e76\u4e14\u8fd0\u884c\u6b63\u5e38\u65f6\uff0c\u8be5\u670d\u52a1\u624d\u5e94\u8be5\u542f\u52a8\u3002\n\u8f93\u5165\u90e8\u5206\u6307\u5b9alogstash\u4ece\u4f55\u5904\u63a5\u53d7\u6570\u636e\u3002\u5b83\u6709\u4e00\u4e2a\u540d\u4e3abeats\u7684\u5185\u7f6e\u63d2\u4ef6\uff0c\u53ef\u4ee5\u81ea\u52a8\u4e0e\u6211\u4eec\u7a0d\u540e\u4f7f\u7528\u7684\u6587\u4ef6\u8282\u62cd\u7b49beats\u5e94\u7528\u7a0b\u5e8f\u96c6\u6210\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8868\u793a\u5c06\u5728\u7aef\u53e35044\u4e0a\u63a5\u53d7\u6765\u81eaBEATS\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u3002\n\u5728\u7b5b\u9009\u5668\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4efb\u4f55\u81ea\u5b9a\u4e49\u7b5b\u9009\u5668\u6216\u6620\u5c04(\u4f8b\u5982\uff0c\u4ee5\u81ea\u5b9a\u4e49\u683c\u5f0f\u5c06\u4e00\u4e2a\u8f93\u5165\u5b57\u6bb5\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a)\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u6307\u5b9a\u6e90\u7ed3\u6784\u5316\u65e5\u5fd7\u5c06\u6765\u81eaMessage\u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u662ffilebeat\u5b58\u50a8\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u7684\u7f3a\u7701\u952e\u3002\n\u8fd9\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u7d22\u5f15\u65e5\u5fd7\u4e2d\u7684\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u901a\u8fc7fileBeat\u548c/\u6216logstash\u63d2\u5165\u7684\u5bc6\u94a5\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230ElasticSearch(\u5c31\u50cf\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u90a3\u6837)\uff0c\u5e76\u901a\u8fc7\u5176\u9ed8\u8ba4\u7aef\u53e39200\u4e0e\u5176\u96c6\u6210\u3002\n\u5982\u679c\u5c06ElasticSearch\u7684\u9ed8\u8ba4\u7aef\u53e3\u66f4\u6539\u4e3a\u5176\u4ed6\u7aef\u53e3\uff0c\u5219\u8fd8\u5fc5\u987b\u4fee\u6539\u6b64\u90e8\u5206\u3002\n\u73b0\u5728\u540c\u65f6\u8fd0\u884cElasticSearch\u548clogstash\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u90fd\u542f\u52a8\u65f6\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff1a\nFileBeat\u662f\u4e00\u4e2aBEATS\u5e94\u7528\u7a0b\u5e8f(\u8fd8\u6709\u66f4\u591a)\uff0c\u5b83\u8d1f\u8d23\u76d1\u89c6\u65e5\u5fd7\u6587\u4ef6\u4e2d\u7684\u66f4\u6539\u5e76\u5c06\u5176\u8f6c\u53d1\u5230logstash\u3002\n\u5982\u679c\u6ca1\u6709fileBeat\uff0c\u60a8\u5c06\u4e0d\u5f97\u4e0d\u81ea\u5df1\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u4e0elogstash\u7684\u96c6\u6210\u3002\n\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f-\u60a8\u6307\u5b9a\u5b83\u5e94\u8be5\u76d1\u89c6\u7684\u65e5\u5fd7\u7684\u8def\u5f84&\u5b83\u5c06\u5b9a\u671f\u5904\u7406\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u4f20\u64ad\u5230logstash\u3002\n\u5927\u90e8\u5206\u65b0\u7684\u90e8\u5206\u4e0e\u6211\u4eec\u4e3a\u5176\u4f59\u670d\u52a1\u6240\u505a\u7684\u5de5\u4f5c\u975e\u5e38\u76f8\u4f3c\u3002\n\u8fd9\u4e24\u9879\u65b0\u670d\u52a1\u90fd\u4f9d\u8d56\u4e8eElasticSearch\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u90fd\u4f9d\u8d56\u4e8e\u5404\u81ea\u7684\u57fa\u7ebf\u6269\u5c55\u5e95\u5ea7\u56fe\u50cf\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7684Go\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u5f53\u524d\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u7684GOPATH\u7684\u5b50\u76ee\u5f55\u4e2d\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5728\u5bb9\u5668\u7684\u6807\u51c6config\u76ee\u5f55\u4e2d\u6302\u8f7d\u4e86\u6587\u4ef6\u8282\u62cd\u914d\u7f6e\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7684Go\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u8fd8\u6307\u5b9a\u5bb9\u5668\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\n\u6b64\u914d\u7f6e\u6307\u5b9a\u670d\u52a1\u5c06\u4fa6\u542c/logs\u4e2d\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u7684\u66f4\u6539\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5c06\u901a\u8fc7\u7aef\u53e35044\u5c06\u6240\u6709\u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u4fe1\u606f\u8f93\u51fa\u5230logstash\u3002\n\u5bf9\u4e8e\u6765\u81eaBEATS\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u6211\u4eec\u8fd8\u5728logstash\u670d\u52a1\u914d\u7f6e\u4e2d\u5c06\u8be5\u7aef\u53e3\u5217\u5165\u767d\u540d\u5355\u3002\n\u8bbe\u7f6e\u7684\u6700\u540e\u4e00\u5757\u662fKibana\u3002\u5b83\u662f\u7528\u4e8e\u5206\u6790\u5b58\u50a8\u5728Elasticsearch\u4e2d\u7684\u6570\u636e\u7684\u524d\u7aef\u3002\n\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u3001\u997c\u56fe\u3001\u6570\u636e\u8868\u7b49\u53ef\u89c6\u5316\u5927\u91cf\u7684\u6570\u636e\uff0c\u4ee5\u4fbf\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u5fd7\u76d1\u89c6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u5b83\u5b89\u88c5\u57fa\u7ebf\u6269\u5c55\u575e\u955c\u50cf\uff0c\u4f9d\u8d56\u4e8eElasticSearch\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\uff0c\u5e76\u5c06\u5176\u5185\u90e8\u7aef\u53e35601\u6620\u5c04\u5230\u673a\u5668\u7684\u5b9e\u9645\u7aef\u53e35601\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u6dfb\u52a0\u60a8\u7684golang\u5e94\u7528\u7a0b\u5e8f\u5bf9kibana\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u6574\u4e2a\u5bb9\u5668\u5806\u6808\u53ea\u6709\u5728kibana\u7684\u670d\u52a1\u5668\u51c6\u5907\u597d\u4e4b\u540e\u624d\u4f1a\u542f\u52a8\uff1a\n\u73b0\u5728\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u8f6c\u5230http://localhost:5601/app/kibana\u5e76\u770b\u5230Kibana\u7684\u4e3b\u9875\u52a0\u8f7d\u3002\n\u5982\u679c\u60a8\u6ca1\u6709\u6267\u884c\u6700\u540e\u4e00\u4e2a\u53ef\u9009\u6b65\u9aa4\uff0c\u5219\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u542f\u52a8Kibana\uff1a\n\u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7Kibana\u641c\u7d22\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u6765\u6d4b\u8bd5\u4e00\u5207\u662f\u5426\u6b63\u786e\u96c6\u6210\u3002\n\u73b0\u5728\uff0c\u60a8\u5e94\u8be5\u5df2\u7ecf\u5f88\u597d\u5730\u7406\u89e3\u4e86ELK\u5806\u6808\u662f\u5982\u4f55\u5de5\u4f5c\u7684&\u4ee5\u53ca\u5b83\u7684\u6bcf\u4e2a\u4e0d\u540c\u7ec4\u4ef6\u3002\u6b64\u5916\uff0c\u60a8\u73b0\u5728\u5e94\u8be5\u5f88\u597d\u5730\u638c\u63e1\u4e86\u5982\u4f55\u6b63\u786e\u914d\u7f6eELK\u8bbe\u7f6e&\u5c06\u5176\u8fde\u63a5\u5230GO\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u6570\u636e\u8bbe\u7f6e\u6709\u7528\u7684\u4eea\u8868\u677f\uff0c\u5f00\u59cb\u4f7f\u7528Kibana\u3002", "note_en": "In my  last post, I shared how much value the ELK stack could bring for your application in terms of the monitoring capabilities it gives you.\n In this post, I will walk you through how to integrate your Go application with ELK, what are the different parts of ELK, how they work and how to create a basic configuration for them.\n     For  docker, follow the installation instructions for your platform  here. For  docker-compose, follow the installation instructions  here.\n Currently, the repo simply has a  main.go file which logs random log lines on certain intervals. Occasionally, it propagates error log lines.\n    These are three different tools, created by the  elastic company, which are typically used together to enable developers &amp; sys admins to monitor production systems based on application or system logs.\n  Beats is a collection of small programs which are fine-tuned to gather different kinds of logging data \u2013 e.g. from files, from OS system logs, from Windows event logs, etc.\n Since ELBK doesn\u2019t sound as fancy as ELK, we still refer to the stack as the ELK stack.\n In the following sections, we will explore each of these components separately &amp; install them accordingly.\n     This can be any JSON-serialized object. This can be used, for example, to create a user-facing search bar in your application.\n Instead of doing manual &amp; lame string processing of search terms, you can outsource this to elasticsearch which will do a much better job than both of us.\n However, in our use-case, we will use Elasticsearch for storing  structured logs. A structured log is one, which organizes its contents into a JSON object.\n   Using a structured log, you can later index into these keys and analyse bulks of your logs fast &amp; seamlessly. This is exactly what the ELK stack provides.\n Elasticsearch, in particular, will store this log line in a way optimized for search &amp; analysis later.\n  To install elasticsearch, first create a  docker-compose.yml file in the root of the repo and add this initial yaml:\n   In this case, we only bring up a single service which is called  elasticsearch. You can choose any name you like, but this one is the most descriptive, given what it does.\n  This means that we are pulling an already setup docker image with the given version.\n This enables us to not bother with setting up an image from scratch. Someone has already provided that out of the box, so we are reusing it.\n Otherwise, you will have to bother with setting up the environment, installing dependencies, configuring them, installing elasticsearch manually, etc.\n  With this line, we are indicating that the local directory  ./config/elasticsearch.yml will be mounted on  /usr/share/elasticsearch/\u2026 in the container and it will be read-only (indicated by the  ro flag).\n   This part designates that we will make health checks on the container by running the command:\n  We will do 10 retries in total and if all fail, docker marks this container as  unhealthy and notifies dependent containers.\n The final part of the configuration maps the container\u2019s internal  9200 port to our real  9200 port:\n This is all we need to add to  docker-compose.yml for elasticsearch. Finally, add this configuration in  ./config/elasticsearch.yml:\n  Typically, elasticsearch runs in a cluster of nodes with masters &amp; slaves in them which have to be configured.\n To keep things simple &amp; digestible for this exercise, we will use a single elasticsearch node.\n    If all went well, you should start seeing the elasticsearch logs after a while and the container should not show any error lines or anything pointing to an issue:\n  At this point, have in mind that there might be some issues which might pop-up.\n   If all went went, you can continue with the next component in our stack \u2013  logstash.\n    In reality, you can interact with elasticsearch directly, but logstash is typically used as a helpful intermediary to save yourself some work on the application side.\n     As before, we are mounting the  ./config/logstash.conf file into  logstash\u2019s default config location.\n Finally, the  depends_on section indicates that this service should only boot up when the elasticsearch service is up and healthy.\n    The  input section specifies where logstash accepts data from. It has a built-in plugin called  beats, which automatically integrates with beats applications, such as filebeat, which we\u2019ll use later.\n Here, we indicate that we\u2019ll accept input from beats applications on  port 5044.\n In the  filter section, you can add any custom filters or mappings (e.g. transforming one input field to another in a custom format).\n Here, we only specify that the source structured log will come from the  message field, which is the default key where  filebeat stores the actual application log.\n This will enable us to index the custom application keys in our log, not only the ones plugged in by  filebeat and/or  logstash.\n  It can by default connect to  elasticsearch (as we\u2019ve done here) and integrate with it via its  default port 9200.\n If you change  elasticsearch\u2019s default port to something else, you will have to modify this section as well.\n Now run both elasticsearch and logstash and make sure they both boot up without any issues:\n    Filebeat is a beats application (there are more), which is responsible for monitoring changes in log files and forwarding them to logstash.\n Without filebeat, you would have to manage your application\u2019s integration with  logstash yourself.\n The way it works is \u2013 you specify a path to your logs which it should monitor &amp; it will handle propagating those logs on regular intervals to logstash.\n    The bulk of the new sections are pretty similar to what we already did for the rest of our services.\n Both new services depend on  elasticsearch being healthy, both depend on their respective baseline docker images.\n  For our go app, we\u2019ve mounted the current directory in a subdirectory of the container\u2019s  GOPATH.\n    In addition to that, we\u2019ve mounted the  filebeat configuration in the standard config directory on the container.\n For our Go app, we\u2019ve also specified that once the container is setup, we\u2019ll run our application via the command:\n  This configuration specifies that the service will listen for changes to all log files in  /logs. Additionally, It will output any new logging info to logstash via  port 5044.\n We also whitelisted that port in our  logstash service config for inputs from beats applications.\n  The final piece of the setup is  Kibana. It is a front-end for analysing the data stored in Elasticsearch.\n With it, you can visualize a huge array of data via graphs, pie charts, data tables, etc, in order to monitor what\u2019s happening in your application via its logs.\n     It installs the baseline docker image, depends on  elasticsearch, has a health check of its own and maps its internal  port 5601 to the machine\u2019s real  port 5601.\n In addition to this, you can, optionally, add a dependency of your golang application on  kibana to make sure your entire container stack boots up only after  Kibana\u2019s server is ready:\n  Now, you should be able to go to  http://localhost:5601/app/kibana and see Kibana\u2019s home page load.\n If you didn\u2019t do that last optional step, you might have to wait awhile before Kibana boots up:\n       In the final section, we will test that everything is integrated correctly by searching through our application logs via Kibana.\n              You should now have a good understanding of how the ELK stack works &amp; each of its different components. Additionally, you should now have a good grasp of how to configure your ELK setup correctly &amp; wire it to your Go application.\n From here, you can start playing with Kibana by setting up useful dashboards based on your data.", "posttime": "2020-05-17 06:51:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1,service,elasticsearch", "title": "\u5982\u4f55\u5c06\u60a8\u7684\u56f4\u68cb\u670d\u52a1\u4e0e\u9e8b\u9e7f\u96c6\u6210", "title_en": "How to integrate your Go service with ELK", "transed": 1, "url": "https://pmihaylov.com/go-service-with-elk/", "via": "", "real_tags": ["\u670d\u52a1", "service"]}, {"category": "", "categoryclass": "", "imagename": "cc85999531769ba61b75a7050d6d663b.png", "infoid": 1002453, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u521b\u5efaWeb\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u7ecf\u5e38\u4f1a\u8981\u6c42\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff1a\u65e0\u8bba\u662f\u7528\u6237\u5728\u6211\u4eec\u7684\u5e73\u53f0\u6ce8\u518c\u65f6\u5fc5\u987b\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd8\u662f\u5fd8\u8bb0\u5bc6\u7801\uff0c\u6216\u8005\u8d2d\u4e70\u540e\u5fc5\u987b\u53d1\u9001\u4ed8\u6b3e\u786e\u8ba4\u3002\u7535\u5b50\u90ae\u4ef6\u9700\u6c42\u5b9e\u9645\u4e0a\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u4ece\u4e00\u5f00\u59cb\u5c31\u6784\u5efa\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u4e0d\u4ec5\u662f\u5e2e\u52a9\u4f60\u4ece\u5934\u5f00\u59cb\u5b9a\u4e49\u4e00\u4e2a\u7075\u6d3b\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u8ba9\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u6539\u53d8\u7535\u5b50\u90ae\u4ef6\u4ea4\u4ed8\u5e73\u53f0\uff0c\u800c\u4e14\u5728\u5b9e\u9645\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\u65b9\u9762\u4e5f\u662f\u7075\u6d3b\u7684\u3002\n\u8fd9\u4e00\u6b21\u6211\u5c06\u4f7f\u7528Django\u5c55\u793a\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f46\u6211\u5e0c\u671b\u5176\u4e3b\u8981\u601d\u60f3\u53ef\u4ee5\u4f20\u64ad\u5230\u60a8\u53ef\u80fd\u6b63\u5728\u4f7f\u7528\u7684\u5176\u4ed6\u6846\u67b6\u548c\u7f16\u7a0b\u8bed\u8a00\u3002\n\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5728\u7528\u6237\u6ce8\u518c\u6211\u4eec\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4e4b\u540e\u5411\u4ed6\u6216\u5979\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u5728\u8fd0\u884c\u6240\u6709\u9a8c\u8bc1\u5e76\u521b\u5efa\u7528\u6237\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Django\u7684\u6587\u6863\u5728\u89c6\u56fe\u4e2d\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u4eec\u4f1a\u60f3\u51fa\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n\u5f53\u7136\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6e\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u7f6e\uff0c\u5982EMAIL_HOST\u548cEMAIL_PORT\uff0c\u6b63\u5982\u6587\u6863\u6240\u8ff0\u3002\n\u6b63\u5982\u6211\u524d\u9762\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u51e0\u4e2a\u90e8\u5206\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u6216\u90ae\u4ef6\u53d1\u9001\u7a0b\u5e8f\u6765\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u8bf7\u6c42\uff0c\u8fd9\u4f1a\u5f88\u597d\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u6dfb\u52a0\u4fee\u590d\u6216\u66f4\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5fc5\u641c\u7d22\u6574\u4e2a\u4ee3\u7801\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u201c\u7535\u5b50\u90ae\u4ef6\u4ee3\u7801\u201d\u79fb\u5230\u4e86\u4e00\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u4e86\uff01\u521b\u5efa\u77e5\u9053\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u9001\u4ec0\u4e48\u5185\u5bb9\u7684\u7279\u5b9a\u90ae\u4ef6\u7a0b\u5e8f\u600e\u4e48\u6837\uff1f\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u5c06\u5728\u6bcf\u6b21\u65b0\u7528\u6237\u6ce8\u518c\u65f6\u751f\u6548\u7684\u90ae\u4ef6\u7a0b\u5e8f\u548c\u53e6\u4e00\u4e2a\u53d1\u9001\u8ba2\u5355\u786e\u8ba4\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff01\n\u8fd9\u8868\u660e\uff0c\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u5408\u5e76\u66f4\u591a\u7684\u90ae\u4ef6\u7a0b\u5e8f\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\u60a8\u53ea\u9700\u8ba9\u57fa\u672c\u90ae\u4ef6\u7a0b\u5e8f\u5904\u7406\u5b9e\u73b0\uff0c\u7136\u540e\u7531\u5b50\u7c7b\u8bbe\u7f6e\u5185\u5bb9\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6ce8\u518c\u89c6\u56fe\u5c06\u770b\u8d77\u6765\u5e72\u51c0\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5fc5\u5904\u7406\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff1a\n\u5047\u8bbe\u6211\u4eec\u5fc5\u987b\u4f7f\u7528SendGrid\u7684\u5b98\u65b9python\u5e93\u5c06\u7535\u5b50\u90ae\u4ef6\u540e\u7aef\u79fb\u52a8\u5230SendGrid(\u4e00\u4e2a\u7528\u4e8e\u4ea4\u6613\u548c\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u7684\u5ba2\u6237\u901a\u4fe1\u5e73\u53f0)\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528Django\u7684Send_Email\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u65b0\u5e93\u7684\u8bed\u6cd5\u3002\u4e95\u2026\u3002\u6211\u4eec\u5f88\u5e78\u8fd0\uff01\u6211\u4eec\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u7ba1\u7406\u76f8\u5173\u7684\u4ee3\u7801\u90fd\u653e\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u91cd\u6784\ud83d\ude09\u3002\n\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8bbe\u7f6e\u4e2d\u8bbe\u7f6eSendGrid\u7684API\u5bc6\u94a5\uff0c\u8fd8\u8bf7\u6ce8\u610f\uff0chtml\u6a21\u677f\u5c06\u76f4\u63a5\u4eceSendRID\u7684\u7f51\u9875\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u62e5\u6709\u6a21\u677f\u7684ID\u6765\u6307\u5b9a\u5e94\u8be5\u4f7f\u7528\u54ea\u4e2a\u6a21\u677f\u3002\n\u592a\u68d2\u4e86\uff01\u8fd9\u5e76\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4fee\u6539\u6211\u4eec\u60f3\u8981\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u6bcf\u4e00\u884c\u4ee3\u7801\uff01\n\u5f53\u7136\uff0c\u5f53\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u5f88\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e00\u4e9b\u57df\u6570\u636e\u6765\u586b\u5199\u7535\u5b50\u90ae\u4ef6\u7684\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7684\u6b22\u8fce\u7535\u5b50\u90ae\u4ef6\u4e2d\u5305\u542b\u65b0\u7528\u6237\u540d\uff0c\u4f1a\u66f4\u53cb\u597d\u3002SendGrid\u5141\u8bb8\u60a8\u5728\u6a21\u677f\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u88ab\u4ece\u6211\u4eec\u90a3\u91cc\u63a5\u6536\u5230\u7684\u5b9e\u9645\u4fe1\u606f\u66ff\u6362\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e2a\u6570\u636e\u5427\uff01\n\u6211\u5728\u8fd9\u91cc\u770b\u5230\u7684\u552f\u4e00\u95ee\u9898\u662f\u8fd9\u4e2a\u66ff\u6362\u65b9\u6848\u4e0d\u592a\u7075\u6d3b\u3002\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5fc5\u987b\u6839\u636e\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u7684\u4e0a\u4e0b\u6587\u4f20\u9012\u5176\u4ed6\u6570\u636e\uff0c\u4f8b\u5982\uff1a\u65b0\u8ba2\u5355\u7f16\u53f7\u3001\u91cd\u7f6e\u5bc6\u7801\u94fe\u63a5\u7b49\u3002\u53ef\u80fd\u6709\u76f8\u5f53\u591a\u7684\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u53d8\u5f97\u66f4\u6df7\u4e71\u3001\u66f4\u80ae\u810f\u3002(=\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5173\u952e\u5b57\u53ef\u53d8\u957f\u5ea6\u7684\u53c2\u6570\u5217\u8868\uff0c\u901a\u5e38\u79f0\u4e3a**kwargs\uff0c\u4f46\u4e3a\u4e86\u4f7f\u5176\u66f4\u5177\u8868\u73b0\u529b\uff0c\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a**\u66ff\u6362\uff1a\n\u5982\u679c\u60a8\u5fc5\u987b\u5411\u90ae\u4ef6\u7a0b\u5e8f\u4f20\u9012\u989d\u5916\u7684\u4fe1\u606f\uff0c\u60a8\u5c06\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u7075\u6d3b\u7684\u90ae\u4ef6\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6240\u6709\u4e0e\u7535\u5b50\u90ae\u4ef6\u76f8\u5173\u7684\u4ee3\u7801\u5c01\u88c5\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u7ef4\u62a4\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u63a5\u6536\u53ef\u53d8\u7684\u4e0a\u4e0b\u6587\u53c2\u6570\u6765\u586b\u5145\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff01\u4e00\u6b21\u8003\u8651\u6574\u4e2a\u65b9\u6cd5\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u4f46\u9010\u6b65\u5b9e\u73b0\u4f1a\u66f4\u7b80\u5355\uff0c\u597d\u5904\u4e5f\u5f88\u591a\u3002\u6211\u9f13\u52b1\u60a8\u4f7f\u7528\u6b64\u8bbe\u8ba1\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u6dfb\u52a0\u9644\u52a0\u6587\u4ef6\u7684\u529f\u80fd\uff01\n\u975e\u5e38\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u5e0c\u671b\u5b83\u80fd\u5bf9\u60a8\u7684\u9879\u76ee\u6709\u6240\u5e2e\u52a9\u3002\u8bf7\u5173\u6ce8\u6211\u5373\u5c06\u53d1\u5e03\u7684\u5e16\u5b50\uff0c\u6211\u795d\u60a8\u597d\u8fd0\uff0c\u5e76\u795d\u60a8\u7f16\u7801\u6109\u5feb\uff01", "note_en": "When creating a web application, it is frequently requested to send emails: no matter if it has to be done when users sign up in our platform, or if they forget their password, or if a payment confirmation has to be sent after a purchase. The email requirement is actually very important and it can be messy if we don\u2019t structure an email service from the beginning.\n This post aims not only to help you define a flexible email service from scratch that allows you to change the email delivery platform easily, but also to be supple in terms of the content of the actual email.\n I will be using  Django to show an example this time, but I hope the main idea can be spread to other frameworks and programming languages you might be using.\n   Suppose we want to send an email to a user after he or she signs up to our web application. We can use  Django\u2019s documentation to send that email in the view after all validations were run and the user was created. We will come up with something like this:\n  Of course you must set up some important configurations in your settings like EMAIL_HOST and EMAIL_PORT, as the documentation says.\n   As I said before, we will probably need to send emails in several parts of our application, so it would be nice to have an email service or mailer who handles all the email requests, making it easier to add fixes or changes, because we won\u2019t have to search through the whole code.\n     Now that we have moved all the \u201cemail code\u201d to a single place, we can take advantage of that! How about creating specific mailers that know what content to send when they are called? Let\u2019s add a mailer that will get into action everytime new users sign up and another one that sends orders\u2019 confirmations!\n  This shows that it is very easy to incorporate more mailers for different situations. You just have to let the basic mailer handle the implementation, and the subclasses set the content.\n Now our register view will look much cleaner, because it doesn\u2019t have to handle all the email stuff:\n   Suppose that we have to move our email backend to  Sendgrid (a customer communication platform for transactional and marketing email) using its official  python library. We won\u2019t be using Django\u2019s  send_email any longer. Instead we will have to use the new library\u2019s syntax. Well\u2026 We are lucky! We have all the code related to email management in just one place and it will be easier for us to do this refactor \ud83d\ude09\n  Be aware that you must set Sendgrid\u2019s api key in your settings and also note that html templates will be managed directly from Sendrid\u2019s web page, and you will need to have the templates\u2019 ids to specify which one should be used.\n Great! It was not so difficult and we don\u2019t have to modify each line of code where we want to send an email!\n   Of course when we send emails, it is likely to use some domain data to fill in the email\u2019s template. For example, it would be friendlier if our welcome email had the new user\u2019s name in it. Sendgrid allows you to define variables in the template that will be replaced with the actual information that receives from us. So let\u2019s add this data!\n  The only problem I see here is that this substitutions scheme isn\u2019t very flexible. It is likely to happen that we have to pass other data depending on the context that cannot be accessed via the user, for instance: new order\u2019s number, reset password link, etc. There can be quite a lot of these variables and passing them as named parameters could make the code messier and dirtier. We want a keyworded, variable-length argument list, usually called  **kwargs, but let\u2019s name them  **substitutions to make it more expressive:\n  In case you have to pass extra information to the mailer, you will do something like this:\n   We have created a flexible mailer which encapsulates all the code related to emails in one place, making it easier to maintain, and that also receives variable context parameters to fill in the email content! Thinking of the whole approach at once could be difficult, but making it step by step is simpler and the benefits are a lot.  I encourage you to add the feature of attaching files to an email using this design!\n Thank you very much for reading this post and I hope it helps you for your projects. Follow me for upcoming posts, and I wish you good luck and happy coding!", "posttime": "2020-05-17 06:50:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "django,simple,\u7535\u5b50\u90ae\u4ef6", "title": "\u4f7f\u7528Django\u6784\u5efa\u7b80\u5355\u7684\u90ae\u4ef6\u670d\u52a1", "title_en": "Build a Simple Mailing Service with Django", "transed": 1, "url": "https://medium.com/python-in-plain-english/simple-mailer-with-django-2a7e2ad34b34", "via": "", "real_tags": ["django", "simple", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002452, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u9875\u662f\u5bf9GCC 10\u4e2d\u5927\u91cf\u6539\u8fdb\u4e2d\u7684\u4e00\u4e9b\u6539\u8fdb\u7684\u7b80\u8981\u603b\u7ed3\u3002\u60a8\u53ef\u80fd\u8fd8\u60f3\u67e5\u770b\u6211\u4eec\u7684\u201c\u79fb\u690d\u5230GCC 10\u201d\u9875\u548c\u5b8c\u6574\u7684GCC\u6587\u6863\u3002\n\u4fee\u590d\u4e86C++14\u548cC++17\u4e4b\u95f4\u7684ABI\u4e0d\u517c\u5bb9\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u76ee\u6807\u4e0a\uff0c\u5e26\u6709\u96f6\u5b50\u5bf9\u8c61\u7684\u7c7b\u5728\u7f16\u8bd1\u4e3aC++17\u6216C++20\u65f6\u4f1a\u88ab\u9519\u8bef\u4f20\u9012\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684C++\u6ce8\u91ca\u3002\n\u975e\u6807\u51c6std\uff1a\uff1a__is_nullptr_t\u7c7b\u578b\u7279\u5f81\u5df2\u5f03\u7528\uff0c\u5c06\u5728\u672a\u6765\u7248\u672c\u4e2d\u4ecelibstdc++\u4e2d\u5220\u9664\u3002\u6807\u51c6\u7279\u5f81STD\uff1a\uff1aIS_NULL_POINTER\u5e94\u8be5\u6539\u4e3a\u3002\n\u6784\u5efaGCC\u6240\u9700\u7684mpfr\u5e93\u7684\u6700\u4f4e\u7248\u672c\u5df2\u7ecf\u589e\u52a0\u52303.1.0\u7248(\u53d1\u5e03\u4e8e2011\u5e7410\u670803\u65e5)\u3002\n\u5220\u9664\u4e86--param allow-store-data-races\u5185\u90e8\u53c2\u6570\uff0c\u800c\u91c7\u7528\u4e86\u65b0\u7684\u5b98\u65b9\u9009\u9879-falow-store-data-races\u3002\u867d\u7136\u9ed8\u8ba4\u884c\u4e3a\u6ca1\u6709\u6539\u53d8\uff0c\u5e76\u4e14\u65b0\u7684\u9009\u9879\u5141\u8bb8\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u671f\u95f4\u6b63\u786e\u5730\u7ef4\u62a4\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u7684\u8bbe\u7f6e\uff0c\u4f46\u662f\u73b0\u5728\u5c06\u8bca\u65ad\u9ed8\u8ba4\u7684via--param allow-store-data-race\u7684\u66f4\u6539\uff0c\u5e76\u4e14\u5fc5\u987b\u76f8\u5e94\u5730\u8c03\u6574\u6784\u5efa\u7cfb\u7edf\u3002\n\u5378\u8f7d\u5230\u5f02\u6784\u7cfb\u7edf\u67b6\u6784\u4e2d\u95f4\u8bed\u8a00(HSAIL)\u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u65b0\u589e\u5185\u7f6e\u51fd\u6570\uff1a\u53ef\u4ee5\u4f7f\u7528__HAS_BUTHIN\u5185\u7f6e\u9884\u5904\u7406\u5668\u8fd0\u7b97\u7b26\u67e5\u8be2\u5bf9GCC\u7b49\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u5185\u7f6e\u51fd\u6570\u7684\u652f\u6301\u60c5\u51b5\u3002\n\u65b0\u7684\u547d\u4ee4\u884c\u9009\u9879\uff1a-fprofile-Partial-Training\u73b0\u5728\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u7f16\u8bd1\u5668\uff0c\u57f9\u8bad\u8fd0\u884c\u672a\u8986\u76d6\u7684\u4ee3\u7801\u8def\u5f84\u4e0d\u5e94\u9488\u5bf9\u5927\u5c0f\u8fdb\u884c\u4f18\u5316\u3002\n-fprofile-reducable\u63a7\u5236\u7531-fprofile-GENERATE\u6536\u96c6\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u53ef\u91cd\u73b0\u6027\u7ea7\u522b\u3002\u8fd9\u4f7f\u5f97\u91cd\u5efa\u5177\u6709\u76f8\u540c\u7ed3\u679c\u7684\u7a0b\u5e8f\u6210\u4e3a\u53ef\u80fd\uff0c\u4f8b\u5982\uff0c\u8fd9\u5bf9\u4e8e\u5206\u53d1\u5305\u662f\u6709\u7528\u7684\u3002\n-fprofile-prefix-path\u53ef\u4ee5\u4e0e-fprofile-Generate=profile_dir\u548c-fprofile-use=profile_dir\u7ec4\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u901a\u77e5GCC\u6784\u5efa\u6e90\u6811\u7684\u57fa\u76ee\u5f55\u5728\u54ea\u91cc\uff0c\u4ee5\u9632\u68c0\u6d4b\u548c\u4f18\u5316\u6784\u5efa\u6709\u6240\u4e0d\u540c\u3002\n-fAnalyzer\u542f\u7528\u65b0\u7684\u9759\u6001\u5206\u6790\u8fc7\u7a0b\u548c\u76f8\u5173\u8b66\u544a\u3002\u6b64\u904d\u5bf9\u4ee3\u7801\u4e2d\u7684\u8def\u5f84\u6267\u884c\u8017\u65f6\u7684\u63a2\u7d22\uff0c\u5e0c\u671b\u68c0\u6d4b\u5404\u79cd\u5e38\u89c1\u9519\u8bef\uff0c\u5982\u53cc\u91cd\u91ca\u653e\u7684\u9519\u8bef\u3002\u6b64\u9009\u9879\u5728\u6b64\u7248\u672c\u4e2d\u5e94\u89c6\u4e3a\u8bd5\u9a8c\u6027\u9009\u9879\u3002\u7279\u522b\u662f\uff0c\u5bf9\u975eC\u4ee3\u7801\u7684\u5206\u6790\u4e0d\u592a\u53ef\u80fd\u8d77\u4f5c\u7528\u3002\n\u8fc7\u7a0b\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u91cd\u65b0\u5b9e\u73b0\u4e86\u805a\u5408\u7684\u8fc7\u7a0b\u95f4\u6807\u91cf\u66ff\u6362(IPA-SRA)\u4f20\u9012\uff0c\u4ee5\u4fbf\u5728\u94fe\u63a5\u65f6\u5de5\u4f5c\uff0c\u73b0\u5728\u8fd8\u53ef\u4ee5\u5220\u9664\u8ba1\u7b97\u548c\u8fd4\u56de\u672a\u4f7f\u7528\u7684\u8fd4\u56de\u503c\u3002\n-finline-Functions\u73b0\u5728\u5728-O2\u5904\u542f\u7528\uff0c\u5e76\u91cd\u65b0\u4f18\u5316\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4ee3\u7801\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u6027\u80fd\u6743\u8861\u3002\u5185\u8054\u542f\u53d1\u5f0f\u4e5f\u5927\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\uff0c\u907f\u514d\u4e86\u5bf9-flto-O2\u7f16\u8bd1\u65f6\u95f4\u7684\u8d1f\u9762\u5f71\u54cd\u3002\n\u5185\u8054\u542f\u53d1\u5f0f\u548c\u51fd\u6570\u514b\u9686\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u503c\u8303\u56f4\u4fe1\u606f\u6765\u9884\u6d4b\u5355\u4e2a\u8f6c\u6362\u7684\u6709\u6548\u6027\u3002\n\u5728\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528C++One Definition Rule\u6765\u63d0\u9ad8\u57fa\u4e8e\u7c7b\u578b\u7684\u522b\u540d\u5206\u6790\u7684\u7cbe\u5ea6\u3002\n\u94fe\u63a5\u65f6\u95f4\u4f18\u5316\u6539\u8fdb\uff1a\u6dfb\u52a0\u4e86\u65b0\u7684\u4e8c\u8fdb\u5236LTO-DUMP\u3002\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u8f6c\u50a8\u6709\u5173LTO\u5b57\u8282\u7801\u76ee\u6807\u6587\u4ef6\u7684\u5404\u79cd\u4fe1\u606f\u3002\nLTO\u7684\u5e76\u884c\u9636\u6bb5\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u6b63\u5728\u8fd0\u884c\u7684make&#39\uff1b\u7684jviewer\uff0c\u6216\u8005\u53ef\u4ee5\u56de\u9000\u5230\u53ef\u7528\u6838\u5fc3\u7684\u6570\u91cf\u3002\nLTO\u5b57\u8282\u7801\u53ef\u4ee5\u7528ZSTD\u7b97\u6cd5\u8fdb\u884c\u538b\u7f29\u3002\u914d\u7f6e\u811a\u672c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4bzstd\u652f\u6301\u3002\nMOST--\u53c2\u6570\u503c\u73b0\u5728\u53ef\u4ee5\u6309\u8f6c\u6362\u5355\u5143\u7c92\u5ea6\u6307\u5b9a\u3002\u8fd9\u5305\u62ec\u63a7\u5236\u5185\u8054\u548c\u5176\u4ed6\u8fc7\u7a0b\u95f4\u4f18\u5316\u7684\u6240\u6709\u53c2\u6570\u3002\u4e0e\u65e9\u671f\u7248\u672c\u4e0d\u540c\uff0cGCC 10\u5c06\u5ffd\u7565\u63a7\u5236\u5728\u94fe\u63a5\u65f6\u6307\u5b9a\u7684\u4f18\u5316\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u4e0e\u4f18\u5316\u6807\u5fd7\u76f8\u540c\u7684\u65b9\u5f0f\u5e94\u7528\u5728\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684\u53c2\u6570\u3002\n\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u7684\u4f18\u5316\u6539\u8fdb\uff1a\u4f7f\u7528-fprofile-value\uff0c\u63d2\u5165\u6307\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u8ddf\u8e2a\u95f4\u63a5\u8c03\u7528\u7684\u591a\u4e2a\u503c(\u6700\u591a4\u4e2a)\uff0c\u5e76\u63d0\u4f9b\u66f4\u7cbe\u786e\u7684\u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\u3002\nC\u3001C++\u548cFortran\u7f16\u8bd1\u5668\u73b0\u5728\u652f\u6301openacc\u89c4\u8303\u76842.6\u7248\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605openacc wiki\u9875\u9762\u4e0a\u7684\u5b9e\u73b0\u72b6\u6001\u90e8\u5206\u548c\u8fd0\u884c\u65f6\u5e93\u6587\u6863\u3002\nGCC 10\u5728GCC 9\u7248\u672c\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u591a\u4e2a\u65b0\u5b9e\u73b0\u7684OpenMP5.0\u529f\u80fd\uff0c\u5982\u6761\u4ef6lastprivate\u5b50\u53e5\u3001\u626b\u63cf\u548c\u5faa\u73af\u6307\u4ee4\u3001ORDER(\u5e76\u53d1)\u548cUSE_DEVICE_ADDR\u5b50\u53e5\u652f\u6301\u3001SIMD\u6784\u9020\u4e0a\u7684IF\u5b50\u53e5\u6216\u5bf9DECLARE_DEVANT VARIANT\u6307\u4ee4\u7684\u90e8\u5206\u652f\u6301\uff0c\u66f4\u52a0\u63a5\u8fd1\u5bf9OpenMP 5.0\u6807\u51c6\u7684\u5168\u9762\u652f\u6301\u3002\nOpenMP\u548copenacc\u73b0\u5728\u652f\u6301\u5378\u8f7d\u5230AMD Radeon(GCN)GPU\uff1b\u652f\u6301\u7684\u662f\u7b2c\u4e09\u4ee3\u6590\u6d4e(\u6590\u6d4e)\u548c\u7b2c\u4e94\u4ee3Vega 10/Vega 20(gfx900\u6216gfx906)\u3002\n\u65b0\u5c5e\u6027\uff1a\u6dfb\u52a0\u4e86access\u51fd\u6570\u548ctype\u5c5e\u6027\uff0c\u4ee5\u63cf\u8ff0\u51fd\u6570\u5982\u4f55\u8bbf\u95ee\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u4f20\u9012\u7ed9\u5b83\u7684\u5bf9\u8c61\uff0c\u5e76\u5c06\u6b64\u7c7b\u53c2\u6570\u4e0e\u8868\u793a\u5bf9\u8c61\u5927\u5c0f\u7684\u6574\u6570\u53c2\u6570\u76f8\u5173\u8054\u3002\u8be5\u5c5e\u6027\u7528\u4e8e\u68c0\u6d4b\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u65e0\u6548\u8bbf\u95ee\uff0c\u4f8b\u5982\u7531-Wstringop-overflow\u8bca\u65ad\u7684\u51fd\u6570\u3002\nsymver\u5c5e\u6027\u53ef\u7528\u4e8e\u5c06\u7b26\u53f7\u7ed1\u5b9a\u5230ELF\u5e73\u53f0\u4e0a\u7684\u7279\u5b9a\u7248\u672c\u8282\u70b9\u3002\u8fd9\u6bd4\u5c06GNU\u4f5c\u4e3asymver\u6307\u4ee4\u4f7f\u7528\u5185\u8054\u6c47\u7f16\u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u540e\u8005\u4e0e\u94fe\u63a5\u65f6\u4f18\u5316\u4e0d\u517c\u5bb9\u3002\n\u65b0\u8b66\u544a\uff1a-Wstring-Compare\uff0c\u7531-WExtra\u542f\u7528\uff0c\u8b66\u544a\u96f6\u4e0e\u8c03\u7528strcmp\u548cstrncmp\u7684\u7ed3\u679c\u4e4b\u95f4\u7684\u76f8\u7b49\u548c\u4e0d\u7b49\u8868\u8fbe\u5f0f\uff0c\u8fd9\u662f\u7531\u4e8e\u4e00\u4e2a\u53c2\u6570\u7684\u957f\u5ea6\u5927\u4e8e\u53e6\u4e00\u4e2a\u53c2\u6570\u6240\u6307\u5411\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u800c\u5bfc\u81f4\u7684\u5e38\u91cf\u3002\n-WzerLength-Bound\u7531-Warray-Bound\u542f\u7528\uff0c\u8b66\u544a\u5bf9\u53ef\u80fd\u4e0e\u540c\u4e00\u5bf9\u8c61\u7684\u5176\u4ed6\u6210\u5458\u91cd\u53e0\u7684\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n\u5bf9\u73b0\u6709\u8b66\u544a\u7684\u589e\u5f3a\uff1a-Warray-bound\u68c0\u6d4b\u5230\u66f4\u591a\u5bf9\u6210\u5458\u6570\u7ec4\u7684\u8d8a\u754c\u8bbf\u95ee\u4ee5\u53ca\u5bf9\u96f6\u957f\u5ea6\u6570\u7ec4\u5143\u7d20\u7684\u8bbf\u95ee\u3002\n-Wstringop-overflow\u68c0\u6d4b\u5230\u6210\u5458\u6570\u7ec4\u7684\u66f4\u591a\u8d8a\u754c\u5b58\u50a8\uff0c\u5305\u62ec\u96f6\u957f\u5ea6\u6570\u7ec4\u3001\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u548c\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\uff0c\u4ee5\u53ca\u5b57\u7b26\u4e32\u5185\u7f6e\u51fd\u6570\u8bfb\u53d6\u672a\u7ec8\u6b62\u5b57\u7b26\u6570\u7ec4\u7684\u66f4\u591a\u5b9e\u4f8b\u3002\u8be5\u8b66\u544a\u8fd8\u68c0\u6d4b\u5230\u901a\u8fc7\u8c03\u7528\u4f7f\u7528\u65b0\u5c5e\u6027\u8bbf\u95ee\u58f0\u660e\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u7684\u8d8a\u754c\u8bbf\u95ee\u3002\n\u9664\u4e86\u5df2\u7ecf\u652f\u6301\u7684UCN\u8bed\u6cd5(\\uNNNN\u6216\\UNNNNNNN)\u4e4b\u5916\uff0c\u73b0\u5728\u53ef\u4ee5\u5728\u8f93\u5165\u7f16\u7801(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3aUTF-8)\u4e2d\u76f4\u63a5\u6307\u5b9a\u6807\u8bc6\u7b26\u4e2d\u7684\u6269\u5c55\u5b57\u7b26\uff1a\n\u4f7f\u7528-std=c2x\u548c-std=gnu2x\u652f\u6301\u5373\u5c06\u53d1\u5e03\u7684ISO C\u6807\u51c6C2X\u4fee\u8ba2\u7248\u4e2d\u7684\u51e0\u4e2a\u65b0\u529f\u80fd\u3002\u5728\u7f16\u8bd1\u65e7\u8bed\u8a00\u7248\u672c\u65f6\uff0c\u8fd8\u652f\u6301\u5c06\u5176\u4e2d\u4e00\u4e9b\u529f\u80fd\u4f5c\u4e3a\u6269\u5c55\u3002\u9664\u4e86\u5217\u51fa\u7684\u529f\u80fd\u5916\uff0c\u5728C2X\u6a21\u5f0f\u4e0b\u9ed8\u8ba4\u542f\u7528\u4e86\u4e00\u4e9b\u4ee5\u524d\u652f\u6301\u4f5c\u4e3a\u6269\u5c55\u5e76\u73b0\u5728\u6dfb\u52a0\u5230C\u6807\u51c6\u4e2d\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u6ca1\u6709\u4f7f\u7528-std=c2x-Wpedtic\u8fdb\u884c\u8bca\u65ad\u3002\u4e0e\u5728C++\u4e2d\u4e00\u6837\uff0c\u652f\u6301[[]]\u5c5e\u6027\u8bed\u6cd5\u3002\u73b0\u6709\u5c5e\u6027\u53ef\u4ee5\u4e0e\u6b64\u8bed\u6cd5\u4e00\u8d77\u4f7f\u7528\uff0c\u683c\u5f0f\u5982[[gnu\uff1a\uff1aconst]]\u3002\u652f\u6301\u6807\u51c6\u5c5e\u6027[[Deproated]]\u3001[[Fall Through]]\u548c[[Mayse_Unussed]]\u3002\n\u652f\u6301\u5341\u8fdb\u5236\u6d6e\u70b9\u7b97\u672f\u65f6\uff0c\u9664\u4ee5\u524d\u4ec5\u5728\u5305\u542b&lt\uff1bfloat.h&gt\uff1b\u4e4b\u524d\u5b9a\u4e49\u4e86__STDC_WANT_DEC_FP__\u65f6\u624d\u5b9a\u4e49\u7684\u5b8f\u5916\uff0c&lt\uff1bfloat.h&gt\uff1b\u8fd8\u5b9a\u4e49\u4e86\u5b8fDEC32_TRUE_MIN\u3001DEC64_TRUE_MIN\u548cDEC128_TRUE_MIN\u3002\n\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u7a7a\u62ec\u53f7\u4e3a\u8be5\u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5177\u6709\u539f\u578b\u7684\u7c7b\u578b\uff0c\u4ee5\u4f9b\u540e\u7eed\u8c03\u7528\uff1b\u5728C2X\u6a21\u5f0f\u4e0b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8bca\u65ad\u5176\u4ed6\u65e7\u5f0f\u51fd\u6570\u5b9a\u4e49\u3002\nGCC\u73b0\u5728\u9ed8\u8ba4\u4e3a-fno-common\u3002\u56e0\u6b64\uff0c\u5bf9\u5404\u79cd\u76ee\u6807\u7684\u5168\u5c40\u53d8\u91cf\u8bbf\u95ee\u6548\u7387\u66f4\u9ad8\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5177\u6709\u591a\u4e2a\u8bd5\u63a2\u6027\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u73b0\u5728\u4f1a\u5bfc\u81f4\u94fe\u63a5\u5668\u9519\u8bef\u3002\u4f7f\u7528-fcommon\uff0c\u8fd9\u6837\u7684\u5b9a\u4e49\u5728\u94fe\u63a5\u671f\u95f4\u4ee5\u9759\u9ed8\u65b9\u5f0f\u5408\u5e76\u3002\n\u65b0\u8b66\u544a\uff1a-Wmismatted-Tags\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\uff0c\u8b66\u544a\u6709\u5173\u7ed3\u6784\u3001\u7c7b\u548c\u7c7b\u6a21\u677f\u7684\u58f0\u660e\u53ca\u5176\u4e13\u95e8\u5316\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u5b9a\u4e49\uff0c\u5219\u7c7b\u952e\u4e0e\u5b9a\u4e49\u6216\u7b2c\u4e00\u4e2a\u58f0\u660e\u90fd\u4e0d\u5339\u914d\u3002\u63d0\u4f9b\u8be5\u9009\u9879\u662f\u4e3a\u4e86\u7b80\u5316\u5bf9\u57fa\u4e8eWindows\u7684\u7f16\u8bd1\u5668\u7684\u53ef\u79fb\u690d\u6027\u3002\n-wredundant-tag\u9ed8\u8ba4\u7981\u7528\uff0c\u5728\u53ef\u4ee5\u6d88\u9664\u952e\u800c\u4e0d\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u6b67\u4e49\u7684\u4e0a\u4e0b\u6587\u4e2d\u8b66\u544a\u5197\u4f59\u7684class-key\u548cenum-key\u3002\nGCC 10\u4e2d\u7684\u51e0\u4e2a\u76ee\u6807(\u5305\u62ecAArch64\u3001ARM\u3001PowerPC ELFv2\u3001S/390\u548cItanium)\u6539\u53d8\u4e86\u6309\u503c\u4f20\u9012\u548c\u8fd4\u56de\u67d0\u4e9bC++\u7c7b\u7684ABI\u3002\u8fd9\u4e9b\u66f4\u6539\u5f71\u54cd\u5177\u6709\u96f6\u5927\u5c0f\u7684\u5b50\u5bf9\u8c61(\u7a7a\u57fa\u7c7b\uff0c\u6216\u5177\u6709[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u6570\u636e\u6210\u5458)\u7684\u7c7b\uff0c\u800c\u6240\u6709\u5176\u4ed6\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b(\u5728\u67d0\u4e9bABI\u89c4\u8303\u4e2d\u79f0\u4e3a\u540c\u6784\u805a\u5408\uff0c\u6216\u8005\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6210\u5458\uff0c\u5373\u5355\u4e2a\u5143\u7d20)\u3002\u5728-std=c++17\u548c-std=c++20\u6a21\u5f0f\u4e2d\uff0c\u57fa\u7c7b\u4e3a\u7a7a\u7684\u7c7b\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u5177\u6709\u5355\u4e2a\u5143\u7d20\u6216\u540c\u6784\u805a\u5408\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u65b9\u5f0f\u4f20\u9012(\u5728\u9519\u8bef\u7684\u5bc4\u5b58\u5668\u6216\u5728\u9519\u8bef\u7684\u5806\u6808\u5730\u5740)\u3002\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u4f7f\u7528-std=c++17\u548c-std=c++14ABI\u7f16\u8bd1\u7684\u4ee3\u7801\u4e0d\u517c\u5bb9\u3002\u6b64\u95ee\u9898\u5df2\u66f4\u6b63\uff0c\u5e76\u4e14\u5728\u90a3\u4e9bABI\u51b3\u7b56\u4e2d\u5ffd\u7565\u4e86\u7a7a\u57fa\uff0c\u56e0\u6b64\u4f7f\u7528-std=c++14\u548c-std=c++17\u7f16\u8bd1\u7684\u51fd\u6570\u73b0\u5728\u518d\u6b21\u4e0eABI\u517c\u5bb9\u3002\u793a\u4f8b\uff1astruct Empty{}\uff1bstruct S\uff1aEmpty{Float f\uff1b}\uff1bvoid f(S)\uff1b\u3002\u7c7b\u4f3c\u5730\uff0c\u5728\u5305\u542b\u4f7f\u7528C++20[[NO_UNIQUE_ADDRESS]]\u5c5e\u6027\u7684\u7c7b\u7c7b\u578b\u4e3a\u7a7a\u7684\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u7c7b\u4e2d\uff0c\u8fd9\u4e9b\u6210\u5458\u5728\u4f20\u9012\u51b3\u7b56\u7684ABI\u53c2\u6570\u4e2d\u6ca1\u6709\u88ab\u5ffd\u7565\u3002\u8fd9\u4e24\u79cdABI\u53d8\u5316\u73b0\u5728\u90fd\u88ab\u8bca\u65ad\u4e3a-Wpsabi\u3002\n\u73b0\u5728\u53ef\u4ee5\u4ece\u4efb\u4f55\u8fd4\u56de\u7b26\u53f7\u6216\u5143\u7ec4\u7684__\u7279\u5f81\u76f4\u63a5\u521b\u5efa\u522b\u540d\u3002\u4ee5\u524d\uff0c\u9700\u8981\u4f7f\u7528AliasSeq\u6765\u4e3a\u5b83\u4eec\u7684\u8fd4\u56de\u8bbe\u7f6e\u522b\u540d\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528__\u7279\u5f81(getLinkage\uff0c.)\u68c0\u6d4b\u4e3a\u7ed3\u6784\u3001\u7c7b\u6216\u63a5\u53e3\u6307\u5b9a\u7684ABI\u8bed\u8a00\u3002\u6dfb\u52a0\u4e86\u5bf9core.math.toPrec\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u3002\u8fd9\u4e9b\u5185\u90e8\u51fd\u6570\u4fdd\u8bc1\u5728\u4ee3\u7801\u4e2d\u7684\u6307\u5b9a\u70b9\u56db\u820d\u4e94\u5165\u5230\u7279\u5b9a\u7684\u6d6e\u70b9\u7cbe\u5ea6\u3002\n\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5bf9\u6742\u6ce8(\u5185\u8054)\u7684\u652f\u6301\u3002\u4ee5\u524d\uff0c\u6742\u6ce8\u53ef\u4ee5\u8bc6\u522b\uff0c\u4f46\u5bf9\u7f16\u8bd1\u6ca1\u6709\u5f71\u54cd\u3002\nASM\u64cd\u4f5c\u6570\u4e2d\u7684\u53ef\u9009\u62ec\u53f7\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u73b0\u5728\uff0c\u4f7f\u7528-M\u7f16\u8bd1\u65f6\uff0c\u6240\u6709\u5185\u5bb9\u5bfc\u5165\u7684\u6587\u4ef6\u90fd\u5305\u542b\u5728Make Dependency\u5217\u8868\u4e2d\u3002\n\u7531gcc.attribute\u6a21\u5757\u63d0\u4f9b\u7684\u7f16\u8bd1\u5668\u8bc6\u522b\u7684\u5c5e\u6027\u73b0\u5728\u5c06\u5728\u5e94\u7528\u4e8e\u51fd\u6570\u539f\u578b\u4ee5\u53ca\u5e94\u7528\u4e8e\u5b8c\u6574\u51fd\u6570\u58f0\u660e\u65f6\u751f\u6548\u3002\n\u6dfb\u52a0\u4e86--enable-libphobos-check\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u63a7\u5236\u662f\u5426\u5c06\u8fd0\u884c\u65f6\u68c0\u67e5\u7f16\u8bd1\u5230D\u8fd0\u884c\u65f6\u5e93\u4e2d\u3002\n\u6dfb\u52a0\u4e86--with-libphobos-druntime-only\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u6307\u793a\u662f\u53ea\u5c06\u6838\u5fc3D\u8fd0\u884c\u65f6\u5e93\u6784\u5efa\u5230libphobos\u4e2d\uff0c\u8fd8\u662f\u5c06\u6838\u5fc3\u5e93\u548c\u6807\u51c6\u5e93\u90fd\u6784\u5efa\u5230libphobos\u4e2d\u3002\n\u73b0\u5728\u652f\u6301OpenMP\u89c4\u83035.0\u7248\u7684use_device_addr\u3002\u8bf7\u6ce8\u610f\uff0c\u9664\u6b64\u4e4b\u5916\uff0cFortran\u7f16\u8bd1\u5668\u8fd8\u90e8\u5206\u652f\u6301OpenMP 4.5\uff1b\u7f3a\u5c11\u7684\u6700\u5927\u9879\u662f\u7ed3\u6784\u5143\u7d20\u6620\u5c04\u3002\n\u4f7f\u7528\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684I/O\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u5927\u5c0f\u5df2\u589e\u52a0\u52301048576\u3002\u73b0\u5728\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u683c\u5f0f\u5316\u6587\u4ef6\u548c\u672a\u683c\u5f0f\u5316\u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cfGFORTRAN_FORMACTED_BUFFER_SIZE\u548cGFORTRAN_UNFORMACTED_BUFFER_SIZE\u5206\u522b\u8bbe\u7f6e\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002\n\u5355\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u4f2a\u53c2\u6570\u5217\u8868\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u73b0\u5728\u4f1a\u88ab\u62d2\u7edd\uff0c\u5e76\u8fd4\u56de\u9519\u8bef\u3002\u4f7f\u7528\u65b0\u9009\u9879-fallow-argument-mismatch\u5c06\u8fd9\u4e9b\u9519\u8bef\u8f6c\u6362\u4e3a\u8b66\u544a\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-std=Legacy\u4e2d\u3002-Wargument-\u5df2\u5220\u9664\u4e0d\u5339\u914d\u3002\n\u5bf9BOZ\u6587\u5b57\u5e38\u91cf\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u66f4\u597d\u5730\u7b26\u5408Fortran 2008\u548c2018\u6807\u51c6\u3002\u5728\u8fd9\u4e9bFortran\u6807\u51c6\u4e2d\uff0cBOZ\u6587\u5b57\u5e38\u91cf\u662f\u65e0\u7c7b\u578b\u548c\u65e0\u7c7b\u578b\u7684\u5b9e\u4f53\u3002\u4f5c\u4e3a\u8fd4\u5de5\u7684\u4e00\u90e8\u5206\uff0cFortran\u6807\u51c6\u7684\u6709\u6587\u6863\u548c\u65e0\u6587\u6863\u7684\u6269\u5c55\u73b0\u5728\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u53d1\u51fa\u9519\u8bef\u3002\u5176\u4e2d\u4e00\u4e9b\u6269\u5c55\u53ef\u4ee5\u4e0e-fallow-invalid-boz\u4e00\u8d77\u4f7f\u7528\uff0c\u5176\u4e2d\u9519\u8bef\u4f1a\u964d\u7ea7\u4e3a\u8b66\u544a\uff0c\u5e76\u4e14\u4ee3\u7801\u4f1a\u50cf\u4ee5\u524d\u7684gfortran\u4e00\u6837\u8fdb\u884c\u7f16\u8bd1\u3002\n\u5728\u9664-Os\u4e4b\u5916\u7684\u4efb\u4f55\u4f18\u5316\u7ea7\u522b\uff0cgfortran\u73b0\u5728\u5bf9\u53c2\u6570\u4f7f\u7528\u5185\u8054\u6253\u5305\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u5e93\u4f8b\u7a0b\u3002\u5982\u679c\u6e90\u4ee3\u7801\u5305\u542b\u5927\u91cf\u9700\u8981\u91cd\u65b0\u6253\u5305\u7684\u53c2\u6570\uff0c\u5219\u4ee3\u7801\u5927\u5c0f\u6216\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u53d8\u5f97\u8fc7\u5927\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528-fno-inline-arg-pack\u6765\u7981\u7528\u5185\u8054\u53c2\u6570\u6253\u5305\u3002\n\u4f20\u7edf\u6269\u5c55\uff1a\u5bf9\u4e8e\u683c\u5f0f\u5316\u7684\u8f93\u5165/\u8f93\u51fa\uff0c\u5982\u679c\u7701\u7565\u4e86\u6570\u636e\u7f16\u8f91\u63cf\u8ff0\u7b26I\u3001F\u548cG\u4e4b\u540e\u7684\u663e\u5f0f\u5bbd\u5ea6\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5bbd\u5ea6\u3002\n\u683c\u5f0f\u89c4\u8303\u672b\u5c3e\u7684\u683c\u5f0f\u9879\u76ee\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u9017\u53f7\u540e\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u5185\u5bb9\u3002\u4f7f\u7528\u9009\u9879-FDEC-BLACK-FORMAT-ITEM\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-FDEC\u4e2d\u3002\n\u5df2\u6269\u5c55\u5bf9\u81ea\u52a8\u548c\u9759\u6001\u5c5e\u6027\u7684\u73b0\u6709\u652f\u6301\uff0c\u4ee5\u5141\u8bb8\u5728\u7b49\u4ef7\u8bed\u53e5\u4e2d\u4f7f\u7528\u5177\u6709\u81ea\u52a8\u5c5e\u6027\u7684\u53d8\u91cf\u3002\u4f7f\u7528-FDEC-STATIC\uff1b\u6b64\u9009\u9879\u7531-FDEC\u9690\u542b\u3002\n\u5141\u8bb8\u5728\u6570\u503c(\u6574\u6570\u3001\u5b9e\u6570\u6216\u590d\u6570)\u6216\u903b\u8f91\u53d8\u91cf\u7684\u8d4b\u503c\u548c\u6570\u636e\u8bed\u53e5\u4e2d\u4f7f\u7528\u5b57\u7b26\u6587\u5b57\u3002\u4f7f\u7528\u9009\u9879-fdec-char-Conversions\uff1b\u6b64\u9009\u9879\u9690\u542b\u5728-fdec\u4e2d\u3002\n\u5341\u8fdb\u5236\u6bd4\u8f83\uff0c\u5373\u5141\u8bb8\u4f7f\u7528\u970d\u5c14\u745e\u65af\u5e38\u91cf\u4e0e\u6574\u6570\u3001\u5b9e\u6570\u3001\u590d\u6570\u548c\u5b57\u7b26\u8868\u8fbe\u5f0f\u8fdb\u884c\u6bd4\u8f83\u3002\u4f7f\u7528\u9009\u9879-FDEC\u3002\n\u9519\u8bef\u548c\u8b66\u544a\u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u540d\u79f0\u73b0\u5728\u9664\u4e86\u79cd\u7c7b\u4e4b\u5916\u8fd8\u5305\u62eclen\uff1b*\u7528\u4e8e\u5047\u5b9a\u957f\u5ea6\u3002\u5982\u679c\u662f\u9ed8\u8ba4\u7c7b\u578b\uff0c\u5219\u7701\u7565\u8be5\u7c7b\u578b\u3002\u4f8b\u5982\uff1aCharacter(12)\u3001Character(6\uff0c4)\u3002\nCo_Broadcast\u73b0\u5728\u652f\u6301\u6d3e\u751f\u7c7b\u578b\u53d8\u91cf\uff0c\u5305\u62ec\u5177\u6709\u53ef\u5206\u914d\u7ec4\u4ef6\u7684\u5bf9\u8c61\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ef\u9009\u53c2\u6570STAT=\u548cERRMSG=\u5f53\u524d\u88ab\u5ffd\u7565\u3002\n\u5bf9\u6a21\u5757\u548c\u5b50\u6a21\u5757\u540d\u79f0\u7684\u5904\u7406\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4ee5\u5141\u8bb8\u6807\u51c6\u8981\u6c42\u768463\u4e2a\u5b57\u7b26\u7684\u5b8c\u6574\u957f\u5ea6\u3002\u4ee5\u524d\uff0c\u5982\u679c\u6a21\u5757\u3001\u5b50\u6a21\u5757\u548c\u51fd\u6570\u540d\u79f0\u7684\u603b\u957f\u5ea6\u8d85\u8fc7126\u4e2a\u5b57\u7b26\uff0c\u5219\u7b26\u53f7\u540d\u79f0\u4f1a\u88ab\u622a\u65ad\u3002\u56e0\u6b64\uff0c\u6b64\u66f4\u6539\u8fdd\u53cd\u4e86ABI\uff0c\u4f46\u4ec5\u9002\u7528\u4e8e\u8d85\u8fc7126\u4e2a\u5b57\u7b26\u9650\u5236\u7684\u60c5\u51b5\u3002\nAArch64\u548cARM\u7aef\u53e3\u73b0\u5728\u652f\u6301\u4e32\u8054\u7ec4\u4ef6\u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u8f93\u51fa\u7ea6\u675f\uff0c\u5982__GCC_ASM_FLAG_OUTPUTS__\u6240\u793a\u3002\u5728ARM\u4e0a\uff0c\u6b64\u529f\u80fd\u4ec5\u9002\u7528\u4e8eA32\u548cT32\u76ee\u6807\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u4e0e\u53ef\u4f38\u7f29\u5411\u91cf\u6269\u5c55(Scalable Vector Extension\uff0cSVE)\u76f8\u5173\u7684\u6539\u8fdb\u6709\u51e0\u4e2a\uff1a\u73b0\u5728\u652f\u6301SVE Acle\u7c7b\u578b\u548c\u5185\u90e8\u51fd\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u5934\u6587\u4ef6arm_sve.h\u8bbf\u95ee\u5b83\u4eec\u3002\n\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528ARM_SVE_VECTOR_BITS\u5c5e\u6027\u521b\u5efa\u56fa\u5b9a\u957f\u5ea6\u7684SVE\u7c7b\u578b\u3002\u4f8b\u5982\uff1a\n-MSVE-VECTOR-BITS=128\u73b0\u5728\u4e3a\u5c0f\u7aef\u76ee\u6807\u751f\u6210\u7279\u5b9a\u4e8e\u5411\u91cf\u957f\u5ea6\u7684\u4ee3\u7801\u3002\u5b83\u7ee7\u7eed\u4e3a\u5927\u7aef\u76ee\u6807\u751f\u6210\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5\u7684\u4ee3\u7801\uff0c\u5c31\u50cf\u4ee5\u524d\u7684\u7248\u672c\u5bf9\u6240\u6709\u76ee\u6807\u6240\u505a\u7684\u90a3\u6837\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u52a0\u8f7d\u548c\u622a\u65ad\u5b58\u50a8\uff0c\u5305\u62ec\u805a\u96c6\u52a0\u8f7d\u548c\u5206\u6563\u5b58\u50a8\u3002\n\u5411\u91cf\u5316\u5668\u73b0\u5728\u6bd4\u8f83\u4f7f\u7528SVE\u548cAdvanced SIMD\u8fdb\u884c\u77e2\u91cf\u5316\u7684\u6210\u672c\uff0c\u5e76\u5c1d\u8bd5\u9009\u62e9\u6700\u597d\u7684\u3002\u4ee5\u524d\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5b83\u603b\u662f\u4f7f\u7528SVE\u3002\n\u5982\u679c\u5411\u91cf\u5faa\u73af\u4f7f\u7528Advanced SIMD\u800c\u4e0d\u662fSVE\uff0c\u90a3\u4e48\u5411\u91cf\u5316\u5668\u73b0\u5728\u4f1a\u8003\u8651\u4f7f\u7528SVE\u6765\u5411\u91cf\u5316\u5269\u4f59\u5143\u7d20(\u201c\u6807\u91cf\u5c3e\u201d\u6216\u201c\u5c3e\u90e8\u201d)\u3002\n\u9664\u4e86\u8fd9\u4e9b\u7279\u5b9a\u70b9\u4e4b\u5916\uff0c\u5411\u91cf\u5316\u5668\u4f7f\u7528SVE\u7684\u65b9\u5f0f\u8fd8\u6709\u8bb8\u591a\u4e00\u822c\u6027\u7684\u6539\u8fdb\u3002\nmBranch-Protection=pac-ret\u9009\u9879\u73b0\u5728\u63a5\u53d7\u53ef\u9009\u7684\u53c2\u6570+b-key\u6269\u5c55\uff0c\u4ee5\u4f7f\u7528B-key\u800c\u4e0d\u662fA-key\u6267\u884c\u8fd4\u56de\u5730\u5740\u7b7e\u540d\u3002\n\u6dfb\u52a0\u4e86\u9009\u9879-mOutline-Atomics\uff0c\u4ee5\u5e2e\u52a9\u5728GNU/Linux\u7cfb\u7edf\u4e0a\u90e8\u7f72\u5927\u578b\u7cfb\u7edf\u6269\u5c55(LSE)\uff0c\u8be5\u7cfb\u7edf\u4ee5\u9762\u5411ARMv8-A\u7684\u57fa\u51c6\u67b6\u6784\u6784\u5efa\u3002\u5f53\u6307\u5b9a\u8be5\u9009\u9879\u65f6\uff0c\u5c06\u53d1\u51fa\u4ee3\u7801\u4ee5\u5728\u8fd0\u884c\u65f6\u68c0\u6d4bLSE\u6307\u4ee4\u7684\u5b58\u5728\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u6807\u51c6\u539f\u5b50\u64cd\u4f5c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6587\u6863\u3002\n\u73b0\u5728\u901a\u8fc7ALE\u5185\u90e8\u529f\u80fd\u652f\u6301\u4e8b\u52a1\u6027\u5185\u5b58\u6269\u5c55\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+tme\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+tme)\u3002\nArmv8.5-A\u4e2d\u7684\u8bb8\u591a\u529f\u80fd\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\u3002\u5176\u4e2d\u5305\u62ec\uff1a\u53ef\u901a\u8fc7(GCC 9.1\u4e2d\u5df2\u6709)+RNG\u9009\u9879\u6269\u5c55\u542f\u7528\u7684\u968f\u673a\u6570\u6307\u4ee4\u3002\n\u7c7b\u4f3c\u5730\uff0c\u4e0b\u9762\u7684Armv8.6-A\u7279\u6027\u73b0\u5728\u901a\u8fc7Acle\u5185\u90e8\u529f\u80fd\u5f97\u5230\u652f\u6301\uff1abfloat16\u6269\u5c55\u3002\u5f53\u9009\u62e9Armv8.6-A\u65f6\uff0c\u8be5\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528(\u4f8b\u5982by-march=armv8.6-a)\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528+bf16\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u53ca\u66f4\u9ad8\u7248\u672c\u542f\u7528\u5b83\u3002\n\u77e9\u9635\u4e58\u6cd5\u6269\u5c55\u3002\u6b64\u6269\u5c55\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5bf9\u5e94\u4e8e\u6bcf\u79cd\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\uff1a\u652f\u63018\u4f4d\u6574\u6570\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u9009\u62e9Armv8.6-A\u65f6\uff0c\u6b64\u6269\u5c55\u4f1a\u81ea\u52a8\u542f\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528+i8 mm\u9009\u9879\u6269\u5c55\u4e3aArmv8.2-A\u548c\u66f4\u9ad8\u7248\u672c\u542f\u7528\u3002\n\u652f\u630132\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f32 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u4e5f\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\n\u652f\u630164\u4f4d\u6d6e\u70b9\u77e9\u9635\u4e58\u6cd5\u6307\u4ee4\u3002\u53ef\u4ee5\u4f7f\u7528+f64 mm\u9009\u9879\u6269\u5c55\u6765\u542f\u7528\u6b64\u6269\u5c55\uff0c\u8fd9\u540c\u6837\u5177\u6709\u542f\u7528SVE\u7684\u6548\u679c\u3002\nSVE2\u73b0\u5728\u901a\u8fc7ACLE\u5185\u90e8\u529f\u80fd\u548c(\u5728\u6709\u9650\u8303\u56f4\u5185)\u81ea\u52a8\u77e2\u91cf\u5316\u6765\u652f\u6301\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7+sve2\u9009\u9879\u6269\u5c55\u6765\u542f\u7528(\u4f8b\u5982\uff0c-march=armv8.5-a+sve2)\u3002\u53ef\u4ee5\u901a\u8fc7+sve2-sm4\u3001+sve2-aes\u3001+sve2-sha3\u548c+sve2-bitperm\u542f\u7528\u5176\u4ed6\u6269\u5c55\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-a65ae\u6216\u7528\u4f5c\u7b49\u6548\u76ee\u6807\u5c5e\u6027\u548c\u7f16\u8bd1\u6307\u793a\u7684\u53c2\u6570\u3002\n\u6dfb\u52a0\u4e86\u5bf9FDPIC ABI\u7684\u652f\u6301\u3002\u5b83\u4f7f\u752864\u4f4d\u51fd\u6570\u63cf\u8ff0\u7b26\u6765\u8868\u793a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u5e76\u5728\u65e0MMU\u7684\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u4ee3\u7801\u5171\u4eab\u3002\u5bf9\u5e94\u7684\u76ee\u6807\u4e09\u5143\u7ec4\u662farm-uclinuxfdpiceabi\uff0cC\u5e93\u662fuclibc-ng\u3002\n\u5728\u4f7f\u752864\u4f4d\u6574\u6570\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5bf964\u4f4d\u6574\u6570\u64cd\u4f5c\u7684\u5904\u7406\u8fdb\u884c\u4e86\u663e\u7740\u7684\u4fee\u6539\u548c\u6539\u8fdb\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u5e76\u51cf\u5c11\u4e86\u5806\u6808\u4f7f\u7528\u91cf\u3002\u9009\u9879-mneon-for-64\u4f4d\u73b0\u5728\u5df2\u5f03\u7528\uff0c\u5e76\u5c06\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u6dfb\u52a0\u4e86\u5bf9\u4ee5\u4e0b\u5904\u7406\u5668\u7684\u652f\u6301(\u62ec\u53f7\u4e2d\u7684GCC\u6807\u8bc6\u7b26)\uff1aGCC\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4f5c-mcpu\u6216-mtune\u9009\u9879\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a-mcpu=corest-a77\u6216-mtune=cortical-m35p\u3002\n\u5bf9ALE\u6570\u636e\u5904\u7406\u5185\u90e8\u529f\u80fd\u7684\u652f\u6301\u5df2\u7ecf\u6269\u5c55\u5230\u5305\u62ec32\u4f4dSIMD\u3001\u9971\u548c\u7b97\u672f\u300116\u4f4d\u4e58\u6cd5\u548c\u5176\u4ed6\u65e8\u5728\u4f18\u5316DSP\u7b97\u6cd5\u7684\u76f8\u5173\u5185\u90e8\u529f\u80fd\u3002\n\u5728Thumb-1(V6m)\u4e2d\u6dfb\u52a0\u4e86\u5bf9-mpury-code\u7684\u652f\u6301\uff1a\u6b64M-profile\u529f\u80fd\u4e0d\u518d\u5c40\u9650\u4e8e\u5177\u6709movt\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0c-mcpu=corcorp-m0\u73b0\u5728\u652f\u6301\u6b64\u9009\u9879\u3002\n\u6dfb\u52a0\u4e86\u5bf9MVE\u6d4b\u8bd5\u7248Acle\u5185\u90e8\u7279\u6027\u7684\u652f\u6301\u3002\u53ef\u4ee5\u901a\u8fc7\u5305\u62ecarm_mve.h\u5934\u6587\u4ef6\u5e76\u4f20\u9012+mve\u6216+mve.fp\u9009\u9879\u6269\u5c55\u540d\u6765\u542f\u7528\u8fd9\u4e9b\u5185\u90e8\u529f\u80fd(\u4f8b\u5982\uff1a-march=armv8.1-m.main+mve)\u3002\n\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u529f\u80fd\u4fdd\u5b58\u6240\u6709\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\uff0c\u5305\u62ec\u96f6\u5f00\u9500\u73af\u8def\u4f7f\u7528\u7684\u6269\u5c55\u5bc4\u5b58\u5668\u548c\u8f85\u52a9\u5bc4\u5b58\u5668\u3002\n\u901a\u8fc7\u4f7f\u7528\u591a\u6761\u77ed\u6307\u4ee4\u63d0\u9ad8\u4ee3\u7801\u5927\u5c0f\u3002\n..", "note_en": "This page is a &#34;brief&#34; summary of some of the huge number of improvementsin GCC 10.You may also want to check out our Porting to GCC 10 page and the full GCC documentation.\n  An ABI incompatibility between C++14 and C++17 has been fixed. On some targets a class with a zero-sized subobject would be passed incorrectly when compiled as C++17 or C++20. See the  C++ notes below for more details.\n    The non-standard  std::__is_nullptr_t type trait is deprecated and will be removed from libstdc++ in a future release. The standard trait  std::is_null_pointer should be instead.\n  The minimum version of the  MPFR library required for building GCC has been increased to version 3.1.0 (released 2011-10-03).\n    The  --param allow-store-data-races internal parameter has been removed in favor of a new official option  -fallow-store-data-races. While default behavior is unchanged and the new option allows to correctly maintain a per compilation unit setting across link-time optimization, alteration of the default via  --param allow-store-data-races will now be diagnosed and build systems have to be adjusted accordingly.\n  Offloading to Heterogeneous System Architecture Intermediate Language (HSAIL) has been deprecated and will likely be removed in a future release.\n  New built-in functions:  The\t  __has_builtin\tbuilt-in preprocessor operator can be used to query support\tfor built-in functions provided by GCC and other compilers\tthat support it.\n  New command-line options:  -fprofile-partial-training\t can now be used to inform the compiler that code paths not covered by the\t training run should not be optimized for size.\n  -fprofile-reproducible\t controls level of reproducibility of profile gathered by\t   -fprofile-generate.\t This makes it possible to rebuild program\t with same outcome which is useful, for example, for distribution packages.\n  -fprofile-prefix-path\t can be used in combination with  -fprofile-generate=profile_dir and\t  -fprofile-use=profile_dir to inform GCC where the base\t directory of build source tree is in case it differs between instrumentation\t and optimized builds.\n  -fanalyzer\tenables a new static analysis pass and associated warnings.\tThis pass performs a time-consuming exploration of paths through\tthe code in the hope of detecting various common errors, such as\tdouble-free bugs. This option should be regarded as\t experimental in this release. In particular, analysis of non-C\tcode is unlikely to work.\n  Inter-procedural optimization improvements:  The inter-procedural scalar replacement of aggregates (IPA-SRA) pass\t was re-implemented to work at link-time and can now also remove\t computing and returning unused return values.\n  -finline-functions\t is now enabled at  -O2 and was retuned for better code\t size versus runtime performance trade-offs. Inliner heuristics was\t also significantly sped up to avoid negative impact to  -flto\t -O2 compile times.\n  Inliner heuristics and function cloning can now use value-range\t information to predict effectivity of individual transformations.\n  During link-time optimization the C++ One Definition Rule is used to\t increase precision of type based alias analysis.\n  Link-time optimization improvements:  A new binary   lto-dump has been added. The program can dump various information about a LTO bytecode object file.\n  Parallel phase of the LTO can automatically detect a running make&#39;s\tjobserver or can fall back to number of available cores.\n  The LTO bytecode can be compressed with   zstd algorithm. Configure script can automatically detect the  zstd support.\n  Most  --param values can now be specified at\t translation unit granularity. This includes all parameters controlling\t the inliner and other inter-procedural optimizations. Unlike earlier\t releases, GCC 10 will ignore parameters controlling optimizations\t specified at link-time and apply parameters specified at compile-time\t in the same manner as done for optimization flags.\n  Profile driven optimization improvements:  Using   -fprofile-values, an instrumented binary can track multiple\tvalues (up to 4) for e.g. indirect calls and provide more precise\tprofile information.\n  Version 2.6 of the  OpenACC specification is now supported in the C, C++ and Fortran compilers. See the  implementation status section on the OpenACC wiki page and the   run-time library documentation for further information.\n  GCC 10 adds a number of newly implemented  OpenMP 5.0 features on top of the GCC 9 release such as  conditional  lastprivate clause,  scan and  loop directives,  order(concurrent) and  use_device_addr clauses support,  if clause on  simd construct or partial support for the  declare\u00a0variant directive, getting closer to full support of the OpenMP 5.0 standard.\n  OpenMP and OpenACC now support  offloading to AMD Radeon (GCN) GPUs; supported are the third-generation Fiji ( fiji) and the fifth-generation VEGA 10/VEGA 20 ( gfx900 or  gfx906).\n  New attributes:  The  access function and type attribute has been added to describe how a function accesses objects passed to it by pointer or reference, and to associate such arguments with integer arguments denoting the objects&#39; sizes. The attribute is used to enable the detection of invalid accesses by user-defined functions, such as those diagnosed by  -Wstringop-overflow.\n  The  symver attribute can be used to bind symbols to specific version nodes on ELF platforms. This is preferred to using inline assembly with GNU as  symver directive because the latter is not compatible with link-time optimizations.\n  New warnings:  -Wstring-compare, enabled\tby  -Wextra, warns about equality and inequality\texpressions between zero and the result of a call to either\t strcmp and  strncmp that evaluate to\ta constant as a result of the length of one argument being greater\tthan the size of the array pointed to by the other.\n  -Wzero-length-bounds,\tenabled by  -Warray-bounds, warns about accesses to\telements of zero-length arrays that might overlap other members\tof the same object.\n  Enhancements to existing warnings:  -Warray-bounds\tdetects more out-of-bounds accesses to member arrays as well as\taccesses to elements of zero-length arrays.\n        -Wstringop-overflow\tdetects more out-of-bounds stores to member arrays including\tzero-length arrays, dynamically allocated objects and variable length\tarrays, as well as more instances of reads of unterminated character\tarrays by string built-in functions. The warning also detects\tout-of-bounds accesses by calls to user-defined functions declared\twith the new attribute  access.\n  Extended characters in identifiers may now be specified directly in the input encoding (UTF-8, by default), in addition to the UCN syntax ( \\uNNNN or  \\UNNNNNNNN) that is already supported:\n  Several new features from the upcoming C2X revision of the ISO C standard are supported with  -std=c2x and  -std=gnu2x. Some of these features are also supported as extensions when compiling for older language versions. In addition to the features listed, some features previously supported as extensions and now added to the C standard are enabled by default in C2X mode and not diagnosed with  -std=c2x -Wpedantic.  The  [[]] attribute syntax is supported, as in C++. Existing attributes can be used with this syntax in forms such as  [[gnu::const]]. The standard attributes  [[deprecated]],  [[fallthrough]] and  [[maybe_unused]] are supported.\n      When decimal floating-point arithmetic is supported,  &lt;float.h&gt; defines macros  DEC32_TRUE_MIN,  DEC64_TRUE_MIN and  DEC128_TRUE_MIN, in addition to the macros that were previously only defined if  __STDC_WANT_DEC_FP__ was defined before including  &lt;float.h&gt;.\n  In C2X mode, empty parentheses in a function definition give that function a type with a prototype for subsequent calls; other old-style function definitions are diagnosed by default in C2X mode.\n  GCC now defaults to  -fno-common. As a result, global variable accesses are more efficient on various targets. In C, global variables with multiple tentative definitions now result in linker errors. With  -fcommon such definitions are silently merged during linking.\n  New warnings:  -Wmismatched-tags,\tdisabled by default, warns about declarations of structs, classes,\tand class templates and their specializations with a class-key that\tdoes not match either the definition or the first declaration if no\tdefinition is provided. The option is provided to ease portability\tto Windows-based compilers.\n  -Wredundant-tags,\tdisabled by default, warns about redundant  class-key and\t enum-key in contexts where the key can be eliminated without\tcausing an syntactic ambiguity.\n              The ABI of passing and returning certain C++ classes by value changed on several targets in GCC 10, including  AArch64,  ARM,  PowerPC ELFv2,  S/390 and  Itanium. These changes affect classes with a zero-sized subobject (an empty base class, or data member with the  [[no_unique_address]] attribute) where all other non-static data members have the same type (this is called a &#34;homogeneous aggregate&#34; in some ABI specifications, or if there is only one such member, a &#34;single element&#34;). In  -std=c++17 and  -std=c++20 modes, classes with an empty base class were not considered to have a single element or to be a homogeneous aggregate, and so could be passed differently (in the wrong registers or at the wrong stack address). This could make code compiled with  -std=c++17 and  -std=c++14 ABI incompatible. This has been corrected and the empty bases are ignored in those ABI decisions, so functions compiled with  -std=c++14 and  -std=c++17 are now ABI compatible again. Example:  struct empty {}; struct S : empty { float f; }; void f(S);. Similarly, in classes containing non-static data members with empty class types using the C++20  [[no_unique_address]] attribute, those members weren&#39;t ignored in the ABI argument passing decisions as they should be. Both of these ABI changes are now diagnosed with  -Wpsabi.\n    Aliases can now be created directly from any  __traits that return symbols or tuples. Previously, an  AliasSeq was necessary in order to alias their return.\n  It is now possible to detect the language ABI specified for a struct, class, or interface using  __traits(getLinkage, ...).  Support for  core.math.toPrec intrinsics has been added. These intrinsics guarantee the rounding to specific floating-point precisions at specified points in the code.\n  Support for  pragma(inline) has been implemented. Previously the pragma was recognized, but had no effect on the compilation.\n  Optional parentheses in  asm operands are deprecated and will be removed in a future release.\n  All content imported files are now included in the make dependency list when compiling with  -M.\n  Compiler recognized attributes provided by the  gcc.attribute module will now take effect when applied to function prototypes as well as when applied to full function declarations.\n  Added a  --enable-libphobos-checking configure option to control whether run-time checks are compiled into the D runtime library.\n  Added a  --with-libphobos-druntime-only configure option to indicate whether to build only the core D runtime library, or both the core and standard libraries into libphobos.\n  use_device_addr of version 5.0 of the  OpenMP specification is now supported. Note that otherwise OpenMP 4.5 is partially supported in the Fortran compiler; the largest missing item is structure element mapping.\n  The default buffer size for I/O using unformatted files has been increased to 1048576. The buffer size for can now be set at runtime via the environment variables  GFORTRAN_FORMATTED_BUFFER_SIZE and  GFORTRAN_UNFORMATTED_BUFFER_SIZE for formatted and unformatted files, respectively.\n  Mismatches between actual and dummy argument lists in a single file are now rejected with an error. Use the new option  -fallow-argument-mismatch to turn these errors into warnings; this option is implied with  -std=legacy.  -Wargument-mismatch has been removed.\n  The handling of a BOZ literal constant has been reworked to provide better conformance to the Fortran 2008 and 2018 standards. In these Fortran standards, a BOZ literal constant is a typeless and kindless entity. As a part of the rework, documented and undocumented extensions to the Fortran standard now emit errors during compilation. Some of these extensions are permitted with the  -fallow-invalid-boz, where the error is degraded to a warning and the code is compiled as with older gfortran.\n  At any optimization level except -Os, gfortran now uses inline packing for arguments instead of calling a library routine. If the source contains a large number of arguments that need to be repacked, code size or time for compilation can become excessive. If that is the case,  -fno-inline-arg-packing can be used to disable inline argument packing.\n  Legacy extensions:  For formatted input/output, if the explicit widths after the data-edit descriptors  I,  F and  G have been omitted, default widths are used.\n  A blank format item at the end of a format specification, i.e. nothing following the final comma, is allowed. Use the option  -fdec-blank-format-item; this option is implied with  -fdec.\n  The existing support for  AUTOMATIC and  STATIC attributes has been extended to allow variables with the  AUTOMATIC attribute to be used in  EQUIVALENCE statements. Use  -fdec-static; this option is implied by  -fdec.\n  Allow character literals in assignments and  DATA statements for numeric ( INTEGER,  REAL, or  COMPLEX) or  LOGICAL variables. Use the option  -fdec-char-conversions; this option is implied with  -fdec.\n  DEC comparisons, i.e. allow Hollerith constants to be used in comparisons with  INTEGER,  REAL,  COMPLEX and  CHARACTER expressions. Use the option  -fdec.\n  Character type names in errors and warnings now include  len in addition to  kind;  * is used for assumed length. The kind is omitted if it is the default kind. Examples:  CHARACTER(12),  CHARACTER(6,4).\n  CO_BROADCAST now supports derived type variables including objects with allocatable components. In this case, the optional arguments  STAT= and  ERRMSG= are currently ignored.\n  The handling of module and submodule names has been reworked to allow the full 63-character length mandated by the standard. Previously symbol names were truncated if the combined length of module, submodule, and function name exceeded 126 characters. This change therefore breaks the ABI, but only for cases where this 126 character limit was exceeded.\n   The AArch64 and arm ports now support condition flag output constraints in inline assembly, as indicated by the  __GCC_ASM_FLAG_OUTPUTS__. On arm this feature is only available for A32 and T32 targets. Please refer to the documentation for more details.\n  There have been several improvements related to the Scalable Vector Extension (SVE):  The SVE ACLE types and intrinsics are now supported. They can be accessed using the header file  arm_sve.h.\n  It is now possible to create fixed-length SVE types using the  arm_sve_vector_bits attribute. For example:\n    -msve-vector-bits=128 now generates vector-length-specific code for little-endian targets. It continues to generate vector-length-agnostic code for big-endian targets, just as previous releases did for all targets.\n  The vectorizer is now able to use extending loads and truncating stores, including gather loads and scatter stores.\n  The vectorizer now compares the cost of vectorizing with SVE and vectorizing with Advanced SIMD and tries to pick the best one. Previously it would always use SVE if possible.\n  If a vector loop uses Advanced SIMD rather than SVE, the vectorizer now considers using SVE to vectorize the left-over elements (the \u201cscalar tail\u201d or \u201cepilog\u201d).\n  Besides these specific points, there have been many general improvements to the way that the vectorizer uses SVE.\n  The  -mbranch-protection=pac-ret option now accepts the optional argument  +b-key extension to perform return address signing with the B-key instead of the A-key.\n  The option  -moutline-atomics has been added to aid deployment of the Large System Extensions (LSE) on GNU/Linux systems built with a baseline architecture targeting Armv8-A. When the option is specified code is emitted to detect the presence of LSE instructions at runtime and use them for standard atomic operations. For more information please refer to the documentation.\n  The Transactional Memory Extension is now supported through ACLE intrinsics. It can be enabled through the  +tme option extension (for example,  -march=armv8.5-a+tme).\n  A number of features from Armv8.5-A are now supported through ACLE intrinsics. These include:  The random number instructions that can be enabled\tthrough the (already present in GCC 9.1)  +rng option\textension.\n  Similarly, the following Armv8.6-A features are now supported through ACLE intrinsics:  The bfloat16 extension. This extension is enabled automatically when Armv8.6-A is selected (such as by  -march=armv8.6-a). It can also be enabled for Armv8.2-A and later using the  +bf16 option extension.\n  The Matrix Multiply extension. This extension is split into three parts, one for each supported data type:\t Support for 8-bit integer matrix multiply instructions.\t This extension is enabled automatically when Armv8.6-A is\t selected. It can also be enabled for Armv8.2-A and later using\t the  +i8mm option extension.\n  Support for 32-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f32mm\t option extension, which also has the effect of enabling SVE.\n  Support for 64-bit floating-point matrix multiply instructions.\t This extension can be enabled using the  +f64mm\t option extension, which likewise has the effect of enabling SVE.\n  SVE2 is now supported through ACLE intrinsics and (to a limited extent) through autovectorization. It can be enabled through the  +sve2 option extension (for example,  -march=armv8.5-a+sve2). Additional extensions can be enabled through  +sve2-sm4,  +sve2-aes,  +sve2-sha3 and  +sve2-bitperm.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-a65ae or as arguments to the equivalent target attributes and pragmas.\n  Support for the FDPIC ABI has been added. It uses 64-bit function descriptors to represent pointers to functions, and enables code sharing on MMU-less systems. The corresponding target triple is  arm-uclinuxfdpiceabi, and the C library is uclibc-ng.\n    The handling of 64-bit integer operations has been significantly reworked and improved leading to improved performance and reduced stack usage when using 64-bit integral data types. The option  -mneon-for-64bits is now deprecated and will be removed in a future release.\n  Support has been added for the following processors (GCC identifiers in parentheses):   The GCC identifiers can be used as arguments to the  -mcpu or  -mtune options, for example:  -mcpu=cortex-a77 or  -mtune=cortex-m35p.\n  Support has been extended for the ACLE   data-processing intrinsics to include 32-bit SIMD, saturating arithmetic, 16-bit multiplication and other related intrinsics aimed at DSP algorithm optimization.\n  Support for  -mpure-code in Thumb-1 (v6m) has been added: this M-profile feature is no longer restricted to targets with  MOVT. For example,  -mcpu=cortex-m0 now supports this option.\n      Support for the   MVE beta ACLE intrinsics has been added. These intrinsics can be enabled by including the arm_mve.h header file and passing the  +mve  or  +mve.fp  option extensions (for example:  -march=armv8.1-m.main+mve ).\n    The interrupt service routine functions save all used registers, including extension registers and auxiliary registers used by Zero Overhead Loops.\n  Improve code size by using multiple short instructi\n......", "posttime": "2020-05-17 06:49:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6dd8\u6c70,gcc", "title": "GCC\u88ab\u6dd8\u6c70\u51fa\u5c40", "title_en": "GCC 10.1 Is Out", "transed": 1, "url": "https://gcc.gnu.org/gcc-10/changes.html", "via": "", "real_tags": ["\u6dd8\u6c70", "gcc"]}, {"category": "", "categoryclass": "", "imagename": "a437c9bce657fa83fcd2aaae9537d6b3.jpeg", "infoid": 1002451, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u8bf4\uff0c\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u7684\u4e00\u4f4d\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u5df2\u7ecf\u89e3\u51b3\u4e86\u5047\u8bbe\u66f2\u901f\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2a\u6096\u8bba\u3002\nAlcubierre\u9a71\u52a8\u5668\u4f7f\u7528\u5de8\u5927\u7684\u80fd\u91cf\u6765\u5236\u9020\u4e00\u79cd\u6298\u53e0\u5f0f\u7684\u53e3\u888b\u5c3a\u5bf8\u3002\n\u7f8e\u56fd\u5b87\u822a\u5c40\u771f\u7684\u5728\u7814\u7a76\u3002\u3002\u3002\u66f2\u901f\u9a71\u52a8\u5668\uff1f\u4e00\u4efd\u5185\u90e8\u53ef\u884c\u6027\u62a5\u544a\u8868\u660e\uff0c\u8be5\u673a\u6784\u53ef\u80fd\u662f\uff0c\u6216\u8005\u81f3\u5c11\u5728\u6298\u53e0\u7a7a\u95f4\u65c5\u884c\u7684\u60f3\u6cd5\u662fNASA\u661f\u9645\u592a\u7a7a\u98de\u884c\u83dc\u5355\u7684\u4e00\u90e8\u5206\u3002\n\u5728\u8fd9\u4efd\u62a5\u544a\u4e2d\uff0c\u9ad8\u7ea7\u63a8\u8fdb\u7269\u7406\u5b66\u5bb6\u54c8\u7f57\u5fb7\u00b7\u201c\u6851\u5c3c\u201d\u00b7\u6000\u7279\u89e3\u91ca\u4e86\u7406\u8bba\u7269\u7406\u5b66\u5bb6(\u548c\u540c\u884c)\u7c73\u683c\u5c14\u00b7\u963f\u5c14\u5e93\u6bd4\u5c14\u7684\u89c2\u70b9\u3002\u7136\u540e\uff0c\u4ed6\u63cf\u8ff0\u4e86\u963f\u5c14\u5e93\u6bd4\u57c3\u5c14\u5de5\u4f5c\u4e2d\u7684\u4e00\u4e2a\u201c\u6096\u8bba\u201d\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u6096\u8bba\u6765\u5efa\u7acb\u4e00\u4e2a\u5de5\u4f5c\u6a21\u578b\u3002\n\u53e3\u8bed\u5316\u7684\u672f\u8bed\u201c\u66f2\u901f\u9a71\u52a8\u201d\u6765\u81ea\u79d1\u5e7b\u5c0f\u8bf4\uff0c\u5b83\u6307\u7684\u662f\u7b26\u5408\u7231\u56e0\u65af\u5766\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u4e9a\u5149\u901f(\u4f4e\u4e8e\u5149\u901f)\u65c5\u884c\u7684\u6982\u5ff5\uff0c\u4f46\u4ecd\u7136\u5c06\u901f\u5ea6\u63a8\u5230\u7406\u8bba\u4e0a\u53ef\u80fd\u7684\u7edd\u5bf9\u6700\u5927\u503c\u3002\u5728\u201c\u661f\u9645\u8ff7\u822a\u201d\u7684\u7ecf\u5178\u4e2d\uff0c\u6e10\u8fdb\u5f0f\u7684\u8bbe\u8ba1\u8d8a\u6765\u8d8a\u63a5\u8fd1\u4e00\u4e2a\u5047\u8bbe\u7684\u969c\u788d--\u8fd9\u5c31\u662f\u771f\u6b63\u7684\u79d1\u5b66\u5bb6\u4eec\u4e0d\u65ad\u5411\u7edd\u5bf9\u96f6\u5ea6\u5f00\u51ff\u7684\u65b9\u5f0f\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5149\u901f\u662f\u969c\u788d\u3002\nAlcubierre\u9a71\u52a8\u5668\u7684\u5de5\u4f5c\u539f\u7406\u5c31\u50cf\u662f\u7ecf\u5178\u6d3e\u5bf9\u628a\u620f\u7684\u7269\u7406\u7248\u672c\u3002\u5b87\u5b99\u98de\u8239\u5750\u5728\u65f6\u7a7a\u4e2d\uff0c\u800c\u79d1\u5b66\u5c06\u9762\u6599\u4ece\u5b83\u524d\u9762\u62c9\u5230\u5b83\u540e\u9762\uff0c\u5c31\u50cf\u4e00\u5757\u684c\u5e03\u4ece\u94fa\u5f00\u7684\u76d8\u5b50\u4e0b\u9762\u62c9\u51fa\u6765\u4e00\u6837\u3002\u6000\u7279\u89e3\u91ca\u8bf4\uff1a\n\u201cAlcubierre\u6240\u63cf\u8ff0\u7684\u64cd\u4f5c\u6982\u5ff5\u662f\uff0c\u822a\u5929\u5668\u5c06\u4f7f\u7528\u4e00\u4e9b\u4f20\u7edf\u7684\u63a8\u8fdb\u7cfb\u7edf\u79bb\u5f00\u8d77\u59cb\u70b9(\u4f8b\u5982\u5730\u7403)\uff0c\u5e76\u884c\u9a76\u4e00\u6bb5\u8ddd\u79bbd\uff0c\u7136\u540e\u4f7f\u98de\u8239\u76f8\u5bf9\u4e8e\u51fa\u53d1\u70b9\u505c\u4e0b\u6765\u3002\u201d\u78c1\u573a\u4f1a\u6253\u5f00\uff0c\u98de\u8239\u5c31\u4f1a\u8fc5\u901f\u98de\u5411\u5b83\u7684\u6052\u661f\u76ee\u7684\u5730\uff0c\u4e0d\u4f1a\u5728\u5c40\u90e8\u7a81\u7834\u5149\u901f\uff0c\u4f46\u4f1a\u5728\u4efb\u610f\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6574\u4e2a\u8ddd\u79bb\u3002\u201c\u3002\nAlcubierre\u7684\u7406\u8bba\u53ef\u4ee5\u8ffd\u6eaf\u52301994\u5e74\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u7269\u7406\u5b66\u5bb6\u4eec\u5c31\u4e00\u76f4\u628a\u5b83\u4f5c\u4e3a\u8fdb\u4e00\u6b65\u8ba8\u8bba\u7684\u8d77\u70b9\u3002\u901a\u8fc7\u521b\u9020\u4e00\u79cd\u8896\u73cd\u4e16\u754c\uff0c\u5b87\u5b99\u98de\u8239\u4f3c\u4e4e\u53ef\u4ee5\u5728\u7269\u7406\u4e4b\u5916\u8fd0\u884c\uff0c\u7269\u7406\u5b9a\u5f8b\u53ef\u4ee5\u88ab\u56de\u907f-\u81f3\u5c11\u7406\u8bba\u662f\u8fd9\u6837\u7684\u3002\n\u8fd9\u5176\u4e2d\u6709\u4ec0\u4e48\u77db\u76fe\u4e4b\u5904\u5462\uff1f\u6000\u7279\u662f\u8fd9\u6837\u63cf\u8ff0\u7684\uff1a\u201c\u80fd\u91cf\u5bc6\u5ea6\u542f\u52a8\u65f6\uff0c+x\u8f74\u65b9\u5411\u7684\u9009\u62e9\u5728\u6570\u5b66\u4e0a\u662f\u4efb\u610f\u7684\uff0c\u90a3\u4e48\u822a\u5929\u5668\u600e\u4e48\u2018\u77e5\u9053\u2019\u8be5\u5f80\u54ea\u4e2a\u65b9\u5411\u8d70\u5462\uff1f\u201d\u79d1\u5e7b\u5c0f\u8bf4\u901a\u8fc7\u53d1\u660e\u4e00\u4e2a\u201c\u7a33\u5b9a\u7684\u866b\u6d1e\u201d\u89e3\u51b3\u4e86\u8fd9\u4e2a\u6096\u8bba\uff0c\u4f46\u662f\u6000\u7279\u4e0d\u80fd\u9a7e\u9a76\u4e00\u67b6\u5929\u795e(Deus Ex Machina)\u53bb\u534a\u4eba\u9a6c\u5ea7\u963f\u5c14\u6cd5\u661f(Alpha Centauri)\u3002\n\u76f8\u53cd\uff0c\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u7565\u6709\u4e0d\u540c\u7684\u8303\u4f8b\uff1a\u201c\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u64cd\u4f5c\u6982\u5ff5\u4e2d\uff0c\u822a\u5929\u5668\u79bb\u5f00\u5730\u7403\uff0c\u5efa\u7acb\u4e00\u4e2a\u521d\u59cb\u7684\u4e9a\u5149\u901f\uff0c\u7136\u540e\u542f\u52a8\u78c1\u573a\u3002\u5f53\u6fc0\u6d3b\u65f6\uff0c\u78c1\u573a\u7684\u52a9\u63a8\u4f5c\u7528\u4e8e\u521d\u59cb\u901f\u5ea6\uff0c\u4f5c\u4e3a\u6807\u91cf\u4e58\u6570\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u9ad8\u7684\u8868\u89c2\u901f\u5ea6\uff0c\u201c\u6000\u7279\u89e3\u91ca\u8bf4\u3002\n\u8fd9\u8258\u8239\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u7136\u540e\u542f\u52a8\u66f2\u901f\u9a71\u52a8\u5668\uff0c\u800c\u662f\u4f7f\u7528\u6447\u6446\u542f\u52a8\u4f5c\u4e3a\u65b9\u5411\u63d0\u793a\u3002\n\u6211\u4eec\u8ba4\u4e3a\u66f2\u901f\u662f\u5b9e\u73b0\u9065\u8fdc\u661f\u9645\u65c5\u884c\u7684\u552f\u4e00\u9014\u5f84\u3002\u6000\u7279\u5c06\u91cd\u70b9\u653e\u5728\u4e86\u4f5c\u54c1\u4e2d\u7684\u4e00\u4e2a\u6570\u5b66\u6096\u8bba\u4e0a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u969c\u788d\u3002\n\u4ed6\u8ba4\u4e3a\uff0c\u66f2\u901f\u7684\u8bd5\u9a8c\u573a\u53ef\u80fd\u79bb\u6211\u4eec\u5bb6\u66f4\u8fd1\u3002\u4ed6\u89e3\u91ca\u8bf4\uff1a\u201c\u66f2\u901f\u63a8\u8fdb\u5668\u7684\u60f3\u6cd5\u53ef\u80fd\u4f1a\u5728\u56fd\u5185\u2018\u6f5c\u610f\u8bc6\u2019\u6709\u4e00\u4e9b\u5353\u6709\u6210\u6548\u7684\u5e94\u7528\uff0c\u8ba9\u5b83\u5728\u6210\u4e3a\u771f\u6b63\u7684\u661f\u9645\u63a8\u8fdb\u5668\u7cfb\u7edf\u4e4b\u524d\u6210\u719f\u8d77\u6765\u3002\u201d\n\u5982\u679c\u79d1\u5b66\u5bb6\u80fd\u591f\u5236\u9020\u51fa\u963f\u5c14\u5e93\u6bd4\u5c14\u63a8\u8fdb\u5668\u6240\u9700\u7684\u6240\u8c13\u201c\u8d1f\u8d28\u91cf\u201d\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u90e8\u7f72\u5728\u5730\u7403\u7684\u5927\u6c14\u5c42\u4e2d\u3002\n\u6b64\u5185\u5bb9\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u4ee5\u5e2e\u52a9\u7528\u6237\u63d0\u4f9b\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728piano.io\u4e0a\u627e\u5230\u6709\u5173\u6b64\u5185\u5bb9\u548c\u7c7b\u4f3c\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "A NASA propulsion physicist has, he says,  resolved a paradox in a hypothetical warp drive.\n The Alcubierre drive  uses a huge amount of energy to make a sort of fold-like pocket dimension.\n   Is NASA really working on . . . a  warp drive? An  internal feasibility report suggests the agency might be, or at least that the idea of traveling through folded space is part of the NASA interstellar spaceflight menu.\n  In the report, advanced propulsion physicist Harold \u201cSonny\u201d White explains the ideas of theoretical physicist (and peer) Miguel Alcubierre. He then describes a \u201cparadox\u201d in Alcubierre\u2019s work, and how that paradox might be resolved to make a working model.\n   The colloquial term \u201cwarp drive\u201d has come from science fiction, and it refers to the idea of sub-luminal (less than the speed of light) travel that conforms to Einstein\u2019s theory of general relativity, but still pushes speed to absolute maximum that\u2019s theoretically possible. In the  Star Trek canon, progressive designs come closer and closer to a hypothetical barrier\u2014the way real scientists continue to hew closer and closer to absolute zero. In real life, light speed is the barrier.\n The Alcubierre drive works like a physics version of a classic party trick. The spaceship sits in spacetime while science pulls the fabric from in front of it to behind it, like a tablecloth pulled out from under a full spread of dishes. White explains:\n \u201cThe concept of operations as described by Alcubierre is that the spacecraft would depart the point of origin (e.g. earth) using some conventional propulsion system and travel a distance  d, then bring the craft to a stop relative to the departure point. The field would be turned on and the craft would zip off to its stellar destination, never locally breaking the speed of light, but covering the distance in an arbitrarily short period of time just the same.\u201d\n Alcubierre\u2019s theory dates to 1994, and physicists have used it as a jumping-off point for further discussion ever since. By creating a kind of pocket world where a spaceship can operate seemingly outside of physics, the  laws of physics can be sidestepped\u2014or so the theory goes.\n What\u2019s the paradox? White describes it this way: \u201cWhen the energy density is initiated, the choice in direction of the +x-axis is mathematically arbitrary, so how does the spacecraft \u2018know\u2019 which direction to go?\u201d Sci-fi has solved this paradox by inventing a \u201cstable wormhole,\u201d but White can\u2019t fly a  deus ex machina to Alpha Centauri.\n  Instead, he suggests a slightly different paradigm: \u201cIn this modified concept of operations, the spacecraft departs earth and establishes an initial sub-luminal velocity, then initiates the field. When active, the field\u2019s boost acts on the initial velocity as a scalar multiplier resulting in a much higher apparent speed,\u201d White explains.\n Instead of coming to a stop and then engaging the warp drive, the ship would use a rolling start as a directional cue.\n   We think of warp speed as, well, the only way faraway interstellar travel will ever be feasible. And White has focused on one mathematical paradox within the work, but that\u2019s not the only such obstacle.\n He suggests the proving ground for warp speed could be, well, closer to home. \u201c[T]he idea of a warp drive may have some fruitful domestic applications \u2018subliminally,\u2019 allowing it to be matured before it is engaged as a true interstellar drive system,\u201d he explains.\n If scientists can make the so-called \u201cnegative mass\u201d required for an Alcubierre drive, even a tiny example could be deployed within Earth\u2019s atmosphere.\n   This content is created and maintained by a third party, and imported onto this page to help users provide their email addresses. You may be able to find more information about this and similar content at piano.io", "posttime": "2020-05-17 06:35:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "nasa,\u66f2\u901f,working", "title": "\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\u771f\u7684\u5728\u7814\u7a76\u66f2\u901f\u9a71\u52a8\u5668\u5417\uff1f", "title_en": "Is NASA Actually Working On a Warp Drive?", "transed": 1, "url": "https://www.popularmechanics.com/science/a32449240/nasa-warp-drive-space-time/", "via": "", "real_tags": ["nasa", "\u66f2\u901f", "working"]}, {"category": "", "categoryclass": "", "imagename": "37516a74d518642ad21ef3f8455decb3.png", "infoid": 1002450, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0cApache Kafka\u00ae\u4f7f\u7528Apache zooKeeper\u2122\u6765\u5b58\u50a8\u5176\u5143\u6570\u636e\u3002\u5206\u533a\u4f4d\u7f6e\u548c\u4e3b\u9898\u914d\u7f6e\u7b49\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e4b\u5916\uff0c\u5b58\u50a8\u5728\u5355\u72ec\u7684ZooKeeper\u96c6\u7fa4\u4e2d\u3002\u57282019\u5e74\uff0c\u6211\u4eec\u6982\u8ff0\u4e86\u4e00\u4e2a\u8ba1\u5212\uff0c\u6253\u7834\u8fd9\u79cd\u4f9d\u8d56\uff0c\u5c06\u5143\u6570\u636e\u7ba1\u7406\u5f15\u5165\u5361\u592b\u5361\u672c\u8eab\u3002\n\u90a3\u4e48\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u6709\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u95ee\u9898\u4e0d\u5728\u4e8e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u672c\u8eab\uff0c\u800c\u5728\u4e8e\u5916\u90e8\u5143\u6570\u636e\u7ba1\u7406\u7684\u6982\u5ff5\u3002\n\u6709\u4e24\u4e2a\u7cfb\u7edf\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u91cd\u590d\u3002\u6bd5\u7adf\uff0cKafka\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u53d1\u5e03/\u8ba2\u9605API\u3002ZooKeeper\u662f\u4e00\u4e2a\u590d\u5236\u7684\u5206\u5e03\u5f0f\u65e5\u5fd7\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edfAPI\u3002\u6bcf\u79cd\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u901a\u4fe1\u3001\u5b89\u5168\u3001\u76d1\u63a7\u548c\u914d\u7f6e\u65b9\u5f0f\u3002\u5bf9\u4e8e\u64cd\u4f5c\u5458\u6765\u8bf4\uff0c\u62e5\u6709\u4e24\u4e2a\u7cfb\u7edf\u5927\u81f4\u4f1a\u4f7f\u7ed3\u679c\u7684\u603b\u590d\u6742\u6027\u589e\u52a0\u4e00\u500d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u9661\u5ced\u5b66\u4e60\u66f2\u7ebf\uff0c\u5e76\u589e\u52a0\u67d0\u4e9b\u9519\u8bef\u914d\u7f6e\u5bfc\u81f4\u5b89\u5168\u6f0f\u6d1e\u7684\u98ce\u9669\u3002\n\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u6548\u7387\u4e0d\u9ad8\u3002\u6211\u4eec\u81f3\u5c11\u8fd0\u884c\u4e09\u4e2a\u989d\u5916\u7684Java\u8fdb\u7a0b\uff0c\u6709\u65f6\u751a\u81f3\u66f4\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230Kafka\u96c6\u7fa4\u7684ZooKeeper\u8282\u70b9\u548cKafka\u8282\u70b9\u4e00\u6837\u591a\uff01\u53e6\u5916\uff0cZooKeeper\u4e2d\u7684\u6570\u636e\u8fd8\u9700\u8981\u53cd\u6620\u5728Kafka\u63a7\u5236\u5668\u4e0a\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53cc\u91cd\u7f13\u5b58\u3002\n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u9650\u5236\u4e86Kafka\u7684\u53ef\u4f38\u7f29\u6027\u3002\u5f53Kafka\u96c6\u7fa4\u6b63\u5728\u542f\u52a8\uff0c\u6216\u8005\u6b63\u5728\u9009\u62e9\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u52a0\u8f7d\u96c6\u7fa4\u7684\u5b8c\u6574\u72b6\u6001\u3002\u968f\u7740\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u52a0\uff0c\u6b64\u52a0\u8f7d\u8fc7\u7a0b\u7684\u957f\u5ea6\u4e5f\u4f1a\u589e\u52a0\u3002\u8fd9\u9650\u5236\u4e86Kafka\u53ef\u4ee5\u5b58\u50a8\u7684\u5206\u533a\u6570\u91cf\u3002\n\u6700\u540e\uff0c\u5728\u5916\u90e8\u5b58\u50a8\u5143\u6570\u636e\u53ef\u80fd\u4f1a\u4f7f\u63a7\u5236\u5668\u7684\u5185\u5b58\u5185\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u4e0d\u540c\u6b65\u3002\u63a7\u5236\u5668\u7684\u6d3b\u5ea6\u89c6\u56fe(\u5728\u96c6\u7fa4\u4e2d)\u4e5f\u53ef\u80fd\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u89c6\u56fe\u4e0d\u540c\u3002\nKIP-500\u6982\u8ff0\u4e86\u5728\u5361\u592b\u5361\u4e2d\u5904\u7406\u5143\u6570\u636e\u7684\u66f4\u597d\u65b9\u6cd5\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u201cKafka on Kafka\u201d\uff0c\u56e0\u4e3a\u5b83\u6d89\u53ca\u5230\u5c06Kafka\u7684\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u672c\u8eab\u4e2d\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728ZooKeeper\u7b49\u5916\u90e8\u7cfb\u7edf\u4e2d\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0c\u5143\u6570\u636e\u5c06\u5b58\u50a8\u5728Kafka\u5185\u90e8\u7684\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u63a7\u5236\u5668\u5c06\u662f\u6b64\u5206\u533a\u7684\u9886\u5bfc\u8005\u3002\u5c06\u4e0d\u4f1a\u6709\u5916\u90e8\u5143\u6570\u636e\u7cfb\u7edf\u9700\u8981\u914d\u7f6e\u548c\u7ba1\u7406\uff0c\u53ea\u6709\u5361\u592b\u5361\u672c\u8eab\u3002\n\u6211\u4eec\u5c06\u5143\u6570\u636e\u89c6\u4e3a\u65e5\u5fd7\u3002\u9700\u8981\u6700\u65b0\u66f4\u65b0\u7684\u4ee3\u7406\u53ea\u80fd\u8bfb\u53d6\u65e5\u5fd7\u7684\u5c3e\u90e8\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u9700\u8981\u6700\u65b0\u65e5\u5fd7\u6761\u76ee\u7684\u4f7f\u7528\u8005\u53ea\u9700\u8981\u8bfb\u53d6\u65e5\u5fd7\u7684\u6700\u672b\u5c3e\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u65e5\u5fd7\u3002\u4ee3\u7406\u8fd8\u5c06\u80fd\u591f\u5728\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u65f6\u6301\u4e45\u4fdd\u5b58\u5b83\u4eec\u7684\u5143\u6570\u636e\u7f13\u5b58\u3002\nKafka\u96c6\u7fa4\u9009\u4e3e\u63a7\u5236\u5668\u8282\u70b9\u6765\u7ba1\u7406\u5206\u533a\u9886\u5bfc\u8005\u548c\u7fa4\u96c6\u5143\u6570\u636e\u3002\u6211\u4eec\u62e5\u6709\u7684\u5206\u533a\u548c\u5143\u6570\u636e\u8d8a\u591a\uff0c\u63a7\u5236\u5668\u53ef\u4f38\u7f29\u6027\u5c31\u53d8\u5f97\u8d8a\u91cd\u8981\u3002\u6211\u4eec\u5e0c\u671b\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u4e0e\u4e3b\u9898\u6216\u5206\u533a\u7684\u6570\u91cf\u6210\u7ebf\u6027\u6bd4\u4f8b\u7684\u65f6\u95f4\u7684\u64cd\u4f5c\u6570\u91cf\u3002\n\u4e00\u79cd\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u63a7\u5236\u5668\u6545\u969c\u8f6c\u79fb\u3002\u76ee\u524d\uff0c\u5f53Kafka\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u5b83\u9700\u8981\u52a0\u8f7d\u5b8c\u6574\u7684\u96c6\u7fa4\u72b6\u6001\u624d\u80fd\u7ee7\u7eed\u3002\u968f\u7740\u7fa4\u96c6\u5143\u6570\u636e\u6570\u91cf\u7684\u589e\u957f\uff0c\u6b64\u8fc7\u7a0b\u9700\u8981\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u957f\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728KIP-500\u4e4b\u540e\u7684\u4e16\u754c\u4e2d\uff0c\u5c06\u6709\u51e0\u4e2a\u5907\u7528\u63a7\u5236\u5668\uff0c\u5b83\u4eec\u968f\u65f6\u51c6\u5907\u5728\u6d3b\u52a8\u63a7\u5236\u5668\u79bb\u5f00\u65f6\u63a5\u624b\u3002\u8fd9\u4e9b\u5907\u7528\u63a7\u5236\u5668\u53ea\u662f\u5143\u6570\u636e\u5206\u533a\u7684RAFT Quorum\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u5728\u9009\u4e3e\u65b0\u7684\u63a7\u5236\u5668\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7ecf\u5386\u6f2b\u957f\u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002\nKIP-500\u5c06\u52a0\u5feb\u4e3b\u9898\u7684\u521b\u5efa\u548c\u5220\u9664\u3002\u76ee\u524d\uff0c\u5728\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u65f6\uff0c\u63a7\u5236\u5668\u5fc5\u987b\u4eceZooKeeper\u91cd\u65b0\u52a0\u8f7d\u96c6\u7fa4\u4e2d\u6240\u6709\u4e3b\u9898\u540d\u79f0\u7684\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5f53\u96c6\u7fa4\u4e2d\u7684\u4e3b\u9898\u96c6\u53d1\u751f\u66f4\u6539\u65f6\uff0cZooKeeper\u4f1a\u901a\u77e5\u6211\u4eec\uff0c\u4f46\u5b83\u5e76\u4e0d\u786e\u5207\u5730\u544a\u8bc9\u6211\u4eec\u6dfb\u52a0\u6216\u5220\u9664\u4e86\u54ea\u4e9b\u4e3b\u9898\u3002\u76f8\u53cd\uff0c\u5728\u540eKIP-500\u4e16\u754c\u4e2d\u521b\u5efa\u6216\u5220\u9664\u4e3b\u9898\u53ea\u6d89\u53ca\u5728\u5143\u6570\u636e\u5206\u533a\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u6761\u76ee\uff0c\u8fd9\u662f\u4e00\u4e2aO(1)\u64cd\u4f5c\u3002\n\u5143\u6570\u636e\u53ef\u4f38\u7f29\u6027\u662f\u672a\u6765\u6269\u5c55Kafka\u7684\u5173\u952e\u3002\u6211\u4eec\u9884\u8ba1\u5355\u4e2aKafka\u96c6\u7fa4\u6700\u7ec8\u80fd\u591f\u652f\u6301100\u4e07\u4e2a\u6216\u66f4\u591a\u5206\u533a\u3002\n\u4f5c\u4e3aKafka\u7248\u672c\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u7684\u51e0\u4e2a\u7ba1\u7406\u5de5\u5177\u4ecd\u7136\u5141\u8bb8\u4e0e\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u901a\u4fe1\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4ecd\u7136\u6709\u4e00\u4e24\u4e2a\u64cd\u4f5c\u4e0d\u80fd\u5b8c\u6210\uff0c\u9664\u975e\u901a\u8fc7\u8fd9\u79cd\u76f4\u63a5\u7684\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u901a\u4fe1\u3002\n\u6211\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u7f29\u5c0f\u8fd9\u4e9b\u5dee\u8ddd\u3002\u5f88\u5feb\uff0c\u5bf9\u4e8e\u4ee5\u524d\u9700\u8981\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u76f4\u63a5\u8bbf\u95ee\u7684\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u90fd\u5c06\u6709\u4e00\u4e2a\u516c\u5171\u7684Kafka API\u3002\u5728Kafka\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u7981\u7528\u6216\u5220\u9664\u4e0d\u5fc5\u8981\u7684--zooKeeper\u6807\u5fd7\u3002\n\u5728\u540eKIP-500\u65f6\u4ee3\uff0cKafka\u63a7\u5236\u5668\u5c06\u5176\u5143\u6570\u636e\u5b58\u50a8\u5728Kafka\u5206\u533a\u4e2d\uff0c\u800c\u4e0d\u662fZooKeeper\u4e2d\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u63a7\u5236\u5668\u4f9d\u8d56\u4e8e\u6b64\u5206\u533a\uff0c\u6240\u4ee5\u5206\u533a\u672c\u8eab\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u63a7\u5236\u5668\u6765\u8fdb\u884c\u9886\u5bfc\u8005\u9009\u4e3e\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\u76f8\u53cd\uff0c\u7ba1\u7406\u6b64\u5206\u533a\u7684\u8282\u70b9\u5fc5\u987b\u5b9e\u73b0\u81ea\u6211\u7ba1\u7406\u7684RAFT\u4ef2\u88c1\u3002\nKIP-595\uff1a\u5143\u6570\u636e\u4ef2\u88c1\u7684RAFT\u534f\u8bae\u6982\u8ff0\u4e86\u6211\u4eec\u5c06\u5982\u4f55\u4f7fRAFT\u534f\u8bae\u9002\u5e94Kafka\uff0c\u4ece\u800c\u4f7f\u5176\u771f\u6b63\u611f\u89c9\u50cf\u662f\u7cfb\u7edf\u7684\u672c\u673a\u90e8\u5206\u3002\u8fd9\u5c06\u6d89\u53ca\u5c06RAFT\u8bba\u6587\u4e2d\u63cf\u8ff0\u7684\u57fa\u4e8e\u63a8\u9001\u7684\u6a21\u5f0f\u66f4\u6539\u4e3a\u57fa\u4e8ePull\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e0e\u4f20\u7edf\u7684\u5361\u592b\u5361\u590d\u5236\u662f\u4e00\u81f4\u7684\u3002\u5176\u4ed6\u8282\u70b9\u5c06\u8fde\u63a5\u5230\u8fd9\u4e9b\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5c06\u6570\u636e\u63a8\u9001\u5230\u5176\u4ed6\u8282\u70b9\u3002\u540c\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0e\u5361\u592b\u5361\u4e00\u81f4\u7684\u672f\u8bed\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u7b4f\u7eb8--\u201c\u7eaa\u5143\u201d\u800c\u4e0d\u662f\u201c\u672f\u8bed\u201d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u6700\u521d\u7684\u5b9e\u65bd\u5c06\u4fa7\u91cd\u4e8e\u652f\u6301\u5143\u6570\u636e\u5206\u533a\u3002\u5b83\u4e0d\u652f\u6301\u5c06\u5e38\u89c4\u5206\u533a\u8f6c\u6362\u4e3aRAFT\u6240\u9700\u7684\u5168\u90e8\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u8fd9\u662f\u6211\u4eec\u672a\u6765\u53ef\u80fd\u4f1a\u56de\u5230\u7684\u4e00\u4e2a\u8bdd\u9898\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u9879\u76ee\u6700\u4ee4\u4eba\u5174\u594b\u7684\u90e8\u5206\u662f\u80fd\u591f\u5728\u6ca1\u6709\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u60c5\u51b5\u4e0b\u5728\u201cKIP-500\u6a21\u5f0f\u201d\u4e0b\u8fd0\u884c\u3002\u5f53Kafka\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528RAFT Quorum\u6765\u5b58\u50a8\u6211\u4eec\u7684\u5143\u6570\u636e\uff0c\u800c\u4e0d\u662fZooKeeper\u3002\n\u6700\u521d\uff0cKIP-500\u6a21\u5f0f\u5c06\u662f\u8bd5\u9a8c\u6027\u7684\u3002\u5927\u591a\u6570\u7528\u6237\u5c06\u7ee7\u7eed\u4f7f\u7528\u201c\u4f20\u7edf\u6a21\u5f0f\u201d\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cZooKeeper\u4ecd\u5728\u4f7f\u7528\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3aKIP-500\u6a21\u5f0f\u4e00\u5f00\u59cb\u5e76\u4e0d\u652f\u6301\u6240\u6709\u53ef\u80fd\u7684\u529f\u80fd\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5c06KIP-500\u6a21\u5f0f\u8bbe\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u4e4b\u524d\u83b7\u5f97\u4fe1\u5fc3\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u65f6\u95f4\u6765\u5b8c\u5584\u4ece\u4f20\u7edf\u6a21\u5f0f\u5230KIP-500\u6a21\u5f0f\u7684\u5347\u7ea7\u8fc7\u7a0b\u3002\n\u542f\u7528KIP-500\u6a21\u5f0f\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u5c06\u5728\u63a7\u5236\u5668\u4e2d\u5b8c\u6210\u3002\u6211\u4eec\u5fc5\u987b\u5c06\u4e0eZooKeeper\u4ea4\u4e92\u7684\u63a7\u5236\u5668\u90e8\u5206\u4e0e\u5b9e\u73b0\u66f4\u591a\u901a\u7528\u903b\u8f91(\u5982\u526f\u672c\u96c6\u7ba1\u7406)\u7684\u90e8\u5206\u5206\u5f00\u3002\n\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u548c\u5b9e\u73b0\u66f4\u591a\u7684\u63a7\u5236\u5668API\u6765\u53d6\u4ee3\u76ee\u524d\u6d89\u53caZooKeeper\u7684\u901a\u4fe1\u673a\u5236\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u65b0\u7684AlterIsr API\u3002\u6b64API\u5141\u8bb8\u526f\u672c\u5728\u4e0d\u4f7f\u7528ZooKeeper\u7684\u60c5\u51b5\u4e0b\u901a\u77e5\u63a7\u5236\u5668\u540c\u6b65\u526f\u672c\u96c6\u4e2d\u7684\u66f4\u6539\u3002\nKIP-500\u5f15\u5165\u4e86\u6865\u5f0f\u7248\u672c\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0eKIP-500\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u5361\u592b\u5361\u7248\u672c\u5171\u5b58\u3002\u6865\u63a5\u7248\u672c\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u540e\u52a8\u7269\u56ed\u9972\u517b\u5458\u4e16\u754c\u7684\u96f6\u505c\u673a\u5347\u7ea7\u3002\u4f7f\u7528\u65e7\u7248\u672c\u5361\u592b\u5361\u7684\u7528\u6237\u53ea\u9700\u5347\u7ea7\u5230\u6865\u5f0f\u7248\u672c\u5373\u53ef\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5bf9\u7f3a\u5c11ZooKeeper\u7684\u7248\u672c\u6267\u884c\u7b2c\u4e8c\u6b21\u5347\u7ea7\u3002\u987e\u540d\u601d\u4e49\uff0c\u6865\u6881\u91ca\u653e\u5c31\u50cf\u4e00\u5ea7\u901a\u5f80\u65b0\u4e16\u754c\u7684\u6865\u6881\u3002\n\u90a3\u4e48\u8fd9\u662f\u600e\u4e48\u8fd0\u4f5c\u7684\u5462\uff1f\u5047\u8bbe\u4e00\u4e2a\u96c6\u7fa4\u5904\u4e8e\u90e8\u5206\u5347\u7ea7\u72b6\u6001\uff0c\u6865\u63a5\u7248\u672c\u4e0a\u6709\u51e0\u4e2a\u4ee3\u7406\uff0cKIP-500\u53d1\u5e03\u540e\u6709\u51e0\u4e2a\u4ee3\u7406\u3002\u7ba1\u5236\u5458\u5c06\u59cb\u7ec8\u662fKIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u3002\u5728\u8fd9\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u4ee3\u7406\u4e0d\u80fd\u4f9d\u8d56\u76f4\u63a5\u4fee\u6539ZooKeeper\u6765\u5ba3\u5e03\u4ed6\u4eec\u6b63\u5728\u8fdb\u884c\u7684\u66f4\u6539(\u4f8b\u5982\u914d\u7f6e\u66f4\u6539\u6216ACL\u66f4\u6539)\u3002KIP-500\u4e4b\u540e\u7684\u7ecf\u7eaa\u4eba\u4e0d\u4f1a\u6536\u5230\u8fd9\u6837\u7684\u901a\u77e5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u76d1\u542c\u52a8\u7269\u56ed\u9972\u517b\u5458\u3002\u53ea\u6709\u63a7\u5236\u5668\u4ecd\u5728\u4e0eZooKeeper\u4ea4\u4e92\uff0c\u5c06\u5176\u66f4\u6539\u955c\u50cf\u5230ZooKeeper\u3002\n\u56e0\u6b64\uff0c\u5728\u6865\u53d1\u5e03\u4e2d\uff0c\u9664\u63a7\u5236\u5668\u4e4b\u5916\u7684\u6240\u6709\u4ee3\u7406\u90fd\u5fc5\u987b\u5c06ZooKeeper\u89c6\u4e3a\u53ea\u8bfb(\u9664\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u9650\u7684\u4f8b\u5916)\u3002\n\u5bf9\u4e8e\u50cfIncrementalAlterConfigs\u8fd9\u6837\u7684RPC\uff0c\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd\u8c03\u7528\u7531\u6d3b\u52a8\u63a7\u5236\u5668\u5904\u7406\u3002\u5bf9\u4e8e\u65b0\u5ba2\u6237\u6765\u8bf4\uff0c\u8fd9\u5f88\u5bb9\u6613-\u4ed6\u4eec\u53ea\u9700\u5c06\u547c\u53eb\u76f4\u63a5\u53d1\u9001\u5230\u90a3\u91cc\u5373\u53ef\u3002\u5bf9\u4e8e\u8f83\u8001\u7684\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5c06RPC\u53d1\u9001\u5230\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u4ee3\u7406\u4e0a\u8fd0\u884c\u7684\u91cd\u5b9a\u5411\u7cfb\u7edf\uff0c\u65e0\u8bba\u5b83\u4eec\u6700\u521d\u4f4d\u4e8e\u54ea\u4e2a\u4ee3\u7406\u4e0a\u3002\n\u5bf9\u4e8e\u6d89\u53ca\u4ee3\u7406\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u590d\u6742\u4ea4\u4e92\u7684RPC\uff0c\u6211\u4eec\u5c06\u9700\u8981\u521b\u5efa\u65b0\u7684\u63a7\u5236\u5668API\u3002\u4e00\u4e2a\u4f8b\u5b50\u662fKIP-497\uff0c\u5b83\u6307\u5b9a\u4e86\u4e00\u4e2a\u65b0\u7684AlterIsrRequest API\uff0c\u5141\u8bb8\u4ee3\u7406\u8bf7\u6c42\u66f4\u6539\u5206\u533a\u540c\u6b65\u526f\u672c(ISR)\u3002\n\u5c06\u5373\u5e2dZooKeeper API\u66ff\u6362\u4e3a\u6587\u6863\u9f50\u5168\u4e14\u53d7\u652f\u6301\u7684RPC\u4e0e\u5220\u9664\u5ba2\u6237\u7aefZooKeeper\u8bbf\u95ee\u5177\u6709\u8bb8\u591a\u76f8\u540c\u7684\u597d\u5904\u3002\u7ef4\u62a4\u8de8\u7248\u672c\u517c\u5bb9\u6027\u5c06\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u5bf9\u4e8eAlterIsrRequest\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u51cf\u5c11\u5411ZooKeeper\u5199\u5165\u666e\u901a\u64cd\u4f5c\u6240\u9700\u7684\u6b21\u6570\u4e5f\u4f1a\u5e26\u6765\u597d\u5904\u3002\nKafka\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u770b\u5230\u5b83\u7684\u67b6\u6784\u7684\u6f14\u53d8\u662f\u4ee4\u4eba\u60ca\u53f9\u7684\u3002\u6b63\u5982KIP-500\u8fd9\u6837\u7684\u9879\u76ee\u6240\u8868\u660e\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u6f14\u53d8\u8fd8\u6ca1\u6709\u5b8c\u6210\u3002\u6211\u6700\u559c\u6b22KIP-500\u7684\u5730\u65b9\u662f\u5b83\u7b80\u5316\u4e86\u6574\u4e2a\u67b6\u6784-\u65e0\u8bba\u662f\u7ba1\u7406\u5458\u8fd8\u662f\u5f00\u53d1\u4eba\u5458\u3002\u5b83\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u4e8b\u4ef6\u65e5\u5fd7\u7684\u5f3a\u5927\u62bd\u8c61\u6765\u5904\u7406\u5143\u6570\u636e\u3002\u5b83\u5c06\u6700\u7ec8\u8bc1\u660e\u2026\u3002\u5361\u592b\u5361\u4e0d\u9700\u8981\u770b\u95e8\u4eba\u3002\n\u5982\u679c\u60a8\u5bf9Apache Kafka\u4e2d\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u7684\u79fb\u9664\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u57285\u670821\u65e5\u4e0a\u534810\uff1a00\u52a0\u5165\u6211\u4eec\u5728Confluent Community Slake#\u666e\u901a\u9891\u9053\u7684\u73b0\u573a\u95ee\u7b54\u3002PDT\u3002\u8981\u4e86\u89e3\u5176\u4ed6\u6b63\u5728\u8fdb\u884c\u7684\u4f7fKafka\u5177\u6709\u5f39\u6027\u53ef\u4f38\u7f29\u6027\u7684\u5de5\u4f5c\uff0c\u8bf7\u67e5\u770b\u8fd9\u7bc7\u5173\u4e8e\u201c\u53d8\u5f62\u5de5\u7a0b\u201d\u7684\u535a\u5ba2\u6587\u7ae0\u3002\nColin McCabe\u76ee\u524d\u5728Confluent\u5de5\u4f5c\uff0c\u4ee5\u63d0\u9ad8Apache Kafka\u7684\u6027\u80fd\u3001\u53ef\u4f38\u7f29\u6027\u548c\u901a\u7528\u6027\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u7814\u7a76\u8fc7ApacheHadoop\u00ae\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf(\u2122)\u3002\u79d1\u6797\u5728\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon University)\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u8ba1\u7b97\u673a\u5de5\u7a0b\uff0c\u4ed6\u559c\u6b22\u81ea\u5236\u5564\u9152\u548c\u6f5c\u6c34\u3002", "note_en": "Currently, Apache Kafka \u00ae uses Apache ZooKeeper\u2122 to store its metadata. Data such as the location of partitions and the configuration of topics are stored outside of Kafka itself, in a separate ZooKeeper cluster. In 2019, we outlined a  plan to break this dependency and bring metadata management into Kafka itself.\n So what is the problem with ZooKeeper? Actually, the problem is not with ZooKeeper itself but with the concept of external metadata management.\n Having two systems leads to a lot of duplication. Kafka, after all, is a replicated distributed log with a pub/sub API on top. ZooKeeper is a replicated distributed log with a filesystem API on top. Each has its own way of doing network communication, security, monitoring, and configuration. Having two systems roughly doubles the total complexity of the result for the operator. This leads to an unnecessarily steep learning curve and increases the risk of some misconfiguration causing a security breach.\n Storing metadata externally is not very efficient. We run at least three additional Java processes, and sometimes more. In fact, we often see Kafka clusters with just as many ZooKeeper nodes as Kafka nodes! Additionally, the data in ZooKeeper also needs to be reflected on the Kafka controller, which leads to double caching.\n Worse still, storing metadata externally limits Kafka\u2019s scalability. When a Kafka cluster is starting up, or a new controller is being elected, the controller must load the full state of the cluster from ZooKeeper. As the amount of metadata grows, so does the length of this loading process. This limits the number of partitions that Kafka can store.\n Finally, storing metadata externally opens up the possibility of the controller\u2019s in-memory state becoming de-synchronized from the external state. The controller\u2019s view of liveness\u2014which is in the cluster\u2014can also diverge from ZooKeeper\u2019s view.\n   KIP-500 outlines a better way of handling metadata in Kafka. You can think of this as \u201cKafka on Kafka,\u201d since it involves storing Kafka\u2019s metadata in Kafka itself rather than in an external system such as ZooKeeper.\n In the post-KIP-500 world, metadata will be stored in a partition inside Kafka rather than in ZooKeeper. The controller will be the leader of this partition. There will be no external metadata system to configure and manage, just Kafka itself.\n We will treat metadata as a log. Brokers that need the latest updates can read only the tail of the log. This is similar to how consumers that need the latest log entries only need to read the very end of the log, not the entire log. Brokers will also be able to persist their metadata caches across process restarts.\n  A Kafka cluster elects a controller node to manage partition leaders and cluster metadata. The more partitions and metadata we have, the more important controller scalability becomes. We would like to minimize the number of operations that require a time linearly proportional to the number of topics or partitions.\n One such operation is controller failover. Currently, when Kafka elects a new controller, it needs to load the full cluster state before proceeding. As the amount of cluster metadata grows, this process takes longer and longer.\n In contrast, in the post-KIP-500 world, there will be several standby controllers that are ready to take over whenever the active controller goes away. These standby controllers are simply the other nodes in the Raft quorum of the metadata partition. This design ensures that we never need to go through a lengthy loading process when a new controller is elected.\n KIP-500 will speed up topic creation and deletion. Currently, when a topic is created or deleted, the controller must reload the full list of all topic names in the cluster from ZooKeeper. This is necessary because while ZooKeeper notifies us when the set of topics in the cluster has changed, it doesn\u2019t tell us exactly which topics were added or removed. In contrast, creating or deleting a topic in the post-KIP-500 world will simply involve creating a new entry in the metadata partition, which is an O(1) operation.\n Metadata scalability is a key part of scaling Kafka in the future. We expect that a single Kafka cluster will eventually be able to support a million partitions or more.\n    Several administrative tools shipped as part of the Kafka release still allow direct communication with ZooKeeper. Worse still, there are still one or two operations that can\u2019t be done except through this direct ZooKeeper communication.\n We have been working hard to close these gaps. Soon, there will be a public Kafka API for every operation that previously required direct ZooKeeper access. We will also disable or remove the unnecessary  --zookeeper flags in the next major release of Kafka.\n  In the post-KIP-500 world, the Kafka controller will store its metadata in a Kafka partition rather than in ZooKeeper. However, because the controller depends on this partition, the partition itself cannot depend on the controller for things like leader election. Instead, the nodes that manage this partition must implement a self-managed Raft quorum.\n KIP-595: A Raft Protocol for the Metadata Quorum outlines how we will adapt the Raft protocol to Kafka so that it really feels like a native part of the system. This will involve changing the push-based model described in the  Raft paper to a pull-based model, which is consistent with traditional Kafka replication. Rather than pushing out data to other nodes, the other nodes will connect to them. Similarly, we will use terminology consistent with Kafka rather than the original Raft paper\u2014\u201depochs\u201d instead of \u201cterms,\u201d and so forth.\n The initial implementation will be focused on supporting the metadata partition. It will not support the full range of operations that would be needed to convert regular partitions over to Raft. However, this is a topic we may return to in the future.\n  The most exciting part of this project, of course, is the ability to run without ZooKeeper, in \u201cKIP-500 mode.\u201d When Kafka is run in this mode, we will use a Raft quorum to store our metadata rather than ZooKeeper.\n Initially, KIP-500 mode will be experimental. Most users will continue to use \u201clegacy mode,\u201d in which ZooKeeper is still in use. Partly, this is because KIP-500 mode will not support all possible features at first. Another reason is because we want to gain confidence in KIP-500 mode before making it the default. Finally, we will need time to perfect the upgrade process from legacy mode to KIP-500 mode.\n Much of the work to enable KIP-500 mode will be in the controller. We must separate out the part of the controller that interacts with ZooKeeper from the part that implements more general-purpose logic such as replica set management.\n We need to define and implement more controller APIs to replace the communication mechanisms that currently involve ZooKeeper. One example of this is the new  AlterIsr API. This API allows a replica to notify the controller of a change in the in-sync replica set without using ZooKeeper.\n  KIP-500 introduced the concept of a  bridge release that can coexist with both pre- and post-KIP-500 versions of Kafka. Bridge releases are important because they enable zero-downtime upgrades to the post-ZooKeeper world. Users on an older version of Kafka simply upgrade to a bridge release. Then, they can perform a second upgrade to a release that lacks ZooKeeper. As its name suggests, the bridge release acts as a bridge into the new world.\n So how does this work? Consider a cluster that is in a partially upgraded state, with several brokers on the bridge release and several brokers on a post-KIP-500 release. The controller will always be a post-KIP-500 broker. In this cluster, brokers cannot rely on directly modifying ZooKeeper to announce changes they are making (such as a configuration change or an ACL change). The post-KIP-500 brokers would not receive such notifications because they are not listening on ZooKeeper. Only the controller is still interacting with ZooKeeper, by mirroring its changes to ZooKeeper.\n Therefore, in the bridge release, all the brokers except the controller must treat ZooKeeper as read only (with some very limited exceptions).\n For RPCs like  IncrementalAlterConfigs, we simply need to ensure that the call is processed by the active controller. This is easy for new clients\u2014they can simply send the calls there directly. For older clients, we need a redirection system that will run on the brokers that send the RPCs to the active controller, no matter which broker they initially end up on.\n For RPCs that involve a complex interaction between the broker and the controller, we will need to create new controller APIs. One example is  KIP-497, which specifies a new  AlterIsrRequest API that allows brokers to request changes to partition in-sync replicas (ISRs).\n Replacing ad hoc ZooKeeper APIs with well-documented and supported RPCs has many of the same benefits as removing client-side ZooKeeper access did. Maintaining cross-version compatibility will be easier. For the special case of  AlterIsrRequest, there will also be benefits to reducing the number of writes to ZooKeeper that a common operation requires.\n  Kafka is one of the most active Apache projects. It has been amazing to see the evolution in its architecture over the last few years. That evolution is not done yet, as projects like KIP-500 show. What I like most about KIP-500 is that it\u2019s a simplification to the overall architecture\u2014for administrators and developers alike. It will let us use the powerful abstraction of the event log for metadata handling. And it will finally prove that\u2026Kafka needs no keeper.\n If you have any questions about ZooKeeper removal in Apache Kafka,  join our live Q&amp;A in the Confluent Community Slack #general channel on May 21st at 10:00 a.m. PDT. To learn about other work that is happening to make Kafka  elastically scalable, check out this  blog post on Project Metamorphosis.\n Colin McCabe currently works for Confluent to improve the performance, scalability, and general awesomeness of Apache Kafka. Previously, he worked on the Apache\u2122 Hadoop\u00ae Distributed Filesystem. Colin studied computer science and computer engineering at Carnegie Mellon University, and he enjoys homebrewing and scuba diving.", "posttime": "2020-05-17 06:33:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u9664,removing,zookeeper", "title": "\u5361\u592b\u5361\u6d88\u9664\u5bf9ZooKeeper\u7684\u4f9d\u8d56", "title_en": "Kafka Removing Zookeeper Dependency", "transed": 1, "url": "https://www.confluent.io/blog/removing-zookeeper-dependency-in-kafka/", "via": "", "real_tags": ["\u6d88\u9664", "removing", "zookeeper"]}, {"category": "", "categoryclass": "", "imagename": "9dc781bbef801118e96c6cbf0331c472.jpeg", "infoid": 1002448, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Chrome Galvanizer\u662f\u4e00\u6b3e\u751f\u6210Chrome\u4f01\u4e1a\u7b56\u7565\u7684\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u7528\u6237\u52a0\u5f3a\u6d4f\u89c8\u5668\u5b89\u5168\u6027\u3002\u76ee\u524d\uff0c\u4e3b\u8981\u652f\u6301\u751f\u6210\u7b56\u7565\uff0c\u4ee5\u9650\u5236\u6765\u81ea\u660e\u786e\u6807\u8bb0\u4e3a\u654f\u611f\u7684\u7ad9\u70b9(\u4f8b\u5982\uff0c\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u3001\u94f6\u884c\u3001\u52a0\u5bc6\u6743\u9650\u548c\u5176\u4ed6\u7ad9\u70b9)\u7684\u6269\u5c55\u8bbf\u95ee\u3002\u8fd9\u5141\u8bb8\u60a8\u963b\u6b62\u6269\u5c55\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5b9a\u7684\u7ad9\u70b9\uff0c\u5373\u4f7f\u60a8\u5728\u7b2c\u4e00\u6b21\u5b89\u88c5\u5b83\u4eec\u65f6\u5df2\u7ecf\u6388\u4e88\u4e86\u8bbf\u95ee\u5b83\u4eec\u7684\u6743\u9650\u3002\n\u8fd9\u53ef\u4ee5\u9632\u6b62\u901a\u8fc7\u53cd\u5411\u66f4\u65b0\u52ab\u6301\u7684\u6269\u5c55\uff0c\u4ee5\u53ca\u7531\u4e8e\u5176\u4ee3\u7801\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\u800c\u88ab\u5229\u7528\u7684\u6269\u5c55\u3002\n\u524d\u4e00\u7c7b\u653b\u51fb\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662fmega Chrome\u6269\u5c55\u88ab\u9ed1\u5ba2\u653b\u51fb\u3002\u57fa\u672c\u4e0a\uff0c\u53d1\u5e03\u5de8\u578b\u6269\u5c55\u7684\u8d26\u53f7\u5f88\u53ef\u80fd\u662f\u88ab\u7f51\u7edc\u9493\u9c7c\u7684\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5012\u9000\u7684\u6269\u5c55\u66f4\u65b0\u88ab\u63a8\u7ed9\u4e86\u6240\u6709\u6269\u5c55\u7528\u6237(\u6570\u767e\u4e07)\u3002\u6839\u636eMega&#39\uff1b\u7684\u58f0\u660e\uff0c\u8be5\u6269\u5c55\u540d\u8bb0\u5f55\u5e76\u7a83\u53d6\u4e86\u201c\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com(\u7528\u4e8e\u7f51\u5e97\u767b\u5f55)\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7b49\u7f51\u7ad9\u7684\u51ed\u8bc1\u3002\u201d\n\u4f7f\u7528Chrome Galvanizer\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u6216\u6240\u6709\u6269\u5c55\u65e0\u6cd5\u518d\u8bbf\u95ee\u7684\u7279\u5b9a\u7ad9\u70b9\u6765\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u6b64\u7c7b\u653b\u51fb\u3002\u5bf9\u4e8e\u8d85\u7ea7\u7528\u6237\u6765\u8bf4\uff0c\u5982\u679c\u7528\u6237\u521b\u5efa\u4e86\u4e00\u4e2a\u9650\u5236\u8d85\u7ea7\u6269\u5c55\u8bbf\u95ee\u4e9a\u9a6c\u900a(Amazon.com)\u3001live.com\u3001github.com\u3001google.com\u3001myetherwallet.com\u3001mymonero.com\u548cidex.market\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u514d\u53d7\u653b\u51fb\u3002\n\u60a8\u751a\u81f3\u53ef\u4ee5\u914d\u7f6e\u53ea\u5141\u8bb8\u6269\u5c55\u8bbf\u95ee\u7279\u5b9a\u7ad9\u70b9\u767d\u540d\u5355\u7684\u7b56\u7565\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5c06\u654f\u611f\u7ad9\u70b9\u5217\u5165\u9ed1\u540d\u5355\u3002\u5982\u679c\u60a8\u60f3\u8981\u5c06\u6269\u5c55\u7528\u4e8e\u4e00\u7ec4\u7ad9\u70b9\uff0c\u800c\u4e0d\u662fWeb\u7684\u5176\u4f59\u90e8\u5206\uff0c\u5219\u6b64\u529f\u80fd\u975e\u5e38\u6709\u7528\u3002\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5206\u5c42\u8fd9\u4e9b\u653f\u7b56\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002", "note_en": "Chrome Galvanizer is a tool to generate Chrome enterprise policies to help users harden their browser security. Currently, the main support is for generating policies to restrict extension access from sites explicitly marked as sensitive (e.g. your email, bank, cryptocurency, and other sites). This allows you to prevent extensions from accessing these specific sites even if you&#39;ve already granted them permission to do so when first installing them.\n  This protects from hijacked extensions with backdoored updates and against extensions that have been  exploited due to a security vulnerability in their code.\n One good example of the former type of attack this protects against is the case of the  MEGA Chrome extension getting hacked. Basically, the account which publishes the MEGA extension likely was phished, the result being that a backdoored extension update was pushed out to all extension users (millions). Per MEGA&#39;s statement the extension keylogged and stole  \u201ccredentials for sites including amazon.com, live.com, github.com, google.com (for webstore login), myetherwallet.com, mymonero.com, [and] idex.market.\u201d\n Using Chrome Galvanizer, you can protect yourself from attacks like this by specifying specific sites that one or all of your extensions can no longer access. For the MEGA case, if users had created a policy restricting access for the MEGA extension to access  amazon.com,  live.com,  github.com,  google.com,  myetherwallet.com,  mymonero.com, and  idex.market then they&#39;d be protected from the attack.\n You can even configure policies that only allow an extension to access a specific whitelist of sites instead of just blacklisting sensitive ones. This is useful if you have an extension you want to use for a set of sites but not the rest of the web. Of course, you can also layer these policies to get even better results.", "posttime": "2020-05-17 06:17:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "chrome,\u6f0f\u6d1e,\u540e\u95e8,harden,\u6269\u5c55", "title": "ChromeGalvanizer-\u9488\u5bf9\u6269\u5c55\u540e\u95e8\u548c\u6f0f\u6d1e\u5f3a\u5316\u60a8\u7684\u6d4f\u89c8\u5668", "title_en": "ChromeGalvanizer \u2013 Harden your browser against extension backdoors and exploits", "transed": 1, "url": "https://github.com/mandatoryprogrammer/ChromeGalvanizer", "via": "", "real_tags": ["chrome", "\u6f0f\u6d1e", "\u540e\u95e8", "harden", "\u6269\u5c55"]}, {"category": "", "categoryclass": "", "imagename": "2cae259de697d9f6b726d4240e81162b.jpg", "infoid": 1002447, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6bc1\u706d\u6c38\u6052\u201d\u6210\u4e3a\u6700\u65b0\u4e00\u6b3e\u4f7f\u7528\u5185\u6838\u7ea7\u9a71\u52a8\u7a0b\u5e8f\u6765\u5e2e\u52a9\u68c0\u6d4b\u591a\u4eba\u6bd4\u8d5b\u4e2d\u7684\u4f5c\u5f0a\u8005\u7684\u6e38\u620f\u3002\n\u8fd9\u6b3e\u6e38\u620f\u7684\u65b0\u9a71\u52a8\u7a0b\u5e8f\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u6765\u81ea\u5fb7\u52aa\u6c83\u7684\u6bcd\u516c\u53f8\u7231\u8fea\u5fb7(Irdeto)\uff0c\u8be5\u516c\u53f8\u66fe\u4ee5\u8fd1\u4e4e\u65e0\u4e0e\u4f26\u6bd4\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\uff0c\u73b0\u5728\u5219\u4ee5\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6709\u6548\u4f46\u7ecf\u5e38\u88ab\u7834\u89e3\u7684\u76d7\u7248\u4fdd\u62a4\u800c\u95fb\u540d\u3002\u4f46\u65b0\u7684Denuvo\u53cd\u4f5c\u5f0a\u4fdd\u62a4\u4e0e\u8be5\u516c\u53f8\u7684Denuvo\u9632\u7be1\u6539\u6280\u672f\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u540e\u8005\u4f7f\u7528\u4ee3\u7801\u6df7\u6dc6\u6765\u963b\u6b62\u7834\u89e3\u7a0b\u5e8f(\u8fd9\u9879\u6280\u672f\u5728\u63a8\u51fa\u540e\u4e0d\u4e45\u5c31\u5df2\u7ecf\u5728Doom Etal\u4e0a\u8ba8\u8bba\u8fc7\u4e86)\u3002\nIrdeto\u5728\u4e00\u7bc7\u5ba3\u5e03\u63a8\u51fa\u8be5\u5de5\u5177\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u5728\u4e3a\u671f\u4e24\u5e74\u7684\u63d0\u524d\u8bbf\u95ee\u8ba1\u5212\u4e2d\uff0c\u65b0\u7684Denuvo\u548c\u53cd\u4f5c\u5f0a\u5de5\u5177\u5728\u65e0\u6570\u4e2a\u5c0f\u65f6\u548c\u6570\u767e\u4e07\u6b21\u6e38\u620f\u4f1a\u8bdd\u4e4b\u540e\uff0c\u9762\u5411\u672b\u65e5\u6c38\u6052\u7684\u73a9\u5bb6\u63a8\u51fa\u3002\u4f46\u4e0eValorant\u7684\u7c7b\u4f3cVanguard\u7cfb\u7edf\u4e0d\u540c\u7684\u662f\uff0cDenuvo Anti-cheat Driver\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\uff0c\u8ba9\u73a9\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7cfb\u7edf\u4e0a\u76d1\u63a7\u5b83\u7684\u4f7f\u7528\u60c5\u51b5\u3002\n\u4e3a\u4e86\u6d88\u9664\u4efb\u4f55\u6f5c\u5728\u7684\u6050\u60e7\uff0c\u7231\u8fea\u5fb7\u5199\u9053\uff0cDenuvo Anti-cheat\u53ea\u5728\u6e38\u620f\u6d3b\u8dc3\u65f6\u8fd0\u884c\uff0c\u8d1d\u585e\u65af\u8fbe\u7684\u8865\u4e01\u7b14\u8bb0\u4e2d\u4e5f\u540c\u6837\u5199\u7740\uff0c\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f7f\u7528\u5728\u6e38\u620f\u542f\u52a8\u65f6\u5f00\u59cb\uff0c\u5f53\u6e38\u620f\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u505c\u6b62\u65f6\u505c\u6b62\u3002\u8fd9\u4e0eValorant\u7684\u5148\u950b\u7cfb\u7edf\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u540e\u8005\u9700\u8981\u4ece\u7cfb\u7edf\u542f\u52a8\u65f6\u52a0\u8f7d\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u76d1\u63a7\u7cfb\u7edf\u72b6\u6001\u7684\u5b8c\u6574\u6027\u3002\n\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u4ea7\u54c1\u8d1f\u8d23\u4ebaMichail Greshishchev\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u544a\u8bc9Ars\uff0c\u5728\u591a\u4eba\u6bd4\u8d5b\u4e4b\u5916\u4e0d\u4f1a\u8fdb\u884c\u76d1\u63a7\u6216\u6570\u636e\u6536\u96c6\u3002\u5fb7\u52aa\u6c83\u4e0d\u4f1a\u8bd5\u56fe\u7ef4\u62a4\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002\u5b83\u4e0d\u4f1a\u963b\u6b62\u4f5c\u5f0a\u3001\u6e38\u620fmod\u6216\u5f00\u53d1\u5de5\u5177\u3002\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u53ea\u68c0\u6d4b\u4f5c\u5f0a\u3002&#34\uff1b\nGreshishchev\u8865\u5145\u8bf4\uff0c\u8be5\u516c\u53f8\u7684\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u83b7\u5f97\u4e86\u77e5\u540d\u5185\u6838\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7684\u8ba4\u8bc1\uff0c\u5b8c\u6210\u4e86\u5b9a\u671f\u7684\u767d\u76d2\u548c\u9ed1\u76d2\u5ba1\u8ba1\uff0c\u5e76\u63a5\u53d7\u4e86\u72ec\u7acb\u4f5c\u5f0a\u5f00\u53d1\u8005\u7684\u6e17\u900f\u6d4b\u8bd5\u3002\u4ed6\u8bf4\uff0c\u7231\u8fea\u751f\u8fd8\u8bbe\u7acb\u4e86\u4e00\u4e2a\u6f0f\u6d1e\u8d4f\u91d1\u8ba1\u5212\uff0c\u4ee5\u53d1\u73b0\u4ed6\u4eec\u53ef\u80fd\u9057\u6f0f\u7684\u4efb\u4f55\u6f0f\u6d1e\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u7531\u4e8eDenuvo Anti-cheat\u7684\u8bbe\u8ba1\uff0c\u53f8\u673a\u6bd4\u5176\u4ed6\u53ef\u80fd\u66f4\u5bb9\u6613\u63a5\u89e6\u4e92\u8054\u7f51\u7684\u53f8\u673a\u66f4\u5b89\u5168\u3002\u4e0e\u73b0\u6709\u7684\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\u4e0d\u540c\uff0cDenuvo Anti-cheat\u4e0d\u4f1a\u4ece\u7f51\u7edc\u4e0a\u6d41\u5f0f\u4f20\u8f93\u5916\u58f3\u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u53d7\u5230\u653b\u51fb\uff0c\u653b\u51fb\u8005\u4e0d\u80fd\u5411\u6e38\u620f\u8005\u7684\u673a\u5668\u53d1\u9001\u4efb\u610f\u6076\u610f\u8f6f\u4ef6\u3002\n\u4ed6\u7ee7\u7eed\u8bf4\uff0c\u8fd9\u4e9b\u6e38\u620f\u673a\u5df2\u7ecf\u6709\u4e86\u4e00\u5927\u5806\u4e0d\u5408\u683c\u7684(\u5b89\u5168\u65b9\u9762\u7684)\u7ba1\u7406\u670d\u52a1\uff0c\u800c\u4e14\u6709\u6d3b\u8dc3\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002\u6765\u81ea\u9f20\u6807\u548c\u952e\u76d8\u4f9b\u5e94\u5546\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001\u7167\u660e\u548c\u8d85\u9891\u670d\u52a1\u7b49\u3002\u5982\u679c\u653b\u51fb\u8005\u771f\u7684\u60f3\u5371\u5bb3\u6e38\u620f\u8005\u7684\u5b89\u5168\uff0c\u4ed6\u4eec\u4f1a\u901a\u8fc7\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u7684\u9632\u7be1\u6539\u8f6f\u4ef6\u3002\nGreshishchev\u544a\u8bc9ARS\uff0c\u5982\u679c\u5728\u91ce\u5916\u53d1\u73b0\u4e86\u9a71\u52a8\u7a0b\u5e8f\u6f0f\u6d1e\uff0c\u53ef\u64a4\u9500\u7684\u8bc1\u4e66\u548c\u81ea\u52a8\u8fc7\u671f\u7684\u7f51\u7edc\u5bc6\u94a5\u53ef\u4ee5\u7528\u4f5c\u627c\u6740\u5f00\u5173\u6765\u5207\u65ad\u5b83\u4eec\u3002\u6ca1\u6709\u5b89\u5168\u4e13\u5bb6\u53ef\u4ee5\u58f0\u79f0\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e07\u65e0\u4e00\u5931\u7684\uff0c\u4f46\u6211\u4eec\u7684\u6e17\u900f\u6d4b\u8bd5\u3001\u8ba4\u8bc1\u548c\u5b89\u5168\u5ba1\u8ba1\u8fdc\u8fdc\u9ad8\u4e8e\u4efb\u4f55\u5408\u7406\u7684\u6807\u51c6\uff0c\u4ed6\u8bf4\u3002\n\u5185\u6838\u6a21\u5f0f\u9a71\u52a8\u7a0b\u5e8f\u5728\u591a\u4eba\u6e38\u620f\u53cd\u4f5c\u5f0a\u5de5\u5177\u4e2d\u7684\u4f7f\u7528\u5b9e\u9645\u4e0a\u76f8\u5f53\u666e\u904d\uff0c\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u53ef\u4ee5\u68c0\u6d4b\u5e76\u963b\u6b62\u8bd5\u56fe\u4fee\u6539\u6e38\u620f\u4ee3\u7801\u7684\u4f4e\u6743\u9650\u7528\u6237\u6a21\u5f0f\u5de5\u5177\u3002\u867d\u7136\u4f5c\u5f0a\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ee3\u7801\u7b7e\u540d\u6f0f\u6d1e\u6765\u5b89\u88c5\u4ed6\u4eec\u81ea\u5df1\u7684\u5185\u6838\u7ea7\u4f5c\u5f0a\u5de5\u5177\u6765\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u66f4\u52a0\u56f0\u96be\u3002\n\u4ec5\u5728\u6e38\u620f\u8fd0\u884c\u65f6\u52a0\u8f7d\u5185\u6838\u6a21\u5f0f\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5c31\u50cfDenuvo\u6240\u505a\u7684\u90a3\u6837\uff0c\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u4e5f\u4e0e\u4ece\u542f\u52a8\u65f6\u8fd0\u884crootkit\u98ce\u683c\u7684\u9632\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6b63\u5982\u72ec\u7acb\u5b89\u5168\u7814\u7a76\u5458\u8428\u5229\u59c6\u00b7\u62c9\u5e0c\u5fb7(Saleem Rashid)\u5728\u8c08\u5230Valorant\u7684\u5148\u950b\u5b89\u5168\u9a71\u52a8\u7a0b\u5e8f\u65f6\u544a\u8bc9Ars\u7684\u90a3\u6837\uff0c\u540e\u8005\u4e3a\u5728\u7528\u6237\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u7684\u7cfb\u7edf\u7ea7\u6f0f\u6d1e\u5e26\u6765\u4e86\u66f4\u5927\u7684\u98ce\u9669\uff0c\u521b\u9020\u4e86\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u597d\u5904\u7684\u5927\u653b\u51fb\u9762\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u672b\u65e5\u6c38\u6052\u793e\u533a\u7684\u4e00\u4e9b\u6210\u5458\u5bf9Denuvo\u53cd\u4f5c\u5f0a\u5de5\u5177\u7684\u63a8\u51fa\u65b9\u5f0f\uff0c\u6216\u8005\u4ed6\u4eec\u8ba4\u4e3a\u5b83\u7ed9\u4ed6\u4eec\u7684\u7cfb\u7edf\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\u611f\u5230\u4e0d\u6ee1\u3002\nReddit\u7528\u6237extant_dinero\u5728Doom subreddit\u4e0a\u7684\u70ed\u95e8\u5e16\u5b50\u4e2d\u5199\u9053\uff0c\u4efb\u4f55\u8f6f\u4ef6\uff0c\u7279\u522b\u662f\u53cd\u4f5c\u5f0a\u8f6f\u4ef6\uff0c\u90fd\u4e0d\u5e94\u8be5\u62e5\u6709\u5bf9\u4f60\u7684\u7cfb\u7edf\u7684\u5185\u6838\u7ea7\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u679c\u662f\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u8d2d\u4e70\u4e4b\u524d\u5f97\u5230\u901a\u77e5\u3002\u5982\u679c\u6211\u77e5\u9053\u5b83\u4f1a\u88ab\u6dfb\u52a0\uff0c\u6211\u5c31\u4e0d\u4f1a\u4e70\u5b83\u4e86\u3002\u4ec5\u4ec5\u56e0\u4e3a\u5176\u4ed6\u8f6f\u4ef6\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u5c31\u662f\u6b63\u786e\u7684\u3002\n\u4f46\u662fGreshishchev\u544a\u8bc9Ars\uff0c\u8fd9\u6837\u7684\u6050\u60e7\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u4ed6\u8bf4\uff0cDenuvo Anti-cheat\u88ab\u8bbe\u8ba1\u6210\u4e0eNVIDIA\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u6216Steam\u7684\u5ba2\u6237\u670d\u52a1\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e0e\u8fc7\u53bb\u7684\u53cd\u4f5c\u5f0a\u4e0d\u540c\uff0c\u73b0\u5728\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\u6302\u94a9\uff0c\u4e0d\u9700\u8981\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5f00\u59cb\uff0c\u6ca1\u6709\u70e6\u4eba\u7684\u6258\u76d8\u56fe\u6807\u6216\u95ea\u5c4f\u3002\n\u5bb3\u6015\u672a\u77e5\u662f\u4eba\u7c7b\u7684\u672c\u6027\uff0c\u6211\u4eec\u518d\u591a\u7684\u6280\u672f\u4e3b\u5f20\u4e5f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u4fe1\u4efb\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u5efa\u7acb\u8d77\u6765\u7684\uff0c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5f53\u5fb7\u52aa\u6c83\u53cd\u4f5c\u5f0a\u516c\u53f8\u5728\u60a8\u6700\u559c\u6b22\u7684\u6e38\u620f\u4e2d\u7981\u8d5b\u4e00\u540d\u73a9\u5bb6\u65f6\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u60a8\u7684\u4fe1\u4efb\u3002", "note_en": "Doom Eternal has become the latest game to use a kernel-level driver to aid in detecting cheaters in multiplayer matches.\n The game&#39;s new driver and anti-cheat tool come courtesy of  Denuvo\u00a0parent Irdeto, a company  once known for nearly unbeatable piracy protection and now known for  somewhat effective but often cracked piracy protection. But the new Denuvo Anti-Cheat protection is completely separate from the company&#39;s Denuvo Anti-Tamper technology, which uses code obfuscation to hinder crackers (and which was  already mooted for  Doom Eternal anyway shortly after launch).\n The new Denuvo\u00a0Anti-Cheat tool rolls out to  Doom Eternal players after &#34;countless hours and millions of gameplay sessions&#34; during a two-year early access program, Irdeto  said in a blog post announcing its introduction. But unlike   Valorant&#39;s similar Vanguard system, the Denuvo Anti-Cheat driver &#34;doesn\u2019t have annoying tray icons or splash screens&#34; letting players monitor its use on their system.\n   To assuage any potential fears, Irdeto writes that Denuvo Anti-Cheat only runs when the game is active, and  Bethesda&#39;s patch notes similarly say that &#34;use of the kernel-mode driver starts when the game launches and stops when the game stops for any reason.&#34; That&#39;s a major difference from  Valorant&#39;s Vanguard system, which  requires the driver to be loaded from system startup in order to &#34;monitor system state for integrity.&#34;\n &#34;No monitoring or data collection happens outside of multiplayer matches,&#34; Denuvo Anti-Cheat Product Owner Michail Greshishchev told Ars via email. &#34;Denuvo does not attempt to maintain the integrity of the system. It does not block cheats, game mods, or developer tools. Denuvo Anti-Cheat only detects cheats.&#34;\n  Greshishchev added that the company&#39;s driver has received &#34;certification from renown[ed] kernel security researchers, completed regular whitebox and blackbox audits, and was penetration-tested by independent cheat developers.&#34; He said\u00a0Irdeto is also setting up a bug bounty program to discover any flaws they might have missed.\n And because of Denuvo Anti-Cheat&#39;s design, Greshishchev says the driver is more secure than others that might have more exposure to the Internet.\u00a0&#34;Unlike existing anti-cheats, Denuvo Anti-Cheat does not stream shell code from the Web,&#34; Greshishchev told Ars. &#34;This means that, if compromised, attackers can&#39;t send down arbitrary malware to gamers&#39; machines.\n &#34;These same gaming machines already have a sea of subpar (security-wise) administrative services with active Internet connections,&#34; he continued. &#34;Drivers from mouse and keyboard vendors, lighting and overclocking services, etc. If attackers really wanted to compromise gamers&#39; machines, they would go through them\u2014not through the world&#39;s strongest anti-tamper software.&#34;\n If a driver exploit is discovered in the wild, Greshishchev told Ars that revocable certificates and self-expiring network keys can be used as &#34;kill switches&#34; to cut them off.\u00a0&#34;No security expert can claim their solution is infallible, but our penetration testing, certification, and security auditing is significantly higher than any reasonable standard,&#34; he said.\n  The use of kernel-mode drivers is actually pretty common in multiplayer game anti-cheat tools, helping to ensure that lower-privileged &#34;user-mode&#34; tools that try to modify the game code can be detected and stopped. While cheaters can still get around this by using code-signing exploits to install their own kernel-level cheat tools, the process is more difficult.\n Loading a kernel-mode anti-cheat driver only when a game is running, as Denuvo does, is also very different from running a  rootkit-style\u00a0anti-cheat driver from startup, from a security perspective. The latter introduces much more exposure for system-level exploits that can run without the user&#39;s knowledge, creating &#34;a large attack surface for little benefit,&#34; as independent security researcher Saleem Rashid told Ars  regarding  Valorant&#39;s Vanguard security driver.\n Still, some members of the  Doom Eternal community are not happy about the way the Denuvo Anti-Cheat tool was rolled out, or with the security risks they feel it creates on their systems.\n &#34;No piece of software, especially an anti-cheat, should have kernel-level access to your system and if it is we should have been informed before purchasing it,&#34; Reddit user extant_dinero wrote in  a popular thread on the  Doom subreddit urging people to delete the game. &#34;I would not have purchased it had I known it would be added. Just because other pieces of software do it doesn&#39;t make it right.&#34;\n But Greshishchev tells Ars such fear is misplaced. Denuvo Anti-Cheat is &#34;designed to be no different than Nvidia&#39;s graphic drivers or Steam&#39;s Client Service,&#34; he said. &#34;Unlike anti-cheats of the past, there are no filesystem hooks, no requirement to start with the OS, no annoying tray icons or splash screens.&#34;\n &#34;It&#39;s human nature to have a fear of the unknown, and no amount of technical claims by us could address that. Trust is built up over time, and we think that when Denuvo Anti-Cheat bans a player in your favorite game, we will gain your trust.&#34;", "posttime": "2020-05-17 05:47:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,denuvo,eternal,\u6e38\u620f", "title": "\u201c\u672b\u65e5\u6c38\u6052\u201d\u4f7f\u7528\u7684\u662fDenuvo\u7684\u65b0\u5185\u6838\u7ea7\u53cd\u4f5c\u5f0a\u9a71\u52a8\u7a0b\u5e8f", "title_en": "'Doom Eternal' Is Using Denuvo's New Kernel-Level Anti-Cheat Driver", "transed": 1, "url": "https://arstechnica.com/gaming/2020/05/doom-eternal-anti-cheat-kernel-driver-is-safer-than-others-denuvo-says/", "via": "", "real_tags": ["\u7a0b\u5e8f", "denuvo", "eternal", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "c80b55af49940fdf19f90fe1ff1fab6b.png", "infoid": 1002446, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2011\u5e74\uff0c\u4e00\u540d\u8377\u5170\u81ea\u884c\u8f66\u8bb0\u8005\u5f00\u73a9\u7b11\u5730\u63d0\u8bae\u5728\u4ed6\u7684\u7956\u56fd\u4fee\u5efa\u4e00\u5ea7\u4eba\u5de5\u5c71\uff0c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u63d0\u6848\u548c\u53ef\u884c\u6027\u7814\u7a76\uff0c\u6210\u4e3a\u8377\u5170\u6700\u5927\u7684\u521b\u65b0\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u9879\u76ee\u7684Die Berg Komt er-\uff0c\u4e00\u4e2a\u4eba\u548c\u4e00\u5ea7(\u4eba\u9020)\u5c71\u7684\u6545\u4e8b\u3002", "note_en": "In 2011, a Dutch cycling journalist\u2019s tongue-in-cheek proposal for an artificial mountain in his homeland sparked a flurry of proposals and feasibility studies, growing to be the biggest innovation platform in the Netherlands.   This is the story of Die Berg Komt Er \u2013\u00a0of a project, a man and a (man-made) mountain.", "posttime": "2020-05-17 05:47:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u9020,man,die", "title": "\u8377\u5170\u4eba\u548c\u4ed6\u7684(\u4eba\u9020)\u5c71", "title_en": "A Dutchman and his (man-made) mountain", "transed": 1, "url": "https://cyclingtips.com/2020/05/a-dutchman-and-his-man-made-mountain/", "via": "", "real_tags": ["\u4eba\u9020", "man", "die"]}, {"category": "", "categoryclass": "", "imagename": "c0977b838010da333dd2fa6d4cc99b5d.jpeg", "infoid": 1002445, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u5bb6\u8457\u540d\u7684\u5a31\u4e50\u5f8b\u5e08\u4e8b\u52a1\u6240\u906d\u5230\u9ed1\u5ba2\u653b\u51fb\u540e\uff0c\u4e00\u4e2a\u8eab\u4efd\u4e0d\u660e\u7684\u7f51\u7edc\u5e2e\u6d3e\u6cc4\u9732\u4e86Lady Gaga\u7684\u6570\u636e\uff0c\u4ed6\u4eec\u8bf4\u8fd9\u662f\u5173\u4e8e\u603b\u7edf\u7684\u6570\u636e\u3002\n\u7f51\u7edc\u5e2e\u6d3e\u5728\u8fd9\u4e2a\u9ed1\u6697\u7684\u7f51\u7ad9\u4e0a\u5220\u9664\u4e86\u94fe\u63a5\u5230\u7b2c\u4e00\u90e8\u5206\u6570\u636e\u7684\u94fe\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\u3002\u201c\u5546\u4e1a\u5185\u5e55\u201d(Business Insider)\u67e5\u9605\u7684\u6587\u4ef6\u6837\u672c\u5305\u62ec\u63d0\u5230\u603b\u7edf\u7684\u6cd5\u5f8b\u7535\u5b50\u90ae\u4ef6\u3001\u6587\u4ef6\u548c\u5408\u540c\uff0c\u4ece\u4e00\u4f4d\u5b66\u5f92(An\uff1bApprentice)\u5728\u7ade\u9009\u671f\u95f4\u5bfb\u6c42\u62cd\u6444\u65b0\u8282\u76ee\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5230\u5c31\u5408\u6cd5\u4f7f\u7528\u4ed6\u7684\u91c7\u8bbf\u5f55\u50cf\u8fdb\u884c\u8c08\u5224\u7684\u5408\u540c\u3002\n\u52d2\u7d22\u8f6f\u4ef6\u56e2\u4f19\u8fc7\u53bb\u66fe\u4ece\u4f01\u4e1a\u7a83\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u5176\u6cc4\u9732\u5230\u4e00\u4e2a\u9ed1\u6697\u7684\u7f51\u7ad9\u4e0a\uff0c\u4e00\u540d\u8ddf\u8e2a\u8fc7\u53bb\u6570\u636e\u8f6c\u50a8\u7684\u52d2\u7d22\u8f6f\u4ef6\u4e13\u5bb6\u8868\u793a\uff0c\u5f88\u96be\u77e5\u9053\u4ed6\u4eec\u7a83\u53d6\u4e86\u4ec0\u4e48\u6570\u636e\uff0c\u4f46\u4ed6\u8868\u793a\uff0c\u8fd9\u8d77\u72af\u7f6a\u884c\u4e3a\u52a0\u5267\u4e86\u4e00\u6ce2\u9ad8\u5ea6\u516c\u5f00\u7684\u52d2\u7d22\u8f6f\u4ef6\u52d2\u7d22\u653b\u51fb\u6d6a\u6f6e\u3002\n\u4e13\u95e8\u4ece\u4e8b\u52d2\u7d22\u8f6f\u4ef6\u7684\u7f51\u7edc\u5b89\u5168\u516c\u53f8Emsisoft\u7684\u5a01\u80c1\u7814\u7a76\u5458\u5e03\u96f7\u7279\u00b7\u5361\u6d1b(Brett Clow)\u8868\u793a\uff0c\u4ed6\u4eec\u53ef\u80fd\u6ca1\u6709\u4ec0\u4e48\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u53ef\u80fd\u53ea\u662f\u8bd5\u56fe\u65bd\u52a0\u989d\u5916\u7684\u538b\u529b\u3002\u52d2\u7d22\u8f6f\u4ef6\u96c6\u56e2\u7684\u884c\u4e3a\u6b63\u53d8\u5f97\u66f4\u52a0\u9634\u9669\u548c\u6781\u7aef\u3002\u4ed6\u4eec\u73b0\u5728\u5c06\u6570\u636e\u6b66\u5668\u5316\uff0c\u5e76\u7528\u5b83\u6765\u5bf9\u4ed8\u88ab\u76d7\u7684\u516c\u53f8\u3002\n\u672c\u5468\uff0c\u8fd9\u4e2a\u7f51\u7edc\u5e2e\u6d3e\u4fb5\u5165\u4e86\u9876\u7ea7\u5a31\u4e50\u4e1a\u5f8b\u5e08\u4e8b\u52a1\u6240Grubman Shire Meiselas&amp\uff1bSacks\uff0c\u5e76\u6cc4\u9732\u4e86Lady Gaga\u7684\u6570\u5343\u4efd\u5408\u540c\u548c\u5176\u4ed6\u6587\u4ef6\u3002\n\u9ed1\u5ba2\u5a01\u80c1\u79f0\uff0c\u5982\u679c\u8be5\u5f8b\u5e08\u4e8b\u52a1\u6240\u4e0d\u652f\u4ed84200\u4e07\u7f8e\u5143\u7684\u8d4e\u91d1\uff0c\u4ed6\u4eec\u5c06\u516c\u5e03\u66f4\u591a\u540d\u4eba\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5e03\u9c81\u65af\u00b7\u65af\u666e\u6797\u65af\u6c40\u3001\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u963f\u594e\u83b1\u62c9\u7b49\u6570\u5341\u4eba\u3002\n\u6839\u636e\u540d\u4eba\u65b0\u95fb\u7f51\u7ad9\u7b2c\u516d\u9875\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u8fd9\u5bb6\u540d\u4e3aGrubman Shire Meiselas&amp\uff1bSacks\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\u8868\u793a\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u4e0d\u662f\u5ba2\u6237\uff0c\u4ed6\u4eec\u6ca1\u6709\u652f\u4ed8\u8d4e\u91d1\uff0c\u4ed6\u4eec\u6b63\u5728\u4e0e\u8054\u90a6\u8c03\u67e5\u5c40\u5408\u4f5c\u7834\u6848\u3002\n\u8fd9\u4e2a\u540d\u4e3aRevil\u7684\u56e2\u4f19\u5bf9\u52a0\u5bc6\u6570\u636e\u7684\u4f01\u4e1a\u6267\u884c\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\uff0c\u8981\u6c42\u8d4e\u91d1\u624d\u80fd\u91ca\u653e\u6570\u636e\uff0c\u5426\u5219\u5982\u679c\u4ed6\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u5c31\u4f1a\u6cc4\u9732\u6570\u636e\u3002\n\u8be5\u7ec4\u7ec7\u8bf4\uff0c\u5f53\u4ed6\u4eec\u53d1\u5e03\u4ed6\u4eec\u58f0\u79f0\u662f\u5173\u4e8e\u7279\u6717\u666e\u7684\u6570\u636e\u65f6\uff0c\u5f8b\u5e08\u5148\u751f\u8bf4\u5510\u7eb3\u5fb7\u4ece\u6765\u5c31\u4e0d\u662f\u4ed6\u4eec\u7684\u5ba2\u6237\u3002\u4ed6\u8bf4\u6211\u4eec\u662f\u5728\u865a\u5f20\u58f0\u52bf\u3002\u54e6\uff0c\u597d\u5427\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u5e26\u7740\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u5f20\u8d34\u3002&#34\uff1b\n\u6211\u4eec\u8bfb\u5230\u4e86\u5f53\u5c40\u7684\u7acb\u573a\u3002\u5ba3\u5e03\u8fd9\u662f\u4e00\u8d77\u6050\u6016\u4e3b\u4e49\u884c\u4e3a\u3002\u4f60\u7684\u7acb\u573a\u662f\u4f60\u7684\u9009\u62e9\u3002\u8fd9\u5bf9\u6211\u4eec\u7684\u5de5\u4f5c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u5b83\u53ea\u662f\u53ef\u4ee5\u5b8c\u5168\u5220\u9664\u6211\u4eec\u4ecd\u7136\u89c2\u5bdf\u5230\u7684\u67d0\u4e9b\u5e27\u3002\u4f46\u73b0\u5728\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5f8b\u5e08\u5148\u751f\u8bf4\u5510\u7eb3\u5fb7\u4ece\u6765\u4e0d\u662f\u4ed6\u4eec\u7684\u5ba2\u6237\u3002\u4ed6\u8bf4\u6211\u4eec\u662f\u5728\u865a\u5f20\u58f0\u52bf\u3002\u54e6\uff0c\u597d\u5427\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u5e26\u7740\u6700\u65e0\u5bb3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u53d1\u5e03\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u660e\u661f\u4eec\u652f\u6301(\u636e\u5a92\u4f53\u62a5\u9053)\u5f8b\u5e08\u5148\u751f\u3002\n\u4f46\u662f\uff0c\u5f53\u72d7\u4ed4\u961f\u5f00\u59cb\u5728\u5a92\u4f53\u4e0a\u53d1\u8868\u6587\u7ae0\u65f6\uff0c\u4ed6\u4eec\u7684\u652f\u6301\u529b\u5ea6\u4f1a\u6709\u591a\u5927\uff1f\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u62d2\u7edd\u53c2\u52a0\u67d0\u4e9b\u6d3b\u52a8\u3001\u97f3\u4e50\u4f1a\uff1f\u64a4\u56de\u5df2\u7b7e\u7684\u5408\u540c\uff0c\u53d6\u6d88\u4ed6\u4eec\u7684\u6f14\u51fa\uff1f\n\u5f8b\u5e08\u5148\u751f\uff0c\u4f60\u4f1a\u53d7\u5230\u8d23\u5907\u7684\u3002\u4f60\u8981\u81ea\u638f\u8170\u5305\u8d54\u507f\u6240\u6709\u635f\u5931\u3002\u6b64\u5916\uff0c\u6b63\u5982\u6b63\u786e\u6307\u51fa\u7684\u90a3\u6837\uff0c\u60a8\u7684\u58f0\u8a89\u5df2\u7ecf\u53d7\u635f\u3002\u4f46\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u4e3a\u8fd9\u662f\u6211\u4eec\u80fd\u505a\u7684\u6700\u574f\u7684\u4e8b\u4e86\u3002\u54e6\uff0c\u4e0d\u3002\u8fdc\u4e0d\u662f\u6700\u574f\u7684\u3002\u6211\u4eec\u548c\u60a8\u90fd\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u83b7\u5f97\u8d44\u91d1\uff1a\n1.\u4f60\u548c\u6211\u627e\u5230\u5171\u540c\u8bed\u8a00(\u4f60\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u56fd\u5bb6\u7684\u4e2d\u4ecb\u673a\u6784\uff0c\u56e0\u4e3a\u5f53\u5730\u7684\u767d\u75f4\u81ea\u5df1\u80cc\u540e\u6709\u4ec0\u4e48\u4e1c\u897f\u963b\u6b62\u4f60\u8fd9\u6837\u505a)\u3002\u7136\u540e\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u770b\u5230\u4f60\u91cd\u89c6\u5ba2\u6237\u7684\u58f0\u8a89\u548c\u5b89\u5168\u3002\u6211\u4eec\u627f\u8bfa\uff0c\u5728\u6211\u4eec\u8fbe\u6210\u534f\u8bae\u540e\uff0c\u8fd9\u4e9b\u6570\u636e\u4e0d\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u53d1\u5e03\u3001\u4f7f\u7528\u6216\u51fa\u552e\u3002\u8fd9\u662f\u6211\u4eec\u7684\u8bfa\u8a00\u3002\u6211\u4eec\u7684\u58f0\u8a89\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u6211\u4eec\u975e\u5e38\u73cd\u89c6\u3002\u6211\u4eec\u603b\u662f\u4fe1\u5b88\u8bfa\u8a00\u3002\u7136\u540e\u6211\u4eec\u62ff\u5230\u94b1\uff0c\u4f60\u5f52\u8fd8\u4f60\u7684\u58f0\u8a89\u3001\u6570\u636e\uff0c\u52a0\u5f3a\u4f60\u7684\u5b89\u5168\u5e76\u7ee7\u7eed\u751f\u6d3b\u3002\n2.\u4f60\u7ee7\u7eed\u542c\u806a\u660e\u4eba\u7684\u8bdd\uff0c\u4ed6\u4eec\u5f53\u7136\u4e0d\u4f1a\u8d54\u507f\u4f60\u7684\u635f\u5931\u3002\u6211\u4eec\u7684\u884c\u52a8\u5982\u4e0b\uff1a\n1)\u6211\u4eec\u6bcf\u5468(\u6309\u59d3\u6c0f)\u5728\u4fe1\u606f\u4ea4\u6613\u6240\u62cd\u5356\u5ba2\u6237\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u8981\u4e48\u88ab\u660e\u661f\u81ea\u5df1\u4e70\u8d70\uff0c\u8981\u4e48\u88ab\u5404\u79cd\u5a92\u4f53\u5230\u65f6\u6572\u8bc8\uff0c\u6216\u8005\u5e72\u8106\u662f\u597d\u5fc3\u4eba\u3002\u6211\u4eec\u4e0d\u5728\u4e4e\u3002\u6700\u91cd\u8981\u7684\u662f\u6211\u4eec\u4f1a\u62ff\u5230\u94b1\u3002\u76f8\u5e94\u5730\uff0c\u5728\u8fd9\u4e4b\u540e\uff0c\u4eba\u4eec\u5c06\u5f00\u59cb\u51fa\u73b0\u95ee\u9898\u3002\u800c\u4e14\uff0c\u54e6\uff0c\u662f\u7684\uff0c\u4ed6\u4eec\u4f1a\u77e5\u9053\u8fd9\u4ef6\u4e8b\u5e94\u8be5\u5f52\u548e\u4e8e\u8c01\u3002\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u5b89\u5168\u548c\u58f0\u8a89\u6765\u6362\u53d6\u91d1\u94b1\u3002\n2)\u60a8\u7684\u6570\u636e\u5c06\u4fdd\u6301\u4e0d\u53ef\u7528\u72b6\u6001\u3002\u8ba9\u6211\u4eec\u5b9e\u8bdd\u5b9e\u8bf4\u5427\u3002\u5373\u4f7f\u662f\u8fd9\u4e9b\u767d\u75f4\u4e5f\u4e0d\u80fd\u7834\u8bd1\u692d\u5706\u5bc6\u7801\u3002\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u7ee7\u7eed\u76f8\u4fe1\u4ed6\u4eec\u3002\u4f60\u6bcf\u5929\u90fd\u4f1a\u8499\u53d7\u635f\u5931\uff0c\u4ed6\u4eec\u6b63\u5728\u79ef\u6781\u8c03\u67e5\u8fd9\u8d77\u72af\u7f6a\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u81ea\u5df1\u4e5f\u77e5\u9053\u81ea\u5df1\u4f1a\u6389\u8fdb\u5899\u91cc\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u5bfb\u627e\u7684\u662f\u8868\u6f14\u8005\uff0c\u800c\u4e0d\u662f\u7ec4\u7ec7\u8005\u3002\u8fd9\u662f\u4ed6\u4eec\u7684\u4e8b\uff0c\u6211\u4eec\u770b\u7206\u7c73\u82b1\u73a9\u5f97\u5f88\u5f00\u5fc3\u3002\n\u8fd9\u5c31\u662f\u6211\u60f3\u8bf4\u7684\u5168\u90e8\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u5bf9\u6211\u4eec\u6709\u5229\u3002\u6211\u4eec\u4f1a\u5f97\u5230\u5b83\u7684\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u4f60\u5c06\u906d\u53d7\u591a\u5927\u7684\u635f\u5931(\u539f\u6587\u5982\u6b64)\u3002\u8fd8\u6709\u90a3\u4e9b\u4fe1\u4efb\u4f60\u7684\u4eba\u3002", "note_en": "The unidentified cybergang who  dumped Lady Gaga&#39;s data after the hack of a prominent entertainment law firm have dumped what they say is data about the president.\n The cybergang dropped links to &#34;the first part of data, with the most harmless information,&#34; on the dark web site. A sampling of the files reviewed by Business Insider were were legal emails, documents, and contracts mentioning the president, from an &#34;Apprentice&#34; costar&#39;s emails seeking to land a new show during his campaign, to the contracts negotiating legal use of his videotaped interviews.\n The  ransomware gang has stolen data from businesses and leaked it on a dark web site in the past, and a ransomware expert who has followed past data dumps said it&#39;s difficult to know what they data they have stolen \u2013 but said the crime adds to  a wave of highly public ransomware extortion attacks.\n &#34;They may have nothing significant and could simply be attempting to apply to additional pressure,&#34; said Brett Callow, a threat researcher at Emsisoft, a cybersecurity company that specializes in ransomware. &#34;The actions of ransomware groups are becoming ever more insidious and ever more extreme. They now weaponize data and use it against the companies from which it was stolen.&#34;\n   This week, the cybergang  hacked into top entertainment law firm Grubman Shire Meiselas &amp; Sacks, and leaked thousands of contracts and other documents from Lady Gaga.\n The hackers have threatened to release more data about celebrities, including Bruce Springsteen, Christina Aguilera, and dozens of others if the law firm doesn&#39;t pay $42 million in ransom.\n The law firm,  Grubman Shire Meiselas &amp; Sacks, said that President Donald Trump is not a client, that they are not paying the ransom, and that they are working with the FBI to solve the crime, according to a statement published by the celebrity news site  Page Six.\n The gang, REvil, executes ransomware attacks on businesses in which it encrypts their data, demands a ransom to release it, otherwise leaking it if they fail to do so.\n   As they dumped data they claimed are about Trump, the group said, &#34;Mr. Lawyer says that Donald has never been their client. And he says that we are bluffing. Oh well. The first part, with the most harmless information, we will post here.&#34;\n   We read the position of the authorities. Declare this an act of terrorism. Your position is your choice. This will not affect our work in any way. It&#39;s just that it can completely erase certain frames that we still observed. But now is not about that.\n   Mr. Lawyer says that Donald has never been their client. And he says that we are bluffing. Oh well. The first part, with the most harmless information, we will post here. We are very pleased that the stars support (according to media reports) Mr. Lawyer\n But how strong will their support be when the paparazzi start publishing in the media? When will they begin to refuse to participate in certain events, concerts? Withdraw signed contracts, cancel their performances?\n Mr. lawyer, you will be to blame. And you will pay all losses from your pocket. Moreover, as correctly noted, your reputation has already suffered. But everyone believes that this is the worst we could do. Oh no. Far from the worst. Both we and you are aware of this. We will receive money in 2 ways:\n 1. You and I find a common language (you can even [sic] through intermediaries in other countries, since local idiots who themselves have something behind their backs prevent you from doing this). Then, everyone will see that you value the reputation and safety of customers. We give our word that after our agreements the data will not be published, used somewhere, or sold. This is our word. Our reputation is very well known and dear to us. We always keep our words. Then we get money, you return your reputation, data, strengthen your security and continue to live.\n   2. You continue to listen to smart guys who, of course, will not compensate you for losses. Our actions will be as follows:\n 1) We will auction customer data every week (by last name) on the information exchange.\u00a0  This data will be bought either by the stars themselves, or various media and blackmail them then, or simply kind people with good intentions. We do not care. The main thing is we will get the money.  Accordingly, after this, people will begin to have problems. And, oh yes, they will know who to blame for this. And who put their safety and reputation in exchange for money.\n 2) Your data will remain unavailable. Let&#39;s be honest. Even these idiots cannot decipher elliptic cryptography. Although you can continue to believe them. You incur losses daily, and they are actively investigating this crime, although they themselves understand that they will fall into the wall. Moreover, they are looking for performers, not organizers. This is their business, we have fun watching with popcorn.\n That&#39;s all I wanted to say. As you can see, both options benefit us. And we will get it. The only question is how strong losses [sic] you will incur. And those who trusted you.", "posttime": "2020-05-17 05:46:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u9ed1\u5ba2,gaga,gang,\u6570\u636e", "title": "Lady Gaga\u9ed1\u5ba2\u80cc\u540e\u7684\u52d2\u7d22\u8f6f\u4ef6\u56e2\u4f19\u8f6c\u50a8\u7279\u6717\u666e\u6587\u4ef6", "title_en": "Ransomware gang behind Lady Gaga hack dumps Trump docs", "transed": 1, "url": "https://www.businessinsider.com/ransomware-trump-lady-gaga-hack-leaks-files-presidents-2020-5", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u9ed1\u5ba2", "gaga", "gang", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "e486419aaf96bc43c6c9d1e6cb057466.png", "infoid": 1002444, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "XP.css\u662f98.css\u7684\u6269\u5c55\u3002\u4e00\u4e2aCSS\u5e93\uff0c\u7528\u4e8e\u6784\u5efa\u770b\u8d77\u6765\u50cf\u65e7UI\u7684\u754c\u9762\u3002\u8bf7\u53c2\u9605GitHub\u4e0a\u7684XP.css\u8bf7\u53c2\u9605GitHub\u4e0a\u768498.css\u3002\n\u8fd9\u4e2a\u5e93\u4f9d\u8d56\u4e8e\u8bed\u4e49HTML\u7684\u4f7f\u7528\u3002\u8981\u5236\u4f5c\u6309\u94ae\uff0c\u60a8\u9700\u8981\u4f7f\u7528&lt\uff1b\u6309\u94ae&gt\uff1b\u3002\u8f93\u5165\u5143\u7d20\u9700\u8981\u6807\u7b7e\u3002\u56fe\u6807\u6309\u94ae\u4f9d\u8d56\u4e8e\u548f\u53f9\u8c03\u6807\u7b7e\u3002\u672c\u9875\u9762\u5c06\u6307\u5bfc\u60a8\u5b8c\u6210\u8be5\u8fc7\u7a0b\uff0c\u4f46\u53ef\u8bbf\u95ee\u6027\u662f\u6b64\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u6807\u3002\n\u60a8\u53ef\u4ee5\u8986\u76d6\u5143\u7d20\u7684\u8bb8\u591a\u6837\u5f0f\uff0c\u540c\u65f6\u4fdd\u6301\u8be5\u5e93\u63d0\u4f9b\u7684\u5916\u89c2\u3002\u4f60\u7684\u7ebd\u6263\u9700\u8981\u66f4\u591a\u7684\u886c\u57ab\u5417\uff1f\u52c7\u6562\u70b9\u513f\u3002\u9700\u8981\u4e3a\u60a8\u7684\u8f93\u5165\u6807\u7b7e\u6dfb\u52a0\u4e00\u4e9b\u989c\u8272\u5417\uff1f\u8bf7\u4fbf\u3002\n\u8fd9\u4e2a\u5e93\u4e0d\u5305\u542b\u4efb\u4f55JavaScript\uff0c\u5b83\u53ea\u662f\u7528\u4e00\u4e9bCSS\u8bbe\u7f6eHTML\u7684\u6837\u5f0f\u3002\u8fd9\u610f\u5473\u774098.css\u4e0e\u60a8\u9009\u62e9\u7684\u524d\u7aef\u6846\u67b6\u517c\u5bb9\u3002\n\u4e0b\u9762\u662f\u5c06XP.css\u4e0eReact\u4e00\u8d77\u4f7f\u7528\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u4e0e\u666e\u901aJavaScript\u4e00\u8d77\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4f7f\u7528XP.css\u7684\u6700\u5feb\u65b9\u5f0f\u662f\u4eceunpkg\u5bfc\u5165\u5b83\u3002\n\u547d\u4ee4\u6309\u94ae\uff0c\u4e5f\u79f0\u4e3a\u6309\u94ae\uff0c\u662f\u5f53\u7528\u6237\u5355\u51fb\u5b83\u65f6\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u63a7\u4ef6\u3002\n\u6807\u51c6\u6309\u94ae\u5bbd75px\uff0c\u9ad823px\uff0c\u5916\u6846\u548c\u5185\u6846\u51f8\u8d77\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u4f1a\u83b7\u5f9712px\u7684\u6c34\u5e73\u586b\u5145\u3002\n\u5355\u51fb\u6309\u94ae\u65f6\uff0c\u51f8\u8d77\u7684\u8fb9\u6846\u4f1a\u4e0b\u9677\u3002\u4ee5\u4e0b\u6309\u94ae\u88ab\u6a21\u62df\u4e3a\u5904\u4e8e\u6309\u4e0b(\u6fc0\u6d3b)\u72b6\u6001\u3002\n\u7981\u7528\u7684\u6309\u94ae\u4fdd\u6301\u76f8\u540c\u7684\u51f8\u8d77\u8fb9\u6846\uff0c\u4f46\u5176\u6807\u7b7e\u4e2d\u7684\u5916\u89c2\u4e3a\u892a\u8272\u3002\n\u6309\u94ae\u7126\u70b9\u4e0e\u865a\u7ebf\u8fb9\u6846\u901a\u4fe1\uff0c\u5728\u6309\u94ae\u5185\u5bb9\u5185\u8bbe\u7f6e4px\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u88ab\u6a21\u62df\u4e3a\u805a\u7126\u3002\n\u590d\u9009\u6846\u7531\u4e00\u4e2a\u51f9\u9677\u9762\u677f\u8868\u793a\uff0c\u9009\u4e2d\u65f6\uff0c\u8be5\u9762\u677f\u4f1a\u5728\u6307\u793a\u9009\u9879\u7684\u6807\u7b7e\u65c1\u8fb9\u586b\u5145\u4e00\u4e2a\u590d\u9009\u56fe\u6807\u3002\n\u6ce8\u610f\uff1a\u5fc5\u987b\u4f7f\u7528&lt\uff1blabel&gt\uff1b\u5143\u7d20\u5e76\u5c06for\u5c5e\u6027\u6307\u5411\u8f93\u5165\u7684id\uff0c\u5728\u590d\u9009\u6846\u540e\u5305\u542b\u76f8\u5e94\u7684\u6807\u7b7e\u3002\u8fd9\u786e\u4fdd\u590d\u9009\u6846\u6613\u4e8e\u4e0e\u8f85\u52a9\u6280\u672f\u4e00\u8d77\u4f7f\u7528\uff0c\u540c\u65f6\u786e\u4fdd\u6240\u6709\u4eba\u90fd\u6709\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c(\u4f7f\u7528Tab\u952e\u5bfc\u822a\uff0c\u80fd\u591f\u5355\u51fb\u6574\u4e2a\u6807\u7b7e\u4ee5\u9009\u4e2d\u8be5\u6846)\u3002\n\u5bf9\u8f93\u5165\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u4f7f\u7528field-row\u7c7b\u5c06\u6bcf\u4e2a\u8f93\u5165\u5305\u88c5\u5728\u5bb9\u5668\u4e2d\u3002\u8fd9\u786e\u4fdd\u4e86\u8f93\u5165\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e00\u81f4\u3002\n\u9009\u9879\u6309\u94ae(\u4e5f\u79f0\u4e3a\u5355\u9009\u6309\u94ae)\u8868\u793a\u6709\u9650\u7684\u4e92\u65a5\u9009\u9879\u96c6\u4e2d\u7684\u5355\u4e2a\u9009\u9879\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u6237\u53ea\u80fd\u9009\u62e9\u4e00\u7ec4\u9009\u9879\u3002\n\u53ef\u4ee5\u901a\u8fc7\u5728\u6bcf\u4e2a\u8f93\u5165\u4e0a\u6307\u5b9a\u5171\u4eab\u540d\u79f0\u5c5e\u6027\u6765\u5bf9\u9009\u9879\u6309\u94ae\u8fdb\u884c\u5206\u7ec4\u3002\u5982\u524d\u6240\u8ff0\uff1a\u5bf9\u8f93\u5165\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u4f7f\u7528field-row\u7c7b\u5c06\u6bcf\u4e2a\u8f93\u5165\u5305\u88c5\u5728\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u4ee5\u786e\u4fdd\u8f93\u5165\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e00\u81f4\u3002\n\u82b1\u751f\u9171\u5e94\u8be5\u662f\u5149\u6ed1\u7684\u6211\u7406\u89e3\u4e3a\u4ec0\u4e48\u4eba\u4eec\u559c\u6b22\u8106\u8106\u7684\u82b1\u751f\u9171\u8106\u8106\u7684\u82b1\u751f\u9171\u662f\u597d\u7684\n\u521b\u5efa\u9009\u9879\u5361\u65f6\uff0c\u60a8\u5c06\u4f7f\u7528\u7ae0\u8282class=&#34\uff1btab&#34\uff1b\uff0c\u7136\u540e\u4f7f\u7528\u6807\u7b7eclass=&#34\uff1btab.title&#34\uff1b\u548c\u6bcf\u4e2a\u9009\u9879\u5361\u7684\u5185\u5bb9(\u4f7f\u7528\u6587\u7ae0class=&#34\uff1btab-content&#34\uff1b\u5143\u7d20)\u3002\n\u8981\u5c06\u9009\u9879\u5361\u6807\u8bb0\u4e3a\u53ef\u89c1\uff0c\u53ef\u4ee5\u5728HTML\u4e2d\u9759\u6001\u5730\u6216\u4f7f\u7528JavaScript\u52a8\u6001\u5730\u5c06.active\u7c7b\u6dfb\u52a0\u5230.tab-title\u548c.tab-content\u4e2d\u3002\u5f53\u60a8\u8981\u66f4\u6539\u5b83\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5176\u4ece\u5176\u4ed6\u9009\u9879\u5361\u4e2d\u5220\u9664\uff01\nTab 1 Tab 2 Tab 3\u9009\u9879\u5361\u5185\u5bb9\u521b\u5efa\u9009\u9879\u5361\u65f6\uff0c\u60a8\u5c06\u4f7f\u7528\u7ae0\u8282class=&#34\uff1btab&#34\uff1b\uff0c\u7136\u540e\u5bf9\u4e8e\u9009\u9879\u5361\u6807\u9898\uff0c\u4f7f\u7528\u6807\u7b7eclass=&#34\uff1btab.title&#34\uff1b\uff0c\u5e76\u4f7f\u7528\u6587\u7ae0class=&#34\uff1btab-content&#34\uff1b\u5143\u7d20\u663e\u793a\u6bcf\u4e2a\u9009\u9879\u5361\u7684\u5185\u5bb9\u3002\u8981\u5c06\u9009\u9879\u5361\u6807\u8bb0\u4e3a\u53ef\u89c1\uff0c\u53ef\u4ee5\u5728HTML\u4e2d\u9759\u6001\u5730\u6216\u4f7f\u7528JavaScript\u52a8\u6001\u5730\u5c06.active\u7c7b\u6dfb\u52a0\u5230.tab-title\u548c.tab-content\u4e2d\u3002\u5f53\u60a8\u8981\u66f4\u6539\u5b83\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5176\u4ece\u5176\u4ed6\u9009\u9879\u5361\u4e2d\u5220\u9664\uff01\u66f4\u591a.\u3002\u6b64\u9009\u9879\u5361\u5305\u542bGroupBox\u4eca\u65e5\u60c5\u7eea\u514b\u83b1\u5c14\u00b7\u8428\u83f2\u5179\u00b7\u5e03\u62c9\u5fb7\u00b7\u91cc\u6602\u514b\u91cc\u65af\u00b7\u6469\u6d1b\u54e5\u00b7\u5361\u62c9\u00b7\u62c9\u5229\u97f3\u4e50\u9009\u9879\u53613 Lorem Ipsum Dolor Site\u3002\n\u5206\u7ec4\u6846\u662f\u53ef\u7528\u4e8e\u7ec4\u7ec7\u4e00\u7ec4\u63a7\u4ef6\u7684\u7279\u6b8a\u63a7\u4ef6\u3002\u5206\u7ec4\u6846\u662f\u5177\u6709\u56f4\u7ed5\u4e00\u7ec4\u63a7\u4ef6\u7684\u53ef\u9009\u6807\u7b7e\u7684\u77e9\u5f62\u6846\u67b6\u3002\n\u7ec4\u6846\u53ef\u4ee5\u901a\u8fc7\u7528fieldset\u6807\u7b7e\u5305\u88c5\u60a8\u7684\u5143\u7d20\u6765\u4f7f\u7528\u3002\u5b83\u5305\u542b\u4e00\u4e2a\u51f9\u9677\u7684\u5916\u8fb9\u6846\u548c\u4e00\u4e2a\u51f8\u8d77\u7684\u5185\u8fb9\u6846\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u4ef6\u5468\u56f4\u7684\u96d5\u523b\u6846\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u5b57\u6bb5\u96c6\u4e2d\u653e\u7f6e\u56fe\u4f8b\u5143\u7d20\u4e3a\u60a8\u7684\u7ec4\u63d0\u4f9b\u6807\u7b7e\u3002\n\u6587\u672c\u6846(\u4e5f\u79f0\u4e3a\u7f16\u8f91\u63a7\u4ef6)\u662f\u4e00\u4e2a\u77e9\u5f62\u63a7\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u8f93\u5165\u6216\u7f16\u8f91\u6587\u672c\u3002\u5b83\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u652f\u6301\u5355\u884c\u6216\u591a\u884c\u6587\u672c\u3002\n\u53ef\u4ee5\u901a\u8fc7\u5728\u8f93\u5165\u5143\u7d20\u4e0a\u6307\u5b9a\u6587\u672c\u7c7b\u578b\u6765\u5448\u73b0\u6587\u672c\u6846\u3002\u4e0e\u590d\u9009\u6846\u548c\u5355\u9009\u6309\u94ae\u4e00\u6837\uff0c\u60a8\u5e94\u8be5\u63d0\u4f9b\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u5e76\u6b63\u786e\u8bbe\u7f6e\u5c5e\u6027\uff0c\u5e76\u4f7f\u7528field-row\u7c7b\u5c06\u4e24\u8005\u5305\u88c5\u5728\u5bb9\u5668\u4e2d\u3002\n\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u6bb5\u884c\u5806\u53e0\u7c7b\u5c06\u6807\u7b7e\u653e\u7f6e\u5728\u8f93\u5165\u7684\u4e0a\u65b9\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u65c1\u8fb9\u3002\n\u6ed1\u5757(\u6709\u65f6\u79f0\u4e3a\u8ddf\u8e2a\u6761\u63a7\u4ef6)\u7531\u5b9a\u4e49\u8c03\u6574\u8303\u56f4\u6216\u8303\u56f4\u7684\u6761\u548c\u663e\u793a\u63a7\u4ef6\u5f53\u524d\u503c\u7684\u6307\u793a\u5668\u7ec4\u6210\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528Has-box-Indicator\u7c7b\u5c06\u9ed8\u8ba4\u6307\u793a\u5668\u66ff\u6362\u4e3a\u6846\u6307\u793a\u5668\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528is-Vertical\u7528div\u5305\u88c5\u6ed1\u5757\u4ee5\u5782\u76f4\u663e\u793a\u8f93\u5165\u3002\n\u6ce8\u610f\uff1a\u8981\u66f4\u6539\u5782\u76f4\u6ed1\u5757\u7684\u957f\u5ea6\u3001\u8f93\u5165\u5bbd\u5ea6\u548cdiv\u9ad8\u5ea6\u3002\n\u4e0b\u62c9\u5217\u8868\u6846\u4ec5\u5141\u8bb8\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u5355\u4e2a\u9879\u76ee\u3002\u5728\u5173\u95ed\u72b6\u6001\u4e0b\uff0c\u63a7\u4ef6\u663e\u793a\u63a7\u4ef6\u7684\u5f53\u524d\u503c\u3002\u7528\u6237\u6253\u5f00\u5217\u8868\u4ee5\u66f4\u6539\u8be5\u503c\u3002\n5-\u96be\u4ee5\u7f6e\u4fe1\uff014-\u592a\u68d2\u4e86\uff013-\u76f8\u5f53\u4e0d\u95192-\u4e0d\u592a\u68d21-\u4e0d\u5e78\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u9009\u62e9\u7b2c\u4e00\u4e2a\u9009\u9879\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879\u5143\u7d20\u6307\u5b9a\u9009\u5b9a\u5c5e\u6027\u6765\u66f4\u6539\u6b64\u8bbe\u7f6e\u3002\n5-\u96be\u4ee5\u7f6e\u4fe1\uff014-\u592a\u68d2\u4e86\uff013-\u76f8\u5f53\u4e0d\u95192-\u4e0d\u592a\u68d21-\u4e0d\u5e78\n\u5728\u7a97\u53e3\u7684\u9876\u90e8\u8fb9\u7f18\uff0c\u5728\u5176\u8fb9\u6846\u5185\uff0c\u662f\u6807\u9898\u680f(\u4e5f\u79f0\u4e3a\u6807\u9898\u680f\u6216\u6807\u9898\u680f)\uff0c\u5b83\u5ef6\u4f38\u5230\u6574\u4e2a\u7a97\u53e3\u7684\u5bbd\u5ea6\u3002\u6807\u9898\u680f\u6807\u8bc6\u7a97\u53e3\u7684\u5185\u5bb9\u3002\n\u5728\u6807\u9898\u680f\u4e2d\u5305\u62ec\u4e0e\u4e3b\u7a97\u53e3\u7684\u516c\u5171\u547d\u4ee4\u76f8\u5173\u8054\u7684\u547d\u4ee4\u6309\u94ae\u3002\u8fd9\u4e9b\u6309\u94ae\u5145\u5f53\u7279\u5b9a\u7a97\u53e3\u547d\u4ee4\u7684\u5feb\u6377\u65b9\u5f0f\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u7c7b\u6765\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u6807\u9898\u680f\uff1aTitle-Bar\u3001Title-Bar-Text\u548cTitle-Bar-Controls\u3002\n\u6211\u4eec\u4f7f\u7528aria-label\u6765\u5448\u73b0Close\u6309\u94ae\uff0c\u8ba9\u8f85\u52a9\u6280\u672f\u77e5\u9053\u8be5\u6309\u94ae\u7684\u7528\u610f\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528&#34\uff1b\u6700\u5c0f\u5316&#34\uff1b\u548c&#34\uff1b\u6700\u5927\u5316&#34\uff1b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4e3a\u4e86\u7ed9\u6211\u4eec\u7684\u6807\u9898\u680f\u4e00\u4e2a\u5bb6\uff0c\u6211\u4eec\u4f7f\u7528\u4e86Window\u7c7b\u3002\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51f8\u8d77\u7684\u5916\u8fb9\u754c\u548c\u5185\u8fb9\u754c\uff0c\u4ee5\u53ca\u4e00\u4e9b\u586b\u5145\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u5bb9\u5668\u6837\u5f0f\u4e2d\u6307\u5b9a\u5bbd\u5ea6\u6765\u81ea\u7531\u8c03\u6574\u7a97\u53e3\u7684\u5927\u5c0f\u3002\n\u8981\u7ed8\u5236\u7a97\u53e3\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4f7f\u7528\u6807\u9898\u680f\u4e0b\u9762\u7684Window-Body\u7c7b\u3002\n\u5fae\u8f6f\u276eR\u276f\u89c6\u7a97DOS\u276eC\u276f\u7248\u6743\u6240\u6709\u5fae\u8f6f\u516c\u53f81990\u5e74\u81f32001\u5e74\u3002C\uff1a\\WINDOWS\\system32&gt\uff1b\u60a8\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u548c\u524d\u6807\u8bb0\u8f7b\u677e\u6784\u5efa\u547d\u4ee4\u884c\u3002\n\u547d\u4ee4\u63d0\u793a\u7b26Microsoft&amp\uff1b#10094\uff1bR&amp\uff1b#10095\uff1bWindows DOS&amp\uff1b#10094\uff1bC&amp\uff1b#10095\uff1b\u7248\u6743\u6240\u6709Microsoft Corp.1990-2001\u5e74\u3002C\uff1a&amp\uff1b#92\uff1bWindows&amp\uff1b#92\uff1bsystem32&&gt;\u60a8\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u548c\u524d\u6807\u8bb0\u8f7b\u677e\u6784\u5efa\u547d\u4ee4\u884c\n\u4e00\u4e2a\u6709\u6807\u7b7e\u548c\u7ec4\u7684\u7a97\u53e3\uff0c\u97f3\u4e50\u72d7\u98df\u7269\u8bbe\u7f6e\u4f60\u7684\u8046\u542c\u504f\u597d\u4eca\u5929\u7684\u5fc3\u60c5\u5c3c\u57fa\u00b7\u7c73\u5a1c\u00b7\u8d1d\u5c14\u5854\u65af\u8ff7\u4eba\u7684\u83ab\u59ae\u514b\u00b7\u6069\u5854\u65af\u5854(Nicki Minaj Bell Towers)\uff0c\u9b45\u529b\u5341\u8db3\u7684\u83ab\u59ae\u514b\u00b7\u6069(Monique En)\u3002V\u91cd\u7f6e\u8b66\u62a5.\u3002\u5c1d\u8bd5\u8fd9\u6837\u505a\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5173\u6ce8\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6587\u7ae0\u6807\u7b7e\u4e3a\u6bcf\u4e2a\u9009\u9879\u5361\u521b\u5efa\u5185\u5bb9\u3002\u597d\u7684\uff0c\u53d6\u6d88\u3002\n\u6811\u89c6\u56fe\u63a7\u4ef6\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5217\u8868\u6846\u63a7\u4ef6\uff0c\u5b83\u6839\u636e\u5bf9\u8c61\u7684\u903b\u8f91\u5c42\u6b21\u5173\u7cfb\u5c06\u4e00\u7ec4\u5bf9\u8c61\u663e\u793a\u4e3a\u7f29\u8fdb\u8f6e\u5ed3\u3002\n\u8981\u5448\u73b0\u6811\u89c6\u56fe\uff0c\u8bf7\u5c06ul\u5143\u7d20\u4e0e\u6811\u89c6\u56fe\u7c7b\u4e00\u8d77\u4f7f\u7528\u3002\u8fd9\u4e2a\u5217\u8868\u7684\u5b50\u5143\u7d20(li\u5143\u7d20)\u53ef\u4ee5\u5305\u542b\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u5185\u5bb9\u3002\n\u8981\u4f7f\u5176\u6210\u4e3a\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u5d4c\u5957\u66f4\u591a\u7684ul\u5143\u7d20(\u8fd9\u4e9b\u5143\u7d20\u4e0a\u4e0d\u9700\u8981\u7c7b)\u3002\u8fd9\u5c06\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e00\u4e2a\u6f02\u4eae\u7684\u865a\u7ebf\u8fb9\u6846\u548c\u7f29\u8fdb\uff0c\u4ee5\u8bf4\u660e\u6811\u7684\u7ed3\u6784\u3002\n\u76ee\u5f55\u4ec0\u4e48\u662fWeb\u5f00\u53d1\uff1fCSS\u9009\u62e9\u5668\u7279\u5b9a\u5c5e\u6027JavaScript\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u907f\u514d\uff0c\u9664\u975e\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u907f\u514d\u6240\u6709\u8d39\u7528HTML\u7279\u522b\u611f\u8c22\u3002\n\u8bf7\u53c2\u8003GitHub\u95ee\u9898\u9875\u9762\uff0c\u67e5\u770b\u6211\u7684CSS\u4e2d\u7684\u9519\u8bef\u6216\u62a5\u544a\u65b0\u7684\u9519\u8bef\u3002\u8fd8\u8981\u68c0\u67e598.css\u7684\u95ee\u9898\u3002\ncss\u4e00\u5f00\u59cb\u662f98.css(\u7531Jordan Scales\u53d1\u8d77\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u9879\u76ee)\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u73b0\u5728\u6b63\u8bd5\u56fe\u5c06GUI\u4f5c\u4e3a\u6837\u677f\uff0c\u4ee5\u4fbf\u80fd\u591f\u8f7b\u677e\u5730\u5c06\u5176\u4f5c\u4e3a\u4e3b\u9898\u3002\u5982\u679c\u4f60\u60f3\u505a\u4e00\u4e2a\u4e3b\u9898\u6216\u8005\u505a\u8d21\u732e\uff0c\u6211\u5f88\u60f3\u770b\u770b\u4f60\u80fd\u628a\u8fd9\u4e2a\u5e26\u5230\u54ea\u91cc\u53bb\uff01\n\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\u9879\u76ee\uff01\ud83c\udf78\u8003\u8651\u5728GitHub\u4e0a\u4e3b\u6f14/\u5173\u6ce8\uff0c\u5728\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002", "note_en": "XP.css is an extention of 98.css. A CSS library for building interfaces that look like old UIs.  See  XP.css on GitHub  See  98.css on GitHub\n    This library relies on the usage of  semantic HTML. To make a button, you&#39;ll need to use a  &lt;button&gt;. Input elements require labels. Icon buttons rely on  aria-label. This page will guide you through that process, but accessibility is a primary goal of this project.\n  You can override many of the styles of your elements while maintaining the appearance provided by this library. Need more padding on your buttons? Go for it. Need to add some color to your input labels? Be our guest.\n  This library does not contain any JavaScript, it merely styles your HTML with some CSS. This means 98.css is compatible with your frontend framework of choice.\n  Here is an example of  XP.css used with React, and  an example with vanilla JavaScript. The fastest way to use XP.css is to import it from unpkg.\n              A  command button, also referred to as a push button, is a control that causes the application to perform some action when the user clicks it.\n  A standard button measures 75px wide and 23px tall, with a raised outer and inner border. They are given 12px of horizontal padding by default.\n    When buttons are clicked, the raised borders become sunken. The following button is simulated to be in the pressed (active) state.\n    Disabled buttons maintain the same raised border, but have a &#34;washed out&#34; appearance in their label.\n    Button focus is communicated with a dotted border, set 4px within the contents of the button. The following example is simulated to be focused.\n  Checkboxes are represented with a sunken panel, populated with a &#34;check&#34; icon when selected, next to a label indicating the choice.\n  Note: You  must include a corresponding label  after your checkbox, using the  &lt;label&gt; element with a  for attribute pointed at the  id of your input. This ensures the checkbox is easy to use with assistive technologies, on top of ensuring a good user experience for all (navigating with the tab key, being able to click the entire label to select the box).\n      When grouping inputs, wrap each input in a container with the  field-row class. This ensures a consistent spacing between inputs.\n  An  option button, also referred to as a radio button, represents a single choice within a limited set of mutually exclusive choices. That is, the user can choose only one set of options.\n    Option buttons can be grouped by specifying a shared  name attribute on each input. Just as before: when grouping inputs, wrap each input in a container with the  field-row class to ensure a consistent spacing between inputs.\n      Peanut butter should be smooth       I understand why people like crunchy peanut butter       Crunchy peanut butter is good\n  You create the tabs, you would use a  section class=&#34;tabs&#34; then for the tab titles you use a  label class=&#34;tab.title&#34; and the content for each tab by using an  article class=&#34;tab-content&#34; element.\n  To mark a tab as visible, add the  .active class to the  .tab-title and the  .tab-content either statically in your HTML or dynamically using JavaScript. Don&#39;t forget to remove it from the other tabs when you&#39;re changing it!\n      Tab 1   Tab 2   Tab 3     Tab Content    You create the tabs, you would use a  section class=&#34;tabs&#34;  then for the tab titles you use a  label class=&#34;tab.title&#34;  and the content for each tab by using an  article class=&#34;tab-content&#34;  element.     To mark a tab as visible, add the  .active  class to the  .tab-title  and the  .tab-content  either statically in your HTML or dynamically using JavaScript. Don&#39;t forget to remove it from the other tabs when you&#39;re changing it!        More...   This tab contains a GroupBox     Today&#39;s mood       Claire Saffitz         Brad Leone         Chris Morocco         Carla Lalli Music           Tab 3   Lorem Ipsum Dolor Sit\n  A  group box is a special control you can use to organize a set of controls. A group box is a rectangular frame with an optional label that surrounds a set of controls.\n  A group box can be used by wrapping your elements with the  fieldset tag. It contains a sunken outer border and a raised inner border, resembling an engraved box around your controls.\n    You can provide your group with a label by placing a  legend element within the  fieldset.\n  A  text box (also referred to as an edit control) is a rectangular control where the user enters or edits text. It can be defined to support a single line or multiple lines of text.\n  Text boxes can rendered by specifying a  text type on an  input element. As with checkboxes and radio buttons, you should provide a corresponding label with a properly set  for attribute, and wrap both in a container with the  field-row class.\n    Additionally, you can make use of the  field-row-stacked class to position your label above the input instead of beside it.\n  A  slider, sometimes called a trackbar control, consists of a bar that defines the extent or range of the adjustment and an indicator that shows the current value for the control...\n      You can make use of the  has-box-indicator class replace the default indicator with a box indicator, furthermore the slider can be wrapped with a  div using  is-vertical to display the input vertically.\n  Note: To change the length of a vertical slider, the  input width and  div height.\n  A  drop-down list box allows the selection of only a single item from a list. In its closed state, the control displays the current value for the control. The user opens the list to change the value.\n    5 - Incredible!   4 - Great!   3 - Pretty good   2 - Not so great   1 - Unfortunate\n  By default, the first option will be selected. You can change this by giving one of your  option elements the  selected attribute.\n  5 - Incredible!   4 - Great!   3 - Pretty good   2 - Not so great   1 - Unfortunate\n      At the top edge of the window, inside its border, is the title bar (also reffered to as the caption or caption bar), which extends across the width of the window. The title bar identifies the contents of the window.\n  Include command buttons associated with the common commands of the primary window in the title bar. These buttons act as shortcuts to specific window commands.\n  You can build a complete title bar by making use of three classes,  title-bar,  title-bar-text, and  title-bar-controls.\n    We make use of  aria-label to render the Close button, to let assistive technologies know the intent of this button. You may also use &#34;Minimize&#34; and &#34;Maximize&#34; like so:\n  To give our title bar a home, we make use of the  window class. This provides a raised outer and inner border, as well as some padding. We can freely resize the window by specifying a width in the container style.\n    To draw the contents of the window, we use the  window-body class under the title bar.\n    Microsoft\u276eR\u276f Windows DOS \u276eC\u276f Copyright Microsoft Corp 1990-2001.  C:\\WINDOWS\\SYSTEM32&gt; You can build a command line easily with a window and pre tag\n      Command Prompt                    Microsoft &amp;#10094;R &amp;#10095; Windows DOS  &amp;#10094;C &amp;#10095; Copyright Microsoft Corp 1990-2001.  C: &amp;#92;WINDOWS &amp;#92;SYSTEM32&gt; You can build a command line easily with a window and pre tag\n  A Window With Tabs and Groups                      Music   Dogs   Food     Set your listening preferences     Today&#39;s mood       Nicki Minaj         Bell Towers         The Glamorous Monique         EN. V         Reset Alarm...   Try this to get some attention                You create the content for each tab by using an  article  tag.             OK   Cancel\n  A  tree view control is a special list box control that displays a set of objects as an indented outline based on their logical hierarchical relationship.\n  To render a tree view, use an  ul element with the  tree-view class. The children of this list ( li elements), can contain whatever you&#39;d like.\n    To make this a tree, we can nest further  ul elements (no class needed on these). This will provide them with a nice dotted border and indentation to illustrate the structure of the tree.\n    Table of Contents   What is web development?    CSS    Selectors   Specificity   Properties           JavaScript     Avoid at all costs       Unless     Avoid       At     Avoid   At   All   Cost         All   Cost               HTML   Special Thanks\n      Refer to  the GitHub issues page to see bugs in my CSS or report new ones. Also check the  issues for 98.css.\n  XP.css started as a fork of  98.css (a fun project started by  Jordan Scales) and is now trying to boilerplate the GUI to be able to theme it easily.   If you want to make a theme or contribute i&#39;d love to see where you can take this!\n  Hopefully you&#39;ve enjoyed this project! \ud83c\udf78 Consider  starring/following along on GitHub and following me on  Twitter.", "posttime": "2020-05-17 05:00:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,css", "title": "XP.css-\u7528\u4e8e\u6784\u5efaGUI\u7684Windows XP CSS\u6587\u4ef6\u548c\u6846\u67b6", "title_en": "XP.css \u2013 Windows XP CSS file and framework for building GUIs", "transed": 1, "url": "https://botoxparty.github.io/XP.css/", "via": "", "real_tags": ["windows", "css"]}, {"category": "", "categoryclass": "", "imagename": "14a6d11e0e49572ccd576da5162faeec.png", "infoid": 1002443, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Pontiff\u505a\u4e86\u4e00\u4e2a\u6838\u5fc3\u5047\u8bbe/\u5f3a\u52a0\uff1a\u4e00\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u6587\u4ef6\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5b83\u81ea\u52a8\u89e3\u6790\u6784\u5efa\u987a\u5e8f\uff0c\u5e76\u884c\u6784\u5efa\uff0c\u83b7\u53d6\u548c\u6c99\u7bb1\u6240\u6709\u4f9d\u8d56\u9879\u6700\u7ec8\u5c06\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u4f9d\u8d56\u9879\u7248\u672c\u7ea6\u675f\u5b83\u8fd8\u5c06\u63a7\u5236\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\uff0c\u5141\u8bb8\u8de8\u5e73\u53f0\u548c\u6240\u6709\u65f6\u95f4\u7684\u53ef\u91cd\u590d\u6784\u5efa\u3002\nPontiff\u76ee\u524d\u6b63\u5728\u5185\u90e8\u5f00\u53d1\u4e2d\uff0c\u76f4\u5230\u5b83\u7684\u529f\u80fd\u96c6\u548c\u63a5\u53e3\u88ab\u9501\u5b9a\uff0cPull\u8bf7\u6c42\u5c06\u88ab\u793c\u8c8c\u5730\u62d2\u7edd\uff0c\u901a\u8fc7\u95ee\u9898\u63d0\u51fa\u7684\u529f\u80fd\u8bf7\u6c42\u5c06\u88ab\u8003\u8651\u3002\u975e\u5e38\u611f\u8c22\u9519\u8bef\u62a5\u544a\u3002\u6211\u7684\u76ee\u6807\u662f\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u5f00\u53d1Pontiff\uff0c\u53ef\u4ee5\u8de8Pontiff\u6587\u4ef6\u7248\u672c\u8fdb\u884c\u529f\u80fd\u8fc1\u79fb\uff0c\u4f46\u662f\u5982\u679c\u6211\u7834\u574f\u4e86\u60a8\u7684\u9879\u76ee\uff0c\u8bf7\u968f\u610f\u5728#FICE ON FREENODE\u4e2d\u5bf9\u6211(Alicemaz)\u5927\u558a\u5927\u53eb\u3002\n\u76ee\u524d\uff0cPontiff\u5728Linux(\u53ef\u80fd\u8fd8\u6709BSD\uff1f)\u4e0a\u5de5\u4f5c\u3002\u5e76\u4e14\u9700\u8981lang lld\u548cgit\u2018\u6211\u5f88\u5feb\u5c31\u4f1a\u652f\u6301GCC\u548cgnu ld\u3002\u6211\u4f1a\u652f\u6301SVN\uff0c\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u652f\u6301\u3002\u6211\u60f3\u652f\u6301pijul\u5982\u679c\u4ec5\u4ec5\u51fa\u4e8e\u7f8e\u5b66\u539f\u56e0\uff0c\u6211\u53ef\u80fd\u4f1a\u5728\u67d0\u4e00\u5929\u52c9\u5f3a\u652f\u6301Windows\uff0c\u4f46\u4e0d\u4f1a\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u7684\u4efb\u4f55\u65f6\u5019\u5f15\u5bfc\u811a\u672c\u5728ArchLInux\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u9664\u975e\u60a8\u5c06FICE-CSI\u522b\u540d\u4e3aCSI\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4fee\u590d\u65b9\u6cd5\u3002\n\u4f9d\u8d56\u5173\u7cfb\u5fc5\u987b\u901a\u8fc7\u5b58\u50a8\u5e93\u548c\u76ee\u5f55\u5bf9\u8c61\u6307\u5b9a\u4e3a\u957f\u683c\u5f0f\uff0c\u4f46\u8fd9\u5e94\u8be5\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u56e0\u4e3a\u9664\u4e86\u6211\u4e4b\u5916\uff0c\u6ca1\u6709\u4eba\u5f88\u5feb\u53d1\u5e03\u8fc7PIOTFF\u9879\u76ee\u3002\u6211\u5f88\u5feb\u5c31\u4f1a\u6709\u4e00\u4e2a\u57fa\u672c\u89e3\u6790\u5668\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7b26\u53f7\uff0c\u7136\u540e\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8f6c\u6362\u4e3a\u56de\u8d2d\u3002\u6700\u7ec8\uff0c\u6211\u4f1a\u6709\u4e00\u79cd\u65b9\u6cd5\u6765\u53d1\u5e03\u7248\u672c\u5316\u7684tarball\uff0c\u5e76\u5141\u8bb8\u534a\u4e2a\u6a21\u5f0f(\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f)\u5c06\u5b83\u4eec\u62c9\u4e0b\u3002\n\u8981\u5f00\u59cb\uff0c\u8bf7\u8fd0\u884cbootstrap.scm\u3002\u5b83\u5c06\u6784\u5efa\u4e00\u4e2a\u6700\u5c0f\u53ef\u884cPontiff\uff0c\u7136\u540e\u4f7f\u7528\u8be5Pontiff\u6b63\u786e\u6784\u5efaPINTIFF\u5b83\u8c03\u7528\u9e21\u8089-\u5b89\u88c5-s\uff0c\u56e0\u6b64\u5982\u679c\u4ece\u90a3\u91cc\u8c03\u7528\u4e86\u60a8\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\uff0c\u8bf7\u5c0f\u5fc3\uff0c\u5c06\u751f\u6210\u7684(\u9759\u6001\u94fe\u63a5\u7684)PANTIFF\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5165\u67d0\u4e2a\u8def\u5f84PATH\u65b0\u7684[\u9879\u76ee\u540d]\u5c06\u521b\u5efa\u4e00\u4e2ahello world\u9879\u76ee\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u53ef\u6267\u884c\u7684Pontiff Build\u548cPontiff run\u3002\u6b63\u5982\u60a8\u6240\u671f\u671b\u7684\uff0c\u6211\u6700\u7ec8\u4f1a\u6709\u66f4\u591a\u5173\u4e8ePontiff.ix\u6587\u4ef6\u7684kawaii\u6587\u6863\uff0c\u4f46\u662f\u5b83\u7684\u7c7b\u578b\u89c4\u8303\u53ef\u80fd\u662f\u76f8\u5f53\u53ef\u8bfb\u7684\u3002\n\u8bb0\u4f4f\uff0c\u6587\u4ef6\u662f\u6a21\u5757\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6a21\u5757\u7684\u8def\u5f84\u552f\u4e00\u5730\u786e\u5b9a\u5176\u540d\u79f0\uff1asrc/a/b/c.scm\u5fc5\u987b\u662f\u5305\u542b\u4e00\u4e2a\u4e14\u53ea\u5305\u542b\u4e00\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\uff0c\u540d\u4e3aa.bc\u3002\u6709\u4e9b\u4e1c\u897f\u6211\u4eec\u662f\u6545\u610f\u4e0d\u652f\u6301\u7684(\u6bd4\u5982\u51fd\u6570\u5668\uff1b\u671f\u671b\u8868\u683c\u4e2d\u7684\u7c7b\u578b\u7c7b\u7cfb\u7edf\u8fdf\u65e9\u4f1a\u51fa\u73b0\uff01)\u3002\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u80fd\u4f7f\u7528\u5b8f\u6765\u6270\u4e71\u5bfc\u5165\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5728\u7f16\u8bd1\u4e4b\u524d\u5bf9\u5b83\u4eec\u8fdb\u884c\u89e3\u6790\uff0c\u4ee5\u4fbf\u5bf9\u6a21\u5757\u8fdb\u884c\u6392\u5e8f\u3002\n\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u91cd\u8981\u7684\u8f6f\u4ef6\u7248\u672c\uff0c\u8fd8\u6709\u66f4\u591a\u7248\u672c\u5373\u5c06\u53d1\u5e03\uff01\u5e0c\u5c14\u592b\u5c06\u4e3b\u8981\u5efa\u7acb\u5728\u54c8\u65af\u514b\u5c14\u8ba1\u5212\u548cAGDA\u8ba1\u5212\u4e4b\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u6211\u4eec\u6240\u80fd\u4e3a\u672a\u6765\u505a\u51fa\u5408\u7406\u7684\u8d21\u732e\u3002", "note_en": "pontiff makes one core assumption/imposition: one module is one file is one compilation unit from this basis, it resolves a build order automatically, builds in parallel, fetches and sandboxes all dependencies eventually pontiff will allow users to specify dependency version constraints it will also control the compiler and runtime, allowing reproducible builds across platforms and for all time\n pontiff is presently under internal development until its featureset and interface are locked down, pull requests will be politely declined feature requests made via issue will be considered. bug reports are appreciated my goal is to develop pontiff in a backward-compatible manner, with functional migrations across pontiff file versions but if I break your project feel free to yell at me (alicemaz) in #chicken on freenode\n presently, pontiff works on linux (and probably bsd?) and requires clang lld and git I&#39;ll support gcc and gnu ld soon. I&#39;ll support svn maybe soon-ish. I&#39;d like to support pijul if only for aesthetic reasons I will probably support windows grudgingly someday but not any time in the near future the bootstrapping script won&#39;t work on archlinux unless you alias chicken-csi to csi but it&#39;s an easy fix\n dependencies must be specified longform via the repository and directory objects but this shouldn&#39;t be much of a problem since no one except me has ever released a pontiff project fairly soon I will have a barebones resolver so you can specify a symbol that will be transformed to a repo by some means eventually I&#39;ll have a way to publish versioned tarballs and allow semver patterns (or something like that) to pull them down\n to get started, run bootstrap.scm. it will build a minimum viable pontiff, then use that to build pontiff properly it invokes  chicken-install -s so be careful if that&#39;s something you dislike from there, put the resulting (statically linked) pontiff binary in PATH somewhere  pontiff new [project name] will create a hello world project with one executable  pontiff build and  pontiff run do what you expect I will have more kawaii documentation on the pontiff.ix file eventually but a fairly readable type spec of it can be found in src/prototype/file.scm\n remember, a file is a module is a compilation unit more specifically, a module&#39;s path uniquely determines its name: src/a/b/c.scm  must be a file containing one and only one module, named a.b.c there are some things we don&#39;t support on purpose (like functors; expect a typeclass system in tabulae sooner or later!) also it is very important that no macros mess with import lists, as we  must parse them  before compilation to sort modules\n this is our first nontrivial software release, with more to come! sylph will mostly be built on scheme haskell and agda and we want to contribute back whatever we reasonably can here&#39;s to the future", "posttime": "2020-05-17 05:00:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba1\u5212,haskell,pontiff", "title": "Pontiff\uff1a\u4e00\u79cdHaskell\u5f0f\u7684\u9e21\u8ba1\u5212\u6784\u5efa\u7cfb\u7edf", "title_en": "Pontiff: A haskell-style build system for Chicken Scheme", "transed": 1, "url": "https://github.com/sylphbio/pontiff", "via": "", "real_tags": ["\u8ba1\u5212", "haskell", "pontiff"]}, {"category": "", "categoryclass": "", "imagename": "c10321a74beaec2f442fa95738aa2911.jpg", "infoid": 1002442, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e7f\u6cdb\u4f7f\u7528\u7684JavaScript\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u65f6Node.js\u7684\u5236\u9020\u5546\u53d1\u5e03\u4e86Deno 1.0\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684JavaScript\u548cTypeScript\u8fd0\u884c\u65f6\uff0c\u89e3\u51b3\u4e86Node.js\u4e2d\u7684\u8bbe\u8ba1\u9519\u8bef\u3002\n\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0cNode.js\u7684\u521b\u5efa\u8005Ryan Dahl\u4e00\u76f4\u5728\u5f00\u53d1Deno JavaScript\u9879\u76ee\uff0c\u4ed6\u7684\u8d21\u732e\u8005\u56e2\u961f\u73b0\u5728\u5df2\u7ecf\u53d1\u5e03\u4e86Deno 1.0\uff0c\u8fd9\u5bf9JavaScript\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u53ef\u80fd\u4f1a\u53d8\u5f97\u4e0eNode.js\u4e00\u6837\u91cd\u8981\u3002\nJavaScript\u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\uff0c\u5728\u6bcf\u4e00\u53f0\u6709\u7f51\u7edc\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u4e0a\u90fd\u4f7f\u7528\u5b83\u3002\u5c31\u50cfNode.js\u6216Node\u4e00\u6837\uff0cDeno\u8fd0\u884c\u65f6\u7528\u4e8e\u5728Web\u6d4f\u89c8\u5668\u4e4b\u5916\u6267\u884cJavaScript\u3002\n\u7136\u800c\uff0c\u4e0eNode.js\u4e0d\u540c\u7684\u662f\uff0cDeno\u4e3a\u5fae\u8f6f\u65e5\u76ca\u6d41\u884c\u7684TypeScript\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u652f\u6301\uff0cTypeScript\u662f\u4e3a\u5927\u578b\u9879\u76ee\u8bbe\u8ba1\u7684JavaScript\u8d85\u96c6\u3002\nDeno\u57fa\u4e8eGoogle\u7684Chromium V8 JavaScript\u5f15\u64ce\uff0c\u5e76\u4e14\u662f\u7528Rust\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u4e0d\u662fNode\u7684C++\u3002\n\u9664\u4e86\u4fee\u590dNode.js\u7684\u95ee\u9898\u5916\uff0cDahl\u8fd8\u5e0c\u671bDeno\u80fd\u591f\u8fce\u5408JavaScript\uff0c\u56e0\u4e3a\u4e0e2009\u5e74\u4ed6\u8bbe\u8ba1Node\u65f6\u76f8\u6bd4\uff0cJavaScript\u662f\u4e00\u79cd\u975e\u5e38\u4e0d\u540c\u7684\u8bed\u8a00\u3002\u6b64\u5916\uff0c\u7531\u4e8eNode\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0cNode\u53d8\u5f97\u5f88\u96be\u66f4\u65b0\u3002\n\u968f\u7740JavaScript\u8bed\u8a00\u7684\u4e0d\u65ad\u53d8\u5316\uff0c\u4ee5\u53caTypeScript\u7b49\u65b0\u529f\u80fd\u7684\u52a0\u5165\uff0c\u6784\u5efa\u8282\u70b9\u9879\u76ee\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u9879\u8270\u5de8\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u7ba1\u7406\u6784\u5efa\u7cfb\u7edf\u548c\u5176\u4ed6\u7e41\u91cd\u7684\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u5265\u593a\u4e86\u52a8\u6001\u8bed\u8a00\u811a\u672c\u7f16\u5199\u7684\u4e50\u8da3\uff0c\u8fbe\u5c14\u5728\u7531Deno\u5f00\u53d1\u4eba\u5458Bert Belder\u548cBartek Iwa\u0144czuk\u5171\u540c\u64b0\u5199\u7684\u4e00\u7bc7\u535a\u6587\u4e2d\u5199\u9053\u3002\n\u6b64\u5916\uff0c\u94fe\u63a5\u5230\u5916\u90e8\u5e93\u7684\u673a\u5236\u57fa\u672c\u4e0a\u662f\u901a\u8fc7NPM\u5b58\u50a8\u5e93\u96c6\u4e2d\u8d77\u6765\u7684\uff0c\u8fd9\u4e0d\u7b26\u5408Web\u7684\u7406\u60f3\uff0c\u4ed6\u8865\u5145\u9053\uff0c\u4ed6\u6307\u7684\u662fNode\u7684NPM\u5305\u3002\nDeno\u6838\u5fc3\u662f\u7528Rust\u7f16\u5199\u7684\uff0cDeno 1.0\u7684\u4e3b\u8981\u7ec4\u4ef6\u662fDeno\u547d\u4ee4\u884c\u754c\u9762(CLI)\u3002\nDahl\u8bf4\uff0cDeno\u4e0d\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2a\u94c1\u9508\u677f\u6761\u7bb1\u7684\u96c6\u5408-\u8f6f\u4ef6\u5305\u6216\u8f6f\u4ef6\u5e93-\u5141\u8bb8\u5728\u4e0d\u540c\u7684\u5c42\u8fdb\u884c\u96c6\u6210\u3002\u4f8b\u5982\uff0cDeno\u6838\u5fc3\u673a\u7bb1\u662fDeno\u7684\u6700\u57fa\u672c\u7684\u6846\u67b6\uff0c\u800cRusty_V8\u673a\u7bb1\u63d0\u4f9b\u5230V8\u7684C++\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3(API)\u7684Rust\u7ed1\u5b9a\u3002\n&#34\uff1b\u8be5\u673a\u7bb1\u63d0\u4f9b\u4e86\u5728GitHub Actions CI\u4e2d\u5185\u7f6e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u5b83\u4e5f\u5141\u8bb8\u7528\u6237\u4ece\u5934\u5f00\u59cb\u7f16\u8bd1V8\u5e76\u8c03\u6574\u5176\u8bb8\u591a\u6784\u5efa\u914d\u7f6e\uff0c&#34\uff1bDahl\u5199\u9053\u3002\n&#34\uff1b\u6240\u6709V8\u6e90\u4ee3\u7801\u90fd\u5206\u53d1\u5728\u673a\u7bb1\u4e2d\u3002\u6700\u540e\uff0cRUSTY_V8\u8bd5\u56fe\u6210\u4e3a\u4e00\u4e2a\u5b89\u5168\u7684\u63a5\u53e3\u3002\u73b0\u5728\u8fd8\u4e0d\u662f\u767e\u5206\u4e4b\u767e\u5b89\u5168\uff0c\u4f46\u6211\u4eec\u5feb\u5230\u4e86\u3002\u80fd\u591f\u4ee5\u5b89\u5168\u7684\u65b9\u5f0f\u4e0eV8\u8fd9\u6837\u590d\u6742\u7684\u865a\u62df\u673a\u4ea4\u4e92\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\uff0c\u8fd9\u8ba9\u6211\u4eec\u5728Deno\u672c\u8eab\u53d1\u73b0\u4e86\u8bb8\u591a\u56f0\u96be\u7684\u9519\u8bef\u3002\nDahl\u8fd8\u5f3a\u8c03\uff0cDeno\u4e0d\u662fNode\u7684\u5206\u652f\uff0c\u800c\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u5b9e\u73b0\uff0c\u5c3d\u7ba1\u76ee\u6807\u4e0eNode\u76f8\u4f3c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5b83\u4e5f\u4e0eNPM\u4e0d\u517c\u5bb9\u3002\u7136\u800c\uff0cDahl\u9884\u8ba1Deno\u6700\u7ec8\u5c06\u80fd\u591f\u8fd0\u884c\u66f4\u591a\u5f00\u7bb1\u5373\u7528\u7684Node\u7a0b\u5e8f\u3002\n\u6839\u636eDahl\u7684\u8bf4\u6cd5\uff0cDeno\u5728Web\u670d\u52a1\u5668\u4e0a\u7684\u6027\u80fd\u4e0eNode\u76f8\u5f53\uff0c\u4f46Deno\u7684\u5ef6\u8fdf\u6bd4Node\u66f4\u597d\u3002\nhello-world Deno HTTP\u670d\u52a1\u5668\u6bcf\u79d2\u5904\u7406\u5927\u7ea625k\u4e2a\u8bf7\u6c42\uff0c\u6700\u5927\u5ef6\u8fdf\u4e3a1.3\u6beb\u79d2\u3002\u4ed6\u6307\u51fa\uff0c\u4e00\u4e2a\u7c7b\u4f3c\u7684Node\u7a0b\u5e8f\u6bcf\u79d2\u5904\u740634k\u4e2a\u8bf7\u6c42\uff0c\u6700\u5927\u5ef6\u8fdf\u57282\u5230300\u6beb\u79d2\u4e4b\u95f4\u76f8\u5f53\u4e0d\u7a33\u5b9a\u3002", "note_en": "The makers of the widely used JavaScript server-side runtime, Node.js, have released Deno 1.0, a new runtime for JavaScript and TypeScript that addresses &#34;design mistakes&#34; in Node.js.\n The Deno JavaScript project has been under development by Node.js creator Ryan Dahl for the past two years and his team of contributors has now released Deno 1.0, which could become just as important for JavaScript developers as Node.js.\n    JavaScript is one of the most widely used programming languages, and it&#39;s employed on every device with a web browser. Just like Node.js or Node, the Deno runtime is for executing JavaScript outside a web browser.\n  However, unlike Node.js, Deno offers first-class support for\u00a0 Microsoft&#39;s increasingly popular Typescript, a superset of JavaScript designed for large projects.\n   Deno is based on Google&#39;s Chromium V8 JavaScript engine and written in programming language Rust as opposed to C++ for Node.\n Besides fixing problems with Node.js, Dahl also wanted Deno to cater for JavaScript being a very different language today than it was in 2009, when he designed Node. Additionally, because of Node&#39;s wide use, Node has become difficult to update.\n   &#34;With the changing JavaScript language, and new additions like TypeScript, building Node projects can become an arduous endeavor, involving managing build systems and other heavy-handed tooling that takes away from the fun of dynamic language scripting,&#34;  writes Dahl in a blogpost\u00a0co-authored by fellow Deno developers Bert Belder and Bartek Iwa\u0144czuk.\n &#34;Furthermore the mechanism for linking to external libraries is fundamentally centralized through the NPM repository, which is not in line with the ideals of the web,&#34; he adds, referring to Node&#39;s NPM packages.\n The Deno core is written in Rust, and Deno 1.0&#39;s main component is the Deno command line interface (CLI).\n Dahl says Deno is not a monolithic program, but rather a collection of Rust &#34;crates&#34; \u2013 packages or software libraries \u2013 that allow integration at different layers. For example, the Deno core crate is the &#34;very bare bones&#34; of Deno, while the rusty_v8 crate provides Rust bindings to V8&#39;s C++ application programming interface (API).\n &#34;The crate provides binaries that are built in GitHub Actions CI, but it also allows users to compile V8 from scratch and adjust its many build configurations,&#34; Dahl writes.\n &#34;All the V8 source code is distributed in the crate itself. Finally rusty_v8 attempts to be a safe interface. It&#39;s not yet 100% safe, but we&#39;re getting close. Being able to interact with a VM as complex as V8 in a safe way is quite amazing and has allowed us to discover many difficult bugs in Deno itself.&#34;\n  Dahl also stresses that Deno is not a fork of Node, but a completely new implementation, albeit with similar goals to Node. It&#39;s also not, in general, compatible with NPM. However Dahl expects Deno will eventually be able to run more Node programs out of the box.\n Deno&#39;s performance on web server is about equal to Node, according to Dahl, but Deno has better latency than Node.\n &#34;A hello-world Deno HTTP server does about 25k requests per second with a max latency of 1.3 milliseconds. A comparable Node program does 34k requests per second with a rather erratic max latency between 2 and 300 milliseconds,&#34; he notes.", "posttime": "2020-05-17 04:45:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,\u8bbe\u8ba1,\u5f00\u53d1,runtime,js", "title": "\u9488\u5bf9Node.js\u4e2d\u7684\u201c\u8bbe\u8ba1\u9519\u8bef\u201d\uff0c\u5176\u5f00\u53d1\u4eba\u5458\u53d1\u5e03\u4e86JS/Tyescript Runtime Deno 1.0", "title_en": "Addressing 'Design Mistakes' in Node.js, Its Developers Release JS/TypeScript Runtime Deno 1.0", "transed": 1, "url": "https://www.zdnet.com/article/deno-1-0-node-js-makers-have-new-javascript-runtime-for-typescript-programming-language/", "via": "", "real_tags": ["\u53d1\u5e03", "\u8bbe\u8ba1", "\u5f00\u53d1", "runtime", "js"]}]