[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1003539, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8425\u8bfb\u4e66\u4ff1\u4e50\u90e8\u7684\u6807\u51c6\u65b9\u5f0f\u662f\u8ba9\u6bcf\u4e2a\u4eba\u5728\u5f00\u4f1a\u8ba8\u8bba\u4e4b\u524d\u5b8c\u6210\u8fd9\u672c\u4e66\u3002\u4f60\u6bcf\u672c\u4e66\u6709\u4e00\u6b21\u4f1a\u8bae\u3002\u8ba8\u8bba\u6301\u7eed\u4e00\u5230\u4e24\u4e2a\u5c0f\u65f6\uff0c\u76f4\u5230\u6c7d\u6cb9\u7528\u5b8c\uff0c\u7136\u540e\u5c0f\u7ec4\u6311\u9009\u4e0b\u4e00\u672c\u4e66\uff0c\u4f60\u4eec\u540c\u610f\u518d\u8fc7\u4e00\u4e2a\u6708\u6216\u516d\u5468\u89c1\u9762\u3002\n\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fd0\u884c\u7c7b\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u6700\u5c0f\u5316\u4e86\u6bcf\u4e2a\u53c2\u4e0e\u8005\u4ece\u7ec4\u4e2d\u83b7\u5f97\u7684\u4ef7\u503c\u3002\u95ee\u9898\u662f\u6ca1\u6709\u65f6\u95f4\u5229\u7528\u522b\u4eba\u7684\u6d1e\u5bdf\u529b\u3002\u5982\u679c\u6709\u4eba\u5728\u4f1a\u8bae\u4e0a\u8bf4\u4e86\u4e00\u4e9b\u8bdd\uff0c\u6539\u53d8\u4e86\u4f60\u5bf9\u8fd9\u672c\u4e66\u7684\u770b\u6cd5--\u4ed6\u4eec\u6697\u793a\u970d\u5c14\u987f\u5728\u6492\u8c0e\uff0c\u6216\u8005\u8bf4\u91d1\u535a\u7279\u5199\u4e86\u7b2c\u56db\u7ae0\uff1b\u4ed6\u4eec\u8ba9\u4f60\u5148\u8bfb\u201c\u8096\u50cf\u201d\uff0c\u8fd9\u6837\u4f60\u5c31\u80fd\u7406\u89e3\u65af\u8482\u82ac\u7684\u53cc\u91cd\u56f0\u5883\uff1b\u4ed6\u4eec\u58f0\u79f0\uff0c\u201c\u5965\u592b\u96f7\u5fb7\u7684\u6545\u4e8b\u201d\u662f\u4e00\u7cfb\u5217\u7684\u6210\u7ee9\u5355\uff0c\u800c\u4e0d\u662f\u65e5\u8bb0\u6761\u76ee--\u597d\u5427\uff0c\u73b0\u5728\u5df2\u7ecf\u592a\u665a\u4e86\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u8bfb\u5b8c\u4e86\u8fd9\u672c\u4e66\uff0c\u5f88\u53ef\u80fd\u518d\u4e5f\u4e0d\u4f1a\u91cd\u8bfb\u4e86\u3002\n\u4e00\u5802\u8bfe\u7684\u7528\u5904\u6070\u6070\u5728\u4e8e\u5b83\u53ef\u4ee5\u8ba9\u4f60\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e0e\u540c\u5b66\u4eec\u6bd4\u8f83\u7b14\u8bb0\uff0c\u9610\u8ff0\u4f60\u5173\u4e8e\u4e00\u672c\u4e66\u7684\u5de5\u4f5c\u7406\u8bba\uff0c\u5e76\u770b\u770b\u4ed6\u4eec\u5bf9\u5176\u4ed6\u4eba\u662f\u5982\u4f55\u7406\u89e3\u7684\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u56de\u987e\u5c55\uff0c\u6216\u8005\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u56de\u987e\u5c55--\u4f60\u662f\u5728\u4e3a\u63a5\u4e0b\u6765\u7684\u9605\u8bfb\u505a\u51c6\u5907\u3002\n\u8fd9\u4e0d\u4ec5\u9002\u7528\u4e8e\u6846\u67b6\u3001\u7406\u8bba\u6216\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\uff0c\u4e5f\u9002\u7528\u4e8e\u4e00\u4e9b\u7410\u788e\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6709\u4eba\u6307\u51fa\u60a8\u9057\u6f0f\u4e86\u4e00\u6761\u53c2\u8003\u6587\u732e\uff0c\u6216\u8005\u5e2e\u52a9\u60a8\u54c1\u5c1d\u4e86\u60a8\u7b2c\u4e00\u6b21\u5c31\u641e\u7838\u4e86\u7684\u67d0\u4e9b\u8bed\u8a00\u3002\u5f53\u4f60\u5728\u8bfb\u4e00\u672c\u96be\u8bfb\u7684\u4e66\u65f6\uff0c\u8fd9\u7c7b\u4e1c\u897f\u5c24\u5176\u6709\u4ef7\u503c\u3002\n\u6211\u7684\u8bfb\u4e66\u4ff1\u4e50\u90e8\u56db\u5e74\u524d\u5f00\u59cb\u9605\u8bfb\u201c\u65e0\u9650\u7b11\u8bdd\u201d\u3002\u6211\u4eec\u6709\u4e94\u516d\u4e2a\u4eba\uff0c\u6211\u4eec\u90fd\u8bd5\u8fc7\u81ea\u5df1\u8bfb\u8fd9\u672c\u4e66\uff0c\u4f46\u90fd\u5931\u8d25\u4e86\u3002\u6211\u4eec\u6bcf\u5468\u90fd\u4f1a\u89c1\u9762\uff0c\u6bcf\u6b21\u5f00\u4f1a\u90fd\u8981\u8bfb\u5927\u7ea650\u9875--\u5bf9\u4e8e\u8fd9\u4e48\u539a\u7684\u4e00\u672c\u4e66\u6765\u8bf4\uff0c\u8fd9\u76f8\u5f53\u4e8e\u4e94\u516d\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u3002\u5982\u679c\u4f60\u4e0d\u5728\u57ce\u91cc\uff0c\u4f60\u4f1a\u8bd5\u7740\u6253\u7535\u8bdd\u6216\u7528Skype\u6253\u8fdb\u6765\uff0c\u53ea\u8981\u4f60\u6216\u591a\u6216\u5c11\u8ddf\u4e0a\u4e86\u9605\u8bfb\uff0c\u7f3a\u5e2d\u51e0\u6b21\u8bfe\u7a0b\u5c31\u662f\u53ef\u4ee5\u539f\u8c05\u7684\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u4eec\u51e0\u4e4e\u6bcf\u5468\u90fd\u5728\u8dd1\u6b65\uff0c\u4e00\u5468\u53c8\u4e00\u5468\uff0c\u6574\u6574\u56db\u5e74\u3002\u6211\u4eec\u4e5f\u8bfb\u8fc7\u5176\u4ed6\u96be\u8bfb\u7684\u4e66\uff0c\u4e5f\u8bfb\u8fc7\u7b80\u5355\u7684\u4e66\uff0c\u800c\u4e14\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u603b\u662f\u628a\u9605\u8bfb\u5206\u6210\u81f3\u5c11\u4e00\u6b21\u4ee5\u4e0a\u7684\u4f1a\u8bae\uff0c\u56e0\u4e3a\u90a3\u4e0d\u662f\u6bd5\u7adf\u4f60\u662f\u5982\u4f55\u5229\u7528\u90a3\u4e9b\u5176\u4ed6\u601d\u60f3\u7684\u5417\uff1f\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8bfb\u4e66\u4f1a\u4e0d\u662f\u8bfb\u540c\u4e00\u672c\u4e66\uff0c\u800c\u662f\u4e00\u8d77\u8bfb\u4e00\u672c\u4e66\u3002\n\u6211\u4eec\u5c3d\u91cf\u628a\u8bfb\u6570\u63a7\u5236\u5728\u661f\u671f\u5929\u4e0b\u5348\u51e0\u4e2a\u5c0f\u65f6\u5185\u4f60\u80fd\u505a\u7684\u91cf\u3002\u6bcf\u5468\u4e00\u6b21\u7684\u8bfb\u4e66\u4f1a\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u65e5\u7a0b\u8868\u4e2d\u7684\u56fa\u5b9a\u9879\u76ee\uff0c\u5c31\u50cf\u5bb6\u5ead\u805a\u9910\u4e00\u6837\uff0c\u5c3d\u7ba1\u6709\u4e9b\u4eba\u8df3\u8fc7\u6574\u672c\u4e66\u5e76\u4e0d\u5c11\u89c1\uff0c\u6bd4\u5982\u4ed6\u4eec\u662f\u5426\u7ecf\u5e38\u65c5\u884c\uff0c\u6216\u8005\u521a\u521a\u5f00\u59cb\u4e00\u4efd\u65b0\u5de5\u4f5c\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u8ba9\u8bfb\u4e66\u4ff1\u4e50\u90e8\u4e0e\u5176\u8bf4\u662f\u4e00\u79cd\u4e49\u52a1\uff0c\u4e0d\u5982\u8bf4\u662f\u6211\u4eec\u751f\u6d3b\u4e2d\u4e00\u79cd\u6109\u5feb\u7684\u5b58\u5728\uff0c\u8fd9\u79cd\u4e1c\u897f\u4e00\u76f4\u90fd\u5728\u90a3\u91cc\u3002\n\u6709\u4e9b\u4e66\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u592a\u591a\u7684\u5173\u6ce8\uff0c\u6211\u4eec\u5728\u90a3\u6bb5\u65f6\u95f4\u7684\u4e66\u8c08\u5f88\u5feb\u5c31\u53d8\u6210\u4e86\u73a9\u7b11\u3002\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8ba8\u8bba\u4f1a\u6301\u7eed\u6574\u6574\u4e00\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u81ea\u7136\u4f1a\u5931\u53bb\u52a8\u529b\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4f1a\u8bae\u4f3c\u4e4e\u90fd\u662f\u8fd9\u6837\u3002\n\u8fd9\u662f\u5c06\u4e00\u672c\u4e66\u62c6\u6210\u788e\u7247\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\uff1a\u4e00\u8282\u4e66\u592a\u5c11\u6bd4\u592a\u591a\u8981\u597d\uff1b\u4e0a\u5e1d\u7981\u6b62\u4f60\u8bfb\u4e00\u4e9b\u590d\u6742\u548c\u8981\u6c42\u5f88\u9ad8\u7684\u4e1c\u897f-\u4f60\u771f\u7684\u60f3\u82b1\u4e09\u4e2a\u5c0f\u65f6\u62c6\u5f00\u5305\u88c5\uff0c\u8fd8\u662f\u5728\u62c6\u5f00\u5305\u88c5\u4e4b\u524d\u5c31\u8ba9\u8fd9\u8282\u8bfe\u4e2d\u65ad\uff1f\u5230\u516d\u4e2a\u661f\u671f\u8fc7\u53bb\u7684\u65f6\u5019\uff0c\u4f60\u751a\u81f3\u80fd\u8bb0\u4f4f\u8fd9\u672c\u4e66\u5927\u90e8\u5206\u5185\u5bb9\u7684\u53ef\u80fd\u6027\u6709\u591a\u5927\uff1f\n\u597d\u4e66\u7684\u6df1\u5ea6\u51e0\u4e4e\u662f\u5343\u7bc7\u4e00\u5f8b\u7684\uff1a\u65e0\u8bba\u4f60\u5f80\u54ea\u91cc\u770b\uff0c\u4e0d\u7ba1\u4f60\u653e\u5927\u591a\u8fdc\uff0c\u4f60\u90fd\u80fd\u627e\u5230\u5b8c\u6574\u7684\u4e16\u754c\u3002\u5c06\u4e00\u672c\u4e66\u5206\u6210\u591a\u4e2a\u4f1a\u8bae\uff0c\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u4e86\u8fd9\u4e00\u4e8b\u5b9e\u3002\u5b83\u7ed9\u4e86\u4f60\u505c\u7559\u5728\u9875\u9762\u4e0a\u7684\u7a7a\u95f4\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u5355\u8bcd\uff0c\u4e5f\u4e0d\u4f1a\u89c9\u5f97\u4f60\u5728\u6d6a\u8d39\u4efb\u4f55\u4eba\u7684\u65f6\u95f4\u3002\u4e0d\uff0c\u8fd9\u5c31\u662f\u8bfb\u4e66\u4ff1\u4e50\u90e8\u7684\u76ee\u7684\uff0c\u4e0d\u662f\u603b\u7ed3\u4f60\u8bfb\u8fc7\u7684\u4e1c\u897f\uff0c\u800c\u662f\u751f\u6d3b\u5728\u91cc\u9762\u3002\n\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u66f4\u591a\u7684\u4eba\u4e0d\u8fd9\u6837\u529e\u8bfb\u4e66\u4ff1\u4e50\u90e8\u3002\u6211\u8ba4\u4e3a\u90e8\u5206\u539f\u56e0\u662f\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u5c1d\u8bd5\u8fc7\uff1b\u8bfb\u4e66\u4ff1\u4e50\u90e8\u7684\u6982\u5ff5\u672c\u8eab\u4f3c\u4e4e\u6697\u793a\u7740\u4e00\u6b21\u4f1a\u8bae\u4e00\u672c\u4e66\u7684\u7ed3\u6784\u3002\u5176\u4ed6\u4eba\u542c\u5230\u6bcf\u5468\u5f00\u4f1a\u7684\u60f3\u6cd5\uff0c\u4f1a\u60f3\u8c01\u6709\u65f6\u95f4\uff1f\n\u6211\u60f3\u8bf4\uff0c\u4efb\u4f55\u559c\u6b22\u4e66\u7684\u4eba\u90fd\u6709\u65f6\u95f4\u3002\u7528\u6807\u51c6\u7684\u65b9\u5f0f\u529e\u8bfb\u4e66\u4ff1\u4e50\u90e8\u65e2\u4e0d\u9ad8\u6548\u4e5f\u4e0d\u5b9e\u7528--\u8fd9\u53ea\u662f\u6d6a\u8d39\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a\u3002", "note_en": "The standard way to run a book club is to have everybody finish the book before meeting to talk about it. You have one meeting per book. The discussion goes on for one or two hours before it runs out of gas, and then the group picks the next book, and you agree to meet in another month or six weeks.\n You would never run a class this way, because it practically minimizes the value that each participant gets from being in the group. The problem is that there\u2019s no time to cash in on anyone else\u2019s insights. If someone says something in the meeting that reframes how you think about the book \u2014 they suggest that Holden is lying, or that Kinbote wrote Canto IV; they tell you to read  Portrait first, so you can understand Stephen\u2019s double bind; they claim that Offred\u2019s tale is a series of transcripts, not journal entries \u2014 well, now it\u2019s too late, because you\u2019ve finished reading the book and you\u2019re probably never going back to it.\n What makes a class useful is precisely that it lets you compare notes with your classmates  along the way, to float your working theories about a book and see how they sound to others. It\u2019s not a retrospective, or not merely one \u2014 you\u2019re  equipping yourself for the rest of the reading.\n This is true not just of frameworks or theories or whatever but of little nuts-and-bolts stuff, too, like when someone points out a reference that you missed or helps you savor some language that you blew right by the first time. That kind of thing is especially valuable when you\u2019re reading a difficult book.\n My book club started four years ago to read  Infinite Jest. There were five or six of us; we had all tried, and failed, to read the book on our own. We met every week and read about fifty pages for each meeting \u2014 five or six hours\u2019 worth for a book that dense. If you were out of town, you tried to call or Skype in, and you were forgiven for missing a few sessions, so long as you more or less kept up with the reading.\n Since then we\u2019ve run just about continuously, every week, week in, week out, for four years. We\u2019ve read other hard books, and easy ones too, and no matter what, we\u2019ve always split the reading into at least more than one meeting, because isn\u2019t that after all how you make use of those other minds? Book club, for us, isn\u2019t about reading the same book; it\u2019s about reading a book  together.\n We try to keep the reading to about the amount you can do in a few hours on a Sunday afternoon. Weekly book club has become a fixture in our schedules, an institution like family dinner, though it\u2019s not uncommon for someone to skip a whole book, say if they\u2019re traveling a lot or right after they\u2019ve started a new job. The idea is to make book club less an obligation than a sort of pleasant presence in our lives, this thing that\u2019s always there.\n Some books don\u2019t really demand so much attention, and our book-talk during those sessions quickly devolves into banter. But most of the time the discussion lasts a full hour before it runs out of steam, naturally, the way almost all meetings seem to.\n That\u2019s another reason to break a book into pieces: better to have too little to fit into a session than too much; god forbid you read something complex and demanding \u2014 do you really want to spend three hours in the unpacking, or to have the session break down before the unpacking\u2019s done? And what are the odds that you\u2019ll even remember most of the book by the time six weeks pass?\n Good books are almost fractally deep: you find whole worlds wherever you look, and no matter how far in you zoom. Breaking a book into multiple meetings makes the most of this fact. It gives you space to  dwell \u2014 on a page, even on a single word \u2014 without feeling like you\u2019re wasting anyone\u2019s time. No: that\u2019s what a book club is  for, not to sum up what you\u2019ve read but to live inside it.\n I don\u2019t know why more people don\u2019t run book clubs this way. I think part of it is that they\u2019ve never tried; the very concept of a book club seems to imply a one-book-per-meeting structure. Others hear the idea of meeting weekly and think who has the time?\n I would say that anyone who loves books has the time. A book club run in the standard way isn\u2019t efficient or practical \u2014 it\u2019s just a good opportunity wasted.", "posttime": "2020-05-25 01:48:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bfb\u4e66\u4f1a,clubs,\u9605\u8bfb", "title": "\u5927\u591a\u6570\u8bfb\u4e66\u4f1a\u90fd\u505a\u9519\u4e86", "title_en": "Most book clubs are doing it wrong", "transed": 1, "url": "http://jsomers.net/blog/book-clubs", "via": "", "real_tags": ["\u8bfb\u4e66\u4f1a", "clubs", "\u9605\u8bfb"]}, {"category": "", "categoryclass": "", "imagename": "017362f44d5ffa23ad1f1e71cef47df5.jpg", "infoid": 1003538, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6089\u5c3c\u5927\u5b66\u7684\u4e00\u4f4d\u79d1\u5b66\u5bb6\u5b9e\u73b0\u4e86\u4e00\u4f4d\u91cf\u5b50\u4e1a\u5185\u4eba\u58eb\u6240\u8bf4\u7684\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\u4e8b\u60c5\u3002\u7269\u7406\u5b66\u9662\u7684\u672c\u6770\u660e\u00b7\u5e03\u6717\u535a\u58eb\u5df2\u7ecf\u4e3a\u91cf\u5b50\u8ba1\u7b97\u673a\u5f00\u53d1\u4e86\u4e00\u79cd\u7ea0\u9519\u7801\uff0c\u5b83\u5c06\u91ca\u653e\u66f4\u591a\u7684\u786c\u4ef6\u6765\u8fdb\u884c\u6709\u7528\u7684\u8ba1\u7b97\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u8c37\u6b4c\u548cIBM\u7b49\u516c\u53f8\u8bbe\u8ba1\u51fa\u66f4\u597d\u7684\u91cf\u5b50\u5fae\u82af\u7247\u3002\n\u4ed6\u901a\u8fc7\u5c06\u5df2\u77e5\u7684\u4e09\u7ef4\u64cd\u4f5c\u4ee3\u7801\u5e94\u7528\u4e8e\u4e8c\u7ef4\u6846\u67b6\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u8bc0\u7a8d\u5728\u4e8e\u5c06\u65f6\u95f4\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u3002\u5e03\u6717\u535a\u58eb\u8bf4\uff0c\u6211\u6b63\u5728\u4f7f\u7528\u4e24\u4e2a\u7269\u7406\u7ef4\u5ea6\uff0c\u5e76\u52a0\u4e0a\u65f6\u95f4\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u3002\u8fd9\u6253\u5f00\u4e86\u6211\u4eec\u4ee5\u524d\u6ca1\u6709\u7684\u53ef\u80fd\u6027\u3002\n\u8fd9\u6709\u70b9\u50cf\u7f16\u7ec7\uff0c\u4ed6\u8bf4\u3002\u6bcf\u4e00\u884c\u90fd\u50cf\u4e00\u6761\u4e00\u7ef4\u7684\u7ebf\u3002\u4f60\u4e00\u6392\u63a5\u4e00\u6392\u5730\u7f16\u7ec7\u7f8a\u6bdb\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u5757\u4e8c\u7ef4\u7684\u5e03\u677f\u3002\n\u5728\u5efa\u9020\u8db3\u591f\u5927\u7684\u673a\u5668\u6765\u89e3\u51b3\u6709\u7528\u7684\u95ee\u9898\u4e4b\u524d\uff0c\u51cf\u5c11\u4e2d\u7684\u9519\u8bef\u662f\u79d1\u5b66\u5bb6\u9762\u4e34\u7684\u6700\u5927\u6311\u6218\u4e4b\u4e00\u3002\n\u56e0\u4e3a\u91cf\u5b50\u4fe1\u606f\u662f\u5982\u6b64\u8106\u5f31\uff0c\u5b83\u4f1a\u4ea7\u751f\u5f88\u591a\u9519\u8bef\uff0c\u6089\u5c3c\u5927\u5b66\u7eb3\u7c73\u7814\u7a76\u6240\u7684\u7814\u7a76\u5458\u5e03\u6717\u535a\u58eb\u8bf4\u3002\n\u5b8c\u5168\u6d88\u9664\u8fd9\u4e9b\u9519\u8bef\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\u5f00\u53d1\u4e00\u79cd\u5bb9\u9519\u67b6\u6784\uff0c\u5728\u8fd9\u79cd\u67b6\u6784\u4e2d\uff0c\u6709\u7528\u7684\u5904\u7406\u64cd\u4f5c\u8fdc\u8fdc\u91cd\u4e8e\u7ea0\u9519\u64cd\u4f5c\u3002\n\u60a8\u7684\u624b\u673a\u6216\u7b14\u8bb0\u672c\u7535\u8111\u5c06\u5728\u8bb8\u591a\u5e74\u5185\u6267\u884c\u6570\u5341\u4ebf\u6b21\u64cd\u4f5c\uff0c\u76f4\u5230\u4e00\u4e2a\u9519\u8bef\u89e6\u53d1\u9ed1\u5c4f\u6216\u5176\u4ed6\u6545\u969c\u3002\u5e03\u6717\u535a\u58eb\u8fd8\u5728ARC\u5353\u8d8a\u5de5\u7a0b\u91cf\u5b50\u7cfb\u7edf\u4e2d\u5fc3\u4efb\u804c\uff0c\u4ed6\u8bf4\uff0c\u76ee\u524d\u7684\u91cf\u5b50\u64cd\u4f5c\u5f88\u5e78\u8fd0\uff0c\u6bcf20\u6b21\u64cd\u4f5c\u5c31\u6709\u4e0d\u52301\u4e2a\u9519\u8bef\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u5c0f\u65f6\u6709\u6570\u767e\u4e07\u4e2a\u9519\u8bef\u3002\n\u4eca\u5929\u7684\u5b9e\u9a8c\u91cf\u5b50\u8ba1\u7b97\u673a\u4e2d\u7684\u5927\u90e8\u5206\u6784\u4ef6--\u91cf\u5b50\u6bd4\u7279\u6216\u91cf\u5b50\u6bd4\u7279--\u90fd\u662f\u7531\u7684\u5f00\u9500\u5360\u7528\u7684\u3002\n\u6211\u6291\u5236\u9519\u8bef\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5728\u4e8c\u7ef4\u67b6\u6784\u8868\u9762\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u3002\u5e03\u6717\u535a\u58eb\u8bf4\uff0c\u8fd9\u6837\u505a\u7684\u6548\u679c\u662f\u628a\u5f88\u591a\u786c\u4ef6\u4ece\u7ea0\u9519\u4e2d\u89e3\u653e\u51fa\u6765\uff0c\u8ba9\u5b83\u7ee7\u7eed\u5904\u7406\u6709\u7528\u7684\u4e1c\u897f\u3002\n\u5185\u5965\u7c73\u00b7\u5c3c\u514b\u68ee(Naomi Nickerson)\u535a\u58eb\u662f\u52a0\u5dde\u5e15\u6d1b\u963f\u5c14\u6258PsiQuantum\u7684\u91cf\u5b50\u67b6\u6784\u90e8\u4e3b\u4efb\uff0c\u4e0e\u8fd9\u9879\u7814\u7a76\u65e0\u5173\u3002\u5979\u8bf4\uff1a\u8fd9\u4e00\u7ed3\u679c\u4e3a\u6267\u884c\u5bb9\u9519\u95e8\u5efa\u7acb\u4e86\u4e00\u79cd\u65b0\u7684\u9009\u62e9\uff0c\u5b83\u6709\u53ef\u80fd\u6781\u5927\u5730\u51cf\u5c11\u5f00\u9500\uff0c\u5e76\u4f7f\u5b9e\u9645\u7684\u91cf\u5b50\u8ba1\u7b97\u66f4\u63a5\u8fd1\u5b9e\u9645\u3002\n\u50cfPsiQuantum\u8fd9\u6837\u7684\u521d\u521b\u4f01\u4e1a\uff0c\u4ee5\u53ca\u8c37\u6b4c\u3001IBM\u548c\u5fae\u8f6f\u7b49\u5927\u578b\u79d1\u6280\u516c\u53f8\uff0c\u90fd\u5728\u5e26\u5934\u5f00\u53d1\u5927\u89c4\u6a21\u91cf\u5b50\u6280\u672f\u3002\u8feb\u5207\u9700\u8981\u627e\u5230\u80fd\u591f\u8ba9\u4ed6\u4eec\u7684\u673a\u5668\u6269\u5927\u89c4\u6a21\u7684\u7ea0\u9519\u7801\u3002\n\u5fae\u8f6f\u91cf\u5b50\u516c\u53f8(Microsoft Quantum)\u9ad8\u7ea7\u7814\u7a76\u5458\u8fc8\u514b\u5c14\u00b7\u8d1d\u5f17\u5170(Michael Beverland)\u535a\u58eb\u4e5f\u4e0e\u8fd9\u9879\u7814\u7a76\u65e0\u5173\uff0c\u4ed6\u8bf4\uff1a\u8fd9\u7bc7\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u4ee4\u4eba\u5174\u594b\u7684\u3001\u5947\u7279\u7684\u65b9\u6cd5\u6765\u6267\u884c\u5bb9\u9519\u91cf\u5b50\u8ba1\u7b97\uff0c\u4e3a\u6f5c\u5728\u5730\u5b9e\u73b0\u4e8c\u7ef4\u7a7a\u95f4\u7684\u901a\u7528\u91cf\u5b50\u8ba1\u7b97\u6307\u660e\u4e86\u65b9\u5411\uff0c\u800c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u76ee\u524d\u5b58\u5728\u7684\u4e8c\u7ef4\u7801\u9700\u8981\u8d1d\u5f17\u5170\u535a\u58eb\u6240\u8bf4\u7684\u84b8\u998f\uff0c\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u9b54\u6001\u84b8\u998f\u3002\u8fd9\u5c31\u662f\u91cf\u5b50\u5904\u7406\u5668\u5bf9\u591a\u4e2a\u8ba1\u7b97\u8fdb\u884c\u6392\u5e8f\u5e76\u63d0\u53d6\u6709\u7528\u8ba1\u7b97\u7684\u5730\u65b9\u3002\n\u5e03\u6717\u535a\u58eb\u8bf4\uff0c\u6211\u5df2\u7ecf\u5e94\u7528\u4e86\u4e09\u7ef4\u7801\u7684\u529b\u91cf\uff0c\u5e76\u5c06\u5176\u6539\u9020\u6210\u4e8c\u7ef4\u6846\u67b6\u3002\n\u5e03\u6717\u533b\u751f\u4eca\u5e74\u4e00\u76f4\u5f88\u5fd9\u3002\u4eca\u5e743\u6708\uff0c\u4ed6\u4e0eEQUS\u548c\u6089\u5c3c\u5927\u5b66\u7684\u540c\u4e8b\u5728\u9876\u7ea7\u7269\u7406\u6742\u5fd7\u201c\u7269\u7406\u8bc4\u8bba\u5feb\u62a5\u201d\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u4ed6\u548c\u4ed6\u7684\u540c\u4e8b\u5f00\u53d1\u4e86\u4e00\u79cd\u89e3\u7801\u5668\uff0c\u53ef\u4ee5\u8bc6\u522b\u548c\u7ea0\u6b63\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u591a\u7684\u9519\u8bef\uff0c\u5b9e\u73b0\u4e86\u7ea0\u6b63\u65b9\u9762\u7684\u4e16\u754c\u7eaa\u5f55\u3002\n\u5e03\u6717\u535a\u58eb\u8bf4\uff0c\u8bc6\u522b\u66f4\u5e38\u89c1\u7684\u9519\u8bef\u662f\u6211\u4eec\u91ca\u653e\u66f4\u591a\u5904\u7406\u80fd\u529b\u8fdb\u884c\u6709\u7528\u8ba1\u7b97\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002\n\u65af\u8482\u82ac\u00b7\u5df4\u7279\u5229\u7279(Stephen Bartlett)\u6559\u6388\u662f\u8be5\u8bba\u6587\u7684\u5408\u8457\u8005\u4e4b\u4e00\uff0c\u4e5f\u662f\u6089\u5c3c\u5927\u5b66\u7406\u8bba\u7814\u7a76\u5c0f\u7ec4\u7684\u8d1f\u8d23\u4eba\u3002\n\u6211\u4eec\u5728\u6089\u5c3c\u7684\u56e2\u961f\u975e\u5e38\u4e13\u6ce8\u4e8e\u53d1\u73b0\u6211\u4eec\u5982\u4f55\u653e\u5927\u91cf\u5b50\u6548\u5e94\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u591f\u4e3a\u5927\u89c4\u6a21\u8bbe\u5907\u63d0\u4f9b\u52a8\u529b\uff0c\u5df4\u7279\u5229\u7279\u6559\u6388\u8bf4\uff0c\u4ed6\u4e5f\u662f\u79d1\u5b66\u5b66\u9662\u7814\u7a76\u7684\u526f\u9662\u957f\u3002\n\u5e03\u6717\u535a\u58eb\u7684\u5de5\u4f5c\u5c55\u793a\u4e86\u5982\u4f55\u4e3a\u91cf\u5b50\u82af\u7247\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8fdb\u6b65\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u4ece\u5c11\u91cf\u7684\u91cf\u5b50\u6bd4\u7279\u53d1\u5c55\u5230\u975e\u5e38\u5927\u7684\u6570\u91cf\uff0c\u5e76\u5efa\u9020\u8d85\u5f3a\u5927\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\uff0c\u4ece\u800c\u89e3\u51b3\u660e\u5929\u7684\u91cd\u5927\u95ee\u9898\u3002", "note_en": "A scientist at the University of Sydney has achieved what one quantum industry insider has described as &#34;something that many researchers thought was impossible&#34;.    Dr. Benjamin Brown from the School of Physics has developed a type of error-correcting code for quantum computers that will free up more hardware to do useful calculations. It also provides an approach that will allow companies like Google and IBM to design better quantum microchips.\n  He did this by applying already known code that operates in three-dimensions to a two-dimensional framework.\n  &#34;The trick is to use time as the third dimension. I&#39;m using two physical dimensions and adding in time as the third dimension,&#34; Dr. Brown said. &#34;This opens up possibilities we didn&#39;t have before.&#34;\n    &#34;It&#39;s a bit like knitting,&#34; he said. &#34;Each row is like a one-dimensional line. You knit row after row of wool and, over time, this produces a two-dimensional panel of material.&#34;\n    Reducing errors in   is one of the biggest challenges facing scientists before they can build machines large enough to solve useful problems.\n  &#34;Because quantum information is so fragile, it produces a lot of errors,&#34; said Dr. Brown, a research fellow at the University of Sydney Nano Institute.\n  Completely eradicating these errors is impossible, so the goal is to develop a &#34;fault-tolerant&#34; architecture where useful processing operations far outweigh error-correcting operations.\n  &#34;Your mobile phone or laptop will perform billions of operations over many years before a single error triggers a blank screen or some other malfunction. Current quantum operations are lucky to have fewer than one error for every 20 operations\u2014and that means millions of errors an hour,&#34; said Dr. Brown who also holds a position with the ARC Centre of Excellence for Engineered Quantum Systems.\n    Most of the building blocks in today&#39;s experimental quantum computers\u2014quantum bits or qubits\u2014are taken up by the &#34;overhead&#34; of  .\n  &#34;My approach to suppressing errors is to use a code that operates across the surface of the architecture in two dimensions. The effect of this is to free up a lot of the hardware from error correction and allow it to get on with the useful stuff,&#34; Dr. Brown said.\n    Dr. Naomi Nickerson is Director of Quantum Architecture at  PsiQuantum in Palo Alto, California, and unconnected to the research. She said: &#34;This result establishes a new option for performing fault-tolerant gates, which has the potential to greatly reduce overhead and bring practical quantum computing closer.&#34;\n    Start-ups like PsiQuantum, as well as the big technology firms Google, IBM and Microsoft, are leading the charge to develop large-scale quantum technology. Finding error-correcting codes that will allow their machines to scale up is urgently needed.\n  Dr. Michael Beverland, a senior researcher at  Microsoft Quantum and also unconnected with the research, said: &#34;This paper explores an exciting, exotic approach to perform fault-tolerant quantum computation, pointing the way towards potentially achieving universal quantum computation in two spatial dimensions without the need for distillation, something that many researchers thought was impossible.&#34;\n  Two-dimensional codes that currently exist require what Dr. Beverland refers to as distillation, more precisely known as &#39;magic-state distillation&#39;. This is where the quantum processor sorts through the multiple computations and extracts the useful ones.\n    &#34;I&#39;ve applied the power of the three-dimensional code and adapted it to the two-dimensional framework,&#34; Dr. Brown said.\n  Dr. Brown has been busy this year. In March he published a paper in top physics journal   Physical Review Letters with colleagues from EQUS and the University of Sydney. In that research he and colleagues developed a decoder that identifies and corrects more errors than ever before, achieving a world record in   correction.\n  &#34;Identifying the more common errors is another way we can free up more processing power for useful computations,&#34; Dr. Brown said.\n  Professor Stephen Bartlett is a co-author of that paper and leads the   theory research group at the University of Sydney.\n  &#34;Our group at Sydney is very focused on discovering how we can scale-up quantum effects so that they can power large-scale devices,&#34; said Professor Bartlett, who is also Associate Dean for Research in the Faculty of Science.\n  &#34;Dr. Brown&#39;s work has shown how to do this for a quantum chip. This type of progress will enable us to go from small numbers of qubits to very large numbers and build ultra-powerful quantum computers that will solve the big problems of tomorrow.&#34;", "posttime": "2020-05-25 01:48:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,\u7269\u7406\u5b66\u5bb6,physicist,\u91cf\u5b50", "title": "\u4e00\u4f4d\u91cf\u5b50\u7269\u7406\u5b66\u5bb6\u7528\u8001\u628a\u620f\u53d1\u660e\u4e86\u65b0\u5bc6\u7801\u3002", "title_en": "A quantum physicist invented new code from old tricks", "transed": 1, "url": "https://phys.org/news/2020-05-quantum-physicist-code.html", "via": "", "real_tags": ["\u5bc6\u7801", "\u7269\u7406\u5b66\u5bb6", "physicist", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003536, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u771f\u5b9e\u670d\u52a1\u5668\u4e0a\u81ea\u52a9\u8fdc\u7a0b\u5b89\u88c5Windows\u3001CentOS\u3001ESXi\u548cUbuntu\uff0c\u53ef\u5c06\u60a8\u7684\u6570\u636e\u4e2d\u5fc3\u53d8\u6210\u88f8\u673a\u4e91\u3002\nIPv4\u548cIPv6\u7f51\u7edc\u4e0a\u7684PXE\u3002\u7528\u4e8eDNS\u3001DHCP\u3001IPAM\u3001\u670d\u52a1\u5668\u914d\u7f6e\u548c\u8c03\u914d\u7684API\u3002\n\u53d1\u73b0\u6bcf\u53f0\u670d\u52a1\u5668\u4e2d\u7684\u6bcf\u53f0PCI\u548cUSB\u8bbe\u5907\u3002\u76d8\u70b9\u78c1\u76d8\u578b\u53f7\u548c\u5e8f\u5217\u53f7\u3002\u6839\u636e\u7279\u5b9a\u7684\u914d\u7f6e\u8be6\u7ec6\u4fe1\u606f\u914d\u7f6e\u8ba1\u7b97\u673a\uff0c\u4ee5\u4f18\u5316\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4f7f\u7528RAID\u3001bcache\u3001LVM\u3001ZFS\u7b49\u521b\u5efa\u9ad8\u7ea7\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\u3002\u901a\u8fc7API\u81ea\u52a8\u6267\u884c\u5b58\u50a8\u914d\u7f6e\u3002\u6839\u636e\u5b58\u50a8\u5206\u914d\u670d\u52a1\u5668\u3002\n\u4e0eLDAP\u3001Active Directory\u6216SAML\u96c6\u6210\uff0c\u5b9e\u73b0\u8de8\u591a\u4e2aMAAS\u533a\u57df\u7684\u96c6\u4e2d\u8eab\u4efd\u7ba1\u7406\u548c\u5355\u70b9\u767b\u5f55\u3002\n\u63a8\u52a8Cisco UCS\u3001Intel RSD\u3001HP Moonshot\u7b49\u3002\u901a\u8fc7\u82f1\u7279\u5c14RSD\u652f\u6301\u52a8\u6001\u786c\u4ef6\u7ec4\u5408\u3002\n\u60a8\u8fd0\u8425\u6570\u636e\u4e2d\u5fc3\uff0c\u4f46\u60a8\u7684\u5ba2\u6237\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u786c\u4ef6\u3002\u4ed6\u4eec\u559c\u6b22\u4e91\u4f53\u9a8c\uff0c\u4f46\u5bf9\u4f60\u6765\u8bf4\u62e5\u6709\u786c\u4ef6\u6548\u7387\u66f4\u9ad8\u3002\nMAAS\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u516c\u5171\u4e91\u7684\u5b9e\u4f8b\u5143\u6570\u636e\u548ccloud-init\u7684\u6240\u6709\u6807\u51c6\u7279\u6027\u3002\u60a8\u7684\u5ba2\u6237\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u90e8\u7f72\u7684\u673a\u5668\u3002\nCanonical\u521b\u5efa\u4e86cloud-init\u5e76\u5728\u5168\u7403\u9886\u5bfc\u8be5\u9879\u76ee\uff1b\u6211\u4eec\u786e\u4fddMAAS\u4e3a\u57fa\u4e8ex86\u3001ARM64\u3001POWER\u548cZ\u67b6\u6784\u7684\u7269\u7406\u670d\u52a1\u5668\u63d0\u4f9b\u4e00\u6d41\u7684\u4e91\u4f53\u9a8c\u3002\nMAAS\u68c0\u6d4b\u5e76\u6e05\u70b9\u6bcf\u53f0\u670d\u52a1\u5668\u4e2d\u7684\u6240\u6709\u78c1\u76d8\u3002\u60a8\u5c06\u62e5\u6709\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2a\u578b\u53f7\u548c\u5e8f\u5217\u53f7\u7684\u6570\u636e\u5e93\u3002\nMAAS\u4ee5\u975e\u7834\u574f\u6027\u6216\u7834\u574f\u6027\u7684\u65b9\u5f0f\u6d4b\u8bd5\u78c1\u76d8\uff0c\u4f7f\u7528\u77ed\u6216\u957f\u7684\u5199\u5165\u5468\u671f\uff0c\u5e76\u4e86\u89e3\u5b83\u4eec\u7684\u6027\u80fd\u3002\nSSD\u548c\u65cb\u8f6c\u78c1\u76d8\u7c7b\u578b\u7684\u81ea\u52a8\u6807\u8bb0\u4f7f\u60a8\u5f88\u5bb9\u6613\u77e5\u9053\u8981\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u54ea\u4e9b\u78c1\u76d8\u3002\n\u60a8\u7684\u7528\u6237\u53ef\u4ee5\u914d\u7f6e\u4ed6\u4eec\u63a7\u5236\u7684\u4efb\u4f55\u670d\u52a1\u5668\u7684\u5b58\u50a8\uff1aRAID\u3001LVM\u3001Bcache\u548cZFS\u3002\u51c6\u786e\u914d\u7f6e\u5f15\u5bfc\u76d8\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u5907\u4efd\u78c1\u76d8\uff0c\u5e76\u5728\u51e0\u5206\u949f\u540e\u5c06\u5176\u5b89\u88c5\u5230\u5df2\u5b89\u88c5\u7684\u673a\u5668\u4e0a\u3002\nMAAS\u53ef\u5728\u6b63\u786e\u7684\u7f51\u7edc\u914d\u7f6e\u4e0a\u5b9e\u73b0\u5feb\u901f\u878d\u5408-\u9002\u7528\u4e8e\u6bcf\u4e2a\u673a\u67b6\u4e2d\u7684\u6bcf\u53f0\u670d\u52a1\u5668\u3002\u5728MAAS\u4e2d\u767b\u8bb0\u8ba1\u7b97\u673a\u65f6\uff0c\u4f1a\u68c0\u6d4b\u5e76\u6e05\u70b9\u6240\u6709NIC\u3002\n\u53d1\u73b0\u7f51\u7edc\u62d3\u6251-\u54ea\u5757\u7f51\u5361\u63d2\u5165\u54ea\u53f0\u4ea4\u6362\u673a\u7684\u54ea\u4e2a\u7aef\u53e3\u3002MAAS\u6d4b\u8bd5\u4ece\u6bcf\u4e2aNIC\u5bf9\u7279\u5b9aVLAN\u7684\u8bbf\u95ee\u3002\n\u8fd8\u53ef\u4ee5\u914d\u7f6e\u7f51\u7edc\u7ed1\u5b9a\u548cVLAN\u3002\u901a\u8fc7MAAS\u8bbe\u7f6e\u6240\u6709\u91cd\u8981\u7684\u7f51\u7edc\u64cd\u4f5c\u5c5e\u6027\uff0c\u7136\u540e\u901a\u8fc7\u77ed\u6682\u7684\u673a\u5668\u5f15\u5bfc\u548c\u6d4b\u8bd5\u9a8c\u8bc1\u8be5\u914d\u7f6e\u3002\nMAAS\u673a\u67b6\u63a7\u5236\u5668\u4e3a\u673a\u67b6\u672c\u8eab\u4e2d\u7684\u6240\u6709\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u63d0\u4f9b\u672c\u5730\u7aef\u70b9\uff0c\u5b83\u4eec\u8fd8\u76d1\u63a7\u672c\u5730\u7f51\u7edc\u4e2d\u7684\u6076\u610f\u8bbe\u5907\u3001IP\u5730\u5740\u548cMAC\u5730\u5740\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u60a8\u5c06\u77e5\u9053\u662f\u5426\u6709\u201c\u989d\u5916\u7684\u201d\u8bbe\u5907\u63d2\u5165\u5230\u8981\u6c42MAAS\u76d1\u63a7\u7684\u4efb\u4f55\u7ed3\u6784\u6216VLAN\u4e2d\u3002\nMAAS\u96c6\u6210\u4e86\u540c\u7c7b\u6700\u4f73\u7684ISC DHCP\u548cBind9 DNS\uff0c\u53ea\u8981\u63d0\u4f9b\u5197\u4f59\u7684MAAS\u670d\u52a1\uff0c\u5b83\u4eec\u5c31\u4f1a\u5728\u9ad8\u53ef\u7528\u6027\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\u5728\u4e24\u4e2a\u7cfb\u7edf\u4e0a\u90e8\u7f72Maas API\u670d\u52a1\uff0c\u60a8\u5c06\u62e5\u6709\u9ad8\u53ef\u7528\u6027API\u7aef\u70b9\uff1b\u90e8\u7f72\u4e24\u4e2a\u673a\u67b6\u63a7\u5236\u5668\uff0c\u6240\u6709\u673a\u67b6\u670d\u52a1\u5c06\u81ea\u52a8\u5197\u4f59\u3002MAAS\u91c7\u7528PostgreSQL\u6570\u636e\u5e93\uff0c\u652f\u6301\u5197\u4f59\u3001\u9ad8\u53ef\u7528\u573a\u666f\u3002\n\u5c06devops\u5e94\u7528\u4e8e\u88f8\u673a\uff0c\u5982\u5927\u6570\u636e\u3001Kubernetes\u3001\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u3001\u79c1\u6709\u4e91\u3001OpenStack\u3001PaaS\u548cHPC\u3002\u4e13\u5bb6\u4eec\u90fd\u559c\u6b22\u9a6c\u65af\u3002\nMAAS\u662f\u4e00\u79cd\u5f00\u6e90SDDC\u89e3\u51b3\u65b9\u6848\uff0c\u7535\u4fe1\u516c\u53f8\u3001\u91d1\u878d\u673a\u6784\u3001\u5a92\u4f53\u516c\u53f8\u548c\u8d85\u7ea7\u8ba1\u7b97\u673a\u7ba1\u7406\u5458\u4f7f\u7528\u5b83\u6765\u5904\u7406\u6240\u6709\u5e95\u5c42\u7ec6\u8282\u3002PXE\u3001IPMI\u3001iLO\u548c\u5404\u79cd\u4f9b\u5e94\u5546\u786c\u4ef6\u652f\u6301\u6240\u9700\u7684\u6240\u6709\u81ea\u5b9a\u4e49\u534f\u8bae\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u5e72\u51c0\u7684REST API\u4e2d\uff0c\u5e76\u5e26\u6709Python\u7ed1\u5b9a\uff0c\u4fbf\u4e8e\u96c6\u6210\u548c\u81ea\u52a8\u5316\u3002\u5b83\u5305\u62ec\u5b8c\u6574\u7684IPAM\u529f\u80fd\uff0c\u4e3a\u6240\u6709\u7f51\u7edc\u5bfb\u5740\u548c\u547d\u540d\u4fe1\u606f\u63d0\u4f9b\u4e2d\u592e\u6570\u636e\u5e93\u548cREST API\u3002\nMAAS\u63d0\u4f9b\u4e86\u521b\u5efa\u7cbe\u76ca\u7684\u3001\u57fa\u4e8eKVM\u7684\u6309\u9700\u5fae\u4e91\u7684\u80fd\u529b\u3002\u6b64\u529f\u80fd\u53ef\u6269\u5c55\u5230\u5bf9KVM\u5b58\u50a8\u548c\u7f51\u7edc\u914d\u7f6e\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5728\u4efb\u4f55\u53d7\u7269\u7406\u5360\u7528\u7a7a\u95f4\u9650\u5236\u6216\u9700\u8981\u4e13\u7528\u7684\u57fa\u4e8e\u865a\u62df\u673a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u73af\u5883\u4e2d\u52a0\u5feb\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3002\n\u501f\u52a9\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u90e8\u7f72\u5de5\u5177\u94fe\uff0c\u5feb\u901f\u8c03\u914d\u548c\u62c6\u5378\u7269\u7406\u548c\u865a\u62df\u670d\u52a1\u5668\u3002\u975e\u5e38\u9002\u5408\u9ad8\u6027\u80fd\u8ba1\u7b97(HPC)\u3002\nMAAS\u901a\u8fc7\u590d\u6742\u7684\u670d\u52a1\u5668\u5de5\u4f5c\u6d41\u8f6c\u53d8DevOps\uff0c\u5305\u62ec\u52a8\u6001\u5206\u533a\u3001\u5e94\u7528\u9a71\u52a8\u7684\u8d44\u6e90\u6269\u5c55\u3001\u81ea\u52a8\u5de5\u4f5c\u8d1f\u8f7d\u91cd\u65b0\u5e73\u8861\u548c\u4e0d\u53d8\u7684\u57fa\u7840\u67b6\u6784\u3002\nMAAS\u901a\u8fc7\u516c\u5f00\u88f8\u673a\u8c03\u914d\u64cd\u4f5cAPI\u6765\u5e2e\u52a9\u60a8\u6784\u5efa\u7edf\u4e00\u7684\u6df7\u5408\u4e91\u8fd0\u8425\uff0c\u8be5API\u53ef\u4e0e\u670d\u52a1\u5efa\u6a21\u5de5\u5177(\u5982Juju)\u6216\u914d\u7f6e\u7ba1\u7406\u5de5\u5177(\u5982Chef)\u914d\u5408\u4f7f\u7528\u3002\nMAAS\u53ef\u5e2e\u52a9\u60a8\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u8fd0\u884c\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f7f\u7528\u76f8\u540c\u6216\u4e0d\u540c\u7684\u57fa\u7840\u64cd\u4f5c\u7cfb\u7edf\uff0c\u65e0\u8bba\u662f\u5927\u89c4\u6a21\u8fd8\u662f\u5c0f\u89c4\u6a21\u3002\n\u5728\u975e\u9ad8\u5cf0\u671f\u95f4\u505c\u7528\u8282\u70b9\uff0c\u4ee5\u8282\u7701\u80fd\u6e90\u548c\u4eba\u5458\u9700\u6c42\u3002\u5229\u7528\u8fd9\u6bb5\u65f6\u95f4\u4e13\u6ce8\u4e8e\u65e5\u5e38\u786c\u4ef6\u7ba1\u7406\u4efb\u52a1\uff0c\u4f18\u5316\u4f7f\u7528\u6a21\u5f0f\u548c\u5185\u90e8\u6d41\u7a0b\u3002\n\u4ee5\u4efb\u4f55\u89c4\u6a21\u7684\u901f\u5ea6\uff0c\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u805a\u5408\u5f00\u6e90\u5de5\u5177\u66ff\u6362\u4f20\u7edf\u7684\u5185\u90e8\u914d\u7f6e\u5de5\u5177\u53ca\u5176\u76f8\u5173\u95ee\u9898\uff0c\u4f8b\u5982\u5f00\u53d1\u8d44\u6e90\u3001\u8c03\u8bd5\u3001QA\u3001\u81ea\u6ce8\u518c\u548c\u603b\u7ebf\u56e0\u7d20\u3002\nMAAS\u7684API\u5141\u8bb8\u5feb\u901f\u91cd\u65b0\u914d\u7f6e\u5b58\u50a8\u548c\u7f51\u7edc\u4ee5\u5339\u914d\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ece\u800c\u4e3a\u6bcf\u6b21\u8fd0\u884c\u751f\u6210\u5e72\u51c0\u7684\u88f8\u673a\u73af\u5883\u3002\n\u5728\u65b0\u914d\u7f6e\u7684\u673a\u5668\u548c\u673a\u67b6\u4e0a\u8fd0\u884c\u4e00\u7ec4\u6807\u51c6\u548c\u5b9a\u5236\u6d4b\u8bd5\uff0c\u8f6c\u53d8\u4efb\u4f55\u65b0\u7684\u786c\u4ef6\u914d\u7f6e\u548c\u96c6\u6210\u6d41\u7a0b\u3002\nMAAS\u63d0\u4f9b\u4e1a\u754c\u6700\u5feb\u7684OS\u5b89\u88c5\u65f6\u95f4\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5176\u4f18\u5316\u7684\u57fa\u4e8e\u6620\u50cf\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002\nMAAS\u662fCanonical\u514d\u8d39\u63d0\u4f9b\u7684\u5f00\u6e90\u8f6f\u4ef6\u3002Ubuntu Advantage for Infrastructure\u5305\u62ec\u5bf9MAAS\u7684\u652f\u6301\u548c\u5546\u4e1a\u529f\u80fd\u3002\u8fd9\u4e9b\u989d\u5916\u8d39\u7528\u9002\u7528\u4e8e\u7531MAAS\u7ba1\u7406\u4e14\u4e0d\u5728UA\u57fa\u7840\u8bbe\u65bd\u5408\u540c\u8303\u56f4\u5185\u7684\u673a\u5668\u3002", "note_en": "Self-service, remote installation of Windows, CentOS, ESXi and Ubuntu on real servers turns your data centre into a bare metal cloud.\n PXE over  IPv4 and  IPv6 networks. APIs for DNS, DHCP, IPAM, server configuration and provisioning.\n    Discover every PCI and USB device in every server. Inventory disk models and serial numbers. Provision machines based on specific configuration details to optimize your applications.\n  Create advanced filesystem layouts with  RAID,  bcache,  LVM, ZFS and more. Automate storage configuration through APIs. Allocate servers based on storage.\n          Integrate with LDAP, Active Directory or SAML for central identity management and single-sign-on across multiple MAAS regions.\n  Drive Cisco UCS, Intel RSD, HP Moonshot, and more. Supports dynamic hardware composition with Intel RSD.\n  You run the data centre, but your customers decide what they want to do with the hardware. They love the cloud experience, but it\u2019s more efficient for you to own the hardware.\n  MAAS implements all the standard features of a public cloud \u2014 like instance metadata and cloud-init. Your customers get complete control of the deployed machine.\n  Canonical created cloud-init and leads the project globally; we ensure that MAAS provides a first-class cloud experience for physical servers based on x86, ARM64, POWER and Z architectures.\n  MAAS detects and inventories all the disks, in every server. You\u2019ll have a single database of every model and serial number.\n  MAAS tests disks either non-destructively or destructively, with short or long write cycles, and learns about their performance.\n  Auto-tagging of SSD and rotary disk types makes it easy to know which disks to use for each application.\n  Your users configure the storage of any server they control: RAID, LVM, Bcache and ZFS. Configure boot, applications and backup disks exactly where you want them \u2014 and get the installed machine, a few minutes later.\n  MAAS enables rapid convergence on a correct network configuration \u2014 for every server, in every rack. All NICs are detected and inventoried when a machine is enlisted in MAAS.\n  Discover the topology of the network \u2014 which NIC is plugged into which port on which switch. MAAS tests access to specific VLANs from each NIC.\n  Network bonds and VLANs can be configured too. Set all significant network operating properties through MAAS \u2014 and then validate that configuration with ephemeral machine booting and testing.\n  MAAS rack controllers provide local endpoints for all infrastructure services in the rack itself, and they also monitor the local network for rogue devices, IP addresses and MAC addresses.\n  Over time, you\u2019ll know if there are \u2018extra\u2019 devices plugged into any fabric or VLAN that MAAS is asked to monitor.\n  MAAS integrates best-of-breed ISC DHCP and Bind9 DNS, and will operate these in high availability mode whenever redundant MAAS services are provided. Deploy the MAAS API services on two systems and you will have high availability API endpoints; deploy two rack controllers and all rack services are automatically redundant. MAAS uses the PostgreSQL database which supports redundant and highly available scenarios.\n    Take devops to bare metal for apps like big data, kubernetes, analytics, machine learning, private cloud, OpenStack, PAAS and HPC. Specialists love MAAS.\n  MAAS is an open source SDDC solution used by telcos, financial institutions, media companies and supercomputer admins to take care of all the low-level details. PXE, IPMI, ILO and all the custom protocols needed for diverse vendor hardware support come together in one clean REST API with Python bindings for easy integration and automation. It includes full IPAM capabilities, providing a central database and REST API for all network addressing and naming information.\n    MAAS offers the ability to create lean, on-demand KVM-based micro-clouds. This capability extends to fine-grained control over KVM storage and networking configuration, thereby accelerating deployment of applications in any environment constrained by physical footprint or requiring dedicated VM-based workloads.\n Quickly provision and tear down both physical and virtual servers with a modern operating system deployment toolchain. Perfect for high-performance computing (HPC).\n  MAAS transforms DevOps with complex server workflows, including dynamic partitioning, application-driven resource scaling, automatic workload rebalancing and immutable infrastructure.\n  MAAS helps you build unified hybrid cloud operations by exposing a bare-metal provisioning operations API that can be used with service modelling tools, like Juju, or configuration management tools, like Chef.\n    MAAS helps you run different workloads at different times, using the same or different base operatings systems, at both large and small scales.\n  Decommission nodes during non-peak periods to save both energy and personnel requirements. Use the time to focus on day-to-day hardware management tasks, optimising usage patterns and internal processes.\n  Replace legacy in-house provisioning tools and their associated problems, such as development resources, debugging, QA, on-boarding and &#39;bus-factor&#39;, with a standard set of converged open source tools, at speed to any scale.\n    MAAS&#39;s API allows storage and networking to be rapidly reconfigured to match each test case, generating a clean bare-metal environment for every run.\n  Run sets of standard and customised tests on freshly provisioned machines and racks, transforming any new hardware provision and integration process.\n MAAS delivers the fastest OS installation times in the industry thanks to its optimised image-based installer.\n MAAS is freely available, open source software from Canonical. Support and commercial capabilities for MAAS are included with  Ubuntu Advantage for Infrastructure. These additional charges apply for machines managed by MAAS and not covered by a UA Infrastructure contract.", "posttime": "2020-05-25 01:47:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91d1\u5c5e,metal,maas", "title": "\u91d1\u5c5e\u5373\u670d\u52a1", "title_en": "Metal as a Service", "transed": 1, "url": "https://maas.io/", "via": "", "real_tags": ["\u91d1\u5c5e", "metal", "maas"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u62fc\u51d1\u8fd9\u7bc7\u5e16\u5b50\u662f\u4e3a\u4e86\u4ece\u6211\u7684\u8111\u6d77\u4e2d\u60f3\u51fa\u4e00\u4e2a\u4e3b\u610f\u3002\u6211\u4e0d\u8ba4\u4e3a\u6211\u6709\u5173\u7cfb\uff0c\u4e5f\u6ca1\u6709\u5fc5\u8981\u7684\u8d44\u91d1\u6765\u63a8\u52a8\u8fd9\u4e2a\u60f3\u6cd5\u5728\u4e16\u754c\u4e0a\u7684\u5e7f\u6cdb\u91c7\u7528\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u5982\u679c\u8ba9\u66f4\u6709\u80fd\u529b\u7684\u4eba\u6765\u6307\u5bfc\uff0c\u5b83\u4f1a\u5e26\u6765\u4e00\u4e9b\u76f8\u5f53\u9177\u7684\u4e1c\u897f\u3002\u6240\u4ee5\u5c31\u662f\u8fd9\u6837\u4e86\u3002\n\u6211\u51e0\u4e4e\u65e0\u6cd5\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\u4e3a\u6211\u5b58\u50a8\u7684\u6570\u636e\u3002\u6211\u8bf4\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u660e\u786e\u5ba3\u4f20\u81ea\u5df1\u9700\u8981\u7684\u6570\u636e\uff1a\u6bd4\u5982\u6211\u5728\u5065\u8eab\u5e94\u7528\u4e2d\u8bb0\u5f55\u7684\u953b\u70bc\u6570\u636e\uff0c\u6216\u8005\u6211\u653e\u5728\u5f85\u529e\u4e8b\u9879\u5e94\u7528\u4e2d\u7684\u5f85\u529e\u4e8b\u9879\uff0c\u6216\u8005\u6211\u5728Twitter\u4e0a\u53d1\u5e03\u7684\u63a8\u6587\u3002\n\u6211\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e\u7684\u552f\u4e00\u65b9\u5f0f\u662f\u901a\u8fc7\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u6211\u53ea\u80fd\u505a\u4ea7\u54c1\u8bbe\u8ba1\u5e08\u4e8b\u5148\u60f3\u597d\u8981\u5305\u62ec\u7684\u4e8b\u60c5\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4e0d\u80fd\u5bf9\u6211\u7684\u6570\u636e\u505a\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e0d\u660e\u786e\u5141\u8bb8\u7684\u4e8b\u60c5\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4e5f\u4e0d\u4f1a\u660e\u786e\u5141\u8bb8\u592a\u591a\u3002\n\u4e3a\u4ec0\u4e48\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u63d0\u4f9b\u66f4\u591a\u529f\u80fd\u5462\uff1f\u56e0\u4e3a\u6bcf\u4e2a\u529f\u80fd\u90fd\u9700\u8981\u5f00\u53d1\u4eba\u5458\u6765\u5b9e\u73b0\uff0c\u800c\u5f00\u53d1\u4eba\u5458\u7684\u65f6\u95f4\u53c8\u6709\u9650\u53c8\u6602\u8d35\u3002\u5982\u679c\u53ea\u662f\u6211(\u6216\u4e00\u4e9b\u5c11\u6570\u4eba)\u60f3\u8981\u7684\u8bdd\uff0c\u5b9e\u73b0\u4e00\u4e9b\u6211\u60f3\u8981\u7684\u968f\u673a\u53ef\u89c6\u5316\u662f\u4e0d\u5212\u7b97\u7684\u3002\n\u6211\u5e0c\u671b\u80fd\u591f\u968f\u5fc3\u6240\u6b32\u5730\u67e5\u8be2\u6211\u7684\u6570\u636e\uff0c\u5e76\u4e14\u5e0c\u671b\u8de8\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u6570\u636e\u3002\u4f8b\u5982\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u56de\u7b54\u6211\u7684\u953b\u70bc\u548c\u996e\u98df\u4e60\u60ef(\u5728\u5404\u81ea\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55)\u5982\u4f55\u5f71\u54cd\u6211\u7684\u7761\u7720(\u5728\u7b2c\u4e09\u4e2a\u5355\u72ec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8ddf\u8e2a)\uff1f\u4eca\u5929\u6211\u65e0\u6cd5\u5b9a\u91cf\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u5373\u4f7f\u6211\u6709\u5173\u4e8e\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\u7684\u8be6\u7ec6\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5c06\u5728\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5206\u914d\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u4e0d\u4f1a\u76f8\u4e92\u4ea4\u8c08\u3002\n\u6211\u4e0d\u4ec5\u5e0c\u671b\u80fd\u591f\u5728\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5173\u8054\u6570\u636e\uff0c\u6211\u8fd8\u5e0c\u671b\u5176\u4ed6\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u80fd\u5e2e\u6211\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u8ba9\u56fe\u8868\u7f51\u7ad9\u8bbf\u95ee\u6211\u7684\u5065\u8eab\u6570\u636e\u3001\u996e\u98df\u6570\u636e\u548c\u7761\u7720\u6570\u636e\uff1f\u56e0\u4e3a\u4fdd\u5b58\u8fd9\u4e9b\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u516c\u5f00API\u3002\u4ed6\u4eec\u6ca1\u6709\u65f6\u95f4\u548c\u91d1\u94b1\u82b1\u5728\u8fd9\u4e0a\u9762\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u6ce8\u518c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c06\u6211\u5df2\u7ecf\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u5408\u5e76\u5e76\u6269\u5c55\u5230\u6bd4\u73b0\u5728\u66f4\u5927\u7684\u7a0b\u5ea6\u3002\n\u5bfc\u51fa\u662f\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u82b1\u8d39\u65f6\u95f4\u7684\u4e00\u9879\u529f\u80fd\uff0c\u800c\u5927\u591a\u6570\u4eba\u90fd\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u4f46\u8ba9\u6211\u4eec\u5047\u8bbe\u4e16\u754c\u4e0a\u6bcf\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u5bfc\u51fa\u529f\u80fd\u3002\u7136\u540e\u6211\u5c31\u53ef\u4ee5\u4e0b\u8f7d\u6211\u6240\u6709\u7684\u6570\u636e\u4e86\uff0c\u4f46\u662f\u5b83\u4eec\u53ef\u80fd\u90fd\u662f\u4e0d\u540c\u683c\u5f0f\u7684\u3002\u505a\u4efb\u4f55\u6709\u6210\u6548\u7684\u4e8b\u60c5\u90fd\u9700\u8981\u4e00\u4e9b\u6570\u636e\u4e89\u8bba\u3002\u5982\u679c\u6211\u60f3\u8981\u6240\u6709\u6570\u636e\u7684\u6700\u65b0\u66f4\u65b0\uff0c\u6211\u5fc5\u987b\u518d\u6b21\u5bfc\u51fa\u6240\u6709\u6570\u636e\uff0c\u5e76\u518d\u6b21\u4e3a\u6570\u636e\u4e89\u8bba\u4e0d\u4f11\u3002\n\u5982\u679c\u6211\u8981\u4e0e\u5176\u4ed6\u5e94\u7528\u5171\u4eab\u5bfc\u51fa\u7684\u6570\u636e\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u6211\u60f3\u6211\u5fc5\u987b\u5c06\u5176\u5bfc\u51fa\uff0c\u7136\u540e\u4e0a\u4f20\u5230\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4e00\u5b9a\u8981\u5b58\u5728\u3002\u540c\u6837\uff0c\u5982\u679c\u6211\u60f3\u8ba9\u7b2c\u4e09\u65b9\u62e5\u6709\u6700\u65b0\u7684\u6570\u636e\uff0c\u6211\u9700\u8981\u5b9a\u671f\u5bfc\u51fa\u548c\u4e0a\u4f20\u3002\n\u6bd4\u6570\u636e\u5bfc\u51fa\u597d\u4e00\u4e2a\u6863\u6b21\u7684\u662f\u5408\u9002\u7684API\u3002API\u975e\u5e38\u68d2\u3002\u5b83\u4eec\u5141\u8bb8\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\uff0c\u8fd9\u542c\u8d77\u6765\u6b63\u662f\u6211\u60f3\u8981\u7684\uff0c\u5bf9\u5417\uff1f\u55ef\uff0c\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u662f\u7684\uff0c\u4f46\u4e0d\u662f\u5168\u90e8\u3002\n\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cAPI\u53ea\u662f\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u5185\u90e8\u6570\u636e\u7684\u4e00\u5c42\uff1a\u8fd9\u4e00\u5c42\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u548c\u91d1\u94b1\u6765\u6784\u5efa\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6bd4\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u589e\u52a0\u4ef7\u503c\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cAPI\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u60f3\u8981\u7684\u4e00\u5207\u3002\u6b64\u5916\uff0cAPI\u8fd8\u6709\u6211\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u662f\u4f60\u80fd\u505a\u4ec0\u4e48\u7684\u628a\u5173\u4eba\uff1a\u5982\u679c\u6211\u60f3\u5206\u6790\u6211\u6240\u6709\u953b\u70bc\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u4f46API\u6ca1\u6709\u8fd4\u56de\u90a3\u90e8\u5206\u6570\u636e\uff0c\u90a3\u4e48\u6211\u5c31\u4f1a\u89e3\u51b3\u95ee\u9898\u3002\n\u8482\u59c6\u00b7\u4f2f\u7eb3\u65af\u00b7\u674e(Tim Berners Lee)\u575a\u5b9a\u4e0d\u79fb\u5730\u8bd5\u56fe\u89e3\u51b3\u6211\u8bd5\u56fe\u63cf\u8ff0\u7684\u95ee\u9898\uff0c\u5176\u65b9\u5f0f\u4e0e\u6211\u5373\u5c06\u63d0\u51fa\u7684\u975e\u5e38\u76f8\u4f3c\u3002Solid\u4e3a\u7528\u6237\u6570\u636e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f52\u5bbf\uff0c\u4e5f\u5145\u5f53\u4e86\u4e00\u79cd\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5\u3002\u56fa\u6001Pod\u53ef\u4ee5\u7531\u4e0d\u540c\u7684\u63d0\u4f9b\u5546\u6258\u7ba1\uff0c\u4e5f\u53ef\u4ee5\u7531\u81ea\u5df1\u6258\u7ba1\u3002\nSolid\u7684\u4e0d\u8db3\u4e4b\u5904\u5728\u4e8e\u5b83\u7f3a\u4e4f\u5b9e\u7528\u4e3b\u4e49\u3002\u5b83\u7684\u6280\u672f\u4e0e\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u77e5\u9053\u7684\u592a\u4e0d\u4e00\u6837\u4e86\uff0c\u56e0\u6b64\u5728\u83b7\u5f97\u5f00\u53d1\u4eba\u5458\u91c7\u7528\u65b9\u9762\u4f1a\u6709\u95ee\u9898\uff0c\u8fd9\u662f\u83b7\u5f97\u5176\u4ed6\u4efb\u4f55\u4eba\u652f\u6301\u7684\u5148\u51b3\u6761\u4ef6\u3002\u5f00\u53d1\u4eba\u5458\u751a\u81f3\u9700\u8981\u5148\u719f\u6089\u5173\u8054\u6570\u636e\u8bcd\u6c47\u8868\uff0c\u7136\u540e\u624d\u80fd\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u610f\u5473\u774099%\u7684\u5229\u6da6\u9a71\u52a8\u578b\u5e94\u7528\u7a0b\u5e8f\u90fd\u4e0d\u80fd\u91c7\u7528Solid\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740\uff0cSolid\u6210\u672c\u592a\u9ad8\uff0c\u65e0\u6cd5\u5e94\u7528\u4e8e99%\u7684\u5229\u6da6\u9a71\u52a8\u578b\u5e94\u7528\u7a0b\u5e8f\u3002\u65e2\u7136\u60a8\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u4f7f\u7528Postgres\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5b66\u4e60\u5b58\u50a8\u6570\u636e\u7684\u65b0\u65b9\u6cd5\u5462\uff1f\n\u56e0\u6b64\uff0c\u867d\u7136\u6211\u4e0eSolid\u9879\u76ee\u7684\u76ee\u6807\u548c\u610f\u56fe\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5bf9\u6240\u6709\u6ca1\u6709\u65f6\u95f4\u5b66\u4e60\u5168\u65b0\u6280\u672f\u7684\u5f00\u53d1\u4eba\u5458\u548c\u516c\u53f8\u90fd\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002\nhttps://beepb00p.xyz\u7684\u4f5c\u8005\u8be6\u7ec6\u8ba8\u8bba\u4e86\u6211\u6b63\u5728\u63cf\u8ff0\u7684\u95ee\u9898\uff0c\u751a\u81f3\u5236\u4f5c\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u5de5\u5177\u6765\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8be5\u5de5\u5177\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u7684\u7f16\u7a0b\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u671d\u7740\u6b63\u786e\u65b9\u5411\u8fc8\u51fa\u7684\u975e\u5e38\u52a1\u5b9e\u7684\u4e00\u6b65\uff0c\u4f46\u5b83\u4ecd\u7136\u4f9d\u8d56\u4e8eAPI\u7684\u5b58\u5728\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5bfc\u51fa\u529f\u80fd(\u636e\u6211\u6240\u77e5)\u3002\n\u6211\u8ba4\u4e3a\u4e4c\u5c14\u6bd4\u7279\u4e5f\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u6211\u5bf9\u8fd9\u4e2a\u9879\u76ee\u4e0d\u592a\u719f\u6089\u3002\u4e0d\u8fc7\uff0c\u636e\u6211\u6240\u77e5\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u60f3\u8981\u91cd\u65b0\u53d1\u660e\u4ed6\u4eec\u5728\u89e3\u51b3\u95ee\u9898\u65f6\u9047\u5230\u7684\u6bcf\u4e00\u4e2a\u8f6e\u5b50\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679cSolid\u770b\u8d77\u6765\u4e0d\u591f\u52a1\u5b9e\uff0c\u90a3\u4e48Urbit\u4f3c\u4e4e\u751a\u81f3\u4e0d\u60f3\u52a1\u5b9e\u3002\n\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u95ee\u9898\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u66f4\u591a\u7684\u9879\u76ee\u8bd5\u56fe\u4ee5\u67d0\u79cd\u6211\u4e0d\u77e5\u9053\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6211\u4eec\u5982\u4f55\u624d\u80fd\u4f7f\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6570\u636e\u6240\u6709\u6743\u548c\u5171\u4eab\u6210\u4e3a\u9ed8\u8ba4\u8bbe\u7f6e\uff1f\u4ee5\u4e00\u79cd\u6613\u4e8e\u5f00\u53d1\u4eba\u5458\u91c7\u7528\u548c\u7528\u6237\u7406\u89e3\u7684\u65b9\u5f0f\uff1f\n\u6211\u8ba4\u4e3a\u63cf\u8ff0\u8fd9\u4e2a\u60f3\u6cd5\u7684\u6700\u597d\u65b9\u5f0f\u662f\u901a\u8fc7\u51e0\u4e2a\u7528\u6237\u573a\u666f\u3002\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u89e3\u51b3\uff0c\u4f46\u5e0c\u671b\u8fd9\u80fd\u4f20\u8fbe\u51fa\u4e8b\u60c5\u7684\u672c\u8d28\u3002\n\u6211\u5c06\u5f15\u7528\u6211\u5c06\u547c\u53ebMyData\uff1b\u7684\u670d\u52a1\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u7ec4\u5408\u8eab\u4efd\u9a8c\u8bc1\u63d0\u4f9b\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\u63d0\u4f9b\u7a0b\u5e8f\u3002\u901a\u8fc7\u6570\u636e\u5e93\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u6211\u7684\u610f\u601d\u662f\u5b83\u5c06\u5c01\u88c5\u8bb8\u591a\u6d41\u884c\u7684\u6570\u636e\u5e93\u6280\u672f\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u3002\u5b83\u53ef\u4ee5\u63d0\u4f9bPostgres\u3001MySQL\u3001Mongo\u3001Cassandra\u7b49\u3002\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u5c06\u5728\u8fd9\u4e9b\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7528\u6237\u6570\u636e\u3002\n\u867d\u7136\u6211\u4f1a\u5c06MyData\u79f0\u4e3a\u4e00\u9879\u670d\u52a1\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u9879\u670d\u52a1\u7684\u63d0\u4f9b\u5546\u53ef\u80fd\u5f88\u591a\u3002\n\u6211\u8fd8\u60f3\u8bf4\u51fa\u6211\u865a\u6784\u7684\u7528\u6237\u7684\u540d\u5b57\uff0c\u6240\u4ee5\u6211\u907f\u5f00\u4e86\u5316\u540d\uff0c\u9009\u62e9\u4e86\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u540d\u5b57\u3002\n\u7f57\u7eb3\u5fb7\u70b9\u51fb\u6309\u94ae\uff0c\u4ece\u4ed6\u4eec\u7684MyData\u8d26\u6237\u4e2d\u770b\u5230\u4e00\u4e2aOAuth\u5c4f\u5e55\u3002\u8bf7\u6c42\u7684\u6743\u9650\u5c06\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u73b0\u5728\uff0cRonald\u6709\u4e86\u4e00\u4e2a\u7531MyData\u6258\u7ba1\u7684\u65b0Postgres\u6570\u636e\u5e93\uff0c\u4ed6\u53ef\u4ee5\u5b8c\u5168\u8bbf\u95ee\u8be5\u6570\u636e\u5e93\u3002Ronald\u53ef\u4ee5\u9488\u5bf9\u5b83\u7f16\u5199SQL\u67e5\u8be2\uff0c\u6216\u8005\u5bfc\u51fa\u5b83\uff0c\u6216\u8005\u6388\u6743\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u5b83\u3002\u7b2c\u4e8c\u4e2a\u573a\u666f\u63cf\u8ff0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u7f57\u7eb3\u5fb7\u70b9\u51fb\u6309\u94ae\uff0c\u4ece\u4ed6\u4eec\u7684MyData\u8d26\u6237\u4e2d\u770b\u5230\u4e00\u4e2aOAuth\u5c4f\u5e55\u3002\u8bf7\u6c42\u7684\u6743\u9650\u5c06\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a\nMyData\u63d0\u4f9b\u4e86\u5e26\u6709postgres\u7528\u6237\u548curl\u7684SweetFitnessGraphing\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u8bfb\u53d6CoolFitnessTracking\u6570\u636e\u3002\n\u5728\u4e0a\u8ff0\u573a\u666f\u4e2d\uff0cMyData\u5c01\u88c5\u4e86Ronald\u7684\u6240\u6709\u6570\u636e\u5e93\u5e76\u6388\u6743\u8bbf\u95ee\u5b83\u4eec\u3002\u8fd9\u6709\u6548\u5730\u6d88\u9664\u4e86\u5bf9API\u7684\u9700\u8981\uff0c\u56e0\u4e3a\u7528\u6237\u548c\u5e94\u7528\u7a0b\u5e8f\u5c06\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u5e93\u3002\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\u6570\u636e\u5e93\u6a21\u5f0f\u662f&#34\uff1bAPI&#34\uff1b\u3002\u8fd9\u786e\u5b9e\u5c06\u8d23\u4efb\u63a8\u7ed9\u4e86\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u4e0e\u4ee3\u7801\u8bbf\u95ee\u7684\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u67b6\u6784\u4fdd\u6301\u4e00\u81f4\u3002\n\u73b0\u5728\uff0c\u5bf9\u6bcf\u4e2a\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8fde\u63a5\u7edd\u5bf9\u4e0d\u662f\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u5efa\u8bae\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u9700\u8981\u5b58\u50a8\u7528\u6237\u4e0d\u5e94\u8be5\u8bbf\u95ee\u7684\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u9700\u8981\u4e00\u4e2a\u96c6\u4e2d\u7684\u6570\u636e\u5e93\u6765\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u3002\u6211\u4ecd\u7136\u8ba4\u4e3a\u8fd9\u6bd4\u50cfSolid\u8fd9\u6837\u7684\u4e1c\u897f\u66f4\u52a1\u5b9e\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u8f6f\u4ef6\u5de5\u7a0b\u95ee\u9898\uff0c\u4f7f\u7528\u7684\u662f\u4f17\u6240\u5468\u77e5\u7684\u6280\u672f\uff0c\u800c\u4e0d\u662f\u5b66\u4e60\u3001\u7f3a\u4e4f\u793e\u533a\u548c\u5e74\u8f7b\u7684\u6280\u672f\u95ee\u9898\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6280\u672f\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u4e0d\u4ec5\u4ec5\u662f\u6280\u672f\u672c\u8eab\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u9700\u8981\u8003\u8651\u7684\u4e8b\u60c5\uff1a\nSolid\u505a\u8fd9\u4ef6\u4e8b\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002mydata\u9700\u8981\u5b9e\u65bd\u4e00\u9879\u6807\u51c6\uff0c\u5e76\u4e14\u6709\u7ade\u4e89\u5bf9\u624b\u4e5f\u5b9e\u65bd\u8be5\u6807\u51c6\u3002\u5426\u5219\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u63d0\u4f9b\u5546\uff0c\u6211\u4eec\u5c31\u4f1a\u5c06\u6240\u6709\u6570\u636e\u7684\u6743\u529b\u6574\u5408\u5230\u4e00\u4e2a\u5b9e\u4f53\u4e2d\u3002\n\u8fd9\u4e5f\u5c06\u7ed9\u7528\u6237\u63d0\u4f9b\u9009\u62e9\uff0c\u5e76\u9632\u6b62\u5b83\u53d8\u6210\u53e6\u4e00\u4e2a\u6709\u56f4\u5899\u7684\u82b1\u56ed\u3002\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6700\u597d\u65b9\u6cd5\u662f\u4f7f\u5e94\u7528\u7a0b\u5e8f\u4e0eMyData\u4ea4\u4e92\u7684\u534f\u8bae\u6210\u4e3a\u4e00\u4e2a\u5f00\u653e\u6807\u51c6\u3002\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u6613\u4e8e\u8fd0\u884c\u7684\u5f00\u6e90\u53c2\u8003\u5b9e\u73b0\u3002\n\u8fd9\u5f88\u7b80\u5355\u3002\u8981\u5c06\u6570\u636e\u5e93\u751f\u6001\u7cfb\u7edf\u5f15\u5bfc\u4e3aAPI\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8ba9\u4eba\u4eec\u521b\u5efa\u5e10\u6237\u5e76\u5f00\u59cb\u4f7f\u7528\u8be5\u6280\u672f\u7684\u7406\u7531\u3002\u8fd9\u9700\u8981\u901a\u8fc7\u63d0\u4f9b\u53ea\u80fd\u901a\u8fc7\u8fd9\u4e2a\u7cfb\u7edf\u63d0\u4f9b\u7684\u4ef7\u503c\u6765\u5b9e\u73b0\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u80fd\u53ea\u662f\u4e00\u4e2a\u6740\u624b\u7ea7\u7684\u5e94\u7528\uff0c\u800c\u662f\u4e00\u4e2a\u6740\u624b\u7ea7\u7684\u5e94\u7528\u7ec4\u5408\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u6740\u624b\u7ea7\u7ec4\u5408\u5c06\u901a\u8fc7MyData\u6807\u51c6\u8fdb\u884c\u4e92\u64cd\u4f5c\uff0c\u5e76\u4ee5\u4f20\u7edf\u8f6f\u4ef6\u67b6\u6784\u96be\u4ee5\u5339\u654c\u7684\u65b9\u5f0f\u5171\u540c\u63d0\u4f9b\u4ef7\u503c\u3002\n\u6211\u4e0d\u77e5\u9053\u8fd9\u91cc\u6700\u597d\u7684\u8def\u662f\u4ec0\u4e48\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e\u8d44\u91d1\u6d41\u7684\u51e0\u4e2a\u9009\u62e9\uff1a\n\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u6211\u4eec\u4e0d\u6307\u671b\u7528\u6237\u4e3a\u8bb8\u591a\u670d\u52a1(\u76f4\u63a5)\u4ed8\u8d39\uff0c\u8fd9\u65e2\u4ee4\u4eba\u60ca\u53f9\u53c8\u4ee4\u4eba\u77a0\u76ee\u7ed3\u820c\u3002\u5728\u56f4\u7ed5MyData&34\uff1b\u8bbe\u8ba1\u8d27\u5e01\u5316\u65b9\u6848\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7262\u8bb0\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u8d44\u672c\u4e3b\u4e49\u4e16\u754c\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6570\u636e\u5e93\u7684\u4e3b\u673a\u63d0\u4f9b\u5546(MyDatas)\u9700\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8d5a\u94b1\u3002\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u5411\u7528\u6237\u6536\u8d39\uff0c\u6211\u4eec\u8be5\u5411\u8c01\u6536\u8d39\u5462\uff1f\u8fde\u63a5\u5230MyData\u670d\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u652f\u4ed8\u57fa\u4e8e\u4f7f\u7528\u91cf\u7684\u8d39\u7528\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5b83\u4eec\u4ece\u8be5\u670d\u52a1\u8bfb\u53d6/\u5199\u5165\u7684\u6570\u636e\u91cf\u3002\u6211\u4eec\u90fd\u4e60\u60ef\u4e86AWS\u548c\u5176\u4ed6\u4e91\u670d\u52a1\u7684\u8fd9\u79cd\u5b9a\u4ef7\u6a21\u5f0f\u3002\n\u4e5f\u8bb8MyData\u63d0\u4f9b\u5546\u53ef\u4ee5\u76f4\u63a5\u5411\u7528\u6237\u6536\u53d6\u4e00\u5c0f\u7b14\u8d39\u7528\uff0c\u7136\u540e\u901a\u8fc7\u5411\u5e94\u7528\u7a0b\u5e8f\u6536\u53d6\u8f83\u4f4e\u7684\u8d39\u7528\u800c\u900d\u9065\u6cd5\u5916\u3002\u7136\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u8282\u7701\u7684\u8d39\u7528\u4f20\u9012\u7ed9\u7528\u6237\u3002\u5982\u679c\u7528\u6237\u901a\u8fc7MyData\u4f7f\u7528\u5927\u91cf\u4ed8\u8d39\u670d\u52a1\uff0c\u8fd9\u751a\u81f3\u53ef\u80fd\u4f1a\u8ba9\u4ed6\u4eec\u53d8\u5f97\u66f4\u4fbf\u5b9c\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5c06\u5411MyData\u652f\u4ed8\u57fa\u4e8e\u4f7f\u7528\u60c5\u51b5\u7684\u8ba2\u9605\u8d39\uff0c\u5bf9\u4e8e\u4ed6\u4eec\u8fde\u63a5\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u8d39\u7528\u90fd\u4f1a\u589e\u52a0\u3002\u7136\u540e\uff0cmydata\u4f1a\u5c06\u90e8\u5206\u8d44\u91d1\u8f6c\u53d1\u7ed9\u7528\u6237\u8fde\u63a5\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4f8b\u5982\uff0cMyData\u7684\u57fa\u672c\u8d39\u7387\u53ef\u80fd\u662f\u6bcf\u67085\u7f8e\u5143\u3002\u7136\u540e\uff0c\u6ce8\u518cCoolFitnessTracking\u5c06\u628aMyData\u7684\u8d39\u7528\u63d0\u9ad8\u5230\u6bcf\u670810\u7f8e\u5143\uff0c\u4f46\u5176\u4e2d\u7ea65\u7f8e\u5143\u5c06\u6d41\u5411CoolFitnessTracking\u3002\n\u9700\u8981\u6fc0\u52b1\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528MyData\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4fdd\u6301\u4e00\u4e2a\u96c6\u4e2d\u5316\u7684\u6570\u636e\u5e93\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u8425\u5229\u6027\u516c\u53f8\u6765\u8bf4\uff0c\u91c7\u7528\u8fd9\u9879\u6280\u672f\u9700\u8981\u5728\u8d22\u52a1\u4e0a\u6709\u610f\u4e49\u3002\n\u6211\u4eec\u4e5f\u8bb8\u53ef\u4ee5\u5b89\u6392\u5b83\uff0c\u8ba9MyData\u63d0\u4f9b\u5546\u8d1f\u8d23\u5927\u591a\u6570\u5b89\u5168\u548cGDPR\u7c7b\u578b\u5408\u89c4\u6027\uff0c\u8fd9\u662f\u5c0f\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u559c\u6b22\u7684\u3002\n\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u8fbe\u5230\u56f4\u7ed5\u5171\u4eab\u6570\u636e\u5e93\u6784\u5efa\u7684\u5e94\u7528\u751f\u6001\u7cfb\u7edf\u7684\u4e34\u754c\u8d28\u91cf\uff0c\u90a3\u4e48\u5e94\u7528\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u7684\u597d\u5904\u5c06\u6709\u671b\u663e\u73b0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5176\u4ed6\u4eba\u80fd\u591f\u6784\u5efa\u4e3aCoolFitnessTracking\u670d\u52a1\u6dfb\u52a0\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5c06\u4f7fCoolFitnessTracking\u5bf9\u5ba2\u6237\u66f4\u6709\u4ef7\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u81ea\u52a8\u63d2\u4ef6/\u9644\u52a0\u751f\u6001\u7cfb\u7edf\u8fdb\u884c\u8425\u9500-\u4e0d\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\u3002\n\u8fd9\u4e2a\u8bdd\u9898\u6700\u8fd1\u4f3c\u4e4e\u5f88\u6d41\u884c\u3002\u8fd9\u7bc7\u5e16\u5b50\u662f\u6211\u8bd5\u56fe\u63d0\u51fa\u4e00\u79cd\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u53d1\u660e\u4efb\u4f55\u592a\u6fc0\u8fdb\u7684\u65b0\u4e1c\u897f\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u9886\u57df\u6700\u5927\u7684\u95ee\u9898\u4f3c\u4e4e\u662f\u63a8\u52a8\u4e1a\u52a1\u91c7\u7528\uff0c\u800c\u4e0d\u662f\u53d1\u660e\u6280\u672f\u89e3\u51b3\u65b9\u6848\u3002", "note_en": "I kind of threw together this post to get an idea out of my head. I don&#39;t think I have the connections or wherewithal to drivereal world adoption of this idea, but I think that in the hands of someone more capable, it couldlead to something pretty cool. So here it is.\n  I have almost no control over the data that apps store for me. I&#39;m talking about the data that apps explicitly advertise themselves for: like the workout data I record in a fitness app, or the todo items I put in a todo app, or the tweets I put on twitter.\n The only way I can access this data is via the specific app that stores it, and I can only do things that the product designers had the forethought to include. Generally speaking, I can&#39;t do anything with my data that the app doesn&#39;t explicitly allow, and apps usually don&#39;t expicitly allow much.\n Why don&#39;t apps allow much? Because every feature requires a developer to implement it, and developer time is limited and expensive. Implementing some random visualization that I want just isn&#39;t economical if only I (or some small number of people) want it.\n I want to be able to query my data however I want, and I want to correlate data across apps. For instance, I want to be able to answer &#34;How do my workout and eating habits (each tracked in their own apps) affect my sleep (tracked in a 3rd separate app)?&#34; I couldn&#39;t answer that question quantitatively today, even if I had detailed data on all of those things, because the data would be split between different apps that don&#39;t talk to each other.\n Not only would I like to be able to correlate data between apps, but I&#39;d like some  other app to do it for me. Why can&#39;t I give a graphing website access to my fitness data, eating data, and sleep data? Because the apps that hold that data don&#39;t expose APIs. They don&#39;t have the time and money to spend on that. In other words, I want to be able to sign up for apps that  combine and  extend the functionality of apps I already use, to a much greater extent than I can today.\n   Export is a feature that app developers have to spend time on, and most won&#39;t.\n But let&#39;s say that every app in the world had an export function. Then I&#39;d be able to download all of my data, but it&#39;d likely all be in different formats. Doing anything productive would require some data wrangling. And if I want the latest updates to all my data, I have to go export everything again and data wrangle again.\n What if I want to share my exported data with another app? I guess I&#39;d have to export it, and then upload it to the third-party app, but that&#39;s a step that doesn&#39;t have to exist. And again, if I want the third-party to have the latest data, I need to export and upload regularly.\n  One notch better than data exporting is a proper API. APIs are great. They allow programmatic access to an app&#39;s data, and that sounds like exactly what I want right? Well, mostly, yes, but not entirely.\n In most cases, APIs are just a layer to access the data inside of apps: a layer that takes time and money to build, and doesn&#39;t add value over direct access to the data. Because of this, APIs don&#39;t exist for everything that I might want. Furthermore, APIs have the problem I mentioned before, which is that the app developers are gatekeepers of what you can do: If I want to analyze the duration of all my workouts, but the API doesn&#39;t return that piece of the data, then I&#39;m SOL.\n  Tim Berners Lee&#39;s  Solid attempts to solve the problem I&#39;m trying to describe in a very similar way to what I&#39;m about to propose. Solid offers a home for users&#39; data and acts as an authentication method as well. Soild pods can be hosted by different providers, or self hosted.\n Where Solid falls short is its lack of pragmatism. Its technology is too different from what developers already know, and so will have a problem in gaining developer adoption, which is a prerequisite for gaining traction among anyone else. The fact that developers need to  &#34;get familiar with Linked Data vocabularies&#34; before they can even create an app means that Solid is too expensive to adopt for 99% of profit-driven apps. Why learn a new method of storing data, when you already know how to use postgres?\n So while I am in alignment with the goals and intent of the Solid project, I personally think we need a solution that &#34;just works&#34; for all the developers and companies out there who don&#39;t have time to learn a whole new technology.\n  The author of  https://beepb00p.xyz has talked about the problem I&#39;m describing at length and has even made an  interesting tool to help address it. The tool makes programming with your app data much easier, and I think its a great pragmatic step in the right direction, but it still relies on the existence of APIs and export functionality of apps (to my knowledge).\n I think  Urbit tries to address this problem too, but I&#39;m not too familiar with the project. From what I can tell though, they seem to want to reinvent  every single wheel they come across as they approach the problem. In other words, if Solid doesn&#39;t seem quite pragmatic enough, Urbit doesn&#39;t seem to even want to be pragmatic.\n This isn&#39;t a new problem, so there are probably more projects out there that try to address this in some way that I&#39;m not aware of.\n  How can we make data ownership and sharing between apps the default? In a way that is easy for developers to adopt and for users to understand?\n  I think the best way to describe this idea is through a couple of user scenarios. There is still plenty of detail to be worked out, but hopefully this will convey the essence of the thing.\n I&#39;ll refer to a service I&#39;m going to call &#34;MyData&#34;. You can think of it as a combo authentication provider and &#34;database provider&#34;. By &#34;database provider&#34;, I mean that it will encapsulate any of a number of popular database technologies. It could provide postgres, mysql, mongo, cassandra, etc. Other apps will store user data in these databases.\n And while I will refer to &#34;MyData&#34; as  a service, really there could be many providers of this service.\n I also wanted to name my fictional user, so I duckduckgoed &#34;fake name&#34; and picked the first one that came up.\n  Ronald clicks the button and is shown an OAuth screen from their MyData account. The requested permissions will include something along the lines of:\n Now, Ronald has a new postgres database hosted by MyData that he has complete access to. Ronald can write a SQL query against it, or export it, or authorize another app to access it. The second scenario describes this.\n  Ronald clicks the button and is shown an OAuth screen from their MyData account. The requested permissions will include something along the lines of:\n   MyData provides SweetFitnessGraphing with a postgres user and the url so that it can read the CoolFitnessTracking data\n  In the above scenarios, MyData encapsulates all of Ronald&#39;s databases and authorizes access to them. This effectively removes the need for APIs, because users and apps will get direct access to other apps&#39; databases. The result of this is that the database schema  is the &#34;API&#34;. This does put responsibility on developers of apps to ensure they keep up with schemas of other apps that their code accesses.\n Now, using a different database connection per user is definitely not a trivial suggestion. Not only that, but apps that require storing data that the user  shouldn&#39;t access will also still need a centralized database for that data. I still think this is more pragmatic than something like Solid, because it&#39;s &#34;just a software engineering problem&#34; using technologies everyone knows, as opposed to a &#34;learning, lack of community, and young technology problem&#34;.\n  Unfortunately, this isn&#39;t a purely technical problem, so we need to think about a lot more than just the technology itself. Here are a smattering of things to consider:\n  Solid is doing this totally right. MyData needs to be implementing a standard and have competitors that also implement the standard. Otherwise, if there was only one provider, we&#39;d have just consolidated power over all our data with one entity.\n This will also give users choice, and prevent this from turning into another walled garden. The best way to enable that is to make the protocol by which apps interact with MyData an open standard. Then create an open source reference implementation that is easy to get running.\n  This is pretty straightforward. To bootstrap the ecosystem of &#34;databases as APIs&#34;, we need a reason for people to create accounts and start using the technology. This needs to happen by providing value that can only be provided via this system, which is why it can&#39;t just be a singular killer app, but a killer combination of apps. The killer combination of apps would interoperate via the MyData standard, and together provide value in a way that is hard to match via a traditional software architecture.\n  Not sure what the best path is here. Here are a couple options on money flow:\n  Its both amazing and flabbergasting that on the internet, we don&#39;t expect users to pay (directly) for many services. We need to keep this in mind when designing the monetization scheme around &#34;MyData&#34;. We live in a capitalist world, so the hosting providers of these databases (the &#34;MyDatas&#34;) will need to make money somehow.\n But if we can&#39;t charge the user, who do we charge? The apps that connect to the MyData service will have to pay a usage based amount of money, based on how much data they&#39;re reading/writing from it. We&#39;re all used to this kind of pricing model from AWS and other cloud services.\n  Perhaps a MyData provider could directly charge users a small fee and then get away with charging the apps less. Apps could then pass savings on to the user. This might even work out cheaper for a user if they use a lot of paid services via MyData.\n  In this scenario, the user would pay MyData a usage based subscription fee, which would increase for each app that they connect. MyData then forwards some of the money to each app that the user connects.\n For example, MyData might have a base rate of $5 per month. Then, signing up for CoolFitnessTracking would increase the MyData fee to $10 a month, but about 5 of those dollars would go to CoolFitnessTracking.\n  Apps need to be incentivized to use MyData over just keeping a centralized database. In other words, adopting this technology needs to make financial sense for for-profit companies.\n We might be able to arrange it so that MyData providers take care of most security and GDPR type compliance, which small apps might appreciate.\n More broadly, if we can get to a critical mass of an app ecosystem built around shared databases, the benefits of interoperability between apps will hopefully be seen. For example, if others are able to build apps that add functionality to CoolFitnessTracking service, it makes CoolFitnessTracking more valuable to the customer. We can market this as an &#34;automatic plugin/add-on ecosystem&#34; for apps - no extra work required.\n  This topic seems to be popular as of late. This post was my attempt at presenting a way to address the problem without inventing anything  too radically new. However, the largest problems in this space seem to be in driving business adoption, not in inventing technology solutions.", "posttime": "2020-05-25 01:46:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,database,\u6570\u636e\u5e93,app,\u62e5\u6709", "title": "\u6211\u60f3\u62e5\u6709\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u6570\u636e\u5e93", "title_en": "I want to own the database that my apps use", "transed": 1, "url": "https://orndorffgrant.com/own-your-data-idea/", "via": "", "real_tags": ["\u7a0b\u5e8f", "database", "\u6570\u636e\u5e93", "app", "\u62e5\u6709"]}, {"category": "", "categoryclass": "", "imagename": "b2b8bd742166c0c6add49ed2cd4fe30c.jpg", "infoid": 1003534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8981\u5728\u6211\u7684\u65b0\u5b66\u9662\u7ed9\u4e00\u4f4d\u6559\u6388\u505a\u5ba2\u5ea7\u8bb2\u5ea7\u3002\u4ed6\u6559\u6388\u8fdb\u5316\u8bba\u7684\u9ad8\u7ea7\u672c\u79d1\u751f\u8bfe\u7a0b\u3002\u8fd9\u662f\u674e\u535a\u58eb\u5728\u52a8\u7269\u7cfb\u9762\u524d\u505a\u7684\u7b2c\u4e00\u4ef6\u975e\u5e38\u516c\u5f00\u7684\u4e8b\u60c5\u3002\u6211\u5f88\u7d27\u5f20(\u6211\u5728\u505a\u4efb\u4f55\u5f62\u5f0f\u7684\u6f14\u8bb2\u4e4b\u524d\u603b\u662f\u5f88\u7d27\u5f20)\u3002\u6211\u8b66\u544a\u6559\u6388\uff0c\u6211\u4e5f\u662f\u4e00\u4e2a\u5e74\u8f7b\u4eba\uff0c\u6211\u60f3\u505a\u4e00\u573a\u563b\u54c8\u8fdb\u5316\u8bb2\u5ea7\uff0c\u5e76\u7ed9\u4e86\u6211\u4e4b\u524d\u7684\u535a\u5ba2All About Hip Hop&Amp\uff1bEvolution--SouthernPlayalistic EvolutionMusic\u7684\u94fe\u63a5--\u4ed6\u88ab\u4e8b\u5148\u8b66\u544a\u4e86\u3002\u7531\u4e8e\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5728\u76f4\u622a\u4e86\u5f53\u7684\u8fdb\u5316\u8bfe\u4e0a\u8bb2\u6388\u6211\u7684\u8bb2\u8bfe\u98ce\u683c\uff0c\u6211\u60f3\u786e\u5b9a\u6211\u7684\u8bb2\u8bfe\u662f\u5426\u5207\u5408\u5b9e\u9645\u3002\u6211\u51b3\u5b9a\u628a\u91cd\u70b9\u653e\u5728\u6f84\u6e05\u8fdb\u5316\u8bba\u4e2d\u7ecf\u5e38\u6df7\u6dc6\u7684\u6982\u5ff5\u4e0a\u3002\u5728\u4e0e\u4ed6\u8fdb\u884c\u4e86\u7b80\u77ed\u7684\u8ba8\u8bba\u540e\uff0c\u6211\u51b3\u5b9a\u4e0e\u4ed6\u6700\u8fd1\u8bb2\u6388\u7684\u6982\u5ff5\u8054\u7cfb\u5728\u4e00\u8d77\uff1a\u81ea\u7136\u9009\u62e9\u3001\u9002\u5e94\u548c\u4eba\u53e3\u9057\u4f20\u5b66\u3002\n\u6211\u5728\u201c\u563b\u54c8\u8fdb\u5316\u6863\u6848\uff1a\u611a\u8822\u7684\u670b\u514b\u5e16\u5b50\u5bf9\u81ea\u7136\u9009\u62e9\u7684\u5feb\u901f\u800c\u80ae\u810f\u7684\u89e3\u91ca\u201d(Hip Hop Evolution Files\uff1aQuick&amp\uff1bDirty\u89e3\u91caof Natural Selection)\u4e2d\uff0c\u4ee5\u201c\u9002\u8005\u751f\u5b58\u201d\u8fd9\u4e00\u77ed\u8bed\u4f5c\u4e3a\u5f00\u573a\u767d\uff0c\u5e76\u4ee5\u8bfe\u5802\u8bb2\u7a3f\u4f5c\u4e3a\u5f00\u573a\u767d\u3002\u8003\u8651\u5230\u5361\u4f26\u00b7\u8a79\u59c6\u65af\u7684\u6279\u8bc4\uff0c\u6211\u5bf9\u62c9\u9a6c\u514b\u8fdb\u5316\u8bba\u548c\u5c06\u4e2a\u4eba\u52aa\u529b\u6df7\u4e3a\u4e00\u8c08\u6709\u52a9\u4e8e\u9002\u5e94\u7684\u8c2c\u8bba\u8fdb\u884c\u4e86\u5168\u9762\u7684\u89e3\u91ca\u3002\n\u62c9\u9a6c\u514b\u5f0f\u7684\u9009\u62e9\u5173\u6ce8\u7684\u662f\u4e2a\u4f53\uff0c\u800c\u4e2a\u4f53\u80fd\u591f\u5851\u9020\u51fa\u6240\u8ba8\u8bba\u7684\u7279\u5f81\u3002\u4e0e\u62c9\u9a6c\u514b\u9009\u62e9\u4e0d\u540c\u7684\u662f\uff0c\u81ea\u7136\u9009\u62e9\u7740\u773c\u4e8e\u7fa4\u4f53\uff0c\u4f5c\u7528\u4e8e\u6027\u72b6\u7684\u53d8\u5f02\u3002\u6211\u5411\u5b66\u751f\u5f3a\u8c03\u7684\u662f\u8868\u578b(P)\u3002\u5c3d\u7ba1\u8bb8\u591a\u79d1\u5b66\u5bb6\u5bf9\u6027\u72b6\u7684\u57fa\u56e0\u8f93\u5165\u7ed9\u4e88\u4e86\u6781\u5927\u7684\u5173\u6ce8\uff0c\u4f46\u57fa\u56e0(G)\u53ea\u662f\u6545\u4e8b\u7684\u4e00\u534a--\u5982\u679c\u6709\u90a3\u4e48\u591a\u7684\u8bdd\u3002I&#m\u5173\u4e8e\u56e2\u961f\u73af\u5883\u5f71\u54cd(E)\u3002\n\u4f46\u6beb\u65e0\u7591\u95ee\uff0c\u4e2a\u4eba\u548c\u4ed6\u4eec\u7684\u52aa\u529b\u4ecd\u7136\u5f88\u91cd\u8981\u3002\u6bd5\u7adf\uff0c\u5982\u679c\u4e00\u4e2a\u4e2a\u4f53\u5728\u79bb\u5f00\u540e\u4ee3\u4e4b\u524d\u5c31\u53bb\u4e16\u4e86--\u4e0d\u7ba1\u662f\u4ec0\u4e48\u539f\u56e0--\u90a3\u4e48\u5b83\u5c31\u4f1a\u5f71\u54cd\u81ea\u7136\u9009\u62e9\u7684\u96c6\u4f53\u57fa\u56e0/\u8868\u578b\u5e93\u4e2d\u7684\u54ea\u4e9b\u57fa\u56e0/\u8868\u578b\u3002\u4f60\u61c2\u7684?\u3002\u8fd9\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u8fdb\u5316\u751f\u7269\u5b66\u7684\u7ed5\u53e3\u4ee4\uff1a\u9057\u4f20\u6027\u548c\u9057\u4f20\u6027\uff0c\u4ee5\u53ca\u533a\u5206\u53ef\u9057\u4f20\u7279\u5f81\u548c\u9057\u4f20\u7279\u5f81\u3002\n\u9057\u4f20\u662f\u6307\u6027\u72b6\u5728\u5bb6\u65cf\u4e2d\u9057\u4f20\u7684\u53ef\u80fd\u6027\u6216\u6982\u7387\u3002\u7136\u800c\uff0c\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\uff0c\u7531\u4e8e\u9057\u4f20(G)\u6216\u73af\u5883(E)\uff0c\u4e00\u4e2a\u6027\u72b6\u53ef\u80fd\u662f\u53ef\u9057\u4f20\u7684-\u6574\u4e2a\u5148\u5929\u4e0e\u540e\u5929\u7684\u4e89\u8bba\u3002\u73af\u5883\u6216\u517b\u80b2\u6548\u679c\u5305\u62ec\u4e60\u60ef\u3001\u884c\u4e3a\u4ee5\u53ca\u8eab\u4f53/\u60c5\u611f/\u5fc3\u7406\u4f53\u9a8c\u3002\u4eb2\u621a\u7ecf\u5e38\u8868\u73b0\u51fa\u76f8\u4f3c\u7684\u4e60\u60ef\u548c\u884c\u4e3a\uff0c\u6211\u4eec\u4e5f\u4e0e\u4ed6\u4eec\u5206\u4eab\u7ecf\u9a8c\u3002\n\u4ece\u57fa\u56e0\u4e0a\u8bb2\uff0c\u6211\u4eec\u4e0e\u7236\u6bcd\u5404\u6709\u4e00\u534a\u7684\u57fa\u56e0\uff0c\u4e0e\u7956\u7236\u6bcd\u5404\u6709\u56db\u5206\u4e4b\u4e00\u76f8\u540c\u7684\u57fa\u56e0\u3002\u8fd9\u4e9b\u57fa\u56e0\u662f\u6211\u4eec\u76f4\u63a5\u4ece\u7236\u6bcd/\u7956\u7236\u6bcd\u90a3\u91cc\u83b7\u5f97\u7684\uff0c\u6211\u4eec\u4ece\u4ed6\u4eec\u90a3\u91cc\u7ee7\u627f\u6765\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u62e5\u6709\u7684\u7531\u8fd9\u4e9b\u57fa\u56e0\u51b3\u5b9a\u7684\u7279\u5f81\u4e00\u6837\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u5171\u540c\u7684\u4e60\u60ef\u3001\u884c\u4e3a\u548c\u7ecf\u5386\u4e0d\u662f\u9057\u4f20\u7684\uff0c\u4f46\u4ecd\u7136\u662f\u53ef\u9057\u4f20\u7684\u7279\u5f81-\u6211\u4eec\u5f88\u53ef\u80fd\u4e0e\u4eb2\u621a\u5206\u4eab\u8fd9\u4e9b\u7279\u5f81\u3002\u9057\u4f20\u6027\u662f\u6307\u83b7\u5f97\u67d0\u7269\u7684\u53ef\u80fd\u6027(\u2026\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u5b83\u3002\u8fd9\u4e0d\u662f\u81ea\u52a8\u9057\u4f20--\u5c31\u50cf\u57fa\u56e0\u9057\u4f20\u4e00\u6837\uff0c\u4f46\u673a\u4f1a\u770b\u8d77\u6765\u5f88\u5927\u3002\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\uff0c\u9057\u4f20\u7684\u7279\u5f81\u662f\u76f4\u63a5\u4ece\u7236\u6bcd\u4f20\u7ed9\u5b69\u5b50\u7684\uff0c\u800c\u53ef\u9057\u4f20\u7684\u7279\u5f81\u4e0d\u4e00\u5b9a\u662f\u9057\u4f20\u7684\u3002\n\u4f5c\u4e3a\u603b\u7ed3\uff0c\u6211\u8ba9\u5b66\u751f\u4eec\u505a\u4e00\u4e2a\u5feb\u901f\u7684\u5c0f\u6d4b\u9a8c\uff0c\u770b\u770b\u4ed6\u4eec\u662f\u5426\u80fd\u533a\u5206\u9057\u4f20\u7279\u5f81\u548c\u53ef\u9057\u4f20\u7279\u5f81\u3002\u8ba9\u6211\u4eec\u770b\u770b\u4f60\u505a\u5f97\u600e\u4e48\u6837\u3002\u64ad\u653e\u7b2c\u4e00\u8282\u3002", "note_en": "I got guest lecture for a professor at my new institution. He teaches a senior level undergraduate course in Evolution. It was the very first very public thing that Dr. Lee did before the Zoology Department. I was nervous (I&#39;m always nervous before I give any type of presentation). I warned the prof, also a young guy that I&#39;d like deliver a Hip Hop Evolution lecture and gave a link to my previous blog, all about Hip Hop &amp; Evolution --  SouthernPlayalisticEvolutionMusic - he was forewarned. Since it was the first time I had delivered my &#39;style&#39; of lecture to a straight-up Evolution class, I wanted to be sure that my lecture was relevant. I decided to focus on clarifying oft-confused concepts in Evolution. After a brief discussion with him, I decided to tie into the concepts he had recently lectured: Natural Selection, Adaptation, and Population Genetics.\n I kicked things off with a discussion of the phrase Survival of the Fittest and lead off with lecture notes in my  Hip Hop Evolution Files: Quick &amp; Dirty explanation of Natural Selection by Daft Punk post. Taking  Karen James&#39; critiques into consideration, I went into a full-on explanation of  Lamarckian Evolution and the fallacy of conflating individual effort as contributing to adaptation.\n Lamarckian selection focuses on the individual and the individual can &#39;shape&#39; the traits in question. Unlike Larmarkian selection, natural selection focuses on the population and acts on variation of the traits. Which I emphasized to students are phenotypes (P). Despite the heavy attention many scientists pay to genetic inputs of traits, Genes (G) are only half of the story -- if that much. I&#39;m on team Environmental Effects (E).\n But no doubt, individuals and their efforts still matter. After all, if an individual dies before it leave offspring - for whatever reason - then it affects what is in the collective gene/phenotype pool for natural selection to work with. You understand? Which brings us to another evolutionary biology tongue-twister:  Heritability and  Heredity and distinguishing  Heritable Traits and  Inherited Traits.\n   Heredity is with the likelihood or probability of traits running in families. However, it is important to keep in mind that a trait can be  heritable due to genetics (G) or environment (E) \u2013 that whole nature vs. nurture argument. Environmental or nurturing effects include habits, behaviors, as well as physical/emotional/psychological experiences. Relatives often demonstrate similar habits and behavior and we share experiences with them as well.\n Genetically we share half of our genes with each of our parents and a quarter of the same genes as each of our grandparents. These genes we get directly from our parents/grandparents, we  inherit from them, as are the traits we have that are determined by these genes.\n However, our shared habits, behaviors and experiences are not genetic, but are still   heritable traits \u2013  there are is a great likelihood we share these traits with our relatives.   Heritability is the likelihood of getting something\u2026in other words, you might get it. It\u2019s not automatic \u2013 like genetic inheritance, but the chances look good. The important thing to keep in mind is that   inherited traits are directly passed down from parents to children, whereas heritable traits are not necessarily genetic.\n To wrap things up, I had students take a quick little quiz to see if they could distinguish between inherited traits and heritable traits. Let&#39;s see how you do. Play the first verse.", "posttime": "2020-05-25 01:05:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9057\u4f20\u6027\u72b6,traits,\u9057\u4f20", "title": "\u53ef\u9057\u4f20\u6027\u72b6\u4e0e\u9057\u4f20\u6027\u72b6\u7684\u6bd4\u8f83", "title_en": "Heritable Traits vs. Inherited Traits", "transed": 1, "url": "https://blogs.scientificamerican.com/urban-scientist/hip-hop-evolution-files-heritable-traits-vs-inherited-traits/", "via": "", "real_tags": ["\u9057\u4f20\u6027\u72b6", "traits", "\u9057\u4f20"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5f20\u892a\u8272\u7684\u51e0\u5341\u5e74\u524d\u7684\u9ed1\u767d\u7167\u7247\u662f\u7ea6\u7ff0\u5c3c\u00b7\u827e\u62c9\u5f00\u59cb\u8ffd\u8e2a\u4e00\u53ea\u6d77\u602a\u65f6\u552f\u4e00\u7684\u7ebf\u7d22\u3002\n\u8fd9\u4f4d\u79d8\u9c81\u8003\u53e4\u5b66\u5bb6\u57282014\u5e74\u5fb7\u56fd\u5173\u4e8e\u7eb3\u65af\u5361\u7ebf\u7684\u5c55\u89c8\u4e0a\u53d1\u73b0\u4e86\u8fd9\u5f20\u7167\u7247\uff0c\u7eb3\u65af\u5361\u7ebf\u662f\u5de8\u5927\u800c\u9519\u7efc\u590d\u6742\u7684\u6c99\u6f20\u56fe\u50cf\uff0c\u6bcf\u5e74\u5438\u5f15\u7740\u6570\u4ee5\u4e07\u8ba1\u7684\u6e38\u5ba2\u3002\n\u8fd9\u5f20\u62cd\u6444\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u521d\u7684\u7167\u7247\u663e\u793a\uff0c\u4e00\u4e2a\u795e\u79d8\u7684\u864e\u9cb8\u795e\u50cf\u96d5\u523b\u5728\u4e00\u4e2a\u5e72\u65f1\u7684\u5c71\u5761\u4e0a\u3002\u8fd9\u4e2a\u4eba\u5f71\u548c\u4ed6\u8ba4\u8bc6\u7684\u5176\u4ed6\u4eba\u6709\u4e9b\u76f8\u4f3c\uff0c\u4f46\u4ed6\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u8fd9\u4e2a\u4eba\u3002\n\u827e\u62c9\u73b0\u5728\u662f\u79d8\u9c81\u8d1f\u8d23\u8fd9\u6761\u7ebf\u8def\u7684\u9996\u5e2d\u8003\u53e4\u5b66\u5bb6\uff0c\u4ed6\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u4ed4\u7ec6\u7814\u7a76\u6863\u6848\uff0c\u7136\u540e\u5e26\u7740\u4e00\u67b6\u65e0\u4eba\u673a\u548c\u6bd5\u751f\u7684\u5f53\u5730\u91ce\u5916\u7ecf\u9a8c\u56de\u5230\u79d8\u9c81\u5bfb\u627e\u5b83\u3002\n\u7ecf\u8fc7\u51e0\u6b21\u5931\u8d25\u7684\u5f00\u59cb\uff0c\u53ea\u7528\u4e86\u4e24\u5468\u7684\u65f6\u95f4\u5c31\u627e\u5230\u4e86\u8fd9\u5f2025x65\u7c73\u7684\u56fe\u50cf\uff0c\u5b83\u4e00\u76f4\u9690\u85cf\u5728\u79d8\u9c81\u5357\u90e8\u4e00\u7247\u5e7f\u88a4\u7684\u6c99\u6f20\u4e2d\uff0c\u4f4d\u4e8e\u7eb3\u65af\u5361\u4ee5\u5317\u7ea630\u82f1\u91cc\u7684\u5e15\u5c14\u5e15\u5c71\u533a\u3002\n\u96d5\u523b\u5728\u5c71\u5761\u4e0a\u7684\u8bbe\u8ba1\u63cf\u7ed8\u4e86\u4e00\u53ea\u53ef\u6015\u7684\u795e\u8bdd\u4e2d\u7684\u91ce\u517d\uff0c\u90e8\u5206\u662f\u864e\u9cb8\uff0c\u4f46\u4eba\u7c7b\u7684\u624b\u81c2\u4e3e\u7740\u4e00\u4e2a\u5956\u676f\u5934\uff0c\u5728\u5b83\u7684\u8eab\u4f53\u91cc\u8fd8\u6709\u51e0\u4e2a\u5934\u3002\n\u5bf9\u65e0\u4eba\u673a\u7684\u65b0\u7814\u7a76\u5e2e\u52a9\u53d1\u73b0\u4e86\u6570\u767e\u4e2a\u8fd9\u6837\u7684\u4eba\u7269\uff0c\u8fd9\u4e9b\u4eba\u7269\u96d5\u523b\u5728\u7eb3\u65af\u5361\u7ebf\u9644\u8fd1\u7684\u6c99\u6f20\u4e2d\uff0c\u4f46\u6bd4\u5b83\u4eec\u65e9\u4e861500\u5e74\u4e4b\u4e45\u3002\u9886\u5bfc\u8fd9\u9879\u5de5\u4f5c\u7684\u8003\u53e4\u5b66\u5bb6\u73b0\u5728\u8ba4\u4e3a\uff0c\u62df\u4eba\u5316\u7684\u864e\u9cb8\u5f62\u8c61\u586b\u8865\u4e86\u6570\u767e\u4e2a\u66f4\u53e4\u8001\u7684\u5730\u5f62\u6587\u5b57\u548c\u7eb3\u65af\u5361\u6587\u5316\u7684\u6c99\u6f20\u8680\u523b\u4e4b\u95f4\u7f3a\u5931\u7684\u8054\u7cfb\u3002\n\u5728\u516c\u5143\u524d500\u5e74\u5230\u516c\u5143200\u5e74\u4e4b\u95f4\uff0c\u5e15\u62c9\u5361\u65af\u548c\u6258\u5e15\u62c9\u6587\u5316\u5728\u9644\u8fd1\u7684\u5e15\u5c14\u5e15\u5c71\u5761\u4e0a\u8680\u523b\u4e86\u8f83\u5c0f\u7684\u5f62\u72b6\u3002\n\u827e\u62c9\u8bf4\uff1a\u201c\u8fd9\u53ea\u864e\u9cb8\u662f\u5728\u4e00\u4e2a\u793e\u4f1a\u5411\u53e6\u4e00\u4e2a\u793e\u4f1a\u8f6c\u53d8\u7684\u65f6\u5019\uff0c\u5728\u4e30\u9976\u548c\u4eba\u53e3\u589e\u957f\u7684\u65f6\u5019\u5236\u9020\u7684\u3002\u201d\n\u827e\u62c9\u8ba4\u4e3a\uff0c\u6258\u5e15\u62c9\u4eba\u5728\u4e00\u4e2a\u52a8\u6001\u7684\u8fc7\u6e21\u65f6\u671f\u5236\u4f5c\u4e86\u864e\u9cb8\u7684\u5f62\u8c61\u3002\u827e\u62c9\u8bf4\uff1a\u201c\u7eb3\u65af\u5361\u7ebf\u662f\u4ece\u8fd9\u4e9b\u53e4\u8001\u7684\u5730\u5f62\u6587\u5b57\u4e2d\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u9a8c\u548c\u6280\u672f\u6539\u8fdb\u8fc7\u7a0b\u7684\u5dc5\u5cf0\u4e4b\u4f5c\u3002\u201d\n\u5b83\u4eec\u4e2d\u7684\u4e00\u5343\u591a\u4e2a-\u5de8\u5927\u7684\u51e0\u4f55\u56fe\u6848\uff0c\u4ee5\u53ca\u7334\u5b50\u3001\u8702\u9e1f\u548c\u9cb8\u9c7c\u7b49\u52a8\u7269\u5f62\u8c61-\u6a2a\u8de8\u7eb3\u65af\u5361\u9ad8\u539f400\u591a\u5e73\u65b9\u516c\u91cc\u3002\u5b83\u4eec\u662f\u901a\u8fc7\u79fb\u9664\u9876\u5c42\u7684\u9e45\u5375\u77f3\u6765\u9732\u51fa\u4e0b\u9762\u989c\u8272\u8f83\u6d45\u7684\u6750\u6599\u800c\u4ea7\u751f\u7684\u3002\n\u7136\u800c\uff0c\u4e0e\u827e\u62c9\u4e00\u8d77\u53c2\u4e0e\u7eb3\u65af\u5361-\u5e15\u5c14\u5e15\u9879\u76ee\u7684\u79d8\u9c81\u8003\u53e4\u5b66\u5bb6\u8def\u6613\u65af\u00b7\u8a79\u59c6\u00b7\u5361\u65af\u8482\u7565(Luis Jaime Castillo)\u8868\u793a\uff0c\u65b0\u53d1\u73b0\u7684\u5730\u7406\u7b26\u53f7\u4f4d\u4e8e\u5c71\u5761\u4e0a\uff0c\u8fd9\u6807\u5fd7\u7740\u4e00\u4e2a\u5173\u952e\u7684\u4e0d\u540c\u4e4b\u5904\u3002\n\u4ed6\u8bf4\uff1a\u201c\u628a\u8fd9\u4e9b\u5730\u5f62\u6587\u5b57\u653e\u5728\u659c\u5761\u4e0a\u610f\u5473\u7740\uff0c\u4e0e\u7eb3\u65af\u5361\u7ebf\u5f62\u6210\u5bf9\u6bd4\u7684\u662f\uff0c\u5982\u679c\u4f60\u7ad9\u5728\u751f\u6d3b\u548c\u519c\u4e1a\u6b63\u5728\u53d1\u751f\u7684\u5c71\u8c37\u91cc\uff0c\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u3002\u201d\n\u79d8\u9c81\u524d\u6587\u5316\u90e8\u957f\u5361\u65af\u8482\u7565\u89e3\u91ca\u8bf4\uff1a\u201c\u5982\u679c\u7eb3\u65af\u5361\u7ebf\u662f\u4eba\u7c7b\u4e3a\u795e\u5236\u4f5c\u7684\uff0c\u90a3\u4e48\u8fd9\u4e9b\u96d5\u50cf\u5c31\u662f\u4eba\u7c7b\u4e3a\u4eba\u7c7b\u5236\u4f5c\u7684\u3002\u201d\u201c\u5b83\u4eec\u663e\u7136\u662f\u53ef\u8fa8\u8ba4\u7684\u4eba\u7684\u4ee3\u8868\u3002\u4ed6\u4eec\u5728\u5212\u5b9a\u9886\u571f\u3002\u201c\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7eb3\u65af\u5361\u66f4\u5357\u8fb9\u7684\u66f4\u5927\u3001\u66f4\u590d\u6742\u7684\u5730\u7406\u7b26\u53f7\u4e0d\u80fd\u5b8c\u5168\u4ece\u5730\u9762\u4e0a\u770b\u5230\u3002\n\u6839\u636eIsla\u7684\u8bf4\u6cd5\uff0c\u6700\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u7eb3\u65af\u5361\u7ebf\u662f\u201c\u4e3a\u4e86\u5411\u8fd9\u7247\u6c99\u6f20\u5730\u533a\u7684\u795e\u7948\u6c42\u6c34\u548c\u80a5\u6c83\u800c\u5236\u4f5c\u7684\u201d\u3002\n\u4f46\u8003\u53e4\u5b66\u5bb6\u4eec\u4ecd\u5728\u8bd5\u56fe\u7406\u89e3\uff0c\u4ece\u5e15\u62c9\u5361\u65af\u6587\u5316\u5bf9\u4e3b\u8981\u662f\u4f9b\u5176\u4ed6\u4eba\u89c2\u770b\u7684\u4eba\u7269\u7684\u63cf\u7ed8\uff0c\u5230\u51e0\u4e4e\u6ca1\u6709\u4eba\u7c7b\u7684\u7eb3\u65af\u5361\u8096\u50cf\u4e4b\u95f4\u7684\u8fc7\u6e21\u3002\n\u5361\u65af\u8482\u7565\u8ba4\u4e3a\uff0c\u968f\u7740\u793e\u4f1a\u7684\u53d1\u5c55\uff0c\u8fd9\u4e9b\u56fe\u50cf\u53ef\u80fd\u5df2\u7ecf\u88ab\u7cbe\u82f1\u9636\u5c42\u7a83\u53d6\uff0c\u5e76\u88ab\u8d4b\u4e88\u4e86\u795e\u5723\u7684\u5730\u4f4d\u3002\u4ed6\u8ba4\u4e3a\uff0c\u8fd9\u662f\u4e00\u4e2a\u8f6c\u53d8\uff0c\u4ece\u5bb6\u5ead\u6216\u6751\u5e84\u7ed8\u5236\u7684\u56fe\u753b\uff0c\u8f6c\u53d8\u4e3a\u7531\u66f4\u63a5\u8fd1\u56fd\u5bb6\u7684\u7ec4\u7ec7\u5236\u4f5c\u7684\u5b8f\u4f1f\u8bbe\u8ba1\u3002\n\u5728\u4e00\u4e2a\u5c71\u5761\u4e0a\uff0c\u4e00\u540d\u6234\u7740\u5934\u9970\u3001\u624b\u6301\u62d0\u6756\u6216\u957f\u77db\u7684\u6218\u58eb\u7ad9\u5728\u4e00\u540d\u5973\u6027\u8eab\u65c1\u3002\u5728\u5b83\u4eec\u4e4b\u95f4\u662f\u4e00\u79cd\u795e\u8bdd\u4e2d\u7684\u751f\u7269\uff0c\u957f\u7740\u5927\u91cf\u7684\u89e6\u624b\u6216\u86c7\u3002\u8fd9\u4e9b\u6570\u5b57\u88ab\u8ba4\u4e3a\u662f\u751f\u80b2\u7684\u8c61\u5f81\u3002\n\u4ece\u5730\u9762\u4e0a\u770b\uff0c\u73b0\u5728\u5f88\u96be\u770b\u5230\u8fd9\u4e9b\u8bbe\u8ba1\u3002\u4f46\u8fd9\u67b6\u65e0\u4eba\u673a\u7684\u9e70\u773c\u63ed\u793a\u4e86\u5361\u65af\u8482\u7565\u770b\u5230\u7684\u76d1\u89c6\u5668\u4e0a\u7684\u5b8c\u6574\u8bbe\u8ba1\uff0c\u5361\u65af\u8482\u7565\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u63a8\u5e7f\u822a\u7a7a\u6d4b\u7ed8\u6280\u672f\uff0c\u4ee5\u767b\u8bb0\u79d8\u9c81\u5927\u7ea610\u4e07\u4e2a\u8003\u53e4\u9057\u5740\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u5df2\u7ecf\u6316\u6398\u3002\n\u5361\u65af\u8482\u7565\u8bf4\uff0c\u65e0\u4eba\u673a\u4e0d\u4ec5\u88ab\u7528\u6765\u5bfb\u627e\u5730\u7406\u7b26\u53f7\uff0c\u8fd8\u88ab\u7528\u6765\u201c\u8986\u76d6\u6570\u5343\u516c\u91cc\uff0c\u62cd\u6444\u6570\u4ee5\u5343\u8ba1\u7684\u7167\u7247\uff0c\u7136\u540e\u5728\u975e\u5e38\u5927\u7684\u8ba1\u7b97\u673a\u4e2d\u8fdb\u884c\u5904\u7406\u201d\u3002\u201c\u56fe\u50cf\u975e\u5e38\u8be6\u7ec6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u5757\u534a\u82f1\u5bf8\u5bbd\u7684\u77f3\u5934\u3002\u201d\n\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6444\u5f71\u6d4b\u91cf\uff0c\u5176\u7ed3\u679c\u662f\u5bf9\u5927\u7247\u533a\u57df\u8fdb\u884c\u9ad8\u5ea6\u8be6\u7ec6\u7684\u4e09\u7ef4\u6d4b\u7ed8\uff0c\u5bf9\u4e8e\u7eb3\u65af\u5361\u7ebf\u548c\u5e15\u5c14\u5e15\u7ebf\u6765\u8bf4\uff0c\u8fd9\u5bf9\u5b83\u4eec\u7684\u4fdd\u62a4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u63a8\u52a8\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u53d1\u73b0\u8fd9\u4e9b\u65b0\u5730\u7406\u7b26\u53f7\u7684\u8d44\u91d1\u6765\u81ea\u4e00\u573a\u56fd\u9645\u4e11\u95fb\uff0c\u5f53\u65f6\u7eff\u8272\u548c\u5e73\u6d3b\u52a8\u4eba\u58eb\u5728\u9488\u5bf92014\u5e74\u5229\u9a6c\u8054\u5408\u56fd\u6c14\u5019\u53d8\u5316\u5cf0\u4f1a\u7684\u5ba3\u4f20\u5671\u5934\u4e2d\uff0c\u5728\u8fd9\u53ea\u8457\u540d\u7684\u8702\u9e1f\u65c1\u8fb9\u7559\u4e0b\u4e86\u7834\u574f\u6027\u7684\u811a\u5370\u3002\n\u5bf9\u8fd9\u4e00\u4e8b\u4ef6\u7684\u6124\u6012\u4fc3\u4f7f\u7f8e\u56fd\u7ed9\u79d8\u9c81\u4e00\u7b14\u8d60\u6b3e\uff0c\u5e2e\u52a9\u8d44\u52a9\u827e\u62c9\u548c\u4ed6\u7684\u56e2\u961f\u3002\n\u5361\u65af\u8482\u7565\u8bf4\uff0c\u5bf9\u5730\u7406\u7b26\u53f7\u8fdb\u884c\u767b\u8bb0\u548c\u5730\u7406\u53c2\u8003\u662f\u4fdd\u62a4\u5b83\u4eec\u514d\u53d7\u519c\u4e1a\u6216\u57ce\u5e02\u5165\u4fb5\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u4f46\u53ea\u6709\u51e0\u4e2a\u7f51\u7ad9\u5c06\u5411\u516c\u4f17\u516c\u5e03\uff0c\u4ee5\u514d\u5b83\u4eec\u6210\u4e3a\u7834\u574f\u7684\u76ee\u6807\u3002\u6cdb\u7f8e\u9ad8\u901f\u516c\u8def\u7a7f\u8fc7\u7684\u8bb8\u591a\u5c71\u5761\u4e0a\u5df2\u7ecf\u8986\u76d6\u7740\u4ece\u5316\u80a5\u54c1\u724c\u5230\u6d82\u9e26\u6807\u7b7e\u7684\u73b0\u4ee3\u8680\u523b\u4f5c\u54c1\u3002\n\u5361\u65af\u8482\u7565\u8ba4\u4e3a\uff0c\u5728\u7eb3\u65af\u5361\u548c\u5e15\u5c14\u5e15\u5730\u533a-\u8054\u5408\u56fd\u6559\u79d1\u6587\u7ec4\u7ec7\u5df2\u7ecf\u5c06\u5176\u63cf\u8ff0\u4e3a\u62e5\u6709\u201c\u4e16\u754c\u4e0a\u6700\u6770\u51fa\u7684\u5730\u7406\u7b26\u53f7\u7fa4\u201d-\u65b0\u53d1\u73b0\u7684\u6570\u91cf\u53ef\u80fd\u4f1a\u8d85\u8fc7\u65e7\u53d1\u73b0\u7684\u6570\u91cf\u3002\n\u867d\u7136\u7814\u7a76\u5c0f\u7ec4\u5df2\u7ecf\u5728\u5e15\u5c14\u5e15\u53d1\u73b0\u4e86\u6570\u767e\u79cd\u5730\u7406\u7b26\u53f7\uff0c\u4f46\u5361\u65af\u8482\u7565\u9884\u8ba1\u8fd8\u4f1a\u53d1\u73b0\u66f4\u591a\u3002\u201c\u6211\u4eec\u53ef\u80fd\u53ea\u6ce8\u518c\u4e86\u73b0\u6709\u6570\u91cf\u76845%\uff0c\u201d\u4ed6\u8bf4\u3002", "note_en": "A faded decades-old black-and-white photograph was the only lead Johny Isla had when he set out on the trail of a sea monster.\n The Peruvian archaeologist spotted the image at a 2014 exhibition in Germany about the Nazca Lines, the vast and intricate desert images which attract tens of thousands of tourists every year.\n The photograph taken in the early 1970s showed a mysterious killer whale deity carved in an arid hillside. The figure bore some resemblance to others he knew but he had never seen this one before.\n Isla, now Peru\u2019s chief archaeologist for the lines, spent hours poring through archives, before returning to  Peru \u2013 armed with a drone and a lifetime of local field experience \u2013 to find it.\n After several false starts, it took just two weeks to find the 25-by-65-metre image which had been hiding in plain sight in the hills of Palpa, about 30 miles north of Nazca, in a huge expanse of desert in southern Peru.\n The design carved into the hillside depicts a terrifying mythological beast, part orca but with a human arm holding a trophy head and several more heads inside its body.\n New research with drones has helped uncover hundreds of such figures carved in the desert near the lines in Nazca but which predate them by as much as 1,500 years. The archaeologists leading the effort now believe that the anthropomorphic orca figure fills in a missing link between hundreds of older geoglyphs and the Nazca culture\u2019s desert etchings.\n The smaller forms were etched on hillsides in nearby Palpa by the Paracas and Topar\u00e1 cultures between 500BC and AD200.\n \u201cThis orca was made at a time of abundance and population growth in a moment of change from one society to another,\u201d said Isla.\n  Isla believe that the Topar\u00e1 crafted the orca figure during a period of dynamic transition. \u201cThe Nazca Lines are the culmination of a process of experimentation and improvement in technique which follow on from these older geoglyphs,\u201d said Isla.\n   More than a thousand of them \u2013 vast geometric patterns, and zoomorphic figures such as the monkey, the hummingbird and the whale \u2013 stretch across more than 400 sq km of the Nazca plateau. They were created by removing the top layer of pebbles to reveal the lighter-coloured material beneath.\n The newly discovered geoglyphs\u2019 location on hillsides, however, marks a key difference, said Luis Jaime Castillo, a Peruvian archaeologist working on the Nazca-Palpa project with Isla.\n \u201cPlacing these geoglyphs on the slopes means that, in contrast with the Nazca Lines, you can see them if you are standing in the valley below where life and agriculture is taking place,\u201d he said.\n \u201cIf the Nazca Lines were made by humans for the gods, these figures were made by humans for humans,\u201d explained Castillo, a former minister of culture for Peru. \u201cThey are clearly representations of identifiable people. They are demarcating territories.\u201d\n By contrast, the larger and more sophisticated geoglyphs further south in Nazca can not be viewed completely from the ground.\n According to Isla, the latest research indicates the Nazca Lines were \u201cmade with the purpose of asking the Gods for water and fertility in this desert area\u201d.\n But archaeologists are still trying to understand the transition between the Paracas culture\u2019s depiction of largely human figures intended to be viewed by other people to the Nazca iconography in which humans are all but absent.\n As the society grew larger the images may have been appropriated by the elite and given a sacred status, Castillo believes. It was a transition from drawings made by households or villages to grand designs made by an organisation closer to a state, he argues.\n On one hillside, a warrior wearing a headdress and carrying a staff or spear stands close to a female figure. Between them is a mythological creature with a mass of tentacles or snakes. The figures are believed to symbolise fertility.\n From the ground, the designs are now hard to see. But the drone\u2019s eagle-eye reveals the full design on a monitor viewed by Castillo, who has long promoted aerial mapping techniques to register Peru\u2019s estimated 100,000 archaeological sites, of which only a fraction have been excavated.\n  Drones are being used not just to find geoglyphs but to \u201ccover kilometres and kilometres and take thousands and thousands of pictures, which are then processed in very large computers\u201d, Castillo said. \u201cThe images are so detailed that we can see a stone half an inch across.\u201d\n The result of the process, known as photogrammetry, is highly detailed three-dimensional mapping of large areas, which in the case of the Nazca and Palpa Lines is a huge boost for their protection.\n  The funding to discover these new geoglyphs came, ironically, as a result of an international scandal, when Greenpeace activists left damaging footprints next to the famous  hummingbird, during a publicity stunt aimed at the 2014 UN climate change summit in Lima.\n Outrage over the incident prompted the US to give Peru a grant which helped fund Isla and his team.\n Registering and geo-referencing the geoglyphs is the best way to protect them from the spread of agriculture or urban encroachment, Castillo says. But just a few of the sites will be made known to the public so as not to make them a target for vandalism. Many of the hillsides, cut through by the Pan-American highway, are already covered with modern-day etchings ranging from brands of fertilizer to graffiti tags.\n Castillo believes that in the Nazca and Palpa area \u2013 already described by Unesco as having the \u201cmost outstanding group of geoglyphs anywhere in the world\u201d \u2013 new discoveries may yet outnumber older ones.\n While the team have discovered hundreds of geoglyphs in Palpa, Castillo expects to find many more. \u201cWe\u2019ve registered maybe just 5% of what there is,\u201d he says.", "posttime": "2020-05-25 01:04:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5965\u79d8,surface,\u7eb3\u65af\u5361", "title": "\u89e6\u53ca\u8868\u9762\uff1a\u65e0\u4eba\u673a\u4e3a\u7eb3\u65af\u5361\u7ebf\u7684\u5965\u79d8\u63d0\u4f9b\u4e86\u65b0\u7684\u66d9\u5149", "title_en": "Scratching the surface: drones cast new light on mystery of Nazca Lines", "transed": 1, "url": "https://www.theguardian.com/science/2020/may/24/nazca-lines-drones-new-discoveries-peru", "via": "", "real_tags": ["\u5965\u79d8", "surface", "\u7eb3\u65af\u5361"]}, {"category": "", "categoryclass": "", "imagename": "e63fc4e122ad67416bd99246efafe02c.jpg", "infoid": 1003532, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6bcf\u5929\u4e0d\u5403\u65e9\u9910\uff0c\u5403\u4e24\u987f\u996d\uff0c\u7b2c\u4e00\u987f\u5728\u4e0b\u53481\u70b9\u5de6\u53f3\uff0c\u7b2c\u4e8c\u987f\u5728\u665a\u4e0a8\u70b9\u5de6\u53f3\u3002\u7136\u540e\uff0c\u6211\u7981\u98df16\u4e2a\u5c0f\u65f6\uff0c\u76f4\u5230\u7b2c\u4e8c\u5929\u4e0b\u53481\u70b9\u6211\u53c8\u5f00\u59cb\u5403\u4e1c\u897f\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u81ea\u4ece\u6211\u5f00\u59cb\u95f4\u6b47\u6027\u7981\u98df\u4ee5\u6765\uff0c\u6211\u589e\u52a0\u4e86\u808c\u8089\u8d28\u91cf(\u4ece205\u78c5\u589e\u52a0\u5230215\u78c5)\uff0c\u51cf\u5c11\u4e86\u4f53\u8102(\u4ece14%\u4e0b\u964d\u523011%\uff0c\u4e0b\u964d\u4e863%)\uff0c\u589e\u52a0\u4e86\u7206\u53d1\u529b(\u51e0\u4e2a\u6708\u524d\u4ee5253\u78c5\u7684\u633a\u4e3e\u521b\u4e0b\u4e86\u4e2a\u4eba\u6700\u597d\u6210\u7ee9)\uff0c\u5e76\u51cf\u5c11\u4e86\u6211\u82b1\u5728\u8bad\u7ec3\u4e0a\u7684\u65f6\u95f4(\u4ece\u6bcf\u54687.5\u5c0f\u65f6\u51cf\u5c11\u5230\u6bcf\u54682.5\u5c0f\u65f6)\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u66f4\u5f3a\u58ee\uff0c\u66f4\u82d7\u6761\uff0c\u66f4\u6709\u7206\u53d1\u529b\uff0c\u5c3d\u7ba1\u6211\u53bb\u5065\u8eab\u623f\u7684\u6b21\u6570\u5c11\u4e86\uff0c\u5403\u7684\u4e5f\u5c11\u4e86\u3002\n\u8fd9\u600e\u9ebd\u53ef\u80fd\uff1f\u4e0d\u5403\u65e9\u9910\u5bf9\u4f60\u6ca1\u6709\u574f\u5904\u5417\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eba\u6bcf\u5929\u7981\u98df16\u5c0f\u65f6\uff1f\u6709\u4ec0\u4e48\u798f\u5229\u5f85\u9047\uff1f\u8fd9\u80cc\u540e\u6709\u6ca1\u6709\u79d1\u5b66\u4f9d\u636e\uff0c\u8fd8\u662f\u4f60\u53ea\u662f\u75af\u4e86\uff1f\u5371\u9669\u5417\uff1f\n\u6162\u70b9\uff0c\u670b\u53cb\u3002\u5927\u5bb6\u90fd\u77e5\u9053\u6211\u505a\u4e86\u4e00\u4e9b\u75af\u72c2\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd9\u662f\u5b8c\u5168\u5408\u6cd5\u7684\u3002\u5b83\u5f88\u5bb9\u6613\u843d\u5b9e\u5230\u4f60\u7684\u751f\u6d3b\u65b9\u5f0f\u4e2d\uff0c\u800c\u4e14\u5bf9\u5065\u5eb7\u6709\u5f88\u5927\u7684\u597d\u5904\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5206\u6790\u65ad\u65ad\u7eed\u7eed\u7684\u7981\u98df\u548c\u968f\u4e4b\u800c\u6765\u7684\u4e00\u5207\u3002\n\u514d\u8d39\u5956\u52b1\uff1a\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u95f4\u6b47\u6027\u7981\u98df\u5feb\u901f\u5165\u95e8\u6307\u5357\uff0c\u5176\u4e2d\u603b\u7ed3\u4e86\u95f4\u6b47\u6027\u7981\u98df\u7684\u597d\u5904\uff0c\u4ee5\u53ca\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u76ee\u6807\u4f7f\u7528\u76843\u4e2a\u7981\u98df\u65f6\u95f4\u8868\u3002\u8fd9\u662f\u4e00\u4e2a\u5feb\u901f\u76845\u9875PDF\uff0c\u60a8\u53ef\u4ee5\u4fdd\u5b58\u5e76\u5728\u4ee5\u540e\u81ea\u5df1\u5c1d\u8bd5\u65f6\u53c2\u8003\u3002\u5355\u51fb\u6b64\u5904\u514d\u8d39\u83b7\u53d6\u6307\u5357\u3002\n\u95f4\u6b47\u6027\u7981\u98df\u4e0d\u662f\u4e00\u79cd\u996e\u98df\uff0c\u800c\u662f\u4e00\u79cd\u996e\u98df\u6a21\u5f0f\u3002\u8fd9\u662f\u4e00\u79cd\u5b89\u6392\u7528\u9910\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u4f60\u5c31\u80fd\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u5b83\u4eec\u3002\u95f4\u6b47\u6027\u7981\u98df\u4e0d\u4f1a\u6539\u53d8\u4f60\u7684\u996e\u98df\uff0c\u5b83\u4f1a\u968f\u7740\u4f60\u7684\u8fdb\u98df\u800c\u6539\u53d8\u3002\n\u55ef\uff0c\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u79cd\u65e2\u4e0d\u75af\u72c2\u8282\u98df\u4e5f\u4e0d\u4f1a\u5c06\u5361\u8def\u91cc\u51cf\u5c11\u5230\u96f6\u7684\u51cf\u80a5\u597d\u65b9\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u65f6\u5019\uff0c\u5f53\u4f60\u5f00\u59cb\u95f4\u6b47\u6027\u7981\u98df\u65f6\uff0c\u4f60\u4f1a\u5c3d\u91cf\u4fdd\u6301\u5361\u8def\u91cc\u4e0d\u53d8\u3002(\u5927\u591a\u6570\u4eba\u5728\u8f83\u77ed\u7684\u65f6\u95f4\u5185\u5403\u66f4\u591a\u7684\u996d\u3002)\u3002\u53e6\u5916\uff0c\u95f4\u6b47\u6027\u7981\u98df\u662f\u7626\u8eab\u65f6\u4fdd\u6301\u808c\u8089\u53d1\u8fbe\u7684\u597d\u65b9\u6cd5\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4eba\u4eec\u5c1d\u8bd5\u95f4\u6b47\u6027\u7981\u98df\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4e3a\u4e86\u51cf\u80a5\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u8ba8\u8bba\u65ad\u65ad\u7eed\u7eed\u7684\u7981\u98df\u662f\u5982\u4f55\u5bfc\u81f4\u8102\u80aa\u51cf\u5c11\u7684\u3002\n\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u662f\uff0c\u95f4\u6b47\u6027\u7981\u98df\u662f\u6211\u4eec\u5728\u4fdd\u6301\u826f\u597d\u4f53\u91cd\u7684\u540c\u65f6\u51cf\u8f7b\u4e0d\u826f\u4f53\u91cd\u7684\u6700\u7b80\u5355\u7684\u7b56\u7565\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u5f88\u5c11\u7684\u884c\u4e3a\u6539\u53d8\u3002\u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u597d\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5b83\u610f\u5473\u7740\u95f4\u6b47\u6027\u7981\u98df\u5c5e\u4e8e\u201c\u8db3\u591f\u7b80\u5355\uff0c\u4f60\u4f1a\u771f\u6b63\u53bb\u505a\uff0c\u4f46\u8db3\u591f\u6709\u610f\u4e49\uff0c\u5b9e\u9645\u4e0a\u4f1a\u6709\u6240\u4e0d\u540c\u201d\u7684\u7c7b\u522b\u3002\n\u8981\u4e86\u89e3\u95f4\u6b47\u6027\u7981\u98df\u5982\u4f55\u5bfc\u81f4\u8102\u80aa\u51cf\u5c11\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e86\u89e3\u7f8e\u8054\u50a8\u72b6\u6001\u548c\u7981\u98df\u72b6\u6001\u4e4b\u95f4\u7684\u533a\u522b\u3002\n\u4f60\u7684\u8eab\u4f53\u5728\u6d88\u5316\u548c\u5438\u6536\u98df\u7269\u65f6\u5904\u4e8e\u8fdb\u98df\u72b6\u6001\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f8e\u8054\u50a8\u7684\u72b6\u6001\u4ece\u4f60\u5f00\u59cb\u8fdb\u98df\u5f00\u59cb\uff0c\u6301\u7eed\u4e09\u5230\u4e94\u4e2a\u5c0f\u65f6\uff0c\u56e0\u4e3a\u4f60\u7684\u8eab\u4f53\u6d88\u5316\u548c\u5438\u6536\u4e86\u4f60\u521a\u521a\u5403\u7684\u98df\u7269\u3002\u5f53\u4f60\u5904\u4e8e\u7f8e\u8054\u50a8\u72b6\u6001\u65f6\uff0c\u4f60\u7684\u8eab\u4f53\u5f88\u96be\u71c3\u70e7\u8102\u80aa\uff0c\u56e0\u4e3a\u4f60\u7684\u80f0\u5c9b\u7d20\u6c34\u5e73\u5f88\u9ad8\u3002\n\u5728\u8fd9\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u4f60\u7684\u8eab\u4f53\u8fdb\u5165\u6240\u8c13\u7684\u5438\u6536\u540e\u72b6\u6001\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u5947\u7279\u7684\u65b9\u5f0f\uff0c\u8bf4\u4f60\u7684\u8eab\u4f53\u6ca1\u6709\u5728\u5904\u7406\u4e00\u987f\u996d\u3002\u6444\u53d6\u540e\u7684\u72b6\u6001\u6301\u7eed\u5230\u6700\u540e\u4e00\u9910\u540e\u76848\u523012\u5c0f\u65f6\uff0c\u4e5f\u5c31\u662f\u4f60\u8fdb\u5165\u7981\u98df\u72b6\u6001\u7684\u65f6\u5019\u3002\u4f60\u7684\u8eab\u4f53\u5728\u7981\u98df\u72b6\u6001\u4e0b\u71c3\u70e7\u8102\u80aa\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u56e0\u4e3a\u4f60\u7684\u80f0\u5c9b\u7d20\u6c34\u5e73\u5f88\u4f4e\u3002\n\u5f53\u4f60\u5904\u4e8e\u7981\u98df\u72b6\u6001\u65f6\uff0c\u4f60\u7684\u8eab\u4f53\u53ef\u4ee5\u71c3\u70e7\u5728\u8fdb\u98df\u72b6\u6001\u4e0b\u65e0\u6cd5\u71c3\u70e7\u7684\u8102\u80aa\u3002\n\u56e0\u4e3a\u6211\u4eec\u76f4\u5230\u6700\u540e\u4e00\u987f\u996d\u540e12\u5c0f\u65f6\u624d\u8fdb\u5165\u7981\u98df\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u8eab\u4f53\u5904\u4e8e\u8fd9\u79cd\u8102\u80aa\u71c3\u70e7\u72b6\u6001\u662f\u5f88\u7f55\u89c1\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u5f00\u59cb\u95f4\u6b47\u6027\u7981\u98df\u7684\u4eba\u5728\u4e0d\u6539\u53d8\u4ed6\u4eec\u5403\u4ec0\u4e48\u3001\u5403\u591a\u5c11\u6216\u591a\u4e45\u953b\u70bc\u4e00\u6b21\u7684\u60c5\u51b5\u4e0b\u5c31\u4f1a\u51cf\u6389\u8102\u80aa\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u7981\u98df\u4f1a\u8ba9\u4f60\u7684\u8eab\u4f53\u5904\u4e8e\u8102\u80aa\u71c3\u70e7\u7684\u72b6\u6001\uff0c\u800c\u8fd9\u5728\u6b63\u5e38\u7684\u8fdb\u98df\u8ba1\u5212\u4e2d\u662f\u5f88\u96be\u505a\u5230\u7684\u3002\n\u6211\u70ed\u8877\u4e8e\u884c\u4e3a\u6539\u53d8\u3001\u7b80\u7ea6\u548c\u51cf\u538b\u3002\u95f4\u6b47\u6027\u7981\u98df\u4e3a\u6211\u7684\u751f\u6d3b\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u7b80\u5355\u6027\uff0c\u6211\u771f\u7684\u5f88\u4eab\u53d7\u3002\u5f53\u6211\u9192\u6765\u7684\u65f6\u5019\uff0c\u6211\u4e0d\u4f1a\u62c5\u5fc3\u65e9\u9910\u7684\u4e8b\u3002\u6211\u53ea\u662f\u62ff\u4e86\u4e00\u676f\u6c34\uff0c\u5f00\u59cb\u4e86\u6211\u7684\u4e00\u5929\u3002\n\u6211\u559c\u6b22\u5403\uff0c\u4e5f\u4e0d\u4ecb\u610f\u505a\u996d\uff0c\u6240\u4ee5\u4e00\u65e5\u4e09\u9910\u5bf9\u6211\u6765\u8bf4\u4ece\u6765\u4e0d\u662f\u9ebb\u70e6\u3002\u7136\u800c\uff0c\u65ad\u65ad\u7eed\u7eed\u7684\u7981\u98df\u53ef\u4ee5\u8ba9\u6211\u5c11\u5403\u4e00\u987f\u996d\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5c11\u8ba1\u5212\u4e00\u987f\u996d\uff0c\u5c11\u505a\u4e00\u987f\u996d\uff0c\u5c11\u5403\u4e00\u987f\u996d\u800c\u611f\u5230\u538b\u529b\u3002\u5b83\u8ba9\u751f\u6d3b\u53d8\u5f97\u7b80\u5355\u4e00\u4e9b\uff0c\u6211\u559c\u6b22\u8fd9\u6837\u3002\n\u79d1\u5b66\u5bb6\u4eec\u65e9\u5c31\u77e5\u9053\uff0c\u9650\u5236\u5361\u8def\u91cc\u6444\u5165\u662f\u5ef6\u957f\u5bff\u547d\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u8fd9\u662f\u6709\u9053\u7406\u7684\u3002\u5f53\u4f60\u6328\u997f\u7684\u65f6\u5019\uff0c\u4f60\u7684\u8eab\u4f53\u4f1a\u60f3\u529e\u6cd5\u5ef6\u957f\u4f60\u7684\u5bff\u547d\u3002\n\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u8c01\u60f3\u4ee5\u957f\u5bff\u7684\u540d\u4e49\u997f\u6b7b\u81ea\u5df1\uff1f\n\u6211\u4e0d\u77e5\u9053\u4f60\u600e\u4e48\u6837\uff0c\u4f46\u6211\u5bf9\u4eab\u53d7\u957f\u5bff\u5f88\u611f\u5174\u8da3\u3002\u8ba9\u81ea\u5df1\u6328\u997f\u542c\u8d77\u6765\u6ca1\u90a3\u4e48\u4ee4\u4eba\u5f00\u80c3\u3002\n\u597d\u6d88\u606f\u662f\uff0c\u95f4\u6b47\u6027\u7981\u98df\u6fc0\u6d3b\u4e86\u8bb8\u591a\u4e0e\u5361\u8def\u91cc\u9650\u5236\u76f8\u540c\u7684\u5ef6\u957f\u5bff\u547d\u7684\u673a\u5236\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u4e0d\u7528\u5fcd\u53d7\u6328\u997f\u7684\u70e6\u607c\uff0c\u5c31\u80fd\u5f97\u5230\u957f\u5bff\u7684\u597d\u5904\u3002\n\u65e9\u57281945\u5e74\uff0c\u4eba\u4eec\u5c31\u53d1\u73b0\u95f4\u6b47\u6027\u7981\u98df\u53ef\u4ee5\u5ef6\u957f\u8001\u9f20\u7684\u5bff\u547d\u3002(\u8fd9\u662f\u7814\u7a76\u62a5\u544a\u3002)\u3002\u6700\u8fd1\uff0c\u8fd9\u9879\u7814\u7a76\u53d1\u73b0\u9694\u65e5\u95f4\u6b47\u6027\u7981\u98df\u4f1a\u5ef6\u957f\u5bff\u547d\u3002\n\u8fd9\u4e00\u70b9\u503c\u5f97\u5546\u69b7\uff0c\u56e0\u4e3a\u5173\u4e8e\u764c\u75c7\u548c\u7981\u98df\u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u7814\u7a76\u548c\u5b9e\u9a8c\u8fd8\u4e0d\u591a\u3002\u7136\u800c\uff0c\u65e9\u671f\u7684\u62a5\u9053\u770b\u8d77\u6765\u662f\u79ef\u6781\u7684\u3002\n\u8fd9\u9879\u9488\u5bf910\u540d\u764c\u75c7\u60a3\u8005\u7684\u7814\u7a76\u8868\u660e\uff0c\u5728\u6cbb\u7597\u524d\u7981\u98df\u53ef\u4ee5\u51cf\u5c11\u5316\u7597\u7684\u526f\u4f5c\u7528\u3002\u8fd9\u4e00\u53d1\u73b0\u4e5f\u5f97\u5230\u4e86\u53e6\u4e00\u9879\u7814\u7a76\u7684\u652f\u6301\uff0c\u8be5\u7814\u7a76\u5bf9\u764c\u75c7\u60a3\u8005\u8fdb\u884c\u4e86\u9694\u65e5\u7981\u98df\uff0c\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u5316\u7597\u524d\u7981\u98df\u5c06\u5bfc\u81f4\u66f4\u597d\u7684\u6cbb\u6108\u7387\u548c\u66f4\u5c11\u7684\u6b7b\u4ea1\u3002\n\u6700\u540e\uff0c\u5bf9\u8bb8\u591a\u5173\u4e8e\u7981\u98df\u548c\u75be\u75c5\u7684\u7814\u7a76\u7684\u7efc\u5408\u5206\u6790\u5f97\u51fa\u7ed3\u8bba\uff0c\u7981\u98df\u4f3c\u4e4e\u4e0d\u4ec5\u53ef\u4ee5\u964d\u4f4e\u60a3\u764c\u75c7\u7684\u98ce\u9669\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u964d\u4f4e\u5fc3\u8840\u7ba1\u75be\u75c5\u7684\u98ce\u9669\u3002\n\u5927\u591a\u6570\u8282\u98df\u5931\u8d25\u7684\u539f\u56e0\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u6539\u5403\u4e86\u9519\u8bef\u7684\u98df\u7269\uff0c\u800c\u662f\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u6ca1\u6709\u957f\u671f\u9075\u5faa\u8282\u98df\u3002\u8fd9\u4e0d\u662f\u8425\u517b\u95ee\u9898\uff0c\u800c\u662f\u884c\u4e3a\u6539\u53d8\u95ee\u9898\u3002\n\u8fd9\u5c31\u662f\u95f4\u6b47\u6027\u7981\u98df\u7684\u4eae\u70b9\uff0c\u56e0\u4e3a\u4e00\u65e6\u4f60\u514b\u670d\u4e86\u4f60\u9700\u8981\u4e00\u76f4\u5403\u4e1c\u897f\u7684\u60f3\u6cd5\uff0c\u5b83\u5c31\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u8fd9\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u95f4\u6b47\u6027\u7981\u98df\u662f\u80a5\u80d6\u6210\u5e74\u4eba\u51cf\u80a5\u7684\u6709\u6548\u7b56\u7565\uff0c\u5e76\u5f97\u51fa\u7ed3\u8bba\uff0c\u201c\u53d7\u8bd5\u8005\u5f88\u5feb\u5c31\u4f1a\u9002\u5e94\u201d\u95f4\u6b47\u6027\u7981\u98df\u7a0b\u5e8f\u3002\n\u6211\u559c\u6b22\u8fc8\u514b\u5c14\u00b7\u4f0a\u8fea\u65af\u535a\u58eb\u5173\u4e8e\u5c1d\u8bd5\u8282\u98df\u548c\u5c1d\u8bd5\u95f4\u6b47\u6027\u7981\u98df\u4e4b\u95f4\u7684\u533a\u522b\u7684\u5f15\u8a00\uff0c\u4ed6\u81ea\u5df1\u4e5f\u66fe\u5c1d\u8bd5\u95f4\u6b47\u6027\u7981\u98df\u3002\n\u201c\u8282\u98df\u5728\u6c89\u601d\u4e2d\u5bb9\u6613\uff0c\u5728\u6267\u884c\u4e2d\u96be\u3002\u65ad\u65ad\u7eed\u7eed\u7684\u7981\u98df\u6b63\u597d\u76f8\u53cd--\u5b83\u5728\u51a5\u60f3\u4e2d\u5f88\u96be\uff0c\u4f46\u5728\u6267\u884c\u4e2d\u5f88\u5bb9\u6613\u3002\n\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u8003\u8651\u8fc7\u8282\u98df\u3002\u5f53\u6211\u4eec\u627e\u5230\u4e00\u79cd\u5bf9\u6211\u4eec\u6709\u5438\u5f15\u529b\u7684\u996e\u98df\u65f6\uff0c\u8fd9\u4f3c\u4e4e\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u6df1\u5165\u5230\u5b83\u7684\u672c\u8d28\u65f6\uff0c\u5b83\u5c31\u53d8\u5f97\u56f0\u96be\u4e86\u3002\u4f8b\u5982\uff0c\u6211\u51e0\u4e4e\u6bcf\u65f6\u6bcf\u523b\u90fd\u5728\u5403\u4f4e\u78b3\u6c34\u5316\u5408\u7269\u7684\u98df\u7269\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u8003\u8651\u8fdb\u884c\u4f4e\u8102\u996e\u98df\uff0c\u8fd9\u770b\u8d77\u6765\u5f88\u5bb9\u6613\u3002\u6211\u60f3\u5230\u767e\u5409\u997c\u3001\u5168\u9ea6\u9762\u5305\u548c\u679c\u51bb\u3001\u571f\u8c46\u6ce5\u3001\u7389\u7c73\u3001\u9999\u8549\u7b49\u7b49--\u6240\u6709\u8fd9\u4e9b\u542c\u8d77\u6765\u90fd\u5f88\u5438\u5f15\u4eba\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u5f00\u59cb\u8fd9\u6837\u7684\u4f4e\u8102\u996e\u98df\uff0c\u6211\u5f88\u5feb\u5c31\u4f1a\u538c\u5026\uff0c\u5e0c\u671b\u6211\u80fd\u5403\u5230\u8089\u548c\u86cb\u3002\u6240\u4ee5\uff0c\u8282\u98df\u5728\u601d\u8003\u65f6\u5f88\u5bb9\u6613\uff0c\u4f46\u5728\u957f\u671f\u6267\u884c\u4e2d\u5c31\u4e0d\u90a3\u4e48\u5bb9\u6613\u4e86\u3002\n\u65ad\u65ad\u7eed\u7eed\u7684\u7981\u98df\u662f\u5f88\u96be\u601d\u8003\u7684\uff0c\u8fd9\u4e00\u70b9\u6bcb\u5eb8\u7f6e\u7591\u3002\u201c\u4f6024\u5c0f\u65f6\u4e0d\u8fdb\u98df\uff1f\u201d\u5f53\u6211\u4eec\u89e3\u91ca\u6211\u4eec\u5728\u505a\u4ec0\u4e48\u65f6\uff0c\u4eba\u4eec\u4f1a\u6000\u7591\u5730\u95ee\u3002\u201c\u6211\u6c38\u8fdc\u4e0d\u53ef\u80fd\u90a3\u6837\u505a\u3002\u201d\u4f46\u4e00\u65e6\u5f00\u59cb\uff0c\u5c31\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u3002\u4e00\u65e5\u4e09\u9910\u4e2d\u7684\u4e00\u5230\u4e24\u9910\u4e0d\u7528\u62c5\u5fc3\u5403\u4ec0\u4e48\u548c\u53bb\u54ea\u91cc\u5403\u3002\u8fd9\u662f\u4e00\u6b21\u4f1f\u5927\u7684\u89e3\u653e\u3002\u4f60\u7684\u98df\u7269\u652f\u51fa\u76f4\u7ebf\u4e0b\u964d\u3002\u800c\u4e14\u4f60\u4e5f\u4e0d\u662f\u7279\u522b\u997f\u3002\u2026\u3002\u867d\u7136\u514b\u670d\u4e0d\u5403\u4e1c\u897f\u7684\u60f3\u6cd5\u5f88\u96be\uff0c\u4f46\u4e00\u65e6\u4f60\u5f00\u59cb\u517b\u751f\uff0c\u5c31\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8fd9\u66f4\u5bb9\u6613\u7684\u4e86\u3002\u201c\u3002\n\u5728\u6211\u770b\u6765\uff0c\u95f4\u6b47\u6027\u7981\u98df\u7684\u7b80\u4fbf\u6027\u662f\u5c1d\u8bd5\u7684\u6700\u597d\u7406\u7531\u3002\u5b83\u63d0\u4f9b\u4e86\u5e7f\u6cdb\u7684\u5065\u5eb7\u76ca\u5904\uff0c\u800c\u4e0d\u9700\u8981\u5927\u89c4\u6a21\u6539\u53d8\u751f\u6d3b\u65b9\u5f0f\u3002\n\u5982\u679c\u4f60\u6b63\u5728\u8003\u8651\u7981\u98df\uff0c\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u9009\u62e9\u53ef\u4ee5\u8ba9\u5b83\u878d\u5165\u4f60\u7684\u751f\u6d3b\u65b9\u5f0f\u3002\n\u5927\u591a\u6570\u65f6\u5019\uff0c\u6211\u9075\u5faaLeangones\u95f4\u6b47\u6027\u7981\u98df\u6a21\u5f0f\uff0c\u5373\u5148\u7981\u98df16\u5c0f\u65f6\uff0c\u7136\u540e\u8fdb\u98df8\u5c0f\u65f6\u3002\u8fd9\u79cd\u6bcf\u65e5\u95f4\u6b47\u6027\u7981\u98df\u7684\u6a21\u5f0f\u662f\u7531Leangains.com\u7684\u9a6c\u4e01\u00b7\u4f2f\u514b\u6c49(Martin Berkhan)\u63a8\u5e7f\u7684\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\u3002\n\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u4f608\u5c0f\u65f6\u7684\u8fdb\u98df\u65f6\u95f4\u5e76\u4e0d\u91cd\u8981\u3002\u4f60\u53ef\u4ee5\u65e9\u4e0a8\u70b9\u51fa\u53d1\uff0c\u4e0b\u53484\u70b9\u505c\u3002\u6216\u8005\u4f60\u4e0b\u53482\u70b9\u5f00\u59cb\uff0c\u665a\u4e0a10\u70b9\u505c\u6b62\u3002\u505a\u4efb\u4f55\u9002\u5408\u4f60\u7684\u4e8b\u3002\u6211\u503e\u5411\u4e8e\u53d1\u73b0\u4e0b\u53481\u70b9\u548c8\u70b9\u5de6\u53f3\u5403\u996d\u6548\u679c\u5f88\u597d\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u65f6\u95f4\u6bb5\u8ba9\u6211\u53ef\u4ee5\u548c\u670b\u53cb\u548c\u5bb6\u4eba\u4e00\u8d77\u5403\u5348\u996d\u548c\u665a\u9910\u3002\u65e9\u9910\u901a\u5e38\u662f\u6211\u81ea\u5df1\u5403\u7684\u4e00\u987f\u996d\uff0c\u6240\u4ee5\u4e0d\u5403\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\n\u56e0\u4e3a\u6bcf\u5929\u90fd\u65ad\u65ad\u7eed\u7eed\u5730\u7981\u98df\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u517b\u6210\u6309\u8fd9\u4e2a\u65f6\u95f4\u8868\u5403\u996d\u7684\u4e60\u60ef\u3002\u73b0\u5728\uff0c\u4f60\u53ef\u80fd\u6bcf\u5929\u90fd\u5728\u540c\u4e00\u65f6\u95f4\u5403\u4e1c\u897f\uff0c\u800c\u4e0d\u53bb\u60f3\u5b83\u3002\u55ef\uff0c\u6bcf\u5929\u95f4\u6b47\u6027\u7981\u98df\u662f\u4e00\u6837\u7684\uff0c\u4f60\u53ea\u662f\u5b66\u4f1a\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u4e0d\u5403\u4e1c\u897f\uff0c\u8fd9\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\n\u8fd9\u4e2a\u65f6\u95f4\u8868\u7684\u4e00\u4e2a\u6f5c\u5728\u7f3a\u70b9\u662f\uff0c\u56e0\u4e3a\u4f60\u901a\u5e38\u4f1a\u5728\u4e00\u5929\u4e2d\u51cf\u5c11\u4e00\u5230\u4e24\u987f\u996d\uff0c\u6240\u4ee5\u5728\u4e00\u5468\u5185\u6444\u5165\u76f8\u540c\u6570\u91cf\u7684\u5361\u8def\u91cc\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5f88\u96be\u6559\u4f60\u81ea\u5df1\u5728\u6301\u7eed\u7684\u57fa\u7840\u4e0a\u5403\u66f4\u591a\u7684\u98df\u7269\u3002\u5176\u7ed3\u679c\u662f\uff0c\u8bb8\u591a\u5c1d\u8bd5\u8fd9\u79cd\u95f4\u6b47\u6027\u7981\u98df\u65b9\u5f0f\u7684\u4eba\u6700\u7ec8\u90fd\u51cf\u80a5\u4e86\u3002\u8fd9\u53ef\u80fd\u662f\u597d\u4e8b\uff0c\u4e5f\u53ef\u80fd\u662f\u574f\u4e8b\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u76ee\u6807\u3002\n\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u673a\u6765\u63d0\u4e00\u63d0\uff0c\u867d\u7136\u6211\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\u4e00\u76f4\u575a\u6301\u95f4\u6b47\u6027\u7981\u98df\uff0c\u4f46\u6211\u5bf9\u81ea\u5df1\u7684\u996e\u98df\u5e76\u4e0d\u72c2\u70ed\u3002\u6211\u81f4\u529b\u4e8e\u517b\u6210\u5065\u5eb7\u7684\u4e60\u60ef\uff0c\u572890%\u7684\u65f6\u95f4\u91cc\u6307\u5bfc\u6211\u7684\u884c\u4e3a\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5728\u5176\u4f5910%\u7684\u65f6\u95f4\u91cc\u505a\u4efb\u4f55\u6211\u60f3\u505a\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6211\u53bb\u4f60\u5bb6\u770b\u8db3\u7403\u6bd4\u8d5b\uff0c\u6211\u4eec\u665a\u4e0a11\u70b9\u70b9\u62ab\u8428\uff0c\u4f60\u731c\u600e\u4e48\u7740\uff1f\u6211\u4e0d\u5728\u4e4e\u5b83\u662f\u4e0d\u662f\u5728\u6211\u7684\u5582\u98df\u671f\u4e4b\u5916\uff0c\u6211\u5728\u5403\u5b83\u3002\n\u5f00\u59cb\u95f4\u6b47\u6027\u7981\u98df\u7684\u6700\u597d\u65b9\u6cd5\u4e4b\u4e00\u662f\u6bcf\u5468\u6216\u6bcf\u6708\u7981\u98df\u4e00\u6b21\u3002\u5076\u5c14\u7684\u7981\u98df\u5df2\u7ecf\u88ab\u8bc1\u660e\u53ef\u4ee5\u5e26\u6765\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u7981\u98df\u7684\u8bb8\u591a\u597d\u5904\uff0c\u6240\u4ee5\u5373\u4f7f\u4f60\u4e0d\u7528\u5b83\u6765\u6301\u7eed\u5730\u51cf\u5c11\u5361\u8def\u91cc\uff0c\u7981\u98df\u4ecd\u7136\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5065\u5eb7\u597d\u5904\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u6bcf\u5468\u95f4\u6b47\u6027\u7981\u98df\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u5728\u672c\u4f8b\u4e2d\uff0c\u5468\u4e00\u7684\u5348\u9910\u662f\u60a8\u4e00\u5929\u4e2d\u7684\u6700\u540e\u4e00\u9910\u3002\u7136\u540e\u4f60\u7981\u98df\u5230\u5468\u4e8c\u7684\u5348\u9910\u3002\u8fd9\u4e2a\u65f6\u95f4\u8868\u7684\u597d\u5904\u662f\u8ba9\u4f60\u4e00\u5468\u4e2d\u6bcf\u5929\u90fd\u53ef\u4ee5\u5403\u4e1c\u897f\uff0c\u540c\u65f6\u4ecd\u7136\u53ef\u4ee5\u4eab\u53d7\u523024\u5c0f\u65f6\u7981\u98df\u7684\u597d\u5904\u3002\u4f60\u4e5f\u4e0d\u592a\u53ef\u80fd\u51cf\u80a5\uff0c\u56e0\u4e3a\u4f60\u4e00\u5468\u53ea\u5c11\u5403\u4e24\u987f\u996d\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u589e\u52a0\u4f53\u578b\u6216\u4fdd\u6301\u4f53\u91cd\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\u6211\u8fc7\u53bb\u505a\u8fc724\u5c0f\u65f6\u7981\u98df(\u4e0a\u4e2a\u6708\u6211\u521a\u521a\u505a\u4e86\u4e00\u6b21)\uff0c\u6709\u5404\u79cd\u5404\u6837\u7684\u53d8\u5316\u548c\u9009\u62e9\uff0c\u53ef\u4ee5\u8ba9\u5b83\u5728\u4f60\u7684\u65e5\u7a0b\u8868\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u4e00\u5929\u7684\u957f\u9014\u65c5\u884c\u6216\u4e00\u573a\u76db\u5927\u7684\u8282\u65e5\u76db\u5bb4\u540e\u7684\u7b2c\u4e8c\u5929\uff0c\u901a\u5e38\u90fd\u662f\u7edd\u4f73\u768424\u5c0f\u65f6\u7981\u98df\u65f6\u95f4\u3002\n\u4e5f\u8bb824\u5c0f\u65f6\u7981\u98df\u7684\u6700\u5927\u597d\u5904\u5c31\u662f\u514b\u670d\u4e86\u7981\u98df\u7684\u5fc3\u7406\u969c\u788d\u3002\u5982\u679c\u4f60\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u7981\u98df\u8fc7\uff0c\u6210\u529f\u5730\u5b8c\u6210\u7b2c\u4e00\u6b21\u7981\u98df\u4f1a\u5e2e\u52a9\u4f60\u610f\u8bc6\u5230\uff0c\u5982\u679c\u4f60\u4e00\u5929\u4e0d\u5403\u4e1c\u897f\uff0c\u4f60\u5c31\u4e0d\u4f1a\u6b7b\u3002\n\u4f8b\u5982\uff0c\u5728\u4e0b\u56fe\u4e2d\uff0c\u4f60\u4f1a\u5728\u5468\u4e00\u665a\u4e0a\u5403\u665a\u996d\uff0c\u7136\u540e\u76f4\u5230\u5468\u4e8c\u665a\u4e0a\u624d\u518d\u5403\u4e1c\u897f\u3002\u7136\u800c\uff0c\u5728\u5468\u4e09\uff0c\u4f60\u4f1a\u5403\u4e0a\u4e00\u6574\u5929\uff0c\u7136\u540e\u5728\u5468\u4e09\u665a\u4e0a\u5403\u5b8c\u665a\u996d\u540e\uff0c\u518d\u6b21\u5f00\u59cb24\u5c0f\u65f6\u7684\u7981\u98df\u5468\u671f\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e00\u5468\u4e2d\u6bcf\u5929\u81f3\u5c11\u5403\u4e00\u987f\u996d\u7684\u540c\u65f6\uff0c\u6301\u7eed\u83b7\u5f97\u957f\u65f6\u95f4\u7684\u5feb\u9910\u3002\n\u8fd9\u79cd\u95f4\u6b47\u6027\u7981\u98df\u4f3c\u4e4e\u5728\u7814\u7a76\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u5b83\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5e76\u4e0d\u662f\u5f88\u53d7\u6b22\u8fce\u3002\u6211\u81ea\u5df1\u4ece\u6765\u6ca1\u6709\u8bd5\u8fc7\u9694\u65e5\u7981\u98df\uff0c\u6211\u4e5f\u4e0d\u6253\u7b97\u8fd9\u4e48\u505a\u3002\n\u9694\u65e5\u95f4\u6b47\u7981\u98df\u7684\u597d\u5904\u662f\uff0c\u5b83\u4f7f\u4f60\u5728\u7981\u98df\u72b6\u6001\u4e0b\u7684\u65f6\u95f4\u6bd4Leangain\u5f0f\u7684\u7981\u98df\u65f6\u95f4\u66f4\u957f\u3002\u5047\u8bbe\u8fd9\u4f1a\u589e\u52a0\u7981\u98df\u7684\u597d\u5904\u3002\n\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u5173\u5fc3\u7684\u662f\u5403\u5f97\u591f\u591a\u3002\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u6559\u81ea\u5df1\u575a\u6301\u591a\u5403\u662f\u95f4\u6b47\u6027\u7981\u98df\u6700\u96be\u7684\u90e8\u5206\u4e4b\u4e00\u3002\u4f60\u4e5f\u8bb8\u53ef\u4ee5\u9971\u9910\u4e00\u987f\uff0c\u4f46\u5b66\u4e60\u4e00\u5468\u4e2d\u7684\u6bcf\u4e00\u5929\u90fd\u8981\u8fd9\u6837\u505a\u9700\u8981\u4e00\u70b9\u8ba1\u5212\u3001\u5927\u91cf\u7684\u70f9\u996a\u548c\u59cb\u7ec8\u5982\u4e00\u7684\u996e\u98df\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\uff0c\u5927\u591a\u6570\u5c1d\u8bd5\u95f4\u6b47\u6027\u7981\u98df\u7684\u4eba\u6700\u7ec8\u90fd\u51cf\u8f7b\u4e86\u4e00\u4e9b\u4f53\u91cd\uff0c\u56e0\u4e3a\u5c3d\u7ba1\u6bcf\u5468\u51cf\u5c11\u4e86\u51e0\u987f\u996d\uff0c\u4f46\u4ed6\u4eec\u7684\u996d\u91cf\u4ecd\u7136\u76f8\u4f3c\u3002\n\u5982\u679c\u4f60\u60f3\u51cf\u80a5\uff0c\u8fd9\u4e0d\u662f\u95ee\u9898\u3002\u5373\u4f7f\u4f60\u5bf9\u81ea\u5df1\u7684\u4f53\u91cd\u611f\u5230\u6ee1\u610f\uff0c\u5982\u679c\u4f60\u9075\u5faa\u6bcf\u5929\u6216\u6bcf\u5468\u7684\u7981\u98df\u65f6\u95f4\u8868\uff0c\u8fd9\u4e5f\u4e0d\u4f1a\u662f\u592a\u5927\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u4e00\u5468\u591a\u5929\u6bcf\u5929\u7981\u98df24\u5c0f\u65f6\uff0c\u90a3\u4e48\u4f60\u5c31\u5f88\u96be\u5728\u8282\u65e5\u91cc\u5403\u8db3\u591f\u7684\u4e1c\u897f\u6765\u5f25\u8865\u8fd9\u4e00\u70b9\u3002\n\u56e0\u6b64\uff0c\u6211\u8ba4\u4e3a\u5c1d\u8bd5\u6bcf\u5929\u95f4\u6b47\u6027\u7981\u98df\u6216\u6bcf\u5468\u6216\u6bcf\u6708\u4e00\u6b2124\u5c0f\u65f6\u7981\u98df\u662f\u66f4\u597d\u7684\u4e3b\u610f\u3002\n\u6211\u6ca1\u6709\u548c\u5973\u6027\u4e00\u8d77\u5b9e\u65bd\u95f4\u6b47\u6027\u7684\u7981\u98df\u65f6\u95f4\u8868\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u6839\u636e\u7ecf\u9a8c\u6765\u8c08\u8bba\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u6211\u542c\u8bf4\u5973\u6027\u5728\u6bcf\u5929\u95f4\u6b47\u6027\u7981\u98df\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u66f4\u5bbd\u7684\u8fdb\u98df\u7a97\u53e3\u66f4\u6709\u5229\u3002\u7537\u6027\u901a\u5e38\u4f1a\u7981\u98df16\u5c0f\u65f6\uff0c\u7136\u540e\u54038\u5c0f\u65f6\uff0c\u800c\u5973\u6027\u540310\u5c0f\u65f6\uff0c\u7981\u98df14\u5c0f\u65f6\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\u3002\u6211\u80fd\u7ed9\u4efb\u4f55\u4eba\u7684\u6700\u597d\u7684\u5efa\u8bae\uff0c\u4e0d\u53ea\u662f\u5973\u4eba\uff0c\u5c31\u662f\u53bb\u8bd5\u9a8c\uff0c\u770b\u770b\u4ec0\u4e48\u6700\u9002\u5408\u4f60\u3002\u4f60\u7684\u8eab\u4f53\u4f1a\u7ed9\u4f60\u4fe1\u53f7\u3002\u8ddf\u968f\u4f60\u7684\u8eab\u4f53\u5bf9\u4ec0\u4e48\u505a\u51fa\u79ef\u6781\u7684\u53cd\u5e94\u3002\n\u6b64\u5916\uff0c\u5982\u679c\u4f60\u662f\u5973\u6027\uff0cFacebook\u4e0a\u6709\u4e00\u4e2a\u5168\u662f\u5973\u6027\u7684\u9875\u9762\uff0c\u8ba8\u8bba\u95f4\u6b47\u6027\u7981\u98df\u3002\u6211\u76f8\u4fe1\u4f60\u53ef\u4ee5\u5728\u90a3\u91cc\u627e\u5230\u4e00\u5927\u5806\u5f88\u68d2\u7684\u7b54\u6848\u548c\u652f\u6301\u3002\n\u6211\u4e0d\u5403\u3002\u65e9\u9910\u662f\u6211\u7684\u6700\u7231\uff0c\u6240\u4ee5\u6211\u6bcf\u5929\u4e0b\u53481\u70b9\u624d\u5403\u3002\n\u53e6\u5916\uff0c\u5982\u679c\u4f60\u5728\u524d\u4e00\u5929\u665a\u4e0a\u5403\u4e86\u4e00\u987f\u4e30\u76db\u7684\u665a\u9910\uff0c\u6211\u60f3\u4f60\u4f1a\u60ca\u8bb6\u4e8e\u4f60\u65e9\u4e0a\u6709\u8fd9\u4e48\u591a\u7cbe\u529b\u3002\u4eba\u4eec\u5bf9\u95f4\u6b47\u6027\u7981\u98df\u7684\u5927\u90e8\u5206\u62c5\u5fe7\u6216\u62c5\u5fe7\u90fd\u662f\u56e0\u4e3a\u516c\u53f8\u5411\u4ed6\u4eec\u704c\u8f93\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u4ed6\u4eec\u9700\u8981\u5403\u65e9\u9910\uff0c\u6216\u8005\u4ed6\u4eec\u9700\u8981\u6bcf\u4e09\u4e2a\u5c0f\u65f6\u5403\u4e00\u6b21\u996d\u7b49\u7b49\u3002\u79d1\u5b66\u4e0d\u652f\u6301\u5b83\uff0c\u6211\u7684\u4e2a\u4eba\u7ecf\u9a8c\u4e5f\u4e0d\u652f\u6301\u5b83\u3002\n\u4f60\u53ef\u80fd\u542c\u4eba\u8bf4\u8fc7\uff0c\u4f60\u5e94\u8be5\u4e00\u5929\u5403\u516d\u987f\u996d\uff0c\u6216\u8005\u6bcf\u4e09\u4e2a\u5c0f\u65f6\u5403\u4e00\u6b21\u996d\uff0c\u6216\u8005\u8bf8\u5982\u6b64\u7c7b\u7684\u8bdd\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u5728\u5f88\u77ed\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u662f\u4e00\u4e2a\u6d41\u884c\u7684\u60f3\u6cd5\uff1a\n\u4f60\u7684\u8eab\u4f53\u5728\u52a0\u5de5\u98df\u7269\u65f6\u4f1a\u71c3\u70e7\u5361\u8def\u91cc\u3002\u56e0\u6b64\uff0c\u591a\u9910\u7b56\u7565\u80cc\u540e\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u4f60\u5403\u5f97\u66f4\u9891\u7e41\uff0c\u4f60\u4e00\u6574\u5929\u4e5f\u4f1a\u71c3\u70e7\u66f4\u591a\u7684\u5361\u8def\u91cc\u3002\u56e0\u6b64\uff0c\u591a\u5403\u51e0\u9910\u5e94\u8be5\u4f1a\u5e2e\u52a9\u4f60\u51cf\u80a5\u3002\n\u4f60\u71c3\u70e7\u7684\u5361\u8def\u91cc\u4e0e\u4f60\u8eab\u4f53\u6b63\u5728\u5904\u7406\u7684\u98df\u7269\u7684\u5927\u5c0f\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u6d88\u53166\u987f\u52a0\u8d77\u67652000\u5361\u8def\u91cc\u7684\u5c0f\u9910\u6240\u6d88\u8017\u7684\u80fd\u91cf\u76f8\u5f53\u4e8e\u6d88\u5316\u4e24\u987f1000\u5361\u8def\u91cc\u7684\u5927\u9910\u6240\u6d88\u8017\u7684\u80fd\u91cf\u3002\n\u4e0d\u7ba1\u4f60\u662f\u572810\u987f\u996d\u4e2d\u6444\u5165\u5361\u8def\u91cc\uff0c\u8fd8\u662f\u57281\u987f\u996d\u4e2d\u6444\u5165\u5361\u8def\u91cc\uff0c\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u8fd9\u592a\u75af\u72c2\u4e86\u3002\u5982\u679c\u621124\u5c0f\u65f6\u4e0d\u5403\u4e1c\u897f\uff0c\u6211\u4f1a\u6b7b\u7684\u3002\n\u8001\u5b9e\u8bf4\uff0c\u6211\u8ba4\u4e3a\u5fc3\u7406\u969c\u788d\u662f\u963b\u6b62\u4eba\u4eec\u7981\u98df\u7684\u6700\u5927\u969c\u788d\uff0c\u56e0\u4e3a\u8fd9\u5728\u5b9e\u8df5\u4e2d\u771f\u7684\u4e0d\u662f\u90a3\u4e48\u96be\u505a\u5230\u7684\u3002\n\u4ee5\u4e0b\u662f\u95f4\u6b47\u6027\u7981\u98df\u5e76\u4e0d\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u75af\u72c2\u7684\u51e0\u4e2a\u539f\u56e0\u3002\n\u9996\u5148\uff0c\u5404\u79cd\u5b97\u6559\u56e2\u4f53\u7981\u98df\u5df2\u7ecf\u6709\u51e0\u4e2a\u4e16\u7eaa\u7684\u5386\u53f2\u4e86\u3002\u51e0\u5343\u5e74\u6765\uff0c\u533b\u751f\u4eec\u4e5f\u6ce8\u610f\u5230\u4e86\u7981\u98df\u5bf9\u5065\u5eb7\u7684\u597d\u5904\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7981\u98df\u4e0d\u662f\u4ec0\u4e48\u65b0\u65f6\u5c1a\u6216\u75af\u72c2\u7684\u8425\u9500\u7b56\u7565\u3002\u5b83\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u662f\u6709\u6548\u7684\u3002\n\u5176\u6b21\uff0c\u7981\u98df\u5bf9\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u6765\u8bf4\u4f3c\u4e4e\u662f\u964c\u751f\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eba\u90a3\u4e48\u591a\u5730\u8c08\u8bba\u5b83\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6ca1\u6709\u4eba\u4f1a\u56e0\u4e3a\u544a\u8bc9\u4f60\u4e0d\u8981\u5403\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u4e0d\u8981\u5403\u4ed6\u4eec\u7684\u8865\u5145\u5242\uff0c\u6216\u8005\u4e0d\u8981\u4e70\u4ed6\u4eec\u7684\u5546\u54c1\u800c\u8d5a\u5f88\u591a\u94b1\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7981\u98df\u4e0d\u662f\u4e00\u4e2a\u5f88\u7545\u9500\u7684\u8bdd\u9898\uff0c\u6240\u4ee5\u4f60\u4e0d\u4f1a\u7ecf\u5e38\u63a5\u89e6\u5230\u5173\u4e8e\u7981\u98df\u7684\u5e7f\u544a\u548c\u8425\u9500\u3002\u7ed3\u679c\u662f\u5b83\u770b\u8d77\u6765\u6709\u4e9b\u6781\u7aef\u6216\u5947\u602a\uff0c\u5c3d\u7ba1\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\n\u7b2c\u4e09\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u7981\u98df\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u5c3d\u7ba1\u4f60\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\u4f60\u6709\u6ca1\u6709\u5728\u5468\u672b\u7761\u5230\u5f88\u665a\uff0c\u7136\u540e\u5403\u5f88\u665a\u7684\u65e9\u5348\u9910\uff1f\u6709\u4e9b\u4eba\u6bcf\u4e2a\u5468\u672b\u90fd\u8fd9\u4e48\u505a\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u5728\u524d\u4e00\u5929\u665a\u4e0a\u5403\u665a\u996d\uff0c\u7136\u540e\u76f4\u5230\u4e0a\u534811\u70b9\u6216\u4e2d\u5348\u751a\u81f3\u66f4\u665a\u624d\u5403\u4e1c\u897f\u3002\u8fd9\u662f\u4f60\u768416\u5c0f\u65f6\u7981\u98df\uff0c\u4f60\u60f3\u90fd\u6ca1\u60f3\u8fc7\u3002\n\u6700\u540e\uff0c\u6211\u5efa\u8bae\u4f60\u505a\u4e00\u4e2a24\u5c0f\u65f6\u7684\u7981\u98df\uff0c\u5373\u4f7f\u4f60\u4e0d\u6253\u7b97\u7ecf\u5e38\u95f4\u6b47\u6027\u7981\u98df\u3002\u6559\u4f60\u81ea\u5df1\u4e00\u5929\u4e0d\u5403\u4e1c\u897f\u4e5f\u80fd\u6d3b\u5f97\u5f88\u597d\uff0c\u8fd9\u662f\u5f88\u597d\u7684\u3002\u6b64\u5916\uff0c\u6b63\u5982\u6211\u5728\u6574\u7bc7\u6587\u7ae0\u4e2d\u901a\u8fc7\u591a\u9879\u7814\u7a76\u6982\u8ff0\u7684\u90a3\u6837\uff0c\u7981\u98df\u5bf9\u5065\u5eb7\u6709\u5f88\u591a\u597d\u5904\u3002\n\u901a\u8fc7\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u548c\u4e0b\u9762\u7684\u8d44\u6e90\uff0c\u4f60\u53ef\u4ee5\u5b66\u5230\u5f88\u591a\u5173\u4e8e\u95f4\u6b47\u6027\u7981\u98df\u7684\u77e5\u8bc6\uff0c\u4f46\u4e86\u89e3\u4ec0\u4e48\u5bf9\u4f60\u771f\u6b63\u6709\u6548\u7684\u6700\u597d\u65b9\u6cd5\u662f\u5b9e\u9a8c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u63a8\u8350\u4ee5\u4e0b\u8d44\u6e90\u3002\n\u9a6c\u4e01\u00b7\u4f2f\u514b\u6c49(Martin Berkhan)\u5173\u4e8e\u95f4\u6b47\u6027\u7981\u98df\u7684Leangain\u7248\u672c\u7684\u7f51\u7ad9\u975e\u5e38\u68d2\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\u5982\u679c\u4f60\u6b63\u5728\u5bfb\u627e\u51e0\u7bc7\u6587\u7ae0\u5f00\u59cb\uff0c\u6211\u4f1a\u63a8\u8350\u8fd9\u4e00\u7bc7\uff0c\u8fd9\u4e00\u7bc7\uff0c\u8fd8\u6709\u8fd9\u4e00\u7bc7\u3002\n\u5b89\u8fea\u00b7\u6469\u6839\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u7f51\u7ad9\uff0c\u62a5\u9053\u4e86\u95f4\u6b47\u6027\u7981\u98df\u7684Leangones\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\u6211\u7279\u522b\u559c\u6b22\u4ed6\u8ba1\u7b97\u5b8f\u91cf\u800c\u4e0d\u662f\u8ba1\u7b97\u5361\u8def\u91cc\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bfb\u5230\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4ec0\u4e48\u90fd\u4e0d\u7b97\u3002\u6211\u53ea\u5403\u4e1c\u897f\u3002)\u3002\n\u5728Reddit\u4e0a\u6709\u4e00\u4e2a\u975e\u5e38\u6d3b\u8dc3\u7684\u8bba\u575b\uff0c\u4eba\u4eec\u5728\u90a3\u91cc\u53d1\u5e03\u81ea\u5df1\u7684\u8fdb\u6b65\uff0c\u91c7\u7528Leangain\u98ce\u683c\u7684\u95f4\u6b47\u6027\u7981\u98df\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u4e00\u4e0b\u3002\n\u5e03\u62c9\u5fb7\u00b7\u76ae\u9686(Brad Pilon)\u5199\u4e86\u4e00\u672c\u5173\u4e8e\u95f4\u6b47\u6027\u7981\u98df\u7684\u597d\u4e66\uff0c\u4e66\u540d\u53ebEat Stop Eat\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e70\u5230\u3002\n\u6700\u540e\uff0c\u7ea6\u7ff0\u00b7\u8d1d\u62c9\u5c14\u8fea\u5173\u4e8e\u95f4\u6b47\u6027\u7981\u98df\u7684\u62a5\u544a\u662f\u5728\u5b9e\u8df5\u4e2d\u68c0\u9a8c\u8fd9\u4e9b\u60f3\u6cd5\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u3002\n\u514d\u8d39\u5956\u52b1\uff1a\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u95f4\u6b47\u6027\u7981\u98df\u5feb\u901f\u5165\u95e8\u6307\u5357\uff0c\u5176\u4e2d\u603b\u7ed3\u4e86\u95f4\u6b47\u6027\u7981\u98df\u7684\u597d\u5904\uff0c\u4ee5\u53ca\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u76ee\u6807\u4f7f\u7528\u76843\u4e2a\u7981\u98df\u65f6\u95f4\u8868\u3002\u8fd9\u662f\u4e00\u4e2a\u5feb\u901f\u76845\u9875PDF\uff0c\u60a8\u53ef\u4ee5\u4fdd\u5b58\u5e76\u5728\u4ee5\u540e\u81ea\u5df1\u5c1d\u8bd5\u65f6\u53c2\u8003\u3002\u5355\u51fb\u6b64\u5904\u514d\u8d39\u83b7\u53d6\u6307\u5357\u3002", "note_en": "I skip breakfast each day and eat two meals, the first around 1pm and the second around 8pm. Then, I fast for 16 hours until I start eating again the next day at 1pm.\n Surprisingly, since I\u2019ve started intermittent fasting I\u2019ve increased muscle mass (up 10 pounds from 205 to 215), decreased body fat (down 3% from 14% to 11%), increased explosiveness (set a personal best with a clean and jerk of 253 pounds a few months back), and decreased the amount of time I\u2019ve spent training (down from 7.5 hours per week to 2.5 hours per week).\n In other words, I\u2019m stronger, leaner, and more explosive even though I go to the gym less and eat less.\n  How is this possible? Isn\u2019t skipping breakfast bad for you? Why would anyone fast for 16 hours every day? What are the benefits? Is there any science behind this or are you just crazy? Is it dangerous?\n Slow down, friend. I\u2019ve been known to do some crazy things, but this is totally legit. It\u2019s easy to implement into your lifestyle and there are tons of health benefits. In this post, I\u2019m going to break down intermittent fasting and everything that goes with it.\n Free Bonus: I created an Intermittent Fasting Quick Start Guide with a summary of the benefits of intermittent fasting and 3 fasting schedules you can use depending on your goals. It\u2019s a quick 5 page PDF you can save and reference later as you try this yourself.  Click here to get the guide, free.\n  Intermittent fasting is not a diet, it\u2019s a pattern of eating. It\u2019s a way of scheduling your meals so that you get the most out of them. Intermittent fasting doesn\u2019t change  what you eat, it changes  when you eat.\n  Well, most notably, it\u2019s a great way to get lean without going on a crazy diet or cutting your calories down to nothing. In fact, most of the time you\u2019ll try to keep your calories the same when you start intermittent fasting. (Most people eat bigger meals during a shorter time frame.) Additionally, intermittent fasting is a good way to keep muscle mass on while getting lean.\n With all that said, the main reason people try intermittent fasting is to lose fat. We\u2019ll talk about how intermittent fasting leads to fat loss in a moment.\n Perhaps most importantly, intermittent fasting is one of the simplest strategies we have for taking bad weight off while keeping good weight on because it requires very little behavior change. This is a very good thing because it means intermittent fasting falls into the category of \u201csimple enough that you\u2019ll actually do it, but meaningful enough that it will actually make a difference.\u201d\n   To understand how intermittent fasting leads to fat loss we first need to understand the difference between the fed state and the fasted state.\n Your body is in the fed state when it is digesting and absorbing food. Typically, the fed state starts when you begin eating and lasts for three to five hours as your body digests and absorbs the food you just ate. When you are in the fed state, it\u2019s very hard for your body to burn fat because your insulin levels are high.\n After that timespan, your body goes into what is known as the post\u2013absorptive state, which is just a fancy way of saying that your body isn\u2019t processing a meal. The post\u2013absorptive state lasts until 8 to 12 hours after your last meal, which is when you enter the fasted state. It is much easier for you body to burn fat in the fasted state because your insulin levels are low.\n When you\u2019re in the fasted state your body can burn fat that has been inaccessible during the fed state.\n Because we don\u2019t enter the fasted state until 12 hours after our last meal, it\u2019s rare that our bodies are in this fat burning state. This is one of the reasons why many people who start intermittent fasting will lose fat without changing what they eat, how much they eat, or how often they exercise. Fasting puts your body in a fat burning state that you rarely make it to during a normal eating schedule.\n    I\u2019m big on behavior change, simplicity, and reducing stress. Intermittent fasting provides additional simplicity to my life that I really enjoy. When I wake up, I don\u2019t worry about breakfast. I just grab a glass of water and start my day.\n I enjoy eating and I don\u2019t mind cooking, so eating three meals a day was never a hassle for me. However, intermittent fasting allows me to eat one less meal, which also means planning one less meal, cooking one less meal, and stressing about one less meal. It makes life a bit simpler and I like that.\n  Scientists have long known that restricting calories is a way of lengthening life. From a logical standpoint, this makes sense. When you\u2019re starving, your body finds ways to extend your life.\n There\u2019s just one problem: who wants to starve themselves in the name of living longer?\n I don\u2019t know about you, but I\u2019m interested in  enjoying a long life. Starving myself doesn\u2019t sound that appetizing.\n The good news is that intermittent fasting activates many of the same mechanisms for extending life as calorie restriction. In other words, you get the benefits of a longer life without the hassle of starving.\n Way back in 1945 it was discovered that intermittent fasting extended life in mice. (Here\u2019s  the study.) More recently,  this study found that alternate day intermittent fasting led to longer lifespans.\n  This one is up for debate because there hasn\u2019t been a lot of research and experimentation done on the relationship between cancer and fasting. Early reports, however, look positive.\n This study of 10 cancer patients suggests that the side effects of chemotherapy may be diminished by fasting before treatment. This finding is also supported by  another study which used alternate day fasting with cancer patients and concluded that fasting before chemotherapy would result in better cure rates and fewer deaths.\n Finally,  this comprehensive analysis of many studies on fasting and disease has concluded that fasting appears to not only reduce the risk of cancer, but also cardiovascular disease.\n  The reason most diets fail isn\u2019t because we switch to the wrong foods, it\u2019s because we don\u2019t actually follow the diet over the long term. It\u2019s not a nutrition problem, it\u2019s a behavior change problem.\n This is where intermittent fasting shines because it\u2019s remarkably easy to implement once you get over the idea that you need to eat all the time. For example,  this study found that intermittent fasting was an effective strategy for weight loss in obese adults and concluded that \u201csubjects quickly adapt\u201d to an intermittent fasting routine.\n I like the quote below from Dr. Michael Eades, who has tried intermittent fasting himself, on the difference between trying a diet and trying intermittent fasting.\n \u201cDiets are easy in the contemplation, difficult in the execution. Intermittent fasting is just the opposite \u2014 it\u2019s difficult in the contemplation but easy in the execution.\n Most of us have contemplated going on a diet. When we find a diet that appeals to us, it seems as if it will be a breeze to do. But when we get into the nitty gritty of it, it becomes tough. For example, I stay on a low\u2013carb diet almost all the time. But if I think about going on a low\u2013fat diet, it looks easy. I think about bagels, whole wheat bread and jelly, mashed potatoes, corn, bananas by the dozen, etc. \u2014 all of which sound appealing. But were I to embark on such a low\u2013fat diet I would soon tire of it and wish I could have meat and eggs. So a diet is easy in contemplation, but not so easy in the long\u2013term execution.\n Intermittent fasting is hard in the contemplation, of that there is no doubt. \u201cYou go without food for 24 hours?\u201d people would ask, incredulously when we explained what we were doing. \u201cI could never do that.\u201d But once started, it\u2019s a snap. No worries about what and where to eat for one or two out of the three meals per day. It\u2019s a great liberation. Your food expenditures plummet. And you\u2019re not particularly hungry. \u2026 Although it\u2019s tough to overcome the idea of going without food, once you begin the regimen, nothing could be easier.\u201d\n  In my opinion, the ease of intermittent fasting is best reason to give it a try. It provides a wide range of health benefits without requiring a massive lifestyle change.\n   If you\u2019re considering giving fasting a shot, there are a few different options for working it into your lifestyle.\n  Most of the time, I follow the Leangains model of intermittent fasting, which uses a 16\u2013hour fast followed by an 8\u2013hour eating period. This model of daily intermittent fasting was popularized by Martin Berkhan of  Leangains.com, which is where the name originated.\n It doesn\u2019t matter when you start your 8\u2013hour eating period. You can start at 8am and stop at 4pm. Or you start at 2pm and stop at 10pm. Do whatever works for you. I tend to find that eating around 1pm and 8pm works well because those times allow me to eat lunch and dinner with friends and family. Breakfast is typically a meal that I eat on my own, so skipping it isn\u2019t a big deal.\n  Because daily intermittent fasting is done every day it becomes very easy to get into the habit of eating on this schedule. Right now, you\u2019re probably eating around the same time every day without thinking about it. Well, with daily intermittent fasting it\u2019s the same thing, you just learn to not eat at certain times, which is remarkably easy.\n One potential disadvantage of this schedule is that because you typically cut out a meal or two out of your day, it becomes more difficult to get the same number of calories in during the week. Put simply, it\u2019s tough to teach yourself to eat bigger meals on a consistent basis. The result is that many people who try this style of intermittent fasting end up losing weight. That can be a good thing or a bad thing, depending on your goals.\n This is probably a good time to mention that while I have practiced intermittent fasting consistently for the last year, I\u2019m not fanatical about my diet. I work on building healthy habits that guide my behavior 90% of the time, so that I can do whatever I feel like during the other 10%. If I come over to your house to watch the football game and we order pizza at 11pm, guess what? I don\u2019t care that it\u2019s outside my feeding period, I\u2019m eating it.\n  One of the best ways to get started with intermittent fasting is to do it once per week or once per month. The occasional fast has been shown to lead to many of the benefits of fasting we\u2019ve already talked about, so even if you don\u2019t use it to cut down on calories consistently there are still many other health benefits of fasting.\n The graphic below shows one example of how a weekly intermittent fast might play out.\n  In this example, lunch on Monday is your last meal of the day. You then fast until lunch on Tuesday. This schedule has the advantage of allowing you to eat everyday of the week while still reaping the benefits of fasting for 24 hours. It\u2019s also less likely that you\u2019ll lose weight because you are only cutting out two meals per week. So, if you\u2019re looking to bulk up or keep weight on, then this is a great option.\n I\u2019ve done 24\u2013hour fasts in the past (I just did one last month) and there are a wide range of variations and options for making it work into your schedule. For example, a long day of travel or the day after a big holiday feast are often great times to throw in a 24\u2013hour fast.\n Perhaps the biggest benefit of doing a 24\u2013hour fast is getting over the mental barrier of fasting. If you\u2019ve never fasted before, successfully completing your first one helps you realize that you won\u2019t die if you don\u2019t eat for a day.\n   For example, in the graphic below you would eat dinner on Monday night and then not eat again until Tuesday evening. On Wednesday, however, you would eat all day and then start the 24\u2013hour fasting cycle again after dinner on Wednesday evening. This allows you to get long fast periods on a consistent basis while also eating at least one meal every day of the week.\n  This style of intermittent fasting seems to be used often in research studies, but from what I have seen it isn\u2019t very popular in the real world. I\u2019ve never tried alternate day fasting myself and I don\u2019t plan to do so.\n The benefit of alternate day intermittent fasting is that it gives you longer time in the fasted state than the Leangains style of fasting. Hypothetically, this would increase the benefits of fasting.\n In practice, however, I would be concerned with eating enough. Based on my experience, teaching yourself to consistently eat more is one of the harder parts of intermittent fasting. You might be able to feast for a meal, but learning to do so every day of the week takes a little bit of planning, a lot of cooking, and consistent eating. The end result is that most people who try intermittent fasting end up losing some weight because the size of their meals remains similar even though a few meals are being cut out each week.\n If you\u2019re looking to lose weight, this isn\u2019t a problem. And even if you\u2019re happy with your weight, this won\u2019t prove to be too much of an issue if you follow the daily fasting or weekly fasting schedules. However, if you\u2019re fasting for 24 hours per day on multiple days per week, then it\u2019s going to be very difficult to eat enough of your feast days to make up for that.\n As a result, I think it\u2019s a better idea to try daily intermittent fasting or a single 24\u2013hour fast once per week or once per month.\n    I haven\u2019t worked with women on implementing an intermittent fasting schedule, so I can\u2019t speak from experience on this one.\n That said, I have heard that women may find a wider window of eating to be more favorable when doing daily intermittent fasting. While men will typically fast for 16 hours and then eat for 8 hours, women may find better results by eating for 10 hours and fasting for 14 hours. The best advice I can give anyone, not just women, is to experiment and see what works best for you. Your body will give you signals. Follow what your body responds favorably to.\n Also, if you\u2019re a female, there is an  all\u2010female page on Facebook that discusses intermittent fasting. I\u2019m sure you could find a ton of great answers and support there.\n  I don\u2019t. Breakfast foods are my favorite, so I just eat them at 1pm each day.\n Also, if you eat a big dinner the night before, I think you\u2019ll be surprised by how much energy you have in the morning. Most of the worries or concerns that people have about intermittent fasting are due to the fact that they have had it pounded into them by companies that they need to eat breakfast or they need to eat every three hours and so on. The science doesn\u2019t support it and neither do my personal experiences.\n  You may have heard people say that you should have six meals per day or eat every 3 hours or something like that.\n Here\u2019s why this was a popular idea for a brief period of time:\n Your body burns calories when it\u2019s processing food. So the thought behind the more meals strategy was that if you ate more frequently, you would also burn more calories throughout the day. Thus, eating more meals should help you lose weight.\n  The amount of calories you burn is proportional to the size of the meal your body is processing. So, digesting six smaller meals that add up to 2000 calories burns the same amount of energy as processing two large meals of 1000 calories each.\n It doesn\u2019t matter if you get your calories in 10 meals or in 1 meal, you\u2019ll end up in the same place.\n This is crazy. If I didn\u2019t eat for 24 hours, I\u2019d die.\n Honestly, I think the mental barrier is the biggest thing that prevents people from fasting because it\u2019s really not that hard to do in practice.\n Here are a few reasons why intermittent fasting isn\u2019t as crazy as you think it is.\n First, fasting has been practiced by various religious groups for centuries. Medical practitioners have also noted the health benefits of fasting for thousands of years. In other words, fasting isn\u2019t some new fad or crazy marketing ploy. It\u2019s been around for a long time and it actually works.\n Second, fasting seems foreign to many of us simply because nobody talks about it that much. The reason for this is that nobody stands to make much money by telling you to not eat their products, not take their supplements, or not buy their goods. In other words, fasting isn\u2019t a very marketable topic and so you\u2019re not exposed to advertising and marketing on it very often. The result is that it seems somewhat extreme or strange, even though its really not.\n Third, you\u2019ve probably already fasted many times, even though you don\u2019t know it. Have you ever slept in late on the weekends and then had a late brunch? Some people do this every weekend. In situations like these, we often eat dinner the night before and then don\u2019t eat until 11am or noon or even later. There\u2019s your 16\u2013hour fast and you didn\u2019t even think about it.\n Finally, I would suggest doing one 24\u2013hour fast even if you don\u2019t plan on doing intermittent fasting frequently. It\u2019s good to teach yourself that you\u2019ll survive just fine without food for a day. Plus, as I\u2019ve outlined with multiple research studies throughout this article, there are a lot of health benefits of fasting.\n  You can learn a lot about intermittent fasting by reading articles like this one and the resources below, but the best way to learn about what actually works for you is to experiment. That said, I\u2019d recommend the following resources.\n Martin Berkhan\u2019s site on the Leangains version of intermittent fasting is great. You can find it  here. If you\u2019re looking for a few articles to start with, I\u2019d recommend  this one,  this one, and  this one.\n Andy Morgan has also created an excellent site that covers the Leangains model of intermittent fasting, which you can  find here. I particularly like his method of counting macros instead of counting calories, which you can read about  here. (That said, I don\u2019t count anything. I just eat.)\n There is a very active forum on Reddit where people post their own progress with the Leangains style of intermittent fasting. You can check that out  here.\n Brad Pilon wrote a good book on intermittent fasting called  Eat Stop Eat, which you can buy  here.\n And finally, John Berardi\u2019s report on intermittent fasting is a great example of testing the ideas in practice. You can  download it here.\n  Free Bonus: I created an Intermittent Fasting Quick Start Guide with a summary of the benefits of intermittent fasting and 3 fasting schedules you can use depending on your goals. It\u2019s a quick 5 page PDF you can save and reference later as you try this yourself.  Click here to get the guide, free.", "posttime": "2020-05-25 01:03:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5165\u95e8,guide,\u7981\u98df", "title": "\u95f4\u6b47\u6027\u7981\u98df\u5165\u95e8\u6307\u5357", "title_en": "The Beginner's Guide to Intermittent Fasting", "transed": 1, "url": "http://jamesclear.com/the-beginners-guide-to-intermittent-fasting", "via": "", "real_tags": ["\u5165\u95e8", "guide", "\u7981\u98df"]}, {"category": "", "categoryclass": "", "imagename": "92b577f52683871a0505ea147e588827.jpeg", "infoid": 1003531, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Twitter\u548cSquare\u7684\u79d1\u6280\u4ebf\u4e07\u5bcc\u7fc1\u8001\u677f\u6770\u514b\u00b7\u591a\u5c14\u897f(Jack Dorsey)\u8868\u793a\uff0c\u8fd9\u662f\u56e0\u4e3a\u4eba\u5de5\u667a\u80fd\u5f88\u5feb\u5c31\u4f1a\u7f16\u5199\u81ea\u5df1\u7684\u8f6f\u4ef6\u3002\u8fd9\u5c06\u4f7f\u4e00\u4e9b\u521d\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u9677\u5165\u56f0\u5883\u3002\n\u5728\u5468\u56db\u53d1\u5e03\u7684\u4e00\u671f\u64ad\u5ba2\u4e2d\uff0c\u591a\u5c14\u897f\u544a\u8bc9\u524d\u6c11\u4e3b\u515a\u603b\u7edf\u5019\u9009\u4eba\u5b89\u5fb7\u9c81\u00b7\u6768\uff0c\u5728\u8ba8\u8bba\u81ea\u52a8\u5316\u5c06\u5982\u4f55\u53d6\u4ee3\u4eba\u7c7b\u4ece\u4e8b\u7684\u5de5\u4f5c\u65f6\uff0c\u6211\u4eec\u8c08\u8bba\u4e86\u5f88\u591a\u5173\u4e8e\u81ea\u52a8\u9a7e\u9a76\u5361\u8f66\u7b49\u7b49\u7684\u8bdd\u9898\u3002\n\u591a\u5c14\u897f\u544a\u8bc9\u6768\uff0c\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u5f88\u591a\u76ee\u6807\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u81ea\u884c\u7f16\u5199\u8f6f\u4ef6\uff0c\u8fd9\u6837\u5f88\u591a\u5165\u95e8\u7ea7\u7f16\u7a0b\u5de5\u4f5c\u5c31\u4e0d\u518d\u90a3\u4e48\u91cd\u8981\u4e86\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u6c42\u804c\u7f51\u7ad9GlassDoor\u53d1\u5e03\u7684\u4e00\u9879\u6700\u65b0\u6392\u540d\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u662f2020\u5e74\u7f8e\u56fd\u7b2c\u4e03\u5927\u6700\u4f73\u5de5\u4f5c\uff0c\u57fa\u672c\u5de5\u8d44\u4e2d\u503c\u4e3a105,563\u7f8e\u5143\u3002(\u8fd9\u4e00\u6392\u540d\u662f\u57fa\u4e8e\u5de5\u8d44\u3001\u5de5\u4f5c\u6ee1\u610f\u5ea6\u3001\u804c\u4f4d\u7a7a\u7f3a\u6570\u91cf\u7b49\u4e00\u7cfb\u5217\u56e0\u7d20\u5f97\u51fa\u7684\u3002)\u3002\n\u591a\u5c14\u897f\u544a\u8bc9\u6768\uff0c\u4ed6\u662f\u5168\u6c11\u57fa\u672c\u6536\u5165(UBI)\u7684\u5021\u5bfc\u8005\uff0c\u5982\u679c\u4eba\u4eec\u56e0\u4e3a\u81ea\u52a8\u5316\u800c\u5931\u53bb\u6536\u5165\uff0c\u8fd9\u79cd\u514d\u8d39\u73b0\u91d1\u652f\u4ed8\u53ef\u80fd\u662f\u4e00\u4e2a\u53ef\u4ee5\u7ad9\u7a33\u811a\u8ddf\u7684\u4e0b\u9650\u3002\n\u591a\u5c14\u897f\u8bf4\uff0c\u6bcf\u6708\u7684\u6d25\u8d34\u53ef\u4ee5\u8ba9\u88ab\u89e3\u96c7\u7684\u5458\u5de5\u611f\u5230\u5b89\u5fc3\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u5b69\u5b50\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u5b66\u4e60\u65b0\u6280\u80fd\u8fc7\u6e21\u5230\u8fd9\u4e2a\u65b0\u4e16\u754c\u7684\u540c\u65f6\uff0c\u5403\u9971\u4ed6\u4eec\u7684\u5b69\u5b50\u3002\u6839\u636e\u591a\u5c14\u897f\u7684\u8bf4\u6cd5\uff0cUBI\u4e0d\u662f\u4e0d\u5de5\u4f5c\u7684\u501f\u53e3\uff0c\u800c\u662f\u4e00\u6761\u751f\u547d\u7ebf\u3002\n\u5f53\u7136\uff0c\u5176\u4ed6\u4eba\u4e0d\u540c\u610f\u3002\u6279\u8bc4\u8005\u4e89\u8fa9\u8bf4\uff0cUBI\u9996\u5148\u662f\u6602\u8d35\u7684\uff0c\u4f46\u5b83\u4e5f\u963b\u788d\u4e86\u4eba\u4eec\u4ece\u4e8b\u5de5\u4f5c\uff0c\u4ece\u800c\u5265\u593a\u4e86\u4eba\u4eec\u5728\u793e\u4f1a\u4e0a\u7684\u4f7f\u547d\u611f\u3002\n\u591a\u5c14\u897f\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u9884\u6d4b\u4eba\u5de5\u667a\u80fd\u53d6\u4ee3\u7684\u4e0d\u4ec5\u4ec5\u662f\u5feb\u9910\u6536\u94f6\u5458\u548c\u5361\u8f66\u53f8\u673a\u7684\u4eba\u3002\n\u53bb\u5e7411\u6708\uff0c\u5e03\u9c81\u91d1\u65af\u5b66\u4f1a\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u663e\u793a\uff0c\u4eba\u5de5\u667a\u80fd\u5c06\u65e5\u76ca\u5371\u53ca\u767d\u9886\u7684\u5de5\u4f5c\u3002\n\u6211\u4eec\u7684\u5206\u6790\u663e\u793a\uff0c\u62e5\u6709\u7814\u7a76\u751f\u6216\u4e13\u4e1a\u5b66\u4f4d\u7684\u5458\u5de5\u63a5\u89e6\u4eba\u5de5\u667a\u80fd\u7684\u51e0\u7387\u51e0\u4e4e\u662f\u53ea\u6709\u9ad8\u4e2d\u5b66\u5386\u7684\u5458\u5de5\u7684\u56db\u500d\u3002\u5e03\u9c81\u91d1\u65af\u5b66\u4f1a\u7684\u8bba\u6587\u79f0\uff0c\u6309\u6559\u80b2\u7a0b\u5ea6\u8861\u91cf\uff0c\u62e5\u6709\u5b66\u58eb\u5b66\u4f4d\u7684\u4eba\u63a5\u89e6\u4eba\u5de5\u667a\u80fd\u7684\u98ce\u9669\u6700\u5927\uff0c\u662f\u53ea\u6709\u9ad8\u4e2d\u5b66\u5386\u7684\u5458\u5de5\u76845\u500d\u591a\u3002\n\u5e03\u9c81\u91d1\u65af\u5b66\u4f1a(Brookings Institute)\u7684\u62a5\u544a\u6839\u636e\u804c\u4e1a\u5bf9\u4eba\u5de5\u667a\u80fd\u7684\u76f8\u5bf9\u66b4\u9732\u7a0b\u5ea6\u5bf9\u804c\u4e1a\u8fdb\u884c\u4e86\u6392\u540d\uff0c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5458\u662f\u6392\u540d\u7b2c\u4e09\u7684\u66b4\u9732\u5728\u6700\u5927\u98ce\u9669\u4e2d\u7684\u804c\u4e1a\uff0c\u4ec5\u6b21\u4e8e\u5e02\u573a\u7814\u7a76\u5206\u6790\u5e08\u548c\u9500\u552e\u7ecf\u7406\u3002", "note_en": "That&#39;s because artificial intelligence will soon write its own software, according to  Jack Dorsey, the tech billionaire boss of  Twitter and  Square. And that&#39;s going to put some beginning-level software engineers in a tough spot.\n  &#34;We talk a lot about the self-driving trucks in and whatnot&#34; when discussing how automation will replace jobs held by humans, Dorsey told former Democratic presidential hopeful Andrew Yang on an episode of the &#34;Yang Speaks&#34; podcast published Thursday.\n  &#34;A lot of the goals of machine learning and deep learning is to write the software itself over time so a lot of entry-level programming jobs will just not be as relevant anymore,&#34; Dorsey told Yang.\n  In fact, software engineer is the seventh best jobs in the country for 2020,\u00a0according\u00a0to\u00a0a\u00a0 ranking\u00a0by job site Glassdoor, with a median base salary of $105,563. (The  ranking is based on a combination of factors including salary, job satisfaction, number of job openings and more.)\n  Dorsey told Yang, who is an advocate for universal basic income, or UBI, that such free cash payments could be a &#34;floor&#34; for people to stand on if they lose their income due to automation.\n A monthly stipend could provide ousted workers &#34;peace of mind&#34; that they will be able to &#34;eat and feed their children while they are learning how to transition into this new world&#34; by learning new skills, Dorsey said. UBI is not an excuse to not work, but rather a lifeline, according to Dorsey.\n Of course, other disagree. Critics argue that UBI is first of all expensive, but also that it  disincentives people to hold jobs, thereby removing peoples&#39; sense of purpose in society.\n And Dorsey is not alone in his predictions that artificial intelligence displace more than fast food cashiers and truck drivers.\n In November, the Brookings Institute released a report showing that artificial intelligence will increasingly jeopardize &#34;white collar&#34; jobs.\n &#34;Our analysis shows that workers with graduate or professional degrees will be almost four times as exposed to AI as workers with just a high school degree. Holders of bachelor&#39;s degrees will be the most exposed by education level, more than five times as exposed to AI than workers with just a high school degree,&#34;  the Brookings Institute paper says.\n The Brookings Institute report  ranked professions by their relative exposure to artificial intelligence, and computer programmers were  the third most exposed occupation listed, behind market research analysts and sales managers.", "posttime": "2020-05-25 00:49:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "programming,\u7f16\u7a0b,\u4eba\u5de5\u667a\u80fd,\u5b89\u5fb7\u9c81,dorsey", "title": "\u6770\u514b\u00b7\u591a\u5c14\u897f\u544a\u8bc9\u5b89\u5fb7\u9c81\u00b7\u6768\uff1a\u201c\u4eba\u5de5\u667a\u80fd\u662f\u6765\u627e\u7f16\u7a0b\u5de5\u4f5c\u7684\u3002\u201d", "title_en": "Jack Dorsey Tells Andrew Yang: 'AI is Coming For Programming Jobs'", "transed": 1, "url": "https://www.cnbc.com/2020/05/22/jack-dorsey-ai-will-jeopardize-entry-level-software-engineer-jobs.html", "via": "", "real_tags": ["\u7f16\u7a0b", "\u4eba\u5de5\u667a\u80fd", "\u5b89\u5fb7\u9c81", "dorsey"]}, {"category": "", "categoryclass": "", "imagename": "67a6c15650d259583124d024bc5bdf77.jpg", "infoid": 1003530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5c31\u50cf\u5458\u5de5\u7b14\u8bb0\u4e00\u6837\uff0c\u201d\u5f00\u59cb\u4e8e1973\u5e7412\u6708\u53d1\u5e03\u7684\u4e00\u6b3e\u65b0\u7684IBM SElectric\u6253\u5b57\u673a\u5143\u4ef6\uff0c\u7528\u4e8e\u8bb0\u5f55\u821e\u8e48\u548c\u52a8\u4f5c\u3002\n\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u8fd9\u4e2a\u5143\u7d20\u662f\u7531IBM\u4e0e\u7ebd\u7ea6\u5e02\u821e\u8e48\u7b26\u53f7\u5c40\u5408\u4f5c\u5f00\u53d1\u7684\uff0c\u76ee\u7684\u662f\u56de\u7b54\u4e00\u4e2a\u201c\u957f\u671f\u56f0\u6270\u7f16\u821e\u548c\u8001\u5e08\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5728\u4e0d\u8bc9\u8bf8\u8017\u65f6\u7684\u624b\u7ed8\u7684\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u51c6\u786e\u5730\u8bb0\u5f55\u821e\u8005\u7684\u8eab\u4f53\u52a8\u4f5c\u3002\u201d\n\u8bb0\u5f55\u8fd0\u52a8\u7684\u201c\u79d1\u5b66\u65b9\u6cd5\u201d\u662f\u901a\u8fc7\u62bd\u8c61\u7b26\u53f7\u8bb0\u5f55\u8eab\u4f53\u8fd0\u52a8\u3002\nIBM\u57281961\u5e74\u63a8\u51fa\u4e86\u7535\u52a8\u6253\u5b57\u673a\uff0c\u4ee5\u6253\u5b57\u5143\u4ef6\u6216\u6253\u5b57\u7403\u4e3a\u7279\u8272\u3002\u6253\u5b57\u673a\uff0c\u4e00\u79cd\u5305\u542b\u952e\u76d8\u4e0a\u6240\u6709\u5b57\u6bcd\u548c\u7b26\u53f7\u7684\u7d27\u51d1\u88c5\u7f6e\uff0c\u5728\u51fb\u6253\u524d\u65cb\u8f6c\u5e76\u65cb\u8f6c\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u5b83\u53d6\u4ee3\u4e86\u5355\u72ec\u7684\u6253\u5b57\u6761\uff0c\u8fd9\u4e9b\u6253\u5b57\u6761\u4f1a\u6446\u52a8\u8d77\u6765\uff0c\u6253\u5728\u5f69\u5e26\u548c\u9875\u9762\u4e0a\u3002\n\u7535\u52a8\u6253\u5b57\u673a\u53ca\u5176\u540e\u4ee3\u5c06\u7ee7\u7eed\u4e3b\u5bfc\u6253\u5b57\u673a\u5e02\u573a\u8fbe\u6570\u5341\u5e74\u4e4b\u4e45\u3002\u67e5\u5c14\u65af\u00b7\u8fea\u94a6\u591a\u592b(Charles Ditchendorf)\u4e8e1966\u5e74\u52a0\u5165IBM\u7684\u529e\u516c\u4ea7\u54c1\u90e8\uff0c\u8be5\u90e8\u95e8\u8d1f\u8d23\u8bbe\u8ba1\u548c\u5236\u9020SElectric\u3002\n\u8fea\u94a6\u591a\u592b\u5728\u63a5\u53d7\u7535\u8bdd\u91c7\u8bbf\u65f6\u8bf4\uff1a\u201c\u6253\u5b57\u673a\u662f\u4e00\u9879\u975e\u5e38\u6709\u8da3\u7684\u6280\u672f\u7a81\u7834\u3002\u201d\u201c\u4ed6\u4eec\u5728\u5851\u6599\u90e8\u4ef6\u4e0a\u6d82\u4e0a\u4e00\u5c42\u91d1\u5c5e\u6d82\u5c42\uff0c\u4f7f\u5176\u5177\u6709\u8010\u7528\u6027\u3002\u6211\u4e0d\u8bb0\u5f97\u6709\u8c01\u7a7f\u8fc7\u8fd9\u6837\u7684\u8863\u670d\u3002\u201c\u3002\u9664\u4e86\u8010\u7528\u6027\uff0cSElectric Typeball\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u7075\u6d3b\u6027\uff1a\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u66f4\u6362\uff0c\u56e0\u6b64\u5ba2\u6237\u53ef\u4ee5\u8ba2\u8d2d\u5e26\u6709\u5b9a\u5236\u5b57\u4f53\u548c\u7b26\u53f7\u7684Typeball\u3002\n\u8fea\u94a6\u591a\u592b\u8bb0\u5f97\u821e\u8e48\u6253\u5b57\u7403\u7684\u516c\u544a\uff0c\u56e0\u4e3a\u5b83\u662f\u5982\u6b64\u72ec\u7279\u3002Typeball\u6709\u7279\u6b8a\u7684Labanotation\u7b26\u53f7\uff0c\u7531\u5308\u7259\u5229\u821e\u8e48\u5bb6/\u7f16\u821e\u9c81\u9053\u592b\u00b7\u62c9\u73ed\u572820\u4e16\u7eaa20\u5e74\u4ee3\u5f00\u53d1\uff0c\u7528\u4e8e\u5206\u6790\u548c\u8bb0\u5f55\u52a8\u4f5c\u548c\u821e\u8e48\u3002\u4ed6\u8bf4\uff0c\u6253\u5b57\u7403\u4e0a\u6709\u4e00\u4e2a\u683c\u5b50\uff0c\u201c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5f04\u6e05\u695a\u5982\u4f55\u628a\u52a8\u4f5c\u653e\u5728\u4e00\u8d77\u3002\u201d\n\u7b26\u53f7\u7684\u4f4d\u7f6e\u663e\u793a\u4e86\u8eab\u4f53\u7684\u54ea\u4e2a\u90e8\u4f4d-\u624b\u81c2\u3001\u817f\u3001\u8eaf\u5e72-\u5c06\u88ab\u4f7f\u7528\u3002\u7b26\u53f7\u7684\u5f62\u72b6\u8868\u793a\u65b9\u5411\u3002\u7b26\u53f7\u7684\u9634\u5f71\u663e\u793a\u624b\u81c2\u6216\u817f\u7684\u6c34\u5e73\u3002\u5b83\u7684\u957f\u5ea6\u63a7\u5236\u7740\u4e00\u4e2a\u52a8\u4f5c\u7684\u65f6\u95f4\u4ef7\u503c\u3002\n\u201c\u6211\u7684\u611f\u89c9\u662f\uff0cIBM\u7684\u67d0\u4e2a\u91cd\u8981\u4eba\u7269\u53ef\u80fd\u4e0e\u4e00\u5bb6\u821e\u8e48\u516c\u53f8\u6709\u5173\u7cfb\uff0c\u201d\u8fea\u94a6\u591a\u592b\u8bf4\u3002\u201c\u4e5f\u8bb8\u662f\u4f5c\u4e3a\u4e00\u540d\u5fd7\u613f\u8005\u6216\u8463\u4e8b\u4f1a\u6210\u5458\u3002\u201d\u4ed6\u8ba4\u4e3aIBM\u521b\u9020\u4e86\u8fd9\u4e2a\u7279\u6b8a\u7684\u6253\u5b57\u5143\u7d20\u4f5c\u4e3a\u4e00\u9879\u516c\u5171\u670d\u52a1\u3002\u201c\u6709\u4eba\u5e2e\u4e86\u9700\u8981\u5b83\u7684\u4eba\u7684\u5fd9\u3002\u201d\n\u6253\u5b57\u5143\u7d20\u670988\u79cd\u4e0d\u540c\u7684\u7b26\u53f7\uff0c\u53ef\u4ee5\u6392\u5217\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u8bcd\u6c47\uff0c\u7528\u4e8e\u8bb0\u5f55\u4efb\u4f55\u7c7b\u578b\u7684\u52a8\u4f5c\uff0c\u4ece\u82ad\u857e\u821e\u5230\u73b0\u4ee3\uff0c\u5230\u6c11\u65cf\uff0c\u751a\u81f3\u6c11\u95f4\u3002\u800c\u4e14\u52a8\u4f5c\u7684\u8303\u56f4\u8fdc\u8fdc\u8d85\u51fa\u4e86\u821e\u8e48\uff1a\u62c9\u5df4\u8bfa\u6cd5\u8fd8\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u8fd0\u52a8\u3001\u884c\u4e3a\u79d1\u5b66\u3001\u7406\u7597\u751a\u81f3\u5de5\u4e1a\u64cd\u4f5c\u7b49\u9886\u57df\u7684\u52a8\u4f5c\u3002\u5728\u5ba3\u5e03\u65f6\uff0c\u821e\u8e48Typeball\u7684\u552e\u4ef7\u4e3a18\u7f8e\u5143(\u4eca\u5929\uff0c\u7565\u9ad8\u4e8e100\u7f8e\u5143)\u3002\u6839\u636e\u65b0\u95fb\u7a3f\uff0c\u8fd9\u4e00\u65b0\u5143\u7d20\u201c\u52a0\u5165\u4e86IBM\u4e3a\u6280\u672f\u5b66\u79d1\u8bbe\u8ba1\u7684\u8d8a\u6765\u8d8a\u591a\u7684\u7279\u6b8a\u7528\u9014\u6253\u5b57\u5b57\u4f53\u7684\u96c6\u5408\u4e2d\u201d\u3002\n\u201c\u636e\u6211\u6240\u77e5\uff0c\u6211\u6ca1\u6709\u5356\u51fa\u4e00\u8f86\uff0c\u201d\u8fea\u94a6\u591a\u592b\u8bf4\u3002\u4ed6\u4e5f\u4e0d\u786e\u5b9a\u5230\u5e95\u5356\u51fa\u4e86\u591a\u5c11\u3002\n\u7136\u800c\uff0c\u4ed6\u786e\u5b9e\u9500\u552e\u4e86\u5176\u4ed6\u5b9a\u5236\u5143\u7d20\u548c\u4ea7\u54c1-\u4f8b\u5982\u76f2\u6587\u6253\u5b57\u673a\u3002\u4ed6\u8bb0\u5f97\u6709\u4e00\u4e2a\u7eff\u8272\u7684\u5927\u6d3b\u9875\u5939\uff0c\u4e0a\u9762\u6709\u4e3a\u6253\u5b57\u673a\u8bbe\u8ba1\u7684\u6bcf\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e00\u4e2a\u6309\u5b57\u4f53\u98ce\u683c\u6392\u5e8f\u7684\u89c6\u89c9\u793a\u4f8b\u3002\n\u201c\u5982\u679c\u6709\u4eba\u8bf4\uff0c\u6211\u9700\u8981\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u4f60\u4f1a\u628a\u6d3b\u9875\u5939\u62ff\u51fa\u6765\uff0c\u770b\u770b\u6709\u6ca1\u6709\uff0c\u201d\u4ed6\u8bf4\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u7279\u6b8a\u7684\u5143\u7d20\u3002\n\u4ed6\u66fe\u7ecf\u548c\u4e00\u4f4d\u6253\u5b57\u5458\u4e00\u8d77\u5de5\u4f5c\uff0c\u8fd9\u4f4d\u6253\u5b57\u5458\u8981\u6c42\u4e00\u4e2a\u5e73\u65b9\u82f1\u5c3a\u7684\u7b26\u53f7\uff1a\u4e00\u4e2a\u5e26\u659c\u6760\u7684\u6b63\u65b9\u5f62\u3002\u4ed6\u95ee\u5979\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\u3002\u201c\u6211\u4eec\u6240\u505a\u7684\u4e00\u5207\u90fd\u662f\u4e3a\u4e86\u63a8\u9500\u9762\u79ef\uff0c\u201d\u5979\u544a\u8bc9\u4ed6\u3002\u201c\u6211\u4e00\u76f4\u5728\u8f93\u5165SQ\u3002FT.\u201c\uff0c\u8fd9\u662f8\u4e2a\u5b57\u7b26\uff0c\u800c\u4e0d\u662f1\u4e2a\u5b57\u7b26\u3002\n\u201c\u6211\u53bb\u770b\u4e86\u4e00\u4e0b\u6d3b\u9875\u5939\uff0c\u679c\u7136\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\uff0c\u201d\u4ed6\u8bf4\u3002\u4ed6\u8ba9\u4ed6\u7684\u5b9a\u5236\u5de5\u7a0b\u5e08\u628a\u5b83\u653e\u5728\u5979\u7684\u6253\u5b57\u673a\u4e0a\uff0c\u5e76\u5f97\u5230\u4e86\u6253\u5b57\u5458\u7684\u70ed\u70c8\u611f\u8c22\u3002\nDitchendorf\u6700\u7ec8\u79bb\u5f00\u4e86Office\u4ea7\u54c1\u90e8\uff0c\u5728\u5305\u62ec\u603b\u90e8\u5728\u5185\u7684\u5176\u4ed6IBM\u90e8\u95e8\u5de5\u4f5c\u3002\u4ed6\u8bf4\uff0c\u5728\u90a3\u91cc\uff0c\u4ed6\u662f\u201c\u8ba9IBM\u9000\u51fa\u6253\u5b57\u673a\u4e1a\u52a1\uff0c\u8fdb\u5165\u8ba1\u7b97\u673a\u884c\u4e1a\u7684\u56e2\u961f\u7684\u4e00\u5458\u201d\u3002\u201c\u7ed3\u675f\u5f97\u4e0d\u9519\u3002\u201d\n\u5728IBM\u7684\u8bb8\u591a\u4ea7\u54c1\u548c\u8fed\u4ee3\u4e2d\uff0c\u4ed6\u6307\u51fa\uff0c\u8be5\u516c\u53f8\u6700\u5927\u7684\u7ade\u4e89\u5bf9\u624b\u4e4b\u4e00\u662f\u4eba\u7c7b\u5bf9\u53d8\u9769\u7684\u62b5\u5236\uff1a\u4ed6\u4eb2\u773c\u76ee\u7779\u4e86\u6253\u5b57\u673a\u3001\u590d\u5370\u673a\u548c\u6253\u5370\u673a\u7684\u65e5\u843d\u3002\u4f5c\u4e3a\u4e00\u540d\u63a8\u9500\u5458\u548c\u540e\u6765\u7684\u7ecf\u7406\uff0c\u4ed6\u7684\u804c\u8d23\u4e4b\u4e00\u662f\u6559\u80b2\u4eba\u4eec\u4e86\u89e3\u6b63\u5728\u53d1\u751f\u7684\u53d8\u5316\u548c\u5373\u5c06\u53d1\u751f\u7684\u5176\u4ed6\u53d8\u5316\u3002\n\u201c\u4ed6\u4e0d\u5f97\u4e0d\u51fa\u4ef7\u8d85\u8fc7\u51fa\u4ef750\u7f8e\u5206\u7684\u4eba\u3002\u4ed6\u82b1\u4e86\u4e00\u7f8e\u5143\u4e70\u7684\uff0c\u201c\u8fea\u94a6\u591a\u592b\u8bf4\u3002\u201c\u800c\u4e14\u5b83\u4ecd\u7136\u6709\u6548\u3002\u201d", "note_en": "\u201cLike Notes On A Staff,\u201d begins the December 1973 announcement for a new IBM Selectric typewriter element to record dance and movement.\n The element, we learn, was developed by IBM in conjunction with the Dance Notation Bureau of NYC to answer a problem \u201cwhich has long confronted choreographers and teachers: how to record, quickly and accurately, the body movements of dancers without resorting to time-consuming hand drawings.\u201d\n The \u201cscientific approach\u201d to recording movement notates body motion by means of abstract symbols.\n  IBM introduced the Selectric electric typewriter\u2014featuring a typing element, or typeball\u2014in 1961. The typeball, a compact unit containing all the letters and symbols of a keyboard, rotated and pivoted to the correct position before striking. It replaced individual typebars that would swing up and hit the ribbon and page.\n The Selectric and its descendants would go on to dominate the typewriter market for decades. Charles Ditchendorf joined IBM\u2019s Office Products Division, which designed and manufactured the Selectric, in 1966.\n  \u201cThe typeball was a very interesting technical breakthrough,\u201d Ditchendorf said in a phone interview. \u201cThey put a metallic coating onto a plastic element that gave it durability. I don\u2019t recall anyone ever wearing one of those things out.\u201d Beyond durability, the Selectric typeball allowed for a unique flexibility: it could easily be changed out, so customers had the ability to order typeballs with customized fonts and symbols.\n Ditchendorf remembers the dance typeball announcement because it was so unique. The typeball had special Labanotation symbols, developed in the 1920s by Hungarian dancer/choreographer Rudolf Laban to analyze and record movement and dance. The type-ball was issued with a grid \u201cso that you could figure out how to put the movements together,\u201d he said.\n A symbol\u2019s location showed which part of the body\u2014arm, leg, torso\u2014was to be used. The symbol\u2019s shape indicated direction. The symbol\u2019s shading showed the level of an arm or leg. And its length controlled the time value of a movement.\n  \u201cMy sense is that somebody important at IBM probably had a relationship with a dance company,\u201d Ditchendorf said. \u201cMaybe as a volunteer or a board member.\u201d He believes that IBM created this particular typing element as a public service. \u201cSomebody did a favor to people who needed it.\u201d\n The typing element had 88 different symbols, which could be arranged to form a complete vocabulary for recording movement of any kind, from ballet and modern to ethnic, even folk. And the range of motions extends well beyond dance: Labanotation can also be used to record movements in areas like sports, behavioral sciences, physical therapy, and even industrial operations. At the time of its announcement, the dance typeball sold for $18 (today, that\u2019s a little over $100). The new element \u201cjoins a growing collection of special-purpose typing fonts which IBM has designed for the technical disciplines,\u201d according to the press release.\n \u201cTo the best of my knowledge, I didn\u2019t sell one,\u201d Ditchendorf said. He\u2019s also not sure how many were ever sold.\n  He did, however, sell other custom elements and products\u2014a Braille typewriter, for example. He remembers a big green binder with every special character ever designed for typewriters, each with a visual example sorted by type style.\n \u201cIf someone said, I need something like this, you\u2019d get that binder out and see if it was available,\u201d he said. If not, a special element would be designed.\n He once worked with a typist who requested a square foot symbol: a square with a slash through it. He asked why she needed it. \u201cEverything we do is about marketing square footage,\u201d she told him. \u201cI\u2019m constantly typing sq. ft.,\u201d which was eight characters instead \u00a0 of one.\n \u201cI went and looked in the binder and sure enough, we had one,\u201d he said. He had his custom engineer put it on her typewriter, and received rave thanks from the typist.\n  Ditchendorf eventually moved out of the Office Products Division and worked for various other IBM groups, including headquarters. There, he was \u201cpart of the group that took IBM out of the typewriter business and into computers,\u201d he said. \u201cNice closure there.\u201d\n Throughout the many products and iterations of IBM, he notes that one of the company\u2019s greatest competitors has been human resistance to change: he saw that firsthand with the sunsetting of typewriters, copiers, printers. As a salesman and later manager, one of his responsibilities was educating about the changes happening, and others to come.\n    \u201cHe had to outbid the guy who bid 50 cents. He paid a dollar for it,\u201d Ditchendorf said. \u201cAnd it still works.\u201d", "posttime": "2020-05-25 00:17:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "selectric,\u6253\u5b57\u673a", "title": "1973\u5e74IBM SElectric Typeball\u8bb0\u5f55\u4e86\u821e\u8005\u7684\u8eab\u4f53\u52a8\u4f5c", "title_en": "1973 IBM Selectric typeball recorded dancers' body movements", "transed": 1, "url": "https://www.ibm.com/blogs/industries/selectric-typewriter-dancers/", "via": "", "real_tags": ["selectric", "\u6253\u5b57\u673a"]}, {"category": "", "categoryclass": "", "imagename": "5e8eacf2aa880a7b09d24dc9bec495c3.jpg", "infoid": 1003529, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ef4\u57fa\u767e\u79d1\u5c06\u5236\u5b9a\u4e00\u9879\u65b0\u7684\u884c\u4e3a\u51c6\u5219\uff0c\u4e0e\u8be5\u516c\u53f8\u6240\u79f0\u7684\u4e00\u4e9b\u5fd7\u613f\u8005\u7684\u6709\u6bd2\u884c\u4e3a\u4f5c\u6597\u4e89\u3002\n\u8fd0\u8425\u8be5\u7f51\u7ad9\u7684\u7ec4\u7ec7\u7ef4\u57fa\u5a92\u4f53\u57fa\u91d1\u4f1a(Wikimedia Foundation)\u5c31\u65b0\u63aa\u65bd\u8fdb\u884c\u4e86\u6295\u7968\uff0c\u8fd9\u4e9b\u63aa\u65bd\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u6572\u5b9a\u3002\n\u8bb8\u591a\u4eba\uff0c\u7279\u522b\u662f\u5973\u6027\u548cLGBTQ\u793e\u533a\u7684\u6210\u5458\uff0c\u62b1\u6028\u5176\u4ed6\u7f16\u8f91\u7684\u8650\u5f85\u548c\u9a9a\u6270\u3002\n\u7ef4\u57fa\u5a92\u4f53\u57fa\u91d1\u4f1a(Wikimedia Foundation)\u9996\u5e2d\u6267\u884c\u5b98\u51ef\u745f\u7433\u00b7\u9a6c\u8d6b(Katherine Maher)\u8868\u793a\uff1a\u6211\u4eec\u5fc5\u987b\u5171\u540c\u52aa\u529b\uff0c\u521b\u9020\u4e00\u79cd\u5b89\u5168\u3001\u5305\u5bb9\u7684\u6587\u5316\uff0c\u5728\u8fd9\u79cd\u6587\u5316\u4e2d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u611f\u5230\u53d7\u6b22\u8fce\uff0c\u4ed6\u4eec\u7684\u8d21\u732e\u5f97\u5230\u91cd\u89c6\uff0c\u4ed6\u4eec\u7684\u89c2\u70b9\u5f88\u91cd\u8981\uff0c\u7ef4\u57fa\u5a92\u4f53\u57fa\u91d1\u4f1a\u7684\u9996\u5e2d\u6267\u884c\u5b98\u51ef\u745f\u7433\u00b7\u9a6c\u8d6b(Katherine Maher)\u8bf4\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u5168\u4e16\u754c\u7684\u77e5\u8bc6\uff0c\u8fd9\u662f\u6211\u4eec\u65c5\u7a0b\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u6b65\u3002\n\u57fa\u91d1\u4f1a\u5bf9\u4f1a\u5458\u5177\u6709\u7ea6\u675f\u529b\u7684\u884c\u4e3a\u51c6\u5219\u5c06\u5305\u62ec\uff0c\u5982\u679c\u5fd7\u613f\u8005\u8fdd\u53cd\u6761\u6b3e\uff0c\u7981\u6b62\u6216\u9650\u5236\u8bbf\u95ee\u3002\n\u5982\u679c\u5fd7\u613f\u8005\u89c9\u5f97\u9700\u8981\u66f4\u591a\u7684\u80cc\u666f\uff0c\u5c06\u6709\u4e00\u4e2a\u5ba1\u67e5\u51b3\u5b9a\u7684\u8fc7\u7a0b\u3002\n\u7ef4\u57fa\u767e\u79d1\u5df2\u7ecf\u6210\u4e3a\u4e92\u8054\u7f51\u4e0a\u6700\u503c\u5f97\u4fe1\u8d56\u7684\u4fe1\u606f\u6765\u6e90\u4e4b\u4e00\uff0c\u4f46\u5bf9\u6027\u522b\u5931\u8861\u548c\u9a9a\u6270\u7684\u62b1\u6028\u5df2\u7ecf\u56f0\u6270\u4e86\u8be5\u5e73\u53f0\u8fd1\u5341\u5e74\u3002\n\u534e\u76db\u987f\u5927\u5b66\u5173\u4e8e\u7ef4\u57fa\u767e\u79d1\u7f16\u8f91\u6027\u522b\u5dee\u8ddd\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u8bb8\u591a\u5973\u6027\u548cLGBTQ\u7f16\u8f91\u62c5\u5fc3\u81ea\u5df1\u7684\u5b89\u5168\u3002\u51e0\u4f4d\u5973\u6027\u7f16\u8f91\u544a\u8bc9\u7814\u7a76\u4eba\u5458\uff0c\u5979\u4eec\u7684\u4f5c\u54c1\u66fe\u906d\u5230\u7537\u6027\u7f16\u8f91\u7684\u7ade\u4e89\uff0c\u6216\u8005\u5979\u4eec\u6536\u5230\u4e86\u7537\u6027\u7f16\u8f91\u7684\u8d1f\u9762\u53cd\u9988\u3002\n\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b2019\u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u4e5f\u7a81\u663e\u4e86\u4e00\u4e9b\u53d8\u6027\u4eba\u7f16\u8f91\u5bf9\u8be5\u7f51\u7ad9\u5fd7\u613f\u670d\u52a1\u7684\u62c5\u5fe7\u3002\u4e00\u4f4d\u7f16\u8f91\u544a\u8bc9\u8be5\u62a5\uff0c\u4ed6\u4eec\u6536\u5230\u4e86\u6b7b\u4ea1\u5a01\u80c1\u3002\n\u7ef4\u57fa\u767e\u79d1\u4e0d\u662f\u50cfFacebook\u6216Twitter\u90a3\u6837\u7684\u6b63\u5f0f\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u3002\u4f46\u662f\u5b83\u7684\u7f16\u8f91\u53ef\u4ee5\u5f7c\u6b64\u4ea4\u4e92\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u9875\u9762\u7f16\u5199\u4e4b\u540e\u66f4\u6539\u9875\u9762\u4e0a\u7684\u5185\u5bb9\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u4e00\u79cd\u5f62\u5f0f\u7684\u9a9a\u6270\uff0c\u5728\u4e00\u4e2a\u5fd7\u613f\u8005\u6dfb\u52a0\u5230\u4e00\u4e2a\u9875\u9762\u540e\uff0c\u53e6\u4e00\u4e2a\u5fd7\u613f\u8005\u4f1a\u5728\u7247\u523b\u4e4b\u540e\u5220\u9664\u6216\u66f4\u6539\u8be5\u5de5\u4f5c\uff0c\u8feb\u4f7f\u7b2c\u4e00\u4e2a\u7f16\u8f91\u91cd\u65b0\u505a\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u5e76\u5bfc\u81f4\u7f16\u8f91\u4e4b\u4e89\u3002\n\u7b2c\u4e00\u4e2a\u5c06\u5305\u62ec\u8bbe\u7f6e\u9762\u5bf9\u9762\u548c\u865a\u62df\u6d3b\u52a8\u7684\u7b56\u7565\uff0c\u4ee5\u53ca\u5305\u62ec\u804a\u5929\u5ba4\u548c\u5176\u4ed6\u7ef4\u57fa\u5a92\u4f53\u9879\u76ee\u5728\u5185\u7684\u6280\u672f\u7a7a\u95f4\u7684\u7b56\u7565\u3002\u5b83\u5c06\u57288\u670830\u65e5\u4e4b\u524d\u5f97\u5230\u8463\u4e8b\u4f1a\u7684\u6279\u51c6\u3002\n\u6839\u636e\u8463\u4e8b\u4f1a\u7684\u8ba1\u5212\uff0c\u7b2c\u4e8c\u9636\u6bb5\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u6279\u51c6\uff0c\u6982\u8ff0\u8fdd\u53cd\u89c4\u5219\u65f6\u7684\u6267\u6cd5\u60c5\u51b5\u3002", "note_en": "Wikipedia is to institute a new code of conduct to battle what the firm called &#34;toxic behaviour&#34; by some volunteers.\n The Wikimedia Foundation, the organisation that runs the site, voted on new measures that will be finalised by the end of the year.\n  Many, particularly women and members of the LGBTQ community, have complained of abuse and harassment from other editors.\n   &#34;We must work together to create a safe, inclusive culture, where everyone feels welcome, that their contributions are valued, and that their perspective matters,&#34; said Katherine Maher, the chief executive officer of the Wikimedia Foundation.\n &#34;Our goal is all the world&#39;s knowledge, and this is an essential step on our journey.&#34;\n   The foundation&#39;s binding code of conduct for members will include banning or limiting access if volunteers violate the terms.\n There will be a review process for the decisions if volunteers feel more context is needed.\n Wikipedia has become one of the internet&#39;s most trusted sources for information, but complaints about gender imbalances and harassment have plagued the platform for close to a decade.\n A study from the University of Washington  on the gender gap in Wikipedia editors found many female and LGBTQ editors feared for their safety. Several female editors told the researchers their work had contested by male editors or that they received negative feedback from a male editor.\n A  New York Times article from 2019 also highlighted the concerns some transgender editors have about volunteering for the site. One editor told the paper they received death threats.\n  Wikipedia is not a formal social media platform like Facebook or Twitter. But its editors can interact with one another and can change the content on a page after it has been written.\n This has led to a form of harassment where, after one volunteer adds to a page, another volunteer will remove or change that work moments later, forcing the first editor to redo their work and leading to editing battles.\n  The first will include setting policies for in-person and virtual events as well as policies for technical spaces including chat rooms and other Wikimedia projects. It is set to be ratified by the board by 30 August.\n A second phase outlining enforcement when the rules are broken will be approved by the end of the year, according to the board&#39;s plan.", "posttime": "2020-05-24 23:46:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8ba1\u5212,plans,\u7f16\u8f91", "title": "\u7ef4\u57fa\u767e\u79d1\u8ba1\u5212\u5236\u5b9a\u65b0\u89c4\u5219\u6253\u51fb\u201c\u6709\u6bd2\u884c\u4e3a\u201d", "title_en": "Wikipedia Plans New Rule To Combat 'Toxic Behavior'", "transed": 1, "url": "https://www.bbc.com/news/technology-52779899", "via": "", "real_tags": ["\u8ba1\u5212", "plans", "\u7f16\u8f91"]}, {"category": "", "categoryclass": "", "imagename": "07286e5cde937eb11374cb56d9ff9577.jpg", "infoid": 1003528, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u5f00\u59cb\u60a8\u7684\u5e7f\u573a\u514d\u8d39\u8bd5\u7528\u5728http://www.squarespace.com/practicalengineering\u548c\u4f7f\u7528\u4ee3\u7801PRACTICALENGINEERINEING\u83b7\u5f9710%\u7684\u6298\u6263\u60a8\u7684\u7b2c\u4e00\u6b21\u8d2d\u4e70\u2026", "note_en": "Start your Squarespace free trial today at http://www.squarespace.com/practicalengineering and use code PRACTICALENGINEERING to get 10% off your first purcha...", "posttime": "2020-05-24 23:45:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5371\u9669,dangerous", "title": "\u6700\u5371\u9669\u7684\u5927\u575d(2019\u5e74)[\u89c6\u9891]", "title_en": "The Most Dangerous Dams (2019) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=GVDpqphHhAE", "via": "", "real_tags": ["\u5371\u9669", "dangerous"]}, {"category": "", "categoryclass": "", "imagename": "2b3d936a097a3bd933232ea55cafc8c9.jpeg", "infoid": 1003527, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6dd8\u6c14\u5b57\u7b26\u4e32\u5927\u5217\u8868\u201d\u662f\u4e00\u4e2a\u4e0d\u65ad\u6f14\u53d8\u7684\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u5f53\u7528\u4f5c\u7528\u6237\u8f93\u5165\u6570\u636e\u65f6\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u5f88\u53ef\u80fd\u4f1a\u5f15\u53d1\u95ee\u9898\u3002\u8fd9\u662f\u4e3a\u5e2e\u52a9\u81ea\u52a8\u548c\u624b\u52a8QA\u6d4b\u8bd5\u800c\u8bbe\u8ba1\u7684\uff1b\u65e0\u8bba\u4f55\u65f6\u60a8\u7684QA\u5de5\u7a0b\u5e08\u8d70\u8fdb\u9152\u5427\uff0c\u5b83\u90fd\u5f88\u6709\u7528\u3002\n\u5373\u4f7f\u662f\u62e5\u6709\u5927\u91cf\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\u4e5f\u4e0d\u53ef\u80fd\u53d1\u73b0\u6bcf\u4e00\u4e2a\u9519\u8bef\u7684\u8f93\u5165\u3002\u4f8b\u5982\uff0c\u770b\u770b\u5f53\u4f60\u8bd5\u56fe\u5728Twitter\u4e0a\u53d1\u5e03\u4e00\u4e2a\u96f6\u5bbd\u5ea6\u7a7a\u683c(U+200B)\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n\u867d\u7136\u8fd9\u4e0d\u662f\u6076\u610f\u9519\u8bef\uff0c\u5e76\u4e14\u5178\u578b\u7684\u7528\u6237\u4e0d\u4f1a\u5728tweet\u4e0a\u53d1\u5e03\u5947\u602a\u7684Unicode\uff0c\u4f46\u662f\u5185\u90e8\u670d\u52a1\u5668\u9519\u8bef\uff0c\u56e0\u4e3a\u610f\u5916\u8f93\u5165\u5bf9\u7528\u6237\u6765\u8bf4\u4ece\u6765\u90fd\u4e0d\u662f\u4e00\u79cd\u79ef\u6781\u7684\u4f53\u9a8c\uff0c\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u66f4\u6df1\u5c42\u6b21\u7684\u5b57\u7b26\u4e32\u9a8c\u8bc1\u95ee\u9898\u7684\u75c7\u72b6\u3002\u201c\u987d\u76ae\u5b57\u7b26\u4e32\u5927\u540d\u5355\u201d\u65e8\u5728\u5e2e\u52a9\u63ed\u793a\u8fd9\u4e9b\u95ee\u9898\u3002\nblns.txt\u7531\u6362\u884c\u7b26\u5206\u9694\u7684\u5b57\u7b26\u4e32\u548c\u6ce8\u91ca\u7ec4\u6210\uff0c\u524d\u9762\u5e26\u6709#\u3002\u6ce8\u91ca\u5c06\u5b57\u7b26\u4e32\u5206\u6210\u51e0\u4e2a\u90e8\u5206\uff0c\u4fbf\u4e8e\u624b\u52a8\u9605\u8bfb\u548c\u590d\u5236/\u7c98\u8d34\u5230\u8f93\u5165\u8868\u5355\u4e2d\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbf\u95ee\u5b57\u7b26\u4e32\u7684\u7528\u6237\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2ablns.json\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u5265\u79bb\u4e86\u6240\u6709\u6ce8\u91ca\u7684\u6570\u7ec4(\u811a\u672c\u6587\u4ef6\u5939\u5305\u542b\u7528\u4e8e\u751f\u6210blns.json\u7684Python\u811a\u672c)\u3002\n\u60a8\u53ef\u4ee5\u968f\u65f6\u53d1\u9001\u62c9\u53d6\u8bf7\u6c42\uff0c\u4ee5\u6dfb\u52a0\u66f4\u591a\u5b57\u7b26\u4e32\u6216\u5176\u4ed6\u90e8\u5206\u3002\u4f46\u662f\uff0c\u8bf7\u4e0d\u8981\u53d1\u9001\u8d85\u957f\u5b57\u7b26\u4e32(255\u4e2a\u4ee5\u4e0a\u5b57\u7b26)\u7684\u62c9\u53d6\u8bf7\u6c42\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u4f7f\u5217\u8868\u66f4\u96be\u67e5\u770b\u3002\n\u540c\u6837\uff0c\u8bf7\u4e0d\u8981\u53d1\u9001\u5f71\u54cd\u6587\u4ef6\u624b\u52a8\u53ef\u7528\u6027\u7684\u62c9\u53d6\u8bf7\u6c42\u3002\u8fd9\u5305\u62ec\u53ef\u80fd\u5bfc\u81f4\u9632\u75c5\u6bd2\u626b\u63cf\u7a0b\u5e8f\u6807\u8bb0\u6587\u4ef6\u7684EICAR\u6d4b\u8bd5\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u66f4\u6539blns.txt\u7f16\u7801\u7684\u6587\u4ef6\u3002\u6b64\u5916\uff0c\u4e0d\u8981\u53d1\u9001\u7a7a\u5b57\u7b26(U+0000)\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5c06GitHub\u4e0a\u7684\u6587\u4ef6\u683c\u5f0f\u66f4\u6539\u4e3a\u4e8c\u8fdb\u5236\uff0c\u5e76\u5728\u62c9\u53d6\u8bf7\u6c42\u4e2d\u4f7f\u5176\u4e0d\u53ef\u8bfb\u3002\u6700\u540e\uff0c\u5728\u6dfb\u52a0\u6216\u5220\u9664\u5b57\u7b26\u4e32\u65f6\uff0c\u8bf7\u5728\u6267\u884c\u62c9\u53d6\u8bf7\u6c42\u65f6\u66f4\u65b0\u6240\u6709\u6587\u4ef6\u3002\n\u201c\u987d\u76ae\u5b57\u7b26\u4e32\u5927\u5217\u8868\u201d\u65e8\u5728\u7528\u4e8e\u60a8\u62e5\u6709\u548c\u7ba1\u7406\u7684\u8f6f\u4ef6\u3002\u67d0\u4e9b\u201c\u6dd8\u6c14\u5b57\u7b26\u4e32\u201d\u53ef\u80fd\u8868\u793a\u5b89\u5168\u6f0f\u6d1e\uff0c\u56e0\u6b64\u5728\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u4e2d\u4f7f\u7528\u6b64\u7c7b\u5b57\u7b26\u4e32\u53ef\u80fd\u662f\u72af\u7f6a\u884c\u4e3a\u3002\u7ef4\u62a4\u4eba\u5458\u4e0d\u5bf9\u4f7f\u7528\u5217\u8868\u5bfc\u81f4\u7684\u4efb\u4f55\u8d1f\u9762\u884c\u4e3a\u8d1f\u8d23\u3002\n\u6b64\u5916\uff0cBIG List of Naughty String\u5e76\u4e0d\u80fd\u5168\u9762\u66ff\u4ee3\u60a8\u7684\u670d\u52a1\u7684\u6b63\u5f0f\u5b89\u5168/\u6e17\u900f\u6d4b\u8bd5\u3002\n\u201c\u987d\u76ae\u5b57\u7b26\u4e32\u5927\u5217\u8868\u201d\u7684\u5404\u79cd\u5b9e\u73b0\u5df2\u7ecf\u63d0\u4f9b\u7ed9\u4e86\u5404\u79cd\u5305\u7ba1\u7406\u5668\u3002\u8fd9\u4e9b\u662f\u7531\u5916\u90e8\u5404\u65b9\u7ef4\u62a4\u7684\uff0c\u4f46\u53ef\u4ee5\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230\uff1a", "note_en": "The Big List of Naughty Strings is an evolving list of strings which have a high probability of causing issues when used as user-input data. This is intended for use in helping both automated and manual QA testing; useful for whenever your QA engineer  walks into a bar.\n  Even multi-billion dollar companies with huge amounts of automated testing can&#39;t find every bad input. For example, look at what happens when you try to Tweet a  zero-width space (U+200B) on Twitter:\n  Although this is not a malicious error, and typical users aren&#39;t Tweeting weird unicode, an &#34;internal server error&#34; for unexpected input is never a positive experience for the user, and may in fact be a symptom of deeper string-validation issues. The Big List of Naughty Strings is intended to help reveal such issues.\n  blns.txt consists of newline-delimited strings and comments which are preceded with  #. The comments divide the strings into sections for easy manual reading and copy/pasting into input forms. For those who want to access the strings programmatically, a  blns.json file is provided containing an array with all the comments stripped out (the  scripts folder contains a Python script used to generate the  blns.json).\n  Feel free to send a pull request to add more strings, or additional sections. However, please do not send pull requests with very-long strings (255+ characters), as that makes the list much more difficult to view.\n Likewise, please do not send pull requests which compromise  manual usability of the file. This includes the  EICAR test string, which can cause the file to be flagged by antivirus scanners, and files which alter the encoding of  blns.txt. Also, do not send a null character (U+0000) string, as it  changes the file format on GitHub to binary and renders it unreadable in pull requests. Finally, when adding or removing a string please update all files when you perform a pull request.\n  The Big List of Naughty Strings is intended to be used  for software you own and manage. Some of the Naughty Strings can indicate security vulnerabilities, and as a result using such strings with third-party software may be a crime. The maintainer is not responsible for any negative actions that result from the use of the list.\n Additionally, the Big List of Naughty Strings is not a fully-comprehensive substitute for formal security/penetration testing for your service.\n  Various implementations of the Big List of Naughty Strings have made it to various package managers. Those are maintained by outside parties, but can be found here:", "posttime": "2020-05-24 23:29:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f26\u5927,list,\u5b57\u7b26\u4e32", "title": "\u6dd8\u6c14\u5f26\u5927\u540d\u5355", "title_en": "The Big List of Naughty Strings", "transed": 1, "url": "https://github.com/minimaxir/big-list-of-naughty-strings", "via": "", "real_tags": ["\u5f26\u5927", "list", "\u5b57\u7b26\u4e32"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003526, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e9b\u5929\uff0c\u8463\u4e8b\u4f1a\u548c\u9ad8\u7ba1\u611f\u53d7\u5230\u4e86\u4e0d\u540c\u5bfb\u5e38\u7684\u538b\u529b\u3002\u800c\u4e14\u5b83\u4e0d\u662f\u7531\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684--\u8fd9\u79cd\u6324\u538b\u4ece\u51e0\u5e74\u524d\u5c31\u5f00\u59cb\u4e86\u3002\u89c1\u8bc1\u8463\u4e8b\u548c\u9ad8\u7ea7\u7ba1\u7406\u4eba\u5458\u4fdd\u9669\u7684\u5e73\u5747\u6210\u672c\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u51e0\u4e4e\u7ffb\u4e86\u4e00\u756a\uff0c\u5e76\u57282019\u5e74\u7b2c\u4e09\u5b63\u5ea6\u8dc3\u5347\u4e8670%\u3002\n\u538b\u529b\u589e\u52a0\u548c\u4fdd\u9669\u8d39\u7387\u98d9\u5347\u6709\u5f88\u591a\u6f5c\u5728\u7684\u539f\u56e0\u3002\u4f46\u5982\u4eca\uff0c\u4e00\u4f4d\u7279\u7acb\u72ec\u884c\u7684\u9996\u5e2d\u6267\u884c\u5b98\u7ecf\u5e38\u6210\u4e3a\u8463\u4e8b\u4f1a\u548c\u9ad8\u7ba1\u6050\u614c\u7684\u7126\u70b9\uff0c\u6295\u8d44\u8005\u58f0\u79f0\u9886\u5bfc\u5c42\u672a\u80fd\u4fdd\u62a4\u516c\u53f8\u3002\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u5728Twitter\u4e0a\u7684\u5404\u79cd\u5d29\u6e83\u4e8b\u4ef6\u5728\u5229\u76ca\u76f8\u5173\u8005\u4e2d\u9020\u6210\u4e86\u4e25\u91cd\u7684\u6d88\u5316\u4e0d\u826f\u3002\u4eca\u5e745\u6708\uff0c\u7279\u65af\u62c9\u62ab\u9732\uff0c\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u5c06\u4e3a\u516c\u53f8\u8463\u4e8b\u548c\u9ad8\u7ba1\u63d0\u4f9b\u4e2a\u4eba\u8d23\u4efb\u4fdd\u9669\uff0c\u4ee5\u62b5\u6d88\u56e0\u6cd5\u5f8b\u6311\u6218\u800c\u589e\u52a0\u7684\u6210\u672c\u548c\u538b\u529b\u3002\n\u6295\u8d44\u8005\u9762\u4e34\u7684\u6311\u6218\u8d8a\u6765\u8d8a\u591a\u5730\u6765\u81ea\u5bf9\u4e0d\u5065\u5eb7\u5de5\u4f5c\u73af\u5883\u7684\u6307\u63a7\uff0c\u56e0\u4e3a\u4e00\u4f4d\u610f\u5fd7\u575a\u5f3a\u7684\u9996\u5e2d\u6267\u884c\u5b98\u521b\u9020\u4e86\u4e00\u79cd\u8150\u8680\u6027\u7684\u4f01\u4e1a\u6587\u5316\u3002\u7279\u62c9\u7ef4\u65af\u00b7\u5361\u5170\u5c3c\u514b\u50b2\u6162\u7684\u7ecf\u8425\u98ce\u683c\u548c\u4ed6\u521b\u9020\u7684\u6709\u6bd2\u5de5\u4f5c\u73af\u5883\u5bfc\u81f4\u4ed6\u88ab\u516c\u53f8\u5f00\u9664\u3002\u5728\u56de\u987e\u4e86\u5361\u5170\u5c3c\u514b\u521b\u9020\u7684\u6587\u5316\uff0c\u5e76\u770b\u5230\u5458\u5de5\u548c\u80a1\u4e1c\u7684\u53cd\u5e94\u540e\uff0c\u4e00\u540d\u6124\u6012\u7684\u4f18\u6b65\u8463\u4e8b\u4f1a\u6210\u5458\u63d0\u8bae\u5728\u4f18\u6b65\u7684\u6587\u5316\u4ef7\u503c\u89c2\u6e05\u5355\u4e2d\u52a0\u5165\u201c\u4e0d\u5141\u8bb8\u806a\u660e\u7684\u6df7\u86cb\u201d\u3002\n\u4e9a\u5f53\u00b7\u8bfa\u4f0a\u66fc(Adam Neumann)\u5728WeWork\u7684\u884c\u52a8\u662f\u7ecf\u5178\u7684\u806a\u660e\u4e3e\u52a8\u3002\u4ed6\u662f\u4e00\u4f4d\u806a\u660e\u7684\u3001\u5bcc\u6709\u521b\u4e1a\u7cbe\u795e\u7684\u6709\u8fdc\u89c1\u5353\u8bc6\u7684\u4eba\uff0c\u6781\u5177\u4e2a\u4eba\u9b45\u529b\u3002\u4f46\u4ed6\u4e5f\u5efa\u7acb\u4e86\u4e00\u79cd\u5145\u65a5\u7740\u5927\u91cf\u9152\u7cbe\u548c\u6bd2\u54c1\u7684\u4f01\u4e1a\u6587\u5316(\u6839\u636e\u5458\u5de5\u7684\u8bf4\u6cd5)\u3002\u5927\u4f17\u6c7d\u8f66(Volkswagen)\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u4e01\u00b7\u6587\u5fb7\u6069(Martin Winterkorn)\u88ab\u89e3\u96c7\uff0c\u56e0\u4e3a\u4ed6\u521b\u9020\u4e86\u4e00\u79cd\u6781\u7aef\u7684\u516c\u53f8\u6587\u5316-\u88ab\u660e\u955c\u5468\u520a\u63cf\u8ff0\u4e3a\u201c\u6ca1\u6709\u52b3\u6539\u8425\u7684\u671d\u9c9c\u201d-\u9a71\u4f7f\u5458\u5de5\u521b\u5efa\u548c\u5b89\u88c5\u5728\u8f66\u8f86\u6392\u653e\u6d4b\u8bd5\u4e2d\u4f5c\u5f0a\u7684\u975e\u6cd5\u8f6f\u4ef6\u3002\n\u516c\u53f8\u5c06\u6c38\u8fdc\u62e5\u62b1\u90a3\u4e9b\u6311\u6218\u73b0\u72b6\u3001\u521b\u9020\u4f1f\u5927\u516c\u53f8\u7684\u6709\u8fdc\u89c1\u7684\u9886\u5bfc\u8005\uff0c\u5373\u4f7f\u4ed6\u4eec\u521b\u9020\u4e86\u4e00\u79cd\u79ef\u6781\u8fdb\u53d6\u7684\u6587\u5316\u3002\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af(Steve Jobs)\uff0c\u4e00\u4f4d\u56fa\u6267\u7684\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u5728\u88ab\u8463\u4e8b\u4f1a\u8d76\u4e0b\u53f0\u540e\u91cd\u8fd4\u82f9\u679c\uff0c\u521b\u9020\u4e86\u4e00\u4e2a\u4ef7\u503c\u4e07\u4ebf\u7f8e\u5143\u7684\u5de8\u4eba\u3002\u91cc\u5fb7\u00b7\u9ed1\u65af\u5ef7\u65af\u521b\u9020\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u3001\u4e0d\u53d7\u9650\u5236\u7684Netflix\u6587\u5316\uff0c\u5ea6\u8fc7\u4e86\u4e25\u5cfb\u7684\u7ade\u4e89\u6311\u6218\uff0c\u6539\u53d8\u4e86\u6574\u4e2a\u5a92\u4f53\u884c\u4e1a\u3002\u6770\u592b\u00b7\u8d1d\u4f50\u65af(Jeff Bezos)\u8bbe\u60f3\u5e76\u521b\u5efa\u4e86\u4e9a\u9a6c\u900a--\u4e00\u5bb6\u62e5\u6709\u6d53\u539a\u6587\u5316\u548c\u5de8\u5927\u7ade\u4e89\u8db3\u8ff9\u7684\u516c\u53f8\uff0c\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u8fd9\u6837\u7684\u516c\u53f8\u3002\n\u4e3a\u4e86\u4fdd\u6301\u516c\u53f8\u6d3b\u529b\uff0c\u5f15\u5bfc\u521b\u5efa\u5065\u5eb7\u7684\u6587\u5316\uff0c\u5e76\u62b5\u5fa1\u6765\u81ea\u5229\u76ca\u76f8\u5173\u8005\u7684\u538b\u529b\uff0c\u9886\u5bfc\u5c42\u9700\u8981\u4e0e\u4e00\u4f4d\u7279\u7acb\u72ec\u884c\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5c55\u5f00\u535a\u5f08\uff0c\u540c\u65f6\u652f\u6301\u5e72\u52b2\u5341\u8db3\u7684\u8fdc\u89c1\u5353\u8bc6\u8005\u6539\u53d8\u6e38\u620f\u89c4\u5219\u7684\u4eba\u624d\uff0c\u5e76\u4fdd\u6301\u6709\u6548\u7684\u516c\u53f8\u6cbb\u7406\u6240\u9700\u7684\u7ed3\u6784\u3001\u5236\u5ea6\u548c\u6307\u5bfc\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u79cd\u5e73\u8861\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u4e0e\u7ecf\u9a8c\u4e30\u5bcc\u7684\u8463\u4e8b\u4f1a\u6210\u5458\u548c\u9ad8\u7ea7\u7ba1\u7406\u4eba\u5458\u8fdb\u884c\u4e86\u4ea4\u8c08\uff0c\u4ee5\u6355\u6349\u4e0e\u4e00\u4f4d\u6253\u7834\u89c4\u5219\u7684\u8fdc\u89c1\u5353\u8bc6\u8005\u6210\u529f\u5408\u4f5c\u7684\u6765\u4e4b\u4e0d\u6613\u7684\u6559\u8bad\u3002\n1.\u5173\u95e8\u3002\u4e0eCEO\u8d70\u51fa\u623f\u95f4\u8fdb\u884c\u9ad8\u7ba1\u4f1a\u8bae\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u7f8e\u56fd\u8bc1\u4ea4\u4f1a\u8981\u6c42\u53ec\u5f00\u8fd9\u4e9b\u95ed\u95e8\u4f1a\u8bae\uff0c\u4f46\u5728\u4e00\u4e2a\u51fa\u8272\u7684\u7a81\u53d1\u4e8b\u4ef6\u4e2d\uff0c\u5b83\u4eec\u5177\u6709\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u9ad8\u7ba1\u4f1a\u8bae\u662f\u8463\u4e8b\u4f1a\u52aa\u529b\u89e3\u51b3\u662f\u5426\u53c2\u4e0e\u3001\u4f55\u65f6\u53c2\u4e0e\u4ee5\u53ca\u5982\u4f55\u53c2\u4e0e\u7684\u65f6\u5019\u3002\n2.\u7b56\u5212\u6587\u5316\u3002\u5927\u4f17\u548c\u4f18\u6b65\u7684\u6587\u5316\u4fb5\u8680\u6ca1\u6709\u88ab\u53ca\u65e9\u53d1\u73b0\uff0c\u7834\u574f\u6027\u884c\u4e3a\u8513\u5ef6\u5230\u6574\u4e2a\u516c\u53f8\u3002\u4e3a\u4e86\u7ed9\u4e88\u6587\u5316\u5e94\u6709\u7684\u5173\u6ce8\uff0c\u5e76\u9632\u6b62\u8150\u8680\u6027\u73af\u5883\uff0c\u8463\u4e8b\u4f1a\u6210\u7acb\u4e86\u4e00\u4e2a\u59d4\u5458\u4f1a\uff0c\u79ef\u6781\u76d1\u7763\u63a8\u52a8\u884c\u4e3a\u548c\u516c\u53f8\u6587\u5316\u7684\u76ee\u6807\u3001\u6fc0\u52b1\u3001\u5b9e\u8df5\u548c\u6d41\u7a0b\u3002\n3.\u6ce8\u610f\u7f1d\u9699\u3002\u8463\u4e8b\u4f1a\u6700\u91cd\u8981\u7684\u804c\u80fd\u4e4b\u4e00\u662f\u586b\u8865\u53d8\u9769\u5236\u9020\u8005\u7684\u7ba1\u7406\u7f3a\u53e3\u3002\u65e0\u8bba\u521b\u59cb\u4eba\u662f\u5e74\u8f7b\u3001\u7f3a\u4e4f\u7ecf\u9a8c\uff0c\u8fd8\u662f\u53ea\u662f\u6ca1\u6709\u63a5\u89e6\u8fc7\u5173\u952e\u804c\u80fd\uff0c\u8463\u4e8b\u4f1a\u90fd\u6709\u8d23\u4efb\u5c31\u5982\u4f55\u8865\u5145\u4ed6\u4eec\u7684\u9886\u5bfc\u5de5\u5177\u7bb1\u5411\u9996\u5e2d\u6267\u884c\u5b98\u63d0\u4f9b\u6307\u5bfc\u3002\u8003\u8651\u589e\u52a0\u4e00\u540d\u9ad8\u7ea7\u7ba1\u7406\u4eba\u5458\uff0c\u4ed6\u53ef\u4ee5\u52a0\u5165\u5e76\u5e73\u8861\u9886\u5bfc\u89d2\u8272\uff0c\u5c31\u50cf\u65bd\u5bc6\u7279\u5728\u8c37\u6b4c\u6240\u505a\u7684\u90a3\u6837\u3002\n4.\u505a\u53cd\u5411\u6295\u8d44\u8005\u3002\u9996\u5e2d\u6267\u884c\u5b98\u7684\u624d\u534e\u4e3a\u516c\u53f8\u7684\u6210\u529f\u63d0\u4f9b\u52a8\u529b\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u80fd\u4e00\u76f4\u6b63\u786e\u3002\u6311\u6218\u6709\u521b\u9020\u529b\u7684\u9886\u5bfc\u8005\u5e76\u8ba9\u4ed6\u4eec\u4e13\u6ce8\u4e8e\u5173\u952e\u6d3b\u52a8\u662f\u9886\u5bfc\u8005\u6700\u91cd\u8981\u7684\u5de5\u4f5c\u4e4b\u4e00\u3002\u201c\u8463\u4e8b\u4f1a\u7684\u884c\u52a8\u5f80\u5f80\u4e0d\u591f\u53ef\u7591\u3002\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u8463\u4e8b\u64c5\u957f\u53cd\u51fb\u3002\u4ed6\u4eec\u5f80\u5f80\u8fc7\u4e8e\u4fe1\u4efbCEO\u3002\u201c\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u8463\u4e8b\u4f1a\u6210\u5458\u5982\u662f\u8bf4\u3002\n\u5728\u4e0e\u9886\u5bfc\u4eba\u8ba8\u8bba\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u786e\u5b9a\u4e86\u4e09\u4e2a\u6846\u67b6\u539f\u5219\uff0c\u60a8\u9700\u8981\u9075\u5faa\u8fd9\u4e9b\u539f\u5219\u624d\u80fd\u5c06\u6700\u4f73\u5b9e\u8df5\u4ed8\u8bf8\u5b9e\u65bd\u3002\n\u4e00\u4e2a\u5a01\u6743\u7684\u5f00\u62d3\u8005\u9700\u8981\u7279\u6b8a\u7684\u5904\u7406\u3002\u4f20\u7edf\u7684\u516c\u53f8\u6cbb\u7406\u539f\u5219\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u5fc5\u987b\u8f85\u4e4b\u4ee5\u989d\u5916\u7684\u5b9e\u8df5\u3002\u6709\u4e86\u4e00\u5bb6\u5bcc\u6709\u7075\u611f\u3001\u9ad8\u5ea6\u63a7\u5236\u7684\u516c\u53f8\u638c\u8235\uff0c\u8463\u4e8b\u4f1a\u3001\u6295\u8d44\u8005\u548c\u5458\u5de5\u9700\u8981\u4e3a\u4e00\u6bb5\u4e0d\u540c\u7684\u65c5\u7a0b\u505a\u597d\u51c6\u5907\u3002\n\u4f60\u7684\u884c\u52a8\u53d6\u51b3\u4e8e\u4f60\u4e0e\u4e4b\u6253\u4ea4\u9053\u7684\u6709\u8fdc\u89c1\u7684\u4eba\u7684\u7c7b\u578b\u3002\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u3001\u5177\u6709\u98a0\u8986\u6027\u7684\u8fdc\u89c1\u5353\u8bc6\u8005\u5e76\u4e0d\u90fd\u662f\u4e00\u6837\u7684\u3002\u5bf9\u4e8e\u4e00\u4e9b\u516c\u53f8\u6765\u8bf4\uff0c\u5b58\u5728\u963b\u788d\u548c\u524a\u51cf\u5176\u521b\u9020\u7684\u4ef7\u503c\u7684\u98ce\u9669-\u60a8\u9700\u8981\u4f7f\u7528\u6700\u4f73\u5b9e\u8df5\u6765\u5e2e\u52a9\u4ed6\u4eec\u5b9e\u73b0\u5176\u613f\u666f\u3002\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u4eba\u6765\u8bf4\uff0c\u81ea\u6ee1\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\u3002\u5982\u679c\u4e0d\u52a0\u4ee5\u76d1\u7763\uff0c\u4ed6\u4eec\u7684\u884c\u4e3a\u53ef\u80fd\u4f1a\u62b9\u53bb\u4ef7\u503c\uff0c\u5e76\u53ef\u80fd\u6467\u6bc1\u516c\u53f8\u3002\n\u6700\u597d\u7684\u9632\u5b88\u5c31\u662f\u597d\u7684\u8fdb\u653b\u3002\u8463\u4e8b\u4f1a\u548c\u9ad8\u7ba1\u9886\u5bfc\u4eba\u5e94\u8be5\u91c7\u53d6\u884c\u52a8\uff0c\u907f\u514d\u98a0\u8986\u6027CEO\u53ef\u80fd\u5e26\u6765\u7684\u538b\u529b-\u800c\u4e0d\u662f\u7b49\u5230\u4ed6\u4eec\u611f\u89c9\u5230\u53d7\u5230\u6324\u538b\u65f6\u624d\u884c\u52a8\u3002\n*Rob Shelton\u662f\u5168\u7403\u516c\u8ba4\u7684\u7845\u8c37\u987e\u95ee\u3001\u4f5c\u5bb6\u548c\u6f14\u8bb2\u8005\uff0c\u4e3b\u9898\u662f\u5353\u8d8a\u7684\u521b\u4e1a\u7cbe\u795e\u3001\u7a81\u7834\u6027\u521b\u65b0\u548c\u6269\u5c55\u4ee5\u63a8\u52a8\u5feb\u901f\u589e\u957f\u3002\u5728\u8fc7\u53bb\u768440\u5e74\u91cc\uff0c\u8c22\u5c14\u987f\u66fe\u62c5\u4efb\u7845\u8c37\u548c\u4e16\u754c\u5404\u5730\u9886\u5148\u7ec4\u7ec7\u7684\u8463\u4e8b\u4f1a\u6210\u5458\u3001\u9996\u5e2d\u6267\u884c\u5b98\u548c\u9ad8\u7ea7\u7ba1\u7406\u4eba\u5458\u503c\u5f97\u4fe1\u8d56\u7684\u5408\u4f5c\u4f19\u4f34\u548c\u987e\u95ee\u3002\u901a\u8fc7theconundrumpress@gmail.com\u4e0e\u8c22\u5c14\u987f\u8054\u7cfb\u3002\u9a6c\u514b\u00b7J\u00b7\u7231\u6cfc\u65af\u5766(Marc J.Epstein)\u535a\u58eb\u76f4\u5230\u6700\u8fd1\u8fd8\u662f\u5fb7\u514b\u8428\u65af\u5dde\u4f11\u65af\u6566\u8d56\u65af\u5927\u5b66\u743c\u65af\u5546\u5b66\u9662(Jones Graduate School Of Business)\u7684\u6770\u51fa\u7ba1\u7406\u5b66\u7814\u7a76\u6559\u6388\uff0c\u4ee5\u53ca\u65af\u5766\u798f\u5546\u5b66\u9662(Stanford Business School)\u3001\u54c8\u4f5b\u5546\u5b66\u9662(Harvard Business School)\u548c\u6b27\u6d32\u5de5\u5546\u7ba1\u7406\u5b66\u9662(INSEAD)\u7684\u524d\u6559\u6388\u3002\u7231\u6cfc\u65af\u5766\u535a\u58eb\u64b0\u5199\u4e86\u5927\u91cf\u5173\u4e8e\u516c\u53f8\u548c\u975e\u8425\u5229\u6027\u8463\u4e8b\u4f1a\u6cbb\u7406\u4ee5\u53ca\u8463\u4e8b\u4f1a\u89d2\u8272\u7684\u6587\u7ae0\u3002\u901a\u8fc7theconundrumpress@gmail.com\u4e0e\u7231\u6cfc\u65af\u5766\u8054\u7cfb\uff0c\u7f57\u5e03\u548c\u9a6c\u514b\u662f\u300a\u806a\u660e\u7684\u6df7\u86cb\u96be\u9898\uff1a\u4e0e\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u68a6\u60f3\u5bb6\u4e00\u8d77\u7e41\u8363\u548c\u6cbb\u7406\u300b\u7684\u5408\u8457\u8005\u3002\n*\u5728Instagram\u548cFacebook\u4e0a\u4e3a\u6211\u4eec\u70b9\u8d5e\uff0c\u4ee5\u83b7\u5f97\u989d\u5916\u7684\u9886\u5bfc\u529b\u548c\u4e2a\u4eba\u53d1\u5c55\u60f3\u6cd5\u3002\n\u8fc8\u514b\u5c14\u00b7\u9ea6\u91d1\u5c3c(Michael McKinney)\u4e8e\u4e0a\u534809\uff1a04\u53d1\u5e03Permalink|\u8bc4\u8bba(0)|\u672c\u6587\u662f\u5173\u4e8e\u4e00\u822c\u4e1a\u52a1\u7684", "note_en": "BOARDS and executives are feeling an unusual amount of pressure these days. And it\u2019s not from covid-19\u2014the squeeze started several years ago. Witness that the average cost of directors and officers insurance has almost doubled in the past two years and experienced a 70 percent jump in the 2019 third quarter.\n There are many underlying sources for the increased stress and skyrocketing insurance rates. But these days a maverick CEO is often at the center of board and executive consternation and investors\u2019 claims that leadership failed to protect the company.  Elon Musk\u2019s various Twitter meltdowns have created significant indigestion among stakeholders and in May, Tesla disclosed that Elon Musk would provide personal liability insurance for the company\u2019s directors and execs to offset the increased costs and strain from legal challenges.\n Increasingly, investors\u2019 challenges come from allegations of an unhealthy workplace climate because a strong-willed CEO who created a corrosive corporate culture.  Travis Kalanick&#39;s brash operating style and the toxic working environment he created led him to be tossed out of the company. After reviewing the culture created by Kalanick and seeing employee and shareholder reactions, one exasperated Uber board member proposed adding \u201cno brilliant jerks allowed\u201d to Uber&#39;s list of cultural values.\n Adam Neumann&#39;s actions at WeWork are classic brilliant jerk moves. He is a smart, entrepreneurial visionary with great charisma. But he also established a corporate culture that was filled with large doses of alcohol and drugs (according to employees).  Martin Winterkorn, Volkswagen\u2019s CEO, was fired because he created an extreme company culture\u2014described by Der Spiegel as \u201cNorth Korea without labor camps\u201d\u2014that drove employees to create and install illegal software that cheated on vehicle emissions tests.\n Companies will always embrace visionary leaders that challenge the status quo and create great companies even if they create a hard-driving culture. Steve Jobs, an obstreperous CEO, returned to Apple after his ouster by the board to create a trillion-dollar giant. Reed Hastings created a powerful no-holds-barred Netflix culture, navigated through tough competitive challenges, and changed the entire media industry. Jeff Bezos envisioned and created Amazon\u2014a company with an intense culture and an immense competitive footprint the likes of which no one has ever seen before.\n To maintain company vitality, guide the creation of a healthy culture, and head off pressure from stakeholders, leadership needs to up their game with a maverick CEO to simultaneously support the game changing talent of the hard-driving visionary and maintain the structure, systems, and guidance required for effective corporate governance. To understand how that balance is struck, we talked with experienced board members and senior executives to capture the hard-won lessons of successfully working with a rule-breaking visionary.\n  1. Close the door. Executive sessions with the CEO out of the room are essential. The SEC mandates these closed-door meetings, but they take on critical importance in a brilliant-jerk scenario. Executive sessions are the times when the board grapples with if, when, and how to get involved.\n 2. Curate the culture. Cultural erosions at VW and Uber were not detected early enough, and destructive behaviors spread throughout the company. To give culture the attention it deserves and head off corrosive environments, boards establish a committee to actively oversee goals, incentives, practices, and processes that drive behaviors and the company culture.\n 3. Mind the gaps. One of the most important functions of the board is supplementing the change maker\u2019s managerial gaps. Whether the founder is young and inexperienced, or just has not been exposed to key functions, the board has the responsibility to provide guidance to the CEO on how to supplement their leadership toolbox. Consider adding a senior executive that can join and balance out the leadership role like Schmidt did at Google.\n 4. Be contrarian. The CEO\u2019s brilliance generates the electricity that energizes a company\u2019s success, but not everyone can be right all the time. Challenging ingenious leaders and keeping them focused on the critical activities is one of the leaderships most important jobs. \u201cOften the board does not act sufficiently suspicious. Only a small percentage of directors are good at pushing back. They tend to trust the CEO too much\u201d was the observation of a seasoned board member.\n In the course of our discussions with leaders we identified three framing principles you need to embrace to put the best practices to use.\n An authoritarian trailblazer requires special handling. Traditional corporate governance principles are needed but must be supplemented with additional practices. With an inspired and highly controlling powerhouse at the helm, boards, investors, and employees need to be ready for a different kind of journey.\n Your actions depend on the type of visionary you are dealing with. Dominant, disruptive visionaries are not all the same. With some, there is a risk of getting in the way and curtailing the value they could create\u2014you need to use the best practices to help them attain their vision. With other types, complacency is a huge mistake. Left unsupervised, their behavior could obliterate value and possibly destroy the company.\n The best defense is a good offense. Boards and executive leaders should act to avoid the pressures that can be generated from a disruptive CEO\u2014not wait until they are feeling squeezed.\n * * *   Rob Shelton is a globally recognized Silicon Valley\u2013based consultant, author, and speaker on entrepreneurial excellence, breakthrough innovation, and scaling to drive rapid growth. Over the past 40 years, Shelton served as trusted partner and adviser to board members, CEOs, and senior executives at leading organizations in the valley and around the world. Connect with Shelton via  theconundrumpress@gmail.com.   Marc J. Epstein, PhD was, until recently, Distinguished Research Professor of Management at Jones Graduate School of Business at Rice University in Houston, Texas, as well as a former professor at Stanford Business School, Harvard Business School, and INSEAD. Dr. Epstein has written extensively on corporate and nonprofit board governance, and the role of boards of directors. Connect with Epstein via  theconundrumpress@gmail.com  Rob and Marc are coauthors of   The Brilliant Jerk Conundrum: Thriving with and Governing a Dominant Visionary.\n * * *       Like us on  Instagram and  Facebook for additional leadership and personal development ideas.\n         Posted by Michael McKinney at 09:04 AM    Permalink |  Comments (0) | This post is about  General Business", "posttime": "2020-05-24 23:29:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624d\u534e\u6a2a\u6ea2,brilliant", "title": "\u6ca1\u6709\u624d\u534e\u6a2a\u6ea2\u7684\u8822\u8d27", "title_en": "No Brilliant Jerks", "transed": 1, "url": "https://www.leadershipnow.com/leadingblog/2020/05/no_brilliant_jerks_how_to_deal.html", "via": "", "real_tags": ["\u624d\u534e\u6a2a\u6ea2", "brilliant"]}, {"category": "", "categoryclass": "", "imagename": "1d38ede0e1331fd5c08dfdab16d130f2.jpg", "infoid": 1003525, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4e00\u4e2a\u7ecf\u6d4e\u5b66\u5bb6\u6765\u8bf4\uff0c\u5728\u7f8e\u56fd\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u7684\u5934\u51e0\u5468\u91cc\uff0c\u6700\u4ee4\u4eba\u9707\u60ca\u7684\u666f\u8c61\u4e4b\u4e00\u662f\u8d85\u5e02\u90e8\u5206\u533a\u57df\u7a7a\u7a7a\u5982\u4e5f\u7684\u8d27\u67b6\u7684\u58ee\u89c2\u573a\u9762\u3002\n\u6ca1\u6709\u536b\u751f\u7eb8\u6216\u6d17\u624b\u6db2\u3002\u5728\u793e\u4ea4\u758f\u8fdc\u7684\u6700\u521d\u51e0\u5468\uff0c\u610f\u5927\u5229\u9762\u3001\u9762\u7c89\u751a\u81f3\u9175\u6bcd\u53ef\u80fd\u5f88\u96be\u627e\u5230\uff0c\u56e0\u4e3a\u8bb8\u591a\u4eba\u51b3\u5b9a\u5f00\u59cb\u70d8\u7119\u3002\u66f4\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u533b\u9662\u65e0\u6cd5\u8d2d\u4e70\u8db3\u591f\u7684\u53e3\u7f69\u3001\u957f\u888d\u548c\u547c\u5438\u673a\u6765\u5b89\u5168\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u3002\n\u4f9b\u9700\u89c4\u5f8b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff1f\u4e3a\u4ec0\u4e48\u4ef7\u683c\u6ca1\u6709\u50cf\u7ecf\u6d4e\u6a21\u578b\u9884\u6d4b\u7684\u90a3\u6837\u4e0a\u6da8\u5230\u8db3\u4ee5\u6e05\u7406\u5e02\u573a\u5462\uff1f\n\u6211\u4e0e\u5fc3\u7406\u5b66\u5bb6\u4e39\u5c3c\u5c14\u00b7\u5361\u5185\u66fc(Daniel Kahneman)\u548c\u7ecf\u6d4e\u5b66\u5bb6\u6770\u514b\u00b7\u514b\u5185\u5947(Jack Knetsch)\u7684\u670b\u53cb\u5171\u540c\u64b0\u5199\u7684\u4e00\u7bc7\u8bba\u6587\u63a2\u8ba8\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u7b54\u6848\u53ef\u4ee5\u7528\u4e00\u4e2a\u8bcd\u6765\u6982\u62ec\uff0c\u8fd9\u662f\u4f60\u5728\u6807\u51c6\u4f9b\u9700\u6a21\u578b\u4e2d\u627e\u4e0d\u5230\u7684\uff1a\u516c\u5e73\u3002\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u63d0\u4ef7\u662f\u793e\u4f1a\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\n\u6211\u4eec\u5411\u4eba\u4eec\u8be2\u95ee\u6709\u5173\u5047\u60f3\u516c\u53f8\u884c\u4e3a\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff1a\u201c\u4e00\u5bb6\u4e94\u91d1\u5e97\u4e00\u76f4\u5728\u4ee515\u7f8e\u5143\u7684\u4ef7\u683c\u51fa\u552e\u96ea\u94f2\u3002\u66b4\u98ce\u96ea\u8fc7\u540e\u7684\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u5546\u5e97\u5c06\u96ea\u94f2\u7684\u4ef7\u683c\u63d0\u9ad8\u5230\u4e8620\u7f8e\u5143\u3002\u201d\n\u6574\u657482%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u516c\u5e73\u7684\u3002\u53d7\u8bbf\u8005\u662f\u4ee5\u793c\u8c8c\u8457\u79f0\u7684\u52a0\u62ff\u5927\u4eba\uff0c\u4f46\u4e00\u822c\u7684\u7814\u7a76\u7ed3\u679c\u73b0\u5728\u5df2\u7ecf\u5728\u4e16\u754c\u5404\u5730\u7684\u7814\u7a76\u4e2d\u5f97\u5230\u590d\u5236\u548c\u8bc1\u5b9e\u3002\n\u5927\u591a\u6570\u516c\u53f8\u90fd\u542b\u84c4\u5730\u7406\u89e3\uff0c\u9075\u5b88\u516c\u5e73\u7684\u793e\u4f1a\u89c4\u8303\u5e94\u8be5\u662f\u4ed6\u4eec\u5546\u4e1a\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\u3002\u5728\u5f53\u524d\u7684\u5371\u673a\u4e2d\uff0c\u5927\u578b\u96f6\u552e\u8fde\u9501\u5e97\u5bf9\u536b\u751f\u7eb8\u77ed\u7f3a\u7684\u56de\u5e94\u4e0d\u662f\u63d0\u9ad8\u4ef7\u683c\uff0c\u800c\u662f\u9650\u5236\u6bcf\u4e2a\u987e\u5ba2\u53ef\u4ee5\u8d2d\u4e70\u7684\u6570\u91cf\u3002\u4e9a\u9a6c\u900a\u548ceBay\u7981\u6b62\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u8fdb\u884c\u88ab\u89c6\u4e3a\u4ef7\u683c\u6b3a\u8bc8\u7684\u884c\u4e3a\u3002\n\u6211\u4eec\u5728\u98d3\u98ce\u8fc7\u540e\u4e5f\u770b\u5230\u8fc7\u7c7b\u4f3c\u7684\u884c\u4e3a\u3002\u66b4\u98ce\u96e8\u4e00\u7ed3\u675f\uff0c\u901a\u5e38\u5bf9\u74f6\u88c5\u6c34\u548c\u80f6\u5408\u677f\u7b49\u5546\u54c1\u7684\u9700\u6c42\u5c31\u4f1a\u5f88\u5927\u3002\u5bb6\u5f97\u5b9d(Home Depot)\u548c\u6c83\u5c14\u739b(Walmart)\u7b49\u5927\u578b\u96f6\u552e\u5546\u9884\u89c1\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u5c06\u6ee1\u8f7d\u7269\u8d44\u7684\u5361\u8f66\u9001\u5230\u5371\u9669\u533a\u4ee5\u5916\u7684\u5730\u533a\uff0c\u51c6\u5907\u90e8\u7f72\u3002\u7136\u540e\uff0c\u5f53\u5b83\u662f\u5b89\u5168\u7684\uff0c\u5546\u5e97\u514d\u8d39\u63d0\u4f9b\u6c34\uff0c\u5e76\u4ee5\u6807\u4ef7\u6216\u66f4\u4f4e\u7684\u4ef7\u683c\u51fa\u552e\u80f6\u5408\u677f\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4e00\u4e9b\u201c\u4f01\u4e1a\u5bb6\u201d\u7684\u884c\u4e3a\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u4ed6\u4eec\u5c06\u707e\u96be\u89c6\u4e3a\u4e00\u4e2a\u673a\u4f1a\uff0c\u56e0\u6b64\u4f1a\u5728\u81ea\u5bb6\u9644\u8fd1\u7684\u5361\u8f66\u4e0a\u88c5\u6ee1\u80f6\u5408\u677f\uff0c\u5f00\u8f66\u524d\u5f80\u98ce\u66b4\u73b0\u573a\uff0c\u4ee5\u4efb\u4f55\u4ef7\u683c\u51fa\u552e\u4ed6\u4eec\u7684\u8d27\u7269\u3002\n\u8fd9\u5e76\u4e0d\u662f\u8bf4\u5927\u578b\u96f6\u552e\u5546\u672c\u8d28\u4e0a\u6bd4\u4f01\u4e1a\u5bb6\u66f4\u6709\u9053\u5fb7\uff0c\u53ea\u662f\u4ed6\u4eec\u7684\u65f6\u95f4\u8303\u56f4\u4e0d\u540c\u3002\u5927\u516c\u53f8\u6b63\u5728\u73a9\u4e00\u573a\u957f\u671f\u7684\u6e38\u620f\uff0c\u901a\u8fc7\u201c\u516c\u5e73\u201d\u7684\u884c\u4e3a\uff0c\u4ed6\u4eec\u5e0c\u671b\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u4fdd\u6301\u5ba2\u6237\u7684\u5fe0\u8bda\u5ea6\u3002\u4f01\u4e1a\u5bb6\u4eec\u53ea\u5bf9\u5feb\u901f\u8d5a\u94b1\u611f\u5174\u8da3\u3002\n\u516c\u5e73\u51c6\u5219\u6709\u52a9\u4e8e\u89e3\u91ca\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u4e2d\u533b\u7597\u8bbe\u5907\u4f9b\u5e94\u94fe\u7684\u5d29\u6e83\u3002\u533b\u9662\u901a\u5e38\u5229\u7528\u4e0e\u6279\u53d1\u5546\u8fbe\u6210\u957f\u671f\u4ea4\u6613\u7684\u91c7\u8d2d\u534f\u4f1a\u6765\u63d0\u4f9b\u5fc5\u8981\u7684\u4f9b\u5e94\u3002\u6279\u53d1\u5546\u901a\u5e38\u5e0c\u671b\u4fdd\u6301\u8fd9\u4e9b\u5173\u7cfb\uff0c\u5e76\u610f\u8bc6\u5230\u73b0\u5728\u4e0d\u662f\u63d0\u4ef7\u7684\u597d\u65f6\u673a\u3002\u901a\u5e38\uff0c\u6839\u636e\u5408\u540c\uff0c\u4ed6\u4eec\u6709\u4e49\u52a1\u4ee5\u9700\u6c42\u6fc0\u589e\u4e4b\u524d\u5546\u5b9a\u7684\u4ef7\u683c\u4f9b\u5e94\u5546\u54c1\u3002\n\u5f53\u524d\u7684\u4e00\u4e2a\u4f8b\u5b50\u662fN95\u9762\u7f69\u3002\u7ebd\u7ea6\u4e00\u5bb6\u533b\u9662\u7684\u4e00\u4f4d\u9ad8\u7ba1\u544a\u8bc9\u6211\uff0c\u5728\u5927\u6d41\u884c\u5f00\u59cb\u65f6\uff0c\u533b\u9662\u6709\u957f\u671f\u5408\u540c\uff0c\u6bcf\u4efd\u5927\u7ea635\u7f8e\u5206\u7684\u4ef7\u683c\u8d2d\u4e70\u5b83\u4eec\u3002\u5f53\u5bf9\u53e3\u7f69\u7684\u9700\u6c42\u6fc0\u589e\u65f6\uff0c\u8fd9\u4e9b\u4f9b\u5e94\u5546\u88ab\u7981\u6b62\u63d0\u4ef7\uff0c\u5373\u4f7f\u4ed6\u4eec\u503e\u5411\u4e8e\u63d0\u4ef7\u3002\n\u4f46\u4f9b\u5e94\u94fe\u4e0a\u7684\u5176\u4ed6\u4eba\u53ef\u4ee5\u901a\u8fc7\u5c06\u53e3\u7f69\u8f6c\u79fb\u5230\u4efb\u4f55\u613f\u610f\u652f\u4ed8\u9ad8\u4ef7\u7684\u4eba\u624b\u4e2d\u6765\u8d5a\u53d6\u5de8\u989d\u5229\u6da6\u3002\u8fd9\u8ba9\u533b\u9662\u9677\u5165\u4e86\u56f0\u5883\u3002\u968f\u7740\u51a0\u72b6\u75c5\u6bd2\u5728\u7ebd\u7ea6\u7684\u4f20\u64ad\uff0c\u8fd9\u4f4d\u9ad8\u7ba1\u6240\u5728\u7684\u533b\u9662\u75af\u72c2\u5730\u5bfb\u627e\u53e3\u7f69\uff0c\u6700\u7ec8\u5411\u4e00\u5bb6\u6d77\u5916\u4f9b\u5e94\u5546\u652f\u4ed8\u4e86\u6bcf\u5f206\u7f8e\u5143\uff0c\u8d2d\u4e70\u4e86\u6570\u5341\u4e07\u4e2a\u53e3\u7f69\uff0c\u5f53\u65f6\u5e38\u89c4\u5e93\u5b58\u4e25\u91cd\u77ed\u7f3a\u3002\n\u5f53\u4efb\u4f55\u4eba\u8bd5\u56fe\u5728\u8fd9\u6837\u7684\u7d27\u6025\u60c5\u51b5\u4e0b\u83b7\u53d6\u9ad8\u989d\u5229\u6da6\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u770b\u8d77\u6765\u5f88\u4e11\u964b\u3002\u8003\u8651\u4e00\u4e0b\u4e24\u5144\u5f1f\u7684\u6848\u4f8b\uff0c\u4ed6\u4eec\u4ece3\u67081\u65e5\u5f00\u59cb\u8d2d\u4e70\u6d17\u624b\u6db2\u3001\u53e3\u7f69\u548c\u5176\u4ed6\u7a00\u7f3a\u5546\u54c1\uff0c\u8fd9\u4e00\u5929\u662f\u7f8e\u56fd\u9996\u6b21\u5ba3\u5e03\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u7684\u90a3\u4e00\u5929\u3002\u4ed6\u4eec\u5728\u4e9a\u9a6c\u900a\u548ceBay\u4e0a\u4ee5\u9ad8\u4ef7\u51fa\u552e\u4e86\u4e00\u4e9b\u5546\u54c1\u540e\uff0c\u8fd9\u4e9b\u7f51\u70b9\u5207\u65ad\u4e86\u4ed6\u4eec\u7684\u670d\u52a1\u3002\u6700\u7ec8\uff0c\u5728\u76f8\u5f53\u5927\u7684\u8d1f\u9762\u5ba3\u4f20\u4e4b\u540e\uff0c\u5144\u5f1f\u4fe9\u51b3\u5b9a\u6350\u8d60\u4ed6\u4eec\u7684\u8865\u7ed9\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5144\u5f1f\u4fe9\u901a\u8fc7\u4f4e\u4e70\u9ad8\u5356\uff0c\u4f7f\u5e02\u573a\u53d8\u5f97\u66f4\u52a0\u201c\u6709\u6548\u201d\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u662f\u5bf9\u51a0\u72b6\u75c5\u6bd2\u4f9b\u5e94\u8fdb\u884c\u5957\u5229\uff0c\u800c\u662f\u51fa\u552e\u822a\u7a7a\u516c\u53f8\u548c\u9152\u5e97\u516c\u53f8\u7684\u80a1\u7968\uff0c\u8d2d\u4e70Netflix\u548cZoom\u7684\u80a1\u7968\uff0c\u4ed6\u4eec\u5c31\u4f1a\u88ab\u7b80\u5355\u5730\u89c6\u4e3a\u806a\u660e\u7684\u4ea4\u6613\u5458\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u806a\u660e\u7684\u4ea4\u6613\u5bf9\u4e8e\u6295\u8d44\u6765\u8bf4\u53ef\u80fd\u662f\u4e0d\u9519\u7684\uff0c\u4f46\u5f53\u5b83\u5728\u5927\u6d41\u884c\u671f\u95f4\u6d89\u53ca\u5fc5\u9700\u54c1\u65f6\uff0c\u5c31\u88ab\u8ba4\u4e3a\u662f\u4e0d\u516c\u5e73\u7684\u3002\n\u4eba\u4eec\u53ef\u4ee5\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u79cd\u793e\u4f1a\u89c4\u8303\u662f\u6709\u5bb3\u7684\uff0c\u56e0\u4e3a\u5b83\u963b\u788d\u4e86\u5e02\u573a\u53d1\u6325\u5176\u9b54\u529b\u3002\u4f8b\u5982\uff0c\u4e54\u6cbb\u6885\u68ee\u5927\u5b66(George Mason University)\u7ecf\u6d4e\u5b66\u5bb6\u6cf0\u52d2\u00b7\u8003\u6069(Tyler Cowen)\u66fe\u8868\u793a\uff0c\u4ed6\u5e0c\u671b\u63d0\u9ad8\u51a0\u72b6\u75c5\u6bd2\u5fc5\u9700\u54c1\u7684\u4ef7\u683c\u662f\u53ef\u4ee5\u7684\u3002\n\u4ed6\u5199\u9053\uff1a\u201c\u8f83\u9ad8\u7684\u4ef7\u683c\u6291\u5236\u4e86\u6050\u614c\u6027\u8d2d\u4e70\uff0c\u5e76\u589e\u52a0\u4e86\u771f\u6b63\u9700\u8981\u7279\u5b9a\u5546\u54c1\u548c\u670d\u52a1\u7684\u4eba\u83b7\u5f97\u8fd9\u4e9b\u5546\u54c1\u548c\u670d\u52a1\u7684\u673a\u4f1a\u66f4\u5927\u3002\u201d\n\u4f46\u662f\uff0c\u54ea\u4e9b\u4eba\u201c\u771f\u6b63\u9700\u8981\u201dN95\u53e3\u7f69\u5462\uff1f\u5728\u8d44\u91d1\u5145\u8db3\u7684\u7814\u7a76\u578b\u533b\u9662\u3001\u8d44\u91d1\u4e0d\u8db3\u7684\u5e02\u653f\u8bbe\u65bd\u3001\u7597\u517b\u9662\u548c\u98df\u54c1\u52a0\u5de5\u5382\u4e4b\u95f4\uff0c\u53e3\u7f69\u7684\u6b63\u786e\u5206\u914d\u662f\u4ec0\u4e48\uff1f\u4f9b\u6c42\u5173\u7cfb\u4f1a\u544a\u8bc9\u6211\u4eec\uff0c\u9762\u5177\u5e94\u8be5\u7b80\u5355\u5730\u5356\u7ed9\u613f\u610f\u5e76\u6709\u80fd\u529b\u652f\u4ed8\u6700\u9ad8\u4ef7\u683c\u7684\u4e70\u5bb6\u3002\u4f46\u516c\u5e73\u5730\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u4e0d\u53ef\u80fd\u662f\u552f\u4e00\u7684\u8003\u8651\u56e0\u7d20\u3002\n\u5bf9\u4e8e\u60f3\u8981\u957f\u671f\u7ecf\u8425\u7684\u5927\u5927\u5c0f\u5c0f\u7684\u4f01\u4e1a\u6765\u8bf4\uff0c\u9075\u5b88\u516c\u5e73\u6cd5\u5219\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002\u5982\u679c\u4e0b\u4e00\u4e2a\u77ed\u7f3a\u7684\u662f\u8089\u7c7b\uff0c\u800c\u5e97\u4e3b\u610f\u8bc6\u5230\u53ea\u5269\u4e0b\u4e00\u5305\u732a\u6392\uff0c\u90a3\u4e48\u628a\u5b83\u62cd\u5356\u7ed9\u51fa\u4ef7\u6700\u9ad8\u7684\u4eba\u662f\u4e0d\u660e\u667a\u7684\u3002\n\u7406\u67e5\u5fb7\u00b7H\u00b7\u6cf0\u52d2(Richard H.Thaler)\u662f\u829d\u52a0\u54e5\u5927\u5b66\u5e03\u65af\u5546\u5b66\u9662(Booth School Of Business At The University Of Chicago)\u7ecf\u6d4e\u5b66\u548c\u884c\u4e3a\u79d1\u5b66\u6559\u6388\u3002\u5728\u63a8\u7279\u4e0a\u5173\u6ce8\u4ed6\uff1a@R_Thaler", "note_en": "For an economist, one of the most jarring sights during the early weeks of the coronavirus crisis in the United States was the spectacle of bare shelves in sections of the supermarket.\n There was no toilet paper or hand sanitizer. Pasta, flour and even yeast could be hard to find in the early weeks of social distancing, as many people decided to take up baking. Of far greater concern, hospitals could not buy enough of the masks, gowns and ventilators required to safely treat Covid-19 patients.\n What happened to the laws of supply and demand? Why didn\u2019t prices rise enough to clear the market, as economic models predict?\n A  paper that I wrote with my friends Daniel Kahneman, a psychologist, and Jack Knetsch, an economist, explored this problem. We found that the answer may be summed up with a single word, one you won\u2019t find in the standard supply-and-demand models: fairness. Basically, it just isn\u2019t socially acceptable to raise prices in an emergency.\n We asked people questions about the actions of hypothetical firms. For example: \u201cA hardware store has been selling snow shovels for $15. The morning after a blizzard the store raises the price of snow shovels to $20.\u201d\n  Fully 82 percent of our respondents judged this to be unfair. The respondents were Canadians, known for their politeness, but the general findings have now been replicated and confirmed in studies around the world.\n Most companies implicitly understand that abiding by the social norms of fairness should be part of their business model. In the current crisis, large retail chains have responded to the shortages of toilet paper not by raising the price but by limiting the amount each customer can buy. And Amazon and eBay prohibited what was viewed as price gouging on their sites.\n We have seen  similar behavior after hurricanes. As soon as a storm ends, there is typically enormous demand for goods like bottled water and plywood. Big retailers like Home Depot and Walmart anticipate this, sending trucks loaded with supplies to regions just outside the danger zone, ready to be deployed. Then, when it is safe, the stores provide water for free and sell the plywood at the list price  or lower.\n At the same time, some \u201centrepreneurs\u201d are likely to behave differently. They see a disaster as an opportunity and so will fill up trucks with plywood near their homes, drive to the storm site and sell their goods for whatever price they can get.\n It is not that large retailers are intrinsically more ethical than the entrepreneurs; it is simply that they have different time horizons. The large companies are playing a long game, and by behaving \u201cfairly\u201d they are hoping to retain customer loyalty after the emergency. The entrepreneurs are just interested in a quick buck.\n  Fairness norms help explain the breakdown of supply chains of medical equipment in the coronavirus crisis. Hospitals normally use buying associations that make long-term deals with wholesalers to provide essential supplies. The wholesalers generally want to preserve these relationships and realize that now would not be a good time to raise prices. Often, they are contractually obligated to supply items at prices negotiated before a spike in demand.\n  One current example is the N95 face mask. At the onset of the pandemic, hospitals had long-term contracts to buy them for about 35 cents each, an executive at a New York hospital told me. When the need for the masks surged, these suppliers were not allowed to raise the price, even if inclined to do so.\n But others along the supply chain could make big profits by diverting masks to anyone willing to pay top dollar. That left hospitals in a bind. As the coronavirus spread in New York, the executive\u2019s hospital searched frantically for masks, eventually paying an overseas supplier $6 each, for hundreds of thousands of them, when the regular stock was desperately short.\n  When anyone tries to reap big profits in an emergency like this, it can look ugly. Consider the  case of two brothers who began buying hand sanitizer, masks and other scarce commodities on March 1, the day of the first announcement of a Covid-19 death in the United States. After they sold some of their merchandise at big markups on Amazon and eBay, these outlets cut them off. Eventually, after considerable adverse publicity, the brothers decided to donate their supplies.\n Notice that the brothers were making markets more \u201cefficient,\u201d by buying low and selling high. If instead of arbitraging coronavirus supplies they had sold shares of airline and hotel companies and bought shares of Netflix and Zoom, they would simply have been considered smart traders. But while smart trading may be fine for investments, it is not considered fair when it involves essential goods during a pandemic.\n One can argue that this social norm is harmful in that it prevents markets from doing their magic. For example,  Tyler Cowen, the George Mason University economist, has said he wishes it were OK to raise prices for coronavirus essentials.\n \u201cHigher prices discourage panic buying and increase the chance that the people who truly need particular goods and services have a greater chance of getting them,\u201d he  wrote.\n But which people \u201ctruly need\u201d N95 masks? What is the right allocation of masks among well-endowed research hospitals, poorly funded municipal facilities, nursing homes and food processing plants? Supply and demand would tell us that the masks should simply go to the buyer who was willing and able to pay the most for them. But fairness tells us this can\u2019t be the only consideration.\n As a practical matter for businesses, big and small, that want to keep operating for the long haul, it makes good sense to obey the law of fairness. If the next shortage is meat and a store owner realizes that there is only one package of pork chops left, it would be unwise sell it at auction to the highest bidder.\n Richard H. Thaler is a professor of economics and behavioral science at the Booth School of Business at the University of Chicago. Follow him on Twitter:  @R_Thaler", "posttime": "2020-05-24 23:28:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7406\u67e5\u5fb7,supply,\u4ef7\u683c", "title": "\u201c\u4f9b\u6c42\u6cd5\u5219\u4e0d\u516c\u5e73\u201d\u7406\u67e5\u5fb7\u00b7\u6cf0\u52d2\u8457", "title_en": "The Law of Supply and Demand Isn\u2019t Fair By Richard Thaler", "transed": 1, "url": "https://www.nytimes.com/2020/05/20/business/supply-and-demand-isnt-fair.html", "via": "", "real_tags": ["\u7406\u67e5\u5fb7", "supply", "\u4ef7\u683c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003523, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662fPython\u5f02\u6b65\u6a21\u5757\u7684\u5feb\u901f\u6307\u5357\uff0c\u57fa\u4e8ePython\u7248\u672c3.8\u3002\n\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4ece\u623f\u95f4\u91cc\u7684\u5927\u8c61\u5f00\u59cb\uff1aPython\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u8bb8\u591a\u6a21\u5757\u6765\u5904\u7406\u5f02\u6b65/\u5e76\u53d1/\u591a\u8fdb\u7a0b\u4ee3\u7801\u2026\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecd\u6700\u540e\u4e24\u4e2a(\u4e3b\u8981\u662f\u5f02\u6b65\uff0c\u5e76\u4ee5concurrent.Futures\u7ed3\u5c3e)\u3002\u7ebf\u7a0b\u548c\u591a\u5904\u7406\u6a21\u5757\u4f4d\u4e8e\u5b83\u4eec\u4e0b\u9762\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5b83\u4eec\u3002\n\u6ce8\u610f\uff1aTHREAD\u6a21\u5757\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u975e\u5e38\u4f4e\u7ea7\u7684API\uff0c\u7ebf\u7a0b\u6a21\u5757\u6784\u5efa\u5728\u8be5API\u4e4b\u4e0a(\u540c\u6837\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e0d\u4f1a\u4ecb\u7ecd\u5b83\u7684\u539f\u56e0)\u3002\nAsyncio\u6a21\u5757\u63d0\u4f9b\u9ad8\u7ea7\u548c\u4f4e\u7ea7API\u3002\u5e93\u548c\u6846\u67b6\u5f00\u53d1\u4eba\u5458\u5c06\u88ab\u8981\u6c42\u4f7f\u7528\u4f4e\u7ea7API\uff0c\u800c\u6240\u6709\u5176\u4ed6\u7528\u6237\u5219\u88ab\u9f13\u52b1\u4f7f\u7528\u9ad8\u7ea7API\u3002\n\u5728\u6982\u5ff5\u4e0a\uff0c\u5b83\u4e0e\u66f4\u4f20\u7edf\u7684\u7ebf\u7a0b\u6216\u591a\u8fdb\u7a0b\u5f02\u6b65\u4ee3\u7801\u6267\u884c\u65b9\u6cd5\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u5229\u7528\u79f0\u4e3a\u4e8b\u4ef6\u5faa\u73af\u7684\u4e1c\u897f\u6765\u5904\u7406\u8fd9\u4e9b\u5f02\u6b65\u4efb\u52a1\u7684\u8c03\u5ea6\u3002\n\u6211\u4eec\u7a0d\u540e\u5c06\u89e3\u91ca\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\uff0c\u4f46\u9996\u5148\u8ba9\u6211\u4eec\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u5e76\u53d1\u3002\u672a\u6765\u3002\n\u672a\u6765\u4e3a\u7ebf\u7a0b\u548c\u591a\u5904\u7406\u6a21\u5757\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u62bd\u8c61\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u5b83\u4eec\u7684\u539f\u56e0\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u60a8\u5e0c\u671b\u5728\u7ebf\u7a0b\u6c60\u6216\u5b50\u8fdb\u7a0b\u6c60\u4e2d\u5f02\u6b65\u6267\u884c\u4ee3\u7801\uff0c\u540c\u65f6\u8fd8\u5e0c\u671b\u4f7f\u7528\u5e72\u51c0\u3001\u73b0\u4ee3\u7684Python API(\u4e0e\u66f4\u7075\u6d3b\u4f46\u66f4\u4f4e\u7ea7\u7684\u7ebf\u7a0b\u6216\u591a\u5904\u7406\u6a21\u5757\u76f8\u5bf9)\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528concurrent.Futures\u3002\n\u6240\u6709\u5f02\u6b65\u5e94\u7528\u7a0b\u5e8f\u7684\u6838\u5fc3\u5143\u7d20\u662f\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\u3002\u4e8b\u4ef6\u5faa\u73af\u662f\u8c03\u5ea6\u548c\u8fd0\u884c\u5f02\u6b65\u4efb\u52a1\u7684\u5bf9\u8c61(\u5b83\u8fd8\u5904\u7406\u7f51\u7edcIO\u64cd\u4f5c\u548c\u5b50\u8fdb\u7a0b\u7684\u8fd0\u884c)\u3002\n\u6ce8\u610f\uff1aFutures\u662f\u4e00\u79cd\u4f4e\u7ea7\u7c7b\u578b\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u4e0d\u662f\u5e93/\u6846\u67b6\u5f00\u53d1\u4eba\u5458(\u56e0\u4e3a\u60a8\u5e94\u8be5\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u62bd\u8c61API)\uff0c\u90a3\u4e48\u60a8\u4e0d\u5e94\u8be5\u592a\u62c5\u5fc3\u5b83\u3002\n\u57fa\u4e8e\u751f\u6210\u5668\u7684\u534f\u540c\u4f8b\u7a0b\u51fd\u6570(\u4f8b\u5982\uff0c\u901a\u8fc7\u4f7f\u7528@asyncio.coroutine\u4fee\u9970\u51fd\u6570\u5b9a\u4e49\u7684\u90a3\u4e9b\u51fd\u6570)\u5c06\u88ab\u5f02\u6b65/\u7b49\u5f85\u8bed\u6cd5\u53d6\u4ee3\uff0c\u4f46\u5728Python3.10-docs.python.org/3.8/library/asyncio-task.html.\u4e4b\u524d\u5c06\u7ee7\u7eed\u53d7\u652f\u6301\u3002\n\u53c2\u8003\u6211\u7684\u5e16\u5b50\u201c\u8fed\u4ee3\u5668\uff0c\u751f\u6210\u5668\uff0c\u534f\u7a0b\u201d\uff0c\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u57fa\u4e8e\u751f\u6210\u5668\u7684\u534f\u7a0b\u53ca\u5176\u5f02\u6b65\u5386\u53f2\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\u6240\u6709\u5f02\u6b65\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u90fd(\u81f3\u5c11)\u5177\u6709\u5355\u4e2a\u201c\u4e3b\u201d\u5165\u53e3\u70b9\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u5c06\u88ab\u8c03\u5ea6\u4e3a\u7acb\u5373\u5728\u4e8b\u4ef6\u5faa\u73af\u4e0a\u8fd0\u884c\u3002\u8fd9\u662f\u4f7f\u7528asyncio.run\u51fd\u6570\u5b8c\u6210\u7684(\u8bf7\u53c2\u89c1\u201c\u8fd0\u884c\u5f02\u6b65\u7a0b\u5e8f\u201d)\u3002\n\u5e94\u8be5\u5c06\u534f\u7a0b\u51fd\u6570\u4f20\u9012\u7ed9asyncio.run\uff0c\u800c\u5728\u5185\u90e8\uff0casyncio\u5c06\u4f7f\u7528\u52a9\u624b\u51fd\u6570coroutines.iscoroutine\u6765\u68c0\u67e5\u8fd9\u4e00\u70b9(\u53c2\u89c1\uff1a\u6e90\u4ee3\u7801)\u3002\u5982\u679c\u4e0d\u662f\u534f\u7a0b\uff0c\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\uff0c\u5426\u5219\u534f\u7a0b\u5c06\u4f20\u9012\u7ed9loop.run_Until_Complete(\u8bf7\u53c2\u9605\uff1a\u6e90\u4ee3\u7801)\u3002\nRun_Until_Complete\u51fd\u6570\u671f\u671b\u4e00\u4e2aFuture(\u6709\u5173\u4ec0\u4e48\u662fFuture\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u90e8\u5206)\uff0c\u5e76\u4f7f\u7528\u53e6\u4e00\u4e2a\u52a9\u624b\u51fd\u6570futures.isFuture\u6765\u68c0\u67e5\u63d0\u4f9b\u7684\u7c7b\u578b\u3002\u5982\u679c\u4e0d\u662fFuture\uff0c\u5219\u4f7f\u7528\u4f4e\u7ea7API Assure_Future\u5c06\u534f\u7a0b\u8f6c\u6362\u4e3aFuture(\u53c2\u89c1\u6e90\u4ee3\u7801)\u3002\n\u6ce8\u610f\uff1a\u4ee5\u4e0b\u662f\u9a8c\u8bc1\u51fd\u6570\u662f\u5426\u4e3a\u534f\u7a0b\u7684\u5404\u79cd\u65b9\u6cd5\u7684\u6bd4\u8f83\u3002\u7ed3\u679c\u5e76\u4e0d\u4e00\u5b9a\u5982\u60a8\u6240\u6599\u3002\n\u5728\u65e7\u7248\u672c\u7684Python\u4e2d\uff0c\u5982\u679c\u60a8\u6253\u7b97\u624b\u52a8\u521b\u5efa\u81ea\u5df1\u7684Future\u5e76\u5c06\u5176\u8c03\u5ea6\u5230\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u4f7f\u7528asyncio.sure_Future(\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4f4e\u7ea7API)\uff0c\u4f46\u662f\u5728Python3.7+\u4e2d\uff0c\u8fd9\u5df2\u7ecf\u88abasyncio.create_task\u6240\u53d6\u4ee3\u3002\n\u6b64\u5916\uff0c\u5728Python3.7\u4e2d\uff0c\u76f4\u63a5\u4e0e\u4e8b\u4ef6\u5faa\u73af\u4ea4\u4e92\u7684\u60f3\u6cd5(\u4f8b\u5982\uff0c\u83b7\u53d6\u4e8b\u4ef6\u5faa\u73af\uff0c\u4f7f\u7528create_task\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u5c06\u5176\u4f20\u9012\u7ed9\u4e8b\u4ef6\u5faa\u73af)\u5df2\u7ecf\u88abasyncio.run\u6240\u53d6\u4ee3\uff0c\u5b83\u4e3a\u60a8\u62bd\u8c61\u4e86\u6240\u6709\u8fd9\u4e9b(\u8bf7\u53c2\u9605\u201c\u8fd0\u884c\u5f02\u6b65\u7a0b\u5e8f\u201d\u6765\u7406\u89e3\u8fd9\u662f\u4ec0\u4e48\u610f\u601d)\u3002\n\u4ee5\u4e0bAPI\u53ef\u8ba9\u60a8\u67e5\u770b\u4e8b\u4ef6\u5faa\u73af\u4e0a\u8fd0\u884c\u7684\u4efb\u52a1\u7684\u72b6\u6001\uff1a\nFuture\u662f\u8868\u793a\u5f02\u6b65\u64cd\u4f5c\u7684\u6700\u7ec8\u7ed3\u679c\u7684\u4f4e\u7ea7\u53ef\u7b49\u5f85\u5bf9\u8c61\u3002\n\u6253\u4e2a\u6bd4\u65b9\uff1a\u5b83\u5c31\u50cf\u4e00\u4e2a\u7a7a\u7684\u90ae\u7bb1\u3002\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u90ae\u9012\u5458\u4f1a\u5230\u8fbe\u5e76\u628a\u4e00\u5c01\u4fe1\u585e\u8fdb\u90ae\u7bb1\u3002\n\u6b64API\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u4f7f\u57fa\u4e8e\u56de\u8c03\u7684\u4ee3\u7801\u80fd\u591f\u4e0e\u5f02\u6b65/\u7b49\u5f85\u4e00\u8d77\u4f7f\u7528\uff0c\u800cloop.run_in_ecutor\u662f\u8fd4\u56deFuture\u7684\u5f02\u6b65\u4f4e\u7ea7API\u51fd\u6570\u7684\u793a\u4f8b(\u53e6\u8bf7\u53c2\u9605\u5e76\u53d1\u51fd\u6570\u4e2d\u5217\u51fa\u7684\u4e00\u4e9bAPI)\u3002\nimport asyncioasync def foo()\uff1aprint(&#34\uff1bfoo\uff01&#34\uff1b)async def hello_world()\uff1aawait foo()#\u7b49\u5f85`foo()`\u5b8c\u6210\u6253\u5370(&#34\uff1bHello World\uff01&#34\uff1b)asyncio.run(hello_world())\nrun\u51fd\u6570\u603b\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u5e76\u5728\u7ed3\u675f\u65f6\u5c06\u5176\u5173\u95ed\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u8f83\u4f4e\u7ea7\u522b\u7684API\uff0c\u90a3\u4e48\u8fd9\u5c06\u662f\u60a8\u5fc5\u987b\u624b\u52a8\u5904\u7406\u7684\u4e8b\u60c5(\u5982\u4e0b\u6240\u793a)\u3002\n\u5728Python3.8\u4e4b\u524d\uff0c\u60a8\u4e0d\u80fd\u5728\u6807\u51c6Python REPL\u4e2d\u6267\u884c\u5f02\u6b65\u4ee3\u7801(\u5b83\u5c06\u8981\u6c42\u60a8\u6539\u7528IPython REPL)\u3002\n\u8981\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684Python\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u60a8\u9700\u8981\u8fd0\u884cpython-m asyncio\u3002\u4e00\u65e6REPL\u542f\u52a8\uff0c\u60a8\u5c31\u4e0d\u9700\u8981\u4f7f\u7528asyncio.run()\uff0c\u53ea\u9700\u76f4\u63a5\u4f7f\u7528await\u8bed\u53e5\u5373\u53ef\u3002\n\u5f02\u6b65REPL 3.8.0+(HEADS/3.8\uff1a5f234538ab\uff0c2019\u5e7412\u67081\uff0c11\uff1a05\uff1a25)[clang 10.0.1(clang-1001.0.46.4)](\u76f4\u63a5\u5728darwinUse&#34\uff1b\u7b49\u5f85&#34\uff1b\u800c\u4e0d\u662f&#34\uff1basyncio.run()&#34\uff1b.Type&#34\uff1bHelp&#34\uff1b\uff0c&#34\uff1b\u7248\u6743&#34\uff1b&#34\uff1bCredits&#34\uff1b\u6216&#34\uff1bLicense&34\uff1b\u952e\u5165&#34\uff1b\u5e2e\u52a9&#34\uff1b\uff0c&#34\uff1b\u7248\u6743&#34\uff1b&#34\uff1b\u4fe1\u7528&#34\uff1b\u6216&#34\uff1b\u8bb8\u53ef\u8bc1&\u3002\u5bfc\u5165\u5f02\u6b65\u5b9a\u4e49Foo()\uff1a&&gt;\uff1b&gt\uff1b&gt\uff1b\u5f02\u6b65\u5b9a\u4e49Foo()\uff1a.\u3002\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720(5)\u2026\u2026\u3002\u6253\u5370(&#34\uff1b\u5b8c\u6210&#34\uff1b).&gt\uff1b&gt\uff1b&gt\uff1b\u7b49\u5f85foo()\u5b8c\u6210\u3002\n\u8bf7\u6ce8\u610f\uff0cREPL\u5728\u542f\u52a8\u65f6\u81ea\u52a8\u6267\u884cimport asyncio\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55asyncio\u51fd\u6570(\u5982.sleep\u51fd\u6570)\uff0c\u800c\u4e0d\u5fc5\u81ea\u5df1\u624b\u52a8\u952e\u5165import\u8bed\u53e5\u3002\n\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u60a8\u4e0d\u60f3\u4f7f\u7528asyncio\u63d0\u4f9b\u7684\u4e8b\u4ef6\u5faa\u73af(\u8fd9\u662f\u4e00\u4e2a\u7eafPython\u5b9e\u73b0)\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\uff0c\u5982uvloop\u3002\nuvloop\u662f\u5185\u7f6e\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u7684\u5feb\u901f\u63d2\u5165\u5f0f\u66ff\u4ee3\u3002uvloop\u662f\u7528Cython\u5b9e\u73b0\u7684\uff0c\u5e76\u5728\u5e55\u540e\u4f7f\u7528libuv\u3002\n\u6839\u636euvloop\u7684\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u5b83\u5728\u901f\u5ea6\u4e0a\u53ef\u4ee5\u4e0e\u56f4\u68cb\u7a0b\u5e8f\u76f8\u5ab2\u7f8e\uff01\u6211\u63a8\u8350\u9605\u8bfb\u4ed6\u4eec\u5173\u4e8e\u5176\u6700\u521d\u7248\u672c\u7684\u535a\u5ba2\u6587\u7ae0\u3002\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528uvloop\uff0c\u90a3\u4e48\u9996\u5148\u4f7f\u7528pip install uvloop\u5b89\u88c5\u5b83\uff0c\u7136\u540e\u6dfb\u52a0\u5bf9uvloop.install()\u7684\u8c03\u7528\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4ee5\u4e0b\u51fd\u6570\u6709\u52a9\u4e8e\u534f\u8c03\u51fd\u6570\u7684\u5e76\u53d1\u8fd0\u884c\uff0c\u5e76\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u63d0\u4f9b\u4e0d\u540c\u7a0b\u5ea6\u7684\u63a7\u5236\u3002\n\u7b49\u5f85\uff1a\u7b49\u5f85\u4e00\u7cfb\u5217\u7b49\u5f85\uff0c\u76f4\u5230\u6ee1\u8db3\u7ed9\u5b9a\u7684\u201c\u6761\u4ef6\u201d\u3002\n\u6ce8\uff1aGather\u5177\u6709\u7528\u4e8e\u5904\u7406\u9519\u8bef\u548c\u53d6\u6d88\u7684\u7279\u5b9a\u9009\u9879\u3002\u4f8b\u5982\uff0c\u5982\u679cRETURN_EXCEPTIONS\uff1aFALSE\uff0c\u5219\u5c06\u5176\u4e2d\u4e00\u4e2a\u7b49\u5f85\u5bf9\u8c61\u5f15\u53d1\u7684\u7b2c\u4e00\u4e2a\u5f02\u5e38\u8fd4\u56de\u7ed9GATHER\u7684\u8c03\u7528\u65b9\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u5f02\u5e38\u5c06\u4e0e\u6210\u529f\u7684\u7ed3\u679c\u4e00\u8d77\u805a\u5408\u5728\u5217\u8868\u4e2d\u3002\u5982\u679cGather()\u88ab\u53d6\u6d88\uff0c\u5219\u6240\u6709\u63d0\u4ea4\u7684\u7b49\u5f85\u9879(\u5c1a\u672a\u5b8c\u6210)\u4e5f\u5c06\u88ab\u53d6\u6d88\u3002\n\u6ce8\u610f\uff1a\u60a8\u4f1a\u53d1\u73b0\u5728\u8fd9\u4e9bAPI\u4e2d\u7684\u5927\u591a\u6570\u4e2d\u90fd\u53ef\u4ee5\u63d0\u4f9b\u5faa\u73af\u53c2\u6570\uff0c\u4ee5\u4f7f\u60a8\u80fd\u591f\u6307\u793a\u60a8\u60f3\u8981\u5229\u7528\u7684\u7279\u5b9a\u4e8b\u4ef6\u5faa\u73af)\u3002Python\u4f3c\u4e4e\u5df2\u7ecf\u57283.8\u4e2d\u5f03\u7528\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u5e76\u5c06\u57283.10\u4e2d\u5b8c\u5168\u5220\u9664\u5b83\u3002\n\u5bfc\u5165\u5f02\u6b65def foo(N)\uff1a\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720(5)#\u7b49\u5f855s\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u6253\u5370(f&#34\uff1bn\uff1a{n}\uff01&#34\uff1b)\u5f02\u6b65def main()\uff1aTasks=[foo(1)\uff0cfoo(2)\uff0cfoo(3)]\u7b49\u5f85asyncio.ather(*Tasks)asyncio.run(main())\u3002\n\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528FIRST_COMPLETED\u9009\u9879\uff0c\u8fd9\u610f\u5473\u7740\u9996\u5148\u5b8c\u6210\u7684\u4efb\u52a1\u5c31\u662f\u5c06\u8fd4\u56de\u7684\u4efb\u52a1\u3002\n\u4ece\u968f\u673a\u5bfc\u5165\u7684\u968f\u673a\u5bfc\u5165\u5bfc\u5165\u5f02\u6b65easync def foo(N)\uff1aS=randrange(5)print(f&#34\uff1b{n}\u5c06\u4f11\u7720\uff1a{s}\u79d2&#34\uff1b)\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720\u6253\u5370(f&#34\uff1bn\uff1a{n}\uff01&#34\uff1b)\u5f02\u6b65def main()\uff1aTasks=[foo(1)\uff0cfoo(2)\uff0cfoo(3)]result=await\u5f02\u6b65cio.wait\n1\u5c06\u4f11\u7720\uff1a4\u79d22\u5c06\u4f11\u7720\uff1a2\u79d23\u5c06\u4f11\u7720\uff1a1\u79d2sn\uff1a3\uff01({&lt\uff1b\u4efb\u52a1\u5df2\u5b8c\u6210coro=&lt\uff1bfoo()\u5df2\u5b8c\u6210\uff0c\u5728wait.py\uff1a5&gt\uff1bresult=NONE&gt\uff1b}\uff0c{&lt\uff1b\u4efb\u52a1\u6302\u8d77coro=&lt\uff1bfoo()\u5728wait.py\uff1a8&gt\uff1bwait_for=&lt\uff1b\u672a\u6765\u6302\u8d77cb=[&lt\uff1bWAIT_FOR=&lt\uff1b\u5c06\u6765\u6302\u8d77\u7684CB=[&lt\uff1bTaskWakeupMethWrapper\u5bf9\u8c61\u4f4d\u4e8e0x10322b4c8&gt\uff1b()]&gt\uff1b&gt\uff1b})\u3002\n\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5229\u7528\u8d85\u65f6\u6765\u9632\u6b62\u65e0\u4f11\u6b62\u5730\u7b49\u5f85\u5f02\u6b65\u4efb\u52a1\u5b8c\u6210\u3002\n\u5bfc\u5165\u5f02\u6b65def foo(N)\uff1a\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720(10)\u6253\u5370(f&#34\uff1bn\uff1a{n}\uff01&#34\uff1b)\u5f02\u6b65def main()\uff1atry\uff1a\u7b49\u5f85\u5f02\u6b65\u3002wait_for(foo(1)\uff0ctimeout=5)\u9664\u5f02\u6b65\u5916\u3002TimeoutError\uff1a\u6253\u5370(&#34\uff1btimeout\uff01&#34\uff1b)asyncio.run(main())\u3002\n\u6ce8\u610f\uff1aasyncio.TimeoutError\u4e0d\u63d0\u4f9b\u4efb\u4f55\u989d\u5916\u4fe1\u606f\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u5c1d\u8bd5\u5728\u8f93\u51fa\u4e2d\u4f7f\u7528\u5b83(\u4f8b\u5982\uff0c\u5c06asyncio.TimeoutError\u7528\u4f5cerr\uff1aprint(Err)\u9664\u5916)\u3002\n\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86AS_COMPLETE\u5c06\u5982\u4f55\u751f\u6210\u8981\u5b8c\u6210\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u662f\u4e0b\u4e00\u4e2a\u6700\u5feb\u7684\u4efb\u52a1\uff0c\u7136\u540e\u662f\u4e0b\u4e00\u4e2a\u4efb\u52a1\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u90fd\u5b8c\u6210\u3002\n\u4ece\u968f\u673a\u5bfc\u5165\u7684\u968f\u673a\u5bfc\u5165\u5bfc\u5165\u5f02\u6b65easync def Foo(N)\uff1aS=randrange(10)print(f&#34\uff1b{n}\u5c06\u4f11\u7720\uff1a{s}\u79d2&34\uff1b)\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720\u8fd4\u56def&#34\uff1b{n}\uff01&#34\uff1b\u5f02\u6b65def main()\uff1a\u8ba1\u6570\u5668=0\u4efb\u52a1=[foo(&#34\uff1ba&#34\uff1b)\uff0cfoo(&#34\uff1bb&#34\uff1b)\uff0cfoo(&#34\uff1bb&#34\uff1b)\uff0cFoo(&#34\uff1ba&#34\uff1b)\uff0cfoo(&#34\uff1bb&#34\uff1b)\uff0cfoo(&#34\uff1ba&#34\uff1b)\uff0cfoo(&#34\uff1ba&#34\uff1b)\uff0cfoo\u3002\u6700\u5feb&#34\uff1b\u5982\u679c\u8ba1\u6570\u5668==0\uff0c\u5426\u5219&#34\uff1b\u4e0b\u4e00\u4e2a\u6700\u5feb&#34\uff1b\u8ba1\u6570\u5668+=1\u7ed3\u679c=\u7b49\u5f85\u5c06\u6765\u6253\u5370(f&#34\uff1b{n}\u7ed3\u679c\u662f\uff1a{result}&#34\uff1b)asyncio.run(main())\u3002\nc\u5c06\u4f11\u7720\uff1a9\u79d2a\u5c06\u4f11\u7720\uff1a1\u79d2b\u5c06\u4f11\u7720\uff1a0\u79d2\u6700\u5feb\u7684\u7ed3\u679c\u662f\uff1ab\uff01\u6b21\u5feb\u7684\u7ed3\u679c\u662f\uff1aa\uff01\u6b21\u5feb\u7684\u7ed3\u679c\u662f\uff1ac\uff01\n\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5c06\u534f\u7a0b\u8f6c\u6362\u4e3aTask\uff0c\u5e76\u5c06\u5176\u8c03\u5ea6\u5230\u4e8b\u4ef6\u5faa\u73af\u4e0a\u3002\n\u5bfc\u5165\u5f02\u6b65\u5f02\u6b65def foo()\uff1a\u7b49\u5f85\u5f02\u6b65\u3002\u7761\u7720(10)\u6253\u5370(&#34\uff1bfoo\uff01&#34\uff1b)\u5f02\u6b65\u5b9a\u4e49hello_world()\uff1atask=asyncio.create_task(foo())print(Task)\u7b49\u5f85\u5f02\u6b65\u3002sleep(5)\u6253\u5370(&#34\uff1bHello World\uff01&#34\uff1b)\u7b49\u5f85\u5f02\u6b65cio.sleep(10)\u6253\u5370(\u4efb\u52a1)\u5f02\u6b65\u8fd0\u884c(hello_\u3002\n\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\u770b\u5230\uff0c\u6211\u4eec\u4f7f\u7528CREATE_TASK\u5c06\u534f\u7a0b\u51fd\u6570\u8f6c\u6362\u4e3a\u4efb\u52a1\u3002\u8fd9\u4f1a\u81ea\u52a8\u5c06\u4efb\u52a1\u5b89\u6392\u5728\u4e0b\u4e00\u4e2a\u53ef\u7528\u523b\u5ea6\u7684\u4e8b\u4ef6\u5faa\u73af\u4e0a\u8fd0\u884c\u3002\n\u8fd9\u4e0e\u8f83\u4f4e\u7ea7\u522b\u7684API Assure_Future(\u521b\u5efa\u65b0\u4efb\u52a1\u7684\u9996\u9009\u65b9\u5f0f)\u5f62\u6210\u5bf9\u6bd4\u3002\u4e0eCREATE_TASK\u76f8\u6bd4\uff0cSECURE_FOREND\u51fd\u6570\u5177\u6709\u7279\u5b9a\u7684\u903b\u8f91\u5206\u652f\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u66f4\u591a\u7684\u8f93\u5165\u7c7b\u578b\u6709\u7528\uff0cCREATE_TASK\u53ea\u652f\u6301\u5c06\u534f\u7a0b\u8c03\u5ea6\u5230\u4e8b\u4ef6\u5faa\u73af\u4e0a\uff0c\u5e76\u5c06\u5176\u5305\u88c5\u5728\u4efb\u52a1\u4e2d(\u8bf7\u53c2\u9605\uff1aSECURE_FOREND\u6e90\u4ee3\u7801)\u3002\n\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u4ee3\u7801\uff0c\u5e76\u4e0e\u4e0a\u9762\u7684\u8f93\u51fa\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u2026\u3002\n\u6211\u4eec\u5c06foo()\u8f6c\u6362\u4e3aTask\uff0c\u7136\u540e\u5728\u521b\u5efa\u540e\u7acb\u5373\u6253\u5370\u8fd4\u56de\u7684Task\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u6253\u5370\u4efb\u52a1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u72b6\u6001\u663e\u793a\u4e3a\u201c\u6302\u8d77\u201d(\u56e0\u4e3a\u5b83\u8fd8\u6ca1\u6709\u6267\u884c)\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4f11\u77205\u79d2\u949f\uff0c\u56e0\u4e3a\u8fd9\u5c06\u5bfc\u81f4foo Task\u73b0\u5728\u6b63\u5728\u8fd0\u884c(\u56e0\u4e3a\u5f53\u524d\u7684Task hello_world\u5c06\u88ab\u89c6\u4e3a\u7e41\u5fd9)\u3002\n\u5728foo Task\u4e2d\uff0c\u6211\u4eec\u4e5f\u4f1a\u4f11\u7720\uff0c\u4f46\u662f\u7761\u7720\u7684\u65f6\u95f4\u6bd4hello_world\u957f\uff0c\u56e0\u6b64\u4e8b\u4ef6\u5faa\u73af\u73b0\u5728\u5c06\u4e0a\u4e0b\u6587\u5207\u6362\u56dehello_world\u4efb\u52a1\uff0c\u5728\u90a3\u91cc\u4f11\u7720\u5c06\u8fc7\u53bb\uff0c\u6211\u4eec\u5c06\u6253\u5370\u8f93\u51fa\u5b57\u7b26\u4e32Hello World\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u53c8\u7761\u4e86\u5341\u79d2\u949f\u3002\u8fd9\u53ea\u662f\u4e3a\u4e86\u7ed9foo Task\u8db3\u591f\u7684\u65f6\u95f4\u6765\u5b8c\u6210\u5e76\u6253\u5370\u5b83\u81ea\u5df1\u7684\u8f93\u51fa\u3002\u5982\u679c\u6211\u4eec\u6ca1\u6709\u8fd9\u6837\u505a\uff0c\u90a3\u4e48hello_world\u4efb\u52a1\u5c06\u5b8c\u6210\u5e76\u5173\u95ed\u4e8b\u4ef6\u5faa\u73af\u3002hello_world\u7684\u6700\u540e\u4e00\u884c\u662f\u6253\u5370foo Task\uff0c\u6211\u4eec\u5c06\u5728\u5176\u4e2d\u770b\u5230foo Task\u7684\u72b6\u6001\u73b0\u5728\u5c06\u663e\u793a\u4e3a\u201c\u5b8c\u6210\u201d\u3002\n\u5728\u5904\u7406\u4efb\u52a1(\u5b9e\u9645\u4e0a\u5c31\u662fFuture)\u65f6\uff0c\u4e00\u65e6Future\u8bbe\u7f6e\u4e86\u503c\uff0c\u60a8\u5c31\u53ef\u4ee5\u6267\u884c\u201c\u56de\u8c03\u201d\u51fd\u6570\u3002\nimport asyncioasync def foo()\uff1a\u7b49\u5f85Asyncio.sleep(10)return&#34\uff1bfoo\uff01&#34\uff1bdef get_result(Future)\uff1aprint(f&#34\uff1bget result\uff01{future.result()}&#34\uff1b)async def hello_world()\uff1atask=asyncio.create_task(foo())task.add_do_callback(Get_Result)print(Task)\u7b49\u5f85\u3002)\u7b49\u5f85asyncio.sleep(10)\u6253\u5370(\u4efb\u52a1)asyncio.run(hello_world())\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684GET_RESULT\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u671f\u671b\u63a5\u6536Future\u7c7b\u578b\uff0c\u56e0\u6b64\u5bf9Future\u8c03\u7528.result()\u3002\n\u8fd8\u8981\u6ce8\u610f\uff0c\u8981\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u5176\u4f20\u9012\u7ed9.adddocallback()\uff0c\u8be5\u51fd\u6570\u5728create_task\u8fd4\u56de\u7684Task\u4e0a\u8c03\u7528\u3002\n&lt\uff1b\u4efb\u52a1\u6302\u8d77coro=&lt\uff1bfoo()\u5728gather.py\uff1a4&gt\uff1bcb=[get_result()at ather.py\uff1a9]&gt\uff1bHello World\uff01\u5f97\u5230\u7ed3\u679c\uff01foo\uff01&lt\uff1b\u4efb\u52a1\u5b8c\u6210coro=&lt\uff1bfoo()\u5b8c\u6210\uff0c\u5b9a\u4e49\u5728gather.py\uff1a4&gt\uff1bresult=&#39\uff1bfoo\uff01&39\uff1b&gt\uff1b\n\u5728\u5904\u7406\u5927\u91cf\u5e76\u53d1\u64cd\u4f5c\u65f6\uff0c\u660e\u667a\u7684\u505a\u6cd5\u662f\u5229\u7528\u7ebf\u7a0b(\u548c/\u6216\u5b50\u8fdb\u7a0b)\u7684\u201c\u6c60\u201d\u6765\u9632\u6b62\u8017\u5c3d\u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u673a\u8d44\u6e90\u3002\n\u8fd9\u5c31\u662fconcurrent.Futures\u6a21\u5757\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3aExecutor\u7684\u6982\u5ff5\u6765\u5e2e\u52a9\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5b83\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u96c6\u6210\u5230\u73b0\u6709\u7684\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u4e2d(\u8bf7\u53c2\u9605Executor\u6587\u6863)\u3002\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u5728\u8fd9\u4e9b\u6267\u884c\u5668\u4e4b\u4e00\u4e2d\u6267\u884c\u4ee3\u7801\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u5373\u4f7f\u7528\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u6765\u8c03\u5ea6\u6267\u884c\u5668\u7684\u8fd0\u884c\u3002\n\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u8c03\u7528\u4e8b\u4ef6\u5faa\u73af\u7684.run_in_ecutor()\u51fd\u6570\uff0c\u5e76\u5c06Executor\u7c7b\u578b\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u6267\u884c\u5668(\u5373ThreadPoolExecutor)\u3002\nimport asyncioimport concurrent.futuresdef block_io()\uff1a#\u6587\u4ef6\u64cd\u4f5c(\u5982\u65e5\u5fd7\u8bb0\u5f55)\u53ef\u80fd\u4f1a\u963b\u585e#event\u5faa\u73af\uff1a\u5728\u7ebf\u7a0b\u6c60\u4e2d\u8fd0\u884c\u5b83\u4eec\u3002\u4f7f\u7528open(&#34\uff1b/dev/urandom&#34\uff1b\uff0c&#34\uff1brb&#34\uff1b)as f\uff1areturn f.read(100)def cpu_bind()\uff1a#CPU\u7ed1\u5b9a\u64cd\u4f5c\u5c06\u963b\u585e\u4e8b\u4ef6\u5faa\u73af\uff1a#\u901a\u5e38\uff0c\u6700\u597d\u5728#\u8fdb\u7a0b\u6c60\u4e2d\u8fd0\u884c\u5b83\u4eec\u3002return sum(i*i for i in range(10**7))async def main()\uff1aloop=asyncio.get_running_loop()#1.\u5728\u9ed8\u8ba4\u5faa\u73af\u7684\u6267\u884c\u5668\u4e2d\u8fd0\u884c\uff1aresult=\u7b49\u5f85loop.run_in_ecutor(NONE\uff0cBLOCKING_IO)print(&#34\uff1b\u9ed8\u8ba4\u7ebf\u7a0b\u6c60&#34\uff1b\uff0cresult)#2.\u5728\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u4e2d\u8fd0\u884c\uff1awith concurrent.futures.ThreadPoolExecutor()\u3002\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60&#34\uff1b\uff0cresult)#3.\u5728\u81ea\u5b9a\u4e49\u8fdb\u7a0b\u6c60\u4e2d\u8fd0\u884c\uff1awith concurrent.futures.ProcessPoolExecutor()as pool\uff1aresult=await loop.run_in_ecutor(pool\uff0ccpu_bound)print(&#34\uff1b\u81ea\u5b9a\u4e49\u8fdb\u7a0b\u6c60&#34\uff1b\uff0cresult)asyncio.run(main())\u3002\n\u5728\u8fd9\u4e9b\u6267\u884c\u5668\u4e4b\u4e00\u4e2d\u6267\u884c\u4ee3\u7801\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u5c06\u8981\u6267\u884c\u7684\u4ee3\u7801\u76f4\u63a5\u53d1\u9001\u5230\u6c60\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5fc5\u83b7\u53d6\u5f53\u524d\u4e8b\u4ef6\u5faa\u73af\u6765\u5c06\u6c60\u4f20\u9012\u7ed9\u5b83(\u6b63\u5982\u524d\u9762\u7684\u793a\u4f8b\u6240\u6f14\u793a\u7684\u90a3\u6837)\uff0c\u4f46\u662f\u5b83\u9644\u5e26\u4e00\u4e2a\u8b66\u544a\uff0c\u5373\u7236\u7a0b\u5e8f\u4e0d\u4f1a\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\uff0c\u9664\u975e\u60a8\u663e\u5f0f\u5730\u544a\u8bc9\u5b83(\u6211\u63a5\u4e0b\u6765\u5c06\u6f14\u793a\u8fd9\u4e00\u70b9)\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u79cd\u66ff\u4ee3\u65b9\u6cd5\u3002\u5b83\u6d89\u53ca\u5230\u8c03\u7528\u6267\u884c\u5668\u7684Submit()\u65b9\u6cd5\uff1a\n\u5bfc\u5165concurrent.futuresimport timedef low_op(*args)\uff1a\u6253\u5370(f&#34\uff1b\u53c2\u6570\uff1a{args}&#34\uff1b)\u65f6\u95f4\u3002\u7761\u7720(5)\u6253\u5370(&#34\uff1b\u6162\u901f\u64cd\u4f5c\u5b8c\u6210&#34\uff1b)\u8fd4\u56de123def do_thing()\uff1a\u5e26\u6709concurrent.futures.ProcessPoolExecutor()as pool\uff1aFuture=pool.mit(low_op\uff0c&#34\uff1ba&#34\uff1b\uff0c&#34\uff1bb&\u3002)\u5bf9\u4e8econcurrent.futures.as_Completed([Future])\u4e2d\u7684fut\uff1aassert future.do()\u548cnot future.cancated()print(f&#34\uff1bget result from low_op\uff1a{fut.result()}&#34\uff1b)if__name__==&#34\uff1b__main__&#34\uff1b\uff1aprint(&#34\uff1bProgram started&#34\uff1b)do_omething()print(&#34\uff1bProgram Complete&#34\uff1b)(__name__==&#34\uff1b__main__&#34\uff1b\uff1aprint(&#34\uff1bprogram start&#34\uff1b)do_omething()print(&#34\uff1bProgram Complete&#34\uff1b)\u3002\n\u6ce8\u610f\uff1a\u4f7f\u7528\u5168\u5c40\u6d41\u7a0b\u6267\u884c\u5668\u8981\u5c0f\u5fc3(\u4f8b\u5982\uff0c\u5c06\u7c7b\u4f3cprocess_pool=concurrent.futures.ProcessPoolExecutor()\u7684\u5185\u5bb9\u653e\u5728\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\uff0c\u5e76\u5728do_thing()\u51fd\u6570\u4e2d\u4f7f\u7528\u8be5\u5f15\u7528)\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5f53\u5c06\u7a0b\u5e8f\u590d\u5236\u5230\u65b0\u6d41\u7a0b\u4e2d\u65f6\uff0c\u60a8\u5c06\u4ecePython\u89e3\u91ca\u5668\u6536\u5230\u5173\u4e8e\u6cc4\u6f0f\u7684\u4fe1\u53f7\u91cf\u7684\u9519\u8bef\u3002\u8fd9\u5c31\u662f\u6211\u5728\u51fd\u6570\u4e2d\u521b\u5efa\u8fdb\u7a0b\u6c60\u6267\u884c\u5668\u7684\u539f\u56e0\u3002\n\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528WITH\u8bed\u53e5(\u5c31\u50cf\u6211\u4eec\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\u6240\u505a\u7684\u90a3\u6837)\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u65e6\u6c60\u5b8c\u6210\u5176\u5de5\u4f5c\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u5173\u95ed\u5b83\uff0c\u56e0\u6b64(\u53d6\u51b3\u4e8e\u60a8\u7684\u7a0b\u5e8f\u662f\u5426\u7ee7\u7eed\u8fd0\u884c)\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u8d44\u6e90\u6ca1\u6709\u88ab\u6e05\u7406\u3002\n\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528.shutdown()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u901a\u8fc7\u5176\u7236\u7c7bconcurrent.futures.Executor\u5411\u4e24\u79cd\u7c7b\u578b\u7684\u6267\u884c\u5668\u516c\u5f00\u3002\nimport concurrent.futuresTHREAD_POOL=concurrent.futures.ThreadPoolExecutor(max_workers=5)def SLOW_OP(*args)\uff1aPRINT(f&#34\uff1b\u53c2\u6570\uff1a{args}&#34\uff1b)PRINT(&#34\uff1b\u67d0\u79cd\u6162\u901f\u64cd\u4f5c&#34\uff1b)\u8fd4\u56de123def do_thing()\uff1aFuture=THREAD_POOL.SUBMIT(\u6162\u901f_OP\uff0c&#34\uff1ba&#34\uff1b\uff0c&#34\uff1bb&#34\uff1b\uff0c&#34\uff1bc&#34\uff1b)THREAD_POOL.shutdown()assert future.do()\u548cnot future.cancedprint()print(f&#34\uff1bget result from low_op\uff1a{future.result()}&#34\uff1b)if__name__==&#34\uff1b__main__&#34\uff1b\uff1aprint(&#34\uff1bProgram Started&#34\uff1b)do_thing()print(&#34\uff1bProgram Complete&#34\uff1b)\u3002\n\u73b0\u5728\uff0c\u6211\u6ca1\u6709\u5728\u793a\u4f8b\u4e2d\u4f7f\u7528time.silev()\uff0c\u8fd9\u4e00\u6b21\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u7ebf\u7a0b\u6c60\u548ctime.silear()\u662f\u4e00\u4e2aCPU\u9650\u5236\u64cd\u4f5c\uff0c\u5426\u5219\u4f1a\u963b\u585e\u7ebf\u7a0b\u5b8c\u6210\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u793a\u4f8b\u5f88\u53ef\u80fd\u603b\u662f\u5bfc\u81f4low_op()\u51fd\u6570\u5728\u6211\u4eec\u5f00\u59cb\u68c0\u67e5future.do()\u4e4b\u524d\u5b8c\u6210\u3002\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u8fd9\u4e0d\u662f\u6700\u597d\u7684\u4f8b\u5b50\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u4e0d\u963b\u585e\u7684\u771f\u6b63\u7f13\u6162\u7684\u64cd\u4f5c\u6765\u66f4\u5b9e\u9645\u5730\u6d4b\u8bd5\u8fd9\u4e00\u70b9\u3002\n\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u771f\u6b63\u7f13\u6162\u7684\u64cd\u4f5c\u53d1\u751f\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u6211\u4eec\u68c0\u67e5future.do()\u65f6\u4efb\u52a1\u8fd8\u6ca1\u6709\u5b8c\u6210\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u5bf9.shutdown()\u7684\u8c03\u7528\u662f\u5728\u6211\u4eec\u663e\u5f0f\u7b49\u5f85\u8ba1\u5212\u7684\u4efb\u52a1\u5b8c\u6210\u4e4b\u524d\u8fdb\u884c\u7684\uff0c\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u65ad\u8a00\u8fd4\u56de\u7684\u672a\u6765\u662f\u5426\u4e3a.Done()\u65f6\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u65e0\u8bba\u8bd5\u56fe\u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u4efb\u52a1\u90fd\u88ab\u6807\u8bb0\u4e3a\u201c\u5b8c\u6210\u201d\u3002\n\u8fd9\u662f\u56e0\u4e3aShutdown\u65b9\u6cd5\u7684\u9ed8\u8ba4\u884c\u4e3a\u662fWAIT=True\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u5728\u5173\u95ed\u6267\u884c\u5668\u6c60\u4e4b\u524d\u7b49\u5f85\u6240\u6709\u8ba1\u5212\u7684\u4efb\u52a1\u5b8c\u6210\u3002\n\u56e0\u6b64\uff0c.shutdown()\u65b9\u6cd5\u662f\u4e00\u4e2a\u540c\u6b65\u8c03\u7528(\u5373\uff0c\u5b83\u786e\u4fdd\u6240\u6709\u4efb\u52a1\u5728\u5173\u95ed\u4e4b\u524d\u90fd\u5df2\u5b8c\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u7ed3\u679c\u90fd\u53ef\u7528)\u3002\n\u5982\u679c\u6211\u4eec\u6539\u4e3a\u4f20\u9012.shutdown(WAIT=FALSE)\uff0c\u5219\u5bf9future.do()\u7684\u8c03\u7528\u5c06\u5f15\u53d1\u5f02\u5e38(\u56e0\u4e3a\u5728\u5173\u95ed\u7ebf\u7a0b\u6c60\u65f6\u8ba1\u5212\u4efb\u52a1\u4ecd\u5728\u8fd0\u884c)\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4f7f\u7528\u53e6\u4e00\u79cd\u673a\u5236\u6765\u83b7\u53d6\u8ba1\u5212\u4efb\u52a1\u7684\u7ed3\u679c(\u4f8b\u5982concurrent.futures.as_Completed\u6216concurrent.futures.Wait)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4f7f\u7528\u53e6\u4e00\u79cd\u673a\u5236\u6765\u83b7\u53d6\u8ba1\u5212\u4efb\u52a1\u7684\u7ed3\u679c(\u5982concurrent.futures.as_Completed\u6216concurrent.futures.Wait)\u3002\n\u6700\u540e\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cconcurrent.futures.Future\u5bf9\u8c61\u4e0d\u540c\u4e8e\u5f02\u6b65.Future\u3002\nAsyncio.Future\u65e8\u5728\u4e0eAsyncio\u7684\u4e8b\u4ef6\u5faa\u73af\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u7b49\u5f85\u3002\u540c\u65f6\uff0c\u672a\u6765\uff0c\u672a\u6765\u662f\u4e0d\u53ef\u7b49\u5f85\u7684\u3002\n\u4f7f\u7528\u4e8b\u4ef6\u5faa\u73af\u7684.run_in_ecutor()\u65b9\u6cd5\u5c06\u901a\u8fc7\u5c06concurrent.futures.Future\u7c7b\u578b\u5305\u88c5\u5728\u5bf9asyncio.print_Future\u7684\u8c03\u7528\u4e2d(\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u4e0b\u4e00\u8282)\uff0c\u4ece\u800c\u5728\u4e24\u4e2a\u672a\u6765\u7c7b\u578b\u4e4b\u95f4\u63d0\u4f9b\u5fc5\u8981\u7684\u4e92\u64cd\u4f5c\u6027\u3002\n\u4ecePython3.5\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528asyncio.print_Future\u5c06concurrent.futures.Future\u8f6c\u6362\u4e3aasyncio.Future\u3002\u8fd9\u65b9\u9762\u7684\u793a\u4f8b\u53ef\u4ee5\u5728\u2026\u4e0b\u9762\u770b\u5230\u3002\n\u4ece\u5e76\u53d1\u5bfc\u5165\u5f02\u6b65\u5bfc\u5165\u968f\u673a\u3002\u672a\u6765\u5bfc\u5165\u7ebf\u7a0b\u6c60\u6267\u884c\u4ece\u65f6\u95f4\u5bfc\u5165\u7761\u7720def return_After_5_secs(Message)\uff1a\u7761\u7720(5)\u8fd4\u56demessagepool=ThreadPoolExecutor(3)\u5f02\u6b65\u5b9a\u4e49doit()\uff1aIdentify=\u968f\u673a.randint(1,100)Future=pool.mit(Return_After_5_Secs\uff0c(f&#34\uff1bresult\uff1a{Identify}&#34\uff1b))waitable=\u5f02\u6b65\u3002\n..", "note_en": "This is a  quick guide to Python\u2019s  asyncio module and is based on Python version 3.8.\n   So let\u2019s start by addressing the elephant in the room: there are  many modules provided by the Python standard library for handling asynchronous/concurrent/multiprocess code\u2026\n  In this post we\u2019re going to focus on the last two (primarily  asyncio, and ending with  concurrent.futures). The  threading and  multiprocessing modules sit beneath them, hence we won\u2019t cover them in detail.\n Note: the  _thread module is in fact a very low-level API that the  threading module is built on top of (again, this is why we won\u2019t be covering that either).\n   The asyncio module provides both high-level and low-level APIs. Library and Framework developers will be expected to use the low-level APIs, while all other users are encouraged to use the high-level APIs.\n It differs conceptually from the more traditional  threading or  multiprocess approach to asynchronous code execution in that it utilizes something called an  event loop to handle the scheduling of these asynchronous tasks.\n We\u2019ll explain the \u2018event loop\u2019 in just a moment but first let\u2019s briefly recap  concurrent.futures.\n   The  concurrent.futures provides a high-level abstraction for the  threading and  multiprocessing modules, which is why we won\u2019t discuss them in detail within this post.\n Generally speaking you\u2019ll utilize  concurrent.futures when you want to execute code asynchronously within either a pool of threads or a pool of subprocesses, while also using a clean and modern Python API (as apposed to the more flexible but low-level  threading or  multiprocessing modules).\n  The core element of all asyncio applications is the \u2018event loop\u2019. The event loop is what schedules and runs asynchronous tasks (it also handles network IO operations and the running of subprocesses).\n        Note: Futures is a  low-level type and so you shouldn\u2019t need to worry about it too much if you\u2019re not a library/framework developer (as you should be using the higher-level abstraction APIs instead).\n    Generator based coroutine functions (e.g. those defined by decorating a function with  @asyncio.coroutine) are superseded by the  async/ await syntax, but will continue to be supported  until Python 3.10 \u2013  docs.python.org/3.8/library/asyncio-task.html.\n Refer to my post \u201c iterators, generators, coroutines\u201d for more details about generator based coroutines and their asyncio history.\n   All asyncio applications will typically have (at least) a single \u2018main\u2019 entrypoint task that will be scheduled to run immediately on the event loop. This is done using the  asyncio.run function (see \u2018 Running an asyncio program\u2019).\n A coroutine function is expected to be passed to  asyncio.run, while  internally asyncio will check this using the helper function  coroutines.iscoroutine (see:  source code). If not a coroutine, then an error is raised, otherwise the coroutine will be passed to  loop.run_until_complete (see:  source code).\n The  run_until_complete function expects a  Future (see below section for what a Future is) and uses another helper function  futures.isfuture to check the type provided. If not a Future, then the low-level API  ensure_future is used to convert the coroutine into a Future (see  source code).\n Note:  here is a comparison of the various methods for validating if a function is a coroutine. The results aren\u2019t necessarily what you might expect.\n In older versions of Python, if you were going to manually create your own Future and schedule it onto the event loop, then you would have used  asyncio.ensure_future (now considered to be a low-level API), but with Python 3.7+ this has been superseded by  asyncio.create_task.\n Additionally with Python 3.7, the idea of interacting with the event loop directly (e.g. getting the event loop, creating a task with  create_task and then passing it to the event loop) has been replaced with  asyncio.run, which abstracts it all away for you (see \u2018 Running an asyncio program\u2019 to understand what that means).\n The following APIs let you see the state of the tasks running on the event loop:\n    A Future is a low-level awaitable object that represents an eventual result of an asynchronous operation.\n To use an analogy: it\u2019s like an empty postbox. At  some point in the future the postman will arrive and stick a letter into the postbox.\n This API exists to enable callback-based code to be used with  async/ await, while   loop.run_in_executor is an example of an asyncio low-level API function that returns a Future (see also some of the APIs listed in  Concurrent Functions).\n    import asyncioasync def foo(): print(&#34;Foo!&#34;)async def hello_world(): await foo() # waits for `foo()` to complete print(&#34;Hello World!&#34;)asyncio.run(hello_world())\n The  .run function always creates a  new event loop and  closes it at the end. If you were using the lower-level APIs, then this would be something you\u2019d have to handle manually (as demonstrated below).\n   Prior to Python 3.8 you couldn\u2019t execute async code within the standard Python REPL (it would have required you to use the IPython REPL instead).\n To do this with the latest version of Python you would run  python -m asyncio. Once the REPL has started you don\u2019t need to use  asyncio.run(), but just use the  await statement directly.\n asyncio REPL 3.8.0+ (heads/3.8:5f234538ab, Dec 1 2019, 11:05:25)[Clang 10.0.1 (clang-1001.0.46.4)] on darwinUse &#34;await&#34; directly instead of &#34;asyncio.run()&#34;.Type &#34;help&#34;, &#34;copyright&#34;, &#34;credits&#34; or &#34;license&#34; for more information.&gt;&gt;&gt; import asyncio&gt;&gt;&gt; async def foo():... await asyncio.sleep(5)... print(&#34;done&#34;)...&gt;&gt;&gt; await foo()done\n Notice the REPL automatically executes  import asyncio when starting up so we\u2019re able to use any  asyncio functions (such as the  .sleep function) without having to manually type that import statement ourselves.\n  If for some reason you didn\u2019t want to use the event loop provided by  asyncio (which is a pure Python implementation), you can swap it out for another event loop such as  uvloop.\n uvloop is a fast, drop-in replacement of the built-in asyncio event loop. uvloop is implemented in  Cython and uses  libuv under the hood.\n According to the authors of uvloop, it is comparible in speed to that of  Go programs! I recommend reading their  blog post about its initial release.\n If you want to utilize uvloop then first install it with  pip install uvloop, then add a call to  uvloop.install() like so:\n   The following functions help to co-ordinate the running of functions concurrently, and offer varying degrees of control dependant on the needs of your application.\n asyncio.wait: wait for a sequence of awaitables, until the given \u2018condition\u2019 is met.\n Note:  gather has specific options for handling errors and cancellations. For example, if  return_exceptions: False then the first exception raised by one of the awaitables is returned to the caller of  gather, where as if set to  True then the exceptions are aggregated in the list alongside successful results. If  gather() is cancelled, all submitted awaitables (that have not completed yet) are also cancelled.\n   Note: you\u2019ll find in most of these APIs a  loop argument can be provided to enable you to indicate the specific event loop you want to utilize). It seems Python has deprecated this argument in 3.8, and will remove it completely in 3.10.\n    import asyncioasync def foo(n): await asyncio.sleep(5) # wait 5s before continuing print(f&#34;n: {n}!&#34;)async def main(): tasks = [foo(1), foo(2), foo(3)] await asyncio.gather(*tasks)asyncio.run(main())\n  The following example uses the  FIRST_COMPLETED option, meaning whichever task finishes first is what will be returned.\n import asynciofrom random import randrangeasync def foo(n): s = randrange(5) print(f&#34;{n} will sleep for: {s} seconds&#34;) await asyncio.sleep(s) print(f&#34;n: {n}!&#34;)async def main(): tasks = [foo(1), foo(2), foo(3)] result = await asyncio.wait(tasks, return_when=asyncio.FIRST_COMPLETED) print(result)asyncio.run(main())\n  1 will sleep for: 4 seconds2 will sleep for: 2 seconds3 will sleep for: 1 secondsn: 3!({&lt;Task finished coro=&lt;foo() done, defined at await.py:5&gt; result=None&gt;}, {&lt;Task pending coro=&lt;foo() running at await.py:8&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x10322b468&gt;()]&gt;&gt;, &lt;Task pending coro=&lt;foo() running at await.py:8&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x10322b4c8&gt;()]&gt;&gt;})\n  The following example demonstrates how we can utilize a timeout to prevent waiting endlessly for an asynchronous task to finish.\n import asyncioasync def foo(n): await asyncio.sleep(10) print(f&#34;n: {n}!&#34;)async def main(): try: await asyncio.wait_for(foo(1), timeout=5) except asyncio.TimeoutError: print(&#34;timeout!&#34;)asyncio.run(main())\n Note: the  asyncio.TimeoutError doesn\u2019t provide any extra information so there\u2019s no point in trying to use it in your output (e.g.  except asyncio.TimeoutError as err: print(err)).\n  The following example demonstrates how  as_complete will yield the first task to complete, followed by the next quickest, and the next until all tasks are completed.\n import asynciofrom random import randrangeasync def foo(n): s = randrange(10) print(f&#34;{n} will sleep for: {s} seconds&#34;) await asyncio.sleep(s) return f&#34;{n}!&#34;async def main(): counter = 0 tasks = [foo(&#34;a&#34;), foo(&#34;b&#34;), foo(&#34;c&#34;)] for future in asyncio.as_completed(tasks): n = &#34;quickest&#34; if counter == 0 else &#34;next quickest&#34; counter += 1 result = await future print(f&#34;the {n} result was: {result}&#34;)asyncio.run(main())\n  c will sleep for: 9 secondsa will sleep for: 1 secondsb will sleep for: 0 secondsthe quickest result was: b!the next quickest result was: a!the next quickest result was: c!\n  The following example demonstrates how to convert a coroutine into a Task and schedule it onto the event loop.\n import asyncioasync def foo(): await asyncio.sleep(10) print(&#34;Foo!&#34;)async def hello_world(): task = asyncio.create_task(foo()) print(task) await asyncio.sleep(5) print(&#34;Hello World!&#34;) await asyncio.sleep(10) print(task)asyncio.run(hello_world())\n We can see from the above program that we use  create_task to convert our coroutine function into a Task. This automatically schedules the Task to be run on the event loop at the next available tick.\n This is in contrast to the lower-level API  ensure_future (which is the preferred way of creating new Tasks). The  ensure_future function has specific logic branches that make it useful for more input types than  create_task which only supports scheduling a coroutine onto the event loop and wrapping it inside a Task (see:   ensure_future source code).\n   Let\u2019s review the code and compare to the above output we can see\u2026\n We convert  foo() into a Task and then print the returned Task immediately after it is created. So when we print the Task we can see that its status is shown as \u2018pending\u2019 (as it hasn\u2019t been executed yet).\n Next we\u2019ll sleep for five seconds, as this will cause the  foo Task to now be run (as the current Task  hello_world will be considered busy).\n Within the  foo Task we also sleep, but for a  longer period of time than  hello_world, and so the event loop will now context switch  back to the  hello_world Task, where upon the sleep will pass and we\u2019ll print the output string  Hello World.\n Finally, we sleep again for ten seconds. This is just so we can give the  foo Task enough time to complete and print its own output. If we didn\u2019t do that then the  hello_world task would finish and close down the event loop. The last line of  hello_world is printing the  foo Task, where we\u2019ll see the status of the  foo Task will now show as \u2018finished\u2019.\n  When dealing with a Task, which really is a Future, then you have the ability to execute a \u2018callback\u2019 function once the Future has a value set on it.\n  import asyncioasync def foo(): await asyncio.sleep(10) return &#34;Foo!&#34;def got_result(future): print(f&#34;got the result! {future.result()}&#34;)async def hello_world(): task = asyncio.create_task(foo()) task.add_done_callback(got_result) print(task) await asyncio.sleep(5) print(&#34;Hello World!&#34;) await asyncio.sleep(10) print(task)asyncio.run(hello_world())\n Notice in the above program we add a new  got_result function that expects to receive a Future type, and thus calls  .result() on the Future.\n Also notice that to get this function to be called, we pass it to  .add_done_callback() which is called on the Task returned by  create_task.\n  &lt;Task pending coro=&lt;foo() running at gather.py:4&gt; cb=[got_result() at gather.py:9]&gt;Hello World!got the result! Foo!&lt;Task finished coro=&lt;foo() done, defined at gather.py:4&gt; result=&#39;Foo!&#39;&gt;\n  When dealing with lots of concurrent operations it might be wise to utilize a \u2018pool\u2019 of threads (and/or subprocesses) to prevent exhausting your application\u2019s host resources.\n This is where the  concurrent.futures module comes in. It provides a concept referred to as an Executor to help with this and which can be run standalone or be integrated into an existing asyncio event loop (see:  Executor documentation).\n    Let\u2019s look at the first way to execute code within one of these executors, by using an asyncio event loop to schedule the running of the executor.\n To do this you need to call the event loop\u2019s  .run_in_executor() function and pass in the executor type as the first argument. If  None is provided, then the  default executor is used (which is the  ThreadPoolExecutor).\n  import asyncioimport concurrent.futuresdef blocking_io(): # File operations (such as logging) can block the # event loop: run them in a thread pool. with open(&#34;/dev/urandom&#34;, &#34;rb&#34;) as f: return f.read(100)def cpu_bound(): # CPU-bound operations will block the event loop: # in general it is preferable to run them in a # process pool. return sum(i * i for i in range(10 ** 7))async def main(): loop = asyncio.get_running_loop() # 1. Run in the default loop&#39;s executor: result = await loop.run_in_executor(None, blocking_io) print(&#34;default thread pool&#34;, result) # 2. Run in a custom thread pool: with concurrent.futures.ThreadPoolExecutor() as pool: result = await loop.run_in_executor(pool, blocking_io) print(&#34;custom thread pool&#34;, result) # 3. Run in a custom process pool: with concurrent.futures.ProcessPoolExecutor() as pool: result = await loop.run_in_executor(pool, cpu_bound) print(&#34;custom process pool&#34;, result)asyncio.run(main())\n The second way to execute code within one of these executors is to send the code to be executed directly to the pool. This means we don\u2019t have to acquire the current event loop to pass the pool into it (as the earlier example demonstrated), but it comes with a caveat which is the parent program won\u2019t wait for the task to be completed unless you explicitly tell it to (which I\u2019ll demonstrate next).\n With that in mind, let\u2019s take a look at this alternative approach. It involves calling the executor\u2019s  submit() method:\n import concurrent.futuresimport timedef slow_op(*args): print(f&#34;arguments: {args}&#34;) time.sleep(5) print(&#34;slow operation complete&#34;) return 123def do_something(): with concurrent.futures.ProcessPoolExecutor() as pool: future = pool.submit(slow_op, &#34;a&#34;, &#34;b&#34;, &#34;c&#34;) for fut in concurrent.futures.as_completed([future]): assert future.done() and not future.cancelled() print(f&#34;got the result from slow_op: {fut.result()}&#34;)if __name__ == &#34;__main__&#34;: print(&#34;program started&#34;) do_something() print(&#34;program complete&#34;)\n Note: be careful with a global process executor (e.g. placing something like  PROCESS_POOL = concurrent.futures.ProcessPoolExecutor() within the global scope and using that reference within our  do_something() function) as this means when the program is copied into a  new process you\u2019ll get an error from the Python interpreter about a leaked semaphore. This is why I create the process pool executor within a function.\n One thing worth noting here is that if we hadn\u2019t used the  with statement (like we do in the above example) it would mean we\u2019d not be shutting down the pool once it has finished its work, and so (depending on if your program continues running) you may discover resources aren\u2019t being cleaned up.\n To solve that problem you can call the  .shutdown() method which is exposed to both types of executors via its parent class  concurrent.futures.Executor.\n  import concurrent.futuresTHREAD_POOL = concurrent.futures.ThreadPoolExecutor(max_workers=5)def slow_op(*args): print(f&#34;arguments: {args}&#34;) print(&#34;some kind of slow operation&#34;) return 123def do_something(): future = THREAD_POOL.submit(slow_op, &#34;a&#34;, &#34;b&#34;, &#34;c&#34;) THREAD_POOL.shutdown() assert future.done() and not future.cancelled() print(f&#34;got the result from slow_op: {future.result()}&#34;)if __name__ == &#34;__main__&#34;: print(&#34;program started&#34;) do_something() print(&#34;program complete&#34;)\n Now I haven\u2019t used  time.sleep() this time in the example because we\u2019re using a threadpool and  time.sleep() is a CPU bound operation that would otherwise block the thread from completing.\n This means our example is likely to always result in the  slow_op() function completing before we get to checking  future.done(). So yeah, it\u2019s not the best example. You can test this more realistically by incorporating a genuinely slow operation that doesn\u2019t block.\n But imagine we had a genuinely slow operation happening that meant the task wasn\u2019t complete by the time we check  future.done().\n In that case we should note that the placement of the call to  .shutdown() is  before we\u2019ve explictly waited for the scheduled task to complete, and yet when we assert if the returned future is  .done() we would have found that the task was marked as \u2018done\u2019 regardless of attempting to shutdown the threadpool.\n This is because the default behaviour for the shutdown method is  wait=True which means it would wait for all scheduled tasks to complete before shutting down the executor pool.\n Thus the  .shutdown() method is a synchronization call (i.e. it ensures all tasks are complete before shutting down, and thus we can guarantee all results will be available).\n If we passed  .shutdown(wait=False) instead, then the call to  future.done() would have raised an exception (as the scheduled task would still be running as the threadpool was being closed) and so in that case we\u2019d need to ensure that we use another mechanism for acquiring the results of the scheduled tasks (such as  concurrent.futures.as_completed or  concurrent.futures.wait).\n  One final thing to mention is that a  concurrent.futures.Future object is  different from an  asyncio.Future.\n An  asyncio.Future is intended to be used with the asyncio\u2019s event loop, and is   awaitable. A  concurrent.futures.Future is  not awaitable.\n Using the  .run_in_executor() method of an event loop will provide the necessary interoperability between the two future types by wrapping the  concurrent.futures.Future type in a call to   asyncio.wrap_future (see next section for details).\n  Since Python 3.5 we can use  asyncio.wrap_future to convert a  concurrent.futures.Future to an  asyncio.Future. An example of this can be seen below\u2026\n import asyncioimport randomfrom concurrent.futures import ThreadPoolExecutorfrom time import sleepdef return_after_5_secs(message): sleep(5) return messagepool = ThreadPoolExecutor(3)async def doit(): identify = random.randint(1, 100) future = pool.submit(return_after_5_secs, (f&#34;result: {identify}&#34;)) awaitable = asyncio.wrap_future(future) print(f&#34;waiting result: {identify}&#34;) return await awaitableasync def app(): # run some stuff multiple ti\n......", "posttime": "2020-05-24 23:12:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,asyncio,concurrency", "title": "\u4f7f\u7528Asyncio\u5728Python\u4e2d\u5e76\u53d1\u7684\u6307\u5357", "title_en": "Guide to Concurrency in Python with Asyncio", "transed": 1, "url": "https://www.integralist.co.uk/posts/python-asyncio/", "via": "", "real_tags": ["python", "asyncio"]}]