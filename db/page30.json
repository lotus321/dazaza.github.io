[{"category": "", "categoryclass": "", "imagename": "b5e2ba44b8e9b0a7eac2781c463b63c5.jpg", "infoid": 1007310, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8ffd\u6c42\u5f3a\u5927\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u65b9\u9762\uff0c\u6700\u8fd1\u5df2\u7ecf\u53d6\u5f97\u4e86\u51e0\u9879\u6280\u672f\u8fdb\u6b65\u3002\u73b0\u5728\uff0c\u6765\u81ea\u82cf\u9ece\u4e16\u7406\u5de5\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5728\u7f16\u7a0b\u8bed\u8a00\u9886\u57df\u53d6\u5f97\u4e86\u91cd\u8981\u7a81\u7834\uff1a\u4ed6\u4eec\u7684\u91cf\u5b50\u8bed\u8a00\u662f\u540c\u7c7b\u8bed\u8a00\u4e2d\u7b2c\u4e00\u4e2a\u4e0e\u7ecf\u5178\u8ba1\u7b97\u673a\u8bed\u8a00\u4e00\u6837\u4f18\u96c5\u3001\u7b80\u5355\u548c\u5b89\u5168\u7684\u8bed\u8a00\u3002\n\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7f16\u7a0b\u53d8\u5f97\u8d8a\u6765\u8d8a\u5bb9\u6613\uff1a\u82cf\u9ece\u4e16\u7406\u5de5\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u8bbe\u8ba1\u4e86\u7b2c\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u4ee5\u7528\u6765\u5bf9\u91cf\u5b50\u8ba1\u7b97\u673a\u8fdb\u884c\u7f16\u7a0b\uff0c\u5c31\u50cf\u7ecf\u5178\u8ba1\u7b97\u673a\u4e00\u6837\u7b80\u5355\u3001\u53ef\u9760\u548c\u5b89\u5168\u3002ETH\u5b89\u5168\u3001\u53ef\u9760\u548c\u667a\u80fd\u7cfb\u7edf\u5b9e\u9a8c\u5ba4(SRI)\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u6388\u9a6c\u4e01\u00b7\u97e6\u5207\u592b(Martin Vechev)\u8868\u793a\uff1a\u201c\u5bf9\u91cf\u5b50\u8ba1\u7b97\u673a\u7f16\u7a0b\u5bf9\u7814\u7a76\u4eba\u5458\u6765\u8bf4\u4ecd\u7136\u662f\u4e00\u9879\u6311\u6218\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5982\u6b64\u5174\u594b\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u82cf\u9ece\u4e16\u5927\u5b66\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u548c\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u65b9\u9762\u7684\u4f20\u7edf\u3002\u201d\n\u4ed6\u8865\u5145\u9053\uff1a\u201c\u6211\u4eec\u7684\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00Silq\u5141\u8bb8\u7a0b\u5e8f\u5458\u6bd4\u73b0\u6709\u8bed\u8a00\u66f4\u597d\u5730\u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u6f5c\u529b\uff0c\u56e0\u4e3a\u4ee3\u7801\u66f4\u7d27\u51d1\u3001\u66f4\u5feb\u3001\u66f4\u76f4\u89c2\uff0c\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u4e5f\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u201d\u672c\u5468\uff0cVechev\u5c06\u5728PLDI 2020\u7f16\u7a0b\u8bed\u8a00\u4f1a\u8bae\u4e0a\u5411\u8be5\u9886\u57df\u7684\u5176\u4ed6\u4e13\u5bb6\u4ecb\u7ecdSilq\u3002\u4e3a\u4e86\u4fbf\u4e8e\u8ba8\u8bba\u3001\u91c7\u7528\u548c\u8fdb\u4e00\u6b65\u5f00\u53d1\uff0c\u4ed6\u548c\u4ed6\u7684\u56e2\u961f\u8fd8\u5728\u81ea\u5df1\u7684\u7f51\u7ad9(silq.ethz.ch)\u4e0a\u53d1\u5e03\u4e86Silq\u3002\n\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u91cf\u5b50\u8ba1\u7b97\u53d7\u5230\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6839\u636e\u91cf\u5b50\u7269\u7406\u539f\u7406\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\u5177\u6709\u5de8\u5927\u7684\u6f5c\u529b\u3002\u4eca\u5929\uff0c\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u76f8\u4fe1\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u603b\u6709\u4e00\u5929\u80fd\u591f\u6bd4\u7ecf\u5178\u8ba1\u7b97\u673a\u66f4\u5feb\u5730\u89e3\u51b3\u67d0\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u8fdb\u884c\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u662f\u7ea0\u7f20\u91cf\u5b50\u6001\uff0c\u5176\u4e2d\u4e0d\u540c\u6bd4\u7279\u7684\u4fe1\u606f\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u91cd\u53e0\u3002\u8fd9\u610f\u5473\u7740\u5728\u672a\u6765\uff0c\u91cf\u5b50\u8ba1\u7b97\u673a\u5c06\u80fd\u591f\u9ad8\u6548\u5730\u89e3\u51b3\u7ecf\u5178\u8ba1\u7b97\u673a\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u6846\u67b6\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u8fd9\u4e00\u91cf\u5b50\u4f18\u52bf\u4ecd\u6709\u5f85\u6700\u7ec8\u8bc1\u660e\u3002\u7136\u800c\uff0c\u6700\u8fd1\u53d6\u5f97\u4e86\u4e00\u4e9b\u91cd\u5927\u7684\u6280\u672f\u8fdb\u6b65\u30022019\u5e74\u590f\u672b\uff0c\u4e00\u53f0\u91cf\u5b50\u8ba1\u7b97\u673a\u6210\u529f\u5730\u89e3\u51b3\u4e86\u4e00\u4e2a\u95ee\u9898-\u5c3d\u7ba1\u662f\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u95ee\u9898-\u6bd4\u6700\u5feb\u7684\u7ecf\u5178\u8ba1\u7b97\u673a\u66f4\u5feb\u3002\n\u5bf9\u4e8e\u67d0\u4e9b\u201c\u91cf\u5b50\u7b97\u6cd5\u201d\uff0c\u5373\u8ba1\u7b97\u7b56\u7565\uff0c\u4e5f\u662f\u4f17\u6240\u5468\u77e5\u7684\uff0c\u5b83\u4eec\u6bd4\u6ca1\u6709\u5f00\u53d1\u91cf\u5b50\u8ba1\u7b97\u673a\u6f5c\u529b\u7684\u7ecf\u5178\u7b97\u6cd5\u66f4\u5feb\u3002\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u4ecd\u7136\u4e0d\u80fd\u5728\u73b0\u6709\u7684\u91cf\u5b50\u786c\u4ef6\u4e0a\u8ba1\u7b97\uff0c\u56e0\u4e3a\u91cf\u5b50\u8ba1\u7b97\u673a\u76ee\u524d\u4ecd\u7136\u592a\u5bb9\u6613\u51fa\u9519\u3002\n\u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u7684\u6f5c\u529b\u4e0d\u4ec5\u9700\u8981\u6700\u65b0\u7684\u6280\u672f\uff0c\u8fd8\u9700\u8981\u4e00\u79cd\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u6765\u63cf\u8ff0\u91cf\u5b50\u7b97\u6cd5\u3002\u539f\u5219\u4e0a\uff0c\u7b97\u6cd5\u662f\u89e3\u51b3\u95ee\u9898\u7684\u201c\u914d\u65b9\u201d\uff1b\u7f16\u7a0b\u8bed\u8a00\u63cf\u8ff0\u7b97\u6cd5\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u673a\u53ef\u4ee5\u6267\u884c\u5fc5\u8981\u7684\u8ba1\u7b97\u3002\n\u4eca\u5929\uff0c\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u4e0e\u7279\u5b9a\u7684\u786c\u4ef6\u7d27\u5bc6\u76f8\u8fde\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4eec\u7cbe\u786e\u5730\u63cf\u8ff0\u4e86\u5e95\u5c42\u7535\u8def\u7684\u884c\u4e3a\u3002\u5bf9\u4e8e\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u8fd9\u4e9b\u201c\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u201d\u65e2\u7e41\u7410\u53c8\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u5355\u72ec\u7684\u7f16\u7a0b\u6307\u4ee4\u5fc5\u987b\u975e\u5e38\u8be6\u7ec6\uff0c\u4ece\u800c\u660e\u786e\u63cf\u8ff0\u5b9e\u73b0\u91cf\u5b50\u7b97\u6cd5\u6240\u9700\u7684\u7ec6\u8282\u3002\nSilq\u5141\u8bb8\u6bd4\u4f7f\u7528\u73b0\u6709\u8bed\u8a00\u66f4\u597d\u5730\u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u6f5c\u529b\u3002\u9a6c\u4e01\u00b7\u7ef4\u5207\u592b(Martin Vechev)\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u6388\u3002\n\u8fd9\u5c31\u662fVechev\u548c\u4ed6\u7684\u56e2\u961f\u5f00\u53d1Silq\u7684\u539f\u56e0\u3002Vechev\u56e2\u961f\u7684\u535a\u58eb\u751f\u672c\u6770\u660e\u00b7\u6bd4\u5207\u5c14(Benjamin Bichsel)\u6b63\u5728\u76d1\u7763Silq\u7684\u5f00\u53d1\uff0c\u4ed6\u8bf4\uff1a\u201cSilq\u662f\u7b2c\u4e00\u79cd\u4e3b\u8981\u4e0d\u662f\u56f4\u7ed5\u786c\u4ef6\u7684\u7ed3\u6784\u548c\u529f\u80fd\u800c\u8bbe\u8ba1\u7684\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u5458\u60f3\u8981\u89e3\u51b3\u95ee\u9898\u65f6\u6839\u636e\u4ed6\u4eec\u7684\u601d\u7ef4\u6a21\u5f0f\u8bbe\u8ba1\u7684\uff0c\u800c\u4e0d\u9700\u8981\u4ed6\u4eec\u7406\u89e3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u5b9e\u73b0\u7684\u6bcf\u4e2a\u7ec6\u8282\uff0c\u201dVechev\u56e2\u961f\u7684\u535a\u58eb\u751f\u672c\u6770\u660e\u00b7\u6bd4\u5207\u5c14(Benjamin Bichsel)\u6b63\u5728\u76d1\u7763Silq\u7684\u5f00\u53d1\u3002\n\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5c06\u4ece\u7279\u5b9a\u7c7b\u578b\u8ba1\u7b97\u673a\u7684\u6280\u672f\u7ec6\u8282\u4e2d\u62bd\u8c61\u51fa\u6765\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u79f0\u4e3a\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3002Silq\u662f\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7b2c\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3002\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u66f4\u5177\u8868\u73b0\u529b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u751a\u81f3\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u6765\u63cf\u8ff0\u590d\u6742\u7684\u4efb\u52a1\u548c\u7b97\u6cd5\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5458\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u4f7f\u7528\u5b83\u4eec\u3002\u5b83\u4eec\u8fd8\u53ef\u4ee5\u4e0e\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e00\u8d77\u4f7f\u7528\u3002\nSilq\u7ed9\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u5e26\u6765\u7684\u6700\u5927\u521b\u65b0\u548c\u7b80\u5316\u6d89\u53ca\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u76f4\u56f0\u6270\u91cf\u5b50\u7f16\u7a0b\u7684\u9519\u8bef\u6765\u6e90\u3002\u8ba1\u7b97\u673a\u5206\u51e0\u4e2a\u4e2d\u95f4\u6b65\u9aa4\u8ba1\u7b97\u4efb\u52a1\uff0c\u8fd9\u4f1a\u521b\u5efa\u4e2d\u95f4\u7ed3\u679c\u6216\u4e34\u65f6\u503c\u3002\n\u4e3a\u4e86\u91ca\u653e\u5185\u5b58\uff0c\u7ecf\u5178\u8ba1\u7b97\u673a\u4f1a\u81ea\u52a8\u64e6\u9664\u8fd9\u4e9b\u503c\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5c06\u6b64\u79f0\u4e3a\u201c\u5783\u573e\u6536\u96c6\u201d\uff0c\u56e0\u4e3a\u591a\u4f59\u7684\u4e34\u65f6\u503c\u4f1a\u88ab\u5904\u7406\u6389\u3002\n\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u91cf\u5b50\u7ea0\u7f20\uff0c\u8fd9\u79cd\u5904\u7406\u66f4\u52a0\u68d8\u624b\uff1a\u4e4b\u524d\u8ba1\u7b97\u7684\u503c\u53ef\u80fd\u4f1a\u4e0e\u5f53\u524d\u7684\u503c\u76f8\u4e92\u4f5c\u7528\uff0c\u5e72\u6270\u6b63\u786e\u7684\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u5728\u91cf\u5b50\u8ba1\u7b97\u673a\u4e0a\u6e05\u7406\u8fd9\u6837\u7684\u4e34\u65f6\u503c\u9700\u8981\u4e00\u79cd\u66f4\u5148\u8fdb\u7684\u6240\u8c13\u7684\u975e\u8ba1\u7b97\u6280\u672f\u3002\n\u201cSilq\u662f\u7b2c\u4e00\u79cd\u81ea\u52a8\u8bc6\u522b\u548c\u64e6\u9664\u4e0d\u518d\u9700\u8981\u7684\u503c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u201dBichsel\u89e3\u91ca\u8bf4\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u901a\u8fc7\u5e94\u7528\u4ed6\u4eec\u5bf9\u7ecf\u5178\u7f16\u7a0b\u8bed\u8a00\u7684\u77e5\u8bc6\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff1a\u4ed6\u4eec\u7684\u81ea\u52a8\u8ba1\u7b97\u65b9\u6cd5\u53ea\u4f7f\u7528\u6ca1\u6709\u4efb\u4f55\u7279\u6b8a\u91cf\u5b50\u64cd\u4f5c\u7684\u7f16\u7a0b\u547d\u4ee4\uff0c\u6b63\u5982\u97e6\u5207\u592b\u548c\u6bd4\u5207\u5c14\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u662f\u201cqfree\u201d\u7684\u3002\n\u201c\u5c31\u4f18\u5316\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7f16\u7a0b\u800c\u8a00\uff0cSilq\u662f\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\uff1b\u5b83\u4e0d\u662f\u5f00\u53d1\u7684\u6700\u540e\u9636\u6bb5\uff0c\u201dVechev\u8bf4\u3002\u4ecd\u7136\u6709\u8bb8\u591a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u4f46\u7531\u4e8eSilq\u66f4\u5bb9\u6613\u7406\u89e3\uff0cVechev\u548cBichsel\u5e0c\u671b\u65e2\u80fd\u523a\u6fc0\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\u7684\u8fdb\u4e00\u6b65\u53d1\u5c55\uff0c\u4e5f\u80fd\u523a\u6fc0\u65b0\u91cf\u5b50\u7b97\u6cd5\u7684\u7406\u8bba\u548c\u5f00\u53d1\u3002\n\u201c\u6211\u4eec\u7684\u56db\u4eba\u56e2\u961f\u5728\u4e24\u5e74\u7684\u5de5\u4f5c\u540e\u53d6\u5f97\u4e86\u7a81\u7834\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u8bed\u8a00\u8bbe\u8ba1\u3001\u91cf\u5b50\u7269\u7406\u548c\u5b9e\u73b0\u65b9\u9762\u7684\u4e0d\u540c\u4e13\u4e1a\u77e5\u8bc6\u7684\u7ed3\u5408\u3002\u5982\u679c\u5176\u4ed6\u7814\u53d1\u56e2\u961f\u63a5\u53d7\u6211\u4eec\u7684\u521b\u65b0\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u529f\uff0c\u201cBichsel\u8bf4\u3002\nBichsel B\uff0cBaader M\uff0cGehr T\uff0cVechev M.Silq\uff1a\u4e00\u79cd\u5177\u6709\u5b89\u5168\u8ba1\u7b97\u548c\u76f4\u89c2\u8bed\u4e49\u7684\u9ad8\u7ea7\u91cf\u5b50\u8bed\u8a00\u3002PLDI 2020\uff1a\u7b2c41\u5c4aACM SIGPLAN\u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u4f1a\u8bae\u8bba\u6587\u96c6\uff0c2020\u5e746\u6708\uff0c286-300\u3002DOI\uff1a10.1145/3385412.3386007", "note_en": "Several technical advances have been achieved recently in the pursuit of powerful quantum computers. Now, Computer scientists from ETH Zurich have made an important breakthrough in the field of programming languages: their quantum language is the first of its kind that is as elegant, simple and safe as classical computer languages.\n  Programming quantum computers is becoming easier: computer scientists at ETH Zurich have designed the first programming language that can be used to program quantum computers as simply, reliably and safely as classical computers. \u201cProgramming quantum computers is still a challenge for researchers,\u201d says Martin Vechev, computer science professor in ETH\u2019s Secure, Reliable and Intelligent Systems Lab ( SRI ), \u201cwhich is why I\u2019m so excited that we can now continue ETH Zurich\u2019s tradition in the development of quantum computers and programming languages.\u201d\n He adds: \u201cOur quantum programming language Silq allows programmers to utilize the potential of quantum computers better than with existing languages, because the code is more compact, faster, more intuitive and easier to understand for programmers.\u201d This week, Vechev will introduce Silq to  other experts in the field  at PLDI 2020, a conference for programming languages. To facilitate discussion, adoption and further development, he and his team have also released Silq on its own website ( silq.ethz.ch ).\n Quantum computing has been seeing increased attention over the last decade, since these computers, which function according to the principles of quantum physics, have enormous potential. Today, most researchers believe that these computers will one day be able to solve certain problems faster than classical computers, since to perform their calculations they use entangled quantum states in which various bits of information overlap at a certain point in time. This means that in the future, quantum computers will be able to efficiently solve problems which classical computers cannot solve within a reasonable timeframe.\n This quantum supremacy has still to be proven conclusively. However, some significant technical advances have been achieved recently. In late summer 2019, a quantum computer succeeded in solving a problem \u2013 albeit a very specific one \u2013 more quickly than the fastest classical computer.\n For certain \u201cquantum algorithms\u201d, i.e. computational strategies, it is also known that they are faster than classical algorithms, which do not exploit the potential of quantum computers. To date, however, these algorithms still cannot be calculated on existing quantum hardware because quantum computers are currently still too error-prone.\n  Utilizing the potential of quantum computation not only requires the latest technology, but also a quantum programming language to describe quantum algorithms. In principle, an algorithm is a \u201crecipe\u201d for solving a problem; a programming language describes the algorithm so that a computer can perform the necessary calculations.\n Today, quantum programming languages are tied closely to specific hardware; in other words, they describe precisely the behaviour of the underlying circuits. For programmers, these \u201chardware description languages\u201d are cumbersome and error-prone, since the individual programming instructions must be extremely detailed and thus explicitly describe the minutiae needed to implement quantum algorithms.\n   Silq allows to utilize the potential of quantum computers better than with existing languages.\r  Martin Vechev, Professor of Computer Science\n   This is where Vechev and his group come in with their development of Silq. \u201cSilq is the first quantum programming language that is not designed primarily around the construction and functionality of the hardware, but on the mindset of the programmers when they want to solve a problem \u2013 without requiring them to understand every detail of the computer architecture and implementation,\u201d says Benjamin Bichsel, a doctoral student in Vechev\u2019s group who is supervising the development of Silq.\n Computer scientists refer to computer languages that abstract from the technical details of the specific type of computer as high-level programming languages. Silq is the very first high-level programming language for quantum computers. High-level programming languages are more expressive, meaning that they can describe even complex tasks and algorithms with less code. This makes them more comprehensible and easier to use for programmers. They can also be used with different computer architectures.\n  The greatest innovation and simplification that Silq brings to quantum programming languages concerns a source of errors that has plagued quantum programming until now. A computer calculates a task in several intermediate steps, which creates intermediate results or temporary values.\n In order to relieve the memory, classical computers automatically erase these values. Computer scientists refer to this as \u201cgarbage collection\u201d, since the superfluous temporary values are disposed of.\n In the case of quantum computers, this disposal is trickier due to quantum entanglement: the previously calculated values can interact with the current ones, interfering with the correct calculation. Accordingly, cleaning up such temporary values on quantum computers requires a more advanced technique of so-called uncomputation.\n \u201cSilq is the first programming language that automatically identifies and erases values that are no longer needed,\u201d explains Bichsel. The computer scientists achieved this by applying their knowledge of classical programming languages: their automatic uncomputation method uses only programming commands that are free of any special quantum operations \u2013 they are \u201cqfree\u201d, as Vechev and Bichsel say.\n \u201cSilq is a major breakthrough in terms of optimising the programming of quantum computers; it is not the final phase of development,\u201d says Vechev. There are still many open questions, but because Silq is easier to understand, Vechev and Bichsel hope to stimulate both the further development of quantum programming languages and the theory and development of new quantum algorithms.\n \u201cOur team of four has made the breakthrough after two years of work thanks to the combination of different expertise in language design, quantum physics and implementation. If other research and development teams embrace our innovations, it will be a great success,\u201d says Bichsel.\n   Bichsel B, Baader M, Gehr T, Vechev M. Silq: a high-level quantum language with safe uncomputation and intuitive semantics. PLDI 2020: Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation, June 2020, 286\u2013300. doi:  10.1145/3385412.3386007", "posttime": "2020-06-20 03:57:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u91cf\u5b50", "title": "\u7b2c\u4e00\u79cd\u76f4\u89c2\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00--\u82cf\u9ece\u4e16ETH", "title_en": "The first intuitive programming language for quantum computers \u2013 ETH Zurich", "transed": 1, "url": "https://ethz.ch/en/news-and-events/eth-news/news/2020/06/the-first-intuitive-programming-language-for-quantum-computers.html", "via": "", "real_tags": ["\u7f16\u7a0b", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007309, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "7\u670812\u65e5\uff0cSourcegraph\u57fa\u4e8eLSIF\u7684\u7cbe\u786e\u4ee3\u7801\u667a\u80fd\u5c06\u5728\u4e00\u5e74\u524d\u9996\u6b21\u63d0\u4ea4\u3002\nSourcegraph\u7684\u7cbe\u786e\u4ee3\u7801\u667a\u80fd\u529f\u80fd\u662f\u7531\u7528\u6237\u4e0a\u4f20\u7684LSIF\u7d22\u5f15\u9a71\u52a8\u7684\uff0c\u8fd9\u4e9bLSIF\u7d22\u5f15\u662f\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u6784\u5efa\u548c\u6301\u7eed\u96c6\u6210\u7cfb\u7edf\u4e2d\u521b\u5efa\u7684\u3002\u6d4f\u89c8\u5df2\u7f16\u5236\u7d22\u5f15\u7684\u4ee3\u7801\u65f6\uff0c\u6240\u6709\u60ac\u505c\u5de5\u5177\u63d0\u793a\u3001\u5b9a\u4e49\u548c\u53c2\u8003\u7ed3\u679c\u90fd\u662f\u7cbe\u786e\u7684\uff0c\u800c\u4e0d\u662f\u542f\u53d1\u5f0f\u7684(\u57fa\u4e8e\u641c\u7d22\u7ed3\u679c\uff0c\u8fd9\u662f\u65e0\u914d\u7f6e\u7684\u9ed8\u8ba4\u8bbe\u7f6e)\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u53cd\u6620\u4e86\u968f\u7740\u7cbe\u786e\u4ee3\u7801\u82f1\u7279\u5c14\u670d\u52a1\u901a\u8fc7\u9644\u52a0\u529f\u80fd\u3001\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u8981\u6c42\u3001\u5f3a\u5316\u3001\u6027\u80fd\u6539\u8fdb\u3001\u91cd\u6784\u548c\u4e00\u6b21\u4e0d\u540c\u8bed\u8a00\u7684\u91cd\u5927\u91cd\u5199\u800c\u6210\u719f\u7684\u9ad8\u7ea7\u6280\u672f\u53d8\u5316\u3002\u8fd9\u4e9b\u66f4\u6539\u8de8\u8d8a\u4e86\u8d85\u8fc7527\u4e2a\u63d0\u4ea4\u7684+324K/-277K\u4ee3\u7801\u884c\u3002\n\u4e25\u683c\u6765\u8bf4\uff0c\u6211\u53ef\u80fd\u4e0d\u80fd\u79f0\u8fd9\u7bc7\u6587\u7ae0\u4e3a\u8f6f\u4ef6\u8003\u53e4\u5de5\u4f5c(\u56e0\u4e3a\u5b83\u53ea\u6709\u4e00\u5e74\u7684\u5386\u53f2\uff0c\u5b83\u5f97\u5230\u4e86\u79ef\u6781\u7684\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u9057\u7559\u7684\u4ee3\u7801\u5e93\uff0c\u4e3b\u8981\u4f5c\u8005\u4ecd\u7136\u5728\u8fd9\u91cc\u8c08\u8bba\u5b83\uff0c\u800c\u4e14\u5b83\u4e5f\u4e0d\u662f\u5b8c\u5168\u6ca1\u6709\u6587\u6863\u8bb0\u5f55\u7684)\u3002\u79f0\u5b83\u4e3a\u5386\u53f2\u6587\u7269\u53ef\u80fd\u66f4\u51c6\u786e\uff0c\u4f46\u6050\u9f99\u6bd4\u4e66\u7c4d\u66f4\u9177\uff0c\u6240\u4ee5\u6b22\u8fce\u6765\u5230\u6316\u6398\u73b0\u573a\u3002\nChris Wendt\u5c06\u8be5\u670d\u52a1\u7684\u521d\u7a3f\u5199\u6210\u4e00\u4e2a\u7b80\u5355\u7684TypeScript express\u670d\u52a1\u5668\uff0c\u7531\u524d\u7aef\u670d\u52a1\u7684HTTP API\u4ee3\u7406\u3002\u8fd9\u4f7f\u516c\u5171\u670d\u52a1\u7684\u6570\u91cf\u4fdd\u6301\u5728\u8f83\u4f4e\u6c34\u5e73\uff0c\u5e76\u4f7f\u8bf7\u6c42\u8eab\u4efd\u9a8c\u8bc1\u6d41\u4fdd\u6301\u5728\u5355\u4e2a\u4ee3\u7801\u8def\u5f84\u4e0a\u3002Express\u670d\u52a1\u5668\u5c06\u63a5\u53d7\u539f\u59cbLSIF\u8f93\u5165\uff0c\u5e76\u5c06\u5176\u539f\u5c01\u4e0d\u52a8\u5730\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u3002\u901a\u8fc7\u6982\u5ff5\u9a8c\u8bc1LSIF\u7279\u5b9a\u6269\u5c55\u5bf9lsif\u670d\u52a1\u5668\u7684\u67e5\u8be2\u5c06\u8bfb\u53d6\u8be5\u5b58\u50a8\u5e93\u7684\u539f\u59cbLSIF\u6570\u636e\uff0c\u5c06\u5176\u89e3\u6790\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u904d\u5386\u56fe\u8868\u4ee5\u6784\u9020\u9002\u5f53\u7684\u54cd\u5e94\u3002\n\u9009\u62e9\u6253\u5b57\u7a3f\u5728\u5f53\u65f6\u662f\u5f88\u81ea\u7136\u7684\uff1a(\u5f53\u65f6\u79f0\u4e3a)codenav\u56e2\u961f\u7531\u540e\u6765\u7684\u7f51\u7edc\u548c\u4ee3\u7801\u60c5\u62a5\u56e2\u961f\u7ec4\u6210\u3002TypeScript\u662f\u56e2\u961f\u7684\u4e00\u9879\u4e3b\u8981\u6838\u5fc3\u80fd\u529b\uff0c\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u662f\u80fd\u591f\u5728\u672a\u53d1\u5e03\u7684Visual Studio\u4ee3\u7801\u6269\u5c55\u4e2d\u91cd\u7528\u670d\u52a1\u5668\u5305\u4e2d\u7684\u4ee3\u7801\uff0c\u4ee5\u4fbf\u4f7f\u7528LSIF\u534f\u8bae\u7684\u529f\u80fd\u4f7f\u7528\u8005(\u6b64\u65f6\u53ea\u67090.4.0)\u542f\u52a8\u670d\u52a1\u3002\n\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4ee5\u53ca\u5b83\u7684\u7f16\u5199\u65b9\u5f0f\uff0c\u7edd\u5bf9\u662fMVP\u7684\u9ec4\u91d1\u6807\u51c6\u3002\u5b83\u505a\u4e86\u5b83\u9700\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u4ee5\u5f81\u6c42\u7528\u6237\u7684\u53cd\u9988\uff0c\u5e76\u5728\u53ef\u80fd\u7684\u529f\u80fd\u5b87\u5b99\u4e2d\u627e\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\u3002\u6b63\u5982\u6240\u6709\u6b64\u7c7b\u6700\u4f4e\u5b9e\u73b0\u5e94\u8be5\u6ce8\u610f\u7684\u90a3\u6837\uff0c\u5b83\u7f3a\u4e4f\u5bf9\u53ef\u4f38\u7f29\u6027\u3001\u6027\u80fd\u548c\u5065\u58ee\u6027\u7684\u5173\u6ce8(\u56e0\u4e3a\u60a8\u4e0d\u4f1a\u5728\u7acb\u5373\u5e9f\u5f03\u7684\u7279\u6027\u4e0a\u82b1\u8d39\u7cbe\u529b)\u3002\n\u5728\u8fd9\u4e2a\u516c\u5173\u5f00\u901a\u5341\u5929\u540e\uff0c\u6211\u5c06\u4f5c\u4e3aCodenav\u56e2\u961f\u7684\u4e00\u5458\u5f00\u59cb\u6211\u5728Sourcegraph\u7684\u65c5\u7a0b\u3002\u5927\u7ea6\u5728\u8fd9\u4e2a\u65f6\u5019\uff0cSourcegraph\u51b3\u5b9a\u53d6\u6d88\u8bed\u8a00\u670d\u52a1\u5668\u5de5\u4f5c\u7684\u4f18\u5148\u987a\u5e8f\uff0c\u4ee5\u652f\u6301\u6784\u5efa\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u5b9e\u73b0LSIF\u7d22\u5f15\u652f\u6301\u7684\u7cbe\u786e\u4ee3\u7801\u667a\u80fd\u3002LSIF\u516c\u544a\u7684\u535a\u5ba2\u6587\u7ae0\u6982\u8ff0\u4e86\u6211\u4eec\u9009\u62e9\u8f6c\u79fb\u91cd\u70b9\u7684\u4e00\u4e9b\u539f\u56e0\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5728\u6269\u5c55\u5176\u529f\u80fd\u96c6\u4ee5\u6700\u7ec8\u5305\u542b\u8bed\u8a00\u670d\u52a1\u5668\u5f53\u524d\u63d0\u4f9b\u7684\u5185\u5bb9\u7684\u540c\u65f6\uff0c\u5c06\u6539\u8fdb\u670d\u52a1\u7684\u53ef\u4f38\u7f29\u6027\u3001\u6027\u80fd\u548c\u5065\u58ee\u6027\u65b9\u9762\u7684\u5de5\u4f5c\u8fdb\u884c\u9884\u7b97\u3002\n\u8981\u89e3\u51b3\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u9009\u62e9\u5982\u4f55\u5728\u670d\u52a1\u4e2d\u8868\u793aLSIF\u6570\u636e\u3002MVP\u53ea\u662f\u5c06\u539f\u59cbLSIF\u8f93\u5165\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u6309\u9700\u5c06\u5176\u89e3\u6790\u5230\u5185\u5b58\u4e2d\u3002\u5e76\u4e0d\u662f\u6bcf\u4e2a\u67e5\u8be2\u90fd\u4f1a\u4ece\u5934\u5f00\u59cb\u89e3\u6790LSIF\u8f93\u5165-\u6709\u4e00\u4e2aLRU\u7f13\u5b58\u5141\u8bb8\u591a\u4e2a\u8bf7\u6c42\u547d\u4e2d\u76f8\u540c\u7684LSIF\u7d22\u5f15\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u89e3\u6790\u3002\u4f46\u662f\uff0cLSIF\u7d22\u5f15\u53ef\u80fd\u975e\u5e38\u5927\u3002\u9996\u5148\uff0c\u5c06\u8fd9\u4e9b\u7d22\u5f15\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\u7684\u65f6\u95f4\u662f\u4e0d\u53ef\u5ffd\u7565\u7684\uff0c\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u5373\u4f7f\u662f\u51e0\u4e2a\u5927\u7d22\u5f15\u4e5f\u53ef\u80fd\u5bfc\u81f4OOM\u5d29\u6e83\u3002\n\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u4ec5\u67e5\u8be2\u6211\u4eec\u56de\u7b54\u67e5\u8be2\u6240\u9700\u7684\u7d22\u5f15\u90e8\u5206\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u9ad8\u6548\u5730\u8fdb\u884c\u67e5\u8be2\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u51b3\u5b9a\u5728\u4e0a\u4f20\u65f6\u5c06\u539f\u59cbLSIF\u6570\u636e\u8f6c\u6362\u4e3a\u5185\u90e8\u534f\u8bae\u65e0\u5173\u7684\u683c\u5f0f\uff0c\u8ba9\u6211\u4eec\u5b8c\u5168\u63a7\u5236\u5b58\u50a8\u683c\u5f0f\u3002\u901a\u8fc7\u63a7\u5236\u5b58\u50a8\u683c\u5f0f\uff0c\u53ef\u4ee5\u9488\u5bf9\u5efa\u8bae\u7684\u8bbf\u95ee\u6a21\u5f0f\u9ad8\u6548\u5730\u8bbe\u8ba1\u5b58\u50a8\u683c\u5f0f\uff1a\n\u4e3a\u4e86\u8bc1\u660e\u6216\u53cd\u9a73\u4e00\u79cd\u5b58\u50a8\u683c\u5f0f\u76f8\u5bf9\u4e8e\u53e6\u4e00\u79cd\u5b58\u50a8\u683c\u5f0f\u7684\u6027\u80fd\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e24\u4e2a\u7248\u672c\u7684\u540e\u7aef(Dgraph\u540e\u7aef\u5b9e\u73b0\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230)\u3002\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\uff0cSQLite\u548cDgraph\u540e\u7aef\u7684\u4e0a\u4f20\u6027\u80fd\u90fd\u4e0e\u8f93\u5165\u5927\u5c0f\u6210\u6b63\u6bd4\uff1aSQLite\u7684\u7cfb\u6570\u57282.2\u500d\u52302.8\u4e4b\u95f4\uff0cDgraph\u7684\u7cfb\u6570\u572825\u500d\u4e4b\u95f4\u3002\u589e\u52a0\u8fd9\u79cd\u6027\u80fd\u5dee\u5f02\u7684\u56e0\u7d20\u53ef\u80fd\u662f\u591a\u65b9\u9762\u7684\uff0c\u5305\u62ec\u7f3a\u4e4f\u56fe\u5f62\u6570\u636e\u5e93\u7684\u7ecf\u9a8c\u3001\u6ca1\u6709DGRAPH\u7684\u64cd\u4f5c\u7ecf\u9a8c\uff0c\u4ee5\u53ca\u5bf9\u56fe\u5f62\u6a21\u5f0f\u7684\u9519\u8bef\u9009\u62e9\u3002\n\u6211\u4eec\u9009\u62e9\u4f7f\u7528SQLite\u8fd0\u884c\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u66f4\u9ad8\u7684\u521d\u59cb\u6027\u80fd\u3001\u719f\u6089\u6027\u548c\u6613\u4e8e\u64cd\u4f5c\u7684\u7279\u6027\u3002SQLite\u4ecd\u7136\u662fSourcegraph\u4e2d\u4ee3\u7801\u667a\u80fd\u6346\u7ed1\u5305\u7684\u78c1\u76d8\u683c\u5f0f\u3002\n\u5728\u6b64\u66f4\u6539\u4e4b\u540e\uff0c\u539f\u59cbLSIF\u4e0a\u8f7d\u88ab\u7acb\u5373\u5904\u7406\u5230\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684SQLite\u6587\u4ef6\u4e2d\uff0c\u67e5\u8be2\u53ea\u9700\u8981\u8bbf\u95ee\u5305\u542b\u76ee\u6807\u6e90\u8303\u56f4\u7684\u6587\u6863\u3002\u8fd9\u91cc\u9002\u7528\u6807\u51c6\u7684SQL\u8bbe\u8ba1\u548c\u6280\u5de7\u3002\n\u5728\u4e0a\u4e00\u6b21\u66f4\u6539\u4e4b\u540e\uff0c\u4e0d\u518d\u5728\u67e5\u8be2\u8def\u5f84\u4e2d\u89e3\u6790\u539f\u59cbLSIF\u6570\u636e\uff0c\u800c\u662f\u5728\u4e0a\u8f7d\u65f6\u89e3\u6790\u539f\u59cbLSIF\u6570\u636e\u3002\u4f46\u662f\uff0c\u4e0a\u8f7d\u4ecd\u7136\u662f\u4e00\u4e2aHTTP\u8bf7\u6c42\uff0c\u5b83\u53d7\u5236\u4e8eOSI\u7b2c5\u5c42\u53ca\u66f4\u4f4e\u5c42\u7684\u5c5e\u6027\u3001\u89c4\u5219\u548c\u7a81\u53d1\u5947\u60f3\u3002\u8f6c\u6362\u8fc7\u7a0b\u672c\u8eab\u5f88\u7e41\u91cd\uff0c\u800c\u4e14\u5728\u4f18\u5316\u65b9\u9762\u6ca1\u6709\u5f97\u5230\u592a\u591a\u5173\u6ce8-\u5904\u7406\u5927\u578b\u6587\u4ef6\u6240\u9700\u7684\u65f6\u95f4\u4f1a\u6bd4\u67d0\u4e9b\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u5668\u548c/\u6216\u4ee3\u7406\u8d85\u65f6\u65f6\u95f4\u66f4\u957f\uff0c\u5e76\u4e14\u6700\u7ec8\u4f1a\u65ad\u5f00\u5bf9\u4e2d\u7b49\u5927\u5c0f\u6709\u6548\u8d1f\u8f7d\u7684\u4e0a\u4f20\u8bf7\u6c42\u3002\n\u4e0a\u4f20\u4e00\u4e2a\u5927\u6587\u4ef6\u4ecd\u7136\u5f88\u5bb9\u6613\u5bfc\u81f4\u6574\u4e2a\u8fc7\u7a0b\u5d29\u6e83\uff0c\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5b83\u4ecd\u7136\u5fc5\u987b\u5c06\u8be5\u6587\u4ef6\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\u3002\u56e0\u4e3a\u8f6c\u6362\u53d1\u751f\u5728HTTP\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u6240\u4ee5\u4e5f\u5f88\u5bb9\u6613\u901a\u8fc7\u4e0a\u4f20\u591a\u4e2a\u5c0f\u6587\u4ef6\u4f7flsif-server\u5d29\u6e83\uff0c\u8fd9\u4e9b\u5c0f\u6587\u4ef6\u7684\u603b\u548c\u8d85\u8fc7\u4e86\u5206\u914d\u7ed9lsif-server\u7684\u5185\u5b58\u8d44\u6e90\u3002\n\u6211\u4eec\u9009\u62e9\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u5904\u7406\u5de5\u4f5c\u4eceExpress\u670d\u52a1\u5668\u63d0\u53d6\u5230\u53e6\u4e00\u4e2a\u670d\u52a1\u4e2d\uff0c\u8be5\u670d\u52a1\u5c06\u5de5\u4f5c\u4ece\u5171\u4eab\u961f\u5217\u4e2d\u63d0\u53d6\u51fa\u6765\u3002\u4e0a\u4f20\u64cd\u4f5c\u53d8\u5f97\u5f88\u5feb\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u4f20\u8f93\u6709\u6548\u8d1f\u8f7d\u5c31\u53ef\u4ee5\u547d\u4e2d\u78c1\u76d8\uff0c\u800c\u4e0d\u9700\u8981\u5b8c\u5168\u8f6c\u6362\u3002\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u4e0a\u8f7d\u53ef\u786e\u4fdd\u4e00\u7cfb\u5217\u4e0a\u8f7d\u4e0d\u4f1a\u4f7f\u7cfb\u7edf\u5d29\u6e83\uff0c\u800c\u5904\u7406\u5927\u578b\u4e0a\u8f7d\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u5206\u914d\u7ed9lsif-worker\u8fdb\u7a0b\u7684\u5185\u5b58\u6765\u8865\u6551\u3002\u4eca\u5929\uff0clsif-worker\u88ab\u79f0\u4e3a\u7cbe\u786e\u7f16\u7801\u7684intel-worker\u3002\n\u4f5c\u4e3a\u5171\u4eab\u961f\u5217\u7684\u9009\u62e9\uff0c\u6211\u4eec\u9009\u62e9\u4e86node-resque\uff0c\u8fd9\u662fRails\u751f\u6001\u7cfb\u7edf\u4e2d\u6d41\u884c\u7684resque\u5e93\u7684Node.js\u7aef\u53e3\u3002\u8fd9\u4e2a\u5e93\u4f7f\u7528Redis\u5b58\u50a8\u4f5c\u4e1a\u6570\u636e\uff0c\u5b83\u5df2\u7ecf\u662f\u6211\u4eec\u5806\u6808\u7684\u4e00\u4e2a\u7ec4\u4ef6\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u5305\u62ec\u4f7f\u7528postgres(\u5b83\u662f\u6211\u4eec\u5806\u6808\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u4f46\u7531\u4e00\u5c0f\u90e8\u5206\u670d\u52a1\u4fdd\u62a4)\uff0c\u4f7f\u7528\u67d0\u79cd\u672c\u5730IPC(\u8fd9\u5c06\u963b\u6b62\u6211\u4eec\u5c06\u6765\u72ec\u7acb\u5730\u6269\u5c55lsif-server\u548clsif-worker)\uff0c\u4ee5\u53ca\u4f7f\u7528AMQP\u670d\u52a1\u5668(\u5b83\u8fd8\u4e0d\u662f\u6211\u4eec\u5806\u6808\u4e2d\u7684\u73b0\u6709\u7ec4\u4ef6)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5c06\u8f6c\u6362\u540e\u7684LSIF\u7d22\u5f15\u6570\u636e\u4e00\u5bf9\u4e00\u5730\u5b58\u50a8\u5728SQLite\u6570\u636e\u5e93\u4e2d\uff1a\u6bcf\u4e2a\u4e0a\u4f20\u7684LSIF\u7d22\u5f15\u90fd\u6210\u4e3a\u78c1\u76d8\u4e0a\u7684\u5355\u4e2a\u6570\u636e\u5e93\u3002\u4e3a\u4e86\u652f\u6301\u8de8\u5b58\u50a8\u5e93\u67e5\u8be2(\u8df3\u5230\u8fdc\u7a0b\u5b9a\u4e49\uff0c\u67e5\u627e\u8de8\u5b58\u50a8\u5e93\u7684\u5f15\u7528)\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u989d\u5916\u7684xrepo.db\u6570\u636e\u5e93\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u5b83\u4eec\u63d0\u4f9b\u7684\u7248\u672c\u5316\u5305\u548c\u5b83\u4eec\u6240\u4f9d\u8d56\u7684\u7248\u672c\u5316\u5305\u6765\u67e5\u627e\u7d22\u5f15\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6709\u4e00\u4e2alsif-server\u5b9e\u4f8b\u548c\u4e00\u4e2alsif-worker\u5b9e\u4f8b\uff0c\u5b83\u4eec\u90fd\u90e8\u7f72\u5728\u76f8\u540c\u7684Docker\u5bb9\u5668\u4e2d\uff0c\u4ee5\u4fbf\u4e24\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u6301\u4e45\u78c1\u76d8\u7a7a\u95f4\u3002\u4e3a\u4e86\u62c6\u5206\u8fd9\u4e9b\u670d\u52a1\u5e76\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\uff0c\u6211\u4eec\u9700\u8981\u5c06xrepo.db\u62e5\u6709\u7684\u6570\u636e\u4eceSQLite\u4e2d\u8fc1\u79fb\u51fa\u6765\uff0c\u8fd9\u4e0d\u5141\u8bb8\u6765\u81ea\u591a\u4e2a\u8fdb\u7a0b\u7684\u5e76\u53d1\u5199\u5165\u3002\u5c06\u8fd9\u4e9b\u6570\u636e\u79fb\u5230\u6211\u4eec\u73b0\u6709\u7684Postgres\u5b9e\u4f8b\u4e2d\u5f88\u5bb9\u6613\uff1a\u5f00\u59cb\u548c\u7ed3\u675f\u72b6\u6001\u90fd\u5b9a\u4e49\u4e86\u51e0\u4e2a\u7b80\u5355\u7684\u8868\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4efb\u4f55\u82b1\u54e8\u7684\u6280\u5de7\u3002\n\u989d\u5916\u5199\u5165\u7684\u672a\u77e5\u89c4\u6a21\u4ee4\u6211\u4eec\u62c5\u5fe7\u3002\u662f\u5426\u4f1a\u5bfc\u81f4\u64cd\u4f5c\u95ee\u9898\u6216\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u65e0\u5173\u90e8\u5206\u7684\u6027\u80fd\uff1f\u4e3a\u5b89\u5168\u8d77\u89c1\uff0c\u6211\u4eec\u4fdd\u6301\u8868\u7a7a\u95f4\u4e0d\u76f8\u4ea4(\u5e26\u524d\u7f00\u7684\u8868\u540d\uff0c\u6ca1\u6709\u6307\u5411\u73b0\u6709\u8868\u7684\u5916\u952e)\uff0c\u5e76\u8ba1\u5212\u652f\u6301\u5c06\u6b64\u6570\u636e\u5e93\u8fc1\u79fb\u5230\u7b2c\u4e8c\u4e2aPostgres\u5b9e\u4f8b\u4e2d\u3002\u8fd9\u9700\u8981\u6211\u4eec\u4f7f\u7528db_link\u6267\u884c\u4e00\u4e9b\u4ee4\u4eba\u8ba8\u538c\u7684\u8be1\u8ba1\uff0c\u4ee5\u4fbf\u8fd0\u884c\u8fc1\u79fb\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u975e\u5e38\u75db\u82e6\uff0c\u5e76\u6700\u7ec8\u6062\u590d\u3002\u4e00\u4e9b\u7c97\u7565\u7684\u8ba1\u7b97\u8868\u660e\uff0c\u8d1f\u8377\u4e0d\u4f1a\u538b\u5012Postgres(\u8fd9\u65e0\u8bba\u5982\u4f55\u90fd\u662f\u5f88\u96be\u505a\u5230\u7684-Postgres\u662f\u76f8\u5f53\u5389\u5bb3\u7684)\u3002\u8c22\u5929\u8c22\u5730\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002\n\u6b64\u66f4\u6539\u5c06\u4f5c\u4e1a\u961f\u5217\u7684\u63a5\u53e3\u66f4\u65b0\u4e3a\u4f7f\u7528BULL\u800c\u4e0d\u662f\u8282\u70b9\u91cd\u65b0\u6392\u961f\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u91cd\u5927\u7684\u67b6\u6784\u6539\u53d8\uff0c\u4f46\u662f\u66f4\u65b0\u5e93\u786e\u5b9e\u6d88\u9664\u4e86\u6211\u4eec\u9047\u5230\u7684\u4e00\u4e9b\u64cd\u4f5c\u95ee\u9898\uff0c\u6bd4\u5982\u5458\u5de5\u6ede\u7559\u548c\u5931\u4e1a\u3002\u5207\u6362\u5230\u65b0\u7684\u5e93\u8fd8\u91ca\u653e\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u6309\u65f6\u95f4\u8868\u8fd0\u884c\u4f5c\u4e1a\uff0c\u5e76\u80fd\u591f\u5217\u51fa\u5904\u4e8e\u7279\u5b9a\u72b6\u6001\u7684\u4f5c\u4e1a(\u501f\u52a9Redis\u7684EVAL\u547d\u4ee4\u7684\u9b54\u529b\uff0c\u53ef\u4ee5\u5728\u4f5c\u4e1a\u6709\u6548\u8d1f\u8f7d\u4e2d\u641c\u7d22\u4e0e\u67e5\u8be2\u5339\u914d\u7684\u6587\u672c)\u3002\n\u4f5c\u4e1a\u961f\u5217\u7684\u6f14\u53d8\u4ecd\u5728\u7ee7\u7eed\u3002\u6b64\u66f4\u6539\u4f1a\u5c06\u5165\u961f/\u51fa\u961f\u4f5c\u4e1a\u7684\u63a5\u53e3\u66f4\u65b0\u4e3a\u76ee\u6807Postgres\uff0c\u800c\u4e0d\u662fRedis\u3002\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u590d\u6742\u6027\u3002lsif-server\u548clsif-worker\u90fd\u4e0d\u518d\u4f9d\u8d56Redis\uff0cRedis\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u5176\u4ed6\u90e8\u5206\u90fd\u88ab\u7528\u4f5c\u4e34\u65f6\u7684\u3001\u53ef\u4e2d\u7ee7\u7684\u7f13\u5b58\u3002\u6240\u6709\u8fdb\u5165Bull\u62e5\u6709\u7684\u6570\u636e\u7684\u81ea\u5b9a\u4e49Lua\u811a\u672c\u90fd\u53ef\u4ee5\u7b80\u5316\u4e3a\u51e0\u4e2aSQL\u8bed\u53e5\u3002\n\u51cf\u5c11\u4ea4\u6613\u671f\u95f4\u53d1\u751f\u7a81\u53d8\u7684\u670d\u52a1\u6570\u91cf\u59cb\u7ec8\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u6b64\u66f4\u6539\u8fd8\u5141\u8bb8\u6211\u4eec\u4e3a\u4f5c\u4e1a\u961f\u5217\u91cd\u7528\u73b0\u6709\u7684Postgres\u4e8b\u52a1\u3002\u4e0d\u518d\u53ef\u80fd\u5728\u6210\u529f\u8f6c\u6362\u65f6\u63d0\u4ea4Postgres\u4e8b\u52a1\uff0c\u4f46\u65e0\u6cd5\u5c06\u4f5c\u4e1a\u6807\u8bb0\u4e3a\u5df2\u5728\u961f\u5217\u4e2d\u89e3\u51b3\uff0c\u56e0\u4e3a\u4fee\u6539\u961f\u5217\u73b0\u5728\u53ef\u4ee5\u4f5c\u4e3a\u4e8b\u52a1\u7684\u4e00\u90e8\u5206\u5b8c\u6210\u3002\n\u6b64\u65f6\uff0clsif-server\u53ea\u80fd\u7531\u524d\u7aef\u4e2d\u672a\u8bb0\u5f55\u7684\u4ee3\u7406\u8bbf\u95ee\u3002\u6b64\u4ee3\u7406\u65e2\u7528\u4e8e\u63a5\u53d7\u4e0a\u4f20\u6709\u6548\u8d1f\u8f7d\uff0c\u4e5f\u7528\u4e8e\u67e5\u8be2\u7279\u5b9a\u6e90\u8303\u56f4\u7684\u5b9a\u4e49\u3001\u5f15\u7528\u548c\u60ac\u505c\u6587\u672c\u3002\u6b64API\u7684\u552f\u4e00\u4f7f\u7528\u8005\u662fSourcegraph\u521b\u4f5c\u7684\u8bed\u8a00\u6269\u5c55(sourcegraph/go\u3001source graph/typecript)\u3002\n\u8fd9\u4e9b\u6570\u636e\u6bd4\u7b80\u5355\u5730\u652f\u6301\u8df3\u8f6c\u5230\u5b9a\u4e49\u8981\u6709\u7528\u5f97\u591a\uff0c\u5e76\u4e14\u88ab\u6d6a\u8d39\u5728\u672a\u8bb0\u5f55\u7684API\u540e\u9762\u3002\u66f4\u6539\u4f7f\u76f8\u540c\u7684\u6570\u636e\u901a\u8fc7GraphQL API\u5728\u6269\u5c55\u5916\u90e8\u53ef\u89c1\u3002\u8fd9\u4e0d\u4ec5\u4e3aSourcegraph\u7684\u5176\u4ed6\u529f\u80fd(\u5982\u6d3b\u52a8\u548c\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7684\u4ee3\u7801\u6d1e\u5bdf)\u63d0\u4f9b\u4e86\u67e5\u8be2\uff0c\u4e5f\u4e3aSourcegraph\u7684\u5916\u90e8\u6269\u5c55\u4f5c\u8005\u548c\u4efb\u4f55\u60f3\u8981\u8fd0\u884c\u5373\u5e2d\u67e5\u8be2\u7684\u7528\u6237\u6253\u5f00\u4e86\u67e5\u8be2\u7a7a\u95f4\u3002\u968f\u7740\u6211\u4eec\u901a\u8fc7LSIF\u7d22\u5f15\u6536\u96c6\u7684\u6570\u636e\u6301\u7eed\u589e\u957f(\u6211\u4eec\u6700\u8fd1\u589e\u52a0\u4e86\u5bf9\u8bca\u65ad\u7684\u652f\u6301)\uff0c\u53ef\u80fd\u7684\u4f7f\u7528\u8303\u56f4\u4e5f\u5728\u4e0d\u65ad\u6269\u5927\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u53d1\u73b0\u8fd9\u4e9b\u6570\u636e\u7684\u7528\u9014\u5728\u524d\u65b9\u3002\n\u6b64\u65f6\uff0clsif-server\u548clsif-worker\u6346\u7ed1\u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u3002\u6211\u4eec\u51b3\u5b9a\u9884\u5148\u6d3e\u751f\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf\uff0c\u4ece\u800c\u589e\u52a0\u4e00\u6b21\u53ef\u4ee5\u5904\u7406\u7684\u4e0a\u8f7d\u6570\u91cf\u3002\n\u8fd9\u662f\u4e00\u79cd\u57fa\u672c\u7684\u6c34\u5e73\u6269\u5c55\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8d44\u6e90\u4ecd\u7136\u9650\u4e8e\u7269\u7406\u8282\u70b9\uff0c\u5e76\u4e14\u5de5\u4f5c\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u5b58\u5728\u9694\u79bb\uff1a\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u6b63\u5728\u5904\u7406\u7279\u5b9a\u7684\u5927\u578b\u4e0a\u8f7d\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6\u8fdb\u7a0b\u8017\u5c3d\u5185\u5b58\u3002\u6240\u6709\u5de5\u4f5c\u8fdb\u7a0b\u5c06\u7acb\u5373\u5d29\u6e83\uff0clsif-server\u8fdb\u7a0b\u4e5f\u5c06\u968f\u4e4b\u5d29\u6e83\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u5408\u7406\u7684\u6743\u8861\uff0c\u5e76\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u4e00\u4e9b\u5feb\u901f\u7684\u80dc\u5229\uff0c\u540c\u65f6\u589e\u52a0\u4e86\u5904\u7406\u541e\u5410\u91cf\u3002\u8fd9\u4e00\u7279\u522b\u7684\u6539\u53d8\u8fd8\u5e2e\u52a9\u6211\u4eec\u514b\u670d\u4e86Sourceraph.com\u90e8\u7f72\u4e2d\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u5f53\u65f6\u6211\u4eec\u7684Sourceraph.com\u90e8\u7f72\u6b63\u53d7\u5230\u7ebf\u5934\u963b\u585e\u7684\u56f0\u6270\u3002\n\u4e00\u76f4\u4ee5\u6765\uff0c\u6211\u4eec\u7684\u8ba1\u5212\u662f\u5728\u5fc5\u8981\u65f6\u6c34\u5e73\u6269\u5c55lsif-server\u548clsif-worker\u5b9e\u4f8b(\u5de5\u4f5c\u5668\u53ef\u80fd\u9700\u8981\u9996\u5148\u6269\u5c55\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6267\u884c\u7684CPU\u548c\u5185\u5b58\u5bc6\u96c6\u578b\u5de5\u4f5c\u6700\u591a)\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u8bef\u89e3\u4e86Kubernetes\u6301\u4e45\u5377\u7684\u529f\u80fd\uff1a\u6211\u5047\u8bbe\u78c1\u76d8\u53ef\u4ee5\u4f5c\u4e3aRWX\u6216\u8bfb\u5199\u591a\u4e2a\u8282\u70b9\u6302\u8f7d\u5230\u591a\u4e2a\u8282\u70b9\u4e0a\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u79cd\u8bbf\u95ee\u6a21\u5f0f\u53ea\u6709\u51e0\u4e2a\u5377\u63d2\u4ef6(Azure\u3001CephFS\u3001Glusterfs\u548cNFS\u7b49\u7b49)\u652f\u6301\u3002\u6211\u4eec\u7528\u4e8eSourceraph.com\u90e8\u7f72\u7684GCEPersistentDisk\u63d2\u4ef6\u4e0d\u652f\u6301\u6b64\u8bbf\u95ee\u6a21\u5f0f\u3002\n\u6211\u4eec\u524d\u8fdb\u7684\u9053\u8def\u662f\u589e\u52a0\u53e6\u4e00\u4e2a\u5c42\u6b21\u7684\u95f4\u63a5\u6027\uff0c\u8001\u5b9e\u8bf4\uff0c\u8fd9\u662f\u89e3\u51b3\u5927\u591a\u6570\u95ee\u9898\u7684\u529e\u6cd5\u3002\u6b64\u66f4\u6539\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684lsif-dump-manager\uff0c\u4eca\u5929\u79f0\u4e3a\u7cbe\u786e\u4ee3\u7801\u82f1\u7279\u5c14\u6346\u7ed1\u7ba1\u7406\u5668\uff0c\u8be5\u670d\u52a1\u62e5\u6709\u6301\u4e45\u78c1\u76d8\u3002\n\u8fd9\u4ecelsif-server\u548clsif-worker\u4e2d\u89e3\u653e\u4e86\u8bfb\u53d6\u6216\u5199\u5165\u78c1\u76d8\u7684\u4efb\u4f55\u8d23\u4efb\uff0c\u4f7f\u5b83\u4eec\u80fd\u591f\u81ea\u7531\u5730\u6c34\u5e73\u548c\u65e0\u72b6\u6001\u5730\u6269\u5c55\u3002\u6269\u5c55\u8f6c\u50a8\u7ba1\u7406\u5668\u672c\u8eab\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u7684Gitserver\u7684\u5206\u7247\u7279\u6027\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u7ecf\u9a8c\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4ee3\u7801\u5bfc\u822a\u56e2\u961f\u5df2\u7ecf\u88ab\u5206\u6210\u7f51\u7edc\u548c\u4ee3\u7801\u82f1\u7279\u5c14\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u5728\u4ee3\u7801\u82f1\u7279\u5c14\u56e2\u961f\u7684\u6210\u5458\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\u540e\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u5f88\u591a\u56f4\u68cb\u4eba\u624d\uff0c\u4f46\u4e5f\u5931\u53bb\u4e86\u4e00\u4e9b\u6253\u5b57\u4eba\u624d\u3002\u6211\u4eec\u4e0d\u518d\u62e5\u6709\u76f8\u540c\u7684\u6838\u5fc3\u80fd\u529b\uff0c\u4ece\u7ec4\u7ec7\u548c\u67b6\u6784\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u91cd\u5199\u73b0\u6709\u7684\u6253\u5b57\u811a\u672c\u540e\u7aef\u4ee3\u7801\u4ee5\u4fbf\u5c06\u5176\u4e0e\u66f4\u5927\u7684Sourcegraph\u4ee3\u7801\u5e93\u7edf\u4e00\u8d77\u6765\u662f\u6709\u610f\u4e49\u7684\u3002\n\u6211\u4eec\u51b3\u5b9a\u6162\u6162\u5730\u5c06\u6bcf\u4e2a\u670d\u52a1\u91cd\u5199\u4e3aGo\u3002\u6211\u4eec\u7684\u9ad8\u7ea7\u8ba1\u5212\u662f\u9996\u5148\u5c06lsif-server\u5b8c\u6210\u7684CPU\u53d7\u9650\u5de5\u4f5c\u63d0\u53d6\u5230\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684GO\u8fdb\u7a0b\u4e2d\uff0c\u8be5\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u73b0\u6709\u7684\u5de5\u4f5c\u8005\u4ee3\u7801\u8c03\u7528(\u8fd9\u7c7b\u4f3c\u4e8e\u91cd\u6784\u7684\u627c\u6740\u56fe\u6a21\u5f0f)\u3002\u5806\u6808\u7684\u8fd9\u4e00\u90e8\u5206\u4f3c\u4e4e\u4ece\u91cd\u5199\u4e2d\u83b7\u76ca\u6700\u591a\uff0c\u5e76\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u73b0\u6709\u77e5\u8bc6\u6765\u79ef\u6781\u4f18\u5316\u56f4\u68cb\uff0c\u800c\u4e0d\u5fc5\u5b66\u4e60Node.js\u73af\u5883\u7684\u4f4e\u7ea7\u4f18\u5316\u6280\u672f\u3002\u6700\u7ec8\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u5de5\u4eba\u5c06\u843d\u5165\u56f4\u68cb\u4ee3\u7801\u7684\u4e8b\u4ef6\u8303\u56f4\uff0c\u6700\u7ec8\u6574\u4e2a\u5de5\u4eba\u5c06\u88ab\u53d6\u4ee3\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u4fee\u590d\u6240\u6709\u9519\u8bef\u4e4b\u540e\uff0c\u7528\u60a8\u719f\u6089\u7684\u4e00\u79cd\u8bed\u8a00\u7f16\u5199\u76f8\u540c\u7684\u7cfb\u7edf\u662f\u76f8\u5f53\u5bb9\u6613\u7684\uff0c\u800c\u6211\u53ea\u662f\u5728\u4e00\u6b21\u901a\u8fc7\u4e2d\u91cd\u5199\u4e86\u6240\u6709\u8fd9\u4e09\u4e2a\u670d\u52a1\u3002\u7531\u6b64\u4ea7\u751f\u7684\u4ee3\u7801\u5e76\u4e0d\u662f\u7279\u522b\u4e60\u60ef\u7528\u6cd5\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5feb\u901f\u7684\u3001\u884c\u4e3a\u7b49\u4ef7\u7684\u76ee\u6807\u8bed\u8a00\u7ffb\u8bd1\u3002\u81ea\u91cd\u5199\u4ee5\u6765\uff0c\u4e3a\u4e86\u5c06\u4ee3\u7801\u5851\u9020\u6210\u66f4\u9002\u5408\u65b0\u73af\u5883\u7684\u4e1c\u897f\uff0c\u4e00\u76f4\u5728\u8fdb\u884c\u4e0d\u65ad\u7684\u3001\u5c0f\u89c4\u6a21\u7684\u91cd\u6784\u3002\n\u8fd9\u91ca\u653e\u4e86\u5927\u91cf\u7684\u6027\u80fd\u6539\u8fdb\u673a\u4f1a\uff0c\u5176\u7ed3\u679c\u5c06\u5728Sourcegraph 3.17\u53d1\u5e03\u516c\u544a\u4e2d\u8be6\u7ec6\u8bf4\u660e\u3002\u6280\u672f\u7ec6\u8282\u5728\u4e00\u7bc7\u5173\u4e8e\u7cbe\u786e\u4ee3\u7801\u82f1\u7279\u5c14\u6027\u80fd\u6539\u8fdb\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002\n\u5728GO\u4e2d\u91cd\u5199\u670d\u52a1\u4e4b\u540e\uff0clsif-server\u8fdb\u7a0b\u4e0d\u518d\u4fdd\u6301\u672c\u5730\u72b6\u6001\uff0c\u5e76\u4e14\u5bf9\u5b83\u7684\u67e5\u8be2\u4e0d\u518d\u8de8\u8d8a\u8bed\u8a00\u8fb9\u754c\u3002\u51e0\u4e4e\u6ca1\u6709\u7406\u7531\u5c06\u8fd9\u9879\u670d\u52a1\u5206\u5f00\u3002\u524d\u7aef\u7684HTTP API\u548cGraphQL\u89e3\u6790\u5668\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\u80fd\u591f\u76f4\u63a5\u6267\u884c\u4e0e\u65e7\u670d\u52a1\u5668\u7684HTTP\u5904\u7406\u7a0b\u5e8f\u76f8\u540c\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u5220\u9664\u65b0\u672a\u4f7f\u7528\u7684HTTP\u670d\u52a1\u5668/\u8def\u7531\u4ee3\u7801\u3002\n\u8fd9\u4e00\u53d8\u5316\u5728\u4e0a\u9762\u63d0\u5230\u7684\u5173\u4e8e\u7cbe\u786e\u4ee3\u7801\u82f1\u7279\u5c14\u6027\u80fd\u6539\u8fdb\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u6709\u66f4\u8be6\u7ec6\u7684\u8ba8\u8bba\u3002\n\u65c5\u7a0b\u4e0d\u4f1a\u5728\u8fd9\u91cc\u505c\u4e0b\u6765\u3002\u6211\u4eec\u8ba1\u5212\u7ee7\u7eed\u589e\u52a0\u529f\u80fd\uff0c\u5e76\u5bf9\u670d\u52a1\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u652f\u6301\u5927\u89c4\u6a21\u3002\u6211\u4eec\u5173\u6ce8\u7684\u95ee\u9898\u5305\u62ec(\u4f46\u4e0d\u9650\u4e8e)\uff1a\n\u521b\u5efa\u5927\u89c4\u6a21\u516c\u5171\u7d22\u5f15(\u4ee5\u652f\u6301\u4ece\u79c1\u6709\u4ee3\u7801\u8df3\u8f6c\u5230OSS)", "note_en": "On July 12, Sourcegraph&#39;s LSIF-based precise code intelligence will have received its first commit a year ago.\n  Sourcegraph&#39;s  precise code intelligence features are driven by user-uploaded LSIF indexes created in their own build and continuous integration systems. When browsing code that has been indexed, all hover tooltips, definitions, and reference results are  precise rather than heuristic (based off of search results, which is the no-configuration default).\n This post reflects on the high-level technical changes as the precise code intel services matured through additional features, changing environment requirements, hardening, performance improvements, refactoring, and one major rewrite in a different language. These changes span +324k/-277k lines of code over 527 commits.\n I may not  strictly be able to call this post a work of  software archaeology (since it&#39;s only a year old, it&#39;s actively used, not a legacy codebase, the primary author is still here to talk about it, and it isn&#39;t completely undocumented). It may be more accurate to call it a  historiographical artifact, but dinosaurs are cooler than books so welcome to the dig site.\n    Chris Wendt wrote the initial draft of the service as a simple TypeScript express server proxied by the HTTP API of the frontend service. This kept the number of public services low and kept the request authentication flow to a single code path. The express server would accept raw LSIF input and store it on disk, unchanged. Queries to the lsif-server through a proof of concept LSIF-specific  extension would read the raw LSIF data for that repository, parse it into memory, and walk the graph to construct the appropriate response.\n  The choice of TypeScript was a natural one at the time: the (then called) codenav team consisted of what would later become the web and the code intelligence teams. TypeScript was a major core competency of the team, and there was an additional benefit of being able to reuse code from the  server package in an unpublished Visual Studio Code  extension to jump start the service with a functional consumer of the LSIF protocol (which was only 0.4.0 at this point in time).\n This code, and the manner in which it was written, was absolutely the golden standard of an MVP. It did exactly what it needed to in order to solicit feedback from users and find its place in the universe of possible features. As all such minimum implementations should be, it lacked attention to scalability, performance, and robustness (because you do  not spend that energy on a feature that is immediately scrapped).\n I would begin my journey at Sourcegraph as a member of the codenav team ten days after this PR was opened. Around this time, Sourcegraph had made the decision to de-prioritize the work on language servers in support of building out an infrastructure to enable precise code intelligence supported by LSIF indexes. The  LSIF announcement blog post outlines some of the reasons we chose to shift our focus. This allowed us to budget the effort into improving scalability, performance, and robustness of the service while extending its feature set to eventually subsume what language servers were currently providing.\n   The first issue to tackle was choosing how to represent LSIF data within the service. The MVP simply kept the raw LSIF input on disk, parsing it into memory on demand. Not every query would parse the LSIF input from scratch - there was an LRU cache that would allow multiple requests to hit the same LSIF index without re-parsing. However, LSIF indexes can be  very large. The time to read these indexes into memory in the first place was non-negligible, and storing even a few large indexes in memory was likely to cause an OOM crash.\n We needed to find a way to query only the portion of the index we needed to answer a query, and we needed to find a way to do it efficiently. We decided to convert the raw LSIF data into an internal protocol-oblivious format on upload, giving us complete control over the storage format. Having control of the storage format allowed it to be designed efficiently for the proposed access patterns:\n    In order to prove or disprove the performance of one storage format over the other, we built two versions of the backend (the Dgraph backend implementation can be found  here). Benchmarks showed that the upload performance of the SQLite and Dgraph backends were both proportional to the input size: SQLite with a factor between 2.2x and 2.8, and Dgraph with a factor of 25x. There were likely multiplying factors that increased this performance discrepancy, including lack of experience with graph databases, no operational experience with Dgraph, and a bad choice of graph schema.\n We chose to run with SQLite due to its higher initial performance, familiarity, and easy operational properties. SQLite is still the on-disk format for code intelligence bundles in Sourcegraph.\n After this change, raw LSIF uploads were processed immediately into a SQLite file which is stored on disk, and queries need only to access the documents containing the target source range. Standard SQL design and tricks apply here.\n   After the previous change, raw LSIF data was no longer parsed in the query path but at upload time. However, the upload is still an HTTP request that is subject to the properties, rules, and whims of  OSI layer 5 and below. The conversion process itself is heavy and hasn&#39;t received much love in terms of optimization - processing large files would take longer than some client, server, and/or proxy timeouts, and would end up disconnecting upload requests for even moderately sized payloads.\n It was still very easy to crash the entire process by uploading a large file, which it still had to read into memory during conversion. Because conversion happens within an HTTP handler, it was also easy to crash the lsif-server by uploading multiple small files, the sum of which exceed the memory resources allotted to the lsif-server.\n The solution we chose was to extract the processing work from the express server into another service which pulls work off of a shared queue. Upload operations became fast as it only required the transfer of the payload to hit disk and not be fully converted. Processing one upload at a time ensured that a series of uploads would not crash the system, and processing large uploads could be remedied by increasing the memory allocated to the lsif-worker process. The lsif-worker is known today as the precise-code-intel-worker.\n  As a choice of shared queue, we went with  node-resque, which is a Node.js port of the  resque library popular in the Rails ecosystem. This library uses Redis to store the job data, which was already a component of our stack. Alternative choices included using Postgres (which was a component of our stack but guarded by a small list of services), using some sort of local  IPC (which would prevent us from scaling the lsif-server and lsif-workers independently in the future), and using an AMQP server (which was not yet an existing component in our stack).\n   Up until this point, we were storing converted LSIF index data in SQLite databases one-to-one: each uploaded LSIF index became a single database on-disk. In order to support cross-repository queries (jump to remote definition, find references across repositories) we had an additional  xrepo.db database that allowed us to look up indexes by the versioned packages that they provide and the versioned packages on which they depend.\n So far, we had one instance of the lsif-server and one instance of the lsif-worker, both deployed in the same Docker container so that both processes could share the same persistent disk space. In order to break these services apart and scale horizontally, we needed to migrate the data owned by  xrepo.db out of SQLite, which does not allow concurrent writes from multiple processes. Moving this data into our existing Postgres instance was easy: both the beginning and end states defined a few simple tables and didn&#39;t require any fancy tricks.\n  The unknown scale of additional writes concerned us. Would it cause operational issues or affect the performance of unrelated parts of the application? To be safe, we kept the table spaces disjoint (prefixed table names, no foreign keys to existing tables) and planned to support migrating this database into a second Postgres instance. This required us doing some nasty trickery with  db_link in order to run migrations, which we found quite painful and  eventually reverted. Some back-of-the-envelope calculations showed that the load wouldn&#39;t overwhelm Postgres (which is difficult to do anyway - Postgres is quite the beast). Thankfully, these calculations turned out to be correct.\n   This change updates the interface to the job queue to use  bull instead of  node-resque. This was not a major architectural change, but updating the library did remove some operational issues we were experiencing with stuck workers and lost jobs. Switching to the new library also unlocked some additional features such as running jobs on a schedule \u00e0 la cron and being able to list the jobs in a particular state (and with the magic of Redis&#39;s  EVAL command,  searching within job payloads for text matching a query).\n      The evolution of the job queue continues. This change updates the interface over enqueueing/dequeueing jobs to target Postgres instead of Redis. This reduces a lot of complexity. Both the lsif-server and lsif-worker no longer rely on Redis, which was used as an ephemeral and truncatable cache in all other parts of the application. All of the custom Lua scripts that reach into the data owned by Bull could be reduced into a few SQL statements.\n  Reducing the number of services in which mutations occur during a transaction is always a win. This change allowed us to re-use existing Postgres transactions for the job queue as well. It&#39;s no longer possible to commit a Postgres transaction on successful conversion yet fail to mark the job as resolved in the queue, as modifying the queue can now be done as part of the transaction.\n   At this point, the lsif-server was accessible only by an undocumented proxy in the frontend. This proxy was used to both accept upload payloads, and to query the definitions, references, and hover text of particular source ranges. The only consumers of this API were Sourcegraph-authored language extensions ( sourcegraph/go,  sourcegraph/typescript).\n  This data is much more useful than simply powering jump-to-def and is wasted behind an undocumented API. The change made the same data visible outside of the extension through the GraphQL API. This not only opened up queries to be used by other Sourcegraph features (such as  Campaigns and the currently in-progress Code Insights), but to Sourcegraph-external extension authors and to any user that wants to run ad-hoc queries. As the data we gather through LSIF indexes continues to grow (we&#39;ve recently added support for  diagnostics), so does the universe of possible uses. We&#39;re excited to discover what uses of this data lies ahead.\n   At this point, the lsif-server and lsif-worker were bundled within the  same container. We decided to  prefork the number of worker processes running in the container, increasing the number of uploads that could be processed at one time.\n This is a rudimentary way to scale horizontally, as the resources are still limited to the physical nodes and there is no isolation between workers: if one worker is processing a particular large upload, it can cause the other processes to run out of memory. All of the workers will crash at once and take the lsif-server process down with them.\n  At this point it was a reasonable tradeoff, and gave us some quick wins with increased processing throughput. This particular change also helped us get past some issues we were having in our  Sourcegraph.com deployment, which was suffering from  head-of-line blocking.\n   The plan, all along, was to scale the lsif-server and lsif-worker instances horizontally when necessary (the workers were likely needed to scale first as they do the most CPU and memory-intensive work). Unfortunately, I had misunderstood the capabilities of Kubernetes persistent volumes: I was assuming that the disk could be mounted as  RWX, or read-write-many, over multiple nodes. As it turns out, this access mode is only supported by a few volume plugins (Azure, CephFS, Glusterfs, and NFS to name a few). The GCEPersistentDisk plugin, which we use for our  Sourcegraph.com deployment, does not support this access mode.\n  Our path forward was to add  another level of indirection, which is honestly the solution to  most problems. This change introduces a new lsif-dump-manager, known today as the precise-code-intel-bundle-manager, the service that owns the persistent disk.\n  This frees any responsibility of reading or writing to the disk from the lsif-server and the lsif-worker, making them free to scale horizontally and statelessly. Scaling the dump managers themselves is a different problem, but one we have some experience with already due to the sharded nature of our gitservers.\n    At this point, the code nav team had been split into the web and code intel for some time. After a few changes in the code intel team&#39;s membership, we gained a  lot of Go talent and lost a bit of TypeScript talent. We no longer had the same core competencies, and it made sense from both an organizational and architectural standpoint to rewrite the existing TypeScript backend code in order to unify it with the greater Sourcegraph codebase.\n We decided to  slowly rewrite each of the services into Go. Our high-level plan was to first extract the CPU-bound work done by the lsif-server into a high-performance Go process which could be called by the existing worker code (this is similar to the  strangler fig pattern of refactoring). This part of the stack seemed to benefit the most from a rewrite, and allowed us to use existing knowledge to aggressively optimize Go rather than having to learn low-level optimization techniques for Node.js environments. Eventually, more and more of the worker would fall into the Go code&#39;s event horizon, and eventually the entire worker would be replaced.\n  Turns out it&#39;s pretty easy to write the same system in a language you know well after fixing all the bugs in a different language, and I just rewrote all three services in a single pass. The resulting code wasn&#39;t particularly idiomatic as it really was meant to be a fast, behaviorally-equivalent translation into the target language. Constant, small refactorings have been occurring since the rewrite in order to shape the code into something more appropriate for the new environment.\n This has unlocked a large number of performance improvement opportunities, the results of which will be detailed in the Sourcegraph 3.17 release announcement. The technical details are described in a blog post on  performance improvements for precise code intel.\n    After rewriting the services in Go, the lsif-server process maintained no local state, and queries to it no longer crossed a language boundary. There was little reason to keep the service separate. The client used by the frontend&#39;s HTTP API and GraphQL resolvers was able to directly perform the same functions as the old server&#39;s HTTP handlers, and the newly unused HTTP server/routing code could be dropped.\n  This change is discussed in more detail in the above mentioned blog post on  performance improvements for precise code intel.\n  The journey is not stopping here. We plan to continue to add features, and adjust the service so that we can support massive scale. Concerns on our horizon include (but are not limited to):\n The creation of a large-scale public index (to support jumping from private code to OSS)", "posttime": "2020-06-20 03:56:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u82f1\u7279\u5c14,precise", "title": "\u7cbe\u786e\u4ee3\u7801\u82f1\u7279\u5c14\u540e\u7aef\u7684\u53d1\u5c55", "title_en": "Evolution of the precise code intel back end", "transed": 1, "url": "https://about.sourcegraph.com/blog/evolution-of-the-precise-code-intel-backend", "via": "", "real_tags": ["\u4ee3\u7801", "\u82f1\u7279\u5c14", "precise"]}, {"category": "", "categoryclass": "", "imagename": "022ae1f163e3837faf7572f4d1b4761b.png", "infoid": 1007308, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5df2\u7ecf\u5feb4\u5e74\u4e86\u3002\u4ed6\u4eec\u67094\u5e74\u4e86\uff01\u6211\u4eec\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u6211\u5f88\u75b2\u60eb\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u5f88\u9ad8\u5174\uff0c\u6211\u5f88\u611f\u6fc0\uff0c\u6211\u5f88\u6709\u5e0c\u671b\u3002\nGHC\u5411\u7ebf\u578b\u7684\u65c5\u7a0b\u59cb\u4e8e2016\u5e74\u79cb\u5929\u3002\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u4e0a\uff0cJean-Philippe Bernardy\u548c\u6211\u4ece\u4e8b\u5206\u5e03\u5f0f\u5b58\u50a8\u7814\u53d1\u5df2\u7ecf\u6709\u4e00\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u4e86\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u4e24\u4eba\u90fd\u521a\u521a\u53d1\u8868\u4e86\u5bf9\u7ebf\u6027\u903b\u8f91\u7684\u7814\u7a76\u3002\u800c\u4e14\uff0c\u6211\u4eec\u5f00\u59cb\u5728\u5f88\u591a\u5730\u65b9\u770b\u5230\u7ebf\u6027\u7c7b\u578b\u7684\u673a\u4f1a\uff1a\u5bf9\u4e8e\u5185\u5b58\u7ba1\u7406\uff0c\u4e3a\u4e86\u6982\u62ec\u534f\u8bae\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ba1\u7406\u7f13\u51b2\u533a\u2026\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u5b83\u6210\u4e86\u4e00\u4e2a\u53cd\u590d\u51fa\u73b0\u7684\u7b11\u8bdd\uff1a\u201c\u4f60\u77e5\u9053\u600e\u4e48\u505a\u624d\u80fd\u5e2e\u4e0a\u5fd9\u5417\uff1f\u201d\u7ebf\u6027\u7c7b\u578b\uff01\u201c\u3002\n\u6211\u731c\uff0c\u5728\u91cd\u590d\u4e86\u8db3\u591f\u591a\u7684\u7b11\u8bdd\u4e4b\u540e\uff0c\u4f60\u4f1a\u5f00\u59cb\u60f3\uff0c\u4e5f\u8bb8\u5b83\u4e0d\u5e94\u8be5\u662f\u4e00\u4e2a\u7b11\u8bdd\u3002\u4e5f\u8bb8\u7ebf\u578b\u771f\u7684\u4f1a\u6709\u5e2e\u52a9\u3002\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u7ed9\u90a3\u5934\u7266\u725b\u522e\u80e1\u5b50\u3002\n\u4e0d\u8fc7\uff0c\u8001\u5b9e\u8bf4\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6211\u771f\u7684\u8ba4\u4e3a\u8981\u5c06\u7ebf\u6027\u7c7b\u578b\u6dfb\u52a0\u5230\u4e00\u79cd\u8bed\u8a00\u4e2d\uff0c\u60a8\u9700\u8981\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u8bbe\u8ba1\u5b83\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u771f\u6b63\u521b\u9020\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u8a00\u3002\u4f46\u662f\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u8ba9-\u83f2\u5229\u666e\u77e5\u9053\u5f97\u66f4\u6e05\u695a\u3002\u4ed6\u60f3\u51fa\u4e86\u4e00\u4e2a\u4ee4\u4eba\u4fe1\u670d\u7684\u8bbe\u8ba1\uff0c\u5c06\u7ebf\u6027\u7c7b\u578b\u6dfb\u52a0\u5230GHC\u4e2d\u3002\u6211\u5f53\u65f6\u5728\u8239\u4e0a\u3002\n2016\u5e74\u79cb\u5929\uff0c\u6211\u548c\u540c\u4e8b\u9a6c\u4fee\u00b7\u535a\u65af\u666e\u5f17\u5362\u683c(Mathieu Boespflug)\u96c6\u601d\u5e7f\u76ca\uff0c\u7528\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u5b8c\u5584\u4e86\u6211\u4eec\u7684\u8bbe\u8ba1\u3002\u51ac\u5929\uff0c\u897f\u8499\u00b7\u4f69\u987f\u00b7\u743c\u65af(Simon Peyton Jones)\u548c\u745e\u5b89\u00b7\u725b\u987f(Ryan Newton)\u52a0\u5165\u4e86\u6211\u4eec\u7684\u884c\u5217\uff0c\u52aa\u529b\u5c06\u6211\u4eec\u4ecd\u7136\u76f8\u5f53\u7c97\u7cd9\u7684\u60f3\u6cd5\u8f6c\u5316\u4e3a\u8db3\u591f\u575a\u5b9e\u7684\u8bbe\u8ba1\uff0c\u8db3\u4ee5\u4fdd\u8bc1\u53d1\u8868\u5b66\u672f\u8bba\u6587\u3002\u52302017\u5e74\u79cb\u5929\uff0c\u6211\u4eec\u7684\u6587\u7ae0\u5728POPL2018\u4e0a\u88ab\u63a5\u53d7\u53d1\u8868\uff0c\u5e76\u4f34\u968f\u7740\u539f\u578b\u5b9e\u65bd\u3002\n\u539f\u578b\u673a\u53ea\u4fee\u6539\u4e86GHC\u7684\u524d\u7aef\uff0c\u8fd8\u6ca1\u6709\u63a5\u89e6\u5230Coreet\u3002\u7136\u800c\uff0c\u6211\u4eec\u6709\u8db3\u591f\u7684\u4fe1\u5fc3\u57282017\u5e7411\u6708\u7f16\u5199\u4e86\u4e00\u4efd\u7528\u7ebf\u6027\u7c7b\u578b\u6269\u5c55GHC\u7684\u63d0\u6848\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e09\u5468\u91cc\uff0c\u8fd9\u9879\u63d0\u8bae\u5438\u5f15\u4e86200\u6761\u8bc4\u8bba\u3002\u6211\u4eec\u6700\u7ec8\u5173\u95ed\u4e86\u63d0\u6848\u516c\u5173\u8fdb\u884c\u5927\u4fee\u3002\u7531\u4e8e200\u6761\u8bc4\u8bba\u5728\u5f53\u65f6\u542c\u8d77\u6765\u592a\u591a\u4e86\uff0c\u6211\u4eec\u9009\u62e9\u57282018\u5e742\u6708\u4ee5\u4ee4\u4eba\u96be\u5fd8\u7684\u6570\u5b57111\u4f5c\u4e3a\u5355\u72ec\u7684\u516c\u5173\u91cd\u65b0\u542f\u52a8\u8be5\u63d0\u6848\u3002\u8be5\u63d0\u6848\u7684\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u4e8e2018\u5e7410\u6708\u88ab\u63a5\u53d7\u3002\u8be5\u63d0\u6848\u603b\u5171\u6536\u96c6\u4e86\u8fd1600\u6761\u8bc4\u8bba\uff0c\u4ec5\u53ef\u4e0e\u521b\u7eaa\u5f55\u7684\u70b9\u53e5\u6cd5\u63d0\u6848\u76f8\u5ab2\u7f8e\u3002\u591a\u68d2\u7684\u4e00\u6b21\u65c5\u884c\u554a\uff01\n\u5728\u5bf9\u8fd9\u9879\u5efa\u8bae\u8fdb\u884c\u6fc0\u70c8\u8fa9\u8bba\u7684\u540c\u65f6\uff0c\u6211\u4eec\u7ee7\u7eed\u5b9e\u65bd\u3002\u5b9e\u73b0\u4e0d\u4f1a\u8bf4\u8c0e\uff1a\u6211\u4eec\u5f00\u59cb\u5b83\u662f\u4e3a\u4e86\u627e\u51fa\u6211\u4eec\u5728\u8bbe\u8ba1\u4e2d\u53ef\u80fd\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\u786e\u5b9e\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e9b\u6f0f\u6d1e\u3002Matthew Pickering\u4ece2018\u5e744\u6708\u52307\u6708\u4f5c\u4e3a\u5b9e\u4e60\u7684\u4e00\u90e8\u5206\u52a0\u5165\u6211\u4eec\uff0c\u4ed6\u627f\u62c5\u4e86\u5728Core\u5185\u90e8\u5b9e\u73b0\u7b2c\u4e00\u4e2a\u7ebf\u6027\u7c7b\u578b\u7684\u8d39\u529b\u7684\u4efb\u52a1\u3002\u4ec5\u8ba9GHC\u4e8c\u6b21\u7f16\u8bd1\u5c31\u82b1\u4e86\u5927\u7ea6\u4e24\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0cMatthew\u53d1\u73b0\u4e86\u6211\u4eec\u7684\u5411\u540e\u517c\u5bb9\u6027\u6545\u4e8b\u4e2d\u7684\u9519\u8bef\u3002\u6240\u4ee5\u6211\u4eec\u66f4\u65b0\u4e86\u6211\u4eec\u7684\u8bbe\u8ba1\u548c\u63d0\u6848\u3002\n2018\u5e7410\u6708\uff0c\u6211\u7684\u540c\u4e8bKrzysztof Gogolewski\u52a0\u5165\u4e86\u8fd9\u4e2a\u9879\u76ee\u3002\u800c\u4e14\uff0c\u4e3a\u4e86\u8ba9\u4eba\u4eec\u4e86\u89e3\u7ebf\u578b\u7684\u5de5\u4f5c\u6709\u65f6\u4f1a\u6709\u591a\u4e48\u5e73\u6de1\u65e0\u5947\uff0c\u6211\u4eec\u7ee7\u7eed\u5c06\u7ebf\u578b\u7684\u5f53\u524d\u72b6\u6001\u4e0eGHC\u7684\u5927\u5e08\u8fdb\u884c\u4e86\u5408\u5e76\u3002\u4e00\u9879\u9700\u8981\u4e24\u5468\u4ee5\u4e0a\u7684\u5168\u804c\u5de5\u4f5c\u7684\u4efb\u52a1\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0cKrzyszto\u575a\u6301\u4e0d\u61c8\u5730\u7c89\u788e\u4e86\u63d0\u6848\u4e2d\u5269\u4f59\u7684\u7f3a\u9677\u548c\u4e0d\u8db3\u4e4b\u5904\u3002\n\u4e3a\u4ec0\u4e48\u662f\u4e00\u5e74\uff1f\u55ef\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u65e0\u8f9c\u7684\u8bbe\u8ba1\u9009\u62e9\uff1a\u6269\u5c55\ud835\udf02\u7684\u6570\u636e\u6784\u5efa\u5668\uff0c\u6700\u7ec8\u6210\u4e3a\u4e86\u4e00\u9879\u5de8\u5927\u7684\u4e8b\u4e1a\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u4e0eGHC\u4e2d\u771f\u6b63\u7684\u9519\u8bef\u4f5c\u6597\u4e89\uff0c\u6216\u8005\u53ea\u662f\u4ee3\u7801\u4e2d\u9690\u542b\u7684\u3001\u65e0\u610f\u8bc6\u7684\u5047\u8bbe\uff0c\u8fd9\u4e9b\u5047\u8bbe\u9700\u8981\u76f8\u5f53\u591a\u7684\u5de5\u4f5c\u624d\u80fd\u89e3\u5f00\u3002\n\u90a3\u662f2019\u5e74\u7684\u590f\u5929\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u6216\u8005\u8bf4\u6211\u4eec\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684\u3002\u4eca\u5e74\u79cb\u5929\uff0c\u897f\u8499\u00b7\u4f69\u987f\u00b7\u743c\u65af(Simon Peyton Jones)\u548c\u7406\u67e5\u5fb7\u00b7\u827e\u68ee\u4f2f\u683c(Richard Eisenberg)\u5c06\u5728\u5251\u6865\u53c2\u52a0\u4e00\u4e2a\u96c6\u4e2d\u5ba1\u67e5\u4f1a\u8bae\u3002\u53d1\u73b0\u4e86\u4e00\u4e9b\u5c0f\u6545\u969c\u3002\u5728\u8fd9\u4e2a\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u751f\u4e86\u5f88\u591a\u7814\u7a76\uff1a\u5411Core\u4f20\u6388\u7ebf\u6027\u7c7b\u578b\u5e76\u4e0d\u50cf\u4ec5\u4ec5\u5b9e\u73b0\u7ebf\u6027\u903b\u8f91\u90a3\u4e48\u7b80\u5355\uff0c\u751a\u81f3\u4e0d\u50cf\u6211\u4eec\u6587\u7ae0\u4e2d\u7684\u5fae\u79ef\u5206\u90a3\u6837\u7b80\u5355\uff0c\u4f46\u8fd9\u662f\u53e6\u4e00\u4e2a\u65f6\u4ee3\u7684\u6545\u4e8b\u3002\u6211\u4eec\u5fc5\u987b\u5728\u73b0\u573a\u505a\u66f4\u591a\u7684\u8c03\u67e5\u3002\n\u6211\u4eec\u57282020\u5e741\u6708\u4e4b\u524d\u89e3\u51b3\u4e86\u8fd9\u4e9b\u6545\u969c\u3002\u4eca\u5e74\u5269\u4e0b\u7684\u65f6\u95f4\u4e00\u76f4\u4e13\u6ce8\u4e8e\u72e9\u730e\u8868\u73b0\u7684\u56de\u5f52\u3002\n\u8ba9\u6211\u786e\u4fe1\u4e0d\u4f1a\u5fd8\u8bb0\u7406\u67e5\u5fb7\u00b7\u827e\u68ee\u4f2f\u683c\u5728\u8fd9\u4e00\u5207\u4e2d\u6240\u626e\u6f14\u7684\u89d2\u8272\u3002\u7406\u67e5\u5fb7\u5f15\u9886\u4e86\u8fd9\u9879\u63d0\u8bae\uff0c\u5ba1\u9605\u4e86\u6574\u4e2a3000\u6761\u7ebf\u8def\u677f(\u597d\u51e0\u6b21\uff01)\uff0c\u5f15\u5bfc\u4e86\u5408\u5e76\uff0c\u5e76\u5728\u6027\u80fd\u4e0a\u63d0\u4f9b\u4e86\u81f3\u5173\u91cd\u8981\u7684\u5e2e\u52a9\u3002\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u4e00\u9879\u5351\u9119\u7684\u4efb\u52a1\uff01\n\u7279\u522b\u611f\u8c22Andreas Klebinger\uff0c\u4ed6\u5bf9\u7ebf\u6027\u7c7b\u578b\u5206\u652f\u8fdb\u884c\u4e86\u51e0\u6b21\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4ee5\u5e2e\u52a9\u786e\u5b9a\u6027\u80fd\u56de\u5f52\uff1b\u611f\u8c22Ben Gamari\uff0c\u4ed6\u8fd0\u884c\u5e76\u5206\u6790\u4e86\u7ebf\u6027\u7c7b\u578b\u8865\u4e01\u4e0a\u76848h\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u73b0\u5728\u6211\u4eec\u5230\u4e86\u30024\u5e74\u6765\uff0c\u5728GHC\u4e2d\u53d1\u73b0\u4e86\u8fd130\u4e2a\u9519\u8bef(\u5927\u591a\u6570\u662f\u6211\u4eec\u81ea\u5df1\u4fee\u590d\u7684)1\uff0c\u4e4b\u540e\u53c8\u53d1\u73b0\u4e86200\u591a\u4e2a\u5185\u90e8\u62c9\u53d6\u8bf7\u6c42\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u9879\u96c6\u4f53\u5de5\u4f5c\uff0c\u6211\u975e\u5e38\u611f\u8c22\u53c2\u4e0e\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4eba\u3002\n\u5728GHC 8.12\u4e2d\u5c06\u6709\u7ebf\u6027\u7c7b\u578b\u3002\u4f46\u522b\u6307\u671b\u4f1a\u6709\u6210\u54c1\u3002\u8fd9\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u53ef\u4ee5\u8bf4\u662fMVP\u3002\u8fd9\u662f\u6211\u4eec\u8ba4\u4e3a\u5bf9\u4efb\u4f55\u4eba\u90fd\u6709\u7528\u7684\u6700\u5c0f\u529f\u80fd\u96c6\u3002\u4f46\u5b83\u4ecd\u7136\u4e3b\u8981\u9488\u5bf9\u65e9\u671f\u91c7\u7528\u8005\u548c\u6025\u4e8e\u4fee\u4fee\u8865\u8865\u7684\u4eba\u3002\n\u6253\u5f00-XLinearTypes\uff0c\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\uff0c\u9519\u8bef\u6d88\u606f\u901a\u5e38\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\uff1a\u60a8\u4f1a\u6536\u5230\u952e\u5165\u9519\u8bef\uff0c\u544a\u8bc9\u60a8\u627f\u8bfa\u7ebf\u6027\u4f7f\u7528\u53d8\u91cf\uff0c\u4f46\u6ca1\u6709\u4f7f\u7528\u3002\u5b83\u662f\u5982\u4f55\u7ebf\u6027\u4f7f\u7528\u7684\uff1f\u55ef\uff0c\u8fd9\u662f\u7ed9\u4f60\u559d\u7684\u3002\u867d\u7136\u6709\u65f6\u51fa\u9519\u7684\u5730\u65b9\u975e\u5e38\u660e\u663e\uff0c\u4f46\u8981\u627e\u51fa\u9519\u8bef\u5f80\u5f80\u662f\u5f88\u68d8\u624b\u7684\u3002\n\u6ca1\u6709\u591a\u6001\u7684\u4e2d\u7f00\u8bed\u6cd5\u3002\u60a8\u53ef\u4ee5\u5c06\u524d\u7f00\u5f62\u5f0fFun p a b\u7528\u4e8e\u591a\u6001\u4e3ap\u7684\u7bad\u5934\u3002\u4f46\u662f\uff1a\n\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u652f\u6301\u591a\u6001\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u9884\u671f\u5927\u591a\u6570\u65f6\u95f4\u90fd\u4f1a\u51fa\u73b0\u884c\u4e3a\u4e0d\u6b63\u5e38\u7684\u60c5\u51b5\u3002\n\u6211\u7684\u540c\u4e8bDivesh Otwani\u53d1\u73b0\u4e86\u4e00\u4e2a\u7a8d\u95e8\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u7528\u3002\n\u5f53\u7136\uff0c\u4e5f\u4f1a\u6709\u9519\u8bef\u3002\u53ef\u80fd\u5f88\u591a\u3002\u6211\u4eec\u5c06\u5f88\u9ad8\u5174\u6536\u5230\u60a8\u5173\u4e8eGHC\u9519\u8bef\u8ddf\u8e2a\u5668\u7684\u9519\u8bef\u62a5\u544a\u3002\n\u5f53GHC8.12\u53d1\u5e03\u65f6\uff0c\u6211\u4eec\u5c06\u53d1\u5e03LINEAR-BASE\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e2e\u52a9\u60a8\u5f00\u59cb\u4f7f\u7528\u7ebf\u6027\u7c7b\u578b\u7684\u5de5\u5177\u5305\u3002\u5b83\u5305\u542b\u6765\u81eaHaskell\u57fa\u672c\u5e93\u7684\u8bb8\u591a\u51fd\u6570\u7684\u7ebf\u6027\u5316\u7248\u672c\u3001\u4e24\u79cd\u51fd\u6570\u3001\u5e26\u7eafAPI\u7684\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u3001\u7528\u4e8e\u5b89\u5168\u8d44\u6e90\u7ba1\u7406\u7684\u5355\u503c\u3001\u7ebf\u6027\u5149\u5b66\u3001\u7528\u4e8e\u514d\u5206\u914d\u9635\u5217\u7ba1\u7ebf\u7684API\u3001\u2026\u3002\n\u7ebf\u6027\u57fa\u5e93\u76ee\u524d\u7531\u6211\u7684\u540c\u4e8bDiveshOtwani\u5f00\u53d1\uff0c\u4e4b\u524d\u7531Bhavik Mehta\u5728Tweag\u6691\u671f\u5b9e\u4e60\u671f\u95f4\u5f00\u53d1\u3002\n\u663e\u7136\uff0c\u8981\u4f7fGHC\u4e2d\u7684\u7ebf\u578b\u4f53\u9a8c\u6d41\u7545\uff0c\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u5b8c\u6210\u63d0\u6848\u7684\u8bbe\u8ba1\uff0c\u800c\u4e14\u5f88\u53ef\u80fd\u8d85\u51fa\u63d0\u6848\u7684\u8303\u56f4\u3002\n\u4f46\u63a5\u4e0b\u6765\u6700\u91cd\u8981\u7684\u662f\u4f60\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7ebf\u6027\u6253\u5b57\u4e3b\u8981\u662f\u4e13\u5bb6\u7684\u8bfe\u9898\uff0c\u4ed6\u4eec\u786e\u5b9e\u63d0\u51fa\u4e86\u8bb8\u591a\u5e94\u7528\u3002\u4f46\u662f\uff0c\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u53d1\u73b0\u8fd9\u4e2a\u4f01\u4e1a\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u5c06\u7ebf\u6027\u7c7b\u578b\u6dfb\u52a0\u5230\u4e3b\u6d41\u7f16\u8bd1\u5668\u4e2d\uff0c\u53ef\u4ee5\u8ba9\u66f4\u591a\u7684\u4eba\u4f7f\u7528\u5b83\u4eec\u3002\u5c3d\u7ba1\u4e13\u5bb6\u4eec\u5f88\u806a\u660e\uff0c\u4f46\u4ed6\u4eec\u65e0\u6cd5\u4e0e\u8bb8\u591a\u500d\u4e8e\u914d\u5907\u7c7b\u578b\u68c0\u67e5\u5668\u7684\u7a0b\u5e8f\u5458\u76f8\u5339\u654c\u3002\u751a\u81f3\u4e0d\u662f\u5f88\u63a5\u8fd1\u3002\n\u6240\u4ee5\u4e00\u5b9a\u8981\u73a9\u800d\uff0c\u4fee\u8865\uff0c\u5b9e\u9a8c\uff0c\u60f3\u51fa\u70b9\u5b50\uff0c\u5efa\u7acb\u56fe\u4e66\u9986\u3002\u8fd9\u4e00\u5207\u90fd\u5c06\u975e\u5e38\u4ee4\u4eba\u7740\u8ff7\u3002\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u7ebf\u6027\u57fa\u7840\uff0c\u8ba9\u60a8\u5f00\u59cb\uff0c\u4f46\u4e5f\u8bb8\u5b83\u4e0d\u9002\u5408\u60a8\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u5efa\u7acb\u81ea\u5df1\u7684\u4e1c\u897f\u3002\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u8bbe\u8ba1\u7a7a\u95f4\u53ef\u4f9b\u63a2\u7d22\u3002\u4e00\u5207\u90fd\u5728\u6211\u4eec\u9762\u524d\u3002\u6211\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u770b\u770b\u54c8\u65af\u514b\u5c14\u793e\u533a\u4f1a\u62ff\u51fa\u4ec0\u4e48\u6765\u3002", "note_en": "It\u2019s been almost 4 years. And what 4 years they were! We learned somuch. I am exhausted, but mostly, I\u2019m happy, I\u2019m thankful, and I\u2019mhopeful.\n   The journey towards linear types in GHC started in the fallof 2016. At this point in time, Jean-Philippe Bernardy and I had beenworking on distributed storage R&amp;D for a year or so. Prior to that wehad both fairly freshly published research into linear logic. And, westarted seeing opportunities for linear types pretty mucheverywhere: for memory management, to generalise protocol types, tomanage buffers\u2026 It had become a recurring joke in this project: \u201cYouknow what would help with this? Linear types!\u201d.\n I guess that after repeating a joke enough, you start wonderingwhether maybe it shouldn\u2019t be a joke. Maybe linear types would reallybe helpful. Why not after all? And so we decided to  shave thatyak.\n I\u2019ll be honest though: I didn\u2019t think it was possible. I reallythought that to add linear types to a language, you would need toredesign it from the ground up. That is, really create a newlanguage. But, fortunately, Jean-Philippe knew better. He came up witha convincing design to add linear types to GHC. I was on board.\n In the fall of 2016, together with my colleague Mathieu Boespflug, webrainstormed for a couple of months, refined our design. In thewinter, we were joined by Simon Peyton Jones and Ryan Newton, in theeffort of turning our idea, still quite rough, into a design solidenough to warrant an academic publication. By the fall of 2017, our article was accepted for publication at  POPL2018 and accompanied by a prototype implementation.\n  The prototype only modified the front end of GHC and didn\u2019t touch Coreyet. Yet we felt confident enough to write a  proposal for extendingGHC with linear types in November 2017. Overthe course of the three following weeks, this proposal attracted 200comments. We eventually closed the proposal PR for heavyrevision. Because 200 comments sounded so massive at the time, weelected to reopen the proposal  as a separate PR,with the memorable number 111, in February 2018. This second iterationof the proposal was accepted  in October2018. Altogether, the proposal has gathered almost600 comments, comparable only to the  record dot-syntaxproposal. What a ride!\n While the proposal was being hotly debated, we carried on with theimplementation. An implementation doesn\u2019t lie: we started it to find outwhat we might have missed in our design. And, indeed, wefound some holes in the design. Matthew Pickering joined us from Aprilto July 2018 as part of an internship.He undertook the frankly thankless task of making thefirst implementation of linear types inside Core. Just making GHCcompile again took about 2 months. In the process, Matthew  foundbugs in our backward compatibility story. And sowe updated our design, and the proposal.\n  In October 2018, my colleague Krzysztof Gogolewski joined theproject. And, to give an idea of how unglamorous working on lineartypes could be at times, proceeded to merge the current state oflinear types with GHC\u2019s master. A task which took upwards of two weeksof full-time work. Over the course of the next year, Krzysztofrelentlessly squashed the remaining bugs and infelicities to theproposal.\n Why a year? Well, it turns out that one innocent looking designchoice:  \ud835\udf02-expanding data constructors, ended up beinga massive undertaking. We have had to fight  bona fide bugs in GHC,or simply implicit, unconscious, assumptions in the code whichrequired quite a bit of work to unravel.\n It was the summer of 2019, and we were ready, or so we thought. Wearranged for a focused review session in the Fall, in Cambridge, withSimon Peyton Jones and Richard Eisenberg. And glitches were found. Inthe course of this implementation, a lot of research had happened: itturns out that teaching linear types to Core is not as simple as justimplementing linear logic, or even the calculus from our article, but this is a story for another time. We hadto do more research on the spot.\n We addressed the glitches by January 2020. The rest of the year hasbeen focused on hunting performance regressions.\n Let me be sure not to forget Richard Eisenberg\u2019s role in allthis. Richard shepherded the proposal, reviewed the entire 3000 linepatch (several times!), shepherded the merge, and helped out cruciallywith performance. No mean task to be sure!\n Special thanks go to Andreas Klebinger, who benchmarked the lineartypes branch several times to help pinpoint the performanceregression, and to Ben Gamari, who ran and analysed an  8hbenchmark on the linear types patch.\n And here we are. 4 years, nearly 30 bugs found in GHC (most we fixedourselves)  1, and over 200 internal pull requests later. Thisis very much a collective work, and I\u2019m hugely thankful to everyoneinvolved.\n   There will be linear types in GHC 8.12. But don\u2019t expect a finishedproduct. This is our very first iteration, an  MVP as itwere. This is as minimal a set of features we think can be useful foranybody. But it\u2019s still very much aimed at early adopters and eagertinkerers.\n Turn on  -XLinearTypes, and the first thing you will notice,probably, is that the error messages are typically unhelpful: you willget typing errors saying that you promised to use a variable linearly,but didn\u2019t. How hasn\u2019t it been used linearly? Well, it\u2019s for you topuzzle out. And while what went wrong is sometimes egregiouslyobvious, it can often be tricky to figure the mistake out.\n  There is no infix syntax for multiplicity polymorphism.You can use the prefix form  FUN p a b for an arrow withmultiplicity  p. However:\n Multiplicity polymorphism is mostly unsupported, and you can expectit to misbehave most of the time.\n   A trick, found by my colleague Divesh Otwani, which you can use to work aroundthis is to replace\n  And, of course, there will be bugs. Probably many. We will be happy toreceive your bug reports on the  GHC bug tracker.\n  When GHC 8.12 is released, we will release the first version of linear-base, a toolkit to get you started with linear types. Itcontains linearised versions of many functions from the Haskell baselibrary,  two kinds of functors,  mutable datastructures with pureAPI,a  monad for safe management ofresources, linearoptics,an API for  allocation-free arraypipelines,\u2026\n The linear-base library is currently being developed by my colleague DiveshOtwani, and previously by Bhavik Mehta, during his summer internshipat Tweag.\n  Evidently, we still have a lot of work ahead of us to make lineartypes in GHC a smooth experience. Completing the design of theproposal, and, probably, going beyond the proposal.\n But what\u2019s next, above all, is you. Until now, linear typing has beenmostly a subject for experts, who did propose many applications. Butwhat I, personally, find most exciting about this enterprise is thatadding linear types to a mainstream compiler makes them available tomany more people. And as clever as the experts are, they are no matchagainst many times more programmers armed with a type checker. Noteven close.\n So by all means, play, tinker, experiment, come up with ideas, buildlibraries. This will all be extremely fascinating. We provide you withlinear-base to get you started, but maybe it\u2019s not the right thingfor you, and then you can build your own. There is a huge design space toexplore. It\u2019s all ahead of us. And I, for one, can\u2019t wait to see whatthe Haskell community comes up with.", "posttime": "2020-06-20 03:55:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7c7b\u578b,types,\u7ebf\u6027", "title": "\u7ebf\u6027\u7c7b\u578b\u5728GHC\u4e2d\u5408\u5e76", "title_en": "Linear types are merged in GHC", "transed": 1, "url": "https://www.tweag.io/blog/2020-06-19-linear-types-merged", "via": "", "real_tags": ["\u7c7b\u578b", "types", "\u7ebf\u6027"]}, {"category": "", "categoryclass": "", "imagename": "bf79c89b167a493b5d4bcbd9cde14b7f.png", "infoid": 1007307, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u53f0\u5fb7\u4fc4\u5408\u4f5c\u7684\u592a\u7a7a\u671b\u8fdc\u955c\u521a\u521a\u83b7\u5f97\u4e86\u4e00\u5f20\u7528X\u5c04\u7ebf\u8ffd\u8e2a\u5929\u7a7a\u7684\u7a81\u7834\u6027\u5730\u56fe\u3002\n\u8fd9\u5f20\u56fe\u50cf\u8bb0\u5f55\u4e86\u5b87\u5b99\u4e2d\u5927\u91cf\u7684\u66b4\u529b\u884c\u4e3a-\u7269\u8d28\u88ab\u52a0\u901f\u3001\u52a0\u70ed\u548c\u7c89\u788e\u7684\u60c5\u51b5\u3002\n\u8fd9\u67b6\u8f68\u9053\u671b\u8fdc\u955c\u4e8e\u53bb\u5e747\u6708\u53d1\u5c04\u5347\u7a7a\uff0c\u53d1\u5c04\u5230\u8ddd\u79bb\u5730\u7403\u7ea6150\u4e07\u516c\u91cc\u7684\u89c2\u6d4b\u4f4d\u7f6e\u3002\u4e00\u65e6\u572812\u6708\u6295\u5165\u4f7f\u7528\u5e76\u5ba3\u5e03\u5168\u9762\u6295\u5165\u4f7f\u7528\uff0c\u5b83\u5c31\u53ea\u80fd\u7f13\u6162\u65cb\u8f6c\u5e76\u626b\u63cf\u592a\u7a7a\u6df1\u5904\u3002\neROSITA\u7684\u7b2c\u4e00\u4e2a\u5168\u5929\u6570\u636e\u96c6\uff0c\u5982\u672c\u9875\u9876\u90e8\u7684\u56fe\u50cf\u6240\u793a\uff0c\u4e0a\u5468\u624d\u5b8c\u6210\u3002\u5b83\u8bb0\u5f55\u4e86\u8d85\u8fc7\u4e00\u767e\u4e07\u4e2aX\u5c04\u7ebf\u6e90\u3002\n\u8fd9\u4e2a\u6570\u5b57\u5b9e\u9645\u4e0a\u4e0e60\u5e74\u524d\u6574\u4e2aX\u5c04\u7ebf\u5929\u6587\u5b66\u5386\u53f2\u4e2d\u63a2\u6d4b\u5230\u7684\u6570\u5b57\u51e0\u4e4e\u76f8\u540c\u3002\u6211\u4eec\u57fa\u672c\u4e0a\u5728\u77ed\u77ed6\u4e2a\u6708\u5185\u5c31\u5c06\u5df2\u77e5\u6e90\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u4f4d\u4e8e\u5fb7\u56fd\u52a0\u94a6\u7684\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u5730\u5916\u7269\u7406\u7814\u7a76\u6240(MPE)\u9ad8\u80fd\u5929\u4f53\u7269\u7406\u5b66\u5c0f\u7ec4\u8d1f\u8d23\u4eba\u67ef\u5e15\u5c14\u00b7\u5357\u5fb7\u62c9\u8bf4\u3002\n\u4ed6\u5728\u63a5\u53d7BBC\u65b0\u95fb\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u8fd9\u4e9b\u6570\u636e\u786e\u5b9e\u4ee4\u4eba\u9707\u60ca\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u4e8b\u60c5\u5c06\u7ed9X\u5c04\u7ebf\u5929\u6587\u5b66\u5e26\u6765\u9769\u547d\u6027\u7684\u53d8\u5316\u3002\n\u8fd9\u5f20\u5730\u56fe\u4f7f\u7528\u4e86\u6240\u8c13\u7684\u827e\u6258\u592b\u6295\u5f71\uff0c\u5b83\u5c06\u5929\u7a7a\u7684\u7403\u4f53\u5c55\u5f00\u5230\u4e00\u4e2a\u692d\u5706\u4e0a\u3002\u4e2d\u95f4\u7684\u5e26\u662f\u6211\u4eec\u94f6\u6cb3\u7cfb\u7684\u5e73\u9762\uff0c\u661f\u7cfb\u7684\u4e2d\u5fc3\u5728\u692d\u5706\u7684\u4e2d\u95f4\u3002\n\u8fd9\u5e45\u56fe\u50cf\u5df2\u7ecf\u7528\u5f69\u8272\u7f16\u7801\uff0c\u4ee5\u5e2e\u52a9\u63cf\u8ff0\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u84dd\u8272\u4ee3\u8868\u9ad8\u80fdX\u5c04\u7ebf(1-2.3\u5343\u7535\u5b50\u4f0f\u7279\uff0ckev)\uff1b\u7eff\u8272\u4ee3\u8868\u4e2d\u7b49\u80fd\u91cf(0.6-1kev)\uff1b\u7ea2\u8272\u4ee3\u8868\u8f83\u4f4e\u80fd\u91cf(0.3-0.6kev)\u3002\n\u94f6\u6cb3\u7cfb\u5e73\u9762\u7684\u5927\u90e8\u5206\u662f\u7531\u9ad8\u80fd\u91cf\u6e90\u4e3b\u5bfc\u7684\u3002\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5927\u91cf\u7684\u6c14\u4f53\u548c\u5c18\u57c3\u5438\u6536\u5e76\u8fc7\u6ee4\u6389\u4e86\u8f83\u4f4e\u80fd\u91cf\u7684\u8f90\u5c04\u3002\u6765\u6e90\u5305\u62ec\u5177\u6709\u5f3a\u70c8\u7684\u3001\u78c1\u573a\u6d3b\u8dc3\u7684\u548c\u6781\u70ed\u7684\u5927\u6c14\u5c42\u7684\u6052\u661f\u3002\n\u7eff\u8272\u548c\u9ec4\u8272\u63cf\u7ed8\u4e86\u4e00\u79cd\u8611\u83c7\u7279\u5f81\uff0c\u8986\u76d6\u4e86\u5730\u56fe\u7684\u5927\u7247\u533a\u57df\uff0c\u4ee3\u8868\u4e86\u6211\u4eec\u94f6\u6cb3\u7cfb\u5185\u5916\u7684\u70ed\u6c14\u3002\u8fd9\u79cd\u7269\u8d28\u5370\u8bb0\u4e86\u6709\u5173\u94f6\u6cb3\u7cfb\u5f62\u6210\u548c\u6f14\u5316\u7684\u4fe1\u606f\u3002\n\u4e00\u4e9b\u8f83\u5927\u7684\u6c61\u70b9\u662f\u5929\u7a7a\u4e2d\u6709\u540d\u7684\u6f14\u5458\u3002\u98de\u673a\u6700\u53f3\u8fb9\u660e\u4eae\u7684\u9ec4\u8272\u6591\u5757\u662f\u8d85\u65b0\u661f\u6b8b\u9ab8\u7684\u96c6\u4e2d\u5730\uff0c\u8d85\u65b0\u661f\u6b8b\u9ab8\u662f\u5df2\u7ecf\u7206\u70b8\u7684\u6052\u661f\u7684\u6b8b\u9ab8\uff0c\u5176\u51b2\u51fb\u6ce2\u8fc7\u70ed\u4e86\u5468\u56f4\u7531\u5c18\u57c3\u548c\u6c14\u4f53\u7ec4\u6210\u7684\u8327\u3002\u8fd9\u7247\u7279\u6b8a\u7684\u533a\u57df\u4e3b\u8981\u662f\u8239\u5e06\u5ea7\u8d85\u65b0\u661f\u9057\u8ff9\u3002\u8fd9\u662f\u4e00\u6b21\u53d1\u751f\u5728\u51e0\u5343\u5e74\u524d\u7684\u7206\u70b8\uff0c\u4f46\u8ddd\u79bb\u5730\u7403\u53ea\u6709800\u5149\u5e74\u3002\n\u63a5\u4e0b\u6765\u770b\u770b\u8d34\u56fe\u9876\u90e8\u548c\u5e95\u90e8\u7684\u6f2b\u53cd\u5c04\u7ea2\u8272\u8f89\u5149\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u6211\u4eec\u94f6\u6cb3\u7cfb\u4ee5\u5916\u7684\u70ed\u6c14\u53d1\u51fa\u7684X\u5c04\u7ebf\u3002\u5728\u767d\u8272\u6591\u70b9\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u770b\u5230\u7684\u662f\u8d85\u5927\u8d28\u91cf\u9ed1\u6d1e\u7684\u7279\u5f81\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u65b0\u5730\u56fe\u4e2d\u5305\u542b\u7684\u6240\u6709\u6765\u6e90\u4e2d\uff0c\u7ea6\u670980%\u662f\u4f4d\u4e8e\u9065\u8fdc\u661f\u7cfb\u4e2d\u5fc3\u7684\u5de8\u5927\u9ed1\u6d1e\u3002\u5f53\u5b83\u4eec\u7684\u5de8\u5927\u5f15\u529b\u5438\u5f15\u5e76\u638f\u7a7a\u7269\u8d28\u65f6\uff0c\u5b83\u4eec\u4f1a\u55b7\u5c04\u51faX\u5c04\u7ebf\u3002\n\u4e00\u4e9b\u51fa\u73b0\u5728\u5730\u56fe\u4e0a\u7684\u8d85\u5927\u8d28\u91cf\u9ed1\u6d1e\u662f\u5728\u5b87\u5b99\u5e74\u9f84\u4e0d\u523010\u4ebf\u5c81\u65f6\u770b\u5230\u7684\uff0c\u4e0d\u5230\u73b0\u5728\u5e74\u9f84\u768410%\u3002\nSpektr-RG\u53ca\u5176eROSITA\u4eea\u5668\u6253\u7b97\u5728\u672a\u67653.5\u5e74\u5185\u518d\u6536\u96c67\u6b21\u5168\u5929\u89c2\u6d4b\u3002\u8fd9\u5c06\u4f7f\u671b\u8fdc\u955c\u80fd\u591f\u6539\u8fdb\u5b83\u7684\u6570\u636e\uff0c\u53bb\u9664\u4eba\u5de5\u5236\u54c1\u548c\u566a\u97f3\uff0c\u4f46\u4e5f\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u611f\u77e5\u5b87\u5b99\uff0c\u5e76\u63a5\u6536\u5230\u539f\u672c\u65e0\u6cd5\u68c0\u6d4b\u5230\u7684\u5fae\u5f31\u6765\u6e90\u3002\n\u4e00\u4e2a\u5173\u952e\u7684\u76ee\u6807\u662f\u7ed8\u5236\u7167\u4eae\u5927\u661f\u7cfb\u56e2\u7684\u70ed\u7684X\u5c04\u7ebf\u53d1\u5c04\u6c14\u4f53\u7684\u5206\u5e03\u56fe\u3002\n\u5929\u6587\u5b66\u5bb6\u5e0c\u671b\u8fd9\u4e9b\u4fe1\u606f\u80fd\u5f15\u5bfc\u4ed6\u4eec\u5bf9\u5b87\u5b99\u662f\u5982\u4f55\u7ed3\u6784\u7684\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5316\u7684\uff0c\u6709\u4e00\u4e9b\u65b0\u7684\u89c1\u89e3\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5173\u4e8e\u6697\u80fd\u91cf\u672c\u8d28\u7684\u7ebf\u7d22\uff0c\u8fd9\u79cd\u795e\u79d8\u7684\u529b\u91cf\u4f3c\u4e4e\u6b63\u5728\u4ee5\u8d8a\u6765\u8d8a\u5feb\u7684\u901f\u5ea6\u5c06\u5b87\u5b99\u63a8\u5411\u56db\u5206\u4e94\u88c2\u3002\n\u5357\u5fb7\u62c9\u6559\u6388\u89e3\u91ca\u8bf4\uff0c\u8fd9\u662f\u6700\u5927\u7684\u5956\u54c1\uff0c\u4f46\u53ea\u6709\u5728\u4efb\u52a1\u7ed3\u675f\u65f6\u624d\u4f1a\u51fa\u73b0\u3002\n\u516b\u9879\u8c03\u67e5\u4f7f\u6211\u4eec\u80fd\u591f\u771f\u6b63\u6df1\u5165\u9065\u8fdc\u7684\u5b87\u5b99\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u6b63\u5728\u8bd5\u56fe\u63a2\u6d4b\u5b87\u5b99\u4e2d\u8d85\u8fc7\u4e00\u5b9a\u8d28\u91cf\u6781\u9650\u7684\u6240\u6709\u661f\u7cfb\u56e2\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u4e0d\u9519\u7684\u6837\u54c1--\u53ef\u80fd\u572810,000\u4e2a\u5de6\u53f3\u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u81f3\u5c1110\u4e07\u4e2a\u661f\u7cfb\u56e2\u3002\neROSITA\u662fSpektr-RG\u4e0a\u7684\u5fb7\u56fd\u5143\u7d20\u3002\u5b83\u5360\u636e\u4e86\u5b87\u5b99\u98de\u8239\u5927\u5df4\u6216\u5e95\u76d8\u4e0a\u7684\u5927\u90e8\u5206\u7a7a\u95f4\u3002\u4f46\u5b83\u7d27\u6328\u7740\u4e00\u53f0\u540d\u4e3aART-XC\u7684\u4fc4\u7f57\u65af\u4eea\u5668\uff0c\u8be5\u4eea\u5668\u5bf9\u9ad8\u8fbe30keV\u7684\u66f4\u9ad8\u80fd\u91cf\u5f88\u654f\u611f\u3002\neROSITA\u548cART-XC\u90fd\u4f7f\u7528\u4e00\u4e2a\u7531\u4e03\u4e2a\u7ba1\u72b6\u53cd\u5c04\u955c\u6a21\u5757\u7ec4\u6210\u7684\u96c6\u7fa4\uff0c\u5c06X\u5c04\u7ebf\u5149\u805a\u96c6\u5230\u5b83\u4eec\u7075\u654f\u7684\u76f8\u673a\u63a2\u6d4b\u5668\u4e0a\u3002", "note_en": "A German-Russian space telescope has just acquired a breakthrough map of the sky that traces the heavens in X-rays.\n The image records a lot of the violent action in the cosmos - instances where matter is being accelerated, heated and shredded.\n    This orbiting telescope was launched in July last year and despatched to an observing position some 1.5 million km from Earth. Once commissioned and declared fully operational in December, it was left to slowly rotate and scan the depths of space.\n eRosita&#39;s first all-sky data-set, represented in the image at the top of this page, was completed only last week. It records over a million sources of X-rays.\n &#34;That&#39;s actually pretty much the same number as had been detected in the whole history of X-ray astronomy going back 60 years. We&#39;ve basically doubled the known sources in just six months,&#34; said Kirpal Nandra, who heads the high-energy astrophysics group at the Max Planck Institute for Extraterrestrial Physics (MPE) in Garching, Germany.\n &#34;The data is truly stunning and I think what we&#39;re doing here will revolutionise X-ray astronomy,&#34; he told BBC News.\n    The map uses the so-called Aitoff projection, which unwraps the sphere of the sky on to an ellipse. The band across the middle is the plane of our Milky Way Galaxy, with the centre of the galaxy in the middle of the ellipse.\n The image has been encoded with colour to help describe what&#39;s going on. Blues represent higher energy X-rays (1-2.3 kiloelectron volts, keV); greens are mid-range (0.6-1 keV); and reds are lower energy (0.3-0.6 keV).\n Much of the galaxy&#39;s plane is dominated by highly energetic sources. In part, that&#39;s because copious amounts of gas and dust have absorbed and filtered out the lower energy radiation. Sources include stars with strong, magnetically active and extremely hot atmospheres.\n The greens and yellows that draw a kind of mushroom feature covering a great swathe of the map represent hot gas inside and just outside our galaxy. This material imprints information about the formation and evolution of the Milky Way.\n Some of the bigger splodges are well known actors on the sky. The bright yellow patch just above the plane on the far right is a concentration of supernova remnants - the wreckage of stars that have exploded and whose shockwaves have super-heated a surrounding cocoon of dust and gas. This particular patch is dominated by the Vela supernova remnant. This was an explosion that happened thousands of years ago but a mere 800 light-years from Earth.\n Look next at the diffuse red glow at the top and bottom of the map. This is largely X-ray emission from hot gas well beyond our galaxy. And in the white speckles, we are seeing principally the signature of super-massive black holes. Indeed, about 80% of all the sources contained in the new map are the gargantuan black holes that reside at the centres of distant galaxies. They pump out X-rays as their immense gravitational pull draws in and eviscerates matter.\n Some of super-massive black holes making an appearance in the map are seen when the Universe was younger than one billion years old, less than 10% of its present age.\n  Spektr-RG and its eRosita instrument intend to gather seven more all-sky surveys over the next 3.5 years. This will enable the telescope to refine its data, to remove artefacts and noise, but also to sense deeper into the cosmos and pick up the faint sources that would otherwise be beyond detection.\n One key goal is to map the distribution of the hot, X-ray-emitting gas that illuminates the great clusters of galaxies.\n Astronomers hope this information can lead them to some fresh insights on how the Universe is structured and how it has changed through time. It&#39;s possible there may be some clues in this project about the nature of dark energy, the mysterious &#34;force&#34; that appears to be pushing the cosmos apart at an ever accelerating rate.\n &#34;That&#39;s the big prize, but it would only come at the end of the mission,&#34; explained Prof Nandra.\n &#34;Eight surveys allows us to go really deep into the distant Universe. Basically, we&#39;re trying to detect all of the clusters of galaxies in the Universe above a certain mass limit. We&#39;ve got a nice sample already - maybe around 10,000. But we&#39;re hoping to get at least 100,000 clusters of galaxies.&#34;\n eRosita is the German element on Spektr-RG. It takes up most of the room on the spacecraft bus, or chassis. But it sits next to a Russian instrument known as ART-XC, which is sensitive to higher energies, up to 30 keV.\n Both eRosita and ART-XC use a cluster of seven tubular mirror modules to corral X-ray light down on to their sensitive camera detectors.", "posttime": "2020-06-20 03:37:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5c04\u7ebf,map,\u5b87\u5b99", "title": "\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\u7684X\u5c04\u7ebf\u5b87\u5b99\u65b0\u5730\u56fe", "title_en": "Breathtaking New Map of the X-ray Universe", "transed": 1, "url": "https://www.bbc.com/news/science-environment-53102718", "via": "", "real_tags": ["\u5c04\u7ebf", "map", "\u5b87\u5b99"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007306, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u5230\u641c\u7d22DeCSS haiku\u662f\u7f8e\u56fd\u9ed1\u5ba2Seth Schoen\u4e8e2001\u5e74\u5199\u7684\u4e00\u9996465\u8282\u7684\u8dc6\u62f3\u9053\u8bd7\uff0c\u4f5c\u4e3a\u8d77\u8bc9\u632a\u5a01\u7a0b\u5e8f\u5458Jon Lech Johansen\u5171\u540c\u5f00\u53d1DeCSS\u8f6f\u4ef6\u7684\u6297\u8bae\u884c\u52a8\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u9996\u8bd7\u662f\u672c\u7740\u516c\u6c11\u4e0d\u670d\u4ece\u53cd\u5bf9DVD\u7248\u6743\u63a7\u5236\u534f\u4f1a\u7684\u7cbe\u795e\u5199\u7684\uff0c\u5b83\u8ba4\u4e3a\u5bc6\u7801\u5c31\u662f\u8a00\u8bba\u3002\nDeCSS haiku\u662f\u5728\u6765\u81ea\u56fd\u9645\u9ed1\u5ba2\u793e\u533a\u7684\u4e00\u7cfb\u5217\u6297\u8bae\u632a\u5a01\u7a0b\u5e8f\u5458Jon Lech Johansen\u88ab\u6355\u7684\u6297\u8bae\u6d3b\u52a8\u4ee5\u53ca\u9488\u5bf9\u4ed6\u548c\u5176\u4ed6\u9ed1\u5ba2(\u5982Universal City Studios\uff0cInc.)\u7684\u4e00\u7cfb\u5217\u76f8\u5173\u8bc9\u8bbc\u7684\u80cc\u666f\u4e0b\u521b\u5efa\u7684\u3002V.Reimerdes\u548cDVD\u590d\u5236\u63a7\u5236\u534f\u4f1a\uff0cInc.\u3002v.Bunner)\u3002\u632a\u5a01\u9752\u5c11\u5e74\u7a0b\u5e8f\u5458Johansen\u662f\u514d\u8d39\u5206\u53d1\u7684DeCSS\u8f6f\u4ef6\u7684\u521b\u5efa\u8005\u4e4b\u4e00\uff0c\u8be5\u8f6f\u4ef6\u53ef\u7528\u4e8e\u7ed5\u8fc7DVD\u52a0\u5bc6\uff0c\u9632\u6b62\u5373\u4f7f\u662f\u5408\u6cd5\u83b7\u5f97\u7684DVD\u5728\u672a\u7ecf\u6388\u6743\u7684\u8ba1\u7b97\u673a(\u5f53\u65f6\u5305\u62ec\u6240\u6709Linux\u8ba1\u7b97\u673a)\u4e0a\u8fd0\u884c\u3002Johansen\u548c\u5176\u4ed6\u8f6c\u53d1\u4ee3\u7801\u7684\u4eba\uff0c\u5305\u62ec\u9ed1\u5ba22600\u6742\u5fd7\uff0c\u88ab\u5a31\u4e50\u4e1a\u8d77\u8bc9\uff0c\u539f\u56e0\u662f\u4ed6\u4eec\u6cc4\u9732\u4e86\u5546\u4e1a\u79d8\u5bc6\uff0c\u5e76\u4e3a\u975e\u6cd5\u590d\u5236\u548c\u5206\u53d1\u6240\u8ff0DVD\u4e0a\u7684\u5185\u5bb9\u63d0\u4f9b\u4e86\u4fbf\u5229\u3002[1]\u3002\n\u8d5b\u65af\u00b7\u820d\u6069\u7684\u76ee\u6807\u662f\u4e3a\u8fd9\u4e00\u8bba\u70b9\u63d0\u4f9b\u5207\u5b9e\u7684\u8bc1\u636e\uff0c\u5373\u6e90\u4ee3\u7801\u5c31\u662f\u8a00\u8bba\uff0c\u56e0\u6b64\u5e94\u8be5\u7ed9\u4e88\u4e0e\u8a00\u8bba\u81ea\u7531\u76f8\u540c\u7684\u6cd5\u5f8b\u4fdd\u62a4\u3002[2]\u5176\u4ed6\u4e00\u4e9b\u79ef\u6781\u5206\u5b50\u672c\u7740\u516c\u6c11\u6297\u547d\u7684\u7cbe\u795e\uff0c\u521b\u4f5c\u4e86\u5305\u542b\u4fb5\u6743\u4ee3\u7801\u7684\u827a\u672f\u4f5c\u54c1\uff0c\u539f\u5219\u662f\u6b64\u7c7b\u4f5c\u54c1\u5728\u7f8e\u56fd\u5883\u5185\u53d7\u7b2c\u4e00\u4fee\u6b63\u6848\u539f\u5219\u7ea6\u675f\u3002[1][3]\u820d\u6069\u51b3\u5b9a\u521b\u4f5c\u4e00\u9996\u8bd7\uff0c\u4ed6\u57282001\u5e74\u5c31\u8fd9\u6837\u505a\u4e86\u3002[2]\u8d77\u521d\uff0c\u820d\u6069\u533f\u540d\u53d1\u5e03\u4e86\u8fd9\u9996\u8bd7[4]\uff0c\u4f46\u540e\u6765\u4ed6\u516c\u5f00\u627f\u8ba4\u4e86\u8fd9\u9996\u8bd7\u7684\u6240\u6709\u6743\u3002[5][6]\u3002\n\u7531465\u8282\u7ec4\u6210\u7684haiku\u5bf9decss\u8f6f\u4ef6\u8fdb\u884c\u4ee3\u7801\u8f6c\u6362\uff0c\u5b9e\u9645\u4e0a\u5141\u8bb8\u5927\u591a\u6570\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5458\u4f7f\u7528haiku\u4f5c\u4e3a\u4ed6\u4eec\u552f\u4e00\u7684\u53c2\u8003\uff0c\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u521b\u5efadecss\u8f6f\u4ef6\u3002[2]\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u7b80\u77ed\u6458\u5f55\u6765\u8bf4\u660e\uff1a\n\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\uff1a\u5c06\u6211\u4eec\u7684DKEY\u590d\u5236\u5230IM1\u4e2d\uff0c\u4f7f\u7528\u4e0a\u9762\u89e3\u5bc6\u78c1\u76d8\u5bc6\u94a5\u7684\u89c4\u5219(\u4ee5IM1\u53ca\u5176\u670b\u53cbIM2\u4f5c\u4e3a\u8f93\u5165)--\u56e0\u6b64\u6211\u4eec\u89e3\u5bc6\u78c1\u76d8\u5bc6\u94a5IM1\u3002\n\u5728\u53e6\u4e00\u5904\uff0c\u8fd9\u9996\u8bd7\u62ab\u9732\u4e86\u5a31\u4e50\u4e1a\u5f8b\u5e08\u8ba4\u4e3a\u662f\u4e13\u6709\u5546\u4e1a\u79d8\u5bc6\u7684CSS\u4ee3\u7801\u768416\u4f4d\u4e07\u80fd\u94a5\u5319\uff1a\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u6570\u5b57\u53c8\u4e00\u6b21\u662f\u73a9\u5bb6\u7684\u5bc6\u94a5\uff1a(\u5546\u4e1a\u79d8\u5bc6\u590f\u5a01\u5937\u8bed\uff1f)\u3002\u516b\u5341\u4e00\uff1b\u7136\u540e\u662f\u4e00\u767e\u96f6\u4e09--\u4e24\u6b21\uff1b\u7136\u540e\u662f\u4e8c\u767e(\u51cf\u4e09)224\uff1b\u6700\u540e(\u5f53\u7136\u4e0d\u662f\u6700\u4e0d\u91cd\u8981\u7684)\u662f\u5351\u5fae\u7684\u96f6\u3002\nE\u00b7\u52a0\u5e03\u91cc\u57c3\u62c9\u00b7\u79d1\u5c14\u66fc(E.Gabriella Coleman)\u6307\u51fa\uff1a\u5728\u5c06\u8bd7\u6b4c\u4e2d\u7684\u4ee3\u7801\u4e0e\u8bd7\u6b4c\u8fdb\u884c\u5f62\u5f0f\u4e0a\u7684\u6bd4\u8f83\u65f6\uff0c\u820d\u6069\u5c55\u793a\u4e86\u4e00\u79cd\u6709\u8da3\u7684\u5de7\u5999\u548c\u9012\u5f52\u7684\u4fee\u8f9e\u5f62\u5f0f\uff0c\u53d7\u5230\u9ed1\u5ba2\u7684\u91cd\u89c6\uff1b\u4ed6\u8fd8\u9610\u660e\u4e86\u7b2c\u4e00\u4fee\u6b63\u6848\u548c\u8f6f\u4ef6\u7684\u542b\u4e49\u3002[2]\u5927\u536b\u00b7S\u00b7\u56fe\u96f7\u8328\u57fa(David S.Touretzky)\u53cd\u8fc7\u6765\u5c06\u8fd9\u90e8\u4f5c\u54c1\u63cf\u8ff0\u4e3a\u5de7\u5999\u7684\u8bd7\u6b4c\u2026\u2026\u3002\u65e2\u6709\u5bf9DeCSS\u60c5\u51b5\u7684\u8bc4\u8bba\uff0c\u4e5f\u6709\u5bf9\u89e3\u6270\u7b97\u6cd5\u7684\u6b63\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\u3002\u771f\u6b63\u9f13\u821e\u4eba\u5fc3\u3002#34\uff1b[6]\n\u4ed6\u7684\u4f5c\u54c1\u88ab\u63cf\u8ff0\u4e3a\u53d7DeCSS\u542f\u53d1\u7684\u9ed1\u5ba2\u827a\u672f/\u4ee3\u7801\u4e2d\u6700\u8457\u540d\u7684\u4f8b\u5b50\u4e4b\u4e00\u3002[1][6]\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u3001\u300a\u65e7\u91d1\u5c71\u7eaa\u4e8b\u62a5\u300b\u3001\u300a\u8fde\u7ebf\u300b\u548c\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u6742\u5fd7\u90fd\u5bf9\u6b64\u8fdb\u884c\u4e86\u62a5\u9053\u3002[1]\u3002\n\u4f5c\u8005\uff1aDavid P.\u3002(2001\u5e744\u670812\u65e5)\u3002\u201c\u7981\u5fcc\u5bc6\u7801\u201d\u751f\u6d3b\u5728\u8bd7\u6b4c\u548c\u6b4c\u66f2\u4e2d\u3002\u534e\u5c14\u8857\u65e5\u62a5\u3002", "note_en": "Jump to navigation  Jump to search  DeCSS haiku is a 465- stanza  haiku poem written in 2001 by American  hacker  Seth Schoen as part of the protest action regarding the prosecution of Norwegian programmer  Jon Lech Johansen for co-creating the  DeCSS software. The poem, written in the spirit of  civil disobedience against the  DVD Copy Control Association, argues that &#34;code is speech.&#34;\n   DeCSS haiku was created in the context of a series of protests, coming from the international  hacker community, against the arrest of Norwegian programmer  Jon Lech Johansen, and a series of related lawsuits against him and other hackers (such as  Universal City Studios, Inc. v. Reimerdes and  DVD Copy Control Association, Inc. v. Bunner). Johansen, a Norwegian teenage programmer, was one of the creators of the freely distributed  DeCSS software which can be used to bypass  DVD encryption, preventing even legally-acquired DVDs on running on unauthorized computers (which at that time included all  Linux machines). Johansen and others who reposted the code, including the hacker  2600 magazine, were sued by the  entertainment industry for revealing a  trade secret and facilitating illegal copying and distribution of content on said DVDs.  [1]\n Seth Schoen&#39;s goal was to provide tangible proof for the argument that &#34; source code is speech&#34; and hence should be given the same legal protections as  free speech.  [2] A number of other activists, in the spirit of  civil disobedience, created works of arts containing the infringing code, on the principle that such works are subject to  First Amendment principle within the United States.  [1]  [3] Schoen decided to create a poem, which he did in 2001.  [2] At first, Schoen released the poem anonymously,  [4] though he has publicly acknowledged its ownership since.  [5]  [6]\n The 465- stanza  haiku transcodes the DeCSS software, in effect allowing most computer programmers to recreate the DeCSS software from scratch, using the haiku as their only reference.  [2] This can be illustrated by the following short excerpt:\n All we have to do is this: copy our DKEY into im1,  use the rule above that decrypts a disk key (with im1 and its  friend im2 as inputs) -- thus we decrypt the disk key im1.\n At another point, the poem discloses a sixteen-digit master key to the  CSS code that the entertainment industry lawyers considered a proprietary trade secret:\n So this number is, once again, the player key: (trade secret haiku?)  Eighty-one; and then one hundred three -- two times; then two hundred (less three)  two hundred twenty four; and last (of course not least) the humble zero.\n E. Gabriella Coleman noted: &#34;in formally comparing code to poetry in the medium of a poem, Schoen displays a playful form of clever and recursive rhetoric valued among hackers; he also articulates the meaning of the  First Amendment and software.&#34;  [2] David S. Touretzky in turn described this work as &#34;ingenious poem... both a commentary on the DeCSS situation and a correct and complete description of the descrambling algorithm. Truly inspired.&#34;  [6]\n His work has been described as one of the most notable example of DeCSS-inspired hacker art/code.  [1]  [6] It was covered by the   Wall Street Journal,   San Francisco Chronicle,   Wired and the   New York Times Magazine.  [1]\n       Hamilton, David P. (April 12, 2001).  &#34;Banned Code Lives in Poetry and Song&#34;.   The Wall Street Journal .", "posttime": "2020-06-20 03:36:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "css,decss,\u9ed1\u5ba2", "title": "\u5fb7CSS\u590f\u5a01\u5937\u8bed", "title_en": "DeCSS Haiku", "transed": 1, "url": "https://en.wikipedia.org/wiki/DeCSS_haiku", "via": "", "real_tags": ["css", "decss", "\u9ed1\u5ba2"]}, {"category": "", "categoryclass": "", "imagename": "a790f39ed48ab7b15e2ca745d46611d3.jpg", "infoid": 1007305, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531Tsvetana Paraskova-2020\u5e746\u670818\u65e5\u4e0b\u53484\uff1a30 CDT\u62a5\u9053\uff0c\u7f8e\u56fd\u51e0\u4e4e\u6240\u6709\u751f\u4ea7\u7684\u7164\u70ad\u90fd\u7528\u4e8e\u53d1\u7535\uff0c\u4f46\u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u5929\u7136\u6c14\u53d1\u7535\u7684\u589e\u957f\u548c\u53ef\u518d\u751f\u80fd\u6e90\u53d1\u7535\u4efd\u989d\u7684\u4e0a\u5347\uff0c\u5176\u4efd\u989d\u5df2\u88ab\u4fb5\u8680\u3002\n\u7f8e\u56fd\u80fd\u6e90\u60c5\u62a5\u7f72(EIA)\u5468\u56db\u8868\u793a\uff0c\u7164\u70ad\u662f\u7f8e\u56fd\u7684\u4e3b\u8981\u80fd\u6e90\u4e4b\u4e00\uff0c2019\u5e74\u5360\u56fd\u5185\u4e00\u6b21\u80fd\u6e90\u4ea7\u91cf\u768414%\u3002\nEIA\u8bf4\uff0c\u7f8e\u56fd\u751f\u4ea7\u7684\u5927\u90e8\u5206\u7164\u70ad\u7528\u4e8e\u4e3a\u71c3\u7164\u53d1\u7535\u5382\u63d0\u4f9b\u52a8\u529b\uff0c\u800c\u5de5\u4e1a\u90e8\u95e8\u548c\u5546\u4e1a\u90e8\u95e8\u5728\u7164\u70ad\u6d88\u8d39\u4e2d\u6240\u5360\u4efd\u989d\u5f88\u5c0f\u3002\n\u6839\u636eEIA\u7684\u6570\u636e\uff0c\u7f8e\u56fd\u7164\u70ad\u4ea7\u91cf\u548c\u6d88\u8d39\u91cf\u5206\u522b\u81ea2008\u5e74\u548c2007\u5e74\u8fbe\u5230\u5cf0\u503c\u4ee5\u6765\u4e00\u76f4\u5728\u4e0b\u964d\u3002\u4f8b\u5982\uff0c\u53bb\u5e74\uff0c\u7f8e\u56fd\u7164\u70ad\u4ea7\u91cf\u8dcc\u81f31978\u5e74\u4ee5\u6765\u7684\u6700\u4f4e\u6c34\u5e73\uff0c\u800c\u7164\u70ad\u6d88\u8d39\u91cf\u964d\u81f31975\u5e74\u4ee5\u6765\u7684\u6700\u4f4e\u6c34\u5e73\u3002\nEIA\u4e0a\u4e2a\u6708\u8868\u793a\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u7684\u5d1b\u8d77\u548c\u7164\u70ad\u53d1\u7535\u91cf\u7684\u4e0b\u964d\uff0c\u5bfc\u81f4\u7f8e\u56fd2019\u5e74\u53ef\u518d\u751f\u80fd\u6e90\u7684\u80fd\u6e90\u6d88\u8017\u91cf\u81ea1885\u5e74\u4ee5\u6765\u9996\u6b21\u8d85\u8fc7\u7164\u70ad\u6d88\u8017\u91cf\u3002\nEIA\u5728\u5176\u6708\u5ea6\u80fd\u6e90\u8bc4\u8bba\u4e2d\u8868\u793a\uff0c\u53bb\u5e74\uff0c\u4e0e2018\u5e74\u76f8\u6bd4\uff0c\u7f8e\u56fd\u53ef\u518d\u751f\u80fd\u6e90\u6d88\u8d39\u603b\u989d\u589e\u52a0\u4e861%\uff0c\u800c\u7164\u70ad\u6d88\u8d39\u540c\u6bd4\u4e0b\u964d\u4e86\u8fd115%\u3002\n\u53ef\u518d\u751f\u80fd\u6e90\uff0c\u7279\u522b\u662f\u98ce\u80fd\u548c\u592a\u9633\u80fd\u7684\u5174\u8d77\uff0c\u6807\u5fd7\u7740\u53bb\u5e74\u7f8e\u56fd\u80fd\u6e90\u6d88\u8d39\u7684\u4e00\u4e2a\u5386\u53f2\u6027\u91cc\u7a0b\u7891\uff1a\u81ea\u5de5\u4e1a\u9769\u547d\u4ee5\u6765\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u9996\u6b21\u8d85\u8fc7\u7164\u70ad\u6210\u4e3a\u80fd\u6e90\u3002\n\u7531\u4e8e\u5929\u7136\u6c14\u4ea7\u91cf\u7684\u4e0a\u5347\u548c\u5929\u7136\u6c14\u53d1\u7535\u91cf\u7684\u589e\u52a0\uff0c\u7f8e\u56fd\u7684\u71c3\u7164\u53d1\u7535\u80fd\u529b\u7ee7\u7eed\u9000\u5f79\u3002\u968f\u7740\u7164\u70ad\u4ea7\u80fd\u7684\u9000\u5f79\uff0c\u7164\u70ad\u53d1\u7535\u91cf\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u5927\u5e45\u4e0b\u964d\uff0c2019\u5e74\u964d\u81f342\u5e74\u6765\u7684\u6700\u4f4e\u6c34\u5e73\u3002", "note_en": "By  Tsvetana Paraskova - Jun 18, 2020, 4:30 PM CDT     Nearly all of the coal produced in the United States goes for electricity generation, but its share has been eroded in recent years by growing natural gas-powered generation and rising share of renewable energy generation.\n Coal is one of the main sources of energy in the United States, accounting for 14 percent of domestic primary energy production in 2019, the U.S. Energy Information Administration (EIA)\u00a0 said\u00a0on Thursday.\n Most of the coal produced in the U.S. is used to power coal-fired power plants, while the industrial sector and the commercial sector account for small shares of coal consumption, the EIA said.\n  According to EIA data, U.S. coal production and consumption have been on a decline since peaking in 2008 and 2007, respectively. Last year, for example, U.S. coal production hit its lowest level since 1978, while coal consumption dropped to the lowest since 1975.\n The rise of renewables and declining coal electricity generation resulted in energy consumption from renewables in the United States surpassing in 2019 coal consumption\u00a0 for the first time since 1885, the EIA said last month.\n Last year, total U.S. renewable energy consumption increased by 1 percent compared to 2018, while coal consumption slumped by almost 15 percent year on year, the EIA\u00a0 said\u00a0in its Monthly Energy Review.\n  The rise of renewable energy sources, especially wind and solar power, marked a historic milestone for energy consumption in the United States last year: for the first time since the Industrial Revolution, renewable energy sources overtook coal as a source of energy.\n Due to rising natural gas production and increased natural gas-powered generation, coal-fired electricity generation capacity\u00a0 continues to retire\u00a0in the U.S. Following coal capacity retirements, electricity generation from coal has dropped significantly over the past decade to the point of reaching its\u00a0 lowest level in 42 years\u00a0in 2019.", "posttime": "2020-06-20 03:35:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7164\u70ad\u5de5\u4e1a,industry,\u7164\u70ad", "title": "\u7f8e\u56fd\u7164\u70ad\u5de5\u4e1a\u6b63\u5728\u4e0d\u53ef\u9006\u8f6c\u5730\u8870\u9000", "title_en": "The US Coal Industry Is Declining Irreversibly", "transed": 1, "url": "https://oilprice.com/Latest-Energy-News/World-News/The-US-Coal-Industry-Is-Declining-Irreversibly.html", "via": "", "real_tags": ["\u7164\u70ad\u5de5\u4e1a", "industry", "\u7164\u70ad"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007304, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fdc\u7a0b\u5de5\u4f5c\u73af\u5883\u4e0e\u529e\u516c\u5ba4\u4e0d\u540c\u3002\u4e0d\u540c\u7684\u73af\u5883\u9700\u8981\u4e0d\u540c\u7684\u901a\u4fe1\u7cfb\u7edf\u3002\u9002\u5e94\u8fdc\u7a0b\u5de5\u4f5c\u73b0\u5b9e\u7684\u901a\u4fe1\u7cfb\u7edf\u53ef\u4ee5\u5e26\u6765\u60ca\u4eba\u7684\u597d\u5904\uff1a(\u751a\u81f3)\u66f4\u9ad8\u7684\u751f\u4ea7\u529b\uff0c\u957f\u671f\u7684\u7ade\u4e89\u4f18\u52bf\uff0c\u4ee5\u53ca\u66f4\u597d\u7684\u5de5\u4f5c\u4e0e\u751f\u6d3b\u5e73\u8861\u3002\n\u5f02\u6b65\u4e66\u9762\u901a\u4fe1\u662f\u6700\u9002\u5408\u8fdc\u7a0b\u5de5\u4f5c\u7684\u5de5\u5177\u3002\u6211\u4eec\u975e\u5e38\u4e60\u60ef\u5728\u529e\u516c\u5ba4\u91cc\u76f8\u4e92\u4ea4\u8c08\uff0c\u5728\u5de5\u4f5c\u804a\u5929\u4e2d\u671f\u5f85\u7acb\u5373\u5f97\u5230\u56de\u5e94\uff0c\u6574\u5929\u5f00\u4f1a\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u8bd5\u56fe\u5728\u5bb6\u91cc\u901a\u8fc7\u653e\u5927\u548c\u677e\u5f1b\u6765\u590d\u5236\u8fd9\u4e00\u70b9\u3002\n\u5728\u7b49\u5f85\u5373\u65f6\u56de\u590d\u7684\u540c\u65f6\u61d2\u6d0b\u6d0b\u5730\u4e92\u76f8\u5199\u4fe1\uff0c\u6216\u8005\u6bcf\u5929\u5b89\u6392\u591a\u4e2a\u7f29\u653e\u4f1a\u8bae\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fdc\u7a0b\u5de5\u4f5c\u90fd\u4f1a\u5931\u8d25\u3002\n\u5728Unspash\u4e0a\u4f7f\u7528Sack\u6216Microsoft Teams\u7b49\u540c\u6b65\u804a\u5929\u65b9\u5f0f\u62cd\u6444\u7684\u7167\u7247\u4e0d\u50cf\u4e0e\u5750\u5728\u4f60\u65c1\u8fb9\u7684\u961f\u53cb\u4ea4\u8c08\uff1a\u5b83\u66f4\u96be\u53d1\u8d77\u3002\u5f53\u4f60\u8eab\u8fb9\u6709\u961f\u53cb\u7684\u65f6\u5019\uff0c\u4ec5\u4ec5\u4ea4\u8c08\u8981\u6bd4\u6253\u5b57\u63d0\u95ee\u5bb9\u6613\u5f97\u591a\u3002\u8fd9\u4f1a\u5bfc\u81f4\u5feb\u901f\u800c\u7b80\u5355\u7684\u4e8b\u60c5\u88ab\u62d6\u5f97\u592a\u4e45\uff0c\u56e0\u4e3a\u961f\u53cb\u4f1a\u9996\u5148\u5c1d\u8bd5\u81ea\u5df1\u89e3\u51b3\u5b83\u3002\n\u53d1\u8d77\u8fd9\u4ef6\u4e8b\u592a\u5bb9\u6613\u4e86\u3002\u5f53\u662f\u6765\u81ea\u4e0d\u540c\u90e8\u95e8\u7684\u4eba\u65f6\uff0c\u5728\u529e\u516c\u5ba4\u91cc\uff0c\u4ed6\u901a\u5e38\u4f1a\u5148\u548c\u81ea\u5df1\u7684\u961f\u53cb\u6838\u5b9e\u4e00\u4e0b\u3002\u4f46\u73b0\u5728\uff0c\u76f4\u63a5\u627e\u5230\u6e90\u5934\u4e5f\u540c\u6837\u5bb9\u6613\u3002\u6240\u4ee5\u4f60\u4f1a\u6536\u5230\u5783\u573e\u90ae\u4ef6\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u5e0c\u671b\u7acb\u5373\u5f97\u5230\u56de\u5e94\u3002\u8fd9\u53ea\u662f\u804a\u5929\u800c\u5df2\u3002\u5b83\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u7ed9\u6211\u4eec\u4e00\u79cd\u7d27\u8feb\u611f\u3002\u5373\u4f7f\u4e0d\u662f\u5f88\u7d27\u6025\u7684\u65f6\u5019\u3002\n\u4f60\u4f1a\u5931\u53bb\u4f60\u7684\u5386\u53f2\u3002\u5373\u4f7f\u4f60\u5728\u804a\u5929\u4e2d\u82b1\u65f6\u95f4\u5411\u67d0\u4eba\u89e3\u91ca\u516c\u53f8\u7684\u6982\u5ff5\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u4ee5\u4e00\u79cd\u6709\u7ec4\u7ec7\u7684\u6216\u53ef\u53d1\u73b0\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u4efb\u4f55\u5730\u65b9\u3002\u5b83\u5c06\u4e22\u5931\u5728\u804a\u5929\u65e5\u5fd7\u4e2d\u3002\u5f88\u5feb\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u81ea\u5df1\u53c8\u5728\u89e3\u91ca\u540c\u6837\u7684\u4e8b\u60c5\u4e86\u3002\n\u5b83\u63d0\u5021\u4fdd\u5bc6\u3002\u4eba\u4eec\u5929\u751f\u5bb3\u7f9e\uff0c\u4e0d\u613f\u5411\u5176\u4ed6\u961f\u53cb\u5c55\u793a\u81ea\u5df1\u7684\u5f31\u70b9\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u4f1a\u5c06\u95ee\u9898\u548c\u6700\u65b0\u4fe1\u606f\u5927\u591a\u4fdd\u5b58\u5728\u79c1\u4eba\u804a\u5929\u6216\u79c1\u4eba\u623f\u95f4\u4e2d\u3002\n\u89c6\u9891\u4f1a\u8bae\u4e5f\u6709\u95ee\u9898\uff1a\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\u53d1\u8a00\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u4e0d\u53ea\u662f\u4e00\u4e2a\u4eba\u53ef\u4ee5\u8bf4\u8bdd\uff0c\u6bcf\u4e2a\u4eba\u90fd\u80fd\u7406\u89e3\u3002\u8fd9\u662f\u4e00\u4e2a\u8f6f\u4ef6\u9650\u5236\u3002\n\u4e0d\u8981\u8fb9\u8bf4\u8fb9\u8bf4\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u5927\u578b\u4f1a\u8bae\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf9\u4f1a\u8bae\u4e2d\u7684\u4e00\u7fa4\u4eba\u4f4e\u58f0\u8bf4\u4e9b\u4ec0\u4e48\u3002\u4f60\u4e0d\u80fd\u5728\u89c6\u9891\u4f1a\u8bae\u4e2d\u8fd9\u6837\u505a\u3002\n\u8fd9\u4e00\u5207\u90fd\u8ba9\u89c6\u9891\u4f1a\u8bae\u7ed9\u4eba\u7684\u611f\u89c9\u66f4\u50cf\u662f\u4e00\u573a\u8bb2\u5ea7\u3002\u771f\u6b63\u7684\u8ba8\u8bba\u66f4\u96be\u4fc3\u6210(\u5c3d\u7ba1\u5e76\u975e\u4e0d\u53ef\u80fd)\u3002\n\u89c6\u9891\u901a\u8bdd\u5f88\u7d2f\u4eba\u3002\u6444\u50cf\u673a\u805a\u7126\u5728\u4f60\u7684\u8138\u4e0a\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4e00\u76f4\u5728\u770b\u7740\u4f60\u3002\u4f60\u4e0d\u80fd\u8d70\u795e\u6216\u8d70\u795e\u8ba9\u4f60\u7684\u5927\u8111\u4f11\u606f\u4e00\u4e0b\u3002\n\u5373\u4f7f\u6211\u4eec\u629b\u5f03\u4e86\u804a\u5929\u548c\u89c6\u9891\u901a\u8bdd\u7684\u5177\u4f53\u5de5\u5177\uff0c\u6211\u4eec\u4ecd\u7136\u5b58\u5728\u540c\u6b65\u901a\u4fe1\u7684\u6f5c\u5728\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5e0c\u671b\u5176\u4ed6\u53c2\u4e0e\u8005\u5728\u975e\u5e38\u6709\u9650\u7684\u65f6\u95f4\u8de8\u5ea6\u5185\u505a\u51fa\u54cd\u5e94\u7684\u4ea4\u6d41\u3002\n\u5f53\u9884\u8ba1\u6bcf\u4e2a\u4eba\u90fd\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7a7a\u65f6\uff0c\u6253\u65ad\u522b\u4eba\u5e76\u7acb\u5373\u5f97\u5230\u7b54\u6848\u7684\u6210\u672c\u6bd4\u81ea\u5df1\u5bfb\u627e\u7b54\u6848\u7684\u6210\u672c\u8981\u4f4e\u3002\u65e0\u8bba\u662f\u5728\u7b2c\u4e09\u65b9\u6587\u6863\u4e2d\uff0c\u8fd8\u662f\u5728\u516c\u53f8\u7684\u5185\u90e8\u6587\u6863\u4e2d\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5185\u90e8\u6587\u6863\u751a\u81f3\u5b58\u5728\u7684\u8bdd\u3002\u5f53\u6bcf\u4e2a\u4eba\u90fd\u5e0c\u671b\u88ab\u95ee\u5230\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u8981\u52aa\u529b\u6070\u5f53\u5730\u8bb0\u5f55\u4efb\u4f55\u4e8b\u60c5\u5462\uff1f\n\u8ba1\u5212\u662f\u53e6\u4e00\u4e2a\u7f6a\u9b41\u7978\u9996\u3002\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u63d0\u524d\u5bf9\u4ed6\u4eec\u7684\u4efb\u52a1\u8fdb\u884c\u9002\u5f53\u7684\u6df1\u5165\u8ba1\u5212\u3002\u4ed6\u4eec\u66f4\u559c\u6b22\u5b9a\u4e49\u6700\u7ec8\u76ee\u6807\uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u95ee\u9898\u548c\u7ec6\u8282\u3002\u4ed6\u4eec\u77e5\u9053\u4ed6\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u9677\u5165\u56f0\u5883\uff0c\u4eba\u4eec\u4f1a\u51c6\u65f6\u56de\u7b54\u4ed6\u4eec\u7684\u95ee\u9898\u3002\n\u8fd9\u5728\u7ec4\u7ec7\u4e2d\u5f62\u6210\u4e86\u4e00\u79cd\u4e2d\u65ad\u6587\u5316\u3002\u5b83\u81ea\u6211\u6ecb\u517b\u5f97\u5982\u6b64\u4e4b\u6df1\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e2a\u7ec4\u7ec7\u4e0d\u53ef\u80fd\u771f\u6b63\u4e0d\u53d7\u5e72\u6270\u5730\u8fd0\u8f6c\u3002\u56e0\u4e3a\u6574\u4e2a\u7ec4\u7ec7\u90fd\u4f9d\u8d56\u4e8e\u6b64\uff0c\u6240\u4ee5\u5b83\u6210\u4e3a\u6587\u5316\u7684\u4e00\u90e8\u5206\u3002\u4e00\u65e6\u4f60\u6709\u4e86\u6253\u65ad\u7684\u6587\u5316\uff0c\u5373\u4f7f\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u6c9f\u901a\u8005\u4e5f\u65e0\u6cd5\u6539\u53d8\u5b83\u3002\n\u5de5\u4f5c\u65f6\u95f4\u7684\u7075\u6d3b\u6027\u4e5f\u4f1a\u88ab\u6253\u7834\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u4f9d\u8d56\u4e8e\u6bcf\u4e2a\u4eba\u90fd\u80fd\u5728\u5de5\u4f5c\u65e5\u5185\u88ab\u6253\u6270\uff0c\u6240\u4ee5\u4f60\u6709\u4e00\u4e2a\u5de5\u4f5c\u65e5\u3002\n\u4f60\u7684\u5de5\u4f5c\u65e5\u65f6\u95f4\u5fc5\u987b\u4e0e\u5176\u4ed6\u6240\u6709\u4eba\u4fdd\u6301\u540c\u6b65\u3002\u56e0\u6b64\uff0c\u60a8\u653e\u5f03\u4e86\u5b9e\u9645\u5de5\u4f5c\u65f6\u95f4\u7075\u6d3b\u6027\u7684\u80fd\u529b\u3002\n\u5728\u5bb6\u91cc\u5de5\u4f5c\uff0c\u68a6\u60f3\u7740\u4e2d\u5348\u53bb\u63a5\u4f60\u7684\u5b69\u5b50\uff0c\u548c\u4ed6\u4eec\u4e00\u8d77\u51fa\u53bb\u73a9\uff0c\u7136\u540e\u665a\u4e9b\u65f6\u5019\u56de\u53bb\u5de5\u4f5c\uff1f\u5fd8\u4e86\u5b83\u5427\u3002\u4f60\u5f88\u5feb\u5c31\u4f1a\u88ab\u56f0\u5728\u67d0\u4ef6\u4e8b\u4e0a\uff0c\u6ca1\u6709\u4eba\u4f1a\u5728\u90a3\u91cc\u652f\u6301\u4f60\u3002\u66f4\u4e0d\u7528\u8bf4\u4f60\u4f1a\u8ba9\u4f60\u7684\u540c\u4e8b\u9677\u5165\u56f0\u5883\uff0c\u56e0\u4e3a\u4f60\u4e0d\u4f1a\u5728\u4e0b\u5348\u56de\u7b54\u4ed6\u4eec\u7684\u95ee\u9898\u3002\n\u771f\u6b63\u7684\u9065\u63a7\u5668\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5f53\u4f60\u9700\u8981\u6bcf\u4e2a\u4eba\u540c\u65f6\u90fd\u6709\u7a7a\u7684\u65f6\u5019\uff0c\u4f60\u4e0d\u53ef\u80fd\u73b0\u5b9e\u5730\u628a\u6765\u81ea\u7f8e\u56fd\u3001\u6b27\u6d32\u548c\u5370\u5ea6\u7684\u56e2\u961f\u6210\u5458\u653e\u5728\u4e00\u8d77\u3002\n\u5f02\u6b65\u5199\u4f5c\u4e0e\u804a\u5929\u6d88\u606f\u4e0d\u540c\u3002\u5b83\u5bff\u547d\u66f4\u957f\uff0c\u7784\u51c6\u66f4\u591a\u7684\u6f5c\u5728\u53d7\u4f17\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u88ab\u53d1\u73b0\u3002\n\u4e3a\u4e86\u6d3b\u5f97\u66f4\u4e45\uff0c\u6587\u672c\u9700\u8981\u610f\u8bc6\u5230\u66f4\u5927\u7684\u8bfb\u8005\u7fa4\u4f53\u80cc\u666f\u3002\u804a\u5929\u5ba4\u901a\u5e38\u53ea\u8003\u8651\u4e00\u4e24\u4e2a\u8bfb\u8005\uff0c\u8fd9\u4e9b\u8bfb\u8005\u5177\u6709\u7406\u89e3\u4f60\u8c08\u8bdd\u5185\u5bb9\u7684\u80cc\u666f\uff0c\u800c\u957f\u5bff\u7684\u6587\u672c\u5e94\u8be5\u8003\u8651\u6574\u4e2a\u6f5c\u5728\u7684\u8bfb\u8005\u7fa4\u4f53\u3002\u73b0\u5728\uff0c\u4ee5\u53ca\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u5019\u3002\n\u4e3a\u4e86\u6587\u672c\u5bff\u547d\u66f4\u957f\uff0c\u76ee\u6807\u53d7\u4f17\u66f4\u5e7f\uff0c\u5b83\u9700\u8981\u5047\u8bbe\u8f83\u5c11\u7684\u9884\u5148\u5b58\u5728\u7684\u8bfb\u8005\u4e0a\u4e0b\u6587\u3002\u804a\u5929\u6d88\u606f\u5728\u7279\u5b9a\u65f6\u95f4\u4ee5\u4e00/\u4e24\u4e2a\u8bfb\u8005\u4e3a\u76ee\u6807\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u5047\u8bbe\u8fd9\u4e9b\u8bfb\u8005\u62e5\u6709\u5bf9\u4ed6\u4eec\u6765\u8bf4\u660e\u786e\u7684\u5f53\u524d\u4e0a\u4e0b\u6587\u3002\n\u5f02\u6b65\u5199\u4f5c\u4e0d\u5047\u5b9a\u7279\u5b9a\u7684\u4eba\u4e0a\u4e0b\u6587\uff0c\u4e5f\u4e0d\u5047\u5b9a\u5f53\u524d\u4e8b\u4ef6\u77e5\u8bc6\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u4f7f\u6587\u672c\u53d8\u5f97\u66f4\u957f\u6216\u66f4\u96be\u5199\u3002\n\u4f8b\u5982\uff0c\u6211\u4eec\u5047\u8bbe\u56e2\u961f\u4e2d\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u95ee\u9898\uff0c\u5728\u6b64\u573a\u666f\u4e2d\uff0cMySQL\u5b9e\u4f8b\u5076\u5c14\u4f1a\u56e0\u4e3a\u5185\u5b58\u4e0d\u8db3\u9519\u8bef\u800c\u5931\u8d25\u3002\u4ec5\u4e3a\u60a8\u7684\u56e2\u961f\u7f16\u5199\uff0c\u4ed6\u4eec\u77e5\u9053\u73b0\u5728\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u662f\u4ec0\u4e48\u6570\u636e\u5e93\u3002\u5176\u4ed6\u4eba\u53ef\u80fd\u4e0d\u77e5\u9053\u54ea\u4e2aDB\u6709\u95ee\u9898(\u5047\u8bbe\u60a8\u4e5f\u5728\u67d0\u4e2a\u5730\u65b9\u4f7f\u7528MongoDB)\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u95ee\u9898\u662f\u4ec0\u4e48\u3002\n\u5bf9\u4e8e\u4e0d\u4f1a\u6301\u7eed\u5f88\u957f\u65f6\u95f4\u7684\u804a\u5929\u4e0a\u4e0b\u6587\u800c\u8a00\uff0c\u4e00\u6761\u8db3\u591f\u7684\u6d88\u606f\u53ef\u80fd\u662f\uff1a\u6211\u4eca\u5929\u5c06\u4fee\u590d\u6570\u636e\u5e93\u3002\u5f02\u6b65\u6587\u672c\u7b49\u4ef7\u7269\u5c06\u5728\u7cfb\u7edf\u4e2d\u8bb0\u5f55\u95ee\u9898\uff0c\u5c06\u5176\u6807\u8bb0\u4e3a\u4eca\u5929\u6b63\u5728\u5904\u7406\uff0c\u6587\u672c\u4e3a&#34\uff1bMySQL Out Out Memory Issue&#34\uff1b(\u4eca\u5929\u7684\u6587\u672c\u4e3a&#34\uff1bMySQL Out Out Memory Issue&#34\uff1b)\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u957f\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u4efb\u4f55\u5c40\u5916\u4eba\u53ef\u80fd\u9700\u8981\u4e86\u89e3\u7684\u6240\u6709\u80cc\u666f\uff0c\u800c\u4e0d\u9700\u8981\u8054\u7cfb\u4efb\u4f55\u4eba\u8be2\u95ee\u6211\u4eec\u5728\u4ec0\u4e48\u6570\u636e\u5e93\u4e0a\u6709\u95ee\u9898\uff1f\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u77e5\u9053\u5b83\u7684\uff1f\u8c01\u5728\u4e0a\u9762\uff1f\u7b49\u7b49\u3002\n\u53ef\u53d1\u73b0\u6027\u662f\u8be5\u901a\u4fe1\u7cfb\u7edf\u7684\u4e0b\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002\u4f60\u9700\u8981\u8ba9\u5c06\u6765\u53ef\u80fd\u9700\u8981\u4f60\u7684\u4f5c\u54c1\u7684\u6bcf\u4e2a\u4eba\u90fd\u80fd\u5f88\u5bb9\u6613\u5730\u627e\u5230\u4f60\u7684\u4f5c\u54c1\u3002\n\u4f9d\u8d56\u5168\u6587\u641c\u7d22\u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u4f60\u9700\u8981\u6709\u9002\u5f53\u7684\u7ec4\u7ec7\u4f53\u7cfb\u3002\u4efb\u52a1\u63cf\u8ff0\u653e\u5728\u54ea\u91cc\uff1f\u7cfb\u7edf\u8bbe\u8ba1\u6587\u6863\u653e\u5728\u54ea\u91cc\uff1f\u4ed6\u4eec\u90fd\u4f4f\u5728\u4e00\u4e2a\u5730\u65b9\u8fd8\u662f\u6bcf\u4e2a\u9879\u76ee\uff1f\u6216\u8005\u53ef\u80fd\u662f\u5927\u578b\u7ec4\u7ec7\u4e2d\u7684\u6bcf\u4e2a\u90e8\u95e8\uff1f\n\u6bcf\u5bb6\u516c\u53f8\u90fd\u6709\u67d0\u79cd\u7cfb\u7edf\uff0c\u901a\u5e38\u4e5f\u662f\u4ee5\u4ed6\u4eec\u7684\u77e5\u8bc6\u5171\u4eab\u4e3a\u6307\u5bfc\u7684\u3002\u4e0d\u7ba1\u662f\u5409\u62c9\uff0c\u5927\u672c\u8425\uff0c\u661f\u671f\u4e00\u8fd8\u662f\u522b\u7684\u4ec0\u4e48\u5730\u65b9\u3002\u60a8\u53ea\u9700\u786e\u4fdd\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u548c\u7d27\u5bc6\u6027\uff0c\u4ee5\u4fbf\u9879\u76ee\u4e2d\u7684\u65b0\u4eba\u80fd\u591f\u81ea\u6211\u53d1\u73b0\u4ed6\u4eec\u9700\u8981\u7684\u4e00\u5207\u3002\n\u8fd9\u91cc\u4e5f\u4ee5MySQL\u95ee\u9898\u4e3a\u4f8b\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u65b0\u7684\u56e2\u961f\u6210\u5458\u5f97\u5230\u4e86\u8fd9\u9879\u4efb\u52a1\u3002\u8be5\u4efb\u52a1\u4f7f\u7528\u6807\u8bb0&#34\uff1b\u6570\u636e\u5e93&#34\uff1b\u3001&#34\uff1b\u57fa\u7840\u8bbe\u65bd&#34\uff1b\u8fdb\u884c\u6807\u8bb0\u3002\u4ed6\u53ef\u4ee5\u8ddf\u968f\u6570\u636e\u5e93\u6807\u7b7e\u67e5\u627e\u6700\u8fd1\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u770b\u770b\u662f\u5426\u6709\u660e\u663e\u7684\u53ef\u7591\u4e4b\u5904\u3002\n\u4ed6\u6ca1\u6709\u53d1\u73b0\uff0c\u6240\u4ee5\u4ed6\u51b3\u5b9a\u68c0\u67e5\u4e00\u4e0b\u662f\u4e0d\u662f\u6709\u6570\u636e\u5206\u6790\u5e08\u505a\u4e86\u4ec0\u4e48\u8be1\u5f02\u7684\u4e8b\u60c5\u3002\u4ed6\u8f6c\u5230\u6570\u636e\u5206\u6790\u56e2\u961f\u7684\u4efb\u52a1\u5217\u8868\uff0c\u627e\u5230\u4e86\u65b0\u7684\u4eea\u8868\u677f\u6807\u7b7e(Tag&#34\uff1bnew Dashboard&34\uff1b)\u3002\u8fd9\u4e9b\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7ebf\u7d22\uff0c\u4ed6\u53d1\u73b0\u5728\u95ee\u9898\u5f00\u59cb\u7684\u5f53\u5929\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u4eea\u8868\u76d8\u4efb\u52a1\u3002\n\u73b0\u5728\u4ed6\u9700\u8981\u67e5\u770b\u8fd9\u4e2a\u4eea\u8868\u677f\uff0c\u4f46\u5b83\u4f7f\u7528\u7684\u662f\u4ed6\u4e0d\u719f\u6089\u7684\u53ef\u89c6\u5316\u7cfb\u7edf\u3002\u4ed6\u524d\u5f80\u6570\u636e\u56e2\u961f\u7ef4\u57fa\uff0c\u5728\u90a3\u91cc\u4ed6\u627e\u5230\u4e86\u4e00\u4efd\u5173\u4e8e\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u53ef\u89c6\u5316\u7cfb\u7edf\u7684\u6587\u6863\u3002\u4ed6\u8bbe\u7f6e\u4e86\u4ed6\u7684\u51ed\u636e\u5e76\u8fdb\u5165\u67e5\u770b\u67e5\u8be2\u3002\n\u4f60\u77e5\u9053\u6211\u8981\u505a\u4ec0\u4e48\u4e86\u5427\u3002\u5f53\u4e00\u5207\u90fd\u5f88\u5bb9\u6613\u8bbf\u95ee\u548c\u660e\u663e\u65f6\uff0c\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u4efb\u52a1\u672c\u8eab\uff0c\u800c\u4e0d\u4f1a\u4e2d\u65ad\u6d41\u7a0b\u3002\n\u60f3\u8c61\u4e00\u4e0b\u8fd9\u6837\u4e00\u79cd\u573a\u666f\uff0c\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u4f60\u90fd\u5fc5\u987b\u505c\u4e0b\u6765\u95ee\u67d0\u4eba\uff1a\u6765\u81ea\u6570\u636e\u57fa\u7840\u8bbe\u65bd\u7684\u96f7\u8499\uff1a\u563f\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u53ef\u89c6\u5316\u5de5\u5177\u7f16\u8f91\u4eea\u8868\u76d8\uff1f\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4f9d\u8d56\u4e8e\u5176\u4ed6\u4eba\u53ef\u7528\u5e76\u8bb0\u4f4f\u6240\u6709\u7b54\u6848\u3002\u5728\u4f60\u5f97\u5230\u7b54\u6848\u4e4b\u524d\uff0c\u4f60\u7684\u6d41\u7a0b\u7ecf\u5e38\u88ab\u6253\u65ad\uff0c\u6ca1\u6709\u4efb\u4f55\u8fdb\u5c55\u7684\u9014\u5f84\u3002\u4f60\u4e0d\u80fd\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u5f39\u6027\u5de5\u4f5c\u65f6\u95f4\u4e0a\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u8ba9\u6240\u6709\u7684\u56e2\u961f\u6210\u5458\u968f\u65f6\u5f85\u547d\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u63cf\u8ff0\u4e86\u4e3a\u4ec0\u4e48\u5728\u6211\u770b\u6765\uff0c\u50cf\u6211\u4eec\u5728\u529e\u516c\u5ba4\u6240\u505a\u7684\u90a3\u6837\uff0c\u540c\u6b65\u901a\u4fe1\u4e0d\u662f\u8fdc\u7a0b\u901a\u4fe1\u7684\u6700\u4f73\u9009\u62e9\u3002\u7136\u540e\uff0c\u6211\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u7f16\u5199\u8fdb\u884c\u5f02\u6b65\u901a\u4fe1\u6765\u4fee\u590d\u5927\u591a\u6570\u540c\u6b65\u901a\u4fe1\u7684\u7f6a\u9b41\u7978\u9996\u3002\n\u540c\u6b65\u901a\u4fe1\u867d\u7136\u8fdc\u7a0b\u4f9d\u8d56\u4e8e\u804a\u5929\u548c\u89c6\u9891\u901a\u8bdd\uff0c\u4f46\u5b83\u4eec\u90fd\u662f\u8bd5\u56fe\u6a21\u4eff\u529e\u516c\u5ba4\u5bf9\u8bdd\u7684\u6b21\u8981\u901a\u4fe1\u5de5\u5177\u3002\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\n\u540c\u6b65\u901a\u4fe1\u65e2\u7d2f\u4eba\uff0c\u53c8\u91cd\u590d\uff0c\u800c\u4e14\u5265\u593a\u4e86\u8fdc\u7a0b\u5de5\u4f5c\u7684\u5927\u90e8\u5206\u597d\u5904(\u5982\u5f39\u6027\u5de5\u4f5c\u65f6\u95f4\u3001\u4ece\u4e16\u754c\u5404\u5730\u62db\u8058\u7b49)\u3002\n\u5f02\u6b65\u901a\u4fe1\u5141\u8bb8\u65e0\u4e2d\u65ad\u5730\u81ea\u6211\u53d1\u73b0\uff1a\u65e0\u9700\u4e0a\u4e0b\u6587\u5207\u6362\u5373\u53ef\u8fdb\u5165\u6df1\u5ea6\u805a\u7126\u4f1a\u8bdd\uff0c\u4ece\u800c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002\n\u5f02\u6b65\u901a\u4fe1\u66f4\u597d\u5730\u4fdd\u5b58\u4e86\u516c\u53f8\u77e5\u8bc6\uff1a\u6559\u7a0b\u548c\u6307\u5357\u4e0d\u65ad\u5b8c\u5584\uff0c\u56e0\u6b64\u4eba\u4eec\u4e0d\u4f1a\u5728\u540c\u4e00\u4ef6\u4e8b\u4e0a\u6d6a\u8d39\u65f6\u95f4\u4e24\u6b21\u3002\n\u4f60\u6709\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u901a\u8fc7\u5199\u4f5c\u83b7\u5f97\u77e5\u8bc6\uff0c\u800c\u4e0d\u662f\u5728\u79c1\u4eba\u7535\u8bdd\u6216\u804a\u5929\u5ba4\u4e2d\u5f88\u5feb\u5c31\u4f1a\u4e22\u5931\u7684\u79c1\u4eba\u77e5\u8bc6", "note_en": "The remote work environment is different from the office. Different environments call for different communication systems. A communication system that is adapted to the remote work reality can unlock amazing benefits: (even) better productivity, a competitive advantage in the long run and much a better work-life balance on top of it all.\n  Asynchronous written communication is the tool best suited for remote work. We are so used to talking to each other in the office, expecting immediate responses in work chat, and having meetings all day, that we tried to replicate that at home with zoom and slack.\n  Writing to each other in slack while expecting immediate answers, or setting up multiple zoom meetings every day will fail with remote work in the long run.\n     Photo by Goran Ivos on Unsplash    Using synchronous chats such as slack or Microsoft teams is not like talking to a teammate that sits next to you:  It&#39;s harder to initiate. When it&#39;s a teammate beside to you, just talking is far easier than typing a question. This leads to quick and easy thing being dragged on longer than necessary because the teammate will first try to resolve it himself.\n  It&#39;s too easy to initiate. When it&#39;s someone from different department, on the office he will usually first check up with his own teammates. But now, it&#39;s as easy to go directly to the source. So you&#39;ll be spammed.\n  Everybody expects an immediate response. It&#39;s a chat. It&#39;s designed to give us the feel of urgency. Even when it is not really urgent.\n  You&#39;ll lose your history. Even if you invest time in explaining a concept of the company to someone in the chat, it&#39;s not saved anywhere in an organized or discoverable way. It&#39;ll be lost in the chat logs. Soon enough, you&#39;ll find yourself explaining the same stuff again.\n  It promotes secrecy. People are naturally shy, and prefer not to show &#34;weakness&#34; to other teammates. So they will keep their questions and updates mostly in private chats or private rooms.\n Video meetings are problematic too:  Only one person can talk at a time. In reality, more than one can talk and still everyone will be able to understand. This is a software limitation.\n  No side-talks. In reality, in big meetings you might whisper something to a sub-section group of people in the meeting. You can&#39;t do this in video meetings.\n  This all leads to video meetings feeling more like a lecture. A true discussion is harder to facilitate (although not impossible).\n  Video calls are tiring. The camera is focused on your face and everyone sees you all the time. You can&#39;t lose focus or wander away to give your mind some rest.\n    Even if we discard the specific tools of chats and video calls, we still have the underlying problems of synchronous communication. That is, communication that expects the other participants to respond within a very limited time span.\n    When everyone is expected to be available at any point, the cost of interrupting someone and getting an immediate answer is lower than looking for an answer yourself. Be it in the 3rd party documentation or the company&#39;s internal documentation.\n  That is, if internal documentation even exists. When everybody expects to be asked about things anyway, why go through the effort of properly documenting anything?\n  Planning is another culprit. Most people will not go through proper in-depth planning for their tasks ahead of time. They&#39;ll prefer to define the end goal, and discover issues and details as they go. They know they will never get stuck, people will answer their questions on time.\n  This creates a culture of interruptions in the organization. It feeds itself so deeply, that the organization can&#39;t really operate without interruption. Since the organization as a whole is dependent on that, it becomes part of the culture. Once you have culture of interruptions, even the best communicator in the world will not be able to change it.\n  Work time flexibility will be broken too. Since everyone is dependent on everyone else to be available for interruptions within the work day, you have a work day.\n  You must be in sync about your work day times with everyone else. You therefore give up the ability for real work time flexibility.\n  Working from home and dreaming on picking up your children at noon, hangout with them and get back to some work later in the night? Forget about it. You will get stuck on something very quickly and no one will be there for you. Not to mention you will get your colleagues stuck as you won&#39;t answer their questions on the afternoon.\n  Real remote is out of the question too. You can&#39;t realistically have team members from the US and Europe and India together when you need everyone to be available at the same time.\n      Async writing is different from chat messages. It lives longer, targets more potential audience and is easy to discover.\n  To live longer, the text needs to be aware of a larger reader group context. Where chats often consider just one/two readers that have the context to understand what you talk about, the long live text should consider entire group of potential readers. Now, and at some point in the future.\n  For the text live longer and target wider audience, it needs to assume less pre-existing reader context. Chat messages target one/two readers, at a specific time. So they assume those readers have the current context that will be clear to them specifically.\n  Async writing don&#39;t assume a specific person context nor does it assume &#34;current&#34; events knowledge. Surprisingly, that doesn&#39;t necessarily make the text longer or harder to write.\n  As an example, we consider a scenario where we have a DB issue in our team in which the MySQL instance fails occasionally due to out-of-memory errors. Writing just for your team, they know what is the issue now and what DB it is. Others, might not know which DB have the issue (say you also use mongodb somewhere) not they know what the issue is.\n  A message sufficient for chat context that will not live long might be: &#34;I&#39;ll fix the DB today&#34;. Async text equivalent will be to log the issue in a system, mark it as &#34;working on it&#34; for today with the text &#34;MySQL out of memory issue&#34;.\n  The text is not longer, yet it has all the context any outsider might need to understand what is going on without the need to contact anyone asking &#34;What DB we have issue on?&#34; &#34;What is the issue?&#34; &#34;Since when do we know about it?&#34; &#34;Who&#39;s on it?&#34; etc&#39; etc&#39;.\n    Discoverability is the next essential part of this communication system. You need your writings to be easily discoverable for everyone who might need them in the future.\n  Relying on full-text search is usually not a good idea. You need organization system in place. Where tasks description go? Where the system design documents go? Do they all live in one place or per project? Or maybe per department in large organizations?\n  Every company have some sort of system, usually guided by their knowledge sharing too. Be it Jira, Basecamp, Monday or anything else. You just have to make sure the system is consistent and tight enough such that new people in a project will be able to self discover everything they need.\n  Taking the MySQL issue example here too, let&#39;s say a new team member gets the task. The task is marked with tags &#34;database&#34;, &#34;infrastructure&#34;. He can follow the &#34;database&#34; tag to find recent past tasks done, to see if there are any obvious suspects.\n  He finds none, so he decides to check if some data analyst did something spooky. He goes to the tasks list of the data analyst teams, finds tag &#34;new dashboard&#34;. Those look like a great lead, he find a new dashboard task was done the day the issue started.\n  Now he needs to check out this dashboard, but it uses a visualization system he is not familiar with. He heads to the data team wiki, where he finds a document on &#34;how we use our visualization system&#34;. He sets up his credentials and gets in to explore the queries.\n  You see where I&#39;m getting with it. When everything is easily accessible and obvious, you can focus on the task itself without interruption to the flow.\n Imagine a scenario where in each step you&#39;d have to stop and ask someone:  Ramon from data infrastructure: &#34;Hey, how do we use our visualization tool to edit a dashboard?&#34;\n  In this case, you are dependent on other to be available and to remember all the answers. Your flow is constantly interrupted without any way to progress before you get answers. You can&#39;t focus on flexible work time, because you must have all the team members constantly available.\n    In this essay I described why in my opinion synchronous communication as we use to do from the office is not optimal for remote. Then I demonstrated how async communication via writing can fix most of the synchronous communication culprits.\n  Synchronous communication while remote rely on chats and video calls, both are inferior communication tools trying to mimic office conversations. But they are not.\n  Synchronous communication is tiring, repetitive and takes away most of the remote work benefits (such as flexible hours, hiring from all over the world etc&#39;)\n  Async communication allows for self discovery without interruptions:  You can get into &#34;deep focus&#34; session without context switching that allows for better productivity\n  Async communication preserve the company knowledge better:  Tutorials and guides are constantly refined, so people won&#39;t waste time on the same thing twice\n  You have one place for knowledge via writing, instead of private knowledge in private calls or chat room that is lost soon after", "posttime": "2020-06-20 02:39:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fdc\u7a0b\u5de5\u4f5c,\u4ea4\u6d41,communication,\u95ee\u9898", "title": "\u4e66\u9762\u4ea4\u6d41\u662f\u8fdc\u7a0b\u5de5\u4f5c\u7684\u8d85\u7ea7\u529b\u91cf", "title_en": "Written communication is remote work super power", "transed": 1, "url": "https://snir.dev/blog/remote-async-communication/", "via": "", "real_tags": ["\u8fdc\u7a0b\u5de5\u4f5c", "\u4ea4\u6d41", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "bf91677ab7224f77b8990d3c4586a134.jpg", "infoid": 1007303, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u81ea\u7136\u201d\u6742\u5fd7\u7684\u4e00\u7bc7\u65b0\u6587\u7ae0\u63cf\u8ff0\u4e86\u4e00\u4e2a1\u4ebf\u5e74\u524d\u7684\u722c\u884c\u866b\u86cb\u5316\u77f3\u7684\u53d1\u73b0\uff0c\u5b83\u7684\u5916\u58f3\u67d4\u8f6f\u575a\u97e7\uff0c\u51e0\u4e4e\u6709\u4e00\u82f1\u5c3a\u957f\u3002\u8fd9\u662f\u8fc4\u4eca\u53d1\u73b0\u7684\u7b2c\u4e8c\u5927\u86cb\u5316\u77f3(\u4ec5\u6b21\u4e8e\u8c61\u9e1f\u7684\u86cb\uff0c\u8c61\u9e1f\u7684\u86cb\u7684\u575a\u786c\u5916\u58f3\u5927\u7ea6\u539a5\u500d)\uff0c\u4e5f\u662f\u5728\u5357\u6781\u6d32\u5927\u9646\u53d1\u73b0\u7684\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684\u5316\u77f3\u3002\n\u8fd9\u679a\u67096800\u4e07\u5e74\u5386\u53f2\u7684\u86cb\u88ab\u79f0\u4e3a\u5357\u6781\u6d32\u5f69\u86cb\uff0c\u662f\u8fc4\u4eca\u5728\u5357\u6781\u6d32\u53d1\u73b0\u7684\u7b2c\u4e00\u679a\u5316\u77f3\u86cb\uff0c\u5176\u5927\u5c0f\u4ec5\u6b21\u4e8e\u9a6c\u8fbe\u52a0\u65af\u52a0\u706d\u7edd\u8c61\u9e1f\u7684\u86cb\uff0c\u4e5f\u662f\u5728\u6d77\u6d0b\u6c89\u79ef\u7269\u4e2d\u53d1\u73b0\u7684\u4e3a\u6570\u4e0d\u591a\u7684\u5316\u77f3\u86cb\u4e4b\u4e00\u3002\u5fb7\u514b\u8428\u65af\u5927\u5b66\u5965\u65af\u6c40\u5206\u6821\u7684\u6731\u8389\u5a05\u00b7\u514b\u62c9\u514b(Julia Clarke)\u8bf4\uff1a\u201c\u7b2c\u4e00\u4e2a\u6765\u81ea\u5357\u6781\u6d32\u7684\u9e21\u86cb\u6b8b\u7559\u7269\u51e0\u4e4e\u662f\u4e00\u4e2a\u4fdd\u5b58\u5b8c\u597d\u7684\u663e\u5fae\u7ed3\u6784\u7684\u9e21\u86cb\uff0c\u8fd9\u6709\u70b9\u75af\u72c2\u3002\u201d\n\u5728\u663e\u5fae\u955c\u4e0b\uff0c\u5357\u6781\u6a44\u6984\u4e0d\u4ec5\u7f3a\u5c11\u786c\u58f3\u86cb\u58f3\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u8fd8\u7f3a\u5c11\u786c\u58f3\u9e21\u86cb\u7684\u6bdb\u5b54\uff0c\u8fd9\u8868\u660e\u8fd9\u4e2a\u5927\u9e21\u86cb\u662f\u8f6f\u7684\u3002\n\u5728\u4ea7\u5375\u65f6\uff0c\u5927\u578b\u6d77\u6d0b\u722c\u884c\u52a8\u7269\u9a6c\u8428\u9f99\u751f\u6d3b\u5728\u5316\u77f3\u86cb\u88ab\u57cb\u846c\u7684\u5357\u6781\u6c34\u57df\u3002\u5728\u8ddd\u79bb\u73b0\u573a\u4e0d\u5230700\u82f1\u5c3a\u7684\u5730\u65b9\u53d1\u73b0\u4e86\u4e00\u53ea\u9a6c\u8d5b\u9f99\u7684\u9aa8\u5934\uff0c\u8fd9\u8868\u660e\u8fd9\u4e2a\u86cb\u53ef\u80fd\u5c5e\u4e8e\u8fd9\u79cd20\u82f1\u5c3a\u957f\u7684\u6e38\u6cf3\u722c\u884c\u52a8\u7269\u3002\n\u4e0d\u8fc7\uff0c\u771f\u6b63\u8ba9\u4eba\u5403\u60ca\u7684\u662f\uff1a\u79d1\u5b66\u5bb6\u4eec\u5728\u9e21\u86cb\u91cc\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u9aa8\u5934\u3002\u867d\u7136\u4ed6\u4eec\u53ef\u80fd\u8ba4\u4e3a\u5b83\u5c5e\u4e8e\u9a6c\u8428\u9f99\u6216\u5176\u4ed620\u591a\u82f1\u5c3a\u957f\u7684\u6e38\u6cf3\u722c\u884c\u52a8\u7269\uff0c\u4f46\u6839\u636e\u4ed6\u4eec\u76ee\u524d\u5bf9\u5229\u7ef4\u5766\u7684\u4e86\u89e3\uff0c\u8fd9\u4e0d\u4f1a\u51dd\u80f6\u5316\u3002\u6765\u81ea\u81ea\u7136(\u589e\u52a0\u4e86\u5f3a\u8c03)\uff1a\n\u4ea7\u5375\u52a8\u7269\u7684\u8eab\u4efd\u5c1a\u4e0d\u6e05\u695a\uff0c\u4f46\u8fd9\u4e9b\u4fdd\u5b58\u4e0b\u6765\u7684\u5f62\u6001\u4e0e\u9644\u8fd1\u53d1\u73b0\u7684\u9a6c\u8d5b\u9f99(\u5927\u578b\u6d77\u751f\u9cde\u9f99)\u7684\u9aa8\u9abc\u9057\u9ab8\u4e00\u81f4\u3002\u5b83\u4eec\u4e0e\u63cf\u8ff0\u7684\u5927\u5c0f\u76f8\u4f3c\u7684\u6050\u9f99\u86cb\u7684\u5f62\u6001\u4e0d\u4e00\u81f4\u3002\u5bf9259\u4e2a\u9cde\u9f99\u7269\u79cd\u548c\u5916\u90e8\u7c7b\u7fa4\u7684\u7279\u5f81\u8fdb\u884c\u7684\u7cfb\u7edf\u53d1\u80b2\u5206\u6790\u8868\u660e\uff0c\u8fd9\u4e2a\u86cb\u5c5e\u4e8e\u4e00\u4e2a\u81f3\u5c117\u7c73\u957f\u7684\u4e2a\u4f53\uff0c\u5047\u8bbe\u5b83\u662f\u4e00\u79cd\u5de8\u5927\u7684\u6d77\u6d0b\u722c\u884c\u52a8\u7269\uff0c\u4e4b\u524d\u6240\u6709\u7684\u5206\u652f\u90fd\u88ab\u8ba4\u4e3a\u662f\u6d3b\u7740\u51fa\u751f\u7684\u3002\u5982\u6b64\u5927\u7684\u86cb\uff0c\u86cb\u58f3\u76f8\u5bf9\u8f83\u8584\uff0c\u53ef\u80fd\u53cd\u6620\u4e86\u4e0e\u4f53\u578b\u3001\u4e0e\u5de8\u4eba\u75c7\u76f8\u5173\u7684\u751f\u6b96\u6295\u8d44\u4ee5\u53ca\u9cde\u9f99\u80ce\u751f\u76f8\u5173\u7684\u884d\u751f\u7ea6\u675f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f1a\u7acb\u5373\u4e0b\u86cb\u5e76\u5b75\u5316\u51fa\u201c\u9000\u5316\u201d\u7684\u86cb\u3002\n\u201c\u56fd\u5bb6\u5730\u7406\u201d\u6709\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5728\u963f\u6839\u5ef7\u5e73\u884c\u53d1\u73b0\u7684\u4e00\u4e2a\u57cb\u5728\u5730\u4e0b\u7684\u5de2\u7a74\u7684\u4e00\u4e9b\u7ec6\u8282(\u4e5f\u5145\u6ee1\u4e86\u8f6f\u58f3\u9e21\u86cb)\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e9b\u53d1\u73b0\u53ef\u80fd\u4f1a\u5bf9\u6050\u9f99\u7684\u80b2\u513f\u65b9\u6cd5\u4ea7\u751f\u5f71\u54cd\uff1b\u6216\u8005\u53ef\u80fd\u4f1a\u6311\u6218\u5173\u4e8e\u6050\u9f99\u548c\u7ffc\u9f99\u4e4b\u95f4\u533a\u522b\u7684\u73b0\u6709\u4fe1\u5ff5\u3002\n\u5357\u6781\u6d32\u665a\u767d\u57a9\u4e16\u7684\u4e00\u53ea\u5de8\u5927\u7684\u8f6f\u58f3\u86cb[Lucas J.Legendre\uff0cDavid Rubilar-Rogers\uff0cGrace M.Musser\uff0cSarah N.Davis\uff0cRodrigo A.Otero\uff0cAlexander O.Vargas&Amp\uff1bJulia A.Clarke/Nature]", "note_en": "A new article from\u00a0  Nature describes the discovery of a 100-million-year-old fossilized reptile egg with a soft, leathery shell that&#39;s nearly a foot long. It&#39;s the second-largest egg fossil ever discovered (after the egg of the  elephant bird, which had a hard shell about five times thicker), and also the first such discovery made on the continent of Antarctica.\n   The 68-million-year-old egg, called\u00a0 Antarcticoolithus bradyi, is the first fossil egg ever found in Antarctica, only outsized by the eggs of\u00a0 Madagascar\u2019s extinct elephant bird.\u00a0 Antarcticoolithus\u00a0is also one of the few fossil eggs ever found in marine sediment. \u201cFor the first egg remnant from Antarctica to be a nearly complete egg that has finely preserved microstructure is kind of insane,\u201d says Julia Clarke of UT Austin.\n  Under a microscope,\u00a0 Antarcticoolithus\u00a0not only lacked the internal structure of hard eggshells, but also the pores of hard-shelled eggs, suggesting the large egg was soft.\n At the time the egg was laid, large marine reptiles called mosasaurs lived in the Antarctic waters where the fossil egg was entombed. The bones of a mosasaur were found less than 700 feet from the site, suggesting the egg may have belonged to these 20-foot-long swimming reptiles.\n Here&#39;s the real kicker though: the scientists didn&#39;t find any bones inside of the egg. And while they\u00a0 think it would have belonged to a mosasaur, or some other 20-plus-foot-long swimming reptiles, that wouldn&#39;t gel with their current knowledge of those leviathans. From\u00a0  Nature(emphasis added):\n The identity of the animal that laid the egg is unknown, but these preserved morphologies are consistent with the skeletal remains of mosasaurs (large marine lepidosaurs) found nearby. They are not consistent with described morphologies of dinosaur eggs of a similar size class. Phylogenetic analyses of traits for 259 lepidosaur species plus outgroups suggest that the egg belonged to an individual that was at least 7 metres long, hypothesized to be a giant marine reptile,  all clades of which have previously been proposed to show live birth.  Such a large egg with a relatively thin eggshell may reflect derived constraints associated with body shape, reproductive investment linked with gigantism, and lepidosaurian viviparity, in which a \u2018vestigial\u2019 egg is laid and hatches immediately.\n National Geographic has a lot more information, including some details about a parallel discovery of a buried nest in Argentina (also full of  soft shell eggs). Combined, these discoveries could have implications on methods of dinosaur parenting; or possibly challenge existing beliefs about the distinctions between dinosaurs and pterosaurs.\n  A giant soft-shelled egg from the Late Cretaceous of Antarctica [Lucas J. Legendre, David Rubilar-Rogers, Grace M. Musser, Sarah N. Davis, Rodrigo A. Otero, Alexander O. Vargas &amp; Julia A. Clarke / Nature]", "posttime": "2020-06-20 02:39:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u73b0,soft", "title": "\u5357\u6781\u6d32\u53d1\u73b0\u5df2\u77e5\u6700\u5927\u7684\u8f6f\u58f3\u722c\u884c\u52a8\u7269\u5375", "title_en": "Largest known soft-shell reptile egg discovered in Antarctica", "transed": 1, "url": "https://boingboing.net/2020/06/18/largest-known-soft-shell-repti.html", "via": "", "real_tags": ["\u53d1\u73b0", "soft"]}, {"category": "", "categoryclass": "", "imagename": "680c65ea5b70d63b713ba952b59f8756.jpg", "infoid": 1007302, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5468\u524d\uff0c\u5f53\u5168\u56fd\u5404\u5730\u7206\u53d1\u6297\u8bae\u6d3b\u52a8\uff0c\u4ee5\u56de\u5e94\u8b66\u5bdf\u51fb\u6bd9\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u7684\u4e8b\u4ef6\u65f6\uff0c\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerberg)\u5728\u4ed6\u7684Facebook\u9875\u9762\u4e0a\u5199\u4e86\u4e00\u7bc7\u53d1\u81ea\u5185\u5fc3\u7684\u957f\u6587\uff0c\u8c34\u8d23\u79cd\u65cf\u504f\u89c1\uff0c\u5e76\u5ba3\u79f0\u201c\u9ed1\u4eba\u7684\u751f\u547d\u5f88\u91cd\u8981\u201d\u3002Facebook\u9996\u5e2d\u6267\u884c\u5b98\u624e\u514b\u4f2f\u683c\u8fd8\u5ba3\u5e03\uff0c\u8be5\u516c\u53f8\u5c06\u5411\u79cd\u65cf\u6b63\u4e49\u7ec4\u7ec7\u6350\u8d601000\u4e07\u7f8e\u5143\u3002\nTwitter\u4e5f\u8868\u73b0\u51fa\u4e86\u7c7b\u4f3c\u7684\u652f\u6301\uff0c\u8be5\u516c\u53f8\u5c06Twitter\u7684\u5b98\u65b9\u7b80\u4ecb\u6539\u4e3a\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\uff0c\u9996\u5e2d\u6267\u884c\u5b98\u6770\u514b\u00b7\u591a\u5c14\u897f(Jack Dorsey)\u627f\u8bfa\u5411\u524dNFL\u56db\u5206\u536b\u79d1\u6797\u00b7\u51ef\u73c0\u5c3c\u514b(Colin Kaepernick)\u521b\u529e\u7684\u4e00\u4e2a\u53cd\u79cd\u65cf\u4e3b\u4e49\u7ec4\u7ec7\u6350\u8d60300\u4e07\u7f8e\u5143\u3002\nYouTube\u4e5f\u52a0\u5165\u4e86\u6297\u8bae\u6d3b\u52a8\u3002\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u82cf\u73ca\u00b7\u6c83\u897f\u57fa(Susan Wojcicki)\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff0c\u201c\u6211\u4eec\u76f8\u4fe1\u9ed1\u4eba\u7684\u751f\u547d\u5f88\u91cd\u8981\uff0c\u6211\u4eec\u90fd\u9700\u8981\u91c7\u53d6\u66f4\u591a\u63aa\u65bd\u6765\u6d88\u9664\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u3002\u201dYouTube\u8fd8\u5ba3\u5e03\u5c06\u4e3a\u9ed1\u4eba\u521b\u4f5c\u8005\u8bbe\u7acb1\u4ebf\u7f8e\u5143\u7684\u57fa\u91d1\u3002\n\u7b97\u662f\u5427\u3002\u95ee\u9898\u662f\uff0c\u867d\u7136\u8fd9\u4e9b\u5c55\u793a\u652f\u6301\u7684\u610f\u56fe\u662f\u597d\u7684\uff0c\u4f46\u5b83\u4eec\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e9b\u516c\u53f8\u81ea\u5df1\u7684\u4ea7\u54c1-Facebook\u3001Twitter\u548cYouTube-\u88ab\u79cd\u65cf\u4e3b\u4e49\u8005\u548c\u515a\u6d3e\u6311\u8845\u8005\u6210\u529f\u5730\u6b66\u5668\u5316\u7684\u65b9\u5f0f\uff0c\u5e76\u88ab\u7528\u6765\u7834\u574f\u9ed1\u4eba\u751f\u547d\u4e5f\u662f(Black Lives Matter)\u548c\u5176\u4ed6\u793e\u4f1a\u6b63\u4e49\u8fd0\u52a8\u3002\u8fd9\u5c31\u597d\u50cf\u9ea6\u5f53\u52b3\u3001\u6c49\u5821\u738b\u548c\u5854\u53ef\u949f\u7684\u8001\u677f\u4eec\u90fd\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u901a\u8fc7\u5411\u7d20\u98df\u5408\u4f5c\u793e\u6350\u6b3e\u6765\u5bf9\u6297\u80a5\u80d6\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u964d\u4f4e\u4ed6\u4eec\u7684\u5361\u8def\u91cc\u542b\u91cf\u3002\n\u6709\u65f6\u5f88\u96be\u8bb0\u4f4f\uff0c\u4f46\u793e\u4ea4\u5a92\u4f53\u66fe\u7ecf\u662f\u88ab\u538b\u8feb\u548c\u8fb9\u7f18\u5316\u7684\u5de5\u5177\u3002\u5728\u5f00\u7f57\u3001\u5bc6\u82cf\u91cc\u5dde\u5f17\u683c\u68ee\u548c\u5df4\u5c14\u7684\u6469\u7684\u89e3\u653e\u5e7f\u573a\uff0c\u6d3b\u52a8\u4eba\u58eb\u4f7f\u7528Twitter\u548cFacebook\u7ec4\u7ec7\u793a\u5a01\u6d3b\u52a8\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684\u4fe1\u606f\u4f20\u64ad\u51fa\u53bb\u3002\n\u4f46\u8fd1\u5e74\u6765\uff0c\u53f3\u7ffc\u53cd\u52a8\u8fd0\u52a8\u626d\u8f6c\u4e86\u5c40\u9762\u3002\u73b0\u5728\uff0c\u8fd9\u4e9b\u5e73\u53f0\u4e0a\u4e00\u4e9b\u58f0\u97f3\u6700\u5927\u3001\u6700\u6210\u719f\u7684\u58f0\u97f3\u5c5e\u4e8e\u4fdd\u5b88\u6d3e\u8bc4\u8bba\u5458\u548c\u6709\u507f\u6311\u8845\u8005\uff0c\u4ed6\u4eec\u7684\u76ee\u7684\u662f\u5632\u5f04\u548c\u98a0\u8986\u793e\u4f1a\u6b63\u4e49\u8fd0\u52a8\uff0c\u800c\u4e0d\u662f\u652f\u6301\u5b83\u4eec\u3002\n\u5176\u7ed3\u679c\u662f\u4e00\u79cd\u626d\u66f2\u7684\u4e16\u754c\u89c2\uff0c\u4e0e\u5b9e\u9645\u7684\u516c\u4f17\u60c5\u7eea\u4e0d\u7b26\u3002\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u652f\u6301\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\uff0c\u4f46\u4f60\u4e0d\u4e00\u5b9a\u4f1a\u901a\u8fc7\u6d4f\u89c8\u4f60\u7684\u793e\u4ea4\u5a92\u4f53\u6e90\u5c31\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\n\u4f8b\u5982\uff0c\u5728Facebook\u4e0a\uff0c\u624e\u514b\u4f2f\u683c\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u58f0\u660e\u5f53\u5929\u6700\u53d7\u6b22\u8fce\u7684\u5e16\u5b50\u662f\u53f3\u7ffc\u6d3b\u52a8\u5bb6\u574e\u8fea\u65af\u00b7\u6b27\u6587\u65af(Candace Owens)\u53d1\u5e03\u7684\u4e00\u6bb518\u5206\u949f\u7684\u89c6\u9891\u3002\u5728\u89c6\u9891\u4e2d\uff0c\u8eab\u4e3a\u9ed1\u4eba\u7684\u6b27\u6587\u65af\u5bf9\u6297\u8bae\u6d3b\u52a8\u8fdb\u884c\u4e86\u62a8\u51fb\uff0c\u79f0\u6709\u79cd\u65cf\u504f\u89c1\u7684\u8b66\u52a1\u7406\u5ff5\u662f\u201c\u865a\u5047\u7684\u53d9\u8ff0\u201d\uff0c\u5e76\u5632\u7b11\u5f17\u6d1b\u4f0a\u5fb7\u662f\u4e00\u4e2a\u201c\u53ef\u6015\u7684\u4eba\u201d\u3002\u5979\u7684\u72ec\u767d\u88ab\u53f3\u7ffc\u5a92\u4f53\u5206\u4eab-\u6709\u51e0\u4e2a\u4eba\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u770b\u8fc7\uff0c\u56e0\u4e3aFacebook\u7684\u7b97\u6cd5\u63a8\u8350\u7ed9\u4ed6\u4eec-\u5df2\u7ecf\u83b7\u5f97\u4e86\u8fd11\u4ebf\u7684\u70b9\u51fb\u91cf\u3002\n\u6b27\u6587\u65af\u662f\u4e00\u540d\u8fde\u73af\u72af\u7f6a\u8005\uff0c\u4ee5\u6563\u5e03\u9519\u8bef\u4fe1\u606f\u548c\u6311\u8d77\u515a\u6d3e\u4ec7\u6068\u800c\u95fb\u540d\u3002(\u5728\u5979\u9f13\u52b1\u8ffd\u968f\u8005\u8fdd\u53cd\u5c45\u5bb6\u547d\u4ee4\u540e\uff0c\u5979\u7684Twitter\u8d26\u6237\u4eca\u5e74\u88ab\u6682\u505c\uff0cFacebook\u5df2\u7ecf\u5728\u5979\u7684\u51e0\u4e2a\u5e16\u5b50\u4e0a\u8d34\u4e0a\u4e86\u4e8b\u5b9e\u6838\u67e5\u6807\u7b7e\u3002)\u3002\u4f46\u5979\u4ecd\u7136\u53ef\u4ee5\u4fae\u8fb1\u8b66\u5bdf\u6740\u5bb3\u7684\u53d7\u5bb3\u8005\uff0c\u800c\u4e0d\u53d7\u60e9\u7f5a\uff0c\u8ba9\u5979\u5728Facebook\u4e0a\u7684\u8fd1400\u4e07\u7c89\u4e1d\u900d\u9065\u6cd5\u5916\u3002\u5176\u4ed6\u9ad8\u8c03\u7684\u4fdd\u5b88\u6d3e\u8bc4\u8bba\u5458\uff0c\u5982\u7279\u4f26\u65af\u00b7K\u00b7\u5a01\u5ec9\u59c6\u65af(Terence K.Williams)\u3001\u672c\u00b7\u590f\u76ae\u7f57(Ben Shapiro)\u548c\u970d\u5947\u6e29\u65af\u592b\u5987(Hodgetwin)\u4e5f\u662f\u5982\u6b64\uff0c\u4ed6\u4eec\u5728\u8fc7\u53bb\u51e0\u5468\u90fd\u6709\u53cd\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u7684\u5e16\u5b50\u5728\u7f51\u4e0a\u75af\u4f20\u3002\nFacebook\u65d7\u4e0b\u6570\u636e\u5e73\u53f0CrowdTangle\u7684\u6570\u636e\u663e\u793a\uff0c\u8fc7\u53bb\u4e00\u4e2a\u6708\uff0cFacebook\u4e0a\u5206\u4eab\u6b21\u6570\u6700\u591a\u768410\u6761\u5e16\u5b50\u4e2d\uff0c\u67097\u6761\u90fd\u5bf9\u8fd9\u573a\u8fd0\u52a8\u6301\u6279\u8bc4\u6001\u5ea6\u3002\u8fd9\u4e9b\u5e16\u5b50\u4e2d\u542b\u6709\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u7684\u77ed\u8bed\u3002(Facebook\u62e5\u6709\u7684Instagram\u4e0a\u7684\u60c5\u7eea\u4e00\u76f4\u6bd4\u8f83\u6709\u5229\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u7684\u7528\u6237\u503e\u5411\u4e8e\u66f4\u5e74\u8f7b\u3001\u66f4\u81ea\u7531\u3002)\u3002\nFacebook\u62d2\u7edd\u7f6e\u8bc4\u3002\u5468\u56db\uff0c\u8be5\u516c\u53f8\u5ba3\u5e03\u5c06\u82b1\u8d392\u4ebf\u7f8e\u5143\u652f\u6301\u9ed1\u4eba\u62e5\u6709\u7684\u4f01\u4e1a\u548c\u7ec4\u7ec7\uff0c\u5e76\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u4e2d\u589e\u52a0\u4e00\u4e2a\u201c\u63d0\u5347\u9ed1\u4eba\u58f0\u97f3\u201d\u7684\u90e8\u5206\uff0c\u4ee5\u7a81\u51fa\u9ed1\u4eba\u7684\u6545\u4e8b\uff0c\u5e76\u5206\u4eab\u6559\u80b2\u8d44\u6e90\u3002\n\u591a\u5e74\u6765\uff0cTwitter\u4e00\u76f4\u662f\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u7684\u652f\u6301\u8005--\u8fd8\u8bb0\u5f97\u591a\u5c14\u897f\u7684\u5f17\u683c\u68ee\u4e4b\u884c\u5417\uff1f--\u4f46\u5b83\u4e5f\u5bf9\u79cd\u65cf\u4e3b\u4e49\u8005\u548c\u504f\u6267\u5206\u5b50\u5229\u7528\u5176\u5e73\u53f0\u717d\u52a8\u52a8\u4e71\u6709\u95ee\u9898\u3002\u4e0a\u4e2a\u6708\uff0c\u8be5\u516c\u53f8\u53d1\u73b0\uff0c\u4e00\u4e2a\u81ea\u79f0\u4ee3\u8868\u5168\u56fd\u53cd\u8db3\u8054\u7ec4\u7ec7\u7684Twitter\u8d26\u6237\u662f\u7531\u4e00\u7fa4\u5192\u5145\u5de6\u7ffc\u6fc0\u8fdb\u5206\u5b50\u7684\u767d\u4eba\u6c11\u65cf\u4e3b\u4e49\u8005\u8fd0\u8425\u7684\u3002(\u8be5\u8d26\u53f7\u88ab\u6682\u505c\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u5b83\u547c\u5401\u66b4\u529b\u7684\u63a8\u6587\u88ab\u5e7f\u6cdb\u5206\u4eab\u3002)\u3002\u63a8\u7279\u7684\u70ed\u95e8\u8bdd\u9898\u4fa7\u680f\u7ecf\u5e38\u88ab\u8bd5\u56fe\u52ab\u6301\u5728\u7ebf\u5bf9\u8bdd\u7684\u5de8\u9b54\u73a9\u5f04\uff0c\u4e0a\u9762\u5145\u65a5\u7740#WhiteLivesMatter\u548c#Whiteoutwewen\u661f\u671f\u4e09\u8fd9\u6837\u7684\u717d\u52a8\u6027\u6807\u7b7e\uff0c\u8fd9\u5f80\u5f80\u662f\u6781\u53f3\u7ffc\u6781\u7aef\u5206\u5b50\u534f\u540c\u884c\u52a8\u7684\u7ed3\u679c\u3002\n\u63a8\u7279\u53d1\u8a00\u4eba\u5e03\u5170\u767b\u00b7\u535a\u5c14\u66fc(Brandon Borrman)\u8868\u793a\uff1a\u201c\u6839\u636e\u6211\u4eec\u7684\u66b4\u529b\u6781\u7aef\u7ec4\u7ec7\u653f\u7b56\uff0c\u6211\u4eec\u5df2\u7ecf\u62ff\u4e0b\u4e86\u6570\u767e\u4e2a\u7ec4\u7ec7\uff0c\u5e76\u7ee7\u7eed\u6267\u884c\u6211\u4eec\u6bcf\u5929\u5728\u4e16\u754c\u5404\u5730\u6253\u51fb\u4ec7\u6068\u884c\u4e3a\u7684\u653f\u7b56\u3002\u4ece#BlackLivesMatter\u5230#MeToo\u548c#BringBackOurGirls\uff0c\u6211\u4eec\u516c\u53f8\u7684\u52a8\u529b\u6765\u81ea\u4e8e\u793e\u4f1a\u8fd0\u52a8\u7684\u529b\u91cf\uff0c\u4ee5\u5e26\u6765\u6709\u610f\u4e49\u7684\u793e\u4f1a\u53d8\u9769\u3002\u201c\u3002\nYouTube\u4e5f\u4e00\u76f4\u5728\u52aa\u529b\u4f7f\u5176\u516c\u53f8\u4ef7\u503c\u4e0e\u5176\u4ea7\u54c1\u7684\u5b9e\u9645\u8fd0\u8425\u65b9\u5f0f\u4fdd\u6301\u4e00\u81f4\u3002\u8fd1\u5e74\u6765\uff0c\u8be5\u516c\u53f8\u5728\u4ece\u641c\u7d22\u7ed3\u679c\u548c\u63a8\u8350\u4e2d\u5220\u9664\u9634\u8c0b\u8bba\u548c\u9519\u8bef\u4fe1\u606f\u65b9\u9762\u53d6\u5f97\u4e86\u5f88\u5927\u8fdb\u5c55\uff0c\u4f46\u5b83\u8fd8\u6ca1\u6709\u5b8c\u5168\u89e3\u51b3\u591a\u5e74\u6765\u5176\u63a8\u52a8\u8fb9\u754c\u7684\u6587\u5316\u548c\u81ea\u7531\u653e\u4efb\u653f\u7b56\u5bfc\u81f4\u79cd\u65cf\u5206\u88c2\u7684\u65b9\u5f0f\u3002\n\u4f8b\u5982\uff0c\u622a\u81f3\u672c\u5468\uff0cYouTube\u4e0a\u70b9\u51fb\u91cf\u6700\u9ad8\u7684\u5173\u4e8e\u9ed1\u4eba\u751f\u6d3b\u4e5f\u662f\u547d\u7684\u89c6\u9891\u4e0d\u662f\u6297\u8bae\u6216\u8b66\u5bdf\u6740\u4eba\u7684\u955c\u5934\uff0c\u800c\u662f\u8fd9\u4f4d\u75c5\u6bd2\u5f0f\u6076\u4f5c\u5267\u5236\u9020\u8005\u3001\u524d\u5171\u548c\u515a\u56fd\u4f1a\u5019\u9009\u4eba\u4e54\u4f0a\u00b7\u8428\u62c9\u8fea\u8bfa(Joey Saladino)\u56db\u5e74\u524d\u7684\u4e00\u6b21\u201c\u793e\u4f1a\u5b9e\u9a8c\u201d\uff0c\u70b9\u51fb\u91cf\u5df2\u8fbe1400\u4e07\u6b21\u3002\u5728\u89c6\u9891\u4e2d\uff0c\u8428\u62c9\u8fea\u8bfa--\u4ed6\u5728YouTube\u4e0a\u7684\u5176\u4ed6\u7279\u6280\u5305\u62ec\u559d\u81ea\u5df1\u7684\u5c3f\u6db2\uff0c\u7a7f\u7740\u7eb3\u7cb9\u670d\u88c5\u53c2\u52a0\u7279\u6717\u666e\u7684\u96c6\u4f1a--\u5728\u4e00\u4e2a\u4ee5\u9ed1\u4eba\u4e3a\u4e3b\u7684\u793e\u533a\u4e3e\u7740\u201c\u6240\u6709\u751f\u547d\u90fd\u91cd\u8981\u201d\u7684\u6807\u8bed\u3002\nYouTube\u5973\u53d1\u8a00\u4eba\u5b89\u5fb7\u91cc\u4e9a\u00b7\u6cd5\u7ef4\u5c14(Andrea Faville)\u8bf4\uff0c\u8428\u62c9\u8fea\u8bfa\u7684\u89c6\u9891\u4eca\u5e74\u7684\u6d4f\u89c8\u91cf\u4e0d\u52305%\uff0c\u800c\u4e14\u8be5\u516c\u53f8\u7684\u7b97\u6cd5\u5e76\u6ca1\u6709\u5e7f\u6cdb\u63a8\u8350\u5b83\u3002\u8428\u62c9\u8fea\u8bfa\u6700\u8fd1\u5c06\u8fd9\u6bb5\u89c6\u9891\u8f6c\u53d1\u5230\u4e86Facebook\u4e0a\uff0c\u5728\u90a3\u91cc\u83b7\u5f97\u4e86\u6570\u767e\u4e07\u7684\u70b9\u51fb\u91cf\u3002\n\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u793e\u4ea4\u5a92\u4f53\u4ec5\u4ec5\u662f\u901a\u8fc7\u8ba9\u8b66\u5bdf\u66b4\u529b\u7684\u53d7\u5bb3\u8005\u6709\u53ef\u80fd\u88ab\u503e\u542c\uff0c\u5c31\u5e2e\u52a9\u4e86\u9ed1\u4eba\u7684\u751f\u6d3b\u53d8\u5f97\u91cd\u8981\u3002\u5982\u679c\u6ca1\u6709Facebook\u3001Twitter\u548cYouTube\uff0c\u6211\u4eec\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u5f17\u6d1b\u4f0a\u5fb7\u88ab\u6740\u7684\u89c6\u9891\uff0c\u4e5f\u4e0d\u4f1a\u77e5\u9053\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2(Breonna Taylor)\u3001\u827e\u54c8\u8fc8\u5fb7\u00b7\u963f\u8d1d\u91cc(Ahmaud Arberg)\u6216\u5176\u4ed6\u8b66\u5bdf\u66b4\u884c\u53d7\u5bb3\u8005\u7684\u540d\u5b57\u3002\u5168\u56fd\u5404\u5730\u6b63\u5728\u4e3e\u884c\u7684\u8bb8\u591a\u6297\u8bae\u6d3b\u52a8\u90fd\u662f\u4ee5Facebook\u7fa4\u7ec4\u548cTwitter\u5e16\u5b50\u7684\u5f62\u5f0f\u7ec4\u7ec7\u8d77\u6765\u7684\uff0c\u793e\u4ea4\u5a92\u4f53\u6709\u52a9\u4e8e\u4e3a\u8b66\u65b9\u521b\u9020\u66f4\u591a\u7684\u95ee\u8d23\u3002\n\u4f46\u8fd9\u4e9b\u5e73\u53f0\u4e0d\u4ec5\u4ec5\u662f\u6269\u97f3\u5668\u3002\u5b83\u4eec\u4e5f\u662f\u5168\u7403\u6027\u7684\u3001\u5b9e\u65f6\u7684\u6ce8\u610f\u529b\u7ade\u8d5b\uff0c\u8bb8\u591a\u7ecf\u9a8c\u4e30\u5bcc\u7684\u73a9\u5bb6\u90fd\u64c5\u957f\u901a\u8fc7\u91c7\u7528\u5938\u5f20\u7684\u89c2\u70b9\u6765\u6311\u8d77\u4e89\u8bae\u3002\u4ed6\u4eec\u660e\u767d\uff0c\u5982\u679c\u5168\u4e16\u754c\u90fd\u5728\u8c34\u8d23\u5f17\u6d1b\u4f0a\u5fb7\u88ab\u6740\uff0c\u90a3\u4e48\u4e00\u7bc7\u8bf4\u4ed6\u7f6a\u6709\u5e94\u5f97\u7684\u5e16\u5b50\u5c31\u4f1a\u8131\u9896\u800c\u51fa\u3002\u5982\u679c\u6570\u636e\u663e\u793a\u9ed1\u4eba\u6210\u4e3a\u8b66\u5bdf\u66b4\u529b\u7684\u4e0d\u6210\u6bd4\u4f8b\u7684\u76ee\u6807\uff0c\u4ed6\u4eec\u77e5\u9053\u767d\u4eba\u624d\u662f\u771f\u6b63\u7684\u53d7\u5bb3\u8005\u7684\u89c6\u9891\u53ef\u80fd\u4f1a\u6709\u5e02\u573a\u3002\n\u91cd\u70b9\u4e0d\u662f\u5e73\u53f0\u5e94\u8be5\u7981\u6b62\u50cf\u8428\u62c9\u8fea\u8bfa\u548c\u6b27\u6587\u65af\u8fd9\u6837\u7684\u4eba\u6279\u8bc4\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u3002\u4f46\u5728\u8fd9\u4e2a\u79cd\u65cf\u6e05\u7b97\u7684\u65f6\u523b\uff0c\u8fd9\u4e9b\u9ad8\u7ba1\u5bf9\u4ed6\u4eec\u7684\u5458\u5de5\u3001\u7528\u6237\u548c\u6574\u4e2a\u793e\u4f1a\u90fd\u8d1f\u6709\u8d23\u4efb\uff0c\u5e94\u8be5\u68c0\u67e5\u4e00\u4e0b\u5728\u4e92\u8054\u7f51\u4e0a\u52a9\u957f\u79cd\u65cf\u4e3b\u4e49\u8005\u7684\u7ed3\u6784\u6027\u529b\u91cf\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5e73\u53f0\u7684\u54ea\u4e9b\u7279\u70b9\u6b63\u5728\u7834\u574f\u4ed6\u4eec\u58f0\u79f0\u652f\u6301\u7684\u793e\u4f1a\u6b63\u4e49\u8fd0\u52a8\u3002\n\u4ed6\u4eec\u4f3c\u4e4e\u5e76\u4e0d\u6025\u4e8e\u8fd9\u4e48\u505a\u3002\u6700\u8fd1\uff0c\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u62a5\u9053\u79f0\uff0cFacebook 2016\u5e74\u7684\u4e00\u9879\u5185\u90e8\u7814\u7a76\u53d1\u73b0\uff0c\u5728\u8be5\u5e73\u53f0\u4e0a\u52a0\u5165\u6781\u7aef\u7ec4\u7ec7\u7684\u4eba\u4e2d\uff0c64%\u7684\u4eba\u8fd9\u6837\u505a\u662f\u56e0\u4e3aFacebook\u7684\u63a8\u8350\u7b97\u6cd5\u5f15\u5bfc\u4ed6\u4eec\u53bb\u4e86\u90a3\u91cc\u3002Facebook\u672c\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u53d1\u73b0\u505a\u51fa\u56de\u5e94\uff0c\u5b8c\u5168\u5173\u95ed\u7fa4\u7ec4\u63a8\u8350\uff0c\u6216\u8005\u6682\u505c\u63a8\u8350\uff0c\u76f4\u5230\u786e\u5b9a\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u57cb\u846c\u4e86\u8fd9\u9879\u7814\u7a76\uff0c\u5e76\u7ee7\u7eed\u8fdb\u884c\u4e0b\u53bb\u3002\n\u56e0\u6b64\uff0cFacebook\u7fa4\u7ec4\u7ee7\u7eed\u5bf9\u66b4\u529b\u6781\u7aef\u5206\u5b50\u6709\u7528\u3002\u672c\u5468\uff0c\u6781\u53f3\u6d3e\u201c\u6076\u81ed\u201d\u8fd0\u52a8\u7684\u4e24\u540d\u6210\u5458\u56e0\u6d89\u5acc\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5965\u514b\u5170\u7684\u4e00\u6b21\u6297\u8bae\u6d3b\u52a8\u4e2d\u6740\u5bb3\u4e00\u540d\u8054\u90a6\u5b98\u5458\u800c\u88ab\u8d77\u8bc9\uff0c\u8be5\u8fd0\u52a8\u60f3\u8981\u7834\u574f\u793e\u4f1a\u7a33\u5b9a\uff0c\u6311\u8d77\u5185\u6218\u3002\u636e\u8c03\u67e5\u4eba\u5458\u79f0\uff0c\u5acc\u7591\u4eba\u5728Facebook\u7fa4\u4e2d\u4f1a\u9762\u5e76\u8ba8\u8bba\u4e86\u4ed6\u4eec\u7684\u8ba1\u5212\u3002\u5c3d\u7ba1Facebook\u8868\u793a\u5c06\u628a\u6076\u81ed\u7fa4\u7ec4\u6392\u9664\u5728\u63a8\u8350\u4e4b\u5916\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u51fa\u73b0\u5728\u5f88\u591a\u4eba\u7684Feed\u4e2d\u3002\n\u4e3a\u79d1\u6280\u516c\u53f8\u63d0\u4f9b\u79cd\u65cf\u6b63\u4e49\u54a8\u8be2\u7684\u6c11\u6743\u7ec4\u7ec7\u201c\u6539\u53d8\u4e4b\u8272\u201d(Color Of Change)\u7684\u603b\u88c1\u62c9\u6c99\u5fb7\u00b7\u7f57\u5bbe\u900a(Rashad Robinson)\u672c\u5468\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u544a\u8bc9\u6211\uff0c\u79d1\u6280\u9886\u8896\u9700\u8981\u5728\u81ea\u5df1\u7684\u4ea7\u54c1\u8bbe\u8ba1\u4e2d\u8fd0\u7528\u53cd\u79cd\u65cf\u4e3b\u4e49\u539f\u5219\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u8868\u8fbe\u5bf9\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u7684\u652f\u6301\u3002\n\u201c\u6211\u770b\u5230\u7684\uff0c\u5c24\u5176\u662f\u4eceFacebook\u548c\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerberg)\u8eab\u4e0a\u770b\u5230\u7684\uff0c\u6709\u70b9\u50cf\u67aa\u652f\u60b2\u5267\u53d1\u751f\u540e\u7684\u2018\u601d\u60f3\u548c\u7948\u7977\u2019\uff0c\u201d\u7f57\u5bbe\u900a\u8bf4\u3002\u201c\u8fd9\u662f\u5f88\u591a\u540c\u60c5\u5fc3\uff0c\u800c\u4e0d\u5fc5\u91c7\u53d6\u4efb\u4f55\u7ed3\u6784\u6027\u63aa\u65bd\u3002\u201d\n\u624e\u514b\u4f2f\u683c\u3001\u591a\u5c14\u897f\u548c\u6c83\u897f\u57fa\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u8fd8\u6709\u5f88\u591a\u3002\u4ed6\u4eec\u53ef\u4ee5\u5efa\u7acb\u6c11\u6743\u4e13\u5bb6\u56e2\u961f\uff0c\u5e76\u6388\u6743\u4ed6\u4eec\u5728\u81ea\u5df1\u7684\u5e73\u53f0\u4e0a\u6839\u9664\u79cd\u65cf\u4e3b\u4e49\uff0c\u5305\u62ec\u66f4\u5fae\u5999\u7684\u79cd\u65cf\u4e3b\u4e49\u5f62\u5f0f\uff0c\u8fd9\u4e9b\u5f62\u5f0f\u4e0d\u6d89\u53ca\u4f7f\u7528\u79cd\u65cf\u8bfd\u8c24\u6216\u6709\u7ec4\u7ec7\u7684\u4ec7\u6068\u56e2\u4f53\u3002\u4ed6\u4eec\u53ef\u4ee5\u5e9f\u9664\u7ed9\u4e88\u6311\u8845\u8005\u548c\u602a\u80ce\u514d\u8d39\u5173\u6ce8\u7684\u63a8\u8350\u7cfb\u7edf\uff0c\u6216\u8005\u6539\u53d8\u4ed6\u4eec\u5e73\u53f0\u5bf9\u4fe1\u606f\u7684\u6392\u540d\u65b9\u5f0f\u3002(\u6839\u636e\u5b83\u7684\u5438\u5f15\u529b\u6765\u6392\u540d\uff0c\u4e00\u4e9b\u5e73\u53f0\u4ecd\u7136\u662f\u8fd9\u6837\u505a\u7684\uff0c\u5f80\u5f80\u4f1a\u653e\u5927\u9519\u8bef\u4fe1\u606f\u548c\u6124\u6012\u8bf1\u9975\u3002)\u3002\u4ed6\u4eec\u53ef\u4ee5\u5bf9\u654f\u611f\u8bdd\u9898\u7684\u5e16\u5b50\u8bbe\u7f6e\u201c\u75c5\u6bd2\u5f0f\u4e0a\u9650\u201d\uff0c\u4ee5\u4f7f\u5de8\u9b54\u66f4\u96be\u52ab\u6301\u5bf9\u8bdd\u3002\n\u6211\u4e50\u89c2\u5730\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u79d1\u6280\u9886\u8896\u4e2d\u7684\u4e00\u4e9b\u4eba\u6700\u7ec8\u4f1a\u88ab\u4ed6\u4eec\u7684\u6709\u8272\u4eba\u79cd\u5458\u5de5\u6216\u81ea\u5df1\u7684\u826f\u5fc3\u8bf4\u670d\uff0c\u771f\u6b63\u652f\u6301\u79cd\u65cf\u6b63\u4e49\u610f\u5473\u7740\u4ed6\u4eec\u9700\u8981\u5efa\u7acb\u53cd\u79cd\u65cf\u4e3b\u4e49\u7684\u4ea7\u54c1\u548c\u670d\u52a1\uff0c\u5e76\u52aa\u529b\u786e\u4fdd\u4ed6\u4eec\u7684\u5e73\u53f0\u653e\u5927\u4e86\u6b63\u786e\u7684\u58f0\u97f3\u3002\u4f46\u6211\u62c5\u5fc3\uff0c\u7531\u4e8e\u62c5\u5fc3\u88ab\u6307\u8d23\u4e3a\u515a\u6d3e\u504f\u89c1\uff0c\u4ed6\u4eec\u4f1a\u505c\u6b62\u8fdb\u884c\u771f\u6b63\u7684\u7ed3\u6784\u6027\u6539\u9769\u3002\n\u6c11\u6743\u7ec4\u7ec7\u8005\u7f57\u5bbe\u900a\u5148\u751f\u4e5f\u662f\u3002\u51e0\u5468\u524d\uff0c\u4ed6\u4e0e\u624e\u514b\u4f2f\u683c\u901a\u4e86\u7535\u8bdd\uff0c\u8ba8\u8bbaFacebook\u5728\u79cd\u65cf\u3001\u9009\u4e3e\u548c\u5176\u4ed6\u8bdd\u9898\u4e0a\u7684\u653f\u7b56\u3002\u4e8b\u540e\uff0c\u4ed6\u8bf4\uff0c\u4ed6\u8ba4\u4e3a\u867d\u7136\u624e\u514b\u4f2f\u683c\u548c\u5176\u4ed6\u79d1\u6280\u9886\u8896\u603b\u4f53\u4e0a\u662f\u51fa\u4e8e\u597d\u610f\uff0c\u4f46\u4ed6\u8ba4\u4e3a\u4ed6\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u7406\u89e3\u4ed6\u4eec\u7684\u4ea7\u54c1\u53ef\u80fd\u6709\u591a\u6709\u5bb3\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\uff0c\u5f53\u4ed6\u4eec\u7684\u5236\u5ea6\u5c06\u9ed1\u4eba\u7f6e\u4e8e\u5371\u9669\u5883\u5730\u65f6\uff0c\u4ed6\u4eec\u4e0d\u80fd\u771f\u6b63\u610f\u5473\u7740\u2018\u9ed1\u4eba\u7684\u751f\u547d\u4e5f\u5f88\u91cd\u8981\u2019\u3002\u201d", "note_en": "Several weeks ago, as protests erupted across the nation in response to the police killing of George Floyd, Mark Zuckerberg wrote a long and heartfelt post on his Facebook page, denouncing racial bias and  proclaiming that \u201cblack lives matter.\u201d Mr. Zuckerberg, Facebook\u2019s chief executive, also  announced that the company would donate $10 million to racial justice organizations.\n A similar show of support unfolded at Twitter, where the company changed its official Twitter bio to a Black Lives Matter tribute, and Jack Dorsey, the chief executive,  pledged $3 million to an anti-racism organization started by Colin Kaepernick, the former N.F.L. quarterback.\n YouTube joined the protests, too. Susan Wojcicki, its chief executive, wrote in a  blog post that \u201cwe believe Black lives matter and we all need to do more to dismantle systemic racism.\u201d YouTube also announced it would start a $100 million fund for black creators.\n  Well, sort of. The problem is that, while these shows of support were well intentioned, they didn\u2019t address the way that these companies\u2019 own products \u2014 Facebook, Twitter and YouTube \u2014 have been successfully weaponized by racists and partisan provocateurs, and are being used to undermine Black Lives Matter and other social justice movements. It\u2019s as if the heads of McDonald\u2019s, Burger King and Taco Bell all got together to fight obesity by donating to a vegan food co-op, rather than by lowering their calorie counts.\n It\u2019s hard to remember sometimes, but social media once functioned as a tool for the oppressed and marginalized. In Tahrir Square in Cairo, Ferguson, Mo., and Baltimore, activists used Twitter and Facebook to organize demonstrations and get their messages out.\n But in recent years, a right-wing reactionary movement has turned the tide. Now, some of the loudest and most established voices on these platforms belong to conservative commentators and paid provocateurs whose aim is mocking and subverting social justice movements, rather than supporting them.\n The result is a distorted view of the world that is at odds with actual public sentiment. A  majority of Americans support Black Lives Matter, but you wouldn\u2019t necessarily know it by scrolling through your social media feeds.\n  On Facebook, for example, the most popular post on the day of Mr. Zuckerberg\u2019s Black Lives Matter pronouncement was an 18-minute video posted by the right-wing activist Candace Owens. In the video, Ms. Owens, who is black,  railed against the protests, calling the idea of racially biased policing a \u201cfake narrative\u201d and deriding Mr. Floyd as a \u201chorrible human being.\u201d Her monologue, which was shared by right-wing media outlets \u2014 and which several people told me they had seen because Facebook\u2019s algorithm recommended it to them \u2014\u00a0racked up nearly 100 million views.\n Ms. Owens is a serial offender, known for spreading misinformation and stirring up partisan rancor. (Her Twitter account was suspended this year after she encouraged her followers to violate stay-at-home orders, and Facebook has applied fact-checking labels to several of her posts.) But she can still insult the victims of police killings with impunity to her nearly four million followers on Facebook. So can other high-profile conservative commentators like Terrence K. Williams, Ben Shapiro and the Hodgetwins, all of whom have had anti-Black Lives Matter posts go viral over the past several weeks.\n In all, seven of the 10 most-shared Facebook posts containing the phrase \u201cBlack Lives Matter\u201d over the past month were critical of the movement, according to data from CrowdTangle, a Facebook-owned data platform. (The sentiment on Instagram, which Facebook owns, has been more favorable, perhaps because its users skew younger and more liberal.)\n Facebook declined to comment. On Thursday, it announced it would spend  $200 million to support black-owned businesses and organizations, and add a \u201cLift Black Voices\u201d section to its app to highlight stories from black people and share educational resources.\n Twitter has been a supporter of Black Lives Matter for years \u2014 remember Mr. Dorsey\u2019s  trip to Ferguson? \u2014 but it, too, has a problem with racists and bigots using its platform to stir up unrest. Last month, the company  discovered that a Twitter account claiming to represent a national antifa group was run by a group of white nationalists posing as left-wing radicals. (The account was suspended, but not before its tweets calling for violence were widely shared.) Twitter\u2019s trending topics sidebar, which is often gamed by trolls looking to hijack online conversations, has  filled up with inflammatory hashtags like #whitelivesmatter and #whiteoutwednesday, often as a result of coordinated campaigns by far-right extremists.\n A Twitter spokesman, Brandon Borrman, said: \u201cWe\u2019ve taken down hundreds of groups under our violent extremist group policy and continue to enforce our policies against hateful conduct every day across the world. From #BlackLivesMatter to #MeToo and #BringBackOurGirls, our company is motivated by the power of social movements to usher in meaningful societal change.\u201d\n YouTube, too, has struggled to square its corporate values with the way its products actually operate. The company has  made strides in recent years to remove conspiracy theories and misinformation from its search results and recommendations, but it has yet to grapple fully with the way its boundary-pushing culture and laissez-faire policies contributed to racial division for years.\n  As of this week, for example, the most-viewed YouTube video about Black Lives Matter wasn\u2019t footage of a protest or a police killing, but a four-year-old \u201csocial experiment\u201d by the viral prankster and former Republican congressional candidate Joey Saladino, which has 14 million views. In the video, Mr. Saladino \u2014 whose  other YouTube stunts have included drinking his own urine and wearing a Nazi costume to a Trump rally \u2014 holds up an \u201cAll Lives Matter\u201d sign in a predominantly black neighborhood.\n A YouTube spokeswoman, Andrea Faville, said that Mr. Saladino\u2019s video had received fewer than 5 percent of its views this year, and that it was not being widely recommended by the company\u2019s algorithms. Mr. Saladino recently reposted the video to Facebook, where it has gotten several million more views.\n In some ways, social media has helped Black Lives Matter simply by making it possible for victims of police violence to be heard. Without Facebook, Twitter and YouTube, we might never have seen the video of Mr. Floyd\u2019s killing, or known the names of Breonna Taylor, Ahmaud Arbery or other victims of police brutality. Many of the protests being held around the country are being organized in Facebook groups and Twitter threads, and social media has been helpful in creating more accountability for the police.\n But these platforms aren\u2019t just megaphones. They\u2019re also global, real-time contests for attention, and many of the experienced players have gotten good at provoking controversy by adopting exaggerated views. They understand that if the whole world is condemning Mr. Floyd\u2019s killing, a post saying he deserved it will stand out. If the data suggests that black people are disproportionately targeted by police violence, they know that there\u2019s likely a market for a video saying that white people are the real victims.\n The point isn\u2019t that platforms should bar people like Mr. Saladino and Ms. Owens for criticizing Black Lives Matter. But in this moment of racial reckoning, these executives owe it to their employees, their users and society at large to examine the structural forces that are empowering racists on the internet, and which features of their platforms are undermining the social justice movements they claim to support.\n They don\u2019t seem eager to do so. Recently,  The Wall Street Journal reported that an internal Facebook study in 2016 found that 64 percent of the people who joined extremist groups on the platform did so because Facebook\u2019s recommendations algorithms steered them there. Facebook could have responded to those findings by shutting off groups recommendations entirely, or pausing them until it could be certain the problem had been fixed. Instead, it buried the study and kept going.\n As a result, Facebook groups continue to be useful for violent extremists. This week, two members of the  far-right \u201cboogaloo\u201d movement, which wants to destabilize society and provoke a civil war, were charged in connection with the killing of a federal officer at a protest in Oakland, Calif. According to investigators, the suspects met and discussed their plans in a Facebook group. And although Facebook has said it would exclude boogaloo groups from recommendations, they\u2019re  still appearing in plenty of people\u2019s feeds.\n  Rashad Robinson, the president of Color of Change, a civil rights group that advises tech companies on racial justice issues, told me in an interview this week that tech leaders needed to apply anti-racist principles to their own product designs, rather than simply expressing their support for Black Lives Matter.\n \u201cWhat I see, particularly from Facebook and Mark Zuckerberg, it\u2019s kind of like \u2018thoughts and prayers\u2019 after something tragic happens with guns,\u201d Mr. Robinson said. \u201cIt\u2019s a lot of sympathy without having to do anything structural about it.\u201d\n There is plenty more Mr. Zuckerberg, Mr. Dorsey and Ms. Wojcicki could do. They could build teams of civil rights experts and empower them to root out racism on their platforms, including more subtle forms of racism that don\u2019t involve using racial slurs or organized hate groups. They could dismantle the recommendations systems that give provocateurs and cranks free attention, or make changes to the way their platforms rank information. (Ranking it by how engaging it is, the way some platforms still do, tends to amplify misinformation and outrage-bait.) They could institute a \u201cviral ceiling\u201d on posts about sensitive topics, to make it harder for trolls to hijack the conversation.\n I\u2019m optimistic that some of these tech leaders will eventually be convinced \u2014 either by their employees of color or their own conscience \u2014 that truly supporting racial justice means that they need to build anti-racist products and services, and do the hard work of making sure their platforms are amplifying the right voices. But I\u2019m worried that they will stop short of making real, structural changes, out of fear of being accused of partisan bias.\n So is Mr. Robinson, the civil rights organizer. A few weeks ago, he chatted with Mr. Zuckerberg by phone about Facebook\u2019s policies on race, elections and other topics. Afterward, he said he thought that while Mr. Zuckerberg and other tech leaders generally meant well, he didn\u2019t think they truly understood how harmful their products could be.\n \u201cI don\u2019t think they can truly mean \u2018Black Lives Matter\u2019 when they have systems that put black people at risk,\u201d he said.", "posttime": "2020-06-20 02:39:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5a92\u4f53,media,\u9ed1\u4eba", "title": "\u793e\u4ea4\u5a92\u4f53\u5de8\u5934\u652f\u6301\u79cd\u65cf\u6b63\u4e49\u3002\u4ed6\u4eec\u7684\u4ea7\u54c1\u7834\u574f\u4e86\u5b83", "title_en": "Social Media Giants Support Racial Justice. Their Products Undermine It", "transed": 1, "url": "https://www.nytimes.com/2020/06/19/technology/facebook-youtube-twitter-black-lives-matter.html", "via": "", "real_tags": ["\u5a92\u4f53", "media", "\u9ed1\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "a12ee4d396de7c4eb72f7abab02f4e3f.jpg", "infoid": 1007301, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "COVID\u62a4\u58eb\u63ed\u9732\u7ebd\u7ea6\u533b\u9662\u6ce8\u518c\u62a4\u58ebErin Olszewski\u5728\u9707\u4e2d\u7ebd\u7ea6Elmhurst\u533b\u9662\u5446\u4e86\u4e00\u4e2a\u6708\u3002\u5728\u89c1\u8bc1\u4e86..\u3002", "note_en": "COVID NURSE EXPOSES NY HOSPITAL Registered nurse, Erin Olszewski, spent a month at the epicenter of the epicenter, Elmhurst Hospital in NY. After witnessing ...", "posttime": "2020-06-20 02:38:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62a4\u58eb,nurse", "title": "Covid\u62a4\u58eb\u66dd\u5149\u7ebd\u7ea6\u533b\u9662", "title_en": "Covid Nurse Exposes NY Hospital", "transed": 1, "url": "https://www.youtube.com/watch?v=kIngGuof9E0", "via": "", "real_tags": ["\u62a4\u58eb", "nurse"]}, {"category": "", "categoryclass": "", "imagename": "b4c6be93bf2ce123c3a55b02a7b91879.jpg", "infoid": 1007300, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7f51\u7ad9\u53ef\u80fd\u4f1a\u4ece\u672c\u9875\u7684\u94fe\u63a5\u4e2d\u8d5a\u53d6\u4ee3\u9500\u5546\u4f63\u91d1\u3002\u4f7f\u7528\u6761\u6b3e\u3002\n\u8c37\u6b4c\u7684Chrome\u6d4f\u89c8\u5668\u65e0\u7591\u662f\u6700\u53d7\u6b22\u8fce\u7684\u6d4f\u89c8\u7f51\u9875\u7684\u65b9\u5f0f\uff0c\u5f53\u4f60\u8003\u8651\u5230\u5b83\u7cdf\u7cd5\u7684\u5185\u5b58\u7ba1\u7406\u65f6\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u5728Windows\u4e2d\uff0cChrome\u541e\u566c\u6570GB\u5185\u5b58\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\uff0c\u8fd9\u4f1a\u4f7f\u5185\u5b58\u6709\u9650\u7684\u8bbe\u5907\u5f88\u96be\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u5730\u5e73\u7ebf\u4e0a\u53ef\u80fd\u4f1a\u6709\u5e0c\u671b\u3002Windows10\u4e2d\u7684\u4e00\u9879\u65b0\u529f\u80fd\u53ef\u80fd\u4f1a\u8ba9\u8c37\u6b4c\u7b80\u5316Chrome\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u5fae\u8f6f\u5df2\u7ecf\u5728\u4f7f\u7528\u5b83\u4e86\u3002\n\u5fae\u8f6f\u8fc7\u53bb\u5e38\u5e38\u56de\u907f\u5f00\u6e90\u9879\u76ee\uff0c\u4f46\u5f53\u66f4\u6362Edge\u6d4f\u89c8\u5668\u7684\u65f6\u5019\uff0cChromium\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9009\u62e9\u3002Chromium\u9879\u76ee\u662f\u4f17\u591a\u6d4f\u89c8\u5668\u7684\u57fa\u7840\uff0c\u6bd4\u5982Opera\u3001Brave\uff0c\u5f53\u7136\u8fd8\u6709Chrome\u3002\u5fae\u8f6f\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\uff0c\u5f00\u53d1\u4e86\u4f7f\u7528Chromium\u7684\u65b0\u7248Edge\u3002\u5b83\u57282018\u5e74\u672b\u5ba3\u5e03\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u4ec5\u4ec5\u4e00\u5e74\u591a\u540e\uff0c\u5fae\u8f6f\u5c31\u6709\u4e86\u4e00\u4e2a\u6700\u7ec8\u7248\u672c\u53ef\u4ee5\u4e0b\u8f7d\u3002\n\u5728\u6700\u8fd1\u76842020\u5e745\u6708\u66f4\u65b0\u4e2d\uff0cChrome Edge\u51e0\u4e4e\u5e94\u7528\u5230\u4e86\u6240\u6709Windows10\u7535\u8111\u4e0a\u3002\u6839\u636e\u5fae\u8f6f\u7684\u8bf4\u6cd5\uff0c\u6b64\u66f4\u65b0\u8fd8\u5728Edge\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u7ba1\u7406\u529f\u80fd\uff0c\u79f0\u4e3aSegmentHeap\u3002\u5728\u6700\u65b0\u7248\u672c\u7684Windows\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528SegmentHeap\u6765\u964d\u4f4e\u7a0b\u5e8f\u7684RAM\u4f7f\u7528\u7387\u3002\u5fae\u8f6f\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u4e3a\u65b0\u7684Edge\u6d4f\u89c8\u5668\u589e\u52a0\u4e86\u652f\u6301\uff0c\u5e76\u4e14\u8be5\u6d4f\u89c8\u5668\u7684\u5185\u5b58\u5360\u6709\u7387\u4e0b\u964d\u4e8627%\u3002\n\u6b63\u5982\u4efb\u4f55\u7ecf\u5e38\u4f7f\u7528Chrome\u7684\u4eba\u90fd\u53ef\u4ee5\u8bc1\u5b9e\u7684\u90a3\u6837\uff0c\u8c37\u6b4c\u6d4f\u89c8\u5668\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u4e00\u65e6\u4f60\u901a\u8fc7\u51e0\u4e2a\u9009\u9879\u5361\uff0c\u4f60\u5c31\u53ef\u4ee5\u5e26\u8d70\u6240\u6709\u7684RAM\u3002\u7136\u800c\uff0cGoogle\u5df2\u7ecf\u6ce8\u610f\u5230Windows\u4e2d\u7684\u65b0SegmentHeap\u529f\u80fd\u3002Chromium\u5f00\u6e90\u9879\u76ee\u4e2d\u7684\u4e00\u6761\u65b0\u8bc4\u8bba\u5efa\u8bae\u5728Windows\u4e0a\u6dfb\u52a0SegmentHeap\u652f\u6301\u3002\u8bc4\u8bba\u6307\u51fa\uff0c\u5904\u7406\u5668\u7ebf\u7a0b\u6570\u91cf\u8f83\u591a\u7684\u8bbe\u5907\u5c06\u53d7\u76ca\u6700\u5927\uff0c\u4f46\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u62ff\u56de\u4e00\u4e9bRAM\u3002\u4f7f\u7528\u4fee\u6539\u540e\u7684Chrome\u53ef\u6267\u884c\u6587\u4ef6\u5bf9\u5355\u4e2a\u673a\u5668\u8fdb\u884c\u6d4b\u8bd5\u8868\u660e\uff0cSegmentHeap\u81f3\u5c11\u53ef\u4ee5\u8282\u7701\u51e0\u767e\u5146\u5b57\u8282\u3002\n\u8c37\u6b4c\u4ecd\u5904\u4e8e\u4e3aChrome\u6dfb\u52a0\u6b64\u529f\u80fd\u7684\u6700\u65e9\u9636\u6bb5\u3002\u5b83\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\u5728\u91d1\u4e1d\u96c0\u7248\u672c\u4e2d\uff0c\u968f\u540e\u662f\u5f00\u53d1\u4eba\u5458\u9891\u9053\u7684\u53d1\u5e03\u3002\u5728\u6b64\u4e4b\u540e\uff0cSegmentHeap\u652f\u6301\u81f3\u5c11\u8fd8\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u80fd\u8fbe\u5230\u5927\u591a\u6570\u4eba\u4f7f\u7528\u7684\u7a33\u5b9a\u901a\u9053\u3002", "note_en": "This site may earn affiliate commissions from the links on this page.  Terms of use.\n      Google\u2019s  Chrome browser is far and away the most popular way to browse the web, which is surprising when you consider its abysmal memory management. It\u2019s not uncommon for Chrome to gobble up multiple gigabytes of RAM in Windows, which can make devices with limited memory hard to use. There may be hope on the horizon, though. A new feature in Windows 10  might allow Google to streamline Chrome, and we know it works because Microsoft is already using it.\n Microsoft used to shy away from open source projects, but when the time came to replace the Edge browser, Chromium was the easy choice. The Chromium project is the basis for numerous browsers like Opera, Brave, and of course, Chrome. Microsoft moved quickly to develop a new version of Edge that used Chromium. It announced the project in late 2018, and just over a year later, Microsoft had a final version ready for download.\n  Chromium Edge rolled out to almost all Windows 10 computers in the recent May 2020 update. According to Microsoft, this update also implemented a new memory management feature in Edge known as SegmentHeap. In the latest version of Windows, developers can opt into SegmentHeap to lower the RAM usage of a program. Microsoft says it already added support to the new Edge browser, and it has seen a 27 percent drop in the browser\u2019s memory footprint.\n  As anyone who\u2019s used Chrome regularly can confirm, Google\u2019s browser has a way of running away with all your RAM once you get past a handful of tabs. However, Google has taken note of the new SegmentHeap functionality in Windows. A new comment in the Chromium open source project suggests the addition of SegmentHeap support on Windows.  The comment notes that devices with higher numbers of processor threads will benefit the most, but everyone should get some RAM back. Testing individual machines with modified Chrome executables shows that SegmentHeap could save several hundred megabytes at least.\n  Google is still in the earliest phase of adding this feature to Chrome. It might appear in the Canary build soon, followed by a Dev channel release. It will take at least a few months after that for SegmentHeap support to arrive in the Stable channel that most people use.", "posttime": "2020-06-20 02:21:06", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "windows,\u5185\u5b58,chrome,eat", "title": "\u91c7\u7528\u6b64Windows\u529f\u80fd\u540e\uff0cChrome\u53ef\u80fd\u4e0d\u4f1a\u5360\u7528\u60a8\u7684\u6240\u6709\u5185\u5b58", "title_en": "Chrome Might Not Eat All Your RAM After Adopting This Windows Feature", "transed": 1, "url": "https://www.extremetech.com/internet/311877-chrome-might-not-eat-all-your-ram-after-adopting-this-windows-feature", "via": "", "real_tags": ["windows", "\u5185\u5b58", "chrome", "eat"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007299, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u5927\u9ebb\u5728\u5404\u5dde\u5408\u6cd5\u5316\uff0c\u4ee5\u53ca\u542b\u6709CBD\u7684\u5927\u9ebb\u4ea7\u54c1\u57282018\u5e74\u5728\u8054\u90a6\u653f\u5e9c\u53d8\u5f97\u5408\u6cd5\uff0c\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u6ca1\u6709\u610f\u8bc6\u5230\u6bd2\u54c1\u6218\u4e89\u4ecd\u5728\u7ee7\u7eed\u3002\u5b83\u7ee7\u7eed\u6467\u6bc1\u6211\u4eec\u7684\u793e\u533a\uff0c\u7279\u522b\u662f\u5c11\u6570\u65cf\u88d4\u30022018\u5e74\u56e0\u5927\u9ebb\u88ab\u6355\u7684\u4eba\u6570\u5b9e\u9645\u4e0a\u521b\u4e0b\u4e86\u7eaa\u5f55\u3002\u968f\u774066\u4e07\u591a\u4eba\u88ab\u6355\uff0c\u9488\u5bf9\u5927\u9ebb\u548c\u4f7f\u7528\u5927\u9ebb\u7684\u9ed1\u4eba\u548c\u68d5\u8272\u4eba\u7684\u6218\u4e89\u7ee7\u7eed\u5347\u7ea7\u3002\u8fd9\u662f\u4e00\u4e2a\u5982\u6b64\u75af\u72c2\u7684\u4eba\u6570\uff0c\u6211\u60f3\u5e2e\u4f60\u51c6\u786e\u5730\u60f3\u8c61\u4e00\u4e0b\u6709\u591a\u5c11\u4eba\u3002\n\u4e0b\u9762\u662f\u73b0\u5728\u6709\u591a\u5c11\u4eba\u88ab\u6355\u3002\u6211\u4eec\u5df2\u7ecf\u52a0\u5feb\u4e86\u52a8\u753b\u7684\u901f\u5ea6\uff0c\u6240\u4ee5\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6bcf\u4e00\u79d2\u7684\u6d41\u901d\u90fd\u4ee3\u8868\u7740\u4e00\u5206\u949f\u7684\u6d41\u901d\u3002\u8fd9\u91cc\u7684\u6bcf\u4e2a\u4eba\u90fd\u4ee3\u8868\u7740\u4e00\u4e2a\u771f\u5b9e\u7684\u7f8e\u56fd\u4eba\uff0c\u4e3a\u4e86\u4e00\u79cd\u6bd4\u5c3c\u53e4\u4e01\u6216\u9152\u7cbe\u5371\u5bb3\u66f4\u5c0f\u7684\u690d\u7269\uff0c\u4ed6\u4eec\u7684\u751f\u6d3b\u88ab\u98a0\u8986\u4e86\u3002\n\u8fd9\u4e9b\u902e\u6355\u884c\u52a8\u975e\u5e38\u6e05\u695a\u5730\u663e\u793a\u4e86\u79cd\u65cf\u5206\u88c2\u3002\u9ed1\u4eba\u56e0\u6bd2\u54c1\u72af\u7f6a\u88ab\u6355\u7684\u53ef\u80fd\u6027\u51e0\u4e4e\u662f\u767d\u4eba\u76844\u500d\u3002\u4ece\u90a3\u91cc\u5f00\u59cb\uff0c\u60c5\u51b5\u53ea\u4f1a\u53d8\u5f97\u66f4\u7cdf\uff0c\u56e0\u4e3a\u4ece\u7edf\u8ba1\u4e0a\u770b\uff0c\u9ed1\u4eba\u548c\u68d5\u8272\u4eba\u9762\u4e34\u66f4\u4e25\u5389\u7684\u60e9\u7f5a\u548c\u66f4\u957f\u7684\u5211\u671f\u3002\u4e86\u89e3\u6bd2\u54c1\u6218\u4e89\u7684\u79cd\u65cf\u548c\u9636\u7ea7\u57fa\u7840\u5bf9\u4e8e\u963b\u6b62\u5b83\u7edd\u5bf9\u81f3\u5173\u91cd\u8981\u3002\u9ed1\u4eba\u548c\u767d\u4eba\u5438\u98df\u5927\u9ebb\u7684\u6bd4\u7387\u76f8\u540c(\u767d\u4eba\u7565\u9ad8)\uff0c\u4f46\u8fd9\u79cd\u6b67\u89c6\u4f9d\u7136\u5b58\u5728\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u6bcf\u5929\u5b9e\u65f6\u5438\u98df\u5927\u9ebb\u7684\u7f8e\u56fd\u4eba\u603b\u6570\u3002\n\u4f60\u80fd\u770b\u51fa\u4e0d\u540c\u4e4b\u5904\u5417\uff1f\u8fd9\u592a\u75af\u72c2\u4e86\u3002\u8fd9\u662f\u5b9e\u65f6\u7684\u3002\u8bb8\u591a\u7f8e\u56fd\u4eba\u6b63\u5728\u5438\u98df\u5927\u9ebb\u800c\u6ca1\u6709\u4f24\u5bb3\u4efb\u4f55\u4eba\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u9762\u4e34\u8b66\u5bdf\u66b4\u529b\u548c\u76d1\u7981\u7684\u98ce\u9669\u3002\n\u8bb8\u591a\u7ec4\u7ec7\u6b63\u5728\u52aa\u529b\u6d88\u9664\u7981\u6bd2\u6218\u4e89\u3002\u6253\u51fb\u6bd2\u54c1\u7684\u6218\u4e89\u4e0d\u4ec5\u4f24\u5bb3\u4e86\u4e2a\u4eba\uff0c\u4e5f\u4f24\u5bb3\u4e86\u6211\u4eec\u6574\u4e2a\u793e\u533a\u3002\u5982\u679c\u4f60\u60f3\u5e2e\u5fd9\uff0c\u53ef\u4ee5\u8003\u8651\u5411\u8fd9\u4e9b\u7ec4\u7ec7\u6350\u6b3e\u3002NORML\u836f\u7269\u653f\u7b56\u8054\u76df\u654f\u611f\u836f\u7269\u653f\u7b56\u5bb6\u5ead\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd9\u79cd\u53ef\u89c6\u5316\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u8bf7\u5206\u4eab\u5b83\u5e76\u6559\u80b2\u5176\u4ed6\u4eba\u3002\n\u5e0c\u671b\u662f\u5b58\u5728\u7684\uff0c\u4e00\u52b3\u6c38\u9038\u5730\u7ed3\u675f\u6bd2\u54c1\u6218\u4e89\u5c06\u6781\u5927\u5730\u9020\u798f\u4e8e\u6211\u4eec\u6240\u6709\u7684\u793e\u533a\u3002\u7f8e\u56fd\u8054\u90a6\u653f\u5e9c\u6bcf\u5e74\u82b1\u8d39\u8fd1300\u4ebf\u7f8e\u5143\u6253\u8fd9\u573a\u6bd2\u54c1\u6218\u3002\u901a\u8fc7\u51cf\u5c11\u6267\u6cd5\u548c\u5316\u8eab\u8d39\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u8282\u7701\u8d85\u8fc7410\u4ebf\u7f8e\u5143\u3002\u6211\u4eec\u5e94\u8be5\u7528\u8fd9\u7b14\u94b1\u6765\u6cbb\u6108\u6211\u4eec\u7684\u793e\u533a\uff0c\u800c\u4e0d\u662f\u6467\u6bc1\u4ed6\u4eec\u3002\u6211\u4eec\u9700\u8981\u6cbb\u7597\u800c\u4e0d\u662f\u8b66\u5bdf\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u5185\u5bb9\u3002\u6bcf\u4e2a\u76d2\u5b50\u4ee3\u8868\u5b9e\u65f6\u8282\u7701\u76841,000\u7f8e\u5143\u3002\n\u6211\u538c\u5026\u4e86\u770b\u5230\u4eba\u4eec\u8ba4\u4e3a\u6bd2\u54c1\u6218\u4e89\u5df2\u7ecf\u7ed3\u675f\u5e76\u53d6\u5f97\u4e86\u80dc\u5229\u3002\u5b83\u4e0d\u662f\u3002\u6211\u4eec\u5df2\u7ecf\u8d70\u4e86\u5f88\u957f\u4e00\u6bb5\u8def\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u5230\u90a3\u4e00\u6b65\u3002\u6211\u4eec\u751a\u81f3\u8fd8\u6ca1\u6709\u5f00\u59cb\u8c08\u8bba\u5927\u9ebb\u548c\u5927\u9ebb\u82b1\u5349\u4ea7\u4e1a\u7684\u7a0e\u6536\u662f\u5982\u4f55\u88ab\u7528\u6765\u8d44\u52a9\u8b66\u5bdf\u7684\u3002\u8fd8\u6709\u5f88\u591a\u4e8b\u60c5\u8981\u505a\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u5230\u7ec8\u70b9\u3002", "note_en": "As cannabis becomes legalized state by state and as hemp products containing CBD became federally legal in 2018, most Americans do not realize that the drug war continues.\r It continues to devastate our communities, particularly minorities. \r   \r 2018 actually saw a record number of arrests for marijuana. With more than  660,000 arrests, the war against cannabis and black and brown people that use cannabis continues to escalate.\r   \r That&#39;s such a crazy large number of people, I wanted to help you visualize exactly how many people that is.\n    Below is how many people are arrested, right now. We&#39;ve sped up the animation so each second passing represents a minute passing in the real world.\r Each person here represents a real person in the United States, getting their life upended, over a plant less harmful than nicotine or alcohol.\n    These arrests show the racial divde extremely clearly.  A black person is almost 4 times as likely to be arrested for a drug offense than a white person.\r It only gets worse from there as black and brown people statistically face harsher punishments and longer sentences. Understanding the racial and class basis for the drug war is absolutely vital in stopping it.\r \r    \r Black and white people smoke cannabis at the same rates (slightly higher for white people), yet these discrimination persists.\r  \r Below you can see the total number of Americans that smoke weed on a daily basis in real time.\n      Can you see the difference? It&#39;s crazy. And this is real time. That many Americans are smoking weed without hurting anyone yet we all still face the risk of police brutality and imprisonment.\n    Many organizations are working hard to eliminate the war on drugs. Not only does the war on drugs harm individuals, it hurts our entire community.\r Consider donating to these organizations if you want to help.\r      Norml      The Drug Policy Alliance      Families for Sensible Drug Policy      \r If you thought this visualization was helpful, share it and educate others.\n    There is hope and ending the drug war once and for all will greatly benefit all of our communities.\r The US Federal Government spends almost $30 Billion a year on fighting this drug war.\r     \r We can   save more than $41 Billion by ending it from savings on law enforcement and incarerations costs.\r We should be using this money to heal our communities instead of destroying them. We need to heal not police.\r        \r Take a look below. Each box represents $1,000 saved in real time.\n        I&#39;m tired of seeing people think that the drug war is over and won. It&#39;s not. \r  \r We&#39;ve come a long way but we&#39;re not nearly there yet. We haven&#39;t even begun to talk about how taxes from the Cannabis and Hemp Flower industries are being used to fund police.\r There&#39;s so much left to do. We&#39;re not at the finish line yet.", "posttime": "2020-06-20 02:19:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fdb\u884c,ongoing,\u5927\u9ebb", "title": "\u5c06\u6b63\u5728\u8fdb\u884c\u7684\u6bd2\u54c1\u6218\u4e89\u89c6\u89c9\u5316", "title_en": "Visualizing the Ongoing Drug War", "transed": 1, "url": "https://tryplainjane.com/visualizing-the-ongoing-drug-war/", "via": "", "real_tags": ["\u8fdb\u884c", "ongoing", "\u5927\u9ebb"]}, {"category": "", "categoryclass": "", "imagename": "9e0272766c5aebdceb51677132558eca.jpg", "infoid": 1007298, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7279\u6717\u666e\u653f\u5e9c\u8868\u793a\uff0c\u5bfb\u6c42\u589e\u52a0401(K)\u9000\u4f11\u50a8\u84c4\u7684\u5458\u5de5\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4e13\u4e1a\u7ba1\u7406\u7684\u57fa\u91d1\u6295\u8d44\u4e8e\u79c1\u52df\u80a1\u6743\u516c\u53f8\u3002\n\u7f8e\u56fd\u96c7\u5458\u798f\u5229\u4fdd\u969c\u7ba1\u7406\u5c40(Employee Benefits Security Administration)\u5468\u4e09\u5728\u4e00\u5c01\u4fe1\u606f\u4fe1\u4e2d\u8868\u793a\uff0c\u56fa\u5b9a\u7f34\u6b3e\u8ba1\u5212\u7684\u53d1\u8d77\u4eba\u53ef\u4ee5\u5c06\u79c1\u52df\u80a1\u6743\u7eb3\u5165\u591a\u5143\u5316\u6295\u8d44\uff0c\u6bd4\u5982\u6839\u636e\u9884\u8ba1\u7684\u9000\u4f11\u65e5\u671f\u81ea\u52a8\u8c03\u6574\u6301\u80a1\u4ee5\u5b9e\u73b0\u56de\u62a5\u6700\u5927\u5316\u548c\u98ce\u9669\u6700\u5c0f\u5316\u7684\u76ee\u6807\u65e5\u671f\u57fa\u91d1\u3002\n\u79c1\u52df\u80a1\u6743\u4e4b\u524d\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u5728\u83dc\u5355\u4e0a\uff0c\u56e0\u4e3a\u8ba1\u5212\u53d1\u8d77\u4eba\u7684\u53d7\u6258\u8d23\u4efb\u548c\u79c1\u4eba\u516c\u53f8\u6301\u6709\u7684\u6295\u8d44\u5468\u56f4\u7684\u8d23\u4efb\u5b58\u5728\u4e0d\u786e\u5b9a\u6027\u3002\nEBSA\u5728\u81f4\u534e\u76db\u987f\u65b0\u90ce\u6cd5\u5f8b\u96c6\u56e2(Groom Law Group)\u7684\u4fe1\u4e2d\u8868\u793a\uff0c\u8fd9\u4e00\u53d8\u5316\u4f7f\u66f4\u5e7f\u6cdb\u57fa\u91d1\u4e2d\u5305\u542b\u7684\u79c1\u52df\u80a1\u6743\u6d3b\u52a8\u7b26\u5408\u4e0a\u5e02\u516c\u53f8\u7684\u6295\u8d44\u6807\u51c6\u3002\nEBSA\u4ee3\u7406\u4e3b\u4efb\u73cd\u59ae\u00b7\u514b\u6797\u8d39\u5c14\u7279\u00b7\u5a01\u5c14\u900a(Jeanne Klinefelter Wilson)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u8fd9\u5c01\u4fe1\u5e94\u8be5\u4f1a\u5411\u56fa\u5b9a\u7f34\u6b3e\u8ba1\u5212\u53d7\u6258\u4eba\u4fdd\u8bc1\uff0c\u79c1\u52df\u80a1\u6743\u53ef\u80fd\u662f\u5ba1\u614e\u6295\u8d44\u7ec4\u5408\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u662f\u589e\u5f3a\u7f8e\u56fd\u5de5\u4eba\u9000\u4f11\u50a8\u84c4\u548c\u6295\u8d44\u4fdd\u969c\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u201d\nEBSA\u8868\u793a\uff0c\u8fd9\u4e00\u6269\u5f20\u9002\u7528\u4e8e\u201c\u4f5c\u4e3a\u4e13\u4e1a\u7ba1\u7406\u7684\u591a\u8d44\u4ea7\u7c7b\u522b\u5de5\u5177\u7684\u4e00\u90e8\u5206\u201d\u63d0\u4f9b\u7684\u79c1\u52df\u80a1\u6743\u6295\u8d44\u3002\u8be5\u673a\u6784\u5bf9\u76f4\u63a5\u5411\u79c1\u52df\u80a1\u6743\u6ce8\u5165\u8d44\u91d1\u5212\u6e05\u4e86\u754c\u9650\uff0c\u5f3a\u8c03\u975e\u6b63\u5f0f\u6307\u5bfc\u201c\u4e0d\u6388\u6743\u5c06\u79c1\u52df\u80a1\u6743\u6295\u8d44\u7528\u4e8e\u72ec\u7acb\u7684\u76f4\u63a5\u6295\u8d44\u201d\u3002\n\u4ed6\u5728\u65b0\u95fb\u7a3f\u4e2d\u79f0\uff1a\u201c\u51e0\u5341\u5e74\u6765\uff0c\u50cf\u4f20\u7edf\u517b\u8001\u91d1\u8ba1\u5212\u548c\u6350\u8d60\u57fa\u91d1\u8fd9\u6837\u7684\u673a\u6784\u6295\u8d44\u8005\u4e00\u76f4\u5728\u6295\u8d44\u79c1\u52df\u80a1\u6743\uff0c\u4f46401(K)\u8ba1\u5212\u53d7\u6258\u4eba\u4e00\u76f4\u4e0d\u613f\u5728\u4ed6\u4eec\u7684\u8ba1\u5212\u4e2d\u52a0\u5165\u8fd9\u4e00\u8d44\u4ea7\u7c7b\u522b\uff0c\u56e0\u4e3a\u6ca1\u6709DOL\u7684\u5177\u4f53\u6307\u5bfc.\u201d\u73b0\u5728\uff0c\u53d7\u6258\u4eba\u201c\u5982\u679c\u60f3\u8981\u8003\u8651\u5c06\u989d\u5916\u7684\u8d44\u4ea7\u7c7b\u522b\u4f5c\u4e3a\u591a\u5143\u5316401(K)\u6295\u8d44\u9009\u62e9\u7684\u4e00\u90e8\u5206\uff0c\u4ed6\u4eec\u5c31\u6709\u4e86\u66f4\u591a\u7684\u6cd5\u5f8b\u786e\u5b9a\u6027\u3002\u201d\n\u8054\u7cfb\u8d1f\u8d23\u8fd9\u7bc7\u62a5\u9053\u7684\u7f16\u8f91\uff1aFwn Johnson\u7535\u5b50\u90ae\u4ef6\uff1afjohnson@bloomberglaw.com\uff1bAlexis Kramer\u7535\u5b50\u90ae\u4ef6\uff1aakramer@bloomberglaw.com", "note_en": "Benefits &amp; Executive Compensation News      Employees seeking to enhance their 401(k) retirement savings can now invest in private equity firms via professionally managed funds, the Trump administration said.\n The Employee Benefits Security Administration said Wednesday in an  information letter that sponsors of defined contribution plans can incorporate private equity into diversified investments, such as target date funds that automatically adjust holdings to maximize returns and minimize risk based on a projected retirement date.\n Private equity was previously off the menu in most cases because of uncertainty regarding fiduciary responsibilities by plan sponsors and liability surrounding the investments held by private companies.\n The change makes it so private equity activity contained within a broader fund complies with the investing standards governing publicly traded companies, EBSA said in the letter to D.C.-based Groom Law Group.\n \u201cThis letter should assure defined contribution plan fiduciaries that private equity may be part of a prudent investment mix and a way to enhance retirement savings and investment security for American workers,\u201d EBSA acting director Jeanne Klinefelter Wilson said in a  statement.\n The expansion applies to private equity investments offered \u201cas part of a professionally managed multi-asset class vehicle,\u201d EBSA said. The agency drew the line at pumping money directly into private equity, stressing that the informal guidance \u201cdoes not authorize making private equity investments available for direct investment on a standalone basis.\u201d\n  \u201cFor decades, institutional investors like traditional pension plans and endowments have invested in private equity, but 401(k) plan fiduciaries have been reluctant to add the asset class to their plans in the absence of specific guidance from DOL,\u201d he said in a press release. Now, fiduciaries have \u201cmore legal certainty if they want to consider additional asset classes as part of a diversified 401(k) investment option.\u201d\n To contact the editors responsible for this story:  Fawn Johnson at  fjohnson@bloomberglaw.com;  Alexis Kramer at  akramer@bloomberglaw.com", "posttime": "2020-06-20 02:19:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u91d1,equity,\u6295\u8d44", "title": "401(K)\u9000\u4f11\u57fa\u91d1\u73b0\u5728\u5141\u8bb8\u79c1\u52df\u80a1\u6743\u6295\u8d44", "title_en": "Private Equity Investing Now Allowed in 401(k) Retirement Funds", "transed": 1, "url": "https://news.bloomberglaw.com/employee-benefits/benefits-overseer-oks-private-equity-investing-by-401k-holders", "via": "", "real_tags": ["\u57fa\u91d1", "equity", "\u6295\u8d44"]}, {"category": "", "categoryclass": "", "imagename": "2348832cce9a7d5e3912ceb95c20388a.jpg", "infoid": 1007297, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u8a79\u59c6\u65af\u00b7\u5361\u6885\u9686(James Cameron)\u3001\u53f2\u8482\u6587\u00b7\u65af\u76ae\u5c14\u4f2f\u683c(Steven Spielberg)\u548c\u96f7\u5fb7\u5229\u00b7\u65af\u79d1\u7279(Ridley Scott)\u7b49\u4eba\u6267\u5bfc\u7684\u5927\u5236\u4f5c\u7ecf\u5e38\u5728\u5168\u7f8e\u548c\u5176\u4ed6\u5730\u65b9\u7684\u7535\u5f71\u9662\u5438\u5f15\u6700\u591a\u7684\u89c2\u4f17\u3002\n\u4f46\u57286\u670810\u65e5\uff0c\u4e00\u90e8\u7968\u623f\u51a0\u519b\u7535\u5f71\u53ea\u6709\u4e24\u4e2a\u4eba\u5728\u4e00\u5bb6\u7535\u5f71\u9662\u89c2\u770b\u3002\n\u53d6\u6d88\u8ba2\u9605\u662f\u4e00\u90e829\u5206\u949f\u7684\u6050\u6016\u7535\u5f71\uff0c\u5b8c\u5168\u662f\u5728\u89c6\u9891\u4f1a\u8bae\u5e94\u7528Zoom\u4e0a\u62cd\u6444\u7684\uff0c\u5f53\u5929\u7684\u7968\u623f\u6536\u5165\u4e3a25,488\u7f8e\u5143(20,510 GB)\u3002\n\u6839\u636e\u4eab\u6709\u76db\u8a89\u7684\u6536\u5165\u76ee\u6807Box Office Mojo\u7684\u6570\u636e\uff0c\u5728\u5168\u56fd\u8303\u56f4\u5185\uff0c\u8fd9\u90e8\u7535\u5f71\u767b\u4e0a\u4e86\u6392\u884c\u699c\u699c\u9996\u3002\n\u8fd9\u90e8\u7535\u5f71\u662f\u6765\u81ea\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u8d39\u57ce\u7684\u6f14\u5458\u517cYouTuber\u57c3\u91cc\u514b\u00b7\u5854\u5df4\u8d6b(Eric Tabach)\u548c\u6765\u81ea\u7ebd\u7ea6\u5e02\u7684\u7535\u5f71\u5236\u7247\u4eba\u514b\u91cc\u65af\u8482\u5b89\u00b7\u5c3c\u5c14\u68ee(Christian Nilsson)\u7684\u521b\u610f\u3002\n\u5f53\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u57283\u6708\u4efd\u5173\u95ed\u7535\u5f71\u9662\u65f6\uff0c\u4e24\u4eba\u5728\u5371\u673a\u4e2d\u770b\u5230\u4e86\u673a\u4f1a\u3002\n\u8003\u8651\u5230\u6ca1\u6709\u5927\u7247\u5728\u7535\u5f71\u9662\u4e0a\u6620\uff0c\u4ed6\u4eec\u60f3\u77e5\u9053\u5982\u679c\u4ed6\u4eec\u81ea\u5df1\u5236\u4f5c\u4e00\u90e8DIY\u98ce\u683c\u7684\u7535\u5f71\uff0c\u662f\u5426\u80fd\u767b\u4e0a\u6392\u884c\u699c\u699c\u9996\u3002\n\u6211\u6ce8\u610f\u5230\u7968\u623f\u6570\u5b57\u5f88\u8352\u8c2c\uff1b\u6bcf\u90e8\u7535\u5f719,000\u7f8e\u5143\uff0c15,000\u7f8e\u5143\u3002\u6ca1\u6709\u4ec0\u4e48\u5927\u7684\u4e1c\u897f\u51fa\u6765\u3002\u5927\u7247\u88ab\u6401\u7f6e\u4e86\u3002\u5854\u5df4\u8d6b\u544a\u8bc9BBC\uff0c\u6211\u60f3\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u83b7\u5f97\u6700\u5927\u7684\u6570\u5b57\u3002\n\u4e3a\u4e86\u8fbe\u5230\u7968\u623f\u7684\u9876\u5cf0\uff0c\u5854\u5df4\u8d6b\u548c\u5c3c\u5c14\u68ee\u610f\u8bc6\u5230\u4ed6\u4eec\u5fc5\u987b\u73a9\u5f04\u4f53\u5236\u3002\u4ed6\u4eec\u662f\u901a\u8fc7\u5229\u7528\u7535\u5f71\u7968\u9500\u552e\u4e2d\u7684\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5373\u6240\u8c13\u7684\u56db\u5899\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\n\u66fe\u5728BuzzFeed\u5236\u4f5c\u75c5\u6bd2\u5f0f\u89c6\u9891\u7684\u5854\u5df4\u8d6b\u89e3\u91ca\u8bf4\uff0c\u56db\u9762\u5899\u662f\u6307\u53d1\u884c\u5546\u51fa\u79df\u7535\u5f71\u9662\uff0c\u7136\u540e\u8d2d\u4e70\u6240\u6709\u5ea7\u4f4d\u3002\n\u56e0\u6b64\uff0c\u4ed6\u4eec\u5411\u5267\u9662\u652f\u4ed8\u56fa\u5b9a\u7684\u8d39\u7528\uff0c\u4ed6\u4eec\u4ece\u5ea7\u4f4d\u4e0a\u8d5a\u53d6\u7684\u4efb\u4f55\u94b1\u90fd\u76f4\u63a5\u8fdb\u5165\u4e86\u4ed6\u4eec\u7684\u53e3\u888b\u3002\u5f53\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u79cd\u5206\u914d\u7684\u9009\u62e9\u65f6\uff0c\u6211\u4eec\u5c31\u53bb\u505a\u4e86\u3002\n\u7531\u4e8e\u597d\u83b1\u575e\u5728\u5927\u6d41\u884c\u671f\u95f4\u57fa\u672c\u4e0a\u5904\u4e8e\u5c01\u5b58\u72b6\u6001\uff0c\u5854\u5df4\u8d6b\u548c\u5c3c\u5c14\u68ee\u77e5\u9053\u4ed6\u4eec\u7684\u7535\u5f71\u6709\u5f88\u5927\u7684\u673a\u4f1a\u521b\u9020\u6700\u5927\u7684\u5355\u65e5\u603b\u7968\u623f\u3002\n\u5e26\u7740\u4e00\u4e2a\u6982\u5ff5\u548c\u4e00\u79cd\u79ef\u6781\u8fdb\u53d6\u7684\u6001\u5ea6\uff0c\u4e24\u4eba\u5f00\u59cb\u7740\u624b\u5236\u4f5c\u8fd9\u90e8\u7535\u5f71\u3002\n\u5c3c\u5c14\u68ee\u5148\u751f\u5728\u4e00\u5929\u5185\u5c31\u5199\u597d\u4e86\u5267\u672c\u3002\u8fd9\u90e8\u7535\u5f71\u8bb2\u8ff0\u4e86\u4e94\u4e2aYouTube\u7528\u6237\u52a0\u5165\u5728\u7ebf\u89c6\u9891\u901a\u8bdd\uff0c\u53d1\u73b0\u81ea\u5df1\u88ab\u4e00\u4e2a\u795e\u79d8\u7684\u4e92\u8054\u7f51\u5de8\u9b54\u51fa\u6ca1\u548c\u8ffd\u6355\u7684\u6545\u4e8b\u3002\n\u5854\u5df4\u8d6b\u5728\u670b\u53cb\u4eec\u7684\u5e2e\u52a9\u4e0b\u4e3b\u6f14\u4e86\u8fd9\u90e8\u7535\u5f71\u3002\u4ee4\u4ed6\u60ca\u8bb6\u7684\u662f\uff0c\u4ed6\u8bbe\u6cd5\u7b7e\u4e0b\u4e86\u4e00\u4e9b\u6709\u58f0\u671b\u7684\u6f14\u5458\u3002\n\u8fd9\u90e8\u7535\u5f71\u7684\u4e3b\u4eba\u516c\u201c\u6740\u624b\u201d\u7531\u67e5\u7406\u00b7\u5854\u6c49\u9970\u6f14\uff0c\u4ed6\u5728Netflix\u7535\u89c6\u5267\u201c\u5965\u624e\u514b\u201d\u4e2d\u9970\u6f14\u6000\u4e9a\u7279\u00b7\u5170\u6469\u5c14\u4e00\u89d2\u3002\u8054\u5408\u4e3b\u6f14\u7c73\u6b47\u5c14\u00b7\u54c8\u96f7(Michelle Khare)\u5df2\u7ecf\u5728HBO Max\u5373\u5c06\u4e0a\u6620\u7684\u7535\u89c6\u5267\u4e2d\u9970\u6f14\u89d2\u8272\u3002\n\u4e24\u4f4d\u8457\u540d\u7684YouTube\u7528\u6237\uff0c\u201c\u662f\u7684\u7406\u8bba\u201d\u7684\u6258\u9a6c\u65af\u00b7\u5e03\u62c9\u683c\u548c\u559c\u5267\u56e2\u4f53\u201cTry Guys\u201d\u7684\u6210\u5458\u624e\u514b\u00b7\u79d1\u6069\u83f2\u5c14\u5fb7\u4e5f\u5728\u5f71\u7247\u4e2d\u4eae\u76f8\u3002\n\u4ed6\u4eec\u771f\u7684\u5f88\u5174\u594b\u80fd\u6210\u4e3a\u67d0\u79cd\u4e1c\u897f\u7684\u4e00\u90e8\u5206\uff0c\u5854\u5df4\u8d6b\u8bf4\uff0c\u4ed6\u672c\u4eba\u4e5f\u66fe\u51fa\u6f14\u8fc7\u8fd9\u90e8\u7535\u5f71\u3002\n\u5728\u9694\u79bb\u671f\u95f4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u771f\u7684\u5f88\u65e0\u804a\u3002\u7edd\u5bf9\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u514d\u8d39\u6210\u4e3a\u8fd9\u4e2a\u6709\u8da3\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\n\u4ed6\u4eec\u57285\u6708\u4efd\u62cd\u6444\u4e86\u8fd9\u90e8\u7535\u5f71\u8d85\u8fc75\u5929\uff0c\u53ea\u4f7f\u7528Zoom\u6765\u6355\u6349\u955c\u5934\u3002\u5c3c\u5c14\u68ee\u5148\u751f\u968f\u540e\u7f16\u8f91\u4e86\u8fd9\u6bb5\u89c6\u9891\uff0c\u5e76\u8bf7\u4e00\u4f4d\u670b\u53cb\u8c31\u5199\u4e86\u4e00\u4e2a\u4e50\u8c31\u3002\u51e0\u5468\u4e4b\u5185\uff0c\u5b83\u5c31\u53ef\u4ee5\u5728\u7535\u5f71\u9662\u4e0a\u6620\u4e86\u3002\n\u4ed6\u4eec\u51b3\u5b9a\u5728\u7ebd\u7ea6\u5e02\u90ca\u5916\u5a01\u65af\u5b89\u666e\u987f\u6d77\u6ee9\u7684\u4e00\u5bb6\u72ec\u7acb\u5267\u9662\u653e\u6620\u8fd9\u90e8\u7535\u5f71\uff0c\u5c3c\u5c14\u68ee\u66fe\u5728\u90a3\u91cc\u5de5\u4f5c\u3002\u8981\u79df\u5267\u9662\uff0c\u4ed6\u4eec\u9700\u8981\u4ed8\u4e00\u5c0f\u7b14\u8d39\u7528\u3002\n\u6b63\u5982Facebook\u4e0a\u53d1\u5e03\u7684\u7167\u7247\u663e\u793a\uff0c\u5728\u653e\u6620\u5f53\u665a\uff0c\u8fd9\u5bf9\u60c5\u4fa3\u53bb\u4e86\u9547\u4e0a\u3002\n\u5854\u5df4\u8d6b\u548c\u5c3c\u5c14\u68ee\u8eab\u7740\u71d5\u5c3e\u670d\uff0c\u5934\u53d1\u6574\u9f50\u5730\u5411\u540e\u68b3\uff0c\u81ea\u8c6a\u5730\u7ad9\u5728\u5267\u9662\u5916\u3002\u5728\u4ed6\u4eec\u7684\u5934\u9876\u4e0a\uff0c\u5f71\u9662\u7684\u56e4\u79ef\u7269\u4e0a\u5370\u7740\u4ed6\u4eec\u7535\u5f71\u7684\u7247\u540d\u3002\u53d6\u6d88\u8ba2\u9605\uff0c\u4e0a\u9762\u5199\u7740\uff0c\u552e\u7f44\u3002\n\u6211\u4eec\u51fa\u73b0\u4e86\uff0c\u4e70\u4e86\u4e00\u4e9b\u7206\u7c73\u82b1\uff0c\u5750\u4e0b\u6765\u73a9\u4e86\u8d77\u6765\u3002\u6211\u4ece\u6765\u6ca1\u6709\u770b\u8fc7\u7a7a\u8361\u8361\u7684\u7535\u5f71\u9662\uff0c\u5c24\u5176\u662f\u653e\u6620\u6211\u5728\u91cc\u9762\u62cd\u7684\u7535\u5f71\u7684\u7535\u5f71\u9662\u3002\u90a3\u771f\u662f\u4e00\u6b21\u5f88\u9177\u7684\u7ecf\u5386\u3002\u6211\u4e00\u904d\u53c8\u4e00\u904d\u5730\u770b\u4e86\u6bcf\u4e00\u573a\u653e\u6620\uff0c\u5854\u5df4\u8d6b\u8bf4\u3002\n\u5854\u5df4\u8d6b\u5148\u751f\u603b\u5171\u770b\u4e86\u8fd9\u90e8\u7535\u5f71\u4e94\u6b21\uff0c\u6bcf\u4e00\u5206\u949f\u90fd\u770b\u5f97\u6d25\u6d25\u6709\u5473\u3002\n\u4e00\u65e6\u6536\u5165\u7ed3\u679c\u51fa\u6765\uff0c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u5c31\u662f\u8bf4\u670dBox Office Mojo\u7684\u6240\u6709\u8005IMDb\uff0c\u4ed6\u4eec\u7684\u7535\u5f71\u662f\u5408\u6cd5\u7684\u3002\n\u4ed6\u4eec\u4e00\u76f4\u62d2\u7edd\u6211\u4eec\uff0c\u8bf4\u6ca1\u6709\u8bc1\u636e\uff0c\u5854\u5df4\u8d6b\u5148\u751f\u8bf4\u3002\u6240\u4ee5\u6211\u4eec\u628a\u6f14\u5458\u7684\u7167\u7247\u5bc4\u7ed9\u4ed6\u4eec\uff0c\u4f46\u4ed6\u4eec\u4e00\u76f4\u5bf9\u6574\u4ef6\u4e8b\u6301\u6000\u7591\u6001\u5ea6\u3002\u5f53\u5a92\u4f53\u5f00\u59cb\u62a5\u9053\u8fd9\u90e8\u7535\u5f71\u65f6\uff0c\u5b83\u6700\u7ec8\u83b7\u5f97\u4e86\u6279\u51c6\u3002\n\u73b0\u5728\u5b83\u6b63\u5f0f\u6210\u4e3aIMDb\u4e0a\u7684\u7b2c\u4e00\u540d\uff0c\u8fd9\u592a\u75af\u72c2\u4e86\u3002\u8fd9\u662f6\u670810\u65e5\u7684\u7b2c\u4e00\u540d\u3002\n\u6392\u540d\u7b2c\u4e8c\u7684\u7535\u5f71\u300a\u53ef\u601c\u7684\u4eba\u300b\u572899\u5bb6\u5f71\u9662\u4e0a\u6620\uff0c\u6536\u516522566\u7f8e\u5143\u3002\n\u53d6\u6d88\u8ba2\u9605\u53ef\u80fd\u53ea\u662f\u4e00\u4e2a\u4e00\u6b21\u6027\u7684\u70ed\u95e8\u8bdd\u9898\uff0c\u4e5f\u8bb8\u662f\u9152\u5427\u6d4b\u9a8c\u4e2d\u4e00\u4e2a\u6666\u6da9\u96be\u61c2\u7684\u7410\u788e\u95ee\u9898\u3002\n\u4f46\u5854\u5df4\u8d6b\u8868\u793a\uff0c\u8fd9\u90e8\u53ef\u4ee5\u5728\u6d41\u5a92\u4f53\u5e73\u53f0Vimeo\u4e0a\u89c2\u770b\u7684\u7535\u5f71\u4ee3\u8868\u7684\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7968\u623f\u8be1\u8ba1\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u603b\u80fd\u627e\u5230\u521b\u9020\u6027\u7684\u65b9\u6cd5\u628a\u4e8b\u60c5\u505a\u5b8c\u3002\u5373\u4f7f\u5728\u56f0\u96be\u7684\u60c5\u51b5\u4e0b\u3002\u4ed6\u8bf4\uff0c\u770b\u5230\u6240\u6709\u8fd9\u4e9b\u88ab\u56f0\u5728\u5bb6\u91cc\u7684\u4eba\u805a\u5728\u4e00\u8d77\u505a\u4e00\u4e2a\u9879\u76ee\uff0c\u8fd9\u5f88\u9177\u3002", "note_en": "The big-budget productions, directed by the likes of James Cameron, Steven Spielberg and Ridley Scott, regularly draw the biggest crowds at cinemas across the US and beyond.\n But on 10 June, one box office-topping movie was watched by just two people, in one cinema.\n Unsubscribe, a 29-minute horror movie shot entirely on video-conferencing app Zoom, generated $25,488 (\u00a320,510) in ticket sales on that day.\n Nationwide, the movie hit the top of the charts,  according to reputable revenue tacker Box Office Mojo.\n    The movie was the brainchild of Eric Tabach, an actor and YouTuber from Philadelphia, Pennsylvania, and filmmaker Christian Nilsson, from New York City.\n When the coronavirus pandemic shuttered movie theatres in March, the pair saw an opportunity in the crisis.\n Given no big films were being released in cinemas, they wondered if they could hit the top of the charts if they made their own movie, DIY style.\n &#34;I noticed that the box office figures were absurd; $9,000, $15,000 for each movie. Nothing big was coming out. Blockbuster films were on hold. I wanted to find a way to get the biggest number,&#34; Mr Tabach told the BBC.\n   To reach the top of the box office, Mr Tabach and Mr Nilsson realised they had to game the system. They did so by exploiting a loophole in cinema ticket sales, known as four-walling.\n &#34;Four-walling is when distributors rent out a movie theatre and buy all the seats,&#34; Mr Tabach, who used to work at BuzzFeed making viral videos, explained.\n &#34;So they pay a flat fee to the theatre, and any money they make off seats goes straight into their pockets. The moment we realised that was an option of distribution, we went for it.&#34;\n With Hollywood essentially mothballed during the pandemic, Mr Tabach and Mr Nilsson knew their movie had a solid chance of raking in the biggest one-day revenue total.\n With little more than a concept and a can-do attitude, the pair set to work on making the movie.\n  Mr Nilsson wrote the script in one day. The movie is about five YouTubers who join an online video-call and find themselves haunted and hunted by a mysterious internet troll.\n Mr Tabach enlisted the help of his friends to star in the movie. To his surprise, he managed to sign up some prestigious actors.\n The movie&#39;s protagonist, the killer, was played by Charlie Tahan, best known as Wyatt Langmore in Netflix series Ozark. The co-star, Michelle Khare, has been cast in a soon-to-be-released series on HBO Max.\n Two well-known YouTubers, Yes Theory&#39;s Thomas Brag and Zach Kornfeld, part of comedy group The Try Guys, also featured in the film.\n  &#34;They were really excited to be a part of something,&#34; said Mr Tabach, who himself appeared in the film.\n &#34;It was at a point in the quarantine when everyone was really bored. Absolutely nothing was going on. Everyone wanted to be a part of this fun project, for free.&#34;\n They shot the movie over five days in May, only using Zoom to capture footage. Mr Nilsson then edited the footage and asked a friend to compose a score. Within weeks, it was cinema-ready.\n They decided to screen the movie at an independent theatre in Westhampton Beach, outside New York City, where Mr Nilsson used to work. To rent the theatre, they were required to pay a small fee.\n  On the night of the screening, the pair went to town, as pictures posted to Facebook show.\n  Dressed in tuxedos, with their hair neatly swept back, Mr Tabach and Mr Nilsson stood proudly outside the theatre. Above their heads, the theatre&#39;s hoarding bore the title of their movie. Unsubscribe, it read, above the words &#34;sold out&#34;.\n  &#34;We showed up, got some popcorn, sat down and played it. I&#39;ve never seen an empty movie theatre, not least one playing a film I was in and made. It was a really cool experience. I watched every screening, over and over again,&#34; Mr Tabach said.\n Mr Tabach watched the movie five times in total, lapping up every minute of it.\n Once the revenue results were in, the next task was to convince IMDb, the owner of Box Office Mojo, their movie was legitimate.\n &#34;They kept rejecting us, saying there was no proof,&#34; Mr Tabach said. &#34;So we sent them pictures of the actors, but they kept on doubting the entire thing. When media outlets started reporting about the film, it was eventually approved.\n &#34;Now it&#39;s officially number one on IMDb, which is crazy. It was number one for 10 June.&#34;\n The movie in second place, The Wretched, was screened in 99 cinemas, earning $22,566 in revenue.\n Unsubscribe may only prove to be a one-off hit, an obscure trivia question on a pub quiz, perhaps.\n But Mr Tabach said the film,  which can be viewed on streaming platform Vimeo, represents more than a box-office ruse.\n &#34;No matter what, you can always find creative ways to get something done. Even in difficult circumstances. It was cool to see all these people stuck at home come together and make a project,&#34; he said.", "posttime": "2020-06-20 02:19:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u8ba2\u9605,budget", "title": "\u53d6\u6d88\u8ba2\u9605\uff1a\u767b\u4e0a\u7f8e\u56fd\u7968\u623f\u699c\u9996\u76840\u7f8e\u5143\u9884\u7b97\u7535\u5f71", "title_en": "Unsubscribe: The $0-budget movie that \u2018topped the US box office\u2019", "transed": 1, "url": "https://www.bbc.co.uk/news/world-us-canada-53099283", "via": "", "real_tags": ["\u7535\u5f71", "\u8ba2\u9605", "budget"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007296, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u5173\u4e8e\u4ece\u96f6\u5f00\u59cb\u4e3a\u7ec8\u7aef\u6784\u5efaMcCLIM\u540e\u7aef\u7684\u6559\u7a0b\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\u8bfb\u5b8c\u7b2c\u4e00\u671f\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u5f88\u597d\u5730\u638c\u63e1\u5982\u4f55\u63a7\u5236\u548c\u8bfb\u53d6\u6765\u81ea\u7ec8\u7aef\u7684\u8f93\u5165\u3002\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u548c\u6613\u7528\u6027\uff0c\u73b0\u5728\u662f\u65f6\u5019\u6539\u8fdb\u4e00\u4e0b\u4e86\u3002\u5982\u679c\u4f60\u6ca1\u6709\u8bfb\u5b8c\u6700\u540e\u4e00\u90e8\u5206\uff0c\u8fd9\u91cc\u662f\u5305\u542b\u6e90\u4ee3\u7801\u7684\u5f52\u6863\u6587\u4ef6\uff0c\u5b83\u5c06\u4f5c\u4e3a\u8fd9\u7bc7\u6587\u7ae0\u7684\u8d77\u70b9\u3002\n\u76ee\u524d\uff0c\u6211\u4eec\u7684I/O\u4e0e\u7ec8\u7aef\u540c\u6b65\u3002\u5f53\u6211\u4eec\u8c03\u7528outor ctl\u65f6\uff0c\u5b57\u7b26\u7acb\u5373\u88ab\u53d1\u9001\u5230\u5b83\uff0c\u5e76\u4e14\u6211\u4eec\u4f7f\u7528read-input\u8bfb\u53d6\u8f93\u5165\uff0c\u76f4\u5230\u6d41\u4e3a\u7a7a\u3002\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6a21\u578b\u5f53\u7136\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u7b80\u5355\u7684\u6a21\u578b\u5f88\u96be\u6709\u6548\u5730\u4f7f\u7528\u3002\u6211\u4eec\u5c06\u628a\u91cd\u70b9\u653e\u5728\u201c\u7b80\u5355\u201d\u4e0a\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u628a\u91cd\u70b9\u653e\u5728\u8f93\u51fa\u4e0a\u3002\n\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u6240\u6709\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u5c42\u6b21\u7684\u65b9\u5411\u6765\u89e3\u51b3\u3002--\u5927\u536b\u00b7\u60e0\u52d2\u3002\n\u6211\u4eec\u5c06\u4e3a\u7f16\u5199\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u4e00\u4e2a\u65b9\u4fbf\u7684\u62bd\u8c61\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u653e\u5f03\u76f4\u63a5\u64cd\u7eb5\u822a\u7ad9\u697c\u7684\u624b\u6bb5\uff0c\u90a3\u5c06\u662f\u4e00\u79cd\u803b\u8fb1\u3002\u8be5\u5e93\u5c06\u63d0\u4f9b\u4e0d\u540c\u7684API\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fce\u5408\u7a0b\u5e8f\u5458\u7684\u9700\u8981\u3002\u539f\u5219\u4e0a\uff0c\u540c\u65f6\u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684\u62bd\u8c61\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u8f83\u9ad8\u7684\u62bd\u8c61\u5efa\u7acb\u5728\u8f83\u4f4e\u7684\u62bd\u8c61\u4e4b\u4e0a\uff0c\u4e8b\u60c5\u53ef\u80fd\u4f1a\u51fa\u9519\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e24\u4e2a\u5305\uff1aeu.turtleware.charming-clim/l0\u548ceu.turtleware.charming-Climate.Terminal/L1\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u62bd\u8c61\u7ea7\u522b\u6765\u8bbf\u95ee\u7ec8\u7aef\u3002\u5b83\u4eec\u53ea\u662f\u4f5c\u4e3a\u5bfc\u51fa\u7b26\u53f7\u7684\u624b\u6bb5\uff0c\u6240\u6709\u7684\u5b9e\u73b0\u90fd\u5728\u4e00\u4e2a\u5305\u4e2d\u5b8c\u6210\uff0c\u8fd9\u79cd\u505a\u6cd5\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u4f7f\u7528Common Lisp\u5305\u7684\u4eba\u7684\u751f\u6d3b\u8d28\u91cf\u3002\u73b0\u5728\u521b\u5efa\u6587\u4ef6Packages.lisp\u3002\n(defpackage#\uff1aeu.turtleware.charming-clim/l0(\uff1aexport#\uff1ainit-Terminal#\uff1a\u5173\u95ed\u7ec8\u7aef#\uff1a*Terminal*#\uff1aput#\uff1aesc#\uff1acsi#\uff1asgr#\uff1a\u8bfb\u53d6\u8f93\u5165#\uff1akeyp#\uff1a\u590d\u4f4d\u7ec8\u7aef#\uff1a\u6e05\u9664\u7ec8\u7aef#\uff1a\u6e05\u9664\u884c#\uff1a\u8bbe\u7f6e\u524d\u666f\u989c\u8272#\uff1a\u8bbe\u7f6e\u80cc\u666f\u989c\u8272#\uff1a\u5e26\u6709\u5149\u6807\u4f4d\u7f6e#\uff1a\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e#\uff1a\u4fdd\u5b58\u5149\u6807\u3002-Position#\uff1aRestore-Cursor-Position#\uff1aRequest-Cursor-Position#\uff1aCursor-Up#\uff1aCursor-Down#\uff1aCursor-Right#\uff1aCursor-Left#\uff1aSet-Cursor-Visibility#\uff1aSet-Mice-Tracking)(defpackage#\uff1aeu.turtleware.charming-clim/L1(\uff1aexport#\uff1awith-console#\uff1aout#\uff1actl))(defpackage#\uff1aeu.turtleware.charming-clim(\uff1ause#\uff1acommon\u3002-LISP#\uff1aeu.turtleware.charming-clim/l0#\uff1aeu.turtleware.charming-clim/L1)\u3002\n\u6211\u4eec\u5c06\u5229\u7528\u8fd9\u4e2a\u673a\u4f1a\u4f7f\u51fd\u6570\u547d\u540d\u66f4\u52a0\u4e00\u81f4\uff0c\u5e76\u4ecb\u7ecd\u5149\u6807\u64cd\u4f5c\u5b9e\u7528\u7a0b\u5e8f\u3002\u91cd\u547d\u540d\u51fd\u6570\u3002\n\u5e76\u6dfb\u52a0\u7528\u4e8e\u64cd\u4f5c\u5149\u6807\u7684\u8f6c\u4e49\u5e8f\u5217\u3002\u4e0d\u8981\u5fd8\u8bb0\u5728\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206(\u5728\u5b8fctl\u548c\u51fd\u6570initialize-instance\u3001(SETF PTR)\u548c(SETF CVP)\u4e2d)\u66f4\u6539\u5bf9\u91cd\u547d\u540d\u51fd\u6570\u7684\u5f15\u7528\u3002\n(Maclet((moveit(Endch)`(if(=n 1)(csi\uff0cendch)(csi\uff0cendch)(csi n\uff0cendch)(deful sor-up(&amp\uff1b\u53ef\u9009(N 1))(moveit&#34\uff1bA&#34\uff1b))(deun sor-down(&amp\uff1b\u53ef\u9009(N 1))(moveit&#34\uff1bB&#34\uff1b))(deful sor-right(&amp\uff1b\u53ef\u9009(N 1))(moveit&#34\uff1bC&#34\uff1b))(def Cursor-Left(&amp\uff1bOptional(N 1))(moveit&#34\uff1bD&#34\uff1b))(deun\u8bbe\u7f6e\u5149\u6807\u53ef\u89c1\u6027(Visiblep)(if visiblep(csi&#34\uff1b\uff1f&#34\uff1b2 5&#34\uff1bh&#34\uff1b)(csi&#34\uff1b\uff1f&#34\uff1b2 5&#34\uff1bl&#34\uff1b)(csi&#34\uff1b\uff1f&#34\uff1b2 5&#34\uff1bl&#34\uff1b\uff1b\uff1b(CSI\uff1f\u8ddf\u8e2a\uff1b\u7f16\u7801h/l)\uff1b\u8ddf\u8e2a\uff1a1000-\u6b63\u5e38\uff0c1002-\u6309\u94ae\uff0c1003-\u6240\u6709\u52a8\u4f5c\uff1b1004-\u7126\u70b9\u8f93\u5165/\u8f93\u51fa\uff1b\u7f16\u7801\uff1a1006-SGR\u7f16\u7801\u65b9\u6848(deFun\u8bbe\u7f6e-\u9f20\u6807\u8ddf\u8e2a(Enabledp)(\u5982\u679c\u542f\u7528)(\u5982\u679c\u542f\u7528)p(csi&#34\uff1b\uff1f&#34\uff1b1003&#34\uff1b\uff1b&#34\uff1b1006&#34\uff1bh&#34\uff1b)(csi&#34\uff1b\uff1f&#34\uff1b1003&#34\uff1b)(CSI&#34\uff1b\uff1f&#34\uff1b\uff1f&#34\uff1b1003&#34\uff1b)(CSI&#34\uff1b\uff1f&#34\uff1b\uff1f&#34\uff1b1003&#34\uff1b)(deFun set-alt-is-meta(Bool)(if bool(setf+alt-mod++meta-mod+)(setf+alt-mod++alt-mod*+)\u3002\n\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u4f4e\u7ea7\u62bd\u8c61\u65f6\uff0c\u6211\u4eec\u5c06\u628a\u76ee\u6807\u5bf9\u8c61\u79f0\u4e3a\u7ec8\u7aef\uff0c\u800c\u5f53\u6211\u4eec\u8c08\u8bba\u9ad8\u7ea7\u62bd\u8c61\u65f6\uff0c\u6211\u4eec\u5c06\u628a\u5b83\u7684\u76ee\u6807\u5bf9\u8c61\u79f0\u4e3a\u63a7\u5236\u53f0\u3002\u91cd\u547d\u540d\u4ee5\u4e0b\u7b26\u53f7\u3002\n\u5e76\u66ff\u6362\u6e90\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u5f15\u7528\u4ee5\u4f7f\u7528\u65b0\u7b26\u53f7\u3002\u5c06\u53d8\u91cf*TERMINAL*\u548c\u51fd\u6570INIT-TERMINAL\u548cCLOSE-TERMINAL\u79fb\u5230\u9876\u90e8(\u5916\u6765\u51fd\u6570\u5b9a\u4e49\u4e0b\u65b9)\u3002\n\u6211\u4eec\u5c06\u7565\u5fae\u91cd\u6784\u96c6\u5408-*-\u989c\u8272\u51fd\u6570\u3002\u51fd\u6570\u5c06\u4f7f\u7528\u8868\u793a\u989c\u8272RGBA\u503c\u7684\u6570\u5b57\uff0c\u800c\u4e0d\u662f\u5355\u72ec\u63a5\u53d7\u6bcf\u79cd\u989c\u8272\u3002\u4f8b\u5982#ff000000\u8868\u793a\u7ea2\u8272\u3002\u73b0\u5728\u5c06\u5ffd\u7565\u5b57\u6bcd\u8868\uff0c\u4f46\u62e5\u6709\u6b64\u7ec4\u4ef6\u5c06\u7701\u53bb\u6570\u636e\u8868\u793a\u683c\u5f0f\u7684\u53e6\u4e00\u6b21\u66f4\u6539\u3002\n(DeFun Set-\u524d\u666f\u8272(COLOR)(\u8ba9((r(LDB&#39\uff1b(8.\u300224)\u989c\u8272))(g(LDB&#39\uff1b(8.\u300216)\u989c\u8272))(b(LDB&#39\uff1b(8.\u30028)\u989c\u8272)(a(LDB&#39\uff1b(8.\u30020)color)(DECLARE(\u5ffd\u7565a))(sgr&#34\uff1b38\uff1b2\uff1b&#34\uff1br&#34\uff1b\uff1b&#34\uff1bg&#34\uff1b\uff1b&#34\uff1bb)(deFun set-back-color(Color)(let((r(LDB&#39\uff1b(8.\u300224)\u989c\u8272))(g(LDB&#39\uff1b(8.\u300216)\u989c\u8272))(b(LDB&#39\uff1b(8.\u30028)\u989c\u8272)(a(LDB&#39\uff1b(8.\u30020)color)(\u58f0\u660e(\u5ffd\u7565a))(sgr&#34\uff1b48\uff1b2\uff1b&#34\uff1br&#34\uff1b\uff1b&#34\uff1bg&#34\uff1b\uff1b&#34\uff1bb))\u3002\n(def\u5b8fctl(&amp\uff1bREST\u64cd\u4f5c)`(#|.|#(\uff1afgc`(setf(fgc*console*)\uff0c@args))(\uff1abgc`(setf(bgc*console*)\uff0c@args)(defclass console()#|.|#(\uff1adefault-initargs\uff1afgc#xffa0a000\uff1abgc#x222200))(defmethod initialize-instance\uff1aAfter(\u5b9e\u4f8b\u63a7\u5236\u53f0)&amp\u3002key FGC BGC pos CVP PTR)#|.|#(\u8bbe\u7f6e\u524d\u666f\u8272FGC)(\u8bbe\u7f6e\u80cc\u666f\u8272BGC)(defmethod(SETF FGC)\uff1aAfter(RGBA(\u5b9e\u4f8b\u63a7\u5236\u53f0))(\u8bbe\u7f6e\u524d\u666f\u8272RGBA))(defmethod(SETF BGC)\uff1aAfter(RGBA(\u5b9e\u4f8b\u63a7\u5236\u53f0))(\u8bbe\u7f6e\u80cc\u666f\u8272RGBA))(deFun show-Screen()#|.|#(out\u3002\uff1abgc#x00000000\uff1afgc#xbb000000))(out(\uff1abgc#x00000000\uff1afgc(\u4e9a\u5386\u5c71\u5927\uff1aRandom-ELT&#39\uff1b(#x00444400#x00444400#x00664400)\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u6309\u4ee5\u4e0b\u987a\u5e8f\u5c06\u4e0e\u63a7\u5236\u53f0\u76f8\u5173\u7684\u90e8\u4ef6\u79fb\u52a8\u5230\u5355\u72ec\u7684\u6587\u4ef6console.lisp\uff1a\n\u6700\u540e\uff0c\u793a\u4f8b\u4ee3\u7801\u5c06\u653e\u5728\u6587\u4ef6example.lisp\u4e2d\u3002\u79fb\u52a8\u529f\u80fd\u5728\u90a3\u91cc\u663e\u793a\u5c4f\u5e55\u548c\u5f00\u59cb\u663e\u793a\u3002\n(defsystem&#34\uff1beu.turtleware.charming-clim&#34\uff1b\uff1adefsystem-Dependent-on(#\uff1aCFFI)\uff1aDepends-on(#\uff1aAlexandria#\uff1aCFFI#\uff1aSwank)\uff1aComponents((\uff1acfile&#34\uff1braw-mode&#34\uff1b)(\uff1afile&#34\uff1bPackages&#34\uff1b)(\uff1afile&#34\uff1bTerminal&#34\uff1b\uff1aDepends-on(&#34\uff1bPackages&#34\uff1b)(\uff1a\u6587\u4ef6&#34\uff1b\u63a7\u5236\u53f0&#34\uff1b\uff1a\u4f9d\u8d56\u4e8e(&#34\uff1b\u5305&#34\uff1b&#34\uff1b\u7ec8\u7aef&#34\uff1b))(\uff1a\u6587\u4ef6&#34\uff1b\u793a\u4f8b&#34\uff1b\uff1a\u4f9d\u8d56\u4e8e(&#34\uff1b\u5305&#34\uff1b&#34\uff1b\u63a7\u5236\u53f0&#34\uff1b))\u3002\nConsole\u5bf9\u8c61\u6709\u5f88\u591a\u804c\u8d23\uff0c\u56e0\u6b64\u91cd\u6784\u5b83\u4ee5\u7ee7\u627f\u4ec5\u5b9e\u73b0\u4e0e\u8f93\u51fa\u76f8\u5173\u7684\u90e8\u5206\u7684\u7c7b\u662f\u6709\u610f\u4e49\u7684\u3002\u5f53\u6211\u4eec\u51b3\u5b9a\u6dfb\u52a0\u53e6\u4e00\u5c42\u95f4\u63a5\u5c42\u65f6\uff0c\u8fd9\u4e5f\u4f1a\u5f88\u6709\u7528\u3002\u5728\u5b9e\u73b0\u7f13\u51b2\u533a\u65f6\uff0c\u6211\u8fd8\u4f1a\u5c06\u4e00\u4e2a\u4e0d\u5408\u9002\u7684\u4f4d\u7f6e\u8868\u793a\u56fa\u5b9a\u4e3acons\uff0c\u5e76\u6307\u5b9a\u526a\u8f91\u533a\u57df\u3002\u521b\u5efa\u6587\u4ef6output.lisp\u5e76\u5c06\u5176\u6dfb\u52a0\u5230ASD\u6587\u4ef6\u3002\n(defsystem&#34\uff1beu.turtleware.charming-clim&#34\uff1b\uff1adefsystem-Dependent-on(#\uff1aCFFI)\uff1aDepends-on(#\uff1aAlexandria#\uff1aCFFI#\uff1aSwank)\uff1aComponents((\uff1acfile&#34\uff1braw-mode&#34\uff1b)(\uff1afile&#34\uff1bPackages&#34\uff1b)(\uff1afile&#34\uff1bTerminal&#34\uff1b\uff1aDepends-on(&#34\uff1bPackages&#34\uff1b)(\uff1a\u6587\u4ef6&#34\uff1b\u8f93\u51fa&#34\uff1b\uff1a\u4f9d\u8d56\u4e8e(&#34\uff1b\u5305&#34\uff1b))(\uff1a\u6587\u4ef6&#34\uff1b\u5305&#34\uff1b\u63a7\u5236\u53f0&#34\uff1b\u4f9d\u8d56\u4e8e(&#34\uff1b\u5305&#34\uff1b&#34\uff1b\u8f93\u51fa&#34\uff1b&#34\uff1b\u7ec8\u7aef&#34\uff1b))(\uff1a\u6587\u4ef6&#34\uff1b\u793a\u4f8b&#34\uff1b\uff1a\u4f9d\u8d56(&#34\uff1b\u5305&#34\uff1b&#34\uff1b\u63a7\u5236\u53f0&#34\uff1b()\u3002\n\u5b8fout\u548cctl\u5c06\u5728\u5f53\u524d\u865a\u62df\u7f13\u51b2\u533a\u4e0a\u64cd\u4f5c\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u5fc5\u987b\u7531\u6240\u6709\u865a\u62df\u7f13\u51b2\u533a\u5b9e\u73b0\u7684\u534f\u8bae\u3002With-Clip\u73b0\u5728\u53d8\u6210\u4e86\u4e00\u79cd\u65b9\u4fbf\u7684\u5b8f\u6269\u5c55\u4e3a\u901a\u7528\u51fd\u6570Invoke-with-Clip\u3002\u5f15\u5165\u4e00\u4e2a\u5e26-Buffer\u7684\u5b8f\u6765\u7ed1\u5b9a\u5f53\u524d\u7f13\u51b2\u533a\uff0c\u8be5\u7f13\u51b2\u533a\u7ed1\u5b9a\u5230\u53d8\u91cf*Buffer*\u3002\n(defGeneric PUT-CELL(\u7f13\u51b2\u533a\u884c\u5217fg bg))(defGeneric FGC(Buffer))(defGeneric(SETF FGC)(FGC Buffer)(\uff1a\u53c2\u6570\u4f18\u5148\u987a\u5e8f\u7f13\u51b2\u533aFGC))(defGeneric BGC(Buffer))(defGeneric(SETF BGC)(BGC Buffer)(\uff1a\u53c2\u6570\u4f18\u5148\u987a\u5e8f\u7f13\u51b2\u533aBGC))(defGeneric\u884c(\u7f13\u51b2\u533a))(defGeneric(SETF\u884c)(\u884c\u7f13\u51b2\u533a)(\uff1a\u53c2\u6570-\u3002\u4f18\u5148\u987a\u5e8f\u7f13\u51b2\u884c))(defGeneric\u5217(\u7f13\u51b2\u533a))(defGeneric(\u96c6\u5408\u5217)(\u5217\u7f13\u51b2\u533a)(\uff1a\u81ea\u53d8\u91cf\u4f18\u5148\u987a\u5e8f\u7f13\u51b2\u533a\u5217))(defGeneric\u884c(\u7f13\u51b2\u533a))(defGeneric Inside-p(\u7f13\u51b2\u533a\u884c))(defGeneric Inside-p(\u7f13\u51b2\u533a\u884c))(defGeneric Inside-With-Clip(\u7f13\u51b2\u533a\u5ef6\u7eed&amp\uff1bREST\u9009\u9879&amp\uff1bkey r1 c1 R2 c2 fn)(\u5e26-CLIPPING\u7684def\u5b8f((\u7f13\u51b2\u533a&amp\uff1bREST\u9009\u9879)&amp\uff1bBody Body)(let((fn(Gensym)`(Flet((\uff0cfn()\uff0c@body)(DECLARE(Dynamic-Extension(function\uff0cfn)(Invoke-with-clipping\uff0cbuffer(function\uff0cfn)\uff0c@opts)(defvar*buffer*)(def\u5b8fwith-buffer((Object)&amp\uff1bBody Body)`(let((*buffer*\uff0cobject))\uff0c@body)\u3002\n\u4e0b\u9762\u7528\u8fd9\u4e9b\u672f\u8bed\u5b9e\u73b0CTL\u548cOUT\u5b8f\u3002\u6211\u4eec\u5c06\u6682\u65f6\u4ecectl\u5b8f\u4e2d\u7701\u7565\uff1acvp\u548c\uff1aptr\u9009\u9879\u3002LETF\u548cClear-Rectangle\u4fdd\u6301\u4e0d\u53d8\u3002\u4ececonsole.lisp\u6587\u4ef6\u4e2d\u5220\u9664\u65e7\u5b8f\u3002\n(def\u5b8fletf(binings&amp\uff1bBody)(LOOP FOR(Place Value)in Bindings for old-val=(Gensym)Collect`(\uff0cold-val\uff0cplace)into save Collect`(setf\uff0cplace\uff0cvalue)into store Collect`(setf\uff0cplace\uff0cold-val)into Restore Final)(return`(let(\uff0c@save)(Unwind-Protect(pron\uff0c@store\uff0c@body)\uff0c@restore)(def\u5b8fout((&amp\uff1b\u952e\u884c\u5217FGC BGC)\u5bf9\u8c61)`(let((buf*buffer*)(str(princ-to-string\uff0cobject)(assert(NULL(find#\\newline str)(letf(Row Buf)(or\uff0crow(Row Buf)((Colbuf)(or\uff0ccol(Colbuf)((FGC Buf)(or\uff0cFGC(FGC Buf)((BBGC\u3002bgc(Bgc Buf)(LOOP with row=(Row Buf)for colfrom(Colbuf)for ch over str with bgc=(Bgc Buf)with fgc=(Fgc Buf)do(put-cell buf row colch fgc bgc)(def\u5b8fctl(&amp\uff1bREST\u64cd\u4f5c)`(let((buf*buffer*))\uff0c@(COLLECT\u64cd\u4f5c\u4e2d\u7684OP\u5faa\u73af(\u6790\u6784-\u7ed1\u5b9a(name&amp\uff1bREST ARGS)OP(ECASE NAME(\uff1aclr`(clear-rectangle\uff0c@args))(\uff1afgc`(setf(Fgc Buf)\uff0c@args))(\uff1abgc`(setf(Bgc Buf)\uff0c@args))(\uff1arow`(setf(Row Buf)\uff0c@args))(\uff1acol`(setf(Colbuf)\uff0c@args)(defun\u6e05\u9664-\u77e9\u5f62(R1c1r2c2)(\u5e26str=(make-string(1+(-c2c1))\uff1a\u9996\u5b57\u6bcd\u5143\u7d20#\\space)\u8868\u793ar\u4ecer1\u5230r2do(OUT(\uff1aROW r\uff1aCOL c1)str))\u3002\n\u5982\u679c\u6ca1\u6709\u5b9e\u73b0\uff0c\u534f\u8bae\u4f1a\u662f\u4ec0\u4e48\u5462\uff1f\u88c1\u526a\u5c06\u901a\u8fc7\u7c7bClip\u5b9e\u73b0\u3002\u6b64\u9009\u62e9\u662f\u900f\u660e\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u51fd\u6570\u90fd\u662f\u5728\u7f13\u51b2\u533a\u4e0a\u4e13\u7528\u7684\u3002\u6bcf\u4e2a\u7f13\u51b2\u533a\u90fd\u6709\u5176\u81ea\u5df1\u7684\u88c1\u526a\u533a\u57df\u3002\u865a\u62df\u7f13\u51b2\u533a\u4e0d\u77e5\u9053\u5982\u4f55\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\uff0c\u6240\u4ee5put-cell\u4f1a\u6253\u5370\u8b66\u544a\u3002\n(defclass bbox()((r1\uff1ainitarg\uff1ar1\uff1a\u5b58\u53d6\u5668r1)(c1\uff1ainitarg\uff1ac1\uff1a\u5b58\u53d6\u5668c1)(r2\uff1ainitarg\uff1ar2\uff1a\u5b58\u53d6\u5668R2))(c2\uff1ainitarg\uff1ac2\uff1a\u5b58\u53d6\u5668c2))(declass Clip(Bbox)((fn\uff1ainitarg\uff1afn\uff1a\u5b58\u53d6\u5668fn))(\uff1adefault-initargs\uff1ar1 1\uff1ac1\uff1ar2 24\uff1aC2 80\uff1afn\u3002(\u5e38\u91cft)(defclass buffer()((fgc\uff1ainitarg\uff1afgc\uff1a\u5b58\u53d6\u5668fgc\uff1aDocumentation&#34\uff1b\u524d\u9762\u7684\u989c\u8272&#34\uff1b)(bgc\uff1ainitarg\uff1abgc\uff1a\u5b58\u53d6\u5668bgc\uff1aDocumentation&#34\uff1b\u80cc\u666f\u989c\u8272&#34\uff1b)(row\uff1ainitarg\uff1arow\uff1a\u5b58\u53d6\u5668\u884c\uff1aDocumentation&#34\uff1b\u5f53\u524d\u884c&#34\uff1b)(ol\uff1ainitarg\uff1aCOL\uff1a\u5b58\u53d6\u5668\u5217\uff1aDocumentation&#34\uff1b\u5f53\u524d\u5217&#34\uff1b)(Clip\uff1ainitarg\uff1aClip\uff1aAccessessor Clip\uff1aDocumentation&#34\uff1b\u88c1\u526a\u5bf9\u8c61&#34\uff1b)(Clip\uff1ainitarg\uff1aClip\uff1aAccessor Clip\uff1aDocumentation&#34\uff1bClip Object&#34\uff1b))(ROWS\uff1ainitarg\uff1aROWS\uff1a\u5b58\u53d6\u5668\u884c\uff1aDocumentation&#34\uff1b\u7f13\u51b2\u533a\u884c\u6570&#34\uff1b)(COLS\uff1ainitarg\uff1aCOLS\uff1a\u5b58\u53d6\u5668COLS\uff1aDocumentation&#34\uff1b\u7f13\u51b2\u533a&#34\uff1b))(\uff1adefault-initargs\uff1aClip(make-instance&#39\uff1bClip))(Defmethod put-cell((Buffer)row colch FG BG)(warn&#34\uff1bput-cell\uff1adefault method\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff01&#34\uff1bPUT-CELL\uff1aDEFAULT\u65b9\u6cd5\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff01&#34\uff1bPUT-CELL\uff1aDEFAULT\u65b9\u6cd5\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff01&#34\uff1b)(defmethod inside-p((\u7f13\u5b58)\u884c\u7f13\u5b58)(let((\u526a\u8f91(\u526a\u8f91\u7f13\u5b58)(\u548c(&lt\uff1b=(r1\u526a\u8f91)\u884c(r2\u526a\u8f91))(&lt\uff1b=(c1\u526a\u8f91)\u5217(c2\u526a\u8f91))(funcall(fn\u526a\u8f91)\u884c\u5217)(defmethod call-with-clipping((Buffer)cont&amp\uff1b\u5bc6\u94a5r1c1R2 c2fn)(let((\u526a\u8f91(\u526a\u8f91\u7f13\u51b2\u533a)(let((old-r1(r1\u526a\u8f91))(old-c1(c1\u526a\u8f91))(old-R2(r2\u526a\u8f91))(old-c2(c2\u526a\u8f91))(old-fn(fn\u526a\u8f91)(SETF(r1\u526a\u8f91)(max(\u6216r1old-r1)old-r1)(c1\u526a\u8f91)(max(\u6216c1\u526a\u8f91)\u3002old-c1)(r2\u526a\u8f91)(min(\u6216r2old-r2)old-r2)(c2\u526a\u8f91)(min(\u6216c2 old-c2)old-c2)(fn\u526a\u8f91)(if(NULL Fn)old-fn(\u03bb(\u884c\u5217)(AND(funcall fn\u884c\u5217)(funcall old-fn\u884c\u5217)(\u5c55\u5f00\u4fdd\u62a4(Funcall Cont)(SETF(r1\u526a\u8f91)old-r1\u3002(c1\u526a\u8f91)old-c1(R2\u526a\u8f91)old-R2(c2\u526a\u8f91)old-c2(fn\u526a\u8f91)old-fn)\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539Console\u7c7b\u672c\u8eab\u3002\u5e26\u6709-console\u7684\u5b8f\u5355\u72ec\u7ed1\u5b9a\u4e86\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8bbf\u95ee\u8f93\u51fa\u7f13\u51b2\u533a\u548c\u63a7\u5236\u53f0\u3002\n(def\u5b8fwith-console((&amp\uff1brest args&amp\uff1bkey IOS FGC BGC CVP fps&amp\uff1bAllow-Other-Key)&amp\uff1bBody Body)(DECLARE(\u5ffd\u7565FGC BGC CVP fps))`(let*((*Terminal*\uff0ciOS)(*console*(make-instance&#39\uff1bconsole\uff0c@args)(\u5c55\u5f00\u4fdd\u62a4(with-buffer(*console*)\uff0c@body)(\u5173\u95ed\u7ec8\u7aef(hnd*console*)\u3002\n(defunUPDATE-CONSOLE-DIMEMS()(WITH-CURSOR-POSITION((EXPT 216)(EXPT 216))(Multiple-Value-Bind(ROWS COLS)(GET-CURSOR-POSITION)(SETF(ROWS*CONSOLE*)ROWS)(SETF(COLS*CONSOLE*)COLS)(SETF(R2(CLIP*CONSOLE*))ROWS)(SETF(c2(CLIP*CONSOLE*))COLS))\u3002\n\u5e76\u4e14\u7c7b\u63a7\u5236\u53f0\u672c\u8eab\u88ab\u91cd\u5851\u4e3a\u4ece\u7c7b\u7f13\u51b2\u533a\u7ee7\u627f\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u53bb\u6389\u4e86\u4f4d\u7f6e\u548c\u5e94\u7528\u7a0b\u5e8f\u63d2\u69fd\u3002\n(defclass\u63a7\u5236\u53f0(\u7f13\u51b2\u533a)((IOS\uff1ainitarg\uff1aIOS\uff1a\u5b58\u53d6\u5668IOS\uff1aDocumentation&#34\uff1b\u63a7\u5236\u53f0I/O\u6d41\u3002&#34\uff1b)(cvp\uff1ainitarg\uff1acvp\uff1a\u5b58\u53d6\u5668cvp\uff1aDocumentation&#34\uff1b\u5149\u6807\u53ef\u89c1\u6027\u3002)(ptr\uff1ainitarg\uff1aptr\uff1a\u5b58\u53d6\u5668ptr\uff1aDocumentation&#34\uff1b\u6307\u9488\u8ddf\u8e2a\u3002&#34\uff1b)(fps\uff1ainitarg\uff1afps\uff1a\u5b58\u53d6\u5668fps\uff1aDocumentation&#34\uff1b)\u3002)(hnd\uff1a\u8bbf\u95ee\u5668hnd\uff1aDocumentation&#34\uff1b\u7ec8\u7aef\u5904\u7406\u7a0b\u5e8f\u3002&#34\uff1b))(\uff1adefault-initargs\uff1aIOS(\u9519\u8bef&#34\uff1b\u5fc5\u987b\u6307\u5b9aI/O\u6d41\u3002&#34\uff1b)\uff1afgc#xffa0a000\uff1abgc#x222200\uff1a\u884c1\uff1a\u52171\uff1acvp nil\uff1aptr t\uff1afps 10)(defmethod initialize-instance\uff1aAfter(\u5b9e\u4f8b\u63a7\u5236\u53f0)&amp\uff1bKey FGC BGC\u884c\u5217CVP PTR)(SETF(HND\u5b9e\u4f8b)(\u521d\u59cb\u5316\u7ec8\u7aef))(\u8bbe\u7f6e\u524d\u666f\u8272FGC)(\u8bbe\u7f6e\u80cc\u666f\u8272BGC)(\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\u884c\u5217)(\u8bbe\u7f6e\u5149\u6807\u53ef\u89c1\u6027CVP)(\u8bbe\u7f6e\u9f20\u6807\u8ddf\u8e2aPTR)(let((*\u63a7\u5236\u53f0*\u5b9e\u4f8b))(\u66f4\u65b0\u63a7\u5236\u53f0\u7ef4\u5ea6))(defmethod(SETF FGC)\uff1aAfter(RGBA(\u5b9e\u4f8b\u63a7\u5236\u53f0))(\u8bbe\u7f6e\u524d\u666f\u3002-color RGBA))(defmethod(SETF BGC)\uff1aAfter(RGBA(\u5b9e\u4f8b\u63a7\u5236\u53f0))(set-back-color RGBA))(defmethod(SETF Row)\uff1aAfter(row(\u5b9e\u4f8b\u63a7\u5236\u53f0))(\u8bbe\u7f6e\u6e38\u6807\u4f4d\u7f6e\u884c\u4e3a\u7a7a)(defmethod(SETF Column)\uff1aAfter(ol(\u5b9e\u4f8b\u63a7\u5236\u53f0))(Set-Cursor-Position nil ol))(defmethod(SETF PTR)\uff1aAfter(PTR(\u5b9e\u4f8b\u63a7\u5236\u53f0))\u3002))(set-\u9f20\u6807\u8ddf\u8e2a(not(Null Ptr)(defmethod(Setf Cvp)\uff1aAfter(cvp(\u5b9e\u4f8b\u63a7\u5236\u53f0))(set-Cursor-Visibility(not(Null Cvp)\u3002\n\u5c06\u5355\u5143\u683c\u653e\u5230\u5c4f\u5e55\u4e0a\u9700\u8981\u5148\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\u548c\u5355\u5143\u683c\u989c\u8272\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570put\u3002\u51fd\u6570put-cell\u8d1f\u8d23\u9a8c\u8bc1\u8be5\u5355\u5143\u662f\u5426\u5728\u88c1\u526a\u533a\u57df\u5185\u3002\n(defmethod put-cell((\u7f13\u51b2\u63a7\u5236\u53f0)\u884c\u5217fg bg)(WHEN(\u5185\u90e8-p\u7f13\u51b2\u884c\u5217)(\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\u884c\u5217)(\u8bbe\u7f6e\u524d\u666f\u8272fg)(\u8bbe\u7f6e\u80cc\u666f\u8272bg)(Put Ch)\n\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651with-clipping\u5b8f\u4e2d\u7684\u66f4\u6539\uff0c\u5c06\u7f13\u51b2\u533a\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u5e76\u5220\u9664\u5bf9app\u8bbf\u95ee\u5668\u7684\u5f15\u7528\u3002\u4fee\u6539\u529f\u80fd\u663e\u793a\u753b\u9762\uff1a\n(deFun show-screen()(loop for ch=(read-input)Until(Null Ch)do(cond((keyp ch#\\q\uff1ac)(cl-user\uff1a\uff1aQuit)((keyp ch#\\u\uff1ac)(Ignore-Errors(user-action)(Flet((ll(\u884c\u5217)(or(or(and(&lt\uff1b(ABS(-(+\u5217)26))2)(&lt\uff1b=\u521720))(&lt\uff1b(abs(-(+(-40\u5217)\u884c)26))2)(\u5e26-\u526a\u88c1(*\u7f13\u51b2*\uff1afn#&#39\uff1bL\uff1ar1 2\uff1ar2 11)(OUT(\uff1aROW(1+(\u968f\u673a12))\uff1aCOL(1+(\u968f\u673a40))\uff1abgc#x00000000\uff1afgc#xbb000000)(\u4e9a\u5386\u5c71\u5927\uff1aRandom-ELT&#39\uff1b(&#34\uff1bX&#34\uff1b&#34\uff1bO&#34\uff1b)(With-Clip(*Buffer*\uff1afn(lambda(\u884c\u5217)(\u6216(=\u884c1)(=\u884c12)(funcall(\u8865\u7801#&#39\uff1b11)\u884c\u5217)(OUT(\uff1a\u884c(1+(\u968f\u673a12))\uff1aCOL(1+(\u968f\u673a40))\uff1abgc#x00000000\uff1afgc(\u4e9a\u5386\u5c71\u5927\uff1a\u968f\u673aELT&#39\uff1b(#x00444400#x00444400#x00664400)(\u4e9a\u5386\u5c71\u5927\uff1aRandom-ELT&#39\uff1b(&#34\uff1b+&#34\uff1b-&#34\uff1b)\u3002\n\u6240\u6709\u8fd9\u4e9b\u66f4\u6539\u90fd\u662f\u975e\u5e38\u6709\u4fb5\u5165\u6027\u7684\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u91cd\u65b0\u542f\u52a8\u6620\u50cf\u5e76\u518d\u6b21\u5c1d\u8bd5\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u786e\u4fdd\u4e00\u5207\u4ecd\u7136\u6b63\u5e38\u3002\n\u662f\u65f6\u5019\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u4e86\u3002\u5750\u7740\u522b\u52a8\uff0c\u6211\u4eec\u5728\u5199\u7a97\u53e3\u7ba1\u7406\u5668\uff01\u4e3a\u4e86\u4e0eCLIM\u672f\u8bed\u517c\u5bb9\uff0c\u6211\u4eec\u79f0\u5b83\u4e3a\u5e27\u7ba1\u7406\u5668\u3002\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u7531\u5176\u8fb9\u754c\u6846\u548c\u5448\u73b0\u51fd\u6570\u5b9a\u4e49\u7684\u5e27\u8868\u793a\u3002\n(defclass frame-manager()((Frames\uff1ainitarg\uff1aFrames\uff1aAccessor Frame\uff1aDocumentation&#34\uff1bAll Frame&#34\uff1b)(active\uff1ainitarg\uff1aactive\uff1aActive\uff1aActive Frame\uff1aDocumentation&#34\uff1bActive Frame&#34\uff1b))(\uff1adefault-initargs\uff1aframe nil\uff1aactive nil))\uff1bhaha\uff0c\u5b8c\u5168\u4e0d\u662f\u526a\u8f91\u3002(Defclass Frame(Bbox)((fn\uff1ainitarg\uff1afn\uff1a\u5b58\u53d6\u5668fn))(\uff1adefault-initargs\uff1ar1 1\uff1ac1 1\uff1ar2 24\uff1aC2 80\uff1afn(\u5e38\u91cft)\u3002\n\u663e\u793a\u5e27\u6d89\u53ca\u5728\u542f\u7528\u526a\u88c1\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u5448\u73b0\u51fd\u6570\uff0c\u5e76\u663e\u793a\u88c5\u9970\u3002\u901a\u5e38\u5355\u5143\u683c\u7684\u5bbd\u5ea6\u5c0f\u4e8e\u5176\u9ad8\u5ea6\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u60f3\u8981\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e00\u4fa7\u5c06\u88c5\u9970\u7ed8\u5236\u4e3a\u7ad6\u6761\u66f4\u6709\u610f\u4e49\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u505a\u7684\u3002\u6d3b\u52a8\u6846\u67b6\u5c06\u7528\u4e0d\u540c\u7684\u4fa7\u680f\u989c\u8272\u8868\u793a\u3002\n(\u53bb\u8da3\u5316\u6e32\u67d3\u5e94\u7528\u7a0b\u5e8f(fm\u5e27)(with-clipping(*buffer*\uff1ar1(r1\u5e27)\uff1ac1(c1\u5e27)\uff1aR2(R2\u5e27)\uff1aC2(c2\u5e27))(funcall(fn\u5e27)(\u53bb\u8da3\u5316\u6e32\u67d3\u88c5\u9970(fm\u5e27)(\u58f0\u660e(\u5ffd\u7565fm))(\u5faa\u73af\uff0c\u7528\u4e8e\u7b2c(1+(c2\u5e27))\u81f3(1+(c2\u5e27))\u7684\u884c)(\u53bb\u8da3\u5473\u6e32\u67d3-\u5e94\u7528\u7a0b\u5e8f(fm\u5e27)(with-clipping(*buffer*\uff1ar1\u5e27)\uff1ac1(c1\u5e27))\uff1aR2(R2\u5e27)\uff1a(funcall(fn\u5e27)\u30021-(R2\u5e27))DO(OUT(\uff1aROW\uff1aCOL COL)&#34\uff1b&#34\uff1b)\u6700\u540e(OUT(\uff1aCOLCOL\uff1aROW(R1\u5e27)\uff1aFGC#xff224400)&#34\uff1bx&#34\uff1b)(OUT(\uff1aCOLCOL\uff1aROW(R2\u5e27))&#34\uff1b/&#34\uff1b)(deFun Display-Screen(FM)(Dolist(Frame(Frame FM))(if(eq Frame(Active FM))(ctl(\uff1abgc#x22224400)(\uff1afgc#xffffff00))(ctl(\uff1abgc#x1111100)(\uff1afgc#xbbbbb00)(\u6e32\u67d3\u5e94\u7528\u7a0b\u5e8fFM\u5e27)(\u6e32\u67d3\u88c5\u9970FM\u5e27)\u3002\n(\u53bb\u8da3\u53e5\u67c4-\u4e8b\u4ef6(FM\u4e8b\u4ef6)(Flet((Reset()(ctl(\uff1abgc#x22222200))(update-console-Dimension)(\u6e05\u9664\u7ec8\u7aef)(cond((keyp event#\\q\uff1aC)(cl-user\uff1a\uff1aQuit))((keyp event#\\R\uff1aC)(Reset))((keyp event#\\N\uff1aC)(Alexandria\uff1aIF-let\u3002((CUR(\u6d3b\u52a8FM)(let*((fms(\u5e27FM))(POS(\u4f4d\u7f6eFMS))(NEW(1+POS)(IF(=NEW(\u957f\u5ea6FMS))(SETF(\u6d3b\u52a8FM)NIL)(SETF(\u6d3b\u52a8FM)(ELT FMS NEW)(SETF(\u6d3b\u52a8FM)(FIRST(FRAMES FM)((KEYIP EVENT#\\U\u3002\uff1ac)(Ignore-Errors(\u7528\u6237\u64cd\u4f5c)((Keyp Event#\\E\uff1aC)(Error&#34\uff1bbam&#34\uff1b)(deun start-display()(LOOP(with-Simple-Restart(\u518d\u4e00\u6b21&#34\uff1b\u518d\u6b21\u542f\u52a8\u663e\u793a\u3002&#34\uff1b))(\u5ffd\u7565\u9519\u8bef(swank\uff1acreate-server))(Handler-case(with-console(\uff1aIOS*Terminal-io*))\n..", "note_en": "This is the second part of a tutorial about building a McCLIM backendfor the terminal starting from zero. After reading  the first issue weshould have a good grasp of how to control and read input from theterminal. It is time to refine things for efficiency and ease of use.If you didn&#39;t follow the last part, here is the archive with the source code which will serve as a starter for this post.\n Right now our I/O is synchronous with the terminal. When we call  outor  ctl, the characters are sent to it immediately, and we read theinput with  read-input until the stream is empty. The modelintroduced in the previous post is certainly simple, but simple modelstend to be hard to use efficiently. We&#39;ll settle on  easy instead.In this post I&#39;ll focus on the output.\n  All problems in computer science can be solved by another level ofindirection. -- David Wheeler\n We&#39;ll build a convenient abstraction for writing the consoleapplications. It would be a shame, though, if we had abandoned meansto manipulate the terminal directly. The library will presentdifferent APIs, so it is possible to cater to the programmer needs. Inprinciple it is not feasible to use two different abstractionssimultaneously because higher abstractions build upon lower ones andthings may go awry.\n  For now we&#39;ll define two packages:  eu.turtleware.charming-clim/l0and  eu.turtleware.charming-clim.terminal/l1 with different levels ofabstraction for accessing the terminal. They are meant only as meansto export symbols, all implementation is done in a single package.This practice greatly improves a quality of life of the person whoworks with Common Lisp packages. Now create a file  packages.lisp.\n (   defpackage  #:eu.turtleware.charming-clim/l0  (  :export  #:init-terminal  #:close-terminal  #:*terminal*  #:put  #:esc  #:csi  #:sgr  #:read-input  #:keyp  #:reset-terminal  #:clear-terminal  #:clear-line  #:set-foreground-color  #:set-background-color  #:with-cursor-position  #:set-cursor-position  #:save-cursor-position  #:restore-cursor-position  #:request-cursor-position  #:cursor-up  #:cursor-down  #:cursor-right  #:cursor-left  #:set-cursor-visibility  #:set-mouse-tracking)) (   defpackage  #:eu.turtleware.charming-clim/l1  (  :export  #:with-console  #:out  #:ctl)) (   defpackage  #:eu.turtleware.charming-clim  (  :use  #:common-lisp  #:eu.turtleware.charming-clim/l0  #:eu.turtleware.charming-clim/l1))\n We&#39;ll take this opportunity to make function naming more consistentand introduce the cursor manipulation utilities. Rename functions\n  and add escape sequences for manipulating the cursor. Don&#39;t forget tochange references to renamed functions in other parts of the code (inthe macro  ctl and in functions  initialize-instance,  (setf ptr)and  (setf cvp).\n (   macrolet  (  ( moveit  ( endch) ` (   if  ( = n 1)  ( csi ,endch)  ( csi n ,endch))))  (   defun cursor-up  ( &amp;optional  ( n 1))  ( moveit  &#34;A&#34;))  (   defun cursor-down  ( &amp;optional  ( n 1))  ( moveit  &#34;B&#34;))  (   defun cursor-right  ( &amp;optional  ( n 1))  ( moveit  &#34;C&#34;))  (   defun cursor-left  ( &amp;optional  ( n 1))  ( moveit  &#34;D&#34;))) (   defun set-cursor-visibility  ( visiblep)  (   if visiblep  ( csi  &#34;?&#34; 2 5  &#34;h&#34;)  ( csi  &#34;?&#34; 2 5  &#34;l&#34;))) ;;; (csi ? tracking ; encoding h/l) ;;; tracking: 1000 - normal, 1002 - button, 1003 - all motion ;;; 1004 - focus in/out ;;; encoding: 1006 - sgr encoding scheme (   defun set-mouse-tracking  ( enabledp)  (   if enabledp  ( csi  &#34;?&#34; 1003  &#34;;&#34; 1006  &#34;h&#34;)  ( csi  &#34;?&#34; 1003  &#34;l&#34;))) (   defun set-alt-is-meta  ( bool)  (   if bool  ( setf +alt-mod+ +meta-mod+)  ( setf +alt-mod+ +alt-mod*+)))\n From now on, when we talk about the low level abstraction, we&#39;ll callthe destination object a &#34;terminal&#34;, while when we talk about the highlevel abstraction, we&#39;ll call its destination object a &#34;console&#34;.Rename the following symbols\n  and replace all references in the source code to use new symbols. Movethe variable  *terminal* and functions  init-terminal and close-terminal to the top (below the foreign function definitions).\n We&#39;ll slightly refactor  set-*-color functions. Instead of acceptingeach color separately, functions will consume the number representinga color RGBA value. For instance #ff000000 for a color red. The alphachannel will be ignored for now, but having this component will saveus another change of a data representation format.\n (   defun set-foreground-color  ( color)  (   let  (  ( r  ( ldb &#39; ( 8 . 24) color))  ( g  ( ldb &#39; ( 8 . 16) color))  ( b  ( ldb &#39; ( 8 . 8) color))  ( a  ( ldb &#39; ( 8 . 0) color)))  ( declare  ( ignore a))  ( sgr  &#34;38;2;&#34; r  &#34;;&#34; g  &#34;;&#34; b))) (   defun set-background-color  ( color)  (   let  (  ( r  ( ldb &#39; ( 8 . 24) color))  ( g  ( ldb &#39; ( 8 . 16) color))  ( b  ( ldb &#39; ( 8 . 8) color))  ( a  ( ldb &#39; ( 8 . 0) color)))  ( declare  ( ignore a))  ( sgr  &#34;48;2;&#34; r  &#34;;&#34; g  &#34;;&#34; b)))\n  (   defmacro ctl  ( &amp;rest operations) ` (  #|...|#  (  :fgc ` ( setf  ( fgc  *console*) ,@args))  (  :bgc ` ( setf  ( bgc  *console*) ,@args)))) (   defclass console  ( )  #|...|#  (  :default-initargs  :fgc #xffa0a000  :bgc #x22222200)) (   defmethod initialize-instance  :after  (  ( instance console) &amp;key fgc bgc pos cvp ptr)  #|...|#  ( set-foreground-color fgc)  ( set-background-color bgc)) (   defmethod  ( setf fgc)  :after  ( rgba  ( instance console))  ( set-foreground-color rgba)) (   defmethod  ( setf bgc)  :after  ( rgba  ( instance console))  ( set-background-color rgba)) (   defun show-screen  ( )  #|...|#  ( out  (  :bgc #x00000000  :fgc #xbb000000))  ( out  (  :bgc #x00000000  :fgc  ( alexandria:random-elt &#39; ( #x00444400 #x00444400 #x00664400)))))\n We&#39;ll now move parts related to the console to a separate file console.lisp in this order:\n  Finally, the example code will be put in a file  example.lisp. Movefunctions  show-screen and  start-display there.\n  (   defsystem  &#34;eu.turtleware.charming-clim&#34;  :defsystem-depends-on  (  #:cffi)  :depends-on  (  #:alexandria  #:cffi  #:swank)  :components  (  (  :cfile  &#34;raw-mode&#34;)  (  :file  &#34;packages&#34;)  (  :file  &#34;terminal&#34;  :depends-on  (  &#34;packages&#34;))  (  :file  &#34;console&#34;  :depends-on  (  &#34;packages&#34;  &#34;terminal&#34;))  (  :file  &#34;example&#34;  :depends-on  (  &#34;packages&#34;  &#34;console&#34;))))\n  The console object has many responsibilities, so refactoring it toinherit from a class which implements only parts related to the outputmakes sense. That will also be useful when we decide to add yetanother layer of indirection. When implementing the  buffer classwe&#39;ll also fix an unfortunate position representation as a  cons, andthe clip area specification. Create a file  output.lisp and add it tothe asd file.\n (   defsystem  &#34;eu.turtleware.charming-clim&#34;  :defsystem-depends-on  (  #:cffi)  :depends-on  (  #:alexandria  #:cffi  #:swank)  :components  (  (  :cfile  &#34;raw-mode&#34;)  (  :file  &#34;packages&#34;)  (  :file  &#34;terminal&#34;  :depends-on  (  &#34;packages&#34;))  (  :file  &#34;output&#34;  :depends-on  (  &#34;packages&#34;))  (  :file  &#34;console&#34;  :depends-on  (  &#34;packages&#34;  &#34;output&#34;  &#34;terminal&#34;))  (  :file  &#34;example&#34;  :depends-on  (  &#34;packages&#34;  &#34;console&#34;))))\n Macros  out and  ctl will operate on the current virtual buffer. Inorder to do that, we&#39;ll define a protocol which must be implemented byall virtual buffers.  with-clipping now becomes a convenience macroexpanding to a generic function  invoke-with-clipping. A macro with-buffer is introduced to bind the current buffer, which is boundto the variable  *buffer*.\n (   defgeneric put-cell  ( buffer row col ch fg bg)) (   defgeneric fgc  ( buffer)) (   defgeneric  ( setf fgc)  ( fgc buffer)  (  :argument-precedence-order buffer fgc)) (   defgeneric bgc  ( buffer)) (   defgeneric  ( setf bgc)  ( bgc buffer)  (  :argument-precedence-order buffer bgc)) (   defgeneric row  ( buffer)) (   defgeneric  ( setf row)  ( row buffer)  (  :argument-precedence-order buffer row)) (   defgeneric col  ( buffer)) (   defgeneric  ( setf col)  ( col buffer)  (  :argument-precedence-order buffer col)) (   defgeneric rows  ( buffer)) (   defgeneric cols  ( buffer)) (   defgeneric inside-p  ( buffer row col)) (   defgeneric invoke-with-clipping  ( buffer continuation &amp;rest opts &amp;key r1 c1 r2 c2 fn)) (   defmacro   with-clipping  (  ( buffer &amp;rest opts) &amp;body body)  (   let  (  ( fn  ( gensym))) ` (   flet  (  ( ,fn  ( ) ,@body))  ( declare  ( dynamic-extent  (   function ,fn)))  ( invoke-with-clipping ,buffer  (   function ,fn) ,@opts)))) (   defvar  *buffer*) (   defmacro   with-buffer  (  ( object) &amp;body body) ` (   let  (  (  *buffer* ,object)) ,@body))\n Implementing the  ctl and  out macros in these terms follows. We&#39;llleave out the  :cvp and  :ptr options from the  ctl macro for atime being.  letf and  clear-rectangle are left unchanged. Removeold macros from the  console.lisp file.\n (   defmacro letf  ( bindings &amp;body body)  (   loop for  ( place value) in bindings for old-val =  ( gensym) collect ` ( ,old-val ,place) into saves collect ` ( setf ,place ,value) into store collect ` ( setf ,place ,old-val) into restore finally  ( return ` (   let  ( ,@saves)  (   unwind-protect  (   progn ,@store ,@body) ,@restore))))) (   defmacro out  (  ( &amp;key row col fgc bgc) object) ` (   let  (  ( buf  *buffer*)  ( str  ( princ-to-string ,object)))  ( assert  ( null  ( find  #\\newline str)))  ( letf  (  (  ( row buf)  ( or ,row  ( row buf)))  (  ( col buf)  ( or ,col  ( col buf)))  (  ( fgc buf)  ( or ,fgc  ( fgc buf)))  (  ( bgc buf)  ( or ,bgc  ( bgc buf))))  (   loop with row =  ( row buf) for col from  ( col buf) for ch across str with bgc =  ( bgc buf) with fgc =  ( fgc buf) do  ( put-cell buf row col ch fgc bgc))))) (   defmacro ctl  ( &amp;rest operations) ` (   let  (  ( buf  *buffer*)) ,@ (   loop for op in operations collect  ( destructuring-bind  ( name &amp;rest args) op  ( ecase name  (  :clr ` ( clear-rectangle ,@args))  (  :fgc ` ( setf  ( fgc buf) ,@args))  (  :bgc ` ( setf  ( bgc buf) ,@args))  (  :row ` ( setf  ( row buf) ,@args))  (  :col ` ( setf  ( col buf) ,@args))))))) (   defun clear-rectangle  ( r1 c1 r2 c2)  (   loop with str =  ( make-string  ( 1+  ( - c2 c1))  :initial-element  #\\space) for r from r1 upto r2 do  ( out  (  :row r  :col c1) str)))\n What would a protocol be without the implementation? Clipping will beimplemented with the class  clip. This choice is transparent, becauseall functions are specialized on the buffer. Each buffer has its ownclipping region. Virtual buffers don&#39;t know how to draw on a screen,so  put-cell prints a warning.\n (   defclass bbox  ( )  (  ( r1  :initarg  :r1  :accessor r1)  ( c1  :initarg  :c1  :accessor c1)  ( r2  :initarg  :r2  :accessor r2)  ( c2  :initarg  :c2  :accessor c2))) (   defclass clip  ( bbox)  (  ( fn  :initarg  :fn  :accessor fn))  (  :default-initargs  :r1 1  :c1 1  :r2 24  :c2 80  :fn  ( constantly t))) (   defclass buffer  ( )  (  ( fgc  :initarg  :fgc  :accessor fgc  :documentation  &#34;Foregorund color&#34;)  ( bgc  :initarg  :bgc  :accessor bgc  :documentation  &#34;Background color&#34;)  ( row  :initarg  :row  :accessor row  :documentation  &#34;Current row&#34;)  ( col  :initarg  :col  :accessor col  :documentation  &#34;Current col&#34;)  ( clip  :initarg  :clip  :accessor clip  :documentation  &#34;Clipping object&#34;)  ( rows  :initarg  :rows  :accessor rows  :documentation  &#34;Buffer number of rows&#34;)  ( cols  :initarg  :cols  :accessor cols  :documentation  &#34;Buffer number of cols&#34;))  (  :default-initargs  :clip  ( make-instance &#39;clip))) (   defmethod put-cell  (  ( buffer buffer) row col ch fg bg)  ( warn  &#34;put-cell: default method does nothing!&#34;)) (   defmethod inside-p  (  ( buffer buffer) row col)  (   let  (  ( clip  ( clip buffer)))  ( and  ( &lt;=  ( r1 clip) row  ( r2 clip))  ( &lt;=  ( c1 clip) col  ( c2 clip))  ( funcall  ( fn clip) row col)))) (   defmethod invoke-with-clipping  (  ( buffer buffer) cont &amp;key r1 c1 r2 c2 fn)  (   let  (  ( clip  ( clip buffer)))  (   let  (  ( old-r1  ( r1 clip))  ( old-c1  ( c1 clip))  ( old-r2  ( r2 clip))  ( old-c2  ( c2 clip))  ( old-fn  ( fn clip)))  ( setf  ( r1 clip)  ( max  ( or r1 old-r1) old-r1)  ( c1 clip)  ( max  ( or c1 old-c1) old-c1)  ( r2 clip)  ( min  ( or r2 old-r2) old-r2)  ( c2 clip)  ( min  ( or c2 old-c2) old-c2)  ( fn clip)  (   if  ( null fn) old-fn  (   lambda  ( row col)  ( and  ( funcall fn row col)  ( funcall old-fn row col)))))  (   unwind-protect  ( funcall cont)  ( setf  ( r1 clip) old-r1  ( c1 clip) old-c1  ( r2 clip) old-r2  ( c2 clip) old-c2  ( fn clip) old-fn)))))\n Finally, we can modify the console class itself. The macro with-console binds a buffer separately, so we may access to both theoutput buffer and the console at the same time.\n (   defmacro   with-console  (  ( &amp;rest args &amp;key ios fgc bgc cvp fps &amp;allow-other-keys) &amp;body body)  ( declare  ( ignore fgc bgc cvp fps)) ` (   let*  (  (  *terminal* ,ios)  (  *console*  ( make-instance &#39;console ,@args)))  (   unwind-protect  (   with-buffer  (  *console*) ,@body)  ( close-terminal  ( hnd  *console*)))))\n  (   defun update-console-dimensions  ( )  (   with-cursor-position  (  ( expt 2 16)  ( expt 2 16))  ( multiple-value-bind  ( rows cols)  ( get-cursor-position)  ( setf  ( rows  *console*) rows)  ( setf  ( cols  *console*) cols)  ( setf  ( r2  ( clip  *console*)) rows)  ( setf  ( c2  ( clip  *console*)) cols))))\n And the class  console itself is remodeled to inherit from the class buffer. Notice that we get rid of the slots  pos and  app.\n (   defclass console  ( buffer)  (  ( ios  :initarg  :ios  :accessor ios  :documentation  &#34;Console I/O stream.&#34;)  ( cvp  :initarg  :cvp  :accessor cvp  :documentation  &#34;Cursor visibility.&#34;)  ( ptr  :initarg  :ptr  :accessor ptr  :documentation  &#34;Pointer tracking.&#34;)  ( fps  :initarg  :fps  :accessor fps  :documentation  &#34;Desired framerate.&#34;)  ( hnd  :accessor hnd  :documentation  &#34;Terminal handler.&#34;))  (  :default-initargs  :ios  ( error  &#34;I/O stream must be specified.&#34;)  :fgc #xffa0a000  :bgc #x22222200  :row 1  :col 1  :cvp nil  :ptr t  :fps 10)) (   defmethod initialize-instance  :after  (  ( instance console) &amp;key fgc bgc row col cvp ptr)  ( setf  ( hnd instance)  ( init-terminal))  ( set-foreground-color fgc)  ( set-background-color bgc)  ( set-cursor-position row col)  ( set-cursor-visibility cvp)  ( set-mouse-tracking ptr)  (   let  (  (  *console* instance))  ( update-console-dimensions))) (   defmethod  ( setf fgc)  :after  ( rgba  ( instance console))  ( set-foreground-color rgba)) (   defmethod  ( setf bgc)  :after  ( rgba  ( instance console))  ( set-background-color rgba)) (   defmethod  ( setf row)  :after  ( row  ( instance console))  ( set-cursor-position row nil)) (   defmethod  ( setf col)  :after  ( col  ( instance console))  ( set-cursor-position nil col)) (   defmethod  ( setf ptr)  :after  ( ptr  ( instance console))  ( set-mouse-tracking  ( not  ( null ptr)))) (   defmethod  ( setf cvp)  :after  ( cvp  ( instance console))  ( set-cursor-visibility  ( not  ( null cvp))))\n Putting a cell on the screen is a matter of first setting the cursorposition and cell colors, and then calling the function  put. It isthe responsibility of the function  put-cell to verify, that the cellis inside a clipping region.\n (   defmethod put-cell  (  ( buffer console) row col ch fg bg)  ( when  ( inside-p buffer row col)  ( set-cursor-position row col)  ( set-foreground-color fg)  ( set-background-color bg)  ( put ch)))\n Finally we need to account for a change in the  with-clipping macroto pass a buffer as the first argument and remove references to the app accessor. Modify the function  show-screen:\n (   defun show-screen  ( )  (   loop for ch =  ( read-input) until  ( null ch) do  (   cond  (  ( keyp ch  #\\Q  :c)  ( cl-user::quit))  (  ( keyp ch  #\\U  :c)  ( ignore-errors  ( user-action)))))  (   flet  (  ( ll  ( row col)  ( or  ( and  ( &lt;  ( abs  ( -  ( + col row) 26)) 2)  ( &lt;= col 20))  ( &lt;  ( abs  ( -  ( +  ( - 40 col) row) 26)) 2))))  (   with-clipping  (  *buffer*  :fn #&#39;ll  :r1 2  :r2 11)  ( out  (  :row  ( 1+  ( random 12))  :col  ( 1+  ( random 40))  :bgc #x00000000  :fgc #xbb000000)  ( alexandria:random-elt &#39; (  &#34;X&#34;  &#34;O&#34;))))  (   with-clipping  (  *buffer*  :fn  (   lambda  ( row col)  ( or  ( = row 1)  ( = row 12)  ( funcall  ( complement #&#39;ll) row col))))  ( out  (  :row  ( 1+  ( random 12))  :col  ( 1+  ( random 40))  :bgc #x00000000  :fgc  ( alexandria:random-elt &#39; ( #x00444400 #x00444400 #x00664400)))  ( alexandria:random-elt &#39; (  &#34;+&#34;  &#34;-&#34;))))))\n All these changes were pretty invasive, so make sure to restart theimage and try running the application once more to ensure, thateverything still works.\n    Time to write a new example application. Sit tight, we are writing awindow manager! For the sake of being compatible with CLIM terminologywe&#39;ll call it a frame manager. Each application will be represented bya frame defined by its bounding box and a rendering function.\n (   defclass frame-manager  ( )  (  ( frames  :initarg  :frames  :accessor frames  :documentation  &#34;All frames&#34;)  ( active  :initarg  :active  :accessor active  :documentation  &#34;Active frame&#34;))  (  :default-initargs  :frames nil  :active nil)) ;;; Ha ha, totally not a clip. (   defclass frame  ( bbox)  (  ( fn  :initarg  :fn  :accessor fn))  (  :default-initargs  :r1 1  :c1 1  :r2 24  :c2 80  :fn  ( constantly t)))\n Displaying a frame involves calling the rendering function withclipping enabled, and showing decorations. Usually the cell width issmaller than its height, so drawing decorations as a vertical bar onone of the application sides makes more sense if we want to save somespace. That&#39;s what we&#39;ll do. The active frame will be signified with adiffrent side bar color.\n (   defun render-application  ( fm frame)  (   with-clipping  (  *buffer*  :r1  ( r1 frame)  :c1  ( c1 frame)  :r2  ( r2 frame)  :c2  ( c2 frame))  ( funcall  ( fn frame) frame))) (   defun render-decorations  ( fm frame)  ( declare  ( ignore fm))  (   loop with col =  ( 1+  ( c2 frame)) for row from  ( 1+  ( r1 frame)) upto  ( 1-  ( r2 frame)) do  ( out  (  :row row  :col col)  &#34; &#34;) finally  ( out  (  :col col  :row  ( r1 frame)  :fgc #xff224400)  &#34;x&#34;)  ( out  (  :col col  :row  ( r2 frame))  &#34;/&#34;))) (   defun display-screen  ( fm)  ( dolist  ( frame  ( frames fm))  (   if  ( eq frame  ( active fm))  ( ctl  (  :bgc #x22224400)  (  :fgc #xffffff00))  ( ctl  (  :bgc #x11111100)  (  :fgc #xbbbbbb00)))  ( render-application fm frame)  ( render-decorations fm frame)))\n        (   defun handle-event  ( fm event)  (   flet  (  ( reset  ( )  ( ctl  (  :bgc #x22222200))  ( update-console-dimensions)  ( clear-terminal)))  (   cond  (  ( keyp event  #\\Q  :c)  ( cl-user::quit))  (  ( keyp event  #\\R  :c)  ( reset))  (  ( keyp event  #\\N  :c)  ( alexandria:if-let  (  ( cur  ( active fm)))  (   let*  (  ( fms  ( frames fm))  ( pos  ( position cur fms))  ( new  ( 1+ pos)))  (   if  ( = new  ( length fms))  ( setf  ( active fm) nil)  ( setf  ( active fm)  ( elt fms new))))  ( setf  ( active fm)  ( first  ( frames fm)))))  (  ( keyp event  #\\U  :c)  ( ignore-errors  ( user-action)))  (  ( keyp event  #\\E  :c)  ( error  &#34;bam&#34;))))) (   defun start-display  ( )  (   loop  (   with-simple-restart  ( again  &#34;Start display again.&#34;)  ( ignore-errors  ( swank:create-server))  ( handler-case  (   with-console  (  :ios  *terminal-io*) \n......", "posttime": "2020-06-20 02:18:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lisp,terminal,\u7f13\u51b2\u533a", "title": "\u4eceCommon Lisp\u63a7\u5236\u7ec8\u7aef(\u7b2c2\u90e8\u5206)", "title_en": "Controlling the terminal from Common Lisp (part 2)", "transed": 1, "url": "https://turtleware.eu/posts/Charming-CLIM-tutorial-part-2--Rethinking-The-Output.html", "via": "", "real_tags": ["lisp", "terminal", "\u7f13\u51b2\u533a"]}]