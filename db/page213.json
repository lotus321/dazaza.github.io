[{"category": "", "categoryclass": "", "imagename": "8f0c7d510e267c814340e426d97bca2f.jpg", "infoid": 1003604, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f-\u4e00\u4e2a\u7531\u4e24\u515a\u8bae\u5458\u7ec4\u6210\u7684\u4e24\u9662\u5236\u5c0f\u7ec4\u672c\u5468\u63d0\u51fa\u4e86\u4e00\u9879\u7acb\u6cd5\uff0c\u4ee5\u6539\u9769\u548c\u5835\u585eH-1B\u548cL-1\u7b7e\u8bc1\u8ba1\u5212\u4e2d\u7684\u6f0f\u6d1e\u3002\u53c2\u8bae\u5458\u67e5\u514b\u00b7\u683c\u62c9\u65af\u5229(\u7231\u8377\u534e\u5dde\u5171\u548c\u515a\u4eba)\u548c\u8fea\u514b\u00b7\u5fb7\u5bbe(\u4f0a\u5229\u8bfa\u4f0a\u5dde\u6c11\u4e3b\u515a\u4eba)\u3002\u63d0\u4f9b\u4e86\u53c2\u8bae\u9662\u7248\u672c\u7684H-1B\u548cL-1\u7b7e\u8bc1\u6539\u9769\u6cd5\u6848\uff0c\u8be5\u6cd5\u6848\u4f18\u5148\u8003\u8651\u7f8e\u56fd\u5de5\u4eba\uff0c\u5e76\u6062\u590d\u5916\u56fd\u719f\u7ec3\u5de5\u4eba\u7b7e\u8bc1\u8ba1\u5212\u7684\u516c\u5e73\u6027\u3002\u7f8e\u56fd\u4f17\u8bae\u5458\u5c0f\u6bd4\u5c14\u00b7\u5e15\u65af\u514b\u91cc\u5c14(Bill Pascrell\uff0cJr.)\u3002(D-N.J.-09)\uff0cPaul Gosar(R-Ariz.-04)\uff0cRo Khanna(D-Calif.-17)\uff0cFrank Pallone\uff0cJr.\u3002(D-N.J.-06)\u548c\u5170\u65af\u00b7\u53e4\u767b(R-Texas-05)\u5728\u4f17\u8bae\u9662\u63d0\u51fa\u4e86\u76f8\u540c\u7248\u672c\u7684\u6cd5\u6848\u3002\u8fd9\u9879\u7acb\u6cd5\u901a\u8fc7\u52a0\u5927\u6267\u6cd5\u529b\u5ea6\uff0c\u4fee\u6539\u5de5\u8d44\u8981\u6c42\uff0c\u5e76\u786e\u4fdd\u5bf9\u7f8e\u56fd\u5de5\u4eba\u548c\u7b7e\u8bc1\u6301\u6709\u8005\u7684\u4fdd\u62a4\uff0c\u6062\u590d\u4e86\u56fd\u4f1a\u5728H-1B\u548cL-1\u7b7e\u8bc1\u8ba1\u5212\u4e2d\u7684\u521d\u8877\u3002\n\u201c\u56fd\u4f1a\u521b\u5efa\u8fd9\u4e9b\u8ba1\u5212\u662f\u4e3a\u4e86\u8865\u5145\u7f8e\u56fd\u7684\u9ad8\u6280\u80fd\u52b3\u52a8\u529b\uff0c\u800c\u4e0d\u662f\u53d6\u4ee3\u5b83\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e00\u4e9b\u516c\u53f8\u6b63\u8bd5\u56fe\u901a\u8fc7\u524a\u51cf\u7f8e\u56fd\u5de5\u4eba\u6765\u6362\u53d6\u66f4\u4fbf\u5b9c\u7684\u52b3\u52a8\u529b\u6765\u5229\u7528\u8fd9\u4e9b\u8ba1\u5212\u3002\u6211\u4eec\u9700\u8981\u81f4\u529b\u4e8e\u628a\u7f8e\u56fd\u5de5\u4eba\u653e\u5728\u9996\u4f4d\u7684\u9879\u76ee\u3002\u5f53\u9700\u8981\u719f\u7ec3\u7684\u5916\u56fd\u5de5\u4eba\u6765\u6ee1\u8db3\u6211\u4eec\u52b3\u52a8\u529b\u5e02\u573a\u7684\u9700\u6c42\u65f6\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u786e\u4fdd\u5728\u7f8e\u56fd\u5b66\u9662\u548c\u5927\u5b66\u78e8\u7ec3\u6280\u80fd\u7684\u7b7e\u8bc1\u7533\u8bf7\u8005\u4f18\u5148\u4e8e\u8f93\u5165\u66f4\u591a\u7684\u5916\u56fd\u5de5\u4eba\u3002\u683c\u62c9\u65af\u5229\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u6cd5\u6848\u91c7\u53d6\u63aa\u65bd\uff0c\u786e\u4fdd\u8fd9\u4e9b\u8ba1\u5212\u540c\u6837\u9002\u7528\u4e8e\u7f8e\u56fd\u4eba\u548c\u719f\u7ec3\u7684\u5916\u56fd\u5de5\u4eba\u3002\u201d\n\u201c\u6539\u9769H-1B\u548cL-1\u7b7e\u8bc1\u8ba1\u5212\u662f\u4fee\u590d\u6211\u4eec\u652f\u79bb\u7834\u788e\u7684\u79fb\u6c11\u5236\u5ea6\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u5fb7\u5bbe\u8bf4\uff0c\u591a\u5e74\u6765\uff0c\u5916\u5305\u516c\u53f8\u4e00\u76f4\u5229\u7528\u6cd5\u5f8b\u6f0f\u6d1e\u6765\u53d6\u4ee3\u5408\u683c\u7684\u7f8e\u56fd\u5de5\u4eba\uff0c\u5e76\u4e3a\u7f8e\u56fd\u5de5\u4f5c\u5916\u5305\u63d0\u4f9b\u4fbf\u5229\u3002\u201c\u6211\u4eec\u7684\u7acb\u6cd5\u5c06\u7ed3\u675f\u8fd9\u4e9b\u6ee5\u7528\u884c\u4e3a\uff0c\u4fdd\u62a4\u7f8e\u56fd\u548c\u5916\u56fd\u5de5\u4eba\u514d\u53d7\u5265\u524a\u3002\u201d\n\u201c\u8fd9\u4e9b\u91cd\u8981\u7684\u7b7e\u8bc1\u8ba1\u5212\u65e8\u5728\u652f\u6301\u7f8e\u56fd\u7684\u9ad8\u6280\u80fd\u52b3\u52a8\u529b\u3002\u53ef\u60b2\u7684\u662f\uff0c\u67d0\u4e9b\u516c\u53f8\u548c\u4e0d\u826f\u884c\u4e3a\u8005\u6ee5\u7528\u6cd5\u5f8b\u6f0f\u6d1e\u6765\u7834\u574f\u7f8e\u56fd\u5de5\u4eba\u3002\u8fd9\u4e00\u4e24\u515a\u8054\u5408\u7684\u89e3\u51b3\u65b9\u6848\u5c06\u628a\u7f8e\u56fd\u5de5\u4eba\u653e\u5728\u9996\u4f4d\uff0c\u5e76\u786e\u4fdd\u5728\u7f8e\u56fd\u53d1\u5c55\u6280\u80fd\u7684\u7b7e\u8bc1\u7533\u8bf7\u8005\u7684\u516c\u5e73\u6027\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5c06\u690d\u5165\u4fdd\u62a4\u7f8e\u56fd\u52b3\u5de5\u7684\u4fdd\u969c\u63aa\u65bd\uff0c\u9632\u6b62\u5bf9\u7b7e\u8bc1\u5de5\u4eba\u7684\u5265\u524a\uff0c\u201c\u5e15\u65af\u514b\u91cc\u5c14\u8bf4\u3002\n\u201cH-1B\u548cL-1\u7b7e\u8bc1\u6539\u9769\u6cd5\u6848\u5c06\u51cf\u5c11\u5916\u56fd\u5916\u5305\u516c\u53f8\u5bf9\u9ad8\u6280\u80fd\u7f8e\u56fd\u4eba\u7684\u6b67\u89c6\u3002*\u8fd9\u9879\u63d0\u6848\u5305\u62ec\u5fc5\u8981\u7684\u6539\u9769\uff0c\u4ee5\u4fdd\u62a4\u7f8e\u56fd\u5de5\u4eba\u514d\u53d7\u5de5\u4f5c\u5916\u5305\u7684\u5f71\u54cd\uff0c\u5e76\u4e3a\u56fd\u571f\u5b89\u5168\u90e8\u548c\u52b3\u5de5\u90e8\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u6743\u529b\uff0c\u4ee5\u6253\u51fb\u7b7e\u8bc1\u6ee5\u7528\u3002\u6211\u5f88\u81ea\u8c6a\u80fd\u4f18\u5148\u8003\u8651\u7f8e\u56fd\u5de5\u4eba\uff0c\u5e76\u4e0e\u4f17\u8bae\u5458\u5e15\u65af\u514b\u91cc\u5c14\u5408\u4f5c\uff0c\u91cd\u65b0\u63d0\u51fa\u8fd9\u9879\u91cd\u8981\u7684\u4e24\u515a\u7acb\u6cd5\u3002\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u7f8e\u56fd\u4eba\u5bfb\u6c42\u5de5\u8d44\u589e\u957f\u548c\u5c31\u4e1a\u673a\u4f1a\uff0c\u4ed6\u4eec\u4e0d\u5e94\u8be5\u4e0e\u5916\u56fd\u5916\u5305\u516c\u53f8\u548c\u66f4\u4fbf\u5b9c\u7684\u5916\u56fd\u52b3\u52a8\u529b\u7ade\u4e89\u3002\u201c\u6208\u8428\u5c14\u8bf4\u3002\n\u201c\u7f8e\u56fd\u79fb\u6c11\u5e26\u7740\u4e00\u4e9b\u4e16\u754c\u4e0a\u4ece\u672a\u89c1\u8fc7\u7684\u6700\u5177\u521b\u65b0\u6027\u548c\u53d8\u9769\u6027\u7684\u60f3\u6cd5\u6765\u5230\u8fd9\u4e2a\u56fd\u5bb6\u3002\u5982\u679c\u6211\u4eec\u8981\u7ee7\u7eed\u57f9\u517b\u521b\u9020\u6027\u6587\u5316\uff0c\u6211\u4eec\u5fc5\u987b\u6539\u9769H-1\u548cL-1\u7b7e\u8bc1\u8ba1\u5212\uff0c\u4ee5\u4fdd\u62a4\u6240\u6709\u5de5\u4eba\u514d\u53d7\u6ee5\u7528\u3002\u6301H-1B\u7b7e\u8bc1\u6765\u5230\u8fd9\u91cc\u7684\u79fb\u6c11\u4e3a\u7845\u8c37\u5728\u6570\u5b57\u9769\u547d\u4e2d\u7684\u9886\u5bfc\u5730\u4f4d\u505a\u51fa\u4e86\u91cd\u8981\u8d21\u732e\u3002\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u4eba\u624d\u6765\u7f8e\u56fd\uff0c\u4f46\u6211\u4eec\u4e5f\u5e0c\u671b\u786e\u4fdd\u8fd9\u4e00\u70b9\u5f97\u5230\u9002\u5f53\u7684\u8865\u507f\u3002\u5361\u7eb3\u8bf4\uff1a\u201c\u6211\u5f88\u81ea\u8c6a\u80fd\u4e0e\u5e15\u65af\u514b\u91cc\u5c14\u4f17\u8bae\u5458\u4e00\u8d77\u53c2\u4e0e\u8fd9\u4e00\u52aa\u529b\u3002\n\u201c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u5408\u683c\u7684\u7f8e\u56fd\u5de5\u4eba\u6709\u673a\u4f1a\u5728\u8fd9\u4e2a\u56fd\u5bb6\u83b7\u5f97\u5c31\u4e1a\u673a\u4f1a\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8bb8\u591a\u516c\u53f8\u5229\u7528\u79fb\u6c11\u7b7e\u8bc1\u8ba1\u5212\u4e2d\u7684\u6f0f\u6d1e\u6765\u53d6\u4ee3\u8fd9\u4e9b\u5de5\u4eba\uff0c\u5e76\u5c06\u5de5\u4f5c\u5916\u5305\u3002\u6539\u9769\u8fd9\u4e9b\u8ba1\u5212\uff0c\u5e76\u8981\u6c42\u771f\u8bda\u52aa\u529b\u62db\u8058\u548c\u96c7\u7528\u7f8e\u56fd\u5de5\u4eba\uff0c\u5bf9\u4e8e\u5e2e\u52a9\u4eba\u4eec\u5728\u8fd9\u4e00\u56f0\u96be\u65f6\u671f\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u81f3\u5173\u91cd\u8981\uff0c\u5e76\u5c06\u6709\u52a9\u4e8e\u9632\u6b62\u5bf9\u5916\u56fd\u5de5\u4eba\u7684\u5265\u524a\u3002\u6211\u611f\u8c22\u6211\u7684\u670b\u53cb\u3001\u56fd\u4f1a\u8bae\u5458\u5e15\u65af\u514b\u91cc\u5c14\u91cd\u65b0\u63d0\u51fa\u4e86\u8fd9\u9879\u91cd\u8981\u7684\u7acb\u6cd5\uff0c\u5e76\u671f\u5f85\u7740\u4e0e\u4ed6\u5408\u4f5c\uff0c\u5728\u56fd\u4f1a\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\n\u201c\u8fd9\u4e9b\u5b58\u5728\u4e25\u91cd\u7f3a\u9677\u7684\u8ba1\u5212\u635f\u5bb3\u4e86\u6211\u4eec\u7684\u52b3\u52a8\u529b\uff0c\u540c\u65f6\u53d6\u4ee3\u4e86\u6211\u4eec\u6700\u4f18\u79c0\u548c\u6700\u806a\u660e\u7684\u4eba\uff0c\u8f6c\u800c\u9009\u62e9\u66f4\u4fbf\u5b9c\u7684\u9009\u62e9\u3002\u8fd9\u9879\u7acb\u6cd5\u5c06\u7ed3\u675f\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u6839\u9664\u5bf9H-1B\u548cL-1\u7b7e\u8bc1\u8ba1\u5212\u7684\u5265\u524a\u3002\u6211\u5f88\u81ea\u8c6a\u80fd\u6210\u4e3a\u8fd9\u4e00\u4fdd\u62a4\u7f8e\u56fd\u5de5\u4eba\u548c\u4fee\u590d\u6211\u4eec\u652f\u79bb\u7834\u788e\u7684\u4f53\u7cfb\u7684\u4e24\u515a\u5408\u4f5c\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u201c\u53e4\u767b\u8bf4\u3002\nH-1B\u548cL-1\u7b7e\u8bc1\u6539\u9769\u6cd5\u6848\u5c06\u8981\u6c42\u7f8e\u56fd\u516c\u6c11\u548c\u79fb\u6c11\u670d\u52a1\u5c40\u9996\u6b21\u4f18\u5148\u8003\u8651\u6bcf\u5e74\u5206\u914dH-1B\u7b7e\u8bc1\u3002\u65b0\u5236\u5ea6\u5c06\u786e\u4fdd\u5728\u7f8e\u56fd\u63a5\u53d7\u6559\u80b2\u7684\u6700\u4f18\u79c0\u548c\u6700\u806a\u660e\u7684\u5b66\u751f\u4f18\u5148\u83b7\u5f97H-1B\u7b7e\u8bc1\uff0c\u5305\u62ec\u9ad8\u7ea7\u5b66\u4f4d\u6301\u6709\u8005\u3001\u9ad8\u85aa\u5b66\u751f\u548c\u5177\u6709\u5b9d\u8d35\u6280\u80fd\u7684\u5b66\u751f\u3002\n\u8be5\u7acb\u6cd5\u660e\u786e\u7981\u6b62H-1B\u6216L-1\u7b7e\u8bc1\u6301\u6709\u8005\u53d6\u4ee3\u7f8e\u56fd\u5de5\u4eba\uff0c\u6f84\u6e05\u7c7b\u4f3c\u96c7\u7528\u7684\u7f8e\u56fd\u5de5\u4eba\u7684\u5de5\u4f5c\u6761\u4ef6\u53ef\u80fd\u4e0d\u4f1a\u56e0\u96c7\u7528H-1B\u5de5\u4eba\u800c\u53d7\u5230\u4e0d\u5229\u5f71\u54cd\uff0c\u5305\u62ec\u88ab\u53e6\u4e00\u96c7\u4e3b\u5b89\u7f6e\u5728\u7f8e\u56fd\u5de5\u4eba\u5de5\u5730\u7684H-1B\u5de5\u4eba\u3002\u8fd9\u4e9b\u89c4\u5b9a\u9488\u5bf9\u7684\u662f\u5df2\u7ecf\u6709\u5145\u5206\u8bb0\u5f55\u7684\u6ee5\u7528\u884c\u4e3a\u7684\u7c7b\u578b\u3002\n\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u9879\u7acb\u6cd5\u5c06\u6253\u51fb\u90a3\u4e9b\u8f93\u5165\u5927\u91cfH-1B\u548cL-1\u5de5\u4eba\u7528\u4e8e\u4e34\u65f6\u57f9\u8bad\u76ee\u7684\u7684\u5916\u5305\u516c\u53f8\uff0c\u8fd9\u4e9b\u5de5\u4eba\u53ea\u662f\u4e3a\u4e86\u628a\u5de5\u4eba\u9001\u56de\u81ea\u5df1\u7684\u56fd\u5bb6\u505a\u540c\u6837\u7684\u5de5\u4f5c\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u8be5\u6cd5\u6848\u5c06\u7981\u6b62\u5458\u5de5\u8d85\u8fc750\u4eba\u7684\u516c\u53f8\u62db\u8058\u989d\u5916\u7684H-1B\u5458\u5de5\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u534a\u662fH-1B\u6216L-1\u6301\u6709\u8005\u3002\u8be5\u6cd5\u6848\u8d4b\u4e88\u7f8e\u56fd\u52b3\u5de5\u90e8\u66f4\u5927\u7684\u6743\u529b\uff0c\u53ef\u4ee5\u5ba1\u67e5\u3001\u8c03\u67e5\u548c\u5ba1\u8ba1\u96c7\u4e3b\u9075\u5b88\u8ba1\u5212\u8981\u6c42\u7684\u60c5\u51b5\uff0c\u4ee5\u53ca\u60e9\u7f5a\u6b3a\u8bc8\u6027\u6216\u6ee5\u7528\u884c\u4e3a\u3002\u5b83\u9700\u8981\u5236\u4f5c\u5173\u4e8eH-1B\u548cL-1\u9879\u76ee\u7684\u5e7f\u6cdb\u7edf\u8ba1\u6570\u636e\uff0c\u5305\u62ec\u5de5\u8d44\u6570\u636e\u3001\u5de5\u4eba\u6559\u80b2\u6c34\u5e73\u3001\u5c31\u4e1a\u5730\u70b9\u548c\u6027\u522b\u3002\n\u6b64\u5916\uff0cH-1B\u548cL-1\u7b7e\u8bc1\u6539\u9769\u6cd5\u6848\u5305\u542b\u4e86\u5bf9L-1\u7b7e\u8bc1\u8ba1\u5212\u7684\u51e0\u9879\u6539\u9769\uff0c\u5305\u62ec\u4e3aL-1\u5de5\u4eba\u8bbe\u7acb\u5de5\u8d44\u6700\u4f4e\u6807\u51c6\uff1b\u6388\u6743\u7f8e\u56fd\u56fd\u571f\u5b89\u5168\u90e8\u8c03\u67e5\u3001\u5ba1\u8ba1\u548c\u5f3a\u5236\u6267\u884cL-1\u8ba1\u5212\u8981\u6c42\u7684\u9075\u5b88\u60c5\u51b5\uff1b\u4fdd\u8bc1\u516c\u53f8\u5185\u90e8\u7684\u8f6c\u79fb\u53d1\u751f\u5728\u516c\u53f8\u7684\u5408\u6cd5\u5206\u652f\u673a\u6784\u4e4b\u95f4\uff0c\u4e0d\u6d89\u53ca\u201c\u7a7a\u58f3\u201d\u8bbe\u65bd\uff1b\u4ee5\u53ca\u4fee\u6539\u201c\u4e13\u4e1a\u77e5\u8bc6\u201d\u7684\u5b9a\u4e49\uff0c\u4ee5\u786e\u4fddL-1\u7b7e\u8bc1\u4ec5\u4fdd\u7559\u7ed9\u771f\u6b63\u5173\u952e\u7684\u4eba\u5458\u3002", "note_en": "WASHINGTON \u2013 A bipartisan, bicameral group of lawmakers this week introduced legislation to reform and close loopholes in the H-1B and L-1 visa programs. Senators Chuck Grassley (R-Iowa) and Dick Durbin (D-Ill.) offered the Senate version of the H-1B and L-1 Visa Reform Act, which prioritizes American workers and restore fairness in visa programs for skilled foreign workers. U.S. Reps. Bill Pascrell, Jr. (D-N.J.-09), Paul Gosar (R-Ariz.-04), Ro Khanna (D-Calif.-17), Frank Pallone, Jr. (D-N.J.-06), and Lance Gooden (R-Texas-05) introduced an identical version of the bill in the House of Representatives. The legislation reinstates Congress\u2019 original intent in the H-1B and L-1 visa programs by increasing enforcement, modifying wage requirements and securing protections for both American workers and visa holders.\n  \u201cCongress created these programs to complement America\u2019s high-skilled workforce, not replace it. Unfortunately, some companies are trying to exploit the programs by cutting American workers for cheaper labor. We need programs dedicated to putting American workers first. When skilled foreign workers are needed to meet the demands of our labor market, we must also ensure that visa applicants who honed their skills at American colleges and universities are a priority over the importation of more foreign workers. Our bill takes steps to ensure that the programs work for Americans and skilled foreign workers alike,\u201d  Grassley said.\n  \u201cReforming the H-1B and L-1 visa programs is a critical component of fixing our broken immigration system. For years, outsourcing companies have used loopholes in the laws to displace qualified American workers and facilitate the outsourcing of American jobs.\u00a0 Our legislation would end these abuses and protect American and foreign workers from exploitation,\u201d  Durbin said.\n  \u201cThese vital visa programs were intended to support America\u2019s high-skilled workforce. Sadly, certain corporations and bad actors have abused loopholes in the laws to undermine American workers. This bipartisan fix will put American workers first and ensure fairness for visa applicants who developed their skills here in the United States. Most important, it will implant safeguards to protect American labor and prevent the exploitation of visa workers,\u201d  Pascrell said.\n  \u201cThe H-1B and L-1 Visa Reform Act will curtail the discrimination against high-skilled Americans by foreign outsourcing companies. \u00a0This proposal includes necessary reforms to protect United States workers from job outsourcing and provides additional authority to the Departments of Homeland Security and Labor to crack down on visa abuse. I am proud to prioritize American workers and to work with Rep. Pascrell on the reintroduction of this important bipartisan legislation. The millions of Americans seeking wage growth and employment opportunities should not have to compete with foreign outsourcing companies and cheaper foreign labor,\u201d  Gosar said.\n  \u201cAmerican immigrants come to this country with some of the most innovative, transformative ideas this world has ever seen. If we\u2019re going to continue to foster a culture of creativity, we must reform the H-1 and L-1 visa programs to protect all workers from abuses. Immigrants coming here on H-1B visas have made important contributions to Silicon Valley\u2019s leadership in the digital revolution. We want to make sure that talent is coming to the US, but we also want to make sure that it\u2019s being done with proper compensation. Proud to join Rep. Pascrell in this effort,\u201d  Khanna said.\n  \u201cWe must ensure that qualified American workers have access to job opportunities in this country. Unfortunately, many companies use loopholes in immigration visa programs to replace these workers and outsource jobs. Reforming these programs and requiring a good faith effort to recruit and hire American workers is critical to helping people get back to work during this difficult time and will help prevent the exploitation of foreign workers. I thank my friend, Congressman Pascrell, for reintroducing this important legislation and look forward to working with him to address this issue in Congress,\u201d  Pallone said.\n  \u201cThese deeply flawed programs harm our workforce while displacing our best and brightest for cheaper alternatives. This legislation will put an end to that and root out exploitation of the H-1B and L-1 visa programs. I\u2019m proud to be part of this bipartisan effort to defend American workers and fix our broken system,\u201d  Gooden said.\n  The H-1B and L-1 Visa Reform Act will require U.S. Citizenship and Immigration Services to prioritize for the first time the annual allocation of H-1B visas.\u00a0The new system would ensure that the best and brightest students being educated in the United States receive preference for an H-1B visa, including advanced degree holders, those being paid a high wage, and those with valuable skills.\n  The legislation explicitly prohibits the replacement of American workers by H-1B or L-1 visa holders, clarifying that working conditions of similarly employed American workers may not be adversely affected by the hiring of an H-1B worker, including H-1B workers who have been placed by another employer at the American worker\u2019s worksite. These provisions address the types of abuses that have been well-documented.\n  Importantly, the legislation will crack down on outsourcing companies that import large numbers of H-1B and L-1 workers for temporary training purposes only to send the workers back to their home countries to do the same job. Specifically, the bill would prohibit companies with more than 50 employees, of which at least half are H-1B or L-1 holders, from hiring additional H-1B employees. The bill gives the U.S. Department of Labor enhanced authority to review, investigate, and audit employer compliance with program requirements, as well as to penalize fraudulent or abusive conduct. It requires the production of extensive statistical data about the H-1B and L-1 programs, including wage data, worker education levels, place of employment, and gender.\n  In addition, the H-1B and L-1 Visa Reform Act encompasses several reforms of the L-1 visa program, including establishment of a wage floor for L-1 workers; authority for the U.S. Department of Homeland Security to investigate, audit, and enforce compliance with L-1 program requirements; assurance that intra-company transfers occur between legitimate branches of a company and don\u2019t involve \u201cshell\u201d facilities; and a change to the definition of \u201cspecialized knowledge\u201d to ensure that L-1 visas are reserved only for truly key personnel.", "posttime": "2020-05-25 13:14:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6539\u9769,reform,\u7f8e\u56fd", "title": "H-1B\u548cL-1\u7b7e\u8bc1\u6539\u9769\u6cd5\u6848", "title_en": "H-1B and L-1 Visa Reform Act", "transed": 1, "url": "https://www.grassley.senate.gov/news/news-releases/bipartisan-group-lawmakers-propose-reforms-skilled-non-immigrant-visa-programs", "via": "", "real_tags": ["\u6539\u9769", "reform", "\u7f8e\u56fd"]}, {"category": "", "categoryclass": "", "imagename": "6799b3b0c909aaf214b3ae67e3703924.png", "infoid": 1003603, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PermalLink GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d", "note_en": "Permalink     GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up", "posttime": "2020-05-25 13:14:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aws,\u5ba1\u67e5", "title": "\u6240\u67095\u4e2aAWS\u5206\u533a\u7684\u5217\u8868(AWS\u3001AWS-CN\u3001AWS-US-GOV\u3001AWS-ISO\u3001AWS-ISO-b)", "title_en": "List of all 5 AWS partitions (AWS, AWS-cn, AWS-us-gov, AWS-ISO, AWS-ISO-b)", "transed": 1, "url": "https://github.com/aws/aws-sdk-js-v3/blob/c96f35f972c44706a391bb07e0a897e73b8d6dfe/clients/client-cloudfront/endpoints.ts", "via": "", "real_tags": ["aws", "\u5ba1\u67e5"]}, {"category": "", "categoryclass": "", "imagename": "c83cab766cc3a2827db2362b49102a19.png", "infoid": 1003602, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e00\uff0cTwitter\u548cSquare\u5ba3\u5e03\uff0c\u4f5c\u4e3a\u4e00\u5bb6\u516c\u53f8\uff0c\u4ed6\u4eec\u5c06\u9996\u5148\u5b9e\u73b0\u8fdc\u7a0b\u670d\u52a1\u3002\u4e09\u5929\u540e\uff0cFacebook\u548cShopify\u4e5f\u53d1\u5e03\u4e86\u7c7b\u4f3c\u7684\u58f0\u660e\u3002\u4ece\u90a3\u65f6\u8d77\uff0cTwitter\u548c\u6211\u7684\u6bcf\u4e00\u6b21\u7fa4\u804a\u90fd\u5145\u6ee1\u4e86\u5173\u4e8e\u8fd9\u4e9b\u53d8\u5316\u5c06\u5bf9\u672a\u6765\u5de5\u4f5c\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u7684\u8ba8\u8bba\u3002\u6211\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u611f\u5174\u8da3\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u751a\u81f3\u5728\u6211\u81ea\u5df1\u8fdc\u79bb\u8fd9\u4e2a\u8bdd\u9898\u4e4b\u524d\uff0c\u6240\u4ee5\u6211\u60f3\u6211\u5e94\u8be5\u5206\u4eab\u4e00\u4e0b\u6211\u5bf9\u672a\u6765\u5341\u5e74\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u7684\u4e1c\u897f\u7684\u770b\u6cd5\u3002\u867d\u7136\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u79cd\u731c\u6d4b\uff0c\u4f46\u8fd9\u662f\u56e0\u4e3a\u6211\u5728Kaggle(\u4e00\u5bb6\u88ab\u8c37\u6b4c\u6536\u8d2d\u7684\u516c\u53f8)\u8fdc\u7a0b\u5de5\u4f5c\u7684\u6700\u540e\u4e24\u5e74\uff0c\u5728\u6b64\u4e4b\u524d\u6211\u662f\u4e00\u4e2a\u90e8\u5206\u5206\u6563\u7684\u56e2\u961f\u7684\u6210\u5458\u3002\u6211\u8fd8\u5199\u8fc7\u5173\u4e8e\u4e0e\u6211\u7684\u961f\u53cb\u6885\u683c\u4f5c\u4e3a\u8fdc\u7a0b\u4f18\u5148\u56e2\u961f\u6709\u6548\u5de5\u4f5c\u7684\u6587\u7ae0\u3002\n\u5f53\u6211\u542c\u5230\u8fd9\u4e9b\u516c\u544a\u65f6\uff0c\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u5b83\u4eec\u542c\u8d77\u6765\u662f\u591a\u4e48\u6fc0\u70c8\u3002\u5c3d\u7ba1\u7531\u4e8e\u6076\u5fc3\u800c\u4e00\u591c\u4e4b\u95f4\u88ab\u8feb\u53bbWFH\u4f3c\u4e4e\u6697\u793a\u7740\uff0c\u5bf9\u4e8e\u4e00\u5bb6\u516c\u53f8\u6765\u8bf4\uff0c\u9065\u63a7\u5668\u4e0d\u662f\u4e00\u4e2a\u4f60\u53ef\u4ee5\u6253\u5f00\u7684\u5f00\u5173\u3002\u8bb8\u591a\u4eca\u5929\u53ef\u80fd\u5de5\u4f5c\u6548\u7387\u5f88\u9ad8\u7684\u56e2\u961f\u53ef\u80fd\u53ea\u662f\u5e26\u7740\u4ed6\u4eec\u5728\u4e00\u8d77\u5728\u529e\u516c\u5ba4\u91cc\u5efa\u7acb\u8d77\u6765\u7684\u52a8\u529b\u3002\u5728\u8fd9\u79cd\u8f6c\u53d8\u8fc7\u7a0b\u4e2d\uff0c\u5458\u5de5\u627f\u53d7\u7740\u5de8\u5927\u7684\u538b\u529b\uff0c\u7279\u522b\u662f\u5728\u5bb6\u91cc\u6709\u914d\u5076\u548c\u5b69\u5b50\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53ef\u80fd\u88ab\u8bc1\u660e\u662f\u957f\u671f\u4e0d\u53ef\u6301\u7eed\u7684\u3002\u5c3d\u7ba1\u6211\u76f8\u4fe1\u672a\u6765\u5c06\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7531\u8fdc\u7a0b\u9a71\u52a8\uff0c\u4f46\u6211\u5f88\u96be\u60f3\u8c61\u6570\u4e07\u6216\u6570\u5341\u4e07\u5458\u5de5\u4e00\u591c\u4e4b\u95f4\u53d8\u5f97\u8fdc\u7a0b\uff0c\u80fd\u591f\u9ad8\u6548\u5730\u7ef4\u6301\u8fd9\u79cd\u5c40\u9762\u3002\n\u8fdc\u7a0b\u5de5\u4f5c\u4ecd\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\u3002\u867d\u7136\u5b83\u5df2\u88ab\u8bc1\u660e\u5728\u67d0\u4e9b\u516c\u53f8\u5de5\u4f5c\uff0c\u4ed6\u4eec\u5f80\u5f80\u662f\u5c0f\u56e2\u961f\u505a\u5c0f\u8303\u56f4\u7684\u5de5\u4f5c(\u5373\u3002Web\u5f00\u53d1)\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5b83\u5b9e\u9645\u4e0a\u9002\u7528\u4e8e\u5927\u591a\u6570\u7c7b\u578b\u7684\u77e5\u8bc6\u6027\u5de5\u4f5c\u548c\u516c\u53f8\u89c4\u6a21--\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d\uff0c\u6211\u5bf9\u6709\u8fd9\u4e48\u591a\u8fdc\u7a0b\u673a\u4f1a\u4e0a\u7ebf\u7684\u524d\u666f\u611f\u5230\u975e\u5e38\u5174\u594b\uff0c\u5e76\u62e5\u6709\u66f4\u5927\u7684\u6837\u672c\u89c4\u6a21\u6765\u5bf9\u5176\u6709\u6548\u6027\u505a\u51fa\u7ed3\u8bba\uff0c\u4f46\u5728\u6ca1\u6709\u66f4\u591a\u7ecf\u9a8c\u7684\u60c5\u51b5\u4e0b\u505a\u51fa\u5982\u6b64\u91cd\u5927\u7684\u516c\u53f8\u8f6c\u53d8\u5bf9\u6211\u6765\u8bf4\u662f\u6709\u98ce\u9669\u7684\u3002\n\u6211\u5bf9\u8fdc\u7a0b\u5de5\u4f5c\u8fd8\u6709\u4e24\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff1a1)\u5f53\u5458\u5de5\u4e0d\u518d\u5728\u529e\u516c\u5ba4\u65f6\uff0c\u5927\u516c\u53f8\u8fd8\u80fd\u7ee7\u7eed\u4f20\u64ad\u4ed6\u4eec\u7684\u6587\u5316\u5417(\u8981\u5bf9\u6b64\u6301\u6124\u4e16\u5ac9\u4fd7\u7684\u6001\u5ea6\uff0c\u8bf7\u770b\u9a6c\u7279\u00b7\u83b1\u6587(Matt Levine)\u5173\u4e8e\u94f6\u884c\u4e1a\u6587\u5316\u8f6c\u53d8\u7684\u62a5\u9053)\u548c2)\u6709\u6ca1\u6709\u4e00\u5957\u5de5\u4f5c\u5728\u8fdc\u7a0b\u73af\u5883\u4e0b\u662f\u7ad9\u4e0d\u4f4f\u811a\u7684\uff1f\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6709\u591a\u5c11\u79d1\u6280\u516c\u53f8\u7684\u5de5\u4f5c\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\uff1f\n\u6211\u6000\u7591\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u524d\u63d0\u662f\u4ed6\u4eec\u6545\u610f\u8fd9\u6837\u505a\u3002\u5927\u591a\u6570\u516c\u53f8\u90fd\u4f1a\u5c1d\u8bd5\u6267\u884c\u4ed6\u4eec\u4ee5\u524d\u62e5\u6709\u7684\u76f8\u540c\u7c7b\u578b\u7684\u6d3b\u52a8\u548c\u6d41\u7a0b\uff0c\u4f46\u91c7\u7528\u6570\u5b57\u65b9\u5f0f\uff0c\u8fd9\u5c31\u662f\u6211\u6240\u8bf4\u7684\u5347\u964d\u5f0f\u6587\u5316\u3002\u8fd9\u4e9b\u53ef\u80fd\u4f1a\u5728\u77ed\u671f\u5185\u594f\u6548\uff0c\u4f46\u4f1a\u9010\u6e10\u4ea7\u751f\u4e0d\u5feb\u4e50\u548c\u751f\u4ea7\u7387\u8f83\u4f4e\u7684\u5458\u5de5\u3002\u5728\u8fd9\u79cd\u73af\u5883\u4e2d\u505a\u5f97\u6700\u597d\u7684\u516c\u53f8\u662f\u90a3\u4e9b\u6709\u610f\u8bc6\u5730\u4e13\u6ce8\u4e8e\u5c06\u4ed6\u4eec\u7684\u4e00\u5957\u4ef7\u503c\u89c2\u3001\u671f\u671b\u548c\u6d41\u7a0b\u91cd\u65b0\u521b\u5efa\u4e3a\u8fdc\u7a0b\u4f18\u5148\u7684\u516c\u53f8\u3002\u6bcf\u4e2a\u4eba\u90fd\u8fd8\u5728\u5b66\u4e60\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u8bb0\u5f55\u5361\u683c\u5c14\u7684\u65b9\u6cd5\u65b9\u9762\u6700\u597d\u7684\u5c1d\u8bd5\u3002\n\u4e0d\u8fc7\uff0c\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\u4efb\u4f55\u4eba\u7684\u731c\u6d4b\u3002\u6211\u4e0d\u8ba4\u4e3a\u6709\u8db3\u591f\u7684\u8bc1\u636e\u6765\u786e\u5b9a\u5206\u6563\u7684\u56e2\u961f\u5728\u6240\u6709\u8303\u56f4\u7684\u4efb\u52a1\u4e2d\u662f\u5426\u90fd\u4e00\u6837\u6709\u6548\u3002\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u5927\u591a\u6570\u8fdc\u7a0b\u56e2\u961f\u7684\u4f8b\u5b50\u90fd\u662f\u81ea\u6211\u9009\u62e9\u7684\u5c0f\u56e2\u4f53\uff0c\u4ed6\u4eec\u53ef\u80fd\u504f\u5411\u4e8e\u66f4\u72ec\u7acb\u3001\u66f4\u6709\u6548\u7387\u7684\u5458\u5de5\u3002\u6211\u671f\u5f85\u7740\u770b\u5230\u8f6c\u578b\u5bf9\u516c\u53f8\u4ea7\u51fa\u7684\u5f71\u54cd\u3002\n\u6b63\u5728\u8fdb\u884c\u7684\u5927\u90e8\u5206\u8ba8\u8bba\u90fd\u88ab\u7edd\u5bf9\u4e3b\u4e49\u6240\u4e3b\u5bfc\uff1a\u672a\u6765\u5f88\u9065\u8fdc\uff0c\u6216\u8005\u8fd9\u4e2a\u5b9e\u9a8c\u5c06\u5931\u8d25\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5c06\u56de\u5230\u529e\u516c\u5ba4\u3002\u5728\u6211\u770b\u6765\uff0c\u524d\u63d0\u4f3c\u4e4e\u662f\u9519\u8bef\u7684\uff0c\u9065\u63a7\u5668\u66f4\u591a\u7684\u662f\u4e00\u79cd\u5149\u8c31\uff0c\u800c\u4e0d\u662f\u4e8c\u5143\u9009\u62e9\u3002\u6211\u62bc\u6ce8\u7684\u662f\u672a\u6765\u6bd4\u4eba\u4eec\u60f3\u8c61\u7684\u8981\u9065\u8fdc\u5f97\u591a\u3002\u6211\u731c\u60f3\u4f1a\u6709\u51e0\u5341\u79cd\u8fdc\u7a0b\u914d\u7f6e\uff1a\u6781\u7aef\u7684\u6e38\u7267\u516c\u53f8(\u5458\u5de5\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u95f4\u5728\u4efb\u4f55\u5730\u65b9\u5de5\u4f5c)\uff0c\u5171\u65f6\u533a(\u60a8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65f6\u533a\u5185\u7684\u4efb\u4f55\u5730\u65b9\u5c45\u4f4f)\uff0c\u4ee5\u529e\u516c\u5ba4\u4e3a\u4e2d\u5fc3\u7684\u8fdc\u7a0b\u914d\u7f6e-\u7075\u6d3b(\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u529e\u516c\u5ba4\u529e\u516c\uff0c\u4f46\u53ef\u4ee5\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u529e\u516c\u5ba4\u529e\u516c\uff0c\u4f46\u53ef\u4ee5\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u8fdc\u7a0b\u529e\u516c\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f4f\u5728\u8fd9\u4e2a\u65f6\u533a\u5185\u7684\u4efb\u4f55\u5730\u65b9)\u3002WFH\u5468\u4e94\uff0c\u590f\u5a01\u5937\u4e00\u4e2a\u6708)\u3002\n\u6b63\u662f\u8fd9\u79cd\u5de5\u4f5c\u65b9\u5f0f\u7684\u591a\u6837\u5316\u5c06\u4f7f\u5458\u5de5\u53d7\u76ca\u6700\u5927\u3002\u4f60\u53ef\u4ee5\u9009\u62e9--\u6216\u8005\u81f3\u5c11\u7533\u8bf7--\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u8ba2\u9605\u4f60\u7406\u60f3\u7684\u751f\u6d3b\u65b9\u5f0f\u3002\u5728\u4f60\u7684\u4e00\u751f\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u751a\u81f3\u53ef\u80fd\u4f1a\u6539\u53d8\uff1a\u4e5f\u8bb8\u5728\u4f6020\u591a\u5c81\u7684\u65f6\u5019\uff0c\u4f60\u66f4\u559c\u6b22\u6e38\u7267\uff0c\u4f46\u572840\u591a\u5c81\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u559c\u6b22\u6709\u961f\u53cb\u5728\u4f60\u7684\u65f6\u533a\u91cc\u6709\u7a33\u5b9a\u7684\u5de5\u4f5c\u65f6\u95f4\u3002\n\u529e\u516c\u5ba4\u6ca1\u6709\u6b7b\uff0c\u4f46\u5b83\u4f1a\u6539\u53d8\u7684\u3002\u5373\u4f7f\u5728\u6211\u4e0e\u4e16\u9694\u7edd\u7684\u4e24\u5e74\u91cc\uff0c\u6211\u4ecd\u7136\u6bcf\u5468\u81f3\u5c11\u53bb\u529e\u516c\u5ba4\u4e09\u6b21\u3002\u6211\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u5904\u4e8e\u793e\u4f1a\u5149\u8c31\u7684\u4e2d\u4f4d\u6570\uff0c\u5982\u679c\u6709\u51e0\u5929\u89c1\u4e0d\u5230\u4eba\uff0c\u6211\u5f80\u5f80\u4f1a\u6709\u70b9\u5446\u5728\u6728\u5c4b\u91cc--\u62e5\u6709\u67d0\u79cd\u5f62\u5f0f\u7684\u529e\u516c\u5ba4\u662f\u6211\u957f\u671f\u7684\u8981\u6c42\u3002\u53ef\u80fd\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u662f\u8fd9\u6837\uff0c\u4f46\u5927\u591a\u6570\u4eba\u4ecd\u7136\u60f3\u8981\u4e00\u4e2a\u7a7a\u95f4\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u53ef\u4ee5\u5728\u5bb6\u5916\u4e0e\u5176\u4ed6\u4eba\u4e00\u8d77\u5de5\u4f5c\uff0c\u5e76\u5728\u90a3\u91cc\u5468\u56f4\u5de5\u4f5c\u3002WeWork\u662f\u8fd9\u4e00\u8d8b\u52bf\u7684\u4e00\u4e2a\u660e\u663e\u4f8b\u5b50\uff0c\u4f46\u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\u6570\u5b57\u6e38\u7267\u6c11\u65cf\u4f4f\u5728\u96c6\u4f53\u623f\u5c4b\u91cc\uff0c\u8ba1\u5212\u4e00\u8d77\u65c5\u884c\u3002\n\u516c\u53f8\u529e\u516c\u5ba4\u5c06\u4e0d\u5f97\u4e0d\u9002\u5e94\u8fd9\u4e00\u65b0\u7684\u73b0\u5b9e\uff0c\u56e0\u4e3a\u5458\u5de5\u5728\u9002\u5408\u4ed6\u4eec\u7684\u65f6\u5019\u6765\u53bb\u81ea\u5982\u3002\u5728\u4e13\u6ce8\u7684\u8fdc\u7a0b\u4f1a\u8bdd\u4e4b\u95f4\uff0c\u529e\u516c\u5ba4\u5c06\u6210\u4e3a\u66f4\u591a\u7684\u534f\u4f5c\u548c\u793e\u4ea4\u7a7a\u95f4\u3002\u6d3b\u52a8\u548c\u5185\u90e8\u4f1a\u8bae\u5c06\u628a\u5206\u6563\u7684\u56e2\u961f\u6210\u5458\u5e26\u5230\u4e00\u4e2a\u7a7a\u95f4\uff0c\u91cd\u65b0\u8bbe\u5b9a\u516c\u53f8\u7684\u534a\u8870\u671f\u4fe1\u4efb\u3002\n\u6211\u5f88\u5e78\u8fd0\uff0c\u8c37\u6b4c\u5728\u897f\u96c5\u56fe\u67093\u4e2a\u529e\u4e8b\u5904\uff0c\u6211\u53ef\u4ee5\u4ece\u4e2d\u6311\u9009\u3002\u6211\u5728\u4e00\u680b\u697c\u91cc\u6709\u4e00\u5f20\u529e\u516c\u684c\uff0c\u4f46\u6211\u771f\u7684\u4f1a\u6839\u636e\u6211\u60f3\u8981\u89c1\u7684\u540c\u4e8b\u6216\u6211\u60f3\u53bb\u7684\u5496\u5561\u9986\uff0c\u6bcf\u5929\u8d70\u8fdb\u6211\u60f3\u53bb\u7684\u4efb\u4f55\u529e\u516c\u5ba4\u3002\u6539\u53d8\u73af\u5883\u7684\u80fd\u529b\u771f\u7684\u8ba9\u6211\u5728\u5de5\u4f5c\u65f6\u611f\u89c9\u7cbe\u529b\u5145\u6c9b\u3002\u62e5\u6709\u5728\u529e\u516c\u5ba4\u4e4b\u95f4\u8df3\u8dc3\u7684\u80fd\u529b\uff0c\u5c06\u8ba9\u5458\u5de5\u81ea\u7531\u9009\u62e9\u4ed6\u4eec\u5de5\u4f5c\u6700\u597d\u7684\u5de5\u4f5c\u73af\u5883--\u65e0\u8bba\u662fWeWork\u9694\u95f4\u3001\u5435\u95f9\u7684\u5496\u5561\u5385\uff0c\u8fd8\u662f\u4ed6\u4eec\u5728\u6811\u6797\u91cc\u7684\u5c0f\u5c4b\u3002\n\u5728\u8fd9\u4e9b\u8ba8\u8bba\u4e2d\u63d0\u51fa\u7684\u6700\u5177\u4e89\u8bae\u6027\u7684\u8bdd\u9898\u662f\uff0c\u504f\u8fdc\u5730\u533a\u5c06\u5bf9\u5de5\u8d44\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u770b\u4e0d\u51fa\u8fd9\u4f1a\u63d0\u9ad8\u5de5\u8d44\u7684\u65b9\u6cd5\uff1a\u66f4\u591a\u7684\u5de5\u4eba\u4f9b\u5e94\u53ea\u4f1a\u964d\u4f4e\u5de5\u8d44\u3002\u5de5\u8d44\u4fdd\u6301\u4e0d\u53d8\u7684\u552f\u4e00\u53ef\u80fd\u6027\u662f\uff0c\u5c3d\u7ba1\u6709\u5730\u70b9\u9650\u5236\uff0c\u4f46\u6240\u6709\u6700\u4f18\u79c0\u7684\u4eba\u624d\u90fd\u5df2\u7ecf\u88ab\u6700\u5927\u9650\u5ea6\u5730\u8058\u7528\uff0c\u4f46\u8fd9\u4f3c\u4e4e\u975e\u5e38\u4e0d\u53ef\u80fd\u3002\n\u7b49\u5f0f\u7684\u53e6\u4e00\u8fb9\u662f\uff0c\u5458\u5de5\u4e0d\u518d\u9700\u8981\u751f\u6d3b\u5728\u4e94\u4e2a\u57ce\u5e02\u4e2d\u7684\u4e00\u4e2a\u57ce\u5e02\uff0c\u5c31\u53ef\u4ee5\u53c2\u4e0e90%\u7684\u85aa\u916c\u6700\u9ad8\u7684\u5de5\u4f5c\u3002\u642c\u5230\u6210\u672c\u66f4\u4f4e\u7684\u57ce\u5e02\uff0c\u867d\u7136\u5de5\u8d44\u66f4\u4f4e\uff0c\u4f46\u53ef\u80fd\u4f1a\u8ba9\u4f60\u53d7\u76ca\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a-\u8fd9\u53d6\u51b3\u4e8e\u4f60\u5177\u4f53\u60c5\u51b5\u7684\u6570\u5b66\u8ba1\u7b97\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u8ba4\u4e3a\u83b7\u76ca\u6700\u5927\u7684\u662f\u90a3\u4e9b\u6709\u5bb6\u5ead\u6216\u751f\u6d3b\u6210\u672c\u6602\u8d35\u7684\u4eba\uff0c\u5728\u8fd9\u4e9b\u4eba\u7684\u652f\u51fa\u4e2d\uff0c\u5f53\u5730\u5229\u7387\u5360\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u5927\u591a\u6570\u642c\u5230\u65e7\u91d1\u5c71\u6216\u7ebd\u7ea6\u7684\u5e74\u8f7b\u5de5\u7a0b\u5e08\uff0c\u5728\u7701\u4e0b\u5927\u90e8\u5206\u5de5\u8d44\u7684\u540c\u65f6\uff0c\u8282\u4fed\u5730\u4f4f\u5728\u5c0f\u516c\u5bd3\u91cc\uff0c\u4e0e\u5176\u4ed6\u6709\u5bb6\u5ead\u6216\u5176\u4ed6\u5173\u7cfb\u7684\u4eba\u76f8\u6bd4\uff0c\u4ed6\u4eec\u62e5\u6709\u76f8\u5bf9\u4f18\u52bf\uff0c\u8fd9\u4e9b\u5bb6\u5ead\u6216\u5176\u4ed6\u5173\u7cfb\u4f7f\u4ed6\u4eec\u65e0\u6cd5\u642c\u5230\u6536\u5165\u6700\u9ad8\u7684\u57ce\u5e02\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fd9\u79cd\u4f18\u52bf\u5c06\u57fa\u672c\u6d88\u5931\uff0c\u56e0\u4e3a\u5728\u8fb9\u9645\uff0c\u4eba\u4eec\u5c06\u642c\u51fa\u6602\u8d35\u7684\u57ce\u5e02\uff0c\u964d\u4f4e\u70ed\u70b9\u5730\u533a\u5bf9\u4eba\u624d\u7684\u7ade\u4e89\u3002\u6211\u6000\u7591\uff0c\u968f\u7740\u5458\u5de5\u5c06\u81ea\u5df1\u5206\u914d\u5230\u6700\u4f73\u5730\u70b9\uff0c\u516c\u53f8\u7528\u6765\u786e\u5b9a\u6bcf\u4e2a\u57ce\u5e02\u7684\u5de5\u8d44\u7684\u4e58\u6570\u5c06\u5e73\u8861\u5230\u5de5\u8d44\u4e0e\u751f\u6d3b\u6210\u672c\u7684\u6709\u6548\u524d\u6cbf\u3002\n\u6211\u80fd\u60f3\u5230\u7684\u552f\u4e00\u4f8b\u5916\u662f\uff0c\u5728\u4eba\u624d\u6216\u54c1\u724c\u65b9\u9762\uff0c\u8fd9\u79cd\u8f6c\u53d8\u5e76\u6ca1\u6709\u5e26\u6765\u66f4\u4f4e\u7684\u8d39\u7387\u3002\u56e0\u4e3a\u8fdc\u7a0b\u4f7f\u65e0\u5dee\u522b\u7684\u89d2\u8272\u66f4\u5177\u7ade\u4e89\u529b(\u5373\u3002\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3001\u9500\u552e\u4eba\u5458\u6216\u5e02\u573a\u7ecf\u7406)\uff0c\u67d0\u4e9b\u4eba\u624d\u4f1a\u60f3\u529e\u6cd5\u8131\u9896\u800c\u51fa\uff0c\u5728\u4ed6\u4eec\u7684\u5e02\u573a\u4e2d\u72ec\u6811\u4e00\u5e1c\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5efa\u7acb\u4e00\u4e2a\u4e2a\u4eba\u54c1\u724c\uff0c\u4e3a\u516c\u53f8\u5e26\u6765\u4ef7\u503c\uff0c\u8d85\u8d8a\u4f60\u5de5\u4f5c\u7684\u539f\u59cb\u4ea7\u51fa\uff0c\u6bd4\u5982Twitter\u8ba4\u53ef\u3001\u4f1a\u8bae\u3001\u5199\u4f5c\u6216\u5f00\u6e90\u8d21\u732e\u3002\u8fd9\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u5efa\u7acb\u4e00\u4e2a\u5f3a\u5927\u7684\u7f51\u7edc\uff0c\u5e2e\u52a9\u4f60\u5728\u4e0e\u4ed6\u4eba\u7ade\u4e89\u4e4b\u524d\u5c31\u88ab\u5f55\u7528\u3002\u8fd9\u662f\u6211\u4ece\u601d\u8003\u8fdc\u7a0b\u5de5\u4f5c\u7684\u672a\u6765\u4e2d\u83b7\u5f97\u7684\u6700\u5927\u6536\u83b7\uff1a\u90a3\u4e9b\u5de5\u8d44\u6700\u9ad8\u7684\u4eba\u5c06\u6295\u8d44\u4e8e\u5dee\u5f02\u5316\u81ea\u5df1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u4f9b\u5e94\u6709\u9650(\u53ea\u6709\u4e00\u5bb6)\uff0c\u9700\u6c42\u65e0\u9650(\u4e16\u754c\u4e0a\u6bcf\u4e00\u5bb6\u516c\u53f8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f60\u65b9\u5706100\u82f1\u91cc\u8303\u56f4\u5185\u7684\u516c\u53f8)\u3002\n\u5c3d\u7ba1\u6211\u5bf9\u8fdc\u7a0b\u5de5\u4f5c\u7684\u672a\u6765\u975e\u5e38\u4e50\u89c2\uff0c\u4f46\u6211\u53d1\u73b0\u76ee\u524d\u56f4\u7ed5\u5b83\u7684\u53d9\u8ff0\u76f8\u5f53\u72ed\u9698\uff0c\u88ab\u9ad8\u4f30\u4e86\uff0c\u800c\u4e14\u662f\u91cd\u590d\u7684\u3002\u5f88\u591a\u4eba\u5173\u6ce8\u4eba\u4eec\u5c06\u5728\u54ea\u91cc\u751f\u6d3b\uff0c\u5de5\u8d44\u5c06\u5982\u4f55\u53d8\u5316\uff0c\u4f46\u5bf9\u5de5\u4f5c\u5b9e\u9645\u662f\u4ec0\u4e48\u6837\u5b50\u4ee5\u53ca\u6587\u5316\u9700\u8981\u5982\u4f55\u9002\u5e94\u7684\u5173\u6ce8\u8fd8\u4e0d\u591f\u3002\u5982\u6b64\u591a\u7684\u516c\u53f8\u5982\u6b64\u8fc5\u901f\u5730\u5411\u8fdc\u7a0b\u8fc7\u6e21\uff0c\u5c06\u4e3a\u4e0b\u4e00\u4ee3\u516c\u53f8\u5efa\u8bbe\u8005\u63d0\u4f9b\u5927\u91cf\u6750\u6599\u4f9b\u4ed6\u4eec\u5b66\u4e60\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u5c06\u8fce\u6765\u6fc0\u52a8\u4eba\u5fc3\u7684\u5341\u5e74\u3002", "note_en": "On Monday, Twitter and Square announced they were going remote-first as a company. Three days later Facebook and Shopify had similar announcements. Since then, Twitter and every one of my group chats have been lit up with discussions on what the implications of these changes will be on the future of work. I&#39;ve been interested in this topic for a while now, even before going remote myself, so I thought I&#39;d share my views on what we could expect to see in the next decade. Although this is largely speculation, it&#39;s informed by my last two years of working remotely at Kaggle (a company acquired by Google), and being a member of a partly distributed team before that. I&#39;ve also written about  effectively working as a remote-first team with my teammate Meg.\n  The first thing I thought when hearing these announcements was how drastic they sounded. Despite what being forced to WFH overnight due to covid seems to imply,  remote is not a switch you can flip on for a company. A lot of teams that may be working effectively today may just be carrying the momentum they had built while being together in an office. Employees are under an enormous amount of stress during this switch, especially with spouses and kids at home, which may prove to not be sustainable long term. As much as I believe the future to be largely remote-driven, I have a hard time imagining tens or hundreds of thousands of employees becoming remote overnight being able to sustain that productively.\n Working remotely is still in the early days. Though it&#39;s been proven to work at certain companies, they&#39;ve tended to be small teams doing a small range of work (ie. web development). It may be the case that we find out that it actually works for most types of knowledge work and company sizes - but that&#39;s not yet the case. Don&#39;t get me wrong, I&#39;m very excited about the prospect of so many remote opportunities coming online, and having a larger sample size to make conclusions on its effectiveness, but to make such drastic company shifts without more experience seems risky to me.\n The two open questions I have about remote work remain 1) Can large companies continue to propagate their culture when employees are no longer in an office (for a cynical take on this, see Matt Levine covering  this transition in banking culture) and 2) Is there a set of work that is untenable in a remote environment and if so how much of a tech company&#39;s work falls under that?\n I suspect that the answer to the first question is yes, but only if they do so deliberately. Most companies will try to just enforce the same type of activities and processes they had before but digitally, what I call lift-and-shifting culture. Those might work short term, but will gradually produce unhappy and less productive employees. The companies that do best in this environment are the ones that consciously focus on recreating their set of values, expectations, and processes into remote-first ones. Everyone is still learning how to do this, and  this was our best stab at documenting Kaggle&#39;s approach.\n The second question, though, is anyone&#39;s guess. I don&#39;t think there&#39;s been enough evidence to determine whether distributed teams can be just as effective in all range of tasks. Most examples we have today of remote teams are small self-selected groups of people that likely bias towards more independent and effective workers. I&#39;m looking forward to seeing the effects on the output of companies transitioning.\n  Much of the discussion going on has been dominated by absolutes: the future is remote, or this experiment will fail and everyone will go back to offices. The premise seems wrong to me, remote is more of a spectrum than a binary choice. My bet is on the future being much more heterogeneously remote than people guess. I suspect there will be dozens of remote configurations:  extreme &#34;nomad&#34; companies (employees can work any place at any time),  co-timezone-located (you can live anywhere within this timezone),  office-centric remote-flexible (we expect you to be based in the office but can be remote for periods of time, ie. WFH fridays, month in Hawaii).\n It&#39;s this diversification of work styles that will most benefit employees. You&#39;ll be able to pick - or at least apply to - whatever company subscribes to your ideal lifestyle. And that might even change during your life: perhaps in your twenties you prefer to be nomadic, but in your 40s you&#39;d like to have the stable work hours of having teammates in your timezone.\n  The Office is not dead, but it will change. Even in my two years of being &#34;remote&#34;, I still went into the office at least three times a week. I&#39;d consider myself right in the median on the social spectrum, and tend to get a bit cabin feverish if I don&#39;t see people for a couple of days - having some sort of office is a requirement for me long term. It may not be the case for everyone, but the majority of people will still want a space where they can work with and around others outside of their home. WeWork is an obvious example of this trend, but you also see this with digital nomads living in group houses and planning trips together.\n Corporate offices will have to adjust to this new reality, as employees come and go whenever it suits them. Offices will become more so spaces to collaborate and socialize, between the focused remote sessions. Events and internal conferences will bring distributed teammates into one space to reset the company&#39;s &#34;half-life of trust&#34;.\n I was lucky that Google had 3 offices in Seattle, which I could pick from. I had an official desk in one building, but would really just go into whatever office I felt like each day depending on which colleagues I wanted to meet up with or cafes I wanted to visit. The ability to change environments really helps me feel recharged while working. Having the ability to hop between offices, will give employees the freedom to pick the work environment where they work the best - whether that&#39;s a WeWork cubicle, loud coffee shop or their cabin in the woods.\n  The most contentious topic brought up in these discussions has been the impact going remote will have on wages. Personally, I can&#39;t see a way that this would increase wages: a larger supply of workers can only bring down pay. The only possibility for salaries to remain unchanged would be if all the best talent is already maximally hired for, despite location restrictions, but that seems very unlikely.\n The other side of the equation is that employees no longer need to live in one of five cities to participate in 90% of the best paying jobs. Moving to cheaper cities, while being paid less, may or may not benefit you - it depends on the math for your particular case. That being said, I think the people who stand to gain the most are those with families or expensive cost of living, where the local rates dominate their spending.\n Most young engineers who moved SF or NY, to live frugally in small apartments while saving most of their salary, had a comparative advantage to others with families or other ties that prevented them from moving to the highest paid cities. In the long term, that advantage will mostly go away, since at the margin people will move out of the expensive cities, bringing down competition for talent in hotspots. I suspect the  multipliers companies use to determine wage per city will even out to the efficient frontier of wage to cost of living as employees allocate themselves to the optimal locations.\n The one exception I can think of where this shift won&#39;t lower rates is where a person has a monopoly on talent or brand. As remote makes undifferentiated roles more competitive (ie. a &#34;unit&#39; of software engineer, sales person, or marketing manager), certain talent will find a way to stand out and be unique in their market. That might mean building up a personal brand that brings value to a company beyond the raw output of your work, things like Twitter recognition, conferences, writing, or open source contributions. It could also mean developing a strong network that will help you get hired before you even have to compete with others. This has been my biggest take away from thinking about the future of remote work: those with the highest wages will be the ones who invest in differentiating themselves since they will be of limited supply (only one &#34;you&#34;) with infinite demand (every company in the world, not just those in your 100 mile radius).\n Despite being extremely optimistic about the future of remote work, I find the current narrative around it fairly narrow, overrated and repetitive. There&#39;s a lot of focus on where people will live and how wages will change, but not enough on what work will actually look like and how culture needs to adapt to it. The transition to remote by so many companies, this quickly, is going to provide a lot of material for a future generation of company builders to study. However this goes, we have an exciting decade ahead of us.", "posttime": "2020-05-25 13:14:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9065\u4e0d\u53ef\u53ca,remote", "title": "\u9065\u4e0d\u53ef\u53ca", "title_en": "Beyond Remote", "transed": 1, "url": "https://vimota.me/writing/beyond-remote", "via": "", "real_tags": ["\u9065\u4e0d\u53ef\u53ca", "remote"]}, {"category": "", "categoryclass": "", "imagename": "28a5bd80163fe23ff5fb7b7874be25ed.png", "infoid": 1003600, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "$\\BEGINGROUP$\u6211\u5728\u73a9\u5f04\u6570\u5b57\u65f6\u6ce8\u610f\u5230$\\sqrt e$\u4e0e$\\\u03c6$\u975e\u5e38\u63a5\u8fd1\uff0c\u56e0\u6b64\uff0c\u6211\u81ea\u5df1\u8bbe\u6cd5\u627e\u51fa\u4e00\u79cd\u65b9\u6cd5\u6765\u7528\u58f0\u540d\u72fc\u85c9\u7684\u503c$\\Large\\pi$\u548c$\\Large e$\u6765\u8868\u793a\u9ec4\u91d1\u6bd4\u4f8b\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u6700\u63a5\u8fd1\u7684\u662f\uff1a$$\\varphi\\Approx\\sqrt e-\\frac{\\pi}{(e+\\pi)^e(e+\\pi){(e+\\pi)^e\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u6700\u63a5\u8fd1\u7684\u662f\uff1a$$\\varphi\\Apx\\sqrt e-\\frac{\\pi}{(e+\\pi)^e\u3002\n\u6211\u7684\u95ee\u9898\u662f\uff0c\u6709\u6ca1\u6709\u66f4\u597d\u7684(\u66f4\u7cbe\u786e\u548c\u51c6\u786e\u7684)\u65b9\u5f0f\u7528$e$\u548c$\\pi$\u6765\u8868\u793a$\\\u03c6$\uff1f\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Begingroup$@lhf\uff1a\u6211\u5df2\u7ecf\u66f4\u6b63\u4e86\u3002\u6709\u8da3\u7684\u662f\uff1a\u8fd9\u6bd4\u5927\u536b\u00b7\u8303\u4f2f\u683c\u7684\u5b64\u5355\u6570\u5b57\u66f4\u63a5\u8fd1\u7f8e\u5143\u3002$\\endgroup$-1nick\u3002\n$\\BEGINGROUP$@\u4e39\uff1a\u6211\u5f04\u9519\u4e86\uff0c\u5bf9\u4e0d\u8d77\u3002\u6211\u4e0d\u5c0f\u5fc3\u628a\u6b63\u53f7\u6362\u6210\u4e86\u8d1f\u53f7\u3002\u73b0\u5728\u79bb\u8fd9\u91cc\u8fd1\u4e86\u4e00\u70b9\u3002$\\endgroup$-1nick\u3002\n\u5c3c\u514b\u6211\u5df2\u7ecf\u8bd5\u8fc7\u91cd\u65b0\u6253\u6807\u7b7e\u4e86\u3002\u53ef\u80fd\u6709\u4e00\u4e9b\u66f4\u5177\u6982\u5ff5\u6027\u7684\u4e1c\u897f\u662f\u5408\u9002\u7684\uff0c\u4f46\u8fd9\u5c31\u591f\u4e86\u3002$\\endgroup$-1\u9ca8\u9c7c\u3002\n$\\Beginggroup$\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c$\\pi/2\\Approx\\Phi$$\\endgroup$-1 Mrigank Shekhar Pathak\u3002\n$\\Beginggroup$$e$\u548c$\\pi$\u662f\u8d85\u8d8a\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u4efb\u4f55\u6709\u7406\u7cfb\u6570\u591a\u9879\u5f0f\u7684\u89e3\u3002\u4e0d\u96be\u770b\u51fa\uff0c\u5982\u679c$x$\u662f\u8d85\u8d8a\u6027\u7684\uff0c\u90a3\u4e48\u4ee5\u4e0b\u4e5f\u662f\u8d85\u8d8a\u6027\u7684\uff1a\n$\\\u03c6$\u4e0d\u662f\u8d85\u8d8a\u7684\uff1a\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u6b21\u591a\u9879\u5f0f\u7684\u89e3\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u662f\u4e0a\u8ff0\u5e94\u7528\u4e8e\u8d85\u8d8a\u6570\u7684\u4efb\u4f55\u8fd0\u7b97\u7684\u7ed3\u679c\u3002\u4ec5\u4f7f\u7528$e$\u548c$\\pi$\u4e2d\u7684\u4e00\u4e2a\u5373\u53ef\u83b7\u5f97\u4e0e$\\\u03c6$\u5b8c\u5168\u76f8\u7b49\u7684\u8868\u8fbe\u5f0f\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u6839\u672c\u4e0d\u4f7f\u7528\u5b83\u4eec\uff0c\u4f8b\u5982\uff0c\u50cf\u5176\u4ed6\u7b54\u6848\u90a3\u6837\u5b8c\u5168\u53d6\u6d88\u5b83\u4eec\u3002\n\u5982\u679c\u540c\u65f6\u4f7f\u7528$e$\u548c$\\pi$\u600e\u4e48\u529e\uff1f\u55ef\uff0c\u6709\u70b9\u8352\u8c2c\u7684\u662f\uff0c\u5b83\u751a\u81f3\u4e0d\u77e5\u9053$e+\\pi$\u662f\u5426\u662f\u975e\u7406\u6027\u7684\uff0c\u66f4\u4e0d\u7528\u8bf4\u8d85\u8d8a\u4e86\uff01\u56e0\u6b64\uff0c\u4ee5\u6211\u4eec\u76ee\u524d\u7684\u77e5\u8bc6\u6c34\u5e73\uff0c\u6211\u4eec\u4e0d\u80fd\u8bf4\u4f60\u662f\u5426\u80fd\u4ee5\u4e00\u79cd\u4e0d\u5e73\u51e1\u7684\u65b9\u5f0f\u51c6\u786e\u5730\u8d5a\u5230$\\\u03c6$\u3002\u7136\u800c\uff0c\u6211\u8ba4\u4e3a\u5982\u679c\u7ed3\u679c\u662f$e+\\pi$\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f(\u5f53\u7136\uff0c\u9664\u4e86$e^{i\\pi}$\u53ca\u5176\u5bb6\u65cf\u4e4b\u5916)\uff0c\u5927\u591a\u6570\u6570\u5b66\u5bb6\u90fd\u4f1a\u975e\u5e38\u60ca\u8bb6\uff01\u4e0d\u662f\u8d85\u7136\u7684\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6784\u5efa\u50cf$\\\u03c6$\u8fd9\u6837\u7684\u4e1c\u897f\u51e0\u4e4e\u6beb\u65e0\u7528\u5904\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u5176\u4ed6\u7b54\u6848\u90fd\u5f88\u53ef\u7231\uff0c\u4f46\u8fd9\u4f1a\u589e\u52a0\u5f88\u591a\u6df1\u5ea6\u3002\u611f\u8c22\u60a8\u7684\u8d21\u732e\uff01$\\endgroup$-1Beska\u3002\n$\\BEGINGROUP$BRAVO\uff01\u6211\u8ba4\u4e3a\u4f5c\u54c1\u7684\u57fa\u672c\u95ee\u9898\u662f\uff0c$\\\u03c6$\u662f\u5426\u4e0e$\\pi$\u548c/\u6216$e$\u7684\u57fa\u672c\u8054\u7cfb\u65b9\u5f0f\u5c31\u50cf$\\pi$\u548c$e$\u662f\u76f8\u4e92\u5173\u8054\u7684\u4e00\u6837\u3002\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0c\u57fa\u4e8e\u8fd9\u4e2a\u7b54\u6848\u4e2d\u6982\u8ff0\u7684\u539f\u56e0\uff0c\u5b83\u4e0d\u662f\u3002$\\endgroup$-\u6b27\u5143\u7c73\u5207\u5229\u3002\n$\\Begingroup$\u4f60\u4f1a\u8ba4\u4e3a$\\varphi=e^{i\\pi/5}+e^{-i\\pi/5}$&#34\uff1b\u662f\u4e00\u79cd\u4e0d\u5e73\u51e1\u7684\u65b9\u5f0f\u5417\uff1f\u6211\u731c\u60f3\u5b83\u662f$e^e^$$\u53ca\u5176\u5bb6\u65cf\u7684\u6210\u5458\u3002\uff1f$\\endgroup$-Ar A.Rex\u3002\n$\\BEGINGROUP$$+1$\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u9762\u7684\u7b11\u8bdd\u6bd4\u8fd9\u4e2a\u7b54\u6848\u66f4\u53d7\u6b22\u8fce\u3002$\\endgroup$-1\u7a46\u65af\u5854\u6cd5\u3002\n\u6211\u4e0d\u660e\u767d\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b54\u6848\u4f1a\u88ab\u8d5e\u8bb8\u5462\uff1f\u8fd9\u751a\u81f3\u4e0d\u662f\u7b54\u6848\u3002$\\endgroup$-1\u5916\u6302\n$\\BEGINGROUP$\u5f53\u6211\u770b\u5230\u8fd9\u4e2a\u7684\u65f6\u5019\uff0c\u6211\u77e5\u9053\u90a3\u4e00\u523b\uff0c\u6211\u7684\u4eba\u751f\u5386\u7a0b\u6b63\u5728\u6539\u53d8$\\BEGINGROUP$-BEGINGUP\u7528\u623785461\u3002\n$\\Beginggroup$\u6211\u4e00\u63d0\u51fa\u95ee\u9898\u5c31\u5e94\u8be5\u9884\u6599\u5230\u8fd9\u6837\u7684\u7b54\u6848\u3002$\\endgroup$-1nick\u3002\n$\\BEGINGROUP$\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u5176\u4ed6\u4e09\u4e2a\u7b54\u6848\u901a\u8fc7\u4f7f\u7528\u8bf8\u5982$e/e$\u548c$\\pi/\\pi$\u4e4b\u7c7b\u7684\u8868\u8fbe\u5f0f\u6765\u7b80\u5355\u5730\u8868\u793a\u9ec4\u91d1\u6bd4\u4f8b\uff0c\u4ee5\u83b7\u5f97\u5c0f\u6574\u6570\u3002\u7b2c\u56db\u4e2a\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u8ba8\u8bba\u4e86\u4e3a\u4ec0\u4e48\u4e0d\u592a\u53ef\u80fd\u6709\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u76f8\u4fe1\u4f7f\u7528\u865a\u6784\u5355\u4f4d$i=\\sqrt{-1}$\u4f1a\u5f97\u5230\u4ee5\u4e0b\u975e\u5e38\u6f02\u4eae\u7684\u89e3\uff1a$$\\varphi=e^{i\\pi/5}+e^{-i\\pi/5}\u3002$$\u3002\n\u7f16\u8f91\uff1aRobjohn\u6307\u51fa\uff0c\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u76f4\u63a5\u63a8\u5bfc\u9ec4\u91d1\u6bd4\u7387$\\varphi^2=\\varphi+1$\u7684\u57fa\u672c\u6052\u7b49\u5f0f\uff1a\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u5c3d\u7ba1\u5b83\u6765\u81ea$\\varphi=\\frac{1+\\sqrt{5}}{2}$\uff0c\u4f46\u5b83\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u770b\u5f85\u5b83\u5f88\u597d\u3002$\\endgroup$-1\u5361\u6885\u9686\u00b7\u5a01\u5ec9\u59c6\u65af\u3002\n\u8fd9\u4e2a\u7b54\u6848\u4e0e\u51e0\u4f55\u4e8b\u5b9e\u6709\u5173\uff0c\u5982\u679c\u4f60\u5728\u6b63\u4e94\u8fb9\u5f62\u5185\u5f62\u6210\u4e00\u9897\u661f\uff0c\u661f\u7684\u8fb9\u4e0e\u4e94\u8fb9\u5f62\u7684\u8fb9\u4e4b\u6bd4\u662f$2\\cos\\frac{\\pi}{5}=\\varphi$\u3002$\\endgroup$-1\u963f\u5947\u52d2\u00b7\u8f89\n$\\egingroup$@CameronWilliams\uff1a\u6211\u4e0d\u786e\u5b9a\u4f60\u7684\u610f\u601d\uff0c\u5f53\u7136\u8fd9\u662f\u9ec4\u91d1\u6bd4\u4f8b\u3002\u5982\u679c\u60a8\u5c06\u6211\u8868\u8fbe\u5f0f\u4e2d\u7684$5$s\u66f4\u6539\u4e3a$6$s\uff0c\u5219\u4e0d\u4f1a\u5f97\u5230$(1+\\sqrt{6})/2$\u3002(\u5b9e\u9645\u4e0a\uff0c\u60a8\u5c06\u83b7\u5f97$\\sqrt{3}$\u3002)$\\endgroup$-A\u3002Rex\u3002\n$\\BEGINGROUP$\u8fd9\u662f\u5bf9\u4e00\u4e2a\u4e0d\u662f\u7279\u522b\u597d\u7684\u95ee\u9898\u7684\u5f88\u597d\u7684\u56de\u7b54\u3002\u4f60\u65e0\u6240\u4e8b\u4e8b\u7684\u597d\u5947\u5fc3\u662f\u901a\u5f80\u4f60\u80fd\u591f\u7406\u89e3\u7684\u6df1\u523b\u800c\u7f8e\u4e3d\u7684\u6570\u5b66\u7684\u5927\u95e8--\u8fd9\u662f\u8001\u5e08\u80fd\u6559\u7ed9\u4f60\u7684\u6700\u597d\u7684\u4e1c\u897f\u3002\u53ef\u60b2\u7684\u662f\uff0c\u6709\u8da3\u7684\u7b54\u6848\u83b7\u5f97\u4e86\u4e09\u500d\u591a\u7684\u8d5e\u6210\u7968$\\endgroup$-jwg\u3002\n$\\Beginggroup$(+1)\u6211\u5728\u53d1\u5e03\u540e\u624d\u770b\u5230\u60a8\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u5220\u9664\u4e86\u6211\u7684\u7b54\u6848\u3002\u4f46\u662f\uff0c\u8bf7\u6ce8\u610f\uff0c$$\\BEGIN{ALIGN}\\color{#C00000}{\\left(e^{i\\pi/5}+e^{-i\\pi/5}\\right)}^2&amp\uff1b=e^{i2\\pi/5}+2+e^{-i2\\pi/5}\\\\&amp\uff1b=\\left(e^{i2\\pi/5}+1+e^{-i2\\pi/5}\\right)+1\\\\&amp\uff1b=-\\left(e^{i4\\pi/5}+e^{-i4\\pi/5}\\right)+1\\\\&amp\uff1b=\\color{#C00000}{\\left(e^{i\\pi/5}+e^{-i\\pi/5}\\right)}+1\\End{Align}$\\EndGroup$-BROBJOHN\u2666\u3002\n$\\BEGINGROUP$\u5982\u679c\u8ba8\u8bba\u4e0d\u9650\u4e8e\u5c01\u95ed\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u503c\u5f97\u8865\u5145\u7684\u662f\uff0cRamanujan\u7ed9Hardy\u7684\u7b2c\u4e00\u5c01\u4fe1\u5305\u542b\u4e00\u4e2a\u8eab\u4efd\uff0c\u7a0d\u4f5c\u91cd\u65b0\u6392\u5217\uff0c\u5c31\u53ef\u4ee5\u7528$\\pi$\u548c$e$\u7cbe\u786e\u5730\u8868\u8fbe$\\\u03c6$\uff1a\n\u867d\u7136$\\\u03c6$\u53ef\u4ee5\u5728\u6839\u6570\u4e2d\u627e\u5230(\u56e0\u6b64\u5728LHS\u4e0a\u4e0d\u662f\u5b64\u7acb\u7684)\uff0c\u4f46Ramanujan\u7684\u6d1e\u5bdf\u529b\u80af\u5b9a\u662f\u7f8e\u4e3d\u7684\uff0c\u5e76\u4e14\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8054\u5408\u4e86\u6570\u8bba\u7684\u4e09\u4e2a\u652f\u67f1\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u5f88\u597d\uff0c\u4f46\u6211\u8ba4\u4e3a\u64cd\u4f5c\u5458\u6b63\u5728\u641c\u7d22\u4e00\u4e2a\u6709\u9650\u8868\u8fbe\u5f0f\u3002$\\endgroup$-n\u7528\u62375402\u3002\n$\\BEGINGROUP$@\u5143\u7d27\u51d1\u6027\uff1a\u4e0d\u8981\u5984\u60f3\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u8fd9\u662f\u4e00\u4e2a\u6f02\u4eae\u7684\u7b54\u6848\u3002$\\endgroup$-1nick\n$\\Begingroup$@Nick\uff0c\u60a8\u6ca1\u6709\u6307\u5b9a\u662f\u8981\u6709\u9650\u8868\u8fbe\u5f0f\u8fd8\u662f\u65e0\u9650\u8868\u8fbe\u5f0f\uff0c\u4f46\u60a8\u7684\u4e24\u4e2a\u8fd1\u4f3c\u503c\u5efa\u8bae\u4f7f\u7528\u6709\u9650\u8868\u8fbe\u5f0f\u3002$\\endgroup$-n\u7528\u62375402\u3002\n$\\BEGINGROUP$\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u8fd1\u4f3c\u7684\u6709\u9650\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u4f60\u53ea\u9700\u622a\u65ad\u8fde\u5206\u6570\u5373\u53ef\u3002$\\endgroup$-Ar A.Rex\u3002\n$\\BEGINGROUP$\u73b0\u5728\u7528\u5927\u91cf\u81ea\u52a8\u53d6\u6d88\u7684$\\pi$/$e$\u672f\u8bed\u66ff\u6362\u5176\u4e2d\u7684\u6574\u6570\uff0c\u8fd9\u4e9b\u672f\u8bed\u6700\u7ec8\u4f1a\u7ed9\u60a8\u63d0\u4f9b\u503c1\u30015\u3001(2\u62164)\u4ee5\u4f9b\u60a8\u54c1\u5c1d(-\uff1a\n$\\phi=\\dfrac{\\pi^e}{\\pi^e+e^{\\\uff0c\\t expm{ln}\\Left(\\pi\\right)\\Times e}}+\\sqrt{\\dfrac{\\tfrac{\\pi e+\\pi e}{\\pi e}}{\\tfrac{\\pi e+\\pi e+e\\pi e^{\\\uff0ci\\pi}}{\\pi e}\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\Begingroup$\u8fd9\u4e9b\u7b11\u8bdd\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002\u7b80\u5355\u7684\u6570\u5b66\u5e76\u4e0d\u662f\u9519\u8bef\u7684\u6570\u5b66\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u539f\u6765\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u7b54\u6848\u90fd\u662f\u7b26\u5408\u6240\u6709\u89c4\u5219\u7684\u3002$\\endgroup$-1\u9a6c\u7279\u3002\n$\\Begingroup$@Matt\uff1a\u5f53\u7136\uff0c\u5b83\u4eec\u662f\u6b63\u786e\u7684\uff0c\u800c\u4e14\u975e\u5e38\u6709\u8da3\uff0c\u4f46\u5373\u4f7f\u662f\u90a3\u4e9b\u6570\u5b66\u4e0d\u592a\u597d\u7684\u4eba\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u7b80\u5316\u4e3a$(1+\\sqrt 5)/2$\u3002\u6700\u597d\u7684\u7b54\u6848\u5e94\u8be5\u662f\u65e2\u6b63\u786e\u53c8\u4e0d\u90a3\u4e48\u76f4\u89c2\u5730\u4e3a\u666e\u901a\u4eba\u6240\u7406\u89e3\u7684\u7b54\u6848\u3002$\\endgroup$-1nick\u3002\n$\\BEGINGROUP$@\u5c3c\u514b\uff0c\u5982\u679c\u6709\u4e9b\u4e1c\u897f\u662f\u666e\u901a\u4eba\u4e0d\u80fd\u7406\u89e3\u7684\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u597d\u5462\uff1f\u6570\u5b66\u662f\u5173\u4e8e\u521b\u9020\u53ea\u6709\u6570\u5b66\u5bb6\u624d\u80fd\u7406\u89e3\u7684\u79d8\u5bc6\u5417\uff1f\u4e0d\u662f\u7684\u3002\u5b83\u662f\u5173\u4e8e\u4e3a\u6211\u4eec\u611f\u5174\u8da3\u7684\u95ee\u9898\u63d0\u4f9b\u7cbe\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u89e3\u51b3\u65b9\u6848\u8d8a\u7b80\u5355\u8d8a\u597d\u3002\u5982\u679c\u89e3\u51b3\u65b9\u6848\u770b\u8d77\u6765\u50cf\u4e2a\u7b11\u8bdd\uff0c\u90a3\u4e48\u4f60\u7684\u95ee\u9898\u63aa\u8f9e\u4e0d\u51c6\u786e\u3002$\\endgroup$-1 Turion\n$\\Begingroup$\u6b64\u5173\u7cfb\u662f\u4f7f\u7528FindIntegerNullVector[N@{Pi\uff0cE\uff0c(1+sqrt[5])/2}]\u4e0eMATHEMICATA\u4e00\u8d77\u627e\u5230\u7684(\u9057\u61be\u7684\u662f\uff0cWolfram Alpha\u4e0d\u7406\u89e3\u8fd9\u4e00\u70b9)\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$(\u5b83\u8868\u793a&#34\uff1b\u67e5\u627e$e$\uff0c\u800c\u4e0d\u4f7f\u7528\u5bf9\u6570\u3001\u6307\u6570\u6216e\u672c\u8eab&#34\uff1b--$\\pi$\u548c$\\phi$\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u5728\u5176\u4e2d)\u3002\n(\u8bf4\u660e&#34\uff1b\u4ec5\u4f7f\u7528$\\pi$\u3001$\\phi$\u548c\u8fd0\u7b97\u7b26$+-\\cdot/\\sqrt[n]{\\}\\\\text{^}\\sin\\cos\\tan$&#34\uff1b\u67e5\u627e$e$.\u3002\u57fa\u672c\u4e0a\uff0c\u4e5f\u7981\u6b62\u53f7\u7801)\u63d0\u4f9b\u4e86\u3002\n\u8fd8\u6709\u66f4\u591a\u3002(\u5982\u679c\u6211\u66f4\u5c0f\u5fc3\uff0c\u6211\u4f1a\u8ba9\u5b83\u9996\u5148\u89e3\u51b3$\\\u03c6$\u2026)\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n\u5728\u6211\u7684\u673a\u5668\u4e0a\uff0c$e-\\sqrt[3]\\pi$\u5927\u7ea6\u662f1.254\uff0c\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8fd1\u4f3c\u503c\u3002$\\endgroup$-1\u5766\u7eb3\u00b7\u65af\u5a01\u7279\u3002\n$\\Begingroup$@TannerSwett\uff1a\u6709\u53ef\u80fd\u6211\u5728\u952e\u5165\u65f6\u8f6c\u6362\u9519\u8bef\u3002\u6b63\u5982\u60a8\u4ece\u547d\u4ee4\u4e2d\u770b\u5230\u7684\uff0c\u6211\u5b9e\u9645\u4e0a\u8981\u6c42RIES\u67e5\u627e$e$\uff0c\u800c\u4e0d\u662f$\\varphi$\uff0c\u56e0\u6b64\u6211\u5728\u53d1\u5e03\u4e4b\u524d\u8fdb\u884c\u4e86\u8f6c\u6362\u3002$\\endgroup$-1\u67e5\u5c14\u65af\n$\\BEGINGROUP$\u4e0d\u9519\u7684\u5c1d\u8bd5\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u662f\u6211\u6700\u521d\u505a\u7684\u8fd1\u4f3c\u503c\u4e4b\u4e00\u3002$\\endgroup$-1nick\u3002\n$\\Begingroup$J.DePompeo(2004)\u7f16\u5199\u4e86\u7b49\u6548\u7684$$\\frac{5\\phi e}{7\\pi}\\\u7ea61$$(mathworld.wolfram.com/AlmostInteger.html\u4e2d\u7684\u516c\u5f0f34)$\\endgroup$--Jaume Oliver Lafont\u3002\n$\\BegingGroup$\u5982\u679c\u60a8\u5b9a\u4e49\u5e8f\u5217$a_1=a_2=-e^{i\\pi}$\uff0c$a_k=a_{k-1}+a_{k-2}$\uff0c\u5219$\\lim_{n\\right tarrow\\infty}\\frac{a_{n+1}}{a_n}=\\\u03c6$\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u5982\u679c\u60a8\u613f\u610f\uff0c\u751a\u81f3\u53ef\u4ee5\u8ba9$a_1=e$\u548c$a_2=\\pi$\u3002\u53ea\u8981\u521d\u59cb\u503c\u662f\u6b63\u6570\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u6709\u592a\u5927\u5f71\u54cd\u3002$\\endgroup$-Ar A.Rex\u3002\n$\\BEGINGROUP$.\u5f52\u7ed3\u4e3a\u6590\u6ce2\u90a3\u5951\u5e8f\u5217\uff0c\u5bf9\u4e8e\u4efb\u4f55\u5bf9\u5176\u5de5\u4f5c\u539f\u7406\u611f\u5174\u8da3\u7684\u4eba\u6765\u8bf4\uff01$\\BEGINGROUP$-MARK K Cowan\u3002\n$\\Beginggroup$\u4f3c\u4e4e\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u4ece\u7406\u8bba\u89d2\u5ea6\u6765\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u90fd\u662f\u4ece\u7cbe\u786e\u7b54\u6848\u7684\u89d2\u5ea6\u6765\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bf4\u5f88\u591a\u5173\u4e8e\u4ec0\u4e48\u65f6\u5019\u53ef\u80fd\u4f1a\u6709\u597d\u7684\u8fd1\u4f3c\u7684\u95ee\u9898\u3002\u5f53\u7136\uff0c\u6709\u4e9b\u7b54\u6848\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e9b\u611a\u8822\u7684\u65b9\u6cd5\u6765\u51c6\u786e\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u8fd1\u4f3c\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u5fc5\u8981\uff0c\u4f46\u5b83\u4e3a\u4e00\u4e9b\u57fa\u672c\u7684\u8d85\u8d8a\u6570\u8bba\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u9014\u5f84\u3002\n\u8fd9\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u76f8\u4fe1\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u5373$frac e\\pi$\u662f\u975e\u7406\u6027\u7684\u3002\u8ba9\u6211\u4eec\u6682\u65f6\u5047\u8bbe\u8fd9\u662f\u771f\u7684\u3002\u90a3\u4e48\u5b83\u662f\u4e00\u4e2a\u8457\u540d\u5b9a\u7406\u7684\u5e73\u51e1\u63a8\u8bba\uff0c\u5373\u5982\u679c$\\\u03b1$\u662f\u65e0\u7406\u6570\uff0c\u800c$\\\u03b2$\u662f\u4efb\u610f\u5b9e\u6570\uff0c\u5219\u5b58\u5728$p+q\\\u03b1\\\u8fd1\u4f3c\\\u03b2$\u4e0e$p\uff0cq$\u6574\u6570\u7684\u4efb\u610f\u826f\u597d\u903c\u8fd1\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d6$\\alpha=\\frac e\\pi$\u548c$\\beta=\\frac\\\u03c6\\pi$\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6574\u6570$p\uff0cq$\uff0c\u4f7f\u5f97$pe+q\\pi$\u8fd1\u4f3c\u4e8e\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u516c\u5dee\u3002\n\u4e00\u4e2a\u8fd9\u6837\u7684\u8fd1\u4f3c\u53ef\u80fd\u662f$357pi-412e=1.61646\u2026\u3002\\\u5927\u7ea61.61803.\u3002=\\\u03c6$\uff0c\u7cbe\u786e\u5230\u5343\u5206\u4e4b\u4e00\u3002\u4e00\u4e2a\u4eba\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\uff0c\u4f46\u8fd9\u81f3\u5c11\u8bc1\u660e\u4e86\u8fd9\u4e00\u539f\u5219\u3002\u5982\u679c357\u548c412\u7ed9\u4f60\u5e26\u6765\u9ebb\u70e6\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u6211\u5199\u7684\u548c\u5728\u5de6\u8fb9\u6709729\u9879\uff0c\u5176\u4e2d357\u9879\u662f$\\pi$\uff0c412\u9879\u662f$-e$\u3002\n\u90a3\u4e48\uff0c\u5982\u679c\u4e0e\u6240\u6709\u8d4c\u6ce8\u76f8\u53cd\uff0c$\\frac e\\pi$\u662f\u7406\u6027\u7684\u5462\uff1f\u90a3\u4e48\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u3002\u5bf9\u4e8e\u5f62\u5f0f\u4e3a$pe+q\\pi$\u7684$\\\u03c6$\u53ea\u6709\u4e00\u4e2a\u6700\u4f73\u8fd1\u4f3c\uff0c\u8fd9\u4e0d\u662f\u7cbe\u786e\u7684\uff0c\u5e76\u4e14\u6709\u65e0\u9650\u591a\u4e2a$p$\u548c$q$\u53ef\u4ea7\u751f\u76f8\u540c\u7684\u8fd1\u4f3c\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f62\u5f0f\u4e3a$pe+q\\pi$\u7684\u6bcf\u4e2a\u6570\u5b57\u90fd\u662f$e$\u7684\u6709\u7406\u500d\u6570\uff0c\u5206\u6bcd\u9664\u4ee5$d$\uff0c\u5373\u5199\u6210\u6700\u4f4e\u9879\u7684\u6574\u6570\u5206\u6570\u65f6\u7684$\\frac e\\pi$\u7684\u5206\u6bcd\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u53ef\u80fd\u662f\u7cbe\u786e\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u8981\u4e48\u90fd\u662f0\uff0c\u8981\u4e48\u662f\u8d85\u8d8a\u7684\uff0c\u800c$\\\u03c6$\u662f\u4ee3\u6570\u7684\uff0c\u800c\u4e14\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u6570\u5b57\u7684\u96c6\u5408\u90fd\u662f\u79bb\u6563\u7684(\u53ea\u6709$\\frac{e}{d}\\mathbb Z$\uff0c\u5176\u4e2d$d$\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5206\u6bcd)\uff0c\u6240\u4ee5$\\\u03c6$\u4e0d\u5728\u5b83\u7684\u95ed\u5305\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$\\frac e\\pi$\u7684\u65e0\u7406\u6027\u7b49\u4ef7\u4e8e\u5bf9\u4e8e\u6574\u6570$p$\u548c$q$\uff0c\u5b58\u5728\u5f62\u5f0f\u4e3a$pe+q\\pi$\u7684$\\\u03c6$\u7684\u4efb\u610f\u597d\u8fd1\u4f3c\u3002\u5f53\u7136\uff0c\u76ee\u524d$d$\u7684\u4e0b\u9650\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053$e$\u548c$\\pi$\u7684\u5927\u91cf\u6570\u5b57\uff0c\u800cHAVAIN\u8fd8\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u8fd9\u6837\u7684\u503c\u4e3a$\\frac e\\pi$\u7684\u6709\u7406\u6570\u5b57\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u5b9e\u9645\u76ee\u7684\u90fd\u4f1a\u6709\u975e\u5e38\u597d\u7684\u8fd1\u4f3c\uff0c\u4f46\u6700\u7ec8\u5fc5\u987b\u6709\u4e00\u4e2a\u6700\u597d\u7684\u8fd1\u4f3c\uff0c\u5c31\u50cf$\\\u03c6$(\u53732)\u6709\u4e00\u4e2a\u6700\u4f73\u6574\u6570\u8fd1\u4f3c\u4e00\u6837\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5373\u4f7f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u57fa\u4e8e$e$\u548c$\\pi$\u6784\u9020\u5bf9$\\\u03c6$\u7684\u4efb\u610f\u597d\u7684\u8fd1\u4f3c\uff1b\u53ea\u662f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e\u67d0\u4e9b$n$\uff0c$\\sqrt[n]\\frac{e}{\\pi}$\u662f\u65e0\u7406\u7684(\u5bf9\u4e8e\u96640\u548c1\u4e4b\u5916\u7684\u4efb\u4f55\u5b9e\u6570\u90fd\u662f\u5982\u6b64\uff0c\u800c$\\frac e\\pi$\u663e\u7136\u90fd\u4e0d\u662f)\u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u4ee5\u524d\u4e00\u6837\u73a9\u540c\u6837\u7684\u6e38\u620f\uff0c\u4ee5\u5f97\u5230\u5f62\u5f0f\u4e3a$p\\sqrt[n]e+q\\sqrt[n]\\pi$\u5230$\\\u03c6$\u7684\u4efb\u610f\u597d\u7684\u8fd1\u4f3c\uff0c\u5176\u4e2d\u5305\u542b$p$\u548c$q$\u6574\u6570\u3002\u5982\u679c\u8fd9\u4e2a$n$\u7684\u51fa\u73b0\u8ba9\u60a8\u611f\u5230\u56f0\u6270\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5c06$n$\u8bbe\u4e3a2\u7684\u5e42\uff0c\u8fd9\u6837$\\sqrt[n]{}$\u5c31\u53ef\u4ee5\u5199\u6210$\\sqrt{}$\u7684\u91cd\u590d\u7ec4\u5408\uff0c\u5373$\\sqrt[8]{x}=\\sqrt{\\sqrt{x}$\uff0c\u5373$\\sqrt[8]{x}=\\sqrt{\\sqrt{{x}$\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u4e0a\u8ff0\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e0d\u77e5\u9053(\u636e\u6211\u6240\u77e5)\u7ed9\u51fa\u7684\u8868\u683c\u662f\u5426\u80fd\u51c6\u786e\u5730\u4ee3\u8868$\\\u03c6$\uff0c\u5c3d\u7ba1\u6240\u6709\u7684\u8d4c\u6ce8\u90fd\u662f\u5426\u5b9a\u7684\u3002\u5f53\u7136\uff0c\u5728\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u786e\u5b9e\u8868\u793a$\\\u03c6$\uff0c\u56e0\u4e3a\u8fd9\u5c06\u8bc1\u660e$e$\u548c$\\pi$\u5728\u4ee3\u6570\u4e0a\u4e0d\u662f\u72ec\u7acb\u7684(\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u672a\u89e3\u51b3\u7684\u95ee\u9898)\u3002\u539f\u5219\u4e0a\uff0c\u53ef\u80fd\u4f1a\u6709\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5b83\u80af\u5b9a\u77e5\u9053\u8868\u5355\u5e76\u4e0d\u5b8c\u5168\u4ee3\u8868$\\phi$\uff0c\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u5173\u4e8e\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4efb\u4f55\u5df2\u77e5\u7684\u60c5\u51b5\uff0c\u6211\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u4ece\u8fd9\u4e2a$\\phi=2\\cos(\\frac{\\pi}{5})$\u548c\u6b27\u62c9\u516c\u5f0f$e^{ix}=\\cos(X)+i\\sin(X)$\u53ef\u4ee5\u5f97\u51fa\u8fd9\u4e2a\u516c\u5f0f$\\phi=2e^{i\\frac{\\pi}{5}}-2i\\sin(\\frac{\\pi}{5})$\u3002[\u68c0\u67e5]\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff01\u8bf7\u67e5\u770b\u6211\u7684\u7b54\u6848\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u5176\u8f6c\u6362\u4e3a\u7279\u522b\u5e72\u51c0\u7684\u8868\u8fbe\u5f0f\u3002$\\endgroup$-Ar A.Rex\n$\\Begingroup$\u4f7f\u7528Euler\u7684\u5355\u4f4d$e^{i\\pi}+1=0$\u76845\u4e2a\u5e38\u6570\uff0c\u53ef\u4ee5\u5c06$\\varphi$\u5305\u62ec\u5230\u516c\u5f0f\u4e2d\uff0c\u4ee5\u7ed9\u51fa\u5305\u542b\u5982\u4e0b6\u4e2a\u5e38\u6570\u7684\u5355\u4f4d\uff1a$$e^{\\frac{i\\pi}{1+\\varphi}}+e^{-\\frac{i\\pi}{1+\\varphi}}+e^{\\frac{i\\pi}}+e^{\\frac{i\\pi}}\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n\u7531Gelfond\u5e38\u6570\u7684\u7b2c\u516d\u4e2a\u6839\u7ed9\u51fa\u7cbe\u5ea6\u7c7b\u4f3c\u4e8e$\\pi\\Approx3$(\u8bef\u5dee5%)\u7684\u8fd1\u4f3c\u503c\u3002\n$\\\u7ed3\u675f\u7ec4$\u3002\n$\\BEGINGROUP$\u8fd9\u7c7b\u4f3c\u4e8e\u6211\u6700\u521d\u7684\u505a\u6cd5\uff0c\u94fe\u63a5\u4e2d\u7684\u90a3\u4e9b\u5de7\u5408\u5f88\u4e0d\u9519\u3002\u662f\u4ec0\u4e48\u8ba9163\u53d8\u5f97\u7279\u522b\uff1f$\\endgroup$-1nick\u3002\n$\\egingroup$it&#39\uff1b\u662f\u6700\u5927\u7684Heegner\u6570\uff0c$\\exp(\\pi\\sqrt{163})$\u975e\u5e38\u63a5\u8fd1\u6574\u6570\u3002\u8fd9\u6709\u66f4\u591a\u7684\u5de7\u5408\u3002$\\endgroup$--TheSimpliFire\u3002\n$\\Beginggroup$\\pi^2=50\\sum_{k=0}^\\infty{1\\\u9ad8\u4e8e1.5pt\\\u03c6^{5k}}\\Bigg({\\phi^{-2}\\\u9ad8\u4e8e1.5pt(5k+1)^2}-{\\phi^{-1}\\\u9ad8\u4e8e1.5pt(5k+2)^2}-{\\phi^{-2}\\\u9ad8\u4e8e1.5pt(5k+3)^2}+{\\phi\u3002\n\uff1b\u5b83\u662f\u4ee5$2\u7684\u5e73\u65b9\u6839\u5728\u4f17\u6240\u5468\u77e5\u7684\u65e0\u7a77\u7ea7\u6570\u4e0a\u64ad\u653e\u7684\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u53ea\u9700\u8003\u8651\u5199\u4e3a$2\\cos(\\frac{\\pi}{k})$\u7684\u6570\u5b57\uff0c\u5e76\u53d6$k=5.$\n$\\\u7ed3\u675f\u7ec4$\u3002\n\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u7b54\u6848\u5417\uff1f\u6d4f\u89c8\u6807\u8bb0\u7684\u5176\u4ed6\u95ee\u9898\u6216\u63d0\u51fa\u60a8\u81ea\u5df1\u7684\u95ee\u9898\u3002", "note_en": "$\\begingroup$  I was playing around with numbers when I noticed that $\\sqrt e$ was  very somewhat close to $\\phi$  And so, I took it upon myself to try to find a way to express the golden ratio in terms of the infamous values, $\\large\\pi$ and $\\large e$ The closest that I&#39;ve come so far is:$$\\varphi \\approx \\sqrt e - \\frac{\\pi}{(e+\\pi)^e - \\sqrt e}$$\n My question is,  Is there a better   (more precise and accurate) way of expressing $\\phi$ in terms of $e$ and $\\pi$ ?\n      $\\endgroup$\n  $\\begingroup$  @lhf: I&#39;ve corrected it. Funfact: It&#39;s more closer to $\\phi$ than David Feinberg&#39;s lonely number.  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  @Dan: My mistake, sorry. I accidentally swapped a plus for a minus. It&#39;s a bit closer now.  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  @Nick I&#39;ve had a go at retagging. There might be some more conceptual things appropriate, but this will do for now.  $\\endgroup$\r\u2013\u00a0 Sharkos\n  $\\begingroup$  It is notable that $ \\pi /2 \\approx \\phi $  $\\endgroup$\r\u2013\u00a0 Mrigank Shekhar Pathak\n  $\\begingroup$  $e$ and $\\pi$ are  transcendental numbers, that is to say they are not the solution of any polynomial with rational coefficients. It&#39;s not hard to see that if $x$ is transcendental, then the following are also transcendental:\n  $\\phi$ is not transcendental: it is the solution to a simple quadratic polynomial, so it won&#39;t be the result of any operations like the above applied to a transcendental number. The only way you&#39;re going to get an expression  exactly equal to $\\phi$ using  only one of $e$ and $\\pi$ and the above operations is by not really using them at all, e.g. cancelling them out completely, as other answers do.\n What if you use  both $e$  and $\\pi$? Well, somewhat absurdly, it&#39;s not even known if $e + \\pi$ is irrational, let alone transcendental! So with our current level of knowledge we can&#39;t say whether you can make $\\phi$ exactly in a nontrivial way. However, I think most mathematicians would be  extremely surprised if it turned out that $e + \\pi$ or anything like it (apart from $e^{i\\pi}$ and its family, of course!) were not transcendental, and hence mostly useless for constructing something like $\\phi$.\n    $\\endgroup$\n  $\\begingroup$  The other answers are cute, but this adds a lot more depth. Thanks for the contribution!  $\\endgroup$\r\u2013\u00a0 Beska\n  $\\begingroup$  Bravo! I think the OP&#39;s underlying question is whether $\\phi$ is fundamentally connected to $\\pi$ and/or $e$ much in the same way as $\\pi$ and $e$ are interconnected. The answer is - of course - &#34;no, it&#39;s not&#34;, for the reasons outlined by this answer.  $\\endgroup$\r\u2013\u00a0 Euro Micelli\n  $\\begingroup$  Would you consider $\\varphi = e^{i\\pi/5}+e^{-i\\pi/5}$ &#34;a nontrivial way&#34;? I suppose it&#39;s a member of &#34;$e^{i\\pi}$ and its family&#34;..  $\\endgroup$\r\u2013\u00a0 A. Rex\n  $\\begingroup$  $+1$. I don&#39;t know why the above  joke is upvoted more than this answer.  $\\endgroup$\r\u2013\u00a0 Mostafa\n  $\\begingroup$  And I don&#39;t get, why is this answer upvoted at all. It is&#39;t even the answer.  $\\endgroup$\r\u2013\u00a0 gukoff\n      $\\begingroup$  when I saw this, I knew that moment, the course of my life is changing  $\\endgroup$\r\u2013\u00a0 user85461\n      $\\begingroup$  I should have expected an answer like this the moment I posed my question.  $\\endgroup$\r\u2013\u00a0 Nick\n    $\\begingroup$  At the time of writing, three of the other answers simply express the golden ratio by using expressions like $e/e$ and $\\pi/\\pi$ to get small integers. The fourth and final one discusses why a good solution is unlikely.\n I believe using the imaginary unit $i=\\sqrt{-1}$ results in the following very elegant solution:$$ \\varphi = e^{i\\pi/5} + e^{-i\\pi/5}. $$\n Edit:  robjohn notes that one can directly derive the fundamental identity for the golden ratio $\\varphi^2 = \\varphi + 1$ from this expression:\n    $\\endgroup$\n  $\\begingroup$  Even though it comes from the fact that $\\varphi = \\frac{1+\\sqrt{5}}{2}$, it&#39;s neat seeing it in this way.  $\\endgroup$\r\u2013\u00a0 Cameron Williams\n  $\\begingroup$  This answer is related to the geometric fact if you form a star inside a regular pentagon, the ratio of the side of the star to that of the pentagon is $2\\cos\\frac{\\pi}{5} = \\varphi$.  $\\endgroup$\r\u2013\u00a0 achille hui\n  $\\begingroup$  @CameronWilliams: I&#39;m not sure what you mean, though of course that is the golden ratio. If you change the $5$s in my expression to $6$s, say, you don&#39;t get $(1+\\sqrt{6})/2$. (In fact, you get $\\sqrt{3}$.)  $\\endgroup$\r\u2013\u00a0 A. Rex\n  $\\begingroup$  This is a great answer to a not particularly great question. &#39;Your idle curiosity is the gateway to deep and beautiful mathematics which you are capable of understanding&#39; - the best thing a teacher can tell you. Sad that the &#39;funny&#39; answer has more than three times as many upvotes  $\\endgroup$\r\u2013\u00a0 jwg\n  $\\begingroup$  (+1) I didn&#39;t see your answer until after I posted, so I deleted mine. However, note that $$ \\begin{align} \\color{#C00000}{\\left(e^{i\\pi/5}+e^{-i\\pi/5}\\right)}^2 &amp;=e^{i2\\pi/5}+2+e^{-i2\\pi/5}\\\\ &amp;=\\left(e^{i2\\pi/5}+1+e^{-i2\\pi/5}\\right)+1\\\\ &amp;=-\\left(e^{i4\\pi/5}+e^{-i4\\pi/5}\\right)+1\\\\ &amp;=\\color{#C00000}{\\left(e^{i\\pi/5}+e^{-i\\pi/5}\\right)}+1 \\end{align} $$  $\\endgroup$\r\u2013\u00a0 robjohn \u2666\n      $\\begingroup$  If the discussion is not limited to closed-form expressions, it&#39;s worth adding that Ramanujan&#39;s first letter to Hardy contains an identity that, with a slight rearrangement, allows one to precisely express $\\phi$ in terms of $\\pi$ and $e$:\n  Although $\\phi$ can be found in the radicand (and is thus not isolated on the LHS), Ramanujan&#39;s insight is certainly beautiful and is noteworthy for uniting three of the pillars of number theory.\n    $\\endgroup$\n  $\\begingroup$  Good one but I think the OP was searching for a finite expression.  $\\endgroup$\r\u2013\u00a0 user5402\n    $\\begingroup$  @metacompactness: Don&#39;t go presuming such things. This is a beautiful answer.  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  @Nick you didn&#39;t specify if you wanted a finite expression or an infinite one but your two approximations suggest a finite expression.  $\\endgroup$\r\u2013\u00a0 user5402\n  $\\begingroup$  If you want an approximate finite expression, then you can just cut off the continued fraction.  $\\endgroup$\r\u2013\u00a0 A. Rex\n    $\\begingroup$  Now replace the integers there with a load of self-cancelling $\\pi$/$e$ terms which ultimately give you the values 1, 5, (2 or 4) to taste (-:\n   $\\phi = \\dfrac{\\pi^e}{\\pi^e + e^{\\,\\textrm{ln}\\left(\\pi\\right)\\times e}}+\\sqrt{\\dfrac{\\tfrac{\\pi e + \\pi e + \\pi e + \\pi e + \\pi e}{\\pi e}}{\\tfrac{\\pi e + \\pi e + \\pi e + \\pi e + \\pi e + e \\pi e^{\\,i\\pi}}{\\pi e}}}$\n    $\\endgroup$\n  $\\begingroup$  These &#34;joke&#34; solutions are perfectly correct. Easy math isn&#39;t wrong math. If you look at the original question, these answers are following all the rules.  $\\endgroup$\r\u2013\u00a0 Matt\n  $\\begingroup$  @Matt: Sure, they are correct and are very much amusing but they can be simplified down to $(1+\\sqrt 5)/2$ by even those who aren&#39;t that good in math. The best answer should be one that is both correct and isn&#39;t so intuitively understandable to the common man.  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  @Nick, why should it be good if something is not understandable by the common man? Is maths about creating secrets that only mathematicians understand at the end? No. It&#39;s about giving precise solutions to problems that we find interesting. The simpler the solution, the better. If the solution looks like a joke, then you phrased the question unprecise.  $\\endgroup$\r\u2013\u00a0 Turion\n    $\\begingroup$  This relation was found using  FindIntegerNullVector[N@{Pi,E,(1+Sqrt[5])/2}] with Mathematica (sadly, Wolfram Alpha does not understand this).\n    $\\endgroup$\n    $\\begingroup$  (which says &#34;find $e$ without using logarithms, exponentials, or e itself&#34; -- $\\pi$ and $\\phi$ are already in by default)\n    (which says &#34;find $e$ using only $\\pi$, $\\phi$, and the operators $+-\\cdot/\\sqrt[n]{\\ \\ \\ }\\ \\text{^}\\sin\\cos\\tan$&#34;... basically, banning numbers too) gives\n  and many more. (If I was more careful I would have had it solve for $\\phi$ in the first place...)\n    $\\endgroup$\n  $\\begingroup$  On my machine, $e - \\sqrt[3]\\pi$ is about 1.254, which doesn&#39;t seem like a very good approximation.  $\\endgroup$\r\u2013\u00a0 Tanner Swett\n  $\\begingroup$  @TannerSwett: It&#39;s possible I did the conversion wrong as I typed it up. As you can see from the commands I actually asked RIES to find $e$ not $\\varphi$ and so I converted before posting.  $\\endgroup$\r\u2013\u00a0 Charles\n    $\\begingroup$  Good attempt. Surprisingly, this was one of the approximations I did initially.  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  J. DePompeo (2004) wrote the equivalent $$\\frac{5\\phi e}{7\\pi}\\approx 1$$ (formula 34 in  mathworld.wolfram.com/AlmostInteger.html)  $\\endgroup$\r\u2013\u00a0 Jaume Oliver Lafont\n        $\\begingroup$  If you define the sequence $a_1 = a_2 = -e^{i\\pi}$, $a_k = a_{k-1} + a_{k-2}$, then $\\lim_{n \\rightarrow \\infty} \\frac {a_{n+1}}{a_n} = \\phi$.\n    $\\endgroup$\n  $\\begingroup$  You can even let $a_1 = e$ and $a_2 = \\pi$ if you&#39;d like. The initial values don&#39;t much matter as long as they&#39;re positive.  $\\endgroup$\r\u2013\u00a0 A. Rex\n  $\\begingroup$  ...which boils down to the Fibonacci sequence, for anyone who is curious as to how it works!  $\\endgroup$\r\u2013\u00a0 Mark K Cowan\n    $\\begingroup$  It seems all the answers so far approaching this from a theoretical perspective are approaching this in terms of exact answers, but we can say a lot about when good approximations are possible too. Of course, some answers have already provided silly ways to do this exactly, so approximations may seem unnecessary, but it provides a nice avenue for some basic transcendental number theory.\n It is an unsolved problem, which virtually everyone believes to be true, that $\\frac e \\pi$ is irrational. Let&#39;s assume for the moment that this is true. Then it&#39;s a trivial corollary of a  well-known theorem that if $\\alpha$ is an irrational number, and $\\beta$ is any real number, there exist arbitrarily good approximations $p + q \\alpha \\approx \\beta$ with $p,q$ integers. That means, taking $\\alpha = \\frac e \\pi$ and $\\beta = \\frac \\phi \\pi$, we can find integers $p,q$ such that $p e + q \\pi$ approximates $\\phi$ to any tolerance you desire.\n One such approximation could be $357 \\pi - 412 e = 1.61646... \\approx 1.61803... = \\phi$, which is accurate to one part in 1000. One can do better, but this at least demonstrates the principle. If the 357 and 412 bother you, you may imagine that I&#39;ve written a sum with 729 terms on the left hand side instead, 357 of which are $\\pi$ and 412 of which are $-e$.\n So what if, against all bets, $\\frac e \\pi$ is rational? Then the opposite is true. There is a single best approximation to $\\phi$ of the form $p e + q \\pi$, which is not exact, and there are infinitely many choices of $p$ and $q$ which yield the same approximation. This is because, in that case every number of the form $p e + q \\pi$ is a rational multiple of $e$ with denominator dividing $d$ the denominator of $\\frac e \\pi$ when written as an integer fraction in lowest terms. Of course, none of these can be exact, since they&#39;re all either 0 or transcendental, while $\\phi$ is algebraic, and since the set of all such numbers is discrete (being just $\\frac{e}{d}\\mathbb Z$ where $d$ is the denominator mentioned above), $\\phi$ is not in its closure. That is to say, the irrationality of $\\frac e \\pi$ is equivalent to the existence of arbitrarily good approximations to $\\phi$ of the form $p e + q \\pi$ for integers $p$ and $q$. Of course, the current lower bounds on $d$ are likely to be extremely large since we know plenty of digits of both $e$ and $\\pi$ and haven&#39;t yet found any such rational number with value $\\frac e \\pi$, so there are going to be very good approximations for all practical purposes, but eventually there has to be a single best one, in exactly the same way that there&#39;s a single best integer approximation to $\\phi$ (namely 2).\n Luckily, even in this case we can still construct arbitrarily good approximations to $\\phi$ based on $e$ and $\\pi$; just not in the same way. Of course, for some $n$, it must be true that $\\sqrt[n] \\frac{e}{\\pi}$ is irrational (this is true for any real number other than 0 and 1, and $\\frac e \\pi$ is clearly neither). We can play exactly the same game as we did before to get arbitrarily good approximations of the form $p \\sqrt[n] e + q \\sqrt[n] \\pi$ to $\\phi$ with $p$ and $q$ integers. If the appearance of this $n$ bothers you, we can even take $n$ to be a power of 2 so that $\\sqrt[n] {}$ can be written as a repeated composition of $\\sqrt {}$, i.e. $\\sqrt[8]{x}=\\sqrt {\\sqrt {\\sqrt{x}}}$.\n Note that in all cases above, it&#39;s (as far as I know) unknown whether the forms given can exactly represent $\\phi$, though all bets are to the negative. Certainly there are no known cases in which it does represent $\\phi$ exactly, since that would give a proof that $e$ and $\\pi$ are not algebraically independent (a  major unsolved problem). In principle, there could be cases where it&#39;s definitely known that the form does not represent $\\phi$ exactly, but really there&#39;s just about nothing about problems like this so it would surprise me if there are any cases known.\n    $\\endgroup$\n    $\\begingroup$  form this $\\phi = 2\\cos(\\frac{\\pi }{5})$ and euler formula $e^{ix} = \\cos(x) + i\\sin(x)$ you can conclude this one $\\phi= 2e^{i\\frac{\\pi}{5}}-2i\\sin(\\frac{\\pi}{5})$.  [check]\n    $\\endgroup$\n  $\\begingroup$  This is a good approach! Check out my answer for how to turn this into an especially clean expression.  $\\endgroup$\r\u2013\u00a0 A. Rex\n    $\\begingroup$  Using the 5 constants of Euler&#39;s identity $ e^{i\\pi} + 1 = 0 $ it is possible to include $ \\varphi $ into an equation to give an identity containing six constants as follows: $$ e^{\\frac{i\\pi}{1+\\varphi}} + e^{-\\frac{i\\pi}{1+\\varphi}} + e^{\\frac{i\\pi}{\\varphi}} + e^{-\\frac{i\\pi}{\\varphi}} = 0 $$  See article and  OEIS Sequence A193537\n    $\\endgroup$\n    $\\begingroup$  An approximation with an accuracy similar to that of $\\pi\\approx3$ (error&lt;5%) is given by the sixth root of Gelfond&#39;s constant,\n    $\\endgroup$\n    $\\begingroup$  This is similar to my initial aproach and those coincidences in the link are nice. What makes 163 special?  $\\endgroup$\r\u2013\u00a0 Nick\n  $\\begingroup$  It&#39;s the largest Heegner number, and $\\exp(\\pi\\sqrt{163})$ is very close to an integer.  This has more &#39;coincidences&#39;.  $\\endgroup$\r\u2013\u00a0 TheSimpliFire\n    $\\begingroup$  $$\\pi^2=50\\sum_{k=0}^\\infty{1 \\above 1.5pt \\phi^{5k}}\\Bigg({\\phi^{-2}\\above 1.5pt (5k+1)^2 } -{\\phi^{-1}\\above 1.5pt (5k+2)^2 }- {\\phi^{-2}\\above 1.5pt (5k+3)^2 }+ {\\phi^{-5}\\above 1.5pt (5k+4)^2 } +{2\\phi^{-5}\\above 1.5pt (5k+5)^2 } \\Bigg)$$\n    ; which is play on a well known infinite series for the square root of  $2.$ In particular just consider numbers written as  $2\\cos(\\frac{\\pi}{k})$ and take  $k=5.$\n    $\\endgroup$\n        Not the answer you&#39;re looking for? Browse other questions tagged           or  ask your own question.", "posttime": "2020-05-25 13:12:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ec4\u91d1,ratio,pi", "title": "\u9ec4\u91d1\u6bd4\u4f8b\u80fd\u51c6\u786e\u5730\u7528e\u548c\u03c0\u8868\u793a\u5417\uff1f", "title_en": "Can the golden ratio accurately be expressed in terms of e and \u03c0?", "transed": 1, "url": "https://math.stackexchange.com/questions/454333/can-the-golden-ratio-accurately-be-expressed-in-terms-of-e-and-pi", "via": "", "real_tags": ["\u9ec4\u91d1", "ratio", "pi"]}, {"category": "", "categoryclass": "", "imagename": "3d665e85ee0193693e2559ed82bdbc0a.jpg", "infoid": 1003598, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u5148\u53d1\u73b0\u51a0\u72b6\u75c5\u6bd2\u5728\u7f8e\u56fd\u793e\u533a\u4f20\u64ad\u7684\u897f\u96c5\u56fe\u7814\u7a76\u5c0f\u7ec4\u5df2\u88ab\u8981\u6c42\u505c\u6b62\u5bf9\u8be5\u75be\u75c5\u7684\u68c0\u6d4b\u3002\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40(FDA)\u963b\u6b62\u626b\u63cf\u9879\u76ee\u5206\u6790\u4ece\u4eba\u4eec\u5bb6\u4e2d\u9001\u6765\u7684\u9f3b\u62ed\u5b50\u5e76\u62a5\u544a\u7ed3\u679c\u7684\u51b3\u5b9a\u53ef\u80fd\u662f\u6682\u65f6\u7684\u3002\u4f46\u5b83\u524a\u5f31\u4e86\u5730\u65b9\u548c\u56fd\u5bb6\u7684\u516c\u5171\u536b\u751f\u5021\u8bae\u3002\n\u534e\u76db\u987f\u5dde\u897f\u96c5\u56fe\u548c\u91d1\u53bf\u516c\u5171\u536b\u751f\u90e8\u95e8\u7684\u536b\u751f\u5b98\u5458\u6770\u592b\u00b7\u675c\u94a6(Jeff Duchin)\u8bf4\uff1a\u201c\u626b\u63cf\u63d0\u4f9b\u4e86\u6709\u4ef7\u503c\u7684\u6570\u636e\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u5168\u9762\u5730\u4e86\u89e3\u75ab\u60c5\u7684\u6d41\u884c\u75c5\u5b66\u3002\u201d\u8be5\u9879\u76ee\u5728\u8fc7\u53bb10\u5468\u5185\u5904\u7406\u4e862\u4e07\u4e2a\u6d4b\u8bd5\uff0c\u5e76\u5e2e\u52a9\u63ed\u793a\u4e86\u897f\u96c5\u56fe\u54ea\u4e9b\u793e\u533a\u53d7\u5230\u51a0\u72b6\u75c5\u6bd2\u7684\u6253\u51fb\u6700\u4e25\u91cd\u3002\u675c\u94a6\u8868\u793a\uff0c\u8be5\u5e02\u5df2\u7ecf\u5f00\u59cb\u5c06\u8be5\u9879\u76ee\u6574\u5408\u5230\u63a5\u89e6\u8005\u8ffd\u8e2a\u4e2d\uff0c\u8fd9\u6837\u63a5\u89e6\u8fc7\u75c5\u6bd2\u7684\u4eba\u5c31\u53ef\u4ee5\u77e5\u9053\u81ea\u5df1\u662f\u5426\u88ab\u611f\u67d3\u4e86\uff0c\u5e76\u53ef\u80fd\u5c06\u75c5\u6bd2\u4f20\u67d3\u7ed9\u5176\u4ed6\u4eba\u3002\n\u8be5\u9879\u76ee\u5f97\u5230\u4e86\u6148\u5584\u5bb6\u6bd4\u5c14\u00b7\u76d6\u8328(Bill Gates)\u7684\u652f\u6301\uff0c\u5df2\u7ecf\u8d70\u8fc7\u4e86\u76d1\u7ba1\u7684\u4e1b\u6797\uff0c\u5e76\u83b7\u5f97\u4e86\u5dde\u5f53\u5c40\u7684\u5173\u952e\u6279\u51c6\u3002FDA\u8981\u6c42\u57285\u670812\u65e5\u6682\u505c\u68c0\u6d4b\uff0c\u8fd9\u8ba9\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u611f\u5230\u6cae\u4e27\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5f00\u53d1\u7684\u8bca\u65ad\u65b9\u6cd5\u53ef\u4ee5\u90e8\u5206\u6216\u5168\u90e8\u5728\u533b\u9662\u5916\u8fdb\u884c\u3002\u626b\u63cf\u5c0f\u7ec4\u662f\u7b2c\u4e00\u4e2a\u5728\u7f8e\u56fd\u63a8\u51fa\u8fd9\u79cd\u6d4b\u8bd5\u7684\u5c0f\u7ec4\uff0c\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u4e0e\u5f53\u5730\u536b\u751f\u5f53\u5c40\u5408\u4f5c\uff0c\u6218\u7565\u6027\u5730\u90e8\u7f72\u8bca\u65ad\u65b9\u6cd5\u3002\u968f\u7740\u672c\u6708\u548c\u4e0b\u6708\u7f8e\u56fd\u7684\u4f01\u4e1a\u5f00\u59cb\u91cd\u65b0\u5f00\u4e1a\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9700\u8981\u626b\u63cf\u63d0\u4f9b\u7684\u90a3\u79cd\u6d4b\u8bd5\u3002\n\u201c\u897f\u96c5\u56fe\u96c6\u56e2\u5b9e\u9645\u4e0a\u662f\u552f\u4e00\u4e00\u5bb6\u771f\u6b63\u5f04\u6e05\u695a\u8fd9\u4e9b\u540e\u52e4\u95ee\u9898\u7684\u96c6\u56e2\uff0c\u5e76\u8bd5\u56fe\u6269\u5927\u89c4\u6a21\uff0c\u73b0\u5728\u4f60\u5374\u8981\u5173\u95ed\u4ed6\u4eec\uff1f\u201d\u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u57c3\u9ed8\u91cc\u7ef4\u5c14\u7684\u751f\u7269\u6280\u672f\u521d\u521b\u516c\u53f8Ocant\u7684\u8054\u5408\u521b\u59cb\u4eba\u65af\u91cc\u00b7\u79d1\u82cf\u91cc(SRI Kosuri)\u95ee\u9053\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u8bca\u65ad\u51a0\u72b6\u75c5\u6bd2\u7684\u5de5\u5177\u3002\u201c\u8fd9\u8ba9\u6211\u5927\u5403\u4e00\u60ca\uff0c\u201d\u4ed6\u8bf4\u3002\nSCAN-\u897f\u96c5\u56fe\u51a0\u72b6\u75c5\u6bd2\u8bc4\u4f30\u7f51\u7edc\u7684\u7f29\u5199-\u8d77\u6e90\u4e8e\u897f\u96c5\u56fe\u6d41\u611f\u7814\u7a76\uff0c\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u5168\u5e02\u5404\u5730\u7684\u4eba\u7528\u68c9\u7b7e\u64e6\u62ed\u81ea\u5df1\u7684\u9f3b\u5b50\uff0c\u5e76\u5c06\u6837\u672c\u9001\u5230\u534e\u76db\u987f\u5927\u5b66\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\uff0c\u5728\u90a3\u91cc\uff0c\u7814\u7a76\u4eba\u5458\u5206\u6790\u4e86\u5b83\u4eec\u662f\u5426\u5b58\u5728\u6d41\u611f\u75c5\u6bd2\u3002\u4e3a\u4e86\u4e86\u89e3\u6d41\u611f\u662f\u5982\u4f55\u4f20\u64ad\u7684\uff0c\u5e76\u6709\u5e0c\u671b\u963b\u6b62\u5b83\uff0c\u7814\u7a76\u4eba\u5458\u9700\u8981\u5728\u533b\u9662\u5916\u5bf9\u4eba\u4eec\u8fdb\u884c\u6d4b\u8bd5\u3002\u540c\u6837\u7684\u60f3\u6cd5\u4e5f\u9002\u7528\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\u968f\u7740\u51a0\u72b6\u75c5\u6bd2\u57282\u6708\u4efd\u5728\u4e16\u754c\u5404\u5730\u4f20\u64ad\uff0c\u7814\u7a76\u5c0f\u7ec4\u91cd\u65b0\u8c03\u6574\u4e86\u68c0\u6d4b\u65b9\u6cd5\uff0c\u4ee5\u8bc6\u522b\u8fd9\u79cd\u65b0\u75c5\u6bd2\u3002\n\u7f8e\u56fd\u5fae\u751f\u7269\u5b66\u4f1a\u4e3b\u5e2d\u7f57\u5bbe\u00b7\u5e15\u7279\u5c14(Robin Patel)\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u7f57\u5207\u65af\u7279\u5e02\u7684\u6885\u5965\u8bca\u6240(Mayo Clinic)\u5de5\u4f5c\uff0c\u4ed6\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u547c\u5401\u5c06\u8bca\u65ad\u6d4b\u8bd5\u90e8\u7f72\u5728\u533b\u7597\u4fdd\u5065\u73af\u5883\u4e4b\u5916\u3002\u201c\u73b0\u5728\u51a0\u72b6\u75c5\u6bd2\u6b63\u5728\u52a0\u901f\u8fd9\u4e00\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u7684\u539f\u56e0\u5728\u75ab\u60c5\u4e2d\u662f\u5982\u6b64\u660e\u663e\u3002\u201d\u9700\u8981\u536b\u751f\u5de5\u4f5c\u8005\u62bd\u53d6\u6837\u672c\u7684\u6a21\u578b\u4e0d\u5bb9\u6613\u653e\u5927\u3002\u8fd9\u662f\u52b3\u52a8\u5bc6\u96c6\u578b\u7684\uff0c\u800c\u4e14\u5bf9\u4e8e\u88ab\u8981\u6c42\u7528\u957f\u68c9\u7b7e\u7c98\u5728\u4eba\u4eec\u9f3b\u5b50\u91cc\u7684\u5de5\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u6709\u98ce\u9669\u7684\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u8fdb\u5165\u8bca\u6240\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u611f\u67d3\u6216\u4f20\u64ad\u611f\u67d3\u3002\n2\u6708\u4e0b\u65ec\uff0cSCAN\u56e2\u961f\u4e0e\u7f8e\u56fd\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3(US Centers For Disease Control And Prevention)\u6e05\u9664\u4e86\u7b2c\u4e00\u7ec4\u76d1\u7ba1\u969c\u788d\u3002\u63a5\u4e0b\u6765\uff0c\u8be5\u5c0f\u7ec4\u5728\u4e34\u5e8a\u5b9e\u9a8c\u5ba4\u7528\u81ea\u5df1\u7684\u6d4b\u8bd5\u548c\u5176\u4ed6\u5206\u6790\u65b9\u6cd5\u5206\u6790\u4e86\u5927\u7ea630\u4e2a\u6837\u672c\uff0c\u4ee5\u68c0\u67e5\u5176\u51c6\u786e\u6027\u3002\u6839\u636e\u8fd9\u4e9b\u5b9e\u9a8c\u7684\u6570\u636e\uff0c\u534e\u76db\u987f\u536b\u751f\u90e8\u6388\u6743\u7814\u7a76\u4eba\u5458\u5bf9\u4eba\u4eec\u8fdb\u884c\u7b5b\u67e5\uff0c\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u4ed6\u4eec\u3002\u897f\u96c5\u56fe\u536b\u751f\u5c40\u5728\u5176\u5b98\u65b9\u535a\u5ba2\u4e0a\u8ba8\u8bba\u626b\u63cf\u3002\u5b83\u8bf4\uff0c\u8fd9\u4e00\u52aa\u529b\u6709\u52a9\u4e8e\u8868\u660e\u793e\u4ea4\u8ddd\u79bb\u662f\u5426\u6709\u6548\uff0c\u5e76\u51cf\u7f13\u4e86\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\uff0c\u56e0\u4e3a\u66f4\u591a\u7684\u4eba\u77e5\u9053\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u5e76\u53ef\u4ee5\u5728\u5fc5\u8981\u65f6\u8fdb\u884c\u9694\u79bb\u3002\u675c\u94a6\u8bf4\uff1a\u201c\u6211\u6ca1\u6709\u7406\u7531\u8d28\u7591\u6d4b\u8bd5\u7684\u51c6\u786e\u6027\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u4ed6\u4eec\u662f\u6e05\u767d\u7684\uff0c\u56e0\u4e3aFDA\u5df2\u7ecf\u6388\u4e88\u534e\u76db\u987f\u5dde\u6388\u6743\u7d27\u6025\u4f7f\u7528\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u7684\u80fd\u529b\u3002\u4eca\u5e742\u6708\uff0cFDA\u7684\u6307\u5bfc\u65b9\u9488\u6392\u9664\u4e86\u8fd9\u79cd\u7c7b\u578b\u7684\u5728\u5bb6\u68c0\u6d4b\uff0c\u4f46\u6ca1\u6709\u63d0\u5230\u5728\u5bb6\u6536\u96c6\u6837\u672c\uff0c\u8fd9\u5c31\u662f\u626b\u63cf\u7684\u8fd0\u4f5c\u65b9\u5f0f\u3002\u7136\u800c\uff0c\u4ece5\u670811\u65e5\u8d77\uff0cFDA\u66f4\u65b0\u7684\u6307\u5357\u786e\u5b9e\u660e\u786e\u89c4\u5b9a\uff0c\u5bb6\u5ead\u6536\u96c6\u7684\u6d4b\u8bd5\u9700\u8981\u7531\u8be5\u673a\u6784\u8fdb\u884c\u8bc4\u4f30\u3002\n5\u670812\u65e5\uff0c\u6bd4\u5c14\u00b7\u76d6\u8328\u5728\u4ed6\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u79f0\u8be5\u9879\u76ee\u6bcf\u5929\u6d4b\u8bd5300\u4eba\uff0c\u5e76\u8ba1\u5212\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002\u5f53\u5929\u665a\u4e9b\u65f6\u5019\uff0cFDA\u8981\u6c42SCAN\u505c\u6b62\u6d4b\u8bd5\uff0c\u76f4\u5230\u5b83\u83b7\u5f97\u673a\u6784\u6388\u6743\u3002\nFDA\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u89e3\u91ca\u8bf4\uff0c\u4efb\u4f55\u9700\u8981\u4e00\u4e2a\u4eba\u81ea\u5df1\u5728\u5bb6\u91cc\u91c7\u96c6\u6837\u672c\u7684\u4e8b\u60c5\u90fd\u4f1a\u5f15\u8d77\u4eba\u4eec\u7684\u62c5\u5fe7\u3002\u4f8b\u5982\uff0c\u8be5\u673a\u6784\u5e0c\u671b\u786e\u4fdd\u6837\u672c\u5728\u9001\u5f80\u5b9e\u9a8c\u5ba4\u7684\u9014\u4e2d\u5728\u708e\u70ed\u7684\u8f66\u8f86\u4e0a\u5446\u4e0a\u5f88\u957f\u65f6\u95f4\u540e\u4fdd\u6301\u7a33\u5b9a\u3002\u81ea4\u670821\u65e5\u4ee5\u6765\uff0cFDA\u5df2\u7ecf\u6279\u51c6\u4e86\u4e09\u9879\u57fa\u4e8e\u5bb6\u5ead\u7684\u6d4b\u8bd5\uff0c\u8fd9\u4e09\u9879\u6d4b\u8bd5\u7531LabCorp\u548cEverlywell\u516c\u53f8\u4ee5\u53ca\u65b0\u6cfd\u897f\u5dde\u7684\u7f57\u683c\u65af\u5927\u5b66\u5f00\u53d1\u3002\nFDA\u5df2\u7ecf\u8981\u6c42\u626b\u63cf\u5c0f\u7ec4\u7684\u7b2c\u4e00\u627917000\u4e2a\u6837\u672c\u63d0\u4f9b\u6570\u636e\uff0c\u4ee5\u53ca\u6709\u5173\u8be5\u8ba1\u5212\u53ca\u5176\u5b9e\u9a8c\u7ed3\u679c\u7684\u4fe1\u606f\u3002\u8be5\u5c0f\u7ec4\u4e89\u5148\u6050\u540e\u5730\u63d0\u4f9b\u4e86\u8fd9\u4e00\u70b9\uff1a\u4f8b\u5982\uff0c\u4ed6\u4eec\u62a5\u544a\u8bf4\uff0c\u572828\u6444\u6c0f\u5ea6\u4e0b\u5b75\u80b29\u5929\u540e\uff0c\u4ecd\u80fd\u5728\u5176\u62ed\u5b50\u4e2d\u68c0\u6d4b\u5230\u51a0\u72b6\u75c5\u6bd2\u7684RNA-\u8fd9\u8868\u660e\u6837\u672c\u53ef\u4ee5\u5750\u5728\u5361\u8f66\u91cc\u5b58\u6d3b\u4e0b\u6765\u3002\u4e00\u4f4d\u53d1\u8a00\u4eba\u8bf4\uff0c\u5728\u7814\u7a76\u4eba\u5458\u7b49\u5f85FDA\u5ba1\u67e5\u4ed6\u4eec\u7684\u6570\u636e\u7684\u540c\u65f6\uff0c\u7814\u7a76\u5c0f\u7ec4\u6b63\u5728\u8003\u8651\u66ff\u4ee3\u65b9\u6848\uff0c\u6bd4\u5982\u5728\u4e00\u9879\u7814\u7a76\u7684\u4e3b\u6301\u4e0b\u91cd\u65b0\u542f\u52a8\u8be5\u8ba1\u5212\u3002\n\u7814\u7a76\u4eba\u5458\u503e\u5411\u4e8e\u540c\u610f\u8d28\u91cf\u63a7\u5236\u662f\u5fc5\u8981\u7684\uff0c\u4ed6\u4eec\u7406\u89e3FDA\u6b63\u5728\u52aa\u529b\u8d76\u4e0a\u6765\u81ea\u6570\u5341\u4e2a\u6d4b\u8bd5\u5f00\u53d1\u4eba\u5458\u7684\u5927\u91cf\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u8fc7\uff0c\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(University of California\uff0cBerkeley)\u521b\u65b0\u57fa\u56e0\u7ec4\u7814\u7a76\u6240\u7684\u751f\u7269\u5de5\u7a0b\u5e08\u8d39\u5965\u591a\u00b7\u4e4c\u5c14\u8bfa\u592b(Fyodor Urnov)\u8868\u793a\uff0c\u5728\u533b\u9662\u5916\u8fdb\u884c\u6d4b\u8bd5\u7684\u9700\u6c42\u5982\u6b64\u8feb\u5207\uff0c\u4ee5\u81f3\u4e8e\u5fc5\u987b\u505a\u51fa\u4e00\u4e9b\u6539\u53d8\u3002\n\u4ed6\u8bf4\uff0c\u65e0\u5bb6\u53ef\u5f52\u8005\u6536\u5bb9\u6240\u3001\u7597\u517b\u9662\u548c\u5176\u4ed6\u5171\u4eab\u751f\u6d3b\u8bbe\u65bd\u5e94\u8be5\u5b9a\u671f\u5bf9\u5c45\u6c11\u8fdb\u884c\u7b5b\u67e5\uff0c\u800c\u4e0d\u8003\u8651\u4ed6\u4eec\u7684\u75c7\u72b6\uff0c\u4ee5\u5728\u75ab\u60c5\u7206\u53d1\u4e4b\u524d\u963b\u6b62\u4ed6\u4eec\u3002\u9910\u9986\u548c\u5176\u4ed6\u4f01\u4e1a\u53ef\u80fd\u5e0c\u671b\u5728\u5458\u5de5\u91cd\u65b0\u5f00\u4e1a\u65f6\u5bf9\u5176\u8fdb\u884c\u7b5b\u67e5\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6570\u5341\u4e07\u611f\u67d3\u8005\u7684\u63a5\u89e6\u8005\u5c06\u63a5\u53d7\u68c0\u6d4b\u3002\n\u4e4c\u5c14\u8bfa\u592b\u8bf4\uff1a\u201c\u9664\u4e86\u81ea\u6211\u7ba1\u7406\u6d4b\u8bd5\u4e4b\u5916\uff0c\u6211\u770b\u4e0d\u5230\u4efb\u4f55\u524d\u8fdb\u7684\u9053\u8def\u3002\u201d\u5c3d\u7ba1FDA\u5df2\u7ecf\u8c03\u6574\u4e86\u653f\u7b56\uff0c\u4ee5\u4fc3\u8fdb\u5bb6\u5ead\u6d4b\u8bd5\uff0c\u4f46\u4e4c\u5c14\u8bfa\u592b\u62c5\u5fc3\u8fd9\u4e00\u8fc7\u7a0b\u4ecd\u7136\u592a\u6162\u3002\u4ed6\u5efa\u8bae\uff0c\u4e00\u79cd\u9009\u62e9\u662fFDA\u4e0e\u516c\u5171\u536b\u751f\u90e8\u95e8\u548c\u79d1\u5b66\u5bb6\u66f4\u7d27\u5bc6\u5730\u5408\u4f5c\uff0c\u5171\u4eab\u6570\u636e\uff0c\u627e\u51fa\u4ed6\u4eec\u9700\u8981\u4ec0\u4e48\u6765\u63a7\u5236\u51a0\u72b6\u75c5\u6bd2\u3002\n\u5c0f\u4ed3\u91cc\u5bf9\u6b64\u8868\u793a\u540c\u610f\u3002\u4ed6\u8ba4\u4e3a\uff0c\u5f53\u6d89\u53ca\u5230\u5bf9\u4e0d\u9700\u8981\u4e34\u5e8a\u62a4\u7406\u7684\u4eba\u8fdb\u884c\u5e38\u89c4\u6d4b\u8bd5\u65f6\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4e0d\u786e\u5b9a\u6027\u5e94\u8be5\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u4e0e\u4e45\u8d1f\u76db\u540d\u7684\u6d4b\u8bd5\u76f8\u6bd4\uff0c\u7f8e\u56fd\u5404\u5730\u8bb8\u591a\u7814\u7a76\u5c0f\u7ec4\u6b63\u5728\u5f00\u53d1\u7684\u6d4b\u8bd5\u6240\u62e5\u6709\u7684\u6570\u636e\u5c06\u66f4\u5c11\u3002\u4e0d\u53ef\u907f\u514d\u7684\u662f\uff0c\u5176\u4e2d\u4e00\u4e9b\u5c06\u88ab\u8bc1\u660e\u4e0d\u50cf\u9884\u671f\u7684\u90a3\u6837\u53ef\u9760\uff0c\u4f46Kosuri\u8bf4\u8fd9\u6ca1\u95ee\u9898\u3002\u201c\u76f8\u5173\u7684\u95ee\u9898\u4e0d\u662f\u2018\u6d4b\u8bd5\u662f\u5426\u548c\u533b\u9662\u91cc\u7531\u8bad\u7ec3\u6709\u7d20\u7684\u6267\u4e1a\u62a4\u58eb\u8fdb\u884c\u7684\u6d4b\u8bd5\u4e00\u6837\u597d\uff1f\u2019\u201d\u5c0f\u4ed3\u91cc\u8bf4\u3002\u201c\u95ee\u9898\u662f\uff0c\u8fd9\u662f\u5426\u603b\u6bd4\u4e0d\u63a5\u53d7\u6d4b\u8bd5\u8981\u597d\u3002\u201d", "note_en": "The Seattle research team that first uncovered COVID-19 spreading in US communities has been asked to stop testing for the disease. The decision by the US Food and Drug Administration (FDA) to prevent the SCAN project from analysing nose swabs sent from people\u2019s homes\u2014and reporting the results\u2014 is likely to be temporary. But it deflates local and national public-health initiatives.\n \u201cSCAN provided valuable data to help us more completely understand the epidemiology of the outbreak,\u201d says Jeff Duchin, a health officer at the public-health department for Seattle and King County in Washington state. The programme processed 20,000 tests during the past 10 weeks and helped to reveal which communities in Seattle were being hit hardest by COVID-19. Duchin says the city has begun to integrate the programme into its contact tracing, so that people who have been exposed to the virus can find out whether they\u2019ve been infected and might pass it on to others.\n  The project, which is backed by philanthropist Bill Gates, has already navigated a regulatory thicket and won key approvals from state authorities. The FDA\u2019s request to pause testing on 12 May frustrates many researchers developing diagnostics that can be conducted partially or fully outside hospitals. The SCAN group was the first to roll out such tests in the United States and \u2014 as importantly \u2014 to partner with local health authorities to deploy the diagnostics strategically. As businesses begin to reopen in the United States this month and next, many people argue that the kind of testing that SCAN provided is needed more than ever.\n \u201cThe Seattle group was literally the only group that has really figured out these logistics, and was trying to scale this, and now you want to shut them down?\u201d asks Sri Kosuri, co-founder of Octant, a biotech start-up in Emeryville, California, that is developing tools to diagnose COVID-19. \u201cIt blows my mind,\u201d he says.\n  SCAN \u2014 which stands for the Seattle Coronavirus Assessment Network \u2014 has its roots in the Seattle Flu Study, in which people around the city swabbed their own noses and sent the samples to a lab at the University of Washington, where researchers analysed them for the presence of influenza viruses. To understand how the flu spreads and hopefully stop it, researchers needed to test people outside hospitals. The same idea holds for the coronavirus. And as COVID-19 was spreading around the world in February, the team retooled its assay to identify the new virus.\n  Robin Patel, president of the American Society for Microbiology, who is based at the Mayo Clinic in Rochester, Minnesota , says that researchers have long called for diagnostic tests to be deployed outside of healthcare settings. \u201cThis push is being accelerated now by COVID-19, because the reasons to do this are so apparent in an outbreak.\u201d A model that requires health workers to draw samples can\u2019t easily be scaled up. It\u2019s labour intensive, and is risky for the workers required to stick long swabs up people\u2019s noses. Moreover, by coming into clinics, people could either pick up an infection or spread one.\n In late February,  the SCAN team cleared a first set of regulatory hurdles with the US Centers for Disease Control and Prevention. Next, the group analysed about 30 specimens with its own test alongside other assays in clinical labs, to vet its accuracy. With the data from these experiments, Washington\u2019s department of health authorized the researchers to screen people and return the results to them. Seattle\u2019s health department discusses SCAN on its  official blog. It says the effort helps to show whether social distancing is working, and it slows the spread of the coronavirus because more people know their status and can isolate if necessary. Duchin says: \u201cI have no reason to question the accuracy of the test.\u201d\n  The researchers assumed that they were in the clear because the FDA had granted Washington state the ability to authorize emergency use of COVID-19 tests. In February, FDA guidelines precluded at-home testing from this type of provision, but made no mention of at-home specimen collection, which is how SCAN operates. As of 11 May, however, updated  FDA guidelines do specify that tests with at-home collection need to be assessed by the agency.\n On 12 May,  Bill Gates posted a blog entry on his personal website, saying that the project was testing 300 people per day, with plans to do more. Later that day, the FDA asked SCAN to stop testing until it receives agency authorization.\n An FDA spokesperson explains that anything that requires a person to take samples themselves, at home, raises concerns. For example, the agency wants to ensure that samples remain stable if they end up spending a long time in a hot vehicle on the way to a lab. Since 21 April, the FDA has green-lit three home-based tests, developed by the companies LabCorp and Everlywell and by Rutgers University in New Jersey.\n  The FDA has requested data from the SCAN team\u2019s first 17,000 samples, as well as information about the programme and its experimental results. The group has scrambled to provide this: for example, it reports that RNA from the coronavirus can still be detected in its swabs after incubating for 9 days at 28 \u00b0C \u2014 suggesting that samples can survive sitting in a truck. While the researchers wait for the FDA to review their data, a spokesperson says, the team is considering alternatives such as restarting the programme under the auspices of a study.\n  Researchers tend to agree that quality control is required, and they understand that the FDA is struggling to catch up with a flood of applications from dozens of test developers. Still, Fyodor Urnov, a bioengineer at the Innovative Genomics Institute at the University of California, Berkeley, says the need for testing outside hospitals is so urgent that something has to bend.\n Homeless shelters, nursing homes and other shared living facilities should screen residents regularly regardless of their symptoms, to stop outbreaks before they explode, he says. Restaurants and other businesses might want to screen their employees when they reopen and, ideally, hundreds of thousands of contacts of infected people would be tested.\n  \u201cI see no way forward except self-administration of tests,\u201d Urnov says. Although the FDA has adjusted its policies to facilitate at-home testing, Urnov worries the process remains too slow. One option, he suggests, is for the FDA to work more closely with public-health departments and scientists, to share data and find out what they need to control the coronavirus.\n Kosuri agrees. He argues that a degree of uncertainty should be acceptable when it comes to routine testing of people who aren\u2019t in need of clinical care. Tests that many research groups are developing across the United States will have less data to back them than well-established tests. Inevitably, some of these will turn out to be less reliable than expected, but Kosuri says that\u2019s okay. \u201cThe relevant question is not, \u2018Is the test as good as one conducted in a hospital by a trained nurse practitioner?\u2019\u201d Kosuri says. \u201cThe question is whether it is better than not being tested at all.\u201d", "posttime": "2020-05-25 12:40:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u79d1\u5b66\u5bb6,baffled", "title": "\u79d1\u5b66\u5bb6\u4eec\u5bf9\u505c\u6b62\u4e00\u9879\u5f00\u521b\u6027\u7684\u51a0\u72b6\u75c5\u6bd2\u6d4b\u8bd5\u9879\u76ee\u7684\u51b3\u5b9a\u611f\u5230\u56f0\u60d1", "title_en": "Scientists baffled by decision to stop a pioneering coronavirus testing project", "transed": 1, "url": "https://www.nature.com/articles/d41586-020-01543-x", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u79d1\u5b66\u5bb6", "baffled"]}, {"category": "", "categoryclass": "", "imagename": "55d94a84d164f0e08adc1a68acf808c7.png", "infoid": 1003596, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2009\u5e74\u6bd4\u7279\u5e01\u7684\u5f15\u5165\u5c06\u66f4\u591a\u7684\u7814\u7a76\u6ce8\u610f\u529b\u8f6c\u5411\u4e86\u5e7f\u4e49\u533a\u5757\u94fe\uff0c\u9690\u79c1\u95ee\u9898\u53cd\u8fc7\u6765\u53c8\u5bfc\u81f4\u4e86\u5bfb\u627e\u4f7f\u533a\u5757\u94fe\u66f4\u52a0\u79c1\u5bc6\u5316\u7684\u65b9\u6cd5\uff0c\u4f46\u76f4\u5230\u96f6\u6bd4\u7279\u5e01\u7684\u5f15\u5165\u624d\u5bfc\u81f4\u4e86ZCash\u7684\u51fa\u73b0\uff0c\u8bc1\u660e\u4e86\u5b9e\u7528\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u5df2\u7ecf\u5b58\u5728\uff0c\u5e76\u5bfc\u81f4\u4e86\u5bc6\u7801\u5b66\u7279\u522b\u662f\u5bc6\u7801\u539f\u8bed\u7684\u5bd2\u6b66\u7eaa\u7206\u70b8\uff0c\u8fd9\u81ea\u7136\u5bfc\u81f4\u4e86\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u53bb\u4e2d\u5fc3\u5316\u7cfb\u7edf\u3002\n\u5173\u6ce8\u7684\u4e2d\u5fc3\u662f\u7531Goldwasser\uff0cMicali\u548cRackoff\u57281985\u5e74\u5f15\u5165\u7684\u96f6\u77e5\u8bc6\u8bc1\u636e\u3002\u4e00\u5219\u6709\u8da3\u7684\u8f76\u4e8b\u662f\uff0c\u4ed6\u4eec\u6700\u521d\u7684\u8bba\u6587\u65e9\u57281982\u5e74\u5c31\u53d1\u8868\u4e86\uff0c\u4f46\u57281985\u5e74\u7684\u8ba1\u7b97\u7406\u8bba\u7814\u8ba8\u4f1a\u4e4b\u524d\uff0c\u4e00\u76f4\u88ab\u5404\u79cd\u4f1a\u8bae\u62d2\u7edd\u3002\n\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u201c\u6708\u7403\u6570\u5b66\u201d\u7684\u8fd9\u4e9b\u7ed3\u6784\u4ee4\u4eba\u7740\u8ff7\u548c\u6709\u7528\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u539f\u56e0\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f\u96f6\u77e5\u8bc6\uff0c\u53ef\u4ee5\u7ffb\u8bd1\u6210\u79c1\u4eba\u7684\uff0c\u8bc1\u660e\u662f\u5173\u4e8e\u4e00\u4e2a\u6027\u8d28\u6216\u5b9a\u7406\u771f\u5b9e\u6027\u7684\u9648\u8ff0\u3002\n\u4ece\u6208\u5fb7\u96f7\u5947\u7684\u201c\u96f6\u77e5\u8bc6\u201d\u53d1\u660e20\u5e74\u540e\uff1a*\u201c\u96f6\u77e5\u8bc6\u8bc1\u660e\u201d\u8fd9\u4e00\u672f\u8bed\u53ef\u4ee5\u88ab\u89c6\u4e3a\u76f8\u4e92\u77db\u76fe\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8bc1\u660e\u5177\u6709\u5f88\u5f3a\u7684\u8bf4\u670d\u529b\uff0c\u4f46\u9664\u4e86\u88ab\u8bc1\u660e\u7684\u9648\u8ff0\u7684\u6709\u6548\u6027\u5916\uff0c\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u4fe1\u606f\u3002*\u3002\n\u8981\u5f00\u59cb\u7406\u89e3\u8fd9\u4e9b\uff0c\u6211\u4eec\u9700\u8981\u7406\u89e3\u51e0\u4e2a\u6e90\u4e8e\u590d\u6742\u6027\u7406\u8bba\u7684\u5173\u952e\u6982\u5ff5\u3002\u7b2c\u4e00\u4e2a\u6982\u5ff5\u662f\u8ba1\u7b97\u548c\u8bed\u8a00\uff0c\u8ba1\u7b97\u673a\u7528\u6765\u505a\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4ec0\u4e48\u6837\u7684\u9648\u8ff0\uff0c\u7b2c\u4e8c\u4e2a\u6982\u5ff5\u662f\u5f52\u7ea6\u548c\u5173\u6ce8\u4ece\u4e00\u4e2a\u95ee\u9898\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u95ee\u9898\u7684\u60f3\u6cd5\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3b\u8981\u8ba8\u8bba\u9700\u8981\u9075\u5faa\u7684\u9884\u5907\u548c\u57fa\u7840\u77e5\u8bc6\uff0c\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u987e\u6700\u65b0\u7684\u8bc1\u660e\u7cfb\u7edf\uff0c\u5e76\u8ba8\u8bba\u5b9e\u73b0\u7ec6\u8282\u3002\n\u8ba1\u7b97\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u8ba1\u7b97\uff0c\u5305\u62ec\u9075\u5faa\u9884\u5b9a\u4e49\u6a21\u578b(\u7b97\u6cd5)\u7684\u7b97\u672f\u548c\u975e\u7b97\u672f\u6b65\u9aa4\u3002\u8ba1\u7b97\u673a\u4e4b\u6240\u4ee5\u8fd9\u6837\u547d\u540d\uff0c\u662f\u56e0\u4e3a\u5728\u6700\u4f4e\u7ea7\u522b\uff0c\u5b83\u4eec\u6240\u505a\u7684\u53ea\u662f\u7b97\u672f\u8fd0\u7b97\u548c\u66f4\u7b80\u5355\u7684\u975e\u7b97\u672f\u8fd0\u7b97\u3002\n\u56fe\u7075\u673a\u662f\u8ba1\u7b97\u673a\u7684\u7406\u60f3\u5316\u62bd\u8c61\uff0c\u7531\u4e00\u4e2a\u5355\u5143\u9635\u5217\u7ec4\u6210\uff0c\u79f0\u4e3a\u5305\u542b\u4f4d\u7684\u78c1\u5e26\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u78c1\u5e26\uff0c\u7528\u4e8e\u8f93\u5165\u3001\u4e34\u65f6\u53d8\u91cf\u548c\u8f93\u51fa.\n\u56fe\u7075\u673a\u8bfb\u53d6\u4f4d\u5e8f\u5217\uff0c\u89e3\u91ca\u5b83\u4eec\uff0c\u5982\u679c\u901a\u8fc7\u57fa\u672c\u6307\u4ee4\uff0c\u5219\u6267\u884c\u57fa\u672c\u6307\u4ee4\u3002\n\u8003\u8651\u5c06\u4e24\u4e2a\u6570\u5b57\u76f8\u52a0\u7684\u6700\u7b80\u5355\u793a\u4f8b\uff0c\u8f93\u5165\u78c1\u5e26\u5c06\u5305\u542b\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5199\u6210\u7684a\u548cb\uff0c\u4f8b\u59820110||1101\uff0c\u5176\u4e2d\u201c||\u201d\u8868\u793a\u5206\u9694\u7b26\u3002\u4ee3\u7801\u78c1\u5e26\u5c06\u5305\u542b\u5355\u4e2a\u64cd\u4f5c\u201c+\u201d\uff0c\u673a\u5668\u7684\u6307\u9488\u5c06\u904d\u5386\u8f93\u5165\uff0c\u8bfb\u53d6\u64cd\u4f5c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u8f93\u51fa\u78c1\u5e26\uff0c\u8fd9\u91cc\u4e0d\u6d89\u53ca\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u975e\u7b97\u672f\u64cd\u4f5c\u901a\u5e38\u662f\u6309\u4f4d\u64cd\u4f5c\u3001\u903b\u8f91\u6761\u4ef6\u68c0\u67e5\u6216\u8df3\u8f6c\uff0c\u5176\u4e2d\u6307\u9488\u5c06\u8df3\u8fc7\u51e0\u4e2a\u5355\u5143\u3002\n\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u4ee4\u4eba\u8d39\u89e3\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u6ce8\u610f\u5230\u5b9a\u4e49\u672c\u8eab\u5e76\u6ca1\u6709\u89e3\u91ca\u89e3\u91ca\u90e8\u5206\u3002\u5982\u679c\u4f60\u601d\u8003\u4e00\u4e0b\u53e3\u8bd1\u5728\u8fd9\u91cc\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4f60\u5c31\u4f1a\u9762\u4e34\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u673a\u5668\u91cc\u7684\u5e7d\u7075\u662f\u4ec0\u4e48\uff0c\u662f\u8c01\u81ea\u5df1\u505a\u53e3\u8bd1\u3002\n\u8003\u8651\u91cd\u5f71\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff0c\u5b83\u662f\u4e00\u4e2a\u7535\u8def\uff0c\u4f7f\u7528\u5e03\u5c14\u7535\u8def\u548c\u95e8(AND\u3001XOR\u3001NAND\u3001NOT)\uff0c\u60a8\u53ef\u4ee5\u8ba1\u7b97\u4efb\u4f55\u60a8\u60f3\u8981\u8ba1\u7b97\u7684\u957f\u5ea6\u3002\u5047\u8bbe\u60a8\u60f3\u8981\u8ba1\u7b97\u60a8\u5c06\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5c06\u8ba1\u6570\u9010\u4f4d\u5b58\u50a8\u5728\u7d22\u5f1599\u5904\u7684\u5355\u5143\u683c\u4e2d\uff0c\u5e76\u4f7f\u7528\u52a0\u6cd5\u7535\u8def(\u4e0b\u9762\u7684\u66f4\u591a\u5185\u5bb9)\u6765\u9012\u589e\u5b83\uff0c\u76f4\u5230\u60a8\u8bfb\u53d6\u5e8f\u52170000\uff0c\u8fd9\u5c06\u6807\u8bb0\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002\n\u4f4d\u548c\u5e03\u5c14\u8fd0\u7b97-\u5728CPU\u7684\u5f15\u64ce\u76d6\u4e0b\u6709\u51e0\u4e2a\u6267\u884c\u7b97\u672f\u8fd0\u7b97\u7684\u5e03\u5c14\u7535\u8def\uff0c\u4f8b\u5982\u52a0\u6cd5\u5668\uff0c\u5b9e\u9645\u4e0a\u4f60\u53ef\u4ee5\u6784\u5efa\u5e03\u5c14\u7535\u8def\uff0c\u5b83\u4eec\u975e\u5e38\u666e\u904d\uff0c\u4f60\u53ef\u4ee5\u7528\u4f60\u559c\u6b22\u7684\u8bed\u8a00\u5c06\u5b83\u4eec\u5b9e\u73b0\u4e3a\u4ee3\u7801\u3002\n\u73b0\u5728\u6211\u4eec\u8fd9\u91cc\u662f\u6700\u91cd\u8981\u7684\uff0c\u7535\u8def\u8db3\u4ee5\u8fdb\u884c\u5927\u591a\u6570\u8ba1\u7b97\uff0c\u4e8b\u5b9e\u4e0a\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u4e32\u7535\u8def\u3002\u4e3a\u4e86\u6211\u4eec\u7684\u76ee\u7684\uff0c\u4ed6\u4eec\u53ef\u4ee5\u6a21\u62df\u56fe\u7075\u673a\u3002\n\u73b0\u5728\u7ed9\u51fa\u8fd9\u5f20\u56fe\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51e0\u70b9\u8bc4\u8bba\uff0c\u7b2c\u4e00\u662f\u7535\u8def\u8db3\u4ee5\u505a\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u8ba1\u7b97\u6267\u884c\u65f6\u62cd\u6444\u4e00\u5f20\u201c\u7167\u7247\u201d\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u673a\u5668\u6267\u884c\u6211\u4eec\u6307\u5b9a\u7684\u6307\u4ee4\u65f6\u6355\u6349\u673a\u5668\u7684\u72b6\u6001\u3002\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u53f0\u56fe\u7075\u673a\u5e76\u63d2\u5165\u4e00\u4e2a\u8f93\u5165x\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b83\u6267\u884c\u65f6\u6355\u83b7\u5b83\u7684\u72b6\u6001(\u78c1\u5e26\u5185\u5bb9\u548c\u6307\u9488\u4f4d\u7f6e\u7684\u526f\u672c)\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u7535\u8def\uff0c\u6a21\u62df\u673a\u5668\u5728\u8f93\u5165x\u4e0a\u6240\u505a\u7684\u4e8b\u60c5\u3002\u8fd9\u4e2a\u6f02\u4eae\u7684\u7ed3\u679c\u662f\u666e\u904d\u8bc1\u660e\u53ef\u80fd\u7684\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u3002\n\u5728\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u9886\u57df\uff0c\u51b3\u7b56\u8bed\u8a00\u4ec5\u4ec5\u662f\u4e00\u4e2a\u8bed\u53e5\u6216\u5e8f\u5217\uff0c\u5bf9\u4e8e\u8be5\u8bed\u53e5\u6216\u5e8f\u5217\uff0c\u5b58\u5728\u4e00\u4e2a\u89c1\u8bc1\u8005\u548c\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\uff0c\u4f7f\u5f97\u5f53\u8be5\u7b97\u6cd5\u63d2\u5165\u5230\u56fe\u7075\u673a\u4e2d\u65f6\uff0c\u673a\u5668\u6839\u636e\u8be5\u89c1\u8bc1\u8005\u5bf9\u4e8e\u8bed\u53e5\u5b9e\u4f8b\u662f\u5426\u6b63\u786e\u800c\u5199\u51650\u62161\u3002\n\u8bf8\u5982\u201cx==5\u201d\u3001\u201c\u56feG\u662f\u5426\u6709\u5708C\u201d\u7b49\u8bed\u53e5\u90fd\u662f\u51b3\u7b56\u8bed\u8a00\u7684\u793a\u4f8b\u3002\u6211\u4eec\u8bf4\u56fe\u7075\u673a\u5728\u8f93\u5165\u8bed\u8a00L\u4e0a\u63a5\u53d7\uff0c\u5982\u679c\u673a\u5668\u5728\u6267\u884c\u540e\u8f93\u51fa1\uff0c\u5219\u89c1\u8bc1w\u3002\n\u4f8b\u5982\uff0c\u5982\u679cL\u4e3a\u201cx==5\u201d\uff0cw\u4e3a6\uff0c\u5219\u673a\u5668\u5c06\u8f93\u51fa0\uff0c\u5982\u679cw\u7b49\u4e8e5\uff0c\u5219\u673a\u5668\u5c06\u63a5\u53d7\u89c1\u8bc1\u3002\n\u867d\u7136\u8fd9\u4e2a\u5b9a\u4e49\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4f46\u5b83\u7684\u610f\u601d\u662f\uff0c\u51b3\u7b56\u8bed\u8a00\u662f\u4e00\u4e2a\u5b58\u5728\u8db3\u591f\u5feb\u7684\u7b97\u6cd5\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u5bf9\u4e8e\u6b63\u786e\u7684\u8f93\u5165\uff0c\u5b83\u8fd4\u56de1\uff0c\u800c\u5bf9\u4e8e\u4e0d\u6b63\u786e\u7684\u8f93\u5165\uff0c\u5b83\u8fd4\u56de0\u3002\n\u8fd9\u91cc\u7684\u95ee\u9898\u662f\uff0cNP\u8bed\u8a00\u662f\u4e00\u79cd\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\u8bed\u8a00\uff0c\u6216\u8005\u6ca1\u6709\u5df2\u77e5\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u6765\u89e3\u51b3\u5b83\uff0c\u4f46\u6709\u4e00\u4e2a\u6709\u6548\u7684\u7b97\u6cd5\u6765\u9a8c\u8bc1\u53ef\u80fd\u7684\u89e3(\u6211\u4eec\u79f0\u4e4b\u4e3a\u89c1\u8bc1)\u3002\n\u590d\u6742\u6027\u7406\u8bba\u6240\u5173\u5fc3\u7684\u95ee\u9898\uff0c\u662f\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6ca1\u6709\u5df2\u77e5\u7684\u6709\u6548\u7b97\u6cd5\u6765\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u3002\u6280\u672f\u4e0a\u79f0\u4e3aNP-\u5b8c\u5168\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u79f0\u4e3a\u7535\u8def\u53ef\u6ee1\u8db3\u6027\u6216SAT\u3002SAT\u95ee\u9898\u662f\u8fd9\u6837\u63d0\u51fa\u7684\uff1a\n\u60a8\u6709\u4e00\u7ec4\u7531\u57fa\u672c\u5e03\u5c14\u95e8\u7ec4\u6210\u7684\u5e03\u5c14\u7ea6\u675f\uff0c\u4f8b\u5982AND\u3001NOT\u3001OR\u2026\u3002\u5982\u679c\u60a8\u9009\u62e9\u8fd9\u6837\u505a\uff0c\u60a8\u7684\u4efb\u52a1\u5e94\u8be5\u662f\u67e5\u627e\u5e03\u5c14\u53d8\u91cf\u7684\u8d4b\u503c(\u57fa\u672c\u4e0a\u4ece\u96c6\u5408{0\uff0c1}\u4e2d\u627e\u5230a\uff0cb\uff0cc\u7684\u6b63\u786e\u503c)\uff0c\u4f8b\u5982\u7ea6\u675f\u6c42\u503c\u4e3atrue\u3002\n\u4f60\u4e3a\u53d8\u91cf\u627e\u5230\u7684\u8d4b\u503c\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u89c1\u8bc1\uff0c\u8981\u6ee1\u8db3\u7684\u516c\u5f0f\u5c31\u662f\u8f93\u5165\u3002\u867d\u7136\u627e\u5230\u89e3\u4f3c\u4e4e\u5f88\u5bb9\u6613\uff0c\u4f46\u6ca1\u6709\u5df2\u77e5\u7684\u7b97\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u89e3\u51b3\u5b83\u4f1a\u95f4\u63a5\u8bc1\u660eP=NP\uff0c\u5e76\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4e3a\u4f60\u8d62\u5f97\u4e00\u767e\u4e07\u7f8e\u5143\u7684\u5956\u91d1\u3002\n\u6765\u81eaNP-\u5b8c\u5168\u95ee\u9898\u7684\u4e00\u4e2a\u81ea\u7136\u73b0\u8c61\u662f\uff0c\u53ef\u4ee5\u7528\u51b3\u7b56\u8bed\u8a00(\u4e3b\u8981\u662f\u8ba1\u7b97\u7ed3\u679c\u4e3a1\u62160\u7684\u51fd\u6570f(x\uff0cy))\u5f62\u5f0f\u8868\u793a\u7684\u6240\u6709\u5176\u4ed6\u95ee\u9898\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3aSAT\u3002\n\u8fd9\u4e00\u81ea\u7136\u6027\u8d28\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u7ea6\u5316\uff0c\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u662f\u6211\u4eec\u4e0a\u9762\u677e\u6563\u5b9a\u4e49\u7684\u5361\u666e-\u83b1\u6587\u7ea6\u5316\u3002\n\u73b0\u5728CS\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u53d1\u73b0\u6307\u51fa\uff0c\u6bcf\u4e00\u79cd\u201cNP\u8bed\u8a00\u90fd\u6709\u4e00\u4e2a\u96f6\u77e5\u8bc6\u8bc1\u660e\u201d(Goldwasser\uff0cMicali\u548cWigderson\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9)\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4efb\u4f55\u5173\u4e8e\u4e00\u4e2a\u53ef\u4ee5\u5f52\u7ed3\u4e3aSAT\u7684\u95ee\u9898\u7684\u9648\u8ff0\u90fd\u6709\u4e00\u4e2a\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5373\u5bf9\u4e8e\u9690\u85cf\u8bc1\u4ebaw\u548c\u9690\u85cf\u8f93\u5165x SAT(x\uff0cw)\uff0c\u9ad8\u6982\u7387\u5730\u6c42\u503c\u4e3a1\u3002\n\u8fd1\u5e74\u6765\u7684\u7814\u7a76\u8868\u660e\uff0c\u4e8c\u6b21\u8de8\u5ea6\u89c4\u5212\u548c\u4ee5\u4e8c\u6b21\u7b97\u672f\u89c4\u5212\u4e3a\u81ea\u7136\u63a8\u5e7f\u7684\u8de8\u5ea6\u89c4\u5212\u90fd\u662fNP-\u5b8c\u5168\u7684\uff0c\u56e0\u6b64\u5bf9\u8fd9\u7c7b\u95ee\u9898\u7b49\u4ef7\u5730\u5b58\u5728\u96f6\u77e5\u8bc6\u8bc1\u660e\u3002\u5339\u8bfa\u66f913\u53f7\u548c\u6700\u8fd1\u7684\u683c\u7f57\u65af16\u53f7\u90fd\u662f\u8fd9\u7c7b\u95ee\u9898\u7684\u8bc1\u660e\u7cfb\u7edf\u3002\n\u8fd9\u4e9b\u95ee\u9898QSP\u3001SSP\u3001QAP\u88ab\u8ba4\u4e3a\u662f\u7c7bNP\u7684\u7279\u5f81\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u7528\u51b3\u7b56\u8bed\u8a00(\u6c42\u503c\u4e3a1\u62160\u7684\u51fd\u6570)\u7684\u5f62\u5f0f\u63cf\u8ff0\u7684\u6bcf\u4e2a\u95ee\u9898\u90fd\u53ef\u4ee5\u7b80\u5316\u4e3a\u8fd9\u6837\u7684\u5b9e\u4f8b\u3002\n\u6211\u4eec\u4e4b\u6240\u4ee5\u4f7f\u7528\u6d89\u53ca\u4ee3\u6570\u548c\u7b97\u672f\u7535\u8def\u7684\u95ee\u9898(\u50cf\u5e03\u5c14\u7535\u8def\uff0c\u4f46\u4f7f\u7528\u6570\u5b57\u800c\u4e0d\u662f\u4f4d\u548c\u7b97\u672f\u8fd0\u7b97\u800c\u4e0d\u662f\u5e03\u5c14\u7535\u8def)\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u4ee3\u6570\u4e2d\u6709\u66f4\u591a\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5982\u692d\u5706\u66f2\u7ebf\u3001\u53cc\u7ebf\u6027\u5bf9\uff0c\u66f4\u91cd\u8981\u7684\u662f\u591a\u9879\u5f0f\uff0c\u6211\u4eec\u77e5\u9053\u5982\u4f55\u4ece\u8fd9\u4e9b\u5de5\u5177\u4e2d\u6784\u5efa\u5bc6\u7801\u65b9\u6848\uff0c\u4e5f\u77e5\u9053\u5982\u4f55\u9ad8\u6548\u5730\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u7aa5\u89c6\u4e86\u4e00\u4e9b\u4e0eCS\u7406\u8bba\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u73b0\u5728\u91cd\u8981\u7684\u95ee\u9898\u662f\uff0c\u5728\u96f6\u77e5\u8bc6\u4e2d\u80fd\u8bc1\u660e\u4ec0\u4e48\uff1f\n\u4ece\u4e0a\u9762\u6211\u4eec\u77e5\u9053\uff0c\u6709\u96f6\u77e5\u8bc6\u8bc1\u660e\u53ef\u4ee5\u8bc1\u660eNP\u4e2d\u6bcf\u79cd\u8bed\u8a00\u7684\u6210\u5458\u8d44\u683c\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u4efb\u4f55\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u5176\u4e2d\u4e4b\u4e00\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u96f6\u77e5\u8bc6\u4e2d\u8bc1\u660e\u3002\n\u4f8b\u5982\uff0c\u503c\u57df\u8bc1\u660e\u63d0\u51fa\u8fd9\u6837\u7684\u95ee\u9898\u201cis x in the range\\([0\uff0c2^v]\\)\u201d\u5176\u4e2dv\u662f\u67d0\u4e2a\u968f\u673a\u6574\u6570\uff0c\u8fd9\u6837\u7684\u9648\u8ff0\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5173\u4e8e\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u7684\u4ee3\u6570\u95ee\u9898\uff0c\u5e76\u4e14\u5bf9\u4e8e\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5b58\u5728\u4e00\u4e2a\u96f6\u77e5\u8bc6\u534f\u8baeBootle\u7b49\u4eba\u3002\n\u8ba9\u6211\u4eec\u5c1d\u5c1d\u8fd9\u79cd\u7b80\u5316\u7684\u6ecb\u5473\uff0c\u6211\u4eec\u77e5\u9053\u8303\u56f4\\([0\uff0c2^v]\\)\u4e2d\u7684\u4efb\u4f55\u503cx\u90fd\u53ef\u4ee5\u5199\u6210\u957f\u5ea6\u4e3av\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u8be5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u90a3\u4e48\u8bc1\u660e\\([0\uff0c2^v]\\\u4e2d\u7684x\\)\u5f52\u7ed3\u8d77\u6765\u5c31\u662f\u8bc1\u660e\u4e09\u4ef6\u4e3b\u8981\u4e8b\u60c5\uff1a-\u8bbea=bin(X)\uff0c\u5373x\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a-\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\\(=x\\)\u8fd9\u7b49\u540c\u4e8e\u57fa\u6570\u8f6c\u6362\u68c0\u67e5(\u3002s\u5b9e\u9645\u4e0a\u7b49\u4e8ex\u3002-\u5176\u6b21\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\\(a\\cic(a-1)=0\\)\uff0c\u5176\u4e2d\\(\\cic\\)\u662fHadamard\u5206\u91cf\u7684\u660e\u667a\u4e58\u79ef\uff0c\u4ee5\u8bc1\u660e\\(a\\)\u786e\u5b9e\u662f1\u548c0\u7684\u5411\u91cf\u3002\u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u53d6\\(al=a\\)\u548c\\(ar=a-1\\)\uff0c\u5219\u6211\u4eec\u9700\u8981\u8bc1\u660e\\((al-1)-ar=0\\)\u3002\n\u8fd9\u4e09\u4e2a\u7ea6\u675f\u73b0\u5728\u662f\u5173\u4e8e\u5411\u91cf\u7684\u9648\u8ff0(\u7ea6\u675f)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6298\u53e0\u4e3a\u68c0\u67e5\u591a\u9879\u5f0f\u7684\u7b49\u4ef7\u6027\uff0c\u5982\u679c\u6211\u4eec\u52a0\u4e0a\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u5f97\u5230\u7684\u662fx\u5728[0\uff0c2^v]\u4e2d\u7684\u8bc1\u660e\uff0c\u4ee5\u4f7f\u5b83\u6210\u4e3a\u96f6\u77e5\u8bc6\uff0c\u6211\u4eec\u4f7f\u7528\u5bc6\u7801\u5b66\u7684\u6280\u672f(Pedersen\u627f\u8bfa\u548c\u968f\u673a\u76f2\u56e0\u6570)\u3002\n\u9879\u76ee\u7b26\u53f7\u8bc1\u660e\u5c31\u662f\u533a\u5757\u94fe\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7528\u6765\u9690\u85cf\u4ea4\u6613\u91d1\u989d\u7684\u8bc1\u660e\u7684\u4e00\u4e2a\u8fd9\u6837\u7684\u4f8b\u5b50\u3002\n\u5728\u533a\u5757\u94fe\u5e94\u7528\u9886\u57df\uff0c\u6211\u4eec\u901a\u5e38\u60f3\u8981\u8bc1\u660e\u7684\u8bed\u53e5\u5bf9snark\u975e\u5e38\u53cb\u597d(\u67d0\u4e9b\u66f2\u7ebf\u7684\u7b7e\u540d\u9a8c\u8bc1\u4f8b\u5982\u53c2\u89c1Jubjub\u6216Merkle Tree\u6210\u5458\u8d44\u683c\u8bc1\u660e\uff0c\u8fd9\u4e9b\u5bf9\u7535\u8def\u975e\u5e38\u9002\u7528)\u4f8b\u5982\uff0c\u7528zokrate\u7f16\u5199\u7684Schnorr\u7535\u8def\u5c06\u4e00\u4e2a\u6846\u67b6\u7f16\u8bd1\u4e3a\u7535\u8def\u7684\u5c0fOcaml\u8bed\u8a00\u3002\n\u8fd9\u79cd\u81ea\u7136\u7684\u53d8\u6362\u4f7f\u6211\u4eec\u80fd\u591f\u5229\u7528\u4ee3\u6570\u5de5\u5177\u8fdb\u884c\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177\u662f\u591a\u9879\u5f0f\u3002\u5173\u4e8e\u591a\u9879\u5f0f\u7684\u63a8\u7406\u6bd4\u5173\u4e8e\u7535\u8def\u7684\u63a8\u7406\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u800c\u4e14\u5f80\u5f80\u66f4\u6709\u6548\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5c06\u7535\u8def(R1CS)\u8f6c\u6362\u4e3aQAP\u4ee5\u5efa\u7acb\u66f4\u7b80\u6d01\u7684\u8bc1\u660e\u7cfb\u7edf\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u8bc1\u660e\u7684\u5927\u591a\u6570\u9648\u8ff0\u90fd\u5f88\u5bb9\u6613\u9a8c\u8bc1\uff0c\u800c\u4e14\u53ef\u80fd\u5f88\u96be\u751f\u6210(\u524d\u6620\u50cf\u3001\u52a0\u5bc6\u503c\u2026\u2026)\u3002\u96f6\u77e5\u8bc6\u8bc1\u660e\u5728\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528\u76f8\u5f53\u591a\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6d89\u53caMerkle\u8bc1\u660e\u7684\u719f\u6089\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u4e8b\u52a1\u5df2\u7ecf\u82b1\u8d39\u4e86\u4e00\u4e2a\u8f93\u5165\u7684\u8bc1\u660e\u201cTxID=x\u7684\u4e8b\u52a1#5\u5df2\u7ecf\u82b1\u8d39\u4e86\u5757#9\u7684\u6563\u5217=y\u7684\u8f93\u5165\u201d\uff0c\u8bc1\u660e\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u63d0\u4f9b\u8f93\u5165\u7684\u5ba1\u8ba1\u8def\u5f84\u3001\u4e8b\u52a1\u7684\u5ba1\u8ba1\u8def\u5f84\u548c\u76f8\u5e94\u7684\u5934\u90e8\u3002\nMerkle\u8bc1\u660e\u7684\u9a8c\u8bc1\u7b97\u6cd5\u4e3b\u8981\u6d89\u53ca\u6563\u5217\u8fd0\u7b97\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\u7b97\u6cd5\uff0c\u5c06\u5176\u5c55\u5f00\u4e3a\u4e00\u7cfb\u5217\u7ea6\u675f\u8fdb\u884c\u9a8c\u8bc1\u3002\nA\u7684\u5ba1\u6838\u8def\u5f84\u5305\u62ec*[H(B)\uff0cH(H\u00a9\uff0cH(D))\uff0cR]\uff0c\u5176\u4e2dR\u662f\u6811\u7684\u6839\u3002\u8981\u9a8c\u8bc1A\u786e\u5b9e\u5728\u8fd9\u4e09\u4e2a\u503c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97H(A)\uff0c\u7136\u540e\u8ba1\u7b97H(H(A)\uff0cH(B))\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5f97\u5230\u6839\u8868\u8fbe\u5f0f\u3002\n\u4e3a\u4e86\u5c06\u6240\u8ff0\u8fd0\u7b97\u8f6c\u6362\u4e3a\u7b97\u672f\u7535\u8def\uff0c\u6211\u4eec\u9700\u8981256\u9636\u57df(\u4ee5\u8986\u76d6\u6563\u5217\u8f93\u51fa)\uff0c\u7136\u540e\u7ed9\u5b9a\u8ba1\u7b97\u6563\u5217\u51fd\u6570\u7684\u7535\u8def\uff0c\u6211\u4eec\u6709\u4e00\u7cfb\u5217\u4ee5A\u4e3a\u8f93\u5165\u7684\u5b50\u7535\u8def\uff0c\u4f5c\u4e3a\u89c1\u8bc1\u7684\u5ba1\u8ba1\u8def\u5f84\u8ba1\u7b97\u6563\u5217\uff0c\u7136\u540e\u68c0\u67e5\u6700\u7ec8\u7ea6\u675fMerkle(A\uff0cAP)==R\u3002\n\u6211\u4eec\u9762\u4e34\u7684\u95ee\u9898\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6563\u5217\u51fd\u6570\u90fd\u53ef\u4ee5\u7f16\u8bd1\u6210\u7b97\u672f\u7535\u8def\uff0c\u800c\u4e0d\u662f\u5728\u5927\u5c0f\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6700\u8fd1\u6211\u4eec\u770b\u5230\u4e86Snark\u53cb\u597d\u7684\u5bc6\u7801\u6563\u5217\u51fd\u6570\uff0c\u5982MIMC\u6216Rescue\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u53ef\u4ee5\u6709\u6548\u5730\u8f6c\u6362\u4e3a\u7b97\u672f\u7535\u8def\uff0c\u800c\u4e0d\u50cfSHA256\uff0c\u5b83\u6d89\u53ca\u51e0\u4e2a\u5e03\u5c14\u64cd\u4f5c\u3002\n\u7a0b\u5e8f\u7684\u7b97\u672f\u5316(\u5373\u5c06\u8ba1\u7b97\u7f16\u8bd1\u6210\u7b97\u672f\u7535\u8def\u6216\u4ee3\u6570\u7cfb\u7edf)\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b8c\u6210\uff0c\u7b2c\u4e00\u79cd\u6a21\u578b\u4f7f\u7528\u6211\u4eec\u521a\u521a\u770b\u5230\u7684\u7535\u8def\uff0c\u7b2c\u4e8c\u79cd\u6a21\u578b\u5c06\u6574\u4e2a\u865a\u62df\u673a\u7b80\u5316\u4e3a\u7535\u8def\u68c0\u67e5\u3002TinyRAM\uff0cEl-Sasson\u7b49\u4eba\u8457\u3002\u662f\u4e00\u79cd\u8fd9\u6837\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\nTinyRAM\u6709\u4e00\u7ec4\u6709\u9650\u7684\u6307\u4ee4\uff0cTinyRAM\u7a0b\u5e8f\u53ef\u4ee5\u7b80\u5316\u4e3a\u7b97\u672f\u7535\u8def\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u60a8\u53ef\u4ee5\u5728\u672c\u6587\u4e2d\u627e\u5230\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u65e2\u7136\u6211\u4eec\u5728\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5c06\u5728RAM\u6a21\u578b(\u914d\u5907\u5185\u5b58\u7684\u56fe\u7075\u673a)\u4e2d\u8fd0\u884c\u7684\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u7535\u8def\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u3002\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u865a\u62df\u673a\uff0c\u5176\u4e2dRAM\u662f\u4e00\u4e2a\u5b57\u6570\u7ec4\uff0c\u5e76\u4e14\u6211\u4eec\u4e3a\u8fd9\u53f0\u673a\u5668\u914d\u5907\u4e86\u4e00\u7ec4k\u4e2a\u5bc4\u5b58\u5668\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u6355\u83b7\u673a\u5668\u7684\u7167\u7247\u6216\u8ddf\u8e2a\uff0c\u60a8\u53ef\u4ee5\u5c06\u8ddf\u8e2a\u770b\u4f5c\u662f\u5728\u6267\u884c\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5176\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u7684\u5e26\u6709\u65f6\u95f4\u6233\u7684\u5feb\u7167\u5e8f\u5217\u3002\n\u7c97\u7565\u5730\u8bf4\uff0c\u5728\u6bcf\u6761\u6307\u4ee4\u4e2d\uff0c\u6211\u4eec\u4fdd\u5b58\u5bc4\u5b58\u5668{R1\uff0cR2\uff0cR3.}\u548cRAM[W1\uff0cW2\uff0cW3.]\u7684\u5feb\u7167\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u5411VM\u63d0\u4f9b\u4e00\u4e2a\u7531\u6307\u4ee4(\u64cd\u4f5c\u7801)\u548c\u6267\u884cVM\u7684\u8f93\u5165x\u7ec4\u6210\u7684\u7a0b\u5e8f\uff0c\u8be5VM\u901a\u5e38\u8f93\u51fa\u4e00\u4e2a\u4f4d\u4e32y\u3002\n\u6211\u4eec\u8f6c\u6362\u6210\u7535\u8def\u7684\u662f\u6bcf\u4e2a\u64cd\u4f5c\u7801\u7684\u903b\u8f91\uff0c\u7136\u540e\u6211\u4eec\u5c06\u8f93\u5165\u63d0\u4f9b\u7ed9\u7535\u8def\uff0c\u5bf9\u7167\u8be5\u6b65\u9aa4\u7684\u72b6\u6001\u5185\u5bb9\u68c0\u67e5\u8f93\u51fa\u5e76\u7ee7\u7eed\u3002\u6211\u4eec\u4e0d\u60f3\u88ab\u9a97\u8fd0\u884c\u65e0\u9650\u5faa\u73af\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u72b6\u6001\u5feb\u7167\uff0c\u5e76\u901a\u8fc7\u8ba1\u7b97\u65f6\u95f4\u6233\u7684\u6570\u91cf\u6765\u83b7\u5f97\u65f6\u95f4\u9650\u5236\uff0c\u5982\u679c\u7535\u8def\u5230\u90a3\u65f6\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u4f1a\u62d2\u7edd\u5b83\u3002\n\u5f53\u8f6c\u6362\u4e3a\u7535\u8def\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u65f6\uff0c\u7535\u8def\u7136\u540e\u5c06\u88ab\u7ed9\u4e88\u89c1\u8bc1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u89c1\u8bc1\u662f\u6267\u884c\u7684\u8f68\u8ff9\uff0c\u5019\u9009\u8f93\u5165x\u662f\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u6240\u6709\u7684\u7535\u8def\u5c06\u505a\u7684\u662f\u68c0\u67e5\u8be5\u8f68\u8ff9\u786e\u5b9e\u662f\u6b63\u786e\u7684\u6267\u884c\u8f68\u8ff9\uff0c\u5e76\u4e14\u5b83\u5c06\u5728{0\uff0c1}\u4e2d\u8f93\u51fay\u3002\n\u68c0\u67e5\u5b50\u7535\u8def\u7684\u8f93\u51fa\u662f\u5426\u7b49\u4e8e\u89c1\u8bc1(i+1)\u8fd9\u7b49\u540c\u4e8e\u68c0\u67e5\u64cd\u4f5c\u7801\u662f\u5426\u4e3a\u6b63\u786e\u7684\u8f6c\u6362\u3002\nRAM\u6a21\u578b\u6709\u70b9\u590d\u6742\uff0c\u5bf9\u4e8e\u6700\u7b80\u5355\u7684\u95ee\u9898\u5f80\u5f80\u5177\u6709\u975e\u5e38\u5927\u7684\u72b6\u6001\uff0c\u4f46\u662f\u6ca1\u6709RAM\u7684\u7b80\u5355\u6a21\u578b(\u4f8b\u5982\u5806\u53e0\u673a)\u66f4\u9002\u5408\u8fd9\u79cd\u8f6c\u6362\u3002\n\u4e00\u65e6\u7a0b\u5e8f\u7b97\u672f\u5316\u6216\u4ee3\u6570\u5316\uff0c\u8fdb\u884c\u5bc6\u7801\u5b66\u5c31\u53d8\u6210\u4e86\u9009\u62e9\u539f\u8bed\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u518d\u6b21\u51fa\u73b0\u4e86\u6743\u8861\u3002\u8bc1\u660e\u7cfb\u7edf(\u901a\u5e38\u53c2\u8003\u5bc6\u7801\u90e8\u5206)\u5c06\u9700\u8981\u53ef\u4fe1\u8bbe\u7f6e\u6765\u751f\u6210\u53c2\u6570(\u516c\u5171\u53c2\u8003\u5b57\u7b26\u4e32)\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8bc1\u660e\u7cfb\u7edf\u53ef\u80fd\u4e0d\u662f\u901a\u7528\u7684(\u5373\uff0c\u5bf9\u4e8e\u60a8\u60f3\u8981\u8bc1\u660e\u7684\u6bcf\u4e2a\u7a0b\u5e8f\u6216\u7535\u8def\u90fd\u9700\u8981\u65b0\u7684\u53ef\u4fe1\u8bbe\u7f6e)\u3002\n\u7b2c\u4e8c\u4e2a\u662f\u8bc1\u660e\u5927\u5c0f\u4e0e\u5b89\u5168\u5047\u8bbe\u4e4b\u95f4\u7684\u6743\u8861\uff0c\u4f7f\u7528\u66f4\u5f3a\u5047\u8bbe\u7684\u65b9\u6848\u5f80\u5f80\u5177\u6709\u8f83\u5c0f\u7684\u8bc1\u660e\uff0c\u800cSTARK\u4f9d\u8d56\u4e8e\u5e95\u5c42\u54c8\u5e0c\u51fd\u6570\u7684\u6297\u51b2\u7a81\u6027\uff0c\u8bc1\u660e\u5927\u7ea6\u4e3a200KB\u3002\u800cGroth 16\u7684\u8bc1\u660e\u7cfb\u7edf\uff0c\u5176\u6539\u4e3a\u4f7f\u7528\u53cc\u7ebf\u6027\u914d\u5bf9\uff0c\u5177\u6709200\u5b57\u8282\u5927\u5c0f\u7684\u8bc1\u660e\u3002\n\u6309\u7167\u540c\u6837\u7684\u601d\u8def\uff0cGroth16\u9700\u8981\u4e3a\u60a8\u60f3\u8981\u8bc1\u660e\u5176\u6267\u884c\u7684\u6bcf\u4e2a\u7a0b\u5e8f\u8bbe\u7f6e\u4e00\u4e2a\u53d7\u4fe1\u4efb\u7684\u8bbe\u7f6e\uff0c\u800cStarks\u5219\u4e0d\u9700\u8981\u4efb\u4f55\u8bbe\u7f6e\u3002\n\u8fd9\u5c31\u662f\u66f4\u65b0\u7684\u8bc1\u660e\u7cfb\u7edf\u7684\u4eae\u70b9\uff0c\u5982Plonk\uff0c\u5b83\u662f\u901a\u7528\u7684\u548c\u53ef\u66f4\u65b0\u7684(\u9700\u8981\u5bf9\u6240\u6709\u7a0b\u5e8f\u8fdb\u884c\u4e00\u6b21\u8bbe\u7f6e\uff0c\u76f4\u5230\u7535\u8def\u754c\u9650\uff0c\u5e76\u4e14\u8bbe\u7f6e\u672c\u8eab\u53ef\u4ee5\u987a\u5e8f\u5730\u5728\u591a\u65b9\u8bbe\u7f6e\u4e2d\u5b8c\u6210)\u3002\n\u9644\u6ce8\uff1a-snarks\u4e2d\u7684\u201cA\u201d\u4ee3\u8868\u53c2\u6570\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8be5\u65b9\u6848\u5bf9\u4e8e\u8ba1\u7b97\u53d7\u9650\u7684\u8bc1\u660e\u8005\u662f\u5b89\u5168\u7684\uff0c\u5177\u6709\u65e0\u9650\u8ba1\u7b97\u80fd\u529b\u7684\u8bc1\u660e\u8005\u53ef\u4ee5\u4e3a\u9519\u8bef\u9648\u8ff0\u63d0\u4f9b\u6709\u6548\u7684\u8bc1\u660e\u3002-snarks\u4e2d\u7684Succintness\u610f\u5473\u7740\u8bc1\u660e\u5927\u5c0f\u5c0f\u4e8e\u6211\u4eec\u5e0c\u671b\u8bc1\u660e\u7684\u7535\u8def(\u6216\u8bed\u53e5)\uff0c\u5e76\u4e14\u9a8c\u8bc1\u5668\u6240\u505a\u7684\u5de5\u4f5c\u5c0f\u4e8e\u7535\u8def\u5927\u5c0f\u7684\u5de5\u4f5c\u3002-snarks\u662f\u7531\u4e00\u7ec4\u7b97\u6cd5(GEN\u3001PROMPE\u3001VERIFY)\u5b9a\u4e49\u7684\u534f\u8bae-\u4e0a\u9762\u8ba8\u8bba\u7684NP\u51cf\u5c11\u6b65\u9aa4\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u201c\u53c2\u6570\u201d\u53ea\u5bf9\u8ba1\u7b97\u7ed1\u5b9a\u7684\u8bc1\u660e\u8005\u662f\u5b89\u5168\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\u5728\u8ba8\u8bba\u4e00\u4e9b\u7528\u4e8e\u90e8\u7f72\u7684snarks(\u5982ZCash)\u7684\u5bc6\u7801\u5de5\u5177\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u5b89\u5168\u6027\uff0c\u4ece\u654c\u610f\u7684\u89d2\u5ea6\u8ba8\u8bba\u5b83\u4eec\u7684\u6027\u8d28\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u5b83\u4eec\u6240\u9075\u5faa\u7684\u5047\u8bbe\u3002\n\u7a33\u5065\u6027\uff1a\u5982\u679c\u6ca1\u6709\u8bc1\u660e\u8005\u53ef\u4ee5\u6b3a\u9a97\u9a8c\u8bc1\u8005\u63a5\u53d7\u9519\u8bef\u7684\u8bc1\u660e\uff0c\u9664\u975e\u6982\u7387\u4e3a\\(\\epsilon\\lll 1\\)\uff0c\u5219\u79f0\u8bc1\u660e\u7cfb\u7edf\u4e3a\\(\\epsilon\\)-\u5065\u5168\u3002\n\u5b8c\u5907\u6027\uff1a\u5982\u679c\u5bf9\u4e8e\u6240\u6709\u6709\u6548\u7684\u8bc1\u660e\uff0c\u9a8c\u8bc1\u4ee5\u6982\u73871\u6210\u529f\uff0c\u5219\u79f0\u8bc1\u660e\u7cfb\u7edf\u662f\u5b8c\u6574\u7684\u3002\n\u5f53\u6211\u4eec\u8c08\u8bba\u5b89\u5168\u5047\u8bbe\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u6307\u7684\u662f\u6240\u4f7f\u7528\u7684\u5bc6\u7801\u5b66\u7684\u57fa\u672c\u8ba1\u7b97\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u79bb\u6563\u5bf9\u6570\u5047\u8bbe\u6307\u51fa\uff0c\u975e\u91cf\u5b50\u5bf9\u624b\u5f88\u96be\u627e\u5230\u4e0b\u9762\u7684\u79bb\u6563\u5bf9\u6570(g^x=y\\)\uff0c\u5176\u4e2d\\(g\\)\u662f\u6709\u9650\u7fa4\u7684\u751f\u6210\u5668\u3002\n\u8fd9\u4e00\u5047\u8bbe\u662f\u73b0\u4ee3Ellptic Curve\u5bc6\u7801\u4f53\u5236\u6240\u4f9d\u636e\u7684\uff0c\u56e0\u4e3a\u66f2\u7ebf\u4e0a\u7684\u70b9\u81ea\u8eab\u7ec4\u6210\u4e00\u7ec4\uff0c\u4f8b\u5982\u4ee5\u7d20\u6570\u4e3a\u6a21\u7684\u6574\u6570\u4e0e\u66f2\u7ebf\u70b9\u4e92\u6362\uff0c\u56e0\u6b64\u5047\u8bbe\u6210\u4e3a\\(SG=P\\)\uff0c\u5176\u4e2d\\(s\\)\u662f\u4e0b\u5c42\u7d20\u57df\u7684\u6807\u91cf\uff0c\\(G\\)\u662f\u66f2\u7ebf\u70b9\u7ec4\u7684\u751f\u6210\u5668(\u4e5f\u79f0\u4e3a\u57fa\u70b9)\uff0c\\(P\\)\u662f\u66f2\u7ebf\u4e0a\u7684\u70b9\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2a\u7cfb\u7edf\u505a\u7684\u5047\u8bbe\u8d8a\u5c11\uff0c\u5b83\u88ab\u8ba1\u7b97\u80fd\u529b\u5f3a\u5927\u7684\u5bf9\u624b\u7834\u89e3\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5c0f\u3002\n\u5728\u914d\u5bf9\u7684\u60c5\u51b5\u4e0b\uff0c\u79bb\u6563\u5bf9\u6570\u5047\u8bbe\u548c\u8ba1\u7b97Diffie-Hellman\u5047\u8bbe\u5728\u5177\u6709\u91cf\u5b50\u80fd\u529b\u7684\u5bf9\u624b\u4e0b\u90fd\u88ab\u6253\u7834\uff0c\u540c\u6837\u7684\u60c5\u51b5\u4e5f\u9002\u7528\u4e8e\u5728\u9ed1\u6697\u4e2d\u4f7f\u7528\u7684\u9690\u85cf\u6709\u5e8f\u7fa4\uff0c\u5b83\u9000\u56de\u5230\u5f3aRSA\u5047\u8bbe\uff0c\u5176\u4e2d\u6307\u6570\u53ef\u4ee5\u4e0d\u540c\u4e8e3\u3002\n\u552f\u4e00\u5df2\u77e5\u7684\u62b5\u5fa1\u5177\u6709\u91cf\u5b50\u80fd\u529b\u7684\u5bf9\u624b\u7684\u7cfb\u7edf\u662fSTARK\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7cfb\u7edf\u4f7f\u7528\u4e0eSnark\u4e0d\u540c\u7684\u7ed3\u6784(IOP\u548cPCP\u800c\u4e0d\u662fQAP\uff0c\u5e76\u4e14\u662f\u76f8\u5f53\u4fe1\u606f\u8bba\u7684\u95ee\u9898)\uff0cSTARK\u552f\u4e00\u9700\u8981\u7684\u662f\u6297\u51b2\u7a81\u7684\u54c8\u5e0c\u51fd\u6570\u3002\nFiat Shamir\u542f\u53d1\u5f0f\u662f\u4e00\u79cd\u7528\u4e8e\u4f7f\u4ea4\u4e92\u5f0f\u534f\u8bae\u6210\u4e3a\u975e\u4ea4\u4e92\u5f0f\u7684\u6280\u5de7\u3002\u5728\u4ea4\u4e92\u5f0f\u534f\u8bae\u4e2d\uff0c\u60f3\u6cd5\u5f88\u7b80\u5355\u3002\u9a8c\u8bc1\u5668\u5411\u8bc1\u660e\u8005\u53d1\u9001\u968f\u673a\u8d28\u8be2\uff0c\u8fd9\u4e9b\u8d28\u8be2\u8981\u4e48\u7528\u4e8e\u67e5\u8be2\u8bc1\u636e\uff0c\u5982\u5728PCP\u6216IOP\u4e2d\uff0c\u8981\u4e48\u7528\u4f5c\u591a\u9879\u5f0f\u8fd0\u7b97\u7684\u67d0\u79cd\u8f93\u5165\uff0c\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u9700\u8981\u968f\u673a\u5b57\u8282\u3002\n\u60a8\u5982\u4f55\u624d\u80fd\u4f7f\u4ea4\u4e92\u4e0d\u9700\u8981\u53d1\u751f\uff0c\u4f46\u4ecd\u7136\u5f3a\u5236\u9a8c\u8bc1\u5668\u751f\u6210\u968f\u673a\u6027\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u9009\u5b9a\u7684\u8f93\u5165\uff1f\n\u7b54\u6848\u4e00\u5982\u65e2\u5f80\u5730\u662f\u6563\u5217\u51fd\u6570\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\uff0c\u4f60\u521b\u5efa\u4e00\u4e2a\u6210\u7ee9\u5355\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e8f\u5217\uff0c\u8bc1\u660e\u8005\u4ece\u8bc1\u660e\u7cfb\u7edf\u8f93\u5165\u53c2\u6570\uff0c\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u5b57\u7b26\u4e32\uff0c\u6bcf\u5f53\u4ed6\u9700\u8981\u4e00\u4e2a\u968f\u673a\u7684\u5b57\u8282\u5e8f\u5217\u65f6\uff0c\u4ed6\u5c31\u4f1a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u4f20\u9012\u6574\u4e2a\u6210\u7ee9\u5355\u3002\n\u7edf\u4e00\u7684\u6563\u5217\u51fd\u6570\u5728\u751f\u6210\u968f\u673a\u6570\u636e\u65b9\u9762\u505a\u5f97\u5f88\u597d\uff0c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5f55\u6765\u68c0\u67e5\u81ea\u5df1\u4f7f\u7528\u7684\u968f\u673a\u503c\u662f\u5426\u6b63\u786e\uff0c\u53ea\u9700\u91cd\u65b0\u8fd0\u884c\u8bb0\u5f55\u5373\u53ef\u3002\n\u8fd9\u662f\u4e00\u6b21\u5feb\u901f\u800c\u80ae\u810f\u7684\u884c\u8d70-\u901a\u8fc7\u5bf9zkSNARK\u7684\u603b\u4f53\u60f3\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u7c89\u9970\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u6211\u4eec\u8bd5\u56fe\u505c\u7559\u5728\u8f83\u65b0\u4f5c\u54c1\u7684\u6846\u67b6\u5185\uff0c\u5f3a\u70c8\u9080\u8bf7\u8bfb\u8005\u81ea\u5df1\u8c03\u67e5\u5386\u53f2\u548c\u6587\u5b66\u3002\n\u963f\u7ef4\u00b7\u5a01\u683c\u5fb7\u68ee(Avi Wigderson)\u7684\u201c\u6570\u5b66\u4e0e\u8ba1\u7b97\u201d\u4e00\u4e66\u662f\u4e16\u754c\u4e0a\u53e6\u4e00\u4e2a\u4f1f\u5927\u7684\n..", "note_en": "The introduction of Bitcoin in 2009 turned more research attention towards generalized blockchains, and privacy issueslead in turn to seeking methods to make blockchains more private.But it took the introduction of  Zerocoin which subsequently lead to  ZCash to show that practical zero-knowledge proofs are here and lead to a  Cambrian explosionin cryptography especially cryptographic primitives that naturally lead to highly scalable decentralized system.\n At the center of attention is zero-knowledge proofs, introduced by  Goldwasser, Micali and Rackoff in 1985. A fun anecdote, their initial paper was released as early as 1982 only to be rejected from various conferences until the Symposium on Theory Of Computing in 1985,  ref.\n Usually described as \u201cmoon math\u201d these construction are fascinating and useful for two main reasons.The first is  zero-knowledge which could be translated as private and  proofs which are statements abouta property or theorem truthfulness.\n From  Goldreich&#39;s Zero-Knowledge twenty years after it&#39;s invention : *The term as whole  zero-knowledge proofs can be seen as contradictory since these  proofs are highly convincing and yet yield no information except the validity of the statement being proved*.\n To start wrapping our heads around these we&#39;ll need to understand a few key concepts that stem from Complexity Theory.The first concept is that of  computation and  languages ,what computers are used for and what kind of statements we can prove,the second is that of  reduction and concernsthe idea of  moving from one problem to the other.\n In this post we will discuss mainly the preliminaries and basics required to follow along and in subsequent posts we will reviewthe most recent proof systems and discuss implementation details.\n  Computation is any type of calculation involving arithmetic and non-arithmetic steps that follow a predefined model (an algorithm).Computers are named that way because at the lowest level all they do is arithmetic operations and simpler non arithmetic operations.\n The Turing machine, which is an idealized abstraction of a computer is composed of an array of cells, called the tape that contains bits. We can use as many tapes as we want, for inputs, temporary variables and outputs...\n The Turing machine reads a sequence of bits, interprets them and executes the basic instruction if one is passed.\n Consider the simplest example of adding two numbers,the input tape would contain  a and  b written in binary form say 0110||1101 where \u201c||\u201d denotes a separator.The code tape would contain a single operation \u201c+\u201d and the machine&#39;s pointer would walk over the inputs, read the operationand write the result in the output tape ,there is no complex calculation involved here, non-arithmetic operations are often bitwise operations, logical condition checks or jumps where the pointer would skip a few cells.\n  This might seem convoluted, because if you notice the definition itself doesn&#39;t explain the interpretation part. If you think about what interpreting means here you face the question what&#39;s the ghost in the machine, who does the interpretation itself.\n One way to think about the ghost is that it&#39;s a circuit, using boolean circuits and the gates (AND,XOR,NAND,NOT) you can compute anything you would like.Say you want to compute the length of a string you would read bit by bit store the count in the cell at index 99, and use an addition circuit (more below) to increment it, until you read the sequence 0000, which would mark the end of a string.\n Bits and boolean operations\u2014 under the hood of a CPU there are several boolean circuits that do arithmetic operation such as the  adder in fact you can build boolean circuits are very pervasive and you can implement them as code in your favorite language.\n Now we here&#39;s the kicker, circuits are sufficient for most computation and in fact all computation can be reduced to a bunchof circuits. And for our purposes they can  simulate Turing machines.\n Now given this image there are a few remarks one can make, the first is that circuits are enough to do a whole swathe of operations, the second is that we can make a \u201cphoto\u201d of the computation as it executes, in other words we can capture the machine state as it executes the instruction we task it with.\n If we have a Turing machine and plug in an input  x we can capture its state as it executes (a copy of the tape contents and pointer positions). Then we can build a circuit that simulates what the machines does on input  x. This beautiful result is one major reason generalized proofs are possible.\n In the field of computational complexity theory, a  decision language is simply a statement or sequence of , for which there exist a  witness and a  polynomial time algorithm such that when this algorithm is plugged into to a Turing machine, the machine writes 0 or 1 depending on whether the witness is correct for the statement instance or not.\n Statements such as \u201cx == 5\u201d, \u201cdoes graph G has cycle C\u201d and so on are all examples of decision language. We say that a Turing machine  accepts , on an input language  L and witness  w if the machine outputs 1 after execution.\n For example if L is \u201cx == 5\u201d and  w is 6 the machine will output 0 if  w is equal to 5 the machine will accept the  witness.\n While this definition might seem complex, what it means is that a decision language is a problem for which there exist a fast enough algorithm such as for correct inputs it returns 1 and incorrect inputs return zero 0.\n Here&#39;s the catch, an  NP language is one that is said to be undecidable, or has no known polynomial time algorithm that  solves it BUT has an efficient algorithm that verifies probable solutions (what we called a witness).\n The problems that complexity theory is concerned about, are such problems that don&#39;t have known efficient algorithms to find solutions for. Technically referred to as  NP-complete.One such problem is called  Circuit Satisfiability or  SAT the SAT problem is posed this way :\n You have a set of boolean constraints composed of primitive boolean gates such as AND, NOT, OR... and your task should you choose to do it is to find assignments to boolean variables (basically find the correct values of a,b,c from the set {0,1}) such as the constraint evaluate to true.\n The assignments you find for the variables are what we called  witness, the formula to satisfy is the input.While finding solutions might seem easy, there is no known algorithm to do that, it&#39;s an open-problem.And solving it would indirectly prove that P = NP and win you a million dollar prize along the way.\n One natural thing that comes from NP-complete problems is that every other problem that can be formulated in a formof a decision language mainly a function f(x,y) that evaluates to either 1 or 0 can be transformed to SAT.\n This natural property is what we actually call reduction or more exactly  Karp-Levin reduction, what we loosely defined above.\n Now an important discovery in CS Theory states that every \u201cNP Language has a zero-knowledge proof\u201d (what Goldwasser,Micali and Wigderson proved) in other words any statement about a problem that can be reduced to SAT has a zero-knowledge proof that for hidden witness  w and hidden input  x SAT(x,w) evaluates to 1 with high probability.\n In recent years it was shown that Quadratic Span Programs and Span Square Programs, of which Quadratic Arithmetic Programs are natural extensions are both NP-Complete thus equivalently there exist zero-knowledge proofs for such problems. Pinocchio 13 and more recently  Groth 16 are proof systems for such problems.\n These problems QSP,SSP,QAP are said to  characterize the class NP meaning that every problem that can be stated in the form of a decision language (a function that evaluates to 1 or 0) can be reduced to such instances.\n The reason we use problems that involve algebra and arithmetic circuits (like boolean circuits but use numbers instead of bits and arithmetic operations instead of boolean ones) is that we have a larger set of mathematical tools in algebra such elliptic curves, bi-linear pairings and more importantly polynomialsthat we know how to build cryptographic schemes from and also know how to do math with efficiently.\n  Up until this point we merely peeked at some different concepts from CS-Theory, now the important question, what can be proven in zero-knowledge ?\n Well from the above we know that there are zero-knowledge proofs that allow proving membership for every language in NP, in fact any problem that can be reduced to one of those can be proven in zero-knowledge.\n Range proofs for example ask the question \u201cis x in the range \\( [0,2^v] \\)\u201d where v is some random integer, such a statement can be converted to an algebraic problem about the inner product of two vectors and for such problems there exist a zero-knowledge protocol  Bootle et al.\n Let&#39;s have a taste of this reduction, we know that any value x in the range \\( [0,2^v] \\) can be written as a binary string of length v.If we consider that binary string to be a vector, then proving that \\( x \\in [0,2^v] \\) comes down to proving three main things :\u2013 Let a = bin(x) i.e the binary representation of x : \u2013 First we need to show that \\( = x \\) this is equivalent to a radix conversion check (when we turn \\( a \\) to a number it&#39;s actually equal to x. \u2013 Second we need to show that \\( a \\circ (a \u2013 1) = 0 \\) where \\( \\circ \\) is the Hadamard component wise product to show that \\( a \\) is indeed a vector of 1&#39;s and 0&#39;s \u2013 Last if we take \\( aL = a \\) and \\( aR = a \u2013 1 \\) then we need to show that \\( (aL \u2013 1) \u2013 aR = 0 \\)\n These three constraints are now statements (constraints) about vectors which we can collapse to checking equality of polynomials, if we add some randomness what comes out is a proof that x is in [0,2^v], to make it zero-knowledge we use techniques from cryptography (Pedersen Commitments and random blinding factors).\n  Bulletproofs are one such example of proofs used in blockchain applications to hide transaction amounts.\n In the realm of blockchain applications the statements we usually want to prove are very snark friendly (Signature validation for some curves see  JubJub or Merkle Tree membership proofs for example, and these are quite amenable to circuits see for example this Schnorr circuit written in  zokrates a framework to compile a small Ocaml like language to circuits.\n This natural transformation is what allows us to leverage algebraic tools for zero-knowledge proofs, one such tool is polynomials.Reasoning about polynomials is much more easier and often more efficient than reasoning about circuits. This is one reasonwe transform circuits (R1CS) to QAP to build more succinct proof systems.\n Since most statements we want to prove things about are ones that are easy to verify and possibly difficult to produce (preimages, encrypted values...) the applications of zero-knowledge proofs to cryptocurrencies and blockchains are rather numerous.\n In fact let&#39;s look at a familiar example involving Merkle proofs for example consider a proof that a transaction has spent an input \u201cTransaction #5 with TXID = x has spent input whose hash = y at Block #9\u201d, one way to prove this is provide an audit pathfor the input, an audit path for the transaction and the respective headers.\n The algorithm to verify Merkle proofs involve mostly hash operations, thus we can take the recursive algorithm and unroll it to a sequence of constraints to check.\n   An audit path for  A would involve *[H(B), H(H\u00a9,H(D)), R].Where  R is the root of the tree. To verify that  A is indeed in the three we need to compute  H(A) then  H(H(A),H(B)) and so on until the  root expression.\n To convert said operation to an arithmetic circuit, we&#39;d need a field of order 256 (to cover the hash outputs), then given a circuit that computes that hash function, we&#39;d have a sequence of sub-circuits that take  A as  input, the  audit path as  witness compute the hashes then check the final constraint  Merkle(A,AP) ==  R.\n The issues we face is that not all hash functions can be compiled to arithmetic circuits, not without a size blow up.This is one reason why recently we&#39;ve seen  SNARK-friendly cryptographic hash functions such as  MiMC or Rescue that involve operations that can efficiently be turned to arithmetic circuits, unlike SHA256 for example which involves several boolean operations.\n Arithmetization of programs (i.e compiling computation to arithmetic circuits or algebraic systems) can be done in two ways, the first model using circuits we&#39;ve just seen and the second model which reduces an entire virtual machine into a circuit check. TinyRAM by El-Sasson et al. is one such implementation,\n TinyRAM has a restricted set of instructions and TinyRAM programs can be reduced to arithmetic circuits and vice-versa you can find more details in the paper.\n Nonetheless since we&#39;re here let&#39;s take a look at how we can convert a program running in the RAM model (a Turing machine equipped with memory) to a circuit satisfiability problem.\n Suppose we have a virtual machine where RAM is an array of words and we equip this machine with a set of k-registers, as we mentioned above we can capture a  photo or  trace of the machine, you can think of the trace as a sequence of timestamped snapshots of its registers and memory at each step of the execution.\n Roughly speaking at each instruction we save a snapshot of registers {R1,R2,R3...} and of the RAM [W1,W2,W3...], now let&#39;s suppose we feed our VM a program composed of instructions (opcodes) and an input  x executing the VM normally outputs a bitstring  y.\n What we transform to circuits is the logic of each opcode, we then feed inputs to the circuit check the outputs against the state content at that step and continue.We don&#39;t want to be tricked into running infinite loops so we generally have a fixed size state snapshot and by counting the number of timestamps we get our time bound, if the circuit isn&#39;t complete by then we reject it.\n When transformed to a circuit satisfiability problem, the circuit then will be given a  witness in this case the witness is the  trace of execution, the candidate input  x is the program&#39;s input and all the circuit will do is check that indeed the trace is a proper trace of execution and it will output  y in {0,1}.\n   Check that output of the sub-circuit is equal Witness(i+1) this is equivalent to checking that the opcode is a correct transition\n The RAM model is a bit complex, tends to have very large states for the simplest problems but simpler models with no RAM such as stack machines for example are more amenable to this transformation.\n Once programs are arithmetized or algebratized doing cryptography becomes a matter of choosing primitives, here again there are trade-offs that arise. The proof system (which generally refeers to the cryptography part) will require a trusted setup to generate the parameters (the common reference string), and in some cases, the proof system might not be universal (i.e require a new trusted setup for every program or circuit you want to prove).\n The second one is the proof size vs security assumption trade off, schemes that use stronger assumptions tend to have smaller proofs for example while STARKs rely on the collision-resistance of the underlying hash-functions, the proofs are about 200kb. While the proof system of Groth 16, which uses bi-linear pairings instead has proofs of size 200 bytes.\n On the same line of thought, Groth16 requires a trusted setupfor each program you want to prove execution of, while STARKs require none.\n This is where more recent proof systems shine such as  PLONK which is universal and update-able (requires one single setup for all programs up to a circuit bound and the setup itself can be done sequentially and in a multiparty setting.\n P.S :\u2013 The \u201cA\u201d in SNARKs stands for arguments and it can be understood as this scheme is secure for computationally bound provers, a prover with unbounded computational power can provide valid proofs for false statements.\u2013 Succintness in SNARKs means that the proof size is smaller than the circuit (or statement) we wish to prove, and the verifier does less than the circuit size work.\u2013 SNARKs are protocols defined by a tuple of algorithms (Gen,Prove,Verify)\u2013 The NP reduction step discussed above is polynomial in time.\u2013 It was shown that statistically sound proofs are unlikely to be succinct, this is one reason why \u201carguments\u201d are only safe against computationally bound provers.\n  Before we discuss some cryptographic tools used in deployed SNARKs such as in ZCash we need to discuss the security of zero-knowledge proofs, their properties from an adversarial perspective and more importantly the assumptions they stand one.\n  Soundness : A proof system is said to be \\(\\epsilon\\)-sound if no prover can trick a verifier to accept a false proof except with probability \\( \\epsilon \\lll 1\\)\n Completeness : A proof system is said to be complete if for all valid proofs, verification succeeds with probability 1.\n When we talk about security assumptions we generally mean  the underlying computational problem of the cryptography used.For example the  discrete logarithm assumption states that it&#39;s hard for non-quantum adversaries to find the discrete logarithmof the following \\( g^x = y \\) where \\( g \\) is the generator of a finite group.\n This assumption is the one over which modern Ellptic Curve cryptosystems lie, since the points of a curve form a group by themselves swapping say the Integers modulo a prime with curve points the assumption becomes \\( sG = P \\) where \\( s \\) is a scalar from the underlying prime field, \\( G \\) is the generator of the curve points group (also called  base point) and \\( P \\) is a point on the curve.\n Generally speaking the fewer assumptions a system makes the less likely it is to be broken by computationally powerful adversaries.\n The discrete log assumption and computational diffie-hellman assumption in the case of  pairings are both broken under a quantum capable adversary, the same goes for hidden-order groups used in  DARK which fall back to the  Strong RSA assumption the one  where the exponent can be different than 3 .\n The only known system secure against quantum capable adversaries are  STARKs since these use a different construction than SNARKs (IOP and PCPs instead of QAP and are rather information-theoretic problems), the only thing STARKs require is a collision-resistant hash-function.\n    The fiat shamir heuristic is a sort of a trick used to make Interactive Protocols, Non-Interactive.The idea is simple in Interactive Protocols a Verifier sends random challenges to the Prover and those challenges are either used to query the proofs as in PCPs or IOP or serve as some sort of input to a polynomial operation in both cases we need random bytes.\n How do you make it so that the interaction doesn&#39;t need to happen but still enforce the Verifier to generate randomness instead of say use selected inputs ?\n The answer is, as always, hash functions. The idea works this way, you create a transcript which is just a sequence of strings, the Prover inputs parameters from the proof system and maybe some strings, and whenever he needs a random sequence of bytes he passes the whole transcript trough a hash function.\n Being uniform hash functions do a great job at generating random data, and the Verifier can use the transcript to check himself that the random values used are correct by simply re-running the transcript.\n  This was a quick and dirty walk-trough the general ideas about zkSNARKs why we glossed many details, we tried to stay withinthe framework of more recent works, the reader is highly invited to survey the history and literature himself.\n  The book  Mathematics and Computation by Avi Wigderson is yet another great in\n......", "posttime": "2020-05-25 11:19:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "zksnark,zksnarks,\u8bc1\u660e", "title": "ZkSNARK\u5165\u95e8\u7b2c1\u90e8\u5206\uff1a\u4ec0\u4e48\u662fZkSNARK", "title_en": "ZkSNARKs Primer Part 1: What Are ZkSNARKs", "transed": 1, "url": "https://write.as/knowledgeprover/zero-knowledge-proof-systems-a-primer", "via": "", "real_tags": ["zksnark", "zksnarks", "\u8bc1\u660e"]}, {"category": "", "categoryclass": "", "imagename": "a3927436930ff88e131bc901dab8b11a.jpg", "infoid": 1003595, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5df2\u7ecf\u628a\u6bcf\u4ef6\u4e8b\u90fd\u505a\u5bf9\u4e86\uff0c\u4f46\u662f\u5df2\u7ecf\u662f\u51cc\u66682\u70b9\u4e86\uff0c\u6211\u8fd8\u662f\u7761\u4e0d\u7740\u89c9\u3002\u6211\u5728\u7761\u89c9\u524d\u5df2\u7ecf\u51a5\u60f3\u4e8630\u5206\u949f\u3002\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u6211\u751a\u81f3\u5403\u4e86\u51e0\u7247\u892a\u9ed1\u6fc0\u7d20\u836f\u7247\u3002\u7136\u800c\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u5b8c\u5168\u9192\u7740\uff0c\u62c5\u5fc3\u7b2c\u4e8c\u5929\u4e0a\u73ed\u4f1a\u53d8\u5f97\u591a\u4e48\u75b2\u60eb\u3002\n\u6211\u7684\u95ee\u9898\u5e76\u4e0d\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u5728\u7f8e\u56fd\uff0c\u6bcf10\u4e2a\u6210\u5e74\u4eba\u4e2d\u5c31\u6709\u4e00\u4e2a\u4f1a\u7ecf\u5386\u6162\u6027\u5931\u77201\u3002\u53ea\u9700\u4e00\u665a\u7761\u7720\u4e0d\u4f73\uff0c\u5c31\u4f1a\u6f14\u53d8\u6210\u957f\u671f\u7684\u7761\u7720\u95ee\u9898\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u7761\u7720\u95ee\u9898\u6e90\u4e8e\u7126\u8651\u548c\u62c5\u5fe72.\u4f60\u8d8a\u62c5\u5fc3\u7761\u7720\u4e0d\u8db3\uff0c\u4f60\u7684\u7761\u7720\u5c31\u8d8a\u5dee\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u7684\u7761\u7720\u95ee\u9898\u4ece\u5927\u5b66\u4e00\u5f00\u59cb\u5c31\u5f00\u59cb\u4e86\u3002\u6211\u521a\u5f00\u59cb\u4e00\u4efd\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u5de5\u4f5c\uff0c\u6211\u5f00\u59cb\u611f\u53d7\u5230\u538b\u529b\u3002\u6211\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u6700\u540e\u671f\u9650\u5feb\u5230\u4e86\uff0c\u6709\u4e00\u5929\u665a\u4e0a\u6211\u53d1\u73b0\u81ea\u5df1\u8f97\u8f6c\u53cd\u4fa7\uff0c\u65e0\u6cd5\u5165\u7761\u3002\u6211\u7684\u8111\u5b50\u4e00\u76f4\u5728\u98de\u9a70\uff0c\u4e00\u76f4\u60f3\u7740\u6211\u8981\u505a\u7684\u6240\u6709\u5de5\u4f5c\uff0c\u76f4\u5230\u6211\u7ec8\u4e8e\u7761\u7740\u4e86\u3002\n\u6211\u4ee5\u4e3a\u5c31\u662f\u8fd9\u6837\u4e86--\u4e00\u4e2a\u4e0d\u5bfb\u5e38\u7684\u591c\u665a\uff0c\u4f46\u540e\u6765\u53c8\u53d1\u751f\u4e86\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u7684\u89c2\u70b9\u6539\u53d8\u4e86\u3002\u6211\u5f00\u59cb\u62c5\u5fc3\u7761\u7720\u4e0d\u8db3\u4f1a\u5982\u4f55\u5f71\u54cd\u6211\u7684\u4e00\u5929\u3002\u6211\u5728\u7f51\u4e0a\u67e5\u9605\u4e86\u57fa\u672c\u7684\u7761\u7720\u536b\u751f\u63d0\u793a\uff0c\u5e76\u51b3\u5b9a\u989d\u5916\u65e9\u70b9\u4e0a\u5e8a\u7761\u89c9\uff0c\u4ee5\u786e\u4fdd\u6211\u80fd\u5f25\u8865\u5931\u53bb\u7684\u7761\u7720\u3002\u7ed3\u679c\u9002\u5f97\u5176\u53cd\uff0c\u6211\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u624d\u6700\u7ec8\u5165\u7761\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u7684\u7761\u7720\u6323\u624e\u5f00\u59cb\u53d8\u5f97\u66f4\u52a0\u89c4\u5f8b\u3002\u6211\u4e0b\u8f7d\u4e86\u51e0\u6b3e\u51a5\u60f3\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e0c\u671b\u51a5\u60f3\u548c\u8046\u542c\u8212\u7f13\u7684\u58f0\u97f3\u80fd\u5e2e\u52a9\u6211\u7761\u5f97\u66f4\u597d\u3002\u6211\u751a\u81f3\u5728\u5165\u7761\u65f6\u95f4\u592a\u957f\u7684\u665a\u4e0a\u6c42\u52a9\u4e8e\u67dc\u53f0\u4e0a\u7684\u52a9\u7720\u5668\u3002\u7ed3\u679c\u597d\u574f\u53c2\u534a--\u6211\u4f1a\u66f4\u5feb\u5165\u7761\uff0c\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4f1a\u56de\u5230\u7761\u7720\u4e0d\u4f73\u7684\u72b6\u6001\u3002\n\u6211\u6700\u7ec8\u5c48\u670d\u4e86\uff0c\u51b3\u5b9a\u8bd5\u8bd5\u5904\u65b9\u836f\u3002\u6211\u8bfb\u4e86\u5f88\u591a\u5173\u4e8e\u5b83\u4eec\u7684\u4e66\uff0c\u7531\u4e8e\u5b83\u4eec\u7684\u957f\u671f\u526f\u4f5c\u7528\uff0c\u6211\u975e\u5e38\u4e0d\u60c5\u613f\u3002\u5728\u53bb\u770b\u533b\u751f\u7684\u65f6\u5019\uff0c\u6211\u95ee\u5979\u662f\u5426\u53ef\u4ee5\u7ed9\u6211\u5f00\u4e00\u4e9b\u5e2e\u52a9\u6211\u7761\u7720\u7684\u836f\u3002\u5979\u8bf4\u5979\u53ef\u4ee5\uff0c\u4f46\u4e0d\u4f1a\u662f\u836f\u7269\u6cbb\u7597\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5979\u63a8\u8350\u4e86CBT-I(\u5931\u7720\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5)\u6cbb\u7597\u5e08\u3002\nCBT-I\u662f\u4e00\u79cd\u4ee5\u8bc1\u636e\u4e3a\u57fa\u7840(\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u5f97\u5230\u8bc1\u5b9e)\u7684\u6280\u672f\uff0c\u7528\u4e8e\u6cbb\u7597\u7761\u7720\u95ee\u98983.\u6709\u4e24\u79cd\u9a71\u52a8\u529b\u8bf1\u5bfc\u7761\u7720-\u7761\u7720\u9a71\u52a8\u529b\u548c\u7cbe\u795e\u5524\u9192\u3002\u4f60\u7684\u7761\u7720\u9a71\u52a8\u529b\u5c31\u662f\u4f60\u4e0a\u5e8a\u7761\u89c9\u65f6\u611f\u89c9\u6709\u591a\u56f0/\u6709\u591a\u7d2f\u3002\u4f60\u7684\u7cbe\u795e\u5524\u9192\u662f\u5f53\u4f60\u4e0a\u5e8a\u7761\u89c9\u65f6\u4f60\u611f\u89c9\u5230\u7684\u5feb\u901f\u601d\u7ef4\u548c\u8b66\u89c9\u6027\u3002\u5f53\u4f60\u7684\u7761\u7720\u9a71\u52a8\u529b\u5f88\u9ad8\uff0c\u800c\u4f60\u7684\u5524\u9192\u6c34\u5e73\u8f83\u4f4e\u65f6\uff0c\u5c31\u66f4\u5bb9\u6613\u5165\u7761\u3002CBT-I\u89c4\u5b9a\u4e86\u4e00\u4e2a\u7761\u7720\u65f6\u95f4\u8868\uff0c\u4ee5\u786e\u4fdd\u4f60\u6709\u4e00\u4e2a\u9ad8\u7761\u7720\u9a71\u52a8\u529b\u3002\u5b83\u8fd8\u6559\u4f1a\u4f60\u51cf\u5c11\u62c5\u5fe7\u548c\u964d\u4f4e\u5524\u9192\u7684\u6280\u5de7\u3002\nCBT-I\u5bf9\u6cbb\u7597\u7761\u7720\u95ee\u9898\u975e\u5e38\u6709\u6548\u3002\u4e34\u5e8a\u8bd5\u9a8c\u8868\u660e\uff0c80%\u9075\u5faa\u826f\u597dCBT-I\u8ba1\u5212\u7684\u4eba\u57284\u53f7\u7ed3\u675f\u65f6\u4f1a\u6709\u6b63\u5e38\u7684\u7761\u7720\u3002\u8fd9\u4e00\u7ed3\u679c\u4e5f\u662f\u6c38\u4e45\u6027\u7684\uff0c\u4e0d\u50cf\u52a9\u7720\u5242\u53ea\u6709\u5728\u4f60\u670d\u7528\u5b83\u4eec\u7684\u60c5\u51b5\u4e0b\u624d\u6709\u6548\u3002\n\u6211\u53ea\u80fd\u5728\u6211\u7684\u6cbb\u7597\u5e08\u5f00\u7684\u7761\u7720\u7a97\u5185\u7761\u89c9\u3002\u8fd9\u4fdd\u8bc1\u4e86\u6211\u53ea\u6709\u5728\u7761\u7720\u9a71\u52a8\u529b\u9ad8\u7684\u65f6\u5019\u624d\u4e0a\u5e8a\u7761\u89c9\u3002\n\u6bcf\u6b21\u6211\u7761\u4e0d\u7740\u7684\u65f6\u5019\uff0c\u6211\u5fc5\u987b\u786e\u4fdd\u6211\u5728\u5e8a\u4e0a\u7684\u65f6\u95f4\u4e0d\u8d85\u8fc720\u5206\u949f\u3002\u8fd9\u6837\uff0c\u6211\u5c31\u4f1a\u4e0b\u610f\u8bc6\u5730\u91cd\u65b0\u8bad\u7ec3\u6211\u7684\u5934\u8111\uff0c\u4e0d\u8981\u628a\u6211\u7684\u5e8a\u4e0e\u6e05\u9192\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\u6211\u5f53\u65f6\u5927\u7ea6\u7761\u4e865\u4e2a\u5c0f\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u5b9a\u4e866\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u7a97\u53e3\uff0c\u8ba9\u6211\u53ef\u4ee5\u7761\u89c9(\u6211\u7684\u60c5\u51b5\u662f\u51cc\u66681\u70b9\u52307\u70b9)\u3002\u6211\u8bb0\u4e0b\u4e86\u6211\u7761\u4e86\u591a\u4e45\uff0c\u534a\u591c\u9192\u4e86\u591a\u4e45\uff0c\u7761\u4e86\u591a\u4e45\u3002\u6b64\u6570\u636e\u8bb0\u5f55\u5230\u6700\u8fd1\u768415\u5206\u949f\uff0c\u5e76\u81ea\u884c\u62a5\u544a\u3002\u5728\u6bcf\u4e2a\u5468\u672b\uff0c\u6211\u7684\u6cbb\u7597\u5e08\u4f1a\u6839\u636e\u524d\u4e00\u5468\u7684\u6570\u636e\u6539\u53d8\u6211\u7684\u7761\u7720\u65f6\u95f4\u8868\u3002\u6ce8\uff1a\u6e05\u9192\u65f6\u95f4\u662f\u6211\u5165\u7761\u7684\u65f6\u95f4+\u6211\u7684\u591c\u95f4\u9192\u6765\u65f6\u95f4\u5728\u7b2c\u4e00\u5468\u7ed3\u675f\u65f6\uff0c\u6211\u7684\u7761\u7720\u548c\u4ee5\u524d\u5dee\u4e0d\u591a\u3002\u4e0d\u8fc7\uff0c\u6211\u665a\u4e0a\u9192\u7740\u7684\u65f6\u95f4\u51cf\u5c11\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002\u6211\u5165\u7761\u7684\u901f\u5ea6\u66f4\u5feb\u4e86\uff0c\u88ab\u6253\u6270\u7684\u7761\u7720\u4e5f\u66f4\u5c11\u4e86\u3002\u6211\u4eec\u51b3\u5b9a\u5728\u7b2c\u4e8c\u5468\u575a\u6301\u76f8\u540c\u7684\u7761\u7720\u65f6\u95f4\u8868\u3002\u5728\u8fd9\u4e2a\u5468\u672b\uff0c\u6211\u7684\u7761\u7720\u589e\u52a0\u4e86\uff0c\u800c\u4e14\u6211\u4e00\u76f4\u9192\u7740\u4e0d\u5230\u4e00\u4e2a\u5c0f\u65f6\u3002\u6211\u4eec\u51b3\u5b9a\u5728\u7b2c\u4e09\u5468\u628a\u6211\u7684\u7761\u7720\u65f6\u95f4\u5ef6\u957f15\u5206\u949f\u3002\u6211\u4eec\u9075\u5faa\u540c\u6837\u7684\u89c4\u5219\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u91cc\u8981\u4e48\u6269\u5927\u7761\u7720\u65f6\u95f4\uff0c\u8981\u4e48\u4fdd\u6301\u76f8\u540c\u7684\u7761\u7720\u65f6\u95f4\u3002\u5728\u4e3a\u671f10\u5468\u7684\u9879\u76ee\u7ed3\u675f\u65f6\uff0c\u6211\u6bcf\u665a\u7684\u7761\u7720\u65f6\u95f4\u8d85\u8fc77\u5c0f\u65f6\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u6ca1\u6709\u6574\u5929\u62c5\u5fc3\u6211\u7684\u7761\u7720\u3002\nCBT-I\u5e76\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7761\u7720\u65f6\u95f4\u8868\u5f88\u96be\u9075\u5faa\uff0c\u7ed3\u679c\u4e5f\u4e0d\u662f\u7acb\u7aff\u89c1\u5f71\u7684\u3002\u8fd9\u9700\u8981\u65f6\u95f4\u548c\u7cbe\u529b\uff0c\u4f46\u6c38\u4e45\u6539\u5584\u7761\u7720\u7684\u56de\u62a5\u662f\u975e\u5e38\u503c\u5f97\u7684\u3002\u5982\u679c\u4f60\u51b3\u5b9a\u8bd5\u4e00\u8bd5\uff0c\u8ba9\u6211\u77e5\u9053\u5b83\u662f\u5426\u80fd\u5e2e\u52a9\u4f60\u6539\u5584\u7761\u7720\u3002\u5728\u8fd9\u91cc\uff0c\u795d\u4f60\u65e9\u65e5\u7761\u5f97\u66f4\u597d\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eCBTI\u548c\u5176\u4ed6\u884c\u4e3a\u7597\u6cd5\u6539\u5584\u7761\u7720\u7684\u6280\u672f\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\uff01", "note_en": "I&#39;d done everything right, yet it was 2 am and I still couldn&#39;t sleep. I had meditated for 30 minutes before I went to bed. I even took a couple of melatonin pills right after to be sure. Yet, here I was wide awake dreading how exhausted I would be the next day at work.\n My problem wasn&#39;t unique. In America, one in every 10 adults will experience chronic insomnia  1. It takes just one poor night of sleep to devolve into long term sleeping problems. This is because the majority of sleeping problems stem from anxiety and worry  2.  The more you worry about not getting enough sleep, the worse your sleep gets.\n For me, my sleeping issues began right out of college. I had started a job as a software engineer and I was starting to feel the pressure. I had a couple of big deadlines coming up and I found myself tossing and turning unable to sleep one night. My mind kept racing, thinking about all the work I had until I finally fell asleep.\n I thought that was it \u2014 an abnormal night, but then it happened again. This time, my outlook changed. I started worrying about how not getting enough sleep would affect my day. I looked up basic sleep hygiene tips online and decided to go to bed extra early to make sure I made up for lost sleep. This ended up backfiring and it took a few hours before I could finally sleep.\n At this point, my sleeping struggles started becoming more regular. I downloaded a couple of meditation apps in the hopes that meditating and listening to soothing sounds would help me sleep better. I even resorted to over the counter sleeping aids on nights when it took me too long to fall asleep.  The results were mixed \u2014 I&#39;d fall asleep faster but over time I&#39;d revert back to having poor sleep.\n I finally caved and decided to try prescription medication. I had read a lot about them and was very reluctant because of their long term side effects. On a visit to my doctor, I asked her if she could prescribe me something to help me sleep. She said she said she could, but it wasn&#39;t going to be medication. Instead, she put in a referral to a CBT-I (Cognitive Behavioral Therapy for Insomnia) therapist.\n CBT-I is an evidence-based (proven in clinical trials) technique used to treat sleep problems  3.  Two driving forces induce sleep \u2014 sleep drive &amp; mental arousal. Your sleep drive is how sleepy/tired you feel when going to bed. Your mental arousal is the racing thoughts and alertness you feel when you go to bed. When your sleep drive is high and your arousal levels are low; it is easier to fall asleep. CBT-I prescribes a sleep schedule that ensures you have a high sleep drive. It also teaches you techniques to worry less and reduce your arousal.\n CBT-I is extremely effective in treating sleeping problems. Clinical trials have shown that 80% of people that follow a good CBT-I program will have normal sleep by the end  4. The results are also permanent, unlike sleeping aids which are effective only as long as you are taking them  5.\n  I could only sleep within the sleep window my therapist prescribed. This ensured that I only went to bed when my sleep drive was high.\n Every time I couldn&#39;t sleep, I had to make sure I didn&#39;t stay in bed for over 20 minutes. This way, I would subconsciously re-train my mind to not associate my bed with wakefulness  6.\n I was sleeping around 5 hours at the time, so we set a 6 hour window within which I could sleep (1am - 7am in my case). I kept a log of how long it took me to sleep, how long I was awake in the middle of the night and how long I slept. This data was recorded to the closest 15th minute and is self reported. At the end of each week, my therapist would alter my sleep schedule based on the previous week&#39;s data.  Note: Time awake is the time it took me to fall asleep + my night time awakenings    At the end of week 1, I was sleeping about the same as I was before. My time awake at night though had fallen by an hour. I was falling asleep faster and I was having less interrupted sleep. We decided to stick to the same sleep schedule for week 2.    At the end of this week, my sleep had increased and I was consistently awake for less than an hour. We decided to expand my window by 15 minutes for week 3.    We followed the same rules and either expanded or kept the same sleeping window for the next few weeks.     At the end of the 10 week program, I was sleeping over 7 hours a night. More importantly, I wasn&#39;t spending my days worrying about my sleep.\n CBT-I isn&#39;t an easy solution. The sleep schedules are hard to follow and the results aren&#39;t instantaneous. It takes time and effort but the reward of permanently improved sleep is well worth it. Let me know if you do decide to try it and if it helps you improve your sleep. Here&#39;s to hoping you get better sleep soon.\n  If you&#39;d like to know more about CBTI and other behavioral therapy techniques to improve sleep, check out our  website!", "posttime": "2020-05-25 10:46:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6218\u80dc,beating,\u7761\u7720", "title": "\u6c38\u4e45\u6218\u80dc\u6211\u7684\u5931\u7720", "title_en": "Permanently Beating My Insomnia", "transed": 1, "url": "https://www.sleepedy.com/articles/insomniac-journey/", "via": "", "real_tags": ["\u6218\u80dc", "beating", "\u7761\u7720"]}, {"category": "", "categoryclass": "", "imagename": "f32a1ad2bfb1b15c3a9dbf9dda7131f0.png", "infoid": 1003594, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u63d0\u4f9b\u4e86\u660e\u786e\u800c\u7b80\u5355\u7684\u6b65\u9aa4\u6765\u5e2e\u52a9\u5e0c\u671b\u91c7\u7528\u5a01\u80c1\u5efa\u6a21\u7684\u56e2\u961f\u3002\u5a01\u80c1\u5efa\u6a21\u662f\u8bbe\u8ba1\u5b89\u5168\u7cfb\u7edf\u7684\u4e00\u79cd\u57fa\u4e8e\u98ce\u9669\u7684\u65b9\u6cd5\u3002\u5b83\u7684\u57fa\u7840\u662f\u8bc6\u522b\u5a01\u80c1\uff0c\u4ee5\u4fbf\u5236\u5b9a\u7f13\u89e3\u63aa\u65bd\u3002\u968f\u7740\u7f51\u7edc\u5b89\u5168\u98ce\u9669\u7684\u589e\u52a0\u548c\u4f01\u4e1a\u5bf9\u5176\u8d23\u4efb\u610f\u8bc6\u7684\u589e\u5f3a\uff0c\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u9700\u8981\u6709\u6548\u7684\u65b9\u6cd5\u6765\u5c06\u5b89\u5168\u6027\u6784\u5efa\u5230\u8f6f\u4ef6\u4e2d\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4ed6\u4eec\u7ecf\u5e38\u5f88\u96be\u91c7\u7528\u5a01\u80c1\u5efa\u6a21\u3002\u8bb8\u591a\u65b9\u6cd5\u9700\u8981\u590d\u6742\u7684\u3001\u8be6\u5c3d\u7684\u524d\u671f\u5206\u6790\uff0c\u8fd9\u4e0e\u73b0\u4ee3\u8f6f\u4ef6\u56e2\u961f\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u5339\u914d\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u505c\u6b62\u4e00\u5207\u6765\u521b\u5efa\u5b8c\u7f8e\u7684\u5a01\u80c1\u6a21\u578b\uff0c\u6211\u9f13\u52b1\u56e2\u961f\u4ece\u7b80\u5355\u5f00\u59cb\uff0c\u4ece\u90a3\u91cc\u5f00\u59cb\u6210\u957f\u3002\n\u60a8\u6b63\u5728\u6784\u5efa\u7684\u8f6f\u4ef6\u7684\u5b89\u5168\u8981\u6c42\u662f\u4ec0\u4e48\uff1f\u627e\u5230\u4e00\u4e2a\u597d\u7684\u7b54\u6848\u51fa\u4eba\u610f\u6599\u5730\u590d\u6742\u3002\u60a8\u5e0c\u671b\u5728\u7cfb\u7edf\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u9632\u6b62\u7f51\u7edc\u635f\u5931\u3002\u4f46\u662f\uff0c\u4ea4\u4ed8\u8fd9\u4e00\u7ed3\u679c\u7684\u5177\u4f53\u6545\u4e8b\u3001\u9a8c\u6536\u6807\u51c6\u548c\u6280\u672f\u8303\u56f4\u662f\u4ec0\u4e48\uff1f\u8fd9\u5c31\u662f\u672c\u6307\u5357\u6240\u8981\u89e3\u51b3\u7684\u96be\u9898\u3002\n\u6709\u4e9b\u65e0\u76ca\u7684\u662f\uff0c\u7f51\u7edc\u4e13\u5bb6\u7ecf\u5e38\u4f1a\u95ee\uff1a\u4f60\u7684\u5a01\u80c1\u6a21\u578b\u662f\u4ec0\u4e48\uff1f\u8fd9\u4e2a\u7b54\u6848\u975e\u5e38\u4e0d\u5177\u4f53\u548c\u4e0d\u786e\u5b9a\uff0c\u5f88\u50cf\u662f\u8f6c\u8fc7\u8eab\u6765\u8bf4\u8fd9\u8981\u770b\u60c5\u51b5\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5a01\u80c1\u6a21\u578b\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\u662f\u6666\u6da9\u96be\u61c2\u7684\u6280\u672f\u672f\u8bed\uff0c\u589e\u52a0\u4e86\u4e0d\u5fc5\u8981\u7684\u795e\u79d8\u6027\u3002\u5982\u679c\u4f60\u7814\u7a76\u5a01\u80c1\u5efa\u6a21\u7684\u4e3b\u9898\uff0c\u4fe1\u606f\u53ef\u80fd\u4f1a\u4e0d\u582a\u91cd\u8d1f\uff0c\u800c\u4e14\u5f88\u96be\u91c7\u53d6\u884c\u52a8\u3002\u5bf9\u4e8e\u5a01\u80c1\u6a21\u578b\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u6ca1\u6709\u8fbe\u6210\u4e00\u81f4\u7684\u6807\u51c6\u3002\n\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u5a01\u80c1\u6a21\u578b\uff0c\u4ec0\u4e48\u662f\u5a01\u80c1\u5efa\u6a21\uff1f\u8fd9\u4e2a\u6982\u5ff5\u7684\u6838\u5fc3\u975e\u5e38\u7b80\u5355\u3002\u5b83\u662f\u5173\u4e8e\u4e86\u89e3\u4e0e\u7f51\u7edc\u5b89\u5168\u635f\u5931\u76f8\u5173\u7684\u539f\u56e0\u3002\u5b83\u662f\u5173\u4e8e\u5229\u7528\u8fd9\u79cd\u7406\u89e3\u4ee5\u57fa\u4e8e\u98ce\u9669\u7684\u65b9\u5f0f\u4fdd\u62a4\u60a8\u7684\u7cfb\u7edf\u3002\u8fd9\u610f\u5473\u7740\u4ece\u4f60\u7684\u7279\u5b9a\u60c5\u51b5\u4e0b\u7684\u6f5c\u5728\u5a01\u80c1\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u9075\u5faa\u6e05\u5355\u3002\n\u4e86\u89e3\u7cfb\u7edf\u7684\u5a01\u80c1\u6a21\u578b\u5e76\u975e\u6613\u4e8b\u3002\u60a8\u53ef\u4ee5\u60f3\u8c61\u5230\u5bf9\u4efb\u4f55\u7cfb\u7edf\u7684\u5a01\u80c1\u90fd\u662f\u65e0\u9650\u7684\uff0c\u800c\u4e14\u5176\u4e2d\u5f88\u591a\u90fd\u6709\u53ef\u80fd\u53d1\u751f\u3002\u5a01\u80c1\u7684\u73b0\u5b9e\u662f\u8bb8\u591a\u539f\u56e0\u7efc\u5408\u5728\u4e00\u8d77\u3002\u7f51\u7edc\u5a01\u80c1\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u3001\u751a\u81f3\u662f\u6df7\u4e71\u7684\u65b9\u5f0f\u8fde\u9501\u3002\u4e0e\u6587\u5316\u3001\u6d41\u7a0b\u548c\u6280\u672f\u6709\u5173\u7684\u56e0\u7d20\u90fd\u8d77\u5230\u4e86\u4f5c\u7528\u3002\u8fd9\u79cd\u590d\u6742\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u662f\u7f51\u7edc\u5b89\u5168\u95ee\u9898\u7684\u6839\u6e90\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u5f88\u96be\u5c31\u5b89\u5168\u9700\u6c42\u8fbe\u6210\u4e00\u81f4\u7684\u539f\u56e0\u3002\n\u771f\u5b9e\u5165\u4fb5\u80cc\u540e\u7684\u6545\u4e8b\u8868\u660e\uff0c\u5a01\u80c1\u548c\u56e0\u679c\u5173\u7cfb\u53ef\u80fd\u662f\u591a\u4e48\u590d\u6742-\u901a\u5e38\u7ec6\u8282\u662f\u4ee4\u4eba\u9707\u60ca\u7684\u3002NotPetya\u7684\u6545\u4e8b\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u6c11\u65cf\u56fd\u5bb6\u6076\u610f\u8f6f\u4ef6\u7531\u4e00\u4e2a\u540d\u4e3a\u5f71\u5b50\u7ecf\u7eaa\u4eba(ShadowBrokers)\u7684\u7ec4\u7ec7\u8fdb\u884c\u4ea4\u6613\uff0c\u7136\u540e\u88ab\u6b66\u5668\u5316\u3002\u6700\u7ec8\u7684\u5f71\u54cd\u51e0\u4e4e\u662f\u968f\u673a\u5730\u7ed9\u7ec4\u7ec7\u9020\u6210\u4e86\u91cd\u5927\u635f\u5931\u3002\u8239\u8fd0\u516c\u53f8\u7c73\u5c14\u65af\u514b(Mearsk)\u4e0d\u5f97\u4e0d\u505c\u6b62\u8239\u8fd0\u8fdb\u5ea6\u3002\u7cd6\u679c\u5236\u9020\u5546\u5409\u767e\u5229\u4e0d\u5f97\u4e0d\u505c\u6b62\u751f\u4ea7\u5de7\u514b\u529b\u3002\u4ed6\u4eec\u5404\u81ea\u7684\u5a01\u80c1\u6a21\u578b\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u6837\u7684\u5f00\u53d1\u56e2\u961f\u80fd\u60f3\u8c61\u51fa\u5982\u6b64\u590d\u6742\u7684\u56e0\u679c\u5173\u7cfb\u548c\u4fa7\u51f8\u635f\u4f24\u94fe\u5462\uff1f\u4f60\u7684\u56e2\u961f\u9700\u8981\u591a\u957f\u65f6\u95f4\u6765\u6a21\u62df\u8fd9\u4e00\u70b9\uff0c\u4ee5\u53ca\u5176\u4ed6\u6240\u6709\u5371\u9669\u7684\u53ef\u80fd\u6027\uff1f\n\u5a01\u80c1\u5efa\u6a21\u662f\u5426\u8fc7\u4e8e\u590d\u6742\u800c\u6ca1\u6709\u4ef7\u503c\uff1f\u5f00\u53d1\u4eba\u5458\u662f\u5426\u5e94\u8be5\u53ea\u9075\u5faa\u4e00\u4efd\u6e05\u5355\uff0c\u7948\u7977\u4ed6\u4eec\u80fd\u8d70\u8fd0\u5462\uff1f\u6000\u7591\u53ef\u80fd\u662f\u5065\u5eb7\u7684\uff0c\u4f46\u6211\u76f8\u4fe1\uff0c\u5b66\u4e60\u5a01\u80c1\u5efa\u6a21\u662f\u5f00\u53d1\u4eba\u5458\u7684\u4e00\u9879\u5173\u952e\u6280\u80fd\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u6b63\u786e\u7684\u65b9\u6cd5\u548c\u5de5\u5177\u6765\u9a6f\u670d\u590d\u6742\u6027\u3002\u672c\u6307\u5357\u5c31\u662f\u672c\u7740\u8fd9\u79cd\u7cbe\u795e\u7f16\u5199\u7684\uff0c\u5e76\u4ece\u4e09\u4e2a\u7406\u5ff5\u5f00\u59cb\uff0c\u8fd9\u4e09\u4e2a\u7406\u5ff5\u4f7f\u8bc6\u522b\u826f\u597d\u7684\u3001\u57fa\u4e8e\u98ce\u9669\u7684\u5b89\u5168\u9700\u6c42\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u3002\n\u7b2c\u4e00\u4e2a\u5efa\u8bae\u662f\uff0c\u81f3\u5c11\u5728\u4e00\u5f00\u59cb\uff0c\u4e3b\u8981\u5173\u6ce8\u6280\u672f\u5a01\u80c1\uff0c\u800c\u4e0d\u662f\u5e7f\u6cdb\u7684\u5a01\u80c1\u3002\n\u5e7f\u6cdb\u7684\u5a01\u80c1\u548c\u5a01\u80c1\u6765\u6e90\u5305\u62ec\u9ed1\u5ba2\u7ec4\u7ec7\u3001\u4e0d\u826f\u884c\u4e3a\u8005\u3001\u5e7b\u60f3\u7834\u706d\u7684\u5458\u5de5\u3001\u4eba\u4e3a\u9519\u8bef\u6216\u65b0\u8815\u866b\u6837\u6076\u610f\u8f6f\u4ef6\u7684\u6d41\u884c\u3002\u8fd9\u7c7b\u539f\u56e0\u6765\u81ea\u4e16\u754c\u5404\u5730\uff0c\u6781\u5177\u591a\u6837\u6027\u3001\u4e0d\u786e\u5b9a\u6027\u548c\u4e0d\u53ef\u9884\u6d4b\u6027\u3002\u5b83\u4eec\u4e0e\u60a8\u7684\u7cfb\u7edf\u4e3a\u60a8\u7684\u7ec4\u7ec7\u548c\u5176\u4ed6\u4eba\u63d0\u4f9b\u7684\u6570\u636e\u548c\u670d\u52a1\u7684\u4ef7\u503c\u76f8\u5173\u3002\u8fd9\u4e9b\u90fd\u662f\u5f88\u5bb9\u6613\u4e0e\u975e\u6280\u672f\u4eba\u5458\u8c08\u8bba\u7684\u620f\u5267\u6027\u98ce\u9669\u3002\n\u6280\u672f\u5a01\u80c1\u548c\u6f0f\u6d1e\u8981\u7ec6\u7c92\u5ea6\u5f97\u591a\uff0c\u4f8b\u5982\u8f6f\u4ef6\u4e2d\u7684\u7279\u5b9a\u5f31\u70b9\u6216\u7f3a\u5c11\u52a0\u5bc6\u6216\u6388\u6743\u7b49\u5b89\u5168\u63a7\u5236\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u5a01\u80c1\u6765\u81ea\u60a8\u7684\u56e2\u961f\u6b63\u5728\u6784\u5efa\u7684\u7cfb\u7edf\u4e2d\u56fa\u6709\u7684\u7ed3\u6784\u548c\u6570\u636e\u6d41\u3002\u901a\u5e38\uff0c\u4e00\u5806\u6280\u672f\u5a01\u80c1\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5141\u8bb8\u5e7f\u6cdb\u7684\u5a01\u80c1\u5f71\u54cd\u60a8\u7684\u7cfb\u7edf\u3002\n\u901a\u8fc7\u9075\u5faa\u672c\u6307\u5357\uff0c\u60a8\u5c06\u4e3b\u8981\u4e13\u6ce8\u4e8e\u67e5\u627e\u6280\u672f\u5a01\u80c1\u3002\u8fd9\u6709\u52a9\u4e8e\u7b80\u5316\u7cbe\u5316\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u786e\u5b9a\u7cfb\u7edf\u7684\u7ed3\u6784\u548c\u6570\u636e\u6d41\u3002\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4ece\u60a8\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7684\u73b0\u6709\u4f18\u52bf\u51fa\u53d1\uff0c\u4e86\u89e3\u6280\u672f\u77e5\u8bc6\u3002\u4e0e\u60a8\u53ef\u80fd\u77e5\u4e4b\u751a\u5c11\u7684\u5a01\u80c1\u6e90\u9ad8\u7ea7\u98ce\u9669\u5206\u6790\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u8d77\u70b9\u3002\n\u4e0d\u8fc7\uff0c\u4e0d\u8981\u5b8c\u5168\u5fd8\u8bb0\u5927\u5c40\u3002\u5bf9\u53ef\u80fd\u5b58\u5728\u7684\u5e7f\u6cdb\u5a01\u80c1\u7684\u52a1\u5b9e\u548c\u57fa\u4e8e\u98ce\u9669\u7684\u7406\u89e3\u6709\u52a9\u4e8e\u4f18\u5148\u8003\u8651\u4e00\u79cd\u6280\u672f\u5a01\u80c1\u800c\u4e0d\u662f\u53e6\u4e00\u79cd\u5a01\u80c1\u3002\u4f8b\u5982\uff0c\u7b80\u5355\u7684\u4eba\u4e3a\u9519\u8bef\u901a\u5e38\u6bd4\u6c11\u65cf\u56fd\u5bb6\u653b\u51fb\u66f4\u6709\u53ef\u80fd(\u53c2\u89c1\u4fa7\u680f)\u3002\u8fd9\u79cd\u60f3\u6cd5\u53ef\u4ee5\u7528\u6765\u9009\u62e9\u9996\u5148\u5f00\u59cb\u68c0\u67e5\u7684\u5b89\u5168\u8303\u56f4\u3002\u5f53\u60a8\u9996\u5148\u4e13\u6ce8\u4e8e\u8bc6\u522b\u6280\u672f\u5a01\u80c1\u65f6\uff0c\u5c31\u66f4\u5bb9\u6613\u5c06\u5b83\u4eec\u4e0e\u66f4\u5e7f\u6cdb\u7684\u5a01\u80c1\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u8bc1\u660e\u4fee\u590d\u548c\u5176\u4ed6\u63a7\u5236\u662f\u5408\u7406\u7684\u3002\n\u7b2c\u4e8c\u4e2a\u5efa\u8bae\u662f\u91c7\u7528\u534f\u4f5c\u7684\u3001\u57fa\u4e8e\u56e2\u961f\u7684\u65b9\u6cd5\u3002\u786e\u5b9a\u5b89\u5168\u9700\u6c42\u5e76\u975e\u6613\u4e8b\uff0c\u591a\u6837\u5316\u7684\u89c6\u89d2\u5c06\u5e26\u6765\u66f4\u597d\u7684\u51b3\u7b56\u3002\u603b\u4f1a\u6709\u53e6\u4e00\u4e2a\u6f0f\u6d1e\u6216\u6280\u672f\u5a01\u80c1\u9700\u8981\u53d1\u73b0\uff0c\u56e0\u6b64\u5c06\u5404\u79cd\u4e0d\u540c\u7684\u89c2\u70b9\u5e26\u5230\u7ec3\u4e60\u4e2d\u4f1a\u4f7f\u5934\u8111\u98ce\u66b4\u53d8\u5f97\u66f4\u52a0\u5065\u58ee\u3002\u5b83\u8fd8\u589e\u52a0\u4e86\u60a8\u8bc6\u522b\u6700\u91cd\u8981\u5a01\u80c1\u7684\u53ef\u80fd\u6027\u3002\u7ec4\u4e2d\u7684\u5a01\u80c1\u5efa\u6a21\u6709\u52a9\u4e8e\u4ece\u6574\u4f53\u4e0a\u89e3\u51b3\u98ce\u9669\uff0c\u5e76\u5e2e\u52a9\u6574\u4e2a\u56e2\u961f\u5b66\u4e60\u5982\u4f55\u6709\u6548\u5730\u601d\u8003\u548c\u8c08\u8bba\u5b89\u5168\u95ee\u9898\u3002\n\u4ece\u98ce\u9669\u7ba1\u7406\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8ba9\u4ea7\u54c1\u6240\u6709\u8005\u53c2\u4e0e\u8fdb\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a\u3002\u4ea7\u54c1\u6240\u6709\u8005\u5bf9\u7528\u6237\u884c\u4e3a\u548c\u4e1a\u52a1\u73af\u5883\u7684\u6d1e\u5bdf\u529b\u662f\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u6240\u7f3a\u4e4f\u7684\u3002\u4ed6\u4eec\u5e94\u8be5\u4e86\u89e3\u7279\u5b9a\u670d\u52a1\u5bf9\u4e1a\u52a1\u7684\u4ef7\u503c\uff0c\u4ee5\u53ca\u5982\u679c\u6570\u636e\u6cc4\u9732\u6216\u4e22\u5931\u4f1a\u5e26\u6765\u7684\u5f71\u54cd\u3002\u5f53\u7f51\u7edc\u5b89\u5168\u635f\u5931\u53d1\u751f\u65f6\uff0c\u5c31\u662f\u4e1a\u52a1\u635f\u5931\u3002\u5982\u679c\u6700\u574f\u7684\u60c5\u51b5\u786e\u5b9e\u53d1\u751f\u4e86\uff0c\u90a3\u4e48\u539f\u56e0\u5f88\u53ef\u80fd\u7279\u5b9a\u4e8e\u60a8\u7684\u7ec4\u7ec7\u548c\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u6280\u672f\u3002\u7f51\u7edc\u5b89\u5168\u95ee\u9898\u4e0d\u4ec5\u4ec5\u662f\u6280\u672f\u4e0a\u7684\u95ee\u9898\uff0c\u5b83\u8fd8\u5173\u7cfb\u5230\u505a\u51fa\u6b63\u786e\u7684\u6295\u8d44\u51b3\u7b56\u6765\u4fdd\u62a4\u4e1a\u52a1\u3002\n\u7b2c\u4e09\u4e2a\u5efa\u8bae\u662f\u4ece\u5c11\u91cf\u4e14\u7ecf\u5e38\u7684\u5a01\u80c1\u5efa\u6a21\u5f00\u59cb\u3002\u4e0e\u56e2\u961f\u7684\u6bcf\u4e00\u6b21\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bae\u90fd\u5e94\u8be5\u8db3\u591f\u77ed\uff0c\u8db3\u591f\u96c6\u4e2d\uff0c\u4ee5\u4fbf\u80fd\u591f\u5feb\u901f\u6d88\u5316\u4e3a\u53ef\u4ee5\u4ea4\u4ed8\u7684\u5185\u5bb9\u3002\u4ece\u5206\u6790\u7cfb\u7edf\u4e2d\u53ef\u80fd\u7684\u6700\u8584\u90e8\u5206\u5f00\u59cb\uff1b\u5c31\u662f\u60a8\u73b0\u5728\u6b63\u5728\u5904\u7406\u7684\u5185\u5bb9\u3002\u4e0e\u5176\u8bd5\u56fe\u9884\u5148\u5206\u6790\u6574\u4e2a\u7cfb\u7edf\uff0c\u4e0d\u5982\u4e00\u6b21\u4e00\u70b9\u70b9\u5730\u901a\u8fc7\u5a01\u80c1\u5efa\u6a21\u6765\u5efa\u7acb\u56e2\u961f\u7684\u808c\u8089\u8bb0\u5fc6\u3002\n\u9700\u8981\u5b8c\u5168\u6307\u5b9a\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u5b9e\u8df5\u4e0e\u654f\u6377\u56e2\u961f\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u5339\u914d\u3002\u6ca1\u6709\u7406\u7531\u8ba4\u4e3a\u5a01\u80c1\u5efa\u6a21\u5fc5\u987b\u662f\u8be6\u5c3d\u7684\u524d\u671f\u5206\u6790\u3002\u56e2\u961f\u7ecf\u5e38\u88ab\u5168\u9762\u4e14\u9ad8\u5ea6\u7ed3\u6784\u5316\u7684\u5a01\u80c1\u5efa\u6a21\u65b9\u6cd5\u6df9\u6ca1[1]\u3002\u6211\u89c1\u8fc7\u56e2\u961f\u5c1d\u8bd5\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u5728\u8bc6\u522b\u51fa\u4efb\u4f55\u771f\u6b63\u7684\u5a01\u80c1\u4e4b\u524d\u5c31\u6ca1\u6709\u65f6\u95f4\u548c\u8010\u5fc3\u4e86-\u66f4\u4e0d\u7528\u8bf4\u4ea4\u4ed8\u4fee\u590d\u4e86\uff01\n\u4e0e\u5176\u521b\u5efa\u548c\u7ef4\u62a4\u8be6\u5c3d\u7684\u5a01\u80c1\u6a21\u578b\u6587\u6863\uff0c\u4e0d\u5982\u5c11\u4e14\u7ecf\u5e38\u5730\u8fdb\u884c\u5a01\u80c1\u5efa\u6a21\u3002\u5f53\u60a8\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5de5\u4f5c\u65f6\uff0c\u6bcf\u4e2a\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u90fd\u5f88\u5c0f\uff0c\u5f71\u54cd\u5f88\u5c0f\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u7684\u7d2f\u79ef\u6548\u679c\u5177\u6709\u5de8\u5927\u7684\u5f71\u54cd\u3002\u5f53\u4f60\u77e5\u9053\u4f60\u4f1a\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\u90fd\u8fd9\u6837\u505a\u65f6\uff0c\u5c31\u4e0d\u4f1a\u6709\u90a3\u4e48\u591a\u7684\u52a8\u673a\u53bb\u5c1d\u8bd5\u4e00\u6b21\u505a\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u800c\u4f1a\u6709\u66f4\u591a\u7684\u52a8\u673a\u53bb\u4f18\u5148\u5904\u7406\u73b0\u5728\u6700\u91cd\u8981\u7684\u5de5\u4f5c\u3002\n\u672c\u6307\u5357\u7684\u8fd9\u4e00\u90e8\u5206\u5c06\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u8be6\u7ec6\u548c\u5177\u4f53\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u8ba1\u5212\u4e0e\u60a8\u7684\u56e2\u961f\u4e00\u8d77\u5f00\u59cb\u5a01\u80c1\u5efa\u6a21\u3002\n\u9996\u5148\u8981\u4ecb\u7ecd\u7684\u662f\u4e00\u79cd\u7b80\u5355\u7075\u6d3b\u7684\u5a01\u80c1\u5efa\u6a21\u7ed3\u6784[2]\u3002\u8fd9\u662f\u57fa\u4e8e\u4e09\u4e2a\u5173\u952e\u95ee\u9898\u3002\u5c06\u8fd9\u4e2a\u7ed3\u6784\u7262\u8bb0\u5728\u8bb0\u5fc6\u4e2d\u662f\u6709\u5e2e\u52a9\u7684\u3002\u65e0\u8bba\u4f55\u65f6\u9700\u8981\u8bc4\u4f30\u5a01\u80c1\uff0c\u60a8\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u95ee\u9898\u7ed3\u6784\u4f5c\u4e3a\u6307\u5bfc\u3002\u5c31\u50cf\u9a91\u81ea\u884c\u8f66\u4e00\u6837\uff0c\u4e00\u65e6\u4f60\u638c\u63e1\u4e86\u57fa\u672c\u6280\u80fd\uff0c\u4f60\u5c31\u80fd\u591f\u5e94\u7528\u548c\u53d1\u5c55\u8fd9\u4e9b\u6280\u80fd\u3002\n\u672c\u6307\u5357\u9075\u5faa\u4e09\u4e2a\u95ee\u9898\u7ed3\u6784\u3002\u5728\u6bcf\u4e2a\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u4e2d\uff0c\u60a8\u5e94\u8be5\u82b1\u8d39\u5927\u7ea6\u4e09\u5206\u4e4b\u4e00\u7684\u65f6\u95f4\u56de\u7b54\u6bcf\u4e2a\u95ee\u9898\u3002\u90a3\u4e48\u4f60\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u6709\u7528\u7684\u7ed3\u679c\u3002\u672c\u6307\u5357\u7684\u5176\u4f59\u90e8\u5206\u5c06\u628a\u8fd9\u4e00\u57fa\u672c\u7ed3\u6784\u5206\u89e3\u4e3a\u66f4\u8be6\u7ec6\u7684\u6b65\u9aa4\u3001\u6307\u9488\u548c\u89e3\u91ca\uff0c\u4ee5\u5e2e\u52a9\u60a8\u6210\u529f\u8fd0\u884c\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u3002\n\u5728\u8fd0\u884c\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5f04\u6e05\u695a\u4e00\u4e9b\u4e8b\u60c5\u3002\u4ee5\u4e0b\u51e0\u70b9\u5e94\u8be5\u4f1a\u5e2e\u52a9\u4f60\u505a\u597d\u8ba1\u5212\u3002\n\u5c1d\u8bd5\u8ba9\u6574\u4e2a\u4ea4\u4ed8\u56e2\u961f\u53c2\u4e0e\u6bcf\u4e00\u6b21\u4f1a\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e2\u6709\u6280\u672f\u89d2\u8272\uff0c\u4e5f\u6709\u975e\u6280\u672f\u89d2\u8272\u3002\u8fd9\u4e3a\u8c08\u5224\u684c\u5e26\u6765\u4e86\u66f4\u591a\u7684\u89c6\u89d2\u548c\u60f3\u6cd5\uff0c\u4f46\u4e5f\u5efa\u7acb\u4e86\u5171\u540c\u7684\u7406\u89e3\u3002\u6392\u9664\u4ea7\u54c1\u6240\u6709\u8005\u3001\u4e1a\u52a1\u5206\u6790\u5e08\u548c\u4ea4\u4ed8\u7ecf\u7406\u53ef\u80fd\u610f\u5473\u7740\u4fee\u590d\u5b89\u5168\u6f0f\u6d1e\u7684\u5de5\u4f5c\u6ca1\u6709\u5b8c\u6210\uff0c\u56e0\u4e3a\u5176\u4ef7\u503c\u5c06\u4e0d\u4f1a\u88ab\u5e7f\u6cdb\u7406\u89e3\u3002\n\u60a8\u7edd\u5bf9\u4e0d\u9700\u8981\u5b89\u5168\u4e13\u5bb6\u6765\u5f00\u59cb\u5a01\u80c1\u5efa\u6a21\u548c\u53d1\u73b0\u6709\u4ef7\u503c\u7684\u5b89\u5168\u8303\u56f4\u3002\u4f46\u662f\uff0c\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bae\u662f\u4e0e\u4e13\u5bb6\u3001\u5b89\u5168\u67b6\u6784\u5e08\u6216\u60a8\u7684\u98ce\u9669\u7ba1\u7406\u56e2\u961f\u534f\u4f5c\u7684\u7edd\u4f73\u673a\u4f1a\u3002\u8fd9\u5c06\u5b8c\u5168\u53d6\u51b3\u4e8e\u60a8\u7ec4\u7ec7\u4e2d\u7684\u89d2\u8272\u548c\u4e13\u4e1a\u77e5\u8bc6\u3002\n\u9996\u5148\uff0c\u6211\u5efa\u8bae\u4f1a\u8bae\u65f6\u957f\u4e3a90\u5206\u949f\u3002\u60a8\u9700\u8981\u7ed9\u56e2\u961f\u65f6\u95f4\u548c\u7a7a\u95f4\u6765\u5b66\u4e60\u6240\u6d89\u53ca\u7684\u7ed3\u6784\u548c\u5b89\u5168\u6982\u5ff5\u3002\u7136\u800c\uff0c\u4e00\u65e6\u4f60\u5f00\u59cb\u884c\u52a8\uff0c\u4e8b\u60c5\u5e94\u8be5\u4f1a\u53d8\u5f97\u66f4\u5feb\u3002\u6211\u53c2\u52a0\u8fc7\u7684\u6700\u5177\u5f71\u54cd\u529b\u7684\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bae\u53ea\u7528\u4e86\u4e0d\u523015\u5206\u949f\u3002\u4e00\u65e6\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u901a\u8fc7\u7ec3\u4e60\u5efa\u7acb\u4e86\u808c\u8089\u8bb0\u5fc6\uff0c\u77ed\u6682\u800c\u5feb\u901f\u7684\u8bad\u7ec3\u5c31\u6210\u4e3a\u53ef\u80fd\u3002\n\u7ecf\u5e38\u6709\u4eba\u95ee\u6211\uff0c\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bae\u5e94\u8be5\u591a\u9891\u7e41\u3002\u6211\u4e0d\u8ba4\u4e3a\u6709\u4ec0\u4e48\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u56e2\u961f\u3002\u6211\u8ba4\u4e3a\u5a01\u80c1\u5efa\u6a21\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u56e2\u961f\u8bbe\u8ba1\u4f1a\u8bae\u4e00\u6837\u3002\u6211\u4e0d\u4f1a\u90a3\u4e48\u50f5\u786c\u5730\u8bf4\u5b83\u5fc5\u987b\u662f\u6bcf\u4e00\u5468\u3002\u7136\u800c\uff0c\u6211\u4e0e\u8bb8\u591a\u56e2\u961f\u5408\u4f5c\u8fc7\uff0c\u4ed6\u4eec\u7684\u98ce\u9669\u6982\u51b5\u53ef\u4ee5\u8bc1\u660e\u6bcf\u4e00\u6b21\u51b2\u523a\u7684\u5a01\u80c1\u5efa\u6a21\u90fd\u662f\u5408\u7406\u7684\u3002\u5728\u53e6\u4e00\u4e2a\u6781\u7aef\uff0c\u5982\u679c\u53ea\u662f\u51e0\u6b21\u51b2\u523a\uff0c\u6ca1\u6709\u4efb\u4f55\u5a01\u80c1\u5efa\u6a21\uff0c\u90a3\u4e48\u8fd9\u79cd\u505a\u6cd5\u663e\u7136\u4e0d\u591f\u8fde\u7eed\uff0c\u4e0d\u8db3\u4ee5\u88ab\u8ba4\u4e3a\u662f\u6210\u719f\u7684\u3002\n\u9762\u5bf9\u9762\u7684\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bae\u53ef\u4ee5\u5728\u4f1a\u8bae\u5ba4\u8fdb\u884c\uff0c\u6216\u8005\u66f4\u975e\u6b63\u5f0f\u5730\u5728\u56e2\u961f\u7684\u6b63\u5e38\u5de5\u4f5c\u533a\u8fdb\u884c-\u5982\u679c\u60a8\u6709\u7a7a\u95f4\u7684\u8bdd\u3002\u5178\u578b\u7684\u4f1a\u8bae\u5305\u62ec\u7ed8\u5236\u56fe\u8868\u6765\u89e3\u91ca\u548c\u63a2\u7d22\u8303\u56f4\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u7136\u540e\u786e\u5b9a\u79ef\u538b\u7684\u4fee\u590d\u7684\u4f18\u5148\u987a\u5e8f\u3002\u7136\u800c\uff0c\u9762\u5bf9\u9762\u7684\u4f1a\u8c08\u5e76\u4e0d\u603b\u662f\u53ef\u80fd\u7684\u3002\n\u5f53\u60a8\u8fdc\u7a0b\u8fd0\u884c\u4f1a\u8bdd\u65f6\uff0c\u60a8\u53ea\u9700\u8ba1\u5212\u7a0d\u6709\u4e0d\u540c\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u865a\u62df\u53c2\u4e0e\u3002\u60a8\u5c06\u9700\u8981\u89c6\u9891\u4f1a\u8bae\u548c\u534f\u4f5c\u5de5\u5177\u3002\u63d0\u524d\u540c\u610f\u5e76\u8bbe\u7f6e\u8fd9\u4e9b\u5de5\u5177\u3002ThoughtWorks\u7684\u56e2\u961f\u5df2\u7ecf\u6210\u529f\u5730\u4f7f\u7528\u4e86\u5404\u79cd\u5de5\u5177\uff0c\u5305\u62ecMtal\u3001Miro\u3001Google Jamboard\u548cGoogle Docs\u3002\n\u5728\u4f1a\u8bae\u5f00\u59cb\u524d\u4e60\u60ef\u4f7f\u7528\u60a8\u7684\u5de5\u5177\uff0c\u5e76\u8ba9\u53c2\u4e0e\u8005\u6d4b\u8bd5\u4ed6\u4eec\u662f\u5426\u62e5\u6709\u8bbf\u95ee\u6743\u9650\u3002\u65e0\u8bba\u60a8\u9009\u62e9\u54ea\u79cd\u5de5\u5177\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u83b7\u5f97\u7ec4\u7ec7\u7684\u5b89\u5168\u6279\u51c6\u624d\u80fd\u4f7f\u7528\u8be5\u5de5\u5177\u3002\u7531\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u5a01\u80c1\u5efa\u6a21\u8f93\u51fa\u4ee3\u8868\u654f\u611f\u4fe1\u606f\uff0c\u5fc5\u987b\u52a0\u4ee5\u4fdd\u62a4\u3002\n\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5728\u7ec3\u4e60\u4e4b\u524d\u5f02\u6b65\u521b\u5efa\u56fe\u8868\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u865a\u62df\u7535\u8def\u677f\u4e0a\u7ed8\u5236\u56fe\u8868\u4f1a\u8017\u8d39\u5927\u91cf\u65f6\u95f4\u3002\n\u66f4\u8981\u6ce8\u610f\u5efa\u7acb\u5bf9\u7528\u6765\u8bf4\u660e\u7cfb\u7edf\u7684\u6982\u5ff5\u548c\u7b26\u53f7\u7684\u5171\u540c\u7406\u89e3\u3002\u89e3\u91ca\u6570\u5b57\u8d34\u7eb8\u7684\u56fe\u8868\u7b26\u53f7\u3001\u6570\u636e\u6d41\u7bad\u5934\u548c\u989c\u8272\u3002\n\u66f4\u6709\u610f\u8bc6\u5730\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u53c2\u4e0e\u5230\u7ec3\u4e60\u4e2d\u6765\u3002\u4e5f\u8bb8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u4e0e\u5b89\u5168\u76f8\u5173\u7684\u8111\u7b4b\u6025\u8f6c\u5f2f\u6765\u6253\u7834\u50f5\u5c40\u3002\u8bf7\u53c2\u9605\u66f4\u5e7f\u6cdb\u7684\u8fdc\u7a0b\u4fc3\u8fdb\u6307\u5357\u3002\n\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u56e2\u961f\uff0c\u90a3\u4e48\u521b\u5efa\u8f83\u5c0f\u7684\u56e2\u961f\u7136\u540e\u5408\u5e76\u8f93\u51fa\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\u51e0\u4e2a\u5c0f\u4f1a\u8bae\u6bd4\u4e00\u4e2a\u5927\u4f1a\u8bae\u66f4\u597d\uff0c\u66f4\u53ef\u6301\u7eed\u3002\n\u5728\u9762\u5bf9\u9762\u7684\u8c08\u8bdd\u4e2d\uff0c\u4f60\u9700\u8981\u66f4\u591a\u7684\u4f11\u606f\u65f6\u95f4\u3002\u8fdc\u7a0b\u5de5\u4f5c\u5f88\u7d2f\u4eba\u3002\n\u4e0d\u7ba1\u4f60\u7684\u4f1a\u8bae\u662f\u8fdc\u7a0b\u7684\u8fd8\u662f\u9762\u5bf9\u9762\u7684\uff0c\u4f60\u7684\u76ee\u6807\u90fd\u5e94\u8be5\u662f\u6309\u65f6\u5b8c\u6210\u3002\u5e76\u5e26\u6765\u4e86\u4e00\u4e9b\u5177\u4f53\u7684\u7ed3\u679c\uff01\u8fd9\u9700\u8981\u4fc3\u8fdb\u7eaa\u5f8b\u7684\u65f6\u95f4\u5b89\u6392\uff0c\u53ef\u4ee5\u662f\u7531\u4ea4\u4ed8\u7ecf\u7406\u6216\u6709\u7ecf\u9a8c\u7684\u4eba\u62c5\u5f53\u7684\u89d2\u8272\uff0c\u4ee5\u786e\u4fdd\u7814\u8ba8\u4f1a\u6210\u529f\u3002\n\u4e3a\u60a8\u7684\u4f1a\u8bae\u51b3\u5b9a\u6b63\u786e\u7684\u91cd\u70b9\u548c\u8be6\u7ec6\u7a0b\u5ea6\u79f0\u4e3a\u786e\u5b9a\u8303\u56f4\u3002\u5728\u53ec\u96c6\u4eba\u4eec\u4e00\u8d77\u8fdb\u884c\u6d3b\u52a8\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u51b3\u5b9a\u4e86\u8fd9\u4e00\u70b9\u3002\u4ee5\u5f53\u4e0b\u6700\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u4e3a\u6307\u5bfc\u3002\u4e5f\u8bb8\u8fd9\u4ec5\u4ec5\u662f\u60a8\u5728\u8fd9\u4e2a\u8fed\u4ee3\u4e2d\u5de5\u4f5c\u7684\u7528\u6237\u6545\u4e8b\uff1f\n\u4e0d\u8981\u8bd5\u56fe\u4e00\u6b21\u54ac\u6389\u592a\u591a\u7684\u8303\u56f4\uff01\u5982\u679c\u60a8\u5c1d\u8bd5\u4e00\u6b21\u5bf9\u6574\u4e2a\u7cfb\u7edf\u8fdb\u884c\u5a01\u80c1\u5efa\u6a21\uff0c\u8981\u4e48\u5728\u53ef\u7528\u65f6\u95f4\u5185\u6ca1\u6709\u4efb\u4f55\u53d1\u73b0\uff0c\u8981\u4e48\u4f1a\u4e25\u91cd\u8d85\u652f\uff0c\u5e76\u4e14\u6ca1\u6709\u80c3\u53e3\u6216\u9884\u7b97\u518d\u505a\u4e00\u6b21\u3002\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5c06\u5a01\u80c1\u5efa\u6a21\u4e3a\u53ef\u7ba1\u7406\u7684\u5757\uff0c\u6267\u884c\u5c11\u91cf\u4e14\u7ecf\u5e38\u6267\u884c\u7684\u6d3b\u52a8\u3002\n\u65e0\u8bba\u60a8\u7684\u56e2\u961f\u9009\u62e9\u4ec0\u4e48\u8303\u56f4\uff0c\u90fd\u8981\u786e\u4fdd\u5b83\u4e0d\u4f1a\u592a\u5927\uff0c\u60a8\u65e0\u6cd5\u5728\u53ef\u7528\u65f6\u95f4\u5185\u5b8c\u6210\u3002\n\u672c\u6307\u5357\u7684\u5176\u4f59\u90e8\u5206\u4f7f\u7528\u5b9e\u9645\u529f\u80fd\u6765\u663e\u793a\u5a01\u80c1\u5efa\u6a21\u6240\u6d89\u53ca\u7684\u5177\u4f53\u6b65\u9aa4\u3002\u5728\u4e00\u5bb6\u96f6\u552e\u673a\u6784\uff0c\u6709\u4e00\u4e2a\u5f00\u53d1\u56e2\u961f\u6b63\u5728\u642d\u5efa\u4e00\u4e2a\u5e73\u53f0\uff0c\u9500\u552e\u9001\u8d27\u4e0a\u95e8\u7684\u98df\u54c1\u6742\u8d27\u3002\u4ee5\u4e0b\u662f\u4ed6\u4eec\u5728\u5373\u5c06\u5230\u6765\u7684Sprint\u4e2d\u7684\u53f2\u8bd7\uff1a\n\u5982\u679c\u60a8\u66fe\u7ecf\u4f7f\u7528\u8fc7\u5728\u7ebf\u5546\u5e97\uff0c\u60a8\u5c06\u80fd\u591f\u60f3\u8c61\u4e00\u4e2a\u9875\u9762\uff0c\u8be5\u9875\u9762\u7528\u4e8e\u66f4\u65b0\u5730\u5740\u8be6\u7ec6\u4fe1\u606f\uff0c\u6216\u8bb8\u8fd8\u53ef\u4ee5\u67e5\u770b\u4f1a\u5458\u5361\u4f59\u989d\u3002\n\u6839\u636e\u7ecf\u9a8c\uff0c\u8fd9\u79cd\u89c4\u6a21\u7684\u529f\u80fd\u5bf9\u4e8e\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u6765\u8bf4\u662f\u76f8\u5f53\u5408\u7406\u7684\u8303\u56f4\u3002\n\u56fe\u8868\u662f\u89e3\u91ca\u548c\u63a2\u7d22\u8f6f\u4ef6\u662f\u5982\u4f55\u6784\u9020\u548c\u8bbe\u8ba1\u7528\u4e8e\u901a\u4fe1\u7684\u5b8c\u7f8e\u5de5\u5177\u3002\u672c\u6307\u5357\u7684\u8fd9\u4e00\u90e8\u5206\u63d0\u4f9b\u4e86\u56fe\u8868\u4e0a\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8be5\u56fe\u8868\u5c06\u4f5c\u4e3a\u60a8\u7684\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u7684\u57fa\u7840\u3002\n\u753b\u4e00\u5e45\u753b\u4f1a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u5fc3\u4e2d\u6709\u6570\u3002\u5728\u60a8\u5f00\u59cb\u8003\u8651\u5a01\u80c1\u3001\u98ce\u9669\u548c\u7f13\u89e3\u63aa\u65bd\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5bf9\u60a8\u6b63\u5728\u5904\u7406\u7684\u8f6f\u4ef6\u6216\u57fa\u7840\u8bbe\u65bd\u6709\u5171\u540c\u7684\u6280\u672f\u7406\u89e3\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u5730\u7ed8\u5236\u56fe\u8868\u6765\u63a2\u7d22\u8f6f\u4ef6\u8bbe\u8ba1\u3002\u5728\u767d\u677f\u6216\u6d3b\u52a8\u6302\u56fe\u4e0a\u753b\u4e00\u5f20\u7b80\u5355\u7684\u6280\u672f\u56fe\u8868\uff0c\u8bf4\u660e\u4f60\u540c\u610f\u7684\u8303\u56f4\uff0c\u5145\u5206\u5229\u7528\u8fd9\u4e9b\u65e2\u5b9a\u6280\u80fd\u3002\n\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u662f\u590d\u6742\u6216\u5b8c\u7f8e\u7684-\u53ea\u9700\u753b\u51fa\u4e3b\u8981\u7ec4\u4ef6\u7684\u65b9\u6846\u5e76\u7ed9\u5b83\u4eec\u8d34\u4e0a\u6807\u7b7e\u5373\u53ef\u3002\n\u5f52\u6839\u7ed3\u5e95\uff0c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u8ba9\u4eba\u4eec\u80fd\u591f\u505a\u4e8b\u3002\u7528\u6237\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u88ab\u6388\u6743\u8bbf\u95ee\u7cfb\u7edf\u4e2d\u7684\u4e1c\u897f\u7684\u4eba\u3002\u5728\u60a8\u7684\u56fe\u8868\u4e0a\u8868\u793a\u5e76\u6807\u8bb0\u5b83\u4eec\u3002\n\u67d0\u4e9b\u7528\u6237\u53ef\u4ee5\u6bd4\u5176\u4ed6\u7528\u6237\u66f4\u53d7\u4fe1\u4efb\u3002\u4f8b\u5982\uff0c\u6700\u7ec8\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u6267\u884c\u64cd\u4f5c\u7684\u81ea\u7531\u901a\u5e38\u6bd4\u7ba1\u7406\u5458\u5c11\u3002\u5982\u679c\u591a\u4e2a\u7528\u6237\u7ec4\u4e0e\u4f1a\u8bdd\u8303\u56f4\u76f8\u5173\uff0c\u5219\u8868\u793a\u5e76\u6807\u8bb0\u6bcf\u4e2a\u7ec4\u3002\n\u5e76\u975e\u6240\u6709\u7cfb\u7edf\u90fd\u662f\u9762\u5411\u7528\u6237\u7684\u3002\u5982\u679c\u60a8\u7684\u7cfb\u7edf\u662f\u540e\u7aef\u7cfb\u7edf(\u53ef\u80fd\u662f\u53ea\u63a5\u53d7\u6765\u81ea\u5176\u4ed6\u7cfb\u7edf\u7684\u8bf7\u6c42\u7684\u4e0b\u6e38\u5fae\u670d\u52a1)\uff0c\u5219\u8868\u793a\u6388\u6743\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u7684\u534f\u4f5c\u7cfb\u7edf\u3002\n\u4fe1\u4efb\u672c\u8d28\u4e0a\u662f\u5173\u4e8e\u8c01\u6216\u4ec0\u4e48\u4eba\u5e94\u8be5\u6709\u81ea\u7531\u53bb\u505a\u4e00\u4ef6\u7279\u5b9a\u7684\u4e8b\u60c5\u3002\u4e00\u5b9a\u8981\u8bf4\u660e\u8fd9\u4e9b\u6f14\u5458\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5bf9\u5b89\u5168\u5f88\u91cd\u8981\u3002\n\u56de\u5230\u4e0a\u9762\u4ecb\u7ecd\u7684\u771f\u6b63\u529f\u80fd\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u56e2\u961f\u662f\u5982\u4f55\u9009\u62e9\u6f14\u793a\u65b0\u7684\u5ba2\u6237\u8be6\u7ec6\u4fe1\u606f\u9875\u9762\u529f\u80fd\u7684\u3002\u4ed6\u4eec\u753b\u4e86\u4e0b\u9762\u7684\u56fe\u3002\n\u6709\u524d\u7aef(BFF)\u670d\u52a1\u7684\u540e\u7aef\u548c\u524d\u7aefUI(\u7528Javascript\u548cReaction\u7f16\u5199)\u3002\n\u672c\u6307\u5357\u4e0d\u9700\u8981\u8be6\u7ec6\u4e86\u89e3\u8fd9\u4e9b\u6280\u672f\uff0c\u4f46\u8fd9\u4e9b\u4e8b\u5b9e\u8bf4\u660e\u4e86\u60a8\u5728\u7ed8\u5236\u56fe\u8868\u65f6\u5e94\u8be5\u8ba8\u8bba\u7684\u8be6\u7ec6\u7a0b\u5ea6\u3002\n\u653b\u51fb\u8005\u901a\u5e38\u4f7f\u7528\u4e0e\u5408\u6cd5\u7528\u6237\u76f8\u540c\u7684\u8def\u5f84\u7ed5\u8fc7\u7cfb\u7edf\u3002\u4e0d\u540c\u7684\u662f\uff0c\u4ed6\u4eec\u6ee5\u7528\u5b83\u4eec\uff0c\u6216\u8005\u4ee5\u6ca1\u4eba\u60f3\u5230\u8981\u68c0\u67e5\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u91cd\u8981\u7684\u662f\u8981\u663e\u793a\u7cfb\u7edf\u5468\u56f4\u7684\u53ef\u4fe1\u8def\u5f84\uff0c\u4ee5\u5e2e\u52a9\u4e86\u89e3\u771f\u6b63\u7684\u5a01\u80c1\u53ef\u80fd\u53d1\u751f\u5728\u54ea\u91cc\u3002\n\u663e\u793a\u6570\u636e\u6d41-\u4f7f\u7528\u7bad\u5934\u663e\u793a\u6570\u636e\u6d41\uff0c\u4ece\u7528\u6237\u548c\u534f\u4f5c\u7cfb\u7edf\u5f00\u59cb\u3002\u76ee\u524d\uff0c\u5927\u591a\u6570\u6570\u636e\u6d41\u662f\u8bf7\u6c42-\u54cd\u5e94\u7684\uff0c\u56e0\u6b64\u662f\u53cc\u5411\u7684\u3002\u4f46\u6211\u5efa\u8bae\u60a8\u4ece\u53d1\u51fa\u8bf7\u6c42\u7684\u5730\u65b9\u753b\u65b9\u5411\u7bad\u5934\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u8fd9\u4f7f\u5f97\u4ee5\u540e\u5bf9\u5a01\u80c1\u8fdb\u884c\u5934\u8111\u98ce\u66b4\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\n\u5a01\u80c1\u66f4\u6709\u53ef\u80fd\u6765\u81ea\u67d0\u4e9b\u7f51\u7edc\u3002\u7f51\u7edc\u914d\u7f6e\u4e3a\u9650\u5236\u6d41\u91cf\u4ece\u4e00\u4e2a\u5730\u65b9\u6d41\u5411\u53e6\u4e00\u4e2a\u5730\u65b9\u7684\u81ea\u7531\u3002\u8fd9\u79cd\u9650\u5236\u6027(\u6216\u5f00\u653e\u6027)\u5c06\u6709\u52a9\u4e8e\u786e\u5b9a\u54ea\u4e9b\u5a01\u80c1\u662f\u53ef\u80fd\u7684\u6216\u53ef\u80fd\u7684\u3002\u5f00\u653e\u7684\u4e92\u8054\u7f51\u6bd4\u4fdd\u62a4\u5b8c\u5584\u7684\u540e\u7aef\u7f51\u7edc\u66f4\u5371\u9669(\u5373\u4f7f\u60a8\u7684\u540e\u7aef\u7f51\u7edc\u662f\u60a8\u7684\u4e91\u63d0\u4f9b\u5546\u6258\u7ba1\u7684\u79c1\u6709\u7f51\u7edc)\u3002\n\u7528\u53e6\u4e00\u79cd\u989c\u8272\u7ed8\u5236\u865a\u7ebf\uff0c\u4ee5\u663e\u793a\u7cfb\u7edf\u4e2d\u4e0d\u540c\u7f51\u7edc\u4e4b\u95f4\u7684\u8fb9\u754c\u3002\u8fd9\u4e9b\u901a\u5e38\u88ab\u79f0\u4e3a\u6388\u6743\u8fb9\u754c\u3002\u6709\u65f6\uff0c\u8bf4\u660e\u7f51\u5173\u8bbe\u5907(\u5982\u8d1f\u8f7d\u5747\u8861\u5668\u6216\u9632\u706b\u5899)\u662f\u503c\u5f97\u7684\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u8fd9\u4e9b\u8bbe\u5907\u5bf9\u4e8e\u60a8\u5728\u8be5\u4f1a\u8bdd\u4e2d\u7684\u8303\u56f4\u5e76\u4e0d\u662f\u90a3\u4e48\u91cd\u8981\uff0c\u8fd9\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\uff0c\u9080\u8bf7\u5177\u6709DevOps\u6216\u57fa\u7840\u67b6\u6784\u77e5\u8bc6\u7684\u4eba\u53c2\u52a0\u60a8\u7684\u4e0b\u4e00\u6b21\u4f1a\u8bae\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\n\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6dfb\u52a0\u4e86\u7bad\u5934\u6765\u8bf4\u660e\u4ece\u60f3\u8981\u67e5\u770b\u5176\u8be6\u7ec6\u4fe1\u606f\u7684\u5ba2\u6237\u5230UI\uff0c\u7136\u540e\u518d\u5230BFF\u670d\u52a1\u548c\u5ba2\u6237\u8be6\u7ec6\u4fe1\u606f\u8d44\u6e90\u670d\u52a1\u5668\u4ee5\u83b7\u53d6\u6216\u66f4\u65b0\u6570\u636e\u7684\u6570\u636e\u6d41\u3002\u8fd8\u5b58\u5728\u5230\u8eab\u4efd\u670d\u52a1\u5668\u7684\u6570\u636e\u6d41\uff0c\u8be5\u8eab\u4efd\u670d\u52a1\u5668\u53d1\u5e03\u6388\u6743\u4f1a\u8bdd\u7684\u4ee4\u724c\u3002\n\u8fd8\u6709\u4e00\u4e2a\u6388\u6743\u8fb9\u754c\uff0c\u56e0\u4e3aUI\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u800c\u5176\u4ed6\u7ec4\u4ef6\u5728\u7ec4\u7ec7\u7684\u4e91\u4e3b\u673a\u4e2d\u3002\n\u5728\u56fe\u8868\u4e0a\u5feb\u901f\u6307\u51fa\u5177\u6709\u4e1a\u52a1\u4ef7\u503c\u7684\u6570\u636e\u6216\u670d\u52a1\u6240\u5728\u7684\u4f4d\u7f6e\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u4f8b\u5982\uff0c\u8fd9\u53ef\u80fd\u662f\u60a8\u5b58\u50a8\u4e2a\u4eba\u6570\u636e\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u60a8\u7684\u7cfb\u7edf\u5904\u7406\u652f\u4ed8\uff0c\u53ef\u80fd\u662f\u670d\u52a1\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u7cfb\u7edf\u4e2d\u7684\u8d44\u4ea7\u662f\u9700\u8981\u4fdd\u5bc6\u6216\u5b8c\u597d\u65e0\u635f\u7684\u4fe1\u606f\uff0c\u4e5f\u662f\u9700\u8981\u4fdd\u6301\u53ef\u7528\u7684\u670d\u52a1\u3002\n\u4e0d\u8981\u5728\u8fd9\u4e00\u6b65\u4e0a\u82b1\u592a\u957f\u65f6\u95f4\u3002\u5176\u76ee\u7684\u53ea\u662f\u63d0\u4f9b\u4e00\u70b9\u80cc\u666f\u4fe1\u606f\u6765\u5e2e\u52a9\u96c6\u601d\u5e7f\u76ca\u548c\u786e\u5b9a\u4f18\u5148\u987a\u5e8f\u3002\u5982\u679c\u4f60\u5728\u8fd9\u4e0a\u9762\u82b1\u7684\u65f6\u95f4\u8d85\u8fc75\u5206\u949f\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u592a\u957f\u4e86\u3002\n\u8be5\u56e2\u961f\u5c06\u5ba2\u670d\u5b58\u50a8\u7684\u4e2a\u4eba\u53ef\u8bc6\u522b\u4fe1\u606f(PII)\u548c\u8eab\u4efd\u63d0\u4f9b\u5546\u4e2d\u7684\u51ed\u636e\u5b58\u50a8\u786e\u5b9a\u4e3a\u6700\u5177\u4e1a\u52a1\u4ef7\u503c\u7684\u8d44\u4ea7\u3002\n\u6211\u4eec\u5c06\u4ee5\u5206\u671f\u4ed8\u6b3e\u7684\u65b9\u5f0f\u53d1\u5e03\u8fd9\u7bc7\u6587\u7ae0\u3002\u672a\u6765\u7684\u90e8\u5206\u5c06\u4ecb\u7ecd\u6211\u4eec\u5982\u4f55\u63a2\u7d22\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\uff0c\u4ee5\u53ca\u6211\u4eec\u5e94\u8be5\u505a\u4e9b\u4ec0\u4e48\u3002\n\u8981\u4e86\u89e3\u6211\u4eec\u4f55\u65f6\u51fa\u7248\u4e0b\u4e00\u671f\uff0c\u8bf7\u8ba2\u9605\u7f51\u7ad9\u7684RSS\u6e90\u3001Jim\u7684Twitter\u6d41\u6216Martin\u7684Twitter\u6d41\u3002\n\u611f\u8c22Martin Fowler\u3001Adam Shostack\u3001Charles Weir\u548cAvi Douglan\u4e3a\u672c\u6587\u7684\u65e9\u671f\u8349\u7a3f\u63d0\u4f9b\u4e86\u8be6\u7ec6\u3001\u6df1\u601d\u719f\u8651\u7684\u53cd\u9988\u3002\u4efb\u4f55\u590d\u6742\u6216\u7ec6\u5fae\u7684\u5dee\u522b\u90fd\u8981\u5f52\u529f\u4e8e\u4ed6\u4eec\u3002\n\u611f\u8c22ThoughtWorks\u7684Nalinikanth Meesala\u3001Mona Fenzl\u548cSarah Schmid\uff0c\u4ed6\u4eec\u5e2e\u52a9\u6211\u63d0\u4f9b\u4e86\u8fdc\u7a0b\u8fd0\u884c\u5a01\u80c1\u5efa\u6a21\u4f1a\u8bdd\u7684\u6307\u5bfc-\u6307\u5357\u7684\u8fd9\u4e00\u90e8\u5206\u5e94\u8be5\u5f52\u529f\u4e8e\u4ed6\u4eec\uff01\n\u611f\u8c22\u82f1\u56fd\u56fd\u5bb6\u7f51\u7edc\u5b89\u5168\u4e2d\u5fc3\u793e\u4f1a\u6280\u672f\u5c0f\u7ec4(\u4ee5\u53caRISCS\u4e0b\u4ee5\u5f00\u53d1\u8005\u4e3a\u4e2d\u5fc3\u7684\u5b89\u5168\u7814\u7a76\u7ec4\u5408)\u7684\u5de5\u4f5c\u4eba\u5458\u5e2e\u52a9\u6211\u8ba4\u8bc6\u5230\u5a01\u80c1\u5efa\u6a21\u5e76\u4e0d\u7b80\u5355\u3002\n\u611f\u8c22\u53c2\u4e0eOWASP\u5a01\u80c1\u5efa\u6a21\u9879\u76ee\u7684\u6bcf\u4e00\u4e2a\u4eba\uff0c\u611f\u8c22\u4ed6\u4eec\u7684\u6240\u6709\u610f\u89c1\u548c\u516c\u5f00\u5206\u4eab\u3002\n..", "note_en": "This article provides clear and simple steps to help teams that want to adopt threat modelling. Threat modelling is a risk-based approach to designing secure systems. It is based on identifying threats in order to develop mitigations to them. With cyber security risk increasing and enterprises becoming more aware of their liabilities, software development teams need effective ways to build security into software. Unfortunately, they often struggle to adopt threat modelling. Many methodologies require complicated, exhaustive upfront analysis which does not match how modern software teams work. Therefore, rather than stopping everything to create the perfect threat model, I encourage teams to start simple and grow from there.\n What are the security requirements for the software you are building? Finding a good answer is surprisingly complex. You want to prevent cyber losses over the lifetime of the system. But what are the concrete stories, acceptance criteria and technical scope that delivers that outcome? That is the puzzle addressed in this guide.\n  Somewhat unhelpfully, cyber specialists will often ask:  &#39;What is your threat model?&#39; This answer is very non-specific and uncertain, much like turning around and saying &#39;it depends&#39;. Worse, &#39;threat model&#39; is obscure technical jargon for most people adding unnecessary mystique. And if you research the topic of threat modelling the information can be overwhelming and hard to action. There is no agreed standard for a &#39;threat model&#39; or anything like that.\n So what are threat models and what is threat modelling? The core of the concept is very simple. It is about understanding  causes in relation to cyber security losses. It is about using that understanding to protect  your system in a risk-based way. It means starting from the potential threats in your particular case, rather than just following a checklist.\n  Coming to understand the threat model for your system is not simple. There are an unlimited number of threats you can imagine to any system, and many of them could be likely. The reality of threats is that many causes combine. Cyber threats chain in unexpected, unpredictable and even chaotic ways. Factors to do with culture, process and technology all contribute. This complexity and uncertainty is at the root of the cyber security problem. This is why security requirements are so hard for software development teams to agree upon.\n The stories behind real breaches show how complex threats and causality can be- often the details are astounding. The  NotPetya story is a great example. Nation state malware was traded by a group called the &#34;ShadowBrokers&#34; and then weaponised. The eventual impact was major losses to organisations almost at random. Mearsk, the shipping firm, had to halt the progress of shipping. The confectioner Cadbury&#39;s had to stop making chocolate. What were their respective threat models? What development team could imagine such a complex chain of causality and collatoral damage? How long would it take your team to model this, and every other dangerous possibility?\n Is threat modelling too complex to be of value? Should developers just follow a checklist, &#39;cross their fingers&#39; and hope they get lucky? Skepticism can be healthy, but learning threat modelling is a key skill for developers, I believe. What we need is the right approach, and tools to tame the complexity. This guide has been written in that spirit, and begins with three ideas which make identifying good, risk-based security requirements much simpler.\n The first recommendation is to  focus primarily on technical rather than broad threats, at least at first.\n Broad threats and threat sources include hacker groups, bad actors, disillusioned employees, human error or epidemics of new worm-like malware. These kinds of causes emerge from the world at large and are extremely various, uncertain and unpredictable. They are relative to the value of your system&#39;s data and services to your organisation and to others. These are the kinds of dramatic risks it is easy to talk about with non-technical folks.\n  Technical threats and vulnerabilities are much more granular, such as particular weaknesses in software or missing security controls such as encryption or authorisation. These kinds of threats emerge from the structure and data-flow inherent in the system your team is building. Usually a bunch of technical threats combine together to allow a broad threat to impact your system.\n By following this guide you will mainly focus on finding technical threats. This helps simplify the elaboration process, because the structure and data-flow of your system is something about which you can be certain. But it also means you can start from your existing strengths as a software developer, understanding technical stuff. This is a much stronger ground to start on than high-level risk analysis of threat sources, about which you may know little.\n Don&#39;t forget about the bigger picture entirely though. A pragmatic and risk-based understanding of what broad threats are possible helps prioritise one technical threat over another. For example simple human error is usually much more likely than a nation state attack (see sidebar). That thinking can go into selecting what security scope to start examining first. When you focus on identifying technical threats first, it is then much easier to relate them back to broader threats that justify fixes and additional controls.\n The second recommendation is to  adopt a collaborative, team based approach. Identifying security requirements is not easy, and a diversity of perspectives will lead to better decision making. There will always be another vulnerability or technical threat to find, so bringing a wide variety of perspectives to the exercise makes brainstorming more robust. It also increases the likelihood you will identify the most important threats. Threat modelling in a group helps address risk holistically and helps the whole team to learn how to think and talk effectively about security.\n  Getting product owners involved is a great oppotunity from a risk management perspective. Product owners have insights into user behaviour and business context that software developers simply lack. They should know about the value of particular services to the business and the impact if that data was exposed or lost. When cyber security losses occur they are business losses. If the worst does happen then the causes will likely be particular to your organisation and the technology you are using. The cyber security problem is not just about ticking technical boxes, its about making good investment decisions to protect the business.\n The third recommendation is to  start threat modelling &#39;little and often&#39;. Each threat modelling session with the team should be short and focussed enough to be quickly digested into something that can be delivered. Start by analysing the thinnest slice of your system possible; just what you are working on right now. Rather than trying to analyse your entire system upfront, build your team&#39;s muscle memory with threat modelling a little bit at a time.\n Practises which require a completely specified software design do not match how agile teams work. There is no reason why threat modelling needs to be an exhaustive upfront analysis. Too often teams are overwhelmed by comprehensive and highly structured approaches to threat modelling  [1]. I have seen teams try such approaches and run out of time and patience before any real threats were identified- let alone fixes delivered!\n Rather than creating and maintaining an exhaustive &#39;threat model&#39; document, do threat modelling &#39;little and often&#39;. When you work this way each threat modelling session is tiny, having little impact. Yet the cumulative effect of doing them has a huge impact. When you know you&#39;ll be doing this again every iteration, there&#39;s less incentive to try to do everything at once and more incentive to prioritize the most important work right now.\n This section of the guide starts to make things more detailed and concrete so you can plan to start threat modelling with your team.\n The first thing to introduce is a simple and flexible structure for threat modelling\u00a0  [2]. This is based on three key questions. It helps to commit this structure to memory. You can use the three question structure as a guide whenever you need to assess threats. Like riding a bike, once you have mastered the basics you will be able to apply and grow those skills.\n  This guide follows the three question structure. In each threat modelling session, you should spend about a third of your time answering each question. Then you will come out with a useful result. The rest of the guide will break this basic structure into more detailed steps, pointers and explanations to help you run successful threat modelling sessions.\n There are some things you need to get straight before you run a threat modelling session. The following pointers should help you plan.\n Try to involve the whole delivery team in each session, which is to say both technical and non-technical roles. This brings more perspectives and ideas to the table, but also builds shared understanding. Excluding product owners, business analysts and delivery managers can mean the work to fix security flaws does not get done, as the value will not be widely understood.\n You definitely do not need a security specialist to start threat modelling and discover valuable security scope. However, a threat modelling session is the perfect opportunity to collaborate with specialists, security architects or your risk management team. It will all depend on what the roles and expertise are like in your organisation.\n To start, I recommmend a session length of 90 minutes. You need to give the team the time and space to learn the structure and security concepts involved. Things should get much faster once you get going, though. The most impactful threat modelling session I have ever participated in took less than 15 minutes. Short and snappy sessions are possible once everyone in the team has built &#39;muscle memory&#39; with the practise.\n I am often asked how frequent threat modelling sessions should be. I do not think there is any right answer, it depends on your team. I think of threat modelling just like any other team design session. I would not be so rigid as saying it has to be every single week. However, I have worked with many teams with a risk profile that would justify threat modelling every sprint. At the other extreme if it has been a few sprints without any threat modelling, the practise is clearly not continuous enough to be considered mature.\n A face-to-face threat modelling session could happen in a meeting room, or more informally in the team&#39;s normal work area- if you have space. A typical session involves drawing a diagram to explain and explore the scope, brainstorming threats, then prioritising fixes for the backlog. However, a face-to-face session is not always possible.\n When you run a session remotely you just need to plan a little differently so everyone can participate virtually. You will need video conferencing and collaboration tools. Agree and setup these tools ahead of time. Teams at ThoughtWorks have had success with a variety of tools, including Mural, Miro, Google Jamboard and Google Docs.\n Get accustomed to your tools ahead of the session and get participants to test they have access. Whichever tool you choose, ensure you have security approval from your organisation to use the tool. Threat modelling outputs represent sensitive information for a number of reasons and must be protected.\n  It can help to create diagrams asyncronously before the exercise. This is because it can consumes a good amount of time to draw diagrams on virtual boards.\n Pay even more attention to creating a common understanding of the concepts and symbols you are using to illustrate the system. Explain diagram symbols, data flow arrows and colours of digital stickies.\n Be more intentional to ensure everyone is engaged in the exercise. Perhaps use some security related brain teasers as an ice-breaker. Refer to broader guides on remote facilitation.\n If you have a large group of people, it may make sense to create smaller groups and then consolidate the output. A couple of small sessions is better and more sustainable than one big session.\n You will need more breaks than required in a face-to-face session. Remote work is tiring.\n Regardless if your session is remote or face-to-face, you should aim to finish on time. And with some concrete outcomes! This needs discipline - facilitating timings could be a role taken by a delivery manager or someone experienced making sure workshop sessions succeed.\n Deciding the right focus and level of detail for your session is called &#39;identifying the scope&#39;. Make sure you have decided this ahead of getting people together to perform the activity. Be guided by what has most value right now. Perhaps its simply the user stories you are working on this iteration?\n Do not try and bite off too much scope at once! If you try threat modelling the entire system at once, either you will make no findings in the time available or you will overrun dramatically and there will be no appetite or budget to do it again. It is much better to timebox threat modelling into manageable chunks, performing the activity &#39;little and often&#39;.\n   Whatever scope your team chooses, make sure it is not too big for you to cover in the time available.\n The rest of the guide uses a real feature to show the concrete steps involved in threat modelling. There is a development team at a retail organisation which is building a platform to sell groceries for home delivery. Here is the epic they have in the upcoming sprint:\n  If you have ever used an online store, you will be able to imagine a page which is used to update address details and perhaps view a loyalty card balance.\n From experience, a feature of this size is a pretty reasonable scope for threat modelling session.\n Diagrams are the perfect tool to explain and explore how software is structured, and designed to communicate. This section of the guide provides detailed pointers on the diagram which will serve as the foundation of your threat modelling session.\n Drawing a picture gets everyone on the same page. Before you can start thinking of threats, risk and mitigations you need a shared technical understanding of the software or infrastructure you are dealing with.\n Luckily, developers will be comfortable drawing diagrams to explore software designs. Tap into these established skills by drawing a simple technical diagram of your agreed scope on the whiteboard or flipchart.\n Nothing needs to be sophisticated or perfect - just draw boxes for the main components and label them.\n Ultimately, systems are designed to allow people to do things. Users matter as they are the ones authorised to things in the system. Represent and label them on your diagram.\n Some users can be more trusted than others. For example end-users usually have less freedom to perform operations in a system than administrators. If multiple groups of users are relevant to the scope of the session, represent and label each group.\n Not all systems are user facing. If your system is backend system (perhaps a downstream microservice which only accepts requests from other systems) then represent collaborating systems that are authorised to interact with the system.\n Trust is essentially about who or what should have the freedom to do a particular thing. Make sure you illustrate those &#39;actors&#39;, as they are important for security.\n Returning to the real feature introduced above, lets see how the team chose to illustrate the new &#39;customer details page&#39; functionality. They drew the following diagram.\n    has a Backend for Frontend (BFF) service and frontend UI (which are written in Javascript and React)\n No detailed knowledge of these technologies is required to follow this guide, but these facts illustrate the level of detail you should discuss while drawing the diagram.\n Attackers often use the same pathways to pivot around systems that legitimate users do. The difference is they abuse them or use them in ways that nobody thought of checking. So it is important to show the trusted paths around your system, to helps see where real threats could happen.\n Show data-flows with arrows, starting from the users and collaborating systems. Nowadays, most data-flows are request-response and therefore bi-directional. But I recommend that you draw directional arrows from where requests originate. From experience this makes it much easier to brainstorm threats later on.\n It is more likely threats will originate from certain networks. Networks are configured to restrict the freedom of traffic to flow from one place to another. That restrictiveness (or openness) will help determine what threats are possible or likely. The open Internet is more dangerous than a well protected backend network (even if your backend network is a VPC hosted by your cloud provider).\n In another colour, draw dotted lines to show the boundaries between different networks in your system. These are often called &#39;authorisation boundaries&#39;. Sometimes it is worth illustrating gateways devices such as load balancers or firewalls. Other times those devices are not so important to your scope in that session, and that is okay too. If you are unsure, it might make sense to invite someone with DevOps or infrastructure knowledge to your next session.\n In our case arrows are added to illustrate data-flows from the customer who wants to see their details, to the UI, then on to the BFF service and onto the customer details resource server to obtain or update the data. There is also a data-flow to the Identity server which issues a token that authorises the session.\n There is also an authorisation boundary because the UI is on the Internet, whereas the other components are within the organisation&#39;s cloud hosting.\n It is helpful to quickly indicate on the diagram where data or services with business value sit. For example, this may be where you store personal data. If your system processes payments, perhaps its the service which does that. The assets in your system are information that needs to be kept confidential or intact, but also services which need to be kept available.\n Do not spend too long on this step. The purpose is just to provide a little bit of context to help with brainstorming and prioritisation. If you spend more than 5 minutes on this, then its probably too long.\n The team identified the personally identifable information (PII) stored by the Customer Service and the credential store in the Identity provider as the assets with most business value.\n We&#39;re releasing this article in installments. Future installments will show how we explore what can go wrong and what we should do about it.\n To find out when we publish the next installment subscribe to the site&#39;s  RSS feed,  Jim&#39;s twitter stream, or  Martin&#39;s twitter stream\n Thanks to Martin Fowler, Adam Shostack, Charles Weir and Avi Douglan for providing detailed, thoughtful feedback on early drafts of this article. Any sophistication or nuance is due to them.\n Thanks to Nalinikanth Meesala, Mona Fenzl and Sarah Schmid from ThoughtWorks who helped me with the guidance on running threat modelling sessions remotely - they deserve all the credit for that section of the guide!\n Thanks to the folks at the Sociotechnical Group at the UK National Cyber Security Centre (and the Developer Centred Security research portfolio under RISCS) for helping me realise that Threat Modelling is not &#39;simple&#39;.\n Thanks to everyone who participates in the OWASP Threat Modelling project for all the input and the open sharing o\n......", "posttime": "2020-05-25 09:58:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u5f00\u53d1\u4eba\u5458,threat,\u5a01\u80c1", "title": "\u9762\u5411\u5f00\u53d1\u4eba\u5458\u7684\u5a01\u80c1\u5efa\u6a21\u6307\u5357", "title_en": "A Guide to Threat Modelling for Developers", "transed": 1, "url": "https://martinfowler.com/articles/agile-threat-modelling.html", "via": "", "real_tags": ["\u5f00\u53d1", "\u5f00\u53d1\u4eba\u5458", "threat", "\u5a01\u80c1"]}, {"category": "", "categoryclass": "", "imagename": "25c1d0d2f9c47a234140cf80ea9271f0.jpg", "infoid": 1003593, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521a\u521a\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u53c2\u8bae\u9662\u901a\u8fc7\u4e86\u7f8e\u56fd\u81ea\u7531\u91cd\u65b0\u6388\u6743\u6cd5\u6848\uff0c\u6062\u590d\u7231\u56fd\u8005\u6cd5\u6848\u5230\u671f\u7684\u6743\u529b\u3002\u65b0\u6cd5\u6848\u4e2d\u6ca1\u6709\u4e00\u9879\u5173\u952e\u7684\u4fee\u6b63\u6848\uff0c\u8be5\u4fee\u6b63\u6848\u5c06\u8981\u6c42\u6267\u6cd5\u90e8\u95e8\u5728\u8bbf\u95ee\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546\u8bb0\u5f55\u7684\u79c1\u4eba\u6d4f\u89c8\u6570\u636e\u4e4b\u524d\u83b7\u5f97\u641c\u67e5\u4ee4\u3002\u76ee\u524d\u7684\u60c5\u51b5\u662f\uff0c\u8be5\u6cd5\u6848\u5141\u8bb8\u50cfFBI\u8fd9\u6837\u7684\u673a\u6784\u5b8c\u5168\u8bbf\u95ee\u6240\u6709\u7f8e\u56fd\u4eba\u7684\u4e92\u8054\u7f51\u5386\u53f2\u3002\n\u8fd9\u9879\u4fee\u6b63\u6848\u662f\u7531\u4fc4\u52d2\u5188\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u7f57\u6069\u00b7\u6000\u767b(Ron Wyden)\u548c\u8499\u5927\u62ff\u5dde\u5171\u548c\u515a\u53c2\u8bae\u5458\u53f2\u8482\u592b\u00b7\u6234\u6069\u65af(Steve Daines)\u63d0\u51fa\u7684\u3002\u53cc\u65b9\u90fd\u4e0d\u53cd\u5bf9\u8fd9\u9879\u4fee\u6b63\u6848\u3002\u53c2\u8bae\u9662\u6295\u7968\u65f6\uff0c\u8be5\u4fee\u6b63\u6848\u7684\u4e00\u4e9b\u652f\u6301\u8005\u7f3a\u5e2d\uff0c\u53ea\u4ee5\u4e00\u7968\u4e4b\u5dee\u672a\u80fd\u8fbe\u523060\u7968\u7684\u95e8\u69db\u3002\u5766\u7387\u5730\u8bf4\uff0c\u53c2\u8bae\u9662\u672a\u80fd\u5c06\u4fee\u6b63\u6848\u7f16\u7e82\u6210\u6587\u662f\u4e00\u4ef6\u4ee4\u4eba\u5c34\u5c2c\u7684\u4e8b\u60c5\u3002\n\u968f\u540e\uff0c\u5305\u62ecMozilla\u3001Reddit\u3001Twitter\u548cPatreon\u5728\u5185\u7684\u51e0\u5bb6\u79d1\u6280\u516c\u53f8\u8054\u5408\u7b7e\u7f72\u4e86\u4e00\u5c01\u4fe1\uff0c\u8981\u6c42\u4f17\u8bae\u9662\u6e05\u7406\u8fd9\u4e00\u70c2\u644a\u5b50\u3002\u4f17\u8bae\u9662\u4ecd\u7136\u9700\u8981\u901a\u8fc7\u8be5\u6cd5\u6848\u624d\u80fd\u4f7f\u5176\u6210\u4e3a\u6cd5\u5f8b\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f3a\u5236\u5c06\u4fee\u6b63\u6848\u7eb3\u5165\u5176\u4e2d\u3002\u4ed6\u4eec\u8fd9\u5468\u6295\u7968\u3002\n\u4fe1\u4e2d\u5199\u9053\uff1a\u201c\u6211\u4eec\u7684\u7528\u6237\u8981\u6c42\u6211\u4eec\u8d1f\u8d23\u4efb\u5730\u7ba1\u7406\u4ed6\u4eec\u7684\u79c1\u4eba\u4fe1\u606f\uff0c\u6211\u4eec\u7684\u884c\u4e1a\u5c31\u662f\u5efa\u7acb\u5728\u8fd9\u79cd\u4fe1\u4efb\u7684\u57fa\u7840\u4e0a\u7684\u3002\u201d\u201c\u7f8e\u56fd\u4eba\u6709\u6743\u5bf9\u4ed6\u4eec\u7684\u5728\u7ebf\u641c\u7d22\u548c\u6d4f\u89c8\u8fdb\u884c\u4fdd\u5bc6\uff0c\u53ea\u6709\u5728\u83b7\u5f97\u641c\u67e5\u4ee4\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u5411\u653f\u5e9c\u5f00\u653e\u3002\u201d\n\u8fd9\u9879\u4fee\u6b63\u6848\u8fd8\u5f97\u5230\u4e86\u6570\u5341\u4e2a\u6c11\u6743\u548c\u81ea\u7531\u56e2\u4f53\u7684\u652f\u6301\uff0c\u5305\u62ec\u5168\u56fd\u6709\u8272\u4eba\u79cd\u534f\u8fdb\u4f1a\u3001\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u548c\u4eba\u6743\u89c2\u5bdf\u3002\u4e0a\u5468\uff0c\u4ed6\u4eec\u8054\u5408\u7b7e\u7f72\u4e86\u4e00\u5c01\u5355\u72ec\u7684\u4fe1\uff0c\u4fe1\u4e2d\u8010\u4eba\u5bfb\u5473\u5730\u6307\u51fa\uff0c\u201c\u8fd9\u9879\u6539\u9769\u6b63\u662f\u4e3a\u4e86\u907f\u514d\u8fc7\u53bb20\u5e74\u91cc\u5bfc\u81f4\u4eba\u4eec\u5bf9\u7f8e\u56fd\u60c5\u62a5\u673a\u6784\u5931\u53bb\u4fe1\u4efb\u7684\u90a3\u79cd\u4e11\u95fb\u3002\u201d\u6211\u8ba4\u4e3a\u73b0\u5728\u5f88\u5c11\u6709\u4eba\u76f8\u4fe1\u7f8e\u56fd\u653f\u5e9c\u5bf9\u4e92\u8054\u7f51\u9690\u79c1\u7684\u4fdd\u62a4\u3002", "note_en": "What just happened? Earlier this month, the Senate passed the USA FREEDOM Reauthorization Act to reinstate the expired powers of the PATRIOT Act. Absent from the new bill is a crucial amendment that would require law enforcement to obtain a warrant before accessing private browsing data recorded by internet service providers. As it stands, the bill grants agencies like the FBI complete access to the internet history of all Americans.\n  The  amendment was proposed by Democratic Sen. Ron Wyden of Oregon and Republican Sen. Steve Daines of Montana. Neither party opposes the amendment at all. When the Senate voted, a number of the amendment\u2019s supporters were absent, and it failed to reach a 60-vote threshold by only one vote. Quite frankly, the failure of the Senate to codify the amendment is an embarrassment.\n Subsequently,  several tech companies including Mozilla, Reddit, Twitter, and Patreon have co-signed a  letter asking the House of Representatives to tidy up this mess. The House still needs to pass the bill for it to become law, and they can force the inclusion of the amendment. They vote this week.\n  \u201cOur users demand that we serve as responsible stewards of their private information, and our industry is predicated on that trust,\u201d says the letter. \u201cAmericans deserve to have their online searches and browsing kept private, and only available to the government pursuant to a warrant.\u201d\n The amendment has also received support from dozens of civil rights and liberties groups, including the NAACP, the American Civil Liberties Union, and the Human Rights Watch. They co-signed a  separate letter last week, which intriguingly points out that \u201cthis reform is precisely designed to stave off the kind of scandals that led to a dramatic loss of trust in United States intelligence agencies over the past two decades.\u201d I think very few people trust the American government\u2019s internet privacy protections these days.", "posttime": "2020-05-25 09:43:36", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "companies,\u4fee\u6b63\u6848", "title": "\u79d1\u6280\u516c\u53f8\u6566\u4fc3\u7f8e\u56fd\u4f17\u8bae\u9662\u4fdd\u62a4\u7f8e\u56fd\u4eba\u6d4f\u89c8\u548c\u641c\u7d22\u5386\u53f2\u7684\u9690\u79c1", "title_en": "Tech Companies Urges US House to Protect the Privacy of Americans' Browsing and Search History", "transed": 1, "url": "https://www.techspot.com/news/85358-internet-giants-fighting-protect-private-browsing-history.html", "via": "", "real_tags": ["companies", "\u4fee\u6b63\u6848"]}, {"category": "", "categoryclass": "", "imagename": "8ac66ea8dfc3af2abd6942179222c958.jpg", "infoid": 1003592, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u62c6\u9664\u9648\u65e7\u7684\u6c34\u575d\uff0c\u62a4\u6cb3\u4eba\u6b63\u5728\u52aa\u529b\u6062\u590d\u54c8\u5fb7\u900a\u6cb3\u8c37\u5c0f\u6eaa\u548c\u6eaa\u6d41\u7684\u751f\u547d\u3002\n\u4e00\u573a\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u770b\u4e0d\u5230\u7684\u5927\u89c4\u6a21\u91ce\u751f\u52a8\u7269\u8fc1\u5f99\uff0c\u6bcf\u5e74\u90fd\u4f1a\u5c06\u6cb3\u9cb1\u9c7c\u3001\u6761\u7eb9\u9c88\u9c7c\u3001\u7f8e\u6d32\u9cd5\u9c7c\u3001\u5927\u897f\u6d0b\u9c9f\u9c7c\u548c\u5176\u4ed6\u7269\u79cd\u5e26\u5165\u54c8\u5fb7\u900a\u6cb3\uff0c\u4ee5\u66f4\u65b0\u5b83\u4eec\u7684\u79cd\u7fa4\u3002\u5c0f\u9cd7\u9c7c\u4ece\u5b83\u4eec\u7684\u53d1\u6e90\u5730\u9a6c\u5c3e\u85fb\u6d77\u6f02\u8fdb\u6765\u3002\u8fd9\u4e9b\u5b63\u8282\u6027\u529b\u91cf\u7684\u529b\u91cf\u8d85\u51fa\u60f3\u8c61\u3002\n\u4f46\u4ee4\u4eba\u60b2\u54c0\u7684\u4e8b\u5b9e\u662f\uff1a\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u53e3\u90fd\u5728\u4e0b\u964d\u3002\u4e00\u4e9b\u7269\u79cd\u6b63\u5728\u6d88\u5931\u3002\u6211\u4eec\u6355\u635e\u4e86\u592a\u591a\u7684\u9c7c\uff0c\u7834\u574f\u4e86\u592a\u591a\u7684\u6816\u606f\u5730\uff0c\u503e\u5012\u4e86\u592a\u591a\u7684\u6bd2\u836f\uff0c\u7b51\u575d\u4e86\u592a\u591a\u7684\u6eaa\u6d41\u3002\n\u5728\u54c8\u5fb7\u900a\u6cb3\u8c37\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u673a\u4f1a\u6765\u5e2e\u52a9\u5176\u4e2d\u4e00\u4e9b\u9c7c\u53cd\u5f39\u3002\u901a\u8fc7\u62c6\u9664\u4e0d\u518d\u8d77\u4f5c\u7528\u7684\u6c34\u575d\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u5f00\u653e\u91cd\u8981\u7684\u4ea7\u5375\u573a\uff0c\u91cd\u632f\u751f\u547d\u4e4b\u7f51\uff0c\u8ba9\u5927\u81ea\u7136\u75ca\u6108\u5e76\u8301\u58ee\u6210\u957f\u3002\n\u5927\u7ea61600\u5ea7\u5927\u575d\uff0c\u5176\u4e2d\u5927\u591a\u6570\u5df2\u7ecf\u8fc7\u65f6\uff0c\u8bb8\u591a\u9690\u85cf\u5728\u4eba\u4eec\u7684\u89c6\u7ebf\u4e4b\u5916\uff0c\u5c06\u54c8\u5fb7\u900a\u6cb3\u8c37\u7684\u6cb3\u6d41\u548c\u6eaa\u6d41\u5206\u5272\u5f00\u6765\u3002\u6211\u4eec\u5728Wynants Kill\u53d6\u5f97\u7684\u91cc\u7a0b\u7891\u5f0f\u7684\u6210\u529f-2016\u5e74\u7531RiverKeeper\u3001\u7279\u6d1b\u4f0a\u5e02\u548c\u5dde\u73af\u5883\u4fdd\u62a4\u90e8\u5b9e\u65bd\u7684\u5927\u575d\u62c6\u9664\u9879\u76ee-\u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\u3002\u5728\u79fb\u8d70\u540e\u7684\u51e0\u5929\u5185\uff0c\u6570\u4ee5\u5343\u8ba1\u7684\u6c5f\u9cb1\u9c7c85\u5e74\u6765\u9996\u6b21\u9006\u6d41\u800c\u4e0a\u4ea7\u5375\u3002\nRiverKeeper\u8ba1\u5212\u57282020\u5e74\u6625\u5b63\u62c6\u9664\u97e6\u65af\u7279\u5207\u65af\u7279\u53bf\u548c\u5965\u5170\u6cbb\u53bf\u7684\u4e24\u5ea7\u5927\u575d\u3002\u7279\u6d1b\u4f0a\u5e02\u6b63\u5728\u8ba8\u8bba\u62c6\u9664\u66f4\u591a\u7684\u6c34\u575d\u3002\u6211\u4eec\u4e00\u8def\u8d70\u6765\u90fd\u5728\u7ed3\u6210\u4f19\u4f34\u5173\u7cfb\u3002\u8fd9\u53ea\u662f\u4e2a\u5f00\u59cb\uff0c\u4f46\u6bcf\u4e00\u6b21\u6210\u529f\u90fd\u4f1a\u5e26\u6765\u66f4\u5927\u7684\u6210\u529f\u3002\n\u89c2\u770b\u4e0a\u9762\u7684\u201c\u62c6\u89e3\u54c8\u5fb7\u900a\u6cb3\u201d\uff0c\u5e76\u4e0e\u4f60\u7684\u90bb\u5c45\u4ea4\u8c08\u3002\u8c08\u8c08\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u3002\u5e76\u5355\u51fb\u4e0b\u9762\u4ee5\u63a5\u6536\u66f4\u65b0\u5e76\u53c2\u4e0e\u5176\u4e2d\u3002\n\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u53ef\u7231\u7684\u53e3\u53f7\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6fc0\u52b1\u60a8\u6210\u4e3a\u8fd9\u4e00\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u6fc0\u52b1\u5176\u4ed6\u4eba\u4e5f\u6210\u4e3a\u8fd9\u4e00\u52aa\u529b\u7684\u4e00\u90e8\u5206\u3002\u5b88\u6cb3\u4eba\u4e0d\u80fd\u4e00\u4e2a\u4eba\u62c6\u6389\u8fd9\u4e9b\u6c34\u575d\u3002\u8fd9\u5c06\u9700\u8981\u793e\u533a\u3001\u90bb\u5c45\u3001\u4e1a\u4e3b\u548c\u673a\u6784\u4e4b\u95f4\u7684\u56e2\u961f\u5408\u4f5c\u3002", "note_en": "By removing old, obsolete dams, Riverkeeper is working to restore life to creeks and streams in the Hudson Valley.\n A great wildlife migration, unseen by most of us, brings river herring, striped bass, American shad, Atlantic sturgeon and other species into the Hudson every year to renew their populations. Tiny eels drift in from their birthplace, the Sargasso Sea. These seasonal forces are powerful beyond imagination.\n But here\u2019s the sad truth: Almost every population is in decline. Some species are vanishing. We harvested too many fish, destroyed too much habitat, dumped too much poison, and dammed too many streams.\n In the Hudson Valley, we have an enormous opportunity to help some of these fish rebound. By removing dams that no longer serve a purpose, we can reopen vital spawning grounds, revive the web of life, and allow nature to heal and flourish.\n   About 1,600 dams, most of them obsolete and many hidden from view, fragment the rivers and streams of the Hudson Valley. Our  landmark success at Wynants Kill \u2013 a dam removal project by Riverkeeper, the City of Troy and the state Department of Environmental Conservation in 2016 \u2013 was just the start. Within days of the removal,  thousands of river herring were moving upstream to spawn for the first time in 85 years.\n Riverkeeper plans to take down two dams in Spring 2020 in Westchester and Orange counties. The City of Troy is talking about removing additional dams. We\u2019re forming partnerships all along the way. This is only the start \u2013 but every success will lead to greater success.\n  Watch \u201cUndamming the Hudson River,\u201d above, and talk to your neighbors. Talk about what\u2019s possible. And click below to receive updates and get involved.\n  It\u2019s not just a cute slogan. Our goal is to inspire you to be part of this effort, and inspire others to be part of it too. Riverkeeper can\u2019t take down these dams alone. It will take teamwork among communities, neighbors, property owners and agencies.\n  Attend a screening: Our next event is  Monday, March 23 in Briarcliff Manor.  Watch our events page for more.\n Read The New York Times: It\u2019s Fish vs. Dams, and the Dams Are Winning  Thousands of dams across New York, many abandoned, are blocking fish migrations. A movement to remove them is growing &gt;\n Have a question? Write to us at  info@riverkeeper.org. Please include \u201cDam info\u201d in the subject line.\n Are you interested in hosting a screening of the short documentary  Undamming the Hudson River by  Jon Bowermaster and Oceans 8 Films? If so, please  fill out this form and we will be in touch to help with planning, informational materials, and promotion.\n Watch Patagonia\u2019s  DamNation. This 2014 documentary explores the sea change in our national attitude from pride in big dams as engineering wonders to the growing awareness that our own future is bound to the life and health of our rivers.\n  The rivers of the Northeastern United States were once said to run silver with unimaginable numbers of migratory fish. Today\u2019s shad and river herring runs are a remnant of their historic population levels, and rainbow smelt are no longer found in the Hudson.Help us remove obstacles, restore critical habitat and bring back an abundance of life to the Hudson.", "posttime": "2020-05-25 09:41:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9648\u65e7,obsolete,\u62c6\u9664", "title": "\u62c6\u9664\u9648\u65e7\u7684\u6c34\u575d\u4f7f\u5c0f\u6eaa\u548c\u6eaa\u6d41\u6062\u590d\u751f\u547d", "title_en": "Removing old, obsolete dams restores life to creeks and streams", "transed": 1, "url": "https://www.riverkeeper.org/campaigns/river-ecology/saving-hudson-river-fish/dam-removal/", "via": "", "real_tags": ["\u9648\u65e7", "obsolete", "\u62c6\u9664"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003591, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b66\u4e60\u9057\u4f20\u5b66[\u4e92\u8054\u7f51]\u3002\u76d0\u6e56\u57ce(UT)\uff1a\u9057\u4f20\u79d1\u5b66\u5b66\u4e60\u4e2d\u5fc3\uff1b2018\u5e74[\u5f15\u75282020\u5e745\u670819\u65e5]\uff0c\u53ef\u4ecehttps://learn.genetics.utah.edu/\u83b7\u5f97\u3002\n\u9057\u4f20\u79d1\u5b66\u5b66\u4e60\u4e2d\u5fc3\u3002\u5b66\u4e60\u9057\u4f20\u5b66\u3002\u5b66\u4e60\u9057\u4f20\u5b66\u30022018\u5e748\u67087\u65e5\u3002\u8bbf\u95ee\u65f6\u95f4\u4e3a2020\u5e745\u670819\u65e5\u3002https://learn.genetics.utah.edu/.", "note_en": "Learn.Genetics [Internet]. Salt Lake City (UT): Genetic Science Learning Center; 2018[cited 2020 May 19] Available from https://learn.genetics.utah.edu/\n  Genetic Science Learning Center. &#34;Learn.Genetics.&#34; Learn.Genetics.August 7, 2018. Accessed May 19, 2020. https://learn.genetics.utah.edu/.", "posttime": "2020-05-25 09:41:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learn", "title": "\u5b66\u4e60\u9057\u4f20\u5b66", "title_en": "Learn Genetics", "transed": 1, "url": "https://learn.genetics.utah.edu/", "via": "", "real_tags": ["\u5b66\u4e60", "learn"]}, {"category": "", "categoryclass": "", "imagename": "c117bd52719ad94e5ff9c0d6848eed32.jpeg", "infoid": 1003590, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u533a\u5757\u94fe\u4f5c\u4e3a\u4e00\u4e2a\u793e\u4f1a\u5411\u6211\u4eec\u627f\u8bfa\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u65b0\u673a\u4f1a\u3002\u5206\u6563\u7684\u94f6\u884c\u7cfb\u7edf\u3002\u53ef\u6301\u7eed\u53d1\u5c55\u7684\u53ef\u8ffd\u6eaf\u6027\u98df\u54c1\u751f\u4ea7\u3002\u4f60\u53ef\u4ee5\u5356\u523010\u4e07\u7f8e\u5143\u4ee5\u4e0a\u7684\u6570\u5b57\u732b\u3002\n\u6700\u540e\u4e00\u4e2a\u5b9e\u9645\u4e0a\u5df2\u7ecf\u4e0d\u662f\u627f\u8bfa\u4e86-\u65e9\u57282017\u5e74\uff0c\u533a\u5757\u94fe\u793e\u533a\u5c31\u628a\u5b83\u5e26\u5230\u4e86\u5168\u7f8e\u7684\u6570\u5b57\u8bbe\u5907\u4e0a\u3002\n\u5728\u4e16\u754c\u4e0a\u6700\u65e9\u7684\u533a\u5757\u94fe\u6e38\u620f\u4e4b\u4e00\u4e2d\u6536\u96c6\u548c\u4ea4\u6613CryptoKitties\u3002\u9972\u517b\u4f60\u6700\u7a00\u6709\u7684\u732b\uff0c\u521b\u9020\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6bdb\u8338\u8338\u7684\u670b\u53cb\u3002\u672a\u6765\u662f\u55b5\uff01\n\u5f53\u6211\u7b2c\u4e00\u6b21\u542c\u8bf4CryptoKitties\u7684\u65f6\u5019\uff0c\u6211\u7684\u5934\u8111\u5b8c\u5168\u88ab\u9707\u64bc\u4e86\u3002\u8001\u5b9e\u8bf4\uff0c\u5728\u6211\u53d1\u73b0\u4e00\u53eaCryptoKitty\u4ee5\u5927\u7ea617\u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u552e\u51fa\u4e4b\u524d\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u8fd9\u5f88\u8352\u8c2c\uff0c\u5f53\u65f6\u6211\u4ecd\u7136\u8ba4\u4e3a\u8fd9\u5f88\u8352\u8c2c\uff0c\u4f46\u6211\u7684\u611f\u89c9\u88ab\u5e0c\u671b\u81ea\u5df1\u57f9\u80b2\u4e86\u90a3\u53ea\u7a00\u6709\u7684\u6570\u5b57\u732b\u6240\u53d6\u4ee3\u3002\n\u8fd9\u6b3e\u6e38\u620f\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u62e5\u6709\u72ec\u7279\u7684CryptoKitties\uff0c\u5e76\u80fd\u591f\u4e00\u8d77\u7e41\u6b96\u81ea\u5df1\u7684\u6570\u5b57\u732b\u3002\u6bcf\u53ea\u732b\u7684\u5c5e\u6027\u90fd\u662f\u901a\u8fc7\u6211\u53ea\u80fd\u5047\u8bbe\u662f\u76f8\u5f53\u590d\u6742\u7684\u5e55\u540e\u7b97\u6cd5\u7ec4\u5408\u5728\u4e00\u8d77\u7684\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u552f\u4e00\u7684CryptoKitty\u3002\u6839\u636e\u732b\u7684\u7c7b\u578b\u3001\u732b\u7684\u7279\u5f81\u3001\u4e16\u4ee3\u4ee5\u53ca\u5176\u4ed6\u51e0\u4e2a\u56e0\u7d20\uff0c\u732b\u88ab\u8ba4\u4e3a\u662f\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7a00\u6709\u3002\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u7279\u5f81\u5e76\u6ca1\u6709\u4e0e\u751f\u4ff1\u6765\u7684\u7a00\u6709\u201c\u5206\u6570\u201d\uff0c\u76f8\u53cd\uff0c\u5f53\u67d0\u4e9b\u7c7b\u578b\u7684\u732b\u5177\u6709\u67d0\u4e9b\u7279\u5f81\u65f6\uff0c\u5b83\u4eec\u5c31\u88ab\u8ba4\u4e3a\u662f\u7a00\u6709\u7684\u3002\u8fd9\u4e9b\u7279\u5f81\u662f\u4ec0\u4e48\uff0c\u4e0d\u540c\u7684\u732b\u662f\u4e0d\u540c\u7684\u3002\n\u7a00\u7f3a\u6027\u7684\u672c\u8d28\u672c\u8d28\u4e0a\u53d6\u51b3\u4e8e\u7a00\u7f3a\u6027\u3002\u4e3a\u4e86\u8ba9\u67d0\u4e9b\u4e1c\u897f\u53d8\u5f97\u7a00\u6709\uff0c\u53ef\u4ee5\u5b58\u5728\u7684\u6570\u91cf\u975e\u5e38\u6709\u9650\uff0c\u800c\u8fd9\u4e00\u4e8b\u5b9e\u672c\u8eab\u5c31\u63a8\u9ad8\u4e86\u5b83\u7684\u4ef7\u503c\u3002\u8fd9\u662f\u7b80\u5355\u7684\u4f9b\u6c42\u5173\u7cfb\u3002\u90a3\u4e48\uff0c\u6570\u5b57\u5316\u7684\u4e1c\u897f\uff0c\u8fd9\u79cd\u672c\u8d28\u4e0a\u53ef\u4ee5\u7528\u5f88\u5c11\u7684\u6210\u672c\u4e00\u904d\u53c8\u4e00\u904d\u5730\u590d\u5236\u7684\u4e1c\u897f\uff0c\u600e\u4e48\u4f1a\u662f\u7a00\u6709\u7684\u5462\uff1f\n\u8fdb\u5165\u533a\u5757\u94fe\u3002\u5bf9\u4e8e\u90a3\u4e9b\u542c\u8fc7\u8fd9\u4e2a\u65f6\u9ae6\u8bcd\u6ca1\u5b8c\u6ca1\u4e86\u5730\u88ab\u629b\u6765\u629b\u53bb\uff0c\u4f46\u8fd8\u4e0d\u5b8c\u5168\u786e\u5b9a\u5b83\u662f\u4ec0\u4e48\u7684\u4eba\u6765\u8bf4\uff0c\u533a\u5757\u94fe\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u65b0\u7684\u6280\u672f\uff0c\u672c\u8d28\u4e0a\u5141\u8bb8\u6211\u4eec\u6a21\u4eff\u73b0\u5b9e\u4e16\u754c\u6240\u5177\u6709\u7684\u7a00\u7f3a\u6027\u548c\u72ec\u7279\u6027\u3002\n\u5728\u975e\u6570\u5b57\u4e16\u754c\u4e2d\uff0c\u751f\u4ea7\u67d0\u79cd\u4e1c\u897f\u662f\u6709\u8d22\u52a1\u6210\u672c\u7684\uff0c\u66f4\u4e0d\u7528\u8bf4\u65f6\u95f4\u3001\u8d44\u6e90\u7b49\u7684\u673a\u4f1a\u6210\u672c\u4e86\u3002\u8fd9\u4e9b\u9650\u5236\u5bfc\u81f4\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u4efb\u4f55\u4e1c\u897f\u90fd\u53ea\u80fd\u751f\u4ea7\u6709\u9650\u7684\u6570\u91cf\u3002\u5373\u4f7f\u6570\u989d\u5f88\u5927\uff0c\u9650\u5236\u4ecd\u7136\u5b58\u5728\u3002\u6b64\u5916\uff0c\u5982\u679c\u6211\u5236\u4f5c\u4e865\u4e2a\u7248\u672c\u7684\u540c\u4e00\u672c\u7eb8\u8d28\u4e66\u6765\u9500\u552e\uff0c\u6211\u5c31\u80fd\u4ece\u672c\u8d28\u4e0a\u77e5\u9053\u8fd95\u672c\u4e66\u7684\u4e0d\u540c\u4e4b\u5904\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u4e00\u76ee\u4e86\u7136\u5730\u770b\u5230\u4e0d\u540c\u7684\u7248\u672c\u3002\u6211\u77e5\u9053\u6bcf\u672c\u4e66\u7684\u62e5\u6709\u8005\u662f\u8c01\uff0c\u56e0\u4e3a\u5f53\u6211\u5356\u51fa\u4e66\u65f6\uff0c\u6211\u4f1a\u7ed9\u522b\u4eba\u4e00\u4e2a\u7248\u672c\u7684\u4e66\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u80fd\u518d\u5356\u90a3\u672c\u4e66\u4e86\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u5728\u6570\u5b57\u4e16\u754c\u4e2d\u6ca1\u6709\u540c\u6837\u7684\u9650\u5236\u3002\u81f3\u5c11\uff0c\u4e0d\u662f\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u3002\u5982\u679c\u6211\u521b\u5efa\u4e86\u4e00\u672c\u6570\u5b57\u56fe\u4e66\uff0c\u6211\u53ef\u4ee5\u5047\u8bbe\u8fd9\u672c\u4e66\u53ef\u4ee5\u65e0\u9650\u6b21\u9500\u552e\u3002\u8fd9\u672c\u4e66\u7684\u4e00\u4e2a\u4eba\u7684\u7248\u672c\u548c\u53e6\u4e00\u4e2a\u4eba\u7684\u7248\u672c\u662f\u65e0\u6cd5\u533a\u5206\u7684\u3002\n\u533a\u5757\u94fe\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u5b83\u7ed9\u4e86\u6211\u4eec\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba9\u6570\u5b57\u4ea7\u54c1\u771f\u6b63\u76f8\u4e92\u533a\u522b\uff0c\u5373\u4f7f\u5b83\u4eec\u770b\u8d77\u6765\u662f\u76f8\u540c\u7684-\u5c31\u50cf\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u4e00\u6837\u3002\n\u533a\u5757\u94fe\u80fd\u591f\u4f7f\u7528\u53ef\u66ff\u6362\u548c\u4e0d\u53ef\u66ff\u6362\u4ee4\u724c\u6765\u6a21\u4eff\u8fd9\u4e9b\u7279\u6027\u3002\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u8bf4\u6cd5\uff1a\n\u4e0d\u53ef\u66ff\u6362\u4ee4\u724c(NFT)\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u52a0\u5bc6\u4ee4\u724c\uff0c\u5b83\u4ee3\u8868\u4e00\u4e9b\u72ec\u7279\u7684\u4e1c\u897f\uff1b\u56e0\u6b64\u4e0d\u53ef\u66ff\u6362\u4ee4\u724c\u4e0d\u53ef\u4e92\u6362\u3002\u8fd9\u4e0e\u6bd4\u7279\u5e01\u7b49\u52a0\u5bc6\u8d27\u5e01\u4ee5\u53ca\u8bb8\u591a\u672c\u8d28\u4e0a\u53ef\u66ff\u4ee3\u7684\u7f51\u7edc\u6216\u516c\u7528\u4e8b\u4e1a\u4ee4\u724c\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\u3002\n\u53ef\u66ff\u6362\u4ee4\u724c\u662f\u7edd\u5927\u591a\u6570\u52a0\u5bc6\u8d27\u5e01\u4f7f\u7528\u7684\uff0c\u5b83\u4ecd\u7136\u63d0\u4f9b\u552f\u4e00\u7684\u8eab\u4efd\uff0c\u4f46\u5177\u6709\u4e00\u81f4\u7684\u4ef7\u503c\uff0c\u4e5f\u88ab\u79f0\u4e3a\u201c\u6cd5\u5b9a\u8d27\u5e01\u201d\u3002\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u7ed9\u5b9a\u7684\u4e00\u5929\uff0c\u4e00\u679a\u6bd4\u7279\u5e01\u76f8\u5f53\u4e8e20\u7f8e\u5143\uff0c\u90a3\u4e48\u5f53\u5929\u5b58\u5728\u7684\u6bcf\u4e00\u679a\u6bd4\u7279\u5e01\u4e5f\u76f8\u5f53\u4e8e20\u7f8e\u5143\u3002\n\u53ef\u66ff\u6362\u4ee4\u724c\u6a21\u4eff\u6570\u5b57\u7269\u54c1\u7684\u72ec\u7279\u6027\u548c\u5c40\u9650\u6027\uff0c\u4f46\u7531\u4e8e\u5176\u5185\u5728\u4ef7\u503c\uff0c\u5b83\u4eec\u4e0d\u4f1a\u6a21\u4eff\u7a00\u6709\u6027\u3002\u56e0\u6b64\uff0cCryptoKitties\u4f7f\u7528\u4e0d\u53ef\u66ff\u6362\u7684\u4ee4\u724c\u3002\u4e0d\u53ef\u66ff\u6362\u4ee4\u724c\u4e3a\u6bcf\u53ea\u732b\u521b\u5efa\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u4f46\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u503c\u4e0d\u540c\u3002\n\u4ee5\u592a\u662fCryptoKitties\u8fd0\u884c\u7684\u533a\u5757\u94fe\u5e73\u53f0\u3002\u8fd9\u662f\u6700\u65e9\u7684\u5e94\u7528\u4e4b\u4e00\uff0cCryptoKitties\u662f\u4ee5\u592a\u548c\u533a\u5757\u94fe\u6700\u65e9\u7684\u5e94\u7528\u4e4b\u4e00\u3002\u73b0\u5728\uff0c\u4e8b\u60c5\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u4e86\u3002CryptoKitties\u5b9e\u9645\u4e0a\u662f\u4f5c\u4e3a\u5bf9Etherum\u5e73\u53f0\u7684\u6d4b\u8bd5\u800c\u521b\u5efa\u7684\u3002\u6e38\u620f\u80cc\u540e\u7684\u56e2\u961f\u60f3\u770b\u770b\u4ee5\u592a\u5c06\u5982\u4f55\u6269\u5c55\uff0c\u672c\u8d28\u4e0a\u662f\u8bd5\u56fe\u5bf9\u5176\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\uff0c\u8bd5\u56fe\u6253\u7834\u5b83\uff0c\u770b\u770b\u4ed6\u4eec\u9700\u8981\u5728\u54ea\u91cc\u52a0\u5f3a\u5b83\u3002\n\u6570\u5b57\u732b\u662f\u8fd9\u9879\u7a81\u7834\u6027\u6280\u672f\u7684\u9996\u6279\u5e94\u7528\u4e4b\u4e00\uff0c\u8fd9\u5c31\u66f4\u6709\u610f\u4e49\u4e86\uff0c\u5bf9\u5427\uff1f\n\u8fd9\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6e38\u620f\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u5b83\u6210\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u6e38\u620f\u3002CryptoKitties\u7684\u76ee\u7684\u662f\u4f5c\u4e3a\u4ee5\u592a\u7684\u538b\u529b\u6e90\uff0c\u8ba9\u56e2\u961f\u770b\u5230\u5b83\u5728\u89c4\u6a21\u4e0a\u7684\u4e0d\u8db3\u4e4b\u5904\uff0c\u5e76\u5c06\u5176\u6536\u7d27\u3002\u4f46\u8fd9\u573a\u6bd4\u8d5b\u7684\u6210\u529f\u7a0b\u5ea6\u8d85\u51fa\u4e86\u4ed6\u4eec\u7684\u60f3\u8c61\u3002\n\u6700\u7a00\u6709\u7684CryptoKitties\u53ef\u4ee5\u5356\u523010\u4e07\u7f8e\u5143\u4ee5\u4e0a\uff0c\u636e\u62a5\u9053\uff0c\u4e2a\u4eba\u7528\u6237\u5728\u4ed6\u4eec\u7684\u6536\u85cf\u4e0a\u82b1\u8d39\u4e86\u9ad8\u8fbe670\u4e07\u7f8e\u5143\u3002\u8fd9\u4e2a\u6545\u4e8b\u7684\u5bd3\u610f\u662f\uff0c\u5982\u679c\u4e00\u53ea\u6570\u5b57\u732b\u53ef\u4ee5\u5356\u523017\u4e07\u7f8e\u5143\uff0c\u6211\u60f3\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u5356\u523020\u4e07\u7f8e\u5143\u7684\u6570\u5b57\u72d7-\u8fd8\u6709\u4eba\u60f3\u52a0\u5165\u5417\uff1f", "note_en": "The blockchain has promised us incredible new opportunities as a society. A decentralized banking system. Traceable food production for sustainability purposes. Digital cats that you can sell for over $100,000.\n That last one actually isn\u2019t a promise anymore \u2014 the blockchain community brought it to digital devices all across the U.S. back in 2017.\n   Collect and trade  CryptoKitties in one of the world\u2019s first blockchain games. Breed your rarest cats to create the purrfect furry friend. The future is meow!\n When I first heard about  CryptoKitties, my mind was completely blown. To be honest I thought it was absurd until I found out that a single CryptoKitty had sold for roughly $170,000, at which point I still thought it was absurd but the feeling was overtaken by wishing that I had bred that rare digital cat.\n  The game works such that users own unique CryptoKitties, and are able to breed their own digital cats together. The attributes of each cat are combined through what I can only assume is a decently complex algorithm behind the scenes, to create a new unique CryptoKitty. Based on the type of cat, the cat\u2019s traits, the generation, and a few other factors, the cat is deemed to be a certain level of rarity. To be clear though, traits do not have an inherent rarity \u201cscore\u201d, but rather, certain types of cats are deemed to be rare when they have certain traits. What those traits are, differs from cat to cat.\n   The nature of rarity is inherently dependent on scarcity. In order for something to be rare, a very limited number can exist, and this very fact drives up its value. It is simple supply and demand. So how can something digital, something that by its very nature can be replicated over and over again at very little cost, be rare?\n Enter the blockchain. For those of you who have heard this buzzword tossed around endlessly but are not entirely sure what it is still, the blockchain is a relatively new technology that, in essence, allows us to mimic the qualities of scarcity and uniqueness that the real world has.\n In the non-digital world, there is a financial cost to produce something, not to mention the opportunity cost of time, resources, etc. These limitations lead to a truth that only a finite amount of anything can ever be produced.  Even if the amount is large, the limit still exists. Furthermore, if I produce 5 versions of the same exact physical book to sell, I inherently know the difference between the 5 books because I can see the different versions in plain sight. I understand who owns each one because I physically give someone a version of the book upon selling it, at which point  I can no longer sell that book.\n We don\u2019t have those same limitations in the digital world, though. At least, not in the same way. If I create a digital book, I can hypothetically sell that book infinite times. There is no way to differentiate between one person\u2019s copy of the book from a different person\u2019s copy.\n The blockchain solves this problem. It gives us a way to make digital items truly unique from one another, even if they are seemingly identical \u2014 just like in the real world.\n  The blockchain is able to mimic these qualities using fungible and non-fungible tokens. According to Wikipedia:\n A  non-fungible token (NFT) is a special type of  cryptographic token which represents something unique; non-fungible tokens are thus not interchangeable. This is in contrast to cryptocurrencies like  bitcoin, and many network or utility tokens that are  fungible in nature.\n A fungible token, which is what the overwhelming majority of cryptocurrencies use, still provides a unique identity but has a consistent value, also known as \u201cfiat money\u201d. All that this really means is that if on a given day one bitcoin is equivalent to $20 USD, then every single bitcoin in existence on that day is also equivalent to $20 USD.\n Fungible tokens mimic uniqueness and limitations for digital items, but because of the intrinsic value, they don\u2019t mimic rarity. For this reason, CryptoKitties uses non-fungible tokens. Non-fungible tokens create a unique identity for each cat, but the values differ among them.\n  Ethereum is the blockchain platform on which CryptoKitties runs. It was one of the first, and CryptoKitties was one of the first applications of Ethereum and the blockchain. Now here is where it gets funny. CryptoKitties were actually created as a test for the Ethereum platform. The team behind the game wanted to see how Ethereum would scale, and essentially was trying to perform stress tests on it to try to break it and see where they needed to strengthen it.\n Makes a little more sense that digital cats were one of the first applications of this ground-breaking technology, right?\n It wasn\u2019t intended to be a real game, but that didn\u2019t stop it from becoming one. CryptoKitties served its purpose as a stressor on Ethereum and allowed the team to see where it was lacking at scale and to tighten it up. But the game took off more than they ever could have imagined.\n The rarest of CryptoKitties can sell for well over $100,000, and it has been reported that individual users have spent as much as $6.7 million on their collection. The moral of the story here is, if a digital  cat can sell for $170,000, I think we could get at least $200,000 for a digital dog \u2014 anyone else want in?", "posttime": "2020-05-25 09:41:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u50ac\u751f,application,cryptokitties", "title": "CryptoKitties\uff1a\u533a\u5757\u94fe\u7684\u5e94\u7528\u50ac\u751f\u4e86\u4ef7\u503c10\u4e07\u7f8e\u5143\u7684\u6570\u5b57\u732b", "title_en": "CryptoKitties: An Application of Blockchain That Led to Digital Cats Worth $100k", "transed": 1, "url": "https://medium.com/swlh/cryptokitties-an-early-application-of-the-blockchain-that-led-to-digital-cats-worth-100k-c21f7eee4dc7", "via": "", "real_tags": ["app", "\u50ac\u751f"]}, {"category": "", "categoryclass": "", "imagename": "8ab0817749c1cbea867b9a80e115ed2f.jpg", "infoid": 1003588, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e94\u5e74\u591a\u6765\uff0c\u7206\u7c73\u82b1\u65f6\u95f4\u4e00\u76f4\u662f\u597d\u83b1\u575e\u7684\u773c\u4e2d\u9489\u3002\n\u201c\u6d77\u76d7Netflix\u201d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u5305\u542b\u6570\u5343\u90e8\u6d41\u5a92\u4f53\u7535\u5f71\u548c\u7535\u89c6\u8282\u76ee\u7684\u8d44\u6599\u5e93\u3002\n\u7535\u5f71\u534f\u4f1a(MPA)\u5f88\u65e9\u5c31\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u5a01\u80c1\uff0c\u5e76\u8feb\u4f7f\u539f\u59cb\u5f00\u53d1\u4eba\u5458\u8ba4\u8f93\u3002\u8fd9\u594f\u6548\u4e86\uff0c\u4f46\u4e3a\u65f6\u5df2\u665a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5f00\u6e90\u9879\u76ee\u5f88\u5feb\u5c31\u88ab\u5176\u4ed6\u4eba\u590d\u5174\u4e86\u3002\n\u4eca\u5929\uff0c\u7206\u7c73\u82b1\u65f6\u95f4\u901a\u8fc7\u8bb8\u591a\u9879\u76ee\u5206\u53c9\u7ee7\u7eed\u5b58\u5728\u3002\u6700\u53d7\u6b22\u8fce\u7684\u662fPopcornTime.app\uff0c\u5b83\u548c\u5b83\u7684\u524d\u8eab\u4e00\u6837\uff0c\u5728\u5f00\u53d1\u8005\u6258\u7ba1\u5e73\u53f0GitHub\u4e0a\u516c\u5f00\u5206\u4eab\u6e90\u4ee3\u7801\u3002\u8fd9\u5141\u8bb8\u5176\u4ed6\u4eba\u4e0b\u8f7d\u3001\u4fee\u6539\u548c\u5171\u4eab\u5b83\u3002\nMPA\u5bf9\u6b64\u611f\u5230\u4e0d\u6ee1\uff0c\u6700\u8fd1\u91c7\u53d6\u4e86\u884c\u52a8\u3002\u7535\u5f71\u4e1a\u7ec4\u7ec7\u5411\u5fae\u8f6f\u65d7\u4e0b\u7684GitHub\u901a\u62a5\u4e86\u8be5\u8f6f\u4ef6\u7684\u4fb5\u6743\u6027\u8d28\u3002\u636eMPA\u79f0\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5305\u62ec\u6307\u5411\u76d7\u7248\u7f51\u7ad9\u3001\u76d7\u7248API\u548c\u6d77\u76d7\u6d2a\u6d41\u8ddf\u8e2a\u5668\u7684\u94fe\u63a5\uff0c\u8fd9\u4e9b\u94fe\u63a5\u7528\u4e8e\u4e0b\u8f7d\u76d7\u7248\u7535\u5f71\u548c\u7535\u89c6\u8282\u76ee\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0cMPA\u5efa\u8bae\uff0c\u5982\u679c\u516c\u53f8\u4e0d\u91c7\u53d6\u884c\u52a8\uff0cGitHub\u672c\u8eab\u53ef\u80fd\u8981\u627f\u62c5\u4fb5\u72af\u7248\u6743\u7684\u8d23\u4efb\u3002\n\u867d\u7136GitHub\u53ef\u80fd\u4e0d\u540c\u610fMPA\u5bf9\u6cd5\u5f8b\u7684\u89e3\u91ca\uff0c\u4f46\u8be5\u516c\u53f8\u786e\u5b9e\u5220\u9664\u4e86\u7206\u7c73\u82b1\u65f6\u95f4\u4ee3\u7801\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u662f\u6545\u4e8b\u7684\u7ed3\u675f\uff0c\u4f46\u7206\u7c73\u82b1\u65f6\u95f4\u4e0d\u4f1a\u4e0d\u6218\u800c\u9000\u3002\n\u5f00\u53d1\u5546\u63d0\u4ea4\u4e86DMCA\u53cd\u901a\u77e5\uff0c\u89e3\u91caMPA\u7684\u8bf7\u6c42\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u8be5\u4ee3\u7801\u5c5e\u4e8e\u7206\u7c73\u82b1\u65f6\u95f4\uff0c\u800c\u4e0d\u662fMPA\uff0c\u7206\u7c73\u82b1\u65f6\u95f4\u8981\u6c42GitHub\u6062\u590d\u8bbf\u95ee\u3002\n\u201c\u8be5\u4ee3\u7801\u662f\u767e\u5206\u4e4b\u767e\u6211\u4eec\u7684\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u7248\u6743[\u539f\u6587\u5982\u6b64]\u6750\u6599\uff0c\u8bf7\u518d\u6b21\u68c0\u67e5\uff0c\u201d\u5f00\u53d1\u4eba\u5458\u5199\u9053\u3002\n\u8fd9\u6b3e\u5e94\u7528\u7684\u5f00\u53d1\u4eba\u5458\u5728\u8fd9\u91cc\u63d0\u51fa\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u89c2\u70b9\u3002\u8bc6\u522b\u7684\u4ee3\u7801(\u4e0d\u662f\u6784\u5efa\u7684\u5e94\u7528\u7a0b\u5e8f)\u5e76\u4e0d\u76f4\u63a5\u4fb5\u72af\u7248\u6743\uff0c\u4e5f\u4e0d\u5305\u542b\u4e0e\u4fb5\u72af\u7248\u6743\u7684\u6750\u6599\u7684\u76f4\u63a5\u94fe\u63a5\u3002\u8fd9\u610f\u5473\u7740DMCA\u901a\u77e5\u5728\u8fd9\u91cc\u53ef\u80fd\u4e0d\u662f\u6b63\u786e\u7684\u5de5\u5177\u3002\n\u9762\u5bf9\u8fd9\u4e24\u4e2a\u8bf7\u6c42\uff0cGitHub\u73b0\u5728\u51b3\u5b9a\u6062\u590d\u5bf9\u7206\u7c73\u82b1\u65f6\u95f4\u5b58\u50a8\u5e93\u7684\u5b8c\u5168\u8bbf\u95ee\u3002\n\u7136\u800c\uff0c\u8fd9\u4e00\u51b3\u5b9a\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u5b83\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u610f\u89c1\u4e00\u81f4\u3002DMCA\u7b80\u5355\u5730\u89c4\u5b9a\uff0c\u5728\u53d1\u51fa\u53cd\u901a\u77e5\u540e\uff0c\u5185\u5bb9\u53ef\u4ee5\u5728\u4e24\u5468\u540e\u6062\u590d\uff0c\u9664\u975e\u7d22\u8d54\u65b9\u63d0\u8d77\u8bc9\u8bbc\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cMPA\u9009\u62e9\u4e0d\u5bf9\u7206\u7c73\u82b1\u65f6\u95f4\u8fd0\u8425\u5546\u63d0\u8d77\u8bc9\u8bbc\uff0c\u56e0\u6b64\u4ee3\u7801\u5e93\u53c8\u91cd\u65b0\u4e0a\u7ebf\u4e86\u3002\nMPA\u662f\u5426\u4f1a\u91c7\u53d6\u8fdb\u4e00\u6b65\u884c\u52a8\u8fd8\u6709\u5f85\u89c2\u5bdf\u3002\u7136\u800c\uff0c\u6574\u96c6\u7a81\u51fa\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u7206\u7c73\u82b1\u65f6\u95f4\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u6b3e\u76d7\u7248\u5e94\u7528\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u7531GitHub\u6258\u7ba1\u7684\u4ee3\u7801\u672c\u8eab\u5e76\u6ca1\u6709\u4fb5\u6743\u3002\u56e0\u6b64\uff0c\u5e38\u89c4\u7684\u4e0b\u67b6\u901a\u77e5\u4f3c\u4e4e\u5728\u8fd9\u91cc\u884c\u4e0d\u901a\u3002", "note_en": "For more than half a decade, Popcorn Time has been a thorn in the side of Hollywood.\n The \u2018Netflix for Pirates\u2019 offers an easy-to-use application that opens the door to a library of thousands of streamable movies and TV-shows.\n The Motion Picture Asociation (MPA) recognized this threat early on and pressured the original developers to throw in the towel. That worked, but it came too late as the open-source project was swiftly revived by others.\n Today, Popcorn Time lives on through many project forks. The most popular is PopcornTime.app, which like its predecessor,  shares its source code publicly on the developer hosting platform GitHub. This allows others to download, modify, and share it.\n The MPA is not happy with this and took action recently. The movie industry group  informed GitHub, which is owned by Microsoft, about the infringing nature of the software. According to the MPA, the application includes links to pirate sites, pirate APIs, and pirate torrent trackers, which are used to download pirated movies and TV-shows.\n  On top of that, the MPA suggested that GitHub itself may be liable for copyright infringement if the company fails to take action.\n While the MPA\u2019s interpretation of the law is likely not shared by GitHub, the company did remove the Popcorn Time code. In most cases that would be the end of the story, but Popcorn Time was not backing off without a fight.\n The developers submitted a DMCA counternotice explaining that the MPA\u2019s request is not legitimate. The code is owned by Popcorn Time, not the MPA, and Popcorn Time asked GitHub to restore access.\n \u201cThe code is 100 % ours and do not contain any copyright [sic] material please check again,\u201d the  developer wrote.\n The app\u2019s developers made a good point here. The identified code (not the built app) is not directly copyright infringing and it contains no direct links to copyright-infringing material either. This means that a DMCA notice may not be the right tool here.\n Faced with both requests, GitHub has now decided to restore full access to the Popcorn Time repository.\n This decision doesn\u2019t necessarily mean that it agrees with the app developers, however. The DMCA simply prescribes that, following a counternotice, content can be restored after two weeks, unless the claiming party files a lawsuit.\n  In this case, the MPA chose not to file a lawsuit against the Popcorn Time operators, so the code repositories are back online again.\n Whether the MPA will follow-up with further action has yet to be seen. However, the whole episode highlights an interesting issue. There is little doubt that the Popcorn Time application is a pirate app. However, the code, as hosted by GitHub, is not infringing per se. As such, regular takedown notices don\u2019t appear to work here.", "posttime": "2020-05-25 09:24:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "github,\u4e0d\u987e,reinstates", "title": "GitHub\u4e0d\u987eMPA\u201c\u5a01\u80c1\u201d\u6062\u590d\u7206\u7c73\u82b1\u65f6\u95f4\u7801", "title_en": "GitHub Reinstates Popcorn Time Code Despite MPA \u2018Threat\u2019", "transed": 1, "url": "https://torrentfreak.com/github-reinstates-popcorn-time-code-despite-mpa-threat-200520/", "via": "", "real_tags": ["github", "\u4e0d\u987e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003587, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u6b63\u5728\u4f7f\u7528MapBox\u7684\u8def\u7531\u4f18\u5316API\u3002\u57fa\u672c\u4e0a\uff0c\u5b83\u8bd5\u56fe\u89e3\u51b3\u65c5\u884c\u5546\u95ee\u9898\uff0c\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u60a8\u5411API\u63d0\u4f9b\u591a\u4e2a\u5730\u70b9\u7684\u5750\u6807\uff0c\u5e76\u4e14\u5b83\u8fd4\u56de\u8fd9\u4e9b\u5730\u70b9\u4e4b\u95f4\u7684\u6301\u7eed\u65f6\u95f4\u4f18\u5316\u7684\u8def\u5f84\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u7528\u4f8b\uff0c\u5728\u8fd9\u91ccRedis\u7f13\u5b58\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002Redis\u662f\u4e00\u4e2a\u901f\u5ea6\u6781\u5feb\u7684\u8f7b\u91cf\u7ea7\u5185\u5b58\u6570\u636e\u5e93\uff0c\u5177\u6709\u989d\u5916\u7684\u6301\u4e45\u6027\u9009\u9879\uff1b\u4f7f\u5176\u6210\u4e3a\u624b\u5934\u4efb\u52a1\u7684\u5b8c\u7f8e\u5019\u9009\u8005\u3002\u5728\u8fd9\u91cc\uff0c\u7f13\u5b58\u53ef\u4ee5\u4f7f\u60a8\u514d\u4e8e\u53d1\u51fa\u5197\u4f59\u7684API\u8bf7\u6c42\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u663e\u8457\u7f29\u77ed\u54cd\u5e94\u65f6\u95f4\u3002\n\u6211\u53d1\u73b0\u5728\u6211\u7684\u56fd\u5bb6\uff0cAPI\u8fd4\u56de\u7684\u4f18\u5316\u8def\u7531\u81f3\u5c11\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u6ca1\u6709\u663e\u8457\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u5de5\u4f5c\u6d41\u7a0b\u5c06\u5982\u4e0b\u6240\u793a\uff1a\n\u4f7f\u7528\u952e\u503c\u6570\u636e\u7ed3\u6784\u5728Redis\u4e2d\u7f13\u5b58API\u54cd\u5e94\u3002\u8fd9\u91cc\uff0c\u8bf7\u6c42\u7684\u5750\u6807\u5b57\u7b26\u4e32\u5c06\u662f\u5173\u952e\u5b57\uff0c\u54cd\u5e94\u5c06\u662f\u76f8\u5e94\u503c\u3002\n\u4ec5\u5728\u54cd\u5e94\u672a\u7f13\u5b58\u65f6\u624d\u5411MapBox API\u53d1\u9001\u65b0\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u8be5\u54cd\u5e94\u6dfb\u52a0\u5230\u7f13\u5b58\u3002\n\u8981\u7ee7\u7eed\u6267\u884c\u4e0a\u8ff0\u5de5\u4f5c\u6d41\uff0c\u60a8\u9700\u8981\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u548c\u8bbe\u7f6eRedis\u6570\u636e\u5e93\u3002\u4e3a\u4e86\u76d1\u89c6\u6570\u636e\u5e93\uff0c\u6211\u5c06\u4f7f\u7528RedisInsight\u3002\u8bbe\u7f6eRedis\u548cRedisInsight\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u901a\u8fc7docker\u548cdocker-compose\u3002\u8fd9\u91cc\u6709\u4e00\u4e2adocker-compose\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u901a\u8fc7\u4e00\u4e2a\u547d\u4ee4\u8bbe\u7f6e\u6240\u6709\u5185\u5bb9\u3002\n#docker-compose.yml\u7248\u672c\uff1a&#34\uff1b3.2&#34\uff1b\u670d\u52a1\uff1aredis\uff1a\u5bb9\u5668\u540d\u79f0\uff1aredis-cont image\uff1a&#34\uff1bredis\uff1aalpine&#34\uff1b\u547d\u4ee4\uff1aredis-server--\u8981\u6c42\u901a\u8fc7ubuntu\u73af\u5883\uff1a-redis_password=ubuntu-redis_Replication_mode=master ports\uff1a-&#34\uff1b6379\uff1a6379&#34\uff1b\u5377\uff1a#\u5c06\u91cd\u65b0\u641c\u7d22\u6570\u636e\u4fdd\u5b58\u5230\u60a8\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55-./redis-data\uff1a/data\u547d\u4ee4\uff1a#\u5982\u679c\u6bcf10\u79d2\u6dfb\u52a0100\u4e2a\u5bc6\u94a5\uff0c\u5219\u4fdd\u5b58-&#34\uff1b--save 10 100&#34\uff1b#set password-&#34\uff1b--redissight\uff1a#redis db\u53ef\u89c6\u5316\u4eea\u8868\u677fCONTAINER_NAME\uff1aredisinsight-cont image\uff1aredislabs/redissight ports\uff1a-8001\uff1a8001\u5377\uff1a-redisinsight\uff1a/db\u3002\n\u4e0a\u8ff0docker-composed\u6587\u4ef6\u6709\u4e24\u4e2a\u670d\u52a1\uff1aredis\u548credissight\u3002\u6211\u5df2\u7ecf\u4f7f\u7528\u865a\u62df\u5bc6\u7801ubuntu\u8bbe\u7f6e\u4e86\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u540d\u4e3aredis-data\u7684\u6587\u4ef6\u5939\u4f7f\u5176\u6301\u4e45\u5316\u3002\u6570\u636e\u5e93\u76d1\u542c\u672c\u5730\u4e3b\u673a\u7684\u7aef\u53e36379\u3002\u60a8\u53ef\u4ee5\u5728\u7aef\u53e38000\u4e2d\u4f7f\u7528redissight\u6765\u76d1\u89c6\u6570\u636e\u5e93\u3002\u8981\u542f\u52a8Redis\u548cRedisInsight\u5bb9\u5668\uff0c\u8bf7\u8fd0\u884c\uff1a\n\u6b64\u547d\u4ee4\u5c06\u542f\u52a8\u6570\u636e\u5e93\u5e76\u76f8\u5e94\u5730\u8fdb\u884c\u76d1\u89c6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u8f6c\u5230\u8fd9\u4e2alocalhost\uff1a8000\u94fe\u63a5\uff0c\u5e76\u5c06redissight\u8fde\u63a5\u5230\u60a8\u7684\u6570\u636e\u5e93\u3002\u8fde\u63a5\u6570\u636e\u5e93\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u5728\u91cd\u65b0\u6d1e\u5bdf\u9762\u677f\u4e2d\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u4eea\u8868\u677f\uff1a\n\u5bf9\u4e8e\u672c\u5730\u5f00\u53d1\uff0c\u60a8\u53ef\u4ee5\u8bbe\u7f6e\u60a8\u7684python\u73af\u5883\u5e76\u4f7f\u7528pip\u5b89\u88c5\u4f9d\u8d56\u9879\u3002\u8fd9\u91cc\uff0c\u6211\u5728\u4e00\u53f0Linux\u673a\u5668\u4e0a\uff0c\u4f7f\u7528\u865a\u62df\u73af\u5883\u8fdb\u884c\u9694\u79bb\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u57fa\u4e8e*nix\u7684\u7cfb\u7edf\u5e76\u5728\u60a8\u7684\u7cfb\u7edf\u4e0a\u5b89\u88c5\u4e86python3.8\uff0c\u5219\u4ee5\u4e0b\u547d\u4ee4\u5c06\u8d77\u4f5c\u7528\u3002\u8fd9\u5c06\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u5fc5\u8981\u7684\u4f9d\u8d56\u9879\uff1a\n\u5047\u8bbe\u6570\u636e\u5e93\u670d\u52a1\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u5e76\u4e14\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86\u4f9d\u8d56\u9879\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u65ad\u5c06redis-py\u5ba2\u6237\u673a\u8fde\u63a5\u5230\u6570\u636e\u5e93\u3002\n\u5bfc\u5165redis\u5bfc\u5165sys def redis_connect()-&gt\uff1bredis\u3002\u5ba2\u6237\u3002redis\uff1atry\uff1aclient=redis\u3002redis(host=&#34\uff1blocalhost&#34\uff1b\uff0cport=6379\uff0cpassword=&#34\uff1bubuntu&#34\uff1b\uff0cdb=0\uff0csocket_timeout=5\uff0c)ping=client\u3002ping()\u5982\u679cping\u4e3aTrue\uff1a\u8fd4\u56de\u9664redis\u4e4b\u5916\u7684\u5ba2\u6237\u7aef\u3002AuthenticationError\uff1a\u6253\u5370(&#34\uff1bAuthenticationError&#34\uff1b)sys\u3002\u9000\u51fa(1)\u5ba2\u6237\u7aef=redis_connect()\u3002\n\u4e0a\u9762\u7684\u6458\u5f55\u5c1d\u8bd5\u4f7f\u7528\u7aef\u53e36379\u8fde\u63a5\u5230Redis\u6570\u636e\u5e93\u670d\u52a1\u5668\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u662f\u5982\u4f55\u901a\u8fc7password\u53c2\u6570\u63d0\u4f9b\u5bc6\u7801ubuntu\u7684\u3002\u5728\u8fd9\u91cc\uff0cclient.ping()\u5e2e\u52a9\u60a8\u786e\u5b9a\u8fde\u63a5\u662f\u5426\u5df2\u6210\u529f\u5efa\u7acb\u3002\u5982\u679c\u53ef\u4ee5\u5efa\u7acb\u6210\u529f\u7684\u8fde\u63a5\uff0c\u5219\u8fd4\u56deTrue\uff0c\u6216\u8005\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u5f15\u53d1\u7279\u5b9a\u7684\u9519\u8bef\u3002\u4e0a\u9762\u7684\u51fd\u6570\u5904\u7406AuthenticationError\uff0c\u5e76\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u6253\u5370\u51fa\u9519\u8bef\u6d88\u606f\u3002\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8fd0\u884credis_connect()\u51fd\u6570\u5c06\u8fd4\u56deredis.client.Redis\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u7a0d\u540e\u5c06\u4f7f\u7528\u6b64\u5b9e\u4f8b\u5728Redis\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u548c\u68c0\u7d22\u6570\u636e\u3002\n\u4f7f\u7528httpx\u4eceMapbox API\u5bfc\u5165httpx def get_routes_from_api(\u5750\u6807\uff1astr)-&gt\uff1bdict\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u6570\u636e\u3002\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684Client()\uff1aBase_url=&#34\uff1bhttps://api.mapbox.com/optimized-trips/v1/mapbox/driving&#34\uff1bGeometries=&#34\uff1bGeojson&#34\uff1bAccess_Token=&#34\uff1bYour-MapBox-api-Token&#34\uff1burl=f&#34\uff1b{base_url}/{coordinates}\uff1fgeometries={geometries}&amp\uff1baccess_token={access_token}&#34\uff1bResponse=Client\u3002get(Url)\u8fd4\u56de\u54cd\u5e94\u3002json()\u3002\n\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528Python\u7684httpx\u5e93\u53d1\u51faGET\u8bf7\u6c42\u3002Httpx\u51e0\u4e4e\u662f\u65e0\u5904\u4e0d\u5728\u7684\u8bf7\u6c42\u5e93\u7684\u4e34\u65f6\u66ff\u4ee3\u54c1\uff0c\u4f46\u901f\u5ea6\u66f4\u5feb\uff0c\u5e76\u4e14\u652f\u6301\u5f02\u6b65\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668httpx.Client()\u5728\u53d1\u51faGET\u8bf7\u6c42\u65f6\u8fdb\u884c\u66f4\u597d\u7684\u8d44\u6e90\u7ba1\u7406\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u8fdb\u884c\u65e0\u9ebb\u70e6\u8d44\u6e90\u7ba1\u7406\u7684\u5185\u5bb9\u3002\nbase_url\u662f\u8def\u7531\u4f18\u5316API\u7684\u57fa\u672curl\uff0c\u60a8\u9700\u8981\u5728access_Token\u5b57\u6bb5\u4e2d\u63d0\u4f9b\u60a8\u81ea\u5df1\u7684\u8bbf\u95ee\u4ee4\u724c\u3002\u8bf7\u6ce8\u610f\uff0curl\u53d8\u91cf\u5982\u4f55\u6784\u5efa\u6700\u7ec8\u7684\u8bf7\u6c42url\u3002\u5750\u6807\u4f7f\u7528lat0\uff0clon0\uff1blat1\uff0clon1\uff1blat2\uff0clon2.\u3002\u683c\u5f0f\u3002\u51fd\u6570\u7684\u5176\u4f59\u90e8\u5206\u53d1\u9001http\u8bf7\u6c42\uff0c\u5e76\u4f7f\u7528response.json()\u65b9\u6cd5\u5c06\u54cd\u5e94\u8f6c\u6362\u4e3a\u672c\u673a\u5b57\u5178\u5bf9\u8c61\u3002\nFROM DATETIME IMPORT TIME\u589e\u91cf\u5b9a\u4e49GET_ROUTS_FROM_CACHE(KEY\uff1aSTR)-&gt\uff1bstr\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u4eceredis\u83b7\u53d6\u6570\u636e\u3002&#34\uff1b&#34\uff1b&#34\uff1bval=client\u3002get(Key)return val val def set_routes_to_cache(key\uff1astr\uff0cvalue\uff1astr)-&gt\uff1bbool\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u5c06\u6570\u636e\u8bbe\u7f6e\u4e3aredis\u3002&#34\uff1b&#34\uff1b&#34\uff1bstate=client\u3002Setex(\u952e\uff0c\u65f6\u95f4\u589e\u91cf(\u79d2=3600)\uff0c\u503c=\u503c\uff0c)\u8fd4\u56de\u72b6\u6001\n\u8fd9\u91cc\uff0c\u952e\u548c\u503c\u90fd\u662f\u5b57\u7b26\u4e32\u3002\u5728\u7b2c\u4e8c\u4e2a\u51fd\u6570set_routes_to_cache\u4e2d\uff0cclient.setex()\u65b9\u6cd5\u8bbe\u7f6e\u952e\u7684\u8d85\u65f6\u65f6\u95f4\u4e3a1\u5c0f\u65f6\u3002\u4e4b\u540e\uff0c\u952e\u53ca\u5176\u5173\u8054\u503c\u5c06\u81ea\u52a8\u5220\u9664\u3002\nROUTE_OPTIMA\u51fd\u6570\u662f\u7f16\u6392\u548c\u6267\u884c\u9488\u5bf9\u8bf7\u6c42\u7684\u54cd\u5e94\u7684\u7f13\u5b58\u548c\u8fd4\u56de\u7684\u4e3b\u4ee3\u7406\u3002\u5b83\u5927\u81f4\u9075\u5faa\u5982\u4e0b\u6240\u793a\u7684\u6267\u884c\u6d41\u7a0b\u3002\n\u5f53\u65b0\u8bf7\u6c42\u5230\u8fbe\u65f6\uff0c\u8be5\u51fd\u6570\u9996\u5148\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u5b58\u5728\u4e8eRedis\u7f13\u5b58\u4e2d\u3002\u5982\u679c\u8be5\u503c\u5b58\u5728\uff0c\u5b83\u4f1a\u663e\u793a\u7f13\u5b58\u503c\uff0c\u5426\u5219\uff0c\u5b83\u4f1a\u5411MapBox API\u53d1\u9001\u4e00\u4e2a\u65b0\u8bf7\u6c42\uff0c\u7f13\u5b58\u8be5\u503c\uff0c\u7136\u540e\u663e\u793a\u7ed3\u679c\u3002\ndef route_Optima(\u5750\u6807\uff1astr)-&gt\uff1bdict\uff1a#\u9996\u5148\uff0c\u5b83\u5728redis cache data=get_routes_from_cache(key=\u5750\u6807)#\u4e2d\u67e5\u627e\u6570\u636e\u3002#\u5982\u679c\u627e\u5230\u7f13\u5b58\uff0c\u5219\u5728\u6570\u636e\u4e0d\u4e3aNone\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u6765\u81ea\u7f13\u5b58\u7684\u6570\u636e\uff1adata=json\u3002Loads(Data)data[&#34\uff1bcache&#34\uff1b]=True return data\u5426\u5219\uff1a#\u5982\u679c\u6ca1\u6709\u627e\u5230cache\uff0c\u5219\u5411MapBox API data=get_routes_from_api(\u5750\u6807)#\u6b64\u5757\u8bbe\u7f6e\u5c06\u54cd\u5e94\u4fdd\u5b58\u5230redis\uff0c\u5982\u679cdata[&#34\uff1bcode&#34\uff1b]==&#34\uff1bOK&#34\uff1b\uff1adata[&#34\uff1bcache&#34\uff1b]=false data=json\uff0c\u5219\u76f4\u63a5\u63d0\u4f9b\u54cd\u5e94\u3002\u8f6c\u50a8(\u6570\u636e)state=set_route_to_cache(key=\u5750\u6807\uff0cvalue=data)\u5982\u679cstate\u4e3aTrue\uff1a\u5219\u8fd4\u56dejson\u3002\u52a0\u8f7d(\u6570\u636e)\u8fd4\u56de\u6570\u636e\u3002\n\u8fd9\u90e8\u5206\u4ee3\u7801\u5305\u88c5\u4e86\u539f\u59cb\u7684\u8def\u7531\u4f18\u5316API\uff0c\u5e76\u5c06\u5176\u516c\u5f00\u4e3a\u65b0\u7aef\u70b9\u3002\u6211\u5df2\u7ecf\u4f7f\u7528fast API\u6784\u5efa\u4e86\u5305\u88c5\u5668API\u3002\u8fd9\u6837\u505a\u8fd8\u4f1a\u9690\u85cf\u8eab\u4efd\u9a8c\u8bc1\u7684\u5e95\u5c42\u7ec6\u8282\u548cMapBox API\u7684\u5b9e\u9645\u7aef\u70b9\u3002\n\u4eceFastapi\u5bfc\u5165FastAPI app=FastAPI()@app\u3002\u83b7\u53d6(&#34\uff1b/route-Optima/{\u5750\u6807}&#34\uff1b)def\u89c6\u56fe(\u5750\u6807)\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u8fd9\u5c06\u5305\u88c5\u6211\u4eec\u539f\u6765\u7684\u8def\u7531\u4f18\u5316API\u5e76\u5408\u5e76Redis\u7f13\u5b58\u3002\u60a8\u5c06\u53ea\u5411\u6700\u7ec8\u7528\u6237\u516c\u5f00\u6b64API\u3002&#34\uff1b&#34\uff1b&#34\uff1b#\u5750\u6807=&#34\uff1b90.3866\uff0c23.7182\uff1b90.3742\uff0c23.7461&#34\uff1bRETURN ROUTE_OPTIMA(\u5750\u6807)\u3002\n#app.py import json\u5bfc\u5165sys from datetime import time\u589e\u91cfimport httpx import redis from fast api import FastAPI def redis_connect()-&gt\uff1bredis\u3002\u5ba2\u6237\u3002redis\uff1atry\uff1aclient=redis\u3002redis(host=&#34\uff1blocalhost&#34\uff1b\uff0cport=6379\uff0cpassword=&#34\uff1bubuntu&#34\uff1b\uff0cdb=0\uff0csocket_timeout=5\uff0c)ping=client\u3002ping()\u5982\u679cping\u4e3aTrue\uff1a\u8fd4\u56de\u9664redis\u4e4b\u5916\u7684\u5ba2\u6237\u7aef\u3002AuthenticationError\uff1a\u6253\u5370(&#34\uff1bAuthenticationError&#34\uff1b)sys\u3002\u9000\u51fa(1)client=redis_connect()def get_routes_from_api(\u5750\u6807\uff1astr)-&gt\uff1bdict\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u6570\u636e\u6765\u81eaMapbox API\u3002&#34\uff1b&#34\uff1b&#34\uff1b\u4f7f\u7528httpx\u3002\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684Client()\uff1aBase_url=&#34\uff1bhttps://api.mapbox.com/optimized-trips/v1/mapbox/driving&#34\uff1bGeometries=&#34\uff1bGeojson&#34\uff1bAccess_Token=&#34\uff1bYour-MapBox-api-Token&#34\uff1burl=f&#34\uff1b{base_url}/{coordinates}\uff1fgeometries={geometries}&amp\uff1baccess_token={access_token}&#34\uff1bResponse=Client\u3002get(Url)\u8fd4\u56de\u54cd\u5e94\u3002json()def get_routes_from_cache(key\uff1astr)-&gt\uff1bstr\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u6765\u81earedis\u7684\u6570\u636e\u3002&#34\uff1b&#34\uff1b&#34\uff1bval=client\u3002get(Key)return val val def set_routes_to_cache(key\uff1astr\uff0cvalue\uff1astr)-&gt\uff1bbool\uff1a&#34\uff1b&#34\uff1b&#34\uff1bdata to redis\u3002&#34\uff1b&#34\uff1b&#34\uff1bstate=client\u3002setex(key\uff0ctimeDelta(sec=3600)\uff0cvalue=value\uff0c)\u8fd4\u56de\u72b6\u6001def route_Optima(\u5750\u6807\uff1astr)-&gt\uff1bdict\uff1a#\u9996\u5148\uff0c\u5b83\u5728redis\u7f13\u5b58data=get_routes_from_cache(key=\u5750\u6807)#\u4e2d\u67e5\u627e\u6570\u636e\u3002#\u5982\u679c\u627e\u5230\u7f13\u5b58\uff0c\u5219\u5728\u6570\u636e\u4e0d\u4e3aNone\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u6765\u81ea\u7f13\u5b58\u7684\u6570\u636e\uff1adata=json\u3002Loads(Data)data[&#34\uff1bcache&#34\uff1b]=True return data\u5426\u5219\uff1a#\u5982\u679c\u6ca1\u6709\u627e\u5230cache\uff0c\u5219\u5411MapBox API data=get_routes_from_api(\u5750\u6807)#\u6b64\u5757\u8bbe\u7f6e\u5c06\u54cd\u5e94\u4fdd\u5b58\u5230redis\uff0c\u5982\u679cdata[&#34\uff1bcode&#34\uff1b]==&#34\uff1bOK&#34\uff1b\uff1adata[&#34\uff1bcache&#34\uff1b]=false data=json\uff0c\u5219\u76f4\u63a5\u63d0\u4f9b\u54cd\u5e94\u3002\u8f6c\u50a8(\u6570\u636e)state=set_route_to_cache(key=\u5750\u6807\uff0cvalue=data)\u5982\u679cstate\u4e3aTrue\uff1a\u5219\u8fd4\u56dejson\u3002\u52a0\u8f7d(\u6570\u636e)\u8fd4\u56de\u6570\u636eAPP=FastAPI()@APP\u3002\u83b7\u53d6(&#34\uff1b/route-Optima/{coels}&#34\uff1b)def view(\u5750\u6807\uff1astr)-&gt\uff1bdict\uff1a&#34\uff1b&#34\uff1b&#34\uff1b\u8fd9\u5c06\u5305\u88c5\u6211\u4eec\u539f\u59cb\u7684\u8def\u7531\u4f18\u5316API\u5e76\u5408\u5e76Redis\u7f13\u5b58\u3002\u60a8\u5c06\u53ea\u5411\u6700\u7ec8\u7528\u6237\u516c\u5f00\u6b64API\u3002&#34\uff1b&#34\uff1b&#34\uff1b#\u5750\u6807=&#34\uff1b90.3866\uff0c23.7182\uff1b90.3742\uff0c23.7461&#34\uff1bRETURN ROUTE_OPTIMA(\u5750\u6807)\u3002\n\u60a8\u53ef\u4ee5\u5c06\u5b8c\u6574\u7684\u4ee3\u7801\u590d\u5236\u5230\u540d\u4e3aapp.py\u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f(\u5047\u8bbeRedis\u6b63\u5728\u8fd0\u884c\uff0credisinsight\u6b63\u5728\u8fd0\u884c\uff0c\u5e76\u4e14\u60a8\u5df2\u7ecf\u9884\u5148\u5b89\u88c5\u4e86\u4f9d\u8d56\u9879)\uff1a\n\u8f6c\u5230\u60a8\u7684\u6d4f\u89c8\u5668\uff0c\u4f7f\u7528\u4e00\u7ec4\u65b0\u5750\u6807\u70b9\u51fb\u7aef\u70b9\u3002\u4f8b\u5982\uff1a\n{&#34\uff1b\u4ee3\u7801&#34\uff1b\uff1a&#34\uff1b\u786e\u5b9a&#34\uff1b\uff0c&#34\uff1b\u8def\u70b9&#34\uff1b\uff1a[{&#34\uff1b\u8ddd\u79bb&#34\uff1b\uff1a26.041809241776583\uff0c&#34\uff1b\u540d\u79f0&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff0c&#34\uff1b\u4f4d\u7f6e&#34\uff1b\uff1a[90.386855\uff0c23.718213]\uff0c&#34\uff1b\u8def\u70b9_\u7d22\u5f15&#34\uff1b\uff1a6.286653078791968\uff0c&#34\uff1bTRIPS_INDEX&#34\uff1b\uff1a0}\uff0c{&#34\uff1b\u8ddd\u79bb&#34\uff1b\uff1a6.286653078791968\uff0c&#34\uff1b\u540d\u79f0&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff0c&#34\uff1b\u4f4d\u7f6e&#34\uff1b\uff1a[90.374253\uff0c23.746129]\uff0c&#34\uff1b\u8def\u70b9_\u7d22\u5f15&#34\uff1b\uff1a1\uff0c&#34\uff1bTRIPS_INDEX&#34\uff1b\uff1a90.386855}]\uff0c&#34\uff1bTrips&#34\uff1b\uff1a[{&#34\uff1b\u51e0\u4f55&#34\uff1b\uff1a{&#34\uff1b\u5750\u6807&#34\uff1b\uff1a[90.386855\uff0c23.718213]\uff0c&#34\uff1b\u2026\u2026&#34\uff1b]\uff0c&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u7ebf\u4e32&#34\uff1b}\uff0c&#34\uff1b\u817f&#34\uff1b\uff1a[{&#34\uff1b\u6458\u8981&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff0c&#34\uff1b\u6743\u91cd&#34\uff1b\uff1a3303.1\uff0c&#34\uff1b\u6301\u7eed\u65f6\u95f4&#34\uff1b\uff1a2842.8\uff0c&#34\uff1b\u6b65\u6570&#34\uff1b\uff1a[]\uff0c&#34\uff1b\u8ddd\u79bb&#34\uff1b\uff1a5250.2}\uff0c{&#34\uff1b\u6458\u8981&#34\uff1b\uff1a&#34\uff1b&#34\uff1b\uff1b\uff0c&#34\uff1b\u6743\u91cd&#34\uff1b\uff1a2536.5\uff0c&#34\uff1b\u6301\u7eed\u65f6\u95f4&#34\uff1b\uff1a2297\uff0c&#34\uff1b\u6b65\u957f&#34\uff1b\uff1a[]\uff0c&#34\uff1b\u8ddd\u79bb&#34\uff1b\uff1a4554.8}]\uff0c&#34\uff1b\u6743\u91cd_\u540d\u79f0&#34\uff1b\uff1a&#34\uff1b\u53ef\u8def\u7531\u6027&#34\uff1b\uff0c&#34\uff1b\u6743\u91cd&#34\uff1b\uff1a5839.6\uff0c&#34\uff1b\u6301\u7eed\u65f6\u95f4&#34\uff1b\uff1a5139.8\uff0c&#34\uff1b\u8ddd\u79bb&#34\uff1b\uff1a9805}]\uff0c&#34\uff1b\u7f13\u5b58&#34\uff1b\uff1aFALSE}\u3002\n\u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u70b9\u51fb\u4e0a\u9762\u7684URL\uff0c\u90a3\u4e48json\u54cd\u5e94\u7684cache\u5c5e\u6027\u5e94\u8be5\u663e\u793a\u4e3afalse\u3002\u8fd9\u610f\u5473\u7740\u54cd\u5e94\u662f\u4ece\u539f\u59cb\u7684MapBox API\u63d0\u4f9b\u7684\u3002\u4f46\u662f\uff0c\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u5750\u6807\u70b9\u51fb\u76f8\u540c\u7684URL\u5c06\u663e\u793a\u7f13\u5b58\u7684\u54cd\u5e94\uff0c\u8fd9\u4e00\u6b21\u7f13\u5b58\u5c5e\u6027\u5e94\u8be5\u663e\u793a\u4e3atrue\u3002\n\u4e00\u65e6\u60a8\u542f\u52a8\u5e76\u8fd0\u884c\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7redis Insight\u68c0\u67e5\u7f13\u5b58\u4e86\u3002\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8bf7\u5728\u60a8\u7684\u5e94\u7528\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u8f6c\u5230\u4e0b\u9762\u7684\u94fe\u63a5\uff1a\n\u4ece\u5de6\u4fa7\u83dc\u5355\u4e2d\u9009\u62e9Browser\u9762\u677f\uff0c\u7136\u540e\u5355\u51fb\u7f13\u5b58\u6570\u636e\u7684\u952e\u3002\u5b83\u5e94\u8be5\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a\n\u60a8\u8fd8\u53ef\u4ee5\u5728swagger UI\u4e2d\u4f7f\u7528API\u3002\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8bf7\u8f6c\u81f3\u4ee5\u4e0b\u94fe\u63a5\uff1a\n\u8fd9\u5c06\u628a\u60a8\u5e26\u5230\u5927\u6447\u5927\u6446\u7684\u4eea\u8868\u76d8\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u4e92\u5f0fUI\u53d1\u51fa\u8bf7\u6c42\u3002\u7ee7\u7eed\u68c0\u67e5\u65b0\u5750\u6807\u7684\u7f13\u5b58\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u535a\u5ba2\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u90fd\u662f\u5728\u8fd0\u884cUbuntu18.04\u7684\u673a\u5668\u4e0a\u7528python3.8\u7f16\u5199\u548c\u6d4b\u8bd5\u7684\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u8fd9\u6b3e\u5e94\u7528\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002\n\u6b64\u5e94\u7528\u7a0b\u5e8f\u4ec5\u7528\u4e8e\u6f14\u793a\u76ee\u7684\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u80fd\u4e0d\u53cd\u6620\u751f\u4ea7\u5c31\u7eea\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4e0d\u63a8\u8350\u4f7f\u7528\u6b64\u7c7b\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684API\u3002", "note_en": "Recently, I was working with  MapBox\u2019s  Route Optimization API. Basically, it tries to solve the  traveling salesman problem where you provide the API with coordinates of multiple places and it returns a duration-optimized route between those locations. This is a perfect usecase where  Redis caching can come handy. Redis is an blazing fast, lightweight in-memory database with additional persistence options; making it a perfect candidate for the task at hand. Here, caching can save you from making redundant API requests and also, it can dramatically improve the response time as well.\n I found that in my country, the optimized routes returned by the API do not change dramatically for at least for a couple of hours. So the workflow will look something like this:\n Caching the API response in Redis using the key-value data structure. Here the requested coordinate-string will be the key and the response will be the corresponding value\n      Only send a new request to MapBox API if the response is not cached and then add that response to cache\n  To proceed with the above workflow, you\u2019ll need to install and setup Redis database on your system. For monitoring the database, I\u2019ll be using  RedisInsight. The easiest way to setup Redis and RedisInsight is through  docker and  docker-compose. Here\u2019s a docker-compose that you can use to setup everything with a single command.\n # docker-compose.yml version :  &#34; 3.2&#34; services :  redis :  container_name :  redis-cont  image :  &#34; redis:alpine&#34;  command :  redis-server --requirepass ubuntu  environment :  -  REDIS_PASSWORD=ubuntu  -  REDIS_REPLICATION_MODE=master  ports :  -  &#34; 6379:6379&#34;  volumes :  # save redisearch data to your current working directory  -  ./redis-data:/data  command :  # Save if 100 keys are added in every 10 seconds  -  &#34; --save   10   100&#34;  # Set password  -  &#34; --requirepass   ubuntu&#34;  redisinsight :  # redis db visualization dashboard  container_name :  redisinsight-cont  image :  redislabs/redisinsight  ports :  -  8001:8001  volumes :  -  redisinsight:/db volumes :  redis-data :  redisinsight :\n The above  docker-compose file has two services,  redis and  redisinsight. I\u2019ve set up the database with a dummy password  ubuntu and made it persistent using a folder named  redis-data in the current working directory. The database listens in localhost\u2019s port  6379. You can monitor the database using  redisinsight in port 8000. To spin up Redis and RedisInsight containers, run:\n  This command will start the database and monitor accordingly. You can go to this  localhost:8000 link using your browser and connect redisinsight to your database. After connecting your database, you should see a dashboard like this in your redisinsight panel:\n   For local development, you can set up your python environment and install the dependencies using pip. Here, I\u2019m on a Linux machine and using virtual environment for isolation. The following commands will work if you\u2019re on a *nix based system and have  python 3.8 installed on your system. This will install the necessary dependencies in a virtual environment:\n    Assuming the database server is running and you\u2019ve installed the dependencies, the following snippet connects  redis-py client to the database.\n import  redis import  sys def  redis_connect ()  -&gt;  redis . client . Redis :  try :  client  =  redis . Redis (  host = &#34;localhost&#34; ,  port = 6379 ,  password = &#34;ubuntu&#34; ,  db = 0 ,  socket_timeout = 5 ,  )  ping  =  client . ping ()  if  ping  is  True :  return  client  except  redis . AuthenticationError :  print ( &#34;AuthenticationError&#34; )  sys . exit ( 1 ) client  =  redis_connect ()\n The above excerpt tries to connect to the  Redis database server using the port  6379. Notice, how I\u2019m providing the password  ubuntu via the  password argument. Here,  client.ping() helps you determine if a connection has been established successfully. It returns  True if a successful connection can be established or raises specific errors in case of failures. The above function handles  AuthenticationError and prints out an error message if the error occurs. If everything goes well, running the  redis_connect() function will return an instance of the  redis.client.Redis class. This instance will be used later to set and retrieve data to and from the redis database.\n   import  httpx def  get_routes_from_api ( coordinates :  str )  -&gt;  dict :  &#34;&#34;&#34;Data from mapbox api.&#34;&#34;&#34;  with  httpx . Client ()  as  client :  base_url  =  &#34;https://api.mapbox.com/optimized-trips/v1/mapbox/driving&#34;  geometries  =  &#34;geojson&#34;  access_token  =  &#34;Your-MapBox-API-token&#34;  url  =  f &#34;{base_url}/{coordinates}?geometries={geometries}&amp;access_token={access_token}&#34;  response  =  client . get ( url )  return  response . json ()\n The above code uses Python\u2019s  httpx library to make the get request. Httpx is almost a drop-in replacement for the ubiquitous  Requests library but way faster and has async support. Here, I\u2019ve used context manager  httpx.Client() for better resource management while making the  get request. You can read more about context managers and how to use them for hassle free resource management  here.\n The  base_url is the base url of the route optimization API and the you\u2019ll need to provide your own access token in the  access_token field. Notice, how the  url variable builds up the final request url. The  coordinates are provided using the  lat0,lon0;lat1,lon1;lat2,lon2... format. Rest of the function sends the http requests and converts the response into a native dictionary object using the  response.json() method.\n   from  datetime  import  timedelta def  get_routes_from_cache ( key :  str )  -&gt;  str :  &#34;&#34;&#34;Get data from redis.&#34;&#34;&#34;  val  =  client . get ( key )  return  val def  set_routes_to_cache ( key :  str ,  value :  str )  -&gt;  bool :  &#34;&#34;&#34;Set data to redis.&#34;&#34;&#34;  state  =  client . setex ( key ,  timedelta ( seconds = 3600 ),  value = value ,  )  return  state\n Here, both the keys and the values are strings. In the second function,  set_routes_to_cache, the  client.setex() method sets a timeout of 1 hour on the key. After that the key and its associated value get deleted automatically.\n  The  route_optima function is the primary agent that orchestrates and executes the caching and returning of responses against requests. It roughly follows the execution flow shown below.\n  When a new request arrives, the function first checks if the return-value exists in the Redis cache. If the value exists, it shows the cached value, otherwise, it sends a new request to the MapBox API, cache that value and then shows the result.\n def  route_optima ( coordinates :  str )  -&gt;  dict :  # First it looks for the data in redis cache  data  =  get_routes_from_cache ( key = coordinates )  # If cache is found then serves the data from cache  if  data  is  not  None :  data  =  json . loads ( data )  data [ &#34;cache&#34; ]  =  True  return  data  else :  # If cache is not found then sends request to the MapBox API  data  =  get_routes_from_api ( coordinates )  # This block sets saves the respose to redis and serves it directly  if  data [ &#34;code&#34; ]  ==  &#34;Ok&#34; :  data [ &#34;cache&#34; ]  =  False  data  =  json . dumps ( data )  state  =  set_routes_to_cache ( key = coordinates ,  value = data )  if  state  is  True :  return  json . loads ( data )  return  data\n  This part of the code wraps the original Route Optimization API and exposes that as a new endpoint. I\u2019ve used  fastAPI to build the wrapper API. Doing this also hides the underlying details of authentication and the actual endpoint of the MapBox API.\n from  fastapi  import  FastAPI app  =  FastAPI () @ app . get ( &#34;/route-optima/{coordinates}&#34; ) def  view ( coordinates ):  &#34;&#34;&#34;This will wrap our original route optimization API and incorporate Redis Caching. You&#39;ll only expose this API to the end user. &#34;&#34;&#34;  # coordinates = &#34;90.3866,23.7182;90.3742,23.7461&#34;  return  route_optima ( coordinates )\n  # app.py import  json import  sys from  datetime  import  timedelta import  httpx import  redis from  fastapi  import  FastAPI def  redis_connect ()  -&gt;  redis . client . Redis :  try :  client  =  redis . Redis (  host = &#34;localhost&#34; ,  port = 6379 ,  password = &#34;ubuntu&#34; ,  db = 0 ,  socket_timeout = 5 ,  )  ping  =  client . ping ()  if  ping  is  True :  return  client  except  redis . AuthenticationError :  print ( &#34;AuthenticationError&#34; )  sys . exit ( 1 ) client  =  redis_connect () def  get_routes_from_api ( coordinates :  str )  -&gt;  dict :  &#34;&#34;&#34;Data from mapbox api.&#34;&#34;&#34;  with  httpx . Client ()  as  client :  base_url  =  &#34;https://api.mapbox.com/optimized-trips/v1/mapbox/driving&#34;  geometries  =  &#34;geojson&#34;  access_token  =  &#34;Your-MapBox-API-token&#34;  url  =  f &#34;{base_url}/{coordinates}?geometries={geometries}&amp;access_token={access_token}&#34;  response  =  client . get ( url )  return  response . json () def  get_routes_from_cache ( key :  str )  -&gt;  str :  &#34;&#34;&#34;Data from redis.&#34;&#34;&#34;  val  =  client . get ( key )  return  val def  set_routes_to_cache ( key :  str ,  value :  str )  -&gt;  bool :  &#34;&#34;&#34;Data to redis.&#34;&#34;&#34;  state  =  client . setex ( key ,  timedelta ( seconds = 3600 ),  value = value ,)  return  state def  route_optima ( coordinates :  str )  -&gt;  dict :  # First it looks for the data in redis cache  data  =  get_routes_from_cache ( key = coordinates )  # If cache is found then serves the data from cache  if  data  is  not  None :  data  =  json . loads ( data )  data [ &#34;cache&#34; ]  =  True  return  data  else :  # If cache is not found then sends request to the MapBox API  data  =  get_routes_from_api ( coordinates )  # This block sets saves the respose to redis and serves it directly  if  data [ &#34;code&#34; ]  ==  &#34;Ok&#34; :  data [ &#34;cache&#34; ]  =  False  data  =  json . dumps ( data )  state  =  set_routes_to_cache ( key = coordinates ,  value = data )  if  state  is  True :  return  json . loads ( data )  return  data app  =  FastAPI () @ app . get ( &#34;/route-optima/{coordinates}&#34; ) def  view ( coordinates :  str )  -&gt;  dict :  &#34;&#34;&#34;This will wrap our original route optimization API and incorporate Redis Caching. You&#39;ll only expose this API to the end user. &#34;&#34;&#34;  # coordinates = &#34;90.3866,23.7182;90.3742,23.7461&#34;  return  route_optima ( coordinates )\n You can copy the complete code to a file named  app.py and run the app using the command below (assuming redis, redisinsight is running and you\u2019ve installed the dependencies beforehand):\n   Go to your browser and hit the endpoint with a set of new coordinates. For example:\n   {   &#34;code&#34; : &#34;Ok&#34; ,   &#34;waypoints&#34; :[   {   &#34;distance&#34; : 26.041809241776583 ,   &#34;name&#34; : &#34;&#34; ,   &#34;location&#34; :[   90.386855 ,   23.718213   ],   &#34;waypoint_index&#34; : 0 ,   &#34;trips_index&#34; : 0   },   {   &#34;distance&#34; : 6.286653078791968 ,   &#34;name&#34; : &#34;&#34; ,   &#34;location&#34; :[   90.374253 ,   23.746129   ],   &#34;waypoint_index&#34; : 1 ,   &#34;trips_index&#34; : 0   }   ],   &#34;trips&#34; :[   {   &#34;geometry&#34; :{   &#34;coordinates&#34; :[   [   90.386855 ,   23.718213   ],   &#34;......&#34;   ],   &#34;type&#34; : &#34;LineString&#34;   },   &#34;legs&#34; :[   {   &#34;summary&#34; : &#34;&#34; ,   &#34;weight&#34; : 3303.1 ,   &#34;duration&#34; : 2842.8 ,   &#34;steps&#34; :[   ],   &#34;distance&#34; : 5250.2   },   {   &#34;summary&#34; : &#34;&#34; ,   &#34;weight&#34; : 2536.5 ,   &#34;duration&#34; : 2297 ,   &#34;steps&#34; :[   ],   &#34;distance&#34; : 4554.8   }   ],   &#34;weight_name&#34; : &#34;routability&#34; ,   &#34;weight&#34; : 5839.6 ,   &#34;duration&#34; : 5139.8 ,   &#34;distance&#34; : 9805   }   ],   &#34;cache&#34; : false  }\n If you\u2019ve hit the above URL for the first time, the  cache attribute of the json response should show  false. This means that the response is being served from the original MapBox API. However, hitting the same URL with the same coordinates again will show the cached response and this time the  cache attribute should show  true.\n  Once you\u2019ve got everything up and running you can inspect the cache via redis insight. To do so, go to the link below while your app server is running:\n  Select the  Browser panel from the left menu and click on a key of your cached data. It should show something like this:\n  Also you can play around with the API in the swagger UI. To do so, go to the following link:\n  This will take you to the swagger dashboard. Here you can make requests using the interactive UI. Go ahead and inspect how the caching works for new coordinates.\n   All the pieces of codes in the blog were written and tested with python 3.8 on a machine running Ubuntu 18.04. You can find the complete source code of the app  here.\n  This app has been made for demonstration purpose only. So it might not reflect the best practices of production ready applications. Using APIs without authentication like this is not recommended.", "posttime": "2020-05-25 09:08:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f13\u5b58,python,api,redis", "title": "\u4f7f\u7528Python\u548cRedis\u8f7b\u677e\u7f13\u5b58API\u8bf7\u6c42", "title_en": "Effortless API Request Caching with Python and Redis", "transed": 1, "url": "https://rednafi.github.io/digressions/python/2020/05/25/python-redis-cache.html", "via": "", "real_tags": ["\u7f13\u5b58", "python", "api", "redis"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003585, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56e0\u6b64\uff0c\u5982\u679cRC6\u6bd4\u6211\u5e0c\u671b\u7684\u8981\u5927\u4e00\u70b9\uff0cRC7\u770b\u8d77\u6765\u975e\u5e38\u6b63\u5e38\u3002\u4e0d\u662f\u6211\u4eec\u5403\u8fc7\u7684\u6700\u5c0f\u7684\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\u3002\u5b83\u6b63\u597d\u5728\u5305\u7684\u4e2d\u95f4\u3002\u800c\u4e14\u8fd9\u4e9b\u4fee\u590d\u770b\u8d77\u6765\u90fd\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u53ef\u6015\u7684\u5730\u65b9\u3002\u5927\u591a\u6570\u8865\u4e01\u90fd\u5f88\u5c0f\uff0c\u7a0d\u5927\u7684\u8865\u4e01\u4e5f\u4e0d\u5927\uff0c\u800c\u4e14\u5305\u542b\u5f97\u5f88\u597d(\u4e24\u4e2a\u7a0d\u5927\u7684\u8865\u4e01\u9002\u7528\u4e8es390\u548crxrpc-\u5373\u4f7f\u662f\u90a3\u4e9b\u8865\u4e01\u4e5f\u4e0d\u662f\u771f\u7684\u90a3\u4e48\u5927)\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4e3b\u8981\u662f\u9a71\u52a8\u7a0b\u5e8f(GPU\u548c\u7f51\u7edc\u5f88\u7a81\u51fa\uff0c\u4f46\u5404\u79cd\u5176\u4ed6\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u5c0f\u4e1c\u897f)\u548c\u4e00\u4e9b\u6df7\u6742\u7684\u5c0f\u8865\u4e01\u5230\u5904\u90fd\u662f\u3002\u6240\u4ee5\u770b\u8d77\u6765\u4e0a\u4e2aRC\u6211\u6ca1\u4ec0\u4e48\u597d\u62c5\u5fc3\u7684\u3002\u5f53\u7136\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u6709\u53ef\u80fd\u6539\u53d8\uff0c\u4f46\u662f\u4e00\u5207\u90fd\u5c06\u5728\u4e0b\u5468\u672b\u6b63\u5f0f\u53d1\u5e03\u3002\u6572\u6572\u6728\u5934\u3002\u6211\u770b\u5230\u7684\u5927\u591a\u6570\u8ba8\u8bba\u90fd\u662f\u5173\u4e8e5.8\u7684\u5404\u79cd\u6e05\u7406\u548c\u65b0\u7279\u6027\uff0c\u6211\u8fd8\u6709\u4e00\u4e2a\u63d0\u65e9\u62c9\u5165\u8bf7\u6c42\u6b63\u5728\u7b49\u5f85\u4e2d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u672c\u5468\u5bf9\u6211\u6765\u8bf4\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\u6211\u5347\u7ea7\u4e86\u6211\u7684\u4e3b\u673a\uff0c\u800c\u4e14\u6211\u7684\u53f0\u5f0f\u673a15\u5e74\u6765\u7b2c\u4e00\u6b21\u4e0d\u662f\u57fa\u4e8e\u82f1\u7279\u5c14\u7684\u3002\u6ca1\u6709\uff0c\u6211\u8fd8\u6ca1\u6709\u6362\u6210ARM\uff0c\u4f46\u6211\u73b0\u5728\u6b63\u5728\u6446\u52a8\u4e00\u53f0AMD\u5206\u7ebf\u56683970x\u3002\u6211\u7684allmodconfig\uff1b\u6d4b\u8bd5\u7248\u672c\u73b0\u5728\u6bd4\u4ee5\u524d\u5feb\u4e86\u4e09\u500d\uff0c\u8fd9\u5728\u73b0\u5728\u7684\u5e73\u9759\u9636\u6bb5\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u6211\u80af\u5b9a\u4f1a\u5728\u4e0b\u4e00\u4e2a\u5408\u5e76\u7a97\u53e3\u4e2d\u6ce8\u610f\u5230\u5347\u7ea7\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u51fa\u53bb\u505a\u4e2a\u597d\u7684\u6700\u540e\u6d4b\u8bd5\u5427\uff0c\u8fd9\u6837\u6211\u4eec\u57285.7\u53d1\u5e03\u540e\u5c31\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e0d\u6109\u5feb\u7684\u60ca\u559c\u4e86\u3002Linus-Al Viro(2)\uff1a\u4fee\u590dcopy_fdtable()arm64\u4e2d\u7684\u500d\u589e\u6ea2\u51fa\uff1a\u5728\uff01access_ok()\u8def\u5f84\u4e0a\u6dfb\u52a0get_user()\u7c7b\u578b\u6279\u6ce8Alain Volmat(1)\uff1aI2C\uff1a\u4fee\u590di2c_device_probe Alex Elder(1)\u4e2d\u7f3a\u5c11\u7684pm_runtime_put_sync\uff1anet\uff1aipa\uff1adon&#39\uff1bt\u5728gsi_channel_poll()Alexander Monakov(1)\uff1aIOMMU/amd\uff1a\u4fee\u590dIVRS\u8868Alexander Usykin\u4e2dACPI UID\u7684\u8fc7\u5ea6\u8bfb\u53d6(1)\uff1aMEI\uff1a\u91ca\u653eMe_cl\u5bf9\u8c61\u5f15\u7528Amit Cohen(1)\uff1aselftest\uff1amlxsw\uff1aqos_mc_ware\uff1a\u6307\u5b9aarping\u8d85\u65f6\u4e3a\u6574\u6570Andrii Nakryi ko(1)\uff1abpf\uff1a\u963b\u6b62mmap()&#39\uff1bING\u53ea\u8bfb\u6620\u5c04\u4e3a\u53ef\u5199Antoine Tenart(1)\uff1aNET\uff1aPHY\uff1aMSCC\uff1aFIX\u521d\u59cb\u5316MACsec\u534f\u8bae\u6a21\u5f0fArnd Bergmann(1)\uff1ash\uff1ainclude linux/time_tyes.h for sockios Arvind Sankar(1)\uff1ax86/boot\uff1a\u5c06\u5168\u5c40\u53d8\u91cf\u6807\u8bb0\u4e3aStatic Atsushi Nemoto(1)\uff1aI2C\uff1aAltera\uff1a\u4fee\u590dxfer_msg\u548cISR\u7ebf\u7a0b\u4e4b\u95f4\u7684\u7ade\u4e89\u3002Bijan Mottahedeh(1)\uff1aIo_uring\uff1aDon&#39\uff1bt\u4f7f\u7528kiocb.private\u5b58\u50a8buf_index Bodo Stroesser(1)\uff1ascsi\uff1atarget\uff1a\u5728tmr\u5904\u7406\u7ed3\u675f\u65f6\u653e\u7f6elun_ref Boris Sukholitko(1)\uff1a__netif_Receive_SKB_core\uff1a\u901a\u8fc7\u5f15\u7528\u4f20\u9012SKB Brent Lu(1)\uff1aalsa\uff1apcm\uff1a\u4fee\u590d\u4e0d\u6b63\u786e\u7684HW_BASE\u9012\u589eCalvin Johnson(1)\uff1aCoreSight\uff1aCTI\uff1a\u5220\u9664\u4e0d\u6b63\u786e\u7684NULL\u8fd4\u56de\u68c0\u67e5CAN Guo(1)\uff1ascsi\uff1apm\u3002t\u5141\u8bb8\u4e22\u5f03\u5206\u533a\u6a21\u5f0fChristian Gmeiner(1)\uff1adrm/etNaviv\uff1afix Perfmon\u57df\u4ea4\u4e92Christian Lachner(1)\uff1aalsa\uff1ahda/Realtek-\u4fee\u590d\u5343\u5146\u5b57\u8282X570 Aorus Xtreme Christoph Hellwig\u4e0a\u7684\u9759\u9ed8\u8f93\u51fa(2)\uff1aUBFS\uff1a\u5220\u9664\u635f\u574f\u7684\u60f0\u6027\u65f6\u95f4\u652f\u6301ext4\uff1a\u4fee\u590d\u4f4d\u56fe\u6587\u4ef6Christophe Jaillet\u7684\u6587\u4ef6\u6620\u5c04\u5927\u5c0f\u68c0\u67e5(4)\uff1aIIO\uff1aDAC\uff1avBOS\u3002I2C\uff1aMUX\uff1aDEMUX-pinctrl\uff1a\u4fee\u590d&#39\uff1bi2c_demux_pinctrl_Probe()&#39\uff1bdmaengine\uff1ategra210-ADMA\uff1a\u4fee\u590d&#39\uff1bTegra_ADMA_Probe()&#39\uff1bChristophe Leroy(1)\uff1aREVERT&#34\uff1bPowerPC/32s\uff1a\u91cd\u65b0\u6392\u5e8fLinux PTE\u4f4d\u4ee5\u66f4\u597d\u5730\u5339\u914d\u54c8\u5e0cPTE\u4f4d\u3002&#34\uff1bClaudiu Manoil(1)\uff1aFelix\uff1a\u4fee\u590dioremap\u8d44\u6e90\u7684\u521d\u59cb\u5316Codrin Ciubotariu(1)\uff1aI2C\uff1aAT91\uff1a\u4fee\u590d\u603b\u7ebf\u6062\u590d\u7684devm_gpiod_get()\u4e4b\u540e\u7684pinmux Colin Ian King(1)\uff1adrm/vmwgfx\uff1a\u5220\u9664\u5bf9\u53d8\u91cfret\u7684\u5197\u4f59\u8d4b\u503cCristian Ciocaltea(1)\uff1admaengine\uff1aowl\uff1a\u5728owl_dma_get_pchan()\u4e2d\u4f7f\u7528\u6b63\u786e\u7684\u9501\u3002st_lsm6dsx_Shub_write_raw()OVL\uff1aovl_fid_to_fh()\u5206\u6bb5\u4e2d\u7684\u6f5c\u5728\u5d29\u6e83\uff1awfx\uff1a\u9519\u8bef\u8def\u5f84\u4e0a\u7684\u89e3\u9501EVM\uff1a\u4fee\u590dinit_desc()\u4e2d\u7684\u5c0f\u4e89\u7528\uff0cdrm/etNaviv\uff1a\u4fee\u590dmit_pin_Objects()\u4e2d\u7684\u6cc4\u6f0fDave\u9171(1)\uff1admaengine\uff1aidxd\uff1a\u5728\u53d6\u6d88\u5c4f\u853dDave Young\u4e4b\u540e\u4fee\u590d\u4e2d\u65ad\u5b8c\u6210(1)\uff1aefi/earlycon\uff1a\u4fee\u590d\u65e9\u671f\u3002t\u5378\u8f7dkmem David Howells\u540e\u5c06\u5185\u6838\u5185\u5b58\u6cc4\u6f0f\u5230\u7528\u6237\u7a7a\u95f4(5)\uff1arxrpc\uff1a\u4fee\u590d\u521d\u59cb\u91cd\u65b0\u4f20\u8f93\u8d85\u65f6\u8fc7\u957fafs\uff1adon\uff1bt\u89e3\u9501\u83b7\u53d6\u7684\u6570\u636e\u9875\uff0c\u76f4\u5230\u64cd\u4f5c\u6210\u529f\u5b8c\u6210rxrpc\uff1atrace discarded ACKs RX", "note_en": "So if rc6 was a bit bigger than I would have liked, rc7 looks very normal. Not the smallest we&#39;ve had, not the largest. It&#39;s right in the middle of the pack.  And none of the fixes look like there&#39;s anything particularly scary going on. Most of it is very small, and the slightly larger patches aren&#39;t huge either and are well-contained (the two slightly larger patches are to s390 and rxrpc - and even those patches aren&#39;t really all _that_ big).  Other than that, it&#39;s mostly drivers (gpu and networking stand out, but small stuff in various other drivers) and some misc small patches all over.  So it looks like I was worried for nothing last rc. Of course, anything can still change, but everything _looks_ all set for a regular release scheduled for next weekend. Knock wood.  Most of the discussion I have seen has already been about various cleanups and new features for 5.8, and I have one early pull request already pending.  In fact, the biggest excitement this week for me was just that I upgraded my main machine, and for the first time in about 15 years, my desktop isn&#39;t Intel-based. No, I didn&#39;t switch to ARM yet, but I&#39;m now rocking an AMD Threadripper 3970x. My &#39;allmodconfig&#39; test builds are now three times faster than they used to be, which doesn&#39;t matter so much right now during the calming down period, but I will most definitely notice the upgrade during the next merge window.  Anyway, go out and give this a good final test so that we won&#39;t have any unhappy surprises after 5.7 is released..   Linus  ---  Al Viro (2):  fix multiplication overflow in copy_fdtable()  arm64: Add get_user() type annotation on the !access_ok() path  Alain Volmat (1):  i2c: fix missing pm_runtime_put_sync in i2c_device_probe  Alex Elder (1):  net: ipa: don&#39;t be a hog in gsi_channel_poll()  Alexander Monakov (1):  iommu/amd: Fix over-read of ACPI UID from IVRS table  Alexander Usyskin (1):  mei: release me_cl object reference  Amit Cohen (1):  selftests: mlxsw: qos_mc_aware: Specify arping timeout as an integer  Andrii Nakryiko (1):  bpf: Prevent mmap()&#39;ing read-only maps as writable  Antoine Tenart (1):  net: phy: mscc: fix initialization of the MACsec protocol mode  Arnd Bergmann (1):  sh: include linux/time_types.h for sockios  Arvind Sankar (1):  x86/boot: Mark global variables as static  Atsushi Nemoto (1):  i2c: altera: Fix race between xfer_msg and isr thread  Baoquan He (1):  MAINTAINERS: add files related to kdump  Benjamin Thiel (1):  efi: Pull up arch-specific prototype efi_systab_show_arch()  Bijan Mottahedeh (1):  io_uring: don&#39;t use kiocb.private to store buf_index  Bodo Stroesser (1):  scsi: target: Put lun_ref at end of tmr processing  Boris Sukholitko (1):  __netif_receive_skb_core: pass skb by reference  Brent Lu (1):  ALSA: pcm: fix incorrect hw_base increase  Calvin Johnson (1):  coresight: cti: remove incorrect NULL return check  Can Guo (1):  scsi: pm: Balance pm_only counter of request queue during system resume  Chaitanya Kulkarni (2):  null_blk: return error for invalid zone size  null_blk: don&#39;t allow discard for zoned mode  Christian Gmeiner (1):  drm/etnaviv: fix perfmon domain interation  Christian Lachner (1):  ALSA: hda/realtek - Fix silent output on Gigabyte X570 Aorus Xtreme  Christoph Hellwig (2):  ubifs: remove broken lazytime support  ext4: fix fiemap size checks for bitmap files  Christophe JAILLET (4):  iio: dac: vf610: Fix an error handling path in &#39;vf610_dac_probe()&#39;  iio: sca3000: Remove an erroneous &#39;get_device()&#39;  i2c: mux: demux-pinctrl: Fix an error handling path in &#39;i2c_demux_pinctrl_probe()&#39;  dmaengine: tegra210-adma: Fix an error handling path in &#39;tegra_adma_probe()&#39;  Christophe Leroy (1):  Revert &#34;powerpc/32s: reorder Linux PTE bits to better match Hash PTE bits.&#34;  Claudiu Manoil (1):  felix: Fix initialization of ioremap resources  Codrin Ciubotariu (1):  i2c: at91: Fix pinmux after devm_gpiod_get() for bus recovery  Colin Ian King (1):  drm/vmwgfx: remove redundant assignment to variable ret  Cristian Ciocaltea (1):  dmaengine: owl: Use correct lock in owl_dma_get_pchan()  DENG Qingfang (1):  net: dsa: mt7530: fix roaming from DSA user ports  Dan Carpenter (5):  iio: imu: st_lsm6dsx: unlock on error in st_lsm6dsx_shub_write_raw()  ovl: potential crash in ovl_fid_to_fh()  staging: wfx: unlock on error path  evm: Fix a small race in init_desc()  drm/etnaviv: Fix a leak in submit_pin_objects()  Dave Jiang (1):  dmaengine: idxd: fix interrupt completion after unmasking  Dave Young (1):  efi/earlycon: Fix early printk for wider fonts  David Ahern (1):  nexthop: Fix attribute checking for groups  David Hildenbrand (1):  device-dax: don&#39;t leak kernel memory to user space after unloading kmem  David Howells (5):  rxrpc: Fix the excessive initial retransmission timeout  afs: Don&#39;t unlock fetched data pages until the op completes successfully  rxrpc: Trace discarded ACKs  rxrpc: Fix ack discard  rxrpc: Fix a warning  Dinghao Liu (1):  net: smsc911x: Fix runtime PM imbalance on error  Dragos Bogdan (1):  staging: iio: ad2s1210: Fix SPI reading  Eran Ben Elisha (2):  net/mlx5: Fix a race when moving command interface to events mode  net/mlx5: Avoid processing commands before cmdif is ready  Eric Biggers (1):  ubifs: fix wrong use of crypto_shash_descsize()  Eric Dumazet (2):  ax25: fix setsockopt(SO_BINDTODEVICE)  tipc: block BH before using dst_cache  Eric Sandeen (1):  exfat: use iter_file_splice_write  Eugeniy Paltsev (3):  ARC: Fix ICCM &amp; DCCM runtime size checks  ARC: [plat-hsdk]: fix USB regression  ARC: guard dsp early init against non ARCv2  Ewan D. Milne (1):  scsi: qla2xxx: Do not log message when reading port speed via sysfs  Fabrice Gasnier (2):  iio: adc: stm32-adc: fix device used to request dma  iio: adc: stm32-dfsdm: fix device used to request dma  Gerald Schaefer (2):  s390/mm: fix set_huge_pte_at() for empty ptes  s390/kaslr: add support for R_390_JMP_SLOT relocation type  Greg Kroah-Hartman (1):  Revert &#34;kobject: Make sure the parent does not get released before its children&#34;  Gregory CLEMENT (1):  iio: adc: ti-ads8344: Fix channel selection  Grygorii Strashko (1):  net: ethernet: ti: cpsw: fix ASSERT_RTNL() warning during suspend  Guixiong Wei (1):  drm/vmwgfx: Fix parameter name in vmw_bo_init  Gustavo A. R. Silva (1):  i2c: mux: Replace zero-length array with flexible-array  Heikki Krogerus (1):  kobject: Make sure the parent does not get released before its children  Heiner Kallweit (1):  r8169: fix OCP access on RTL8117  Heinrich Schuchardt (1):  efi/libstub: Avoid returning uninitialized data from setup_graphics()  Ido Schimmel (2):  netdevsim: Ensure policer drop counter always increases  selftests: netdevsim: Always initialize &#39;RET&#39; variable  Ignat Korchagin (1):  um: Fix typo in vector driver transport option definition  Ilya Dryomov (1):  vsprintf: don&#39;t obfuscate NULL and error pointers  Jakub Sitnicki (1):  flow_dissector: Drop BPF flow dissector prog ref on netns cleanup  Jan Schmidt (1):  drm/edid: Add Oculus Rift S to non-desktop list  Jason A. Donenfeld (4):  wireguard: selftests: use newer iproute2 for gcc-10  wireguard: noise: read preshared key while taking lock  wireguard: queueing: preserve flow hash across packet scrubbing  wireguard: noise: separate receive counter from send counter  Jason Yan (1):  drm/vmwgfx: Return true in function vmw_fence_obj_signaled()  Jens Axboe (4):  io_uring: initialize ctx-&gt;sqo_wait earlier  io_uring: remove dead check in io_splice()  io_uring: cancel work if task_work_add() fails  io_uring: don&#39;t add non-IO requests to iopoll pending list  Jere Lepp\u00e4nen (1):  sctp: Start shutdown on association restart if in SHUTDOWN-SENT state and socket is closed  Jeremy Kerr (1):  net: bmac: Fix read of MAC address from ROM  Jiri Pirko (1):  mlxsw: spectrum: Fix use-after-free of split/unsplit/type_set in case reload fails  Joerg Roedel (1):  iommu: Fix deferred domain attachment  Johannes Berg (2):  um: Fix xor.h include  um: syscall.c: include &lt;asm/unistd.h&gt;  John Hubbard (3):  rapidio: fix an error in get_user_pages_fast() error handling  selftests/vm/.gitignore: add mremap_dontunmap  selftests/vm/write_to_hugetlbfs.c: fix unused variable warning  Jonathan McDowell (1):  net: ethernet: stmmac: Enable interface clocks on probe for IPQ806x  Josh Poimboeuf (1):  x86/unwind/orc: Fix unwind_get_return_address_ptr() for inactive tasks  KP Singh (1):  security: Fix hook iteration for secid_to_secctx  Kamal Dasu (1):  mtd:rawnand: brcmnand: Fix PM resume crash  Kefeng Wang (1):  riscv: Fix print_vm_layout build error if NOMMU  Keno Fischer (1):  arm64: Fix PTRACE_SYSEMU semantics  Klaus Doth (1):  misc: rtsx: Add short delay after exit from ASPM  Kurt Kanzenbach (1):  dt-bindings: net: dsa: b53: Add missing size and address cells to example  Lenny Szubowicz (1):  efi/libstub/x86: Avoid EFI map buffer alloc in allocate_e820()  Leon Romanovsky (1):  net: phy: propagate an error back to the callers of phy_sfp_probe  Leon Yu (1):  net: stmmac: don&#39;t attach interface until resume finishes  Linus Torvalds (1):  Linux 5.7-rc7  Lo\u00efc Yhuel (1):  tpm: check event log version before reading final events  Luca Coelho (1):  iwlwifi: pcie: handle QuZ configs with killer NICs as well  Madhuparna Bhowmik (2):  evm: Fix RCU list related warnings  ipv6: Fix suspicious RCU usage warning in ip6mr  Manivannan Sadhasivam (1):  net: qrtr: Fix passing invalid reference to qrtr_local_enqueue()  Maor Dickman (1):  net/mlx5e: Fix allowed tc redirect merged eswitch offload cases  Marc Payne (1):  r8152: support additional Microsoft Surface Ethernet Adapter variant  Marco Elver (1):  kasan: disable branch tracing for core runtime  Martin KaFai Lau (1):  net: inet_csk: Fix so_reuseport bind-address cache in tb-&gt;fast*  Masahiro Yamada (2):  arc: ptrace: hard-code &#34;arc&#34; instead of UTS_MACHINE  arc: remove #ifndef CONFIG_AS_CFI_SIGNAL_FRAME  Matt Ranostay (1):  iio: chemical: atlas-sensor: correct DO-SM channels  Michael Ellerman (1):  powerpc/64s: Disable STRICT_KERNEL_RWX  Michael S. Tsirkin (1):  vhost: missing __user tags  Michal Kubecek (1):  ethtool: count header size in reply size estimate  Mike Rapoport (2):  sparc32: use PUD rather than PGD to get PMD in srmmu_nocache_init()  sparc32: fix page table traversal in srmmu_nocache_init()  Miquel Raynal (1):  mtd: spinand: Propagate ECC information to the MTD structure  Moshe Shemesh (3):  net/mlx5: Add command entry handling completion  net/mlx5: Fix memory leak in mlx5_events_init  net/mlx5e: Update netdev txq on completions during closure  Namjae Jeon (1):  exfat: add the dummy mount options to be backward compatible with staging/exfat  Naoya Horiguchi (1):  MAINTAINERS: update email address for Naoya Horiguchi  Nathan Chancellor (1):  x86/mmiotrace: Use cpumask_available() for cpumask_var_t variables  Navid Emamdoost (1):  apparmor: Fix use-after-free in aa_audit_rule_init  Neil Horman (1):  sctp: Don&#39;t add the shutdown timer if its already been added  Nicholas Kazlauskas (1):  drm/amd/display: Defer cursor lock until after VUPDATE  Nick Desaulniers (1):  x86: bitops: fix build regression  Niklas Schnelle (1):  s390/pci: Fix s390_mmio_read/write with MIO  Oscar Carter (1):  staging: greybus: Fix uninitialized scalar variable  Palmer Dabbelt (1):  RISC-V: gp_in_global needs register keyword  Pavankumar Kondeti (1):  sched/debug: Fix requested task uclamp values shown in procfs  Pavel Begunkov (2):  io_uring: don&#39;t prepare DRAIN reqs twice  io_uring: fix FORCE_ASYNC req preparation  PeiSen Hou (1):  ALSA: hda/realtek - Add more fixup entries for Clevo machines  Peter Ujfalusi (1):  dmaengine: ti: k3-udma: Fix TR mode flags for slave_sg and memcpy  Phil Auld (1):  sched/fair: Fix enqueue_task_fair() warning some more  Philipp Rudo (1):  s390/kexec_file: fix initrd location for kdump kernel  Punit Agrawal (1):  efi: cper: Add support for printing Firmware Error Record Reference  Qii Wang (1):  MAINTAINERS: add maintainer for mediatek i2c controller driver  Qiushi Wu (3):  net: sun: fix missing release regions in cas_init_one().  rxrpc: Fix a memory leak in rxkad_verify_response()  net/mlx4_core: fix a memory leak bug.  Rafael J. Wysocki (1):  ACPI: EC: PM: Avoid flushing EC work when EC GPE is inactive  Rafa\u0142 Hibner (1):  dmaengine: zynqmp_dma: Move list_del inside zynqmp_dma_free_descriptor.  Raul E Rangel (1):  iommu/amd: Fix get_acpihid_device_id()  Ricardo Ribalda Delgado (1):  mtd: Fix mtd not registered due to nvmem name collision  Richard Weinberger (1):  ubi: Fix seq_file usage in detailed_erase_block_info debugfs file  Ritesh Harjani (1):  ext4: fix EXT4_MAX_LOGICAL_BLOCK macro  Roberto Sassu (3):  ima: Set file-&gt;f_mode instead of file-&gt;f_flags in ima_calc_file_hash()  evm: Check also if *tfm is an error pointer in init_desc()  ima: Fix return value of ima_write_policy()  Rodrigo Siqueira (1):  drm/amd/display: Remove dml_common_def file  Roi Dayan (5):  net/mlx5e: Fix inner tirs handling  net/mlx5: Fix cleaning unmanaged flow tables  net/mlx5: Don&#39;t maintain a case of del_sw_func being null  net/mlx5: Annotate mutex destroy for root ns  net/mlx5e: CT: Correctly get flow rule  Roland Scheidegger (1):  drm/vmwgfx: update MAINTAINERS entry  Roman Mashak (1):  net sched: fix reporting the first-time use timestamp  Russell King (1):  net: mvpp2: fix RX hashing for non-10G ports  Sabrina Dubroca (1):  net: don&#39;t return invalid table id error when we fall back to PF_UNSPEC  Sagar Shrikant Kadam (1):  tty: serial: add missing spin_lock_init for SiFive serial console  Saravana Kannan (2):  driver core: Fix SYNC_STATE_ONLY device link implementation  driver core: Fix handling of SYNC_STATE_ONLY + STATELESS device links  Scott Bahling (1):  ALSA: iec1712: Initialize STDSP24 properly when using the model=staudio option  Shay Drory (1):  net/mlx5: Fix error flow in case of function_setup failure  Stephen Worley (1):  net: nlmsg_cancel() if put fails for nhmsg  Tang Bin (1):  net: sgi: ioc3-eth: Fix return value check in ioc3eth_probe()  Tariq Toukan (1):  net/mlx5e: kTLS, Destroy key object after destroying the TIS  Tetsuo Handa (1):  pipe: Fix pipe_full() test in opipe_prep().  Tiezhu Yang (1):  net: Fix return value about devm_platform_ioremap_resource()  Todd Malsbary (2):  mptcp: use rightmost 64 bits in ADD_ADDR HMAC  mptcp: use untruncated hash in ADD_ADDR HMAC  Uladzislau Rezki (1):  z3fold: fix use-after-free when freeing handles  Vadim Fedorenko (3):  net/tls: fix encryption error checking  net/tls: free record only on encryption error  net: ipip: fix wrong address family in init error path  Valentin Longchamp (1):  net/ethernet/freescale: rework quiesce/activate for ucc_geth  Vincent Guittot (1):  sched/fair: Fix unthrottle_cfs_rq() for leaf_cfs_rq list  Vineet Gupta (3):  ARC: entry: comment  ARC: [plat-eznps]: Restrict to CONFIG_ISA_ARCOMPACT  ARC: show_regs: avoid extra line of output  Vitaly Kuznetsov (1):  x86/hyperv: Properly suspend/resume reenlightenment notifications  Vivek Goyal (2):  ovl: clear ATTR_FILE from attr-&gt;ia_valid  ovl: clear ATTR_OPEN from attr-&gt;ia_valid  Vladimir Murzin (1):  dmaengine: dmatest: Restore default for channel  Vladimir Oltean (1):  net: mscc: ocelot: fix address ageing time (again)  Vladimir Stempen (1):  drm/amd/display: DP training to set properly SCRAMBLING_DISABLE  Wei Yongjun (6):  staging: kpc2000: fix error return code in kp2000_pcie_probe()  ipack: tpci200: fix error return code in tpci200_register()  bus: mhi: core: Fix some error return code  exfat: fix possible memory leak in exfat_find()  net: ethernet: ti: fix some return value check of cpsw_ale_create()  net: ethernet: ti: am65-cpsw-nuss: fix error handling of am65_cpsw_nuss_probe  Wolfram Sang (2):  i2c: use my kernel.org address from now on  i2c: algo-pca: update contact email  Xiaoguang Wang (1):  io_uring: reset -EBUSY error when io sq thread is waken up  Xiyu Yang (2):  apparmor: fix potential label refcnt leak in aa_change_profile  apparmor: Fix aa_label refcnt leak in policy_update  YueHaibing (1):  vdpasim: remove unused variable &#39;ret&#39;  Yuqi Jin (1):  net: revert &#34;net: get rid of an signed integer overflow in ip_idents_reserve()&#34;", "posttime": "2020-05-25 08:52:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6258\u74e6\u5c14,torvalds,\u4fee\u590d", "title": "\u83b1\u7eb3\u65af\u00b7\u6258\u74e6\u5c14\u5179\u5df2\u7ecf\u8f6c\u5230AMD\u4e86", "title_en": "Linus Torvalds has switched to AMD", "transed": 1, "url": "https://lkml.org/lkml/2020/5/24/407", "via": "", "real_tags": ["\u6258\u74e6\u5c14", "torvalds", "\u4fee\u590d"]}]