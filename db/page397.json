[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1000554, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u79cdAR+ML\u539f\u578b\uff0c\u5141\u8bb8\u4ece\u60a8\u7684\u73af\u5883\u4e2d\u526a\u5207\u5143\u7d20\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u56fe\u50cf\u7f16\u8f91\u8f6f\u4ef6\u4e2d\u3002\n\u867d\u7136\u76ee\u524d\u53ea\u5904\u7406Photoshop\uff0c\u4f46\u5c06\u6765\u53ef\u80fd\u4f1a\u5904\u7406\u4e0d\u540c\u7684\u8f93\u51fa\u3002\n\u26a0\ufe0f\u8fd9\u662f\u4e00\u4e2a\u7814\u7a76\u539f\u578b\uff0c\u4e0d\u662f\u6d88\u8d39\u8005/Photoshop\u7528\u6237\u5de5\u5177\u3002\n\u67e5\u770b/app\u6587\u4ef6\u5939\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5230\u60a8\u7684\u624b\u673a\u4e0a\u7684\u8bf4\u660e\u3002\n\u76f4\u63a5\u5728\u79fb\u52a8\u5e94\u7528\u4e2d\u4f7f\u7528\u50cfDeepLap\u8fd9\u6837\u7684\u4e1c\u897f\u8981\u7b80\u5355\u5f97\u591a\u3002\u4f46\u8fd9\u4e00\u70b9\u5c1a\u672a\u5728\u6b64\u6b21\u56de\u8d2d\u4e2d\u5b9e\u65bd\u3002\n\u8f6c\u5230&#34\uff1b\u9996\u9009\u9879&&gt;\u63d2\u4ef6&34\uff1b\uff0c\u542f\u7528&#34\uff1b\u8fdc\u7a0b\u8fde\u63a5\u5e76\u8bbe\u7f6e\u7a0d\u540e\u9700\u8981\u7684\u53cb\u597d\u5bc6\u7801\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u76ee\u524d\u60a8\u5fc5\u987b\u4f7f\u7528\u6b64Basnet-HTTP\u5305\u88c5\u5668\u5c06BASNet\u6a21\u578b(Qin&amp\uff1bal\uff0cCVPR 2019)\u90e8\u7f72\u4e3a\u5916\u90e8HTTP\u670d\u52a1(\u9700\u8981CUDA GPU)", "note_en": "An AR+ML prototype that allows cutting elements from your surroundings and pasting them in an image editing software.\n Although only Photoshop is being handled currently, it may handle different outputs in the future.\n  \u26a0\ufe0f This is a research prototype and not a consumer / photoshop user tool.\n   Check out the  /app folder for instructions on how to deploy the app to your mobile.\n  It would be a lot simpler to use something like  DeepLap directly within the mobile app. But that hasn&#39;t been implemented in this repo yet.\n   Go to &#34;Preferences &gt; Plug-ins&#34;, enable &#34;Remote Connection&#34; and set a friendly password that you&#39;ll need later.\n  As mentioned above, for the time being, you must deploy theBASNet model (Qin &amp; al, CVPR 2019) as an external HTTP service using this  BASNet-HTTP wrapper (requires a CUDA GPU)", "posttime": "2020-05-04 11:44:27", "tags": "ar,paste,photoshop,prototype", "title": "\u4f7f\u7528AR\u526a\u5207\u548c\u7c98\u8d34\u60a8\u7684\u73af\u5883", "title_en": "Cut and paste your surroundings using AR", "transed": 1, "url": "https://github.com/cyrildiagne/ar-cutpaste", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["ar", "paste", "photoshop", "prototype"]}, {"category": "", "categoryclass": "", "imagename": "4e08ec72335ebbe5a0e6f5c738318a3d.jpeg", "infoid": 1000552, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ICANN\u53d6\u6d88\u4e86.org\u7684\u51fa\u552e\uff0c\u8fd9\u5bf9\u6d3b\u52a8\u5bb6\u548c\u4e92\u8054\u7f51\u6765\u8bf4\u662f\u4e00\u4e2a\u201c\u4ee4\u4eba\u9707\u60ca\u7684\u201d\u80dc\u5229\u3002", "note_en": "ICANN scraps the sale of .org in a 'stunning' win for activists and the internet. ", "posttime": "2020-05-04 11:44:12", "tags": "\u57df\u540d,private,domain,\u51fa\u552e,scraps", "title": ".org\u57df\u540d\u5c06\u4e0d\u518d\u51fa\u552e\u7ed9Private Equity Vultures", "title_en": "The .Org Domain Will No Longer Be Sold to Private Equity Vultures", "transed": 1, "url": "https://www.vice.com/en_us/article/akw5pg/the-org-domain-will-no-longer-be-sold-to-private-equity-vultures", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u57df\u540d", "private", "domain", "\u51fa\u552e", "scraps"]}, {"category": "", "categoryclass": "", "imagename": "613e2d808a87ad7f27a97f2e47ab11c2.jpg", "infoid": 1000551, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u4e3b\u8981\u5185\u5bb9\uff0c\u7f8e\u56fd\u6709\u591a\u5c11\u4eba\u53ef\u80fd\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\uff1f\u8fd9\u4e2a\u56fd\u5bb6\u9700\u8981\u591a\u5c11\u5f20\u75c5\u5e8a\uff1f\u4ec0\u4e48\u65f6\u5019\u75c5\u4f8b\u6570\u91cf\u4f1a\u8fbe\u5230\u9ad8\u5cf0\uff1f\n\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u8bb8\u591a\u533b\u9662\u89c4\u5212\u8005\u3001\u5a92\u4f53\u548c\u653f\u5e9c\u673a\u6784-\u5305\u62ec\u767d\u5bab-\u4e25\u91cd\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u4e24\u4e2a\u6708\u516c\u5e03\u7684\u4f17\u591a\u6a21\u578b\u4e2d\u7684\u4e00\u4e2a\uff1a\u534e\u76db\u987f\u5927\u5b66\u5065\u5eb7\u6307\u6807\u4e0e\u8bc4\u4f30\u7814\u7a76\u6240(IHME)\u3002\n\u8be5\u6a21\u578b\u57283\u6708\u4e0b\u65ec\u9996\u6b21\u4f30\u8ba1\uff0c\u7f8e\u56fd\u603b\u6b7b\u4ea1\u4eba\u6570\u5c06\u4e0d\u523016.1\u4e07\u4eba\uff1b4\u6708\u521d\uff0c\u8be5\u6a21\u578b\u4fee\u6b63\u4e86\u9884\u6d4b\uff0c\u79f0\u622a\u81f38\u6708\u7684\u603b\u6b7b\u4ea1\u4eba\u6570\u201c\u9884\u8ba1\u4e3a60415\u4eba\u201d(\u5c3d\u7ba1\u5b83\u627f\u8ba4\u8fd9\u4e2a\u8303\u56f4\u53ef\u80fd\u572831221\u81f3126703\u4eba\u4e4b\u95f4)\u3002\n\u8fd9\u4e00\u6a21\u5f0f\u7ecf\u5e38\u88ab\u767d\u5bab\u5f15\u7528\uff0c\u5e76\u4e3a\u5176\u51b3\u7b56\u63d0\u4f9b\u4e86\u53c2\u8003\u3002\u4f46\u5b83\u53ef\u80fd\u5df2\u7ecf\u5c06\u653f\u5e9c\u5f15\u5411\u4e86\u6b67\u9014\uff1aIHME\u4e00\u76f4\u9884\u6d4b\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u5927\u591a\u6570\u5176\u4ed6\u6a21\u578b\u90fd\u8981\u5c11\u5f97\u591a\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3aIHME\u6a21\u578b\u9884\u6d4b\uff0c\u6b7b\u4ea1\u4eba\u6570\u5c06\u5728\u5cf0\u503c\u4e4b\u540e\u8fc5\u901f\u4e0b\u964d-\u8fd9\u4e00\u5047\u8bbe\u5c1a\u672a\u5f97\u5230\u8bc1\u5b9e\u3002\n\u5468\u4e09\uff0c\u7f8e\u56fd\u7684\u6b7b\u4ea1\u4eba\u6570\u8d85\u8fc7\u4e866\u4e07\u4eba\u7684\u5927\u5173\uff0cIHME\u6a21\u578b\u66fe\u8868\u793a\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u7d2f\u8ba1\u6b7b\u4ea1\u4eba\u6570\u3002IHME\u57284\u670829\u65e5\u53d1\u5e03\u4e86\u4e00\u4efd\u65b0\u7684\u66f4\u65b0\uff0c\u5c06\u603b\u6b7b\u4ea1\u4eba\u6570\u7684\u4f30\u8ba1\u4e0a\u8c03\u81f372\uff0c433\u4eba\uff0c\u4f46\u8fd9\u4e00\u4f30\u8ba1\u770b\u8d77\u6765\u6700\u65e9\u4e5f\u53ef\u80fd\u5728\u4e0b\u5468\u88ab\u8bc1\u660e\u662f\u4f4e\u4f30\u7684\u3002\u5373\u4f7f\u662f\u5b83\u7684\u6b7b\u4ea1\u4e0a\u9650-\u52308\u6708\u4efd\u73b0\u5728\u88ab\u5217\u4e3a114\uff0c228\u4eba\u2026\u3002\n\u5bf9IHME\u6a21\u578b\u7684\u4e00\u9879\u5206\u6790\u53d1\u73b0\uff0c\u5b83\u5bf9\u6bcf\u4e2a\u5dde\u7684\u7b2c\u4e8c\u5929\u6b7b\u4ea1\u9884\u6d4b\u670970%\u7684\u65f6\u95f4\u5728\u517695%\u7684\u7f6e\u4fe1\u533a\u95f4\u4e4b\u5916-\u8fd9\u610f\u5473\u7740\u5b9e\u9645\u7684\u6b7b\u4ea1\u6570\u5b57\u670970%\u7684\u65f6\u95f4\u5728\u5b83\u9884\u6d4b\u7684\u8303\u56f4\u4e4b\u5916\u3002\u8fd9\u53ef\u4e0d\u592a\u597d\uff01(IHME\u6700\u8fd1\u7684\u4fee\u8ba2\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1b\u4e0b\u9762\u6709\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u4fe1\u606f\u3002)\u3002\n\u8fd9\u4e00\u8bb0\u5f55\u5bfc\u81f4\u4e00\u4e9b\u4e13\u5bb6\u6279\u8bc4\u4e86\u8fd9\u79cd\u6a21\u5f0f\u3002\u54c8\u4f5b\u5927\u5b66\u6d41\u884c\u75c5\u5b66\u5bb6\u9a6c\u514b\u00b7\u5229\u666e\u897f\u5947(Marc Lipsitch)\u544a\u8bc9\u8bb0\u8005\uff0c\u201c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6211\u4eec\u5927\u591a\u6570\u4f20\u67d3\u75c5\u6d41\u884c\u75c5\u5b66\u9886\u57df\u7684\u4eba\u8ba4\u4e3a\u5f88\u9002\u5408\u201d\u9884\u6d4b\u51a0\u72b6\u75c5\u6bd2\u7684\u6a21\u578b\u3002\n\u4f46\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5b83\u662f\u5982\u4f55\u5728\u653f\u7b56\u5236\u5b9a\u8005\u4e2d\u4e0a\u5347\u5230\u5982\u6b64\u7a81\u51fa\u7684\u5730\u4f4d\u7684\uff1f\u5176\u4ed6\u6a21\u578b\u5728\u9884\u6d4b\u75ab\u60c5\u8fdb\u7a0b\u65b9\u9762\u6bd4IHME\u7684\u6a21\u578b\u505a\u5f97\u66f4\u597d\uff0c\u5176\u4e2d\u8bb8\u591a\u6a21\u578b\u4f7f\u7528\u4e86\u6d41\u884c\u75c5\u5b66\u5bb6\u8ba4\u4e3a\u66f4\u6709\u524d\u9014\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u6b63\u662fIHME\u6a21\u5f0f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6307\u5bfc\u4e86\u653f\u7b56\u5236\u5b9a\u8005\u5c06\u91cd\u70b9\u653e\u5728.\u3002\n\u5bf9\u5176\u5f71\u54cd\u8fc7\u5927\u7684\u4e00\u4e2a\u6f5c\u5728\u89e3\u91ca\u662f\uff1a\u4e00\u4e9b\u4f7fIHME\u6a21\u578b\u5728\u9884\u6d4b\u75c5\u6bd2\u65f6\u4e0d\u53ef\u9760\u7684\u56e0\u7d20\u53ef\u80fd\u5df2\u7ecf\u5f15\u8d77\u4e86\u4eba\u4eec\u7684\u6ce8\u610f\u3002\u9996\u5148\uff0c\u4e0e\u5176\u4ed6\u6a21\u578b\u76f8\u6bd4\uff0c\u5b83\u66f4\u52a0\u7b80\u5355\u5316\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4ee5\u66f4\u590d\u6742\u7684\u6a21\u578b\u65e0\u6cd5\u5e94\u7528\u7684\u65b9\u5f0f\u5e94\u7528\uff0c\u4f8b\u5982\u63d0\u4f9b\u5dde\u4e00\u7ea7\u7684\u9884\u6d4b\u2026\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5b83\u5bf9\u5404\u5dde\u7684\u4f30\u8ba1\u7f6e\u4fe1\u533a\u95f4\u5f88\u7a84\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u62e5\u6709\u53ef\u5f15\u7528(\u548c\u4e50\u89c2\u7684)\u80cc\u7ebf\u6570\u5b57\u3002\u7f6e\u4fe1\u533a\u95f4\u8868\u793a\u4e00\u4e2a\u6570\u5b57\u8303\u56f4\uff0c\u5728\u8be5\u8303\u56f4\u5185\u6a21\u578b\u975e\u5e38\u786e\u4fe1\u771f\u503c\u5c06\u5b58\u5728\u3002\u4e00\u4e2a\u72ed\u7a84\u7684\u8303\u56f4\uff0c\u201c\u5f53\u4e16\u754c\u7edd\u671b\u5730\u60f3\u77e5\u9053\u524d\u65b9\u662f\u4ec0\u4e48\u65f6\uff0c\u7ed9\u4eba\u4e00\u79cd\u786e\u5b9a\u6027\u7684\u8868\u8c61\u662f\u8bf1\u4eba\u7684\u2026\u2026\u201d\n\u5bf9IHME\u6a21\u578b\u7684\u6279\u8bc4\uff0c\u4ee5\u53ca\u5173\u4e8e\u66f4\u5e7f\u6cdb\u7684\u6d41\u884c\u75c5\u5b66\u6a21\u578b\u7684\u65b0\u51fa\u73b0\u7684\u8fa9\u8bba\uff0c\u63ed\u793a\u4e86\u6297\u51fb\u51a0\u72b6\u75c5\u6bd2\u7684\u91cd\u8981\u6311\u6218\u3002\u597d\u7684\u89c4\u5212\u9700\u8981\u597d\u7684\u9884\u6d4b\u3002\u9700\u8981\u6a21\u578b\u6765\u5e2e\u52a9\u9884\u6d4b\u56de\u6d41\u5e76\u53d1\u73b0\u6f5c\u5728\u7684\u7b2c\u4e8c\u6ce2\u3002\u5256\u6790IHME\u6a21\u578b\u7684\u9519\u8bef\u4e4b\u5904\uff0c\u8fd8\u6709\u54ea\u4e9b\u5176\u4ed6\u6a21\u578b..\u3002\n\u75be\u75c5\u4f20\u64ad\u6a21\u578b\u65e8\u5728\u5e2e\u52a9\u51b3\u7b56\u8005\u5728\u6570\u5b66\u80dc\u8fc7\u76f4\u89c9\u7684\u73af\u5883\u4e2d\u505a\u51fa\u51b3\u5b9a\u3002\u5927\u591a\u6570\u4eba\u5f88\u96be\u60f3\u8c61\u6307\u6570\u589e\u957f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u75c5\u6bd2\u57283\u6708\u4efd\u4f20\u64ad\u65f6\uff0c\u8bb8\u591a\u4eba\u90fd\u5927\u5403\u4e00\u60ca\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6a21\u578b\u53ef\u4ee5\u662f\u6709\u7528\u7684\u3002\n\u6a21\u578b\u901a\u5e38\u5217\u51fa\u4e00\u4e9b\u57fa\u672c\u5047\u8bbe\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u5047\u8bbe\u63d0\u4f9b\u9884\u6d4b\u3002IHME\u6a21\u578b\u5bfb\u6c42\u9884\u6d4b\u6b7b\u4ea1\u7387\u548c\u4f4f\u9662\u7387\uff0c\u5047\u8bbe\u5e7f\u6cdb\u7684\u793e\u4f1a\u8ddd\u79bb\u548c\u9632\u6b62\u75c5\u6bd2\u4f20\u64ad\u7684\u5f3a\u6709\u529b\u63aa\u65bd\u3002\u7531\u4e8e\u68c0\u6d4b\u5728\u786e\u5b9a\u611f\u67d3\u7387\u65b9\u9762\u662f\u5982\u6b64\u4e0d\u53ef\u9760\uff0c\u8be5\u6a21\u578b\u4ec5\u4f7f\u7528\u2026\u3002\nIHME\u7814\u7a76\u5458Ali Mokda\u544a\u8bc9\u6211\uff0c\u9884\u8ba1\u7684\u4f4f\u9662\u7387\u662f\u4f7f\u5b83\u4e0e\u4f17\u4e0d\u540c\u7684\u56e0\u7d20\u4e4b\u4e00\u3002\u8fd9\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u63d0\u4f9b\u8fd9\u79cd\u9884\u6d4b\u7684\u6a21\u578b\u4e4b\u4e00\uff0c\u800c\u4e14\u8fd9\u662f\u5404\u56fd\u653f\u5e9c\u53ef\u4ee5\u6293\u4f4f\u5e76\u8ba1\u5212\u7684\u53ef\u884c\u4fe1\u606f\u4e4b\u4e00\u3002\n\u5b83\u4e0a\u5347\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662fIHME\u51b3\u5b9a\u5bf9\u5f3a\u70c8\u7684\u793e\u4f1a\u758f\u8fdc\u63aa\u65bd\u7684\u5f71\u54cd\u8fdb\u884c\u5efa\u6a21\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e00\u9009\u62e9\u662f\u6b63\u786e\u7684-\u7f8e\u56fd\u5404\u5730\u786e\u5b9e\u91c7\u53d6\u4e86\u5f3a\u6709\u529b\u7684\u63aa\u65bd-\u636e\u62a5\u9053\uff0c\u8fd9\u540d\u6a21\u7279\u5927\u91cf\u751f\u4ea7\u7684\u8f83\u4f4e\u6b7b\u4ea1\u4eba\u6570\u5bfc\u81f4\u5b83\u53d7\u5230\u7279\u6717\u666e\u653f\u5e9c\u7684\u597d\u8bc4\u3002\n\u4f46\u968f\u7740\u51e0\u5468\u7684\u65f6\u95f4\u8fc7\u53bb\uff0cIHME\u7684\u9884\u6d4b\u663e\u7136\u8fc7\u4e8e\u4e50\u89c2\uff0c\u800c\u4e14", "note_en": "Skip to main content                                                                                                                How many people are likely to die in the United States of  Covid-19? How many hospital beds is the country going to need? When will case numbers peak?\n To answer those  questions, many hospital planners, media outlets, and government bodies \u2014 including the White House \u2014 relied heavily on   one particular model out of the many that have been published in the past two months: the University of Washington\u2019s Institute for Health Metrics and Evaluation (IHME).\n The model first estimated in late March that there\u2019d be fewer than 161,000 deaths total in the US; in early April, it revised its projections to say the total death toll through August was \u201cprojected to be 60,415\u201d (though it acknowledged the range could be between 31,221 and 126,703).\n The model has been  cited often by the White House and has informed its policymaking. But it may have led the administration astray: The IHME has consistently forecast many fewer deaths than most other models, largely because the IHME model projects that deaths will decline rapidly after the peak \u2014 an assumption that has not been borne out.\n On Wednesday, the US death count passed the 60,000 mark that the IHME model had said was the likely total cumulative death toll. The IHME on April 29  released a new update raising its estimates for total deaths to 72,433, but that, too, looks likely to be proved an underestimate as soon as next week. Even its upper bound on deaths \u2014now listed as 114,228 by August  ...\n One analysis of the IHME model  found that its next-day death predictions for each state  were outside its 95 percent confidence interval 70 percent of the time \u2014 meaning the actual death numbers fell outside the range it projected 70 percent of the time. That\u2019s not great! (A recent revision by IHME  fixed that issue; more on this below.)\n This track record has led some experts to criticize the model.  \u201cIt\u2019s not a model that most of us in the infectious disease epidemiology field think is well suited\u201d to making projections about Covid-19, Harvard epidemiologist Marc Lipsitch  told reporters.\n But if that\u2019s the case, how  has it risen to such prominence among policymakers? Other models have done better than IHME\u2019s at predicting the course of the epidemic, and many of them use approaches epidemiologists believe are more promising. Yet it\u2019s the IHME model that has generally   guided policymakers,  for the most part, in the direction of focusing on a  ...\n One potential explanation for its outsize influence:  Some of the factors that make the IHME model unreliable at predicting the virus may have gotten people to pay attention  to it. For one thing, it\u2019s more simplistic compared to other models. That means it can be applied in ways more complicated models could not, such as providing  state-level projections  ...\n Meanwhile, its narrow confidence intervals for state-by-state estimates meant it had quotable (and optimistic)  topline numbers. A confidence interval represents a range of numbers wherein the model is very confident the true value will lie.  A narrow range that gives  \u201can appearance of certainty  is seductive when the world is desperate to know what lies ahead,  ...\n The criticism of the IHME model, and an emerging debate over epidemiology models more broadly, has brought to light important challenges in the fight against the coronavirus. Good planning requires good projections. Models are needed to help predict resurgences and spot a potential second wave. Dissecting what the IHME model got wrong, what other models  ...\n  Models of disease spread are meant to help decision-makers in an environment where math will outperform intuitions. Most people have a hard time thinking about  exponential growth, which is why many were taken by surprise in March as the virus spread. That\u2019s why models can be useful.\n Models usually lay out some foundational assumptions and offer projections based on those assumptions. The IHME model seeks to project death rates and hospitalization rates assuming widespread social distancing and strong measures to prevent the spread of the virus. Since testing is so unreliable at identifying the infection rate, the model uses only  ...\n That projected hospitalization rate was one of the things that set it apart, IHME researcher Ali Mokdad told me. It was one of the few models offering that projection, and it was actionable information governments could grab on to and plan around.\n Another reason it rose in prominence was IHME\u2019s decision to model the effects of strong social distancing measures.  That choice proved correct \u2014 strong measures were indeed taken across the US \u2014 and the lower death numbers the model churned out as a result reportedly led to it being  received favorably by the Trump administration.\n But as the weeks have passed, it has become clear that the IHME \u2019s projections have been too optimistic, and slow to adjust to reflect the fact that deaths have plateaued rather than rapidly decreasing to zero. The IHME has been regularly updating its model as new data comes in, but the updates have often been slow enough that the numbers are absurd  ...\n Mokdad told me when we talked that a fix was in the works, and it went up a few days later: The model now projects 73,433 deaths by August. That, too, is probably an underestimate \u2014  most other models project that total will be reached next week.\n In the IHME\u2019s defense, it does offer a 95 percent confidence interval that is more accurate than the topline numbers.  That range goes from 59,343 \u2014 significantly less than the number of people already dead of the virus \u2014 to 114,228. That might sound like a wide range, but it\u2019s still optimistic, and the actual toll  is on track to lie outside that  ...\n That\u2019s one of the core complaints about the IHME model: its confidence intervals seem too narrow, both for its next-day and  several-months-ahead predictions. For instance, when used to predict the number of deaths in a state the very next day (which doesn\u2019t require any complex modeling of the long-term effects of uncertain policies),  other researchers  ...\n The day-to-day numbers are jumpy because some counties don \u2019t report numbers every day, Mokdad told me. \u201cThe model is kind of confused because states are not reporting deaths consistently, \u201dhe said, adding, \u201cThe model assumes deaths will increase and then come back down, \u201dand so it reacts poorly when deaths instead vary day to day. Smoothing over  ...\n Indeed, the latest update to the model solves the problem where the next-day deaths are usually outside the model\u2019s confidence interval by giving the model extremely wide confidence intervals. That\u2019s commendable. It is better to be honest about your extremely high uncertainty than to claim certainty you don\u2019t have.\n That might lead to unsatisfying models with extremely wide ranges \u2014 176 to 3,885 deaths today  \u2014 but if that\u2019s an accurate reflection of the state of uncertainty, then so be it.  It \u2019s better to have a wide confidence interval, acknowledging your uncertainty, than to have a narrow one that is usually wrong. And if next-day deaths are usually wrong,  ...\n  (But while the IHME has made its day-to-day confidence intervals larger, it still has very narrow confidence intervals for its projections several weeks into the future \u2014 which is odd, as there should be even more uncertainty about those.)\n An even bigger issue with the IHME model is that  the way the model is published can obscure its problems. When it\u2019s updated, it can be hard to see what its old, obviated predictions were. A website,  covid-projections.com, has been set up so that you can look at the predictions made by old versions of the IHME model (and at the history of other  ...\n The IHME model is unusual compared to other epidemiological models for its design, too. While most of the models use standard epidemiology modeling tactics like SEIR (susceptible-exposed-infected-recovered modeling) or use computer simulations, the IHME model is effectively just about fitting a curve from early data in China and Italy to  ...\n The IHME model is based \u201con a statistical model with no epidemiologic basis,\u201d the  Annals of Internal Medicine critique argues.\n  \u201cWe\u2019re willing to make a forecast. Most academics want to hedge their bets and not be found to ever be wrong,\u201d IHME director Christopher Murray  told Politico. \u201cThat\u2019s not useful for a planner \u2014 you can\u2019t go to a hospital and say you might need 1,000 ventilators, or you might need 5,000.\u201d\n  The change to the model has certainly improved it, but some problems with the confidence intervals remain.  The new model acknowledges extremely high uncertainty about what will happen tomorrow \u2014 in my state, California, it says there will be between 5 and 103 deaths tomorrow. That\u2019s a really wide range.\n But on May 20, the model is entirely sure there will be zero deaths. The 95 percent confidence interval runs from zero deaths to ... zero deaths.\n   That\u2019s an extremely strong claim. I pressed the IHME team about whether they were sure of it. Mokdad said the model\u2019s zero-deaths predictions were correct: \u201cBased on the graph, in certain states, yes \u2014 in California, May 17, zero. The virus is not circulating anymore; you would expect it to go to zero.\u201d\n But the virus is still circulating in California. On April 28, there were 1,187 new cases  reported in the state. Even if all infections in California stopped instantly today, it is likely that some already infected people would die in mid-May or later.\n California \u2019s case numbers (like those of many states) are declining, but only slowly, as social distancing has limited the spread of the virus but not fully stopped it. That ties into another problem with the IHME model: It assumes that social distancing measures, once put in place, are always sufficient to rapidly decrease case  ...\n In the report explaining the model, the researchers write that they look at four measures: \u201cSchool closures, non-essential business closures including bars and restaurants, stay-at-home recommendations, and travel restrictions including public transport closures. Days with 1 measure were counted as 0.67 equivalents, days with 2 measures  ...\n In other words, the model has a built-in assumption that once three of those measures have been put into place, cases will rapidly fall to zero. No new data can change that assumption, which is why the model continues to project zero deaths by mid-May in any area that hasn \u2019t lifted social distancing restrictions, even though case  ...\n There are many similar frustratingly confident predictions: On July 12, the model says, we\u2019ll need between 0 and 12 hospital beds in the whole US for coronavirus patients, and there will be 0 deaths at any point after July 12.\n Why the IHME model\u2019s problems shouldn\u2019t be used as an indictment of epidemiology more broadly\n All these concerns make it frustrating to many epidemiologists that the IHME model is the one being widely used and cited. \u201cThat the IHME model keeps changing is evidence of its lack of reliability as a predictive tool,\u201d epidemiologist Ruth Etzioni  told Stat Newsin an article about the problems with the model. \u201cThat it is being  ...\n Alex Merz, a microbiologist at the University of Washington\u2019s School of Medicine, has  written that \u201c @IHME_UW\u2019s overly optimistic modeling projections contributed to this debacle\u201d of the coronavirus\u2019s rapid spread in the US,  and condemned their \u201camazing shrinking error band that, preposterously, constricts to zero uncertainty  ...\n The IHME model has  also brought the discipline under fire from other fields. Tyler Cowen, whose widely read blog Marginal Revolution has  linked many of the papers demonstrating how poorly the IHME model works, argued \u201cnow really is the time to be asking tough questions about epidemiology, and yes, epidemiologists.\u201d\n That\u2019s not fair, many epidemiologists say \u2014 the model doesn\u2019t use any of the standard tools of the discipline, and they  hate it too.\n \u201cThat the IHME model keeps changing is evidence of its lack of reliability as a predictive tool\u201d\n \u201cThe IHME approach departs from classic epidemiological modeling,\u201d epidemiological modelers at the University of Texas at Austin  argued. \u201cRather than using systems of equations to project the person-to-person transmission of the virus, the [IHME] model postulates that COVID-19 deaths will rise exponentially and then decline  ...\n So it might not be fair to draw conclusions about the field as a whole from one model that mostly avoided using its standard tools.\n Moreover,  the public should be aware that there are  better models. The Imperial College model that the British government relied on to inform their country \u2019s coronavirus strategy has held up reasonably well, with case numbers loosely tracking the model \u2019s predictions for what would happen if social distancing were implemented  ...\n Other models, employing more standard epidemiological approaches, perform even better \u2014 though usually in narrower domains, like trying to project just the peak of the outbreak, or just the rate of new cases.\n The IHME team says their model performed pretty well on key problems like predicting the peak in most states  (it\u2019ll be clear in coming weeks how true that is)  and that they \u2019re continuing to revise it to make it better. Meanwhile, as the debate over epidemiological models heats up, it \u2019s fair to say that holding the  ...\n   The flaws I \u2019ve noted above were also features that made the model appealing when it was first launched. It was optimistic, projecting lower deaths than other models. It was clear and precise, with narrow confidence intervals. It projected hospitalizations, which few others were doing \u2014though those projections turned  ...\n But it turns out the uncertainty being reflected in a lot of other, better models is showing up for a reason \u2014 there really is still a lot unknown about the course this disease will take.\n As my colleague Matt Yglesias  has written, \u201cWe need to value scientists and listen to experts, but part of listening means understanding that right now, what they\u2019re saying is that they do not have all the answers.\u201d\n Given the enormous uncertainty ahead, responsible scientists are avoiding giving dramatic topline numbers they\u2019re unsure of, emphasizing the very wide confidence intervals on their estimates, and being careful not to publish results that the Trump administration or the public may interpret as definitive.\n But people keep searching for definitive answers (understandably so), and so any model that is presented more confidently will rise to prominence over models that are humbler and better reflect the confusion.\n The IHME model is one of  several released by researchers at the University of Washington, but it has been far more widely cited and discussed than the others  \u2014 despite being less accurate.\n Ultimately, the problem may not be that some models are inaccurate. It was predictable that some models would be inaccurate, with the situation as confusing as it is. There are dozens of models, and ideally we \u2019d be doing something like aggregating them and weighting each according to how well it has performed  ...\n The current process is almost exactly the opposite of that. Most models are nearly ignored, while a few are cited by the White House and widely referred to in the press. The process that makes some models prominent is not a process that picks out the best of the best \u2014and in fact, it may actively be picking out  ...\n In other words, the fact that many epidemiological models are performing badly isn\u2019t great, but it could be part of a productive process of arriving at better models.  But the media, policymakers, and the public need to be conscious of what kind of models we gravitate to and why. If we elevate the ones we like  ...\n  Sign up for the Future Perfect newsletter  and we\u2019ll send you a roundup of ideas and solutions for tackling the world\u2019s biggest challenges \u2014 and how to get better at doing good.\n By signing up, you agree to our  Privacy Notice and European users agree to the data transfer policy. For more newsletters, check out our  newsletters page.\n   Every day at Vox, we aim to answer your most important questions and provide you, and our audience around the world, with information that has the power to save lives. Our mission has never been more vital than it is in this moment: to empower you through understanding. Vox \u2019s work is reaching more people  ...", "posttime": "2020-05-04 11:44:03", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u6a21\u578b,model", "title": "IHME\u51a0\u72b6\u75c5\u6bd2\u6a21\u578b\u4e00\u76f4\u662f\u9519\u8bef\u7684\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u5728\u542c\u5462\uff1f", "title_en": "The IHME coronavirus model keeps being wrong. Why are we still listening to it?", "transed": 1, "url": "https://www.vox.com/future-perfect/2020/5/2/21241261/coronavirus-modeling-us-deaths-ihme-pandemic", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u6a21\u578b", "model"]}, {"category": "", "categoryclass": "", "imagename": "b1e61c67eb6a9b28e9172e8ddf6994af.png", "infoid": 1000550, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u627e\u4e0d\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u65b0\u5bf9\u8bdd\u544a\u8bc9\u67d0\u4eba\u4ece\u5b89\u88c5python\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\u5728\u7528\u6237\u8def\u5f84\u4e2d\u8986\u76d6\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee5\u91cd\u5b9a\u5411\u5230Windows\u5e94\u7528\u5546\u5e97\u662f\u8352\u8c2c\u7684\uff0c\u4e5f\u662f\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7279\u6743\u5730\u4f4d\u7684\u6ee5\u7528\u3002\n\u6709\u6ca1\u6709\u4eba\u77e5\u9053\u544a\u8bc9\u7528\u6237\u624b\u52a8\u5220\u9664/AppData/Local/Microsoft/WindowsApps/python\u6216\u624b\u52a8\u7f16\u8f91\u4ed6\u4eec\u7684\u8def\u5f84\u7684\u89e3\u51b3\u65b9\u6cd5\uff1f\u6211\u53ea\u5e0c\u671b\u5f53\u4eba\u4eec\u6b63\u786e\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\u540e\uff0c\u6211\u7684\u811a\u672c\u80fd\u591f\u518d\u6b21\u5de5\u4f5c\u3002\n\u5bf9\u8bdd\u7ed3\u675f\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500\u3002\n\u65b0\u5bf9\u8bdd\u6211\u731c\u4ed6\u4eec\u7684\u60f3\u6cd5\u662f\u4ece\u82f9\u679c\u516c\u53f8\u5f97\u5230\u7684\uff0c\u82f9\u679c\u516c\u53f8\u505a\u8fd9\u7c7b\u4e8b\u60c5\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\n\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5e2e\u52a9\u5b66\u751f\u89e3\u51b3python/windows10\u7684\u8def\u5f84\u95ee\u9898\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6211\u611f\u89c9\u5fae\u8f6f\u60f3\u8981\u6fc0\u6012\u6211\u4e2a\u4eba\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500\u3002\nWindows\u5e94\u7528\u5546\u5e97\u7684\u7248\u672c\u771f\u7684\u5f88\u68d2\uff0c\u4e5f\u5f88\u5bb9\u6613\u8bbe\u7f6e\uff0c\u5c3d\u7ba1\u6211\u660e\u767d\u4e3a\u4ec0\u4e48\u5982\u679c\u5feb\u6377\u65b9\u5f0f\u5df2\u7ecf\u5728\u8def\u5f84\u4e0a\u4e86\uff0c\u90a3\u4e48\u5305\u542b\u5b83\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e5f\u662f\u611a\u8822\u7684\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500", "note_en": "\u65b0\u5bf9\u8bdd  Telling someone to install python from   if the binary is not found would be helpful. Overriding an already installed app in the user&#39;s path to redirect to the windows store is ridiculous and abuse of the OS&#39;s privileged position.\n  Does anyone know a workaround for this short of telling the user to manually delete that /AppData/Local/Microsoft/WindowsApps/python or to manually edit their PATH?I just want my scripts to work again when people have properly run the   installer.\n  \u5bf9\u8bdd\u7ed3\u675f\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500\n  \u65b0\u5bf9\u8bdd  I guess they got the idea from Apple who have been doing this sort of thing for a while\n    i have spent a lot of time helping students with path issues with python/windows 10at a certain point it feels like microsoft is trying to irritate me personally\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500\n  The windows store version is really great and easy to set up, though I can see why it\u2019s be unnecessary and dumb to include the shortcut if it\u2019s already on the path\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500", "posttime": "2020-05-04 08:35:54", "tags": "windows,python", "title": "Windows 10\u6709\u91cd\u5b9a\u5411\u5230Windows\u5e94\u7528\u5546\u5e97\u7684\u5047\u201cPython\u201d\u547d\u4ee4", "title_en": "Windows 10 has fake \u201cPython\u201d command that redirects to the Windows Store", "transed": 1, "url": "https://twitter.com/CasualEffects/status/1256806906015907841", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["windows", "python"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000549, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Google\u7fa4\u7ec4\u5141\u8bb8\u60a8\u521b\u5efa\u5e76\u53c2\u4e0e\u5728\u7ebf\u8bba\u575b\u548c\u57fa\u4e8e\u7535\u5b50\u90ae\u4ef6\u7684\u7fa4\u7ec4\uff0c\u8fd9\u4e9b\u7fa4\u7ec4\u5177\u6709\u4e30\u5bcc\u7684\u793e\u533a\u5bf9\u8bdd\u4f53\u9a8c\u3002", "note_en": "Google Groups allows you to create and participate in online forums and email-based groups with a rich experience for community conversations.", "posttime": "2020-05-04 08:35:50", "tags": "\u6f0f\u6d1e,\u900f\u660e,transparency,\u7fa4\u7ec4,groups", "title": "\u8bc1\u4e66\u900f\u660e\u65e5\u5fd7\u56e0SALT\u6f0f\u6d1e\u800c\u53d7\u635f", "title_en": "Certificate Transparency Log Compromised via Salt Vulnerability", "transed": 1, "url": "https://groups.google.com/a/chromium.org/forum/#!topic/ct-policy/aKNbZuJzwfM", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6f0f\u6d1e", "\u900f\u660e", "\u7fa4\u7ec4", "groups"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000548, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u6784\u5efa\u8fd9\u4e00\u5206\u6790\uff0c\u751f\u6d3b\u6210\u672c\u662f\u901a\u8fc7\u5c06\u5e02\u4e2d\u5fc3\u4e00\u5957\u4e00\u5c45\u5ba4\u516c\u5bd3\u7684\u79df\u91d1\u548c\u4e0d\u5305\u62ecNumbeo\u79df\u91d1\u76841\u4eba\u751f\u6d3b\u6210\u672c\u7684\u603b\u548c\u6765\u4f30\u8ba1\u7684\u3002\u7136\u540e\u5c06\u8fd9\u7b14\u6b3e\u9879\u4ece\u4efb\u4f55\u8d27\u5e01\u5151\u6362\u6210\u7f8e\u5143\uff0c\u5e76\u4f7f\u7528Neuvoo\u7f51\u7ad9\u786e\u5b9a\u7a0e\u6536\uff0c\u800c\u5e73\u5747\u57fa\u672c\u5de5\u8d44\u5219\u4eceGlassDoor\u4e2d\u63d0\u53d6\u3002\n\u9009\u62e9\u8fdb\u884c\u6bd4\u8f83\u7684\u57ce\u5e02\u5305\u62ec\u8499\u7279\u5229\u5c14\u3001\u591a\u4f26\u591a\u3001\u6e25\u592a\u534e\u3001\u57c3\u5fb7\u8499\u987f\u3001\u5361\u5c14\u52a0\u91cc\u3001\u57fa\u5947\u7eb3\u3001\u6e29\u54e5\u534e\u3001\u897f\u96c5\u56fe\u3001\u65e7\u91d1\u5c71\u3001\u7ebd\u7ea6\u5e02\u3001\u6ce2\u58eb\u987f\u3001\u6ce2\u7279\u5170\u3001\u5965\u65af\u6c40\u3001\u534e\u76db\u987f\u7279\u533a\u3001\u4e39\u4f5b\u3001\u829d\u52a0\u54e5\u3001\u82cf\u9ece\u4e16\u3001\u4f26\u6566\u3001\u5df4\u9ece\u3001\u963f\u59c6\u65af\u7279\u4e39\u3001\u65af\u5fb7\u54e5\u5c14\u6469\u3001\u5df4\u585e\u7f57\u90a3\u3001\u54e5\u672c\u54c8\u6839\u3001\u90fd\u67cf\u6797\u548c\u67cf\u6797\u3002\u4e3a\u4e86\u786e\u5b9a\u8fd9\u4efd\u699c\u5355\uff0c\u6211\u4ece\u4f20\u95fb\u30012019\u5e74\u5317\u7f8e\u79d1\u6280\u4eba\u624d\u8bc4\u5206\u62a5\u544a\u4ee5\u53ca\u6b27\u6d32\u4eba\u624d\u666f\u89c2\u62a5\u544a\u4e2d\u521b\u5efa\u4e86\u4e00\u4efd\u521d\u6b65\u7684\u57ce\u5e02\u540d\u5355\u3002\u7136\u540e\u6211\u6309.\u8fc7\u6ee4\u4e86\u540d\u5355\u3002\n\u4e3a\u4e86\u5f00\u59cb\u6211\u7684\u5206\u6790\uff0c\u6211\u901a\u8fc7GlassDoor\u83b7\u5f97\u4e86\u6bcf\u4e2a\u57ce\u5e02\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u5e73\u5747\u57fa\u672c\u5de5\u8d44\u3002\u8fd9\u5e76\u4e0d\u662f\u83b7\u53d6\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5e73\u5747\u5de5\u8d44\u7684\u5b8c\u7f8e\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4eba\u4eec\u53ef\u80fd\u4f1a\u4ee5\u8bf8\u5982\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u6216\u5176\u4ed6\u5934\u8854\u53d1\u5e03\u4ed6\u4eec\u7684\u5de5\u8d44\uff0c\u4f46\u8fd9\u6837\u505a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5408\u7406\u7684\u4ee3\u7406\u3002\n\u4ece\u4e0a\u9762\u7684\u56fe\u8868\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u5173\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5de5\u8d44\u7684\u4f20\u95fb\u4f3c\u4e4e\u5f97\u5230\u4e86\u8bc1\u5b9e\uff0c\u56e0\u4e3a\u7f8e\u56fd\u4eba\u7684\u5de5\u8d44\u5f80\u5f80\u6bd4\u52a0\u62ff\u5927\u548c\u6b27\u6d32\u7684\u5de5\u8d44\u9ad8\uff0c\u65e7\u91d1\u5c71\u7684\u5de5\u8d44\u6bd4\u5176\u4ed6\u6240\u6709\u4eba\u90fd\u9ad8\u3002\u8fd9\u5f20\u56fe\u8868\u552f\u4e00\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ed3\u679c(\u81f3\u5c11\u5bf9\u6211\u6765\u8bf4)\u662f\u82cf\u9ece\u4e16\u7684\u5e73\u5747\u5de5\u8d44\u4f3c\u4e4e\u4e0e\u65e7\u91d1\u5c71\u76f8\u5f53\u3002\n\u5f53\u8003\u8651\u5230\u751f\u6d3b\u8d39\u7528\u65f6\uff0c\u6ca1\u6709\u4ec0\u4e48\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e8b\u60c5\u53d1\u751f\u3002\u65e7\u91d1\u5c71\u548c\u7ebd\u7ea6\u5e02\u4f4d\u5c45\u699c\u9996\uff0c\u591a\u4f26\u591a\u3001\u6e29\u54e5\u534e\u548c\u897f\u96c5\u56fe\u7b49\u5176\u4ed6\u77e5\u540d\u57ce\u5e02\u7d27\u968f\u5176\u540e\u3002\u7136\u800c\uff0c\u8003\u8651\u5230\u751f\u6d3b\u7684\u7edd\u5bf9\u6210\u672c\u5e76\u4e0d\u662f\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u4eba\u4eec\u5728\u90a3\u4e2a\u57ce\u5e02\u8d5a\u7684\u6536\u5165\u53ef\u80fd\u4f1a\u8ba9\u5728\u90a3\u91cc\u751f\u6d3b\u7684\u6210\u672c\u53d8\u5f97\u7269\u6709\u6240\u503c\u3002\u56e0\u6b64\uff0c\u770b\u770b\u751f\u6d3b\u8d39\u6240\u5360\u5de5\u8d44\u7684\u767e\u5206\u6bd4\u662f\u5f88\u6709\u7528\u7684\u3002\n\u4ece\u8fd9\u4e9b\u767e\u5206\u6bd4\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u6211\u4eec\u6839\u636e\u6536\u5165\u8fdb\u884c\u8c03\u6574\uff0c\u591a\u4f26\u591a\u548c\u6e29\u54e5\u534e\u7684\u751f\u6d3b\u6210\u672c\u4e0e\u65e7\u91d1\u5c71\u548c\u7ebd\u7ea6\u5e02\u60ca\u4eba\u5730\u76f8\u4f3c\uff0c\u8fd9\u89e3\u91ca\u4e86\u6211\u4e2a\u4eba\u770b\u5230\u7684\u56f4\u7ed5\u52a0\u62ff\u5927\u79d1\u6280\u4eba\u5458\u5de5\u8d44\u7684\u5927\u90e8\u5206\u4e0d\u6ee1\u3002\n\u901a\u8fc7\u67e5\u770b\u6240\u6709\u53f8\u6cd5\u7ba1\u8f96\u533a\u7684\u5e73\u5747\u7a0e\u7387\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ed3\u679c\uff1a\u5bf9\u4e8e\u666e\u901a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u6240\u6709\u53f8\u6cd5\u7ba1\u8f96\u533a\u7684\u7a0e\u7387\u5f80\u5f80\u76f8\u5f53\u5747\u5300\uff0c\u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u5f02\u5e38\u503c\u662f\u963f\u59c6\u65af\u7279\u4e39\u548c\u54e5\u672c\u54c8\u6839\u3002\n\u8fd9\u4e00\u5206\u6790\u7684\u57fa\u77f3\u662f\u51c0\u5229\u6da6\u3002\u4ece\u51cf\u7a0e\u548c\u751f\u6d3b\u8d39\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u4e00\u822c\u53ef\u80fd\u6709\u591a\u5c11\u7f8e\u5143\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u82cf\u9ece\u4e16\u548c\u897f\u96c5\u56fe\u663e\u7136\u662f\u8fd9\u9879\u5206\u6790\u4e2d\u8868\u73b0\u6700\u597d\u7684\u3002\n\u8fd9\u4e00\u5206\u6790\u5e76\u4e0d\u5b8c\u7f8e\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u8003\u8651\u5230\u4e0d\u540c\u8d44\u5386\u6c34\u5e73\u7684\u62db\u8058\u5e02\u573a\u662f\u5982\u4f55\u4e0d\u540c\u7684\u3002\u5b83\u8fd8\u6839\u636e\u5e02\u4e2d\u5fc3\u7684\u751f\u6d3b\u6210\u672c\u6765\u8ba1\u7b97\u751f\u6d3b\u6210\u672c\uff0c\u6240\u4ee5\u5b83\u5ffd\u7565\u4e86\u4e00\u4e2a\u4eba\u53ef\u4ee5\u901a\u8fc7\u4f4f\u5f97\u66f4\u8fdc\u6765\u7701\u94b1\u3002\u5b83\u4e5f\u6ca1\u6709\u8003\u8651\u5230\u6587\u5316\u3001\u80a1\u6743\u85aa\u916c\u3001\u5956\u91d1\u3001\u57ce\u5e02\u5185\u90e8\u7684\u5c31\u4e1a\u673a\u4f1a\u4ee5\u53ca\u79fb\u6c11\u7684\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u5b83\u663e\u7136\u4e0d\u662f\u5b8c\u7f8e\u7684\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u786e\u5b9e\u53d1\u73b0\u8fdb\u884c\u8fd9\u9879\u5206\u6790..\u3002", "note_en": "To construct this analysis, cost of living was estimated by taking the sum of the rent for a 1 bedroom apartment in the city centre and the cost of living for 1 person excluding rent off of  Numbeo . This sum was then converted from whatever currency it was in to USD and taxes were determined using the website  Neuvoo while average base salaries were taken from Glassdoor.\n  The cities chosen for comparison were Montreal, Toronto, Ottawa, Edmonton, Calgary, Kitchener, Vancouver, Seattle, San Francisco, New York City, Boston, Portland, Austin, Washington DC, Denver, Chicago, Zurich, London, Paris, Amsterdam, Stockholm, Barcelona, Copenhagen, Dublin, and Berlin. To determine this list, I created an initial list of cities from hearsay, the  2019 Scoring Tech Talent in North America report, as well as  The European Talent Landscape report. I then filtered the list by  ...\n  To start my analysis, I went through Glassdoor and obtained the average base salary for &#34;Software Engineer&#34; in each city. This is not a perfect means of capturing the average salary of software developers as it is possible that folks are posting their salaries under titles such as Back-end Developer or something else but doing it this way offers a reasonable proxy.\n  From the chart above, we see that the usual hearsay about software developer salaries seem to be validated as American salaries tend to be higher than Canadian and European salaries with San Francisco exceeding everyone else. The only surprising result (at least to me) from this chart would be that the average salary in Zurich seems to be comparable to San Francisco.\n   When considering cost of living, nothing surprising pops out. San Francisco and New York City top the list with other well-known cities such as Toronto, Vancouver, and Seattle trailing them. However, considering the absolute cost of living isn&#39;t particularly useful as the income one makes within that city might make living there worth the cost. Hence, it is useful to take a look at the percentage of one&#39;s salary that cost of living can take up.\n  From these percentages, we can see that Toronto and Vancouver have a cost of living that is surprisingly similar to San Francisco and New York City once we adjust for incomes which explains much of the dissatisfaction surrounding Canadian tech salaries that I personally have seen.\n   From taking a look at the average tax rates across all of the jurisdictions, we obtain the surprising result that tax rates tend to be fairly even across all of them for the average software engineer with the notable outliers being Amsterdam and Copenhagen.\n    The cornerstone of this analysis is net incomes. From deducting taxes and cost of living, we can see how much money in USD the average software developer is likely to have. From this, we see that Zurich and Seattle are clearly the top performers in this analysis.\n  This analysis is not perfect as it does not account for how the hiring market differs for different levels of seniority. It also calculates cost of living based on the cost of living downtown so it ignores that one could save money by living further out. It also does not account for culture, equity compensation, bonuses, the availability of jobs within the city itself, and the difficulty of immigration. So, it&#39;s clearly not perfect. That being said, I did find conducting this analysis  ...", "posttime": "2020-05-04 08:13:33", "tags": "\u8f6f\u4ef6\u5de5\u7a0b\u5e08,\u8f6f\u4ef6,software,\u5de5\u8d44,salaries", "title": "\u6bd4\u8f83\u4e0d\u540c\u57ce\u5e02\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5de5\u8d44", "title_en": "Comparing Software Engineer Salaries Across Cities", "transed": 1, "url": "https://javednissar.ca/comparing-software-engineer-salaries-across-cities/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8f6f\u4ef6\u5de5\u7a0b\u5e08", "\u8f6f\u4ef6", "software", "\u5de5\u8d44", "salaries"]}, {"category": "", "categoryclass": "", "imagename": "0404292f911f5dda6a7b6034a8148aa9.jpg", "infoid": 1000547, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u767b\u5f55\u8ba2\u9605\u4e16\u754c\u5546\u4e1a\u79d1\u6280\u4e0e\u79d1\u5b66\u6587\u5316\u65b0\u95fb\u6781\u5ba2\u4f53\u80b2\u5065\u5eb7\u8fa9\u8bba\u65b0\u95fb\u9634\u8c0b\u8bbaVantage Weather by News\u9634\u8c0b\u8bba5G\u51a0\u72b6\u75c5\u6bd2YouTube\u5220\u9664\u4e86\u9634\u8c0b\u8bba\u8005\u5927\u536b\u00b7\u827e\u514b(David Icke)\u7684\u8d26\u6237\uff0c\u4ed6\u4e00\u76f4\u5728\u515c\u552e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e0e5G\u6709\u5173\u7684\u795e\u8bdd\u3002\n\u6839\u636e\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u8ffd\u8e2a\u7684\u6570\u636e\uff0c\u5728YouTube\u5224\u5b9a\u4ed6\u8fdd\u53cd\u4e86\u5206\u4eab\u51a0\u72b6\u75c5\u6bd2\u4fe1\u606f\u7684\u89c4\u5b9a\u540e\uff0cIcke\u7684\u8d26\u6237\u88ab\u5220\u9664\u3002\u51a0\u72b6\u75c5\u6bd2\u662f\u4e00\u79cd\u75be\u75c5\uff0c\u5df2\u7ecf\u611f\u67d3\u4e86\u5168\u7403\u8d85\u8fc7340\u4e07\u4eba\u3002\n\u89c6\u9891\u5206\u4eab\u7f51\u7ad9\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9\u201c\u65b0\u95fb\u5468\u520a\u201d\uff1aYouTube\u6709\u660e\u786e\u7684\u653f\u7b56\uff0c\u7981\u6b62\u4efb\u4f55\u8d28\u7591\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(WHO)\u548c\u82f1\u56fd\u56fd\u6c11\u4fdd\u5065\u7cfb\u7edf(NHS)\u6240\u63cf\u8ff0\u7684\u51a0\u72b6\u75c5\u6bd2\u5b58\u5728\u548c\u4f20\u64ad\u7684\u5185\u5bb9\u3002", "note_en": "Sign In   Subscribe                       World  Business  Tech &amp; Science  Culture  Newsgeek  Sports  Health  The Debate  Vantage  Weather                    By                       News  Conspiracy Theory  5G  Coronavirus  YouTube has deleted the account of David  Icke, a conspiracy theorist who has touted the myth that the  COVID-19 pandemic is linked to 5G.\n Icke&#39;s account was removed after YouTube decided he broke its rules on sharing information about  COVID-19, a disease which has infected more than 3.4 million people worldwide, according to numbers tracked by Johns Hopkins University.\n A spokesperson for the video sharing site told  Newsweek: &#34;YouTube has clear policies prohibiting any content that disputes the existence and transmission of  Covid-19 as described by the WHO [World Health Organization] and the  NHS [the U.K&#39;s healthcare system].", "posttime": "2020-05-04 08:13:26", "tags": "youtube,5g,\u9020\u8c23,disinformation,\u51a0\u72b6\u75c5\u6bd2", "title": "YouTube\u5173\u95ed5G-\u9634\u8c0b\u9020\u8c23\u9891\u9053", "title_en": "YouTube shuts 5G-conspiracy disinformation channel", "transed": 1, "url": "https://www.newsweek.com/david-icke-man-behind-coronavirus-5g-conspiracy-has-youtube-channel-shuttered-sharing-1501641", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["youtube", "5g", "\u9020\u8c23", "\u51a0\u72b6\u75c5\u6bd2"]}, {"category": "", "categoryclass": "", "imagename": "81ac619576b071356aedeab214cd0064.jpg", "infoid": 1000546, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e8c\u7ea7\u5927\u7ea6\u534a\u79d2\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u901a\u884c\u8bc1\u7684\u5b9e\u65f6\u89c6\u9891\uff1ahttps://www.instagram.com/p/B_V8-qEpiu7/\u3002\n\u7b2c\u4e00\u7ea7\u8fd9\u4e2a\u56fe\u50cf\u9700\u8981\u76f8\u5f53\u591a\u7684\u8ba1\u5212\u548c\u51c6\u5907\u624d\u80fd\u5b8c\u6210\u3002\u6211\u7ecf\u5e38\u67e5\u770b\u51cc\u65e5\u63a2\u7d22\u8005\u7f51\u7ad9\uff0c\u770b\u770b\u6211\u9644\u8fd1\u662f\u5426\u6709\u597d\u7684\u592a\u9633\u51cc\u65e5(\u597d\u7684\u610f\u601d\u662f\u56fd\u9645\u7a7a\u95f4\u7ad9\u79bb\u6211\u7684\u4f4d\u7f6e\u5f88\u8fd1\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u66f4\u5927\uff0c\u5929\u6c14\u4e5f\u5f88\u597d)\uff0c\u5728\u8fc7\u53bb\u76843\u5e74\u91cc\uff0c\u6211\u6240\u5728\u7684\u5730\u533a\u6ca1\u6709\u4efb\u4f55\u592a\u9633\u51cc\u65e5\u3002\u76f4\u5230\u5468\u56db\u3002\n\u8fd9\u5f20\u7167\u7247\u662f\u7528\u4e00\u53f0\u7279\u6b8a\u7684\u592a\u9633\u671b\u8fdc\u955c\u548c\u4e00\u53f0\u4e13\u95e8\u7684\u5929\u6587\u6444\u5f71\u76f8\u673a\u62cd\u6444\u7684\uff0c\u62cd\u6444\u901f\u5ea6\u7ea6\u4e3a27fps\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u51cc\u65e5\u53ea\u6301\u7eed\u4e86\u5927\u7ea6\u534a\u79d2\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4e5f\u66fe\u8bd5\u56fe\u7528\u53e6\u4e00\u53f0\u76f8\u673a\u6765\u6355\u6349\u5b83\uff0c\u4f46\u7a7a\u95f4\u7ad9\u79fb\u52a8\u5f97\u592a\u5feb\u4e86\uff0c\u4ee5\u81f3\u4e8e\u5728\u6211\u7684\u7206\u88c2\u7167\u7247\u4e2d\u4ece\u4e24\u5e27\u4e4b\u95f4\u7a7f\u8fc7\u3002\u8fd9\u662f\u6211\u7684IG\u5e16\u5b50\uff0c\u6709\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u521b\u5efa\u8fd9\u5f20\u56fe\u7247\u7684\u539f\u59cb\u89c6\u9891\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u5b83\u79fb\u52a8\u5f97\u6709\u591a\u5feb\u3002\n\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u8fd9\u5f20\u7167\u7247\u548c\u6211\u7684\u5de5\u4f5c\u7684\u4fe1\u606f\uff0c\u8bf7\u6765\u770b\u770b\u6211\u7684Instagram\u3002\u5f53\u6211\u6355\u6349\u5230\u8fd9\u6837\u7684\u4e8b\u4ef6\uff0c\u5411\u4f60\u4eec\u5c55\u793a\u5e55\u540e\u60c5\u51b5\u65f6\uff0c\u6211\u4f1a\u73b0\u573a\u76f4\u64ad\u3002\n\u7b2c2\u7ea7\uff0c\u4e00\u5982\u65e2\u5f80\u7684\u4ee4\u4eba\u656c\u754f\u7684\u5f62\u8c61\u3002\u4f60\u4e3a\u4ec0\u4e48\u8981\u7b493\u5e74\u5462\uff1f\u6211\u77e5\u9053\u8fc7\u5883\u662f\u9ad8\u5ea6\u5730\u65b9\u5316\u7684\u6d3b\u52a8\uff0c\u4f46\u5f53\u6211\u68c0\u67e5\u5b83\u4eec\u65f6\uff0c\u5b83\u4eec\u4f3c\u4e4e\u76f8\u5f53\u5e38\u89c1\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u5f00\u8f6630\u5206\u949f\u5de6\u53f3\u3002\u4e5f\u8bb8\u6bcf\u9694\u51e0\u4e2a\u6708\u5c31\u6765\u4e00\u6b21\uff1f\n\u7b2c\u4e8c\u7ea7\u4f60\u4e5f\u662f\u8fd9\u4e2a\u4eba\u5417\uff1fhttps://imgur.com/gallery/kAIQdhF\uff0c\u56e0\u4e3a\u4ed6\u6bd4\u4f60\u65e9\u4e24\u5929\u4e0a\u4f20\u4e86\u8fd9\u5f20\u7167\u7247\u3002\n2\u7ea7\u8fd9\u592a\u68d2\u4e86\uff0c\u51e0\u5929\u524d\u7684\u665a\u4e0a\u7a7a\u95f4\u7ad9\u6b63\u597d\u4ece\u5934\u9876\u7ecf\u8fc7\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u6b21\u6070\u5230\u597d\u5904\u7684\u540e\u7eed\u884c\u52a8\u3002\u90a3\u662f\u4e00\u4e2a\u6674\u6717\u7684\u591c\u665a\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u50cf\u662f\u4e00\u9897\u7279\u522b\u660e\u4eae\u7684\u661f\u661f\u3002\u771f\u7684\u5f88\u4ee4\u4eba\u656c\u754f\uff0c\u4ee4\u4eba\u632f\u594b\u3002\ud83d\ude0c\u3002\n\u7ea7\u522b2\u662f\u5426\u6709\u9488\u5bf9\u5373\u5c06\u5230\u6765\u7684\u8fc7\u6e21\u6bcf\u5468\u81ea\u52a8\u66f4\u65b0\u7684\u9009\u9879\uff1f\u66f4\u597d\u7684\u505a\u6cd5\u662f\u628a\u5b83\u653e\u5230\u8c37\u6b4c\u65e5\u5386\u4e0a\uff0c\u5e76\u5e26\u6709\u901a\u77e5\u529f\u80fd\u3002\u6211\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u901a\u884c\u8bc1\u3001\u94f1\u8000\u6591\u901a\u884c\u8bc1\u548c\u661f\u9645\u94fe\u63a5\u901a\u884c\u8bc1\u4e0a\u4e5f\u9047\u5230\u8fc7\u540c\u6837\u7684\u95ee\u9898--\u603b\u662f\u5fd8\u8bb0\u68c0\u67e5\u4e0d\u540c\u5730\u70b9\u7684\u65e5\u671f\u3002\n2\u7ea7\u53ea\u662f\u597d\u5947\uff0c\u5728\u4f60\u7684\u7b2c\u4e00\u4e2a\u94fe\u63a5\u7684\u89c6\u9891\u4e2d\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u91cd\u590d\u5b83\u7684\u79fb\u52a8\uff1f\u4e5f\u8bb8\u8fd9\u662f\u4e00\u4e2a\u611a\u8822\u7684\u95ee\u9898\uff0c\u4f46\u6211\u7684\u5927\u8111\u65e0\u6cd5\u7406\u89e3\u5b83\u3002\u867d\u7136\u771f\u7684\u5f88\u9177\uff0c\u4f46\u5b83\u770b\u8d77\u6765\u771f\u7684\u5f88\u68d2\uff0c\u7edd\u5bf9\u503c\u5f97\u7b49\u5f85\u3002\n2\u7ea7\u54e6\uff0c\u5929\u54ea\uff0c\u90a3\u662f\u4e00\u5f20\u6f02\u4eae\u7684\u7167\u7247\uff0c\u542c\u5230\u5b83\u662f\u600e\u4e48\u62cd\u6444\u7684\u771f\u662f\u592a\u68d2\u4e86\uff0c\n\u4e00\u7ea7\u601d\u7ef41-\u4e0d.\u3002\u4e0d\u53ef\u80fd\u662f\u771f\u7684\u3002\u592a\u9633\u6bd4\u56fd\u9645\u7a7a\u95f4\u7ad9\u5927\u5f97\u591a\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u6bd4\u592a\u9633\u5927\u3002\n\u524d\u51e0\u5929\uff0c\u6709\u4eba\u4e0a\u4f20\u4e86\u4e00\u6bb5\u6728\u661f\u65cb\u8f6c\u7684\u89c6\u9891\uff0c\u6211\u5f04\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u8ba9\u58f0\u97f3\u5de5\u4f5c\u3002", "note_en": "level 2  Around a half second. You can see a real-time video of the pass here:  https://www.instagram.com/p/B_V8-qEpiu7/\n   level 1  This image took quite a bit of planning and preparation to pull off. I frequently check the Transit Finder website to see if there are any good solar transits near me (good meaning the ISS is close to my location so appears larger, and weather is good,) and for the last 3 years there have been none in my area. Until Thursday.\n This image was captured using a special solar telescope, and a dedicated astrophotography camera taking pictures at around 27fps, which was important since the transit only lasted around a half second. In fact, I had also attempted to catch it with a second camera, but the station moved so fast it passed through between frames during my burst shot.  Here is my IG post with more info, including the raw video this image was created from so you can watch how fast it moves.\n To learn more about this image and my work,  come check out my instagram. I go live when i captured events like this to show you the behind-the-scenes.\n level 2  Awesome image as always. How come you had to wait 3 years? I know that the transits are highly localised events, but when I check for them they seem to be pretty common, esp if you drive for 30 or so minutes. Maybe 1 every few months?\n  level 2  are you also this guy?  https://imgur.com/gallery/kAIQdhF because he posted this exact image 2 days before you.\n     level 2  This is awesome, and a well-timed follow-up for me as the space station passed directly overhead a few nights ago. It was a clear night so it looked like an especially bright star. Really quite awe inspiring. \ud83d\ude0c\n  level 2  Is there an option for automatic weekly updates on upcoming transits? Even better to put it into google calendar with notifications. I had the same issue with ISS passes, Iridium flares and Starlink passes - always forget to check the different sites for dates.\n level 2  Just curious, in the video in your first link, why does it repeat it moving? Probably a stupid question, but my brain can&#39;t wrap around it. Really cool stuff though, it looks really awesome, and definitely worth the wait.\n level 2  Oh my glob, that&#39;s a beautiful shot, awesome to hear about how it was shot,\n     level 1  Thought 1- Nah... can\u2019t be real. The sun is way bigger than the ISS, it would never be that big compared to the sun.\n level 2  The other day, someone posted a video of Jupiter rotating, and I couldn&#39;t figure out why I couldn&#39;t get the sound working.", "posttime": "2020-05-04 08:13:13", "tags": "\u7a7a\u95f4\u7ad9,crossing,\u89c6\u9891,image", "title": "\u56fd\u9645\u7a7a\u95f4\u7ad9\u7a7f\u8d8a\u592a\u9633\u8868\u9762", "title_en": "ISS Crossing the Face of the Sun", "transed": 1, "url": "https://www.reddit.com/r/space/comments/g88axp/after_3_years_of_waiting_for_the_right_conditions/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7a7a\u95f4\u7ad9", "crossing", "\u89c6\u9891", "image"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000544, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5468\u6211\u5bf9\u5185\u6838\u71b5\u7cfb\u7edf\u8fdb\u884c\u4e86\u4e00\u6b21\u5927\u4fee\uff0c\u5982\u679c\u60a8\u89c2\u5bdf\u5230\u4efb\u4f55\u969c\u788d\uff0c\u8bf7\u544a\u8bc9\u6211\uff01\u6709\u5173\u6280\u672f\u80cc\u666f\uff0c\u8bf7\u53c2\u9605Tech-Kern\u4e0a\u51e0\u4e2a\u6708\u524d\u7684\u7ebf\u7a0b\uff1a&lt\uff1bhttps://mail-index.NetBSD.org/tech-kern/2019/12/21/msg025876.html&gt\uff1b.Some\u7528\u6237\u53ef\u89c1\u7684\u66f4\u6539\uff1a-\u60a8\u53ef\u4ee5\u4ecedmesg\u4e2d\u7684\u6d88\u606f\u4e2d\u83b7\u5f97\u6709\u5173\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u6216rc.d\u662f\u5426\u8bfb\u53d6\u968f\u673a\u79cd\u5b50(\u901a\u5e38\u5b58\u50a8\u5728/var/db/\u71b5-file)\u7684\u53cd\u9988\uff1a\u71b5\uff1a\u4ece\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u8f93\u5165\u79cd\u5b50\u6216\u71b5\uff1a\u6ca1\u6709\u6765\u81ea\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u7684\u79cd\u5b50.", "note_en": "This week I committed an overhaul of the kernel entropy system.Please let me know if you observe any snags! For the technicalbackground, see the thread on tech-kern a few months ago:&lt; https://mail-index.NetBSD.org/tech-kern/2019/12/21/msg025876.html&gt;.Some user-visible changes:- You get feedback about whether the bootloader or rc.d read the random seed, typically stored at /var/db/entropy-file, from messages in dmesg like: entropy: entering seed from bootloader or entropy: no seed from bootloader  ...", "posttime": "2020-05-04 07:51:05", "tags": "\u62ac\u5934,entropy,\u7a0b\u5e8f", "title": "\u62ac\u5934\uff1a\u71b5\u68c0\u4fee", "title_en": "Heads Up: Entropy Overhaul", "transed": 1, "url": "https://mail-index.netbsd.org/current-users/2020/05/01/msg038495.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u62ac\u5934", "entropy", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "4e77c079cda1dbf55bda942aa2a034fd.jpg", "infoid": 1000543, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "4\u6708\u4e0b\u65ec\u7684\u4e00\u4e2a\u661f\u671f\u4e8c\u4e0b\u5348\uff0c\u4e00\u8258\u5c0f\u578b\u9a73\u8239\u4ece\u963f\u62c9\u65af\u52a0\u7684\u53e4\u65af\u5854\u592b\u65af\u51fa\u53d1\uff0c\u524d\u5f80\u4e16\u754c\u4e0a\u6700\u504f\u8fdc\u7684\u597d\u5e02\u591a(Costco)\u4ed3\u5e93\u3002\n\u8fd9\u825896\u82f1\u5c3a\u957f\u7684\u8239\u5728\u51b0\u51b7\u7684\u6d77\u5ce1\u6ce2\u6d9b\u6c79\u6d8c\u7684\u6c34\u57df\u4e2d\u55e1\u55e1\u4f5c\u54cd\uff0c\u7a7f\u8fc7\u5e7f\u88a4\u7684\u8352\u91ce\u3001\u767d\u96ea\u8986\u76d6\u7684\u5c71\u5cf0\u548c\u6b63\u5728\u7834\u88c2\u7684\u9cb8\u9c7c\u3002\u4e03\u4e2a\u5c0f\u65f6\u540e\uff0c\u5f53\u5b83\u5230\u8fbe\u6731\u8bfa\u65f6\uff0c\u51e0\u4e2a\u52c7\u6562\u7684\u4eba\u628a\u4ef7\u503c2\u4e07\u7f8e\u5143\u7684\u9e21\u86cb\u3001\u9762\u7c89\u3001\u8089\u3001\u7f50\u5934\u548c\u519c\u4ea7\u54c1\u88c5\u4e0a\u4e86\u7532\u677f\u3002\n\u5b83\u5728\u66ae\u8272\u4e2d\u56de\u5230\u4e86\u53e4\u65af\u5854\u592b\u65af\uff0c\u5c31\u50cf\u4e00\u53ea\u9e1f\u5728\u4e3a\u5b83\u7684\u5c0f\u9e21\u63d0\u4f9b\u98df\u7269\u3002\n\u50cf\u7f8e\u56fd\u8bb8\u591a\u504f\u8fdc\u7684\u519c\u6751\u57ce\u9547\u4e00\u6837\uff0c\u53e4\u65af\u5854\u592b\u65af\u6709\u4e00\u6761\u8270\u96be\u7684\u4f9b\u5e94\u94fe\u3002\u5373\u4f7f\u5728\u666f\u6c14\u65f6\u671f\uff0c\u5c06\u98df\u54c1\u6742\u8d27\u8fd0\u5230\u963f\u62c9\u65af\u52a0\u4e1c\u5357\u90e8\u7684\u4e00\u5757\u4e0e\u4e16\u9694\u7edd\u7684\u98de\u5730\u4e5f\u9700\u8981\u4e00\u4e9b\u4e25\u8083\u7684\u540e\u52e4\u4e89\u5435\u3002\n\u4f46\u662f\uff0c\u5f53\u8be5\u9547\u901a\u5e38\u7684\u4ea4\u901a\u65b9\u5f0f\u88ab\u6270\u4e71\u65f6\uff0c\u8be5\u9547\u7684446\u540d\u5c45\u6c11\u53d1\u73b0\u81ea\u5df1\u6b63\u5904\u4e8e\u4e00\u573a\u6d41\u884c\u75c5\u4e4b\u4e2d\uff0c\u83b7\u5f97\u8d1f\u62c5\u5f97\u8d77\u7684\u98df\u7269\u7684\u673a\u4f1a\u51cf\u5c11\u4e86\u3002\n\u6709\u4e00\u4e2a\u4eba--\u9547\u4e0a\u7684\u6742\u8d27\u5546--\u51b3\u5b9a\u81ea\u5df1\u89e3\u51b3\u95ee\u9898\u3002\n\u4f4d\u4e8e\u51b0\u51b7\u7684\u6d77\u5ce1\u6cbf\u5cb838\u5e73\u65b9\u82f1\u91cc\u7684\u5e73\u539f\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u9a7c\u9e7f\u6bd4\u4eba\u591a\u7684\u5730\u65b9-\u5728\u8fd9\u91cc\u5d0e\u5c96\u7684\u6d77\u666f\u4e0e\u9ad8\u8038\u7684\u51b0\u5ddd\u3001\u94c1\u6749\u68ee\u6797\u548c\u957f\u6ee1\u8349\u7684\u5c0f\u5706\u4e18\u76f8\u9047\u3002\u5b83\u662f40\u79cd\u54fa\u4e73\u52a8\u7269\uff0c500\u79cd\u82d4\u85d3\uff0c\u6210\u7fa4\u7684\u5c0f\u732b\u5c3e\u5df4\u7684\u5bb6\u56ed\uff0c\u8fd8\u6709\u4e00\u6240\u53ea\u670954\u540d\u5b66\u751f\u7684K-12\u5b66\u6821\u3002\n\u8be5\u9547\u76f4\u52301985\u5e74\u624d\u6709\u7535\uff0c\u76f4\u523090\u5e74\u4ee3\u4e2d\u671f\u624d\u6709\u7535\u8bdd\u3002\u76f4\u5230\u4eca\u5929\uff0c\u6ca1\u6709\u4e00\u6761\u9053\u8def\u5c06\u5b83\u4e0e\u5916\u90e8\u4e16\u754c\u8fde\u63a5\u8d77\u6765\u3002\n\u201c\u4f60\u8981\u4e48\u98de\u8fc7\u6765\uff0c\u8981\u4e48\u5750\u8239\u8fc7\u6765\uff0c\u201d\u8be5\u9547\u5fd7\u613f\u9547\u957f\u5361\u5c14\u6587\u00b7\u5361\u897f\u76ae\u7279(Calvin Casipit)\u8bf4\u3002\u201c\u6bcf\u4e2a\u4eba\u90fd\u4ee5\u4e09\u56db\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u76f8\u4e92\u4e86\u89e3\u3002\u201d\n\u5b83\u7684\u5c45\u6c11-\u751f\u7269\u5b66\u5bb6\u3001\u9000\u4f11\u4eba\u5458\u548c\u5ba2\u6808\u8001\u677f\u7684\u6df7\u6742-\u4f4f\u5728\u540d\u4e3a\u683c\u4f26\u6c9f\u9053\u548c\u5a01\u5fb7\u52d2\u9c7c\u9053\u7684\u8857\u9053\u4e0a\uff0c\u6bcf\u5e74\u4e00\u6b21\u805a\u96c6\u57287\u67084\u65e5\u7684\u6e38\u884c\u4e2d\uff0c\u4ee5\u9f3b\u6d95\u866b\u6bd4\u8d5b\u548c\u4e00\u79cd\u540d\u4e3a\u9e21\u7caa\u5bbe\u679c\u7684\u6e38\u620f\u4e3a\u7279\u8272\u3002\n\u4f5c\u4e3a\u901a\u5f80\u51b0\u5ddd\u6e7e\u56fd\u5bb6\u516c\u56ed\u7684\u95e8\u6237\u57ce\u5e02\uff0c\u53e4\u65af\u5854\u592b\u65af\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u4e3a\u671f3\u4e2a\u6708\u7684\u590f\u5b63\u65c5\u6e38\u65fa\u5b63\uff0c\u5c4a\u65f6\u6210\u5343\u4e0a\u4e07\u7684\u65c5\u884c\u8005\u4f1a\u9884\u8ba2\u4f4f\u5bbf\u548c\u4f4f\u5bbf\u65e9\u9910\u3001\u9493\u9c7c\u65c5\u884c\u548c\u91ce\u751f\u52a8\u7269\u65c5\u6e38\u3002\u4f46\u7531\u4e8e\u516c\u56ed\u5173\u95ed\u52307\u67081\u65e5\uff0c\u4e16\u754c\u5927\u90e8\u5206\u5730\u533a\u4ecd\u5904\u4e8e\u5c01\u9501\u72b6\u6001\uff0c\u5f53\u5730\u7ecf\u6d4e\u9677\u5165\u56f0\u5883\u3002\n\u91d1\u4f2f\u00b7\u6b27\u6587(Kimber Owen)\u7ecf\u8425\u7740\u5305\u8239\u670d\u52a1\u6d77\u72fc\u63a2\u9669\u516c\u53f8(Sea Wolf Adenture)\uff0c\u4ed6\u5df2\u7ecf\u53d7\u5230\u4e8646\u4e07\u7f8e\u5143\u7684\u53d6\u6d88\u8ba2\u5355\u7684\u5f71\u54cd\u3002\u5728\u57ce\u9547\u5468\u56f4\uff0c\u53a8\u5e08\u3001\u730e\u718a\u5bfc\u6e38\u548c\u516c\u56ed\u62a4\u6797\u5458\u9759\u9759\u5730\u5750\u7740\u3002\u5c3d\u7ba1\u963f\u62c9\u65af\u52a0\u73b0\u5728\u5141\u8bb8\u67d0\u4e9b\u4f01\u4e1a\u91cd\u65b0\u5f00\u4e1a\uff0c\u4f46\u8bb8\u591a\u4f01\u4e1a\u9009\u62e9\u7ee7\u7eed\u5173\u95ed\u3002\n\u5361\u897f\u76ae\u7279\u8bf4\uff1a\u201c\u5728\u6211\u4eec\u660e\u5e74\u7684\u9884\u7b97\u4e2d\uff0c\u6211\u4eec\u4e0d\u6307\u671b\u6709\u4e00\u5927\u7b14\u9500\u552e\u7a0e\u6536\u5165\u3002\u201d\u201c\u6ca1\u4eba\u4f1a\u6765\u3002\u201d\n\u5728\u53e4\u65af\u5854\u592b\u65af\u897f\u90e8\u8fb9\u7f18\u7684\u4e00\u6761\u5c0f\u8857\u4e0a\uff0c\u4e00\u5757\u9713\u8679\u706f\u201c\u5f00\u653e\u201d\u7684\u724c\u5b50\u5728\u677e\u6811\u4e0b\u95ea\u8000\u7740\u660e\u4eae\u7684\u5149\u8292\u3002\n\u8fd9\u5ea7\u98ce\u5316\u7684\u6728\u7ed3\u6784\u5efa\u7b51\u662f\u8fd9\u4e2a\u4e0e\u4e16\u9694\u7edd\u7684\u793e\u533a\u7684\u751f\u547d\u7ebf\uff1a\u5728\u91cc\u9762\uff0c\u5f53\u5730\u5c45\u6c11\u53ef\u4ee5\u627e\u5230\u65b0\u9c9c\u7684\u519c\u4ea7\u54c1\u3001\u8089\u7c7b\u3001\u7f50\u5934\u98df\u54c1\u3001\u536b\u751f\u7eb8\u3001\u4e94\u91d1\u5236\u54c1\u3001\u6728\u6750\u3001\u5de5\u4f5c\u670d\u3001\u5ba0\u7269\u98df\u54c1\u548c\u4f53\u80b2\u7528\u54c1\u3002\u597d\u5e02\u591a(Costco)\u548c\u5bb6\u5f97\u5b9d(Home Depot)\u7684\u8ff7\u4f60\u6df7\u5408\u4f53\u4f3c\u4e4e\u5728\u8352\u65e0\u4eba\u70df\u7684\u5730\u65b9\u88ab\u53d6\u4ee3\u4e86\u3002\n\u5b83\u88ab\u79f0\u4e3a\u51b0\u6d77\u5ce1\u6279\u53d1\uff0c\u4f46\u5f53\u5730\u4eba\u5c06\u5176\u547d\u540d\u4e3aToshco-\u8fd9\u662f\u5e97\u4e3b\u540d\u5b57\u548c\u4ed6\u5927\u90e8\u5206\u5546\u54c1\u6765\u6e90\u7684\u8fde\u9501\u5e97\u7684\u7ec4\u5408\u3002\n\u5728\u5065\u5eb7\u5371\u673a\u671f\u95f4\uff0c\u4e1c\u829d\u516c\u53f8\u4ecd\u7136\u5728\u8fd0\u8425\uff0c\u5229\u7528\u5706\u9525\u4f53\u8fdb\u884c\u793e\u4ea4\u758f\u8fdc(\u8096\u6069\u00b7\u5c3c\u5c14\u68ee/\u51b0\u96ea\u6d77\u5ce1\u6279\u53d1\u516c\u53f8)\u3002\n\u6258\u8212\u4e9a\u00b7\u5e15\u514b(Toshua Parker)10\u5e74\u524d\u5f00\u4e86\u8fd9\u5bb6\u5e97\uff0c\u4ed6\u662f\u9547\u4e0a\u7684\u4f20\u5947\u4eba\u7269\uff1a\u4ed6\u7684\u66fe\u7956\u7236\u4e9a\u4f2f\u62c9\u7f55\u00b7\u6797\u80af\u00b7\u5e15\u514b(Abraham Lincoln Parker)\u57281917\u5e74\u662f\u8be5\u5730\u533a\u7b2c\u4e00\u4e2a\u6c38\u4e45\u7684\u519c\u573a\u4e3b\u3002\n\u5728\u5927\u8870\u9000\u540e\u5931\u53bb\u4e86\u4ed6\u5728\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u5546\u4e1a\u623f\u5730\u4ea7\u4e1a\u52a1\u540e\uff0c\u5f53\u65f630\u5c81\u7684\u5e15\u514b\u56de\u5230\u4e86\u4ed6\u957f\u5927\u7684\u5c0f\u9547\u3002\n\u5f53\u65f6\uff0c\u83b7\u5f97\u98df\u54c1\u6742\u8d27\u7684\u552f\u4e00\u9014\u5f84\u662f\u4e58\u5750\u79c1\u4eba\u9a73\u8239\u6216\u98de\u673a\u3002\u8fd9\u4f7f\u5f97\u5f53\u5730\u7684\u6742\u8d27\u5e97\u8d35\u5f97\u4ee4\u4eba\u671b\u800c\u5374\u6b65\uff1a\u5728\u6731\u8bfa\u552e\u4ef75\u7f8e\u5143\u7684\u4e00\u52a0\u4ed1\u725b\u5976\u5230\u8fbe\u53e4\u65af\u5854\u592b\u65af\u65f6\u552e\u4ef7\u4e3a12\u7f8e\u5143\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u8fd0\u9001\u5230\u90a3\u91cc\u7684\u540e\u52e4\u5de5\u4f5c\u3002\n\u5e15\u514b\u56de\u5fc6\u8bf4\uff1a\u201c\u5f53\u65f6\u7684\u5229\u6da6\u7a7a\u95f4\u5b9e\u5728\u592a\u5927\u4e86\u3002\u201d\u201c\u6211\u77e5\u9053\u4e00\u5b9a\u6709\u529e\u6cd5\u628a\u5de5\u4f5c\u505a\u5f97\u66f4\u597d\u3002\u201d\n\u5e15\u514b\u5728\u9547\u4e0a\u505a\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u51d1\u4e863000\u7f8e\u5143\uff0c\u7136\u540e\u5f00\u59cb\u4e58\u5750\u4e00\u8258\u56fd\u5bb6\u8865\u8d34\u7684\u6e21\u8f6e\u53bb\u6731\u8bfa\uff0c\u5728\u90a3\u91cc\u4ed6\u8d2d\u4e70\u4e86\u597d\u5e02\u591a\u7684\u5e93\u5b58\uff0c\u7136\u540e\u4ee5\u5f88\u5c0f\u7684\u52a0\u4ef7\u5728\u53e4\u65af\u5854\u592b\u65af\u8f6c\u552e\u3002\n\u968f\u7740\u5546\u5e97\u7684\u58ee\u5927\uff0c\u5e15\u514b\u548c\u4ed6\u7684\u7236\u4eb2\u521b\u529e\u4e86\u81ea\u5df1\u7684\u8d27\u8fd0\u516c\u53f8\uff0c\u8d2d\u4e70\u4e86\u9547\u4e0a\u7684\u52a0\u6cb9\u7ad9\uff0c\u5e76\u8d2d\u4e70\u4e86\u4e24\u8258\u81ea\u5df1\u7684\u8239\u53ea-\u4e00\u4efd30\u4e07\u7f8e\u5143\u7684\u201c\u4fdd\u9669\u5355\u201d\uff0c\u8ba9\u5e15\u514b\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u66f4\u4e25\u683c\u5730\u63a7\u5236\u4e86\u4f9b\u5e94\u94fe\u3002\n2019\u5e74\u51ac\u5929\uff0c\u963f\u62c9\u65af\u52a0\u7acb\u6cd5\u8005\u5207\u65ad\u4e86\u524d\u5f80\u53e4\u65af\u5854\u592b\u65af\u7684\u6e21\u8f6e\u670d\u52a1\u3002\u7136\u540e\uff0c\u5c31\u5728\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u7684\u65f6\u5019\uff0c\u9547\u4e0a\u552f\u4e00\u7684\u7801\u5934\u5173\u95ed\u8fdb\u884c\u4e86\u4e3a\u671f4\u4e2a\u6708\u7684\u7ef4\u4fee\u3002\u901a\u5e38\u7684\u5907\u7528\u9009\u62e9\u662f\u7a7a\u4e2d\u51fa\u79df\u8f66\uff0c\u5b83\u8fd0\u9001\u7684\u4efb\u4f55\u7269\u54c1\u90fd\u6536\u53d60.50\u7f8e\u5143/\u78c5\u7684\u8d39\u7528\u3002\u6309\u7167\u8fd9\u4e2a\u901f\u5ea6\uff0c\u8fd0\u9001\u4e00\u52a0\u4ed1\u725b\u5976\u7684\u6210\u672c\u5c06\u9ad8\u4e8e\u725b\u5976\u672c\u8eab\u7684\u4ef7\u683c\u3002\n\u201c\u963f\u62c9\u65af\u52a0\u4eba\u5df2\u7ecf\u4e60\u60ef\u4e86\u4e3a\u7834\u574f\u505a\u597d\u51c6\u5907\uff0c\u201d\u4e3a\u5305\u62ec\u53e4\u65af\u5854\u592b\u65af\u5728\u5185\u7684\u963f\u62c9\u65af\u52a0\u7b2c33\u533a\u670d\u52a1\u7684\u5dde\u4f17\u8bae\u5458\u8428\u62c9\u00b7\u6c49\u5357(Sara Hannan)\u8bf4\u3002\u201c\u4f46\u8fd9\u771f\u7684\u662f\u4e00\u573a\u5b8c\u7f8e\u7684\u98ce\u66b4", "note_en": "On a Tuesday afternoon in late April, a small barge set off from Gustavus, Alaska, en route to the world\u2019s most remote Costco warehouse.\n The 96-foot ship hummed through the choppy waters of the Icy Strait, past vast expanses of wilderness, snow-capped peaks, and breaching whales. Seven hours later, when it reached Juneau, a few intrepid men loaded its deck with $20k worth of eggs, flour, meat, canned goods, and produce.\n It returned to Gustavus in the twilight haze, like a bird bearing provisions for its chicks.\n Like many of America\u2019s rural and remote towns, Gustavus has an arduous supply chain. Even in good times, getting groceries to an isolated enclave in Southeastern Alaska requires some serious logistical wrangling.\n But when the town\u2019s usual transport methods were disrupted, its 446 residents found themselves in the midst of a pandemic with diminished access to affordable food.\n And one man \u2014 the town grocer \u2014 decided to take matters into his own hands.\n   Situated on a 38-square-mile plain along the Icy Strait, it is a place where moose  outnumber people \u2014 where rugged seascapes meet towering glaciers, hemlock forests, and grassy knolls. It is home to 40 mammal species, 500 varieties of moss, flocks of kittiwakes, and a K-12 school with just 54 students.\n The town had no electricity until 1985, and no phones until the mid-90s. To this day, no roads connect it to the outside world.\n   \u201cYou either gotta fly here or boat here,\u201d says Calvin Casipit, the town\u2019s volunteer mayor. \u201cAnd everybody knows each other in 3 or 4 different ways.\u201d\n Its residents \u2014 a m\u00e9lange of biologists, retirees, and innkeepers \u2014 live on streets named Glen\u2019s Ditch Road and Weedle Fish Drive, and gather once a year for a 4th of July parade featuring slug races and a game called Chicken Poop Bingo.\n As the gateway town to  Glacier Bay National Park, Gustavus is highly dependent on the 3-month summer tourism season, when thousands of travelers book bed &amp; breakfasts, fishing trips, and wildlife tours. But with the park closed until July 1 and much of the world still in lockdown, the local economy is in distress.\n Kimber Owen, who runs the charter boat service  Sea Wolf Adventures, has already suffered from $460k in cancellations. Around town, cooks, bear hunting guides, and park rangers sit dormant. Though certain businesses are now  permitted to reopen in Alaska, many are choosing to stay closed.\n \u201cIn our budgeting for the next year, we\u2019re not counting on a whole lot of sales tax income,\u201d says Casipit. \u201cNobody\u2019s coming.\u201d\n   On a side street on the Western edge of Gustavus, a neon \u201cOPEN\u201d sign shines brightly through the lodgepole pines.\n This weathered wood building is something of a lifeline for the isolated community: Inside, local residents can find fresh produce, meats, canned goods, toilet paper, hardware, lumber, work clothes, pet food, and sporting goods. It\u2019s as if a mini hybrid of Costco and Home Depot were supplanted in the middle of nowhere.\n It\u2019s called Ice Strait Wholesale, but locals have dubbed it Toshco \u2014 a combination of the owner\u2019s name and the chain from which he sources most of his goods.\n  During the health crisis, Toshco has remained in operation, utilizing cones for social distancing (Sean Neilson / Icy Strait Wholesale)\n Toshua Parker, who opened the store 10 years ago, is something of a legend around town: His great-grandfather, Abraham Lincoln Parker, was the area\u2019s first permanent homesteader back in 1917.\n After losing his Arizona-based commercial real estate business in the wake of the Great Recession, Parker, then 30, returned to the town he grew up in.\n At the time, the only way to get groceries was by private barge or plane. This made the local grocery store prohibitively expensive: A gallon of milk that sold for $5 in Juneau cost $12 by the time it arrived in Gustavus, largely due to the logistics of getting it there.\n \u201cThere was just so much margin,\u201d recalls Parker. \u201cAnd I knew there had to be a way to do a better job.\u201d\n Parker did some work around town, scrounged together $3k, and began taking a state-subsidized ferry to Juneau, where he bought Costco inventory to resell in Gustavus at a small markup.\n As the store grew, Parker and his father launched their own  freight company, purchased the town\u2019s gasoline station, and bought two of their own ships \u2014 a $300k \u201cinsurance policy\u201d that gave Parker tighter control over the supply chain in case of an emergency.\n    In the winter of 2019, Alaska legislators cut ferry service to Gustavus. Then, right at the onset of the coronavirus outbreak, the town\u2019s only dock closed for a 4-month repair. The usual fall-back option, an air taxi, charges $0.50/lb for any item it delivers. At that rate, the cost of delivering a gallon of milk would be more than the price of the milk itself.\n \u201cAlaskans are used to being prepared for disruption,\u201d says State Rep. Sara Hannan, who serves Alaska\u2019s 33rd District, which includes Gustavus. \u201cBut this was really a perfect storm of problems.\u201d\n  So, Parker loaded a few shipping crates onto his 96-foot barge and began making weekly pilgrimages across the Icy Strait, to the tiny Costco in Alaska\u2019s state capital.\n  Built in 1993 as an experiment to test smaller markets, the Juneau Costco is the smallest, both in size and scope, of the chain\u2019s 785 warehouses. It may also be one of the most critically important: Many of the isolated small towns in Southeastern Alaska rely on it for food items they otherwise wouldn\u2019t be able to get.\n \u201cThe small-market format doesn\u2019t really make sense for us anymore,\u201d Kevin Green, a VP at Costco, told  The Hustle. \u201cIn Juneau, though, it really works.\u201d\n Once per week, Parker takes a tally on what the residents of Gustavus need and makes the 7-hour journey to Juneau to stock up. Gauging demand \u2014 especially in a time of shortages \u2014 is tricky business.\n \u201cIt\u2019s an art form, not a science,\u201d says Parker. \u201cThe town might have a 100-gallon swing in demand for milk from one week to the next without any explanation of why. One week, nobody wants whole milk; the next week, everyone wants 2%.\u201d\n Toshco employees have been on the phone nonstop, taking down special orders from Gustavus residents \u2014 everything from washing machines to baking powder.\n Oftentimes, Parker maxes out on the rations Costco imposes at the store to protect against panic buying.\n \u201cWe\u2019ll place a $20k order, but they\u2019ll still only give us one pack of paper towels,\u201d he says. \u201cI understand why they\u2019d do that, but we\u2019re not a single person panic buying; we\u2019re trying to feed a whole community.\u201d\n  Top: The 7-hour one-way journey from Gustavus to Juneau (The Hustle / Bing Maps); Bottom: The Costco in Juneau, Alaska (Getty Images)\n  \u201cMost grocery stores you go to, you don\u2019t get to see the wholesale cost of what you\u2019re buying \u2014 you don\u2019t know what their margin is,\u201d says Parker. \u201cI can\u2019t mark something up 5x because they know exactly how much something costs at Costco.\u201d\n The average grocery store makes extremely thin margins (~ 2.2%) and makes money by turning over large volumes. Parker says his margins are even thinner \u2014 almost to the point of subsidizing the community \u2014 due to logistics.\n For example, he buys 24-packs of eggs at Costco for $4.50 and sells them in Gustavus for $7.99. That leaves just $3.50 to cover not just the costs of his grocery store (labor, refrigeration, stocking), but the 14-hour freight journey, fuel, loading, and other associated transportation costs.\n  For these things, Toshco uses secret suppliers as far away as Utah. Goods that can\u2019t be found at Costco are carted by truck up to Seattle, then to a freight warehouse in Kent, Washington, before making the journey to Juneau. From there, it\u2019s another 7-hour barge trip to Gustavus.\n \u201cThinking outside of the box [is] the secret to success,\u201d says Parker\u2019s father, Lee. \u201cYou start by brainstorming non-traditional sources \u2014 vendors that most folks may be surprised even have toilet paper in their inventory. Then you get on the phone and start calling everyone around the country until you find a place to buy a pallet.\u00a0 Some of Toshua\u2019s finds are brilliant. And because of that, Toshco has TP when the rest of the world has empty shelves.\u201d\n   The process can take many days \u2014 and one little misstep can impact the entire community of Gustavus.\n Several weeks ago, Parker couldn\u2019t find milk or eggs in Juneau, so he turned to his sources down south. He found a supplier in the lower 48, but by the time it got to Seattle it had missed the barge. The next ship out was a week later.\n Another time, a supplier forgot to include the meat in an order. They paid to send it by plane but bad weather delayed it for 3 days. By the time the meat arrived in Gustavus, it had all expired.\n \u201cYou have to think proactively,\u201d says Parker. \u201cBecause by the time there is a problem, it\u2019s way too late to fix it.\u201d\n  This story isn\u2019t unique to Gustavus: Around the country, rural and remote grocery stores are serving a critically important role for their communities during the coronavirus pandemic.\n David Procter, a professor at Kansas State University and director of its  Rural Grocery Initiative, has spent more than a decade studying the impact of grocery stores in communities with less than 2.5k residents.\n \u201cSmall town grocery stores are having kind of a renaissance because of COVID-19,\u201d he says. \u201cEveryone is stuck at home and buying locally.\u201d\n    They serve as economic centers: \u201cWhen someone spends $50 there, they are recirculating their income back into the town.\u201d\n They are typically the main provider of healthy food: \u201cWithout the grocery store, it\u2019s usually convenience stores with processed foods.\u201d\n They are community hubs: \u201cEveryone in town goes there, and they are, sometimes unintentionally, social gathering places.\u201d\n It is not uncommon for individuals like Parker to take things into their own hands when the one grocery store in town goes out of business, says Procter. But what makes Toshco unique is the extreme lengths its owner has gone to, recreating a complex supply chain from scratch to feed an entire town.\n Sean Neilson, a wildlife photography guide and 20-year Gustavus resident, frequents the store for the many eggs his two small children consume.\n \u201cGoing to Toshco to get a gallon of milk might take you 45 minutes,\u201d he says: \u201c4 minutes to drive there, 1 minute to get the milk out of the fridge, and 40 minutes to catch up with someone you bumped into.\u201d\n Justin Marchbanks, the owner of a local construction company, has relied on Parker\u2019s ship to bring in cement and girder beams he uses to build bridges. Ordinarily, he\u2019d have to pay up to $18k to rent out a landing craft for transport; Parker offers the service for a small fraction of that, based on weight.\n \u201cI just don\u2019t even know how he keeps things straight,\u201d Marchbanks says of Parker, who he grew up fishing with. \u201cThey\u2019re dealing with everything the town needs, from pallets full of flour to containers full of hardware. I don\u2019t know how they manage it all.\u201d\n  \u201cToshua pretty much saved the town,\u201d says Casipit. \u201cI really don\u2019t know what we would\u2019ve done without him.\u201d\n   When the barge pulled into Gustavus on a recent Wednesday, it was cause for celebration.\n \u201cIt\u2019s like Christmas when the load gets here,\u201d says Parker. \u201cEveryone is waiting for it. Word gets out, and they all seem to know when it\u2019s coming.\u201d\n This time, the shipment even included  flour \u2014 an item that is scarce in major metropolises with more robust supply networks. When Parker\u2019s parents, now living in Arizona, heard about the haul, they requested a bag by mail.\n \u201cThey can\u2019t get it, but up here we\u2019ve got a couple pallets,\u201d Parker says, with a chuckle. \u201cIn Alaska, we always find a way.\u201d\n Note:  Many of the images in this story were provided by Sean Neilson, a wildlife photography guide who lives in Gustavus. You can support his work by   buying prints  from his online store and following him on   Instagram .\n    When Gustavus, Alaska, was cut off from its grocery supply chain, one resident decided to take action. ...\n Read More\n The pilots of the \u201cQuest Diagnostics Air Force\u201d scramble while you\u2019re sleeping. ...\n Read More\n   Some new services could be just what parents need for keeping the kids occupied. ...\n Read More\n The ad business faces a crisis: How do you sell in such a strange time? ...\n Read More\n  Reports of a buying bonanza at a Hermes outpost in China sparked speculation about \u201crevenge buying.\u201d The trend may not hold water. ...\n Read More\n The twists and turns of the game\u2019s fictional market have captivated real-life analysts. ...\n Read More", "posttime": "2020-05-04 07:50:58", "tags": "costco,\u4e00\u8258\u8239,feeding,\u5e15\u514b,parker", "title": "\u4e00\u540d\u7537\u5b50\u7528\u4e00\u5f20\u597d\u5e02\u591a\u5361\u548c\u4e00\u8258\u8239\u5582\u9971\u4e86\u4e00\u4e2a\u504f\u8fdc\u7684\u963f\u62c9\u65af\u52a0\u5c0f\u9547", "title_en": "A man feeding a remote Alaska town with a Costco card and a ship", "transed": 1, "url": "https://thehustle.co/the-man-feeding-a-remote-alaska-town-with-a-costco-card-and-a-ship", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["costco", "\u4e00\u8258\u8239", "feeding", "\u5e15\u514b", "parker"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000542, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u5bfc\u822a\u8df3\u8f6c\u5728\u5bc6\u7801\u5b66\u4e2d\u641c\u7d22\uff0c\u5c31\u9910\u5bc6\u7801\u5b66\u5bb6\u95ee\u9898\u7814\u7a76\u5982\u4f55\u6267\u884c\u5e03\u5c14\u6216\u51fd\u6570\u7684\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3002David Chaum\u572820\u4e16\u7eaa80\u5e74\u4ee3\u521d\u9996\u6b21\u63d0\u51fa\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u7528\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u8bf4\u660e\u6027\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u53d1\u9001\u533f\u540d\u6d88\u606f\u662f\u53ef\u80fd\u7684\uff0c\u800c\u65e0\u6761\u4ef6\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u662f\u4e0d\u53ef\u8ffd\u8e2a\u7684\u3002\u57fa\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u533f\u540d\u901a\u4fe1\u7f51\u7edc\u901a\u5e38\u88ab\u79f0\u4e3aDC-net(\u5176\u4e2dDC\u4ee3\u8868\u9910\u996e.\u3002\n\u5c3d\u7ba1\u6709\u9910\u996e\u8fd9\u4e2a\u8bcd\uff0c\u4f46\u5c31\u9910\u5bc6\u7801\u5b66\u5bb6\u95ee\u9898\u4e0e\u5c31\u9910\u54f2\u5b66\u5bb6\u95ee\u9898\u65e0\u5173\u3002\n\u4e09\u4f4d\u5bc6\u7801\u4e13\u5bb6\u56f4\u5750\u5728\u4e00\u5f20\u684c\u5b50\u65c1\u5171\u8fdb\u665a\u9910\u3002\u670d\u52a1\u5458\u544a\u8bc9\u4ed6\u4eec\uff0c\u8fd9\u987f\u996d\u662f\u7531\u67d0\u4e2a\u4eba\u652f\u4ed8\u7684\uff0c\u8fd9\u4e2a\u4eba\u53ef\u80fd\u662f\u5bc6\u7801\u5b66\u5bb6\u4e4b\u4e00\uff0c\u4e5f\u53ef\u80fd\u662f\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(NSA)\u3002\u5bc6\u7801\u5b66\u5bb6\u4eec\u76f8\u4e92\u5c0a\u91cd\u5bf9\u65b9\u533f\u540d\u4ed8\u6b3e\u7684\u6743\u5229\uff0c\u4f46\u5e0c\u671b\u67e5\u660e\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u662f\u5426\u652f\u4ed8\u4e86\u8fd9\u7b14\u6b3e\u9879\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u51b3\u5b9a\u6267\u884c\u4e00\u4e2a\u5206\u4e24\u4e2a\u9636\u6bb5\u7684\u534f\u8bae\u3002\n\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u6bcf\u4e24\u4e2a\u5bc6\u7801\u5b66\u5bb6\u5efa\u7acb\u4e00\u4e2a\u5171\u4eab\u7684\u4e00\u4f4d\u79d8\u5bc6\uff0c\u6bd4\u65b9\u8bf4\uff0c\u901a\u8fc7\u5728\u83dc\u5355\u540e\u9762\u6254\u4e00\u679a\u786c\u5e01\uff0c\u8fd9\u6837\u6bcf\u4e24\u4e2a\u5bc6\u7801\u5b66\u5bb6\u53ea\u6709\u4e24\u4e2a\u5bc6\u7801\u5b66\u5bb6\u8f6e\u6d41\u770b\u5230\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5728\u63b7\u786c\u5e01\u4e4b\u540e\uff0c\u5bc6\u7801\u5b66\u5bb6A\u548cB\u5171\u4eab\u79d8\u5bc6\u6bd4\u72791{\\displaystyle 1}\uff0cA\u548cC\u5171\u4eab0{\\displaystyle 0}\uff0c\u5e76\u4e14B\u548cC\u5171\u4eab1{\\displaystyle 1}\u3002\n\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u652f\u4ed8\u9910\u8d39\uff0c\u4ed6\u4eec\u4e0e\u4e24\u4e2a\u90bb\u5c45\u5206\u4eab\u7684\u4e24\u4e2a\u6bd4\u7279\u7684\u5f02\u6216(XOR)\uff0c\n\u5047\u8bbe\u6ca1\u6709\u5bc6\u7801\u5e08\u4ed8\u8d39\uff0c\u5219A\u5ba3\u5e031DisplayStyle 0=1{\\\u22951\\Oplus 0=1}\uff0cB\u5ba3\u5e031DisplayStyle 1=0{\\DisplayStyle 1\\Oplus 1=0}\uff0cC\u5ba3\u5e030\u22951=1{\\DisplayStyle 0\\Oplus 1=1}\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679cA\u5df2\u652f\u4ed8\uff0c\u5219\u5979\u5ba3\u5e03-(1\u22950)=0{\\DisplayStyle\\lnot(1\\Oplus 0)=0}\u3002\n\u8fd9\u4e09\u4e2a\u516c\u5f00\u58f0\u660e\u52a0\u5728\u4e00\u8d77\u63ed\u793a\u4e86\u4ed6\u4eec\u95ee\u9898\u7684\u7b54\u6848\u3002\u7b80\u5355\u5730\u8ba1\u7b97\u5ba3\u5e03\u7684\u4e09\u4e2a\u6bd4\u7279\u7684\u5f02\u6216(XOR)\u3002\u5982\u679c\u7ed3\u679c\u4e3a0\uff0c\u5219\u610f\u5473\u7740\u6ca1\u6709\u5bc6\u7801\u5b66\u5bb6\u652f\u4ed8(\u56e0\u6b64NSA\u4e00\u5b9a\u5df2\u7ecf\u652f\u4ed8\u4e86\u8d26\u5355)\u3002\u5426\u5219\uff0c\u5176\u4e2d\u4e00\u4e2a\u5bc6\u7801\u5b66\u5bb6\u4ed8\u94b1\uff0c\u4f46\u5176\u4ed6\u5bc6\u7801\u5b66\u5bb6\u4ecd\u7136\u4e0d\u77e5\u9053\u4ed6\u4eec\u7684\u8eab\u4efd\u3002\nDC-NET\u534f\u8bae\u7b80\u5355\u7f8e\u89c2\u3002\u7136\u800c\uff0c\u5b83\u6709\u51e0\u4e2a\u9650\u5236\uff0c\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\u5df2\u7ecf\u5728\u540e\u7eed\u7814\u7a76\u4e2d\u8fdb\u884c\u4e86\u63a2\u7d22(\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u53c2\u8003\u8d44\u6599\u90e8\u5206)\u3002\n\u5982\u679c\u4e24\u4e2a\u5bc6\u7801\u5b66\u5bb6\u4e3a\u665a\u9910\u4e70\u5355\uff0c\u4ed6\u4eec\u7684\u6d88\u606f\u5c06\u76f8\u4e92\u62b5\u6d88\uff0c\u6700\u7ec8\u7684XOR\u7ed3\u679c\u5c06\u662f0{\\displaystyle 0}\u3002\u8fd9\u79f0\u4e3a\u51b2\u7a81\uff0c\u5e76\u4e14\u4f7f\u7528\u6b64\u534f\u8bae\u4e00\u6b21\u4ec5\u5141\u8bb8\u4e00\u4e2a\u53c2\u4e0e\u8005\u8fdb\u884c\u4f20\u8f93\u3002\u5728\u66f4\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u6709\u5076\u6570\u4e2a\u53c2\u4e0e\u8005\u53d1\u9001\u6d88\u606f\uff0c\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\u3002\n\u4efb\u4f55\u4e0d\u5e0c\u671b\u8be5\u7ec4\u6210\u529f\u901a\u4fe1\u7684\u6076\u610f\u5bc6\u7801\u5b66\u5bb6\u90fd\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u53d1\u9001\u968f\u673a\u4f4d\u800c\u4e0d\u662f\u6b63\u786e\u7684XOR\u7ed3\u679c\u6765\u963b\u585e\u534f\u8bae\uff0c\u4ece\u800c\u6700\u7ec8\u7684XOR\u7ed3\u679c\u662f\u65e0\u7528\u7684\u3002\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\uff0c\u539f\u59cb\u534f\u8bae\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u516c\u94a5\u6280\u672f\uff0c\u5e76\u4e14\u7f3a\u4e4f\u53ef\u9760\u7684\u673a\u5236\u6765\u68c0\u67e5\u53c2\u4e0e\u8005\u662f\u5426\u8bda\u5b9e\u5730\u9075\u5b88\u534f\u8bae\u3002[1]\u3002\n\u8be5\u534f\u8bae\u9700\u8981\u53c2\u4e0e\u8005\u4e4b\u95f4\u7684\u6210\u5bf9\u5171\u4eab\u5bc6\u94a5\uff0c\u5982\u679c\u53c2\u4e0e\u8005\u5f88\u591a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002\u6b64\u5916\uff0c\u867d\u7136DC-NET\u534f\u8bae\u662f\u65e0\u6761\u4ef6\u5b89\u5168\u7684\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u4f9d\u8d56\u4e8e\u8fd9\u6837\u7684\u5047\u8bbe\uff0c\u5373\u5728\u53c2\u4e0e\u8005\u5bf9\u4e4b\u95f4\u5df2\u7ecf\u5b58\u5728\u65e0\u6761\u4ef6\u5b89\u5168\u7684\u4fe1\u9053\uff0c\u8fd9\u5728\u5b9e\u8df5\u4e2d\u5e76\u4e0d\u5bb9\u6613\u5b9e\u73b0\u3002\n\u76f8\u5173\u7684\u533f\u540d\u5426\u51b3\u7f51\u7edc\u7b97\u6cd5\u8ba1\u7b97\u51e0\u4e2a\u7528\u6237\u8f93\u5165\u7684\u903b\u8f91OR\uff0c\u800c\u4e0d\u662f\u50cfDC\u7f51\u7edc\u4e2d\u90a3\u6837\u7684\u903b\u8f91XOR\uff0c\u8fd9\u5728\u903b\u8f91OR\u7ec4\u5408\u64cd\u4f5c\u81ea\u7136\u9002\u5408\u7684\u5e94\u7528\u4e2d\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002\n\u5468\u5927\u4f1f(David Chaum)\u572820\u4e16\u7eaa80\u5e74\u4ee3\u521d\u9996\u6b21\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u7b2c\u4e00\u672c\u6982\u8ff0\u57fa\u672c\u57fa\u672c\u601d\u60f3\u7684\u51fa\u7248\u7269\u662f\u4ed6\u7684\u3002[2]\u671f\u520a\u7248\u51fa\u73b0\u5728\u300a\u5bc6\u7801\u5b66\u6742\u5fd7\u300b\u7684\u7b2c\u4e00\u671f\u4e0a\u3002[3]\u3002\nDC\u7f51\u7edc\u5bb9\u6613\u88ab\u63a8\u5e7f\u4ee5\u5141\u8bb8\u6bcf\u8f6e\u591a\u4e8e1\u6bd4\u7279\u7684\u4f20\u8f93\uff0c\u5bf9\u4e8e\u5927\u4e8e\u4e09\u4e2a\u53c2\u4e0e\u8005\u7684\u7ec4\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u9664\u4e86\u4e8c\u8fdb\u5236\u65700\u548c1\u4e4b\u5916\u7684\u4efb\u610f\u5b57\u6bcd\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\n\u4e3a\u4e86\u4f7f\u533f\u540d\u53d1\u9001\u8005\u80fd\u591f\u5728\u6bcf\u4e00\u8f6eDC\u7f51\u7edc\u4e2d\u4f20\u8f93\u591a\u4e8e\u4e00\u4f4d\u7684\u4fe1\u606f\uff0c\u5bc6\u7801\u5b66\u5bb6\u7ec4\u53ef\u4ee5\u7b80\u5355\u5730\u91cd\u590d\u8be5\u534f\u8bae\u6240\u9700\u7684\u6b21\u6570\uff0c\u4ee5\u521b\u5efa\u6240\u9700\u4f4d\u6570\u7684\u4f20\u8f93\u5e26\u5bbd\u3002\u8fd9\u4e9b\u91cd\u590d\u4e0d\u9700\u8981\u8fde\u7eed\u6267\u884c\u3002\u5728\u5b9e\u9645\u7684DC-Net\u7cfb\u7edf\u4e2d\uff0c\u5178\u578b\u7684\u60c5\u51b5\u662f\u6210\u5bf9\u7684\u53c2\u4e0e\u8005\u4f7f\u7528Diffie-Hellman\uff0c\u9884\u5148\u5546\u5b9a\u4e00\u4e2a\u5171\u4eab\u7684\u4e3b\u79d8\u5bc6\u3002\n\u8be5\u534f\u8bae\u53ef\u4ee5\u63a8\u5e7f\u5230\u4e00\u7ec4n{\\displaystyle n}\u4e2a\u53c2\u4e0e\u8005\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u5177\u6709\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u5171\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002\u5728\u6bcf\u4e00\u8f6e\u534f\u8bae\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u6807\u51c6\u6746", "note_en": "Jump to navigation  Jump to search  In cryptography, the  dining cryptographers problem studies how to perform a  secure multi-party computation of the boolean-OR function.  David Chaum first proposed this problem in the early 1980s and used it as an illustrative example to show that it was possible to send anonymous messages with unconditional sender and recipient untraceability. Anonymous communication networks based on this problem are often referred to as  DC-nets(where DC stands for &#34;dining  ...\n Despite the word  dining, the dining cryptographers problem is unrelated to the  dining philosophers problem.\n    Three cryptographers gather around a table for dinner. The waiter informs them that the meal has been paid for by someone, who could be one of the cryptographers or the  National Security Agency (NSA). The cryptographers respect each other&#39;s right to make an anonymous payment, but want to find out whether the NSA paid. So they decide to execute a two-stage protocol.\n In the first stage, every two cryptographers establish a shared one-bit secret, say by tossing a coin behind a menu so that only two cryptographers see the outcome in turn for each two cryptographers. Suppose, for example, that after the coin tossing, cryptographer A and B share a secret bit            1    {\\displaystyle 1}  , A and C share            0    {\\displaystyle 0}  , and B and C share            1    {\\displaystyle 1}  .\n  if they didn&#39;t pay for the meal, the  exclusive OR (XOR) of the two shared bits they hold with their two neighbours,\n Supposing none of the cryptographers paid, then A announces            1  \u2295  0  =  1    {\\displaystyle 1\\oplus 0=1}  , B announces            1  \u2295  1  =  0    {\\displaystyle 1\\oplus 1=0}  , and C announces            0  \u2295  1  =  1    {\\displaystyle 0\\oplus 1=1}  . On the other hand, if A paid, she announces            \u00ac  (  1  \u2295  0  )  =  0    {\\displaystyle \\lnot (1\\oplus 0)=0}  .\n The three public announcements combined reveal the answer to their question. One simply computes the XOR of the three bits announced. If the result is 0, it implies that none of the cryptographers paid (so the NSA must have paid the bill). Otherwise, one of the cryptographers paid, but their identity remains unknown to the other cryptographers.\n   The DC-net protocol is simple and elegant. It has several limitations, however, some solutions to which have been explored in follow-up research (see the References section below).\n If two cryptographers paid for the dinner, their messages will cancel each other out, and the final XOR result will be            0    {\\displaystyle 0}  . This is called a collision and allows only one participant to transmit at a time using this protocol. In a more general case, a collision happens as long as any even number of participants send messages.\n Any malicious cryptographer who does not want the group to communicate successfully can jam the protocol so that the final XOR result is useless, simply by sending random bits instead of the correct result of the XOR. This problem occurs because the original protocol was designed without using any  public key technology and lacks reliable mechanisms to check whether participants honestly follow the protocol.  [1]\n The protocol requires pairwise shared secret keys between the participants, which may be problematic if there are many participants. Also, though the DC-net protocol is &#34;unconditionally secure&#34;, it actually depends on the assumption that &#34;unconditionally secure&#34; channels already exist between pairs of the participants, which is not easy to achieve in practice.\n A related  anonymous veto network algorithm computes the logical OR of several users&#39; inputs, rather than a logical XOR as in DC-nets, which may be useful in applications to which a logical OR combining operation is naturally suited.\n  David Chaum first thought about this problem in the early 1980s. The first publication that outlines the basic underlying ideas is his.  [2] The journal version appeared in the very first issue of the Journal of Cryptology.  [3]\n  DC-nets are readily generalized to allow for transmissions of more than one bit per round, for groups larger than three participants, and for arbitrary &#34;alphabets&#34; other than the binary digits 0 and 1, as described below.\n  To enable an anonymous sender to transmit more than one bit of information per DC-nets round, the group of cryptographers can simply repeat the protocol as many times as desired to create a desired number of bits worth of transmission bandwidth. These repetitions need not be performed serially. In practical DC-net systems, it is typical for pairs of participants to agree up-front on a single shared &#34;master&#34; secret, using  Diffie \u2013Hellman  ...\n  The protocol can be generalized to a group of            n    {\\displaystyle n}   participants, each with a shared secret key in common with each other participant. In each round of the protocol, if a participant wants to transmit an untraceable message to the group, they invert their publicly announced bit. The participants can be visualized as a  fully connected graphwith the vertices representing the participants and the edges representing  ...\n  The protocol may be run with less than fully connected secret sharing graphs, which can improve the performance and scalability of practical DC-net implementations, at the potential risk of reducing anonymity if colluding participants can split the secret sharing graph into separate connected components. For example, an intuitively appealing but less secure generalization to            n  &gt;  3    {\\displaystyle n&gt;3}  participants using  ...\n Another compromise secret sharing DC-net topology, employed in the  Dissent system for scalability,  [4] may be described as a  client/server or  user/trustee topology. In this variant, we assume there are two types of participants playing different roles: a potentially large number  n of users who desire anonymity, and a much smaller number            m    {\\displaystyle m}   of  trusteeswhose role is to help the users obtain that anonymity. In  ...\n  Though the simple DC-nets protocol uses  binary digits as its transmission alphabet, and uses the XOR operator to combine cipher texts, the basic protocol generalizes to any alphabet and combining operator suitable for  one-time padencryption. This flexibility arises naturally from the fact that the secrets shared between the many pairs of participants are, in effect, merely one-time pads combined together symmetrically within a single DC-net  ...\n One useful alternate choice of DC-nets alphabet and combining operator is to use a  finite group suitable for public-key cryptography as the alphabet\u2014such as a  Schnorr group or  elliptic curve\u2014and to use the associated group operator as the DC-net combining operator. Such a choice of alphabet and operator makes it possible for clients to use  zero-knowledge prooftechniques to prove correctness properties about the DC-net ciphertexts that  ...\n  The measure originally suggested by David Chaum to avoid collisions is to retransmit the message once a collision is detected, but the paper does not explain exactly how to arrange the retransmission.\n Dissent avoids the possibility of unintentional collisions by using a verifiable shuffle to establish a DC-nets transmission schedule, such that each participant knows exactly which bits in the schedule correspond to his own transmission slot, but does not know who owns other transmission slots.  [8]\n  Herbivore divides a large anonymity network into smaller DC-net groups, enabling participants to evade disruption attempts by leaving a disrupted group and joining another group, until the participant finds a group free of disruptors.  [9] This evasion approach introduces the risk that an adversary who owns many nodes could  selectively disrupt only groups the adversary has not  completelycompromised, thereby &#34;herding&#34; participants  ...\n Dissent implements several schemes to counter disruption. The original protocol  [8] used a verifiable  cryptographic shuffle to form a DC-net transmission schedule and distribute &#34;transmission assignments&#34;, allowing the correctness of subsequent DC-nets ciphertexts to be verified with a simple  cryptographic hashcheck. This technique required a fresh verifiable before every DC-nets round, however, leading to high latencies. A  ...\n  ^   David Chaum (1985).  &#34;Security without identification: transaction systems to make big brother obsolete&#34;  (PDF).  Communications of the ACM.  28 (10): 1030\u20131044.  CiteSeerX\u00a0  10.1.1.319.3690.  doi: 10.1145/4372.4373.\n  ^     a     b   David Isaac Wolinsky; Henry Corrigan-Gibbs; Bryan Ford; Aaron Johnson (October 8\u201310, 2012).   Dissent in Numbers: Making Strong Anonymity Scale. 10th USENIX Symposium on Operating Systems Design and Implementation (OSDI). Hollywood, CA, USA.\n ^   Philippe Golle; Ari Juels (May 2\u20136, 2004).   Dining Cryptographers Revisited  (PDF). Eurocrypt 2004. Interlaken, Switzerland.\n  ^     a     b   Henry Corrigan-Gibbs; David Isaac Wolinsky; Bryan Ford (August 14\u201316, 2013).   Proactively Accountable Anonymous Messaging in Verdict. 22nd USENIX Security Symposium. Washington, DC, USA.\n ^     a     b   Henry Corrigan-Gibbs; Bryan Ford (October 2010).   Dissent: Accountable Group Anonymity. 17th ACM Conference on Computer and Communications Security (CCS). Chicago, IL, USA. Archived from  the original on 2012-11-29 .\n ^   Emin G\u00fcn Sirer; Sharad Goel; Mark Robson; Do\u011fan Engin (September 19\u201322, 2004).   Eluding Carnivores: File Sharing with Strong Anonymity  (PDF). ACM SIGOPS European workshop. Leuven, Belgium.\n ^   Nikita Borisov; George Danezis; Prateek Mittal; Parisa Tabriz (October 2007).   Denial of Service or Denial of Security? How Attacks on Reliability can Compromise Anonymity  (PDF). ACM Conference on Computer and Communications Security (CCS). Alexandria, VA, USA.", "posttime": "2020-05-04 07:28:45", "tags": "\u5bc6\u7801,cryptographers,\u95ee\u9898,participants", "title": "\u9910\u996e\u5bc6\u7801\u5b66\u5bb6\u95ee\u9898", "title_en": "Dining Cryptographers Problem", "transed": 1, "url": "https://en.wikipedia.org/wiki/Dining_cryptographers_problem", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u5bc6\u7801", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000541, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4ed6\u5173\u4e8e\u4f7f\u7528AVX2\u8fdb\u884c\u6392\u5e8f\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u56db\u90e8\u5206\u4e2d\uff0c@Damageboy\u6709\u4e00\u4e2a\u7b80\u77ed\u7684\u8bf4\u660e\uff0c\u5373\u5728\u5c0f\u4e8e\u548c\u5927\u4e8e\u6216\u7b49\u4e8e\u900f\u89c6\u7684\u5143\u7d20\u5df2\u7ecf\u5904\u4e8e\u6b63\u786e\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u68c0\u6d4b\u5206\u533a(\u900f\u89c6)\u6a21\u5f0f\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5206\u533a\u4f8b\u7a0b\u4e0d\u9700\u8981\u6392\u5217\u503c\u5757\u3002\u5b9e\u9645\u7ec6\u8282\u4e0e\u672c\u6587\u65e0\u5173\uff1b\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5feb\u901f\u786e\u5b9a\u5b57\u8282\u503c\u662f\u5426\u4e0e\u4ee5\u4e0b9\u79cd\u60c5\u51b5\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u5339\u914d\uff1a\n\u770b\u4e00\u4e0b\u4f4d\u6a21\u5f0f\uff0c1\u64cd\u4f5c\u5458\u4f7f\u7528popcount\u548cbitscan\u7684\u89e3\u51b3\u65b9\u6848\u662f\u975e\u5e38\u81ea\u7136\u7684\u3002\u8fd9\u4e9b\u6307\u4ee4\u6709\u4e9b\u590d\u6742(\u5ef6\u8fdf\u66f4\u63a5\u8fd13\u4e2a\u5468\u671f\uff0c\u800c\u4e0d\u662f1\u4e2a\u5468\u671f\uff0c\u800c\u4e14\u901a\u5e38\u7aef\u53e3\u53d7\u9650)\uff0c\u4f3c\u4e4e\u662f\u90a3\u79cd\u5728SSE4\u6700\u7ec8\u4e3ax86\u6dfb\u52a0\u4e86\u4eba\u53e3\u8ba1\u6570\u6307\u4ee4\u4e4b\u524d\u5c31\u6709\u4e86\u6709\u6548\u89e3\u51b3\u65b9\u6848\u7684\u95ee\u9898\u3002\n\u5728\u6392\u5e8f\u5e93\u7684\u5206\u533a\u5faa\u73af\u4e0a\u4e0b\u6587\u4e2d\uff0cpopcnt\u548cbsf\u53ef\u80fd\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff1aPOST\u663e\u793a\u771f\u6b63\u7684\u95ee\u9898\u662f\u5206\u652f\u9519\u8bef\u9884\u6d4b\u6bd4\u65e0\u6761\u4ef6\u7f6e\u6362\u6162\u3002\n\u5c31popcountor\u4f4d\u626b\u63cf\u800c\u8a00\uff0c\u68c0\u6d4b\u673a\u5668\u6574\u6570\u662f\u5426\u4e3a2(\u62160)\u7684\u5e42\u662f\u53e6\u4e00\u9879\u5177\u6709\u7b80\u5355\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u7ecf\u5178\u89e3\u51b3\u65b9\u6848\uff1a\n\u8fd9\u4e2a\u8868\u8fbe\u662f\u600e\u4e48\u7528\u7684\uff1f\u5047\u8bbex\u662f2\u7684\u5e42\u3002\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f0b0.010.0\uff1a\u4efb\u610f\u6570\u91cf\u7684\u524d\u5bfc\u96f6\u30012\u5355\u4e2a\u201c1\u201d\u4f4d\u548c\u5c3e\u968f\u96f6(\u53ef\u80fd\u6ca1\u6709)\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5f53\u6211\u4eec\u4ecex\u4e2d\u51cf\u53bb1\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n\u51cf\u6cd5\u5f15\u53d1\u4e86\u6574\u4e2a\u5c3e\u968f\u96f6\u7684\u501f\u7528\u94fe\uff0c\u76f4\u5230\u6211\u4eec\u6700\u7ec8\u8fbe\u52301\u4f4d\u3002\u5728\u5341\u8fdb\u5236\u6570\u4e2d\uff0c\u4ece10.0\u51cf\u53bb1\u5f97\u523009.9\uff1b\u800c\u5728\u4e8c\u8fdb\u5236\u4e2d\uff0c\u6211\u4eec\u5f97\u523001.1\u3002\u5982\u679c\u4f60\u7814\u7a76\u8fc7\u8fdb\u4f4d\u94fe\u7684\u7535\u8def\u6df1\u5ea6(\u5ef6\u8fdf)(\u5bf9\u6211\u6765\u8bf4\uff0c\u90a3\u662f\u4e3a\u4e86\u7535\u8def\u590d\u6742\u6027\u7406\u8bba)\uff0c\u4f60\u5c31\u77e5\u9053\u8fd9\u5f88\u96be\u505a\u5230\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u82af\u7247\u5236\u9020\u5546\u52aa\u529b\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fdb\u4f4d\u4f5c\u4e3a\u6570\u636e\u63a7\u5236\u7684\u539f\u8bed\uff0c\u6709\u6548\u5730\u7ffb\u8f6c\u8303\u56f4\u3002(\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u5f88\u96be\u505a\u5230\u7684)\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u82af\u7247\u5236\u9020\u5546\u52aa\u529b\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fdb\u4f4d\u4f5c\u4e3a\u6570\u636e\u63a7\u5236\u7684\u539f\u8bed\uff0c\u6709\u6548\u5730\u7ffb\u8f6c\u8303\u56f4\u3002\n\u5f53x\u662f2\u7684\u5e42\u65f6\uff0cx\u548cx-1\u6ca1\u6709\u5171\u540c\u7684\u201c1\u201d\u4f4d\uff0c\u56e0\u6b64\u6309\u4f4d\u53d6\u6570\u5e76\u4ea7\u751f\u96f6\u3002\u5f53x\u4e3a0\u65f6\u4e5f\u662f\u5982\u6b64\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e0e0\u7684AND\u90fd\u4f1a\u5f97\u52300\u3002\u8ba9\u6211\u4eec\u770b\u770b\u975e\u96f6\u3001\u975e\u4e8c\u6b21\u5e42\u7684\u503cx=0bxx..xx10..0\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u4e2dx\u7531\u4efb\u610f\u975e\u96f6\u4f4d\u5e8f\u5217xx..xx\u540e\u8ddf\u6700\u5c0f\u8bbe\u7f6e\u7684\u4f4d(\u81f3\u5c11\u6709\u4e00\u4e2a\uff0c\u56e0\u4e3ax\u65e2\u4e0d\u662f0\u4e5f\u4e0d\u662f2\u7684\u5e42)\u548c\u5c3e\u968f\u7684\u96f6\u7ec4\u6210\uff1a\n\u524d\u5bfc\u7684\u975e\u5168\u96f60bxx.xx\u4e0d\u53d7\u51cf\u6cd5\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u5b83\u901a\u8fc7\u9010\u4f4d\u4e14\u6beb\u53d1\u65e0\u635f(\u5c06\u4efb\u4f55\u4f4d\u4e0e\u81ea\u8eab\u8fdb\u884cAND\u8fd0\u7b97\u4ea7\u751f\u76f8\u540c\u7684\u4f4d)\uff0c\u5e76\u4e14\u6211\u4eec\u77e5\u9053\u5176\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u975e\u96f6\u4f4d\uff1b\u6211\u4eec\u7684\u6d4b\u8bd5\u6b63\u786e\u5730\u62d2\u7edd\u4e86\u5b83\uff01\n\u5f53\u89e3\u7801ULEB\u683c\u5f0f\u7684\u53ef\u53d8\u957f\u5ea6\u6574\u6570\u65f6\uff0c\u4f8b\u5982\u5bf9\u4e8e\u534f\u8bae\u7f13\u51b2\u5668\uff0c\u5f88\u5feb\u5c31\u4f1a\u6e05\u695a\u7684\u662f\uff0c\u4e3a\u4e86\u907f\u514d\u4e00\u6b21\u4e00\u4e2a\u5b57\u8282\u7684\u903b\u8f91\uff0c\u6211\u4eec\u5fc5\u987b\u5feb\u901f\u5206\u5272(LEX\u6216\u6807\u8bb0\u5316\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u6211\u4eec\u7684\u5b57\u8282\u6d41\uff0c\u4ee5\u786e\u5b9a\u6bcf\u4e2aULEBend\u5728\u54ea\u91cc\u7ed3\u675f\u3002\u8ba9\u6211\u4eec\u5173\u6ce8\u5feb\u901f\u8def\u5f84\uff0c\u5f53\u7f16\u7801\u7684ULEB\u9002\u5408\u673a\u5668\u5bc4\u5b58\u5668\u65f6\u3002\n\u6211\u4eec\u6709uleb=0bnnnnnnnnmmmmmm.0zzzzzzz1yyyyyyy1.\uff1a\u4e00\u4e2a\u5b57\u8282\u5e8f\u52173\uff0c\u6700\u9ad8\u4f4d\u7b49\u4e8e1\uff0c\u4ee5\u6700\u9ad8\u4f4d\u8bbe\u7f6e\u4e3a0\u7684\u5b57\u8282\u7ed3\u675f\uff0c\u6700\u540e\u662f\u4efb\u610f\u9ebb\u70e6\u5b57\u8282(m.m\uff0cn.n\u7b49)\u3002\u6211\u4eec\u5e0c\u671b\u5ffd\u7565\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u63d0\u53d6\u6570\u636e=0b0000000000000000.\uff1fzzzzz\uff1fyyyyyy\uff1f.\u3002from uleb\uff1a\u6211\u4eec\u5e0c\u671b\u6e05\u9664uisance\u5b57\u8282\uff0c\u5e76\u4e14\u53ef\u4ee5\u63a5\u53d7ULEB\u63a7\u5236\u4f4d\u4e2d\u7684\u4efb\u610f\u503c\u3002\n\u67e5\u627e\u8bbe\u7f6e\u4e3a1\u7684\u4f4d\u8981\u6bd4\u627e\u5230\u8bbe\u7f6e\u4e3a0\u7684\u4f4d\u5bb9\u6613\u5f97\u591a\uff0c\u56e0\u6b64\u9996\u5148\u8981\u505a\u7684\u662f\u5bf9ULEB\u6570\u636e\u8fdb\u884c\u8865\u7801\uff0c\u5e76\u6e05\u9664\u9664\u6f5c\u5728\u7684ULEB\u63a7\u5236\u4f4d(\u6bcf\u4e2a\u5b57\u8282\u7684\u9ad8\u4f4d)\u4e4b\u5916\u7684\u6240\u6709\u4f4d\uff0cc=~uleb&amp\uff1b(128*(word_max/255))\uff0c\u5373\uff0c\u4f7f\u7528\u6bcf\u4e2a\u5b57\u8282\u4e2d\u9ad8\u4f4d\u7684\u4f4d\u63a9\u7801\u8ba1\u7b97~uleb\u7684\u9010\u4f4d\u4e0e\u3002\nuleb=0bnnnnnnnmmmmmm.0zzzzz1yyyyyy1.\u3002~ULEB=0b\u0305n\u0305m\u0305.1z\u0305z\u0305z0y\u0305y\u0305y0.\u3002C=0b\u0305n\u03050000000\u0305m\u03050000000.10000000000000000.\u3002\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4f4d\u626b\u63cf\u627e\u5230\u7b2c\u4e00\u4e2a1\u7684\u7d22\u5f15(\u6807\u8bb0\u6700\u540e\u4e00\u4e2aULEB\u5b57\u8282)\uff0c\u7136\u540e\u751f\u6210\u63a9\u7801\u3002\u7136\u800c\uff0c\u4f7f\u7528\u626b\u63cf\u751f\u6210\u7d22\u5f15\uff0c\u800c\u53ea\u4f7f\u7528\u79fb\u4f4d\u5c06\u5176\u8f6c\u6362\u56de\u4f4d\u56fe\u7a7a\u95f4\u4f3c\u4e4e\u662f\u6d6a\u8d39\u7684\u3002\u6211\u4eec\u53ef\u80fd\u4ecd\u7136\u5e0c\u671b\u8be5\u7d22\u5f15\u77e5\u9053\u89e3\u7801\u5668\u7684\u5149\u6807\u524d\u8fdb\u4e86\u591a\u8fdc\uff0c\u4f46\u6211\u4eec\u6709\u671b\u5728\u89e3\u7801\u5f53\u524dULEB\u503c\u7684\u540c\u65f6\u66f4\u65b0\u6e38\u6807\u3002\n\u5f53\u6211\u4eec\u8bd5\u56fe\u68c0\u6d4b2\u7684\u5e42\u65f6\uff0c\u6211\u4eec\u4ecex\u4e2d\u51cf\u53bb1\uff0c\u7c7b\u4f3c\u4e8ec\u7684\u503c\uff0c\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u503c\uff0c\u8be5\u503c\u5728x\u7684\u7b2c\u4e00\u7ec4(\u7b49\u4e8e1)\u4f4d\u4e4b\u524d\u7684\u6240\u6709\u4f4d\u4e0a\u90fd\u4e0ex\u4e0d\u540c\uff0c\u800c\u5728\u5176\u4f59\u4f4d\u4e0a\u76f8\u540c\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528\u4e0e\u81ea\u8eab\u8fdb\u884cAND\u8fd0\u7b97\u4ea7\u751f\u76f8\u540c\u6bd4\u7279\u7684\u4e8b\u5b9e\u6765\u68c0\u6d4b\u4f59\u6570\u4e2d\u662f\u5426\u6709\u4efb\u4f55\u975e\u96f6\u6bd4\u7279\u3002\n\u8fd9\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u5bf9\u5269\u4f59\u7684\u672a\u63a5\u89e6\u4f4d\u505a\u4e00\u4e9b\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5b83\u4eec\u5168\u90e8\u8bbe\u7f6e\u4e3a\u96f6\u3002\u53e6\u4e00\u4e2a\u6309\u4f4d\u8fd0\u7b97\u7b26\u6267\u884c\u6211\u4eec\u60f3\u8981\u7684\u64cd\u4f5c\uff1a\u5c06\u4f4d\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u59cb\u7ec8\u4ea7\u751f\u96f6\uff0c\u800c", "note_en": "In the  fourth installment of his series on sorting with AVX2, @damageboy has a short aside where hetries to detect partitioning (pivot) patterns where elements less thanand greater than or equal to the pivot are already in the correctorder: in that case, the partitioning routine does not need to permutethe block of values. The practical details are irrelevant for thispost; what matters is that we wish to quickly identify whether a bytevalue matches any of the follow nine cases:\n  Looking at the bit patterns,  1 the OP\u2019s solution with  popcount and  bitscanis pretty natural. These instructions are somewhat complex (latencycloser to 3 cycles than 1, and often port restricted),and it seems like the sort of problem that would have had efficientsolutions before SSE4 finally graced x86 with a  population count instruction.\n In the context of a sorting library\u2019s partition loop,  popcnt and bsf is probably more than good enough: the post shows that the real issue is branch mispredictionsbeing slower than permuting unconditionally.This is just a fun challenge to think about (:\n  Detecting whether a machine integer is a power of two (or zero) isanother task that has a straightforward solution in terms of popcountor bitscan. There\u2019s also a simpler classic solution to this problem:\n  How does that expression work? Say  x is a power of two. Its binaryrepresentation is  0b0...010...0: any number of leading zeros,  2a single \u201c1\u201d bit, and trailing zeros (maybe none). Let\u2019s see what happens whenwe subtract 1 from  x:\n  The subtraction triggered a chain of  borrowsthroughout the trailing zeros, until we finally hit that 1 bit.In decimal, subtracting one from  10...0 yields  09...9;in binary we instead find  01...1.If you ever studied the circuit depth (latency) of carry chains(for me, that was for circuit complexity theory), you knowthat this is difficult to do well.Luckily for us,  chip makers work hard to pull it off,and we can just use carries as a data-controlledprimitive to efficiently flip ranges of bits.\n When  x is a power of two,  x and  x - 1 have no \u201c1\u201d bit in common,so taking the bitwise  and yields zero. That\u2019s also true when  x is 0,since  anding anything with 0 yields zero. Let\u2019s see what happensfor non-zero, non-power-of-two values  x = 0bxx...xx10..0,i.e., where  x consists of an arbitrary non-zero sequence of bits  xx..xxfollowed by the least set bit (there\u2019s at least one, since  x is neither zero nor a power of two), and the trailing zeros:\n  The leading not-all-zero  0bxx...xx is unaffected by the subtraction,so it passes through the bitwise  and unscathed ( anding any bit withitself yields that same bit), and we know there\u2019s at least one non-zerobit in there; our test correctly rejects it!\n  When decoding variable length integers in  ULEBformat, e.g., for  protocol buffers,it quickly becomes clear that, in order to avoid byte-at-a-time logic,we must rapidly segment ( lex or tokenize, in a way) our byte stream to determine where each ULEBends. Let\u2019s focus on the fast path, when the encoded ULEB fits in amachine register.\n We have  uleb = 0bnnnnnnnnmmmmmmmm...0zzzzzzz1yyyyyyy1...:a sequence of bytes  3 with the topmost bit equal to 1,terminated by a byte with the top bit set to 0,and, finally, arbitrary nuisance bytes ( m...m,  n...n, etc.) we wish to ignore.Ideally, we\u2019d extract  data = 0b0000000000000000...?zzzzzzz?yyyyyyy?... from  uleb: we want to clear thenuisance bytes, and are fine with arbitrary values in theULEB\u2019s control bits.\n It\u2019s much easier to find bits set to 1 than to zero, so the first thing to do isto complement the  ULEB data andclear out everything but potential ULEB control bits (the high bit ofeach byte), with  c = ~uleb &amp; (128 * (WORD_MAX / 255)), i.e.,compute the bitwise  and of  ~uleb with a bitmask of the high bit in each byte.\n uleb = 0bnnnnnnnnmmmmmmmm...0zzzzzzz1yyyyyyy1... ~uleb = 0b\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305...1z\u0305z\u0305z\u0305z\u0305z\u0305z\u0305z0y\u0305y\u0305y\u0305y\u0305y\u0305y\u0305y0... c = 0b\u0305n\u03050000000\u0305m\u03050000000...10000000000000000...\n We could now bitscan to find the index of the first 1 (marking thelast ULEB byte), and then generate a mask. However, it seems wasteful togenerate an index with a scan, only to convert it back into bitmapspace with a shift. We\u2019ll probably still want that index to know howfar to advance the decoder\u2019s cursor, but we can hopefully update thecursor in parallel with decoding the current ULEB value.\n When we were trying to detect powers of two, we subtracted  1 from x, a value kind of like  c, in order to generate a new valuethat differed from  x in all the bits up to and including the firstset (equal to  1) bit of  x, and identical in the remaining bits. Wethen used the fact that  anding a bit with itself yields that samebit to detect whether there was any non-zero bit in the remainder.\n Here, we wish to do something else with the remaining untouched bits, wewish to set them all to zero. Another bitwise operator doeswhat we want:  xoring a bit with itself always yields zero, while xoring bits that differ yields  1. That\u2019s the plan for ULEB. We\u2019llsubtract 1 from  c and  xor that back with  c.\n uleb = 0bnnnnnnnnmmmmmmmm...0zzzzzzz1yyyyyyy1... ~uleb = 0b\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305n\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305m\u0305...1z\u0305z\u0305z\u0305z\u0305z\u0305z\u0305z0y\u0305y\u0305y\u0305y\u0305y\u0305y\u0305y0...c = 0b\u0305n\u03050000000\u0305m\u03050000000...10000000000000000... c - 1 = 0b\u0305n\u03050000000\u0305m\u03050000000...01111111111111111...c ^ (c - 1) = 0b0000000000000000...11111111111111111...\n We now just have to bitwise  and  uleb with  c ^ (c - 1)to obtain the bits of the first  ULEB value in  uleb, whileoverwriting everything else with 0. Once we have that, we can either extract data bits with  PEXTon recent Intel chips, or otherwise dust off interesting stunts for  SWAR shifts by variable amounts.\n  Let\u2019s first repeat the question that motivated this post. We want to detect when a byte  p is one of the following nine values:\n  These bit patterns feel similar to those for power of two bytes: if wecomplement the bits, these values are all 1 less than a power of two(or -1, one less than zero). We already know how to detect when avalue  x is zero or a power of two ( x &amp; (x - 1) == 0), so it\u2019s easyto instead determine whether  ~p is one less than zero or a power oftwo:  (~p + 1) &amp; ~p == 0.\n This is already pretty good: bitwise  not the byte  p,and check if it\u2019s one less than zero or a power of two (three simpleinstructions on the critical path). We can do better.\n There\u2019s another name for  ~p + 1, i.e., for bitwise complementing a value andadding one: that\u2019s simply  -p, the additive inverse of  p in two\u2019scomplement! We can use  -p &amp; ~p == 0. That\u2019s one fewerinstruction on the critical path of our dependency graph (down to two, since we can   test whether  anding yields zero), and still onlyuses simple instructions that are unlikely to be port constrained.\n  CL-USER&gt; (dotimes (p 256) (when (zerop (logand (- p) (lognot p) 255)) (format t &#34;0b~2,8,&#39;0r~%&#34; p)))0b000000000b100000000b110000000b111000000b111100000b111110000b111111000b111111100b11111111\n   I hope the examples above communicated a pattern I often observe whenmangling bits: operations that are annoying (not hard, just a bit morecomplex than we \u2019d like) in the bitmap domain can be simpler in two \u2019scomplement arithmetic. Arithmetic operations are powerful mutatorsfor bitmaps, but they \u2019re often hard to control. Subtracting or adding1 are the main exceptions: it \u2019s easy to describe their impact in termsof the low bits of the bitmap. In fact, we can extend that trick  ...\n If you find yourself wishing for a way to flip ranges of bits in adata-dependent fashion, it\u2019s always worth considering the two\u2019scomplement representation of the problem for a couple minutes. Addingor subtracting powers of two doesn\u2019t always work, but the payoff ispretty good when it does.\n P.S.,  Wojciech Mu\u0142a offers a different 3-operation sequence with  -pto solve damageboy\u2019s problem.That\u2019s another nice primitive to generate bitmasks dynamically.\n   I use the  0b... syntax throughout this post to denote bit literals, similarly to the usual  0x... hexadecimal literals.\u00a0 \u21a9\n While I prefer to work with little-endian bytes, I find everything makes more sense with big-endian bits.\u00a0 \u21a9", "posttime": "2020-05-04 07:28:40", "tags": "\u68c0\u67e5,borrows,uleb,bits", "title": "\u68c0\u67e5\u6309\u4f4d\u64cd\u4f5c\u4e2d\u7684\u501f\u7528", "title_en": "Check for borrows in bitwise operations", "transed": 1, "url": "https://pvk.ca/Blog/2020/05/02/check-for-borrows-in-bitwise-operations/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u68c0\u67e5", "borrows", "uleb", "bits"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000540, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5728\u75be\u63a7\u4e2d\u5fc3\u7684\u7f51\u7ad9\u4e0a\u50f5\u5c38\u3001\u50f5\u5c38\u542f\u793a\u5f55\u548c\u50f5\u5c38\u51c6\u5907\u7ee7\u7eed\u6d3b\u7740\u6216\u8d70\u6b7b\u5417\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6700\u521d\u662f\u4e00\u4e2a\u5f00\u73a9\u7b11\u7684\u6d3b\u52a8\uff0c\u76ee\u7684\u662f\u7528\u51c6\u5907\u4fe1\u606f\u5438\u5f15\u65b0\u7684\u53d7\u4f17\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u6548\u7684\u5e73\u53f0\u3002\u6211\u4eec\u7ee7\u7eed\u901a\u8fc7\u201c\u50f5\u5c38\u9632\u5907\u201d\u63a5\u89e6\u5230\u5404\u79cd\u4e0d\u540c\u7684\u53d7\u4f17\uff0c\u5e76\u8ba9\u4ed6\u4eec\u53c2\u4e0e\u5230\u6240\u6709\u707e\u5bb3\u7684\u9632\u5907\u4e2d\u6765\u3002\n\u5916\u9762\u6709\u5404\u79cd\u5404\u6837\u7684\u7d27\u6025\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u597d\u51c6\u5907\u3002\u4ee5\u50f5\u5c38\u542f\u793a\u5f55\u4e3a\u4f8b\u3002\n\u5e0c\u671b\u5728\u8bfe\u5802\u4e0a\u6559\u6388\u51c6\u5907\u5de5\u4f5c\u5417\uff1f\u6211\u4eec\u6709\u5b8c\u6574\u7684\u8bfe\u7a0b\u8ba1\u5212\u548c\u6d3b\u52a8\u4f9b\u60a8\u4f7f\u7528\u6216\u9002\u5e94\u60a8\u7684\u5b66\u751f\u3002\n\u5728\u707e\u96be\u6765\u88ad\u4e4b\u524d\uff0c\u8ba9\u4eba\u4eec\u8003\u8651\u5e94\u6025\u51c6\u5907\u53ef\u80fd\u5f88\u56f0\u96be\u3002\u6211\u4eec\u5236\u4f5c\u8fd9\u4e9b\u50f5\u5c38\u6d77\u62a5\u662f\u4e3a\u4e86\u5f15\u8d77\u4e00\u4e9b\u5173\u6ce8\uff0c\u5e76\u5728\u4e3a\u65f6\u5df2\u665a\u4e4b\u524d\u8ba9\u4eba\u4eec\u53c2\u4e0e\u8fdb\u6765\u3002\u4e0b\u8f7dpdf\u4ee5\u4fbf\u4e3a\u60a8\u7684\u529e\u516c\u5ba4\u6216\u5bb6\u5ead\u6253\u5370\u526f\u672c\u3002\u82f1\u6587CDC-pdf[PDF-27MB]|\u897f\u73ed\u7259\u8bedCDC-pdf[PDF-2 MB]\u3002\n\u6b63\u5728\u5bfb\u627e\u4e00\u79cd\u6709\u8da3\u7684\u65b9\u5f0f\u6765\u4ecb\u7ecd\u5e94\u6025\u51c6\u5907\u5417\uff1f\u8bf7\u770b\u6211\u4eec\u7684\u6f2b\u753b\u4e2d\u7bc7\u5c0f\u8bf4\uff0c\u5b83\u4f7f\u7528\u50f5\u5c38\u542f\u793a\u5f55\u7684\u60f3\u6cd5\u6765\u8bc1\u660e\u51c6\u5907\u5de5\u4f5c\u7684\u91cd\u8981\u6027\u3002\u5176\u4e2d\u5305\u62ec\u4e00\u4efd\u4e2a\u4eba\u51c6\u5907\u6838\u5bf9\u8868\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u9605\u8bfb\u5b8c\u6bd5\u540e\u91c7\u53d6\u884c\u52a8\u3002\n\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u50f5\u5c38\u793e\u4ea4\u5a92\u4f53\u9875\u9762\uff0c\u5728\u90a3\u91cc\u60a8\u53ef\u4ee5\u627e\u5230\u60a8\u81ea\u5df1\u7f51\u7ad9\u7684\u5fbd\u7ae0\u548c\u5c0f\u5de5\u5177\u3001\u6211\u4eec\u535a\u5ba2\u7684\u94fe\u63a5\u3001\u5185\u5bb9\u8f9b\u8fea\u52a0\u548c\u50f5\u5c38\u7535\u5b50\u5361\u7247\u3002", "note_en": "Wonder why zombies, zombie apocalypse, and zombie preparedness continue to live or walk dead on a CDC web site? As it turns out what first began as a tongue-in-cheek campaign to engage new audiences with preparedness messages has proven to be a very effective platform. We continue to reach and engage a wide variety of audiences on all hazards preparedness via \u201czombie preparedness\u201d.\n   There are all kinds of emergencies out there that we can prepare for. Take a zombie apocalypse for example.\n Looking to teach preparedness in the classroom? We\u2019ve got full lesson plans and activities for you to use or adapt with your students.\n It can be tough to get people thinking about emergency preparedness before disaster strikes. We\u2019ve created these zombie posters to spark some attention and get people involved before it\u2019s too late. Download the pdf to print copies for your office or home.\u00a0 English  Cdc-pdf   [PDF \u2013 27 MB] |  Espa\u00f1ol  Cdc-pdf   [PDF \u2013 2 MB]\n Looking for an entertaining way to introduce emergency preparedness? Check out our graphic novella which uses the idea of a zombie apocalypse to demonstrate the importance of preparedness. Included is a personal preparedness checklist so you can take action once you\u2019re done reading.\n Check out our Zombie Social Media page where you can find badges and widgets for your own site, links to our blog, content syndication, and zombie e-cards.", "posttime": "2020-05-04 07:28:37", "tags": "\u50f5\u5c38,zombie,\u51c6\u5907,preparedness", "title": "\u75be\u63a7\u4e2d\u5fc3\uff1a\u50f5\u5c38\u9632\u5907", "title_en": "CDC: Zombie Preparedness", "transed": 1, "url": "https://www.cdc.gov/cpr/zombie/index.htm", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u50f5\u5c38", "zombie", "\u51c6\u5907"]}, {"category": "", "categoryclass": "", "imagename": "18754e6ec476e20039e4eb540f9f3df6.jpg", "infoid": 1000539, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u201c\u65b0\u95fb\u5468\u520a\u201d\u548c\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u62a5\u9053\u79f0\uff0c\u6b66\u6c49\u75c5\u6bd2\u5b66\u7814\u7a76\u6240\u4e00\u76f4\u5728\u7814\u7a76\u8759\u8760\u51a0\u72b6\u75c5\u6bd2\uff0c\u8be5\u7814\u7a76\u6240\u4f4d\u4e8e\u4e16\u754c\u4e0a\u7b2c\u4e00\u4f8b\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u53d1\u751f\u5730\u9644\u8fd1\u3002\n\u201c\u65b0\u95fb\u5468\u520a\u201d\u7684\u62a5\u9053\u62ab\u9732\u4e86\u4e00\u4e2a\u4ee4\u4eba\u9707\u60ca\u7684\u82b1\u7d6e\uff1a\u5904\u4e8e\u4e89\u8bae\u4e2d\u5fc3\u7684\u6b66\u6c49\u5b9e\u9a8c\u5ba4\u591a\u5e74\u6765\u4e00\u76f4\u5728\u4ece\u4e8b\u529f\u80fd\u589e\u76ca\u7814\u7a76\u3002\u5b83\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u8fd9\u662f\u4e00\u6761\u7814\u7a76\u8def\u7ebf\uff0c\u79d1\u5b66\u5bb6\u5229\u7528\u75c5\u6bd2\uff0c\u7814\u7a76\u5982\u4f55\u5c06\u5b83\u4eec\u6539\u9020\u6210\u66f4\u81f4\u547d\u6216\u66f4\u5177\u4f20\u64ad\u6027\u7684\u75c5\u6bd2\u3002\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u4ece\u4e8b\u8fd9\u7c7b\u7814\u7a76\u7684\u79d1\u5b66\u5bb6\u8bf4\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ed6\u4eec\u627e\u51fa\u54ea\u4e9b\u75c5\u6bd2\u5a01\u80c1\u5230\u4eba\u7c7b\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u5bf9\u7b56\u3002\n\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2SARS-CoV-2\u7edd\u5bf9\u4e0d\u662f\u751f\u7269\u5de5\u7a0b\u75c5\u539f\u4f53\u3002\u5b83\u4e0d\u662f\u6545\u610f\u53d1\u5e03\u7684\uff0c\u5f88\u53ef\u80fd\u662f\u4eba\u7c7b\u901a\u8fc7\u4e0e\u91ce\u751f\u52a8\u7269\u63a5\u89e6\u610f\u5916\u4f20\u64ad\u7684\u7ed3\u679c\uff0c\u5c31\u50cf\u5386\u53f2\u4e0a\u51e0\u4e4e\u6240\u6709\u7684\u75be\u75c5\u7206\u53d1\u4e00\u6837\u3002\n\u4f46\u5173\u4e8e\u6b66\u6c49\u5b9e\u9a8c\u5ba4\u7684\u65b0\u62a5\u9053\u8ba9\u8bb8\u591a\u4eba\u7b2c\u4e00\u6b21\u610f\u8bc6\u5230\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u7684\u53d1\u751f\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e00\u6d88\u606f\u7684\u53cd\u5e94\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4e0d\u4f1a\u8d23\u602a\u4f60\uff1a\u653f\u5e9c\u7ed9\u7814\u7a76\u4eba\u5458\u62e8\u6b3e\uff0c\u8ba9\u6f5c\u5728\u7684\u5927\u6d41\u884c\u75c5\u6bd2\u66f4\u81f4\u547d\uff0c\u5e76\u4f7f\u5b83\u4eec\u66f4\u5bb9\u6613\u5728\u4eba\u4e0e\u4eba\u4e4b\u95f4\u4f20\u64ad\uff1f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\n\u589e\u52a0\u5bf9\u529f\u80fd\u83b7\u5f97\u6027\u7814\u7a76\u7684\u5173\u6ce8\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u8fd9\u79cd\u6781\u5177\u4e89\u8bae\u7684\u7814\u7a76-\u5728\u5b89\u5168\u4e8b\u4ef6\u8868\u660e\u5b9e\u9a8c\u5ba4\u56f4\u5835\u5f88\u5c11\u662f\u5bc6\u95ed\u7684-\u5728\u5965\u5df4\u9a6c\u653f\u5e9c\u65f6\u671f\u88ab\u7981\u6b62-\u5728\u7279\u6717\u666e\u653f\u5e9c\u6267\u653f\u671f\u95f4\u518d\u6b21\u5f00\u59cb\uff0c\u8bb8\u591a\u79d1\u5b66\u5bb6\u548c\u516c\u5171\u536b\u751f\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u60f3\u6cd5\u3002\u6211\u4eec\u4e0e\u5927\u6d41\u884c\u7684\u6050\u6016\u64e6\u80a9\u800c\u8fc7\uff0c\u53ef\u80fd\u4f1a\u8feb\u4f7f\u6211\u4eec\u91cd\u65b0\u8003\u8651\u4e13\u5bb6\u4eec\u591a\u5e74\u6765\u53d1\u51fa\u7684\u8b66\u544a\u3002\n2019\u5e74\uff0c\u300a\u79d1\u5b66\u300b\u6742\u5fd7\u7206\u51fa\u6d88\u606f\u79f0\uff0c\u7f8e\u56fd\u653f\u5e9c\u6062\u590d\u8d44\u52a9\u4e24\u9879\u6709\u4e89\u8bae\u7684\u5b9e\u9a8c\uff0c\u4ee5\u63d0\u9ad8\u79bd\u6d41\u611f\u7684\u4f20\u64ad\u6027\u3002\n\u8fd9\u4e24\u9879\u5b9e\u9a8c\u81ea2012\u5e74\u4ee5\u6765\u4e00\u76f4\u88ab\u6401\u7f6e\uff0c\u5f53\u65f6\u75c5\u6bd2\u5b66\u754c\u5c31\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u5c55\u5f00\u4e86\u6fc0\u70c8\u7684\u8fa9\u8bba\u30022014\u5e74\uff0c\u5728\u5965\u5df4\u9a6c\u653f\u5e9c\u7684\u9886\u5bfc\u4e0b\uff0c\u7f8e\u56fd\u653f\u5e9c\u5ba3\u5e03\u6682\u505c\u6b64\u7c7b\u7814\u7a76\u3002\n\u90a3\u4e00\u5e74\u5728\u751f\u7269\u5371\u5bb3\u65b9\u9762\u662f\u7cdf\u7cd5\u7684\u4e00\u5e74\u30022014\u5e746\u6708\uff0c\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u591a\u8fbe75\u540d\u79d1\u5b66\u5bb6\u63a5\u89e6\u5230\u70ad\u75bd\u3002\u51e0\u5468\u540e\uff0c\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40(Food And Drug Administration)\u7684\u5b98\u5458\u5728\u4ed3\u5e93\u91cc\u53d1\u73b0\u4e8616\u74f6\u88ab\u9057\u5fd8\u7684\u5929\u82b1\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5386\u53f2\u4e0a\u201c\u6700\u5927\u3001\u6700\u4e25\u91cd\u3001\u6700\u590d\u6742\u201d\u7684\u57c3\u535a\u62c9\u75ab\u60c5\u6b63\u5728\u897f\u975e\u8086\u8650\uff0c\u7f8e\u56fd\u521a\u521a\u5ba3\u5e03\u4e86\u9996\u4f8b\u786e\u8bca\u60a3\u8005\u3002\n\u6b63\u662f\u5728\u8fd9\u79cd\u80cc\u666f\u4e0b\uff0c\u79d1\u5b66\u5bb6\u548c\u751f\u7269\u5b89\u5168\u4e13\u5bb6\u53d1\u73b0\u81ea\u5df1\u5377\u5165\u4e86\u4e00\u573a\u5173\u4e8e\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u7684\u8fa9\u8bba\u3002\u505a\u8fd9\u7c7b\u7814\u7a76\u7684\u79d1\u5b66\u5bb6\u8ba4\u4e3a\uff0c\u901a\u8fc7\u5728\u5b9e\u9a8c\u5ba4\u91cc\u4f7f\u75be\u75c5\u66f4\u81f4\u547d\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u9884\u6d4b\u81f4\u547d\u7684\u75be\u75c5\u3002\u4f46\u5f53\u65f6\u548c\u4e4b\u540e\u7684\u8bb8\u591a\u4eba\u8d8a\u6765\u8d8a\u76f8\u4fe1\uff0c\u6f5c\u5728\u7684\u7814\u7a76\u6536\u76ca-\u770b\u8d77\u6765\u6709\u9650-\u53ea\u662f\u4e0d\u80fd\u8d85\u8fc7\u6211\u4eec\u81ea\u5df1\u5f15\u53d1\u4e0b\u4e00\u6b21\u81f4\u547d\u5927\u6d41\u884c\u7684\u98ce\u9669\u3002\n\u867d\u7136\u5185\u90e8\u5b58\u5728\u5206\u6b67\uff0c\u4f46\u7f8e\u56fd\u653f\u5e9c\u5f53\u65f6\u7ad9\u5728\u4e86\u8c28\u614e\u7684\u4e00\u8fb9\u3002\u5b83\u5ba3\u5e03\u6682\u505c\u8d44\u52a9\u529f\u80fd\u83b7\u5f97\u7814\u7a76-\u6401\u7f6e\u6f5c\u5728\u5371\u9669\u7684\u5b9e\u9a8c\uff0c\u4ee5\u4fbf\u4e16\u754c\u53ef\u4ee5\u8ba8\u8bba\u8fd9\u9879\u7814\u7a76\u5e26\u6765\u7684\u98ce\u9669\u3002\n\u4f46\u57282017\u5e74\uff0c\u7279\u6717\u666e\u653f\u5e9c\u9886\u5bfc\u7684\u653f\u5e9c\u53d1\u5e03\u4e86\u65b0\u7684\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u6307\u5bfc\u65b9\u9488\uff0c\u6807\u5fd7\u7740\u5168\u9762\u6682\u505c\u7684\u7ed3\u675f\u30022019\u5e74\u7684\u6d88\u606f\u8868\u660e\uff0c\u5371\u9669\u7684\u9879\u76ee\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\n\u751f\u7269\u5b89\u5168\u4e13\u5bb6\u62c5\u5fc3\uff0c\u8be5\u9886\u57df\u6b63\u5728\u8d70\u5411\u4e00\u4e2a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65e0\u8f9c\u8005\u6b7b\u4ea1\u7684\u9519\u8bef\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u8981\u63a8\u8fdb\u8fd9\u6837\u7684\u7814\u7a76\uff0c\u5e94\u8be5\u6709\u4e00\u4e2a\u4e0e\u5168\u7403\u5229\u76ca\u76f8\u5173\u8005\u5750\u5728\u8c08\u5224\u684c\u524d\u7684\u900f\u660e\u8fc7\u7a0b\u3002\u6bd5\u7adf\uff0c\u5982\u679c\u51fa\u4e86\u4ec0\u4e48\u5dee\u9519\uff0c\u6211\u4eec\u5c06\u9762\u4e34\u7684\u6df7\u4e71\u80af\u5b9a\u662f\u5168\u7403\u6027\u7684\u3002\n\u8fd9\u79cd\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u7684\u5021\u5bfc\u8005(\u5e76\u4e0d\u662f\u6240\u6709\u7684\u529f\u80fd\u83b7\u5f97\u7814\u7a76\u90fd\u4f7f\u7528\u53ef\u80fd\u5bfc\u81f4\u5927\u6d41\u884c\u7684\u75c5\u539f\u4f53)\u6307\u51fa\u4e86\u4ed6\u4eec\u5e0c\u671b\u5b83\u80fd\u8ba9\u6211\u4eec\u505a\u7684\u51e0\u4ef6\u4e8b\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u5c06\u52a0\u5f3a\u5bf9\u65b0\u7684\u6f5c\u5728\u6d41\u884c\u75c5\u7684\u76d1\u6d4b\u548c\u76d1\u6d4b\u3002\u4f5c\u4e3a\u6211\u4eec\u5728\u5927\u6d41\u884c\u5f00\u59cb\u4e4b\u524d-\u6216\u5728\u5b83\u4eec\u53d8\u5f97\u4e25\u91cd\u4e4b\u524d-\u632b\u8d25\u7684\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u91c7\u96c6\u4e86\u76ee\u524d\u6b63\u5728\u4f20\u64ad\u7684\u75c5\u6bd2\u7684\u6837\u672c\u3002\u8fd9\u79cd\u89c2\u70b9\u8ba4\u4e3a\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u6700\u81f4\u547d\u548c\u6700\u5371\u9669\u7684\u83cc\u682a\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u591f\u76d1\u6d4b\u5b83\u4eec\uff0c\u5e76\u51c6\u5907\u597d\u5e94\u5bf9\u63aa\u65bd\uff0c\u5982\u679c\u770b\u8d77\u6765\u91ce\u751f\u73af\u5883\u4e2d\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u7a81\u53d8\u3002\n\u201c\u968f\u7740\u56fd\u9645\u76d1\u6d4b\u6d3b\u52a8\u7684\u534f\u8c03\u548c\u5168\u7403\u75c5\u6bd2\u5171\u4eab\u7684\u6539\u5584\uff0c\u201d\u4e00\u4e9b\u5021\u5bfc\u8005\u5728mBio\u4e0a\u5199\u9053\uff0c\u6211\u4eec\u5c06\u66f4\u597d\u5730\u4e86\u89e3\u54ea\u4e9b\u6bd2\u682a\u5b58\u5728\u3002\u7136\u540e\uff0c\u529f\u80fd\u83b7\u5f97\u6027\u7814\u7a76\u5c06\u544a\u8bc9\u6211\u4eec\u54ea\u4e9b\u75c5\u6bd2\u63a5\u8fd1\u81f4\u6b7b\u3002\n\u201cGOF\u6570\u636e\u5df2\u7528\u4e8e\u542f\u52a8\u7206\u53d1\u8c03\u67e5\u548c\u5206\u914d\u8d44\u6e90(\u4f8b\u5982", "note_en": "Earlier this week,  Newsweek and the  Washington Post reported that the Wuhan Institute of Virology, a lab near the site of the first  coronavirus cases in the world, had been studying bat coronaviruses.\n The Newsweek report revealed an alarming tidbit: The Wuhan lab at the center of the controversy had for years been engaged in gain-of-function research. What exactly is it? It\u2019s a line of research where scientists take viruses and study how they might be modified to become deadlier or more transmissible. Why would they do this? Scientists who engage in such research say it helps them figure out which viruses threaten people so they can design countermeasures.\n To be clear, the novel coronavirus, SARS-CoV-2, is  definitely not a biologically engineered pathogen. It was not released on purpose, and it is likely to have been  the result of accidental transmission through human contact with wild animals, like almost all disease outbreaks in history have been.\n But the emerging reports about the lab in Wuhan are making many people aware for the first time that gain-of-function research happens at all. I wouldn\u2019t blame you if your response to this news is this:  The government gives grants to researchers to make potentially pandemic viruses deadlier and to make them transmissible more easily between people? Why are we doing that?\n The increased attention to gain-of-function research is a good thing. This kind of highly controversial research \u2014 banned under the Obama administration after safety incidents demonstrated that lab containment is rarely airtight \u2014  began again under the Trump administration, and many scientists and public health researchers think it\u2019s a really bad idea. Our brush with the horrors of a pandemic might force us to reconsider the warnings those experts have been sounding for years.\n  In 2019, Science magazine broke the news that the US government resumed funding two controversial experiments to make the bird flu more transmissible.\n The two experiments had been on hold since 2012 amid a fierce debate in the virology community about gain-of-function research. In 2014, the US government, under the Obama administration, declared a moratorium on such research.\n That year was a bad one on the biohazard front.  In June 2014,  as many as 75 scientists at the Centers for Disease Control and Prevention were exposed to anthrax. A few weeks later, Food and  Drug Administration officials ran across  16 forgotten vials of smallpox  in storage. Meanwhile, the \u201c largest, most severe, and most complex\u201d Ebola outbreak in history was raging across West Africa, and the  first patient to be diagnosed in the US had just been announced.\n It was in that context that scientists and biosecurity experts found themselves embroiled in a debate about gain-of-function research. The scientists who do this kind of research argue that we can better anticipate deadly diseases by making diseases deadlier in the lab. But many people at the time and since have become increasingly convinced that the potential research benefits \u2014 which look limited \u2014 just don\u2019t outweigh the risks of kicking off the next deadly pandemic ourselves.\n While internally divided, the US government came down on the side of caution at the time. It announced a  moratorium on funding gain-of-function research \u2014 putting potentially dangerous experiments on hold so the world could discuss the risks this research entailed.\n But in 2017, the government under the Trump administration   released new guidelines for gain-of-function research, signaling an end to the blanket moratorium. And the news from 2019 suggests that dangerous projects are proceeding.\n Experts in biosecurity are concerned the field is heading toward a mistake that could kill innocent people. They argue that, to move ahead with research like this, there should be a transparent process with global stakeholders at the table. After all, if anything goes wrong, the mess we\u2019ll face will certainly be a global one.\n  Advocates of this kind of gain-of-function research (not all gain-of-function research uses pathogens that can cause pandemics) point to a  few things they hope it will enable us to do.\n In general, they argue it will enhance surveillance and monitoring for new potential pandemics. As part of our efforts to thwart pandemics before they start \u2014 or before they get severe \u2014 we take samples of the viruses currently circulating. If we know what the deadliest and most dangerous strains out there are, the argument goes, then we\u2019ll be able to monitor for them and prepare a response if it looks like such mutations are arising in the wild.\n \u201cAs coordination of international surveillance activities and global sharing of viruses improve,\u201d some  advocates wrote in  mBio , we\u2019ll get better at learning which strains are out there. Then, gain-of-function research will tell us which ones are close to becoming deadly.\n \u201cGOF data have been used to launch outbreak investigations and allocate resources (e.g., H5N1 in Cambodia), to develop criteria for the Influenza Risk Assessment Tool, and to make difficult and sometimes costly pandemic planning policy decisions,\u201d they argue.\n \u201cThe United States government weighed the risks and benefits \u2026 and developed new oversight mechanisms. We know that it does carry risks. We also believe it is important work to protect human health,\u201d Yoshihiro Kawaoka, an investigator whose gain-of-function research was approved,  told Science magazine.\n According to this logic, if we\u2019d known for years that the SARS-CoV-2 coronavirus \u2014 the virus now keeping us all indoors \u2014 was a particularly dangerous one, maybe we could have had disease surveillance systems out to alert us if it made the jump to humans.\n Others are skeptical. Thomas Inglesby, director of the Center for Health Security at Johns Hopkins, told me last year that he doesn\u2019t think the benefits for vaccine development hold up in most cases. \u201cI haven\u2019t seen any of the vaccine companies say that they need to do this work in order to make vaccines,\u201d he pointed out. \u201cI have not seen evidence that the information people are pursuing could be put into widespread use in the field.\u201d\n Furthermore, there are unimaginably many possible variants on a virus, of which researchers can identify only a few. Even if we stumble across one way a virus could mutate to become deadly, we might miss thousands of others. \u201cIt\u2019s an open question whether laboratory studies are going to come up with the same solution that nature would,\u201d MIT biologist Kevin Esvelt told me last year. \u201cHow predictive are these studies really?\u201d As of right now, that\u2019s still an open question.\n And even in the best case, the utility of this work would be sharply limited. \u201cIt\u2019s important to keep in mind that many countries do not have mechanisms in place at all \u2014 much less a real-time way to identify and reduce or eliminate risks as experiments and new technologies are conceived,\u201d Beth Cameron, the  Nuclear Threat Initiative\u2019s vice president for global biological policy and programs, told me.\n With the stakes so high, many researchers are frustrated that the US government was not more transparent about which considerations prompted them to fund the research. Is it really necessary to study how to make H5N1, which causes a type of bird flu with an eye-popping mortality rate, more transmissible? Will precautions be in place to make it harder for the virus to escape the lab? What are the expected benefits from the research, and which hazards did the experts who approved  ...\n \u201cThe people proposing the work are highly respected virologists,\u201d Inglesby said. \u201cBut laboratory systems are not infallible, and even in the greatest laboratories of the world, there are mistakes.\u201d What measures are in place to prevent that? Will potentially dangerous results be published to the whole world, where unscrupulous actors could follow the instructions?\n These are exactly the questions the review process was supposed to answer, but didn\u2019t.\n  The reason the subject of gain-of-function research can inspire such heated opposition is because the stakes can be so high. Pathogens have escaped labs before.\n  In 1977, the last case of smallpox was diagnosed in the wild. The victim was Ali Maow Maalin of Somalia. The World Health Organization tracked down every person he\u2019d been in face-to-face contact with to vaccinate everyone at risk and find anyone who might have caught the virus already. Thankfully, they found no one had. Maalin recovered, and smallpox appeared to be over forever.\n That moment came at the end of a decades-long campaign to eradicate smallpox \u2014 a deadly infectious disease that killed about 30 percent of those who contracted it \u2014 from the face of the Earth. Around 500 million people died of smallpox in the century before it was annihilated.\n But in 1978, the disease cropped back up \u2014 in Birmingham, England.  Janet Parker was a photographer at Birmingham Medical School. When she developed a horrifying rash, doctors initially brushed it off as chicken pox. After all, everyone knew smallpox had been chased out of the world \u2014 right?\n Parker got worse and was admitted to the hospital, where testing determined she had smallpox after all. She died of it a few weeks later.\n  It turned out that the building Parker worked in also contained a research laboratory, one of a handful where smallpox was studied by scientists who were trying to contribute to the eradication effort. Some  papers  reported the lab was badly mismanaged, with important precautions ignored because of haste. (The doctor who ran the lab  died by suicideshortly after Parker was diagnosed.) Somehow, smallpox escaped the lab to infect an employee elsewhere in the building. Through  ...\n In 2014, as the Food and Drug Administration did cleanup for a planned move to a new office,  hundreds of unclaimed vials of virus samples were found in a cardboard box in the corner of a cold storage room. Six of them, it turned out, were vials of smallpox. No one had been keeping track of them; no one knew they were there. They may have been there since the 1960s.\n Panicked scientists put the materials in a box, sealed it with clear packaging tape, and carried it to a supervisor\u2019s office. (This is not approved handling of dangerous biological materials.) It was later found that the integrity of one vial was compromised \u2014 luckily, not one containing a deadly virus.\n The 1979 and 2014 incidents grabbed attention because they involved smallpox, but incidents of unintended exposure to controlled biological agents are  actually quite common. Hundreds of incidents occur every year, though not all involve potentially pandemic-causing pathogens.\n In 2014, a researcher accidentally contaminated a vial of a fairly harmless bird flu with a far-deadlier strain. The deadlier bird flu was then shipped across the country to a lab that didn\u2019t have authorization to handle such a dangerous virus, where it was used for research on chickens.\n The mistake was discovered only when the Centers for Disease Control and Prevention conducted  an extensive investigation in the aftermath of a different mistake \u2014 the potential exposure of 75 federal employees to  live anthrax, after a lab that was supposed to inactivate the anthrax samples accidentally prepared activated ones.\n The CDC\u2019s Select Agents and Toxins program  requires \u201ctheft, loss, release causing an occupational exposure, or release outside of primary biocontainment barriers\u201d of agents on its watchlist be immediately reported. Between 2005 and 2012, the agency got 1,059 release reports \u2014 an average of one incident every few days. Here are a few examples:\n In 2008, a  sterilization device malfunctioned and unexpectedly opened, exposing a nearby unvaccinated worker to undisclosed pathogens.\n In 2009, a  new high-security bioresearch facility \u2014 rated to handle Ebola, smallpox, and other dangerous pathogens \u2014 had its decontamination showers fail. The pressurized chamber kept losing pressure and the door back into the lab kept bursting open while the scientists leaned against it to try to keep it closed. Building engineers were eventually called to handle the chemical showers manually.\n In 2011, a worker at a lab that studied dangerous strains of bird flu found herself unable to shower after a construction contractor accidentally shut off the water. She removed her protective equipment and  left without taking a decontaminating shower. (She was escorted to another building and showered there, but pathogens could have been released in the meantime.)\n Now, the vast majority of these mistakes never infect anyone. And while 1,059 is an eye-popping number of accidents, it actually reflects a fairly low rate of accidents \u2014 working in a controlled biological agents lab is safe compared to many occupations, like trucking or fishing.\n But a trucking or fishing accident will, at worst, kill a few dozen people, while a pandemic pathogen accident could potentially kill a few million. Considering the stakes and worst-case scenarios involved, it\u2019s hard to look at those numbers and conclude that our precautions against disaster are sufficient.\n Reviewing the incidents, it looks like there are many different points of failure \u2014 machinery that\u2019s part of the containment process malfunctions;  regulations aren\u2019t sufficient or aren\u2019t followed. Human error means live viruses are handled instead of dead ones.\n Now imagine such an error involving viruses enhanced through gain-of-function research. \u201cIf an enhanced novel strain of flu escaped from a laboratory and then went on to cause a pandemic, then causing millions of deaths is a serious risk,\u201d Marc Lipsitch, a professor of epidemiology at Harvard University, told me last year.\n The cost-benefit analysis for pathogens that might kill the people exposed or a handful of others is vastly different from the cost-benefit analysis for pathogens that could cause a pandemic \u2014 but our current procedures don\u2019t really account for that. As a result, allowing gain-of-function research means  running unacceptable risks with millions of lives. It\u2019s high time to rethink that.\n  Sign up for the Future Perfect newsletter  and we\u2019ll send you a roundup of ideas and solutions for tackling the world\u2019s biggest challenges \u2014 and how to get better at doing good.\n By signing up, you agree to our  Privacy Notice and European users agree to the data transfer policy. For more newsletters, check out our  newsletters page.\n Future Perfect is funded in part by individual contributions, grants, and sponsorships. Learn more    here .\n   Every day at Vox, we aim to answer your most important questions and provide you, and our audience around the world, with information that has the power to save lives. Our mission has never been more vital than it is in this moment: to empower you through understanding. Vox \u2019s work is reaching more people than ever, but our distinctive brand of explanatory journalism takes resources \u2014particularly during a pandemic and an economic downturn. Your financial  ...", "posttime": "2020-05-04 07:28:15", "tags": "\u75c5\u6bd2,\u5e94\u8be5,work,\u7814\u7a76,research", "title": "\u4e3a\u4ec0\u4e48\u4e00\u4e9b\u5b9e\u9a8c\u5ba4\u81f4\u529b\u4e8e\u4f7f\u75c5\u6bd2\u66f4\u81f4\u547d\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u5e94\u8be5\u505c\u6b62", "title_en": "Why some labs work on making viruses deadlier, and why they should stop", "transed": 1, "url": "https://www.vox.com/2020/5/1/21243148/why-some-labs-work-on-making-viruses-deadlier-and-why-they-should-stop", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u5e94\u8be5", "work", "\u7814\u7a76", "research"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000538, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u745e\u58eb\u5236\u836f\u5546\u7f57\u6c0f\u5468\u65e5\u8868\u793a\uff0c\u4e00\u79cd\u51c6\u786e\u7387\u8d85\u8fc799%\u7684\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53\u6d4b\u8bd5\u5df2\u88ab\u6388\u6743\u5728\u7f8e\u56fd\u7d27\u6025\u4f7f\u7528\u3002\n\u8be5\u68c0\u6d4b\u62e5\u6709100%\u7684\u654f\u611f\u5ea6\u548c99.8%\u7684\u7279\u5f02\u5ea6\uff0c\u8fdc\u8fdc\u9ad8\u4e8e\u8bb8\u591a\u63a8\u5411\u5e02\u573a\u7684\u521d\u59cb\u6297\u4f53\u6d4b\u8bd5\uff0c\u5e76\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5047\u9633\u6027\u7684\u53ef\u80fd\u6027\u3002\n\u6297\u4f53\u68c0\u6d4b\u88ab\u8ba4\u4e3a\u662f\u91cd\u65b0\u5f00\u653e\u8fd9\u4e2a\u56fd\u5bb6\u7684\u5173\u952e\u4e00\u6b65\uff0c\u56e0\u4e3a\u5b83\u5c06\u66f4\u597d\u5730\u4e86\u89e3\u75c5\u6bd2\u7684\u4f20\u64ad\u60c5\u51b5\uff0c\u4ee5\u53ca\u8c01\u53ef\u80fd\u5bf9\u5176\u5177\u6709\u514d\u75ab\u529b\u3002\n\u7136\u800c\uff0c\u4ecd\u7136\u6ca1\u6709\u660e\u786e\u7684\u7814\u7a76\u8868\u660e\uff0c\u62e5\u6709\u6297\u4f53\u610f\u5473\u7740\u4eba\u4eec\u5bf9\u611f\u67d3\u5177\u6709\u514d\u75ab\u529b\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u4e0d\u77e5\u9053\u8fd9\u79cd\u65b0\u75c5\u6bd2\u7684\u4efb\u4f55\u6297\u4f53\u4fdd\u62a4\u80fd\u6301\u7eed\u591a\u4e45\u3002\n\u7f8e\u56fd\u76d1\u7ba1\u673a\u6784\u5468\u65e5\u6388\u6743\u7d27\u6025\u4f7f\u7528\u51c6\u786e\u7387\u8d85\u8fc799%\u7684\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53\u68c0\u6d4b\uff0c\u4ee5\u89e3\u51b3\u4eba\u4eec\u5bf9\u9ad8\u5047\u9633\u6027\u7387\u7684\u62c5\u5fe7\uff0c\u8fd9\u4e9b\u95ee\u9898\u4e00\u76f4\u56f0\u6270\u7740\u4e00\u4e9b\u9996\u6279\u68c0\u6d4b\u3002\n\u8fd9\u9879\u6d4b\u8bd5\u662f\u7531\u745e\u58eb\u5236\u836f\u548c\u8bca\u65ad\u884c\u4e1a\u5de8\u5934\u7f57\u6c0f\u516c\u53f8\u8fdb\u884c\u7684\u3002\u7f57\u6c0f\u516c\u53f8\u5468\u65e5\u8868\u793a\uff0c\u5b83\u5c06\u52a0\u5f3a\u751f\u4ea7\uff0c\u6bcf\u6708\u751f\u4ea7\u9ad8\u8fbe\u4e24\u4f4d\u6570\u7684\u6570\u767e\u4e07\u82f1\u9551\u7684\u6d4b\u8bd5\u4ea7\u54c1\u3002\n\u6297\u4f53\u662f\u4eba\u4f53\u514d\u75ab\u7cfb\u7edf\u4ea7\u751f\u7684\u86cb\u767d\u8d28\uff0c\u7528\u6765\u5bf9\u6297\u5165\u4fb5\u7684\u5a01\u80c1\uff0c\u5982\u75c5\u6bd2\u6216\u7ec6\u83cc\u3002\u6297\u4f53\u68c0\u6d4b\u88ab\u8bb8\u591a\u4eba\u89c6\u4e3a\u91cd\u65b0\u5f00\u653e\u7ecf\u6d4e\u7684\u5173\u952e\u4e00\u6b65\u3002\u4e00\u4e9b\u4eba\u63d0\u51fa\u4e86\u5229\u7528\u68c0\u6d4b\u6765\u7b7e\u53d1\u67d0\u79cd\u5f62\u5f0f\u7684\u514d\u75ab\u62a4\u7167\u7684\u60f3\u6cd5\uff0c\u8fd9\u79cd\u62a4\u7167\u53ef\u4ee5\u8ba9\u6297\u4f53\u643a\u5e26\u8005\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u3002\n\u7f57\u6c0f\u8868\u793a\uff0c\u8be5\u6d4b\u8bd5\u5177\u6709100%\u7684\u654f\u611f\u5ea6\u548c99.8%\u7684\u7279\u5f02\u5ea6\uff0c\u8fd9\u8fdc\u8fdc\u9ad8\u4e8e\u4e00\u4e9b\u7b2c\u4e00\u6279\u6297\u4f53\u6d4b\u8bd5\uff0c\u540e\u8005\u5df2\u83b7\u51c6\u5728\u7f8e\u56fd\u4f7f\u7528\u3002\u7ed3\u679c\u6765\u81ea\u4e8e\u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u4e865000\u591a\u4e2a\u6837\u672c\u3002\n\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5904\u7406\u4e00\u6b21\u6d4b\u8bd5\u5927\u7ea6\u9700\u898118\u5206\u949f\uff0c\u7f57\u6c0f\u7684\u8bbe\u5907\u80fd\u591f\u4ee5\u81ea\u52a8\u65b9\u5f0f\u6bcf\u5c0f\u65f6\u8fd0\u884c\u591a\u8fbe300\u6b21\u6d4b\u8bd5\u3002\n\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u5176\u4e2d\u51e0\u9879\u6d4b\u8bd5\u7684\u51c6\u786e\u7387\u4e0d\u523090%\u3002\u7ed3\u5408\u7f57\u6c0f\u516c\u53f8\u5927\u89c4\u6a21\u751f\u4ea7\u6570\u767e\u4e07\u6b21\u68c0\u6d4b\u7684\u80fd\u529b\uff0c\u8fd9\u79cd\u65b0\u7684\u68c0\u6d4b\u5e94\u8be5\u6709\u52a9\u4e8e\u89e3\u51b3\u5047\u9633\u6027\u7ed3\u679c\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u68c0\u6d4b\u53ef\u80fd\u4f1a\u544a\u8bc9\u67d0\u4eba\u4ed6\u4eec\u6709\u6297\u4f53\uff0c\u800c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u6ca1\u6709\u6297\u4f53\u3002\n\u53e6\u4e00\u5bb6\u533b\u7597\u8bca\u65ad\u5de8\u5934\u96c5\u57f9\u516c\u53f8(Abbott)\u8fc7\u53bb\u51e0\u5468\u4e00\u76f4\u5728\u7f8e\u56fd\u4f7f\u7528\u5176\u6297\u4f53\u6d4b\u8bd5\u3002\u963f\u535a\u7279\u8bf4\uff0c\u4ed6\u4eec\u7684\u6d4b\u8bd5\u57fa\u4e8e\u5bf9\u5927\u7ea61000\u4e2a\u6837\u672c\u7684\u6d4b\u8bd5\uff0c\u51c6\u786e\u7387\u4e3a99%\u3002\n\u5373\u4f7f\u5b8c\u5168\u51c6\u786e\uff0c\u6297\u4f53\u68c0\u6d4b\u4ecd\u7136\u9762\u4e34\u51e0\u4e2a\u5173\u952e\u7684\u672a\u77e5\u56e0\u7d20\uff0c\u8fd9\u4e9b\u672a\u77e5\u56e0\u7d20\u53ef\u80fd\u4f1a\u9650\u5236\u8fd9\u4e9b\u68c0\u6d4b\u7684\u6709\u6548\u6027\u3002\n\u9996\u5148\uff0c\u76ee\u524d\u8fd8\u4e0d\u80fd\u786e\u5b9a\u62e5\u6709\u6297\u4f53\u5c31\u7b49\u4e8e\u4fdd\u62a4\u3002\u5bf9\u5927\u591a\u6570\u75c5\u6bd2\u6765\u8bf4\uff0c\u62e5\u6709\u6297\u4f53\u610f\u5473\u7740\u4e0d\u4f1a\u53d7\u5230\u672a\u6765\u611f\u67d3\u7684\u4fdd\u62a4\u3002\u4f46\u5bf9\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u7684\u7814\u7a76\u5c1a\u672a\u8bc1\u5b9e\u8fd9\u4e00\u70b9\uff0c\u800c\u4e14\u5df2\u7ecf\u6709\u4e00\u4e9b\u5173\u4e8e\u6f5c\u5728\u518d\u611f\u67d3\u7684\u62a5\u9053\u3002\n\u5373\u4f7f\u6297\u4f53\u5bf9\u75c5\u6bd2\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4fdd\u62a4\uff0c\u7814\u7a76\u4eba\u5458\u4e5f\u4e0d\u77e5\u9053\u8fd9\u79cd\u4fdd\u62a4\u80fd\u6301\u7eed\u591a\u4e45\u3002\u5982\u679c\u6297\u4f53\u4fdd\u62a4\u6301\u7eed\u6570\u6708\u800c\u4e0d\u662f\u6570\u5e74\uff0c\u8fd9\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u5173\u952e\u9650\u5236\u3002\n\u6700\u540e\uff0c\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u7f8e\u56fd\u6216\u4e16\u754c\u4eba\u53e3\u4e2d\u5df2\u7ecf\u611f\u67d3\u51a0\u72b6\u75c5\u6bd2\u7684\u6bd4\u4f8b\u662f\u591a\u5c11\u3002\u53ef\u9760\u548c\u5e7f\u6cdb\u7684\u6297\u4f53\u68c0\u6d4b\u53ef\u4ee5\u5e2e\u52a9\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002", "note_en": "A coronavirus antibody test that is more than 99% accurate has been authorized for emergency use in the US, the Swiss drugmaker Roche  said Sunday.\n The test boasts a 100% sensitivity rating and a 99.8% specificity rating, which is much higher than many of the initial antibody tests to reach market, and could significantly reduce the potential for false positives.\n Antibody testing is considered a key step toward reopening the country, as it would offer a better understanding of how widespread the virus is and who may be immune to it.\n However, there has still been no definitive study showing having antibodies means people are immune from getting infected. Researchers also do not yet know how long-lasting any antibody protection is for this new virus.\n   US regulators  authorized Sunday emergency use of a coronavirus antibody test that is more than 99% accurate, addressing concerns about high false positive rates that have plagued some of the first tests.\n The test is made by Roche, a Swiss giant in the pharmaceutical and diagnostics industries. Roche said Sunday it will boost its manufacturing to produce &#34;high double-digit millions per month&#34; of the test.\n Antibodies are proteins created by the body&#39;s immune system to fight invading threats, like viruses or bacteria. Antibody testing is seen by many as a critical step into reopening the economy. Some have floated ideas of using the tests to issue some form of &#34;immunity passports,&#34; which could allow people with the antibodies to return to work.\n Roche stated the test has a 100% sensitivity rating and a 99.8% specificity rating, which are significantly higher than some of the first antibody tests that were cleared for use in the US. The results came from using more than 5,000 samples on its test.\n   It will take about 18 minutes to process a single test, with Roche&#39;s devices able to run up to 300 tests per hour in an automated fashion, the company said.\n One recent study found several of these tests  are less than 90% accurate. Combined with Roche&#39;s ability to mass-manufacture millions of tests, this new test should help address the issue of false positive results, where a test may tell someone they have the antibodies when they actually do not.\n Another medical diagnostics giant, Abbott, has been using its antibody test for the past few weeks in the US. Abbot says its test  is 99% accurate, based on testing about 1,000 samples.\n    Even if fully accurate, antibody testing still faces several\u00a0critical unknowns that may limit the usefulness of these tests.\n First, it is not yet known for sure that having antibodies equals protection. For most viruses, having antibodies means  being protected from future infections. But studies have yet to be done on the novel coronavirus proving this to be the case, and there have been  some reports of potential reinfection.\n Even if antibodies give a degree of protection from the virus,  researchers do not know how long that protection will last. This could be another critical limitation if antibody protection lasts for months instead of years.\n Finally, it is still unknown what percentage of the US or world population has already been infected with the coronavirus. Reliable and widespread antibody testing can help answer this question.", "posttime": "2020-05-04 07:06:09", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u6297\u4f53,antibody", "title": "\u4e00\u79cd\u51c6\u786e\u7387\u8d85\u8fc799%\u7684\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53\u68c0\u6d4b\u73b0\u5728\u5728\u7f8e\u56fd\u83b7\u5f97\u6279\u51c6", "title_en": "A coronavirus antibody test that is more than 99% accurate is now cleared in US", "transed": 1, "url": "https://www.businessinsider.com/antibody-test-that-is-more-than-99-accurate-gets-emergency-clearance-by-fda-2020-5", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u6297\u4f53", "antibody"]}]