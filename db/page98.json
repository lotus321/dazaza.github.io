[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1006770, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u665a\u5728arxiv\u7684\u5c55\u4f1a\u4e0a\u4f1a\u6709\u4e00\u4e9b\u975e\u5e38\u5438\u5f15\u4eba\u7684\u4e1c\u897f\u3002\u5409\u59c6\u00b7\u514b\u83b1\u6069(Jim Cline)\u5728QCD\u4e0a\u8d34\u51fa\u4e86\u8d39\u66fc\u57281987-88\u5e74\u95f4\u4e0a\u4e00\u6b21\u8bfe\u7a0b\u7684\u8bfe\u7a0b\u7b14\u8bb0\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u8bb2\u5ea7\u7684\u97f3\u9891\u6587\u4ef6\u3002\u8bfe\u7a0b\u56e0\u8d39\u66fc\u6700\u540e\u7684\u75be\u75c5\u800c\u4e2d\u65ad\uff0c\u6700\u540e\u4e00\u6b21\u8bb2\u5ea7\u662f\u5728\u8d39\u66fc\u4e8e1988\u5e742\u6708\u53bb\u4e16\u524d\u51e0\u5468\u8fdb\u884c\u7684\u3002\u514b\u83b1\u6069\u7684\u7b14\u8bb0\u6709\u4e00\u4e2a\u5f15\u8a00\uff0c\u4ed6\u5728\u5176\u4e2d\u89e3\u91ca\u4e86\u66f4\u591a\u5173\u4e8e\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u7b14\u8bb0\u662f\u5982\u4f55\u5f62\u6210\u7684\u3002\n\u8fd9\u95e8\u8bfe\u7a0b\u662f\u4e09\u5341\u591a\u5e74\u524d\u5f00\u8bbe\u7684\uff0c\u4ece\u90a3\u4ee5\u540e\u51fa\u73b0\u4e86\u5f88\u591a\u6559\u79d1\u4e66\uff0c\u4f46\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5b66\u751f\u5b66\u4e60\u8fd9\u95e8\u5b66\u79d1\u7684\u5730\u65b9\u3002", "note_en": "Available at the arXiv this evening is something quite fascinating. Jim Cline has posted  course notes from Feynman\u2019s last course, given in 1987-88 on QCD. There are also some audio files of a few of the lectures available  here. The course was interrupted by Feynman\u2019s final illness, with the last lecture given just a couple weeks before Feynman\u2019s death in February of 1988. There\u2019s an introduction to the notes by Cline in which he explains more about the course and how the notes came to be.\n The course was given over thirty years ago, and many textbooks have appeared since then, but it seems to me this has held up well as an excellent place for a student to go to learn the subject.", "posttime": "2020-06-16 13:09:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d39\u66fc,lectures,\u7b14\u8bb0", "title": "\u8d39\u66fc\u8bb2\u6388\u5f3a\u76f8\u4e92\u4f5c\u7528", "title_en": "Feynman Lectures on the Strong Interactions", "transed": 1, "url": "https://www.math.columbia.edu/~woit/wordpress/?p=11782", "via": "", "real_tags": ["\u8d39\u66fc", "lectures", "\u7b14\u8bb0"]}, {"category": "", "categoryclass": "", "imagename": "d4fdafc0f43b9db48bf492f96cdddb4b.jpeg", "infoid": 1006769, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ca1\u9519\uff0c\u6211\u4eec\u5e94\u8be5\u505c\u6b62\u4f7f\u7528\u50cf\u9ed1\u4eba\u8fd9\u6837\u7684\u8bcd\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u5f53\u7528\u5728\u9ed1\u4eba\u8eab\u4e0a\u65f6\uff0c\u8fd9\u4e9b\u8bcd\u53ef\u80fd\u4f1a\u6709\u8d2c\u4e49\u6027\u7684\u610f\u601d\u3002\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u505c\u6b62\u4f7f\u7528\u50cf\u9ed1\u4eba\u8fd9\u6837\u7684\u8bcd\uff0c\u5230\u90a3\u65f6\uff0c\u8fd9\u4e9b\u8bcd\u5728\u7528\u6765\u5f62\u5bb9\u9ed1\u4eba\u65f6\u53ef\u80fd\u4f1a\u6709\u8d2c\u4e49\u7684\u610f\u601d\u3002\u5c31\u50cf\u8fd9\u4e2a\u8bcd\u66fe\u7ecf\u88ab\u7528\u6765\u9119\u89c6\u5176\u4ed6\u4eba\u4e00\u6837\uff0c\u8ba9\u6211\u4eec\u628a\u5b83\u4ece\u6211\u4eec\u7684\u8bed\u8a00\u4e2d\u9a71\u9010\u51fa\u53bb\u5427\u3002\u8fd9\u5f88\u806a\u660e\u3002\u6211\u4eec\u5e94\u8be5\u8bf4\u6211\u7a7f\u7740\u4e00\u4ef6\u6781\u5176\u4e0d\u8d77\u773c\u7684\u886c\u886b\uff0c\u800c\u4e0d\u662f\u8bf4\u6211\u7a7f\u7740\u4e00\u4ef6\u975e\u5e38\u4e0d\u8d77\u773c\u7684\u886c\u886b\uff0c\u8fd9\u5e76\u4e0d\u662f\u5f88\u5305\u5bb9\uff0c\u56e0\u4e3a\u5728\u5b83\u7684\u51e0\u4e2a\u542b\u4e49\u4e2d\uff0c\u6709\u4e00\u6b21\u9ed1\u8272\u66fe\u88ab\u7528\u6765\u8868\u793a\u6b67\u89c6\u3002\u90a3\u662f\u5305\u62ec\u5728\u5185\u7684\u3002\u90a3\u771f\u662f\u592a\u597d\u4e86\u3002\u8fd9\u5f88\u806a\u660e\u3002\u6211\u4eec\u5c06\u80fd\u591f\u8ba4\u4e3a\u81ea\u5df1\u662f\u63a8\u52a8\u4e16\u754c\u524d\u8fdb\u7684\u79ef\u6781\u5206\u5b50\u3002(\u867d\u7136\u8fd9\u4e2a\u4e16\u754c\u4e0a\u8fd8\u6709\u5176\u4ed6\u771f\u6b63\u7684\u95ee\u9898\uff0c\u4f46\u7834\u574f\u8f6f\u4ef6\u662f\u65e0\u6d4e\u4e8e\u4e8b\u7684)", "note_en": "True, and we should stop using words like &#34;black&#34; which by then could have a pejorative meaning when used for &#34;black people&#34;. As this word once was used to look down on other human beings, let&#39;s banish it from our languages. That&#39;s smart. Instead of saying &#34;I wear a black shirt&#34;, which is not very inclusive because once &#34;black&#34;, in one of its several meanings, was used for discrimination, we should say &#34;I wear an extremely obscure shirt&#34; or &#34;I wear a #000 shirt&#34;. That&#39;s inclusive. That&#39;s nice. That&#39;s smart. And we will be able to consider ourselves activists who push the world forward. (While there are other real issues in this world, and breaking software will not help)", "posttime": "2020-06-16 13:09:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6539\u540d,master,\u9ed1\u4eba", "title": "\u4f60\u4e3a\u4ec0\u4e48\u628aMASTER\u6539\u540d\u4e3aMain\uff1f#113", "title_en": "Why did you rename master to main? #113", "transed": 1, "url": "https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/113", "via": "", "real_tags": ["\u6539\u540d", "master", "\u9ed1\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "fa0f24803b40c3a782582c37c59fd293.png", "infoid": 1006768, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\uff1a\u8fd9\u662f\u6211\u6700\u521d\u5728Medium for Hackernoon\u4e0a\u5199\u7684\u6587\u7ae0\u7684\u518d\u7248\uff0c\u81ea\u4ece\u8fdc\u7a0b\u66f4\u65b0\u5f00\u59cb\u4ee5\u6765\uff0c\u9632\u6b62\u964d\u7ea7\u4e00\u76f4\u662f\u6d88\u8d39\u8005\u548c\u516c\u53f8\u4e4b\u95f4\u7684\u732b\u6349\u8001\u9f20\u6e38\u620f\u3002\u4efb\u5929\u5802\u4ea4\u6362\u673a\u91c7\u7528\u4e86\u4e00\u79cd\u4ee4\u4eba\u62c5\u5fe7\u7684\u7b56\u7565\uff0c\u5373\u5728\u8bbe\u5907\u6bcf\u6b21\u66f4\u65b0\u65f6\u6c38\u4e45\u4fee\u6539\u8bbe\u5907\uff0c\u4ee5\u9632\u6b62\u56fa\u4ef6\u964d\u7ea7\u3002\u867d\u7136\u8fd9\u4e0d\u662f\u4e00\u4e2a\u65b0\u6982\u5ff5(Xbox360\u65e9\u57282007\u5e74\u5c31\u8fd9\u6837\u505a\u4e86)\uff0c\u4f46\u5b83\u662f\u9632\u6b62\u7ec8\u7aef\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u4fee\u6539\u8bbe\u5907\u7684\u66f4\u5927\u52aa\u529b\u7684\u4e00\u90e8\u5206\u3002\u4efb\u5929\u5802\u4ea4\u6362\u673a\u4f7f\u7528NVIDIA Tegra X1 SoC\uff0c\u5b83\u5e26\u6709\u4fdd\u9669\u4e1d\u9a71\u52a8\u7a0b\u5e8f\u3002\u8fd9\u5141\u8bb8\u5b83\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u7194\u65ad\u4fdd\u9669\u4e1d-\u6c38\u4e45\u4fee\u6539\u8bbe\u5907\uff0c\u4f7f\u5176\u4e0d\u53ef\u80fd\u6062\u590d\u5230\u4ee5\u524d\u7684\u72b6\u6001\u3002\n\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u9a8c\u8bc1\u7279\u5b9a\u7194\u4e1dFUSE_RESERVED_ODM7\uff0c\u4ee5\u9632\u6b62\u964d\u7ea7\u30021\u6bcf\u4e2a\u8f6f\u4ef6\u7248\u672c\u90fd\u671f\u671b\u7194\u65ad\u4e0d\u540c\u6570\u91cf\u7684\u4fdd\u9669\u4e1d-\u5982\u679c\u6570\u91cf\u8d85\u8fc7\u9884\u671f\uff0c\u5219\u65e0\u6cd5\u542f\u52a8\uff0c\u5982\u679c\u6570\u91cf\u8f83\u5c11\uff0c\u5219\u4f1a\u7194\u65ad\u8fd9\u4e9b\u4fdd\u9669\u4e1d\uff0c\u7136\u540e\u7ee7\u7eed\u542f\u52a8\u3002\u7194\u65ad\u4fdd\u9669\u4e1d\u662f\u4e0d\u53ef\u9006\u8f6c\u7684-\u4e00\u65e6\u5b83\u88ab\u8bbe\u7f6e\u597d\uff0c\u5b83\u5c31\u6c38\u8fdc\u4e0d\u80fd\u89e3\u9664\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u7269\u7406\u4fee\u6539SoC\u548c\u66f4\u6362\u4fdd\u9669\u4e1d\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u5b83\u7684\u4fb5\u5165\u6027\u548c\u6210\u672c\u90fd\u4ee4\u4eba\u671b\u800c\u5374\u6b65\uff0c\u56e0\u6b64\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u9009\u62e9\u3002ODM_RESERVED\u7194\u4e1d\u96c6\u5408\u4e2d\u6709256\u4f4d\uff0c\u67098\u4e2aODM_RESERVED\u7194\u4e1d\u3002\u8fd9\u5141\u8bb832\u4e2a\u4fdd\u9669\u4e1d\uff0c\u621632\u4e2a\u672a\u6765\u7684FW\u7248\u672c(\u524d\u63d0\u662f\u5b83\u4eec\u5728\u6bcf\u4e2a\u4e3b\u8981\u7248\u672c\u4e0a\u90fd\u4f1a\u70e7\u6bc1\u4fdd\u9669\u4e1d)\u3002\n2018\u5e744\u6708\uff0cSwitch BootROM\u7684\u7b2c\u4e00\u4e2a\u4e25\u91cd\u6f0f\u6d1e\u53d1\u5e03\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u53ef\u8fdc\u7a0b\u6253\u8865\u4e01\u7684\u6f0f\u6d1e\uff0c\u8fd9\u610f\u5473\u7740\u76ee\u524d\u6240\u6709\u5927\u7ea61500\u4e07\u53f0\u8bbe\u5907\u90fd\u662f\u6613\u53d7\u653b\u51fb\u7684\uff0c\u5e76\u4e14\u5728\u5176\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u90fd\u5c06\u7ee7\u7eed\u6613\u53d7\u653b\u51fb\u3002Fail0verflow\u8fd8\u53d1\u5e03\u4e86\u4e00\u4e2aLinux\u7aef\u52a0\u8f7d\u7a0b\u5e8f\u3002\u7531\u4e8e\u672c\u6587\u6700\u521d\u662f(2018\u5e74)\u7f16\u5199\u7684\uff0c\u56e0\u6b64\u7ed5\u8fc7\u4fdd\u9669\u4e1d\u68c0\u67e5\u7684\u80fd\u529b\u5df2\u7ecf\u51fa\u6765\u4e86\u3002\u901a\u8fc7\u5c06\u63a7\u5236\u53f0\u8bbe\u7f6e\u4e3aRCM\u6a21\u5f0f\uff0c\u60a8\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u542f\u52a8\u4e4b\u524d\u7ed5\u8fc7\u6240\u6709\u8fd9\u4e9b\u68c0\u67e5\u3002\u8fd9\u4e9b\u4ea4\u6362\u673a\u6709\u6253\u8865\u4e01\u548c\u672a\u6253\u8865\u4e01\u7684\u7248\u672c\uff0c\u8fd9\u4e9b\u7248\u672c\u5728\u975e\u5e38\u6709\u7528\u7684NH\u4ea4\u6362\u673a\u6307\u5357\u7f51\u7ad9\u4e0a\u8fdb\u884c\u4e86\u6982\u8ff0\u3002NH-Server\u4e0a\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\uff1a\u76ee\u524d\u8be5\u4ea4\u6362\u673a\u6709\u4e24\u4e2a\u786c\u4ef6\u4fee\u8ba2\u7248\u3002\u57282018\u5e74\u4e2d\u4e4b\u524d\u8d2d\u4e70\u6216\u751f\u4ea7\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u90fd\u5b58\u5728Boottrom\u6f0f\u6d1e\uff0c\u65e0\u8bba\u4ea4\u6362\u673a\u4e0a\u7684\u56fa\u4ef6\u7248\u672c\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801\u3002\u7136\u800c\uff0c\u5f53\u4efb\u5929\u5802\u66f4\u65b0\u7cfb\u7edf\u65f6\uff0cCFW\u901a\u5e38\u9700\u8981\u66f4\u65b0\u624d\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6e38\u620f\u673a\u51fa\u5382\u540e\uff0c\u9664\u975e\u6e38\u620f\u673a\u88ab\u9001\u53bb\u7ef4\u4fee\uff0c\u5426\u5219\u4efb\u5929\u5802\u65e0\u6cd5\u4fee\u590d\u8fd9\u4e2a\u9519\u8bef\u3002\u8fd9\u610f\u5473\u7740\u6240\u6709\u5f53\u524d\u548c\u672a\u6765\u7684\u56fa\u4ef6\u90fd\u5c06\u80fd\u591f\u901a\u8fc7\u5229\u7528\u65e7\u786c\u4ef6\u7248\u672c\u4e0a\u7684\u6b64\u6f0f\u6d1e\u6765\u542f\u52a8CFW\u3002\n\u5728\u5927\u7ea62018\u5e748\u6708\u4e4b\u540e\u8d2d\u4e70\u7684\u4efb\u4f55\u63a7\u5236\u53f0\u90fd\u53ef\u80fd\u4f1a\u6253\u8865\u4e01\u3002\u8fd9\u5305\u62ec\u8d27\u67b6\u4e0a\u7684\u6700\u65b0\u4ea7\u54c1\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u201c\u7ea2\u76d2\u5b50\u201d\u6216\u201cMariko\u201d\u3002Mariko\u7684\u786c\u4ef6\u6253\u4e86\u8865\u4e01\uff0c\u4f46\u53ef\u80fd\u662f\u5728\u6613\u53d7\u653b\u51fb\u7684\u56fa\u4ef6\u4e0a\u3002\u76ee\u524d\uff0c\u77e5\u9053\u60a8\u7684\u4ea4\u6362\u673a\u662f\u5426\u53ef\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5c1d\u8bd5\u4ee5RCM\u53d1\u9001\u6709\u6548\u8d1f\u8f7d\u3002\u5373\u4f7f\u4fee\u590d\u4e86\u6b64\u6f0f\u6d1e\uff0c8.0.1\u53ca\u66f4\u4f4e\u7248\u672c\u4e0a\u7684\u8bb8\u591a\u4ea4\u6362\u673a\u5c06\u6765\u4ecd\u53ef\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u88ab\u9ed1\u5ba2\u653b\u51fb(\u8bf7\u53c2\u9605\u6211\u662f\u5426\u5e94\u8be5\u66f4\u65b0\u56fa\u4ef6\uff1f)\u3002\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f)\u3002\u5305\u88c5\u76d2\u80cc\u9762\u7684\u5e8f\u5217\u53f7\u53ef\u80fd\u4f1a\u544a\u8bc9\u4f60\u54ea\u4e9b\u4e3b\u673a\u6253\u4e86\u8865\u4e01\uff0c\u54ea\u4e9b\u6ca1\u6709\u3002\u8bf7\u770b\u8fd9\u91cc\u67e5\u770b\u6700\u65b0\u5217\u8868\u3002", "note_en": "Note: this is a republish of the article I originally wrote on Medium for  Hackernoon Downgrade prevention has been a cat-and-mouse game between consumers and companies since the inception of remote updates. The Nintendo Switch adopts a worrisome-strategy of preventing firmware downgrades by permanently modifying your device every time it updates. While this isn\u2019t a new concept (the Xbox 360 was doing it back in 2007), it is part of a greater effort to prevent end users from modifying their devices to their liking. The Nintendo Switch use an  Nvidia Tegra X1 SoC, which comes with a fuse driver. This allows it to programmatically blow fuses \u2014 permanently modifying the device, making it impossible to revert to a previous state.\n     The boot loader verifies a specific fuse,  FUSE_RESERVED_ODM7, to prevent downgrading.  1 Each software version expects a different number of fuses to be blown \u2014 if more than is expected, it fails to boot, and if less, it\u2019ll blow those fuses and then proceed to boot. Blowing a fuse is irreversible\u2014 once it\u2019s been set it can never be undone. It\u2019s theoretically possible to physically modify the SoC and replace the fuses, but it\u2019s so prohibitively invasive and expensive that it\u2019s not a real option. There are 256 bits in the set of ODM_RESERVED fuses, and there are 8 ODM_RESERVED. This allows for 32 fuses, or 32 future FW versions (provided they burn a fuse on every major release).\n  In April 2018, the  first serious exploit of the Switch BootROM was released. This is not a remotely patchable exploit, which means that all ~15 million devices currently out are vulnerable and will continue to be vulnerable for their lifespans.  fail0verflow also released a Linux side loader.  Since this article was originally written (in 2018), the ability to bypass the fuse checks have come out. By setting your console to  RCM mode, it allows you to bypass all these checks before the console has already booted. There are patched and unpatched versions of these Switches, which are outlined on the very useful  NH Switch Guide site.  From the  FAQ on NH-Server: Currently two hardware revisions of the Switch exist. Any Switch bought or manufactured before the middle of 2018 has a bootrom bug that allows us to run code regardless of the firmware version on the Switch. When Nintendo updates the system, however, CFW will usually need an update to account for it. This bug cannot be fixed by Nintendo once the console leaves the factory, unless the console is sent in for repairs. This means that all current and future firmwares will be able to launch CFW through this exploit on the old hardware revision.\n Any console purchased after approximately August 2018 is likely to be patched. This includes the latest units on shelves, referred to as \u2018red box\u2019 or \u2018Mariko\u2019. Mariko is hardware patched, but may come on a vulnerable firmware. Currently the only way to know if your Switch is hackable is by trying to send the payload in RCM. Even with this exploit fixed, many Switches on 8.0.1 and below will be hackable to some degree in the future (see Should I update my Firmware? for much more detailed information). The serial number on the back of the box can possibly tell you which consoles are patched and which aren\u2019t. See here for an up to date list.", "posttime": "2020-06-16 13:08:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4efb\u5929\u5802,\u4ea4\u6362\u673a,switch", "title": "\u4efb\u5929\u5802\u4ea4\u6362\u673a\u5982\u4f55\u901a\u8fc7\u4e0d\u53ef\u4fee\u590d\u5730\u70e7\u65ad\u81ea\u5df1\u7684\u4fdd\u9669\u4e1d\u6765\u9632\u6b62\u964d\u7ea7", "title_en": "How the Nintendo Switch prevents downgrades by irreparably blowing its own fuses", "transed": 1, "url": "https://blog.jonlu.ca/posts/nintendo-switch?ref=hn", "via": "", "real_tags": ["\u4efb\u5929\u5802", "\u4ea4\u6362\u673a", "switch"]}, {"category": "", "categoryclass": "", "imagename": "bcaef273ba7a51548cd7190359d85432.jpeg", "infoid": 1006767, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-5\u6708\u4e0b\u65ec\u79bb\u5f00\u8fd9\u5bb6\u56fe\u50cf\u5206\u4eab\u516c\u53f8\u7684\u4e24\u540d\u524dPinterest\u5458\u5de5\u5468\u4e00\u5728\u63a8\u6587\u4e2d\u516c\u5f00\u58f0\u79f0\uff0c\u4ed6\u4eec\u5728\u5de5\u4f5c\u573a\u6240\u7ecf\u5386\u4e86\u79cd\u65cf\u6b67\u89c6\u3002\nPinterest\u7684\u516c\u5171\u653f\u7b56\u548c\u793e\u4f1a\u5f71\u54cd\u7ecf\u7406Ifeoma Ozoma\u79f0\u8be5\u516c\u53f8\u6700\u8fd1\u4e0e\u53cd\u79cd\u65cf\u4e3b\u4e49\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u8fd0\u52a8\u7684\u56e2\u7ed3\u662f\u201c\u4e00\u4e2a\u7b11\u8bdd\u201d\u3002\n5\u670825\u65e5\uff0c\u9ed1\u4eba\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u65b9\u62d8\u7559\u671f\u95f4\u6b7b\u4ea1\u540e\uff0c\u5168\u7403\u9488\u5bf9\u79cd\u65cf\u4e3b\u4e49\u548c\u4e0d\u516c\u6b63\u7684\u6297\u8bae\u6d3b\u52a8\u4e4b\u540e\uff0c\u5404\u516c\u53f8\u7eb7\u7eb7\u53d1\u8868\u58f0\u660e\uff0c\u58f0\u63f4\u9ed1\u4eba\u793e\u533a\u3002\n\u201c\u4f5c\u4e3a\u4e00\u540d\u9ed1\u4eba\u5973\u6027\uff0c\u770b\u5230@Pinterest\u534a\u591c\u53d1\u8868\u7684\u2018\u9ed1\u4eba\u5458\u5de5\u5f88\u91cd\u8981\u2019\u7684\u58f0\u660e\u8ba9\u6211\u6320\u5934\uff0c\u56e0\u4e3a\u6211\u521a\u521a\u4e89\u53d6\u4e86\u6574\u6574\u4e00\u5e74\u591a\u7684\u5de5\u8d44\uff0c\u5e76\u76f8\u5f53\u5730\u5e73\u5206\u4e86\u2026\u3002\u201dOzoma\u5728\u4e00\u6761\u63a8\u6587\u4e2d\u8bf4\u3002\nPinterest\u6ca1\u6709\u7acb\u5373\u56de\u590d\u8def\u900f\u793e\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b986\u67082\u65e5\u7684\u4e00\u4efd\u516c\u5f00\u62a5\u544a\u79f0\uff0c\u8be5\u516c\u53f8\u81f4\u529b\u4e8e\u91c7\u53d6\u884c\u52a8\uff0c\u6539\u5584\u5176\u591a\u6837\u6027\u3002\n\u6e05\u6c34\u94f6\u884c(Aerica Shimizu Banks)\u66fe\u4e0e\u5c0f\u6cfd\u4e00\u90ce\u5728\u540c\u4e00\u4e2a\u5c0f\u653f\u7b56\u56e2\u961f\u5171\u4e8b\uff0c\u5979\u5728Twitter\u4e0a\u8868\u793a\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u79cd\u65cf\u4e3b\u4e49\u548c\u6027\u522b\u6b67\u89c6\u7684\u5de5\u4f5c\u573a\u6240\u201d\uff0c\u5979\u7684\u7ecf\u7406\u5bf9\u5979\u7684\u79cd\u65cf\u53d1\u8868\u4e86\u8d2c\u4f4e\u5979\u7684\u8bc4\u8bba\u3002\nOzoma\u8fd8\u8bf4\uff0c\u5979\u53d7\u5230\u4e86\u60e9\u7f5a\uff0c\u56e0\u4e3a\u5979\u6ca1\u6709\u63d0\u51fa\u5229\u5f0a\uff0c\u56e0\u4e3a\u5979\u7684\u653f\u7b56\u53d8\u5316\u9650\u5236\u4e86Pinterest\u5c06\u524d\u5357\u65b9\u5974\u96b6\u79cd\u690d\u56ed\u4f5c\u4e3a\u5a5a\u793c\u573a\u5730\u7684\u63a8\u5e7f\uff0c\u5e76\u5c31\u627f\u5305\u5546\u85aa\u916c\u63d0\u51fa\u4e86\u5efa\u8bae\u3002\n\u66fe\u4e0eOzoma\u548cShimizu Banks\u5408\u4f5c\u7684\u6c11\u6743\u7ec4\u7ec7Color of Change\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0cPinterest\u81f3\u5c11\u6b20\u8fd9\u4e24\u540d\u5973\u6027\u4e00\u4e2a\u9053\u6b49\u548c\u5e94\u6709\u7684\u8d54\u507f\u3002\n\u201c\u5c31\u50cf\u8bb8\u591a\u53d1\u5e03\u58f0\u63f4\u201d\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201c(Black Lives Matter)\u7684\u79d1\u6280\u516c\u53f8\u4e00\u6837\uff0cPinterest\u7684\u884c\u4e3a\u7834\u574f\u4e86\u8be5\u516c\u53f8\u81ea\u5df1\u7684\u8a00\u8bba\uff0c\u201dColor of Change\u7684\u6d3b\u52a8\u603b\u76d1\u6770\u5fb7\u00b7\u9a6c\u683c\u52aa\u65af\u00b7\u5965\u53e4\u7eb3\u4f0a\u514b(Jade Magnus Ogannaike)\u8bf4\u3002", "note_en": "(Reuters) - Two former Pinterest employees who left the image-sharing company in late May publicly alleged in tweets on Monday that they had experienced racial discrimination in the workplace.\n Ifeoma Ozoma, who was Pinterest\u2019s public policy and social impact manager, called the company\u2019s recent solidarity with the anti-racism Black Lives Matter movement \u201ca joke.\u201d\n Companies have rushed to publish statements of solidarity with the black community following global protests over racism and injustice after George Floyd, a black man, died in Minneapolis police custody on May 25.\n \u201cAs a Black woman, seeing @Pinterest\u2019s middle of the night \u2018Black employees matter\u2019 statement made me scratch my head after I just fought for over a full year to be paid and leveled fairly\u2026\u201d Ozoma said in one tweet.\n Pinterest did not immediately respond to a Reuters request for comment. A public note from its CEO on June 2 said the company was committed to taking action and improving its diversity.\n Aerica Shimizu Banks, who worked with Ozoma in the same small policy team, said on Twitter that it was a \u201cracist &amp; sexist workplace\u201d and that she had faced disparaging comments about her ethnicity from her manager.\n Ozoma also said she was chastised for not presenting the pros and cons for a policy change that restricted Pinterest\u2019s promotion of former Southern slave plantations as wedding venues and for a recommendation on contractor pay.\n Civil rights organization Color of Change, which worked with Ozoma and Shimizu Banks in their former roles, said in a statement that Pinterest at minimum owed the women an apology and due compensation.\n \u201cLike so many tech companies that are posting messages of solidarity with Black Lives Matter, Pinterest\u2019s actions undermine the company\u2019s own words,\u201d said Color of Change\u2019s campaign director Jade Magnus Ogunnaike.", "posttime": "2020-06-16 13:08:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "policy", "title": "\u4e24\u540d\u524dPinterest Policy\u5458\u5de5\u8868\u793a\uff0c\u4ed6\u4eec\u5728\u5de5\u4f5c\u4e2d\u9762\u4e34\u79cd\u65cf\u4e3b\u4e49", "title_en": "Two former Pinterest policy employees say they faced racism at work", "transed": 1, "url": "https://www.reuters.com/article/us-pinterest-race/two-former-pinterest-policy-employees-say-they-faced-racism-at-work-idUSKBN23M2Y3", "via": "", "real_tags": ["policy"]}, {"category": "", "categoryclass": "", "imagename": "2f42b63e9814b1135e2ff99a9c8c7466.jpg", "infoid": 1006766, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u70b9\u51fb\u6b64\u5904\u514d\u8d39\u8bd5\u7528\u9ea6\u54f2\u4f26\u7535\u89c6\uff1ahttps://try.magellantv.com/voicesofthepast.\u3002\u8fd9\u662f\u4e3a\u6211\u4eec\u7684\u89c2\u4f17\u63d0\u4f9b\u7684\u72ec\u5bb6\u4f18\u60e0\uff1a\u5ef6\u957f\u7684\uff0c\u957f\u8fbe\u4e00\u4e2a\u6708\u7684\u5ba1\u5224\uff0cF\u2026", "note_en": "Get your free trial of MagellanTV here: https://try.magellantv.com/voicesofthepast. It's an exclusive offer for our viewers: an extended, month-long trial, F...", "posttime": "2020-06-16 12:50:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e5\u672c,\u8bbf\u7f8e,visitor,\u8bd5\u7528", "title": "\u9996\u4f4d\u65e5\u672c\u8bbf\u7f8e\u6e38\u5ba2\u63cf\u8ff0\u7f8e\u56fd\u751f\u6d3b--1860\u5e74\u5fb7\u5ddd\u5927\u4f7f\u9986", "title_en": "First Japanese Visitor to USA Describes American Life \u2013 1860 Tokugawa Embassy", "transed": 1, "url": "https://youtu.be/IvPxCuIspWs", "via": "", "real_tags": ["\u65e5\u672c", "\u8bbf\u7f8e", "visitor", "\u8bd5\u7528"]}, {"category": "", "categoryclass": "", "imagename": "0ef2ab0d5a852544f6b2c0f8d4687db1.jpg", "infoid": 1006765, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u6700\u8fd1\u53d1\u8868\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\uff0c\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u548c\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u7684\u7269\u7406\u5b66\u5bb6\u9996\u6b21\u5728\u592a\u7a7a\u4e2d\u521b\u9020\u4e86\u4e00\u79cd\u7f55\u89c1\u7684\u91cf\u5b50\u6001\u7269\u8d28\uff0c\u88ab\u79f0\u4e3a\u73bb\u8272-\u7231\u56e0\u65af\u5766\u51dd\u805a\u6001(BEC)\u3002\u7269\u7406\u5b66\u5bb6\u4eec\u901a\u8fc7\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9(ISS)\u4e0a\u653e\u7f6e\u4e00\u4e2a\u8ff7\u4f60\u51b0\u7bb1\u5927\u5c0f\u7684\u7d27\u51d1\u5b9e\u9a8c\u88c5\u7f6e\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5b83\u88ab\u79f0\u4e3a\u51b7\u539f\u5b50\u5b9e\u9a8c\u5ba4(CAL)\uff0c\u4e5f\u5c31\u662f\u5b87\u5b99\u4e2d\u6700\u51c9\u723d\u7684\u5730\u65b9\u3002\nBEC\u662f\u4ee5\u963f\u5c14\u4f2f\u7279\u00b7\u7231\u56e0\u65af\u5766(Albert Einstein)\u548c\u5370\u5ea6\u7269\u7406\u5b66\u5bb6\u8428\u8482\u626c\u5fb7\u62c9\u00b7\u535a\u65af(Satyendra Bose)\u7684\u540d\u5b57\u547d\u540d\u7684\uff0c\u540e\u8005\u572820\u4e16\u7eaa20\u5e74\u4ee3\u9884\u6d4b\u4e86\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u5373\u5982\u679c\u539f\u5b50\u5806\u79ef\u5f97\u8db3\u591f\u7d27\u5bc6\uff0c\u539f\u5b50\u7684\u6ce2\u72b6\u6027\u8d28\u53ef\u80fd\u4f1a\u5141\u8bb8\u539f\u5b50\u6269\u6563\u548c\u91cd\u53e0\u3002\u5728\u5e38\u6e29\u4e0b\uff0c\u539f\u5b50\u7684\u884c\u4e3a\u5c31\u50cf\u53f0\u7403\u4e00\u6837\uff0c\u5f7c\u6b64\u5f39\u5f00\u3002\u964d\u4f4e\u6e29\u5ea6\u4f1a\u964d\u4f4e\u5b83\u4eec\u7684\u901f\u5ea6\u3002\u5982\u679c\u6e29\u5ea6\u8db3\u591f\u4f4e(\u6bd4\u7edd\u5bf9\u96f6\u5ea6\u9ad8\u51fa\u5341\u4ebf\u5206\u4e4b\u4e00\u5ea6)\uff0c\u539f\u5b50\u4e5f\u8db3\u591f\u5bc6\u96c6\uff0c\u4e0d\u540c\u7684\u7269\u8d28\u6ce2\u5c06\u80fd\u591f\u5f7c\u6b64\u611f\u5e94\u5e76\u76f8\u4e92\u534f\u8c03\uff0c\u5c31\u50cf\u5b83\u4eec\u662f\u4e00\u4e2a\u5927\u7684\u8d85\u539f\u5b50\u4e00\u6837\u3002\n1995\u5e74\uff0c\u5f53\u65f6\u5728\u79d1\u7f57\u62c9\u591a\u5927\u5b66JILA\u8bbe\u65bd\u5de5\u4f5c\u7684\u7269\u7406\u5b66\u5bb6\u57c3\u91cc\u514b\u00b7\u5eb7\u5948\u5c14(Eric Cornell)\u548c\u5361\u5c14\u00b7\u5a01\u66fc(Carl Wieman)\u5728\u5b9e\u9a8c\u5ba4\u521b\u9020\u4e86\u7b2c\u4e00\u6279BEC\u3002\u4f7f\u7528\u6fc0\u5149\u9677\u9631\uff0c\u4ed6\u4eec\u51b7\u5374\u4e86\u5927\u7ea61000\u4e07\u4e2a\u94f7\u6c14\u4f53\u539f\u5b50\uff1b\u51b7\u5374\u540e\u7684\u539f\u5b50\u88ab\u78c1\u573a\u56fa\u5b9a\u5728\u539f\u5730\u3002\u4f46\u662f\u539f\u5b50\u4ecd\u7136\u4e0d\u591f\u51b7\uff0c\u4e0d\u8db3\u4ee5\u5f62\u6210BEC\uff0c\u6240\u4ee5\u4ed6\u4eec\u589e\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\uff0c\u84b8\u53d1\u51b7\u5374\uff0c\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u4e00\u5f20\u78c1\u573a\u7f51\u5408\u529b\u628a\u6700\u70ed\u7684\u539f\u5b50\u8e22\u51fa\u53bb\uff0c\u8fd9\u6837\u8f83\u51b7\u7684\u539f\u5b50\u5c31\u53ef\u4ee5\u66f4\u7d27\u5bc6\u5730\u79fb\u52a8\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u4f60\u65e9\u6668\u559d\u5496\u5561\u65f6\u7684\u84b8\u53d1\u51b7\u5374\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\uff1b\u8f83\u70ed\u7684\u539f\u5b50\u4e0a\u5347\u5230\u78c1\u9631\u7684\u9876\u90e8\uff0c\u4ee5\u84b8\u6c7d\u7684\u5f62\u5f0f\u8df3\u51fa\u3002\n\u52302001\u5e749\u6708\uff0c\u5df2\u7ecf\u670930\u591a\u4e2a\u56e2\u961f\u91cd\u590d\u4e86\u8fd9\u9879\u5b9e\u9a8c\u3002\u8fd9\u4e00\u53d1\u73b0\u5f00\u521b\u4e86\u7269\u7406\u5b66\u7684\u4e00\u4e2a\u5168\u65b0\u5206\u652f\u3002BEC\u4f7f\u79d1\u5b66\u5bb6\u80fd\u591f\u7814\u7a76\u91cf\u5b50\u7269\u7406\u5b66\u4e2d\u5947\u602a\u800c\u72ed\u5c0f\u7684\u4e16\u754c\uff0c\u5c31\u50cf\u4ed6\u4eec\u901a\u8fc7\u653e\u5927\u955c\u89c2\u5bdf\u5b83\u4e00\u6837\uff1bBEC\u653e\u5927\u539f\u5b50\u7684\u65b9\u5f0f\u4e0e\u6fc0\u5149\u653e\u5927\u5149\u5b50\u7684\u65b9\u5f0f\u76f8\u540c\u3002\u5a01\u66fc\u3001\u5eb7\u5948\u5c14\u548c\u6c83\u5c14\u592b\u5188\u00b7\u51ef\u7279\u52d2\u56e0\u4ed6\u4eec\u7684\u6210\u5c31\u5206\u4eab\u4e862001\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\u3002\n\u867d\u7136\u5728\u5730\u7403\u4e0a\u5236\u9020BEC\u6240\u9700\u7684\u5b9e\u9a8c\u5ba4\u8bbe\u5907\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u586b\u6ee1\u4e00\u4e2a\u623f\u95f4\uff0c\u4f46JPL\u7684\u5fae\u578bCAL\u53ea\u670914\u7acb\u65b9\u82f1\u5c3a\uff0c\u53ea\u9700\u8981\u5927\u7ea6510\u74e6\u7684\u529f\u7387\u5c31\u53ef\u4ee5\u8fd0\u884c\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u56fd\u9645\u7a7a\u95f4\u7ad9\u5fae\u91cd\u529b\u5b9e\u9a8c\u7684\u7406\u60f3\u4e4b\u9009\u3002CAL\u4e8e2018\u5e745\u6708\u5b89\u88c5\u5728\u8239\u4e0a\u3002\u76ee\u524d\u7684\u88c5\u7f6e\u4f7f\u7528\u94f7\u539f\u5b50\u6765\u5236\u9020BEC\uff0c\u4f46\u6709\u8ba1\u5212\u5c06\u94be\u539f\u5b50\u52a0\u5165\u6df7\u5408\u7269\u4e2d\uff0c\u4ee5\u63a2\u7d22\u6df7\u5408BEC\u7684\u7269\u7406\u3002\n\u8fd9\u662f\u4e00\u9879\u91cd\u5927\u6210\u5c31\uff0c\u56e0\u4e3a\u4e00\u65e6\u5173\u95ed\u7981\u95ed\u9677\u9631\uff0c\u5728\u592a\u7a7a\u4e2d\u4ea7\u751f\u7684BEC\u6bd4\u5728\u9646\u5730\u5b9e\u9a8c\u5ba4\u4e2d\u7684\u5bff\u547d\u66f4\u957f\uff0c\u8fd9\u8ba9\u7269\u7406\u5b66\u5bb6\u6709\u66f4\u591a\u7684\u65f6\u95f4\u6765\u7814\u7a76\u7269\u8d28\u7684\u5947\u5f02\u72b6\u6001--\u8d85\u8fc7\u4e00\u79d2\uff0c\u800c\u4e0d\u662f\u5730\u7403\u4e0a\u7684\u96f6\u70b9\u51e0\u79d2\u3002\u6b63\u5982\u5c3c\u5c14\u00b7\u5e15\u7279\u5c14\u5728\u201c\u6280\u672f\u8bc4\u8bba\u201d\u4e0a\u6240\u89e3\u91ca\u7684\u90a3\u6837\uff1a\n\u8981\u4f7f\u7528BEC\u8fdb\u884c\u5b9e\u9a8c\uff0c\u60a8\u9700\u8981\u8c03\u4f4e\u6216\u91ca\u653e\u78c1\u9631\u3002\u62e5\u6324\u7684\u539f\u5b50\u4e91\u5c06\u4f1a\u81a8\u80c0\uff0c\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3aBEC\u9700\u8981\u4fdd\u6301\u4f4e\u6e29\uff0c\u6c14\u4f53\u5728\u81a8\u80c0\u65f6\u5f80\u5f80\u4f1a\u51b7\u5374\u3002\u4f46\u662f\uff0c\u5982\u679cBEC\u4e2d\u7684\u539f\u5b50\u76f8\u8ddd\u592a\u8fdc\uff0c\u5b83\u4eec\u7684\u884c\u4e3a\u5c31\u4e0d\u518d\u50cf\u51dd\u805a\u4f53\u4e86\u3002\u8fd9\u5c31\u662f\u8fd1\u5730\u8f68\u9053\u7684\u5fae\u91cd\u529b\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\u3002[\u55b7\u6c14\u63a8\u8fdb\u5b9e\u9a8c\u5ba4(JPL)\u7269\u7406\u5b66\u5bb6\u5927\u536b\u00b7\u963f\u7ef4\u6797(David Aveline)\u662f\u6700\u8fd1\u53d1\u8868\u5728\u300a\u81ea\u7136\u300b(Nature)\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u7684\u5408\u8457\u8005)\u8bf4\uff0c\u5982\u679c\u4f60\u8bd5\u56fe\u589e\u52a0\u5730\u7403\u4e0a\u7684\u4f53\u79ef\uff0c\u91cd\u529b\u53ea\u4f1a\u5c06BEC\u4e91\u4e2d\u5fc3\u7684\u539f\u5b50\u62c9\u5230\u9677\u9631\u7684\u5e95\u90e8\uff0c\u76f4\u5230\u5b83\u4eec\u6ea2\u51fa\uff0c\u626d\u66f2\u51dd\u6790\u6cb9\u6216\u5c06\u5176\u5b8c\u5168\u6467\u6bc1\u3002\n\u4f46\u5728\u5fae\u91cd\u529b\u4e0b\uff0cCAL\u4e2d\u7684\u5de5\u5177\u53ef\u4ee5\u5c06\u539f\u5b50\u4fdd\u6301\u5728\u4e00\u8d77\uff0c\u5373\u4f7f\u9677\u9631\u7684\u4f53\u79ef\u589e\u52a0\u4e86\u3002\u8fd9\u4f7f\u5f97\u51dd\u6790\u6cb9\u7684\u5bff\u547d\u66f4\u957f\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u5141\u8bb8\u79d1\u5b66\u5bb6\u4eec\u6bd4\u4ed6\u4eec\u5728\u5730\u7403\u4e0a\u7814\u7a76\u5b83\u7684\u65f6\u95f4\u66f4\u957f(\u6700\u521d\u7684\u6f14\u793a\u6301\u7eed\u4e861.118\u79d2\uff0c\u5c3d\u7ba1\u76ee\u6807\u662f\u80fd\u591f\u63a2\u6d4b\u5230\u957f\u8fbe10\u79d2\u7684\u4e91\u5c42)\u3002\n\u963f\u7ef4\u6797\u544a\u8bc9\u201c\u5546\u4e1a\u5185\u5e55\u201d\u8bf4\uff0c\u6211\u4eec\u73b0\u5728\u6bcf\u5929\u90fd\u5728\u5236\u4f5cBEC\uff0c\u6bcf\u5929\u6709\u597d\u51e0\u4e2a\u5c0f\u65f6\u3002CAL\u662f\u5b8c\u5168\u8fdc\u7a0b\u63a7\u5236\u7684\u3002\u6211\u4eec\u6b63\u5728\u5730\u9762\u4e0a\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u5b83\uff0c\u786e\u5207\u5730\u8bf4\u5c31\u662f\u5728\u6211\u4eec\u7684\u8d77\u5c45\u5ba4\u91cc\u3002\nCal\u539f\u672c\u5e94\u8be5\u5728\u9700\u8981\u66f4\u6362\u90e8\u4ef6\u4e4b\u524d\u6301\u7eed\u4e00\u5e74\u5de6\u53f3\uff0c\u4f46\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u5b87\u822a\u5458-\u7279\u522b\u662f\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u79d1\u8d6b-\u4e00\u76f4\u5728\u8fdb\u884c\u5173\u952e\u7684\u7ef4\u62a4\uff0c\u4ee5\u5ef6\u957f\u5176\u5bff\u547d\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5361\u5c14\u5df2\u7ecf\u8fd0\u8425\u4e86\u6574\u6574\u4e24\u5e74\u3002\u5728\u6700\u8fd1\u7684\u6539\u8fdb\u4e2d\uff0c\u6709\u4e00\u79cd\u539f\u5b50\u5e72\u6d89\u4eea\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528BEC\u6765\u6d4b\u91cf\u884c\u661f\u8868\u9762\u7684\u4efb\u4f55\u91cd\u529b\u53d8\u5316\u3002BEC\u4e5f\u53ef\u80fd\u6700\u7ec8\u80fd\u591f\u63a2\u6d4b\u5230\u8f74\u5b50\uff0c\u8fd9\u662f\u4e00\u79cd\u7406\u8bba\u4e0a\u7684\u51b7\u6697\u7269\u8d28\u7c92\u5b50\uff0c\u6216\u8005\u88ab\u7528\u6765\u5bfb\u627e\u6697\u80fd\u91cf\u7684\u6765\u6e90\u3002\n\u8fc7\u53bb\uff0c\u6211\u4eec\u5bf9\u81ea\u7136\u754c\u5185\u90e8\u8fd0\u4f5c\u7684\u4e3b\u8981\u89c1\u89e3\u6765\u81ea\u7c92\u5b50\u52a0\u901f\u5668\u548c\u5929\u6587\u5929\u6587\u53f0\uff0c\u52a0\u5dde\u7406\u5de5\u5b66\u9662\u7684\u5408\u8457\u8005\u7f57\u4f2f\u7279\u00b7\u6c64\u666e\u68ee(Robert Thompson)\u544a\u8bc9Space.com\u3002\u6211\u76f8\u4fe1\u5728\u672a\u6765\uff0c\u4f7f\u7528\u51b7\u539f\u5b50\u8fdb\u884c\u7cbe\u786e\u6d4b\u91cf\u5c06\u53d1\u6325\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4f5c\u7528\u3002", "note_en": "Physicists at Caltech and the Jet Propulsion Laboratory have created a rare quantum state of matter known as a  Bose-Einstein condensate (BEC) in space for the first time, according to  a recent paper published in the journal Nature. The physicists did so by placing a compact experimental setup the size of a mini-fridge on board the International Space Station (ISS). It&#39;s called the  Cold Atom Laboratory (CAL), aka &#34;the coolest spot in the universe.&#34;\n BECs are named in honor of Albert Einstein and Indian physicist Satyendra Bose, who predicted the possibility in the 1920s that the wavelike nature of atoms might allow the atoms to spread out and overlap if they are packed closely enough together. At normal temperatures, atoms act like billiard balls, bouncing off one another. Lowering the temperature reduces their speed. If the temperature gets low enough (billionths of a degree above absolute zero) and the atoms are densely packed enough, the different matter waves will be able to &#34;sense&#34; one another and coordinate themselves as if they were one big &#34;superatom.&#34;\n Physicists Eric Cornell and Carl Wieman, then at the University of Colorado&#39;s  JILA facility, created the first BECs in the laboratory in 1995. Using a laser trap, they cooled about 10 million rubidium gas atoms; the cooled atoms were held in place by a magnetic field. But the atoms still weren&#39;t cold enough to form a BEC, so they added a second step, evaporative cooling, in which a web of magnetic fields conspire to kick out the hottest atoms so that the cooler atoms can move more closely together. The process works in much the same way that evaporative cooling occurs with your morning cup of coffee; the hotter atoms rise to the top of the magnetic trap and &#34;jump out&#34; as steam.\n By September 2001, over three dozen teams had replicated the experiment. The discovery launched an entirely new branch of physics. BECs enable scientists to study the strange, small world of quantum physics as if they were looking at it through a magnifying glass; a BEC &#34;amplifies&#34; atoms in the same way that lasers amplify photons. Wieman, Cornell, and Wolfgang Ketterle shared the  2001 Nobel Prize in Physics for their achievement.\n    While the laboratory equipment required to make a BEC on Earth can easily fill a room, JPL&#39;s miniaturized CAL is just 14 cubic feet and only needs about 510 watts to operate, making it ideal for ISS microgravity experiments. CAL was installed on board in May 2018. Right now the setup uses rubidium atoms to make the BECs, but there are plans to incorporate potassium atoms into the mix to explore the physics of mixed BECs.\n It&#39;s a significant achievement because BECs created in space last longer than they do in terrestrial laboratories once the confining traps are switched off, giving physicists a bit more time to study the exotic state of matter\u2014over one second, compared to mere fractions of a second on Earth. As  Neel Patel explains at Technology Review:\n To run experiments using a BEC, you need to turn down or release the magnetic trap. The cloud of crowded atoms will expand, which is useful because BECs need to stay cold, and gases tend to cool off as they expand. But if the atoms in a BEC get too far apart, they no longer behave like a condensate. This is where the microgravity of low Earth orbit comes into play. If you try to increase the volume on Earth, says [JPL physicist David Aveline, a co-author of the recent paper in Nature], gravity will just pull the atoms in the center of the BEC cloud down to the bottom of the trap until they spill out, distorting the condensate or ruining it entirely.\n But in microgravity, the tools in the CAL can hold the atoms together even as the trap&#39;s volume increases. That makes for a longer-lived condensate, which in turn allows scientists to study it longer than they could on Earth (this initial demonstration ran for 1.118 seconds, although the goal is to be able to detect the cloud for up to 10 seconds).\n &#34;We&#39;re getting to make BECs on a daily basis, for many hours a day,&#34; Aveline  told Business Insider. &#34;CAL is completely remote-controlled. We&#39;re running it from computers on the ground, literally inside our living rooms.&#34;\n CAL was originally supposed to last for a year or so before requiring replacement parts, but the ISS astronauts\u2014notably Christina Koch\u2014have been performing crucial maintenance to extend its lifetime. CAL has been operating for a full two years now. Among the recent enhancements is an atom interferometer, which can use the BECs to measure any changes in gravity on a planetary surface. BECs might also eventually be able to detect  axions, a theoretical cold  dark matter particle, or be used to hunt for sources of  dark energy.\n &#34;In the past, our major insights into the inner workings of nature have come from particle accelerators and astronomical observatories,&#34; co-author Robert Thompson of Caltech  told Space.com. &#34;In the future, I believe precision measurements using cold atoms will play an increasingly important role.&#34;", "posttime": "2020-06-16 12:32:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fd\u9645,create,\u539f\u5b50", "title": "\u7269\u7406\u5b66\u5bb6\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e0a\u521b\u9020\u4e86\u5f02\u56fd\u60c5\u8c03\u7684\u201c\u7b2c\u4e94\u79cd\u7269\u8d28\u201d\u3002", "title_en": "Physicists create exotic \u201cfifth form of matter\u201d on board the ISS", "transed": 1, "url": "https://arstechnica.com/science/2020/06/a-chilling-first-physicists-create-exotic-fifth-form-of-matter-on-board-the-iss/", "via": "", "real_tags": ["\u56fd\u9645", "create", "\u539f\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "72539732323d2807d3961b9f798992dc.jpg", "infoid": 1006764, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u9762\u662f\u53cd\u5c04\u6700\u5c0f\u7684\u7403\u4f53(\u53cd\u5c04\u51e0\u7387\uff01)\u3002\u4e3a0.02\uff0c\u5219IOR\u4ece1(\u5de6\u4fa7)\u52302(\u53f3\u4fa7)\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u53f3\u8fb9\u7684\u90a3\u4e2a\u770b\u8d77\u6765\u50cf\u4e00\u9897\u73cd\u73e0\u3002(\u8fd9\u662f\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c2\u573a\u666f)\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c&#34\uff1bIOR&#34\uff1b\u7684\u6d6e\u70b9\u4e5f\u9700\u8981\u6dfb\u52a0\u5230SMaterialInfo\u3002\u8fd9\u662f\u4e0a\u4e00\u7ae0\u672b\u5c3e\u7684\u573a\u666f\uff0c\u4f7f\u7528\u83f2\u6d85\u8033\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u4f7f\u7528IOR 1.0\u3002\n\u8fd9\u662f\u4e0a\u4e00\u7ae0\u4e2d\u6ca1\u6709\u83f2\u5185\u5c14\u7684\u573a\u666f\u3002\u5dee\u522b\u975e\u5e38\u7ec6\u5fae\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u6d4f\u89c8\u5668\u9009\u9879\u5361\u4e2d\u6253\u5f00\u6bcf\u4e2a\u56fe\u50cf\u4ee5\u6765\u56de\u7ffb\u8f6c\u3002\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\u9ec4\u8272\u548c\u7c89\u8272\u7403\u4f53\u7684\u8fb9\u7f18\u3002\u83f2\u6d85\u8033\u5bf9\u7a0d\u5fae\u6709\u5149\u6cfd\u7684\u5bf9\u8c61\u4ea7\u751f\u4e86\u6700\u5927\u7684\u4e0d\u540c\u3002\u975e\u5e38\u6709\u5149\u6cfd\u6216\u5b8c\u5168\u6ca1\u6709\u5149\u6cfd\u7684\u7269\u4f53\u4e0d\u4f1a\u6709\u660e\u663e\u7684\u83f2\u6d85\u5c14\u6548\u679c\u3002\n\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u968f\u673a\u6570\u6765\u9009\u62e9\u53cd\u5c04\u5149\u7ebf\u662f\u6f2b\u53cd\u5c04\u5149\u7ebf\u8fd8\u662f\u955c\u9762\u53cd\u5c04\u5149\u7ebf\uff0c\u5e76\u5bf9\u955c\u9762\u53cd\u5c04\u7684\u6982\u7387\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\n\u5728\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u541e\u5410\u91cf\u9664\u4ee5\u5b9e\u9645\u9009\u62e9\u5c04\u7ebf\u7684\u6982\u7387(\u4ee5\u4e0d\u4f7f\u4e00\u6761\u5c04\u7ebf\u5728\u6700\u7ec8\u5e73\u5747\u503c\u4e2d\u6bd4\u53e6\u4e00\u6761\u66f4\u591a)\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u8fd9\u6837\u505a\u3002\u8fd9\u662f\u4e00\u4e2a\u201c\u6570\u5b66\u7ec6\u8282\u201d\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u968f\u4fbf\u653e\u8fdb\u53bb\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u3002\n\u6839\u636e\u968f\u673a\u6eda\u52a8\u627e\u5230\u8bbe\u7f6e\u70b9\u955c\u9762\u53cd\u5c04\u6d6e\u70b9\u7684\u4f4d\u7f6e\u3002\u628a\u8fd9\u4e2a\u653e\u5728\u4e0b\u9762\uff1a\n\u4e0e\u4e0a\u56fe\u6700\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u7c89\u8272\u548c\u9ec4\u8272\u7684\u7403\u4f53\u7a0d\u5fae\u53d8\u4eae\u4e86\u4e00\u70b9\uff0c\u5f53\u7136\u5b83\u4eec\u7684\u53cd\u5c04\u4e5f\u662f\u5982\u6b64\uff01\n\u597d\u73a9\u7684\u65f6\u95f4\u5230\u4e86\uff01\u6211\u4eec\u5c06\u5728\u8fd9\u4e00\u8282\u4e2d\u8ba8\u8bba\u8fd9\u4e9b\u7279\u6027\u5e76\u663e\u793a\u7ed3\u679c\uff0c\u7136\u540e\u5728\u4e0b\u4e00\u8282\u4e2d\u5c55\u793a\u5982\u4f55\u5c06\u5b83\u4eec\u653e\u5165\u8def\u5f84\u8ddf\u8e2a\u5668\u4e2d\u3002\n\u5173\u4e8e\u7b2c\u4e8c\u4e2a\u2026\u7684\u6700\u540e\u4e00\u7bc7\u5e16\u5b50\u7684\u601d\u8003\u3002\u5728\u7b80\u5355\u6e32\u67d3\u548c\u65e7\u5f0f\u5149\u7ebf\u8ddf\u8e2a\u5668\u4e2d\uff0c\u53cd\u5c04\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4f7f\u7528Reflect()\u516c\u5f0f/\u51fd\u6570\u6765\u67e5\u627e\u5149\u7ebf\u51fb\u4e2d\u66f2\u9762\u7684\u6700\u9510\u5229\u7684\u955c\u9762\u53cd\u5c04\u89d2\uff0c\u5e76\u8ddf\u8e2a\u8be5\u5149\u7ebf\u3002\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u5411\u53cd\u5c04\u5149\u7ebf\u6ce8\u5165\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u6750\u8d28\u7c97\u7cd9\u5ea6\u503c\u5728\u5b8c\u5168\u53cd\u5c04\u7684\u5149\u7ebf\u548c\u6cd5\u7ebf\u5b9a\u5411\u534a\u7403\u4e0a\u7684\u968f\u673a\u5149\u7ebf\u4e4b\u95f4\u8fdb\u884c\u7ec6\u5fae\u8c03\u6574\u3002\n\u5bf9\u4e8e\u7b80\u5355\u6e32\u67d3\u548c\u65e7\u5f0f\u5149\u7ebf\u8ddf\u8e2a\u5668\uff0c\u6709\u4e00\u4e2arefract()\u516c\u5f0f/\u51fd\u6570\uff0c\u8be5\u516c\u5f0f/\u51fd\u6570\u4e3a\u5149\u7ebf\u51fb\u4e2d\u66f2\u9762\u627e\u5230\u4e00\u4e2a\u975e\u5e38\u9510\u5229\u7684\u6298\u5c04\u89d2\u5ea6\uff0c\u5176\u4e2d\u8be5\u66f2\u9762\u5177\u6709\u7279\u5b9a\u7684IOR(\u6298\u5c04\u7387)\u3002\u4e0e\u83f2\u6d85\u8033\u4f7f\u7528\u7684\u53c2\u6570\u76f8\u540c)\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\uff0c\u7531\u4e8e\u6298\u5c04\u5149\u7ebf\u7a7f\u8fc7\u5bf9\u8c61\u800c\u4e0d\u662f\u53cd\u5c04\u5bf9\u8c61\uff0c\u56e0\u6b64\u968f\u673a\u534a\u7403\u5c06\u4ee5\u66f2\u9762\u7684\u8d1f\u6cd5\u7ebf\u4e3a\u65b9\u5411\u3002\n\u4e0b\u9762\u662f\u6298\u5c04\u7403\u4ece\u5de6\u4fa7\u7684IOR 1\u5230\u53f3\u4fa7\u76841.5\u7684\u56fe\u50cf\u3002\u8bf7\u6ce8\u610f\uff0c\u968f\u7740IOR\u7684\u589e\u52a0\uff0c\u80cc\u666f\u662f\u5982\u4f55\u626d\u66f2\u7684\uff0c\u8fd8\u8981\u6ce8\u610f\u7403\u4f53\u4e0b\u9762\u7684\u706f\u5149\u662f\u5982\u4f55\u805a\u7126\u7684\u3002\u8fd9\u4e9b\u90fd\u662f\u201c\u7126\u6563\u201d\uff0c\u5bf9\u4e8e\u5176\u4ed6\u5f62\u72b6\u7684\u7f51\u683c\u4f1a\u53d8\u5f97\u66f4\u52a0\u6709\u8da3\u3002(\u8fd9\u662f\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c1)\u3002\n\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u4e2d\u95f4\u7403\u4f53\u4e0b\u9762\u7684\u5730\u9762\u4e0a\u6709\u4e00\u4e9b\u9ed1\u8272\u7684\u6761\u7eb9\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e9b\u65f6\uff0c\u6211\u4ee5\u4e3a\u8fd9\u662f\u4e00\u4e2abug\uff0c\u4f46\u901a\u8fc7\u5b9e\u9a8c\u53d1\u73b0\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5929\u7a7a(\u5929\u76d2\u9876\u90e8)\u4e2d\u7684\u56fe\u50cf\u7684\u6295\u5f71\u3002\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6f14\u793a\u8fd9\u4e00\u70b9\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u573a\u666f\uff0c\u5176\u4e2d\u7403\u4f53\u90fd\u5177\u6709\u76f8\u540c\u7684IOR\uff0c\u4f46\u5b83\u4eec\u4e0e\u5730\u9762\u7684\u8ddd\u79bb\u4e0d\u540c\uff0c\u8fd9\u4f1a\u805a\u7126/\u6563\u7126\u901a\u8fc7\u7403\u4f53\u6295\u5f71\u7684\u56fe\u50cf\uff0c\u4ee5\u53ca\u7403\u4f53\u4e0a\u65b9\u7684\u706f\u5149\u3002(\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c4)\u3002\n\u6362\u4e2a\u5929\u7bb1\uff0c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\u3002\u6ce8\u610f\u5230\u5de6\u8fb9\u5730\u9762\u4e0a\u7684\u6295\u5f71\u6709\u90a3\u4e2a\u5706\u5f62\u5417\uff1f\n\u62ac\u5934\u770b\u7403\u4f53\u4e0a\u65b9\u7684\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6295\u5c04\u5230\u5730\u9762\u4e0a\u7684\u90a3\u4e2a\u5706\u5708\u3002\u8fd9\u662f\u5173\u4e8e\u8def\u5f84\u8ddf\u8e2a\u2026\u6700\u9177\u7684\u4e8b\u60c5\u4e4b\u4e00\u3002\u4f60\u53ef\u4ee5\u201c\u514d\u8d39\u201d\u83b7\u5f97\u5f88\u591a\u6280\u5de7\uff0c\u8fd9\u4e9b\u6280\u5de7\u53ea\u662f\u6570\u5b66\u4e2d\u7684\u65b0\u5174\u7279\u5f81\u3002\u8fd9\u4e0e\u5728\u5149\u6805\u5316/\u975e\u8def\u5f84\u8ddf\u8e2a\u6e32\u67d3\u4e2d\u63a5\u8fd1\u56fe\u5f62\u6709\u5f88\u5927\u4e0d\u540c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u60a8\u60f3\u8981\u7684\u529f\u80fd\uff0c\u60a8\u57fa\u672c\u4e0a\u90fd\u5fc5\u987b\u4e3a\u5176\u7f16\u5199\u663e\u5f0f\u4ee3\u7801\u624d\u80fd\u8fd1\u4f3c\u3002\n\u56de\u5230\u7c97\u7cd9\u5ea6\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528IOR 1.1\u7684\u6298\u5c04\u7403\u4f53\uff0c\u4f46\u7c97\u7cd9\u5ea6\u4ece\u5de6\u4fa7\u76840\u5230\u53f3\u4fa7\u76840.5\u4e0d\u7b49\u3002\u8bf7\u6ce8\u610f\uff0c\u7403\u4f53\u672c\u8eab\u660e\u663e\u53d8\u5f97\u66f4\u52a0\u7c97\u7cd9\uff0c\u4f46\u5176\u9634\u5f71/\u7126\u6563\u4e5f\u4f1a\u968f\u7c97\u7cd9\u5ea6\u53d8\u5316\u3002(\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c6)\n\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u7403\u4f53\u7684\u8868\u9762\u624d\u6709\u4efb\u4f55\u7c97\u7cd9\u5ea6\u3002\u5982\u679c\u4f60\u80fd\u62ff\u51fa\u8fd9\u4e9b\u7403\u4e2d\u7684\u4e00\u4e2a\uff0c\u628a\u5b83\u5288\u6210\u4e24\u534a\uff0c\u91cc\u9762\u5c31\u4f1a\u5b8c\u5168\u5149\u6ed1\u548c\u900f\u660e\u3002\u5728\u672a\u6765\u7684\u5e16\u5b50\u4e2d(\u6211\u60f3\u662f\u4e0b\u4e00\u4e2a\uff01)\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u5728\u5bf9\u8c61\u5185\u90e8\u5236\u4f5c\u4e00\u4e9b\u7c97\u7cd9\u5ea6\uff0c\u8fd9\u4e5f\u662f\u5982\u4f55\u6e32\u67d3\u70df\u96fe\u3001\u96fe\u3001\u4e91\u4ee5\u53ca\u76ae\u80a4\u3001\u725b\u5976\u548c\u8721\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\n\u4f60\u53ef\u4ee5\u6dfb\u52a0\u5230\u900f\u660e\u7269\u4f53\u4e0a\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u529f\u80fd\u662f\u201c\u5438\u6536\u201d\uff0c\u8fd9\u610f\u5473\u7740\u5149\u7ebf\u5728\u7a7f\u8fc7\u7269\u4f53\u65f6\u4f1a\u88ab\u5438\u6536\u4e00\u6bb5\u8ddd\u79bb\u3002\n\u6211\u4eec\u5c06\u5229\u7528\u6bd4\u5c14\u5b9a\u5f8b\uff0c\u5f97\u5230\u901a\u8fc7\u7269\u4f53\u7684\u5149\u7684\u4e58\u6570\uff0c\u4ece\u800c\u4f7f\u5149\u51cf\u5c11\u3002\u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u989c\u8272\u901a\u9053\u4f7f\u7528\u4e0d\u540c\u7684\u5438\u6536\u503c\uff0c\u4ee5\u4fbf\u5f53\u5149\u7ebf\u7a7f\u8fc7\u5bf9\u8c61\u65f6\uff0c\u4e0d\u540c\u7684\u989c\u8272\u5438\u6536\u5f97\u66f4\u5feb\u6216\u66f4\u6162\u3002\n\u4e0b\u9762\u662f\u4e00\u4e9b\u5438\u6536\u7a0b\u5ea6\u9010\u6e10\u63d0\u9ad8\u7684\u7403\u4f53\u3002\u767e\u5206\u6bd4\u500d\u589e\u4ece\u5de6\u4fa7\u76840\u5230\u53f3\u4fa7\u76841\uff0c\u5e76\u4e58\u4ee5(1.0\uff0c2.0\uff0c3.0)\u4ee5\u83b7\u5f97\u5438\u6536\u503c\u3002\u8bf7\u6ce8\u610f\u7403\u4f53\u5982\u4f55\u66f4\u6539\uff0c\u4f46\u7126\u6563/\u9634\u5f71\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u662f\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c3\u3002\n\u4f60\u53ef\u4ee5\u628a\u7c97\u7cd9\u5ea6\u548c\u4e13\u6ce8\u5ea6\u7ed3\u5408\u8d77\u6765\uff0c\u505a\u51fa\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\u3002\u4e0b\u9762\u662f\u76f8\u540c\u7684\u7403\u4f53\uff0c\u4f46\u6709\u4e00\u4e9b\u5438\u6536(\u573a\u666f\u5b9a\u4e49\u503c0)\u3002\n\u4e0b\u9762\u662f\u6765\u81ea\u4e0d\u540c\u89c6\u56fe\u7684\u76f8\u540c\u573a\u666f\uff0c\u5176\u4e2d\u663e\u793a\u4e86\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7740\u8272\u662f\u591a\u4e48\u4e30\u5bcc\u3002\n\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u65e2\u6709\u955c\u9762\u7c97\u7cd9\u5ea6\u4e5f\u6709\u6298\u5c04\u7c97\u7cd9\u5ea6\u3002\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u201c\u8868\u9762\u7c97\u7cd9\u5ea6\u201d\uff0c\u4f9b\u4e24\u8005\u4f7f\u7528\u3002\u4f60\u5931\u53bb\u4e86\u4f7f\u53cd\u5c04\u5177\u6709\u4e0e\u6298\u5c04\u4e0d\u540c\u7684\u7c97\u7cd9\u5ea6\u7684\u80fd\u529b\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u635f\u5931\u3002\n\u6b64\u5916\uff0c\u8fd8\u6709\u955c\u9762\u53cd\u5c04\u673a\u4f1a\u548c\u6298\u5c04\u673a\u4f1a\uff0c\u9690\u542b\u6f2b\u53cd\u5c04\u673a\u4f1a\u4f7f\u5176\u603b\u548c\u4e3a1.0\u3002\n\u4e0e\u5176\u90a3\u6837\u505a\u673a\u4f1a\uff0c\u53e6\u4e00\u4ef6\u53ef\u4ee5\u5c1d\u8bd5\u7684\u4e8b\u60c5\u662f\u4f7f\u6f2b\u53cd\u5c04\u673a\u4f1a\u662f\u53cd\u7167\u7387\u6210\u5206\u7684\u603b\u548c\uff0c\u955c\u9762\u53cd\u5c04\u673a\u4f1a\u662f\u955c\u9762\u53cd\u5c04\u989c\u8272\u6210\u5206\u7684\u603b\u548c\uff0c\u6298\u5c04\u673a\u4f1a\u662f\u6298\u5c04\u989c\u8272\u6210\u5206\u7684\u603b\u548c\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u5168\u90e8\u9664\u4ee5\u6240\u67093\u6b21\u673a\u4f1a\u7684\u603b\u548c\uff0c\u8fd9\u6837\u5b83\u4eec\u7684\u603b\u548c\u5c31\u662f1.0\u3002\n\u8fd9\u5c06\u4f7f\u60a8\u6446\u8131\u8fd9\u4e9b\u767e\u5206\u6bd4\uff0c\u5e94\u8be5\u662f\u76f8\u5f53\u4e0d\u9519\u7684\u9009\u62e9\u3002\u552f\u4e00\u5947\u602a\u7684\u662f\uff0c\u4e0e\u5176\u4ed6\u989c\u8272\u76f8\u6bd4\uff0c\u6298\u5c04\u989c\u8272\u7684\u542b\u4e49\u6709\u70b9\u98a0\u5012\u3002\u5176\u4ed6\u662f\u8ba9\u591a\u5c11\u5149\u901a\u8fc7\uff0c\u4f46\u6298\u5c04\u989c\u8272\u662f\u963b\u6321\u591a\u5c11\u5149\u3002\u60a8\u53ef\u80fd\u4f1a\u66f4\u5e78\u8fd0\u5730\u4ece(1\uff0c1\uff0c1)\u4e2d\u51cf\u53bb\u6298\u5c04\u989c\u8272\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u4ea7\u751f\u6298\u5c04\u673a\u4f1a\u3002\n\u7531\u4e8e\u5149\u7ebf\u7684\u706f\u5149\u9664\u4ee5\u9009\u62e9\u8be5\u7c7b\u578b\u5149\u7ebf(\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u53cd\u5c04\u6216\u6298\u5c04)\u7684\u6982\u7387\uff0c\u56e0\u6b64\u5982\u4f55\u9009\u62e9\u7528\u4e8e\u9009\u62e9\u5149\u7ebf\u7c7b\u578b\u7684\u6982\u7387\u5b9e\u9645\u4e0a\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u662f\u5f53\u6982\u7387\u4e0e\u50cf\u7d20\u6700\u7ec8\u989c\u8272\u7684\u8d21\u732e\u66f4\u597d\u5730\u5339\u914d\u65f6(\u8d21\u732e\u8d8a\u591a=\u767e\u5206\u6bd4\u8d8a\u9ad8)\uff0c\u60a8\u5c06\u66f4\u5feb\u5730\u83b7\u5f97\u66f4\u597d(\u66f4\u6536\u655b)\u7684\u56fe\u50cf\u3002\u8fd9\u662f\u76f4\u63a5\u7684\u91cd\u8981\u62bd\u6837\uff0c\u6211\u5c31\u5230\u6b64\u4e3a\u6b62\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u7559\u8fd9\u4e2a\u968f\u610f\u7684\ud83d\ude42\u3002\n\u4e0b\u4e00\u4e2a\u53d8\u5316\u662f\u89e3\u51b3\u6211\u4eec\u53ef\u80fd\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u4eec\u7684\u6750\u8d28\u6709\u76f8\u5f53\u591a\u7684\u7ec4\u4ef6\uff0c\u5728\u8bbe\u7f6e\u6750\u8d28\u5c5e\u6027\u65f6\u5f88\u5bb9\u6613\u5fd8\u8bb0\u8bbe\u7f6e\u4e00\u4e2a\u7ec4\u4ef6\u3002\u5982\u679c\u60a8\u66fe\u7ecf\u5fd8\u8bb0\u8bbe\u7f6e\u4e00\u4e2a\u503c\uff0c\u60a8\u5c06\u5177\u6709\u672a\u521d\u59cb\u5316\u7684\u503c\uff0c\u6216\u8005\u6765\u81ea\u5148\u524d\u5149\u7ebf\u547d\u4e2d\u7684\u503c\u4e0d\u518d\u6709\u6548\u3002\u8fd9\u5c06\u4f7f\u4e00\u4e9b\u771f\u6b63\u96be\u4ee5\u8ddf\u8e2a\u7684bug\u4ee5\u53ca\u7531\u4e8e\u672a\u521d\u59cb\u5316\u503c(AFAIK)\u800c\u5bfc\u81f4\u7684\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u53ef\u80fd\u6027\u968f\u4e4b\u800c\u6765\u3002\u6240\u4ee5\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5c06\u6750\u6599\u521d\u59cb\u5316\u4e3a\u5927\u81f4\u4e3a\u96f6\uff0c\u4f46\u4e3b\u8981\u662f\u4e3a\u4e86\u5408\u7406\u7684\u503c\u3002\u5176\u601d\u60f3\u662f\u8c03\u7528\u6b64\u51fd\u6570\u6765\u521d\u59cb\u5316\u6750\u8d28\uff0c\u7136\u540e\u8bbe\u7f6e\u60a8\u5173\u5fc3\u7684\u7279\u5b9a\u503c\u3002\n\u6bcf\u6b21\u8bbe\u7f6e\u6750\u8d28\u4fe1\u606f(\u4f8b\u5982\uff0c\u6bcf\u6b21\u5149\u7ebf\u4ea4\u53c9\u70b9\u901a\u8fc7\u65f6)\uff0c\u6211\u9996\u5148\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u7136\u540e\u8bbe\u7f6e\u6211\u5173\u5fc3\u7684\u7279\u5b9a\u503c\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u5728GetColorForRay()\u4e2d\u58f0\u660eSRayHitInfo\u7ed3\u6784\u672c\u8eab\u65f6\uff0c\u6211\u4e5f\u4f1a\u8c03\u7528\u5b83\u3002\n\u63a5\u4e0b\u6765\uff0c\u8fd8\u8981\u5411SRayHitInfo\u6dfb\u52a0\u4e00\u4e2abool\u201cfrom mInside\u201d\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\uff0c\u624d\u80fd\u77e5\u9053\u5f53\u6211\u4eec\u4e0e\u4e00\u4e2a\u7269\u4f53\u76f8\u4ea4\u65f6\uff0c\u6211\u4eec\u662f\u4ece\u5185\u90e8\u8fd8\u662f\u4ece\u5916\u90e8\u51fb\u4e2d\u5b83\u3002\u6298\u5c04\u4f7f\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u7269\u4f53\u5185\u90e8\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u65f6\u5019\u53d1\u751f\u7684\u3002\n\u5728\u4fee\u6539\u5149\u7ebf\u547d\u4e2d\u4fe1\u606f\u7684TestQuadTrace()\u4e2d\uff0c\u786e\u4fdd\u5c06from Inside\u8bbe\u7f6e\u4e3afalse\u3002\u6211\u4eec\u8981\u8bf4\u7684\u662f\uff0c\u56db\u5408\u9662\u662f\u6ca1\u6709\u5185\u90e8\u7684\u3002\u4f60\u53ef\u4ee5\u8ba9\u56db\u8fb9\u5f62\u7684\u8d1f\u9762(\u57fa\u4e8e\u5b83\u7684\u6b63\u5e38)\u5728\u91cc\u9762\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u7528\u56db\u8fb9\u5f62\u5efa\u9020\u76d2\u5b50\u7b49\u7b49\uff0c\u4f46\u6211\u51b3\u5b9a\u4e0d\u53bb\u5904\u7406\u8fd9\u4e2a\u590d\u6742\u7684\u95ee\u9898\u3002\nTestSphereTrace()\u5df2\u7ecf\u5177\u6709\u5149\u7ebf\u662f\u5426\u4ece\u5185\u90e8\u51fb\u4e2d\u7403\u4f53\u7684\u6982\u5ff5\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5c06\u5176\u516c\u5f00\u7ed9\u8c03\u7528\u8005\u3002\u6211\u53ea\u662f\u8ba9\u5b83\u6839\u636e\u5df2\u7ecf\u5b58\u5728\u7684Inside bool\u8bbe\u7f6e\u6765\u81eaInside bool\u7684\u5149\u7ebf\u547d\u4e2d\u4fe1\u606f\u3002\n\u7c97\u7cd9\u5ea6\u548c\u955c\u9762\u53cd\u5c04\u767e\u5206\u6bd4\u7684\u5404\u79cd\u7528\u9014\u9700\u8981\u66f4\u6539\u4e3aspecularRough\u548cspecularChance\u3002\n\u56de\u5f39\u5faa\u73af\u5185\u7684\u6700\u7ec8\u7740\u8272\u6539\u53d8\u4e86\u5f88\u591a\uff0c\u6240\u4ee5\u6211\u5c06\u5728\u4e0b\u9762\u7c98\u8d34\u8fd9\u4e2a\uff0c\u4f46\u662f\u5b83\u7684\u6ce8\u91ca\u5f88\u91cd\uff0c\u6240\u4ee5\u5e0c\u671b\u5b83\u662f\u6709\u610f\u4e49\u7684\u3002\n\u6211\u8ba4\u4e3a\u6700\u503c\u5f97\u89e3\u91ca\u7684\u662f\u5438\u6536\u662f\u5982\u4f55\u53d1\u751f\u7684\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a\u7269\u4f53\u65f6\u4f1a\u53d1\u751f\u591a\u5c11\u5438\u6536\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5149\u7ebf\u4f1a\u7a7f\u8fc7\u8fd9\u4e2a\u7269\u4f53\u591a\u8fdc\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u66f4\u6539\u541e\u5410\u91cf\u6765\u8003\u8651\u8fdb\u5165\u5bf9\u8c61\u65f6\u7684\u5438\u6536\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u7b49\u5f85\uff0c\u76f4\u5230\u6211\u4eec\u51fb\u4e2d\u7269\u4f53\u7684\u8fdc\u4fa7\uff0c\u7136\u540e\u624d\u80fd\u8ba1\u7b97\u5438\u6536\u5e76\u66f4\u65b0\u541e\u5410\u91cf\u6765\u89e3\u91ca\u5b83\u3002\u770b\u5f85\u8fd9\u4e00\u95ee\u9898\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u201c\u5f53\u6211\u4eec\u4ece\u5185\u90e8\u51fb\u4e2d\u7269\u4f53\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u8ba1\u7b97\u548c\u5e94\u7528\u5438\u6536\u201d\u3002\u8fd9\u8fd8\u53ef\u4ee5\u5904\u7406\u5149\u7ebf\u5728\u79bb\u5f00\u4e4b\u524d\u53ef\u80fd\u5728\u5bf9\u8c61\u5185\u90e8\u591a\u6b21\u53cd\u5f39\u7684\u60c5\u51b5(\u7531\u4e8e\u5bf9\u8c61\u5185\u90e8\u53d1\u751f\u7684\u955c\u9762\u53cd\u5c04\u548c\u83f2\u6d85\u5c14)-\u6bcf\u6b21\u5185\u90e8\u955c\u9762\u53cd\u5c04\u53cd\u5f39\u65f6\u90fd\u4f1a\u8ba1\u7b97\u5e76\u5e94\u7528\u5438\u6536\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u505a\u6240\u6709\u8fd9\u4e9b\u5f88\u9177\u7684\u6e32\u67d3\u4e86\uff0c\u76f8\u673a\u5361\u5728\u4e00\u4e2a\u5730\u65b9\u6709\u70b9\u7cdf\u7cd5\u3002\n\u80fd\u591f\u79fb\u52a8\u76f8\u673a\uff0c\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u770b\u4e1c\u897f\uff0c\u771f\u7684\u5f88\u6709\u8da3\u3002\u5b83\u5728\u8c03\u8bd5\u65b9\u9762\u4e5f\u5f88\u6709\u5e2e\u52a9--\u5c31\u50cf\u6211\u4eec\u80fd\u770b\u5230\u5929\u7bb1\u5929\u82b1\u677f\u4e0a\u7684\u5706\u5708\u4e00\u6837\uff01\n\u9996\u5148\u5c06\u6b64\u51fd\u6570\u62d6\u653e\u5230Buffer A\u9009\u9879\u5361\u4e2d\uff0c\u5c31\u5728mainImage\u51fd\u6570\u7684\u6b63\u4e0a\u65b9\u3002\u60a8\u53ef\u4ee5\u5c06\u5e38\u91cf\u7559\u5728\u90a3\u91cc\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u653e\u5728\u516c\u5171\u9009\u9879\u5361\u4e2d\uff0c\u65e0\u8bba\u60a8\u613f\u610f\u505a\u4ec0\u4e48\u3002\nmainImage\u51fd\u6570\u5728RNG\u7684\u64ad\u79cd\u548c\u5149\u7ebf\u8ddf\u8e2a\u4e4b\u95f4\u4e5f\u6709\u76f8\u5f53\u5927\u7684\u53d8\u5316-\u57fa\u672c\u4e0a\u662f\u63a7\u5236TAA\u7684\u6296\u52a8\u548c\u8ba1\u7b97\u76f8\u673a\u5411\u91cf\u7684\u4e1c\u897f\u3002\u4e0b\u9762\u662f\u6574\u4e2a\u51fd\u6570\uff0c\u5e0c\u671b\u6709\u8db3\u591f\u597d\u7684\u6ce8\u91ca\u6765\u7406\u89e3\u3002\n\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u62d6\u52a8\u9f20\u6807\u5de6\u952e\u5728\ud83d\ude42\u5468\u56f4\u79fb\u52a8\u76f8\u673a\u3002\n\u5982\u679c\u4f60\u6309\u7167\u8fd9\u4e9b\u6b65\u9aa4\u4ece\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u573a\u666f\uff0c\u5e76\u6539\u53d8\u4e2d\u5fc3\u7403\u4f53\u5230\u4e00\u70b9\u6298\u5c04\uff0c\u4f60\u7ec8\u4e8e\u53ef\u4ee5\u4ece\u4e00\u4e2a\u4e0d\u540c\u7684\u89d2\u5ea6\u67e5\u770b\u957f\u65b9\u4f53\uff01\n\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u60f3\u5c55\u793a\u4e00\u4e9b\u6298\u5c04\u7403\uff0c\u6298\u5c04\u7387\u4e3a1\uff0c\u6298\u5c04\u7c97\u7cd9\u5ea6\u4e3a0\uff0c\u4f46\u5728\u5de6\u4fa7\u7684\u7eaf\u6298\u5c04\u8868\u9762\u548c\u53f3\u4fa7\u7684\u7eaf\u6f2b\u53cd\u5c04\u8868\u9762\u4e4b\u95f4\u6e10\u53d8\u3002\u8fd9\u662f\u7740\u8272\u5668\u73a9\u5177\u4e2d\u7684\u573a\u666f\u5b9a\u4e49\u503c5\u3002\n\u5c06\u6b64\u573a\u666f\u4e0e\u524d\u9762\u663e\u793a\u7684\u7eaf\u5438\u6536\u573a\u666f\u548c\u7eaf\u7c97\u7cd9\u573a\u666f\u8fdb\u884c\u6bd4\u8f83\u3002\n\u968f\u7740\u6548\u679c\u7684\u663e\u73b0\uff0c\u8fd9\u4e09\u4e2a\u4eba\u90fd\u66f4\u591a\u5730\u63a9\u76d6\u4e86\u4ed6\u4eec\u80cc\u540e\u7684\u4e1c\u897f\u3002\u6240\u6709\u8fd9\u4e9b\u63aa\u65bd\u4e5f\u53ef\u80fd\u5728\u4efb\u4f55\u7a0b\u5ea6\u4e0a\u4ea7\u751f\u90e8\u5206\u6709\u6548\u7684\u6548\u679c\u3002\n\u5f53\u6211\u4eec\u5728\u5149\u6805\u5316\u7684\u573a\u666f\u4e2d\u8fdb\u884c\u4f20\u7edf\u7684Alpha\u6df7\u5408\u65f6\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u8fd9\u4e9b\u4e2d\u7684\u54ea\u4e00\u4e2a\uff1f\n\u5982\u679c\u534a\u900f\u660e\u5bf9\u8c61\u7684\u9634\u5f71\u662f\u5f69\u8272\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5438\u6536\u662f\u5b83\u7684\u6700\u4f73\u6a21\u578b\u3002\u5982\u679c\u534a\u900f\u660e\u5bf9\u8c61\u7684\u9634\u5f71\u521a\u521a\u53d8\u6697\uff0c\u90e8\u5206\u6f2b\u53cd\u5c04\u8868\u9762\u53ef\u80fd\u662f\u6700\u597d\u7684\u6a21\u578b(\u4e5f\u53ef\u80fd\u662f\u5438\u6536)\u3002\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u6295\u5c04\u9634\u5f71(\u6216\u51e0\u4e4e\u6ca1\u6709\u6295\u5c04)\uff0c\u5219\u5b83\u662f\u7531\u4e8e\u5bf9\u8c61\u8868\u9762\u6216\u5bf9\u8c61\u5185\u90e8\u7684\u7c97\u7cd9\u5ea6\u800c\u53d8\u5f97\u534a\u900f\u660e\u7684\u5bf9\u8c61(\u6211\u4eec\u7a0d\u540e\u5c06\u8ba8\u8bba\u8fd9\u79cd\u60c5\u51b5)\u3002\u5982\u679c\u5bf9\u8c61\u7684\u5916\u89c2(\u7167\u660e)\u4e0e\u4ec5\u4ece\u524d\u9762\u7167\u660e\u7684\u5bf9\u8c61\u76f8\u6bd4\uff0c\u5728\u5176\u540e\u9762(\u6216\u5468\u56f4)\u7684\u7167\u660e\u53d1\u751f\u663e\u8457\u53d8\u5316\u65f6\uff0c\u60c5\u51b5\u5c24\u5176\u5982\u6b64\u3002\n\u628aalpha\u770b\u4f5c\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684\u6548\u679c\u662f\u4e00\u4ef6\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u4f46\u5982\u679c\u505a\u771f\u5b9e\u7684\u6e32\u67d3\uff0c\u4e5f\u80fd\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u4e5f\u662f\u4ef6\u5f88\u597d\u7684\u4e8b\u60c5\u3002\n\u54e6\uff0cPS-\u6211\u66fe\u7ecf\u4ece\u4e00\u4f4d\u827a\u672f\u5bb6\u90a3\u91cc\u5f97\u5230\u7684\u4e00\u4e2a\u989c\u8272\u63d0\u793a\u662f\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u7eaf\u539f\u8272(\u6211\u60f3\u662f\u7f57\u6069\u00b7\u54c8\u7ef4@Monolith)\u3002\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0cRon\uff0c\u60a8\u597d\uff01)\u3002\u4ece\u827a\u672f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u662f\uff0c\u5982\u679c\u60a8\u8003\u8651\u7167\u660e\u662f\u5982\u4f55\u4e58\u4ee5\u8fd9\u4e9b\u4e0d\u540c\u7684\u989c\u8272\u7684\uff0c\u90a3\u4e48\u6bcf\u5f53\u60a8\u8bbe\u7f6e\u4efb\u4f55\u989c\u8272\u901a\u90530\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u4e00\u4e2a\u989c\u8272\u901a\u9053\u80fd\u591f\u901a\u8fc7\u8be5\u500d\u589e\u3002\u5b8c\u5168\u627c\u6740\u4efb\u4f55\u7c7b\u578b\u7684\u5149\u90fd\u4f1a\u8ba9\u4eba\u611f\u89c9\u4e0d\u5bf9\uff0c\u800c\u4e14\u786e\u5b9e\u4f1a\u8ba9\u4e8b\u60c5\u770b\u8d77\u6765\u5fae\u5999\u5730\u9519\u8bef(\u6216\u4e0d\u5fae\u5999\uff01)\uff0c\u56e0\u4e3a\u73b0\u5b9e\u4e16\u754c\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u662f\u5982\u6b64\u5b8c\u7f8e\u6216\u7eaf\u7cb9\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4e0d\u4f1a\u53cd\u5c04\u51fa\u4e0e\u5176\u4e3b\u9891\u6216\u591a\u4e2a\u9891\u7387\u4e0d\u540c\u7684\u4e00\u4e9b\u5149\u3002\u5982\u679c\u5b83\u5982\u6b64\u7eaf\u51c0\uff0c\u5c18\u571f\u5c31\u4f1a\u843d\u5728\u5b83\u4e0a\u9762\uff0c\u5e76\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\u6b64\u5916\uff0c\u51fa\u4e8e\u7c7b\u4f3c\u7684\u539f\u56e0\uff0c\u8fdc\u79bb1\u53ef\u80fd\u662f\u4e2a\u597d\u4e3b\u610f--\u6ca1\u6709\u4ec0\u4e48\u80fd\u5b8c\u7f8e\u5730\u53cd\u6620\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u603b\u4f1a\u6709\u4e00\u4e9b\u4e0d\u5b8c\u7f8e\u7684\u5730\u65b9--\u540c\u6837\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u7070\u5c18\u4f1a\u843d\u5728\u5b83\u4e0a\u9762\uff0c\u5e76\u6539\u53d8\u5b83\u3002\n\u8c22\u8c22\u4f60\u7684\u9605\u8bfb\uff0c\u6211\u5f88\u60f3\u770b\u770b\u4f60\u505a\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7@Atrix256\u627e\u5230\u6211", "note_en": "Below is a screenshot of the shadertoy that goes with this post. Click to view full size. That shadertoy can be found at:  https://www.shadertoy.com/view/ttfyzN\n   Rough Refraction &amp; Absorption \u2013 This makes it so we can have transparent objects, for various definitions of the term transparent.\n Orbit Camera \u2013 This lets you control the camera with the mouse to be able to see the scene from different angles\n  First up is the fresnel effect. I said I wasn\u2019t going to do it in this series, but it really adds a lot to the end result, and we are going to need it (and related parameters) for glossy reflections anyways.\n Fresnel makes objects shinier when you view them at grazing angles and helps objects look more realistic. In the image below, the left sphere does not have fresnel, but the right sphere does. Fresnel adds a better sense of depth and shape.\n  The fresnel function we are going to use is this, so put this in common or buffer A above the raytracing shading code.\n  n1 is the \u201cindex of refraction\u201d or \u201cIOR\u201d of the material the ray started in (air, and we are going to use 1.0). n2 is the \u201cindex of refraction\u201d of the material of the object being hit. normal is the normal of the surface where the ray hit. incident is the ray direction when it hit the object. f0 is the minimum reflection of the object (when the ray and normal are 0 degrees apart), f90 is the maximum reflection of the object (when the ray and normal are 90 degrees apart).\n For the index of refraction of objects, i used a value of \u201c1.0\u201d in the image with the 2 orange spheres above. for f90, the maximum reflection of the objects, we are going to just use \u201c1.0\u201d to make objects fully reflective at the edge.\n Below are spheres with a minimum reflection (reflection chance!) of 0.02, and the IOR go from 1 (on the left) to 2 (on the right). To me, the one on the right looks like a pearl. (this is the SCENE define value 2 scene in the shadertoy)\n      Besides that, a float for &#34;IOR&#34; needs to be added to SMaterialInfo too. Here is the scene from the end of last chapter, using fresnel and with everything using an IOR of 1.0.\n  And here is the scene from last chapter without fresnel. The difference is pretty subtle so you might want to open each image in a browser tab to flip back and forth. The biggest difference is on the edges of the yellow and pink sphere. Fresnel makes the biggest difference for objects that are a little bit shiny. Objects that are very shiny or not at all shiny won&#39;t have as noticeable fresnel effects.\n   In the last post we used a random number tested against a percent chance for specular to choose whether a reflected ray was going to be a diffuse ray or a specular ray.\n When doing that, we should have also divided the throughput by the probability of the ray actually chosen (to not make one count more than the other in the final average) but we didn\u2019t do that. This is a \u201cmathy detail\u201d but easy enough to put in casually, so let\u2019s do the right thing.\n Find the place where the doSpecular float is set based on the random roll. Put this underneath that:\n    The biggest difference from the previous image is that the pink and yellow spheres brighten up a bit, and so do their reflections, of course!\n   Time for the fun! We\u2019ll talk about the features and show the results in this section, then show how to get them into the path tracer in the next section.\n Thinking about the last post for a second\u2026 in simple rendering, and old style raytracers, reflection works by using the reflect() formula/function to find the perfectly sharp mirror reflection angle for a ray hitting a surface, and traces that ray. In the last post we showed how to inject some randomness into that reflected ray, by using a material roughness value to lerp between the perfectly reflected ray and a random ray over the normal oriented hemisphere.\n  For simple rendering and old style raytracers, there is a refract() formula/function that find a perfectly sharp refraction angle for a ray hitting a surface, where that surface has a specific IOR (Index of refraction. Same parameter as used for fresnel). The only difference is that since refracted rays go THROUGH an object instead of reflecting off an object, the random hemisphere is going to be oriented with the negative normal of the surface.\n Below is an image of refractive spheres going from IOR 1 on the left, to 1.5 on the right. Notice how the background gets distorted as the IOR increases, and also notice how the light under the spheres gets focused. Those are \u201ccaustics\u201d and get way more interesting with other shaped meshes. (this is SCENE define value 1 in the shadertoy)\n  You might notice some dark streaks on the ground under the spheres in the middle. When i first saw these, i thought it was a bug, but through experimentation found out that they are actually projections of the images in the sky (the top of the skybox).\n To further demonstrate this, here\u2019s a scene where the spheres are all the same IOR but they are different distances from the floor, which focuses/defocuses the image projected through the sphere, as well as the light above the spheres. (SCENE define value 4 in the shadertoy)\n  Changing the skybox, it looks like this. Notice the projection on the ground at the left has that circle shape?\n  Looking up into at what is above the spheres you can see that circle that was projected onto the ground. This is one of the coolest things about path tracing\u2026 you get a lot of techniques \u201cfor free\u201d that are just emergent features of the math. It\u2019s a lot different than approaching graphics in rasterization / non path traced rendering, where every feature you want, you basically have to make explicit code for to approximate.\n  Going back to roughness, here are some refractive spheres using an IOR of 1.1, but varying in roughness from 0 on the left, to 0.5 on the right. Notice that the spheres themselves get obviously more rough, but also their shadow / caustics change with roughness too. (SCENE define value 6 in the shadertoy)\n  It\u2019s important to notice that in these, it\u2019s just the SURFACE of the sphere that has any roughness to it. If you were able to take one of these balls and crack it in half, the inside would be completely smooth and transparent. In a future post (next, i think!) we\u2019ll talk about how to make some roughness inside of objects, which is also how you render smoke, fog, clouds, and also things like skin, milk, and wax.\n Another fun feature you can add to transparent objects is \u201cabsorption\u201d which means that light is absorbed over distance as it travels through the object.\n We\u2019re going to use Beer\u2019s law to get a multiplier for light that travels through the object, to make that light decrease. The formula for that is just this:\n  For that, we can use a different absorption value per color channel so that different colors absorb quicker or slower as the light goes through the object.\n Here are some spheres that have progressively more absorption. A percentage multiplier goes from 0 on the left to 1 on the right and is multiplied by (1.0, 2.0, 3.0) to get the absorption value. Notice how the spheres change but so do the caustics / shadows. This is SCENE define value 3 in the shadertoy.\n  You can combine roughness and absorption to make some interesting things. Here is the same spheres but with some absorption (SCENE define value 0).\n  Here\u2019s the same scene from a different view, which shows how rich the shading for these objects are.\n         You might notice that there is both a specular roughness as well as a refraction roughness. That could be combined into a single \u201csurface roughness\u201d which was used by both if desired. You lose the ability to make reflections have different roughness than refraction, but that wouldn\u2019t be a huge loss.\n Also, there is a specular chance, and refraction chance, with an implied diffuse chance making those sum to 1.0.\n Instead of doing chances that way, another thing to try could be to make the diffuse chance be the sum of the albedo components, the specular chance be the sum of the specular color components, and the refraction chance be the sum of refraction color components. You could then divide them all by the sum of all 3 chances, so that they summed up to 1.0.\n This would let you get rid of those percentages, and should be pretty good choices. The only weird thing is that the meaning of refraction color is sort of reversed compared to the others. The others are how much light to let through, but refraction color is how much light to block. You might have better luck subtracting refraction color from (1,1,1) and using that to make a refraction chance.\n Since the light from rays is divided by the probability of choosing that type of ray (diffuse, specular, or refractive), it doesn\u2019t really matter how you choose the probabilities for choosing the ray type, but when the probabilities better match the contribution to the pixel\u2019s final color (more contribution = higher percentage), you are going to get a better (more converged) image more quickly. This is straight up importance sampling, and i\u2019ll stop there so we can keep this casual \ud83d\ude42\n The next change is to address a problem we are likely to hit. Now that our material has quite a few components, it would be real easy to forget to set one when setting material properties. If you ever forget to set one, you are either going to have uninitialized values, or values coming from a previous ray hit that is no longer valid. That is going to make some real hard to track bugs, along with the possibility of undefined behavior due to uninitialized values (AFAIK). So, I made a function that initializes a material roughly to zero, but mainly just to sane values. The idea is that you call this function to init a material, and then set the specific values you care about.\n  Every time i set material info (like, every time a ray intersection passes), i first call this function, and then set the specific values I care about. I also call it on the SRayHitInfo struct itself when i first declare it in GetColorForRay().\n Next, also add a bool \u201cfromInside\u201d to the SRayHitInfo. We are going to need this to know when we intersect an object if we hit it from the inside, or the outside. Refraction made it so we can go inside of objects, and we need to know when that happens now.\n  In TestQuadTrace(), where it modifies the ray hit info, make sure and set fromInside to false. We are going to say there is no inside to a quad. You could make it so the negative side of the quad (based on it\u2019s normal) was inside, and maybe build boxes etc out of quads, but I decided not to deal with that complexity.\n TestSphereTrace() already has the concept of whether the ray hit the sphere from the inside or not, but it doesn\u2019t expose it to the caller. I just have it set the ray hit info fromInside bool based on that fromInside bool that already exists.\n The various uses of roughness and percentSpecular are going to need to change to specularRoughness and specularChance.\n The final shading inside the bounce for loop changes quite a bit so i\u2019m going to just paste this below, but it is commented pretty heavily so hopefully makes sense.\n The biggest thing worth explaining I think is how absorption happens. We don\u2019t know how much absorption is going to happen when we enter an object because we don\u2019t know how far the ray will travel through the object. Because of this, we can\u2019t change the throughput to account for absorption when entering an object. We need to instead wait until we hit the far side of the object and then can calculate absorption and update the throughput to account for it. Another way of looking at this is that \u201cwhen we hit an object from the inside, it means we should calculate and apply absorption\u201d. This also handles the case of where a ray might bounce around inside of an object multiple times before leaving (due to specular reflection and fresnel happening INSIDE an object) \u2013 absorption would be calculated and applied at each internal specular bounce.\n   Now that we can do all these cool renders, it kind of sucks that the camera is stuck in one place.\n It really is a lot of fun being able to move the camera around and look at things from different angles. It\u2019s also really helpful in debugging \u2013 like when we were able to see the circle on the ceiling of the skybox!\n  First drop this function in the buffer A tab, right above the mainImage function. You can leave the constants there or put them into the common tab, whichever you\u2019d rather do.\n  The mainImage function also changes quite a bit between the seeding of rng and the raytracing \u2013 basically the stuff that controls jitter for TAA and calculates the camera vectors. The whole function is below, hopefully well enough commented to understand.\n  After you\u2019ve done that, you can drag the left mouse in the image to move the camera around \ud83d\ude42\n If you follow these steps with the scene from last post, and change the central sphere to be a bit refractive, you can finally view the box from a different angle!\n   Before we go, I want to show some refractive spheres with IOR 1, refraction roughness 0, but fading between a purely refractive surface on the left, to a purely diffuse surface on the right. This is SCENE define value 5 in the shadertoy.\n  Compare this one to the purely absorption scene shown before, and also the purely roughness scene.\n   All of these 3 obscured what was behind them more as the effect was turned up. All of them also could have the effect partially in effect, to any level.\n  Which of these is it we are talking about when we are doing traditional alpha blending in a rasterized scene?\n  If the shadow of a semi transparent object is colored, that means absorption is the best model for it. If the shadow of a semi transparent object is just darkened, the partially diffuse surface may be the best model (could also be absorption though). If the object doesn\u2019t cast a shadow (or barely does), it is an object made semi transparent by roughness on the surface of the object, or INSIDE the object (we\u2019ll talk about that case later). That is especially true if the appearance (lighting) of the object changes significantly when the lighting behind it (or around it) changes, vs an object which is only lit from the front.\n Kind of a strange thing thinking about alpha as all these different effects, but good to be aware of it too if doing realistic rendering.\n  Oh PS \u2013 a color tip I got from an artist once was to never use pure primary colors (I think it was Ron Harvey @ monolith. If you are reading this Ron, hello!). This is nice from an artistic standpoint, but also, if you think about how lighting is multiplied by these various colors, whenever you make any color channel 0, it means none of that color channel will make it through that multiplication. Completely killing light of any kind feels wrong and does make things look subtly wrong (or not subtly!), because nothing in the real world is so perfect or pure that it doesn\u2019t reflect SOME light of a different frequency than it\u2019s main frequency or frequencies. If it were so impossibly pure, dust would fall on it and change that. Also, it\u2019s probably a good idea to stay away from 1 for similar reasons \u2013 nothing perfectly reflects anything in the real world, there is always some imperfection \u2013 again, if it were, dust would fall on it and change it.\n  Thanks for reading, and i\u2019d love to see anything you make. You can find me at  @Atrix256", "posttime": "2020-06-16 12:15:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76f8\u673a,\u5438\u6536,path,\u5149\u7ebf", "title": "\u9634\u5f71\u73a9\u5177\u8def\u5f84\u8ddf\u8e2a\uff1a\u83f2\u6d85\u8033\u3001\u7c97\u7cd9\u6298\u5c04\u548c\u5438\u6536\u3001\u8f68\u9053\u76f8\u673a", "title_en": "Shadertoy Path Tracing: Fresnel, Rough Refraction and Absorption, Orbit Camera", "transed": 1, "url": "https://blog.demofox.org/2020/06/14/casual-shadertoy-path-tracing-3-fresnel-rough-refraction-absorption-orbit-camera/", "via": "", "real_tags": ["\u76f8\u673a", "\u5438\u6536", "path", "\u5149\u7ebf"]}, {"category": "", "categoryclass": "", "imagename": "6f2be58c8458a12bae07666c0b1ad38a.jpeg", "infoid": 1006762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u4e09\u5468\u91cc\uff0c\u6570\u5341\u4e07\u7f8e\u56fd\u4eba\u805a\u96c6\u5728\u5168\u56fd\u5404\u5730\uff0c\u6297\u8bae\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u53bb\u4e16\u540e\u7684\u8b66\u5bdf\u66b4\u529b\u548c\u79cd\u65cf\u4e0d\u516c\u6b63\u3002\u4f46\u8fd9\u91cc\u6709\u4e00\u4ef6\u4e8b\u9700\u8981\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u53c2\u52a0\u6297\u8bae\u6d3b\u52a8\uff0c\u4f60\u6240\u5728\u57ce\u5e02\u7684\u8b66\u5bdf\u5f88\u6709\u53ef\u80fd--\u4e5f\u4f1a--\u77e5\u9053\u4f60\u5728\u90a3\u91cc\u3002\n\u4ece\u968f\u8eab\u76f8\u673a\u5230\u624b\u673a\u73b0\u573a\u6a21\u62df\u5668\u3001\u8f66\u724c\u9605\u8bfb\u5668\u3001\u793e\u4ea4\u5a92\u4f53\u76d1\u63a7\u5de5\u5177\u548c\u65e0\u4eba\u673a\uff0c\u8b66\u65b9\u7684\u773c\u775b\u76ef\u7740\u5730\u9762\u3001\u9053\u8def\u3001\u5730\u94c1\u3001\u4e92\u8054\u7f51\uff0c\u4ee5\u53ca\u4f60\u80fd\u60f3\u8c61\u5230\u7684\u51e0\u4e4e\u4efb\u4f55\u6297\u8bae\u5730\u70b9\u3002\n\u5728\u8fc7\u53bb\u7684\u4e8c\u5341\u5e74\u91cc\uff0c\u5168\u56fd\u5404\u5730\u7684\u8b66\u5bdf\u90e8\u95e8\u6210\u4e3a\u5546\u4e1a\u79d1\u6280\u516c\u53f8\u7684\u70ed\u95e8\u76ee\u6807\u3002\u50cf\u4e9a\u9a6c\u900a\u548cAxon\u8fd9\u6837\u7684\u516c\u53f8\u5411\u8b66\u5bdf\u90e8\u95e8\u63a8\u9500\u4ea7\u54c1\uff0c\u8fd9\u4e9b\u90e8\u95e8\u627f\u8bfa\u8ba9\u4ed6\u4eec\u7684\u5de5\u4f5c\u66f4\u5bb9\u6613\u3001\u66f4\u597d\u3001\u66f4\u6709\u6548\u3002\u4f46\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(EFF)\u7684\u9ad8\u7ea7\u8c03\u67e5\u7814\u7a76\u5458\u6234\u592b\u00b7\u9a6c\u65af(Dave Maass)\u8bf4\uff0c\u8fd9\u79cd\u6280\u672f\u7ecf\u5e38\u5bfc\u81f4\u6cbb\u5b89\u4e0d\u529b\u3002\n\u201c\u8b66\u5bdf\u90e8\u95e8\u6b63\u5728\u51cf\u5c11\u5916\u5c55\uff0c\u51cf\u5c11\u8dd1\u817f\u5de5\u4f5c\uff0c\u51cf\u5c11\u8c03\u67e5\uff0c\u201d\u9a6c\u65af\u544a\u8bc9\u201c\u5927\u4f17\u673a\u68b0\u201d(Popular Mechanical)\u3002\u201c\u76f8\u53cd\uff0c\u4ed6\u4eec\u4f9d\u8d56\u672a\u7ecf\u6d4b\u8bd5\u7684\u6280\u672f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u6ee5\u7528\u548c\u8150\u8d25\u3002\u66f4\u4e0d\u7528\u8bf4\uff0c\u8fd9\u662f\u6d6a\u8d39\u7eb3\u7a0e\u4eba\u7684\u94b1\u3002\u201c\u3002\n\u5546\u4e1a\u516c\u53f8\u5411\u8b66\u5bdf\u90e8\u95e8\u63d0\u4f9b\u56de\u6263\uff0c\u8b66\u5bdf\u90e8\u95e8\u6709\u65f6\u5145\u5f53\u4e1a\u52a1\u53d1\u5c55\u5f15\u64ce\uff0c\u4ee5\u589e\u52a0\u5ba2\u6237\u8d2d\u4e70\u6216\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e9a\u9a6c\u900a\u62db\u52df\u4e86\u8b66\u5bdf\u90e8\u95e8\uff0c\u5728\u7f8e\u56fd\u5404\u5730\u7684\u793e\u533a\u63a8\u5e7f\u4ed6\u4eec\u7684Ring\u6444\u50cf\u5934\u3002\n\u4e9a\u9a6c\u900a\u8fd8\u5728\u8b66\u65b9\u4f1a\u8bae\u4e0a\u5411\u8b66\u5bdf\u90e8\u95e8\u5206\u53d1\u4e86\u8bb8\u591a\u514d\u8d39\u7684Ring\u5355\u5143\u3002\u6839\u636e\u9a6c\u65af\u7684\u8bf4\u6cd5\uff0c\u53c2\u52a0\u4e00\u4e2a\u6d3e\u5bf9\u7684\u8b66\u5bdf\u4f1a\u6536\u5230\u4e94\u679a\u514d\u8d39\u6212\u6307\uff0c\u5927\u7ea6\u76f8\u5f53\u4e8e1000\u7f8e\u5143\u7684\u514d\u8d39\u4ea7\u54c1\u3002\u6b64\u5916\uff0c\u4e9a\u9a6c\u900a\u6bcf\u8bf4\u670d20\u4eba\u4f7f\u7528Ring\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u5411\u8b66\u65b9\u63d0\u4f9b\u514d\u8d39\u8bbe\u5907\u3002\u8fd9\u4e9b\u8425\u9500\u7b56\u7565\u53ef\u80fd\u5bfc\u81f4\u4e86\u5bf9\u76d1\u7763\u8425\u9500\u5de5\u5177\u7684\u8fc7\u5ea6\u6295\u8d44\u3001\u516c\u5f00\u504f\u597d\u6216\u4e0d\u5fc5\u8981\u7684\u91c7\u7528\u3002\n\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8fd8\u4e0d\u6e05\u695a\u8b66\u5bdf\u90e8\u95e8\u5728\u76d1\u63a7\u6280\u672f\u4e0a\u82b1\u4e86\u591a\u5c11\u94b1\u3002\u4ed6\u4eec\u5e76\u4e0d\u603b\u662f\u62a5\u544a\u4ed6\u4eec\u4f7f\u7528\u4e86\u4ec0\u4e48\uff0c\u82b1\u8d39\u4e86\u591a\u5c11\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5b9e\u65bd\u7684\u3002\u867d\u7136\u8b66\u5bdf\u90e8\u95e8\u58f0\u79f0\uff0c\u7531\u4e8e\u4fb5\u72af\u7248\u6743\u548c\u5176\u4ed6\u5546\u4e1a\u79d8\u5bc6\u6cd5\u5f8b\uff0c\u8fd9\u79cd\u4fdd\u5bc6\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u5371\u53ca\u4f60\u7684\u9690\u79c1\u3002\n\u8b66\u65b9\u6709\u5404\u79cd\u5404\u6837\u7684\u5de5\u5177\u53ef\u4f9b\u4ed6\u4eec\u4f7f\u7528\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7528\u6765\u76d1\u63a7\u8c01\u53c2\u52a0\u4e86\u6297\u8bae\u6d3b\u52a8\uff0c\u4ed6\u4eec\u662f\u5982\u4f55\u884c\u52a8\u7684\uff0c\u5982\u679c\u51fa\u4e86\u95ee\u9898\uff0c\u4ed6\u4eec\u5e94\u8be5\u8ffd\u7a76\u8c01\u7684\u8d23\u4efb\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8fd9\u4e9b\u7535\u8111\u63a7\u5236\u7684\u6444\u50cf\u7cfb\u7edf\u88ab\u7528\u6765\u6355\u6349\u8f66\u724c\u53f7\u7801\uff0c\u5e76\u5bf9\u8f66\u724c\u53f7\u7801\u8fdb\u884c\u65f6\u95f4\u548c\u4f4d\u7f6e\u6807\u8bb0\u3002\u8fd9\u4e9b\u6570\u636e\u5305\u62ec\u6c7d\u8f66\u548c\u53f8\u673a\u7684\u7167\u7247(\u5982\u679c\u5b83\u5728\u79fb\u52a8)\uff0c\u5b58\u50a8\u5728\u4e2d\u592e\u6570\u636e\u5e93\u4e2d\u3002\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u7528\u6765\u8ddf\u8e2a\u90a3\u4e9b\u53c2\u52a0\u3001\u505c\u5728\u9644\u8fd1\u6216\u79bb\u5f00\u6297\u8bae\u6d3b\u52a8\u7684\u4eba\u3002\n\u5982\u4f55\u8bc6\u522b\u5b83\u4eec\uff1aALPR\u6709\u5404\u79cd\u5404\u6837\u7684\u5f62\u72b6\u548c\u5927\u5c0f\u3002\u5b83\u4eec\u901a\u5e38\u770b\u8d77\u6765\u5c31\u50cf\u8d34\u5728\u8def\u706f\u3001\u8857\u6746\u3001\u79fb\u52a8\u8bbe\u5907\u548c\u62d6\u8f66\u4e0a\u7684\u7b28\u91cd\u7684\u76d2\u5b50\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u5982\u679c\u4f60\u751f\u6d3b\u7684\u5dde\u4e0d\u8981\u6c42\u4f60\u6709\u6b63\u9762\u8f66\u724c\uff0c\u90a3\u5c31\u53bb\u6389\u5b83\u3002\u5982\u679c\u4f60\u6709\u9009\u62e9\uff0c\u4e0d\u8981\u5f00\u4f60\u7684\u79c1\u5bb6\u8f66\u53bb\u6297\u8bae\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u8003\u8651\u6b65\u884c\u6216\u4f7f\u7528\u516c\u5171\u4ea4\u901a\u5de5\u5177\u3002\n\u5de5\u4f5c\u65b9\u5f0f\uff1a\u8b66\u5bdf\u5728\u8eab\u4e0a\u4f69\u6234\u8fd9\u4e9b\u6444\u50cf\u5934\uff0c\u8bb0\u5f55\u4e8b\u4ef6\u5e76\u8bb0\u5f55\u6b66\u529b\u7684\u4f7f\u7528\u3002\u4f46\u6444\u50cf\u673a\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u548c\u8bb0\u5f55\u4efb\u4f55\u6709\u8b66\u5bdf\u5728\u573a\u7684\u60c5\u51b5\u4e0b\u7684\u4eba\u3002\u5982\u679c\u4e0e\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4fb5\u72af\u7b2c\u4e00\u4fee\u6b63\u6848\u548c\u7b2c\u56db\u4fee\u6b63\u6848\u7684\u6743\u5229\u3002\u6b64\u5916\uff0c\u65e9\u671f\u7684\u7814\u7a76\u8868\u660e\uff0c\u968f\u8eab\u76f8\u673a\u5728\u904f\u5236\u6b66\u529b\u4f7f\u7528\u65b9\u9762\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u65e0\u6548\u7684\u3002\n\u5982\u4f55\u8fa8\u8ba4\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u627e\u5230\u6234\u5728\u8b66\u5bdf\u80f8\u524d\u7684\u76d2\u72b6\u88c5\u7f6e\u3002\u7136\u800c\uff0c\u8b66\u5bdf\u4e5f\u53ef\u4ee5\u628a\u5b83\u4eec\u85cf\u5728\u80cc\u5fc3\u4e0b\u9762\uff0c\u6709\u65f6\u8fd8\u4f1a\u5077\u5077\u5730\u85cf\u5728\u886c\u886b\u4e0a\u7684\u201c\u7ebd\u6263\u5b54\u201d\u91cc\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u907f\u514d\u88ab\u968f\u8eab\u76f8\u673a\u6355\u6349\u5230\u7684\u6700\u597d\u65b9\u6cd5\u662f\u8fdc\u79bb\u8b66\u5bdf\u7684\u89c6\u7ebf\u3002\u5982\u679c\u4f60\u9760\u8fd1\u4e00\u540d\u8b66\u5b98\uff0c\u786e\u4fdd\u4f60\u6ca1\u6709\u4efb\u4f55\u53ef\u89c1\u7684\u8bc6\u522b\u7279\u5f81\uff1b\u6234\u4e0a\u9762\u5177\u548c\u5e3d\u5b50\uff0c\u4ee5\u963b\u6b62\u6444\u50cf\u5934\u8bc6\u522b\u4f60\u7684\u80fd\u529b\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u540d\u8b66\u5b98\u884c\u52a8\u8fc7\u5ea6\u6216\u5176\u4ed6\u884c\u4e3a\u4e0d\u5f53\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u968f\u8eab\u76f8\u673a\u8fdb\u884c\u8fa9\u62a4\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8fd9\u4e9b\u5de5\u5177\u4f2a\u88c5\u6210\u5408\u6cd5\u7684\u624b\u673a\u53d1\u5c04\u5854\uff0c\u6b3a\u9a97\u8702\u7a9d\u8bbe\u5907\u8fde\u63a5\u5230\u5b83\u4eec\u3002\u4e00\u65e6\u8fde\u63a5\u4e0a\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u8bc6\u522b\u56fd\u9645\u79fb\u52a8\u7528\u6237ID\uff0c\u5e76\u786e\u5b9a\u8c01\u53c2\u52a0\u4e86\u6297\u8bae\u6d3b\u52a8\u3002\u8fd9\u4e9b\u8bbe\u5907\u6536\u96c6\u7535\u8bdd\u901a\u8bdd\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u3001\u4e2a\u4eba\u8bc6\u522b\u4fe1\u606f\u548c\u6570\u636e\u4f7f\u7528\u60c5\u51b5\uff0c\u5e76\u5728\u81f3\u5c1124\u4e2a\u5dde\u4f7f\u7528\u3002\n\u5982\u4f55\u8bc6\u522b\u5b83\u4eec\uff1aSitch\u9879\u76ee\u6709\u5f00\u6e90\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u6d4b\u8702\u7a9d\u7ad9\u70b9\u6a21\u62df\u5668\u3002WiGle.net\u53ef\u4ee5\u5e2e\u52a9\u663e\u793a\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u624b\u673a\u53d1\u5c04\u5854\u7684\u4f4d\u7f6e\u3002\u5c06\u4e24\u4e2a\u6570\u636e\u6e90\u5173\u8054\u8d77\u6765\u53ef\u4ee5\u5e2e\u52a9\u63ed\u793a\u4f55\u65f6\u4f7f\u7528\u5c0f\u533a\u7ad9\u70b9\u6a21\u62df\u5668\u3002\u800cSeaGlass\u662f\u534e\u76db\u987f\u5927\u5b66\u7684\u4e00\u4e2a\u786c\u4ef6\u9879\u76ee\uff0c\u5b83\u5e2e\u52a9\u8bc6\u522b\u6b63\u5728\u4f7f\u7528\u7684IMSI\u6355\u6349\u5668\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u4e0d\u9700\u8981\u5efa\u9020\u4e00\u79cd\u8bbe\u5907\u6765\u5e2e\u52a9\u8bc6\u522b\u6297\u8bae\u6d3b\u52a8\u4e2d\u548c\u5468\u56f4\u7684\u4e32\u9c7c\uff0c\u53ea\u9700\u5c06\u624b\u673a\u8bbe\u7f6e\u4e3a\u98de\u884c\u6a21\u5f0f\u5373\u53ef\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u65e0\u4eba\u673a\u53ef\u4ee5\u914d\u5907\u9ad8\u6e05\u6670\u5ea6\u5b9e\u65f6\u89c6\u9891\u6444\u50cf\u673a\u3001\u70ed\u7ea2\u5916\u6444\u50cf\u673a\u3001\u70ed\u4f20\u611f\u5668\u3001\u81ea\u52a8\u8f66\u724c\u9605\u8bfb\u5668\u548c\u96f7\u8fbe\uff0c\u7528\u4e8e\u8ddf\u8e2a\u3001\u76d1\u63a7\u548c\u76d1\u89c6\u5c0f\u7ec4\u3002\u5b83\u4eec\u8fd8\u53ef\u4ee5\u5305\u62ec\u624b\u673a\u62e6\u622a\u6280\u672f\u548c\u540e\u7aef\u8f6f\u4ef6\u5de5\u5177\uff0c\u5982\u8f66\u724c\u9605\u8bfb\u5668\u3001\u4eba\u8138\u8bc6\u522b\u548cGPS\u8ddf\u8e2a\u5668\u3002\n\u5982\u4f55\u8bc6\u522b\u5b83\u4eec\uff1a\u65e0\u4eba\u673a\u7684\u5927\u5c0f\u4e0d\u4e00\uff0c\u4ece\u5c0f\u578b\u65e0\u4eba\u673a\u5230\u5927\u578b\u519b\u7528\u65e0\u4eba\u673a\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u62ac\u5934\u770b\u4e00\u770b\uff0c\u4f60\u53ef\u80fd\u5c31\u80fd\u8ba4\u51fa\u4ed6\u4eec\u6765\u3002\u7136\u800c\uff0c\u8981\u77e5\u9053\u5a92\u4f53\u548c\u6d3b\u52a8\u4eba\u58eb\u4e5f\u4f1a\u4f7f\u7528\u65e0\u4eba\u673a\u6765\u62a5\u9053\u548c\u8ddf\u8e2a\u8b66\u65b9\u5728\u6297\u8bae\u671f\u95f4\u7684\u884c\u52a8\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u5982\u679c\u4f60\u60f3\u786e\u5b9a\u662f\u5426\u6b63\u5728\u4f7f\u7528\u65e0\u4eba\u673a\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u58f0\u5b66\u4f20\u611f\u5668\u3001\u5c04\u9891\u5206\u6790\u4eea\u548c\u5149\u5b66\u4f20\u611f\u5668\u3002\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u9009\u62e9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u4f7f\u7528\u6211\u4eec\u5728\u5176\u4ed6\u90e8\u5206\u63a8\u8350\u7684\u76f8\u540c\u6280\u672f\u6765\u907f\u514d\u9762\u90e8\u8bc6\u522b\u6216FLIR\u6280\u672f\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u4e0e\u4efb\u4f55\u76f8\u673a\u914d\u5408\u4f7f\u7528\uff0c\u4ee5\u8bc6\u522b\u7167\u7247\u3001\u89c6\u9891\u548c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4eba\u7269\u3002\u5b83\u8fd8\u53ef\u4ee5\u5728\u8bb8\u591a\u8b66\u5bdf\u90e8\u95e8\u7684\u767b\u8bb0\u548c\u5ba1\u5224\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u3002\n\u5982\u4f55\u8bc6\u522b\uff1a\u4f60\u5728\u6297\u8bae\u6d3b\u52a8\u4e2d\u9047\u5230\u7684\u4efb\u4f55\u6444\u50cf\u5934\u90fd\u53ef\u80fd\u5b89\u88c5\u4e86\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u3002\u5047\u8bbe\u5b83\u6709\uff0c\u603b\u6bd4\u5047\u8bbe\u5b83\u6ca1\u6709\u8981\u597d\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u901a\u8fc7\u8fd9\u5f20\u4e92\u52a8\u5730\u56fe\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u4f60\u5f53\u5730\u7684\u8b66\u5bdf\u90e8\u95e8\u662f\u5426\u5728\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u3002\u4e3a\u4e86\u907f\u514d\u5728\u6297\u8bae\u6d3b\u52a8\u4e2d\u88ab\u53d1\u73b0\uff0c\u8bf7\u7528\u53e3\u7f69\u906e\u4f4f\u8138\uff0c\u5e76\u6234\u4e0a\u9576\u8fb9\u5e3d\u5b50\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8fd9\u4e9b\u6444\u50cf\u5934\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2a\u4eba\u7684\u4f53\u6e29\uff0c\u5e76\u5728\u6761\u4ef6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5e2e\u52a9\u627e\u5230\u4eba\uff0c\u5426\u5219\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u88ab\u770b\u5230\u3002\n\u8bc6\u522b\u65b9\u6cd5\uff1aFLIR\u53ef\u4ee5\u624b\u6301\u6216\u5b89\u88c5\u5728\u6c7d\u8f66\u3001\u6b65\u67aa\u6216\u5934\u76d4\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u65e0\u4eba\u673a\u6216\u65e0\u4eba\u673a\u4e00\u8d77\u4f7f\u7528\u3002\u5b83\u4eec\u901a\u5e38\u5f88\u96be\u88ab\u53d1\u73b0\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u8eb2\u5728\u963b\u6321\u70ed\u4fe1\u53f7\u7684\u6765\u6e90\u540e\u9762\uff0c\u5c06\u76ae\u80a4\u66b4\u9732\u964d\u81f3\u6700\u4f4e\u3002\u7a7f\u957f\u8896\u4f1a\u4f7f\u4f60\u7684\u80fd\u89c1\u5ea6\u964d\u4f4e15%\u3002\u6b64\u5916\uff0c\u4e00\u5929\u4e2d\u5916\u51fa\u7684\u6700\u4f73\u65f6\u95f4\u662f\u65e5\u51fa\u548c\u65e5\u843d\uff0c\u6b64\u65f6\u70ed\u6210\u50cf\u6355\u6349\u6548\u679c\u8f83\u5dee\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8fd9\u4e9b\u79fb\u52a8\u5854\u697c\u5355\u5143\u901a\u5e38\u914d\u5907ALPR\u6280\u672f\u3001\u626c\u58f0\u5668\u3001\u706f\u5149\u548c\u6444\u50cf\u673a\uff0c\u7528\u4e8e\u4ece\u201c\u9e1f\u77b0\u201d\u76d1\u89c6\u4e8b\u4ef6\u3002\n\u5982\u4f55\u8fa8\u8ba4\u5b83\u4eec\uff1a\u5b83\u4eec\u5f88\u5bb9\u6613\u8fa8\u8ba4\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u516c\u5171\u573a\u6240\u7531\u8b66\u5bdf\u628a\u5b88\u7684\u5927\u578b\u5854\u697c\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u6765\u81eaMST\u7684\u66f4\u5927\u5a01\u80c1\u662f\u89c6\u9891\u548cFLIR\u6355\u83b7\u3002\u6709\u5173\u5982\u4f55\u6700\u597d\u5730\u8eb2\u907f\u68c0\u6d4b\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd9\u4e9b\u90e8\u5206\u3002\n\u5de5\u4f5c\u539f\u7406\uff1a\u8b66\u65b9\u4f7f\u7528\u6807\u7b7e\u3001\u516c\u5171\u548c\u79c1\u4eba\u8d26\u6237\u3001\u6570\u5b57\u7559\u8a00\u677f\u548c\u6807\u51c6\u793e\u4ea4\u5e73\u53f0\u6765\u76d1\u63a7\u6d3b\u52a8\u4e2d\u7684\u6297\u8bae\u8005\u3002\u8fd9\u53ef\u4ee5\u7531\u76d1\u63a7\u548c\u7ba1\u7406\u6570\u636e\u7684\u5b9e\u9645\u4eba\u5458\u6216\u7b97\u6cd5\u6765\u5b8c\u6210\u3002\n\u5982\u4f55\u8bc6\u522b\uff1a\u67e5\u770b\u8fd9\u4efd\u6587\u4ef6\uff0c\u5b83\u5c06\u5e2e\u52a9\u4f60\u786e\u5b9a\u4f60\u662f\u5426\u5728\u4e0e\u673a\u5668\u4eba\u4ea4\u8c08\uff0c\u5426\u5219\u5c31\u5047\u8bbe\u6240\u6709\u4e0e\u7528\u4e8e\u5e2e\u52a9\u6297\u8bae\u8005\u7684\u6807\u7b7e\u76f8\u5173\u7684\u516c\u5f00\u53d1\u5e03\u7684\u793e\u4ea4\u4fe1\u606f\u4e5f\u88ab\u7528\u6765\u5e2e\u52a9\u8b66\u65b9\u3002\n\u5982\u4f55\u4fdd\u62a4\u81ea\u5df1\uff1a\u6ce8\u610f\u4f60\u662f\u5426\u5728\u4e0e\u673a\u5668\u4eba\u4ea4\u8c08\uff0c\u786e\u5b9a\u4f60\u662f\u5426\u60f3\u8981\u5c06\u4f60\u7684\u5728\u7ebf\u72b6\u6001\u79c1\u6709\u5316\u6216\u533f\u540d\u5316\uff0c\u5e76\u91c7\u53d6\u9002\u5408\u5e73\u53f0\u7684\u6b65\u9aa4\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4f60\u53ef\u80fd\u8fd8\u60f3\u8003\u8651\u5728\u4f60\u79bb\u5f00\u4e4b\u524d\u4e0d\u8981\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u53d1\u5e03\u6297\u8bae\u6d3b\u52a8\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u62a4\u4f60\u7684\u9690\u79c1\u548c\u4f60\u5468\u56f4\u4eba\u7684\u9690\u79c1\u3002\n\u8b66\u65b9\u7684\u76d1\u63a7\u6280\u672f\u53ef\u80fd\u4f1a\u4ee4\u4eba\u6050\u60e7\uff0c\u53ef\u80fd\u4f1a\u529d\u963b\u4f60\u53c2\u52a0\u6297\u8bae\u6d3b\u52a8\u3002\u4f46\u662f\uff0c\u5728\u4f60\u653e\u5f03\u4f60\u7684\u6c11\u4e3b\u4e49\u52a1\u548c\u5baa\u6cd5\u8d4b\u4e88\u7684\u805a\u96c6\u548c\u6fc0\u6d3b\u53d8\u9769\u7684\u6743\u5229\u4e4b\u524d\uff0c\u4f60\u8fd8\u53ef\u4ee5\u91c7\u53d6\u8fdb\u4e00\u6b65\u7684\u884c\u52a8\u6765\u786e\u4fdd\u4f60\u81ea\u5df1\u7684\u5b89\u5168\u3002\n\u5728\u60a8\u7684\u79fb\u52a8\u8bbe\u5907\u4e0a\u542f\u7528\u5b8c\u5168\u52a0\u5bc6\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u6570\u636e\u5728\u843d\u5165\u8b66\u65b9\u624b\u4e2d\u65f6\u65e0\u6cd5\u8bbf\u95ee\u3002\n\u7a7f\u7740\u8eb2\u907f\u6216\u533f\u540d\uff1a\u906e\u76d6\u7eb9\u8eab\uff0c\u7a7f\u4e0d\u53ef\u8ffd\u8e2a\u7684\u8863\u670d\uff0c\u6234\u9762\u5177\u3002(\u5728\u65b0\u51a0\u80ba\u708e\u8fd9\u4e2a\u5e74\u7eaa\uff0c\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u4f46\u8fd9\u4e5f\u6709\u52a9\u4e8e\u964d\u4f4e\u4f60\u88ab\u524d\u89c6\u7ea2\u5916\u3001\u76d1\u63a7\u6444\u50cf\u5934\u6216\u5176\u4ed6\u65b9\u5f0f\u8bc6\u522b\u7684\u673a\u4f1a)\u3002\n\u5236\u5b9a\u5907\u9009\u4ea4\u901a\u8ba1\u5212\u3002ALPR\u5f88\u53ef\u80fd\u4f1a\u8ffd\u8e2a\u4f60\u7684\u8f66\uff0c\u5e76\u5728\u6297\u8bae\u6d3b\u52a8\u4e2d\u8bc6\u522b\u4f60\u7684\u8eab\u4efd\uff0c\u4f46\u516c\u5171\u4ea4\u901a\u5de5\u5177\u4e5f\u4f1a\u6839\u636e\u4f60\u4f7f\u7528\u7684\u652f\u4ed8\u5f62\u5f0f\u8bb0\u5f55\u4f60\u7684\u8eab\u4efd\u3002\n\u5c06\u60a8\u7684\u624b\u673a\u8bbe\u7f6e\u4e3a\u98de\u884c\u6a21\u5f0f\u3002\u8fd9\u5c06\u51cf\u5c11\u8fde\u63a5\u5230\u5c0f\u533a\u7ad9\u70b9\u6a21\u62df\u5668\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u88ab\u8ddf\u8e2a\u7684\u673a\u4f1a\u3002\n\u5982\u679c\u6ca1\u6709\u5fc5\u8981\uff0c\u4e0d\u8981\u89e3\u9501\u624b\u673a\u3002\u5bf9\u8b66\u5bdf\u6765\u8bf4\uff0c\u89e3\u9501\u7684\u624b\u673a\u662f\u516c\u5e73\u7684\u6e38\u620f\u3002\n\u5220\u9664\u7167\u7247\u4e0a\u7684\u5143\u6570\u636e\uff0c\u4ee5\u51cf\u5c11\u5b83\u4eec\u6210\u4e3a\u6709\u7f6a\u8bc1\u636e\u7684\u53ef\u80fd\u6027\u3002\n\u4fdd\u62a4\u60a8\u7684\u793e\u533a\u3002\u5c0f\u5fc3\u4f60\u5728\u54ea\u91cc\u53d1\u5e03\u7684\u7167\u7247\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u7167\u7247\u4e2d\u7684\u4eba\u3002\n\u4f60\u4e0d\u9700\u8981\u7ed9\u5bc6\u7801\uff0c\u4e5f\u4e0d\u9700\u8981\u628a\u624b\u673a\u4ea4\u7ed9\u4efb\u4f55\u4eba\u3002\u95ee\u95ee\u4f60\u662f\u5426\u88ab\u62d8\u7559\u4e86\uff1b\u5982\u679c\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79bb\u5f00\u3002\n\u53eb\u5f8b\u5e08\u6765\u3002\u5982\u679c\u4f60\u6ca1\u6709\u4e00\u4e2a\u53f7\u7801\uff0c\u95ee\u95ee\u5176\u4ed6\u6297\u8bae\u8005\u3002\u201c\u8bb0\u5f97\u4fdd\u6301\u6c89\u9ed8\uff0c\u201d\u6d77\u5a1c\u00b7\u5361\u6069(Henna Kahn)\u544a\u8bc9\u201c\u5927\u4f17\u673a\u68b0\u201d(Popular Mechanical Ics)\u3002\u201c\u4e0d\u8981\u540c\u610f\u641c\u67e5\u4f60\u7684\u624b\u673a\u3002\u201d\n\u8003\u8651\u628a\u4f60\u7684\u624b\u673a\u9001\u7ed9\u670b\u53cb\uff0c\u800c\u4e0d\u662f\u628a\u5b83\u5e26\u5230\u8b66\u5c40\u529e\u516c\u5ba4\u3002\u8fd9\u964d\u4f4e\u4e86\u8b66\u5bdf\u7528\u5b83\u6765\u5bf9\u4ed8\u4f60\u7684\u98ce\u9669\u3002\n\u5982\u679c\u8981\u6c42\uff0c\u62d2\u7edd\u89e3\u9501\u60a8\u7684\u8bbe\u5907\u3002\u4f60\u4e0d\u9700\u8981\u89e3\u9501\u4f60\u7684\u624b\u673a\uff0c\u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\u8981\u6c42\u5f8b\u5e08\u5728\u573a\u3002\n\u5982\u679c\u8b66\u65b9\u8ba4\u4e3a\u4f60\u7684\u624b\u673a\u4e0a\u6709\u72af\u7f6a\u8bc1\u636e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5c06\u4f60\u7684\u624b\u673a\u4f5c\u4e3a\u902e\u6355\u8bc1\u636e\u3002\u5426\u5219\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u4e3a\u4f60\u7684\u624b\u673a\u63d0\u4f9b\u51ed\u8bc1\uff0c\u4ee5\u4fdd\u8bc1\u5176\u5b89\u5168\u3002\u5047\u8bbe\u662f\u540e\u8005\uff0c\u4f60\u53ef\u4ee5\u5728\u624b\u673a\u53d1\u5e03\u65f6\u62ff\u56de\u4f60\u7684\u624b\u673a\u3002\u5047\u8bbe\u662f\u524d\u8005\uff0c\u4f60\u7684\u624b\u673a\u8981\u5230\u5211\u4e8b\u6848\u4ef6\u7ed3\u675f\u540e\u624d\u80fd\u53d6\u56de\u3002\n\u201c\u4eba\u4eec\u6709\u7b2c\u4e00\u4fee\u6b63\u6848\u6297\u8bae\u7684\u6743\u5229\uff0c\u201d\u53ef\u6c57\u8bf4\u3002\u201c\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u653f\u5e9c\u6b63\u5728\u8fdb\u884c\u8fd9\u79cd\u7ea7\u522b\u7684\u76d1\u63a7\u3002\u73b0\u5728\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4eba\u4eec\u77e5\u9053\u4ed6\u4eec\u7684\u6743\u5229\u3002\u201c\u3002\nInteros\u7814\u7a76\u526f\u603b\u88c1\u5b89\u5fb7\u91cc\u4e9a\u00b7\u5229\u7279\u6797\u5df4\u6208(Andrea Little Limbago)\u544a\u8bc9\u201c\u5927\u4f17\u673a\u68b0\u201d(Popular Mechanical)\uff1a\u201c\u6211\u62c5\u5fc3\u76d1\u63a7\u7684\u900f\u660e\u5ea6--\u6216\u8005\u8bf4\u7f3a\u4e4f\u900f\u660e\u5ea6--\u4ee5\u53ca\u6570\u636e\u662f\u5982\u4f55\u88ab\u4f7f\u7528\u548c\u76d1\u7ba1\u7684\uff0c\u800c\u4e0d\u662f\u90a3\u79cd\u6280\u672f\u3002\u201d\n\u8fd9\u9879\u6280\u672f\u4ec5\u4ec5\u662f\u4e00\u79cd\u83b7\u53d6\u65b9\u6cd5\uff0c\u5b83\u5173\u6ce8\u7684\u662f\u6570\u636e\u88ab\u6536\u96c6\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u4f8b\u5982\uff0c\u73b0\u5728\uff0c\u4eceALPR\u548c\u5176\u4ed6\u6765\u6e90\u6536\u96c6\u7684\u6570\u636e\u901a\u5e38\u88ab\u51fa\u552e\u7ed9\u7b2c\u4e09\u65b9\uff0c\u7136\u540e\u7b2c\u4e09\u65b9\u518d\u5c06\u8fd9\u4e9b\u6570\u636e\u8f6c\u552e\u7ed9\u4fdd\u9669\u63d0\u4f9b\u5546\u3001\u94f6\u884c\u548c\u4fe1\u7528\u76d1\u89c6\u5668\u3002Vigilant Solutions\u548cELSAG\u662f\u6b64\u7c7b\u4fe1\u606f\u7684\u6700\u5927ALPR\u4f9b\u5e94\u5546\uff0c\u60a8\u51e0\u4e4e\u65e0\u6cd5\u8bf7\u6c42\u5220\u9664\u60a8\u7684\u4fe1\u606f\u3002\n\u867d\u7136\u516c\u4f17\u5bf9\u6570\u636e\u4f7f\u7528\u548c\u9762\u90e8\u8bc6\u522b\u8f6f\u4ef6\u7684\u6297\u8bae\u53d6\u5f97\u4e86\u4e00\u4e9b\u8fdb\u5c55\uff0c\u4f46\u8fd9\u53ef\u80fd\u4e0d\u662f\u6b63\u786e\u7684\u65b9\u6cd5\u3002\u6700\u8fd1\uff0cIBM\u3001\u5fae\u8f6f\u548c\u4e9a\u9a6c\u900a\u540c\u610f\u505c\u6b62(\u6216\u6682\u65f6\u505c\u6b62)\u5411\u8b66\u5bdf\u90e8\u95e8\u9500\u552e\u4ed6\u4eec\u7684\u4ea7\u54c1\u3002\n\u6797\u8d1d\u6208\u8bf4\uff1a\u201c\u5728\u90a3\u6b21\u8c08\u8bdd\u4e2d\u4f3c\u4e4e\u9057\u6f0f\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u8fd9\u9879\u6280\u672f\u5df2\u7ecf\u5b58\u5728\uff0c\u5e76\u5c06\u7ee7\u7eed\u53d1\u5c55\u3002\u201d\u201c\u867d\u7136\u7f8e\u56fd\u8de8\u56fd\u516c\u53f8\u4f3c\u4e4e\u6b63\u5728\u9000\u51fa\u8fd9\u9879\u7814\u7a76\uff0c\u4f46\u6280\u672f\u5a01\u6743\u56fd\u5bb6\u5c06\u7ee7\u7eed\u5b8c\u5584\u4ed6\u4eec\u7684\u76d1\u63a7\u72b6\u6001\uff0c\u50cfClearview AI\u8fd9\u6837\u7684\u516c\u53f8\u5c06\u7ee7\u7eed\u4e3a\u8b66\u65b9\u8bbe\u8ba1\u9762\u90e8\u8bc6\u522b\u5de5\u5177\uff0c\u800c\u76d1\u7ba1\u6216\u5a92\u4f53\u76d1\u7763\u8981\u5c11\u5f97\u591a\u3002\u201d\u8fd9\u662f\u4e00\u7247\u5371\u9669\u7684\u9886\u5730\u3002\n\u6211\u4eec\u9700\u8981\u7684\u4e0d\u662f\u8d44\u8d28\u8f83\u5dee\u7684\u516c\u53f8\u5f00\u53d1\u8f6f\u4ef6\uff0c\u800c\u662f\u66f4\u591a\u7684\u516c\u4f17\u53c2\u4e0e\u6307\u5bfc\u6211\u4eec\u793e\u4f1a\u4f7f\u7528\u7684\u6280\u672f\u7684\u89c4\u5219\u3002\u8b66\u5bdf\u662f\u5e02\u91cc\u7684\u96c7\u5458\u3002\u57ce\u5e02\u662f\u6211\u4eec\u793e\u4f1a\u7684\u53cd\u6620\u3002\u516c\u4f17\u5e94\u8be5\u51b3\u5b9a\u8b66\u5bdf\u4f7f\u7528\u4ec0\u4e48-\u4ee5\u53ca\u4e0d\u4f7f\u7528-\u6765\u76d1\u89c6\u4ed6\u4eec\u3002\n\u793e\u533a\u8b66\u5bdf\u76d1\u63a7(CCOPS)\u901a\u8fc7\u4e86CCOPS\u6cd5\u5f8b\uff0c\u786e\u4fdd\u5c45\u6c11\u6709\u6743\u51b3\u5b9a\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u76d1\u63a7\u6280\u672f\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u6700\u5927\u9650\u5ea6\u5730\u53d1\u6325\u4e86\u516c\u4f17\u5bf9\u8fd9\u4e9b\u51b3\u5b9a\u7684\u5f71\u54cd\u529b\u3002CCOPS\u6cd5\u5f8b\u4e0d\u4ec5\u8981\u6c42\u516c\u4f17\u4e86\u89e3\u6280\u672f\uff0c\u800c\u4e14\u8fd8\u79ef\u6781\u63a8\u52a8\u8b66\u5bdf\u90e8\u95e8\u7ef4\u62a4\u65b0\u6280\u672f\u7684\u5229\u76ca\u3001\u8d2d\u4e70\u548c\u91c7\u7528\u3002\n\u901a\u8fc7\u53c2\u4e0e\u548c\u63a8\u52a8\u8fd9\u9879\u7acb\u6cd5\uff0c\u6297\u8bae\u8005\u548c\u516c\u6c11\u53ef\u4ee5\u6539\u53d8\u5bf9\u8bdd\uff1b\u9664\u975e\u6211\u4eec\u505a\u9519\u4e86\u4ec0\u4e48\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u5e94\u8be5\u4e3a\u4e86\u6297\u8bae\u800c\u9003\u907f\u8b66\u65b9\u7684\u68c0\u67e5\u3002\u6709\u4e86\u66f4\u5927\u7684\u900f\u660e\u5ea6\u3001\u7acb\u6cd5\u548c\u884c\u52a8\u4e3b\u4e49\u6765\u521b\u9020\u95ee\u8d23\u548c\u900f\u660e\u5ea6\uff0c\u8fd9\u7bc7\u6587\u7ae0\u751a\u81f3\u5c31\u4e0d\u9700\u8981\u5b58\u5728\u4e86\u3002\n\u6b64\u8bc4\u8bba\u533a\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u5230\u6b64\u9875\u9762\u3002\u4f60\u53ef\u4ee5\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u627e\u5230\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "Over the last three weeks, hundreds of thousands of Americans have gathered across the country to protest police violence and racial injustice  in the wake of George Floyd\u2019s death. But here\u2019s something to be aware of: If you\u2019re attending a protest, there\u2019s a good chance the police in your city can\u2014and will\u2014know you\u2019re there.\n  From body cameras to cell-site simulators, license plate readers, social media monitoring tools, and drones, the police have eyes on the ground, road, subways, internet, and practically any protesting site you can imagine.\n In the past two decades, police departments around the country have become a hot target for commercial technology companies. Firms like Amazon and Axon market products to police departments that promise to make their jobs easier, better, and more effective. But this tech often results in poor policing, says Dave Maass, senior investigative researcher for the   Electronic Frontier Foundation (EFF).\n \u201cPolice departments are doing less outreach, less legwork, and fewer investigations,\u201d Maass tells  Popular Mechanics. \u201cInstead, they\u2019re relying on untested technology that can result in more abuse and corruption. Not to mention, it\u2019s a waste of taxpayer money.\u201d\n Commercial companies offer kickbacks to police departments, which sometimes act as business development engines to increase customer purchases or usage. Amazon, for example, enrolled   police departments to promote adoption of their Ring cameras in communities around the U.S.\n Amazon also handed out many free Ring units to police departments at police   conferences. According to Maass, officers received five free Rings for attending one party; that\u2019s roughly $1,000 in free products. Additionally,   Amazon gave free devices to police for every 20 people they convinced to use the Ring app. These marketing tactics may have led to an over-investment in, overt preference for, or unnecessary adoption of surveillance marketing tools.\n It\u2019s largely   unclear how much police departments are spending on surveillance technology. They don\u2019t always report what they use, how much it costs, and how it\u2019s being implemented. And while police departments claim this secrecy is necessary due to copyright infringement and other trade secret laws, it may be putting your privacy at risk.\n  Police have a variety of tools at their disposal that they can deploy to monitor who\u2019s attending a protest, how they\u2019re moving, and who to hold accountable if something goes wrong.\n   How they work: These computer-controlled camera systems are used to capture and time- and location-stamp license plate numbers. This data, which includes a photo of the car and driver (if it\u2019s moving) is stored in a central database. The information can be used to track those who attended, parked near, or left an event like a protest.\n How to spot them: ALPRs come in a wide array of shapes and sizes. They generally look like clunky boxes affixed to streetlights, street poles, mobile units, and trailers.\n How to protect yourself: If you live in a state where you\u2019re not required to have a front license plate, remove it. And if you have the option, don\u2019t drive your personal car to protests. Instead, consider walking or using public transportation.\n   How they work: Police officers wear these cameras on their bodies to record events and document the use of force. But the cameras can also record and document people in any situation where a cop is present. If used en masse and with facial recognition software, this could impinge on First and Fourth amendment rights. Additionally, early research shows body cameras are   largely ineffective at curbing the use of force.\n How to spot them: You can generally look for a box-shaped device worn on the chest of a police officer. However, police officers can also hide them underneath their vests, sometimes covertly, in a \u201cbutton-hole\u201d on their shirts.\n  How to protect yourself: The best way to evade being captured by a body-worn camera is to stay out of the line of sight of police officers. If you\u2019re near an officer, make sure you don\u2019t have any visible identifying features; wear a mask and a hat to block the camera\u2019s ability to identify you. But you can also use body cameras in your defense if an officer uses excessive action or otherwise behaves inappropriately.\n   How they work: These tools pretend to be legitimate cell phone towers and trick cellular devices into connecting to them. Once connected, they can identify International Mobile Subscriber IDs and determine who was or wasn\u2019t at a protest. The devices gather   metadata and content of phone calls, personally identifying information, and data usage, and are used in at   least 24 states.\n  How to spot them: The   SITCH project has open-source software that can be used to detect cell-site simulators.   WiGle.net can help show where verified cell towers are. Correlating the two data sources could help expose when cell-site simulators are being used. And   SeaGlass is a hardware project out of the University of Washington that helps to identify IMSI catchers in use.\n How to protect yourself: Short of building a device to help identify stringrays along and around a protest, simply put your phone into airplane mode.\n   How they work: Drones can have high-definition, live-feed video cameras, thermal infrared video cameras, heat sensors, automated license plate readers, and radar, which are used to track, monitor, and watch groups. They can also include   cell phone interception technology and back-end software tools like license plate readers, face recognition, and GPS trackers.\n How to spot them: Drones vary in size from tiny UAVs to large-scale military drones. Generally, look up and you may be able to spot them. However, know that media and activists also use drones to report on and track police action during protests.\n How to protect yourself: If you want to determine if drones are being used, you can consider using acoustic sensors, radio frequency analyzers, and optical sensors. But that\u2019s probably not an option for most people. In that case, use the same techniques to avoid facial recognition or FLIR technology that we recommend in other sections.\n   How it works: This software can be used in conjunction with any camera to identify people in photos, videos, and real life. It can also be used during the booking and trial processes in many police departments.\n How to spot it:  Any camera you encounter at a protest may have facial recognition software installed. It\u2019s better to assume it does than to assume it doesn\u2019t.\n How to protect yourself: You can find out if your local police department is using facial recognition software through this   interactive map. To avoid being detected at a protest, cover your face with a mask and wear a brimmed hat.\n    How they work: These cameras can register a person\u2019s body temperature and help find people when conditions make it so they otherwise wouldn\u2019t be seen.\n How to spot them: FLIRs are handheld or mounted on a car, rifle, or helmet, and can also be used with drones or UAVs. They can often be extremely difficult to spot.\n How to protect yourself: Hide behind a source that blocks heat signatures and minimize your skin exposure. Wearing long sleeves can reduce your visibility by up to 15 percent. Additionally, the best times of the day to be outside are at sunrise and sunset, when thermal imaging capture is less effective.\n   How they work: These mobile tower units are often equipped with ALPR technology, speakers, lights, and video cameras and are used to monitor events from a \u201cbirds-eye view.\u201d\n How to spot them: These are easy to spot as they\u2019re large, police-manned towers in public spaces.\n How to protect yourself: The bigger threats from MSTs are video and FLIR capture. Refer to those sections for how to best evade detection.\n   How it works: Police use hashtags, public and private accounts, digital message boards, and standard social platforms to monitor protesters at an event. This can be done by actual people or algorithms that monitor and farm data.\n How to spot it: Review   this document, which will help you determine if you\u2019re talking to a bot, and otherwise assume that all public posted social information associated with a hashtag that\u2019s being used to help protestors is also being used to help the police.\n How to protect yourself: Be mindful of whether or not you\u2019re talking to a bot, determine if you want to privatize or anonymize your online presence, and take the platform-appropriate steps to do so. You may also want to consider refraining from posting to social media from protests until after you\u2019ve left. This protects your privacy and the privacy of those around you.\n      Police surveillance technology can be frightening and may dissuade you from attending a protest. But before you give up your democratic duty and constitutional right to gather and activate for change, there are further actions you can take to make yourself safe.\n   Enable full-encryption on your cellular devices to ensure your data isn\u2019t accessible if it lands in the hands of police.\n    Dress for evasion or anonymity: Cover up tattoos, wear non-traceable clothing, and wear a mask. (You should be doing this anyway in the age of COVID-19, but it also helps to reduce your chances of being identified by FLIR, monitoring cameras, or other means).\n Make alternate transportation plans. ALPRs will most likely track your car and be able to identify you at a protest, but public transportation will also have a record of you depending on what form of payment you use.\n   Put your phone on airplane mode. This will reduce the chances of connecting to a cell-site simulator or otherwise being tracked.\n Don\u2019t unlock your phone if you don\u2019t have to. An unlocked phone is fair game for police officers.\n Scrub the meta-data off of your photos to reduce the likelihood of them being incriminating evidence.\n Protect your community. Be careful of where you post photos and who is in those photos.\n You\u2019re not required to give your password or hand over a cell phone to anyone. Ask if you\u2019re being detained; if the answer is no, then you can walk away.\n    Call a lawyer. If you don\u2019t have a number for one, ask fellow protestors. \u201cRemember to stay silent,\u201d Henna Kahn, a staff attorney in the criminal defense practice for Neighborhood Defender Service of Harlem, tells  Popular Mechanics. \u201cAnd don\u2019t consent to a search of your phone.\u201d\n Consider giving your phone to a friend instead of bringing it with you to the precinct office. This reduces the risk that police can use it against you.\n Refuse to unlock your device if asked. You\u2019re not required to unlock your phone, and you should instead ask for a lawyer to be present.\n Police can voucher your phone as arrest evidence if they think there\u2019s evidence of a crime on the phone. Otherwise, they may voucher your phone to keep it safe. Assuming the latter, you can get your phone back when released. Assuming the former, you won\u2019t get your phone back until the end of the criminal case.\n  \u201cPeople have a first amendment right to protest,\u201d says Khan. \u201cIt\u2019s troubling that the government is conducting this level of surveillance. It\u2019s important, now more than ever, that people know their rights.\u201d\n   \u201cI worry about the transparency\u2014or lack thereof\u2014of the surveillance, as well as how the data is used and regulated more than the kinds of technologies,\u201d Andrea Little Limbago, VP of Research for Interos, tells  Popular Mechanics.\n The technology is merely the acquisition method, and it\u2019s concerning to think about what happens to the data after it\u2019s been collected. For example, right now,   data collected from ALPRs and other sources is often sold to third parties, who then resell that data to insurance providers, banks, and credit monitors.   Vigilant Solutions and   ELSAG are the largest ALPR vendors of this information, and there\u2019s little you can do to request the removal of your information.\n  While public protest over data usage and facial recognition software has made some progress, it may not be the right approach. Recently   IBM,   Microsoft, and   Amazon agreed to stop (or temporarily halt) selling their products to police departments.\n \u201cWhat seems to be missing from that conversation is that the technology exists and will continue to be developed,\u201d Limbago says. \u201cAnd while American multinational corporations seem to be stepping back from that research, techno-authoritarian states will continue to refine their surveillance states, and companies like Clearview AI will continue designing facial recognition tools for the police, with much less oversight or media scrutiny.\u201d This is dangerous territory.\n  What we need is not less-qualified companies creating software, but more public engagement in the rules guiding the technologies being used in our society. Police officers are city employees. Cities are reflections of our society. The public should determine what police officers use\u2014and do not use\u2014to surveil them.\n The   Community Control Over Police Surveillance (CCOPS) passes   CCOPS laws that ensure residents are empowered to decide if and how surveillance technologies are used, through a process that maximizes the public\u2019s influence over those decisions. Not only do CCOPS laws require the public to be informed about technology, but they also actively push police departments to defend the interest in, purchase of, and adoption of new technologies.\n By participating in and pushing for this legislation, protestors and citizens can change the dialogue; we shouldn\u2019t need to evade police detection to protest unless we\u2019re doing something wrong. With greater transparency, legislation, and activism to create accountability and transparency, this article wouldn\u2019t even need to exist.\n   This commenting section is created and maintained by a third party, and imported onto this page. You may be able to find more information on their web site.", "posttime": "2020-06-16 11:39:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8b66\u65b9,police", "title": "\u5982\u4f55\u53d1\u73b0\u8b66\u65b9\u7684\u76d1\u63a7\u5de5\u5177", "title_en": "How to spot police surveillance tools", "transed": 1, "url": "https://www.popularmechanics.com/technology/security/a32851975/police-surveillance-tools-protest-guide/", "via": "", "real_tags": ["\u8b66\u65b9", "police"]}, {"category": "", "categoryclass": "", "imagename": "26024275cadb4834ccc5ba1310aa3f38.png", "infoid": 1006761, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4f7f\u5f97\u8fd9\u66f4\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u5b83\u5728\u5fae\u89c2\u8303\u56f4\u5185\u662f\u6709\u6548\u7684(1\u514b\u76f8\u5f53\u4e8e10000\u6807\u51c6\u5242\u91cf)\u3002\u5982\u679c\u4ed6\u7528\u8089\u773c\u770b\u5230\uff0c\u90a3\u4e0d\u662f\u4eba\u773c\u770b\u4e0d\u89c1\u7684\u201c\u51e0\u5fae\u514b\u201d\uff0c\u800c\u662f\u51e0\u5341\u4e2a/\u51e0\u767e\u4e2a/\u51e0\u5343\u4e2a\u5242\u91cf\u3002\u5373\u4f7f\u662f10\u5242\uff0c\u8089\u773c\u4ecd\u7136\u770b\u4e0d\u89c1\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u201c\u75b1\u75b9\uff0c\u6211\u60f3\u6211\u5728\u670d\u7528LSD\u201d\uff0c\u5982\u679c\u662f100\u5242\uff0c\u5b83\u4f1a\u7acb\u5373\u548c\u5927\u91cf\u5730\u663e\u73b0\u51fa\u6765\uff0c\u4ed6\u5c06\u65e0\u6cd5\u505a\u4efb\u4f55\u4e8b\u60c5\u3002", "note_en": "Which makes this even more unbelievable. It is potent on a microscopic scale (one gram being 10,000 standard doses). If he visually saw it, it\u2019s not \u201ca couple ug\u201d which would be imperceptible to the human eye, it would be dozens/ hundreds/ thousands of doses. Even 10 doses, which would still be not visible to the naked eye, is not going to result in \u201cherpaderp I think I am on LSD\u201d, and if it was say 100 doses it would be immediately and massively apparent, and he would be unable to do anything.", "posttime": "2020-06-16 11:22:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u6062\u590d,dosed,\u773c\u770b", "title": "\u9ed1\u5ba2\u5728\u6062\u590d\u5386\u53f2\u5408\u6210\u65f6\u4f7f\u7528LSD", "title_en": "Hacker Dosed with LSD While Restoring Historical Synth", "transed": 1, "url": "https://hackaday.com/2019/05/28/hacker-dosed-with-lsd-while-restoring-historical-synth/", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u6062\u590d", "dosed", "\u773c\u770b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BootChart\u662f\u4e00\u4e2a\u7528\u4e8eGNU/Linux\u5f15\u5bfc\u8fc7\u7a0b\u7684\u6027\u80fd\u5206\u6790\u548c\u53ef\u89c6\u5316\u7684\u5de5\u5177\u3002\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u6536\u96c6\u8d44\u6e90\u5229\u7528\u7387\u548c\u8fdb\u7a0b\u4fe1\u606f\uff0c\u7a0d\u540e\u4ee5PNG\u3001SVG\u6216EPS\u7f16\u7801\u56fe\u8868\u7684\u5f62\u5f0f\u5448\u73b0\u3002\n\u8be5\u9879\u76ee\u6700\u521d\u662f\u4e3a\u4e86\u54cd\u5e94\u6b27\u6587\u00b7\u6cf0\u4f26\u5728Fedora\u5f00\u53d1\u90ae\u4ef6\u5217\u8868\u4e0a\u53d1\u5e03\u7684\u6311\u6218\uff1a\u5fb7\u56fd\u5728\u7ebf\u8d4c\u573a(Online Casino Deutsch)\u3002\n\u6311\u6218\u5728\u4e8e\u521b\u5efa\u4e00\u5f20\u6d77\u62a5\uff0c\u4ee5\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u663e\u793a\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u8d44\u6e90\u5229\u7528\u7387\u5982\u4f55\uff0c\u5f53\u524d\u5f15\u5bfc\u4e0e\u78c1\u76d8\u548cCPU\u5229\u7528\u7387100%\u7684\u7406\u60f3\u72b6\u6001\u6709\u4f55\u4e0d\u540c\uff0c\u56e0\u6b64\uff0c\u4f18\u5316\u7684\u673a\u4f1a\u5728\u54ea\u91cc\u3002\u5e15\u5c14\u54c8\u7279\u00b7\u5185\u8482\u5361\u897f\u8bfa(Parhaat Nettikasinot)\u3002\nBootchart\u63d0\u4f9b\u4e86\u5185\u6838\u5728\u521d\u59cb\u5316\u9636\u6bb5\u8fd0\u884c\u7684shell\u811a\u672c\u3002\u8be5\u811a\u672c\u5c06\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5e76\u4ece/proc\u6587\u4ef6\u7cfb\u7edf\u6536\u96c6\u8fdb\u7a0b\u4fe1\u606f\u3001CPU\u7edf\u8ba1\u4fe1\u606f\u548c\u78c1\u76d8\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\u3002\u6027\u80fd\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u5728\u5f15\u5bfc\u8fc7\u7a0b\u5b8c\u6210\u540e\u5199\u5165\u78c1\u76d8\u3002\u65b0\u7684\u5728\u7ebf\u8d4c\u573a\u3002\n\u7a0d\u540e\u5c06\u4f7f\u7528Java\u5e94\u7528\u7a0b\u5e8f(\u6216Web\u8868\u5355)\u5904\u7406\u5f15\u5bfc\u65e5\u5fd7\u6587\u4ef6\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5c06\u6784\u5efa\u8fdb\u7a0b\u6811\u5e76\u4ee5\u4e0d\u540c\u683c\u5f0f\u5448\u73b0\u6027\u80fd\u56fe\u8868\uff1aCassino Online Brasil\u3002\nSourceForge\u6700\u8fd1\u4e3a\u6e90\u4ee3\u7801\u63a7\u5236\u542f\u7528\u4e86Subversion\uff0c\u5e76\u5207\u6362\u4e86BootChart\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u8f7d\u9875\u9762\u3002Vincent Caron\u5c06SVG\u6e32\u67d3\u5668\u79fb\u690d\u5230Perl\u3002\u6e90\u4ee3\u7801\u548c\u4e00\u4e9b\u793a\u4f8b\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\nBootChart\u6839\u636eGNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1v.2\u7248\u6743\u6240\u6709\u00a92005\uff0c\u7531Ziga Mahkovec&lt\uff1bZiga mahkovec at Gmail com&gt\uff1b", "note_en": "Bootchart is a tool for performance analysis and visualization of theGNU/Linux boot process. Resource utilization and process information arecollected during the boot process and are later rendered in a PNG, SVG or EPS encoded chart.\n The project started as a response to achallenge posted by Owen Tayloron the Fedora development mailing list:  Online Casino Deutsch\n &#34;The challenge is to create a single poster showing graphicallywhat is going on during the boot, what is the utilization of resources, howthe current boot differs from the ideal world of 100% disk and CPUutilization, and thus, where are the opportunities for optimization. &#34;  Parhaat Nettikasinot\n Bootchart provides a shell script to be run by the kernel in the init phase. The script will run in background and collect process information, CPU statistics and disk usage statistics from the /proc file system. The performance data are stored in memoryand are written to disk once the boot process completes.  new online casino\n The boot log file is later processed using a Java application (or the web form) which builds the process tree andrenders a performance chart in different formats:  Cassino Online Brasil\n    SourceForge recently enabled Subversion for source control, and bootchart switched over. Details are available on the  download page. Vincent Caron ported the SVG renderer to Perl. The source code and somesamples are available here.\n Bootchart is distributed under the GNU General Public License v.2 Copyright \u00a9 2005 by Ziga Mahkovec &lt;ziga mahkovec at gmail com&gt;", "posttime": "2020-06-16 11:21:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u89c6\u5316,\u6027\u80fd,\u5f15\u5bfc,boot", "title": "\u5f15\u5bfc\u56fe-\u5f15\u5bfc\u8fdb\u7a0b\u6027\u80fd\u53ef\u89c6\u5316", "title_en": "Bootchart \u2013 Boot Process Performance Visualization", "transed": 1, "url": "http://www.bootchart.org", "via": "", "real_tags": ["\u53ef\u89c6\u5316", "\u6027\u80fd", "\u5f15\u5bfc", "boot"]}, {"category": "", "categoryclass": "", "imagename": "fd628ab6bdc56ae5bb95ad85b63b318f.jpeg", "infoid": 1006759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54c8\u4f5b\u5927\u5b66\u5468\u4e00\u665a\u95f4\u8868\u793a\uff0c\u5b83\u5c06\u4e0d\u4f1a\u8981\u6c42\u672c\u79d1\u751f\u7533\u8bf7\u8005\u660e\u5e74\u63d0\u4ea4ACT\u6216SAT\u6210\u7ee9\uff0c\u7406\u7531\u662f\u201c\u5728\u5b89\u6392\u8003\u8bd5\u65b9\u9762\u5b58\u5728\u96be\u4ee5\u514b\u670d\u7684\u6311\u6218\u201d\u3002\n\u201c\u9762\u5bf9\u56f4\u7ed5\u51a0\u72b6\u75c5\u6bd2\u548c\u7ecf\u6d4e\u7684\u524d\u6240\u672a\u6709\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u7126\u8651\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u6211\u4eec\u6240\u80fd\u63d0\u4f9b\u5e2e\u52a9\uff0c\u201d\u8be5\u6821\u5728\u5176\u7f51\u7ad9\u4e0a\u7684\u66f4\u65b0\u4e2d\u8868\u793a\u3002\u8be5\u516c\u53f8\u76ee\u524d\u4e0d\u4f1a\u6539\u53d8\u5f55\u53d6\u622a\u6b62\u65e5\u671f\uff0c\u4f46\u8868\u793a\u9884\u8ba1\u5728\u7b2c\u4e00\u8f6e\u884c\u52a8\u4e2d\u7533\u8bf7\u7684\u4eba\u4f1a\u51cf\u5c11\u3002\u9274\u4e8e\u2026\u2026", "note_en": "Harvard University said Monday night that it wouldn\u2019t require undergraduate applicants to submit ACT or SAT scores next year, citing \u201cinsurmountable challenges in scheduling tests.\u201d\n  \u201cIn the face of unprecedented uncertainty and anxiety surrounding the coronavirus and the economy, we want to be helpful in any way we can,\u201d the school said in an update on its website. It isn\u2019t changing its admission deadlines at this time, but said it expects fewer people to apply in the early action round, which has a Nov. 1 deadline, given...", "posttime": "2020-06-16 11:04:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u660e\u5e74,university,\u8868\u793a", "title": "\u54c8\u4f5b\u5927\u5b66\u660e\u5e74\u4e0d\u4f1a\u8981\u6c42Sat\uff0cAct\u62db\u751f", "title_en": "Harvard University Won\u2019t Require Sat, Act for Admissions Next Year", "transed": 1, "url": "https://www.wsj.com/articles/harvard-university-wont-require-sat-act-for-admissions-next-year-11592272825", "via": "", "real_tags": ["\u5927\u5b66", "\u660e\u5e74", "\u8868\u793a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8dc3\u641c\u7d22BBN\u8774\u8776\u662f\u4e00\u53f0\u7531\u535a\u5c14\u7279\u3001\u8d1d\u62c9\u5185\u514b\u548c\u7ebd\u66fc\u572820\u4e16\u7eaa80\u5e74\u4ee3\u5efa\u9020\u7684\u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\u673a\u3002\u5b83\u662f\u4ee5\u8774\u8776\u591a\u7ea7\u4ea4\u6362\u7f51\u7edc\u547d\u540d\u7684\uff0c\u5b83\u5c31\u662f\u56f4\u7ed5\u8fd9\u4e2a\u4ea4\u6362\u7f51\u7edc\u5efa\u9020\u7684\u3002\u6bcf\u53f0\u673a\u5668\u6700\u591a\u6709512\u4e2aCPU\uff0c\u6bcf\u4e2aCPU\u90fd\u6709\u672c\u5730\u5185\u5b58\uff0c\u5b83\u4eec\u53ef\u4ee5\u8fde\u63a5\u8d77\u6765\uff0c\u5141\u8bb8\u6bcf\u4e2aCPU\u8bbf\u95ee\u5176\u4ed6CPU\u7684\u5185\u5b58\uff0c\u5c3d\u7ba1\u5ef6\u8fdf\u6bd4\u5b83\u81ea\u5df1\u7684\u8981\u957f\u5f97\u591a(\u5927\u7ea615\uff1a1)\u3002CPU\u662f\u5546\u54c1\u5316\u7684\u5fae\u5904\u7406\u5668\u3002\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u662f\u5171\u4eab\u7684\u3002\n\u7b2c\u4e00\u4ee3\u4f7f\u7528\u6469\u6258\u7f57\u62c968000\u5904\u7406\u5668\uff0c\u4e4b\u540e\u662f68010\u7248\u672c\u3002[1]\u8774\u8776\u8fde\u63a5\u662f\u4e13\u95e8\u4e3a\u8fd9\u53f0\u8ba1\u7b97\u673a\u5f00\u53d1\u7684\u3002\u7b2c\u4e8c\u4ee3\u6216\u7b2c\u4e09\u4ee3GP-1000\u578b\u4f7f\u7528\u6469\u6258\u7f57\u62c968020\uff0c\u5e76\u6269\u5c55\u5230256CPU\u3002\u540e\u8005\u7684TC-2000\u673a\u578b\u4f7f\u7528\u6469\u6258\u7f57\u62c9MC88100\uff1bs\uff0c\u5e76\u6269\u5c55\u5230512\u4e2aCPU\u3002[2]\u3002\n\u8774\u8776\u6700\u521d\u662f\u4f5c\u4e3a\u8bed\u97f3\u6f0f\u6597\u5f00\u53d1\u7684\uff0c\u5b83\u662fST-II\u534f\u8bae\u7684\u8def\u7531\u5668\uff0c\u65e8\u5728\u901a\u8fc7IP\u7f51\u7edc\u4f20\u8f93\u8bed\u97f3\u548c\u89c6\u9891\u3002\u8774\u8776\u786c\u4ef6\u540e\u6765\u88ab\u7528\u4e8eDARPA\u7684\u5bbd\u5e26\u5206\u7ec4\u536b\u661f\u7f51\u7edc\u7684\u8774\u8776\u536b\u661fIMP(BSAT)\u5206\u7ec4\u4ea4\u6362\u673a\uff0c\u8be5\u7f51\u7edc\u901a\u8fc7\u5171\u4eab\u76843Mbit/s\u5e7f\u64ad\u536b\u661f\u4fe1\u9053\u5728\u7f8e\u56fd\u5404\u5730\u7684\u591a\u4e2a\u5730\u70b9\u8fd0\u884c\u3002[3]\u572820\u4e16\u7eaa80\u5e74\u4ee3\u672b\uff0c\u8be5\u7f51\u7edc\u6210\u4e3a\u5730\u9762\u5bbd\u5e26\u7f51\u7edc\uff0c\u57fa\u4e8e\u5730\u9762T1\u7535\u8def\uff0c\u800c\u4e0d\u662f\u5171\u4eab\u7684\u5e7f\u64ad\u536b\u661f\u4fe1\u9053\uff0cBSAT\u6210\u4e3a\u5bbd\u5e26\u5206\u7ec4\u4ea4\u6362\u673a(WPS)\u3002DARPA\u5728BBN\u8d5e\u52a9\u7684\u53e6\u4e00\u4e2a\u9879\u76ee\u751f\u4ea7\u4e86\u8774\u8776\u591a\u5904\u7406\u5668\u4e92\u8054\u7f51\u7f51\u5173(Internet Router)\uff0c\u7528\u4e8e\u5728IP\u5c42\u4e92\u8fde\u4e0d\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u3002\u4e0eBSAT\u4e00\u6837\uff0c\u8774\u8776\u7f51\u5173\u901a\u8fc7\u5c06\u8def\u7531\u8ba1\u7b97\u548c\u7f51\u7edc\u63a5\u53e3\u5904\u7684I/O\u76f8\u7ed3\u5408\uff0c\u5e76\u4f7f\u7528\u8774\u8776\u7684\u4ea4\u6362\u7ed3\u6784\u6765\u63d0\u4f9b\u7f51\u7edc\u4e92\u8fde\uff0c\u6253\u7834\u4e86\u4e92\u8054\u7f51\u7f51\u5173\u4e00\u76f4\u4f7f\u7528\u7684\u5171\u4eab\u603b\u7ebf\u5c0f\u578b\u673a\u4f53\u7cfb\u7ed3\u6784\u7684\u4e89\u7528\u3002\u8fd9\u5bfc\u81f4\u4e86\u663e\u8457\u66f4\u9ad8\u7684\u94fe\u8def\u541e\u5410\u91cf\u3002[4]\u3002\n\u8774\u8776\u6700\u521d\u4f7f\u7528\u7684\u662f\u4e00\u79cd\u540d\u4e3aChrysalis\u7684\u4e13\u6709\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u57281989\u5e74\u8f6c\u79fb\u5230\u4e86Mach\u5185\u6838\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f53\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u4e0d\u5747\u5300\u65f6\uff0c\u673a\u5668\u5177\u6709SMP\u5185\u5b58\u8bed\u4e49\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u79f0\u7684\u591a\u5904\u7406\u5668\u8fd0\u884c\u3002http://www.new-npac.org/projects/cdroms/cewes-1999-06-vol1/nhse/hpccsurvey/orgs/bbn/bbn\u3002\n\u62e5\u6709128\u4e2a\u5904\u7406\u5668\u7684\u6700\u5927\u914d\u7f6e\u7cfb\u7edf\u5728\u7f57\u5207\u65af\u7279\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u3002[5]\u5927\u591a\u6570\u4ea4\u4ed8\u7684\u7cfb\u7edf\u5927\u7ea6\u670916\u4e2a\u5904\u7406\u5668\u3002\u535a\u7269\u9986\u91cc\u4f3c\u4e4e\u6ca1\u6709\u5df2\u77e5\u7684\u914d\u7f6e\u3002\u81f3\u5c11\u6709\u4e00\u4e2a\u7cfb\u7edf\u88ab\u8ba4\u4e3a\u4f4d\u4e8eDARPA\u81ea\u52a8\u9a7e\u9a76\u8f66\u8f86\u5185\u3002[\u9700\u8981\u5f15\u7528]\u3002\nTotalView\u662f\u4e3a\u8774\u8776\u5f00\u53d1\u7684\u5e76\u884c\u7a0b\u5e8f\u8c03\u8bd5\u5668\uff0c\u5b83\u7684\u4f7f\u7528\u5bff\u547d\u8d85\u8fc7\u4e86\u8be5\u5e73\u53f0\uff0c\u5e76\u88ab\u79fb\u690d\u5230\u8bb8\u591a\u5176\u4ed6\u5927\u89c4\u6a21\u5e76\u884c\u673a\u4e0a\u3002\n\u96f7\u7279\u4f2f\u683c\uff0cR\uff1b\u6000\u66fc\uff0c\u0421\uff1b\u4ea8\u7279\uff0cD.\uff1b\u970d\u592b\u66fc\uff0cM.\uff1b\u5361\u7ef4\uff0cP.\uff1b\u6d77\u5fb7\uff0cB.\uff1b\u514b\u62c9\u514b\uff0cW.\uff1b\u514b\u62c9\u5229\uff0cM.\u3002(1979\u5e748\u6708)\u3002\u58f0\u97f3\u6f0f\u6597\u7684\u5f00\u53d1\u3002\u7cfb\u7edf\uff1a\u8bbe\u8ba1\u62a5\u544a\u3002Bolt Beranek\u548cNewman Inc.\u3002\u7b2c4098\u53f7\u62a5\u544a\u4e66\u3002\n^Amestoy\uff0cPatrick R.\uff1bDayd\u00e9\uff0cMichel J.\uff1bDuff\uff0cIain S.\uff1bMor\u00e8re\uff0cPierre(1992\u5e7410\u67089\u65e5)\uff0c\u201c\u865a\u62df\u5171\u4eab\u5185\u5b58\u8ba1\u7b97\u673a\u4e0a\u7684\u7ebf\u6027\u4ee3\u6570\u8ba1\u7b97\u201d\uff0cInt Journal of High Speed Computing(\u51fa\u7248\u4e8e1992\u5e74)\uff0c7\uff0c\u7b2c21-43\u9875\uff0cCiteSeerX\uff0c10.1.1.37.8448\n\u6e29\u65af\u987f\u00b7\u57c3\u5fb7\u8499\u5fb7\uff1b\u53f2\u8482\u6587\u00b7\u5e03\u9c81\u95e8\u5854\u5c14\uff1b\u5b89\u5fb7\u70c8\u65af\u00b7\u57c3\u5207\u5c3c\u514b\uff1b\u53f2\u8482\u6587\u00b7\u65af\u6258\u5947\uff1b\u6c64\u59c6\u00b7\u8003\u5c14\u5fb7\u4f0d\u5fb7\uff1b\u6c64\u59c6\u00b7\u91cc\u65af(1986\u5e748\u67086\u65e5)\uff0c#34\uff1b\u5bbd\u5e26\u5206\u7ec4\u536b\u661f\u7f51\u7edc\u7684\u8774\u8776TM\u536b\u661fIMP\uff0cACM SIGCOMM\uff0cStowe\uff0cVT(\u51fa\u7248\u4e8e1986\u5e74)\uff0c\u7b2c194-202\u9875\u3002\n\u514b\u96f7\u683c\u00b7\u5e15\u7279\u91cc\u5947\uff1b\u53f2\u8482\u6587\u00b7\u5e03\u9c81\u95e8\u5854\u5c14(2006\u5e741\u6708)\u3002BBN&34\uff1b\u7684\u6570\u636e\u7f51\u7edc\u3002IEEE\u8ba1\u7b97\u53f2\u5e74\u9274\u3002\u534e\u76db\u987f\u7279\u533a\uff1aIEEE\u8ba1\u7b97\u673a\u534f\u4f1a\u300228(1)\uff1a56-71\u3002DOI\uff1a10.1109/mahc.2006.7.\u3002\n\u4e66\u540d\uff1aT.J.\uff1bM.L.\uff1bBrown\uff0cC.M.(\u4f5c\u8005\uff1aT.J.)\uff1b\u53f8\u5404\u7279\uff0cM.L.\uff1b\u5e03\u6717\uff0cC.M.\u3002(1988\u5e749\u67081\u65e5)\uff0c\u201c\u5927\u89c4\u6a21\u5e76\u884c\u7a0b\u5e8f\u8bbe\u8ba1\uff1a\u4f7f\u7528BBN\u8776\u5f62\u5e76\u884c\u5904\u7406\u5668\u7684\u7ecf\u9a8c\u201d\uff0c\u7f57\u5207\u65af\u7279\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\uff0cHDL1802/15082\u3002\nBBN at Index of Dead Supercomputer Projects-\u663e\u7136\u662f\u672c\u6587\u5927\u90e8\u5206\u6587\u672c\u7684\u6765\u6e90\u3002", "note_en": "Jump to navigation  Jump to search  The  BBN Butterfly was a massively  parallel computer built by  Bolt, Beranek and Newman in the 1980s. It was named for the &#34;butterfly&#34; multi-stage switching network around which it was built. Each machine had up to 512  CPUs, each with local memory, which could be connected to allow every CPU access to every other CPU&#39;s memory, although with a substantially greater latency (roughly 15:1) than for its own. The CPUs were commodity microprocessors. The memory address space was shared.\n The first generation used Motorola 68000 processors, followed by a 68010 version.  [1]The Butterfly connect was developed specifically for this computer. The second or third generation, GP-1000 models used Motorola  68020&#39;s and scaled to 256 CPUs. The later, TC-2000 models used Motorola  MC88100&#39;s, and scaled to 512 CPUs.  [2]\n The Butterfly was initially developed as the  Voice Funnel, a router for the ST-II protocol intended for carrying voice and video over IP networks. The Butterfly hardware was later used for the Butterfly Satellite IMP (BSAT) packet switch of DARPA&#39;s Wideband Packet Satellite Network which operated at multiple sites around the US over a shared 3 Mbit/s broadcast satellite channel.  [3] In the late 1980s, this network became the  Terrestrial Wideband Network, based on terrestrial T1 circuits instead of a shared broadcast satellite channel and the BSAT became the Wideband Packet Switch (WPS). Another DARPA sponsored project at BBN produced the Butterfly Multiprocessor Internet Gateway (Internet Router) to interconnect different types of networks at the IP layer. Like the BSAT, the Butterfly Gateway broke the contention of a shared bus minicomputer architecture that had been in use for Internet Gateways by combining the routing computations and I/O at the network interfaces and using the Butterfly&#39;s switch fabric to provide the network interconnections. This resulted in significantly higher link throughputs.  [4]\n The Butterfly began with a proprietary  operating system called Chrysalis, but moved to a  Mach kernel operating system in 1989. While the memory access time was non-uniform, the machine had SMP memory semantics, and could be operated as a symmetric multiprocessor.  http://www.new-npac.org/projects/cdroms/cewes-1999-06-vol1/nhse/hpccsurvey/orgs/bbn/bbn\n The largest configured system with 128 processors was at the University of Rochester Computer Science Department.  [5] Most delivered systems had about 16 processors. No known configurations appear to be in museums. At least one system is thought to be sitting within a  DARPA autonomous vehicle. [   citation needed]\n TotalView, the parallel program debugger developed for the Butterfly, outlived the platform and was ported to a number of other massively parallel machines.\n    ^   Rettberg, R; Wyman, \u0421; Hunt, D.; Hoffman, M.; Carvey, P.; Hyde, B.; Clark, W.; Kraley, M. (August 1979). &#34;Development of a Voice Funnel&#34;.  System: Design Report. Bolt Beranek and Newman Inc. Report No. 4098.\n ^   Amestoy, Patrick R.; Dayd\u00e9, Michel J.; Duff, Iain S.; Mor\u00e8re, Pierre (October 9, 1992), &#34;Linear Algebra Calculations on a virtual shared memory computer&#34;,  Int Journal of High Speed Computing (published 1992),  7, pp.\u00a021\u201343,  CiteSeerX\u00a0  10.1.1.37.8448\n ^   Edmond, Winston; Blumenthal, Steven; Echenique, Andres; Storch, Steven; Calderwood, Tom; Rees, Tom (August 6, 1986), &#34;The Butterfly TM Satellite IMP for the Wideband Packet Satellite Network&#34;,  ACM SIGCOMM, Stowe, VT (published 1986), pp.\u00a0194\u2013202\n ^    Partridge, Craig;  Blumenthal, Steven (January 2006). &#34;Data Networking at BBN&#34;.  IEEE Annals of the History of Computing. Washington, DC: IEEE Computer Society.  28 (1): 56\u201371.  doi: 10.1109/mahc.2006.7.\n ^   Leblanc, T. J.; Scott, M.L.; Brown, C.M. (September 1, 1988),  Large-Scale Parallel Programming: Experience with the BBN Butterfly Parallel Processor, University of Rochester Computer Science Department,  hdl: 1802/15082\n  BBN at Index of Dead Supercomputer Projects - Apparent source for much of this article&#39;s text.", "posttime": "2020-06-16 10:28:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bbn,butterfly,\u8774\u8776", "title": "BBN\u8776\u578b\u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\u673a", "title_en": "BBN Butterfly massively parallel computer", "transed": 1, "url": "https://en.wikipedia.org/wiki/BBN_Butterfly", "via": "", "real_tags": ["bbn", "butterfly", "\u8774\u8776"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006755, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8Rust\u5728TiKV\u4e0a\u4e0b\u6587\u4e2d\u7684\u7f16\u8bd1\u65f6\u95f4\uff0cTiKV\u662fTiDB\u6570\u636e\u5e93\u80cc\u540e\u7684\u952e\u503c\u5b58\u50a8\u3002\n\u5728\u672c\u7cfb\u5217\u7684\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86Rust\u7684\u65e9\u671f\u5f00\u53d1\u5386\u53f2\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5bfc\u81f4\u4e86\u4e00\u7cfb\u5217\u51b3\u7b56\uff0c\u8fd9\u4e9b\u51b3\u7b56\u5bfc\u81f4\u4e86\u4e00\u79cd\u7f16\u8bd1\u901f\u5ea6\u5f88\u6162\u7684\u9ad8\u6027\u80fd\u8bed\u8a00\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u5c06\u66f4\u8be6\u7ec6\u5730\u63cf\u8ff0Rust\u4e2d\u4e00\u4e9b\u4f7f\u7f16\u8bd1\u65f6\u95f4\u53d8\u6162\u7684\u8bbe\u8ba1\u3002\n\u5728\u8fd9\u4e00\u7cfb\u5217\u7684\u524d\u4e00\u96c6\u4e4b\u540e\uff0c\u4eba\u4eec\u5728HackerNews\uff0cReddit\u548cLobste.rs\u4e0a\u53d1\u8868\u4e86\u5f88\u591a\u5f88\u68d2\u7684\u8bc4\u8bba\u3002\n\u901a\u5e38\u91cd\u8981\u7684\u662f\u90e8\u5206\u91cd\u5efa\uff0c\u56e0\u4e3a\u8fd9\u662f\u5f00\u53d1\u4eba\u5458\u5728\u6784\u5efa-\u6d4b\u8bd5\u5468\u671f\u4e2d\u4f53\u9a8c\u6700\u591a\u7684\u3002\nWalterBright\u6307\u51fa\u6570\u636e\u6d41\u5206\u6790(DFA)\u662f\u6602\u8d35\u7684(\u4e8c\u6b21)\u3002\u94c1\u9508\u4f9d\u8d56\u4e8e\u6570\u636e\u6d41\u5206\u6790\u3002\u6211\u4e0d\u77e5\u9053\u94c1\u9508\u662f\u5982\u4f55\u7f16\u8bd1\u65f6\u95f4\u7684\uff0c\u4f46\u4e86\u89e3\u5b83\u662f\u4ef6\u597d\u4e8b\u3002\nKibwen\u63d0\u9192\u6211\u4eec\uff0c\u66f4\u5feb\u7684\u94fe\u63a5\u5668\u5bf9\u6784\u5efa\u65f6\u95f4\u6709\u5f71\u54cd\uff0cLLD\u6700\u7ec8\u53ef\u80fd\u6bd4\u7cfb\u7edf\u94fe\u63a5\u5668\u66f4\u5feb\u3002\n\u5728\u6ca1\u6709\u8fdb\u4e00\u6b65\u6f84\u6e05\u7684\u60c5\u51b5\u4e0b\u6cdb\u6cdb\u5730\u8c08\u8bba\u201c\u7f16\u8bd1\u65f6\u201d\u662f\u5f88\u8bf1\u4eba\u7684\uff0c\u4f46\u201c\u7f16\u8bd1\u65f6\u201d\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u6709\u4e9b\u5bf9\u4e0d\u540c\u7684\u4eba\u6216\u591a\u6216\u5c11\u90fd\u5f88\u91cd\u8981\u3002Rust\u4e2d\u7684\u56db\u4e2a\u4e3b\u8981\u7f16\u8bd1\u65f6\u573a\u666f\u662f\uff1a\n\u201c\u5f00\u53d1\u914d\u7f6e\u6587\u4ef6\u201d\u9700\u8981\u9488\u5bf9\u5feb\u901f\u7f16\u8bd1\u65f6\u95f4\u3001\u7f13\u6162\u8fd0\u884c\u65f6\u95f4\u548c\u6700\u5927\u53ef\u8c03\u8bd5\u6027\u800c\u8bbe\u8ba1\u7684\u7f16\u8bd1\u5668\u8bbe\u7f6e\u3002\u201c\u7248\u672c\u914d\u7f6e\u6587\u4ef6\u201d\u9700\u8981\u9488\u5bf9\u5feb\u901f\u8fd0\u884c\u65f6\u95f4\u3001\u7f13\u6162\u7f16\u8bd1\u65f6\u95f4\u4ee5\u53ca\u901a\u5e38\u6700\u4f4e\u53ef\u8c03\u8bd5\u6027\u800c\u8bbe\u8ba1\u7684\u7f16\u8bd1\u5668\u8bbe\u7f6e\u3002\u5728Rust\u4e2d\uff0c\u5b83\u4eec\u5206\u522b\u4e0eCargo Build\u548cCargo Build--Release\u4e00\u8d77\u8c03\u7528\uff0c\u5e76\u4e14\u8868\u793a\u7f16\u8bd1\u65f6/\u8fd0\u884c\u65f6\u7684\u6743\u8861\u3002\n\u5b8c\u5168\u91cd\u65b0\u751f\u6210\u662f\u4ece\u5934\u5f00\u59cb\u751f\u6210\u6574\u4e2a\u9879\u76ee\uff0c\u90e8\u5206\u91cd\u65b0\u751f\u6210\u53d1\u751f\u5728\u4fee\u6539\u4ee5\u524d\u751f\u6210\u7684\u9879\u76ee\u4e2d\u7684\u4ee3\u7801\u4e4b\u540e\u3002\u90e8\u5206\u91cd\u5efa\u53ef\u4ee5\u660e\u663e\u53d7\u76ca\u4e8e\u589e\u91cf\u7f16\u8bd1\u3002\n\u5b83\u4eec\u5927\u591a\u5206\u522b\u7c7b\u4f3c\u4e8e\u5f00\u53d1\u6a21\u5f0f\u548c\u53d1\u5e03\u6a21\u5f0f\uff0c\u5c3d\u7ba1\u5728Cargo\u4e2d\u5f00\u53d1/\u6d4b\u8bd5\u548c\u53d1\u5e03/\u5de5\u4f5c\u53f0\u4e4b\u95f4\u7684\u4ea4\u4e92\u53ef\u80fd\u662f\u5fae\u5999\u548c\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6(TiKV\u6709\u66f4\u591a)\uff0c\u4f46\u8fd9\u4e9b\u90fd\u662f\u94c1\u9508\u7684\u663e\u800c\u6613\u89c1\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4eec\u5185\u7f6e\u5728\u8d27\u7269\u4e2d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u573a\u666f\uff0c\u6bd4\u5982\u4ec5\u68c0\u67e5\u7c7b\u578b(\u8d27\u7269\u68c0\u67e5)\u3001\u53ea\u6784\u5efa\u5355\u4e2a\u9879\u76ee(\u8d27\u7269\u6784\u5efa-p)\u3001\u5355\u6838\u4e0e\u591a\u6838\u3001\u672c\u5730\u4e0e\u5206\u5e03\u5f0f\u3001\u672c\u5730\u4e0eCI\u3002\n\u7f16\u8bd1\u65f6\u95f4\u4e5f\u4f1a\u53d7\u5230\u4eba\u7c7b\u611f\u77e5\u7684\u5f71\u54cd--\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u5728\u5b83\u5b9e\u9645\u4e0a\u5f88\u4e0d\u9519\u7684\u65f6\u5019\u611f\u89c9\u4e0d\u597d\uff0c\u800c\u5728\u5b83\u5b9e\u9645\u4e0a\u4e0d\u662f\u5f88\u597d\u7684\u65f6\u5019\u611f\u89c9\u5f88\u597d\u3002\u8fd9\u662fRUST\u8bed\u8a00\u670d\u52a1\u5668(RLS)\u548cRUST\u5206\u6790\u5668\u80cc\u540e\u7684\u524d\u63d0\u4e4b\u4e00--\u5982\u679c\u5f00\u53d1\u4eba\u5458\u5728\u4ed6\u4eec\u7684IDE\u4e2d\u5f97\u5230\u6301\u7eed\u7684\u3001\u5b9e\u65f6\u7684\u53cd\u9988\uff0c\u90a3\u4e48\u5b8c\u5168\u7f16\u8bd1\u9700\u8981\u591a\u957f\u65f6\u95f4\u90fd\u65e0\u5173\u7d27\u8981\u3002\n\u56e0\u6b64\uff0c\u5728\u672c\u7cfb\u5217\u4e2d\u52a1\u5fc5\u8bb0\u4f4f\uff0c\u4ece\u201c\u5feb\u901f\u7f16\u8bd1/\u6162\u901f\u8fd0\u884c\u201d\u5230\u201c\u5feb\u901f\u8fd0\u884c/\u6162\u901f\u7f16\u8bd1\u201d\uff0c\u6709\u4e00\u7cfb\u5217\u53ef\u8c03\u7684\u53ef\u80fd\u6027\uff0c\u4e0d\u540c\u7684\u573a\u666f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5f71\u54cd\u7f16\u8bd1\u65f6\u95f4\uff0c\u5176\u4e2d\u7f16\u8bd1\u65f6\u95f4\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5f71\u54cd\u611f\u77e5\u3002\n\u78b0\u5de7\u7684\u662f\uff0c\u5bf9\u4e8eTiKV\uff0c\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\uff0c\u6211\u4eec\u6700\u5173\u5fc3\u7684\u7f16\u8bd1\u65f6\u95f4\u573a\u666f\u662f\u201c\u53d1\u5e03\u914d\u7f6e\u6587\u4ef6/\u90e8\u5206\u91cd\u5efa\u201d(Release Profile/Partial Rebuild)\u3002\u5728\u672a\u6765\u7684\u5206\u671f\u4ed8\u6b3e\u4e2d\u4f1a\u6709\u66f4\u591a\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u4fe1\u606f\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u4e86Rust\u4e2d\u5bfc\u81f4\u7f16\u8bd1\u65f6\u95f4\u7f13\u6162\u7684\u4e00\u4e9b\u4e3b\u8981\u8bbe\u8ba1\u3002\u6211\u5c06\u5b83\u4eec\u63cf\u8ff0\u4e3a\u201c\u6743\u8861\u201d\uff0c\u56e0\u4e3a\u6709\u5f88\u597d\u7684\u7406\u7531Rust\u662f\u8fd9\u6837\u7684\uff0c\u800c\u8bed\u8a00\u8bbe\u8ba1\u5145\u6ee1\u4e86\u5c34\u5c2c\u7684\u6743\u8861\u3002\nRust\u5904\u7406\u6cdb\u578b\u7684\u65b9\u6cd5\u662f\u7f16\u8bd1\u65f6\u95f4\u4e0d\u4f73\u6700\u660e\u663e\u7684\u8bed\u8a00\u7279\u6027\uff0c\u7406\u89e3Rust\u5982\u4f55\u5c06\u6cdb\u578b\u51fd\u6570\u8f6c\u6362\u4e3a\u673a\u5668\u7801\u5bf9\u4e8e\u7406\u89e3Rust\u7f16\u8bd1\u65f6/\u8fd0\u884c\u65f6\u7684\u6743\u8861\u975e\u5e38\u91cd\u8981\u3002\n\u6cdb\u578b\u901a\u5e38\u662f\u4e00\u4e2a\u590d\u6742\u7684\u4e3b\u9898\uff0c\u800c\u9508\u578b\u6cdb\u578b\u6709\u591a\u79cd\u5f62\u5f0f\u3002Ruust\u5177\u6709\u6cdb\u578b\u51fd\u6570\u548c\u6cdb\u578b\u7c7b\u578b\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u5f0f\u8868\u793a\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u4e3b\u8981\u8ba8\u8bbaRust\u5982\u4f55\u8c03\u7528\u6cdb\u578b\u51fd\u6570\uff0c\u4f46\u662f\u5bf9\u4e8e\u6cdb\u578b\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u7f16\u8bd1\u65f6\u6ce8\u610f\u4e8b\u9879\u3002\u6211\u5ffd\u7565\u5176\u4ed6\u5f62\u5f0f\u7684\u6cdb\u578b(\u6bd4\u5982Iml Character)\uff0c\u56e0\u4e3a\u5b83\u4eec\u8981\u4e48\u6709\u7c7b\u4f3c\u7684\u7f16\u8bd1\u65f6\u5f71\u54cd\uff0c\u8981\u4e48\u6211\u5c31\u662f\u5bf9\u5b83\u4eec\u4e86\u89e3\u4e0d\u591f\u3002\n\u4f5c\u4e3a\u672c\u8282\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0bToString\u7279\u5f81\u548c\u6cdb\u578b\u51fd\u6570print\uff1a\nPrint\u4f1a\u5c06\u4efb\u4f55\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5185\u5bb9\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002\u6211\u4eec\u8bf4\u201cprint\u662f\u7c7b\u578bT\u7684\u6cdb\u578b\uff0c\u5176\u4e2dT\u5b9e\u73b0\u4e86Stringify\u201d\u3002\u56e0\u6b64\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7c7b\u578b\u8c03\u7528print\uff1a\n\u7f16\u8bd1\u5668\u5c06\u8fd9\u4e9b\u6253\u5370\u8c03\u7528\u8f6c\u6362\u4e3a\u673a\u5668\u7801\u7684\u65b9\u5f0f\u5bf9\u8bed\u8a00\u7684\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u7279\u5f81\u90fd\u6709\u5f88\u5927\u5f71\u54cd\u3002\n\u5f53\u4f7f\u7528\u4e00\u7ec4\u7279\u5b9a\u7684\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u6cdb\u578b\u51fd\u6570\u65f6\uff0c\u79f0\u4e3a\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u5b9e\u4f8b\u5316\u3002\n\u7ffb\u8bd1\u6bcf\u7ec4\u5b9e\u4f8b\u5316\u7c7b\u578b\u53c2\u6570\u7684\u6cdb\u578b\u51fd\u6570\uff0c\u76f4\u63a5\u8c03\u7528\u6bcf\u4e2a\u7279\u5f81\u65b9\u6cd5\uff0c\u4f46\u590d\u5236\u6cdb\u578b\u51fd\u6570\u7684\u5927\u90e8\u5206\u673a\u5668\u6307\u4ee4\uff0c\u6216\u8005\u3002\n\u53ea\u8f6c\u6362\u6cdb\u578b\u51fd\u6570\u4e00\u6b21\uff0c\u901a\u8fc7\u51fd\u6570\u6307\u9488(\u901a\u8fc7\u201cvtable\u201d)\u8c03\u7528\u6bcf\u4e2a\u7279\u5f81\u65b9\u6cd5\u3002\n\u7b2c\u4e00\u4e2a\u7ed3\u679c\u662f\u9759\u6001\u65b9\u6cd5\u5206\u6d3e\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u662f\u52a8\u6001(\u6216\u201c\u865a\u62df\u201d)\u65b9\u6cd5\u5206\u6d3e\u3002\u7b2c\u4e00\u79cd\u6709\u65f6\u79f0\u4e3a\u201c\u5355\u5f62\u5316\u201d\uff0c\u7279\u522b\u662f\u5728C++\u548cRust\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u8868\u793a\u7b80\u5355\u6982\u5ff5\u7684\u4ee4\u4eba\u56f0\u60d1\u7684\u590d\u6742\u5355\u8bcd\u3002\n\u524d\u9762\u7684\u793a\u4f8b\u4f7f\u7528Rust&#39\uff1b\u7684\u7c7b\u578b\u53c2\u6570(&lt\uff1bT\uff1aToString&gt\uff1b)\u6765\u5b9a\u4e49\u9759\u6001\u5206\u6d3e\u7684\u6253\u5370\u51fd\u6570\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u53e6\u5916\u4e24\u4e2aRust\u793a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u4f7f\u7528\u9759\u6001\u5206\u6d3e\uff0c\u4f7f\u7528\u5bf9impl traitinstance\u7684\u5f15\u7528\uff0c\u7b2c\u4e8c\u4e2a\u4f7f\u7528\u52a8\u6001\u5206\u6d3e\uff0c\u4f7f\u7528\u5bf9dyn traitinstance\u7684\u5f15\u7528\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u95f4\u552f\u4e00\u7684\u533a\u522b\u662f\uff0c\u7b2c\u4e00\u4e2aprint&#39\uff1b\u7684\u53c2\u6570\u662f&amp\uff1bimpl ToString\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f&amp\uff1bdyn ToString\u7c7b\u578b\u3002\u7b2c\u4e00\u79cd\u662f\u4f7f\u7528\u9759\u6001\u8c03\u5ea6\uff0c\u7b2c\u4e8c\u79cd\u662f\u52a8\u6001\u8c03\u5ea6\u3002\n\u5728Rust&amp\uff1bIml ToString\u4e2d\uff0cToString\u5b9e\u8d28\u4e0a\u662f\u53ea\u4f7f\u7528\u4e00\u6b21\u7684\u7c7b\u578b\u53c2\u6570\u53c2\u6570\u7684\u7b80\u5199\uff0c\u5982\u524d\u9762\u7684\u793a\u4f8bFN print&lt\uff1bT\uff1aToString&gt\uff1b(v\uff1at)\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e9b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5185\u8054(\u4ece\u4e0d)\u6765\u51fb\u8d25\u4f18\u5316\u5668\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e00\u70b9\uff0c\u5b83\u5c06\u628a\u8fd9\u4e9b\u7b80\u5355\u7684\u793a\u4f8b\u53d8\u6210\u5b8c\u5168\u76f8\u540c\u7684\u673a\u5668\u4ee3\u7801\u3002\u6211\u5c06\u5728\u672c\u7cfb\u5217\u7684\u4e0b\u4e00\u96c6\u8fdb\u4e00\u6b65\u63a2\u8ba8\u8fd9\u4e00\u73b0\u8c61\u3002\n\u4e0b\u9762\u662f\u8fd9\u4e24\u4e2a\u793a\u4f8b\u7684\u7a0b\u5e8f\u96c6\u7684\u4e00\u4e2a\u6781\u5176\u7b80\u5316\u548c\u51c0\u5316\u7684\u7248\u672c\u3002\u5982\u679c\u60a8\u60f3\u770b\u771f\u5b9e\u7684\u4e1c\u897f\uff0c\u4e0a\u9762\u7684\u6e38\u620f\u94fe\u63a5\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u6807\u8bb0\u4e3a.-&gt\uff1bASM\u7684\u6309\u94ae\u6765\u751f\u6210\u5b83\u4eec\u3002\n\u6253\u5370\uff1a\uff1ahffa7359fe88f0de2\uff1a.\u3002callq*\uff1a\uff1acore\uff1a\uff1afmt\uff1a\uff1awrite\uff1a\uff1ah01edf6dd68a42c9c(%rip).\u6253\u5370\uff1a\uff1aha0649f845bb59b0c\uff1a.\u3002callq*\uff1a\uff1acore\uff1a\uff1afmt\uff1a\uff1awrite\uff1a\uff1ah01edf6dd68a42c9c(%rip).main\uff1a\uff1ah6b41e7a408fe6876\uff1a.\u3002\u547c\u53eb\u6253\u5370\uff1a\uff1ahffa7359fe88f0de2.\u3002\u547c\u53eb\u6253\u5370\uff1a\uff1aha0649f845bb59b0c\u3002\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e00\u70b9\u662f\u529f\u80fd\u7684\u91cd\u590d\u6216\u7f3a\u5931\uff0c\u8fd9\u53d6\u51b3\u4e8e\u7b56\u7565\u3002\u5728\u9759\u6001\u60c5\u51b5\u4e0b\uff0c\u6709\u4e24\u4e2a\u6253\u5370\u51fd\u6570\uff0c\u901a\u8fc7\u5176\u540d\u79f0\u4e2d\u7684\u6563\u5217\u503c\u6765\u533a\u5206\uff0c\u5e76\u4e14main\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002\u5728\u52a8\u6001\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u4e3b\u8981\u8c03\u7528\u4e24\u6b21\u7684\u6253\u5370\u51fd\u6570\u3002\u8fd9\u4e24\u79cd\u7b56\u7565\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u5728\u673a\u5668\u5c42\u9762\u5904\u7406\u5b83\u4eec\u7684\u8bba\u70b9\u7684\u7ec6\u8282\u592a\u590d\u6742\u4e86\uff0c\u5728\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\u8fd9\u4e24\u79cd\u7b56\u7565\u4ee3\u8868\u4e86\u51fa\u4e86\u540d\u7684\u56f0\u96be\u6743\u8861\uff1a\u7b2c\u4e00\u79cd\u7b56\u7565\u521b\u5efa\u4e86\u5927\u91cf\u7684\u673a\u5668\u6307\u4ee4\u590d\u5236\uff0c\u8feb\u4f7f\u7f16\u8bd1\u5668\u82b1\u8d39\u65f6\u95f4\u751f\u6210\u8fd9\u4e9b\u6307\u4ee4\uff0c\u5e76\u7ed9\u6307\u4ee4\u7f13\u5b58\u5e26\u6765\u538b\u529b\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u9759\u6001\u5730\u800c\u4e0d\u662f\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u5206\u6d3e\u6240\u6709\u7684\u7279\u5f81\u65b9\u6cd5\u8c03\u7528\u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u8282\u7701\u4e86\u5927\u91cf\u673a\u5668\u6307\u4ee4\uff0c\u7f16\u8bd1\u5668\u8f6c\u6362\u4e3a\u673a\u5668\u4ee3\u7801\u6240\u9700\u7684\u5de5\u4f5c\u8f83\u5c11\uff0c\u4f46\u662f\u6bcf\u4e2a\u7279\u5f81\u65b9\u6cd5\u8c03\u7528\u90fd\u662f\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8fdb\u884c\u7684\u95f4\u63a5\u8c03\u7528\uff0c\u8fd9\u901a\u5e38\u6bd4\u8f83\u6162\uff0c\u56e0\u4e3aCPU\u5728\u52a0\u8f7d\u6307\u9488\u4e4b\u524d\u65e0\u6cd5\u77e5\u9053\u5b83\u5c06\u8df3\u8f6c\u5230\u4ec0\u4e48\u6307\u4ee4\u3002\n\u4eba\u4eec\u901a\u5e38\u8ba4\u4e3a\u9759\u6001\u5206\u6d3e\u7b56\u7565\u4f1a\u5bfc\u81f4\u673a\u5668\u4ee3\u7801\u66f4\u5feb\uff0c\u5c3d\u7ba1\u6211\u8fd8\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u5173\u4e8e\u8fd9\u4e00\u95ee\u9898\u7684\u7814\u7a76(\u6211\u4eec\u5c06\u5728\u672c\u7cfb\u5217\u7684\u672a\u6765\u7248\u672c\u4e2d\u5bf9\u6b64\u4e3b\u9898\u8fdb\u884c\u5b9e\u9a8c)\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u8fd9\u662f\u6709\u610f\u4e49\u7684-\u5982\u679cCPU\u77e5\u9053\u5b83\u6b63\u5728\u8c03\u7528\u7684\u6240\u6709\u51fd\u6570\u7684\u5730\u5740\uff0c\u5b83\u5e94\u8be5\u80fd\u591f\u66f4\u5feb\u5730\u8c03\u7528\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u5148\u52a0\u8f7d\u51fd\u6570\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u6307\u4ee4\u4ee3\u7801\u52a0\u8f7d\u5230\u6307\u4ee4\u9ad8\u901f\u7f13\u5b58\u4e2d\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u56e0\u7d20\u8ba9\u4eba\u6000\u7591\u8fd9\u4e00\u76f4\u89c9\uff1a\n\u9996\u5148\uff0c\u73b0\u4ee3CPU\u5728\u5206\u652f\u9884\u6d4b\u4e0a\u6295\u5165\u4e86\u5927\u91cf\u7684\u7845\u7247\uff0c\u56e0\u6b64\u5982\u679c\u6700\u8fd1\u8c03\u7528\u4e86\u51fd\u6570\u6307\u9488\uff0c\u90a3\u4e48\u5b83\u5f88\u53ef\u80fd\u5728\u4e0b\u4e00\u6b21\u88ab\u6b63\u786e\u9884\u6d4b\u5e76\u88ab\u5feb\u901f\u8c03\u7528\uff1b\n\u5176\u6b21\uff0c\u5355\u8bcd\u5316\u5bfc\u81f4\u4e86\u5927\u91cf\u7684\u673a\u5668\u6307\u4ee4\uff0c\u8fd9\u4e00\u73b0\u8c61\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u4ee3\u7801\u81a8\u80c0\u201d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9CPU\u7684\u6307\u4ee4\u9ad8\u901f\u7f13\u5b58\u5e26\u6765\u5f88\u5927\u7684\u538b\u529b\uff1b\n\u7b2c\u4e09\uff0cLLVM\u4f18\u5316\u5668\u51fa\u4eba\u610f\u6599\u5730\u667a\u80fd\uff0c\u5e76\u4e14\u5728\u4ee3\u7801\u4e2d\u5177\u6709\u8db3\u591f\u7684\u53ef\u89c1\u6027\uff0c\u6709\u65f6\u53ef\u4ee5\u5c06\u865a\u62df\u8c03\u7528\u8f6c\u6362\u4e3a\u9759\u6001\u8c03\u7528\u3002\nC++\u548cRust\u90fd\u5f3a\u70c8\u9f13\u52b1\u5355\u5f62\u5316\uff0c\u90fd\u4f1a\u751f\u6210\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u4e2d\u901f\u5ea6\u6700\u5feb\u7684\u673a\u5668\u4ee3\u7801\uff0c\u800c\u4e14\u90fd\u6709\u4ee3\u7801\u81a8\u80c0\u7684\u95ee\u9898\u3002\u8fd9\u4f3c\u4e4e\u8bc1\u660e\u4e86\u5355\u4e00\u5316\u7b56\u7565\u786e\u5b9e\u662f\u4e24\u79cd\u7b56\u7565\u4e2d\u901f\u5ea6\u8f83\u5feb\u7684\u4e00\u79cd\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u5947\u602a\u7684\u53cd\u4f8b\uff1aC.C\u5b8c\u5168\u6ca1\u6709\u6cdb\u578b\uff0c\u800c\u4e14C\u7a0b\u5e8f\u901a\u5e38\u662f\u4ed6\u4eec\u7c7b\u4e2d\u6700\u8584\u3001\u6700\u5feb\u7684\u3002\u7528C\u8bed\u8a00\u91cd\u73b0\u5355\u6001\u5316\u7b56\u7565\u9700\u8981\u4f7f\u7528\u4e11\u964b\u7684C\u5b8f\u9884\u5904\u7406\u5668\u6280\u672f\uff0c\u800c\u73b0\u4ee3\u7684C\u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u6a21\u5f0f\u901a\u5e38\u662f\u57fa\u4e8evtable\u7684\u3002\n\u6458\u8981\uff1a\u7f16\u8bd1\u5668\u5de5\u7a0b\u5e08\u666e\u904d\u8ba4\u4e3a\uff0c\u5355\u5f62\u5316\u4f1a\u5bfc\u81f4\u6cdb\u578b\u4ee3\u7801\u7a0d\u5fae\u5feb\u4e00\u4e9b\uff0c\u800c\u7f16\u8bd1\u65f6\u95f4\u5374\u4f1a\u7a0d\u5fae\u957f\u4e00\u4e9b\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5355\u5f62\u5316\u7f16\u8bd1\u65f6\u95ee\u9898\u5728Rust\u4e2d\u662f\u590d\u5408\u7684\uff0c\u56e0\u4e3aRust\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u6cdb\u578b\u51fd\u6570\u7684\u673a\u7bb1(\u901a\u5e38\u79f0\u4e3a\u201c\u7f16\u8bd1\u5355\u5143\u201d)\u4e2d\u8f6c\u6362\u6cdb\u578b\u51fd\u6570\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u6211\u4eec\u7684\u6253\u5370\u793a\u4f8b\u4e2d\uff0c\u5982\u679ccrate a\u8c03\u7528print(&#34\uff1bhello\uff0cworld&34\uff1b)\uff0c\u800ccrate b\u4e5f\u8c03\u7528print(&#34\uff1bhello\uff0cworld\uff0c\u6216\u5176\u4ed6&#34\uff1b)\uff0c\u90a3\u4e48crate a\u548cb\u90fd\u5c06\u5305\u542b\u5355\u5143\u5316\u7684print_str\u51fd\u6570-\u7f16\u8bd1\u5668\u5c06\u4e24\u6b21\u6267\u884c\u6240\u6709\u7684\u7c7b\u578b\u68c0\u67e5\u548c\u8f6c\u6362\u5de5\u4f5c\u3002\u5982\u4eca\uff0c\u5171\u4eab\u6cdb\u578b\u5728\u8f83\u4f4e\u7684\u4f18\u5316\u7ea7\u522b\u90e8\u5206\u7f13\u89e3\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u5c3d\u7ba1\u5728\u5144\u5f1f\u4f9d\u8d56\u5173\u7cfb\u548c\u8f83\u9ad8\u7684\u4f18\u5316\u7ea7\u522b\u4e2d\u4ecd\u7136\u5b58\u5728\u91cd\u590d\u7684\u6cdb\u578b\u3002\n\u6240\u6709\u8fd9\u4e9b\u53ea\u6d89\u53ca\u5230\u5355\u5f62\u5316\u6240\u6d89\u53ca\u7684\u6743\u8861\u7684\u8868\u9762\u3002\u6211\u901a\u8fc7\u4e86\u5c3c\u514b\u7684\u8fd9\u4e2a\u8349\u7a3f\uff0c\u4ed6\u662f\u201c\u94c1\u9508\u201d\u80cc\u540e\u7684\u4e3b\u8981\u7c7b\u578b\u7406\u8bba\u5bb6\uff0c\u4ed6\u5bf9\u6b64\u6709\u51e0\u53e5\u8bdd\u8981\u8bf4\uff1a\n\u59ae\u53ef\uff1a\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e00\u5207\u770b\u8d77\u6765\u90fd\u76f8\u5f53\u51c6\u786e\uff0c\u9664\u4e86\u6211\u8ba4\u4e3a\u5355\u8bcd\u5316\u533a\u57df\u7701\u7565\u4e86\u5f88\u591a\u590d\u6742\u6027\u3002\u8fd9\u7edd\u5bf9\u4e0d\u53ea\u662f\u5173\u4e8e\u865a\u62df\u51fd\u6570\u8c03\u7528\u3002\n\u59ae\u53ef\uff1a\u4e5f\u662f\u50cffoo.bar\u8fd9\u6837\u7684\u4e1c\u897f\uff0cbar\u7684\u504f\u79fb\u91cf\u53d6\u51b3\u4e8efoo\u7684\u7c7b\u578b\u3002\nNiko\uff1a\u5f88\u591a\u8bed\u8a00\u901a\u8fc7\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528\u6307\u9488\u6765\u907f\u5f00\u8fd9\u4e2a\u95ee\u9898(\u5982\u679c\u4f60\u4e0d\u4f7f\u7528\u5b8f\uff0c\u5305\u62ec\u6cdb\u578bC\u8bed\u8a00)\u3002\nNiko\uff1a\u66f4\u4e0d\u7528\u8bf4\u50cf\u8fed\u4ee3\u5668\u8fd9\u6837\u7684\u590d\u6742\u7c7b\u578b\u7684\u6784\u9020\uff0c\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u5b8c\u5168\u5b9e\u4f8b\u5316\u7684\u5c0f\u7a0b\u5e8f\uff0c\u7136\u540e\u662f\u53ef\u5b9a\u5236\u7684-\u5c3d\u7ba1\u8fd9\u53ef\u4ee5\u7531\u8db3\u591f\u667a\u80fd\u7684\u7f16\u8bd1\u5668\u91cd\u73b0\u3002\n\u59ae\u53ef\uff1a(\u7279\u522b\u662f\uff0c\u865a\u62df\u8c03\u7528\u4e5f\u53ef\u4ee5\u5185\u8054\uff0c\u5c3d\u7ba1\u4f18\u5316\u7a0b\u5ea6\u8f83\u4f4e\uff1b\u6211\u8bb0\u5f97\u5728\u5f53\u65f6\u7684\u2026\u4e2d\u66fe\u8ba8\u8bba\u8fc7\u8fd9\u4e00\u70b9\u3002\u865a\u62df\u547c\u53eb\u5185\u8054\u5728\u7ba1\u9053\u4e2d\u53d1\u751f\u7684\u65f6\u95f4\u76f8\u5bf9\u8f83\u665a)\u3002\nNiko\uff1a\u6211\u8bb0\u5f97\uff0c\u5728\u8f6c\u5411\u5355\u5f62\u5316\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u6709\u4e24\u6761\u8def\u5f84\u6765\u5904\u7406\u6240\u6709\u4e8b\u60c5\uff1a\u4e00\u6761\u662f\u7b80\u5355\u7684\u9759\u6001\u8def\u5f84\uff0c\u5176\u4e2d\u6240\u6709\u7c7b\u578b\u90fd\u662fLLVM\u5df2\u77e5\u7684\uff1b\u53e6\u4e00\u6761\u662f\u53ef\u6015\u7684\u52a8\u6001\u8def\u5f84\uff0c\u5728\u8fd9\u6761\u8def\u5f84\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u751f\u6210\u4ee3\u7801\u6765\u52a8\u6001\u8ba1\u7b97\u5b57\u6bb5\u548c\u4e8b\u7269\u7684\u504f\u79fb\u91cf\u3002\n\u59ae\u53ef\uff1a\u6211\u8ba4\u4e3a\u4eca\u5929\u53ef\u4ee5\u66f4\u597d\u5730\u5904\u7406\u5f88\u591a\u95ee\u9898-\u4f8b\u5982\uff0c\u6211\u4eec\u6709\u76f8\u5f53\u53ef\u9760\u7684\u4ee3\u7801\u6765\u8ba1\u7b97\u5e03\u5c40\uff0c\u6211\u4eec\u6709MIR\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u5f97\u591a\u7684\u76ee\u6807-\u6240\u4ee5\u6211\u4e0d\u4f1a\u90a3\u4e48\u5bb3\u6015\u4e0d\u5f97\u4e0d\u62e5\u6709\u8fd9\u4e24\u6761\u8def\u5f84\u3002\nNiko\uff1a\u8fd8\u6709\u4e00\u4e9b\u4e1c\u897f\uff0c\u6bd4\u5982\u9700\u8981\u52a8\u6001\u5408\u6210\u7c7b\u578b\u63cf\u8ff0\u7b26(\u5c3d\u7ba1\u4e5f\u8bb8\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u901a\u8fc7\u5806\u6808\u5206\u914d\u6765\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42)\u3002\nNiko\uff1a\u8fd9\u91cc\uff0c\u60a8\u6709\u4e00\u4e2a\u52a8\u6001\u63d0\u4f9b\u7ed9\u60a8\u7684T\u7684\u7c7b\u578b\u63cf\u8ff0\u7b26\uff0c\u4f46\u662f\u60a8\u5fc5\u987b\u6784\u5efaVEC\u7684\u7c7b\u578b\u63cf\u8ff0\u7b26\n\u59ae\u53ef\uff1a\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u80fd\u641e\u6e05\u695aVEC&lt\uff1bT&&gt;\uff1b\uff1aDEBUG\uff0c\u800c\u6211\u4eec\u53ea\u77e5\u9053T\uff1aDEBUG\u3002\n\u59ae\u53ef\uff1a\u6211\u4eec\u4e5f\u8bb8\u53ef\u4ee5\u901a\u8fc7\u5411\u6211\u4eec\u7684\u547c\u53eb\u8005\u2026\u6253\u5f00VEC\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u672c\u7cfb\u5217\u7684\u4e0b\u4e00\u96c6\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u7f16\u8bd1\u5355\u5143-\u7f16\u8bd1\u5668\u4e00\u6b21\u5904\u7406\u7684\u4ee3\u7801\u675f-\u4ee5\u53ca\u9009\u62e9\u7f16\u8bd1\u5355\u5143\u5982\u4f55\u5f71\u54cd\u7f16\u8bd1\u65f6\u95f4\u3002\n\u5f88\u591a\u4eba\u4e3a\u8fd9\u4e2a\u535a\u5ba2\u7cfb\u5217\u63d0\u4f9b\u4e86\u5e2e\u52a9\u3002\u7279\u522b\u611f\u8c22Niko Matsakis\u7684\u53cd\u9988\uff0c\u4ee5\u53caCalvin Weng\u7684\u6821\u5bf9\u548c\u7f16\u8f91\u3002", "note_en": "In this series we explore Rust&#39;s compile times within the context of  TiKV, the key-value store behind the  TiDB database.\n   In  the previous post in the series we covered Rust&#39;s early development history, and how it led to a series of decisions that resulted in a high-performance language that compiles slowly. Over the next few we&#39;ll describe in more detail some of the designs in Rust that make compile time slow.\n    After the  previous episode of this series, people made a lot of great comments on  HackerNews,  Reddit, and  Lobste.rs.\n  What often matters is partial rebuilds since that is what developersexperience most in their build-test cycle.\n  WalterBright pointed out that data flow analysis (DFA) is expensive(quadratic). Rust depends on data flow analysis. I don&#39;t know how thisimpacts Rust compile times, but it&#39;s good to be aware of.\n kibwen reminded us that faster linkers have an impact on build times,and that LLD may be faster than the system linker eventually.\n  It&#39;s tempting to talk about \u201ccompile-time\u201d broadly, without any further clarification, but there are many types of \u201ccompile-time\u201d, some that matter more or less to different people. The four main compile-time scenarios in Rust are:\n  The \u201cdevelopment profile\u201d entails compiler settings designed for fast compile times, slow run times, and maximum debuggability. The \u201crelease profile\u201d entails compiler settings designed for fast run times, slow compile times, and, usually, minimum debuggability. In Rust, these are invoked with  cargo build and  cargo build --release respectively, and are indicative of the compile-time/run-time tradeoff.\n A full rebuild is building the entire project from scratch, and a partial rebuild happens after modifying code in a previously built project. Partial rebuilds can notably benefit from  incremental compilation.\n   These are mostly similar to development mode and release mode respectively, though the interactions in cargo between development / test and release / bench can be subtle and surprising. There may be other profiles (TiKV has more), but those are the obvious ones for Rust, as built-in to cargo. Beyond that there are other scenarios, like typechecking only ( cargo check), building just a single project ( cargo build -p), single-core vs. multi-core, local vs. distributed, local vs. CI.\n Compile time is also affected by human perception \u2014 it&#39;s possible for compile time to feel bad when it&#39;s actually decent, and to feel decent when it&#39;s actually not so great. This is one of the premises behind the  Rust Language Server (RLS) and  rust-analyzer \u2014 if developers are getting constant, real-time feedback in their IDE then it doesn&#39;t matter as much how long a full compile takes.\n So it&#39;s important to keep in mind through this series that there is a spectrum of tunable possibilities from \u201cfast compile / slow run\u201d to \u201cfast run / slow compile\u201d, there are different scenarios that affect compile time in different ways, and in which compile time affects perception in different ways.\n It happens that for TiKV we&#39;ve identified that the scenario we care most about with respect to compile time is \u201crelease profile / partial rebuilds\u201d. More about that in future installments.\n The rest of this post details some of the major designs in Rust that cause slow compile time. I describe them as \u201ctradeoffs\u201d, as there are good reasons Rust is the way it is, and language design is full of awkward tradeoffs.\n  Rust&#39;s approach to generics is the most obvious language feature to blame on bad compile times, and understanding how Rust translates generic functions to machine code is important to understanding the Rust compile-time/run-time tradeoff.\n Generics generally are a complex topic, and Rust generics come in a number of forms. Rust has generic functions and generic types, and they can be expressed in multiple ways. Here I&#39;m mostly going to talk about how Rust calls generic functions, but there are further compile-time considerations for generic type translations. I ignore other forms of generics (like  impl Trait), as either they have similar compile-time impact, or I just don&#39;t know enough about them.\n As a simple example for this section, consider the following  ToString trait and the generic function  print:\n  print will print to the console anything that can be converted to a  String type. We say that \u201c print is generic over type  T, where  T implements  Stringify\u201d. Thus I can call  print with different types:\n  The way a compiler translates these calls to  print to machine code has a huge impact on both the compile-time and run-time characteristics of the language.\n When a generic function is called with a particular set of type parameters it is said to be  instantiated with those types.\n  translate the generic function for each set of instantiated type parameters, calling each trait method directly, but duplicating most of the generic function&#39;s machine instructions, or\n translate the generic function just once, calling each trait method through a function pointer (via a  \u201cvtable\u201d).\n The first results in  static method dispatch, the second in  dynamic (or \u201cvirtual\u201d) method dispatch. The first is sometimes called \u201cmonomorphization\u201d, particularly in the context of C++ and Rust, a confusingly complex word for a simple idea.\n  The previous example uses Rust&#39;s type parameters ( &lt;T: ToString&gt;) to define astatically-dispatched  print function. In this section we present two more Rustexamples, the first with static dispatch, using references to  impl traitinstances, and the second with dynamic dispatch, with references to  dyn traitinstances.\n     Notice that the only difference between these two cases is that the first print&#39;s argument is type  &amp;impl ToString, and the second&#39;s is  &amp;dyn ToString. The first is using static dispatch, and the second dynamic.\n In Rust  &amp;impl ToString is essentially shorthand for a type parameter argumentthat is only used once, like in the earlier example  fn print&lt;T: ToString&gt;(v: T).\n Note that in these examples we have to use  inline(never) to defeat theoptimizer. Without this it would turn these simple examples into the exact samemachine code. I&#39;ll explore this phenomenon further in a future episode of thisseries.\n Below is an extremely simplified and sanitized version of the assemblyfor these two examples. If you want to see the real thing, the playgroundlinks above can generate them by clicking the buttons labeled  ... -&gt; ASM.\n print::hffa7359fe88f0de2: ... callq *::core::fmt::write::h01edf6dd68a42c9c(%rip) ...print::ha0649f845bb59b0c: ... callq *::core::fmt::write::h01edf6dd68a42c9c(%rip) ...main::h6b41e7a408fe6876: ... callq print::hffa7359fe88f0de2 ... callq print::ha0649f845bb59b0c\n   The important thing to note here is the duplication of functions or lackthereof, depending on the strategy. In the static case there are two  printfunctions, distinguished by a hash value in their names, and  main calls bothof them. In the dynamic case, there is a single  print function that  maincalls twice. The details of how these two strategies actually handle theirarguments at the machine level are too intricate to go into here.\n  These two strategies represent a notoriously difficult tradeoff: the first creates lots of machine instruction duplication, forcing the compiler to spend time generating those instructions, and putting pressure on the instruction cache, but \u2014 crucially \u2014 dispatching all the trait method calls statically instead of through a function pointer. The second saves lots of machine instructions and takes less work for the compiler to translate to machine code, but every trait method call is an indirect call through a function pointer, which is generally slower because the CPU can&#39;t know what instruction it is going jump to until the pointer is loaded.\n It is often thought that the static dispatch strategy results in faster machine code, though I have not seen any research into the matter (we&#39;ll do an experiment on this subject in a future edition of this series). Intuitively, it makes sense \u2014 if the CPU knows the address of all the functions it is calling it should be able to call them faster than if it has to first load the address of the function, then load the instruction code into the instruction cache. There are though factors that make this intuition suspect:\n first, modern CPUs have invested a lot of silicon into branch prediction, soif a function pointer has been called recently it will likely be predictedcorrectly the next time and called quickly;\n second, monomorphization results in huge quantities of machine instructions, aphenomenon commonly referred to as \u201ccode bloat\u201d, which could put greatpressure on the CPU&#39;s instruction cache;\n third, the LLVM optimizer is surprisingly smart, and with enough visibilityinto the code can sometimes turn virtual calls into static calls.\n C++ and Rust both strongly encourage monomorphization, both generate some of the fastest machine code of any programming language, and both have problems with code bloat. This seems to be evidence that the monomorphization strategy is indeed the faster of the two. There is though a curious counter-example: C. C has no generics at all, and C programs are often both the slimmest  and fastest in their class. Reproducing the monomorphization strategy in C requires using ugly C macro preprocessor techniques, and modern object-orientation patterns in C are often vtable-based.\n Takeaway: it is a broadly thought by compiler engineers that monomorphiation results in somewhat faster generic code while taking somewhat longer to compile.\n Note that the monomorphization-compile-time problem is compounded in Rust because Rust translates generic functions in every crate (generally, \u201ccompilation unit\u201d) that instantiates them. That means that if, given our  print example, crate  a calls  print(&#34;hello, world&#34;), and crate  b also calls  print(&#34;hello, world, or whatever&#34;), then both crate  a and  b will contain the monomorphized  print_str function \u2014 the compiler does all the type-checking and translation work twice. This is partially mitigated today at lower optimization levels by  shared generics, though there are still duplicated generics  in sibling dependencies,and at higher optimization levels.\n All that is only touching on the surface of the tradeoffs involved in monomorphization. I passed this draft by  Niko, the primary type theorist behind Rust, and he had some words to say about it:\n niko: so far, everything looks pretty accurate, except that I think the monomorphization area leaves out a lot of the complexity. It&#39;s definitely not just about virtual function calls.\n niko: it&#39;s also things like  foo.bar where the offset of bar depends on the type of foo\n niko: many languages sidestep this problem by using pointers everywhere (including generic C, if you don&#39;t use macros)\n niko: not to mention the construction of complex types like iterators, that are basically mini-programs fully instantiated and then customizable \u2013 though this  can be reproduced by a sufficiently smart compiler\n niko: (in particular, virtual calls can be inlined too, though you get less optimization; I remember some discussion about this at the time \u2026 how virtual call inlining happens relatively late in the pipeline)\n     niko: as I recall, before we moved to monomorphization, we had to have two paths for everything: the easy, static path, where all types were known to LLVM, and the horrible, dynamic path, where we had to generate the code to dynamically compute the offsets of fields and things\n   niko: I think a lot of this could be better handled today \u2013 we have e.g. a reasonably reliable bit of code that computes Layout, we have MIR which is a much simpler target \u2013 so I am not as terrified of having to have those two paths\n niko: there was also stuff like the need to synthesize type descriptors on the fly (though maybe we could always get by with stack allocation for that)\n  niko: here, you have a type descriptor for T that was given to you dynamically, but you have to build the type descriptor for Vec\n     niko: because we have to be able to figure out  Vec&lt;T&gt;: Debug, and all we know is  T: Debug\n niko: we might be able to handle that by bubbling up the Vec  to our callers\u2026\n  In the next episode of this series we&#39;ll discuss compilation units \u2013 thebundles of code that a compiler processes at a single time \u2013 and how selectingcompilation units affects compile time.\n   A number of people helped with this blog series. Thanks especially to Niko Matsakis for the feedback, and Calvin Weng for proofreading and editing.", "posttime": "2020-06-16 09:38:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,rust,compile", "title": "Rust\u4e2d\u7684\u6cdb\u578b\u548c\u7f16\u8bd1\u65f6", "title_en": "Generics and Compile-Time in Rust", "transed": 1, "url": "https://pingcap.com/blog/generics-and-compile-time-in-rust/", "via": "", "real_tags": ["\u7f16\u8bd1", "rust", "compile"]}, {"category": "", "categoryclass": "", "imagename": "0fc7b94051f5fc8e4d5b0a9139415d53.png", "infoid": 1006754, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528LSTM\u8fdb\u884c\u7ed3\u6784\u5316\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u9884\u6d4b\u7684\u6f14\u793a\uff0c\u5305\u542b\u5206\u7c7b\u548c\u6570\u5b57\u7279\u5f81\u3002\n\u7a7a\u6c14\u8d28\u91cf\u8bc4\u4f30(\u5373SO2\u6d53\u5ea6\u9884\u6d4b)\u7684\u6570\u636e\u96c6\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5e93\u4e2d\u83b7\u5f97\u3002", "note_en": "Demonstration of using LSTM for forecasting with structured time-series data, containing categorical and numerical features.\n     The dataset for air quality estimation (i.e., SO2 Concentration forecasting) is available in this repository.", "posttime": "2020-06-16 09:03:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u95f4,embedding,\u9884\u6d4b", "title": "\u57fa\u4e8eLSTM\u7684\u65f6\u95f4\u5e8f\u5217\u5b9e\u4f53\u5d4c\u5165", "title_en": "Entity Embedding with LSTM for Time Series", "transed": 1, "url": "https://github.com/aqibsaeed/Entity-Embedding-with-LSTM-for-Time-Series", "via": "", "real_tags": ["\u65f6\u95f4", "embedding", "\u9884\u6d4b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60(RL)\u7684\u6700\u65b0\u8fdb\u5c55\u5df2\u7ecf\u5728\u8bb8\u591a\u53cc\u4eba\u96f6\u548c\u6e38\u620f\u4e2d\u53d6\u5f97\u4e86\u76f8\u5f53\u5927\u7684\u8fdb\u6b65\uff0c\u5982\u56f4\u68cb\u3001\u6251\u514b\u548c\u661f\u9645\u4e89\u9738\u3002\u8fd9\u7c7b\u6e38\u620f\u7684\u7eaf\u5bf9\u6297\u6027\u672c\u8d28\u5141\u8bb8RL\u65b9\u6cd5\u5728\u6982\u5ff5\u4e0a\u7684\u7b80\u5355\u548c\u539f\u5219\u6027\u7684\u5e94\u7528\u3002\u7136\u800c\uff0c\u73b0\u5b9e\u4e16\u754c\u7684\u8bbe\u7f6e\u662f\u591a\u667a\u80fd\u4f53\u7684\uff0c\u667a\u80fd\u4f53\u4ea4\u4e92\u662f\u5171\u540c\u5174\u8da3\u548c\u7ade\u4e89\u65b9\u9762\u7684\u590d\u6742\u6df7\u5408\u7269\u3002\u6211\u4eec\u6765\u770b\u4e00\u6b3e\u540d\u4e3a\u201c\u5916\u4ea4\u201d(Diplomacy)\u76847\u4eba\u68cb\u76d8\u6e38\u620f\uff0c\u8fd9\u6b3e\u6e38\u620f\u65e8\u5728\u7a81\u51fa\u591a\u4eba\u4e92\u52a8\u5e26\u6765\u7684\u56f0\u5883\u3002\u5b83\u8fd8\u5177\u6709\u7ec4\u5408\u52a8\u4f5c\u7a7a\u95f4\u5927\u3001\u52a8\u4f5c\u540c\u65f6\u8fdb\u884c\u7b49\u7279\u70b9\uff0c\u8fd9\u5bf9RL\u7b97\u6cd5\u63d0\u51fa\u4e86\u6311\u6218\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u800c\u6709\u6548\u7684\u8fd1\u4f3c\u6700\u4f73\u54cd\u5e94\u7b97\u5b50\uff0c\u7528\u4e8e\u5904\u7406\u8f83\u5927\u7684\u7ec4\u5408\u52a8\u4f5c\u7a7a\u95f4\u548c\u540c\u65f6\u52a8\u4f5c\u3002\u6211\u4eec\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u65cf\u8fd1\u4f3c\u5b9e\u9645\u535a\u5f08\u7684\u7b56\u7565\u8fed\u4ee3\u65b9\u6cd5\u3002\u6709\u4e86\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u6210\u529f\u5730\u5c06RL\u5e94\u7528\u5230\u5916\u4ea4\u4e2d\uff1a\u6211\u4eec\u7684\u4ee3\u7406\u5982\u4f55\u4ee4\u4eba\u4fe1\u670d\u5730\u8d85\u8d8a\u4e86\u4ee5\u524d\u7684\u6700\u5148\u8fdb\u6c34\u5e73\uff0c\u535a\u5f08\u8bba\u5747\u8861\u5206\u6790\u8868\u660e\uff0c\u65b0\u7684\u8fc7\u7a0b\u4ea7\u751f\u4e86\u6301\u7eed\u7684\u6539\u8fdb\u3002", "note_en": "Download PDF  Abstract: Recent advances in deep reinforcement learning (RL) have led to considerableprogress in many 2-player zero-sum games, such as Go, Poker and Starcraft. Thepurely adversarial nature of such games allows for conceptually simple andprincipled application of RL methods. However real-world settings aremany-agent, and agent interactions are complex mixtures of common-interest andcompetitive aspects. We consider Diplomacy, a 7-player board game designed toaccentuate dilemmas resulting from many-agent interactions. It also features alarge combinatorial action space and simultaneous moves, which are challengingfor RL algorithms. We propose a simple yet effective approximate best responseoperator, designed to handle large combinatorial action spaces and simultaneousmoves. We also introduce a family of policy iteration methods that approximatefictitious play. With these methods, we successfully apply RL to Diplomacy: weshow that our agents convincingly outperform the previous state-of-the-art, andgame theoretic equilibrium analysis shows that the new process yieldsconsistent improvements.", "posttime": "2020-06-16 09:03:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b56\u7565,play,rl", "title": "\u5b66\u4f1a\u5728\u6700\u4f73\u5e94\u5bf9\u7b56\u7565\u8fed\u4ee3\u4e2d\u8fdb\u884c\u65e0\u5a92\u4f53\u5916\u4ea4", "title_en": "Learning to Play No-Press Diplomacy with Best Response Policy Iteration", "transed": 1, "url": "https://arxiv.org/abs/2006.04635", "via": "", "real_tags": ["\u7b56\u7565", "play", "rl"]}]