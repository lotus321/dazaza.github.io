[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1006301, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u4e00\u5f20SIM\u5361\u8bbf\u95ee\u6700\u5168\u9762\u7684\u7b2c1\u5c42\u5168\u7403\u7f51\u7edc\u5217\u8868\u3002\u7531Twilio\u81ea\u5df1\u7684\u4e91\u7ea7\u79fb\u52a8\u6838\u5fc3\u652f\u6301\uff0c\u60a8\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u60a8\u7684\u7f51\u7edc\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u9488\u5bf9\u8986\u76d6\u8303\u56f4\u3001\u6027\u80fd\u548c\u4ef7\u683c\u8fdb\u884c\u4f18\u5316\u3002\n\u8d85\u7ea7SIM\u8ba9\u60a8\u7684\u7269\u8054\u7f51\u8bbe\u5907\u80fd\u591f\u63a5\u5165\u5168\u7403300\u591a\u4e2a\u8702\u7a9d\u7f51\u7edc\u3002\u67e5\u770bSuper SIM\u5361\u7684\u53ef\u7528\u7f51\u7edc\u3002\n\u6b63\u5728\u5bfb\u627e\u8981\u8fde\u63a5\u7684\u7279\u5b9a\u7f51\u7edc\u5417\uff1f\u60a8\u5c06\u80fd\u591f\u4f7f\u7528\u7f51\u7edc\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6\u63a7\u5236\u53ef\u4ee5\u8fde\u63a5\u5230\u54ea\u4e9b\u7f51\u7edc\u3002\n\u60a8\u53ef\u4ee5\u6309\u7167\u6b64\u5206\u6b65\u6307\u5357\u5f00\u59cb\u4f7f\u7528\u8d85\u7ea7SIM\u5361\u3002\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\uff1a\n\u8981\u4f7f\u7528\u8d85\u7ea7SIM\u5361\uff0cSIM\u5361\u786c\u4ef6\u9700\u8981\u4e00\u6b21\u6027\u4ed8\u8d39\uff0c\u6d3b\u52a8\u8d85\u7ea7SIM\u5361\u9700\u8981\u6309\u6708\u4ed8\u8d39\uff0c\u4f7f\u7528\u8d39\u7528\u6309\u73b0\u6536\u73b0\u4ed8\u3002\n\u4e00\u6b21\u6027SIM\u5361\u8d39\u7528-SIM\u5361\u786c\u4ef6\u8d77\u4ef73\u7f8e\u5143\u3002\u60a8\u53ef\u4ee5\u4ece\u63a7\u5236\u53f0\u8ba2\u8d2d\u591a\u5c3a\u5bf8(2FF/3FF/4FF)SIM\u5361\u3002\u5982\u679c\u60a8\u4e0e\u9500\u552e\u4eba\u5458\u4ea4\u8c08\uff0c\u4e5f\u53ef\u4ee5\u8d2d\u4e70\u53ef\u710a\u63a5\u5d4c\u5165\u5f0fSIM\u5361(MFF2)\u3002\n\u4e3b\u7528SIM\u5361\u8ba2\u9605\u8d39-\u6bcf\u4e2a\u4e3b\u7528\u8d85\u7ea7SIM\u5361\u6bcf\u67082\u7f8e\u5143\u8d77\u3002\u5982\u679c\u60a8\u4e0d\u9700\u8981\u4f7f\u7528\u60a8\u7684\u8d85\u7ea7SIM\u5361\uff0c\u60a8\u53ef\u4ee5\u968f\u65f6\u5c06\u8d85\u7ea7SIM\u5361\u66f4\u65b0\u4e3a\u975e\u6d3b\u52a8\u72b6\u6001\uff0c\u4ee5\u505c\u6b62\u6b64\u7ecf\u5e38\u6027\u8d39\u7528\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u91cd\u65b0\u6fc0\u6d3b\u3002\u4e86\u89e3\u6709\u5173\u8d85\u7ea7SIM\u5361\u72b6\u6001\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u6570\u636e\u4f7f\u7528\u7387-\u8d77\u6b65\u4ef7\u4e3a0.10\u7f8e\u5143/MB\u3002\u6570\u636e\u4f7f\u7528\u662f\u6309\u73b0\u6536\u73b0\u4ed8\u7684\u65b9\u5f0f\u8ba1\u8d39\u7684\u3002\u6570\u636e\u4f7f\u7528\u6309\u5b57\u8282\u8ba1\u8d39-\u6ca1\u6709\u820d\u5165\u6216\u635f\u574f\u3002\n\u77ed\u4fe1\u547d\u4ee4-\u4ece\u60a8\u7684\u8bbe\u5907\u53d1\u51fa\u7684\u77ed\u4fe1\u547d\u4ee4\u8d77\u6b65\u4ef7\u4e3a$0.05/SMS\u3002$0.01/SMS\u547d\u4ee4\u53d1\u9001\u5230\u60a8\u7684\u8bbe\u5907\u3002\u4f7f\u7528\u547d\u4ee4\u5411\u60a8\u7684\u8bbe\u5907\u53d1\u9001\u673a\u5668\u5bf9\u673a\u5668\u7684\u77ed\u4fe1\uff0c\u6216\u4ece\u60a8\u7684\u8bbe\u5907\u53d1\u9001\u673a\u5668\u5bf9\u673a\u5668\u7684\u77ed\u4fe1\u3002\n\u8230\u961f-\u63a7\u5236\u4e00\u7fa4\u8d85\u7ea7\u6a21\u62df\u4eba\u751f\u3002\u8230\u961f\u4e0a\u7684\u8bbe\u7f6e\u5c06\u5e94\u7528\u4e8e\u5206\u914d\u7ed9\u5b83\u4eec\u7684\u6240\u6709SIM\u8d44\u6e90\u3002\u63a7\u5236\u6210\u767e\u4e0a\u5343\u6216\u4f60\u7684\u8d85\u7ea7\u6a21\u62df\u4eba\u751f\u5982\u4f55\u901a\u8fc7\u8230\u961f\u8fde\u63a5\u3002\n\u7f51\u7edc-\u8868\u793a\u60a8\u7684\u8d85\u7ea7SIM\u5361\u53ef\u4ee5\u8fde\u63a5\u5230\u7684\u8702\u7a9d\u7f51\u7edc\u3002\u60a8\u5c06\u80fd\u591f\u6311\u9009\u60a8\u5e0c\u671b\u60a8\u7684\u8d85\u7ea7SIM\u5361\u80fd\u591f\u8fde\u63a5\u5230\u7684\u8702\u7a9d\u7f51\u7edc\u3002\n\u7f51\u7edc\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6-\u63a7\u5236\u60a8\u7684\u8fde\u63a5\u3002\u6bcf\u4e2a\u7f51\u7edc\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6\u90fd\u5305\u542b\u60a8\u5e0c\u671b\u8d85\u7ea7SIM\u5361\u80fd\u591f\u8fde\u63a5\u7684\u7f51\u7edc\u5217\u8868\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u66f4\u6539\u60a8\u7684\u8d85\u7ea7\u6a21\u62df\u7528\u6237\u53ef\u4ee5\u8fde\u63a5\u5230\u7684\u7f51\u7edc\u5217\u8868\u3002\u4e86\u89e3\u6709\u5173\u7f51\u7edc\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u4e86\u89e3\u5982\u4f55\u5f00\u59cb\u4f7f\u7528Super SIM\u5361API\u3002\u5e2e\u52a9\u5668\u5e93\u9002\u7528\u4e8e\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u5e2e\u52a9\u60a8\u5c06Super SIM\u5feb\u901f\u96c6\u6210\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\n\u6211\u4eec\u90fd\u6709\u8fc7\u8fd9\u6837\u7684\u7ecf\u5386\uff1b\u7f16\u5199\u4ee3\u7801\u5f88\u96be\u3002\u73b0\u5728\u5c31\u4ece\u6211\u4eec\u7684\u652f\u6301\u56e2\u961f\u83b7\u5f97\u5e2e\u52a9\uff0c\u6216\u8005\u4f9d\u9760\u6d4f\u89c8Stack Overflow\u4e0a\u7684Twilio\u6807\u7b7e\u7684\u4eba\u7fa4\u7684\u667a\u6167\u3002", "note_en": "Access the most comprehensive list of Tier 1 global networks via one SIM. Powered by Twilio\u2019s own cloud-scale mobile core, you have the freedom to choose your networks, so you can optimize for coverage, performance, and price.\n  Super SIM gives your IoT devices access to over 300 cellular networks around the world. Check out Super SIM&#39;s  available networks.\n Looking for specific netwoks to connect to? You&#39;ll be able to control which networks you can connect to with  Network Access Profiles.\n You can follow this  step by step guide to get started with Super SIM. You&#39;ll learn how to:\n To use Super SIM, there is a one-time fee for SIM hardware, a monthly subscription fee for active Super SIMS, and usage that is charged on a pay-as-you-go basis.\n One-time SIM fee - SIM hardware starts at $3. You can order multi-size (2FF/3FF/4FF) SIM cards from the  Console. Solderable embedded SIMs (MFF2) are also available if you  talk to sales.\n Active SIM Subscription  Fee - Starting at $2 per  active Super SIM per month. You can update a Super SIM to  inactive at any time to stop this recurring fee if you don&#39;t need to use your Super SIM. You can reactivate at any time.  Learn more about Super SIM statuses.\n Data Usage - Starting at $0.10 / MB. Data usage is billed on a pay-as-you-go basis. Data usage is billed per byte - no rounding or breakage.\n SMS Commands - Starting at $0.05 / SMS Command from your device. $0.01 / SMS Command to your device. Use  Commands to send machine-to-machine SMS to and from your devices.\n Fleets - Control a group of Super SIMs. Settings on your Fleet are applied to all of the Sim resources assigned to them. Control how hundreds or thousands or your Super SIMs connect through Fleets.\n Networks - Represents a cellular network that your Super SIMs can connect to. You&#39;ll be able to pick and choose which cellular networks you want your Super SIMs to be able to connect to.\n Network Access Profiles - Take control of your connectivity. Each Network Access Profile contains the list of Networks you want your Super SIMs to be able to connect to. You can change the list of Networks your Super SIMs can conect to at any time.  Learn more about Network Access Profiles.\n See how get started with the  Super SIM API. Helper libraries are available for popular programming languages to help you quickly integrate Super SIM into your applications.\n   We all do sometimes; code is hard. Get help now from our  support team, or lean on the wisdom of the crowd browsing the  Twilio tag on Stack Overflow.", "posttime": "2020-06-13 00:58:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "twilio,super", "title": "Twilio\u8d85\u7ea7\u6a21\u62df-\u516c\u5171\u6d4b\u8bd5\u7248", "title_en": "Twilio Super Sim \u2013 Public Beta", "transed": 1, "url": "https://www.twilio.com/docs/iot/supersim", "via": "", "real_tags": ["twilio", "super"]}, {"category": "", "categoryclass": "", "imagename": "95fdcbcce36d5212aff19435258f7480.jpg", "infoid": 1006300, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u4f1f\u5927\u7684\u7cbe\u795e\u6a21\u578b\u201d\u7b2c\u4e00\u5377\u548c\u7b2c\u4e8c\u5377\u5df2\u7ecf\u51fa\u7248\u3002\u5355\u51fb\u6b64\u5904\u4e86\u89e3\u6709\u5173\u8be5\u9879\u76ee\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u73b0\u5b9e\u7684\u5730\u56fe\u4e0d\u662f\u73b0\u5b9e\u3002\u5373\u4f7f\u662f\u6700\u597d\u7684\u5730\u56fe\u4e5f\u662f\u4e0d\u5b8c\u7f8e\u7684\u3002\u90a3\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u4e1c\u897f\u7684\u7f29\u5199\u3002\u5982\u679c\u4e00\u5f20\u5730\u56fe\u4ee5\u5b8c\u7f8e\u7684\u7cbe\u786e\u5ea6\u8868\u793a\u9886\u571f\uff0c\u5b83\u5c31\u4e0d\u518d\u662f\u7f29\u5c0f\u7684\uff0c\u5bf9\u6211\u4eec\u4e5f\u6ca1\u6709\u7528\u5904\u4e86\u3002\u5730\u56fe\u4e5f\u53ef\u4ee5\u662f\u65f6\u95f4\u70b9\u7684\u5feb\u7167\uff0c\u8868\u793a\u4e0d\u518d\u5b58\u5728\u7684\u4e1c\u897f\u3002\u5f53\u6211\u4eec\u601d\u8003\u95ee\u9898\u5e76\u505a\u51fa\u66f4\u597d\u7684\u51b3\u5b9a\u65f6\uff0c\u7262\u8bb0\u8fd9\u4e00\u70b9\u662f\u5f88\u91cd\u8981\u7684\u3002\n1931\u5e74\uff0c\u5728\u8def\u6613\u65af\u5b89\u90a3\u5dde\u7684\u65b0\u5965\u5c14\u826f\uff0c\u6570\u5b66\u5bb6\u963f\u5c14\u5f17\u96f7\u5fb7\u00b7\u79d1\u65e5\u5e03\u65af\u57fa\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u6570\u5b66\u8bed\u4e49\u5b66\u7684\u8bba\u6587\u3002\u5bf9\u4e8e\u975e\u6280\u672f\u8bfb\u8005\u6765\u8bf4\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u5927\u90e8\u5206\u5185\u5bb9\u8bfb\u8d77\u6765\u5c31\u50cf\u662f\u5173\u4e8e\u6570\u5b66\u4e0e\u4eba\u7c7b\u8bed\u8a00\uff0c\u4ee5\u53ca\u4e24\u8005\u4e0e\u7269\u7406\u73b0\u5b9e\u7684\u5173\u7cfb\u7684\u6df1\u5965\u8bba\u8bc1\u3002\u5f53\u7136\u662f\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u4f46\u5bf9\u95e8\u5916\u6c49\u6765\u8bf4\u4e0d\u4e00\u5b9a\u9a6c\u4e0a\u6709\u7528\u3002\n\u7136\u800c\uff0c\u5728\u4ed6\u5173\u4e8e\u8bed\u8a00\u7ed3\u6784\u7684\u4e00\u7cfb\u5217\u8bba\u8bc1\u4e2d\uff0c\u79d1\u65e5\u5e03\u65af\u57fa\u5f15\u5165\u5e76\u666e\u53ca\u4e86\u5730\u56fe\u4e0d\u662f\u9886\u571f\u7684\u89c2\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8b\u7269\u7684\u63cf\u8ff0\u5e76\u4e0d\u662f\u4e8b\u7269\u672c\u8eab\u3002\u8fd9\u4e2a\u6a21\u578b\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\u8fd9\u79cd\u62bd\u8c61\u4e0d\u662f\u62bd\u8c61\u7684\uff0c\u800c\u662f\u5177\u6709\u5de8\u5927\u7684\u73b0\u5b9e\u540e\u679c\u3002\n(A.)\u3002\u5730\u56fe\u7684\u7ed3\u6784\u53ef\u80fd\u4e0e\u8be5\u5730\u533a\u7684\u7ed3\u6784\u76f8\u4f3c\uff0c\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002\nB.)\u3002\u4e24\u4e2a\u76f8\u4f3c\u7684\u7ed3\u6784\u5177\u6709\u76f8\u4f3c\u7684\u201c\u903b\u8f91\u201d\u7279\u5f81\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u4e00\u5f20\u6b63\u786e\u7684\u5730\u56fe\u4e0a\uff0c\u5fb7\u7d2f\u65af\u987f\u88ab\u8ba4\u4e3a\u662f\u5df4\u9ece\u548c\u534e\u6c99\u4e4b\u95f4\u7684\uff0c\u90a3\u4e48\u5728\u5b9e\u9645\u9886\u571f\u4e0a\u4e5f\u4f1a\u53d1\u73b0\u7c7b\u4f3c\u7684\u5173\u7cfb\u3002\nD.)\u3002\u4e00\u4e2a\u7406\u60f3\u7684\u5730\u56fe\u5e94\u8be5\u5305\u542b\u5730\u56fe\u7684\u5730\u56fe\uff0c\u5730\u56fe\u7684\u5730\u56fe\u7b49\u7b49\uff0c\u65e0\u4f11\u6b62\u7684\u2026\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u7279\u6709\u7684\u81ea\u6211\u53cd\u8eab\u6027\u79f0\u4e3a\u201c\u81ea\u6211\u53cd\u8eab\u6027\u201d\u3002\n\u5730\u56fe\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u4e5f\u6709\u7f3a\u9677\u3002(\u5730\u56fe\u6307\u7684\u662f\u5bf9\u73b0\u5b9e\u7684\u4efb\u4f55\u62bd\u8c61\uff0c\u5305\u62ec\u63cf\u8ff0\u3001\u7406\u8bba\u3001\u6a21\u578b\u7b49\u3002)\u3002\u5730\u56fe\u7684\u95ee\u9898\u4e0d\u4ec5\u4ec5\u5728\u4e8e\u5b83\u662f\u4e00\u4e2a\u62bd\u8c61\uff1b\u6211\u4eec\u9700\u8981\u62bd\u8c61\u3002\u4e00\u5f20\u6bd4\u4f8b\u4e3a\u4e00\u82f1\u91cc\u5230\u4e00\u82f1\u91cc\u7684\u5730\u56fe\u4e0d\u4f1a\u6709\u5730\u56fe\u6240\u5b58\u5728\u7684\u95ee\u9898\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u5e2e\u52a9\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u8111\u4e3a\u4e86\u7406\u89e3\u73b0\u5b9e\u800c\u521b\u5efa\u4e86\u73b0\u5b9e\u5730\u56fe\uff0c\u56e0\u4e3a\u6211\u4eec\u5904\u7406\u73b0\u5b9e\u590d\u6742\u6027\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7\u62bd\u8c61\u3002\u4f46\u901a\u5e38\uff0c\u6211\u4eec\u4e0d\u4e86\u89e3\u6211\u4eec\u7684\u5730\u56fe\u6216\u5b83\u4eec\u7684\u754c\u9650\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5982\u6b64\u4f9d\u8d56\u62bd\u8c61\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u4f1a\u7ecf\u5e38\u4f7f\u7528\u9519\u8bef\u7684\u6a21\u578b\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6211\u4eec\u89c9\u5f97\u6709\u4efb\u4f55\u4e00\u4e2a\u6a21\u578b\u90fd\u6bd4\u6ca1\u6709\u4e00\u4e2a\u6a21\u578b\u66f4\u53ef\u53d6\u3002(\u63d0\u9192\u5176\u4e2d\u4e00\u540d\u9189\u6c49\u5728\u8def\u706f\u4e0b\u627e\u94a5\u5319\uff0c\u56e0\u4e3a\u201c\u90a3\u91cc\u6709\u706f\uff01\u201d)\u3002\n\u5373\u4f7f\u662f\u6700\u597d\u548c\u6700\u6709\u7528\u7684\u5730\u56fe\u4e5f\u4f1a\u53d7\u5230\u9650\u5236\uff0c\u79d1\u65e5\u5e03\u65af\u57fa\u7ed9\u4e86\u6211\u4eec\u4e00\u4e9b\u53ef\u4ee5\u63a2\u7d22\u7684\uff1a(A)\u3002\u5728\u6211\u4eec\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u5730\u56fe\u53ef\u80fd\u662f\u4e0d\u6b63\u786e\u7684\uff1b\u5730\u56fe\u5fc5\u7136\u662f\u5bf9\u5b9e\u9645\u4e8b\u7269\u7684\u4e00\u79cd\u7b80\u5316\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f60\u4f1a\u4e22\u5931\u67d0\u4e9b\u91cd\u8981\u7684\u4fe1\u606f\uff1b\u4ee5\u53ca(C)\u3002\u5730\u56fe\u9700\u8981\u89e3\u91ca\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u5927\u9519\u8bef\u3002(\u771f\u6b63\u89e3\u51b3\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u5730\u56fe\u94fe\uff0c\u4ed6\u79f0\u4e4b\u4e3a\u81ea\u6211\u53cd\u8eab\u6027\u3002)\u3002\n\u5728\u73b0\u4ee3\u5fc3\u7406\u5b66\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u8fd8\u770b\u5230\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u4eba\u8111\u4e3a\u4e86\u7406\u89e3\u5468\u56f4\u73af\u5883\uff0c\u4f1a\u6709\u5f88\u5927\u7684\u8df3\u8dc3\u548c\u6377\u5f84\u3002\u6b63\u5982\u67e5\u7406\u00b7\u8292\u683c(Charlie Munger)\u6240\u6307\u51fa\u7684\u90a3\u6837\uff0c\u4e00\u4e2a\u597d\u60f3\u6cd5\u548c\u4eba\u7c7b\u5927\u8111\u7684\u884c\u4e3a\u6709\u70b9\u50cf\u7cbe\u5b50\u548c\u5375\u5b50-\u5728\u7b2c\u4e00\u4e2a\u597d\u60f3\u6cd5\u8fdb\u5165\u540e\uff0c\u5927\u95e8\u5c31\u4f1a\u5173\u95ed\u3002\u8fd9\u4f7f\u5f97\u5730\u56fe\u9886\u571f\u95ee\u9898\u6210\u4e3a\u9524\u5b50\u4eba\u503e\u5411\u7684\u8fd1\u4eb2\u3002\n\u663e\u7136\uff0c\u8fd9\u79cd\u503e\u5411\u5728\u6211\u4eec\u7b80\u5316\u73b0\u5b9e\u7684\u52aa\u529b\u4e2d\u662f\u6709\u95ee\u9898\u7684\u3002\u5f53\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\u8fd0\u884c\u826f\u597d\u65f6\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u8fc7\u5ea6\u5e94\u7528\u5b83\uff0c\u5728\u4e0d\u76f8\u4f3c\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u5f88\u96be\u754c\u5b9a\u5b83\u7684\u7528\u5904\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\n\u6839\u636e\u5927\u591a\u6570\u4eba\u7684\u8bf4\u6cd5\uff0c\u52302011\u5e74\u590f\u5929\uff0c\u7f57\u6069\u00b7\u7ea6\u7ff0\u900a(Ron Johnson)\u662f\u6700\u6210\u529f\u3001\u6700\u4ee4\u4eba\u5411\u5f80\u7684\u96f6\u552e\u4e1a\u9ad8\u7ba1\u4e4b\u4e00\u3002\u4ed6\u4e0d\u4ec5\u662f\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af(Steve Jobs)\u4eb2\u624b\u6311\u9009\u5efa\u9020\u82f9\u679c\u5546\u5e97(Apple Stores)\u7684\uff0c\u8fd9\u4e00\u5408\u8d44\u4f01\u4e1a\u672c\u8eab\u4e5f\u53d7\u5230\u4e86\u91cd\u5927\u5ba1\u67e5-\u5f6d\u535a\u793e(Bloomberg)\u6742\u5fd7\u520a\u767b\u4e86\u4e00\u6761\u53cd\u9a73\uff1a\u201c\u5728\u4ed6\u4eec\u4e3a\u4e00\u4e2a\u975e\u5e38\u75db\u82e6\u548c\u6602\u8d35\u7684\u9519\u8bef\u7184\u706f\u4e4b\u524d\uff0c\u6211\u7ed9\u4e86\u4ed6\u4eec\u4e24\u5e74\u7684\u65f6\u95f4\u201d-\u800c\u4e14\uff0c\u572820\u4e16\u7eaa90\u5e74\u4ee3\u672b\u548c21\u4e16\u7eaa\u521d\uff0c\u4ed6\u5728\u5c06Target\u4ece\u4e00\u5bb6\u5916\u89c2\u9177\u4f3cK-Mart\u7684\u8d85\u5e02\u8f6c\u53d8\u4e3a\u65f6\u5c1a\u4f46\u5ec9\u4ef7\u7684\u7126\u6cb9\u8d85\u5e02(Tar-Chey)\u65b9\u9762\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002\n\u7ea6\u7ff0\u900a\u5728\u82f9\u679c\u7684\u6210\u529f\u4e0d\u662f\u7acb\u7aff\u89c1\u5f71\u7684\uff0c\u4f46\u8fd9\u662f\u4e0d\u53ef\u5426\u8ba4\u7684\u3002\u52302011\u5e74\uff0c\u6309\u6bcf\u5e73\u65b9\u82f1\u5c3a\u8ba1\u7b97\uff0c\u82f9\u679c\u4e13\u5356\u5e97\u662f\u8fc4\u4eca\u4e3a\u6b62\u4e16\u754c\u4e0a\u751f\u4ea7\u7387\u6700\u9ad8\u7684\u5546\u5e97\uff0c\u5df2\u7ecf\u6210\u4e3a\u96f6\u552e\u754c\u7fa1\u6155\u7684\u5bf9\u8c61\u3002\u4ed6\u4eec\u7684\u9500\u552e\u6570\u5b57\u8ba9\u8482\u8299\u5c3c\u76f8\u5f62\u89c1\u7ecc\u3002\u7b2c\u4e94\u5927\u9053\u4e0a\u95ea\u95ea\u53d1\u5149\u7684\u73bb\u7483\u7acb\u65b9\u4f53\u6210\u4e3a\u6bd4\u81ea\u7531\u5973\u795e\u50cf\u66f4\u53d7\u6b22\u8fce\u7684\u65c5\u6e38\u666f\u70b9\u3002\u8fd9\u662f\u4e00\u79cd\u6b22\u4e50\u4e50\uff0c\u4e00\u79cd\u8d85\u4e4e\u5bfb\u5e38\u7684\u6210\u529f\u3002\u7ea6\u7ff0\u900a\u662f\u5e26\u5934\u51b2\u950b\u7684\u4eba\u3002\n\u51ed\u501f\u8fd9\u4e00\u6210\u529f\uff0c2011\u5e74\uff0c\u7ea6\u7ff0\u900a\u53d7\u96c7\u4e8e\u6bd4\u5c14\u00b7\u963f\u514b\u66fc(Bill Ackman)\u3001\u53f2\u8482\u6587\u00b7\u7f57\u65af(Steven Roth)\u548c\u5176\u4ed6\u91d1\u878d\u754c\u540d\u4eba\uff0c\u4ee5\u626d\u8f6c\u8001\u5f0f\u767e\u8d27\u5546\u5e97\u8fde\u9501\u5e97JC Penney\u7684\u9893\u52bf\u3002\u767e\u8d27\u516c\u53f8\u7684\u60c5\u51b5\u5f88\u7cdf\u7cd5\uff1a\u57281992\u81f32011\u5e74\u95f4\uff0c\u767e\u8d27\u516c\u53f8\u7684\u96f6\u552e\u5e02\u573a\u4efd\u989d\u4ece57%\u4e0b\u964d\u523031%\u3002\n\u4e0d\u8fc7\uff0c\u4ed6\u4eec\u7684\u6838\u5fc3\u5730\u4f4d\u662f\u4e0d\u5047\u601d\u7d22\u7684\u3002JC Penney\u62e5\u6709\u975e\u5e38\u6709\u4ef7\u503c\u7684\u623f\u5730\u4ea7\uff0c\u5728\u5168\u56fd\u5404\u5730\u951a\u5b9a\u4e86\u8d2d\u7269\u4e2d\u5fc3\u3002\u7ea6\u7ff0\u900a\u8fa9\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u539f\u56e0\uff0c\u4eba\u4eec\u7ecf\u5e38\u628a\u8f66\u505c\u5728\u4ed6\u4eec\u65c1\u8fb9\uff0c\u7a7f\u8fc7\u4ed6\u4eec\u5230\u8fbe\u8d2d\u7269\u4e2d\u5fc3\uff0c\u4ed6\u4eec\u7684\u5b9e\u4f53\u8d2d\u7269\u4e2d\u5fc3\u4f4d\u7f6e\u662f\u6709\u4ef7\u503c\u7684\u3002\u4eba\u6d41\u91cf\u662f\u7406\u6240\u5f53\u7136\u7684\u3002\u7531\u4e8e\u572850\u5e74\u4ee3\u300160\u5e74\u4ee3\u548c70\u5e74\u4ee3\u7b7e\u8ba2\u4e86\u5408\u540c\uff0c\u8fd9\u662f\u8d2d\u7269\u4e2d\u5fc3\u5efa\u8bbe\u65f6\u4ee3\u7684\u5168\u76db\u65f6\u671f\uff0c\u79df\u91d1\u4e5f\u5f88\u4fbf\u5b9c\uff0c\u8fd9\u662f\u53e6\u4e00\u4e2a\u4e3b\u8981\u7684\u7ade\u4e89\u4f18\u52bf\u3002\u4e0e\u4e00\u4e9b\u82e6\u82e6\u6323\u624e\u7684\u96f6\u552e\u5546\u4e0d\u540c\uff0cJC Penney\u8d5a\u4e86(\u4e00\u4e9b)\u94b1\u3002\u6536\u94f6\u673a\u91cc\u6709\u73b0\u91d1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4e3a\u8f6c\u578b\u63d0\u4f9b\u8d44\u91d1\u3002\n\u4ed6\u7684\u60f3\u6cd5\u662f\u4ece\u4ed6\u5728\u82f9\u679c\u7684\u7ecf\u5386\u4e2d\u6c72\u53d6\u6700\u597d\u7684\u60f3\u6cd5\uff1a\u51fa\u8272\u7684\u5ba2\u6237\u670d\u52a1\uff0c\u6ca1\u6709\u964d\u4ef7\u548c\u52a0\u4ef7\u7684\u4e00\u81f4\u5b9a\u4ef7\uff0c\u5b8c\u7f8e\u7684\u5c55\u793a\uff0c\u4e16\u754c\u7ea7\u7684\u4ea7\u54c1\uff0c\u5e76\u5c06\u5b83\u4eec\u5e94\u7528\u5230\u767e\u8d27\u5546\u5e97\u3002\u7ea6\u7ff0\u900a\u8ba1\u5212\u5c06\u8fd9\u4e9b\u5546\u5e97\u53d8\u6210\u8d2d\u7269\u4e2d\u5fc3\u4e2d\u7684\u5c0f\u5546\u573a\u3002\u4ed6\u751a\u81f3\u5c06\u4e0d\u65ad\u8f6e\u6362\u7684\u5e97\u5185\u5546\u5e97\u6bd4\u4f5c\u82f9\u679c\u7684\u201c\u5e94\u7528\u7a0b\u5e8f\u201d\u3002\u8fd9\u6837\u7684\u6a21\u5f0f\u5c06\u4f7f\u5546\u5e97\u4e0d\u65ad\u4fdd\u6301\u65b0\u9c9c\uff0c\u5e76\u907f\u514d\u96f6\u552e\u4e1a\u6084\u6084\u53d8\u5f97\u9648\u65e7\u3002\n\u7ea6\u7ff0\u900a\u5728\u7ebd\u7ea6\u5e02\u4e3e\u884c\u7684\u4e00\u7cfb\u5217\u65f6\u9ae6\u7684\u4f1a\u8bae\u4e0a\u5411\u80a1\u4e1c\u63a8\u9500\u4ed6\u7684\u60f3\u6cd5\uff0c\u8fd9\u8ba9\u4eba\u60f3\u8d77\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af(Steve Jobs)\u7684\u5e74\u5ea6\u201c\u4f46\u7b49\u7b49\uff0c\u8fd8\u6709\u66f4\u591a\uff01\u201d\u4ea7\u54c1\u5728\u82f9\u679c\u53d1\u5e03\u3002\u4ed6\u5f88\u6709\u8bf4\u670d\u529b\uff1aJC Penney\u7684\u80a1\u4ef7\u4ece2011\u5e74\u590f\u5929\u768426\u7f8e\u5143\u6da8\u5230\u4e862012\u5e74\u521d\u768442\u7f8e\u5143\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u51e0\u4e4e\u7acb\u523b\u5c31\u5931\u8d25\u4e86\u3002\u4ed6\u7684\u65b0\u5b9a\u4ef7\u6a21\u5f0f(\u53d6\u6d88\u6298\u6263)\u662f\u5931\u8d25\u7684\u3002\u8ffd\u9010\u4f18\u60e0\u5238\u7684\u4eba\u9020\u53cd\u4e86\u3002\u4ed6\u7684\u8bb8\u591a\u65b0\u4ea7\u54c1\u88ab\u8ba4\u4e3a\u592a\u65f6\u9ae6\u4e86\u3002\u4ed6\u7684\u65b0\u5546\u5e97\u6a21\u5f0f\u5bf9\u4e8e\u4e00\u5bb6\u4e2d\u578b\u767e\u8d27\u5546\u5e97\u8fde\u9501\u5e97\u6765\u8bf4\u662f\u6781\u5176\u6602\u8d35\u7684-\u5305\u62ec\u6545\u610f\u627f\u53d7\u7684\u8fd0\u8425\u4e8f\u635f\uff0c\u4ed6\u5df2\u7ecf\u82b1\u8d39\u4e86\u6570\u5341\u4ebf\u7f8e\u5143\u6765\u5b9e\u73b0\u5546\u5e97\u7684\u7269\u7406\u6539\u9020\u3002JC Penney\u7684\u5ba2\u6237\u5bf9\u53d1\u751f\u7684\u4e8b\u60c5\u4e00\u65e0\u6240\u77e5\uff0c\u52302013\u5e74\uff0c\u7ea6\u7ff0\u900a\u88ab\u89e3\u96c7\u4e86\u3002\u80a1\u4ef7\u8dcc\u81f3\u4e2a\u4f4d\u6570\uff0c\u4e24\u5e74\u540e\u4ecd\u4fdd\u6301\u5728\u8fd9\u4e00\u6c34\u5e73\u3002\n\u5728\u5bfb\u6c42\u5efa\u7acb\u7f8e\u56fd\u6700\u53d7\u6b22\u8fce\u7684\u5546\u5e97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u539f\u6765\uff0c\u7ea6\u7ff0\u900a\u662f\u7528\u5854\u5c14\u8428\u7684\u5730\u56fe\u6765\u5bfc\u822a\u5854\u65af\u5361\u5362\u8428\u7684\u3002\u82f9\u679c\u7684\u4ea7\u54c1\u3001\u5ba2\u6237\u548c\u5386\u53f2\u4e0eJC Penney\u7684\u5171\u540c\u70b9\u592a\u5c11\u4e86\u3002\u82f9\u679c\u5728\u5f00\u8bbe\u95e8\u5e97\u4e4b\u524d\u62e5\u6709\u72c2\u70ed\u3001\u5e74\u8f7b\u3001\u5bcc\u88d5\u7684\u7c89\u4e1d\u57fa\u7840\uff1bJC Penney\u7684\u4ea7\u54c1\u3001\u5ba2\u6237\u548c\u5386\u53f2\u4e0e\u5e74\u8f7b\u6216\u5bcc\u88d5\u65e0\u5173\u3002\u82f9\u679c\u6709\u95ea\u4eae\u7684\u4ea7\u54c1\uff0c\u9700\u8981\u4e00\u5bb6\u95ea\u4eae\u7684\u5546\u5e97\uff1bJC Penney\u4ee5\u5176\u4ef7\u683c\u9002\u4e2d\u7684\u6bdb\u8863\u800c\u95fb\u540d\u3002\u82f9\u679c\u4ece\u4e00\u5f00\u59cb\u5c31\u4ece\u6765\u4e0d\u4f9d\u8d56\u6298\u6263\uff1bJC Penney\u6b63\u5728\u53d6\u6d88\u4e4b\u524d\u7ed9\u4e88\u7684\u6298\u6263\uff0c\u5f15\u53d1\u4e86\u5927\u89c4\u6a21\u7684\u63a0\u593a\u6027\u8d85\u7ea7\u53cd\u5e94\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u65e7\u5730\u56fe\u7528\u5904\u4e0d\u5927\u3002\u5373\u4f7f\u662f\u4ed6\u5728\u5854\u5409\u7279(Target)\u7684\u6210\u529f(\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u66f4\u63a5\u8fd1\u7684\u7c7b\u6bd4)\uff0c\u5728JC Penney\u7684\u80cc\u666f\u4e0b\u4e5f\u5177\u6709\u8bef\u5bfc\u6027\u3002\u591a\u5e74\u6765\uff0c\u5854\u5409\u7279\u505a\u51fa\u4e86\u4e00\u4e9b\u5c0f\u7684\u3001\u6e10\u8fdb\u7684\u6539\u53d8\uff0c\u7ea6\u7ff0\u900a\u5bf9\u6b64\u505a\u51fa\u4e86\u6709\u610f\u4e49\u7684\u8d21\u732e\u3002JC Penney\u8bd5\u56fe\u5728\u4e00\u4e24\u5e74\u5185\u91cd\u5851\u767e\u8d27\u5546\u5e97\u7684\u6982\u5ff5\uff0c\u629b\u5f03\u6838\u5fc3\u5ba2\u6237\uff0c\u8bd5\u56fe\u83b7\u5f97\u65b0\u7684\u5ba2\u6237\u3002\u8fd9\u662f\u4e00\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u4e3b\u5f20\u3002(\u53e6\u4e00\u4e2a\u963b\u788d\u8be5\u516c\u53f8\u53d1\u5c55\u7684\u56e0\u7d20\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5b83\u7684\u57fa\u672c\u8d54\u7387\uff1a\u4f60\u80fd\u8bf4\u51fa\u4e00\u5bb6\u5931\u53bb\u4e86\u4e16\u754c\u5730\u4f4d\u7684\u91cd\u8981\u96f6\u552e\u5546\u7684\u540d\u5b57\uff0c\u7136\u540e\u53c8\u56de\u6765\u4e86\u5417\uff1f)\u3002\n\u4e3b\u8981\u95ee\u9898\u5e76\u4e0d\u662f\u8bf4\u7ea6\u7ff0\u900a\u4e0d\u79f0\u804c\u3002\u4ed6\u4e0d\u662f\u3002\u5982\u679c\u4ed6\u662f\u7684\u8bdd\uff0c\u4ed6\u5c31\u4e0d\u4f1a\u5f97\u5230\u8fd9\u4efd\u5de5\u4f5c\u4e86\u3002\u4ed6\u975e\u5e38\u6709\u80fd\u529b\u3002\u4f46\u6b63\u662f\u4ed6\u7684\u80fd\u529b\u548c\u8fc7\u53bb\u7684\u6210\u529f\u8ba9\u4ed6\u9677\u5165\u4e86\u9ebb\u70e6\u3002\u4ed6\u5c31\u50cf\u4e00\u4f4d\u4f1f\u5927\u7684\u6e38\u6cf3\u8fd0\u52a8\u5458\uff0c\u8bd5\u56fe\u9a7e\u9a6d\u4e00\u6761\u6025\u6d41\uff0c\u800c\u4ed6\u8fc7\u53bb\u6210\u529f\u4f7f\u7528\u7684\u6a21\u578b\uff0c\u5373\u7a7f\u8d8a\u4e86\u8bb8\u591a\u56f0\u96be\u5730\u5f62\u7684\u5730\u56fe\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u518d\u662f\u4ed6\u9700\u8981\u7684\u5730\u56fe\u4e86\u3002\u4ed6\u6709\u4e00\u4e2a\u5173\u4e8e\u96f6\u552e\u4e1a\u7684\u4f18\u79c0\u7406\u8bba\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9002\u7528\uff0c\u4f46\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u4e0d\u9002\u7528\u3002\u5730\u5f62\u5df2\u7ecf\u6539\u53d8\u4e86\uff0c\u4f46\u65e7\u7684\u60f3\u6cd5\u4ecd\u7136\u5b58\u5728\u3002\n\u5bf9\u5730\u56fe\u548c\u7248\u56fe\u8fd9\u4e2a\u95ee\u9898\u4e86\u5982\u6307\u638c\u7684\u4eba\u4e4b\u4e00\uff0c\u5c31\u662f\u300aIncerto\u300b\u7cfb\u5217\u7684\u4f5c\u8005\u7eb3\u897f\u59c6\u00b7\u5854\u52d2\u5e03--\u300a\u53cd\u8106\u5f31\u7684\u4e16\u754c\u300b\u3001\u300a\u88ab\u968f\u673a\u6027\u611a\u5f04\u7684\u9ed1\u5929\u9e45\u300b\u3001\u300a\u666e\u7f57\u514b\u9c81\u65af\u7279\u7684\u5e8a\u300b\u3002\n\u5854\u52d2\u5e03\u591a\u5e74\u6765\u4e00\u76f4\u76f4\u8a00\u4e0d\u8bb3\u5730\u6279\u8bc4\u6a21\u578b\u7684\u6ee5\u7528\uff0c\u4f46\u6211\u8bb0\u5f97\u6700\u65e9\u3001\u6700\u751f\u52a8\u7684\u662f\u4ed6\u5bf9\u4e00\u79cd\u540d\u4e3aVAR\u7684\u91d1\u878d\u6a21\u578b\u7684\u575a\u5b9a\u6279\u8bc4\u3002\u8be5\u6a21\u578b\u7528\u4e8e\u94f6\u884c\u754c\uff0c\u65e8\u5728\u901a\u8fc7\u63d0\u4f9b\u7ed9\u5b9a\u7f6e\u4fe1\u533a\u95f4\u5185\u7684\u6700\u5927\u6f5c\u5728\u635f\u5931\u6765\u5e2e\u52a9\u7ba1\u7406\u98ce\u9669\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u65e8\u5728\u5141\u8bb8\u98ce\u9669\u7ecf\u7406\u8bf4\uff0c\u572895%\u300199%\u621699.9%\u7684\u7f6e\u4fe1\u8303\u56f4\u5185\uff0c\u516c\u53f8\u5728\u7ed9\u5b9a\u7684\u4e00\u5929\u5185\u4e0d\u4f1a\u635f\u5931\u8d85\u8fc7X\u7f8e\u5143\u3002\u95f4\u9694\u8d8a\u5927\uff0c\u5206\u6790\u7684\u7cbe\u786e\u5ea6\u5c31\u8d8a\u4f4e\u3002\u4e5f\u8bb8\u53ef\u4ee5\u8bf4\uff0c\u572899%\u7684\u7f6e\u4fe1\u533a\u95f4\u5185\uff0c\u516c\u53f8\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u67091\u4ebf\u7f8e\u5143\u7684\u98ce\u9669\uff0c\u4f46\u8003\u8651\u5230\u5e02\u573a\u7684\u7edf\u8ba1\u7279\u6027\uff0c\u8f6c\u541199.9%\u7684\u7f6e\u4fe1\u53ef\u80fd\u610f\u5473\u7740\u98ce\u9669\u7ecf\u7406\u5fc5\u987b\u58f0\u660e\u516c\u53f8\u670910\u4ebf\u7f8e\u5143\u7684\u98ce\u9669\u300299.99%\u53ef\u80fd\u610f\u5473\u7740100\u4ebf\u7f8e\u5143\u3002\u7531\u4e8e\u5206\u5e03\u4e2d\u5305\u542b\u7684\u4e8b\u4ef6\u8d8a\u6765\u8d8a\u5c11\uff0c\u5206\u6790\u5c31\u53d8\u5f97\u4e0d\u90a3\u4e48\u6709\u7528\u4e86\u3002\u56e0\u6b64\uff0c\u6709\u5fc5\u8981\u628a\u201c\u5c3e\u5df4\u201d\u5728\u67d0\u5904\u526a\u6389\uff0c\u8fd9\u6837\u7684\u5206\u6790\u5c31\u88ab\u8ba4\u4e3a\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\u4e3a\u4e86\u8bc1\u660e\u548c\u4f7f\u7528VAR\u7406\u8bba\uff0c\u5efa\u7acb\u4e86\u7cbe\u7ec6\u7684\u7edf\u8ba1\u6a21\u578b\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6709\u7528\u800c\u5f3a\u5927\u7684\u60f3\u6cd5\uff1b\u5982\u679c\u4f60\u77e5\u9053\u4f60\u968f\u65f6\u53ef\u4ee5\u635f\u5931\u591a\u5c11\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ba1\u7406\u5230\u5c0f\u6570\u70b9\u7684\u98ce\u9669\u3002\u4f60\u53ef\u4ee5\u677f\u7740\u8138\u544a\u8bc9\u4f60\u7684\u8463\u4e8b\u4f1a\u548c\u80a1\u4e1c\uff0c\u4f60\u5df2\u7ecf\u76ef\u4e0a\u4e86\u6536\u94f6\u53f0\u3002\n\u6a21\u578b\u53ef\u80fd\u4f1a\u5411\u60a8\u663e\u793a\u4e00\u4e9b\u98ce\u9669\uff0c\u4f46\u4e0d\u4f1a\u663e\u793a\u4f7f\u7528\u5b83\u7684\u98ce\u9669\u3002\u6b64\u5916\uff0c\u6a21\u578b\u5efa\u7acb\u5728\u6709\u9650\u7684\u53c2\u6570\u96c6\u4e0a\uff0c\u800c\u73b0\u5b9e\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u65e0\u9650\u7684\u98ce\u9669\u6765\u6e90\u3002\n\u4e3a\u4e86\u5f97\u51faVAR\u6570\u5b57\uff0c\u98ce\u9669\u7ecf\u7406\u5fc5\u987b\u91c7\u7528\u5386\u53f2\u6570\u636e\u5e76\u5047\u8bbe\u7edf\u8ba1\u5206\u5e03\uff0c\u4ee5\u4fbf\u9884\u6d4b\u672a\u6765\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u62ff1\u4ebf\u4eba\u6765\u5206\u6790\u4ed6\u4eec\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u6d4b\u4e0d\u540c\u4e8e1\u4ebf\u4eba\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u5206\u5e03\uff0c\u5728\u5fae\u89c2\u4e0a\u6211\u4eec\u51fa\u9519\u7684\u53ef\u80fd\u6027\u4f1a\u5f88\u5c0f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u6837\u672c\u91cf\u5f88\u5927\uff0c\u6211\u4eec\u6b63\u5728\u5206\u6790\u7684\u4e1c\u897f\u4e0e\u5e73\u5747\u6c34\u5e73\u7684\u504f\u5dee\u975e\u5e38\u5c0f\uff0c\u800c\u4e14\u53ef\u4ee5\u9884\u6d4b\u3002\n\u4f46\u91d1\u878d\u5e76\u4e0d\u4e00\u5b9a\u9075\u5faa\u8fd9\u79cd\u5206\u5e03\u3002\u6ca1\u6709\u8fd9\u6837\u7684\u53ef\u9884\u6d4b\u6027\u3002\u6b63\u5982\u7eb3\u897f\u59c6\u6240\u8bf4\uff0c\u8fd9\u4e00\u9886\u57df\u7684\u201c\u5c3e\u5df4\u201d\u662f\u80a5\u5927\u7684\uff0c\u800c\u6700\u7f55\u89c1\u3001\u6700\u4e0d\u53ef\u9884\u6d4b\u7684\u4e8b\u4ef6\u4f1a\u4ea7\u751f\u6700\u5927\u7684\u540e\u679c\u3002\u6bd4\u65b9\u8bf4\uff0c\u4f60\u8ba4\u4e3a\u4e00\u4e2a\u6781\u5177\u5a01\u80c1\u6027\u7684\u4e8b\u4ef6(\u4f8b\u5982\uff0c\u6807\u51c6\u666e\u5c14500\u6307\u6570(S&P\uff1b500)\u66b4\u8dcc90%)\u5728\u7ed9\u5b9a\u5e74\u4efd\u53d1\u751f\u7684\u51e0\u7387\u4e3a\u4e07\u5206\u4e4b\u4e00\uff0c\u800c\u4f60\u7684\u5386\u53f2\u6570\u636e\u96c6\u53ea\u6709300\u5e74\u7684\u6570\u636e\u3002\u4f60\u600e\u6837\u624d\u80fd\u51c6\u786e\u5730\u8bf4\u51fa\u90a3\u4ef6\u4e8b\u7684\u53ef\u80fd\u6027\u5462\uff1f\u60a8\u5c06\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u3002\n\u56e0\u6b64\uff0c\u88ab\u8ba4\u4e3a\u504f\u79bb\u6b63\u5e38\u6c34\u5e735\u30016\u62167\u6807\u51c6\u5dee\u7684\u91d1\u878d\u4e8b\u4ef6\u5f80\u5f80\u4f1a\u4ee5\u4e00\u5b9a\u7684\u89c4\u5f8b\u6027\u53d1\u751f\uff0c\u800c\u8fd9\u79cd\u89c4\u5f8b\u6027\u4e0e\u5176\u5047\u8bbe\u7684\u7edf\u8ba1\u6982\u7387\u76f8\u53bb\u751a\u8fdc\u3002\u91d1\u878d\u5e02\u573a\u6ca1\u6709\u751f\u7269\u5b66\u73b0\u5b9e\u6765\u7ea6\u675f\u5b83\u4eec\uff1a\u6211\u4eec\u53ef\u4ee5\u5f88\u6709\u4fe1\u5fc3\u5730\u8bf4\uff0c\u5927\u8c61\u4e0d\u4f1a\u9192\u6765\u65f6\u53d8\u6210\u4e00\u53ea\u7334\u5b50\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u5728\u4e00\u4e2a\u6781\u7aef\u6050\u6016\u7684\u7ade\u6280\u573a\u4e0a\u7edd\u5bf9\u81ea\u4fe1\u5730\u8bf4\u4efb\u4f55\u8bdd\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u8ba4\u4e3aVAR\u4f5c\u4e3a\u201c\u5730\u56fe\u201d\u6709\u51e0\u4e2a\u95ee\u9898\u3002\u7b2c\u4e00\uff0c\u6a21\u578b\u672c\u8eab\u5c31\u662f\u5bf9\u73b0\u5b9e\u7684\u4e25\u683c\u62bd\u8c61\uff0c\u4f9d\u9760\u5386\u53f2\u6570\u636e\u6765\u9884\u6d4b\u672a\u6765\u3002(\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u6240\u6709\u7684\u91d1\u878d\u6a21\u5f0f\u90fd\u5fc5\u987b\u5982\u6b64\u3002)\u3002var\u4e5f\u6ca1\u6709\u8bf4\u201c\u635f\u5931X\u7f8e\u5143\u7684\u98ce\u9669\u662fY\uff0c\u5728Z\u7684\u7f6e\u4fe1\u8303\u56f4\u5185.\u201d(\u5c3d\u7ba1\u98ce\u9669\u7ecf\u7406\u662f\u8fd9\u6837\u5bf9\u5f85\u7684)\u3002VAR\u5b9e\u9645\u4e0a\u8bf4\u7684\u662f\u201c\u635f\u5931X\u7f8e\u5143\u7684\u98ce\u9669\u662fY\uff0c\u201d\u57fa\u4e8e\u7ed9\u5b9a\u7684\u53c2\u6570.\u3002\u5373\u4f7f\u5bf9\u4e8e\u975e\u6280\u672f\u5458\u6765\u8bf4\uff0c\u95ee\u9898\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u672a\u6765\u662f\u4e00\u4e2a\u6211\u4eec\u4e0d\u7406\u89e3\u7684\u964c\u751f\u800c\u964c\u751f\u7684\u5730\u65b9\u3002\u8fc7\u53bb\u7684\u504f\u5dee\u53ef\u80fd\u4e0d\u662f\u672a\u6765\u7684\u504f\u5dee\u3002\u4ec5\u4ec5\u56e0\u4e3a\u5e02\u653f\u503a\u5238\u4ece\u672a\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u5229\u5dee\u4ea4\u6613\u4e8e\u7f8e\u56fd\u56fd\u503a\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4eec\u672a\u6765\u4e0d\u4f1a\u3002\u4ed6\u4eec\u53ea\u662f\u8fd8\u6ca1\u6709\u3002\u901a\u5e38\uff0c\u6a21\u578b\u5bf9\u8fd9\u4e00\u4e8b\u5b9e\u89c6\u800c\u4e0d\u89c1\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u7eb3\u897f\u59c6\u6700\u5c16\u9510\u7684\u89c2\u70b9\u4e4b\u4e00\u662f\uff0c\u5728\u8fc7\u53bb\u53d1\u751f\u7684\u4efb\u4f55\u201c\u6700\u574f\u60c5\u51b5\u201d\u7684\u524d\u4e00\u5929\uff0c\u4f60\u90fd\u4e0d\u4f1a\u628a\u5373\u5c06\u5230\u6765\u7684\u201c\u6700\u574f\u60c5\u51b5\u201d\u4f5c\u4e3a\u4f60\u7684\u6700\u574f\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u73b0\u5728\u8fd8\u4e0d\u4f1a\u53d1\u751f\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u8bf4\u660e\u30021987\u5e7410\u670819\u65e5\uff0c\u80a1\u7968\u5e02\u573a\u4e0b\u8dcc22.61%\uff0c\u9053\u743c\u65af\u5de5\u4e1a\u5e73\u5747\u6307\u6570\u4e0b\u8dcc508\u70b9\u3002\u4ee5\u767e\u5206\u6bd4\u8ba1\u7b97\uff0c\u8fd9\u662f\u5f53\u65f6\u548c\u73b0\u5728\u7f8e\u56fd\u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u5355\u65e5\u5e02\u573a\u8dcc\u5e45\u3002\u8fd9\u4e00\u5929\u88ab\u79f0\u4e3a\u201c\u9ed1\u8272\u661f\u671f\u4e00\u201d\u3002(\u8d22\u7ecf\u4f5c\u5bb6\u6709\u65f6\u7f3a\u4e4f\u521b\u9020\u529b--\u5386\u53f2\u4e0a\u8fd8\u6709\u5176\u4ed6\u51e0\u4e2a\u201c\u9ed1\u8272\u661f\u671f\u4e00\u201d\u3002)\u3002\u4f46\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u770b\u5230\u4e86\u7eb3\u897f\u59c6\u7684\u89c2\u70b9\uff1a1987\u5e7410\u670818\u65e5\uff0c\u6a21\u578b\u4f1a\u4f7f\u7528\u4ec0\u4e48\u6765\u5e94\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u6700\u574f\u60c5\u51b5\uff1f\u6211\u4eec\u4e0d\u786e\u5207\u77e5\u9053\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u4e4b\u524d\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u662f12.82%\uff0c\u53d1\u751f\u57281929\u5e7410\u670828\u65e5\u300222.61%\u7684\u964d\u5e45\u88ab\u8ba4\u4e3a\u4e0e\u5e73\u5747\u6c34\u5e73\u6709\u5982\u6b64\u591a\u7684\u6807\u51c6\u504f\u5dee\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u4f46\u91d1\u878d\u754c\u7684\u5c3e\u5df4\u975e\u5e38\u4e30\u6ee1-\u57fa\u4e8e\u5929\u771f\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\u7684\u3001\u6709\u540e\u679c\u7684\u4e8b\u4ef6\u4f3c\u4e4e\u6bd4\u5b83\u4eec\u5e94\u8be5\u53d1\u751f\u7684\u9891\u7387\u8981\u9891\u7e41\u5f97\u591a\u3002\u8fd8\u6709\u4e00\u4e2a\u4e25\u91cd\u4f46\u5f80\u5f80\u672a\u88ab\u8ba4\u8bc6\u5230\u7684\u9012\u5f52\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u6a21\u578b\u672c\u8eab\u4f1a\u5f71\u54cd\u5b83\u4eec\u8bd5\u56fe\u9884\u6d4b\u7684\u7ed3\u679c\u3002(\u8981\u66f4\u5168\u9762\u5730\u4e86\u89e3\u8fd9\u4e00\u70b9\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u5173\u4e8e\u590d\u6742\u81ea\u9002\u5e94\u7cfb\u7edf\u7684\u5e16\u5b50\u3002)\u3002\nVAR\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u4e00\u4e2a\u7a33\u5065\u5f97\u591a\u7684\u6570\u636e\u96c6\uff0c\u7edf\u8ba1\u7684\u201c\u7f6e\u4fe1\u533a\u95f4\u201d\u4e5f\u4e0d\u80fd\u8d77\u5230\u91d1\u878d\u98ce\u9669\u7ba1\u7406\u7684\u4f5c\u7528.Taleb\u8bf4\uff1a\n\u6d4b\u91cf\u98ce\u9669(\u5373\u6807\u51c6\u5dee)\u4e0e\u4f7f\u7528\u6807\u51c6\u8bef\u5dee\u9ad8\u4e8e\u6d4b\u91cf\u672c\u8eab\u6807\u51c6\u8bef\u5dee\u7684\u5de5\u5177[VAR]\u4e4b\u95f4\u5b58\u5728\u5185\u5728\u77db\u76fe\u3002\n\u6211\u53d1\u73b0\uff0c\u6211\u542c\u5230\u7684\u90a3\u4e9b\u4e13\u4e1a\u98ce\u9669\u7ecf\u7406\u5efa\u8bae\u201c\u8c28\u614e\u201d\u4f7f\u7528VAR\uff0c\u7406\u7531\u662f\u5b83\u201c\u4e00\u822c\u6709\u6548\u201d\u6216\u201c\u4e00\u822c\u6709\u6548\u201d\uff0c\u4ed6\u4eec\u5e76\u4e0d\u8ba4\u540c\u6211\u5bf9\u98ce\u9669\u7ba1\u7406\u7684\u5b9a\u4e49\u3002\u98ce\u9669\u7ba1\u7406\u7684\u76ee\u6807\u51fd\u6570\u662f\u751f\u5b58\uff0c\u800c\u4e0d\u662f\u76c8\u4e8f\u3002\u6839\u636e\u829d\u52a0\u54e5\u4f20\u5947\uff0c\u4e00\u540d\u4ea4\u6613\u5458\u201c\u57288\u5e74\u5185\u8d5a\u4e86800\u4e07\u7f8e\u5143\uff0c\u57288\u5206\u949f\u5185\u635f\u5931\u4e868000\u4e07\u7f8e\u5143\u201d\u3002\u6309\u7167\u540c\u6837\u7684\u6807\u51c6\uff0c\u4ed6\u201c\u603b\u4f53\u201d\u548c\u201c\u5e73\u5747\u201d\u90fd\u662f\u4e00\u540d\u4f18\u79c0\u7684\u98ce\u9669\u7ecf\u7406\u3002\n\u8fd9\u5c31\u50cf\u4e00\u4e2aGPS\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u968f\u65f6\u544a\u8bc9\u4f60\u4f60\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e0d\u5305\u62ec\u60ac\u5d16\u3002\u9664\u975e\u4f60\u628a\u8f66\u5f00\u4e0b\u5c71\uff0c\u5426\u5219\u4f60\u4f1a\u5bf9\u4f60\u7684\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf\u975e\u5e38\u6ee1\u610f\u7684\u3002\n\u5728\u6700\u8fd1\u7684\u62b5\u62bc\u8d37\u6b3e\u5371\u673a\u4e2d\uff0c\u6b63\u662f\u8fd9\u79cd\u5bf9\u6a21\u578b\u7684\u5929\u771f\u4fe1\u4efb\u8ba9\u8bb8\u591a\u4eba\u9677\u5165\u4e86\u56f0\u5883\u3002\u6700\u5e38\u89c1\u7684\u91d1\u878d\u9886\u57df\u5730\u56fe-\u5411\u540e\u770b\u7684\u8d8b\u52bf\u62df\u5408\u6a21\u578b-\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u63cf\u8ff0\u4e86\u4e00\u4e2a\u53ea\u662f\u6d77\u5e02\u8703\u697c\u7684\u9886\u57df\uff1a\u4e00\u4e2a\u623f\u4ef7\u53ea\u4f1a\u4e0a\u6da8\u7684\u4e16\u754c\u3002(\u5218\u6613\u65af\u00b7\u5361\u7f57\u5c14(Lewis Carroll)\u4f1a\u540c\u610f\u7684\u3002)\u3002\n\u5bf9\u8fd9\u4e00\u5207\u7684\u5408\u4e4e\u903b\u8f91\u7684\u53cd\u5e94\u662f\uff0c\u201c\u90a3\u53c8\u600e\u4e48\u6837\uff1f\u201d\u5982\u679c\u6211\u4eec\u7684\u5730\u56fe\u8ba9\u6211\u4eec\u5931\u671b\uff0c\u6211\u4eec\u5982\u4f55\u5728\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u4e16\u754c\u4e2d\u8fd0\u4f5c\uff1f\u8fd9\u662f\u5b83\u81ea\u5df1\u7684\u53e6\u4e00\u6b21\u8ba8\u8bba\uff0c\u5854\u52d2\u5e03\u5df2\u7ecf\u715e\u8d39\u82e6\u5fc3\u5730\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u806a\u660e\u4eba\u5bf9\u89e3\u51b3\u65b9\u6848\u610f\u89c1\u4e0d\u4e00\u3002\u4f46\u4e00\u4e2a\u660e\u663e\u7684\u5173\u952e\u5fc5\u987b\u662f\u5efa\u7acb\u5bf9\u6a21\u578b\u8bef\u5dee\u5177\u6709\u5065\u58ee\u6027\u7684\u7cfb\u7edf\u3002\n\u50cfVAR\u8fd9\u6837\u7684\u6a21\u578b\u7684\u5b9e\u9645\u95ee\u9898\u662f\u94f6\u884c\u7528\u5b83\u6765\u4f18\u5316\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u8981\u6a21\u578b\u8ba4\u4e3a\u53ef\u4ee5\uff0c\u4ed6\u4eec\u5c31\u627f\u62c5\u5c3d\u53ef\u80fd\u591a\u7684\u66dd\u5149\u91cf\u3002\u5f53\u94f6\u884c\u8f6c\u5411\u7ba1\u7406\u4e00\u4e2a\u9ad8\u5ea6\u8be6\u7ec6\u3001\u9ad8\u5ea6\u81ea\u4fe1\u7684\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u77e5\u60c5\u5e38\u8bc6\u65f6\uff0c\u5b83\u4eec\u5f80\u5f80\u4f1a\u5efa\u7acb\u9690\u85cf\u7684\u98ce\u9669\uff0c\u8fd9\u4e9b\u98ce\u9669\u4f1a\u53ca\u65f6\u66b4\u9732\u51fa\u6765\u3002\n\u5982\u679c\u4eba\u4eec\u8f6c\u800c\u5047\u8bbe\u6ca1\u6709\u7cbe\u786e\u7684\u91d1\u878d\u9886\u57df\u5730\u56fe\uff0c\u4ed6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u6c42\u52a9\u4e8e\u7b80\u5355\u5f97\u591a\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002(\u5982\u679c\u4f60\u8ba4\u4e3a\u672a\u6765\u7684\u8be6\u7ec6\u7edf\u8ba1\u6a21\u578b\u4f1a\u8ba9\u4f60\u5931\u671b\uff0c\u90a3\u4f60\u5c31\u4e0d\u8981\u4f7f\u7528\u5b83\u4eec\u3002)\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u4f60\u4f1a\u50cf\u6c83\u4f26\u00b7\u5df4\u83f2\u7279(Warren Buffett)\u90a3\u6837\u5bf9\u5f85\u4f2f\u514b\u5e0c\u5c14\u54c8\u6492\u97e6\u516c\u53f8(Berkshire Hathaway)\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0c\u5df4\u83f2\u7279\u5148\u751f\u4e00\u751f\u4e2d\u4ece\u672a\u4f7f\u7528\u8fc7\u8ba1\u7b97\u673a\u6a21\u578b\uff0c\u4f46\u4ed6\u7ba1\u7406\u7740\u4e00\u5bb6\u6309\u8d44\u4ea7\u8ba1\u7b97\u89c4\u6a21\u8fbe5000\u4ebf\u7f8e\u5143\u7684\u673a\u6784\uff0c\u5176\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u662f\u91d1\u878d\u8d44\u4ea7\u3002\u591a\u4e48?\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u8981\u6c42\u5047\u8bbe\u672a\u6765\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u6bd4\u8fc7\u53bb\u4e25\u91cd\u5f97\u591a\uff0c\u8fd8\u8981\u6c42\u5efa\u7acb\u4e00\u4e2a\u62e5\u6709\u4e00\u5957\u5f3a\u5927\u7684\u5907\u4efd\u7cfb\u7edf\u548c\u5728\u591a\u4e2a\u6c34\u5e73\u4e0a\u8fd0\u884c\u7684\u5b89\u5168\u8fb9\u9645\u7684\u673a\u6784\u3002\u989d\u5916\u7684\u73b0\u91d1\uff0c\u800c\u4e0d\u662f\u989d\u5916\u7684\u6760\u6746\u3002\u8d39\u5c3d\u5fc3\u601d\u786e\u4fdd\u5c3e\u5df4\u4e0d\u4f1a\u6740\u4e86\u4f60\u3002\u4e0e\u5176\u4f18\u5316\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u4e0d\u5982\u63a5\u53d7\u4f60\u6d1e\u5bdf\u529b\u7684\u6781\u9650\u3002\n\u5f53\u7136\uff0c\u4e0e\u66f4\u4f18\u5316\u7684\u6a21\u578b\u76f8\u6bd4\uff0c\u6743\u8861\u7684\u77ed\u671f\u56de\u62a5\u8981\u5c0f\u5f97\u591a\u3002\u8c08\u5230\u8fd9\u4e00\u70b9\uff0c\u67e5\u7406\u00b7\u8292\u683c(Charlie Munger)\u6307\u51fa\uff1a\n\u4f2f\u514b\u5e0c\u5c14\u8fc7\u53bb\u7684\u8bb0\u5f55\u51e0\u4e4e\u662f\u8352\u5510\u53ef\u7b11\u7684\u3002\u5982\u679c\u4f2f\u514b\u5e0c\u5c14\u4f7f\u7528\u7684\u6760\u6746\u7387\u5373\u4f7f\u662f\u9c81\u73c0\u7279\u00b7\u9ed8\u591a\u514b(Rupert Murdoch)\u7684\u4e00\u534a\uff0c\u4e5f\u4f1a\u662f\u76ee\u524d\u89c4\u6a21\u7684\u4e94\u500d\u3002\n\u56e0\u6b64\uff0c\u7a81\u51fa\u7684\u4e00\u70b9\u662f\uff0c\u5728\u6211\u4eec\u7528\u6709\u7528\u7684\u6a21\u578b\u6765\u7b80\u5316\u73b0\u5b9e\u7684\u6e38\u884c\u4e2d\uff0c\u6cd5\u5357\u8857\u662f\u8fd9\u65b9\u9762\u7684\u5021\u5bfc\u8005\uff0c\u6211\u4eec\u628a\u6a21\u578b\u4e0e\u73b0\u5b9e\u6df7\u4e3a\u4e00\u8c08\u3002\u5bf9\u4e8e\u5f88\u591a\u4eba\u6765\u8bf4\uff0c\u8fd9\u79cd\u6a21\u5f0f\u521b\u9020\u4e86\u81ea\u5df1\u7684\u73b0\u5b9e\u3002\u8fd9\u5c31\u597d\u50cf\u7535\u5b50\u8868\u683c\u53d8\u5f97\u6829\u6829\u5982\u751f\u3002\u6211\u4eec\u5fd8\u8bb0\u4e86\u73b0\u5b9e\u8981\u590d\u6742\u5f97\u591a\u3002\u5730\u56fe\u4e0d\u662f\u9886\u5730\u3002\u7406\u8bba\u5e76\u4e0d\u662f\u5b83\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u5b83\u53ea\u662f\u6211\u4eec\u9009\u62e9\u7684\u4e00\u79cd\u89e3\u91ca\u67d0\u4e00\u7ec4\u4fe1\u606f\u7684\u65b9\u5f0f\u3002\u5730\u56fe\u4e5f\u53ef\u80fd\u662f\u9519\u8bef\u7684\uff0c\u4f46\u5373\u4f7f\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u5b83\u4eec\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u62bd\u8c61\u610f\u5473\u7740\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\u800c\u4e22\u5931\u4e86\u4fe1\u606f\u3002(\u56de\u60f3\u4e00\u4e0b\u6bcf\u82f1\u91cc\u7684\u6bd4\u4f8b\u5c3a\u5730\u56fe\u3002)\u3002\n\u6211\u4eec\u5982\u4f55\u505a\u5f97\u66f4\u597d\uff1f\u8fd9\u662f\u53e6\u4e00\u7bc7\u6587\u7ae0\u7684\u7d20\u6750\uff0c\u4f46\u7b2c\u4e00\u6b65\u662f\u8981\u8ba4\u8bc6\u5230\uff0c\u9664\u975e\u4f60\u7406\u89e3\u548c\u5c0a\u91cd\u5b83\u7684\u5c40\u9650\u6027\uff0c\u5426\u5219\u4f60\u5c31\u4e0d\u7406\u89e3\u4e00\u4e2a\u6a21\u578b\u3001\u5730\u56fe\u6216\u7b80\u5316\u3002\u6211\u4eec\u5fc5\u987b\u65f6\u523b\u4fdd\u6301\u8b66\u60d5\uff0c\u4e0d\u8981\u540e\u9000\u4e00\u6b65\uff0c\u4ee5\u4e86\u89e3\u5730\u56fe\u6709\u7528\u7684\u80cc\u666f\uff0c\u4ee5\u53ca\u60ac\u5d16\u53ef\u80fd\u4f4d\u4e8e\u54ea\u91cc\u3002\u5728\u6211\u4eec\u505a\u5230\u8fd9\u4e00\u70b9\u4e4b\u524d\uff0c\u6211\u4eec\u5c31\u662f\u5728\u5403\u706b\u9e21\u3002", "note_en": "The Great Mental Models Volumes  One and  Two are out. Learn more about  the project here.\n The map of reality is not reality. Even the best maps are imperfect. That\u2019s because they are reductions of what they represent. If a map were to represent the territory with perfect fidelity, it would no longer be a reduction and thus would no longer be useful to us. A map can also be a snapshot of a point in time, representing something that no longer exists. This is important to keep in mind as we think through problems and make better decisions.\n   In 1931, in New Orleans, Louisiana, mathematician Alfred Korzybski presented a paper on mathematical semantics. To the non-technical reader, most of the paper reads like an abstruse argument on the relationship of mathematics to human language, and of both to physical reality. Important stuff certainly, but not necessarily immediately useful for the layperson.\n However, in his string of arguments on the structure of language, Korzybski introduced and popularized the idea that\u00a0 the map is not the territory.\u00a0In other words, the description of the thing is not the thing itself. The model is not reality. The abstraction is not the abstracted.\u00a0 This\u00a0has enormous practical consequences.\n  A.) A map may have a structure similar or dissimilar to the structure of the territory.\n B.) Two similar structures have similar \u2018logical\u2019 characteristics. Thus, if in a correct map, Dresden is given as between Paris and Warsaw, a similar relation is found in the actual territory.\n  D.) An ideal map would contain the map of the map, the map of the map of the map, etc., endlessly\u2026We may call this characteristic self-reflexiveness.\n Maps are necessary, but flawed. (By maps, we mean any abstraction of reality, including descriptions, theories, models, etc.) The problem with a map is not simply that it is an abstraction; we need abstraction. A map with the scale of one mile to one mile would not have the problems that maps have, nor would it be helpful in any way.\n To solve this problem, the mind creates maps of reality in order to understand it, because the only way we can process the complexity of reality is through abstraction. But frequently, we don\u2019t understand our maps or their limits. In fact, we are so reliant on abstraction that we will frequently use an incorrect model simply because we feel\u00a0 any\u00a0model is preferable to\u00a0 no\u00a0model. (Reminding one of the drunk looking for his keys under the streetlight because \u201cThat\u2019s where the light is!\u201d)\n  Even the best and most useful maps suffer from limitations, and Korzybski gives us a few to explore: (A.) The map could be  incorrect\u00a0without us realizing it ;\u00a0(B.) The map is, by necessity, a\u00a0 reduction\u00a0of the actual thing, a process in which you lose certain important information; and (C.) A map needs\u00a0 interpretation, a process that can cause major errors. (The only way to truly solve the last would be an endless chain of maps-of-maps, which he called self-reflexiveness.)\n With the aid of modern psychology, we also see another issue: the human brain takes great leaps and shortcuts in order to make sense of its surroundings. As Charlie Munger has\u00a0pointed out, a good idea and the human mind act something like the sperm and the egg \u2014 after the first good idea gets in, the door closes. This makes the map-territory problem a close cousin of\u00a0 man-with-a-hammer tendency.\n This tendency is, obviously, problematic in our effort to simplify reality. When we see a powerful model work well, we tend to over-apply it, using it in non-analogous situations. We have trouble delimiting its usefulness, which causes errors.\n   By most accounts, Ron Johnson was one the most successful and desirable retail executives by the summer of 2011. Not only was he handpicked by Steve Jobs to build the Apple Stores, a venture which had itself come under major scrutiny \u2013 one\u00a0 retort\u00a0printed in Bloomberg magazine: \u201cI give them two years before they\u2019re turning out the lights on a very painful and expensive mistake\u201d \u2013 but he had been credited with playing a major role in turning Target from a K-Mart look-alike into the trendy-but-cheap\u00a0 Tar-zhey\u00a0by the late 1990s and early 2000s.\n Johnson\u2019s success at Apple was not immediate, but it was undeniable. By 2011, Apple stores were by far the most productive in the world on a per-square-foot basis, and had become the envy of the retail world. Their sales figures left\u00a0 Tiffany\u2019s in the dust. The gleaming glass cube on Fifth Avenue became a\u00a0 more popular\u00a0tourist attraction than the Statue of Liberty. It was a lollapalooza, something beyond ordinary success. And Johnson had led the charge.\n  With that success, in 2011 Johnson was hired by Bill Ackman, Steven Roth, and other luminaries of the financial world to turn around the dowdy old department store chain JC Penney. The situation of the department store was dour: Between 1992 and 2011, the retail market share held by department stores had declined from 57% to 31%.\n Their core position was a no-brainer though. JC Penney had immensely valuable real estate, anchoring malls across the country. Johnson argued that their physical mall position was valuable if for no other reason that people often parked next to them and walked through them to get to the center of the mall. Foot traffic was a given. Because of contracts signed in the \u201950s, \u201960s, and \u201970s, the heyday of the mall building era, rent was also cheap, another major competitive advantage. And unlike some struggling retailers, JC Penney was making (some) money. There was cash in the register to help fund a transformation.\n The idea was to take the best ideas from his experience at Apple; great customer service, consistent pricing with no markdowns and markups, immaculate displays, world-class products, and apply them to the department store. Johnson planned to turn the stores into little malls-within-malls. He went as far as comparing the ever-rotating stores-within-a-store to Apple\u2019s \u201capps.\u201d Such a model would keep the store constantly fresh, and avoid the creeping staleness of retail.\n Johnson\u00a0 pitched his idea\u00a0to shareholders in a series of trendy New York City meetings reminiscent of Steve Jobs\u2019 annual \u201cBut wait, there\u2019s more!\u201d product launches at Apple. He was persuasive: JC Penney\u2019s stock price went from $26 in the summer of 2011 to $42 in early 2012 on the strength of the pitch.\n The idea failed almost immediately. His new pricing model (eliminating discounting) was a flop. The coupon-hunters rebelled. Much of his new product was deemed too trendy. His new store model was wildly expensive for a middling department store chain \u2013 including operating losses purposefully endured, he\u2019d spent several billion dollars trying to effect the physical transformation of the stores. JC Penney customers had no idea what was going on, and by 2013, Johnson was sacked. The stock price sank into the single digits, where it remains two years later.\n What went wrong in the quest to build\u00a0 America\u2019s Favorite Store? It turned out that Johnson was using a map of Tulsa to navigate Tuscaloosa. Apple\u2019s products, customers, and history had far too little in common with JC Penney\u2019s. Apple had a rabid, young, affluent fan-base\u00a0 before\u00a0they built stores; JC Penney\u2019s was not associated with youth or affluence. Apple had shiny products, and needed a shiny store; JC Penney was known for its affordable sweaters. Apple had never relied on discounting in the first place; JC Penney was taking\u00a0 away\u00a0discounts given prior, triggering massive\u00a0deprival super-reaction.\n  In other words, the old map was not very useful. Even his success at Target, which seems like a closer analogue, was misleading in the context of JC Penney. Target had made small, incremental changes over many years, to which Johnson had made a meaningful contribution. JC Penney was attempting to reinvent the concept of the department store in a year or two, leaving behind the core customer in an attempt to gain new ones. This was a much different proposition. (Another thing holding the company back was simply its   base odds: Can you name a retailer of great significance that has lost its position in the world and come back?)\n The main issue was\u00a0 not\u00a0that Johnson was incompetent. He wasn\u2019t. He wouldn\u2019t have gotten the job if he was. He was\u00a0 extremely competent. But it was exactly his competence and past success that got him into trouble. He was like a great swimmer that tried to tackle a grand rapid, and the model he used successfully in the past, the map that had navigated a lot of difficult terrain, was not the map he needed anymore. He had an excellent theory about retailing that applied in some circumstances, but not in others. The terrain had changed, but the old idea stuck.\n  One person who well understands this problem of the map and the territory is Nassim Taleb, author of the\u00a0 Incerto\u00a0series \u2013    Antifragile \u00a0,\u00a0  The Black Swan,\u00a0   Fooled by Randomness, and\u00a0   The Bed of Procrustes.\n Taleb has been vocal about the misuse of models for many years, but the earliest and most vivid I can recall is his firm criticism of a financial model called Value-at Risk, or VAR. The model, used in the banking community, is supposed to help manage risk by providing a maximum potential loss within a given confidence interval. In other words, it purports to allow risk managers to say that, within 95%, 99%, or 99.9% confidence, the firm will not lose more than $X million dollars in a given day. The higher the interval, the less accurate the analysis becomes. It might be possible to say that the firm has $100 million at risk at any time at a 99% confidence interval, but given the statistical properties of markets, a move to 99.9% confidence might mean the risk manager has to state the firm has $1 billion at risk. 99.99% might mean $10 billion. As rarer and rarer events are included in the distribution, the analysis gets less useful. So, by necessity, the \u201ctails\u201d are cut off somewhere and the analysis is deemed acceptable.\n Elaborate statistical models are built to justify and use the VAR theory. On its\u00a0face, it seems like a useful and powerful idea; if you know how much you can lose at any time, you can manage risk to the decimal. You can tell your board of directors and shareholders, with a straight face, that you\u2019ve got your eye on the till.\n  A model might show you some risks, but not the risks of using it. Moreover, models are built on a finite set of parameters, while reality affords us infinite sources of risks.\n In order to come up with the VAR figure, the risk manager must take historical data and assume a statistical distribution in order to predict the future. For example, if we could take 100 million human beings and analyze their height and weight, we could then predict the distribution of heights and weights on a\u00a0 different\u00a0100 million, and there would be a microscopically small probability that we\u2019d be wrong. That\u2019s because we have a huge sample size and we are analyzing something with very small and predictable deviations from the average.\n But finance does\u00a0 not\u00a0follow this kind of distribution. There\u2019s no such predictability. As Nassim has argued, the \u201ctails\u201d are fat in this domain, and the rarest, most unpredictable events have the largest consequences. Let\u2019s say you deem a highly threatening event (for example, a 90% crash in the S&amp;P 500) to have a 1 in 10,000 chance of occurring in a given year, and your historical data set only has 300 years of data. How can you accurately state the probability of that event? You would need far more data.\n Thus, financial events deemed to be 5, or 6, or 7 standard deviations from the norm tend to happen with a certain regularity that nowhere near matches their supposed statistical probability.\u00a0 Financial markets have no biological reality to tie them down: We can say with a useful amount of confidence that an elephant will not wake up as a monkey, but we can\u2019t say anything with absolute confidence in an\u00a0 Extremistan\u00a0arena.\n We see several issues with VAR as a \u201cmap,\u201d then. The first that the model is itself a severe abstraction of reality, relying on historical data to predict the future. (As all financial models must, to a certain extent.) VAR does\u00a0 not\u00a0say \u201cThe risk of losing X dollars is Y, within a confidence of Z.\u201d (Although risk managers treat it that way). What VAR actually says is \u201cthe risk of losing X dollars is Y,\u00a0 based on the given parameters.\u201d The problem is obvious even to the non-technician: The future is a strange and foreign place that we do not understand. Deviations of the past may not be the deviations of the future. Just because municipal bonds have never traded at such-and-such a spread to U.S. Treasury bonds does\u00a0 not\u00a0mean that they won\u2019t in the future. They just haven\u2019t yet. Frequently, the models are blind to this fact.\n In fact, one of Nassim\u2019s most trenchant points is that on the day before whatever \u201cworst case\u201d event happened in the past, you would have\u00a0 not\u00a0been using the coming \u201cworst case\u201d as your worst case, because it wouldn\u2019t have happened yet.\n Here\u2019s an easy illustration. October 19, 1987, the stock market dropped by 22.61%, or 508 points on the Dow Jones Industrial Average. In percentage terms, it was then and remains the worst one-day market drop in U.S. history. It was dubbed \u201c Black Monday.\u201d (Financial writers sometimes lack creativity \u2014 there are several other \u201cBlack Monday\u2019s\u201d in history.) But here we see Nassim\u2019s point: On October 18, 1987, what would the models use as\u00a0the worst possible case? We don\u2019t know exactly, but we do know the previous worst case was 12.82%, which happened on October 28, 1929. A 22.61% drop would have been considered so many standard deviations from the average as to be near impossible.\n But the tails are very fat in finance \u2014 improbable and consequential events seem to happen far more often than they should based on naive statistics. There is also a severe but often unrecognized  recursiveness problem, which is that the models themselves influence the outcome they are trying to predict. (To understand this more fully, check out our post on\u00a0 Complex Adaptive Systems.)\n A second problem with VAR is that even if we had a vastly more robust dataset, a statistical \u201cconfidence interval\u201d does not do the job of financial risk management.\u00a0 Says Taleb:\n There is an internal contradiction between measuring risk (i.e. standard deviation) and\u00a0 using a tool [VAR] with a higher standard error than that of the measure itself.\n I find that those professional risk managers whom I heard recommend a \u201cguarded\u201d use of the VAR on grounds that it \u201cgenerally works\u201d or \u201cit works on average\u201d do not share my definition of risk management. The risk management objective function is survival, not profits and losses. A trader according to the Chicago legend, \u201cmade 8 million in eight years and lost 80 million in eight minutes\u201d. According to the same standards, he would be, \u201cin general\u201d, and \u201con average\u201d a good risk manager.\n This is like a GPS system that shows you where you are at all times but doesn\u2019t include cliffs. You\u2019d be perfectly happy with your GPS until you drove off a mountain.\n It was this type of naive trust of models that got a lot of people in trouble in the recent mortgage crisis. Backward-looking, trend-fitting models, the most common maps of the financial territory, failed by describing a territory that was only a mirage: A world where home prices only went up. (Lewis Carroll would have approved.)\n   The logical response to all this is, \u201cSo what?\u201d If our maps fail us, how do we operate in an uncertain world? This is its own discussion for another time, and Taleb has gone to great pains to try and address the concern. Smart minds disagree on the solution. But one obvious key must be building systems that are robust to model error.\n The practical problem with a model like VAR is that the banks use it to  optimize. In other words, they take on as much exposure as the model deems OK. And when banks veer into managing to a highly detailed, highly confident model rather than to informed common sense, which happens frequently, they tend to build up hidden risks that will un-hide themselves in time.\n If one were to instead assume that there  were no precisely accurate maps of the financial territory, they would have to fall back on much simpler heuristics. (If you assume detailed statistical models of the future will fail you, you don\u2019t use them.)\n In short, you would do what Warren Buffett has done with Berkshire Hathaway. Mr. Buffett, to our knowledge, has never used a computer model in his life, yet manages an institution half a trillion dollars in size by assets, a large portion of which are financial assets. How?\n The approach requires not only assuming a future worst case far more severe than the past, but also dictates building an institution with a robust set of  backup systems, and  margins-of-safety operating at multiple levels. Extra cash, rather than extra leverage. Taking great pains to make sure the tails can\u2019t kill you. Instead of optimizing to a model, accepting the limits of your clairvoyance.\n  The trade-off, of course, is short-run rewards much less great than those available under more optimized models. Speaking of this, Charlie Munger has noted:\n Berkshire\u2019s past record has been almost ridiculous. If Berkshire had used even half the leverage of, say, Rupert Murdoch, it would be five times its current size.\n   The salient point then is that in our march to simplify reality with useful models, of which Farnam Street is an advocate, we confuse the models with reality. For\u00a0many people, the model creates its\u00a0 own\u00a0reality. It is as if the spreadsheet comes to life. We forget that reality is a lot messier. The map isn\u2019t the territory. The theory isn\u2019t what it describes, it\u2019s simply a way we choose to interpret a certain set of information. Maps can also be\u00a0 wrong, but even if they are essentially correct, they are an abstraction, and abstraction means that information is lost to save space. (Recall the mile-to-mile scale map.)\n How do we do better? This is fodder for another post, but the first step is to realize that\u00a0 you do not understand a model, map, or reduction unless you understand and respect its limitations. We must always be vigilant by\u00a0stepping back to understand the context in which a map is useful, and where the cliffs might lie. Until we do that, we are\u00a0 the turkey.", "posttime": "2020-06-13 00:41:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5730\u56fe,map", "title": "\u5730\u56fe\u4e0d\u662f\u9886\u571f(2015)", "title_en": "The Map Is Not the Territory (2015)", "transed": 1, "url": "https://fs.blog/2015/11/map-and-territory/", "via": "", "real_tags": ["\u5730\u56fe", "map"]}, {"category": "", "categoryclass": "", "imagename": "469718a270cd03408174bcd0e3762eaf.jpeg", "infoid": 1006299, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6d1b\u6749\u77f6(\u8def\u900f\u793e)-\u6839\u636e\u5dde\u957f\u52a0\u6587\u00b7\u7ebd\u745f\u59c6(Gavin Newsom)\u5468\u4e94\u7b7e\u7f72\u6210\u4e3a\u6cd5\u5f8b\u7684\u4e00\u9879\u63aa\u65bd\uff0c\u52a0\u5dde\u91c7\u53d6\u884c\u52a8\uff0c\u505c\u6b62\u5728\u7f8e\u56fd\u6700\u5927\u7684\u5dde\u76d1\u72f1\u7cfb\u7edf\u4ee5\u53ca\u8be5\u5dde\u7684\u8054\u90a6\u79fb\u6c11\u62d8\u7559\u4e2d\u5fc3\u4f7f\u7528\u79c1\u4eba\u8425\u5229\u6027\u76d1\u72f1\u3002\n\u65b0\u6cd5\u5f8b\u7981\u6b62\u52a0\u5dde\u60e9\u6559\u548c\u5eb7\u590d\u90e8\u57282020\u5e741\u67081\u65e5\u4e4b\u540e\u4e0e\u4e00\u5bb6\u79c1\u4eba\u516c\u53f8\u7b7e\u8ba2\u6216\u7eed\u7b7e\u8fd0\u8425\u5dde\u76d1\u72f1\u7684\u5408\u540c\uff0c\u9664\u975e\u9700\u8981\u6ee1\u8db3\u6cd5\u9662\u4e0b\u4ee4\u7684\u56da\u72af\u4f4f\u623f\u9650\u5236\u3002\u4ece2028\u5e74\u5f00\u59cb\uff0c\u5b83\u5c06\u5b8c\u5168\u7981\u6b62\u52a0\u5dde\u5c06\u4efb\u4f55\u4eba\u76d1\u7981\u5728\u79c1\u8425\u8bbe\u65bd\u4e2d\u3002\n\u52a0\u5dde\u7acb\u6cd5\u673a\u6784\u4e0a\u4e2a\u6708\u901a\u8fc7\u4e86\u8fd9\u9879\u63aa\u65bd\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u7531\u5dde\u60e9\u6212\u673a\u6784\u8fd0\u8425\u548c\u914d\u5907\u5de5\u4f5c\u4eba\u5458\u7684\u79c1\u4eba\u76d1\u72f1\u3002\n\u7ebd\u745f\u59c6\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff0c\u4ed6\u57281\u6708\u4efd\u4e0a\u4efb\u65f6\u66fe\u8a93\u8a00\u8981\u5e9f\u9664\u8be5\u5dde\u7684\u79c1\u4eba\u76d1\u72f1\uff0c\u201c\u56e0\u4e3a\u5b83\u4eec\u52a9\u957f\u4e86\u8fc7\u5ea6\u76d1\u7981\uff0c\u5305\u62ec\u90a3\u4e9b\u76d1\u7981\u52a0\u5dde\u56da\u72af\u7684\u76d1\u72f1\uff0c\u4ee5\u53ca\u90a3\u4e9b\u62d8\u7559\u79fb\u6c11\u548c\u5bfb\u6c42\u5e87\u62a4\u8005\u7684\u76d1\u72f1\u3002\u201d\n\u8be5\u6cd5\u6848\u7684\u652f\u6301\u8005\u8ba4\u4e3a\uff0c\u79c1\u4eba\u76d1\u72f1\u88ab\u9a71\u4f7f\u80a1\u4e1c\u5229\u6da6\u6700\u5927\u5316\uff0c\u7f3a\u4e4f\u9002\u5f53\u7684\u76d1\u7763\u6216\u6fc0\u52b1\u6765\u6539\u9020\u56da\u72af\uff0c\u5e76\u901a\u8fc7\u964d\u4f4e\u5173\u62bc\u4eba\u5458\u7684\u6210\u672c\uff0c\u52a9\u957f\u4e86\u5927\u89c4\u6a21\u76d1\u7981\u7684\u6587\u5316\u3002\n\u603b\u5171\u67097\u4e2a\u603b\u5171\u5bb9\u7eb35000\u591a\u4eba\u7684\u4f4e\u5b89\u5168\u8bbe\u65bd\u5c8c\u5c8c\u53ef\u5371\uff0c\u6240\u6709\u8fd9\u4e9b\u8bbe\u65bd\u8981\u4e48\u7531\u603b\u90e8\u4f4d\u4e8e\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684GEO\u96c6\u56e2\u8fd0\u8425\uff0c\u8981\u4e48\u7531\u603b\u90e8\u4f4d\u4e8e\u7530\u7eb3\u897f\u5dde\u7684CoreCivic\u8fd0\u8425\u3002\n\u4e3a\u81ea\u5df1\u7684\u5546\u4e1a\u6a21\u5f0f\u8fa9\u62a4\u65f6\uff0c\u8fd9\u4e9b\u516c\u53f8\u8868\u793a\uff0c\u5f53\u52a0\u5dde\u76d1\u72f1\u7684\u62d8\u7559\u4eba\u6570\u81a8\u80c0\u5230\u7cfb\u7edf\u5bb9\u91cf\u7684\u4e24\u500d\u4ee5\u4e0a\uff0c\u5f15\u53d1\u8bc9\u8bbc\uff0c\u5bfc\u81f4\u6cd5\u9662\u4e0b\u4ee4\u524a\u51cf\u56da\u72af\u4eba\u6570\u65f6\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u81f3\u5173\u91cd\u8981\u7684\u989d\u5916\u7a7a\u95f4\u3002\nCoreCivic\u53d1\u8a00\u4eba\u963f\u66fc\u8fbe\u00b7\u5409\u5c14\u514b\u91cc\u65af\u7279(Amanda Gilchrist)\u8bf4\uff1a\u201c10\u5e74\u6765\uff0c\u6211\u4eec\u4e3a\u9762\u4e34\u6781\u5ea6\u62e5\u6324\u7684\u56da\u72af\u63d0\u4f9b\u5b89\u5168\u3001\u6709\u4fdd\u969c\u7684\u4f4f\u623f\u548c\u6539\u53d8\u751f\u6d3b\u7684\u91cd\u65b0\u8fdb\u5165\u8ba1\u5212\u3002\u201d\n\u53e6\u5916\uff0cGEO\u96c6\u56e2\u63f4\u5f15\u5176\u4f5c\u4e3a\u201c\u5eb7\u590d\u670d\u52a1\u9886\u57df\u7684\u521b\u65b0\u8005\u201d\u7684\u8bb0\u5f55\uff0c\u5e76\u8868\u793a\u8be5\u6cd5\u6848\u8fdd\u80cc\u4e86\u8be5\u5dde\u964d\u4f4e\u56da\u72af\u7d2f\u72af\u7387\u7684\u76ee\u6807\u3002\n\u52a0\u5dde\u60e9\u6559\u7cfb\u7edf\u5269\u4e0b\u7684\u6700\u540e\u4e09\u5ea7\u79c1\u8425\u76d1\u72f1\u603b\u5171\u5173\u62bc\u4e861400\u540d\u56da\u72af\uff0c\u6839\u636e\u65b0\u6cd5\u5f8b\uff0c\u5f53\u4ed6\u4eec\u4e0e\u5dde\u653f\u5e9c\u7684\u5408\u540c\u5230\u671f\u65f6\uff0c\u8fd9\u4e9b\u76d1\u72f1\u5c06\u5728\u56db\u5e74\u5185\u5173\u95ed\u3002\n\u6216\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u9664\u975e\u8fd9\u9879\u7981\u4ee4\u5728\u6cd5\u5ead\u4e0a\u53d7\u5230\u6311\u6218\uff0c\u5426\u5219\u8054\u90a6\u79fb\u6c11\u548c\u6d77\u5173\u6267\u6cd5\u5c40(ICE)\u5c06\u5931\u53bb\u56db\u4e2a\u5728\u52a0\u5dde\u5173\u62bc\u5927\u7ea64000\u4eba\u7684\u79c1\u8425\u62d8\u7559\u8bbe\u65bd\u3002\nGEO\u96c6\u56e2\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u79f0\uff0c\u52a0\u5dde\u65b0\u9881\u5e03\u7684\u7981\u6b62\u79c1\u8425ICE\u62d8\u7559\u4e2d\u5fc3\u7684\u89c4\u5b9a\u8fdd\u53cd\u4e86\u7f8e\u56fd\u5baa\u6cd5\u8d4b\u4e88\u8054\u90a6\u653f\u5e9c\u5bf9\u5404\u5dde\u7684\u81f3\u9ad8\u65e0\u4e0a\u5730\u4f4d\u7684\u539f\u5219\uff0c\u8fd9\u8868\u660e\u4e00\u573a\u6cd5\u5f8b\u6311\u6218\u53ef\u80fd\u5373\u5c06\u5230\u6765\u3002\nICE\u5728\u7acb\u6cd5\u7b7e\u7f72\u524d\u66fe\u5355\u72ec\u8868\u793a\uff0c\u5176\u5728\u62bc\u4eba\u5458\u53ea\u4f1a\u88ab\u8f6c\u79fb\u5230\u52a0\u5dde\u4ee5\u5916\u7684\u8bbe\u65bd\uff0c\u8feb\u4f7f\u5728\u62bc\u4eba\u5458\u7684\u670b\u53cb\u548c\u5bb6\u4eba\u957f\u9014\u8dcb\u6d89\u66f4\u8fdc\u7684\u5730\u65b9\u63a2\u671b\u4ed6\u4eec\u7684\u4eb2\u4eba\u3002\n\u5211\u4e8b\u53f8\u6cd5\u6539\u9769\u7ec4\u7ec7\u91cf\u5211\u9879\u76ee\u6218\u7565\u5021\u8bae\u4e3b\u4efb\u5361\u62c9\u00b7\u6208\u5947(Kara Gotsch)\u8bf4\uff0c\u5305\u62ec\u7ebd\u7ea6\u5dde\u3001\u4f0a\u5229\u8bfa\u4f0a\u5dde\u548c\u5185\u534e\u8fbe\u5dde\u5728\u5185\u7684\u51e0\u4e2a\u5dde\u5df2\u7ecf\u5bf9\u79c1\u4eba\u76d1\u72f1\u91c7\u53d6\u4e86\u7c7b\u4f3c\u7684\u7981\u4ee4\uff0c\u8fd1\u4e00\u534a\u7684\u5dde\u6ca1\u6709\u8fd9\u6837\u7684\u8bbe\u65bd\u3002\n\u52a0\u5dde\u5728\u79c1\u4eba\u8bbe\u65bd\u4e2d\u7684\u56da\u72af\u4efd\u989d\u53ea\u5360\u5176\u8fd112.6\u4e07\u76d1\u72f1\u603b\u4eba\u53e3\u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\u6208\u5947\u8bf4\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u57281985\u5e74\u6210\u4e3a\u7b2c\u4e00\u4e2a\u5c06\u76d1\u7981\u5916\u5305\u7ed9\u79c1\u8425\u516c\u53f8\u7684\u5dde\uff0c2017\u5e74\u8425\u5229\u6027\u8bbe\u65bd\u7684\u56da\u72af\u4eba\u6570\u8fdc\u8fdc\u8d85\u8fc7\u5176\u4ed6\u4efb\u4f55\u5dde\uff0c\u63a5\u8fd11.3\u4e07\u4eba\uff0c\u5360\u56da\u72af\u603b\u6570\u76847.8%\u3002", "note_en": "LOS ANGELES (Reuters) - California moved to end the use of private, for-profit lockups in America\u2019s largest state prison system as well as in federal immigration detention centers in the state under a measure signed into law on Friday by Governor Gavin Newsom.\n  The new law bars the California Department of Corrections and Rehabilitation from entering into or renewing a contract with a private company to run a state prison after Jan. 1, 2020, unless needed to meet court-ordered inmate housing limits. It will ban California from incarcerating anyone in privately run facilities altogether from 2028.\n The measure, which passed the California legislature last month, does not apply to privately owned prisons operated and staffed by the state corrections agency.\n Newsom said in a statement that he had vowed to abolish private prisons in the state when he took office in January \u201cbecause they contribute to over-incarceration, including those that incarcerate California inmates and those that detain immigrants and asylum seekers.\u201d\n  Supporters of the bill have argued that private prisons are driven to maximize shareholder profits, lack proper oversight or incentives to rehabilitate inmates and have contributed to a culture of mass incarceration by making it cheaper to lock up people.\n A total of seven low-security facilities collectively housing more than 5,000 people are at stake, all of them operated either by Florida-headquartered GEO Group, or Tennessee-based CoreCivic.\n Defending their business model, the companies said they provided vital extra space when detentions in California\u2019s prisons swelled to more than double the system\u2019s capacity, sparking lawsuits that led to court-ordered cuts to inmate populations.\n \u201cFor 10 years, we provided safe, secure housing and life-changing re-entry programming for inmates that had faced extreme overcrowding,\u201d CoreCivic spokeswoman Amanda Gilchrist said.\n Separately, GEO Group cited its record as \u201can innovator in the field of rehabilitative services\u201d and said the bill worked against the state\u2019s goal of lowering inmate recidivism.\n  The last three remaining privately run prisons in California\u2019s corrections system, housing a total of 1,400 inmates, are set to close in four years under the new law when their contracts with the state expire.\n Perhaps more significantly, the federal Immigration and Customs Enforcement (ICE) agency stands to lose four privately run detention facilities holding roughly 4,000 people in California, unless the ban is challenged in court.\n In a statement, GEO Group called California\u2019s newly enacted prohibition on privately run ICE detention centers a violation of the U.S. constitutional doctrine granting the federal government supremacy over the states, suggesting a legal challenge might be in the offing.\n ICE had said separately before the legislation was signed that its detainees would merely be transferred to facilities outside California, forcing friends and family of the detainees to travel greater distances to visit their loved ones.\n Several states, including New York, Illinois and Nevada, have adopted similar bans on private prisons, and nearly half of all states have no such facilities, said Kara Gotsch, director of strategic initiatives for the Sentencing Project, a criminal justice reform group.\n California\u2019s share of inmates in private facilities is a small fraction of its total prison population of nearly 126,000.\n By comparison, Texas, which became the first state to outsource incarceration to private companies in 1985, had far more inmates than any other state in for-profit facilities in 2017 at nearly 13,000, or 7.8 percent of its total, said Gotsch.", "posttime": "2020-06-13 00:40:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7981\u6b62,bans,\u56da\u72af", "title": "\u52a0\u5dde\u7981\u6b62\u79c1\u4eba\u76d1\u72f1\u548c\u79fb\u6c11\u62d8\u7559\u4e2d\u5fc3", "title_en": "California bans private prisons and immigration detention centers", "transed": 1, "url": "https://www.reuters.com/article/us-california-prisons-idUSKBN1WQ2Q9", "via": "", "real_tags": ["\u7981\u6b62", "bans", "\u56da\u72af"]}, {"category": "", "categoryclass": "", "imagename": "02362bce249b3075872ef4167a2fd803.jpg", "infoid": 1006297, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u51fa\u7248\u5546\u63d0\u8d77\u8bc9\u8bbc\uff0c\u4e92\u8054\u7f51\u6863\u6848\u9986\u5c06\u7ec8\u6b62\u5176\u63d0\u4f9b\u514d\u8d39\u3001\u4e0d\u53d7\u9650\u5236\u7684\u7535\u5b50\u4e66\u62f7\u8d1d\u7684\u8ba1\u5212\u3002\u51fa\u7248\u5546\u79f0\uff0c\u65e0\u507f\u501f\u51fa\u4e66\u7c4d\u7ed9\u4f5c\u8005\u6216\u51fa\u7248\u793e\u662f\u201c\u6545\u610f\u5927\u89c4\u6a21\u4fb5\u72af\u7248\u6743\u201d\u3002\n\u81ea3\u6708\u4efd\u4ee5\u6765\uff0c\u975e\u8425\u5229\u7ec4\u7ec7\u4e92\u8054\u7f51\u6863\u6848\u9986(Internet Archive)\u5df2\u7ecf\u5728\u7f51\u4e0a\u4e0d\u53d7\u9650\u5236\u5730\u63d0\u4f9b\u4e86130\u591a\u4e07\u518c\u56fe\u4e66\uff0c\u79f0\u5b83\u4eec\u4e3a\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\u3002\u8be5\u673a\u6784\u8868\u793a\uff0c\u8be5\u8ba1\u5212\u662f\u4e3a\u4e86\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u201c\u670d\u52a1\u4e8e\u5168\u56fd\u6d41\u79bb\u5931\u6240\u7684\u5b66\u4e60\u8005\u201d\uff0c\u5e76\u8868\u793a\u56fe\u4e66\u9986\u5c06\u4e00\u76f4\u5f00\u653e\u52306\u670830\u65e5\u6216\u7f8e\u56fd\u56fd\u5bb6\u7d27\u6025\u72b6\u6001\u7ed3\u675f\uff0c\u4ee5\u8f83\u665a\u7684\u65f6\u95f4\u4e3a\u51c6\u3002\n\u7136\u800c\uff0c\u5728\u5468\u4e09\u53d1\u5e03\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u5b83\u8868\u793a\u5c06\u4e8e\u4e0b\u5468\u5173\u95ed\u56fe\u4e66\u9986\u3002\u5b83\u8bf4\uff0c\u201c\u7edd\u5927\u591a\u6570\u201d\u4eba\u4f7f\u7528\u7535\u5b50\u4e66\u7684\u65f6\u95f4\u975e\u5e38\u77ed\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u8be5\u7ec4\u7ec7\u7684\u6b63\u5e38\u9650\u5236\u4e0b\u63d0\u4f9b\u670d\u52a1\uff0c\u5176\u4e2d\u5305\u62ec\u5c06\u7ed3\u8d26\u9650\u5236\u572814\u5929\u5185\u3002\n\u8fd9\u8d77\u8bc9\u8bbc\u4e8e6\u67081\u65e5\u63d0\u8d77\uff0c\u4e0d\u4ec5\u53cd\u5bf9\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\uff0c\u4e5f\u53cd\u5bf9\u4e92\u8054\u7f51\u6863\u6848\u9986\u957f\u671f\u4ee5\u6765\u7684\u8fd0\u8425\u65b9\u5f0f\u3002\u4f20\u7edf\u56fe\u4e66\u9986\u5411\u51fa\u7248\u5546\u652f\u4ed8\u8bb8\u53ef\u8d39\uff0c\u5e76\u540c\u610f\u9650\u5236\u4ed6\u4eec\u53ef\u4ee5\u501f\u51fa\u4e00\u672c\u7535\u5b50\u4e66\u7684\u6b21\u6570\u7684\u6761\u6b3e\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e92\u8054\u7f51\u6863\u6848\u9986\u63a5\u6536\u6350\u8d60\u6216\u8d2d\u4e70\u7684\u56fe\u4e66\uff0c\u5bf9\u5176\u8fdb\u884c\u626b\u63cf\uff0c\u5e76\u5c06\u5176\u53d1\u5e03\u5230\u7f51\u4e0a\u3002\n\u5e2e\u52a9\u534f\u8c03\u51fa\u7248\u4e1a\u5bf9\u4e92\u8054\u7f51\u6863\u6848\u9986\u7684\u56de\u5e94\u7684\u7f8e\u56fd\u51fa\u7248\u5546\u534f\u4f1a(Association Of American Publisher)\u5468\u56db\u62d2\u7edd\u7f6e\u8bc4\u3002\n\u672c\u5468\uff0c\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u5171\u548c\u515a\u53c2\u8bae\u5458\u3001\u53c2\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u77e5\u8bc6\u4ea7\u6743\u5c0f\u7ec4\u59d4\u5458\u4f1a\u4e3b\u5e2d\u6c64\u59c6\u00b7\u8482\u5229\u65af(Thom Tillis)\u7684\u529e\u516c\u5ba4\u5bf9\u4e92\u8054\u7f51\u6863\u6848\u8fdb\u884c\u4e86\u989d\u5916\u7684\u5ba1\u67e5\u3002\u5468\u4e09\uff0c\u8482\u5229\u65af\u81f4\u4fe1\u8be5\u7ec4\u7ec7\uff0c\u8d28\u7591\u8be5\u7ec4\u7ec7\u5c06\u897f\u96c5\u56fe\u6ce2\u666e\u8857\u5531\u7247\u516c\u53f8(Bop Street Records)\u768450\u4e07\u6bb5\u5f55\u97f3\u6570\u5b57\u5316\u5e76\u51fa\u7248\u7684\u8ba1\u5212\u3002\u4ed6\u7684\u529e\u516c\u5ba4\u57284\u6708\u4efd\u4e5f\u63d0\u51fa\u4e86\u5bf9\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\u7684\u62c5\u5fe7\u3002\n\u8482\u5229\u65af\u5728\u5468\u4e09\u7684\u4fe1\u4e2d\u5199\u9053\uff0c\u201c\u6211\u8ba4\u8bc6\u5230\u4fdd\u62a4\u6587\u5316\u5e76\u786e\u4fdd\u540e\u4ee3\u80fd\u591f\u63a5\u89e6\u5230\u5b83\u7684\u4ef7\u503c\u3002\u201d\u201c\u4f46\u6211\u62c5\u5fc3\u4e92\u8054\u7f51\u6863\u6848\u9986\u8ba4\u4e3a\u5b83--\u800c\u4e0d\u662f\u56fd\u4f1a--\u53ef\u4ee5\u51b3\u5b9a\u7248\u6743\u6cd5\u7684\u8303\u56f4\u3002\u201d\n\u5728Facebook\u3001Twitter\u548cInstagram\u4e0a\u5173\u6ce8\u7ebd\u7ea6\u65f6\u62a5\u56fe\u4e66\uff0c\u6ce8\u518c\u6211\u4eec\u7684\u65f6\u4e8b\u901a\u8baf\u6216\u6587\u5b66\u65e5\u5386\u3002\u8bf7\u6536\u542c\u6211\u4eec\u7684\u4e66\u8bc4\u64ad\u5ba2\u3002", "note_en": "Internet Archive is ending its program of offering free, unrestricted copies of e-books because of a  lawsuit from publishers, which said lending out books without compensation for authors or publishing houses was \u201cwillful mass copyright infringement.\u201d\n Since March, Internet Archive, a nonprofit, has made more than 1.3 million books available online without restriction, calling them a  National Emergency Library. It said the program was in place \u201cto serve the nation\u2019s displaced learners\u201d during the coronavirus pandemic, and that it would keep the library open until June 30 or the end of the U.S. national emergency, whichever came later.\n In a  blog post published on Wednesday, however, it said it would close the library next week. It said that the \u201cvast majority\u201d of people used the e-books for a very short period of time, so could be served under the organization\u2019s normal restrictions, which included limiting checkouts to 14 days.\n The lawsuit, filed June 1, does not just object to the National Emergency Library but to the way Internet Archive has long operated. Traditional libraries pay publishers licensing fees, and agree to terms that restrict how many times they can lend an e-book. Internet Archive, by contrast, takes books that have been donated or purchased, scans them and posts them online.\n The Association of American Publishers, which is helping to coordinate the publishing industry\u2019s response to Internet Archive, declined to comment on Thursday.\n Internet Archive received additional scrutiny this week from the office of Senator Thom Tillis, a North Carolina Republican and the chairman of the intellectual property subcommittee on the Senate Judiciary Committee. Mr. Tillis sent a letter to the organization Wednesday questioning its plan to digitize and publish 500,000 sound recordings from Bop Street Records, a store in Seattle. His office also raised concerns about the National Emergency Library in April.\n \u201cI recognize the value in preserving culture and ensuring that it is accessible by future generations,\u201d Mr. Tillis wrote in the letter Wednesday. \u201cBut I am concerned that the Internet Archive thinks that it \u2014 not Congress \u2014 gets to determine the scope of copyright law.\u201d\n  Follow New York Times Books on   Facebook ,   Twitter  and   Instagram , sign up for   our newsletter  or   our literary calendar . And listen to us on the   Book Review podcast .", "posttime": "2020-06-12 23:45:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u8d39,archive,\u4e92\u8054\u7f51", "title": "\u4e92\u8054\u7f51\u6863\u6848\u9986\u5373\u5c06\u7ed3\u675f\u5176\u514d\u8d39\u56fe\u4e66\u8ba1\u5212", "title_en": "The Internet Archive is ending its free books program", "transed": 1, "url": "https://www.nytimes.com/2020/06/11/books/internet-archive-national-emergency-library-coronavirus.html", "via": "", "real_tags": ["\u514d\u8d39", "archive", "\u4e92\u8054\u7f51"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006295, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u60a8\u5728\u7f51\u7ad9\u4e2d\u5bfc\u822a\u65f6\uff0c\u6b64\u7f51\u7ad9\u4f7f\u7528Cookie\u6765\u6539\u5584\u60a8\u7684\u4f53\u9a8c\u3002\u5728\u8fd9\u4e9bcookie\u4e2d\uff0c\u88ab\u5f52\u7c7b\u4e3a\u5fc5\u8981\u7684cookie\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u7f51\u7ad9\u7684\u57fa\u672c\u529f\u80fd\u7684\u5de5\u4f5c\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u8fd8\u4f7f\u7528\u7b2c\u4e09\u65b9cookie\u6765\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u548c\u4e86\u89e3\u60a8\u5982\u4f55\u4f7f\u7528\u672c\u7f51\u7ad9\u3002\u53ea\u6709\u7ecf\u8fc7\u60a8\u7684\u540c\u610f\uff0c\u8fd9\u4e9bCookie\u624d\u4f1a\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\u3002\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u9000\u51fa\u8fd9\u4e9bcookie\u3002\u4f46\u662f\u9009\u62e9\u4e0d\u4f7f\u7528\u8fd9\u4e9bcookie\u53ef\u80fd\u4f1a\u5bf9\u60a8\u7684\u6d4f\u89c8\u4f53\u9a8c\u4ea7\u751f\u5f71\u54cd\u3002", "note_en": "This website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.", "posttime": "2020-06-12 23:44:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u7535\u8111,\u63a8\u51fa,launches,cookie", "title": "Pine64\u63a8\u51fa\u6709\u53f2\u4ee5\u6765\u6700\u4fbf\u5b9c\u7684Linux\u5e73\u677f\u7535\u8111\uff0c\u552e\u4ef7\u4ec5\u4e3a99.99\u7f8e\u5143", "title_en": "Pine64 launches the cheapest Linux Tablet ever priced at just $99.99", "transed": 1, "url": "https://androidrookies.com/pine64-launches-the-cheapest-linux-tablet-ever-priced-at-just-99-99/", "via": "", "real_tags": ["linux", "\u7535\u8111", "\u63a8\u51fa", "launches", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006294, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u5806\u6808\u6ea2\u51fa\u79ef\u7d2f\u4e86\u5927\u91cf\u7684\u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u3002\u7136\u800c\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7b54\u6848\u4e2d\u7684\u67d0\u4e9b\u77e5\u8bc6\u53ef\u80fd\u4f1a\u8fc7\u65f6\u3002\u5982\u679c\u6ca1\u6709\u6e05\u695a\u5730\u6807\u8bc6\u6216\u8bb0\u5f55\u8fd9\u4e9b\u8fc7\u65f6\u7684\u7b54\u6848\uff0c\u5219\u53ef\u80fd\u4f1a\u8bef\u5bfc\u7b54\u6848\u5bfb\u6c42\u8005\u5e76\u5bfc\u81f4\u610f\u5916\u95ee\u9898(\u4f8b\u5982\uff0c\u4f7f\u7528\u8fc7\u65f6\u7684\u5b89\u5168\u534f\u8bae)\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u8c03\u67e5\u4e86\u7b54\u6848\u4e2d\u7684\u77e5\u8bc6\u662f\u5982\u4f55\u53d8\u5f97\u8fc7\u65f6\u7684\uff0c\u5e76\u8bc6\u522b\u4e86\u8fd9\u79cd\u8fc7\u65f6\u7b54\u6848\u7684\u7279\u5f81\u3002\u6211\u4eec\u53d1\u73b0\uff1a1)\u8d85\u8fc7\u4e00\u534a\u7684\u8fc7\u65f6\u7b54\u6848(58.4%)\u53ef\u80fd\u5728\u7b2c\u4e00\u6b21\u53d1\u5e03\u65f6\u5c31\u5df2\u7ecf\u8fc7\u65f6\u4e86\u30022)\u5f53\u89c2\u5bdf\u5230\u8fc7\u65f6\u7684\u7b54\u6848\u65f6\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206(20.5%)\u7684\u7b54\u6848\u88ab\u66f4\u65b0\u30023)\u67d0\u4e9b\u6807\u7b7e(\u5982node.js\u3001ajax\u3001android\u3001Objective-c)\u4e2d\u7684\u95ee\u9898\u7b54\u6848\u66f4\u5bb9\u6613\u8fc7\u65f6\u3002\u6211\u4eec\u7684\u53d1\u73b0\u8868\u660e\uff0c\u5806\u6808\u6ea2\u51fa\u5e94\u8be5\u5efa\u7acb\u673a\u5236\u6765\u9f13\u52b1\u6574\u4e2a\u793e\u533a\u4fdd\u7559\u7b54\u6848(\u4ee5\u907f\u514d\u8fc7\u65f6\u7684\u7b54\u6848)\uff0c\u5e76\u9f13\u52b1\u5bfb\u6c42\u7b54\u6848\u7684\u4eba\u4ed4\u7ec6\u9605\u8bfb\u7b54\u6848\u5e16\u5b50\u4e2d\u7684\u6240\u6709\u4fe1\u606f(\u4f8b\u5982\uff0c\u8bc4\u8bba)\u3002", "note_en": "Download PDF  Abstract: Stack Overflow accumulates an enormous amount of software engineeringknowledge. However, as time passes, certain knowledge in answers may becomeobsolete. Such obsolete answers, if not identified or documented clearly, maymislead answer seekers and cause unexpected problems (e.g., using an out-datedsecurity protocol). In this paper, we investigate how the knowledge in answersbecomes obsolete and identify the characteristics of such obsolete answers. Wefind that: 1) More than half of the obsolete answers (58.4%) were probablyalready obsolete when they were first posted. 2) When an obsolete answer isobserved, only a small proportion (20.5%) of such answers are ever updated. 3)Answers to questions in certain tags (e.g., node.js, ajax, android, andobjective-c) are more likely to become obsolete. Our findings suggest thatStack Overflow should develop mechanisms to encourage the whole community tomaintain answers (to avoid obsolete answers) and answer seekers are encouragedto carefully go through all information (e.g., comments) in answer threads.", "posttime": "2020-06-12 23:43:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6ea2\u51fa,study,\u7b54\u6848", "title": "\u5173\u4e8e\u5806\u6808\u6ea2\u51fa\u7684\u8fc7\u65f6\u7b54\u6848\u7684\u5b9e\u8bc1\u7814\u7a76[pdf]", "title_en": "An empirical study of obsolete answers on Stack Overflow [pdf]", "transed": 1, "url": "https://arxiv.org/abs/1903.12282", "via": "", "real_tags": ["\u6ea2\u51fa", "study", "\u7b54\u6848"]}, {"category": "", "categoryclass": "", "imagename": "e634e95f1e912d5f08613c60290f6d19.jpg", "infoid": 1006293, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4f4d\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u6570\u767e\u4e07\u8def\u7531\u5668\u3001\u6253\u5370\u673a\u548c\u5176\u4ed6\u8bbe\u5907\u53ef\u80fd\u4f1a\u88ab\u5229\u7528\u901a\u7528\u5373\u63d2\u5373\u7528\u7f51\u7edc\u534f\u8bae\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\u7684\u65b0\u653b\u51fb\u8fdc\u7a0b\u5f81\u7528\u3002\n\u6b64\u6f0f\u6d1e\u653b\u51fb\u540d\u4e3aCallStranger\uff0c\u5728\u5f3a\u5236\u5927\u91cf\u8bbe\u5907\u53c2\u4e0e\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(\u6216DDoS)\u653b\u51fb\u65f6\u6700\u6709\u7528\uff0c\u8fd9\u4e9b\u653b\u51fb\u4f1a\u7528\u5783\u573e\u901a\u4fe1\u91cf\u4f7f\u7b2c\u4e09\u65b9\u76ee\u6807\u4e0d\u582a\u91cd\u8d1f\u3002CallStranger\u8fd8\u53ef\u4ee5\u7528\u6765\u6e17\u900f\u7f51\u7edc\u5185\u90e8\u7684\u6570\u636e\uff0c\u5373\u4f7f\u5b83\u4eec\u53d7\u5230\u65e8\u5728\u9632\u6b62\u6b64\u7c7b\u653b\u51fb\u7684\u6570\u636e\u4e22\u5931\u9884\u9632\u5de5\u5177\u7684\u4fdd\u62a4\u3002\u8be5\u6f0f\u6d1e\u8fd8\u5141\u8bb8\u653b\u51fb\u8005\u626b\u63cf\u5185\u90e8\u7aef\u53e3\uff0c\u5426\u5219\u8fd9\u4e9b\u7aef\u53e3\u5c06\u4e0d\u53ef\u89c1\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u66b4\u9732\u5728\u4e92\u8054\u7f51\u4e2d\u3002\n\u6570\u4ee5\u4ebf\u8ba1\u7684\u8def\u7531\u5668\u548c\u5176\u4ed6\u6240\u8c13\u7684\u7269\u8054\u7f51\u8bbe\u5907\u5bb9\u6613\u53d7\u5230CallStranger\u7684\u653b\u51fb\uff0c\u53d1\u73b0\u4e86\u8be5\u6f0f\u6d1e\u5e76\u7f16\u5199\u4e86\u5229\u7528\u8be5\u6f0f\u6d1e\u7684\u6982\u5ff5\u9a8c\u8bc1\u653b\u51fb\u4ee3\u7801\u7684\u571f\u8033\u5176\u7814\u7a76\u4eba\u5458\u5c24\u52aa\u65af\u00b7\u5723\u52a0\u5fb7\u00b7\u827e\u54c8\u8fc8\u5fb7\u00b7RC\u00b7\u827e\u54c8\u8fc8\u5fb7(\u5c24\u52aa\u65af\u00b7\u5723\u52a0\u5fb7\u0131RC\u0131)\u5728\u5468\u672b\u5199\u9053\u3002\u7136\u800c\uff0c\u8981\u4f7f\u5229\u7528\u6f0f\u6d1e\u771f\u6b63\u8d77\u4f5c\u7528\uff0c\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\u5fc5\u987b\u5c06UPnP(\u5373\u4f17\u6240\u5468\u77e5\u7684\u534f\u8bae)\u66b4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\u3002\u8fd9\u4e00\u9650\u5236\u610f\u5473\u7740\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u6613\u53d7\u653b\u51fb\u7684\u8bbe\u5907\u5b9e\u9645\u4e0a\u662f\u53ef\u5229\u7528\u7684\u3002\n\u5df2\u670912\u5e74\u5386\u53f2\u7684UPnP\u534f\u8bae\u5141\u8bb8\u8bbe\u5907\u901a\u8fc7\u7f51\u7edc\u81ea\u52a8\u627e\u5230\u5f7c\u6b64\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u8fde\u63a5\u8bbe\u5907\u7684\u4efb\u52a1\u3002\u5b83\u901a\u8fc7\u4f7f\u7528HTTP\u3001SOAP\u548cXML\u534f\u8bae\u6765\u901a\u544a\u81ea\u8eab\u5e76\u901a\u8fc7\u4f7f\u7528Internet\u534f\u8bae\u7684\u7f51\u7edc\u53d1\u73b0\u5176\u4ed6\u8bbe\u5907\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u867d\u7136\u81ea\u52a8\u5316\u53ef\u4ee5\u6d88\u9664\u624b\u52a8\u6253\u5f00\u4e0d\u540c\u8bbe\u5907\u7528\u4e8e\u901a\u4fe1\u7684\u7279\u5b9a\u7f51\u7edc\u7aef\u53e3\u7684\u9ebb\u70e6\uff0c\u4f46\u591a\u5e74\u6765\uff0cUPnP\u4f7f\u7528\u6237\u9762\u4e34\u5404\u79cd\u653b\u51fb\u30022013\u5e74\uff0c\u4e00\u9879\u5168\u4e92\u8054\u7f51\u626b\u63cf\u53d1\u73b0\uff0cUPnP\u4f7f\u672c\u5730\u7f51\u7edc\u4ee5\u5916\u7684\u4eba\u53ef\u4ee5\u770b\u52308100\u591a\u4e07\u53f0\u8bbe\u5907\u3002\u8fd9\u4e00\u53d1\u73b0\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u8be5\u534f\u8bae\u4e0d\u5e94\u8be5\u4e0e\u5916\u90e8\u8bbe\u5907\u901a\u4fe1\u3002\u66b4\u9732\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u51e0\u4e2a\u516c\u5171\u4ee3\u7801\u5e93\u7684\u7ed3\u679c\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5e93\u76d1\u63a7\u6240\u6709\u63a5\u53e3\u7684\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\u6570\u636e\u5305\uff0c\u5373\u4f7f\u914d\u7f6e\u4e3a\u53ea\u4fa6\u542c\u5185\u90e8\u63a5\u53e3\u4e5f\u662f\u5982\u6b64\u3002\n2018\u5e7411\u6708\uff0c\u7814\u7a76\u4eba\u5458\u68c0\u6d4b\u5230\u4e24\u8d77\u9488\u5bf9\u4f7f\u7528UPnP\u7684\u8bbe\u5907\u7684\u91ce\u5916\u653b\u51fb\u3002\u5176\u4e2d\u4e00\u4e2a\u4eba\u5728Broadcom\u82af\u7247\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2a\u6709\u7f3a\u9677\u7684UPnP\u5b9e\u73b0\uff0c\u5c0610\u4e07\u53f0\u8def\u7531\u5668\u6574\u5408\u5230\u50f5\u5c38\u7f51\u7edc\u4e2d\u3002\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bf9\u62974.5\u4e07\u53f0\u8def\u7531\u5668\uff0c\u5229\u7528\u4e0d\u540cUPnP\u5b9e\u73b0\u4e2d\u7684\u7f3a\u9677\u6253\u5f00\u7aef\u53e3\uff0c\u8fd9\u4e9b\u7aef\u53e3\u6709\u52a9\u4e8e\u4f20\u64adEternalRed\u548cEternalBlue\uff0c\u8fd9\u662f\u7531NSA\u5f00\u53d1\u5e76\u540e\u6765\u4eceNSA\u7a83\u53d6\u7684\u5f3a\u5927Windows\u653b\u51fb\u3002\nCallStranger\u5141\u8bb8\u8fdc\u7a0b\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u4e0e\u5e94\u8be5\u53ea\u80fd\u5728\u672c\u5730\u7f51\u7edc\u5185\u8bbf\u95ee\u7684\u8bbe\u5907\u8fdb\u884c\u4ea4\u4e92\u3002\u5229\u7528\u6f0f\u6d1e\u653b\u51fb\u7684\u4e00\u4e2a\u7528\u9014\u662f\u5c06\u5927\u91cf\u5783\u573e\u901a\u4fe1\u91cf\u5b9a\u5411\u5230\u653b\u51fb\u8005\u9009\u62e9\u7684\u76ee\u7684\u5730\u3002\u56e0\u4e3a\u53d1\u9001\u5230\u653b\u51fb\u8005\u6307\u5b9a\u7684\u76ee\u7684\u5730\u7684\u8f93\u51fa\u6bd4\u653b\u51fb\u8005\u53d1\u8d77\u7684\u8bf7\u6c42\u5927\u5f97\u591a\uff0c\u6240\u4ee5CallStranger\u63d0\u4f9b\u4e86\u4e00\u79cd\u7279\u522b\u5f3a\u5927\u7684\u65b9\u6cd5\u6765\u653e\u5927\u653b\u51fb\u8005\u7684\u8d44\u6e90\u3002\u5176\u4ed6\u529f\u80fd\u5305\u62ec\u679a\u4e3e\u672c\u5730\u7f51\u7edc\u4e0a\u7684\u6240\u6709\u5176\u4ed6UPnP\u8bbe\u5907\u548c\u6e17\u6f0f\u5b58\u50a8\u5728\u7f51\u7edc\u4e0a\u7684\u6570\u636e\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u5b83\u53d7\u5230\u6570\u636e\u4e22\u5931\u9884\u9632\u5de5\u5177\u7684\u4fdd\u62a4\u3002\n\u8be5\u6f0f\u6d1e\u88ab\u8ddf\u8e2a\u4e3acve-2020-12695\uff0c\u8fd9\u91cc\u548c\u8fd9\u91cc\u90fd\u6709\u76f8\u5173\u5efa\u8bae\u3002\u0131RC\u0131\u5728\u6b64\u53d1\u5e03\u4e86\u4e00\u4e2aPoC\u811a\u672c\uff0c\u8be5\u811a\u672c\u6f14\u793a\u4e86CallStranger\u7684\u529f\u80fd\u3002\n\u8fd9\u4e00\u653b\u51fb\u662f\u901a\u8fc7\u6ee5\u7528UPnP\u8ba2\u9605\u529f\u80fd\u6765\u5b9e\u73b0\u7684\uff0c\u8bbe\u5907\u4f7f\u7528\u8be5\u529f\u80fd\u5728\u7279\u5b9a\u4e8b\u4ef6(\u5982\u64ad\u653e\u89c6\u9891\u6216\u97f3\u4e50)\u53d1\u751f\u65f6\u63a5\u6536\u6765\u81ea\u5176\u4ed6\u8bbe\u5907\u7684\u901a\u77e5\u3002\u5177\u4f53\u5730\u8bf4\uff0cCallStranger\u53d1\u9001\u7684\u8ba2\u9605\u8bf7\u6c42\u4f2a\u9020\u4e86\u63a5\u6536\u7ed3\u679c\u201c\u56de\u8c03\u201d\u7684URL\u3002\n\u4e3a\u4e86\u6267\u884cDDoS\uff0cCallStranger\u4f1a\u53d1\u9001\u4e00\u7cfb\u5217\u4f2a\u9020Internet\u4e0a\u7b2c\u4e09\u65b9\u7ad9\u70b9\u5730\u5740\u7684\u8ba2\u9605\u8bf7\u6c42\u3002\u5f53\u653b\u51fb\u4e0e\u5176\u4ed6\u8bbe\u5907\u4e00\u81f4\u6267\u884c\u65f6\uff0c\u5197\u957f\u7684\u56de\u8c03\u4f1a\u7528\u5927\u91cf\u5783\u573e\u6d41\u91cf\u8f70\u70b8\u7f51\u7ad9\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a5\u6536\u56de\u8c03\u7684URL\u6307\u5411\u5185\u90e8\u7f51\u7edc\u5185\u7684\u8bbe\u5907\u3002\u54cd\u5e94\u53ef\u80fd\u4f1a\u9020\u6210\u7c7b\u4f3c\u4e8e\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020\u7684\u60c5\u51b5\uff0c\u8fd9\u4f7f\u5f97\u653b\u51fb\u8005\u80fd\u591f\u653b\u51fb\u7f51\u7edc\u9632\u706b\u5899\u540e\u9762\u7684\u5185\u90e8\u8bbe\u5907\u3002\nSCAAD\u0131RC\u0131\u5411\u7ef4\u62a4UPnP\u534f\u8bae\u7684\u5f00\u653e\u8fde\u63a5\u57fa\u91d1\u4f1a\u62a5\u544a\u4e86\u4ed6\u7684\u53d1\u73b0\uff0c\u8be5\u57fa\u91d1\u4f1a\u5df2\u7ecf\u66f4\u65b0\u4e86\u5e95\u5c42\u89c4\u8303\u4ee5\u4fee\u590d\u8be5\u7f3a\u9677\u3002\u7528\u6237\u53ef\u4ee5\u4e0e\u5f00\u53d1\u4eba\u5458\u548c\u5236\u9020\u5546\u8054\u7cfb\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u6216\u4f55\u65f6\u4f1a\u6709\u8865\u4e01\u53ef\u7528\u3002\u76f8\u5f53\u5927\u6bd4\u4f8b\u7684\u7269\u8054\u7f51\u8bbe\u5907\u4ece\u672a\u6536\u5230\u5236\u9020\u5546\u7684\u66f4\u65b0\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u6f0f\u6d1e\u5c06\u5728\u672a\u6765\u4e00\u6bb5\u65f6\u95f4\u5185\u5b58\u5728\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6700\u597d\u7684\u9632\u5fa1\u63aa\u65bd\u662f\u5b8c\u5168\u7981\u7528UPnP\u3002\u5927\u591a\u6570\u8def\u7531\u5668\u901a\u8fc7\u53d6\u6d88\u9009\u4e2d\u8bbe\u7f6e\u83dc\u5355\u4e2d\u7684\u590d\u9009\u6846\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u5bf9\u4e8e\u90a3\u4e9b\u575a\u6301\u6253\u5f00UPnP\u7684\u4eba\uff0c\u53ef\u4ee5\u4f7f\u7528\u50cf\u8fd9\u6837\u7684\u7ad9\u70b9\u6765\u786e\u4fdd\u8def\u7531\u5668\u4e0d\u4f1a\u66b4\u9732\u654f\u611f\u7aef\u53e3\u3002\u6709\u7ecf\u9a8c\u548c\u80fd\u529b\u7684UPnP\u7528\u6237\u4e5f\u53ef\u4ee5\u5b9a\u671f\u68c0\u67e5\u65e5\u5fd7\u6765\u68c0\u6d4b\u6f0f\u6d1e\u3002", "note_en": "Millions of routers, printers, and other devices can be remotely commandeered by a new attack that exploits a security flaw in the Universal Plug and Play network protocol, a researcher said.\n CallStranger, as the exploit has been named, is most useful for forcing large numbers of devices to participate in distributed denial of service\u2014or DDoS\u2014attacks that overwhelm third-party targets with junk traffic. CallStranger can also be used to exfiltrate data inside networks even when they\u2019re protected by data loss prevention tools that are designed to prevent such attacks. The exploit also allows attackers to scan internal ports that would otherwise be invisible because they\u2019re not exposed to the Internet.\n Billions of routers and other so-called Internet-of-things devices are susceptible to CallStranger, Yunus \u00c7ad\u0131rc\u0131, a Turkish researcher who discovered the vulnerability and wrote the proof-of-concept attack code that exploits it,  wrote over the weekend. For the exploit to actually work, however, a vulnerable device must have UPnP, as the protocol is known, exposed on the Internet. That constraint means only a fraction of vulnerable devices are actually exploitable.\n  The  12-year-old UPnP protocol simplifies the task of connecting devices by allowing them to automatically find each other over a network. It does this by using the HTTP, SOAP, and XML protocols to advertise themselves and discover other devices over networks that use the Internet Protocol.\n While the automation can remove the hassle of manually opening specific network ports that different devices use to communicate, UPnP over the years has opened users to a variety of attacks. In 2013, an Internet-wide scan found that UPnP was  making more than 81 million devices visible to people outside the local networks. The finding was a surprise because the protocol isn&#39;t supposed to communicate with outside devices. The exposure was largely the result of several common code libraries that monitored all interfaces for  User Datagram Protocol packets even if configured to listen only on internal ones.\n In November 2018, researchers detected two in-the-wild attacks that targeted devices using UPnP. One used a buggy UPnP implementation in Broadcom chips to  wrangle 100,000 routers into a botnet. The other,  used against 45,000 routers, exploited flaws in a different UPnP implementation to open ports that were instrumental in spreading EternalRed and EternalBlue, the potent Windows attack that was  developed by and later stolen from the NSA.\n  CallStranger allows a remote and unauthenticated user to interact with devices that are supposed to be accessible only inside local networks. One use for the exploit is directing large amounts of junk traffic to destinations of the attacker\u2019s choice. Because the output sent to attacker-designated destinations is much bigger than the request the attacker initiates, CallStranger provides a particularly powerful way to amplify the attacker\u2019s resources. Other capabilities include enumerating all other UPnP devices on the local network and exfiltrating data stored on the network, in some cases even if it\u2019s protected by data loss prevention tools.\n The vulnerability is tracked as CVE-2020-12695, and advisories are  here and  here. \u00c7ad\u0131rc\u0131 posted a PoC script that demonstrates the capabilities of CallStranger  here.\n The exploit works by abusing the UPnP SUBSCRIBE capability, which devices use to receive notifications from other devices when certain events\u2014such as the playing of a video or music track\u2014happen. Specifically, CallStranger sends subscription requests that forge the URL that\u2019s to receive the resulting \u201ccallback.\u201d\n To perform DDoSes, CallStranger sends a flurry of subscription requests that spoof the address of a third-party site on the Internet. When the attack is performed in unison with other devices, the lengthy callbacks bombard the site with a torrent of junk traffic. In other cases the URL receiving the callback points to a device inside the internal network. The responses can create a condition similar to a  server-side request forgery, which allows attackers to hack internal devices that are behind network firewalls.\n   \u00c7ad\u0131rc\u0131 reported his findings to the Open Connectivity Foundation, which maintains the UPnP protocol, and the foundation has  updated the underlying specification to fix the flaw. Users can check with developers and manufacturers to find out if or when a patch will be available. A significant percentage of IoT devices never receive updates from manufacturers, which means the vulnerability will live on for some time to come.\n As always, the best defense is to disable UPnP altogether. Most routers allow this by unchecking a box in the settings menu. For those who insist on keeping UPnP turned on, use a site such as  this one to make sure the router isn&#39;t exposing sensitive ports. UPnP users with the experience and capability can also periodically check logs to detect exploits.", "posttime": "2020-06-12 23:43:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f0f\u6d1e,flaw,\u8bbe\u5907", "title": "UPnP\u6f0f\u6d1e\u4f7f\u6570\u767e\u4e07\u7f51\u7edc\u8bbe\u5907\u9762\u4e34\u4e92\u8054\u7f51\u653b\u51fb", "title_en": "UPnP flaw exposes millions of network devices to attacks over the Internet", "transed": 1, "url": "https://arstechnica.com/information-technology/2020/06/upnp-flaw-exposes-millions-of-network-devices-to-attacks-over-the-internet/", "via": "", "real_tags": ["\u6f0f\u6d1e", "flaw", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "55b90951fc524717e669151ca7c34584.png", "infoid": 1006292, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u56db\u5e74\u4e2d\uff0c\u4e00\u5bb6\u610f\u5927\u5229\u516c\u53f8\u7ecf\u8425\u7740\u4e00\u5bb6\u770b\u4f3c\u5408\u6cd5\u7684\u7f51\u7ad9\u548c\u4e1a\u52a1\uff0c\u63d0\u51fa\u4e3aWindows\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u9488\u5bf9\u53cd\u5411\u5de5\u7a0b\u7684\u4e8c\u8fdb\u5236\u4fdd\u62a4\uff0c\u4f46\u5374\u79d8\u5bc6\u505a\u5e7f\u544a\uff0c\u5e76\u5411\u6076\u610f\u8f6f\u4ef6\u56e2\u4f19\u63d0\u4f9b\u670d\u52a1\u3002\n\u5728Check Point\u7684\u5b89\u5168\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u5173\u6ce8GuLoader[1\uff0c2\uff0c3]\u540e\uff0c\u8be5\u516c\u53f8\u7684\u79d8\u5bc6\u4e1a\u52a1\u88ab\u66dd\u5149\u3002GuLoader[1\uff0c2\uff0c3]\u662f\u4e00\u79cd\u65b0\u7684\u6076\u610f\u8f6f\u4ef6\u83cc\u682a\uff0c\u540e\u6765\u6210\u4e3a2020\u5e74\u6700\u6d3b\u8dc3\u7684\u6076\u610f\u8f6f\u4ef6\u64cd\u4f5c\u4e4b\u4e00\u3002\nCheck Point\u8868\u793a\uff0c\u5b83\u5728GuLoader\u4ee3\u7801\u4e2d\u53d1\u73b0\u4e86\u63d0\u53caCloudEyE Protector\u7684\u5f15\u7528\uff0cCloudEyE Protector\u662f\u4e00\u5bb6\u540d\u4e3aCloudEyE\u7684\u610f\u5927\u5229\u516c\u53f8\u63d0\u4f9b\u7684\u53cd\u9006\u5411\u5de5\u7a0b\u8f6f\u4ef6\u670d\u52a1\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u6e90\u4ee3\u7801\u4fdd\u62a4\u670d\u52a1\u662f\u5408\u6cd5\u7684\uff0c\u5e76\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u5546\u4e1a/\u5408\u6cd5\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f7f\u7528\u4e86\u6e90\u4ee3\u7801\u4fdd\u62a4\u670d\u52a1\uff0c\u4f46Check Point\u8868\u793a\uff0c\u5b83\u5c06\u8be5\u516c\u53f8\u53ca\u5176\u6240\u6709\u8005\u4e0e\u591a\u5e74\u524d\u9ed1\u5ba2\u8bba\u575b\u4e0a\u7684\u6d3b\u52a8\u8054\u7cfb\u8d77\u6765\u3002\n\u8fd9\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\u5c06securitycode.eu\u7f51\u7ad9\u4e0a\u5e7f\u544a\u7684CloudEyE\u4e8c\u8fdb\u5236\u4fdd\u62a4\u670d\u52a1\u4e0e\u63a8\u5e7f\u540d\u4e3aDarkEyE\u7684\u6076\u610f\u8f6f\u4ef6\u52a0\u5bc6\u670d\u52a1\u7684\u5e7f\u544a\u8054\u7cfb\u8d77\u6765\uff0c\u8be5\u670d\u52a1\u65e9\u57282014\u5e74\u5c31\u5728\u9ed1\u5ba2\u8bba\u575b\u4e0a\u5927\u91cf\u6295\u653e\u5e7f\u544a\u3002\n\u6b64\u5916\uff0cCheck Point\u8fd8\u5c06\u4e09\u4e2a\u7528\u4e8e\u5ba3\u4f20DarkEyE\u7684\u7528\u6237\u540d\u548c\u7535\u5b50\u90ae\u4ef6\u4e0eCloudEyE\u521b\u59cb\u4eba\u4e4b\u4e00\u7684\u771f\u5b9e\u8eab\u4efd\u8054\u7cfb\u8d77\u6765\uff0c\u663e\u793a\u5728CloudEyE\u7f51\u7ad9\u4e0a\u3002\n\u6b64\u5916\uff0cCheck Point\u8868\u793a\uff0c\u5b83\u8fd8\u8ffd\u8e2a\u4e86\u8fd9\u4e09\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u7528\u6237\u540d\uff0c\u627e\u5230\u4e86\u9ed1\u5ba2\u8bba\u575b\u4e0a\u7684\u591a\u4e2a\u5e16\u5b50\u3002\n\u8fd9\u4e9b\u5e16\u5b50\u751a\u81f3\u5728DarkEyE(CloudEyE\u7684\u524d\u8eab)\u4e4b\u524d\u5c31\u6253\u51fa\u4e86\u6076\u610f\u8f6f\u4ef6/\u4e8c\u8fdb\u5236\u52a0\u5bc6\u670d\u52a1\u7684\u5e7f\u544a\uff0c\u6700\u65e9\u53ef\u4ee5\u8ffd\u6eaf\u52302011\u5e74\uff0c\u663e\u793a\u51fa\u8be5\u7528\u6237\u5728\u7f51\u7edc\u72af\u7f6a\u548c\u6076\u610f\u8f6f\u4ef6\u793e\u533a\u4e2d\u662f\u591a\u4e48\u6839\u6df1\u8482\u56fa\u548c\u4eba\u8109\u6df1\u539a\u3002\n\u8fd9\u4e9b\u5173\u7cfb\u663e\u7136\u5e2e\u52a9\u8be5\u7ec4\u7ec7\u542f\u52a8\u4e86\u4ed6\u4eec\u7684\u5408\u6cd5\u4e1a\u52a1\u3002Check Point\u8868\u793a\uff0cCloudEyE\u56e2\u961f\u5439\u5618\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u67095000\u591a\u540d\u5ba2\u6237\u3002\nCheck Point\u8868\u793a\uff0c\u6839\u636e\u4ed6\u4eec\u6bcf\u6708100\u7f8e\u5143\u7684\u6700\u4f4e\u8d39\u7387\uff0c\u8be5\u7ec4\u7ec7\u81f3\u5c11\u4ece\u4ed6\u4eec\u7684\u670d\u52a1\u4e2d\u8d5a\u53d6\u4e8650\u4e07\u7f8e\u5143\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u5230\u4e00\u4e9b\u6708\u5ea6\u5957\u9910\u53ef\u80fd\u9ad8\u8fbe750\u7f8e\u5143/\u6708\uff0c\u800c\u4e14\u4e00\u4e9b\u5ba2\u6237\u5f88\u53ef\u80fd\u4f1a\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\u6570\u6708\uff0c\u91d1\u989d\u53ef\u80fd\u4f1a\u9ad8\u5f97\u591a\u3002\n\u6240\u6709\u7ebf\u7d22\u90fd\u8868\u660e\uff0c\u8fd9\u4e24\u5bb6CloudEyE\u8fd0\u8425\u5546\u8bd5\u56fe\u5c06\u5176\u72af\u7f6a\u64cd\u4f5c\u5408\u6cd5\u5316\uff0c\u5c06\u5176\u9690\u85cf\u5728\u4e00\u5bb6\u5e4c\u5b50\u516c\u53f8\u540e\u9762\uff0c\u4ee5\u6b64\u6765\u8bc1\u660e\u81ea\u5df1\u7684\u5229\u6da6\u662f\u5408\u7406\u7684\uff0c\u5e76\u907f\u514d\u5728\u5957\u73b0\u5de8\u989d\u5229\u6da6\u65f6\u5f15\u8d77\u5f53\u5730\u7a0e\u52a1\u673a\u5173\u7684\u6000\u7591\u3002\nCheck Point\u8868\u793a\uff0cCloudEyE\u7684\u64cd\u4f5c\u53ef\u80fd\u770b\u8d77\u6765\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\uff0cCloudEyE\u63d0\u4f9b\u7684\u670d\u52a1\u4e00\u76f4\u662f\u6570\u5343\u8d77\u653b\u51fb\u7684\u5171\u540c\u70b9\u3002\n\u4e0d\u8fc7\uff0c\u5c3d\u7ba1Check Point\u8868\u793a\uff0cDarkEyE\u548cCloudEyE\u5de5\u5177\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u6709\u4e00\u4e2a\u6076\u610f\u8f6f\u4ef6\u64cd\u4f5c\u4f3c\u4e4e\u662fCloudEye\u7684\u4e3b\u8981\u5ba2\u6237\uff0c\u90a3\u5c31\u662f\u5b83\u7684GuLoader\u3002\n\u5728\u672c\u5468\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\uff0cCheck Point\u5217\u51fa\u4e86CloudEyE\u548cGuLoader\u4e4b\u95f4\u7684\u4e0d\u540c\u8fde\u63a5\u3002\n\u6700\u660e\u663e\u7684\u662f\uff0c\u901a\u8fc7CloudEyE\u4fdd\u62a4\u5e94\u7528\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5305\u542b\u4e0e\u5728\u91ce\u5916\u53d1\u73b0\u7684GuLoader\u6076\u610f\u8f6f\u4ef6\u6837\u672c\u76f8\u4f3c\u7684\u6a21\u5f0f\u3002\u8fd9\u79cd\u8054\u7cfb\u662f\u5982\u6b64\u5f3a\u70c8\uff0c\u4ee5\u81f3\u4e8e\u4efb\u4f55\u901a\u8fc7CloudEyE\u5e94\u7528\u7a0b\u5e8f\u7684\u968f\u673a\u5e94\u7528\u7a0b\u5e8f\u51e0\u4e4e\u80af\u5b9a\u4f1a\u88ab\u68c0\u6d4b\u4e3aGuLoader\u6076\u610f\u8f6f\u4ef6\u6837\u672c\uff0c\u5c3d\u7ba1\u662f\u5408\u6cd5\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5176\u6b21\uff0cCheck Point\u8868\u793aCloudEyE\u63a5\u53e3\u5305\u542b\u4e00\u4e2a\u5360\u4f4d\u7b26(\u9ed8\u8ba4)URL\uff0c\u5b83\u7ecf\u5e38\u5728GuLoader\u793a\u4f8b\u4e2d\u627e\u5230\u8be5URL\u3002\n\u7b2c\u4e09\uff0cCloudEyE\u7684\u8bb8\u591a\u7279\u6027\u4f3c\u4e4e\u90fd\u662f\u4e13\u95e8\u4e3a\u652f\u6301GuLoader\u64cd\u4f5c\u800c\u8bbe\u8ba1\u7684\u3002\nCheck Point\u8bf4\uff0cCloudEyE\u7f51\u7ad9\u4e0a\u53d1\u5e03\u7684\u6559\u7a0b\u5c55\u793a\u4e86\u5982\u4f55\u5728Google Drive\u548cOneDrive\u7b49\u4e91\u9a71\u52a8\u5668\u4e0a\u5b58\u50a8\u6709\u6548\u8d1f\u8f7d\u3002\n\u4e91\u9a71\u52a8\u5668\u901a\u5e38\u6267\u884c\u9632\u75c5\u6bd2\u68c0\u67e5\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\u4e0d\u5141\u8bb8\u4e0a\u4f20\u6076\u610f\u8f6f\u4ef6\u3002\u7136\u800c\uff0c\u5728CloudEyE\u4e2d\u5b9e\u73b0\u7684\u6709\u6548\u8d1f\u8f7d\u52a0\u5bc6\u6709\u52a9\u4e8e\u7ed5\u8fc7\u8fd9\u4e00\u9650\u5236\u3002\n\u8fd9\u6837\u7684\u529f\u80fd\u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u6beb\u65e0\u610f\u4e49\u3002\u7136\u800c\uff0c\u907f\u514d\u4e91\u626b\u63cf\u5bf9\u4e8e\u6076\u610f\u8f6f\u4ef6\u64cd\u4f5c\u81f3\u5173\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5bf9\u4e8eGuLoader(\u5f52\u7c7b\u4e3a\u7f51\u7edc\u4e0b\u8f7d\u5668)\u8fd9\u6837\u7684\u8f6f\u4ef6\uff0c\u5b83\u4f9d\u8d56\u4e8e\u611f\u67d3\u53d7\u5bb3\u8005\u7684\u8ba1\u7b97\u673a\uff0c\u7136\u540e\u4eceGoogle Drive\u6216Microsoft OneDrive\u7b49\u670d\u52a1\u4e0b\u8f7d\u7b2c\u4e8c\u9636\u6bb5\u7684\u6709\u6548\u8d1f\u8f7d\u3002\n\u7ee7Check Point\u5468\u4e00\u53d1\u5e03\u8c34\u8d23\u62a5\u544a\u540e\uff0cCloudEyE\u5728\u5468\u4e09\u5bf9\u8c03\u67e5\u7ed3\u679c\u505a\u51fa\u4e86\u56de\u5e94\u3002\n\u8fd9\u5bb6\u610f\u5927\u5229\u516c\u53f8\u8c34\u8d23\u4e86\u8fd9\u4efd\u62a5\u544a\uff0c\u5e76\u5c06\u8be5\u5de5\u5177\u7528\u4e8e\u6076\u610f\u8f6f\u4ef6\u64cd\u4f5c\u5f52\u548e\u4e8e\u7528\u6237\u5728\u5176\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u72af\u4e0b\u7684\u6ee5\u7528\u884c\u4e3a\u3002\n\u7136\u800c\uff0c\u7f51\u7edc\u5b89\u5168\u754c\u7684\u6210\u5458\u5bf9\u8be5\u516c\u53f8\u7684\u58f0\u660e\u4e0d\u5c51\u4e00\u987e\uff0c\u79f0\u5176\u4e3a\u7cdf\u7cd5\u7684\u8c0e\u8a00\uff0c\u5e76\u547c\u5401\u610f\u5927\u5229\u5f53\u5c40\u8c03\u67e5\u8be5\u516c\u53f8\u53ca\u5176\u4e24\u540d\u521b\u59cb\u4eba\u3002\n\u6839\u636eCheck Point\u7684\u62a5\u544a\uff0c\u8fd9\u4e24\u4eba\u9762\u4e34\u7740\u88ab\u6307\u63a7\u534f\u52a9\u548c\u6559\u5506\u72af\u7f6a\u6d3b\u52a8\u548c\u6d17\u94b1\u7684\u98ce\u9669\u3002\n\u6240\u4ee5\uff0c\u5728CloudEyE(=GuLoader)\u4e0a\u4e86\u65b0\u95fb\u4e4b\u540e\uff0c\u4ed6\u4eec\u5c31\u8fd9\u4e48\u505a\u4e86\u3002\u5f88\u591a\u5351\u9119\u7684\u8c0e\u8a00..\u3002\u5e0c\u671b\u610f\u5927\u5229\u5f53\u5c40\u4e0d\u662f\u5341\u8db3\u7684\u767d\u75f4\uff0c\u4ed6\u4eec\u4f1a\u5403\u8fd9\u4e2a\u3002cc@JAMESWT_MHT pic.twitter.com/2dT9O0fqAi\u3002\n-MalwareHunterTeam(@malwrhunterteam)2020\u5e746\u670811\u65e5", "note_en": "For the past four years, an Italian company has operated a seemingly legitimate website and business, offering to provide binary protection against reverse engineering for Windows applications, but has secretly advertised and provided its service to malware gangs.\n The company&#39;s secret business came to light after security researchers from Check Point began looking at GuLoader [ 1,  2,  3], a new malware strain that rose to become one of the most active malware operations of 2020.\n  Check Point says it found references in the GuLoader code mentioning CloudEyE Protector, an anti-reverse-engineering software service provided by an Italian company named CloudEyE.\n But while source code protection services are legal and widely used, almost by all commercial/legitimate apps, Check Point said it linked this company and its owners to activity on hacking forums going back years.\n The cyber-security firm connected the CloudEyE binary protecting service advertised on the securitycode.eu website to ads promoting a malware crypting service named DarkEyE, heavily advertised on hacking forums as far back as 2014.\n   Furthermore, Check Point also linked three usernames and emails used to promote DarkEyE to the real-world identity of one of the CloudEyE founders, as displayed on the CloudEyE website.\n  In addition, Check Point says it also tracked these three email addresses and usernames to multiple posts on hacking forums.\n   The posts advertised malware/binary crypting services even before DarkEyE (CloudEyE&#39;s precursor), and went as far back as 2011, showing how entrenched and well-connected this user was in the cybercrime and malware community.\n  These connections apparently helped the group get their legitimate business off the ground. Check Point says the CloudEyE team bragged of having more than 5,000 customers on their website.\n Based on their minimum rate of $100/month, Check Point says the group earned at least $500,000 from their service. However, the sum could be much higher if we take into account that some monthly plans can go up to $750/month, and some customers most likely used the service multiple months.\n  All clues point to the fact that the two CloudEyE operators attempted to legitimize their criminal operation by hiding it behind a front company as a way to justify their profits and avoid raising the suspicions of local tax authorities when cashing out their massive profits.\n &#34;CloudEyE operations may look legal, but the service provided by CloudEyE has been a common denominator in thousands of attacks over the past year,&#34; Check Point said.\n  But while Check Point says the DarkEyE and CloudEyE tools were widely used over the past years, there is one malware operation that appears to be CloudEye&#39;s primary customer, and that&#39;s GuLoader.\n In a  report published this week, Check Point lays out the different connections between CloudEyE and GuLoader.\n The most obvious is that the code of apps passed through the CloudEyE Protect app contained similar patterns with GuLoader malware samples spotted in the wild. This connection was so strong that any random app passed through the CloudEyE app would almost certainly be detected as a GuLoader malware sample, despite being a legitimate app.\n  Second, Check Point says that the CloudEyE interface contained a placeholder (default) URL that it often found in GuLoader samples.\n  Third, many of the CloudEyE features appear to have been specifically designed to support GuLoader operations.\n &#34;Tutorials published on the CloudEyE website show how to store payloads on cloud drives such as Google Drive and OneDrive,&#34; Check Point said.\n &#34;Cloud drives usually perform anti-virus checking and technically don&#39;t allow the upload of malware. However, payload encryption implemented in CloudEyE helps to bypass this limitation.&#34;\n Such a feature makes no sense for a normal app. However, avoiding cloud scans is crucial for a malware operation, and especially for something like GuLoader -- categorized as a &#34;network downloader -- which relies on infecting a victim computer and then downloading a second-stage payload from services such as Google Drive or Microsoft OneDrive.\n  Following Check Point&#39;s damning report on Monday, CloudEyE has responded to the findings on Wednesday.\n The Italian company denounced the report and blamed the tool&#39;s use for malware operations on abuses perpetrated by its users, without its knowledge.\n However, members of the cyber-security community dismissed the company&#39;s statement as &#34;poor lies&#34; and have called on Italian authorities to investigate the company and its two founders.\n Based on Check Point&#39;s report, the two are at risk of being investigated under charges of aiding and abetting a criminal operation and money laundering.\n So, after CloudEyE (= GuLoader) got into the news, they just did this. Much poor lies... Hopefully Italian authorities aren&#39;t full idiots who will eat this. cc  @JAMESWT_MHT  pic.twitter.com/2dT9O0fqAi\n\u2014 MalwareHunterTeam (@malwrhunterteam)  June 11, 2020", "posttime": "2020-06-12 23:42:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,company,cloudeye", "title": "\u4e00\u5bb6\u610f\u5927\u5229\u516c\u53f8\u88ab\u63ed\u53d1\u4e3a\u6076\u610f\u8f6f\u4ef6\u8fd0\u8425\u7684\u5e4c\u5b50", "title_en": "Italian company exposed as a front for malware operations", "transed": 1, "url": "https://www.zdnet.com/article/italian-company-exposed-as-a-front-for-malware-operations/", "via": "", "real_tags": ["\u8f6f\u4ef6", "company", "cloudeye"]}, {"category": "", "categoryclass": "", "imagename": "383abed89318cbc0f827c7e1d47c76a0.jpg", "infoid": 1006289, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7b7e\u7f72\u201c\u72ec\u7acb\u5ba3\u8a00\u201d\u4e4b\u524d\u7684\u8fd120\u5e74\u91cc\uff0c\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u4e00\u76f4\u4f4f\u5728\u4f26\u6566\u514b\u96f7\u6587\u885736\u53f7\u7684\u4e00\u6240\u623f\u5b50\u91cc\u30021776\u5e74\uff0c\u5bcc\u5170\u514b\u6797\u79bb\u5f00\u4ed6\u5728\u82f1\u56fd\u7684\u5bb6\u56de\u5230\u7f8e\u56fd\u3002200\u591a\u5e74\u540e\uff0c\u5728\u5730\u4e0b\u5ba4\u53d1\u73b0\u4e8615\u5177\u8eab\u4f53\uff0c\u57cb\u5728\u82b1\u56ed\u4e0b\u9762\u4e00\u4e2a\u6ca1\u6709\u7a97\u6237\u7684\u79d8\u5bc6\u623f\u95f4\u91cc\u3002\n1998\u5e74\uff0c\u81ea\u7136\u8d44\u6e90\u4fdd\u62a4\u8005\u6b63\u5728\u5bf936\u53f7\u514b\u96f7\u6587\u8fdb\u884c\u4fee\u590d\uff0c\u5e0c\u671b\u5c06\u5bcc\u5170\u514b\u6797\u51fa\u6ca1\u7684\u8001\u5730\u65b9\u6539\u9020\u6210\u535a\u7269\u9986\u3002\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u00b7\u8c6a\u65af\u8bf4\uff0c\u201c\u4ece\u4e00\u4e2a\u4e00\u7c73\u5bbd\uff0c\u4e00\u7c73\u6df1\u7684\u5751\u91cc\uff0c\u627e\u5230\u4e861200\u591a\u5757\u9aa8\u5934\u201d--\u8fd9\u662f\u5341\u51e0\u5177\u8eab\u4f53\u7684\u6b8b\u7559\u7269\u3002\u5176\u4e2d\u516d\u5177\u662f\u513f\u7ae5\u3002\u6cd5\u533b\u8c03\u67e5\u663e\u793a\u8fd9\u4e9b\u9aa8\u5934\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5bcc\u5170\u514b\u6797\u65f6\u4ee3\u3002\n\u5bcc\u5170\u514b\u6797\u662f\u4e00\u4f4d\u8457\u540d\u7684\u9769\u547d\u5bb6\u548c\u6709\u6743\u52bf\u7684\u5171\u6d4e\u4f1a\u4f1a\u5458-\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u7684\u5171\u6d4e\u4f1a\u5927\u5e08-\u6240\u4ee5\u5f88\u5bb9\u6613\u8ba9\u4eba\u6000\u7591\u5bcc\u5170\u514b\u6797\u53ef\u80fd\u5728\u4ed6\u7684\u5730\u4e0b\u5ba4\u91cc\u9690\u85cf\u4e86\u4ec0\u4e48\u9ed1\u6697\u7684\u79d8\u5bc6\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e8b\u5b9e\u5e76\u4e0d\u662f\u90a3\u4e48\u9ed1\u6697\u3002\n\u201c\u6700\u5408\u7406\u7684\u89e3\u91ca\u4e0d\u662f\u5927\u5c60\u6740\uff0c\u800c\u662f\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u5e74\u8f7b\u7684\u670b\u53cb\u517c\u95e8\u5f92\u5a01\u5ec9\u00b7\u4f11\u68ee\u5f00\u529e\u7684\u4e00\u6240\u89e3\u5256\u5b66\u6821\uff0c\u201d\u82f1\u56fd\u201c\u536b\u62a5\u201d\u57282003\u5e74\u8bf4\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5728\u5bcc\u5170\u514b\u6797\u7684\u65f6\u4ee3\uff0c\u89e3\u5256\u5b66\u8bfe\u7a0b\u662f\u4e00\u9879\u9ed1\u6697\u7684\u3001\u4f26\u7406\u4e0a\u6a21\u68f1\u4e24\u53ef\u7684\u4e1a\u52a1\u3002\u7cbe\u795e\u5f17\u6d1b\u65af\uff1a\n\u89e3\u5256\u5b66\u8fd8\u5904\u4e8e\u521d\u7ea7\u9636\u6bb5\uff0c\u4f46\u5f53\u65f6\u7684\u793e\u4f1a\u548c\u4f26\u7406\u98ce\u5c1a\u5bf9\u5b83\u4e0d\u5c51\u4e00\u987e\u3002\u2026\u3002\u4ece\u6cd5\u5f8b\u4e0a\u5f88\u96be\u83b7\u5f97\u7a33\u5b9a\u7684\u4eba\u4f53\u4f9b\u5e94\uff0c\u56e0\u6b64\u4f11\u68ee\u3001\u4ea8\u7279\u548c\u8be5\u9886\u57df\u7684\u5176\u4ed6\u5148\u9a71\u4e0d\u5f97\u4e0d\u8f6c\u5411\u76d7\u5893-\u8981\u4e48\u4ed8\u94b1\u7ed9\u4e13\u4e1a\u7684\u201c\u590d\u6d3b\u4eba\u201d\u83b7\u53d6\u8eab\u4f53\uff0c\u8981\u4e48\u81ea\u5df1\u6316\u6398\u8eab\u4f53-\u4ee5\u83b7\u5f97\u6807\u672c\u3002\n\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c36\u5c81\u7684\u514b\u96f7\u6587\u662f\u4f11\u68ee\u5efa\u7acb\u81ea\u5df1\u7684\u89e3\u5256\u5b9e\u9a8c\u5ba4\u4e0d\u53ef\u6297\u62d2\u7684\u597d\u53bb\u5904\u3002\u623f\u5ba2\u662f\u4e00\u4e2a\u503c\u5f97\u4fe1\u8d56\u7684\u670b\u53cb\uff0c\u5973\u623f\u4e1c\u662f\u4ed6\u7684\u5cb3\u6bcd\uff0c\u4ed6\u7684\u4e24\u4fa7\u6709\u65b9\u4fbf\u7684\u8eab\u4f53\u6765\u6e90\u3002\u8eab\u4f53\u53ef\u4ee5\u4ece\u5893\u5730\u8d70\u79c1\u5230\u8857\u9053\u4e00\u7aef\u7684\u7801\u5934\uff0c\u4e5f\u53ef\u4ee5\u4ece\u53e6\u4e00\u7aef\u7684\u7ede\u5211\u67b6\u4e0a\u62a2\u8d70\u3002\u5f53\u4ed6\u5904\u7406\u5b8c\u8fd9\u4e9b\u8eab\u4f53\u65f6\uff0c\u4f11\u68ee\u5e72\u8106\u628a\u5269\u4e0b\u7684\u8eab\u4f53\u90fd\u57cb\u5728\u5730\u4e0b\u5ba4\u91cc\uff0c\u800c\u4e0d\u662f\u5077\u5077\u5730\u628a\u5b83\u4eec\u5e26\u5230\u5176\u4ed6\u5730\u65b9\u5904\u7406\uff0c\u5192\u7740\u88ab\u6293\u5230\u5e76\u56e0\u89e3\u5256\u548c\u76d7\u5893\u800c\u88ab\u8d77\u8bc9\u7684\u98ce\u9669\u3002\n\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u4e4b\u5bb6\u8bf4\uff0c\u5bcc\u5170\u514b\u6797\u53ef\u80fd\u77e5\u9053\u4ed6\u7684\u5927\u697c\u91cc\u6b63\u5728\u8fdb\u884c\u975e\u6cd5\u7814\u7a76\uff0c\u4f46\u4ed6\u81ea\u5df1\u662f\u5426\u53c2\u4e0e\u4e86\u8fd9\u4e00\u70b9\u662f\u503c\u5f97\u6000\u7591\u7684\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u65e0\u6cd5\u60f3\u8c61\uff0c\u4ed6\u662f\u4e00\u4e2a\u597d\u5947\u7684\u4eba\uff0c\u4ed6\u81f3\u5c11\u6ca1\u6709\u5077\u5077\u6e9c\u4e0b\u6765\u68c0\u67e5\u8fc7\u4e00\u4e24\u6b21\u8bc9\u8bbc\u8fc7\u7a0b\u3002", "note_en": "For nearly two decades leading up to the signing of the Declaration of Independence Benjamin Franklin lived in London in a house at 36 Craven Street. In 1776, Franklin left his English home to come back to America. More than 200 years later, 15 bodies were found in the basement, buried in a secret, windowless room beneath the garden.\n  In 1998, conservationists were doing repairs on 36 Craven, looking to turn Franklin\u2019s old haunt into a museum. \u201cFrom a one metre wide, one metre deep pit,\u00a0over 1200 pieces of bone were retrieved\u201d\u2014remnants of more than a dozen bodies,\u00a0\u00a0 says Benjamin Franklin House.\u00a0 Six were children. Forensic investigations showed that the bones dated to Franklin\u2019s day.\n  Franklin was a noted revolutionary and powerful freemason\u2014 the Grand Master of Masons of Pennsylvania\u2014so it\u2019s easy to wonder what dark secrets Franklin may have hidden in his basement chamber. But the truth, it turns out, isn\u2019t  quite so dark.\n  \u201cThe most plausible explanation is not mass murder, but an anatomy school run by Benjamin Franklin\u2019s young friend and protege, William Hewson,\u201d  said the  Guardian in 2003.\n  Still, in Franklin\u2019s time, anatomy lessons were a dark, ethically ambiguous business.  Mental Floss:\n  Anatomy was still in its infancy, but the day\u2019s social and ethical mores frowned upon it\u2026 A steady supply of human bodies was hard to come by legally, so Hewson, Hunter, and the field\u2019s other pioneers had to turn to grave robbing \u2014 either paying professional \u201cresurrection men\u201d to procure cadavers or digging them up themselves \u2014 to get their hands on specimens.\n Researchers think that 36 Craven was an irresistible\u00a0spot for Hewson to establish his own anatomy lab. The tenant was a trusted friend, the landlady was his mother-in-law, and he was flanked by convenient sources for corpses. Bodies could be smuggled from graveyards and delivered to the wharf at one end of the street, or snatched from the gallows at the other end. When he was done with them, Hewson simply buried whatever was left of the bodies in the basement, rather than sneak them out for disposal elsewhere and risk getting caught and prosecuted for dissection and grave robbing.\n  Franklin was probably aware of the illegal studies going on in his building,  says the Benjamin Franklin House, but it\u2019s doubtful the he was involved himself. Still, we can\u2019t imagine that, curious man that he was, he didn\u2019t sneak down and check out the proceedings at least once or twice.", "posttime": "2020-06-12 23:07:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bcc\u5170\u514b\u6797,franklin,\u8eab\u4f53", "title": "\u4e3a\u4ec0\u4e48\u672c\u6770\u660e\u00b7\u5bcc\u5170\u514b\u6797\u7684\u5730\u4e0b\u5ba4\u91cc\u6ee1\u662f\u9ab7\u9ac5\uff1f(2013)", "title_en": "Why Was Benjamin Franklin\u2019s Basement Filled with Skeletons? (2013)", "transed": 1, "url": "https://www.smithsonianmag.com/smart-news/why-was-benjamin-franklins-basement-filled-with-skeletons-524521/", "via": "", "real_tags": ["\u5bcc\u5170\u514b\u6797", "franklin", "\u8eab\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u97f3\u4e50\u4e4b\u58f0\u4f9d\u9760\u4f60\u4eec\u7684\u6350\u6b3e\u3002\u5bf9\u4e8e\u90a3\u4e9b\u66fe\u7ecf\u652f\u6301\u5e76\u7ee7\u7eed\u652f\u6301\u6211\u4eec\u56e2\u961f\u7684\u4eba\uff0c\u8981\u77e5\u9053\uff0c\u5982\u679c\u6ca1\u6709\u4f60\u4eec\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u6240\u505a\u7684\u4e00\u5207\u90fd\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u5982\u679c\u4f60\u6b63\u5728\u8003\u8651\u6350\u6b3e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u652f\u6301\u827a\u672f\u7684\u65b9\u5f0f\u3002\n\u6ce8\uff1a\u5982\u679c\u4f60\u6536\u5230\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u8fd9\u4ec5\u4ec5\u610f\u5473\u7740PayPal\u6709\u592a\u591a\u7684\u6d41\u91cf\uff0c\u53ea\u9700\u7a0d\u540e\u8fde\u63a5-\u9875\u9762\u5c06\u4e0d\u4f1a\u52a0\u8f7d\uff0c\u9664\u975e\u5b83\u662f100%\u5b89\u5168\u7684\u3002\n\u6b64\u5916\uff0c\u60a8\u7684\u6350\u6b3e\u5c06\u76f4\u63a5\u7528\u4e8e\u8d44\u52a9\u97f3\u4e50\u4f1a\u3001\u5f55\u97f3\u3001\u6559\u80b2\u9879\u76ee\u548c\u652f\u6301\u5f53\u5730\u97f3\u4e50\u5bb6\u3002\u8981\u8fdb\u884c\u5728\u7ebf\u6350\u8d60\uff0c\u8bf7\u70b9\u51fb\u4e0b\u9762\u6216\u968f\u65f6\u8054\u7cfb\u6211\u4eec\uff01\n\u4e3a\u4e86\u60a8\u7684\u65b9\u4fbf\uff0c\u6211\u4eec\u63a5\u53d7\u901a\u8fc7VISA\u3001\u4e07\u4e8b\u8fbe\u5361\u3001Maestro\u3001\u7f8e\u56fd\u8fd0\u901a\u548c\u901a\u8fc7PayPal\u53d1\u73b0\u7684\u6350\u6b3e\u3002\u5373\u4f7f\u60a8\u6ca1\u6709PayPal\u8d26\u6237\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u5b89\u5168\u5730\u5904\u7406\u60a8\u7684\u6350\u6b3e--\u6240\u6709\u4ea4\u6613\u90fd\u662f\u5b89\u5168\u548c\u52a0\u5bc6\u7684\u3002\n\u5bf9\u4e8e\u6240\u6709\u7684\u7f8e\u56fd\u5728\u7ebf\u6350\u6b3e\uff0c\u6211\u4eec\u5c06\u90ae\u5bc4\u4e00\u4efd\u60a8\u7684\u7eb3\u7a0e\u8bb0\u5f55\u7684\u786e\u8ba4\u4e66\u3002\n\u201c\u97f3\u4e50\u4e4b\u58f0\u201d\u8bda\u9080\u60a8\u4e0e\u6211\u4eec\u4e00\u8d77\u521b\u4f5c\u5168\u65b0\u7684\u3001\u521b\u65b0\u7684\u97f3\u4e50\u4f1a\u548c\u8282\u76ee\uff0c\u8ba9\u4e16\u754c\u4e0a\u4efb\u4f55\u4eba\u3001\u4efb\u4f55\u5730\u65b9\u90fd\u80fd\u770b\u5230\u3002\u643a\u624b\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u9020\u4e00\u4e2a\u5168\u65b0\u7684\u5404\u4e2a\u5e74\u9f84\u6bb5\u548c\u80cc\u666f\u7684\u89c2\u4f17\uff0c\u4ed6\u4eec\u5c06\u53d1\u73b0\u97f3\u4e50\u7684\u7ec8\u751f\u5192\u9669\u548c\u65e9\u671f\u7684\u97f3\u4e50\u8868\u6f14\u3002\u8fd9\u4e9b\u65b0\u7684\u89c2\u4f17\u5c06\u6765\u81ea\u4e16\u754c\u5404\u5730\u3002\u201c\u6211\u4eec\u9080\u8bf7\u60a8\u4f5c\u4e3a\u5baa\u7ae0\u6210\u5458\u52a0\u5165\u7f2a\u65af\u5973\u795e\u5708\u3002\u201d\u97f3\u4e50\u4e4b\u58f0\u901a\u8fc7\u4f7f\u7528\u5f00\u521b\u6027\u7684\u6280\u672f\uff0c\u6b63\u5728\u5f00\u521b\u6355\u6349\u548c\u8bb0\u5f5521\u4e16\u7eaa\u521d\u8868\u6f14\u8005\u5386\u53f2\u4e0a\u91cd\u8981\u65f6\u523b\u7684\u91cd\u8981\u5de5\u4f5c\u3002\u4f60\u7684\u793c\u7269\u5c06\u786e\u4fdd\u73b0\u5728\u548c\u672a\u6765\u8bb8\u591a\u5e74\u6bcf\u4e2a\u4eba\u90fd\u80fd\u6b23\u8d4f\u5230\u8fd9\u9996\u97f3\u4e50\u3002", "note_en": "Voices of Music relies on your donations. To those who have supported our group, and continue to support, know that what we do would not be possible without your help.\n  If you are considering a donation, this is a great way to support the arts.\n    NB: If you get an error message it just means that PayPal has too much traffic, just connect later--the page will not load unless it is 100 percent secure.\n  In addition, your donation goes directly into funding concerts, recordings, educational programs and supporting local musicians. To make an online donation, please click below or  contact us anytime!\n  For your convenience, we accept donations through VISA, MasterCard, Maestro, American Express, and Discover through PayPal. Even if you do not have a PayPal account, they will process your donation securely--all transactions are secure and encrypted.\n  For all US online donations we will mail you an acknowledgement for your tax records.\n    Voices of Music would like to invite you to join us in creating new and innovative concerts and programs that anyone, anwhere in the world can see. \u00a0Together, we can create a brand new audience of all ages and backgrounds that will discover the lifetime adventure of music and Early Music performance. This new audience will be drawn from all over the world.\u00a0 We invite you to join the Circle of the Muses as a Charter Member. \u00a0Voices of Music is pioneering, through the use of groundbreaking technology, the important work of capturing and documenting an important moment in the history of the performers of the early 21st century. \u00a0Your gift will ensure that everyone can enjoy this music both now and for many years to come.", "posttime": "2020-06-12 22:34:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u97f3\u4e50,voices,\u6350\u6b3e", "title": "\u97f3\u4e50\u4e4b\u58f0", "title_en": "Voices of Music", "transed": 1, "url": "https://voicesofmusic.org/donate.html", "via": "", "real_tags": ["\u97f3\u4e50", "voices", "\u6350\u6b3e"]}, {"category": "", "categoryclass": "", "imagename": "4cd61b2ce7827cab9bd034ddb903ae8a.jpg", "infoid": 1006287, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5173\u4e8e\u60a8\u6700\u8fd1\u7684\u5e16\u5b50\uff0c\u6211\u53ef\u80fd\u4f1a\u8fdf\u5230\u4e00\u70b9\uff0c\u4f46\u4ee5\u9632\u4e07\u4e00\uff1a\u60a8\u662f\u5426\u6709\u4efb\u4f55\u7b56\u7565\u6216\u6545\u4e8b\u6765\u5904\u7406\u60a8\u65e0\u6cd5\u6446\u8131\u7684\u8fdd\u53cd\u4e86\u90e8\u5206(\u6216\u5168\u90e8)API\u8bbe\u8ba1\u51c6\u5219\u7684\u5916\u90e8\u5e93\uff1f\u8fd9\u662f\u4e00\u4e2a\u6a21\u7cca\u7684\u95ee\u9898\uff0c\u4f46\u6211\u5b9e\u9645\u4e0a\u53ea\u662f\u5728\u95ee\u4f60\u8fc7\u53bb\u4f5c\u4e3aAPI\u7528\u6237\u7684\u4efb\u4f55\u7ecf\u5386\uff0c\u8fd9\u4e9b\u7ecf\u9a8c\u5728\u4f60\u7684\u8111\u6d77\u4e2d\u771f\u7684\u5f88\u7a81\u51fa\u3002\u201c\u3002\n\u8fd9\u63d0\u9192\u4e86\u6211\uff0c\u6211\u4e00\u76f4\u60f3\u5199\u4e0b\u4f7f\u7528\u7cdf\u7cd5API\u7684\u5fc5\u8981\u6b65\u9aa4\uff0c\u53ea\u662f\u4e3a\u4e86\u5f3a\u8c03\u5b83\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u662f\u591a\u4e48\u7cdf\u7cd5\u3002\u6211\u8ba4\u4e3a\u7f16\u5199API\u7684\u4eba\u5e76\u6ca1\u6709\u771f\u6b63\u610f\u8bc6\u5230\u8ba9\u5b83\u4eec\u6b63\u786e\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u9519\u8bef\u4f1a\u7ed9\u6210\u767e\u4e0a\u5343\u3001\u6709\u65f6\u751a\u81f3\u6570\u767e\u4e07\u7684\u5176\u4ed6\u7a0b\u5e8f\u5458\u5e26\u6765\u591a\u5c11\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u89c9\u5f97\u82b1\u4e00\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e00\u4e2aAPI\u5e76\u5c55\u793a\u4e00\u4e2aAPI\u53ef\u4ee5\u5236\u9020\u591a\u5c11\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u662f\u5f88\u91cd\u8981\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5173\u4e8e\u5b83\u81ea\u5df1\u7684\u5f88\u597d\u7684\u4e13\u680f-\u6bcf\u5468\u5256\u6790\u4e00\u4e2a\u7cdf\u7cd5\u7684API\u3002\u4f46\u662f\u7531\u4e8e\u6211\u6ca1\u6709\u65f6\u95f4\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5982\u679c\u6211\u53ea\u6253\u7b97\u5256\u6790\u4e00\u4e2aAPI\uff0c\u90a3\u4e48\u6700\u91cd\u8981\u7684\u95ee\u9898\u662f\uff0c\u6211\u5e94\u8be5\u9009\u62e9\u54ea\u4e00\u4e2aAPI\u5462\uff1f\n\u5728\u8ba1\u7b97\u53f2\u4e0a\u5199\u4e00\u7bc7\u5173\u4e8e\u7cdf\u7cd5\u7684API\u7684\u6587\u7ae0\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u65f6\u4ee3(\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u771f\u6b63\u4e3a\u4e86\u8c0b\u751f\u800c\u4e0d\u5f97\u4e0d\u7f16\u7a0b\u7684\u53ef\u6015\u65f6\u4ee3)\u3002\u5e02\u573a\u4e0a\u6709\u8fd9\u4e48\u591a\u7cdf\u7cd5\u7684API\uff0c\u6211\u53ef\u4ee5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\uff0c\u5f88\u53ef\u80fd\u4f1a\u627e\u5230\u8db3\u591f\u7684\u95ee\u9898\u6765\u586b\u6ee1\u4e00\u7bc73000\u5b57\u7684\u6587\u7ae0\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u53ea\u6253\u7b97\u5728\u4e00\u4e2aAPI\u4e2d\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c1d\u8bd5\u9009\u62e9\u6211\u5b9e\u9645\u4f7f\u7528\u8fc7\u7684\u6700\u5dee\u7684API\u4f3c\u4e4e\u662f\u552f\u4e00\u6b63\u786e\u7684\u9009\u62e9\u3002\u73b0\u5728\u6709\u5f88\u591aAPI\u901a\u5e38\u4f1a\u5728\u201c\u6700\u5deeAPI\u201d\u6392\u884c\u699c\u4e0a\u540d\u5217\u524d\u8305\u3002\u4f8b\u5982\uff0cCSS\u5728\u4efb\u4f55\u6709\u65b0\u7248\u672c\u7684\u5e74\u4efd\u90fd\u53ef\u80fd\u5360\u636e\u524d10\u540d\u4e2d\u4e00\u534a\u7684\u4f4d\u7f6e\u3002DirectShow\u867d\u7136\u4ecd\u662f\u4e00\u5bb6\u6301\u7eed\u7ecf\u8425\u7684\u516c\u53f8\uff0c\u4f46\u80af\u5b9a\u5728\u5176\u6240\u5904\u65f6\u4ee3\u7684\u6392\u540d\u4e2d\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u5728\u73b0\u4ee3\uff0c\u50cfAndroid SDK\u8fd9\u6837\u7684\u65b0\u6765\u8005\u6b63\u5728\u663e\u793a\u51fa\u771f\u6b63\u7684\u6f5c\u529b\uff0c\u5f00\u53d1\u73af\u5883\u662f\u5982\u6b64\u9519\u7efc\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u4ece\u5b9e\u9645\u7684C++\u4ee3\u7801\u8c03\u7528API\u65f6\uff0c\u5f53\u60a8\u5c1d\u8bd5\u4e0e\u5b83\u4eec\u4e00\u8d77\u53d1\u5e03\u4e1c\u897f\u65f6\uff0c\u60a8\u6700\u4e0d\u4f1a\u62c5\u5fc3\u7684\u662fAPI\u7684\u8d28\u91cf\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4ed4\u7ec6\u601d\u8003\u8c01\u662f\u6709\u53f2\u4ee5\u6765\u6700\u91cd\u8981\u7684\u7cdf\u7cd5API\u51a0\u519b\u65f6\uff0c\u6709\u4e00\u4e2a\u660e\u663e\u7684\u8d62\u5bb6\uff1aWindows\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u3002Windows\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u662f\u4e00\u4e2a\u505a\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u4e8b\u60c5\u7684API\uff1a\u5b83\u5141\u8bb8\u7cfb\u7edf\u7684\u4efb\u4f55\u7ec4\u4ef6(\u5305\u62ec\u6700\u7ec8\u7528\u6237\u8f6f\u4ef6)\u5ba3\u5e03\u201c\u4e8b\u4ef6\u201d\uff0c\u7136\u540e\u4efb\u4f55\u5176\u4ed6\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u201c\u6d88\u8d39\u201d\u3002\u5b83\u662f\u4e00\u4e2a\u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\uff0c\u7528\u4e8e\u8bb0\u5f55\u4ece\u5185\u6838\u5230\u5185\u6838\u7684\u6240\u6709\u5185\u5bb9\u7684\u6027\u80fd\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u73b0\u5728\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u6ca1\u6709\u7406\u7531\u76f4\u63a5\u4f7f\u7528Windows API\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Perfmon\u4e4b\u7c7b\u7684\u5de5\u5177\u6765\u67e5\u770b\u6709\u5173\u6e38\u620f\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u4f8b\u5982\u5b83\u4f7f\u7528\u4e86\u591a\u5c11\u5de5\u4f5c\u96c6\u6216\u5b83\u4f7f\u7528\u4e86\u591a\u5c11\u78c1\u76d8I/O\u3002\u4f46\u662f\uff0c\u76f4\u63a5\u8bbf\u95ee\u4e8b\u4ef6\u8ddf\u8e2a\u7ed9\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u60a8\u5728\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u90fd\u65e0\u6cd5\u83b7\u5f97\u7684\u7279\u5b9a\u529f\u80fd\uff1a\u4e0a\u4e0b\u6587\u5207\u6362\u8ba1\u65f6\u3002\u662f\u7684\uff0c\u5982\u679c\u60a8\u6709\u4efb\u4f55\u76f8\u5bf9\u8f83\u65b0\u7684Windows\u7248\u672c(\u59827\u62168)\uff0c\u5185\u6838\u5c06\u8bb0\u5f55\u6240\u6709\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5e76\u4e14\u4f7f\u7528\u8fd9\u4e9b\u4e8b\u4ef6\u4e2d\u5305\u542b\u7684CPU\u65f6\u95f4\u6233\uff0c\u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5c06\u5b83\u4eec\u4e0e\u60a8\u81ea\u5df1\u7684\u6e38\u620f\u5185\u6027\u80fd\u5206\u6790\u76f8\u5173\u8054\u3002\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u800c\u4e14\u901a\u5e38\u53ea\u80fd\u4ece\u63a7\u5236\u53f0\u786c\u4ef6\u83b7\u5f97\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u50cfRAD\u7684\u9065\u6d4b\u8fd9\u6837\u7684\u5de5\u5177\u53ef\u4ee5\u5411\u60a8\u663e\u793a\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u4f55\u65f6\u88ab\u4e2d\u65ad\uff0c\u5e76\u4e14\u5fc5\u987b\u7b49\u5f85\u7cfb\u7edf\u7ebf\u7a0b\u8fdb\u884c\u5de5\u4f5c\uff0c\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u5947\u602a\u7684\u6027\u80fd\u95ee\u9898\u901a\u5e38\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cAPI\u542c\u8d77\u6765\u76f8\u5f53\u4e0d\u9519\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\u662f\u975e\u5e38\u5b9d\u8d35\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u5373\u4f7fAPI\u6709\u70b9\u7b80\u964b\uff0c\u5b83\u4ecd\u7136\u662f\u76f8\u5f53\u68d2\u7684\uff0c\u5bf9\u5417\uff1f\u5bf9\u5417\uff1f\n\u5728\u6211\u4eec\u770b\u4e00\u770bWindows API\u7684\u5b9e\u9645\u4e8b\u4ef6\u8ddf\u8e2a\u4e4b\u524d\uff0c\u6211\u60f3\u5728\u8fd9\u91cc\u8d70\u4e00\u8d70\uff0c\u505a\u6211\u5728\u4e0a\u5468\u7684\u8bb2\u5ea7\u4e2d\u8bf4\u8fc7\u7684\u4e8b\u60c5\uff1a\u9996\u5148\u7f16\u5199\u7528\u6cd5\u4ee3\u7801\u3002\u65e0\u8bba\u4f55\u65f6\u8bc4\u4f30API\u6216\u521b\u5efa\u65b0\u7684API\uff0c\u60a8\u90fd\u5fc5\u987b\u59cb\u7ec8\u3001\u59cb\u7ec8\u3001\u59cb\u7ec8\u4ece\u7f16\u5199\u4e00\u4e9b\u4ee3\u7801\u5f00\u59cb\uff0c\u5c31\u597d\u50cf\u60a8\u662f\u4e00\u4e2a\u8bd5\u56fe\u505aAPI\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u7684\u7528\u6237\u4e00\u6837\u3002\u5982\u679cAPI\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u8fd9\u662f\u83b7\u5f97API\u5982\u4f55\u5de5\u4f5c\u7684\u826f\u597d\u3001\u6e05\u6670\u900f\u89c6\u56fe\u7684\u552f\u4e00\u9014\u5f84\u3002\u5982\u679c\u5b83\u662f\u201c\u795e\u5947\u7684\u201d\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8bf4\u3002\u7136\u540e\uff0c\u4e00\u65e6\u4f60\u6709\u4e86\u8fd9\u4e9b\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ee7\u7eed\u524d\u8fdb\uff0c\u5f00\u59cb\u601d\u8003\u5b9e\u9645\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u5bf9\u4f60\u6765\u8bf4\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\u6765\u5b9e\u73b0\u4e00\u4e9b\u53ef\u5b9e\u65bd\u7684\u4e1c\u897f\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u662f\u4e00\u540d\u7a0b\u5e8f\u5458\uff0c\u5bf9Windows API\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u4e00\u65e0\u6240\u77e5\uff0c\u6211\u5c06\u5982\u4f55\u83b7\u5f97\u4e0a\u4e0b\u6587\u5207\u6362\u5217\u8868\u5462\uff1f\u55ef\uff0c\u6211\u60f3\u5230\u4e86\u4e24\u79cd\u65b9\u6cd5\u3002\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u662f\u505a\u8fd9\u4ef6\u4e8b\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5f88\u7b80\u5355\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u5f88\u96be\u641e\u7838\u3002\u4f7f\u7528\u8c03\u8bd5\u5668\u7684\u4eba\u5c06\u80fd\u591f\u51c6\u786e\u5730\u770b\u5230\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u5982\u679c\u60a8\u505a\u4e86\u4ec0\u4e48\uff0c\u60a8\u5c06\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u5730\u8fa8\u522b\u51fa\u6765\n\u6211\u4e0d\u77e5\u9053\u4efb\u4f55\u4eba\u5e94\u8be5\u5982\u4f55\u771f\u6b63\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Windows API\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u3002\u4e5f\u8bb8\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u4f8b\u5b50\u56db\u5904\u6d41\u4f20\uff0c\u4f46\u6211\u4ece\u6765\u6ca1\u6709\u627e\u5230\u8fc7\u3002\u6211\u4e0d\u5f97\u4e0d\u5728\u957f\u8fbe\u6570\u5c0f\u65f6\u7684\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c\u4ece\u5404\u79cd\u6587\u6863\u7247\u6bb5\u4e2d\u63d0\u53d6\u7528\u6cd5\u4ee3\u7801\uff0c\u5c06\u5b83\u4eec\u62fc\u51d1\u5728\u4e00\u8d77\u3002\u6bcf\u6b21\u6211\u60f3\u51fa\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u53e6\u4e00\u4e2a\u6b65\u9aa4\u65f6\uff0c\u6211\u90fd\u4f1a\u60f3\uff0c\u201c\u7b49\u7b49\uff0c\u771f\u7684\u5417\uff1f\u201d\u800c\u6bcf\u4e00\u6b21\u5fae\u8f6f\u90fd\u542b\u84c4\u5730\u56de\u7b54\u8bf4\uff0c\u201c\u771f\u7684\u3002\u201d\u8ba9\u6211\u544a\u8bc9\u60a8\u5982\u4f55\u8c03\u7528API\u786e\u5b9e\u4f1a\u8ba9\u60a8\u5bf9\u4f53\u9a8c\u7684\u656c\u754f\u6709\u6240\u51cf\u5f31\uff0c\u6240\u4ee5\u6211\u4f1a\u8bf4\uff0c\u5982\u679c\u60a8\u60f3\u8981\u5b8c\u6574\u7684\u4f53\u9a8c\uff0c\u73b0\u5728\u5c31\u505c\u6b62\u9605\u8bfb\uff0c\u5e76\u5c1d\u8bd5\u81ea\u5df1\u83b7\u53d6\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\u6233\u3002\u6211\u53ef\u4ee5\u5411\u4f60\u4fdd\u8bc1\uff0c\u8fd9\u5c06\u662f\u51e0\u4e2a\u5c0f\u65f6\u7684\u4e50\u8da3\u548c\u5174\u594b\u3002\u90a3\u4e9b\u5b81\u613f\u4ee5\u4e00\u5929\u7684\u9762\u90e8\u62a4\u7406\u65f6\u523b\u4e3a\u4ee3\u4ef7\u6765\u8282\u7701\u65f6\u95f4\u7684\u4eba\uff0c\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u770b\u3002\u597d\u7684\uff0c\u6211\u4eec\u5f00\u59cb\u5427\u3002\u4e0e\u6211\u5efa\u8bae\u7684ETWBeginTrace()\u7b49\u6548\u7684\u662fMicrosoft\u7684StartTrace()\u8c03\u7528\u3002\u4e4d\u4e00\u770b\uff0c\u5b83\u4f3c\u4e4e\u8db3\u591f\u65e0\u8f9c\uff1a\n\u4f46\u662f\uff0c\u5f53\u60a8\u67e5\u770b\u9700\u8981\u4e3aProperties\u53c2\u6570\u4f20\u5165\u7684\u5185\u5bb9\u65f6\uff0c\u4e8b\u60c5\u5f00\u59cb\u53d8\u5f97\u6709\u70b9\u9ebb\u70e6\u4e86\u3002Windows\u5b9a\u4e49\u4e86EVENT_TRACE_PROPERTIES\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7c97\u7565\u5730\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6570\u636e\u5c31\u4f1a\u53d1\u73b0\u4e00\u70b9\u5947\u602a\u7684\u5730\u65b9\uff1a\u4e3a\u4ec0\u4e48\u4f1a\u6709\u50cf\u201cEventsLost\u201d\u548c\u201cBuffersWritten\u201d\u8fd9\u6837\u7684\u6210\u5458\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\uff0cMicrosoft\u6ca1\u6709\u4e3a\u60a8\u53ef\u80fd\u5bf9\u8ddf\u8e2a\u6267\u884c\u7684\u4e0d\u540c\u64cd\u4f5c\u521b\u5efa\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u800c\u662f\u5c06API\u51fd\u6570\u5206\u7ec4\u5230\u51e0\u4e2a\u7ec4\u4e2d\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ec4\u4e2d\u7684\u6240\u6709\u51fd\u6570\u5171\u4eab\u5176\u53c2\u6570\u7684\u4e00\u4e2a\u5408\u5e76\u7ed3\u6784\u3002\u56e0\u6b64\uff0c\u7528\u6237\u5fc5\u987b\u5b8c\u5168\u4f9d\u8d56\u4e8e\u6bcf\u4e2aAPI\u7684MSDN\u6587\u6863\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u67e5\u770b\u51fd\u6570\u7684\u53c2\u6570\u6765\u6e05\u695a\u5730\u4e86\u89e3\u51fd\u6570\u7684\u5185\u5bb9\uff0c\u5e76\u5e0c\u671b\u5b83\u6b63\u786e\u5730\u679a\u4e3e\u6bcf\u4e2a\u8c03\u7528\u4f7f\u7528\u7684\u5de8\u578b\u53c2\u6570\u7ed3\u6784\u7684\u54ea\u4e9b\u6210\u5458\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6210\u5458\u662f\u8fdb\u5165\u51fd\u6570\u8fd8\u662f\u9000\u51fa\u51fd\u6570\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u5b83\u6709\u5f88\u591a\u4e0d\u540c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u800c\u4e14\u8003\u8651\u5230\u672a\u6765API\u4e5f\u53ef\u80fd\u4f7f\u7528\u5b83\uff0c\u5fae\u8f6f\u8981\u6c42\u60a8\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\u5c06\u8fd9\u4e2a\u5de8\u5927\u7684\u91ce\u517d\u6e05\u9664\u4e3a\u96f6\uff1a\n\u5bf9\u4e8eStartTrace()\uff0c\u5982\u679c\u6211\u4eec\u53ea\u60f3\u76f4\u63a5\u53d6\u56de\u6570\u636e\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u8bb0\u5f55\u5230\u6587\u4ef6\u4e2d\uff0c\u5219\u9700\u8981\u586b\u5199\u4e00\u4e9b\u6210\u5458\u3002\u8fd9\u4e24\u70b9\u6709\u4e00\u5b9a\u7684\u9053\u7406\uff1a\nEnableFlags\u8bf4\u660e\u4e86\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\u6211\u4eec\u60f3\u8981\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u8bbe\u7f6e\u4e86\u8be5\u6807\u5fd7\u3002\u73b0\u5728\uff0c\u5f53\u4f60\u6709\u8d85\u8fc732\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u6765\u81ea\u4e00\u5bb6\u4f9b\u5e94\u5546\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u6211\u4e0d\u77e5\u9053\uff0c\u4f46\u6211\u731c\u4ed6\u4eec\u5e76\u4e0d\u7279\u522b\u5173\u5fc3\u8fd9\u79cd\u53ef\u80fd\u6027\u3002\u662f\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5728\u6211\u7684\u63d0\u6848\u4e2d\u4f7f\u7528\u679a\u4e3e\u548c\u51fd\u6570\u8c03\u7528\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u652f\u630140\u4ebf\u4e2a\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f46\u662f\uff0c\u563f\uff0c\u201c32\u4e2a\u4e8b\u4ef6\u7c7b\u578b\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u5e94\u8be5\u8db3\u591f\u4e86\u201d\uff0c\u6240\u4ee5Microsoft\u4f7f\u7528\u4e8632\u4f4d\u6807\u5fd7\u5b57\u6bb5\u3002\u8fd9\u4e0d\u662f\u4ec0\u4e48\u5927\u4e8b\uff0c\u4f46\u8fd9\u7edd\u5bf9\u662f\u4e00\u79cd\u77ed\u671f\u601d\u7ef4\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u51fd\u6570\uff0c\u5728\u5b83\u4eec\u7684\u540d\u79f0\u540e\u9762\u9644\u52a0\u201cEx\u201d\u3002LogFileMode\u53ea\u8bf4\u660e\u6211\u4eec\u662f\u5426\u5e0c\u671b\u76f4\u63a5\u83b7\u53d6\u4e8b\u4ef6\uff0c\u6216\u8005\u662f\u5426\u53ea\u5e0c\u671b\u5185\u6838\u5c06\u5b83\u4eec\u5199\u5165\u78c1\u76d8\u3002\u56e0\u4e3a\u5b83\u4eec\u662f\u5982\u6b64\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u6211\u4f1a\u628a\u8fd9\u4e24\u4ef6\u4e8b\u5206\u89e3\u6210\u4e0d\u540c\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4f46\u662f\uff0c\u563f\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7ed3\u6784\u6765\u5904\u7406\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u8fd8\u4e0d\u5982\u628a\u5b83\u4eec\u90fd\u6254\u8fdb\u53bb\u3002\u8fd9\u4e2a\u9886\u57df\u7684\u60c5\u51b5\u53d8\u5f97\u6709\u70b9\u5947\u602a\u4e86\uff1a\n\u6839\u636e\u6587\u6863\uff0c\u8fd9\u662f\u552f\u4e00\u5141\u8bb8\u60a8\u62e5\u6709\u7684\u503c\u3002\u6240\u4ee5\u5bf9\u4f60\u6765\u8bf4\uff0c\u8fd9\u53ea\u662f\u4e00\u9879\u5fd9\u788c\u7684\u5de5\u4f5c\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u56e0\u4e3a\u4e5f\u8bb8\u4ed6\u4eec\u6b63\u8bd5\u56fe\u8ba1\u5212\u672a\u6765\u7684\u6269\u5f20\u6216\u5176\u4ed6\u4ec0\u4e48(\u4e0a\u5e1d\u4fdd\u4f51\u6211\u4eec)\u3002\u4f46\u662f\u6211\u4eec\u5728\u8fd9\u91cc\u5df2\u7ecf\u5f97\u5230\u4e86\u4ee4\u4eba\u8ba8\u538c\u7684\u6570\u636e\u8026\u5408\uff0c\u5176\u4e2d\u51fd\u6570\u8c03\u7528\u548c\u7ed3\u6784\u5185\u5bb9\u5b9e\u9645\u4e0a\u662f\u5197\u4f59\u7684\u3002\u5f53\u6211\u4eec\u6765\u5230\u8fd9\u4e00\u9886\u57df\u65f6\uff0c\u60c5\u51b5\u7ee7\u7eed\u6076\u5316\uff1a\n\u90a3\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u55ef\uff0c\u9690\u6666\u547d\u540d\u7684\u201cClientContext\u201d\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u60a8\u5e0c\u671b\u4e8b\u4ef6\u5177\u6709\u7684\u65f6\u95f4\u6233\u7c7b\u578b\u3002\u201cTimestampType\u201d\u53ef\u80fd\u4f1a\u66f4\u5177\u63cf\u8ff0\u6027\uff0c\u4f46\u4e0d\u7ba1\u600e\u6837\u3002\u771f\u6b63\u6709\u8da3\u7684\u662f\u4f4d\u4e8e\u53f3\u4fa7\u7684\u8d64\u88f8\u88f8\u7684\u201c1\u201d\u503c\u3002\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u5c06ClientContext\u8bbe\u7f6e\u4e3a\u4e00\u7ec4\u679a\u4e3e\u503c\uff0c\u4f46\u662fMicrosoft\u4ece\u672a\u4e3a\u5b83\u4eec\u6307\u5b9a\u7b26\u53f7\u540d\u79f0\u3002\u56e0\u6b64\uff0c\u60a8\u53ea\u9700\u9605\u8bfb\u6587\u6863\u5e76\u8bb0\u4f4f\uff0c1\u8868\u793a\u65f6\u95f4\u6233\u6765\u81eaQueryPerformanceCounter\uff0c2\u8868\u793a\u201c\u7cfb\u7edf\u65f6\u95f4\u201d\uff0c3\u8868\u793aCPU\u5468\u671f\u8ba1\u6570\u3002\u5982\u679c\u4e0d\u660e\u663e\uff0c\u516c\u5171API\u6c38\u8fdc\u4e0d\u5e94\u8be5\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u6709\u5f88\u591a\u539f\u56e0\u3002\u5728\u5185\u90e8\uff0c\u6211\u5076\u5c14\u4f1a\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u5728\u7d22\u5f15\u65b9\u6848\u4e2d\uff0c\u5f53\u672c\u5730\u4ee3\u7801\u53ea\u60f3\u4f7f\u7528-1\u548c-2\u6765\u5904\u7406\u67d0\u79cd\u590d\u6742\u7684\u7279\u6b8a\u60c5\u51b5\u65f6\u3002\u4f46\u662f\u5bf9\u4e8e\u63d0\u4f9b\u7ed9\u6570\u767e\u4e07\u5f00\u53d1\u4eba\u5458\u7684API\uff0c\u60a8\u603b\u662f\u5e0c\u671b\u5b9a\u4e49\u60a8\u7684\u5e38\u91cf\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u4ee3\u7801\u5177\u6709\u53ef\u8bfb\u6027\u3002\u6ca1\u6709\u4eba\u77e5\u9053\u201c1\u201d\u7684ClientContext\u662f\u4ec0\u4e48\uff0c\u4f46\u662fUSE_QUERY_PERFORMANCE_COUNTER_TIMESTAMPS\u7684ClientContext\u4f1a\u975e\u5e38\u6e05\u695a\u3002\u5176\u6b21\uff0c\u5b83\u4f7f\u4ee3\u7801\u53ef\u641c\u7d22\u3002\u6ca1\u4eba\u80fd\u628a\u7a7a\u8c03\u5f04\u6210\u7070\u767d\u8272\u7684\n\u56e0\u6b64\uff0c\u73b0\u5728\u60a8\u5fc5\u987b\u5c0f\u5fc3\u5728\u54ea\u91cc\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u53ef\u80fd\u662f\u5728GUID\u6240\u5728\u7684\u9879\u76ee\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5f15\u7528\u5b83\u4eec\uff0c\u6216\u8005\u5176\u4ed6\u7c7b\u4f3c\u7684\u65e0\u7a3d\u4e4b\u8c08\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u505a\u4e24\u6b21\u3002\u4e0d\u8fc7\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u90fd\u5feb\u586b\u5b8c\u7ed3\u6784\u4e86\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u5904\u7406SessionName\u53c2\u6570\uff0c\u6211\u4eec\u5e94\u8be5\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u5b57\u7b26\u4e32\u4f20\u9012\uff0c\u5bf9\u5417\uff1f\u65e2\u7136\u8fd9\u662f\u4f1a\u8bae\u7684\u540d\u79f0\uff0c\u6211\u60f3\u4e5f\u8bb8\u5c31\u8fd9\u4e48\u505a\u5427\uff1a\n\u56e0\u4e3a\u90a3\u4f1a\u662f\u4e2a\u5f88\u68d2\u7684\u4f1a\u573a\u540d\u5b57\uff0c\u4f60\u4e0d\u89c9\u5f97\u5417\uff1f\u4f46\u53ef\u60dc\u7684\u662f\uff0c\u4e8b\u60c5\u4e0d\u662f\u8fd9\u6837\u8fd0\u4f5c\u7684\u3002\u7ed3\u679c\u662f\uff0c\u5373\u4f7f\u60a8\u5df2\u7ecf\u5728SessionProperties\u4e2d\u4f20\u9012\u4e86\u6307\u5b9a\u5185\u6838\u662f\u4e8b\u4ef6\u6e90\u7684GUID\uff0c\u4e5f\u5fc5\u987b\u4f20\u9012\u9884\u5b9a\u4e49\u7684\u5e38\u91cfKERNEL_LOGER_NAME\u4f5c\u4e3a\u4f1a\u8bdd\u540d\u79f0\u3002\u4e3a\u4ec0\u4e48\uff1f\u55ef\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u79d8\u5bc6\u60ca\u559c\uff0c\u6211\u7559\u70b9\u94b1\u7ed9\u4f60\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u54c1\u5c1d\u5230\u8fd9\u4e00\u5207\u7684\u60ac\u5ff5\u4e86\u3002\u597d\u7684\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5f00\u59cb\u5427\uff1a\n\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u5bf9\u5427\uff1f\u4e0d\u5bf9\u3002\u7ed3\u679c\u8868\u660e\uff0c\u867d\u7136SessionName\u5b57\u7b26\u4e32\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\uff0c\u4f46\u8fd9\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u201c\u65b9\u4fbf\u201d\u7279\u6027\u3002\u5b9e\u9645\u4e0a\uff0cSessionName\u9700\u8981\u76f4\u63a5\u5d4c\u5165\u5230SessionProperties\u4e2d\uff0c\u4f46\u662f\u56e0\u4e3aMicrosoft\u4e0d\u60f3\u9650\u5236\u540d\u79f0\u7684\u6700\u5927\u957f\u5ea6\uff0c\u6240\u4ee5\u4ed6\u4eec\u51b3\u5b9a\u76f4\u63a5\u5c06\u5176\u6253\u5305\u5230EVENT_TRACE_PROPERTIES\u7ed3\u6784\u4e4b\u540e\u3002\u6240\u4ee5\u8bf4\u771f\u7684\uff0c\u4f60\u4e0d\u80fd\u8fd9\u4e48\u505a\uff1a\n\u662f\u7684\uff0c\u6ca1\u9519\uff0cWindows API\u7684\u4e8b\u4ef6\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u7528\u6237\u90fd\u5fc5\u987b\u81ea\u5df1\u8fdb\u884c\u6253\u5305\u7ed3\u6784\u683c\u5f0f\u7684\u7b97\u6cd5\u548c\u5e03\u5c40\u3002\u6211\u5b8c\u5168\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u540d\u79f0\u5fc5\u987b\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u5982\u679c\u60a8\u5e0c\u671b\u6bcf\u4e2a\u4eba\u90fd\u8fd9\u6837\u505a\uff0c\u60a8\u80af\u5b9a\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u5b8f\u6216\u51fd\u6570\u6765\u4e3a\u7528\u6237\u505a\u6b63\u786e\u7684\u4e8b\u60c5\uff0c\u5e76\u4f7f\u4ed6\u4eec\u4e0d\u9700\u8981\u7406\u89e3\u60a8\u5947\u602a\u7684\u6570\u636e\u6253\u5305\u9700\u6c42\u3002\u4e0d\u8fc7\uff0c\u563f\uff0c\u81f3\u5c11\u4f60\u4e0d\u7528\u81ea\u5df1\u628a\u540d\u5b57\u6284\u8fdb\u53bb\uff01Microsoft\u5bf9\u6b64API\u91c7\u7528\u7684\u7ea6\u5b9a\u662fStartTrace()\u51fd\u6570\u4f1a\u4e3a\u60a8\u5c06\u540d\u79f0\u590d\u5236\u5230\u7ed3\u6784\u4e2d\uff0c\u56e0\u4e3a\u6bd5\u7adf\u5b83\u662f\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7684\u3002\u55ef\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u59ff\u6001\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u5e76\u4e0d\u594f\u6548\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5f3a\u5236\u4f1a\u8bdd\u540d\u79f0\u4e3aKERNEL_LOGGER_NAME\u5bf9\u4e8eGUID\u6765\u8bf4\u5e76\u4e0d\u662f\u591a\u4f59\u7684\uff0c\u8fd9\u5c31\u662f\u6211\u63d0\u5230\u7684\u79d8\u5bc6\u60ca\u559c\u3002\u5b83\u5fc5\u987b\u662fKERNEL_LOGER_NAME\u7684\u771f\u6b63\u539f\u56e0\u662f\u56e0\u4e3aWindows\u53ea\u5141\u8bb8\u60a8\u5728\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u5373\u4eceSystemTraceControlGuid\u8bfb\u53d6\u4e8b\u4ef6\u7684\u603b\u4f1a\u8bdd\u3002\u5176\u4ed6GUID\u53ef\u4ee5\u7531\u591a\u4e2a\u4f1a\u8bdd\u8bfb\u53d6\uff0c\u4f46\u4e0d\u80fd\u7531SystemTraceControlGuid\u8bfb\u53d6\u3002\u56e0\u6b64\uff0c\u5f53\u60a8\u4f20\u9012kernel_logger_name\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8bf4\u60a8\u60f3\u8981\u4e00\u4e2a\u552f\u4e00\u7684\u4f1a\u8bdd\uff0c\u8be5\u4f1a\u8bdd\u53ef\u4ee5\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u5b58\u5728\u4e8e\u7cfb\u7edf\u4e2d\uff0cGUID\u4e3aSystemTraceControlGuid\u3002\u5982\u679c\u5176\u4ed6\u4eba\u5df2\u7ecf\u542f\u52a8\u8be5\u4f1a\u8bdd\uff0c\u5219\u60a8\u542f\u52a8\u8be5\u4f1a\u8bdd\u7684\u5c1d\u8bd5\u5c06\u5931\u8d25\u3002\u5b83\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\u8be5\u4f1a\u8bdd\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u662f\u5168\u5c40\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5728\u542f\u52a8\u5b83\u7684\u8fdb\u7a0b\u7ec8\u6b62\u65f6\u81ea\u52a8\u5173\u95ed\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u7f16\u5199\u4e86\u8c03\u7528StartTrace()\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u8be5\u4ee3\u7801\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9\u5b58\u5728\u9519\u8bef\uff0c\u5e76\u4e14\u60a8\u7684\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5219kernel_logger_name\u4f1a\u8bdd\u4ecd\u5728\u8fd0\u884c\uff01\u5f53\u60a8\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\u65f6(\u53ef\u80fd\u5728\u4fee\u590d\u4e86\u9519\u8bef\u4e4b\u540e)\uff0c\u5c1d\u8bd5StartTrace()\u5c06\u5931\u8d25\uff0c\u5e76\u663e\u793aERROR_ALIGHY_EXISTS\u3002\u56e0\u6b64\uff0c\u57fa\u672c\u4e0a\uff0cStartTrace()(\u5b83\u662f\u5e2e\u52a9\u60a8\u5c06SessionName\u590d\u5236\u5230\u7ed3\u6784\u4e2d\u7684\u8c03\u7528)\u5f88\u5c11\u662f\u60a8\u8fdb\u884c\u7684\u7b2c\u4e00\u4e2a\u8c03\u7528\u3002\u4f60\u66f4\u6709\u53ef\u80fd\u505a\u7684\u662f\u628a\u8fd9\u4e2a\u53eb\u505a\uff1a\n\u8fd9\u5c06\u5173\u95ed\u4efb\u4f55\u73b0\u6709\u4f1a\u8bdd\uff0c\u4ee5\u4fbf\u60a8\u540e\u7eed\u5bf9StartTrace()\u7684\u8c03\u7528\u5c06\u6210\u529f\u3002\u5f53\u7136\uff0cControlTrace()\u4e0d\u50cfStartTrace()\u90a3\u6837\u590d\u5236\u540d\u79f0\uff0c\u8fd9\u610f\u5473\u7740\u5728\u5b9e\u8df5\u4e2d\u60a8\u5fc5\u987b\u81ea\u5df1\u505a\uff0c\u56e0\u4e3aStartTrace()\u662f\u5728ControlTrace()\u4e4b\u540e\u8c03\u7528\u7684\uff01\n\u8fd9\u5f88\u75af\u72c2\uff0c\u4f46\u8fd9\u4e00\u5207\u7684\u540e\u679c\u66f4\u75af\u72c2\u3002\u5982\u679c\u60a8\u60f3\u4e00\u60f3\u53ea\u6709\u4e00\u4e2a\u53ef\u80fd\u7684\u8ddf\u8e2a\u8fde\u63a5\u5230\u5185\u6838\u8bb0\u5f55\u5668\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u60a8\u5f88\u5feb\u5c31\u4f1a\u610f\u8bc6\u5230\u5176\u4e2d\u5b58\u5728\u5b89\u5168\u95ee\u9898\u3002\u5982\u679c\u5176\u4ed6\u8fdb\u7a0b\u8c03\u7528\u4e86StartTrace()\uff0c\u5e76\u4e14\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u5185\u6838\u8bb0\u5f55\u5668\uff0c\u90a3\u4e48\u7cfb\u7edf\u5982\u4f55\u77e5\u9053\u6211\u4eec\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8fdb\u5165\u5e76\u505c\u6b62\u8be5\u8ddf\u8e2a\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u7684\u8bbe\u7f6e\u91cd\u65b0\u542f\u52a8\u5b83\u5462\uff1f\u53ef\u7b11\u7684\u662f\uff0c\u7b54\u6848\u662f\u5b83\u4e0d\u4f1a\uff01\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u4e00\u573a\u5b8c\u5168\u514d\u8d39\u7684\u6bd4\u8d5b\uff0c\u613f\u6700\u597d\u7684\u8fc7\u7a0b\u83b7\u80dc\uff01\u6700\u540e\u8c03\u7528StartTrace()\u7684\u4eba\u5c31\u662f\u914d\u7f6e\u8ddf\u8e2a\u7684\u4eba\u3002\u55ef\uff0c\u4e0d\u5b8c\u5168\u662f\u3002\u663e\u7136\uff0c\u60a8\u4e0d\u5e0c\u671b\u4efb\u4f55\u65e7\u8fdb\u7a0b\u90fd\u80fd\u591f\u4ece\u5176\u4ed6\u8fdb\u7a0b\u7a83\u53d6\u5185\u6838\u8bb0\u5f55\u5668\u3002\u56e0\u6b64\uff0c\u5fae\u8f6f\u51b3\u5b9a\u6700\u597d\u7684\u505a\u6cd5\u662f\u5b8c\u5168\u7981\u6b62\u6240\u6709\u8fdb\u7a0b\u8bbf\u95ee\u5185\u6838\u8bb0\u5f55\u5668\uff0c\u9664\u975e\u5b83\u4eec\u88ab\u7279\u522b\u6388\u4e88\u7ba1\u7406\u5458\u7279\u6743\u3002\u662f\u7684\uff0c\u6211\u4e0d\u662f\u5728\u5938\u5927\u5176\u8bcd\u3002\u5982\u679c\u60a8\u53ea\u662f\u60f3\u63a5\u6536\u4e0a\u4e0b\u6587\u5207\u6362\u5217\u8868\uff0c\u5373\u4f7f\u53ea\u9488\u5bf9\u60a8\u7684\u8fdb\u7a0b\uff0c\u5b83\u4e5f\u5fc5\u987b\u4ee5\u5b8c\u5168\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c", "note_en": "\u201cI might be a little late for a question about your recent post, but just in case I\u2019m not: Do you have any strategies for, or stories about, dealing with an external library that you couldn\u2019t get rid of that violated some (or all) of these API design guidelines? It\u2019s a vague question, but I\u2019m really just asking about any past experience as a user of an API that really sticks out in your mind.\u201d\n  This reminded me that I\u2019d always wanted to go write down the steps necessary to use a bad API, just to highlight how terrible it can be for the programmer. I don\u2019t think people who make APIs really appreciate how important it is to get them right, and how much unnecessary work their mistakes can cause for hundreds, thousands, sometimes even millions of other programmers. So I felt like it was important to spend an article walking through an API and showing just how much unnecessary work an API can manufacture. It\u2019d probably be a nice column on its own \u00a0\u2014\u00a0 a weekly dissection of a bad API. But since I don\u2019t have time for something like that, if I was only going to dissect one API, the most important question was, which API should I choose?\n  It\u2019s a great time in the history of computing to be writing an article about bad APIs (which is another way of saying it\u2019s a terrible time to actually have to program for a living). There\u2019s so many bad APIs out there, I could have picked one at random and been very likely to find enough problems to fill a 3000-word article. But if I was only going to pick apart one specific operation in one API, it seemed only right to try to pick the worst API I\u2019d ever actually used. Now there are a lot of APIs out there that routinely turn in top-ranking efforts for the \u201cworst API\u201d leaderboard. CSS, for example, can probably claim half the spots on the top 10 for any year in which there\u2019s a new version. DirectShow, while it was still a going concern, certainly dominated the rankings for its era. And in the modern age, newcomers like the Android SDK are showing real potential with development environments so convoluted that the quality of the APIs when called from actual C++ code are the last thing you\u2019ll worry about when trying to ship something with them. But when I thought long and hard about who the all-time heavyweight bad API champion was, there was one clear winner: Event Tracing for Windows. Event Tracing for Windows is an API that does something very simple: it allows any component of the system (including end-user software) to announce \u201cevents\u201d which any other component can then \u201cconsume\u201d. It is a logging system, and it is used to record performance and debugging information by everything from the kernel upwards. Now, normally, a game developer would have no reason to use the Event Tracing for Windows API directly. You can use tools like PerfMon to view logged information about your game, like how much working set it was using or how much disk I/O it did. But there is one specific thing that directly accessing Event Tracing gives you that you can\u2019t get anywhere else: context switch timing. Yes, if you have any relatively recent version of Windows (like 7 or 8), the kernel will log all thread context switches, and using the CPU timestamp included in those events, you can actually correlate them with your own in-game profiling. This is incredibly useful information to have, and is the kind of thing you often only get from console hardware. It\u2019s the reason tools like  RAD\u2019s  Telemetry can show you when your running threads were interrupted and had to wait for system threads to do work, something that can often be critical to debugging weird performance problems. So far, the API is sounding pretty good. I mean, context switch timing is very vaulable information, so even if the API was a little janky, it\u2019d still be pretty great, right? Right?\n  Before we take a look at the actual Event Tracing for Windows API, I want to walk the walk here and do exactly what I said to do in last week\u2019s lecture: write the usage code first. Whenever you evaluate an API, or create a new one, you must always, always, ALWAYS start by writing some code as if you were a user trying to do the thing that the API is supposed to do. This is the only way to get a nice, clean perspective on how the API would work if it had no constraints on it whatsoever. If it was \u201cmagical\u201d, as it were. And then, once you have that, you can move forward and start thinking about the practical problems, and what the best way is for you to get to something implementable. So, if I were a programmer, with no knowledge of the Event Tracing for Windows API, how would I want to get a list of context switches? Well, two methods come to mind. The most straightforward approach would be something like this:\n    That\u2019s one way to do it. Very simple, trivial to understand, pretty hard to mess up. Someone stepping into this with the debugger would be able to see exactly what was going on, and you\u2019d be able to tell pretty easily if you\u2019d done something wrong. However, I could imagine a scenario where performance-critical code would not want to pay the cost of the copy from the kernel\u2019s buffer to your buffer, which this API requires (ETWGetEvents must copy the events from some OS-internal buffer, since it has to get them from somewhere). So a slightly more complex version would be to get some mapped memory back from the API that you use as a reading buffer:\n  All I have done here is changed the return mechanism from a copy to a ranged pointer. In ETWBeginTrace, the user now passes in the number of events they want to buffer at maximum, and the kernel reserves room in the user\u2019s address space for that many events. It then writes directly into that memory if it can, avoiding unnecessary copies. When the user calls ETWBeginEventRead(), a begin and end pointer are returned that span some part of the event memory. Since it will be treated as a circular buffer, the caller is expected to loop on in case there are two ranges (a \u201chead\u201d and \u201ctail\u201d) that need to be returned. I included an end call, since certain methods of implementation might require the kernel to know what part of the buffer the user is looking at, so it can avoid writing into memory that is actively being read. I don\u2019t really know that this sort of thing would be necessary, but if you wanted to cover your bases and give the kernel the maximum implementation flexibility, this definitely supports more implementations than the ETWGetEvents() version. The API would be updated like this:\n  If one were so inclined, one could even support both retrieval methods with the same API just by still allowing the ETWGetEvents() call. Also, to complete the API with some error reporting, it might also be nice to have something like:\n  to allow you to check after each ETWGetEvents() whether too many events had occurred since the last check, and the kernel was forced to throw some away. To each his own, but I suspect that most of the programmers I know wouldn\u2019t have a lot of complaints with my API proposal as written. Everyone has their own taste, so I\u2019m sure they would each tweak something to be more to their liking, but I doubt anyone would say it was horrible. It\u2019s all pretty straightforward, and I suspect most programmers could integrate it into their code trivially without really thinking too much about it. The reason the API is so straightforward is not because I employed a sophisticated set of API design practices to finesse my way to a good API. Quite the contrary. The API is simple because the problem it\u2019s solving is trivial. It\u2019s essentially the simplest API problem you can have in a system: how to move data from one place to another. It\u2019s a glorified memcpy(). But it is precisely the simplicity of the problem that allows the Event Tracing for Windows API to really shine. Even though all it has to do is move memory from one place to another, it manages to involve almost every kind of complexity you can see in an API.\n  I don\u2019t know how anyone is supposed to actually learn how to use the Event Tracing for Windows API. Maybe there are good examples floating around that I just never found. I had to piece the usage code together over the course of many hours of experimentation, pulling from various snippets of documentation. Each time I figured out another step of the process I thought, \u201cWait, seriously?\u201d And each time Microsoft implicitly replied, \u201cSeriously.\u201d Having me tell you how to call the API does take some away from the sheer awe of the experience, so I will say, if you want the full monty, stop reading now and go try to get context switch timestamps on your own. I can assure you it will be hours of fun and excitement. Those who\u2019d rather save time at the expense of a day full of facepalm moments, read on. OK, here we go. The equivalent to my proposed ETWBeginTrace() is Microsoft\u2019s StartTrace() call. At first glance, it seems innocent enough:\n  However, when you look at what you need to pass in for the Properties parameter, things start to get a little hairy. The EVENT_ TRACE_ PROPERTIES structure is defined by Windows to look like this:\n    A cursory glance at this mass of data reveals a bit of oddity: why are there members like \u201cEventsLost\u201d and \u201cBuffersWritten\u201d? The reason is because, instead of making different structures for the different operations you might do on a trace, Microsoft grouped the API functions into a few groups, and all the functions in each group share one amalgamated structure for their parameters. So instead of the user getting a clear idea of what goes into and comes out of a function by looking at its parameters, they must instead rely entirely on the MSDN documentation for each API, and hope that it correctly enumerates which members of the giant parameter structure are used for each call, and whether those members go into or come out of the function. Of course, because there\u2019s so many different ways it can be used, and given the possibility of future APIs using it, too, Microsoft requires that you clear this gigantic beast to zero before you use it:\n  For StartTrace(), if we just want to get the data back directly and aren\u2019t trying to log to a file, we need to fill out some members. These two make some sense:\n  The EnableFlags says what we wanted to get. We want context switches, so we set that flag. Now, what happens when you have more than 32 types of events coming from a single provider, I don\u2019t know, but I guess they weren\u2019t particularly concerned with that eventuality. I was, which is why I went with the enum-and-function-call approach in my proposal, since it supports four billion event types, but hey, \u201c32 event types should be enough for everyone\u201d, so Microsoft went with a 32-bit flags field. Not a huge deal, but this is definitely the kind of short-term thinking that leads to things like unnecessarily duplicated functions with \u201cEx\u201d appended to their names. The LogFileMode just says whether we wanted to get events back directly, or whether we just want the kernel to write them to disk. Since they are such disparate operations, I would have broken those two things up into different function calls, but, hey, we\u2019ve already got one big giant structure for everything, might as well throw it all in there. Things get a little weirder with this field:\n  According to the documentation, that\u2019s the only value you\u2019re allowed to have. So it\u2019s just busywork for you to do. Again, not a huge deal, because maybe they\u2019re trying to plan for future expansion or something (heaven help us). But we are already getting nasty data coupling here, where the function call and the structure contents are effectively redundant. Things continue to sour as we come to this field:\n  What does that mean? Well, the cryptically named \u201cClientContext\u201d actually refers to the type of timestamp you want your events to have. \u201cTimestampType\u201d might have been a little bit more descriptive, but whatever. The real fun is the bare \u201c1\u201d value that\u2019s just sitting on the right. It turns out that there\u2019s actually a set of enumerated values to which you can set ClientContext, but Microsoft didn\u2019t ever give them symbolic names. So you\u2019re just supposed to read the documentation and remember that 1 means the timestamps come from QueryPerformanceCounter, 2 means the \u201csystem time\u201d, and 3 means the CPU cycle count. In case it is not obvious, there are a number of reasons why public APIs should never do something like this. Internally, I will occasionally do something like this, in situations where a local piece of code just wants to, say, use -1 and -2 for some kind of convoluted special cases in an indexing scheme. But for an API that ships to literally millions of developers, you always want to define your constants. First, it makes the code readable. Nobody knows what a ClientContext of \u201c1\u201d is, but a ClientContext of USE_ QUERY_ PERFORMANCE_ COUNTER_ TIMESTAMPS would be crystal clear. Second, it makes the code searchable. Nobody can grep a codebase for \u201c1\u201d, but they can trivially grep it for USE_ QUERY_ PERFORMANCE_ COUNTER_ TIMESTAMPS. And although you might think \u201cwell, no big deal, I\u2019ll just grep for ClientContext = 1\u201d, remember that more complex usage of this API could involve variables, like \u201c\u2026ClientContext = TimestampType;\u201d. Third, it makes the code not compile on future versions of the SDK where things have changed. For example, if the platform maintainers decided to deprecate the use of USE_ QUERY_ PERFORMANCE_ COUNTER_ TIMESTAMPS, they could remove the #define for it and make it be USE_ QUERY_ PERFORMANCE_ COUNTER_ TIMESTAMPS_ DEPRECATED. Now all the old code that uses that value will get a compile error on the new SDK, and the programmer will go look at the new documentation and see what they should be using instead. Etc., etc., etc. Perhaps the most annoying field we have to fill out is this one:\n  The GUID says who you\u2019re trying to trace. In our case, we\u2019re trying to get data from the kernel logger, and SystemTraceControlGuid is the globally defined GUID that refers to this service. It could have been named better, sure, but that\u2019s a minor issue compared to the fact that, if you were to actually try to compile this line of code, you\u2019d find that SystemTraceControlGuid was an undefined symbol at link time. This happens, of course, because the GUIDs are so large that Microsoft apparently couldn\u2019t figure out any way to embed them in the headers (I can think of several possible ways, but I guess they didn\u2019t like any of them), so instead they force you to pick one file in your project where the Windows headers will inject the actual GUID definitions. To signal that you want this to happen, you have to do something like this:\n  So now you have to be careful about where you do this, perhaps by making a new file in your project where the GUIDs will live so everyone can reference them, or some other such nonsense, so you don\u2019t ever do it twice. But whatever, we\u2019re almost done filling out the structure. All we have to do is deal with the SessionName parameter, which we should be able to just pass as a string, right? Since it\u2019s the name of the session, I guess maybe just do:\n  Because that would be an awesome session name, don\u2019t you think? But alas, that is not the way things work. It turns out that, even though you already pass a GUID in the SessionProperties that specifies that the kernel is the source of the events, you must also pass the pre-defined constant KERNEL_ LOGGER_ NAME as the session name. Why? Well, it\u2019s because of a little secret surprise that I\u2019ll save for a bit, just so you can savor the suspense of it all. OK, so, here we go:\n  Looking good, right? Wrong. It turns out that, although the SessionName string is passed as the second parameter, that\u2019s really just a \u201cconvenience\u201d feature. Really, the SessionName is required to be embedded directly into the SessionProperties, but since Microsoft didn\u2019t want to limit the maximum length of the name, they decided to just go ahead and pack it in after the EVENT_ TRACE_ PROPERTIES structure. So really, you can\u2019t do this:\n    Yes, that\u2019s right, every user of the Event Tracing for Windows API has to do the arithmetic and layout of the packed structure format themselves. I have absolutely no idea why the name has to be bundled in this way, but surely if you wanted everyone to do this, you should have supplied a utility macro or function that would do the right thing for the user and keep them out of the business of understanding your weird data packing requirements. But hey, at least you don\u2019t have to copy the name in there yourself! The convention Microsoft adopted for this API was that the StartTrace() function will copy the name into the structure for you, since after all, it\u2019s passed as the second parameter. Well, it\u2019s a nice gesture, but it doesn\u2019t pan out in practice. It turns out that forcing the SessionName to be KERNEL_ LOGGER_ NAME wasn\u2019t superfluous with the GUID after all, and that is the secret surprise to which I alluded. The real reason that it has to be KERNEL_ LOGGER_ NAME is because Windows only allows you to have one session in the system \u00a0\u2014\u00a0 total \u00a0\u2014\u00a0 that reads events from the SystemTraceControlGuid. Other GUIDs can be read by multiple sessions, but not SystemTraceControlGuid. So really what is happening when you pass KERNEL_ LOGGER_ NAME is that you are saying you want the one unique session that can exist in the system at any given time with the GUID of SystemTraceControlGuid. If someone else already started that session, then your attempt to start it will fail. It gets better. The session is global to the operating system and doesn\u2019t automatically close on the termination of the process that started it. So if you write code that calls StartTrace(), but you have a bug in that code somewhere \u00a0\u2014\u00a0 anywhere \u00a0\u2014\u00a0 and your program crashes, the KERNEL_ LOGGER_ NAME session is still running! When you go to re-run your program, perhaps after fixing the bug, your attempt to StartTrace() will fail with ERROR_ ALREADY_ EXISTS. So, basically, StartTrace(), which is the call that helpfully copies the SessionName into the struct for you, is rarely the first call you would make anyway. What you\u2019re much more likely to do is call this:\n  This shuts down any existing session, so that your subsequent call to StartTrace() will succeed. But of course, ControlTrace() doesn\u2019t copy the name in like StartTrace() does, which means that, in practice, you have to do it yourself, since StartTrace() gets called after ControlTrace()!\n  It\u2019s crazy, but the ramifications of all this are crazier still. If you think about what it means to have only one possible trace that is connected to the kernel logger, you realize quickly that there are security issues at play. If some other process had called StartTrace(), and they were the ones that were using the kernel logger, how does the system know that it\u2019s OK for our process to come in and stop that trace so we can start it back up again with our settings? The answer, hilariously, is that it doesn\u2019t! In fact, it\u2019s a complete free-for-all \u00a0\u2014\u00a0 may the best process win! Whoever calls StartTrace() last, well, that\u2019s who gets to configure the trace. Well, not quite. Obviously, you don\u2019t want just any old process to be able to steal the kernel logger away from other processes. So Microsoft decided that the best course of action would be to simply prohibit all processes from accessing the kernel logger at all, unless they\u2019ve been specifically granted administrator privileges. That\u2019s right \u00a0\u2014\u00a0 I am not exaggerating. If you simply want to receive a list of the context switches, even if only for your process, it must be running with full administrator privileges. The whole right-click-run-as-administrator nine yards. If you don\u2019t, and you just run your process normally, your StartTrace will fail with insufficient privileges. (In theory, you may also be able to add your user to the \u201cPerformance Log Users\u201d group and avoid having to run the process as admi\n......", "posttime": "2020-06-12 22:33:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a7a\u6c14\u6c61\u67d3,worst,api", "title": "\u6709\u53f2\u4ee5\u6765\u6700\u5dee\u7684\u7a7a\u6c14\u6c61\u67d3\u6307\u6570(2014)", "title_en": "The Worst API Ever Made (2014)", "transed": 1, "url": "https://caseymuratori.com/blog_0025", "via": "", "real_tags": ["\u7a7a\u6c14\u6c61\u67d3", "worst", "api"]}, {"category": "", "categoryclass": "", "imagename": "b4bb9ed7fcae84b6d56e120212e818c1.jpg", "infoid": 1006286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u8d77\u8bc9\u4e66\u4e2d\u63cf\u8ff0\u7684IA\u4fb5\u6743\u7684\u5de8\u5927\u89c4\u6a21\uff0c\u4ee5\u53ca\u5176\u5ba3\u79f0\u7684\u8086\u610f\u6269\u5927\u975e\u6cd5\u5b9d\u85cf\u7684\u76ee\u6807\uff0c\u4f3c\u4e4e\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u4e0a\u5df2\u77e5\u7684\u6700\u5927\u7684\u56fe\u4e66\u76d7\u7248\u7f51\u7ad9\u4e4b\u4e00\u3002\u201d\nvitapix/E+/Getty Images\u3002\n\u4e92\u8054\u7f51\u6863\u6848\u9986\u7684\u56fd\u5bb6\u7d27\u6025\u56fe\u4e66\u9986\u5df2\u7ecf\u5efa\u6210\u3002\u8fd9\u5bb6\u975e\u8425\u5229\u6027\u7684\u6570\u5b57\u4fdd\u5b58\u5b58\u50a8\u5e93\u5f00\u59cb\u514d\u8d39\u63d0\u4f9b\u6570\u767e\u4e07\u672c\u7535\u5b50\u4e66\uff0c\u4ee5\u89e3\u51b3\u5927\u6d41\u884c\u671f\u95f4\u56fe\u4e66\u9986\u5173\u95ed\u7684\u95ee\u9898\u3002\u5728\u4f01\u9e45\u5170\u767b\u4e66\u5c4b(Penguin Random House)\u548c\u54c8\u73c0\u67ef\u6797\u65af(HarperCollins)\u7b49\u4e3b\u8981\u51fa\u7248\u5546\u7684\u8054\u5408\u8bc9\u8bbc\u4e0b\uff0c\u8fd9\u5bb6\u975e\u8425\u5229\u6027\u7684\u6570\u5b57\u4fdd\u5b58\u5b58\u50a8\u5e93\u5d29\u6e83\u4e86\u3002\u51fa\u7248\u5546\u8868\u793a\uff0c\u65e0\u507f\u51fa\u501f\u56fe\u4e66\u662f\u5927\u89c4\u6a21\u4fb5\u72af\u7248\u6743\u7684\u884c\u4e3a\u3002\u6570\u5b57\u56fe\u4e66\u9986\u5c06\u4e8e\u4e0b\u5468\u5173\u95ed\u3002\n\u56fe\u4e66\u6863\u6848\u9986\u6700\u521d\u53ea\u63a5\u53d7\u9080\u8bf7\uff0c\u4e00\u6b21\u53ea\u5141\u8bb8\u4e0b\u8f7d\u7ed9\u5b9a\u6587\u4ef6\u7684\u6709\u9650\u6b21\u6570\uff0c\u6bcf\u6b21\u79df\u8d41\u9650\u5236\u4e3a14\u5929\u3002\u4f46\u540e\u6765\u5927\u6d41\u884c\u6765\u88ad\uff0c\u56fe\u4e66\u9986\u5173\u95e8\u4e86\uff0c\u56e0\u6b64\u4e92\u8054\u7f51\u6863\u6848\u9986\u7684\u56de\u5e94\u662f\u8ba9\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u65e0\u9650\u5236\u5730\u8bbf\u95ee\u6240\u6709\u4e66\u7c4d\u3002\n\u5b83\u5c31\u50cf\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u771f\u7684--\u6839\u672c\u95ee\u9898\u4e0d\u662f\u501f\u4e66--\u6bd5\u7adf\u90a3\u624d\u662f\u56fe\u4e66\u9986\u7684\u5de5\u4f5c\u3002\u751a\u81f3\u5728\u5927\u6d41\u884c\u4e4b\u524d\uff0c\u95ee\u9898\u5c31\u662f\u56fe\u4e66\u9986\u5411\u51fa\u7248\u5546\u652f\u4ed8\u7248\u7a0e\uff0c\u4ee5\u4fbf\u6309\u7167\u5546\u5b9a\u7684\u6761\u4ef6\u501f\u51fa\u4ed6\u4eec\u7684\u56fe\u4e66\uff0c\u800c\u4e92\u8054\u7f51\u6863\u6848\u9986\u5219\u4e0d\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\u3002\u5b83\u624b\u52a8\u626b\u63cf\u56fe\u4e66\uff0c\u7136\u540e\u5f00\u59cb\u5411\u4efb\u4f55\u60f3\u8981\u4e0b\u8f7d\u7684\u4eba\u63d0\u4f9b\u56fe\u4e66\u3002\u867d\u7136\u521d\u8877\u53ef\u80fd\u662f\u597d\u7684\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u51fa\u7248\u5546\u5e76\u4e0d\u89c9\u5f97\u6177\u6168\u5230\u653e\u5f03\u5982\u6b64\u591a\u7684\u6536\u5165\uff0c\u5373\u4f7f\u5728\u6211\u4eec\u751f\u6d3b\u7684\u7279\u6b8a\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u7f8e\u56fd\u51fa\u7248\u5546\u534f\u4f1a(Association Of American Publisher)\u5728\u63d0\u8d77\u8bc9\u8bbc\u65f6\u8868\u793a\uff1a\u201cIA\u4ece\u5934\u5230\u5c3e\u626b\u63cf\u4e66\u7c4d\uff0c\u5c06\u5b8c\u6574\u7684\u6570\u5b57\u6587\u4ef6\u53d1\u5e03\u5230\u5176\u7f51\u7ad9\u4e0a\uff0c\u5e76\u901a\u8fc7\u6ce8\u518c\u4e92\u8054\u7f51\u6863\u6848\u8d26\u6237\u6765\u8bf7\u6c42\u7528\u6237\u514d\u8d39\u8bbf\u95ee\u8fd9\u4e9b\u6587\u4ef6\u3002\u201d\u201c\u8d77\u8bc9\u4e66\u4e2d\u63cf\u8ff0\u7684IA\u4fb5\u6743\u7684\u5de8\u5927\u89c4\u6a21\uff0c\u4ee5\u53ca\u5176\u5ba3\u79f0\u7684\u8086\u610f\u6269\u5927\u975e\u6cd5\u5b9d\u85cf\u7684\u76ee\u6807\uff0c\u4f3c\u4e4e\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u4e0a\u5df2\u77e5\u7684\u6700\u5927\u7684\u56fe\u4e66\u76d7\u7248\u7f51\u7ad9\u4e4b\u4e00\u3002\u201d\n\u4e92\u8054\u7f51\u6863\u6848\u9986\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u662f\u5f00\u6e90\u6216\u516c\u5171\u9886\u57df\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u9700\u8981\u5411\u4efb\u4f55\u4eba\u4ed8\u8d39\uff0c\u4f46\u5b83\u4e5f\u8fa9\u79f0\uff0c\u5b83\u88ab\u6307\u5b9a\u4e3a\u6570\u5b57\u56fe\u4e66\u9986\uff0c\u4e3a\u5b83\u63d0\u4f9b\u4e86\u8fdb\u884c\u56fe\u4e66\u501f\u9605\u7684\u63a9\u62a4\u3002\u5b83\u80af\u5b9a\u5df2\u7ecf\u51b3\u5b9a\uff0c\u8fd9\u573a\u4e89\u8bba\u5c06\u5728\u6cd5\u5ead\u4e0a\u5927\u83b7\u5168\u80dc\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u4e92\u8054\u7f51\u6863\u6848\u9986\u4ecd\u7136\u5f88\u597d-\u4e92\u8054\u7f51\u6863\u6848\u9986\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u4f5c\u4e3a\u6570\u5b57\u4fdd\u5b58\u7684\u6863\u6848\u9986\uff0c\u4fdd\u5b58\u7740\u539f\u672c\u53ef\u80fd\u6d88\u5931\u5728\u4ee5\u592a\u4e2d\u7684\u5a92\u4f53\u526f\u672c\u3002\u5b83\u6700\u51fa\u540d\u7684\u662f\u5b83\u7684Wayback Machine\uff0c\u5b83\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u722c\u884c\uff0c\u5e76\u62cd\u6444\u7f51\u7ad9\u7684\u5feb\u7167\uff0c\u8fd9\u6837\u5373\u4f7f\u7f51\u7ad9\u4e0b\u7ebf\uff0c\u4eba\u4eec\u4e5f\u53ef\u4ee5\u91cd\u65b0\u8bbf\u95ee\u3002\u5b83\u8fd8\u5b58\u50a8\u89c6\u9891\u7684\u6570\u5b57\u526f\u672c\uff0c\u598220\u4e16\u7eaa90\u5e74\u4ee3MTV\u7684\u65e7VHS\u5f55\u97f3\u3002\n\u65e7\u7684\u5b9e\u4f53\u5a92\u4f53\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u8150\u70c2\uff0c\u7f51\u7ad9\u6240\u6709\u8005\u6700\u7ec8\u4f1a\u505c\u6b62\u652f\u4ed8\u6258\u7ba1\u8d39\u7528\uff0c\u6240\u4ee5\u4e92\u8054\u7f51\u6863\u6848\u9986\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u670d\u52a1\uff0c\u4fdd\u62a4\u521b\u610f\u4f5c\u54c1\u4e0d\u4f1a\u6c38\u8fdc\u6d88\u5931\u3002\u4f46\u662f\uff0c\u8981\u540c\u60c5\u8fd9\u91cc\u7684\u51fa\u7248\u5546\u4e5f\u4e0d\u96be\u3002\u56fe\u4e66\u51fa\u7248\u4e0d\u662f\u4e00\u4e2a\u6709\u5229\u53ef\u56fe\u7684\u884c\u4e1a\uff0c\u8fd9\u4e9b\u5929\u6765\uff0c\u4e0e\u90a3\u4e9b\u88ab\u64ad\u5ba2\u548c\u7535\u5b50\u7ade\u6280\u7b49\u65b0\u5a92\u4f53\u5f62\u5f0f\u5206\u5fc3\u7684\u4eba\u7ade\u4e89\u6ce8\u610f\u529b\u5c24\u5176\u56f0\u96be\u3002\n\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u7f8e\u56fd\u5404\u5730\u7684\u56fe\u4e66\u9986\u6b63\u5728\u6162\u6162\u91cd\u65b0\u5f00\u653e\uff0c\u56e0\u6b64\u4efb\u4f55\u4f9d\u8d56\u5b83\u4eec\u7684\u4eba\u90fd\u4e0d\u9700\u8981\u7b49\u5f85\u592a\u4e45\u3002\u4f60\u5df2\u7ecf\u7528\u7a0e\u7684\u5f62\u5f0f\u4ed8\u4e86\u90a3\u4e9b\u4e66\u7684\u94b1\uff0c\u4f60\u4e0d\u59a8\u8d81\u865a\u800c\u5165\u3002", "note_en": "\u201cThe sheer scale of IA\u2019s infringement described in the complaint \u2014 and its stated objective to enlarge its illegal trove with abandon \u2014 appear to make it one of the largest known book pirate sites in the world.\u201d\n vitapix/E+/Getty Images\n   The Internet Archive&#39;s National Emergency Library is  finished. The non-profit repository for digital preservation, which began offering millions of e-books for free to address the closure of libraries during the pandemic,  buckled under a joint lawsuit filed by major publishers including Penguin Random House and HarperCollins. Publishers said lending out books without compensation was &#34;mass copyright infringement.&#34; The digital library will close next week.\n The archive of books was initially invite-only and only allowed a given file to be downloaded a limited number of times at once, with each rental limited to 14 days. But then the pandemic hit and libraries closed, so the Internet Archive responded by making all the books accessible to everyone, with no limits.\n It&#39;s like a library, except not really \u2014 The fundamental issue isn&#39;t lending out books \u2014 that&#39;s what libraries do, after all. Even before the pandemic, the problem was that libraries pay royalties to publishers in order to lend out their books under negotiated terms, while the Internet Archive didn&#39;t pay anything. It scanned books manually and then began offering them to anyone who wanted to download them. While the intention might have been good, it turns out publishers weren&#39;t feeling  that generous as to give up so much revenue, even during the unique circumstances we&#39;re living under.\n \u201cIA scans books from cover to cover, posts complete digital files to its website, and solicits users to access them for free by signing up for Internet Archive Accounts,\u201d stated the Association of American Publishers when it filed its lawsuit. \u201cThe sheer scale of IA\u2019s infringement described in the complaint \u2014 and its stated objective to enlarge its illegal trove with abandon \u2014 appear to make it one of the largest known book pirate sites in the world.\u201d\n Most of the Internet Archive&#39;s content is open source or in the public domain, meaning it doesn&#39;t need to pay anyone, but it also argued that its designation as a &#34;digital library&#34; gave it cover to conduct the book lending it was doing. It must have decided that the argument would fly in court.\n The Internet Archive is still good on balance \u2014 The Internet Archive has long served as an archive for digital preservation, saving copies of media that might otherwise disappear into the ether. Its most well known for its Wayback Machine, which crawls the internet and takes snapshots of websites so that people can revisit them even after the sites goes offline. It also stores digital copies of video, like  old VHS recordings of MTV from the 1990s.\n Old physical media decays over time, and website owners eventually stop paying their hosting bills, so the Internet Archive does a good service protecting creative works from disappearing forever. But it&#39;s also not hard to sympathize with publishers here. Book publishing is not a lucrative industry, and it&#39;s especially hard to compete for attention these days with people distracted by new forms of media like podcasts and e-sports.\n Thankfully libraries around the U.S. are slowly starting to reopen, so anyone who relies on them shouldn&#39;t need to wait much longer. You already pay for those books in the form of taxes, you might as well take advantage.", "posttime": "2020-06-12 22:17:15", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u514d\u8d39,\u6863\u6848\u9986,archive,\u56fe\u4e66", "title": "\u4e92\u8054\u7f51\u6863\u6848\u9986\u56e0\u7248\u6743\u95ee\u9898\u627c\u6740\u5176\u514d\u8d39\u6570\u5b57\u56fe\u4e66\u9986", "title_en": "Internet Archive Kills Its Free Digital Library Over Copyright Concerns", "transed": 1, "url": "https://www.inputmag.com/culture/internet-archive-kills-its-free-digital-library-over-copyright-concerns", "via": "", "real_tags": ["\u514d\u8d39", "\u6863\u6848\u9986", "archive", "\u56fe\u4e66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006283, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PostgreSQL\u662f\u4e00\u79cd\u5e7f\u4e3a\u4eba\u77e5\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u6211\u4eec\u4f7f\u7528Jepsen\u7684\u65b0\u4e8b\u52a1\u9694\u79bb\u68c0\u67e5\u5668Elle\u8bc4\u4f30PostgreSQL\uff0c\u53d1\u73b0\u5728\u5355\u4e2aPostgreSQL\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u6267\u884c\u7684\u4e8b\u52a1\u5b9e\u9645\u4e0a\u662f\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u3002\u5728\u6b63\u5e38\u64cd\u4f5c\u4e0b\uff0c\u4e8b\u52a1\u5076\u5c14\u4f1a\u51fa\u73b0G2\u9879\uff1a\u6d89\u53ca\u4e00\u7ec4\u4e8b\u52a1\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u8fd9\u4e9b\u4e8b\u52a1(\u7c97\u7565\u5730\u8bf4)\u76f8\u4e92\u65e0\u6cd5\u89c2\u5bdf\u5230\u5f7c\u6b64\u7684\u5199\u5165\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728PostgreSQL\u201cRepeatable Read\u201d\u4e0b\u53d1\u73b0\u4e86\u9891\u7e41\u51fa\u73b0\u7684G2-Item\u5b9e\u4f8b\uff0c\u8fd9\u662f\u901a\u5e38\u5f15\u7528\u7684Repeatable Read\u5f62\u5f0f\u5316\u660e\u786e\u7981\u6b62\u7684\u3002\u6b63\u5982Martin Kleppmann\u4e4b\u524d\u6240\u62a5\u9053\u7684\uff0c\u8fd9\u662f\u56e0\u4e3aPostgreSQL\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u5b9e\u9645\u4e0a\u662f\u5feb\u7167\u9694\u79bb\u3002\u7531\u4e8eANSI SQL\u6807\u51c6\u4e2d\u8ba8\u8bba\u5df2\u4e45\u7684\u6a21\u68f1\u4e24\u53ef\uff0c\u8fd9\u79cd\u884c\u4e3a\u662f\u5141\u8bb8\u7684\uff0c\u4f46\u5bf9\u4e8e\u719f\u6089\u76f8\u5173\u6587\u732e\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4ed6\u4eec\u5927\u5403\u4e00\u60ca\u3002\u6211\u4eec\u5728Serializability\u4e2d\u53d1\u73b0\u7684bug\u7684\u8865\u4e01\u8ba1\u5212\u57288\u670813\u65e5\u7684\u4e0b\u4e00\u4e2a\u5c0f\u7248\u672c\u4e2d\u53d1\u5e03\uff0c\u5e76\u4e14\u5728Repeatable Read\u4e0b\u5b58\u5728G2-Item\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u6587\u6863\u8f7b\u677e\u89e3\u51b3\u3002\u8fd9\u9879\u5de5\u4f5c\u662f\u72ec\u7acb\u8fdb\u884c\u7684\uff0c\u6ca1\u6709\u62a5\u916c\uff0c\u5e76\u6839\u636e\u6770\u666e\u68ee\u9053\u5fb7\u653f\u7b56\u8fdb\u884c\u3002\nPostgreSQL\u662f\u4e00\u79cd\u4e3b\u8981\u7684\u5f00\u6e90\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5177\u670923\u5e74\u7684\u5386\u53f2\u548c\u5e7f\u6cdb\u7684\u529f\u80fd\u3002\u867d\u7136Jepsen\u7684\u5de5\u4f5c\u4f20\u7edf\u4e0a\u4fa7\u91cd\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4f46\u6211\u4eec\u7684\u5de5\u5177\u5f88\u5bb9\u6613\u9002\u7528\u4e8e\u4f20\u7edf\u7684\u5355\u8282\u70b9\u6570\u636e\u5e93\u3002\u5728\u672c\u62a5\u544a\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5c06Jepsen\u7684\u751f\u6210\u6027\u5e76\u53d1\u6d4b\u8bd5\u5e94\u7528\u4e8ePostgreSQL12.3\u7684\u7ed3\u679c\u3002\n\u57289.1\u7248\u672c\u4e4b\u524d\uff0cpostgresql\u7684\u6587\u6863\u58f0\u79f0\u63d0\u4f9b\u4e86\u6700\u9ad8\u53ef\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u201c\u5c31\u597d\u50cf\u4e8b\u52a1\u662f\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u4e32\u884c\u6267\u884c\uff0c\u800c\u4e0d\u662f\u5e76\u53d1\u6267\u884c(\u2026\u3002\u3002Serializable\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u4fdd\u8bc1\uff0c\u786e\u4fdd\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u80fd\u770b\u5230\u5b8c\u5168\u4e00\u81f4\u7684\u6570\u636e\u5e93\u89c6\u56fe\u3002\u201c\u3002\u7136\u800c\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff1aPostgreSQL\u7684\u201c\u53ef\u5e8f\u5217\u5316\u201d\u5b9e\u9645\u4e0a\u662f\u5feb\u7167\u9694\u79bb(SI)\u3002\n\u975e\u6b63\u5f0f\u5730\uff0c\u5feb\u7167\u9694\u79bb\u7cfb\u7edf\u4f3c\u4e4e\u4ee5\u6570\u636e\u5e93\u7684\u56fa\u5b9a\u5373\u65f6\u5feb\u7167\u542f\u52a8\u6bcf\u4e2a\u4e8b\u52a1\uff0c\u4ec5\u53cd\u6620\u5df2\u63d0\u4ea4\u7684\u72b6\u6001\u3002\u4e8b\u52a1\u4e2d\u6267\u884c\u7684\u5199\u5165\u4f3c\u4e4e\u5728\u63d0\u4ea4\u65f6\u81ea\u52a8\u5e94\u7528\uff0c\u53ea\u6709\u5728\u62cd\u6444\u5feb\u7167\u540e\u6ca1\u6709\u5176\u4ed6\u4e8b\u52a1\u4fee\u6539\u8fc7\u76f8\u540c\u7684\u5bf9\u8c61\u65f6\uff0c\u4e8b\u52a1\u624d\u80fd\u63d0\u4ea4\u3002\u8fd9\u662f\u4e0d\u53ef\u5e8f\u5217\u5316\u7684(\u6b63\u5982\u6b63\u5f0f\u7684\u5feb\u7167\u9694\u79bb\u6587\u7ae0\u6240\u660e\u786e\u6307\u51fa\u7684\u90a3\u6837)\uff1a\u5199\u5165\u96c6\u4e0d\u76f8\u4ea4\u7684\u4e8b\u52a1\u53ef\u4ee5\u5728\u4e0d\u89c2\u5bdf\u5f7c\u6b64\u5f71\u54cd\u7684\u60c5\u51b5\u4e0b\u63d0\u4ea4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fdd\u53cd\u5e94\u7528\u7a0b\u5e8f\u7ea7\u4e00\u81f4\u6027\u3002\n\u57288.0\u7248\u4e2d\uff0cPostgreSQL\u7684\u6587\u6863\u6f84\u6e05\u4e86\u201c\u4e8b\u5b9e\u4e0aPostgreSQL\u7684Serializable\u6a21\u5f0f\u5e76\u4e0d\u80fd\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u4fdd\u8bc1\u53ef\u5e8f\u5217\u5316\u7684\u6267\u884c\u201d\uff0c\u5e76\u63a5\u7740\u6307\u51faPostgreSQL\u7f3a\u5c11\u8c13\u8bcd\u9501\u5b9a\u7cfb\u7edf\u3002\n\u57289.1\u7248\u4e2d\uff0c\u57fa\u4e8eCahill\u3001R\u00f6hm\u548cFekete\u5bf9\u53ef\u5e8f\u5217\u5316\u5feb\u7167\u9694\u79bb(SSI)\u7684\u7814\u7a76\uff0cPostgreSQL\u8d21\u732e\u8005Grittner\u548cPorts\u6dfb\u52a0\u4e86\u5bf9\u771f\u6b63\u53ef\u5e8f\u5217\u5316\u7684\u652f\u6301\u3002\u7b80\u800c\u8a00\u4e4b\uff0cSSI\u901a\u8fc7\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u79f0\u4e3a\u5371\u9669\u7ed3\u6784\u7684\u4e8b\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u6765\u6269\u5c55SI\uff1a\u4e09\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u7684\u4e00\u5bf9\u76f8\u90bb\u7684\u8bfb\u5199\u4f9d\u8d56\u5173\u7cfb\u3002\u9664\u4e86\u5feb\u7167\u9694\u79bb\u7684\u6b63\u5e38\u89c4\u5219\u4e4b\u5916\uff0c\u9632\u6b62\u8fd9\u4e9b\u5371\u9669\u7684\u7ed3\u6784\u53ea\u4f1a\u4ea7\u751f\u53ef\u5e8f\u5217\u5316\u7684\u6267\u884c\u3002\u5728\u8fc7\u53bb\u7684\u4e5d\u5e74\u4e2d\uff0cPostgreSQL\u7684\u201c\u53ef\u5e8f\u5217\u5316\u201d\u6a21\u5f0f\u7406\u6240\u5f53\u7136\u5730\u58f0\u79f0\u63d0\u4f9b\u4e86\u53ef\u5e8f\u5217\u5316\u3002\nPostgreSQL\u7684\u201c\u53ef\u91cd\u590d\u8bfb\u201d\u4fdd\u6301\u5feb\u7167\u9694\u79bb\uff0c\u4f46\u662f\u5e76\u53d1\u63a7\u5236\u6587\u6863\u4ee4\u4eba\u60ca\u8bb6\u5730\u6ca1\u6709\u63d0\u5230\u8fd9\u4e2a\u672f\u8bed\u3002\u76f8\u53cd\uff0c\u5b83\u63d0\u4f9b\uff1a\n\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u53ea\u770b\u5230\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u63d0\u4ea4\u7684\u6570\u636e\uff1b\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u672a\u63d0\u4ea4\u7684\u6570\u636e\u6216\u5e76\u53d1\u4e8b\u52a1\u2026\u5728\u4e8b\u52a1\u6267\u884c\u671f\u95f4\u63d0\u4ea4\u7684\u66f4\u6539\u3002\u8fd9\u6bd4SQL\u6807\u51c6\u5bf9\u6b64\u9694\u79bb\u7ea7\u522b\u7684\u8981\u6c42\u63d0\u4f9b\u4e86\u66f4\u5f3a\u7684\u4fdd\u8bc1\uff0c\u5e76\u9632\u6b62\u4e86\u886813.1\u4e2d\u63cf\u8ff0\u7684\u6240\u6709\u73b0\u8c61(\u5e8f\u5217\u5316\u5f02\u5e38\u9664\u5916)\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u8fd9\u662f\u8be5\u6807\u51c6\u7279\u522b\u5141\u8bb8\u7684\uff0c\u5b83\u53ea\u63cf\u8ff0\u4e86\u6bcf\u4e2a\u9694\u79bb\u7ea7\u522b\u5fc5\u987b\u63d0\u4f9b\u7684\u6700\u4f4e\u4fdd\u62a4\u3002\n\u201c\u5e8f\u5217\u5316\u5f02\u5e38\u201d\u662f\u4e00\u4e2a\u6709\u70b9\u6a21\u68f1\u4e24\u53ef\u7684\u672f\u8bed\uff1a\u6587\u6863\u7b80\u5355\u5730\u5c06\u5176\u63cf\u8ff0\u4e3a\u201c\u4e0e\u4e00\u6b21\u8fd0\u884c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6240\u6709\u53ef\u80fd\u987a\u5e8f\u4e0d\u4e00\u81f4\u201d\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u201c\u5e8f\u5217\u5316\u5f02\u5e38\u201d\u7684\u5177\u4f53\u542b\u4e49\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u9a8c\u3002\n\u6211\u4eec\u4f7f\u7528Jepsen\u6d4b\u8bd5\u5e93\u4e3aPostgreSQL\u8bbe\u8ba1\u4e86\u6d4b\u8bd5\u5de5\u5177\u3002\u6211\u4eec\u7684\u6d4b\u8bd5\u5728\u5355\u4e2aDebian 10\u8282\u70b9\u4e0a\u5b89\u88c5PostgreSQL12.3-1.pgdg100+1(\u5f53\u524d\u7a33\u5b9a\u7248\u672c)\uff0c\u6216\u8005\u9009\u62e9\u8fde\u63a5\u5230\u73b0\u6709\u7684PostgreSQL\u5b89\u88c5\u3002\u6211\u4eec\u8fd8\u8bc4\u4f30\u4e86\u7248\u672c9.5.22\u300110.13\u548c11.8\u3002\u6211\u4eec\u7684\u6d4b\u8bd5\u53ef\u4ee5\u6309\u968f\u673a\u987a\u5e8f\u7ec8\u6b62PostgreSQL\u8fdb\u7a0b\uff0c\u4ee5\u5e2e\u52a9\u6d4b\u91cf\u5d29\u6e83\u5b89\u5168\u6027\uff0c\u4f46\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u53d1\u73b0\u4e0d\u9700\u8981\u91cd\u73b0\u8fdb\u7a0b\u5d29\u6e83\u3002\u6211\u4eec\u4f7f\u7528PostgreSQL\u7684\u5b98\u65b9Debian\u5305\u63d0\u4f9b\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u53ea\u505a\u4e86\u5f88\u5c0f\u7684\u66f4\u6539(\u4f8b\u5982\uff0c\u7ed1\u5b9a\u7f51\u7edc\u7aef\u53e3)\uff0c\u5728\u4e00\u4e9b\u6d4b\u8bd5\u4e2d\uff0c\u7f29\u77ed\u4e86\u81ea\u52a8\u771f\u7a7a\u5348\u7761\u65f6\u95f4\uff0c\u5e76\u542f\u7528\u4e86\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u8bb0\u5f55\u3002\n\u6211\u4eec\u7684\u6d4b\u8bd5\u5de5\u4f5c\u8d1f\u8f7d\u8de8\u4e00\u7ec4\u5217\u8868\u5bf9\u8c61\u751f\u6210\u9644\u52a0\u548c\u8bfb\u53d6\u64cd\u4f5c\u7684\u968f\u673a\u4e8b\u52a1\uff0c\u5e76\u4ee5\u6307\u6570\u9891\u7387\u9009\u62e9\u3002\u6bcf\u4e2a\u5bf9\u8c61\u7531\u552f\u4e00\u7684\u6574\u6570\u903b\u8f91\u952e\u6807\u8bc6\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u884c\u5b58\u50a8\u5728\u591a\u4e2a\u8868\u4e2d\u7684\u4e00\u4e2a\u8868\u4e2d\uff0c\u8fd9\u4e9b\u8868\u7531\u952e\u7684\u6563\u5217\u9009\u62e9\u3002\u5bf9\u8c61\u952e\u5b58\u50a8\u5728\u4e24\u4e2a\u5b57\u6bb5\u4e2d\uff1a\u4e3b\u952eid\u548c\u672a\u7d22\u5f15\u7684\u8f85\u952esk\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u901a\u8fc7\u8868\u626b\u63cf\u6d4b\u8bd5\u8bbf\u95ee\u30021\u6bcf\u4e2a\u5217\u8868\u7684\u503c\u5b58\u50a8\u4e3a\u9017\u53f7\u5206\u9694\u7684\u6587\u672c\u5217\u3002\n\u6211\u4eec\u4f7f\u7528INSERT.\u5c06\u552f\u4e00\u7684\u6574\u6570\u5143\u7d20\u9644\u52a0\u5230\u7531key\u6807\u8bc6\u7684\u5217\u8868\u4e2d(\u901a\u8fc7id\u6216sk)\u3002\u5728\u51b2\u7a81\u65f6\u6267\u884cUPDATE\uff0c\u6216\u8005\u901a\u8fc7UPDATE\u68c0\u67e5\u662f\u5426\u6709\u4efb\u4f55\u884c\u88ab\u4fee\u6539\uff0c\u7136\u540e\u540e\u9000\u5230INSERT\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5219\u518d\u6b21\u66f4\u65b0\u3002\u8bfb\u53d6\u8fd4\u56de\u7279\u5b9a\u5bf9\u8c61\u7684\u5f53\u524d\u6574\u6570\u5217\u8868\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7SELECT(Val)from txn0 where id=\uff1f\n\u6211\u4eec\u7684\u6d4b\u8bd5\u4f7f\u7528JDBC PostgreSQL\u9a71\u52a8\u7a0b\u5e8f(\u7248\u672c42.2.12)\u5c06\u8fd9\u4e9b\u4e8b\u52a1\u5e94\u7528\u5230PostgreSQL\uff0c\u5e76\u4f7f\u7528ELLE\u4e8b\u52a1\u9694\u79bb\u68c0\u67e5\u5668\u5206\u6790\u7ed3\u679c\u5386\u53f2\u3002ELLE\u6839\u636e\u5b9e\u9a8c\u8bb0\u5f55\u7684\u5386\u53f2\u63a8\u65ad\u4e8b\u52a1\u4f9d\u8d56\u56fe\uff0c\u5e76\u5728\u8be5\u56fe\u4e2d\u641c\u7d22\u5faa\u73af(\u548c\u975e\u5faa\u73af\u5f02\u5e38)\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4eceAdya\u3001Liskov\u548cAmp\uff1bO\u2018Neil\u7684\u901a\u7528\u9694\u79bb\u7ea7\u522b\u5b9a\u4e49\u4e2d\u68c0\u6d4b\u5230\u5e7f\u6cdb\u7684\u5f02\u5e38\uff0c\u5305\u62ecG0(\u810f\u5199)\u3001G1a(\u4e2d\u6b62\u8bfb\u53d6)\u3001G1b(\u4e2d\u95f4\u8bfb\u53d6)\u3001G1c(\u5faa\u73af\u4fe1\u606f\u6d41)\u3001G-Single(\u8bfb\u53d6\u504f\u5dee)\u548cG2-Item(\u53cd\u4f9d\u8d56\u5468\u671f)\u3002\u6211\u4eec\u8fd8\u68c0\u67e5\u5185\u90e8\u4e00\u81f4\u6027\uff0c\u9a8c\u8bc1\u4e8b\u52a1\u662f\u5426\u89c2\u5bdf\u5230\u4e0e\u5176\u81ea\u8eab\u5148\u524d\u5199\u5165\u4e00\u81f4\u7684\u503c\u3001\u91cd\u590d\u5f71\u54cd\u548c\u5783\u573e\u503c(\u4f8b\u5982\uff0c\u4ece\u672a\u5199\u5165\u7684\u5143\u7d20)\u3002\n\u5728\u5927\u591a\u6570\u65b9\u9762\uff0cPostgreSQL\u7684\u884c\u4e3a\u4e0e\u9884\u671f\u4e00\u81f4\uff1a\u672a\u63d0\u4ea4\u7684\u8bfb\u53d6\u548c\u63d0\u4ea4\u7684\u8bfb\u53d6\u90fd\u53ef\u4ee5\u9632\u6b62\u5199\u5165\u504f\u5dee\u548c\u4e2d\u6b62\u8bfb\u53d6\u3002\u6211\u4eec\u6ca1\u6709\u89c2\u5bdf\u5230\u8fdd\u53cd\u5185\u90e8\u4e00\u81f4\u6027\u7684\u60c5\u51b5\u3002\u7136\u800c\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ed3\u679c\u8981\u62a5\u544a\u3002\u9996\u5148\u662fPostgreSQL\u7684\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u5f31\u4e8e\u53ef\u91cd\u590d\u8bfb\u53d6\uff0c\u81f3\u5c11\u6309\u7167Berenson\u3001Adya\u3001Bailis\u7b49\u4eba\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u9519\u7684\uff1aANSI SQL\u6807\u51c6\u662f\u6a21\u68f1\u4e24\u53ef\u7684\u3002\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u80af\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u90a3\u5c31\u662fPostgreSQL\u7684\u201c\u53ef\u5e8f\u5217\u5316\u201d\u9694\u79bb\u7ea7\u522b\u662f\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\uff1a\u5b83\u5141\u8bb8\u5728\u6b63\u5e38\u64cd\u4f5c\u671f\u95f4\u4f7f\u7528G2-Item\u3002\nPostgreSQL\u7684\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u9694\u79bb\u7ea7\u522b\u5b9e\u9645\u4e0a\u662f\u5feb\u7167\u9694\u79bb\uff0c\u5728\u4f7f\u7528\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u65f6\uff0c\u6211\u4eec\u6ca1\u6709\u89c2\u5bdf\u5230\u8fdd\u53cdSI\u7684\u5f02\u5e38\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8bb0\u5f55\u7684\u5386\u53f2\u4e0e\u5f3a\u5927\u7684\u5feb\u7167\u9694\u79bb\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u66f4\u5f3a\u7684\u4e00\u81f4\u6027\u6a21\u578b\uff0c\u53ef\u9632\u6b62\u9648\u65e7\u8bfb\u53d6\u548c\u5176\u4ed6\u5b9e\u65f6\u5f02\u5e38\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u8bb8\u591a\u8fdd\u53cd\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u884c\u4e3a\uff0c\u6b63\u5982Berenson\uff0cAdya\u7b49\u4eba\u6b63\u5f0f\u5b9a\u4e49\u7684\u90a3\u6837\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e0b\u8fd9\u6bb5\u5386\u53f2\uff0c\u5b83\u6bcf\u5206\u949f\u4ea7\u751f\u5927\u7ea6140\u4e2a\u53cd\u4f9d\u8d56\u5468\u671f\u3002\u4e0b\u9762\u662f\u7531\u4e09\u4e2a\u4e8b\u52a1\u7ec4\u6210\u5386\u53f2\u4e2d\u7684\u4e00\u4e2a\u77ed\u5468\u671f-\u6bcf\u4e2a\u4e8b\u52a1\u4f3c\u4e4e\u90fd\u5728\u4e0b\u4e00\u4e2a\u4e8b\u52a1\u4e4b\u524d\u6267\u884c\u3002\n\u9876\u90e8\u4e8b\u52a1\u901a\u8fc7\u8bfb\u53d6\u952e190\u5f00\u59cb\uff0c\u5e76\u627e\u5230\u5217\u8868[1 2]\u3002\u4e2d\u95f4\u4e8b\u52a1\u5c064\u9644\u52a0\u5230\u5bc6\u94a5190\uff0c\u5f97\u5230\u7248\u672c[1 2 4]\u3002\u7531\u4e8e\u5199\u5165\u8986\u76d6\u4e86\u9876\u90e8\u4e8b\u52a1\u8bfb\u53d6\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u77e5\u9053\u4e2d\u95f4\u4e8b\u52a1\u5fc5\u987b\u5728\u9876\u90e8\u4e8b\u52a1\u4e4b\u540e\u6267\u884c\u3002\u6211\u4eec\u79f0\u8fd9\u79cd\u5173\u7cfb\u4e3a\u53cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5c06\u5176\u8868\u793a\u4e3a\u4e00\u6761\u6807\u8bb0\u4e3aRW\u7684\u8fb9\u3002\n\u4e2d\u95f4\u4e8b\u52a1\u5c065\u9644\u52a0\u5230\u952e190\uff0c\u7136\u540e\u5bf9\u5e95\u90e8\u4e8b\u52a1\u7684\u8bfb\u53d6[1 2 4 5]\u53ef\u89c1\u3002\u8be5\u5199-\u8bfb\u4f9d\u8d56\u6027\u7531\u6807\u8bb0\u4e3aWR\u7684\u8fb9\u8868\u793a\u3002\u7136\u800c\uff0c\u5e95\u90e8\u4e8b\u52a1\u8bfb\u53d6\u5173\u952e\u5b57188\uff0c\u5e76\u4e14\u6ca1\u6709\u89c2\u5bdf\u5230\u9876\u90e8\u4e8b\u52a1\u7684\u9644\u52a08\u3002\u8fd9\u79cd\u53cd\u4f9d\u8d56\u6027\u610f\u5473\u7740\u5e95\u90e8\u4e8b\u52a1\u5fc5\u987b\u5728\u9876\u90e8\u4e8b\u52a1\u4e4b\u524d\u6267\u884c\uff1a\u5468\u671f\uff01\n\u8fd9\u4e2a\u4f9d\u8d56\u5faa\u73af\u5305\u542b\u4e24\u4e2a\u53cd\u4f9d\u8d56\u7684\u8fb9\u7f18\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u963f\u96c5\u7684\u5f62\u5f0f\u4e3b\u4e49\u8bed\u8a00\u4e2d\u6210\u4e3aG2\u73b0\u8c61\u3002\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b\u8bfb\u53d6\u90fd\u662f\u5728\u901a\u8fc7\u4e3b\u952e2\u8bfb\u53d6\u5bf9\u8c61\u65f6\u53d1\u751f\u7684\uff0c\u6240\u4ee5\u5b83\u4e5f\u662fG2-Item\uff1a\u5728Adya\u7684\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u5f62\u5f0f\u5316\u4e2d\u660e\u786e\u7981\u6b62\u8fd9\u79cd\u73b0\u8c61\u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662fPostgreSQL\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e00\u79cd\u201c\u5e8f\u5217\u5316\u5f02\u5e38\u201d\u3002\n\u7136\u800c\uff0c\u6839\u636eANSI SQL\u5bf9\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u5f02\u5e38\u662f\u5141\u8bb8\u7684\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5bf9\u7981\u6b62\u73b0\u8c61\u7684\u63aa\u8f9e\u542b\u7cca\u7684\u7b80\u660e\u82f1\u8bed\u5b9a\u4e49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u6a21\u68f1\u4e24\u53ef\u6b63\u662f\u4fc3\u4f7fBerenson\u3001Bernstein\u7b49\u4eba\u64b0\u5199\u300aANSI SQL\u9694\u79bb\u7ea7\u522b\u6279\u5224\u300b\u7684\u90e8\u5206\u539f\u56e0\uff0c\u5e76\u9996\u5148\u5c06\u5feb\u7167\u9694\u79bb\u7684\u5b9a\u4e49\u6b63\u5f0f\u5316\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0cBerenson\u7b49\u4eba\u5bf9ANSI\u5f02\u5e38\u63d0\u51fa\u4e86\u4e24\u79cd\u89e3\u91ca\uff1a\u4e00\u79cd\u662f\u4e25\u683c\u7684\uff0c\u4e00\u79cd\u662f\u5e7f\u4e49\u7684\u3002\u4ed6\u4eec\u4e89\u8fa9\u8bf4\uff0c\u4e25\u683c\u7684\u89e3\u91ca\u672a\u80fd\u6355\u6349\u5230\u76f4\u89c9\u4e0a\u4e0d\u6b63\u786e\u7684\u884c\u4e3a\uff0c\u800cANSI\u7684\u610f\u601d\u662f\u5b9a\u4e49\u5e7f\u4e49\u7684\u884c\u4e3a\u3002\n\u4e25\u683c\u7684\u89e3\u91caA1\u3001A2\u548cA3\u6709\u610f\u60f3\u4e0d\u5230\u7684\u5f31\u70b9\u3002\u6b63\u786e\u7684\u89e3\u91ca\u662f\u5bbd\u6cdb\u7684\u3002\n\u5728Berenson\u7b49\u4eba\u559c\u6b22\u7684\u5e7f\u4e49\u89e3\u91ca\u4e0b\uff0c\u5feb\u7167\u9694\u79bb\u4e0d\u80fd\u4e0e\u53ef\u91cd\u590d\u8bfb\u53d6\u76f8\u63d0\u5e76\u8bba\uff1aSI\u5141\u8bb8\u5386\u53f2RR\u7981\u6b62\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5728\u4e25\u683c\u7684\u89e3\u91ca\u4e0b\uff0cSI\u5f3a\u4e8eRR(\u786e\u5b9e\uff0cSI\u5f3a\u4e8e\u5f02\u5e38\u53ef\u5e8f\u5217\u5316\uff01)\uff0c\u5e76\u4e14\u8fd9\u4e9bG2\u9879\u5f02\u5e38\u5728\u53ef\u91cd\u590d\u8bfb\u53d6\u4e0b\u662f\u5141\u8bb8\u7684\u3002\n\u56e0\u6b64\uff0cPostgreSQL\u7684\u53ef\u91cd\u590d\u8bfb\u53d6\u884c\u4e3a\u662f\u5426\u6b63\u786e\u53d6\u51b3\u4e8e\u4eba\u4eec\u5bf9\u8be5\u6807\u51c6\u7684\u7406\u89e3\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u57fa\u4e8e\u5feb\u7167\u9694\u79bb\u7684\u6570\u636e\u5e93\u4f1a\u62d2\u7edd\u5173\u4e8eSI\u7684\u5f00\u521b\u6027\u8bba\u6587\u6240\u9009\u62e9\u7684\u4e25\u683c\u89e3\u91ca\uff0c\u4f46\u7ecf\u8fc7\u53cd\u601d\uff0c\u8fd9\u79cd\u884c\u4e3a\u662f\u53ef\u4ee5\u8fa9\u62a4\u7684\u3002\n\u5f53\u6211\u4eec\u6d4b\u8bd5PostgreSQL\u7684\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u7ea7\u522b\u65f6\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u66f4\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u5728\u6b63\u5e38\u64cd\u4f5c\u4e0b\uff0c\u5b83\u8fd8\u663e\u793a\u4e86G2\u9879\u3002\u5728\u8fd9\u4e24\u5206\u949f\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6770\u666e\u68ee\u68c0\u6d4b\u52306\u4f8bG2-Item\u3002\u4f8b\u5982\uff0c\u8003\u8651\u8fd9\u5bf9\u4e8b\u52a1\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u672a\u80fd\u89c2\u5bdf\u5230\u5bf9\u65b9\u7684\u63d2\u5165\uff1a\n\u6216\u8005\uff0c\u8003\u8651\u4ee5\u4e0b\u4e09\u4e2a\u4e8b\u52a1\u3002\u9876\u90e8\u4e8b\u52a1\u9519\u8fc7\u4e86\u7531\u5e95\u90e8\u53ea\u8bfb\u4e8b\u52a1\u89c2\u5bdf\u5230\u7684\u4e2d\u95f4\u4e8b\u52a1\u7684\u5bc6\u94a51670\u7684\u521b\u5efa\u3002\u7136\u800c\uff0c\u5e95\u90e8\u4e8b\u52a1\u53c8\u672a\u80fd\u89c2\u5bdf\u5230\u7b2c\u4e00\u4e8b\u52a1\u5bf9\u5bc6\u94a51671\u521b\u5efa\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u8bfb\u5199\u4e8b\u52a1\u81ea\u5df1\u83b7\u53d6\uff0c\u5219\u5b83\u662f\u53ef\u5e8f\u5217\u5316\u7684\u3002\u53ea\u8bfb\u4e8b\u52a1\u5bf9\u4e8e\u6b64\u5468\u671f\u662f\u5fc5\u9700\u7684\uff1a\u5b83\u89c2\u5bdf\u67d0\u4e9b(\u4f46\u4e0d\u662f\u5168\u90e8)\u201c\u903b\u8f91\u4e0a\u5728\u5148\u201d\u4e8b\u52a1\u7684\u5f71\u54cd\u3002\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u56fe\u4e0ePostgreSQL Serializable Snapshot\u9694\u79bb\u7eb8\u4e2d\u7684\u793a\u4f8b1(\u201c\u7b80\u5355\u5199\u5165\u504f\u5dee\u201d)\u548c\u793a\u4f8b2(\u201c\u6279\u5904\u7406\u201d)\u5b8c\u5168\u5bf9\u5e94\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5f53\u7136\uff0c\u5b83\u4eec\u7684SQL\u8bed\u53e5\u662f\u4e0d\u540c\u7684-\u4f46\u4e0e\u793a\u4f8b1\u7c7b\u4f3c\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5468\u671f\u6d89\u53ca\u4e00\u5bf9\u4e8b\u52a1\uff0c\u5b83\u4eec\u8bfb\u53d6\u4e00\u4e2a\u952e\u5e76\u5199\u5165\u53e6\u4e00\u4e2a\u952e\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u672a\u80fd\u89c2\u5bdf\u5230\u53e6\u4e00\u4e2a\u952e\u7684\u5f71\u54cd\uff1b\u800c\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u5468\u671f\u6d89\u53ca\u4e00\u4e2a\u53ea\u8bfb\u4e8b\u52a1\uff0c\u8be5\u4e8b\u52a1\u901a\u8fc7\u4e24\u4e2a\u76f8\u90bb\u7684RW\u53cd\u4f9d\u8d56\u5173\u7cfb\u5148\u4e8e\u5199\u5165\u8be5\u53ea\u8bfb\u4e8b\u52a1\u89c2\u5bdf\u5230\u7684\u72b6\u6001\u7684\u4e8b\u52a1\u3002\u8fd9\u4e9b\u5468\u671f\u6b63\u662fPostgreSQL\u7684SSI\u5b9e\u73b0\u8981\u9632\u6b62\u7684\uff01\n\u6211\u4eec\u5728\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u4e0b\u89c2\u5bdf\u5230\u7684G2-Item\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u81f3\u5c11\u6d89\u53ca\u65b0\u63d2\u5165\u884c\u7684\u4e00\u4e2a\u8bfb\u5199\u51b2\u7a81\u3002\u5faa\u73af\u53ef\u80fd\u6d89\u53ca\u5bf9\u73b0\u6709\u884c\u7684\u66f4\u65b0\u7684RW\u53cd\u4f9d\u8d56\uff0c\u4f46\u4f3c\u4e4e\u81f3\u5c11\u9700\u8981\u4e00\u6b21\u63d2\u5165\u3002\n\u5728\u4e0ePostgreSQL\u8d21\u732e\u8005\u8ba8\u8bba\u4e4b\u540e\uff0cPeter Geoghegan\u786e\u5b9a\u4e86\u6b64\u95ee\u9898\u7684\u53ef\u80fd\u539f\u56e0\uff1a\u5728\u7ed9\u5b9a\u4e09\u4e2a\u5e76\u53d1\u4e8b\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u51b2\u7a81\u68c0\u6d4b\u673a\u5236\u53ef\u80fd\u4f1a\u9519\u8bef\u5730\u5c06\u66f4\u65b0\u4e8b\u52a1\u7684\u4e8b\u52a1ID(XID)\u6807\u8bc6\u4e3a\u8d1f\u8d23\u5143\u7ec4\u7684\u539f\u59cb\u7248\u672c\u548c\u66f4\u65b0\u7248\u672c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u6700\u521d\u521b\u5efa\u5143\u7ec4\u7684\u4e8b\u52a1ID\u3002\u901a\u8fc7\u5c06\u9519\u8bef\u7684\u4e8b\u52a1\u6807\u8bb0\u4e3a\u6f5c\u5728\u51b2\u7a81\uff0c\u5b83\u5141\u8bb8\u4e8b\u52a1\u63d0\u4ea4\uff0c\u540c\u65f6\u65e0\u6cd5\u89c2\u5bdf\u524d\u4e00\u4e2a\u4e8b\u52a1\u7684\u5199\u5165\u3002Geoghegan\u4e0ePostgreSQL\u793e\u533a\u7684\u5176\u4ed6\u6210\u5458\u5408\u4f5c\uff0c\u7f16\u5199\u4e86\u4e00\u4e2a\u8865\u4e01\u6765\u6807\u8bb0\u6b63\u786e\u7684\u4e8b\u52a1ID\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a\u56de\u5f52\u6d4b\u8bd5\u3002\u5728\u4ed6\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8fd9\u4f3c\u4e4e\u89e3\u51b3\u4e86\u95ee\u9898\u3002\n\u81ea\u4ece2011\u5e74\u5f15\u5165\u53ef\u5e8f\u5217\u5316\u5feb\u7167\u9694\u79bb\u4ee5\u6765\uff0c\u8fd9\u6bb5\u4ee3\u7801\u57fa\u672c\u4e0a\u6ca1\u6709\u53d8\u5316\u3002\u6211\u4eec\u4e00\u8d77\u786e\u8ba4PostgreSQL 9.5.22\u300110.13\u300111.8\u300112.3\u548c13\u4e2d\u5b58\u5728\u6b64\u9519\u8bef\uff1b\u6211\u4eec\u5047\u8bbe\u5b83\u5b58\u5728\u4e8e\u6240\u6709\u73b0\u6709\u7248\u672c\u4e2d\u3002\n\u5728\u6211\u4eec\u5bf9PostgreSQL12.3\u7684\u6d4b\u8bd5\u4e2d\uff0c\u5728\u8bfb\u63d0\u4ea4\u65f6\u6267\u884c\u7684\u4e8b\u52a1\u4f3c\u4e4e\u662f\u6b63\u786e\u7684\uff1a\u6211\u4eec\u4ece\u672a\u89c2\u5bdf\u5230G0(\u810f\u5199)\u3001G1a(\u4e2d\u6b62\u8bfb)\u6216G1b(\u4e2d\u95f4\u8bfb)\u3002PostgreSQL\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u770b\u8d77\u6765\u4e0e\u5f3a\u5feb\u7167\u9694\u79bb\u4e00\u81f4\uff0c\u4f46\u5141\u8bb8G2-Item\uff0c\u8fd9\u5728\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u5f62\u5f0f\u5316\u4e2d\u662f\u88ab\u7981\u6b62\u7684\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u5c06\u6b64\u884c\u4e3a\u89e3\u91ca\u4e3a\u4e0eANSI SQL\u53ef\u91cd\u590d\u8bfb\u53d6\u4e00\u81f4\u3002\u6700\u540e\uff0c\u7531\u4e8e\u51b2\u7a81\u68c0\u6d4b\u673a\u5236\u4e2d\u7684\u9519\u8bef\uff0cPostgreSQL\u201c\u53ef\u5e8f\u5217\u5316\u201d\u5141\u8bb8G2-Item\u5728\u6b63\u5e38\u64cd\u4f5c\u4e0b\u8fd0\u884c\u3002\u5df2\u7ecf\u63d0\u4ea4\u4e86\u4e00\u4e2a\u8865\u4e01\uff0c\u8fd9\u7c7b\u53ef\u5e8f\u5217\u5316\u51b2\u7a81\u5e94\u8be5\u4f1a\u5728\u4e0b\u4e00\u4e2a\u6b21\u8981\u7248\u672c\u4e2d\u89e3\u51b3--\u76ee\u524d\u8ba1\u5212\u57288\u670813\u65e5\u53d1\u5e03\u3002\nPostgreSQL\u6709\u4e00\u5957\u5e7f\u6cdb\u7684\u7cbe\u5fc3\u6311\u9009\u7684\u793a\u4f8b\uff0c\u79f0\u4e3a\u9694\u79bb\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u7528\u4e8e\u9a8c\u8bc1\u5e76\u53d1\u5b89\u5168\u6027\u3002\u6b64\u5916\uff0c\u50cfMartin Kleppmann\u7684Hermitage\u8fd9\u6837\u7684\u72ec\u7acb\u6d4b\u8bd5\u4e5f\u8bc1\u5b9e\u4e86PostgreSQL\u7684\u53ef\u5e8f\u5217\u5316\u7ea7\u522b\u53ef\u4ee5\u9632\u6b62(\u81f3\u5c11\u6709\u4e00\u4e9b\uff01)\u3002G2\u5f02\u5e38\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u9a6c\u4e0a\u548c\u6770\u666e\u68ee\u4e00\u8d77\u627e\u5230\u4e86G2-Item\u5462\uff1f\u8fd9\u4e2a\u6f0f\u6d1e\u662f\u5982\u4f55\u6301\u7eed\u8fd9\u4e48\u4e45\u7684\u5462\uff1f\nPostgreSQL\u7684\u9694\u79bb\u6d4b\u8bd5\u3001Hermitage\u548c\u5927\u591a\u6570\u4e8b\u52a1\u6027Jepsen\u6d4b\u8bd5(\u5728ELE\u4e4b\u524d)\u90fd\u4f9d\u8d56\u4e8e\u4f7f\u7528\u624b\u5de5\u9a8c\u8bc1\u7684\u4e0d\u53d8\u91cf\u6267\u884c\u5c11\u6570\u5de7\u5999\u6784\u9020\u7684\u4e8b\u52a1\u3002\u4f8b\u5982\uff0c\u6b64\u9694\u79bb\u6d4b\u8bd5\u5668\u89c4\u8303\u901a\u8fc7\u6267\u884cFekete\uff0cO\u2018Neil\uff0c&amp\uff1bO\u2019Neil\u5728\u5feb\u7167\u9694\u79bb\u4e0b\u7684\u53ea\u8bfb\u4e8b\u52a1\u5f02\u5e38\u4e2d\u63d0\u51fa\u7684\u4e8b\u52a1\u5e8f\u5217\u6765\u9a8c\u8bc1\u53ef\u4e32\u884c\u5316\u3002\u6770\u666e\u68ee\u7684\u94f6\u884c\u6d4b\u8bd5\u57fa\u4e8e\u4e00\u7c7b\u5b9a\u4e49\u72ed\u7a84\u7684\u4ea4\u6613\uff0c\u8be5\u4ea4\u6613\u5728\u5feb\u7167\u9694\u79bb\u4e0b\u4fdd\u6301\u603b\u4f59\u989d\u4e0d\u53d8\u91cf\u3002Hermitage\u901a\u8fc7\u6267\u884c\u4e00\u5bf9\u5bf9\u79f0\u7684\u8bfb\u53d6\u548c\u66f4\u65b0\u4e8b\u52a1\u6765\u68c0\u67e5G2-Item-\u8fd9\u786e\u5b9e\u6210\u529f\u5730\u6f14\u793a\u4e86\u5728PostgreSQL\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u4e0b\u7684G2-Item\uff0c\u4f46\u4e0d\u5728Serializable\u4e0b\u3002\n\u7136\u800c\uff0cELLE\u662f\u4e0d\u540c\u7684\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u751f\u6210\u5e7f\u6cdb\u7684\u4e8b\u52a1\u7c7b\uff0c\u540c\u65f6\u4ecd\u7136\u5728\u7ed3\u679c\u5386\u53f2\u4e0a\u63a8\u65ad\u4e25\u683c\u7684\u5c5e\u6027\u3002\u8fd9\u79cd\u57fa\u4e8e\u5c5e\u6027\u7684\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u6355\u83b7\u6ca1\u6709\u4eba\u60f3\u8fc7\u8981\u663e\u5f0f\u6d4b\u8bd5\u7684\u610f\u5916\u884c\u4e3a\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u786e\u5b9a\u4e86\u5e76\u53d1\u66f4\u65b0\u548c\u63d2\u5165\u53ef\u80fd\u4f1a\u6df7\u6dc6\u51b2\u7a81\u68c0\u6d4b\u673a\u5236\uff0c\u4f7f\u5176\u8bef\u8ba4\u4e3a\u54ea\u4e2a\u4e8b\u52a1\u8d1f\u8d23\u51b2\u7a81\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8bbe\u8ba1\u7684\u5217\u8868\u8ffd\u52a0\u6d4b\u8bd5\u53ea\u9a8c\u8bc1\u4e86\u7b80\u5355\u6a21\u5f0f\u4e0a\u7684\u5c11\u6570SQL\u64cd\u4f5c\u3002\u6210\u719f\u7684SQL\u6570\u636e\u5e93(\u5982PostgreSQL)\u662f\u5177\u6709\u65e0\u6570\u4ea4\u4e92\u7ec4\u4ef6\u548c\u4f18\u5316\u7684\u590d\u6742\u6709\u673a\u4f53\u3002Jepsen\u5047\u8bbe\u6211\u4eec\u7684\u6d4b\u8bd5\u53ea\u6267\u884cPostgreSQL\u53ef\u80fd\u884c\u4e3a\u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6770\u666e\u68ee\u91c7\u53d6\u4e86\u4e00\u79cd\u5b9e\u9a8c\u6027\u7684\u5b89\u5168\u9a8c\u8bc1\u65b9\u6cd5\uff1a\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u9519\u8bef\u7684\u5b58\u5728\uff0c\u4f46\u4e0d\u80fd\u8bc1\u660e\u5b83\u4eec\u7684\u5b58\u5728\u3002\u867d\u7136\u6211\u4eec\u52aa\u529b\u5bfb\u627e\u95ee\u9898\uff0c\u4f46\u6211\u4eec\u65e0\u6cd5\u8bc1\u660e\u4efb\u4f55\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6b63\u786e\u6027\u3002\n\u7528\u6237\u5e94\u8be5\u77e5\u9053\uff0cPostgreSQL\u7684\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u5b9e\u9645\u4e0a\u662f\u5feb\u7167\u9694\u79bb--\u8fd9\u662fPostgreSQL\u793e\u533a\u65e9\u5c31\u4e86\u89e3\u7684\u4e8b\u5b9e\uff0c\u6b64\u524dKleppman\u66fe\u62a5\u9053\u8fc7\u8fd9\u4e00\u4e8b\u5b9e\u3002\u7531\u4e8eG2-Item\u5728\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u5e38\u89c1\u5f62\u5f0f\u5316\u4e0b\u662f\u88ab\u7981\u6b62\u7684\uff0c\u7528\u6237\u53ef\u80fd\u5df2\u7ecf\u8bbe\u8ba1\u4e86\u5e94\u7528\u7a0b\u5e8f\uff0c\u5047\u8bbePostgreSQL\u4e5f\u662f\u5982\u6b64\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6539\u4e3a\u5728\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u4e0b\u8fd0\u884c\u9009\u5b9a\u7684\u4e8b\u52a1\uff0c\u6dfb\u52a0\u663e\u5f0f\u9501\u5b9a\uff0c\u6216\u91cd\u65b0\u8bbe\u8ba1\u8fd9\u4e9b\u4e8b\u52a1\uff0c\u4f7f\u5176\u4e0d\u518d\u5bf9G2-Item\u654f\u611f\u3002\n\u6211\u4eec\u5efa\u8baePostgreSQL\u56e2\u961f\u66f4\u65b0\u4ed6\u4eec\u7684\u5e76\u53d1\u63a7\u5236\u6587\u6863\uff0c\u4ee5\u89e3\u51b3\u56f4\u7ed5\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u7684\u6b67\u4e49\u3002\u5f53\u524d\u7684\u6587\u6863\u6ca1\u6709\u63d0\u5230\u201c\u5feb\u7167\u9694\u79bb\u201d\u8fd9\u4e2a\u672f\u8bed--\u58f0\u660ePostgreSQL\u7684\u201c\u53ef\u91cd\u590d\u8bfb\u53d6\u201d\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u5feb\u7167\u9694\u79bb\u53ef\u4ee5\u7acb\u5373\u6f84\u6e05\u95ee\u9898\u3002\u6587\u6863\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7528G-Single\u3001G2-Item\u548cG2\u66ff\u6362\u6a21\u7cca\u7684\u201c\u5e8f\u5217\u5316\u5f02\u5e38\u201d\u6765\u4e3a\u7528\u6237\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u6307\u5bfc\uff1bSI\u7981\u6b62G-Single\uff0c\u4f46\u5141\u8bb8G2-Item\u548cG2\u3002\n\u81f3\u4e8e\u5feb\u7167\u9694\u79bb\u662f\u5426\u6bd4\u53ef\u91cd\u590d\u8bfb\u53d6\u66f4\u5f3a\uff0c\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u662f\u91c7\u7528Berenson\u7b49\u4eba\u7684\u5b9a\u4e49\uff0c\u5e76\u58f0\u660e\u5feb\u7167\u9694\u79bb\u4e0e\u53ef\u91cd\u590d\u8bfb\u53d6\u662f\u4e0d\u53ef\u6bd4\u62df\u7684\uff1aSI\u5141\u8bb8RR\u7981\u6b62\u7684\u4e00\u4e9b\u5f02\u5e38(\u4f8b\u5982\u5199\u5165\u504f\u5dee)\uff0c\u4f46\u662fRR\u5141\u8bb8SI\u7981\u6b62\u7684\u5176\u4ed6\u5f02\u5e38(\u4f8b\u5982\u5e7b\u5f71)\u3002\u8fd9\u6837\u505a\u5c06\u4f7fPostgreSQL\u4e0eBerenson\u3001Adya\u3001Bailis\u7b49\u4eba\u957f\u8fbe25\u5e74\u7684\u4e8b\u52a1\u9694\u79bb\u5b66\u672f\u7ebf\u7d22\u4fdd\u6301\u4e00\u81f4\u3002\n\u7136\u800c\uff0c\u6b63\u5982Ports&amp\uff1bGrittner\u5728\u4ed6\u4eec\u5173\u4e8ePostgreSQL\u7684\u53ef\u5e8f\u5217\u5316\u5feb\u7167\u9694\u79bb\u7684\u8bba\u6587\u4e2d\u6240\u6307\u51fa\u7684\u90a3\u6837\uff0cANSI\u89c4\u8303\u662f\u6a21\u68f1\u4e24\u53ef\u7684\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u7684G2\u9879\u5f02\u5e38\u5e76\u4e0d\u4e00\u5b9a\u8fdd\u53cd\u5bf9\u53ef\u91cd\u590d\u8bfb\u53d6\u6240\u7981\u6b62\u7684\u73b0\u8c61\u7684\u4e25\u683c\u89e3\u91ca\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5efa\u8baePostgreSQL\u663e\u5f0f\u58f0\u660e\u4ed6\u4eec\u9009\u62e9\u4e25\u683c\u7684\u89e3\u91ca\uff0c\u800c\u4e0d\u662f\u5bbd\u6cdb\u7684\u89e3\u91ca\u3002\n\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u7248\u672c\u7684PostgreSQL\u80fd\u591f\u4fdd\u8bc1\u53ef\u5e8f\u5217\u5316\u3002\u7528\u6237\u5e94\u8be5\u610f\u8bc6\u5230\u5e76\u53d1\u66f4\u65b0\u548c\u63d2\u5165\u4e8b\u52a1\u53ef\u80fd\u8868\u73b0\u4e3aG2-Item\u3002\u4e89\u7528\u7a0b\u5ea6\u9ad8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5c24\u5176\u5bb9\u6613\u53d7\u5230\u5f71\u54cd\u3002PostgreSQL\u56e2\u961f\u5df2\u7ecf\u7f16\u5199\u4e86\u91cd\u73b0\u8be5\u95ee\u9898\u7684\u6d4b\u8bd5\uff0c\u5e76\u6b63\u5728\u8bc4\u4f30\u8865\u4e01\uff1b\u6211\u4eec\u5efa\u8bae\u5728\u4e0b\u4e00\u4e2a\u6b21\u8981\u7248\u672c\u53ef\u7528\u65f6\u8fdb\u884c\u5347\u7ea7\u3002\n\u6700\u540e\u8981\u6ce8\u610f\u7684\u662f\uff1a\u6211\u4eec\u7684\u6d4b\u8bd5\u8868\u660ePostgreSQL\u63d0\u4f9b\u7684\u4e0d\u4ec5\u4ec5\u662f\u5feb\u7167\u9694\u79bb\u548c\u53ef\u5e8f\u5217\u5316(\u6216\u8005\uff0c\u5728\u53ef\u5e8f\u5217\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6G2\u9879\u9519\u8bef\u5f97\u5230\u89e3\u51b3\uff0c\u5b83\u5c06\u63d0\u4f9b)\u66f4\u591a\u7684\u529f\u80fd\u3002\u6211\u4eec\u7684\u5386\u53f2\u8bb0\u5f55\u4f3c\u4e4e\u4e0e\u5f3a\u5927\u7684\u5feb\u7167\u9694\u79bb\u548c\u4e25\u683c\u7684\u53ef\u5e8f\u5217\u5316\u4e00\u81f4\uff0c\u8fd9\u4e24\u8005\u9664\u4e86\u9632\u6b62\u5e38\u89c1\u7684\u4f9d\u8d56\u56fe\u5f02\u5e38\u4e4b\u5916\uff0c\u8fd8\u786e\u4fdd\u4e86\u4e0e\u5b9e\u65f6\u8ba2\u5355\u7684\u517c\u5bb9\u6027\u3002\u6211\u4eec\u4e0d\u786e\u5b9a\u8fd9\u662f\u6545\u610f\u7684\uff0c\u8fd8\u662f\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u5982\u6b64\uff0c\u4f46\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0cPostgreSQL\u5e94\u8be5\u53ef\u4ee5\u81ea\u7531\u5730\u5ba3\u79f0\u8fd9\u4e9b\u66f4\u5f3a\u7684\u4e00\u81f4\u6027\u6a21\u578b\uff01\nPostgreSQL\u7684\u8d21\u732e\u8005\u6b63\u5728\u8bc4\u4f30\u4e00\u4e2a\u8865\u4e01\uff0c\u4ee5\u89e3\u51b3\u6211\u4eec\u53d1\u73b0\u7684\u5e8f\u5217\u5316\u51b2\u7a81\uff0c\u5e76\u7f16\u5199\u5173\u4e8e\u5feb\u7167\u9694\u79bb\u4e0e\u53ef\u91cd\u590d\u8bfb\u53d6\u7684\u6f84\u6e05\u6587\u6863\u3002\nELLE\u7684\u5217\u8868\u9644\u52a0\u5de5\u4f5c\u8d1f\u8f7d\u4ec5\u9650\u4e8e\u8bfb\u53d6\u548c\u9644\u52a0\u4e0e\u5217\u8868\u540c\u6784\u7684\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u65e0\u6cd5\u6d4b\u8bd5\u5220\u9664\u3001\u66ff\u6362\u6216\u5176\u4ed6\u5217\u8868\u64cd\u4f5c\uff1a\u8fd9\u4e9b\u4ee3\u7801\u8def\u5f84\u4e2d\u53ef\u80fd\u5b58\u5728\u6f5c\u5728\u95ee\u9898\u3002\u6211\u4eec\u8fd8\u6709\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u7528\u4e8e\u5bc4\u5b58\u5668\u548c\u96c6\u5408\uff0c\u5c3d\u7ba1\u652f\u6301\u8f83\u5f31\u7684\u63a8\u65ad\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\u5728PostgreSQL\u4e0a\u5b9e\u73b0\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u8986\u76d6\u66f4\u591a\u7684\u9886\u57df\u3002\n\u6211\u4eec\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u6709\u6548\u5730\u68c0\u67e5\u751a\u81f3\u5efa\u6a21\u73b0\u4ee3SQL\u6570\u636e\u5e93\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u3002\u805a\u5408\u3001\u5b50\u67e5\u8be2\u548c\u5b58\u50a8\u7684p\u3002\n..", "note_en": "PostgreSQL is a widely-known relational database system. We evaluated PostgreSQL using Jepsen\u2019s new transactional isolation checker  Elle, and found that transactions executed with serializable isolation on a single PostgreSQL instance were not, in fact, serializable. Under normal operation, transactions could occasionally exhibit G2-item: an anomaly involving a set of transactions which (roughly speaking) mutually fail to observe each other\u2019s writes. In addition, we found frequent instances of G2-item under PostgreSQL \u201crepeatable read\u201d, which is explicitly proscribed by  commonly-cited formalizations of repeatable read. As previously reported by  Martin Kleppmann, this is due to the fact that PostgreSQL \u201crepeatable read\u201d is actually snapshot isolation. This behavior is allowable due to long-discussed ambiguities in the ANSI SQL standard, but could be surprising for users familiar with the literature. A patch for the bug we found in serializability is scheduled for the next minor release, on August 13th, and the presence of G2-item under repeatable read could be readily addressed through documentation. This work was performed independently, without compensation, and conducted in accordance with the  Jepsen ethics policy.\n PostgreSQL is a major open-source relational database with a 23-year history and a broad range of features. While Jepsen\u2019s work has traditionally focused on distributed systems, our tooling is readily applicable to traditional, single-node databases. In this report, we present the results of applying Jepsen\u2019s generative concurrency testing to PostgreSQL 12.3.\n Prior to version 9.1,  PostgreSQL\u2019s documentation claimed to offer up to  serializability, \u201cas if transactions had been executed one after another, serially, rather than concurrently\u2026. The Serializable mode provides a rigorous guarantee that each transaction sees a wholly consistent view of the database.\u201d However, this was not true: PostgreSQL\u2019s \u201cserializable\u201d was in fact  snapshot isolation (SI).\n Informally, snapshot isolated systems appear to start each transaction with a fixed, instantaneous snapshot of the database, reflecting only committed state. Writes performed in a transaction appear to apply atomically at commit time, and a transaction can only commit if no other transaction has modified the same objects since the snapshot was taken. This is (as  the paper which formalized snapshot isolation made clear) not serializable: transactions whose write sets do not intersect can commit without observing each other\u2019s effects, which could lead to application-level consistency violations.\n In version 8.0, PostgreSQL\u2019s documentation  clarified that \u201cin fact PostgreSQL\u2019s Serializable mode does not guarantee serializable execution in this sense,\u201d and went on to specify that PostgreSQL lacked a predicate locking system.\n In version 9.1, PostgreSQL contributors Grittner and Ports  added support for true serializability, based on research by Cahill, R\u00f6hm, and Fekete into  serializable snapshot isolation (SSI). In short, SSI extends SI by checking, at runtime, for a dependency relationship between transactions called a  dangerous structure: a pair of adjacent read-write dependencies between three transactions. Preventing these dangerous structures, in addition to snapshot isolation\u2019s normal rules, yields only serializable executions. For the last nine years, PostgreSQL\u2019s \u201cserializable\u201d mode has justifiably  claimed to offer serializability.\n PostgreSQL\u2019s \u201crepeatable read\u201d remains snapshot isolation, but the concurrency control documentation surprisingly  does not mention the term. Instead, it offers:\n The Repeatable Read isolation level only sees data committed before the transaction began; it never sees either uncommitted data or changes committed during transaction execution by concurrent transactions\u2026 This is a stronger guarantee than is required by the SQL standard for this isolation level, and prevents all of the phenomena described in Table 13.1 except for serialization anomalies. As mentioned above, this is specifically allowed by the standard, which only describes the minimum protections each isolation level must provide.\n \u201cSerialization anomalies\u201d is a somewhat ambiguous term: the documentation simply describes it as a result which is \u201cinconsistent with all possible orderings of running those transactions one at a time\u201d. To better understand what \u201cserialization anomalies\u201d specifically entail, we devised an experiment.\n  We designed a  test harness for PostgreSQL using the  Jepsen testing library. Our test  installs PostgreSQL 12.3-1.pgdg100+1 (the current stable version) on a single Debian 10 node, or optionally connects to an existing PostgreSQL installation. We also evaluated versions 9.5.22, 10.13, and 11.8. Our test can kill PostgreSQL processes in random order to help measure crash safety, but our findings here do not require process crashes to reproduce. We used the default configuration provided by PostgreSQL\u2019s official Debian packages with only minor changes (e.g.\u00a0for binding network ports), and, during some tests, shortened autovacuum naptime and enabled more detailed logging.\n Our test workload generates  randomized transactions of append and read operations across an collection of list objects, chosen with exponential frequency. Each object is identified by a unique integer logical key. We store each object as a row in one of several tables, chosen by the hash of the key. Object keys are stored in two fields: a primary key  id, and an unindexed secondary key  sk, which we use to test access by table scans.  1 The value of each list is stored as a comma-separated  TEXT column.\n We append unique integer elements to a list identified by key (either via  id or  sk) using  INSERT ... ON CONFLICT DO UPDATE, or, alternatively, via an update, checking to see if any rows were modified, then backing off to an insert, and if  that failed, updating again. Reads return the current list of integers for a particular object, e.g.\u00a0via  SELECT (val) FROM txn0 WHERE id = ?.\n Our test applies these transactions to PostgreSQL using the JDBC PostgreSQL driver (version 42.2.12), and analyzes the resulting history using the  Elle transaction isolation checker. Elle infers a transaction dependency graph over experimentally recorded histories, and searches for cycles (and non-cyclic anomalies) in that graph. This allows us to detect a broad range of anomalies from Adya, Liskov &amp; O\u2019Neil\u2019s  Generalized Isolation Level Definitions, including G0 (dirty write), G1a (aborted read), G1b (intermediate read), G1c (cyclic information flow), G-single (read skew), and G2-item (anti-dependency cycle). We also check for internal consistency, verifying that transactions observe values consistent with their own prior writes, duplicate effects, and garbage values (e.g. elements which were never written).\n  In most respects, PostgreSQL behaved as expected: both read uncommitted and read committed prevent write skew and aborted reads. We observed no internal consistency violations. However, we have two surprising results to report. The first is that PostgreSQL\u2019s \u201crepeatable read\u201d is weaker than repeatable read, at least as defined by Berenson, Adya, Bailis, et al.\u00a0This is not necessarily wrong: the ANSI SQL standard is ambiguous. The second result, which is  definitely wrong, is that PostgreSQL\u2019s \u201cserializable\u201d isolation level isn\u2019t serializable: it allows G2-item during normal operation.\n  PostgreSQL\u2019s \u201crepeatable read\u201d isolation level is actually snapshot isolation, and we observed no SI-violating anomalies when using \u201crepeatable read\u201d. In fact, the histories we recorded were consistent with  strong snapshot isolation, a stronger consistency model which prohibits stale reads and other realtime anomalies.\n However, we observed numerous violations of repeatable read, as formally defined by Berenson, Adya, et al.\u00a0For example, consider  this history, which produced roughly 140 anti-dependency cycles per minute. Here\u2019s a short cycle from that history consisting of a trio of transactions\u2014each of which appeared to execute before the next.\n  The top transaction begins by reading key 190, and finds the list  [1 2]. The middle transaction appends 4 to key 190, resulting in the version  [1 2 4]. Since that write overwrote the state that the top transaction read, we know that the middle transaction must have executed after the top transaction. We call this relationship an  anti-dependency, and represent it as an edge labeled  rw.\n The middle transaction appended 5 to key 190, which was then visible to the bottom transaction\u2019s read of  [1 2 4 5]. This write-read dependency is represented by an edge labeled  wr. However, the bottom transaction read key 188, and did  not observe the top transaction\u2019s append of 8. That anti-dependency implies the bottom transaction must have executed before the top transaction: a cycle!\n This dependency cycle contains two anti-dependency edges, which makes it a G2 phenomenon in the language of  Adya\u2019s formalism. Since all of these reads occurred when reading objects by their primary key  2, it is also G2-item: a phenomenon expressly prohibited under Adya\u2019s formalization of repeatable read. We believe this is one type of \u201cserialization anomaly\u201d referred to in the PostgreSQL documentation.\n However, these anomalies  are allowable under ANSI SQL\u2019s definition of repeatable read, thanks to ambiguously worded plain-English definitions of prohibited phenomena. In fact, this ambiguity is part of what  prompted Berenson, Bernstein et al.\u00a0to write  A Critique of ANSI SQL Isolation Levels, and to formalize the definition of snapshot isolation in the first place. In that work, Berenson et al.\u00a0develop two interpretations of the ANSI anomalies: one strict, and one broad. They argue that the strict interpretations fail to capture behaviors which are intuitively incorrect, and that ANSI  meant to define the broad ones.\n Strict interpretations A1, A2, and A3 have unintended weaknesses. The correct interpretations are the Broad ones.\n Under the broad interpretations preferred by Berenson et al., snapshot isolation is  not comparable with repeatable read: SI allows histories RR proscribes, and vice versa. Under the strict interpretation, SI is  stronger than RR (indeed, SI is stronger than anomaly serializable!), and these G2-item anomalies are allowed under repeatable read.\n Whether PostgreSQL\u2019s repeatable-read behavior is correct therefore depends on one\u2019s interpretation of the standard. It is surprising that a database based on snapshot isolation would reject the strict interpretation chosen by the seminal paper on SI, but on reflection, the behavior  is defensible.\n  A more serious problem arose when we tested PostgreSQL\u2019s serializable isolation level: it  also exhibited G2-item under normal operation. In  this two-minute test run, Jepsen detected six cases of G2-item. For example, consider this pair of transactions, in which each failed to observe the other\u2019s insert:\n  Alternatively, consider the following trio of transactions. The top transaction missed the middle transaction\u2019s creation of key 1670, which  was observed by the bottom, read-only transaction. However, that bottom transaction failed, in turn, to observe the first transaction\u2019s creation of key 1671. Notably, the read-write transactions are serializable if taken by themselves. The read-only transaction is necessary for this cycle: it observes the effects of some, but not all, \u201clogically prior\u201d transactions.\n  Indeed, these dependency graphs correspond exactly to examples 1 (\u201cSimple Write Skew\u201d) and 2 (\u201cBatch Processing\u201d) from the PostgreSQL  Serializable Snapshot Isolation paper, shown below. Their SQL statements are different, of course\u2014but like Example 1, our first cycle involves a pair of transactions which read one key and write another, each failing to observe the other\u2019s effects; and our second involves a read-only transaction which precedes, via two adjacent rw anti-dependencies, a transaction which wrote state which the read-only transaction observed. These cycles are precisely what PostgreSQL\u2019s SSI implementation is meant to prevent!\n  Every instance of G2-item we observed under serializable isolation involved at least one read-write conflict for a  freshly inserted row. Cycles could involve rw anti-dependencies on updates to existing rows, but at least one insert appeared to be necessary.\n Following a  discussion with PostgreSQL contributors, Peter Geoghegan identified  the likely cause of this issue: the conflict detection mechanism could, given three concurrent transactions, incorrectly identify an updating transaction\u2019s transaction ID (XID) as responsible for  both the original and updated versions of a tuple, rather than using the transaction ID which originally created the tuple. By flagging the wrong transaction as a potential conflict, it allowed a transaction to commit while failing to observe a prior transaction\u2019s writes. Geoghegan, working with other members of the PostgreSQL community, has  written a patch to flag the correct transaction ID, and added a  regression test. In their testing, this appears to resolve the issue.\n This code  has gone essentially untouched since the introduction of serializable snapshot isolation in 2011. Together, we confirmed that this bug was present in PostgreSQL 9.5.22, 10.13, 11.8, 12.3, and 13; we assume it is present in every extant version.\n  In our testing of PostgreSQL 12.3, transactions executed at read committed appeared correct: we never observed G0 (dirty write), G1a (aborted read), or G1b (intermediate read). PostgreSQL \u201crepeatable read\u201d appears consistent with strong snapshot isolation, but allows G2-item, which is prohibited in formalizations of repeatable read. However, this behavior could be interpreted as consistent with ANSI SQL repeatable read. Finally, PostgreSQL \u201cserializable\u201d allows G2-item under normal operation, due to a bug in the conflict detection mechanism. A  patch has been committed, and this class of serializability violations should be resolved in the next minor release\u2014presently scheduled for August 13th.\n PostgreSQL has an  extensive suite of hand-picked examples, called  isolationtester, to verify concurrency safety. Moreover, independent testing, like Martin Kleppmann\u2019s  Hermitage has also confirmed that PostgreSQL\u2019s serializable level prevents (at least some!) G2 anomalies. Why, then, did we immediately find G2-item with Jepsen? How has this bug persisted for so long?\n PostgreSQL\u2019s isolation tests, Hermitage, and most transactional Jepsen tests (prior to Elle) relied on executing a handful of cleverly constructed transactions with hand-proven invariants. For instance,  this isolationtester specification verifies serializability by performing a sequence of transactions proposed by Fekete, O\u2019Neil, &amp; O\u2019Neil in  A Read-Only Transaction Anomaly Under Snapshot Isolation. Jepsen\u2019s  bank test is based on a narrowly-defined class of transactions which preserves a total-balance invariant under snapshot isolation. Hermitage checks for G2-item by performing a pair of  symmetric read and update transactions\u2014which  does successfully demonstrate G2-item under PostgreSQL \u201crepeatable read\u201d, but not under serializable.\n Elle, however, is different: it allows us to generate a broad class of transactions, while still inferring strict properties over the resulting histories. This property-based approach allows us to catch unexpected behaviors that no one thought to explicitly test. In this case, it identified the possibility that concurrent updates and inserts could confuse the conflict-detection mechanism into misidentifying which transaction was responsible for a conflict.\n That said, the list-append test we devised here verifies only a handful of SQL operations over a simple schema. Mature SQL databases like PostgreSQL are complex organisms with a myriad of interacting components and optimizations. Jepsen assumes that our tests exercise only a fraction of PostgreSQL\u2019s possible behaviors.\n As always, we note that Jepsen takes an experimental approach to safety verification: we can prove the presence of bugs, but not their absence. While we try hard to find problems, we cannot prove the correctness of any distributed system.\n  Users should be aware that PostgreSQL\u2019s \u201crepeatable read\u201d is in fact snapshot isolation\u2014a fact long-understood in the PostgreSQL community and previously reported by  Kleppman. Since G2-item is prohibited under common formalizations of repeatable read, users may have designed applications assuming this held true for PostgreSQL. In this case, users may wish to run selected transactions under serializable isolation instead, add explicit locking, or redesign those transactions such that they are no longer sensitive to G2-item.\n We recommend that the PostgreSQL team update their concurrency control documentation to resolve the ambiguity around \u201crepeatable read\u201d. The  current documentation does not mention the term \u201csnapshot isolation\u201d\u2014stating that PostgreSQL\u2019s \u201crepeatable read\u201d actually means snapshot isolation would immediately clarify matters. The documentation could also provide clearer guidance to users by replacing the ambiguous \u201cserialization anomaly\u201d with G-single, G2-item, and G2; SI prohibits G-single but allows G2-item and G2.\n As for whether snapshot isolation is stronger than repeatable read, one possible solution would be to adopt Berenson et al.\u2019s definitions, and state that snapshot isolation is incomparable with repeatable read: SI allows some anomalies which are prohibited under RR (e.g.\u00a0write skew), but RR allows other anomalies (e.g.\u00a0phantoms) which are prohibited under SI. Doing so would bring PostgreSQL in line with a twenty-five year thread of scholarship on transactional isolation by  Berenson,  Adya,  Bailis, et al.\n However, as Ports &amp; Grittner note in their  paper on PostgreSQL\u2019s serializable snapshot isolation, the ANSI specification  is ambiguous, and the G2-item anomalies we observed do not necessarily violate the strict interpretation of the phenomena prohibited by repeatable read. In this case, we suggest that PostgreSQL explicitly state their choice of the strict, rather than broad, interpretation.\n It appears that no version of PostgreSQL has ever guaranteed serializability. Users should be aware that concurrent update and insert transactions may exhibit G2-item. High-contention workloads are especially susceptible. The PostgreSQL team has written tests to reproduce the problem and is evaluating a patch; we recommend upgrading once the next minor release becomes available.\n One final note: our testing suggests that PostgreSQL provides (or, in the case of serializability, will provide once the G2-item bug is resolved)  more than snapshot isolation and serializability. Our histories appeared consistent with  strong snapshot isolation and  strict serializability, both of which ensure compatibility with a real-time order, in addition to preventing the usual dependency-graph anomalies. We are unsure if this is intentional, or whether it holds in all cases, but if so, PostgreSQL should feel free to claim these stronger consistency models!\n  PostgreSQL\u2019s contributors are evaluating a patch to resolve the serializability violation we discovered, and writing clarifying documentation for snapshot isolation versus repeatable read.\n Elle\u2019s list-append workload is limited to reads and appends over datatypes which are isomorphic to lists. We have no way to test deletions, replacements, or other list operations: there could be latent issues in those codepaths. We have other workloads available for registers and sets, albeit supporting weaker inferences. Both could be implemented on PostgreSQL, which could help cover additional ground.\n It seems unlikely that we can efficiently check, or even model,  all functionality provided by modern SQL databases. Aggregations, subqueries, and stored p\n......", "posttime": "2020-06-12 21:57:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u6770\u666e\u68ee,jepsen", "title": "\u6770\u666e\u68ee\uff1aPostgreSQL 12.3", "title_en": "Jepsen: PostgreSQL 12.3", "transed": 1, "url": "http://jepsen.io/analyses/postgresql-12.3", "via": "", "real_tags": ["\u6770\u666e\u68ee", "jepsen"]}, {"category": "", "categoryclass": "", "imagename": "2d94d5529d0b7c91cd5b9d44602205b3.jpg", "infoid": 1006282, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u6700\u8fd1\u7ecf\u5386\u4e86\u5f88\u591a\u8d77\u4f0f\u30025\u670830\u65e5\u661f\u671f\u516d\uff0c\u8be5\u516c\u53f8\u521b\u9020\u4e86\u5386\u53f2\uff0c\u4ed6\u4eec\u7684\u673a\u7ec4\u4eba\u5458\u9f99\u98de\u8239\u4ece\u7f8e\u56fd\u5b87\u822a\u5c40\u80af\u5c3c\u8fea\u822a\u5929\u4e2d\u5fc3\u8d77\u98de\uff0c\u8f7d\u7740\u4e24\u540d\u5b87\u822a\u5458\u8fdb\u5165\u592a\u7a7a\u3002\u4f46\u5c31\u5728\u4e00\u5929\u524d\uff0cSpaceX\u5de5\u7a0b\u5e08\u548c\u5730\u52e4\u4eba\u5458\u5728\u9759\u6001\u5c04\u51fb\u6d4b\u8bd5\u4e2d\u76ee\u7779\u4e86\u4ed6\u4eec\u7684\u7b2c\u56db\u8258\u661f\u9645\u98de\u8239\u539f\u578b(SN4)\u5728\u8bd5\u9a8c\u53f0\u4e0a\u7206\u70b8\uff0c\u4f7f\u5176\u6210\u4e3a\u8fde\u7eed\u7b2c\u56db\u4e2a\u4e22\u5931\u7684\u539f\u578b\u3002\n\u4f46\u6839\u636eSpaceX\u4e00\u540d\u5de5\u7a0b\u5e08\u548c\u9ad8\u7ba1\u6700\u8fd1\u7684\u6d88\u606f\uff0c\u4ee5\u53ca\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u53d1\u7ed9SpaceX\u5458\u5de5\u7684\u4e00\u5c01\u5185\u90e8\u7535\u5b50\u90ae\u4ef6\uff0c\u5f88\u660e\u663e\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u5168\u529b\u7814\u53d1\u661f\u9645\u98de\u8239\u539f\u578b\uff0c\u5e76\u53ef\u80fd\u5728\u5e74\u5e95\u524d\u8fdb\u884c\u8f68\u9053\u98de\u884c\u3002\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u76ee\u6807\uff0c\u4f46\u4f60\u4e0d\u80fd\u6210\u4e3a\u4e00\u5bb6\u516c\u53f8\u7684\u8d1f\u8d23\u4eba\uff0c\u8fd9\u5bb6\u516c\u53f8\u628a\u53ef\u91cd\u7528\u6027\u4f5c\u4e3a\u4e00\u4ef6\u4e8b\uff0c\u5e76\u901a\u8fc7\u60b2\u89c2\u4e3b\u4e49\u8005\u6765\u6062\u590d\u7f8e\u56fd\u672c\u571f\u7684\u53d1\u5c04\u80fd\u529b\uff01\n\u4e0d\u4e45\u524d\uff0cSpaceX\u516c\u53f8\u7684\u5de5\u7a0b\u5e08\u786e\u5b9a\u4e86SN4\u7206\u70b8\u7684\u539f\u56e0\uff0c\u79f0\u8fd9\u662f\u4e00\u6761\u63a8\u8fdb\u5242\u7ba1\u7ebf\u65ad\u5f00\u7684\u7ed3\u679c\u3002\u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u4e3b\u8981\u7684\u6db2\u4f53\u7532\u70f7\u6cc4\u6f0f\uff0c\u7136\u540e\u70b9\u71c3\uff0c\u5bfc\u81f4\u4e86\u58ee\u89c2\u7684\u7206\u70b8\uff0c\u5b8c\u5168\u6467\u6bc1\u4e86SN4\u3002\u8fd9\u4e0e\u4e4b\u524d(5\u670819\u65e5)\u9759\u6001\u7740\u706b\u6d4b\u8bd5\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u5f53\u65f6SN4\u5e95\u90e8\u9644\u8fd1\u56e0\u7532\u70f7\u7ba1\u7ebf\u7206\u88c2\u800c\u53d1\u751f\u5c0f\u706b\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u731b\u79bd\u53d1\u52a8\u673a\u5728\u7834\u88c2\u53d1\u751f\u524d\u5df2\u7ecf\u70b9\u706b\u6574\u6574\u4e24\u5206\u949f\uff0c\u6709\u6548\u5730\u5b8c\u6210\u4e86\u53d1\u52a8\u673a\u7684\u7b2c\u4e94\u6b21\u9759\u6001\u70b9\u706b\u8bd5\u9a8c\u3002\u7ed3\u5408\u5176\u4ed6\u6210\u529f\uff0cSpaceX\u7684\u603b\u5de5\u7a0b\u5e08\u6c49\u65af\u00b7\u79d1\u5c3c\u683c\u65af\u66fc(Hans K\u00f6nigsmann)\u6700\u8fd1\u8868\u793a\uff0c\u8df3\u8dc3\u6d4b\u8bd5\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u5f00\u59cb\uff0c\u8fd9\u5bf92020\u5e74\u524d\u7684\u8f68\u9053\u98de\u884c\u6765\u8bf4\u662f\u4e2a\u597d\u5146\u5934\u3002\u6b63\u5982\u4ed6\u5728\u63a5\u53d7\u5fb7\u56fd\u520a\u7269\u201c\u660e\u955c\u201d(Der Speigel)\u91c7\u8bbf\u65f6\u6240\u8bf4\uff1a\n\u201c\u6211\u5e0c\u671b\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u8fdb\u884c\u9996\u6b21\u8bd5\u98de\uff0c\u6bd4\u5982\u8bf4\uff0c\u5728150\u7c73\u7684\u9ad8\u5ea6\u8fdb\u884c\u8bd5\u98de\u3002\u6211\u4eec\u4f1a\u8fd9\u6837\u505a\u51e0\u6b21\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4eca\u5e74\u5e74\u5e95\u8fdb\u5165\u8f68\u9053\u3002\u6216\u8005\u53ef\u80fd\u9700\u8981\u66f4\u957f\u4e00\u70b9\u7684\u65f6\u95f4\u3002\u201c\u3002\n\u8fd9\u8bdd\u51fa\u81ea\u516c\u53f8\u603b\u5de5\u7a0b\u5e08\u4e4b\u53e3\uff0c\u4e0d\u80fd\u6389\u4ee5\u8f7b\u5fc3\u3002\u4ed6\u7684\u4f30\u8ba1\u662f\u6b63\u786e\u7684\uff0c\u5047\u8bbe\u8df3\u8dc3\u6d4b\u8bd5\u5728\u672a\u6765\u51e0\u5468\u5f00\u59cb\uff0c\u8f68\u9053\u98de\u884c\u53ef\u80fd\u57282020\u5e74\u5e95\u4e4b\u524d\u53d1\u751f\u3002\u7b2c\u4e00\u6b21\u6d4b\u8bd5\u5c06\u6d89\u53ca\u4e00\u4e2a\u5355\u5f15\u64ce\u539f\u578b\uff0c\u98de\u884c\u5230150\u7c73(~500\u82f1\u5c3a)\u7684\u9ad8\u5ea6\uff0c\u7136\u540e\u8fdb\u884c\u63a7\u5236\u7740\u9646\u3002\n\u8fd9\u5c06\u4eceSpaceX\u505c\u6b62\u7684StarHopper\u539f\u578b\u5f00\u59cb\uff0c\u8be5\u539f\u578b\u4e8e2019\u5e748\u670825\u65e5\u5b8c\u6210\u4e86150\u7c73\u7684\u8df3\u8dc3\u6d4b\u8bd5\u3002\u8003\u8651\u5230SpaceX\u5728\u8fc7\u53bb\u4e00\u5e74\u4e2d\u7ecf\u5386\u7684\u6240\u6709\u632b\u6298\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u5047\u8bbe\u8f68\u9053\u98de\u884c\u53ef\u80fd\u5728\u516d\u4e2a\u6708\u540e\u8fdb\u884c\uff0c\u8fd9\u6709\u70b9\u4e50\u89c2\u3002\u4f46\u8fd9\u4e0eSpaceX\u7684\u5feb\u901f\u539f\u578b\u548c\u8fed\u4ee3\u65b9\u6cd5\u662f\u4e00\u81f4\u7684\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u4ed6\u4eec\u80fd\u591f\u5feb\u901f\u5730\u521b\u5efa\u539f\u578b\uff0c\u5728\u8bbe\u8ba1\u4e0a\u6709\u5f88\u5c0f\u7684\u53d8\u5316\uff0c\u5e76\u4ece\u6bcf\u4e00\u4e2a\u9519\u8bef\u4e2d\u5b66\u4e60\u3002\u8fd9\u6b63\u662fSpaceX\u516c\u53f8\u81ea2020\u5e74\u521d\u4ee5\u6765\u4e00\u76f4\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u8981\u628a\u5b83\u4eec\u63a8\u5230\u6781\u9650\uff0c\u5feb\u901f\u66f4\u6362\uff0c\u7528\u7ec4\u5408\u540e\u7684\u6570\u636e\u6765\u6539\u5584\u6574\u4f53\u8bbe\u8ba1\u3002\u5728\u8fd9\u65b9\u9762\uff0cSpaceX\u6b63\u5728\u9075\u5faa\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u5728\u963f\u6ce2\u7f57\u65f6\u4ee3\u6240\u505a\u7684\u76f8\u540c\u65b9\u6cd5\u3002\n\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\uff0cSpaceX\u516c\u53f8\u6b63\u5728\u4f7f\u7528\u4ed6\u4eec\u7684SN5\u539f\u578b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5de5\u7a0b\u5e08\u4eec\u5728\u8be5\u516c\u53f8\u4f4d\u4e8e\u535a\u5361\u5947\u5361\u7684\u5357\u5f97\u514b\u8428\u65af\u5dde\u53d1\u5c04\u573a\u5b8c\u6210\u4e86\u8fd9\u4e00\u539f\u578b\u7684\u5efa\u9020\u3002\u6b64\u5916\uff0cCNBC\u6700\u8fd1\u8fd8\u83b7\u5f97\u4e86\u4e00\u5c01\u5168\u516c\u53f8\u8303\u56f4\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u9a6c\u65af\u514b\u5728\u90ae\u4ef6\u4e2d\u6307\u793a\u5458\u5de5\u201c\u620f\u5267\u6027\u5730\u3001\u7acb\u5373\u201d\u52a0\u5feb\u201c\u661f\u9645\u98de\u8239\u201d\u7684\u5f00\u53d1\u3002\n\u9a6c\u65af\u514b\u57286\u67086\u65e5(\u661f\u671f\u516d)\u4f20\u9605\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u4ed6\u8868\u793a\uff0c\u6240\u6709SpaceX\u4eba\u5458\u90fd\u88ab\u544a\u77e5\u201c\u8bf7\u8003\u8651SpaceX\u7684\u9996\u8981\u4efb\u52a1(\u9664\u4e86\u4efb\u4f55\u53ef\u4ee5\u964d\u4f4e\u201d\u9f99\u201c\u8fd4\u56de\u98ce\u9669\u7684\u4e8b\u60c5)--\u201d\u661f\u9645\u98de\u8239\u201c\u3002\u201d\u8003\u8651\u5230\u4e58\u5458\u9f99\u7684\u6210\u529f\u53d1\u5c04\uff0cSpaceX\u5df2\u7ecf\u5c65\u884c\u4e86\u4f5c\u4e3aNASA\u5546\u4e1a\u4e58\u5458\u8ba1\u5212\u4e00\u90e8\u5206\u7684\u8d23\u4efb\uff0c\u8fd9\u662f\u9002\u5f53\u7684\u3002\n\u8be5\u8ba1\u5212\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5236\u9020\u80fd\u591f\u8f7d\u7740\u5b87\u822a\u5458\u5f80\u8fd4\u56fd\u9645\u7a7a\u95f4\u7ad9(ISS)\u7684\u4e58\u5458\u7ea7\u822a\u5929\u5668\uff0c\u6062\u590d\u7f8e\u56fd\u56fd\u5185\u7684\u53d1\u5c04\u80fd\u529b\u3002\u673a\u7ec4\u4eba\u5458\u9f99\u662fSpaceX\u5bf9\u8be5\u9879\u76ee\u7684\u8d21\u732e\uff0c\u800c\u6ce2\u97f3\u516c\u53f8\u91c7\u53d6\u7684\u662fCST-100\u661f\u7a7a\u5ba2\u673a\u7684\u5f62\u5f0f-\u5728\u83b7\u5f97\u8ba4\u8bc1\u4e4b\u524d\uff0c\u8be5\u516c\u53f8\u4ecd\u7136\u9700\u8981\u6210\u529f\u5730\u5b8c\u6210\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u65e0\u4eba\u548c\u6709\u4eba\u4efb\u52a1\u3002\n\u968f\u7740\u201c\u4e58\u5458\u9f99\u201d\u7684\u8ba4\u8bc1\uff0cSpaceX\u516c\u53f8\u7684\u5168\u90e8\u6ce8\u610f\u529b\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u6295\u5411\u4ed6\u4eec\u7684\u4e0b\u4e00\u4ee3\u8d85\u91cd\u578b\u53d1\u5c04\u7cfb\u7edf\u3002\u4e0e\u5176\u524d\u8eab\u4e00\u6837\uff0c\u4e0b\u4e00\u6b65\u5c06\u8fdb\u884c\u4f4e\u6e29\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u7136\u540e\u5bf9\u5176\u552f\u4e00\u7684\u731b\u79bd\u53d1\u52a8\u673a\u8fdb\u884c\u9759\u6001\u70b9\u706b\u6d4b\u8bd5\u3002\u4e00\u65e6\u5b8c\u6210\uff0c\u5c31\u6709\u7406\u7531\u8ba4\u4e3aSpaceX\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u4f7f\u7528SN5\u8fdb\u884c150\u7c73\u8df3\u8dc3\u6d4b\u8bd5\u3002\n\u9664\u975e\u6709\u4efb\u4f55\u989d\u5916\u7684\u632b\u6298\uff0cSN5\u53ef\u4ee5\u5b89\u88c5\u4e00\u4e2a\u9f3b\u9525\uff0c\u895f\u7ffc\uff0c\u5e76\u5b89\u88c5\u4e09\u4e2a\u731b\u79bd\u53d1\u52a8\u673a\u6765\u6267\u884c20\u516c\u91cc(\u7ea665,600\u82f1\u5c3a\u621612\u82f1\u91cc)\u7684\u98de\u884c\uff0c\u8fd9\u5c06\u4ee5\u8d85\u97f3\u901f\u518d\u5165\u548c\u63a7\u5236\u7740\u9646\u7ed3\u675f\u3002\u8fd9\u5c06\u662f\u4f7f\u7528\u516d\u4e2a\u731b\u79bd\u53d1\u52a8\u673a\u8fdb\u884c\u5168\u9762\u8f68\u9053\u98de\u884c\u4e4b\u524d\u7684\u6700\u540e\u4e00\u6b65\uff0c\u968f\u540e\u662f\u5b8c\u6210\u661f\u9645\u98de\u8239\u7684\u8bbe\u8ba1\u5e76\u5f00\u59cb\u5546\u4e1a\u751f\u4ea7\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u516c\u53f8\u8fd8\u5c06\u81f4\u529b\u4e8e\u53d1\u5c04\u7cfb\u7edf\u7684\u8d85\u91cd\u578b\u90e8\u4ef6\u3002\u5c31\u50cf\u661f\u9645\u98de\u8239\u4e00\u6837\uff0c\u8fd9\u5c06\u5305\u62ec\u5bf9\u539f\u578b\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3001\u53d1\u52a8\u673a\u6d4b\u8bd5\u548c\u9010\u6b65\u63d0\u9ad8\u8df3\u8dc3\u6d4b\u8bd5\u3002\u4e00\u65e6\u96c6\u6210\uff0c\u53d1\u5c04\u7cfb\u7edf\u5c06\u80fd\u591f\u5c65\u884cSpaceX\u7684\u627f\u8bfa\uff0c\u5373\u63d0\u4f9b\u6709\u6548\u8f7d\u8377\u548c\u673a\u7ec4\u4eba\u5458\u670d\u52a1\uff0c\u4ee5\u652f\u6301Artemis\u9879\u76ee\uff0c\u5f00\u5c55\u6708\u7403\u65c5\u6e38\uff0c\u5e76\u5c06\u4eba\u9001\u4e0a\u706b\u661f\u3002\nNASA\u548cSpaceX\u90fd\u5e0c\u671b\u5728\u672a\u6765\u51e0\u5e74\u5185\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002\u5373\u4f7f\u65f6\u95f4\u8868\u8bc1\u660e\u662f\u7075\u6d3b\u7684\uff0c\u90a3\u4e5f\u80af\u5b9a\u662f\u4ee4\u4eba\u5174\u594b\u7684\u65f6\u523b\uff01", "note_en": "SpaceX has had a lot of ups and downs lately. On  Saturday, May 30th, the company made history when their  Crew Dragon spacecraft took off from the NASA Kennedy Space Center, carrying two astronauts to space. But just a day before, SpaceX engineers and ground crews watched their fourth  Starship prototype (SN4)  explode on its testbed during a static fire test, making it the fourth prototype in a row to be lost.\n But according to  recent news from a SpaceX engineer and executive, as well as an  internal email from Elon Musk to SpaceX employees, it is clear that the company is all-in with the  Starship prototype and could conduct an orbital flight before the end of the year. An ambitious goal, but you don\u2019t get to be the head of a company that makes reusability a thing and restores domestic launch capability to US soil by being a pessimist!\n  Not long ago, SpaceX engineers determined the cause of the SN4 explosion, saying that it was the result of a propellant line disconnecting. This led to a major liquid methane leak that then ignited, leading to the spectacular explosion that completely destroyed the SN4. This is similar to what happened during the previous static fire test (on May 19th) where a small fire broke out near the base of SN4 due to a burst methane line.\n   Nevertheless, the Raptor engine had fired for a full two-minutes before the rupture took place, which effectively completed the fifth static fire test of the engine. Combined with other successes, SpaceX\u2019s chief engineer Hans K\u00f6nigsmann recently indicated that hop tests could begin shortly, which bodes well for an orbital flight before 2020 is over. As he said during an interview with the German publication   Der Speigel:\n \u201c I expect first test flights in, say, 150 meters altitude in the coming weeks. We\u2019ll do that a couple of times. If everything works out, we want to go into orbit at the end of the year. Or maybe it will take a little longer.\u201c\n Coming from the company\u2019s chief engineer, this should not be taken idly. And he is correct in his estimation that an orbital flight could happen before the end of 2020, assuming that hop tests begin in the coming weeks. The first test would involve a single-engine prototype flying to an altitude of 150 m (~500 ft) and then making a controlled landing.\n This would pick up where SpaceX left off with the  Starhopper prototype, which completed a 150-m hop test on  August 25th, 2019. Given all of the setbacks SpaceX has experienced this past year, one would think that it\u2019s a bit optimistic to assume that an orbital flight could take place just six months from now. But this is in keeping with SpaceX\u2019s rapid prototyping and iterative approach.\n   This method allows them to create prototypes rapidly, with small variations in design, and learn from every mistake. This is precisely what SpaceX has been doing since early 2020, which is to push them to their limits, replace them quickly, and use the combined data to improve the overall design. In this respect, SpaceX is following the same approach that NASA did back in the Apollo Era.\n True to this approach, SpaceX is moving ahead with tests using their SN5 prototype, which engineers finished constructing at the company\u2019s South Texas Launch Sight at Boca Chica. In addition, a company-wide email was recently obtained by CNBC, in which Musk instructed employees to accelerate the development of the  Starship \u201cdramatically and immediately.\u201d\n According to Musk, who circulated the email on Saturday, June 6th, all SpaceX personnel were told to \u201cPlease consider the top SpaceX priority (apart from anything that could reduce Dragon return risk) to be Starship.\u201d This is appropriate considering that with the successful launch of the Crew Dragon, SpaceX has fulfilled its responsibilities as part of NASA\u2019s Commercial Crew Program.\n  The aim of this program is to restore domestic launch capability to the US by creating crew-rated spacecraft that can carry astronauts to and from the International Space Station (ISS). The  Crew Dragon was SpaceX\u2019s contribution to the program while Boeing\u2019s took the form of the   CST-100 Starliner \u2013 which still needs to complete a successful uncrewed and crewed mission to the ISS before it can be certified.\n  With the Crew Dragon certified, SpaceX\u2019s full attention can now be directed towards their next-generation super-heavy launch system. As with its predecessors, the next step will be to conduct a cryogenic load test followed by a static fire test of its lone Raptor engine. Once that\u2019s done, it\u2019s reasonable to assume SpaceX will mount a 150-meter hop test using the SN5 in the next few weeks.\n Barring any additional setbacks, the SN5 could be fitted with a nosecone, flaps, and be fitted with three Raptor engines to perform a 20 km (about 65,600 ft or 12 mi) flight, which will conclude with a supersonic reentry and controlled landing. This will be the last step before a full-scale orbital flight using six Raptor engines can take place, followed by the finalizing of the  Starship\u2018s design and the start of commercial production.\n  In the meantime, the company will also be working on the  Super Heavy element of the launch system. Like the  Starship, this will involve putting prototypes through pressure testing, engine tests, and progressively higher hop tests. Once integrated, the launch system will be able to fulfill SpaceX\u2019s commitment to provide payload and crew services in support of Project Artemis, conduct lunar tourism, and send people to Mars.\n Both NASA and SpaceX hope to accomplish this in the next few years. Even if the timetables proves flexible, it\u2019s sure to be an exciting time!", "posttime": "2020-06-12 21:39:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u98de\u8239,prototypes,spacex", "title": "\u4e00\u65e6\u661f\u9645\u98de\u8239\u539f\u578b\u505c\u6b62\u7206\u70b8\uff0c\u6211\u4eec\u4eca\u5e74\u5c31\u53ef\u4ee5\u770b\u5230\u8f68\u9053\u53d1\u5c04", "title_en": "Once Starship Prototypes stop Exploding we could see an Orbital Launch this Year", "transed": 1, "url": "https://www.universetoday.com/146472/once-starship-prototypes-are-done-exploding-we-could-see-an-orbital-launch-this-year/", "via": "", "real_tags": ["\u98de\u8239", "spacex"]}, {"category": "", "categoryclass": "", "imagename": "29f431b683968bc8e10189be95343339.jpg", "infoid": 1006280, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e09\u665a\u4e0a\uff0cZFS\u7684\u521b\u59cb\u5f00\u53d1\u8005Matthew Ahrens\u5411OpenZFS\u9879\u76ee\u63d0\u4ea4\u4e86\u4e00\u4e2a\u672c\u5e94\u662f\u7b80\u5355\u7684\u3001\u6ca1\u6709\u4e89\u8bae\u7684\u8bf7\u6c42\uff1a\u5728\u4e0d\u5f15\u8d77\u6280\u672f\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u8865\u4e01\u5220\u9664\u4e86\u5bf9\u5974\u96b6\u7684\u5f15\u7528\uff0c\u800c\u4ee3\u4e4b\u4ee5\u5bb6\u5c5e\u3002\n\u8fd9\u4e2a\u8865\u4e01\u4e0d\u4f1a\u6539\u53d8\u4ee3\u7801\u7684\u8fd0\u884c\u65b9\u5f0f-\u5b83\u53ea\u662f\u5728\u603b\u517148\u884c\u4ee3\u7801\u4e2d\u66f4\u6539\u53d8\u91cf\u540d\u79f0\uff0c\u4f7f\u5176\u4e0eLinux\u4e0a\u6e38\u8bbe\u5907\u6620\u5c04\u5668\u7684\u672f\u8bed\u4e00\u81f4(\u5220\u9664\u4e8642\u884c\uff0c\u589e\u52a0\u4e8648\u884c\uff1b\u8fd8\u7565\u5fae\u6269\u5c55\u4e86\u4e00\u4e2a\u6ce8\u91ca\u5757\uff0c\u4ee5\u4f7f\u5176\u66f4\u5177\u63cf\u8ff0\u6027)\u3002\n\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u6124\u6012\u7684\u53cd\u5bf9\u8005\u7a81\u7136\u51fa\u73b0\u5728\u62c9\u53d6\u8bf7\u6c42\u4e0a\uff0c\u8bc4\u8bba\u5f88\u5feb\u5c31\u5bf9\u975e\u8d21\u732e\u8005\u5173\u95ed\u4e86\u3002\u6211\u7b2c\u4e00\u6b21\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u662f\u4f5c\u4e3ar/zfs subreddit\u7684\u4e3b\u6301\u4eba\uff0c\u4e00\u65e6\u5bf9\u516c\u5173\u672c\u8eab\u7684\u8bc4\u8bba\u4e0d\u518d\u53ef\u80fd\uff0c\u6ea2\u51fa\u7684\u5185\u5bb9\u5c31\u4f1a\u6cc4\u6f0f\u51fa\u6765\u3002\n\u5bf9\u4e8e\u4e3a\u4ec0\u4e48\u8981\u6253\u8865\u4e01\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u51e0\u4e2a\u6709\u6548\u7684\u7b54\u6848\u3002\u5bf9\u4e8e\u90a3\u4e9b\u9664\u4e86\u6e05\u6670\u4e4b\u5916\u62d2\u7edd\u601d\u8003\u4efb\u4f55\u4e8b\u60c5\u7684\u4eba\u6765\u8bf4\uff0c\u4efb\u4f55\u6280\u672f\u548c\u4eba\u7c7b\u5974\u5f79\u4e4b\u95f4\u90fd\u6ca1\u6709\u5f88\u597d\u7684\u63cf\u8ff0\u5173\u7cfb-\u800c\u4e14\u4eba\u7c7b\u8fd9\u4e2a\u672f\u8bed\u8fdc\u8fdc\u65e9\u4e8e\u4efb\u4f55\u5de5\u7a0b\u6216\u6280\u672f\u7528\u9014\u3002\u66ff\u6362\u4e3b/\u4ece\u672f\u8bed\u901a\u5e38\u4f1a\u4ea7\u751f\u66f4\u7cbe\u786e\u3001\u66f4\u5bb9\u6613\u53d1\u73b0\u7684\u6280\u672f\u63cf\u8ff0\u3002\nOpenZFS\u5e76\u4e0d\u662f\u8fd9\u79cd\u6d88\u9664\u6b67\u4e49\u52aa\u529b\u7684\u524d\u6cbf\u3002\u4e00\u4e9b\u503c\u5f97\u6ce8\u610f\u7684\u9879\u76ee\u5df2\u7ecf\u653e\u5f03\u5e76\u66ff\u6362\u4e86\u4e3b/\u4ece\u672f\u8bed\uff0c\u5305\u62ecBIND DNS\u670d\u52a1\u5668\u3001Drupal Web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u548cRedis\u6570\u636e\u5b58\u50a8\u3002\u7279\u522b\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u867d\u7136\u8fd9\u4e09\u4e2a\u9879\u76ee\u90fd\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u539f\u59cb\u4e3b/\u4ece\u672f\u8bed\uff0c\u4f46\u66ff\u6362\u7684\u672f\u8bed\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\u63cf\u8ff0\u7684\u5b9e\u9645\u5173\u7cfb\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e2a\u9879\u76ee\u6765\u8bf4\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684\u539f\u59cb\u672f\u8bed\u6765\u8bf4\uff0c\u6700\u660e\u667a\u7684\u66ff\u4ee3\u65b9\u6cd5\u4e5f\u662f\u4e0d\u540c\u7684\u3002\n\u5bf9\u4e8eBIND DNS\u670d\u52a1\u5668\uff0cInternet\u7cfb\u7edf\u8054\u76df\u5c06\u4e3b/\u4ece\u670d\u52a1\u5668\u66ff\u6362\u4e3a\u4e3b/\u6b21\u670d\u52a1\u5668\u3002\u5bf9\u4e8eDrupal\u6765\u8bf4\uff0c\u66ff\u4ee3\u65b9\u6848\u662f\u4e3b\u670d\u52a1\u5668/\u526f\u672c\u670d\u52a1\u5668\uff0c\u800c\u5bf9\u4e8eRedis\u6765\u8bf4\uff0c\u5b83\u662f\u9886\u5bfc\u8005/\u8ffd\u968f\u8005\u3002\u4e0d\u540c\u7684\u66ff\u6362\u672f\u8bed\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u662f\u56e0\u4e3a\u771f\u6b63\u7684\u529f\u80fd\u4e0d\u540c--\u56e0\u6b64\uff0c\u5bf9\u539f\u59cb\u672f\u8bed\u7684\u66ff\u6362\u66f4\u80fd\u63cf\u8ff0\u5e55\u540e\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u5982\u524d\u6240\u8ff0\uff0cOpenZFS\u7edd\u4e0d\u662f\u7b2c\u4e00\u4e2a\u66f4\u65b0\u5176\u4ee3\u7801\u5e93\u548c\u6587\u6863\u4ee5\u5220\u9664\u5bf9\u5974\u96b6\u5236\u7684\u5f15\u7528\u7684\u9879\u76ee\u3002\u5c3d\u7ba1\u5bf9\u4e3b/\u4ece\u672f\u8bed\u7684\u6295\u8bc9\u81f3\u5c11\u65e9\u572820\u4e16\u7eaa90\u5e74\u4ee3\u5c31\u5df2\u7ecf\u6d41\u4f20\u5f00\u6765\uff0c\u4f46\u7f8e\u56fd\u4e3b\u6d41\u5a92\u4f53\u7b2c\u4e00\u6b21\u5927\u89c4\u6a21\u66dd\u5149\u662f\u57282003\u5e74\uff0c\u5f53\u65f6\u8be5\u53bf\u7684\u4e00\u540d\u9ed1\u4eba\u96c7\u5458\u5c31\u5f55\u50cf\u5e26\u8bbe\u5907\u4e0a\u7684\u4e3b/\u4ece\u6807\u7b7e\u63d0\u51fa\u4e86\u6295\u8bc9\u3002\n\u9664\u4e86\u5177\u4f53\u9879\u76ee\u4e2d\u7684\u5177\u4f53\u672f\u8bed\u66f4\u65b0\u5916\uff0cIETF(\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4)\u57282018\u5e74\u53d1\u5e03\u4e86\u4e00\u4efd\u5907\u5fd8\u5f55\uff0c\u627f\u8ba4\u5e76\u6982\u8ff0\u4e86\u95ee\u9898\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e3b/\u4ece\u548c\u9ed1\u540d\u5355/\u767d\u540d\u5355\u672f\u8bed\u7684\u5177\u4f53\u66ff\u4ee3\u65b9\u6848\u3002\n\u867d\u7136\u6280\u672f\u51c6\u786e\u6027\u548c\u5148\u4f8b\u662f\u4ece\u4ee3\u7801\u5e93\u4e2d\u5220\u9664\u4e3b/\u4ece\u672f\u8bed\u7684\u6b63\u5f53\u7406\u7531\uff0c\u4f46\u5b83\u4eec\u5f53\u7136\u4e0d\u662f\u552f\u4e00\u7684\u539f\u56e0\u3002Ahrens&#39\uff1bOwner Pull Request\u5f88\u6709\u8bf4\u670d\u529b\u5730\u63cf\u8ff0\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u4eba\u7c7b\u5974\u96b6\u5236\u7684\u53ef\u6015\u5f71\u54cd\u7ee7\u7eed\u5f71\u54cd\u7740\u793e\u4f1a\u3002\u5728\u8ba1\u7b97\u673a\u8f6f\u4ef6\u4e2d\u968f\u610f\u4f7f\u7528\u672f\u8bed\u201c\u5974\u96b6\u201d\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u6307\u7684\u662f\u4eba\u7c7b\u75db\u82e6\u7684\u7ecf\u5386\u3002\n\u8fd9\u4e0d\u5e94\u8be5\u6709\u4ec0\u4e48\u4e89\u8bae\uff0c\u5373\u4f7f\u8fd9\u662f\u7b2c\u4e00\u6b21\u6295\u7a3f\u4eba\u7684\u9a7e\u8f66\u62c9\u8f66\u8bf7\u6c42\u3002\u5f53\u7136\uff0cAhrens\u5e76\u975e\u5982\u6b64-\u4ed6\u662f\u4ece2001\u5e74\u5f00\u59cb\u521b\u5efaSun Microsystems ZFS\u7684\u4e09\u4f4d\u5f00\u53d1\u4eba\u5458\u4e4b\u4e00\uff0c\u4eca\u5929\u4ed6\u4ecd\u7136\u662fOpenZFS\u9879\u76ee\u7684\u4e3b\u8981\u5f00\u53d1\u4eba\u5458\u3002\n\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f88\u660e\u663e\uff0c\u4e00\u4e2a\u4eba\u5bf9\u968f\u610f\u7684\u5974\u96b6\u5236\u7c7b\u6bd4\u7684\u53cd\u5e94\u4e0d\u4f1a\u5426\u5b9a\u53e6\u4e00\u4e2a\u4eba\u4e0e\u5974\u96b6\u5236\u7684\u5386\u53f2\u73b0\u5b9e\u53ca\u5176\u6301\u7eed\u7684\u4ee3\u9645\u5f71\u54cd\u7684\u7ecf\u5386\u3002\nAhrens&39\uff1bPull\u8bf7\u6c42\u5df2\u7ecf\u7531\u9996\u5e2d\u5f00\u53d1\u4eba\u5458Brian Behlendorf\u548cRyan Moeller\u5ba1\u6838\uff0c\u5e76\u5408\u5e76\u5230OpenZFS\u9879\u76ee\u5e93\u4e2d\u3002", "note_en": "On Wednesday evening, ZFS founding developer Matthew Ahrens submitted what should have been a simple, non-controversial pull  request to the OpenZFS project: wherever possible without causing technical issues, the patch removed references to &#34;slaves&#34; and replaced them with &#34;dependents.&#34;\n This patch in question doesn&#39;t change the way the code functions\u2014it simply changes variable names in a way that brings them in conformance with Linux upstream  device-mapper\u00a0terminology, in 48 total lines of code (42 removed and 48 added; with one comment block expanded slightly to be more descriptive).\n But this being the Internet, unfortunately, outraged naysayers descended on the pull request, and the comments were quickly closed to non-contributors. I first became aware of this as the moderator of the r/zfs  subreddit where the overflow spilled once comments on the PR itself were no longer possible.\n  There are several valid answers to the &#34;Why patch?&#34; question. For those who refuse to think of anything but clarity, there is no good descriptive relationship between any technology and human slavery\u2014and the human term far predates any engineering or technical use. Replacing &#34;master/slave&#34; terminology generally results in a more precise, easily discoverable technical description.\n OpenZFS is not on the leading edge of this disambiguation effort. Some notable projects that have discarded and replaced master/slave terminology include the BIND DNS server, Drupal Web application framework, and Redis datastore. It is particularly telling that, although all three projects used the same original &#34;master/slave&#34; terms, the replacements were different. That&#39;s because the actual relationship described is different in each project, and so the most sensible replacement for the same original term is different for each project.\n For the BIND DNS server, the Internet Systems Consortium replaced master/slave with primary/secondary. For Drupal, the replacement is primary/replica, and for Redis, it&#39;s leader/follower. The different replacement terms exist because the real functions are different\u2014and the replacement for the original terminology is therefore more descriptive of what&#39;s actually happening underneath the hood.\n  As mentioned previously, OpenZFS is by no means the first project to update its codebase and documentation to remove references to slavery. Although complaints about master/slave terminology circulated at least as far back as the 1990s, the first large mainstream American exposure came from Los Angeles in 2003, where a black employee of the county filed a  complaint concerning master/slave labels on videotape devices.\n In addition to specific terminology updates in specific  projects, the IETF (Internet Engineering Task Force) published a  memo\u00a0in 2018 acknowledging and outlining the problem and offering specific alternatives to both master/slave and blacklist/whitelist terminology.\n  While technical accuracy and precedent are valid reasons to remove master/slave terminology from a codebase, they are of course not the only reason. Ahrens&#39; own pull request describes this eloquently enough:\n The horrible effects of human slavery continue to impact society. The casual use of the term &#34;slave&#34; in computer software is an unnecessary reference to a painful human experience.\n There should be nothing controversial about this, even if this were a drive-by pull request from a first-time contributor. Ahrens, of course, is anything but\u2014he was one of the three founding Sun Microsystems ZFS developers beginning in 2001, and he remains a lead developer of the OpenZFS project today.\n More importantly, it should be obvious that one person&#39;s impervious reaction to casual slavery-based analogies does not negate another person&#39;s experiences with slavery&#39;s historical reality and its ongoing generational effects.\n Ahrens&#39; pull request has been reviewed by fellow lead developers Brian Behlendorf and Ryan Moeller and merged into the OpenZFS project repository.", "posttime": "2020-06-12 21:06:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ee3\u7801,\u653b\u51fb\u6027,removed,\u672f\u8bed", "title": "OpenZFS\u4ece\u5176\u4ee3\u7801\u4e2d\u5220\u9664\u4e86\u653b\u51fb\u6027\u672f\u8bed", "title_en": "OpenZFS Removed Offensive Terminology From Its Code", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/06/openzfs-removed-master-slave-terminology-from-its-codebase/", "via": "", "real_tags": ["\u4ee3\u7801", "\u653b\u51fb\u6027", "removed", "\u672f\u8bed"]}]