[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1000784, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u7f16\u5199\u8334\u9999\uff0c\u5e76\u4e3a\u5b83\u7684\u7f16\u8bd1\u5668\u505a\u8d21\u732e\u3002\u7531\u4e8e\u5b83\u662f\u4e00\u79cd\u7f16\u8bd1Tolua\u7684\u8bed\u8a00\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u4e86\u89e3Lua\u3002\u672c\u6587\u5c06\u96c6\u4e2d\u8ba8\u8bbaLua(\u4e0d\u8fc7\u6211\u4f1a\u5728\u811a\u6ce8\u4e2d\u4e0d\u65f6\u63d0\u5230\u8334\u9999)\u3002\nLua\u662f\u4e00\u79cd\u6574\u6d01\u3001\u4f18\u96c5\u3001\u76f8\u5bf9\u7b80\u5355\u7684\u8bed\u8a00\u3002\u6211\u53d1\u73b0\u5b83\u7279\u522b\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5b83\u53ef\u4ee5\u5d4c\u5165\u5230\u5176\u4ed6\u7a0b\u5e8f\u4e2d\uff1b\u80fd\u591f\u627f\u8f7d\u591a\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u7f16\u7a0b\uff1b\u4ee5\u53ca\u5b83\u7684\u4e00\u4e2a\u5b9e\u73b0LuaJIT\u7684\u51fa\u8272\u6027\u80fd\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u5b83\u7ed9\u4eba\u7684\u611f\u89c9\u66f4\u50cf\u662f\u4e00\u4e2a\u66f4\u4f18\u96c5\u3001\u66f4\u6709\u8282\u5236\u7684JavaScript--\u5b83\u652f\u6301\u5c3e\u90e8\u8c03\u7528\u6d88\u9664[1]\u548c\u534f\u7a0b\uff0c\u5b83\u6ca1\u6709\u4ee4\u4eba\u56f0\u60d1\u7684var/let\u533a\u5206(\u5c3d\u7ba1\u5b83\u5728Lua5.4\u4e4b\u524d\u6ca1\u6709\u50cfconst\u8fd9\u6837\u7684\u7279\u6027)\uff0c\u5e76\u4e14\u5b83\u6ca1\u6709\u5c06\u7c7b\u8bed\u6cd5\u4f18\u5148\u4e8e\u5176\u4ed6\u98ce\u683c\u7684\u7f16\u7a0b(\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u53ef\u4ee5\u5728Lua\u4e2d\u4f7f\u7528\u5143\u8868\u8fdb\u884c\uff0c\u4f46\u662f\u6ca1\u6709\u50cf\u5728JS\u4e2d\u90a3\u6837\u7ed9\u51fa\u7279\u6b8a\u7684\u8bed\u6cd5)\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u5b83\u6709\u4e00\u4e9b\u65e0\u7591\u662f\u53e4\u602a\u7684\u65b9\u9762-\u6570\u7ec4\u548c\u5b57\u5178\u88ab\u7edf\u4e00\u5230\u8868\u4e2d\uff0c\u5176\u6574\u6570\u7d22\u5f15\u4ece1\u5f00\u59cb\uff1b\u6807\u51c6\u5e93\u975e\u5e38\u5c0f\uff0c\u8fd9\u662f\u5bf9\u5b83\u7684\u9002\u7528\u6027\u7684\u8ba4\u53ef\uff1b\u5b83\u50cfJavaScript\u4e00\u6837\uff0c\u4f7f\u5f97\u53d8\u91cf\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5168\u5c40\u7684\uff0c\u53ea\u6709\u5728\u60a8\u8981\u6c42\u7684\u65f6\u5019\u624d\u662f\u5c40\u90e8\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\u3002\u5947\u602a\u7684\u662f\uff0c\u5b83\u8fd8\u652f\u6301\u4e00\u79cd\u975e\u5e38\u4e0d\u5e38\u89c1\u7684\u8bed\u8a00\u7279\u6027\uff1a\u591a\u4e2a\u8fd4\u56de\u503c(\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u201c\u500d\u6570\u201d)\u3002\u8fd9\u662f\u6211\u4eec\u4eca\u5929\u8981\u8be6\u7ec6\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u4e2a\u8bdd\u9898\u3002\n\u7531\u4e8eLua\u662f\u4e00\u79cd\u52a8\u6001\u8bed\u8a00(\u4f8b\u5982\uff0c\u4e0eGo\u76f8\u53cd)\uff0c\u56e0\u6b64\u4ee5\u4e00\u79cd\u76f8\u5f53\u5947\u602a\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u591a\u4e2aurn\u3002\u8fd9\u5e76\u6ca1\u6709\u50cf\u6211\u5e0c\u671b\u7684\u90a3\u6837\u5728Lua\u7684\u6587\u6863\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u63a2\u8ba8\uff0c\u6240\u4ee5\u6211\u60f3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u7ad9\u5f0f\u8d44\u6e90\uff0c\u89e3\u91ca\u6211\u6240\u80fd\u60f3\u5230\u7684\u5173\u4e8e\u8be5\u8bed\u8a00\u8fd9\u4e00\u7279\u6b8a\u90e8\u5206\u7684\u6240\u6709\u5185\u5bb9\u3002\n\u5267\u900f\uff1a\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u60a8\u5173\u5fc3\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e58\u6570\u5c06\u4f1a\u53d8\u5f97\u5e73\u6de1\u65e0\u5947\u3002\u5b83\u4eec\u4f7f\u7528\u8d77\u6765\u5f88\u7b28\u62d9\uff0c\u6709\u5f88\u591a\u95ee\u9898\uff0c\u4f1a\u5e26\u6765\u7ef4\u62a4\u98ce\u9669\uff0c\u800c\u4e14(\u636e\u6211\u6240\u77e5)\u5b83\u4eec\u7684\u6027\u80fd\u5e76\u4e0d\u6bd4\u5b83\u4eec\u7684\u4e3b\u8981\u66ff\u4ee3\u4ea7\u54c1--\u8868\u597d\u591a\u5c11\u3002\u8fd9\u4e0d\u662f\u4e00\u7bc7\u975e\u5e38\u6709\u7528\u7684\u6587\u7ae0\uff0c\u9664\u975e\u60a8\u9700\u8981\u4e86\u89e3Lua\u884c\u4e3a\u7684\u7ec6\u8282\u3002\n\u5728Lua\u4e2d\u6709\u4e09\u79cd\u4e3b\u8981\u65b9\u5f0f\u6765\u8868\u793a\u591a\u503c\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u7528\u9014\u3002\u4e0b\u9762\u7684\u6bcf\u4e2a\u4ee3\u7801\u7247\u6bb5\u90fd\u4f1a\u751f\u6210\u76f8\u540c\u7684\u591a\u503c\uff1a\n\u591a\u503c\u6587\u5b57\uff1a1\u30012\u30013\u3002(\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u5305\u62ec\u50cf{1\uff0c2\uff0c3}\u8fd9\u6837\u7684\u53ef\u7f16\u8f91\u6587\u5b57)\u3002\n\u51fd\u6570\u4e2d\u7684vararg\uff0c.\uff1a\u5c40\u90e8\u51fd\u6570x(.)\u3002\u56de\u6765..\u3002\u7ed3\u675fx(1\uff0c2\uff0c3)\n\u672c\u5730\u51fd\u6570Two_Values()return&#34\uff1bFirst&#34\uff1b\uff0c&#34\uff1bSecond&#34\uff1bEnd local tab={Two_Values()}print(tab[1]\uff0ctab[2])--print&#34\uff1bfirst Second&#34\uff1b\n\u5c40\u90e8\u51fd\u6570multival_first(x\uff0c.)\u3002RETURN x END PRINT(MULVAL_FIRST(1\uff0c2\uff0c3))--PRINTS&#34\uff1b1&#34\uff1bLOCAL\u51fd\u6570MULVAL_REST(x\uff0c.)\u3002\u56de\u6765..\u3002End Print(multival_rest(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3&#34\uff1bPrint(SELECT(2\uff0c1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3&#34\uff1b\u4e0e\u6700\u540e\u4e00\u884c\u76f8\u540c\u3002\n\u4e3a\u4e86\u4ece\u591a\u503c\u7684\u672b\u5c3e\u83b7\u5f97\u503c\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u9879\u3002\u7b2c\u4e00\u4e2a\u662f\u9012\u5f52\uff1a\n\u5c40\u90e8\u51fd\u6570INCRYMER_EACH_VALUE(FIRST\uff0c.)\u3002\u5982\u679cFIRST\uff0c\u5219\u8fd4\u56deFIRST+1\uff0cINCREMER_EACH_VALUE(.)\u3002End End Print(INCREMER_EACH_VALUE(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b2 3 4&#34\uff1b\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u5c06\u591a\u4e2a\u503c\u6253\u5305\u5230\u4e00\u4e2a\u8868\u4e2d\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4e0b\u9762\u6f14\u793a\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff1a\n--1.\u53ef\u4ee5\u5c06Multival\u76f4\u63a5\u6253\u5305\u5230\u8868\u6587\u672c\u51fd\u6570pack_multival(.)\u3002return{.}end--Lua\u5bf9\u8868\u7684\u9ed8\u8ba4\u6253\u5370\u4ec5\u663e\u793a\u6807\u8bc6\uff1b\u6211\u4eec\u5c06\u6539\u4e3a--\u6253\u5370\u957f\u5ea6\u3002print(#pack_multival(1\uff0c2\uff0c3))--prints&#34\uff1b3&#34\uff1b--2.\u60a8\u53ef\u4ee5\u4f7f\u7528table.pack\uff0c\u5b83\u5185\u7f6e\u4e8eLua 5.2\u548c\u66f4\u9ad8\u7248\u672c\u7684local tab=table.pack(1\uff0c2\uff0c3)print(#tab)--prints&#34\uff1b3&#34\uff1b--table.pack\u8fd8\u4f1a\u5728\u5b83\u8fd4\u56de\u7684\u8868\u4e0a\u8bbe\u7f6e&#34\uff1bn&#34\uff1b\u5b57\u6bb5\u3002\u8fd9\u6bd4\u4f7f\u7528#tab\u66f4\u6709\u6548\uff0c\u540e\u8005\u5728\u8868\u4e2d\u8fed\u4ee3\u3002\u6253\u5370(\u9009\u9879\u5361\u3002n)--\u6253\u5370&#34\uff1b3&#34\uff1b\n\u5f53\u60a8\u5f00\u59cb\u4f7f\u7528\u591a\u4e2a\u6570\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\u53ea\u8981\u60a8\u6b63\u5728\u4f7f\u7528\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u7684List\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u5217\u8868\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u6765\u8868\u793a\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u503c\u4f3c\u4e4e\u5e94\u8be5\u662f\u4e0d\u9519\u7684\u548c\u53ef\u9884\u6d4b\u7684\u3002\n\u5982\u679c\u60a8\u5c1d\u8bd5\u4f7f\u7528\u591a\u503c\u5305\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u6765\u81ea\u4e8e\u671f\u671b\u5b83\u4eec\u4ee5\u4e0e\u5176\u4f59Luados\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u7b80\u800c\u8a00\u4e4b\uff0cLua\u7684\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u6240\u8c13\u7684\u8bcd\u5178\u4f5c\u7528\u57df\u3002\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u662f\u60a8\u5728\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u770b\u5230\u7684\u5305\u542b\u53d8\u91cf\u5b9a\u4e49\u7684\u4ee3\u7801\u5757\u3002\u5176\u4ed6\u51fd\u6570\u4ee5\u4ec0\u4e48\u987a\u5e8f\u8c03\u7528\uff0c\u6216\u8005\u5b83\u4eec\u662f\u5426\u88ab\u8c03\u7528\u90fd\u65e0\u5173\u7d27\u8981-\u5c40\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u53ea\u9700\u67e5\u770b\u4ee3\u7801\u7ed3\u6784\u5373\u53ef\u786e\u5b9a\u3002\u8fd9\u4e0e\u52a8\u6001\u4f5c\u7528\u57df\u76f8\u53cd\uff0c\u5728\u52a8\u6001\u4f5c\u7528\u57df\u4e2d\uff0c\u5728\u7ed9\u5b9a\u70b9\u5b9a\u4e49\u7684\u53d8\u91cf\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u672c\u8eab\u7684\u8fd0\u884c\u65f6\u3002Lua\u7684\u5168\u5c40\u53d8\u91cf\u6709\u6548\u5730\u4f7f\u7528\u4e86\u52a8\u6001\u4f5c\u7528\u57df\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5f15\u7528\u591a\u503c\u53ea\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u4e3a\u5176\u8fd4\u56de\u503c\u8c03\u7528\u51fd\u6570\u3001\u6309\u5b57\u9762\u610f\u601d\u63d2\u5165\u7528\u9017\u53f7\u5206\u9694\u7684\u591a\u503c\u6216\u4f7f\u7528vararg\u7b26\u53f7.\u3002\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u6700\u540e\u4e00\u4e2a\u6848\u5b50\u3002\n\u5f53\u4f60\u4f7f\u7528..\u3002\u5728\u51fd\u6570\u7b7e\u540d\u4e2d\uff0c\u5fc5\u987b\u653e\u5728\u53c2\u6570\u5217\u8868\u7684\u672b\u5c3e\u3002(\u8fd9\u5c31\u662f\u963b\u6b62\u60a8-\u81f3\u5c11\u5728\u8bed\u6cd5\u4e0a-\u8bbf\u95ee.\u7684\u672b\u5c3e\u7684\u539f\u56e0\u3002\u800c\u65e0\u9700\u5c06\u6574\u4e2a\u5185\u5bb9\u8d4b\u7ed9\u5355\u4e2a\u53d8\u91cf\u3001\u9012\u5f52\u904d\u5386\u5b83\u6216\u5c06\u5176\u6253\u5305\u5230\u8868\u4e2d\u3002)\u3002\n\u4f60\u4e5f\u4e0d\u80fd\u628a\u6574\u4e2a\u4e1c\u897f\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u4e3a\u8d4b\u503c.\u3002\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\u610f\u5473\u7740\u89e3\u5305\u591a\u503c\u5e76\u5c06\u7b2c\u4e00\u4e2a\u503c\u8d4b\u7ed9\u53d8\u91cf-\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a\u503c\uff0c\u5219\u5c06\u5176\u8d4b\u7ed9\u591a\u4e2a\u503c\u3002\u4f8b\u5982\uff1a\n--\u5c06vararg\u8d4b\u7ed9\u5355\u4e2a\u53d8\u91cf\u4f1a\u5c06\u8be5\u53d8\u91cf--\u8d4b\u7ed9vararg\u7684_first value_\u3002\u5c40\u90e8\u51fd\u6570try_to_assign_vararg(.)\u3002\u672c\u5730x=.\u3002\u8fd4\u56dex\u7ed3\u675f\u6253\u5370(try_to_assign_vararg(1\uff0c2\uff0c3))--\u6253\u5370&#34\uff1b1&#34\uff1b\n\u7136\u800c\uff0c\u5173\u4e8evararg\u8fd8\u6709\u4e00\u6761\u989d\u5916\u7684\u89c4\u5219\uff0c\u8fd9\u4e0eLua\u7684\u5176\u4f59\u90e8\u5206\u7684\u884c\u4e3a\u975e\u5e38\u4e0d\u540c\u3002\u60a8\u53ea\u80fd\u5728\u5b9a\u4e49vararg\u7684\u51fd\u6570\u4e2d\u4f7f\u7528vararg\u3002\u4f8b\u5982\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u60a8\u5c06vararg\u4fdd\u5b58\u5230\u95ed\u5305\u4e2d\uff1a\n\u65e0\u6cd5\u8fd0\u884c\uff0c\u5e76\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a\u65e0\u6cd5\u5728\u9760\u8fd1&#39\uff1b.&#39\uff1b\u7684vararg\u51fd\u6570\u5916\u90e8\u4f7f\u7528&#39\uff1b.&#39\uff1b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u4f60\u53ef\u4ee5\u4f7f\u7528..\u3002\u5728\u4e24\u4e2a\u5d4c\u5957\u51fd\u6570\u4e2d\uff0c\u6bcf\u4e2a\u51fd\u6570.\u3002\u53ea\u80fd\u5f15\u7528\u5f53\u524d\u8fd0\u884c\u7684\u51fd\u6570\u7684varargof\u3002\u4f60\u4e0d\u80fd\u5728\u95ed\u5305\u4e2d\u6355\u83b7.\u6765\u6301\u4e45\u5316\u5b83\u3002\u5b9e\u9645\u4e0a\uff0c..\u3002\u4e0d\u662f\u5b57\u5178\u4f5c\u7528\u57df\u7684\uff0c\u800c\u662f\u4e00\u4e2a\u52a8\u6001\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff0c\u5177\u6709\u67d0\u4e9b\u989d\u5916\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u4e0d\u80fd\u91cd\u65b0\u8d4b\u503c\uff0c\u5e76\u4e14\u4e0d\u80fd\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5916\u90e8\u4f7f\u7528\u3002\n\u53e6\u4e00\u79cd\u8bf4\u6cd5\u662f\uff0cLua\u7684\u4e58\u6570\u662f\u201c\u4e8c\u7b49\u201d\u503c\u3002\u60a8\u53ef\u80fd\u719f\u6089\u6709\u7b2c\u4e8c\u7c7b\u51fd\u6570\u7684\u8bed\u8a00\uff0c\u7b2c\u4e8c\u7c7b\u51fd\u6570\u4e0d\u80fd\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u4e0d\u80fd\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u8fd9\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u4f8b\u5916\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06vararg\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u4e0d\u80fd\u5c06\u5176\u4fdd\u5b58\u5728\u53d8\u91cf\u4e2d\uff0c\u4e0d\u80fd\u5c06\u5176\u4fdd\u5b58\u5728\u95ed\u5305\u4e2d\uff0c\u4e5f\u4e0d\u80fd\u4ee5\u7279\u5b9a\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5c06\u4e58\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u5e76\u5c06\u5176\u6253\u5305\u5230\u8868\u4e2d\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5173\u4e8e\u8fd9\u4e00\u70b9\u6709\u4e00\u4e2a\u6211\u4eec\u5c1a\u672a\u514b\u670d\u7684\u4e3b\u8981\u95ee\u9898\u3002\u8bf7\u770b\u4ee5\u4e0b\u793a\u4f8b\uff1a\n\u5c40\u90e8\u51fd\u6570Returns_Three_Values()return 1\uff0c2\uff0c3 End Print(Returns_Three_Values())--Prints&#34\uff1b1 2 3&#34\uff1bprint(#{Returns_Three_Values()})--Prints&#34\uff1b3&#34\uff1bPrint(Returns_Three_Values()\uff0c4\uff0c5)--Prints&#34\uff1b1 4 5&#34\uff1bPrint(#{Returns_Three_Values()\uff0c4 5})--Prints&#34\uff1b3\u548c#34\uff1b\n\u6b63\u5982\u7b2c\u4e8c\u5bf9\u6253\u5370\u8868\u8fbe\u5f0f\u6240\u6f14\u793a\u7684\u90a3\u6837\uff0c\u5982\u679c\u51fd\u6570\u8c03\u7528\u662f\u591a\u503c\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u5219\u5b83\u53ea\u80fd\u5c06\u591a\u4e2a\u503c\u8fd4\u56de\u5230\u591a\u503c\u4e2d\u3002\u5728\u591a\u53d8\u91cf\u4e2d\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u503c(\u5373\u4f7f\u4e3a\u7a7a)\u8c03\u7528\u51fd\u6570\u540e\uff0c\u5c06\u5728\u7b2c\u4e00\u9879\u622a\u65ad\u5176\u8fd4\u56de\u503c\u3002\nLua\u8f83\u597d\u7684\u5c5e\u6027\u4e4b\u4e00\u662f\u5728\u8868\u4e2d\u65e0\u6cd5\u533a\u5206\u8bbe\u7f6e\u4e3anil\u7684\u952e\u548c\u4e0d\u5b58\u5728\u7684\u952e\u3002\u4f8b\u5982\uff0c\u5728Javascript\u4e2d\uff0c\u60a8\u65e2\u53ef\u4ee5\u4f7f\u7528obj.x=unfinded\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3aunfinded\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528delete obj.x\u5c06\u5176\u4ece\u5bf9\u8c61\u4e2d\u5b9e\u9645\u5220\u9664\u3002(\u8fd8\u6709obj.x=null\uff0c\u4f46\u6211\u4eec\u6682\u65f6\u5ffd\u7565\u5b83\u3002)\u5728Lua\u4e2d\uff0c\u53ea\u6709tab.x=nil\uff0c\u65e0\u6cd5\u533a\u5206\u8bbe\u7f6e\u4e3anil\u7684\u5c5e\u6027\u548c\u4ece\u672a\u8bbe\u7f6e\u7684\u5c5e\u6027\u3002\nlocal y={nil\uff0cnil\uff0cnil}print(#y)--\u5728\u8868\u683c\u672b\u5c3e\u6253\u5370&#34\uff1b0&#34\uff1b-nils\u4e0e\u672c\u5730\u51fd\u6570multival_length(.)\u65e0\u5173\u3002\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u7ed3\u675f\u6253\u5370(multival_length(table.unpack(Y)--\u6253\u5370&#34\uff1b0&#34\uff1bprint(multival_length(nil\uff0cnil\uff0cnil))--\u6253\u5370&#34\uff1b3&#34\uff1b\u3002\u4ec0\u4e48\u9b3c\u4e1c\u897f\uff1f\n\u5982\u672c\u4f8b\u6240\u793a\uff0c\u500d\u589e\u64cd\u4f5c\u4f1a\u5c06\u8be5\u826f\u597d\u5c5e\u6027\u629b\u51fa\u7a97\u53e3\u3002\u6211\u53ea\u60f3\u8bf4\u6e05\u695a\uff1a\n\u5728Lua\u4e2d\uff0cmultival_length(nil\uff0cnil)\u548cmultival_length()\u6709\u4e00\u4e2a\u533a\u522b\u3002\u8fd9\u79cd\u533a\u522b\u662f\u901a\u8fc7SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u8fdb\u884c\u7684\u3002\n\u4e0e\u8fd4\u56de\u96f6\u503c\u7684\u51fd\u6570(\u800c\u4e0d\u662fnil)\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8fd9\u4f1a\u53d8\u5f97\u66f4\u52a0\u4ee4\u4eba\u56f0\u60d1\uff1a\nPrint(SELECT(&#34\uff1b#&#34\uff1b\uff0cPrint(&#34\uff1ba&#34\uff1b)\uff0cPrint(&#34\uff1bb&#34\uff1b)\uff0cPrint(&#34\uff1bc&#34\uff1b)--\u9996\u5148\u5c06&#34\uff1ba&#34\uff1b\u3001&#34\uff1bb&#34\uff1b\u548c&#34\uff1bc&#34\uff1b\u6253\u5370\u5230\u5404\u81ea\u7684\u884c\u4e0a\uff0c\u7136\u540e\u6253\u5370&#34\uff1b2&#34\uff1b\u3002\u7b49\u7b49\uff0c\u4ec0\u4e48\uff1f\n\u6b63\u5982\u60a8\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u8fd4\u56de\u96f6\u503c\u7684\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u591a\u503c\u3002\u5982\u679c\u60a8\u5728\u672b\u5c3e\u8c03\u7528\u5b83\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u5728\u591a\u9879\u5f0f\u7684\u672b\u5c3e\u6dfb\u52a0\u4efb\u4f55\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u5982\u679c\u5bf9\u96f6\u8fd4\u56de\u503c\u51fd\u6570\u7684\u8c03\u7528\u51fa\u73b0\u5728\u591a\u503c\u7ed3\u675f\u4e4b\u524d\uff0c\u5219\u4f1a\u5bfc\u81f4\u5728\u591a\u503c\u4e2d\u63d2\u5165nil\u6765\u4ee3\u66ff\u5176\u96f6\u8fd4\u56de\u503c\u3002\u56e0\u6b64\uff0cLua\u6ca1\u6709\u5c06\u7531\u6240\u6709\u4e09\u4e2aprint\u8c03\u7528\u7ec4\u6210\u7684multival\u6298\u53e0\u6210\u5355\u4e2a\u96f6\u957f\u5ea6\u7684multival\uff0c\u800c\u662f\u6298\u53e0\u4e86\u6700\u540e\u4e00\u4e2aprint\u8c03\u7528\uff0c\u4f46\u5c06\u53e6\u5916\u4e24\u4e2a\u8c03\u7528\u53d8\u4e3a\u7a7a\u3002\u8fd9\u5e76\u4e0d\u9002\u7528\u4e8e\u8868\uff0c\u56e0\u4e3a\u4e0e\u4e58\u6570\u4e0d\u540c\u7684\u662f\uff0c\u8868\u4e2d\u7684NILS\u5b9e\u9645\u4e0a\u7b49\u540c\u4e8e\u7f3a\u5c11\u503c\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4e00\u5207\u4f3c\u4e4e\u90fd\u4e0d\u5c5e\u4e8eLua\u3002\u4e0d\u5e26SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u5f62\u5f0f\uff0c\u5219\u65e0\u6cd5\u4ece\u591a\u503c\u672c\u8eab\u7684\u672b\u5c3e\u5224\u65ad\u591a\u503c\u672b\u5c3e\u4e3a\u96f6\u3002\u7136\u800c\uff0c\u8fd9\u4f7f\u5f97\u67d0\u4e9b\u62bd\u8c61\u66f4\u5bb9\u6613\u521b\u5efa\u3002\n\u4e00\u79cd\u503c\u5f97\u6ce8\u610f\u7684\u60c5\u51b5\u662f\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u5728\u5305\u88c5\u8fd4\u56de\u4e58\u503c\u7684\u51fd\u6570\u65f6\u53d8\u5f97\u7279\u522b\u6709\u7528\u3002\u9009\u62e9(&#34\uff1b#&#34\uff1b\uff0c.)\u3002\u8ba9\u60a8\u8f7b\u677e\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u7b80\u5355\u5730\u4fdd\u5b58\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u6216\u8005\u662f\u5426\u9700\u8981\u521b\u5efaatable\u6765\u4fdd\u5b58\u6240\u6709\u503c\u3002\n\u5f53\u7b2c\u4e00\u6b21\u67e5\u770bLua\u4e2d\u7684\u4e58\u6570\u65f6\uff0c\u51b3\u5fc3\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528\u5b83\u4eec\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u9996\u5148\u503e\u5411\u4e8e\u5c06\u5b83\u4eec\u4e0e\u5c3e\u9012\u5f52\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u7075\u6d3b\u5730\u8868\u793a\u4e0d\u540c\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u8303\u56f4\uff1a\n\u5c40\u90e8\u51fd\u6570range1(acc\uff0cn)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u8fd4\u56deELELSE\u5982\u679cn==1\uff0c\u5219\u8fd4\u56deacc\uff0c\u5426\u5219\u8fd4\u56deacc\uff0crange1(acc+1\uff0cn-1)end end local function range(N)\u5982\u679cn&lt\uff1b1\uff0c\u5219error(&#34\uff1bn\u5fc5\u987b\u4e3a&gt\uff1b=1&#34\uff1b)end return range1(1\uff0cn)end print(range(3))--prints&#34\uff1b1 23&#34\uff1bprint(#{range(10)})--\u6253\u5370&#34\uff1b10&#34\uff1b\n\u8fd9\u4e2a\u5f88\u7ba1\u7528\uff01\u5f53\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u591a\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528range(N)\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u7b49\u6548\u8868\u65f6\uff0c\u53ef\u4ee5\u7528\u50cf{range(N)}\u8fd9\u6837\u7684\u5927\u62ec\u53f7\u5c06\u5b83\u62ec\u8d77\u6765\u3002\u8fd9\u5e94\u8be5\u53ef\u4ee5\u8ba9\u6211\u4eec\u907f\u514d\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\u989d\u5916\u7684\u8868\u3002\u7531\u4e8eLua\u5177\u6709\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u529f\u80fd\uff0c\u56e0\u6b64\u5bf9\u81ea\u8eab\u8fdb\u884c\u7684\u9012\u5f52\u8c03\u7528\u8303\u56f41\u6c38\u8fdc\u4e0d\u4f1a\u6253\u4e71\u5806\u6808\u3002\u5bf9\u5417\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u591a\u4e2a\u4eba\u6253\u7834\u4e86\u5c3e\u90e8\u547c\u53eb\u6d88\u9664\u3002\u5982\u679c\u60a8\u91cd\u65b0\u8fd4\u56de\u591a\u4e2a\u503c\uff0cLua\u9700\u8981\u6536\u96c6\u6240\u6709\u8fd9\u4e9b\u503c\uff0c\u7136\u540e\u624d\u80fd\u5b9e\u9645\u5f00\u59cb\u8fd4\u56de\u5b83\u4eec\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u4e22\u5f03\u9012\u5f52\u51fd\u6570\u7684\u5806\u6808\u6846\u67b6\u3002\u8fd9\u4e0e\u5728range1\u5185\u8fd4\u56de{range1(acc\uff0cn)}\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c\u3002\u90a3\u4e2a\u6848\u5b50\u663e\u7136\u4e0d\u662f\u5c3e\u5df4\u3002\u6b63\u662f\u4e58\u6570\u7684\u7279\u6b8a\u8bed\u6cd5\u4f7f\u8fd9\u4e00\u70b9\u4ee4\u4eba\u56f0\u60d1\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u50cf\u662f\u88ab\u4efb\u4f55\u4e1c\u897f\u201c\u5305\u56f4\u201d\u7684\u4eba\u9020\u5c3e\u90e8\u8c03\u7528\u3002[2]\u3002\n\u4e3a\u4e86\u907f\u514d\u5806\u6808\u6ea2\u51fa\uff0c\u6b63\u786e\u5730\u9012\u5f52\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8868\u6765\u5b9e\u73b0Range\uff1a\n\u672c\u5730\u51fd\u6570\u8303\u56f41(tab\uff0cacc\uff0cn)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u8fd4\u56detab\u5426\u5219tab[acc]=acc\u8fd4\u56de\u8303\u56f41(tab\uff0cacc+1\uff0cn-1)END END\u672c\u5730\u51fd\u6570\u8303\u56f4(N)\u5982\u679cn&lt\uff1b1\uff0c\u5219\u9519\u8bef(&#34\uff1bn\u5fc5\u987b\u662f&&gt;\uff1b=1&#34\uff1b)END\u8fd4\u56de\u8303\u56f41({}\uff0c1\uff0cn)END PRINT(#RANGE(1000x1000))--PRINTS&#34\uff1b1000000&#34\uff1b\n\u5b83\u53ef\u80fd\u4e0d\u90a3\u4e48\u4f18\u96c5\uff0c\u6df7\u5408\u4e86\u9012\u5f52\u548c\u7a81\u53d8\uff0c\u4f46\u662f\u5b83\u7684\u8fd0\u884c\u65f6\u7279\u6027\u8981\u597d\u5f97\u591a\u3002\n\u9012\u5f52\u5230\u592a\u591a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5806\u6808\u5931\u6548\uff0c\u8fd9\u662f\u6709\u9053\u7406\u7684\u3002\u4e0d\u592a\u76f4\u89c2\u7684\u662f\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u9012\u5f52\u7684\u60c5\u51b5\u4e0b\uff0c\u4e58\u6cd5\u8fd0\u7b97\u7684\u5927\u5c0f\u4e5f\u6709\u4e00\u4e2a\u4e0a\u9650\u3002\u8bf7\u8003\u8651\u4f7f\u7528\u6211\u4eec\u4e0a\u9762\u5b9a\u4e49\u7684\u8303\u56f4\u51fd\u6570\uff1a\n\u592a\u68d2\u4e86\uff01\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8bd5\u7740\u5c06\u5176\u89e3\u5305\u6210\u4e00\u4e2a\u591a\u91cd\u6570\u3002\u4e0d\u6d89\u53ca\u9012\u5f52\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u5bf9\u5417\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e58\u6cd5\u53ea\u662f\u5bf9\u5b83\u4eec\u53ef\u4ee5\u5305\u542b\u7684\u503c\u7684\u6570\u91cf\u6709\u4e00\u4e2a\u4e0a\u9650\u3002\u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898--\u5982\u679c\u60a8\u9700\u8981\u5904\u7406\u4e00\u4e2a\u9879\u76ee\u5217\u8868\u800c\u4e0d\u7528\u62c5\u5fc3\u5b83\u6709\u591a\u5927\uff0c\u8bf7\u4f7f\u7528atable\uff0c\u800c\u4e0d\u662fmultival\u3002\nprint((function()return 1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c12\uff0c13\uff0c14\uff0c15\uff0c16\uff0c17\uff0c18\uff0c19\uff0c20\uff0c21\uff0c22\uff0c23\uff0c24\uff0c25\uff0c26\uff0c27\uff0c28\uff0c29\uff0c30\uff0c31\uff0c32\uff0c33\uff0c34\uff0c35\uff0c36\uff0c37\uff0c38\uff0c39\uff0c40\uff0c41\uff0c42\u300143\u300144\u300145\u300146\u300147\u300148\u300149\u300150\u300151\u300152\u300153\u300154\u300155\u300156\u300157\u300158\u300159\u300160\u300161\u300162\u300163\u300164\u300165\u300166\u300167\u300168\u300169\u300170\u300171\u300172\u300173\u300174\u300175\u300176\u300177\u300178\u300179\u300180\u300181\u300182\u300183\u300184\u300185\u300286\u300187\u300188\u300189\u300190\u300191\u300192\u300193\u300194\u300195\u300196\u300197\u300198\u300199\u3001100\u3001101\u3001102\u3001103\u3001104\u3001105\u3001106\u3001107\u3001108\u3001109\u3001110\u3001111\u3001112\u3001113\u3001114\u3001115\u3001116\u3001117\u3001118\u3001119\u3001120\u3001121\u3001122\u3001123\u3001124\u3001125\u3001126\u3001127\u3001128\u3001129\u3002130\u3001131\u3001132\u3001133\u3001134\u3001135\u3001136\u3001137\u3001138\u3001139\u3001140\u3001141\u3001142\u3001143\u3001144\u3001145\u3001146\u3001147\u3001148\u3001149\u3001150\u3001151\u3001152\u3001153\u3001154\u3001155\u3001156\u3001157\u3001158\u3001159\u3001160\u3001161\u3001162\u3001163\u3001164\u3001165\u3001166\u3001167\u3001168\u3001169\u3001170\u3001171\u3001172\u3001173\u3002174\u3001175\u3001176\u3001177\u3001178\u3001179\u3001180\u3001181\u3001182\u3001183\u3001184\u3001185\u3001186\u3001187\u3001188\u3001189\u3001190\u3001191\u3001192\u3001193\u3001194\u3001195\u3001196\u3001197\u3001198\u3001199\u3001200\u3001201\u3001202\u3001203\u3001204\u3001205\u3001206\u3001207\u3001208\u3001209\u3001210\u3001211\u3001212\u3001213\u3001214\u3001215\u3001216\u3001217\u3002218\u3001219\u3001220\u3001221\u3001222\u3001223\u3001224\u3001225\u3001226\u3001227\u3001228\u3001229\u3001230\u3001231\u3001232\u3001233\u3001234\u3001235\u3001236\u3001237\u3001238\u3001239\u3001240\u3001241\u3001242\u3001243\u3001244\u3001245\u3001246\u3001247\u3001248\u3001249\u3001250\u3001251\u3001252\u3001253\u3001254\u3001255())-\u6295\u63b7&#34\uff1b\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u9700\u8981\u592a\u591a\u7684\u5bc4\u5b58\u5668&#34\uff1b\u9519\u8bef\u6253\u5370(1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c12\uff0c13\uff0c14\uff0c15\uff0c16\uff0c17\uff0c18\uff0c19\uff0c20\uff0c21\uff0c22\uff0c23\uff0c24\uff0c25\uff0c26\uff0c27\uff0c28\uff0c29\uff0c30\uff0c31\uff0c32\uff0c33\uff0c34\uff0c35\uff0c36\uff0c37\uff0c38\uff0c39\uff0c40\uff0c41\uff0c42\uff0c43\uff0c44\u300145\u300146\u300147\u300148\u300149\u300150\u300151\u300152\u300153\u300154\u300155\u300156\u300157\u300158\u300159\u300160\u300161\u300162\u300163\u300164\u300165\u300166\u300167\u300168\u300169\u300170\u300171\u300172\u300173\u300174\u300175\u300176\u300177\u300178\u300179\u300180\u300181\u300182\u300183\u300184\u300185\u300186\u300187\u300288\u300189\u300190\u300191\u300192\u300193\u300194\u300195\u300196\u300197\u300198\u300199\u3001100\u3001101\u3001102\u3001103\u3001104\u3001105\u3001106\u3001107\u3001108\u3001109\u3001110\u3001111\u3001112\u3001113\u3001114\u3001115\u3001116\u3001117\u3001118\u3001119\u3001120\u3001121\u3001122\u3001123\u3001124\u3001125\u3001126\u3001127\u3001128\u3001129\u3001130\u3001131\u3002132\u3001133\u3001134\u3001135\u3001136\u3001137\u3001138\u3001139\u3001140\u3001141\u3001142\u3001143\u3001144\u3001145\u3001146\u3001147\u3001148\u3001149\u3001150\u3001151\u3001152\u3001153\u3001154\u3001155\u3001156\u3001157\u3001158\u3001159\u3001160\u3001161\u3001162\u3001163\u3001164\u3001165\u3001166\u3001167\u3001168\u3001169\u3001170\u3001171\u3001172\u3001173\u3001174\u3001175\u3002176\u3001177\u3001178\u3001179\u3001180\u3001181\u3001182\u3001183\u3001184\u3001185\u3001186\u3001187\u3001188\u3001189\u3001190\u3001191\u3001192\u3001193\u3001194\u3001195\u3001196\u3001197\u3001198\u3001199\u3001200\u3001201\u3001202\u3001203\u3001204\u3001205\u3001206\u3001207\u3001208\u3001209\u3001210\u3001211\u3001212\u3001213\u3001214\u3001215\u3001216\u3001217\u3001218\u3001219\u3002220\u3001221\u3001222\u3001223\u3001224\u3001225\u3001226\u3001227\u3001228\u3001229\u3001230\u3001231\u3001232\u3001233\u3001234\u3001235\u3001236\u3001237\u3001238\u3001239\u3001240\u3001241\u3001242\u3001243\u3001244\u3001245\u3001246\u3001247\u3001248\u3001249\u3001250\u3001251\u3001252\u3001253\u3001254\u3001255)--\u629b\u51fa&#34\uff1b\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u9700\u8981\u592a\u591a\u5bc4\u5b58\u5668&#34\uff1b\u9519\u8bef\u3002\n\u4f46\u662f\uff0c\u5bf9\u8868\u5b57\u9762\u503c\u6ca1\u6709\u9650\u5236\uff0c\u8fd9\u5f3a\u5316\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8868\u5b57\u9762\u503c\u7684\u5185\u5bb9\u4e0d\u662f\u591a\u4f4d\u6570\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u5916\u89c2\u4e0a\u5f88\u76f8\u4f3c\uff1a\n\u6240\u6709\u8fd9\u4e9b\u591a\u503c\u602a\u7656\u7684\u4e0d\u540c\u4f8b\u5b50\u8868\u660e\uff0c\u4e58\u6cd5\u53ea\u662f\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002(\u6211\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u6700\u597d\u7684\u539f\u56e0\u662f\uff0c\u5728\u591a\u503c\u5185\u9012\u5f52\u65f6\uff0c\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u4e0d\u8d77\u4f5c\u7528\uff0c\u5c31\u50cf\u5b83\u4e00\u6837\n\u4e0d\u80fd\u5c06\u4e58\u6570\u8d4b\u7ed9\u53d8\u91cf\u3002\u5b83\u4eec\u53ea\u80fd\u4f5c\u4e3a\u6587\u5b57\u3001\u51fd\u6570\u8c03\u7528\u8868\u8fbe\u5f0f\u6216vararg.\u5f15\u7528\u3002\nvararg\u4e0d\u80fd\u5728\u521b\u5efa\u5b83\u7684\u51fd\u6570\u5916\u90e8\u4f7f\u7528(\u5305\u62ec\u5728\u8be5\u51fd\u6570\u4e2d\u521b\u5efa\u7684\u95ed\u5305\u5185)\u3002\n\u5728\u7ed3\u675f\u4e4b\u524d\u5c06\u4e58\u6570\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u591a\u503c\u4e2d\u65f6\uff0c\u4f1a\u5728\u7b2c\u4e00\u4e2a\u503c\u5904\u622a\u65ad\u4e58\u6570\u3002\n\u4e0e\u8868\u683c\u4e0d\u540c\uff0c\u4e58\u6570\u7684\u5185\u7f6e\u957f\u5ea6\u4e0e\u591a\u503c\u5185NIL\u7684\u6392\u5217\u65e0\u5173\u3002\u53ef\u4ee5\u4f7f\u7528SELECT(&#34\uff1b#&#34\uff1b\uff0c.)\u641c\u7d22\u6b64\u957f\u5ea6\u3002\n\u5f53\u591a\u503c\u5728\u7ed3\u675f\u524d\u5305\u542b\u5bf9\u96f6\u8fd4\u56de\u503c\u51fd\u6570\u7684\u8c03\u7528\u65f6\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c06\u63d2\u5165nil\u3002\n\u5f53\u51fd\u6570\u5728Multival\u5185\u8fdb\u884c\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u4e0d\u4f1a\u5e94\u7528\u5c3e\u90e8\u8c03\u7528\u6d88\u9664\u3002\u56e0\u6b64\uff0c\u5728\u4e1a\u4f59\u65f6\u95f4\u5185\u9012\u5f52\u592a\u591a\u6b21\u4f1a\u4f7f\u5806\u6808\u5931\u6548\u3002\n\u5c1d\u8bd5\u4f7f\u7528\u8fc7\u591a\u53c2\u6570\u8c03\u7528\u51fd\u6570\u6216\u4ece\u51fd\u6570\u8fd4\u56de\u5c06\u5bfc\u81f4\u9519\u8bef\u3002\u8fd9\u4e00\u9650\u5236\u8fdc\u8fdc\u4f4e\u4e8e\u524d\u9762\u63d0\u5230\u7684\u89e3\u5305\u8868\u683c\u7684\u9650\u5236\uff0c\u4ec5\u7565\u4f4e\u4e8e255\u4e2a\u9879\u76ee\u3002\n\u6700\u540e\uff0c\u5173\u4e8e\u591a\u503c\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ee4\u6211\u96be\u4ee5\u7f6e\u4fe1\u7684\u4e3b\u89c2\u95ee\u9898\uff0c\u90a3\u5c31\u662fvararg\u4f7f\u7528\u7684\u8bed\u6cd5\u3002\u5728\u6211\u770b\u6765\uff0c\u4e8b\u5b9e\u4e0a\u2026\u662f\u6709\u6548\u7684Lua\u4f7f\u5f97\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u63d2\u5165\u6613\u4e8e\u7406\u89e3\u7684\u5360\u4f4d\u7b26\u53d8\u5f97\u4e0d\u5fc5\u8981\u5730\u56f0\u96be\u3002\n\u867d\u7136\u4e58\u6570\u4ecd\u7136\u662fLua\u7684\u4e00\u4e2a\u5947\u602a\u800c\u950b\u5229\u7684\u89d2\u843d\uff0c\u4f46\u6211\u5e0c\u671b\u591a\u4e8f\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4ed6\u4eec\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u867d\u7136\u5b83\u4eec\u5f88\u5c11\u662f\u7279\u5b9a\u95ee\u9898\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5bf9\u4e8eLua\u7528\u6237\u6765\u8bf4\uff0c\u4e86\u89e3\u5b83\u4eec\u7684\u4f18\u70b9\u548c\u5c40\u9650\u6027\u4ecd\u7136\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u5373\u4f7f\u8fd9\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u907f\u514d\u5b83\u4eec\u662f\u5408\u7406\u7684\u3002\n\u4e5f\u79f0\u4e3a\u5c3e\u90e8\u547c\u53eb\u4f18\u5316\u3002\u4f7f\u7528InSafari\u7684JavaScriptCore\u6709\u9002\u5f53\u7684Tail CallSupport\uff0c\u4f46\u5927\u591a\u6570JS\u5f00\u53d1\u4eba\u5458\u65e0\u6cd5\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5b83\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\u7684\u6d41\u884c\u6d4f\u89c8\u5668\u4e2d\u4e0d\u53ef\u7528\u3002\u21a9\u3002\n\u5728\u8334\u9999\u4e2d\uff0c\u8fd9\u79cd\u53e5\u6cd5\u6df7\u4e71\u4f1a\u53d8\u5f97\u66f4\u7cdf\uff01\u5728\u90a3\u91cc\uff0c\u591a\u4e2a\u6570\u6ca1\u6709\u81ea\u5df1\u7684\u7279\u6b8a\u8bed\u6cd5\uff0c\u800c\u662f\u7528\u7279\u6b8a\u7684\u503c\u8868\u793a\u3002(\u503c1 2 3)\u5728Fennelis\u4e2d\u4e0e\u5728Lua\u4e2d\u76841\u30012\u30013\u76f8\u540c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4f7f\u5f97\u8fdb\u5165\u6b64\u573a\u666f\u7684\u9012\u5f52\u51fd\u6570\u770b\u8d77\u6765\u66f4\u50cf\u771f\u6b63\u7684\u5c3e\u9012\u5f52\u51fd\u6570\u3002\u8fd9\u662f\u5728Fennel\u4e2d\u4f7f\u7528\u591a\u4e2a\u51fd\u6570\u548c\u9012\u5f52\u65f6\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff01\u21a9", "note_en": "I\u2019ve been spending a lot of time lately writing  Fennel andcontributing to its compiler. Since it\u2019s a language that compiles toLua, that also means spending a lot of time getting to know Lua. Thisarticle will be focused on Lua (though I\u2019ll address Fennel from timeto time in the footnotes).\n Lua is a neat, elegant, and relatively simple language. I find itparticularly notable for its embeddability into other programs;capability of hosting many different styles of programming; and theexcellent performance of one of its implementations, LuaJIT. In many ways, it feels like a more elegant andrestrained JavaScript - it supports tail call elimination  [1] and coroutines, it doesn\u2019t have the confusing  var/ letdistinction (though it lacked a feature like  const until Lua 5.4),and it doesn\u2019t privilege class syntax over other styles of programming(object oriented programming can be done in Lua with metatables, butit\u2019s not given special syntax like it is in JS).\n That said, it has aspects that are undoubtedly quirky - arrays anddictionaries are unified into &#34;tables&#34;, whose integer indices start at1; the standard library is unusually minimal, a nod to itsembeddability; it, like JavaScript, makes the immense error of makingvariables global by default and local only when you ask. Curiously, italso supports a quite uncommon language feature: multiple returnvalues (which we\u2019ll call \u201cmultivals\u201d for brevity\u2019s sake). It is thislast subject that we\u2019ll be unpacking more about today.\n Since Lua is a dynamic language (as opposed to, say, Go) multiplereturns are implemented in a rather odd way. This isn\u2019t explored in asmuch detail as I\u2019d like in Lua\u2019s documentation, so I wanted to providea one-stop resource that explains everything I can think to write downabout this idiosyncratic part of the language.\n A spoiler: unfortunately, multivals will turn out to be somewhatunderwhelming for use in code you care about. They\u2019re awkward to workwith, have numerous gotchas, are a maintenance hazard, and don\u2019tperform notably better (that I know of) than their primaryalternative, tables. This is not a very  useful article, unless youhave a use for knowing minutiae about Lua\u2019s behavior.\n   There are three primary ways to represent a multival in Lua. Each ofthese has their own distinct uses. Each of the following code snippetsproduces the same multival:\n A multival literal:  1, 2, 3. (Note that this does not includetable literals like  {1, 2, 3}).\n  The vararg,  ..., in a function:  local function x(...) return ... end x(1, 2, 3)\n  local  function  two_values ()  return  &#34;first&#34; ,  &#34;second&#34;  end local  tab  =  { two_values ()} print ( tab [ 1 ],  tab [ 2 ])  -- prints &#34;first second&#34;\n  local  function  multival_first ( x ,  ...)  return  x  end print ( multival_first ( 1 ,  2 ,  3 ))  -- prints &#34;1&#34; local  function  multival_rest ( x ,  ...)  return  ...  end print ( multival_rest ( 1 ,  2 ,  3 ))  -- prints &#34;2 3&#34; print ( select ( 2 ,  1 ,  2 ,  3 ))  -- prints &#34;2 3&#34;; identical to the last line\n In order to get values from the  end of a multival, we have twooptions. The first is recursion:\n local  function  increment_each_value ( first ,  ...)  if  first  then  return  first  +  1 ,  increment_each_value (...)  end end print ( increment_each_value ( 1 ,  2 ,  3 ))  -- prints &#34;2 3 4&#34;\n The second is packing the multival into a table. There are two ways todo this, both of which are demonstrated below:\n -- 1. You can pack a multival directly into a table literal local  function  pack_multival (...)  return  {...} end -- Lua&#39;s default printing for tables only shows identity; we&#39;ll just -- print the length instead. print ( # pack_multival ( 1 ,  2 ,  3 ))  -- prints &#34;3&#34; -- 2. You can use table.pack, which is built in to Lua 5.2 and later local  tab  =  table.pack ( 1 ,  2 ,  3 ) print ( # tab )  -- prints &#34;3&#34; -- table.pack also sets the &#34;n&#34; field on the table it returns. This is -- more efficient than using #tab, which iterates through the table. print ( tab . n )  -- prints &#34;3&#34;\n  When you start working with multivals, they might seem prettystraightforward. As long as you\u2019re working on something that uses alist with fixed length or that can be expressed by iterating throughthe head and tail of a list, it seems like working with multivalsshould be nice and predictable.\n The first issue you\u2019ll likely run into if you try to use multivalsheavily comes from expecting them to work the same way the rest of Luadoes. In short, Lua\u2019s  local variables use what\u2019s called  lexicalscope. This means that the scope of a variable definition is theblock of code that you see it contained in in your source codefile. It doesn\u2019t matter what order other functions are called in, orwhether they\u2019re called at all - the definitions of local variables canbe determined just by looking at the structure of the code. This is asopposed to  dynamic scope, where the variables defined at a givenpoint are dependent on the runtime of the program itself. Lua\u2019s global variables effectively use dynamic scope.\n As discussed above, there\u2019s only three ways to refer to a multival:calling a function for its return values, literally inserting multiplevalues separated by commas, or using the vararg symbol  ... as afunction argument. It\u2019s this last case that we\u2019re interested in.\n When you use  ... in the signature of a function, you must place itat the end of the argument list. (This is what prevents you -syntactically, at least - from accessing the end of  ... withouteither assigning the whole thing to individual variables, recursingthrough it, or packing it into a table.)\n You also can\u2019t assign the whole thing to a variable, because assigninga  ... to a variable means unpacking the multival and assigning the first value to the variable - or multiple values, if that\u2019sspecified. For example:\n -- Assigning the vararg to a single variable will assign that variable -- to the _first value_ of the vararg. local  function  try_to_assign_vararg (...)  local  x  =  ...  return  x end print ( try_to_assign_vararg ( 1 ,  2 ,  3 ))  -- prints &#34;1&#34;\n There\u2019s one additional rule about the vararg, however, that\u2019s veryunlike the behavior of the rest of Lua. You can only use a vararg within the function where it is defined. This prevents you from, forinstance, saving the vararg into a closure:\n  This fails to run with the following error:  cannot use &#39;...&#39; outside a vararg function near &#39;...&#39;. This means that, while you can use ... in two nested functions, each  ... can only refer to the varargof the function that\u2019s currently running. You can\u2019t capture  ...within a closure to persist it. Effectively,  ... is not lexicallyscoped, but rather a dynamically scoped variable with certain extrarules like not being reassignable and not being usable outside afunction that defined it.\n Another way to put this would be to say that Lua\u2019s multivals are\u201csecond class\u201d values. You might be familiar with languages that havesecond class functions, which can\u2019t be assigned to variables or passedas a parameter to a functions. This is similar, with the notableexception that we  can pass the vararg to another function. We justcan\u2019t save it in a variable, save it in a closure, or manipulate it incertain ways.\n  Passing multivals to functions and packing them into tables is prettystraightforward, but there\u2019s one major gotcha about it we haven\u2019t goneover yet. Take a look at the following example:\n local  function  returns_three_values ()  return  1 ,  2 ,  3 end print ( returns_three_values ())  -- prints &#34;1 2 3&#34; print ( # { returns_three_values ()})  -- prints &#34;3&#34; print ( returns_three_values (),  4 ,  5 )  -- prints &#34;1 4 5&#34; print ( # { returns_three_values (),  4  5 })  -- prints &#34;3&#34;\n As the second pair of  print expressions demonstrates, a functioncall can only return multiple values into a multival if it is the lastthing in the multival. Following a function call in a multival withany other value, even  nil, will cut off its return values at thefirst item.\n    One of Lua\u2019s nicer properties is how a key set to  nil and anon-existent key are indistinguishable in a table. In Javascript, forinstance, you have both  obj.x = undefined to set a property to undefined and  delete obj.x to actually remove it from theobject. (There\u2019s also  obj.x = null, but let\u2019s ignore that for now.)In Lua, there\u2019s just  tab.x = nil, and there\u2019s no way to distinguishbetween a property that was set to  nil and a property that was neverset at all.\n  local  y  =  { nil , nil , nil } print ( # y )  -- prints &#34;0&#34; - nils at the end of a table don&#39;t matter local  function  multival_length (...)  select ( &#34;#&#34; ,  ...)  end print ( multival_length ( table.unpack ( y )))  -- prints &#34;0&#34; print ( multival_length ( nil ,  nil ,  nil ))  -- prints &#34;3&#34;. wtf?\n As this example demonstrates, multivals throw that nice property outthe window. Just to be clear:\n There is  one distinction between  multival_length(nil, nil) and multival_length() in Lua. That distinction is made by select(&#34;#&#34;, ...).\n This becomes even more confusing when combined with a function thatreturns  zero values, as opposed to  nil:\n print ( select ( &#34;#&#34; ,  print ( &#34;a&#34; ),  print ( &#34;b&#34; ),  print ( &#34;c&#34; )))  -- first prints each of &#34;a&#34;, &#34;b&#34;, and &#34;c&#34; on their own lines  -- next, prints &#34;2&#34;. wait, what?\n  As it turns out, a function that returns zero values creates an emptymultival, as you\u2019d expect. It also doesn\u2019t add anything to the end ofa multival if you call it at the end. However, if a call to azero-return-value function appears  before the end of a multival, itresults in a  nil being inserted into the multival in place of itszero return values. Thus, instead of collapsing the multival made upof all three of the  print calls into a single zero-length multival,Lua instead collapses the  last call to  print, but turns the othertwo calls into  nil. This all doesn\u2019t apply to tables, because,unlike in multivals,  nils in tables are truly identical to absentvalues.\n At first, this all seems like something that doesn\u2019t belong inLua. Without the  select(&#34;#&#34;, ...) form, there\u2019d be no way of tellinga  nil at the end of a multival from the end of the multivalitself. However, this makes certain abstractions much easier tocreate.\n One notable situation where  select(&#34;#&#34;, ...) becomes particularlyuseful is when wrapping functions that return multiplevalues.  select(&#34;#&#34;, ...) lets you easily tell if you can simply savethe first return value from the function or if you need to create atable to save all the values.\n  When first looking at multivals in Lua, a programmer who\u2019s determinedto use them somehow might first be inclined to combine them with tailrecursion to neatly express different functions. For instance, wecould implement  range as follows:\n local  function  range1 ( acc ,  n )  if  n  &lt;  1  then  return  elseif  n  ==  1  then  return  acc  else  return  acc ,  range1 ( acc + 1 ,  n - 1 )  end end local  function  range ( n )  if  n  &lt;  1  then  error ( &#34;n must be &gt;= 1&#34; )  end  return  range1 ( 1 ,  n ) end print ( range ( 3 ))  -- prints &#34;1 2 3&#34; print ( # { range ( 10 )})  -- prints &#34;10&#34;\n This works great! We can call  range(n) when we want a multival oflength  n, and surround it with braces like  {range(n)} when we wantthe equivalent table. This should let us avoid allocating extra tableswhen we don\u2019t need them. And since Lua has tail call elimination, therecursive call  range1 makes to itself should never blow thestack. Right?\n   As it turns out, multivals break tail call elimination. If you\u2019rereturning multiple values, Lua needs to collect all those valuesbefore it can actually begin to return them. This means that it can\u2019tthrow away the stack frames of the recursing function. It\u2019s verysimilar to what would happen if you returned  {range1(acc, n)} within range1. That case is clearly  not a tail call. It\u2019s the particularsyntax of multivals that makes this confusing, since it doesn\u2019t looklike the faux-tail-call is \u201csurrounded\u201d by anything.  [2]\n In order to avoid the stack overflow and properly recurse thefunction, we can implement  range with a table as follows:\n local  function  range1 ( tab ,  acc ,  n )  if  n  &lt;  1  then  return  tab  else  tab [ acc ]  =  acc  return  range1 ( tab ,  acc + 1 ,  n - 1 )  end end local  function  range ( n )  if  n  &lt;  1  then  error ( &#34;n must be &gt;= 1&#34; )  end  return  range1 ({},  1 ,  n ) end print ( # range ( 1000  *  1000 ))  -- prints &#34;1000000&#34;\n It\u2019s perhaps less elegant, mixing recursion and mutation, but itsruntime characteristics are vastly better.\n  It makes sense that recursing to much could cause issues by blowingthe stack. What\u2019s less intuitive is that multivals have a cap on theirsize even when you make them  without recursion. Consider this use ofthe  range function we defined above:\n  Great! Now, let\u2019s try unpacking that into a multival. No recursion isinvolved, so this should work fine, right?\n  As it turns out, multivals simply have a cap on the number of valuesthey can contain. There\u2019s no way to work around this - if you need tohandle a list of items without worrying about how big it is, use atable, not a multival.\n  print (( function ()  return  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ,  11 ,  12 ,  13 ,  14 ,  15 ,  16 ,  17 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  27 ,  28 ,  29 ,  30 ,  31 ,  32 ,  33 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  43 ,  44 ,  45 ,  46 ,  47 ,  48 ,  49 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  59 ,  60 ,  61 ,  62 ,  63 ,  64 ,  65 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  75 ,  76 ,  77 ,  78 ,  79 ,  80 ,  81 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  91 ,  92 ,  93 ,  94 ,  95 ,  96 ,  97 ,  98 ,  99 ,  100 ,  101 ,  102 ,  103 ,  104 ,  105 ,  106 ,  107 ,  108 ,  109 ,  110 ,  111 ,  112 ,  113 ,  114 ,  115 ,  116 ,  117 ,  118 ,  119 ,  120 ,  121 ,  122 ,  123 ,  124 ,  125 ,  126 ,  127 ,  128 ,  129 ,  130 ,  131 ,  132 ,  133 ,  134 ,  135 ,  136 ,  137 ,  138 ,  139 ,  140 ,  141 ,  142 ,  143 ,  144 ,  145 ,  146 ,  147 ,  148 ,  149 ,  150 ,  151 ,  152 ,  153 ,  154 ,  155 ,  156 ,  157 ,  158 ,  159 ,  160 ,  161 ,  162 ,  163 ,  164 ,  165 ,  166 ,  167 ,  168 ,  169 ,  170 ,  171 ,  172 ,  173 ,  174 ,  175 ,  176 ,  177 ,  178 ,  179 ,  180 ,  181 ,  182 ,  183 ,  184 ,  185 ,  186 ,  187 ,  188 ,  189 ,  190 ,  191 ,  192 ,  193 ,  194 ,  195 ,  196 ,  197 ,  198 ,  199 ,  200 ,  201 ,  202 ,  203 ,  204 ,  205 ,  206 ,  207 ,  208 ,  209 ,  210 ,  211 ,  212 ,  213 ,  214 ,  215 ,  216 ,  217 ,  218 ,  219 ,  220 ,  221 ,  222 ,  223 ,  224 ,  225 ,  226 ,  227 ,  228 ,  229 ,  230 ,  231 ,  232 ,  233 ,  234 ,  235 ,  236 ,  237 ,  238 ,  239 ,  240 ,  241 ,  242 ,  243 ,  244 ,  245 ,  246 ,  247 ,  248 ,  249 ,  250 ,  251 ,  252 ,  253 ,  254 ,  255  end )())  -- throws &#34;function or expression needs too many registers&#34; error print ( 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ,  11 ,  12 ,  13 ,  14 ,  15 ,  16 ,  17 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  27 ,  28 ,  29 ,  30 ,  31 ,  32 ,  33 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  43 ,  44 ,  45 ,  46 ,  47 ,  48 ,  49 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  59 ,  60 ,  61 ,  62 ,  63 ,  64 ,  65 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  75 ,  76 ,  77 ,  78 ,  79 ,  80 ,  81 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  91 ,  92 ,  93 ,  94 ,  95 ,  96 ,  97 ,  98 ,  99 ,  100 ,  101 ,  102 ,  103 ,  104 ,  105 ,  106 ,  107 ,  108 ,  109 ,  110 ,  111 ,  112 ,  113 ,  114 ,  115 ,  116 ,  117 ,  118 ,  119 ,  120 ,  121 ,  122 ,  123 ,  124 ,  125 ,  126 ,  127 ,  128 ,  129 ,  130 ,  131 ,  132 ,  133 ,  134 ,  135 ,  136 ,  137 ,  138 ,  139 ,  140 ,  141 ,  142 ,  143 ,  144 ,  145 ,  146 ,  147 ,  148 ,  149 ,  150 ,  151 ,  152 ,  153 ,  154 ,  155 ,  156 ,  157 ,  158 ,  159 ,  160 ,  161 ,  162 ,  163 ,  164 ,  165 ,  166 ,  167 ,  168 ,  169 ,  170 ,  171 ,  172 ,  173 ,  174 ,  175 ,  176 ,  177 ,  178 ,  179 ,  180 ,  181 ,  182 ,  183 ,  184 ,  185 ,  186 ,  187 ,  188 ,  189 ,  190 ,  191 ,  192 ,  193 ,  194 ,  195 ,  196 ,  197 ,  198 ,  199 ,  200 ,  201 ,  202 ,  203 ,  204 ,  205 ,  206 ,  207 ,  208 ,  209 ,  210 ,  211 ,  212 ,  213 ,  214 ,  215 ,  216 ,  217 ,  218 ,  219 ,  220 ,  221 ,  222 ,  223 ,  224 ,  225 ,  226 ,  227 ,  228 ,  229 ,  230 ,  231 ,  232 ,  233 ,  234 ,  235 ,  236 ,  237 ,  238 ,  239 ,  240 ,  241 ,  242 ,  243 ,  244 ,  245 ,  246 ,  247 ,  248 ,  249 ,  250 ,  251 ,  252 ,  253 ,  254 ,  255 )  -- throws &#34;function or expression needs too many registers&#34; error\n There is, however, no limit on table literals, reinforcing the factthat the contents of table literals are not multivals, despite theirsimilarity in appearance:\n    What all these different examples of multival quirks demonstrate isthat multivals are just another data structure. (I find this case ismade best by how tail call elimination doesn\u2019t work when recursingwithin a multival, just like it wouldn\u2019t work within a table literal.)They aren\u2019t exceptions to the rules that data structures follow - infact, they have  extra rules that tables don\u2019t. To sum up:\n Multivals cannot be assigned to variables. They can only referred toas literals, function call expressions, or the vararg  ....\n The vararg cannot be used outside the function that creates it(including within closures made within that function).\n Multivals are cut off at the first value when inserting them intoanother multival before its end.\n Unlike tables, multivals have a built-in length that is unrelated tothe arrangement of  nils within the multival. This length can beretrieved with  select(&#34;#&#34;, ...).\n When a multival contains a call to a zero-return-value functionbefore the end of the multival, a  nil is inserted where thefunction\u2019s return value would go.\n When a function makes a recursive call within a multival, tail callelimination is not applied. Recursing too many times within amultival will thus blow the stack.\n  Trying to call or return from a function with too many argumentswill result in an error. This limit is much lower than thepreviously-mentioned limit on unpacking tables, being just below 255items.\n  Finally, one incredibly subjective thing that bugs me about multivalsis the syntax used for the vararg. In my opinion, the fact that  ...is valid Lua makes it unnecessarily hard to insert aneasily-understood placeholder into example code.\n  While multivals remain a strange and sharp-edged corner of Lua, I hopethat they\u2019re a little bit easier to understand thanks to thispost. While they\u2019re rarely the best solution to a given problem, it\u2019sstill helpful for a Lua user to understand their strengths andlimitations, even if it\u2019s only to justify avoiding them.\n   Also known as Tail Call Optimization. JavaScriptCore, used inSafari, has  Proper Tail CallSupport,but most JS developers can\u2019t make use of this, as it\u2019s notavailable in popular browsers on most platforms.  \u21a9\n In Fennel, this syntactical confusion gets even worse! There,instead of having their own special syntax, multivals arerepresented with the  values special.  (values 1 2 3) in Fennelis the same as  1, 2, 3 in Lua. Unfortunately, this makesrecursive functions that run into this scenario look even  morelike real tail-recursive functions. This is a gotcha to keep inmind whenever working with multivals and recursion in Fennel!  \u21a9", "posttime": "2020-05-06 00:18:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u77e5\u9053,lua,\u51fd\u6570,multival", "title": "\u4f60\u4e0d\u60f3\u77e5\u9053\u7684\u5173\u4e8eLua\u7684\u591a\u91cd\u4ef7\u503c\u7684\u4e00\u5207", "title_en": "Everything You Didn't Want to Know About Lua's Multi-Values", "transed": 1, "url": "https://benaiah.me/posts/everything-you-didnt-want-to-know-about-lua-multivals/", "via": "", "real_tags": ["\u77e5\u9053", "lua", "\u51fd\u6570", "multival"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000782, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Web\u6388\u6743\u534f\u8baeT.LodderstedtInternet-Draft yes.com\u5305\u542b\u72b6\u6001\uff1a\u6700\u4f73\u5f53\u524d\u5b9e\u8df5J.Bradley Expires\uff1a2020\u5e7410\u67087\u65e5Yubio A.Labunets D.Fett yes.com 2020\u5e744\u67085\u65e5OAuth 2.0\u5b89\u5168\u6700\u4f73\u5f53\u524d\u5b9e\u8df5\u8349\u6848-IETF-OAuth-Security-Themes-15\u6458\u8981\u672c\u6587\u6863\u63cf\u8ff0\u4e86OAuth 2.0\u7684\u6700\u4f73\u5f53\u524d\u5b89\u5168\u5b9e\u8df5\u3002\u5b83\u66f4\u65b0\u548c\u6269\u5c55\u4e86OAuth 2.0\u5b89\u5168\u5a01\u80c1\u6a21\u578b\uff0c\u4ee5\u7eb3\u5165\u81eaOAuth 2.0\u53d1\u5e03\u4ee5\u6765\u6536\u96c6\u7684\u5b9e\u9645\u7ecf\u9a8c\uff0c\u5e76\u6db5\u76d6\u4e86\u7531\u4e8eOAuth 2.0\u7684\u66f4\u5e7f\u6cdb\u5e94\u7528\u800c\u5e26\u6765\u7684\u65b0\u5a01\u80c1\u3002\u672c\u5907\u5fd8\u5f55\u7684\u72b6\u6001\u672c\u4e92\u8054\u7f51\u8349\u6848\u5b8c\u5168\u7b26\u5408BCP 78\u548cBCP 79\u7684\u89c4\u5b9a\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4(IETF)\u7684\u5de5\u4f5c\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u5c0f\u7ec4\u4e5f\u53ef\u4ee5\u5c06\u5de5\u4f5c\u6587\u4ef6\u4f5c\u4e3a\u4e92\u8054\u7f51\u8349\u7a3f\u5206\u53d1\u3002\u76ee\u524d\u7684\u4e92\u8054\u7f51\u8349\u7a3f\u5217\u8868\u5728https://datatracker.ietf.org/drafts/current/.\u3002\u4e92\u8054\u7f51\u8349\u6848\u662f\u6709\u6548\u671f\u6700\u957f\u4e3a6\u4e2a\u6708\u7684\u8349\u6848\u6587\u4ef6\uff0c\u53ef\u968f\u65f6\u66f4\u65b0\u3001\u66ff\u6362\u6216\u88ab\u5176\u4ed6\u6587\u4ef6\u6dd8\u6c70\u3002\u4f7f\u7528\u4e92\u8054\u7f51\u8349\u7a3f\u4f5c\u4e3a\u53c2\u8003\u6750\u6599\u6216\u5c06\u5176\u4f5c\u4e3a\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u4ee5\u5916\u7684\u5f15\u7528\u662f\u4e0d\u5408\u9002\u7684\u3002\u672c\u4e92\u8054\u7f51\u8349\u7a3f\u5c06\u4e8e2020\u5e7410\u67087\u65e5\u5230\u671f\u3002\u7248\u6743\u6240\u6709(C)2020 IETF Trust\u548c\u6307\u5b9a\u4e3a\u6587\u6863\u4f5c\u8005\u7684\u4eba\u5458\u3002\u7248\u6743\u6240\u6709\u3002\u672c\u6587\u4ef6\u53d7BCP78\u548cIETF Trust\u5173\u4e8eIETF\u6587\u4ef6(https://trustee.ietf.org/\u8bb8\u53ef\u8bc1\u4fe1\u606f)\u7684\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7ea6\u675f\uff0c\u81ea\u672c\u6587\u4ef6\u53d1\u5e03\u4e4b\u65e5\u8d77\u751f\u6548\u3002\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u8fd9\u4e9b\u6587\u6863\uff0c\u56e0\u4e3a\u5b83\u4eec\u63cf\u8ff0\u4e86\u60a8\u7684\u6743\u5229Lodderstedt\u7b49\u4eba\u30022020\u5e7410\u67087\u65e5\u5230\u671f[\u7b2c1\u9875]\u3002\n\u4e92\u8054\u7f51-\u8349\u6848OAuth-\u5b89\u5168-\u4e3b\u98982020\u5e744\u6708\u4ee5\u53ca\u4e0e\u672c\u6587\u6863\u76f8\u5173\u7684\u9650\u5236\u3002\u672c\u6587\u6863\u4e2d\u63d0\u53d6\u7684\u4ee3\u7801\u7ec4\u4ef6\u5fc5\u987b\u5305\u62ec\u7b80\u5316\u7684BSD\u8bb8\u53ef\u6587\u672c\uff0c\u5982\u4fe1\u6258\u6cd5\u5f8b\u89c4\u5b9a\u7684\u7b2c4.e\u8282\u6240\u8ff0\uff0c\u5e76\u4e14\u5982\u7b80\u5316\u7684BSD\u8bb8\u53ef\u4e2d\u6240\u8ff0\u4e0d\u63d0\u4f9b\u62c5\u4fdd\u3002\u76ee\u5f551.\u7b80\u4ecb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30023 1.1.\u3002\u7ed3\u6784\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024 1.2.\u3002\u7ea6\u5b9a\u548c\u672f\u8bed\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30024.\u5efa\u8bae\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30025 2.1.\u3002\u4fdd\u62a4\u57fa\u4e8e\u91cd\u5b9a\u5411\u7684\u6d41\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30025 2.1.1\u3002\u6388\u6743\u7801\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30026 2.1.2\u3002\u9690\u542b\u7684\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30026 2.2.\u3002\u4ee4\u724c\u91cd\u653e\u9632\u6b62\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30027 2.3.\u3002\u8bbf\u95ee\u4ee4\u724c\u6743\u9650\u9650\u5236\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30027 2.4.\u3002\u8d44\u6e90\u6240\u6709\u8005\u5bc6\u7801\u51ed\u636e\u6388\u4e88\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 2.5.\u3002\u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 2.6.\u3002\u5176\u4ed6\u5efa\u8bae\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30028 3.\u66f4\u65b0\u7684OAuth 2.0\u653b\u51fb\u8005\u6a21\u578b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u30029 4.\u653b\u51fb\u53ca\u51cf\u5211\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.\u3002\u91cd\u5b9a\u5411URI\u9a8c\u8bc1\u4e0d\u8db3\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.1\u3002\u91cd\u5b9a\u5411\u6388\u6743\u4ee3\u7801\u6388\u4e88\u4e0a\u7684URI\u9a8c\u8bc1\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300211 4.1.2\u3002\u91cd\u5b9a\u5411\u9690\u5f0fGRANT\u4e0a\u7684URI\u9a8c\u8bc1\u653b\u51fb\u3002\u300213 4.1.3.\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300214 4.2.\u3002\u901a\u8fc7Referer\u6807\u5934\u6cc4\u9732\u51ed\u636e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.1\u3002\u4eceOAuth\u5ba2\u6237\u7aef\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.2\u3002\u4ece\u6388\u6743\u670d\u52a1\u5668\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300215 4.2.3\u3002\u540e\u679c\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300216 4.2.4.\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002164.3.\u3002\u901a\u8fc7\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u6cc4\u9732\u51ed\u636e\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.3.1.\u3002\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u4e2d\u7684\u6388\u6743\u7801\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.3.2\u3002\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u4e2d\u7684\u8bbf\u95ee\u4ee4\u724c\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300217 4.4.\u3002\u6df7\u6742\u7684\u653b\u51fb\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 4.4.1\u3002\u653b\u51fb\u63cf\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300218 4.4.2\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002204.5\u3002\u6388\u6743\u7801\u6ce8\u5165\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 4.5.1\u3002\u653b\u51fb\u63cf\u8ff0\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300221 4.5.2\u3002\u8ba8\u8bba\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300222 4.5.3\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300223 4.5.4\u3002\u9650\u5236\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002244.6.\u3002\u8bbf\u95ee\u4ee4\u724c\u6ce8\u5165\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300224 4.6.1\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.7.\u3002\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.7.1\u3002\u5bf9\u7b56\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.8\u3002\u8d44\u6e90\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u4ee4\u724c\u6cc4\u6f0f\u3002\u3002\u3002\u3002\u3002\u3002\u300225 4.8.1\u3002\u5047\u5192\u8d44\u6e90Lodderstedt\u7b49\u4eba\u7684\u8bbf\u95ee\u4ee4\u724c\u7f51\u7edc\u9493\u9c7c\u30022020\u5e7410\u67087\u65e5\u5230\u671f[\u7b2c2\u9875]\u3002\n\u4e92\u8054\u7f51-\u8349\u6848OAuth-\u5b89\u5168-\u4e3b\u98982020\u5e744\u6708\u670d\u52a1\u5668\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300226 4.8.2.\u3002\u53d7\u635f\u7684\u8d44\u6e90\u670d\u52a1\u5668\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u300231 4.9.\u3002\u6253\u5f00\u91cd\u5b9a\u5411\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\nInternet-\u8349\u6848OAuth-security-\u4e3b\u98982020\u5e744\u67083.\u66f4\u65b0\u7684OAuth 2.0\u653b\u51fb\u8005\u6a21\u578b\u5728[RFC6819]\u4e2d\uff0c\u5217\u51fa\u4e86\u4e00\u4e2a\u653b\u51fb\u8005\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u63cf\u8ff0\u4e86\u5fc5\u987b\u4fdd\u62a4OAuth\u90e8\u7f72\u514d\u53d7\u653b\u51fb\u7684\u653b\u51fb\u8005\u7684\u80fd\u529b\u3002\u5728\u4ee5\u4e0b\u5185\u5bb9\u4e2d\uff0c\u6b64\u5c5e\u6027\u3002\n..", "note_en": "Web Authorization Protocol T. LodderstedtInternet-Draft yes.comIntended status: Best Current Practice J. BradleyExpires: 7 October 2020 Yubico A. Labunets D. Fett yes.com 5 April 2020  OAuth 2.0 Security Best Current Practice  draft-ietf-oauth-security-topics-15Abstract This document describes best current security practice for OAuth 2.0. It updates and extends the OAuth 2.0 Security Threat Model to incorporate practical experiences gathered since OAuth 2.0 was published and covers new threats relevant due to the broader application of OAuth 2.0.Status of This Memo This Internet-Draft is submitted in full conformance with the provisions of  BCP 78 and  BCP 79. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF). Note that other groups may also distribute working documents as Internet-Drafts. The list of current Internet- Drafts is at  https://datatracker.ietf.org/drafts/current/. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as &#34;work in progress.&#34; This Internet-Draft will expire on 7 October 2020.Copyright Notice Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to  BCP 78 and the IETF Trust&#39;s Legal Provisions Relating to IETF Documents ( https://trustee.ietf.org/  license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights Lodderstedt, et al. Expires 7 October 2020 [Page 1]\n  Internet-Draft oauth-security-topics April 2020 and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the  Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.Table of Contents  1. Introduction . . . . . . . . . . . . . . . . . . . . . . . .  3  1.1. Structure . . . . . . . . . . . . . . . . . . . . . . . .  4  1.2. Conventions and Terminology . . . . . . . . . . . . . . .  4  2. Recommendations . . . . . . . . . . . . . . . . . . . . . . .  5  2.1. Protecting Redirect-Based Flows . . . . . . . . . . . . .  5  2.1.1. Authorization Code Grant . . . . . . . . . . . . . .  6  2.1.2. Implicit Grant . . . . . . . . . . . . . . . . . . .  6  2.2. Token Replay Prevention . . . . . . . . . . . . . . . . .  7  2.3. Access Token Privilege Restriction . . . . . . . . . . .  7  2.4. Resource Owner Password Credentials Grant . . . . . . . .  8  2.5. Client Authentication . . . . . . . . . . . . . . . . . .  8  2.6. Other Recommendations . . . . . . . . . . . . . . . . . .  8  3. The Updated OAuth 2.0 Attacker Model . . . . . . . . . . . .  9  4. Attacks and Mitigations . . . . . . . . . . . . . . . . . . .  11  4.1. Insufficient Redirect URI Validation . . . . . . . . . .  11 4.1.1. Redirect URI Validation Attacks on Authorization Code Grant . . . . . . . . . . . . . . . . . . . . . . . .  11  4.1.2. Redirect URI Validation Attacks on Implicit Grant . .  13  4.1.3. Countermeasures . . . . . . . . . . . . . . . . . . .  14  4.2. Credential Leakage via Referer Headers . . . . . . . . .  15  4.2.1. Leakage from the OAuth Client . . . . . . . . . . . .  15  4.2.2. Leakage from the Authorization Server . . . . . . . .  15  4.2.3. Consequences . . . . . . . . . . . . . . . . . . . .  16  4.2.4. Countermeasures . . . . . . . . . . . . . . . . . . .  16  4.3. Credential Leakage via Browser History . . . . . . . . .  17  4.3.1. Authorization Code in Browser History . . . . . . . .  17  4.3.2. Access Token in Browser History . . . . . . . . . . .  17  4.4. Mix-Up Attacks . . . . . . . . . . . . . . . . . . . . .  18  4.4.1. Attack Description . . . . . . . . . . . . . . . . .  18  4.4.2. Countermeasures . . . . . . . . . . . . . . . . . . .  20  4.5. Authorization Code Injection . . . . . . . . . . . . . .  21  4.5.1. Attack Description . . . . . . . . . . . . . . . . .  21  4.5.2. Discussion . . . . . . . . . . . . . . . . . . . . .  22  4.5.3. Countermeasures . . . . . . . . . . . . . . . . . . .  23  4.5.4. Limitations . . . . . . . . . . . . . . . . . . . . .  24  4.6. Access Token Injection . . . . . . . . . . . . . . . . .  24  4.6.1. Countermeasures . . . . . . . . . . . . . . . . . . .  25  4.7. Cross Site Request Forgery . . . . . . . . . . . . . . .  25  4.7.1. Countermeasures . . . . . . . . . . . . . . . . . . .  25  4.8. Access Token Leakage at the Resource Server . . . . . . .  25 4.8.1. Access Token Phishing by Counterfeit Resource Lodderstedt, et al. Expires 7 October 2020 [Page 2]\n  Internet-Draft oauth-security-topics April 2020 Server . . . . . . . . . . . . . . . . . . . . . . .  26  4.8.2. Compromised Resource Server . . . . . . . . . . . . .  31  4.9. Open Redirection . . . . . . . . . . . . . . . . . . . .  31  4.9.1. Client as Open Redirector . . . . . . . . . . . . . .  32  4.9.2. Authorization Server as Open Redirector . . . . . . .  32  4.10. 307 Redirect . . . . . . . . . . . . . . . . . . . . . .  32  4.11. TLS Terminating Reverse Proxies . . . . . . . . . . . . .  33  4.12. Refresh Token Protection . . . . . . . . . . . . . . . .  34  4.12.1. Discussion . . . . . . . . . . . . . . . . . . . . .  34  4.12.2. Recommendations . . . . . . . . . . . . . . . . . .  35  4.13. Client Impersonating Resource Owner . . . . . . . . . . .  36  4.13.1. Countermeasures . . . . . . . . . . . . . . . . . .  36  4.14. Clickjacking . . . . . . . . . . . . . . . . . . . . . .  36  5. Acknowledgements . . . . . . . . . . . . . . . . . . . . . .  37  6. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  38  7. Security Considerations . . . . . . . . . . . . . . . . . . .  38  8. Normative References . . . . . . . . . . . . . . . . . . . .  38  9. Informative References . . . . . . . . . . . . . . . . . . .  39  Appendix A. Document History . . . . . . . . . . . . . . . . . .  42 Authors&#39; Addresses . . . . . . . . . . . . . . . . . . . . . . .  46  1. Introduction Since its publication in [ RFC6749] and [ RFC6750], OAuth 2.0 (&#34;OAuth&#34; in the following) has gotten massive traction in the market and became the standard for API protection and the basis for federated login using OpenID Connect [ OpenID]. While OAuth is used in a variety of scenarios and different kinds of deployments, the following challenges can be observed: * OAuth implementations are being attacked through known implementation weaknesses and anti-patterns. Although most of these threats are discussed in the OAuth 2.0 Threat Model and Security Considerations [ RFC6819], continued exploitation demonstrates a need for more specific recommendations, easier to implement mitigations, and more defense in depth. * OAuth is being used in environments with higher security requirements than considered initially, such as Open Banking, eHealth, eGovernment, and Electronic Signatures. Those use cases call for stricter guidelines and additional protection. * OAuth is being used in much more dynamic setups than originally anticipated, creating new challenges with respect to security. Those challenges go beyond the original scope of [ RFC6749], [ RFC6750], and [ RFC6819]. Lodderstedt, et al. Expires 7 October 2020 [Page 3]\n  Internet-Draft oauth-security-topics April 2020 OAuth initially assumed a static relationship between client, authorization server and resource servers. The URLs of AS and RS were known to the client at deployment time and built an anchor for the trust relationship among those parties. The validation whether the client talks to a legitimate server was based on TLS server authentication (see  [RFC6819], Section\u00a04.5.4). With the increasing adoption of OAuth, this simple model dissolved and, in several scenarios, was replaced by a dynamic establishment of the relationship between clients on one side and the authorization and resource servers of a particular deployment on the other side. This way, the same client could be used to access services of different providers (in case of standard APIs, such as e-mail or OpenID Connect) or serve as a frontend to a particular tenant in a multi-tenancy environment. Extensions of OAuth, such as the OAuth 2.0 Dynamic Client Registration Protocol [ RFC7591] and OAuth 2.0 Authorization Server Metadata [ RFC8414] were developed in order to support the usage of OAuth in dynamic scenarios. * Technology has changed. For example, the way browsers treat fragments when redirecting requests has changed, and with it, the implicit grant&#39;s underlying security model. This document provides updated security recommendations to address these challenges. It does not supplant the security advice given in [ RFC6749], [ RFC6750], and [ RFC6819], but complements those documents.  1.1. Structure The remainder of this document is organized as follows: The next section summarizes the most important recommendations of the OAuth working group for every OAuth implementor. Afterwards, the updated the OAuth attacker model is presented. Subsequently, a detailed analysis of the threats and implementation issues that can be found in the wild today is given along with a discussion of potential countermeasures.  1.2. Conventions and Terminology The key words &#34;MUST&#34;, &#34;MUST NOT&#34;, &#34;REQUIRED&#34;, &#34;SHALL&#34;, &#34;SHALL NOT&#34;, &#34;SHOULD&#34;, &#34;SHOULD NOT&#34;, &#34;RECOMMENDED&#34;, &#34;NOT RECOMMENDED&#34;, &#34;MAY&#34;, and &#34;OPTIONAL&#34; in this document are to be interpreted as described in  BCP  14 [ RFC2119] [ RFC8174] when, and only when, they appear in all capitals, as shown here. This specification uses the terms &#34;access token&#34;, &#34;authorization endpoint&#34;, &#34;authorization grant&#34;, &#34;authorization server&#34;, &#34;client&#34;, &#34;client identifier&#34; (client ID), &#34;protected resource&#34;, &#34;refresh Lodderstedt, et al. Expires 7 October 2020 [Page 4]\n  Internet-Draft oauth-security-topics April 2020 token&#34;, &#34;resource owner&#34;, &#34;resource server&#34;, and &#34;token endpoint&#34; defined by OAuth 2.0 [ RFC6749].  2. Recommendations This section describes the set of security mechanisms the OAuth working group recommends to OAuth implementers.  2.1. Protecting Redirect-Based Flows When comparing client redirect URIs against pre-registered URIs, authorization servers MUST utilize exact string matching. This measure contributes to the prevention of leakage of authorization codes and access tokens (see  Section 4.1). It can also help to detect mix-up attacks (see  Section 4.4). Clients MUST NOT expose URLs that forward the user&#39;s browser to arbitrary URIs obtained from a query parameter (&#34;open redirector&#34;). Open redirectors can enable exfiltration of authorization codes and access tokens, see  Section 4.9.1. Clients MUST prevent Cross-Site Request Forgery (CSRF). In this context, CSRF refers to requests to the redirection endpoint that do not originate at the authorization server, but a malicious third party (see  Section\u00a04.4.1.8. of [RFC6819] for details). Clients that have ensured that the authorization server supports PKCE [ RFC7636] MAY rely the CSRF protection provided by PKCE. In OpenID Connect flows, the &#34;nonce&#34; parameter provides CSRF protection. Otherwise, one-time use CSRF tokens carried in the &#34;state&#34; parameter that are securely bound to the user agent MUST be used for CSRF protection (see  Section 4.7.1). In order to prevent mix-up attacks (see  Section 4.4), clients MUST only process redirect responses of the authorization server they sent the respective request to and from the same user agent this authorization request was initiated with. Clients MUST store the authorization server they sent an authorization request to and bind this information to the user agent and check that the authorization request was received from the correct authorization server. Clients MUST ensure that the subsequent token request, if applicable, is sent to the same authorization server. Clients SHOULD use distinct redirect URIs for each authorization server as a means to identify the authorization server a particular response came from. An AS that redirects a request potentially containing user credentials MUST avoid forwarding these user credentials accidentally (see  Section 4.10 for details). Lodderstedt, et al. Expires 7 October 2020 [Page 5]\n  Internet-Draft oauth-security-topics April 2020  2.1.1. Authorization Code Grant Clients MUST prevent injection (replay) of authorization codes into the authorization response by attackers. The use of PKCE [ RFC7636] is RECOMMENDED to this end. The OpenID Connect &#34;nonce&#34; parameter and ID Token Claim [ OpenID] MAY be used as well. The PKCE challenge or OpenID Connect &#34;nonce&#34; MUST be transaction-specific and securely bound to the client and the user agent in which the transaction was started. Note: although PKCE so far was designed as a mechanism to protect native apps, this advice applies to all kinds of OAuth clients, including web applications. When using PKCE, clients SHOULD use PKCE code challenge methods that do not expose the PKCE verifier in the authorization request. Otherwise, attackers that can read the authorization request (cf. Attacker A4 in  Section 3) can break the security provided by PKCE. Currently, &#34;S256&#34; is the only such method. Authorization servers MUST support PKCE [ RFC7636]. Authorization servers MUST provide a way to detect their support for PKCE. To this end, they MUST either (a) publish the element &#34;code_challenge_methods_supported&#34; in their AS metadata ([ RFC8414]) containing the supported PKCE challenge methods (which can be used by the client to detect PKCE support) or (b) provide a deployment- specific way to ensure or determine PKCE support by the AS.  2.1.2. Implicit Grant The implicit grant (response type &#34;token&#34;) and other response types causing the authorization server to issue access tokens in the authorization response are vulnerable to access token leakage and access token replay as described in  Section 4.1,  Section 4.2,  Section 4.3, and  Section 4.6. Moreover, no viable mechanism exists to cryptographically bind access tokens issued in the authorization response to a certain client as it is recommended in  Section 2.2. This makes replay detection for such access tokens at resource servers impossible. In order to avoid these issues, clients SHOULD NOT use the implicit grant (response type &#34;token&#34;) or other response types issuing access tokens in the authorization response, unless access token injection in the authorization response is prevented and the aforementioned token leakage vectors are mitigated. Lodderstedt, et al. Expires 7 October 2020 [Page 6]\n  Internet-Draft oauth-security-topics April 2020 Clients SHOULD instead use the response type &#34;code&#34; (aka authorization code grant type) as specified in  Section 2.1.1 or any other response type that causes the authorization server to issue access tokens in the token response, such as the &#34;code id_token&#34; response type. This allows the authorization server to detect replay attempts by attackers and generally reduces the attack surface since access tokens are not exposed in URLs. It also allows the authorization server to sender-constrain the issued tokens (see next section).  2.2. Token Replay Prevention A sender-constrained access token scopes the applicability of an access token to a certain sender. This sender is obliged to demonstrate knowledge of a certain secret as prerequisite for the acceptance of that token at the recipient (e.g., a resource server). Authorization and resource servers SHOULD use mechanisms for sender- constrained access tokens to prevent token replay as described in  Section 4.8.1.1.2. The use of Mutual TLS for OAuth 2.0 [ RFC8705] is RECOMMENDED. Refresh tokens MUST be sender-constrained or use refresh token rotation as described in  Section 4.12. It is RECOMMENDED to use end-to-end TLS. If TLS traffic needs to be terminated at an intermediary, refer to  Section 4.11 for further security advice.  2.3. Access Token Privilege Restriction The privileges associated with an access token SHOULD be restricted to the minimum required for the particular application or use case. This prevents clients from exceeding the privileges authorized by the resource owner. It also prevents users from exceeding their privileges authorized by the respective security policy. Privilege restrictions also help to reduce the impact of access token leakage. In particular, access tokens SHOULD be restricted to certain resource servers (audience restriction), preferably to a single resource server. To put this into effect, the authorization server associates the access token with certain resource servers and every resource server is obliged to verify, for every request, whether the access token sent with that request was meant to be used for that particular resource server. If not, the resource server MUST refuse to serve the respective request. Clients and authorization servers MAY utilize the parameters &#34;scope&#34; or &#34;resource&#34; as specified in [ RFC6749] and [ I-D.ietf-oauth-resource-indicators], respectively, to determine the resource server they want to access. Lodderstedt, et al. Expires 7 October 2020 [Page 7]\n  Internet-Draft oauth-security-topics April 2020 Additionally, access tokens SHOULD be restricted to certain resources and actions on resource servers or resources. To put this into effect, the authorization server associates the access token with the respective resource and actions and every resource server is obliged to verify, for every request, whether the access token sent with that request was meant to be used for that particular action on the particular resource. If not, the resource server must refuse to serve the respective request. Clients and authorization servers MAY utilize the parameter &#34;scope&#34; as specified in [ RFC6749] and &#34;authorization_details&#34; as specified in [ I-D.ietf-oauth-rar] to determine those resources and/or actions.  2.4. Resource Owner Password Credentials Grant The resource owner password credentials grant MUST NOT be used. This grant type insecurely exposes the credentials of the resource owner to the client. Even if the client is benign, this results in an increased attack surface (credentials can leak in more places than just the AS) and users are trained to enter their credentials in places other than the AS. Furthermore, adapting the resource owner password credentials grant to two-factor authentication, authentication with cryptographic credentials (cf. WebCrypto [ webcrypto], WebAuthn [ webauthn]), and authentication processes that require multiple steps can be hard or impossible.  2.5. Client Authentication Authorization servers SHOULD use client authentication if possible. It is RECOMMENDED to use asymmetric (public-key based) methods for client authentication such as mTLS [ RFC8705] or &#34;private_key_jwt&#34; [ OpenID]. When asymmetric methods for client authentication are used, authorization servers do not need to store sensitive symmetric keys, making these methods more robust against a number of attacks.  2.6. Other Recommendations Authorization servers SHOULD NOT allow clients to influence their &#34;client_id&#34; or &#34;sub&#34; value or any other claim if that can cause confusion with a genuine resource owner (see  Section 4.13). Lodderstedt, et al. Expires 7 October 2020 [Page 8]\n  Internet-Draft oauth-security-topics April 2020  3. The Updated OAuth 2.0 Attacker Model In [ RFC6819], an attacker model is laid out that describes the capabilities of attackers against which OAuth deployments must be protected. In the following, this att\n......", "posttime": "2020-05-05 23:54:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f53\u524d,current,oauth", "title": "OAuth 2.0\u5b89\u5168\u6700\u4f73\u5f53\u524d\u5b9e\u8df5", "title_en": "OAuth 2.0 Security Best Current Practice", "transed": 1, "url": "https://tools.ietf.org/html/draft-ietf-oauth-security-topics-15", "via": "", "real_tags": ["\u5f53\u524d", "current", "oauth"]}, {"category": "", "categoryclass": "", "imagename": "e143cdc76004a381ee210eb9db2ac105.png", "infoid": 1000781, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u521a\u521a\u5f00\u6e90\u4e86\u201cReaction Flow\u201d\uff1a\u4e00\u4e2a\u7528\u4e8e\u5448\u73b0\u57fa\u4e8e\u8282\u70b9\u7684\u4ea4\u4e92\u5f0f\u56fe\u5f62\u7684\u5e93\uff0c\u5b83\u5177\u6709\u6d41\u7545\u7684\u5e73\u79fb\u548c\u7f29\u653e\u884c\u4e3a\uff0c\u6709\u5f88\u591a\u4e0d\u9519\u7684\u529f\u80fd\uff0c\u751a\u81f3\u8fd8\u6709\u4e00\u4e9b\u6709\u7528\u7684\u63d2\u4ef6\uff0c\u6bd4\u5982\u8ff7\u4f60\u5730\u56fe\uff01\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684Reaction Flow\u5e94\u7528\u7a0b\u5e8f\u793a\u4f8b\u3002\u5982\u679c\u60a8\u60f3\u66f4\u5feb\u5165\u95e8\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f6c\u5230\u6587\u6863\u6216\u67e5\u770b\u6f14\u793a\uff1a\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5f00\u53d1\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u57fa\u4e8e\u8282\u70b9\u7684\u5de5\u5177\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u6536\u5230\u60a8\u7684\u6d88\u606f\uff1a[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]\u3002\nReaction Flow\u4e0d\u4ec5\u5448\u73b0\u56fe\u5f62\uff0c\u8fd8\u589e\u52a0\u4e86\u4ea4\u4e92\u6027\uff0c\u5e76\u9644\u5e26\u4e86\u8bb8\u591a\u5185\u7f6e\u529f\u80fd\uff1a\n\u4e3a\u4e86\u4f7f\u8fd9\u4e2a\u5e93\u5c3d\u53ef\u80fd\u7075\u6d3b\uff0c\u9664\u4e86\u4f4d\u7f6e\u4e4b\u5916\uff0c\u6211\u4eec\u4e0d\u505a\u4efb\u4f55\u72b6\u6001\u66f4\u65b0\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u81ea\u5df1\u4f20\u9012\u66f4\u6539\u663e\u793a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u51fd\u6570\u3002\u60a8\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u9644\u5e26\u7684\u5e2e\u52a9\u5668\u51fd\u6570\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7NPM\u5b89\u88c5Reaction Flow\u3002\u9057\u61be\u7684\u662f\uff0cReaction-Flow\u5df2\u7ecf\u88ab\u83b7\u53d6\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5b89\u88c5Reaction-Flow-\u6e32\u67d3\u5668\uff1a\n\u73b0\u5728\u60a8\u53ef\u4ee5\u5c06\u5176\u96c6\u6210\u5230\u60a8\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\u7b80\u5355\u7684\u56fe\u8868\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u4ece&#39\uff1bREACT&#39\uff1b\u5bfc\u5165ReactFlow\u4ece&#39\uff1bREACT-FLOW-RENDER&#39\uff1b\uff1b\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a250\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 2&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1be1-2&#39\uff1b\uff0c\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b2&#39\uff1b\uff0c\u52a8\u753b\uff1atrue}]\uff1b\u5e38\u91cf\u56fe\u5f62\u6837\u5f0f={\u5bbd\u5ea6\uff1a&#39\uff1b100%&#39\uff1b\uff0c\u9ad8\u5ea6\uff1a&#39\uff1b500px&#39\uff1b}\uff1b\u5e38\u91cf\u57fa\u672c\u56fe\u5f62=()=&lt\uff1bReactFlow Elements={Elements}style={raphStyles}/&gt\uff1b\uff1b\n\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u6b63\u5728\u5c06\u5143\u7d20\u4f20\u9012\u7ed9ReactFlow\u7ec4\u4ef6\u3002\u5728\u5143\u7d20\u5217\u8868\u4e2d\u6709\u4e24\u4e2a\u8282\u70b9\u548c\u5c06\u8fd9\u4e9b\u8282\u70b9\u5f7c\u6b64\u8fde\u63a5\u7684\u8fb9\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u6e90\u5c5e\u6027\u548c\u76ee\u6807\u5c5e\u6027\u7684\u5b58\u5728\u6765\u6807\u8bc6\u8fb9\u3002\u8282\u70b9\u6709\u4e00\u4e9b\u521d\u59cb\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u4f1a\u91cd\u53e0\u3002\u6211\u4eec\u8fd8\u4f20\u9012\u4e86\u4e00\u4e2a\u6837\u5f0f\uff0c\u4ee5\u4fbf\u83b7\u5f97\u4e00\u4e9b\u7a7a\u95f4\u6765\u5448\u73b0\u56fe\u5f62\u3002\u60a8\u53ef\u4ee5\u5728\u6587\u6863\u4e2d\u627e\u5230\u5b8c\u6574\u7684\u9009\u9879\u5217\u8868\u3002\u4e0a\u9762\u7684\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a\n\u56fe\u5f62\u51e0\u4e4e\u603b\u662f\u5177\u6709\u4e0d\u540c\u7684\u8282\u70b9\u7c7b\u578b\u3002\u53cd\u5e94\u6d41\u6709\u4e09\u79cd\u57fa\u672c\u7c7b\u578b\uff1a\u8f93\u5165\u3001\u9ed8\u8ba4\u548c\u8f93\u51fa\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8282\u70b9\u7684\u7c7b\u578b\u5c5e\u6027\u9009\u62e9\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1b\u8f93\u5165\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u9ed8\u8ba4&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1b\u9ed8\u8ba4\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1b3&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u51fa&#39\uff1b\uff0c\u6570\u636e\uff1a{label\uff1a&#39\uff1b\u8f93\u51fa\u8282\u70b9&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a200}}]\uff1b\n\u5982\u60a8\u6240\u89c1\uff0c\u5141\u8bb8\u60a8\u8fde\u63a5\u8282\u70b9\u7684\u53e5\u67c4\u548c\u7c7b\u578b\u7684\u989c\u8272\u662f\u4e0d\u540c\u7684\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u5e26\u6709CSS\u89c4\u5219\u7684\u6807\u7b7e\u548c\u6837\u5f0f\u5bf9\u8c61\u6765\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u73b0\u6709\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u6837\u5f0f\uff1a{\u80cc\u666f\uff1a&#39\uff1b#ffcc50&#39\uff1b\uff0c\u5bbd\u5ea6\uff1a100}\uff0c\u6570\u636e\uff1a{label\uff1a&#39\uff1b\u81ea\u5b9a\u4e49\u6837\u5f0f&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a5}}]\uff1b\n\u53cd\u5e94\u6d41\u5177\u6709\u4ee5\u4e0b\u8fb9\u7c7b\u578b\uff1a\u76f4\u3001\u9ed8\u8ba4\u3001\u9636\u8dc3\u3002\u4e0e\u8282\u70b9\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u7c7b\u578b\u4f20\u9012\u7ed9\u5143\u7d20\u5217\u8868\u4e2d\u7684\u8fb9\u6765\u9009\u62e9\u7c7b\u578b\uff1a\n\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a5\uff0cy\uff1a5}}\uff0c{id\uff1a&#39\uff1b2&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 2&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a100\uff0cy\uff1a100}}\uff0c{id\uff1a&#39\uff1b3&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 3&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a250\uff0cy\uff1a150}}\uff0c{id\uff1a&#39\uff1b4&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 4&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a500\uff0cy\uff1a200}}\uff0c{id\uff1a&#39\uff1bE1-2&39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b2&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u76f4\u901a&#39\uff1b}\uff0c{id\uff1a&#39\uff1bE1-3&39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b3&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u9ed8\u8ba4&#39\uff1b}\uff0c{id\uff1a&#39\uff1bE1-4&#39\uff1b\uff0c\u6765\u6e90\uff1a&#39\uff1b1&#39\uff1b\uff0c\u76ee\u6807\uff1a&#39\uff1b4&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u6b65\u9aa4&#39\uff1b}]\uff1b\n\u5982\u679c\u60a8\u60f3\u521b\u5efa\u81ea\u5b9a\u4e49\u8282\u70b9\u6216\u8fb9\u7c7b\u578b\uff0c\u53ef\u4ee5\u67e5\u770b\u81ea\u5b9a\u4e49\u8282\u70b9\u793a\u4f8b\u7684\u6e90\u4ee3\u7801\u3002\u5728\u90a3\u91cc\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8282\u70b9\u7ec4\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u5c06\u5176\u4f5c\u4e3anodeTypes\u5c5e\u6027\u4f20\u9012\u7ed9Reaction\u6d41\u7ec4\u4ef6\uff0c\u4f7f\u5176\u5728\u5448\u73b0\u5668\u4e2d\u53ef\u7528\u3002\n\u6b63\u5982\u6211\u5728\u524d\u9762\u6307\u51fa\u7684\uff0cReaction\u6d41\u5177\u6709\u4e00\u4e9b\u57fa\u672c\u7684\u4ea4\u4e92\u6027\uff0c\u4f46\u4e0d\u4f1a\u5bf9\u5448\u73b0\u7684\u5143\u7d20\u8fdb\u884c\u72b6\u6001\u66f4\u65b0\u3002\u60a8\u53ef\u4ee5\u7f29\u653e\u3001\u5e73\u79fb\u548c\u62d6\u52a8\u6216\u9009\u62e9\u5143\u7d20\uff0c\u4f46\u662f\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u6216\u5220\u9664\u8282\u70b9\uff0c\u4f8b\u5982\uff0c\u60a8\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6216\u8005\u4f7f\u7528Reaction\u6d41\u5e2e\u52a9\u5668\u51fd\u6570\u4e4b\u4e00\u3002\u6bcf\u5f53Reaction\u6d41\u7ec4\u4ef6\u4e0a\u7684\u5143\u7d20\u5c5e\u6027\u66f4\u6539\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u91cd\u65b0\u5448\u73b0\u56fe\u5f62\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8981\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\uff0c\u60a8\u9700\u8981\u5c06\u4e00\u4e2a\u65b0\u8282\u70b9\u63a8\u9001\u5230Elements\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9Reaction\u6d41\u7ec4\u4ef6\u3002\u5982\u679c\u8981\u5220\u9664\u8282\u70b9\uff0c\u5219\u9700\u8981\u901a\u8fc7\u5c06\u51fd\u6570\u4f20\u9012\u7ed9onElementsRemove prop\u6765\u4fa6\u542cRemove\u4e8b\u4ef6\uff1a\n\u5bfc\u5165React\uff0c{useState}\u4ece&#39\uff1bReaction\uff1b\u5bfc\u5165ReactFlow\uff0c{removeElements}\u4ece&#39\uff1bReact-Flow-Renender&#39\uff1b\uff1bconst initialElements=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode 1&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a5\uff0cy\uff1a5}}]\uff1bconst Graph=()=&gt\uff1b{const[Elements\uff0csetElements]=useState(InitialElements)\uff1bconst onElementsRemove=(ElementsToRemove)=&gt\uff1bsetElements(Els=&gt\uff1bremoveElements(elementsToRemove\uff0cEls))\uff1bReturn(&lt\uff1bReactFlow Elements={Elements}style={raphStyles}onElementsRemove={onElement\u3002\nReaction Flow\u9644\u5e26\u4e24\u4e2a\u63d2\u4ef6\uff1a\u56fe\u5f62\u63a7\u4ef6\u548c\u8ff7\u4f60\u5730\u56fe\u3002\u63a7\u5236\u9762\u677f\u5e26\u6709\u4e00\u4e2a\u653e\u5927\u3001\u7f29\u5c0f\u548c\u7126\u70b9\u56fe\u6309\u94ae\u3002\u60a8\u53ef\u4ee5\u5c06CSS\u6837\u5f0f\u4f20\u9012\u7ed9\u5b83\u6216\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u9ed8\u8ba4\u6837\u5f0f\uff1a\n\u5982\u679c\u60a8\u60f3\u8981\u5c06\u8fd9\u4e9b\u63d2\u4ef6\u6dfb\u52a0\u5230\u60a8\u7684\u56fe\u8868\u4e2d\uff0c\u60a8\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u4f5c\u4e3a\u5b50\u7ea7\u4f20\u9012\u7ed9\u60a8\u7684Reaction\u6d41\u7ec4\u4ef6\uff1a\n\u4ece&#39\uff1bREACT&#39\uff1b\u5bfc\u5165ReactFlow\uff0c{Minimap\uff0cControls}\u4ece&#39\uff1bREACT-FLOW-RENDER&#39\uff1b\u5e38\u91cf\u5143\u7d20=[{id\uff1a&#39\uff1b1&#39\uff1b\uff0c\u7c7b\u578b\uff1a&#39\uff1b\u8f93\u5165&#39\uff1b\uff0c\u6570\u636e\uff1a{Label\uff1a&#39\uff1bNode&#39\uff1b}\uff0c\u4f4d\u7f6e\uff1a{x\uff1a0\uff0cy\uff1a0}}]\uff1bconst Graph=()=&gt\uff1b{return(&lt\uff1bReactFlow Elements={Elements}style={{width\uff1a&#39\uff1b100%&#39\uff1b\uff0cHeight\uff1a&#39\uff1b500px&#39\uff1b}})&gt\uff1b&lt\uff1b\u6700\u5c0f\u5730\u56fe\u8282\u70b9\u989c\u8272={n=&gt\uff1b{if(n.type=&#39\uff1binput&#39\uff1b)return&#39\uff1bBlue&#39\uff1bif(n.type=&\u3002\u8f93\u51fa&#39\uff1b)\u8fd4\u56de&#39\uff1b\u7eff\u8272&39\uff1b\uff1b\u5982\u679c(n.type=&#39\uff1b\u9ed8\u8ba4\u503c&#39\uff1b)\u8fd4\u56de&#39\uff1b\u7ea2\u8272&39\uff1b\uff1b\u8fd4\u56de&#39\uff1b\u7070\u8272&39\uff1b\uff1b}}/&gt\uff1b&lt\uff1b\u63a7\u4ef6/&gt\uff1b)\uff1b}\u3002\n\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528nodeColor\u5c5e\u6027\u6765\u66f4\u6539\u663e\u793a\u8282\u70b9\u7684\u989c\u8272\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528nodeColor\u3001nodeBorderRadius\u3001maskColor\u6216style\u5c5e\u6027\u6765\u8c03\u6574\u8ff7\u4f60\u5730\u56fe\u7684\u5916\u89c2\u3002\n\u6211\u5e0c\u671b\u6211\u80fd\u7ed9\u4f60\u4eec\u4e00\u4e2a\u5f88\u597d\u7684\u53cd\u5e94\u6d41\u7a0b\u6982\u8ff0\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u6216\u610f\u89c1\uff0c\u8bf7\u968f\u65f6\u901a\u8fc7\u90ae\u4ef6\u6216Twitter\u4e0e\u6211\u8054\u7cfb\uff0c\u6216\u5728Github\u4e0a\u53d1\u5e03\u95ee\u9898\u3002\u795d\u5927\u5bb6\u4e07\u4e8b\u5982\u610f\uff0c\u4e07\u4e8b\u5982\u610f\uff01", "note_en": "We just open sourced  \u201cReact Flow\u201d:  A library for rendering interactive node-based graphs with a smooth panning and zooming behaviour and lots of nice features and even some useful plugins like a mini map!\n In this post I will show you a simple example of a React Flow application. If you want to start even faster you can directly go to the  documentation or check out the demo:\n  If we can help you to develop a custom node-based tool we are happy to hear from you:   [email\u00a0protected].\n  React Flow not only renders a graph but also adds interactivity and comes with a lot of built-in features:\n  In order to make this library as flexible as possible we don\u2019t do any state updates besides the positions. This means that you need to pass all functions that change the displayed nodes and edges by yourself. You can implement your own ones or use the  helper functions that come with the library.\n  You can install React Flow via npm. Unfortunately  react-flow was already taken so you need to install  react-flow-renderer:\n  You can now integrate it in your React application. A simple graph could like like this:\n import React  from  &#39;react&#39; ; import ReactFlow  from  &#39;react-flow-renderer&#39; ; const elements  =  [  { id :  &#39;1&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  250 , y :  5  }  } ,  { id :  &#39;2&#39; , data :  { label :  &#39;Node 2&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;e1-2&#39; , source :  &#39;1&#39; , target :  &#39;2&#39; , animated :  true  } ] ; const graphStyles  =  { width :  &#39;100%&#39; , height :  &#39;500px&#39;  } ; const  BasicGraph  =  ( )  =&gt;  &lt;ReactFlow elements = {elements } style = {graphStyles }  / &gt; ;\n As you can see we are passing  elements to the ReactFlow component. In the list of elements there are two nodes and an edge that connects these nodes with each other. You can identify the edge by the presence of a  source and  target attribute. The nodes have some initial positions so that they dont overlap. We are also passing a  style in order to get some space for rendering the graph. You can find a full list of options in the  documenation. The example above would like this:\n   A graph almost always has different node types. React Flow comes with three basic types:  input,  default and  output.You can select the type by using the  type attribute of a node:\n const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Input node&#39;  } , position :  { x :  100 , y :  5  }  } ,  { id :  &#39;2&#39; , type :  &#39;default&#39; , data :  { label :  &#39;Default node&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;3&#39; , type :  &#39;output&#39; , data :  { label :  &#39;Output node&#39;  } , position :  { x :  100 , y :  200  }  } ] ;\n   As you can see the handles which allows you to connect nodes and the color of the types are different.You can customize these existing types by passing a  label and also a  style object with css rules:\n const elements  =  [ { id :  &#39;1&#39; , style :  { background :  &#39;#ffcc50&#39; , width :  100  } , data :  { label :  &#39;custom style&#39;  } , position :  { x :  100 , y :  5  } } ] ;\n   React Flow has the following edge types:  straight,  default,  step. As with the nodes you can select the type by passing it to the edge in the elements list:\n const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  5 , y :  5  }  } ,  { id :  &#39;2&#39; , data :  { label :  &#39;Node 2&#39;  } , position :  { x :  100 , y :  100  }  } ,  { id :  &#39;3&#39; , data :  { label :  &#39;Node 3&#39;  } , position :  { x :  250 , y :  150  }  } ,  { id :  &#39;4&#39; , data :  { label :  &#39;Node 4&#39;  } , position :  { x :  500 , y :  200  }  } ,  { id :  &#39;e1-2&#39; , source :  &#39;1&#39; , target :  &#39;2&#39; , type :  &#39;straight&#39;  } ,  { id :  &#39;e1-3&#39; , source :  &#39;1&#39; , target :  &#39;3&#39; , type :  &#39;default&#39;  } ,  { id :  &#39;e1-4&#39; , source :  &#39;1&#39; , target :  &#39;4&#39; , type :  &#39;step&#39;  } ] ;\n   If you want like to create a custom node or edge type you can look at the  source of the custom node example. There we implement a custom node component and then make it available within the renderer by passing it to the React Flow component as a  nodeTypes property.\n  As I pointed out earlier React Flow comes with some basic interactivity but doesn\u2019t do state updates for the rendered elements. You can zoom and pan and drag or select elements but if you want to add or remove a node for example you need to implement the function by yourself or use one of the  React Flow helper functions. Whenever the elements property change on the React Flow component we re-render the graph. So if you want to add a node for example you need to push a new node to your elements array and pass it to the React Flow component. If you want to remove a node you need to listen to the remove event by passing a function to  onElementsRemove prop:\n import React ,  { useState  }  from  &#39;react&#39; ; import ReactFlow ,  { removeElements  }  from  &#39;react-flow-renderer&#39; ; const initialElements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node 1&#39;  } , position :  { x :  5 , y :  5  }  } ] ; const  Graph  =  ( )  =&gt;  {  const  [elements , setElements ]  =  useState (initialElements ) ;  const  onElementsRemove  =  ( elementsToRemove )  =&gt;  setElements ( els  =&gt;  removeElements (elementsToRemove , els ) ) ;  return  (  &lt;ReactFlow elements = {elements } style = {graphStyles } onElementsRemove = {onElementsRemove }  / &gt;  ) ; }\n  React Flow comes with two  plugins:  Graph controls and a  mini map. The controls panel comes with a zoom-in, zoom-out and focus-graph button. You can pass css styles to it or use the default styles which look like this:\n    If you want to add these plugins to your graph you just need to pass them as childrens to your React Flow component:\n import React ,  { useState  }  from  &#39;react&#39; ; import ReactFlow ,  { MiniMap , Controls  }  from  &#39;react-flow-renderer&#39; ; const elements  =  [  { id :  &#39;1&#39; , type :  &#39;input&#39; , data :  { label :  &#39;Node&#39;  } , position :  { x :  0 , y :  0  }  } ] ; const  Graph  =  ( )  =&gt;  {  return  (  &lt;ReactFlow elements = {elements } style = { { width :  &#39;100%&#39; , height :  &#39;500px&#39;  } }  &gt;  &lt;MiniMap nodeColor = { n  =&gt;  {  if  (n .type  ===  &#39;input&#39; )  return  &#39;blue&#39; ;  if  (n .type  ===  &#39;output&#39; )  return  &#39;green&#39; ;  if  (n .type  ===  &#39;default&#39; )  return  &#39;red&#39; ;  return  &#39;gray&#39; ;  } }  / &gt;  &lt;Controls  / &gt;  ) ; }\n In the above example we are using the  nodeColor property to change the color of displayed nodes.You can adjust the look of the mini map by using the  nodeColor,  nodeBorderRadius,  maskColor or  style properties.\n  I hope that I could give you a good overview of React Flow. If you have any questions or remarks, feel free to contact me via  mail or  twitter or post an  issue on Github. Best wishes and stay safe everyone!", "posttime": "2020-05-05 23:54:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "flow,\u8282\u70b9,node", "title": "Reaction-Flow\uff1a\u521b\u5efa\u57fa\u4e8e\u8282\u70b9\u7684\u4ea4\u4e92\u5f0f\u56fe\u5f62\u7684\u5e93", "title_en": "React-flow: a library to create interactive node-based graphs", "transed": 1, "url": "https://webkid.io/blog/react-flow-node-based-graph-library/", "via": "", "real_tags": ["flow", "\u8282\u70b9", "node"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000776, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u55e8\uff0cLinux TouchPad\u4f53\u9a8c\u6295\u7968\u7684\u94fe\u63a5\u4f3c\u4e4e\u65ad\u4e86--\u81f3\u5c11(\u5bf9\u6211\u6765\u8bf4)\u5b83\u5bfc\u81f4\u4e86gitclear.com\u4e0a\u7684\u4e00\u4e2a\u9519\u8bef\uff0c\u8bf4\u201c\u627e\u4e0d\u5230\u90a3\u4e2a\u6295\u7968\u201d\u3002\u6211\u5f88\u60f3\u5b8c\u6210\u5b83\uff01\n\u5728\u6b64\u6d4f\u89c8\u5668\u4e2d\u4fdd\u5b58\u6211\u7684\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u7f51\u7ad9\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u6211\u53d1\u8868\u8bc4\u8bba\u65f6\u4f7f\u7528\u3002", "note_en": "Hi, the link to the Linux Touchpad Experience poll seems broken \u2013 at least it results (for me) in an error at gitclear.com saying \u201cCouldn\u2019t find that poll\u201d. I\u2019m keen to complete it!\n  Save my name, email, and website in this browser for the next time I comment.", "posttime": "2020-05-05 23:04:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "mac,2020,linux,macbook,pro", "title": "\u50cfMacBook Pro\u4e00\u6837\u7684Linux\u89e6\u6478\u677f\uff0c2020\u5e745\u6708\u66f4\u65b0", "title_en": "Linux touchpad like a MacBook Pro, May 2020 update", "transed": 1, "url": "https://bill.harding.blog/2020/04/26/linux-touchpad-like-a-macbook-pro-may-2020-update/", "via": "", "real_tags": ["mac", "2020", "linux", "macbook", "pro"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000775, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4e9b\u5730\u65b9\u51fa\u4e86\u5dee\u9519\uff0c\u4f46\u522b\u62c5\u5fc3-\u8ba9\u6211\u4eec\u518d\u8bd5\u4e00\u6b21\u5427\u3002", "note_en": "Something went wrong, but don\u2019t fret \u2014 let\u2019s give it another shot.", "posttime": "2020-05-05 23:03:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bf9\u9635,palo,\u62c5\u5fc3,don", "title": "\u52a0\u5dde\u5e15\u6d1b\u963f\u5c14\u6258200\u4e07\u7f8e\u5143\u7684\u8c6a\u5b85\u5bf9\u9635\u54e5\u4f26\u5e03(\u5662)", "title_en": "$2M Home in Palo Alto (CA) vs. Columbus (Oh)", "transed": 1, "url": "https://twitter.com/bryanrbeal/status/1257472953924624385", "via": "", "real_tags": ["\u5bf9\u9635", "palo", "\u62c5\u5fc3", "don"]}, {"category": "", "categoryclass": "", "imagename": "23909896b5a322dd92dda9ba8d45c925.jpg", "infoid": 1000774, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u7684\u4e00\u4efd\u65b0\u62a5\u544a\u79f0\uff0c\u65e8\u5728\u786e\u4fdd\u4f01\u4e1a\u5728\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u671f\u95f4\u7ee7\u7eed\u83b7\u5f97\u878d\u8d44\u7684\u7d27\u6025\u63aa\u65bd\uff0c\u6709\u6548\u5730\u4e3a\u82f9\u679c\u516c\u53f8\u63d0\u4f9b\u4e86\u5ec9\u4ef7\u4fe1\u8d37\uff0c\u4e3a\u80a1\u7968\u56de\u8d2d\u548c\u80a1\u606f\u652f\u4ed8\u63d0\u4f9b\u4e86\u8d44\u91d1\u3002\n\u653f\u5e9c\u7684\u652f\u6301\u4f7f\u82f9\u679c\u80fd\u591f\u4ee5\u4e03\u5e74\u6765\u6700\u4f4e\u5229\u7387\u5728\u503a\u5238\u5e02\u573a\u501f\u6b3e\u2026\u3002\n\u5c3d\u7ba1\u82f9\u679c\u662f\u4e00\u5bb6\u73b0\u91d1\u6781\u5176\u5145\u88d5\u7684\u516c\u53f8\uff0c\u4f46\u5176\u4e2d\u5927\u90e8\u5206\u8d44\u91d1\u662f\u5728\u7f8e\u56fd\u4ee5\u5916\u8d5a\u53d6\u7684\uff0c\u800c\u4e14\u5b83\u5fc5\u987b\u652f\u4ed8\u9ad8\u989d\u7a0e\u7387\u624d\u80fd\u5c06\u73b0\u91d1\u6c47\u56de\u56fd\u5185\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u8be5\u516c\u53f8\u501f\u94b1\u5728\u7f8e\u56fd\u5883\u5185\u6d88\u8d39\u662f\u6709\u610f\u4e49\u7684\u3002\n\u82f9\u679c\u4e0d\u65f6\u901a\u8fc7\u51fa\u552e\u503a\u5238\u6765\u501f\u94b1-\u5b9e\u9645\u4e0a\u662f\u627f\u8bfa\u5728\u672a\u6765\u7684\u67d0\u4e2a\u56fa\u5b9a\u65f6\u95f4\u70b9\u4ee5\u56fa\u5b9a\u5229\u7387\u507f\u8fd8\u8d44\u91d1\uff0c\u65f6\u95f4\u4ece\u4e00\u5e74\u5230\u4e09\u5341\u5e74\u4e0d\u7b49\u3002\u4f8b\u5982\uff0c\u5b83\u5728\u53bb\u5e749\u6708\u501f\u5165\u4e8670\u4ebf\u7f8e\u5143\u3002\n\u8be5\u516c\u53f8\u5f3a\u5927\u7684\u4fe1\u8a89\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u503a\u5238\u63d0\u4f9b\u975e\u5e38\u4f4e\u7684\u56de\u62a5\uff0c\u56e0\u4e3a\u8fdd\u7ea6\u98ce\u9669\u63a5\u8fd1\u4e8e\u96f6\u3002\u7136\u800c\uff0c\u653f\u5e9c\u7684\u7d27\u6025\u63aa\u65bd\u73b0\u5728\u4f7f\u8be5\u516c\u53f8\u80fd\u591f\u63d0\u4f9b\u6bd4\u5f80\u5e38\u66f4\u4f4e\u7684\u56de\u62a5\u3002\n\u636e\u8def\u900f\u793e\u62a5\u9053\uff0c\u653f\u5e9c\u5df2\u7ecf\u63a8\u51fa\u4e86\u4e24\u9879\u7d27\u6025\u63aa\u65bd\uff0c\u4ee5\u5728\u5371\u673a\u671f\u95f4\u4fdd\u6301\u4fe1\u8d37\u6d41\u5411\u4f01\u4e1a\u3002\n\u7f8e\u8054\u50a8\u57283\u6708\u4efd\u5c06\u5229\u7387\u5927\u5e45\u4e0b\u8c03\u81f3\u51e0\u4e4e\u4e3a\u96f6\uff0c\u5e76\u8868\u793a\u5c06\u5728\u6295\u8d44\u7ea7\u516c\u53f8\u503a\u5238\u5e02\u573a\u5145\u5f53\u6700\u540e\u4e70\u5bb6\uff0c\u4ee5\u5e2e\u52a9\u8d44\u91d1\u7d27\u5f20\u7684\u516c\u53f8\u8fdb\u5165\u56e0\u75ab\u60c5\u7684\u7ecf\u6d4e\u5f71\u54cd\u800c\u52a8\u8361\u7684\u8d44\u672c\u5e02\u573a\u3002\n\u5c3d\u7ba1\u7f8e\u8054\u50a8(Federal Reserve)\u5c1a\u672a\u8d2d\u4e70\u4e00\u53ea\u516c\u53f8\u503a\u5238\uff0c\u4f46\u6b64\u6b21\u5e72\u9884\u5df2\u63a8\u52a8\u6ce2\u97f3(Boeing)\u3001\u4e07\u8c6a\u56fd\u9645(Marriott International)\u548c\u798f\u7279(Ford)\u7b49\u9700\u8981\u878d\u8d44\u7684\u516c\u53f8\u521b\u7eaa\u5f55\u5730\u53d1\u884c\u503a\u5238\u3002\n\u8fd9\u9879\u653f\u7b56\u8fd8\u5141\u8bb8\u82f9\u679c\u7b49\u8d22\u52a1\u5b9e\u529b\u96c4\u539a\u7684\u516c\u53f8\u964d\u4f4e\u8d44\u91d1\u6210\u672c\uff0c\u4f7f\u80a1\u4e1c\u53d7\u76ca\u3002\u622a\u81f33\u6708\u5e95\uff0c\u82f9\u679c\u7684\u73b0\u91d1\u4ec5\u7565\u9ad8\u4e8e400\u4ebf\u7f8e\u5143\u3002\n\u201c\u6700\u540e\u8d2d\u4e70\u8005\u201d\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u6295\u8d44\u8005\u4e0d\u8d2d\u4e70\u8fd9\u4e9b\u503a\u5238\uff0c\u7f8e\u8054\u50a8(Federal Reserve)\u5c31\u4f1a\u8d2d\u4e70\u3002\u56e0\u4e3a\u82f9\u679c\u53ef\u4ee5\u80af\u5b9a\u4f1a\u5356\u51fa\u6240\u6709\u503a\u5238\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u63d0\u4f9b\u6bd4\u5f80\u5e38\u66f4\u4f4e\u7684\u56de\u62a5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6240\u6709\u7684\u503a\u5238\u90fd\u662f\u7531\u6295\u8d44\u8005\u8d2d\u4e70\u7684\u3002\n\u636e\u8def\u900f\u793e\u62a5\u9053\uff0c\u82f9\u679c\u516c\u53f8\u521a\u521a\u4ee5\u6781\u4f4e\u7684\u5229\u7387\u51fa\u552e\u4e86\u4ef7\u503c85\u4ebf\u7f8e\u5143\u7684\u503a\u5238\u3002\n\u8fd9\u5bb6\u79d1\u6280\u516c\u53f8\u901a\u8fc7\u51fa\u552e\u56db\u79cd\u4e0d\u540c\u7684\u503a\u5238\u7b79\u96c6\u4e8685\u4ebf\u7f8e\u5143\uff0c\u503a\u5238\u7684\u5230\u671f\u65e5\u4ece3\u5e74\u523030\u5e74\u4e0d\u7b49\u3002\u6839\u636eRefinitiv IFR\u7684\u6570\u636e\uff0c\u8be5\u516c\u53f8\u53d1\u552e\u4e8620\u4ebf\u7f8e\u5143\u7684\u4e09\u5e74\u671f\u503a\u5238\u548c22.5\u4ebf\u7f8e\u5143\u7684\u4e94\u5e74\u671f\u503a\u5238\uff0c\u7968\u9762\u5229\u7387\u5206\u522b\u4e3a0.75%\u548c1.125%\uff0c\u8fd9\u662f\u8be5\u516c\u53f8\u81ea2013\u5e74\u4ee5\u6765\u4e3a\u6b64\u7c7b\u671f\u9650\u7684\u503a\u5238\u652f\u4ed8\u7684\u6700\u4f4e\u5229\u7387\u3002\n\u6839\u636eRefinitiv\u7684\u6570\u636e\uff0c\u82f9\u679c10\u5e74\u671f\u548c30\u5e74\u671f\u503a\u5238\u7684\u7968\u9762\u5229\u7387\u4e5f\u662f\u8be5\u516c\u53f8\u8fc7\u53bb\u51e0\u5e74\u652f\u4ed8\u7684\u6700\u4f4e\u7968\u9762\u5229\u7387\u3002\n\u82f9\u679c\u5728\u4e00\u4efd\u76d1\u7ba1\u7533\u62a5\u6587\u4ef6\u4e2d\u8868\u793a\uff0c\u8fd9\u4e9b\u8d44\u91d1\u5c06\u7528\u4e8e\u4e00\u822c\u4f01\u4e1a\u7528\u9014\uff0c\u5305\u62ec\u80a1\u7968\u56de\u8d2d\u548c\u80a1\u606f\u652f\u4ed8\u3002\u5728\u622a\u81f33\u670828\u65e5\u7684\u516d\u4e2a\u6708\u91cc\uff0c\u82f9\u679c\u82b1\u4e86385\u4ebf\u7f8e\u5143\u56de\u8d2d\u81ea\u5df1\u7684\u80a1\u7968\u3002\n\u82f9\u679c\u5728\u4e0a\u5468\u7684\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\u5ba3\u5e03\uff0c\u5c06\u589e\u52a0\u80a1\u606f\uff0c\u5e76\u5728\u80a1\u7968\u56de\u8d2d\u4e0a\u6295\u5165\u66f4\u591a\u8d44\u91d1\u3002\n\u82f9\u679c\u8463\u4e8b\u4f1a\u5ba3\u5e03\u73b0\u91d1\u80a1\u606f\u4e3a\u516c\u53f8\u666e\u901a\u80a1\u6bcf\u80a10.82\u7f8e\u5143\uff0c\u589e\u5e45\u4e3a6%\u3002\u7ea2\u5229\u5c06\u4e8e2020\u5e745\u670814\u65e5\u652f\u4ed8\u7ed9\u622a\u81f32020\u5e745\u670811\u65e5\u6536\u76d8\u767b\u8bb0\u5728\u518c\u7684\u80a1\u4e1c\u3002\u8463\u4e8b\u4f1a\u8fd8\u6388\u6743\u5bf9\u73b0\u6709\u7684\u80a1\u7968\u56de\u8d2d\u8ba1\u5212\u589e\u52a0500\u4ebf\u7f8e\u5143\u3002", "note_en": "Emergency measures designed to ensure businesses continue to have access to financing during the  coronavirus crisis have effectively provided  Apple with cheap credit to fund stock buybacks and dividend payments, says a new report today.\n The government backing enabled Apple to borrow money on the bond market at the lowest rates it has paid for seven years \u2026\n   Although Apple is an extremely cash-rich company, much of that money is earned outside the US, and it would have to pay high tax rates to repatriate the cash. For that reason, it makes sense for the company to borrow money to spend inside the US.\n Apple from time to time borrows money by selling bonds \u2013 effectively a promise to repay money at a fixed rate of interest at a fixed point in the future, anywhere from one year to thirty years ahead. It  borrowed $7B last September, for example.\n The company\u2019s strong creditworthiness means that it can offer very low returns on these bonds, as the risk of default is close to zero. However, emergency government measures have now allowed the company to offer even lower returns than usual.\n  The government has introduced two emergency measures to keep credit flowing to businesses during the crisis, as   Reuters reports.\n The Fed slashed interest rates to almost zero in March and said it would act as buyer of last resort in the investment-grade corporate bond market, in a bid to help cash-strapped companies access capital markets roiled by the economic fallout from the pandemic.\n While the Federal Reserve has yet to buy a single corporate bond, the intervention has fueled record issuance by companies in need of funding, such as Boeing, Marriott International and Ford.\n The policy has also allowed financially strong companies such as Apple, which had just over $40 billion in cash as of the end of March, to reduce its cost of capital to the benefit of shareholders.\n \u2018Buyer of last resort\u2019 means that if investors don\u2019t buy the bonds, the Federal Reserve will. Because Apple can be sure of selling all its bonds, it can offer an even lower return than usual. All bonds were in fact bought by investors.\n Reuters reports that Apple has just sold $8.5B worth of bonds at extremely low rates.\n The technology company raised $8.5 billion by selling four different bonds with maturities ranging from three years to 30 years. It sold a $2 billion three-year bond and a five-year $2.25 billion with coupons of 0.75% and 1.125% respectively, the lowest rates the company has paid on bonds with such durations since 2013, according to Refinitiv IFR data.\n The coupons on Apple\u2019s 10-year and 30-year bonds were also the lowest the company has paid in the past years, according to the Refinitiv data.\n The funds will go toward general corporate purposes, including share repurchases and dividend payments, Apple said in a regulatory filing. During the six months ended March 28, Apple spent $38.5 billion to repurchase its own stock.\n Apple announced during last week\u2019s earnings call that it would be increasing its dividend and  spending more on stock buybacks.\n Apple\u2019s board of directors has declared a cash dividend of $0.82 per share of the Company\u2019s common stock, an increase of 6 percent. The dividend is payable on May 14, 2020 to shareholders of record as of the close of business on May 11, 2020. The board of directors has also authorized an increase of $50 billion to the existing share repurchase program.", "posttime": "2020-05-05 23:03:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f9\u679c,\u7d27\u6025\u63aa\u65bd,emergency,apple", "title": "\u653f\u5e9c\u7d27\u6025\u63aa\u65bd\u4e3a\u82f9\u679c\u516c\u53f8\u63d0\u4f9b\u7528\u4e8e\u80a1\u7968\u56de\u8d2d\u7684\u5ec9\u4ef7\u4fe1\u8d37", "title_en": "Government emergency measures give AAPL cheap credit for stock buybacks", "transed": 1, "url": "https://9to5mac.com/2020/05/05/emergency-measures/", "via": "", "real_tags": ["\u82f9\u679c", "\u7d27\u6025\u63aa\u65bd", "emergency", "apple"]}, {"category": "", "categoryclass": "", "imagename": "ad0760fd39f2e410809b4ac9ac99b05e.jpg", "infoid": 1000770, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u6709\u8d44\u683c\u83b7\u5f97\u5373\u5c06\u5230\u6765\u76847\u4ebf\u7f8e\u5143\u7279\u65af\u62c9\u80a1\u7968\u671f\u6743\u53d1\u85aa\u65e5\uff0c\u5c3d\u7ba1\u4ed6\u5c3d\u4e86\u6700\u5927\u52aa\u529b\u4fdd\u6301\u80a1\u4ef7\u8d70\u4f4e\u3002\n\u867d\u7136\u9a6c\u65af\u514b\u4e0d\u63a5\u53d7\u7279\u65af\u62c9\u7684\u85aa\u916c\uff0c\u4f46\u80a1\u4e1c\u4eec\u57282018\u5e74\u7ed9\u4e86\u4ed6\u4e00\u4e2a\u975e\u5e38\u6177\u6168\u548c\u96c4\u5fc3\u52c3\u52c3\u7684\u80a1\u7968\u85aa\u916c\u8ba1\u5212\u3002\n\u8be5\u8ba1\u5212\u4e0e\u6536\u5165\u7684\u5927\u5e45\u589e\u52a0\u3001\u8c03\u6574\u540e\u7684EBITDA\u548c\u516c\u53f8\u4f30\u503c\u7684\u5927\u5e45\u63d0\u9ad8\u6709\u5173\u3002\n\u5728\u5b9e\u73b0\u8fd9\u4e9b\u91cc\u7a0b\u7891\u4e4b\u540e\uff0c\u7279\u65af\u62c9\u5e02\u503c\u6bcf\u589e\u52a0500\u4ebf\u7f8e\u5143\uff0c\u9a6c\u65af\u514b\u5c31\u4f1a\u4ee5\u56fa\u5b9a\u4ef7\u683c\u83b7\u5f97169\u4e07\u80a1\u3002\n\u6839\u636e\u8def\u900f\u793e\u5bf9Refinitiv\u6570\u636e\u7684\u5206\u6790\uff0c\u968f\u7740\u7279\u65af\u62c9\u80a1\u7968\u6628\u5929\u6536\u4e8e761.19\u7f8e\u5143\uff0c\u7279\u65af\u62c9\u7684\u80a1\u7968\u5e02\u503c\u73b0\u5728\u5df2\u7ecf\u8fbe\u5230\u4e866\u4e2a\u6708\u6765\u7684\u5e73\u5747\u6c34\u5e731\uff0c002\u4ebf\u7f8e\u5143-\u4f7f\u85aa\u916c\u8ba1\u5212\u7684\u7b2c\u4e00\u6279\u6709\u8d44\u683c\u5f52\u5c5e\u3002\n\u6309\u7167\u6bcf\u80a1350.02\u7f8e\u5143\u7684\u65e2\u5b9a\u4ef7\u683c\uff0c\u9a6c\u65af\u514b\u5c06\u4ece\u7b2c\u4e00\u6279\u80a1\u7968\u4e2d\u83b7\u5229\u8fd17\u4ebf\u7f8e\u5143\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u7279\u65af\u62c9\u7684\u9ad8\u80a1\u4ef7\u3002\n\u4e0a\u5468\u4e94\uff0c\u9a6c\u65af\u514b\u5728\u4e00\u7cfb\u5217\u63a8\u6587\u4e2d\u8868\u793a\uff0c\u7279\u65af\u62c9\u7684\u80a1\u4ef7\u201c\u592a\u9ad8\u201d--\u62b9\u53bb\u4e86\u4ef7\u503c\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u7279\u65af\u62c9\u4f30\u503c\u3002\n\u5f53\u65f6\uff0c\u6211\u4eec\u731c\u6d4b\u9a6c\u65af\u514b\u8bd5\u56fe\u8bc1\u660e\u4ed6\u7684\u6279\u8bc4\u8005\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u4e9b\u6279\u8bc4\u8005\u6307\u8d23\u4ed6\u53ea\u662f\u4e3a\u4e86\u83b7\u5f97\u80a1\u7968\u671f\u6743\u800c\u63a8\u52a8\u201c\u81ea\u7531\u7f8e\u56fd\u201d\u7684\u53d9\u4e8b\uff0c\u4ed6\u540e\u6765\u8bc1\u5b9e\uff0c\u8fd9\u662f\u9a71\u4f7f\u4ed6\u558a\u51fa\u7279\u65af\u62c9\u80a1\u4ef7\u7684\u90e8\u5206\u539f\u56e0\u3002\n\u5728\u4ed6\u53d1\u8868\u8bc4\u8bba\u540e\uff0c\u7279\u65af\u62c9\u7684\u80a1\u4ef7\u66b4\u8dcc\u4e86\u8fd110%\uff0c\u4f46\u7279\u65af\u62c9\u7684\u6295\u8d44\u8005\u5e76\u4e0d\u5728\u610f\uff0c\u53ea\u8981\u80a1\u4ef7\u5728\u7b2c\u4e8c\u5929\u56de\u5230\u4ed6\u53d1\u8868\u8bc4\u8bba\u524d\u7684\u6c34\u5e73-\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u89e6\u53d1\u4ed6\u7684\u80a1\u7968\u671f\u6743\u90e8\u5206\u3002\n\u8fd9\u592a\u75af\u72c2\u4e86\u3002\u6211\u77e5\u9053\u5e02\u573a\u4e5f\u5728\u4e0a\u6da8\uff0c\u4f46\u770b\u5230\u8fd9\u4e48\u591a\u6295\u8d44\u8005\u8fd9\u4e48\u5feb\u5c31\u628a\u57c3\u9686\u7684\u8bc4\u8bba\u629b\u5728\u8111\u540e\uff0c\u6211\u5f88\u60ca\u8bb6\u3002\u6211\u60f3\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u8fd9\u662f\u57c3\u9686\u7ed9\u4e86\u4ed6\u4eec\u4e00\u4e2a\u4e70\u5165\u7684\u673a\u4f1a\uff0c\u4f46\u57c3\u9686\u5e76\u6ca1\u6709\u8bf4\u4ed6\u8ba4\u4e3a\u7279\u65af\u62c9\u88ab\u9ad8\u4f30\u4e86\u591a\u5c11\u3002\n\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4ed6\u73b0\u5728\u90fd\u53ef\u4ee5\u5728\u4ed6\u7684\u65b0\u513f\u5b50\u51fa\u751f\u7684\u90a3\u4e00\u5929\u83b7\u5f97\u8fd9\u4e00\u5de8\u989d\u8865\u507f\u8ba1\u5212\u7684\u7b2c\u4e00\u90e8\u5206\u3002\n\u73b0\u5728\uff0c\u5728\u4efb\u4f55\u4eba\u6050\u614c\u4e4b\u524d\uff0c\u6211\u9884\u8ba1\u57c3\u9686\u4e00\u65e6\u5f00\u59cb\u884c\u4f7f\u8fd9\u4e9b\u671f\u6743\uff0c\u5c31\u4f1a\u51fa\u552e\u7279\u65af\u62c9\u7684\u80a1\u7968\u3002\u6211\u77e5\u9053\u57c3\u9686\u8bf4\u4ed6\u4e0d\u4f1a\u51fa\u552e\u7279\u65af\u62c9\u7684\u80a1\u7968\uff0c\u4f46\u4ed6\u5c06\u4e0d\u5f97\u4e0d\u4e3a\u8fd9\u4e9b\u80a1\u7968\u7f34\u7a0e\uff0c\u6839\u636e\u6211\u4eec\u8c08\u8bba\u7684\u6570\u5b57\uff0c\u5982\u679c\u4ed6\u80fd\u4ece\u5176\u4ed6\u5730\u65b9\u5f04\u5230\u94b1\uff0c\u6211\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\n\u867d\u7136\u8fd9\u4e00\u70b9\u662f\u5df2\u77e5\u7684\uff0c\u4f46\u5982\u679c\u5728\u4ed6\u8bf4\u80a1\u7968\u592a\u9ad8\u540e\uff0c\u4e00\u4e9b\u4eba\u6700\u7ec8\u8fd8\u662f\u60ca\u614c\u5931\u63aa\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\n\u60a8\u6b63\u5728\u9605\u8bfb\u7684\u662felectrek\uff0c\u4e13\u5bb6\u4eec\u65e5\u590d\u4e00\u65e5\u5730\u53d1\u5e03\u5173\u4e8e\u7279\u65af\u62c9\u3001\u7535\u52a8\u6c7d\u8f66\u548c\u7eff\u8272\u80fd\u6e90\u7684\u65b0\u95fb\u3002\u4e00\u5b9a\u8981\u67e5\u770b\u6211\u4eec\u7684\u4e3b\u9875\uff0c\u4e86\u89e3\u6240\u6709\u6700\u65b0\u65b0\u95fb\uff0c\u5e76\u5728Twitter\u3001Facebook\u548cLinkedIn\u4e0a\u5173\u6ce8electrek\uff0c\u968f\u65f6\u4e86\u89e3\u6700\u65b0\u6d88\u606f\u3002\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\u8bf7\u67e5\u770b\u6211\u4eec\u7684YouTube\u9891\u9053\u4ee5\u4e86\u89e3\u6700\u65b0\u7684\u8bc4\u8bba\u3002", "note_en": "Elon Musk is qualifying for his upcoming ~$700 million Tesla stock option payday despite his best effort to keep the stock lower.\n While Musk doesn\u2019t accept a salary from Tesla, shareholders granted him  a very generous and ambitious stock compensation plan in 2018.\n The plan is linked to a significant increase in revenue, adjusted EBITDA, and a massive increase in company valuation.\n After those milestones are achieved, each $50 billion increase in Tesla\u2019s market capitalization would result in Musk receiving 1.69 million shares at a set price.\n   With Tesla\u2019s stock closing at $761.19 yesterday, Tesla\u2019s stock market value has now achieved a six-month average of $100.2 billion \u2013 making the first tranche of the compensation plan eligible to vest, according to an analysis of Refinitiv data via  Reuters.\n At a set price of $350.02 each per vested share, Musk would clear almost $700 million from the first tranche thanks to Tesla\u2019s high share price.\n Last Friday, Musk said that  Tesla\u2019s share price was \u201ctoo high\u201d in a series of tweets \u2013 wiping out billions of dollars worth of Tesla\u2019s valuation.\n At the time, we speculated that Musk was trying to prove his detractors wrong who have accused him of only pushing the \u201cfree America\u201d narrative to get his stock options, which he ended up later confirming it was part of what drove him to call out Tesla\u2019s share price.\n The stock crashed almost 10% following his comment, Tesla investors didn\u2019t care for long as the stock was back up to his pre-comment level the next day \u2013 triggering his stock option tranche anyway.\n  This is pretty crazy. I know the market was rallying too, but I was surprised to see so many investors put Elon\u2019s comment behind them so quickly. I suppose some of them saw it as Elon giving them an opportunity to buy, but Elon didn\u2019t say by how much he thought Tesla was overvalued.\n Either way, he now gets access to the first tranche of this massive compensation plan on the day that his new son his born no less.\n Now before anyone panics, I would expect Elon to sell Tesla shares once he starts exercising those options. I know Elon says he doesn\u2019t sell Tesla shares, but he is going to have to pay taxes on these and with the numbers we are talking about, I\u2019d be surprised if he can get the money somewhere else.\n While this is known, I wouldn\u2019t be surprised if some people end up panicking anyway after he said the stock was too high.\n  You\u2019re reading Electrek\u2014 experts who break news about  Tesla,  electric vehicles, and  green energy, day after day. Be sure to check out our  homepage for all the latest news, and follow Electrek on  Twitter,  Facebook, and  LinkedIn to stay in the loop. Don\u2019t know where to start? Check out our  YouTube channel\u00a0for the latest reviews.", "posttime": "2020-05-05 22:49:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u57c3\u9686\u00b7\u9a6c\u65af\u514b,\u7834\u574f,payday,\u80a1\u7968", "title": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u4e0d\u987e\u81ea\u5df1\u7684\u7834\u574f\uff0c\u62ff\u5230\u4e86\u4ed6\u7684-7\u4ebf\u7f8e\u5143\u7684\u7279\u65af\u62c9\u53d1\u85aa\u65e5", "title_en": "Elon Musk gets his \u2013$700M Tesla payday despite self sabotage", "transed": 1, "url": "https://electrek.co/2020/05/05/elon-musk-tesla-700-million-payday/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "\u7834\u574f", "payday", "\u80a1\u7968"]}, {"category": "", "categoryclass": "", "imagename": "d3b61eae960430b727b1d9f5ad3f0e4d.jpg", "infoid": 1000769, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u9646\u519b\u5ba3\u5e03\u8ba1\u5212\u5c06\u67d4\u6027\u7535\u7f06\u6574\u5408\u5230\u58eb\u5175\u4f7f\u7528\u7684\u6218\u672f\u80cc\u5fc3\u4e2d\u3002\n\u76ee\u524d\uff0c\u9646\u519b\u5de5\u7a0b\u5e08\u548c\u79d1\u5b66\u5bb6\u9762\u4e34\u7740\u5728\u73b0\u4ee3\u6218\u573a\u4e0a\u6269\u5927\u58eb\u5175\u80fd\u529b\u7684\u9700\u8981\u3002\u6bcf\u4e00\u5929\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u5f3a\u5927\u800c\u591a\u529f\u80fd\u7684\u6b66\u5668\u3001\u73b0\u4ee3\u7cfb\u7edf\u548c\u5c0f\u73a9\u610f\u513f\u5c06\u88ab\u5305\u62ec\u5728\u4e2a\u4eba\u88c5\u5907\u4e2d\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u9700\u8981\u89e3\u51b3\u65b9\u6848\u6765\u786e\u4fdd\u5b83\u4eec\u7684\u5145\u7535\u3002\n\u4f5c\u6218\u80fd\u529b\u53d1\u5c55\u53f8\u4ee4\u90e8(CCDC)\u6307\u6325\u3001\u63a7\u5236\u3001\u901a\u4fe1\u3001\u8ba1\u7b97\u673a\u3001\u7f51\u7edc\u3001\u60c5\u62a5\u3001\u76d1\u89c6\u548c\u4fa6\u5bdf(C5ISR)\u4e2d\u5fc3\u4e0eCCDC\u58eb\u5175\u4e2d\u5fc3\u5408\u4f5c\uff0c\u7814\u7a76\u7efc\u5408\u7535\u529b\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u652f\u6301\u6574\u4e2a\u9646\u519b\u7684\u9879\u76ee\u3002\u5176\u4e2d\u5305\u62ecNett Warrior\u3001\u4e0b\u4e00\u4ee3\u73ed\u7ea7\u6b66\u5668(NGSW)\u548c\u96c6\u6210\u89c6\u89c9\u589e\u5f3a\u7cfb\u7edf(IVAS)\u3002\n\u968f\u7740\u9646\u519b\u589e\u52a0\u4e86\u58eb\u5175\u9700\u8981\u643a\u5e26\u7684\u7535\u5b50\u8bbe\u5907\u7684\u6570\u91cf\uff0c\u9700\u8981\u66f4\u591a\u7684\u7535\u7f06\u5c06\u8bbe\u5907\u8fde\u63a5\u5230\u7535\u6e90\u5e76\u5171\u4eab\u6570\u636e\u3002\u6b64\u5916\uff0c\u9646\u519b\u7684\u73b0\u4ee3\u5316\u8ba1\u5212\u5c06\u8981\u6c42\u58eb\u5175\u7684\u8010\u78e8\u6027\u4e0d\u65ad\u63d0\u9ad8\u3002\n\u9886\u5bfc\u8be5\u9879\u76ee\u7684C5ISR\u4e2d\u5fc3\u7535\u5b50\u5de5\u7a0b\u5e08\u4f0a\u6851\u00b7\u6000\u65af(Ethan Wise)\u8bf4\uff1a\u201c\u8fd9\u79cd\u65b0\u7684\u67d4\u6027\u7535\u7f06\u6bd4\u4f20\u7edf\u7248\u672c\u8f7b50%\u3002\u201d\u201c\u5b83\u66f4\u7075\u6d3b\uff0c\u4f53\u79ef\u66f4\u5c0f\uff0c\u5f53\u8fde\u63a5\u5230\u4fdd\u5f62\u53ef\u7a7f\u6234\u7535\u6c60\u65f6\uff0c\u6d88\u9664\u4e86\u963b\u788d\u58eb\u5175\u8fd0\u52a8\u7684\u7535\u7f06\u3002\n\u4ed6\u8bf4\uff1a\u201c\u5b83\u51cf\u5c11\u4e86\u88ab\u5361\u4f4f\u7684\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u901a\u8fc7\u6218\u672f\u80cc\u5fc3\u7ed5\u51e0\u6b21\u3002\u65b0\u7684\u7535\u7f06\u6478\u8d77\u6765\u5c31\u50cf\u6807\u51c6\u9646\u519b\u5236\u670d\u7684\u9762\u6599\uff0c\u4e0e\u4f2a\u88c5\u56fe\u6848\u65e0\u7f1d\u878d\u5408\uff0c\u201c\u6000\u65af\u8bf4\u3002\n\u4e00\u5bb6\u82f1\u56fd\u516c\u53f8\u6700\u521d\u5f00\u53d1\u4e86\u8fd9\u79cd\u65b0\u7535\u7f06\uff0c\u7f8e\u56fd\u9646\u519b\u4e00\u76f4\u5728\u901a\u8fc7\u5916\u56fd\u6bd4\u8f83\u6d4b\u8bd5\u8ba1\u5212\u8c03\u67e5\u5176\u6f5c\u5728\u7528\u9014\u3002FCT\u4e0e\u9646\u519b\u79d1\u6280\u7ec4\u7ec7\u5408\u4f5c\uff0c\u5bfb\u627e\u548c\u8bc4\u4f30\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u6ee1\u8db3\u7f8e\u56fd\u58eb\u5175\u7684\u4f5c\u6218\u9700\u6c42\uff0c\u800c\u4e0d\u8003\u8651\u6280\u672f\u7684\u539f\u4ea7\u56fd\u3002\nFCT\u8ba1\u5212\u6700\u521d\u4e13\u6ce8\u4e8eNett Warrior\u7cfb\u7edf\uff0cCCDC\u56e2\u961f\u73b0\u5728\u6b63\u5728\u5c06\u8be5\u79d1\u5b66\u6280\u672f\u77e5\u8bc6\u7528\u4e8eNGSW\u548cIVAS\u7b49\u9ad8\u4f18\u5148\u7ea7\u9879\u76ee\u3002\nIVAS\u662f\u5fae\u8f6f\u8bbe\u8ba1\u7684\u5e73\u89c6\u663e\u793a\u5668\uff0c\u9664\u4e86\u5176\u4ed6\u89d2\u8272\u5916\uff0c\u5b83\u7684\u529f\u80fd\u8fd8\u5305\u62ec\u683c\u6597-\u6392\u7ec3-\u8bad\u7ec3\u7cfb\u7edf\u3002\u5b83\u7684\u9ad8\u79d1\u6280\u7279\u5f81\uff0c\u5982\u589e\u5f3a\u73b0\u5b9e\u548c\u8f85\u52a9\u76ee\u6807\u8bc6\u522b\uff0c\u5c06\u9700\u8981\u957f\u65f6\u95f4\u6301\u7eed\u7684\u7535\u529b\u8d1f\u8f7d\u3002\u6000\u65af\u6307\u51fa\uff0c\u67d4\u6027\u7535\u7f06\u53ef\u80fd\u9002\u5408\u5728\u8fd9\u4e2a\u8ba1\u5212\u4e2d\u8fdb\u884c\u7535\u529b\u8f93\u9001\u3002\n\u6839\u636eC5ISR\u4e2d\u5fc3\u7814\u7a76\u673a\u68b0\u5de5\u7a0b\u5e08\u5185\u68ee\u00b7\u590f\u666e\u65af\u535a\u58eb\u7684\u8bf4\u6cd5\uff0c\u5bf9\u4e8eNGSW\u9879\u76ee\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u7814\u7a76\u4e00\u79cd\u7531\u4e0e\u65b0\u7535\u7f06\u76f8\u4f3c\u7684\u6750\u6599\u7ec4\u6210\u7684\u6b65\u67aa\u540a\u7d22\u3002\u597d\u5904\u5c06\u5305\u62ec\u51cf\u8f7b\u6b66\u5668\u4e0a\u7684\u7535\u6c60\u91cd\u91cf\uff0c\u66f4\u7075\u6d3b\u548c\u66f4\u957f\u7684\u8fd0\u884c\u65f6\u95f4\u3002\n\u9664\u4e86\u540a\u7d22\uff0c\u590f\u666e\u65af\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u6b63\u5728\u5236\u4f5c\u50a8\u5b58\u80fd\u91cf\u548c\u4f20\u9012\u6b66\u5668\u52a8\u529b\u7684\u65b0\u65b9\u6cd5\u7684\u539f\u578b\u3002\u8fd9\u4e9b\u7279\u70b9\u5171\u540c\u4e3a\u58eb\u5175\u63d0\u4f9b\u4e86\u4e3a\u6b66\u5668\u88c5\u5907\u63d0\u4f9b\u52a8\u529b\u7684\u9009\u9879\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u65ad\u53d8\u5316\u7684\u4efb\u52a1\u8981\u6c42\u3002\n\u590f\u666e\u65af\u8bf4\uff1a\u201c\u8fd9\u4e9b\u65b0\u6b66\u5668\u5c06\u914d\u5907\u5c16\u7aef\u6280\u672f\uff0c\u53ef\u80fd\u9700\u8981\u66f4\u591a\u52a8\u529b\u3002\u201d\u201c\u76f4\u622a\u4e86\u5f53\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u6b66\u5668\u7cfb\u5728\u80cc\u5fc3\u4e0a\u7684\u4e00\u4e2a\u66f4\u5927\u7684\u7535\u6c60\u4e0a\u3002\u7136\u800c\uff0c\u8fd9\u5e26\u6765\u4e86\u969c\u788d\u98ce\u9669\uff0c\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u58eb\u5175\u4e2d\u5e76\u4e0d\u53d7\u6b22\u8fce\u3002\u901a\u8fc7\u540a\u7d22\u8f93\u9001\u7535\u529b\u5e94\u8be5\u4f1a\u4ea7\u751f\u4e00\u79cd\u66f4\u5bb9\u6613\u63a5\u53d7\u548c\u611f\u89c9\u66f4\u719f\u6089\u7684\u89e3\u51b3\u65b9\u6848\u3002\u201c\u3002\nC5ISR\u4e2d\u5fc3\u5de5\u7a0b\u5e08\u5c06\u57282020\u5e74\u5185\u7ee7\u7eed\u7814\u7a76\u539f\u578b\uff0c\u4ee5\u4f9bIVAS\u548cNGSW\u9879\u76ee\u529e\u516c\u5ba4\u4f7f\u7528\u3002\n*\u5982\u679c\u60a8\u5e0c\u671b\u5728\u6211\u4eec\u7684\u65b0\u95fb\u6587\u7ae0\u4e2d\u62a5\u544a\u8bed\u6cd5\u6216\u4e8b\u5b9e\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebf\u53cd\u9988\u8868\u683c\u8ba9\u6211\u4eec\u77e5\u9053\u3002\n\u7f8e\u56fd\u6d77\u519b\u5468\u4e94\u53d1\u8868\u58f0\u660e\u79f0\uff0c\u7f8e\u56fd\u7b2c\u516d\u8230\u961f(C6F)\u4e0e\u82f1\u56fd\u5728\u5317\u6781\u5708\u4e0a\u7a7a\u8fdb\u884c\u4e86\u53cc\u8fb9\u6d77\u519b\u53cd\u6f5c\u6218(ASW)\u6f14\u4e60\u3002\u58f0\u660e\u6307\u51fa\uff0c\u8fd9\u56db\u8258\u8239\u6765\u81ea\u4e24\u4e2a\u56fd\u5bb6\uff0c.\u3002\n\u6d77\u519b\u7a7a\u6218\u4e2d\u5fc3\u822a\u7a7a\u90e8\u8868\u793a\uff0c\u6d77\u519b\u7b2c\u4e00\u67b6CMV-22B\u9c7c\u9e70\u503e\u659c\u65cb\u7ffc\u98de\u673a\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e00\u4e2a\u53d1\u5c55\u91cc\u7a0b\u7891\u3002CMV-22B\u98de\u673a\u662f\u9c7c\u9e70\u7684\u822a\u6bcd\u673a\u8f7d\u4ea4\u4ed8(COD)\u53d8\u79cd\uff0c\u4f5c\u4e3a\u98de\u884c\u4efb\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u6210\u529f\u5730\u8fdb\u884c\u4e86\u8d8a\u91ce\u98de\u884c.\n\u6839\u636e\u6700\u8fd1\u7684\u4e00\u4efd\u670d\u52a1\u65b0\u95fb\u7a3f\uff0c\u7f8e\u56fd\u7a7a\u519b\u8bc1\u5b9e\u5176B-1B\u5170\u745f\u8f70\u70b8\u673a\u5728\u4e1c\u6d77\u8fdb\u884c\u4e86\u8bad\u7ec3\u3002\u5468\u4e8c\uff0c\u592a\u5e73\u6d0b\u7a7a\u519b\u516c\u5171\u4e8b\u52a1\u65b0\u95fb\u516c\u62a5\u8bf4\uff0c\u7b2c9\u53f7\u2026\u3002\n\u4ea8\u5ef7\u987f\u82f1\u683c\u65af\u5de5\u4e1a\u516c\u53f8\u7684\u82f1\u683c\u65af\u9020\u8239\u90e8\u95e8\u5411\u7f8e\u56fd\u6d77\u519b\u4ea4\u4ed8\u4e86\u963f\u5229\u00b7\u4f2f\u514b\u7ea7\u5bfc\u5f39\u9a71\u9010\u8230\u5fb7\u5c14\u4f2f\u7279\u00b7D\u00b7\u5e03\u83b1\u514b\u53f7(DDG 119)\u3002\u7b7e\u7f72\u7684\u6587\u4ef6\u6807\u5fd7\u7740\u8fd9\u8258\u8239\u4eceHII\u6b63\u5f0f\u79fb\u4ea4\u7ed9\u6d77\u519b\u3002\u5fb7\u5c14\u4f2f\u7279\u00b7D\u00b7\u5e03\u83b1\u514b\u662f..\u3002\n\u8fd9\u67b6B-1B\u5170\u745f\u4ece\u5357\u8fbe\u79d1\u4ed6\u5dde\u57c3\u5c14\u65af\u6c83\u65af\u7a7a\u519b\u57fa\u5730\u5f80\u8fd4\u98de\u884c30\u5c0f\u65f6\uff0c\u524d\u5f80\u5370\u5ea6-\u592a\u5e73\u6d0b\u5730\u533a\uff0c\u5728\u90a3\u91cc\u5b83\u53c2\u52a0\u4e86\u65e5\u7f8e\u53cc\u8fb9\u8bad\u7ec3\u3002\u53cc\u8fb9\u8bad\u7ec3\u6709\u52a9\u4e8e\u589e\u5f3a\u65e5\u7f8e\u8054\u5408\u53cd\u5e94\u80fd\u529b\uff0c\u6539\u5584\u6218\u672f\u5bf9\u6297\u80fd\u529b\u3002", "note_en": "The U.S. Army has announced plans to integrate flexible, power cables into a tactical vest used by Soldiers.\n Currently, Army engineers and scientists faced with the need to expand the capabilities of soldiers on the modern battlefield. Every day, more and more powerful and versatile weaponry, modern systems and gadgets will be included in the personal equipment, which, in turn, requires solutions to ensure their recharge.\n Combat Capabilities Development Command\u2019s (CCDC) Command, Control, Communications, Computers, Cyber, Intelligence, Surveillance and Reconnaissance (C5ISR) Center has partnered with the CCDC Soldier Center to investigate integrated power solutions in support of programs across the Army. These include Nett Warrior, Next-Generation Squad Weapons (NGSW) and Integrated Visual Augmentation System (IVAS).\n As the Army has increased the number of electronic devices that Soldiers need to carry, more cables have been required to connect equipment to power sources and share data. In addition, the Army\u2019s modernization initiatives will demand continually increasing rates of Soldier-worn power.\n   \u201cThis new flexible cable is up to 50 percent lighter than the legacy version,\u201d said Ethan Wise, a C5ISR Center electronics engineer who is leading the project. \u201cIt\u2019s much more flexible, less bulky and removes cabling that encumbers a Soldier\u2019s motion when connected to a Conformal Wearable Battery.\n \u201cIt reduces snag hazards because it can be looped through a tactical vest several times. The new cable feels like the fabric of a standard Army uniform and blends in seamlessly with the camouflage pattern,\u201d said Wise.\n A United Kingdom company initially developed the new cable, and the U.S. Army has been investigating its potential uses through the Foreign Comparative Testing program. FCT works with Army science and technology organizations to find and evaluate solutions to meet the operational needs of U.S. Soldiers regardless of the technology\u2019s country of origin.\n The FCT program initially focused on the Nett Warrior system, and the CCDC team is now leveraging that science and technology knowledge for high-priority projects such as NGSW and IVAS.\n IVAS is a Microsoft-designed heads-up display that functions as a fight-rehearse-train system, among other roles. Its high-tech features, such as augmented reality and aided target recognition, will require continuous power loads for extended periods of time. Wise noted that flexible cables are a potential fit for power delivery within this program.\n  For the NGSW project, researchers are investigating a rifle sling composed of similar materials as the new cables, according to C5ISR Center research mechanical engineer Dr. Nathan Sharpes. The benefits would include reduced battery weight on the weapon, more flexibility and greater run times.\n In addition to the sling, Sharpes and his colleagues are prototyping new ways of storing energy and routing power on the weapon. These features collectively give the Soldier options to power weapon-mounted enablers to meet changing mission requirements.\n \u201cThese new weapons will be equipped with sophisticated technologies, likely requiring more power,\u201d Sharpes said. \u201cThe straight forward solution would be to tether the weapon to a larger battery on the vest. However, this introduces a snag hazard and historically hasn\u2019t been popular among Soldiers. Routing power through the sling should yield a more acceptable and familiar-feeling solution.\u201d\n C5ISR Center engineers will continue to work on prototypes throughout 2020 for potential use with IVAS and NGSW program offices.\n  * If you wish to report grammatical or factual errors within our news articles, you can let us know by using the  online feedback form.\n The U.S. Navy released a statement on Friday saying that U.S. 6th Fleet (C6F) conducted a bilateral naval anti-submarine warfare (ASW) exercise with the U.K., above the Arctic Circle. The statement noted the four ships from two nations,...\n The first Navy CMV-22B Osprey tilt-rotor aircraft has reached a development milestone, Naval Air Warfare Center Aircraft Division said. The CMV-22B aircraft, Carrier Onboard Delivery (COD) variant of the Osprey, successfully conducted cross-country flight as part of the...\n The U.S. Air Force confirmed that its B-1B Lancer bombers conducted training in the East China Sea, according to a recent service news release. On Tuesday, the Pacific Air Forces Public Affairs press release said that a 9th...\n Huntington Ingalls Industries\u2019 Ingalls Shipbuilding division delivered the\u00a0Arleigh Burke-class guided missile destroyer\u00a0Delbert D. Black\u00a0(DDG 119)\u00a0to the U.S. Navy. Documents signed mark the official transfer of custody of the ship from HII to the Navy. Delbert D. Black is...\n The B-1B Lancer, flew a 30-hour round-trip sortie from Ellsworth Air Force Base, S.D., to the Indo-Pacific where it participated in Japan-U.S. bilateral training. The bilateral training contributed to enhancing the Japan-U.S. joint response capabilities and improving tactical...", "posttime": "2020-05-05 22:36:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u7f06,integrate,\u58eb\u5175,power", "title": "\u7f8e\u56fd\u9646\u519b\u5c06\u628a\u7535\u7f06\u6574\u5408\u5230\u6218\u672f\u80cc\u5fc3\u4e2d", "title_en": "U.S. Army to integrate power cables into a tactical vest", "transed": 1, "url": "https://defence-blog.com/army/u-s-army-to-integrate-power-cables-into-a-tactical-vest.html", "via": "", "real_tags": ["\u7535\u7f06", "integrate", "\u58eb\u5175", "power"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000768, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6dfb\u52a0Toucan", "note_en": "Add Toucan", "posttime": "2020-05-05 22:36:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4f\u89c8,teaches,\u6dfb\u52a0,add", "title": "\u5de8\u5634\u9e1f\u5728\u4f60\u6d4f\u89c8\u7f51\u9875\u65f6\u6559\u4f60\u65b0\u6280\u80fd", "title_en": "Toucan teaches you new skills while you browse the web", "transed": 1, "url": "https://jointoucan.com/", "via": "", "real_tags": ["\u6d4f\u89c8", "teaches", "\u6dfb\u52a0", "add"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000767, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u4e00\u76f4\u5728\u8fd0\u884c\u6211\u7684Ballista\u9879\u76ee\u7684\u4e00\u4e9b\u57fa\u51c6\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u770b\u5f53\u524d\u7684\u7ed3\u679c\u3002\u5728\u8fd9\u9879\u57fa\u51c6\u6d4b\u8bd5\u5de5\u4f5c\u4e2d\uff0c\u6211\u53d1\u73b0Rust\u57fa\u51c6\u6d4b\u8bd5\u6162\u5f97\u79bb\u8c31\u3002\u7ecf\u8fc7\u8c03\u8bd5\uff0c\u539f\u6765\u8fd9\u662f\u7531\u4e8e\u4f7f\u7528\u4e86MUSL\uff0c\u6211\u5f88\u60f3\u4e86\u89e3\u4e00\u4e0b\u662f\u600e\u4e48\u56de\u4e8b\u3002\n\u57fa\u51c6\u6d4b\u8bd5\u6253\u5305\u5728Docker(Dockerfile)\u4e2d\uff0c\u6211\u4f7f\u7528docker run--cpu=12\u547d\u4ee4\u572824\u6838\u53f0\u5f0f\u673a\u4e0a\u8fd0\u884c\u5b83\u4eec\u6765\u5206\u914dCPU\u4f7f\u7528\u7387\uff0c\u6211\u60f3\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u662f\u5426\u4e0eDocker\u4e2dMUSL\u7684\u591a\u7ebf\u7a0b\u4f7f\u7528\u6709\u5173\u3002\n\u5982\u679cDockerfile\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5219\u57fa\u51c6\u6d4b\u8bd5\u5927\u7ea6\u9700\u89815\u79d2\u3002\u7cfb\u7edf\u76d1\u89c6\u5668\u663e\u793a\u4e00\u4e9b\u7ebf\u7a0b\u5728\u77ed\u65f6\u95f4\u5185\u4f7f\u7528100%\u7684CPU\u3002\n\u5982\u679cDockerfile\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5219\u57fa\u51c6\u6d4b\u8bd5\u82b1\u8d39\u7684\u65f6\u95f4\u5927\u7ea6\u662f\u539f\u6765\u768430\u500d\u3002\u7cfb\u7edf\u76d1\u89c6\u5668\u663e\u793a\u8bb8\u591a\u7ebf\u7a0b\u5728\u8f83\u957f\u65f6\u95f4\u5185\u4f7f\u752820%\u523040%\u7684CPU\u3002", "note_en": "I\u2019ve been running some benchmarks of my  Ballista project lately. You can see the current results  here. During this benchmarking work, I discovered that the Rust benchmarks were ridiculously slow. After some debugging, it turns out that this is due to the use of musl, and I\u2019d love to understand what is going on.\n The benchmark is packaged in Docker ( Dockerfile) and I\u2019m running these on a 24-core desktop using the command  docker run --cpus=12 to allocate CPU usage, and I\u2019m wondering if the issue is somehow specific to multi-threaded use of musl in Docker perhaps.\n  If the Dockerfile contains the following, the benchmark takes around 5 seconds. System monitor shows some threads using 100% CPU for a short period of time.\n    If the Dockerfile contains the following, the benchmark takes around 30x longer. System monitor shows many threads using between 20% and 40% CPU for an extended period of time.", "posttime": "2020-05-05 22:36:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,rust,docker", "title": "\u4e3a\u4ec0\u4e48MUSL\u4f1a\u8ba9\u6211\u7684\u94c1\u9508\u4ee3\u7801\u53d8\u5f97\u8fd9\u4e48\u6162\uff1f", "title_en": "Why does musl make my Rust code so slow?", "transed": 1, "url": "https://andygrove.io/2020/05/why-musl-extremely-slow/", "via": "", "real_tags": ["\u4ee3\u7801", "rust", "docker"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000766, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u662f\u5426\u66fe\u7ecf\u8bbf\u95ee\u8fc7\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5e76\u5bf9\u5176\u4f18\u96c5\u548c\u7b80\u6d01\u7684\u8bbe\u8ba1\u5145\u6ee1\u656c\u754f\u4e4b\u60c5\uff1f\u5bf9\u6211\u6765\u8bf4\uff0c\u90a3\u4e2a\u7f51\u7ad9\u5c31\u662f\u6761\u7eb9\u3002Stripe\u662f\u4e00\u5bb6\u5141\u8bb8\u4e2a\u4eba\u548c\u4f01\u4e1a\u63a5\u53d7\u5728\u7ebf\u548c\u79fb\u52a8\u5e94\u7528\u652f\u4ed8\u7684\u516c\u53f8\u3002\u8fd9\u542c\u8d77\u6765\u4e0d\u50cf\u662f\u4e00\u5bb6\u7f51\u7ad9\u8bbe\u8ba1\u7cbe\u7f8e\u7684\u516c\u53f8\uff0c\u4f46\u770b\u770b\u65af\u5229\u666e\u5728\u4ed6\u4eec\u7684\u5173\u4e8e\u9875\u9762\u4e0a\u662f\u5982\u4f55\u63cf\u8ff0\u81ea\u5df1\u7684\u3002\n\u6211\u4eec\u8ba4\u4e3a\u5efa\u7acb\u4e92\u8054\u7f51\u4e1a\u52a1\u662f\u4e00\u4e2a\u6839\u6e90\u4e8e\u4ee3\u7801\u548c\u8bbe\u8ba1\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u8d22\u52a1\u95ee\u9898\u3002\n\u4e0e\u5176\u8bf4\u8bbe\u8ba1\u662f\u4e8b\u540e\u624d\u60f3\u5230\u7684\uff0c\u4e0d\u5982\u8bf4\u662f\u628a\u5b83\u5f53\u505a\u65af\u5229\u666e\u7684\u4e00\u7b49\u516c\u6c11\u5bf9\u5f85\u3002\u5f53\u4f60\u6d4f\u89c8\u7f51\u7ad9\u7684\u9875\u9762\u65f6\uff0c\u4f60\u51e0\u4e4e\u53ef\u4ee5\u611f\u89c9\u5230\u82b1\u5728\u91cd\u590d\u8bbe\u8ba1\u548c\u505a\u7ec6\u5fae\u8c03\u6574\u4e0a\u7684\u5de5\u4f5c\u65f6\u95f4\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u8be6\u7ec6\u5206\u6790\u4e00\u4e0bStrip\u662f\u5982\u4f55\u521b\u5efa\u8fd9\u4e9b\u6f02\u4eae\u7684\u8bbe\u8ba1\u7684\uff0c\u5e76\u7ed9\u7f51\u9875\u8bbe\u8ba1\u5e08\u548c\u5f00\u53d1\u4eba\u5458\u4e00\u4e9b\u63d0\u793a\u548c\u8bc0\u7a8d\u3002\n\u4e0a\u56fe\u662f\u201c\u6761\u7eb9\u201d\u4e3b\u767b\u9646\u9875\u9762\u7684\u8bbe\u8ba1\u3002\u4e4d\u4e00\u770b\uff0c\u8fd9\u624d\u662f\u771f\u6b63\u8ba9\u6211\u5370\u8c61\u6df1\u523b\u7684\uff1a\nStripe\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aCamphor\u7684\u5b57\u4f53\u3002\u8fd9\u662f\u4e00\u79cd\u73b0\u4ee3\u7684\u3001\u6574\u6d01\u7684\u3001\u65e0\u886c\u7ebf\u7684\u5b57\u4f53\uff0c\u7531\u5c3c\u514b\u00b7\u4e54\u5e03\u65af\u4e8e2010\u5e74\u8bbe\u8ba1\u3002\u5b83\u771f\u7684\u5728\u8fd9\u91cc\u95ea\u8000\u7740\u5149\u8292\uff0c\u800c\u4e14\u5728\u5404\u79cd\u91cd\u91cf\u4e0b\u770b\u8d77\u6765\u90fd\u5f88\u68d2\u3002\n\u6392\u7248\u53ef\u4ee5\u8bf4\u662f\u4f60\u8bbe\u8ba1\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u662f\u4f60\u5185\u5bb9\u7684\u5a92\u4ecb\u3002\u6761\u7eb9\u5728\u4f7f\u7528\u4e0d\u540c\u7684\u7c97\u7ec6\u548c\u989c\u8272\u6765\u63d0\u4f9b\u8db3\u591f\u7684\u5bf9\u6bd4\u5ea6\u65b9\u9762\u505a\u5f97\u975e\u5e38\u51fa\u8272\u3002\u8fd9\u4f1a\u628a\u4f60\u7684\u6ce8\u610f\u529b\u5438\u5f15\u5230\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u4e0a\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u600e\u6837\u624d\u80fd\u4f7f\u6211\u4eec\u7684\u5b57\u4f53\u5c3d\u53ef\u80fd\u6e05\u6670\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u5b57\u4f53\u7cfb\u5217\u5b9a\u4e49\u4e3aCamphor\u4ee5\u53ca\u4e00\u4e9b\u540e\u5907\u5b57\u4f53\u3002\u6ce8\u610f\uff1a\u6a1f\u8111\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u5982\u679c\u4f60\u8ba1\u5212\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u5b83\uff0c\u5e94\u8be5\u8d2d\u4e70\u5b83\u3002\u4e0d\u8fc7\uff0c\u6211\u786e\u5b9e\u627e\u5230\u4e86\u5305\u542b\u5b57\u4f53\u7684\u8981\u70b9\uff0c\u60a8\u53ef\u4ee5\u968f\u610f\u6446\u5f04\u3002\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6587\u672c\u5448\u73b0CSS\u5c5e\u6027\u6765\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u8d28\u91cf\u800c\u4e0d\u662f\u901f\u5ea6\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546\u7684\u5c5e\u6027\u6765\u4f7f\u6211\u4eec\u7684\u5b57\u4f53\u66f4\u6e05\u6670\u3002\u6ce8\u610f\uff1a\u8fd9\u4e9b\u5e94\u8be5\u9002\u7528\u4e8eMac\u4e0a\u7684Chrome\u3001Safari\u548cFirefox\u3002\nBODY{font-family\uff1a\u6a1f\u8111\uff0cOpen Sans\uff0cSegoe UI\uff0csans-serif\uff1b\u6587\u672c\u5448\u73b0\uff1aOptimizeLegiability\uff1b-webkit-font-smoting\uff1a\u6297\u952f\u9f7f\uff1b-moz-osx-font-smoting\uff1a\u7070\u5ea6\uff1b}\u3002\n\u5c06\u9f20\u6807\u60ac\u505c\u5728\u6309\u94ae\u548c\u94fe\u63a5\u7b49\u9879\u76ee\u4e0a\u65f6\u6307\u793a\u89c6\u89c9\u54cd\u5e94\u53ef\u63d0\u4f9b\u6781\u4f73\u7684\u7528\u6237\u4f53\u9a8c\u3002\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u6309\u94ae\u5728\u60ac\u505c\u65f6\u4f1a\u7a0d\u5fae\u5411\u4e0a\u79fb\u52a8\uff0c\u5e76\u5c06\u989c\u8272\u66f4\u6539\u4e3a\u8f83\u6d45\u7684\u7d2b\u8272\u3002\u957f\u65b9\u4f53\u9634\u5f71\u4e5f\u53d8\u5f97\u66f4\u52a0\u5f3a\u70c8\u3002\n\u6309\u94ae\uff1aHOVER{COLOR\uff1a#7795f8\uff1bTransform\uff1aTranslateY(-1 px)\uff1b\u957f\u65b9\u4f53\u9634\u5f71\uff1a0 7 px 14 px RGBA(50\uff0c50\uff0c93\uff0c0.1)\uff0c0 3 px 6 px RGBA(0\uff0c0\uff0c0\uff0c0.08)\uff1b}\u3002\n\u8fd9\u771f\u7684\u8ba9\u4eba\u611f\u89c9\u8fd9\u4e2a\u6309\u94ae\u662f\u8981\u88ab\u70b9\u51fb\u7684\u3002\u8fd9\u662f\u4e00\u6b21\u7f8e\u5999\u7684\u7ecf\u5386\u3002\u60a8\u53ef\u4ee5\u5728CodePen\u4e0a\u67e5\u770b\u4ee3\u7801\u4ee5\u5728\u6b64\u5904\u91cd\u65b0\u521b\u5efa\u6309\u94ae\u3002\n\u6211\u4e2a\u4eba\u5f88\u559c\u6b22\u6761\u7eb9\u7f51\u7ad9\u7684\u8c03\u8272\u677f\u3002\u5b83\u5f88\u9c9c\u8273\uff0c\u7528\u4e00\u4e9b\u6f02\u4eae\u7684\u5f3a\u8c03\u8272\u5438\u5f15\u4e86\u4f60\u7684\u6ce8\u610f\u529b\u3002\n\u53e6\u4e00\u4ef6\u8ba9\u6211\u5370\u8c61\u6df1\u523b\u7684\u4e8b\u60c5\u662f\uff0c\u4ed6\u4eec\u7684\u56fe\u50cf\u770b\u8d77\u6765\u8d28\u91cf\u5f88\u9ad8\u3002\u8fd9\u662f\u56e0\u4e3a\u4ed6\u4eec\u5c3d\u53ef\u80fd\u4f7f\u7528SVG(\u53ef\u7f29\u653e\u77e2\u91cf\u56fe\u5f62)\u56fe\u50cf\uff0c\u800c\u4e0d\u662f\u666e\u901a\u7684.png\u6216.jpg\u6587\u4ef6\u3002\u8fd9\u6709\u5f88\u591a\u597d\u5904\u3002\n\u4e3b\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u90a3\u4e2a\u5e73\u677f\u7535\u8111\uff1f\u662f\u7684\uff0c\u90a3\u662f\u4e00\u4e2a\u7ecf\u8fc7\u7f29\u653e\u548c\u65cb\u8f6c\u7684.svg\u3002\u8fd9\u91cc\u662f\u6765\u81ea\u6761\u7eb9\u7f51\u7ad9\u7684.svg\u6587\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u5f53\u60a8\u653e\u5927\u65f6\uff0c\u8d28\u91cf\u662f\u5982\u4f55\u4fdd\u6301\u6e05\u6670\u7684\u3002\n\u52a8\u753b\u662f\u5bf9\u5df2\u7ecf\u5f88\u6f02\u4eae\u7684\u8bbe\u8ba1\u7684\u989d\u5916\u6da6\u8272\u3002\u5728\u201c\u6761\u7eb9\u201d\u7684\u6240\u6709\u9875\u9762\u4e2d\uff0c\u4f60\u4f1a\u53d1\u73b0\u5404\u79cd\u5404\u6837\u7684\u52a8\u753b\uff0c\u5c31\u50cf\u4e0b\u9762\u6240\u793a\u7684\u90a3\u6837\u3002\u6709\u4e9b\u6bd4\u53e6\u4e00\u4e9b\u66f4\u5fae\u5999\uff0c\u4f46\u6bcf\u4e00\u79cd\u90fd\u6709\u5176\u7528\u6b66\u4e4b\u5730\u3002\n\u5982\u679c\u60a8\u4ece\u672a\u4f7f\u7528\u8fc7CSS\u52a8\u753b\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u7b80\u77ed\u7684\u6587\u7ae0\uff0c\u8bf4\u660e\u5982\u4f55\u901a\u8fc7\u793a\u4f8b\u5b66\u4e60\u5b83\u4eec\u3002\n\u8981\u60f3\u66f4\u8be6\u7ec6\u5730\u4e86\u89e3\u52a8\u753b\u5236\u4f5c\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u8fd9\u7bc7\u535a\u6587\uff0c\u4f5c\u8005\u662f\u65af\u5229\u666e\u81ea\u5df1\u7684\u672c\u6770\u660e\u00b7\u5fb7\u00b7\u8003\u514b(Benjamin De Cock)\uff0c\u4ed6\u5206\u6790\u4e86\u4ed6\u4eec\u7684\u4ea7\u54c1Connect\u7684\u524d\u7aef\u4f53\u9a8c\u3002\n\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u7ed9\u4f60\u4e00\u4e9b\u6d1e\u5bdf\u529b\uff0c\u8ba9\u4f60\u4e86\u89e3Strip\u662f\u5982\u4f55\u8bbe\u8ba1\u4ed6\u4eec\u7684\u7f51\u7ad9\u7684\uff0c\u5e76\u6fc0\u52b1\u4f60\u53bb\u521b\u9020\u81ea\u5df1\u7684\u4e1c\u897f\uff01\u8fd9\u91cc\u6709\u4e09\u4e2a\u8981\u70b9\u8981\u7559\u7ed9\u4f60\u3002", "note_en": "Have you ever visited a website and been completely in awe of the elegance and simplicity of its design? For me, that website is  Stripe. Stripe is a company that allows people and businesses to accept payments online and in mobile apps. That doesn&#39;t sound like a company that would have an exquisite website design, but look at how Stripe describes themselves on their about page.\n &#34;We think that building an internet business is a problem rooted in code and design, not finance.&#34;\n Rather than making design an afterthought, it&#39;s treated as a first-class citizen at Stripe. You can almost feel the hours of work spent iterating over designs and making minor tweaks when viewing the website&#39;s pages. In this article, I&#39;m going to break down how Stripe creates these beautiful designs and give some tips and tricks to web designers and developers alike.\n   Pictured above is the design for Stripe&#39;s main landing page. At first glance, here&#39;s what really sticks out to me:\n    Stripe uses a font called  Camphor. It&#39;s a modern, uncluttered, sans serif font designed by Nick Job in 2010. It  really shines here and looks great in a variety of weights.\n  Typography is arguably the most important part of your design since it&#39;s the medium for your content. Stripe does an excellent job of using different weights and colors to provide adequate contrast. This draws your attention to the things that matter most.\n  Let&#39;s see how we can make our font as crisp and clear as possible. First, we&#39;ll define our font family to be Camphor along with some fallback fonts.  Note: Camphor is not free and should be purchased if you&#39;re planning to use it in production. However, I did find a  gist containing the font which you can mess around with.\n We can utilize the  text-rendering CSS property to allow us to choose quality over speed, as well as some vendor specific properties to make our font sharper.  Note: These should work for Chrome, Safari, and Firefox on Mac.\n body  {  font-family : Camphor , Open Sans , Segoe UI , sans-serif ;  text-rendering : optimizeLegibility ;  -webkit-font-smoothing : antialiased ;  -moz-osx-font-smoothing : grayscale ; }\n      Indicating a visual response when hovering over items like buttons and links provides a great user experience. In the example below, you&#39;ll notice the buttons shift  slightly up when hovered and change colors to a lighter shade of purple. The box-shadow also becomes a bit more intense.\n  button :hover  {  color :  #7795f8 ;  transform :  translateY ( -1 px ) ;  box-shadow :  0  7 px  14 px  rgba ( 50 ,  50 ,  93 ,  0.1 ) ,  0  3 px  6 px  rgba ( 0 ,  0 ,  0 ,  0.08 ) ; }\n This really makes it feel like the button is meant to be clicked. It&#39;s a wonderful experience. You can view code to recreate the buttons  here on CodePen.\n  I personally love the color palette of Stripe&#39;s website. It&#39;s bright and grabs your attention with some nice accent colors.\n   Something else that really stuck out to me was how high quality their images looked. This is because they use SVG ( Scalable Vector Graphic) images instead of normal  .png or  .jpg files whenever possible. This has a multitude of benefits.\n  That tablet displayed on the home screen? Yeah, that&#39;s a  .svg that&#39;s been scaled and rotated. Here&#39;s the  .svg file from Stripe&#39;s website. Notice how when you zoom in the quality remains clear.\n   Animations are the extra polish on top of an already beautiful design. Throughout all of Stripe&#39;s pages, you&#39;ll find a variety of animations like the ones shown below. Some are more subtle than others, but each serves a purpose.\n    If you&#39;ve never worked with CSS animations, I wrote a quick article showing how to  learn them by example.\n For a more detailed look into creating animations, I  highly recommend  this blog post by Stripe&#39;s own Benjamin De Cock breaking down the front-end experience of their product  Connect.\n  Hopefully this article gave you some insight into how Stripe designs their websites and inspired you to create something of your own! Here&#39;s three main points to leave you with.", "posttime": "2020-05-05 22:36:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,designs,font", "title": "\u300a\u6761\u7eb9\u5982\u4f55\u8bbe\u8ba1\u7f8e\u4e3d\u7684\u7f51\u7ad9\u300b(2017)", "title_en": "How Stripe Designs Beautiful Websites (2017)", "transed": 1, "url": "https://leerob.io/blog/how-stripe-designs-beautiful-websites", "via": "", "real_tags": ["\u8bbe\u8ba1", "designs", "font"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000765, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenIndiana\u662f\u57fa\u4e8eIllumos\u548c\u4ee5\u524d\u7684\u5f00\u6e90Solaris\u4ee3\u7801\u6784\u5efa\u7684\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5176\u6700\u65b0\u529f\u80fd\u53d1\u5e03\u7248\u672c\u4e3a2020.04\u3002OpenIndiana Hipster 2020.04\u5df2\u7ecf\u5c06\u5176\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u4ecePython2\u8f6c\u6362\u5230Python3\uff0c\u5e76\u4ece\u5b89\u88c5\u6620\u50cf\u4e2d\u5220\u9664\u4e86Python2.7\u3002\u4e0d\u8fc7\uff0cPython2\u5305\u4ecd\u7136\u53ef\u4ee5\u4e3a\u8f6f\u4ef6\u5b89\u88c5\uff0c\u8fd9\u4ecd\u7136\u53d6\u51b3\u4e8e\u8be5\u751f\u547d\u5468\u671f\u7ed3\u675f\u7684\u7248\u672c\u3002OpenIndiana Hipster 2020.04\u4e5f\u5347\u7ea7\u5230GCC 7\u4f5c\u4e3a\u5176\u4e3b\u8981\u7cfb\u7edf\u7f16\u8bd1\u5668\uff0c\u5c3d\u7ba1\u4e0e\u6700\u65b0\u7684GNU\u7f16\u8bd1\u5668\u96c6\u5408\u76f8\u6bd4\u4ecd\u7136\u8fc7\u65f6\u3002\u8fd9\u4e2aOpenIndiana\u7248\u672c\u8fd8\u589e\u52a0\u4e86LibreOffice6.4\u548c\u8fc7\u591a\u7684\u5176\u4ed6\u8f6f\u4ef6\u5305\u66f4\u65b0\u3002OpenIndiana\u7684PKG\u5305\u7ba1\u7406\u7cfb\u7edf\u4e5f\u8f6c\u800c\u4f7f\u7528RAPIDJSON\u5e93\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5feb\u7684JSON\u5904\u7406\u901f\u5ea6\u548c\u66f4\u5c11\u7684\u5185\u5b58\u6d88\u8017\u3002\u6709\u5173\u6b64OpenIndiana\u7248\u672c\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eeOpenIndiana.org\u3002", "note_en": "OpenIndiana, the open-source operating system built off Illumos and the former open-source Solaris code, is out with version 2020.04 as its newest feature release. \r   OpenIndiana Hipster 2020.04 has transitioned its own applications from Python 2 to Python 3 and in turn dropped Python 2.7 from the installation images. Python 2 packages though can still be installed for software still depending upon that end-of-life version.\r   OpenIndiana Hipster 2020.04 has also upgraded to GCC 7 as its main system compiler, albeit still out of date compared to the latest GNU Compiler Collection. This OpenIndiana release also adds LibreOffice 6.4 and a plethora of other package updates.\r   OpenIndiana&#39;s PKG package management system has also switched to using the RAPIDJSON library for faster JSON processing and with reduced memory consumption.\r   More details on this OpenIndiana release via  OpenIndiana.org.", "posttime": "2020-05-05 22:35:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,python,\u53d1\u5e03,2020,python2", "title": "OpenIndiana Hipster 2020.04\u53d1\u5e03\uff1a\u9010\u6b65\u6dd8\u6c70Python2\uff0cGCC7\u4f5c\u4e3a\u57fa\u7840\u7f16\u8bd1\u5668", "title_en": "OpenIndiana Hipster 2020.04 Released: Phase Out Python 2, GCC7 as Base Compiler", "transed": 1, "url": "https://www.phoronix.com/scan.php?page=news_item&px=OpenIndiana-2020.04-Released", "via": "", "real_tags": ["\u7f16\u8bd1", "python", "\u53d1\u5e03", "2020", "python2"]}, {"category": "", "categoryclass": "", "imagename": "fb998a3e8e1d21d728249ecec7af1801.jpg", "infoid": 1000764, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ebb\u7701\u7406\u5de5\u5b66\u96622020\u5e74\u7ebf\u6027\u4ee3\u6570\u8fdc\u666f\uff0c2020\u5e74\u6625\u5b63\u6559\u5e08\uff1a\u5409\u5c14\u4f2f\u7279\u00b7\u65af\u7279\u6717\u67e5\u770b\u5b8c\u6574\u8bfe\u7a0b\uff1aHTTPS Youtube Playlist\uff1ahttps://ocw.mit.edu/2020-vision.", "note_en": "MIT A 2020 Vision of Linear Algebra, Spring 2020 Instructor: Gilbert Strang View the complete course: https://ocw.mit.edu/2020-vision YouTube Playlist: https...", "posttime": "2020-05-05 22:35:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gilbert,linear,https", "title": "\u5b66\u4e60\u7ebf\u6027\u4ee3\u6570\u7684\u4e00\u79cd\u65b0\u65b9\u6cd5[Gilbert Strang][M.I.T]", "title_en": "A New Way to Start Linear Algebra [Gilbert Strang] [M.I.T]", "transed": 1, "url": "https://www.youtube.com/watch?v=YrHlHbtiSM0", "via": "", "real_tags": ["gilbert", "linear", "https"]}, {"category": "", "categoryclass": "", "imagename": "3aa95bc36e69434130ece5e1ed634e37.png", "infoid": 1000763, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u670d\u52a1\u67b6\u6784\u503e\u5411\u4e8e\u5728\u6574\u4e2a\u7ec4\u7ec7\u5185\u5206\u914d\u6570\u636e\u8d23\u4efb\u3002\u8fd9\u7ed9\u786e\u4fdd\u5220\u9664\u6570\u636e\u5e26\u6765\u4e86\u6311\u6218\u3002\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8bbe\u7f6e\u7ec4\u7ec7\u8303\u56f4\u5185\u7684\u6309\u6570\u636e\u96c6\u6216\u6309\u8bb0\u5f55\u4fdd\u7559\u7684\u6807\u51c6\u3002\u4f46\u662f\uff0c\u603b\u4f1a\u6709\u8de8\u8d8a\u591a\u4e2a\u6570\u636e\u96c6\u548c\u8bb0\u5f55\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u6570\u636e\u901a\u5e38\u5206\u5e03\u5728\u60a8\u7684\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u9700\u8981\u7cfb\u7edf\u548c\u56e2\u961f\u4e4b\u95f4\u8fdb\u884c\u534f\u8c03\u624d\u80fd\u5c06\u5176\u5220\u9664\u3002\n\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u4e0d\u8981\u5c06\u6570\u636e\u5220\u9664\u89c6\u4e3a\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u800c\u5e94\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u8fc7\u7a0b\u3002\u5728Twitter\uff0c\u6211\u4eec\u5c06\u6b64\u8fc7\u7a0b\u79f0\u4e3a\u201c\u64e6\u9664\u201d\uff0c\u5e76\u4f7f\u7528\u64e6\u9664\u7ba1\u9053\u534f\u8c03\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u5220\u9664\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u8bbe\u7f6e\u64e6\u9664\u7ba1\u9053\uff0c\u5305\u62ec\u6570\u636e\u53ef\u53d1\u73b0\u6027\u3001\u8bbf\u95ee\u548c\u5904\u7406\u3002\u6211\u4eec\u8fd8\u5c06\u8ba8\u8bba\u5e38\u89c1\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u786e\u4fdd\u64e6\u9664\u7ba1\u9053\u7684\u6301\u7eed\u7ef4\u62a4\u3002\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u627e\u5230\u9700\u8981\u5220\u9664\u7684\u6570\u636e\u3002\u6709\u5173\u7ed9\u5b9a\u4e8b\u4ef6\u3001\u7528\u6237\u6216\u8bb0\u5f55\u7684\u6570\u636e\u53ef\u4ee5\u5728\u8054\u673a\u6216\u8131\u673a\u6570\u636e\u96c6\u4e2d\uff0c\u5e76\u4e14\u53ef\u80fd\u5f52\u7ec4\u7ec7\u7684\u4e0d\u540c\u90e8\u5206\u6240\u6709\u3002\u56e0\u6b64\uff0c\u60a8\u7684\u7b2c\u4e00\u9879\u5de5\u4f5c\u5c06\u662f\u5229\u7528\u60a8\u5bf9\u7ec4\u7ec7\u7684\u77e5\u8bc6\u3001\u540c\u4e8b\u7684\u4e13\u4e1a\u77e5\u8bc6\u4ee5\u53ca\u7ec4\u7ec7\u8303\u56f4\u5185\u7684\u6c9f\u901a\u6e20\u9053\u6765\u7f16\u5236\u6240\u6709\u76f8\u5173\u6570\u636e\u7684\u5217\u8868\u3002\n\u60a8\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u4e4b\u4e00\u8bbf\u95ee\u627e\u5230\u7684\u6570\u636e\u3002\u5728\u7ebf\u6570\u636e\u5c06\u901a\u8fc7(1)\u5b9e\u65f6API\u6216(2)\u5f02\u6b65\u53d8\u5f02\u5668\u6539\u53d8\u3002\u79bb\u7ebf\u4ed3\u5e93\u4e2d\u7684\u6570\u636e\u5c06\u901a\u8fc7(3)\u50cfMapReduce\u8fd9\u6837\u7684\u5e76\u884c\u5206\u5e03\u5f0f\u5904\u7406\u6846\u67b6\u5b9e\u73b0\u53ef\u53d8\u3002\u4e3a\u4e86\u8bbf\u95ee\u6bcf\u4e00\u6761\u6570\u636e\uff0c\u60a8\u7684\u7ba1\u9053\u9700\u8981\u652f\u6301\u8fd9\u4e09\u79cd\u5904\u7406\u65b9\u6cd5\u4e2d\u7684\u6bcf\u4e00\u79cd\u3002\n\u901a\u8fc7\u5b9e\u65f6API\u53ef\u53d8\u7684\u6570\u636e\u662f\u6700\u7b80\u5355\u7684\u3002\u60a8\u7684\u64e6\u9664\u7ba1\u9053\u53ef\u4ee5\u8c03\u7528\u8be5API\u6765\u6267\u884c\u6570\u636e\u5220\u9664\u4efb\u52a1\u3002\u4e00\u65e6\u6bcf\u6bb5\u6570\u636e\u7684API\u8c03\u7528\u6210\u529f\uff0c\u6570\u636e\u5c31\u88ab\u5220\u9664\uff0c\u64e6\u9664\u7ba1\u9053\u5c31\u5b8c\u6210\u4e86\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\uff0c\u5b83\u5047\u8bbe\u6bcf\u4e2a\u6570\u636e\u5220\u9664\u4efb\u52a1\u90fd\u53ef\u4ee5\u5728API\u8c03\u7528\u7684\u8303\u56f4\u5185\u5b8c\u6210\uff0c\u901a\u5e38\u662f\u51e0\u79d2\u6216\u51e0\u6beb\u79d2\uff0c\u800c\u8fd9\u53ef\u80fd\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64e6\u9664\u7ba1\u9053\u5fc5\u987b\u53d8\u5f97\u66f4\u590d\u6742\u4e00\u4e9b\u3002\u4f8b\u5982\uff0c\u5728API\u8c03\u7528\u671f\u95f4\u4e0d\u80fd\u5220\u9664\u7684\u6570\u636e\u5305\u62ec\u5bfc\u51fa\u5230\u8131\u673a\u5feb\u7167\u7684\u6570\u636e\uff0c\u6216\u8005\u5b58\u5728\u4e8e\u591a\u4e2a\u540e\u7aef\u7cfb\u7edf\u548c\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002\u8fd9\u79cd\u6570\u636e\u53cd\u89c4\u683c\u5316\u662f\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u56fa\u6709\u7684\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u5b83\u8fd8\u610f\u5473\u7740\u5c06\u6570\u636e\u751f\u547d\u5468\u671f\u7684\u8d23\u4efb\u59d4\u6258\u7ed9\u62e5\u6709\u6570\u636e\u7684API\u548c\u4e1a\u52a1\u903b\u8f91\u7684\u56e2\u961f\u3002\n\u60a8\u9700\u8981\u901a\u77e5\u6570\u636e\u6240\u6709\u8005\u9700\u8981\u8fdb\u884c\u6570\u636e\u5220\u9664\u3002\u60a8\u7684\u64e6\u9664\u6d41\u6c34\u7ebf\u53ef\u4ee5\u5c06\u64e6\u9664\u4e8b\u4ef6\u53d1\u5e03\u5230\u5206\u5e03\u5f0f\u961f\u5217(\u5982Kafka)\uff0c\u5408\u4f5c\u4f19\u4f34\u56e2\u961f\u8ba2\u9605\u8be5\u961f\u5217\u4ee5\u542f\u52a8\u6570\u636e\u5220\u9664\u3002\u4ed6\u4eec\u5904\u7406\u64e6\u9664\u4e8b\u4ef6\uff0c\u5e76\u56de\u7535\u7ed9\u60a8\u7684\u56e2\u961f\u4ee5\u786e\u8ba4\u6570\u636e\u5df2\u5220\u9664\u3002\n\u6700\u540e\uff0c\u53ef\u80fd\u5b58\u5728\u5b8c\u5168\u8131\u673a\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u9700\u8981\u5220\u9664\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5feb\u7167\u6216\u6a21\u578b\u8bad\u7ec3\u6570\u636e\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u8131\u673a\u6570\u636e\u96c6\uff0c\u5408\u4f5c\u56e2\u961f\u53ef\u4ee5\u4f7f\u7528\u8be5\u6570\u636e\u96c6\u4ece\u5176\u6570\u636e\u96c6\u4e2d\u5220\u9664\u53ef\u64e6\u9664\u7684\u6570\u636e\u3002\u6b64\u79bb\u7ebf\u6570\u636e\u96c6\u53ef\u4ee5\u50cf\u64e6\u9664\u4e8b\u4ef6\u53d1\u5e03\u8005\u7684\u6301\u4e45\u5316\u65e5\u5fd7\u4e00\u6837\u7b80\u5355\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u63cf\u8ff0\u7684\u64e6\u9664\u7ba1\u9053\u6709\u51e0\u4e2a\u5173\u952e\u8981\u6c42\u3002\u5b83\u5fc5\u987b\uff1a\n\u50cf\u8fd9\u6837\u7684\u67b6\u6784\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u6709\u51e0\u4e2a\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u7684\u95ee\u9898\u3002\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u670d\u52a1\u4e2d\u65ad\u548c\u7f51\u7edc\u5206\u533a\u3002\u64e6\u9664\u7ba1\u9053\u9700\u8981\u5bf9\u505c\u673a\u5177\u6709\u6062\u590d\u80fd\u529b\u3002\u5b83\u7684\u76ee\u6807\u662f\u6210\u529f\u64e6\u9664\uff0c\u8fd9\u6837\u5f53\u670d\u52a1\u6062\u590d\u65f6\uff0c\u5b83\u5c31\u53ef\u4ee5\u91cd\u8bd5\u5b83\u7684\u4efb\u52a1\u3002\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u786e\u4fdd\u6240\u6709\u64e6\u9664\u4efb\u52a1\u90fd\u662f\u53ef\u91cd\u653e\u7684\u3002\u5f53\u51fa\u73b0\u4e2d\u65ad\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u91cd\u653e\u4efb\u4f55\u4e22\u5f03\u7684\u64e6\u9664\u4e8b\u4ef6\u3002\u64e6\u9664\u8ddf\u8e2a\u7cfb\u7edf\u77e5\u9053\u54ea\u4e9b\u64e6\u9664\u4e8b\u4ef6\u5c1a\u672a\u5b8c\u5168\u5904\u7406\uff0c\u5e76\u4e14\u53ef\u4ee5\u91cd\u65b0\u53d1\u5e03\u8fd9\u4e9b\u4e8b\u4ef6\u3002\n\u6709\u65f6\uff0c\u65e0\u8bba\u60a8\u91cd\u653e\u64e6\u9664\u4e8b\u4ef6\u591a\u5c11\u6b21\uff0c\u7ba1\u9053\u90fd\u4e0d\u4f1a\u5b8c\u6210\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6d3b\u52a8\u6765\u8bf4\uff0c\u5b83\u662f\u201c\u574f\u7684\u201d\u3002\u6570\u636e\u53ef\u80fd\u662f\u4e0d\u53ef\u64e6\u9664\u7684\uff0c\u4f8b\u5982\uff0c\u56e0\u4e3a\u5b83\u6700\u521d\u662f\u65e0\u6548\u7684\u3002\u5f53\u60a8\u62e5\u6709\u6570\u636e\u7684\u56e2\u961f\u4e4b\u4e00\u65e0\u6cd5\u5b8c\u6210\u64e6\u9664\u4efb\u52a1\u65f6\uff0c\u64e6\u9664\u7ba1\u9053\u7684\u5b8c\u6574\u6027\u5df2\u8d85\u51fa\u60a8\u7684\u63a7\u5236\u8303\u56f4\u3002\u9700\u8981\u5c06\u89e3\u51b3\u95ee\u9898\u7684\u8d23\u4efb\u59d4\u6d3e\u7ed9\u6b63\u786e\u7684\u56e2\u961f\u3002\n\u8fd9\u79cd\u6388\u6743\u53ef\u4ee5\u901a\u8fc7\u8ba9\u6bcf\u4e2a\u62e5\u6709\u6570\u636e\u7684\u56e2\u961f\u968f\u65f6\u5f85\u547d\u6267\u884c\u64e6\u9664\u4efb\u52a1\u6765\u5b9e\u73b0\u3002\u50cf\u8fd9\u6837\u5c06\u4e0d\u540c\u7684\u4efb\u52a1\u7ec4\u5408\u5230\u4e00\u4e2a\u5177\u6709\u4e00\u4e2aSLA\u7684\u7ba1\u9053\u4e2d\u7684\u7ba1\u9053\u7684\u7ef4\u62a4\uff0c\u53ea\u6709\u5728\u6bcf\u4e2a\u56e2\u961f\u90fd\u5bf9\u81ea\u5df1\u7684\u64e6\u9664\u90e8\u5206\u8d1f\u8d23\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u8fdb\u884c\u6269\u5c55\u3002\n\u5728Twitter\uff0c\u6211\u4eec\u5e0c\u671b\u62e5\u6709\u64e6\u9664\u4efb\u52a1\u7684\u6bcf\u4e2a\u56e2\u961f\u90fd\u4f1a\u5728\u4efb\u52a1\u6210\u529f\u65f6\u53d1\u51fa\u8b66\u62a5\u3002\u4f5c\u4e3a\u8865\u5145\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u5929\u6216\u6570\u5468\u7684SLA\u6765\u63d0\u9192\u64e6\u9664\u4e8b\u4ef6\u5904\u7406\u7684\u603b\u4f53\u6210\u529f\u3002\u8fd9\u4f7f\u6211\u4eec\u53ef\u4ee5\u53ca\u65f6\u6355\u83b7\u64e6\u9664\u7ba1\u9053\u95ee\u9898\uff0c\u540c\u65f6\u5c06\u5355\u4e2a\u64e6\u9664\u4efb\u52a1\u7684\u95ee\u9898\u5f15\u5bfc\u7ed9\u8d1f\u8d23\u7684\u56e2\u961f\u3002\n\u6d4b\u8bd5\u8fd9\u6837\u7684\u5206\u5e03\u5f0f\u7ba1\u9053\u9075\u5faa\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u76f8\u540c\u539f\u5219\uff1a\u6bcf\u4e2a\u62e5\u6709\u6570\u636e\u7684\u56e2\u961f\u8d1f\u8d23\u6d4b\u8bd5\u4ed6\u4eec\u7684\u64e6\u9664\u4efb\u52a1\u3002\u4f5c\u4e3a\u64e6\u9664\u7ba1\u9053\u6240\u6709\u8005\uff0c\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u751f\u6210\u4ed6\u4eec\u53ef\u4ee5\u54cd\u5e94\u7684\u6d4b\u8bd5\u4e8b\u4ef6\u3002\n\u6311\u6218\u5728\u4e8e\u534f\u8c03\u5408\u4f5c\u4f19\u4f34\u56e2\u961f\u62e5\u6709\u7684\u7cfb\u7edf\u4e2d\u7684\u6d4b\u8bd5\u6570\u636e\u521b\u5efa\u3002\u4e3a\u4e86\u96c6\u6210\u6d4b\u8bd5\u4ed6\u4eec\u81ea\u5df1\u7684\u64e6\u9664\u4efb\u52a1\uff0c\u8fd9\u4e9b\u5408\u4f5c\u4f19\u4f34\u9700\u8981\u5728\u60a8\u89e6\u53d1\u64e6\u9664\u4e8b\u4ef6\u4e4b\u524d\u5b58\u5728\u6d4b\u8bd5\u6570\u636e\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u6d4b\u8bd5\u6846\u67b6\uff0c\u5b83\u5c06\u6d4b\u8bd5\u6570\u636e\u751f\u6210\u4e0ecron\u4f5c\u4e1a\u914d\u5bf9\uff0c\u8be5\u4f5c\u4e1a\u5728\u6d4b\u8bd5\u6570\u636e\u521b\u5efa\u540e\u4e00\u6bb5\u65f6\u95f4\u53d1\u5e03\u64e6\u9664\u4e8b\u4ef6\u3002\n\u901a\u8fc7\u4e3a\u5728\u7ebf\u5fae\u670d\u52a1\u548c\u79bb\u7ebf\u4ed3\u5e93\u4e2d\u7684\u6570\u636e\u5b9e\u73b0\u6570\u636e\u8bbf\u95ee\u5c42\u6216\u6570\u636e\u76ee\u5f55\u7b49\u62bd\u8c61\uff0c\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u64e6\u9664\u7ba1\u9053\u7684\u590d\u6742\u6027\u3002Twitter\u6b63\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u524d\u8fdb\uff0c\u4ee5\u7b80\u5316\u6570\u636e\u5220\u9664\u7b49\u590d\u6742\u5904\u7406\u4efb\u52a1\u6240\u9700\u7684\u67b6\u6784\u3002\u6570\u636e\u8bbf\u95ee\u5c42\u6216\u6570\u636e\u76ee\u5f55\u7d22\u5f15\u6ee1\u8db3\u64e6\u9664\u8bf7\u6c42\u5e76\u5141\u8bb8\u5904\u7406\u8be5\u6570\u636e\u6240\u9700\u7684\u6570\u636e\u3002\u8fd9\u5c06\u6570\u636e\u5220\u9664\u7ed3\u679c\u4e0e\u6570\u636e\u6240\u6709\u6743\u8d23\u4efb\u7edf\u4e00\u8d77\u6765\u3002\n\u8c22\u8c22\u4f60\u7684\u9605\u8bfb\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u8ba9\u60a8\u4e86\u89e3\u5fae\u670d\u52a1\u67b6\u6784\u53ef\u80fd\u4e3a\u6570\u636e\u9075\u4ece\u6027\u5e26\u6765\u7684\u6311\u6218\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fd8\u4e0e\u60a8\u5206\u4eab\u4e86\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u5c06\u5728\u60a8\u5f00\u59cb\u81ea\u5df1\u7684\u8bbe\u8ba1\u65f6\u6fc0\u53d1\u65b0\u7684\u60f3\u6cd5\u3002\n\u8fd9\u4e00\u5185\u5bb9\u662f\u7531\u6c64\u59c6\u00b7\u5e03\u91cc\u5229\u3001\u57c3\u91cc\u514b\u00b7\u5f17\u7f57\u6cfd\u3001\u6208\u5170\u00b7\u4f69\u96f7\u5ef7\u548c\u8d39\u5229\u514b\u65af\u00b7\u6768\u7b49\u4eba\u7684\u5de5\u4f5c\u4f7f\u4e4b\u6210\u4e3a\u53ef\u80fd\u7684\u3002\u611f\u8c22\u90a3\u4e9b\u5ba1\u9605\u8fd9\u7bc7\u6587\u7ae0\u7684\u4eba\uff0c\u5305\u62ec\u739b\u897f\u5a05\u00b7\u970d\u592b\u66fc\u548c\u96f7\u6069\u00b7\u80e1\u4f5b\u3002", "note_en": "Microservices architectures tend to distribute responsibility for data throughout an organization. This poses challenges to ensuring that data is deleted. A common solution is to set an organization-wide standard of per-dataset or per-record retentions. There will always be data, however, that spans multiple datasets and records. This data is often distributed throughout your microservices architecture, requiring coordination between systems and teams to delete it.\n  One solution is to think of data deletion not as an event, but as a process. At Twitter, we call this process \u201cerasure\u201d and coordinate data deletion between systems using an erasure pipeline. In this post, we\u2019ll discuss how to set up an erasure pipeline, including data discoverability, access, and processing. We\u2019ll also touch on common problems and how to ensure ongoing maintenance of an erasure pipeline.\n    First, you\u2019ll need to find the data that needs to be deleted. Data about a given event, user, or record could be in online or offline datasets, and may be owned by disparate parts of your organization. So your first job will be to use your knowledge of your organization, the expertise of your peers, and organization-wide communication channels to compile a list of all relevant data.\n    The data you find will usually be accessible to you in one of three ways. Online data will be mutable via (1) a real-time API or (2) an asynchronous mutator. Offline warehoused data will be mutable via (3) a parallel-distributed processing framework like  MapReduce. In order to reach every piece of data, your pipeline will need to support each of these three processing methods.\n  Data mutable via a real-time API is the simplest. Your erasure pipeline can call that API to perform data deletion tasks. Once the API calls have succeeded for each piece of data, the data has been deleted and your erasure pipeline is finished.\n  The downside of this approach is that it assumes every data deletion task can be completed within the span of an API call, usually seconds or milliseconds, when it may take longer. In this case, your erasure pipeline has to get a bit more complicated. Examples of data that can\u2019t be deleted in the span of an API call include data that is exported to offline snapshots, or data that exists in multiple backend systems and caches. This data denormalization is inherent to your microservices architecture and increases performance. It also means that responsibility for the data\u2019s lifecycle is delegated to the team who owns the data\u2019s APIs and business logic.\n  You\u2019ll need to inform data owners that data deletion needs to happen. Your erasure pipeline can publish erasure events to a distributed queue, like  Kafka, which partner teams subscribe to in order to initiate data deletion. They process the erasure event and call back to your team to confirm that the data was deleted.\n  Finally, there may be completely offline datasets containing data that needs to be deleted, such as snapshots or model training data. In these cases, you can provide an offline dataset which partner teams use to remove erasable data from their datasets. This offline dataset can be as simple as persisted logs from your erasure event publisher.\n    The erasure pipeline we\u2019ve described thus far has a few key requirements. It must:\n    An architecture like this is a great start, but there are a few concerns we haven\u2019t yet discussed.\n    The first issue is service outages and  network partitions. An erasure pipeline needs to be resilient to outages. Its goal is to succeed at erasure, so it can retry its tasks when service has been restored. A simple way to accomplish this is to ensure that all erasure tasks are replay-able. When there\u2019s an outage, we simply replay any erasure events that were dropped. The erasure tracking system knows which erasure events have yet to fully be processed and can re-publish those.\n  Sometimes, no matter how many times you replay an erasure event, the pipeline simply won\u2019t complete. It&#39;s \u201cbroken\u201d for those events. Data can be un-erasable, for example because it was invalid in the first place. When one of your data-owning teams is unable to complete an erasure task, the integrity of the erasure pipeline has moved outside of your control. Responsibility for fixing the issue needs to be delegated to the right team.\n    This delegation can be achieved by putting each data-owning team on call for their erasure tasks. Maintenance of a pipeline like this, which combines disparate tasks into a pipeline with one  SLA, can only scale if each team takes responsibility for their part in erasure.\n  At Twitter, we expect each team that owns an erasure task to place  alerts on the success of that task. We supplement these with an alert on the overall success of erasure event processing with an SLA of days or weeks. This lets us promptly catch erasure pipeline issues while directing issues with individual erasure tasks to the responsible team.\n    Testing a distributed pipeline like this one follows the same principles we\u2019ve been discussing: each data-owning team is responsible for testing their erasure tasks. All you need to do as the erasure pipeline owner is generate test events that they can respond to.\n  The challenge is coordinating test data creation in the systems owned by your partner teams. In order to integration test their own erasure tasks, these partners need test data to exist before you trigger an erasure event. One solution is a testing framework that pairs test data generation with a cron job that publishes erasure events some time after test data has been created.\n    The complexity of an erasure pipeline can be greatly reduced by  implementing an abstraction like a  data access layer or data catalog for the data living in your online microservices and offline warehouses. Twitter is  moving in this direction to simplify the architecture necessary for complex processing tasks like data deletion. Data access layers or data catalogs index the data needed to satisfy an erasure request and enable processing of that data. This unifies data deletion outcomes with data ownership responsibilities.\n    Thanks for reading. We hope that this post has given you an idea of the challenges a microservices architecture can create for data compliance. Ideally, it has also shared with you some solutions that will spark new ideas as you embark on your own designs.\n  This content was made possible by the work of  Tom Brearley,  Erik Froese,  Goran Peretin, and  Felix Yeung, among others. And thanks to the folks who reviewed this post including  Marcia Hofmann and Raine Hoover.", "posttime": "2020-05-05 22:35:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1,data,\u6570\u636e", "title": "\u5220\u9664\u5206\u5e03\u5728\u6574\u4e2a\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u4e2d\u7684\u6570\u636e", "title_en": "Deleting data distributed throughout a microservice architecture", "transed": 1, "url": "https://blog.twitter.com/engineering/en_us/topics/infrastructure/2020/deleting-data-distributed-throughout-your-microservices-architecture.html", "via": "", "real_tags": ["\u670d\u52a1", "data", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "ae70cd203cd0b3dee12a7866ddbb4afb.jpg", "infoid": 1000762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e24\u4e2a\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u523a\u6fc0\u8ba1\u5212\u57fa\u672c\u4e0a\u672a\u80fd\u5230\u8fbe\u4ed6\u4eec\u8868\u9762\u4e0a\u6253\u7b97\u652f\u6301\u7684\u5c0f\u4f01\u4e1a\u4e4b\u540e\uff0cSEC\u8868\u793a\uff0c\u5b83\u5c06\u53d6\u6d88\u4e0e\u62a5\u544a\u8981\u6c42\u76f8\u5173\u7684\u9650\u5236\uff0c\u5e76\u52a0\u5feb\u4f17\u7b79\u4e0a\u5e02\u7684\u6279\u51c6\uff0c\u4ee5\u4fbf\u4e3b\u8981\u8857\u5934\u4f01\u4e1a\u548c\u5c0f\u578b\u521d\u521b\u4f01\u4e1a\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u624b\u5934\u53ef\u80fd\u6709\u73b0\u91d1\u7684\u6295\u673a\u6027\u6295\u8d44\u8005\u90a3\u91cc\u7b79\u96c6\u8d44\u91d1\u3002\n\u6839\u636eSEC\u7684\u58f0\u660e\uff0c\u4e3a\u4e86\u6709\u8d44\u683c\u83b7\u5f97\u4f17\u7b79\uff0c\u4e00\u5bb6\u516c\u53f8\u9700\u8981\u5411\u6295\u8d44\u8005\u6e05\u695a\u5730\u62ab\u9732\uff0c\u5b83\u6b63\u5728\u7528\u8fd9\u7b14\u94b1\u6765\u652f\u6491\u81ea\u5df1\uff0c\u5e76\u652f\u4ed8\u4e0eCOVID\u76f8\u5173\u7684\u8d39\u7528\u3002\nSEC\u4e3b\u5e2d\u6770\u4f0a\u00b7\u514b\u83b1\u987f(Jay Clayton)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u5728\u5f53\u524d\u73af\u5883\u4e0b\uff0c\u8bb8\u591a\u8001\u724c\u5c0f\u4f01\u4e1a\u90fd\u9762\u4e34\u7740\u4ee5\u53ca\u65f6\u548c\u7ecf\u6d4e\u9ad8\u6548\u7684\u65b9\u5f0f\u83b7\u5f97\u6025\u9700\u8d44\u91d1\u7684\u6311\u6218\u3002\u201d\u4eca\u5929\u7684\u884c\u52a8\u56de\u5e94\u4e86\u6211\u4eec\u4ece\u6211\u4eec\u7684\u5c0f\u4f01\u4e1a\u8d44\u672c\u5f62\u6210\u54a8\u8be2\u59d4\u5458\u4f1a\u548c\u5176\u4ed6\u4eba\u90a3\u91cc\u6536\u5230\u7684\u53cd\u9988\uff0c\u8fd9\u4e9b\u516c\u53f8\u5728\u6ee1\u8db3\u7d27\u8feb\u7684\u8d44\u672c\u9700\u6c42\u7684\u540c\u65f6\u7ee7\u7eed\u4e3a\u6295\u8d44\u8005\u63d0\u4f9b\u9002\u5f53\u4fdd\u62a4\u7684\u540c\u65f6\uff0c\u5728\u65f6\u95f4\u6846\u67b6\u5185\u8fdb\u884c\u53d1\u884c\u53ef\u80fd\u4f1a\u9762\u4e34\u56f0\u96be\u3002\u201c\u3002\n\u6839\u636e\u58f0\u660e\uff0c\u6682\u884c\u89c4\u5b9a\u4e3a\u6f5c\u5728\u7b79\u6b3e\u4eba\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\uff0c\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u786e\u5b9a\u662f\u5426\u6709\u5174\u8da3\u8fdb\u884c\u4f17\u7b79\uff0c\u5e76\u514d\u9664\u5bfb\u6c4210.7\u4e07\u7f8e\u5143\u81f325\u4e07\u7f8e\u5143\u7684\u53d1\u884c\u4eba\u7684\u8d22\u52a1\u62a5\u8868\u5ba1\u67e5\u8981\u6c42\u3002\u4e34\u65f6\u653e\u5bbd\u7684\u89c4\u5b9a\u5c06\u57288\u6708\u5e95\u5230\u671f\u3002", "note_en": "After two multi-billion dollar stimulus packages which have largely failed to reach the small businesses they were ostensibly intended to support, the SEC  said that it will lift restrictions related to reporting requirements and accelerate the approval of crowdfunding listings so that main street businesses and small startups can try to raise funds from speculative investors who may have cash on hand.\n To be eligible for crowdfunding a company needs to provide clear disclosure to investors about the fact that it\u2019s using the money to support itself and pay COVID-related expenses, according to the SEC\u2019s statement.\n  \u201cIn the current environment, many established small businesses are facing challenges accessing urgently needed capital in a timely and cost-effective manner,\u201d said SEC Chairman Jay Clayton, in a statement. \u201cToday\u2019s action responds to feedback we have received from our Small Business Capital Formation Advisory Committee and others about the difficulties these companies may face in conducting an offering within a time frame that meets pressing capital needs, while continuing to provide appropriate protections for investors.\u201d\n According to the statement, the temporary rules provide flexibility for would-be fundraisers to determine whether they\u2019re interested in pursuing crowdfunding and exempts issuers seeking between $107,000 and $250,000 from financial statement review requirements. The temporary relaxation of the rules would expire at the end of August.", "posttime": "2020-05-05 22:35:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c0f\u4f01\u4e1a,loosens,\u6295\u8d44\u8005,crowdfunding", "title": "SEC\u5728\u5927\u6d41\u884c\u4e2d\u653e\u677e\u5bf9\u5c0f\u4f01\u4e1a\u878d\u8d44\u7684\u4f17\u7b79\u89c4\u5b9a", "title_en": "SEC loosens crowdfunding regulations for small businesses financing in pandemic", "transed": 1, "url": "https://techcrunch.com/2020/05/04/sec-loosens-crowdfunding-regs-so-small-businesses-can-raise-alternative-financing-in-pandemic/", "via": "", "real_tags": ["\u5c0f\u4f01\u4e1a", "loosens", "\u6295\u8d44\u8005"]}]