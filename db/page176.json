[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1004434, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8bf4\u8fd9\u5f88\u65e0\u804a\uff0c\u56e0\u4e3a\u60a8\u4e00\u76f4\u5728\u7f16\u5199\u770b\u8d77\u6765\u50cf\u662f\u5177\u6709\u76f8\u540c\u5f62\u72b6\u7684\u6587\u672c\u5757\u548c\u5757\u7684\u4ee3\u7801\u3002\u8d4b\u503c\u3001\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\u7b49\u7b49\u3002\u6211\u53ef\u4ee5\u63d0\u53d6\u51fa\u8fd9\u4e2a\u661f\u7403\u4e0a\u6700\u597d\u3001\u6700\u667a\u80fd\u7684\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u4e0e\u53e6\u4e00\u6bb5\u611a\u8822\u7684\u4ee3\u7801\u5e76\u6392\u653e\u5728\u4e00\u8d77\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u6709\u4eba\u4e3a\u4e86\u597d\u73a9\u800c\u7f16\u5199\u7684\u3002\u4ece\u8fdc\u5904\u770b\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u662f\u4e00\u6837\u7684\u3002\n\u4e00\u904d\u53c8\u4e00\u904d\u5730\u751f\u4ea7\u540c\u6837\u5f62\u72b6\u7684\u4e1c\u897f\u662f\u591a\u4e48\u65e0\u804a\u554a\u3002\u7136\u800c\uff0c\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u6211\u5df2\u7ecf\u8fd9\u6837\u505a\u4e86\u5c06\u8fd130\u5e74\u4e86\uff0c\u2026\u3002\u65e0\u8bba\u662f\u4e13\u4e1a\u4e0a\u7684\u8fd8\u662f\u7231\u597d\u4e0a\u7684\u3002\u6240\u4ee5\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u4e00\u76f4\u5728\u62d6\u7740\u6211\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u4f60\u53ef\u4ee5\u79f0\u5b83\u4e3a\u5de5\u7a0b\u5b66\uff0c\u6216\u8005\u4efb\u4f55\u4f60\u60f3\u8981\u7684\uff0c\u4f46\u6211\u4f1a\u8003\u8651\u7f16\u7a0b\u662f\u4e00\u95e8\u827a\u672f\u3002\u7f16\u5199\u597d\u4ee3\u7801\u7684\u5b9e\u8df5\u4e0d\u4ec5\u9700\u8981\u7eaa\u5f8b\uff0c\u8fd8\u9700\u8981\u4e00\u79cd\u4e0d\u540c\u7684\u903b\u8f91\u63a8\u7406\u65b9\u5f0f\uff0c\u4ece\u800c\u5bfc\u81f4\u4e00\u4e2a\u4e0d\u540c\u7684\u7f8e\u4e3d\u4e16\u754c\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u5982\u4f55\u7f16\u5199\u770b\u8d77\u6765\u50cf\u7ebf\u6027\u3001\u5faa\u5e8f\u6e10\u8fdb\u7684\u7b80\u5355\u7a0b\u5e8f\u3002\u8fd9\u4e0d\u662f\u6211\u8981\u8bf4\u7684\u3002\u5b9e\u9645\u95ee\u9898\u9700\u8981\u66f4\u590d\u6742\u7684\u4e1c\u897f\u3002\u8981\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u60f3\u6cd5\u3002\u6211\u518d\u91cd\u590d\u4e00\u904d--\u60f3\u6cd5\u4e0d\u540c\u3002\n\u79d8\u8bc0\u662f\u62bd\u8c61\uff0c\u6216\u6240\u8c13\u7684\u6cdb\u5316\u3002\u771f\u6b63\u4f18\u79c0\u7684\u5de5\u7a0b\u5e08\u4f1a\u628a\u81ea\u5df1\u4ece\u5b9e\u9645\u7684\u672f\u8bed\u4e2d\u62bd\u79bb\u51fa\u6765\uff0c\u7528\u66f4\u7b3c\u7edf\u7684\u672f\u8bed\u8fdb\u884c\u66f4\u6df1\u5c42\u6b21\u7684\u601d\u8003\u3002\n\u6bd4\u65b9\u8bf4\uff0c\u6211\u60f3\u8981\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5411\u7f51\u7ad9\u53d1\u51fa\u8bf7\u6c42\uff0c\u5e76\u5728\u7f51\u7ad9\u5173\u95ed\u65f6\u5411\u67d0\u4eba\u53d1\u51fa\u8b66\u62a5\u3002\u8be5\u51fd\u6570\u53ef\u4ee5\u7b80\u5355\u5730\u7528Julia\u8bed\u8a00\u7f16\u5199\u5982\u4e0b\uff1a\n\u529f\u80fd\u68c0\u67e5(Url)\u54cd\u5e94=HTTP.get(Url)\u5982\u679c\u54cd\u5e94.status\uff01=200\uff0c\u5219\u53d1\u9001\u7535\u5b50\u90ae\u4ef6(&#34\uff1b\u67d0\u4eba@Somewhere.com&#34\uff1b\uff0c&#34\uff1b\u6709\u95ee\u9898&#34\uff1b)endend\u3002\n\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u771f\u7684\u3002\u5b83\u7528\u6700\u5c11\u7684\u4ee3\u7801\u505a\u5b83\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u53ef\u80fd\u4e5f\u662f\u6211\u60f3\u8981\u5728\u751f\u4ea7\u4e2d\u90e8\u7f72\u7684\u3002\n\u5b83\u662f\u50f5\u5316\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u800c\u4e14\u5b83\u53ea\u505a\u90a3\u4e00\u4ef6\u4e8b\uff0c\u800c\u4e0d\u505a\u5176\u4ed6\u4e8b\u60c5\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u592a\u50f5\u5316\u4e86\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u4f60\u8fd8\u60f3\u8981\u4ec0\u4e48\uff0c\u4f19\u8ba1\uff1f\n\u53ea\u8981\u60f3\u4e00\u60f3\u8fd9\u4e00\u70b9\u5c31\u884c\u4e86\u3002\u4e0d\u96be\u770b\u51fa\u4ee5\u4e0b\u6f5c\u5728\u95ee\u9898\uff1a\nHTTP\u8bf7\u6c42\u53ea\u4f7f\u7528\u4e0d\u5e26\u4efb\u4f55\u67e5\u8be2\u53c2\u6570\u7684GET\u65b9\u6cd5\u3002\u5982\u679c\u6211\u60f3\u4f7f\u7528POST\u65b9\u6cd5\u600e\u4e48\u529e\uff1f\u5982\u679c\u6211\u9700\u8981\u5728URL\u4e2d\u4f20\u9012\u67d0\u79cdid\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\u4ee3\u7801\u5bf9\u7167200\u68c0\u67e5HTTP\u72b6\u6001\uff0c\u770b\u770b\u662f\u5426\u6210\u529f\u3002\u5982\u679c\u6211\u8fd8\u60f3\u5904\u7406\u5176\u4ed62xx\u54cd\u5e94\u4ee3\u7801\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u63d0\u9192\u672f\u8bed\u7684\u903b\u8f91\u662f\u786c\u7f16\u7801\u7684\uff0c\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u5982\u679c\u6211\u60f3\u8981\u5c06\u8b66\u62a5\u53d1\u9001\u5230Slake\u6216Zulip\u7b49\u804a\u5929\u5e73\u53f0\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u4e00\u4f4d\u719f\u7ec3\u7684\u7a0b\u5e8f\u5458\u770b\u7740\u8fd9\u4e2a\u95ee\u9898\u8bf4\uff0c\u563f\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u6784\u5efa\u4e00\u4e2a\u62bd\u8c61\u5c42\u6765\u4f7f\u5b83\u66f4\u7075\u6d3b\u5462\uff1f\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u91cd\u6784\u8fc7\u7a0b\u3002\n\u6211\u4eec\u8981\u505a\u7684\u662f\u7ef4\u62a4\u4ee3\u7801\u7684\u7ed3\u6784/\u903b\u8f91\uff0c\u5e76\u5c06\u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206\u62bd\u8c61\u4e3a\u66f4\u4e00\u822c\u7684\u529f\u80fd\uff1a\nFETCH\u51fd\u6570\u547d\u4e2dURL\u5e76\u8fd4\u56de\u67d0\u79cd\u54cd\u5e94\u5bf9\u8c61\u3002IS_SUCCESS\u51fd\u6570\u5206\u6790\u54cd\u5e94\u5bf9\u8c61\u5e76\u51b3\u5b9a\u5b83\u662f\u5426\u6210\u529f\u3002\u6700\u540e\uff0c\u8b66\u62a5\u529f\u80fd\u5c06\u95ee\u9898\u901a\u77e5\u67d0\u4eba\u3002\n\u8fd9\u4e9b\u51fd\u6570\u662f\u7eaf\u7cb9\u7684\u62bd\u8c61\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u77e5\u9053\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8fd9\u548c\u4f18\u79c0\u7684\u5458\u5de5\u662f\u4e00\u6837\u7684\u3002\u4f60\u4e0d\u9700\u8981\u544a\u8bc9\u4ed6\u4eec\u5982\u4f55\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u4ed6\u4eec\u53ea\u662f\u77e5\u9053\uff0c\u7136\u540e\u628a\u5de5\u4f5c\u505a\u597d\u3002\n\u56de\u5230\u793a\u4f8b\u4e2d\uff0c\u8b66\u62a5\u529f\u80fd\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3001\u5c06\u4e8b\u4ef6\u8bb0\u5f55\u5230\u6570\u636e\u5e93\u3001\u5bfb\u547c\u652f\u6301\u4eba\u5458\u6216\u8981\u6c42Siri\u53eb\u9192\u60a8\uff01\u4f60\u77e5\u9053\u6211\u7684\u610f\u601d\u3002\u5173\u952e\u662f\uff0c\u65e0\u8bba\u8fd9\u4e9b\u5c0f\u51fd\u6570\u505a\u4ec0\u4e48\uff0c\u68c0\u67e5\u51fd\u6570\u90fd\u5305\u542b\u76f8\u540c\u7684\u903b\u8f91\uff01\n\u95ee\u5f97\u597d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6b63\u662f\u5b83\u76ee\u524d\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u8ba9\u6211\u4eec\u591a\u505a\u4e00\u70b9\u5427\u3002\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u51fd\u6570\u63d0\u4f9b\u4e00\u4e9b\u4e0a\u4e0b\u6587\u3002\u7b2c\u4e00\u6b65\u662f\u8ba4\u8bc6\u5230\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u6216\u8005\u77e5\u9053\u5982\u4f55\u83b7\u53d6\u6570\u636e\u7684\u4e1c\u897f\u3002\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u8fd9\u6837\u7684\u6982\u5ff5\u53ef\u4ee5\u7f16\u7801\u4e3a\u62bd\u8c61\u7c7b\u578b\uff1a\n\u7136\u540e\uff0c\u901a\u8fc7HTTP\u83b7\u53d6\u4e00\u4e9b\u4e1c\u897f\u5e76\u68c0\u67e5\u7ed3\u679c\u53ea\u662f\u4f17\u591a\u53ef\u80fd\u7684\u5b9e\u73b0\u4e4b\u4e00\uff1a\n\u901a\u77e5\u5668\u77e5\u9053\u5982\u4f55\u901a\u77e5\u67d0\u4eba\u3002&#34\uff1b&#34\uff1b&#34\uff1b\u62bd\u8c61\u7c7b\u578bAbstractNotifier End&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b\u53d1\u9001\u901a\u77e5\u8b66\u62a5\u6d88\u606f\u3002&#34\uff1b&#34\uff1b&#34\uff1b\u51fd\u6570\u8b66\u62a5\u7ed3\u675f\u3002\n\u8bf7\u6ce8\u610f\uff0c\u62a5\u8b66\u51fd\u6570\u6ca1\u6709\u6b63\u6587\u3002\u5177\u6709\u7a7a\u51fd\u6570\u7684\u76ee\u7684\u662f\u5b9a\u4e49\u63a5\u53e3\u7684\u5916\u89c2\uff0c\u5e76\u9644\u52a0\u6587\u6863\u5b57\u7b26\u4e32\u4ee5\u7528\u4e8e\u6587\u6863\u7f16\u5236\u3002\nstruct EmailNotifier&lt\uff1b\uff1aAbstractNotifier Recipient\uff1a\uff1aStringendfunction alert(\uff1a\uff1aEmailNotifier\uff0cSubject\uff0cMessgae)SMTP.send(Notifier.Recipient\uff0cSubject\uff0cMessgae)endstruct SlackNotifier&lt\uff1b\uff1aAbstractNotifier\u9891\u9053\uff1a\uff1aStringendfunction alert(Notifier\uff1aSlackNotifier\uff0cSubject\uff0cMessage)Slack.send(Notifier.channel\uff0cSubject\uff0cMessage)end\u3002\n&gt\uff1b&gt\uff1b&gt\uff1b\u6ce8\u610f\uff1aSMTP\u548cSLACK\u662f\u865a\u6784\u7684\u8f6f\u4ef6\u5305\uff0c\u4ec5\u7528\u4e8e\u8bf4\u660e\u76ee\u7684\u3002\u4ed6\u4eec\u5e76\u4e0d\u5b58\u5728\u3002\n\u51fd\u6570\u68c0\u67e5(url\uff0cFetcher\uff1a\uff1aAbstractFetcher\uff0cNotifier\uff1a\uff1aAbstractNotifier)RESPONSE=FETCH(FETCHER\uff0cSITE)IF\uff01IS_SUCCESS(FETCHER\uff0cRESPONSE)THEN ALERT(NOTIFILER\uff0c&#34\uff1b$SITE IS DOWN&#34\uff1b\uff0c&#34\uff1b\u9519\u8bef\uff1a$RESPONSE&#34\uff1b)endend\u3002\n\u4ec5\u4ec5\u62e5\u6709\u8fd9\u51e0\u4e2a\u62bd\u8c61\u5c31\u53ef\u4ee5\u6253\u5f00\u5f88\u591a\u53ef\u80fd\u6027\u3002\u4e3a\u4ec0\u4e48\uff1f\u5047\u8bbe\u60a8\u67093\u79cd\u4e0d\u540c\u7684\u53d6\u53d6\u5668\u548c3\u79cd\u901a\u77e5\u5668\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u7f16\u51993x3=9\u79cd\u4e0d\u540c\u7684\u5065\u5eb7\u68c0\u67e5\u3002\n\u8fc7\u4e8e\u62bd\u8c61\u53ef\u80fd\u4f1a\u5e26\u6765\u4f24\u5bb3\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u7ea7\u522b\u3002\u5f53\u4eba\u4eec\u67e5\u770b\u4ee3\u7801\u65f6\uff0c\u5b83\u4ecd\u7136\u5f88\u5bb9\u6613\u7406\u89e3\u548c\u7406\u89e3\u3002\u4f46\u662f\uff0c\u5982\u679c\u6709\u591a\u4e2a\u62bd\u8c61\u5c42\uff0c\u5219\u5f88\u96be\u5bf9\u4ee3\u7801\u8fdb\u884c\u63a8\u7406\u3002\u53ea\u9700\u770b\u770bFizz Buzz\u4f01\u4e1a\u7248\u5c31\u53ef\u4ee5\u770b\u5230\u8fc7\u5ea6\u5de5\u7a0b\u7684\u6781\u7aef\u4f8b\u8bc1\u3002\n\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5c06\u60a8\u7684\u4ee3\u7801\u63d0\u5347\u5230\u4e00\u4e2a\u65b0\u7684\u7ea7\u522b\u975e\u5e38\u7b80\u5355\u3002\u4f7f\u7528\u62bd\u8c61\u7c7b\u578b\u662f\u6784\u5efa\u8fd9\u4e9b\u62bd\u8c61\u5c42\u7684\u4e00\u79cd\u5feb\u6377\u800c\u7b80\u5355\u7684\u65b9\u6cd5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd8\u6709\u5176\u4ed6\u8303\u4f8b--\u4f8b\u5982\uff0c\u7279\u5f81\u3002\u6211\u4f1a\u628a\u5b83\u7559\u5230\u4ee5\u540e\u7684\u5e16\u5b50\u91cc\u3002\u5982\u679c\u4f60\u7b49\u4e0d\u53ca\u4e86\uff0c\u53ef\u4ee5\u53bbBinaryTraits.jl\u9879\u76ee\u56de\u8d2d\u7f51\u7ad9\u5feb\u901f\u4e86\u89e3\u4e00\u4e0b\u76ee\u524d\u6b63\u5728\u915d\u917f\u4ec0\u4e48\u3002\n\u7f16\u7a0b\u53ef\u4ee5\u5f88\u6709\u8da3\u3002\u5b83\u4e0d\u4e00\u5b9a\u975e\u8981\u67af\u71e5\u4e4f\u5473\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u60f3\u6211\u4f1a\u6536\u56de\u6211\u6700\u521d\u7684\u7d22\u8d54\u3002\u867d\u7136\u4ece\u8fdc\u5904\u770b\u6211\u7684\u4ee3\u7801\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u65e0\u804a\uff0c\u4f46\u5f53\u6211\u4ed4\u7ec6\u770b\u65f6\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e2a\u7f8e\u4e3d\u7684\u4e1c\u897f\u3002", "note_en": "I said it\u2019s boring because you keep writing code that looks like blocks and blocks of text having the same shape. Assignments, conditionals, loops, functions, etc. I can pull out the best, the most intelligent code on this planet and put that side by side with another dumb piece of code that someone just wrote for fun. And they look the same from afar.\n How boring is it to produce something of the same shape over and over again. And yet, believe it or not, I\u2019ve been doing that for almost 30 years\u2026 both professionally and as a hobby. So there is something interesting that keeps dragging me into doing this.\n Call it engineering, or whatever you want, but I would consider programming an art. The practice of writing good code requires not just discipline but a different way of logical reasoning that leads to a different world of beauty.\n  Everyone knows how to write simple programs that look like linear, step-by-step recipes. That is not what I\u2019m talking about. Practical problems require something more complex. To solve real-world problems, software engineers have to think differently. I shall repeat - think differently.\n The secret sauce is abstraction, or so-called generalization. Real good engineers pull themselves out of the practical terms and think deeper with the more general terms.\n  Let\u2019s say I want to write a program that makes a request to a web site and alerts someone if the website is down. The function can simply be written as follows in the  Julia language:\n function check(url) response = HTTP.get(url) if response.status != 200 then email(&#34;someone@somewhere.com&#34;, &#34;something is wrong&#34;) endend\n There is nothing wrong with this function. Really. It does exactly what it should do with the least amount of code. In fact, this is probably what I want to deploy in production as well.\n  It is inflexible because it does one thing, and it\u2019s only doing that one thing and nothing else. In other words, it is too rigid. You may wonder, what else do you want, dude?\n Just think about that for a little bit. It is not hard to see the following potential problems:\n The HTTP request only uses the  GET method without any query parameter. What if I want to use the  POST method? What if I need to pass some kind of id as part of the query parameters in the URL?\n The code checks the HTTP status against  200 to see if it was successful. What if I want to handle the other  2xx response codes as well?\n The logic for alerting somenoe is hard-coded to send an email. What if I want to send the alert to a chat platform such as Slack or Zulip?\n  A skillful programmer looks at the problem and says, hey, why don&#39;t we build an abstraction layer to make it more flexible? Let\u2019s walk through the refactoring process below.\n What we will do is to maintain the structure/logic of the code and abstract away the rest of the code as more general functions:\n  The  fetch function hits the URL and returns some kind of response object. The  is_successful function analyzes the response object and decides if it was successful or not. Finally, the  alert function notifies someone about the problem.\n These functions are pure abstractions because there is no need to know how they do their job. It\u2019s the same thing as great employees. You don\u2019t need to tell them how to get the job done. They just know and get the job done.\n Coming back to the example, the  alert function may send an email, log an event to a database, page the support person, or ask Siri to wake you up! You know what I mean. The point is that the  check function contains the same logic no matter what these little functions do!\n  Great question. Indeed, that\u2019s exactly what it does at the moment. Let&#39;s do a little more. Primarily, we can give the function some context. The first step is to recognize that we need an abstract concept &#34;Fetcher&#34;, or something that knows how to fetch data. Logically, such concept can be coded as an abstract type:\n  Then, fetching something via HTTP and checking the result is just one of the many possible implementations:\n   &#34;&#34;&#34;A notifier knows how to notify someone.&#34;&#34;&#34;abstract type AbstractNotifier end&#34;&#34;&#34;Send a notification alert message.&#34;&#34;&#34;function alert end\n Note that the  alert function has no body. The purpose of having an empty function is to define what the interface looks like and attach a doc string for documentation purpose.\n  struct EmailNotifier &lt;: AbstractNotifier recipient::Stringendfunction alert(::EmailNotifier, subject, message) SMTP.send(notifier.recipient, subject, messgae)endstruct SlackNotifier &lt;: AbstractNotifier channel::Stringendfunction alert(notifier::SlackNotifier, subject, message) Slack.send(notifier.channel, subject, message)end\n &gt;&gt;&gt; Note: SMTP and Slack are &#34;made-up&#34; packages for illustration purpose only. They do not exist.\n  function check(url, fetcher::AbstractFetcher, notifier::AbstractNotifier) response = fetch(fetcher, site) if !is_successful(fetcher, response) then alert(notifier, &#34;$site is down&#34;, &#34;Error: $response&#34;) endend\n Just having these few abstractions opens up a lot of possibilities. Why? Let\u2019s suppose that you have 3 different kinds of fetchers and 3 kinds of notifiers. Now, you can easily compose 3 x 3 = 9 different kinds of health checks.\n  Too much abstraction can hurt. In the above example, there is only a single level of abstraction. When one looks at the code, it is still pretty easy to understand and comprehend. However, if there are multiple layers of abstraction, then it becomes very difficult to reason about the code. Look no further than  Fizz Buzz Enterprise Edition for an extreme illustration of over-engineering.\n  As you can see, it is quite simple to uplift your code to a new level. The use of abstract type is a quick and easy way to build these absractions. Note that there are other paradigms - for example, traits. I will save that for a future post. If you cannot wait, head over to the  BinaryTraits.jl  project repo for a quick peek of what&#39;s brewing at the moment.\n Programming can be fun. It does not have to be boring. At this point, I guess I will retract my initial claim. While my code may look boring from afar, when I look closer, I see a beautiful thing.", "posttime": "2020-05-31 03:42:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,\u827a\u672f,boring,\u4ee3\u7801", "title": "\u7f16\u7a0b\u662f\u67af\u71e5\u7684\u827a\u672f", "title_en": "Programming Is Boring Art", "transed": 1, "url": "https://ahsmart.com/pub/programming-is-boring-art/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u827a\u672f", "boring", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "c54e096c8854de9b00177a3464775d14.jpg", "infoid": 1004433, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8dc3\u5230\u5bfc\u822a\u8df3\u8dc3\u641c\u7d22F\u00e9licette([fe.li\u02d0.s\u025bt])\u662f\u7b2c\u4e00\u53ea\u88ab\u53d1\u5c04\u5230\u592a\u7a7a\u7684\u732b\uff0c1963\u5e7410\u670818\u65e5\uff0c\u4f5c\u4e3a\u6cd5\u56fd\u592a\u7a7a\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002\u8d39\u5229\u5207\u7279\u662f14\u53ea\u63a5\u53d7\u8fc7\u592a\u7a7a\u98de\u884c\u8bad\u7ec3\u7684\u6bcd\u732b\u4e4b\u4e00\u3002\u8fd9\u4e9b\u732b\u5728\u5934\u9aa8\u4e0a\u690d\u5165\u4e86\u7535\u6781\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u6574\u4e2a\u98de\u884c\u8fc7\u7a0b\u4e2d\u76d1\u6d4b\u5b83\u4eec\u7684\u795e\u7ecf\u6d3b\u52a8\u3002\u5728\u98de\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7535\u8109\u51b2\u88ab\u65bd\u52a0\u5230\u5927\u8111\u548c\u4e00\u6761\u817f\u4e0a\uff0c\u4ee5\u523a\u6fc0\u53cd\u5e94\u3002\u706b\u7bad\u70b9\u71c313\u5206\u949f\u540e\uff0c\u592a\u7a7a\u8231\u88ab\u627e\u56de\u3002\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u8d28\u91cf\u90fd\u5f88\u597d\uff0c\u8d39\u5229\u5207\u7279\u5728\u8fd9\u6b21\u98de\u884c\u4e2d\u5e78\u5b58\u4e0b\u6765\uff0c\u8fd9\u662f\u552f\u4e00\u53ea\u5728\u592a\u7a7a\u98de\u884c\u4e2d\u5e78\u5b58\u4e0b\u6765\u7684\u732b\u300210\u670824\u65e5\uff0c\u7b2c\u4e8c\u53ea\u732b\u79d1\u52a8\u7269\u53d1\u5c04\u5347\u7a7a\uff0c\u4f46\u4efb\u52a1\u9020\u6210\u4e00\u4eba\u6b7b\u4ea1\u3002\n\u8d39\u5229\u5207\u7279\u5728\u98de\u884c\u524d\u88ab\u547d\u540d\u4e3aC341\uff0c\u98de\u884c\u7ed3\u675f\u540e\uff0c\u5a92\u4f53\u7ed9\u5979\u53d6\u540d\u4e3aF\u00e9lix\uff0c\u4ee5F\u00e9lix The Cat\u7684\u540d\u5b57\u547d\u540d\u3002\u6b27\u6d32\u533b\u5b66\u7814\u7a76\u4e2d\u5fc3(CERMA)\u5c06\u6b64\u4fee\u6539\u4e3a\u5973\u6027\u7684F\u00e9licette\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u6b63\u5f0f\u540d\u79f0\u3002\u4e16\u754c\u5404\u5730\u7684\u90ae\u7968\u90fd\u5728\u7eaa\u5ff5\u5979\uff0c\u4e00\u5c0a\u5370\u6709\u5979\u8096\u50cf\u7684\u96d5\u50cf\u6b63\u5728\u56fd\u9645\u592a\u7a7a\u5927\u5b66\u5c55\u51fa\u3002\u6cd5\u56fd\u732b\u79d1\u751f\u7269\u706b\u7bad\u7684\u6709\u6548\u8f7d\u8377\u662f\u8001\u9f20\u5728\u524d\uff0c\u7334\u5b50\u5728\u540e\u3002\n1957\u5e7411\u67083\u65e5\uff0c\u82cf\u8054\u642d\u4e58Sputnik 2\u53f7\u536b\u661f\u5c06\u83ab\u65af\u79d1\u8857\u5934\u53d1\u73b0\u7684\u6d41\u6d6a\u72d7\u83b1\u5361\u9001\u5165\u592a\u7a7a\uff0c\u5979\u5728\u592a\u7a7a\u4e2d\u6b7b\u53bb\uff0c\u4f46\u5374\u662f\u7b2c\u4e00\u53ea\u7ed5\u5730\u7403\u98de\u884c\u7684\u52a8\u7269\u3002[2]\u5df4\u897f\u9646\u519b\u4e0a\u6821\u66fc\u52aa\u57c3\u5c14\u00b7\u591a\u65af\u6851\u6258\u65af\u00b7\u62c9\u5947(Manuel Dos Santos Lage)\u8ba1\u5212\u4e8e1959\u5e741\u67081\u65e5\u7528\u8d39\u5229\u514b\u65af\u4e00\u53f7\u706b\u7bad\u53d1\u5c04\u4e00\u53ea\u540d\u4e3a\u5f17\u62c9\u95e8\u6208(Flamengo)\u7684\u732b\uff0c\u4f46\u7531\u4e8e\u4f7f\u7528\u732b\u7684\u4f26\u7406\u95ee\u9898\uff0c\u8be5\u822a\u73ed\u88ab\u53d6\u6d88\u3002[3][4]1961\u5e741\u670831\u65e5\uff0c\u4f5c\u4e3a\u6c34\u661f\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u9ed1\u7329\u7329\u706b\u817f\u6210\u4e3a\u7b2c\u4e00\u4e2a\u53d1\u5c04\u5230\u592a\u7a7a\u8fdb\u884c\u4e9a\u8f68\u9053\u98de\u884c\u7684\u539f\u59cb\u4eba\u3002[5]1961\u5e7411\u670829\u65e5\uff0c\u57c3\u8bfa\u65af\u6210\u4e3a\u7b2c\u4e8c\u53ea\u88ab\u53d1\u5c04\u5230\u592a\u7a7a\u7684\u9ed1\u7329\u7329\uff0c\u4e5f\u662f\u7ee7\u5b87\u822a\u5458\u5c24\u91cc\u00b7\u52a0\u52a0\u6797\u548c\u76d6\u5c14\u66fc\u00b7\u94c1\u6258\u592b\u4e4b\u540e\u7b2c\u4e09\u4e2a\u5b9e\u73b0\u5730\u7403\u8f68\u9053\u7684\u539f\u59cb\u4eba\u3002[6]\u3002\n\u6cd5\u56fd\u7684\u706b\u7bad\u8ba1\u5212\u59cb\u4e8e1961\u5e74\u3002[7]\u7ef4\u7f57\u5c3c\u514b\u706b\u7bad\u7684\u98de\u884c\u5df2\u4e8e1959\u5e74\u6062\u590d\uff0c\u7531\u7a7a\u95f4\u7814\u7a76\u59d4\u5458\u4f1a(CRS)\u8fd0\u8425\u3002[8]1961\u5e742\u670822\u65e5\uff0c\u6cd5\u56fd\u5728\u6492\u54c8\u62c9\u7684\u57fa\u5730\u53d1\u5c04\u4e86\u4e00\u53ea\u540d\u4e3a\u8d6b\u514b\u6258\u7684\u8001\u9f20\uff0c\u4f7f\u6cd5\u56fd\u6210\u4e3a\u7b2c\u4e09\u4e2a\u5c06\u52a8\u7269\u9001\u5165\u592a\u7a7a\u7684\u56fd\u5bb6\u3002[9][10]\u8d6b\u514b\u6258\u5728\u4ed6\u7684\u5934\u9aa8\u4e0a\u690d\u5165\u4e86\u7535\u6781\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76d1\u6d4b\u795e\u7ecf\u6d3b\u52a8\u3002\u968f\u540e\uff0c10\u670815\u65e5\u548c18\u65e5\uff0c\u53c8\u53d1\u5c04\u4e86\u4e24\u679a\u88c5\u6709\u8001\u9f20\u6709\u6548\u8f7d\u8377\u7684\u706b\u7bad\u3002[11]\u6cd5\u56fd\u79d1\u5b66\u5bb6\u5e0c\u671b\u4f7f\u7528\u8f83\u5927\u7684\u54fa\u4e73\u52a8\u7269\uff0c\u5e76\u9009\u62e9\u4e86\u732b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u6709\u4e86\u5927\u91cf\u5173\u4e8e\u5b83\u4eec\u7684\u795e\u7ecf\u5b66\u6570\u636e\u3002[11][12]\u3002\n1963\u5e74\uff0c\u6b27\u6d32\u533b\u5b66\u7814\u7a76\u4e2d\u5fc3(CERMA)\u4ece\u4e00\u5bb6\u5ba0\u7269\u7ecf\u9500\u5546\u90a3\u91cc\u8d2d\u4e70\u4e8614\u53ea\u732b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6bcf\u53ea\u732b\u90fd\u662f\u96cc\u6027\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u4e3e\u6b62\u6bd4\u8f83\u5e73\u9759\uff0c\u6bcf\u4e2a\u732b\u90fd\u662f\u6839\u636e\u5b83\u4eec\u7684\u6c14\u8d28\u8fdb\u884c\u9009\u62e9\u7684\u3002\u57281963\u5e74\uff0c\u6b27\u6d32\u533b\u5b66\u7814\u7a76\u4e2d\u5fc3(CERMA)\u4ece\u4e00\u5bb6\u5ba0\u7269\u7ecf\u9500\u5546\u90a3\u91cc\u8d2d\u4e70\u4e8614\u53ea\u732b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6bcf\u53ea\u732b\u90fd\u662f\u96cc\u6027\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u4e3e\u6b62\u6bd4\u8f83\u5e73\u9759\u3002\u8fd9\u4e9b\u732b\u5728\u53d1\u5c04\u524d\u6ca1\u6709\u547d\u540d\uff0c\u4ee5\u51cf\u5c11\u79d1\u5b66\u5bb6\u4eec\u5bf9\u5b83\u4eec\u4ea7\u751f\u4f9d\u604b\u7684\u53ef\u80fd\u6027\u3002[13]\u6240\u6709\u7684\u732b\u90fd\u901a\u8fc7\u5916\u79d1\u624b\u672f\u5c06\u6c38\u4e45\u6027\u7535\u6781\u690d\u5165\u5b83\u4eec\u7684\u5927\u8111\uff0c\u4ee5\u8bc4\u4f30\u795e\u7ecf\u6d3b\u52a8\u3002[14]\u6709\u4e9b\u732b\u79d1\u52a8\u7269\u7684\u592a\u7a7a\u98de\u884c\u8bad\u7ec3\u7c7b\u4f3c\u4e8e\u4eba\u7c7b\u7684\u8bad\u7ec3\u3002\u8fd9\u662f\u7531CERMA\u8fdb\u884c\u7684\uff0c\u5305\u62ec\u4f7f\u7528\u5e26\u6709\u6a21\u62df\u706b\u7bad\u566a\u97f3\u7684\u9ad8G\u79bb\u5fc3\u673a[15]\u4e09\u8f74\u5ea7\u6905\u3002[16]\u9488\u5bf9\u732b\u7684\u57f9\u8bad\u5305\u62ec\u9650\u5236\u5728\u5b83\u4eec\u7684\u5bb9\u5668\u4e2d\uff0c\u4ee5\u53ca\u7ecf\u53d7\u4f4f\u675f\u7f1a\u5e03\u7684\u4f53\u9a8c\u3002\u8fd9\u4e9b\u52a8\u7269\u63a5\u53d7\u4e86\u5927\u7ea6\u4e24\u4e2a\u6708\u7684\u8bad\u7ec3\uff1b\u8fd9\u4e00\u9650\u5236\u662f\u7531\u7535\u6781\u6781\u5316\u7684\u98ce\u9669\u8bbe\u5b9a\u7684\u3002[17][\u9700\u8981\u8fdb\u4e00\u6b65\u89e3\u91ca]\u3002\n\u53d1\u5c04\u673a\u7ec4\u4eba\u5458\u4e8e1963\u5e7410\u67088\u65e5\u5f00\u59cb\u5728\u53d1\u5c04\u573a\u8fdb\u884c\u51c6\u5907\u300210\u670811\u65e5\uff0c\u5bf9\u822a\u5411\u4fe1\u6807\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u65b9\u6cd5\u662f\u5c06\u5176\u653e\u7f6e\u5728\u76f4\u5347\u673a\u4e0a\uff0c\u5e76\u4e0e\u5730\u9762\u7ad9\u8fdb\u884c\u8ddf\u8e2a\u300212\u65e5\uff0c\u9f3b\u9525\u5185\u7684\u9065\u6d4b\u6d4b\u8bd5\u672a\u6210\u529f\uff0c\u7b2c\u4e8c\u5929\u6d4b\u8bd5\u6210\u529f\u3002\u572814\u65e5\u548c15\u65e5\u6d4b\u8bd5\u5bfb\u7684\u4fe1\u6807\u65f6\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4f46\u572810\u670816\u65e5\uff0c\u6240\u6709\u7684\u7535\u5b50\u8bbe\u5907\u90fd\u5de5\u4f5c\u5728\u4ee4\u4eba\u6ee1\u610f\u7684\u6c34\u5e73\u3002[18]\u3002\n10\u670817\u65e5\uff0c6\u53ea\u732b\u79d1\u52a8\u7269\u5165\u56f4\u51b3\u8d5b\uff0c\u88ab\u9009\u4e3a\u6b64\u6b21\u98de\u884c\u7684\u5019\u9009\u4eba\uff0c\u4e00\u53ea\u7f16\u53f7\u4e3aC-341\u7684\u71d5\u5c3e\u670d\u732b\u88ab\u9009\u4e3a\u53d1\u5c04\u5f53\u5929\u7684\u822a\u73ed\uff0c\u8fd8\u6709\u4e00\u53ea\u540e\u5907\u732b\u3002C-341\u7684\u4f53\u91cd\u4e3a2.5\u516c\u65a4(5.5\u5343\u514b)\uff0c\u7531\u4e8e\u5979\u51b7\u9759\u7684\u4e3e\u6b62\u548c\u5408\u9002\u7684\u4f53\u91cd\uff0c\u5979\u88ab\u9009\u4e3a\u516d\u540d\u51b3\u8d5b\u9009\u624b\u4e2d\u7684\u4f7c\u4f7c\u8005\u3002[14][18]\u7535\u6781\u8fde\u63a5\u5728\u5979\u7684\u524d\u3001\u5de6\u3001\u53f3\u540e\u817f\u4e0a\uff0c\u4ee5\u76d1\u6d4b\u5fc3\u810f\u6d3b\u52a8\u3002\u4e4b\u524d\u5728\u5979\u7684\u5934\u9aa8\u4e0a\u690d\u5165\u4e86\u4e5d\u4e2a\u7535\u6781\uff1a\u4e24\u4e2a\u5728\u524d\u7aa6\uff0c\u4e00\u4e2a\u5728\u8eaf\u4f53\u533a\u57df\uff0c\u4e24\u4e2a\u5728\u8179\u4fa7\u6d77\u9a6c\uff0c\u4e24\u4e2a\u5728\u7f51\u72b6\u533a\uff0c\u4e24\u4e2a\u5728\u8054\u5408\u76ae\u8d28\u3002\u4e24\u4e2a\u7535\u6781\u7c98\u5728\u524d\u817f\u4e0a\uff0c\u8fd9\u6837\u5728\u98de\u884c\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u7528\u7535\u8109\u51b2\u6765\u523a\u6fc0\u5b83\u4eec\u3002\u4e24\u4e2a\u9ea6\u514b\u98ce\uff0c\u4e00\u4e2a\u5728\u5979\u7684\u80f8\u53e3\uff0c\u4e00\u4e2a\u5728\u706b\u7bad\u7684\u9f3b\u9525\u4e0a\uff0c\u76d1\u6d4b\u5979\u7684\u547c\u5438\u3002[17]\u4f7f\u7528\u7684\u8fd0\u8f7d\u706b\u7bad\u662f\u7ef4\u7f57\u5c3c\u514bAGI-47\u63a2\u7a7a\u5668\n\u9664\u4e86\u7f51\u72b6\u6d4b\u91cf\u548c\u518d\u5165\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u7684\u6570\u636e\u5916\uff0c\u6574\u4e2a\u98de\u884c\u8fc7\u7a0b\u4e2d\u90fd\u8bb0\u5f55\u4e86\u9ad8\u8d28\u91cf\u7684\u6570\u636e\u3002\u5bf9C-341\u8fdb\u884c\u7535\u51fb\u7684\u901f\u5ea6\u6bd4\u9884\u671f\u7684\u8981\u9ad8\u3002\u5979\u5728\u4e0a\u5347\u9636\u6bb5\u4fdd\u6301\u8b66\u60d5\uff0c\u56e0\u4e3a\u5979\u662f\u706b\u7bad\u4e0a\u7684\u6709\u6548\u8f7d\u8377\u3002\u5728\u5fae\u91cd\u529b\u9636\u6bb5\uff0c\u5979\u7684\u5fc3\u7387\u51cf\u6162\uff0c\u547c\u5438\u53d8\u5f97\u6b63\u5e38\u3002\u52a8\u8361\u7684\u91cd\u8fd4\u5927\u6c14\u5c42\u5bfc\u81f4\u5979\u7684\u5fc3\u7387\u4e0a\u5347\uff0c\u4f46\u7cdf\u7cd5\u7684\u6570\u636e\u4f7f\u5206\u6790\u53d8\u5f97\u56f0\u96be\u3002[27]\u8fd9\u67b6\u98de\u673a\u7684\u751f\u7269\u5b66\u6570\u636e\u88ab\u63d0\u4f9b\u7ed9\u4e86\u5a92\u4f53\uff0c\u5a92\u4f53\u6839\u636e\u8d39\u5229\u514b\u65af\u7684\u5361\u901a\u7cfb\u5217\u4e3a\u8d39\u5229\u514b\u65af\u547d\u540d\u4e86C\u00e9341&34\uff1bF\u00e9lix&34\uff1bC\u00e9lix&34\uff1bF\u00e9lix&34\uff1bC\u00e9341&34\uff1bF\u00e9lix&34\uff1bCERMA\u5c06\u5176\u6539\u4e3a\u5973\u6027\u7684F\u00e9licette\uff0c\u5e76\u91c7\u7528\u4e86\u8fd9\u4e2a\u540d\u79f0\u4f5c\u4e3a\u5b98\u65b9\u540d\u79f0\u3002[28]\u8d39\u5229\u5207\u7279\u5728\u53d1\u5c04\u4e24\u4e2a\u6708\u540e\u88ab\u5b89\u4e50\u6b7b\uff0c\u8fd9\u6837\u79d1\u5b66\u5bb6\u5c31\u53ef\u4ee5\u8fdb\u884c\u5c38\u68c0\u6765\u68c0\u67e5\u5979\u7684\u5927\u8111\u3002[29][29]\u3002\n10\u670824\u65e5\uff0c\u6cd5\u56fd\u4eba\u5c06\u7b2c\u4e8c\u53ea\u732b\u53d1\u5c04\u5230\u592a\u7a7a\u3002\u5c06\u706b\u7bad\u4ece\u53d1\u5c04\u53f0\u4e0a\u91ca\u653e\u51fa\u6765\u7684\u7206\u70b8\u87ba\u6813\u672a\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u5bfc\u81f4\u706b\u7bad\u4ee5\u6781\u7aef\u89d2\u5ea6\u53d1\u5c04\u3002\u53d1\u5c04\u53f0\u4e0a\u7684\u65e0\u7ebf\u7535\u5e94\u7b54\u5668\u505c\u6b62\u5de5\u4f5c\uff0c\u8fd9\u7ed9\u5bfb\u627e\u706b\u7bad\u5e26\u6765\u4e86\u56f0\u96be\u3002\u4e00\u67b6\u76f4\u5347\u673a\u53d1\u73b0\u4e86\u964d\u843d\u4f1e\uff0c\u4f46\u65e0\u6cd5\u964d\u843d\uff0c\u56e0\u6b64\u8be5\u673a\u6784\u6d3e\u51fa\u4e86\u5730\u9762\u8f66\u8f86\u3002\u4ed6\u4eec\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e9b\u5e26\u523a\u7684\u94c1\u4e1d\u7f51\u3002\u7b2c\u4e8c\u5929\uff0c\u4e00\u67b6\u76f4\u5347\u673a\u518d\u6b21\u88ab\u6d3e\u5f80\u73b0\u573a\uff0c\u5e76\u5f97\u4ee5\u964d\u843d\u5728\u73b0\u573a\u3002\u5bb9\u7eb3\u6709\u6548\u8f7d\u8377\u7684\u9f3b\u9525\u4e25\u91cd\u53d7\u635f\uff0c\u732b\u5df2\u7ecf\u6b7b\u4ea1\u3002[19][30]\u3002\n\u5728\u5269\u4e0b\u768412\u53ea\u63a5\u53d7\u8bad\u7ec3\u7684\u732b\u4e2d\uff0c11\u53ea\u7684\u547d\u8fd0\u662f\u5df2\u77e5\u7684\u3002\u7535\u6781\u624b\u672f\u540e\uff0c\u4e00\u53ea\u732b\u7684\u5065\u5eb7\u72b6\u51b5\u6bcf\u51b5\u6108\u4e0b\uff0c\u6240\u4ee5\u79d1\u5b66\u5bb6\u4eec\u628a\u5b83\u4eec\u79fb\u8d70\u4e86\u3002\u8be5\u7ec4\u7ec7\u5c06\u5979\u4f5c\u4e3a\u5409\u7965\u7269\uff0c\u5e76\u7ed9\u5979\u53d6\u540d\u4e3aSCoubiou\uff0c\u56e0\u4e3a\u5979\u7684\u8116\u5b50\u4e0a\u56f4\u7740\u4e00\u6761SCoubiou\u8fab\u5b50\uff0c\u8fd9\u5728\u5f53\u65f6\u662f\u4e00\u79cd\u6d41\u884c\u7684\u98ce\u683c\u3002[31]\u5176\u4ed69\u53ea\u732b\u5728\u9879\u76ee\u7ed3\u675f\u65f6\u9000\u5f79\u3002[28][28]\u3002\n\u6cd5\u56fd\u7ee7\u7eed\u5176\u751f\u7269\u6709\u6548\u8f7d\u8377\u7814\u7a76\uff0c\u6539\u4e3a\u7334\u5b50\u30021967\u5e743\u67087\u65e5\uff0c\u4e00\u53ea\u540d\u4e3a\u739b\u8482\u5a1c\u7684\u7334\u5b50\u53d1\u5c04\u5347\u7a7a\uff0c6\u5929\u540e\uff0c\u76ae\u5c14\u96f7\u7279\u53d1\u5c04\u5347\u7a7a\u3002\u4ed6\u4eec\u90fd\u88ab\u6210\u529f\u5730\u627e\u56de\u3002\u6cd5\u56fd\u901a\u8fc7\u8fd9\u4e9b\u98de\u884c\u5b8c\u6210\u4e86\u56fd\u5bb6\u5c42\u9762\u7684\u751f\u7269\u6709\u6548\u8f7d\u8377\u7814\u7a76\uff0c\u4f46\u540e\u6765\u572820\u4e16\u7eaa70\u5e74\u4ee3\u4e0e\u82cf\u8054\u5408\u4f5c\u8fdb\u884c\u4e86\u751f\u7269\u6709\u6548\u8f7d\u8377\u7684\u7814\u7a76\u3002[28][28]\u3002\n\u6839\u636eSpace.com 2017\u5e7411\u67088\u65e5\u7684\u4e00\u7bc7\u6587\u7ae0\uff0c\u8d39\u5229\u5207\u7279\u53c2\u52a0\u592a\u7a7a\u7ade\u8d5b\uff0c#34\uff1b\u3002\u8fd9\u5f53\u7136\u4e0d\u662f\u81ea\u613f\u7684\uff0c\u4f46\u5bf9\u4e8e\u6cd5\u56fd\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u91cc\u7a0b\u7891\uff0c\u5b83\u521a\u521a\u5efa\u7acb\u4e86\u4e16\u754c\u4e0a\u7b2c\u4e09\u4e2a\u6c11\u7528\u822a\u5929\u5c40(\u4ec5\u6b21\u4e8e\u82cf\u8054\u548c\u7f8e\u56fd)\u3002\u8d39\u5229\u5207\u7279\u7684\u4efb\u52a1\u5e2e\u52a9\u6cd5\u56fd\u8fdb\u5165\u4e86\u592a\u7a7a\u7ade\u8d5b\u3002\u5f53\u65f6\uff0c\u8d39\u5229\u5207\u7279\u7684\u98de\u884c\u8fdc\u4e0d\u5982\u5176\u4ed6\u592a\u7a7a\u98de\u884c\u53d7\u6b22\u8fce\u3002\u4f2f\u5409\u65af\u548c\u675c\u5e03\u65af\u8ba4\u4e3a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5979\u7684\u5934\u9aa8\u4e0a\u690d\u5165\u4e86\u7535\u6781\u7684\u7167\u7247\uff0c\u4ee5\u53ca\u65b0\u7684\u52a8\u7269\u6743\u5229\u8fd0\u52a8\u3002[33][33]\u3002\n\u524d\u6cd5\u56fd\u6b96\u6c11\u5730\u53d1\u884c\u4e86\u7eaa\u5ff5\u8d39\u5229\u5207\u7279\u98de\u884c\u7684\u90ae\u7968\u3002\u79d1\u6469\u7f57\u7fa4\u5c9b\u57281992\u5e74\u53d1\u884c\u4e86\u4e00\u679a\u90ae\u7968\uff0c\u8fd9\u662f\u4e00\u7cfb\u5217\u4ee5\u53c2\u4e0e\u592a\u7a7a\u98de\u884c\u7684\u52a8\u7269\u4e3a\u4e3b\u9898\u7684\u90ae\u7968\u4e4b\u4e00\uff1b\u8fd9\u679a\u90ae\u7968\u9519\u8bef\u5730\u4f7f\u7528\u4e86\u8d39\u5229\u514b\u65af\u8fd9\u4e2a\u540d\u5b57\u30021997\u5e74\uff0c\u4e4d\u5f97\u53d1\u884c\u4e86\u7eaa\u5ff5\u8d39\u5229\u585e\u7279\u548c\u5176\u4ed6\u592a\u7a7a\u52a8\u7269\u7684\u90ae\u7968\uff0c\u540c\u6837\u4f7f\u7528\u4e86\u8d39\u5229\u514b\u65af\u7684\u540d\u5b57\u3002\u5c3c\u65e5\u5c141999\u5e74\u7684\u4e00\u679a\u90ae\u7968\u4e5f\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u540d\u79f0\u3002[32][34][35]\u3002\n\u56fe\u5362\u5179\u7b2c\u4e09\u5927\u5b66\u7684UPS\u5b66\u751f\u5929\u6587\u5b66\u4ff1\u4e50\u90e8\u5c06\u4ee5\u8d39\u5229\u5207\u7279\u7684\u540d\u5b57\u547d\u540d\u5176\u672a\u6765\u7684\u5929\u6587\u53f0\u3002\u8fd9\u5c06\u662f\u6cd5\u56fd\u7b2c\u4e00\u4e2a\u5b8c\u5168\u7531\u5b66\u751f\u7ba1\u7406\u7684\u5929\u6587\u53f0\uff0c\u5c06\u4e8e2021\u5e74\u5f00\u653e\u3002500\u6beb\u7c73\u7684Dall-Kirkham\u671b\u8fdc\u955c(3500 mm\u7126\u8ddd)\u5c06\u88ab\u5b89\u7f6e\u5728\u4e00\u4e2a\u76f4\u5f843.90\u7c73\u7684\u673a\u52a8\u5706\u9876\u4e2d\u3002[36][37][37]\u3002\n\u867d\u7136\u4e00\u4e9b\u5728\u592a\u7a7a\u4e2d\u65c5\u884c\u7684\u975e\u4eba\u7c7b\u52a8\u7269\u88ab\u8a89\u4e3a\u82f1\u96c4-\u9ed1\u7329\u7329\u54c8\u59c6\u88ab\u57cb\u846c\u5728\u7f8e\u56fd\u65b0\u58a8\u897f\u54e5\u5dde\u7684\u56fd\u9645\u592a\u7a7a\u540d\u4eba\u5802\uff0c\u82cf\u8054\u72d7\u83b1\u5361\u5728\u4fc4\u7f57\u65af\u661f\u57ce\u9644\u8fd1\u7684\u5c24\u91cc\u00b7\u52a0\u52a0\u6797\u5b87\u822a\u5458\u8bad\u7ec3\u4e2d\u5fc3\u6709\u4e00\u5ea7\u9752\u94dc\u7eaa\u5ff5\u7891-\u4f46\u5728\u5979\u6267\u884c\u4efb\u52a150\u591a\u5e74\u540e\uff0c\u6ca1\u6709\u4e86\u8d39\u5229\u5207\u7279\u7684\u7eaa\u5ff5\u7891\u3002\u7136\u540e\uff0c2017\u5e74\uff0c\u9a6c\u4fee\u00b7\u585e\u5c14\u65e5\u00b7\u76d6\u4f0a(Matthew Serge Guy)\u53d1\u8d77\u4e86\u4e00\u9879\u4f17\u7b79\u6d3b\u52a8\uff0c\u7ad6\u7acb\u4e86\u4e00\u5c0a\u8d39\u5229\u5207\u7279\u7684\u9752\u94dc\u96d5\u50cf\uff0c\u4ee5\u7eaa\u5ff5\u5979\u5bf9\u79d1\u5b66\u7684\u8d21\u732e\u3002[32]\u96d5\u50cf\u662f\u7531\u96d5\u5851\u5bb6\u5409\u5c14\u00b7\u5e15\u514b\u8bbe\u8ba1\u7684\u3002[38]\u521d\u6b65\u8bbe\u8ba1\u63cf\u7ed8\u4e86\u4e00\u53ea\u5728\u5730\u7403\u9876\u90e8\u7684\u732b\uff0c\u5e76\u5c06\u5305\u62ec\u4e00\u5757\u5370\u6709\u4e3b\u8981\u6350\u8d60\u8005\u59d3\u540d\u7684\u724c\u533e\u30022018\u5e744\u6708\uff0c\u8be5\u9879\u76ee\u5b9e\u73b0\u4e864\u4e07GB\u7684\u8d44\u91d1\u76ee\u6807\u3002[32][39][40]\n2019\u5e744\u6708\uff0c\u76d6\u4f0a\u5ba3\u5e03\u96d5\u50cf\u5c06\u8bbe\u5728\u6cd5\u56fd\u4e1c\u90e8\u7684\u56fd\u9645\u7a7a\u95f4\u5927\u5b66\u3002[41]\u8fd9\u5ea7\u96d5\u50cf\u4e8e2019\u5e7412\u670818\u65e5\u63ed\u5e55\uff0c\u4f5c\u4e3a\u8be5\u5927\u5b66\u592a\u7a7a\u7814\u7a76\u7855\u58eb\u9879\u76ee25\u5468\u5e74\u5e86\u5178\u7684\u4e00\u90e8\u5206\u3002\u5b83\u9ad81.5\u7c73(5\u82f1\u5c3a)\uff0c\u63cf\u7ed8\u7684\u662f\u8d39\u5229\u5207\u7279\u6816\u606f\u5728\u5730\u7403\u4e0a\uff0c\u4ef0\u671b\u7740\u5979\u66fe\u7ecf\u65c5\u884c\u8fc7\u7684\u5929\u7a7a\u3002\u76d6\u4f0a\u5728Kickstarter\u7684\u66f4\u65b0\u4e2d\u5199\u9053\uff0c\u60f3\u5230\u6211\u4e0a\u4f20\u5230\u7f51\u4e0a\u7684\u4e00\u6bb5\u89c6\u9891\uff0c\u7b80\u76f4\u662f\u75af\u4e86\u2026\u2026\u3002\u5bfc\u81f4\u4e86\u8fd9\u4e00\u5207\u3002\u4e92\u8054\u7f51\u6709\u65f6\u662f\u4e2a\u4e0d\u9519\u7684\u5730\u65b9\u3002\n\u8fea\u7c73\u7279\u91cc\u00b7\u9a6c\u62c9\u7533\u79d1\u592b(2002\u5e7410\u670810\u65e5)\u3002\u751f\u547d\u6709\u673a\u4f53\u9996\u6b21\u8f68\u9053\u98de\u884c\u7684\u4e00\u4e9b\u4e0d\u4e3a\u4eba\u77e5\u7684\u9875\u9762\u3002\u7b2c34\u5c4a\u7a7a\u95f4\u7814\u59d4\u4f1a\u79d1\u5b66\u5927\u4f1a\uff0c\u7b2c\u4e8c\u5c4a\u4e16\u754c\u7a7a\u95f4\u5927\u4f1a\u3002IAF\u6458\u8981\u3002\u5fb7\u514b\u8428\u65af\u5dde\u4f11\u65af\u987f\u3002\u7b2c288\u9875\u3002\u5bc6\u7801\uff1a2002iaf..confE.288M\u3002\n\u5df4\u897f\u51c6\u5907\u8ba9\u732b\u8fdb\u5165\u592a\u7a7a\u3002\u65af\u6ce2\u574e\u6bcf\u65e5\u7eaa\u4e8b\u62a5\u3002\u7f8e\u8054\u793e\u30021958\u5e7412\u670831\u65e5\u3002\u7b2c32\u9875-\u901a\u8fc7\u8c37\u6b4c\u65b0\u95fb\u3002\n\u7ea6\u745f\u592b\u00b7L\u00b7\u8fc8\u52d2(1961\u5e742\u67081\u65e5)\u3002\u54c8\u59c6\uff0c\u9ed1\u7329\u7329\u5b87\u822a\u5458\uff0c\u5e2e\u52a9\u79d1\u5b66\u5bb6\u51b3\u5b9a\u4eba\u7c7b\u5b87\u822a\u5458\u4e58\u5750\u592a\u7a7a\u7684\u5b89\u5168\u6027\u3002\u5546\u4e1a\u90ae\u62a5\u3002\u5370\u7b2c\u5b89\u7eb3\u5dde\u54e5\u4f26\u6bd4\u4e9a\u5e02\u3002UPI\u3002\u7b2c6\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u64cd\u4f5c\u6545\u969c\u7f29\u77ed\u4e86Chimp\u7684\u4e58\u5750\u65f6\u95f4\u3002\u201c\u6bcf\u65e5\u5e7f\u544a\u62a5\u201d\u3002\u8def\u6613\u65af\u5b89\u90a3\u5dde\u62c9\u6590\u7279\u3002\u7f8e\u8054\u793e\u30021961\u5e7411\u670829\u65e5\u3002\u7b2c1\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u6cd5\u56fd\u5c06\u201c\u706b\u732b\u201d\u9001\u5165\u592a\u7a7a\u3002\u57c3\u5fb7\u8499\u987f\u6742\u5fd7\u3002\u827e\u4f2f\u5854\u7701\u57c3\u5fb7\u8499\u987f\u3002\u8def\u900f\u793e\u30021963\u5e749\u670830\u65e5\u3002\u7b2c37\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u592a\u7a7a\u732b\u56de\u6765\u4e86\uff0c\u6d3b\u7740\u3002\u6089\u5c3c\u5148\u9a71\u6668\u62a5\u30021963\u5e7410\u670820\u65e5\u3002\u7b2c5\u9875-\u901a\u8fc7\u8c37\u6b4c\u65b0\u95fb\u3002\n^&#34\uff1b[\u81f4\u656c]\u98de\u5229\u5207\u7279\u9752\u94dc\u96d5\u50cf\uff0cVOTRE Avis M.Viso\uff1f&#34\uff1b[[\u81f4\u656c]\u4e00\u5c0a\u9001\u7ed9\u8d39\u5229\u5207\u7279\u7684\u9752\u94dc\u96d5\u50cf\uff0c\u60a8\u7684\u610f\u89c1\u662fViso\u5148\u751f\uff1f]\u3002spacegate.cnes.fr(\u6cd5\u8bed)\u3002CNES.\u30022017\u5e7412\u670814\u65e5\u3002\n*\u8ba9-\u6d1b\u6717\u00b7\u5361\u65af\u5229(2017\u5e741\u670827\u65e5)\u3002[\u6cd5\u56fd\u5df2\u5c06\u7b2c\u4e00\u53ea\u732b\u9001\u5165\u592a\u7a7a\uff0c\u4f46\u6240\u6709\u4eba\u90fd\u5fd8\u4e86](\u6cd5\u8bed)\u3002(\u6cd5\u56fd\u5df2\u5c06\u7b2c\u4e00\u53ea\u732b\u9001\u5165\u592a\u7a7a\uff0c\u4f46\u6240\u6709\u4eba\u90fd\u5fd8\u4e86\u8fd9\u4e00\u70b9)\u3002(\u6cd5\u56fd\u5df2\u5c06\u7b2c\u4e00\u53ea\u732b\u9001\u5165\u592a\u7a7a\uff0c\u4f46\u6240\u6709\u4eba\u90fd\u5fd8\u4e86\u8fd9\u4e00\u70b9)(\u6cd5\u8bed)\u3002(\u6cd5\u56fd\u5df2\u5c06\u7b2c\u4e00\u53ea\u732b\u9001\u5165\u592a\u7a7a\uff0c\u4f46\u6240\u6709\u4eba\u90fd\u5fd8\u4e86)(\u6cd5\u8bed)\u3002\u77f3\u677f\u3002\n^a b&#34\uff1b\u592a\u7a7a\u732b(Space Cats&#34\uff1b)\u3002\u5339\u5179\u5821\u51fa\u7248\u793e\u3002\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5339\u5179\u5821\u30021964\u5e743\u67088\u65e5\u3002\u7b2c26\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u827e\u7c73\u4e3d\u00b7\u4f69\u8328\u79d1(2018\u5e7412\u670826\u65e5)\u3002\u201c\u8d39\u5229\u5207\u7279\u7b80\u53f2\u201d\uff0c\u592a\u7a7a\u4e2d\u7684\u7b2c\u4e00\u53ea\u732b\u3002\u7cbe\u795e\u635f\u5931-\u901a\u8fc7MSN\u3002\n^a b Gray\uff0c\u5854\u62c9(2004\u5e748\u67082\u65e5)\u3002\u592a\u7a7a\u52a8\u7269\u7b80\u53f2\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u3002\n\u6cd5\u56fd\u5c06\u201c\u706b\u732b\u201d\u9001\u5165\u592a\u7a7a\u3002\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5339\u5179\u5821\u3002\u5339\u5179\u5821\u51fa\u7248\u793e\u3002UPI\u30021963\u5e749\u670825\u65e5\u3002\u7b2c29\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u5185\u5229\u00b7\u83b1\u8428\u5947(2017\u5e7411\u670817\u65e5)\u3002F\u00e9licette\uff0cla Premi\u00e8re Chat Income de l&#39\uff1bespace\uff0cva voir une statue\u00e0son adigie&#34\uff1b[F\u00e9licette\uff0c\u7b2c\u4e00\u53ea\u4ece\u592a\u7a7a\u8fd4\u56de\u7684\u732b\uff0c\u5c06\u6709\u4e00\u5c0a\u5e26\u6709\u5979\u7684\u96d5\u50cf\u7684\u96d5\u50cf](F\u00e9licette\u662f\u7b2c\u4e00\u53ea\u4ece\u592a\u7a7a\u8fd4\u56de\u7684\u732b\uff0c\u5c06\u6709\u4e00\u5c0a\u5e26\u6709\u5979\u7684\u96d5\u50cf\u7684\u96d5\u50cf)\u3002Numerama(\u6cd5\u8bed)\u3002\n^a b Belleret\uff0cChlo\u00e9(2018\u5e7410\u670818\u65e5)\u30021963\u5e7410\u670818\u65e5\uff1aI\u00e9tait une fois un chat dans l&#34\uff1bespace&#34\uff1b[1963\u5e7410\u670818\u65e5\uff1a\u5f88\u4e45\u4ee5\u524d\u592a\u7a7a\u4e2d\u6709\u4e00\u53ea\u732b]\u3002\u5df4\u9ece\u4eba(\u6cd5\u8bed)\u3002\nSur L&#34\uff1bEspace au Palais de la D\u00e9Couverte\uff1b[\u53d1\u73b0\u5bab\u7684\u592a\u7a7a\u5c55\u89c8]\u3002\u201c\u4e16\u754c\u62a5\u201d(\u6cd5\u8bed)\u30021964\u5e741\u670817\u65e5\u3002\n\u6cd5\u56fd\u5c06\u732b\u9001\u4e0a\u592a\u7a7a\u3002\u6cf0\u6664\u58eb\u62a5\u7684\u8bb0\u5f55\u3002\u7279\u6d1b\u4f0a\uff0c\u7ebd\u7ea6\u3002\u7f8e\u8054\u793e\u30021963\u5e7410\u670818\u65e5\u3002\u7b2c1\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u6765\u81ea\u5df4\u9ece\u5c0f\u5df7\u7684\u9003\u72af\u751f\u5b58\u4e86100\u82f1\u91cc\u7684\u706b\u7bad\u4e4b\u65c5\u3002\u5723\u8def\u6613\u65af\u90ae\u62a5\u3002\u5bc6\u82cf\u91cc\u5dde\u5723\u8def\u6613\u65af\u5e02\u30021964\u5e741\u67085\u65e5\u3002\u7b2c21\u9875-\u901a\u8fc7Newsppers.com\u3002\n\u7f57\u66fcBaheux(2017\u5e7410\u670819\u65e5)\u3002\u5982\u679c\u7b2c\u4e00\u53ea\u98de\u4e0a\u592a\u7a7a\u7684\u732b\uff0c\u5f88\u5feb\u5c31\u6709\u4e86\u5979\u7684\u96d5\u50cf\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u7b2c\u4e00\u53ea\u98de\u4e0a\u592a\u7a7a\u7684\u732b\uff0c\u5f88\u5feb\u5c31\u4f1a\u6709\u5979\u7684\u96d5\u50cf\u4e86\u5462\uff1f]\u2026\u2026[\u5982\u679c\u7b2c\u4e00\u53ea\u98de\u4e0a\u592a\u7a7a\u7684\u732b\u5f88\u5feb\u5c31\u6709\u4e86\u5979\u7684\u96d5\u50cf\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u7b2c\u4e00\u53ea\u98de\u4e0a\u592a\u7a7a\u7684\u732b\u5f88\u5feb\u5c31\u4f1a\u6709\u5979\u7684\u96d5\u50cf\u5462\uff1f]\u3002(\u6cd5\u6587)\u3002\u5df4\u9ece\u4eba\u3002\n^a b c d Weitering\uff0cHannke(2017\u5e7411\u67088\u65e5)\u3002\u7b2c\u4e00\u53ea\u83b7\u5f97\u9002\u5f53\u7eaa\u5ff5\u7684\u592a\u7a7a\u732b\u3002\u592a\u7a7a\u7f51(Space.com)\u3002\u4e8e2018\u5e744\u670821\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n\u4f17\u7b79\u6210\u529f\u540e\uff0c\u8d39\u5229\u5207\u7279\u592a\u7a7a\u4e2d\u7b2c\u4e00\u53ea\u83b7\u5f97\u7eaa\u5ff5\u96d5\u50cf\u7684\u732b\u3002\u96c6\u5408\u7a7a\u95f4\u30022017\u5e7411\u670817\u65e5\u3002\n\u8054\u5408\u56fd\u89c2\u6d4b\u7ad9\u548c\u6821\u56ed\u6821\u56ed\u5927\u5b66\u4e4b\u95f4\u7684\u8054\u7cfb\u3002la D\u00e9p\u00eache(\u6cd5\u8bed)\u30022019\u5e746\u670821\u65e5\u3002\u4e8e2019\u5e746\u670826\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n\u5185\u5229\u00b7\u83b1\u8428\u5947(2017\u5e7411\u670817\u65e5)\u3002F\u00e9licette\uff0cla Premi\u00e8re Chatage Income de l&#39\uff1bespace\uff0cva voir une statue\u00e0son adigie[F\u00e9licette\uff0c\u7b2c\u4e00\u53ea\u4ece\u592a\u7a7a\u8fd4\u56de\u7684\u732b\uff0c\u5c06\u6709\u4e00\u5c0a\u5e26\u6709\u5979\u7684\u8096\u50cf\u7684\u96d5\u50cf](\u6cd5\u8bed)\u3002\u52aa\u6885\u62c9\u9a6c\u3002\n^\u5e15\u91d1\u68ee\uff0c\u6c49\u5a1c\u00b7\u7b80(2017\u5e7410\u670823\u65e5)\u3002\u4ece\u592a\u7a7a\u732b\u8d39\u5229\u5207\u7279\u5230\u7ef5\u7f8a\u591a\u8389--\u54ea\u4e9b\u52a8\u7269\u5e94\u8be5\u5f97\u5230\u96d5\u50cf\uff1f\u536b\u62a5\u3002ISSN\u7535\u8bdd\uff1a0261-3077\u3002\n^\u83ab\u90aa\uff0c\u5927\u536b(2017\u5e7410\u670820\u65e5)\u3002\u592a\u7a7a\u4e2d\u7684\u7b2c\u4e00\u53ea\u732b\u53ef\u80fd\u6700\u7ec8\u4f1a\u5f97\u5230\u5979\u5e94\u5f97\u7684\u8ba4\u53ef\u3002\u8d6b\u82ac\u987f\u90ae\u62a5\u3002\n\u5434^\uff0c\u51ef\u745f\u7433(2020\u5e741\u670828\u65e5)\u3002\u7b2c\u4e00\u53ea\u8fdb\u5165\u592a\u7a7a\u7684\u732b--\u8d39\u5229\u5207\u7279\u7ec8\u4e8e\u83b7\u5f97\u4e86\u4e00\u5ea7\u7eaa\u5ff5\u7891\u3002\u53f2\u5bc6\u68ee\u6742\u5fd7\u3002\n\u79d1\u6797\u00b7\u4f2f\u5409\u65af(Burgess\uff0cColin)\uff1b\u514b\u91cc\u65af\u00b7\u675c\u5e03\u65af(Dubbs\uff0cChris\uff0c2007)\u3002\u592a\u7a7a\u4e2d\u7684\u52a8\u7269\uff1a\u4ece\u7814\u7a76\u706b\u7bad\u5230\u822a\u5929\u98de\u673a\u3002\u65af\u666e\u6797\u683c\u00b7\u666e\u62c9\u897f\u65af\u3002ISBN978-0-387-36053-9\u3002CS1\u7ef4\u62a4\uff1aREF=HARV(\u94fe\u63a5)\u3002\n\u591a\u5c14\u8482\uff0cK.\uff1b\u8363\u683c\uff0cP.\uff1b\u585e\u62c9\uff0c\u8ba9-\u96c5\u514b(2018\u5e7410\u6708)\u3002\u8d39\u5229\u5207\u7279\uff0c\u552f\u4e00\u7684\u592a\u7a7a\u732b\u3002\u56fd\u9645\u5b87\u822a\u5927\u4f1a\u3002CS1\u7ef4\u62a4\uff1aREF=HARV(\u94fe\u63a5)\u3002\n\u514b\u52b3\u65af\u00b7\u8def\u900f(2000)\u3002V2\u4ee5\u53ca\u5fb7\u56fd\u3001\u4fc4\u7f57\u65af\u548c\u7f8e\u56fd\u7684\u706b\u7bad\u8ba1\u5212\u3002\u52a0\u62ff\u5927\u5fb7\u8bed\u535a\u7269\u9986\u3002\u7b2c87\u9875\u3002ISBN978-1-894643-05-4\u3002CS1\u7ef4\u62a4\uff1aREF=HARV(\u94fe\u63a5)", "note_en": "Jump to navigation  Jump to search  F\u00e9licette (   [fe.li\u02d0.s\u025bt]) was the first cat launched into space, on 18 \u00a0October 1963 as part of the  French space program. F\u00e9licette was one of 14 female cats trained for spaceflight. The cats had electrodes implanted onto their skulls so their neurological activity could be monitored throughout the flight. Electrical impulses were applied to the brain and a leg during the flight to stimulate responses. The capsule was recovered 13\u00a0minutes after the rocket was ignited. Most of the data from the mission was of good quality, and F\u00e9licette survived the flight, the only cat to have survived spaceflight. A second feline was launched on 24 October, but the mission resulted in a fatality.\n F\u00e9licette had the designation of C 341 before the flight, and after the flight the media gave her the name F\u00e9lix, after  F\u00e9lix the Cat.  Centre d&#39;Enseignement et de Recherches de M\u00e9decine A\u00e9ronautique (CERMA) modified this to the feminine F\u00e9licette and adopted it as her official name. She has been commemorated on postage stamps around the world and a statue with her likeness is on display at the  International Space University. France&#39;s feline biological rocket  payloads were preceded by rats and followed by monkeys.\n    On 3 \u00a0November 1957, the  Soviet Union launched  Laika, a stray dog found on the streets of Moscow, into space on  Sputnik 2. She died in space, but was the first animal to orbit the Earth.  [2] Brazilian Army colonel Manuel dos Santos Lage planned to launch a cat named Flamengo aboard the F\u00e9lix I rocket on 1 January 1959, but the flight was cancelled over ethical concerns regarding the use of a cat.  [3]  [4] On 31 \u00a0January 1961, as part of  Project Mercury, the chimpanzee  Ham became the first  hominid launched into space for a  suborbital flight.  [5] On 29 \u00a0November 1961,  Enos became the second chimpanzee launched into space, and third  hominid after  cosmonauts  Yuri Gagarin and  Gherman Titov, to achieve  Earth orbit.  [6]\n The French rocket program began in 1961.  [7] Flights of the  V\u00e9ronique rocket had been reinstated in 1959 and were run by the Comit\u00e9 des Recherches Spatiales (CRS).  [8] France&#39;s base in the Sahara launched a rat named Hector on 22 \u00a0February 1961, causing France to become the third country to launch animals into space.  [9]  [10] Hector had  electrodes implanted on his skull so  neurological activity could be monitored. Two further rockets with rat payloads followed, on 15 and 18 \u00a0October.  [11] French scientists wanted to use larger mammals and chose cats, since they already had a significant amount of neurological data on them.  [11]  [12]\n   In 1963,  Centre d&#39;Enseignement et de Recherches de M\u00e9decine A\u00e9ronautique (CERMA) purchased 14 cats from a pet dealer for the testing, with the individual animals selected based on their temperament; all of the cats were female, for their calmer demeanor. The cats were unnamed prior to the launch to reduce the likelihood that the scientists would become attached to them.  [13] All of the cats had permanent electrodes surgically implanted into their brain to assess neurological activity.  [14] Some of the cats&#39; spaceflight training was similar to training for humans. This was carried out by CERMA and included using the  high-G centrifuge  [15] three-axis chair with simulated rocket noise.  [16] Cat-specific training included confinement in their container and experience withstanding the restraint cloth. The animals trained for about two months; this limit was set by the risk of electrode  polarization.  [17] [   further explanation needed]\n  The launch crew began preparing at the launch site on 8 \u00a0October 1963. On 11 \u00a0October, the heading beacon was tested by placing it in a helicopter and tracking it with ground stations. On the 12th, the  telemetry in the  nose cone was unsuccessfully tested, followed by a successful test the next day. There were issues testing the homing beacon on the 14th and 15th, but all of the electronics functioned to a satisfactory level on 16 October.  [18]\n On 17 \u00a0October, six feline finalists were selected as candidates for the flight, and a  tuxedo cat with the designation C \u00a0341 was chosen for the flight on launch day, along with a backup. Weighing in at 2.5 kilograms (5.5\u00a0lb), C \u00a0341 was selected as the best of the six finalists due to her calm demeanor and appropriate weight.  [14]  [18] Electrodes were attached to her forward left and right rear leg to monitor cardiac activity. Nine electrodes had previously been implanted on her skull: two in the front sinus, one in the somatic area, two in the ventral hippocampal, two in the reticular area, and two in the association cortex. Two electrodes were glued to a foreleg so that electrical impulses could be used to stimulate them during the flight. Two  microphones, one on her chest and one on the nose cone of the rocket, monitored her breathing.  [17]The launch vehicle used was the V\u00e9ronique AGI \u00a047  sounding rocket, made in  Vernon,  Haute-Normandie.  [19]  [20] The V\u00e9ronique rocket came from the German World War II  Aggregate rocket family,  [21] developed for  International Geophysical Year ( French:  Ann\u00e9e g\u00e9ophysique internationale) in 1957 for biological research.  [11]\n On 18 \u00a0October 1963 at 8:09 \u00a0am, C \u00a0341 was launched into space from the  Centre interarm\u00e9es d&#39;essais d&#39;engins sp\u00e9ciaux site in  Algeria.  [22]  [23] The mission was a sub-orbital flight and lasted 13\u00a0minutes. The rocket engine burned for 42 \u00a0seconds on ascent and C \u00a0341 experienced 9.5\u00a0 g of acceleration.  [23] The nose cone separated from the rocket before reaching a height of 152 kilometres (94\u00a0mi) and the cat was subjected to five\u00a0minutes of weightlessness.  [1]  [24] Prior to parachute deployment, spin and vibration on the nose cone caused 7\u00a0g of acceleration. The parachutes deployed 8\u00a0minutes and 55\u00a0seconds into the launch, applying 9\u00a0g. Thirteen minutes after the rocket was ignited, a helicopter arrived at the payload.  [3] C \u00a0341 was recovered safely, and the mission made her the first cat to reach space.  [25]  [26]\n  High quality data was recorded throughout the flight, other than the reticular measurements and data recorded during reentry. Electrical shocks were administered to C \u00a0341 at a higher rate than intended. She was vigilant during the ascent phase, due to being a payload in a rocket. During the  microgravity phase, her heart rate slowed and her breathing became nominal. The turbulent reentry caused her heart rate to rise, but poor data made it difficult to analyze.  [27] The flight&#39;s biological data were given to the media, who named C \u00a0341 &#34;F\u00e9lix&#34; after the  F\u00e9lix the Cat cartoon series. CERMA changed it to the feminine F\u00e9licette and adopted the name as official.  [28] F\u00e9licette was euthanized two months after the launch so that scientists could perform a necropsy to examine her brain.  [29]\n A second cat was launched into space by the French on 24 \u00a0October. An explosive bolt that would release the rocket from the launch pad failed to function, causing the rocket to launch at an extreme angle. The radio  transponder stopped working on the launch pad, which created difficulties in finding the rocket. A helicopter spotted the parachute but was unable to land, so the agency dispatched ground vehicles. They were unable to get past some barbed wire. The next day a helicopter was again dispatched and was able to land at the site. The nose cone where the payload was housed was heavily damaged and the cat had died.  [19]  [30]\n Of the remaining 12 cats that were trained, the fate of 11 is known. One cat&#39;s health was deteriorating after the electrode surgery, so the scientists had them removed. The group adopted her as their mascot and gave her the name Scoubidou, as she had a  scoubidou braid around her neck, a popular style at the time.  [31] The other nine cats were decommissioned at the end of the program.  [28]\n France continued its biological payload research, changing to monkeys. A monkey known as Martine was launched on 7 \u00a0March 1967 and Pierrette six days later. They were both successfully recovered. France concluded biological payload research at the national level with these flights, but later worked on biological payloads with the Soviet Union in the 1970s.  [28]\n  According to an article in  Space.com on 8 \u00a0November 2017, the participation of F\u00e9licette in the space race, &#34;... was certainly not voluntary, but it was a huge milestone for France, which had just established the world&#39;s third civilian space agency (after the Soviet Union and the U.S.). F\u00e9licette&#39;s mission helped bring France into the space race.&#34;  [32] F\u00e9licette&#39;s flight was much less popular than other spaceflights at the time. Burgess and Dubbs believe this is due to photos of her with electrodes implanted on her skull and the new  animal rights movement.  [33]\n Former French colonies have created stamps to commemorate F\u00e9licette&#39;s flight. The  Comoro Islands released a stamp in 1992 as one of a series of stamps featuring animals involved in spaceflight; the stamp mistakenly used the name F\u00e9lix. In 1997, postage stamps commemorating F\u00e9licette and other animals in space were issued in  Chad, again using the name F\u00e9lix. A 1999 stamp in  Niger also used the incorrect name.  [32]  [34]  [35]\n The UPS student astronomy club at  Universit\u00e9 Toulouse \u00a0III will name its future  astronomical observatory in honor of F\u00e9licette. It will be the first French observatory entirely managed by students and is due to open in 2021. The 500\u00a0mm  Dall-Kirkham telescope (3500\u00a0mm  focal length) will be housed in a motorized dome 3.90 \u00a0m in diameter.  [36]  [37]\n  While some non-human animals which traveled in space were celebrated as heroes\u2014the chimpanzee  Ham was buried at the  International Space Hall of Fame in  New Mexico, U.S.A., and the Soviet dog  Laika has a bronze monument at the  Yuri Gagarin Cosmonaut Training Center, near  Star City in Russia\u2014more than 50 years after her mission, there was no monument for F\u00e9licette. Then, in 2017 a crowdfunding campaign was started by Matthew Serge Guy to erect a bronze statue of F\u00e9licette to commemorate her contribution to science.  [32] The statue was designed by sculptor Gill Parker.  [38] The preliminary design depicted a cat on top of the Earth, and a plaque featuring the names of major donors was to be included. In April 2018, the project met its \u00a340,000 funding target.  [32]  [39]  [40]\n In April 2019, Guy announced that the statue was to be located in Eastern France at the  International Space University.  [41] The statue was unveiled on December 18, 2019, as a part of the 25th anniversary celebration of the University&#39;s Master of Space Studies program. It is 1.5-metre (5\u00a0ft) tall and depicts F\u00e9licette &#34;perched atop Earth, gazing up toward the skies she once traveled&#34;. Guy wrote in a Kickstarter update, &#34;It&#39;s crazy to think a video I put online... has resulted in this. The internet&#39;s an alright place sometimes.&#34;  [42]\n    ^   Malashenkov, Dimitri (10 October 2002).  Some Unknown Pages of the Living Organism&#39;s First Orbital Flight. 34th COSPAR Scientific Assembly, 2nd World Space Congress.  IAF Abstracts. Houston, Texas. p.\u00a0288.  Bibcode: 2002iaf..confE.288M.\n  ^    &#34;Brazil Getting Ready to Fire Cat into Space&#34;.  Spokane Daily Chronicle. Associated Press. 31 December 1958. p.\u00a032 \u2013 via Google News.\n ^   Myler, Joseph L. (1 February 1961).  &#34;Ham, Chimp Astronaut, to Help Scientists Decide Safety of Space Ride for Human Astronaut&#34;.  The Commercial-Mail. Columbia City, Indiana. UPI. p.\u00a06 \u2013 via Newspapers.com.\n ^    &#34;Operational Trouble Shortens Chimp&#39;s Ride&#34;.  The Daily Advertiser. Lafayette, Louisiana. Associated Press. 29 November 1961. p.\u00a01 \u2013 via Newspapers.com.\n ^    &#34;France to Fire Cat into Space&#34;.  Edmonton Journal. Edmonton, Alberta. Reuters. 30 September 1963. p.\u00a037 \u2013 via Newspapers.com.\n  ^    &#34;Space Cat Back Alive&#34;.  The Sydney Morning Herald. 20 October 1963. p.\u00a05 \u2013 via Google News.\n   ^    &#34;[Hommage] Une Statue en Bronze Pour F\u00e9licette, Votre Avis M. Viso?&#34; [[Tribute] A Bronze Statue for F\u00e9licette, Your Opinion Mr. Viso?].  Spacegate.cnes.fr (in French).  CNES. 14 December 2017 .\n ^   Cassely, Jean-Laurent (27 January 2017).  &#34;La France a envoy\u00e9 le premier chat dans l&#39;espace, et tout le monde l&#39;a oubli\u00e9&#34; [France has sent the first cat into space, and everyone has forgotten] (in French). Slate .\n ^     a     b    &#34;Space Cats&#34;.  The Pittsburgh Press. Pittsburgh, Pennsylvania. 8 March 1964. p.\u00a026 \u2013 via Newspapers.com.\n  ^   Petsko, Emily (26 December 2018).  &#34;A Brief History of F\u00e9licette, the First Cat in Space&#34;. Mental Floss  \u2013 via MSN.\n   ^     a     b   Gray, Tara (2 August 2004).  &#34;A Brief History of Animals in Space&#34;.  NASA .\n ^    &#34;France to Fire Cat into Space&#34;.  Pittsburgh, Pennsylvania. The Pittsburgh Press. UPI. 25 September 1963. p.\u00a029 \u2013 via Newspapers.com.\n  ^   Lesage, Nelly (17 November 2017).  &#34;F\u00e9licette, la premi\u00e8re chatte revenue de l&#39;espace, va avoir une statue \u00e0 son effigie&#34; [F\u00e9licette, the first cat returned from space, will have a statue with her effigy].  Numerama (in French) .\n ^     a     b   Belleret, Chlo\u00e9 (18 October 2018).  &#34;18 octobre 1963\u00a0: il \u00e9tait une fois un chat dans l&#39;espace&#34; [18 October 1963: Once upon a time there was a cat in space].  Le Parisien (in French) .\n ^    &#34;Exposition Sur L&#39;espace Au Palais de la D\u00e9couverte&#34; [Exhibition on Space at the Palace of Discovery].  Le Monde (in French). 17 January 1964.\n ^    &#34;France Sends Cat to Space&#34;.  The Times Record. Troy, New York. Associated Press. 18 October 1963. p.\u00a01 \u2013 via Newspapers.com.\n ^    &#34;Fugitive from Paris Alleys Survives 100-Mile Rocket Trip&#34;.  St. Louis Post-Dispatch. St. Louis, Missouri. 5 January 1964. p.\u00a021 \u2013 via Newspapers.com.\n   ^   Baheux, Romain (19 October 2017).  &#34;Et si F\u00e9licette, le premier chat dans l&#39;espace, avait bient\u00f4t sa statue?&#34; [And if F\u00e9licette, the first cat in space, soon had her statue?] (in French). Le Parisien .\n   ^     a     b     c     d   Weitering, Hanneke (8 November 2017).  &#34;First Cat in Space to Receive a Proper Memorial&#34;. Space.com.  Archived from the original on 21 April 2018 .\n ^    &#34;First cat in space F\u00e9licette to get memorial statue after successful crowdfund&#34;. collectSPACE. 17 November 2017 .\n    ^    &#34;Un observatoire sur le campus pour \u00e9tudier l&#39;univers&#34;.  La D\u00e9p\u00eache (in French). 21 June 2019.  Archived from the original on 26 June 2019 .\n ^   Lesage, Nelly (17 November 2017).  &#34;F\u00e9licette, la premi\u00e8re chatte revenue de l&#39;espace, va avoir une statue \u00e0 son effigie&#34; [F\u00e9licette, the first cat returned from space, will have a statue with her effigy] (in French). Numerama .\n ^   Parkinson, Hannah Jane (23 October 2017).  &#34;From F\u00e9licette the space cat to Dolly the sheep \u2013 which animals should be given a statue?&#34;.  The Guardian.  ISSN\u00a0 0261-3077 .\n ^   Moye, David (20 October 2017).  &#34;The First Cat In Space May Finally Get The Recognition She Deserves&#34;.  Huffington Post .\n  ^   Wu, Katherine (28 January 2020).  &#34;F\u00e9licette, the First Cat in Space, Finally Gets a Memorial&#34;. Smithsonian Magazine .\n  Burgess, Colin; Dubbs, Chris (2007).  Animals in Space: From Research Rockets to the Space Shuttle. Springer Praxis.  ISBN\u00a0  978-0-387-36053-9.  CS1 maint: ref=harv ( link)\n Dougherty, K.; Jung, P.; Serra, Jean-Jacques (October 2018).  &#34;F\u00e9licette, the only space cat&#34;. International Astronautical Congress.  CS1 maint: ref=harv ( link)\n Reuter, Claus (2000).  The V2 and the German, Russian and American Rocket Program. German Canadian Museum. p.\u00a087.  ISBN\u00a0  978-1-894643-05-4.  CS1 maint: ref=harv ( link)", "posttime": "2020-05-31 03:26:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u592a\u7a7a,cat", "title": "F\u00e9licette-\u7b2c\u4e00\u53ea\u88ab\u53d1\u5c04\u5230\u592a\u7a7a\u7684\u732b", "title_en": "F\u00e9licette \u2013 the first cat launched into space", "transed": 1, "url": "https://en.wikipedia.org/wiki/F%C3%A9licette", "via": "", "real_tags": ["\u592a\u7a7a", "cat"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004432, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "~~*~**~**~()()((_)((_))(_)(**(_)#)(_))#((_)(#(_)*#.-#(_)-#-(_)#-.#_*.&#39\uff1b#\u3002~*\uff1a#\uff1a~\uff1a\u3002#.\uff1a**|`-._.-&#39\uff1b|*\u3002\n&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b*|\\|~)|~)\\/||~||~\\|~||~~*||*||~)||~)~||~|~\\|\\\\/|**_.-|~)||~\\||~||-._.&#39\uff1b\u3002~~.&#39\uff1b`\u3002*jgs\uff1a`-._.-&#39\uff1b\uff1a`\u3002\n&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b-&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b`\u5148\u751f\u3002\n(())()(O)((O))\uff0c|\uff0c)(O)\uff0c|\uff0c|~(O)\uff0c|\uff0c|~\\(O)\uff0c|\uff0c|~\\(O)|&#39\uff1b\\\uff0c|\uff0c|~\\&#39\uff1b\\|&#39\uff1b\\@\uff0c|\uff0c@\\|@@\\~|\\|o@\\|@\\|@|&#39\uff1b\\@|&#39\uff1b\\@o|&#39\uff1b\\@|&#39\uff1b\\@|&#39\uff1b\\@|&#39\uff1b\\@\\|o@@\\|@\\|@|&#39\uff1b\\@|&#39\uff1b\\@@o@|&#39\uff1b\\@|&#39\uff1b\\@\\|@p@\\|@|&#39\uff1b\\@|&#39\uff1b\\@q@o@|&#39\uff1b\\@o@\uff1a@o@o@@\uff1a\uff1a@\uff1a\uff1a@@\uff1a\uff1a@@o@o@@\uff1a@@\uff1a\uff1a@\u3002\uff1a\uff1a@@\uff1a\uff1a@\uff1a\uff1aoo@oo@ooo@o\uff1a@\uff1a%\uff1a@@\uff1a%\uff1a@@\uff1a@\uff1a\uff1a@@\uff1a%%\uff1a\uff1a%\uff1a@\uff1a#\uff1a#\uff1a%\uff1a\uff1a.#\uff1a\uff1a%\uff1a\uff1a%\uff1a#\uff1a#\uff1a\uff1a#\uff1a#\uff1a%\uff1a\uff1a%\uff1a\uff1a#.\u3002.#\uff1a%%\uff1a%\uff1a%%\uff1a#\uff1a%%\uff1a%\uff1a%%\uff1a#.\u3002.#\uff1a%\uff1a%%\uff1a#\uff1a\uff1a#\uff1a#\uff1a%\uff1a#.\u3002.#&#39\uff1b\uff1a%\uff1a#\uff1a%\uff1a&#39\uff1b#.\u3002.#&#39\uff1b&#39\uff1b\uff1a#\uff1a&#39\uff1b&#39\uff1b#.\u3002&#39\uff1b.#&#39\uff1b&#39\uff1b&#39\uff1b\uff1a#\uff1a#\uff1a&#39\uff1b&#39\uff1b&#39\uff1b#.&#39\uff1b&#39\uff1b.##.&#39\uff1b.oooooo.o#.oooooo\u3002#ooooo#o8o#.#\u3002d8p&#39\uff1b&#39\uff1b.&#39\uff1by8 d8p&#39\uff1b#&#39\uff1by8b#&#39\uff1b888&#39\uff1b#\uff1b&#34\uff1b&#39\uff1b#.o8&#39\uff1by88bo\u3002888\u2026\u2026\u3002888.888.\u3002oooo#.o888oo.ooooooooooooooooo.\u3002&#39\uff1b&#34\uff1bY8888o\u3002888 888 888&#39\uff1b88888 D88&#39\uff1b&#39\uff1b88B&#39\uff1b&#34\uff1bY88b 888 888 888 888ooo888 oo.d8p&#39\uff1b88b d88b 888 o 888 888\u3002888 8&#34\uff1b88888P&#39\uff1bY8bood8P&#39\uff1bYbd&#39\uff1bo888oooood8 o888o&#34\uff1b888&#34\uff1b&#39\uff1bY8bod8P&#39\uff1b\n\u8fd9\u662f\u56e0\u4e3a\u4f60\u5fd8\u4e86\u9650\u5236\u8bb0\u5fc6\u7684\u65f6\u95f4\u6233\uff0c\u51e0\u4e07\u4ebf\u5e74\u7684\u4e8b\u4ef6\u592a\u591a\u4e86\uff0c\u8981\u5bfb\u627e\u4e00\u70b9\u5feb\u4e50\u662f\u5f88\u96be\u7684\u3002\u60a8\u53ef\u80fd\u8fd8\u5e94\u8be5\u786e\u4fdd\u60a8\u6709\u4e00\u4e2a\u7d22\u5f15(JOY\uff0cTIMESTAMP)\uff0c\u9664\u975e\u60a8\u5e0c\u671b\u8fdb\u884c\u957f\u65f6\u95f4\u7684\u975e\u751f\u4ea7\u6027\u8868\u641c\u7d22\u2026\u2026\u3002\n\u606d\u559c\u554a\u3002\u4e3a\u4e86\u7eaa\u5ff5\u8fd9\u4e00\u5468\u5e74\u7eaa\u5ff5\u65e5\uff0c\u6211\u7528\u621110\u5e74\u524d\u7684iPad1(\u8fd0\u884ciOS5.1.1\uff01)\u56de\u590d\u4e86\u8fd9\u5c01\u4fe1\u3002\n\u5386\u53f2\u4e0a\u7684\u8fd9\u4e00\u5929\u9875\u9762\u663e\u793a\u4e86\u4e0d\u540c\u5e74\u4efd\u7684\u540c\u4e00\u5929\u53d1\u751f\u5728\u9879\u76ee\u4e0a\u7684\u4e8b\u60c5\uff0c\u5e76\u5012\u9000\u5230\u4e86\u8fc7\u53bb\u3002\u4eca\u5929\uff0c\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b21\uff0c\u8fd9\u4e00\u9875\u5411\u6211\u4eec\u5c55\u793a\u4e8620\u5e74\u524d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n(\u6ce8\u610f\uff1a\u6211\u5c06\u4e0a\u9762\u7684\u94fe\u63a5\u5b9a\u4f4d\u52302020-05-29\uff0c\u8fd9\u6837\u5c06\u6765\u8bbf\u95ee\u6b64\u9875\u9762\u7684\u4eba\u5c31\u4f1a\u770b\u5230\u4e0e\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u76f8\u540c\u7684\u5185\u5bb9\u3002\u7701\u7565\u4eca\u5929\u7684\u67e5\u8be2\u53c2\u6570\uff0c\u4ee5\u53ca\u65f6\u67e5\u770b\u5f53\u524d\u65e5\u671f\u7684\u65f6\u95f4\u3002)(\u8bf7\u6ce8\u610f\uff1a\u6211\u5c06\u4e0a\u9762\u7684\u94fe\u63a5\u94fe\u63a5\u52302020-05-29\uff0c\u8fd9\u6837\u5c06\u6765\u8bbf\u95ee\u6b64\u9875\u9762\u7684\u4eba\u5c06\u770b\u5230\u4e0e\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u76f8\u540c\u7684\u5185\u5bb9\u3002\u7701\u7565\u4eca\u5929=#34\uff1b\u67e5\u8be2\u53c2\u6570\u5373\u53ef\u67e5\u770b\u5f53\u524d\u65e5\u671f\u7684\u65f6\u95f4\u3002)\n\u5929\u54ea\uff0c\u90a3\u53ef\u662f\u4e00\u5927\u5806\u5feb\u4e50\u7684\u627f\u8bfa\u554a\uff01\u2026\u3002\u6216\u8005\u90a3\u53ef\u80fd\u662f\u5316\u77f3\u5df2\u7ecf\u5728\u53d6\u7b11CVS\u4e86\u3002\n\u60a8\u51e0\u4e4e\u4e0d\u4f1a\u67e5\u770b\u539f\u59cb\u7b80\u5386\u4e2d\u7684\u7b7e\u5165\u6ce8\u91ca\u3002\u540e\u6765\uff0c\u6211\u6dfb\u52a0\u4e86CVSTrac\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u8ba9\u8bc4\u8bba\u53d8\u5f97\u53ef\u89c1\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u7f16\u5199\u66f4\u597d\u7684\u7b7e\u5165\u8bc4\u8bba\u3002\u4f46\u65e9\u57282000\u5e74\uff0c\u767b\u673a\u5907\u6ce8\u63d0\u793a\u53ea\u662f\u4e00\u4e2a\u70e6\u4eba\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u7528\u5fae\u7b11\u586b\u4e86\u8fdb\u53bb\u3002\n\u4f5c\u4e3a\u4f60\u4eec\u5bf9\u4e16\u754c\u7684\u5584\u610f\u793c\u7269\uff0c\u6211\u5efa\u8bae\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6309\u7167\u4f60\u4eec\u7684\u8bc4\u8bba\u7ecf\u5e38\u8bf4\u7684\u505a\uff1a\n@202020Y dy SS 20 20 20 Y@\u3002.@Y QQ 20 20d20Yb.\u3002.d2020b\u300220d20@b.20.dy@DRH@Y.d@Dan@\u3002AA YY LL 20 20&#39\uff1b20 20&#39\uff1b20 20&#39\uff1b20 2020@#34\uff1b20 20&#39\uff1b20 LL OO II 20 20 20.20 20 20&#39\uff1b@b.20 20 20.\u3002.UU TT dy&#39\uff1b2020@&#39\uff1b@dy&#39\uff1bYY dy&39\uff1b@Joe@Y&39\uff1b&#39\uff1b@40OF\uff01\uff01\u4e59\u3002\nSQLite\u7684\u8ba1\u5212\u505c\u552e\u65e5\u671f\u4e3a2050-05-29\u3002\u4f46\u8fd9\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u6210SQL92\u517c\u5bb9\u6027\u7684\u5468\u5e74\u7eaa\u5ff5\u7248\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65f6\u523b\u5417\uff1f(\u652f\u6301\u4f7f\u7528ALTER\u548cDROP\u66f4\u6539\u6a21\u5f0f\u5b9a\u4e49)", "note_en": "~ ~ * * * * * * ~ * * ~ * * ~ * * ~ ) ( ) * * ~ ) (_) ( (_) ) (_) ( * * (_) # ) (_) ) # ( (_) ( # (_) * _#.-#(_)-#-(_)#(_)-#-(_)#-.#_ * .&#39; # # # # # # # # # # # `. ~ * : # # # # # # # # : ~ :. # # # # .: * * | `-.__ __.-&#39; | * |\n &#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34; * | | ||\\ |~)|~)\\ / | | |~||~\\|~ |~ | | ~ ~ * | | * | |~)||~)~|~| ||~\\|\\ \\ / | * * _.-| |~)||~\\ | |~|| /|~\\ | |-._ .&#39; &#39;. ~ ~ .&#39; `. * jgs : `-.__ __.-&#39; : `.\n &#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;  &#34;&#34;&#34;&#34;-----------&#34;&#34;&#34;&#34;```\n ( ( ) ) ( ) (o) ) ( (o) ) ,|, ) (o) ,|, |~\\ ( (o) ,|, |~\\ ( \\ | (o) ,|, \\~| \\ | (o) |&#39;\\ ,|, |~\\ |&#39;\\ |&#39;\\@@@,|,@@@@\\ |@@@\\~| \\ | \\ | o@@@\\ |@@@\\~|@@@@|&#39;\\@@@|&#39;\\@@@o |&#39;\\ o|&#39;\\@@@@@|&#39;\\@@@|&#39;\\@@@@\\ |@@@\\ |@@@@@\\ |o o@@\\ |@@@@@\\ |@@@\\ |@@@@@@@@@@|&#39;\\@@@@@|&#39;\\@@o @@@@|&#39;\\@@@@@@@@@@@|&#39;\\@@@@@@@@@@\\ |@@@@@\\ |@@@@ p@@@@@@@@@@@@@@@@@\\ |@@@@@@@@@@|&#39;\\@@@@@@@@@@@q @@o@@@@@@@@@@@@@@@|&#39;\\@@@@@@@@@@@@@@@@@@@@@@o@@ @:@@@o@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@o@@::@ ::@@::@@o@@@@@@@@@@@@@@@@@@@@@@@@@@@@o@@:@@::@ ::@@::@@@@::oo@@@@oo@@@@@ooo@@@@@oooooooo.o # .oooooo. #### ooooo ####### o8o #### .####. d8P&#39; &#39;.&#39;Y8 d8P&#39; #&#39;Y8b ### &#39;888&#39; ####### &#39;&#34;&#39; # .o8 .&#39; Y88bo. 888 .... 888 ... 888 ..... oooo #.o888oo .ooooo. &#39;&#34;Y8888o. 888 888 888 &#39;888 888 d88&#39; &#39;88b &#39;&#34;Y88b 888 888 888 888 888 888ooo888 oo .d8P &#39;88b d88b 888 o 888 888 . 888 8&#34;&#34;88888P&#39; &#39;Y8bood8P&#39;Ybd&#39; o888ooooood8 o888o &#34;888&#34; &#39;Y8bod8P&#39;\n    That is because you forgot to constrain the timestamp of the memory, and a couple trillion years of events is a lot to search for a bit of joy. You probably should also make sure you have an index on (joy, timestamp) unless you want a long non-productive table search ...\n   Congrats. In the spirit of that anniversary, I&#39;m replying on my 10 years old iPad 1 running iOS 5.1.1!\n The  This Day In History page shows what was happening on the projecton the same day of various years going backwards in time. And today, forthe first time ever, that page is showing us what was going on 20 years ago.\n (Note: I pegged the link above to 2020-05-29, so that people who visitthis page in the future will see the same thing as we are seeing today.Omit the &#34;today=&#34; query parameter to see backwards in time for the currentday.)\n Man, that&#39;s lots of joyful commits! ... or maybe that was Fossil already making fun of CVS.\n You hardly ever look at check-in comments in raw CVS. Later on, I addedthings like  CVSTrac which made the comments visible, and so I startedwriting better check-in comments. But back in 2000, the check-in commentprompt was just an annoyance, and so I filled it in with a smiley.\n In turn for your kind gifts to the world, I propose we each do what your comments always say:\n @202020Y dY dY dY dY SS 20 20 20 Y@. .@Y QQ 20 20d20Yb. .d2020b. 20d20@b. 20 .dY @DRH@Y .d@DAN@. AA YY LL 20 20&#39; &#39;20 20&#39; &#39;20 20&#39; &#39;20 2020@&#34; 20 20&#39; &#39;20 LL OO ii 20 20 20 20. .20 20 20 20 &#39;@b. 20 20. .20 LL. .UU tt dY dY dY &#39;2020@&#39;@ dY dY dY &#39;YY dY &#39;@JOE@Y&#39; &#39;@40OF!! ee\n  Scheduled end-of-life for SQLite is 2050-05-29. But that is a long way offyet. We&#39;ll see how it goes.\n   Wouldn&#39;t that be the perfect moment for an anniversary edition completing SQL92 compatibility? (Support for alterations of schema definitions with ALTER and DROP)", "posttime": "2020-05-31 03:25:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sqlite,oo", "title": "SQLite\u6ee120\u5c81", "title_en": "SQLite Turns 20", "transed": 1, "url": "https://sqlite.org/forum/forumpost/9a7ec8edd5", "via": "", "real_tags": ["sqlite", "oo"]}, {"category": "", "categoryclass": "", "imagename": "bff2a714cd7081340512131d66996508.png", "infoid": 1004431, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u5370\u8c61\u662f\uff0c\u5f88\u96be\u5c06C\u7f16\u8bd1\u6210Z80\u5e76\u6700\u7ec8\u5f97\u5230\u4f18\u5316\u826f\u597d\u7684\u4ee3\u7801\u3002\u662f\u8fd9\u6837\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f\n\u6211\u5bf96502\u7684\u4e86\u89e3\u66f4\u591a\u3002\u4e0b\u9762\u7684\u4e00\u4e9b\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48C\u4e0d\u9002\u54086502\uff1a\nC\u4e2d\u7684\u6570\u7ec4\u7531\u6574\u6570\u7c7b\u578b\u7d22\u5f15\u30026502\u5728\u7d22\u5f15\u6570\u7ec4\u65b9\u9762\u76f8\u5f53\u5feb\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u53ea\u6709\u5728\u7d22\u5f15\u662f\u4e00\u4e2a\u5b57\u8282\u5bbd\u7684\u60c5\u51b5\u4e0b\u3002\u56e0\u6b64\uff0c\u50cfstrcmp\u6216strlen\u8fd9\u6837\u7684\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u6267\u884c16\u4f4d\u52a0\u6cd5\u3002\n\u5806\u6808\u662f\u4f20\u9012\u51fd\u6570\u53c2\u6570\u7684\u7406\u60f3\u6570\u636e\u7ed3\u6784\u3002\u5806\u6808\u9650\u5236\u4e3a256\u5b57\u8282\uff0c\u4e0ePDP-11\u76f8\u6bd4\uff0c6502\u7684\u5806\u6808\u5bfb\u5740\u6a21\u5f0f\u76f8\u5f53\u6709\u9650\uff0c\u56e0\u6b64CC65\u4f7f\u7528\u4ee5\u8f6f\u4ef6\u5b9e\u73b0\u7684\u7b2c\u4e8c\u5806\u6808\u6765\u4f20\u9012\u53c2\u6570IIRC\u3002\n\u636e\u6211\u5bf9Z80\u7684\u7406\u89e3\uff0c\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u5e76\u4e0d\u9002\u7528\u3002Z80\u6709\u8fd9\u4e9b\u7d22\u5f15\u5bc4\u5b58\u5668\u548c\u66f4\u5927\u7684\u5806\u6808\u3002\u90a3\u4e48C\u4e0d\u9002\u5408\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u5462\uff1f\n\u6570\u7ec4\u7d22\u5f15\u6548\u7387\u5f88\u4f4e\uff0c\u56e0\u4e3a\u6ca1\u6709\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u504f\u79fb\u91cf\u7684\u5408\u7406\u57fa\u5740+\u504f\u79fb\u91cf\u5bfb\u5740\u6a21\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u9700\u8981\u751f\u6210\u4ee3\u7801\u6765\u8fdb\u884c\u5730\u5740\u8ba1\u7b97\u3002\n\u540c\u6837\uff0c\u5728\u5806\u6808\u4e0a\u4fdd\u5b58\u548c\u6062\u590d\u51fd\u6570\u53c2\u6570\u4e5f\u5f88\u9ebb\u70e6\uff0c\u56e0\u4e3a\u6ca1\u6709\u5806\u6808\u6307\u9488+\u504f\u79fb\u91cf\u5bfb\u5740\u6a21\u5f0f\u3002\u975e\u53f6\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u4e5f\u662f\u5982\u6b64\u3002\n\u7f3a\u4e4f\u771f\u6b63\u7684\u901a\u7528\u5bc4\u5b58\u5668\u3002\u5927\u591a\u6570\u5bc4\u5b58\u5668\u90fd\u6709\u7279\u5b9a\u7684\u7528\u9014\uff0c\u8fd9\u4f7f\u5f97\u5bc4\u5b58\u5668\u5206\u914d\u53d8\u5f97\u590d\u6742\u3002\nZ80\u7684\u5927\u95ee\u9898\u662f\u6ca1\u6709\u7d22\u5f15\u5bc4\u5b58\u5668\u3002\u60a8\u5fc5\u987b\u5148\u8ba1\u7b97\u5730\u5740\uff0c\u7136\u540e\u6267\u884cxchg\u3002\u4efb\u4f55\u4e0e\u6307\u9488\u3001\u53d6\u6d88\u5f15\u7528\u6216\u6570\u7ec4\u6709\u5173\u7684\u64cd\u4f5c\u90fd\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002-\u5496\u5561\u676f\u3002\n\u60a8\u7684\u8bed\u53e5(C\u4e2d\u7684\u6570\u7ec4)\u6309\u5bbd\u5ea6\u4e0e\u6307\u9488\u76f8\u540c\u7684\u7c7b\u578b\u8fdb\u884c\u7d22\u5f15\u3002\u662f\u9519\u8bef\u7684\u3002\u5b83\u662f\u5927\u4e8e\u96f6\u7684\u6574\u6570\u5e38\u91cf\uff0c\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u4f55\u6574\u6570\u7c7b\u578b-\u5305\u62ec\u5b57\u8282\u3002-Gettofro\u3002\nA\u5806\u6808\u662f\u4f20\u9012\u51fd\u6570\u53c2\u6570\u7684\u7406\u60f3\u6570\u636e\u7ed3\u6784\uff0c\u8bed\u53e5\u5177\u6709\u8bef\u5bfc\u6027-\u5806\u6808\u662f\u4f20\u9012\u51fd\u6570\u53c2\u6570\u7684\u7406\u60f3\u6570\u636e\u7ed3\u6784\uff0c\u662f\u7684\u3002\u4f46\u662fC\u5e76\u4e0d\u8981\u6c42\u5b83\u7684\u5806\u6808\u4e0eCPU\u5806\u6808\u76f8\u540c\u3002\u5de7\u5408\u7684\u662f\uff0c\u5927\u591a\u6570\u5e73\u53f0\u9009\u62e9\u5b83\uff0c\u56e0\u4e3a\u5b83\u5f88\u65b9\u4fbf\u3002\u4f60\u79f0\u4e4b\u4e3a\u8f6f\u4ef6\u5806\u6808(\u4e0d\u7ba1\u5b83\u662f\u4ec0\u4e48)--\u5982\u679c\u4f60\u8ba4\u4e3a\u8f6f\u4ef6\u5806\u6808\u662f\u4f60\u5fc5\u987b\u5728\u8f6f\u4ef6\u4e2d\u63a8\u9001\u7684\u4e1c\u897f\uff0c\u90a3\u4e48CPU\u5806\u6808\u4e5f\u662f\u4e00\u6837\u7684\u3002-Gettofro\u3002\nCppCon 2016\uff1aJason Turner\u201c\u5fae\u578b\u8ba1\u7b97\u673a\u7684\u4e30\u5bcc\u4ee3\u7801\uff1a\u7528C++17\u7f16\u5199\u7684\u7b80\u5355\u51c6\u5c0664\u6e38\u620f\u201d\u6f14\u8bb2\u5728\u8fd9\u91cc\u53ef\u80fd\u4f1a\u5f88\u6709\u8da3\u3002-\u9a6c\u5229\u5965\u91cc\u3002\n\u8fd8\u5fc5\u987b\u6ce8\u610f\u7684\u662f\uff0c\u60a8\u4e0d\u80fd\u5c06\u73b0\u4ee3\u7f16\u8bd1\u5668\u4e0e\u8f83\u65e7\u7684\u7f16\u8bd1\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u8f83\u65e7\u7684\u7f16\u8bd1\u5668\u88ab\u8bbe\u8ba1\u4e3a\u5728Z80\u4e0a\u8fd0\u884c\uff0c\u6ca1\u6709\u5185\u5b58\uff0cCPU\u505c\u6ede\u4e0d\u524d\uff0c\u751a\u81f3\u66f4\u7cdf\u7684\u662f\u8f6f\u76d8\u9a71\u52a8\u5668\u3002\u8fd9\u5c31\u662f\u4ed6\u4eec\u6240\u80fd\u505a\u7684\u5c31\u662f\u4ea7\u751f\u7cdf\u7cd5\u7684\u4ee3\u7801\uff0c\u66f4\u4e0d\u7528\u8bf4\u597d\u7684\u4ee3\u7801\u4e86\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u73b0\u4ee3\u7f16\u8bd1\u5668\u6709\u65e0\u9650\u7684RAM\u3001\u65e0\u9650\u7684CPU\u548c\u5373\u65f6\u6301\u4e45\u5b58\u50a8\u3002\u6211\u5728\u96c5\u8fbe\u5229800\u4e0a\u4f7f\u7528\u4e86C\u7f16\u8bd1\u5668--\u6709\u4e00\u6b21\u3002\u591a\u4e48\u60b2\u60e8\u7684\u7ecf\u5386\u554a\u3002-\u7ea6\u7ff0\u00b7\u5a01\u5c14\u00b7\u54c8\u4e1c(Will Hartung)\u3002\n\u5982\u679c\u60a8\u5c1d\u8bd5\u5c06C\u8bed\u8a00\u8f6c\u6362\u4e3aZ80\uff0c\u60a8\u4f1a\u53d1\u73b0Z80\u7d22\u5f15\u5bc4\u5b58\u5668\u548c\u5806\u6808\u7684\u884c\u4e3a\u4e0e\u60a8\u9884\u671f\u7684\u4e0d\u592a\u4e00\u6837\u3002\u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5148\u4ece\u3002\n\u60a8\u7684\u7f16\u8bd1\u5668\u51e0\u4e4e\u9700\u8981\u5bf9i\u4f7f\u752816\u4f4d\u503c\u3002\u56e0\u6b64\uff0c\u60a8\u5728\u67d0\u4e2a\u5730\u65b9\u6709&amp\uff1bc\uff0c\u751a\u81f3\u53ef\u80fd\u5728\u60a8\u7684\u7d22\u5f15\u5bc4\u5b58\u5668\u4e2d\uff01\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4f7f\u7528ix=&amp\uff1bc\u3002\u4f46\u662f\uff0c\u7d22\u5f15\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\u53ea\u5141\u8bb8\u5e38\u91cf\u504f\u79fb\u91cf\uff0c\u8fd9\u4e5f\u662f\u5355\u6709\u7b26\u53f7\u5b57\u8282\u3002\u56e0\u6b64\uff0c\u60a8\u6ca1\u6709\u547d\u4ee4\u53ef\u4ee5\u8bfb\u53d6(\u5bc4\u5b58\u5668\u4e2d\u7684IX+16\u4f4d\u503c)\u3002\u56e0\u6b64\uff0c\u60a8\u6700\u7ec8\u4f1a\u4f7f\u7528\u5982\u4e0b\u5185\u5bb9\u3002\nld ix\uff0cc_addr\uff1b\u6570\u7ec4\u5730\u5740ld de\uff0c(I_Addr)\uff1b\u8ba1\u6570\u5668\u503cadd ix\uff0cdeld a\uff0c0ld(ix+0)\uff0ca\uff1b14+20+15+7+19=75T(\u6bcf\u5b57\u8282)\n\u5927\u591a\u6570\u7f16\u8bd1\u5668\u90fd\u4f1a\u8f93\u51fa\u4e0e\u6211\u7f16\u5199\u7684\u4ee3\u7801\u975e\u5e38\u63a5\u8fd1\u7684\u4ee3\u7801\u3002\u5b9e\u9645\u4e0a\uff0c\u6709\u7ecf\u9a8c\u7684Z80\u7a0b\u5e8f\u5458\u77e5\u9053-IX\u548cIY\u5bf9\u4e8e\u5927\u591a\u6570\u4f7f\u7528\u5185\u5b58\u7684\u64cd\u4f5c\u662f\u6ca1\u6709\u5e0c\u671b\u7684-\u5b83\u4eec\u592a\u6162\u4e86\uff0c\u592a\u7b28\u62d9\u4e86\u3002\u4e00\u4e2a\u4f18\u79c0\u7684\u7f16\u8bd1\u5668\u7f16\u5199\u8005\u53ef\u80fd\u4f1a\u8ba9\u4ed6/\u5979\u7684\u7f16\u8bd1\u5668\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\u3002\nld hl\uff0cc_addr\uff1b\u6570\u7ec4\u5730\u5740ld de\uff0c(I_Addr)\uff1b\u8ba1\u6570\u5668\u503cadd hl\uff0cdeld a\uff0c0ld(Hl)\uff0ca\uff1b10+20+11+7+7=55T(\u6bcf\u5b57\u8282)\u3002\n\u4e0d\u51fa\u4e00\u8eab\u6c57\u5c31\u80fd\u5feb25%\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6211\u5c06i\u53d8\u91cf\u8bbe\u4e3a\u9759\u6001\u4ee5\u4f7f\u6211\u548c\u7f16\u8bd1\u5668\u7684\u5de5\u4f5c\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4f46\u8fd9\u8fd8\u8fdc\u4e0d\u662f\u5f88\u597d\u7684Z80\u4ee3\u7801\uff01\n\u5b9e\u9645\u7684\u5b8c\u6574\u5faa\u73af\u5c06\u91c7\u7528(7+6+13)*10-5=255/10~25.5t\u72b6\u6001/\u5b57\u8282\u3002\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u4f18\u5316\u4ee3\u7801\uff0c\u8fd9\u662f\u4e00\u79cd\u7f16\u5199\u4f18\u5316\u65e0\u5173\u7d27\u8981\u7684\u4ee3\u7801\u3002\u53ef\u4ee5\u8fdb\u884c\u90e8\u5206\u5c55\u5f00\uff0c\u53ef\u4ee5\u786e\u4fdd\u6570\u7ec4c\u4e0d\u4f1a\u8de8\u8d8a256\u4e2a\u5b57\u8282\u7684\u8fb9\u754c\uff0c\u5e76\u5c06inchl\u66ff\u6362\u4e3aincl\u3002\u6700\u5feb\u7684\u586b\u5145\u5b9e\u9645\u4e0a\u662f\u4f7f\u7528\u5806\u6808\u5b8c\u6210\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cZ80\u4e0d\u9002\u5408C\u8303\u4f8b\u3002\n\u5f53\u7136\uff0c\u53ef\u4ee5\u7528C\u7f16\u5199\u7c7b\u4f3c\u7684\u5faa\u73af(\u4f7f\u7528\u6307\u9488\u800c\u4e0d\u662f\u6570\u7ec4\uff0c\u4f7f\u7528\u5012\u8ba1\u65f6\u5faa\u73af\u800c\u4e0d\u662f\u5411\u4e0a\u8ba1\u6570)\uff0c\u8fd9\u4f1a\u589e\u52a0\u5c06\u5176\u8f6c\u6362\u6210\u50cf\u6837\u7684Z80\u4ee3\u7801\u7684\u673a\u4f1a\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u60a8\u7f16\u5199\u5e38\u89c4\u7684C\u4ee3\u7801\uff1b\u8fd9\u662f\u60a8\u5728\u8bd5\u56fe\u5c06C\u8f6c\u6362\u6210Z80\u65f6\u5c1d\u8bd5\u89e3\u51b3C\u7684\u9650\u5236\u3002\n\u5f53Raffzahn\u8bf4\u4eba\u4eec\u4e0d\u5fc5\u4e3a\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u5806\u6808\u65f6\uff0c\u4ed6\u662f\u6b63\u786e\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u9012\u5f52\u51fd\u6570\uff0c\u5c31\u5fc5\u987b\u6709\u67d0\u79cd\u7c7b\u578b\u7684\u5806\u6808\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u8bd5\u7740\u7528PC\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u5806\u6808\u3002\u5982\u4f55\u5b9e\u73b0\u5bf9\u5982\u4e0b\u5185\u5bb9\u7684\u8c03\u7528\u3002\n\u5047\u8bbe\u5373\u4f7fx\u5f53\u524d\u503c\u4e5f\u5728\u60a8\u7684\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u6bd4\u5982HL\u3002\u6240\u4ee5\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u50cf\u8fd9\u6837\u7684\u4e1c\u897f\u3002\n\u6211\u4eec\u5982\u4f55\u5b9e\u9645\u6062\u590dx\u7684\u5730\u5740(\u548c\u503c)\uff1f\u5b83\u5b58\u50a8\u5728SP+2\u4e2d\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u5c0f\u5fc3\u4f7f\u7528SP\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u8fd4\u56de\u5230\u8c03\u7528\u7a0b\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\nAddr_Inc\uff1ald hl\uff0c2 add hl\uff0csp ld e\uff0c(Hl)\u589e\u91cfhl ld d\uff0c(Hl)\uff1b10+11+7+6+7=41T\u3002\n\u56e0\u6b64\uff0c\u5f53\u4eba\u4eec\u62b1\u6028Z80\u7684C\u7f16\u8bd1\u5668\u65f6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4e0d\u53ef\u80fd\u505a\u5230\u3002\u8fd9\u5b8c\u5168\u662f\u53e6\u4e00\u56de\u4e8b\u3002\u5728\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u4e2d\uff0c\u90fd\u6709\u6a21\u5f0f\uff0c\u6709\u597d\u7684\uff0c\u4e5f\u6709\u4e0d\u597d\u7684\u3002\u6211\u7684\u89c2\u70b9\u662f\uff0c\u4eceZ80\u7f16\u7801\u7684\u89d2\u5ea6\u6765\u770b\uff0cC\u6240\u505a\u7684\u5f88\u591a\u4e8b\u60c5\u90fd\u662f\u4e0d\u597d\u7684\u6a21\u5f0f\u3002\u5728Z80\u4e0a\uff0c\u4eba\u4eec\u6839\u672c\u505a\u4e0d\u5230C\u8bed\u8a00\u8981\u6c42\u60a8\u975e\u5e38\u6d41\u5229\u7684\u4e8b\u60c5\u3002\n\u5173\u4e8eZ80\u7684IDK\uff0c\u4f46\u662f\u5982\u679c\u7f16\u8bd1\u5668\u5bf9\u8fd9\u6837\u7684i\u503c\u4f7f\u752816\u4f4d\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5783\u573e\u7f16\u8bd1\u5668\u3002\u5927\u591a\u6570\u7528\u4e8e8\u4f4d\u5fae\u63a7\u5236\u5668\u7684\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u77e5\u9053\uff0c\u5f53\u60a8\u4e0d\u4f7f\u7528I##**\u5730\u5740\u7684phuclv\u65f6\uff0c\u5e94\u8be5\u9488\u5bf9\u8fd9\u4e9b\u60c5\u51b5\u8fdb\u884c\u4f18\u5316\u3002\n\u60a8\u7684\u7f16\u8bd1\u5668\u5f88\u5927\u7a0b\u5ea6\u4e0a\u9700\u8981\u4f7f\u752816\u4f4d\u503c\u4f5c\u4e3ai\u3002\u8fd9\u6839\u672c\u4e0d\u662f\u771f\u7684\u3002\u4efb\u4f55\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u8db3\u591f\u806a\u660e\uff0c\u77e5\u9053\u60a8\u793a\u4f8b\u4e2di\u7684\u503c\u90fd\u57280..9\u8303\u56f4\u5185\uff0c\u5e76\u4e14\u4efb\u4f55\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u8db3\u591f\u806a\u660e\uff0c\u53ef\u4ee5\u5206\u914d\u6700\u9002\u5408\u4fdd\u5b58\u8fd9\u4e9b\u503c\u7684\u4efb\u4f55\u5bc4\u5b58\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7528\u4f5c\u6570\u7ec4\u7d22\u5f15\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u662f\u5426\u5b58\u5728\u5177\u6709\u5982\u6b64\u667a\u80fd\u7684\u7f16\u8bd1\u5668\uff0c\u5e76\u4e14\u80fd\u591f\u4ee5Z80\u4e3a\u76ee\u6807\u3002-Solomon Slow\u3002\n\u6211\u89c9\u5f97\u5947\u602a\u7684\u662f\uff0c\u6211\u6240\u77e5\u9053\u7684Z80\u62166502\u7684C\u7f16\u8bd1\u5668\u90fd\u6ca1\u6709\u50cfPIC\u548c8051\u7f16\u8bd1\u5668\u90a3\u6837\u5904\u7406\u5c40\u90e8\u53d8\u91cf\u7684\u9009\u9879--\u901a\u8fc7\u9759\u6001\u5206\u914d\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7684\u53d8\u91cf\u83b7\u5f97\u4e0d\u540c\u7684\u5730\u5740\uff0c\u4f46\u662f\u751f\u547d\u5468\u671f\u4e0d\u91cd\u53e0\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u8986\u76d6\u3002\u903b\u8f91\u5e76\u4e0d\u96be\uff0c\u5b83\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u9ad8\u4e3a\u4e0d\u9700\u8981\u652f\u6301\u9012\u5f52\u6216\u91cd\u5165\u7684\u51fd\u6570\u751f\u6210\u4ee3\u7801\u7684\u6548\u7387\u3002-\u7f8e\u56fd\u8d85\u7ea7\u732b\u3002\n\u7f16\u8bd1\u5668\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6570\u7ec4\u7d22\u5f15\u8f6c\u6362\u4e3a\u6307\u9488\u589e\u91cf\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u5e76\u51cf\u5c11x86\u4e0a\u7684\u6307\u4ee4\u5927\u5c0f(\u7d22\u5f15\u9700\u8981\u989d\u5916\u7684\u5b57\u8282)\u3002\u8fd8\u6709\u5176\u4ed6\u4f18\u52bf\uff0c\u6bd4\u5982\u4e0d\u4f1a\u7834\u574f\u6c99\u6865\u5bb6\u65cf\u7684\u5fae\u878d\u5408\uff0c\u6216\u8005\u53ef\u4ee5\u5c06\u54c8\u65af\u97e6\u5c14\u7684port7agu\u7528\u4e8e\u5546\u5e97\u3002\u5bf9\u4e8eTrip-Count\u662f\u7f16\u8bd1\u65f6\u95f4\u5e38\u91cf\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u5b8c\u5168\u6709\u7406\u7531\u671f\u671b\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e2a\u50cf\u60a8\u7684Inc hl/djnz\u5faa\u73af\u4e00\u6837\u7684\u5faa\u73af\u3002\u5426\u5219\u5c31\u6709\u70b9\u5408\u7406\u4e86\u3002-\u5f7c\u5f97\u00b7\u79d1\u5fb7\u65af(Peter Cordes)\u3002\n@phuclv\u5927\u591a\u65708\u4f4d\u5fae\u63a7\u5236\u5668\u7684\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u77e5\u9053\uff0c\u5f53\u60a8\u4e0d\u4f7f\u7528I\u7684\u5730\u5740\u65f6\uff0c\u5e94\u8be5\u9488\u5bf9\u8fd9\u4e9b\u60c5\u51b5\u8fdb\u884c\u4f18\u5316--\u73b0\u4ee38\u4f4d\u5fae\u63a7\u5236\u5668\u901a\u5e38\u670932\u5230128\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u3002Z80\u67096\u4e2a(ISH)\uff0c\u5176\u4e2d\u76842\u4e2a\u57fa\u672c\u4e0a\u5fc5\u987b\u4fdd\u7559\u7528\u4f5c\u51e0\u4e4e\u6240\u6709\u91cd\u8981\u4ee3\u7801\u7684\u6307\u9488\u3002\u8fd9\u4e3a\u90a3\u4e9b\u67b6\u6784\u7684\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u4f18\u5316\u7a7a\u95f4\u3002--\u7ea6\u7ff0\u00b7\u6731\u5c14\u65af(Jules)\u3002\nCPU(\u975e\uff1f)\u9002\u5b9c\u6027\u5bf9C\u7a0b\u5e8f\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u7f3a\u4e4f\u5728\u4e0d\u4f7f\u7528ALU\u7684\u60c5\u51b5\u4e0b\u5c06\u591a\u4e2a\u5bc4\u5b58\u5668\u7ec4\u6210\u4e00\u4e2a\u5730\u5740\u7684\u80fd\u529b\u3002\n\u5927\u591a\u6570\u73b0\u4ee3CPU\u53ef\u4ee5\u4f7f\u7528\u57fa\u5740+\u7d22\u5f15+\u504f\u79fb\u5bc4\u5b58\u5668\u5bfb\u5740\u6a21\u5f0f\u6765\u5bfb\u5740\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u6570\u7ec4\u548c\u7ed3\u6784-Z80\u9700\u8981\u715e\u8d39\u82e6\u5fc3\u5730\u901a\u8fc74\u4f4dALU\u5c06\u504f\u79fb\u91cf+\u7d22\u5f15\u6dfb\u52a0\u5230\u57fa\u5740\u5bc4\u5b58\u5668(\u5982HL)-\u5927\u591a\u6570\u73b0\u4ee3CPU\u5bf9\u5404\u79cd\u5bfb\u5740\u6a21\u5f0f\u4f7f\u7528\u5355\u72ec\u7684\u5730\u5740\u8ba1\u7b97\u5b9e\u4f8b\u3002\n\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u7f3a\u4e4f\u771f\u6b63\u7684\u591a\u7528\u9014\u5bc4\u5b58\u5668-\u4f60\u4e0d\u80fd\u7b80\u5355\u5730\u5bf9Z80\u4e2d\u7684\u6bcf\u4e2a\u5bc4\u5b58\u5668\u505a\u6240\u6709\u4e8b\u60c5-\u5b83\u7684\u7eaf\u5bc4\u5b58\u5668\u6570\u91cf\u6709\u70b9\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u4f7f\u7528\u5907\u7528\u5bc4\u5b58\u5668\u96c6\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u53ef\u80fd\u592a\u590d\u6742\u4e86\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u53ef\u80fd\u9009\u62e9\u7684\u5bc4\u5b58\u5668\u662f\u6709\u9650\u7684\u3002\u8fd9\u5bf9\u4e8e\u5bc4\u5b58\u5668\u66f4\u5c11\u76846502\u66f4\u6709\u6548\u3002\n\u8fd8\u6709\u4e00\u4e2a\u7f3a\u70b9\u662f\uff1a\u4f60\u4e0d\u80fd\u4e3aZ80-clang\u6216GCC\u627e\u5230\u4e00\u4e2a\u50cf\u6837\u7684\u73b0\u4ee3C\u7f16\u8bd1\u5668\uff0c\u56e0\u4e3a\u4ed6\u4eec\u79ef\u6781\u7684\u4f18\u5316\u5668\u4e0d\u4f1a\u4e3a\u8fd9\u4e9b\u65e7\u7684CPU\u8d39\u5fc3\uff0c\u800c\u4e14\u4e1a\u4f59\u7231\u597d\u8005\u7684\u4ea7\u54c1\u5c31\u662f\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u3002\u5373\u4f7f\u4f60\u80fd\u505a\u5230\uff0cGCC\u548c\u514b\u6717\u4e5f\u96c6\u4e2d\u7cbe\u529b\u4f18\u5316\u4ee3\u7801\u7684\u5c40\u90e8\u6027\uff0c\u6ca1\u6709\u7f13\u5b58\u7684\u4e2d\u592e\u5904\u7406\u5668\u751a\u81f3\u4e0d\u80fd\u4ece\u4e2d\u53d7\u76ca\uff0c\u800c\u662f\u771f\u6b63\u63d0\u9ad8\u4e86\u73b0\u4ee3\u4e2d\u592e\u5904\u7406\u5668\u7684\u6027\u80fd\u3002\n\u6211\u4e2a\u4eba\u8ba4\u4e3a(\u5373\u4f7f\u4e0d\u662f\u6700\u4f18\u7684)\u7f16\u8bd1\u5668\u5bf9\u65e7CPU\u4e5f\u4e0d\u4f1a\u6beb\u65e0\u7528\u5904--\u7a0b\u5e8f\u4e2d\u603b\u662f\u6709\u5f88\u591a\u4e1c\u897f\u505a\u8d77\u6765\u4e00\u70b9\u90fd\u4e0d\u597d\u73a9\uff0c\u7528\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u4e5f\u5f88\u4e4f\u5473(\u6bd5\u7adf\uff0c\u6211\u4eec\u4ecd\u7136\u8fd9\u6837\u505a\u7684\u552f\u4e00\u539f\u56e0\u662f\u597d\u73a9\uff0c\u4e0d\u662f\u5417\uff1f)-\u6240\u4ee5\u6211\u503e\u5411\u4e8e\u7528C\u8bed\u8a00\u7f16\u5199\u7a0b\u5e8f\u4e2d\u67af\u71e5\u7684\u3001\u4e0e\u65f6\u95f4\u65e0\u5173\u7684\u90e8\u5206\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u5c31\u662f\u6709\u8da3\u7684\u90e8\u5206\u3002\u6211\u559c\u6b22\u7528C\u8bed\u8a00\u7f16\u5199\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u6709\u8da3\u7684\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7a0b\u5e8f\u7684\u53e6\u4e00\u4e2a\u90e8\u5206\uff0c\u90a3\u5c31\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7a0b\u5e8f\u7684\u53e6\u4e00\u90e8\u5206\uff0c\u90a3\u5c31\u662f\u67af\u71e5\u4e4f\u5473\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u7528\u6c47\u7f16\u5668\u7f16\u5199\u7a0b\u5e8f\u7684\u53e6\u4e00\u4e2a\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u6709\u8da3\u7684\u90e8\u5206\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4ecd\u7136\u4f1a\u8fd9\u6837\u505a\u7684\u552f\u4e00\u539f\u56e0\uff0c\u4e0d\u662f\u5417\uff1f\u4e24\u4e2a\u4e16\u754c\u90fd\u5f88\u5b8c\u7f8e\u3002\n\u6211\u5728\u6211\u5199\u7684\u4e00\u6b3eZ80(Spectrum And Other)\u6e38\u620f\u4e2d\u5c31\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u6e38\u620f\u7684\u6838\u5fc3\u662f\u6c47\u7f16\u8bed\u8a00\uff0c\u50cf\u6392\u884c\u699c\u548c\u5e2e\u52a9\u903b\u8f91\u8fd9\u6837\u7684\u4e1c\u897f\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u3002\n@L\u01b0UV\u0129nhPh\u00fac\u4f60\u8ba4\u4e3aLDRLS x\uff0c[R1\uff0cR0\uff0cLSL#2]\u7136\u540e(ARM)\u662f\u4ec0\u4e48\uff1f\nARM\u5e76\u4e0d\u662f\u771f\u6b63\u7684RISC ISA\u3002\u5b83\u6709\u70b9RISCy\uff0c\u6216\u8005\u5171\u4eab\u5b83\u4eec\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u6bd4\u5982\u56fa\u5b9a\u5bbd\u5ea6\u7684\u6307\u4ee4(Thumb2.\u9664\u5916)\uff0c\u4f46\u662fISA\u7684\u6307\u4ee4\u57281\u523016\u4e4b\u95f4\u8fdb\u884c\u52a0\u8f7d\u6216\u5b58\u50a8\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6307\u4ee4\u4e2d\u4f4d\u5b57\u6bb5\u4e2d\u7684\u4f4d\uff0c\u5b83\u4e0d\u662fRISC\u3002(\u6211\u8bf4\u7684\u662fARM\u7684\u63a8\u9001{R4\uff0cR5\uff0cR6\uff0c.\uff0cLR}\u53c8\u79f0\u673a\u9876\u76d2\u548c\u76f8\u5e94\u7684POP\u6307\u4ee4\u3002\u52a0\u8f7d/\u5b58\u50a8\u591a\u4e2a\u6307\u4ee4\u662f\u5fae\u7f16\u7801\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u592a\u590d\u6742\u4e86\uff0c\u5e76\u4e14\u6267\u884c\u7684\u5de5\u4f5c\u91cf\u662f\u53ef\u53d8\u7684\u3002-\u5f7c\u5f97\u00b7\u79d1\u5fb7\u65af(Peter Cordes)\u3002\n@PeterCordes Prety\u5f53\u6559\u6761(RISC)\u4e0e\u73b0\u5b9e\u53d1\u751f\u51b2\u7a81\u65f6\uff0c@PeterCordes Prety\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50-\u73b0\u5b9e\u8d62\u4e86\u2026\u3002\u9664\u4e86OFC\uff0c\u548c\u6559\u6761\u7267\u5e08\u5728\u4e00\u8d77\u3002-\u62c9\u592b\u624e\u6069(Raffzahn)\n\u901a\u5e38\uff0c\u4eba\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u7f16\u8bd1\u5668\uff0c\u6216\u8005\u4e0d\u5b8c\u5168\u7406\u89e3\u4ed6\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u7684\u540e\u679c\u3002\u5728z80c\u7f16\u8bd1\u5668\u4e2d\u6b63\u5728\u8fdb\u884c\u4f18\u5316\uff0c\u4f46\u662f\u5b83\u4e0d\u50cfGCC\u90a3\u6837\u5b8c\u6574\u3002\u6211\u7ecf\u5e38\u770b\u5230\u4eba\u4eec\u5728\u7f16\u8bd1\u65f6\u6ca1\u6709\u6253\u5f00\u4f18\u5316\u3002\n\u5728Introspec\u7684\u5e16\u5b50\u4e2d\u6709\u4e00\u4e2a\u4f8b\u5b50\uff0c\u7531\u4e8e\u540d\u8a89\u70b9\u7684\u539f\u56e0\uff0c\u6211\u4e0d\u5141\u8bb8\u5bf9\u6b64\u53d1\u8868\u8bc4\u8bba\uff1a\n\u8fd9\u6bb5\u4ee3\u7801\u6709\u5f88\u591a\u4ed6\u6ca1\u6709\u8003\u8651\u5230\u7684\u95ee\u9898\u3002\u901a\u8fc7\u5c06i\u58f0\u660e\u4e3achar\uff0c\u4ed6\u53ef\u80fd\u4f1a\u8ba9\u5b83\u7b7e\u540d(\u8fd9\u662f\u7f16\u8bd1\u5668\u7684\u81ea\u7531\u88c1\u91cf\u6743)\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u6bd4\u8f83\u4e2d\uff0c8\u4f4d\u91cf\u5728\u6bd4\u8f83\u4e4b\u524d\u662f\u7b26\u53f7\u6269\u5c55\u7684\uff0c\u56e0\u4e3a\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9664\u975e\u60a8\u5728\u4ee3\u7801\u4e2d\u6b63\u786e\u6307\u5b9a\uff0c\u5426\u5219c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5728\u6267\u884c\u8fd9\u4e9b\u6bd4\u8f83\u4e4b\u524d\u63d0\u5347\u4e3aint\u3002\u901a\u8fc7\u4f7f\u5176\u6210\u4e3a\u5168\u5c40\u7684\uff0c\u4ed6\u786e\u4fdd\u7f16\u8bd1\u5668\u4e0d\u80fd\u5c06for\u5faa\u73af\u7d22\u5f15\u4fdd\u5b58\u5728\u5faa\u73af\u5185\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\nz88dk\u4e2d\u6709\u4e24\u4e2aC\u7f16\u8bd1\u5668\u3002\u4e00\u4e2a\u662fsccz80\uff0c\u5b83\u662fRon Cain\u4ece70\u5e74\u4ee3\u672b\u5f00\u59cb\u7684\u539f\u59cb\u7f16\u8bd1\u5668\u7684\u6700\u9ad8\u7ea7\u7248\u672c\uff1b\u5b83\u73b0\u5728\u4e3b\u8981\u662fC90\u3002\u8be5\u7f16\u8bd1\u5668\u4e0d\u662f\u4f18\u5316\u7f16\u8bd1\u5668-\u5b83\u7684\u76ee\u7684\u662f\u751f\u6210\u5c0f\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u60a8\u5c06\u770b\u5230\u8bb8\u591a\u7f16\u8bd1\u5668\u57fa\u5143\u5728\u5b50\u4f8b\u7a0b\u8c03\u7528\u4e2d\u6267\u884c\u3002\u5176\u80cc\u540e\u7684\u60f3\u6cd5\u662f\uff0cz88dk\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u5168\u7528asm\u8bed\u8a00\u7f16\u5199\u7684\u91cd\u8981c\u5e93\uff0c\u56e0\u6b64c\u7f16\u8bd1\u5668\u7684\u76ee\u7684\u662f\u751f\u6210\u7c98\u5408\u4ee3\u7801\uff0c\u800c\u6267\u884c\u65f6\u95f4\u5219\u82b1\u5728\u624b\u5199\u6c47\u7f16\u5668\u4e0a\u3002\n\u53e6\u4e00\u4e2ac\u7f16\u8bd1\u5668\u662fsdcc\u7684\u5206\u652f\uff0c\u79f0\u4e3azsdcc\u3002\u8fd9\u4e2a\u5df2\u7ecf\u6539\u8fdb\u4e86\uff0c\u5e76\u4e14\u4ea7\u751f\u4e86\u6bd4SDCC\u672c\u8eab\u66f4\u597d\u3001\u66f4\u5c0f\u7684\u4ee3\u7801\u3002SDCC\u662f\u4e00\u4e2a\u4f18\u5316\u7f16\u8bd1\u5668\uff0c\u4f46\u662f\u5b83\u503e\u5411\u4e8e\u751f\u6210\u6bd4sccz80\u66f4\u5927\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u8fc7\u5ea6\u4f7f\u7528z80\u7684\u7d22\u5f15\u5bc4\u5b58\u5668\u3002z88dk\u4e2d\u7684\u7248\u672czsdcc\u4fee\u590d\u4e86\u8bb8\u591a\u6b64\u7c7b\u95ee\u9898\uff0c\u73b0\u5728\u4f7f\u7528--opt-code-size\u5f00\u5173\u65f6\u751f\u6210\u7684\u4ee3\u7801\u5927\u5c0f\u4e0esccz80\u76f8\u5f53\u3002\n(-O3\u5f00\u5173\u7528\u4e8e\u51cf\u5c11\u4ee3\u7801\u5927\u5c0f\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u66f4\u559c\u6b22\u9ed8\u8ba4\u7684-O2)\u3002\n._main ld hl\uff0c0\uff1bconst a\uff0cl ld(_I)\uff0ca jp i_4.i_2 ld hl\uff0c_i\u8c03\u7528l_gchar Inc hl ld a\uff0cl ld(_I)\uff0ca dec hl.i_4 ld hl\uff0c_i\u8c03\u7528l_gchar ld de\uff0c10\uff1bconst ex de\uff0chl\u8c03\u7528l_lt jp nc\uff0ci_3 ld hl\uff0c_data push hl ld hl\uff0c_i\u8c03\u7528l_gchar popde add hl\uff0cde ld(Hl)\uff0c#(0%256)ld l\uff0c(Hl)ld h\uff0c0 jp i_2.i_3 ret\u3002\n\u5728\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5b50\u4f8b\u7a0b\u8c03\u7528\u7f16\u8bd1\u5668\u539f\u8bed\uff0c\u4ee5\u53ca\u7f16\u8bd1\u5668\u88ab\u8feb\u4f7f\u7528\u5185\u5b58\u6765\u4fdd\u5b58for\u5faa\u73af\u7d22\u5f15\u7684\u4e8b\u5b9e\u3002&#34\uff1bl_lt&#34\uff1b\u662f\u5e26\u7b26\u53f7\u7684\u6bd4\u8f83\u3002\n_Main\uff1ald hl\uff0c_i ld(Hl)\uff0c0x00l_main_00102\uff1ald hl\uff0c(_I)ld h\uff0c0x00 ld BC\uff0c_data add hl\uff0cBC xor a\uff0ca ld(Hl)\uff0ca ld hl\uff0c_i ld a\uff0c(Hl)inca ld(Hl)\uff0ca sub a\uff0c0x0a Jr C\uff0cl_main_00102 ret\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0czsdcc\u4e2d\u7684\u5b57\u7b26\u662f\u65e0\u7b26\u53f7\u7684\uff0c\u5e76\u4e14\u6ce8\u610f\u5230\u6bd4\u8f83\u53ef\u4ee5\u57288\u4f4d\u5185\u5b8c\u6210\u3002C\u8bed\u8a00\u89c4\u5219\u8bf4\u4e24\u7aef\u90fd\u5e94\u8be5\u5347\u7ea7\u4e3aint\uff0c\u4f46\u662f\u5982\u679c\u7f16\u8bd1\u5668\u80fd\u591f\u8ba1\u7b97\u51fa\u53ef\u4ee5\u7528\u53e6\u4e00\u79cd\u7b49\u4ef7\u7684\u65b9\u5f0f\u8fdb\u884c\u6bd4\u8f83\uff0c\u90a3\u4e48\u4e0d\u8fd9\u6837\u505a\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u5982\u679c\u60a8\u6ca1\u6709\u6307\u5b9a\u60a8\u7684\u5b57\u7b26\u662f\u65e0\u7b7e\u540d\u7684\uff0c\u6b64\u63d0\u5347\u53ef\u80fd\u4f1a\u5bfc\u81f4\u63d2\u5165\u7b26\u53f7\u6269\u5c55\u4ee3\u7801\u3002\n._main\u5341\u4e8c\u6708sp pophl ld l\uff0c#(0%256)Push hl jp i_4.i_2 ld hl\uff0c0\uff1bconst add hl\uff0csp Inc(Hl).I_4 ld hl\uff0c0\uff1bconst add hl\uff0csp ld a\uff0c(Hl)cp#(10%256)jp nc\uff0ci_3 ld\uff0c_ld data hl\uff0c2-2\uff1bconst add hl\uff0csp ld l\uff0c(Hl)ld h\uff0c0 add hl\uff0cde ld(Hl)\uff0c#(0%256%256)ld l\uff0c(Hl)ld h\uff0c0 jp i_2.i_3 Inc sp ret\u3002\n\u73b0\u5728\u6bd4\u8f83\u662f8\u4f4d\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u4f7f\u7528\u5b50\u4f8b\u7a0b\u8c03\u7528\u3002\u4f46\u662f\uff0csccz80\u4e0d\u80fd\u5c06\u7d22\u5f15i\u653e\u5165\u5bc4\u5b58\u5668-\u5b83\u6ca1\u6709\u643a\u5e26\u8db3\u591f\u7684\u4fe1\u606f\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u56e0\u6b64\u5b83\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5806\u6808\u53d8\u91cf\u3002\n_Main\uff1ald bc\uff0c_data+0 ld e\uff0c0x00l_Main_00103\uff1ald a\uff0ce sub a\uff0c0x0a ret NC ld l\uff0ce ld h\uff0c0x00 add hl\uff0cBC ld(Hl)\uff0c0x00 Inc e Jr l_Main_00103\u3002\nUNSIGNED CHAR DATA[10]\uff1bvoid main(Void){for(UNSIGNED CHAR*p=data\uff1bp\uff01=data+10\uff1b++p)*p=0\uff1b}\u3002\n_Main\uff1ald bc\uff0c_DATAL_Main_00103\uff1ald a\uff0cc sub a\uff0c+((_DATA+0x000a)&amp\uff1b0xFF)JR NZ\uff0cl_Main_00116 ld a\uff0cb sub a\uff0c+((_DATA+0x000a)/256)Jr Z\uff0cl_Main_00105l_Main_00116\uff1aXOR a\uff0ca ld(BC)\uff0ca Inc BC Jr l_Main_00103l_Main_00105\uff1arET\u3002\n\u6307\u9488\u4fdd\u5b58\u5728BC\u4e2d\uff0c\u7ed3\u675f\u6761\u4ef6\u662f16\u4f4d\u6bd4\u8f83\uff0c\u7ed3\u679c\u662f\u4e3b\u5faa\u73af\u82b1\u8d39\u7684\u65f6\u95f4\u5927\u81f4\u76f8\u540c\u3002\n\u4e00\u822c\u800c\u8a00\uff0cc\u7f16\u8bd1\u5668\u5f53\u524d\u4e0d\u80fd\u751f\u6210\u5e38\u89c1\u7684z80CISC\u6307\u4ee4ldir\u3001cpir\u3001djnz\u7b49\uff0c\u4f46\u5b83\u4eec\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u751f\u6210\uff0c\u5982\u4e0a\u6240\u8ff0\u3002\u4ed6\u4eec\u4e5f\u4e0d\u80fd\u4f7f\u7528exx\u8bbe\u7f6e\u3002\u4f46\u662f\uff0cz88dk\u9644\u5e26\u7684\u5927\u91cfc\u5e93\u786e\u5b9e\u5145\u5206\u5229\u7528\u4e86z80\u4f53\u7cfb\u7ed3\u6784\uff0c\u56e0\u6b64\u4efb\u4f55\u4f7f\u7528\u5e93\u7684\u4eba\u90fd\u5c06\u4eceASM\u7ea7\u522b\u7684\u6027\u80fd\u4e2d\u53d7\u76ca(SDCC\u81ea\u5df1\u7684\u5e93\u662f\u7528c\u7f16\u5199\u7684\uff0c\u56e0\u6b64\u6027\u80fd\u6c34\u5e73\u4e0d\u540c)\u3002\u7136\u800c\uff0c\u521d\u5b66c\u8bed\u8a00\u7684\u7a0b\u5e8f\u5458\u901a\u5e38\u4e5f\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5e93\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u719f\u6089\u5b83\uff0c\u800c\u4e14\u5f53\u4ed6\u4eec\u4e0d\u7406\u89e3c\u5982\u4f55\u6620\u5c04\u5230\u5e95\u5c42\u5904\u7406\u5668\u65f6\uff0c\u4ed6\u4eec\u8fd8\u4f1a\u72af\u6027\u80fd\u9519\u8bef\u3002\nc\u7f16\u8bd1\u5668\u4e0d\u80fd\u505a\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u4ed6\u4eec\u4e5f\u4e0d\u662f\u65e0\u80fd\u4e3a\u529b\u7684\u3002\u8981\u5f97\u5230\u6700\u597d\u7684\u4ee3\u7801\uff0c\u60a8\u5fc5\u987b\u4e86\u89e3\u60a8\u7f16\u5199\u7684\u90a3\u79cdc\u4ee3\u7801\u7684\u540e\u679c\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u62fc\u51d1\u5728\u4e00\u8d77\u3002\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u7b54\u6848\uff1b\u5b83\u6bd4\u8fd9\u91cc\u7684\u5927\u591a\u6570\u5176\u4ed6\u7b54\u6848\u90fd\u8981\u597d\uff0c\u5b83\u63d0\u4f9b\u4e86\u5168\u9762\u548c\u51c6\u786e\u7684\u4fe1\u606f\uff0c\u5e76\u8bc1\u660e\u4e86\u95ee\u9898\u7684\u524d\u63d0\u662f\u90e8\u5206\u6709\u7f3a\u9677\u7684\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u65ad\u8a00\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u7b2c\u4e00\u6b21\u8d21\u732e\u3002-Wizzwizz4\u2666\u3002\n\u56de\u7b54\u5f97\u4e0d\u9519\uff01\u6211\u60f3\u5728\u8fd9\u91cc\u8865\u5145\u4e00\u53e5\uff0c\u6211\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\u662f\u4e3a\u4e86\u786e\u8ba4z88dk\u7f51\u7ad9\u4e0a\u7684\u5efa\u8bae\uff1az88dk.org/wiki/doku.php\uff1fid=Optimization\u4e0a\u7684\u9879\u76ee2\u6211\u4e0d\u662f\u6545\u610f\u4f7f\u7528Memset\u7684\uff0c\u56e0\u4e3a\u60a8\u7f16\u5199\u7684\u6bcf\u4e2a\u5c0f\u5faa\u73af\u90fd\u6ca1\u6709\u73b0\u6210\u7684Memset\uff0c\u6240\u4ee5\u6211\u5173\u5fc3\u7684\u662f\u7f16\u8bd1\u5668\u5728\u5c0f\u5faa\u73af\u4e0a\u7684\u6cdb\u578b\u884c\u4e3a\u3002\u6211\u4e0d\u662f\u6545\u610f\u4f7f\u7528Memset\u7684\uff0c\u56e0\u4e3a\u4f60\u7f16\u5199\u7684\u6bcf\u4e2a\u5c0f\u5faa\u73af\u90fd\u6ca1\u6709\u73b0\u6210\u7684Memset\uff0c\u6240\u4ee5\u6211\u5173\u5fc3\u7684\u662f\u7f16\u8bd1\u5668\u5728\u5c0f\u5faa\u73af\u4e0a\u7684\u6cdb\u578b\u884c\u4e3a\u3002-\u81ea\u6211\u4ecb\u7ecd\u3002\n\u901a\u8fc7\u4f7f\u5176\u6210\u4e3a\u5168\u5c40\u7684\uff0c\u4ed6\u786e\u4fdd\u7f16\u8bd1\u5668\u4e0d\u80fd\u5c06for\u5faa\u73af\u7d22\u5f15\u4fdd\u5b58\u5728\u5faa\u73af\u5185\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u540c\u6837\uff0c\u8fd9\u7eaf\u7cb9\u662f\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u5982\u4f55\u5f88\u597d\u5730\u4f18\u5316\u7684\u9650\u5236\u3002\u5b83\u4e0d\u662f\u6613\u5931\u6027\u7684\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u8bc1\u660e\u5b58\u50a8\u5230data[]\u4e2d\u7684\u6570\u636e\u4e0d\u662f\u5b83\u7684\u522b\u540d(\u56e0\u4e3a\u5b83\u4e5f\u662f\u5168\u5c40\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u6307\u9488\uff0c\u5e76\u4e14\u7f16\u8bd1\u5668\u77e5\u9053\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u4e0d\u4f1a\u76f8\u4e92\u91cd\u53e0)\u3002\u56e0\u6b64\uff0c\u5141\u8bb8\u7f16\u8bd1\u5668\u5c06\u5b58\u50a8\u6c89\u6ca1\u5230\u5faa\u73af\u5916\u7684\u8ba1\u6570\u5668\uff0c\u5e76\u5728\u5faa\u73af\u540e\u6267\u884c\u4e00\u4e2a10\u7684\u5b58\u50a8\u3002&#34\uff1bAs-if&34\uff1b\u89c4\u5219\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u5bf9\u52a0\u8f7d/\u5b58\u50a8\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\u3002-\u5f7c\u5f97\u00b7\u79d1\u5fb7\u65af(Peter Cordes)\u3002\n\u4f46\u662f\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u7cdf\u7cd5\u7684\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u5f0f\uff0c\u8fd9\u4f1a\u4f7f\u7f16\u8bd1\u5668\u7684\u5de5\u4f5c\u53d8\u5f97\u56f0\u96be\u3002\u771f\u6b63\u7684Z80\u7f16\u8bd1\u5668\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u4f18\u5316\uff0c\u6216\u8005\u5c06\u7b80\u5355\u7684\u6570\u7ec4\u7d22\u5f15\u8f6c\u6362\u4e3a\u6307\u9488\u589e\u91cf\uff0c\u8fd9\u4ee4\u4eba\u5931\u671b(\u4f46\u8003\u8651\u5230\u4ed6\u4eec\u7684\u5e74\u9f84\uff0c\u8fd9\u5e76\u4e0d\u592a\u4ee4\u4eba\u60ca\u8bb6)\u3002GCC\u53ef\u4ee5\u5c06\u5faa\u73af\u8f6c\u6362\u4e3a\u5185\u5b58\u96c6\u8c03\u7528\u548c/\u6216\u5185\u8054\u5df2\u77e5\u826f\u597d\u7684\u5185\u5b58\u96c6\u4ee3\u7801\uff1aP-Peter Cordes\u3002\n@aralbrec\u7136\u800c\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u60f3\uff0c\u4f60\u4f1a\u5bf9\u7f16\u8bd1\u5668\u6709\u66f4\u597d\u7684\u4e86\u89e3\uff0c\u5b98\u65b9\u7f51\u7ad9\u4e0a\u6ca1\u6709\u8bb0\u5f55\u7684\u5f88\u591a\u6280\u5de7\uff0c\u4f60\u80fd\u505a\u7684\u6700\u591a\u7684\u4ecd\u7136\u662f\u6bcf\u5b57\u8282\u8d85\u8fc760\u4e2at\u72b6\u6001\u3002\u5982\u679c\u8fd9\u8fd8\u4e0d\u80fd\u8bf4\u660e\u6211\u7684\u89c2\u70b9\uff0c\u6211\u4e0d\u77e5\u9053\u8fd8\u6709\u4ec0\u4e48\u80fd\u8bf4\u660e\u95ee\u9898\u3002-\u81ea\u6211\u4ecb\u7ecd\u3002\n\u8fd9\u4e2a\u95ee\u9898\u7684\u7b80\u5355\u7b54\u6848\u662fZ80\u5438\u76d8\u548cC\u5438\u76d8--\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7ad9\u5728\u54ea\u4e00\u8fb9\u3002\u867d\u7136\u5b83\u4eec\u5f53\u7136\u662f\u4e0d\u771f\u5b9e\u7684(*1)\uff0c\u4f46\u4e5f\u5b58\u5728\u771f\u6b63\u7684\u95ee\u9898\u3002\u53cc\u65b9\u7684\u4e00\u4e2a\u4e3b\u8981\u8bba\u70b9\u662f\nC\u7684\u6838\u5fc3\u4e0ePDP-11(ISH)CPU\u67b6\u6784\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u800cZ80\u5219\u4e0d\u662f\u3002\nZ80\u662f\u4e00\u6b3e\u76f8\u5f53\u7279\u6b8a\u7684CPU\uff0c\u4e13\u6ce8\u4e8e\u6700\u5927\u80fd\u529b\uff0c\u800c\u4e0d\u662f\u7f8e\u89c2\u3002\n\u6240\u6709\u8fd9\u4e9b\u70b9\u90fd\u662f\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u3002\u4e0e\u524d\u9762\u63d0\u5230\u7684\u95ee\u9898\u4e00\u6837\uff0cC\u6697\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u4e14\u76f8\u5f53\u5bf9\u79f0\u7684\u6307\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u6e90\u4e8ePDP-11\u63d0\u4f9b\u7684\u5185\u5bb9\u3002\u8fd9\u5305\u62ec\u76f4\u63a5\u8f6c\u6362\u5230\u5185\u5b58\u5730\u5740\uff0c\u4ece\u800c\u5141\u8bb8\u8df3\u8fc7\u521b\u5efa\u66f4\u590d\u6742\u7684\u6570\u636e\u6a21\u578b\u548c\u4f7f\u7528\u6307\u9488\u6765\u5b9e\u73b0\u539f\u672c\u7531\u67d0\u4e9b\u8bed\u8a00\u8fd0\u884c\u65f6\u5904\u7406\u7684\u529f\u80fd\u3002\n\u73b0\u5728\uff0cZ80(\u5c31\u50cf\u5b83\u7684\u524d\u8eab8080\u4e00\u6837)\u5b8c\u5168\u80fd\u591f\u6267\u884c\u6240\u9700\u7684\u6240\u6709\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5176\u5355\u4e2a\u5185\u5b58\u6307\u9488\u7684(\u7ee7\u627f\u7684)\u7ed3\u6784\uff0c\u5b83\u786e\u5b9e\u9700\u8981\u7528\u51e0\u6761\u673a\u5668\u6307\u4ee4\u66ff\u6362\u5355\u4e2a(\u57fa\u4e8ePDP-11\u7684)C\u64cd\u4f5c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u8fd8\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898\u3002\u9664\u975e\uff0c\u5f53\u6c47\u7f16\u7a0b\u5e8f\u5458\u67e5\u770b\u7ed3\u679c\u65f6\uff0c\u4ed6\u7acb\u5373\u770b\u5230\u4e86Z80\u6539\u8fdb\u7ed3\u679c\u7684\u5177\u4f53\u65b9\u6cd5-\u6bd4\u5982\u4fdd\u6301\u4e24\u4e2a\u6307\u9488\uff0c\u5e76\u5728\u9700\u8981\u65f6\u4ea4\u6362HL/DE\u3002\u5bf9\u4e8e\u4e00\u4e2aC\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u8fd9\u662f\u5f88\u96be\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u8bed\u4e49\u7684-\u4e3a\u4ec0\u4e48\u8981\u505a\u67d0\u4e8b\u7684\u77e5\u8bc6-\u800c\u4e0d\u4ec5\u4ec5\u662f\u88ab\u544a\u77e5\u5b83\u662f\u5982\u4f55\u505a\u7684\u3002\n\u4f46\u8fd9\u662f\u6240\u6709\u9ad8\u7ea7\u8bed\u8a00\u7684\u95ee\u9898\u3002\u5b83\u4eec\u6700\u597d\u7f16\u8bd1\u6210\u5177\u6709\u4e00\u7ec4\u76f8\u7b49\u8d44\u6e90\u7684\u7b80\u5355\u5bf9\u79f0CPU\u6a21\u578b\uff0c\u51c6\u786e\u5730\u63d0\u4f9b\u62bd\u8c61\u5c42\u6240\u9700\u7684\u64cd\u4f5c\u3002\u8bed\u8a00\u7684\u62bd\u8c61\u6027\u8d8a\u9ad8\uff0c\u5e95\u5c42CPU\u7ea7\u522b\u5c31\u53ef\u4ee5\u6267\u884c\u5f97\u8d8a\u597d\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u52a0\u5dde\u5927\u5b66\u5723\u8fed\u6208\u5206\u6821\u7684P-Code\u7cfb\u7edf\u5728\u8bb8\u591a\u5e73\u53f0\u4e0a\u90fd\u8868\u73b0\u5f97\u5982\u6b64\u51fa\u8272\u7684\u539f\u56e0\u3002\u63d0\u4f9b\u5b83\u7684\u865a\u62dfCPU\u6b63\u662f\u7f16\u8bd1\u5668\u60f3\u8981\u7684\u3002\u5c3d\u7ba1\u6838\u5fc3\u662f\u89e3\u91ca\u5668\uff0c\u4f46\u5728\u8bb8\u591a\u673a\u5668\u4e0a\uff0c\u6027\u80fd\u53ef\u4ee5\u4e0e\u672c\u673a\u4ee3\u7801\u751f\u6210\u76f8\u5ab2\u7f8e\u3002\n..", "note_en": "I am getting the impression that it is hard to compile C to Z80 and end up with well-optimised code. Is that the case, and why?\n I know more about the 6502. Here are some examples that shows why C fits 6502 badly:\n An array in C is indexed by an integer type. The 6502 is pretty quick at indexing arrays, but unfortunately only if the index is one byte wide. So something like  strcmp or  strlen might need to actually do a 16-bit add per character.\n A stack is an ideal data structure for passing function parameters. The stack&#39;s limited to 256 bytes and the 6502 has rather limited stack addressing modes as compared to the PDP-11, so cc65 uses a second stack, implemented in software, to pass parameters IIRC.\n From what I understand of the Z80 these two examples do not apply. Z80 has these index registers and a much roomier stack. So what are the reasons C fits badly?\n   Array indexing is inefficient since there&#39;s no reasonable  base + offset addressing mode that can use a variable offset, which means the compiler needs to generate code to do the address calculation.\n Similarly, it&#39;s  awkward to save and restore function arguments on the stack because there&#39;s no  stackpointer + offset addressing mode. The   same goes for the local variables of non-leaf functions.\n Paucity of truly general purpose registers. Most registers have specific uses which complicates register allocation.\n  The big problem with a Z80 is there is no index register. You have to compute the address then do an xchg. Anything to do with pointers, dereferencing or arrays will have this problem.\r \r\u2013\u00a0 cup\n  Your statement  An array in C is indexed by a type the same width as a pointer. is wrong. It is an  integer constant greater than zero and type can be any integer type - This includes bytes.\r \r\u2013\u00a0 tofro\n  The  A stack is an ideal data structure for passing function parameters statement is misleading as well - stacks  are ideal to pass function parameters, yes. But C doesn&#39;t require its stack to be the same thing as the CPU stack. Just by coincidence, most platforms choose it to be, because it is convenient. You call that a &#34;software stack (whatever that might be) - If you think a software stack is something where you have to &#34;push&#34; something to in software - The CPU stack is the same.\r \r\u2013\u00a0 tofro\n  The  CppCon 2016: Jason Turner \u201cRich Code for Tiny Computers: A Simple Commodore 64 Game in C++17\u201d talk might be interesting here.\r \r\u2013\u00a0 liori\n  It must also be noted that you can&#39;t judge modern compilers against the older compilers. The older compilers were designed to run ON the Z80 with no memory, glacial CPUs and even worse FLOPPY disk drives. It&#39;s all they can do to produce crummy code, much less good code. Modern compilers have &#34;unlimited&#34; RAM, &#34;unlimited&#34; CPU, and &#34;instant&#34; persistent storage in comparison. I used a C compiler on the Atari 800 -- once. What a miserable experience.\r \r\u2013\u00a0 Will Hartung\n  If you try translating C into Z80, you&#39;ll see that Z80 index registers and stack don&#39;t behave quite as you expect. So, let us begin with\n    Your compiler is pretty much required to use 16-bit value for i. So, you have &amp;c somewhere, maybe even in your index register!, so let us have IX=&amp;c. However, the operations with index registers only allow constant offsets, which are also single signed bytes. So, you do not have a command to read from (IX+16-bit value in a register). Thus, you would end up using things like\n ld ix,c_addr ; the array addressld de,(i_addr) ; the counter valueadd ix,deld a,0ld (ix+0),a ; 14+20+15+7+19 = 75t (per byte)\n Most compilers will output code that is pretty close to what I wrote. Actually, experienced Z80 programmers know - IX and IY are hopeless for most operations with memory - they are far too slow and awkward. A good compiler writer would probably make his/her compiler do something like\n ld hl,c_addr ; the array addressld de,(i_addr) ; the counter valueadd hl,deld a,0ld (hl),a ; 10+20+11+7+7 = 55t (per byte)\n which is 25% faster without breaking a sweat. Nevertheless, this is far from great Z80 code even though I made my i variable static to make my - and the compiler&#39;s - life easier!.\n   The actual full loop would take (7+6+13)*10-5 = 255/10 ~ 25.5 t-states per byte. And this is really not optimized code, this is a kind of code one writes where optimization does not matter. One can do partial unrolling, one can make sure that array c does not cross 256 byte boundaries and replace INC HL by INC L. The fastest filling is actually done using the stack. In other words, Z80 does not fit the C paradigm.\n Of course, one can write a similar loop in C (using a pointer instead of an array, using countdown loop instead of counting up), which would then increase chances of it being translated into a decent Z80 code. However, this would not be you writing a regular C code; this would be you trying to work around limitations of C when it is meant to be translated into Z80.\n   Raffzahn is correct when he says that one does not have to use stack for local variables. But there must be a stack of some kind if you want recursive functions. So let us try to do it the PC way, via the stack. How do you implement a call to something like\n  Suppose even that current value for x is in one of your registers, say HL. So, you&#39;d have something like\n  How do we actually recover the address (and value) of x? It is stored at SP+2. However, we have to be careful with SP, because we want to return back to the calling program, so maybe we do something like\n addr_inc: ld hl,2 add hl,sp ld e,(hl) inc hl ld d,(hl) ; 10+11+7+6+7 = 41t\n  So, when people complain about C compilers for Z80, they do not mean it would not be possible to do. It is something else entirely. In any kind of programming, there are patterns, some are good, some are not so good. My point is, a lot of things that C does are simply bad patterns from the point of view of Z80 coding. One simply does not do things on Z80 that C pretty much requires you to be fluent at.\n  IDK about Z80 but if the compiler uses 16-bit for such  i values then it&#39;s a garbage compiler. Most modern compilers for 8-bit microcontrollers know to optimize for those cases when you don&#39;t take  i&#39;s address\r \r\u2013\u00a0 phuclv\n  Re, &#34;Your compiler is pretty much required to use 16-bit value for i.&#34; Simply not true. Any  modern compiler would be smart enough to know that the values of  i in your example all fall in the range 0..9, and any modern compiler would be smart enough to allocate whatever register was the most appropriate to hold those values and use them as array indices. The only question is, whether any compiler exists with that much smarts,  and the ability to target the Z80.\r \r\u2013\u00a0 Solomon Slow\n  I find it curious that no C compilers I know of for the Z80 or 6502 have an option to handle local variables the way PIC and 8051 compilers do--by statically allocating them so that variables that may be used simultaneously get different addresses, but those whose lifetimes don&#39;t overlap can be overlaid. The logic isn&#39;t hard, and it could greatly improve the efficiency of generated code for functions that don&#39;t need to support recursion or re-entrancy.\r \r\u2013\u00a0 supercat\n  Compilers already know how to turn array-indexing into pointer-increments, and do so to save a register, and to reduce the size of the instruction on x86 (where an index takes an extra byte). Also other advantages, like  not breaking micro-fusion on Sandybridge-family or being able to use the port7 AGU on Haswell for stores. It&#39;s entirely reasonable to expect a compiler to make a loop like your  inc hl /  djnz loop for this case where the trip-count is a compile-time constant. Somewhat reasonable otherwise.\r \r\u2013\u00a0 Peter Cordes\n  @phuclv  Most modern compilers for 8-bit microcontrollers know to optimize for those cases when you don&#39;t take i&#39;s address -- modern 8 bit microcontrollers typically have somewhere between 32 and 128 general purpose registers. The Z80 has 6(ish), and 2 of those basically have to be reserved for use as a pointer for almost all nontrivial code. This gives compilers for those architectures a lot more scope to optimize.\r \r\u2013\u00a0 Jules\n      The main downside of &#34;historic&#34; CPU&#39;s (non?)-suitability for C programs is the lack of capability to form more than one register into an address without using the ALU.\n Most more modern CPUs can use base + index + offset register addressing modes to address complex data structures like arrays and structures - The Z80 needs to painstakingly go through the 4-bit ALU to add an offset + an index to a base register like HL - most modern CPUs use separate address calculation instances for the various addressing modes.\n Another reason is the lack of real multipurpose registers - You simply cannot do everything with every register in the Z80 - Its pure register count is somewhat impressive, but using the alternate register set is probably too complicated for a compiler, and thus the possible choice of registers for a compiler is limited. This is even more valid for the 6502 that has even fewer registers.\n Yet another downside is: You can&#39;t get a decently modern C compiler for the Z80 -  clang or  GCC with their aggressive optimizers don&#39;t bother for this old CPUs, and hobbyists&#39; produces are just not that sophisticated. Even if you could, GCC and clang concentrate to optimize for  code locality, something a CPU without a cache can&#39;t even benefit from, but really boosts a modern CPU.\n I personally don&#39;t think (even non-optimal) compilers would be useless for old CPUs - There is always a lot of stuff in a program that isn&#39;t fun to do anyhow and just tedious to write in assembler (and after all, the only reason why we would still do this would be fun, wouldn&#39;t it?) - So I tend to write the boring, non-time-critical parts of a program in C, the other, the &#34;fun&#34; part in assembly. Perfect of both worlds.\n  I did just that in a Z80 (Spectrum and others) game I wrote. The core gameplay was in assembler, stuff like the leaderboard and help logic was in C.\r \r\u2013\u00a0 Rich\n  @L\u01b0uV\u0129nhPh\u00fac What do you consider  LDRLS x,[r1,r0,LSL #2] then (ARM)?\r \r\u2013\u00a0 tofro\n    ARM is not  really a RISC ISA. It&#39;s somewhat RISCy, or shares some of their features, like fixed-width instructions (except Thumb2...), but an ISA with an instruction that does anywhere from 1 to 16 loads or stores depending on bits in a bit-field in the instruction is  not a RISC. (I&#39;m talking about ARM&#39;s   push {r4, r5, r6, ..., lr} aka STMDB and corresponding  pop instruction. The load/store-multiple instructions are microcoded because they&#39;re too complex and do a variable amount of work.\r \r\u2013\u00a0 Peter Cordes\n  @PeterCordes Prety nice example when a dogma (RISC) collieds with reality - and reality wins ... except ofc, with the dogmas priests.\r \r\u2013\u00a0 Raffzahn\n    Quite often people don&#39;t know how to use the compilers or don&#39;t understand fully the consequences of code they write. There is optimization going on in the z80 c compilers but it&#39;s not as complete as, say, gcc. And I often see people fail to turn up the optimization when they compile.\n There is an example here in introspec&#39;s post that I am not allowed to comment on due to reputation points:\n  There are lots of problems with this code that he is not considering. By declaring i as char, he&#39;s possibly making it signed (that is the compiler&#39;s discretion). That means, in comparisons, the 8-bit quantity is sign extended before being compared because normally, unless you specify in code properly, the c compiler may promote to ints before doing those comparisons. And by making it global, he makes sure the compiler cannot hold the for-loop index in a register inside the loop.\n There are two c compilers in z88dk. One is sccz80 which is the most advanced iteration of Ron Cain&#39;s original compiler from the late 70s; it&#39;s mostly C90 now. This compiler is not an optimizing compiler - it&#39;s intention is to generate small code instead. So you will see many compiler primitives being carried out in subroutine calls. The idea behind it is that z88dk provides a substantial c library that is written entirely in asm language so the c compiler is intended to produce glue code while the execution time is spent in hand-written assembler.\n The other c compiler is a fork of sdcc called zsdcc. This one has been improved on and produces better &amp; smaller code than sdcc itself does. sdcc is an optimizing compiler but it tends to produce larger code than sccz80 and overuses the z80&#39;s index registers. The version in z88dk, zsdcc, fixes many of these sorts of issues and now produces comparable code size to sccz80 when the --opt-code-size switch is used.\n   (the -O3 switch is for code size reduction but I prefer the default -O2 most of the time)\n ._main ld hl,0 ;const ld a,l ld (_i),a jp i_4.i_2 ld hl,_i call l_gchar inc hl ld a,l ld (_i),a dec hl.i_4 ld hl,_i call l_gchar ld de,10 ;const ex de,hl call l_lt jp nc,i_3 ld hl,_data push hl ld hl,_i call l_gchar pop de add hl,de ld (hl),#(0 % 256) ld l,(hl) ld h,0 jp i_2.i_3 ret\n Here you see the subroutine calls for compiler primitives and the fact the compiler is forced to use memory to hold the for-loop index. &#34;l_lt&#34; is a signed comparison.\n   _main: ld hl,_i ld (hl),0x00l_main_00102: ld hl,(_i) ld h,0x00 ld bc,_data add hl,bc xor a,a ld (hl),a ld hl,_i ld a,(hl) inc a ld (hl),a sub a,0x0a jr C,l_main_00102 ret\n By default char is unsigned in zsdcc and it&#39;s noticed that the comparison &#34;i&lt;10&#34; can be done in 8-bits. C rules say both sides should be promoted to int but it&#39;s ok not to do that if the compiler can figure out the comparison can be equivalently done another way. When you don&#39;t specify that your chars are unsigned, this promotion can lead to insertion of sign extension code.\n     ._main dec sp pop hl ld l,#(0 % 256) push hl jp i_4.i_2 ld hl,0 ;const add hl,sp inc (hl).i_4 ld hl,0 ;const add hl,sp ld a,(hl) cp #(10 % 256) jp nc,i_3 ld de,_data ld hl,2-2 ;const add hl,sp ld l,(hl) ld h,0 add hl,de ld (hl),#(0 % 256 % 256) ld l,(hl) ld h,0 jp i_2.i_3 inc sp ret\n The comparison is now 8-bit and no subroutine calls are used. However, sccz80 cannot put the index i into a register - it does not carry enough information to do that so it instead makes it a stack variable.\n   _main: ld bc,_data+0 ld e,0x00l_main_00103: ld a, e sub a,0x0a ret NC ld l,e ld h,0x00 add hl, bc ld (hl),0x00 inc e jr l_main_00103\n   unsigned char data[10];void main(void){ for (unsigned char *p = data; p != data+10; ++p) *p = 0;}\n  _main: ld bc,_datal_main_00103: ld a, c sub a,+((_data+0x000a) &amp; 0xFF) jr NZ,l_main_00116 ld a, b sub a,+((_data+0x000a) / 256) jr Z,l_main_00105l_main_00116: xor a, a ld (bc), a inc bc jr l_main_00103l_main_00105: ret\n The pointer is held in BC, the end condition is a 16-bit comparison and the result is the main loop takes about the same amount of time.\n      In general the c compilers cannot currently generate the common z80 cisc instructions ldir, cpir, djnz, etc but they do in certain circumstances as shown above. They are also not able to use the exx set. However, the substantial c library that comes with z88dk does make full use of the z80 architecture so anyone using the library will benefit from asm level performance (sdcc&#39;s own library is written in c so is not at the same performance level). However, beginner c programmers are usually not using the library either because they&#39;re not familiar with it and that&#39;s on top of making performance mistakes when they don&#39;t understand how the c maps to the underlying processor.\n The c compilers are not able to do everything, however they&#39;re not helpless either. To get the best code out, you have to understand the consequences of the kind of c code you write and not just throw something together.\n  This is a fantastic answer; it&#39;s better than most of the other answers here, providing full and accurate information and demonstrating that the premise of the question is partially flawed as opposed to just asserting it. This is a great first contribution.\r \r\u2013\u00a0 wizzwizz4 \u2666\n  Lovely answer! I&#39;d like to add here that I made my variable global specifically to confirm to the recommendations on z88dk website: item 2 at  z88dk.org/wiki/doku.php?id=optimization I am not using memset intentionally because there is no ready-made memset for every small loop that you write, so it is the generic behaviour on compiler on small loops that concerns me.\r \r\u2013\u00a0 introspec\n  And by making it global, he makes sure the compiler cannot hold the for-loop index in a register inside the loop. Again this is purely a limitation of compilers that don&#39;t know how to optimize well. It&#39;s not  volatile, and the compiler can prove the stores into  data[] don&#39;t alias it (because it&#39;s also a global array, not a pointer, and the compiler knows that two globals don&#39;t overlap each other). So the compiler is allowed to sink the stores to the counter out of the loop and do one store of  10 after the loop. The &#34;as-if&#34; rule allows compile-time reordering of loads/stores.\r \r\u2013\u00a0 Peter Cordes\n  But well spotted, that is a seriously bad way to write code that makes life difficult for compilers. It&#39;s disappointing (but not too surprising considering their age) that real Z80 compilers can&#39;t do that optimization, or turn simple array indexing into pointer increments.  gcc could turn the loop into a  memset call and/or inline known good memset code :P\r \r\u2013\u00a0 Peter Cordes\n  @aralbrec However, if you think about this, you have better knowledge of the compiler, lots of tricks undocumented on the official site and the best you can do is still over 60 t-states per byte. If this doesn&#39;t illustrate my point, I don&#39;t know what does...\r \r\u2013\u00a0 introspec\n      Simple answers one easily gets to this question are  The Z80 Sucks and  C Sucks - depending on the side someone is on. While they are of course, untrue (*1), there are real issues. A major argument for both sides is that\n C is at core tied to a PDP-11(ish) CPU architecture and the Z80 isn&#39;t one.\n The Z80 is a rather special CPU, created with a focus on maxing abilities, not beauty.\n All these points are linked. Like the question mentioned, C implies a simple and rather symmetric pointer model which is originated in what the PDP-11 offered. This includes the direct conversion to a memory address which in turn allowed to skip the creation of a more sophisticated data model and the use of pointers to realize functions that would otherwise be handled by some language runtime.\n Now the Z80 is (like its predecessor, the 8080) quite able to perform everything needed. Due to its (inherited) structure of a single memory pointer it does, however, need to replace a single (PDP-11 based) C-operation with several machine instructions. So far not a real issue. Except, when an assembly programmer looks at the result, he immediately sees Z80 specific ways to improve the result - like holding two pointers and exchanging HL/DE when needed. That&#39;s hard to &#39;understand&#39; for a C compiler, as it is based on semantics - the knowledge &#39;why&#39; something is done - not just being told &#39;how&#39; it&#39;s done.\n  but an issue with all high-level languages. They compile best to a simple symmetric CPU model with a set of equal resources, offering exactly the operations the abstraction layer needs. The higher the language&#39;s abstraction is, the better the underlying &#39;CPU&#39; level can perform. That&#39;s why the UCSD P-Code System did perform so well across many platforms. The offering of its virtual CPU was exactly what a compiler wants. Despite being an interpreter at the core, performance was, on many machines, comparable to native code generate\n......", "posttime": "2020-05-31 03:24:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u7f16\u8bd1,\u7f16\u8bd1\u5668,compilers", "title": "\u4e3a\u4ec0\u4e48C\u5230Z80\u7f16\u8bd1\u5668\u4ea7\u751f\u7684\u4ee3\u7801\u5f88\u5dee\uff1f", "title_en": "Why do C to Z80 compilers produce poor code?", "transed": 1, "url": "https://retrocomputing.stackexchange.com/questions/6095/why-do-c-to-z80-compilers-produce-poor-code", "via": "", "real_tags": ["\u4ee3\u7801", "\u7f16\u8bd1", "\u7f16\u8bd1\u5668", "compilers"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004429, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8005\u6309\uff1a\u5bf9\u4e8e\u8fd9\u7bc7\u535a\u5ba2\uff0c\u6211\u6b22\u8fce\u6211\u7684\u670b\u53cb\u517c\u540c\u4e8bGerben Stavenga\u4f5c\u4e3a\u5ba2\u5ea7\u4f5c\u8005\u3002\n\u6700\u8fd1\uff0cAndrei Alexandrescu\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u4f7f\u7528Lomuto\u5206\u533a\u65b9\u6848\u4f18\u5316QuickSort\u7684\u6709\u8da3\u6587\u7ae0\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u672c\u8d28\u662f\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6027\u80fd\u5b8c\u5168\u7531\u5206\u652f\u9519\u8bef\u9884\u6d4b\u4e3b\u5bfc\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u65e0\u5206\u652f\u4ee3\u7801\u6765\u5b9e\u73b0\u5927\u5e45\u52a0\u901f\u3002\u8fd9\u5df2\u7ecf\u88ab\u8bb8\u591a\u4eba\u89c2\u5bdf\u5230\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u63d0\u51fa\u4e86\u5404\u79cd\u65e0\u679d\u6392\u5e8f\u4f8b\u7a0b\u3002Andrei\u89c2\u5bdf\u5230\uff0c\u4ece\u4e24\u4e2a\u8457\u540d\u7684\u5feb\u901f\u6392\u5e8f\u5206\u533a\u65b9\u6848\u6765\u770b\uff0cLomuto\u5f88\u5bb9\u6613\u5b9e\u73b0\u65e0\u5206\u652f\uff0c\u8fd9\u5bf9\u4e8e\u5bf9\u5c0f\u7684\u539f\u8bed\u8fdb\u884c\u6392\u5e8f\u786e\u5b9e\u8981\u597d\u5f97\u591a\u3002\u6211\u6700\u8fd1\u5c1d\u8bd5\u4e86\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff0c\u4f46\u628a\u5b83\u4eec\u5e26\u5230\u4e86\u4e00\u4e2a\u4e0d\u540c\u4f46\u6709\u8da3\u7684\u65b9\u5411\u3002\u6211\u53d1\u73b0\uff0cHoare\u548cLomuto\u7684\u6df7\u5408\u65b9\u6848\u53ef\u4ee5\u5e26\u6765\u5f88\u5927\u7684\u6539\u5584\uff0c\u5373\u4f7f\u4e0e\u65e0\u5206\u652f\u7684Lomuto\u76f8\u6bd4\u4e5f\u662f\u5982\u6b64\u3002\u6700\u540e\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u6c14\u6ce1\u6392\u5e8f\u5728\u5c0f\u6570\u7ec4\u4e2d\u593a\u5f97\u6842\u51a0\u3002\u6240\u6709\u8fd9\u4e9b\u6210\u529f\u7684\u5173\u952e\u662f\u5229\u7528\u6307\u4ee4\u7ea7\u5e76\u884c\u6027\u548c\u51cf\u5c11\u4f9d\u8d56\u94fe\u3002\n\u5feb\u901f\u6392\u5e8f\u662f\u6307\u5bf9\u6240\u6709\u5171\u4eab\u76f8\u540c\u8f6e\u5ed3\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u7684\u4e00\u7c7b\u7b97\u6cd5\u3002\nvoid QuickSort(T*Left\uff0cT*Right){if(Right-Left&gt\uff1bkCutOff){auto Pivot=ChoosePivotElement(Left\uff0cRight)\uff1b//\u6b64\u5904\u91cd\u8981\u4f46\u4e0d\u805a\u7126auto p=Partition(Pivot\uff0cLeft\uff0cRight)\uff1b//\u4e3b\u5de5\u4f5c\u5faa\u73afQuickSort(Left\uff0cp)\uff1bQuickSort(p\uff0cRight)\uff1b//\u5c3e\u90e8\u8c03\u7528\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u6700\u5927\u7684\u5b50\u95f4\u9694}Else{SortSmallArray(Left\uff0cRight)\uff1b}}\u3002\n\u5728kCutOff\u7684\u9009\u62e9\u3001\u7528\u4e8e\u5c0f\u9635\u5217\u7684\u6392\u5e8f\u7b97\u6cd5\u7684\u9009\u62e9\u548c\u67a2\u8f74\u5143\u7d20\u7684\u9009\u62e9\u65b9\u9762\u5b58\u5728\u7740\u65e0\u6570\u7684\u53d8\u5316\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u6027\u80fd\u5f88\u91cd\u8981\uff0c\u4f46\u662f\u5feb\u901f\u6392\u5e8f\u6267\u884c\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u5728Partition\u51fd\u6570\u4e2d\u5b8c\u6210\u7684\u3002\u6709\u4e24\u79cd\u5b9e\u73b0\u5212\u5206\u7684\u89c4\u8303\u65b9\u6848\uff1a\u539f\u59cb\u7684Hoare\u65b9\u6848\u548cLomuto\u65b9\u6848\u3002HoarePartition\u65b9\u6848\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ece\u6570\u7ec4\u524d\u9762\u5c06\u8fdd\u53cd\u5206\u533a\u5c5e\u6027\u7684\u5143\u7d20\u4e0e\u6570\u7ec4\u540e\u9762\u7684\u5143\u7d20\u4ea4\u6362\uff0c\u4ece\u5916\u90e8\u5411\u5185\u5904\u7406\u6570\u7ec4\uff0c\u6536\u655b\u5230\u4e2d\u95f4\u67d0\u5904\u7684\u5206\u5272\u70b9\u3002\nT*HoarePartition(T\u8f74\uff0cT*Left\uff0cT*Right){While(Left&lt\uff1bRight){Left=ScanForward(Pivot\uff0cLeft\uff0cRight)\uff1bIF(Left==Right)Break\uff1bRight=ScanBackward(Pivot\uff0cLeft\uff0cRight)\uff1bIf(Left==Right)Break\uff1bSWAP(*Left\uff0c*Right)\uff1b}\u8fd4\u56de\u5de6\u4fa7\uff1b}\u3002\n\u76f8\u53cd\uff0cLomuto\u65b9\u6848\u4ece\u524d\u5230\u540e\u5904\u7406\u6570\u7ec4\uff0c\u4e3a\u5230\u76ee\u524d\u4e3a\u6b62\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5904\u7406\u7684\u5143\u7d20\u7ef4\u62a4\u4e00\u4e2a\u6b63\u786e\u5206\u533a\u7684\u6570\u7ec4\u3002\nT*LomutoPartition(T Pivot\uff0cT*Left\uff0cT*Right){T*p=Left\uff1bfor(auto it=Left\uff1bit&lt\uff1bright\uff1bit++){IF(*it&lt\uff1bPivot){std\uff1a\uff1aSWAP(*it\uff0c*p)\uff1b//\u53ef\u4ee5\u662f\u81ea\u4ea4\u6362p++\uff1b}}\u8fd4\u56dep\uff1b}\n\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5faa\u73af\uff0c\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u5c5e\u6027\uff0c\u5c31\u662f\u5b83\u5bf9\u4e8e\u5c0f\u4e8e\u8f74\u5fc3\u7684\u5143\u7d20\u7684\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u3002\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u4e0a\u9762\u7684\u5faa\u73af\u53ef\u4ee5\u5728\u6ca1\u6709\u6761\u4ef6\u5206\u652f\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u3002\u6761\u4ef6\u4ea4\u6362\u53ef\u4ee5\u901a\u8fc7\u6761\u4ef6\u79fb\u52a8\u6765\u5b9e\u73b0\uff0c\u5e76\u4e14\u6761\u4ef6\u6307\u9488\u589e\u52a0\u53ef\u4ee5\u4f5c\u4e3a\u65e0\u6761\u4ef6\u7684p+=(*it\uff1b\u8f74\u5fc3)\u6765\u5b9e\u73b0\u3002Andrei\u7684\u535a\u5ba2\u5c55\u793a\u4e86\u5728\u5404\u79cd\u6807\u51c6\u5e93\u4e2d\uff0c\u8fd9\u4e2a\u7b80\u5355\u7684\u65e0\u5206\u652f\u5faa\u73af\u76f8\u5bf9\u4e8e\u4ea7\u54c1\u8d28\u91cf\u5b9e\u73b0\u7684\u6027\u80fd\u63d0\u5347\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u60f3\u8fdb\u4e00\u6b65\u8fdb\u884c\u4f18\u5316\uff0c\u66f4\u6df1\u5165\u5730\u7814\u7a76\u6392\u5e8f\u7b97\u6cd5\u7684\u6027\u80fd\u5206\u6790\u3002\u5f53\u6761\u4ef6\u5206\u652f\u88ab\u79fb\u9664\u65f6\uff0c\u4ee3\u7801\u7684\u6027\u80fd\u8d8b\u5411\u4e8e\u53d8\u5f97\u66f4\u52a0\u7a33\u5b9a\u548c\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u6570\u636e\u4f9d\u8d56\u6027\u6210\u4e3a\u5173\u952e\u3002\u6211\u4eec\u5c06\u5206\u6790\u4e00\u4e2a\u81ea\u89e3\u91ca\u4f2a\u6c47\u7f16\u4ee3\u7801\u7684\u4ee3\u7801\u9879\uff0c\u5176\u4e2d\u547d\u540d\u7684\u53d8\u91cf\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u663e\u5f0f\u7684CPU\u5bc4\u5b58\u5668\u548c\u5bf9\u5185\u5b58\u7684\u52a0\u8f7d/\u5b58\u50a8\u3002\u5728\u6b64\u8868\u793a\u6cd5\u4e2d\uff0c\u4e0a\u9762\u7684\u57fa\u672c\u5faa\u73af\u53d8\u6210\u3002\n\u5faa\u73af\uff1aval=\u52a0\u8f7d(It)//1 prev_val=\u52a0\u8f7d(P)//2 is_sirer=val&lt\uff1bPIVOT//3valnew=cmov(is_size\uff0cprev_val\uff0cval)//4 prev_val=cmov(is_size\uff0cval\uff0cprev_val)//5 Store(it\uff0cvalnew)//6 Store(p\uff0cprev_val)//7 p+=is_size//\u3002\u53f3)\u8f6c\u5230\u5faa\u73af\u3002\n\u5b83\u5c06\u5982\u4f55\u5728\u5e76\u884c\u7684\u65e0\u5e8fCPU\u4e0a\u8fd0\u884c\uff1f\u4f5c\u4e3a\u7b2c\u4e00\u8fd1\u4f3c\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbeCPU\u662f\u4efb\u610f\u5e76\u884c\u7684\uff0c\u5373\u3002\u53ea\u8981\u6307\u4ee4\u662f\u72ec\u7acb\u7684\uff0c\u5b83\u5c31\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u65e0\u9650\u7684\u6307\u4ee4\u3002\u91cd\u8981\u7684\u662f\u8981\u4e86\u89e3\u643a\u5e26\u4f9d\u8d56\u94fe\u7684\u5faa\u73af\u3002\u5b83\u4eec\u51b3\u5b9a\u4e86\u5faa\u73af\u53ef\u80fd\u8fd0\u884c\u7684\u6700\u5c0f\u5ef6\u8fdf\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5faa\u73af\u8fed\u4ee3\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u7531\u5b83\u643a\u5e26\uff0cp\u3002\u53ea\u6709\u7b2c8\u884c\u548c\u7b2c9\u884c\u53c2\u4e0e\u5faa\u73af\u643a\u5e26\u7684\u94fe\uff0c\u5e76\u4e14\u8fd9\u4e24\u884c\u90fd\u662f\u5355\u5468\u671f\u6307\u4ee4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u786e\u5b9a\u5faa\u73af\u53ef\u80fd\u4f1a\u4ee5\u6bcf\u6b21\u8fed\u4ee31\u4e2a\u5468\u671f\u7684\u541e\u5410\u91cf\u8fd0\u884c\u3002\n\u7136\u800c\uff0c\u8fd9\u79cd\u4f9d\u8d56\u5206\u6790\u5e76\u4e0d\u5341\u5206\u6b63\u786e\u3002\u8fd8\u6709\u5bf9\u5185\u5b58\u7684\u52a0\u8f7d\u548c\u5b58\u50a8\u3002\u5982\u679c\u60a8\u5c06\u67d0\u4e9b\u5185\u5bb9\u5b58\u50a8\u5230\u67d0\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u7136\u540e\u518d\u4ece\u8be5\u5730\u5740\u52a0\u8f7d\uff0c\u5219\u5fc5\u987b\u8bfb\u53d6\u524d\u4e00\u4e2a\u5b58\u50a8\u7684\u503c\u3002\u8fd9\u610f\u5473\u7740\u52a0\u8f7d\u4f9d\u8d56\u4e8e\u5b58\u50a8\uff0c\u6216\u8005\u81f3\u5c11\u5728\u5730\u5740\u91cd\u53e0\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u91cc\uff0c\u5b83\u548cp\u662f\u52a8\u6001\u503c\uff0c\u5e76\u4e14\u5b83\u4eec\u80af\u5b9a\u53ef\u4ee5\u91cd\u53e0\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684\u865a\u7ebf\u6240\u793a\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u7b2c1\u884c\u548c\u7b2c2\u884c\u7684\u52a0\u8f7d\u4e0e\u7b2c6\u884c\u548c\u7b2c7\u884c\u7684\u5b58\u50a8\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u3002\n\u8fd9\u5b8c\u5168\u6539\u53d8\u4e86\u6e38\u620f\uff0c\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u643a\u5e26\u6570\u636e\u4f9d\u8d56\u6027\u7684\u957f\u5faa\u73af\uff0c\u7b2c6\u884c\u548c\u7b2c7\u884c\u4f9d\u8d56\u4e8e\u7b2c4\u884c\u548c\u7b2c5\u884c\uff0c\u8fd9\u4e24\u884c\u90fd\u4f9d\u8d56\u4e8e\u7b2c3\u884c\uff0c\u800c\u7b2c3\u884c\u4f9d\u8d56\u4e8e\u7b2c1\u884c\u548c\u7b2c2\u884c\u7684\u8d1f\u8f7d\uff0c\u800c\u7b2c1\u884c\u548c\u7b2c2\u884c\u53ef\u80fd\u4f9d\u8d56\u4e8e\u524d\u4e00\u6b21\u8fed\u4ee3\u7b2c6\u884c\u548c\u7b2c7\u884c\u7684\u5b58\u50a8\u3002\u5982\u679c\u6211\u4eec\u8ba1\u7b97\u5468\u671f\uff0c\u6211\u4eec\u5f97\u52305\u4e2a\u5468\u671f\u7528\u4e8e\u52a0\u8f7d(\u52a0\u8f7d\u672c\u8eab\u53ef\u4ee5\u5e76\u884c\u5b8c\u6210)\uff0c1\u4e2a\u5468\u671f\u7528\u4e8e\u6bd4\u8f83\uff0c1\u4e2a\u5468\u671f\u7528\u4e8e\u6761\u4ef6\u79fb\u52a8\uff0c1\u4e2a\u5468\u671f\u7528\u4e8e\u5b58\u50a8\uff0c\u56e0\u6b64\u8be5\u5faa\u73af\u5c06\u8fd0\u884c~8\u4e2a\u5468\u671f\u3002\u6211\u4eec\u7c97\u7565\u7684\u8ba8\u8bba\u8868\u660e\uff0c\u8fd9\u4e0e1\u4e2a\u5468\u671f\u7684\u8fed\u4ee3\u76f8\u53bb\u751a\u8fdc\u3002\n\u867d\u7136\u901a\u5e38\u4e0d\u53ef\u80fd\u5bf9\u5b58\u50a8\u548c\u52a0\u8f7d\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u4f46\u8fd9\u6837\u505a\u5bf9CPU\u7684\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684memcpy\u5faa\u73af\u3002\n\u5982\u679c\u52a0\u8f7d\u4e0d\u80fd\u4e0e\u524d\u4e00\u4e2a\u5b58\u50a8\u4e00\u8d77\u91cd\u65b0\u6392\u5e8f\uff0c\u5219\u8fd9\u662f\u4e00\u4e2a5+1=6\u5468\u671f\u5ef6\u8fdf\u5faa\u73af\u3002\u7136\u800c\uff0c\u5728memcpy\u4e2d\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u52a0\u8f7d\u548c\u5b58\u50a8\u6c38\u8fdc\u4e0d\u4f1a\u91cd\u53e0\u3002\u5982\u679cCPU\u91cd\u65b0\u6392\u5e8f\uff0c\u4e0a\u9762\u7684\u5faa\u73af\u5c06\u4ee5\u6bcf\u4e2a\u5468\u671f\u4e00\u6b21\u8fed\u4ee3\u7684\u541e\u5410\u91cf\u6267\u884c\u3002\u5b83\u7684\u6267\u884c\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff0c\u5ffd\u7565\u4e86\u63a7\u5236\u6d41\u6240\u9700\u7684\u6307\u4ee4\u3002\nval_0=\u52a0\u8f7d(It_0)\uff1bit_1=it_0+1\uff1b//\u5faa\u73af1 val_1=\u52a0\u8f7d(It_1)\uff1bit_2=it_1+1\uff1b//\u5faa\u73af2 val_2=\u52a0\u8f7d(It_2)\uff1bit_3=it_2+1\uff1b//\u5faa\u73af3 val_3=\u52a0\u8f7d(It_3)\uff1bit_4=it_3+1\uff1b//\u5faa\u73af4//\u5468\u671f1\u7684\u8d1f\u8f7d\u503c\u53d8\u4e3a\u53ef\u7528\u3002//\u4ece\u8fd9\u4e00\u70b9\u5f00\u59cb\uff0c\u6bcf\u4e2a\u5468\u671f\u6267\u884c\u5faa\u73af\u7684\u6240\u6709\u6307\u4ee4\u3002val_4=\u52a0\u8f7d(It_4)\uff1bit_5=it_4+1\uff1b\u5b58\u50a8(Val_0)\uff1b//\u5468\u671f5 val_5=\u52a0\u8f7d(It_5)\uff1bit_6=it_5+1\uff1b\u5b58\u50a8(Val_1)\uff1b//\u5468\u671f6\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6307\u4ee4\u6d41\u4e2d\u52a0\u8f7d\u4e4b\u524d\u7684\u5927\u591a\u6570\u5b58\u50a8\u5b9e\u9645\u4e0a\u90fd\u6307\u5411\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u5bf9\u5b58\u50a8\u4e4b\u524d\u7684\u52a0\u8f7d\u91cd\u65b0\u6392\u5e8f\u3002\u56e0\u6b64\uff0cCPU\u5728\u5b58\u50a8\u4e4b\u524d\u5bf9\u52a0\u8f7d\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u8fd9\u79f0\u4e3a\u63a8\u6d4b\u6027\u52a0\u8f7d\uff0c\u4f46\u662f\uff0c\u53ea\u6709\u5728\u786e\u8ba4\u6ca1\u6709\u5b58\u50a8\u4f7f\u63a8\u6d4b\u6027\u52a0\u8f7d\u65e0\u6548\u65f6\uff0c\u624d\u4f1a\u63d0\u4ea4\u52a0\u8f7d\u7684\u5f71\u54cd\u3002\u5982\u679c\u5728\u524d\u5b58\u50a8\u5b9e\u9645\u4e0a\u4f7f\u52a0\u8f7d\u65e0\u6548\uff0c\u5219\u6267\u884c\u56de\u6eda\u5230\u52a0\u8f7d\uff0c\u5e76\u4e14CPU\u91cd\u65b0\u5f00\u59cb\u3002\u4eba\u4eec\u53ef\u4ee5\u60f3\u8c61\uff0c\u8fd9\u662f\u975e\u5e38\u6602\u8d35\u7684\uff0c\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5206\u652f\u673a\u6784\u7684\u9519\u8bef\u9884\u6d4b\u3002\u867d\u7136\u8bb8\u591a\u5b58\u50a8\u548c\u52a0\u8f7d\u4f4d\u4e8e\u4e0d\u540c\u7684\u5730\u5740\uff0c\u4f46\u4e5f\u6709\u5927\u91cf\u7684\u5b58\u50a8\u548c\u52a0\u8f7d\u4f4d\u4e8e\u540c\u4e00\u5730\u5740\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u5230\u5bc4\u5b58\u5668\u6ea2\u51fa\u3002\u56e0\u6b64\uff0cCPU\u4f7f\u7528\u57fa\u4e8e\u6307\u4ee4\u5730\u5740\u7684\u9884\u6d4b\u6a21\u578b\u6765\u786e\u5b9a\u52a0\u8f7d\u662f\u5426\u5177\u6709\u5bf9\u5148\u524d\u5b58\u50a8\u7684\u4f9d\u8d56\u6027\u3002\u4e00\u822c\u6765\u8bf4\uff0cCPU\u662f\u76f8\u5f53\u4fdd\u5b88\u7684\uff0c\u9519\u8bef\u6392\u5e8f\u7684\u6210\u672c\u975e\u5e38\u9ad8\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0cCPU\u5c06\u9047\u5230\u6765\u81ea\u4e0e\u6700\u8fd1\u5b58\u50a8\u76f8\u540c\u7684\u5730\u5740\u7684\u52a0\u8f7d\uff0c\u5e76\u4e14\u4f1a\u72b9\u8c6b\u662f\u5426\u8fdb\u884c\u5fc5\u8981\u7684\u91cd\u65b0\u6392\u5e8f\u3002\n\u4ed4\u7ec6\u770b\uff0cp\u7684\u52a0\u8f7d\u624d\u662f\u6709\u95ee\u9898\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6765\u81eait\u7684\u52a0\u8f7d\u603b\u662f\u6765\u81ea\u4e0e\u524d\u9762\u5b58\u50a8\u4e0d\u540c\u7684\u5730\u5740\uff0c\u6b64\u5916\uff0cp\u5904\u7684\u52a0\u8f7d\u8fd8\u8d1f\u8d23TheLoop\u4e2d\u7684\u5927\u91cf\u989d\u5916\u5de5\u4f5c\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u5426\u5219p\u5904\u7684\u5b58\u50a8\u5c06\u635f\u574f\u6570\u7ec4\u4e2d\u7684\u503c\u3002\u88ab\u8986\u76d6\u7684\u503c\u662f\u5148\u524d\u5728\u626b\u63cf\u4e2d\u9047\u5230\u7684\u503c\uff0c\u5e76\u4e14\u662f\u5927\u4e8e\u900f\u89c6\u7684\u90a3\u4e9b\u5143\u7d20\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u503c\u4fdd\u5b58\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff0c\u5219\u4e0d\u9700\u8981\u4ea4\u6362\u3002\n//\u5c06\u5143\u7d20[LEFT\uff0cRIGHT]\u5206\u5e03\u5230//\u6682\u5b58\u7f13\u51b2\u533aT*DistributeForward(T Pivot\uff0cT*Left\uff0cT*Right\uff0cT*ScratchSize-1\uff1bptrdiff_t Offset=0\uff1bfor(auto it=Left\uff1bit&lt\uff1bright\uff1bit++){auto val=*it\uff1bbool is_Larger=val&gt\uff1b=Pivot\uff1bauto dst=){auto val=*it\uff1bbool is_size=val&gt\uff1b\uff1bptrdiff_t offset=0\uff1bfor(auto it=Left\uff1bit&lt\uff1bright\uff1bit+){auto val=*it\uff1bbool is_size=val&gt\uff1b=voft\uff1bauto dst=\u3002SCRATCH_END\uff1ait\uff1bdst[Offset]=val\uff1bOffset-=IS_LAGER\uff1b}RETURN RIGHT+OFFSET\uff1b}T*ModifiedLomutoPartition(T Pivot\uff0cT*Left\uff0cT*Right\uff0cT*Scratch){auto p=DistributeForward(Pivot\uff0cLeft\uff0cRight\uff0cScratch)\uff1b//\u8981\u5b8c\u6210\u5206\u533a\uff0c\u9700\u8981\u5c06Scratch\u4e2d\u7684\u5143\u7d20\u590d\u5236//\u5230\u6570\u7ec4\u672b\u5c3e\u3002auto size=right-p\uff1bmemcpy(p\uff0cScratchSize+kScratchSize-size\uff0csize*sizeof(T))\uff1b\u8fd4\u56dep\uff1b}\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u5f97\u591a\u7684\u5faa\u73af\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u53ea\u6709\u4e00\u4e2a\u52a0\u8f7d\u548c\u4e00\u4e2a\u5b58\u50a8\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u52a0\u8f7d\u6c38\u8fdc\u4e0d\u4f1a\u4e0e\u4ee5\u524d\u7684\u5b58\u50a8\u51b2\u7a81\u3002\u8fd9\u4e2a\u5faa\u73af\u6bd4\u539f\u6765\u7684\u5faa\u73af\u5feb\u5f97\u591a\uff0c\u5728\u6211\u7684\u673a\u5668\u4e0a\uff0c\u5b83\u4e0d\u662f\u6bcf\u6b21\u8fed\u4ee31\u4e2a\u5468\u671f\uff0c\u800c\u662f2.5\u4e2a\u5468\u671f\u3002\u8fd9\u8868\u660e\u5b83\u6b63\u5728\u9971\u548cCPU\u7684ILP\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u518d\u662f\u9002\u5f53\u7684\uff0c\u5b83\u9700\u8981O(N)\u4e2a\u989d\u5916\u7684\u5185\u5b58\u7528\u4e8e\u6682\u5b58\u7f13\u51b2\u533a\u3002\n\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8f83\u5c0f\u7684\u56fa\u5b9a\u5927\u5c0f\u7684\u4e34\u65f6\u7f13\u51b2\u533a\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u9664\u975e\u6211\u4eec\u9700\u8981\u5728\u56fa\u5b9a\u7f13\u51b2\u533a\u5df2\u6ee1\u65f6\u4e2d\u6b62\u3002\u90a3\u6211\u4eec\u8be5\u600e\u4e48\u529e\uff1f\u51fd\u6570\u8fd4\u56de\u79bb\u5f00\u5faa\u73af\u7684\u5206\u5272\u70b9p\u3002\u6b64\u65f6\uff0c[Left\uff0cp]\u5728\u6570\u7ec4\u524d\u9762\u6709\u6bd4Pivot\u66f4\u5c0f\u7684\u6b63\u786e\u5143\u7d20\u3002\u6682\u5b58\u7f13\u51b2\u533a\u5145\u6ee1\u4e86\u5927\u4e8e\u6216\u7b49\u4e8ePivot\u7684\u5143\u7d20\uff0c[p\uff0cp+kScratchSize]\u5305\u542b\u6211\u4eec\u4e0d\u518d\u9700\u8981\u7684\u4fe1\u606f\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u76f8\u540c\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u5411\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528[p\uff0cp+kScratchSize)\u4f5c\u4e3a\u4e34\u65f6\u7f13\u51b2\u533a\u3002\u8bf7\u6ce8\u610fDistributeForward()\u5982\u4f55\u4ece\u540e\u5230\u524d\u586b\u5145\u6682\u5b58\u7f13\u51b2\u533a\uff1b\u5411\u540e\u7248\u672c\u5c06\u4ece\u524d\u5230\u540e\u586b\u5145\u6682\u5b58\u7f13\u51b2\u533a\u3002\u56e0\u6b64\uff0c\u4f7f\u7528Interval[p\uff0cp+kScratchSize)\u4f5c\u4e3a\u4e34\u65f6\u53d8\u91cf\u6267\u884cDistributeBackwards()\u4f1a\u5c06\u9047\u5230\u7684\u6240\u6709\u8f83\u5c0f\u5143\u7d20\u6574\u9f50\u5730\u6253\u5305\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u8fd9\u5c06\u4e00\u76f4\u6301\u7eed\u5230\u4e34\u65f6\u7a7a\u95f4\u5df2\u6ee1\uff0c\u4f46\u662f\u73b0\u5728\u5728\u6570\u7ec4\u672b\u5c3e\u6253\u5f00\u4e86\u4e00\u4e2a\u65b0\u7684\u4e34\u65f6\u7a7a\u95f4\u3002\u7b49\u7b49\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662fHoare\u7684\u7b97\u6cd5\uff0c\u4f46\u5b83\u4e0eLomuto\u542f\u53d1\u7684\u5206\u5e03\u5f0f\u51fd\u6570\u6df7\u5408\u5728\u4e00\u8d77\u3002\nT*ModifiedHoarePartition(T Pivot\uff0cT*Left\uff0cT*Right\uff0cT*Scratch){auto pleft=DistributeForward(Left\uff0cRight\uff0cPivot\uff0cScratch)\uff1bif(right-pleft&lt\uff1b=kScratchSize){auto size=right-pleft\uff1bstd\uff1a\uff1amemcpy(pleft\uff0csccratch+kScratchSize-size\uff0csize*sizeof(T))\uff1breturn pleft\uff1b}Left=pleft+kScratchSize-size\uff0csize*sizeof(T))\uff1b\u8fd4\u56depleft\uff1b}Left=pleft+kScratchSize\u3002WHILE(TRUE){RIGHT=DistributeBackward(LEFT\uff0cRIGHT\uff0c\n\u4e0b\u4e00\u6b65\u662f\u77ed\u6570\u7ec4\u7684\u540e\u5907\uff0c\u5176\u4e2d\u9012\u5f52\u7684\u5f00\u9500\u5f00\u59cb\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u5728\u6587\u732e\u4e2d\uff0c\u6700\u5e38\u63a8\u8350\u7684\u662f\u63d2\u5165\u6392\u5e8f\u548c\u65e0\u6570\u7684\u5fae\u4f18\u5316\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u53d1\u73b0\u5206\u533a\u662f\u5982\u6b64\u4e4b\u5feb\uff0c\u4ee5\u81f3\u4e8e\u5feb\u901f\u6392\u5e8f\u6bd4\u63d2\u5165\u6392\u5e8f\u4e00\u76f4\u5230\u53ea\u6709\u51e0\u4e2a\u5143\u7d20\u3002\u95ee\u9898\u662f\u63d2\u5165\u6392\u5e8f\u6709\u4e0d\u53ef\u9884\u6d4b\u7684\u5206\u652f\uff0c\u57fa\u672c\u4e0a\u6bcf\u4e2a\u63d2\u5165\u67091\u4e2a\u672a\u547d\u4e2d\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5192\u6ce1\u6392\u5e8f\u3002\u5192\u6ce1\u6392\u5e8f\u662f\u4e00\u79cd\u975e\u5e38\u53ef\u9884\u6d4b\u7684\u8bbf\u95ee\u6a21\u5f0f\uff0c\u5e76\u4e14\u4ea4\u6362\u53ef\u4ee5\u65e0\u5206\u652f\u5730\u5b9e\u73b0\u3002\u518d\u4f18\u5316\u4e00\u70b9\uff0c\u60a8\u4f1a\u53d1\u73b0\u60a8\u4e0d\u9700\u8981\u4ea4\u6362\u3002Onecan\u5c06\u6700\u5927\u503c\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u5e76\u5b58\u50a8\u6700\u5c0f\u503c\u3002\nvoid BubbleSort(T*arr\uff0csize_t n){for(size_t i=n\uff1bi&gt\uff1b1\uff1bi--){auto max=arr[0]\uff1bfor(size_t j=1\uff1bj&lt\uff1bi\uff1bj++){auto y=arr[j]\uff1barr[j-1]=(max&lt\uff1b=y\uff1fmax\uff1ay)\uff1bmax=(max&lt\uff1b=y\uff1fy\uff1amax)\uff1b}arr[i-1]=max\uff1b}}\u3002\n\u5728\u4e0a\u9762\u7684\u5185\u5faa\u73af\u4e2d\uff0cmax\u662f\u53c2\u4e0e\u6700\u957f\u5faa\u73af\u627f\u8f7d\u7684\u6570\u636e\u94fe\u7684\u53d8\u91cf\uff0c\u5e76\u5728\u5176\u4e0a\u8fdb\u884c\u6bd4\u8f83\u548c\u6761\u4ef6\u79fb\u52a8\u3002\u8fd9\u4f7f\u5f97\u4e0a\u9762\u7684\u5faa\u73af\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u6267\u884c2\u4e2a\u5468\u671f\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u4e0d\u662f\u8ba9\u6700\u5927\u503c\u5192\u6ce1\uff0c\u6211\u4eec\u662f\u5728\u5192\u6ce1\u4e24\u4e2a\u6700\u5927\u7684\u5143\u7d20\uff0c\u6211\u4eec\u53ea\u9700\u8981\u91cd\u590d\u5192\u6ce1\u9636\u6bb5++n/2++\u6b21\uff0c\u800c\u4e0d\u662f++n++\u6b21\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4f7f\u7528\u4e00\u4e2a\u5de7\u5999\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a2\u4e2a\u5468\u671f\u4e2d\u5192\u6ce1\u4e24\u4e2a\u5143\u7d20\u3002\nvoid BubbleSort2(T*arr\uff0csize_t n){for(size_t i=n\uff1bi&gt\uff1b1\uff1bi-=2){auto x=arr[0]\uff1bauto y=arr[1]\uff1bif(y&lt\uff1bx)std\uff1a\uff1aexchange(x\uff0cy)\uff1bfor(size_t j=2\uff1bj&lt\uff1bi\uff1bj++){auto z=arr[j]\uff1bBOOL IS_SILEGER=y&lt\uff1b=z\uff1bAUTO w=IS_SIMPLETER\uff1fY\uff1aZ\uff1bY=IS_SIMPLETER\uff1fz\uff1ay\uff1b\u662f\u5426\u8f83\u5c0f=x&lt\uff1b=z arr[j-2]=(\u662f\u5426\u8f83\u5c0f\uff1fx\uff1az)\uff1bx=IS_SIMPLETER\uff1fw\uff1ax\uff1b}arr[i-2]=x\uff1barr[i-1]=y\uff1b}}\u3002\nbm_SmallSort&lt\uff1bexp_gerbens\uff1a\uff1aBubbleSort&gt\uff1b/2 2 ns 2 ns 400700000 bm_SmallSort&lt\uff1bexp_gerbens\uff1a\uff1aBubbleSort&gt\uff1b/8 5 ns 5 ns 155200000 BM_SmallSort&lt\uff1bexp_gerbens\uff1a\uff1aBubbleSort&gt\uff1b/32 14 ns 14 ns 52600000 BM_SmallSort&lt\uff1b/32 9 ns 9 ns 78400000 BM_SmallSort&lt\uff1b\u63d2\u5165\u6392\u5e8f&&gt;\uff1b/2 4 ns 4 ns 183600000 BM_SmallSort&gt\uff1b\u63d2\u5165\u6392\u5e8f&&gt;\uff1b/8 11 ns 11 ns 11 ns 63500000 BM_SmallSort&lt\uff1b\u63d2\u5165\u6392\u5e8f&&gt;\uff1b/32 17 ns 17 ns 17 ns 42000000\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u5bf9\u6b64\u8fdb\u884c\u63a8\u5e7f\uff0c\u5728CPU\u5177\u6709\u4efb\u610fILP\u7684\u6a21\u578b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fed\u4ee3\u7684\u9876\u90e8++N++\u975e\u5e38\u5faa\u73af\u4e0a\u5192\u6ce1\u3002\n\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u7ed3\u679c\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5bf9100000\u4e2a\u6574\u6570\u8fdb\u884c\u6392\u5e8f\u7684\u7b80\u5355\u57fa\u51c6\u3002\u65f6\u95f4\u7531\u5143\u7d20\u7684\u6570\u91cf\u5f52\u4e00\u5316\uff0c\u6240\u4ee5\u5b83\u662f\u6bcf\u4e2a\u5143\u7d20\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u6211\u5728\u8fd9\u91cc\u4f7f\u7528clang+libc++\uff0c\u56e0\u4e3aGCC\u5728\u53d1\u51fa\u5206\u652f\u514d\u8d39\u4ee3\u7801\u65b9\u9762\u660e\u663e\u66f4\u5dee\u3002\n\u5904\u7406\u5668\uff1a\u91c7\u7528\u8d85\u7ebf\u7a0b(36\u6838)\u7684\u82f1\u7279\u5c14Skylake Xeon DL1\uff1a32 KB DL2\uff1a1024KB DL3\uff1a24 MB\u57fa\u51c6\u6d4b\u8bd5\u65f6\u95f4(Ns)CPU(Ns)\u8fed\u4ee3--BM_SORT&lt\uff1bstd_SORT&gt\uff1b51.651.6 10000000 BM_SORT&lt\uff1bstd_STRATE_SORT&gt\uff1b65.65.6 10000000 BM_SORT&lt\uff1blib_qsort&gt\uff1b90.490.5 7800000 BM_SORT&lt\uff1bAndrei_SORT&gt\uff1b32.632.6 21500000 BM_SORT&lt\uff1bexp_gerbens\uff1a\uff1aQuickSort&gt\uff1b16.4 16.4 43200000\n\u6211\u4eec\u8bf4\u7684\u662f\u590d\u5236\u81ea\u5b89\u5fb7\u70c8\u7684\u5b9e\u73b0\u76842\u500d\u7684\u80dc\u5229\u3002\u8fd9\u4e9b\u4ee3\u7801\u53ef\u4ee5\u5728my GitHub\u4e0a\u627e\u5230\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u5305\u542b\u7531Andrei\u53d1\u5e03\u7684\u4ee3\u7801\u7684\u57fa\u51c6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5305\u542b\u8bb8\u53ef\u8bc1\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u89e3\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u5bf9\u4e8e\u4f18\u5316\u4ee3\u7801\u6709\u591a\u4e48\u91cd\u8981\u3002\u7279\u522b\u662f\u52a0\u8f7d\u548c\u5b58\u50a8\u4e4b\u95f4\u7684\u9690\u85cf\u5185\u5b58\u4f9d\u8d56\u5173\u7cfb\u4f1a\u6781\u5927\u5730\u5f71\u54cd\u5de5\u4f5c\u5faa\u73af\u7684\u6027\u80fd\u3002\u7406\u89e3\u4ee3\u7801\u7684\u6570\u636e\u4f9d\u8d56\u56fe\u901a\u5e38\u662f\u771f\u6b63\u7684\u6027\u80fd\u6536\u76ca\u6240\u5728\uff0c\u4f46\u5728\u535a\u5ba2\u5708\u5b50\u91cc\u5f88\u5c11\u6709\u4eba\u5173\u6ce8\u5b83\u3002\u6211\u8bfb\u8fc7\u5f88\u591a\u5173\u4e8e\u5206\u652f\u9884\u6d4b\u5931\u8bef\u7684\u5f71\u54cd\u3001\u6570\u636e\u5c40\u90e8\u6027\u548c\u7f13\u5b58\u7684\u91cd\u8981\u6027\u7684\u6587\u7ae0\uff0c\u4f46\u5173\u4e8e\u6570\u636e\u4f9d\u8d56\u6027\u7684\u6587\u7ae0\u8981\u5c11\u5f97\u591a\u3002\u6211\u6562\u6253\u8d4c\uff0c\u50cf\u8fd9\u6837\u7684\u95ee\u9898\u201c\u4e3a\u4ec0\u4e48\u94fe\u8868\u5f88\u6162\uff1f\u201d\u5728\u5c40\u90e8\u6027\u3001\u7f13\u5b58\u6216\u4e0d\u53ef\u9884\u6d4b\u7684\u968f\u673a\u5b58\u50a8\u5668\u8bbf\u95ee\u65b9\u9762\u5f97\u5230\u4e86\u8bb8\u591a\u4eba\u7684\u56de\u7b54\u3002\u81f3\u5c11\u6211\u7ecf\u5e38\u542c\u5230\u8fd9\u4e9b\u7406\u7531\uff0c\u5c31\u8fde\u65af\u7279\u52b3\u65af\u7279\u9c81\u666e\u4e5f\u8fd9\u4e48\u8bf4\u3002\u8fd9\u4e9b\u8d5b\u5b63\u53ef\u4ee5\u8d77\u5230\u4e00\u5b9a\u4f5c\u7528\uff0c\u4f46\u4e0d\u662f\u4e3b\u8981\u539f\u56e0\u3002\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u8fed\u4ee3\u94fe\u8868\u5728\u5173\u952e\u8def\u5f84\u4e0a\u6709\u4e00\u4e2a\u8981\u4f7f\u7528\u7684\u52a0\u8f7d\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6bd4\u8fed\u4ee3\u5e73\u9762\u6570\u7ec4\u61625\u500d\u3002\u6b64\u5916\uff0c\u8bbf\u95ee\u5e73\u9762\u9635\u5217\u5141\u8bb8\u5faa\u73af\u5c55\u5f00\uff0c\u8fd9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8ILP\u3002\n\u8fd9\u5c31\u5e26\u7ed9\u6211\u4eec\u4e00\u4e2a\u7b54\u6848\uff0c\u4e3a\u4ec0\u4e48\u5feb\u901f\u6392\u5e8f\u6bd4\u5176\u4ed6\u6392\u5e8f\u66f4\u5feb\uff0c\u7406\u8bba\u590d\u6742\u5ea6\u66f4\u597d\uff0c\u751a\u81f3\u66f4\u597d\u3002\u8fd9\u90fd\u662f\u5173\u4e8e\u6570\u636e\u4f9d\u8d56\u6027\u7684\uff0c\u4e0a\u9762\u7684\u5feb\u901f\u6392\u5e8f\u5206\u533a\u5faa\u73af\u5c55\u793a\u4e86\u4e00\u4e2a\u72ec\u7279\u7684\u7279\u6027\u3002\u5b83\u4e0b\u4e00\u6b65\u8981\u5904\u7406\u7684\u5143\u7d20\u4e0d\u4f9d\u8d56\u4e8e\u524d\u51e0\u6b21\u8fed\u4ee3\u4e2d\u7684\u6bd4\u8f83\u7ed3\u679c\u3002\u5c06\u6b64\u4e0e\u5408\u5e76\u6392\u5e8f\u8fdb\u884c\u6bd4\u8f83\u3002\u5728\u5408\u5e76\u6392\u5e8f\u4e2d\uff0c\u5c06\u6bd4\u8f83\u4e24\u4e2a\u5934\u5143\u7d20\uff0c\u4f46\u662f\u9700\u8981\u6bd4\u8f83\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u53d6\u51b3\u4e8e\u6b64\u6bd4\u8f83\u7684\u7ed3\u679c\u3002\u5b9e\u73b0\u65e0\u5408\u5e76\u6392\u5e8f\u5206\u652f\u975e\u5e38\u7b80\u5355\u3002\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u3002\nval1=\u52a0\u8f7d(LEFT+k-RIGHT_IDX)//1val2=\u52a0\u8f7d(RIGHT+RIGHT_IDX)is_Smaller=val2&lt\uff1bval1//2tmp=cmov(IS_Smaller\uff0cval2\uff0cval1)\u5b58\u50a8(Out+k\uff0ctmp)\uff1bk++\uff1bRight_IDX+=IS_Smaller//3\u3002\n\u8fd9\u5927\u7ea6\u662f\u6bcf\u6b21\u8fed\u4ee38\u4e2a\u5468\u671f\u6765\u66f4\u65b0RIGHT_IDX\uff0c\u6211\u4eec\u5728\u7b2c1\u884c\u6709\u4e00\u4e2aLOAD\u548c\u975e\u5e73\u51e1\u7d22\u5f15(6\u4e2a\u5468\u671f)\uff0c\u7b2c2\u884c\u548c\u7b2c3\u884c\u90fd\u662f1\u4e2a\u5468\u671f\u3002\u7c7b\u4f3c\u7684\u5206\u6790\u9002\u7528\u4e8e\u5806\u6392\u5e8f\uff0c\u6062\u590d\u5806\u5c5e\u6027\u8981\u6c42\u6bd4\u8f83\u6700\u5927\u7684\u5b50\u7ea7\u7684\u5b50\u6811\u4e0a\u7684\u4e24\u4e2a\u5b50\u7ea7\u548c\u9012\u5f52\u3002\nLEFT=\u52a0\u8f7d(2*IDX)RIGHT=\u52a0\u8f7d(2*IDX+1)IS_SILER=LEFT&lt\uff1bRIGHT TMP=cmov(IS_SIMPLER\uff0cRIGHT\uff0cLEFT)\u5b58\u50a8(IDX\uff0cTMP)\uff1bIDX=2*IDX+IS_SNORER\u3002\n\u540c\u6837\uff0c\u8fd9\u662f\u73af\u8def\u627f\u8f7d\u7684\u6570\u636e\u94fe\u4e0a\u76848\u4e2a\u5468\u671f\u3002\u8fd9\u5c31\u5207\u4e2d\u4e86\u4e3a\u4ec0\u4e48\u5feb\u901f\u6392\u5e8f\u901f\u5ea6\u5feb\u7684\u6838\u5fc3\u95ee\u9898\uff0c\u5c3d\u7ba1\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u4e0e\u5806\u548c\u5408\u5e76\u6392\u5e8f\u76f8\u6bd4\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u884c\u4e3a\u8f83\u5dee\u3002\u901a\u8fc7\u6784\u9020\u5806\u548c\u5408\u5e76\u6392\u5e8f\uff0c\u5728\u9690\u542b\u7684\u6811\u7ed3\u6784\u4e2d\u975e\u5e38\u5747\u5300\u5730\u5212\u5206\u6570\u636e\uff0c\u5806\u7ed3\u6784\u662f\u6700\u5c0f\u6df1\u5ea6\u7684\u4e8c\u53c9\u6811\uff0c\u5408\u5e76\u6392\u5e8f\u6267\u884c\u7684\u9012\u5f52\u7ec6\u5206\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u8fdb\u884c\u7684\u6bd4\u8f83\u6b21\u6570\u662f++n\\lg(N)++\uff0c\u7d27\u8d34\u7740\u4fe1\u606f\u7406\u8bba\u4e0b\u9650++\\lg(n\uff01)++\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5feb\u901f\u6392\u5e8f\u62bc\u6ce8\u4e8e\u4ee5\u9ad8\u6982\u7387\u83b7\u5f97\u5408\u7406\u5e73\u8861\u7684\u6811\u3002\u4ece\u4e0e\u67a2\u8f74\u7684\u6bd4\u8f83\u4e2d\u63d0\u53d6\u7684\u4fe1\u606f\u6bd4\u7279\u53d6\u51b3\u4e8e\u5b83\u5728\u6570\u7ec4\u4e2d\u7684\u6392\u540d\u3002\u53ea\u6709\u63a5\u8fd1\u4e2d\u503c\u7684\u67a2\u8f74\u624d\u4f1a\u5bfc\u81f4\u6bcf\u6b21\u6bd4\u8f83\u83b7\u5f971\u4f4d\u4fe1\u606f\u3002\u6c42\u89e3\u5177\u6709\u5747\u5300\u67a2\u8f74\u9009\u62e9\u7684\u5feb\u901f\u6392\u5e8f\u9012\u5f52\u65b9\u7a0b\uff0c\u7ed9\u51fa\u4e86++2n\\ln{n}++\u4f5c\u4e3a\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u3002\u56e0\u6b64\uff0c\u5feb\u901f\u6392\u5e8f\u6bd4\u5806\u6392\u5e8f\u6216\u5408\u5e76\u6392\u5e8f\u5e73\u5747\u6267\u884c\u56e0\u5b50++2\\ln(2)=1.4++\u66f4\u591a\u7684\u6bd4\u8f83\uff0c\u6216\u8005\u76f8\u5f53\u4e8e\u5185\u90e8\u5de5\u4f5c\u5faa\u73af\u4e2d\u66f4\u591a\u7684\u8fed\u4ee3\u3002\u7136\u800c\uff0c\u57fa\u672c\u5de5\u4f5c\u56de\u8def\u4e2d\u7684\u5de8\u5927\u901f\u5ea6\u5dee\u5f02\u8db3\u4ee5\u8865\u507f\u8fd9\u4e00\u4fe1\u606f\u7406\u8bba\u56e0\u7d20\u3002\n\u6b64\u5916\uff0c\u5728\u5bf9\u5927\u578b\u9635\u5217\u8fdb\u884c\u5206\u533a\u65f6\uff0c\u82b1\u8d39\u5c11\u91cf\u5de5\u4f5c\u6539\u8fdb\u65cb\u8f6c\u900f\u89c6\u9009\u9879\u7684\u4e2d\u4f4d\u6570\u4e3a3\uff0c\u53ef\u5c06\u6b64\u7cfb\u6570\u964d\u81f3\u7ea61.2\u3002\u6b64\u5916\uff0c\n..", "note_en": "Editor\u2019s note: For this blog entry I welcome my friend and colleague Gerben Stavengaas a guest author.\n Recently Andrei Alexandrescu published an interesting post about optimizingQuickSort using the Lomuto partition scheme. The essence of that post is thatfor many situations the performance of QuickSort is completely dominated bybranch mispredicts and that a big speed up can be achieved by writingbranchless code. This has been observed by many, and various branchlesssorting routines have been proposed. Andrei observed that from the two wellknown QuickSort partitioning schemes Lomuto is easily implemented branchless,and this indeed performs much better for sorting small primitives. I recentlyexperimented with similar ideas but took them in a different but interestingdirection. I discovered that a hybrid of the Hoare and Lomuto schemes can deliver a large improvement even compared with branchless Lomuto. And the final surprise is that Bubble Sort takes the crown for small arrays. The keyto all these wins is exploiting instruction-level parallelism and reducing dependency chains.\n  Quicksort refers to a class of algorithms for sorting an array that all share the same outline\n void  QuickSort ( T *  left ,  T *  right )  {  if  ( right  -  left  &gt;  kCutOff )  {  auto  pivot  =  ChoosePivotElement ( left ,  right );  // Important but not focus here  auto  p  =  Partition ( pivot ,  left ,  right );  // The main work loop  QuickSort ( left ,  p );  QuickSort ( p ,  right );  // Tail call, ideally the largest sub-interval  }  else  {  SortSmallArray ( left ,  right );  } }\n Countless variations exist varying in the choice of  kCutOff, choice of thesorting algorithm for the small arrays and choice of pivot element. These areimportant for performance but the main work QuickSort performs is done inthe  Partition function. There are two canonical schemes for implementing Partition: the original Hoare scheme and the Lomuto scheme. The Hoarepartition scheme works by swapping elements that violate the partition propertyfrom the front of the array with elements from the back of the array,processing the array from the outside inwards converging on the partition pointsomewhere in the middle.\n T *  HoarePartition ( T  pivot ,  T *  left ,  T *  right )  {  while  ( left  &lt;  right )  {  left  =  ScanForward ( pivot ,  left ,  right );  if  ( left  ==  right )  break ;  right  =  ScanBackward ( pivot ,  left ,  right );  if  ( left  ==  right )  break ;  swap ( * left ,  * right );  }  return  left ; }\n In contrast the Lomuto scheme processes the array from front to back,maintaining a properly partitioned array for the elements processed so far ateach step.\n T *  LomutoPartition ( T  pivot ,  T *  left ,  T *  right )  {  T *  p  =  left ;  for  ( auto  it  =  left ;  it  &lt;  right ;  it ++ )  {  if  ( * it  &lt;  pivot )  {  std :: swap ( * it ,  * p );  // Could be a self-swap  p ++ ;  }  }  return  p ; }\n A remarkably simple loop, with an additional property that it\u2019s stable withrespect to the ordering of the elements smaller than the pivot. It\u2019s easy tosee that the above loop can be implemented without conditional branches. Theconditional swapping can be implemented by conditional moves and theconditional pointer increase could be implemented as a unconditional  p += (*it&lt; pivot). Andrei\u2019s blog shows the performance gain of this simple branchlessloop over production quality implementations in various standard libraries.\n  Here I want to take the optimizations further and dive deeper into theperformance analysis of sorting algorithms. When conditional branching isremoved the performance of code tends to become much more stable and easier tounderstand, data dependencies become key. We are going to analyse the code interms of a self explanatory pseudo-assembly code, where named variables shouldbe thought of as CPU registers and loads/stores to memory are made explicit. Inthis notation the basic loop above becomes\n loop: val  =  Load ( it )  // 1 prev_val  =  Load ( p )  // 2 is_smaller  =  val  &lt;  pivot  // 3 valnew  =  cmov ( is_smaller ,  prev_val ,  val )  // 4 prev_val  =  cmov ( is_smaller ,  val ,  prev_val )  // 5 Store ( it ,  valnew )  // 6 Store ( p ,  prev_val )  // 7 p  +=  is_smaller  // 8 it ++  // 9 if  ( it  &lt;  right )  goto  loop\n How would it run on a parallel out-of order CPU? As a first approximation wecan pretend that the CPU is arbitrarily parallel, ie. it can execute unlimitedinstructions in parallel as long as the instructions are independent. What isimportant to understand is the loop carried dependency chains. They determinethe minimum latency a loop could possibly run. In the above code you see thatthe dependency between iterations of the loop are carried by  it and  p. Onlyline 8 and 9 participate on the loop carried chain and both are single cycleinstructions. So we determine that the loop could potentially run at athroughput of 1 cycle per iteration.\n   However this dependency analysis is not quite correct. There are also loads andstores to memory. If you store something to a certain memory address and laterload from that address you must read the value of the previous store. Thatmeans loads have dependencies on stores, or at least if the address overlaps.Here  it and  p are dynamic values and for sure they can overlap, depicted bythe dashed lines in the diagram above. So let\u2019s add the fact that there is adependency between the loads at line 1 and 2 on the stores of line 6 and 7.\n   This completely changes the game, now there is a long loop carried datadependency, lines 6 and 7 depend on lines 4 and 5, which both depend on line 3, which depend on the loads at lines 1 and 2, which potentially depend on thestores at lines 6 and 7 of the previous iteration. If we count the cycles, weget 5 cycles for the loads (loads itself can be done in parallel), 1 cycle forthe comparison, 1 cycle for the conditional move and 1 cycle for the store,hence this loop will run ~8 cycles. A far cry from the 1 cycle iterations ourcursory discussion indicated.\n Although it\u2019s not possible to reorder stores and loads in general it\u2019sessential for performance of a CPU to do so. Let\u2019s take a simple memcpy loop\n  If the load cannot be reordered with the previous store, this is a 5 + 1 = 6cycle latency loop. However in memcpy it\u2019s guaranteed that loads and storesnever overlap. If the CPU would instead reorder, the above loop would executewith a throughput of one iteration per cycle. It\u2019s execution would look like,ignoring the instructions needed for control flow.\n val_0  =  Load ( it_0 );  it_1  =  it_0  +  1 ;  // Cycle 1 val_1  =  Load ( it_1 );  it_2  =  it_1  +  1 ;  // Cycle 2 val_2  =  Load ( it_2 );  it_3  =  it_2  +  1 ;  // Cycle 3 val_3  =  Load ( it_3 );  it_4  =  it_3  +  1 ;  // Cycle 4 // The value of the load at cycle 1 becomes available. // From this point all instructions of the loop are executed each cycle. val_4  =  Load ( it_4 );  it_5  =  it_4  +  1 ;  Store ( val_0 );  // Cycle 5 val_5  =  Load ( it_5 );  it_6  =  it_5  +  1 ;  Store ( val_1 );  // Cycle 6\n In practice most of the stores preceding a load in the instruction stream arein fact to different addresses and it is possible to reorder loads in front ofstores. Therefore CPU\u2019s do reorder loads in front of stores, which is calledspeculative loading, however the effects of the load are only committed whenit\u2019s verified no store has invalidated the speculative load. If a precedingstore, in effect, invalidates the load, execution is rolled back to the loadand the CPU starts over. One can imagine that this is very costly and very akinto branch mispredicts. While a lot of stores and loads are to differentaddresses, there are also plenty of stores and loads to the same address, thinkabout register spills for example. Therefore the CPU uses a prediction modelbased on instruction address to determine if a load has a dependency onprevious stores. In general the CPU is pretty conservative, the cost of a wrongreordering is very high. In the code above the CPU will encounter loads fromthe same address as recent stores and will be hesitant to do the necessaryre-ordering.\n  Looking closer it\u2019s the load from  p that is problematic. The load from  itis in fact always from a different address than the previous stores.Furthermore the load at  p is also responsible for a lot of extra work in theloop. It is necessary as otherwise the store at  p will corrupt values in thearray. The values that are overwritten are values previously encountered in thescan and are those elements that are larger than the pivot. If instead we wouldsave these values in a temporary buffer there is no need to swap.\n // Distributes the elements [left, right) into begin of left and from end of // scratch buffer  T *  DistributeForward ( T  pivot ,  T *  left ,  T *  right ,  T *  scratch )  {  auto  scratch_end  =  scratch  +  kScratchSize  -  1 ;  ptrdiff_t  offset  =  0 ;  for  ( auto  it  =  left ;  it  &lt;  right ;  it ++ )  {  auto  val  =  * it ;  bool  is_larger  =  val  &gt;=  pivot ;  auto  dst  =  is_larger  ?  scratch_end  :  it ;  dst [ offset ]  =  val ;  offset  -=  is_larger ;  }  return  right  +  offset ; } T *  ModifiedLomutoPartition ( T  pivot ,  T *  left ,  T *  right ,  T *  scratch )  {  auto  p  =  DistributeForward ( pivot ,  left ,  right ,  scratch );  // To complete the partition we need to copy the elements in scratch  // to the end of the array.  auto  size  =  right  -  p ;  memcpy ( p ,  scratch  +  kScratchSize  -  size ,  size  *  sizeof ( T ));  return  p ; }\n This is a much simpler loop, only one load and one store per iteration. Moreimportantly the load will never clash with a previous store. This loop runsmuch faster than the original loop, it\u2019s not 1 cycle per iteration but 2.5cycles on my machine. This is indicative that it\u2019s saturating the ILP of theCPU. Unfortunately the above code is not in-place anymore, it requires O(n)additional memory for the scratch buffer.\n    If instead we use a smallish fixed size temporary buffer, we can still use theabove code except we need to abort when the fixed buffer is full. What do we dothen? The function returned the partition point  p where it left the loop. Atthis point  [left, p) have the correct elements smaller than pivot at the frontof the array. The scratch buffer is full with elements larger or equal to pivotand  [p, p + kScratchSize) contains information we don\u2019t need anymore. Theidea is that we can do the same algorithm but backwards, we can use  [p, p +kScratchSize) as a temporary buffer. Notice how  DistributeForward()fills the scratch buffer from back to front; the backwards version would fillthe scratch from front to back. So performing  DistributeBackwards() using theinterval  [p, p + kScratchSize) as scratch will neatly pack all smallerelements encountered to the correct place. This continues until the scratchspace is full, but now a new scratch space at the end of the array opened up.Wait, this looks like Hoare\u2019s algorithm but hybridized with the Lomuto-inspireddistribute function.\n T *  ModifiedHoarePartition ( T  pivot ,  T *  left ,  T *  right ,  T *  scratch )  {  auto  pleft  =  DistributeForward ( left ,  right ,  pivot ,  scratch );  if  ( right  -  pleft  &lt;=  kScratchSize )  {  auto  size  =  right  -  pleft ;  std :: memcpy ( pleft ,  scratch  +  kScratchSize  -  size ,  size  *  sizeof ( T ));  return  pleft ;  }  left  =  pleft  +  kScratchSize ;  T *  res ;  while  ( true )  {  right  =  DistributeBackward ( left ,  right ,  pivot ,  left  -  kScratchSize )  -  kScratchSize ;  if  ( right  &lt;=  left )  {  res  =  right ;  break ;  }  left  =  DistributeForward ( left ,  right ,  pivot ,  right )  +  kScratchSize ;  if  ( right  &lt;=  left )  {  res  =  left  -  kScratchSize ;  break ;  }  }  std :: memcpy ( res ,  scratch ,  kScratchSize  *  sizeof ( T ));  return  res ; }\n What we are ending up with is an in-place algorithm that\u2019s almost branchfree.The precise number of iterations in the modified Lomuto partitioning schemedepend on the outcome of the comparisons and will be difficult to predictexactly right. However the loop is guaranteed to iterate at least kScratchSizetimes. This basically amortises the cost of branch mispredictions over manyelements making them irrelevant for performance. I consider this to be a trulyelegant design.\n  The next step is the fallback for short arrays where the overhead of recursionstarts dominating. In the literature insertion sort is most often recommendedtogether with countless micro-optimizations applied. I found that at this pointpartitioning was so fast that QuickSort beat insertion sort all the way down tojust a few elements. The problem is that insertion sort has unpredictablebranches, basically 1 miss per insert. The solution is Bubble sort. Bubble sorthas a very predictable access pattern and the swap can be implementedbranchless. A little more optimizing you discover you don\u2019t need a swap. Onecan keep the maximum in register and store the minimum.\n void  BubbleSort ( T *  arr ,  size_t  n )  {  for  ( size_t  i  =  n ;  i  &gt;  1 ;  i -- )  {  auto  max  =  arr [ 0 ];  for  ( size_t  j  =  1 ;  j  &lt;  i ;  j ++ )  {  auto  y  =  arr [ j ];  arr [ j  -  1 ]  =  ( max  &lt;=  y  ?  max  :  y );  max  =  ( max  &lt;=  y  ?  y  :  max );  }  arr [ i  -  1 ]  =  max ;  } }\n In the above inner-loop  max is the variable that participates on the longestloop carried data chain, with a compare and conditional move on it. This makesthe above loop execute in 2 cycles per iteration. However we can do better. Ifinstead of bubbling the max, we\u2019re bubbling up the two largest elements we onlyneed to iterate the bubbling stage ++n/2++ times, instead of ++n++ times. Itturns out that using a clever implementation one can bubble two elements in thesame 2 cycles.\n void  BubbleSort2 ( T *  arr ,  size_t  n )  {  for  ( size_t  i  =  n ;  i  &gt;  1 ;  i  -=  2 )  {  auto  x  =  arr [ 0 ];  auto  y  =  arr [ 1 ];  if  ( y  &lt;  x )  std :: swap ( x ,  y );  for  ( size_t  j  =  2 ;  j  &lt;  i ;  j ++ )  {  auto  z  =  arr [ j ];  bool  is_smaller  =  y  &lt;=  z ;  auto  w  =  is_smaller  ?  y  :  z ;  y  =  is_smaller  ?  z  :  y ;  is_smaller  =  x  &lt;=  z  arr [ j  -  2 ]  =  ( is_smaller  ?  x  :  z );  x  =  is_smaller  ?  w  :  x ;  }  arr [ i  -  2 ]  =  x ;  arr [ i  -  1 ]  =  y ;  } }\n  BM_SmallSort &lt; exp_gerbens :: BubbleSort &gt;/ 2  2  ns  2  ns  400700000 BM_SmallSort &lt; exp_gerbens :: BubbleSort &gt;/ 8  5  ns  5  ns  155200000 BM_SmallSort &lt; exp_gerbens :: BubbleSort &gt;/ 32  14  ns  14  ns  52600000 BM_SmallSort &lt; exp_gerbens :: BubbleSort2 &gt;/ 2  1  ns  1  ns  514500000 BM_SmallSort &lt; exp_gerbens :: BubbleSort2 &gt;/ 8  3  ns  3  ns  256700000 BM_SmallSort &lt; exp_gerbens :: BubbleSort2 &gt;/ 32  9  ns  9  ns  78400000 BM_SmallSort &lt; InsertionSort &gt;/ 2  4  ns  4  ns  183600000 BM_SmallSort &lt; InsertionSort &gt;/ 8  11  ns  11  ns  63500000 BM_SmallSort &lt; InsertionSort &gt;/ 32  17  ns  17  ns  42000000\n In fact it\u2019s possible to generalize this, one can bubble up the top ++N++ inconstant cycles per iteration in the model where the CPU has arbitrary ILP.\n  What are the results? The results are nothing short of spectacular. Thefollowing is a simple benchmark on sorting 100000 int\u2019s. The time is normalizedby the number of elements, so it\u2019s the amount of time spent per element. I\u2019musing clang + libc++ here, as gcc is dramatically worse in emitting branch freecode.\n CPU:  Intel  Skylake  Xeon  with  HyperThreading  ( 36  cores )  dL1 : 32 KB  dL2 : 1024 KB  dL3 : 24 MB Benchmark  Time ( ns )  CPU ( ns )  Iterations ------------------------------------------------------------------------ BM_Sort &lt; std_sort &gt;  51.6  51.6  10000000 BM_Sort &lt; std_stable_sort &gt;  65.6  65.6  10000000 BM_Sort &lt; lib_qsort &gt;  90.4  90.5  7800000 BM_Sort &lt; andrei_sort &gt;  32.6  32.6  21500000 BM_Sort &lt; exp_gerbens :: QuickSort &gt;  16.4  16.4  43200000\n We\u2019re talking about a 2x win over Andrei\u2019s implementation as copied from hisgithub. The code is available at my  GitHub,although it doesn\u2019t contain benchmarks for the code as published by Andrei asit didn\u2019t contain a license.\n We\u2019ve seen how crucial it is to understand data dependencies in order tooptimize code. Especially hidden memory dependencies between load and storescan greatly influence performance of work loops. Understanding the datadependency graph of code is often where the real performance gains lie, yetvery little attention is given to it in the blogosphere. I\u2019ve read manyarticles about the impact of branch mispredictions, importance of data localityand caches, but much less about data dependencies. I bet that a question like\u201cwhy are linked lists slow?\u201d is answered by many in terms of locality, cachesor unpredictable random memory access. At least I\u2019ve heard those reasons often,even  Stroustrup says as much. Thosereasons can play a part, but it\u2019s not the main reason. Fundamentally iteratinga linked list has a load-to-use on the critical path, making it 5 times slowerthan iterating a flat array. Furthermore accessing flat arrays allow loopunrolling which can further improve ILP.\n  This brings us to answer why QuickSort is fast compared to other sorts withgood or even better theoretical complexity. It\u2019s all about data dependencies.The quick sort partition loop above demonstrates a distinctive feature. Theelement it will process next does not depend on the outcome of the comparisonsin previous iterations. Compare this to merge sort. In merge sort the two headelements are compared, however the next elements that need to be compareddepend on the outcome of this comparison. It\u2019s trivial to implement merge sortbranch free. It will look like\n val1  =  Load ( left  +  k  -  right_idx )  // 1 val2  =  Load ( right  +  right_idx ) is_smaller  =  val2  &lt;  val1  // 2 tmp  =  cmov ( is_smaller ,  val2 ,  val1 ) Store ( out  +  k ,  tmp ); k ++ ; right_idx  +=  is_smaller  // 3\n This is about 8 cycles per iteration to update  right_idx, we have a load andnon-trivial indexing at line 1 (6 cycles), and line 2 and 3 both being 1 cycle.Similar analysis holds for heap sort, restoring the heap property requirescomparing the two children and recurse on the subtree of the biggest child.\n left  =  Load ( 2  *  idx ) right  =  Load ( 2  *  idx  +  1 ) is_smaller  =  left  &lt;  right tmp  =  cmov ( is_smaller ,  right ,  left ) Store ( idx ,  tmp ); idx  =  2  *  idx  +  is_smaller\n Again this is 8 cycles on the loop carried data chain. This goes to the heartof the matter of why QuickSort is fast even though theoretically it hasinferior behavior compared to heap and merge sort. By construction heap andmerge sort divide the data very evenly in the implied tree structure, the heapstructure is a binary tree of minimum depth as is the recursive subdivisionthat merge sort performs. This means that the number of comparisons they do is++n \\lg(n)++ which tightly hugs the information theoretical lower bound of++\\lg(n!)++.\n In contrast, QuickSort bets on obtaining a reasonably balanced tree with highprobability. The bits of information extracted from a comparison with the pivotdepends on its rank in the array. Only pivots that are close to the median willresult in obtaining 1 bit of information per comparison. Solving the recurrenceequation of QuickSort with a uniform pivot choice, gives ++2n \\ln{n}++ as thenumber of comparisons on average. Hence QuickSort does a factor ++2 \\ln(2) =1.4++ more comparisons than heap sort or merge sort on average, or equivalentlymore iterations in the inner work loop. However the enormous speed differencein the basic work loop more than compensates for this information theoreticalfactor.\n Also, when partitioning big arrays spending a little amount of work improvingthe choice of pivot by a median of three brings this factor down to ~1.2.Further im\n......", "posttime": "2020-05-31 02:53:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53cd\u9a73,rebuttal,\u52a0\u8f7d", "title": "\u970d\u5c14\u7684\u53cd\u9a73\u548c\u6ce1\u6ce1\u6392\u5e8f\u7684\u5377\u571f\u91cd\u6765", "title_en": "Hoare\u2019s Rebuttal and Bubble Sort\u2019s Comeback", "transed": 1, "url": "https://blog.reverberate.org/2020/05/29/hoares-rebuttal-bubble-sorts-comeback.html", "via": "", "real_tags": ["\u53cd\u9a73", "rebuttal", "\u52a0\u8f7d"]}, {"category": "", "categoryclass": "", "imagename": "3a99cda09484cab9941214d8b102e1f7.jpg", "infoid": 1004428, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e94\u665a\u4e9b\u65f6\u5019\uff0c\u6700\u9ad8\u6cd5\u9662\u9a73\u56de\u4e86\u52a0\u5dde\u4e00\u5bb6\u6559\u5802\u5bf9\u8be5\u5dde\u4e0e\u6d41\u884c\u75c5\u76f8\u5173\u7684\u793c\u62dc\u670d\u52a1\u65b0\u89c4\u5b9a\u7684\u6311\u6218\uff0c\u9996\u5e2d\u5927\u6cd5\u5b98\u5c0f\u7ea6\u7ff0\u00b7G\u00b7\u7f57\u4f2f\u8328(John G.Roberts Jr.)\u3002\u4ee55\u6bd44\u7684\u6295\u7968\u7ed3\u679c\u52a0\u5165\u6700\u9ad8\u6cd5\u9662\u7684\u81ea\u7531\u6d3e\u9635\u8425\u3002\n\u7f57\u4f2f\u8328\u5199\u9053\uff0c\u52a0\u5dde\u5dde\u957f\u52a0\u6587\u00b7\u7ebd\u745f\u59c6(Gavin Newsom\uff0cD)\u7b49\u5dde\u5b98\u5458\u6709\u65bd\u52a0\u9650\u5236\u4ee5\u9632\u6b62\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u7684\u56de\u65cb\u4f59\u5730\uff0c\u5e76\u6ca1\u6709\u6311\u51fa\u4e0d\u516c\u5e73\u5f85\u9047\u7684\u793c\u62dc\u573a\u6240\u3002\n\u7f57\u4f2f\u8328\u5199\u9053\uff1a\u201c\u8ba4\u4e3a\u653f\u5e9c\u7684\u9650\u5236\u662f\u8fdd\u5baa\u7684\u2018\u65e0\u53ef\u4e89\u8fa9\u5730\u6e05\u695a\u2019\u7684\u60f3\u6cd5\u4f3c\u4e4e\u76f8\u5f53\u4e0d\u53ef\u80fd\u3002\u201d\u4ed6\u6307\u7684\u662f\u6311\u6218\u8005\u5fc5\u987b\u8fbe\u5230\u7684\u6807\u51c6\uff0c\u624d\u80fd\u4e0b\u4ee4\u6267\u884c\u56fd\u5bb6\u547d\u4ee4\u3002\n\u5927\u6cd5\u5b98\u9732\u4e1d\u00b7\u5df4\u5fb7\u00b7\u91d1\u65af\u4f2f\u683c(Ruth Bader Ginsburg)\u3001\u65af\u8482\u82ac\u00b7G\u00b7\u5e03\u96f7\u8036(Stephen G.Breyer\u3002\n\u6700\u9ad8\u6cd5\u9662\u56db\u540d\u6700\u4e00\u81f4\u7684\u4fdd\u5b88\u6d3e\u4eba\u58eb\u8868\u793a\uff0c\u4ed6\u4eec\u4f1a\u6279\u51c6\u8fd9\u4e00\u8bf7\u6c42\uff0c\u56e0\u4e3a\u8be5\u5dde\u7684\u65b0\u89c4\u5219\u53ef\u80fd\u8fdd\u53cd\u4e86\u5baa\u6cd5\u5bf9\u5b97\u6559\u81ea\u7531\u6d3b\u52a8\u7684\u4fdd\u62a4\u3002\n\u5927\u6cd5\u5b98\u5e03\u96f7\u7279\u00b7M\u00b7\u5361\u74e6\u8bfa(Brett M.Kavanaugh)\u5199\u9053\uff0c\u201c\u52a0\u5dde\u6700\u65b0\u7684\u5b89\u5168\u6307\u5bfc\u65b9\u9488\u6b67\u89c6\u793c\u62dc\u573a\u6240\uff0c\u652f\u6301\u7c7b\u4f3c\u7684\u4e16\u4fd7\u4f01\u4e1a\u3002\u201d\u201c\u8fd9\u79cd\u6b67\u89c6\u8fdd\u53cd\u4e86\u7b2c\u4e00\u4fee\u6b63\u6848\u3002\u201d\n\u6cd5\u5b98\u514b\u62c9\u4f26\u65af\u00b7\u6258\u9a6c\u65af(Clarence Thomas)\u548c\u5c3c\u5c14\u00b7M\u00b7\u6208\u8428\u5947(Neil M.Gorso)\u52a0\u5165\u4e86\u5361\u74e6\u8bfa\u7684\u5f02\u8bae\u3002\u6cd5\u9662\u7684\u547d\u4ee4\u8bf4\uff0c\u5927\u6cd5\u5b98\u5c0f\u585e\u7f2a\u5c14\u00b7A\u00b7\u963f\u5229\u6258(Samuel A.Alito Jr.)\u3002\u4e5f\u4f1a\u540c\u610f\u6559\u4f1a\u7684\u8bf7\u6c42\uff0c\u4f46\u4ed6\u6ca1\u6709\u52a0\u5165\u5361\u74e6\u8bfa\u7684\u58f0\u660e\u3002\n\u5b97\u6559\u7ec4\u7ec7\u6025\u4e8e\u66f4\u5feb\u5730\u91cd\u65b0\u5f00\u653e\uff0c\u5e76\u51cf\u5c11\u4e0e\u5927\u6d41\u884c\u76f8\u5173\u7684\u9650\u5236\uff0c\u4e00\u76f4\u5728\u8981\u6c42\u6cd5\u9662\u4ecb\u5165\uff0c\u4f46\u8fd9\u662f\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u7ed9\u6700\u9ad8\u6cd5\u9662\u7684\u6848\u4ef6\u3002\n\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u53e6\u4e00\u8d77\u4e89\u8bae\u8f83\u5c0f\u7684\u6848\u4ef6\u4e2d\uff0c\u6cd5\u9662\u5728\u6ca1\u6709\u6307\u51fa\u5f02\u8bae\u7684\u60c5\u51b5\u4e0b\u62d2\u7edd\u4e86\u829d\u52a0\u54e5\u9644\u8fd1\u6559\u5802\u7684\u4e00\u9879\u8bf7\u6c42\u3002\n\u5728\u8fd9\u4e24\u4e2a\u5dde\uff0c\u5dde\u957f\u6700\u8fd1\u90fd\u53d6\u6d88\u4e86\u4e00\u4e9b\u9650\u5236\uff0c\u5e76\u540c\u610f\u5728\u57fa\u7763\u6559\u5723\u65e5\u4e94\u65ec\u8282\u5468\u65e5\u5141\u8bb8\u9762\u5bf9\u9762\u793c\u62dc\u7684\u8bf7\u6c42\u3002\n\u66f4\u5927\u7684\u95ee\u9898\u662f\uff0c\u653f\u5e9c\u63a7\u5236\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u7684\u8d23\u4efb\u5982\u4f55\u9002\u7528\u4e8e\u6559\u5802\u3001\u72b9\u592a\u6559\u5802\u548c\u6e05\u771f\u5bfa\uff0c\u4ee5\u53ca\u5baa\u6cd5\u4fdd\u62a4\u7684\u793c\u62dc\u6743\u5229\u3002\n\u4e0a\u5468\uff0c\u7279\u6717\u666e\u603b\u7edf\u547c\u5401\u5168\u56fd\u5404\u5730\u7684\u5dde\u957f\u5141\u8bb8\u793c\u62dc\u573a\u6240\u7acb\u5373\u91cd\u65b0\u5f00\u653e\uff0c\u79f0\u5176\u4e3a\u201c\u57fa\u672c\u670d\u52a1\u201d\u3002\n\u5c3d\u7ba1\u6240\u6709\u5dde\u90fd\u5728\u91c7\u53d6\u884c\u52a8\u653e\u677e\u9650\u5236\uff0c\u4f46\u8d1d\u514b\u7279\u5b97\u6559\u81ea\u7531\u57fa\u91d1\u4f1a\u8868\u793a\uff0c21\u4e2a\u5dde\u4ecd\u7136\u65bd\u52a0\u4e86\u4e00\u4e9b\u9650\u5236\u3002\n\u4f46\u6b63\u5982\u6700\u9ad8\u6cd5\u9662\u7684\u8bc9\u8bbc\u6240\u663e\u793a\u7684\u90a3\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u79fb\u52a8\u7684\u76ee\u6807\u3002\u81ea\u4ece\u5723\u5730\u4e9a\u54e5\u9644\u8fd1\u7684\u5357\u6e7e\u4e94\u65ec\u8282\u6d3e\u6559\u4f1a\u548c\u829d\u52a0\u54e5\u9644\u8fd1\u7684\u57c3\u5229\u59c6\u7f57\u9a6c\u5c3c\u4e9a\u4e94\u65ec\u8282\u6d3e\u6559\u4f1a\u548c\u5fbd\u7ae0\u6d78\u793c\u4f1a\u7267\u5e08\u63d0\u4ea4\u8bf7\u613f\u4e66\u4ee5\u6765\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u548c\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7684\u5dde\u957f\u5df2\u7ecf\u653e\u677e\u4e86\u9650\u5236\u3002\n\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5dde\u957fJay Pritzker(D)\u53d6\u6d88\u4e86\u8be5\u5dde\u5bf910\u4eba\u4ee5\u4e0a\u96c6\u4f1a\u7684\u7981\u4ee4\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u7ebd\u745f\u59c6\u8868\u793a\uff0c\u6559\u5802\u53ef\u4ee5\u4e3e\u884c\u4eea\u5f0f\uff0c\u53ea\u8981\u4e0d\u8d85\u8fc7\u8bbe\u65bd\u5bb9\u91cf\u768425%\u6216100\u4eba\uff0c\u4ee5\u8f83\u5c0f\u8005\u4e3a\u51c6\u3002\n\u7f57\u4f2f\u8328\u8bf4\uff0c\u5bf9\u793c\u62dc\u573a\u6240\u7684\u9650\u5236\u5f15\u53d1\u4e86\u5baa\u6cd5\u95ee\u9898\uff0c\u4f46\u52a0\u5dde\u5e76\u6ca1\u6709\u8868\u73b0\u51fa\u5bf9\u5b83\u4eec\u7684\u504f\u89c1\u3002\n\u201c\u7c7b\u4f3c\u6216\u66f4\u4e25\u683c\u7684\u9650\u5236\u4e5f\u9002\u7528\u4e8e\u7c7b\u4f3c\u7684\u4e16\u4fd7\u96c6\u4f1a\uff0c\u5305\u62ec\u6f14\u8bb2\u3001\u97f3\u4e50\u4f1a\u3001\u7535\u5f71\u653e\u6620\u3001\u89c2\u4f17\u4f53\u80b2\u548c\u620f\u5267\u8868\u6f14\uff0c\u5728\u8fd9\u4e9b\u96c6\u4f1a\u4e2d\uff0c\u5927\u91cf\u7684\u4eba\u4f1a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u8fd1\u8ddd\u79bb\u805a\u96c6\uff0c\u201d\u9996\u5e2d\u5927\u6cd5\u5b98\u5199\u9053\u3002\n\u52a0\u5dde\u7684\u547d\u4ee4\u201c\u53ea\u5bf9\u4e0d\u540c\u7684\u6d3b\u52a8\u7ed9\u4e88\u8c41\u514d\u6216\u66f4\u5bbd\u677e\u7684\u5bf9\u5f85\uff0c\u6bd4\u5982\u7ecf\u8425\u6742\u8d27\u5e97\u3001\u94f6\u884c\u548c\u81ea\u52a9\u6d17\u8863\u5e97\uff0c\u5728\u8fd9\u4e9b\u6d3b\u52a8\u4e2d\uff0c\u4eba\u4eec\u65e2\u4e0d\u4f1a\u805a\u96c6\u6210\u5927\u7fa4\uff0c\u4e5f\u4e0d\u4f1a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u4fdd\u6301\u5bc6\u5207\u63a5\u89e6\u3002\u201d\n\u7f57\u4f2f\u8328\u8bf4\uff0c\u5728\u201c\u5f53\u5730\u5b98\u5458\u6b63\u5728\u79ef\u6781\u5851\u9020\u4ed6\u4eec\u5bf9\u5f53\u5730\u4e0d\u65ad\u53d8\u5316\u7684\u4e8b\u5b9e\u7684\u53cd\u5e94\u201d\u4e4b\u9645\uff0c\u6cd5\u9662\u7ed9\u4e88\u6559\u4f1a\u7d27\u6025\u6551\u6d4e\u662f\u4e0d\u5408\u9002\u7684\u3002\n\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5bf9\u7279\u5b9a\u793e\u4f1a\u6d3b\u52a8\u7684\u9650\u5236\u5e94\u8be5\u4f55\u65f6\u89e3\u9664\u7684\u786e\u5207\u95ee\u9898\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u3001\u4e8b\u5b9e\u5bc6\u96c6\u7684\u95ee\u9898\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5408\u7406\u7684\u5206\u6b67\u201d\uff0c\u4f46\u5baa\u6cd5\u5c06\u8fd9\u4e00\u95ee\u9898\u59d4\u6258\u7ed9\u6700\u63a5\u8fd1\u60c5\u51b5\u7684\u6c11\u9009\u5b98\u5458\u3002\n\u4ed6\u63f4\u5f15\u6cd5\u9662\u7684\u5148\u4f8b\u5199\u9053\uff1a\u201c\u4ed6\u4eec\u4e0d\u5e94\u8be5\u53d7\u5230\u2018\u975e\u9009\u4e3e\u4ea7\u751f\u7684\u8054\u90a6\u53f8\u6cd5\u673a\u6784\u2019\u7684\u4e8b\u540e\u6279\u8bc4\uff0c\u540e\u8005\u7f3a\u4e4f\u8bc4\u4f30\u516c\u5171\u536b\u751f\u7684\u80cc\u666f\u3001\u80fd\u529b\u548c\u4e13\u4e1a\u77e5\u8bc6\uff0c\u4e5f\u4e0d\u5bf9\u4eba\u6c11\u8d1f\u8d23\u3002\u201d\n\u4ed6\u5199\u9053\uff1a\u201c\u57fa\u672c\u7684\u5baa\u6cd5\u95ee\u9898\u662f\uff0c\u7c7b\u4f3c\u7684\u4e16\u4fd7\u4f01\u4e1a\u4e0d\u53d725%\u7684\u5165\u4f4f\u7387\u4e0a\u9650\u9650\u5236\uff0c\u5305\u62ec\u5de5\u5382\u3001\u529e\u516c\u5ba4\u3001\u8d85\u5e02\u3001\u9910\u9986\u3001\u96f6\u552e\u5e97\u3001\u836f\u5e97\u3001\u8d2d\u7269\u4e2d\u5fc3\u3001\u5ba0\u7269\u7f8e\u5bb9\u5e97\u3001\u4e66\u5e97\u3001\u82b1\u5e97\u3001\u7f8e\u53d1\u6c99\u9f99\u548c\u5927\u9ebb\u836f\u623f\u3002\u201d\n\u6559\u4f1a\u7684\u6cd5\u5f8b\u7b80\u62a5\u8bf4\uff1a\u201c\u53ea\u6709\u4e00\u4e2a\u884c\u4e1a\u670925%\u7684\u80fd\u529b\uff0c\u6216\u8005\u8bf4\u662f100\u4eba\u7684\u793c\u62dc\u5e3d\u5c4b\u3002\u201d\u5982\u679c\u52a0\u5dde\u9650\u5236\u96c6\u4f1a\u7684\u5229\u76ca\u4e0d\u591f\u91cd\u8981\uff0c\u4e0d\u8db3\u4ee5\u5bf9\u5176\u4ed6\u884c\u4e1a\u5f3a\u5236\u6267\u884c\uff0c\u90a3\u4e48\u5b83\u4e5f\u4e0d\u591f\u91cd\u8981\uff0c\u4e0d\u8db3\u4ee5\u5bf9\u6559\u4f1a\u5f3a\u5236\u6267\u884c\u3002\n\u7f8e\u56fd\u7b2c\u4e5d\u5de1\u56de\u4e0a\u8bc9\u6cd5\u9662\u7684\u4e00\u4e2a\u966a\u5ba1\u56e2\u4ee52\u6bd41\u7684\u6295\u7968\u7ed3\u679c\u9a73\u56de\u4e86\u6559\u4f1a\u7684\u8bf7\u613f\u3002\n\u6cd5\u9662\u8bf4\uff1a\u201c\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u662f\u4e00\u79cd\u4f20\u67d3\u6027\u5f88\u9ad8\uff0c\u800c\u4e14\u5f80\u5f80\u662f\u81f4\u547d\u7684\u75be\u75c5\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u5df2\u77e5\u7684\u6cbb\u7597\u65b9\u6cd5\u3002\u201d\u201c\u7528\u5927\u6cd5\u5b98\u7f57\u4f2f\u7279\u00b7\u6770\u514b\u900a(Robert Jackson)\u7684\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u2018\u6cd5\u9662\u2019\u4e0d\u7528\u4e00\u70b9\u5b9e\u8df5\u667a\u6167\u6765\u7f13\u548c\u5176\u6559\u6761\u903b\u8f91\uff0c\u5b83\u5c31\u4f1a\u628a\u5baa\u6cd5\u4e0a\u7684\u201d\u6743\u5229\u6cd5\u6848\u201c\u53d8\u6210\u4e00\u4efd\u81ea\u6740\u534f\u5b9a\u3002\u201d\u2009\u3002\n\u7136\u800c\uff0c\u81ea\u4ece\u6cd5\u9662\u505a\u51fa\u88c1\u51b3\u540e\uff0c\u7ebd\u745f\u59c6\u53d1\u5e03\u4e86\u65b0\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u5141\u8bb8\u5357\u6e7e\u5468\u65e5\u5f00\u653e\u3002\n\u4e0d\u8fc7\uff0c\u8be5\u5dde\u8fa9\u79f0\uff0c\u5ef6\u957f\u9650\u5236\u662f\u6709\u5145\u5206\u7406\u7531\u7684\u3002\u5b83\u7684\u4e13\u5bb6\u4f5c\u8bc1\u8bf4\uff0c\u201c\u6709\u591a\u4e2a\u62a5\u544a\u8bf4\uff0c\u6709\u5927\u91cf\u7684\u5927\u578b\u96c6\u4f1a\uff0c\u5982\u5b97\u6559\u4eea\u5f0f\uff0c\u5408\u5531\u56e2\u7ec3\u4e60\uff0c\u846c\u793c\u548c\u6d3e\u5bf9\uff0c\u5bfc\u81f4\u65b0\u51a0\u80ba\u708e\u7684\u663e\u8457\u4f20\u64ad\u3002\u201d\n\u8fd9\u5176\u4e2d\u5305\u62ec\uff1a\u201c\u8428\u514b\u62c9\u95e8\u6258\u7684\u4e00\u6b21\u793c\u62dc\u4eea\u5f0f\u4e0e71\u4f8b\u65b0\u51a0\u80ba\u708e\u75c5\u4f8b\u6709\u5173\uff1b\u897f\u96c5\u56fe\u7684\u4e00\u6b21\u5408\u5531\u56e2\u5b9e\u8df5\u4e0e32\u4f8b\u75c5\u4f8b\u6709\u5173\uff1b\u80af\u5854\u57fa\u5dde\u7684\u4e00\u6b21\u6559\u5802\u590d\u5174\u4e0e28\u4f8b\u75c5\u4f8b\u6709\u5173\uff1b\u4ee5\u53ca\u97e9\u56fd\u7684\u4e00\u6b21\u5b97\u6559\u4eea\u5f0f\uff0c\u8d85\u8fc75,000\u4f8b\u75c5\u4f8b\u88ab\u8ffd\u6eaf\u5230\u4e00\u540d\u5728\u573a\u7684\u611f\u67d3\u8005\u8eab\u4e0a\u3002\u201d\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u544a\u8bc9\u6700\u9ad8\u6cd5\u9662\uff0c\u8fd9\u8868\u660e\u4e86\u5baa\u6cd5\u8981\u6c42\u7684\u5bf9\u5b97\u6559\u81ea\u7531\u7684\u5c0a\u91cd\u3002\n\u8be5\u5dde\u7684\u5f8b\u5e08\u5199\u9053\uff1a\u201c\u867d\u7136\u73b0\u5728\u5141\u8bb8\u9762\u5bf9\u9762\u7684\u5b97\u6559\u6d3b\u52a8\uff0c\u4f46\u5728COVID\u4f20\u64ad\u98ce\u9669\u56e0\u7d20\u65b9\u9762\u6700\u5177\u53ef\u6bd4\u6027\u7684\u8bb8\u591a\u5176\u4ed6\u6d3b\u52a8-\u97f3\u4e50\u4f1a\u3001\u8bb2\u5ea7\u3001\u620f\u5267\u8868\u6f14\u6216\u5408\u5531\u56e2\u7ec3\u4e60\uff0c\u5373\u6210\u7fa4\u7ed3\u961f\u7684\u4eba\u957f\u65f6\u95f4\u805a\u96c6\u5728\u4e00\u8d77-\u7ee7\u7eed\u88ab\u7981\u6b62\u3002\u201d", "note_en": "The Supreme Court late Friday rejected a California church\u2019s challenge of the state\u2019s new pandemic-related rules on worship services, with Chief Justice John G. Roberts Jr. joining the court\u2019s liberals in the 5-to-4 vote.\n Roberts wrote that state officials such as California Gov. Gavin Newsom (D) had leeway to impose restrictions to prevent the spread of  coronavirus, and had not singled out places of worship for unfair treatment.\n \u201cThe notion that it is \u2018indisputably clear\u2019 that the government\u2019s limitations are unconstitutional seems quite improbable,\u201d Roberts wrote. He was referring to the standard that challengers must meet to enjoin enforcement of the state order.\n  Justices Ruth Bader Ginsburg, Stephen G. Breyer, Sonia Sotomayor and Elena Kagan also voted to deny the request for intervention from a Pentecostal church near San Diego but did not join  the statement by Roberts.\n   The court\u2019s four most-consistent conservatives said they would have granted the request because the state\u2019s new rules likely violate the Constitution\u2019s protection of the free exercise of religion.\n \u201cCalifornia\u2019s latest safety guidelines discriminate against places of worship and in favor of comparable secular businesses,\u201d  wrote Justice Brett M. Kavanaugh. \u201cSuch discrimination violates the First Amendment.\u201d\n Justices Clarence Thomas and Neil M. Gorsuch joined Kavanaugh\u2019s dissent. The court\u2019s order said Justice Samuel A. Alito Jr. also would have granted the church\u2019s request, but he did not join the Kavanaugh statement.\n  Religious organizations eager to reopen faster and with fewer pandemic-related restrictions have been asking courts to step in, but this was the first case to reach the Supreme Court.\n   In a separate, less-controversial case from Illinois, the court  without noted dissent turned down a request from churches near Chicago.\n In both states, governors have recently removed some restrictions and agreed to requests that in-person worship services be allowed on Sunday, the Christian holy day of Pentecost.\n The larger issue is how the responsibility of governments to control the spread of the novel coronavirus can be applied to churches, synagogues and mosques, and the constitutionally protected right to worship.\n  Last week, President Trump called on governors across the country to allow for the immediate reopening of places of worship, characterizing them as \u201cessential services.\u201d\n  Although all states are moving to ease restrictions, the Becket Fund for Religious Liberty says 21 still impose some restrictions.\n  But that is a moving target, as the litigation at the Supreme Court shows. Since South Bay Pentecostal Church near San Diego and Elim Romanian Pentecostal Church and Logos Baptist Ministries near Chicago filed their petitions, the governors of California and Illinois have eased restrictions.\n Illinois Gov. Jay Pritzker (D) has removed the state\u2019s ban on gatherings of more than 10 people, and California\u2019s Newsom said churches may hold services so long as they do not exceed 25\u00a0percent of the facility\u2019s capacity or 100 people, whichever is smaller.\n  Limits on houses of worship raise constitutional questions, Roberts said, but California had not shown bias against them.\n \u201cSimilar or more severe restrictions apply to comparable secular gatherings, including lectures, concerts, movie showings, spectator sports, and theatrical performances, where large groups of people gather in close proximity for extended periods of time,\u201d the chief justice wrote.\n  And California\u2019s order \u201cexempts or treats more leniently only dissimilar activities, such as operating grocery stores, banks, and laundromats, in which people neither congregate in large groups nor remain in close proximity for extended periods.\u201d\n Roberts said it would be inappropriate for the court to grant emergency relief to the church at a time when \u201clocal officials are actively shaping their response to changing facts on the ground.\u201d\n  He added: \u201cThe precise question of when restrictions on particular social activities should be lifted during the pandemic is a dynamic and fact-intensive matter subject to reasonable disagreement\u201d but entrusted by the Constitution to elected officials closest to the situation.\n \u201cThey should not be subject to second-guessing by an \u201cunelected federal judiciary,\u201d which lacks the background, competence, and expertise to assess public health and is not accountable to the people,\u201d he wrote, quoting a court precedent.\n   \u201cThe basic constitutional problem is that comparable secular businesses are not subject to a 25% occupancy cap, including factories, offices, supermarkets, restaurants, retail stores, pharmacies, shopping malls, pet grooming shops, bookstores, florists, hair salons, and cannabis dispensaries,\u201d he wrote.\n   \u201cOnly one industry has a 25% capacity or 100-person cap \u2014 houses of worship,\u201d said the church\u2019s legal brief. \u201cIf California\u2019s interest in limiting gatherings is not important enough to be enforced against other industries, it is not important enough to be enforced against churches.\u201d\n A panel of the U.S. Court of Appeals for the 9th Circuit, by a 2-to-1 vote, denied the church\u2019s petition.\n  \u201cWe\u2019re dealing here with a highly contagious and often fatal disease for which there presently is no known cure,\u201d the court said. \u201cIn the words of Justice Robert Jackson, if a \u2018court does not temper its doctrinaire logic with a little practical wisdom, it will convert the constitutional Bill of Rights into a suicide pact.\u2019\u2009\u201d\n   Since the court\u2019s decision, though, Newsom released the new guidance, allowing South Bay to open Sunday.\n The state contends that there are good reasons, though, for extending restrictions. Its expert testified that there \u201chave been multiple reports of sizable to large gatherings such as religious services, choir practices, funerals, and parties resulting in significant spread of COVID-19.\u201d\n Included: \u201ca worship service in Sacramento tied to 71 COVID-19 cases; a choir practice in Seattle linked to 32 cases; a Kentucky church revival tied to 28 cases; and a religious service in South Korea where over 5,000 cases were traced back to a single infected individual in attendance.\u201d\n   Still, California told the Supreme Court, it was showing the deference to religious freedom the Constitution requires.\n \u201cWhile in-person religious services are now permitted, many other activities that are most comparable in terms of COVID-transmission risk factors \u2014 concerts, lectures, theatrical performances, or choir practices, in which groups of people gather together for extended periods \u2014 continue to be barred,\u201d the state\u2019s lawyers wrote.", "posttime": "2020-05-31 02:37:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u88c1\u5b9a,court,\u9650\u5236", "title": "\u6700\u9ad8\u6cd5\u9662\u88c1\u5b9a\u5dde\u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u5bf9\u5b97\u6559\u96c6\u4f1a\u7684\u9650\u5236", "title_en": "Supreme Court rules state may enforce restrictions on religious gatherings", "transed": 1, "url": "https://www.washingtonpost.com/politics/courts_law/supreme-court-considers-churches-demands-that-states-lift-pandemic-restrictions/2020/05/29/af07b918-a1b2-11ea-81bb-c2f70f01034b_story.html", "via": "", "real_tags": ["\u88c1\u5b9a", "court", "\u9650\u5236"]}, {"category": "", "categoryclass": "", "imagename": "98b362ac7917afb387829cd3681b2bbc.jpg", "infoid": 1004427, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "3\u6708\u521d\uff0c\u5f53\u4eba\u4eec\u6e05\u695a\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u786e\u5b9e\u4e0d\u662f\u6076\u4f5c\u5267\uff0c\u800c\u662f\u5373\u5c06\u98a0\u8986\u7f8e\u56fd\u4eba\u7684\u751f\u6d3b\u65f6\uff0c\u6211\u5f00\u59cb\u7ed9\u6211\u7684\u6295\u8d44\u987e\u95ee\u670b\u53cb\u4fdd\u7f57\u53d1\u77ed\u4fe1\uff0c\u8ba8\u8bba\u80a1\u7968\u5e02\u573a\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u5728\u5c48\u670d\u4e8e\u65b0\u95fb\u4e1a\u7684\u8d22\u5bcc\u548c\u58f0\u671b\u4e4b\u524d\uff0c\u6211\u66fe\u5728\u534e\u5c14\u8857\u77ed\u6682\u5de5\u4f5c\u8fc7\uff0c\u4f46\u6211\u4e0d\u80fd\u58f0\u79f0\u81ea\u5df1\u6709\u4efb\u4f55\u7279\u522b\u7684\u91d1\u878d\u4e13\u4e1a\u77e5\u8bc6\u3002\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u6211\u8ba9\u4fdd\u7f57\u80cc\u4e0a\u6211\u7684\u9884\u8a00\u7684\u8d1f\u62c5\u30023\u67088\u65e5\u661f\u671f\u65e5\uff0c\u6211\u7ed9\u4ed6\u53d1\u77ed\u4fe1\u8bf4\uff0c\u6211\u8ba4\u4e3a\u5e02\u573a\u5728\u63a5\u4e0b\u6765\u7684\u4e09\u5230\u56db\u4e2a\u6708\u91cc\u4f1a\u4e0b\u8dcc25%\u523030%\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u5f53\u6807\u51c6\u666e\u5c14500\u6307\u6570\u66b4\u8dcc\u8d85\u8fc77%\uff0c\u5bfc\u81f4\u4ea4\u6613\u81ea\u52a8\u505c\u6b62\u65f6\uff0c\u6211\u544a\u8bc9\u4fdd\u7f57\uff0c\u6211\u5c06\u628a\u6211\u7684\u65f6\u95f4\u8868\u4fee\u6539\u4e3a\u4e09\u5230\u56db\u4e2a\u5c0f\u65f6\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u201c\u795d\u4f60\u597d\u8fd0\uff0c\u8bd5\u56fe\u6293\u4f4f\u8fd9\u628a\u843d\u4e0b\u7684\u5200\u3002\u201d\u9053\u743c\u65af\u5de5\u4e1a\u5e73\u5747\u6307\u6570(Dow Jones Industrial Average)\u5468\u4e00\u4e0b\u8dcc2000\u70b9\uff0c\u521b\u4e0b2008\u5e7410\u6708\u4ee5\u6765\u7684\u6700\u5927\u5355\u65e5\u8dcc\u5e45\u3002\n\u63a5\u4e0b\u6765\u7684\u5468\u4e00\uff0c\u968f\u7740\u6d88\u606f\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e0d\u7965\uff0c\u6211\u5411\u4fdd\u7f57\u53d1\u9001\u4e86\u4e00\u4e2a\u6700\u65b0\u7684\u9884\u6d4b\uff1a\u9053\u743c\u65af\u5de5\u4e1a\u5e73\u5747\u6307\u6570\u5c06\u5347\u81f315,000\u70b9\u3002\u6211\u53ea\u662f\u5728\u80e1\u8bf4\u516b\u9053\uff0c\u4f46\u8003\u8651\u52301929\u5e74\u5d29\u76d8\u540e\u5e02\u573a\u4e0b\u8dcc\u4e86\u8fd190%\uff0c\u73b0\u5728\u770b\u8d77\u676550%\u7684\u8dcc\u5e45\u4f3c\u4e4e\u662f\u5408\u7406\u7684\u3002\u51e0\u5929\u540e\uff0c\u9053\u743c\u65af\u6307\u6570\u8dcc\u78342\u4e07\u70b9\u3002\u6211\u611f\u5230\u795e\u8c15\u822c\u7684\u795e\u8c15\uff0c\u518d\u6b21\u8c03\u6574\u4e86\u6211\u7684\u5c55\u671b\uff1a\u6211\u544a\u8bc9\u4fdd\u7f5710,000\u662f\u6211\u7684\u65b0\u76ee\u6807\u3002\u201c\u55ef\uff0c\u8fd9\u592a\u4ee4\u4eba\u632f\u594b\u4e86\uff0c\u201d\u4ed6\u56de\u7b54\u8bf4\u3002\u7b2c\u4e8c\u5929\u5e02\u573a\u53c8\u4e0b\u8dcc\u4e861338\u70b9\uff0c\u5c3d\u7ba1\u6211\u7684\u57fa\u91d1\u548c\u51e0\u4e4e\u6240\u6709\u4eba\u7684\u57fa\u91d1\u4e00\u8d77\u4e0b\u8dcc\uff0c\u4f46\u6211\u81f3\u5c11\u5728\u6211\u7684\u9884\u6d4b\u4e2d\u627e\u5230\u4e86\u4e00\u4e9b\u7a7a\u6d1e\u7684\u6ee1\u8db3\u611f\u3002\n\u7136\u540e\u5e02\u573a\u5f00\u59cb\u4e0a\u6da8\u3002\u6211\u5f53\u65f6\u4e0d\u5c51\u4e00\u987e\u3002\u201c\u4f60\u559c\u6b22\u8fd9\u4e2a\u7b28\u86cb\u7684\u62c9\u529b\u8d5b\u5417\uff1f\u201d\u6211\u95ee\u4fdd\u7f57\u3002\u5f53\u6211\u5728CNBC\u4e0a\u770b\u5230\u5409\u59c6\u00b7\u514b\u96f7\u9ed8(Jim Cramer)--\u662f\u7684\uff0c\u4ed6\u8fd8\u5728\u8eab\u8fb9--\u8bf4\u50cf\u6211\u8fd9\u6837\u7684\u718a\u8bf4\u201c\u4e0d\u770b\u597d\u79d1\u5b66\u201d\uff0c\u57fa\u672c\u4e0a\u662f\u5728\u505a\u7a7a\u8fd9\u4e2a\u56fd\u5bb6\u65f6\uff0c\u6211\u7684\u6000\u7591\u624d\u66f4\u5f3a\u70c8\u3002\u8fd9\u53e5\u8bdd\u8ba9\u6211\u60f3\u8d77\u4e86\u6c34\u736d\u5728\u201c\u52a8\u7269\u4e4b\u5bb6\u201d(Animal House)\u4e2d\u4e3e\u884c\u7684\u201c\u5b66\u751f\u6cd5\u5ead\u201d\u846c\u793c\u3002\u7136\u800c\uff0c\u5230\u90a3\u65f6\uff0c\u80a1\u5e02\u5728\u5927\u7ea6\u4e00\u5468\u7684\u65f6\u95f4\u91cc\u5df2\u7ecf\u6500\u5347\u4e863000\u70b9\u3002\u5e02\u573a\u73b0\u5728\u4f3c\u4e4e\u5bf9\u574f\u6d88\u606f\u65e0\u52a8\u4e8e\u8877\uff0c\u800c\u5373\u4f7f\u662f\u6700\u7ad9\u4e0d\u4f4f\u811a\u7684\u501f\u53e3\u4e5f\u4f1a\u98d9\u5347\uff0c\u6211\u7684\u60c5\u7eea\u53d8\u5f97\u5c16\u523b\u5730\u8bbd\u523a\u8d77\u6765\u3002\u9884\u8ba1\u660e\u5929\u5c06\u6709550\u4e07\u9996\u6b21\u7533\u9886\u5931\u4e1a\u6551\u6d4e\u91d1\u3002\u6240\u4ee5\u9650\u5236\u5728\u9732\u5929\u6d3b\u52a8\u5417\uff1f\u2018\u2019\u6211\u57284\u67088\u65e5\u7ed9\u4fdd\u7f57\u53d1\u4e86\u77ed\u4fe1\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u52b3\u5de5\u90e8\u5ba3\u5e03\u5df2\u7ecf\u63d0\u4ea4\u4e86660\u4e07\u4efd\u65b0\u7684\u7d22\u8d54\u7533\u8bf7\u3002\u9053\u743c\u65af\u5de5\u4e1a\u5e73\u5747\u6307\u6570\u53c8\u4e0a\u6da8\u4e86779\u70b9\u3002\u4fdd\u7f57\u548c\u6211\u4e00\u6837\u8ff7\u60d1\u4e0d\u89e3\u3002\u201c\u8352\u8c2c\uff01\uff01\u201d\u4ed6\u53d1\u4e86\u77ed\u4fe1\u3002\n\u5230\u90a3\u65f6\uff0c\u5e02\u573a\u7684\u53cd\u5f39\u5df2\u7ecf\u6210\u4e3a\u8bb8\u591a\u4eba\u75c5\u6001\u8ff7\u604b\u7684\u6765\u6e90\u3002\u9762\u5bf9\u5168\u7403\u5927\u6d41\u884c\uff0c\u4ee5\u53ca\u81ea\u5927\u8427\u6761(Great Depression)\u4ee5\u6765\u6700\u4e25\u91cd\u7684\u7ecf\u6d4e\u4f4e\u8ff7\uff0c\u80a1\u5e02\u600e\u4e48\u4f1a\u8d70\u9ad8-\u5f53\u7136\u662f\u5728\u5927\u5e45\u629b\u552e\u4e4b\u540e\uff1f\u534e\u5c14\u8857\u4eba\u58eb\u5f88\u5feb\u5c31\u6709\u4e86\u7b54\u6848\uff1a\u7f8e\u8054\u50a8(Federal Reserve)\u5411\u5e02\u573a\u6ce8\u5165\u4e86\u8d85\u8fc71\u4e07\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u4ee5\u907f\u514d\u91d1\u878d\u5d29\u6e83\uff0c\u6b64\u5916\uff0c\u7531\u4e8e\u503a\u5238\u6536\u76ca\u7387\u5904\u4e8e\u521b\u7eaa\u5f55\u4f4e\u70b9\uff0c\u6295\u8d44\u8005\u771f\u7684\u6ca1\u6709\u4efb\u4f55\u4ee4\u4eba\u6ee1\u610f\u7684\u66ff\u4ee3\u80a1\u7968\u6765\u6295\u8d44\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5f53\u6570\u4ee5\u4e07\u8ba1\u7684\u7f8e\u56fd\u4eba\u6b7b\u4e8e\u65b0\u51a0\u80ba\u708e\uff0c\u6570\u767e\u4e07\u4eba\u56e0\u56fd\u5bb6\u7ecf\u6d4e\u505c\u6446\u800c\u5931\u53bb\u5de5\u4f5c\u65f6\uff0c\u770b\u7740\u5e02\u573a\u98d9\u5347\u662f\u4ee4\u4eba\u9707\u60ca\u7684\uff0c\u751a\u81f3\u662f\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u7684\u3002\n\u5728\u5927\u8870\u9000\u4ee5\u6765\u7684\u51e0\u5e74\u91cc\uff0c\u4f5c\u4e3a\u516c\u4f17\u6124\u6012\u7684\u5bf9\u8c61\uff0c\u7845\u8c37\u8ba9\u534e\u5c14\u8857\u9eef\u7136\u5931\u8272\u3002\u4f46\u968f\u7740\u5e02\u573a\u4e0d\u5408\u65f6\u5b9c\u7684\u4e0a\u6da8\uff0c\u6295\u8d44\u94f6\u884c\u548c\u5bf9\u51b2\u57fa\u91d1\u4f3c\u4e4e\u4e5f\u51b3\u5fc3\u6210\u4e3a\u8fd9\u573a\u5371\u673a\u7684\u7f6a\u9b41\u7978\u9996\u3002\u867d\u7136\u4e9a\u9a6c\u900a\u3001\u82f9\u679c\u548c\u8c37\u6b4c\u7b49\u79d1\u6280\u5de8\u5934\u4e00\u76f4\u5728\u5e2e\u52a9\u8ba9\u88ab\u5c01\u9501\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u5bb9\u6613\u5fcd\u53d7-\u5e76\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u633d\u56de\u4e86\u7845\u8c37\u7684\u5f62\u8c61-\u4f46\u80a1\u5e02\u4ee4\u4eba\u9707\u60ca\u7684\u5f39\u6027(\u81f3\u5c11\u5230\u76ee\u524d\u4e3a\u6b62\u662f\u8fd9\u6837)\u770b\u8d77\u6765\u975e\u5e38\u50cf\u5bf9\u65b0\u51a0\u80ba\u708e\u5371\u673a\u53ca\u5176\u5e26\u6765\u7684\u7ecf\u6d4e\u707e\u96be\u7684\u6f20\u4e0d\u5173\u5fc3\u3002\u5c31\u50cf\u4ed6\u4eec\u8bf4\u7684\uff0c\u5149\u5b66\u6548\u679c\u5f88\u5dee\u3002\u4ed6\u4eec\u4e0d\u7531\u81ea\u4e3b\u5730\u5c31\u5e02\u573a\u5728\u7f8e\u56fd\u4eba\u751f\u6d3b\u4e2d\u7684\u89d2\u8272\u5f15\u53d1\u4e86\u66f4\u5e7f\u6cdb\u7684\u8ba8\u8bba\u3002\n\u751a\u81f3\u5728\u51a0\u72b6\u75c5\u6bd2\u6765\u88ad\u4e4b\u524d\uff0c\u5c31\u6709\u4e00\u4e9b\u8d8b\u52bf\u8ba9\u4eba\u6000\u7591\u5e02\u573a\u5bf9\u7ecf\u6d4e\u589e\u957f\u7684\u4fc3\u8fdb\u7a0b\u5ea6\u3002\u4f8b\u5982\uff0c\u591a\u5e74\u6765\uff0c\u7f8e\u56fd\u4e0a\u5e02\u516c\u53f8\u7684\u6570\u91cf\u4e00\u76f4\u5728\u5927\u5e45\u4e0b\u964d\uff0c\u91d1\u878d\u620f\u6cd5\u57282\u6708\u4efd\u5c06\u9053\u743c\u65af\u6307\u6570\u63a8\u9ad8\u81f3\u8fd13\u4e07\u70b9\u7684\u5439\u5618\u7684\u725b\u5e02\u4e2d\u53d1\u6325\u4e86\u8fc7\u5927\u7684\u4f5c\u7528\u3002\u80a1\u7968\u4ef7\u683c\u7684\u4e0a\u6da8\u663e\u7136\u6ca1\u6709\u53cd\u6620\u51fa\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u7684\u547d\u8fd0\uff0c\u65b0\u51a0\u80ba\u708e\u66b4\u9732\u4e86\u8fd9\u4e00\u4e8b\u5b9e\u3002\u4f46\u5b83\u786e\u5b9e\u6781\u5927\u5730\u589e\u52a0\u4e86\u7f8e\u56fd\u5bcc\u4eba\u7684\u8d22\u5bcc\uff0c\u4ed6\u4eec\u5728\u80a1\u5e02\u4e2d\u6301\u6709\u7684\u80a1\u4efd\u9065\u9065\u9886\u5148\u3002\u4ed6\u4eec\u6070\u597d\u4e5f\u662f\u6700\u6709\u80fd\u529b\u5b89\u7136\u5ea6\u8fc7\u8fd9\u573a\u5371\u673a\u7684\u4eba\uff0c\u8fd9\u5f15\u53d1\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5e02\u573a\u662f\u8131\u79bb\u73b0\u5b9e\uff0c\u8fd8\u662f\u53ea\u662f\u53cd\u6620\u4e86\u90a3\u4e9b\u5728\u5e02\u573a\u4e0a\u6295\u5165\u6700\u591a\u7684\u4eba\u7684\u73b0\u5b9e\uff1f\n\u4e3a\u4e86\u5f04\u6e05\u695a\u6700\u8fd1\u51e0\u4e2a\u6708\u80a1\u5e02\u7684\u8d70\u52bf\uff0c\u6211\u8054\u7cfb\u4e86\u4ebf\u4e07\u5bcc\u7fc1\u6295\u8d44\u7ecf\u7406\u6bd4\u5c14\u00b7\u963f\u514b\u66fc(Bill Ackman)\uff0c\u4ed6\u4f3c\u4e4e\u5bf9\u5e02\u573a\u6709\u7740\u5b8c\u7f8e\u7684\u89e3\u8bfb\u3002\u73b0\u5e7454\u5c81\u7684\u963f\u514b\u66fc\u662f\u534e\u5c14\u8857\u8f83\u4e3a\u4e30\u5bcc\u591a\u5f69\u7684\u4eba\u7269\u4e4b\u4e00\uff0c\u662f\u4e00\u540d\u6d3b\u52a8\u4eba\u58eb\n\u4ed6\u91cd\u7533\uff0c\u4ed6\u5f53\u65f6\u6b63\u5728\u4e70\u5165\u80a1\u7968-\u5b9e\u9645\u4e0a\uff0c\u4ece3\u670812\u65e5\u5f00\u59cb\u5c31\u662f\u8fd9\u6837\u3002\u4ed6\u8bf4\uff0c\u201c\u6211\u4e0a\u7535\u89c6\u5e76\u6ca1\u6709\u8bd5\u56fe\u8bef\u5bfc\u516c\u4f17\uff0c\u8ba9\u4ed6\u4eec\u4ee5\u4e3a\u6211\u505a\u7a7a\u5e02\u573a\u7684\u65f6\u5019\uff0c\u4e16\u754c\u672b\u65e5\u5c31\u8981\u6765\u4e34\u4e86\u3002\u201d\u6211\u4eec\u505a\u591a\u4e86\u5927\u91cf\u7684\u5e02\u573a\u3002\u6211\u57283\u670818\u65e5\u7684\u5934\u5bf8\u6bd43\u670812\u65e5\u591a\u4e8633\u4ebf\u7f8e\u5143\u3002\n\u4f46\u662f\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u903c\u8fd1\u8fd9\u4e2a\u56fd\u5bb6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u5728\u90a3\u4e00\u5468\u53d8\u5f97\u5982\u6b64\u4e50\u89c2\u5462\uff1f\u4ed6\u544a\u8bc9\u6211\uff0c\u4ed6\u5df2\u7ecf\u53d8\u5f97\u6709\u4fe1\u5fc3\uff0c\u8fd9\u4e2a\u56fd\u5bb6\u5c06\u91c7\u53d6\u5fc5\u8981\u7684\u63aa\u65bd\u6765\u6297\u51fb\u8fd9\u573a\u6d41\u884c\u75c5\u3002\u6211\u8bf4\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u5341\u5b57\u8def\u53e3\u3002\u4e00\u79cd\u4f1a\u5bfc\u81f4\u6b7b\u4ea1\u548c\u9057\u5fd8\uff0c\u53e6\u4e00\u79cd\u4f1a\u5bfc\u81f4\u957f\u671f\u7684\u5065\u5eb7\u548c\u5e78\u798f\u3002\u4ed6\u89e3\u91ca\u8bf4\uff1a\u201c\u6211\u4eec\u8981\u8d70\u6b63\u786e\u7684\u9053\u8def\uff0c\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u65b9\u5f0f\u662f\u4e00\u4e9b\u77ed\u671f\u7684\u75db\u82e6\uff0c\u90a3\u5c31\u662f\u56fd\u5bb6\u7684\u505c\u6446\u3002\u201d\u201c\u8fd9\u5c31\u662f\u6211\u8981\u4e0b\u7684\u8d4c\u6ce8\u3002\u201d\u4ed6\u5f3a\u8c03\uff0c\u4ed6\u5e76\u4e0d\u662f\u5bf9\u5173\u95ed\u6f58\u5174\u5e7f\u573a\u7684\u4ee3\u4ef7\u6f2b\u4e0d\u7ecf\u5fc3\uff1a\u4ed6\u544a\u8bc9\u6211\uff0c\u6f58\u5174\u5e7f\u573a\u7684\u4e00\u4e9b\u6700\u5927\u5ba2\u6237\u662f\u6559\u5e08\u548c\u6025\u6551\u533b\u52a1\u4eba\u5458\u7684\u517b\u8001\u57fa\u91d1--\u8fd9\u4e9b\u4eba\u5c06\u4f1a\u53d7\u5230\u5371\u673a\u7684\u6c89\u91cd\u6253\u51fb\u3002(\u4ed6\u8fd8\u63d0\u5230\uff0c\u4ed6\u7684\u57fa\u91d1\u4f1a\u5df2\u7ecf\u6350\u8d60\u4e86\u6570\u767e\u4e07\u7f8e\u5143\u7528\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u6551\u63f4\u5de5\u4f5c\u548c\u7814\u7a76\u3002)\u3002\n\u4f46\u5373\u4f7f\u7f8e\u56fd\u5927\u90e8\u5206\u5730\u533a\u5173\u95ed\uff0c\u73b0\u5728\u4ecd\u6709\u8fd110\u4e07\u7f8e\u56fd\u4eba\u6b7b\u4ea1\uff0c\u7ea63800\u4e07\u4eba\u5931\u4e1a\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u80a1\u5e02\u4f1a\u4e0a\u6da8\u5462\uff1f\u963f\u514b\u66fc\u8868\u793a\uff0c\u5e02\u573a\u4e3b\u8981\u96c6\u4e2d\u5728\u5c11\u6570\u51e0\u5bb6\u516c\u53f8-\u4e9a\u9a6c\u900a(Amazon)\u3001\u82f9\u679c(Apple)\u3001\u8c37\u6b4c(Google)\u548cFacebook-\u8fd9\u4e9b\u516c\u53f8\u7684\u5730\u4f4d\u5c06\u6bd4\u5371\u673a\u524d\u66f4\u5177\u4e3b\u5bfc\u6027\uff0c\u5b83\u4eec\u7684\u80a1\u4ef7\u5728\u9884\u671f\u4e2d\u4f1a\u4e0a\u6da8\u3002\u5b9e\u529b\u8f83\u5f31\u7684\u4e0a\u5e02\u516c\u53f8\u6b63\u5728\u88ab\u6dd8\u6c70--\u201c\u8fd9\u79cd\u75c5\u6bd2\u6740\u6b7b\u7684\u662f\u8001\u5e74\u4eba\u3001\u60a3\u6709\u5408\u5e76\u75c7\u7684\u4eba\u3001\u6709\u5176\u4ed6\u5065\u5eb7\u95ee\u9898\u7684\u4eba\uff0c\u5546\u4e1a\u4e0a\u4e5f\u662f\u5982\u6b64\uff1b\u75c5\u6bd2\u6740\u6b7b\u4e86\u90a3\u4e9b\u5df2\u7ecf\u5728\u7ed3\u6784\u4e0a\u53d7\u635f\u7684\u516c\u53f8\u201d--\u800c\u5f3a\u5927\u7684\u4e0a\u5e02\u516c\u53f8\u4e0d\u4ec5\u8981\u751f\u5b58\uff0c\u800c\u4e14\u8981\u7e41\u8363\u3002\u201c\u5371\u673a\u5bf9\u4e9a\u9a6c\u900a\u7b49\u516c\u53f8\u7684\u5f71\u54cd\u5b9e\u9645\u4e0a\u5728\u77ed\u671f\u5185\u662f\u8d1f\u9762\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u82b1\u8d39\u4e86\u5927\u91cf\u8d44\u91d1\u6765\u5e94\u5bf9\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fd9\u5bf9\u516c\u53f8\u6765\u8bf4\u662f\u5de8\u5927\u7684\u597d\u5904\u3002\u201d\u963f\u514b\u66fc\u8bf4\uff0c\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5e02\u573a\u201c\u5728\u6211\u770b\u6765\u5e76\u6ca1\u6709\u9519\u201d\u3002\n\u8fd9\u662f\u4e00\u4e2a\u51fa\u4eba\u610f\u6599\u7684\u4e0d\u6e29\u4e0d\u706b\u7684\u80cc\u4e66\uff0c\u6765\u81ea\u4e00\u4e2a\u5728\u8fd9\u4e2a\u5e02\u573a\u8d5a\u4e86\u5f88\u591a\u94b1\u7684\u4eba\uff0c\u5f53\u6211\u540e\u6765\u601d\u8003\u5b83\u65f6\uff0c\u6211\u4e0d\u7981\u60f3\u77e5\u9053\uff0c\u8fd9\u662f\u53cd\u6620\u4e86\u4e00\u79cd\u611f\u89c9\uff0c\u5373\u6700\u8fd1\u7684\u6da8\u5e45\u5fae\u4e4e\u5176\u5fae\uff0c\u8fd8\u662f\u53cd\u6620\u4e86\u4e00\u79cd\u610f\u8bc6\uff0c\u5373\u53cd\u5f39\u5192\u72af\u4e86\u5f88\u591a\u4eba\u3002\n\u4f46\u6770\u91cc\u7c73\u00b7\u897f\u683c\u5c14(Jeremy Siegel)\u5bf9\u5e02\u573a\u884c\u4e3a\u6ca1\u6709\u6000\u7591\u6216\u7591\u8651\u3002\u73b0\u5e7474\u5c81\u7684\u897f\u683c\u5c14\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u6c83\u987f\u5546\u5b66\u9662(University of Pennsylvania\u2018s Wharton School)\u6559\u6388\u91d1\u878d\u5b66\uff0c\u4ed6\u662f\u4e00\u4f4d\u8457\u540d\u7684\u5e02\u573a\u5b66\u8005\uff0c\u4e5f\u662fCNBC\u7684\u5e38\u5ba2\uff0c\u7ecf\u5e38\u88ab\u79f0\u4e3a\u201c\u6c83\u987f\u7684\u5deb\u5e08\u201d\u3002\u4ed6\u4ee5\u770b\u6da8\u8457\u79f0\uff1a\u4ed61994\u5e74\u51fa\u7248\u7684\u201c\u957f\u671f\u7684\u80a1\u7968\u201d(Stores For The Long Run)\u4e00\u4e66\u8ba4\u4e3a\uff0c\u80a1\u7968\u662f\u4e70\u5165\u5e76\u6301\u6709\u7684\u6295\u8d44\u8005\u7684\u6700\u4f73\u9009\u62e9\uff0c\u8fd9\u9884\u793a\u7740--\u6709\u4eba\u8bf4\u662f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f15\u53d1\u4e86--1995-2000\u5e74\u7684\u725b\u5e02\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u6807\u51c6\u666e\u5c14500\u6307\u6570\u4e0a\u6da8\u4e86\u4e24\u500d\u591a\u3002\u4ed6\u548c\u6211\u901a\u8bdd\u7684\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u52b3\u5de5\u90e8\u62a5\u544a\u8bf4\uff0c\u7f8e\u56fd4\u6708\u4efd\u5931\u53bb\u4e862050\u4e07\u4e2a\u5de5\u4f5c\u5c97\u4f4d\uff0c\u5931\u4e1a\u7387\u98d9\u5347\u81f314.7%\u3002\u9053\u743c\u65af\u6307\u6570\uff0c\u4e00\u5982\u65e2\u5f80\uff0c\u5f53\u5929\u8dc3\u5347\u4e86455\u70b9\u3002\n\u5bf9Siegel\u6765\u8bf4\uff0c\u5c3d\u7ba1\u5931\u4e1a\u6570\u5b57\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\uff0c\u4f46\u5e02\u573a\u4e0a\u6da8\u5e76\u4e0d\u5947\u602a\uff1a\u6295\u8d44\u8005\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e9b\u6570\u5b57\u4f1a\u5f88\u96be\u770b\u3002\u4ed6\u544a\u8bc9\u6211\uff1a\u201c\u8fd9\u662f\u201d\u91d1\u878d\u5165\u95e8\u201c\u7684\u7b2c\u4e00\u6761\u539f\u5219\uff1a\u4efb\u4f55\u610f\u6599\u4e4b\u4e2d\u7684\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5e02\u573a\u3002\u201d\u81ea3\u6708\u4e2d\u65ec\u4ee5\u6765\u5bf9\u5176\u4e0a\u884c\u611f\u5230\u5931\u671b\u7684\u4eba\u5e76\u4e0d\u4e86\u89e3\u5e02\u573a\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u201c\u8d85\u8fc790%\u7684\u80a1\u7968\u4ef7\u503c\u4f9d\u8d56\u4e8e\u672a\u6765\u4e00\u5e74\u4ee5\u4e0a\u7684\u6536\u76ca\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5e02\u573a\u975e\u5e38\u5177\u6709\u524d\u77bb\u6027\u3002\u201dSiegel\u8bf4\uff0c\u6295\u8d44\u8005\u6ca1\u6709\u8003\u8651\u63d0\u524d\u516d\u4e2a\u6708\uff1b\u4ed6\u4eec\u8003\u8651\u7684\u662f\u63d0\u524d\u4e00\u5230\u4e24\u5e74\uff0c\u5230\u90a3\u65f6\u75c5\u6bd2\u53ef\u80fd\u5df2\u7ecf\u5f97\u5230\u63a7\u5236\u3002Siegel\u8bf4\uff0c\u6211\u4eec\u5c06\u51fa\u73b0U\u578b\u590d\u82cf\uff0c\u800c\u4e0d\u662fV\u578b\u590d\u82cf\uff0c\u4f46\u5e02\u573a\u5173\u6ce8\u7684\u662fU\u578b\u590d\u82cf\u7684\u4e0a\u7aef\u3002\n\u4ed6\u63a5\u7740\u6307\u51fa\uff0c\u90a3\u4e9b\u5bf9\u5e02\u573a\u590d\u82cf\u611f\u5230\u56f0\u60d1\u7684\u4eba\u5ffd\u7565\u4e86\u53e6\u4e00\u4ef6\u4e8b\uff1a\u53d7\u5371\u673a\u6253\u51fb\u6700\u4e25\u91cd\u7684\u7ecf\u6d4e\u9886\u57df--\u5c0f\u4f01\u4e1a\u754c--\u6ca1\u6709\u51fa\u73b0\u5728\u9053\u743c\u65af\u6307\u6570(Dow)\u548c\u6807\u51c6\u666e\u5c14500\u6307\u6570(S&P\uff1b500)\u7b49\u4e3b\u8981\u80a1\u6307\u4e2d\u3002\u5e02\u573a\u8ffd\u8e2a\u7684\u662f\u5927\u516c\u53f8\u7684\u547d\u8fd0\uff0c\u800c\u4e0d\u662f\u592b\u59bb\u5e97\u3002\nSiegel\u8bf4\uff0c\u4ece\u793e\u4f1a\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e3b\u8857\u4e0a\u7684\u5927\u5c60\u6740\u662f\u53ef\u6015\u7684\u3002\u4ed6\u63d0\u5230\u4ed6\u4f4f\u5728\u8d39\u57ce\u4e2d\u5fc3\u57ce\u3002\u8fd9\u8ba9\u6211\u5f88\u90c1\u95f7--\u6211\u8def\u8fc7\u6240\u6709\u5173\u95e8\u7684\u5546\u5e97\uff0c\u8fd9\u4e9b\u5546\u5e97\u628a\u8fd9\u4e2a\u793e\u533a\u53d8\u6210\u4e86\u793e\u533a\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6709\u4e9b\u4e1c\u897f\u5c06\u4f1a\u4e22\u5931\u3002\u4f46\u80a1\u5e02\u5bf9\u591a\u6101\u5584\u611f\u65e0\u52a8\u4e8e\u8877\uff0c\u4e00\u5bb6\u62d0\u89d2\u5496\u5561\u5e97\u7684\u5173\u95ed\u610f\u5473\u7740\u661f\u5df4\u514b\u5c11\u4e86\u4e00\u4e2a\u7ade\u4e89\u5bf9\u624b\u3002\nSiegel\u63a5\u7740\u8bf4\uff0c\u4e0e\u53ef\u4ee5\u8bf4\u662f\u7531\u623f\u5730\u4ea7\u6ce1\u6cab\u5f15\u53d1\u7684\u5927\u8870\u9000\u4e0d\u540c\uff0c\u8fd9\u573a\u5371\u673a\u5e76\u4e0d\u662f\u7ecf\u6d4e\u4e2d\u8fc7\u5ea6\u79ef\u7d2f\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u7531\u4e00\u79cd\u201c\u5916\u6e90\u6027\u51b2\u51fb\u201d\u9020\u6210\u7684\uff0c\u8fd9\u79cd\u51b2\u51fb\u6253\u51fb\u4e86\u4e00\u4e2a\u5728\u5176\u4ed6\u65b9\u9762\u7ad9\u7a33\u811a\u8ddf\u7684\u7ecf\u6d4e\u4f53\u3002\u4ed6\u8868\u793a\uff0c\u6295\u8d44\u8005\u9884\u8ba1\uff0c\u4e00\u65e6\u75c5\u6bd2\u5f97\u5230\u63a7\u5236\uff0c\u7ecf\u6d4e\u5c06\u6062\u590d\u4e0a\u5347\u8f68\u9053\u3002\u201c\u6211\u4eec\u4e4b\u524d\u7684\u7ecf\u6d4e\u975e\u5e38\u6709\u6d3b\u529b\uff0c\u975e\u5e38\u597d\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4ed6\u4eec\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u51e0\u5e74\u540e\u6062\u590d\u5230\u90a3\u4e2a\u6c34\u5e73\u3002\u201d\n\u6211\u63d0\u5230\u4e86\u4ed6\u57281\u6708\u4efd\u5bf9MarketBrief\u8fdb\u884c\u7684\u4e00\u6b21\u91c7\u8bbf\uff0c\u4ed6\u5728\u91c7\u8bbf\u4e2d\u8868\u793a\uff0c\u9053\u743c\u65af\u6307\u6570\u53ef\u80fd\u57285\u5e74\u5185\u8fbe\u52304\u4e07\u70b9\u3002\u6211\u95ee\u4ed6\u662f\u5426\u575a\u6301\u4ed6\u7684\u9884\u6d4b\u3002\n\u201c\u662f\u7684\uff0c\u8fd8\u662f\u6709\u53ef\u80fd\u7684\uff0c\u201d\u4ed6\u8bf4\uff0c\u4e0d\u8fc7\u4ed6\u627f\u8ba4\uff0c\u4e25\u91cd\u7684\u7ecf\u6d4e\u4f4e\u8ff7\u53ef\u80fd\u4f1a\u51cf\u7f13\u5e02\u573a\u7684\u4e0a\u6da8\u901f\u5ea6\u3002\u201c\u8fd9\u8ba9\u5b83\u5012\u9000\u4e86\u4e24\u4e09\u5e74\u3002\u201d\n\u7ebd\u7ea6\u8bc1\u5238\u4ea4\u6613\u6240\u7684\u5927\u5385\u4ecd\u7136\u88ab\u8ba4\u4e3a\u662f\u7f8e\u56fd\u8d44\u672c\u4e3b\u4e49\u7684\u8c61\u5f81\uff0c\u662f\u5176\u6d3b\u529b\u548c\u521b\u9020\u529b\u7684\u5723\u5730\u3002\u7136\u800c\uff0c\u5982\u4eca\u5b83\u7684\u5b9e\u9645\u610f\u4e49\u5927\u5927\u964d\u4f4e\u4e86\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u73b0\u5728\u5927\u591a\u6570\u4ea4\u6613\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u65b9\u5f0f\u8fdb\u884c\u7684\u3002\u80a1\u7968\u5e02\u573a\u7684\u4e00\u4e2a\u4e3b\u8981\u529f\u80fd\u5e94\u8be5\u662f\u914d\u7f6e\u8d44\u672c\u4ee5\u5e2e\u52a9\u516c\u53f8\u6210\u957f\u3002\u7136\u800c\uff0c\u4f3c\u4e4e\u8d8a\u6765\u8d8a\u5c11\u7684\u516c\u53f8\u9700\u8981\u5e02\u573a\u7684\u5e2e\u52a9\u30021997\u5e74\uff0c\u7f8e\u56fd\u5927\u7ea6\u67097500\u5bb6\u4e0a\u5e02\u516c\u53f8\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u8fd9\u4e2a\u6570\u5b57\u4e0b\u964d\u4e86\u4e00\u534a\uff0c\u964d\u81f3\u7ea63600\u4eba-\u8003\u8651\u5230\u540c\u671f\u7ecf\u6d4e\u89c4\u6a21\u7ffb\u4e86\u4e00\u756a\u591a\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u9707\u60ca\u7684\u8d8b\u52bf\u3002\u4e3a\u4ec0\u4e48\u5728\u7ecf\u6d4e\u589e\u957f\u5982\u6b64\u4e4b\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u80a1\u5e02\u5374\u635f\u5931\u4e86\u8fd9\u4e48\u591a\u4e0a\u5e02\u516c\u53f8\uff0c\u5b83\u4eec\u90fd\u53bb\u4e86\u54ea\u91cc\uff1f\u4e00\u4e9b\u516c\u53f8\u5df2\u7ecf\u4e0d\u518d\u8425\u4e1a\uff0c\u800c\u66f4\u591a\u7684\u516c\u53f8\u5df2\u7ecf\u901a\u8fc7\u5408\u5e76\u6216\u6536\u8d2d\u88ab\u541e\u5e76\u3002\u4e0d\u8fc7\uff0c\u6700\u8fd1\u8fd9\u79cd\u4e0b\u964d\u662f\u7531\u79c1\u52df\u80a1\u6743\u548c\u98ce\u9669\u8d44\u672c\u65e5\u76ca\u589e\u957f\u7684\u5438\u5f15\u529b\u548c\u91d1\u878d\u5b9e\u529b\u63a8\u52a8\u7684\u3002\u6839\u636e\u7c73\u5c14\u80af\u7814\u7a76\u6240(Milken Institute)\u7684\u4e00\u9879\u7814\u7a76\uff0c\u79c1\u52df\u80a1\u6743\u73b0\u5728\u662f\u4e00\u4e2a\u4ef7\u503c5\u4e07\u4ebf\u7f8e\u5143\u7684\u5e02\u573a\uff0c\u5728\u8fc7\u53bb20\u5e74\u91cc\u589e\u957f\u4e86\u4e09\u500d\uff0c\u7f8e\u56fd\u73b0\u5728\u6709\u8fd18000\u5bb6\u79c1\u52df\u80a1\u6743\u6240\u6709\u7684\u516c\u53f8\uff0c\u662f\u672c\u4e16\u7eaa\u521d\u7684\u56db\u500d\u3002\n\u79c1\u4eba\u8d44\u672c\u7684\u5438\u5f15\u529b\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u516c\u53f8\u53ef\u4ee5\u83b7\u5f97\u6240\u9700\u7684\u8d44\u91d1\uff0c\u800c\u4e0d\u5fc5\u6ee1\u8db3\u4ed6\u4eec\u8ba4\u4e3a\u7e41\u91cd\u7684\u516c\u5f00\u80a1\u7968\u5e02\u573a\u76d1\u7ba1\u8981\u6c42\uff0c\u4e5f\u4e0d\u5fc5\u5411\u70e6\u4eba\u7684\u534e\u5c14\u8857\u5206\u6790\u5e08\u8d1f\u8d23\u3002\u51e0\u5e74\u524d\uff0c\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u901a\u8fc7Twitter\u5ba3\u5e03\u5c06\u7279\u65af\u62c9(Tesla)\u79c1\u6709\u5316(\u4ed6\u6539\u5f26\u6613\u8f99\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a(Securities And Exchange Commission)\u8d77\u8bc9\u4ed6\u8bef\u5bfc\u6295\u8d44\u8005\uff0c\u4ed6\u4ee52000\u4e07\u7f8e\u5143\u4e86\u7ed3\u4e86\u8fd9\u8d77\u6848\u4ef6)\uff0c\u8868\u8fbe\u4e86\u8fd9\u79cd\u60c5\u7eea\u3002\u5982\u4eca\uff0c\u968f\u7740\u5bfb\u6c42\u66f4\u9ad8\u56de\u62a5\u7684\u673a\u6784\u6295\u8d44\u8005\u548c\u5bcc\u6709\u4e2a\u4eba\u7684\u8d44\u91d1\u7ee7\u7eed\u6d8c\u5165\u79c1\u52df\u5e02\u573a\uff0c\u8bb8\u591a\u6709\u524d\u9014\u7684\u516c\u53f8\u6b63\u5728\u7ed5\u8fc7\u516c\u5f00\u80a1\u5e02\u3002\u5b89\u6c38(Ernst&Amp\uff1bYoung)\u53bb\u5e74\u7684\u4e00\u9879\u7814\u7a76\u79f0\uff0c\u516c\u79c1\u5408\u8425\u7684\u8d8b\u52bf\u4ee3\u8868\u7740\u201c\u8d44\u672c\u5e02\u573a\u81ea19\u4e16\u7eaa\u4ee5\u6765\u6700\u6df1\u523b\u7684\u8f6c\u53d8\u4e4b\u4e00\u201d\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u516c\u53f8\u8d8a\u6765\u8d8a\u591a\u5730\u5728\u5176\u4ed6\u5730\u65b9\u6ee1\u8db3\u4ed6\u4eec\u7684\u878d\u8d44\u9700\u6c42\uff0c\u90a3\u4e48\u4f3c\u4e4e\u53ef\u4ee5\u516c\u5e73\u5730\u95ee\u4e00\u4e0b\uff0c\u5982\u4eca\u80a1\u5e02\u5230\u5e95\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u9ad8\u9891\u4ea4\u6613\u7684\u589e\u957f\uff0c\u73a9\u5bb6\u5728\u5e02\u573a\u4e0a\u6765\u56de\u5954\u6ce2\uff0c\u8bd5\u56fe\u4ece\u6700\u5fae\u5c0f\u7684\u4ef7\u683c\u5dee\u5f02\u4e2d\u83b7\u5229\uff0c\u8fd9\u65e0\u7591\u8bc1\u660e\u4e86\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u5e02\u573a\u73b0\u5728\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u7f8e\u5316\u7684\u8d4c\u573a\u3002\u7136\u800c\uff0c\u4e00\u4e9b\u89c2\u5bdf\u4eba\u58eb\u8ba4\u4e3a\uff0c\u5b83\u5b9e\u9645\u4e0a\u8d77\u5230\u4e86\u66f4\u90aa\u6076\u7684\u76ee\u7684-\u5e02\u573a\u975e\u4f46\u6ca1\u6709\u5c06\u8d44\u672c\u5f15\u5bfc\u5230\u6700\u5177\u751f\u4ea7\u529b\u7684\u7528\u9014\uff0c\u5b9e\u9645\u4e0a\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u4ece\u7ecf\u6d4e\u4e2d\u62bd\u8d70\u8d44\u672c\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u5c06\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5bb6\u8d22\u5bcc\u5411\u4e0a\u8f93\u9001\u3002\u8fd9\u79cd\u89c2\u70b9\u8ba4\u4e3a\uff0c\u8fd9\u4e3b\u8981\u662f\u901a\u8fc7\u80a1\u7968\u56de\u8d2d-\u516c\u53f8\u56de\u8d2d\u81ea\u5df1\u7684\u80a1\u7968-\u6765\u5b9e\u73b0\u7684\u3002\n\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u8bba\u70b9\u3002\u8d22\u7ecf\u8bb0\u8005\u9053\u683c\u00b7\u4ea8\u4f0d\u5fb7(Doug Henwood)\u57281997\u5e74\u51fa\u7248\u7684\u201c\u534e\u5c14\u8857\uff1a\u5982\u4f55\u4e3a\u8c01\u5de5\u4f5c\u201d(Wall Street\uff1aHow Works and For Who)\u4e00\u4e66\u4e2d\u63d0\u51fa\u4e86\u540c\u6837\u7684\u89c2\u70b9\uff0c\u4e66\u4e2d\u5bf9\u4ed6\u6240\u8bf4\u7684\u201c\u4ee5\u80a1\u5e02\u4e3a\u4e2d\u5fc3\u7684\u8d44\u672c\u4e3b\u4e49\u201d\u8fdb\u884c\u4e86\u6e05\u6670\u800c\u7ec6\u81f4\u7684\u6279\u8bc4\u3002\u4ea8\u4f0d\u5fb7\u7684\u4e3b\u8981\u8bba\u70b9\u662f\uff0c\u5e02\u573a\u7684\u5b9e\u9645\u76ee\u7684\u4e0d\u662f\u6709\u6548\u5730\u5206\u914d\u8d44\u672c\uff0c\u800c\u662f\u8ba9\u5bcc\u4eba\u53d8\u5f97\u66f4\u52a0\u5bcc\u6709--\u7528\u4ed6\u7684\u8bdd\u8bf4\uff0c\u662f\u201c\u6700\u5927\u5316\u4e16\u754c\u4e0a\u6700\u6709\u7279\u6743\u7684\u7fa4\u4f53--\u503a\u6743\u4eba-\u98df\u5229\u8005\u9636\u5c42--\u7684\u8d22\u5bcc\u548c\u6743\u529b\u201d\u3002\u5728\u4e92\u8054\u7f51\u7e41\u8363\u63a8\u52a8\u534e\u5c14\u8857\u521b\u4e0b\u5386\u53f2\u65b0\u9ad8\uff0c\u9053\u743c\u65af\u6307\u6570\u6210\u4e3a\u5168\u56fd\u75f4\u8ff7\u7684\u65f6\u5019\uff0c\u4ea8\u4f0d\u5fb7\u7684\u4e66\u51e0\u4e4e\u662f\u4e00\u79cd\u6301\u4e0d\u540c\u653f\u89c1\u7684\u6587\u5b66\u5f62\u5f0f-\u800c\u4ed6\u81ea\u79f0\u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u8005\u7684\u4e8b\u5b9e\u589e\u52a0\u4e86\u8fd9\u672c\u4e66\u7684\u98a0\u8986\u6027\u4f18\u52bf\u3002\n\u4ea8\u4f0d\u5fb7\u5f3a\u8c03\u4e86\u80a1\u7968\u56de\u8d2d\u7684\u4f5c\u7528\uff0c\u901a\u8fc7\u80a1\u7968\u56de\u8d2d\uff0c\u516c\u53f8\u51cf\u5c11\u4e86\u5e02\u573a\u4e0a\u53ef\u7528\u80a1\u7968\u7684\u6570\u91cf\uff0c\u4ee5\u63d0\u9ad8\u4ef7\u683c\u30021929\u5e74\u80a1\u5e02\u5d29\u76d8\u540e\uff0c\u8fd9\u79cd\u505a\u6cd5\u5b9e\u9645\u4e0a\u88ab\u7981\u6b62\u4e86\uff0c\u56e0\u4e3a\u76d1\u7ba1\u673a\u6784\u5c06\u5176\u89c6\u4e3a\u4e00\u79cdsto\u5f62\u5f0f\u3002\n\u73b0\u5728\u60f3\u60f3\u8fd9\u4e2a\uff1aYardeni Research\u62a5\u544a\u79f0\uff0c\u4ec5\u57282019\u5e74\uff0c\u6807\u51c6\u666e\u5c14500\u6307\u6570\u6210\u4efd\u80a1\u516c\u53f8\u5c31\u56de\u8d2d\u4e867287\u4ebf\u7f8e\u5143\u7684\u81ea\u6709\u80a1\u7968\uff0c\u76f8\u5f53\u4e8e\u7f8e\u56fd\u56fd\u5185\u751f\u4ea7\u603b\u503c(GDP)\u76843%\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6839\u636e\u9ad8\u76db(Goldman Sachs)\u7684\u6570\u636e\uff0c\u56de\u8d2d\u662f\u80a1\u5e02\u6700\u5927\u7684\u9700\u6c42\u6765\u6e90\uff0c\u4e4b\u524d\u4e09\u5e74\u4e2d\u7684\u4e24\u5e74\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u662f\u4e00\u4e2a\u80a1\u5e02\u4e0a\u6da8\u4e8665%\u5de6\u53f3\u7684\u65f6\u671f\u3002\u4ece\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u56de\u8d2d\u5e2e\u52a9\u63a8\u52a8\u4e86\u80a1\u5e02\u7684\u4e0a\u6da8\uff0c\u8fd9\u8868\u660e\u5e02\u573a\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u7531\u955c\u5b50\u7ec4\u6210\u7684\u5927\u5385\u3002\n\u5bf9\u56de\u8d2d\u7684\u8fa9\u62a4-\u8fd9\u79cd\u505a\u6cd5\u6709\u5f88\u591a\u634d\u536b\u8005\uff0c\u5305\u62ec\u6c83\u4f26\u00b7\u5df4\u83f2\u7279(Warren Buffett)-\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u4e00\u5bb6\u516c\u53f8\u65e0\u6cd5\u627e\u5230\u6240\u6709\u8d5a\u53d6\u7684\u5229\u6da6\u7684\u751f\u4ea7\u6027\u7528\u9014\uff0c\u5b83\u6709\u4e49\u52a1\u5c06\u76c8\u4f59\u4ea4\u7ed9\u6295\u8d44\u8005\uff0c\u7136\u540e\u6295\u8d44\u8005\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u5c06\u8d44\u91d1\u6295\u5165\u7ecf\u6d4e\u3002\u6770\u91cc\u7c73\u00b7\u897f\u683c\u5c14\u544a\u8bc9\u6211\u56de\u8d2d\u662f\u201c\u5b8c\u5168\u88ab\u8bef\u89e3\u7684\u201d\u3002\u4ed6\u4eec\u7684\u540d\u58f0\u5f88\u5dee\u3002\u201c\u3002\u4ed6\u8bf4\uff0c\u516c\u53f8\u201c\u5728\u6295\u8d44\u6709\u5229\u53ef\u56fe\u7684\u65f6\u5019\u5c06\u5229\u6da6\u6295\u8d44\u201d\uff0c\u5e76\u901a\u8fc7\u80a1\u606f\u6216\u56de\u8d2d\u5c06\u4e0d\u80fd\u82b1\u6389\u7684\u94b1\u8fd4\u8fd8\u7ed9\u80a1\u4e1c-\u7531\u4e8e\u56de\u8d2d\u63d0\u4f9b\u4e86\u6bd4\u80a1\u606f\u66f4\u4f18\u60e0\u7684\u7a0e\u6536\u4f18\u60e0\uff0c\u5b83\u4eec\u5df2\u6210\u4e3a\u5206\u914d\u8d85\u989d\u5229\u6da6\u7684\u9996\u9009\u624b\u6bb5\u3002\n\u65e0\u8bba\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u4e00\u4e9b\u4f30\u8ba1\u8868\u660e\uff0c\u5728\u8fc7\u53bb\u5341\u5e74\u91cc\uff0c\u5728\u56de\u8d2d\u548c\u5206\u7ea2\u4e4b\u95f4\uff0c\u7f8e\u56fd\u6700\u5927\u7684\u51e0\u5bb6\u516c\u53f8\u5411\u80a1\u4e1c\u8fd4\u8fd8\u4e86\u5927\u7ea690%\u7684\u6536\u76ca\u3002\u8fd9\u7b14\u94b1\u672c\u53ef\u4ee5\u7528\u6765\u7ed9\u5458\u5de5\u52a0\u85aa\uff0c\u6216\u8005\u589e\u52a0\u7814\u53d1\u652f\u51fa\uff0c\u6216\u8005\u7f13\u51b2\u672a\u6765\u7684\u7ecf\u6d4e\u4f4e\u8ff7\uff0c\u4f46\u5374\u6d41\u5411\u4e86\u6295\u8d44\u8005\u3002\u800c\u4e14\uff0c\u5f53\u4f60\u8003\u8651\u5230\u8fd1\u5e74\u6765\u7ecf\u6d4e\u589e\u957f\u603b\u4f53\u4e0a\u662f\u591a\u4e48\u6e29\u548c(\u5c3d\u7ba1\u7279\u6717\u666e\u603b\u7edf\u5439\u5618\u7684\u5185\u5bb9\u4e0e\u4e4b\u76f8\u53cd)\uff0c\u4ee5\u53ca\u7f8e\u56fd\u751f\u4ea7\u7387\u589e\u957f\u4e4f\u529b\u65f6\uff0c\u56de\u8d2d\u72c2\u6f6e\u4f3c\u4e4e\u66f4\u96be\u8bc1\u660e\u662f\u5408\u7406\u7684\u3002\n\u897f\u96c5\u56fe\u98ce\u9669\u6295\u8d44\u5bb6\u5c3c\u514b\u00b7\u54c8\u8bfa\u5c14(Nick Hanauer)\u662f\u4e9a\u9a6c\u900a\u7684\u6700\u521d\u6295\u8d44\u8005\u4e4b\u4e00\uff0c\u4ed6\u5df2\u7ecf\u6210\u4e3a\u56de\u8d2d\u7684\u5f3a\u70c8\u6279\u8bc4\u8005\u3002\u5f53\u6211\u4eec\u6700\u8fd1\u4ea4\u8c08\u65f6\uff0c\u4ed6\u56de\u5fc6\u8d77\u5728\u51e0\u4e2a\u516c\u53f8\u8463\u4e8b\u4f1a\u4efb\u804c\u7684\u7ecf\u5386\uff0c\u5e76\u88ab\u8981\u6c42\u6279\u51c6\u80a1\u7968\u56de\u8d2d\u3002\u5f53\u65f6\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u4e9b\u90fd\u662f\u201c\u5b64\u7acb\u7684\u7edd\u671b\u548c\u611a\u8822\u884c\u4e3a\u201d\uff0c\u6b63\u5982\u4ed6\u6240\u8bf4\u7684\u90a3\u6837\u3002\u5f53\u4ed6\u53d1\u73b0\u8fd9\u79cd\u505a\u6cd5\u5982\u6b64\u76db\u884c\u65f6\uff0c\u4ed6\u60ca\u5446\u4e86\u3002\u5728\u54c8\u8bfa\u5c14\u770b\u6765\uff0c\u56de\u8d2d\u53ea\u662f\u4e00\u79cd\u63a0\u593a\u5f62\u5f0f\uff0c\u4ee3\u8868\u7740\u201c\u5f53\u4ee3\u7ecf\u6d4e\u751f\u6d3b\u4e2d\u6700\u5927\u7684\u9a97\u5c40\u4e4b\u4e00\u201d\u3002\u4ed6\u8bf4\uff0c\u516c\u53f8\u51e0\u4e4e\u4e0d\u9700\u8981\u5c06\u5229\u6da6\u518d\u6295\u8d44\u7684\u539f\u56e0\u662f\uff0c\u4ed6\u6240\u8bf4\u768440\u5e74\u6765\u7684\u201c\u5de5\u8d44\u6291\u5236\u201d\u4e00\u76f4\u662f\u5bf9\u6d88\u8d39\u8005\u9700\u6c42\u7684\u6291\u5236\u3002\u4ed6\u8bf4\uff0c\u4f60\u4ed8\u7ed9\u4eba\u4eec\u7684\u94b1\u8d8a\u5c11\uff0c\u4ed6\u4eec\u4e70\u7684\u4e1c\u897f\u5c31\u8d8a\u5c11\uff0c\u7ecf\u6d4e\u4e2d\u7684\u5e73\u5747\u9700\u6c42\u5c31\u8d8a\u5c11\uff0c\u4f60\u5fc5\u987b\u6295\u8d44\u4e8e\u63d0\u9ad8\u4ea7\u80fd\u7684\u7406\u7531\u5c31\u8d8a\u5c11\u3002\n\u76d6\u6d1b\u666e(Gallup)\u7684\u6570\u636e\u663e\u793a\uff0c\u5373\u4f7f\u5305\u62ec401(K)\u8ba1\u5212\u548c\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\uff0c\u4e5f\u53ea\u670955%\u7684\u7f8e\u56fd\u4eba\u662f\u8be5\u5e02\u573a\u7684\u6295\u8d44\u8005\uff0c\u4f4e\u4e8e21\u4e16\u7eaa\u521d\u81f3\u4e2d\u671f\u768462%-\u5e76\u4e0d\u4ee4\u4eba\u610f\u5916\u7684\u662f\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u80a1\u7968\u6240\u6709\u6743\u53d8\u5f97\u66f4\u52a0\u96c6\u4e2d\u5728\u5bcc\u4eba\u624b\u4e2d\u3002\u7ebd\u7ea6\u5927\u5b66\u7ecf\u6d4e\u5b66\u5bb6\u7231\u5fb7\u534e\u00b7\u6c83\u5c14\u592b\u6307\u51fa\u3002\n..", "note_en": "In early March, as it became clear that the coronavirus pandemic really wasn\u2019t a hoax but was about to upend American life, I started texting my friend Paul, an investment adviser, about the stock market. Although I worked briefly on Wall Street before succumbing to the wealth and prestige of a career in journalism, I couldn\u2019t claim any particular financial expertise. But that didn\u2019t stop me from burdening Paul with my predictions. On Sunday, March 8, I texted him that I thought the market was going to drop 25 to 30 percent over the next three to four months. When the S&amp;P 500 plunged more than 7 percent the next morning, triggering an automatic halt in trading, I told Paul that I was revising my time frame to three to four hours and added, \u2018\u2018Good luck trying to catch this falling knife.\u2019\u2019 The Dow Jones industrial average sank 2,000 points that Monday, the biggest one-day loss since October 2008.\n  The following Monday, with the news growing more ominous, I sent Paul an updated prediction: The Dow was heading to 15,000. I was just spitballing, but given that the market fell almost 90 percent following the 1929 crash, a 50 percent decline now seemed plausible. Several days later, the Dow dipped below 20,000. Feeling oracular, I revised my outlook again: I told Paul 10,000 was my new target. \u2018\u2018Well, that was uplifting,\u2019\u2019 he replied. The market dropped another 1,338 points the next day, and though my funds were tanking along with almost everyone else\u2019s, I found some empty satisfaction, at least, in my prognosticating.\n  Then the market began to rise. I was dismissive. \u2018\u2018How are you enjoying the sucker\u2019s rally?\u2019\u2019 I asked Paul. My skepticism only grew when I saw Jim Cramer \u2014 yeah, he\u2019s still around \u2014 on CNBC saying that bears like me were \u2018\u2018betting against science\u2019\u2019 and basically selling the country short, a comment that called to mind Otter\u2019s \u2018\u2018student court\u2019\u2019 peroration in \u2018\u2018Animal House.\u2019\u2019 By then, however, stocks had climbed 3,000 points in about a week. The market now seemed impervious to bad news while surging on even the flimsiest pretext, and my mood had turned bitterly sarcastic. \u2018\u20185.5 million first-time jobless claims expected tomorrow. So limit up on the open?\u2019\u2019 I texted Paul on April 8. The next morning, the Labor Department announced that  6.6 million new claims had been filed. The Dow gained another 779 points. Paul was as puzzled as I was. \u2018\u2018Ridiculous!!\u2019\u2019 he texted.\n  By then, the market\u2019s rebound had become a source of morbid fascination for many. How could it be that stocks were heading higher \u2014 after a steep sell-off, of course \u2014 in the face of a global pandemic and what\u2019s shaping up to be the worst economic downturn since the Great Depression? Wall Streeters were quick with answers: The Federal Reserve was pumping more than $1 trillion into the markets to stave off a financial meltdown, and besides, with bond yields at record lows, investors didn\u2019t really have any palatable alternatives to stocks as places to put their money. Still, it was jarring, even macabre, to watch the market soar while tens of thousands of Americans were dying of Covid-19 and millions were losing their jobs as a consequence of the nation\u2019s economic shutdown.\n  In the years since the Great Recession, Silicon Valley had eclipsed Wall Street as an object of public ire. But with the market\u2019s unseemly rise, investment banks and hedge funds appear determined to become the villains of this crisis, too. While tech giants like Amazon, Apple and Google have been helping to make life under lockdown somewhat more bearable \u2014 and going some way to redeem Silicon Valley\u2019s image \u2014 the stock market\u2019s shocking resilience (at least so far) has looked an awful lot like indifference to the Covid-19 crisis and the economic calamity it has brought about. The optics, as they say, are terrible. And they can\u2019t help inviting a broader discussion about the market\u2019s role in American life.\n  Even before the coronavirus struck, there were some trends that called into doubt how well the market was facilitating economic growth. The number of publicly traded U.S. companies has been in sharp decline for years, for instance, and financial legerdemain played an outsize part in the vaunted bull market that took the Dow to almost 30,000 in February. The run-up in stock prices clearly didn\u2019t mirror the fortunes of most Americans, a fact laid bare by Covid-19. But it did greatly increase the fortunes of wealthy Americans, who have by far the largest stake in the stock market. They also happen to be the people best positioned to ride out this crisis, which raises a question: Is the market detached from reality, or does it simply reflect the reality of those most heavily invested in it?\n  Hoping to make sense of what\u2019s been going on with the stock market these last couple of months, I reached out to Bill Ackman, a billionaire investment manager who appears to have read the market perfectly. Ackman, 54, is one of Wall Street\u2019s more colorful figures, an activist investor renowned for both the returns he generates and the fights he has had with corporate executives as well as rival financiers. (Some people on Wall Street believe he is the inspiration for the Bobby Axelrod character on the cable series \u2018\u2018Billions.\u2019\u2019) Back in March, he gave an interview on CNBC in which  he implored President Trump to shut down the country for 30 days to combat the coronavirus. \u2018\u2018Hell is coming,\u2019\u2019 he warned, and unless Trump ordered the country to stay at home for a month, \u2018\u2018America will end as we know it.\u2019\u2019 Despite the dire message, Ackman said that he was buying stocks that morning. He was immediately accused, however, of trying to talk down the market. When he revealed a week later that his firm, Pershing Square Capital Management, had made a $2.6 billion profit on credit insurance that it purchased to guard against a steep fall in the market, critics pounced. But it seemed to me that Ackman was just doing his job, and apparently doing it well, so who cared what the critics thought?\n  It turned out that he did. When I spoke to Ackman in the middle of May, on a day the Dow gained another 912 points, he brought up the CNBC interview before I could even mention it. He hadn\u2019t been on CNBC in over two years, he said, and had only \u2018\u2018reluctantly agreed\u2019\u2019 to appear. He noted something that I had overlooked: The day he was interviewed, March 18, was the day the market bottomed out. \u2018\u2018If my goal was, in fact, to push the market down, I certainly failed,\u2019\u2019 he said.\n    He reiterated that he was buying stocks at that point \u2014 and had been since March 12, actually. \u2018\u2018I did not go on TV trying to mislead the public that the world was ending while I was short the market,\u2019\u2019 he said. \u2018\u2018We were massively, massively long the market. And I was $3.3 billion more long on March 18 than I was on March 12.\u2019\u2019\n    But why, with the coronavirus bearing down on the country, had he turned so bullish that week? He told me he had become confident the country would do what was needed to combat the pandemic. \u2018\u2018I said, We\u2019re at a fork in the road. One leads to death and oblivion, and the other leads to long-term health and happiness. We\u2019re going to take the right path, and the way we get there is a little short-term pain, which is a shutdown of the country,\u2019\u2019 is how he explained it. \u2018\u2018That was the bet I was making.\u2019\u2019 He emphasized that he was not being cavalier about the cost of a shutdown: Some of Pershing Square\u2019s biggest clients, he told me, were pension funds for teachers and emergency medical workers \u2014 people who were going to be among those hit hard by the crisis. (He also mentioned that his foundation had donated millions to coronavirus relief efforts and research.)\n  But even with most of the country shut down, almost 100,000 Americans were now dead, and some 38 million were out of work. So why was the stock market going up? Ackman said that the market was heavily weighted to a small number of companies \u2014 Amazon, Apple, Google, Facebook \u2014 that were positioned to become even more dominant than they were before the crisis and whose stock prices were rising in anticipation of that. Weak public companies were being culled \u2014 \u2018\u2018the virus kills older people, people with comorbidities, people with other health issues, and the same thing is true in business; the virus kills off companies that were structurally impaired already\u2019\u2019 \u2014 while strong ones were poised not just to survive but to prosper. \u2018\u2018The impact of the crisis on companies like Amazon is actually a little bit of short-term negative because they\u2019re spending a lot of money managing through this, but it\u2019s long-term hugely beneficial to the company.\u2019\u2019 In that sense, Ackman said, the market \u2018\u2018doesn\u2019t seem wrong to me.\u2019\u2019\n  It was a surprisingly tepid endorsement coming from someone who had made a lot of money in this market, and when I thought about it later, I couldn\u2019t help wondering if it reflected either a sense that the recent gains were tenuous or an awareness that the rally had offended a lot of people.\n  But Jeremy Siegel had no doubts or qualms about the market\u2019s behavior. Siegel, who is 74 and teaches finance at the University of Pennsylvania\u2019s Wharton School, is a prominent scholar of the markets, a fixture on CNBC who is often referred to as \u2018\u2018the wizard of Wharton.\u2019\u2019 He is famed for his bullishness: His 1994 book, \u2018\u2018Stocks for the Long Run,\u2019\u2019 which argued that stocks were the best option for buy-and-hold investors, presaged \u2014 and some say helped spark \u2014 the 1995-2000 bull market during which the S&amp;P 500 more than tripled in value. He and I spoke the morning after the Labor Department reported that the United States lost 20.5 million jobs in April and that the jobless rate had spiked to 14.7 percent. The Dow, true to recent form, jumped 455 points that day.\n  For Siegel, there was nothing strange about the market\u2019s rising despite the gruesome unemployment figures: Investors already knew they would be ugly. \u2018\u2018It\u2019s Principle 1 of Finance 101: Anything that is expected doesn\u2019t move the market,\u2019\u2019 he told me. People who were dismayed by its upswing since mid-March didn\u2019t understand how the market works. \u2018\u2018Over 90 percent of the value of stocks is dependent on earnings more than a year in the future,\u2019\u2019 he said. \u2018\u2018The market is very forward-looking.\u2019\u2019 Investors weren\u2019t thinking six months ahead; they were thinking a year or two ahead, Siegel said, by which point the virus would probably have been brought under control. \u2018\u2018We\u2019ll have a U-shaped recovery, not a V, but the market is looking at the upper part of the U,\u2019\u2019 Siegel said.\n  He then pointed out that people confused by the market\u2019s recovery were overlooking something else: The sector of the economy being hit hardest by the crisis, the small-business community, was not represented in major stock indexes like the Dow and the S&amp;P 500. The market tracked the fortunes of big companies, not mom-and-pop shops.\n  From a societal standpoint, Siegel said, the carnage on Main Street was terrible. He mentioned that he lived in Center City, Philadelphia. \u2018\u2018It\u2019s depressing to me \u2014 I walk by all the shuttered shops that made the neighborhood the neighborhood. I mean, there is something that is going to be lost.\u2019\u2019 But the stock market was unmoved by sentimentality, and the closure of a corner coffee shop meant one less competitor for Starbucks.\n  Siegel went on to say that in contrast to the Great Recession, which was arguably touched off by a housing bubble, this crisis was not a result of excesses built up in the economy. Rather, it was caused by an \u2018\u2018exogenous shock\u2019\u2019 that hit an economy that was on otherwise solid footing. He said investors were anticipating that the economy would resume its upward trajectory once the virus was under control. \u2018\u2018We had a very vibrant, very good economy beforehand,\u2019\u2019 he said, \u2018\u2018and they\u2019re saying that we can return to that in a couple of years.\u2019\u2019\n  I mentioned an interview that he did with MarketBrief in January, in which he said the Dow could reach 40,000 within five years. I asked if he was sticking by his prediction.\n  \u2018\u2018Yes, it\u2019s still possible,\u2019\u2019 he said, though he allowed that the severity of the economic downturn would possibly slow the market\u2019s ascent. \u2018\u2018This set it back maybe two or three years.\u2019\u2019\n    The floor of the New York Stock Exchange is still considered a symbol of American capitalism, a shrine to its vitality and ingenuity. Its actual significance is greatly diminished these days, however, and not just because most trading is now done electronically. A primary function of the stock market is supposed to be the allocation of capital to help companies grow. Yet fewer and fewer companies seem to want the market\u2019s help. In 1997, there were roughly 7,500 publicly traded companies in the United States. That number has since fallen by half, to around 3,600 \u2014 a startling trend when you consider that the economy has more than doubled in size over the same period. How is it that the stock market lost so many listed companies at a time when the economy was growing so much larger, and where have they all gone? Some are no longer in business, while more than a few have been swallowed up through mergers or acquisitions. Lately, though, the decline has been driven by the growing allure and financial muscle of private equity and venture capital. Private equity is now a $5 trillion market, having increased threefold over the last two decades, according to a Milken Institute study, and there are now nearly 8,000 private-equity-owned companies in the United States, quintuple the number at the start of the 2000s.\n  The appeal of private capital is obvious: Firms can obtain the funding they need without having to meet what they see as the onerous regulatory requirements of the public equity markets or having to answer to pesky Wall Street analysts. A few years ago, Elon Musk gave voice to this sentiment when he announced via Twitter that he was taking Tesla private (he reversed course, but that didn\u2019t stop the Securities and Exchange Commission from suing him for misleading investors, a case he settled for $20 million). These days, many promising companies are bypassing the public equity markets as money continues to pour into the private market from institutional investors and wealthy individuals seeking higher returns.  An Ernst &amp; Young study from last year claimed that the public-to-private trend represents \u2018\u2018one of the most profound shifts in the capital markets since the 19th century.\u2019\u2019\n  So, if companies are increasingly meeting their financing needs elsewhere, it seems fair to ask what exactly the point of the stock market is these days. The growth of high-frequency trading, in which players dart in and out of the market seeking to profit from the tiniest price discrepancies, certainly lends credence to the idea that the market is now little more than a glorified casino. Some observers, though, contend that it actually serves a more nefarious purpose \u2014 that the market, instead of directing capital to its most productive uses, has essentially become a mechanism for draining capital  out of the economy in order to funnel ever more of the nation\u2019s wealth upward. This is being done, goes the argument, primarily through stock buybacks \u2014 companies repurchasing their own shares.\n  That\u2019s not a new argument. The financial journalist Doug Henwood made the same case in his 1997 book, \u2018\u2018Wall Street: How It Works and for Whom,\u2019\u2019 which offered a lucid and meticulously detailed critique of what he called \u2018\u2018stock-market-centered capitalism.\u2019\u2019 Henwood\u2019s main contention was that the actual purpose of the market was not to distribute capital efficiently but rather to make the rich richer \u2014 to \u2018\u2018maximize the wealth and power of the most privileged group of people in the world, the creditor-rentier class,\u2019\u2019 as he put it. At a time when the dot-com boom was driving Wall Street to record highs and the Dow was becoming a national obsession, Henwood\u2019s book was almost a form of dissident literature \u2014 and the fact that he was a self-declared Marxist added to its subversive edge.\n  Henwood highlighted the role of stock buybacks, through which companies reduce the number of available shares on the market in order to raise the price. This practice was effectively banned after the 1929 crash because regulators saw it as a form of stock manipulation. But that restriction was lifted in 1982 as part of the financial deregulation that started under the Reagan administration. During the 1980s and \u201990s, as \u2018\u2018shareholder value\u2019\u2019 \u2014 the idea that a company\u2019s primary obligation is to generate returns for its owners \u2014 became a mantra of American business and executive compensation was increasingly linked to a firm\u2019s stock price, buybacks surged. Henwood noted that between 1984 and 1997, U.S. corporations repurchased $864 billion worth of their own shares.\n  Now consider this: Yardeni Research reports that in 2019 alone, U.S. companies in the S&amp;P 500 bought back $728.7 billion of their own stocks, which is equivalent to 3 percent of the country\u2019s G.D.P. Not only that: According to Goldman Sachs, buybacks constituted the single-largest source of demand in the stock market, which was also the case in two of the previous three years. This was a period in which the stock market gained around 65 percent. To the extent that buybacks helped fuel the run-up, it suggests that the market was really just a hall of mirrors.\n  The defense of buybacks \u2014 and the practice has plenty of defenders, including Warren Buffett \u2014 is that if a firm can\u2019t find productive uses for all the profit it has earned, it is obliged to give the surplus to its investors, who can then put the money into the economy in other ways. Jeremy Siegel told me that buybacks are \u2018\u2018totally misunderstood. They get a bad rap.\u2019\u2019 He said that companies \u2018\u2018invest their profits when it is profitable to invest\u2019\u2019 and return the money they can\u2019t spend to shareholders, either through dividends or buybacks \u2014 and because buybacks offer a tax advantage over dividends, they have become the preferred means of distributing excess profits.\n  Whatever the reason, some estimates indicate that between buybacks and dividends, the largest U.S. companies returned roughly 90 percent of their earnings to shareholders in the last decade. That\u2019s money that could have been used to give employees a raise, or to increase spending on research and development, or to cushion a future downturn, but instead it went to investors. And when you consider how generally modest economic growth has been in recent years (despite President Trump\u2019s boasts to the contrary) and the country\u2019s anemic productivity growth, the buyback binge seems even harder to justify.\n  Nick Hanauer, a Seattle venture capitalist who was one of the original investors in Amazon, has become a fierce critic of buybacks. When we spoke recently, he recalled serving on several corporate boards and being asked to approve stock buybacks. At the time, he thought they were \u2018\u2018isolated acts of desperation and stupidity,\u2019\u2019 as he put it. He was stunned when he discovered how prevalent the practice was. In Hanauer\u2019s view, buybacks are just a form of looting and represent \u2018\u2018one of the biggest grifts in contemporary economic life.\u2019\u2019 He said the reason companies had so little need to reinvest their profits was that four decades of what he called \u2018\u2018wage suppression\u2019\u2019 has been a check on consumer demand. \u2018\u2018The less you pay people, the less they buy, the less average demand there is in the economy and the less reason you have to invest in increased productive capacity,\u2019\u2019 he said.\n  Even including 401(k)\u2019s and individual retirement accounts, only 55 percent of Americans are investors in the market, according to Gallup, down from 62 percent in the early-to-mid 2000s \u2014 and not surprisingly, stock ownership has become even more concentrated in the hands of the affluent during this period. The New York University economist Edward Wolff has pointe\n......", "posttime": "2020-05-31 02:36:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u80a1\u7968\u5e02\u573a,market,\u5e02\u573a", "title": "\u80a1\u7968\u5e02\u573a\u8fd8\u6709\u4ec0\u4e48\u7528\u5462\uff1f", "title_en": "What Is the Stock Market Even for Anymore?", "transed": 1, "url": "https://www.nytimes.com/interactive/2020/05/26/magazine/stock-market-coronavirus-pandemic.html", "via": "", "real_tags": ["\u80a1\u7968\u5e02\u573a", "market", "\u5e02\u573a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004426, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u6700\u8fd1\u6ce8\u610f\u5230\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u5176\u4e2d\u63d0\u5230\u660e\u7279\u662f\u53d7\u5230\u6f5c\u5728\u7f51\u7edc\u5b89\u5168\u4e8b\u4ef6\u5f71\u54cd\u7684\u5341\u5bb6\u516c\u53f8\u4e4b\u4e00\u3002\u5728\u5916\u90e8\u6cd5\u533b\u4e13\u5bb6\u7684\u534f\u52a9\u4e0b\uff0c\u6211\u4eec\u8fc5\u901f\u5c55\u5f00\u4e86\u8c03\u67e5\u3002\u8c03\u67e5\u786e\u5b9a\uff0c2020\u5e745\u67086\u65e5\uff0c\u672a\u7ecf\u6388\u6743\u7684\u884c\u4e3a\u8005\u4ece\u8be5\u516c\u53f8\u7684\u7528\u6237\u8d26\u6237\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u4e86\u4fe1\u606f\u3002\u81ea5\u670815\u65e5\u786e\u5b9a\u8fd9\u4e00\u70b9\u4ee5\u6765\uff0c\u6211\u4eec\u7ee7\u7eed\u8fc5\u901f\u8c03\u67e5\uff0c\u4ee5\u8bc4\u4f30\u54ea\u4e9b\u4fe1\u606f\u53d7\u5230\u5f71\u54cd\uff0c\u5e76\u786e\u5b9a\u53d7\u5f71\u54cd\u7684\u4e2a\u4eba\u3002\n\u6d89\u53ca\u7684\u4fe1\u606f\u5305\u62ec\u5ba2\u6237\u7684\u59d3\u540d\u548c\u4ed6\u4eec\u65b0\u521b\u5efa\u7684\u5e10\u6237\u7684\u767b\u5f55\u51ed\u636e\uff0c\u5305\u62ec\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u5bc6\u7801\u3002\u5bc6\u7801\u662f\u6563\u5217\u548c\u52a0\u76d0\u7684\uff0c\u800c\u4e0d\u662f\u7eaf\u6587\u672c\u3002\u7535\u8bdd\u53f7\u7801\u3001\u8d26\u5355\u5730\u5740\u3001\u9001\u8d27\u5730\u5740\u4ee5\u53ca\u51fa\u751f\u65e5\u671f(\u5bf9\u4e8e\u4e0d\u52301%\u7684\u53d7\u5f71\u54cd\u5ba2\u6237)\u4e5f\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\u3002\n\u6839\u636e\u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u8c03\u67e5\uff0c\u6211\u4eec\u6ca1\u6709\u7406\u7531\u76f8\u4fe1\u4ee5\u4e0b\u4fe1\u606f\u53d7\u5230\u5f71\u54cd\uff1a\u652f\u4ed8\u6216\u4fe1\u7528\u5361\u4fe1\u606f\u3001\u5ba2\u6237\u5730\u5740\u7c3f\u4fe1\u606f\uff0c\u6216\u8005\u5ba2\u6237\u6dfb\u52a0\u5230\u94f8\u9020\u8bbe\u8ba1\u4e2d\u7684\u7167\u7247\u6216\u4e2a\u6027\u5316\u4fe1\u606f\u3002\n\u53d7\u5f71\u54cd\u7684\u5bc6\u7801\u7ecf\u8fc7\u6563\u5217\u548c\u52a0\u76d0\u5904\u7406\uff0c\u4e0d\u4ee5\u660e\u6587\u5f62\u5f0f\u5b58\u50a8\u3002\u4e0d\u8fc7\uff0c\u5728\u975e\u5e38\u8c28\u614e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8981\u6c42\u5ba2\u6237\u7acb\u5373\u66f4\u6539\u5176\u94f8\u5e01\u8d26\u6237\u7684\u5bc6\u7801\u3002\n1.\u767b\u5f55\u60a8\u7684\u94f8\u5e01\u8d26\u6237\u9875\u9762https://www.minted.com/my-account 2.\u70b9\u51fb\u201c\u66f4\u6539\u5bc6\u7801\u201d3.\u8f93\u5165\u60a8\u5f53\u524d\u548c\u65b0\u7684\u5bc6\u78014.\u70b9\u51fb\u201c\u66f4\u6539\u5bc6\u7801\u201d\n\u5ba2\u6237\u5e94\u9009\u62e9\u4e0d\u5bb9\u6613\u731c\u5230\u7684\u5f3a\u5bc6\u7801\u3002\u4ed6\u4eec\u8fd8\u5e94\u8be5\u66f4\u6539\u4f7f\u7528\u4e0e\u5176\u94f8\u5e01\u5e10\u6237\u76f8\u540c\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u5bc6\u7801\u7ec4\u5408\u7684\u4efb\u4f55\u5176\u4ed6\u5728\u7ebf\u5e10\u6237\u7684\u5bc6\u7801\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u5ba2\u6237\u5e94\u8c28\u614e\u5bf9\u5f85\u4efb\u4f55\u8981\u6c42\u63d0\u4f9b\u4e2a\u4eba\u4fe1\u606f\u7684\u672a\u7ecf\u8bf7\u6c42\u7684\u901a\u4fe1\uff0c\u5e76\u907f\u514d\u70b9\u51fb\u94fe\u63a5\u6216\u4ece\u53ef\u7591\u7535\u5b50\u90ae\u4ef6\u4e0b\u8f7d\u9644\u4ef6\u3002\n\u94f8\u5e01\u5382\u6709\u4e00\u4e2a\u56e2\u961f\u81f4\u529b\u4e8e\u56de\u7b54\u6709\u5173\u8fd9\u8d77\u4e8b\u4ef6\u7684\u95ee\u9898\u3002\u6709\u95ee\u9898\u7684\u5ba2\u6237\u8bf7\u5728\u5468\u4e00\u81f3\u5468\u4e94\u4e0a\u53488\u70b9\u62e8\u6253\u6211\u4eec\u7684\u70ed\u7ebf\u7535\u8bdd\u3002\u665a\u4e0a8\u70b9\u3002\u7f8e\u56fd\u4e2d\u90e8\u65f6\u95f4\uff0c\u4e0d\u5305\u62ec\u7f8e\u56fd\u4e3b\u8981\u8282\u65e5\u3002\n\u7f8e\u56fd/\u52a0\u62ff\u5927\u514d\u8d39\u70ed\u7ebf\uff1a1-844-963-2706 AU\u514d\u8d39\u70ed\u7ebf\uff1a1800 490 516\u82f1\u56fd\u514d\u8d39\u70ed\u7ebf\uff1a0800 069 8210\u82f1\u56fd\u514d\u8d39\u70ed\u7ebf\uff1a+44 20 3936 1047", "note_en": "We recently became aware of a report that mentioned Minted as one of ten companies impacted by a potential cybersecurity incident. We promptly undertook an investigation, with the assistance of outside forensic experts. The investigation determined that, on May 6, 2020, unauthorized actors obtained information from the company\u2019s user account database. Since determining this on May 15, we have continued to investigate expeditiously to assess what information was impacted and identify affected individuals.\n    The information involved includes customers\u2019 names and login credentials to their Minted accounts, consisting of their email address and password. The passwords were hashed and salted and not in plain text. Telephone number, billing address, shipping address(es), and, for fewer than one percent of affected customers, date of birth, also may have been impacted.\n  Based on our investigation to date,  we have no reason to believe that the following information was affected: payment or credit card information, customer address book information, or photos or personalized information that customers added to Minted designs.\n    Affected passwords were hashed and salted and not stored in plain text. In an abundance of caution, however, we are requesting that customers promptly change their password to their Minted account.\n    1.\tLog into your Minted account page at  https://www.minted.com/my-account \r2.\tClick \u201cchange password\u201d  \r3.\tEnter your current and new passwords \r4.\tClick \u201cchange password.\u201d\n    Customers should choose a strong password that is not easy to guess. They should also change their passwords for any other online accounts for which they use the same email address and password combination used for their Minted account. As always, customers should be cautious of any unsolicited communications that ask for personal information and avoid clicking on links or downloading attachments from suspicious emails.\n    Minted has a team dedicated to responding to questions about the incident.  Customers who have questions should please call one of our hotlines Monday through Friday from 8:00 a.m. to 8:00 p.m. US Central Time, excluding major US holidays.\n  US/CAN toll-free hotline: 1-844-963-2706\r AU toll-free hotline: 1800 490 516\t\r UK toll-free hotline: 0800 069 8210 \r UK toll hotline: +44 20 3936 1047", "posttime": "2020-05-31 01:55:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,notice,\u5ba2\u6237", "title": "MUTED\uff1a\u6570\u636e\u5b89\u5168\u4e8b\u4ef6\u901a\u77e5", "title_en": "Minted: Notice of Data Security Incident", "transed": 1, "url": "https://www.minted.com/data-incident-notice", "via": "", "real_tags": ["\u6570\u636e", "notice", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004424, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5373\u5c06\u5230\u6765\u7684AddTrust\u6839\u8fc7\u671f-\u60a8\u9700\u8981\u4e86\u89e3\u7684\u662f\uff0cSectigo\u76ee\u524d\u63d0\u4f9b\u4e86\u4e0eAddTrust\u65e7\u7248\u6839\u4ea4\u53c9\u7b7e\u7f72\u8bc1\u4e66\u7684\u529f\u80fd\uff0c\u4ee5\u589e\u52a0\u975e\u5e38\u65e7\u7684\u7cfb\u7edf\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u652f\u6301\u3002*\u6b64\u6839\u5c06\u4e8e2020\u5e745\u6708\u5e95\u8fc7\u671f\u3002\u6240\u6709\u4f9d\u8d56\u6b64\u4ea4\u53c9\u7b7e\u540d\u6839\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u5b89\u88c5\u90fd\u5fc5\u987b\u57282020\u5e745\u6708\u4e4b\u524d\u66f4\u65b0\uff0c\u5426\u5219\u5c06\u9762\u4e34\u4e2d\u65ad\u6216\u663e\u793a\u9519\u8bef\u6d88\u606f\u7684\u98ce\u9669\u3002*\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7528\u4f8b\uff0cSectigo\u7684\u6807\u51c6root\u63d0\u4f9b\u6240\u9700\u7684\u5168\u9762\u5ba2\u6237\u652f\u6301\u3002*\u5bf9\u4e8e\u4e0d\u5bfb\u5e38\u7684\u60c5\u51b5\uff0cSectigo\u63d0\u4f9b\u4e0e\u5176AAA\u6839\u7684\u65b0\u4ea4\u53c9\u7b7e\u540d\u9009\u9879\uff0c\u8be5\u9009\u9879\u8981\u52302028\u5e74\u624d\u4f1a\u5230\u671f\u3002\u8bf7\u9605\u8bfb\u672c\u6587\uff0c\u4ee5\u83b7\u5f97\u4ea4\u53c9\u7b7e\u540d\u3001AddTrust\u6839\u5230\u671f\u4ee5\u53ca\u8be5\u5230\u671f\u65e5\u671f\u4e4b\u540e\u7684\u6f5c\u5728\u66ff\u4ee3\u65b9\u6848\u7684\u5b8c\u6574\u89e3\u91ca\u3002\u6709\u5173\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fd8\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u6587\u6863\u3002\n\u4ec0\u4e48\u662f\u6839\u8bc1\u4e66\uff1f\u6839\u8bc1\u4e66\u662f\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002\u8fd9\u610f\u5473\u7740\u201cIssuer\u201d\u548c\u201cSubject\u201d\u662f\u76f8\u540c\u7684\u3002\u6839\u8bc1\u4e66\u7531\u4e8e\u9ed8\u8ba4\u5305\u62ec\u5728\u8bf8\u5982\u6d4f\u89c8\u5668\u6216OS\u4e4b\u7c7b\u7684\u8f6f\u4ef6\u7684\u4fe1\u4efb\u5b58\u50a8\u4e2d\u800c\u6210\u4e3a\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66(\u6216\u53d7\u4fe1\u4efb\u7684CA\u6216\u4fe1\u4efb\u951a)\u3002\u8fd9\u4e9b\u4fe1\u4efb\u5b58\u50a8\u533a\u7531\u6d4f\u89c8\u5668\u8f6f\u4ef6\u6216\u64cd\u4f5c\u7cfb\u7edf\u9891\u7e41\u66f4\u65b0\uff0c\u901a\u5e38\u4f5c\u4e3a\u5b89\u5168\u66f4\u65b0\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5728\u8f83\u65e7\u7684\u8fc7\u65f6\u5e73\u53f0\u4e0a\uff0c\u5b83\u4eec\u901a\u5e38\u4ec5\u4f5c\u4e3a\u5b8c\u6574\u8f6f\u4ef6\u66f4\u65b0(\u5982Windows Service Pack\u6216\u53ef\u9009\u7684Windows Update\u7248\u672c)\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u66f4\u65b0\u3002\u60a8\u7ad9\u70b9\u7684\u8bc1\u4e66\u662f\u4ece\u4e00\u4e2a\u201c\u94fe\u201d\u9881\u53d1\u7684\u6216\u201c\u4e2d\u95f4\u201dCA\u9881\u53d1\u7684\uff0c\u5b83\u5b8c\u6210\u4e86\u8fd4\u56de\u8fd9\u4e9b\u53d7\u4fe1\u4efb\u6839\u8bc1\u4e66\u7684\u8def\u5f84\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b89\u5168\u66f4\u65b0\u5728\u5f53\u4eca\u975e\u5e38\u91cd\u8981\u3002\u53ef\u80fd\u6709\u4e00\u4e9b\u8bbe\u5907\u6ca1\u6709\u66f4\u65b0\u4ee5\u5305\u542b\u73b0\u4ee3\u8bcd\u6839\uff0c\u4f46\u56e0\u6b64\u4e5f\u4e0d\u652f\u6301\u73b0\u4ee3\u4e92\u8054\u7f51\u6240\u9700\u7684\u6807\u51c6\u3002Android\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u867d\u7136Android 2.3\u59dc\u997c\u6ca1\u6709\u5b89\u88c5\u73b0\u4ee3\u7684root\uff0c\u5e76\u4f9d\u8d56\u4e8eAddTrust\uff0c\u4f46\u5b83\u4e5f\u4e0d\u652f\u6301TLS 1.2\u62161.3\uff0c\u5e76\u4e14\u4e0d\u53d7\u4f9b\u5e94\u5546\u7684\u652f\u6301\u5e76\u88ab\u8d34\u4e0a\u8fc7\u65f6\u7684\u6807\u7b7e\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u672c\u6587\uff1a*Sectigo Chain Hierarchy and Intermediate Roots\u3002\n\u4ec0\u4e48\u662f\u4ea4\u53c9\u7b7e\u540d\uff1fCA\u901a\u5e38\u63a7\u5236\u591a\u4e2a\u6839\u8bc1\u4e66\uff0c\u901a\u5e38\u6839\u8bc1\u4e66\u8d8a\u65e7\uff0c\u5b83\u5728\u8f83\u65e7\u5e73\u53f0\u4e0a\u7684\u5206\u5e03\u5c31\u8d8a\u5e7f\u6cdb\u3002\u4e3a\u4e86\u5229\u7528\u8fd9\u4e00\u4e8b\u5b9e\uff0cCA\u751f\u6210\u4ea4\u53c9\u8bc1\u4e66\u4ee5\u786e\u4fdd\u5176\u8bc1\u4e66\u5f97\u5230\u5c3d\u53ef\u80fd\u5e7f\u6cdb\u7684\u652f\u6301\u3002\u4ea4\u53c9\u8bc1\u4e66\u662f\u6307\u4e00\u4e2a\u6839\u8bc1\u4e66\u7528\u4e8e\u7b7e\u7f72\u53e6\u4e00\u4e2a\u6839\u8bc1\u4e66\u3002\u4ea4\u53c9\u8bc1\u4e66\u4f7f\u7528\u4e0e\u6b63\u5728\u7b7e\u540d\u7684\u6839\u76f8\u540c\u7684\u516c\u94a5\u548c\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u4ea4\u53c9\u8bc1\u4e66\u53ef\u4ee5\u662f\uff1aSubject\uff1aComodo RSA\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u9881\u53d1\u8005\uff1aAddTrust\u5916\u90e8CA\u6839https://crt.sh/?id=1044348\u4f7f\u7528\u4e0e\u81ea\u7b7e\u540d\u7684Comodo\u6839\u8bc1\u4e66\u76f8\u540c\u7684\u4e3b\u9898\u548c\u516c\u94a5\u3002\u6d4f\u89c8\u5668\u548c\u5ba2\u6237\u7aef\u5c06\u94fe\u63a5\u56de\u5b83\u4eec\u4fe1\u4efb\u7684\u201c\u6700\u4f73\u201d\u6839\u8bc1\u4e66\u3002\nAddTrust External CA Expture Sectigo\u63a7\u5236\u540d\u4e3aAddTrust External CA Root\u7684\u6839\u8bc1\u4e66\uff0c\u8be5\u8bc1\u4e66\u5df2\u7528\u4e8e\u521b\u5efaSectigo\u7684\u73b0\u4ee3\u6839\u8bc1\u4e66\u3001Comodo RSA\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u548cUSERTrust RSA\u8bc1\u4e66\u9881\u53d1\u673a\u6784(\u4ee5\u53ca\u8fd9\u4e9b\u6839\u7684ECC\u7248\u672c)\u7684\u4ea4\u53c9\u8bc1\u4e66\u3002\u8fd9\u4e9b\u6811\u6839\u8981\u52302038\u5e74\u624d\u4f1a\u8fc7\u671f\u3002\u4f46\u662f\uff0cAddTrust\u5916\u90e8CA\u6839\u5c06\u4e8e2020\u5e745\u670830\u65e5\u5230\u671f\u3002\u5728\u6b64\u65e5\u671f\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u6d4f\u89c8\u5668\u5c06\u94fe\u63a5\u56de\u65e7\u7684AddTrust\u7528\u4e8e\u4ea4\u53c9\u7b7e\u540d\u7684\u73b0\u4ee3\u6839\u3002\u4efb\u4f55\u66f4\u65b0\u3001\u66f4\u65b0\u7684\u8bbe\u5907\u6216\u5e73\u53f0\u4e0a\u90fd\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u9519\u8bef\u3002\n\u8bc1\u4e66\u94fe\u56fe\u6ca1\u6709\u73b0\u4ee3\u201cUSERTRust\u201d\u6839\u7684\u65e7\u5f0f\u6d4f\u89c8\u5668\u6216\u8f83\u65e7\u7684\u8bbe\u5907\u4e0d\u4f1a\u4fe1\u4efb\u5b83\uff0c\u56e0\u6b64\u4f1a\u5728\u94fe\u4e0a\u8fdb\u4e00\u6b65\u67e5\u627e\u5b83\u4fe1\u4efb\u7684\u6839\uff0c\u5373AddTrust\u5916\u90e8CA\u6839\u3002\u66f4\u73b0\u4ee3\u7684\u6d4f\u89c8\u5668\u5e94\u8be5\u5df2\u7ecf\u5b89\u88c5\u4e86USERTrust\u6839\u5e76\u4fe1\u4efb\u5b83\uff0c\u800c\u4e0d\u9700\u8981\u4f9d\u8d56\u8f83\u65e7\u7684AddTrust\u6839\u3002\n\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\uff0c\u5305\u62ec\u4e3a\u73b0\u4ee3\u5ba2\u6237\u7aef\u6216\u670d\u52a1\u5668\u7cfb\u7edf\u63d0\u4f9b\u670d\u52a1\u7684\u8bc1\u4e66\uff0c\u65e0\u8bba\u60a8\u662f\u5426\u9881\u53d1\u4e86\u4ea4\u53c9\u94fe\u63a5\u5230AddTrust\u6839\u7684\u8bc1\u4e66\uff0c\u90fd\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\u622a\u81f32020\u5e744\u670830\u65e5\uff1a\u5bf9\u4e8e\u4f9d\u8d56\u4e8e\u975e\u5e38\u65e7\u7684\u7cfb\u7edf\u7684\u4e1a\u52a1\u6d41\u7a0b\uff0cSectigo\u5df2\u63d0\u4f9b(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u8bc1\u4e66\u6346\u7ed1\u5305\u4e2d)\u7528\u4e8e\u4ea4\u53c9\u7b7e\u540d\u7684\u65b0\u9057\u7559\u6839\uff0c\u5373\u201cAAA\u8bc1\u4e66\u670d\u52a1\u201d\u6839\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4f9d\u8d56\u4e8e\u975e\u5e38\u65e7\u7684\u9057\u7559\u7cfb\u7edf\u7684\u8fdb\u7a0b\uff0c\u8bf7\u683c\u5916\u5c0f\u5fc3\u3002\u6ca1\u6709\u63a5\u6536\u5230\u652f\u6301\u8f83\u65b0\u6839\u76ee\u5f55(\u5982Sectigo\u7684Comodo\u6839\u76ee\u5f55)\u6240\u9700\u7684\u66f4\u65b0\u7684\u7cfb\u7edf\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u4e22\u5931\u5176\u4ed6\u91cd\u8981\u7684\u5b89\u5168\u66f4\u65b0\uff0c\u56e0\u6b64\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b89\u5168\u7684\u3002\u5982\u679c\u60a8\u4ecd\u60f3\u4ea4\u53c9\u7b7e\u540d\u5230AAA\u8bc1\u4e66\u670d\u52a1\u6839\uff0c\u8bf7\u76f4\u63a5\u8054\u7cfbSectigo\u3002\u5e38\u89c1\u95ee\u9898\u3002\n2020\u5e745\u670830\u65e5\u4e4b\u540e\uff0c\u6211\u7684\u8bc1\u4e66\u662f\u5426\u4ecd\u7136\u53ef\u4fe1\uff1f\u662f\u3002\u6240\u6709\u73b0\u4ee3\u5ba2\u6237\u7aef\u548c\u64cd\u4f5c\u7cfb\u7edf\u90fd\u6709\u66f4\u65b0\u7684\u3001\u73b0\u4ee3\u7684Comodo\u548cUSERTrust\u6839\uff0c\u5b83\u4eec\u8981\u52302038\u5e74\u624d\u4f1a\u8fc7\u671f\u3002\u5728\u5e73\u53f0\u4e0a\uff0c\u4fe1\u4efb\u5546\u5e97\u5df2\u7ecf\u6210\u4e3a\n\u60a8\u8fd8\u53ef\u4ee5\u5c06\u7cfb\u7edf\u65f6\u949f\u8c03\u6574\u52302020\u5e746\u6708\uff0c\u4ee5\u67e5\u770bAddTrust\u6839\u8bc1\u4e66\u548c\u4ea4\u53c9\u8bc1\u4e66\u8fc7\u671f\u540e\u5ba2\u6237\u7aef\u7684\u5de5\u4f5c\u60c5\u51b5\u3002\n\u73b0\u4ee3\u6839\uff1aComodo RSA/ECC\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u548cUSERTrust RSA/ECC\u8bc1\u4e66\u9881\u53d1\u673a\u6784\uff1a*\u5355\u51fbcrt.sh\u94fe\u63a5\u4e0a\u7684\u8bc1\u4e66\u6807\u7b7e\u63d0\u4f9b\u8bc1\u4e66\u6587\u4ef6\u672c\u8eab\u7684\u4e0b\u8f7d*\u8fd9\u4e9b\u6839\u6dfb\u52a0\u5230\u4ee5\u4e0b\u5e73\u53f0\uff1aApple\uff1aMicrosoft\uff1aWindows XP(\u901a\u8fc7\u81ea\u52a8\u6839\u66f4\u65b0\uff1b\u8bf7\u6ce8\u610f\uff0c\u5728Vista\u4e4b\u524d\uff0cWindows\u4e0d\u652f\u6301ECC)\u3002\nMozilla\uff1a\u8c37\u6b4c\uff1a\u7532\u9aa8\u6587\uff1aOpera\uff1a360\u6d4f\u89c8\u5668\uff1a\u4e0eAaa\u8bc1\u4e66\u670d\u52a1\u7684\u4ea4\u53c9\u8bc1\u4e66\u63d0\u4f9b\u4e0e\u65e7\u7248\u672c\u7684\u517c\u5bb9\u6027\uff1aAAA\u8bc1\u4e66\u670d\u52a1\u81ea\u7b7e\u540d\u6839[2028\u5e74\u5230\u671f]-https://crt.sh/?id=331986 AAA\u8bc1\u4e66\u670d\u52a1-\u4ea4\u53c9\u8bc1\u4e66\uff1aAAA\u8bc1\u4e66\u670d\u52a1-USERTrust RSA\u8bc1\u4e66\u9881\u53d1\u673a\u6784-https://crt.sh/?id=1282303295-AAA\u8bc1\u4e66\u670d\u52a1-USERTrust ECC\u8bc1\u4e66\u9881\u53d1\u673a\u6784-https://crt.sh/?id=1282303296 AAA\u8bc1\u4e66\u670d\u52a1-Comodo RSA\u8bc1\u4e66\u9881\u53d1\u673a\u6784-HTTPS\u3002\uff1a//crt.sh/\uff1fid=2545965608 aaa\u8bc1\u4e66\u670d\u52a1-\u79d1\u6469\u7f57ECC\u8bc1\u4e66\u9881\u53d1\u673a\u6784-https://crt.sh/?id=2545966120\u3002\n\u5982\u679c\u6211\u7684\u57fa\u7840\u67b6\u6784\u6216\u5e94\u7528\u7a0b\u5e8f\u53ea\u4fe1\u4efbAddTrust\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u5982\u679c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u53ea\u4fe1\u4efbAddTrust\u5916\u90e8CA\u6839\uff0c\u800c\u4e0d\u4fe1\u4efb\u66f4\u73b0\u4ee3\u7684Comodo\u6216USERTrust\u6839-\u9519\u8bef\u5c06\u57282020\u5e745\u670830\u65e5\u4e4b\u540e\u53d1\u751f\u3002*\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u66f4\u65b0\u4efb\u4f55\u8fd9\u6837\u7684\u7cfb\u7edf\uff0c\u4ee5\u5305\u62ec\u66f4\u73b0\u4ee3\u7684\u6839\u6e90\u3002\u5982\u679c\u8be5\u5e73\u53f0\u4e0d\u652f\u6301\u73b0\u4ee3\u7b97\u6cd5(\u4f8b\u5982\uff0cSHA-2)\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e0e\u8be5\u7cfb\u7edf\u4f9b\u5e94\u5546\u5546\u8c08\u66f4\u65b0\u4e8b\u5b9c\u3002\n\u5df2\u5c06AddTrust External CA Root\u5d4c\u5165\u5176\u5e94\u7528\u7a0b\u5e8f\u6216\u81ea\u5b9a\u4e49\u4f20\u7edf\u8bbe\u5907\u7684\u5ba2\u6237\u53ef\u80fd\u9700\u8981\u57282020\u5e745\u6708\u5230\u671f\u65e5\u671f\u4e4b\u524d\u5d4c\u5165\u65b0\u7684USERTrust RSA CA Root\u66f4\u6362\u3002\n\u9664\u4e86AddTrust\u6839\u4e4b\u5916\uff0cSectigo\u8fd8\u6709\u5176\u4ed6\u66f4\u8001\u7684\u9057\u7559\u6839\uff0c\u4e3a\u4e86\u6269\u5c55\u5411\u540e\u517c\u5bb9\u6027\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\u4e00\u4e2a\u6839\u751f\u6210\u4e86\u4ea4\u53c9\u8bc1\u4e66\u3002\u4ea4\u53c9\u8bc1\u4e66\u7531\u540d\u4e3a\u201cAAA\u8bc1\u4e66\u670d\u52a1\u201d\u7684\u6839\u7b7e\u540d\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u4e0e\u652f\u6301\u90e8\u95e8\u6216\u60a8\u7684\u5ba2\u6237\u7ecf\u7406\u8054\u7cfb\u3002", "note_en": "Upcoming AddTrust Root Expiration \u2013 What You Need to Know   \u00a0 Sectigo at present offers the ability to cross-sign certificates with the AddTrust legacy root to increase support among very old systems and devices.\u00a0 This root is due to expire at the end of May, 2020.\u00a0 Any applications or installations that depend on this cross-signed root must be updated by May, 2020 or run the risk of outage or displayed error message. \u00a0 For the vast majority of use cases Sectigo\u2019s standard root supplies the full required client support.\u00a0 For unusual cases, Sectigo offers a new cross signing option with its AAA root, which does not expire until 2028. \u00a0 Read this article for a full explanation of cross signing, the AddTrust root expiration, and potential alternatives beyond that expiration date. Please also consult our  FAQ document for answers to you common questions.\n What Is a Root Certificate? Root certificates are self-signed certificates. This means the \u201cIssuer\u201d and \u201dSubject\u201d are the same. A root certificate becomes a trusted root certificate (or trusted CA, or trust anchor) by virtue of being included by default in the trust store of a piece of software such as a browser or OS.  These trust stores are updated by the browser software or OS frequently, often as part of security updates, but on older outdated platforms they were often updated only as part of a full software update \u2013 such as Windows Service Packs or optional Windows Update releases.  Certificates for your site are issued from a \u201cchain\u201d of issuing or \u201cintermediate\u201d CA that completes a path back to these trusted root certificates.  It is important to note that security updates are of paramount importance today. There may be devices which do not have updates to include modern roots \u2013 but as a consequence also do not support standards required by the modern internet. A good example is Android. While Android 2.3 Gingerbread does not have the modern roots installed and relies on AddTrust, it also does not support TLS 1.2 or 1.3, and is unsupported and labelled obsolete by the vendor.  For more information view this article:\u00a0  Sectigo Chain Hierarchy and Intermediate Roots\n What Is Cross-Signing? CAs often control multiple root certificates, and generally the older the root the more widely distributed it is on older platforms. In order to take advantage of this fact, CAs generate  cross certificates to ensure that their certificates are as widely supported as possible. A cross certificate is where one root certificate is used to sign another. The cross certificate uses the same public key and Subject as the root being signed.  For example, a cross certificate could be: Subject: COMODO RSA Certification Authority Issuer: AddTrust External CA Root https://crt.sh/?id=1044348 Uses the same Subject and public key as the self-signed COMODO root certificate.  Browsers and clients will chain back to the \u201cbest\u201d root certificate they trust.\n AddTrust External CA Expiration Sectigo controls a root certificate called the AddTrust External CA Root, which has been used to create cross-certificates to Sectigo\u2019s modern root certificates, the COMODO RSA Certification Authority and USERTrust RSA Certification Authority (as well as the ECC versions of those roots). These roots don\u2019t expire until 2038.  However, the AddTrust External CA Root expires on May 30th 2020.  After this date, clients and browsers will chain back to the modern roots that the older AddTrust was used to cross sign. No errors will be displayed on any updated, newer device or platform which has had updates\n Certificate Chain Diagram    A legacy browser or older device that does not have the modern \u201cUSERTRust\u201d root would not trust it and so would look further up the chain to a root it does trust, the AddTrust External CA Root. A more modern browser would have the USERTrust root already installed and trust itwithout needing to rely on the older AddTrust root.\n What You Need to Do For most use cases, including certificates serving modern client or server systems, no action is required, whether or not you have issued certificates cross-chained to the AddTrust root.\n As of April 30, 2020:\u00a0 For business processes that depend on very old systems, Sectigo has made available (by default in the certificate bundles) a new legacy root for cross-signing, the \u201cAAA Certificate Services\u201d root. However, please use extreme caution about any process that depends on very old legacy systems. Systems that have not received the updates necessary to support newer roots such as Sectigo\u2019s COMODO root will inevitably be missing other essential security updates and should be considered insecure. If you would still like to cross-sign to the AAA Certificate Services root, please contact Sectigo directly.    FAQs\n Will my certificate still be trusted after May 30, 2020? Yes. All modern clients and operating systems have the newer, modern COMODO and USERTrust roots which don\u2019t expire until 2038.  On platforms where the trust stores have been artificially limited or cannot be updated (embedded devices, for example), you will need to update and install the newer Sectigo roots. Please ensure these devices also have the necessary security updates from the vendor.    Do I need to reissue or reinstall my certificate? No. Your certificate will remain trusted until it\u2019s natural expiry date and does not need reissuance or reinstallation. You can choose to stop installing the cross-certificate on your servers if you wish. Should you need legacy compatibility after the AddTrust expiry we have a replacement cross-certificate that you can install on your servers in place of the AddTrust cross-certificate.\u00a0 See below for more details.    Can I test or check that I won\u2019t see any errors? Yes. If you have a certificate valid into June 2020 and beyond, you can set the clock on your system forward to June 1st 2020, and test the site. Modern browsers will display no errors, and you can see that the certificate chains back to the COMODO or USERTrust root. (Note: some browsers such as Google Chrome, will detect that your clock is \u201cwrong\u201d and show a warning unrelated to the certificates as a result.)  Here is a   test site you can use to evaluate your environment\u00a0 here\n You can also adjust your system clock into June 2020 to see how clients function after the expiry of the AddTrust root and cross-certificates.\n   The modern roots: COMODO RSA/ECC Certification Authority and USERTrust RSA/ECC Certification Authority:    *clicking the &#39; certificates&#39; label on crt.sh links provides a download to the certificate file itself*   These roots were added to the following platforms since:   Apple:     Microsoft: Windows XP (via Automatic Root Update; note that ECC wasn&#39;t supported by Windows until Vista)\n    Mozilla:     Google:     Oracle:     Opera:     360 Browser:    The cross-certificates with AAA Certificate Services provide compatibility to older versions:  AAA Certificate Services self-signed root [expiring 2028] -  https://crt.sh/?id=331986   AAA Certificate Services - cross-certificates: AAA Certificate Services - USERTrust RSA Certification Authority -  https://crt.sh/?id=1282303295\u00a0AAA Certificate Services - USERTrust ECC Certification Authority -  https://crt.sh/?id=1282303296 AAA Certificate Services - Comodo RSA Certification Authority -  https://crt.sh/?id=2545965608\u00a0AAA Certificate Services - Comodo ECC Certification Authority -  https://crt.sh/?id=2545966120\n     What if I have infrastructure or an application that only trusts AddTrust? If a system or application only trusts the AddTrust External CA root and not the more modern Comodo or USERTrust roots \u2013 errors will occur after May 30th, 2020. \u00a0  You may need to update any such systems to include more modern roots if it\u2019s possible to do so. If the platform doesn\u2019t support modern algorithms (SHA-2, for example) then you will need to speak to that system vendor about updates.\n Customers who have embedded AddTrust External CA Root into their applications or custom legacy devices may need to embed the new USERTrust RSA CA Root replacement before the May 2020 expiry date.\n Sectigo has other, older, legacy roots apart from the AddTrust root, and we have generated cross-certificates from one in order to extend backward compatibility. The cross certificate is signed by the root called \u201cAAA Certificate Services.\u201d \u00a0Please contact Support or your Account Manager for details.", "posttime": "2020-05-31 01:54:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,ca,root,\u8bc1\u4e66", "title": "CA Root\u5df2\u4e8e2020\u5e745\u670830\u65e5\u8fc7\u671f", "title_en": "CA Root expired on 30 May 2020", "transed": 1, "url": "https://support.sectigo.com/articles/Knowledge/Sectigo-AddTrust-External-CA-Root-Expiring-May-30-2020", "via": "", "real_tags": ["2020", "ca", "root", "\u8bc1\u4e66"]}, {"category": "", "categoryclass": "", "imagename": "75e751a32966d76a722808ac8a2b6248.jpeg", "infoid": 1004423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6d6e\u70b9\u6570\u5bf9\u4e8e\u79d1\u5b66\u7f16\u7a0b\u975e\u5e38\u6709\u7528\uff0c\u4f46\u5fae\u5904\u7406\u5668\u53ea\u76f4\u63a5\u652f\u6301\u6574\u6570\u30021\u867d\u7136\u65e9\u572820\u4e16\u7eaa50\u5e74\u4ee3\u548c60\u5e74\u4ee3\uff0c\u6d6e\u70b9\u5728\u5927\u578b\u673a\u4e2d\u5c31\u5f88\u5e38\u89c1\uff0c\u4f46\u76f4\u52301980\u5e74\uff0c\u82f1\u7279\u5c14\u624d\u4e3a\u5fae\u578b\u8ba1\u7b97\u673a\u5f15\u5165\u4e868087\u6d6e\u70b9\u534f\u5904\u7406\u5668\u30022\u5c06\u6b64\u82af\u7247\u6dfb\u52a0\u5230IBMPC\u7b49\u5fae\u578b\u8ba1\u7b97\u673a\u4e0a\uff0c\u6d6e\u70b9\u8fd0\u7b97\u7684\u901f\u5ea6\u6700\u9ad8\u53ef\u8fbe100\u500d\uff0c\u8fd9\u5bf9AutoCAD\u3001\u7535\u5b50\u8868\u683c\u6216\u98de\u884c\u6a21\u62df\u5668\u7b49\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u597d\u5904\u30023\u7f3a\u70b9\u662f8087\u82af\u7247\u7684\u4ef7\u683c\u9ad8\u8fbe\u6570\u767e\u7f8e\u5143\u30024.\u3002\n\u5b9e\u73b0\u6d6e\u70b9\u8fd0\u7b97\u5f88\u56f0\u96be\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u8ba1\u7b97\u901f\u5ea6\u5f88\u5feb\u3001\u5f88\u51c6\u786e\u3002\u6ea2\u51fa\u3001\u820d\u5165\u3001\u8d85\u8d8a\u8fd0\u7b97\u548c\u5927\u91cf\u8fb9\u7f18\u60c5\u51b5\u90fd\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u57288087\u4e4b\u524d\uff0c\u6bcf\u4e2a\u5236\u9020\u5546\u90fd\u6709\u81ea\u5df1\u4e0d\u517c\u5bb9\u7684\u6d6e\u70b9\u4e34\u65f6\u5b9e\u73b0\u3002\u7136\u800c\uff0c\u82f1\u7279\u5c14\u8058\u8bf7\u4e86\u6570\u503c\u5206\u6790\u4e13\u5bb6\u5a01\u5ec9\u00b7\u5361\u6c49(William Kahan)\u6839\u636e\u4e25\u683c\u7684\u539f\u5219\u8bbe\u8ba1\u7cbe\u786e\u7684\u6d6e\u70b9\u30025\u7ed3\u679c\u662f8087\u7684\u6d6e\u70b9\u4f53\u7cfb\u7ed3\u6784\u3002\u8fd9\u6210\u4e3a\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u8ba1\u7b97\u673a\u4f7f\u7528\u7684IEEE754\u6807\u51c6\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a8087\u662f\u6709\u53f2\u4ee5\u6765\u8bbe\u8ba1\u7684\u6700\u6709\u5f71\u54cd\u529b\u7684\u82af\u7247\u4e4b\u4e00\u3002\nIntel8087\u6d6e\u70b9\u5355\u5143\u82af\u7247\u7684\u88f8\u7247\uff0c\u6807\u6709\u4e3b\u8981\u529f\u80fd\u5757\u3002\u6a21\u5177\u5c3a\u5bf8\u4e3a5 mm\u00d76 mm\u3002\u53d8\u901f\u7bb1\u7684\u8f6e\u5ed3\u7528\u7ea2\u8272\u6807\u51fa\u3002\u5355\u51fb\u67e5\u770b\u5927\u56fe\u3002\n\u4e3a\u4e86\u63a2\u7d228087\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u6253\u5f00\u4e86\u4e00\u57578087\u82af\u7247\uff0c\u7528\u663e\u5fae\u955c\u62cd\u6444\u4e86\u7845\u6676\u7247\u7684\u7167\u7247\u30028087\u5305\u542b40,000\u4e2a\u6676\u4f53\u7ba1\uff0c\u5c06\u82af\u7247\u5236\u9020\u63a8\u5411\u4e86\u6781\u9650\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e0e\u4e4b\u914d\u5957\u76848086\u5fae\u5904\u7406\u5668\u53ea\u670929,000\u4e2a\u6676\u4f53\u7ba1\u3002\u4e3a\u4e86\u4f7f\u82af\u7247\u6210\u4e3a\u53ef\u80fd\uff0c\u82f1\u7279\u5c14\u5f00\u53d1\u4e86\u65b0\u6280\u672f\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u91cd\u70b9\u4ecb\u7ecd\u4e86\u9ad8\u901f\u4e8c\u8fdb\u5236\u79fb\u4f4d\u5668(\u4e0a\u9762\u7684\u7ea2\u8272\u8f6e\u5ed3)\u3002\u79fb\u4f4d\u5668\u5360\u636e\u4e86\u82af\u7247\u9762\u79ef\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6700\u5c0f\u5316\u5b83\u7684\u9762\u79ef\u5bf9\u4e8e\u5236\u9020\u9ad8\u901f\u4e8c\u8fdb\u5236\u79fb\u4f4d\u5668\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u91cd\u70b9\u4ecb\u7ecd\u4e86\u9ad8\u901f\u4e8c\u8fdb\u5236\u79fb\u4f4d\u5668(\u4e0a\u9762\u7684\u7ea2\u8272\u8f6e\u5ed3)\u3002\u79fb\u4f4d\u5668\u5360\u636e\u4e86\u82af\u7247\u9762\u79ef\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6700\u5c0f\u5316\u5b83\u7684\u9762\u79ef\u5bf9\u4e8e\u5236\u9020\u9ad8\u901f\u4e8c\u8fdb\u5236\u79fb\u4f4d\u5668\u81f3\u5173\u91cd\u8981\u3002\n\u6d6e\u70b9\u6570\u7531\u5206\u6570(\u4e5f\u79f0\u4e3a\u6709\u6548\u6570\u6216\u5c3e\u6570)\u3001\u6307\u6570\u548c\u7b26\u53f7\u4f4d\u7ec4\u6210\u3002(\u8fd9\u4e9b\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u4f46\u5bf9\u4e8e\u4ee510\u4e3a\u57fa\u6570\u7684\u7c7b\u6bd4\uff0c\u6570\u5b576.02\u00d710 23\u7684\u5206\u6570\u4e3a6.02\uff0c\u6307\u6570\u4e3a23\u3002)\u5904\u7406\u5206\u6570\u7684\u7535\u8def\u4f4d\u4e8e\u82af\u7247\u7167\u7247\u7684\u5e95\u90e8\u3002\u4ece\u5de6\u5230\u53f3\uff0c\u5206\u6570\u7535\u8def\u7531\u5e38\u91cfROM\u3001\u79fb\u4f4d\u5668(\u9ad8\u4eae\u663e\u793a)\u3001\u52a0\u6cd5\u5668/\u51cf\u6cd5\u5668\u548c\u5bc4\u5b58\u5668\u5806\u6808\u7ec4\u6210\u3002\u5728\u5176\u4e0a\u65b9\uff0c\u5fae\u7801\u5f15\u64ce\u548cROM\u63a7\u5236\u82af\u7247\u3002\n\u79fb\u4f4d\u5668\u7684\u4f5c\u7528\u662f\u5411\u5de6\u6216\u5411\u53f3\u79fb\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u8fd9\u662f\u4e00\u9879\u5728\u6d6e\u70b9\u8fd0\u7b97\u4e2d\u5177\u6709\u51e0\u4e2a\u5173\u952e\u4f5c\u7528\u7684\u4efb\u52a1\u3002\u5f53\u4e24\u4e2a\u6d6e\u70b9\u6570\u76f8\u52a0\u6216\u76f8\u51cf\u65f6\uff0c\u5fc5\u987b\u5c06\u6570\u5b57\u79fb\u4f4d\u4ee5\u4f7f\u4e8c\u8fdb\u5236\u70b9\u5bf9\u9f50\u3002(\u4e8c\u8fdb\u5236\u70b9\u7c7b\u4f3c\u4e8e\u5c0f\u6570\u70b9\uff0c\u4f46\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u6570\u3002)8087\u7684\u5148\u9a8c\u6307\u4ee4\u662f\u56f4\u7ed5\u79fb\u4f4d\u548c\u52a0\u6cd5\u8fd0\u7b97\u6784\u5efa\u7684\uff0c\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3aCORDIC\u7684\u7b97\u6cd5\u3002\u79fb\u4f4d\u5668\u8fd8\u7528\u4e8e\u4ece16\u4f4d\u5757\u6c47\u7f16\u6d6e\u70b9\u6570\u30028\u4e2a\u3002\n\u7531\u4e8e\u79fb\u4f4d\u5bf9\u6027\u80fd\u5982\u6b64\u91cd\u8981\uff0c8087\u4f7f\u7528\u6876\u5f62\u79fb\u4f4d\u5668\uff0c\u5b83\u53ef\u4ee5\u5728\u5355\u4e2a\u6b65\u9aa4\u4e2d\u5c06\u4e00\u4e2a\u6570\u5b57\u79fb\u4f4d\u4efb\u610f\u4f4d\u6570\u30026\u82f1\u7279\u5c14\u91c7\u7528\u4e24\u7ea7\u79fb\u4f4d\u5668\u8bbe\u8ba1\uff0c\u5728\u4fdd\u6301\u5176\u5927\u5c0f\u53ef\u63a7\u7684\u540c\u65f6\u4ecd\u63d0\u4f9b\u9ad8\u6027\u80fd\u3002\u7b2c\u4e00\u7ea7\u5c06\u503c\u79fb\u4f4d0\u81f37\u4f4d\uff0c\u800c\u7b2c\u4e8c\u7ea7\u5c06\u503c\u79fb\u4f4d0\u81f37\u5b57\u8282\u3002\u4e24\u7ea7\u5408\u8ba1\u53ef\u5c06\u503c\u79fb\u4f4d0\u81f363\u4f4d\u3002\n\u6211\u5c06\u9996\u5148\u63cf\u8ff0\u4f4d\u79fb\u4f4d\u5668\uff0c\u5b83\u6267\u884c0\u52307\u4f4d\u4f4d\u7f6e\u7684\u79fb\u4f4d\u3002\u4e0b\u56fe\u6982\u8ff0\u4e86\u4f4d\u79fb\u4f4d\u5668\u7684\u7ed3\u6784\uff0c\u663e\u793a\u4e865\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\uff1b\u5168\u79fb\u4f4d\u5668\u652f\u630168\u4f4d\u3002\u5176\u6982\u5ff5\u662f\u901a\u8fc7\u6fc0\u6d3b\u7279\u5b9a\u7684\u5217\uff0c\u8f93\u5165\u79fb\u4f4d\u6240\u9700\u7684\u91cf\uff0c\u6bcf\u4e2a\u5706\u5708\u8868\u793a\u4e00\u4e2a\u6676\u4f53\u7ba1\uff0c\u5b83\u53ef\u4ee5\u5145\u5f53\u8f93\u5165\u7ebf\u548c\u8f93\u51fa\u7ebf\u4e4b\u95f4\u7684\u5f00\u5173\u3002\u4f8b\u5982\uff0c\u56fe\u4e2d\u663e\u793a\u4e86\u79fb\u4f4d\u9009\u62e9\u7ebf3\u88ab\u6fc0\u6d3b\uff0c\u6253\u5f00\u76f8\u5173\u8054\u7684\u6676\u4f53\u7ba1(\u7eff\u8272)\u3002\u9ad8\u4eae\u663e\u793a\u7684\u8f93\u516520(\u6a59\u8272)\u6307\u5411\u8f93\u51fa23(\u84dd\u8272)\u3002\u7c7b\u4f3c\u5730\uff0c\u5176\u4ed6\u8f93\u5165\u8fde\u63a5\u5230\u76f8\u5e94\u7684\u8f93\u51fa\uff0c\u4ea7\u751f\u79fb\u4f4d3\u3002\u901a\u8fc7\u6fc0\u6d3b\u4e0d\u540c\u7684\u79fb\u4f4d\u9009\u62e9\u7ebf\uff0c\u8f93\u5165\u5c06\u57280\u548c7\u4f4d\u4e4b\u95f4\u79fb\u4f4d\u4e0d\u540c\u7684\u91cf\u3002\u4f8b\u5982\uff0c\u901a\u8fc7\u6fc0\u6d3b\u4e0d\u540c\u7684\u79fb\u4f4d\u9009\u62e9\u7ebf\uff0c\u8f93\u5165\u5c06\u57280\u548c7\u4f4d\u4e4b\u95f4\u88ab\u79fb\u4f4d\u4e0d\u540c\u7684\u91cf\u3002\u4f8b\u5982\uff0c\u901a\u8fc7\u6fc0\u6d3b\u4e0d\u540c\u7684\u79fb\u4f4d\u9009\u62e9\u7ebf\uff0c\u8f93\u5165\u5c06\u57280\u548c7\u4f4d\u4e4b\u95f4\u88ab\u79fb\u4f4d\u4e0d\u540c\u7684\u91cf\u3002\u4f8b\u5982\uff0c\u88ab\u9ad8\u4eae\u663e\u793a\u7684\u8f93\u516520(\u6a59\u8272)\u88ab\u5f15\u5bfc\u5230\u8f93\u51fa23(\u84dd\u8272)\u3002\u901a\u8fc7\u6fc0\u6d3b\u4e0d\u540c\u7684\u79fb\u4f4d\u9009\u62e9\u7ebf\uff0c\u8f93\u5165\u5c06\u88ab\u79fb\u4f4d0\u548c7\u4f4d\u4e4b\u95f4\u7684\u4e0d\u540c\u7684\u91cf\n\u4f4d\u79fb\u4f4d\u5668\u7684\u7ed3\u6784\u3002\u901a\u8fc7\u6fc0\u52b1\u79fb\u4f4d\u9009\u62e9\u7ebf\uff0c\u8f93\u5165\u8fde\u63a5\u5230\u5177\u6709\u6240\u9700\u4f4d\u79fb\u4f4d\u7684\u8f93\u51fa\u3002\n\u4e3a\u4e86\u89e3\u91ca\u79fb\u4f4d\u5668\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u6211\u5c06\u4ece\u63cf\u8ff08087\u82af\u7247\u4e2d\u4f7f\u7528\u7684NMOS\u6676\u4f53\u7ba1\u5f00\u59cb\u3002\u6676\u4f53\u7ba1\u662f\u901a\u8fc7\u5728\u7845\u886c\u5e95\u4e0a\u63ba\u6742\u6742\u8d28\u533a\u57df\u6765\u521b\u5efa\u5177\u6709\u4e0d\u540c\u7535\u6c14\u7279\u6027\u7684\u6269\u6563\u533a\u57df\u6765\u6784\u5efa\u7684\u3002\u6676\u4f53\u7ba1\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5f00\u5173\uff0c\u63a7\u5236\u6e90\u6781\u548c\u6f0f\u6781\u4e24\u4e2a\u533a\u57df\u4e4b\u95f4\u7684\u7535\u6d41\u6d41\u52a8\u3002\u6676\u4f53\u7ba1\u7531\u6805\u6781\u6fc0\u6d3b\uff0c\u6805\u6781\u7531\u4e00\u79cd\u540d\u4e3a\u591a\u6676\u7845\u7684\u7279\u6b8a\u7c7b\u578b\u7684\u7845\u6784\u6210\uff0c\u4f4d\u4e8e\u886c\u5e95\u7845\u7684\u4e0a\u65b9\u3002\u5411\u6805\u6781\u65bd\u52a0\u7535\u538b\u4f7f\u7535\u6d41\u5728\u6e90\u6781\u548c\u6f0f\u6781\u4e4b\u95f4\u6d41\u52a8\uff0c\u5426\u5219\u7535\u6d41\u5c31\u4f1a\u88ab\u963b\u585e\u3002\u6676\u4f53\u7ba1\u7531\u9876\u90e8\u7684\u91d1\u5c5e\u5c42\u5e03\u7ebf\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u590d\u6742\u7684\u96c6\u6210\u7535\u8def\u3002\n\u4e0b\u9762\u7684\u7167\u7247\u663e\u793a\u4e868087\u4e2d\u7684\u4e00\u4e2a\u6676\u4f53\u7ba1\uff0c\u5982\u663e\u5fae\u955c\u4e0b\u6240\u793a\u3002\u5b83\u7684\u7ed3\u6784\u4e0e\u4e0a\u56fe\u76f8\u7b26\uff0c\u5c3d\u7ba1\u5b83\u7684\u5f62\u72b6\u66f4\u590d\u6742\u3002\u6e90\u6781\u3001\u6805\u6781\u548c\u6f0f\u6781\u90fd\u5728\u7167\u7247\u4e4b\u5916\u7ee7\u7eed\uff0c\u8fde\u63a5\u5230\u5176\u4ed6\u6676\u4f53\u7ba1\u3002\u6b64\u5916\uff0c\u91d1\u5c5e\u5c42\u4e2d\u7684\u5e03\u7ebf\u901a\u8fc7\u5706\u5f62\u901a\u5b54\u8fde\u63a5\u5230\u7845\u4e0a\u3002(\u5728\u8fd9\u5f20\u7167\u7247\u4e2d\uff0c\u91d1\u5c5e\u5c42\u7528\u9178\u53bb\u9664\u4e86\u3002)\u3002\n\u7f29\u5c0f\u540e\uff0c\u4e0b\u56fe\u663e\u793a\u4e86\u82af\u7247\u4e0a\u5b9e\u73b0\u7684\u79fb\u4f4d\u5668\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u5f20\u7167\u7247\u4e2d\u7ea6\u670948\u4e2a\u6676\u4f53\u7ba1\uff0c\u4e0e\u4e0a\u56fe\u7c7b\u4f3c\u3002\u6a59\u8272\u548c\u9ec4\u8272\u7684\u5bf9\u89d2\u7ebf\u5bf9\u5e94\u4e8e\u5176\u4e2d\u4e00\u4e2a\u8f93\u5165\uff1a\u6a59\u8272\u533a\u57df\u663e\u793a\u901a\u8fc7\u7845\u8fde\u63a5\u7684\u6676\u4f53\u7ba1\uff0c\u800c\u9ec4\u8272\u7ebf\u6761\u663e\u793a\u91d1\u5c5e\u5c42\u4e2d\u7684\u8fde\u63a5\u3002(\u91d1\u5c5e\u5c42\u7528\u4e8e\u8df3\u8fc7\u591a\u6676\u7845\u9009\u62e9\u7ebf\u3002)\u7eff\u8272\u7a81\u51fa\u663e\u793a\u7684\u662f\u79fb\u4f4d3\u7684\u591a\u6676\u7845\u7ebf\u3002\u5728\u4e2d\u5fc3\uff0c\u8fd9\u6761\u591a\u6676\u7845\u6805\u6781\u7ebf\u63a5\u901a\u6676\u4f53\u7ba1\uff0c\u8fde\u63a5\u591a\u6676\u7845\u9009\u62e9\u7ebf\u3002\u5c06\u9ad8\u4eae\u663e\u793a\u7684\u8f93\u5165\u79fb\u4f4d\u4e09\u4e2a\u4f4d\u7f6e\u3002(\u5176\u4ed6\u975e\u9ad8\u4eae\u663e\u793a\u7684\u8f93\u5165\u4e5f\u8fdb\u884c\u7c7b\u4f3c\u7684\u79fb\u4f4d\u3002)\u56e0\u6b64\uff0c\u6b64\u7535\u8def\u5b9e\u73b0\u4e86\u672c\u8282\u5f00\u5934\u63cf\u8ff0\u7684\u79fb\u4f4d\u5668\u3002\u7167\u7247\u663e\u793a\u4e8668\u4e2a\u8f93\u5165\u4e2d\u76846\u4e2a\uff0c\u56e0\u6b64\u5b8c\u6574\u7684\u79fb\u4f4d\u5668\u8981\u9ad8\u5f97\u591a\u3002\n\u4f4d\u79fb\u4f4d\u5668\u7684\u7845\u7535\u8def\u7279\u5199\u3002\u5982\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u4fe1\u53f7\u7684\u8def\u5f84\u7531\u79fb\u4f4d\u4e09\u63a7\u5236(\u7eff\u8272)\u63a7\u5236\u3002\n\u5b57\u8282\u79fb\u4f4d\u5668\u5c06\u5176\u8f93\u5165\u79fb\u4f4d8\u4f4d\u7684\u500d\u6570\uff0c\u800c\u4e0d\u662f1\u4f4d\u3002\u5b83\u7684\u8bbe\u8ba1\u7c7b\u4f3c\u4e8e\u4f4d\u79fb\u4f4d\u5668\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\u8fde\u63a5\u5230\u6bcf\u516b\u4e2a\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u8f93\u516520\u8fde\u63a5\u5230\u8f93\u51fa20\u300128\u300136\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u6309\u5b57\u8282\u79fb\u4f4d\u3002\u56e0\u6b64\uff0c\u5bf9\u89d2\u7ebf\u8fde\u63a5\u9661\u5ced\u4e14\u7d27\u5bc6\u6392\u5217\uff0c\u6bcf\u53f0\u4ea4\u6362\u673a\u4e4b\u95f4\u67098\u6761\u7ebf\u8def\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u9009\u62e9\u4e86\u56db\u6b21\u79fb\u4f4d\u7684\u7ebf\u8def\uff0c\u5e76\u7a81\u51fa\u663e\u793a\u4e86\u4ece\u8f93\u51650\u5230\u8f93\u51fa32\u7684\u8fde\u63a5\u3002\u8bf7\u6ce8\u610f\uff0c\u56fe\u7684\u53f3\u534a\u90e8\u5206\u7f3a\u5c11\u5bfc\u7ebf\uff0c\u56e0\u4e3a\u4ece\u8f93\u51650\u4ee5\u5916\u79fb\u4f4d\u7684\u4efb\u4f55\u4f4d\u90fd\u4f1a\u53d8\u4e3a\u96f6\u3002\u4f8b\u5982\uff0c\u5f53\u5411\u5de6\u79fb\u4f4d4\u5b57\u8282\u65f6\uff0c\u4f4e\u4f4d31\u53ca\u4ee5\u4e0b\u53d8\u4e3a\u96f6\u3002\n\u4e0b\u9762\u7684\u82af\u7247\u7167\u7247\u663e\u793a\u4e86\u4f4d\u79fb\u4f4d\u5668\u548c\u5b57\u8282\u79fb\u4f4d\u5668\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u5f20\u7167\u7247\u88ab\u7f29\u5c0f\u4ee5\u663e\u793a\u6574\u4f53\u7ed3\u6784\uff1b\u5355\u4e2a\u6676\u4f53\u7ba1\u51e0\u4e4e\u770b\u4e0d\u89c1\u3002\u4f4d\u79fb\u4f4d\u5668\u7684\u533a\u57df\u5bc6\u5bc6\u9ebb\u9ebb\u5730\u5806\u6ee1\u4e86\u6676\u4f53\u7ba1\uff0c\u4f46\u662f\u5b57\u8282\u79fb\u4f4d\u5668\u4e3b\u8981\u7531\u5e03\u7ebf\u7ec4\u6210\uff0c\u4e2d\u95f4\u6709\u51e0\u5217\u6676\u4f53\u7ba1\u30029\u8fd8\u8981\u6ce8\u610f\uff0c\u5b57\u8282\u79fb\u4f4d\u5668\u7684\u9876\u90e8\u90e8\u5206\u662f\u7a7a\u7684\uff0c\u5411\u5e95\u90e8\u586b\u5145\u4e86\u66f4\u591a\u7684\u5e03\u7ebf\u3002\u5e03\u7ebf\u5e03\u5c40\u4e0d\u50cf\u4e0a\u56fe\u4e2d\u90a3\u6837\u6709\u5e8f\uff0c\u4f46\u5176\u5e03\u7f6e\u662f\u4e3a\u4e86\u83b7\u5f97\u6700\u9ad8\u6548\u7387\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f4d\u79fb\u4f4d\u5668\u548c\u5b57\u8282\u79fb\u4f4d\u5668\u53ea\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u79fb\u4f4d\u3002\u7136\u800c\uff0c\u4f4d\u9700\u8981\u53cc\u5411\u79fb\u4f4d\u30028087\u79fb\u4f4d\u5668\u7684\u5173\u952e\u521b\u65b0\u4e4b\u4e00\u662f\u5b83\u7684\u53cc\u5411\u8bbe\u8ba1\uff1a\u6570\u636e\u53ef\u4ee5\u53cd\u5411\u901a\u8fc7\u79fb\u4f4d\u5668\u6765\u8fdb\u884c\u76f8\u53cd\u65b9\u5411\u7684\u4f4d\u79fb\u4f4d\u3002\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u79fb\u4f4d\u5668\u662f\u7531\u901a\u8fc7\u6676\u4f53\u7ba1\u800c\u4e0d\u662f\u903b\u8f91\u95e8\u6784\u6210\u7684\u3002\u4f20\u9012\u6676\u4f53\u7ba1\u903b\u8f91\u5c06\u6676\u4f53\u7ba1\u7528\u4f5c\u4f20\u9012\u6216\u963b\u6b62\u4fe1\u53f7\u7684\u5f00\u5173\uff0c\u56e0\u6b64\u4fe1\u53f7\u53ef\u4ee5\u5728\u4efb\u4e00\u65b9\u5411\u4e0a\u4f20\u64ad\u3002(\u76f8\u53cd\uff0c\u5e38\u89c4\u903b\u8f91\u95e8\uff0c\u5982NOR\u95e8\uff0c\u5177\u6709\u7279\u5b9a\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002)\n\u79fb\u4f4d\u5668\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u7279\u6b8a\u9a71\u52a8\u7535\u8def\u5141\u8bb8\u79fb\u4f4d\u5668\u53cc\u5411\u64cd\u4f5c\u3002\u4e3a\u4e86\u4ece\u5de6\u5230\u53f3\u53d1\u9001\u6570\u636e\uff0c\u5de6\u4fa7\u9a71\u52a8\u5668\u4ece\u5206\u6570\u603b\u7ebf\u8bfb\u53d6\u6570\u636e\u5e76\u5c06\u5176\u53d1\u9001\u5230\u79fb\u4f4d\u5668\u3002\u53f3\u4fa7\u9a71\u52a8\u5668\u7535\u8def\u63a5\u6536\u79fb\u4f4d\u540e\u7684\u6570\u636e\uff0c\u5c06\u5176\u4e34\u65f6\u9501\u5b58\uff0c\u7136\u540e\u5c06\u5176\u5199\u56de\u5206\u6570\u603b\u7ebf\u3002\u4e3a\u4e86\u53cd\u5411\u53d1\u9001\u6570\u636e\uff0c\u9a71\u52a8\u5668\u7535\u8def\u98a0\u5012\u89d2\u8272\uff1a\u53f3\u4fa7\u9a71\u52a8\u5668\u5c06\u6570\u636e\u4ece\u5206\u6570\u603b\u7ebf\u53d1\u9001\u5230\u79fb\u4f4d\u5668\uff0c\u800c\u5de6\u4fa7\u7535\u8def\u63a5\u6536\u79fb\u4f4d\u540e\u7684\u6570\u636e\u300210\u4e2a\u3002\n\u6211\u5c06\u63cf\u8ff0\u7684\u6700\u540e\u4e00\u4e2a\u7279\u5f81\u662f\u63a7\u5236\u79fb\u4f4d\u5668\u7684\u7535\u8def\u3002\u6709\u4e09\u4e2a\u4e0d\u540c\u7684\u6765\u6e90\u63a7\u5236\u8981\u79fb\u4f4d\u7684\u4f4d\u7f6e\u3002\u9996\u5148\uff0c\u5fae\u7801\u5f15\u64ce\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u6570\u5b57\u3002\u7b2c\u4e8c\uff0c\u6570\u5b57\u53ef\u4ee5\u6765\u81ea\u5faa\u73af\u8ba1\u6570\u5668\uff1b\u8fd9\u662fCORDIC\u5148\u9a8c\u7b97\u6cd5\u7684\u4e00\u90e8\u5206\u3002\u6700\u540e\uff0c\u6570\u5b57\u53ef\u4ee5\u6765\u81ea\u524d\u5bfc\u96f6\u8ba1\u6570\u5668\uff1b\u8fd9\u5141\u8bb8\u901a\u8fc7\u79fb\u4f4d\u6d88\u9664\u524d\u5bfc\u96f6\u6765\u5f52\u4e00\u5316\u6570\u5b57\u3002\u8fd9\u4e9b\u6765\u6e90\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u63d0\u4f9b6\u4f4d\u79fb\u4f4d\u6570\u5b57\uff1b6\u4e2a\u591a\u8def\u590d\u7528\u5668\u300212\u4e2a\u3002\n\u63a5\u4e0b\u6765\uff0c\u89e3\u7801\u5668\u6fc0\u6d3b\u516b\u6761\u4f4d\u79fb\u4f4d\u7ebf\u4e2d\u7684\u4e00\u6761\u548c\u516b\u6761\u5b57\u8282\u79fb\u4f4d\u7ebf\u4e2d\u7684\u4e00\u6761\uff0c\u4ee5\u63a7\u5236\u79fb\u4f4d\u5668\u4e2d\u7684\u9002\u5f53\u901a\u8fc7\u6676\u4f53\u7ba1\u3002(\u6bcf\u4e2a\u89e3\u7801\u5668\u63a5\u53d73\u4f4d\u8f93\u5165\u5e76\u6fc0\u6d3b8\u6761\u8f93\u51fa\u7ebf\u4e2d\u7684\u4e00\u6761\u3002)\u56e0\u4e3a\u6bcf\u6761\u89e3\u7801\u5668\u7ebf\u63a7\u5236\u79fb\u4f4d\u5668\u4e2d\u7684\u4e00\u5927\u5217\u901a\u8fc7\u6676\u4f53\u7ba1\uff0c\u6240\u4ee5\u89e3\u7801\u5668\u4f7f\u7528\u76f8\u5bf9\u8f83\u5927\u7684\u529f\u7387\u6676\u4f53\u7ba1\u300213\u5728\u5e95\u90e8\uff0c16\u6761\u63a7\u5236\u7ebf\u9000\u51fa\u7535\u8def\u3002\n8087\u662f\u4e00\u6b3e\u529f\u80fd\u4e30\u5bcc\u7684\u590d\u6742\u82af\u7247\u3002\u7136\u800c\uff0c\u901a\u8fc7\u4ed4\u7ec6\u68c0\u67e5\u82af\u7247\uff0c\u53ef\u4ee5\u7406\u89e38087\u7684\u7535\u8def\u3002\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u63cf\u8ff0\u4e868087\u7684\u5feb\u901f\u6876\u5f62\u79fb\u4f4d\u5668\uff0c\u4e00\u6b21\u6700\u591a\u80fd\u79fb\u4f4d63\u4f4d\u300214\u82f1\u7279\u5c14\u83b7\u5f97\u4e86\u8fd9\u79cd\u521b\u65b0\u7684\u53ef\u7f16\u7a0b\u53cc\u5411\u79fb\u4f4d\u5668\u7684\u4e13\u5229\u3002\n\u79fb\u4f4d\u5668\u53ea\u662f\u4f7f8087\u8ba1\u7b97\u6d6e\u70b9\u8fd0\u7b97\u7684\u901f\u5ea6\u6bd48086\u5904\u7406\u5668\u5feb\u5f97\u591a\u7684\u529f\u80fd\u4e4b\u4e00\u30028087\u4e00\u6b21\u64cd\u4f5c80\u4f4d\uff0c\u800c\u4e0d\u662f16\u4f4d\u30028087\u670980\u4f4d\u5bbd\u7684\u5bc4\u5b58\u5668\uff0c\u51cf\u5c11\u4e86\u8ba1\u7b97\u671f\u95f4\u7684\u5185\u5b58\u8bbf\u95ee\u30028087\u5c06\u8d85\u8d8a\u64cd\u4f5c\u7684\u5e38\u91cf\u5b58\u50a8\u5728ROM\u4e2d\uff0c\u4e5f\u907f\u514d\u4e86\u5185\u5b58\u8bbf\u95ee\u30028087\u4e2d\u7684\u786c\u4ef6\u68c0\u67e5NaN\u3001\u4e0b\u6ea2\u3001\u4e0a\u6ea2\u7b49\uff0c\u907f\u514d\u4ee3\u7801\u4e2d\u7684\u7f13\u6162\u68c0\u67e5\u30028087\u7684\u786c\u4ef6\u4f7f\u591a\u4e2a\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u4e9b\u56e0\u7d20\u7684\u76f8\u5bf9\u8d21\u732e\uff0c\u4f46\u5b83\u4eec\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6d6e\u70b9\u6027\u80fd\uff0c\u6700\u9ad8\u53ef\u8fbe100\u500d\u3002\n\u6d6e\u70b9\u786c\u4ef6\u7684\u597d\u5904\u5982\u6b64\u4e4b\u5927\uff0c\u4ee5\u81f3\u4e8e\u82f1\u7279\u5c14\u4ece1989\u5e74\u768480486\u5f00\u59cb\u5c06\u6d6e\u70b9\u5355\u5143\u96c6\u6210\u5230\u5904\u7406\u5668\u4e2d\uff0c\u73b0\u5728\u5927\u591a\u6570\u5904\u7406\u5668\u90fd\u5305\u62ec\u6d6e\u70b9\u5355\u5143\uff0c\u8d2d\u4e70\u5355\u72ec\u7684\u6d6e\u70b9\u534f\u5904\u7406\u5668\u7684\u8d39\u7528\u5df2\u7ecf\u6210\u4e3a\u8fc7\u53bb\u3002\n\u53bb\u9664\u91d1\u5c5e\u5c42\u76848087\u6a21\u5177\u7167\u7247\u3002\u989c\u8272\u662f\u7531\u4e8e\u5269\u4f59\u7684\u4e00\u4e9b\u6c27\u5316\u5c42\u9020\u6210\u7684\u3002\u5355\u51fb\u67e5\u770b\u5927\u56fe\u3002\n\u6709\u51738087\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u7684\u5176\u4ed6\u6587\u7ae0\uff1a\u4ece8087\u4e2d\u63d0\u53d6ROM\u5e38\u91cf\u3001\u6bcf\u6676\u4f53\u7ba12\u4f4dROM\u548c\u886c\u5e95\u504f\u7f6e\u751f\u6210\u5668\u3002\u6211\u5728Twitter\u4e0a\u53d1\u5e03\u4e86\u6211\u6700\u65b0\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u8bf7\u5173\u6ce8me@kensheriff\u4ee5\u9605\u8bfb\u540e\u7eed\u6587\u7ae0\u3002\u6211\u8fd8\u6709\u4e00\u4e2aRSS\u8ba2\u9605\u6e90\u3002\n\u5373\u4f7f\u6ca1\u6709\u6d6e\u70b9\u786c\u4ef6\uff0c\u65e9\u671f\u7684\u5fae\u578b\u8ba1\u7b97\u673a\u4e5f\u53ef\u4ee5\u6267\u884c\u6d6e\u70b9\u8fd0\u7b97\u3002\u8fd9\u4e9b\u8fd0\u7b97\u4f1a\u88ab\u5206\u89e3\u6210\u8bb8\u591a\u6574\u6570\u8fd0\u7b97\uff0c\u6839\u636e\u9700\u8981\u5904\u7406\u6307\u6570\u548c\u5206\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6d6e\u70b9\u652f\u6301\u5e76\u6ca1\u6709\u4f7f\u6d6e\u70b9\u8fd0\u7b97\u6210\u4e3a\u53ef\u80fd\uff0c\u5b83\u53ea\u662f\u4f7f\u6d6e\u70b9\u8fd0\u7b97\u53d8\u5f97\u66f4\u5feb\u3002(\u53e6\u4e00\u79cd\u8868\u793a\u975e\u6574\u6570\u7684\u65b9\u5f0f\u662f\u5b9a\u70b9\u6570\uff0c\u5b83\u5728\u5c0f\u6570\u4e4b\u540e\u6709\u56fa\u5b9a\u7684\u4f4d\u6570\u3002\u5b9a\u70b9\u6570\u6bd4\u6d6e\u70b9\u6570\u7b80\u5355\uff0c\u4f46\u4e0d\u80fd\u8868\u793a\u5927\u8303\u56f4\u7684\u6d6e\u70b9\u6570\u3002\n8087\u4e0d\u662f\u7b2c\u4e00\u4e2a\u6d6e\u70b9\u82af\u7247\u3002\u7f8e\u56fd\u56fd\u5bb6\u534a\u5bfc\u4f53\u516c\u53f8\u57281977\u5e74\u5f15\u5165\u4e86MM57109\u6570\u5b57\u8ba1\u7b97\u5668\u5355\u5143(\u4e5f\u5c31\u662f\u771f\u540d)\u3002\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u91cd\u65b0\u6253\u5305\u768412\u4f4d\u79d1\u5b66\u8ba1\u7b97\u5668\u82af\u7247\uff0c\u5bf9\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\u5341\u8fdb\u5236\u503c\u8fdb\u884c\u8fd0\u7b97\uff0c\u6570\u503c\u4ee5\u53cd\u5411\u6ce2\u5170\u8bed\u8868\u793a\u3002\u8fd9\u4e2a\u82af\u7247\u901f\u5ea6\u6162\u5f97\u79bb\u8c31\uff1b\u4f8b\u5982\uff0c\u6b63\u5207\u53ef\u4ee5\u4ee3\u66ff\u4e00\u79d2\u3002AMD\u57281978\u5e74\u63a8\u51fa\u4e86\u4ed6\u4eec\u7684\u6d6e\u70b9\u82af\u7247AM9511(\u8be6\u7ec6\u8bf4\u660e)\u3002\u8fd9\u6b3e\u82af\u7247\u652f\u630132\u4f4d\u6d6e\u70b9\u6570\uff0c\u6b63\u5207\u6700\u591a\u9700\u89811.4\u6beb\u79d2\u3002(\u82f1\u7279\u5c14\u6700\u7ec8\u4eceAMD\u83b7\u5f97AM9511\u7684\u6388\u6743\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a8231\u51fa\u552e\u3002)\u76f8\u6bd4\u4e4b\u4e0b\uff0c10-MHz8087\u53ef\u4ee5\u572854\u5fae\u79d2\u5185\u5b9e\u73b0\u6b63\u5207\uff0c\u8fd0\u7b97\u572880\u4f4d\u6d6e\u70b9\u6570\u4e0a\u3002\u56e0\u6b64\uff0c8087&#39\uff1b\n\u6700\u521d\u7684IBM PC(1981)\u5728\u5176\u4e3b\u677f\u4e0a\u6709\u4e00\u4e2a\u7a7a\u63d2\u69fd\uff0c\u7528\u4e8e\u6dfb\u52a08087\u534f\u5904\u7406\u5668\u3002\u8fd9\u5bf9AutoCAD\u7b49\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u597d\u5904\u3002\u5927\u7684\u7a7a\u63d2\u69fd\u57288088\u5fae\u5904\u7406\u5668\u4e0a\u65b9\u7684\u5de6\u4e0a\u89d2\u53ef\u89c1\u3002\u652f\u63018087\u7684\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\u5728\u6b64\u3002\n\u6211\u627e\u4e0d\u52308087\u7684\u539f\u4ef7\uff0c\u4f46\u5b83\u5f88\u8d35\u3002\u8d77\u521d\uff0c\u7531\u4e8e8087\u7684\u65f6\u5e8f\u4e0d\u7a33\u5b9a\uff0c\u82f1\u7279\u5c14\u53ea\u51fa\u552e8087\u4e0e8088\u7684\u914d\u5bf9\u548c\u6d4b\u8bd5\u3002\u52301982\u5e74\uff0c\u82f1\u7279\u5c14\u5c068087\u7684\u4ef7\u683c\u964d\u81f3230\u7f8e\u5143\uff0c\u76f8\u5f53\u4e8e\u5f53\u524d\u7f8e\u5143\u7ea6500\u7f8e\u5143\u3002\u4e0e\u5982\u4eca\u7684\u5f00\u6e90\u4e16\u754c\u76f8\u6bd4\uff0c\u5ba2\u6237\u8fd8\u8981\u652f\u4ed8\u8f6f\u4ef6\u652f\u6301\u8d39\u7528\u4f3c\u4e4e\u5f88\u5947\u602a\uff1a\u4f7f\u7528\u5e26\u6709BASIC\u8bed\u8a00\u76848087\u8fd8\u8981\u591a\u82b1150\u7f8e\u5143\uff0c\u800c\u82f1\u7279\u5c14\u76848087\u5f00\u53d1\u5e93\u662f1,250\u7f8e\u5143\u3002--\u21a9\u3002\n8087\u7684\u8bbe\u8ba1\u8005\u8bc4\u8bba\u4e86\u5361\u6c49\u6559\u6388\u63d0\u4f9b\u7684\u6307\u5bfc\uff1a\u6211\u4eec\u6ca1\u6709\u505a\u5f97\u50cf\u4ed6\u60f3\u8981\u7684\u90a3\u6837\u597d\uff0c\u4f46\u6211\u4eec\u505a\u5f97\u6bd4\u4ed6\u9884\u671f\u7684\u8981\u597d\u3002\u5361\u6c49\u540e\u6765\u56e0\u4e3a\u4ed6\u5728\u6d6e\u70b9\u65b9\u9762\u7684\u5de5\u4f5c\u800c\u83b7\u5f97\u4e86\u56fe\u7075\u5956\u3002-\u21a9\u3002\n\u5904\u7406\u5668\u901a\u5e38\u5305\u62ec\u5404\u79cd\u79fb\u4f4d\u6307\u4ee4\uff0c\u5305\u62ec\u5c06\u4f4d\u4ece\u5b57\u7684\u4e00\u7aef\u79fb\u4f4d\u5230\u53e6\u4e00\u7aef\u7684\u65cb\u8f6c\u64cd\u4f5c.8087\u53ea\u6267\u884c\u76f4\u63a5\u79fb\u4f4d\uff0c\u4e0d\u6267\u884c\u65cb\u8f6c.-\u21a9\u3002\n\u79fb\u4f4d\u5668\u5904\u74068087&#39\uff1b\u768464\u4f4d\u5c0f\u6570\uff0c\u8fd8\u6709\u4e09\u4e2a\u989d\u5916\u7684\u4f4d\u7528\u4e8e\u820d\u5165\u7cbe\u5ea6\uff0c\u56e0\u6b64\u5b83\u652f\u630167\u4f4d\u3002\u9664\u975e\u6211\u7b97\u9519\u4e86\uff0c\u5426\u5219\u79fb\u4f4d\u5668\u5728\u6700\u91cd\u8981\u7684\u4f4d\u7f6e\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u4f4d\uff0c\u4f7f\u5b83\u53d8\u5f9768\u4f4d\u5bbd\u3002-\u21a9\u3002\n\u4e58\u6cd5\u548c\u9664\u6cd5\u5927\u91cf\u4f7f\u7528\u79fb\u4f4d\uff1b\u4e58\u6cd5\u4f7f\u7528\u79fb\u4f4d\u548c\u52a0\u6cd5\uff0c\u800c\u9664\u6cd5\u4f7f\u7528\u79fb\u4f4d\u548c\u51cf\u6cd5\u3002\u4f46\u662f\uff0c8087\u4e0d\u4f7f\u7528\u901a\u7528\u79fb\u4f4d\u5668\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u800c\u662f\u6709\u4e13\u95e8\u7684\u79fb\u4f4d\u5668\u4e3a\u8fd9\u4e9b\u64cd\u4f5c\u8fdb\u884c\u4f18\u5316\u3002-\u21a9\n\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7d27\u5bc6\u5730\u5305\u88c5\u5e03\u7ebf\uff0c\u79fb\u4f4d\u5668\u4ea4\u66ff\u4f7f\u7528\u6269\u6563\u7845\u5bfc\u7ebf\u548c\u591a\u6676\u7845\u5bfc\u7ebf\u3002\u5728\u4e0b\u9762\u7684\u7167\u7247\u4e2d\uff0c\u6269\u6563\u7845\u7ebf\u662f\u7c89\u7ea2\u8272\u7684\uff0c\u800c\u591a\u6676\u7845\u662f\u9ec4\u8272\u7684\u30028087\u662f\u7528\u82f1\u7279\u5c14\u7684HMOS III\u5de5\u827a\u5236\u9020\u7684\uff0c\u591a\u6676\u7845\u9700\u89814\u00b5m\u7684\u95f4\u8ddd\u548c5\u00b5m\u7684\u6269\u6563\u95f4\u8ddd\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u5149\u523b\u5b9e\u8df5\u7684\u5206\u8fa8\u7387\u3002\u4f46\u662f\uff0c\u6269\u6563\u7ebf\u548c\u591a\u6676\u7845\u7ebf\u4e4b\u95f4\u7684\u95f4\u8ddd\u53ef\u4ee5\u662f\u3002\n\u5b57\u8282\u79fb\u4f4d\u5668\u4e2d\u7684\u5e03\u7ebf\u7531\u4ea4\u66ff\u7684\u7d27\u5bc6\u5806\u79ef\u7684\u7845\u7ebf\u548c\u591a\u6676\u7845\u7ebf\u7ec4\u6210\u3002\u4e24\u8fb9\u7684\u5927\u77e9\u5f62\u662f\u7531\u5782\u76f4\u591a\u6676\u7845\u7ebf\u63a7\u5236\u7684\u6676\u4f53\u7ba1\u5bf9\u3002\n\u9a71\u52a8\u5668\u7535\u8def\u6709\u4e00\u4e9b\u5fae\u5999\u4e4b\u5904\u3002\u4e0d\u662f\u76f4\u63a5\u5c06\u6570\u636e\u53d1\u9001\u5230\u79fb\u4f4d\u5668\uff0c\u800c\u662f\u5206\u4e24\u6b65\u4f20\u8f93\u6bd4\u7279\u3002\u9996\u5148\uff0c\u79fb\u4f4d\u5668\u7ebf\u8def\u9884\u5145\u7535\u5230\u9ad8\u7535\u5e73\u3002\u6362\u8a00\u4e4b\uff0c\u79fb\u4f4d\u5668\u7ebf\u8def\u662f\u4f4e\u6709\u6548\u7684\uff0c\u4f4e\u7535\u538b\u4ee3\u88681\u3002\u7531\u4e8e\u4efb\u4f55\u672a\u4f7f\u7528\u7684\u8f93\u51fa\u4fdd\u6301\u5176\u9ad8\u7535\u538b(0\u4f4d)\uff0c0\u4f4d\u88ab\u81ea\u52a8\u79fb\u4f4d\u5230\u4f4e\u4f4d\u4f4d\u7f6e\u3002\u6211\u8ba4\u4e3a\u9884\u5145\u7535\u6280\u672f\u5bf9\u4e8eNMOS\u7535\u8def\u4e5f\u662f\u66f4\u597d\u7684\u5339\u914d\uff0c\u5176\u66f4\u597d\u5730\u5c06\u4fe1\u53f7\u62c9\u4f4e\u800c\u4e0d\u662f\u62c9\u9ad8\uff0c\u56e0\u6b64\u5bf9\u7ebf\u8def\u8fdb\u884c\u9884\u5145\u7535\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\u3002\u6211\u8ba4\u4e3a\u9884\u5145\u7535\u6280\u672f\u5bf9\u4e8eNMOS\u7535\u8def\u6765\u8bf4\u4e5f\u662f\u66f4\u597d\u7684\u5339\u914d\uff0cNMOS\u7535\u8def\u5728\u62c9\u4f4e\u4fe1\u53f7\u65b9\u9762\u6bd4\u62c9\u9ad8\u4fe1\u53f7\u66f4\u597d\uff0c\u6240\u4ee5\u9884\u5145\u7535\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\u3002\u6211\u8ba4\u4e3a\u9884\u5145\u7535\u6280\u672f\u5bf9\u4e8eNMOS\u7535\u8def\u6765\u8bf4\u4e5f\u662f\u66f4\u597d\u7684\u5339\u914d\uff0cNMOS\u7535\u8def\u5728\u62c9\u4f4e\u4fe1\u53f7\u65b9\u9762\u6bd4\u62c9\u9ad8\u4fe1\u53f7\u66f4\u597d\uff0c\u6240\u4ee5\u9884\u5145\u7535\u7ebf\u8def\u6709\u52a9\u4e8e\u6027\u80fd\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u79fb\u4f4d\u5668\u548c\u5206\u6570\u603b\u7ebf\u4e4b\u95f4\u7684\u76f8\u5bf9\u8f83\u9ad8\u7684\u5bb9\u91cf\u3002\u79fb\u4f4d\u5668\u548c\u5206\u6570\u603b\u7ebf\u4e4b\u95f4\u7684\u9501\u5b58\u5668\u9632\u6b62\u4e86\u4e0d\u9700\u8981\u7684\u5faa\u73af\uff0c\u79fb\u4f4d\u7684\u6570\u636e\u7acb\u5373\u56de\u6d41\u5230\u79fb\u4f4d\u5668\u5e76\u88ab\u91cd\u65b0\u79fb\u4f4d\u3002-\u21a9\u3002\n\u6b64\u811a\u6ce8\u5c06\u9610\u660e\u7269\u7406\u79fb\u4f4d\u4e0e\u903b\u8f91\u79fb\u4f4d\u7684\u533a\u522b\u3002\u5728\u82af\u7247\u4e0a\uff0c\u5c0f\u6570\u7535\u8def\u7684\u6700\u9ad8\u6709\u6548\u4f4d\u4f4d\u4e8e\u5e95\u90e8\u3002\u901a\u8fc7\u79fb\u4f4d\u5668\u4ece\u5de6\u5230\u53f3\u5c06\u6570\u636e\u7269\u7406\u4e0b\u79fb\u3002\u8fd9\u76f8\u5f53\u4e8e\u4e8c\u8fdb\u5236\u6570\u7684\u5de6\u79fb\uff0c\u5c06\u4f4d\u79fb\u5230\u66f4\u9ad8\u7684\u4f4d\u7f6e\u3002\u5728\u76f8\u53cd\u7684\u65b9\u5411\u4e0a\uff0c\u901a\u8fc7\u79fb\u4f4d\u5668\u7684\u6570\u636e\u4ece\u53f3\u5230\u5de6\u6267\u884c\u6570\u636e\u7684\u53f3\u79fb\u3002\u21a9\u3002\n\u5de6/\u53f3\u65b9\u5411\u4e5f\u9700\u8981\u4ece\u4e09\u4e2a\u79fb\u4f4d\u6e90\u4e2d\u9009\u62e9\u4e00\u4e2a\uff0c\u4f46\u6211\u8fd8\u6ca1\u6709\u627e\u5230\u7528\u4e8e\u8be5\u79fb\u4f4d\u6e90\u7684\u7535\u8def\u3002-\u21a9\u3002\n\u6bcf\u4e2a\u8bd1\u7801\u5668\u672c\u8d28\u4e0a\u7531\u516b\u4e2a\u6216\u975e\u95e8\u7ec4\u6210\uff1a\u4e03\u4e2a\u95e8\u5c06\u88ab\u62c9\u4f4e\uff0c\u53ea\u6709\u6240\u6709\u8f93\u5165\u4e3a\u4f4e\u7684\u95e8\u624d\u662f\u9ad8\u7684\u3002\u4f46\u662f\uff0c\u5b83\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u903b\u8f91\u95e8\u6765\u5b9e\u73b0\u7684\u3002\u76f8\u53cd\uff0c\u6240\u6709\u8f93\u51fa\u90fd\u9884\u5145\u7535\u4e3a\u9ad8\u7535\u5e73\uff0c\u7136\u540e\u5c06\u4e03\u4e2a\u4e0d\u9700\u8981\u7684\u8f93\u51fa\u62c9\u4f4e\u3002\u8fd9\u79cd\u52a8\u6001\u9884\u5145\u7535\u903b\u8f91\u4ecd\u5728\u73b0\u4ee3\u7535\u8def\u4e2d\u4f7f\u7528\uff1b\u8bf7\u53c2\u9605\u540c\u6b65\u9884\u5145\u7535\u903b\u8f91\u4e00\u4e66\u3002\u591a\u8def\u590d\u7528\u5668\u4e5f\u662f\u7528\u9884\u5145\u7535\u903b\u8f91\u5b9e\u73b0\u7684\u3002-\u21a9\u3002\n\u76f4\u52301985\u5e74\u768480386\uff0c\u82f1\u7279\u5c14\u7684x86\u5904\u7406\u5668\u624d\u5305\u62ec\u6876\u5f0f\u79fb\u4f4d\u5668\uff0c\u5b83\u63d0\u4f9b\u4e8664\u4f4d\u6876\u5f0f\u79fb\u4f4d\u5668\u3002\u5728\u6b64\u4e4b\u524d\uff0c8086\u53ca\u5176\u540e\u4ee3\u6bcf\u6b21\u79fb\u4f4d\u4e00\u4f4d\uff0c\u56e0\u6b64\u8bb8\u591a\u4f4d\u4f4d\u7f6e\u7684\u79fb\u4f4d\u901f\u5ea6\u8981\u6162\u5f97\u591a\u3002--\u21a9", "note_en": "Floating-point numbers are very useful for scientific programming, butearly microprocessors only supported integers directly.  1Although floating-point was common in mainframes back in the 1950s and 1960s,it wasn&#39;t until 1980 thatIntel introduced the 8087 floating-point coprocessor for microcomputers.  2Adding this chip to a microcomputer such as the IBM PC made floating-point operations up to 100 times faster.This was a huge benefit for applications such as AutoCAD, spreadsheets, or flight simulators.  3The downside was the 8087 chip cost hundreds of dollars.  4\n It&#39;s hard to implement floating-point operations so they are computed quickly and accurately.Problems can arise from overflow, rounding, transcendental operations, and numerous edge cases.Prior to the 8087, each manufacturer had their own incompatible ad hoc implementation of floating point.Intel, however, enlisted numerical analysis expert  William Kahan to design accurate floating pointbased on rigorous principles.  5The result was the floating-point architecture of the 8087. This became the  IEEE 754 standard used in almostall modern computers, so I consider the 8087 one of the most influential chips ever designed.\n  Die of the Intel 8087 floating point unit chip, with main functional blocks labeled. The die is 5mm\u00d76mm. The shifter is outlined in red. Click for a larger image.\n  To explore how the 8087 works, I opened up an 8087 chip and took photos of the silicon die with a  microscope.Containing 40,000 transistors, the 8087 pushed chip manufacturing to the limit; in comparison, the companion 8086 microprocessor only had 29,000 transistors.To make the chip possible, Intel developed new techniques.In this article, I focus on the high-speed binary shifter (outlined in red above).The shifter takes up a large fraction of the chip&#39;s area, so minimizing its area was vital to making the 8087 possible.\n A floating-point number consists of a fraction(also called significand or mantissa), an exponent, and a sign bit.(These are expressed in binary, but for a base-10 analogy, the number 6.02\u00d710 23 has 6.02 as the fraction and 23 as the exponent.)The circuitry to process the fraction is at the bottom of the die photo.From left to right, the fraction circuitry consists of a constant ROM, a shifter (highlighted), adder/subtracters, and the register stack.The exponent processing circuitry is in the middle of the chip. Above it, the microcode engine and ROM control the chip.\n  The role of the shifter is to shift binary numbers left or right,a task withseveral critical roles in floating-point operations.When two floating-point numbers are added or subtracted, the numbers must be shifted so the binary points line up.(The binary point is like the decimal point, but for a binary number.)The 8087&#39;s transcendental instructions are built around shift and add operations, using an algorithm called  CORDIC.The shifter is also used to assemble a floating-point number from 16-bit chunks read from memory.  8\n Since shifts are so essential to performance, the 8087 uses a &#34;barrel shifter&#34;, which can shift a number by any number of bits in a single step.  6Intel used a two-stage shifter design that kept its size manageable while still providing high performance.The first stage shifts the value by 0 to 7 bits, while the second stage shifts by 0 to 7 bytes.In combination, the two stages shift a value by any amount from 0 to 63 bits.\n  I&#39;ll start by describing the bit shifter, which performs a shift of 0 to 7 bit positions.The diagram below outlines the structure of the bit shifter, showing five of the inputs and outputs; the full shifter supports 68 bits.  7The concept is that by activating a particular column, the input is shifted by the desired amount.Each circle indicates a transistor that can act as a switch between an input line and an output line. The vertical select lines are used to activate thedesired transistors.Each input line is connected diagonally to eight transistors, allowing it to be directed to one of eight outputs.For example, the diagram shows shift select line 3 activated, turning on the associated transistors (green).The highlighted input 20 (orange) is directed to output 23 (blue).Similarly, the other inputs are connected to the corresponding outputs, yielding a shift by 3.By activating a different shift select line, the input will be shifted by a different amount between 0 and 7 bits.\n  Structure of the bit shifter. By energizing a shift select line, the inputs are connected to outputs with the desired bit shift.\n  To explain the internal construction of the shifter, I&#39;ll start by describing the NMOS transistors used in the 8087 chip.Transistors are built by doping areas of the silicon substrate with impurities to create &#34;diffusion&#34; regions with different electrical properties.The transistor can be considered a switch, controlling the flow of current between two regions called the source and drain. The transistor is activated by the gate, made of a special type of silicon called polysilicon, layered above the substrate silicon.Applying voltage to the gate lets current flow between the source and drain, which is otherwise blocked.Transistors are wired together by a metal layer on top, building a complex integrated circuit.\n    The photo below shows a transistor in the 8087 as it appears under the microscope.Its structure matches the diagram above, although its shape is more complex.The source, gate, and drain all continue out of the photo, connected to other transistors.In addition, wiring in the metal layer is connected to the silicon at the circular vias.(The metal layer was removed with acid for this photo.)\n    Zooming out, the diagram below shows part of the bit shifter as implemented on the chip.About 48 transistors, similar to the one above, are in this photo.The orange and yellow diagonal corresponds to one of the inputs:the orange regions show transistors connected through the silicon, while the yellow lines show connections in the metal layer.(The metal layer is used to jump over the polysilicon select lines.)The green highlight shows the polysilicon line for shift-by-three.In the center, this polysilicon gate line turns on a transistor, connecting the input to the long yellow output line, shifting the highlighted input by three positions.(The other non-highlighted inputs are shifted similarly.)Thus, this circuit implements the shifter as described at the beginning of the section.The photo shows six of the 68 inputs, so the complete shifter is much taller.\n  Closeup of the silicon circuitry for the bit shifter. The path of one signal is shown, as controlled by the shift-by-three control (green).\n   The byte shifter shifts its inputs by multiples of eight bits, rather than one bit.Its design is similar to the bit shifter, except each input connects to every eighth output. For instance, input 20 connectsto outputs 20, 28, 36, and so forth, shifting by bytes. As a result, the diagonal connections are steep and packed tightly, with eight lines between each switch.In the diagram below, the line for shift-by-four is selected, with the connection from input 0 to output 32 highlighted.Note the lack of wires in the right half of the diagram becauseany bit shifted from beyond input 0 becomes zeroed. For instance, when shifting left by 4 bytes, low-order bits 31 and below become zero.\n    The die photo below shows part of the bit shifter and the byte shifter.This photo is zoomed-out to show the overall structure; individual transistors are barely visible.The bit shifter&#39;s area is densely packed with transistors, but the byte shifter consists mostly of wiring, with columns of transistors in between.  9Also note that the byte shifter is partially empty at the top, filling in with more wiring towards the bottom.The wiring layout isn&#39;t as orderly as in the diagram above, but is arranged for maximum efficiency.\n     So far, the bit and byte shifters only shift bits in one direction.  11However, bits need to be shifted in both directions.One of the key innovations of the 8087&#39;s shifter is its bidirectional design:data can be passed through the shifter in reverse to shift bits the opposite direction.This is possible because the shifter is constructed with pass transistors, not logic gates. Pass transistor logicuses transistors as switches that pass or block signals, so signals can travel in either direction.(In contrast, regular logic gates such as NOR gates have specific inputs and outputs.)\n Special driver circuitry on the left and right sides of the shifter allows the shifter to operate in either direction.To send data from left to right, the left-hand driver reads data from the fraction bus and sends it into the shifter.The right-hand driver circuit receives this shifted data, latches it temporarily, and then writes it back to the fraction bus.To send data in the opposite direction, the driver circuits reverse roles: the right-hand driver sends data from the fraction bus into the shifterwhile the left-hand circuit receives the shifted data.  10\n  The final feature I&#39;ll describe is the circuitry that controlled the shifter.Three different sources control how many positions to shift.First, the microcode engine can specify the number directly.Second, the number can come from a loop counter; this is used as part of the CORDIC transcendental algorithms.Finally, the number can come from a leading zero counter; this allows numbers to be normalized by eliminating leading zeroes through shifting.Each of these sources provides a 6-bit shift number; the six multiplexers each select one bit from the desired source.  12\n    Next, decoders activate one of eight bit-shift lines and one of eight byte-shift lines to control the appropriate pass transistors in the shifter.(Each decoder takes a 3-bit input and activates one of 8 output lines.)Because each decoder line controls a large column of pass transistors in the shifter, the decoder uses relatively large power transistors.  13At the bottom, the 16 control lines exit the circuitry.\n  The 8087 is a complex chip with many functional units. However, by examining the die closely, the circuits of the 8087 can be understood.This blog postdescribed the 8087&#39;s fast barrel shifter, capable of shifting by up to 63 bits at a time.  14Intel received a patent on this innovative  programmable bidirectional shifter.\n The shifter was just one of the features that letthe 8087 compute floating-point operations much faster than the 8086 processor could.The 8087 operates on 80 bits at a time instead of 16. The 8087 has 80-bit wide registers, reducing memory accesses during computations.The 8087 stores constants for transcendental operations in a ROM,also avoiding memory accesses.Hardware in the 8087 checked for NaN, underflow, overflow, etc., avoiding slow checks in code.The 8087&#39;s hardware made multiplication and division faster.I don&#39;t know the relative contributions of these factors, but in combination, they improved floating-point performance dramatically, by up to a factor of 100.\n The benefits of floating point hardware are so great that Intel started integrating the floating-point unit into the processor with the 80486 (1989).Now, most processors include a floating-point unit and the expense of purchasing a separate floating-point coprocessor is a thing of the past.\n  Die photo of the 8087 with the metal layer removed. The colors are due to some of the oxide layer remaining. Click for a larger image.\n  For more information on the 8087, see my other articles:  Extracting ROM constants from the 8087,  The two-bit-per-transistor ROM and  The substrate bias generator.I announce my latest blog posts on Twitter, so follow me  @kenshirriff for future articles. I also have an  RSS feed.\n  Even without floating-point hardware, early microcomputers could perform floating-point operations.The operations would be broken down into many integer operations, manipulating the exponent and fraction as necessary.In other words, floating-point support didn&#39;t make floating-point operations possible, it just made them much faster.(Another way to represent non-integers is fixed-point numbers, which have a fixed number of digits after the decimal.Fixed-point numbers are simpler than floating-point, but can&#39;t represent as large a range.)\u00a0 \u21a9\n The 8087 wasn&#39;t the first floating-point chip.National Semiconductor introduced the  MM57109 Number Cruncher Unit (that is the real name) in 1977.It was essentially a repackaged 12-digit scientific calculator chip, operating on binary-coded decimal values with values entered in Reverse Polish Notation.This chip was absurdly slow; a tangent, for instance, could take over a second.AMD introduced their floating-point chip, the  Am9511, in 1978 ( details).This chip supported 32-bit floating-point numbers and took up to 1.4 milliseconds for a tangent.(Intel ended up licensing the Am9511 from AMD and selling it as the  8231.)A 10-MHz 8087 in comparison, could do a tangent in 54 microseconds, operating on an 80-bit floating-point number.Thus, the 8087&#39;s performance and accuracy were far superior to previous chips.\u00a0 \u21a9\n The original IBM PC (1981) had an empty socket on its motherboard for adding an 8087 coprocessor.a huge benefit for applications such as AutoCAD.The large empty socket is visible in the upper left below, above the 8088 microprocessor.A list of applications with support for the 8087 is  here.\n I couldn&#39;t find the original price for the 8087, but it was expensive.At first, Intel only sold the 8087 as a matched and tested pair with an 8088, due to timing flakiness with the 8087.By 1982, Intel dropped the price of the 8087 to  $230,equivalent to about $500in current dollars. Compared to today&#39;s open-source world, it seems strange that customers also had to pay for software support: using the 8087 with the BASIC language cost another $150, while Intel&#39;s 8087 development library was $1250.\u00a0 \u21a9\n The designers of the 8087 commented on the guidance offered by Professor Kahan: &#34;We did not do as well as he wanted, but we did better than he expected.&#34; Kahan later received a Turing Award for his work on floating point.\u00a0 \u21a9\n Processors often include a variety of shift instructions, including rotate operations that shift bits from one end of the word to the other.The 8087 only performs straight shifts, not rotates.\u00a0 \u21a9\n The shifter handles the 8087&#39;s 64-bit fraction, along with three extra bits for rounding accuracy, so it supports 67 bits.Unless I miscounted, the shifter also has an extra bit in the most significant position, making it 68 bits wide.\u00a0 \u21a9\n Multiplication and division make heavy use of shifting; multiplication is performed by shifts and adds, while division uses shifts and subtracts.However, the 8087 does not use the general-purpose shifter for these operations, but has specialized shifters optimized for these operations.\u00a0 \u21a9\n In order to pack the wiring as close together as possible, the shifter alternated wires of diffused silicon and wires of polysilicon.In the photo below, the diffused silicon wires are pinkish, while the polysilicon is yellowish.The 8087 was built with Intel&#39;s HMOS III process, which required a 4\u00b5m spacing for polysilicon and 5\u00b5m for diffusion, probablydue to the resolution of the photolithography practice.However, the spacing between a diffusion line and a polysilicon line could be much smaller, probably because they were created with separate masks and wereon separate layers.Thus, alternating diffusion and polysilicon lines could be packed together tightly, saving space.\n  Wiring in the byte shifter consists of alternating, tightly-packed silicon and polysilicon lines. The large rectangles on either side are pairs of transistors, controlled by vertical polysilicon lines.\n The driver circuitry has a few subtleties. Instead of sending data directly into the shifter, bits are transferred in two steps.First, the shifter lines are pre-charged to a high level. Then, any 1-bit inputs cause the corresponding shifter lines to be pulled low.In other words, the shifter lines are active-low, with a low voltage representing a 1.Since any unused outputs keep their high voltage (a 0 bit), 0 bits are shifted into low bit positions automatically.I think the pre-charge technique also was a better match for NMOS circuitry, which was better at pulling a signal low than pulling it high,so pre-charging the lines helped performance, especially given their relatively high capacitance.The latch between the shifter and the fraction bus prevents an unwanted cycle with the shifted data immediately flowingback into the shifter and getting re-shifted.\u00a0 \u21a9\n This footnote will clarify the physical shift versus the logical shift.On the die, the fraction circuitry is arranged with the most-significant bit at the bottom.Passing data through the shifter from left to right shifts bits physically downward.This corresponds to a left-shift of a binary number, moving bits to a higher position.In the opposite direction, passing data through the shifter from right to left performs a right-shift of the data.\u00a0 \u21a9\n The left/right direction also needs to be selected from one of the three shift sources, but I haven&#39;t located the circuitry for that yet.\u00a0 \u21a9\n Each decoder essentially consists of eight NOR gates: seven will be pulled low and only the one with all inputs low will be high.However, it&#39;s not implemented as a straightforward logic gate. Instead, all outputs are precharged high, and then the seven undesired outputs are pulled low.This sort of  dynamic precharge logic is still used in modern circuits;see the book Synchronous Precharge Logic.The multiplexers are also implemented with precharge logic.\u00a0 \u21a9\n Intel&#39;s x86 processors didn&#39;t include a barrel shifter until the 80386 (1985), which provided a 64-bit barrel shifter. Before that, the 8086 and descendants shifted one bit at a time,so shifts by many bit positions were much slower.\u00a0 \u21a9", "posttime": "2020-05-31 01:54:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82af\u7247,coprocessor,\u79fb\u4f4d", "title": "8087\u6570\u5b66\u534f\u5904\u7406\u5668\u5feb\u901f\u79fb\u4f4d\u5668\u82af\u7247\u5206\u6790", "title_en": "Die analysis of the 8087 math coprocessor's fast bit shifter", "transed": 1, "url": "http://www.righto.com/2020/05/die-analysis-of-8087-math-coprocessors.html", "via": "", "real_tags": ["\u82af\u7247", "\u79fb\u4f4d"]}, {"category": "", "categoryclass": "", "imagename": "01d591549cc6ae9510dd3f3591a7ab08.jpg", "infoid": 1004422, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4eba\u63d0\u5230FreePBX\u4e3b\u9875\u53d8\u4e86\uff0c\u6211\u5c31\u53bb\u770b\u4e86\u770b\u3002\u6211\u8ba4\u4e3a\u5b83\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u9664\u4e86\u5947\u602a\u7684\u72d7\u86d9\u4ee3\u66ff\u4e86\u63a2\u6208\uff0c\u4f46\u4ed6\u4eec\u4e5f\u5220\u9664\u4e86\u6240\u6709\u7684(\u6240\u6709\uff01)\u3002\u6211\u7684\u535a\u5ba2\u5e16\u5b50\u3002\u76f8\u5f53\u4e8e15\u5e74\u3002\u8fd8\u6709\u6240\u6709\u7684tm1000&#39\uff1bs(\u4ed6\u62c5\u4efb\u4e868\u5e74\u591a\u7684\u9886\u5bfc)\uff0c\u4ee5\u53ca\u4efb\u4f55\u63d0\u5230\u4ed6\u7684\u5e16\u5b50\u3002\n\u6211\u5f88\u751f\u6c14\u3002\u6211\u80fd\u60f3\u5230\u4ed6\u4eec\u8fd9\u4e48\u505a\u7684\u552f\u4e00\u539f\u56e0\u662f\uff0c\u4ed6\u4eec\u6b63\u51c6\u5907\u5173\u95edFreePBX\u6e90\u4ee3\u7801\uff0c\u5e76\u9f13\u52b1\u4eba\u4eec\u8f6c\u5411\u4ed6\u4eec\u7684\u5546\u4e1a\u670d\u52a1(Switchvox)\u3002\n\u6211\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u4e9b\u5173\u4e8e\u8fd9\u4ef6\u4e8b\u7684\u5486\u54ee\uff0c\u6211\u731c\u8fd9\u610f\u5473\u7740\u6211\u6700\u7ec8\u771f\u7684\u8981\u5f00\u59cb\u5f00\u53d1PhoneBo.cx\u4e86\uff01\n\u7ea7\u522b1\u6211\u4e00\u76f4\u5bf9\u76ee\u524dSwitchvox\u7684\u529f\u80fd\u96c6\u5982\u6b64\u6709\u9650\u611f\u5230\u4e0d\u6ee1(\u4e0d\u80fd\u505a\u621110\u5e74\u524d\u80fd\u505a\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u7684\u652f\u6301\u4e5f\u4e0d\u4f1a\u5bf9sip.conf\u505a\u4efb\u4f55\u6539\u53d8\uff0c\u5373\u4f7f\u6211\u63d0\u51fa\u652f\u4ed8\u4ed6\u4eec\u7684\u5c0f\u65f6\u8d39\u7528)\u3002\u5f53\u8fd9\u4efd\u652f\u6301\u5408\u540c\u5728\u5927\u7ea618\u4e2a\u6708\u540e\u5230\u671f\u65f6\uff0c\u6211\u5c06\u5bfb\u627e\u4e00\u4e2a\u5728\u5f00\u6e90\u65b9\u9762\u8868\u73b0\u5f97\u66f4\u597d\u7684\u4eba\u3002\n\u7ea7\u522b1\u6211\u8ba4\u4e3a\u5173\u95ed\u6e90\u4ee3\u7801\u8fdd\u53cd\u4e86GPL\u8bb8\u53ef\u8bc1\uff0c\u5bf9\u5417\uff1f\u5982\u679c\u6211\u6b63\u786e\u7406\u89e3\u8bb8\u53ef\u95ee\u9898\uff0c\u53ea\u8981Sangoma\u7ee7\u7eed\u4f7f\u7528GPLed\u9879\u76ee\u7684\u6e90\u4ee3\u7801\uff0c\u4ed6\u4eec\u5c31\u6709\u4e49\u52a1\u5728GPL\u4e0b\u63d0\u4f9bFreePBX\u3002\n\u662f\u7684\uff0c\u6211\u6bd4\u6211\u5e94\u8be5\u66f4\u6e05\u695a\u5730\u77e5\u9053\uff0c\u4ed6\u4eec\u4e3a\u4efb\u4f55\u8bd5\u56fe\u4ece\u6e90\u4ee3\u7801\u6784\u5efa\u5230\u751f\u4ea7\u7ea7\u7ea7\u522b\u7684FreePBX\u7684\u4eba\u505a\u4e8b\u60c5\u6709\u591a\u96be\u3002\n\u9644\u6ce8\uff1a\u5982\u679c\u8fd9\u91cc\u7684\u4efb\u4f55\u4eba\u5bf9\u6d89\u53ca\u7684\u8bb8\u53ef\u6709\u66f4\u597d\u7684\u7406\u89e3\uff0c\u8bf7\u7ea0\u6b63\u6211\u3002\n\u7b2c2\u7ea7\uff0cSamgoma\u4e0d\u62e5\u6709\u7684Freepbx\u53ea\u6709\u6781\u5c11\u6570\u90e8\u5206\u662f\u6309\u7167GPL\u6388\u6743\u7684\u3002\u5176\u4ed6\u90e8\u5206\u8981\u4e48\u662f\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\uff0c\u8981\u4e48\u662fBSD\u7684\uff0c\u8981\u4e48\u5c31\u662f\u5fae\u4e0d\u8db3\u9053\u5730\u91cd\u5199\u4e86\u3002\u5982\u679c\u6211\u8fd8\u5728\u90a3\u91cc\uff0c\u6211\u53ef\u4ee5\u5728\u51e0\u5468\u5185\u5173\u95ed\u5b83\u7684\u6765\u6e90\u3002\u8fd9\u4e9b\u5929\u4ed6\u4eec\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u4f46\u4ece\u6280\u672f\u4e0a\u8bb2\u8fd9\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\u3002\n\u4f5c\u4e3aSangoma\u8d1f\u8d23\u5f00\u6e90\u7684\u526f\u603b\u88c1\uff0c\u6211\u53ef\u4ee5\u6beb\u4e0d\u542b\u7cca\u5730\u58f0\u660e\uff0c\u6b63\u5982Rob\u6240\u8bf4\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u51c6\u5907\u5173\u95edFreePBX\u6e90\u4ee3\u7801\u3002\n\u662f\u7684\uff0c\u6211\u4eec\u7684\u8425\u9500\u56e2\u961f\u641e\u7838\u4e86\u4e00\u4e9b\u65e7\u7684\u535a\u5ba2\u5e16\u5b50\uff0c\u5e76\u5c06\u5176\u5b58\u6863\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u4ed6\u4eec\u5df2\u7ecf\u4fee\u590d\u4e86\u5b83\u4eec\u3002\u4f46\u8bf7\u4e0d\u8981\u8ba4\u4e3a\u8fd9\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8f6c\u5316\u4e3a\u5728FreePBX\u4e0a\u5173\u95ed\u6e90\u4ee3\u7801\u3002\u8fd9\u7edd\u5bf9\u4e0d\u662f\u6211\u4eec\u7684\u610f\u56fe\u3002\n\u7ea7\u522b2&#34\uff1b\u5df2\u5b58\u6863&#34\uff1b\u4e0e\u5df2\u5220\u9664\u4e0d\u540c\u3002\u535a\u5ba2\u5e16\u5b50\u5df2\u88ab\u5220\u9664\u3002\u8bd5\u56fe\u58f0\u79f0\u4e0d\u662f\u8fd9\u6837\u7684\u8bf4\u6cd5\u662f\u80e1\u8bf4\u516b\u9053\u3002\u4e3a\u4ec0\u4e48\u5176\u4ed6\u4ee5\u524d\u7684\u5f00\u53d1\u8005\u5728\u90a3\u91cc\u7559\u4e0b\u4e86\u5e16\u5b50\uff0c\u800cAndrew\u3001Bryan\u548c\u6211\u7684\u5e16\u5b50\u5374\u4ece\u5386\u53f2\u4e2d\u5220\u9664\u4e86\uff1f\n\u4e3a\u4ec0\u4e48\u83f2\u5229\u666e\u65af\u5411\u5b89\u5fb7\u9c81\u9053\u522b\u7684\u5e16\u5b50\u88ab\u5220\u9664\u4e86\uff0c\u800c\u4ed6\u6240\u6709\u7684\u5176\u4ed6\u5e16\u5b50\u90fd\u4fdd\u7559\u4e86\u4e0b\u6765\uff1f\n\u8fd9\u53c8\u662f\u4e00\u6b21\u6709\u9488\u5bf9\u6027\u7684\u653b\u51fb\uff0c\u4f46\u8fd9\u662f\u4e00\u6839\u7a3b\u8349\u3002\u6211\u538c\u5026\u4e86\u8fd9\u79cd\u8d70\u56de\u5934\u8def\u7684\u505a\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u6709\u4eba\u6545\u610f\u800c\u660e\u786e\u5730\u9009\u62e9\u5220\u9664\u90a3\u4e9b\u6587\u7ae0\u3002\n\u7b2c1\u7ea7\uff0c\u60a8\u548c\u60a8\u7684\u540c\u4e8b\u662f\u5426\u660e\u786e\u8981\u5206\u53c9\u4ee3\u7801\u5e76\u7ee7\u7eed\u6267\u884c\uff1f\n\u4e00\u7ea7\u55ef..\u3002\u5929\u54ea\uff0c\u6211\u5e0c\u671b\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u6211*\u6bcf\u5929*\u90fd\u5728\u4f7f\u7528FreePBX\uff0c\u81ea\u4ece\u5b83\u88ab\u547d\u540d\u4e3aAsterisk@Home\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u662f\u5b83\u7684\u957f\u671f\u652f\u6301\u8005\u3002\u6211\u6c38\u8fdc\u4e5f\u4e0d\u60f3\u642c\u5230Switchvox\u53bb\uff0c\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u65e7\u7684Trixbox\u53c9\u5b50\u548c\u5931\u8d25\u3002\u6211\u7406\u89e3FreePBX\u7684\u5546\u4e1a\u6a21\u5757\u548c\u5bf9\u5b83\u7684\u652f\u6301\uff0c\u4ee5\u53ca\u4f60\u4eec\u5f52\u7c7b\u7684\u4efb\u4f55\u4e1c\u897f(\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u53ea\u662f\u5728\u732a\u8eab\u4e0a\u6d82\u4e0a\u5546\u4e1a\u670d\u88c5/\u53e3\u7ea2\u7684FreePBX)\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u4f1a\u7ee7\u7eed\u652f\u6301\u8fd9\u4e9b\u6a21\u5757\u548c\u652f\u6301\u3002Jared Smith\u4e5f\u521a\u521a\u53d1\u5e03\u4e86\u4e00\u7bc7\u5173\u4e8eSangoma\u5f00\u6e90\u9886\u5bfc\u529b\u7684\u535a\u5ba2\u6587\u7ae0\u2026\u2026\u3002\u592a\u5947\u602a\u4e86\uff1ahttps://blogs.asterisk.org/2020/05/26/collaborating-for-success-in-open-source/?utm_source=twitter&amp\uff1butm_medium=social\u3002\n\u4ed6\u4eec\u5bf9\u5f85\u4f60\u7684\u65b9\u5f0f\u771f\u5dee\u52b2\uff0c\u7f57\u5e03\u3002\u6211\u4e0d\u660e\u767d\u3002\u8fd9\u5c31\u50cf\u5f00\u653e\u6e90\u7801\u901a\u4fe1\u7684\u4eba\u4eec\u90fd\u7ad9\u5728\u540c\u4e00\u9635\u8425\u4e00\u6837\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u6253\u8fd9\u573a\u4ed7\u5462\uff1f\n\u7ea7\u522b1\uff0c\u518d\u52a0\u4e0a\u5fae\u8f6f\u6536\u8d2dMetaswitch\u548c\u601d\u79d1\u6536\u8d2dBroadsoft\uff0c\u8fd9\u8ba9\u6211\u4eec\u6709\u70b9\u7d27\u5f20\u3002\n\u7b2c1\u7ea7FreePBX\u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u6c38\u8fdc\u662f\u5f00\u6e90\u7684\u3002\u6b64\u5916\uff0cSangoma 100%\u81f4\u529b\u4e8e\u4fdd\u6301FreePBX\u5f00\u6e90\u3002\u6b22\u8fce\u5927\u5bb6\u52a0\u5165\u6211\u4eec\u7684https://community.freepbx.org/\u3002\n\u81f3\u4e8e\u535a\u5ba2\u5e16\u5b50\u7684\u95ee\u9898\uff0c\u6211\u4eec\u66f4\u65b0\u4e86\u6574\u4e2afreepbx.org\u7f51\u7ad9\uff0c\u4e00\u4e9b\u535a\u5ba2\u5e16\u5b50\u88ab\u4e0d\u77e5\u9053\u5b89\u5fb7\u9c81\u548c\u7f57\u5e03\u662f\u8c01\u7684\u4eba\u9519\u8bef\u5730\u9057\u6f0f\u4e86\u3002\u8fd9\u5c31\u662f\u5f53\u4f60\u6210\u957f\u5e76\u8ba9\u6ca1\u6709\u5386\u53f2\u80cc\u666f\u7684\u65b0\u4eba\u52a0\u5165\u65f6\u4f1a\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u88ab\u89e3\u8bfb\u4e3a\u90aa\u6076\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u8bda\u5b9e\u7684\u9519\u8bef\u3002\u6211\u4eec\u627e\u51fa\u95ee\u9898\u6240\u5728\u540e\uff0c\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u6062\u590d\u535a\u5ba2\u5e16\u5b50\u3002\n\u7b2c\u4e8c\u5c42\u628a\u5b83\u5217\u5728\u8fd9\u91cc\uff0c\u4f46\u8ba9\u6211\u611f\u5230\u4e0d\u5b89(\u5e76\u8ba9\u6211\u5728Twitter\u4e0a\u5486\u54ee)\u7684\u5e76\u4e0d\u662f\u6211\u7684\u5e16\u5b50\u90fd\u88ab\u5220\u9664\u4e86\u3002\u6211\u7684\u5e16\u5b50\u90fd\u88ab\u5220\u9664\u4e86\uff0c\u83f2\u5229\u666e\u5199\u7ed9\u6211\u6c38\u522b\u7684\u5e16\u5b50\u4e5f\u88ab\u5220\u9664\u4e86(\u8bf7\u6ce8\u610f\uff0c\u83f2\u5229\u666e\u7684\u5176\u4ed6\u5e16\u5b50\u90fd\u6ca1\u6709\u88ab\u5220\u9664)\u3002\u5982\u679c\u53ea\u662f\u6211\u6240\u6709\u7684\u5e16\u5b50(\u6216\u6240\u6709\u5176\u4ed6\u5e16\u5b50)\uff0c\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u5f52\u56e0\u4e8e\u4e00\u573a\u610f\u5916\uff0c\u4f46\u4e8b\u5b9e\u662f\uff0c\u8fd9\u662f\u6211\u6240\u6709\u7684\u5e16\u5b50\uff0c\u800c\u4e14\u83f2\u5229\u666e\u7ed9\u6211\u5199\u4e86\u4e00\u4e2a\u544a\u522b\u535a\u5ba2\uff0c\u8fd9\u8ba9\u6211\u8ba4\u4e3a\u8fd9\u662f\u53e6\u4e00\u56de\u4e8b\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u6211\u7684\u5e16\u5b50\u88ab\u79fb\u9664\u671f\u95f4\uff0c\u6469\u897f\u7684\u5e16\u5b50\u4e5f\u4fdd\u7559\u4e86\u4e0b\u6765\u3002\u4f60\u77e5\u9053\u6469\u897f\u662f\u8c01\u5417\uff1f\u6851\u6208\u9a6c\u7684\u4eba\u77e5\u9053\u6469\u897f\u662f\u8c01\u5417\uff1f\u8bda\u5b9e\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6469\u897f\u57282013\u5e74\u79bb\u5f00\u4e86FreePBX\u3002\u90a3\u4e48\uff0c\u5982\u679c\u4eba\u4eec\u4e0d\u77e5\u9053\u5b89\u5fb7\u9c81\u548c\u7f57\u4f2f\u662f\u8c01\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e3a\u4ec0\u4e48/\u600e\u4e48/\u8c01\u77e5\u9053\u6469\u897f\u662f\u8c01\u5462\uff1f\u4e3a\u4ec0\u4e48\u662f\u6469\u897f\u800c\u4e0d\u662f\u6211\uff1f\u8fd8\u662f\u7f57\u4f2f\uff1f\u53ea\u662f\u597d\u5947\u800c\u5df2\u3002\n\u6211\u6ca1\u6709\u58f0\u79f0FreePBX\u662f\u5c01\u95ed\u6e90\u4ee3\u7801\u3002\u6211\u552f\u4e00\u7684\u8981\u6c42\u662f\u6211\u7684\u535a\u5ba2\u5e16\u5b50\u548c\u83f2\u5229\u666e\u5173\u4e8e\u6211\u7684\u544a\u522b\u5e16\u5b50\u4e00\u8d77\u88ab\u5220\u9664\u4e86\u3002\n\u5947\u602a\u7684\u662f\uff0c\u53bb\u5e74\u8fd9\u4e00\u6b21\u6211\u7684\u8d26\u53f7\u4e5f\u88ab\u505c\u7528\u4e86\uff0c\u5728\u6211\u628a\u5b83\u653e\u5230Twitter\u4e0a\u540e\uff0c\u5b83\u4e5f\u88ab\u4fee\u590d\u4e86\u3002\n\u5982\u679c\u6211\u544a\u8bc9\u4f60\u8fd9\u4ef6\u4e8b\u6ca1\u6709\u8ba9\u6211\u5fc3\u60c5\u4e0d\u597d\uff0c\u90a3\u6211\u5c31\u662f\u5728\u6492\u8c0e\u3002\n\u7b2c\u4e8c\u7ea7\u5982\u679c\u5b83\u4eec\u88ab\u9519\u8bef\u5730\u7701\u7565\u4e86\uff0c\u4e3a\u4ec0\u4e48\u83f2\u5229\u666e\u65af\u7684\u544a\u522b\u5b89\u5fb7\u9c81\u7684\u5e16\u5b50\u88ab\u5220\u9664\u4e86\uff0c\u800c\u4ed6\u6240\u6709\u7684\u5176\u4ed6\u5e16\u5b50\u90fd\u4fdd\u7559\u4e86\u4e0b\u6765\uff1f\n\u5982\u679cSamgoma\u6ce8\u5b9a\u8981\u6210\u4e3a\u5f00\u6e90\u7684\u6307\u8def\u660e\u706f\uff0c\u4f60\u4eec\u751f\u4ea7\u4e86\u54ea\u4e9b\u65b0\u7684\u5f00\u6e90\u6a21\u5757\uff1f\u6211\u6240\u77e5\u9053\u7684\u6700\u540e\u4e00\u4e2a\u65b0\u7684\u5f00\u6e90\u6a21\u5757\u662f\u9632\u706b\u5899\uff0c\u6211\u628a\u5b83\u5199\u4e86\u4e0b\u6765(\u7136\u540e\u6709\u4eba\u4ecesysadmin-rpm\u4e2d\u5220\u9664\u4e86\u6211\u7684\u5bc6\u94a5\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u80fd\u4e00\u76f4\u66f4\u65b0\u5b83\u4e86)\u3002\n\u8fd9\u662f\u80e1\u8bf4\u516b\u9053\uff0c\u4f60\u77e5\u9053\u7684\u3002\u4f60\u4f3c\u4e4e\u5bf9\u6211\u6000\u6068\u5728\u5fc3\u3002\u627f\u8ba4\u8fd9\u4e00\u70b9\uff0c\u6216\u8005\u81f3\u5c11\u7f16\u9020\u4e00\u4e9b\u66f4\u597d\u7684\u3001\u5185\u90e8\u8fde\u8d2f\u7684\u501f\u53e3\u3002", "note_en": "Someone mentioned that the FreePBX homepage has changed, and I went and had a look. I think it looks good, apart from the strange dogfrog thing that have replaced Tango with, but they&#39;ve ALSO gone through and deleted all (ALL!) of my blogposts. 15 years worth. Also all of tm1000&#39;s (who was the lead for 8 odd years), AND any posts referencing him.\n I&#39;m pissed. The only reason I can think of them doing this, is that they&#39;re preparing to close the FreePBX source, and encourage people to move to their commercial offering (SwitchVox).\n I posted a bit of a  rant about this on twitter, and I guess this means that I really do have to start work on PhoneBo.cx finally!\n   level 1  I&#39;ve been unhappy with how limited the featureset is in Switchvox these days anyways (can&#39;t do things I used to be able to do 10 years ago, and their support won&#39;t make any changes to sip.conf even when I offer to pay their hourly rate). When this support contract is up in ~18 months I&#39;ll be looking to move on to someone that plays nicer with open source...\n level 1  I think that closing the source breaks the GPL license, right? As long as Sangoma continues to use source code from GPLed projects they are under obligation to provide FreePBX under GPL as well, if I understand the licensing issue correctly.\n And yeah, I know it better than I should how hard they made things for anyone that tries to build FreePBX from source up to a production-grade level.\n PS: if anyone around here has a better understanding of the involved licensing please correct me.\n level 2  There are very few parts of freepbx that are licensed under the GPL that Samgoma doesn&#39;t own. The other parts are either MIT, BSD or trivially rewritten. If I was still there, I could close source it within a couple of weeks. It may take them a few months these days, but it&#39;s technically achievable.\n  level 1  As the Vice President of Open Source at Sangoma, I can state unequivocally that we&#39;re not at all preparing &#34;to close the FreePBX source&#34; as Rob put it.\n Yes, our Marketing team messed up and archived some old blog posts. They&#39;ve since restored them. But please don&#39;t think that somehow that translates into use closing the source on FreePBX. That is absolutely not our intention.\n level 2  &#34;Archived&#34; is not the same as Deleted. The blog posts were deleted. Trying to claim otherwise is bullshit. Why were posts left there by OTHER previous developers, but Andrew, Bryan, and my posts were removed from history?\n Why was Philippes post saying goodbye to Andrew deleted, but all of his other posts remained?\n This was, yet again, a targeted attack, but this was the straw. I&#39;m sick of the &#34;it was a mistake&#34; backpedaling, too. Someone deliberately and explicitly chose to delete those articles.\n  level 1  Are you and the folks at Clearly going to fork the code and continue over there?\n  level 1  hmm... gosh i hope that&#39;s not the case. I use FreePBX *daily* and have been a long time supporter since when it was  Asterisk@Home. I&#39;d never want to move to SwitchVox, it looks like the old trixbox fork and failure. I understand the commercial modules and support for FreePBX and whatever you&#39;d categorize &#34;PBXAct&#34; (which to me is just FreePBX with a commercial costume / &#34;lipstick on a pig&#34;) and happily will continue to support those. Jared Smith also just posted this blog post about Sangoma open source leadership... so weird:  https://blogs.asterisk.org/2020/05/26/collaborating-for-success-in-open-source/?utm_source=twitter&amp;utm_medium=social\n Sucks how they have treated you Rob. I don&#39;t get it. It&#39;s like the open-source communication folks are all on the same side, so why this fighting.\n level 1  This along with Microsoft acquiring Metaswitch and Cisco buying Broadsoft has us a bit on edge.\n  level 1  FreePBX is open source and will ALWAYS be open source. Furthermore, Sangoma is 100% committed to keeping FreePBX open source. Everyone is welcome to join us at  https://community.freepbx.org/\n As for the blog post issue, we updated the whole freepbx.org site, and some blog posts were erroneously omitted by people that have no idea who Andrew and Rob were. That is what happens when you grow and get new people onboard that have no historical context.\n So it could be interpreted at as nefarious but it could also be seen as an honest mistake. It took one day to restore the blog posts once we figured out what the problem was.\n level 2  Laying it out here but what upset me (and made me go on a twitter &#39;rant&#39;) about the missing posts was not so much that mine were all removed. It was that mine were all removed AND the one from Philippe saying &#34;farewell&#34; to me was removed (note none of Philippe&#39;s other posts were removed). I can chalk it up to an accident easily if it was ONLY all of my posts (or all of other&#39;s posts) but the fact that it was all of my posts and the ONE where Philippe gave me a farewell blog made me think this was something else.\n Note that &#34;Moshe&#34;&#39;s posts also remained during the time mine were removed. Do you know who Moshe is? Does anyone at Sangoma know who Moshe is? Honest questions because Moshe left FreePBX in 2013. So if &#34;people have no idea who Andrew and Rob&#34; are then why/how/who did they know who Moshe was? Why Moshe and not me? Or Rob? Just curious.\n I have made no claims to FreePBX being closed source. My only claims were about my blog posts being removed along with Philippe&#39;s farewell post about me.\n Strangely last year this time my account was inactivated as well, which was also fixed after I brought it out on Twitter.\n I&#39;d be lying if I told you this didn&#39;t put me in a terrible mood.\n level 2  If they were &#34;erroneously omitted&#34; why was Philippes post saying goodbye to Andrew deleted, but all of his other posts remained?\n If Samgoma is meant to be the beacon of open source, what new open source modules have you guys produced? The last new open source module that I know of is firewall, and I wrote that (and &#34;someone&#34; then removed my key from sysadmin-rpm so I couldn&#39;t keep updating it)\n This is bullshit, and you know it. You seem to have some sort of vendetta against me. Own up to it, or at least make up some better, and internally coherent, excuses.", "posttime": "2020-05-31 01:53:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "freepbx,retcon", "title": "Sangoma\u521a\u521a\u8ba9\u6211\u9000\u51fa\u4e86FreePBX\uff0c\u6211\u6709\u70b9\u751f\u6c14", "title_en": "Sangoma just retcon'ed me out of FreePBX, and I'm kinda pissed", "transed": 1, "url": "https://www.reddit.com/r/VOIP/comments/gsl04i/sangoma_just_retconed_me_out_of_freepbx_and_im/", "via": "", "real_tags": ["freepbx", "retcon"]}, {"category": "", "categoryclass": "", "imagename": "79b9feb72e26403ca8d15017cf21dd54.jpg", "infoid": 1004421, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57285\u670827\u65e5\u661f\u671f\u4e09\u505c\u6b62\u53d1\u5c04\u540e\uff0cSpaceX\u73b0\u5728\u7684\u76ee\u6807\u662f5\u670830\u65e5\u661f\u671f\u516d\u53d1\u5c04\u730e\u9e709\u53f7\uff0c\u8fd9\u662fCrew Dragon\u7684\u7b2c\u4e8c\u6b21\u6f14\u793a(de.", "note_en": "After standing down from launch on Wednesday May 27, SpaceX is now targeting Saturday, May 30 for Falcon 9\u2019s launch of Crew Dragon\u2019s second demonstration (De...", "posttime": "2020-05-31 01:12:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nasa,\u53d1\u5c04", "title": "SpaceX\u548cNASA\uff1aCrew Demo-2", "title_en": "SpaceX and NASA: Crew Demo-2", "transed": 1, "url": "https://www.youtube.com/watch?v=bIZsnKGV8TE", "via": "", "real_tags": ["nasa", "\u53d1\u5c04"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5904\u7406\u9700\u8981\u4ee5\u6700\u5feb\u901f\u5ea6\u5411\u6700\u7ec8\u7528\u6237\u663e\u793a\u5185\u5bb9\u7684Rust\u5e94\u7528\u7a0b\u5e8f\u6216CLI\u65f6\uff0c\u6211\u7ecf\u5e38\u53d1\u73b0\uff0c\u5927\u91cf\u65f6\u95f4\u901a\u5e38\u4e0d\u662f\u82b1\u5728\u505a\u4efb\u4f55\u8ba1\u7b97\u4e0a\uff0c\u800c\u662f\u82b1\u5728\u5220\u9664\u51fd\u6570\u672b\u5c3e\u7684\u5927\u578b\u6570\u636e\u7ed3\u6784\u4e0a\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u83b7\u53d6\u4e00\u4e9b\u8f83\u91cd\u7684\u5bf9\u8c61\u5e76\u8fd4\u56de\u5176\u5927\u5c0f\uff1a\n\u5f04\u5230a\u7684\u5927\u5c0f\u662f\u975e\u5e38\u4fbf\u5b9c\u7684\u3002\u5b83\u5927\u7ea6\u9700\u89810.01ms\uff0c\u4f46\u662f\u6574\u4e2a\u51fd\u6570\u5728\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\u4e4b\u524d\u53ef\u80fd\u9700\u89811000ms\uff0c\u8fd9\u662f\u56e0\u4e3aRust\u9700\u8981\u4e22\u5f03a\u7684\u503c\u5e76\u91ca\u653e\u5b83\u5728\u8fd4\u56de\u4e4b\u524d\u4f7f\u7528\u7684\u6240\u6709\u5185\u5b58\u3002\n\u5982\u679cHeavyThing\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u90a3\u4e48\u91ca\u653e\u5b83\u6b63\u5728\u4f7f\u7528\u7684\u6240\u6709\u5185\u5b58\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002\n\u5bf9\u4e8eUI\u548c\u4ea4\u4e92\u5f0fCLI\u6765\u8bf4\uff0c\u8fd9\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u6211\u4eec\u5df2\u83b7\u5f97\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\u6240\u9700\u7684\u6240\u6709\u6570\u636e\uff0c\u4f46\u5728\u6211\u4eec\u5b8c\u6210\u6e05\u7406\u4e4b\u524d\uff0c\u65e0\u6cd5\u5bf9\u5176\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff01\n\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u63a8\u8fdf\u4e22\u5f03\u8be5\u503c\uff0c\u65b9\u6cd5\u662f\u5c06\u5176\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8ba9\u5b83\u6765\u5904\u7406\u5b83\u3002\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u751f\u6210\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5c06\u7e41\u91cd\u7684\u6570\u636e\u7ed3\u6784\u79fb\u5165\u5176\u4e2d\uff0c\u7136\u540e\u5f00\u59cb\u6267\u884c\u3002\u8be5\u51fd\u6570\u7acb\u5373\u8fd4\u56de\uff0c\u5e76\u4e14\u5728\u5c06\u6765\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5c06\u5f00\u59cb\u6267\u884c\u5220\u9664\u6570\u636e\u7ed3\u6784\u548c\u91ca\u653e\u6240\u6709\u5df2\u7528\u5185\u5b58\u7684\u5de5\u4f5c\u3002\n\u8fd9\u91cc\u662f\u4e00\u4e2a\u4f7f\u7528\u5177\u67091M\u4e2a\u5bc6\u94a5\u7684HashMap&usize\uff0cVec&lt\uff1busize\uff1b&&gt;\u6570\u636e\u7ed3\u6784\u7684\u5c0f\u793a\u4f8b\u3002\u5ef6\u8fdf\u653e\u7f6e\u5230\u53e6\u4e00\u4e2atherad\u7684\u529f\u80fd\u6267\u884c\u901f\u5ea6\u5927\u7ea6\u5feb10K\u500d\u3002\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528HashMap&lt\uff1busize\uff0cVec&lt\uff1busize&&gt;\u6570\u636e\u7ed3\u6784\u7684\u5c0f\u793a\u4f8b\uff0c\u8be5\u6570\u636e\u7ed3\u6784\u67091M\u4e2a\u5bc6\u94a5", "note_en": "When working on Rust applications or CLIs that need to show something to the end user as fast as possible I often find that a significant chunk of the time is usually spent not in doing any computations, but in dropping large data structures at the end of the function.\n For example, imagine you have a function that takes some heavy object and returns its size:\n  Getting  size of  a is extremely cheap. it takes about  0.01ms, hovever the entire function can take  1000ms before it returns anything.This is because Rust needs to drop the value of  a and deallocate all memory it was using before it can return.\n  And if  HeavyThing is a very complex data structure it might take a while to deallocate all memory it&#39;s using.\n This really sucks for UIs and interactive CLIs. We got all needed data to respond to a user request, but can&#39;t do anything with it until we finish cleaning things up!\n One of the workarounds for this problem is to defer dropping the value by moving it to another thread and letting it take care of it.\n  In this example, we spawn another thread, move the heavy data structure into it and froget about it. The function returns right away and somewhere in the future the other thread will start doing the work of dropping the data structure and deallocating all used memory.\n Here&#39;s a small example of working with a  HashMap&lt;usize, Vec&lt;usize&gt;&gt; data structure that has 1M keys.The function that defers dropping to another therad performs about 10K times faster", "posttime": "2020-05-31 01:11:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,rust,\u7ebf\u7a0b,\u901f\u5ea6,dropping", "title": "\u751f\u9508\uff1a\u5c06\u8f83\u91cd\u7684\u4e1c\u897f\u653e\u5165\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u60a8\u7684\u4ee3\u7801\u901f\u5ea6\u63d0\u9ad810000\u500d", "title_en": "Rust: Dropping heavy things in another thread can make your code 10000x faster", "transed": 1, "url": "https://abramov.io/rust-dropping-things-in-another-thread", "via": "", "real_tags": ["\u4ee3\u7801", "rust", "\u7ebf\u7a0b", "\u901f\u5ea6", "dropping"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004417, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u6211\u8bf4\uff0c\u6211\u53ea\u9700\u8981\u4f60\u7684\u7535\u5b50\u90ae\u4ef6ID\u5c31\u53ef\u4ee5\u63a5\u7ba1\u4f60\u5728\u4f60\u6700\u559c\u6b22\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u4e0a\u7684\u8d26\u6237\u3002\u542c\u8d77\u6765\u5f88\u53ef\u6015\uff0c\u5bf9\u5427\uff1f\u8fd9\u5c31\u662f\u82f9\u679c\u767b\u5f55\u7684\u4e00\u4e2abug\u5141\u8bb8\u6211\u505a\u7684\u4e8b\u60c5\u3002\n\u57284\u6708\u4efd\uff0c\u6211\u53d1\u73b0\u82f9\u679c\u7684\u96f6\u65e5\u767b\u5f55\u5f71\u54cd\u4e86\u4f7f\u7528\u5b83\u7684\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u5b9e\u65bd\u4ed6\u4eec\u81ea\u5df1\u7684\u989d\u5916\u5b89\u5168\u63aa\u65bd\u3002\u6b64\u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u8be5\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u4e0a\u7684\u7528\u6237\u5e10\u6237\u88ab\u5b8c\u5168\u63a5\u7ba1\uff0c\u800c\u4e0d\u7ba1\u53d7\u5bb3\u8005\u662f\u5426\u62e5\u6709\u6709\u6548\u7684Apple ID\u3002\n\u7531\u4e8e\u8fd9\u4e2a\u6f0f\u6d1e\uff0c\u82f9\u679c\u516c\u53f8\u6839\u636e\u4ed6\u4eec\u7684\u82f9\u679c\u5b89\u5168\u8d4f\u91d1\u8ba1\u5212\u5411\u6211\u652f\u4ed8\u4e8610\u4e07\u7f8e\u5143\u3002\n\u82f9\u679c\u7684\u767b\u5f55\u529f\u80fd\u7c7b\u4f3c\u4e8eOAuth 2.0\u3002\u901a\u8fc7\u4f7f\u7528JWT(JSON Web Token)\u6216Apple\u670d\u52a1\u5668\u751f\u6210\u7684\u4ee3\u7801\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u65b9\u5f0f\u3002\u7136\u540e\u4f7f\u7528\u8be5\u4ee3\u7801\u751f\u6210JWT\u3002\u4e0b\u56fe\u663e\u793a\u4e86JWT\u521b\u5efa\u548c\u9a8c\u8bc1\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u5728\u6388\u6743\u7684\u540c\u65f6\uff0c\u82f9\u679c\u7ed9\u7528\u6237\u4e00\u4e2a\u9009\u62e9\uff0c\u8981\u4e48\u4e0e\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5171\u4eab\u82f9\u679c\u7535\u5b50\u90ae\u4ef6ID\uff0c\u8981\u4e48\u4e0d\u5171\u4eab\u3002\u5982\u679c\u7528\u6237\u51b3\u5b9a\u9690\u85cf\u7535\u5b50\u90ae\u4ef6ID\uff0cApple\u5c06\u751f\u6210\u81ea\u5df1\u7684\u7279\u5b9a\u4e8e\u7528\u6237\u7684Apple\u4e2d\u7ee7\u7535\u5b50\u90ae\u4ef6ID\u3002\u6839\u636e\u7528\u6237\u9009\u62e9\uff0c\u5728\u6210\u529f\u6388\u6743\u540e\uff0cApple\u4f1a\u521b\u5efa\u5305\u542b\u6b64\u7535\u5b50\u90ae\u4ef6ID\u7684JWT\uff0c\u7136\u540e\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u7528\u8be5ID\u767b\u5f55\u7528\u6237\u3002\n{&#34\uff1bISS&#34\uff1b\uff1a&#34\uff1bhttps://appleid.apple.com&#34\uff1b\uff0c&#34\uff1bAud&#34\uff1b\uff1a&#34\uff1bcom.XXXX.weblogin&#34\uff1b\uff0c&#34\uff1bexp&#34\uff1b\uff1a158XXXXXXX\uff0c&#34\uff1biat&#34\uff1b\uff1a158XXXXXXX\uff0c&#34\uff1bsub&#34\uff1b\uff1a&#34\uff1bXXXX.XXXXX.XXXX&#34\uff1b\uff0c&#34\uff1bc_hash&#34\u3002\uff0c&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34\uff1b\uff1a&#34\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#34\uff1b\uff0c//\u6216&#34\uff1b[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]&#34\uff1b&#34\uff1b\u7535\u5b50\u90ae\u4ef6_\u9a8c\u8bc1&#34\uff1b\uff1a&#34\uff1btrue&#34\uff1b\uff0c&#34\uff1bauth_time&#34\uff1b\uff1a158XXXXXXX\uff0c&#34\uff1bNONCE_SUPPORTED&#34\uff1b\uff1atrue}\u3002\n\u6211\u53d1\u73b0\u6211\u53ef\u4ee5\u5411\u82f9\u679c\u8bf7\u6c42JWTs\u7684\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6ID\uff0c\u5f53\u4f7f\u7528\u82f9\u679c\u7684\u516c\u94a5\u9a8c\u8bc1\u8fd9\u4e9b\u4ee4\u724c\u7684\u7b7e\u540d\u65f6\uff0c\u5b83\u4eec\u663e\u793a\u4e3a\u6709\u6548\u3002\u8fd9\u610f\u5473\u7740\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6ID\u94fe\u63a5\u5230JWT\u5e76\u83b7\u5f97\u5bf9\u53d7\u5bb3\u8005\u5e10\u6237\u7684\u8bbf\u95ee\u6743\u9650\u6765\u4f2a\u9020JWT\u3002\n\u5728\u8fd9\u91cc\uff0c\u5f53\u4f20\u9012\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6\u65f6\uff0cApple\u4e3a\u8be5\u7279\u5b9a\u7535\u5b50\u90ae\u4ef6ID\u751f\u6210\u4e00\u4e2a\u6709\u6548\u7684JWT(Id_Token)\u3002\n{&#34\uff1b\u6388\u6743&#34\uff1b\uff1a{&#34\uff1bid_Token&#34\uff1b\uff1a&#34\uff1beyJraWQiOiJlWGF1bm1MIiwiYWxnIjoiUlMyNTYifQ.XXXXX.XXXXX&#34\uff1b\uff0c&#34\uff1b\u6388\u6743\u4ee3\u7801&#34\uff1b\uff1a&#34\uff1bXXX.0.nzr.XXXX&#34\uff1b\uff0c&#34\uff1b\u8303\u56f4&#34\uff1b\uff1a[&#34\uff1b\u540d\u79f0&#34\uff1b\uff0c&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34\uff1b]}\uff0c&#34\uff1b\u6388\u6743\u6570\u636e&#34\uff1b\uff1a{&#34\uff1buserid&#34\uff1b\uff1a&#34\uff1bXXX.XXXXX.XXXX&#34\uff1b}\uff0c&#34\uff1bconsentRequired&#34\uff1b\uff1afalse}\u3002\n\u6b64\u6f0f\u6d1e\u7684\u5f71\u54cd\u76f8\u5f53\u4e25\u91cd\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u5141\u8bb8\u5b8c\u5168\u63a5\u7ba1\u5e10\u6237\u3002\u5f88\u591a\u5f00\u53d1\u8005\u5df2\u7ecf\u96c6\u6210\u4e86\u82f9\u679c\u7684\u767b\u5f55\uff0c\u56e0\u4e3a\u652f\u6301\u5176\u4ed6\u793e\u4ea4\u767b\u5f55\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5f3a\u5236\u6027\u7684\u3002\u4e3e\u51e0\u4e2a\u4f7f\u7528\u82f9\u679cSign-in\u7684\u4f8b\u5b50-Dropbox\uff0cSpotify\uff0cAirbnb\uff0cGiphy(\u73b0\u5728\u88abFacebook\u6536\u8d2d)\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u4f46\u5982\u679c\u5728\u9a8c\u8bc1\u7528\u6237\u65f6\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u5b89\u5168\u63aa\u65bd\uff0c\u5219\u53ef\u80fd\u5bb9\u6613\u53d7\u5230\u5b8c\u5168\u5e10\u6237\u63a5\u7ba1\u7684\u653b\u51fb\u3002\n\u82f9\u679c\u8fd8\u5bf9\u4ed6\u4eec\u7684\u65e5\u5fd7\u8fdb\u884c\u4e86\u8c03\u67e5\uff0c\u786e\u5b9a\u6ca1\u6709\u56e0\u4e3a\u8fd9\u4e2a\u6f0f\u6d1e\u800c\u8bef\u7528\u6216\u6cc4\u9732\u8d26\u6237\u3002", "note_en": "What if I say, your Email ID is all I need to takeover your account on your favorite website or an app. Sounds scary, right? This is what a bug in  Sign in with Apple allowed me to do.\n In the month of April, I found a zero-day in  Sign in with Apple that affected third-party applications which were using it and didn\u2019t implement their own additional security measures. This bug could have resulted in a  full account takeover of user accounts on that third party application irrespective of a victim having a valid Apple ID or not.\n For this vulnerability, I was paid $100,000 by Apple under their Apple Security Bounty program.\n  The  Sign in with Apple works similarly to OAuth 2.0. There are two possible ways to authenticate a user by either using a  JWT (JSON Web Token) or a  code generated by the Apple server. The code is then used to generate a JWT. The below diagram represents how the JWT creation and validation works.\n  In the 2nd step, while authorizing, Apple gives an option to a user to either share the Apple Email ID with the 3rd party app or not. If the user decides to hide the Email ID, Apple generates its own user-specific Apple relay Email ID. Depending upon the user selection, after successful authorization, Apple creates a JWT which contains this Email ID which is then used by the 3rd party app to login a user.\n  {  &#34;iss&#34;:  &#34;https://appleid.apple.com&#34;,  &#34;aud&#34;:  &#34;com.XXXX.weblogin&#34;,  &#34;exp&#34;: 158XXXXXXX,  &#34;iat&#34;: 158XXXXXXX,  &#34;sub&#34;:  &#34;XXXX.XXXXX.XXXX&#34;,  &#34;c_hash&#34;:  &#34;FJXwx9EHQqXXXXXXXX&#34;,  &#34;email&#34;:  &#34; [email\u00a0protected]&#34;, // or  &#34; [email\u00a0protected]&#34;  &#34;email_verified&#34;:  &#34;true&#34;,  &#34;auth_time&#34;: 158XXXXXXX,  &#34;nonce_supported&#34;:  true }\n  I found I could request JWTs for any Email ID from Apple and when the signature of these tokens was verified using Apple\u2019s public key, they showed as valid. This means an attacker could forge a JWT by linking any Email ID to it and gaining access to the victim\u2019s account.\n   Here on passing any  email, Apple generated a valid JWT (id_token) for that particular Email ID.\n  {  &#34;authorization&#34; :  {  &#34;id_token&#34; :  &#34;eyJraWQiOiJlWGF1bm1MIiwiYWxnIjoiUlMyNTYifQ.XXXXX.XXXXX&#34;,  &#34;grant_code&#34; :  &#34;XXX.0.nzr.XXXX&#34;,  &#34;scope&#34; :  [  &#34;name&#34;,  &#34;email&#34;  ]  },  &#34;authorizedData&#34; :  {  &#34;userId&#34; :  &#34;XXX.XXXXX.XXXX&#34;  },  &#34;consentRequired&#34; :  false }\n The impact of this vulnerability was quite critical as it could have allowed full account takeover. A lot of developers have integrated  Sign in with Apple since it is mandatory for applications that support other social logins. To name a few that use  Sign in with Apple - Dropbox, Spotify, Airbnb, Giphy (Now acquired by Facebook). These applications were not tested but could have been vulnerable to a full account takeover if there weren\u2019t any other security measures in place while verifying a user.\n Apple also did an investigation of their logs and determined there was no misuse or account compromise due to this vulnerability.", "posttime": "2020-05-31 00:24:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,apple,\u82f9\u679c", "title": "\u4f7f\u7528Apple Zero Day\u767b\u5f55", "title_en": "Sign in with Apple Zero Day", "transed": 1, "url": "https://bhavukjain.com/blog/2020/05/30/zeroday-signin-with-apple/", "via": "", "real_tags": ["app", "apple", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004415, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bf7\u4e0d\u8981\u7406\u4f1a\u8fd9\u4e2a\u76d2\u5b50\u3002", "note_en": "Ignore this box please.", "posttime": "2020-05-31 00:08:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u6210,randomly,\u7406\u4f1a", "title": "DuckDuckGo\uff1a\u968f\u673a\u751f\u6210\u7684\u4eba", "title_en": "DuckDuckGo: Randomly Generated Person", "transed": 1, "url": "https://duckduckgo.com/?t=ffab&q=random+person+name+generator&ia=answer", "via": "", "real_tags": ["\u751f\u6210", "randomly", "\u7406\u4f1a"]}]