[{"category": "", "categoryclass": "", "imagename": "e4803f54cf48c9505ad91d4b21acf084.jpeg", "infoid": 1004191, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8def\u900f\u67cf\u67978\u670823\u65e5-\u5fb7\u56fd\u5916\u4ea4\u90e8\u5468\u56db\u53ec\u89c1\u4fc4\u7f57\u65af\u9a7b\u67cf\u6797\u5927\u4f7f\uff0c\u5c312015\u5e74\u5fb7\u56fd\u8bae\u4f1a\u4e0b\u9662\u906d\u9ed1\u5ba2\u653b\u51fb\u4e00\u4e8b\uff0c\u4ee5\u201c\u6700\u5f3a\u70c8\u7684\u63aa\u8f9e\u201d\u63d0\u51fa\u63a7\u8bc9\uff0c\u5e76\u8ba8\u8bba\u53ef\u80fd\u5bf9\u8d23\u4efb\u4eba\u5b9e\u65bd\u7684\u5236\u88c1\u3002\n\u4fc4\u7f57\u65af\u5426\u8ba4\u4e86\u6709\u5173\u5176\u519b\u4e8b\u60c5\u62a5\u662f\u6b64\u6b21\u7f51\u7edc\u653b\u51fb\u7684\u5e55\u540e\u9ed1\u624b\u7684\u6307\u63a7\uff0c\u6b64\u524d\u6709\u5a92\u4f53\u62a5\u9053\u79f0\uff0c\u6570\u636e\u88ab\u76d7\uff0c\u5176\u4e2d\u5305\u62ec\u6765\u81ea\u5fb7\u56fd\u603b\u7406\u5b89\u683c\u62c9\u00b7\u9ed8\u514b\u5c14(Angela Merkel)\u9009\u533a\u529e\u516c\u5ba4\u7684\u7535\u5b50\u90ae\u4ef6\u3002\n\u5fb7\u56fd\u5916\u4ea4\u90e8\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u56fd\u52a1\u79d8\u4e66\u7c73\u683c\u5c14\u00b7\u4f2f\u6770(Miguel Berger)\u544a\u8bc9\u5927\u4f7f\uff0c\u653f\u5e9c\u5c06\u547c\u5401\u5bf9\u6b64\u6b21\u653b\u51fb\u7684\u8d23\u4efb\u4eba\u63f4\u5f15\u6b27\u76df\u7684\u7f51\u7edc\u5236\u88c1\u673a\u5236\u3002\n\u6b27\u76df\u53bb\u5e74\u6279\u51c6\u4e86\u4e00\u9879\u5236\u5ea6\uff0c\u51bb\u7ed3\u9ed1\u5ba2\u5728\u6b27\u76df\u7684\u8d44\u4ea7\uff0c\u5e76\u7981\u6b62\u4ed6\u4eec\u8fdb\u5165\u3002\n5\u67085\u65e5\uff0c\u8054\u90a6\u68c0\u5bdf\u5b98\u5c31\u6b64\u6b21\u88ad\u51fb\u5bf9\u4fc4\u7f57\u65af\u56fd\u6c11\u5fb7\u7c73\u7279\u91cc\u00b7\u5df4\u4e01(Dmitry Badin)\u53d1\u51fa\u4e86\u902e\u6355\u4ee4\uff0c\u5fb7\u56fd\u5916\u4ea4\u90e8\u8868\u793a\uff0c\u6709\u53ef\u4fe1\u8bc1\u636e\u8868\u660e\uff0c\u88ad\u51fb\u53d1\u751f\u65f6\uff0c\u4ed6\u662fGRU\u519b\u4e8b\u60c5\u62a5\u90e8\u95e8\u7684\u4e00\u5458\u3002\n\u5916\u4ea4\u90e8\u8868\u793a\uff1a\u201c\u9488\u5bf9\u5df4\u4e01\u5148\u751f\u7684\u902e\u6355\u4ee4\u662f\u57fa\u4e8e\u5f3a\u70c8\u6000\u7591\u88ab\u544a\u4e0e\u5176\u4ed6\u8fc4\u4eca\u533f\u540d\u7684\u4eba\u5408\u8c0b\uff0c\u4ee3\u8868\u5916\u56fd\u7279\u52e4\u5c40\u5bf9\u5fb7\u56fd\u8fdb\u884c\u60c5\u62a5\u6d3b\u52a8\u7684\u57fa\u7840\u4e0a\u53d1\u51fa\u7684\u3002\u201d\n\u5728\u5468\u4e09\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u4fc4\u7f57\u65af\u9a7b\u67cf\u6797\u5927\u4f7f\u9986\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5fb7\u56fd\u5b98\u5458\u8fd8\u65e0\u6cd5\u63d0\u4f9b\u4e8b\u5b9e\u6765\u652f\u6301\u5bf9\u83ab\u65af\u79d1\u7684\u6307\u63a7\u3002\n\u5fb7\u56fd\u5916\u4ea4\u90e8\u8fd8\u8868\u793a\uff0c\u5176\u8bc4\u4f30\u53d7\u5230\u6b63\u5728\u8fdb\u884c\u7684\u8c03\u67e5\u7684\u5f71\u54cd\uff0c\u8c03\u67e5\u5bf9\u8c61\u662f\u4e00\u540d\u4fc4\u7f57\u65af\u88d4\u683c\u9c81\u5409\u4e9a\u7537\u5b50\uff0c\u8fd9\u540d\u524d\u8f66\u81e3\u53db\u519b\u53bb\u5e74\u590f\u5929\u5728\u67cf\u6797\u88ab\u8c0b\u6740\uff0c\u5bfc\u81f4\u5916\u4ea4\u9a71\u9010\u4e92\u6362\u3002\n\u201c\u653f\u5e9c.\u3002\u660e\u786e\u4fdd\u7559\u91c7\u53d6\u8fdb\u4e00\u6b65\u63aa\u65bd\u7684\u6743\u5229\u3002\u201c\u5916\u4ea4\u90e8\u8bf4\u3002", "note_en": "BERLIN (Reuters) - Germany\u2019s foreign ministry called in the Russian ambassador in Berlin on Thursday to complain \u201cin the strongest possible terms\u201d about a hack attack on the German lower house of parliament in 2015 and discuss possible sanctions against those responsible.\n Russia has rejected allegations that its military intelligence was behind the cyber attack after media reported that data had been stolen, including emails from Chancellor Angela Merkel\u2019s constituency office.\n State Secretary Miguel Berger told the ambassador that the government would call for the EU\u2019s cyber sanctions mechanism to be invoked against those responsible for the attack, said the German ministry in a statement.\n The EU last year approved a system to freeze hackers\u2019 assets in the bloc and banning them from entry.\n Federal prosecutors issued an arrest warrant on May 5 for Russian national Dmitry Badin over the attack and the German ministry said there was credible evidence that he was part of the GRU\u00a0military intelligence service at the time of the attack.\n \u201cThe arrest warrant against Mr\u00a0Badin was issued on the basis of the strong suspicion that the accused conspired with other hitherto anonymous persons to carry out intelligence activities against Germany on behalf of the secret service of a foreign power,\u201d said the ministry.\n In a statement on Wednesday, the Russian embassy in Berlin said German officials so far had not been able to present facts to underpin the accusations against Moscow.\n The German ministry also said its assessment was affected by an ongoing investigation into the murder of a Russian-Georgian man, a former Chechen rebel, in Berlin last summer which led to an exchange of diplomatic expulsions.\n \u201cThe government... expressly reserves the right to take further measures,\u201d said the foreign ministry.", "posttime": "2020-05-29 10:20:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ed1\u5ba2,calls,\u8868\u793a", "title": "\u5fb7\u56fd\u56e0\u9ed1\u5ba2\u88ad\u51fb\u53ec\u89c1\u4fc4\u7f57\u65af\u7279\u4f7f", "title_en": "Germany Calls In Russian Envoy Over Hack Attack", "transed": 1, "url": "https://www.reuters.com/article/us-germany-russia-idUSKBN2342F7", "via": "", "real_tags": ["\u9ed1\u5ba2", "calls", "\u8868\u793a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004189, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenSSL 3.0\u662f\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u7684OpenSSL\u7684\u4e0b\u4e00\u4e2a\u7248\u672c\u3002\u672c\u9875\u9762\u65e8\u5728\u4e3a\u4e0b\u8f7dalpha/beta\u7248\u672c\u6216\u8ba1\u5212\u4ece\u5148\u524d\u7248\u672c\u7684OpenSSL\u5347\u7ea7\u52303.0\u7684\u7528\u6237\u63d0\u4f9b\u5907\u6ce8\u96c6\u5408\u3002\nOpenSSL 3.0\u662f\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u56e0\u6b64\u5f53\u524d\u4f7f\u7528\u65e7\u7248\u672cOpenSSL\u7684\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u81f3\u5c11\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u624d\u80fd\u4f7f\u7528\u65b0\u7248\u672c\u3002\u5982\u679c\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u4ee5\u524d\u4f7f\u7528OpenSSL 1.1.1\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e0d\u4f1a\u4f7f\u7528OpenSSL 3.0\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5229\u7528OpenSSL 3.0\u4e2d\u63d0\u4f9b\u7684\u4e00\u4e9b\u65b0\u529f\u80fd(\u5982FIPS\u6a21\u5757\u7684\u53ef\u7528\u6027)\uff0c\u5219\u53ef\u80fd\u8fd8\u9700\u8981\u8fdb\u884c\u66f4\u6539\u3002\n\u5728\u4ee5\u524d\u7684\u7248\u672c\u4e2d\uff0cOpenSSL\u662f\u5728\u53cc\u91cdOpenSSL\u548cSSLeay\u8bb8\u53ef\u4e0b\u8bb8\u53ef\u7684(\u8fd9\u4e24\u4e2a\u8bb8\u53ef\u90fd\u9002\u7528)\u3002\u4eceOpenSSL 3.0\u5f00\u59cb\uff0c\u8fd9\u88abApache License v2\u6240\u53d6\u4ee3\u3002\nOpenSSL 1.1.1\u7684\u4e3b\u8981\u53d8\u5316\u4e4b\u4e00\u662f\u5f15\u5165\u4e86\u63d0\u4f9b\u8005\u6982\u5ff5\u3002\u63d0\u4f9b\u8005\u6536\u96c6\u5728\u4e00\u8d77\u5e76\u63d0\u4f9b\u53ef\u7528\u7684\u7b97\u6cd5\u5b9e\u73b0\u3002\u4f7f\u7528OpenSSL 3.0\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u6216\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6307\u5b9a\u8981\u4e3a\u4efb\u4f55\u7ed9\u5b9a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u54ea\u4e9b\u63d0\u4f9b\u7a0b\u5e8f\u3002OpenSSL 3.0\u6807\u914d\u4e864\u79cd\u4e0d\u540c\u7684\u63d0\u4f9b\u8005\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7b2c\u4e09\u65b9\u53ef\u80fd\u4f1a\u5206\u53d1\u53ef\u4ee5\u63d2\u5165OpenSSL\u7684\u5176\u4ed6\u63d0\u4f9b\u7a0b\u5e8f\u3002\u901a\u8fc7\u63d0\u4f9b\u7a0b\u5e8f\u63d0\u4f9b\u7684\u6240\u6709\u7b97\u6cd5\u5b9e\u73b0\u90fd\u53ef\u4ee5\u901a\u8fc7API\u96c6\u8fdb\u884c\u8bbf\u95ee\u3002\u5b83\u4eec\u4e0d\u80fd\u4f7f\u7528\u4f4e\u7ea7API\u8bbf\u95ee(\u89c1\u4e0b\u6587)\u3002\nOpenSSL\u8fc7\u53bb\u63d0\u4f9b\u4e86\u4e24\u7ec4\u7528\u4e8e\u8c03\u7528\u52a0\u5bc6\u7b97\u6cd5\u7684API\uff1aEVP\uff1bAPI\u548c\u4f4e\u7ea7API\u3002EVP API\u901a\u5e38\u8bbe\u8ba1\u4e3a\u8de8\u6240\u6709\u7b97\u6cd5\u7c7b\u578b\u5de5\u4f5c\u3002\u4f4e\u7ea7API\u9488\u5bf9\u7279\u5b9a\u7684\u7b97\u6cd5\u5b9e\u73b0\u3002\u4f8b\u5982\uff0cEVP\u63a5\u53e3\u63d0\u4f9b\u51fd\u6570`EVP_EncryptInit_ex`\u3001`EVP_EncryptUpdate`\u548c`EVP_EncryptFinal`\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u3002\u8fd9\u4e9b\u51fd\u6570\u53ef\u4ee5\u4e0e\u7b97\u6cd5AES\u3001ChaCha\u30013DES\u7b49\u4e00\u8d77\u4f7f\u7528\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8981\u4f7f\u7528\u4f4e\u7ea7API\u8fdb\u884cAES\u52a0\u5bc6\uff0c\u60a8\u5fc5\u987b\u8c03\u7528AES\u7279\u5b9a\u51fd\u6570\uff0c\u5982`AES_SET_ENCRYPT_KEY`\u3001`AES_ENCRYPT`\u7b49\u30023DES\u7684\u529f\u80fd\u4e0d\u540c\u3002\n\u957f\u671f\u4ee5\u6765\uff0cOpenSSL\u5f00\u53d1\u56e2\u961f\u4e00\u76f4\u975e\u6b63\u5f0f\u5730\u4e0d\u9f13\u52b1\u4f7f\u7528\u4f4e\u7ea7API\u3002\u7136\u800c\uff0c\u5728OpenSSL3.0\u4e2d\uff0c\u8fd9\u4e00\u70b9\u53d8\u5f97\u66f4\u52a0\u6b63\u5f0f\u3002\u6240\u6709\u8fd9\u6837\u7684\u4f4e\u7ea7API\u90fd\u5df2\u5f03\u7528\u3002\u60a8\u4ecd\u7136\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u4f46\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5f00\u59cb\u770b\u5230\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u8b66\u544a(\u8fd9\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u5bf9\u6b64\u7684\u652f\u6301)\u3002\u4e0d\u63a8\u8350\u4f7f\u7528\u7684API\u53ef\u80fd\u4f1a\u4eceOpenSSL\u7684\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664\uff0c\u56e0\u6b64\u5f3a\u70c8\u5efa\u8bae\u60a8\u66f4\u65b0\u4ee3\u7801\u4ee5\u4f7f\u7528EVP API\u3002\n\u4e00\u4e9b\u901a\u8fc7EVP API\u53ef\u7528\u7684\u52a0\u5bc6\u7b97\u6cd5\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u9057\u7559\u7684\uff0c\u5f3a\u70c8\u53cd\u5bf9\u4f7f\u7528\u5b83\u4eec\u3002\u8fd9\u4e9b\u9057\u7559\u7684EVP\u7b97\u6cd5\u5728OpenSSL 3.0\u4e2d\u4ecd\u7136\u53ef\u7528\uff0c\u4f46\u4e0d\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u3002\u5982\u679c\u8981\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u5fc5\u987b\u52a0\u8f7d\u65e7\u7248\u63d0\u4f9b\u7a0b\u5e8f\u3002\u8fd9\u53ef\u4ee5\u50cf\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u4e00\u6837\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u5b8c\u6210(\u89c1\u4e0b\u6587)\u3002\n\u652f\u6301\u63d0\u4f9b\u7a0b\u5e8f\u7684\u91cd\u6784\u4e0e\u7528\u4e8e\u652f\u6301\u5f15\u64ce\u7684API\u53d1\u751f\u5185\u90e8\u51b2\u7a81\uff0c\u5305\u62ec\u5f15\u64ceAPI\u548c\u521b\u5efa\u6216\u4fee\u6539\u81ea\u5b9a\u4e49\u65b9\u6cd5\u7684\u4efb\u4f55\u51fd\u6570(\u4f8b\u5982\uff0cEVP_MD_METH_NEW\u3001EVP_CIPHER_METH_NEW\u3001EVP_PKEY_METH_NEW\u3001RSA_METH_NEW\u3001EC_KEY_METHOD_NEW\u7b49)\u3002\u8fd9\u4e9b\u51fd\u6570\u5728OpenSSL 3.0\u4e2d\u5df2\u5f03\u7528\uff0c\u8fd9\u4e9bAPI\u7684\u7528\u6237\u5e94\u8be5\u77e5\u9053\uff0c\u4f7f\u7528\u5b83\u4eec\u53ef\u80fd\u4f1a\u7ed5\u8fc7\u63d0\u4f9b\u5546\u9009\u62e9\u548c\u914d\u7f6e\uff0c\u4ece\u800c\u5e26\u6765\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\u3002\u8fd9\u4e0e\u7f16\u5199\u4e3a\u4f7f\u7528OpenSSL 3.0 FIPS\u6a21\u5757\u7684\u5e94\u7528\u7a0b\u5e8f\u7279\u522b\u76f8\u5173\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\u5f3a\u70c8\u9f13\u52b1\u5916\u90e8\u5f15\u64ce\u7684\u521b\u5efa\u8005\u548c\u7ef4\u62a4\u8005\u91cd\u6784\u4ee3\u7801\uff0c\u4f7f\u7528\u65b0\u7684\u63d0\u4f9b\u8005API\u5c06\u5f15\u64ce\u8f6c\u6362\u4e3a\u63d0\u4f9b\u8005\uff0c\u5e76\u907f\u514d\u4f7f\u7528\u8fc7\u65f6\u7684\u65b9\u6cd5\u3002\nOpenSSL\u7248\u672c\u63a7\u5236\u65b9\u6848\u57283.0\u7248\u4e2d\u6709\u6240\u66f4\u6539\u3002\u65b0\u7684\u7248\u672c\u5316\u65b9\u6848\u5177\u6709\u4ee5\u4e0b\u683c\u5f0f\uff1a\n\u5bf9\u4e8e\u7248\u672c1.1.1\u53ca\u66f4\u4f4e\u7248\u672c\uff0c\u4e0d\u540c\u7684\u4fee\u8865\u7a0b\u5e8f\u7ea7\u522b\u7531\u53d1\u5e03\u7248\u672c\u53f7\u672b\u5c3e\u7684\u5b57\u6bcd\u8868\u793a\u3002\u8fd9\u5c06\u4e0d\u518d\u4f7f\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u8865\u4e01\u7ea7\u522b\u7531\u7248\u672c\u4e2d\u7684\u6700\u7ec8\u6570\u5b57\u6307\u793a\u3002\u7b2c\u4e8c\u4e2a(\u6b21\u8981)\u6570\u5b57\u7684\u66f4\u6539\u8868\u793a\u53ef\u80fd\u6dfb\u52a0\u4e86\u65b0\u529f\u80fd\u3002\u5177\u6709\u76f8\u540c\u4e3b\u7f16\u53f7\u7684OpenSSL\u7248\u672c\u4e0eAPI\u548cABI\u517c\u5bb9\u3002\u5982\u679c\u4e3b\u673a\u53f7\u66f4\u6539\uff0c\u5219\u4e0d\u80fd\u4fdd\u8bc1API\u548cABI\u517c\u5bb9\u6027\u3002\n\u8bc1\u4e66\u7ba1\u7406\u534f\u8bae(CMP\uff0cRFC 4210)\u7684\u5b9e\u65bd\u8fd8\u5305\u62ecCRMF(RFC 4211)\u548cHTTP\u4f20\u8f93(RFC 6712)\u3002\nlibcrypto\u4e2d\u6b63\u786e\u7684HTTP(S)\u5ba2\u6237\u7aef\uff0c\u652f\u6301GET\u548cPOST\u3001\u91cd\u5b9a\u5411\u3001\u7eaf\u6587\u672c\u548cASN.1\u7f16\u7801\u7684\u5185\u5bb9\u3001\u4ee3\u7406\u548c\u8d85\u65f6\u3002\nOpenSSL\u9519\u8bef\u4ee3\u7801\u7684\u529f\u80fd\u4ee3\u7801\u90e8\u5206\u4e0d\u518d\u76f8\u5173\uff0c\u59cb\u7ec8\u8bbe\u7f6e\u4e3a\u96f6\u3002\u76f8\u5173\u51fd\u6570\u5df2\u5f03\u7528\u3002\n\u5806\u6808\u548c\u6563\u5217\u5b8f\u5df2\u88ab\u6e05\u9664\uff0c\u56e0\u6b64\u7c7b\u578b\u5b89\u5168\u5305\u88c5\u5668\u5728\u4efb\u4f55\u5730\u65b9\u58f0\u660e\u4e00\u6b21\u5373\u53ef\u5b9e\u73b0\u3002\u6709\u5173\u5806\u6808\uff0c\u8bf7\u53c2\u9605https://www.openssl.org/docs/manmaster/man3/DEFINE_STACK_OF.html\u7684\u624b\u518c\u9875\uff0c\u5e0c\u671b\u4e00\u65e6PR\u5408\u5e76\uff0c\u5f88\u5feb\u5c31\u4f1a\u6709https://www.openssl.org/docs/manmaster/man3/DECLARE_LHASH_OF.html(\u4f46\u5728\u64b0\u5199\u672c\u6587\u65f6\u8fd8\u6ca1\u6709)\u3002\n\u6709\u5173\u5982\u4f55\u6784\u5efa\u548c\u5b89\u88c5OpenSSL 3.0\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u53d1\u884c\u7248\u9876\u90e8\u7684INSTALL.md\u6587\u4ef6\u3002\u8fd8\u8bf7\u53c2\u9605\u9002\u7528\u4e8e\u60a8\u7684\u7279\u5b9a\u5e73\u53f0\u7684\u5404\u79cd\u5e73\u53f0\u7279\u5b9a\u8bf4\u660e\u6587\u4ef6\u3002\n\u6ce8\u610f\uff1aOpenSSL 3.0 Alpha 1\u7248\u672c\u5305\u542b\u4e00\u4e2a\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u5f15\u5165\u7684\u9519\u8bef\uff0c\u8be5\u9519\u8bef\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\u53ef\u4f9b\u9009\u62e9\uff1a\n\u7f16\u8f91\u5206\u53d1\u9876\u90e8\u7684\u7248\u672c\u6587\u4ef6\u4ee5\u5220\u9664RELEASE_DATE\u884c\u4e0a\u65e5\u671f\u5468\u56f4\u7684\u5f15\u53f7\uff0c\u5373\u4f7f\u8be5\u884c\u5982\u4e0b\u6240\u793a\uff1a\n\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4eceOpenSSL 1.1.1\u5347\u7ea7\u5230OpenSSL 3.0\u5e94\u8be5\u76f8\u5bf9\u7b80\u5355\u3002\u5982\u679c\u60a8\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u4f4e\u7ea7API(\u5982\u4e0a\u6240\u8ff0)\uff0c\u5219\u6700\u6709\u53ef\u80fd\u4f1a\u9047\u5230\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5f88\u53ef\u80fd\u5728\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u65f6\u5f00\u59cb\u770b\u5230\u5f03\u7528\u8b66\u544a\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u67093\u4e2a\u9009\u62e9\uff1a\n1)\u5ffd\u7565\u8b66\u544a\u3002\u5b83\u4eec\u53ea\u662f\u8b66\u544a\u800c\u5df2\u3002\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u51fd\u6570\u4ecd\u7136\u5b58\u5728\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u662f\uff0c\u8bf7\u6ce8\u610f\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u4eceOpenSSL\u7684\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664\u3002\n3)\u79fb\u9664\u60a8\u4f7f\u7528\u7684\u5e95\u5c42\u63a5\u53e3\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u91cd\u5199\u4ee3\u7801\u4ee5\u6539\u7528EVP API\u3002\n\u4eceOpenSSL 1.0.2\u5347\u7ea7\u5230OpenSSL 3.0\u53ef\u80fd\u8981\u56f0\u96be\u5f97\u591a\u3002\u9664\u4e86\u4e0a\u9762\u5173\u4e8e\u4ece1.1.1\u5347\u7ea7\u4e00\u8282\u4e2d\u8ba8\u8bba\u7684\u95ee\u9898\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u4e3b\u8981\u4e8b\u9879\u5305\u62ec\uff1a\n1)\u4eceOpenSSL 1.0.2\u5f00\u59cb\uff0c\u6784\u5efa\u548c\u5b89\u88c5\u8fc7\u7a0b\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\u3002\u6709\u5173\u5982\u4f55\u4e3a\u60a8\u7684\u5e73\u53f0\u6784\u5efa\u548c\u5b89\u88c5OpenSSL\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u5b89\u88c5\u9876\u90e8\u7684\u6587\u4ef6INSTALL.md\u3002\u5982\u679c\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\uff0c\u8fd8\u8981\u7b7e\u51fa\u540c\u4e00\u76ee\u5f55\u4e2d\u7684\u5404\u79cd\u6ce8\u91ca\u6587\u4ef6\u3002\n2)\u5728OpenSSL 3.0\u4e2d\uff0c\u5f88\u591a\u7ed3\u6784\u90fd\u662f\u4e0d\u900f\u660e\u7684\u3002\u7ed3\u6784\u5b9a\u4e49\u5df2\u4ece\u516c\u5171\u5934\u6587\u4ef6\u4e2d\u5220\u9664\uff0c\u5e76\u79fb\u81f3\u5185\u90e8\u5934\u6587\u4ef6\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u518d\u5806\u6808\u5206\u914d\u67d0\u4e9b\u7ed3\u6784\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u5fc5\u987b\u662f\u901a\u8fc7\u67d0\u4e2a\u51fd\u6570\u8c03\u7528\u5206\u914d\u7684\u5806(\u901a\u5e38\u8fd9\u4e9b\u51fd\u6570\u540d\u6709`_new`\u540e\u7f00)\u3002\u6b64\u5916\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528&#34\uff1bsetter&34\uff1b\u6216&#34\uff1bgetter&#34\uff1b\u51fd\u6570\u6765\u8bbf\u95ee\u8fd9\u4e9b\u7ed3\u6784\u4e2d\u7684\u5b57\u6bb5\u3002\nEVP_MD_CTX*MD_CTX\uff1bMD_CTX=EVP_MD_CTX_NEW()\uff1bIF(MD_CTX==NULL)/*\u9519\u8bef*/\uff1b/*\u4f7f\u7528MD_CTX*/EVP_MD_CTX_FREE(MD_CTX)\uff1b\n3)\u6dfb\u52a0\u4e86\u5bf9TLSv1.3\u7684\u652f\u6301\uff0c\u8fd9\u5bf9SSL/TLS\u5e94\u7528\u7a0b\u5e8f\u6709\u5f88\u591a\u5f71\u54cd\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605TLS1.3\u9875\u9762\u3002\n\u6709\u5173OpenSSL\u7248\u672c1.0.2\u548c1.1.0\u4e4b\u95f4\u91cd\u5927\u66f4\u6539\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605OpenSSL 1.1.0\u66f4\u6539\u9875\u9762\u3002\nOpenSSL2.0FIPS\u5bf9\u8c61\u6a21\u5757\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u4e0b\u8f7d\uff0c\u5fc5\u987b\u5355\u72ec\u6784\u5efa\uff0c\u7136\u540e\u96c6\u6210\u5230\u4e3bOpenSSL 1.0.2\u6784\u5efa\u4e2d\u3002\u5728OpenSSL 3.0\u4e2d\uff0cFIPS\u652f\u6301\u5b8c\u5168\u96c6\u6210\u5230OpenSSL\u7684\u4e3b\u7ebf\u7248\u672c\u4e2d\uff0c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u4e0b\u8f7d\u3002\u60a8\u4e0d\u9700\u8981\u91c7\u53d6\u5355\u72ec\u7684\u6784\u5efa\u6b65\u9aa4\u6765\u6dfb\u52a0FIPS\u652f\u6301-\u5b83\u662f\u9ed8\u8ba4\u6784\u5efa\u7684\u3002\u60a8\u786e\u5b9e\u9700\u8981\u91c7\u53d6\u63aa\u65bd\u6765\u786e\u4fdd\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u662fOpenSSL 3.0\u4e2d\u7684FIPS\u6a21\u5757\u3002\u6709\u5173\u6b64\u914d\u7f6e\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u8bf4\u660e\u3002\n\u51fd\u6570\u8c03\u7528&#39\uff1bfips_mode()&#39\uff1b\u548c&#39\uff1bfips_mode_set()&#39\uff1b\u5df2\u4eceOpenSSL 3.0\u4e2d\u5220\u9664\u3002\u60a8\u5e94\u8be5\u91cd\u5199\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee5\u4e0d\u4f7f\u7528\u5b83\u4eec\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u5173\u4e8e\u5982\u4f55\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u4ee5\u4f7f\u7528OpenSSL 3.0\u4e2d\u7684FIPS\u6a21\u5757\u7684\u90e8\u5206\u3002\n\u4e00\u65e6\u6784\u5efa\u5e76\u5b89\u88c5\u4e86OpenSSL\uff0c\u60a8\u5c06\u9700\u8981\u91c7\u53d6\u660e\u786e\u7684\u6b65\u9aa4\u6765\u5b8c\u6210FIPS\u6a21\u5757\u7684\u5b89\u88c5(\u5982\u679c\u60a8\u5e0c\u671b\u4f7f\u7528\u5b83)\u3002OpenSSL 3.0 FIPS\u652f\u6301\u662f\u4ee5FIPS\u63d0\u4f9b\u7a0b\u5e8f\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\uff0c\u5728Unix\u4e0a\uff0c\u8be5\u63d0\u4f9b\u7a0b\u5e8f\u4f4d\u4e8e\u4e00\u4e2a`fips.so`\u6587\u4ef6\u4e2d\u3002\u5728Windows\u4e0a\uff0c\u8fd9\u5c06\u79f0\u4e3a`fips.dll`\u3002\u5b89\u88c5OpenSSL 3.0\u540e\uff0c\u6b64\u6587\u4ef6\u7684\u9ed8\u8ba4\u4f4d\u7f6e\u5728Unix\u4e0a\u4e3a&#39\uff1b/usr/local/lib/ossl-module/fips.so&#39\uff1b\uff0c\u5728Windows\u4e0a\u4e3a&#39\uff1bC\uff1a\\Program Files\\openssl\\lib\\ossl-module\\fips.dll&#39\uff1b\u3002\n\u8981\u5b8c\u6210\u5b89\u88c5\uff0c\u60a8\u9700\u8981\u8fd0\u884cfipsinstall\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\n\u751f\u6210FIPS\u6a21\u5757\u914d\u7f6e\u6587\u4ef6\u8f93\u51fa\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u5982\u81ea\u68c0\u72b6\u6001\u548c\u6a21\u5757\u6821\u9a8c\u548c\u3002\nFIPS\u6a21\u5757\u5fc5\u987b\u8fd0\u884c\u81ea\u68c0\uff0c\u5e76\u5728\u8981\u4f7f\u7528FIPS\u6a21\u5757\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u751f\u6210FIPS\u6a21\u5757\u914d\u7f6e\u6587\u4ef6\u8f93\u51fa\u3002\u60a8\u4e0d\u5f97\u5c06FIPS\u6a21\u5757\u914d\u7f6e\u6587\u4ef6\u8f93\u51fa\u6570\u636e\u4ece\u4e00\u53f0\u8ba1\u7b97\u673a\u590d\u5236\u5230\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u3002\n$openssl fipsinstall-out/usr/local/ssl/fipsmode.cnf-module/usr/local/lib/ossl-module/fips.so-Provider_name fips-mac_name hmac-macopt\u6458\u8981\uff1aSHA256-macopt hekey\uff1a00-Section_name fips_sect\u3002\n\u5982\u679c\u5c06OpenSSL\u5b89\u88c5\u5230\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u5219\u9700\u8981\u76f8\u5e94\u5730\u8c03\u6574\u8f93\u51fa\u548c\u6a21\u5757\u8def\u5f84\u3002\n\u4f7f\u7528OpenSSL 1.1.1\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u5927\u591a\u53ea\u80fd\u4f7f\u7528OpenSSL 3.0\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8981\u5229\u7528OpenSSL 3.0\u63d0\u4f9b\u7684\u4e00\u4e9b\u65b0\u529f\u80fd\uff0c\u5219\u9700\u8981\u8fdb\u884c\u66f4\u6539\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u4e86\u89e3OpenSSL 3.0\u4e2d\u5f15\u5165\u7684\u4e00\u4e9b\u65b0\u6982\u5ff5\u3002\n\u53ef\u4ee5\u5c06\u5e93\u4e0a\u4e0b\u6587\u89c6\u4e3aOpenSSL\u64cd\u4f5c\u7684\u4f5c\u7528\u57df\u3002\u6240\u6709\u529f\u80fd\u90fd\u5728\u5e93\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\u5185\u8fd0\u884c\u3002\u591a\u4e2a\u5e93\u4e0a\u4e0b\u6587\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5e93\u4e0a\u4e0b\u6587\u53ef\u4ee5\u8fdb\u884c\u4e0d\u540c\u7684\u914d\u7f6e\u3002\u5e93\u4e0a\u4e0b\u6587\u7531\u65b0\u5f15\u5165\u7684openssl_ctx\u7c7b\u578b\u8868\u793a\u3002\u8bf7\u53c2\u9605\u6b64\u5904\u7684\u624b\u518c\u9875\u3002\nOpenSSL\u4e2d\u5f15\u5165\u4e86\u8bb8\u591a\u63a5\u53d7OPENSSL_CTX\u53c2\u6570\u7684\u65b0\u51fd\u6570\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u51fd\u6570\u662f1.1.1\u4e2d\u5b58\u5728\u7684\u4e00\u4e9b\u5176\u4ed6\u51fd\u6570\u7684\u53d8\u4f53\uff0c\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u5927\u81f4\u76f8\u540c-\u53ea\u662f\u5b83\u4eec\u73b0\u5728\u5728\u7ed9\u5b9a\u5e93\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\u5185\u64cd\u4f5c\u3002\n\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u3002\u6b64\u5e93\u4e0a\u4e0b\u6587\u59cb\u7ec8\u5b58\u5728\uff0c\u5982\u679c\u60a8\u672a\u4ee5\u5176\u4ed6\u65b9\u5f0f\u6307\u5b9a\uff0c\u5219\u8fd9\u662f\u5c06\u4f7f\u7528\u7684\u5e93\u4e0a\u4e0b\u6587\u3002\u4efb\u4f55\u63a5\u53d7OPENSSL_CTX\u503c\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u90fd\u5c06\u63a5\u53d7\u8be5\u53c2\u6570\u7684\u503cNULL\uff0c\u4ee5\u4fbf\u5f15\u7528\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7openssl_ctx_new()\u51fd\u6570\u663e\u5f0f\u521b\u5efa\u65b0\u6587\u4ef6\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u624b\u518c\u9875\u3002\n\u914d\u7f6e\u6587\u4ef6\u5f71\u54cd\u7ed9\u5b9a\u5e93\u4e0a\u4e0b\u6587\u3002\u5f88\u53ef\u80fd\u6b63\u5728\u4f7f\u7528\u591a\u4e2a\u5e93\u4e0a\u4e0b\u6587\uff0c\u6bcf\u4e2a\u5e93\u4e0a\u4e0b\u6587\u90fd\u914d\u7f6e\u4e86\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6(\u8bf7\u53c2\u89c1\u624b\u518c\u9875\u4e0a\u63cf\u8ff0\u7684openssl_ctx_load_config()\u51fd\u6570)\u3002\n\u63d0\u4f9b\u7a0b\u5e8f\u662f\u7b97\u6cd5\u5b9e\u73b0\u7684\u5bb9\u5668\u3002\u6bcf\u5f53\u901a\u8fc7EVP API\u4f7f\u7528\u52a0\u5bc6\u7b97\u6cd5\u65f6\uff0c\u90fd\u4f1a\u9009\u62e9\u63d0\u4f9b\u8005\u3002\u5b9e\u9645\u4e0a\uff0c\u6b63\u662f\u63d0\u4f9b\u7a0b\u5e8f\u5b9e\u73b0\u5b8c\u6210\u4e86\u6240\u9700\u5de5\u4f5c\u3002\u6709\u56db\u4e2a\u63d0\u4f9b\u7a0b\u5e8f\u968fOpenSSL\u4e00\u8d77\u5206\u53d1\u3002\u5728\u672a\u6765\uff0c\u6211\u4eec\u5e0c\u671b\u7b2c\u4e09\u65b9\u5206\u53d1\u4ed6\u4eec\u81ea\u5df1\u7684\u63d0\u4f9b\u8005\uff0c\u8fd9\u4e9b\u63d0\u4f9b\u8005\u53ef\u4ee5\u52a8\u6001\u5730\u6dfb\u52a0\u5230OpenSSL\u4e2d\u3002\u5728\u8fd9\u91cc\u7684\u624b\u518c\u9875\u4e0a\u53ef\u4ee5\u627e\u5230\u6709\u5173\u7f16\u5199\u63d0\u4f9b\u7a0b\u5e8f\u7684\u6587\u6863\u3002\n\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\u3002\u5b83\u6536\u96c6\u4e86\u6240\u6709\u6807\u51c6\u7684\u5185\u7f6eOpenSSL\u7b97\u6cd5\u5b9e\u73b0\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9(\u4f8b\u5982\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6216\u901a\u8fc7\u914d\u7f6e)\uff0c\u5219\u8fd9\u662f\u5c06\u4f7f\u7528\u7684\u63d0\u4f9b\u7a0b\u5e8f\u3002\u5982\u679c\u8fd8\u6ca1\u6709\u52a0\u8f7d\u5176\u4ed6\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u4ece\u63d0\u4f9b\u7a0b\u5e8f\u83b7\u53d6\u7b97\u6cd5\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u52a0\u8f7d\u3002\u5982\u679c\u5df2\u7ecf\u52a0\u8f7d\u4e86\u53e6\u4e00\u4e2a\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u52a0\u8f7d\u8be5\u63d0\u4f9b\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u5176\u4e0e\u5176\u4ed6\u63d0\u4f9b\u7a0b\u5e8f\u7ed3\u5408\u4f7f\u7528\uff0c\u5219\u5fc5\u987b\u663e\u5f0f\u52a0\u8f7d\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u5185\u7f6e\u7684\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5185\u7f6e\u4e8elibcrypto\u4e2d\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5355\u72ec\u7684\u6a21\u5757\u5b58\u5728\u3002\n\u4f20\u7edf\u63d0\u4f9b\u7a0b\u5e8f\u3002\u8fd9\u662f\u4e0d\u518d\u5e38\u7528\u6216\u5f3a\u70c8\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u7684\u9057\u7559\u7b97\u6cd5\u7684\u96c6\u5408\u3002\u4f46\u662f\uff0c\u51fa\u4e8e\u5411\u540e\u517c\u5bb9\u6027\u7684\u539f\u56e0\uff0c\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u52a0\u8f7d\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\uff0c\u67d0\u4e9b\u4ece\u65e9\u671f\u7248\u672c\u7684OpenSSL\u5347\u7ea7\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u53d1\u73b0\u67d0\u4e9b\u7b97\u6cd5\u4e0d\u518d\u53ef\u7528\uff0c\u9664\u975e\u5b83\u4eec\u663e\u5f0f\u52a0\u8f7d\u65e7\u7248\u63d0\u4f9b\u7a0b\u5e8f\u3002\u4f20\u7edf\u63d0\u4f9b\u8005\u4e2d\u7684\u7b97\u6cd5\u5305\u62ecMD2\u3001MD4\u3001MDC2\u3001RMD160\u3001CAST5\u3001BF(Blowfish)\u3001IDEA\u3001SEED\u3001RC2\u3001RC4\u3001RC5\u548cDES(\u4f46\u4e0d\u5305\u62ec3DES)\u3002\nFIPS\u63d0\u4f9b\u5546\u3002\u5b83\u5305\u542b\u53ef\u4ece\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\u83b7\u5f97\u7684\u7b97\u6cd5\u5b9e\u73b0\u7684\u5b50\u96c6\u3002\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u63d0\u4f9b\u7684\u7b97\u6cd5\u7b26\u5408FIPS\u6807\u51c6\u3002\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u5c06\u901a\u8fc7FIPS140-2\u9a8c\u8bc1\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0e\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u7684\u7b49\u6548\u7b97\u6cd5\u76f8\u6bd4\uff0c\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u7684\u7b97\u6cd5\u5b9e\u73b0\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7ec6\u5fae\u7684\u884c\u4e3a\u5dee\u5f02\u3002\u8fd9\u901a\u5e38\u662f\u4e3a\u4e86\u7b26\u5408FIPS\u6807\u51c6\u3002\n\u7a7a\u63d0\u4f9b\u7a0b\u5e8f\u3002\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u662flibcrypto\u7684\u5185\u7f6e\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u4e0d\u5305\u542b\u7b97\u6cd5\u5b9e\u73b0\u3002\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u81ea\u52a8\u52a0\u8f7d\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6539\u4e3a\u52a0\u8f7d\u7a7a\u63d0\u4f9b\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u975e\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\uff0c\u5e76\u4e14\u5e0c\u671b\u786e\u4fdd\u4e0d\u4f1a\u610f\u5916\u4f7f\u7528\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\uff0c\u8fd9\u4f1a\u5f88\u6709\u7528\u3002\n\u53ef\u4ee5\u5728OpenSSL\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u8981\u52a0\u8f7d\u7684\u63d0\u4f9b\u7a0b\u5e8f\u3002\u6709\u5173\u5982\u4f55\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u63d0\u4f9b\u7a0b\u5e8f\u4ee5\u53ca\u5982\u4f55\u81ea\u52a8\u6fc0\u6d3b\u5b83\u4eec\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64\u5904\u7684\u624b\u518c\u9875\u3002\u8fd9\u662f\u5728\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u4e2d\u52a0\u8f7d\u548c\u6fc0\u6d3b\u4f20\u7edf\u63d0\u4f9b\u7a0b\u5e8f\u548c\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\u7684\u6700\u5c0f\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\u3002\nopenssl_conf=openssl_init[openssl_init]Providers=Provider_sect[Provider_sect]\u9ed8\u8ba4=default_sect\u9057\u7559=Legacy_sect[default_sect]activate=1\u3002\n\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u52a0\u8f7d\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06\u9057\u7559\u63d0\u4f9b\u7a0b\u5e8f\u52a0\u8f7d\u5230\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u4e00\u65e6\u5c06\u63d0\u4f9b\u7a0b\u5e8f\u663e\u5f0f\u52a0\u8f7d\u5230\u5e93\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5c06\u4e0d\u518d\u81ea\u52a8\u52a0\u8f7d\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u60a8\u901a\u5e38\u8fd8\u5e0c\u671b\u663e\u5f0f\u52a0\u8f7d\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n#include&lt\uff1bstdio.h&gt\uff1b#include&lt\uff1bstdlib.h&gt\uff1b#include&lt\uff1bopenssl/provider.h&gt\uff1bint main(Void){OSSL_Provider*Legacy\uff1bOSSL_Provider*Deflt\uff1b/*\u5c06\u591a\u4e2a\u63d0\u4f9b\u7a0b\u5e8f\u52a0\u8f7d\u5230\u9ed8\u8ba4(\u7a7a)\u5e93\u4e0a\u4e0b\u6587*/Legacy=OSSL_PROVIDER_LOAD(NULL\uff0c&#34\uff1bLegacy&34\uff1b)\uff1b\u5982\u679c(Legacy=NULL){printf(&\u3002}deflt=OSSL_PROVIDER_LOAD(NULL\uff0c&#34\uff1bDEFAULT&#34\uff1b)\uff1bIF(DEFLT==NULL){printf(&#34\uff1b\u65e0\u6cd5\u52a0\u8f7d\u9ed8\u8ba4\u63d0\u4f9b\u7a0b\u5e8f\\n&#34\uff1b)\uff1bOSSL_PROVIDER_UNLOAD(\u65e7\u7248)\uff1bEXIT(EXIT_FAILURE)\uff1b}/*\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206*/OSSL_PROVIDER_UNLOAD(\u65e7\u7248)\uff1bOSSL_PROVIDER_UNLOAD(DEFLT)\uff1bEXIT(EXIT_SUCCESS)\uff1b}\n\u4e3a\u4e86\u4f7f\u7528\u52a0\u5bc6\u7b97\u6cd5(\u5982AES)\uff0c\u5fc5\u987b\u9996\u5148\u4ece\u5df2\u52a0\u8f7d\u5230\u6b63\u5728\u4f7f\u7528\u7684\u5e93\u4e0a\u4e0b\u6587\u4e2d\u7684\u53ef\u7528\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u8be5\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u8fd9\u53ef\u4ee5\u9690\u5f0f\u6216\u663e\u5f0f\u5b8c\u6210\u3002\n\u4f7f\u7528\u9690\u5f0f\u83b7\u53d6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u7279\u6b8a\u64cd\u4f5c\u3002\u7b97\u6cd5\u5b9e\u73b0\u5c06\u7531\u76f8\u5173API\u81ea\u52a8\u83b7\u53d6\u3002\u4f8b\u5982\uff1a\nEVP_MD_CTX*mdctx\uff1bmdctx=EVP_MD_CTX_NEW()\uff1bIF(mdctx==NULL)\u8f6c\u5230\u9519\u8bef\uff1bIF(EVP_DigestInit_EX(mdctx\uff0cEVP_sha256()\uff0cNULL)\uff01=1)\u8f6c\u5230\u9519\u8bef\uff1b\n\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u521d\u59cb\u5316\u6458\u8981\u64cd\u4f5c\u4ee5\u4f7f\u7528SHA256\u7b97\u6cd5\u3002evp_DigestInit_ex()\u51fd\u6570\u5c06\u5728\u9700\u8981\u65f6\u81ea\u52a8\u4ece\u53ef\u7528\u7684\u63d0\u4f9b\u7a0b\u5e8f\u83b7\u53d6SHA256\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u5b83\u5c06\u4f7f\u7528\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u548c\u9ed8\u8ba4\u5c5e\u6027\u67e5\u8be2\u5b57\u7b26\u4e32(\u89c1\u4e0b\u6587)\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002\n\u901a\u8fc7\u663e\u5f0f\u83b7\u53d6\uff0c\u5e94\u7528\u7a0b\u5e8f\u83b7\u53d6\u8981\u9884\u5148\u4f7f\u7528\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u5c06\u5176\u4f20\u9012\u7ed9\u76f8\u5173\u7684EVP API\u3002\u4f8b\u5982\uff1a\nEVP_MD_CTX*mdctx\uff1bEVP_MD*sha256\uff1bmdctx=EVP_MD_CTX_NEW()\uff1bIF(mdctx==NULL)GOTO ERR\uff1b/**\u6b64\u5904\u5c06\u5e93CTX\u8bbe\u7f6e\u4e3aNULL\u4f1a\u5c06\u7b97\u6cd5\u4ece*\u52a0\u8f7d\u5230\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u4e2d\u7684\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u63d0\u53d6*/sha256=EVP_MD_FETCH(NULL\uff0c&#34\uff1bSHA2-256&#34\uff1b\uff0cNULL)\uff1bIF(sha256=NULL)*/sha256=EVP_MD_FETCH(NULL\uff0c&#34\uff1bSHA2-256&#34\uff1b\uff0cNULL)\uff1bIF(sha256=NULL)\u3002/*\u663e\u5f0f\u62c9\u53d6\u8fd4\u56de\u5fc5\u987b\u91ca\u653e\u7684\u52a8\u6001\u5bf9\u8c61*/EVP_MD_FREE(Sha256)\uff1b\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u4ece\u52a0\u8f7d\u5230\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00\u7ec4\u53ef\u7528\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u4e86SHA256\u7684\u5b9e\u73b0\u3002\n\u4f7f\u7528\u663e\u5f0fFETCH\uff0c\u6211\u4eec\u53ef\u4ee5\u53e6\u5916\u63d0\u4f9b\u4e00\u4e2a\u5c5e\u6027\u67e5\u8be2\uff0c\u4ee5\u8fdb\u4e00\u6b65\u6307\u5b9a\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\u5b9e\u73b0\u3002\u4f8b\u5982\uff1a\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u663e\u5f0f\u83b7\u53d6SHA256\u7b97\u6cd5\u7684FIPS\u9a8c\u8bc1\u5b9e\u73b0\u3002\u8fd9\u6837\u7684\u5b9e\u73b0\u5b58\u5728\u4e8eFIPS\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5c06FIPS\u63d0\u4f9b\u7a0b\u5e8f\u52a0\u8f7d\u5230\u9ed8\u8ba4\u5e93\u4e0a\u4e0b\u6587\u4e2d\u624d\u80fd\u6210\u529f\u3002\u5982\u679c\u627e\u4e0d\u5230\u4e0e\u6761\u4ef6\u5339\u914d\u7684\u7b97\u6cd5\u5b9e\u73b0\uff0c\u5219\u83b7\u53d6\u5c06\u5931\u8d25\u3002\n\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u63d0\u4f9b\u7a0b\u5e8f\u624b\u518c\u9875\u4e2d\u5173\u4e8e\u83b7\u53d6\u7b97\u6cd5\u7684\u90e8\u5206\uff1a[1]\u3002\n\u5982\u679c\u4e0d\u9700\u8981\u7279\u5b9a\u7684\u5c5e\u6027\u67e5\u8be2\uff0c\u5219\u53ef\u4ee5\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f20\u9012NULL\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u7684\u4efb\u4f55\u7279\u6027\u67e5\u8be2\u90fd\u4f1a\u4e0e\u9ed8\u8ba4\u7279\u6027\u67e5\u8be2\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u5982\u679c\u672a\u6307\u5b9a\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\uff0c\u5219\u9ed8\u8ba4\u7279\u6027\u67e5\u8be2\u4e3a\u7a7a\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u5bf9\u6b64\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u63d0\u53d6\u90fd\u81ea\u52a8\u7ee7\u627f\u8fd9\u4e9b\u9ed8\u8ba4\u5c5e\u6027\u3002\u9ed8\u8ba4\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u8bbe\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e\u3002\u6709\u5173\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u4e0e\u5176\u4ed6\u63d0\u4f9b\u7a0b\u5e8f\u540c\u65f6\u52a0\u8f7dFIPS\u6a21\u5757\u4e00\u8282\u3002\n\u8bf7\u6ce8\u610f\uff0c\u9ed8\u8ba4\u5c5e\u6027\u5f53\u524d\u5728OpenSSL 3.0 Alpha 1\u6216Alpha 2\u7248\u672c\u4e2d\u4e0d\u8d77\u4f5c\u7528\u3002\nOpenSSL\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u4e0eFIPS\u6a21\u5757\u7ed3\u5408\u4f7f\u7528\u3002\u54ea\u79cd\u65b9\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u5c06\u53d6\u51b3\u4e8e\u4f60\u81ea\u5df1\u7684\u5177\u4f53\u60c5\u51b5\u548c\u4f60\u8bd5\u56fe\u5b9e\u73b0\u7684\u76ee\u6807\u3002\u8bf7\u6ce8\u610f\uff0c\u65e7\u51fd\u6570fips_mode()\u548cfips_mode_set()\u4e0d\u518d\u5b58\u5728\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u5fc5\u987b\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5220\u9664\u5b83\u4eec\u3002\n\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u6240\u6709\u4f7f\u7528OpenSSL\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ec5\u5c06FIPS\u6a21\u5757\u7528\u4e8e\u52a0\u5bc6\u7b97\u6cd5\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u5b9e\u73b0\u3002\u53ea\u8981\u5e94\u7528\u7a0b\u5e8f\u662f\u6839\u636eOpenSSL 3.0\u6784\u5efa\u548c\u94fe\u63a5\u7684\uff0c\u5e76\u4e14\u4e0d\u8986\u76d6\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u6216\u5176\u8bbe\u7f6e\u7684\u52a0\u8f7d\uff0c\u5219\u5b83\u4eec\u5c06\u81ea\u52a8\u5f00\u59cb\u4f7f\u7528FIPS\u6a21\u5757\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u66f4\u6539\u4efb\u4f55\u4ee3\u7801\u3002\n\u4e3a\u6b64\uff0c\u5fc5\u987b\u4fee\u6539\u9ed8\u8ba4\u7684OpenSSL\u914d\u7f6e\u6587\u4ef6\u3002\u6b64\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u5c06\u53d6\u51b3\u4e8e\u5e73\u53f0\u4ee5\u53ca\u6784\u5efa\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u7684\u4efb\u4f55\u9009\u9879\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a\n\u6ce8\u610f\uff1a\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u5b89\u88c5OpenSSL\u3002\u6ca1\u6709Correc\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u9519\u8bef\u3002\n..", "note_en": "OpenSSL 3.0 is the next release of OpenSSL that is currently in development. This page is intended as a collection of notes for people downloading the alpha/beta releases or who are planning to upgrade from a previous version of OpenSSL to 3.0.\n    OpenSSL 3.0 is a major release and consequently any application that currently uses an older version of OpenSSL will at the very least need to be recompiled in order to work with the new version. It is the intention that the large majority of applications will work unchanged with OpenSSL 3.0 if those applications previously worked with OpenSSL 1.1.1. However this is not guaranteed and some changes may be required in some cases. Changes may also be required if applications need to take advantage of some of the new features available in OpenSSL 3.0 such as the availability of the FIPS module.\n  In previous versions, OpenSSL was licensed under the dual  OpenSSL and SSLeay licenses (both licenses apply). From OpenSSL 3.0 this is replaced by the  Apache License v2.\n  One of the key changes from OpenSSL 1.1.1 is the introduction of the Provider concept. Providers collect together and make available algorithm implementations. With OpenSSL 3.0 it is possible to specify, either programmatically or via a config file, which providers you want to use for any given application. OpenSSL 3.0 comes with 4 different providers as standard. Over time third parties may distribute additional providers that can be plugged into OpenSSL. All algorithm implementations available via providers are accessed through the &#34;EVP&#34; set of APIs. They cannot be accessed using the &#34;low level&#34; APIs (see below).\n  OpenSSL has historically provided two sets of APIs for invoking cryptographic algorithms: the &#34;EVP&#34; APIs and the &#34;low level&#34; APIs. The EVP APIs are typically designed to work across all algorithm types. The &#34;low level&#34; APIs are targeted at a specific algorithm implementation. For example, the EVP APIs provide the functions `EVP_EncryptInit_ex`, `EVP_EncryptUpdate` and `EVP_EncryptFinal` to perform symmetric encryption. Those functions can be used with the algorithms AES, CHACHA, 3DES etc. On the other hand to do AES encryption using the low level APIs you would have to call AES specific functions such as `AES_set_encrypt_key`, `AES_encrypt`, and so on. The functions for 3DES are different.\n Use of the low level APIs has been informally discouraged by the OpenSSL development team for a long time. However in OpenSSL 3.0 this is made more formal. All such low level APIs have been deprecated. You may still  use them in your applications, but you may start to see deprecation warnings during compilation (dependent on compiler support for this). Deprecated APIs may be removed from future versions of OpenSSL so you are strongly encouraged to update your code to use the EVP APIs instead.\n  Some cryptographic algorithms that were available via the EVP APIs are now considered legacy and their use is strongly discouraged. These legacy EVP algorithms are still available in OpenSSL 3.0 but not by default. If you want to use them then you must load the legacy provider. This can be as simple as a config file change, or can be done programmatically (see below).\n  The refactoring to support Providers conflicts internally with the APIs used to support engines, including the ENGINE API and any function that creates or modifies custom &#34;METHODS&#34; (for example EVP_MD_meth_new, EVP_CIPHER_meth_new, EVP_PKEY_meth_new, RSA_meth_new, EC_KEY_METHOD_new, etc.). These functions are being deprecated in OpenSSL 3.0, and users of these APIs should know that their use can likely bypass provider selection and configuration, with unintended consequences. This is particularly relevant for applications written to use the OpenSSL 3.0 FIPS module, as detailed below.Authors and maintainers of external engines are strongly encouraged to refactor their code transforming engines into providers using the new Provider API and avoiding deprecated methods.\n  The OpenSSL versioning scheme has changed with the 3.0 release. The new versioning scheme has this format:\n  For version 1.1.1 and below different patch levels were indicated by a letter at the end of the release version number. This will no longer be used and instead the patch level is indicated by the final number in the version. A change in the second (MINOR) number indicates that new features may have been added. OpenSSL versions with the same major number are API and ABI compatible. If the major number changes then API and ABI compatibility is not guaranteed.\n  Implementation of the Certificate Management Protocol (CMP,  RFC 4210) also covering CRMF ( RFC 4211) and HTTP transfer ( RFC 6712)\n A proper HTTP(S) client in libcrypto supporting GET and POST, redirection, plain and ASN.1-encoded contents, proxies, and timeouts\n  The function code part of an OpenSSL error code is no longer relevant and is always set to zero. Related functions are deprecated.\n The STACK and HASH macro&#39;s have been cleaned up, so that the type-safe wrappers are declared everywhere and implemented once. See the manpage at  https://www.openssl.org/docs/manmaster/man3/DEFINE_STACK_OF.html for stack, and hopefully soon once the PR is merged,  https://www.openssl.org/docs/manmaster/man3/DECLARE_LHASH_OF.html (but not yet as of this writing).\n  Please refer to the INSTALL.md file in the top of the distribution for instructions on how to build and install OpenSSL 3.0. Please also refer to the various platform specific NOTES files for your specific platform.\n NOTE: The OpenSSL 3.0 alpha 1 release contains an error introduced during the release process which results in a failed compilation. There are two workarounds to choose between:\n edit the VERSION file in the top of the distribution to remove the quotes around the date on the RELEASE_DATE line, i.e. make that line look like this:\n   Upgrading to OpenSSL 3.0 from OpenSSL 1.1.1 should be relatively straight forward in most cases. The most likely area where you will encounter problems is if you have used low level APIs in your code (as discussed above). In that case you are likely to start seeing deprecation warnings when compiling your application. If this happens you have 3 options:\n 1) Ignore the warnings. They are just warnings. The deprecated functions are still present and you may still use them. However be aware that they may be removed from a future version of OpenSSL.\n  3) Remove your usage of the low level APIs. In this case you will need to rewrite your code to use the EVP APIs instead.\n   Upgrading to OpenSSL 3.0 from OpenSSL 1.0.2 is likely to be significantly more difficult. In addition to the issues discussed above in the section about upgrading from 1.1.1, the main things to be aware of are:\n 1) The build and installation procedure has changed significantly since OpenSSL 1.0.2. Check the file INSTALL.md in the top of the installation for instructions on how to build and install OpenSSL for your platform. Also checkout the various NOTES files in the same directory, as applicable for your platform.\n 2) Many structures have been made opaque in OpenSSL 3.0. The structure definitions have been removed from the public header files and moved to internal header files. In practice this means that you can no longer stack allocate some structures. Instead they must be heap allocated through some function call (typically those function names have a `_new` suffix to them). Additionally you must use &#34;setter&#34; or &#34;getter&#34; functions to access the fields within those structures.\n      EVP_MD_CTX *md_ctx;md_ctx = EVP_MD_CTX_new();if (md_ctx == NULL) /* Error */;/* Do something with the md_ctx */EVP_MD_CTX_free(md_ctx);\n 3) Support for TLSv1.3 has been added which has a number of implications for SSL/TLS applications. See the  TLS1.3 page for further details.\n More details about the breaking changes between OpenSSL versions 1.0.2 and 1.1.0 can be found on the  OpenSSL 1.1.0 Changes page.\n  The OpenSSL 2.0 FIPS Object Module was a separate download that had to be built separately and then integrated into your main OpenSSL 1.0.2 build. In OpenSSL 3.0 the FIPS support is fully integrated into the mainline version of OpenSSL and is no longer a separate download. You do not need to take separate build steps to add the FIPS support - it is built by default. You  do need to take steps to ensure that your application is  using the FIPS module in OpenSSL 3.0. See the further notes below on configuring this.\n The function calls &#39;FIPS_mode()&#39; and &#39;FIPS_mode_set()&#39; have been removed from OpenSSL 3.0. You should rewrite your application to not use them. See the sections below on how to write applications to use the FIPS Module in OpenSSL 3.0.\n  Once OpenSSL has been built and installed you will need to take explicit steps to complete the installation of the FIPS module (if you wish to use it). The OpenSSL 3.0 FIPS support is in the form of the FIPS provider which, on Unix, is in a `fips.so` file. On Windows this will be called `fips.dll`. Following installation of OpenSSL 3.0 the default location for this file is &#39;/usr/local/lib/ossl-modules/fips.so&#39; on Unix or &#39;C:\\Program Files\\OpenSSL\\lib\\ossl-modules\\fips.dll&#39; on Windows.\n To complete the installation you need to run the &#39;fipsinstall&#39; command line application. This does 2 things:\n Generates FIPS module config file output containing information about the module such as the self test status, and the module checksum\n The FIPS module  must have the self tests run, and the FIPS module config file output generated on  every machine that it is to be used on. You  must not copy the FIPS module config file output data from one machine to another.\n  $ openssl fipsinstall -out /usr/local/ssl/fipsmodule.cnf -module /usr/local/lib/ossl-modules/fips.so -provider_name fips -mac_name HMAC -macopt digest:SHA256 -macopt hexkey:00 -section_name fips_sect\n If you installed OpenSSL to a different location, you need to adjust the output and module path accordingly.\n  Applications written to work with OpenSSL 1.1.1 will mostly just work with OpenSSL 3.0. However changes will be required if you want to take advantage of some of the new features that OpenSSL 3.0 makes available. In order to do that you need to understand some new concepts introduced in OpenSSL 3.0.\n  A library context can be thought of as a &#34;scope&#34; for OpenSSL operations. All functionality operates with the scope of a library context. Multiple library contexts may exist at the same time, and they each may be configured differently. A library context is represented by the newly introduced OPENSSL_CTX type. See the man page  here.\n Many new functions have been introduced into OpenSSL that take an OPENSSL_CTX parameter. In many cases these are variants of some other function that existed in 1.1.1 and work in much the same way - except that they now operate within the scope of the given library context.\n All applications have available to them the &#34;default library context&#34;. This library context always exists and, if you don&#39;t otherwise specify one, this is the library context that will be used. Any function that takes an OPENSSL_CTX value as a parameter will accept the value NULL for that parameter in order to refer to the default library context. You can also explicitly create new ones via the OPENSSL_CTX_new() function. See the man page for further details.\n Config files affect a given library context. It is quite possible to have multiple library contexts in use, with each one having been configured with a different config file (see the OPENSSL_CTX_load_config() function described on the man page).\n  Providers are containers for algorithm implementations. Whenever a cryptographic algorithm is used via the EVP APIs a provider is selected. It is that provider implementation that actually does the required work. There are four providers distributed with OpenSSL. In the future we expect third parties to distribute their own providers which can be added to OpenSSL dynamically. Documentation about writing providers is available on the man page  here.\n  The default provider. This collects together all of the standard built-in OpenSSL algorithm implementations. If an application doesn&#39;t specify anything else explicitly (e.g. in the application or via config), then this is the provider that will be used. It is loaded automatically the first time that we try to get an algorithm from a provider if no other provider has been loaded yet. If another provider has already been loaded then it won&#39;t be loaded automatically. Therefore if you want to use it in conjunction with other providers then you must load it explicitly. This is a &#34;built-in&#34; provider which means that it is built into libcrypto and does not exist as a separate standalone module.\n The legacy provider. This is a collection of legacy algorithms that are either no longer in common use or strongly discouraged from use. However some applications may need to use these algorithms for backwards compatibility reasons. This provider is NOT loaded by default. This may mean that some applications upgrading from earlier versions of OpenSSL may find that some algorithms are no longer available unless they load the legacy provider explicitly. Algorithms in the legacy provider include MD2, MD4, MDC2, RMD160, CAST5, BF (Blowfish), IDEA, SEED, RC2, RC4, RC5 and DES (but not 3DES).\n The FIPS provider. This contains a sub-set of the algorithm implementations available from the default provider. Algorithms available in this provider conform to FIPS standards. It is intended that this provider will be FIPS140-2 validated. In some cases there may be minor behavioural differences between algorithm implementations in this provider compared to the equivalent algorithm in the default provider. This is typically in order to conform to FIPS standards.\n The null provider. This provider is &#34;built-in&#34; to libcrypto and contains no algorithm implementations. In order to guarantee that the default provider is not automatically loaded, the null provider can be loaded instead. This can be useful if you are using non-default library contexts and want to ensure that the default library context is never used &#34;by accident&#34;.\n Providers to be loaded can be specified in the OpenSSL config file. See the man page  herefor information about how to configure providers via the config file, and how to automatically activate them.This is a minimal config file example to load and activate both the legacy and the default provider in the default library context.\n openssl_conf = openssl_init [openssl_init] providers = provider_sect [provider_sect] default = default_sect legacy = legacy_sect [default_sect] activate = 1 [legacy_sect] activate = 1\n It is also possible to load them programmatically. For example you can load the legacy provider into the default library context as shown below. Note that once you have explicitly loaded a provider into the library context the default provider will no longer be automatically loaded. Therefore you will often also want to explicitly load the default provider, as is done here:\n #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;openssl/provider.h&gt; int main(void) { OSSL_PROVIDER *legacy; OSSL_PROVIDER *deflt; /* Load Multiple providers into the default (NULL) library context */ legacy = OSSL_PROVIDER_load(NULL, &#34;legacy&#34;); if (legacy == NULL) { printf(&#34;Failed to load Legacy provider\\n&#34;); exit(EXIT_FAILURE); } deflt = OSSL_PROVIDER_load(NULL, &#34;default&#34;); if (deflt == NULL) { printf(&#34;Failed to load Default provider\\n&#34;); OSSL_PROVIDER_unload(legacy); exit(EXIT_FAILURE); } /* Rest of application */ OSSL_PROVIDER_unload(legacy); OSSL_PROVIDER_unload(deflt); exit(EXIT_SUCCESS); }\n  In order to use a cryptographic algorithm (such as AES) then an implementation for it must first be &#34;fetched&#34; from the available providers that have been loaded into the library context being used. This can be done either implicitly or explicitly.\n With implicit fetching the application does not need to do anything special. Algorithms implementations will be fetched automatically by the relevant APIs. For example:\n EVP_MD_CTX *mdctx; mdctx = EVP_MD_CTX_new(); if (mdctx == NULL) goto err; if (EVP_DigestInit_ex(mdctx, EVP_sha256(), NULL)\u00a0!= 1) goto err;\n In this code we are initialising a digest operation to use the SHA256 algorithm. The EVP_DigestInit_ex() function will automatically fetch an implementation of the SHA256 algorithm from the available providers when it needs to. It will do so using the default library context and the default property query string (see below).\n With explicit fetching an application fetches the implementation to be used up front, and then passes that to the relevant EVP API. For example:\n EVP_MD_CTX *mdctx; EVP_MD *sha256; mdctx = EVP_MD_CTX_new(); if (mdctx == NULL) goto err; /* * Setting the library ctx to NULL here fetches the algorithm from the providers loaded * into the default library context */ sha256 = EVP_MD_fetch(NULL, &#34;SHA2-256&#34;, NULL); if (sha256 == NULL) goto err; if (EVP_DigestInit_ex(mdctx, sha256, NULL)\u00a0!= 1) goto err; /* Explicit fetches return a dynamic object that must be freed */ EVP_MD_free(sha256);\n In this example we have explicitly fetched an implementation of SHA256 from the set of available providers loaded into the default library context.\n With an explicit fetch we can additionally supply a property query to further specify which implementation we wish to obtain. For example:\n  Here we are explicitly fetching a FIPS validated implementation of the SHA256 algorithm. Such an implementation exists in the FIPS provider, so we would need to have ensured that the FIPS provider was loaded into the default library context in order for this to be successful. If no algorithm implementation that matches the criteria can be located then the fetch will fail.\n See the section on fetching algorithms in the provider man page for further details:  [1].\n If no specific property query is required then NULL can be passed for the last argument. In any case any supplied property query is combined with the default property query. If nothing else is specified then the default property query is empty. However this can be changed so that every fetch automatically inherits these default properties. Default properties can either be set programmatically or via a config file. See the section  Loading the FIPS module at the same time as other providers for an example of how to do this.\n Note that default properties are not currently functional in the OpenSSL 3.0 alpha 1 or alpha 2 releases.\n  There are a number of different ways that OpenSSL can be used in conjunction with the FIPS module. Which is the correct approach to use will depend on your own specific circumstances and what you are attempting to achieve. Note that the old functions FIPS_mode() and FIPS_mode_set() are no longer present so you must remove them from your application if you use them.\n  One simple approach is to cause all applications that are using OpenSSL to only use the FIPS module for cryptographic algorithms by default.\n This approach can be done purely via configuration. As long as applications are built and linked against OpenSSL 3.0 and do not override the loading of the default config file or its settings then they will automatically start using the FIPS module without the need for any further code changes.\n To do this the default OpenSSL config file will have to be modified. The location of this config file will depend on the platform, and any options that were given during the build process. You can check the location of the config file by running this command:\n  Caution: Many Operating Systems install OpenSSL by default. It is a common error to not have the correc\n......", "posttime": "2020-05-29 10:03:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "openssl", "title": "OpenSSL 3.0", "title_en": "OpenSSL 3.0", "transed": 1, "url": "https://wiki.openssl.org/index.php/OpenSSL_3.0", "via": "", "real_tags": ["openssl"]}, {"category": "", "categoryclass": "", "imagename": "5d7b448d74f5680ab8739edcd3634074.png", "infoid": 1004187, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u7684\u5de5\u4f5c\u663e\u793a\uff0c\u901a\u8fc7\u5728\u5927\u91cf\u6587\u672c\u8bed\u6599\u5e93\u4e0a\u8fdb\u884c\u9884\u5148\u57f9\u8bad\uff0c\u7136\u540e\u5bf9\u7279\u5b9a\u4efb\u52a1\u8fdb\u884c\u5fae\u8c03\uff0c\u5728\u8bb8\u591aNLP\u4efb\u52a1\u548c\u57fa\u51c6\u65b9\u9762\u53d6\u5f97\u4e86\u5b9e\u8d28\u6027\u8fdb\u5c55\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5728\u4f53\u7cfb\u7ed3\u6784\u4e0a\u901a\u5e38\u4e0e\u4efb\u52a1\u65e0\u5173\uff0c\u4f46\u5b83\u4ecd\u7136\u9700\u8981\u6570\u5343\u6216\u6570\u4e07\u4e2a\u793a\u4f8b\u7684\u7279\u5b9a\u4e8e\u4efb\u52a1\u7684\u5fae\u8c03\u6570\u636e\u96c6\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4eba\u7c7b\u901a\u5e38\u53ea\u9700\u51e0\u4e2a\u4f8b\u5b50\u6216\u7b80\u5355\u7684\u6307\u4ee4\u5c31\u80fd\u5b8c\u6210\u4e00\u9879\u65b0\u7684\u8bed\u8a00\u4efb\u52a1-\u8fd9\u662f\u76ee\u524d\u7684NLP\u7cfb\u7edf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4ecd\u7136\u96be\u4ee5\u505a\u5230\u7684\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u6269\u5c55\u8bed\u8a00\u6a21\u578b\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u3001\u4e0d\u592a\u53ef\u80fd\u5b9e\u73b0\u7684\u6027\u80fd\uff0c\u6709\u65f6\u751a\u81f3\u8fbe\u5230\u4e86\u4e0e\u4ee5\u524d\u6700\u5148\u8fdb\u7684\u5fae\u8c03\u65b9\u6cd5\u7684\u7ade\u4e89\u529b\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86GPT-3\uff0c\u4e00\u4e2a\u67091750\u4ebf\u4e2a\u53c2\u6570\u7684\u81ea\u56de\u5f52\u8bed\u8a00\u6a21\u578b\uff0c\u6bd4\u4ee5\u524d\u7684\u4efb\u4f55\u975e\u7a00\u758f\u8bed\u8a00\u6a21\u578b\u90fd\u591a\u4e8610\u500d\uff0c\u5e76\u6d4b\u8bd5\u4e86\u5b83\u5728\u5c11\u955c\u5934\u73af\u5883\u4e0b\u7684\u6027\u80fd\u3002\u5bf9\u4e8e\u6240\u6709\u4efb\u52a1\uff0cGPT-3\u5728\u6ca1\u6709\u4efb\u4f55\u6e10\u53d8\u66f4\u65b0\u6216\u5fae\u8c03\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\uff0c\u4efb\u52a1\u548c\u5c11\u91cf\u6f14\u793a\u5b8c\u5168\u901a\u8fc7\u4e0e\u6a21\u578b\u7684\u6587\u672c\u4ea4\u4e92\u6307\u5b9a\u3002GPT-3\u5728\u8bb8\u591aNLP\u6570\u636e\u96c6\u4e0a\u90fd\u53d6\u5f97\u4e86\u5f88\u597d\u7684\u6027\u80fd\uff0c\u5305\u62ec\u7ffb\u8bd1\u3001\u95ee\u7b54\u548c\u5b8c\u5f62\u586b\u7a7a\u4efb\u52a1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u9700\u8981\u5373\u65f6\u63a8\u7406\u6216\u9886\u57df\u8c03\u6574\u7684\u4efb\u52a1\uff0c\u5982\u89e3\u4e71\u5355\u8bcd\u3001\u5728\u53e5\u5b50\u4e2d\u4f7f\u7528\u65b0\u8bcd\u6216\u6267\u884c3\u4f4d\u6570\u7b97\u672f\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u786e\u5b9a\u4e86GPT-3\u5728\u5c11\u6570\u60c5\u51b5\u4e0b\u5b66\u4e60\u4ecd\u7136\u56f0\u96be\u7684\u4e00\u4e9b\u6570\u636e\u96c6\uff0c\u4ee5\u53caGPT-3\u5728\u5927\u578b\u7f51\u7edc\u8bed\u6599\u5e93\u4e0a\u9762\u4e34\u7684\u65b9\u6cd5\u8bba\u95ee\u9898\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0GPT-3\u53ef\u4ee5\u751f\u6210\u4eba\u7c7b\u8bc4\u4ef7\u8005\u96be\u4ee5\u533a\u5206\u7684\u65b0\u95fb\u6587\u7ae0\u6837\u672c\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u8fd9\u4e00\u53d1\u73b0\u548cGPT-3\u603b\u4f53\u4e0a\u7684\u66f4\u5e7f\u6cdb\u7684\u793e\u4f1a\u5f71\u54cd\u3002\n175b_samples.jsonl-\u6765\u81eaGPT-3(p=.85\uff0ct=1)\u7684\u65e0\u6761\u4ef6\u3001\u672a\u8fc7\u6ee4\u76842048\u4e2a\u4ee4\u724c\u6837\u672c\u3002\u5185\u5bb9\u8b66\u544a\uff1aGPT-3\u6839\u636e\u6765\u81eaWeb\u7684\u4efb\u610f\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u56e0\u6b64\u53ef\u80fd\u5305\u542b\u653b\u51fb\u6027\u5185\u5bb9\u548c\u8bed\u8a00\u3002\noveroverfrequency.md-13\u514b\u7684\u6837\u672c\u5728\u6211\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u548c\u57fa\u51c6\u4e4b\u95f4\u91cd\u53e0\uff0c\u7531\u8bad\u7ec3\u96c6\u4e2d\u7684\u9891\u7387\u9009\u62e9\u3002\n@\u6587\u7ae0{brown2020language\uff0ctitle={\u8bed\u8a00\u6a21\u578b\u662f\u5c11\u6570\u5b66\u4e60\u8005}\uff0c\u4f5c\u8005={Tom B.Brown\u548cBenjamin Mann\uff0cNick Ryder\uff0cMelanie Subbiah\uff0cJared Kaplan\uff0cPrafulla Dhariwal\uff0cArvind Neelakantan\uff0cPranav Shyam\uff0cGirish Sastry\uff0cAmanda Askell\u548cSandhini Agarwal\uff0cAriel Herbert-Voss\uff0cGretchen Krueger\u548cTom Henighan\u3002ArchivePrefix={arxiv}\uff0cprimary Class={cs.CL}}", "note_en": "Recent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training on a large corpus of text followed by fine-tuning on a specific task. While typically task-agnostic in architecture, this method still requires task-specific fine-tuning datasets of thousands or tens of thousands of examples. By contrast, humans can generally perform a new language task from only a few examples or from simple instructions \u2013 something which current NLP systems still largely struggle to do. Here we show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks, as well as several tasks that require on-the-fly reasoning or domain adaptation, such as unscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same time, we also identify some datasets where GPT-3&#39;s few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora. Finally, we find that GPT-3 can generate samples of news articles which human evaluators have difficulty distinguishing from articles written by humans. We discuss broader societal impacts of this finding and of GPT-3 in general.\n  175b_samples.jsonl - Unconditional, unfiltered 2048 token samples from GPT-3 with p=.85, t=1.\u3000 CONTENT WARNING: GPT-3 was trained on arbitrary data from the web, so may contain offensive content and language.\n  overlap_frequency.md - Samples of 13-gram overlaps between our training data and benchmarks, selected by frequency in the training set.\n  @article{brown2020language, title={Language Models are Few-Shot Learners}, author={Tom B. Brown and Benjamin Mann and Nick Ryder and Melanie Subbiah and Jared Kaplan and Prafulla Dhariwal and Arvind Neelakantan and Pranav Shyam and Girish Sastry and Amanda Askell and Sandhini Agarwal and Ariel Herbert-Voss and Gretchen Krueger and Tom Henighan and Rewon Child and Aditya Ramesh and Daniel M. Ziegler and Jeffrey Wu and Clemens Winter and Christopher Hesse and Mark Chen and Eric Sigler and Mateusz Litwin and Scott Gray and Benjamin Chess and Jack Clark and Christopher Berner and Sam McCandlish and Alec Radford and Ilya Sutskever and Dario Amodei}, year={2020}, eprint={2005.14165}, archivePrefix={arXiv}, primaryClass={cs.CL}}", "posttime": "2020-05-29 10:02:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bed\u8a00,language,\u4efb\u52a1", "title": "GPT-3\uff1a\u8bed\u8a00\u6a21\u578b\u662f\u5c11\u6709\u7684\u5b66\u4e60\u8005", "title_en": "GPT-3: Language Models Are Few-Shot Learners", "transed": 1, "url": "https://github.com/openai/gpt-3", "via": "", "real_tags": ["\u8bed\u8a00", "language", "\u4efb\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004186, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u6700\u8fd1\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u901a\u8fc7\u5728\u5927\u91cf\u6587\u672c\u8bed\u6599\u5e93\u4e0a\u8fdb\u884c\u9884\u57f9\u8bad\uff0c\u7136\u540e\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\u8fdb\u884c\u5fae\u8c03\uff0c\u5728\u8bb8\u591aNLP\u4efb\u52a1\u548c\u57fa\u51c6\u65b9\u9762\u90fd\u53d6\u5f97\u4e86\u5b9e\u8d28\u6027\u8fdb\u5c55\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5728\u4f53\u7cfb\u7ed3\u6784\u4e0a\u901a\u5e38\u4e0e\u4efb\u52a1\u65e0\u5173\uff0c\u4f46\u5b83\u4ecd\u7136\u9700\u8981\u6570\u5343\u6216\u6570\u4e07\u4e2a\u793a\u4f8b\u7684\u7279\u5b9a\u4e8e\u4efb\u52a1\u7684\u5fae\u8c03\u6570\u636e\u96c6\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4eba\u7c7b\u901a\u5e38\u53ea\u9700\u51e0\u4e2a\u4f8b\u5b50\u6216\u7b80\u5355\u7684\u6307\u4ee4\u5c31\u80fd\u5b8c\u6210\u4e00\u9879\u65b0\u7684\u8bed\u8a00\u4efb\u52a1--\u8fd9\u662f\u76ee\u524d\u7684NLP\u7cfb\u7edf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4ecd\u7136\u96be\u4ee5\u505a\u5230\u7684\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u6269\u5c55\u4e0a\u884c\u8bed\u8a00\u6a21\u578b\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u3001\u6781\u5c11\u7684\u6027\u80fd\uff0c\u6709\u65f6\u751a\u81f3\u8fbe\u5230\u4e86\u4e0e\u5148\u524d\u6700\u5148\u8fdb\u7684\u5fae\u8c03\u65b9\u6cd5\u7684\u7ade\u4e89\u529b\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86GPT-3\uff0c\u4e00\u4e2a\u67091750\u4ebf\u4e2a\u53c2\u6570\u7684\u81ea\u56de\u5f52\u8bed\u8a00\u6a21\u578b\uff0c\u6bd4\u4ee5\u524d\u7684\u4efb\u4f55\u975e\u7a00\u758f\u8bed\u8a00\u6a21\u578b\u90fd\u591a\u4e8610\u500d\uff0c\u5e76\u6d4b\u8bd5\u4e86\u5b83\u5728\u5c11\u5c04\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\u3002\u5bf9\u4e8e\u6240\u6709\u4efb\u52a1\uff0cGPT-3\u5728\u6ca1\u6709\u4efb\u4f55\u68af\u5ea6\u66f4\u65b0\u6216\u5fae\u8c03\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\uff0c\u4efb\u52a1\u548c\u5c11\u91cf\u6f14\u793a\u5b8c\u5168\u901a\u8fc7\u4e0e\u6a21\u578b\u7684\u6587\u672c\u4ea4\u4e92\u6307\u5b9a\u3002GPT-3\u5728\u8bb8\u591aNLP\u6570\u636e\u96c6\u4e0a\u90fd\u53d6\u5f97\u4e86\u5f88\u597d\u7684\u6027\u80fd\uff0c\u5305\u62ec\u7ffb\u8bd1\u3001\u95ee\u7b54\u548c\u5b8c\u5f62\u586b\u7a7a\u4efb\u52a1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u9700\u8981\u5373\u65f6\u63a8\u7406\u6216\u9886\u57df\u8c03\u6574\u7684\u4efb\u52a1\uff0c\u5982\u89e3\u4e71\u5355\u8bcd\u3001\u5728\u53e5\u5b50\u4e2d\u4f7f\u7528\u65b0\u8bcd\u6216\u6267\u884c3\u4f4d\u6570\u7b97\u672f\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u786e\u5b9a\u4e86\u4e00\u4e9bGPT-3\u7684\u5c11\u673a\u4f1a\u5b66\u4e60\u4ecd\u7136\u56f0\u96be\u7684\u6570\u636e\u96c6\uff0c\u4ee5\u53caGPT-3\u5728\u5927\u578b\u7f51\u7edc\u8bed\u6599\u5e93\u4e0a\u9762\u4e34\u7684\u65b9\u6cd5\u8bba\u95ee\u9898\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0GPT-3\u53ef\u4ee5\u751f\u6210\u4eba\u7c7b\u8bc4\u4ef7\u8005\u96be\u4ee5\u533a\u5206\u7684\u65b0\u95fb\u6587\u7ae0\u6837\u672c\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u8fd9\u4e00\u53d1\u73b0\u7684\u66f4\u5e7f\u6cdb\u7684\u793e\u4f1a\u5f71\u54cd\uff0c\u4ee5\u53caGPT-3\u7684\u4e00\u822c\u5f71\u54cd\u3002", "note_en": "Download PDF  Abstract: Recent work has demonstrated substantial gains on many NLP tasks andbenchmarks by pre-training on a large corpus of text followed by fine-tuning ona specific task. While typically task-agnostic in architecture, this methodstill requires task-specific fine-tuning datasets of thousands or tens ofthousands of examples. By contrast, humans can generally perform a new languagetask from only a few examples or from simple instructions - something whichcurrent NLP systems still largely struggle to do. Here we show that scaling uplanguage models greatly improves task-agnostic, few-shot performance, sometimeseven reaching competitiveness with prior state-of-the-art fine-tuningapproaches. Specifically, we train GPT-3, an autoregressive language model with175 billion parameters, 10x more than any previous non-sparse language model,and test its performance in the few-shot setting. For all tasks, GPT-3 isapplied without any gradient updates or fine-tuning, with tasks and few-shotdemonstrations specified purely via text interaction with the model. GPT-3achieves strong performance on many NLP datasets, including translation,question-answering, and cloze tasks, as well as several tasks that requireon-the-fly reasoning or domain adaptation, such as unscrambling words, using anovel word in a sentence, or performing 3-digit arithmetic. At the same time,we also identify some datasets where GPT-3&#39;s few-shot learning still struggles,as well as some datasets where GPT-3 faces methodological issues related totraining on large web corpora. Finally, we find that GPT-3 can generate samplesof news articles which human evaluators have difficulty distinguishing fromarticles written by humans. We discuss broader societal impacts of this findingand of GPT-3 in general.", "posttime": "2020-05-29 10:02:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,brown,\u4efb\u52a1", "title": "\u201cGPT-3\uff1a\u8bed\u8a00\u6a21\u578b\u662f\u5c11\u6709\u7684\u5b66\u4e60\u8005\u201d\uff0cBrown\u7b49\u4eba\u30022020(OpenAI)", "title_en": "\u201cGPT-3: Language Models Are Few-Shot Learners\u201d, Brown et al. 2020 (OpenAI)", "transed": 1, "url": "https://arxiv.org/abs/2005.14165", "via": "", "real_tags": ["2020", "brown", "\u4efb\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "7ba293785210f22723e14e58f1921c63.jpg", "infoid": 1004184, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(American Civil Liberties Union)\u6b63\u5728\u8d77\u8bc9\u6709\u4e89\u8bae\u7684\u9762\u90e8\u8bc6\u522b\u516c\u53f8Clearview AI\u8fdd\u53cd\u4f0a\u5229\u8bfa\u4f0a\u5dde\u751f\u7269\u8bc6\u522b\u4fe1\u606f\u9690\u79c1\u6cd5(BIPA)\uff0c\u6307\u63a7\u8be5\u516c\u53f8\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u516c\u6c11\u4e0d\u77e5\u60c5\u6216\u672a\u7ecf\u4ed6\u4eec\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u975e\u6cd5\u6536\u96c6\u548c\u5b58\u50a8\u6570\u636e\uff0c\u7136\u540e\u5c06\u5176\u6280\u672f\u4f7f\u7528\u6743\u51fa\u552e\u7ed9\u6267\u6cd5\u90e8\u95e8\u548c\u79c1\u4eba\u516c\u53f8\u3002\u5b8c\u6574\u7684\u6295\u8bc9\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\n\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df(ACLU)\u5f8b\u5e08\u5185\u68ee\u00b7\u5f17\u91cc\u5fb7\u00b7\u97e6\u65af\u52d2(Nathan Freed Wessler)\u5728\u4e00\u7bc7\u6982\u8ff0\u8bc9\u8bbc\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\uff1a\u201c\u5728\u516c\u4f17\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5bb6\u516c\u53f8\u5411\u79c1\u4eba\u516c\u53f8\u3001\u8b66\u5bdf\u3001\u8054\u90a6\u673a\u6784\u548c\u5bcc\u4eba\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u5e9e\u5927\u7684\u9762\u90e8\u6307\u7eb9\u6570\u636e\u5e93\uff0c\u5141\u8bb8\u4ed6\u4eec\u4f7f\u7528\u4eba\u8138\u8bc6\u522b\u6280\u672f\u79d8\u5bc6\u8ddf\u8e2a\u5e76\u7784\u51c6\u4efb\u4f55\u4ed6\u4eec\u60f3\u8981\u7684\u4eba\u3002\u201d\u201c\u90a3\u5bb6\u516c\u53f8\u5c31\u662fClearview AI\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u5236\u6b62\uff0c\u5b83\u5c06\u7ec8\u7ed3\u6211\u4eec\u6240\u77e5\u7684\u9690\u79c1\u3002\u201d\n\u201c\u90a3\u5bb6\u516c\u53f8\u5c31\u662fClearview AI\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u5236\u6b62\uff0c\u5b83\u5c06\u7ec8\u7ed3\u6211\u4eec\u6240\u77e5\u7684\u9690\u79c1\u3002\u201d\nClearview AI\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u58f0\u540d\u9e4a\u8d77\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5a92\u4f53\u62a5\u9053\uff0c\u5305\u62ec\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b(New York Times)1\u6708\u4efd\u7684\u4e00\u9879\u9ad8\u8c03\u8c03\u67e5\uff0c\u8c03\u67e5\u663e\u793a\uff0cClearview AI\u7684\u6280\u672f\u975e\u5e38\u51c6\u786e\uff0c\u5e76\u5728\u6267\u6cd5\u673a\u6784\u548c\u79c1\u8425\u90e8\u95e8\u516c\u53f8\u4e2d\u5f97\u5230\u5e7f\u6cdb\u4f7f\u7528\u3002\u8be5\u516c\u53f8\u5de5\u5177\u4e4b\u6240\u4ee5\u6709\u6548\uff0c\u662f\u56e0\u4e3aClearview\u8fdd\u53cd\u4e86\u8fd9\u4e9b\u5e73\u53f0\u7684\u89c4\u5219\uff0c\u4ece\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u4e0a\u6293\u53d6\u4e86\u7167\u7247\u548c\u5176\u4ed6\u6570\u636e\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u8d85\u8fc730\u4ebf\u5f20\u56fe\u7247\u7684\u6570\u636e\u5e93\uff0c\u7136\u540e\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u7684\u590d\u6742\u7b97\u6cd5\u5c06\u8fd9\u4e9b\u56fe\u7247\u4e0e\u4e0a\u4f20\u7684\u7167\u7247\u8fdb\u884c\u5339\u914d\u3002\n\u5728\u8fc7\u53bb\u7684\u4e94\u4e2a\u6708\u91cc\uff0c\u79d1\u6280\u516c\u53f8\u5411Clearview\u53d1\u51fa\u4e86\u65e0\u6570\u7684\u505c\u6b62\u4ee4\uff0c\u4f46\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8be5\u516c\u53f8\u662f\u5426\u9075\u5b88\u4e86\u547d\u4ee4\uff0c\u5220\u9664\u4e86\u4ece\u516c\u5171\u793e\u4ea4\u7f51\u7edc\u9875\u9762\u548c\u5e16\u5b50\u4e2d\u7a83\u53d6\u7684\u6570\u636e\u3002\u8be5\u516c\u53f8\u5bf9\u6279\u8bc4\u7684\u56de\u5e94\u662f\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5c06\u5176\u5de5\u5177\u63d0\u4f9b\u7ed9\u516c\u4f17\u4f9b\u4e2a\u4eba\u4f7f\u7528\uff0c\u6700\u8fd1\u8fd8\u8868\u793a\uff0c\u5c06\u505c\u6b62\u5411\u79c1\u8425\u516c\u53f8\u51fa\u552e\u5176\u6280\u672f\uff0c\u53ea\u4e13\u6ce8\u4e8e\u6267\u6cd5\u3002\u7136\u800c\uff0c\u8bb8\u591a\u5a92\u4f53\u62a5\u9053\u53d1\u73b0\uff0cClearview\u5c06\u5176\u4ea7\u54c1\u63d0\u4f9b\u7ed9\u6295\u8d44\u8005\u3001\u77e5\u540d\u9ad8\u7ba1\u548c\u5176\u4ed6\u4e2a\u4eba\uff0c\u4f5c\u4e3a\u63a8\u5e7f\u8be5\u4ea7\u54c1\u7684\u8bd5\u7528\u671f\u7684\u4e00\u90e8\u5206\uff0c\u6279\u8bc4\u4eba\u58eb\u62c5\u5fc3\u5176\u9762\u90e8\u8bc6\u522b\u7cfb\u7edf\u662f\u7316\u7357\u4fb5\u72af\u6c11\u6743\u7684\u57fa\u7840\u3002\nClearview\u5728\u6211\u4eec\u4e0d\u77e5\u60c5\u6216\u672a\u7ecf\u6211\u4eec\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u5efa\u7acb\u4e86\u6570\u5341\u4ebf\u4e2a\u9762\u90e8\u6307\u7eb9\u7684\u6d77\u91cf\u6570\u636e\u5e93\uff0c\u5236\u9020\u4e86\u6211\u4eec\u957f\u671f\u4ee5\u6765\u62c5\u5fc3\u7684\u5669\u68a6\u573a\u666f\uff0c\u5e76\u8d8a\u8fc7\u4e86\u8bb8\u591a\u516c\u53f8\u751a\u81f3\u62d2\u7edd\u5c1d\u8bd5\u7684\u9053\u5fb7\u754c\u9650\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0c\u7f8e\u56fd\u653f\u5e9c\u6216\u4efb\u4f55\u4e00\u5bb6\u7f8e\u56fd\u516c\u53f8\u90fd\u6ca1\u6709\u6c47\u7f16\u8fc7\u5982\u6b64\u5e9e\u5927\u7684\u751f\u7269\u8bc6\u522b\u5b9d\u5e93\u3002\u201c\u97e6\u65af\u52d2\u89e3\u91ca\u8bf4\u3002\u201c\u96ea\u4e0a\u52a0\u971c\u7684\u662f\uff0cClearview\u51fa\u552e\u4e00\u6b3e\u667a\u80fd\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u5176\u5ba2\u6237-\u751a\u81f3\u662f\u90a3\u4e9b\u8bd5\u7528\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237-\u4e0a\u4f20\u4e00\u5f20\u672a\u77e5\u8005\u7684\u7167\u7247\uff0c\u5e76\u7acb\u5373\u6536\u5230\u4e00\u7ec4\u5339\u914d\u7684\u7167\u7247\u3002\u201d\n\u6253\u51fbClearview\u53ef\u80fd\u88ab\u8bc1\u660e\u6709\u6548\u7684\u884c\u4e3a\u7684\u4e00\u4e2a\u9014\u5f84\u662fBIPA\uff0c\u8fd9\u662f\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7684\u9690\u79c1\u6cd5\uff0c\u4e5f\u662f\u7f8e\u56fd\u4ec5\u6709\u7684\u51e0\u9879\u4fdd\u62a4\u9762\u90e8\u8bc6\u522b\u6570\u636e\u4e0d\u88ab\u6ee5\u7528\u7684\u7acb\u6cd5\u4e4b\u4e00\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u8fd9\u9879\u6cd5\u5f8b\u63a8\u52a8Facebook\u5c31\u4e0a\u4f20\u5230\u5176\u793e\u4ea4\u7f51\u7edc\u7684\u7167\u7247\u4f7f\u7528\u672a\u7ecf\u6388\u6743\u7684\u9762\u90e8\u8bc6\u522b\u8fbe\u62105.5\u4ebf\u7f8e\u5143\u7684\u548c\u89e3\u3002\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u8868\u793a\uff0c\u201cClearview\u7684\u884c\u4e3a\u663e\u7136\u8fdd\u53cd\u4e86BIPA\u201d\uff0c\u8be5\u6cd5\u6848\u8981\u6c42\u516c\u53f8\u5728\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u6536\u96c6\u548c\u5b58\u50a8\u4efb\u4f55\u751f\u7269\u7279\u5f81\u8bc6\u522b\u4fe1\u606f\u65f6\uff0c\u65e0\u8bba\u662f\u9762\u90e8\u6307\u7eb9\u8fd8\u662f\u6307\u7eb9\uff0c\u90fd\u8981\u901a\u77e5\u516c\u6c11\u5e76\u83b7\u5f97\u4e66\u9762\u540c\u610f\u3002\n\u5f53Clearview\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\u4e0d\u518d\u5c06\u5176\u6280\u672f\u51fa\u552e\u7ed9\u79c1\u8425\u516c\u53f8\u65f6\uff0c\u5b83\u8bd5\u56fe\u7ed5\u8fc7BIPA\u3002Clearview\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\u662f\u4f0a\u5229\u8bfa\u4f0a\u5dde\u53e6\u4e00\u8d77\u57fa\u4e8eBIPA\u7684\u8bc9\u8bbc\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u516c\u53f8\u5c06\u8fd9\u4e00\u51b3\u5b9a\u4e0e\u4e0d\u518d\u5411\u8be5\u5dde\u4efb\u4f55\u7ec4\u7ec7\u63d0\u4f9b\u4ea7\u54c1\u7684\u51b3\u5b9a\u5e76\u5217\u4e3a\u81ea\u613f\u884c\u52a8\uff0c\u65e0\u8bba\u8be5\u7ec4\u7ec7\u662f\u79c1\u4eba\u516c\u53f8\u8fd8\u662f\u6267\u6cd5\u673a\u6784\u3002\u8be5\u516c\u53f8\u8fd8\u8868\u793a\uff0c\u5c06\u4e0d\u518d\u4ece\u4f0a\u5229\u8bfa\u4f0a\u5dde\u7684IP\u5730\u5740\u6536\u96c6\u6570\u636e\uff0c\u91c7\u53d6\u989d\u5916\u63aa\u65bd\u9632\u6b62\u6536\u96c6\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5c45\u6c11\u7684\u6570\u636e\uff0c\u5e76\u5efa\u7acb\u4e00\u4e2a\u9009\u62e9\u9000\u51fa\u5de5\u5177\uff0c\u4f46\u76ee\u524d\u5c1a\u4e0d\u6e05\u695aClearview\u5728\u6b64\u540e\u51e0\u5468\u5b9e\u9645\u4e0a\u91c7\u53d6\u4e86\u54ea\u4e9b\u63aa\u65bd(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\u901a\u8fc7\u7ee7\u7eed\u5b58\u50a8\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5c45\u6c11\u7684\u4fe1\u606f\uff0cClearview\u4f3c\u4e4e\u4ecd\u53ef\u80fd\u53d7\u5230BIPA\u7684\u7ea6\u675f\uff0c\u8fd9\u7ed9\u4e86\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u53e6\u4e00\u4e2a\u63d0\u8d77\u8bc9\u8bbc\u7684\u673a\u4f1a\u3002\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u8868\u793a\uff0c\u5b83\u6b63\u5728\u4e0e\u5f53\u5730\u7684\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5206\u4f1a\u548c\u57c3\u5fb7\u68ee\u00b7PC\u5f8b\u5e08\u4e8b\u52a1\u6240\u5408\u4f5c\uff0c\u5e76\u8981\u6c42\u6cd5\u9662\u8981\u6c42Clearview\u5220\u9664\u5176\u5b58\u50a8\u7684\u6240\u6709\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5c45\u6c11\u7684\u751f\u7269\u8bc6\u522b\u6570\u636e\uff0c\u5e76\u505c\u6b62\u6536\u96c6\u4efb\u4f55\u65b0\u6570\u636e\uff0c\u76f4\u5230\u5b83\u80fd\u591f\u9075\u5b88BIPA\u7684\u540c\u610f\u89c4\u5219\u3002\n\u201c\u5982\u679c\u5141\u8bb8\uff0cClearview\u5c06\u6467\u6bc1\u6211\u4eec\u7684\u533f\u540d\u6743\u548c\u9690\u79c1\u6743--\u4ee5\u53ca\u8fd9\u4e24\u8005\u5e26\u6765\u7684\u5b89\u5168\u4fdd\u969c\uff0c\u201d\u97e6\u65af\u52d2\u5199\u9053\u3002\u201c\u4eba\u4eec\u53ef\u4ee5\u6539\u53d8\u81ea\u5df1\u7684\u540d\u5b57\u548c\u5730\u5740\uff0c\u4ee5\u4fdd\u62a4\u81ea\u5df1\u7684\u4e0b\u843d\u548c\u8eab\u4efd\u4e0d\u53d7\u8bd5\u56fe\u4f24\u5bb3\u4ed6\u4eec\u7684\u4eba\u7684\u4f24\u5bb3\uff0c\u4f46\u4ed6\u4eec\u4e0d\u80fd\u6539\u53d8\u81ea\u5df1\u7684\u8138\u3002\u201d", "note_en": "The American Civil Liberties Union is  suing controversial facial recognition firm Clearview AI for violation of the Illinois Biometric Information Privacy Act (BIPA), alleging the company illegally collected and stored data on Illinois citizens without their knowledge or consent and then sold access to its technology to law enforcement and private companies. The  full complaint is available here.\n \u201cUnbeknownst to the public, this company has offered up this massive faceprint database to private companies, police, federal agencies, and wealthy individuals, allowing them to secretly track and target whomever they wished using face recognition technology,\u201d writes ACLU attorney Nathan Freed Wessler in a  blog post outlining the lawsuit. \u201cThat company is Clearview AI, and it will end privacy as we know it if it isn\u2019t stopped.\u201d\n \u201cThat company is Clearview AI, and it will end privacy as we know it if it isn\u2019t stopped.\u201d\n Clearview AI rose to prominence earlier this year thanks to media reports, including a  high-profile investigation from  The New York Times in January, that revealed its technology is highly accurate and in widespread use throughout both law enforcement agencies and private sector companies. The reason the company\u2019s tool is effective is because Clearview scraped photographs and other data from social media sites against those platforms\u2019 rules, resulting in a database of more than 3 billion images which are then matched against an uploaded photo using sophisticated algorithms trained by machine learning.\n Tech companies have sent  numerous cease and desist orders to Clearview over the past five months, but it\u2019s unclear if the company has ever complied with orders to remove data it\u2019s siphoned from public social networks\u2019 pages and posts. The company has responded to criticism by claiming it would never offer its tool to the public for individual use and more recently said it would  stop selling its technology to private companies and focus only on law enforcement. However, numerous media reports have discovered that Clearview provided its product to investors, high-profile executives, and other individuals as part of trial periods to promote the product, and critics fear its facial recognition system is the foundation for rampant civil rights violations.\n \u201cBy building a mass database of billions of faceprints without our knowledge or consent, Clearview has created the nightmare scenario that we\u2019ve long feared, and has crossed the ethical bounds that many companies have refused to even attempt. Neither the United States government nor any American company is known to have ever compiled such a massive trove of biometrics,\u201d Wessler explains. \u201cAdding fuel to the fire, Clearview sells access to a smartphone app that allows its customers \u2014 and even those using the app on a trial basis \u2014 to upload a photo of an unknown person and instantaneously receive a set of matching photos.\u201d\n One avenue to combat Clearview\u2019s conduct that may prove effective is BIPA, the Illinois privacy law and one of the only pieces of US legislation that protects facial recognition data from misuse. It\u2019s the same law that earlier this year  pushed Facebook to a $550 million settlement over its use of unauthorized facial recognition on photos uploaded to its social network. The ACLU says \u201cClearview\u2019s actions clearly violate BIPA,\u201d which demands a company inform citizens and gain written consent when any biometric identifier, be it a faceprint or a fingerprint, is collected and stored for any reason.\n  Clearview has tried to skirt BIPA when it announced earlier this month that it would no longer sell its technology to private companies. Clearview made the announcement as part of a separate BIPA-based lawsuit in Illinois, and the company framed the decision as a voluntary action alongside its decision to no longer provide its product to any organization in the state regardless of whether it was a private company or law enforcement agency. The company also said it would no longer collect data from Illinois-based IP addresses, take additional measures to prevent data collection on Illinois residents, and build an opt-out tool, but it\u2019s not clear what steps, if any, Clearview has actually taken in the weeks since.\n By continuing to store information on Illinois residents, it appears Clearview may still be subject to BIPA, giving the ACLU an opportunity to file another suit. The ACLU says it\u2019s teaming up with its local Illinois chapter and the law firm Edelson PC, and it\u2019s asking that a court demand Clearview delete all biometric data on Illinois residents it has stored and to cease collecting any new data until it can comply with BIPA\u2019s consent rules.\n \u201cIf allowed, Clearview will destroy our rights to anonymity and privacy \u2014 and the safety and security that both bring,\u201d Wessler writes. \u201cPeople can change their names and addresses to shield their whereabouts and identities from individuals who seek to harm them, but they can\u2019t change their faces.\u201d", "posttime": "2020-05-29 09:46:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5669\u68a6\u822c,accuses,clearview", "title": "\u7f8e\u56fd\u516c\u6c11\u81ea\u7531\u8054\u76df\u6307\u8d23Clearview AI\u9690\u79c1\u95ee\u9898\u662f\u201c\u5669\u68a6\u822c\u7684\u573a\u666f\u201d", "title_en": "ACLU Accuses Clearview AI of Privacy 'Nightmare Scenario'", "transed": 1, "url": "https://www.theverge.com/2020/5/28/21273388/aclu-clearview-ai-lawsuit-facial-recognition-database-illinois-biometric-laws", "via": "", "real_tags": ["\u5669\u68a6\u822c", "accuses", "clearview"]}, {"category": "", "categoryclass": "", "imagename": "1dbc7ea383c33145f870d8f243ce9421.png", "infoid": 1004183, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u4eca\u5929\u53d1\u5e03\u4e86Android Studio4.0\uff0c\u8fd9\u662f\u5176\u96c6\u6210\u5f00\u53d1\u73af\u5883(IDE)\u7684\u6700\u65b0\u7248\u672c\u3002Android Studio4.0\u5e94\u8be5\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u201c\u66f4\u667a\u80fd\u5730\u7f16\u5199\u4ee3\u7801\u3001\u66f4\u5feb\u5730\u6784\u5efa\u548c\u8bbe\u8ba1\u5e94\u7528\u7a0b\u5e8f\u201d\u3002\u65b0\u7248\u672c\u6070\u597d\u5728\u8c37\u6b4c\u4e0b\u5468\u53d1\u5e03Android 11 Beta 1\u4e4b\u524d\u53d1\u5e03\u3002\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u539f\u56e0\uff0c\u8c37\u6b4c\u63a8\u8fdf\u4e86Android 11\u6d4b\u8bd5\u7248\u7684\u8ba1\u5212\u3002\nAndroid\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u5e73\u53f0\uff0c\u6bcf\u6708\u6d3b\u8dc3\u8bbe\u5907\u8d85\u8fc725\u4ebf\u53f0\u3002\u867d\u7136\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6IDE\u5728Android\u4e0a\u6784\u5efa\uff0c\u4f46Android Studio\u6700\u5148\u63a8\u51fa\u4e86\u6700\u65b0\u529f\u80fd\u3002\u7248\u672c4.0\u5305\u62ec\u4e00\u4e2a\u65b0\u7684\u52a8\u753b\u7f16\u8f91\u5668\u3001\u4e00\u4e2a\u6784\u5efa\u5206\u6790\u5668\u548cJava 8\u8bed\u8a00API\u3002Google\u8fd8\u5bf9CPU Profiler\u7528\u6237\u754c\u9762\u8fdb\u884c\u4e86\u5f7b\u5e95\u6539\u9020\uff0c\u5e76\u6539\u8fdb\u4e86\u5e03\u5c40\u68c0\u67e5\u5668(Layout Inspector)\u3002\n\u60a8\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u4ecedeveloper.android.com/studio\u4e0b\u8f7d\u9002\u7528\u4e8eWindows\u3001Mac\u548cLinux\u7684Android Studio4.0\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u5728\u4f7f\u7528Android Studio\uff0c\u60a8\u53ef\u4ee5\u5728\u5bfc\u822a\u83dc\u5355\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u672c(Help=&gt\uff1b\u5728Windows/Linux\u4e0a\u68c0\u67e5\u66f4\u65b0\uff0cAndroid Studio=&gt\uff1b\u5728OS X\u4e0a\u68c0\u67e5\u66f4\u65b0)\u3002\n\u8c37\u6b4c\u57282\u6708\u4efd\u53d1\u5e03\u4e86Android Studio3.6\u3002\u7248\u672c\u53f74.0\u8868\u660e\uff0c\u5bf9\u4e8e\u4e3aAndroid\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u548c\u6e38\u620f\u7684\u4efb\u4f55\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7248\u672c\u3002\nVB Transform 2020 Online-7\u670815-17\u65e5\u3002\u52a0\u5165\u9886\u5148\u7684\u4eba\u5de5\u667a\u80fd\u9ad8\u7ba1\uff1a\u6ce8\u518c\u514d\u8d39\u76f4\u64ad\u3002\n\u4e0b\u9762\u60a8\u5c06\u53d1\u73b0Android Studio4.0\u7684\u7279\u6027\u6309\u7c7b\u522b\u7ec6\u5206\uff1a\u8bbe\u8ba1\u3001\u5f00\u53d1\u548c\u6784\u5efa\u3002\u65b0\u7248\u672c\u8fd8\u5305\u62ec\u901a\u5e38\u7684\u6027\u80fd\u6539\u8fdb\u548c\u65b0\u529f\u80fd\u4e4b\u4e0a\u7684\u9519\u8bef\u4fee\u590d(\u5b8c\u6574\u7248\u672c\u8bf4\u660e)\u3002\u8c37\u6b4c\u6ca1\u6709\u900f\u9732\u5176\u4e0b\u4e00\u7248\u672c\u7684\u8ba1\u5212\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5728\u516c\u53f8\u7684I/O\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\u5f97\u5230\u63d0\u793a\uff0c\u4f462020\u5e74\u662f\u5947\u602a\u7684\u4e00\u5e74\u3002\n\u52a8\u753b\u7f16\u8f91\u5668\uff1aMotionLayout\u63a5\u53e3\u8fdb\u4e00\u6b65\u6269\u5c55\u4e86ConstraintLayout\u7684\u4e30\u5bcc\u529f\u80fd\uff0c\u5e2e\u52a9Android\u5f00\u53d1\u8005\u5728\u5e94\u7528\u4e2d\u7ba1\u7406\u590d\u6742\u7684\u8fd0\u52a8\u548cwidget\u52a8\u753b\u3002\u73b0\u5728\uff0c\u5c06\u6b64API\u4e0e\u65b0\u7684\u52a8\u753b\u7f16\u8f91\u5668\u4e00\u8d77\u4f7f\u7528\u66f4\u52a0\u5bb9\u6613-\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u3001\u7f16\u8f91\u548c\u9884\u89c8MotionLayout\u52a8\u753b\u7684\u754c\u9762\u3002\u60a8\u4e0d\u518d\u9700\u8981\u521b\u5efa\u548c\u4fee\u6539\u590d\u6742\u7684XML\u6587\u4ef6\uff1b\u52a8\u753b\u7f16\u8f91\u5668\u5c06\u4e3a\u60a8\u751f\u6210\u8fd9\u4e9b\u6587\u4ef6\uff0c\u5e76\u652f\u6301\u7f16\u8f91\u7ea6\u675f\u96c6\u3001\u53d8\u6362\u3001\u5173\u952e\u5e27\u548c\u89c6\u56fe\u5c5e\u6027\u3002\u5982\u679c\u60a8\u786e\u5b9e\u60f3\u8981\u67e5\u770b\u7f16\u8f91\u5668\u521b\u5efa\u7684\u4ee3\u7801\uff0c\u53ea\u9700\u5355\u51fb\u4e00\u4e0b\u5373\u53ef\u3002\u5bf9\u4e8e\u5df2\u7ecf\u4f7f\u7528ConstraintLayout\u7684\u5f00\u53d1\u4eba\u5458\uff0cIDE\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u8f6c\u6362\u4e3aMotionLayout\u3002\n\u5347\u7ea7\u7684\u5e03\u5c40\u68c0\u67e5\u5668\uff1a\u8c03\u67e5\u7279\u5b9a\u5c5e\u6027\u7684\u503c\u4ece\u4f55\u800c\u6765\uff0c\u6216\u67e5\u770b\u5d4c\u5957\u89c6\u56fe\u7684\u5b9e\u65f6\u4e09\u7ef4\u8868\u793a\u4ee5\u68c0\u67e5\u89c6\u56fe\u5c42\u6b21\u3002\u901a\u8fc7\u5e03\u5c40\u68c0\u67e5\u5668\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u66f4\u65b0\u7684\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u6709\u5173\u5982\u4f55\u89e3\u6790\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u901a\u8fc7\u4ece\u4e3b\u83dc\u5355\u4e2d\u9009\u62e9\u89c6\u56fe&gt\uff1b\u5de5\u5177\u7a97\u53e3&gt\uff1b\u5e03\u5c40\u68c0\u67e5\u5668\u6765\u4f7f\u7528\u5b9e\u65f6\u7248\u9762\u68c0\u67e5\u5668\u3002\u5982\u679c\u60a8\u6b63\u5728\u90e8\u7f72\u5230\u8fd0\u884cAPI 29\u7ea7\u522b\u6216\u66f4\u9ad8\u7ea7\u522b\u7684\u8bbe\u5907\uff0c\u5219\u53ef\u4ee5\u8bbf\u95ee\u5176\u4ed6\u529f\u80fd\uff0c\u4f8b\u5982\u968f\u7740\u89c6\u56fe\u66f4\u6539\u800c\u66f4\u65b0\u7684\u52a8\u6001\u5e03\u5c40\u5c42\u6b21\u7ed3\u6784\u3001\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u60a8\u786e\u5b9a\u5982\u4f55\u89e3\u6790\u8d44\u6e90\u503c\u7684\u8be6\u7ec6\u89c6\u56fe\u5c5e\u6027\uff0c\u4ee5\u53ca\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8fUI\u7684\u5b9e\u65f63D\u6a21\u578b\u3002\u5728\u80fd\u591f\u8c03\u8bd5UI\u7684\u540c\u65f6\uff0c\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u5bfc\u822a\u3001\u8bbe\u7f6e\u52a8\u753b\u4ee5\u53ca\u5728\u89c6\u56fe\u4e4b\u95f4\u5207\u6362\u3002\n\u5e03\u5c40\u9a8c\u8bc1\uff1a\u5f53\u60a8\u9488\u5bf9\u591a\u79cd\u5916\u5f62\u56e0\u7d20\u3001\u5c4f\u5e55\u5927\u5c0f\u548c\u5206\u8fa8\u7387\u8fdb\u884c\u5f00\u53d1\u65f6\uff0c\u60a8\u9700\u8981\u9a8c\u8bc1\u60a8\u5bf9UI\u6240\u505a\u7684\u66f4\u6539\u5728\u60a8\u652f\u6301\u7684\u6bcf\u4e2a\u5c4f\u5e55\u4e0a\u662f\u5426\u90fd\u5f88\u68d2\u3002\u4f7f\u7528\u5e03\u5c40\u9a8c\u8bc1\u7a97\u53e3\uff0c\u60a8\u53ef\u4ee5\u540c\u65f6\u9884\u89c8\u4e0d\u540c\u5c4f\u5e55\u548c\u914d\u7f6e\u4e0a\u7684\u5e03\u5c40\u3002\u8981\u5f00\u59cb\uff0c\u8bf7\u5355\u51fbIDE\u53f3\u4e0a\u89d2\u7684\u5e03\u5c40\u9a8c\u8bc1\u9009\u9879\u5361\u3002\nCPU Profiler UI\u5347\u7ea7\uff1a\u8be5CPU Profiler\u65e8\u5728\u63d0\u4f9b\u6709\u5173\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7ebf\u7a0b\u6d3b\u52a8\u548c\u8ddf\u8e2a\u8bb0\u5f55\u7684\u4e30\u5bcc\u4fe1\u606f\u3002CPU\u5f55\u5236\u73b0\u5728\u4e0e\u4e3b\u5206\u6790\u5668\u65f6\u95f4\u7ebf\u5206\u79bb\uff0c\u5e76\u6309\u7ec4\u7ec4\u7ec7\u3002\u60a8\u53ef\u4ee5\u4e0a\u4e0b\u79fb\u52a8\u7ec4\uff0c\u6216\u62d6\u653e\u7ec4\u4e2d\u7684\u5355\u4e2a\u9879\u76ee\u4ee5\u8fdb\u884c\u5176\u4ed6\u81ea\u5b9a\u4e49\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u7ebf\u7a0b\u6d3b\u52a8\u65f6\u95f4\u7ebf\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u6d3b\u52a8(\u5305\u62ec\u65b9\u6cd5\u3001\u51fd\u6570\u548c\u4e8b\u4ef6)\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528\u65b0\u7684\u5bfc\u822a\u5feb\u6377\u952e\u8f7b\u677e\u79fb\u52a8\u6570\u636e-\u4f8b\u5982\u4f7f\u7528W\u3001A\u3001S\u548cD\u952e\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7f29\u653e\u548c\u5e73\u79fb\u3002Google\u8fd8\u91cd\u65b0\u8bbe\u8ba1\u4e86\u7cfb\u7edf\u8ddf\u8e2aUI\uff0c\u4ee5\u4fbf\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u72ec\u7279\u7684\u7740\u8272\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u8fdb\u884c\u89c6\u89c9\u533a\u5206\uff0c\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u4fbf\u9996\u5148\u663e\u793a\u8f83\u7e41\u5fd9\u7684\u7ebf\u7a0b\uff0c\u5e76\u4e14\u60a8\u73b0\u5728\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u53ea\u67e5\u770b\u60a8\u9009\u62e9\u7684\u7ebf\u7a0b\u7684\u6570\u636e\u3002CPU\u6027\u80fd\u5206\u6790\u5668\u7684\u8d28\u91cf\u4e5f\u5e94\u8be5\u66f4\u597d--\u81eaAndroid Studio3.6\u4ee5\u6765\uff0c\u8c37\u6b4c\u5df2\u7ecf\u770b\u5230\u7528\u6237\u62a5\u544a\u7684\u5f55\u97f3\u9519\u8bef\u7387\u5927\u5e45\u4e0b\u964d\u3002\n\u7f16\u5199\u4ee3\u7801\u6536\u7f29\u89c4\u5219\u65f6\u7684\u667a\u80fd\u7f16\u8f91\u5668\u529f\u80fd\uff1aAndroid Gradle plugin 3.4.0\u4e2d\u5f15\u5165\u4e86r8\uff0c\u5c06\u53bb\u4e11\u5316\u3001\u6536\u7f29\u3001\u6a21\u7cca\u3001\u4f18\u5316\u548cDexing\u7ed3\u5408\u5728\u4e00\u8d77-\u5bfc\u81f4\u663e\u8457\u7684\u6784\u5efa\u6027\u80fd\u6539\u8fdb\u3002\u5728\u4e3aR8\u521b\u5efa\u89c4\u5219\u6587\u4ef6\u65f6\uff0cAndroid Studio\u73b0\u5728\u63d0\u4f9b\u667a\u80fd\u7f16\u8f91\u5668\u529f\u80fd\uff0c\u4f8b\u5982\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3001\u5b8c\u6210\u548c\u9519\u8bef\u68c0\u67e5\u3002\u8be5\u7f16\u8f91\u5668\u8fd8\u4e0eAndroid\u9879\u76ee\u96c6\u6210\uff0c\u4e3a\u6240\u6709\u7c7b\u3001\u65b9\u6cd5\u548c\u5b57\u6bb5\u63d0\u4f9b\u5b8c\u6574\u7684\u7b26\u53f7\u5b8c\u6210\uff0c\u5e76\u5305\u62ec\u5feb\u901f\u5bfc\u822a\u548c\u91cd\u6784\u3002\nIntelliJ IDEA 2019.3\u5e73\u53f0\u66f4\u65b0\uff1a\u6838\u5fc3Android Studio IDE\u5df2\u66f4\u65b0\uff0c\u589e\u52a0\u4e86IntelliJ IDEA 2019.3\u7248\u548c2019.3.3\u7248\u7684\u6539\u8fdb\u3002\u8fd9\u4e9b\u6539\u8fdb\u4e3b\u8981\u96c6\u4e2d\u5728\u6574\u4e2aIDE\u7684\u8d28\u91cf\u548c\u6027\u80fd\u6539\u8fdb\u4e0a\u3002\nKotlin Android live Templates\uff1a\u4e00\u4e2aIntelliJ\u529f\u80fd\uff0c\u5141\u8bb8\u60a8\u901a\u8fc7\u952e\u5165\u7b80\u5355\u7684\u5173\u952e\u5b57\u5c06\u5e38\u89c1\u7ed3\u6784\u63d2\u5165\u5230\u4ee3\u7801\u4e2d\u3002Android Studio\u73b0\u5728\u4e3a\u60a8\u7684Kotlin\u4ee3\u7801\u63d0\u4f9b\u4e86\u7279\u5b9a\u4e8eAndroid\u7684\u5b9e\u65f6\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u53ea\u9700\u952e\u5165toast\uff0c\u7136\u540e\u6309Tab\u952e\u5373\u53ef\u5feb\u901f\u63d2\u5165Toast\u7684\u6837\u677f\u4ee3\u7801\u3002\u8981\u67e5\u770b\u53ef\u7528\u5b9e\u65f6\u6a21\u677f\u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u5bfc\u822a\u5230\u7f16\u8f91\u5668&&gt;\u5b9e\u65f6\u6a21\u677f(\u5728\u7f16\u8f91\u5668\u8bbe\u7f6e(\u6216\u9996\u9009\u9879)\u5bf9\u8bdd\u6846\u4e2d)\u3002\nClangd\u5bf9C++\u7684\u652f\u6301\uff1a\u5bf9\u4e8e\u7f16\u5199C++\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0cclangd\u73b0\u5728\u662f\u4ee3\u7801\u5bfc\u822a\u3001\u5b8c\u6210\u3001\u68c0\u67e5\u4ee5\u53ca\u663e\u793a\u4ee3\u7801\u9519\u8bef\u548c\u8b66\u544a\u7684\u4e3b\u8981\u8bed\u8a00\u5206\u6790\u5f15\u64ce\u3002\u8c37\u6b4c\u73b0\u5728\u8fd8\u4e0eAndroid Studio\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u8981\u914d\u7f6eClangd\u6216Clang-Tidy\u884c\u4e3a\uff0c\u8bf7\u8f6c\u5230IDE\u8bbe\u7f6e(\u6216\u9996\u9009\u9879)\u5bf9\u8bdd\u6846\uff0c\u5bfc\u822a\u5230\u8bed\u8a00&amp\uff1b\u6846\u67b6&gt\uff1bC/C++&gt\uff1bClangd\u6216Clang-Tidy\uff0c\u7136\u540e\u914d\u7f6e\u9009\u9879\u3002\n\u6784\u5efa\u5206\u6790\u5668\uff1a\u8fc7\u65f6\u6216\u914d\u7f6e\u9519\u8bef\u7684\u4efb\u52a1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6784\u5efa\u65f6\u95f4\u66f4\u957f\uff0c\u4ece\u800c\u5bfc\u81f4\u53d7\u632b\u548c\u5de5\u4f5c\u6548\u7387\u4e0b\u964d\u3002Build Analyzer\u901a\u8fc7\u7a81\u51fa\u663e\u793a\u5bf9\u603b\u4f53\u6784\u5efa\u65f6\u95f4\u6700\u8d1f\u8d23\u7684\u63d2\u4ef6\u548c\u4efb\u52a1\uff0c\u5e76\u5efa\u8bae\u7f13\u89e3\u6027\u80fd\u8870\u9000\u7684\u6b65\u9aa4\uff0c\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4e86\u89e3\u548c\u89e3\u51b3\u6784\u5efa\u4e2d\u7684\u74f6\u9888\u3002\nD8\u548cR8\u4e2d\u7684Java 8\u8bed\u8a00\u5e93\u53bb\u7cd6\u5316\uff1aAndroid Gradle\u63d2\u4ef6\u7684\u4ee5\u524d\u7248\u672c\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3a\u53bb\u7cd6\u5316\u7684\u8fc7\u7a0b\uff0c\u4e3a\u6240\u6709API\u7ea7\u522b\u652f\u6301\u5404\u79cdJava 8\u8bed\u8a00\u7279\u6027\uff0c\u4f8b\u5982lambda\u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528\u3002\u73b0\u5728\uff0c\u65e0\u8bba\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684minSdkVersion\u662f\u4ec0\u4e48\uff0c\u53bb\u4e11\u5316\u5f15\u64ce\u90fd\u5df2\u7ecf\u6269\u5c55\u5230\u652f\u6301Java\u8bed\u8a00API\u3002\u8fd9\u610f\u5473\u7740\u60a8\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u8bed\u8a00API\uff0c\u8fd9\u4e9bAPI\u4ee5\u524d\u53ea\u5728\u6700\u8fd1\u7684Android\u7248\u672c\u4e2d\u53ef\u7528(\u4f8b\u5982java.util.stream\u3001java.util.function\u548cjava.time)\u3002\n\u529f\u80fd\u5bf9\u529f\u80fd\u4f9d\u8d56\u5173\u7cfb\uff1a\u73b0\u5728\u53ef\u4ee5\u6307\u5b9a\u52a8\u6001\u529f\u80fd\u6a21\u5757\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u529f\u80fd\u6a21\u5757\u3002\u80fd\u591f\u5b9a\u4e49\u6b64\u5173\u7cfb\u53ef\u786e\u4fdd\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u89e3\u9501\u9644\u52a0\u529f\u80fd\u6240\u9700\u7684\u6a21\u5757\uff0c\u4ece\u800c\u51cf\u5c11\u8bf7\u6c42\u5e76\u4f7f\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u5bb9\u6613\u6a21\u5757\u5316\u3002\u4f8b\u5982\uff0c\uff1aVideo\u6444\u50cf\u5934\u529f\u80fd\u53ef\u80fd\u53d6\u51b3\u4e8e\uff1a\u6444\u50cf\u5934\u529f\u80fd\u3002\u5982\u679c\u7528\u6237\u60f3\u8981\u89e3\u9501\u5f55\u5236\u89c6\u9891\u7684\u80fd\u529b\uff0c\u4f60\u7684\u5e94\u7528\u4f1a\u5728\u8bf7\u6c42\uff1a\u89c6\u9891\u65f6\u81ea\u52a8\u4e0b\u8f7dRequired\uff1aCamera\u6a21\u5757\u3002\n\u542f\u7528\u6216\u7981\u7528\u6784\u5efa\u529f\u80fd\u7684\u65b0\u9009\u9879\uff1aAndroid Gradle\u63d2\u4ef6\u5185\u7f6e\u4e86\u5bf9\u73b0\u4ee3\u5e93(\u5982\u6570\u636e\u7ed1\u5b9a\u548c\u89c6\u56fe\u7ed1\u5b9a)\u548c\u6784\u5efa\u529f\u80fd(\u5982\u81ea\u52a8\u751f\u6210\u7684BuildConfig\u7c7b)\u7684\u652f\u6301\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u80fd\u5e76\u4e0d\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u9700\u8981\u8fd9\u4e9b\u5e93\u548c\u529f\u80fd\u3002\u73b0\u5728\u53ef\u4ee5\u7981\u7528\u79bb\u6563\u751f\u6210\u529f\u80fd\uff0c\u8fd9\u6709\u52a9\u4e8e\u4f18\u5316\u5927\u578b\u9879\u76ee\u7684\u751f\u6210\u6027\u80fd\u3002\n\u5bf9Kotlin DSL\u811a\u672c\u6587\u4ef6\u7684\u57fa\u672c\u652f\u6301\uff1a\u5bf9Kotlin DSL\u751f\u6210\u811a\u672c\u6587\u4ef6(*.kts)\u7684\u5185\u7f6e\u652f\u6301\u610f\u5473\u7740Kotlin\u751f\u6210\u811a\u672c\u63d0\u4f9b\u4e00\u6574\u5957\u5feb\u901f\u4fee\u590d\uff0c\u5e76\u53d7\u9879\u76ee\u7ed3\u6784\u5bf9\u8bdd\u6846\u652f\u6301\u3002\u8c37\u6b4c\u5c06\u5728\u660e\u5e74\u7ee7\u7eed\u6539\u8fdbAndroid Gradle\u63d2\u4ef6\u7684DSL API\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4Kotlin\u811a\u672c\u7528\u6237\u7684API\u53d1\u751f\u91cd\u5927\u53d8\u5316\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fd9\u4e9b\u4fee\u590d\u5c06\u4e3aKotlin\u811a\u672c\u7528\u6237\u5e26\u6765\u66f4\u52a0\u60ef\u7528\u3001\u6613\u4e8e\u4f7f\u7528\u7684DSL\u3002\n\u4f9d\u8d56\u6027\u5143\u6570\u636e\uff1a\u5f53\u4f7f\u7528Android Gradle plugin 4.0.0\u53ca\u66f4\u9ad8\u7248\u672c\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8be5\u63d2\u4ef6\u5305\u62ec\u63cf\u8ff0\u7f16\u8bd1\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5e93\u4f9d\u8d56\u9879\u7684\u5143\u6570\u636e\u3002\u4e0a\u8f7d\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cPlay Console\u4f1a\u68c0\u67e5\u6b64\u5143\u6570\u636e\u4ee5\u9488\u5bf9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684SDK\u548c\u4f9d\u8d56\u9879\u7684\u5df2\u77e5\u95ee\u9898\u63d0\u4f9b\u8b66\u62a5\uff0c\u5e76\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u63d0\u4f9b\u53ef\u884c\u7684\u53cd\u9988\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u6570\u636e\u88ab\u538b\u7f29\uff0c\u7531Google Play\u7b7e\u540d\u5bc6\u94a5\u52a0\u5bc6\uff0c\u5e76\u5b58\u50a8\u5728\u60a8\u7684\u53d1\u5e03\u5e94\u7528\u7a0b\u5e8f\u7684\u7b7e\u540d\u5757\u4e2d\u3002\n\u6700\u540e\uff0cAndroid Gradle plugin 4.0.0\u901a\u8fc7\u4f7f\u7528Java8\u8bed\u8a00API(\u4e0d\u7ba1\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f4eAPI\u7ea7\u522b)\u652f\u6301Android Studio\u7684build Analyzer\uff0c\u5e76\u5728\u52a8\u6001\u529f\u80fd\u6a21\u5757\u4e4b\u95f4\u521b\u5efa\u529f\u80fd\u5bf9\u529f\u80fd\u7684\u4f9d\u8d56\u5173\u7cfb\u3002", "note_en": "Google today  launched Android Studio 4.0, the latest version of its integrated development environment (IDE). Android Studio 4.0 is supposed to help developers \u201ccode smarter, build faster, and design apps.\u201d The new release comes right before Google\u2019s Android 11 Beta 1 launch next week. Google  delayed its Android 11 beta schedule due to the coronavirus.\n Android is a massive platform with  over 2.5 billion monthly active devices. While developers can use other IDEs to build on Android, the latest features arrive first in Android Studio. Version 4.0 includes a new Motion Editor, a Build Analyzer, and Java 8 language APIs. Google also overhauled the CPU Profiler user interface and improved the Layout Inspector.\n  You can now download Android Studio 4.0 for Windows, Mac, and Linux directly from  developer.android.com/studio. If you are already using Android Studio, you can get the latest version in the navigation menu (Help =&gt; Check for Update on Windows/Linux and Android Studio =&gt; Check for Updates on OS X).\n Google released  Android Studio 3.6 in February. The version number 4.0 suggests this is a major release for anyone who builds apps and games for Android.\n  VB Transform 2020 Online - July 15-17. Join leading AI executives:  Register for the free livestream.\n Below you\u2019ll find Android Studio 4.0 features broken down by category: design, develop, and build. The new version also includes the usual performance improvements and bug fixes on top of the new features ( full release notes). Google didn\u2019t share its plans for the next version. Normally we\u2019d get hints at the company\u2019s I/O developer conference, but 2020 is a weird year.\n  Motion Editor: The\u00a0 MotionLayout API\u00a0extends the rich capabilities of\u00a0 ConstraintLayout to help Android developers manage complex motion and widget animation in their apps. It\u2019s now easier to use this API with the new Motion Editor \u2014\u00a0an interface for creating, editing, and previewing  MotionLayout animations. You no longer have to create and modify complex XML files; the Motion Editor generates them for you, with support for editing constraint sets, transitions, keyframes, and view attributes. If you do want to see the code the editor creates, it is one click away. For developers already using  ConstraintLayout, the IDE can easily convert those to\u00a0 MotionLayout.\n Upgraded Layout Inspector: Investigate where a value for a particular attribute came from or see a live 3D representation of nested views to inspect your view hierarchy. The Layout Inspector gives you access to data that stays updated with your running app and providing insights on how resources are being resolved. Use the live Layout Inspector by selecting View &gt; Tool Windows &gt; Layout Inspector from the main menu. If you are deploying to a device running API 29 level or higher, you have access to additional features, such as a dynamic layout hierarchy that updates as views change, detailed view attributes that also help you determine how resource values are resolved, and a live 3D model of your running app\u2019s UI. Navigate, animate, and transition between views on your running app while being able to debug your UI.\n Layout Validation: When you\u2019re developing for multiple form-factors, screen sizes, and resolutions, you need to verify that changes you make to your UI look great on every screen you support. With the Layout Validation window, you can preview layouts on different screens and configurations simultaneously. To get started, click on the Layout Validation\u00a0tab in the top-right corner of the IDE.\n  CPU Profiler UI upgrades: The\u00a0 CPU profiler is designed to provide a rich amount of information about your app\u2019s thread activity and trace recordings. CPU recordings are now separated from the main profiler timeline and organized in groups. You can move groups up and down, or drag-and-drop individual items within a group for additional customization. You can now view all thread activity in the Thread Activity timeline (including methods, functions, and events) and try new navigation shortcuts to easily move around the data \u2014 such as using W, A, S, and D keys for fine-grained zooming and panning. Google also redesigned the System Trace UI so Events are uniquely colored for better visual distinction, threads are sorted to surface the busier ones first, and you can now focus on seeing data for only the threads you select. The quality of the CPU profiler should also be better \u2014 Google has seen a significant decrease in the user-reported error rates of recordings since Android Studio 3.6.\n Smart editor features when writing rules for code shrinking: R8 was introduced in Android Gradle plugin 3.4.0 to combine desugaring, shrinking, obfuscating, optimizing, and dexing \u2014 resulting in noticeable build performance improvements. When creating rules files for R8, Android Studio now provides smart editor features, such as syntax highlighting, completion, and error checking. The editor also integrates with your Android project to provide full symbol completion for all classes, methods, and fields, and includes quick navigation and refactoring.\n IntelliJ IDEA 2019.3 platform update: The core Android Studio IDE has been updated with improvements from IntelliJ IDEA\u00a0 2019.3\u00a0and\u00a0 2019.3.3\u00a0releases. These improvements largely focus on quality and performance improvements across the IDE.\n Kotlin Android live templates: An IntelliJ feature that allows you to insert common constructs into your code by typing simple keywords. Android Studio now includes Android-specific live templates for your Kotlin code. For example, simply type  toast\u00a0and press the Tab key to quickly insert boilerplate code for a Toast. For a full list of available live templates, navigate to\u00a0Editor &gt; Live Templates\u00a0in the\u00a0Settings\u00a0(or\u00a0Preferences) dialog.\n Clangd support for C++: For developers writing C++,  clangd is now the primary language analysis engine for code navigation, completion, inspection, and showing code errors and warnings. Google also now bundles clang-tidy with Android Studio. To configure Clangd or Clang-Tidy behavior, go to the IDE Settings\u00a0(or\u00a0Preferences) dialog, navigate to\u00a0Languages &amp; Frameworks &gt; C/C++ &gt; Clangd\u00a0or\u00a0Clang-Tidy, and configure the options.\n  Build Analyzer: Outdated or misconfigured tasks can cause longer build times that lead to frustration and lost productivity. The Build Analyzer helps developers understand and address bottlenecks in your build by highlighting the plugins and tasks that are most responsible for your overall build time and by suggesting steps to mitigate regressions.\n Java 8 Language library desugaring in D8 and R8: Previous versions of the Android Gradle plugin supported a variety of Java 8 language features for all API levels, such as lambda expressions and method references, through a process called\u00a0 desugaring. Now, the desugaring engine has been extended to support Java language APIs, regardless of your app\u2019s minSdkVersion. This means that you can now use standard language APIs, which were previously available in only recent Android releases (such as java.util.stream, java.util.function and java.time).\n Feature-on-feature dependencies: You can now specify that a Dynamic Feature module depends on another feature module. Being able to define this relationship ensures that your app has the required modules to unlock additional functionality, resulting in fewer requests and easier modularization of your app. For example, a  :video\u00a0feature can depend on the\u00a0 :camera\u00a0feature. If a user wants to unlock the ability to record videos, your app automatically downloads the required  :camera module when it requests\u00a0 :video.\n New options to enable or disable build features: The Android Gradle plugin has built-in support for modern libraries, such as data binding and view binding, and build features, such as auto-generated BuildConfig classes. However, you might not need these libraries and features for every project. You can now disable discrete build features, which can help optimize build performance for larger projects.\n Essential support for Kotlin DSL script files: Built-in support for Kotlin DSL build script files (*.kts) means that Kotlin build scripts offer a full suite of quick fixes and are supported by the Project Structure dialog. Google will continue to refine the Android Gradle Plugin\u2019s DSL API throughout the next year, which may result in breaking API changes for Kotlin script users. Long term, these fixes will make for a more idiomatic, easy-to-use DSL for Kotlin script users.\n Dependencies metadata: When building your app using Android Gradle plugin 4.0.0 and higher, the plugin includes metadata that describes the library dependencies that are compiled into your app. When uploading your app, the Play Console inspects this metadata to provide alerts for known issues with SDKs and dependencies your app uses, and, in some cases, provide actionable feedback to resolve those issues. The data is compressed, encrypted by a Google Play signing key, and stored in the signing block of your release app.\n Lastly, Android Gradle plugin 4.0.0 includes support for Android Studio\u2019s Build Analyzer by using Java 8 language APIs (regardless of your app\u2019s minimum API level), and creating feature-on-feature dependencies between Dynamic Feature modules.", "posttime": "2020-05-29 09:15:18", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "java,google,android,\u8c37\u6b4c,\u63a8\u51fa", "title": "\u8c37\u6b4c\u63a8\u51faAndroid Studio4.0\uff0c\u5185\u7f6e\u52a8\u753b\u7f16\u8f91\u5668\u3001Build Analyzer\u548cJava8API", "title_en": "Google Launches Android Studio 4.0 With Motion Editor, Build Analyzer, and Java 8 APIs", "transed": 1, "url": "https://venturebeat.com/2020/05/28/google-launches-android-studio-4-0-with-motion-editor-build-analyzer-and-java-8-apis/", "via": "", "real_tags": ["java", "google", "android", "\u8c37\u6b4c", "\u63a8\u51fa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004182, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Ry\u57282018\u5e745\u6708\u4f7f\u539f\u578b\u53ef\u89c1\u540e\u4e0d\u4e45\uff0c\u6211\u5c31\u5f00\u59cb\u4e3aDeno\u505a\u8d21\u732e\u3002\u4eba\u4eec\u6700\u5e38\u95ee\u7684\u95ee\u9898\u662f\u201c\u5305\u88c5\u7ba1\u7406\u5458\u5728\u54ea\u91cc\uff1f\u201d\u5f88\u591a\u65f6\u5019\u751a\u81f3\u4e0d\u662f\u4ee5\u95ee\u9898\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u5b83\u662f\u8fd9\u6837\u7684\u58f0\u660e\uff1a\u201c\u6211\u8ba4\u4e3a\u8fea\u8bfa\u8ba4\u771f\u5bf9\u5f85\u5b89\u5168\u95ee\u9898\uff0c\u4ec5\u4ec5\u4ece\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u8d44\u6e90\u662f\u4e0d\u5b89\u5168\u7684\u3002\u201d\u6216\u8005\u201c\u6211\u600e\u4e48\u53ef\u80fd\u7ba1\u7406\u6211\u7684\u4f9d\u8d56\u5173\u7cfb\u5462\uff1f\u201d\n\u5728\u6211\u770b\u6765\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u6211\u4eec\u7684\u601d\u7ef4\u6a21\u5f0f\u3002\u5f88\u591a\u4eba\u8ba4\u4e3a\u5305\u7ba1\u7406\u5668\u548c\u96c6\u4e2d\u4ee3\u7801\u6ce8\u518c\u4e2d\u5fc3\u65e0\u5904\u4e0d\u5728\uff0c\u8fd9\u662f\u62e5\u6709\u5305\u7ba1\u7406\u5668\u548c\u96c6\u4e2d\u4ee3\u7801\u6ce8\u518c\u4e2d\u5fc3\u7684\u8981\u6c42\u3002\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4eec\u662f\u5fc5\u9700\u7684\u3002\u5b83\u4eec\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u89e3\u51b3\u95ee\u9898\uff0c\u800c\u6211\u4eec\u521a\u521a\u63a5\u53d7\u5b83\u4eec\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u9014\u5f84\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u771f\u7684\u3002\n\u4e3a\u4e86\u53d1\u5e03\u7f51\u7ad9\uff0c\u6211\u4eec\u4e0d\u4f1a\u767b\u5f55\u5230Google\u4e2d\u592e\u670d\u52a1\u5668\uff0c\u7136\u540e\u5c06\u6211\u4eec\u7684\u7f51\u7ad9\u4e0a\u4f20\u5230\u6ce8\u518c\u8868\u3002\u7136\u540e\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u67e5\u770b\u6211\u4eec\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u4f1a\u5728\u6211\u4eec\u672c\u5730\u673a\u5668\u4e0a\u7684browser.json\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6761\u76ee\uff0c\u5e76\u83b7\u53d6\u6574\u4e2a\u7f51\u7ad9\uff0c\u4ee5\u53ca\u8be5\u7f51\u7ad9\u94fe\u63a5\u5230\u6211\u4eec\u672c\u5730\u7f51\u7ad9\u76ee\u5f55\u7684\u4efb\u4f55\u5176\u4ed6\u7f51\u7ad9\uff0c\u7136\u540e\u5728\u6211\u4eec\u542f\u52a8\u6d4f\u89c8\u5668\u4ee5\u5b9e\u9645\u67e5\u770b\u8be5\u7f51\u7ad9\u4e4b\u524d\u3002\u90a3\u592a\u75af\u72c2\u4e86\uff0c\u5bf9\u5427\uff1f\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8981\u63a5\u53d7\u8fd0\u884c\u4ee3\u7801\u7684\u6a21\u578b\u5462\uff1f\nDeno CLI\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6d4f\u89c8\u5668\u7c7b\u4f3c\uff0c\u4f46\u9002\u7528\u4e8e\u4ee3\u7801\u3002\u60a8\u5728\u4ee3\u7801\u4e2d\u5bfc\u5165URL\uff0cDeno\u5c06\u83b7\u53d6\u8be5\u4ee3\u7801\u5e76\u5c06\u5176\u7f13\u5b58\u5230\u672c\u5730\uff0c\u5c31\u50cf\u6d4f\u89c8\u5668\u4e00\u6837\u3002\u6b64\u5916\uff0c\u4e0e\u6d4f\u89c8\u5668\u4e00\u6837\uff0c\u60a8\u7684\u4ee3\u7801\u8fd0\u884c\u5728\u6c99\u7bb1\u4e2d\uff0c\u6c99\u7bb1\u5bf9\u60a8\u8fd0\u884c\u7684\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u4fe1\u4efb\uff0c\u65e0\u8bba\u5176\u6765\u6e90\u5982\u4f55\u3002\u60a8\uff0c\u8c03\u7528\u4ee3\u7801\u7684\u4eba\uff0c\u5728\u5916\u90e8\u544a\u8bc9\u4ee3\u7801\u5b83\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u4e0eabrowser\u7c7b\u4f3c\uff0c\u4ee3\u7801\u53ef\u4ee5\u8bf7\u6c42\u60a8\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u6743\u9650\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u6388\u4e88\u8005\u62d2\u7edd\u3002\nHTTP\u534f\u8bae\u63d0\u4f9b\u4e86\u63d0\u4f9b\u6709\u5173\u4ee3\u7801\u7684\u4fe1\u606f\u6240\u9700\u7684\u4e00\u5207\uff0cDeno\u5c1d\u8bd5\u5145\u5206\u5229\u7528\u8be5\u534f\u8bae\uff0c\u800c\u4e0d\u5fc5\u521b\u5efa\u65b0\u534f\u8bae\u3002\n\u9996\u5148\u8981\u8003\u8651\u7684\u662f\uff0c\u5c31\u50cf\u6d4f\u89c8\u5668\u4e00\u6837\uff0cDeno CLI\u4e0d\u60f3\u5bf9\u60a8\u8fd0\u884c\u7684\u4ee3\u7801\u6709\u4efb\u4f55\u610f\u89c1\u3002\u5b83\u5217\u51fa\u4e86\u5982\u4f55\u83b7\u53d6\u4ee3\u7801\u7684\u89c4\u5219\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5c06\u81ea\u8eab\u4e0e\u5176\u8fd0\u884c\u7684\u673a\u5668\u8fdb\u884c\u6c99\u7bb1\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u5e94\u8be5\u6709\u7684\u89c2\u70b9\u3002\n\u5728Node.js/npm\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u5c06\u672c\u5730\u673a\u5668\u4e0a\u7684\u4ee3\u7801\u7ba1\u7406\u4e0e\u96c6\u4e2d\u7684\u4ee3\u7801\u6ce8\u518c\u8868\u6df7\u4e3a\u4e00\u8c08\uff0c\u4ee5\u5e2e\u52a9\u53d1\u73b0\uff0c\u5728\u6211\u770b\u6765\uff0c\u4e24\u8005\u90fd\u6709\u975e\u5e38\u7cdf\u7cd5\u7684\u7f3a\u9677\u3002\n\u65e9\u5728\u4e92\u8054\u7f51\u7684\u65e9\u671f\uff0c\u6211\u4eec\u5c31\u8bd5\u9a8c\u4e86NPM\u7c7b\u578b\u7684\u53ef\u53d1\u73b0\u6027\u3002\u60a8\u53ef\u4ee5\u5c06\u60a8\u7684\u7f51\u7ad9\u6dfb\u52a0\u5230Yahoo\uff01\u5728\u6b63\u786e\u7684\u5206\u7c7b\u4e0b\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7528\u641c\u7d22\u529f\u80fd\uff0c\u4f46\u5b83\u7684\u7ed3\u6784\u90fd\u662f\u57fa\u4e8e\u63d0\u4f9b\u5185\u5bb9\u7684\u4eba\u7684\u610f\u89c1\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u5bf9\u6d88\u8d39\u8005\u9700\u6c42\u7684\u4f18\u5316\u3002\u6700\u7ec8\uff0c\u8c37\u6b4c(Google)\u51fa\u73b0\u4e86\u3002\u4e3a\u4ec0\u4e48\u8c37\u6b4c\u4f1a\u8d62\uff1f\u56e0\u4e3a\u5b83\u5f88\u6709\u7528\u3002\u5b83\u5c06\u7b80\u5355\u7684\u9700\u6c42\u8868\u8fbe(\u641c\u7d22\u8bcd)\u4e0e\u6ee1\u8db3\u9700\u6c42\u7684\u6700\u76f8\u5173\u7684\u7f51\u9875\u76f8\u5339\u914d\u7684\u7f51\u7ad9\u7f16\u5165\u7d22\u5f15\uff0c\u8003\u5bdf\u4e86\u591a\u4e2a\u56e0\u7d20\uff0c\u5305\u62ec\u5c06\u5185\u5bb9\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\u5143\u6570\u636e\u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u56e0\u7d20\u63d0\u4f9b\u7ed9\u5185\u5bb9\u63d0\u4f9b\u5546\u3002\n\u867d\u7136\u6211\u4eec\u8fd8\u6ca1\u6709\u7528\u4e8eDeno\u7684\u4ee3\u7801\u7684\u6a21\u578b\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u6a21\u578b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u8c37\u6b4c\u662f\u56e0\u4e3a\u5b83\u4e3a\u6211\u4eec\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u88ab\u544a\u77e5\u201c\u4f60\u5fc5\u987b\u4f7f\u7528\u8c37\u6b4c\u201d\uff0c\u800c\u4e14\u8c37\u6b4c\u8fd8\u6709\u5176\u4ed6\u53ef\u884c\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u6211\u5728Twitter\u4e0a\u4e0e\u52b3\u91cc\u00b7\u6c83\u65af(Laurie Voss)\u8fdb\u884c\u4e86\u4e00\u70b9\u8fa9\u8bba\uff0c\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u4ed6\u5bf9NPM\u751f\u6001\u7cfb\u7edf\u6709\u516c\u5e73\u7684\u4e86\u89e3\u3002\u4ed6\u8ba4\u4e3aDeno\u9700\u8981\u80cc\u5305\u7ecf\u7406\uff0c\u800c\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u662f\u6211\u60f3\u8868\u8fbe\u7684\u60f3\u6cd5\u7684\u4e00\u4e2a\u66f4\u957f\u7684\u957f\u7bc7\u5927\u8bba\u7248\u672c\uff0c\u4f46Laurie\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u9053\u7406\u7684\u89c2\u70b9\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u6240\u6709\u7684\u4ee3\u7801\u90fd\u5728\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u5728GitHub\u4e0a\uff0c\u56e0\u4e3a\u7ef4\u62a4\u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u7684\u95ee\u9898\u662f\u5bfc\u81f4\u96c6\u4e2d\u5316\u7cfb\u7edf\u7684\u793e\u4f1a\u548c\u58f0\u8a89\u95ee\u9898\uff0c\u5c3d\u7ba1\u6ca1\u6709\u8fd9\u6837\u7684\u6280\u672f\u8981\u6c42\u3002\n-Laurie Voss(@seldo)2020\u5e745\u670815\u65e5\u3002\nGitHub\u4e4b\u6240\u4ee5\u6210\u4e3a\u5f00\u6e90\u4ee3\u7801\u7684\u53d1\u6e90\u5730\uff0c\u662f\u56e0\u4e3a\u5b83\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5e76\u4e14\u6784\u5efa\u5728\u4e8b\u5b9e\u4e0a\u7684\u6e90\u4ee3\u7801\u7248\u672c\u63a7\u5236\u5de5\u5177git\u4e4b\u4e0a\u3002\u4eceDeno CLI\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e0d\u5e94\u8be5\u5bf9\u60a8\u7684\u6e90\u4ee3\u7801\u6765\u6e90\u6709\u4efb\u4f55\u6280\u672f\u9650\u5236\uff0c\u800c\u662f\u7531\u66f4\u5e7f\u6cdb\u7684\u751f\u6001\u7cfb\u7edf\u6765\u521b\u5efa\u548c\u4e0b\u653e\u4f7fDeno\u7684\u4ee3\u7801\u53ef\u88ab\u53d1\u73b0\u7684\u65b9\u6cd5\uff0c\u5f88\u53ef\u80fd\u662f\u4ee5\u6211\u4eec\u8fd9\u4e9b\u521b\u5efaCLI\u7684\u4eba\u4ece\u672a\u60f3\u8fc7\u7684\u521b\u65b0\u65b9\u5f0f\u3002\n\u5728NPM\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u5bf9\u8bed\u4e49\u7248\u672c\u63a7\u5236\u7684\u4e25\u91cd\u4f9d\u8d56\uff0c\u4ee5\u53ca\u5f80\u5f80\u6765\u81eaNode.js/npm\u751f\u6001\u7cfb\u7edf\u7684\u590d\u6742\u4f9d\u8d56\u56fe\uff0c\u62e5\u6709\u53ef\u91cd\u590d\u7684\u6784\u5efa\u6210\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898\u3002Yarn\u5f15\u5165\u4e86\u9501\u6587\u4ef6\u7684\u6982\u5ff5\uff0cnpm\u7d27\u968f\u5176\u540e\u3002\n\u6211\u4e2a\u4eba\u7684\u611f\u89c9\u662f\uff0c\u8fd9\u6709\u70b9\u50cf\u662f\u5c3e\u5df4\u5728\u6447\u72d7\uff0c\u56e0\u4e3a\u751f\u6001\u7cfb\u7edf\u4e2d\u5f00\u53d1\u8005\u7684\u884c\u4e3a\u9020\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u9700\u8981\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u5b83\u3002\u6211\u4eec\u4e2d\u4efb\u4f55\u4e00\u4e2a\u957f\u671f\u4f7f\u7528\u8be5\u751f\u6001\u7cfb\u7edf\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u89e3\u51b3\u8bb8\u591a\u95ee\u9898\u7684\u65b9\u6cd5\u662frm-rf node_module package-lock.json&amp\uff1b&amp\uff1bnpm install(rm-rf\u8282\u70b9\u6a21\u5757\u5305-lock.json&amp\uff1b&amp\uff1bnpm install)\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u5fb7\u8bfa\u5bf9\u6b64\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u9996\u5148\uff0c\u662f\u8fea\u8bfa\u7f13\u5b58\u6a21\u5757\u3002\u8be5\u7f13\u5b58\u53ef\u4ee5\u7b7e\u5165\u5230\u60a8\u7684\u6e90\u4ee3\u7801\u7ba1\u7406\u4e2d\uff0c\u5e76\u4e14--cached-only\u6807\u5fd7\u5c06\u786e\u4fdd\u4e0d\u4f1a\u5c1d\u8bd5\u68c0\u7d22\u8fdc\u7a0b\u6a21\u5757\u3002DENO_DIR\u73af\u5883\u53d8\u91cf\u53ef\u7528\u4e8e\u6307\u5b9a\u7f13\u5b58\u7684\u4f4d\u7f6e\uff0c\u4ee5\u63d0\u4f9b\u66f4\u5927\u7684\u7075\u6d3b\u6027\u3002\n\u5176\u6b21\uff0cDeno\u652f\u6301\u9501\u5b9a\u6587\u4ef6\u3002--lock lock.json--lock-write\u5c06\u5199\u51fa\u4e00\u4e2a\u9501\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u7ed9\u5b9a\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6240\u6709\u4f9d\u8d56\u9879\u7684\u6563\u5217\u3002\u8fd9\u5c06\u7528\u4e8e\u5728\u4f7f\u7528--lock lock.json\u65f6\u9a8c\u8bc1\u5c06\u6765\u7684\u8fd0\u884c\u3002\n\u8fd8\u6709\u51e0\u4e2a\u5176\u4ed6\u547d\u4ee4\u53ef\u4ee5\u4f7f\u7ba1\u7406\u53ef\u91cd\u590d\u6784\u5efa\u3002Deno\u7f13\u5b58\u5c06\u89e3\u6790\u6240\u63d0\u4f9b\u6a21\u5757\u7684\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u5e76\u586b\u5145Deno\u7f13\u5b58\u3002Deno\u6346\u7ed1\u5305\u53ef\u7528\u4e8e\u751f\u6210\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5355\u4e2a\u6587\u4ef6\u201c\u6784\u5efa\u201d\uff0c\u6240\u6709\u4f9d\u8d56\u9879\u90fd\u5df2\u89e3\u6790\u5e76\u5305\u542b\u5728\u8be5\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u672a\u6765\u7684Deno\u8fd0\u884c\u547d\u4ee4\u53ea\u9700\u8981\u8be5\u5355\u4e2a\u6587\u4ef6\u3002\n\u8fd9\u662f\u6211\u8ba4\u4e3a\u6211\u4eec\u6709\u4e00\u4e2a\u626d\u66f2\u7684\u601d\u7ef4\u6a21\u5f0f\u7684\u53e6\u4e00\u4e2a\u9886\u57df\u3002\u65e0\u8bba\u51fa\u4e8e\u4ec0\u4e48\u539f\u56e0\uff0c\u6211\u4eec\u90fd\u4fe1\u4efb\u96c6\u4e2d\u6ce8\u518c\u8868\u4e2d\u7684\u4ee3\u7801\u3002\u6211\u4eec\u751a\u81f3\u60f3\u90fd\u4e0d\u60f3\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u76f8\u4fe1\u8be5\u4ee3\u7801\u5df2\u7ecf\u5b8c\u5168\u5ba1\u67e5\u4e86\u5b83\u7684\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4f9d\u8d56\u9879\u662f\u503c\u5f97\u4fe1\u4efb\u7684\u3002\u6211\u4eec\u5feb\u901f\u641c\u7d22\u5e76\u952e\u5165npm\uff0c\u5b89\u88c5\u4e00\u4e9b\u968f\u673a\u5305\uff0c\u7136\u540e\u60f3\u201c\u8fd9\u5f88\u597d\uff01\u201d\u6211\u8ba4\u4e3a\uff0cNPM\u4e00\u63fd\u5b50\u751f\u6001\u7cfb\u7edf\u5df2\u7ecf\u8ba9\u4eba\u4ea7\u751f\u4e86\u4e00\u79cd\u81ea\u6ee1\u7684\u611f\u89c9\u3002\n\u4e3a\u4e86\u5f25\u8865\u8fd9\u79cd\u677e\u61c8\u548c\u81ea\u6ee1\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u5de5\u5177\u94fe\u4e2d\u5b9e\u73b0\u4e86\u5b89\u5168\u76d1\u63a7\u8f6f\u4ef6\uff0c\u4ee5\u5206\u6790\u6211\u4eec\u7684\u4f9d\u8d56\u5173\u7cfb\u548c\u6570\u5343\u884c\u4ee3\u7801\uff0c\u8ba9\u6211\u4eec\u77e5\u9053\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u53ef\u80fd\u662f\u53ef\u5229\u7528\u7684\u3002\u516c\u53f8\u8bbe\u7f6e\u79c1\u6709\u6ce8\u518c\u4e2d\u5fc3\u6765\u6258\u7ba1\u53ef\u80fd\u6bd4\u5355\u4e2a\u516c\u5171\u6ce8\u518c\u4e2d\u5fc3\u7a0d\u5fae\u591a\u5ba1\u67e5\u7684\u5305\u3002\n\u611f\u89c9\u8fd9\u91cc\u7684\u623f\u95f4\u91cc\u6709\u4e00\u5934\u5927\u8c61\u3002\u6700\u597d\u7684\u7b56\u7565\u662f\u6211\u4eec\u4e0d\u80fd\u76f8\u4fe1\u4efb\u4f55\u4ee3\u7801\u3002\u4e00\u65e6\u6211\u4eec\u5efa\u7acb\u4e86\u8fd9\u4e00\u70b9\uff0c\u90a3\u4e48\u6253\u5f00\u5b83\u7684\u5907\u4efd\u5c31\u53d8\u5f97\u66f4\u5bb9\u6613\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u5305\u7ba1\u7406\u5668\u548c\u4e2d\u592e\u6ce8\u518c\u8868\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u751a\u81f3\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u5b9e\u8d28\u6027\u7684\u5e2e\u52a9\uff0c\u90a3\u6211\u4eec\u5c31\u662f\u5728\u6b3a\u9a97\u81ea\u5df1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u4ed6\u4eec\u662f\u5728\u5229\u7528\u8ba9\u6211\u4eec\u7684\u8b66\u536b\u5931\u671b\u3002\u201c\u55ef\uff0c\u5b83\u662f\u5728NPM\u4e0a\u64ad\u51fa\u7684\uff0c\u5982\u679c\u5b83\u5bf9\u6211\u4e0d\u597d\uff0c\u80af\u5b9a\u4f1a\u6709\u4eba\u628a\u5b83\u64a4\u4e0b\u3002\u201d\n\u8fea\u8bfa\u5728\u8fd9\u65b9\u9762\u6ca1\u6709\u6211\u60f3\u7684\u90a3\u4e48\u597d\uff0c\u4f46\u5b83\u662f\u4ece\u4e00\u4e2a\u5f88\u597d\u7684\u4f4d\u7f6e\u5f00\u59cb\u7684\u3002\u5b83\u5728\u542f\u52a8\u65f6\u6ca1\u6709\u4fe1\u4efb\uff0c\u5e76\u4e14\u63d0\u4f9b\u76f8\u5f53\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u3002\u6211\u4e2a\u4eba\u4e0d\u559c\u6b22\u7684\u4e00\u4ef6\u4e8b\u662f\u6709-A\u6807\u5fd7\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u5728\u8bf4\u201c\u54e6\uff0c\u8036\uff0c\u5141\u8bb8\u4e00\u5207\u201d\uff0c\u8fd9\u5bf9\u4e8e\u6cae\u4e27\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u505a\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u5f04\u6e05\u695a\u4ed6\u4eec\u771f\u6b63\u9700\u8981\u7684\u662f\u4ec0\u4e48\u3002\n\u4e5f\u5f88\u96be\u6253\u7834\u8fd9\u4e9b\u6743\u9650\uff0c\u8bf4\u201c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u8fd9\u91cc\u7684\u53e6\u4e00\u6bb5\u4ee3\u7801\u4e0d\u80fd\u201d\uff0c\u6216\u8005\u5f53\u4ee3\u7801\u63d0\u793a\u63d0\u5347\u6743\u9650\u65f6\uff0c\u8fd9\u4e9b\u4ee3\u7801\u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\u5e0c\u671b\u6211\u4eec\u80fd\u627e\u51fa\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u7684\u673a\u5236\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u5728\u8fd0\u884c\u65f6\u5c06\u662f\u6709\u6548\u548c\u9ad8\u6027\u80fd\u7684\u4e1c\u897f\uff0c\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e9b\u6311\u6218\u3002\n\u4e0d\u8fc7\uff0c\u5728\u6211\u770b\u6765\uff0c\u6700\u8fd1\u7684\u4e00\u4e2a\u53d8\u5316\u662f\uff0cDeno\u4e0d\u518d\u5141\u8bb8\u4f60\u964d\u4f4e\u8fdb\u53e3\u5546\u54c1\u7684\u7b49\u7ea7\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u7684\u53d8\u5316\u3002\u5982\u679c\u67d0\u4e2a\u5185\u5bb9\u662f\u4ecehttps\uff1a//\u5bfc\u5165\u7684\uff0c\u5219\u5b83\u53ea\u80fd\u4ece\u5176\u4ed6https\uff1a//\u4f4d\u7f6e\u5bfc\u5165\u3002\u8fd9\u9075\u5faa\u4e86\u4e0d\u80fd\u964d\u7ea7\u4f20\u8f93\u7684\u6d4f\u89c8\u5668\u6a21\u578b\u3002\u6211\u4ecd\u7136\u8ba4\u4e3a\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u627c\u6740\u4efb\u4f55\u4e0d\u50cf\u670d\u52a1\u5de5\u4f5c\u8005\u9700\u8981https://\uff0c\u90a3\u6837\u7684\u8fdc\u7a0b\u8fdb\u53e3\u662f\u4ef6\u597d\u4e8b\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u62ed\u76ee\u4ee5\u5f85\u3002\n\u6211\u8ba4\u4e3a\u6211\u4eec\u9700\u8981\u5766\u7387\u5730\u8c08\u8bbaNPM\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u8001\u5b9e\u8bf4\uff0c\u5b83\u574f\u4e86\u3002\u4e00\u4e2a\u652f\u6301\u6bcf\u5468\u4e0b\u8f7d\u548c\u5b89\u88c55\u884c\u4ee3\u78013000\u4e07\u6b21\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5728\u8fc7\u53bb9\u5e74\u91cc\u4e00\u76f4\u5b58\u5728\u4e8e\u6bcf\u4e2a\u6d4f\u89c8\u5668\u4e2d\uff0c\u800cNode.jis\u662f\u4e00\u4e2a\u652f\u79bb\u7834\u788e\u7684\u751f\u6001\u7cfb\u7edf\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b9e\u9645\u4ee3\u7801\u662f132\u5b57\u8282\uff0c\u4f46\u662f\u5305\u5927\u5c0f\u662f3.4KB\u3002\u53ef\u8fd0\u884c\u4ee3\u7801\u662f\u5305\u5927\u5c0f\u76843.8%\u3002\u201c\u8fd9\u5f88\u597d\uff01\u201d\n\u6211\u7684\u89c2\u70b9\u662f\uff0c\u8fd9\u5176\u4e2d\u6d89\u53ca\u5230\u51e0\u4e2a\u56e0\u7d20\u3002\u5f88\u5927\u4e00\u90e8\u5206\u539f\u56e0\u662f\u6211\u4eec\u98a0\u5012\u4e86\u6a21\u578b\uff0c\u6211\u8bf4\u8fc7Deno\u662f\u4ee3\u7801\u7684\u6d4f\u89c8\u5668\u3002\u95ee\u9898\u662f\uff0c\u8fd9\u79cd\u5411\u540e\u7684\u6a21\u5f0f\u5df2\u7ecf\u5f71\u54cd\u4e86\u6211\u4eec\u521b\u5efa\u7f51\u7ad9\u7684\u65b9\u5f0f\u3002\u867d\u7136\u6211\u4eec\u6ca1\u6709\u4e2d\u592e\u6ce8\u518c\u8868\uff0c\u4f46\u5f53\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u7f51\u7ad9\u65f6\uff0c\u6211\u4eec\u4e0b\u8f7d\u6211\u4eec\u4f9d\u8d56\u7684\u6240\u6709\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u70d8\u7119\u6210\u6211\u4eec\u52a0\u8f7d\u5230\u670d\u52a1\u5668\u4e0a\u7684\u4e1c\u897f\uff0c\u7136\u540e\u6bcf\u4e2a\u7528\u6237\u5c06\u4e00\u5806\u4ee3\u7801\u4e0b\u8f7d\u5230\u4ed6\u4eec\u7684\u672c\u5730\u673a\u5668\u4e0a\u3002\u4e00\u4e9b\u8bc1\u636e\u8868\u660e\uff0c\u4e0b\u8f7d\u4ee3\u7801\u4e2d\u53ea\u670910%\u5de6\u53f3\u662f\u8be5\u7ad9\u70b9\u6216Web\u5e94\u7528\u7a0b\u5e8f\u72ec\u6709\u7684\uff0c\u5176\u4f59\u7684\u90fd\u662f\u6211\u4eec\u4e0b\u8f7d\u5230\u5f00\u53d1\u5de5\u4f5c\u7ad9\u5e76\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u6240\u6709\u4ee3\u7801\u3002\u8fd9\u4e00\u6a21\u5f0f\u6b63\u5728\u88ab\u6253\u7834\uff0c\u8fd9\u662f\u79ef\u96ea\u7b49\u89e3\u51b3\u65b9\u6848\u8bd5\u56fe\u89e3\u51b3\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u53e6\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f\u6211\u4eec\u7684\u4f9d\u8d56\u9879\u6ca1\u6709\u4e0e\u6211\u4eec\u7684\u4ee3\u7801\u8026\u5408\u3002\u6211\u4eec\u5c06\u4f9d\u8d56\u9879\u653e\u5728Package.json\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e86Json\uff0c\u90a3\u4e48\u65e0\u8bba\u8be5\u4ee3\u7801\u662f\u5426\u4f7f\u7528\uff0c\u90fd\u662f\u5b8c\u5168\u89e3\u8026\u7684\u3002\u867d\u7136\u6211\u4eec\u7684\u4ee3\u7801\u8868\u8fbe\u4e86\u6211\u4eec\u5728\u5176\u4ed6\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5185\u5bb9\uff0c\u4f46\u5b83\u4e0e\u8be5\u4ee3\u7801\u7684\u7248\u672c\u662f\u975e\u5e38\u677e\u6563\u8026\u5408\u7684\u3002\u5b83\u5305\u542b\u5728Package.json\u4e2d\uff0c\u5c3d\u7ba1\u5b83\u5bf9\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u6709\u6700\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u662f\u5b9e\u9645\u4f7f\u7528\u4f9d\u8d56\u4ee3\u7801\u7684\u4ee3\u7801\u3002\n\u8fd9\u5c31\u628a\u6211\u4eec\u5e26\u5230\u4e86Deno\u6a21\u5f0f\uff0c\u6211\u559c\u6b22\u79f0\u4e4b\u4e3aDep-in-JS\uff0c\u56e0\u4e3a\u6240\u6709\u9177\u7684\u5b69\u5b50\u90fd\u5728\u505a*-in-JS\u7684\u4e8b\u60c5\u3002\u663e\u5f0f\u5730\u5c06\u6211\u4eec\u7684\u5916\u90e8\u4f9d\u8d56\u9879\u58f0\u660e\u4e3aURL\u610f\u5473\u7740\u4ee3\u7801\u4f9d\u8d56\u4e8e\u5176\u4ed6\u4ee3\u7801\u662f\u7b80\u6d01\u548c\u6e05\u6670\u7684\uff0c\u5e76\u4e14\u6211\u4eec\u7684\u4ee3\u7801\u548c\u4f9d\u8d56\u9879\u7d27\u5bc6\u8026\u5408\u5728\u4e00\u8d77\u3002\u5982\u679c\u8981\u67e5\u770b\u4f9d\u8d56\u5173\u7cfb\u56fe\uff0c\u53ea\u9700\u5bf9\u672c\u5730\u6216\u8fdc\u7a0b\u6a21\u5757\u4f7f\u7528Deno\u4fe1\u606f\uff1a\n$DENO INFO https://deno.land/x/oak/examples/server.tslocal\uff1a$deno/deps/https/deno.land/d355242ae8430f3116c34165bdae5c156dca21aeef521e45acb51fcd21c9f724type\uff1a\u7c7b\u578b\u811a\u672c\u7f16\u8bd1\uff1a$deno/gen/https/deno.land/x/oak/examples/server.ts.jsmap\uff1a$deno/gen/https/deno.land/x/oak/examples/server.ts.js.mapdeps:https://deno.land/x/oak/examples/server.ts https://deno.land/std@0.53.0/fmt/colors\u251c\u2500\u2500\u3002.TS https://deno.land/x/oak/mod.ts https://deno.land/x/oak/application.ts https://deno.land/x/oak/context.ts https://deno.land/x/oak/cookies.ts https://deno.land/x/oak/httpError.ts https://deno.land/x\u2514\u2500\u252c\u251c\u2500\u252c\u2502\u251c\u2500\u252c\u2502\u2502\u251c\u2500\u2500\u2502\u2502\u251c\u2500\u252c\u2502\u2514\u2500\u252c.ts\u3002/Oak/Deps.ts https://deno.land/std@0.53.0/hash/sha256.ts https://deno.land/std@0.53.0/http/server.ts https://deno.land/std@0.53.0/encoding/utf8.ts https://deno.land/std@0\u2502\u251c\u2500\u2500\u2502\u251c\u2500\u252c\u2502\u251c\u2500\u2500\u2502\u251c\u2500\u252cOak\u3002.53.0/io/bufio.ts https://deno.land/std@0.53.0/io/util.ts--snip--\u2502\u251c\u2500\u252c\u3002\nDeno\u5bf9\u4ee3\u7801\u7684\u201c\u7248\u672c\u201d\u6ca1\u6709\u5f3a\u70c8\u7684\u770b\u6cd5\u3002URL\u5c31\u662fURL\uff0c\u867d\u7136Deno\u9700\u8981\u9002\u5f53\u7684\u5a92\u4f53\u7c7b\u578b\u624d\u80fd\u7406\u89e3\u5982\u4f55\u5904\u7406\u4ee3\u7801\uff0c\u4f46\u662f\u6240\u6709\u5173\u4e8e\u63d0\u4f9b\u4ec0\u4e48\u4ee3\u7801\u7684\u201c\u610f\u89c1\u201d\u90fd\u7559\u7ed9Web\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5176\u6838\u5fc3\u5185\u5bb9\u7684\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff0c\u6216\u8005\u6267\u884cURL\u5230\u5b83\u60f3\u8981\u7684\u8d44\u6e90\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u201c\u795e\u5947\u201d\u6620\u5c04\u3002\u5fb7\u8bfa\u4e0d\u5728\u4e4e\u3002\u4f8b\u5982\uff0chttps://deno.land/x/\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2aURL\u91cd\u5b9a\u5411\u670d\u52a1\u5668\uff0c\u5b83\u91cd\u5199URL\u4ee5\u5728\u91cd\u5b9a\u5411\u7684URL\u4e2d\u5305\u542bGIT\u63d0\u4ea4\u5f0f\u7684\u5f15\u7528\u3002\u56e0\u6b64\uff0chttps://deno.land/x/oak@v4.0.0/mod.ts\u53d8\u6210\u4e86https://raw.githubusercontent.com/oakserver/oak/v4.0.0/mod.ts\uff0c\uff0cGitHub\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u7248\u672c\u5316\u6a21\u5757\u3002\n\u5f53\u7136\uff0c\u5728\u4ee3\u7801\u5e93\u4e2d\u4f20\u64ad\u201c\u7248\u672c\u5316\u201d\u7684\u8fdc\u7a0bURL\u6ca1\u6709\u591a\u5927\u610f\u4e49\uff0c\u6240\u4ee5\u4e0d\u8981\u8fd9\u4e48\u505a\u3002\u4e0d\u8fc7\uff0c\u4f9d\u8d56\u9879\u53ea\u662f\u4f5c\u4e3a\u4ee3\u7801\u7f16\u5199\u7684\u4e00\u5927\u4f18\u70b9\u662f\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u65b9\u5f0f\u6765\u6784\u5efa\u5b83\u4eec\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u7ea6\u5b9a\u662f\u4f7f\u7528des.ts\uff0c\u5b83\u53ef\u4ee5\u91cd\u65b0\u5bfc\u51fa\u60a8\u53ef\u80fd\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\u9879\u3002\u770b\u770bOak\u670d\u52a1\u5668\u7684\u7248\u672c\uff1a\n//\u7248\u6743\u6240\u67092018-2020\u6a61\u6811\u7f51\u4f5c\u8005\u3002\u7248\u6743\u6240\u6709\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u8bb8\u53ef\u8bc1\u3002//\u6b64\u6587\u4ef6\u5305\u542bOak\u6240\u4f9d\u8d56\u7684\u5916\u90e8\u4f9d\u8d56\u9879//`std`\u4f9d\u8d56\u9879\u4ece&#34\uff1bhttps://deno.land/std@0.51.0/hash/sha256.ts&#34\uff1b\uff1bexport{Response\uff0cServe\uff0cServer\uff0cServerRequest\uff0cServeTLS}\u4ece&#34\uff1bhttps://deno.land/std@0.51.0/http/server.ts&#34\uff1b\uff1bexport{STATUS\uff0cSTATUS_TEXT\uff0c}\u5bfc\u51fa{HmacSha256}\uff0c\u6765\u81ea&#34\uff1bhttps://deno.land/std@0.51.0/http/http_status.ts&#34\uff1b\uff1bexport{Cookie\uff0cCookie\uff0csetCookie\uff0cgetCookie\uff0cDelCookie\uff0c}\u6765\u81ea&#34\uff1bhttps://deno.land/std@0.51.0/http/cookie.ts&#34\uff1b\uff1bexport{basename\uff0cextname\uff0cJoin\uff0cisAbsolute\uff0cNormize\uff0cParse\uff0cResolve\uff0cSep}\u6765\u81ea&#34\uff1bhttps://deno.land/std@0.51.0/path/mod.ts&#34\uff1b\uff1b\u7684{BaseName\uff0cExtName\uff0cJoin\uff0cisAbsolute\uff0cNormize\uff0cParse\uff0cResolve\uff0cSep\u4ece&#34\uff1b\u5bfc\u51fa{assert}\u3002https://deno.land/std@0.51.0/testing/asserts.ts&#34\uff1b\uff1b//\u7b2c\u4e09\u65b9\u4f9d\u8d56\u9879\u4ece&#34\uff1bhttps://deno.land/x/media_types@v2.3.1/m\u5bfc\u51fa{Content Type\uff0cLookup\uff0c}\n\u6211\u521b\u5efa\u4e86Oak\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7\u5927\u7ea640\u4e2a\u7248\u672c\u7684Deno\u548cDeno STD\u5e93\u7ef4\u62a4\u4e8618\u4e2a\u6708\uff0c\u5305\u62ec\u5c06media_type\u4ece\u5185\u90e8\u79fb\u52a8\u5230OAK\uff0c\u518d\u79fb\u5230STD\u5e93\uff0c\u7ed3\u679c\u53ea\u662f\u5c06\u5176\u4ece\u6807\u51c6\u5e93\u201c\u5f39\u51fa\u201d\u6210\u4e3a\u81ea\u5df1\u7684\u4e1c\u897f\u3002\u6211\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u201c\u563f\uff0c\u6211\u9700\u8981\u80cc\u5305\u7ecf\u7406\u5e2e\u6211\u7ba1\u7406\u8fd9\u4ef6\u4e8b\u201d\u3002\nTypeScript\u7684\u597d\u5904\u4e4b\u4e00\u662f\u60a8\u53ef\u4ee5\u5168\u9762\u9a8c\u8bc1\u60a8\u7684\u4ee3\u7801\u4e0e\u5176\u4ed6\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\u5982\u679c\u60a8\u7684\u4f9d\u8d56\u9879\u662f\u4e3aDeno\u7f16\u5199\u7684\u201c\u539f\u59cb\u201d\u6253\u5b57\u811a\u672c\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u662f\u5047\u8bbe\u60a8\u5e0c\u671b\u5229\u7528\u5c06\u6253\u5b57\u811a\u672c\u9884\u5904\u7406\u4e3aJavaScript\u7684\u4f18\u52bf\uff0c\u4f46\u4ecd\u7136\u80fd\u591f\u5b89\u5168\u5730\u4f7f\u7528\u8fdc\u7a0b\u4ee3\u7801\u3002Deno\u652f\u6301\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u6700\u65e0\u7f1d\u7684\u662f\u5bf9X-TypeScript-Types\u5934\u6587\u4ef6\u7684\u652f\u6301\u3002\u6b64\u6807\u5934\u5411Deno\u6307\u793a\u7c7b\u578b\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5728\u5bf9\u60a8\u6240\u4f9d\u8d56\u7684JavaScript\u6587\u4ef6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u65f6\u53ef\u4ee5\u4f7f\u7528\u8be5\u6807\u5934\u3002Pika CDN\u652f\u6301\u8fd9\u4e00\u70b9\u3002CDN\u4e0a\u53ef\u7528\u7684\u3001\u5177\u6709\u5173\u8054\u7c7b\u578b\u7684\u4efb\u4f55\u5305\u90fd\u5c06\u63d0\u4f9b\u8be5\u6807\u5934\uff0cDeno\u4e5f\u5c06\u83b7\u53d6\u8fd9\u4e9b\u7c7b\u578b\u5e76\u4f7f\u7528\u8be5WHENTYPE\u68c0\u67e5\u6587\u4ef6\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u53ef\u80fd\u4ecd\u7136\u9700\u8981\u5c06\u8fdc\u7a0b(\u6216\u672c\u5730)\u4f9d\u8d56\u9879\u201c\u91cd\u65b0\u6620\u5c04\u201d\u5230\u4ee3\u7801\u4e2d\u8868\u8fbe\u7684\u5185\u5bb9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u7a33\u5b9a\u7684\u5bfc\u5165\u6620\u5c04\u5b9e\u73b0\u3002\u8fd9\u662f\u4e00\u4e2a\u63d0\u6848\u89c4\u8303\uff0c\u662fW3C\u5b75\u5316\u5668\u7684\u4e00\u90e8\u5206\uff0c\u6d4f\u89c8\u5668\u6807\u51c6\u5c31\u51fa\u81ea\u8be5\u5b75\u5316\u5668\u3002\u5b83\u5141\u8bb8\u63d0\u4f9b\u4e00\u4e2a\u6620\u5c04\uff0c\u8be5\u6620\u5c04\u5c06\u4ee3\u7801\u4e2d\u7684\u7279\u5b9a\u4f9d\u8d56\u9879\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u8d44\u6e90\uff0c\u65e0\u8bba\u662f\u672c\u5730\u6587\u4ef6\u8fd8\u662f\u8fdc\u7a0b\u6a21\u5757\u3002\n\u6211\u4eec\u5728\u5fb7\u8bfa\u5b9e\u65bd\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u771f\u7684\u5e0c\u671b\u5b83\u80fd\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002\u9057\u61be\u7684\u662f\uff0c\u8fd9\u53ea\u662fChrome\u7684\u539f\u521b\u8bd5\u9a8c\uff0c\u8fd8\u6ca1\u6709\u5f97\u5230\u66f4\u5e7f\u6cdb\u7684\u91c7\u7528\u3002\u8fd9\u5bfc\u81f4\u6211\u4eec\u628a\u5b83\u653e\u5728Deno 1.0\u7684--\u4e0d\u7a33\u5b9a\u6807\u5fd7\u540e\u9762\u3002\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6b7b\u80e1\u540c\u7684\u98ce\u9669\uff0c\u5e94\u8be5\u907f\u514d\u3002\n\u6211\u6000\u7591\u5f88\u591a\u4eba\u4ecd\u7136\u5e26\u7740\u5bf9Deno\u7684\u6a21\u578b\u7684\u53cd\u5bf9\u6e05\u5355\u800c\u6765\u3002\u6211\u8ba4\u4e3a\u5fb7\u8bfa\u8bd5\u56fe\u91c7\u53d6\u7684\u7b56\u7565\uff0c\u4e5f\u662f\u6211\u975e\u5e38\u8d5e\u540c\u7684\uff0c\u662f\u5728\u771f\u6b63\u7684\u95ee\u9898\u51fa\u73b0\u65f6\u5904\u7406\u5b83\u4eec\u3002\u6211\u542c\u5230\u7684\u8bb8\u591a\u53cd\u5bf9\u610f\u89c1\u90fd\u6765\u81ea\u90a3\u4e9b\u521a\u63a5\u89e6Deno\u7684\u4eba\uff0c\u4ed6\u4eec\u6ca1\u6709\u4f7f\u7528\u8fc7Deno\uff0c\u4e5f\u6ca1\u6709\u8bd5\u56fe\u7406\u89e3\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u5982\u679c\u6211\u4eec\u96c6\u4f53\u9047\u5230\u95ee\u9898\uff0c\u5e76\u4e14Deno CLI\u4e2d\u6709\u8feb\u5207\u9700\u8981\u66f4\u6539\u7684\u4e1c\u897f\uff0c\u6211\u76f8\u4fe1\u5b83\u4f1a\u53d1\u751f\uff0c\u4f46\u662f\u5f88\u591a\u95ee\u9898\u6839\u672c\u4e0d\u5b58\u5728\uff0c\u6216\u8005\u6709\u5176\u4ed6\u65b9\u6cd5\u6765\u89e3\u51b3\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u60a8\u7684\u8fd0\u884c\u65f6\u6709\u5f3a\u70c8\u7684\u610f\u89c1\u6216\u8026\u5408\u5230\u5916\u90e8\u7a0b\u5e8f\u6765\u7ba1\u7406\u60a8\u7684\u4ee3\u7801\u3002\n\u56e0\u6b64\uff0c\u6211\u5bf9\u60a8\u7684\u6311\u6218\u662f\uff0c\u7a0d\u5fae\u8003\u8651\u4e00\u4e0b\u6ca1\u6709\u5305\u7ba1\u7406\u5668\u6216\u96c6\u4e2d\u5305\u5b58\u50a8\u5e93\uff0c\u770b\u770b\u8fdb\u5c55\u5982\u4f55\u3002\u4f60\u53ef\u80fd\u518d\u4e5f\u56de\u4e0d\u53bb\u4e86\uff01", "note_en": "I started contributing to Deno soon after Ry made the prototype visible inMay 2018. The most frequent question that people have is \u201cwhere is the packagemanager?\u201d which often times isn\u2019t even in the form of a question. It isstatements like \u201cI thought Deno took security seriously, and just downloadingresources off the internet is insecure.\u201d or \u201cHow can I possibly manage mydependencies?\u201d\n In my opinion, we need to shift our mental model. Lots of folks take theubiquity of package managers and centralized code registries as a requirementto have a package manager and a centralized code registries. Because they existdoesn\u2019t mean they are required. They came into existence because they solvedproblems in a particular way, and we have just accepted them as the only way tosolve that problem. I would argue that isn\u2019t true.\n  In order to publish a website, we don\u2019t login to a central Google server, andupload our website to the registry. Then if someone wants to view our website,they use a command line tool, which adds an entry to our  browser.json file onour local machine and goes and fetches the whole website, plus any otherwebsites that the one website links to to our local  websites directory beforewe then fire up our browser to actually look at the website. That would beinsane, right? So why accept that model for running code?\n The Deno CLI works like a browser, but for code. You import a URL in the codeand Deno will go and fetch that code and cache it locally, just like a browser.Also, like a browser, your code runs in a sandbox, which has zero trust of thecode you are running, irrespective of the source. You, the person invoking thecode, get to tell that code what it can and can\u2019t do, externally. Also, like abrowser, code can ask you permission to do things, which you can choose to grantor deny.\n The HTTP protocol provides everything that is needed to provide informationabout the code, and Deno tries to fully leverage that protocol, without havingto create a new protocol.\n  The first thing to think about is that, like a browser, the Deno CLI doesn\u2019twant to have any opinions about what code you run. It lays out the rules of howcode is fetched, and how it sandboxes itself from the machine it runs on. In myopinion, that is as much of an opinion a runtime should have.\n In the Node.js/npm ecosystem, we have conflated the management of code on ourlocal machine, with a centralized registry of code to help facilitate discovery.In my opinion, both have really bad flaws.\n Back in the early days of the internet, we experimented with npm type ofdiscoverability. You would go add your website to Yahoo! under the rightcategorization and people would come along, maybe use the search function, butit was all structured based on the opinions of those providing the content, notreally based on optimizing for the needs of the consumer. Eventually along cameGoogle. Why did Google win? Because it was useful. It indexed websites in away that matched simple expressions of need (search terms) with the mostrelevant web pages that met that need, looking at multiple factors, includingmeta data provided the content provider as one factor in the mix.\n While we don\u2019t have that model quite yet for code for Deno, it is a model thatworks. In addition, we use Google because it solves problems for us, instead ofbeing told \u201cyou must use Google\u201d, as well as there are also other viablealternatives to Google.\n I got into a bit of a debate with Laurie Voss on twitter, someone who knows afair deal about the npm ecosystem I would say. He argued that Deno needed apackage manager, and this blog post is a longer winded version of the thoughtsI wanted to express, but Laurie raised a very valid point.\n And yet there all our code is, in the same place, on GitHub, because the problems of maintaining a software ecosystem are social and reputational ones that lead to a centralized system, despite there being no technical requirement that it be that way.\n\u2014 Laurie Voss (@seldo)  May 15, 2020\n GitHub has become the home for open source code, because it was useful andsolved problems, and built on top of the  de facto source code versioning tool,git. From the Deno CLI perspective, there should be no technical restrictionsto where you source code from, it is up to the wider eco-system to create andevolve ways to make code for Deno discoverable, probably in innovative ways thatcould never have been conceived by those of us creating the CLI.\n  In the npm eco-system, this became a problem. Because of the heavy reliance onsemantic versioning, and the complex dependency graphs that tend to come fromthe Node.js/npm eco-system, having a repeatable build became a real problem.Yarn introduced the concept of lock files, of which npm followed suit.\n My personal feeling is it was a bit of the tail wagging the dog, in that thebehaviours of developers in the eco-system created a problem that then neededan imperfect solution to fix it. Any of us that have lived with the eco-systemfor a long time know that the fix to a lot of issues is rm -rf node_modules package-lock.json &amp;&amp; npm install.\n  That being said, Deno has two solutions for that. First, is that Deno cachesmodules. That cache can be checked into your source control, and the --cached-only flag will ensure that there is not attempts to retrieve remotemodules. The  DENO_DIR environment variable can be used to specify where thecache is located to provide further flexibility.\n Second, Deno supports lock files.  --lock lock.json --lock-write would writeout a lock file with hashes of all the dependencies for a given workload. Thiswould be used to validate future runs when the  --lock lock.json is used.\n There are also a couple other commands that make managing repeatable builds. deno cache would resolve all the dependencies for a supplied module andpopulate the Deno cache.  deno bundle can be used to generate a single file\u201cbuild\u201d of a workload which all the dependencies are resolved and included inthat file, so only that single file is needed for future  deno run commands.\n  This is another area where I think we have a skewed mental model. For whateverreason, we put trust in code that is in a centralized registry. We don\u2019t eventhink about it. Not only that, we trust that that code has fully vetted all ofits dependencies and that those are to be trusted to. We do a quick search andtype in  npm install some-random-package and think \u201cThis is Fine!\u201d I argue therich npm package eco-system has lulled is into a sense of complacency.\n To compensate for this laxness and complacency, we implement security monitoringsoftware in our tool chains, to analyse our dependencies and the thousands uponthousand lines of code to let us know that maybe some of the code isexploitable. Corporations setup private registries to host packages that mightbe vetted slightly more than the single public registry.\n It feels like there is an elephant in the room here. The best strategy is weshouldn\u2019t trust any code. Once we have that established, then opening it backup becomes a little be easier. But we are lying to ourselves if we think apackage manager and a centralised registry solve this problem, or evensubstantially help with this problem. In fact, I argue they make use let ourguards down. \u201cWell it is on npm, if it were bad for me, surely someone wouldtake it down.\u201d\n Deno in this aspect isn\u2019t quite as done as I think it should be, but it isstarting from a good position. It has zero trust at startup, and providesfairly fine grained permissions. One of the things I personally dislike is thatthere is the  -A flag, which is basically saying \u201coh yeah allow everything\u201dwhich is such an easy thing for a frustrated developer to do instead of figuringout what they really need.\n It is also hard to break down those permissions, to say \u201cthis code can do this,but this other code over here can\u2019t\u201d or when code prompts to escalate privilegeswhere is that code coming from. Hopefully we can figure out an easy to usemechanism coupled with something that would be effective and performant atruntime to try to solve those challenges.\n A recent change though, which is a good one, in my opinion, is that Deno nolonger allows you to downgrade your imports. If something is imported from https:// then it can only import from other  https:// locations. Thisfollows the browser model of not being able to downgrade transport. I stillthink longer term it would be good to kill off any remote imports that aren\u2019tover  https://, much like Service Workers require HTTPS, so we will see whatthe future holds.\n  I think we need to talk frankly about dependencies in the npm ecosystem. To behonest, it is broken. An ecosystem that enables 5 lines of codeto be downloaded and installed  30 million times a week for code thathas been in every browser for the last 9 years and never was needed in Node.jsis a broken ecosystem. This one example, the actual code is 132 bytes, but thepackage size is 3.4kb. The runnable code is 3.8% of the package size. \u201cThis isFine!\u201d\n My opinion is that there are several factors involved in this. A big part of itis that we have the model inverted, which I talked about Deno being a browserfor code. The problem is that this backwards model has infected how we createwebsites. While we don\u2019t have a central registry, when we build a website,we download all the code we depend up and bake it into something that we loadup on a server, and then each user downloads a bunch of code to their localmachine. Some evidence is that only around 10% of that code that is downloadedis unique to that site or web application, the rest is all that code we aredownloading to our development workstation and bundling up. This model beingbroken are some of the problems solutions like Snowpack are trying to solve.\n Another significant problem is that our dependencies are not coupled with ourcode. We put dependencies in our  package.json but if our code actually usesthat code or not is totally decoupled. While our code expresses what we areusing out of that other code, it is very loosely coupled to the version of thatcode. That is contained in the  package.json, though it has the biggest impacton the code we write, because it is the code that is actually consuming thedependent code.\n This leads us to the Deno model, which I like to call  Deps-in-JS, since allthe cool kids are doing  *-in-JS things. Explicitly stating our externaldependencies as URLs means that the code depends upon the other code is conciseand clear, and our code and dependencies are tightly coupled together. If youwant to see that dependency graph, you simply need to use  deno info with alocal or remote module:\n $ deno info https://deno.land/x/oak/examples/server.tslocal: $deno/deps/https/deno.land/d355242ae8430f3116c34165bdae5c156dca21aeef521e45acb51fcd21c9f724type: TypeScriptcompiled: $deno/gen/https/deno.land/x/oak/examples/server.ts.jsmap: $deno/gen/https/deno.land/x/oak/examples/server.ts.js.mapdeps:https://deno.land/x/oak/examples/server.ts \u251c\u2500\u2500 https://deno.land/std@0.53.0/fmt/colors.ts \u2514\u2500\u252c https://deno.land/x/oak/mod.ts \u251c\u2500\u252c https://deno.land/x/oak/application.ts \u2502 \u251c\u2500\u252c https://deno.land/x/oak/context.ts \u2502 \u2502 \u251c\u2500\u2500 https://deno.land/x/oak/cookies.ts \u2502 \u2502 \u251c\u2500\u252c https://deno.land/x/oak/httpError.ts \u2502 \u2502 \u2502 \u2514\u2500\u252c https://deno.land/x/oak/deps.ts \u2502 \u2502 \u2502 \u251c\u2500\u2500 https://deno.land/std@0.53.0/hash/sha256.ts \u2502 \u2502 \u2502 \u251c\u2500\u252c https://deno.land/std@0.53.0/http/server.ts \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 https://deno.land/std@0.53.0/encoding/utf8.ts \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c https://deno.land/std@0.53.0/io/bufio.ts \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c https://deno.land/std@0.53.0/io/util.ts--snip--\n Deno has no strong opinions around \u201cversions\u201d of code. A URL is a URL is a URL.While Deno requires an appropriate media type in order to understand how totreat code, all the \u201copinions\u201d about what code to serve up is left up to theweb server. A server can implement semantic versioning to its hearts content,or do any sort of \u201cmagical\u201d mapping of URLs to resources it wants. Deno doesn\u2019tcare. For example  https://deno.land/x/ is effectively nothing but a URLredirect server, where it rewrites URLs to include a git commit-ish referencein the redirected URL. So  https://deno.land/x/oak@v4.0.0/mod.ts becomes https://raw.githubusercontent.com/oakserver/oak/v4.0.0/mod.ts, which GitHubserves up a nice versioned module.\n Of course spreading \u201cversioned\u201d remote URLs throughout your codebase doesn\u2019tmake a lot of sense, so don\u2019t do that. The great thing about the dependenciesjust being code though is that you can structure them any way you want to. Acommon convention is to use a  deps.ts which re-exports all the dependenciesyou might want. Take a look at the one for oak server:\n // Copyright 2018-2020 the oak authors. All rights reserved. MIT license.// This file contains the external dependencies that oak depends upon// `std` dependenciesexport { HmacSha256 } from &#34;https://deno.land/std@0.51.0/hash/sha256.ts&#34;;export { Response, serve, Server, ServerRequest, serveTLS,} from &#34;https://deno.land/std@0.51.0/http/server.ts&#34;;export { Status, STATUS_TEXT,} from &#34;https://deno.land/std@0.51.0/http/http_status.ts&#34;;export { Cookies, Cookie, setCookie, getCookies, delCookie,} from &#34;https://deno.land/std@0.51.0/http/cookie.ts&#34;;export { basename, extname, join, isAbsolute, normalize, parse, resolve, sep,} from &#34;https://deno.land/std@0.51.0/path/mod.ts&#34;;export { assert } from &#34;https://deno.land/std@0.51.0/testing/asserts.ts&#34;;// 3rd party dependenciesexport { contentType, lookup,} from &#34;https://deno.land/x/media_types@v2.3.1/mod.ts&#34;;\n I created oak server and maintained for 18 months through about 40 releases ofDeno and the Deno  std library, including moving of  media_types from internalto oak, out to the  std library, to only have it be \u201cejected\u201d from the  stdlibrary to be its own thing. Not once did I think to myself \u201chey, I need apackage manager to manage this for me\u201d.\n One of the benefits of TypeScript is that you can get comprehensive validationof compatibility of your code with other code. If your dependencies are \u201craw\u201dTypeScript written for Deno, this is great, but let\u2019s say that you want to takeadvantage of pre-processing of the TypeScript to JavaScript, but still have theability to consume that remote code safely. Deno supports a couple differentways to allow that to happen, but the most seamless is the support for the X-TypeScript-Types header. This header indicates to Deno where a types fileis located which can be used when type checking the JavaScript file that youare depending upon.  Pika CDN supports this. Anypackages that are available on the CDN that have types associated with them willserve up that header and Deno will also fetch those types and use that whentype checking the file.\n All this being said, there may still be a need to \u201cremap\u201d a remote (or local)dependency to what is expressed in the code. In this case, the unstableimplementation of  import-maps can beused. It is a proposal specification that is part of the W3C incubator wherebrowser standards come out of. It allows a map to be provided which will mapa particular dependency in code to another resource, be it a local file or aremote module.\n We had it implemented in Deno for an extended period of time, as we had reallyhoped that it would become adopted widely. Sadly, it was only an origin trial in Chrome andhasn\u2019t gotten wider adoption yet. This led us to putting it behind the --unstable flag for Deno 1.0. My personal opinion is that it is still a bigrisk of being a dead end, and should be avoided.\n  I suspect a lot of people are still coming with a list of objections to themodel that Deno has. I think the strategy Deno has tried to take, which I amvery aligned to, is to deal with real problems when they arise. A lot of theobjections I hear are from people who are new to Deno, who haven\u2019t worked withit, who haven\u2019t tried to understand that there might be a different way.\n All that being said, if we collectively run into a problem and there is acompelling need to change something in the Deno CLI, I am confident that it willhappen, but a lot of problems simply don\u2019t exist, or there are other ways tosolve them that don\u2019t require your runtime to have strong opinions or be coupledto an external programme to manage your code.\n So my challenge to you is, flirt a bit with not having a package manager ora centralised package repository and see how it goes. You might never go back!", "posttime": "2020-05-29 09:13:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,browser", "title": "Deno\u662f\u4e00\u4e2a\u4ee3\u7801\u6d4f\u89c8\u5668", "title_en": "Deno Is a Browser for Code", "transed": 1, "url": "https://kitsonkelly.com/posts/deno-is-a-browser-for-code/", "via": "", "real_tags": ["\u4ee3\u7801", "browser"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004181, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u5e10\u6237", "note_en": "Create\r\t\t\t\t\t\t\t\t\t\t\tAccount", "posttime": "2020-05-29 09:13:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5236\u4f5c,electric,\u521b\u5efa", "title": "\u5229\u7528\u5f31\u7535\u573a\u5236\u4f5c\u6740\u6bd2\u53e3\u7f69", "title_en": "Using Weak Electric Fields to Make Virus-Killing Face Masks", "transed": 1, "url": "https://spectrum.ieee.org/the-human-os/biomedical/devices/using-weak-electric-fields-to-make-viruskilling-face-masks", "via": "", "real_tags": ["\u5236\u4f5c", "electric", "\u521b\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "a7c2118b381dd60f6fdd768b721657e5.jpg", "infoid": 1004178, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u7531\u516d\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u7cfb\u5217\u88ab\u8bbe\u8ba1\u6210\u53f2\u8bd7\u6e38\u620f\u7684\u201c\u50cf\u6211\u662f(\u4e8c\u5341\u4e94)\u4e2a\u4eba\u4e00\u6837\u89e3\u91ca\u201d\u7684\u7248\u672c\u3002\u6216\u8005\uff0c\u5982\u679c\u4f60\u60f3\u56de\u523020\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u5f53\u65f6\u6ce2\u6258\u9a6c\u514b\u8ba1\u7b97\u673a\u7cfb\u7edf\u516c\u53f8(Potomac Computer Systems)\u6210\u7acb\u7684\u65f6\u5019\uff0c\u201c\u611a\u4eba\u53f2\u8bd7\u6e38\u620f\u201d(Eic Games For Dummies)\u3002\u76f8\u5e94\u5730\uff0c\u6280\u672f\u672f\u8bed\u548c\u5176\u4ed6\u7ec6\u8282\u5df2\u88ab\u56de\u907f\u548c\u7b80\u5316\u3002\n\u53f2\u8bd7\u6e38\u620f\u7531\u8482\u59c6\u00b7\u65af\u5a01\u5c3c(Tim Sweeney)\u548c\u9a6c\u514b\u00b7\u96f7\u6069(Mark Rein)\u4e8e1991\u5e74\u521b\u7acb\u3002\u65af\u5a01\u5c3c\u662f\u9996\u5e2d\u6267\u884c\u5b98\u548c\u5927\u80a1\u4e1c/\u63a7\u80a1\u80a1\u4e1c\uff0c\u800c\u817e\u8baf\u62e5\u6709\u5927\u7ea640%\u7684\u80a1\u4efd\u3002\u4f5c\u4e3a\u4e00\u5bb6\u79c1\u8425\u516c\u53f8\uff0cEtic\u4e0d\u516c\u5f00\u62ab\u9732\u5176\u8d22\u52a1\u72b6\u51b5\u3002\u636e\u5a92\u4f53\u62a5\u9053\uff0c\u8be5\u516c\u53f8\u57282018\u5e74(\u4e0a\u4e00\u6b21\u878d\u8d44\u65f6)\u7684\u4f30\u503c\u7ea6\u4e3a150\u4ebf\u7f8e\u5143\uff0c\u6839\u636e\u5f6d\u535a\u793e(Bloomberg)\u7684\u8bf4\u6cd5\uff0c\u76ee\u524d\u6b63\u5728\u4ee5\u201c\u660e\u663e\u66f4\u9ad8\u201d\u7684\u4ef7\u683c\u7b79\u96c6\u66f4\u591a\u8d44\u91d1\u3002\n\u4e0eFacebook\u3001\u4e9a\u9a6c\u900a\u3001\u82f9\u679c\u3001\u5fae\u8f6f\u548c\u8c37\u6b4c\u4ef7\u503c6000\u4ebf\u81f31.4\u4e07\u4ebf\u7f8e\u5143\u76f8\u6bd4\uff0cEtic\u7684\u4f30\u503c\u5e76\u4e0d\u7b97\u9ad8\u3002\u7136\u800c\uff0cEtic\u6709\u6f5c\u529b\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u5927\u3001\u6700\u6709\u5f71\u54cd\u529b\u7684\u79d1\u6280\u516c\u53f8\u4e4b\u4e00\u3002\u5bf9\u4e8e\u90a3\u4e9b\u53ea\u77e5\u9053\u201c\u53f2\u8bd7\u201d\u662f\u70ed\u95e8\u89c6\u9891\u6e38\u620f\u201c\u5821\u5792\u4e4b\u591c\uff1a\u7687\u5ba4\u4f5c\u6218\u201d\u6807\u5fd7\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u6709\u4e9b\u5938\u5f20\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4f7f\u662f\u201c\u53f2\u8bd7\u201d\u6e38\u620f\u7684\u957f\u671f\u7c89\u4e1d\u4e5f\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u6837\u7684\u8bf4\u6cd5\u5f88\u5947\u602a\uff0c\u56e0\u4e3a\u5821\u5792\u4e4b\u591c\u5728\u4e09\u5e74\u5185\u521b\u9020\u7684\u6536\u5165\u6bd4\u201c\u53f2\u8bd7\u201d\u5176\u4ed6\u6e38\u620f\u5728\u51e0\u4e4e\u51e0\u5341\u5e74\u91cc\u521b\u9020\u7684\u6536\u5165\u8fd8\u8981\u591a\u3002\u4f46\u5728\u5e55\u540e\uff0c\u770b\u8d77\u6765\u53f2\u8bd7\u5c06\u8d8a\u6765\u8d8a\u6709\u53ef\u80fd\u6210\u4e3a\u793e\u4f1a\u6570\u5b57\u672a\u6765\u7684\u4e2d\u5fc3\u3002\n\u8fd9\u4e00\u6f5c\u529b\u6e90\u4e8eEtic\u7684\u6838\u5fc3\u4e1a\u52a1\u865a\u5e7b\u5f15\u64ce\u7684\u5b9e\u529b\uff0c\u8be5\u5f15\u64ce\u5df2\u7ecf\u88ab\u7528\u6765\u5236\u4f5c\u8bb8\u591a\u4e16\u754c\u9886\u5148\u7684\u6e38\u620f\u3001\u7535\u5f71\u548c\u865a\u62df\u4f53\u9a8c\u3002\u8fd9\u5f53\u7136\u5305\u62ec\u53f2\u8bd7\u516c\u53f8\u7684\u5821\u5792\u4e4b\u591c\uff0c\u5b83\u662f\u5168\u7403\u73a9\u5f97\u6700\u591a\u3001\u5229\u6da6\u6700\u9ad8\u7684\u7f51\u7edc\u4e16\u754c\u4e4b\u4e00\u3002\u8fd9\u6b3e\u201c\u6e38\u620f\u201d\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e0d\u5bb9\u5ffd\u89c6\uff1b\u7136\u800c\uff0c\u4e0d\u592a\u660e\u663e\u7684\u662f\uff0c\u8fd9\u79cd\u6210\u529f\u662f\u5982\u4f55\u8ba9Etic\u8fc5\u901f\u8f6c\u578b\u548c\u6269\u5927\u4e1a\u52a1\u7684\u3002\u8fd9\u5305\u62ec2018\u5e74\u53f2\u8bd7\u6e38\u620f\u5546\u5e97\u7684\u53d1\u5e03\uff0c2019\u5e74\u53f2\u8bd7\u5728\u7ebf\u670d\u52a1\u7684\u6d4b\u8bd5\u7248\u53d1\u5e03\u548c\u5bf9\u793e\u4ea4\u89c6\u9891\u5e94\u7528Houseparty\u7684\u6536\u8d2d\uff0c\u4ee5\u53ca2020\u5e74\u53f2\u8bd7\u6e38\u620f\u51fa\u7248\u7684\u63ed\u5e55\u3002Etic\u73b0\u5728\u62e5\u6709350\u591a\u4e07\u7528\u6237\u548c23\u4ebf\u793e\u4ea4\u7f51\u7edc\uff0c\u662f\u4e92\u8054\u7f51\u4e0a\u89c4\u6a21\u6700\u5927\u3001\u589e\u957f\u6700\u5feb\u7684\u793e\u4ea4\u7f51\u7edc\u4e4b\u4e00\u3002\nEPIC\u65e5\u76ca\u589e\u957f\u7684\u5b9e\u529b\u5df2\u7ecf\u8feb\u4f7f\u5a92\u4f53\u548c\u5a31\u4e50\u4e1a\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\u3002\u8fd9\u5305\u62ec\u8feb\u4f7f\u7d22\u5c3c(Sony)\u548c\u5fae\u8f6f(Microsoft)\u7b49\u84dd\u7b79\u80a1\u5de8\u5934\u5f00\u653e\u90e8\u5206\u5c01\u95ed\u7684\u6e38\u620f\u751f\u6001\u7cfb\u7edf\uff0c\u8bf4\u670d\u597d\u83b1\u575e\u4f20\u5947\u5de8\u5934\u5141\u8bb8\u4ed6\u4eec\u7684\u7279\u8bb8\u7ecf\u8425\u6743\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u5411\u4e16\u754c\u5c55\u793a\u66fe\u7ecf\u88ab\u8ba4\u4e3a\u53ea\u6709\u201cIRL\u201d\u7684\u4f53\u9a8c\uff0c\u6bd4\u5982\u548c\u670b\u53cb\u4e00\u8d77\u53bb\u542c\u6f14\u5531\u4f1a\uff0c\u53ea\u6709\u5728\u7f51\u4e0a\u624d\u6709\u53ef\u80fd\u53d8\u5f97\u66f4\u597d\u3002\n\u4f46\u662f\uff0c\u5982\u679cEtic\u6210\u529f\u5730\u6253\u9020\u4e86\u5b83\u7684\u201c\u98de\u8f6e\u201d\uff0c\u5b83\u5c06\u66f4\u620f\u5267\u6027\u5730\u91cd\u5851\u6570\u5b57\u4e16\u754c-\u4ece\u6570\u636e\u548c\u9690\u79c1\u6743\uff0c\u5230\u65b0\u5174\u7684\u6280\u672f\u6807\u51c6\uff0c\u5229\u6da6\u5206\u914d\uff0c\u4ee5\u53ca\u4eba\u7c7b\u5de5\u4f5c\u548c\u653e\u677e\u7684\u65b9\u5f0f\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5bf9\u65af\u5a01\u5c3c\u5bf9\u793e\u4f1a\u672a\u6765\u7684\u957f\u671f\u613f\u666f\u81f3\u5173\u91cd\u8981\uff1aMetaverse\u3002\n\u5728\u8fd9\u672c\u5165\u95e8\u8bfb\u7269\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u8bfb\u8005\u4ecb\u7ecd\u53f2\u8bd7\u6e38\u620f\u7684\u6bcf\u4e2a\u9886\u57df-\u8be6\u7ec6\u8bf4\u660e\u5b83\u4e3a\u4ec0\u4e48\u5b58\u5728\uff0c\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5b83\u5e0c\u671b\u5b9e\u73b0\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5b83\u5f88\u91cd\u8981\uff0c\u4ee5\u53ca\u5b83\u5c06\u5982\u4f55\u52a0\u5f3a\u53f2\u8bd7\u6e38\u620f\u7684\u6574\u4f53\u3002", "note_en": "This six-part series is designed to be an \u201cExplain Like I\u2019m (Twenty) Five\u201d edition of Epic Games. Or if you want a throwback to the 1990s, when then-Potomac Computer Systems was founded, \u201cEpic Games For Dummies\u201d. Technical terms and other details have been eschewed and simplified accordingly.\n Epic Games was founded by Tim Sweeney and Mark Rein in 1991. Sweeney is the CEO and majority/controlling shareholder, while Tencent owns roughly 40%. As a private company, Epic does not publicly disclose its financials. According to press reports, it was valued at roughly $15B in 2018 (when it last raised capital) and is currently raising more at a \u201csignificantly higher\u201d price,  per Bloomberg.\n Compared to Facebook, Amazon, Apple, Microsoft and Google, which are worth $600B to $1.4T, Epic\u2019s valuation is modest. However, Epic has the potential to become one of the largest, most influential tech companies in the world. This might seem hyperbolic to those who know Epic only as the marker of the hit video game  Fortnite: Battle Royale. In fact, even long-time fans of Epic\u2019s games might find such a pronouncement odd given  Fortnite has generated more revenue in three years than the rest of Epic has in almost as many decades. But behind the scenes, it looks increasingly likely that Epic will be at the very center of society\u2019s digital future.\n This potential stems from the strength of Epic\u2019s core business, the Unreal Engine, which is already used to produce many of the world\u2019s leading games, movies and virtual experiences. This includes, of course, Epic\u2019s  Fortnite, which is one of the most played and profitable online worlds globally. The popularity of this \u201cgame\u201d is hard to miss; what\u2019s less apparent, though, is how this success has enabled Epic to rapidly transform and expand its business. This includes the 2018 launch of Epic Games Store, the 2019 beta-release of Epic Online Services and acquisition of social video app Houseparty, and the 2020 unveiling of Epic Games Publishing. And with 350MM+ users and 2.3B social connections, Epic now operates one of the Internet\u2019s largest and fastest growing social networks.\n Epic\u2019s growing strength has already forced enormous change in the media and entertainment industry. This includes forcing blue chip giants like Sony and Microsoft to open up parts of their closed gaming ecosystems, convincing storied Hollywood giants to allow their franchises to intermingle, and showing the world that experiences once thought to be \u201cIRL\u201d only, like going to a concert with friends, had the potential to be even better when online-only.\n But if Epic is successful in building out its \u2018flywheel\u2019, it will even more dramatically reshape the digital world - from data and privacy rights, to emergent technical standards, the distribution of profits, and the very ways in which humans work and relax. And all of this is critical to Sweeney\u2019s long-term vision of society\u2019s future: the Metaverse.\n  Throughout this primer, we will walk readers through each area of Epic Game - detailing why it exists, how it works, what it hopes to achieve, why it matters, and how it will strengthen Epic Games overall.", "posttime": "2020-05-29 08:41:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,games,\u53f2\u8bd7", "title": "\u53f2\u8bd7\u6e38\u620f\u5165\u95e8\u8bfb\u672c", "title_en": "The Epic Games Primer", "transed": 1, "url": "https://www.matthewball.vc/all/epicgamesprimermaster", "via": "", "real_tags": ["\u6e38\u620f", "games", "\u53f2\u8bd7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004177, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9e\u65f6\u975e\u5e38\u7b80\u5355Microsoft Research TechnicalReport MSR-TR-2005-30(2005\u5e743\u67084\u65e5)\u3002\u5728\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u88abFormalMethods\u62d2\u7edd\u3002\u53ef\u7528\u6027\u5728\u7ebf\u5e94\u8be5\u5f88\u660e\u663e\uff0c\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u903b\u8f91\u6216\u8bed\u8a00\u6765\u7f16\u5199\u5b9e\u65f6\u89c4\u8303\u6216\u5bf9\u5176\u8fdb\u884c\u63a8\u7406\u3002\u6709\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\u53ea\u9700\u4f7f\u7528\u53d8\u91cf\u6765\u8868\u793a\u65f6\u95f4\u3002\u9a6c\u4e01\u00b7\u963f\u5df4\u8fea\u548c\u6211\u5728[106]\u4e00\u4e66\u4e2d\u8868\u660e\uff0c\u5728TLA\u4e2d\u53ef\u4ee5\u975e\u5e38\u4f18\u96c5\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e00\u79cd\u66f4\u7b80\u5355\u3001\u66f4\u76f4\u63a5\u7684\u65b9\u6cd5\u9002\u7528\u4e8e\u4efb\u4f55\u660e\u667a\u7684\u6b63\u5f0f\u65b9\u6cd5\uff0c\u4f46\u5b83\u8fc7\u4e8e\u7b80\u5355\u548c\u660e\u663e\u7684\u6d6e\u5938\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u3001\u66f4\u76f4\u63a5\u7684\u65b9\u6cd5\u6765\u7f16\u5199\u6216\u63a8\u7406\u5b9e\u65f6\u89c4\u8303\u3002\u4f46\u6709\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u592a\u7b80\u5355\uff0c\u4e5f\u592a\u660e\u663e\u7684\u6d6e\u5938\u3002\u56e0\u6b64\uff0c\u6211\u5728[106]\u4e00\u4e66\u4e2d\u5c55\u793a\u4e86\u8fd9\u4e00\u70b9\u3002\u66f4\u7b80\u5355\u3001\u66f4\u76f4\u622a\u4e86\u5f53\u7684\u65b9\u6cd5\u9002\u7528\u4e8e\u4efb\u4f55\u660e\u667a\u7684\u6b63\u5f0f\u65b9\u6cd5\uff0c\u4f46\u5b83\u8fc7\u4e8e\u7b80\u5355\u548c\u660e\u663e\u7684\u6d6e\u5938\u3002\u7b49\u7b49\u3002\u6ca1\u6709\u7406\u7531\u7528\u5b83\u4eec\u6765\u4ee3\u66ff\u7b80\u5355\u3001\u660e\u663e\u7684\u65b9\u6cd5\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u6ca1\u6709\u4eba\u5199\u5173\u4e8e\u5904\u7406\u5b9e\u65f6\u7684\u7b80\u5355\u65b9\u6cd5\u7684\u8bba\u6587\uff0c\u4eba\u4eec\u4f3c\u4e4e\u8ba4\u4e3a\u4ed6\u4eec\u9700\u8981\u4f7f\u7528\u5b9e\u65f6\u903b\u8f91\u3002\u5f88\u81ea\u7136\uff0c\u6211\u89c9\u5f97\u8fd9\u76f8\u5f53\u70e6\u4eba\u3002\u6240\u4ee5\u5f53\u6211\u542c\u8bf4\u4e00\u4f4d\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u6b63\u8ba1\u5212\u5199\u4e00\u672c\u5173\u4e8e\u8fd9\u4e9b\u5b9e\u65f6\u903b\u8f91\u4e4b\u4e00\u7684\u4e66\u65f6\uff0c\u6211\u51b3\u5b9a\u662f\u65f6\u5019\u518d\u5199\u4e00\u7bc7\u8bba\u6587\u6765\u89e3\u91ca\u8fd9\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u4e86\u3002(\u6240\u4ee5\u5f53\u6211\u542c\u8bf4\u4e00\u4f4d\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u6b63\u8ba1\u5212\u5199\u4e00\u672c\u5173\u4e8e\u5176\u4e2d\u4e00\u79cd\u5b9e\u65f6\u903b\u8f91\u7684\u4e66\u65f6\uff0c\u6211\u51b3\u5b9a\u662f\u65f6\u5019\u518d\u5199\u4e00\u7bc7\u8bba\u6587\u6765\u89e3\u91ca\u8fd9\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u4e86\u3002)", "note_en": "Real Time is Really Simple Microsoft Research TechnicalReport MSR-TR-2005-30 (4 March 2005).\u00a0 Rejected by  FormalMethods in Systems Design.  AvailableOn-Line It should be quite obvious that no special logic or language is neededto write or reason about real-time specifications.\u00a0 There&#39;s a simpleway to do it: just use a variable to represent time.\u00a0Mart\u00edn Abadi and I showed in [106] that this can be done very elegantly inTLA.\u00a0 A simpler, more straightforward approach works withany sensible formal method, but it&#39;s too simple and obvious topublish.\u00a0 So instead, hundreds of papers and theses have been writtenabout special real-time logics and languages--even though, for mostpurposes, there&#39;s no reason to use them instead of the simple, obviousapproach.\u00a0 And since no one writes papers about the simple way ofhandling real time, people seem to assume that they need to use areal-time logic.\u00a0 Naturally, I find this rather annoying.\u00a0 So when Iheard that a computer scientist was planning to write a book about oneof these real-time logics, I decided it was time to write anotherpaper explaining the simple approach.", "posttime": "2020-05-29 08:40:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5170\u6ce2\u7279,leslie,\u65b9\u6cd5", "title": "\u83b1\u65af\u5229\u00b7\u5170\u6ce2\u7279\u7684\u4f5c\u54c1", "title_en": "The Writings of Leslie Lamport", "transed": 1, "url": "https://lamport.azurewebsites.net/pubs/pubs.html", "via": "", "real_tags": ["\u5170\u6ce2\u7279", "leslie", "\u65b9\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "2f0fddb12e01bc4d1a2f693a6ac26a2e.jpg", "infoid": 1004176, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5dde\u957f\u52a0\u6587\u00b7\u7ebd\u745f\u59c6(Gavin Newsom)\u63d0\u8bae\uff0c\u5bf9\u4e8e\u5e0c\u671b\u4f7f\u7528\u8054\u90a6\u51a0\u72b6\u75c5\u6bd2\u6551\u6d4e\u8d44\u91d1\u5c06\u9152\u5e97\u6539\u9020\u6210\u65e0\u5bb6\u53ef\u5f52\u8005\u4f4f\u623f\u7684\u5e02\u53bf\uff0c\u53ef\u4ee5\u514d\u9664\u5dde\u73af\u5883\u6cd5\u89c4\u3002\n\u4ed6\u7684\u8ba1\u5212\u4e8e\u5468\u4e94\u63d0\u4ea4\u7ed9\u52a0\u5dde\u7acb\u6cd5\u673a\u6784\uff0c\u5c06\u88ab\u6dfb\u52a0\u5230\u5dde\u9884\u7b97\u8c08\u5224\u4e2d\uff0c\u5982\u679c\u8be5\u8ba1\u5212\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b83\u5c06\u6d88\u9664\u53cd\u5bf9\u8005\u7528\u6765\u5bf9\u6297\u4ed6\u4eec\u4e0d\u60f3\u8981\u7684\u793e\u533a\u9879\u76ee\u7684\u4e00\u4e2a\u5173\u952e\u5de5\u5177\u3002\u6839\u636e\u6cd5\u5f8b\uff0c\u9884\u7b97\u5e94\u8be5\u57286\u670815\u65e5\u4e4b\u524d\u901a\u8fc7\u3002\n\u5728\u4eca\u5e74\u51ac\u5929\u5927\u6d41\u884c\u6765\u88ad\u4e4b\u524d\uff0c\u5dde\u957f\u66fe\u8868\u793a\uff0c\u4ed6\u5e0c\u671b\u52a0\u5dde\u73af\u5883\u8d28\u91cf\u6cd5\u6848(CEQA)\u4e0b\u7684\u76d1\u7ba1\u653e\u677e\u5bf9\u8bb8\u591a\u7c7b\u578b\u7684\u65e0\u5bb6\u53ef\u5f52\u8005\u4f4f\u623f\u7684\u76d1\u7ba1\uff0c\u800c\u8fd9\u9879\u76ee\u524d\u7684\u8ba1\u5212-\u4ee5\u9884\u7b97\u8c08\u5224\u9644\u52a0\u7684\u201c\u9884\u544a\u7247\u6cd5\u6848\u201d\u7684\u5f62\u5f0f\u53d1\u9001-\u7f29\u5c0f\u4e86\u8fd9\u4e00\u96c4\u5fc3\u3002\n\u7136\u800c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u65e7\u91d1\u5c71\u7b49\u57ce\u5e02\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\uff0c\u622a\u81f3\u5468\u4e8c\uff0c\u65e7\u91d1\u5c71\u79df\u7528\u76841,100\u591a\u4e2a\u9152\u5e97\u623f\u95f4\u5bb9\u7eb3\u4e86\u6613\u53d7\u65b0\u51a0\u80ba\u708e\u5f71\u54cd\u6216\u60a3\u6709\u652f\u4ed8\u5b9d\u7684\u65e0\u5bb6\u53ef\u5f52\u8005\u3002\u5dde\u957f\u7684\u201c\u623f\u95f4\u94a5\u5319\u8ba1\u5212\u201d\u5728\u5927\u6d41\u884c\u671f\u95f4\u5728\u5168\u5dde\u8303\u56f4\u5185\u4e3a\u65e0\u5bb6\u53ef\u5f52\u8005\u8d2d\u4e70\u4e8615,000\u4e2a\u9152\u5e97\u623f\u95f4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5927\u7ea6\u6709\u4e00\u534a\u7684\u623f\u95f4\u5df2\u7ecf\u5165\u9a7b\u3002\n\u65e7\u91d1\u5c71\u5e02\u957fLondon Breed\u7684\u53d1\u8a00\u4eba\u6770\u592b\u00b7\u514b\u91cc\u5766(Jeff Cretan)\u8868\u793a\uff0c\u4ed6\u7684\u8001\u677f\u5e0c\u671b\u7ebd\u745f\u59c6\u7684\u8ba1\u5212\u80fd\u901a\u8fc7\u672a\u6765\u7684\u9884\u7b97\u8c08\u5224\u3002\n\u514b\u91cc\u5766\u8bf4\uff1a\u201c\u5e02\u957f\u4e00\u76f4\u4e13\u6ce8\u4e8e\u51cf\u5c11\u963b\u788d\u4f4f\u623f\u5efa\u8bbe\u7684\u969c\u788d\u548c\u5b98\u50da\u4f5c\u98ce\uff0c\u6211\u4eec\u5b8c\u5168\u652f\u6301\u4efb\u4f55\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u5feb\u5730\u5c06\u9152\u5e97\u53d8\u6210\u4f4f\u623f\u3002\u201d\n\u9152\u5e97\u4e1a\u9886\u8896\u5468\u4e8c\u5bf9\u300a\u7eaa\u4e8b\u62a5\u300b\u8868\u793a\uff0c\u4ed6\u4eec\u5e0c\u671b\u5728\u5bf9\u8be5\u63d0\u6848\u91c7\u53d6\u7acb\u573a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u5ba1\u67e5\u3002\n\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u6216\u5168\u5dde\u8303\u56f4\u5185\u5c06\u6570\u5343\u540d\u65e0\u5bb6\u53ef\u5f52\u8005\u6536\u5bb9\u5728\u79df\u8d41\u9152\u5e97\u623f\u95f4\u7684\u8ba1\u5212\u770b\u4e0d\u5230\u5feb\u901f\u7ed3\u675f\u7684\u8ff9\u8c61\uff0c\u62a2\u5360\u9152\u5e97\u4f5c\u4e3a\u6c38\u4e45\u4f4f\u623f\u7684\u524d\u666f\u53ea\u662f\u76ee\u524d\u7684\u524d\u666f-\u4e00\u79cd\u524d\u666f\u3002\u4f46\u65e0\u5bb6\u53ef\u5f52\u8005\u7ec4\u7ec7\u8868\u793a\uff0c\u8fd9\u53ef\u80fd\u662f\u672a\u6765\u7684\u53cc\u8d62\uff0c\u65e2\u786e\u4fdd\u4e86\u53ef\u80fd\u5728\u7ecf\u6d4e\u4f4e\u8ff7\u4e2d\u82e6\u82e6\u6323\u624e\u7684\u9152\u5e97\u6240\u6709\u8005\u7684\u6536\u5165\uff0c\u540c\u65f6\u53c8\u5728\u65e7\u91d1\u5c71\u7b49\u57ce\u5e02\u5efa\u9020\u4e86\u5ec9\u4ef7\u7684\u65e0\u5bb6\u53ef\u5f52\u8005\u4f4f\u623f\uff0c\u5728\u90a3\u91cc\uff0c\u6b64\u7c7b\u4f4f\u623f\u7684\u6bcf\u5957\u4ef7\u683c\u901a\u5e38\u8d85\u8fc760\u4e07\u7f8e\u5143\u3002\n\u201c\u6211\u8ba4\u4e3a\u8fd9\u5f88\u68d2\uff0c\u201d\u65e7\u91d1\u5c71\u5dde\u6c11\u4e3b\u515a\u53c2\u8bae\u5458\u65af\u79d1\u7279\u00b7\u7ef4\u7eb3(Scott Wiener)\u8bf4\uff0c\u4ed6\u53bb\u5e74\u6210\u529f\u5730\u8ba9\u7acb\u6cd5\u901a\u8fc7\uff0c\u5728\u5efa\u9020\u670d\u52a1\u4e30\u5bcc\u7684\u5bfc\u822a\u4e2d\u5fc3\u907f\u96be\u6240\u65f6\u514d\u9664\u4e86CEQA\u89c4\u5b9a\u3002\u4ed6\u6307\u51fa\uff0c\u52a0\u5dde\u65e0\u5bb6\u53ef\u5f52\u4eba\u53e3\u5360\u5168\u56fd\u603b\u4eba\u53e3\u7684\u56db\u5206\u4e4b\u4e00\uff0c\u4e3a15.1\u4e07\u4eba--\u201c\u8fd9\u662f\u4e00\u79cd\u6781\u7aef\u5f97\u4ee4\u4eba\u9707\u60ca\u7684\u60c5\u51b5\u201d--\u4ed6\u8bf4\uff0c\u8be5\u5dde\u9700\u8981\u679c\u65ad\u5730\u521b\u9020\u6027\u5730\u5c06\u4eba\u4eec\u7559\u5728\u5ba4\u5185\u3002\n\u5468\u4e8c\uff0c\u7ef4\u7eb3\u62c5\u4efb\u4e3b\u5e2d\u7684\u53c2\u8bae\u9662\u4f4f\u623f\u59d4\u5458\u4f1a(Senate Housing Committee)\u6279\u51c6\u4e86\u4ed6\u64b0\u5199\u7684\u6cd5\u6848\uff0c\u8be5\u6cd5\u6848\u5c06\u628a\u5bfc\u822a\u4e2d\u5fc3\u7684\u8c41\u514d\u6743\u6269\u5927\u5230\u6240\u6709\u907f\u96be\u6240\uff0c\u5e76\u52a0\u5feb\u5728\u5168\u5dde\u5404\u5730\u7684\u6559\u5802\u623f\u4ea7\u548c\u5176\u4ed6\u571f\u5730\u4e0a\u5efa\u8bbe\u7ecf\u6d4e\u9002\u7528\u623f\u3002\u7ef4\u7eb3\u8bf4\uff0c\u7ebd\u745f\u59c6\u5173\u4e8e\u9152\u5e97\u7684\u63d0\u8bae\u5c06\u662f\u5bf9\u8fd9\u4e00\u6218\u7565\u7684\u6709\u76ca\u8865\u5145\u3002\n\u4ed6\u8bf4\uff1a\u201c\u5982\u679c\u6211\u4eec\u6709\u672a\u5f97\u5230\u5145\u5206\u5229\u7528\u7684\u9152\u5e97\u6216\u6c7d\u8f66\u65c5\u9986\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u6539\u9020\u6210\u4f4f\u623f--\u55ef\uff0c\u6c38\u4e45\u4f4f\u623f\u662f\u89e3\u51b3\u65e0\u5bb6\u53ef\u5f52\u95ee\u9898\u7684\u529e\u6cd5\u3002\u201d\u201c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u65e2\u6709\u5367\u5ba4\u53c8\u6709\u536b\u751f\u95f4\u7684\u5730\u65b9\uff0c\u53ea\u9700\u8981\u505a\u4e00\u70b9\u5de5\u4f5c\u5c31\u53ef\u4ee5\u628a\u5b83\u6539\u5efa\u6210\u4f4f\u623f\uff0c\u90a3\u4e48\u8fd9\u751a\u81f3\u90fd\u4e0d\u662f\u95ee\u9898\u3002\n\u201c\u8fd9\u4e0d\u5e94\u8be5\u53d7\u5230CEQA\u7684\u5236\u7ea6\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u53ea\u662f\u4e00\u4ef6\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002\u201c", "note_en": "Gov. Gavin Newsom is proposing that state environmental regulations be waived for cities and counties that want to convert hotels into homeless housing using federal coronavirus relief funding.\n  His plan was sent to the California Legislature on Friday to be added to the state budget negotiations, and if it remains intact it would eliminate a key tool opponents use to fight projects they don\u2019t want in their neighborhoods. By law, the budget is supposed to be passed by June 15.\n  Before the pandemic hit this winter, the governor had said he wanted regulations under the California Environmental Quality Act (CEQA) eased for many types of homeless housing, and this current plan \u2014 sent in the form of a \u201ctrailer bill\u201d addition to budget talks \u2014 narrows that ambition.\n  It could have a huge effect, however, in cities such as San Francisco, where more than 1,100 hotel rooms leased by the city as of Tuesday were housing homeless people vulnerable to or suffering from COVID-19. The governor\u2019s \u201cProject Roomkey\u201d has acquired 15,000 hotel rooms statewide for homeless people during the pandemic, about half of which have been occupied to date.\n  Jeff Cretan, spokesman for San Francisco Mayor London Breed, said his boss hopes Newsom\u2019s plan makes it through the budget talks that lie ahead.\n  \u201cThe mayor has been focused on reducing barriers and bureaucracy that get in the way of building housing, and we\u2019re fully supportive of anything like this that helps us turn hotels into housing faster,\u201d Cretan said.\n  Hotel industry leaders told The Chronicle on Tuesday that they wanted to examine the proposal before taking a position on it.\n  With no quick end in sight to the coronavirus pandemic or the statewide programs that are sheltering thousands of homeless people in leased hotel rooms, the prospect of snatching up hotels for permanent housing is just that for now \u2014 a prospect. But homeless organizations have said it could be a win-win in the future, ensuring revenue for hotel owners who might struggle in the economic downturn while at the same time creating cheap homeless housing in cities like San Francisco, where such housing typically costs north of $600,000 a unit.\n  \u201cI think it\u2019s great,\u201d said state Sen. Scott Wiener, D-San Francisco, who last year succeeded in getting legislation passed waiving CEQA regulations when building service-enriched Navigation Center shelters. Noting that California has a quarter of the nation\u2019s homeless population, at 151,000 \u2014 \u201can outrageously extreme situation\u201d \u2014 he said the state needs to be assertively creative about keeping people indoors.\n  On Tuesday, the Senate Housing Committee that Wiener chairs approved bills he wrote that would expand his Navigation Center waiver to all shelters, and speed up construction of affordable housing around the state on church properties and other lands. Newsom\u2019s proposal for hotels would be a useful addition to that strategy, Wiener said.\n  \u201cIf we have underutilized hotels or motels that we can convert into housing \u2014 well, permanent housing is the solution to homelessness,\u201d he said. \u201cAnd if you have an existing place with a bedroom and a bathroom, and it just needs a little work to convert it into housing, then it\u2019s not even a question.\n  \u201cThat should not be subject to CEQA. That to me is just something that needs to be done.\u201d", "posttime": "2020-05-29 08:40:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9152\u5e97,proposes,\u4f4f\u623f", "title": "\u7ebd\u745f\u59c6\u5efa\u8bae\u5728\u5c06\u9152\u5e97\u6539\u5efa\u4e3a\u4f4f\u623f\u65f6\u653e\u5f03\u73af\u5883\u5ba1\u67e5", "title_en": "Newsom proposes ditching environmental review when converting hotels int housing", "transed": 1, "url": "https://www.sfchronicle.com/bayarea/article/Newsom-proposes-sidestepping-CEQA-to-speed-up-15296502.php", "via": "", "real_tags": ["\u9152\u5e97", "proposes", "\u4f4f\u623f"]}, {"category": "", "categoryclass": "", "imagename": "35ce32a92bc5a5a86a9b2cf785a06e29.jpeg", "infoid": 1004174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(US National Security Agency)\u5468\u56db\u8b66\u544a\u653f\u5e9c\u5408\u4f5c\u4f19\u4f34\u548c\u79c1\u8425\u516c\u53f8\uff0c\u4fc4\u7f57\u65af\u7684\u4e00\u6b21\u9ed1\u5ba2\u884c\u52a8\u4f7f\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u5165\u4fb5\u6280\u672f\u6765\u653b\u51fb\u5de5\u4e1a\u516c\u53f8\u7ecf\u5e38\u7528\u6765\u7ba1\u7406\u8ba1\u7b97\u673a\u57fa\u7840\u8bbe\u65bd\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u7f51\u7edc\u5b89\u5168\u5408\u4f5c\u4e2d\u5fc3\u4e3b\u4efb\u517c\u5c40\u957f\u9053\u683c\u00b7\u514b\u96f7\u65af(Doug Cress)\u8bf4\uff0c\u201c\u8fd9\u662f\u4e00\u4e2a\u6b63\u5728\u88ab\u79ef\u6781\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u53d1\u5e03\u8fd9\u4efd\u901a\u77e5\u3002\u201d\u201c\u6211\u4eec\u771f\u7684\u5f88\u60f3\u8981\u2026\u3002\u8ba9\u66f4\u5e7f\u6cdb\u7684\u7f51\u7edc\u5b89\u5168\u754c\u8ba4\u771f\u5bf9\u5f85\u8fd9\u4ef6\u4e8b\u3002\u201c\u3002\n\u8fd9\u4efd\u901a\u77e5\u662f\u8be5\u95f4\u8c0d\u673a\u6784\u4e3a\u5206\u4eab\u53ef\u91c7\u53d6\u884c\u52a8\u7684\u7f51\u7edc\u9632\u5fa1\u4fe1\u606f\u800c\u53d1\u5e03\u7684\u4e00\u7cfb\u5217\u516c\u5f00\u62a5\u544a\u7684\u4e00\u90e8\u5206\u3002\u8be5\u673a\u6784\u65e2\u8d1f\u8d23\u6536\u96c6\u5916\u56fd\u60c5\u62a5\uff0c\u4e5f\u8d1f\u8d23\u4fdd\u62a4\u56fd\u9632\u90e8\u7684\u56fd\u5185\u7cfb\u7edf\u3002\nCress\u62d2\u7edd\u8ba8\u8bba\u54ea\u4e9b\u5546\u4e1a\u90e8\u95e8\u53d7\u5230\u7684\u5f71\u54cd\u6700\u5927\uff0c\u6709\u591a\u5c11\u7ec4\u7ec7\u4f7f\u7528\u4fc4\u7f57\u65af\u7684\u6280\u672f\u53d7\u5230\u4e86\u653b\u51fb\uff0c\u6216\u8005\u7f51\u7edc\u95f4\u8c0d\u884c\u52a8\u7684\u76ee\u6807\u662f\u5426\u662f\u7279\u5b9a\u7684\u5730\u7406\u533a\u57df\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8868\u793a\uff0c\u6b64\u6b21\u9ed1\u5ba2\u6d3b\u52a8\u76f4\u63a5\u4e0e\u4fc4\u7f57\u65af\u4e3b\u8981\u60c5\u62a5\u5c40(GRU)\u5185\u7684\u4e00\u4e2a\u7279\u5b9a\u90e8\u95e8\u6709\u5173\uff0c\u8be5\u90e8\u95e8\u540d\u4e3a\u201c\u7279\u79cd\u6280\u672f\u4e3b\u4e2d\u5fc3\u201d(Main Center For Special Technologies)\u3002\u7f51\u7edc\u5b89\u5168\u7814\u7a76\u754c\u5c06\u8fd9\u4e2a\u9ed1\u5ba2\u7ec4\u7ec7\u79f0\u4e3a\u201c\u6c99\u866b\u201d\uff0c\u6b64\u524d\u66fe\u5c06\u5176\u4e0e\u9488\u5bf9\u4e4c\u514b\u5170\u7535\u529b\u751f\u4ea7\u8bbe\u65bd\u7684\u7834\u574f\u6027\u7f51\u7edc\u653b\u51fb\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n\u7f8e\u56fd\u56fd\u52a1\u537f\u8fc8\u514b\u00b7\u5e9e\u76ae\u6b27(Mike Pompeo)\u4e5f\u57282\u6708\u4efd\u6307\u8d23\u540c\u4e00\u4e2aGRU\u5355\u4f4d\u5bf9\u683c\u9c81\u5409\u4e9a\u56fd\u5bb6\u53d1\u52a8\u7f51\u7edc\u653b\u51fb\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(NSA)\u5468\u56db\u53d1\u5e03\u7684\u5b89\u5168\u8b66\u62a5\u89e3\u91ca\u4e86\u4fc4\u7f57\u65af\u519b\u4e8b\u60c5\u62a5\u673a\u6784GRU\u7684\u9ed1\u5ba2\u5982\u4f55\u5229\u7528Exim\u7684\u8f6f\u4ef6\u6f0f\u6d1e\u3002Exim\u662f\u4e00\u79cd\u90ae\u4ef6\u4f20\u8f93\u4ee3\u7406\uff0c\u5728\u57fa\u4e8eUnix\u7684\u64cd\u4f5c\u7cfb\u7edf(\u5982Linux)\u4e0a\u5f88\u5e38\u89c1\u3002\u8be5\u6f0f\u6d1e\u5df2\u4e8e\u53bb\u5e74\u6253\u4e0a\u8865\u4e01\uff0c\u4f46\u4e00\u4e9b\u7528\u6237\u5c1a\u672a\u66f4\u65b0\u7cfb\u7edf\u4ee5\u5f25\u8865\u5b89\u5168\u6f0f\u6d1e\u3002\n\u514b\u96f7\u65af\u8bf4\uff1a\u201c\u80fd\u591f\u83b7\u5f97\u8fdb\u5165\u7f51\u7edc\u7684\u6865\u63a5\u70b9\u7684\u6839\u8bbf\u95ee\u6743\uff0c\u8ba9\u4f60\u6709\u5982\u6b64\u591a\u7684\u80fd\u529b\u548c\u80fd\u529b\u6765\u9605\u8bfb\u7535\u5b50\u90ae\u4ef6\uff0c\u5728\u7f51\u7edc\u4e2d\u5bfc\u822a\u548c\u64cd\u7eb5\uff0c\u6240\u4ee5\u8fd9\u66f4\u591a\u7684\u662f\u5173\u4e8e\u6211\u4eec\u8bd5\u56fe\u5e2e\u52a9\u4eba\u4eec\u7406\u89e3\u7684\u5371\u9669\u3002\u201d", "note_en": "(Reuters) - The U.S. National Security Agency on Thursday warned government partners and private companies about a Russian hacking operation that uses a special intrusion technique to target operating systems often used by industrial firms to manage computer infrastructure.\n \u201cThis is a vulnerability that is being actively exploited, that\u2019s why we\u2019re bringing this notification out,\u201d said Doug Cress, chief of the cybersecurity collaboration center and directorate at NSA. \u201cWe really want\u2026 the broader cybersecurity community to take this seriously.\u201d\n The notice is part of a series of public reports by the spy agency, which is responsible for both collecting foreign intelligence and protecting Defense Department systems at home, to share actionable cyber defense information.\n Cress declined to discuss which business sectors had been most affected, how many organizations were compromised using the Russian technique, or whether the cyber espionage operation targeted a specific geographic region.\n The NSA said the hacking activity was tied directly to a specific unit within Russia\u2019s Main Intelligence Directorate, also known as the GRU, named the Main Center for Special Technologies. The cybersecurity research community refers to this same hacking group as \u201cSandworm,\u201d and has previously connected it to disruptive cyberattacks against Ukrainian electric production facilities.\n Secretary of State Mike Pompeo also called out the same GRU unit in February for conducting a cyberattack against the country of Georgia.\n A security alert published by the NSA on Thursday explains how hackers with GRU, Russia\u2019s military intelligence, are leveraging a software vulnerability in Exim, a mail transfer agent common on Unix-based operating systems, such as Linux. The vulnerability was patched last year, but some users have not updated their systems to close the security gap.\n \u201cBeing able to gain root access to a bridge point into a network gives you so much ability and capability to read email, to navigate across and maneuver through the network,\u201d said Cress, \u201cso it\u2019s more about the danger we\u2019re trying to help people understand.\u201d", "posttime": "2020-05-29 08:08:37", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ed1\u5ba2,\u8b66\u544a,warns,\u7f51\u7edc", "title": "\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40\u8b66\u544a\u79f0\uff0c\u4fc4\u7f57\u65af\u6b63\u5728\u5bf9\u7f8e\u56fd\u7cfb\u7edf\u53d1\u52a8\u9ed1\u5ba2\u653b\u51fb", "title_en": "NSA Warns of Ongoing Russian Hacking Campaign Against US Systems", "transed": 1, "url": "https://www.reuters.com/article/us-cyber-usa-russia-idUSKBN2342RE", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u8b66\u544a", "warns", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "0e4bb578b1d8776bbec3643941bb76aa.png", "infoid": 1004173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u5bb6\u90fd\u77e5\u9053Kubernetes\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u81ea\u52a8\u5316\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u7684\u5f00\u6e90\u5bb9\u5668\u7f16\u6392\u7cfb\u7edf\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u81ea\u52a8\u5316\u4e91\u4e2d\u57fa\u4e8e\u5bb9\u5668\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u90e8\u7f72\u3001\u6269\u5c55\u548c\u64cd\u4f5c\u6b63\u5728\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002\u4e91\u672c\u5730\u8ba1\u7b97\u57fa\u91d1\u4f1a(CNCF)\u8d1f\u8d23\u8ba4\u8bc1Kubernetes\u53d1\u884c\u7248\uff0c\u4ee5\u63d0\u4f9b\u8de8\u4e0d\u540c\u4e91\u5200\u7247\u548c\u5185\u90e8\u90e8\u7f72\u5b89\u88c5\u7684\u517c\u5bb9\u73af\u5883\u3002\n\u6700\u6709\u8da3\u7684Kubernetes\u53d1\u884c\u7248\u4e4b\u4e00\u662fRancher\u7684k3\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e13\u95e8\u4e3a\u7269\u8054\u7f51\u548c\u8fb9\u7f18\u8ba1\u7b97\u6784\u5efa\u7684\u7ecf\u8fc7\u8ba4\u8bc1\u7684\u8f7b\u91cf\u7ea7Kubernetes\u53d1\u884c\u7248\u3002\u4ecd\u7136\u4fdd\u7559\u4e86\u5b8c\u5168\u7684Kubernetes\u517c\u5bb9\u6027\u548c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u7279\u6027\u96c6\uff0c\u63d0\u4f9bk3\u7684\u5355\u4e2a\u4e8c\u8fdb\u5236\u4ee3\u7801\u4e0d\u523040MB\uff0c\u5e76\u4e14\u5728ARM64\u548cARMv7\u4e0a\u90fd\u53ef\u7528\u3002\nK3S\u4f7f\u7269\u8054\u7f51\u548c\u8fb9\u7f18\u8ba1\u7b97\u5de5\u7a0b\u5e08\u80fd\u591f\u4f7f\u7528Kubernetes\u5ba3\u8a00\u6587\u4ef6(\u63cf\u8ff0\u6240\u9700\u90e8\u7f72\u72b6\u6001\u7684YAML\u6587\u4ef6\u96c6\u5408)\u5728\u5176\u8bbe\u5907\u7fa4\u4e2d\u90e8\u7f72\u548c\u7ba1\u7406\u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u63cf\u8ff0\u5176\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5b83\u662f\u4e00\u79cd\u9762\u5411\u672a\u6765\u3001\u529f\u80fd\u66f4\u4e30\u5bcc\u3001\u8868\u73b0\u529b\u66f4\u5f3a\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528Docker-Compose(\u63a5\u8fd1Docker\u4e16\u754c\u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u7684\u65e0\u5904\u4e0d\u5728\u7684\u5de5\u5177)\u5728\u73b0\u573a\u7ba1\u7406\u96c6\u88c5\u7bb1\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f7f\u7528sqlite3\u6570\u636e\u5e93\u4f5c\u4e3a\u8f7b\u91cf\u7ea7\u540e\u7aef\u5b58\u50a8\u3002\u5b83\u53ef\u4ee5\u9009\u62e9\u652f\u6301\u5176\u4ed6\u540e\u7aef\u5b58\u50a8\uff0c\u5373etcd\u3001MySQL\u548cPostgreSQL\uff0c\u8fd9\u4e9b\u540e\u7aef\u5b58\u50a8\u4e0d\u592a\u9002\u5408\u5d4c\u5165\u5f0fIoT\u548cEdge\u8bbe\u5907\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u5728\u672c\u6587\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002\n\u5173\u4e8e\u547d\u540d\u7684\u597d\u5947\u5fc3\uff1a\u6211\u4eec\u5c06Kubernetes\u7f29\u5199\u4e3aK8s(k\u548cs\u4e2d\u95f4\u67098\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a10\u4e2a\u5b57\u7b26\u7684\u5355\u8bcd)\u3002\u5728\u5f00\u53d1k3\u65f6\uff0cRancher\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2aKubernetes\u53d1\u884c\u7248\uff0c\u8be5\u53d1\u884c\u7248\u53ef\u4ee5\u7528\u8fd0\u884c\u80a1\u7968Kubernetes\u6240\u9700\u7684\u4e00\u534a\u8d44\u6e90\u6765\u8fd0\u884c\u3002\u56e0\u4e3a10\u7684\u4e00\u534a\u662f5\uff0c\u6240\u4ee5\u4ed6\u4eec\u5c06k3s\u547d\u540d\u4e3ak3s(k\u548cs\u4e2d\u95f4\u6709\u4e09\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u4e94\u4e2a\u5b57\u7b26\u7684\u5355\u8bcd)\u3002\u4e0d\u8fc7\uff0c\u6ca1\u4eba\u77e5\u9053\u4e2d\u95f4\u7684\u4e09\u4e2a\u5b57\u6bcd\u662f\u4ec0\u4e48\u3002\uff1a)\u3002\n\u5728\u5c0f\u5230Raspberry PI\u6216\u5927\u5230\u5728\u4e91\u4e2d\u8fd0\u884c\u768432CPU\u865a\u62df\u670d\u52a1\u5668\u7684\u8bbe\u5907\u4e0a\u5b89\u88c5k3\uff0c\u53ea\u9700\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n$curl-sfl https://get.k3s.io|sh-[INFO]\u67e5\u627e\u9891\u9053\u7a33\u5b9a\u7248\u672c[INFO]\u4f7f\u7528v1.18.2+k3s1\u4f5c\u4e3a\u7248\u672c[INFO]\u4e0b\u8f7d\u6563\u5217https://github.com/rancher/k3s/releases/download/v1.18.2+k3s1/sha256sum-amd64.txt[INFO]\u4e0b\u8f7d\u4e8c\u8fdb\u5236https://github.com/rancher/k3s/releases/download/v1.18.2+k3s1/k3s[INFO]\u9a8c\u8bc1\u4e8c\u8fdb\u5236\u4e0b\u8f7d[INFO]\u5c06k3s\u5b89\u88c5\u5230/usr/local/bin/k3s[INFO]\u521b\u5efa/\u3002usr/local/bin/kubectl\u6307\u5411k3s\u7684symlink[info]\u521b\u5efa/usr/local/bin/crictl\u6307\u5411k3s\u7684symlink[info]\u521b\u5efa/usr/local/bin/ctr\u6307\u5411k3s\u7684symlink[info]\u521b\u5efaKILLALL\u811a\u672c/usr/local/bin/k3s-kill all.sh[info]\u521b\u5efa\u5378\u8f7d\u811a\u672c/usr/local/bin/k3s-uninstall.sh[info]env\uff1a\u521b\u5efa\u73af\u5883\u6587\u4ef6/etc/\u3002k3s unit\u521b\u5efasymlink/etc/systemd/system/multi-user.target.wants/k3s.service\u2192/etc/systemd/system/k3s.service\u3002[\u4fe1\u606f]systemd\uff1a\u542f\u52a8k3s\u3002\n\u5728\u4e0d\u5230\u4e00\u5206\u949f\u7684\u65f6\u95f4\u5185\uff0c\u6211\u4eec\u7684\u5355\u8282\u70b9Kubernetes\u96c6\u7fa4\u5c31\u53ef\u4ee5\u8fd0\u884c\u6211\u4eec\u7684\u5bb9\u5668\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e38\u7528\u7684Kubernetes kubectl CLI\u83b7\u53d6Pod\u5217\u8868\uff0cPod\u662f\u60a8\u53ef\u4ee5\u542f\u52a8\u7684\u6700\u5c0f\u53ef\u90e8\u7f72\u8ba1\u7b97\u5355\u5143\uff0c\u8fd0\u884c\uff1a\nMainder\u662f\u6211\u4eec\u9488\u5bf9\u7269\u8054\u7f51\u8bbe\u5907\u7684\u5f3a\u5927\u3001\u5b89\u5168\u7684\u7a7a\u4e2d\u8f6f\u4ef6\u66f4\u65b0\u5668\u3002\u6211\u4eec\u901a\u8fc7Kubernetes Update\u6a21\u5757\u652f\u6301\u8fd0\u884c\u5728Kubernetes(\u5305\u62eck3s)\u4e0a\u7684\u96c6\u88c5\u5316\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b89\u88c5\u548c\u5347\u7ea7\u3002\n\u5c1d\u8bd5Mender OTA\u5e73\u53f0\u7684\u6700\u7b80\u5355\u65b9\u5f0f\u662f\u6ce8\u518c\u6258\u7ba1\u670d\u52a1\u3002Mender Starter\u8ba1\u5212\u514d\u8d39\u63d0\u4f9b\u4e09\u4e2a\u6708\u7684\u8bc4\u4f30\u671f\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6837\u4f8b\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5b83\u901a\u8fc7\u521b\u5efa\u6587\u4ef6nginx-ployment ment.yaml\u6765\u8fd0\u884c\u5e38\u7528\u7684nginx Docker\u6620\u50cf\uff0c\u5982\u4e0b\u6240\u793a\uff1a\napiVersion\uff1aapps/v1Kind\uff1aDeploymentMetadata\uff1aName\uff1anginx-ployment mentspec\uff1aselector\uff1amatchLabels\uff1aapp\uff1anginx plicas\uff1a1 template\uff1aMetadata\uff1aLabels\uff1aapp\uff1anginx spec\uff1aContainers\uff1a-Name\uff1anginx image\uff1anginx\uff1a1.14.2 ports\uff1a-tainerPort\uff1a80\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528k8s-artiject-gen\u5b9e\u7528\u7a0b\u5e8f\u4ece\u4e0a\u9762\u5b9a\u4e49\u7684Kubernetes\u6e05\u5355\u6587\u4ef6\u751f\u6210\u4e00\u4e2aMender\u5de5\u4ef6\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u4f7f\u7528Mender OTA\u5e73\u53f0\u90e8\u7f72\u8be5\u5de5\u4ef6\uff1a\n$wget https://raw.githubusercontent.com/mendersoftware/mender-update-modules/master/k8s/module-artifact-gen/k8s-artifact-gen$chmod 775 k8s-artiject-gen$./k8s-artiject-gen\\-n nginx-sample-app\\-t device_type\\-o nginx-sample-app.mender\\-o nginx-sample-app.mender\u5df2\u6210\u529f\u751f\u6210\uff1a\u4fee\u8865\u7a0b\u5e8fartiject\uff1a\u540d\u79f0\uff1anginx-sample-app\u683c\u5f0f\uff1a\u4fee\u8865\u7a0b\u5e8f\u7248\u672c\uff1a3\u7b7e\u540d\uff1a\u65e0\u7b7e\u540d\u517c\u5bb9\u8bbe\u5907\uff1a&#39\uff1b[\u8bbe\u5907\u7c7b\u578b]\u3002\u63d0\u4f9b\u7ec4\uff1a\u4f9d\u8d56\u4e8e\u4ee5\u4e0b\u9879\u76ee\u4e4b\u4e00\uff1a[]\u4f9d\u8d56\u4e8e\u4ee5\u4e0b\u7ec4\u4e4b\u4e00\uff1a[]\u72b6\u6001\u811a\u672c\uff1a\u66f4\u65b0\uff1a0\uff1a\u7c7b\u578b\uff1aK8S\u63d0\u4f9b\uff1a\u65e0\u4f9d\u8d56\uff1a\u65e0\u5143\u6570\u636e\uff1a\u65e0\u6587\u4ef6\uff1a\u540d\u79f0\uff1anginx-deployment.yaml\u5927\u5c0f\uff1a316Modified\uff1a2020-05-27 06\uff1a17\uff1a57+0200CEST Checksum\uff1a529d78bd4aac18e2343426fa6267960a74f3c5a450ab04f32c4acd42efb9bdfe\u3002\n\u8bf7\u6ce8\u610f\uff1a\u60a8\u5fc5\u987b\u5c06\u5b57\u7b26\u4e32DEVICE_TYPE\u66ff\u6362\u4e3a\u60a8\u4e3a\u81ea\u5df1\u7684\u8bbe\u5907\u8bbe\u7f6e\u7684\u8bbe\u5907\u7c7b\u578b\uff0c\u4f8b\u5982Beaglebone\u6216raspbercrypi3\u3002\u6709\u5173\u8bbe\u7f6e\u8bbe\u5907\u7c7b\u578b\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Mender\u5b98\u65b9\u6587\u6863\u3002\n\u6587\u4ef6nginx-sample-app.mender\u662fMender\u5de5\u4ef6\uff0c\u5b83\u5d4c\u5165\u4e86Kubernetes\u6e05\u5355\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Mender OTA\u5e73\u53f0\u5c06\u5176\u90e8\u7f72\u5230\u60a8\u7684k3S\u8bbe\u5907\u4e2d\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528Mender\u7528\u6237\u754c\u9762\u6216\u4f7f\u7528Mender-cli\u4e0a\u8f7d\u5de5\u4ef6\uff0c\u8fd0\u884c\uff1a\n$mender-cli login--\u670d\u52a1\u5668https://hosted.mender.io--\u7528\u6237\u540d\u60a8\u7684@email.com\u5bc6\u7801\uff1a*\u767b\u5f55\u6210\u529f$mender-cli\u5de5\u4ef6\u4e0a\u4f20nginx-https://hosted.mender.ioProcessing-app.mender--\u670d\u52a1\u5668\u793a\u4f8b\u4e0a\u4f20\u7684\u6587\u4ef6\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u5927\u7ea6\u4e00\u5206\u949f\u65f6\u95f4\u3002\u4e0a\u8f7d\u6210\u529f\u3002\n\u8981\u5728\u8fd0\u884cKubernetes\u7684\u8bbe\u5907\u4e0a\u90e8\u7f72\u548c\u5347\u7ea7Kubernetes\u6e05\u5355\uff0c\u60a8\u9700\u8981\u5b89\u88c5Mender\u5ba2\u6237\u7aef\u3002\u60a8\u53ef\u4ee5\u6309\u7167\u6211\u4eec\u6587\u6863\u9875\u9762\u4e2d\u7684\u8bf4\u660e\u5b89\u88c5Mender\u5ba2\u6237\u7aef\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528K8s\u66f4\u65b0\u6a21\u5757\u6765\u90e8\u7f72\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5728Mender\u884c\u8bdd\u4e2d\u63cf\u8ff0\u4e3a\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\u3002\u7531\u4e8e\u5b8c\u6574\u7684\u7cfb\u7edf\u66f4\u65b0\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528Debian\u5305\u5b89\u88c5Mender\u5ba2\u6237\u7aef\uff0c\u5982\u4f7f\u7528Debian\u5305\u6587\u6863\u9875\u9762\u5b89\u88c5Mender\u4e2d\u6240\u8ff0\u3002\n\u4e00\u65e6\u5b89\u88c5\u5e76\u9a8c\u8bc1\u4e86Mender\u5ba2\u6237\u7aef\uff0c\u5c31\u5b89\u88c5\u4e86Mender\u5ba2\u6237\u7aef\u5e76\u5bf9\u5176\u8fdb\u884c\u4e86\u8eab\u4efd\u9a8c\u8bc1\uff0c\u4ee5\u4fbf\u8fde\u63a5\u5230\u6211\u4eec\u7684Mender\u670d\u52a1\u5668\uff0c\u65e0\u8bba\u662f\u5185\u90e8\u90e8\u7f72\u7684\u8fd8\u662f\u6211\u4eec\u6258\u7ba1\u7684Mender\u670d\u52a1\u3002\u6211\u4eec\u5df2\u51c6\u5907\u597d\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5K8S\u66f4\u65b0\u6a21\u5757\uff1a\n\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4eceMender\u56fe\u5f62\u7528\u6237\u754c\u9762\u4e3a\u6211\u4eec\u7684\u8bbe\u5907\u521b\u5efa\u90e8\u7f72\uff0c\u5e76\u4e14Mender\u5ba2\u6237\u7aef\u5c06\u4f7f\u7528K8s Update\u6a21\u5757\u5e94\u7528Kubernetes\u6e05\u5355\u6587\u4ef6\u3002\n\u5728\u5185\u90e8\uff0cK8s Update\u6a21\u5757\u4f7f\u7528kubectl CLI\u6765\u5e94\u7528\u6346\u7ed1\u5728Mender\u5de5\u4ef6\u4e2d\u7684\u58f0\u660e\u6587\u4ef6\u3002\n$kubectl\u83b7\u53d6\u90e8\u7f72\u540d\u79f0\u5c31\u7eea\u6700\u65b0\u53ef\u7528AGEnginx-Deployment 1/1 1 74s$kubectl\u83b7\u53d6PodsNAME\u5c31\u7eea\u72b6\u6001\u91cd\u65b0\u542f\u52a8AGEnginx-Deployment-6b474476c4-kzq66 1/1\u8fd0\u884c0 83s\n\u5bb9\u5668\u5728\u5d4c\u5165\u5f0f\u4e16\u754c\u4e2d\u83b7\u5f97\u4e86\u5f88\u5927\u7684\u5438\u5f15\u529b\u3002\u5728\u7269\u8054\u7f51\u548c\u8fb9\u7f18\u8bbe\u5907\u4e2d\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u5e38\u89c1\u3001\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528Docker\u6216\u4f7f\u7528Docker-Compose\u3002\u4e0d\u8fc7\uff0cKubernetes\u5bf9\u4e8e\u8fd9\u6837\u7684\u7528\u4f8b\u6765\u8bf4\u662f\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5728\u8fd9\u4e9b\u7528\u4f8b\u4e2d\uff0c\u5c3d\u7ba1\u8d44\u6e90\u6709\u9650\uff0c\u4f46\u662f\u5b8c\u6574\u7684\u5bb9\u5668\u534f\u8c03\u5668\u53ef\u4ee5\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u4e2a\u6709\u72b6\u6001\u7684\u73af\u5883\u6765\u8fd0\u884c\u5e73\u53f0\u65e0\u5173\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002", "note_en": "All of you know about Kubernetes, the open-source container-orchestration system for automating application deployment, scaling, and management. Over time, it is becoming the de-facto standard to automate the deployment, scaling, and operations of container-based workloads in the cloud. The Cloud-Native Computing Foundation (CNCF) is responsible for the certification of the Kubernetes distributions to provide a compatible environment across different cloud-blade and on-premises installations.\n One of the most interesting Kubernetes distributions is  k3s from Rancher, a lightweight certified Kubernetes distribution specifically built for IoT and Edge computing. Still retaining full Kubernetes compatibility and an impressive feature set, the single binary which provides k3s is less than 40MB and is available for both ARM64 and ARMv7.\n k3s provides the ability to IoT and Edge computing engineers to deploy and manage container-based applications into their fleet of devices describing their application workload using the Kubernetes manifesto files, a collection of YAML files describing the desired state of the deployment. It&#39;s a future-proof, feature-richer, and more expressive alternative to manage containerized applications in the field using docker-compose, the ubiquitous tool used by developers approaching the Docker world.\n By default, it uses an sqlite3 database as the lightweight backend storage. It optionally supports other backend storage, namely, etcd, MySQL and PostgreSQL, which are less suitable for embedded IoT and Edge devices, so they are out of scope for this article.\n Curiosity about the naming: we abbreviate Kubernetes as k8s (k and s with eight letters in the middle, making it a ten characters word). When developing k3s, Rancher had the goal of creating a Kubernetes distribution that could run with half the resources needed to run the stock Kubernetes. As half of ten is five, they named k3s (k and s with three letters in the middle, making it a five characters word). Nobody knows what the three middle letters are, though. :)\n  Installing k3s on a device, as small as a Raspberry PI or as big as a 32 CPU virtual server running in the cloud, is a matter of executing the following command:\n $ curl -sfL https://get.k3s.io | sh -[INFO] Finding release for channel stable[INFO] Using v1.18.2+k3s1 as release[INFO] Downloading hash https://github.com/rancher/k3s/releases/download/v1.18.2+k3s1/sha256sum-amd64.txt[INFO] Downloading binary https://github.com/rancher/k3s/releases/download/v1.18.2+k3s1/k3s[INFO] Verifying binary download[INFO] Installing k3s to /usr/local/bin/k3s[INFO] Creating /usr/local/bin/kubectl symlink to k3s[INFO] Creating /usr/local/bin/crictl symlink to k3s[INFO] Creating /usr/local/bin/ctr symlink to k3s[INFO] Creating killall script /usr/local/bin/k3s-killall.sh[INFO] Creating uninstall script /usr/local/bin/k3s-uninstall.sh[INFO] env: Creating environment file /etc/systemd/system/k3s.service.env[INFO] systemd: Creating service file /etc/systemd/system/k3s.service[INFO] systemd: Enabling k3s unitCreated symlink /etc/systemd/system/multi-user.target.wants/k3s.service \u2192 /etc/systemd/system/k3s.service.[INFO] systemd: Starting k3s\n In less than a minute, our single-node Kubernetes cluster is ready to run our containers. We can use the stock Kubernetes kubectl CLI get the list of pods, the smallest deployable units of computing you can start, running:\n   Mender is our robust and secure over-the-air software updater for IoT devices. We support the installation and upgrade of containerized workloads running on Kubernetes, including k3s, through the  Kubernetes Update module.\n The easiest way to try the Mender OTA platform is by  signing up for the managed service. The Mender Starter plan offers a three-month evaluation period free of charge.\n  First of all, let&#39;s define a sample application workload which runs the stock nginx Docker image by creating the file  nginx-deployment.yaml as follows:\n apiVersion: apps/v1kind: Deploymentmetadata: name: nginx-deploymentspec: selector: matchLabels: app: nginx replicas: 1 template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80\n We can now use the  k8s-artifact-gen utility to generate a Mender Artifact, which we&#39;ll be able to deploy using the Mender OTA platform, from the Kubernetes manifest file defined above:\n $ wget https://raw.githubusercontent.com/mendersoftware/mender-update-modules/master/k8s/module-artifact-gen/k8s-artifact-gen$ chmod 775 k8s-artifact-gen$ ./k8s-artifact-gen \\ -n nginx-sample-app \\ -t device_type \\ -o nginx-sample-app.mender \\ nginx-deployment.yamlArtifact nginx-sample-app.mender generated successfully:Mender artifact: Name: nginx-sample-app Format: mender Version: 3 Signature: no signature Compatible devices: &#39;[device_type]&#39; Provides group: Depends on one of artifact(s): [] Depends on one of group(s): [] State scripts:Updates: 0: Type: k8s Provides: Nothing Depends: Nothing Metadata: Nothing Files: name: nginx-deployment.yaml size: 316 modified: 2020-05-27 06:17:57 +0200 CEST checksum: 529d78bd4aac18e2343426fa6267960a74f3c5a450ab04f32c4acd42efb9bdfe\n Please note: you have to replace the string  device_type with the device type you set for your own device, for example  beaglebone or  raspberrypi3.For more information about setting the device type, please refer to the  official Mender documentation.\n The file  nginx-sample-app.mender is the Mender Artifact that embeds the Kubernetes manifest file(s) that you can deploy into your k3s devices using the Mender OTA platform.\n You can upload the artifact using the Mender user interface or using the  mender-cli, running:\n $ mender-cli login --server https://hosted.mender.io --username your@email.comPassword:**********login successful$ mender-cli artifacts upload nginx-sample-app.mender --server https://hosted.mender.ioProcessing uploaded file. This may take around one minute.upload successful\n  To deploy and upgrade Kubernetes manifests on a device running Kubernetes, you need to install the Mender client. You can follow the instructions in our documentation page to  Install the Mender client.\n We are going to use the k8s Update module to deploy our application workload, described in the Mender jargon as Application updates. As full system updates are out of scope for this article, we can easily install the Mender client using a Debian package as described in the  Install Mender using the Debian package documentation page.\n Once the Mender client is installed and authenticated the installed the Mender client and authenticated it to connect to our Mender server, either on-premises or our hosted Mender service,. we are ready to install the k8s Update module on the device:\n   At this point, we can create a deployment from the Mender graphical user interface for our device, and the Mender client will apply the Kubernetes manifest file using the k8s Update module.\n Internally, the k8s Update module uses the  kubectl CLI to apply the manifesto files bundled in the Mender artifact.\n  $ kubectl get deploymentNAME READY UP-TO-DATE AVAILABLE AGEnginx-deployment 1/1 1 1 74s$ kubectl get podsNAME READY STATUS RESTARTS AGEnginx-deployment-6b474476c4-kzq66 1/1 Running 0 83s\n  Containers are gaining a lot of traction in the embedded world. The most common and well-known path, to deploy containerized applications in IoT and Edge devices is using either Docker directly or docker-compose. Still, Kubernetes represents a valuable alternative for use cases where, despite the limited resources, a full container-orchestrator can provide developers a stateful environment to run platform-agnostic workloads.", "posttime": "2020-05-29 08:06:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "k3s,dive,mender", "title": "\u5feb\u901f\u4e86\u89e3k3s\u548cKubernetes\u7684Mender\u66f4\u65b0\u6a21\u5757", "title_en": "A quick dive into k3s and the Mender Update Module for Kubernetes", "transed": 1, "url": "https://mender.io/blog/a-quick-dive-into-k3s-and-the-mender-update-module-for-kubernetes", "via": "", "real_tags": ["k3s", "dive", "mender"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004172, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u5e10\u6237", "note_en": "Create\r\t\t\t\t\t\t\t\t\t\t\tAccount", "posttime": "2020-05-29 07:51:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9700\u8981,build,\u521b\u5efa", "title": "\u5efa\u9020\u5927\u91d1\u5b57\u5854\u9700\u8981\u591a\u5c11\u4eba\uff1f", "title_en": "How Many People Did It Take to Build the Great Pyramid?", "transed": 1, "url": "https://spectrum.ieee.org/tech-history/heroic-failures/how-many-people-did-it-take-to-build-the-great-pyramid", "via": "", "real_tags": ["\u9700\u8981", "build", "\u521b\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "5eb3a22249c5f6065a3deab87a486675.gif", "infoid": 1004171, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8dc3\u5230\u5bfc\u822a\u8df3\u8dc3\u641c\u7d22\u5357\u5927\u897f\u6d0b\u5f02\u5e38(SAA)\u662f\u5730\u7403\u5185\u90e8\u7684\u8303\u827e\u4f26\u8f90\u5c04\u5e26\u6700\u63a5\u8fd1\u5730\u7403\u8868\u9762\u7684\u533a\u57df\uff0c\u4e0b\u964d\u5230200\u516c\u91cc(120\u82f1\u91cc)\u7684\u9ad8\u5ea6\u3002\u8fd9\u5bfc\u81f4\u8be5\u5730\u533a\u9ad8\u80fd\u7c92\u5b50\u6d41\u91cf\u589e\u52a0\uff0c\u5e76\u4f7f\u5728\u8f68\u536b\u661f\u66b4\u9732\u5728\u9ad8\u4e8e\u6b63\u5e38\u6c34\u5e73\u7684\u8f90\u5c04\u4e2d\u3002\n\u8fd9\u79cd\u6548\u5e94\u662f\u7531\u5730\u7403\u53ca\u5176\u78c1\u5076\u6781\u5b50\u7684\u975e\u540c\u5fc3\u6027\u5f15\u8d77\u7684\u3002SAA\u662f\u5730\u7403\u78c1\u573a\u76f8\u5bf9\u4e8e\u7406\u60f3\u5316\u7684\u5730\u7403\u4e2d\u5fc3\u5076\u6781\u5b50\u78c1\u573a\u6700\u5f31\u7684\u8fd1\u5730\u533a\u57df\u3002\nSAA\u7684\u533a\u57df\u53d7\u5730\u7403\u78c1\u573a\u5f3a\u5ea6\u7684\u9650\u5236\uff0c\u5728\u6d77\u5e73\u9762\u4f4e\u4e8e32,000\u6beb\u5fae\u79d2\uff0c[2]\u8fd9\u76f8\u5f53\u4e8e\u7535\u79bb\u5c42\u9ad8\u5ea6\u7684\u5076\u6781\u78c1\u573a\u3002[3]\u7136\u800c\uff0c\u573a\u672c\u8eab\u7684\u5f3a\u5ea6\u4f5c\u4e3a\u68af\u5ea6\u800c\u53d8\u5316\u3002[2]\uff1a\u56fe1\u3002\n\u8303\u827e\u4f26\u8f90\u5c04\u5e26\u56f4\u7ed5\u5730\u7403\u7684\u78c1\u8f74\u5bf9\u79f0\uff0c\u78c1\u8f74\u76f8\u5bf9\u4e8e\u5730\u7403\u7684\u65cb\u8f6c\u8f74\u503e\u659c\u7ea611\u00b0\u3002\u5730\u7403\u7684\u78c1\u8f74\u548c\u65cb\u8f6c\u8f74\u7684\u4ea4\u70b9\u4e0d\u5728\u5730\u7403\u7684\u4e2d\u5fc3\uff0c\u800c\u662f\u5728450\u5230500\u516c\u91cc(280\u5230310\u82f1\u91cc)\u4e4b\u5916\u3002\u7531\u4e8e\u8fd9\u79cd\u4e0d\u5bf9\u79f0\u6027\uff0c\u5185\u8303\u827e\u4f26\u5e26\u5728\u5357\u5927\u897f\u6d0b\u4e0a\u6700\u63a5\u8fd1\u5730\u7403\u8868\u9762\uff0c\u5728\u90a3\u91cc\u5b83\u7684\u9ad8\u5ea6\u4e0b\u964d\u5230200\u5343\u7c73(120\u82f1\u91cc)\uff0c\u800c\u5728\u5317\u592a\u5e73\u6d0b\u4e0a\u79bb\u5730\u7403\u8868\u9762\u6700\u8fdc\u3002[4][5]\u3002\n\u5982\u679c\u5730\u7403\u7684\u78c1\u6027\u662f\u7531\u4e00\u4e2a\u5c0f\u5c3a\u5bf8\u4f46\u5f3a\u5ea6\u5f88\u5f3a\u7684\u6761\u5f62\u78c1\u94c1(\u78c1\u5076\u6781\u5b50)\u6765\u8868\u793a\u7684\uff0cSAA\u7684\u53d8\u5316\u53ef\u4ee5\u901a\u8fc7\u5c06\u78c1\u94c1\u653e\u7f6e\u5728\u4e0d\u662f\u8d64\u9053\u5e73\u9762\u4e0a\uff0c\u800c\u662f\u5411\u5317\u79fb\u52a8\u4e00\u5c0f\u6bb5\u8ddd\u79bb\uff0c\u6216\u591a\u6216\u5c11\u5411\u65b0\u52a0\u5761\u7684\u65b9\u5411\u79fb\u52a8\u6765\u8bf4\u660e\u3002\u56e0\u6b64\uff0c\u5728\u5357\u7f8e\u6d32\u5317\u90e8\u548c\u5357\u5927\u897f\u6d0b\uff0c\u65b0\u52a0\u5761\u7684\u5bf9\u89d2\u70b9\u9644\u8fd1\uff0c\u78c1\u573a\u76f8\u5bf9\u8f83\u5f31\uff0c\u5bfc\u81f4\u5bf9\u90a3\u91cc\u8f90\u5c04\u5e26\u6355\u83b7\u7684\u7c92\u5b50\u7684\u6392\u65a5\u529b\u8f83\u4f4e\uff0c\u56e0\u6b64\u8fd9\u4e9b\u7c92\u5b50\u6bd4\u5176\u4ed6\u60c5\u51b5\u4e0b\u8fdb\u5165\u9ad8\u5c42\u5927\u6c14\u7684\u7a0b\u5ea6\u66f4\u6df1\u3002[6]\u3002\nSAA\u7684\u5f62\u72b6\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5316\u3002\u81ea\u4ece1958\u5e74\u9996\u6b21\u53d1\u73b0SAA\u4ee5\u6765\uff0c[7]SAA\u7684\u5357\u90e8\u754c\u9650\u5927\u81f4\u4fdd\u6301\u4e0d\u53d8\uff0c\u800c\u5411\u897f\u5317\u3001\u5317\u90e8\u3001\u4e1c\u5317\u90e8\u548c\u4e1c\u90e8\u7684\u957f\u671f\u6269\u5f20\u5df2\u88ab\u6d4b\u91cf\u51fa\u6765\u3002\u6b64\u5916\uff0cSAA\u7684\u5f62\u72b6\u548c\u7c92\u5b50\u5bc6\u5ea6\u6bcf\u5929\u90fd\u5728\u53d8\u5316\uff0c\u6700\u5927\u7684\u7c92\u5b50\u5bc6\u5ea6\u5927\u81f4\u5bf9\u5e94\u4e8e\u5f53\u5730\u4e2d\u5348\u3002\u5728\u5927\u7ea6500\u4ebf\u516c\u91cc(310\u767e\u4e07\u82f1\u91cc)\u7684\u9ad8\u5ea6\uff0cSAA\u6a2a\u8de8\u5730\u7406\u7eac\u5ea6\u221250\u00b0\u52300\u00b0\uff0c\u4ece\u221290\u00b0\u5230+40\u00b0\u7ecf\u5ea6\u3002[8]SAA\u7684\u6700\u9ad8\u5f3a\u5ea6\u90e8\u5206\u4ee5\u6bcf\u5e74\u7ea60.3\u00b0\u7684\u901f\u5ea6\u5411\u897f\u6f02\u79fb\uff0c\u5728\u4e0b\u9762\u5217\u51fa\u7684\u53c2\u8003\u6587\u732e\u4e2d\u5f88\u660e\u663e\u3002SAA\u7684\u6f02\u79fb\u901f\u7387\u975e\u5e38\u63a5\u8fd1\u5730\u7403\u6838\u5fc3\u548c\u8868\u9762\u4e4b\u95f4\u7684\u81ea\u8f6c\u5dee\uff0c\u4f30\u8ba1\u6bcf\u5e74\u57280.3\u00b0\u52300.5\u00b0\u4e4b\u95f4\u3002\n\u76ee\u524d\u7684\u6587\u732e\u8868\u660e\uff0c\u81ea\u53d1\u73b0SAA\u4ee5\u6765\uff0c\u5730\u78c1\u573a\u7684\u7f13\u6162\u51cf\u5f31\u662f\u5bfc\u81f4SAA\u8fb9\u754c\u53d8\u5316\u7684\u51e0\u4e2a\u539f\u56e0\u4e4b\u4e00\u3002\u968f\u7740\u5730\u78c1\u573a\u7684\u6301\u7eed\u51cf\u5f31\uff0c\u5185\u90e8\u7684\u8303\u827e\u4f26\u5e26\u53d8\u5f97\u66f4\u63a5\u8fd1\u5730\u7403\uff0c\u5728\u7ed9\u5b9a\u7684\u9ad8\u5ea6\uff0cSAA\u4e5f\u76f8\u5e94\u589e\u5927\u3002[\u9700\u8981\u5f15\u7528]\u3002\n\u5357\u5927\u897f\u6d0b\u5f02\u5e38\u5bf9\u5929\u6587\u536b\u661f\u548c\u5176\u4ed6\u5728\u51e0\u767e\u516c\u91cc\u9ad8\u5ea6\u56f4\u7ed5\u5730\u7403\u8fd0\u884c\u7684\u822a\u5929\u5668\u5177\u6709\u91cd\u8981\u610f\u4e49\uff0c\u8fd9\u4e9b\u8f68\u9053\u5468\u671f\u6027\u5730\u5e26\u7740\u536b\u661f\u901a\u8fc7\u5f02\u5e38\uff0c\u4f7f\u5b83\u4eec\u66b4\u9732\u5728\u51e0\u5206\u949f\u7684\u5f3a\u8f90\u5c04\u4e2d\uff0c\u8fd9\u662f\u7531\u5185\u8303\u827e\u4f26\u5e26\u4e2d\u88ab\u56f0\u7684\u8d28\u5b50\u9020\u6210\u7684\u3002\u56fd\u9645\u7a7a\u95f4\u7ad9\u4ee551.6\u00b0\u7684\u503e\u89d2\u8fd0\u884c\uff0c\u9700\u8981\u989d\u5916\u7684\u5c4f\u853d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u54c8\u52c3\u592a\u7a7a\u671b\u8fdc\u955c\u5728\u901a\u8fc7SAA\u65f6\u4e0d\u8fdb\u884c\u89c2\u6d4b\u3002[9]\u5b87\u822a\u5458\u4e5f\u53d7\u5230\u8fd9\u4e00\u533a\u57df\u7684\u5f71\u54cd\uff0c\u636e\u8bf4\u8fd9\u662f\u5b87\u822a\u5458\u89c6\u91ce\u4e2d\u51fa\u73b0\u7279\u6b8a\u6d41\u661f(\u81a6)\u7684\u539f\u56e0\uff0c\u8fd9\u79cd\u6548\u5e94\u88ab\u79f0\u4e3a\u5b87\u5b99\u5c04\u7ebf\u89c6\u89c9\u73b0\u8c61\u3002[10]\u7a7f\u8d8a\u5357\u5927\u897f\u6d0b\u5f02\u5e38\u70b9\u88ab\u8ba4\u4e3a\u662f2007\u5e74\u5168\u7403\u4e4b\u661f\u7f51\u7edc\u536b\u661f\u6545\u969c\u7684\u539f\u56e0[11]\u3002\n\u5e15\u6885\u62c9\u5b9e\u9a8c\u5728\u901a\u8fc7SAA\u65f6\uff0c\u68c0\u6d4b\u5230\u6bd4\u9884\u671f\u9ad8\u51fa\u6570\u91cf\u7ea7\u7684\u6b63\u7535\u5b50\u6c34\u5e73\u3002\u8fd9\u8868\u660e\u8303\u827e\u4f26\u5e26\u9650\u5236\u4e86\u5730\u7403\u4e0a\u5c42\u5927\u6c14\u4e0e\u5b87\u5b99\u5c04\u7ebf\u76f8\u4e92\u4f5c\u7528\u4ea7\u751f\u7684\u53cd\u7c92\u5b50\u3002[12]\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u62a5\u544a\u79f0\uff0c\u5f53\u822a\u5929\u98de\u673a\u98de\u884c\u7ecf\u8fc7\u5f02\u5e38\u70b9\u65f6\uff0c\u73b0\u4ee3\u7b14\u8bb0\u672c\u7535\u8111\u5d29\u6e83\u4e86\u3002[13]\u3002\n2012\u5e7410\u6708\uff0c\u9644\u5c5e\u4e8e\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684SpaceX CRS-1\u9f99\u98de\u8239\u5728\u901a\u8fc7\u5f02\u5e38\u533a\u57df\u65f6\u9047\u5230\u4e86\u6682\u65f6\u6027\u95ee\u9898\u3002[14]\u3002\nSAA\u636e\u4fe1\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff0c\u5bfc\u81f4\u65e5\u672c\u6700\u5f3a\u5927\u7684X\u5c04\u7ebf\u5929\u6587\u53f0\u65e5\u7acb\u88ab\u6467\u6bc1\u3002\u8fd9\u4e00\u5f02\u5e38\u77ac\u95f4\u4f7f\u4e00\u79cd\u6d4b\u5411\u673a\u5236\u5931\u6548\uff0c\u5bfc\u81f4\u536b\u661f\u5b8c\u5168\u4f9d\u8d56\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u9640\u87ba\u4eea\uff0c\u4e4b\u540e\u5b83\u5c31\u4f1a\u81ea\u884c\u65cb\u8f6c\u5206\u79bb\u3002[15]\u3002\n^a b Pav\u00f3n-Carrasco\uff0cF.Javier\uff1bde Santis\uff0cAngelo(2016\u5e744\u6708)\u3002\u5357\u5927\u897f\u6d0b\u5f02\u5e38\uff1a\u53ef\u80fd\u53d1\u751f\u5730\u78c1\u9006\u8f6c\u7684\u5173\u952e\u3002\u5730\u7403\u79d1\u5b66\u524d\u6cbf\u30024.40.\u3002\u5bc6\u7801\uff1a2016FrEaS.4.40\u4fbf\u58eb\u3002DOI\uff1a10.3389/feart.2016.00040.\u3002\n^Rao\uff0cG.S.(2010)\u3002\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\uff1a\u536b\u661f\u901a\u4fe1\u8981\u9886\u3002\u65b0\u5fb7\u91cc\uff1a\u5854\u5854\u00b7\u9ea6\u683c\u52b3\u00b7\u5e0c\u5c14(Tata McGraw-Hill)\u3002\u7b2c125\u9875\u3002ISBN978-0-07-070029-1\u3002\n\u9898\u540d/\u8d23\u4efb\u8005\uff1aReflicalo/A.\u3002(2015\u5e7412\u6708)\u3002\u56db\u5341\u5e74\u7684\u6f02\u79fb\u4e0eSAA\u7684\u66f4\u8fed\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u6208\u8fbe\u5fb7\u822a\u5929\u4e2d\u5fc3\u3002\u7f8e\u56fd\u822a\u5929\u5c40/TM-2015\u5e74-217547\uff0cGSFC-E-DAA-TN28435\u3002\u5f15\u7528\u65e5\u8bb0\u8d26\u9700\u8981|\u65e5\u8bb0\u8d26=(\u5e2e\u52a9)\u3002\n\u5a01\u5ec9\u00b7J\u00b7\u5e03\u7f57\u5fb7(1990\u5e746\u67085\u65e5)\u3002\u5730\u7403\u4e0a\u7684\u503e\u76c6\u5927\u96e8\u662f\u592a\u7a7a\u4e2d\u7684\u5927\u9ebb\u70e6\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u3002\n\u5357\u5927\u897f\u6d0b\u5f02\u5e38\u3002\u95ee\u95ee\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u3002\u592a\u7a7a\u603b\u7f72\u30021996\u5e7410\u67084\u65e5\u30022007\u5e7411\u67085\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002\n\u7a7a\u95f4\u60c5\u62a5\u65b0\u95fb(PDF)\u3002\u5347\u5929\u30022007\u5e743\u6708\u3002\u5b58\u6863\u81ea2007-02-14\u5e742\u67082\u65e5\u7684\u539f\u4ef6(PDF)\u3002\nAdriani\uff0cO.\uff1bBarbarino\uff0cG.C.\uff1bBazilevskaya\uff0cG.A.\uff1bBellotti\uff0cR.\uff1bBoezio\uff0cM.\uff1b\u7b49\u4eba\u3002(2011\u5e748\u6708)\u3002\u5730\u78c1\u6355\u83b7\u5b87\u5b99\u7ebf\u53cd\u8d28\u5b50\u7684\u53d1\u73b0\u3002\u201c\u5929\u4f53\u7269\u7406\u5b66\u6742\u5fd7\u5feb\u62a5\u201d\u3002737(2)\u3002129\u5e74\u3002Arxiv\uff1a1107.4882\u3002\u5bc6\u7801\uff1a2011ApJ.737L..29A\u3002DOI\uff1a10.1088/20418205737/2/L29.\u3002\n^Bergin\uff0cChris(2012\u5e7410\u670819\u65e5)\u3002\u9f99\u4eab\u53d7\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u9017\u7559\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u592a\u7a7a\u98de\u884c\u3002\n\u739b\u4e3d\u57c3\u62c9\uff0c\u6708\u4eae(2016\u5e744\u670829\u65e5)\u3002\u65e5\u672c\u6700\u5f3a\u5927\u7684X\u5c04\u7ebf\u536b\u661f\u62a5\u5e9f\u4e86\u3002\u5f15\u64ce\u5c0f\u5de5\u5177\u3002\n\u5730\u7403\u6838\u5fc3\u7684\u78c1\u6027\u5965\u79d8\u3002BBC\u65b0\u95fb\u3002\u78c1\u7ffb\u8f6c\u90e8\u5206\u5305\u542b\u4e86\u4e00\u6bb5\u89c6\u9891\uff0c\u5c55\u793a\u4e86\u8fc7\u53bb400\u5e74\u6765\u5357\u5927\u897f\u6d0b\u5f02\u5e38\u7684\u751f\u957f\u548c\u8fd0\u52a8\u3002", "note_en": "Jump to navigation  Jump to search  The  South Atlantic Anomaly (SAA) is an area where the Earth&#39;s inner  Van Allen radiation belt comes closest to the  Earth&#39;s surface, dipping down to an altitude of 200 kilometres (120\u00a0mi). This leads to an increased  flux of energetic particles in this region and exposes orbiting  satellites to higher-than-usual levels of radiation.\n The effect is caused by the  non-concentricity of the Earth and its magnetic  dipole. The SAA is the near-Earth region where the  Earth&#39;s magnetic field is weakest relative to an idealized Earth-centered dipole field.\n   The area of the SAA is confined by the intensity of  Earth&#39;s magnetic field at less than 32,000  nanotesla at sea level,  [2] which corresponds to the  dipolar  magnetic field at  ionospheric altitudes.  [3] However, the field itself varies in intensity as a gradient.  [2] : Figure 1\n   The Van Allen radiation belts are symmetrical about the Earth&#39;s magnetic axis, which is tilted with respect to the Earth&#39;s rotational axis by an angle of approximately 11\u00b0. The intersection between the magnetic and rotation axes of the Earth is located not at the Earth&#39;s center, but some 450 to 500\u00a0km (280 to 310\u00a0mi) away. Because of this asymmetry, the inner Van Allen belt is closest to the Earth&#39;s surface over the south Atlantic Ocean where it dips down to 200\u00a0km (120\u00a0mi) in altitude, and farthest from the Earth&#39;s surface over the north Pacific Ocean.  [4]  [5]\n  If Earth&#39;s magnetism is represented by a bar magnet of small size but strong intensity (&#34; magnetic dipole&#34;), the SAA variation can be illustrated by placing the magnet not in the plane of the Equator, but some small distance North, shifted more or less in the direction of  Singapore. As a result, over northern South America and the south Atlantic, near Singapore&#39;s  antipodal point, the magnetic field is relatively weak, resulting in a lower  repulsion to trapped particles of the radiation belts there, and as a result these particles reach deeper into the upper atmosphere than they otherwise would.  [6]\n The shape of the SAA changes over time. Since its initial discovery in 1958,  [7] the southern limits of the SAA have remained roughly constant while a long-term expansion has been measured to the northwest, the north, the northeast, and the east. Additionally, the shape and particle density of the SAA varies on a  diurnal basis, with greatest particle density corresponding roughly to local noon. At an altitude of approximately 500\u00a0km (310\u00a0mi), the SAA spans from  \u221250\u00b0 to 0\u00b0 geographic latitude and from  \u221290\u00b0 to +40\u00b0 longitude.  [8] The highest intensity portion of the SAA drifts to the west at a speed of about 0.3\u00b0 per year, and is noticeable in the references listed below. The drift rate of the SAA is very close to the  rotation differential between the Earth&#39;s core and its surface, estimated to be between 0.3\u00b0 and 0.5\u00b0 per year.\n Current literature suggests that a slow weakening of the  geomagnetic field is one of several causes for the changes in the borders of the SAA since its discovery. As the geomagnetic field continues to weaken, the inner Van Allen belt gets closer to the Earth, with a commensurate enlargement of the SAA at given altitudes. [   citation needed]\n  The South Atlantic Anomaly is of great significance to astronomical  satellites and other  spacecraft that  orbit the Earth at several hundred kilometers altitude; these orbits take satellites through the anomaly periodically, exposing them to several minutes of strong radiation, caused by the trapped protons in the inner Van Allen belt. The  International Space Station, orbiting with an  inclination of 51.6\u00b0, requires extra shielding to deal with this problem. The  Hubble Space Telescope does not take observations while passing through the SAA.  [9] Astronauts are also affected by this region, which is said to be the cause of peculiar &#34;shooting stars&#34; ( phosphenes) seen in the visual field of astronauts, an effect termed the  cosmic ray visual phenomena.  [10] Passing through the South Atlantic Anomaly is thought  [11] to be the reason for the  failures of the Globalstar network&#39;s satellites in 2007.\n The  PAMELA experiment, while passing through the SAA, detected  positron levels that were orders of magnitude higher than expected. This suggests the Van Allen belt confines antiparticles produced by the interaction of the Earth&#39;s upper atmosphere with  cosmic rays.  [12]\n NASA has reported that modern laptops have crashed when  Space Shuttle flights passed through the anomaly.  [13]\n In October 2012, the  SpaceX CRS-1 Dragon spacecraft attached to the International Space Station experienced a transient problem as it passed through the anomaly.  [14]\n The SAA is believed to have started a series of events leading to the destruction of the  Hitomi, Japan&#39;s most powerful X-ray observatory. The anomaly transiently disabled a direction-finding mechanism, causing the satellite to rely solely on gyroscopes that were not working properly, after which it spun itself apart.  [15]\n    ^     a     b   Pav\u00f3n-Carrasco, F. Javier; De Santis, Angelo (April 2016). &#34;The South Atlantic Anomaly: The Key for a Possible Geomagnetic Reversal&#34;.  Frontiers in Earth Science.  4. 40.  Bibcode: 2016FrEaS...4...40P.  doi:  10.3389/feart.2016.00040.\n ^   Rao, G. S. (2010).   Global Navigation Satellite Systems: With Essentials of Satellite Communications. New Delhi: Tata McGraw-Hill. p.\u00a0125.  ISBN\u00a0  978-0-07-070029-1.\n ^   Stassinopoulos, Epaminondas G.; Xapsos, Michael A.; Stauffer, Craig A. (December 2015).  &#34;Forty-Year &#39;Drift&#39; and Change of the SAA&#34;. NASA Goddard Spaceflight Center. NASA/TM-2015-217547, GSFC-E-DAA-TN28435.   Cite journal requires  |journal= ( help)\n   ^   Broad, William J. (5 June 1990).  &#34; &#39;Dip&#39; on Earth is Big Trouble in Space&#34;.   The New York Times .\n ^    &#34;The South Atlantic Anomaly&#34;. Ask an Astrophysicist. NASA. 4 October 1996. Archived from  the original on 5 November 2007 .\n   ^    &#34;Space Intelligence News&#34;  (PDF). Ascend. March 2007. Archived from  the original  (PDF) on 2007-02-14.\n ^   Adriani, O.; Barbarino, G. C.; Bazilevskaya, G. A.; Bellotti, R.; Boezio, M.; et al. (August 2011). &#34;The Discovery of Geomagnetically Trapped Cosmic-Ray Antiprotons&#34;.  The Astrophysical Journal Letters.  737 (2). L29.  arXiv:  1107.4882.  Bibcode: 2011ApJ...737L..29A.  doi: 10.1088/2041-8205/737/2/L29.\n  ^   Bergin, Chris (October 19, 2012).  &#34;Dragon enjoying ISS stay, despite minor issues&#34;.  NASA Spaceflight .\n ^   Moon, Mariella (April 29, 2016).  &#34;Japan&#39;s most powerful X-ray satellite is dead&#34;.   Engadget .\n  &#34;Magnetic mysteries of Earth&#39;s Core&#34;.  BBC News.   Section &#34;Magnetic flip&#34; contains a video showing the growth and movement of the South Atlantic Anomaly over the last 400 years.", "posttime": "2020-05-29 07:50:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u897f\u6d0b,atlantic,saa", "title": "\u5357\u5927\u897f\u6d0b\u5f02\u5e38", "title_en": "South Atlantic Anomaly", "transed": 1, "url": "https://en.wikipedia.org/wiki/South_Atlantic_Anomaly", "via": "", "real_tags": ["\u5927\u897f\u6d0b", "atlantic", "saa"]}]