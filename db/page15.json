[{"category": "", "categoryclass": "", "imagename": "17d6eea97ef7523da353195a88b04242.jpg", "infoid": 1007562, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6bcf\u4e2a\u4e92\u8054\u7f51\u7528\u6237\u90fd\u7559\u4e0b\u4e86\u6570\u5b57\u75d5\u8ff9\u3002\u56e0\u6b64\uff0c\u5f53\u89c6\u9891\u663e\u793a\u4e00\u540d\u8499\u9762\u7eb5\u706b\u72af\u5728\u6700\u8fd1\u8d39\u57ce\u4e00\u573a\u6297\u8bae\u6d3b\u52a8\u5f53\u5929\u653e\u706b\u711a\u70e7\u4e00\u8f86\u8b66\u8f66\u65f6\uff0c\u5979\u7684\u8138\u88ab\u85cf\u8d77\u6765\u7684\u4e8b\u5b9e\u5e76\u6ca1\u6709\u963b\u6b62\u8054\u90a6\u8c03\u67e5\u5c40(FBI)\u7279\u5de5\u8ffd\u6355\u5acc\u7591\u4eba\u3002\u6839\u636e\u8054\u90a6\u8c03\u67e5\u5c40\u7684\u8bf4\u6cd5\uff0c\u94a5\u5319\u6700\u7ec8\u662f\u4e00\u4e2a\u7eb9\u8eab\u548cEtsy\u8bc4\u8bba\uff0c\u8fd9\u540d\u6d89\u5acc\u7eb5\u706b\u72af\u4e3a\u4e86\u5979\u5728\u72af\u7f6a\u73b0\u573a\u7a7f\u7684T\u6064\u79bb\u5f00\u4e86\u3002\nFBI\u7279\u5de5\u7ea6\u745f\u592b\u00b7\u5361\u5f6d\u7279\u5728\u5468\u4e00\u63d0\u4ea4\u7ed9\u7f8e\u56fd\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u533a\u6cd5\u9662\u7684\u4e00\u4efd\u5ba3\u8a93\u4e66\u4e2d\u5199\u9053\uff0c\u88ab\u6307\u63a7\u7684\u7eb5\u706b\u72af-\u88ab\u8054\u90a6\u8c03\u67e5\u5c40\u786e\u8ba4\u4e3aLore-ElisElizabeth Blumenthal\uff0c33\u5c81-\u5f53\u65f6\u6234\u7740\u53e3\u7f69\u3001\u62a4\u76ee\u955c\u3001\u9632\u706b\u624b\u5957\uff0c\u8eab\u7a7f\u5370\u6709\u201c\u7559\u4f4f\u79fb\u6c11\uff0c\u9a71\u9010\u79cd\u65cf\u4e3b\u4e49\u8005\u201d\u6807\u8bed\u7684T\u6064\u65f6\uff0c\u5979\u7684\u7f6a\u884c\u88ab\u76f4\u5347\u673a\u4e0a\u7684\u822a\u7a7a\u65b0\u95fb\u76f4\u64ad\u6293\u62cd\u5230\u4e86\u3002(\u7f8e\u56fd\u8054\u90a6\u8c03\u67e5\u5c40\u7279\u5de5\u7ea6\u745f\u592b\u00b7\u5361\u5f6d\u7279\u5468\u4e00\u5728\u7f8e\u56fd\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u533a\u5730\u533a\u6cd5\u9662\u63d0\u4ea4\u7684\u4e00\u4efd\u5ba3\u8a93\u4e66\u4e2d\u5199\u9053\uff0c\u5979\u5f53\u65f6\u6234\u7740\u53e3\u7f69\uff0c\u6234\u7740\u62a4\u76ee\u955c\uff0c\u8eab\u7a7f\u5370\u6709\u201c\u7559\u4f4f\u79fb\u6c11\uff0c\u9a71\u9010\u79cd\u65cf\u4e3b\u4e49\u8005\u201d\u53e3\u53f7\u7684T\u6064\u3002)\u3002\u7ecf\u8fc7\u8c03\u67e5\uff0c\u5979\u88ab\u902e\u6355\uff0c\u5e76\u88ab\u63a7\u7eb5\u706b\u4e24\u8f86\u8b66\u8f66\u3002\u5979\u4e8e\u5468\u4e8c\u51fa\u73b0\u5728\u8054\u90a6\u6cd5\u9662\uff0c\u653f\u5e9c\u8868\u793a\u5c06\u63d0\u4ea4\u52a8\u8bae\uff0c\u8981\u6c42\u62d8\u7559\u88ab\u544a\u7b49\u5f85\u5ba1\u5224\u3002\n\u5728\u65b0\u95fb\u89c6\u9891\u4e2d\uff0c\u4e00\u8f86\u8b66\u8f66\u5df2\u7ecf\u88ab\u5927\u706b\u541e\u6ca1\uff0c\u5acc\u72af\u4ece\u8f66\u67b6\u9876\u90e8\u8fdb\u5165\uff0c\u4ece\u5df2\u7ecf\u5728\ufb01Re\u4e0a\u7684\u8f7f\u8f66\u540e\u7a97\u4e0a\u79fb\u8d70\u4e00\u5757\u71c3\u70e7\u7684\u8b66\u7528\u8def\u969c\uff0c\u7136\u540e\u5c06\u71c3\u70e7\u7684\u6728\u5934\u63a8\u5165\u4e0d\u5728\ufb01Re\u4e0a\u7684SUV\u4e2d\u3002\u5728\u90a3\u4e4b\u540e\u7684\u51e0\u5206\u949f\u5185\uff0c\u8fd9\u8f86SUV\u5c31\u5b8c\u5168\u88ab\u5927\u706b\u541e\u6ca1\u4e86\u3002\u8fd9\u53d1\u751f\u57285\u670830\u65e5\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u4e4b\u6b7b\u7684\u6297\u8bae\u6d3b\u52a8\u4e4b\u540e\u3002\u5ba3\u8a93\u4e66\u8bf4\uff0c\u867d\u7136\u5f53\u5929\u65e9\u4e9b\u65f6\u5019\u7684\u6297\u8bae\u662f\u548c\u5e73\u7684\uff0c\u4f46\u5f53\u5929\u665a\u4e9b\u65f6\u5019\u7206\u53d1\u4e86\u66b4\u529b\u4e8b\u4ef6\uff0c\u5305\u62ec\u653e\u706b\u711a\u70e7\u8b66\u8f66\u3002\n\u66f4\u591a\u7eb5\u706b\u7684\u955c\u5934\u6765\u81eaVimeo\u4e0a\u53d1\u5e03\u7684\u4e00\u6bb5\u89c6\u9891\uff0c\u8fd9\u6bb5\u89c6\u9891\u6e05\u695a\u5730\u63cf\u7ed8\u4e86\u540c\u4e00\u540d\u5973\u6027\u4e3b\u4f53\u4ece\u6807\u8bb0\u7740\u7684PPD[\u8d39\u57ce\u8b66\u5bdf\u5c40]\u79fb\u8d70\u4e86\u4e00\u5757\u71c3\u70e7\u7684\u6728\u5236\u8def\u969c\u3002\u5ba3\u8a93\u4e66\u8bf4\uff0c\u4ed6\u9a7e\u9a76\u4e00\u8f86\u8f7f\u8f66\uff0c\u628a\u5b83\u4ece\u6709\u6807\u5fd7\u7684PPD SUV\u7684\u7a97\u6237\u91cc\u63a8\u4e86\u51fa\u53bb\uff0c#34\uff1b\u5ba3\u8a93\u4e66\u8bf4\u3002\u4e00\u540dInstagram\u7528\u6237\u4e5f\u4e0a\u4f20\u4e86\u4e00\u5f20\u7167\u7247\uff0c\u7167\u7247\u4e2d\u8fd9\u540d\u5973\u6027\u5728\u8f7f\u8f66\u7740\u706b\u540e\u79bb\u5f00\u4e86\u8f7f\u8f66\uff0c\u5e76\u5c55\u793a\u4e86\u5979\u7684\u80cc\u5305\u3002Instagram\u8d26\u6237\u7684\u6240\u6709\u8005\u5411FBI\u63d0\u4f9b\u4e86\u66f4\u591a\u4ed6\u62cd\u6444\u7684\u7167\u7247\uff0c\u53e6\u4e00\u540d\u4e1a\u4f59\u6444\u5f71\u5e08\u63d0\u4f9b\u4e86\u5f53\u5929\u5728\u8d39\u57ce\u62cd\u6444\u7684\u5927\u7ea6500\u5f20\u7167\u7247\u3002\n\u5373\u4f7f\u6709\u89c6\u9891\u548c\u7167\u7247\uff0c\u8054\u90a6\u8c03\u67e5\u5c40\u4e5f\u8fd8\u4e0d\u80fd\u786e\u8ba4\u5acc\u7591\u4eba\u7684\u8eab\u4efd\uff0c\u56e0\u4e3a\u5979\u7684\u8138\u662f\u770b\u4e0d\u89c1\u7684\u3002\u4f46\u5979\u7a7f\u7684T\u6064\u5f88\u72ec\u7279\uff0c\u5728Etsy\u4e0a\u51fa\u552e\uff0c\u6240\u4ee5FBI\u7279\u5de5\u9605\u8bfb\u4e86\u5356\u5bb6Etsy\u9875\u9762\u4e0a\u7684\u8bc4\u8bba\uff0c\u770b\u770b\u662f\u5426\u6709\u8d39\u57ce\u5730\u533a\u7684\u4eba\u8d2d\u4e70\u4e86\u5b83\u3002\u5ba3\u8a93\u4e66\u79f0\uff0c\u5e03\u9c81\u95e8\u6492\u5c14\u7559\u4e0b\u4e86\u4e00\u67615\u661f\u7684\u8bc4\u8bba\uff0c\u4e0a\u9762\u5199\u7740\uff1a\u201c\u5feb\u901f\u9001\u8d27\uff0c\u975e\u5e38\u611f\u8c22\uff01\u201d\u6765\u81ea\u5979\u7684\u7528\u6237\u540d\u201c\u5c0f\u5df7\u76ee\u5f55\u201d\uff0c\u5979\u7684Etsy\u4e2a\u4eba\u8d44\u6599\u663e\u793a\u5979\u7684\u4f4d\u7f6e\u662f\u8d39\u57ce\u3002\u5ba3\u8a93\u4e66\u79f0\uff0c\u8054\u90a6\u8c03\u67e5\u5c40\u8fd8\u6ca1\u6709\u5979\u7684\u5168\u540d\uff0c\u6240\u4ee5\u4ed6\u4eec\u641c\u7d22\u4e86\u4e00\u4e0b\u5c0f\u5df7\uff0c\u5728\u5728\u7ebf\u65f6\u5c1a\u5e02\u573aPoshmark&34\uff1b\u627e\u5230\u4e86\u4e00\u540d\u7528\u6237\uff0c\u5c55\u793a\u540d\u4e3aLore-ElisElizabeth\u3002\u5728\u8d39\u57ce\u641c\u7d22Lore ElisElizabeth\uff0c\u4f1a\u627e\u5230\u4e00\u4e2aLinkedIn\u4e2a\u4eba\u8d44\u6599\uff0c\u4e0eLore ElisElizabeth\u7684\u540d\u5b57\u76f8\u5339\u914d\uff0c\u6b64\u4eba\u4f3c\u4e4e\u53d7\u96c7\u4e8e\u4e00\u5bb6\u63d0\u4f9b\u6309\u6469\u6cbb\u7597\u670d\u52a1\u7684\u516c\u53f8\u62c5\u4efb\u6309\u6469\u6cbb\u7597\u5e08\u3002(\u6ce8\uff1a\u7f57\u5c14\u00b7\u4f0a\u4e3d\u838e\u767d\u5728LinkedIn\u4e0a\u7684\u4e2a\u4eba\u8d44\u6599\u4e0eLore ElisElizabeth&34\uff1b\u7684\u540d\u5b57\u76f8\u5339\u914d\uff0c\u8be5\u4eba\u4f3c\u4e4e\u53d7\u96c7\u4e8e\u4e00\u5bb6\u63d0\u4f9b\u6309\u6469\u6cbb\u7597\u670d\u52a1\u7684\u516c\u53f8\u62c5\u4efb\u6309\u6469\u6cbb\u7597\u5e08\u3002)\u3002\n\u7eb5\u706b\u72af\u7684\u7167\u7247\u663e\u793a\uff0c\u5979\u7684\u53f3\u524d\u81c2\u4e0a\u6709\u4e00\u4e2a\u548c\u5e73\u6807\u5fd7\u7684\u7eb9\u8eab\uff0c\u8fd9\u4e00\u7eb9\u8eab\u53ef\u4ee5\u5728\u4e00\u6bb5\u56db\u5e74\u524d\u7684\u89c6\u9891\u4e2d\u770b\u5230\uff0c\u89c6\u9891\u4e2d\u7f57\u5c14\u00b7\u4f0a\u4e3d\u838e\u767d\u5728\u5979\u7684\u4f01\u4e1a\u7f51\u7ad9\u4e0a\u505a\u6309\u6469\u3002\u7f51\u7ad9\u4e0a\u6709\u4e00\u4e2a\u6d1b\u5c14\u00b7\u4f0a\u4e3d\u838e\u767d\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u5361\u5f6d\u7279\u8bf4\uff0c\u8054\u90a6\u8c03\u67e5\u5c40\u5229\u7528\u56fd\u571f\u5b89\u5168\u90e8\u7684\u65c5\u884c\u6388\u6743\u7535\u5b50\u7cfb\u7edf\u786e\u8ba4\u8fd9\u4e2a\u53f7\u7801\u4e0e\u6d1b\u5c14\u00b7\u5e03\u9c81\u95e8\u6492\u5c14\u6709\u5173\uff0c\u5730\u5740\u662f\u8d39\u57ce\u897f\u675c\u74e6\u8857\u3002\u8fdb\u4e00\u6b65\u641c\u7d22\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u673a\u52a8\u8f66\u7ba1\u7406\u5c40\u7684\u8bb0\u5f55\uff0c\u53d1\u73b0\u4e86\u4e00\u5f20\u5e03\u9c81\u95e8\u5854\u5c14\u7684\u8f66\u7ba1\u6240\u7167\u7247\uff0c\u4ee5\u53ca\u5979\u7684\u5730\u5740\u548c\u51fa\u751f\u65e5\u671f\u3002\nFBI\u968f\u540e\u901a\u8fc7\u4f20\u7968\u4eceEtsy\u5546\u5e97\u8001\u677f\u90a3\u91cc\u83b7\u5f97\u4e86\u8bb0\u5f55\u3002\u5ba3\u8a93\u4e66\u79f0\uff0c\u8bb0\u5f55\u8bc1\u5b9e\uff0c\u8fd9\u540d\u7528\u6237\u786e\u5b9e\u57282020\u5e743\u670810\u65e5\u8d2d\u4e70\u4e86\u4e24\u4ef6T\u6064\uff0c\u4e0a\u9762\u5199\u7740\u201c\u7559\u4f4f\u79fb\u6c11\uff0c\u9a71\u9010\u79cd\u65cf\u4e3b\u4e49\u8005\u201d\u3002\u5176\u4e2d\u4e00\u4ef6\u8d2d\u4e70\u7684T\u6064\u7684\u989c\u8272\u4e0e\u7eb5\u706b\u89c6\u9891\u4e2d\u770b\u5230\u7684\u6de1\u84dd\u8272\u76f8\u540c\uff0c\u800c\u4e14\u8fd9\u4e9b\u886c\u886b\u5df2\u7ecf\u88ab\u8fd0\u5f80\u4e0e\u5e03\u9c81\u95e8\u6492\u5c14\u6709\u5173\u7684\u540c\u4e00\u4e2a\u897f\u675c\u74e6\u5c14\u8857\u5730\u5740\u3002\u5bf9\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4ea4\u901a\u90e8\u8bb0\u5f55\u7684\u641c\u7d22\u53d1\u73b0\uff0c\u5728\u540c\u4e00\u5730\u5740\u6709\u4e00\u8f86\u767b\u8bb0\u5728\u5e03\u9c81\u95e8\u5854\u5c14\u540d\u4e0b\u7684\u6c7d\u8f66\u3002\u8054\u90a6\u8c03\u67e5\u5c40\u7279\u5de5\u5bf9\u8be5\u5730\u5740\u8fdb\u884c\u4e86\u76d1\u89c6\uff0c\u53d1\u73b0\u8fd9\u8f86\u8f66\u505c\u5728\u8be5\u5730\u70b9/\u9644\u8fd1\uff0c\u65e0\u4eba\u9a7e\u9a76\u3002\n\u8bc1\u8bcd\u79f0\uff0c\u4ece\u6d1b\u5c14\u00b7\u5e03\u9c81\u95e8\u6492\u5c14(Lore Blumenthal)\u5bf9\u4e00\u4ef6T\u6064\u7684Etsy\u8bc4\u8bba\uff0c\u5979\u5728Poshmark\u548cLinkedIn\u4e0a\u7684\u4e2a\u4eba\u8d44\u6599\uff0c\u4ee5\u53ca\u5979\u5728\u6309\u6469\u6cbb\u7597\u7f51\u7ad9\u4e0a\u53d1\u5e03\u7684\u89c6\u9891\u4e2d\u53ef\u4ee5\u770b\u5230\u7684\u7eb9\u8eab\uff0cFBI\u627e\u5230\u4e86\u4ed6\u4eec\u9700\u8981\u7684\u7ec6\u8282\uff0c\u4ee5\u4fbf\u5c06\u7167\u7247\u548c\u89c6\u9891\u4e2d\u770b\u5230\u7684\u7eb5\u706b\u72af\u4e0e\u653f\u5e9c\u8bb0\u5f55\u8fdb\u884c\u5339\u914d\u3002\n\u5e03\u9c81\u95e8\u5854\u5c14\u88ab\u63a7\u4e24\u9879\u6545\u610f\u9020\u6210\u6076\u610f\u7834\u574f\u7684\u7f6a\u540d\uff0c\u76ee\u524d\u6b63\u88ab\u8054\u90a6\u62d8\u7559\u3002\u636ePennLive\u62a5\u9053\uff0c\u4e4b\u6240\u4ee5\u63d0\u51fa\u8054\u90a6\u6307\u63a7\uff0c\u662f\u56e0\u4e3a\u8d39\u57ce\u8b66\u65b9\u63a5\u53d7\u4e86\u7f8e\u56fd\u653f\u5e9c\u7684\u8d44\u52a9\u3002\n\u53f8\u6cd5\u90e8\u548c\u7f8e\u56fd\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4\u7684\u4e00\u4efd\u65b0\u95fb\u7a3f\u79f0\uff0c\u5982\u679c\u7f6a\u540d\u6210\u7acb\uff0c\u88ab\u544a\u53ef\u80fd\u9762\u4e34\u6700\u9ad880\u5e74\u7684\u76d1\u7981\uff0c\u968f\u540e\u662f3\u5e74\u7684\u76d1\u7763\u91ca\u653e\uff0c\u4ee5\u53ca\u6700\u9ad850\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\u3002\n\u7f8e\u56fd\u68c0\u5bdf\u5b98\u5a01\u5ec9\u00b7M\u00b7\u9ea6\u514b\u65af\u6e29(William M.McSwain)\u8868\u793a\uff1a\u6211\u4eec\u7f8e\u56fd\u68c0\u5bdf\u5b98\u529e\u516c\u5ba4\u5b8c\u5168\u652f\u6301\u7b2c\u4e00\u4fee\u6b63\u6848\u8d4b\u4e88\u4eba\u6c11\u548c\u5e73\u96c6\u4f1a\u548c\u5411\u653f\u5e9c\u8bf7\u613f\u7684\u6743\u5229\u3002\u4f46\u711a\u70e7\u8b66\u8f66\u4e0e\u548c\u5e73\u6297\u8bae\u6216\u4efb\u4f55\u5408\u6cd5\u4fe1\u606f\u65e0\u5173\u3002\u8fd9\u662f\u4e00\u79cd\u66b4\u529b\u548c\u5351\u9119\u7684\u884c\u4e3a\uff0c\u5c06\u5728\u8fd9\u4e2a\u5730\u533a\u53d7\u5230\u6700\u5927\u9650\u5ea6\u7684\u6cd5\u5f8b\u8d77\u8bc9\u3002\n\u8fd9\u4e9b\u90fd\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4fa6\u63a2\u6280\u80fd\u3002\u5982\u679c\u8b66\u65b9\u5c06\u540c\u6837\u7684\u52aa\u529b\u6295\u5165\u5230\u5185\u90e8\u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u5c31\u4f1a\u8d70\u4e0a\u66f4\u597d\u7684\u8f68\u9053\u3002", "note_en": "To some extent, every Internet user leaves a digital trail. So when a masked arsonist was seen on video setting fire to a police car on the day of a recent protest in Philadelphia, the fact that her face was hidden didn&#39;t prevent a Federal Bureau of Investigation agent from tracking down the suspect. The keys ended up being a tattoo and an Etsy review the alleged arsonist had left for a T-shirt she was wearing at the scene of the crime, according to the FBI.\n The alleged arsonist\u2014identified by the FBI as Lore-Elisabeth Blumenthal, 33\u2014was wearing a mask, goggles, fire-resistant gloves, and a T-shirt with the slogan &#34;Keep the immigrants, deport the racists&#34; when her crime was captured live on an aerial news feed from a helicopter, FBI Special Agent Joseph Carpenter wrote in an  affidavit filed Monday in US District Court for the Eastern District of Pennsylvania. After an investigation, she was arrested and  charged with arson of two police vehicles. She appeared in federal court on Tuesday, and the government  said it &#34;will be filing a motion for the defendant to be detained pending trial.&#34;\n In the news video, a police sedan was already &#34;engulfed in flames&#34; when the suspect &#34;entered from the top of the frame and removed a flaming piece of a wooden police barricade from the rear window of the sedan that was already on \ufb01re, and then shoved the flaming wood into the SUV that was not on \ufb01re. Within minutes of that, the SUV was then completely engulfed in flames.&#34; This happened on May 30 after a protest over the death of George Floyd. The affidavit says, &#34;While the protest earlier in the day was peaceful, violence erupted later on in the day,&#34; including the arson of police cars.\n More footage of the arson came in a video posted on Vimeo that &#34;clearly depicts the same female subject removing a flaming piece of wooden barricade from the marked PPD [Philadelphia Police Dept.] sedan and shoving it through the window of the marked PPD SUV,&#34; the affidavit said. An Instagram user had also posted a photo that &#34;shows the female subject moving away from the sedan after it is on fire, and shows her backpack.&#34; The owner of the Instagram account provided more photos he had taken to the FBI, and another amateur photographer provided about 500 pictures taken that day in Philadelphia.\n     Even with video and photos, the FBI wasn&#39;t yet able to identify the suspect because her face wasn&#39;t visible. But the T-shirt she wore was unique and sold on Etsy, so FBI agents read the reviews on the seller&#39;s Etsy page to see if anyone from the Philadelphia area had purchased it. Blumenthal had left a 5-star review that said, &#34;Fast shipping, thanks very much!&#34; from her username &#34;alleycatlore,&#34; and her Etsy profile displayed her location as Philadelphia, the affidavit said. The FBI did not yet have her full name, so they did a search for &#34;alleycatlore&#34; and found a user on the online fashion marketplace Poshmark &#34;with a display name of &#39;lore-elisabeth,&#39;&#34; the affidavit said. A search for &#34;Lore Elisabeth&#34; in Philadelphia turned up &#34;a LinkedIn profile for an individual matching the name &#39;Lore Elisabeth&#39; who appears to be employed as a massage therapist with a company that provides massage therapy services.&#34;\n Pictures of the alleged arsonist showed a tattoo of a peace sign on her right forearm, and that tattoo was visible in a four-year-old video of Lore Elisabeth performing a massage on her business&#39;s website. The website had a phone number for Lore Elisabeth, and Carpenter said the FBI used the Department of Homeland Security&#39;s Electronic System for Travel Authorization to confirm that the number &#34;is associated with Lore Blumenthal,&#34; with an address on West Duval Street in Philadelphia. A further search of Pennsylvania Department of Motor Vehicles records found a DMV photo of Blumenthal along with her address and date of birth.\n The FBI subsequently obtained records from the Etsy store owner via a subpoena. The records &#34;confirmed that this user did purchase two T-shirts reading &#39;Keep the immigrants, deport the racists&#39; on March 10, 2020,&#34; the affidavit said. One of the purchased T-shirts was in the same light blue color seen in video of the arson, and the shirts had been shipped to the same West Duval Street address connected to Blumenthal. A search of Pennsylvania Department of Transportation records identified a car registered to Blumenthal at the same address. FBI agents conducted surveillance of the address and saw the car &#34;parked and unoccupied at/near that location.&#34;\n From Lore Blumenthal&#39;s Etsy review of a T-shirt, her profiles on Poshmark and LinkedIn, and the tattoo visible on a video posted to her massage therapy website, the FBI found the details they needed to match the arsonist seen in photos and video to government records, the affidavit said.\n &#34;Blumenthal, who is charged with two counts of knowingly causing malicious destruction, is in federal custody. The federal charges were lodged because the Philly police receive funding from the US government,&#34; PennLive  reported.\n &#34;If convicted, the defendant faces a maximum possible sentence of eighty years in prison, followed by three years of supervised release, and a fine of up to $500,000,&#34; a  press release from the Department of Justice and US Attorney&#39;s office said.\n &#34;We at the US Attorney&#39;s Office fully support the First Amendment right of the people to assemble peaceably and to petition their government,&#34; US Attorney William M. McSwain said. &#34;But torching a police car has nothing to do with peaceful protest or any legitimate message. It is a violent and despicable act that will be prosecuted in this district to the fullest extent of the law.&#34;\n  Those are impressive detective skills.  If the police put the same effort into internal investigations, we&#39;d be on a better track.", "posttime": "2020-06-22 04:42:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7eb5\u706b\u72af,arsonist,\u7167\u7247", "title": "\u8499\u9762\u7eb5\u706b\u72af\u56e0Etsy\u5ba1\u67e5\u88ab\u786e\u8ba4\u5e76\u5165\u72f1", "title_en": "Masked Arsonist Identified and Jailed Because of Etsy Review", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/06/masked-arsonist-mightve-gotten-away-with-it-if-she-hadnt-left-etsy-review/", "via": "", "real_tags": ["\u7eb5\u706b\u72af", "arsonist", "\u7167\u7247"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007560, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[\u5217\u8868\u4e2d\u7684\u4e0a\u4e00\u4e2a][\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u524d\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0b\u4e00\u4e2a]\u5217\u8868\uff1aopenbsd-cvsSubject\uff1acvs\uff1acvs.openbsd.org\uff1asrcFrom\uff1aDavid Gwynne&lt\uff1bDLG()OpenBSD\uff01org&gt\uff1b\u65e5\u671f\uff1a2020-06-21 12\uff1a11\uff1a26\u6d88\u606f-ID\uff1a467354be6850f13d()OpenBSD\uff01org[\u4e0b\u8f7d\u539f\u59cb\u6d88\u606f\u6216\u6b63\u6587]CVSROOT\uff1a/cvsModule Name\uff1asrcChanges by\uff1adlg@cvs.openbsd.org 2020/06/21 06\uff1a11\uff1a26\u4fee\u6539\u6587\u4ef6\uff1asys/net\uff1aif.c\u6dfb\u52a0\u6587\u4ef6\uff1asys/net\uff1aif_wg.c if_wg.h wg_cookie.c wg_cookie.h wg_noise.c wg_noise.h\u65e5\u5fd7\u6d88\u606f\uff1aadd wg(4)\uff0c\u5b83\u7684\u529f\u80fd\u81f3\u5c11\u4e0eGo\u5b9e\u73b0\u4e00\u6837\uff0c\u800c\u4e14\u53ef\u80fd\u66f4\u591a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u4ee5\u5728\u66f4\u591a\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0a\u5de5\u4f5c\u3002\u6211\u76f8\u4fe1\u8fd8\u53ef\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5f00\u53d1\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u8fd9\u6837\u8bf4\uff0c\u5173\u4e8e\u6811\u4e2d\u7684\u4efb\u4f55\u4e8b\u60c5\u548c\u6240\u6709\u4e8b\u60c5\u3002ok deraadt@[\u5217\u8868\u4e2d\u7684\u524d\u4e00\u4e2a][\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u524d\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0b\u4e00\u4e2a]\u7684ok deraadt@[\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a][\u7ebf\u7a0b\u4e2d\u7684\u4e0b\u4e00\u4e2a]", "note_en": "[ prev in list] [ next in list] [ prev in thread] [ next in thread]   List:  openbsd-cvsSubject:  CVS: cvs.openbsd.org: srcFrom:  David Gwynne &lt;dlg () openbsd ! org&gt;Date:  2020-06-21 12:11:26Message-ID:  467354be6850f13d () openbsd ! org[Download RAW  message or  body]CVSROOT:\t/cvsModule name:\tsrcChanges by:\tdlg@cvs.openbsd.org\t2020/06/21 06:11:26Modified files:\tsys/net : if.c Added files:\tsys/net : if_wg.c if_wg.h wg_cookie.c wg_cookie.h \t wg_noise.c wg_noise.h Log message:add wg(4), an in kernel driver for WireGuard vpn communication.thanks to Matt Dunwoodie and Jason A. Donenfeld for their effort.it&#39;s at least as functional as the go implementation, and maybemore so since this one works on more architectures.i&#39;m sure there&#39;s further development that can be done, but you cansay that about anything and everything that&#39;s in the tree.ok deraadt@ [ prev in list] [ next in list] [ prev in thread] [ next in thread]", "posttime": "2020-06-22 04:03:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5408\u5e76,merged,wg", "title": "WireGuard\u5408\u5e76\u5230OpenBSD", "title_en": "WireGuard Merged into OpenBSD", "transed": 1, "url": "https://marc.info/?l=openbsd-cvs&m=159274150512676&w=2", "via": "", "real_tags": ["\u5408\u5e76", "merged", "wg"]}, {"category": "", "categoryclass": "", "imagename": "c3ecb4bec6960a1aff073efc0d963c79.png", "infoid": 1007558, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5728\u8868\u793a\u80fd\u529b\u4e0a\u7684\u663e\u8457\u63d0\u9ad8\u63a8\u52a8\u4e86\u57fa\u4e8e\u56fe\u50cf\u7684\u4e09\u7ef4\u4eba\u4f53\u5f62\u72b6\u4f30\u8ba1\u7684\u6700\u65b0\u8fdb\u5c55\u3002\u867d\u7136\u76ee\u524d\u7684\u65b9\u6cd5\u5df2\u7ecf\u5728\u73b0\u5b9e\u4e16\u754c\u73af\u5883\u4e2d\u5c55\u793a\u4e86\u6f5c\u529b\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u4e0d\u80fd\u4ea7\u751f\u8f93\u5165\u56fe\u50cf\u4e2d\u7ecf\u5e38\u51fa\u73b0\u7684\u7ec6\u8282\u7ea7\u522b\u7684\u91cd\u5efa\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u4e00\u9650\u5236\u4e3b\u8981\u6e90\u4e8e\u4e24\u4e2a\u76f8\u4e92\u51b2\u7a81\u7684\u8981\u6c42\uff1a\u51c6\u786e\u7684\u9884\u6d4b\u9700\u8981\u8f83\u5927\u7684\u80cc\u666f\uff0c\u4f46\u7cbe\u786e\u7684\u9884\u6d4b\u9700\u8981\u9ad8\u5206\u8fa8\u7387\u3002\u7531\u4e8e\u5f53\u524d\u786c\u4ef6\u7684\u5185\u5b58\u9650\u5236\uff0c\u4ee5\u524d\u7684\u65b9\u6cd5\u5f80\u5f80\u5c06\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\u6765\u8986\u76d6\u5927\u8303\u56f4\u7684\u7a7a\u95f4\u80cc\u666f\uff0c\u4ece\u800c\u4ea7\u751f\u7cbe\u5ea6(\u6216\u4f4e\u5206\u8fa8\u7387)\u8f83\u4f4e\u76843D\u4f30\u8ba1\u3002\u6211\u4eec\u901a\u8fc7\u5236\u5b9a\u7aef\u5230\u7aef\u53ef\u57f9\u8bad\u7684\u591a\u5c42\u4f53\u7cfb\u7ed3\u6784\u6765\u89e3\u51b3\u8fd9\u4e00\u9650\u5236\u3002\u7c97\u7565\u7684\u6c34\u5e73\u4ee5\u8f83\u4f4e\u7684\u5206\u8fa8\u7387\u89c2\u5bdf\u6574\u4e2a\u56fe\u50cf\uff0c\u5e76\u4e13\u6ce8\u4e8e\u6574\u4f53\u63a8\u7406\u3002\u8fd9\u63d0\u4f9b\u4e86\u901a\u8fc7\u89c2\u5bdf\u66f4\u9ad8\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u6765\u4f30\u8ba1\u975e\u5e38\u8be6\u7ec6\u7684\u51e0\u4f55\u56fe\u5f62\u7684\u7cbe\u7ec6\u7ea7\u522b\u7684\u4e0a\u4e0b\u6587\u3002\u6211\u4eec\u901a\u8fc7\u5145\u5206\u5229\u75281k\u5206\u8fa8\u7387\u7684\u8f93\u5165\u56fe\u50cf\uff0c\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u5355\u5e45\u56fe\u50cf\u4eba\u4f53\u5f62\u72b6\u91cd\u5efa\u4e0a\u7684\u6027\u80fd\u660e\u663e\u4f18\u4e8e\u73b0\u6709\u7684\u6700\u5148\u8fdb\u6280\u672f\u3002", "note_en": "Recent advances in image-based 3D human shape estimation have been driven by the significant improvement in representation power afforded by deep neural networks. Although current approaches have demonstrated the potential in real world settings, they still fail to produce reconstructions with the level of detail often present in the input images. We argue that this limitation stems primarily form two conflicting requirements; accurate predictions require large context, but precise predictions require high resolution. Due to memory limitations in current hardware, previous approaches tend to take low resolution images as input to cover large spatial context, and produce less precise (or low resolution) 3D estimates as a result. We address this limitation by formulating a multi-level architecture that is end-to-end trainable. A coarse level observes the whole image at lower resolution and focuses on holistic reasoning. This provides context to an fine level which estimates highly detailed geometry by observing higher-resolution images. We demonstrate that our approach significantly outperforms existing state-of-the-art techniques on single image human shape reconstruction by fully leveraging 1k-resolution input images.", "posttime": "2020-06-22 03:45:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,facebook,research,people,\u56fe\u50cf", "title": "Facebook Research\u53d1\u5e03\u6280\u672f\uff0c\u4ece\u7167\u7247\u4e2d\u521b\u5efa\u4eba\u76843D\u6a21\u578b", "title_en": "Facebook Research Releases Tech To Create 3D Models of People From Photographs", "transed": 1, "url": "https://shunsukesaito.github.io/PIFuHD/", "via": "", "real_tags": ["\u53d1\u5e03", "facebook", "research", "people", "\u56fe\u50cf"]}, {"category": "", "categoryclass": "", "imagename": "57c62bad6fdacfcf1cebc3ae7430414c.jpg", "infoid": 1007556, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba9\u6211\u4eec\u7b80\u5355\u5730\u5f00\u59cb\u5427\u3002\u4f60\u4eec\u4e2d\u6709\u591a\u5c11\u4eba\u538c\u5026\u4e86\u542c\u5230\u201c\u96f6\u4fe1\u4efb\u201d\u8fd9\u4e2a\u8bcd\uff1f\u201c\u96f6\u4fe1\u4efb\u201d\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\uff1fWendy Nather(@WendyNather)\u5728\u5979\u7684\u5168\u5929DevOps\u6f14\u793a\u6587\u7a3f\u4e2d\u89e3\u91ca\u9053\u3002\n\u5728\u96f6\u4fe1\u4efb\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u8be5\u5047\u8bbe\u7f51\u7edc\u4e0a\u7684\u4e00\u5207\u90fd\u4e0d\u5b89\u5168\u3002\u662f\u7684\uff0c\u60a8\u7684\u5185\u90e8\u7f51\u7edc\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u76f8\u4fe1\u4efb\u4f55\u4eba\u3002\u4f46\u60a8\u5fc5\u987b\u660e\u786e\u68c0\u67e5\u4fe1\u4efb\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u5b83\u5728\u60a8\u7684\u7f51\u7edc\u4e0a\u5e76\u901a\u8fc7\u4e86\u9632\u706b\u5899\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u786e\u4fdd\u5b83\u7684\u5b89\u5168\u3002\n\u9700\u8981\u8003\u8651\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u6210\u529f\u7684\u653b\u51fb\u8005\u770b\u8d77\u6765\u5b8c\u5168\u50cf\u5185\u90e8\u4eba\u58eb\u3002\u4f8b\u5982\uff0c\u653b\u51fb\u8005\u4e00\u65e6\u83b7\u5f97\u4e86\u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u51ed\u636e\uff0c\u5c31\u901a\u8fc7VPN\u8fdb\u5165\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u5f88\u5b89\u5168\u3002\u552f\u4e00\u8b66\u544a\u5927\u5bb6\u7684\u662f\u952e\u76d8\u5df2\u7ecf\u6362\u6210\u4e86\u4e2d\u6587\u3002\u5047\u8bbe\u4f60\u5728\u4e00\u5bb6\u4ff1\u4e50\u90e8\uff0c\u4f60\u7684\u4fdd\u9556\u5c31\u662f\u9632\u706b\u5899\u3002\u96f6\u4fe1\u4efb\u610f\u5473\u7740\u8c03\u9152\u5e08\u4ecd\u7136\u8981\u6c42\u987e\u5ba2\u51fa\u793a\u8eab\u4efd\u8bc1\u3002\u8c03\u9152\u5e08\u4e0d\u4f9d\u8d56\u4fdd\u9556\u6216\u5176\u4ed6\u4efb\u4f55\u4eba\u7684\u68c0\u67e5\u548c\u8ba4\u8bc1\u3002\u8fd9\u662f\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u653f\u7b56\u548c\u6761\u4ef6\u5141\u8bb8\u67d0\u4eba\u8fdb\u5165\u5927\u95e8\u3002\u53e6\u5916\uff0c\u53ef\u80fd\u8fd8\u6ca1\u6709\u4eba\u8d70\u8fdb\u4fdd\u9556\u7684\u95e8\u3002\u4e5f\u8bb8\u4ed6\u4eec\u662f\u4ece\u540e\u9662\u8fdb\u6765\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u5c3d\u53ef\u80fd\u9760\u8fd1\u8bbf\u95ee\u70b9\u7684\u5730\u65b9\u9a8c\u8bc1\u8eab\u4efd\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8c03\u9152\u5e08\u4ecd\u7136\u4f1a\u8981\u4f60\u7684\u8eab\u4efd\u8bc1\u3002\n\u9690\u6027\u4fe1\u4efb\u662f\u4e2a\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u79d1\u7f57\u62c9\u591a\u5dde\u4ea4\u901a\u90e8\u9047\u5230\u4e86\u5bfc\u81f4\u52d2\u7d22\u8f6f\u4ef6\u548c\u6570\u5468\u505c\u673a\u7684\u95ee\u9898\u3002\u82b1\u70b9\u65f6\u95f4\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e00\u4e0b\u8fd9\u4e2a\u6545\u4e8b\u3002\n\u201c\u8fd9\u53ea\u662f\u4e00\u4e2a\u4e34\u65f6\u5b9e\u4f8b\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u901a\u5e38\u7684\u5b89\u5168\u914d\u7f6e\u3002\u201d\n\u201c\u6211\u4eec\u5c06\u6240\u6709\u4e1c\u897f\u90fd\u52a0\u5165\u5185\u90e8\u57df\uff0c\u5373\u4f7f\u5b83\u4e0d\u662f\u5185\u90e8\u57df\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u4f7f\u4e00\u5207\u987a\u5229\u8fd0\u884c\u3002\u201d\n\u201c\u5982\u679c\u60a8\u662f\u5185\u90e8\u57df\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u6b21\u68c0\u67e5\u60a8\u3002\u201d\n\u6211\u4eec\u6709\u65f6\u4f1a\u8ba4\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u4e34\u65f6\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5b83\u4e0d\u9700\u8981\u901a\u5e38\u7684\u5b89\u5168\u914d\u7f6e\u3002\u6216\u8005\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u6ca1\u6709\u4eba\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u4f8b\u5b50\u3002\u6211\u4eec\u4e0d\u80fd\u505a\u8fd9\u4e9b\u5047\u8bbe\u3002\n\u7f51\u7edc\u5206\u6bb5\u80fd\u89e3\u51b3\u95ee\u9898\u5417\uff1f\u662f\u4e5f\u4e0d\u662f\u3002\u8fd9\u53d6\u51b3\u4e8e\u5b83\u7684\u7c92\u5ea6\u3002\u4f46\u7c92\u5ea6\u8d8a\u5927\uff0c\u7ef4\u62a4\u96be\u5ea6\u5c31\u8d8a\u5927\u3002\n\u53e6\u4e00\u4e2a\u5173\u4e8e\u96f6\u4fe1\u4efb\u7684\u6ce8\u610f\u4e8b\u9879--\u8fd9\u4e0d\u662f\u4e00\u79cd\u5de5\u5177\u6216\u6280\u672f\u3002\u65e0\u8bba\u662f\u5728\u6211\u4eec\u7684\u7f51\u7edc\u4e0a\u8fd8\u662f\u5728\u6211\u4eec\u7684\u7f51\u7edc\u4e4b\u5916\uff0c\u8fd9\u90fd\u662f\u4e00\u79cd\u4e0d\u540c\u7684\u601d\u8003\u8d44\u6e90\u7684\u65b9\u5f0f\u3002\n\u9996\u5148\uff0c\u5c06\u8fb9\u754c\u89c6\u4e3a\u60a8\u505a\u51fa\u8bbf\u95ee\u63a7\u5236\u51b3\u7b56\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4e0d\u8fd0\u884c\u81ea\u5df1\u7684\u7f51\u7edc\uff0c\u90a3\u4e48\u4e00\u5207\u90fd\u6709\u6f5c\u5728\u7684\u654c\u610f\u3002\u5c06\u60a8\u7684\u5b89\u5168\u6027\u79fb\u52a8\u5230\u60a8\u53ef\u4ee5\u63a7\u5236\u7684\u7ea7\u522b\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u65b0\u7684\u516c\u5171\u8fb9\u754c\u7684\u4f8b\u5b50\uff1a\u5f53\u4eba\u4eec\u5728\u5bb6\u5ead\u548c\u5de5\u4f5c\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u5728\u5de5\u4f5c\u65f6\u767b\u5f55\u6211\u7684\u8c37\u6b4c\u8d26\u6237\uff0c\u5927\u591a\u6570\u516c\u53f8\u90fd\u4e0d\u4f1a\u5728\u610f\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u767b\u5f55\u4e86\u6211\u7684\u4e2a\u4eba\u8d26\u6237\uff0c\u8fd9\u5c31\u6210\u4e86\u6211\u96c7\u4e3b\u7684\u95ee\u9898\u3002\u8fb9\u754c\u53ef\u80fd\u4f1a\u53d7\u5230\u6211\u8f93\u5165\u7684\u767b\u5f55\u4fe1\u606f\u7684\u5f71\u54cd\u3002\n\u5728\u4e09\u4e2a\u65b9\u9762\uff0c\u96f6\u4fe1\u4efb\u53ef\u4ee5\u4fdd\u8bc1\u4f60\u7684\u5b89\u5168\uff1a\u52b3\u52a8\u529b\u3001\u5de5\u4f5c\u91cf\u548c\u5de5\u4f5c\u573a\u6240\u3002\u4f8b\u5982\uff0c\u5728\u5458\u5de5\u961f\u4f0d\u4e2d\uff0c\u60a8\u60f3\u77e5\u9053\u7528\u6237\u662f\u5426\u5c31\u662f\u4ed6\u4eec\u6240\u8bf4\u7684\u90a3\u4e2a\u4eba\u3002\u60a8\u60f3\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u62e5\u6709\u6b63\u786e\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u8bbe\u5907\u662f\u5426\u5b89\u5168\u53ef\u4fe1\u3002\n\u52b3\u52a8\u529b\u3001\u5de5\u4f5c\u91cf\u3001\u5de5\u4f5c\u573a\u6240\u5e7b\u706f\u7247\u6458\u81eaWendy Nather\u7684\u201cZeroTrustOps\uff1aSecure at Scale\u201d\u6f14\u793a\u6587\u7a3f\u3002\n\u7136\u800c\uff0c\u96f6\u4fe1\u4efb\u4e0d\u4ec5\u4ec5\u5173\u4e4e\u7528\u6237\u3002\u67e5\u770b\u5de5\u4f5c\u8d1f\u8f7d\u65f6\uff0c\u6b63\u5728\u4f7f\u7528\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6b63\u5728\u901a\u4fe1\u54ea\u4e9b\u6570\u636e\uff1f\u54ea\u4e9b\u6570\u636e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u4f20\u9012\uff0c\u4ee5\u53ca\u5982\u4f55\u4fdd\u62a4\u8fd9\u4e9b\u6570\u636e\uff1f\u751a\u81f3\u5728\u6211\u4eec\u7684\u7f51\u7edc\u4e2d\u4e5f\u8d8a\u6765\u8d8a\u591a\u5730\u4f7f\u7528\u52a0\u5bc6\u6280\u672f\u3002\n\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5de5\u4f5c\u573a\u6240\u3002\u6211\u4eec\u53ef\u80fd\u5728\u5de5\u4f5c\u65e5\u4e2d\u4f7f\u7528\u7269\u8054\u7f51\u3001\u667a\u80fd\u706f\u6ce1\u548c\u5176\u4ed6\u6280\u672f\u3002\u6211\u4eec\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u5458\u5de5\u968f\u8eab\u643a\u5e26\u7684\u6240\u6709\u8bbe\u5907\u3002\u5b83\u4eec\u53ef\u80fd\u662f\u6613\u53d7\u653b\u51fb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5c06\u5b83\u4eec\u4e0e\u6211\u4eec\u7f51\u7edc\u7684\u5176\u4f59\u90e8\u5206\u5206\u5f00\u5462\uff1f\n\u5728DevOps\u4e2d\uff0c\u60a8\u5c06\u6bd4\u8fc7\u53bb\u8d1f\u8d23\u66f4\u591a\u7684\u5de5\u4f5c\uff1a\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u90e8\u7f72\u548c\u76d1\u63a7\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5728\u67e5\u770b\u4e0b\u9762\u7684\u56fe\u8868\u65f6\uff0c\u8bf7\u8003\u8651\u6240\u6709\u5185\u5bb9\u662f\u5982\u4f55\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u3002\u6839\u636e\u5bf9\u8bdd\u5185\u5bb9\u7684\u4e0d\u540c\uff0c\u60a8\u4f1a\u6709\u4e0d\u540c\u7684\u5b89\u5168\u534f\u8bae\u548c\u4e0d\u540c\u7684\u5b89\u5168\u987e\u8651\u3002\n\u8be5\u56fe\u8868\u663e\u793a\u4e86Wendy Nather\u7684\u201cZeroTrustOps\uff1aScaling at Scale\u201d\u6f14\u793a\u6587\u7a3f\u4e2d\u53ef\u80fd\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u5730\u65b9\u3002\n\u60a8\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5e76\u770b\u5230\u8bb8\u591a\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u673a\u4f1a\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u5f20\u684c\u5b50\u5e76\u4e0d\u5b8c\u6574\u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u4e8b\u60c5\u8981\u89e3\u51b3\u3002\n\u4f8b\u5982\uff0c\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u95ee\u9898\u3002\u67e5\u770b\u7528\u6237\u89d2\u8272\uff0c\u4e86\u89e3\u4ed6\u4eec\u5fc5\u987b\u4f7f\u7528\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5\u624d\u80fd\u8bc1\u660e\u81ea\u5df1\u662f\u4ed6\u4eec\u6240\u8bf4\u7684\u90a3\u4e2a\u4eba\u3002\u8fd9\u5bfc\u81f4\u813e\u6c14\u66b4\u8e81\u7684\u7528\u6237\u4e0d\u5f97\u4e0d\u8ddf\u8e2a\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684\u65b9\u6cd5\uff01\n\u4f7f\u7528DevOps\uff0c\u60a8\u5fc5\u987b\u6ce8\u610f\u5f71\u54cd\u548c\u89c4\u6a21\u3002DevOps\u4e16\u754c\u4e2d\u7684\u7528\u6237\u90fd\u62e5\u6709\u63d0\u5347\u7684\u6743\u9650\u3002\u4ed6\u4eec\u53ef\u4ee5\u8bbf\u95ee\u6bd4\u666e\u901a\u7528\u6237\u591a\u5f97\u591a\u7684\u5185\u5bb9\u3002\n\u6b64\u5916\uff0c\u60a8\u5e94\u8be5\u67e5\u770b\u5de5\u4f5c\u8d1f\u8f7d\u95f4\u901a\u4fe1\u3002\u60a8\u53ef\u80fd\u4e0d\u4f1a\u9884\u6599\u5230\u4e00\u53f0\u670d\u52a1\u5668\u4e0e\u53e6\u4e00\u53f0\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u7136\u800c\uff0c\u5f53\u653b\u51fb\u8005\u653b\u51fb\u65f6\uff0c\u4ed6\u4eec\u4f1a\u5229\u7528\u8fd9\u4e9b\u6ca1\u6709\u4eba\u60f3\u8fc7\u8981\u963b\u6b62\u7684\u6a2a\u5411\u901a\u4fe1\u3002\u662f\u7684\uff0c\u5c06\u5e94\u8be5\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u7684\u6240\u6709\u5185\u5bb9\u5217\u5165\u767d\u540d\u5355\u662f\u5f88\u53ef\u6015\u7684\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u65f6\u95f4\u3002\u4f46\u5b83\u5c06\u901a\u8fc7\u96f6\u4fe1\u4efb\u5e26\u6765\u66f4\u5927\u7684\u5b89\u5168\u6027\u3002\n\u6700\u540e\uff0c\u8981\u8ba4\u8bc6\u5230\u81ea\u52a8\u5316\u65e2\u6709\u597d\u5904\uff0c\u4e5f\u6709\u574f\u5904\u3002\u5b83\u51cf\u8f7b\u4e86\u6211\u4eec\u7684\u5de5\u4f5c\u91cf\uff0c\u4f46\u4e5f\u9a71\u4f7f\u6211\u4eec\u8fbe\u5230\u6700\u4f4e\u7684\u516c\u5206\u6bcd\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u81ea\u5b9a\u4e49\u4e00\u9879\u7279\u5b9a\u5185\u5bb9\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4e3a\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u76f8\u540c\u7684\u901a\u7528\u5b89\u5168\u7b56\u7565\u548c\u89c4\u5219\u3002\u7136\u540e\uff0c\u4f60\u4f1a\u6ed1\u5165\u4e00\u79cd\u4e07\u7269\u90fd\u5728\u4e0e\u5176\u4ed6\u4e07\u7269\u5bf9\u8bdd\u7684\u72b6\u6001\u3002\u653f\u7b56\u6bd4\u5e94\u6709\u7684\u5bbd\u677e\u3002\u56e0\u6b64\uff0c\u60a8\u5e94\u8be5\u82b1\u65f6\u95f4\u5f04\u6e05\u695a\u7ec6\u7c92\u5ea6\u7684\u5b89\u5168\u7b56\u7565\u3002\u96f6\u4fe1\u4efb\u5e76\u4e0d\u662f\u8ba9\u6240\u6709\u4e8b\u60c5\u90fd\u5f52\u4e8e\u540c\u4e00\u653f\u7b56\u4e4b\u4e0b\u3002\n\u90a3\u4e48\u653b\u51fb\u8005\u4e0b\u4e00\u6b65\u4f1a\u53bb\u54ea\u91cc\u5462\uff1f\u5982\u679c\u6211\u4eec\u963b\u6b62\u7f51\u7edc\u5185\u90e8\u7684\u6a2a\u5411\u79fb\u52a8\uff0c\u5b83\u4eec\u5f88\u53ef\u80fd\u4f1a\u5207\u6362\u5230\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6a2a\u5411\u79fb\u52a8\u3002\u60a8\u5fc5\u987b\u5f00\u59cb\u8003\u8651\u66f4\u591a\u5730\u4fdd\u62a4\u60a8\u7684API\u3002\n\u4f8b\u5982\uff0c\u60a8\u7684\u56e2\u961f\u53ef\u80fd\u4f1a\u4fe1\u4efb\u60a8\u5728\u7f51\u7edc\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8a00\u3002\u4f46\u4ed6\u4eec\u53ef\u80fd\u4e0d\u76f8\u4fe1\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u6253\u788e\u4e1c\u897f\u3002\u5373\u4f7f\u4ed6\u4eec\u786e\u5b9e\u4fe1\u4efb\u4f60\uff0c\u8fd9\u79cd\u4fe1\u4efb\u4e5f\u4e0d\u5e94\u8be5\u662f\u6c38\u4e45\u6027\u7684\u3002\n\u60f3\u4e00\u60f3\u4f60\u4fe1\u4efb\u67d0\u4eba\u505a\u4ec0\u4e48\uff0c\u4ec0\u4e48\u6761\u4ef6\u9700\u8981\u4e3a\u771f\uff0c\u4ee5\u53ca\u8fd9\u79cd\u4fe1\u4efb\u5e94\u8be5\u6301\u7eed\u591a\u4e45\u3002", "note_en": "Let\u2019s start simply. How many of you are tired of hearing the term \u201czero trust\u201d? And what does \u201czero trust\u201d even mean? Wendy Nather ( @WendyNather) explains in her All Day DevOps presentation.\n  With zero trust, you should assume everything on the network isn\u2019t safe. Yes, your internal network too. It doesn\u2019t mean that you shouldn\u2019t trust anyone ever. But you have to check trust explicitly. So even if it\u2019s on your network and got past your firewall, you still need to make sure it\u2019s safe.\n The important thing to think about is that successful attackers look exactly like insiders. For example, an attacker once acquired a sysadmin\u2019s credentials, came in through a VPN, and looked safe. The only thing that warned anyone was that the keyboard had been  changed to Chinese. Let\u2019s say you\u2019re in a club and your bouncer is the firewall. Zero trust means the bartender then still requires customers to see IDs. The bartender doesn\u2019t rely on checks and authentication from the bouncer or anyone else. That\u2019s because they may be allowing someone in the door based on different policies and conditions. Additionally, someone might not have even come through the bouncer\u2019s door. Maybe they came through the back patio. Therefore, we need to verify identity as close as possible to the point of access. And that\u2019s why the bartender will still ask for your ID.\n  Implicit trust is a problem. For example, the Colorado Department of Transportation ran into issues that resulted in ransomware and several weeks of outage. Take some time to look into this story by googling it.\n    \u201cIt\u2019s only a temporary instance, so it doesn\u2019t need the usual security configurations\u201d\n  \u201cWe join everything to the internal domain, even if it\u2019s not internal, because that makes everything operate smoothly.\u201d\n \u201cIf you\u2019re part of the internal domain, we don\u2019t need to check you again.\u201d\n We sometimes think it\u2019s only a temporary instance, so it doesn\u2019t need the usual security configurations. Or we might think that nobody will notice this instance. We can\u2019t make these assumptions.\n Will network segmentation fix the problem? Yes and no. It depends on how granular it is. But the more granular it is, the more difficult is to maintain.\n Another note on zero trust\u2014it\u2019s not one tool or technology. It\u2019s a different way of thinking about resources both on and off our network.\n   First, think of the perimeter as being any place where you make access control decisions. For example, if you don\u2019t run your own network, then everything is potentially hostile. Move your security to the level that you can control.\n Here\u2019s one example of a new and common perimeter: when people use the same applications for home and work. For example, if I log into my Google account at work, most companies don\u2019t care. However, if I\u2019m logged in to my personal account, it becomes my employer\u2019s problem. The perimeter can be affected by which login information I put in.\n There are three spots where zero trust can keep you safe:  workforce,  workload, and  workplace. For example, in the workforce you want to know if the user is who they say they are. You want to know that they have the correct access and that their device is secure and trusted.\n  Workforce, workload, workplace slide from Wendy Nather\u2019s \u201cZeroTrustOps: Securing at Scale\u201d presentation.\n However, zero trust isn\u2019t just about users. When looking at workload, what applications are being used and what data is being communicated? And what data is passing between applications and how is it being secured? More and more encryption is used even within our networks.\n And finally, let\u2019s look at the workplace. We may be using IoT, smart light bulbs, and other technologies during our working day. We may need to look at all devices that come inside with our employees. They may be vulnerable, so how do we segment them from the rest of our network?\n  In DevOps, you\u2019ll be responsible for more of this than you were in the past: when you\u2019re designing, coding, deploying and monitoring applications.\n When looking at the chart below, consider how everything connects together. Depending on what talks to what, you\u2019ll have different security protocols and different security concerns.\n Chart that shows potential places authentication could take place from Wendy Nather\u2019s \u201cZeroTrustOps: Securing at Scale\u201d presentation.\n You can look at all of these and see a number of opportunities to do  authentication. And as you can see, the table isn\u2019t complete. We have some things to work out still.\n For instance, there\u2019s one additional problem. Looking at the user role, see how many different authentication methods they must use to prove they are who they say they are. This results in cranky users that have to track all these different methods!\n  With DevOps, you\u2019ll have to pay attention to impact and scale. Users in the DevOps world all have elevated privileges. They have access to a lot more than normal users would.\n Additionally, you should look at inter-workload communications. You may not expect issues with one server talking to another server. However, when attackers attack, they take advantage of these lateral communications that no one thought to block. Yes, it\u2019s scary to whitelist everything that should have access to a system. And it may take time. But it will result in more security through zero trust.\n Finally, realize that automation can both help and harm. It eases our workload, but it also drives to the lowest common denominator. So if you have to customize one particular thing for each application, you start giving everything the same general security policies and rules. Then you slip into a state where everything is talking to everything else. Policies are looser then they should be. Therefore, you should take the time to figure out granular security policies. Zero trust is not about making everything fall under the same policy.\n So where will attackers move next? If we prevent lateral movement within networks, they\u2019ll probably switch to lateral movement between applications. You\u2019ll have to start thinking about securing your APIs more.\n   For example, your team may trust you to speak on a webinar. But they may not trust you to never break things. And even if they do trust you, that trust shouldn&#39;t be permanent.\n Think about what you trust someone to do, what conditions need to be true, and for how long should this trust last.", "posttime": "2020-06-22 03:25:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,zerotrustops,securing,\u4fe1\u4efb", "title": "ZeroTrustOps\uff1a\u5927\u89c4\u6a21\u4fdd\u62a4", "title_en": "ZeroTrustOps: Securing at Scale", "transed": 1, "url": "https://blog.sonatype.com/zerotrustops-securing-at-scale", "via": "", "real_tags": ["rust", "securing", "\u4fe1\u4efb"]}, {"category": "", "categoryclass": "", "imagename": "3d39d3a5df22ddf0cdfdb1101e127a41.jpg", "infoid": 1007555, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5dde\u5927\u5b66\u6234\u7ef4\u65af\u5206\u6821\u7684\u5de5\u7a0b\u5e08\u4eec\u5df2\u7ecf\u5f00\u53d1\u51fa\u4e00\u79cd3D\u6253\u5370\u7684\u65b0\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6253\u5370\u51fa\u5fae\u8c03\u7684\u67d4\u6027\u6750\u6599\u3002\u901a\u8fc7\u4f7f\u7528\u57fa\u4e8e\u6db2\u6ef4\u7684\u591a\u76f8\u5fae\u6d41\u63a7\u7cfb\u7edf\uff0c\u8be5\u56e2\u961f\u80fd\u591f\u9ad8\u6548\u5730\u6253\u5370\u5728\u8f6f\u673a\u5668\u4eba\u3001\u7ec4\u7ec7\u5de5\u7a0b\u548c\u53ef\u7a7f\u6234\u6280\u672f\u4e2d\u5177\u6709\u6f5c\u5728\u5e94\u7528\u7684\u6750\u6599\u3002\u8fd9\u9879\u7814\u7a76\u53d1\u8868\u57286\u670815\u65e5\u7684\u201c\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u9662\u9662\u520a\u201d\u4e0a\u3002\n\u5728\u4f20\u7edf\u7684\u57fa\u4e8e\u6324\u538b\u76843D\u6253\u5370\u673a\u4e2d\uff0c\u6253\u5370\u6750\u6599\u88ab\u63a8\u8fc7\u55b7\u5634\u5e76\u91cd\u590d\u6dfb\u52a0\u5230\u7ed3\u6784\u4e2d\uff0c\u76f4\u5230\u4ea7\u54c1\u5b8c\u6210\u3002\u867d\u7136\u8fd9\u662f\u9ad8\u6548\u548c\u7ecf\u6d4e\u7684\uff0c\u4f46\u5b83\u4f7f\u5f97\u6253\u5370\u7531\u591a\u79cd\u6750\u6599\u5236\u6210\u7684\u7ed3\u6784\u53d8\u5f97\u56f0\u96be\uff0c\u5e76\u4e14\u83b7\u5f97\u9002\u91cf\u7684\u67d4\u8f6f\u5ea6\u53ef\u80fd\u662f\u5177\u6709\u6311\u6218\u6027\u7684\u3002\n\u52a0\u5dde\u5927\u5b66\u6234\u7ef4\u65af\u5206\u6821(UC Davis)\u5316\u5b66\u5de5\u7a0b\u52a9\u7406\u6559\u6388\u4e07\u5efa\u8fea(\u97f3\u8bd1)\u6ce8\u610f\u5230\uff0c\u8fd9\u79cd\u55b7\u5634\u4e0e\u4ed6\u7684\u5b9e\u9a8c\u5ba4\u7814\u7a76\u7684\u73bb\u7483\u6bdb\u7ec6\u7ba1\u5fae\u6d41\u63a7\u88c5\u7f6e\u76f8\u4f3c\u3002\u8fd9\u4e9b\u8bbe\u5907\u5728\u5f7c\u6b64\u5185\u90e8\u653e\u7f6e\u4e86\u591a\u4e2a\u55b7\u5634\u3002\n\u201c\u5927\u591a\u6570\u57fa\u4e8e\u6324\u538b\u76843D\u6253\u5370\u673a\u4f7f\u7528\u975e\u5e38\u7b80\u5355\u7684\u55b7\u5634\uff0c\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u8fd9\u4e9b\u73bb\u7483\u5fae\u6d41\u4f53\uff0c\u6211\u4eec\u5c31\u60f3\uff0c\u2018\u4e3a\u4ec0\u4e48\u4e0d\u628a\u5b83\u5e94\u7528\u4e8e3D\u6253\u5370\u5462\uff1f\u2019\u201d\u4e07\u8bf4\u3002\n\u52a0\u5dde\u5927\u5b66\u6234\u7ef4\u65af\u5206\u6821(UC Davis)\u7814\u7a76\u751fHing Jii Mea\u548c\u7f57\u5207\u65af\u7279\u5927\u5b66(University Of Rochester)\u7684\u8def\u6613\u65af\u00b7\u5fb7\u5c14\u52a0\u8fea\u7f57(Luis Delgadillo)\u5f00\u53d1\u4e86\u4e00\u79cd\u8bbe\u5907\uff0c\u4f7f\u7528\u591a\u76f8\u6ef4\u704c\u7cfb\u7edf\u5c06\u542b\u6709\u805a\u4e59\u4e8c\u9187\u4e8c\u4e19\u70ef\u9178\u916f(PEGDA)\u7684\u6c34\u57fa\u6eb6\u6db2\u7684\u6db2\u6ef4\u5c01\u88c5\u5728\u4e00\u79cd\u540d\u4e3a\u805a\u4e8c\u7532\u57fa\u7845\u6c27\u70f7(PDMS)\u7684\u5e38\u89c1\u7845\u57fa\u6709\u673a\u805a\u5408\u7269\u4e2d\u3002PDMS\u7ed5\u7740\u6ef4\u5934\u6d41\u52a8\uff0c\u6ef4\u5934\u4ea7\u751fPEGDA\u7684\u5fae\u5c0f\u6db2\u6ef4\uff0c\u5f53\u4e24\u79cd\u6750\u6599\u6d41\u52a8\u5230\u6b63\u5728\u6253\u5370\u7684\u7ed3\u6784\u4e0a\u65f6\uff0cPDMS\u5747\u5300\u5730\u63d2\u5165PDMS\u3002\n\u7531\u6b64\u4ea7\u751f\u7684\u7ed3\u6784\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u5403\u8c46\u4eba\u8ff7\u5bab\uff0c\u5468\u56f4\u73af\u7ed5\u7740PDMS\u7684PEGDA\u5c0f\u6db2\u6ef4\u3002\u4e00\u65e6PEGDA\u4ece\u6db2\u6ef4\u4e2d\u6269\u6563\u51fa\u6765\uff0c\u5b83\u5c31\u4f1a\u5728\u5316\u5b66\u4e0a\u8f6f\u5316PDMS\uff0c\u4f7f\u5176\u7ed3\u6784\u66f4\u52a0\u7075\u6d3b\u3002\n\u201c\u4f60\u4e5f\u53ef\u4ee5\u5728\u6db2\u6ef4\u4e2d\u5c01\u88c5\u5176\u4ed6\u5316\u5b66\u7269\u8d28\uff0c\u4f7f\u6574\u4e2a\u57fa\u8d28\u53d8\u5f97\u66f4\u8f6f\u6216\u66f4\u786c\uff0c\u201d\u4e07\u8bf4\u3002\n\u8be5\u56e2\u961f\u8fd8\u5c55\u793a\u4e86\u57fa\u4e8e\u6db2\u6ef4\u76843D\u6253\u5370\u53ef\u4ee5\u7528\u4e8e\u751f\u4ea7\u7075\u6d3b\u7684\u591a\u5b54\u7269\u4f53\uff0c\u5e76\u7531\u5c01\u88c5\u7684\u805a\u5408\u7269\u9897\u7c92\u548c\u91d1\u5c5e\u6db2\u6ef4\u6784\u6210\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u6539\u53d8\u6db2\u6ef4\u5927\u5c0f\u548c\u6d41\u901f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8c03\u6574\u7ed3\u6784\u67d4\u6027\u3002\u8fd9\u4e3a\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u5e7f\u6cdb\u7684\u9009\u62e9\uff0c\u4ee5\u771f\u6b63\u8bbe\u8ba1\u4ed6\u4eec\u7684\u7ed3\u6784\uff0c\u5e76\u6539\u53d8\u7075\u6d3b\u6027\uff0c\u4ee5\u6ee1\u8db3\u4ed6\u4eec\u7684\u9700\u6c42\uff0c\u8fd9\u662f\u4f20\u7edf\u7684\u55b7\u5634\u65b9\u6cd5\u96be\u4ee5\u505a\u5230\u7684\u3002\n\u867d\u7136\u4e4b\u524d\u5df2\u7ecf\u5b8c\u6210\u4e86\u57fa\u4e8e\u5fae\u6d41\u4f53\u76843D\u6253\u5370\uff0c\u4f46\u4e07\u7684\u56e2\u961f\u662f\u7b2c\u4e00\u4e2a\u4f7f\u7528\u8fd9\u79cd\u57fa\u4e8e\u6db2\u6ef4\u7684\u591a\u76f8\u4e73\u6db2\u65b9\u6cd5\u7684\u3002\u8be5\u56e2\u961f\u5df2\u7ecf\u5728\u7814\u7a76\u6f5c\u5728\u7684\u5e94\u7528\uff0c\u5e76\u4e86\u89e3\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u54ea\u4e9b\u5176\u4ed6\u6750\u6599\u7ec4\u5408\u6765\u6539\u53d83D\u6253\u5370\u4ea7\u54c1\u7684\u673a\u68b0\u6216\u5316\u5b66\u7279\u6027\u3002\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u9879\u5de5\u4f5c\u53ef\u4ee5\u5e94\u7528\u4e8e\u751f\u7269\u6253\u5370\u548c\u53ef\u7a7f\u6234\u7535\u5b50\u4ea7\u54c1\uff0c\u6bd4\u5982\u667a\u80fd\u9762\u6599\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\u8fd9\u5c06\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u7814\u7a76\u9886\u57df\uff0c\u56e0\u4e3a\u5c06\u5df2\u5efa\u7acb\u7684\u5fae\u6d41\u63a7\u6280\u672f\u5e94\u7528\u4e8e3D\u6253\u5370\u4ee3\u8868\u7740\u4e00\u4e2a\u65b0\u7684\u53d1\u5c55\u65b9\u5411\u3002\u201d", "note_en": "Engineers at the University of California, Davis, have developed a new approach to 3D printing that allows printing of finely tuned flexible materials. By using a droplet-based, multiphase microfluidic system, the team was able to efficiently print materials with potential applications in soft robotics, tissue engineering and wearable technology. The work is published June 15 in the Proceedings of the National Academy of Sciences.\n In traditional extrusion-based 3D printers, printing material is pushed through a nozzle and added to the structure repeatedly until the product is complete. While this is efficient and cost-effective, it makes it hard to print structures made of more than one material, and getting the right amount of softness can be challenging.\n Jiandi Wan, assistant professor of chemical engineering at UC Davis, noticed that this nozzle was similar to the glass capillary microfluidic devices that his lab studies. These devices have multiple nozzles placed inside of each other.\n \u201cMost extrusion-based 3D printers use very simple nozzles and since we had already developed these glass microfluidics, we thought, \u2018why not apply it to 3D printing?\u2019\u201d said Wan.\n Wan, UC Davis graduate student Hing Jii Mea and\u00a0Luis Delgadillo, University of Rochester, developed a device that uses a multiphase drip system to encapsulate droplets of a water-based solution containing polyethylene glycol diacrylate, or PEGDA, inside of a common silicon-based organic polymer called polydimethylsiloxane, or PDMS. The PDMS flows around a dripper, which makes tiny droplets of the PEGDA that it evenly inserts into the PDMS as both materials flow onto the structure that\u2019s being printed.\n The resulting structure looks like a Pac-Man maze, with little dots of PEGDA droplets surrounded by PDMS. Once the PEGDA diffuses out of the droplets, it chemically softens the PDMS, making the structure more flexible.\n \u201cYou can also encapsulate other chemicals in the droplets to make the overall matrix much softer or harder,\u201d Wan said.\n  The team also showed that droplet-based 3D printing can be used to produce flexible porous objects, and constructs with encapsulated polymer particles and metal droplets. In addition, structure flexibility can be easily tuned by changing the droplet size and flow rate. This gives researchers a wide range of options to truly design their structure and vary flexibility to fit their needs in a way that\u2019s difficult with the conventional nozzle-based method.\n Though microfluidic-based 3D printing has been done before, Wan\u2019s group is the first to use this droplet-based multiphase emulsion approach. The team is already looking into potential applications and learning what other combinations of materials they can use to change the mechanical or chemical properties of 3D printed products. They think the work could have applications in bioprinting and wearable electronics, like smart fabrics.\n \u201cI think this will open a new area of research, since applying the established microfluidics technology to 3D printing represents a new direction to go,\u201d he said.", "posttime": "2020-06-22 03:08:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6253\u5370,tissue", "title": "3D\u6253\u5370\u7684\u524d\u6cbf\uff1a\u5316\u5b66\u54c1\u4e2d\u7684\u5316\u5b66\u7269\u8d28\u548c\u4f53\u5185\u7684\u6253\u5370\u7ec4\u7ec7", "title_en": "The Cutting Edge of 3D Printing: Chemicals Within Chemicals, and Printing Tissue In Bodies", "transed": 1, "url": "https://www.ucdavis.edu/news/new-technique-allows-3d-printing-flexible-materials", "via": "", "real_tags": ["\u6253\u5370", "tissue"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007554, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u6237\u5916\u76f8\u673a\u88ab\u5149\u7ebf\u3001\u98ce\u3001\u6c7d\u8f66\u6216\u4efb\u4f55\u4eba\u4ee5\u5916\u7684\u4e1c\u897f\u89e6\u53d1\u7684\u65f6\u95f4\u592a\u957f\u4e86\uff0c\u8fd9\u7b80\u76f4\u662f\u75af\u4e86\u3002\u8fc7\u5ea6\u8c28\u614e\u7684\u5b89\u5168\u6444\u50cf\u5934\u53ef\u80fd\u662f\u4e00\u4e2a\u7279\u70b9\uff0c\u4f46\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4ee4\u4eba\u607c\u706b\u7684\u7279\u70b9\u3002\n\u6211\u9700\u8981\u4e00\u4e2a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u8d70\u5f97\u592a\u8fdc\u3002\u4e00\u4e9b\u7b80\u5355\u3001\u4f18\u96c5\u800c\u53c8\u6709\u6548\u7684\u4e1c\u897f\u3002\n\u5404\u4f4d\uff0c\u89c1\u89c1\u6211\u4eb2\u5207\u5730\u79f0\u4e4b\u4e3a\u201c\u7a3b\u8349\u4eba\u51f8\u8f6e\u201d\u7684\u4eba\u3002\u8fd9\u662f\u4e00\u6b3e\u7531\u6811\u8393PI\u9a71\u52a8\u7684\u76f8\u673a\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7TensorFlow\u5bf9\u8c61\u68c0\u6d4b\u529f\u80fd\u63a2\u6d4b\u5230\u4eba\u4eec\uff0c\u5f53\u4ed6\u4eec\u8d70\u8fdb\u6211\u7684\u95e8\u5eca\u65f6\uff0c\u5b83\u4f1a\u7528\u5f02\u5e38\u54cd\u4eae\u548c\u523a\u8033\u7684\u97f3\u4e50(\u6216\u8b66\u544a\u58f0)\u5411\u4ed6\u4eec\u95ee\u5019\u3002\n\u901a\u8fc7\u4f7f\u7528TensorFlow\u3001Raspberry PI\u3001\u76f8\u673a\u3001\u626c\u58f0\u5668\u548cWifi\u8fdb\u884c\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\uff0c\u8fd9\u786e\u4fdd\u4e86\u591c\u665a\u7684\u5b81\u9759\u3002\u6709\u70b9\u3002\n\u66f4\u4e25\u8083\u5730\u8bf4\uff0c\u4f7f\u7528\u5b9e\u65f6\u89c6\u9891\u6d41\u548c\u673a\u5668\u5b66\u4e60\u8fdb\u884c\u5bf9\u8c61\u68c0\u6d4b\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u771f\u5b9e\u7528\u4f8b\u3002\u867d\u7136\u5927\u591a\u6570\u7528\u4f8b\u90fd\u53ef\u4ee5\u8bf4\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\uff0c\u4f46\u6211\u786e\u5b9e\u53d1\u73b0\u5728\u79c1\u4eba\u5b89\u5168\u6444\u50cf\u5934\u4e0a\u68c0\u6d4b\u7269\u4f53\u6216\u4eba\u6709\u4e00\u5b9a\u7684\u4ef7\u503c\u3002\n\u5982\u679c\u5bb6\u91cc\u7684\u5b89\u5168\u6444\u50cf\u5934\u7f51\u7edc\u80fd\u591f\u68c0\u6d4b\u5230\u771f\u5b9e\u7684\u3001\u6f5c\u5728\u7684\u5a01\u80c1-\u4eba\u7c7b\u548c\u677e\u9f20-\u5e76\u505a\u51fa\u76f8\u5e94\u7684\u53cd\u5e94(\u4f8b\u5982\uff0c\u901a\u8fc7\u53d1\u9001\u8b66\u62a5)\uff0c\u8fd9\u5c06\u6781\u5927\u5730\u63d0\u9ad8\u8fd9\u4e9b\u8bbe\u5907\u7684\u6709\u7528\u6027\uff0c\u8fd9\u4e9b\u8bbe\u5907\u4e3b\u8981\u4f9d\u8d56\u4e8e\u8fd0\u52a8\u68c0\u6d4b\u6216\u8fde\u7eed\u89c6\u9891\u8bb0\u5f55-\u8981\u4e48\u975e\u5e38\u5bb9\u6613\u51fa\u9519\uff0c\u8981\u4e48\u6700\u591a\u53ea\u80fd\u662f\u88ab\u52a8\u7684(\u5411\u4f60\u5c55\u793a\u4e8b\u540e\u53d1\u751f\u7684\u4e8b\u60c5)\u3002\n\u7136\u800c\uff0c\u5927\u591a\u6570\u6d88\u8d39\u7ea7\u89c6\u9891\u76d1\u63a7\u7cfb\u7edf\u90fd\u5f88\u7cdf\u7cd5\uff0c\u7b80\u5355\u660e\u4e86\u3002\u5b83\u4eec\u8981\u4e48\u9700\u8981\u6602\u8d35\u7684\u786c\u63a5\u7ebf\uff0c\u8981\u4e48\u4f9d\u8d56\u4e8e\u6bcf10\u5206\u949f\u8bbe\u7f6e\u4e00\u7ec4\u7684\u7834\u65e7\u7ea2\u5916\u7ebf\u548c\u8fd0\u52a8\u68c0\u6d4b\uff0c\u56e0\u4e3a\u6c7d\u8f66\u4f1a\u7ecf\u8fc7\u623f\u5b50\uff0c\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u516c\u53f8\u7684\u4f18\u96c5\u548c\u8f6f\u4ef6\u66f4\u65b0\uff0c\u901a\u5e38\u662f\u4ee5\u8ba2\u9605\u6a21\u5f0f\u63d0\u4f9b\u7684\uff0c\u901a\u5e38\u65e0\u6cd5\u901a\u8fc7API\u8bbf\u95ee\u3002\n\u6211\u7684\u672a\u5177\u540d\u7684\u6237\u5916\u76f8\u673a\u8bbe\u7f6e\u901a\u5e38\u662f\u7531Old Glory\u5728\u98ce\u4e2d\u6325\u821e\u6765\u89e6\u53d1\u7684\uff0c\u800c\u4e0d\u662f\u7531\u4e00\u4e2a\u4eba\u6765\u89e6\u53d1\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u5e26\u6709\u6444\u50cf\u5934\u6a21\u5757\u7684Raspberry PI 4\u6765\u68c0\u6d4b\u89c6\u9891\u3002\u5b83\u53ef\u4ee5\u8fde\u7eed\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u4f9d\u9760\u8fd0\u52a8\u4f20\u611f\u5668\u6765\u542f\u52a8\u3002\n\u4e3a\u4e86\u68c0\u6d4b\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Google\u7684\u5f20\u91cf\u6d41\u5bf9\u8c61\u68c0\u6d4bAPI\u3002\u8fd9\u4e2a\u5e93\u4f7f\u6211\u4eec\u51e0\u4e4e\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u5730\u4f7f\u7528\u5bf9\u8c61\u68c0\u6d4b(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\uff0c\u800c\u4e0d\u9700\u8981\u624b\u52a8\u8bad\u7ec3\u548c\u8c03\u4f18\u6a21\u578b\uff0c\u4e5f\u4e0d\u9700\u8981\u4e91\u90e8\u7f72\u3002\n\u73b0\u5728\uff0c\u7ed9\u60a8\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u7684\u65e7RasPI\u8fd0\u884c\u7684\u662f32\u4f4d\u7248\u672c\u7684Raspbian\u3002TensorFlow\u4e0d\u9002\u7528\u4e8e32\u4f4d\u64cd\u4f5c\u7cfb\u7edf(\u5f53\u7136\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u9009\u62e9)\u3002\u6b64\u5916\uff0c\u867d\u7136\u65b0\u7684Raspberry\u662f\u4e00\u53f0\u529f\u80fd\u5f3a\u5927\u7684\u5c0f\u673a\u5668\uff0c\u4f46\u5b83\u8fdc\u4e0d\u80fd\u4e0e\u73b0\u4ee3\u7535\u8111\u76f8\u63d0\u5e76\u8bba--\u7279\u522b\u662f\u57283\u7248\u548c\u66f4\u65e9\u7684\u7248\u672c\u4e0a\u3002\n\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728PI\u4e0a\u901a\u8fc7\u7f51\u7edc\u5c06\u89c6\u9891\u6d41\u5f0f\u4f20\u8f93\u5230\u529f\u80fd\u66f4\u5f3a\u5927\u7684\u673a\u5668-\u5bb6\u5ead\u670d\u52a1\u5668\u3001NAS\u3001\u8ba1\u7b97\u673a\u3001\u65e7\u7b14\u8bb0\u672c\u7535\u8111-\u5e76\u5728\u90a3\u91cc\u5904\u7406\u4fe1\u606f\u3002\n\u8fd9\u662f\u4e00\u4e2a\u53eb\u505a\u8fb9\u7f18\u8ba1\u7b97\u7684\u6982\u5ff5\u3002\u4f7f\u7528\u6b64\u6982\u5ff5\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u4f7f\u7528\u529f\u80fd\u8f83\u5f31\u7684\u8f83\u5c0f\u673a\u5668\u6765\u5b9e\u73b0\u4f4e\u5ef6\u8fdf\u901a\u4fe1\uff0c\u65b9\u6cd5\u662f\u5728\u7269\u7406\u4e0a\u9760\u8fd1\u8fb9\u7f18\u8282\u70b9\u7684\u673a\u5668\u4e0a\u6267\u884c\u7e41\u91cd\u4efb\u52a1-\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd0\u884cTensorFlow\u5bf9\u8c61\u68c0\u6d4b\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u907f\u514d\u4e86\u901a\u8fc7\u4e92\u8054\u7f51\u5f80\u8fd4\uff0c\u4ee5\u53ca\u5fc5\u987b\u5728AWS\u6216GCP\u4e0a\u652f\u4ed8\u4e91\u8ba1\u7b97\u8d39\u7528\u3002\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4f7f\u7528VidGear\uff0c\u7279\u522b\u662f\u5b83\u7684NETGEAR API\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528ZeroMQ\u901a\u8fc7\u7f51\u7edc\u6d41\u5f0f\u4f20\u8f93\u89c6\u9891\u7684API\u3002\u53ea\u9700\u63d0\u9632\u9700\u8981\u60a8\u4f7f\u7528\u5f00\u53d1\u5206\u652f\u7684bug\u3002\n\u4e00\u65e6\u6211\u4eec\u68c0\u6d4b\u5230\u6d41\u4e2d\u6709\u4eba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528ZeroMQ\u5411Raspberry\u53d1\u9001\u4fe1\u53f7\uff0c\u64ad\u653e\u4e00\u4e9b\u975e\u5e38\u54cd\u4eae\u3001\u4ee4\u4eba\u8ba8\u538c\u7684\u97f3\u9891\u6765\u5413\u8dd1\u4eba\u4eec\u3002\n(\u6b63\u5982Reddit\u4e0a\u7684\u4e00\u4e9b\u4eba\u6240\u547c\u5401\u7684\u90a3\u6837-\u9664\u4e86\u8fd9\u4e00\u70b9\uff0c\u8fd8\u6709\u5176\u4ed6\u9009\u62e9\uff0c\u5373esp32cam\u548cTFLite)\n\u867d\u7136\u53ef\u4ee5\u8bf4\u4e0d\u662f\u6700\u6709\u8da3\u7684\u90e8\u5206\uff0c\u4f46\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5f00\u53d1\u73af\u5883\u3002\u4e3a\u6b64\uff0c\u6211\u5728Linux\u4e0a\u4f7f\u7528\u5e26\u6709Python3.7\u7684Jupyter\u7b14\u8bb0\u672c\u3002\n\u9644\u6ce8\uff1a\u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662fTensorFlow2.0beta\uff0c\u6211\u4e0d\u5f97\u4e0d\u5728~/.local/lib/python3.7/site-packages/object_detection/utils/label_map_util.py.\u4e2d\u5c06tf.gfile\u7684\u63a5\u53e3\u7834\u8bd1\u4e3atf.io.gfile\u3002\n\u514b\u9686\u7b14\u8bb0\u672c\uff0c\u6309\u7167\u8bf4\u660e\u8bbe\u7f6e\u865a\u62df\u73af\u5883\uff0c\u5e76\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\u9879\u3002\n\u4e00\u65e6\u5b8c\u6210\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u5faa\u73af\u672c\u5730\u89c6\u9891\uff0c\u800c\u4e0d\u5fc5\u771f\u6b63\u8fde\u63a5\u5b9e\u65f6\u6444\u50cf\u673a\u3002\n\u6211\u4eec\u5728\u8fd9\u91cc\u771f\u6b63\u9700\u8981\u505a\u7684\u5c31\u662f\u66f4\u6539\u201cWhile True\u201d\u5faa\u73af\u4ee5\u7ed1\u5b9a\u5230OpenCV\u4f1a\u8bdd\u3002VideoCapture\u53ef\u4ee5\u65b9\u4fbf\u5730\u63a5\u53d7\u6574\u6570(\u5bf9\u4e8e\u7f51\u7edc\u6444\u50cf\u5934)\u6216\u89c6\u9891\u6587\u4ef6\u7684\u8def\u5f84\u3002\n(\u4e3a\u4e86\u9690\u79c1\uff0c\u56fe\u50cf\u7684\u67d0\u4e9b\u90e8\u5206\u88ab\u624b\u52a8\u6a21\u7cca-\u6b64\u5916\uff0c\u8fd9\u4e9b\u90e8\u5206\u662f\u9080\u8bf7\u8bbf\u5ba2\ud83d\ude0a)\u3002\n\u4e00\u65e6\u8fd0\u884c\u7b14\u8bb0\u672c\uff0c\u60a8\u5c31\u5e94\u8be5\u770b\u5230\u68c0\u6d4b\u6a21\u578b\u7684\u8986\u76d6\u3002\u592a\u68d2\u4e86\uff0c\u8fd9\u4e2a\u6a21\u578b\u5f88\u7ba1\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u540e\u518d\u5fae\u8c03\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u4e0d\u4f1a\u4f9d\u8d56\u6211\u4eec\u7684Rasberry PI\u6765\u8fd0\u884c\u68c0\u6d4b-\u6240\u4ee5\u6211\u4eec\u5c06\u8bbe\u7f6e\u4e00\u4e9b\u7f51\u7edc\u901a\u4fe1\u3002\u6211\u539f\u672c\u60f3\u81ea\u5df1\u5199\u8fd9\u7bc7\u6587\u7ae0(\u6211\u73b0\u5728\u6b63\u5728\u5b66\u4e60\u56f4\u68cb\uff0c\u6240\u4ee5\u8fd9\u5c06\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7528\u4f8b)\uff0c\u4f46\u662f\u5982\u679c\u6709\u5e93\u53c8\u4f55\u5fc5\u8d39\u5fc3\u5462\uff1f[1]\n\u4ee5\u4e0b\u662f\u5173\u4e8e\u6211\u5982\u4f55\u8bbe\u7f6ePI\u7684\u793a\u4f8b\u8bb0\u5f55\uff1a\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528VidGear\u7684\u5f00\u53d1\u5206\u652f\uff0c\u56e0\u4e3a\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u4e3b\u670d\u52a1\u5668\u4e0a\u8fd8\u6ca1\u6709\u67d0\u4e2abug\u4fee\u590d\u7a0b\u5e8f\u3002\n\u60a8\u5e94\u8be5\u770b\u5230\u89c6\u9891\u6b63\u5728\u56de\u653e\u3002\u60a8\u4f1a\u6ce8\u610f\u5230\u591a\u5904\u7406\u5e93\u7684\u4e00\u4e9b\u7528\u6cd5-\u51fa\u4e8e\u5f00\u53d1\u76ee\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u786e\u4fddWHILE\u5faa\u73af\u5728\u5b9a\u4e49\u7684\u8d85\u65f6\u540e\u7ec8\u6b62\u3002\n[1]\u7b11\u8bdd\u653e\u4e00\u8fb9\uff1aSQLite\u7684\u521b\u5efa\u8005\u7406\u67e5\u5fb7\u00b7\u5e0c\u666e(Richard Hipp)\u5728Changelog Podcast\u7684\u91c7\u8bbf\u4e2d\u7ed9\u51fa\u4e86\u5f88\u591a\u5f88\u597d\u7684\u7406\u7531\u6765\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u574f\u4e3b\u610f-\u4f46\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u575a\u6301\u4f7f\u7528\u5e93\u3002\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u5b9e\u9645\u90e8\u7f72\u5230\u4e24\u53f0\u4e0d\u540c\u7684\u673a\u5668\u4e0a-\u53ea\u8981\u5c06\u6267\u884cTensorFlow\u7684\u670d\u52a1\u5668\u8fd0\u884c64\u4f4d\u98ce\u683c\u7684Linux(\u5c31\u50cfLinux\u5185\u6838\u4e00\u6837)\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u53ef\u4ee5\u8fd0\u884c\u4e86\u3002\u5728\u5bb6\u91cc\uff0c\u6211\u6709\u4e00\u4e2a\u672c\u5730\u7684GitLab\u548cJenkins\u5b9e\u4f8b\u4e3a\u6211\u505a\u8fd9\u4ef6\u4e8b\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u90e8\u7f72\u9009\u9879\u90fd\u6709\u6548-SCP\u53ef\u4ee5\u6210\u4e3a\u60a8\u7684\u670b\u53cb\u3002\n\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6307\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u5c0f\u8c03\u6574\uff1a\n\u5ba2\u6237\u7aef=NETGEAR(\u5730\u5740=&#39\uff1b192.168.1.xxx\uff0c\u7aef\u53e3=&#39\uff1b5454&#39\uff1b\uff0c\u534f\u8bae=&#39\uff1bTCP&#39\uff1b\uff0c\u6a21\u5f0f=0\uff0c\u63a5\u6536\\_\u6a21\u5f0f=True\uff0c\u65e5\u5fd7=True)\u670d\u52a1\u5668=NETGEAR(\u5730\u5740=&#39\uff1b192.168.1.xxx\uff0c\u7aef\u53e3=&#39\uff1b5454&#39\uff1b\uff0c\u534f\u8bae=&#39\uff1bTCP&#39\uff1b\uff0c\u6a21\u5f0f=0\uff0c\u63a5\u6536\\_\u6a21\u5f0f=\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u4e0a\u542f\u52a8sender.py\uff0c\u5728\u5ba2\u6237\u673a\u4e0a\u542f\u52a8Receiver.py\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\uff1a\u7f51\u7edc\u4e0a\u7684\u89c6\u9891\u3002\u5e72\u51c0\u5229\u843d\uff01\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cTensorFlow\u7684\u96c6\u6210\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff1a\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u5982\u4f55\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u6700\u540e\u4e00\u6b65\u53ea\u9700\u5bfc\u5165\u6211\u4eec\u7684TensorFlow_Detector\u6a21\u5757\uff0c\u5c06\u63a5\u6536\u5230\u7684\u56fe\u50cf\u8f6c\u6362\u4e3aNumpy\u6570\u7ec4(\u56e0\u4e3a\u8fd9\u662fAPI\u6240\u671f\u671b\u7684)\uff0c\u7136\u540e\u8c03\u7528\u201cRun_Inference_for_Single_Image(2)\u201d\u5373\u53ef\u3002\u8f7b\u800c\u6613\u4e3e\uff01\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u6574\u670d\u52a1\u5668\u4ee3\u7801\u4ee5\u5b9e\u9645\u4f7f\u7528TensorFlow\u6765\u68c0\u6d4b\u6765\u81ea\u4e0d\u540c\u673a\u5668\u7684\u56fe\u50cf\u3002\u4f46\u6211\u4eec\u4e0d\u60f3\u8981\u5f55\u5236\u7684\u56fe\u50cf\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u5b9e\u51b5\u8f6c\u64ad\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5728PI\u8bbe\u7f6e\u671f\u95f4\u542f\u7528\u4e86\u76f8\u673a\u6a21\u5757\uff1a\u5c06\u76f8\u673a\u7684\u5e26\u72b6\u7535\u7f06\u8fde\u63a5\u5230PI\uff0c\u542f\u52a8\u5b83\uff0c\u7136\u540e\u8fd0\u884c\uff1a\n\u4e3a\u4e86\u5bf9Python\u6267\u884c\u540c\u6837\u7684\u64cd\u4f5c\uff0cOpenCV\u7684API\u540c\u6837\u7b80\u5355\uff1a\u901a\u8fc7\u5c06\u6e90\u4ece\u89c6\u9891\u6587\u4ef6\u66f4\u6539\u4e3a\u6444\u50cf\u673a\u7684ID-0\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u4e00\u4e2a-\u5728pi\u7684\u4e00\u7aef\uff0cOpenCV\u5c06\u62fe\u53d6\u6444\u50cf\u673a\u6d41\u5e76\u5c06\u5176\u53d1\u9001\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Raspberry\u4e0a\u7684\u89c6\u9891\u6d41\u5f0f\u4f20\u8f93\u5230\u670d\u52a1\u5668\uff0c\u5e76\u68c0\u6d4b\u5230\u6709\u4eba\u3002\u73b0\u5728\u7f3a\u5c11\u7684\u4e00\u73af\u662f\u4f7f\u7528PlaySound\u5e93\u64ad\u653e\u97f3\u9891\uff0cGStreamer\u5728\u5f15\u64ce\u76d6\u4e0b\u3002\u5176\u4ed6\u5907\u9009\u65b9\u6848\u6b63\u5728\u4f7f\u7528OS\u5b50\u8fdb\u7a0b\u8c03\u7528\u6216pyGame-\u53ef\u4ee5\u8bbe\u7f6e\u914d\u7f6e\u9009\u9879\u6765\u66f4\u6539\u6b64\u884c\u4e3a\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u4f7f\u7528ZMQ\uff0c\u65b9\u6cd5\u662f\u5728PI\u4e0a\u542f\u52a8\u4e00\u4e2a\u4fa6\u542c\u5668\u7ebf\u7a0b\uff0c\u7b49\u5f85\u6765\u81ea\u670d\u52a1\u5668\u7684\u8f93\u5165\uff0c\u5e76\u8bbe\u7f6e\u9884\u5b9a\u4e49\u7684\u679a\u4e3e\u503c\u3002\u4e00\u65e6\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5b83\u5c31\u4f1a\u89e6\u53d1\u97f3\u9891\u4fe1\u53f7\u5e76\u64ad\u653e\u58f0\u97f3\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u963b\u585e\u4e86\u5404\u81ea\u7684\u7ebf\u7a0b-\u8fd9\u610f\u5473\u7740\uff0c\u53ea\u8981\u97f3\u9891\u64ad\u653e\uff0c\u76d1\u542c\u5668\u5c31\u4e0d\u4f1a\u5173\u5fc3\u65b0\u6d88\u606f\uff0c\u670d\u52a1\u5668\u4e5f\u5c31\u65e0\u6cd5\u53d1\u9001\u65b0\u6d88\u606f\u3002\n\u4e3a\u4e86\u907f\u514d\u7206\u7834\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7b80\u5355\u7684Sempahore\u7ed3\u6784\u3002\n\u542f\u52a8\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\uff0c\u770b\u770b\u6211\u4eec\u8d70\u8fdb\u623f\u95f4\u4f1a\u53d1\u751f\u4ec0\u4e48\uff01\n\u6b63\u5982\u4f60\u53ef\u4ee5\u770b\u5230\u7684\uff0c\u5b83\u9700\u8981\u4e00\u79d2\u949f\u5c31\u80fd\u68c0\u6d4b\u5230\u6211-\u90e8\u5206\u539f\u56e0\u662f\u6444\u50cf\u5934\u7684\u89d2\u5ea6\uff0c\u6211\u4eec\u9009\u62e9\u7684\u578b\u53f7\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7f51\u7edc\u5ef6\u8fdf\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u4e00\u4e2a\u4eba\u9700\u8981\u8d70\u51fa\u5bb6\u95e8\uff0c\u8fd9\u5c31\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\u4e86\u3002\n\u867d\u7136\u8fd9\u4e2a\u529f\u80fd\u5df2\u7ecf\u8fd0\u884c\u5f97\u76f8\u5f53\u4e0d\u9519\u4e86--\u5b83\u53ef\u4ee5\u6d41\u5f0f\u4f20\u8f93\u89c6\u9891\u3001\u68c0\u6d4b\u4eba\u5e76\u53d1\u9001\u53d1\u9001\u97f3\u9891\u7684\u4fe1\u53f7--\u4f46\u8fd9\u91cc\u80af\u5b9a\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\n\u7136\u800c\uff0c\u4e3a\u4e86\u8fd9\u4e2a\u9879\u76ee\u7684\u76ee\u7684\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u51e0\u4ef6\u4e8b\uff1a\u6211\u4eec\u4f7f\u7528\u7684\u6a21\u578b\u53ea\u662f\u4e00\u4e2a\u9884\u5148\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u65e2\u6ca1\u6709\u9488\u5bf9\u6211\u4eec\u7684\u7279\u5b9a\u7528\u4f8b\u8fdb\u884c\u8c03\u6574\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u4e3a\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u673a\u5668\u63d0\u4f9b\u6700\u4f73\u7684\u5e73\u8861\u3002\n\u6b64\u5916\uff0c\u4ee3\u7801\u4e2d\u7684\u67d0\u4e9b\u65b9\u9762\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u6539\u8fdb--\u7f51\u7edc\u5ef6\u8fdf\u8fd8\u4e0d\u9519\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u505a\u4e00\u4e9b\u5de5\u4f5c\uff0c\u97f3\u9891\u4f1a\u5f88\u5feb\u88ab\u8fde\u7eed\u89e6\u53d1\uff0c\u5e76\u4e14\u4f7f\u7528\u6211\u4eec\u5f53\u524d\u7684ZeroMQ\u6a21\u5f0f\uff0c\u6211\u4eec\u53ea\u80fd\u652f\u6301\u4e00\u4e2a\u5ba2\u6237\u7aef\u3002\n\u867d\u7136\u4f7f\u7528\u7eb8\u677f\u7bb1\u51e0\u4e4e\u5c31\u662f\u5b8c\u7f8e\u7684\u5b9a\u4e49\uff0c\u4f46\u5b9a\u5236\u76843D\u6253\u5370\u6811\u8393\u5916\u58f3\u548c\u7a0d\u597d\u7684\u6563\u70ed\u6027\u53ef\u80fd\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\n\u65e0\u8bba\u5982\u4f55-\u6211\u5bf9\u8fd9\u4e2a\u5c0f\u9879\u76ee\u5f88\u6ee1\u610f\uff0c\u56e0\u4e3a\u5b83\u8bf4\u660e\u4e86\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55\u516c\u5171\u4e91\u4ea7\u54c1\u7684\u60c5\u51b5\u4e0b\uff0c\u6784\u5efa\u81ea\u5df1\u7684\u5b89\u5168\u6444\u50cf\u5934\u3001\u5c06\u5176\u8fde\u63a5\u5230\u7f51\u7edc\u3001\u8fd0\u884c\u5bf9\u8c61\u68c0\u6d4b\u5e76\u89e6\u53d1\u5916\u90e8\u56e0\u7d20(\u5728\u672c\u4f8b\u4e2d\u662f\u97f3\u9891\uff0c\u4f46\u5f88\u5bb9\u6613\u662f\u7535\u8bdd\u901a\u77e5\u6216\u5176\u4ed6\u5185\u5bb9)\u662f\u591a\u4e48\u7b80\u5355\uff0c\u4ece\u800c\u8282\u7701\u4e86\u4f4f\u5b85\u4e92\u8054\u7f51\u4e0a\u7684\u5ef6\u8fdf\u548c\u6210\u672c\u3002\n\u6240\u6709\u5f00\u53d1\u90fd\u662f\u5728POPO\uff0119.04\u4e0b\u8fdb\u884c\u7684\uff0c\u5728Kernel 5.5.1\u4e0a\u4f7f\u752812\u4e2aIntel i7-9750H vCore@2.6 Ghz\uff0c\u57282019 System76 Gazelle\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u4f7f\u752816 GB RAM\uff0c\u5728Raspian 10\u4e0a\u4f7f\u7528Raspberry PI 4 4 GB\u3002", "note_en": "The amount of time my outdoor cameras are being set off by light, wind, cars, or anything other than a human is insane. Overly cautious security cameras might be a feature, but an annoying one at that.\n I needed a solution for this problem, without going completely overboard. Something simple, elegant, yet effective.\n Folks, meet what I lovingly call \u201c  Scarecrow-Cam\u201d. A  Raspberry Pi powered camera that detects people with  Tensorflow Object Detection and greets them with exceptionally loud and harsh music (or a warning sound) the second they step onto my porch.\n Using real-time object detection with Tensorflow, a Raspberry Pi, a camera, a speaker, and Wifi, this ensures quiet evenings. Somewhat.\n  On more serious terms, using real-time video streams and machine-learning for object detection is an actual real-world use case. While most use cases are arguably incredibly creepy, I do find some value in detecting objects or people on private security cameras.\n If a network of security cameras at home would be able to detect real, potential threats \u2013 humans and squirrels \u2013 and would react accordingly (for instance, by sending an alert), this would greatly improve the usefulness of these devices, which mostly rely on either motion detection or continuous video recordings \u2013 both either incredibly error-prone or reactive at most (showing you what happened after the fact).\n  However - Most consumer grade video surveillance systems are awful, plain and simple. Either they require expensive hard-wiring or rely on janky infrared and motion detection that sets of every 10 minutes because a car drives past the house, are dependent on the grace and software updates of 3rd party companies, often come as a subscription model, and are generally inaccessible via an API.\n My unnamed outdoor camera setup usually gets set off by Old Glory waving in the wind, as opposed to by a person.\n   We\u2019ll use a  Raspberry Pi 4 with the  camera module to detect video. This can run continuously and won\u2019t need to rely on motion sensors to set off.\n In order to detect objects, we\u2019ll use the  Tensor Flow Object Detection API by Google. This library enables us to pretty much use object detection out of the box (more on that later), without the need for manually training and tuning a model or the need for a  cloud deployment.\n  Now, here\u2019s an issue for you: My old RasPi runs a 32bit version of Raspbian. Tensorflow does not work with 32bit operating systems (granted, there might be  alternatives). Furthermore, while the new Raspberry is a powerful little machine, it is not remotely comparable to a modern computer \u2013 especially on 3 and earlier revisions.\n In order to mitigate this, we will  stream the video  over the network on the Pi to a more powerful machine \u2013 a  home server, NAS, computer, an old laptop \u2013 and process the information there.\n This is a concept called  edge computing. With this concept, we essentially use less powerful, smaller machines to achieve low-latency communication by doing the heavy lifting on a machine physically close to the edge node \u2013 in this case, running the Tensorflow Object detection. By doing so, we avoid roundtrips over the internet, as well as having to pay for Cloud compute on e.g., AWS or GCP.\n In order to achieve this, we\u2019ll use  VidGear, specifically it\u2019s  NetGear API, an API designed for streaming video over the network, using ZeroMQ. Just be wary of the a  bug, requiring you to use the development branch.\n Once we\u2019ve detected that there\u2019s a human in the stream, we can send a signal to the Raspberry, using ZeroMQ, to play some really loud, annoying  audio to scare people off.\n  (As some folks on  reddit have called out - there are alternatives to this, namely  esp32cam and  TFLite)\n  While arguably not the most fun part, first, we need a development environment. I am using Jupyter Notebooks with Python 3.7 on Linux for this.\n  Side-note: As I\u2019m using the Tensorflow 2.0 beta, I had to hack the API for tf.gfile to tf.io.gfile in\u00a0 ~/.local/lib/python3.7/site-packages/object_detection/utils/label_map_util.py.\n Clone the notebook, follow the instructions to set up a virtual environment, and install all dependencies.\n  Once that is done, we do probably want to loop a local video with test data without having to actually connect a live camera just yet.\n All we really need to do here is to change the \u201cwhile True\u201d loop to bind to the OpenCV session. VideoCapture conveniently accepts either an integer (for a webcam) or a path to a video file.\n  (Some parts of the image were manually blurred for privacy \u2013 also, those are invited visitors \ud83d\ude0a )\n As soon as you run the notebook, you should see the overlay of the detection model. Wonderful, the model works, and we can fine tune later.\n  As elaborated on before, we won\u2019t rely on our Rasberry Pi to run the detection \u2013 so we\u2019ll set up some network communication. I was originally thinking of writing this myself (I\u2019m currently learning go, so that would have been a nice use case), but why bother if there\u2019s a library?[1]\n   Here\u2019s a sample writeup on how I\u2019ve set up my Pi:\n Next, we\u2019ll have to take the development branch of VidGear, as a certain bugfix is not on the master at the time of writing.\n  You should see the video playing back. You will notice some use of the multiprocessing library \u2013 we use this for ensuring the while loop gets terminated after a defined timeout, for development purposes.\n [1] Jokes aside: Richard Hipp, the creator of SQLite, gives a lot of good reasons as to why that might be a bad idea in   his interview  on The Changelog Podcast \u2013 but for the sake of simplicity, we\u2019ll stick to a library\n  Next, let\u2019s actually deploy this onto 2 separate machines \u2013 as long as the server that will execute Tensorflow runs a 64-bit flavor of Linux (as in, a Linux kernel), we should be good to go. At home, I have a local gitlab and jenkins instance that does this for me. But realistically, any deployment option works \u2013 scp can be your friend.\n We\u2019ll need to make some small adjustments to the code by specifying IP address and port:\n client  = NetGear(address  =  &#39;192.168.1.xxx, port = &#39; 5454 &#39;, protocol = &#39;tcp &#39;, pattern = 0, receive\\_mode = True, logging = True) server  = NetGear(address = &#39;192.168.1.xxx, port=&#39; 5454 &#39;, protocol=&#39;tcp &#39;,pattern=0, receive\\_mode=False, logging=True)\n Now, we can start the sender.py on the server, receiver.py on the client, and there we go: Video over the network. Neat!\n  The integration of tensorflow is trivial at this point: As we\u2019ve already established how to do the following:\n  The last step can simply be achieved by importing our tensorflow_detector module, casting the received image to a numpy array (as this is what the API expects), and calling \u201crun_inference_for_single_image(2)\u201d. Easy peasy!\n  Now, we can adjust our server code to actually use Tensorflow to detect images coming in from a different machine. But we don\u2019t want canned images \u2013 we need a live stream.\n Fortunately, this is pretty straightforward, as we\u2019ve already enabled the camera module during the setup of the Pi: Connect the ribbon cable of the camera to the Pi, boot it up, and run:\n     In order to do the same with Python, OpenCV\u2019s API is equally straightforward: By changing the source from a video file to the ID of the camera \u2013 0, as we only have one \u2013 on the pi\u2019s end, OpenCV will pick up the camera stream and send it to our server.\n    Now, we are able to stream video from the Raspberry to the server and detect a person. The missing link now is to play audio, using the  playsound library, with GStreamer under the hood. Other alternatives are using an  os  subprocess call or  pygame \u2013 a configuration option can be set to change this behavior.\n  In order to do that, we are going to employ  ZMQ again by starting a listener thread on the Pi that waits on inputs from the server, setting predefined enum values. Once the client receives those, it triggers an audio signal and plays a sound.\n All of this is blocking the respective threads \u2013 meaning, as long as the audio plays, the listener won\u2019t care about new messages and the server won\u2019t be able to send a new message.\n In order to avoid blasting the same message, we can employ a simple sempahore structure.\n     And start both server and client end and see what happens when we walk into the room!\n   As you can see, it takes a second to detect me \u2013 partly because of the camera angle, the model we chose, and some network latency. In a real life scenario where a person needs to walk up the door, this is less of an issue.\n   While this already works fairly well \u2013 it streams video, detects people, and sends a signal to send audio \u2013 there is surely work to be done here.\n However, there are several things we\u2019ve ignored for the purpose of this project: The model we\u2019re using is simply a  pre-trained one that has neither been tuned for our specific use case, nor does it necessarily offer the best balance for the machines that we\u2019re using.\n Furthermore, some things in the code could use some improvements - the network latency is decent, but could use some work, the audio gets triggered very quickly in succession, and with our current ZeroMQ pattern, we can only support one client.\n While using a cardboard box is almost the definition of perfection, a custom, 3D-printed Raspberry case and slightly better cooling would be probably a good idea.\n  In any case - I am happy with this little project, as it illustrates how relatively simple it can be to build your own security camera, connect it to the network, run object detection, and trigger an external factor - in this case audio, but that could easily be a phone notification or else - without using any Public Cloud offering, to save on latency on residential internet as well as cost.\n All development was done under PopOS! 19.04 on Kernel 5.5.1 with 12 Intel i7-9750H vCores @ 2.6Ghz and 16GB RAM on a 2019 System76 Gazelle Laptop,  as well as a Raspberry Pi 4 4GB on Raspian 10.", "posttime": "2020-06-22 03:07:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,edge", "title": "TensorFlow on Edge\uff0c\u6216-\u4f7f\u7528\u8986\u76c6\u5b50PI\u6784\u5efa\u201c\u667a\u80fd\u201d\u5b89\u5168\u6444\u50cf\u5934", "title_en": "Tensorflow on edge, or \u2013 Building a \u201csmart\u201d security camera with a Raspberry Pi", "transed": 1, "url": "https://chollinger.com/blog/2019/12/tensorflow-on-edge-or-building-a-smart-security-camera-with-a-raspberry-pi/", "via": "", "real_tags": ["edge"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007553, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u6811\u8393\u6d3e\u57fa\u91d1\u4f1a\u4e0eIgalia\u8054\u624b\uff0c\u5f00\u59cb\u4e3a\u6811\u8393\u6d3e\u5f00\u53d1\u5f00\u6e90\u7684Vulkan\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\u7136\u800c\uff0cNVIDIA\u7684\u5de5\u7a0b\u5e08\u9a6c\u4e01\u00b7\u6258\u9a6c\u65af(Martin Thomas)\u62a2\u5148\u4e00\u6b65\u51fb\u8d25\u4e86\u4ed6\u4eec\u3002\n\u6258\u9a6c\u65af\u6628\u5929\u901a\u8fc7\u4ed6\u7684\u4e2a\u4eba\u63a8\u7279\u5ba3\u5e03\uff0c\u4ed6\u7684RPI-VK\u8f66\u624b\u5df2\u7ecf\u51c6\u5907\u597d\u8fdb\u5165\u9ec4\u91d1\u65f6\u95f4\u3002\u8fd9\u4f4d\u624d\u534e\u6a2a\u6ea2\u7684\u5de5\u7a0b\u5e08\u5df2\u7ecf\u5728\u4e1a\u4f59\u65f6\u95f4\u7814\u7a76\u4e86\u4e24\u5e74\u591a\u7684\u4f0f\u5c14\u574e\u53f8\u673a\u3002\n\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u6258\u9a6c\u65af\u8fed\u4ee3\u672c\u8eab\u5e76\u4e0d\u662fVulkan\u9a71\u52a8\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u7b26\u5408Khronos\u96c6\u56e2\u5efa\u7acb\u7684\u5b98\u65b9\u6807\u51c6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8db3\u667a\u591a\u8c0b\u7684\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u5f00\u53d1\u51fa\u4e86\u4e00\u4e2a\u5c3d\u53ef\u80fd\u7b26\u5408Vulkan\u53c2\u6570\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u63a5\u8fd1\u786c\u4ef6\u5141\u8bb8\u7684\u8303\u56f4\u3002\u4e0d\u8fc7\uff0cRPI-VK-Driver\u53ea\u6709\u4e00\u4e2a\u9650\u5236\u3002\u4e0e\u4ecd\u5728\u5f00\u53d1\u4e2d\u7684\u5b98\u65b9Vulkan\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u540c\uff0cThomas\u7248\u672c\u4ec5\u4e0eRaspberry PI 1\u30012\u30013\u548cZero\u8bbe\u5907\u4e2d\u7684Broadcom VideoCore IV GPU\u517c\u5bb9\u3002\n\u6258\u9a6c\u65af\u7528\u4e00\u8f86\u8986\u76c6\u5b50PI 3Model B+\u548cQuake III\u7ade\u6280\u573a\u5c55\u793a\u4e86\u4ed6\u7684RPI-VK\u53f8\u673a\u7684\u5a01\u529b\u3002Broadcom VideoCore IV\u56fe\u5f62\u5904\u7406\u5668\u7684\u65f6\u949f\u9891\u7387\u4e3a250 MHz\uff0c\u57281,280 x 720\u7684\u5206\u8fa8\u7387\u4e0a\u8fd0\u884c\u901f\u5ea6\u8d85\u8fc7100 FPS\u3002\u6258\u9a6c\u65af\u4f30\u8ba1\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\uff0cRaspberry Pi 3 Model B\u53ef\u80fd\u4f1a\u57281920x1080\u7684\u5206\u8fa8\u7387\u4e0b\u63d0\u4f9b\u7ea670FPS\u7684\u5206\u8fa8\u7387\u3002\n\u4e0eOpenGL\u9a71\u52a8\u7a0b\u5e8f\u76f8\u6bd4\uff0cThomas\u80af\u5b9a\u4ed6\u7684RPI-VK\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u6539\u8fdb\u7684\u5185\u5b58\u7ba1\u7406\uff0c\u5e76\u4e14\u5728\u5904\u7406\u591a\u7ebf\u7a0b\u547d\u4ee4\u63d0\u4ea4\u65b9\u9762\u505a\u5f97\u66f4\u597d\u3002\u9a71\u52a8\u7a0b\u5e8f\u7684\u5176\u4ed6\u5c5e\u6027\u5305\u62ecMSAA(\u591a\u91c7\u6837\u6297\u952f\u9f7f)\u652f\u6301\u3001\u4f4e\u7ea7\u522b\u7a0b\u5e8f\u96c6\u7740\u8272\u5668\u548c\u6027\u80fd\u8ba1\u6570\u5668\u3002", "note_en": "Earlier this year, the Raspberry Pi Foundation  hooked up with Igalia to start development on an open-sourced Vulkan graphics driver for the Raspberry Pi. However, Martin Thomas, an engineer at Nvidia, beat them to the punch.\n Thomas announced yesterday via his personal  Twitter that his  RPi-VK-Driver is ready for primetime. The talented engineer had been working on the Vulkan driver in his spare time for more than two years.\n Technically, Thomas&#39; iteration isn&#39;t a Vulkan driver per se because it doesn&#39;t comply with the official standards established by The Khronos Group. Nonetheless, the resourceful developer produced a driver that adheres to the Vulkan parameters as much as possible, and as close as the hardware would permit it. There&#39;s just one limitation with the RPi-VK-Driver though. Unlike the official Vulkan driver that&#39;s still in the works, Thomas&#39; version is only compatible with the Broadcom VideoCore IV GPU that&#39;s found inside the Raspberry Pi 1, 2, 3 and Zero devices.\n      Thomas showed off the power of his RPi-VK-Driver with a Raspberry Pi 3 Model B+ and Quake III Arena. The Broadcom VideoCore IV GPU, which is clocked at 250 MHz, runs the title at over 100 FPS on the 1,280 x 720 resolution. Thomas estimated that the Raspberry Pi 3 Model B will likely deliver around 70 FPS at a 1,920 x 1,080 resolution due to the hardware limitation.\n In comparison to the OpenGL drivers, Thomas affirms that his RPi-VK-Driver offers improved memory management, and it&#39;s better at handling multi-threaded command submissions. The driver&#39;s other attributes include MSAA (multisample anti-aliasing) support, low level assembly shaders and performance counters.", "posttime": "2020-06-22 02:50:06", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "raspberry-pi,\u7a0b\u5e8f,nvidia,\u53d1\u5e03,\u5f00\u6e90", "title": "NVIDIA\u5de5\u7a0b\u5e08\u53d1\u5e03\u7528\u4e8eRaspberry Pi\u7684\u5f00\u6e90Vulkan\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f", "title_en": "Nvidia Engineer Releases Open-Sourced Vulkan Graphics Driver for the Raspberry Pi", "transed": 1, "url": "https://www.tomshardware.com/uk/amp/news/nvidia-engineer-vulkan-driver-raspberry-pi-quake-iii-100-fps", "via": "", "real_tags": ["\u7a0b\u5e8f", "nvidia", "\u53d1\u5e03", "\u5f00\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "620dae4229626ee37a27475f04dbbf53.png", "infoid": 1007552, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u6b3e\u5c06\u60a8\u7684\u65e5\u5e38\u5de5\u4f5c\u5e94\u7528\u7a0b\u5e8f\u878d\u5408\u4e3a\u4e00\u4f53\u7684\u65b0\u5de5\u5177\u3002\u5b83\u662f\u60a8\u548c\u60a8\u7684\u56e2\u961f\u7684\u4e00\u4f53\u5316\u5de5\u4f5c\u533a", "note_en": "A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team", "posttime": "2020-06-22 02:49:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u5e8f\u5217,sparse", "title": "\u8150\u8d25\u3001\u7a00\u758f\u3001\u4e0d\u89c4\u5219\u3001\u4e11\u964b\uff1a\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u6df1\u5ea6\u5b66\u4e60", "title_en": "Corrupt, sparse, irregular and ugly: Deep learning on time series", "transed": 1, "url": "https://www.notion.so/Corrupt-sparse-irregular-and-ugly-Deep-learning-on-time-series-887b823df439417bb8428a3474d939b3", "via": "", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u5e8f\u5217", "sparse"]}, {"category": "", "categoryclass": "", "imagename": "2e8b42e1cd15380e0d6e7f64bc631910.png", "infoid": 1007551, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BYE\u662f\u7b2c\u4e00\u4e2a\u81ea\u52a8\u56de\u590d\u4fae\u8fb1\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u7136\u540e\u5220\u9664\u53d1\u9001\u7ed9\u4f60\u7684\u6bcf\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\n\u62dc\u62dc\u662f\u6211\u4eec\u5199\u7ed9\u7535\u5b50\u90ae\u4ef6\u7684\u60c5\u4e66\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u7f51\u7edc\u3001Mac\u3001Windows\u3001Linux\u3001iOS\u3001\u9ea6\u5f53\u52b3\u552e\u8d27\u4ead\u548c\u5b89\u5353\u7cfb\u7edf\u53d1\u9001\u7ed9\u60a8\u3002\n\u50cfGmail\u8fd9\u6837\u7684\u201c\u514d\u8d39\u201d\u7535\u5b50\u90ae\u4ef6\u4e0d\u662f\u514d\u8d39\u7684--\u4f60\u9700\u8981\u901a\u8fc7\u653e\u5f03\u88f8\u4f53\u6765\u4ed8\u8d39\u3002\u592a\u8d35\u4e86\u3002\u7531\u4e8e\u6211\u4eec\u5b8c\u5168\u4e0d\u4ece\u4e8b\u4fb5\u72af\u9690\u79c1\u7684\u4e1a\u52a1\uff0c\u6211\u4eec\u6536\u53d6\u5355\u4ef7\uff0c\u5305\u62ec69\u7f8e\u5206/\u6708\u7684\u62dc\u62dc\u8d39\u7528\u3002\u8fd9\u662f\u5408\u7406\u7684\u3002\n\u4ece\u4e00\u5f00\u59cb\u5c31\u4e0d\u8981\u6536\u5230\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd9\u6837\u6536\u5230\u7684\u7535\u5b50\u90ae\u4ef6\u5c31\u4f1a\u66f4\u5c11\u3002\u6ca1\u6709\u4eba\u6709\u65f6\u95f4\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u5728\u6bcf\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u81ea\u52a8\u6284\u9001\u4e00\u4f4d\u56fd\u4f1a\u8bae\u5458\u3002\u901a\u8fc7\u77ed\u4fe1\u548c\u8bed\u97f3\u4fe1\u7bb1\u5411Touch Base\u53d1\u9001\u8ddf\u8fdb\u4fe1\u606f\u3002", "note_en": "Bye is the first email service to automatically respond with an insult, and then delete every email sent to you.\n  Bye is our erotic letter to email, and we\u2019re sending it to you on the Web, Mac, Windows, Linux, iOS, McDonald\u2019s kiosks and Android.\n    \u201cFree\u201d email like Gmail isn\u2019t free \u2014 you pay by giving up your nudes.  That\u2019s expensive. Since we\u2019re totally not in the privacy invasion business, we charge a flat, all inclusive 69\u00a2/month for Bye.  That\u2019s reasonable.\n        Get less email by never receiving it in the first place. Nobody has time for it.\n      Automatically CC a congressperson on every email. Send follow-ups by SMS and Voicemail to touch base.", "posttime": "2020-06-22 02:49:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gt,bye,\u7535\u5b50\u90ae\u4ef6", "title": "\u8f6e\u7a7a / &lt;\u677f\u7403&gt;\u6f0f\u51fb\u5f97\u5206 / &lt;\u9ad8\u5c14\u592b&gt;\u4f59\u7a74 / \u6b21\u8981\u7684\u4e1c\u897f", "title_en": "Bye", "transed": 1, "url": "https://bye.fyi/", "via": "", "real_tags": ["gt", "bye", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "905557384ecea82e9c3e72d0033c4b15.jpeg", "infoid": 1007550, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f18\u6b65\u62e5\u6709\u5f00\u6e90\u7684Piranha\uff0c\u8fd9\u662f\u4ed6\u4eec\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u81ea\u52a8\u6e05\u7406\u7531\u4e0d\u518d\u9700\u8981\u7684\u529f\u80fd\u6807\u5fd7\u5bfc\u81f4\u7684\u9648\u65e7\u4ee3\u7801\u3002\u98df\u4eba\u9c7c\u53ef\u4ee5\u5728\u6d41\u6c34\u7ebf\u5185\u8fd0\u884c\uff0c\u4ee5\u6301\u7eed\u67e5\u627e\u8981\u5220\u9664\u7684\u9648\u65e7\u4ee3\u7801\u3002\u76ee\u524d\uff0cPiranha\u652f\u6301Java\u3001SWIFT\u548cObjective-C\u3002\n\u4f7f\u7528\u9759\u6001\u5206\u6790\uff0cPiranha\u6267\u884c\u4e09\u4e2a\u5173\u952e\u4efb\u52a1\uff1a\u5220\u9664\u7d27\u6328\u7740\u7279\u6027\u6807\u5fd7API\u7684\u4ee3\u7801\uff0c\u5220\u9664\u7531\u4e8e\u4e0a\u4e00\u6b65\u800c\u53d8\u5f97\u4e0d\u53ef\u8bbf\u95ee\u7684\u4ee3\u7801\uff0c\u6700\u540e\u5220\u9664\u4e0e\u8be5\u6807\u5fd7\u76f8\u5173\u7684\u6240\u6709\u6d4b\u8bd5\u3002\u8981\u6267\u884c\u98df\u4eba\u9c7c\uff0c\u9700\u8981\u4e09\u4e2a\u8f93\u5165\uff1a\u6b63\u5728\u8003\u8651\u7684\u6807\u5fd7\u3001\u6cbb\u7597\u884c\u4e3a\u548c\u6807\u5fd7\u7684\u6240\u6709\u8005\u3002\n\u516c\u5171\u7c7bMyClass{\u79c1\u6709XPTest\u8868\u8fbe\u5f0f\uff1b.public void foo(){if(expt.flagEnabled(TestExperimentName.SAMPLE_STALE_FLAG)){System.out.println(&#34\uff1bHello World&#34\uff1b)\uff1b}}public void bar(){if(expt.flagDisabled(TestExperimentName.SAMPLE_STALE_FLAG)){System.out.println(&#34\uff1bHi World&#34\uff1b)\uff1b}}\u3002\n\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u8c03\u7528Piranha\u5c06\u5bfc\u81f4\u5176\u79bb\u5f00\u6cbb\u7597\u6761\u4ef6(\u5728\u529f\u80fd\u542f\u7528\u7684\u60c5\u51b5\u4e0b)\uff0c\u5e76\u79fb\u9664\u63a7\u5236\u6761\u4ef6(\u5728\u529f\u80fd\u672a\u542f\u7528\u7684\u60c5\u51b5\u4e0b)\uff1a\n\u516c\u5171\u7c7bMyClass{\u79c1\u6709XPTest\u8868\u8fbe\u5f0f\uff1b.public void foo(){System.out.println(&#34\uff1bHello World&#34\uff1b)\uff1b}public void bar(){}}\u3002\n\u5728\u521b\u5efa\u6b64\u5de5\u5177\u65f6\uff0cUber\u5de5\u7a0b\u5e08\u89c2\u5bdf\u5230\u4e09\u79cd\u7c7b\u578b\u7684\u6807\u5fd7API\uff1a\u5e03\u5c14API\u3001\u66f4\u65b0API\u548c\u53c2\u6570API\u3002\u5e03\u5c14API\u662f\u8fd4\u56de\u5e03\u5c14\u503c\u7684API\uff0c\u5982\u4e0a\u4f8b\u6240\u793a\u3002\u66f4\u65b0\u63a5\u53e3\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\u4e2d\u7684\u529f\u80fd\u6807\u5fd7\u503c\u3002\u6700\u540e\uff0c\u53c2\u6570API\u8fd4\u56de\u4e00\u4e2a\u975e\u5e03\u5c14\u539f\u59cb\u503c\uff0c\u4ee5\u5bf9\u5e94\u4e8e\u4ece\u540e\u7aef\u63a7\u5236\u7684\u5b9e\u9a8c\u503c\u3002\u98df\u4eba\u9c7c\u53ea\u5904\u7406\u524d\u4e24\u79cd\u7c7b\u578b&#34\uff1b\uff0c\u56e0\u4e3a\u89e3\u51b3\u5b83\u4eec\u6240\u9700\u7684\u5de5\u7a0b\u5de5\u4f5c\u91cf\u8981\u5927\u5f97\u591a\uff0c\u800c\u4e14\u5b83\u4eec\u5728\u4ee3\u7801\u5e93\u4e2d\u51fa\u73b0\u7684\u9891\u7387\u4e5f\u8981\u4f4e\u5f97\u591a\u3002\n\u4f9d\u8d56\u56e2\u961f\u4e3b\u52a8\u8fd0\u884cPiranha\u53ef\u80fd\u4ecd\u7136\u4f1a\u5bfc\u81f4\u4e0d\u5b9a\u671f\u6e05\u7406\u9648\u65e7\u7684\u4ee3\u7801\u3002\u8be5\u56e2\u961f\u521b\u5efa\u4e86\u4e00\u6761\u5de5\u4f5c\u6d41\u7ba1\u9053\uff0c\u4ee5\u89c4\u5219\u7684\u8282\u594f\u8fd0\u884c\u98df\u4eba\u9c7c\u3002\u5728\u4f18\u6b65\u7684\u4f8b\u5b50\u4e2d\uff0c\u98df\u4eba\u9c7c\u6bcf\u5468\u90fd\u5728\u4ed6\u4eec\u7684\u4ee3\u7801\u5e93\u4e0a\u8fd0\u884c\u3002\u8be5\u7ba1\u9053\u8fd8\u4f1a\u5728\u4f18\u6b65\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf\u4e2d\u81ea\u52a8\u751f\u6210\u4efb\u52a1\uff0c\u7528\u4e8e\u8ddf\u8e2a\u521b\u5efa\u7684\u62c9\u5f0f\u8bf7\u6c42\u3002\n\u81ea\u52a8\u751f\u6210\u9648\u65e7\u6807\u5fd7\u5217\u8868\u4ee5\u4f9b\u5ba1\u67e5\u7684\u98df\u4eba\u9c7c\u5de5\u4f5c\u6d41\u7a0b(\u6765\u6e90\uff1aUber)\u98df\u4eba\u9c7c\u7ba1\u9053\u5411\u5176\u6807\u5fd7\u7ba1\u7406\u7cfb\u7edf\u67e5\u8be2\u9648\u65e7\u6807\u5fd7\u5217\u8868\u3002\u6bcf\u4e2a\u56e2\u961f\u90fd\u6709\u80fd\u529b\u4e3a\u9648\u65e7\u7684\u542b\u4e49\u8bbe\u5b9a\u81ea\u5df1\u7684\u65f6\u95f4\u6846\u67b6\u3002\u4e00\u65e6\u89e6\u53d1\uff0c\u98df\u4eba\u9c7c\u5c06\u751f\u6210\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\uff0c\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u65d7\u5e1c\u7684\u539f\u59cb\u4f5c\u8005\u3002\u4e3a\u4e86\u786e\u4fdd\u8fd9\u9879\u5de5\u4f5c\u5f97\u5230\u5904\u7406\uff0c\u8be5\u56e2\u961f\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u63d0\u9192\u673a\u5668\u4ebaPiranhaTidy\uff0c\u5b9a\u671f\u901a\u77e5\u7528\u6237\u4e0e\u6253\u5f00\u7684\u98df\u4eba\u9c7c\u76f8\u5173\u7684\u4efb\u52a1\u3002\n\u98df\u4eba\u9c7c\u5728Apache2.0\u8bb8\u53ef\u4e0b\u662f\u5f00\u6e90\u7684\u3002\u5b83\u76ee\u524d\u652f\u6301Java\u3001SWIFT\u548cObjective-C\u3002\u8981\u6dfb\u52a0\u5bf9\u5176\u4ed6\u8bed\u8a00(\u5982\u79d1\u7279\u6797\u3001.NET\u548cJavaScript)\u7684\u652f\u6301\u8fd8\u5b58\u5728\u4e00\u4e9b\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u8be5\u56e2\u961f\u5c06\u5728\u5373\u5c06\u5230\u6765\u7684\u7b2c42\u5c4a\u56fd\u9645\u8f6f\u4ef6\u5de5\u7a0b\u4f1a\u8bae\u4e0a\u53d1\u8868\u4e00\u7bc7\u5173\u4e8e\u98df\u4eba\u9c7c\u7684\u7814\u7a76\u8bba\u6587\u3002\nInfoQ\u4e0a\u4e0a\u5468\u5185\u5bb9\u7684\u7efc\u8ff0\u6bcf\u5468\u4e8c\u90fd\u4f1a\u53d1\u5e03\u3002\u52a0\u5165\u4e00\u4e2a\u8d85\u8fc725\u4e07\u540d\u9ad8\u7ea7\u5f00\u53d1\u4eba\u5458\u7684\u793e\u533a\u3002\u67e5\u770b\u793a\u4f8b\u3002\n\u9009\u62e9\u60a8\u7684\u56fd\u5bb6/\u5730\u533a\u6211\u540c\u610fInfoQ.com\u6309\u7167\u672c\u9690\u79c1\u58f0\u660e\u4e2d\u7684\u8bf4\u660e\u5904\u7406\u6211\u7684\u6570\u636e\u3002", "note_en": "Uber has  open-sourced  Piranha, their tool for automated clean up of stale code caused by  feature flags that are no longer required. Piranha can be run within a pipeline to continually look for stale code to be removed. Currently Piranha supports  Java,  Swift, and  Objective-C.\n  Using  static analysis, Piranha performs three key tasks: deleting the code immediately surrounding the feature flag API, deleting the code that becomes unreachable as a result of the previous step, and finally deleting any tests related to the flag. To execute Piranha, three inputs are required: the flag under consideration, the treatment behavior, and the owner of the flag.\n    public class MyClass {\r private XPTest expt;\r ...\r public void foo() {\r if(expt.flagEnabled(TestExperimentName.SAMPLE_STALE_FLAG)) {\r System.out.println(&#34;Hello World&#34;);\r }\r }\r\r public void bar() {\r if(expt.flagDisabled(TestExperimentName.SAMPLE_STALE_FLAG)) {\r System.out.println(&#34;Hi World&#34;);\r }\r }\r}\n  Calling Piranha with the following arguments\u00a0will cause it to leave the treatment condition (where the feature is enabled) and remove the control condition (where the feature is not enabled):\n      public class MyClass {\r private XPTest expt;\r ...\r public void foo() {\r System.out.println(&#34;Hello World&#34;);\r }\r\r\r public void bar() {\r }\r}\n  When creating this tool, the Uber engineers observed three types of flag APIs: Boolean APIs, update APIs, and parameter APIs. Boolean APIs are ones that return a Boolean value as in the example above. Update APIs update the feature flag value in the running system. Finally parameter APIs return a non-Boolean primitive value to correspond to an experimental value controlled from the back end. Piranha only  handles\u00a0the first two types &#34;as the engineering effort required to address them was much larger and the frequency of their occurrence in the codebase much lower&#34;.\n  Relying on teams to proactively run Piranha may still result in stale code not being cleaned on a regular basis. The team created a workflow pipeline to run Piranha on a regular cadence. In Uber&#39;s case Piranha runs weekly on their codebase. The pipeline also automatically generates tasks within Uber&#39;s task management system for tracking the created pull requests.\n    Piranha workflow to automatically generate a list of stale flags for review (Source:  Uber)    The Piranha pipeline queries their flag management system for a list of stale flags. Each team has the ability to set their own time frame for what stale means. Once triggered, Piranha will generate a pull request and assign it to the flag&#39;s original author. To ensure the work is handled, the team also created PiranhaTidy, a reminder bot, to periodically notify users about open Piranha related tasks.\n  Piranha is  open source under the Apache 2.0 license. It currently supports Java, Swift, and Objective-C. There are  open issues to add support for additional languages such as  Kotlin,  .NET, and  JavaScript. The team will have a  research paper on Piranha in the upcoming  42nd International Conference of Software Engineering.\n  A round-up of last week\u2019s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers.\r \r\t\t\t View an example\n  Select your country              I consent to InfoQ.com handling my data as explained in this  Privacy Notice.", "posttime": "2020-06-22 02:48:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u5f00\u6e90,open,\u6807\u5fd7", "title": "Uber\u5f00\u6e90\u5de5\u5177\u81ea\u52a8\u6e05\u7406\u9648\u65e7\u4ee3\u7801", "title_en": "Uber Open-Sources Tool to Automatically Clean Up Stale Code", "transed": 1, "url": "https://www.infoq.com/news/2020/06/uber-piranha/", "via": "", "real_tags": ["\u4ee3\u7801", "\u5f00\u6e90", "open", "\u6807\u5fd7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007549, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u8005\uff1ahttps://svnweb.freebsd.org/changeset/base/362466Log\uff1a2010UTC 21 13\uff1a34\uff1a11\u4f5c\u8005\uff1a\u5b59\u4fca21 13\uff1a34\uff1a08 2020\u65b0\u7248\uff1a362466URL\uff1aHselasky\u6539\u8fdb\u63aa\u8f9e\uff0c\u4f7f\u5176\u66f4\u52a0\u7cbe\u786e\u548c\u6e05\u6670\u3002\u4e0d\u6253\u7b97\u66f4\u6539\u529f\u80fd\u3002S/Master Boot/Main Boot/(\u4e5f\u79f0\u4e3aMBR)MFC\u7ecf\u8fc7\uff1a1\u5468\u8d5e\u52a9\u5546\uff1aMellanox Technologies\u4fee\u6539\uff1ahead/contrib/file/magdir/filessystems head/contrib/tcpdump/smbutil.c head/lib/geom/part/gpart.8 head/stand/efi/include/efipart.h head/stand/i386/boot0/boot0.S head/sys/dev\u3002.bin/mkimg/mbr.c Head/usr.sbin/boot0cfg/boot0cfg.8head/usr.sbin/boot0cfg/boot0cfg.cc\u4fee\u6539\uff1ahead/contrib/file/magic/Magdir/filesystems==-Head/contrib/file/magdir/magdir/filessystems\u5b59\u4fca21 11\uff1a48\uff1a55 2020(R362465)+head/contrib/file/magdir/filessystems\u5b59\u4fca21 13\uff1a34\uff1a2string OSBS OS/BS MBR#\u7531Joerg Jenderek\u4e8e2013\u5e742\u6708\u6839\u636ehttps://thestarman.pcministry.com/asm/mbr/-#\u548chttps://en.wikipedia.org/wiki/Master_Boot_Record-#\u5bf9\u51e0\u4e4e\u6240\u6709MS-DOS\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7684\u6d4b\u8bd5\u6dfb\u52a0\u7684\u521d\u59cb\u7a0b\u5e8f\u52a0\u8f7d\u7a0b\u5e8f\u73b0\u5728\u7531+#\u5b8c\u6210\uff0c\u800c\u5bf9\u51e0\u4e4e\u6240\u6709MS-DOS\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u521d\u59cb\u7a0b\u5e8f\u52a0\u8f7d\u7a0b\u5e8f\u7684https://en.wikipedia.org/wiki/Main_Boot_Record+#\u6d4b\u8bd5\u73b0\u5728\u7531#\u7279\u5f81\u6c47\u7f16\u6307\u4ee4\u5b8c\u6210\uff1aXORAX\uff0cAX\uff1bMOVSS\uff0cAX\uff1bMOV sp\uff0c7c00&gt\uff1b0\u641c\u7d22/2\\x33\\xc0\\x8e\\xd0\\xbc\\x00\\x7c MS-MBR#Microsoft Windows95A\u548c\u65e9\u671f\u7248\u672c(https://thestarman.pcministry.com/asm/mbr/STDMBR.htm)@@-436\uff0c7+436\uff0c7@@&gt\uff1b&gt\uff1b387\u5b57\u7b26\u4e32\u7248\u6743\u6240\u6709\\(C)\\1984,1998&gt\uff1b&gt\uff1b411 string Caldera\\Inc.\\0\\b\uff0cDR-DOS MBR(IBMBIO.LDR)#-#\u9488\u5bf9\u4e0d\u540cMS-DOS\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u79fb\u52a8\u548c\u5408\u5e76\u7684\u6d4b\u8bd5+#\u9488\u5bf9\u4e0d\u540cMS-DOS\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u79fb\u52a8\u548c\u5408\u5e76##&gt\uff1b0x145\u5b57\u7b26\u4e32\u9ed8\u8ba4\u503c\uff1a\\F\\b\uff0cfree-DOS MBR#&gt\uff1b0x14B\u5b57\u7b26\u4e32\u9ed8\u8ba4\u503c\uff1a\\F\\b\uff0cfree-DOS 1.0 MBR@@-10B\u300211\u4f7f\u7528DOS-FILENAME-#https://en.wikipedia.org/wiki/Master_boot_record#PTE+#https://en.wikipedia.org/wiki/Main_boot_record#PTE#\u663e\u793a\u6807\u51c6\u5206\u533a\u88680\u540d\u79f0\u5206\u533a\u8868#&gt\uff1b0ubyte x\u5206\u533a\u8868\u4fee\u6539\uff1ahead/contrib/tcpdump/smbutil.c==-Head/Contrrib/tcpdump/smbutil.c\u5b59\u4fca21 11\uff1a48\uff1a55 2020(R362465)+Head/contrib/tcpdump/smbutil.c\u5b59\u4fca21 13\uff1a34\uff1a08 2020(R362466)@@-1339\uff0c7+1339\uff0c7@@Static Const NT_ERR_CODE_STRUCT NT_ERROR[]={{0xC00000A6\uff0c&#\u3002}\uff0c{0xC00000A8\uff0c&#34\uff1bSTATUS_BAD_TOKEN_TYPE&#34\uff1b}\uff0c-{0xC00000A9\uff0c&#34\uff1bSTATUS_BAD_MASTER_BOOT_RECORD&#34\uff1b}\uff0c+{0xC00000A9\uff0c&#34\uff1bSTATUS_BAD_MAIN_BOOT_RECORD&#34\uff1b}\uff0c{0xC00000AA\uff0c&#34\uff1bSTATUS_\u6307\u4ee4_\u672a\u5bf9\u9f50&#34\uff1b}\uff0c{0xC00000AB\uff0c&#\u3002STATUS_PIPE_NOT_Available&#34\uff1b}\uff0cModified\uff1ahead/lib/geom/part/gpart.8==-Head/lib/geom/Part/gpart.8\u5b59\u4fca21 11\uff1a48\uff1a55 2020(R362465)+Head/lib/geom/Part/gpart.8\u5b59\u4fca21 13\uff1a34\uff1a08 2020(R362466)@@-582\uff0c7+582\uff0c7@@\u9700\u8981.cm geom_part_gpt\u5185\u6838\u9009\u9879\u3002\u5b83cm MBR-\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7528\u4e8ePC\u548c\u53ef\u79fb\u52a8\u4ecb\u8d28\u3002+\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7528\u4e8ePC\u548c\u53ef\u79fb\u52a8\u4ecb\u8d28\u3002\u9700\u8981.cm GEOM_PART_MBR\u5185\u6838\u9009\u9879\u3002@@-852\uff0c7+852\uff0c7@@\u7528\u4e8embr\uff0c.Qq LI&#34\uff1b\uff010657fd6d-a4ab-43c4-84e5-0933c84b4f4f&#34\uff1b\u7528\u4e8egpt\u3002it cm MBR-\u7531\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u7ec6\u5206\u7684\u5206\u533a\u3002+\u7531\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u7ec6\u5206\u7684\u5206\u533a\u3002\u6b64\u7c7b\u578b\u88abgpt\u79f0\u4e3a.Qq Li&#34\uff1b\uff01024dee41-33e7-11d3-9d69-0008c781f39f&#34\uff1b\u3002@@-1020\uff0c7+1020\uff0c7@@Option\u3002Geom Part\u7c7b\u77e5\u9053\u5982\u4f55\u5b89\u5168\u5730\u5c06\u5f15\u5bfc\u4ee3\u7801\u5d4c\u5165\u5230\u7279\u5b9a\u7684\u5206\u533a\u65b9\u6848\u5143\u6570\u636e\u4e2d\uff0c\u800c\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u7834\u574f\u3002.PP-\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u4f7f\u7528512\u5b57\u8282\u7684\u5f15\u5bfc\u4ee3\u7801\u955c\u50cf\uff0c\u5d4c\u5165+\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u4f7f\u7528512\u5b57\u8282\u7684\u5f15\u5bfc\u4ee3\u7801\u955c\u50cf\uff0c\u5d4c\u5165\u5230\u5206\u533a\u8868\u7684\u5143\u6570\u636e\u533a\u57df\u3002\u6b64\u5f15\u5bfc\u4ee3\u7801\u6709\u4e24\u79cd\u53d8\u4f53\uff1a.PA/boot/mbr@@-1256\uff0c7+1256\uff0c7@@\u4f5c\u4e3a\u72ec\u7acb\u5206\u533a\u51fa\u73b0\u3002.EM\u6ce8\u610f\uff1a\u8fd9\u53ef\u80fd\u4f1a\u635f\u574f\u955c\u50cf\u5377\u5e76\u5bfc\u81f4\u6570\u636e\u635f\u574f\u3002it Va kern.geom.part.mbr.force_chs\uff1ano 0-\u6307\u5b9a\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u6a21\u5757\u5982\u4f55\u5bf9\u9f50\u3002+\u6307\u5b9a\u4e3b\u5f15\u5bfc\u8bb0\u5f55(MBR)\u6a21\u5757\u5982\u4f55\u5bf9\u9f50\u3002\u5982\u679c\u6b64\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u975e\u96f6\u503c\uff0c\u6a21\u5757\u5c06\u81ea\u52a8\u91cd\u65b0\u8ba1\u7b97\u7528\u6237\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u548c\u5927\u5c0f\uff0c\u4ee5\u4e0eCHS\u51e0\u4f55\u5f62\u72b6\u5bf9\u9f50\u3002\u4fee\u6539\u540e\uff1ahead/stand/efi/include/efipart.h==-Head/Stand/efi/Include/Efipart.h", "note_en": "Hans Petter Selasky  hselasky at FreeBSD.org    Sun Jun 21 13:34:11 UTC 2020  Author: hselaskyDate: Sun Jun 21 13:34:08 2020New Revision: 362466URL:  https://svnweb.freebsd.org/changeset/base/362466Log: Improve wording to be more precise and clear. No functional change intended. s/Master Boot/Main Boot/ (also called MBR) MFC after:\t1 week Sponsored by:\tMellanox TechnologiesModified: head/contrib/file/magic/Magdir/filesystems head/contrib/tcpdump/smbutil.c head/lib/geom/part/gpart.8 head/stand/efi/include/efipart.h head/stand/i386/boot0/boot0.S head/sys/dev/hptmv/vdevice.h head/sys/geom/part/g_part_mbr.c head/usr.bin/fortune/datfiles/freebsd-tips head/usr.bin/mkimg/mbr.c head/usr.sbin/boot0cfg/boot0cfg.8 head/usr.sbin/boot0cfg/boot0cfg.cModified: head/contrib/file/magic/Magdir/filesystems==============================================================================--- head/contrib/file/magic/Magdir/filesystems\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/contrib/file/magic/Magdir/filesystems\tSun Jun 21 13:34:08 2020\t(r362466)@@ -269,8 +269,8 @@ !:strength +65 &gt;2\t\tstring\t\tOSBS\t\tOS/BS MBR # added by Joerg Jenderek at Feb 2013 according to  https://thestarman.pcministry.com/asm/mbr/-# and  https://en.wikipedia.org/wiki/Master_Boot_Record-# test for nearly all MS-DOS Master Boot Record initial program loader (IPL) is now done by+# and  https://en.wikipedia.org/wiki/Main_Boot_Record+# test for nearly all MS-DOS Main Boot Record initial program loader (IPL) is now done by # characteristic assembler instructions: xor ax,ax;mov ss,ax;mov sp,7c00 &gt;0\tsearch/2\t\\x33\\xc0\\x8e\\xd0\\xbc\\x00\\x7c\tMS-MBR # Microsoft Windows 95A and early (  https://thestarman.pcministry.com/asm/mbr/STDMBR.htm )@@ -436,7 +436,7 @@ &gt;&gt;&gt;&gt;&gt;&gt;&gt;387\tstring\tCopyright\\ (c)\\ 1984,1998 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;411\tstring\tCaldera\\ Inc.\\0\t\t\\b, DR-DOS MBR (IBMBIO.LDR) #-# tests for different MS-DOS Master Boot Records (MBR) moved and merged+# tests for different MS-DOS Main Boot Records (MBR) moved and merged # #&gt;0x145\tstring\tDefault:\\ F\t\t\t\t\\b, FREE-DOS MBR #&gt;0x14B\tstring\tDefault:\\ F\t\t\t\t\\b, FREE-DOS 1.0 MBR@@ -1087,7 +1087,7 @@ &gt;11\t\t\tubyte\t\tx\t\t\\b+ &gt;11\t\t\tuse\t\tDOS-filename -#  https://en.wikipedia.org/wiki/Master_boot_record#PTE+#  https://en.wikipedia.org/wiki/Main_boot_record#PTE # display standard partition table 0\tname\t\t\t\tpartition-table #&gt;0\t\tubyte\t\tx\tPARTITION-TABLEModified: head/contrib/tcpdump/smbutil.c==============================================================================--- head/contrib/tcpdump/smbutil.c\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/contrib/tcpdump/smbutil.c\tSun Jun 21 13:34:08 2020\t(r362466)@@ -1339,7 +1339,7 @@ static const nt_err_code_struct nt_errors[] = { { 0xC00000A6, &#34;STATUS_CANT_OPEN_ANONYMOUS&#34; }, { 0xC00000A7, &#34;STATUS_BAD_VALIDATION_CLASS&#34; }, { 0xC00000A8, &#34;STATUS_BAD_TOKEN_TYPE&#34; },- { 0xC00000A9, &#34;STATUS_BAD_MASTER_BOOT_RECORD&#34; },+ { 0xC00000A9, &#34;STATUS_BAD_MAIN_BOOT_RECORD&#34; }, { 0xC00000AA, &#34;STATUS_INSTRUCTION_MISALIGNMENT&#34; }, { 0xC00000AB, &#34;STATUS_INSTANCE_NOT_AVAILABLE&#34; }, { 0xC00000AC, &#34;STATUS_PIPE_NOT_AVAILABLE&#34; },Modified: head/lib/geom/part/gpart.8==============================================================================--- head/lib/geom/part/gpart.8\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/lib/geom/part/gpart.8\tSun Jun 21 13:34:08 2020\t(r362466)@@ -582,7 +582,7 @@ Requires the .Cm GEOM_PART_GPT kernel option. .It Cm MBR-Master Boot Record is used on PCs and removable media.+Main Boot Record is used on PCs and removable media. Requires the .Cm GEOM_PART_MBR kernel option.@@ -852,7 +852,7 @@ for MBR and .Qq Li &#34;!0657fd6d-a4ab-43c4-84e5-0933c84b4f4f&#34; for GPT. .It Cm mbr-A partition that is sub-partitioned by a Master Boot Record (MBR).+A partition that is sub-partitioned by a Main Boot Record (MBR). This type is known as .Qq Li &#34;!024dee41-33e7-11d3-9d69-0008c781f39f&#34; by GPT.@@ -1020,7 +1020,7 @@ option. The GEOM PART class knows how to safely embed bootstrap code into specific partitioning scheme metadata without causing any damage. .Pp-The Master Boot Record (MBR) uses a 512-byte bootstrap code image, embedded+The Main Boot Record (MBR) uses a 512-byte bootstrap code image, embedded into the partition table&#39;s metadata area. There are two variants of this bootstrap code: .Pa /boot/mbr@@ -1256,7 +1256,7 @@ present as independent partition. .Em NOTE : This may break a mirrored volume and lead to data damage. .It Va kern.geom.part.mbr.enforce_chs : No 0-Specify how the Master Boot Record (MBR) module does alignment.+Specify how the Main Boot Record (MBR) module does alignment. If this variable is set to a non-zero value, the module will automatically recalculate the user-specified offset and size for alignment with the CHS geometry.Modified: head/stand/efi/include/efipart.h==============================================================================--- head/stand/efi/include/efipart.h\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/stand/efi/include/efipart.h\tSun Jun 21 13:34:08 2020\t(r362466)@@ -18,7 +18,7 @@ Module Name: efipart.h Abstract: - Info about disk partitions and Master Boot Records+ Info about disk partitions and Main Boot Records @@ -62,7 +62,7 @@ typedef struct { UINT8 Unknown[2]; MBR_PARTITION_RECORD Partition[MAX_MBR_PARTITIONS]; UINT16 Signature;-} MASTER_BOOT_RECORD;+} MAIN_BOOT_RECORD; #pragma pack() Modified: head/stand/i386/boot0/boot0.S==============================================================================--- head/stand/i386/boot0/boot0.S\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/stand/i386/boot0/boot0.S\tSun Jun 21 13:34:08 2020\t(r362466)@@ -53,7 +53,7 @@ /* *\t\tBOOT BLOCK STRUCTURE *- * This code implements a Master Boot Record (MBR) for an Intel/PC disk.+ * This code implements a Main Boot Record (MBR) for an Intel/PC disk. * It is 512 bytes long and it is normally loaded by the BIOS (or another * bootloader) at 0:0x7c00. This code depends on %cs:%ip being 0:0x7c00 *@@ -68,7 +68,7 @@ * (called &#39;packet&#39;) or CHS mode, whether to force a drive number, * and whether to write back the user&#39;s selection back to disk. *- * As in every Master Boot Record, the partition table is at 0x1be,+ * As in every Main Boot Record, the partition table is at 0x1be, * made of four 16-byte entries each containing: * * OFF SIZE\tDESCRIPTIONModified: head/sys/dev/hptmv/vdevice.h==============================================================================--- head/sys/dev/hptmv/vdevice.h\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/sys/dev/hptmv/vdevice.h\tSun Jun 21 13:34:08 2020\t(r362466)@@ -260,13 +260,13 @@ struct fdisk_partition_table \tULONG \t\tnumsect; /* number of sectors in partition */ }; -typedef struct _Master_Boot_Record+typedef struct _Main_Boot_Record { \tUCHAR bootinst[446]; \t\t/* space to hold actual boot code */ \tstruct \tfdisk_partition_table parts[4]; \tUSHORT signature; \t\t/* set to 0xAA55 to indicate PC MBR format */ }-Master_Boot_Record, *PMaster_Boot_Record;+Main_Boot_Record, *PMain_Boot_Record; #ifndef SUPPORT_ARRAY /* TODO: move it later */Modified: head/sys/geom/part/g_part_mbr.c==============================================================================--- head/sys/geom/part/g_part_mbr.c\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/sys/geom/part/g_part_mbr.c\tSun Jun 21 13:34:08 2020\t(r362466)@@ -54,7 +54,7 @@ FEATURE(geom_part_mbr, &#34;GEOM partitioning class for MB SYSCTL_DECL(_kern_geom_part); static SYSCTL_NODE(_kern_geom_part, OID_AUTO, mbr, CTLFLAG_RW | CTLFLAG_MPSAFE, 0,- &#34;GEOM_PART_MBR Master Boot Record&#34;);+ &#34;GEOM_PART_MBR Main Boot Record&#34;); static u_int enforce_chs = 0; SYSCTL_UINT(_kern_geom_part_mbr, OID_AUTO, enforce_chs,Modified: head/usr.bin/fortune/datfiles/freebsd-tips==============================================================================--- head/usr.bin/fortune/datfiles/freebsd-tips\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/usr.bin/fortune/datfiles/freebsd-tips\tSun Jun 21 13:34:08 2020\t(r362466)@@ -40,7 +40,7 @@ Handy bash(1) prompt: PS1=&#34;\\u@\\h \\w \\!$ &#34; Having trouble using fetch through a firewall? Try setting the environment variable FTP_PASSIVE_MODE to yes, and see fetch(3) for more details. %-If other operating systems have damaged your Master Boot Record, you can+If other operating systems have damaged your Main Boot Record, you can reinstall it with gpart(8). See &#34;man gpart&#34; for details. %Modified: head/usr.bin/mkimg/mbr.c==============================================================================--- head/usr.bin/mkimg/mbr.c\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/usr.bin/mkimg/mbr.c\tSun Jun 21 13:34:08 2020\t(r362466)@@ -112,7 +112,7 @@ mbr_write(lba_t imgsz __unused, void *bootcode) static struct mkimg_scheme mbr_scheme = { \t.name = &#34;mbr&#34;,-\t.description = &#34;Master Boot Record&#34;,+\t.description = &#34;Main Boot Record&#34;, \t.aliases = mbr_aliases, \t.metadata = mbr_metadata, \t.write = mbr_write,Modified: head/usr.sbin/boot0cfg/boot0cfg.8==============================================================================--- head/usr.sbin/boot0cfg/boot0cfg.8\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/usr.sbin/boot0cfg/boot0cfg.8\tSun Jun 21 13:34:08 2020\t(r362466)@@ -68,7 +68,7 @@ boot manager on the specified and allows various operational parameters to be configured. .Pp On PCs, a boot manager typically occupies sector 0 of a disk, which is-known as the Master Boot Record (MBR).+known as the Main Boot Record (MBR). The MBR contains both code (to which control is passed by the PC BIOS) and data (an embedded table of defined slices). .PpModified: head/usr.sbin/boot0cfg/boot0cfg.c==============================================================================--- head/usr.sbin/boot0cfg/boot0cfg.c\tSun Jun 21 11:48:55 2020\t(r362465)+++ head/usr.sbin/boot0cfg/boot0cfg.c\tSun Jun 21 13:34:08 2020\t(r362466)@@ -45,7 +45,7 @@ __FBSDID(&#34;$FreeBSD$&#34;); #include &lt;string.h&gt; #include &lt;unistd.h&gt; -#define MBRSIZE 512 /* master boot record size */+#define MBRSIZE 512 /* main boot record size */ #define OFF_VERSION\t0x1b0\t/* offset: version number, only boot0version */ #define OFF_SERIAL\t0x1b8\t/* offset: volume serial number */", "posttime": "2020-06-22 02:48:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb0\u5f55,boot,mbr", "title": "FreeBSD\u5c06\u201c\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u201d\u91cd\u547d\u540d\u4e3a\u201c\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u201d", "title_en": "FreeBSD Renames \u201cMaster Boot Record\u201d to \u201cMain Boot Record\u201d", "transed": 1, "url": "https://lists.freebsd.org/pipermail/svn-src-head/2020-June/137316.html", "via": "", "real_tags": ["\u8bb0\u5f55", "boot", "mbr"]}, {"category": "", "categoryclass": "", "imagename": "9584556494d8fdcb5758fcbc5123ea03.png", "infoid": 1007548, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d1\u8868\u65f6\u95f4\uff1a2020\u5e746\u670821\u65e5\u6211\u5341\u51e0\u5c81\u65f6\u771f\u6b63\u63a5\u53d7\u7684\u6559\u80b2\u662f\uff1a#1-3\u662f\u5728\u63a5\u53d7\u6b63\u89c4\u6559\u80b2\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u7684\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\uff0c\u4fdd\u7f57\u00b7\u683c\u96f7\u5384\u59c6\u5728\u8fd9\u91cc\u8bf4\u8fc7\u7684\u8bdd\uff1a\u8fd9\u8868\u660e\u4e86\u4ee5\u4e0b\u7ed3\u8bba\uff1a1.\u4f60\u81ea\u5b66\u7684\u4e1c\u897f\u4f1a\u575a\u6301\uff1b\u4f60\u201c\u6559\u201d\u7ed9\u4f60\u7684\u4e1c\u897f\u4e0d\u4f1a\u575a\u6301\u3002\u6559\u80b2\u7684\u57fa\u672c\u539f\u5219\u662f\u7ed9\u5b66\u751f\u4e00\u4e2a\u73af\u5883\u548c\u5de5\u5177\uff0c\u8ba9\u4ed6\u4eec\u81ea\u5df1\u53bb\u53d1\u73b0\u3002\u8fd9\u9700\u8981\u7a7a\u95f4\u3001\u65f6\u95f4\u548c\u81ea\u4e3b\u6027\u3002\u5b66\u751f\u8fd8\u9700\u8981\u80fd\u591f\u9009\u62e9\u4ed6\u4eec\u5b66\u5230\u4e86\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4ed6\u4eec\u662f\u5982\u4f55\u5b66\u4e60\u7684\uff0c\u8fd9\u662f\u73b0\u4ee3\u50f5\u5316\u7684\u8bfe\u7a0b\u548c\u76d1\u72f1\u822c\u7684\u5b66\u6821\u73af\u5883\u6240\u4e0d\u5141\u8bb8\u7684\u3002\u7136\u800c\uff0c\u6211\u4f1a\u8d70\u5f97\u66f4\u8fdc\uff0c\u8bf4\uff1a2.\u89c6\u9891\u6e38\u620f\u6bd4\u53e4\u5178\u6559\u80b2\u5bf9\u5927\u591a\u6570\u5b66\u79d1\u7684\u7406\u89e3\u8981\u6df1\u523b\u5f97\u591a\u3002\u6211\u4e0b\u4e86\u76f8\u5f53\u591a\u7684\u56fd\u9645\u8c61\u68cb(\u6211\u4e0b\u5f97\u4e0d\u662f\u5f88\u597d)\uff0c\u5728\u4e0b\u4e86\u5f88\u591a\u68cb\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u5c55\u51fa\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u4f60\u5f00\u59cb\u770b\u5230\u68cb\u76d8\u4e0a\u7684\u201c\u529b\u91cf\u7ebf\u201d\uff0c\u4f8b\u5982\u4e3b\u6559\u5bf9\u654c\u4eba\u68cb\u5b50\u65bd\u52a0\u7684\u529b\u91cf\uff1b\u5f00\u59cb\u4ee5\u975e\u5e38\u7269\u7406\u7684\u65b9\u5f0f\u611f\u89c9\u5230\u5bf9\u624b\u7ed3\u6784\u4e2d\u7684\u201c\u5f31\u70b9\u201d\uff0c\u5c31\u50cf\u4f60\u53ef\u4ee5\u611f\u89c9\u5230\u73b0\u5b9e\u4e16\u754c\u4e2dJenga\u5854\u6700\u4e0d\u7a33\u5b9a\u7684\u90e8\u5206\u4e00\u6837\u3002\u8fd9\u5c31\u662f\u7ecf\u5178\u7684\u201c\u5b66\u8005\u4f19\u4f34\u201d\u4f4d\u7f6e\u3002\u4e00\u65e6\u4f60\u628a\u4f60\u7684\u4e3b\u6559\u79fb\u5230c4\uff0c\u4f60\u5c31\u4f1a\u201c\u611f\u89c9\u201d\u5230\u90a3\u4e2a\u9ed1\u8272\u7684f-\u5352\u627f\u53d7\u7740\u538b\u529b\u3002\u767d\u4e3b\u6559\u548c\u7687\u540e\u5bf9f-\u68cb\u5b50\u65bd\u52a0\u7684\u529b\u91cf\u53ef\u4ee5\u611f\u89c9\u5230\u662f\u4e00\u4e2a\u597d\u68cb\u624b\u8eab\u4f53\u7684\u5f31\u70b9\u3002\u57f9\u517b\u8fd9\u79cd\u4ee5\u89e6\u89c9\u4e3a\u57fa\u7840\u7684\u3001\u5bf9\u4e8b\u7269\u6709\u672c\u4f53\u611f\u89c9\u7684\u201c\u611f\u89c9\u201d\u5f80\u5f80\u662f\u771f\u6b63\u6df1\u5165\u7406\u89e3\u5b83\u7684\u5173\u952e\u3002\u5f53\u4f60\u5f88\u597d\u5730\u7406\u89e3\u4e00\u4ef6\u4e8b\u60c5\u65f6\uff0c\u51e0\u4e4e\u5c31\u50cf\u4f60\u53ef\u4ee5\u7528\u4f60\u6240\u6709\u7684\u611f\u5b98--\u89e6\u6478\u3001\u611f\u89c9\u3001\u7a7a\u95f4--\u6765\u73a9\u5f04\u5b83\u3002\u8d39\u66fc\uff1a\u201c\u5982\u679c\u4f60\u770b\u4e0d\u5230\u5b83\uff0c\u5c31\u5f88\u96be\u89e3\u91ca\u4e3a\u4ec0\u4e48--\u4f46\u662f\u5982\u679c\u4f60\u8bd5\u56fe\u7528\u68af\u5b50\u6258\u8d77\u4ec0\u4e48\u4e1c\u897f\uff0c\u6bd4\u5982\u8bf4\uff0c\u4f60\u628a\u68af\u5b50\u76f4\u63a5\u653e\u5728\u4e1c\u897f\u4e0b\u9762\uff0c\u5c31\u5f88\u5bb9\u6613\u9632\u6b62\u68af\u5b50\u6ed1\u51fa\u6765\u3002\u4f46\u662f\u5982\u679c\u68af\u5b50\u5411\u5916\u503e\u659c\uff0c\u68af\u5b50\u7684\u53e6\u4e00\u7aef\u79bb\u5730\u9762\u53ea\u6709\u5f88\u5c0f\u7684\u8ddd\u79bb\uff0c\u4f60\u4f1a\u53d1\u73b0\u9700\u8981\u4e00\u4e2a\u51e0\u4e4e\u65e0\u9650\u7684\u6c34\u5e73\u529b\u624d\u80fd\u4ee5\u975e\u5e38\u5fae\u5c0f\u7684\u89d2\u5ea6\u5c06\u4e1c\u897f\u4e3e\u8d77\u6765\u3002\u73b0\u5728\uff0c\u6240\u6709\u8fd9\u4e9b\u4f60\u90fd\u80fd\u611f\u89c9\u5230\u7684\u4e1c\u897f\u3002\u4f60\u4e0d\u9700\u8981\u611f\u89c9\uff0c\u53ea\u8981\u4f5c\u56fe\u3001\u8ba1\u7b97\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u968f\u7740\u95ee\u9898\u8d8a\u6765\u8d8a\u96be\uff0c\u5728\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u60c5\u51b5\u4e0b\u53bb\u4e86\u89e3\u81ea\u7136\uff0c\u8d8a\u4e0d\u8ba1\u7b97\u5c31\u8d8a\u80fd\u731c\u6d4b\u3001\u611f\u89c9\u3001\u7406\u89e3\uff0c\u90a3\u5c31\u8d8a\u597d\u4e86\uff01\u201c\uff0c\u4ed6\u8bf4\uff0c\u201d\n\u6709\u8d39\u66fc\u5728\u5730\u677f\u4e0a\u6253\u6eda\uff0c\u773c\u775b\u95ed\u7740\u805a\u7cbe\u4f1a\u795e\uff0c\u7528\u8eab\u4f53\u6a21\u62df\u7269\u7406\u8fc7\u7a0b\u7684\u6545\u4e8b\u3002\u4ed6\u7684\u4f20\u8bb0\u4f5c\u8005\u8a79\u59c6\u65af\u00b7\u683c\u83b1\u514b(James Gleick)\u5199\u9053\uff1a\u76f4\u89c9\u4e0d\u4ec5\u662f\u89c6\u89c9\uff0c\u4e5f\u662f\u542c\u89c9\u548c\u52a8\u89c9\u3002\u5728\u5168\u795e\u8d2f\u6ce8\u7684\u65f6\u523b\u89c2\u5bdf\u8d39\u66fc\u7684t hose\u5e26\u7740\u4e00\u79cd\u5f3a\u70c8\u7684\uff0c\u751a\u81f3\u662f\u4ee4\u4eba\u4e0d\u5b89\u7684\u611f\u89c9\u79bb\u5f00\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u4ed6\u7684\u5927\u8111\u5e76\u6ca1\u6709\u505c\u6b62\u5728\u7070\u8d28\u4e2d\uff0c\u800c\u662f\u5ef6\u4f38\u5230\u4e86\u4ed6\u8eab\u4f53\u7684\u6bcf\u4e00\u5757\u808c\u8089\u3002\u5eb7\u5948\u5c14\u5927\u5b66\u5bbf\u820d\u7684\u4e00\u4f4d\u90bb\u5c45\u6253\u5f00\u8d39\u66fc\u7684\u95e8\uff0c\u53d1\u73b0\u4ed6\u6b63\u5728\u5e8a\u8fb9\u7684\u5730\u677f\u4e0a\u6253\u6eda\uff0c\u6b63\u5728\u505a\u4e00\u9053\u9898\u2026\u2026\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u79d1\u5b66\u53ef\u89c6\u5316\u7684\u8fc7\u7a0b\u5c31\u662f\u628a\u81ea\u5df1\u653e\u5230\u81ea\u7136\u754c\u4e2d\u7684\u8fc7\u7a0b\uff1a\u5728\u60f3\u8c61\u4e2d\u7684\u5149\u675f\u4e2d\uff0c\u5728\u76f8\u5bf9\u8bba\u7535\u5b50\u4e2d\u3002\n\u8fd8\u6709\u4e00\u4e2a\u8457\u540d\u7684\u6545\u4e8b\uff0c\u7231\u56e0\u65af\u5766\u572816\u5c81\u65f6\u60f3\u8c61\u8ffd\u9010\u4e00\u675f\u5149\u7ebf\uff0c\u8fd9\u662f\u72ed\u4e49\u76f8\u5bf9\u8bba\u7684\u79cd\u5b50\u30023.\u5b66\u6821\u6559\u80b2\u5927\u591a\u4e0d\u80fd\u7ed9\u4f60\u8fd9\u79cd\u6df1\u523b\u7684\u7406\u89e3\u3002\u5927\u591a\u6570\u6210\u5e74\u4eba\u90fd\u6709\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u75db\u82e6\u7ecf\u5386\uff0c\u4ed6\u4eec\u610f\u8bc6\u5230\uff0c\u7ecf\u8fc715\u5e74\u7684\u6b63\u89c4\u6559\u80b2\uff0c\u6211\u4eec\u4ecd\u7136\u65e0\u6cd5\u56de\u7b54\u5173\u4e8e\u65e5\u5e38\u79d1\u5b66\u95ee\u9898\u7684\u975e\u5e38\u57fa\u672c\u7684\u95ee\u9898(\u4f8b\u5982\uff0c\u4e3a\u4ec0\u4e48\u5929\u7a7a\u5b9e\u9645\u4e0a\u662f\u84dd\u8272\u7684)\uff0c\u5fc5\u987b\u53bb\u67e5\u770b\u5b83\u4eec\u3002\u6211\u5728\u5b66\u6821\u201c\u5b66\u5230\u201d\u7684\u5927\u90e8\u5206\u4e1c\u897f\u6839\u672c\u5c31\u6ca1\u80fd\u8bb0\u4f4f\uff0c\u6211\u4eec\u53ea\u662f\u88ab\u544a\u77e5\u4e00\u4e2a\u539f\u5b50\u662f\u7531\u8d28\u5b50/\u4e2d\u5b50/\u7535\u5b50\u7ec4\u6210\u7684\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u4eba\u4eec\u662f\u5982\u4f55\u5f04\u660e\u767d\u8fd9\u4e00\u70b9\u7684(\u6216\u8005\uff0c\u5c31\u6b64\u800c\u8a00\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981)\u3002\u6211\u75db\u82e6\u5730\u56de\u5fc6\u8d77\u5728\u5b66\u6821\u5b66\u4e60\u539f\u5b50\u7684\u201c\u6885\u5b50\u5e03\u4e01\u6a21\u578b\u201d(\u53c8\u540d\u5362\u745f\u798f\u6a21\u578b)\uff0c\u4eba\u7c7b\u82b1\u4e86\u51e0\u5343\u5e74\u624d\u771f\u6b63\u5f04\u6e05\u695a\u73b0\u5b9e\u662f\u7531\u539f\u5b50\u7ec4\u6210\u7684\uff0c\u5e76\u660e\u767d\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u3002\u73b0\u5b9e\u4e2d\u6709\u5927\u91cf\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ec6\u8282\u3002\u4f60\u8d8a\u662f\u6df1\u5165\u8fd9\u4e9b\u95ee\u9898\uff0c\u5c31\u8d8a\u4f1a\u610f\u8bc6\u5230\u6ca1\u6709\u4ec0\u4e48\u662f\u7b80\u5355\u7684\u3002\u4f46\u662f\u5b66\u6821\u6ca1\u6709\u7ed9\u6211\u4eec\u7559\u51fa\u6df1\u5165\u7814\u7a76\u8fd9\u4e9b\u95ee\u9898\u7684\u7a7a\u95f4\uff1b\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u8003\u8bd5\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u5c3d\u804c\u5c3d\u8d23\u5730\u5b66\u4e60\u8ba1\u7b97\u5206\u5b50\u91cf\u7b49\uff0c\u800c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4e86\u89e3\u4efb\u4f55\u4e8b\u60c5\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\uff1a\u6ca1\u6709\u7406\u89e3\uff0c\u591a\u5e74\u7684\u6d6a\u8d39\u3002\u4f46\u8fd9\u662f\u5b8c\u5168\u53ef\u4ee5\u9884\u9632\u7684\u3002\u60f3\u60f3\u770b\uff0c\u7cbe\u7075\u5b9d\u53ef\u68a6\u662f\u5426\u4ee5\u901a\u5e38\u7684\u65b9\u5f0f\u88ab\u201c\u6559\u201d\u8fc7\uff1a\u73a9\u6a21\u62df\u6e38\u620f(\u5373\u7cbe\u7075\u5b9d\u53ef\u68a6\u6e38\u620f)\u4f1a\u8ba9\u4f60\u5f88\u5feb\u5bf9\u7cbe\u7075\u6709\u5982\u6b64\u6df1\u523b\u7684\u3001\u201c\u9aa8\u5b50\u7ea7\u201d\u7684\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u6211\u76f8\u4fe1\uff1a4.\u7535\u5b50\u6e38\u620f\u5c06\u6210\u4e3a\u6559\u80b2\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\u3002\u8fd9\u542c\u8d77\u6765\u5f88\u8352\u8c2c\uff0c\u4f46\u662f\u8003\u8651\u5230\u6a21\u62df\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7528\u4e8e\u5b66\u4e60\uff1a\u7f16\u7a0b\u73af\u5883\u662f\u5bf9\u201c\u5355\u5143\u201d\u7684\u6a21\u62df", "note_en": "Published: June 21, 2020  My real education as a teenager was:    #1-3 happened  despite formal schooling, not because of it, something Paul Graham says here:      This suggests the following conclusion:   1. The things you learn by yourself stick; the things that are \u201ctaught\u201d to you do not stick.   The fundamental principle of education is to give students an environment, and tools,  where they can make discoveries themselves. This requires space, and time, and autonomy.   Students also need to be able to  choose what they learn and how they learn it, something that modern rigid curriculums and prison-like school environments do not permit.\u00a0  However, I would go farther than this and say:   2. Video games provide a much deeper understanding of most subjects than classical education does.  I play a fair amount of chess (I\u2019m not very good) and one thing you develop after playing a lot of chess is that you start to see \u201clines of force\u201d on the board, e.g. the force a bishop exerts on an enemy pawn; and start to sense \u201cweak points\u201d in the opponent\u2019s structure  in a very physical way, in the way that you can sense the shakiest part of a Jenga tower in the physical world.\u00a0     This is the classical \u201cscholar\u2019s mate\u201d position. As soon as you move your bishop to c4, you just \u201cfeel\u201d that the black f-pawn is under pressure. The force exerted by the white bishop and Queen on the f-pawn can be felt as a weakness  in the body of a good chess player.  Developing this touch-based, proprioceptive \u201csense\u201d of a thing is often key to a really deep understanding of it. When you understand something very well it\u2019s almost as though you can play around with it using all your senses \u2014 touch, feeling, space.   Feynman:  \u201cIf you can\u2019t see it, it\u2019s hard to explain why\u2014but if you try to hold something up with a ladder, say, and you get the ladder directly under the thing, it\u2019s easy to keep the ladder from sliding out. But if the ladder is leaning way waaaaay out, so that the far end of the ladder is only a very tiny distance from the ground, you\u2019ll find a nearly infinite horizontal force is required to hold the thing up at a very slight angle.  Now, all these things you can feel. You don\u2019t have to feel them; you can work them out by making diagrams and calculations, but as problems get more and more difficult, and as you try to understand nature in more and more complicated situations, the more you can guess at, feel, and understand without actually calculating, the much better off you are!\u201d\nThere are stories of Feynman rolling around on the floor, eyes closed in concentration, simulating physical processes with his body. His biographer, James Gleick, writes:  Intuition was not just visual but also auditory and kinesthetic. T hose who watched Feynman in moments of intense concentration came away with a strong, even disturbing sense of the physicality of the process, as thuogh his brain did not stop with the gray matter but extended through every muscle in his body. A Cornell dormitory neighbor opened Feynman\u2019s door to find him rolling about on the floor beside his bed as he worked on a problem....In part the process of scientific visualization is a process of putting onself in nature: in an imagined beam of light, in a relativistic electron.\n There is also the famous story of Einstein at 16 imagining chasing after a beam of light, the seed of special relativity.   3. Schooling mostly fails at giving you this deep understanding.   Most adults have the\u00a0 incredibly painful experience of realizing that after 15 years of formal schooling we still can\u2019t answer very basic questions about everyday scientific questions (e.g. why the sky is actually blue) and have to go look them up.   Most of the things I was \u201ctaught\u201d at school simply didn\u2019t stick.We were just  told that an atom consisted of protons/neutrons/electrons, but we had no idea how anybody had figured this out (or, for that matter, why this was important). I have painful memories of studying the \u201cplum pudding model\u201d (aka Rutherford model) of atoms at school.\u00a0  It took humans  thousands of years to really figure out that reality was made of atoms, and understand why this was true. Reality has  a surprising amount of detail. The deeper you get into these questions, the more you realize that nothing is simple. But school didn\u2019t leave us room to dive deep into these questions; we had to pass exams, which meant dutifully learning to calculate molecular weights, etc, without actually understanding a thing.   The net result is: no understanding, years of waste.  But this is  entirely preventable. Consider if Pokemon had been \u201ctaught\u201d in the usual way:     Playing with a simulation (i.e. the Pokemon games) gets you this deep, \u201cbone-level\u201d understanding very quickly.\u00a0  Thus, I believe that:   4. Video games will become a core component of education.  This sounds absurd, but consider that  simulations are already used widely for learning:   Programming environments are simulations of the \u201cuniverse\u201d of that programming language, with fast feedback loops (write code -&gt; debug)\n  A video game is just:  (a) a simulation of reality (b) with fast feedback loops.   Learning is just the act of engaging with an external thing and performing many conjecture/criticism loops, forming conclusions, and building on them to form a body of knowledge.   So it makes sense that video games would be the primary educational environment of the future: they are the best way we have of (a) creating simulations of reality (b) with fast feedback loops (c) accessible at low cost.   (By the way, this is true not just for abstract concepts such as orbital mechanics, but also for ethical traits. e.g. my understanding of heroism is to this day shaped by games like Final Fantasy and Metal Gear Solid. This also helps explain why reading fiction is valuable: you can gain \u201cbodily knowledge\u201d about despair by reading Dostoyevsky, about jealousy by reading Swann\u2019s Way, etc.)   5. Where games mostly fall short is that they\u2019re not that transferable to the real world. The skills you learn are highly  specific to that game. This will change.  Most chess knowledge is specific to chess; what you learn from getting good at chess is not really transferable to real life, it instead consists of highly technical understandings of various chess positions.   This is because chess is not an accurate model of reality. The lessons you learn from chess are generalizable only at a high level (e.g. a bad plan is better than no plan).  But if you have games that are (a) fun and (b) accurate for some aspects of reality, such as KSP or Factorio, you  do get learning that is real and transferable. The challenge is in making games that satisfy both constraints.  There are not  that many examples of this just yet, but I believe there will be more in the future. So why hasn\u2019t this happened already? I think the answer is:   6. It is currently too hard to make video games. Making it easier to create video games will massively increase the supply of good video games and cause a gradual revolution in education.\u00a0  One thesis of the internet that always stuck with me comes from Evan Williams, who founded Twitter/Blogger/Medium. He said that the best way to create a giant internet company is to take something people want to do and make it 10x easier.   This was the core insight behind all of his companies. People already want to be creative, they want to make music, they want to make video games, they want to write (clearly!), they want to publish things online, but the barriers to entry for most of these things is currently too high.\u00a0  &#34;We often think of the internet enables you to do new things,&#34; Williams said. &#34;But people just want to do the same things they\u2019ve always done.&#34;  (...)  &#34;Here\u2019s the formula if you want to build a billion-dollar internet company,&#34; he said. &#34;Take a human desire, preferably one that has been around for a really long time...Identify that desire and use modern technology to take out steps.&#34; ( link)\n\u201cMaking things easier to create\u201d is a mega-trend of the internet era:     Another insight is that  making things easier has nonlinear effects. Making something 10x easier can cause 1000x more of that thing to happen. Hence the explosion of online creativity you see on YouTube, with chess, Minecraft, math videos, Khan Academy, Twitchstreams, Soundcloud, etc; you remove a small bit of friction and get a large result.  This trend has a long way to go, though. Making video games is colossally hard and expensive; you\u00a0 need to be a crazy genius indie game developer with ultra-high risk tolerance, or else a mega-corporation like Unity or Steam or Valve, to do it. Video games haven\u2019t yet had their \u201ccreator revolution\u201d.  This will not always be the case. Large companies will be built that make it easier for anyone to make videos, or video games, or podcasts, and so on, unleashing a ton more latent creativity. This will make the idea of video games for education seem less and less insane over time, as better games get built to help students understand important things like Newtonian mechanics, maths, chemistry, architecture etc. on an intuitive level that books and teachers rarely manage to reach.  This is also why AI is important for human productivity. Most of the discourse here is about how AI will \u201creplace\u201d humans. I prefer the Licklider school of thought -- human-computer symbiosis. AI will make humans vastly more effective by automating tedious tasks. For example, humans can use text AI such as GPT-3 to generate ideas/boilerplate writing to get around the terror of the blank page, and then simply pick the best ones and refine/iterate on those. (AI Dril, which was based on GPT-2, was an early example of this).\u00a0  The potential energy of human creativity is vast. We just need to give people tools, and creation will follow. Onwards!   Thanks for Saku P for reading a draft of this.   Follow me on Twitter:\u00a0 https://twitter.com/nabeelqu", "posttime": "2020-06-22 02:48:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u7535\u5b50\u6e38\u620f,\u6559\u80b2,games,\u611f\u89c9", "title": "\u7535\u5b50\u6e38\u620f\u662f\u6559\u80b2\u7684\u672a\u6765", "title_en": "Video Games Are the Future of Education", "transed": 1, "url": "https://nabeelqu.co/education", "via": "", "real_tags": ["\u6e38\u620f", "\u7535\u5b50\u6e38\u620f", "\u6559\u80b2", "games", "\u611f\u89c9"]}, {"category": "", "categoryclass": "", "imagename": "d7bcb958d7a6dd42d4e9562aea4c7f0d.jpg", "infoid": 1007547, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6e29\u5c3c\u4f2f\u6742\u8d27\u5e97\u7684\u4e00\u540d\u5e97\u4e3b\u5bf9\u6d89\u53ca\u6bd4\u7279\u5e01\u7684\u8bc8\u9a97\u6572\u54cd\u4e86\u8b66\u949f\uff0c\u6b64\u524d\u4ed6\u7684\u8bb8\u591a\u987e\u5ba2\u90fd\u53d7\u5230\u4e86\u4f24\u5bb3\u3002\n\u80e1\u65af\u5c3c\u00b7\u624e\u4f0a\u5fb7(Husni Zeid)\u5728\u4ed6\u4f4d\u4e8e\u4e01\u9999\u8857(Lilac Street)\u7684\u98df\u54c1\u7968\u4ef7\u5546\u5e97\u7684\u6bd4\u7279\u5e01\u81ea\u52a8\u552e\u8d27\u673a\u4e0a\u6302\u4e0a\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u6807\u5fd7\uff0c\u8b66\u544a\u987e\u5ba2\u6d89\u53ca\u8fd9\u79cd\u52a0\u5bc6\u8d27\u5e01\u7684\u7535\u8bdd\u8bc8\u9a97\u3002\n\u624e\u4f0a\u5fb7\u5728\u63a5\u53d7\u73af\u7403\u65b0\u95fb\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u5f88\u591a\u4eba\u63a5\u5230\u7535\u8bdd\u8bf4\uff0c\u4ed6\u4eec\u5fc5\u987b\u628aCRA\u7684\u94b1\u8f6c\u5230\u6bd4\u7279\u5e01\u4e0a\uff1b\u6211\u4eec\u4e5f\u6709\u9a6c\u5c3c\u6258\u5df4\u7701\u6c34\u7535\u516c\u53f8\u3002\u201d\n\u201c\u6628\u5929(A)\u5988\u5988\u5728\u8fd9\u91cc\uff0c\u5979\u8bf4\u5979\u628a\u6240\u6709\u7684\u79ef\u84c4\u90fd\u7ed9\u4e86\u4ed6\u4eec\uff0c\u5979\u53ea\u662f\u54ed\u4e86\u3002\u5458\u5de5\u5965\u62c9\u00b7\u83ab\u91cc\u585e\u7279(Aura Morissette)\u8bf4\uff1a\u201c\u5979\u4e0a\u5f53\u4ee4\u4eba\u5fc3\u788e\uff0c\u4ee4\u4eba\u96be\u8fc7\u3002\u201d\n\u201c\u5979\u4e00\u76f4\u5728\u8bf4\uff0c\u2018\u6211\u6709\u5b69\u5b50\u3002(\u8fd9)\u592a\u53ef\u6015\u4e86\u3002\u201c\u3002\n\u98df\u54c1\u7968\u4ef7\u516c\u53f8\u7684\u5458\u5de5\u4e5f\u627f\u62c5\u8d77\u4e86\u81ea\u5df1\u7684\u8d23\u4efb\uff0c\u4ee5\u5e2e\u52a9\u9632\u6b62\u987e\u5ba2\u6210\u4e3a\u9a97\u5c40\u7684\u53d7\u5bb3\u8005\u3002\n\u83ab\u91cc\u585e\u7279\u8865\u5145\u8bf4\uff1a\u201c\u53ea\u8981\u6211\u4eec\u770b\u5230\u6709\u4eba(\u4f7f\u7528\u6bd4\u7279\u5e01\u673a\u5668)\u5728\u4ed6\u4eec\u7684\u624b\u673a\u4e0a\uff0c\u6211\u4eec\u603b\u662f\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u63d2\u8bdd\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u6ca1\u6709\u4e0e(\u9a97\u5b50)\u901a\u7535\u8bdd\u3002\u201d\u201c\u901a\u5e38\u662f\u8fd9\u6837\u7684\u3002\u201d\n\u624e\u4f0a\u5fb7\u8bf4\u4ed6\u53d7\u591f\u4e86\uff0c\u60f3\u628a\u8fd9\u53f0\u673a\u5668\u4ece\u4ed6\u7684\u5e97\u91cc\u62ff\u51fa\u6765\u3002\n\u4ed6\u8bf4\uff1a\u201c\u8fd9\u5df2\u7ecf\u5230\u4e86\u8ba9\u6211(\u592a)\u6cae\u4e27\u7684\u5730\u6b65\uff0c\u6211\u6253\u7535\u8bdd\u7ed9\u6bd4\u7279\u5e01\u673a\u5668\u7684\u6240\u6709\u8005\uff0c\u8981\u6c42\u628a\u673a\u5668\u79fb\u8d70\u3002\u201d\n\u6839\u636e\u52a0\u62ff\u5927\u53cd\u6b3a\u8bc8\u4e2d\u5fc3\u7684\u8bf4\u6cd5\uff0c\u51e0\u79cd\u7c7b\u578b\u7684\u6572\u8bc8\u52d2\u7d22\u9a97\u5c40\u6d89\u53ca\u8bc8\u9a97\u8005\u8981\u6c42\u6bd4\u7279\u5e01\u4f5c\u4e3a\u652f\u4ed8\uff0c\u5b83\u4eec\u7ecf\u5e38\u53d8\u5f97\u5177\u6709\u5a01\u80c1\u6027\u6216\u8bd5\u56fe\u5229\u7528\u60c5\u7eea\u3002\n\u8be5\u4e2d\u5fc3\u8868\u793a\uff0c\u4f60\u6c38\u8fdc\u4e0d\u5e94\u8be5\u5728\u7535\u8bdd\u4e2d\u900f\u9732\u4e2a\u4eba\u4fe1\u606f\uff0c\u5305\u62ec\u4f60\u7684\u59d3\u540d\u3001\u5730\u5740\u3001\u793e\u4f1a\u4fdd\u9669\u53f7\u3001\u51fa\u751f\u65e5\u671f\u3001\u4fe1\u7528\u5361\u6216\u94f6\u884c\u4fe1\u606f\u3002\n\u4ed6\u4eec\u8fd8\u9f13\u52b1\u4f60\u505a\u4f60\u7684\u8c03\u67e5\uff0c\u5e76\u5411\u9a97\u5b50\u58f0\u79f0\u6765\u81ea\u7684\u516c\u53f8\u6838\u5b9e\uff0c\u4e0d\u8981\u5bb3\u6015\u7b80\u5355\u5730\u6302\u65ad\u7535\u8bdd\u3002\n\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u662f\u8bc8\u9a97\u7684\u53d7\u5bb3\u8005\uff0c\u4f60\u53ef\u4ee5\u4e3e\u62a5\u4f60\u5f53\u5730\u7684\u52a0\u62ff\u5927\u7687\u5bb6\u9a91\u8b66\u652f\u961f\u548c\u52a0\u62ff\u5927\u53cd\u6b3a\u8bc8\u4e2d\u5fc3\uff0c\u7535\u8bdd\u662f1-888-495-8501\u3002", "note_en": "A Winnipeg grocery store owner is sounding the alarm over scams involving Bitcoin, after many of his customers were victimized.\n Husni Zeid has put a large sign on the Bitcoin machine in his Food Fare store on Lilac Street, warning customers of phone scams involving the cryptocurrency.\n \u201cA lot of people are getting phone calls saying that they have to transfer the money to Bitcoin regarding CRA; we\u2019ve had Manitoba Hydro as well,\u201d Zeid told Global News.\n   \u201cYesterday (a) mom was in here and she said she gave all her savings to them and she was just crying. It was heartbreaking that she fell for it; it was sad,\u201d employee Aura Morissette said.\n    \u201cAnd all she kept saying was \u2018I have kids. (It) was awful.\u201d\n  The Food Fare employees have also taken it upon themselves to help prevent customers falling victim to the scams.\n    \u201cAs soon as we see someone (using the Bitcoin machine) and they\u2019re on their cell phone, we always sort of interject just to make sure they\u2019re not on the phone with (the scammers),\u201d Morissette added. \u201cUsually they are.\u201d\n Zeid says he\u2019s fed up with it, and wants to get the machine out of his store.\n \u201cIt\u2019s to the point where it\u2019s (so) frustrating I\u2019m making calls to the Bitcoin machine owner to remove the machine,\u201d he said.\n     According to the Canadian Anti-Fraud Centre, several types of extortion scams involve the scammers demanding Bitcoin as payment, and they often become threatening or try to play on emotions.\n The centre says you should never give out personal information over the phone, including your name, address, social insurance number, birth date, credit card, or banking information.\n They also encourage you to do your research and verify with the company the scammer is claiming to be from, and don\u2019t be afraid to simply hang up the phone.\n If think you have been a victim of a scam, you can report the scam your local RCMP detachment and the Canadian Anti-Fraud Centre at 1-888-495-8501.", "posttime": "2020-06-22 02:47:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bd4\u7279\u5e01,\u8bc8\u9a97,grocery,\u7535\u8bdd", "title": "\u6e29\u5c3c\u4f2f\u6742\u8d27\u5e97\u8001\u677f\u79f0\u987e\u5ba2\u4e00\u76f4\u662f\u6bd4\u7279\u5e01\u8bc8\u9a97\u7684\u53d7\u5bb3\u8005", "title_en": "Winnipeg grocery store owner says customers have been victims of Bitcoin scams", "transed": 1, "url": "https://globalnews.ca/news/7078128/winnipeg-grocery-store-customers-bitcoin-scams/", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "\u8bc8\u9a97", "grocery", "\u7535\u8bdd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1007546, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u7b2c\u4e00\u6b21\u770b\u5230hey.com\u7684\u8ddf\u8e2a\u50cf\u7d20\u5757\u529f\u80fd\u65f6\uff0c\u6211\u5e76\u6ca1\u6709\u60f3\u592a\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4f1a\u8ba9\u5b83\u53d8\u6210\u6bd4\u5b9e\u9645\u60c5\u51b5\u66f4\u591a\u7684\u4e1c\u897f\u3002\n\u6211\u901a\u5e38\u4f1a\u5c4f\u853d\u6211\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u6240\u6709\u56fe\u7247\uff0c\u8fd9\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\u6211\u8fd8\u6709\u4e00\u4e2a\u5e7f\u544a\u62e6\u622a\u7a0b\u5e8f(\u901a\u8fc7DNS\u548c\u6d4f\u89c8\u5668)\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5728\u90a3\u91cc\u6d88\u9664\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u592a\u5927\u5f20\u65d7\u9f13\u3002\n\u6211\u6536\u5230\u7684\u7b2c\u4e00\u5c01\u5e26\u6709\u8ddf\u8e2a\u50cf\u7d20\u7684\u7535\u5b50\u90ae\u4ef6\u6070\u597d\u6765\u81eaBackblaze(\u4e00\u5bb6\u5907\u4efd\u516c\u53f8\uff0c\u6211\u5c0a\u91cd\u5e76\u559c\u6b22\u5b83)\u3002\u8fd9\u662f\u4ed6\u4eec\u7684\u81ea\u52a8\u901a\u77e5\u4e4b\u4e00\u3002\u6ca1\u4ec0\u4e48\u592a\u91cd\u8981\u7684\u3002\u4f46\u6211\u6ca1\u60f3\u5230\u4ed6\u4eec\u4f1a\u8ffd\u8e2a\u90a3\u4e9b\u7535\u5b50\u90ae\u4ef6\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u6562\u6253\u8d4c\u4ed6\u4eec\u751a\u81f3\u4e0d\u60f3\u8ffd\u8e2a\u90a3\u4e9b\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u53ea\u662f\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u63d0\u4f9b\u5546(SendGrid)\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u3002\n\u4f46\u662f\u5f53\u6211\u770b\u5230\u563f\u5173\u4e8e\u5b83\u7684\u4fe1\u606f\u65f6\uff0c\u5b83\u5b9e\u9645\u4e0a\u8feb\u4f7f\u6211\u7ed9Backblaze\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u5bf9\u6b64\u63d0\u51fa\u4e86\u62b1\u6028\u3002\n\u5c31\u5728\u90a3\u65f6\uff0c\u6211\u7a81\u7136\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u663e\u793a\u8fd9\u4e9b\u8ddf\u8e2a\u50cf\u7d20\u662fhey.com\u7684\u7edd\u5999\u4e4b\u4e3e\u3002\u4ed6\u4eec\u4e0d\u4ec5\u963b\u6321\u4e86\u8fd9\u4e9b\u8ffd\u8e2a\u5668\uff0c\u800c\u4e14\u8fd8\u8ba9\u8fd9\u4e9b\u4e1c\u897f\u6d6e\u51fa\u6c34\u9762\u3002\u5e0c\u671b\u80fd\u8feb\u4f7f\u4eba\u4eec\u91c7\u53d6\u884c\u52a8\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u5728\u4f7f\u7528hey.com(\u6216\u8005\u5373\u4f7f\u4f60\u6ca1\u6709\uff0c\u4f60\u4e5f\u53ef\u4ee5\u77e5\u9053\u4f60\u6536\u5230\u7684\u7535\u5b50\u90ae\u4ef6\u662f\u5426\u6709\u8ddf\u8e2a\u529f\u80fd)\uff0c\u4f60\u5e94\u8be5\u8ba9\u7ed9\u4f60\u53d1\u7535\u5b50\u90ae\u4ef6\u7684\u516c\u53f8\u77e5\u9053\u4f60\u5bf9\u6b64\u4e0d\u6ee1\u610f\u3002", "note_en": "When I first saw the  tracking pixel blocking feature of hey.com I didn\u2019t think too much of it. In fact,  I thought it was making it into something more than it really was.\n I typically block all images on my emails, and that\u2019s good enough. I also have an ad-blocker (both via DNS and in the browser), so I can eliminate the issue right there without too much fanfare.\n   The first email I received that had a tracking pixel happened to be from Backblaze (a backup company, which I respect and like). It was one of their auto-notifications. Nothing too important. But I didn\u2019t expect them to track those emails. In fact, I\u2019m willing to bet that they didn\u2019t even want to track those emails. It just came as a default from their email provider (sendgrid).\n But when I saw the info from hey about it, it actually compelled me to email Backblaze and complain about it.\n   And that\u2019s when it hit me.  Surfacing those tracking pixels in this way is a brilliant move by hey.com. They\u2019re not just blocking these trackers, but they also bring this to the surface. Hopefully compelling people to take action.\n So if you\u2019re using hey.com (or even if you\u2019re not, and you can figure out whether the email you receive has tracking on it),  you should let the companies who emailed you know that you\u2019re not happy about it.", "posttime": "2020-06-22 02:47:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u50cf\u7d20,pixel,\u7535\u5b50\u90ae\u4ef6", "title": "Hey.com\u7528\u5b83\u7684\u8ddf\u8e2a\u50cf\u7d20\u62e6\u622a\u5668\u627e\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f", "title_en": "Hey.com is onto something with its tracking-pixel blocker", "transed": 1, "url": "https://blog.gingerlime.com/2020/hey-com-is-onto-something-with-its-tracking-pixel-blocker/", "via": "", "real_tags": ["\u50cf\u7d20", "pixel", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "dda360d35bda4e54dbce9b99a48f6bda.jpg", "infoid": 1007545, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "David Heinemeier Hansson\u662fRuby on Rails\u7684\u521b\u5efa\u8005\uff0cBasecamp\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6280\u672f\u5b98\uff0c\u7545\u9500\u4e66\u4f5c\u5bb6\uff0c\u52d2\u8292\u73ed\u7ea7\u83b7\u5956\u8d5b\u8f66\u624b\uff0c\u5c45\u5bb6\u7537\u4eba\uff0c\u7ecf\u5e38\u64ad\u5ba2\u548c\u52b1\u5fd7\u4f1a\u8bae\u6f14\u8bb2\u8005\u3002\nRuby on rails\u662fDavid\u57282003\u5e74\u521b\u5efa\u7684\u3002\u4ece2008\u5e74Evrone\u6210\u7acb\u4e4b\u65e5\u8d77\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u4f7f\u7528Rails\u5f00\u6e90Web\u6846\u67b6\u3002\u5b83\u5df2\u7ecf\u5e2e\u52a9\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u9879\u76ee\u7f16\u5199\u4e86\u6570\u5343\u6b21\u771f\u6b63\u6f02\u4eae\u7684\u4ee3\u7801\u3002\u9664\u4e86\u521b\u5efa\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6700\u6709\u7528\u7684\u5de5\u5177\u4e4b\u4e00\uff0c\u5927\u536b\u8fd8\u5b8c\u6210\u4e86\u8bb8\u591a\u5176\u4ed6\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u58ee\u4e3e\uff0c\u4ece\u5199\u4e66\u4e0d\u4e00\u5b9a\u8981\u5728\u5de5\u4f5c\u4e2d\u75af\u72c2\u3001\u8fd4\u5de5\u548c\u8fdc\u7a0b\uff1a\u4e0d\u9700\u8981\u529e\u516c\uff0c\u5230\u53c2\u52a0\u56fd\u9645\u6c7d\u8054\u4e16\u754c\u8010\u529b\u9526\u6807\u8d5b\u30022014\u5e74\uff0c\u4ed6\u5728\u52d2\u829224\u5c0f\u65f6\u8d5b\u8dd1\u4e2d\u83b7\u5f97\u5168\u73ed\u7b2c\u4e00\u540d\uff0c\u52d2\u8292\u662f\u4e16\u754c\u4e0a\u6700\u8d1f\u76db\u540d\u7684\u8dd1\u8f66\u8010\u529b\u8d5b\u3002\u540c\u5e74\uff0c\u4ed6\u8fd8\u83b7\u5f97\u4e86GTE-Am\u7c7b\u522b\u7684WEC\u9526\u6807\u8d5b\u51a0\u519b\u3002\n2020\u5e74\uff0c\u6211\u4eec\u9080\u8bf7David\u5728RubyRussia\u4e0a\u53d1\u8a00\uff0c\u8fd9\u662fEvrone\u7b2c11\u5c4a\u83ab\u65af\u79d1\u5e74\u5ea6\u7f16\u7a0b\u5927\u4f1a\u3002\u5728\u6d3b\u52a8\u4e4b\u524d\uff0c\u6211\u4eec\u6709\u673a\u4f1a\u4e0eDavid\u8c08\u8bba\u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\u4ee5\u53ca\u4ed6\u7f16\u5199\u975e\u51e1\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\n\u57c3\u5f17\u9686\uff1a\u55e8\uff0c\u5927\u536b\uff0c\u5f88\u9ad8\u5174\u4eca\u5929\u80fd\u548c\u4f60\u8c08\u8bdd\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\u9762\u8bd5\u5427\u3002\u5bf9\u4e8e\u666e\u901a\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u51b3\u5b9a\u4ed6\u4eec\u662f\u9700\u8981\u4ece\u4f4eJavaScript\u65b9\u6cd5\u5f00\u59cb\u5e76\u5728\u4ee5\u540e\u53d1\u5c55\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd8\u662f\u9700\u8981\u4ece\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528ANGLE\u3001REACTION\u6216VUE\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4f60\u4f1a\u63a8\u8350\u4ec0\u4e48\u51b3\u7b56\u7b56\u7565\uff1f\n\u5927\u536b\uff1a\u5982\u679c\u4f60\u6b63\u5728\u5f00\u53d1\u4e00\u4e9b\u770b\u8d77\u6765\u6216\u5c1d\u8d77\u6765\u50cf\u9999\u8349\u7f51\u7edc\u5e94\u7528\u7684\u4e1c\u897f\uff0c\u6bd4\u5982Basecamp\u3001GitHub\u3001Shopify\u7b49\u7b49\uff0c\u90a3\u4e48\u6211\u8ba4\u4e3aMinimal-JS\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u8fd9\u4e0d\u662f\u6ca1\u6709JS\uff0c\u53ea\u662f\u6700\u4f4e\u9650\u5ea6\u7684\u3002\u5982\u679c\u4f60\u6b63\u5728\u6784\u5efa\u4e92\u52a8\u6027\u5f88\u5f3a\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6e38\u620f\u3001\u7167\u7247\u7f16\u8f91\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u5176\u4ed6\u66f4\u50cf\u662f\u5355\u5c4f\u5e55\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u7814\u7a76\u4e00\u4e0b\u5168SPA\u662f\u6709\u610f\u4e49\u7684\u3002\nEvrone\uff1a\u968f\u7740\u4ee3\u7801\u5e93\u548c\u56e2\u961f\u89c4\u6a21\u7684\u6269\u5927\uff0c\u60a8\u4f1a\u63a8\u8350\u5c06\u5178\u578b\u7684Rails\u5e94\u7528\u7a0b\u5e8f\u7684\u54ea\u4e9b\u90e8\u5206\u8f6c\u79fb\u5230\u5fae\u670d\u52a1\u4e2d\uff1f\u8003\u8651\u5230\u4f01\u4e1a\u9700\u8981\u4e00\u4e2a\u826f\u597d\u7684\u4ee3\u7801\u5f00\u53d1\u7ec4\u7ec7\uff0c\u4f46\u662f\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u6574\u4e2a\u4ea7\u54c1\u4e0d\u662f\u4e00\u79cd\u9009\u62e9\u3002\n\u5927\u536b\uff1a\u8fd9\u662f\u4e00\u79cd\u9519\u89c9\uff0c\u8ba4\u4e3a\u5982\u679c\u4f60\u7b2c\u4e00\u6b21\u5199\u7684\u8f6f\u4ef6\u4e0d\u591f\u597d\uff0c\u4e0d\u4f1a\u628a\u4e8b\u60c5\u641e\u5f97\u4e00\u56e2\u7cdf\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u4f60\u5c31\u4f1a\u505a\u5f97\u66f4\u597d\u3002\u4f60\u5fc5\u987b\u5b66\u4f1a\u65b0\u7684\u4e60\u60ef\uff0c\u7136\u540e\u628a\u5b83\u4eec\u5e94\u7528\u5230\u4f60\u751f\u6d3b\u7684\u5730\u65b9\u3002\u8428\u62c9\u00b7\u6885(Sarah Mei)\u57282018\u5e74\u94c1\u8def\u5927\u4f1a\u4e0a\u5c31\u6b64\u505a\u4e86\u7cbe\u5f69\u7684\u6f14\u8bb2\u3002\u5979\u8bf4\u4ee3\u7801\u5e93\u5df2\u7ecf\u4e0d\u518d\u662f\u6211\u4eec\u5efa\u9020\u7684\u4e1c\u897f\u4e86\u3002\u4ee3\u7801\u5e93\u662f\u6211\u4eec\u5c45\u4f4f\u7684\u5730\u65b9\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u5b83\u9002\u5408\u6211\u4eec\u81ea\u5df1\u548c\u6240\u6709\u4f4f\u5728\u90a3\u91cc\u7684\u4eba\u5c45\u4f4f\u3002\u5f53\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u5b8c\u6210\u5b83\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u5b83\u53ef\u6301\u7eed\uff0c\u5bf9\u5c45\u4f4f\u5728\u5176\u4e2d\u7684\u56e2\u961f\u6765\u8bf4\u662f\u5b9c\u5c45\u7684\u3002\n\u4f60\u53ef\u4ee5\u505a\u6240\u6709\u4f60\u60f3\u505a\u7684\u91cd\u5199\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4e0d\u6539\u53d8\u6700\u521d\u8ba9\u4f60\u8d70\u5230\u8fd9\u4e00\u6b65\u7684\u5c0f\u4e1c\u897f\uff0c\u4f60\u6700\u7ec8\u53ea\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u7efc\u590d\u6742\u7684\u5fae\u670d\u52a1\u7f51\u7edc\uff0c\u5c31\u50cf\u4f60\u7684\u5de8\u77f3\u4e2d\u6709\u4e00\u4e2a\u9519\u7efc\u590d\u6742\u7684\u7c7b\u5b9a\u4e49\u7f51\u7edc\u4e00\u6837\u3002\u60a8\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5185\u90e8\u7a7a\u95f4\uff0c\u7531\u4eba\u5360\u636e\u3002\u8f6f\u4ef6\u7684\u91cd\u8981\u90e8\u5206\u662f\u7cfb\u7edf\u3002\u8fd9\u662f\u4ee3\u7801\u548c\u4eba\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u662f\u5bc6\u4e0d\u53ef\u5206\u7684\u3002\u6211\u4eec\u8d8a\u80fd\u628a\u8f6f\u4ef6\u770b\u4f5c\u662f\u4ee3\u7801\u548c\u4eba\u7684\u76f8\u4e92\u8054\u7cfb\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u5c31\u8d8a\u63a5\u8fd1\u7a81\u7834\u3002\u6211\u4eec\u8d8a\u63a5\u8fd1\u4e00\u573a\u9769\u547d\uff0c\u8d8a\u63a5\u8fd1\u8303\u5f0f\u8f6c\u53d8\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u53ef\u80fd\u662f\uff0c\u6211\u4eec\u8d8a\u63a5\u8fd1\u80fd\u591f\u6784\u5efa\u8ba9\u6211\u4eec\u611f\u5230\u5174\u594b\u7684\u4ee3\u7801\u5e93\u3002\n\u57c3\u592b\u9686\uff1a\u54c7\uff0c\u8fd9\u542c\u8d77\u6765\u592a\u4ee4\u4eba\u5174\u594b\u4e86\uff0c\u6211\u4eec\u610f\u89c1\u5b8c\u5168\u4e00\u81f4\uff01\u5728\u7334\u5b50\u6253\u8865\u4e01\u548c\u5176\u4ed6\u4ee3\u7801\u7ec4\u5408\u6a21\u5f0f\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u65f6\uff0c\u60a8\u4f1a\u63a8\u8350\u54ea\u79cd\u65b9\u6cd5\uff1f\u6211\u4eec\u5e94\u8be5\u8003\u8651\u4ec0\u4e48\uff0c\u624d\u4e0d\u4f1a\u628a\u81ea\u7531\u4fee\u8865\u53d8\u6210\u4e00\u5806\u76f8\u4e92\u51b2\u7a81\u7684\u8d85\u8d8a\uff1f\n\u5927\u536b\uff1a\u81ea\u7531\u8865\u4e01\u662f\u7528\u6765\u521b\u5efa\u8bed\u8a00\u7684\u901a\u7528\u65b9\u8a00\u7684\u3002\u79ef\u6781\u652f\u6301\u5145\u6ee1\u4e86\u81ea\u7531\u8865\u4e01\u3002\u5b83\u4e0d\u662f\u7528\u6765\u521b\u5efa\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u66f4\u6539\u7684\u3002\nEvrone\uff1a\u4f60\u80af\u5b9a\u89c1\u8fc7\u5f88\u591aRuby\u4ee3\u7801\u3002\u5728\u60a8\u4e2a\u4eba\u770b\u6765\uff0c\u662f\u4ec0\u4e48\u8ba9\u4ee3\u7801\u53d8\u597d\u8fd8\u662f\u53d8\u5dee\uff1f\u6709\u6ca1\u6709\u4ec0\u4e48\u4e4d\u4e00\u770b\u5bf9\u4f60\u6765\u8bf4\u5f88\u660e\u663e\u7684\u4e8b\u60c5\uff1f\n\u5927\u536b\uff1a\u5982\u679c\u4ee3\u7801\u5199\u5f97\u5f88\u5dee\uff0c\u901a\u5e38\u5728\u4f60\u68c0\u67e5\u903b\u8f91\u4e4b\u524d\u5c31\u4f1a\u6709\u5f02\u5473\u3002\u7f29\u8fdb\u662f\u5173\u95ed\u7684\uff0c\u6837\u5f0f\u662f\u6df7\u5408\u7684\uff0c\u6839\u672c\u6ca1\u6709\u663e\u793a\u51fa\u7ec6\u5fc3\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4f1f\u5927\u7684\u4ee3\u7801\u662f\u6bd5\u751f\u7684\u8ffd\u6c42\u3002\u6b63\u5982\u6211\u5728\u6211\u7684\u94c1\u8def\u4f1a\u8bae2014\u4e3b\u9898\u6f14\u8bb2\u4e2d\u6240\u8bf4\uff0c\u6211\u4eec\u4e0d\u662f\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u662f\u8f6f\u4ef6\u4f5c\u8005\u3002\u201c\u5199\u4f5c\u201d\u6bd4\u201c\u5de5\u7a0b\u201d\u66f4\u9002\u5408\u7528\u6765\u6bd4\u55bb\u6211\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u6240\u505a\u7684\u4e8b\u60c5\u3002\u5199\u4f5c\u5c31\u662f\u8981\u6e05\u6670\uff0c\u5e76\u4ee5\u6e05\u6670\u6613\u61c2\u7684\u65b9\u5f0f\u5448\u73b0\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4efb\u4f55\u4eba\u90fd\u80fd\u7406\u89e3\u3002\n\u6ca1\u6709\u53ef\u4ee5\u6559\u7ed9\u67d0\u4eba\u7684\u539f\u5219\u548c\u5b9e\u8df5\u7684\u6e05\u5355\uff0c\u7136\u540e\u4ed6\u4eec\u6bcf\u6b21\u90fd\u4f1a\u81ea\u52a8\u5199\u51fa\u6e05\u6670\u7684\u6587\u5b57\u3002\u5982\u679c\u4f60\u60f3\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u4f5c\u5bb6\uff0c\u5149\u80cc\u5b57\u5178\u662f\u4e0d\u591f\u7684\u3002\u4ec5\u4ec5\u77e5\u9053\u60a8\u53ef\u4ee5\u4f7f\u7528\u7684\u8bcd\u8bed\uff0c\u4e86\u89e3\u5f00\u53d1\u6a21\u5f0f\u5e76\u4e0d\u80fd\u4f7f\u60a8\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u5f00\u53d1\u4eba\u5458\u3002\u4f60\u5f97\u7ec3\u5c31\u4e00\u53cc\u773c\u775b\u3002\u60a8\u5fc5\u987b\u51b3\u5b9a\uff0c\u5bf9\u60a8\u7684\u7cfb\u7edf\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u6e05\u6670\u5ea6\u3002\u5f53\u4f60\u51b3\u5b9a\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u957f\u773c\u775b\u4e86\u3002\n\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7a0b\u5e8f\u5458\u7684\u552f\u4e00\u9014\u5f84\u5c31\u662f\u9605\u8bfb\u5927\u91cf\u8f6f\u4ef6\u5e76\u7f16\u5199\u5927\u91cf\u8f6f\u4ef6\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u6211\u5c06\u4f18\u79c0\u7a0b\u5e8f\u5458\u5b9a\u4e49\u4e3a\u80fd\u591f\u6e05\u6670\u5730\u7f16\u5199\u8f6f\u4ef6\u7684\u4eba\u3002\n\u57c3\u592b\u9f99\uff1a\u90a3\u7edd\u5bf9\u662f\u771f\u7684\u3002\u4f60\u77e5\u9053\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd0\u8425\u516c\u53f8\u7684\u975e\u7a0b\u5e8f\u5458\u5f88\u96be\u7406\u89e3\u6280\u672f\u503a\u52a1\u3001\u67b6\u6784\u4ee5\u53ca\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u4ee3\u7801\u800c\u591a\u6b21\u91cd\u5199\u540c\u4e00\u4e2a\u5e94\u7528\u7684\u60f3\u6cd5\u3002\u4f5c\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\u548c\u5546\u4eba\uff0c\u60a8\u5efa\u8bae\u5982\u4f55\u5411\u6ca1\u6709\u7f16\u7a0b\u80cc\u666f\u7684\u5546\u4eba\u63a8\u9500\u8fd9\u4e9b\u60f3\u6cd5\uff1f\n\u5927\u536b\uff1a\u51e0\u4e4e\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u51fa\u4e8e\u6280\u672f\u539f\u56e0\uff0c\u6211\u90fd\u4e0d\u8d5e\u6210\u91cd\u5199\u5e94\u7528\u7a0b\u5e8f\u3002\u838e\u62c9\u00b7\u6885(Sarah Mei)\u7684\u4e3b\u9898\u6f14\u8bb2\u9610\u660e\u4e86\u5176\u4e2d\u7684\u539f\u56e0\u3002\u4f46\u662f\uff0c\u5f53\u60a8\u5e0c\u671b\u5e94\u7528\u7a0b\u5e8f\u505a\u4e00\u4e9b\u6839\u672c\u4e0d\u540c\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u786e\u5b9e\u76f8\u4fe1\u91cd\u5199\u3002\u6211\u5728\u7f8e\u56fd\u8f6f\u4ef6\u5546\u4e1a\u4f1a\u8bae\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u8c08\u5230\u4e86\u5f88\u591a\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u4e00\u76f4\u5728\u91cd\u5199Basecamp\u7684\u4ee3\u7801\uff0c\u4e0d\u6b62\u4e00\u6b21\uff0c\u751a\u81f3\u4e0d\u4f1a\u91cd\u5199\u4e24\u6b21\uff0c\u63a8\u51fa\u4e86Basecamp\u7684\u65b0\u7248\u672c\u3002\u5f53\u7136\uff0c\u548c\u4f60\u7684\u5ba2\u6237\u4e00\u8d77\u53d8\u8001\u662f\u5f88\u7f8e\u597d\u7684\u3002\u8fd9\u6709\u5f88\u591a\u597d\u5904\uff0c\u4e5f\u6709\u5f88\u591a\u7f3a\u70b9\u3002\u4f60\u5fc5\u987b\u6709\u67d0\u79cd\u5f62\u5f0f\u7684\u66f4\u65b0\uff0c\u56e0\u4e3a\u4e8b\u60c5\u505c\u6b62\u4e86\u53d8\u5316\uff0c\u5728\u67d0\u4e00\u70b9\u4e0a\uff0c\u4f60\u53ea\u6709\u4e00\u4e2a\u975e\u5e38\u8001\u7684\u5ba2\u6237\u57fa\u7840\uff0c\u4e00\u4e2a\u975e\u5e38\u840e\u7f29\u7684\u65b0\u5ba2\u6237\u57fa\u7840\uff0c\u4ee5\u53ca\u201c\u4e00\u4e2a\u6876\u201d\u3002\u5ba2\u6237\u79bb\u5f00\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u79bb\u5f00\u4e86\u4f60\u7684\u8f6f\u4ef6\u3002\n\u95ee\u9898\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u5012\u5165\u65b0\u7684\u6c34\uff0c\u6700\u7ec8\u6876\u91cc\u7684\u6c34\u5c31\u4f1a\u6240\u5269\u65e0\u51e0\u3002\u4f60\u5fc5\u987b\u8d81\u5f62\u52bf\u597d\u7684\u65f6\u5019\u505a\u51fa\u6539\u53d8\uff0c\u8fd9\u662f\u505a\u51fa\u6539\u53d8\u53ef\u80fd\u6700\u56f0\u96be\u7684\u65f6\u5019\u3002\n\u6ca1\u6709\u4eba\u4f1a\u6c38\u8fdc\u5bf9\u4e00\u5982\u65e2\u5f80\u5730\u8d2f\u5f7b\u4ed6\u4eec15\u5e74\u524d\u7684\u60f3\u6cd5\u611f\u5174\u8da3\u3002\u4e8b\u60c5\u5e76\u4e0d\u662f\u90a3\u6837\u53d1\u5c55\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u7ee7\u7eed\u66f4\u65b0\u5b83\uff0c\u5982\u679c\u4f60\u7ee7\u7eed\u8ba9\u4f60\u6700\u597d\u7684\u60f3\u6cd5\u6709\u4e00\u4e2a\u51fa\u53e3\uff0c\u4ee5\u5b83\u4eec\u7eaf\u7cb9\u7684\u5f62\u5f0f\uff0c\u4f60\u5c31\u53ef\u4ee5\u62e5\u6709\u4e00\u7247\u65b0\u7684\u7eff\u8272\u7530\u91ce\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0a\u9762\u62e5\u6709\u4f60\u7f8e\u4e3d\u7684\u5c0f\u623f\u5b50\uff0c\u4e00\u5207\u90fd\u5f88\u68d2\u3002\u6240\u4ee5\u8bf7\u91cd\u5199\u4f60\u7684\u8f6f\u4ef6\u3002\n\u57c3\u592b\u9f99\uff1a\u8fd9\u662f\u6211\u4eec\u7684\u7b7e\u540d\u201c\u65f6\u7a7a\u65c5\u884c\u201d\u95ee\u9898\uff01\u5982\u679c\u60a8\u6709\u673a\u4f1a\u56de\u5230\u60a8\u5f00\u59cb\u4eceBasecamp\u63d0\u53d6Rails\u7684\u5730\u65b9\uff0c\u60a8\u4f1a\u7ed9\u5e74\u8f7b\u65f6\u7684\u81ea\u5df1\u63d0\u4f9b\u4ec0\u4e48\u6280\u672f\u5efa\u8bae\u5462\uff1f\n\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u5730\u6b22\u8fceDavid\u57282020\u5e74\u7684RubyRussia\u5927\u4f1a\u4e0a\u53d1\u8a00\u3002\u6211\u4eec\u5728Evrone\u7684\u56e2\u961f\u4e5f\u671f\u5f85Basecamp\u7684\u7ee7\u7eed\u53d1\u5c55\uff0c\u5f53\u7136\u8fd8\u6709Ruby on rails\u3002\u6846\u67b6\u53d8\u5f97\u8d8a\u5f3a\u5927\uff0c\u6211\u4eec\u5c31\u80fd\u4e3a\u6211\u4eec\u7684\u5ba2\u6237\u548c\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u60a8\u5bf9\u67d0\u4e2a\u9879\u76ee\u6709\u60f3\u6cd5\uff0c\u5e76\u4e14\u5bf9\u4f7f\u7528Ruby on rails\u611f\u5174\u8da3\uff0c\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u603b\u662f\u5f88\u4e50\u610f\u4e0e\u60a8\u8ba8\u8bba\u5404\u79cd\u53ef\u80fd\u6027\u3002\u65e0\u8bba\u60a8\u5904\u4e8e\u9879\u76ee\u5f00\u53d1\u7684\u54ea\u4e2a\u9636\u6bb5\uff0c\u8bf7\u968f\u65f6\u7ed9\u6211\u4eec\u7559\u4e0b\u60a8\u7684\u8054\u7cfb\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u5f88\u5feb\u4e0e\u60a8\u8054\u7cfb\uff0c\u770b\u770b\u5982\u4f55\u5e2e\u52a9\u60a8\u5b9e\u73b0\u60a8\u7684\u76ee\u6807\u3002", "note_en": "David Heinemeier Hansson is the creator of Ruby on Rails, co-founder &amp; CTO of Basecamp, best-selling author, Le Mans class-winning race car driver, family man, frequent podcast guest, and inspirational conference speaker.\n Ruby on Rails was created by David in 2003. From the day Evrone was founded, in 2008, we&#39;ve been  using the Rails open-source web framework daily. It has helped us write truly beautiful code for our projects thousands of times. In addition to creating one of the most useful tools in software development, David has accomplished many other impressive feats, from writing the books &#34;It Doesn&#39;t Have To Be Crazy At Work&#34;, &#34;REWORK&#34; and &#34;REMOTE: Office Not Required&#34;, to racing in the FIA World Endurance Championship. In 2014, he came in first in his class in the 82nd running of The 24 Hours of Le Mans, the world&#39;s most prestigious sports car endurance race. He also won the WEC championship in the GTE-Am category that year.\n In 2020, we invited David to speak at RubyRussia, Evrone\u2019s 11th annual Moscow programming conference. Prior to the event, we got a chance to talk to David about the world of software development and his approach to writing phenomenal code.\n   Evrone:\u00a0Hey David, it&#39;s a pleasure to be speaking with you today. Let&#39;s start our interview. What is the best way for an average developer to decide if they need to start with a &#34;low JavaScript&#34; approach and evolve their application later, or they need to use Angular, React or Vue from the start? What decision strategy would you recommend?\n David: If you&#39;re building something that looks or tastes like a vanilla web app, like Basecamp, GitHub, Shopify, whatever, then I think minimal-JS is the way to go. It&#39;s not no JS, just minimal. If you&#39;re building something that&#39;s highly interactive, like a game, or a photo editing app, or anything that&#39;s more of the single-screen-tons-of-state variety, then looking into a full SPA makes sense.\n  Evrone: As codebase and team grow larger, what parts of the typical Rails application would you recommend to move into microservices? Given that a business wants a good code development organization, but rewriting the entire product from scratch is not an option.\n David: It&#39;s a delusion that if you weren&#39;t writing software well enough to keep you from making a mess the first time around, that you&#39;ll be any better at it the second time around. You have to learn new habits, then apply them to where you live. Sarah Mei gave a great  talk on this by at RailsConf 2018. She was speaking about how the codebase wasn&#39;t something we build anymore. A codebase is a place where we live, and our goal is to make it livable for ourselves and for all the other people who live there. When we write code, our goal isn&#39;t to finish it and move on, our goal is to make it sustainable, livable for the team that inhabits it.\n You can do all the rewrites you want, but if you don&#39;t change the little stuff that got you there in the first place, you&#39;ll just end up with a tangled network of microservices, just like you had a tangled network of class definitions in your monolith. Your code is literally an interior space, occupied by people. The important part of the software is the system. It&#39;s the code and the people together and they are inseparable. The more we can think about software as an interconnected system of code and people, the closer we&#39;ll get to a breakthrough. The closer we&#39;ll be to a revolution, to a paradigm shift. And most importantly for us, perhaps, the closer we&#39;ll be to being able to build codebases that we&#39;re excited to work in.\n Evrone: Wow, that sounds mind-blowing, and we couldn\u2019t agree more! What approach would you recommend while choosing between monkey-patching and other code composition patterns? What should we consider in order not to turn freedom patching into a mess of conflicting overrides?\n David: Freedom patches are for creating general-purpose dialects of the language. Active Support is full of freedom-patches. It&#39;s not for creating app-specific changes.\n  Evrone: You have seen lots of Ruby code for sure. In your personal opinion, what makes code good or shitty? Anything that is obvious for you at first glance?\n David:\u00a0If the code is poorly written, usually it smells before you even examine the logic. Indentation is off, styles are mixed, care is simply not shown. Beyond that, learning how to write great code, is a life long pursuit.\u00a0As I said in my RailsConf 2014 keynote, we&#39;re not software engineers, we\u2019re software writers. \u201cWriting\u201d is a much more suitable metaphor for what we do most of the time than \u201cengineering\u201d is. Writing is about clarity and presenting information in a clear-to-follow manner so that anybody can understand it.\n  There&#39;s no list of principles and practices that somebody can be taught and then they will automatically produce clear writing every time. If you want to be a good writer, it\u2019s not enough just to memorize the dictionary. Just knowing the words available to you, knowing the patterns of development is not going to make you a good developer. You have to develop an eye. You have to decide that the most important thing for your system is clarity. When you do decide that, you can start developing an eye.\n The only way to become a good programmer, where, by definition, I define good programmers as somebody who writes software with clarity, is to read a lot of software and write a lot of software.\n Evrone:\u00a0That\u2019s absolutely true. You know, usually, it&#39;s hard for non-programmers that run companies to grasp the idea of &#34;technical debt&#34;, &#34;architecture&#34; and rewriting the same app multiple times to get the better code. As both a programmer and a businessman, how would you recommend to sell these ideas to businessmen without a programming background?\n David:\u00a0I don&#39;t believe in rewriting an app for technical reasons, in almost any case. Sarah Mei&#39;s keynote illuminates why. But I do believe in rewriting when you want the application to do something fundamentally different. I spoke a lot about that in a talk at Business of Software Conference\u00a0USA.\n We&#39;ve been rewriting the code for Basecamp, not once, and\u00a0not\u00a0even twice, launching the new versions of Basecamp. For sure, it\u2019s beautiful to grow old with your customers. That has a lot of benefits, and, also, a lot of disadvantages. You have to have some sort of renewal, because things stop moving and at one point you just have a very old customer base, a very shrinking new base of customers, and \u201ca bucket\u201d. Customers move on from their job and they leave your software.\n The problem is, if you don\u2019t pour in new water, eventually there won\u2019t be any water left in the bucket. You have to make changes while things are good, which is the hardest possible time to make a change.\n Nobody\u2019s going to stay interested in working on the same exact implementation of their ideas of fifteen years ago forever. It just doesn\u2019t work out like that. But, if you continue to renew it, if you continue to let your best ideas have an outlet, in their pure form, you can have a new green field and you can have your beautiful little house on it and everything is wonderful. So please, rewrite your software.\n Evrone:\u00a0And our signature \u201ctime-travel\u201d question! If you had an opportunity to travel back in time to where you started extracting Rails from Basecamp, what one technical advice would you give to your younger self?\n    We\u2019re thrilled to welcome David to speak at  the RubyRussia conference in 2020. Our team here at Evrone is also looking forward to the continuing evolution of Basecamp, and, of course, Ruby on Rails. The more powerful the framework becomes, the better the solutions we&#39;re able to craft for our clients and partners. If you have an idea for a project and are interested in using Ruby on Rails, our developers are always happy to discuss the possibilities with you. No matter what stage you\u2019re at in your project\u2019s development, feel free to leave us your contact info, and we\u2019ll be in touch soon to see how we can help you reach your goal.", "posttime": "2020-06-22 01:56:46", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ee3\u7801,heinemeier", "title": "David Heinemeier Hansson\u89e3\u91ca\u5982\u4f55\u7f16\u5199\u4f1f\u5927\u7684\u4ee3\u7801", "title_en": " David Heinemeier Hansson Explains What It Takes to Write Great Code", "transed": 1, "url": "https://evrone.com/dhh-interview", "via": "", "real_tags": ["\u4ee3\u7801"]}]