[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1002030, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4f4d\u540c\u4e8b\u6700\u8fd1\u95ee\u6211\uff0c\u6211\u662f\u5982\u4f55\u5728\u5de5\u4f5c\u4e2d\u6210\u4e3a\u6211\u4eec\u5409\u62c9\u7684\u7ba1\u7406\u5458\u7684\u3002\n\u4ed6\u8bd5\u56fe\u6210\u4e3a\u7ba1\u7406\u5458\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u56e0\u4e3a\u4ed6\u7684\u5f88\u591a\u5de5\u4f5c\u90fd\u4e0eJira\u6709\u5173\uff0c\u4f46\u5176\u4ed6Jira\u7ba1\u7406\u5458\u4e00\u76f4\u575a\u6301\u8ba9\u4ed6\u8981\u4e48\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u521b\u5efa\u4e00\u4e2a\u66f4\u6539\u8bf7\u6c42\u5355\uff0c\u8981\u4e48\u5750\u5728\u4ed6\u4eec\u8eab\u8fb9\u4e00\u8d77\u505a\u8fd9\u9879\u5de5\u4f5c\u3002\n\u6240\u6709\u73b0\u6709\u7684\u7ba1\u7406\u5458\uff0c\u5305\u62ec\u6211\u5728\u5185\uff0c\u901a\u5e38\u90fd\u662f\u8fd9\u6837\u56de\u5e94\u7684\uff0c\u4ee5\u9632\u6b62\u51fa\u73b0\u6570\u5341\u540d\u7ba1\u7406\u5458\u800c\u6ca1\u6709\u5bf9Jira\u7ba1\u7406\u8fdb\u884c\u76d1\u7763\u7684\u60c5\u51b5\u3002\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u57df\uff0c\u5176\u4ed6\u4eba\u90fd\u5c0a\u91cd\u6211\u4eec\uff0c\u6bcf\u5f53\u6211\u4eec\u9700\u8981\u66f4\u6539\u53e6\u4e00\u4e2a\u7ba1\u7406\u57df\u6216\u5171\u4eab\u8bbe\u7f6e\u4e2d\u7684\u67d0\u4e9b\u5185\u5bb9\u65f6\uff0c\u6211\u4eec\u90fd\u8981\u786e\u4fdd\u6e05\u695a\u5730\u4f20\u8fbe\u6211\u4eec\u6b63\u5728\u66f4\u6539\u7684\u5185\u5bb9\u3002\u8fd9\u53ea\u6709\u5728\u7ba1\u7406\u5458\u4e4b\u95f4\u5b8c\u5168\u4fe1\u4efb\u5e76\u4e14\u5f7c\u6b64\u90fd\u8ba4\u8bc6\u7684\u60c5\u51b5\u4e0b\u624d\u6709\u6548\u3002\n\u90a3\u4e48\uff0c\u6211\u662f\u600e\u4e48\u8fdb\u5165\u8fd9\u4e2a\u201c\u7ba1\u7406\u96c6\u56e2\u201d\u7684\uff0c\u800c\u6211\u7684\u540c\u4e8b\u5374\u505a\u4e0d\u5230\u5462\uff1f\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u8bbe\u6cd5\u6210\u4e3a\u6211\u6240\u5173\u5fc3\u7684\u7cfb\u7edf\u7684\u7ba1\u7406\u5458\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u6211\u5f88\u65e9\u5c31\u52a0\u5165\u4e86\u516c\u53f8\uff0c\u4f46\u5176\u4ed6\u5927\u591a\u6570\u65e9\u671f\u5458\u5de5\u76ee\u524d\u90fd\u4e0d\u662f\u7ba1\u7406\u5458\u3002\u5176\u4ed6\u65e9\u671f\u7684\u5458\u5de5\u51fa\u4e8e\u5404\u79cd\u539f\u56e0\u6210\u4e3a\u7ba1\u7406\u5458\uff1a\u4ed6\u4eec\u8981\u4e48\u662f\u7cfb\u7edf\u9009\u62d4\u56e2\u961f\u7684\u4e00\u5458\uff0c\u8981\u4e48\u5728\u6211\u4eec\u5236\u5b9a\u660e\u786e\u7684\u653f\u7b56\u4e4b\u524d\u5c31\u8981\u6c42\u8fd9\u6837\u505a\uff0c\u8981\u4e48\u5728\u65e9\u671f\u6709\u4eba\u9519\u8bef\u5730\u8ba9\u4ed6\u4eec\u6210\u4e3a\u7ba1\u7406\u5458\u3002\u6700\u7ec8\uff0c\u5f53\u6211\u4eec\u5f00\u59cb\u6e05\u7406\u6211\u4eec\u4f5c\u4e3a\u4e00\u5bb6\u516c\u53f8\u7684\u884c\u4e3a\u65f6\uff0c\u5927\u591a\u6570\u4eba\u5df2\u7ecf\u5931\u53bb\u4e86\u4ed6\u4eec\u7684\u7ba1\u7406\u7279\u6743\u3002\u4ee5\u4e0b\u662f\u6211\u7684\u516b\u70b9\u8ba1\u5212\uff0c\u8981\u6210\u4e3a\u5e76\u4fdd\u6301\u60a8\u5de5\u4f5c\u4e2d\u7684\u7cfb\u7edf\u7ba1\u7406\u5458\uff1a\n\u6211\u56de\u60f3\u4e86\u4e00\u4e0b\uff0c\u7f16\u5236\u4e86\u8fd9\u4e2a\u516b\u70b9\u8ba1\u5212\uff0c\u5728\u4f60\u4eec\u7684\u5de5\u4f5c\u4e2d\u6210\u4e3a\u5e76\u4e00\u76f4\u662f\u4e00\u4e2a\u7cfb\u7edf\u7684\u7ba1\u7406\u5458\uff1a\n\u627e\u51fa\u6700\u5fd9(\u6216\u6700\u61d2)\u7684\u7ba1\u7406\u5458\u60f3\u8981\u4fee\u590d\u4f46\u4e0d\u60f3\u81ea\u5df1\u5904\u7406\u7684\u7cfb\u7edf\u6216\u5176\u914d\u7f6e\u95ee\u9898\u3002\u6ce8\u610f\uff1a\u8fd9\u4e0d\u5e94\u8be5\u662f\u4f60\u5173\u5fc3\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u4ed6\u4eec\u5173\u5fc3\u7684\u4e8b\u60c5\u3002\n\u8ba9\u7ba1\u7406\u5458\u76f8\u4fe1\u60a8\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5e76\u4e14\u60a8\u6709\u8db3\u591f\u7684\u8d23\u4efb\u611f\u3002\n\u6210\u4e3a\u4e00\u540d\u7ba1\u7406\u5458\uff01\u4f46\u662f\u8bf7\u7a0d\u7b49\uff0c\u8fd9\u662f\u6682\u65f6\u7684\uff1a\u60a8\u5c06\u5728\u4e0b\u4e00\u6b21\u6e05\u7406\u65f6\u5931\u53bb\u8bbf\u95ee\u6743\u9650\u3002\n\u5f00\u59cb\u505a\u51fa\u597d\u7684\u6539\u53d8\u6765\u89e3\u51b3\u4eba\u4eec\u7684\u62b1\u6028\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5bf9\u4e8e\u6ca1\u6709\u4e89\u8bae\u7684\u884c\u4e3a\uff0c\u6ca1\u6709\u4eba\u4f1a\u8bd5\u56fe\u64a4\u9500\u60a8\u7684\u8bbf\u95ee\u6743\u9650\u3002\u4e00\u5b9a\u8981\u8ddf\u8e2a\u90a3\u4e9b\u8981\u6c42\u53d8\u66f4\u7684\u4eba\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u77e5\u9053\u4f60\u662f\u90a3\u4e2a\u5e2e\u52a9\u4ed6\u4eec\u7684\u4eba\u3002\n\u58f0\u660e\u7ba1\u7406\u5458\u592a\u591a\uff0c\u9700\u8981\u6709\u66f4\u4e25\u683c\u7684\u7b56\u7565\u6765\u5b9a\u4e49\u8c01\u53ef\u4ee5\u6210\u4e3a\u7ba1\u7406\u5458\u3002\n\u60a8\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49(\u6216\u91cd\u65b0\u5b9a\u4e49)\u8be5\u7b56\u7565\uff0c\u5e76\u5c06\u5176\u5448\u73b0\u7ed9\u7ec4\u7ec7\u4e2d\u7684\u7cfb\u7edf\u6240\u6709\u8005\u3002\u786e\u4fdd\u60a8\u7b26\u5408\u65b0\u7684\u5b9a\u4e49\uff0c\u5e76\u786e\u4fdd\u4e3b\u8981\u7ba1\u7406\u5458\u4e5f\u5305\u62ec\u5728\u5185\u3002\u4e3b\u8981\u7ba1\u7406\u5458\u662f\u90a3\u4e9b\u5b9e\u9645\u4e0a\u4f5c\u4e3a\u7ba1\u7406\u5458\u5728\u505a\u91cd\u8981\u5de5\u4f5c\u7684\u4eba\uff0c\u6216\u8005\u5982\u679c\u4f60\u8bd5\u56fe\u628a\u4ed6\u4eec\u8d76\u51fa\u53bb\u5c31\u4f1a\u53d1\u51fa\u5f88\u5927\u566a\u97f3\u7684\u4eba\u3002\u566a\u97f3\u610f\u5473\u7740\u6df7\u4e71--\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u80fd\u6700\u7ec8\u4f1a\u88ab\u5173\u5728\u5916\u9762\u3002\n\u6ca1\u6709\u4eba\u8bb0\u5f97\u4f60\u4e3a\u4ec0\u4e48\u662f\u7ba1\u7406\u5458\uff0c\u4f46\u4f60\u73b0\u5728\u6b63\u5728\u5236\u5b9a\u89c4\u5219\uff0c\u8fd9\u6837\u5c31\u6ca1\u6709\u4eba\u4f1a\u5bf9\u6b64\u63d0\u51fa\u5f02\u8bae\u3002\u80dc\u5229\uff01\n\u786e\u4fdd\u7ee7\u7eed\u5e2e\u52a9\u4efb\u4f55\u60f3\u8981\u4fee\u590d\u7cfb\u7edf\u95ee\u9898\u7684\u4eba\u3002\u5982\u679c\u60a8\u6210\u4e3a\u8def\u969c\uff0c\u60a8\u5c06\u5141\u8bb8\u5176\u4ed6\u4eba\u6267\u884c\u6b65\u9aa41\uff0c\u5f53\u8be5\u4eba\u8fbe\u5230\u6b65\u9aa46\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u5931\u53bb\u8bbf\u95ee\u6743\u9650\u3002\n\u4f60\u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u4f60\u5728\u4e4e\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u60f3\u8981\u63a7\u5236\u3002\u5982\u679c\u4f60\u53ea\u662f\u60f3\u8981\u63a7\u5236\u6743\uff0c\u90a3\u5c31\u81ea\u5df1\u5f00\u516c\u53f8\u5427\u3002\n\u8ba9\u7cfb\u7edf\u6bd4\u60a8\u53d1\u73b0\u7684\u66f4\u597d\uff1a\u66f4\u65b9\u4fbf\u7528\u6237\u3001\u66f4\u5b89\u5168\u3001\u66f4\u6613\u4e8e\u7ef4\u62a4\u3002\n\u5728\u6d41\u7a0b\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5728\u7ba1\u7406\u5458\u4e4b\u95f4\u4ee5\u53ca\u7ba1\u7406\u5458\u548c\u7528\u6237\u4e4b\u95f4\u5efa\u7acb\u4fe1\u4efb\u3002", "note_en": "A colleague asked me recently how I got to be an admin of our Jira at work.\n He has been trying to become an admin for a while since a lot of his work is related to Jira, but the other Jira admins kept insisting that he either create a change request ticket for each and every request, or sit with them and do the work together.\n All the existing admins, including me, typically respond this way to prevent a slippery slope where there are dozens of admins and no oversight over Jira management. We each have our own domain that the others respect, and whenever we need to change something in another admin\u2019s domain or a shared setting we make sure to clearly communicate what we\u2019re changing. This only works if there\u2019s complete trust between the admins and if they all know each other.\n So, how did I manage to get into this \u201cadmin clique\u201d while my colleague isn\u2019t able to?\n Over the past few years, I\u2019ve managed to consistently become an admin of systems that I care about. Partly, this was because I joined the company early - but then most other early employees aren\u2019t currently admins. Other early employees that were admins for various reasons: they either were part of the selection team for the system, or they asked for it before we had clear policies set, or someone made them an admin by mistake in those early days. Eventually, most have lost their admin privileges when we started cleaning up our act as a company. Below is my eight-point plan to become and remain an admin of a system at your work:\n I thought back and compiled this eight-point plan to become and remain an admin of a system at your work:\n Find a problem with the system or its configuration that the busiest (or laziest) admin wants to fix but doesn\u2019t want to handle on their own. Note: this shouldn\u2019t be something that you care about, but something that  they care about.\n  Convince the admin that you can fix the problem and that you\u2019re responsible enough.\n  Become an admin! But wait, this is temporary: you\u2019ll lose your access on the next cleanup.\n  Start making good changes to fix people\u2019s complaints. Still to non-controversial actions so no one tries to revoke your access. Make sure to follow up with people who request changes so that they know you were the one who helped them.\n  Declare that there are too many admins and that there needs to be a stricter policy to define who can be an admin.\n  Take it on yourself to define (or redefine) that policy and present it to the system owner in your organization. Make sure you fit the new definition and make sure that  staple admins are also included. Staple admins are those who are either actually doing important work as admins, or people who will make a lot of noise if you try to kick them out. Noise means chaos - which means it\u2019s you who might end up on the outside.\n  No one remembers why you\u2019re admin, but you\u2019re setting the rules now so no one can dispute it. Victory!\n  Make sure to keep helping out anyone who wants to fix problems with the system. If you become a roadblocker, you will allow someone else to do step #1 and you might lose your access when that person reaches step #6.\n  You\u2019re doing this because you care, not because you want control. If you just want control, start your own company.\n  Leave the system better than you found it: more convenient for users, more secure, and easier to maintain.\n  Create trust among admins, and between admins and users, in every step of the process.", "posttime": "2020-05-14 06:35:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u793e\u4f1a,hat,\u7ba1\u7406\u5458", "title": "\u767d\u5e3d\u793e\u4f1a\u5de5\u7a0b\uff1a\u5982\u4f55\u6210\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5458", "title_en": "White hat social engineering: How to become an admin of a system", "transed": 1, "url": "https://ramon.dev/business/2020/05/11/become-an-admin.html", "via": "", "real_tags": ["\u793e\u4f1a", "hat", "\u7ba1\u7406\u5458"]}, {"category": "", "categoryclass": "", "imagename": "78711094ed64c2c8ce0c89c24817a9fc.jpg", "infoid": 1002029, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u540d\u5b89\u5168\u7814\u7a76\u4eba\u5458\u4eca\u5929\u516c\u5e03\u4e86\u6709\u5173Windows\u6253\u5370\u670d\u52a1\u4e2d\u7684\u4e00\u4e2a\u6f0f\u6d1e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ed6\u4eec\u8bf4\uff0c\u8be5\u6f0f\u6d1e\u4f1a\u5f71\u54cd\u52301996\u5e74\u53d1\u5e03\u7684Windows NT 4\u4e4b\u524d\u7684\u6240\u6709Windows\u7248\u672c\u3002\n\u8be5\u6f0f\u6d1e\u4ee3\u53f7\u4e3aPrintDemon\uff0c\u4f4d\u4e8eWindows\u6253\u5370\u5047\u8131\u673a\u7a0b\u5e8f(Windows Print Spooler)\u4e2d\uff0cWindows\u6253\u5370\u5047\u8131\u673a\u7a0b\u5e8f\u662f\u8d1f\u8d23\u7ba1\u7406\u6253\u5370\u64cd\u4f5c\u7684\u4e3b\u8981Windows\u7ec4\u4ef6\u3002\n\u8be5\u670d\u52a1\u53ef\u4ee5\u5c06\u8981\u6253\u5370\u7684\u6570\u636e\u53d1\u9001\u5230\u7269\u7406\u8fde\u63a5\u7684\u6253\u5370\u673a\u7684USB/\u5e76\u884c\u7aef\u53e3\uff0c\u6216\u8005\u53d1\u9001\u5230\u9a7b\u7559\u5728\u5c40\u57df\u7f51\u6216\u56e0\u7279\u7f51\u4e0a\u7684\u6253\u5370\u673a\u7684TCP\u7aef\u53e3\uff0c\u6216\u8005\u53d1\u9001\u5230\u672c\u5730\u6587\u4ef6\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u60f3\u8981\u4fdd\u5b58\u6253\u5370\u4f5c\u4e1a\u4ee5\u5907\u4ee5\u540e\u4f7f\u7528\u3002\n\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\uff0c\u5b89\u5168\u7814\u7a76\u4eba\u5458Alex Ionescu&amp\uff1bYarden Shafir\u8868\u793a\uff0c\u4ed6\u4eec\u5728\u8fd9\u4e2a\u65e7\u7ec4\u4ef6\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u88ab\u6ee5\u7528\u6765\u52ab\u6301\u6253\u5370\u673a\u5047\u8131\u673a\u7a0b\u5e8f\u7684\u5185\u90e8\u673a\u5236\u3002\n\u8be5\u6f0f\u6d1e\u4e0d\u80fd\u88ab\u7528\u6765\u901a\u8fc7\u4e92\u8054\u7f51\u8fdc\u7a0b\u4fb5\u5165Windows\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u53ef\u4ee5\u88ab\u5229\u7528\u6765\u5728\u4e92\u8054\u7f51\u4e0a\u968f\u673a\u653b\u51fbWindows\u7cfb\u7edf\u7684\u4e1c\u897f\u3002\nPrintDemon\u662f\u7814\u7a76\u4eba\u5458\u6240\u8bf4\u7684\u672c\u5730\u6743\u9650\u63d0\u5347(LPE)\u6f0f\u6d1e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u65e6\u653b\u51fb\u8005\u5728\u5e94\u7528\u7a0b\u5e8f\u6216Windows\u8ba1\u7b97\u673a\u4e2d\u6709\u4e86\u6700\u5fae\u5c0f\u7684\u7acb\u8db3\u70b9\uff0c\u5373\u4f7f\u62e5\u6709\u7528\u6237\u6a21\u5f0f\u7684\u6743\u9650\uff0c\u653b\u51fb\u8005\u4e5f\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u6ca1\u6709\u6743\u9650\u7684PowerShell\u547d\u4ee4\u6765\u83b7\u5f97\u5bf9\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ba1\u7406\u5458\u7ea7\u6743\u9650\u3002\nIonescu\u548cShafir\u8bf4\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6253\u5370\u5047\u8131\u673a\u670d\u52a1\u7684\u8bbe\u8ba1\u65b9\u5f0f\u662f\u5de5\u4f5c\u7684\u3002\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u9879\u670d\u52a1\uff0c\u4efb\u4f55\u60f3\u8981\u6253\u5370\u6587\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u9879\u670d\u52a1\uff0c\u6240\u4ee5\u5b83\u5bf9\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u53ef\u7528\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u521b\u5efa\u6253\u5370\u5230\u6587\u4ef6\u7684\u6253\u5370\u4f5c\u4e1a\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u6216\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u672c\u5730DLL\u6587\u4ef6\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u542f\u52a8\u6253\u5370\u64cd\u4f5c\uff0c\u6545\u610f\u4f7f\u6253\u5370\u5047\u8131\u673a\u7a0b\u5e8f\u670d\u52a1\u5d29\u6e83\uff0c\u7136\u540e\u8ba9\u4f5c\u4e1a\u6062\u590d\uff0c\u4f46\u8fd9\u4e00\u6b21\u6253\u5370\u64cd\u4f5c\u4ee5\u7cfb\u7edf\u6743\u9650\u8fd0\u884c\uff0c\u4ece\u800c\u8986\u76d6\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4efb\u4f55\u4f4d\u7f6e\u7684\u4efb\u4f55\u6587\u4ef6\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aPowerShell\u547d\u4ee4\u5229\u7528CVE-2020-1048\uff1aadd-PrinterPort-name c\uff1a\\windows\\system32\\ualapi.dll\u5728\u672a\u6253\u8865\u4e01\u7684\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u5c06\u5b89\u88c5\u4e00\u4e2a\u6c38\u4e45\u6027\u540e\u95e8\uff0c\u5373\u4f7f\u60a8\u6253\u4e86\u8865\u4e01*\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u6d88\u5931\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1https://t.co/9yMSWNM8VG\u3002\n-\u4e9a\u5386\u514b\u65af\u00b7\u7ea6\u5185\u65af\u5e93(@aionescu)2020\u5e745\u670813\u65e5\u3002\n\u5728\u4eca\u5929\u7684\u4e00\u6761\u63a8\u6587\u4e2d\uff0cIonescu\u8bf4\uff0c\u5728\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e0a\u7684\u653b\u51fb\u53ea\u9700\u8981\u4e00\u884cPowerShell\u3002\u5728\u8f83\u65e7\u7684Windows\u7248\u672c\u4e0a\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u3002\nIonescu\u8bf4\uff0c\u5728\u6ca1\u6709\u6253\u8865\u4e01\u7684\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u5c06\u5b89\u88c5\u4e00\u4e2a\u6301\u4e45\u7684\u540e\u95e8\uff0c\u5373\u4f7f\u4f60\u6253\u4e86\u8865\u4e01\uff0c\u8fd9\u4e2a\u540e\u95e8\u4e5f\u4e0d\u4f1a\u6d88\u5931\u3002\n\u597d\u6d88\u606f\u662f\uff0c\u8fd9\u4e00\u70b9\u73b0\u5728\u5df2\u7ecf\u88ab\u4fee\u8865\uff0c\u56e0\u6b64Ionescu\u548cShafir\u516c\u5f00\u62ab\u9732\u4e86\u8fd9\u4e00\u70b9\u3002PrintDemon\u7684\u4fee\u590d\u7a0b\u5e8f\u5df2\u4e8e\u6628\u5929\u53d1\u5e03\uff0c\u5fae\u8f6f\u5c06\u4e8e\u5468\u4e8c\u53d1\u5e032020\u5e745\u6708\u7684\u8865\u4e01\u7a0b\u5e8f\u3002\n\u5728CVE-2020-1048\u6807\u8bc6\u7b26\u4e0b\u8ddf\u8e2aPrintDemon\u3002\u6765\u81eaSafeBReach\u5b9e\u9a8c\u5ba4\u7684\u4e24\u540d\u5b89\u5168\u7814\u7a76\u4eba\u5458\u4e5f\u72ec\u7acb\u62a5\u544a\u4e86\u540c\u6837\u7684\u95ee\u9898\u3002\nIonescu\u8fd8\u5728GitHub\u4e0a\u53d1\u5e03\u4e86\u6982\u5ff5\u9a8c\u8bc1\u4ee3\u7801\uff0c\u76ee\u7684\u662f\u5e2e\u52a9\u5b89\u5168\u7814\u7a76\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u8c03\u67e5\u6f0f\u6d1e\uff0c\u51c6\u5907\u7f13\u89e3\u548c\u68c0\u6d4b\u80fd\u529b\u3002\n\u5bf9\u4e8e\u5a01\u80c1\u730e\u4eba\uff1a\u4f7f\u7528PowerShell\u4e2d\u7684Get-PrinterPorts\u626b\u63cf\u4efb\u4f55\u57fa\u4e8e\u6587\u4ef6\u7684\u7aef\u53e3\uff0c\u6216\u8f6c\u50a8HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Ports\u3002\u5e94\u8be5\u8c03\u67e5\u5176\u4e2d\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u4efb\u4f55\u7aef\u53e3\uff0c\u7279\u522b\u662f\u4ee5DLL\u6216EXE\u7ed3\u5c3e\u7684\u7aef\u53e3\u3002https://t.co/wYZn296Gwm\u3002\n-\u5170\u8fea\u00b7\u5e15\u683c\u66fc(@rpargman)2020\u5e745\u670813\u65e5\u3002\n\u4e0a\u4e2a\u6708\uff0cIonescu\u548cShafir\u4e5f\u53d1\u5e03\u4e86\u7c7b\u4f3c\u6f0f\u6d1e\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u6982\u5ff5\u9a8c\u8bc1\u4ee3\u7801\uff0c\u4ed6\u4eec\u5c06\u5176\u547d\u540d\u4e3aFaxHell\u3002\nFaxHell\u7684\u5de5\u4f5c\u539f\u7406\u4e0ePrintDemon\u7c7b\u4f3c\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u5229\u7528Windows\u4f20\u771f\u670d\u52a1\u8986\u76d6\u5e76\u52ab\u6301\u672c\u5730(DLL)\u6587\u4ef6\uff0c\u4ece\u800c\u5728Windows\u7cfb\u7edf\u4e0a\u5b89\u88c5\u5916\u58f3\u548c\u540e\u95e8\u3002", "note_en": "Two security researchers have published today details about a vulnerability in the Windows printing service that they say impacts all Windows versions going back to Windows NT 4, released in 1996.\n The vulnerability, which they codenamed  PrintDemon, is located in  Windows Print Spooler, the primary Windows component responsible for managing print operations.\n The service can send data to be printed to a USB/parallel port for physically connected printers; to a TCP port for printers residing on a local network or the internet; or to a local file, in the rare event the user wants to save a print job for later.\n  In a report published today, security researchers Alex Ionescu &amp; Yarden Shafir said they found a bug in this old component that can be abused to hijack the Printer Spooler internal mechanism.\n The bug can&#39;t be used to break into a Windows client remotely over the internet, so it&#39;s not something that could be exploited to hack Windows systems at random over the internet.\n   PrintDemon is what researchers call a &#34;local privilege escalation&#34; (LPE) vulnerability. This means that once an attacker has even the tiniest foothold inside an app or a Windows machine, even with user-mode privileges, the attacker can run something as simple as one unprivileged PowerShell command to gain administrator-level privileges over the entire OS.\n This is possible because of how the Print Spooler service was designed to work, Ionescu and Shafir said.\n   Because this is a service meant to be available to any app that wants to print a file, it is available to all apps running on a system, without restrictions. The attacker can create a print job that prints to a file -- for example a local DLL file used by the OS or another app.\n The attacker can initiate the print operation, crash the Print Spooler service intentionally, and then let the job resume, but this time the printing operation runs with SYSTEM privileges, allowing it to overwrite any files anywhere on the OS.\n Attackers can exploit CVE-2020-1048 with a single PowerShell command:  Add-PrinterPort -Name c:\\windows\\system32\\ualapi.dll  On an unpatched system, this will install a persistent backdoor, that won&#39;t go away *even after you patch*.  See  https://t.co/9yMSWNM8VG for more details.\n\u2014 Alex Ionescu (@aionescu)  May 13, 2020\n In a tweet today, Ionescu said exploitation on current OS versions requires one single line of PowerShell. On older Windows versions, this might need some tweaking.\n &#34;On an unpatched system, this will install a persistent backdoor, that won&#39;t go away *even after you patch*,&#34; Ionescu said.\n  The good news is that this has now been patched, hence Ionescu and Shafir&#39;s public disclosure. Fixes for PrintDemon have been released yesterday, with the  Microsoft May 2020 Patch Tuesday.\n PrintDemon is tracked under the  CVE-2020-1048 identifier. Two security researchers from SafeBreach Labs also independently reported the same issue.\n Ionescu has also  published proof-of-concept code on GitHub with the purpose of aiding security researchers and system administrators investigate the vulnerability and prepare mitigations and detection capabilities.\n For threat hunters: Scan for any file-based ports with either Get-PrinterPorts in PowerShell, or dump HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Ports. Any ports that have a file path in them especially ending in DLL or EXE should be investigated.  https://t.co/wYZn296Gwm\n\u2014 Randy Pargman (@rpargman)  May 13, 2020\n Last month, Ionescu and Shafir have also  published details and  proof-of-concept code for a similar vulnerability that they named FaxHell.\n FaxHell works similarly to PrintDemon, but the researchers exploited the Windows Fax service to overwrite and hijack local (DLL) files to install shells and backdoors on Windows systems.", "posttime": "2020-05-14 06:21:03", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6f0f\u6d1e,windows,vulnerability", "title": "PrintDemon\u6f0f\u6d1e\u5f71\u54cd\u6240\u6709Windows\u7248\u672c", "title_en": "PrintDemon Vulnerability Impacts All Windows Versions", "transed": 1, "url": "https://www.zdnet.com/article/printdemon-vulnerability-impacts-all-windows-versions/", "via": "", "real_tags": ["\u6f0f\u6d1e", "windows"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LWN\u8ba2\u6237\u5df2\u5411\u60a8\u63d0\u4f9b\u4ee5\u4e0b\u4ec5\u9650\u8ba2\u9605\u7684\u5185\u5bb9\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u7528\u6237\u4f9d\u8d56LWN\u83b7\u53d6\u6765\u81eaLinux\u548c\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u7684\u6700\u597d\u6d88\u606f\u3002\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u8bf7\u8003\u8651\u63a5\u53d7\u53f3\u8fb9\u7684\u8bd5\u7528\u62a5\u4ef7\u3002\u611f\u8c22\u60a8\u8bbf\u95eeLWN.net\uff01\n\u514d\u8d39\u8bd5\u7528LWN 1\u4e2a\u6708\uff1a\u65e0\u9700\u4ed8\u6b3e\u6216\u4fe1\u7528\u5361\u3002\u73b0\u5728\u6fc0\u6d3b\u60a8\u7684\u8bd5\u7528\u8ba2\u9605\uff0c\u770b\u770b\u4e3a\u4ec0\u4e48\u6210\u5343\u4e0a\u4e07\u7684\u8bfb\u8005\u8ba2\u9605LWN.net\u3002\n\u4e00\u4e2a\u5728Python\u4e16\u754c\u4e2d\u6d41\u4f20\u591a\u5e74\u7684\u9879\u76ee\u73b0\u5728\u6b63\u5728\u52aa\u529b\u5c06\u5176\u7eb3\u5165\u8bed\u8a00\u4e2d-\u6216\u8005\u4e0d\u5305\u62ec\u5728\u5185\u3002\u5b50\u89e3\u91ca\u5668\u662f\u72ec\u7acb\u7684Python\u89e3\u91ca\u5668\uff0c\u76ee\u524d\u662f\u901a\u8fc7\u6269\u5c55\u7684C API\u521b\u5efa\u7684\uff0c\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e3a\u4e86\u83b7\u5f97\u4e00\u4e2a\u66f4\u7c7b\u4f3c\u4e8eGo\u7684Python\u5e76\u53d1\u6a21\u578b\u3002\u8fc8\u5411\u8be5\u76ee\u6807\u7684\u7b2c\u4e00\u6b65\u662f\u5728\u6807\u51c6\u5e93\u4e2d\u516c\u5f00\u8be5API\u3002\u4f46\u662f\uff0c\u5b50\u89e3\u91ca\u5668\u662f\u5426\u771f\u7684\u662fPython\u6240\u9700\u8981\u7684\u7279\u6027\uff0c\u4ee5\u53ca\u6240\u5e0c\u671b\u7684\u5e76\u53d1\u6539\u8fdb\u662f\u5426\u4f1a\u5b9e\u73b0\uff0c\u90fd\u5b58\u5728\u7591\u95ee\u3002", "note_en": "The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider accepting the trial offer on the right. Thank youfor visiting LWN.net!\n Try LWN for free for 1 month: no payment or credit card required.  Activate your trial subscription now and see why thousands of readers subscribe to LWN.net.\n A project that has been floating around in the Python world for a number ofyears is now working its way toward inclusion into the language\u2014or not.&#34;Subinterpreters&#34;, which are separate Python interpreters that cancurrently be created via the C API for extensions, are seen by some as away to get a more Go-like concurrency model for Python. The first steptoward that goal is to expose that API in the standard library. But thereare questions about whether subinterpreters are actually a desirablefeature for Python at all, as well as whether the hoped-for concurrencyimprovements will materialize.", "posttime": "2020-05-14 06:20:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,subinterpreters,lwn", "title": "Python\u7684\u5b50\u89e3\u91ca\u5668", "title_en": "Subinterpreters for Python", "transed": 1, "url": "https://lwn.net/SubscriberLink/820424/172e6da006687167/", "via": "", "real_tags": ["python", "lwn"]}, {"category": "", "categoryclass": "", "imagename": "c3043abdaa4f4cef42c359d840f47c7f.png", "infoid": 1002026, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u516c\u53f8\u3002\u4eca\u5929\u53d1\u5e03\u4e86Kubernetes\u4e91\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u7b80\u79f0cdk8s\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u65e8\u5728\u8ba9Kubernetes\u96c6\u7fa4\u66f4\u6613\u4e8e\u6784\u5efa\u548c\u7ef4\u62a4\u3002\nKubernetes\u5df2\u7ecf\u6210\u4e3a\u4f01\u4e1a\u4e2d\u7ba1\u7406\u8f6f\u4ef6\u5bb9\u5668\u7684\u9996\u9009\u6846\u67b6\u3002\u5b83\u5141\u8bb8\u5de5\u7a0b\u5e08\u901a\u8fc7\u7528\u76f8\u5bf9\u7b80\u5355\u7684YAML\u6570\u636e\u5e8f\u5217\u5316\u8bed\u8a00\u5b9a\u4e49\u914d\u7f6e\u548c\u7ec6\u8282\u6765\u7ec4\u6210\u5bb9\u5668\u96c6\u7fa4\u3002\n\u4f46\u662f\uff0cYAML\u867d\u7136\u662f\u914d\u7f6e\u4efb\u52a1\u7684\u6d41\u884c\u9009\u62e9\uff0c\u4f46\u5b83\u7f3a\u4e4fPython\u7b49\u7f16\u7a0b\u8bed\u8a00\u7684\u5927\u90e8\u5206\u9ad8\u7ea7\u529f\u80fd\uff0c\u8fd9\u4f7f\u5f97\u5927\u89c4\u6a21\u7684Kubernetes\u96c6\u7fa4\u96be\u4ee5\u7ba1\u7406\u3002\u8fd9\u5c31\u662fcdk8s\u65e8\u5728\u89e3\u51b3\u7684\u6311\u6218\u3002\nAWS\u5de5\u7a0b\u5e08Elad Ben-Israel\u548cNathan Taber\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u89e3\u91ca\u9053\uff1a\u201cYAML\u662f\u63cf\u8ff0\u96c6\u7fa4\u6240\u9700\u72b6\u6001\u7684\u4f18\u79c0\u683c\u5f0f\uff0c\u4f46\u5b83\u6ca1\u6709\u7528\u4e8e\u8868\u8fbe\u903b\u8f91\u548c\u53ef\u91cd\u7528\u62bd\u8c61\u7684\u539f\u8bed\u3002\u201d\nAWS\u7684cdk8s\u5de5\u5177\u5305\u901a\u8fc7\u4f7f\u7528\u6d41\u884c\u7684TypeScript\u3001Python\u3001Java\u548c.NET\u7f16\u7a0b\u8bed\u8a00\u6765\u5904\u7406\u6846\u67b6\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4f7f\u7528\u8fd9\u4e9b\u8bed\u8a00\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u5de5\u7a0b\u5e08\u53ef\u4ee5\u7f16\u5199\u6bd4YAML\u652f\u6301\u7684\u66f4\u590d\u6742\u7684\u914d\u7f6e\u903b\u8f91\u6765\u81ea\u52a8\u6267\u884c\u624b\u52a8\u4efb\u52a1\u3002\u8fd9\u51cf\u5c11\u4e86\u9700\u8981\u7f16\u5199\u7684\u6837\u677f\u4ee3\u7801\u7684\u6570\u91cf\uff0c\u5bf9\u4e8e\u6709\u9ad8\u7ea7\u9700\u6c42\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u4e86\u5728Kubernetes\u4e4b\u4e0a\u521b\u5efa\u591a\u5c42\u8f6f\u4ef6\u903b\u8f91\u4ee5\u62bd\u8c61\u5176\u590d\u6742\u6027\u7684\u80fd\u529b\u3002\n\u672c-\u4f0a\u65af\u96f7\u5c14\u548c\u6cf0\u4f2f\u5199\u9053\uff1a\u201c\u66f4\u9ad8\u5c42\u53ef\u4ee5\u62bd\u8c61API\u7684\u590d\u6742\u6027(\u4f8b\u5982\uff0c\u901a\u8fc7\u63d0\u4f9b\u667a\u80fd\u9ed8\u8ba4\u503c)\uff0c\u6216\u8005\u5b83\u4eec\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e9b\u56fa\u6267\u5df1\u89c1\u7684\u60f3\u6cd5\uff0c\u5c06\u4e3b\u8981\u7ec6\u8282\u62bd\u8c61\u51fa\u6765\uff0c\u4ee5\u652f\u6301\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5fc3\u7406\u6a21\u578b\uff0c\u201d\u672c-\u4f0a\u65af\u96f7\u5c14\u548c\u6cf0\u4f2f\u5199\u9053\u3002\n\u4f7f\u7528\u7f16\u7a0b\u8bed\u8a00\u800c\u4e0d\u662fYAML\u8fd8\u5141\u8bb8\u5de5\u7a0b\u5e08\u521b\u5efaKubernetes\u914d\u7f6e\u6587\u4ef6\uff0c\u5229\u7528\u4e0e\u4ed6\u4eec\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u65f6\u4f7f\u7528\u7684\u5de5\u5177\u76f8\u540c\u7684\u5de5\u5177\u3002\u5728\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u5177\u6709\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002\u7136\u540e\uff0c\u4e00\u65e6\u5230\u4e86\u90e8\u7f72\u914d\u7f6e\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u56e2\u961f\u73b0\u6709\u7684\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u4ea4\u4ed8\u5de5\u5177\uff0c\u800c\u4e0d\u5fc5\u4f9d\u8d56\u5355\u72ec\u7684YAML\u5de5\u4f5c\u6d41\u3002\n\u5728\u5e55\u540e\uff0ccdk8S\u901a\u8fc7\u81ea\u52a8\u5c06\u4ee3\u7801\u8f6c\u6362\u4e3aYAML\u8bed\u6cd5\u6765\u5de5\u4f5c\u3002Ben-Israel\u548cTaber\u8bf4\uff0cAWS\u6b63\u5728\u63a2\u7d22\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u589e\u52a0\u5c06YAML\u6587\u4ef6\u53cd\u6c47\u7f16\u6210\u4ee3\u7801\u7684\u80fd\u529b\u7684\u53ef\u80fd\u6027\u3002\u8fd9\u5bb6\u4e91\u5de8\u5934\u8fd8\u5728\u52aa\u529b\u589e\u52a0\u5bf9\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u548c\u66f4\u591a\u529f\u80fd\u7684\u652f\u6301\uff0c\u4ee5\u7b80\u5316Kubernetes\u7684\u7ba1\u7406\u548c\u4efb\u52a1\u3002\nAWS\u4eca\u5929\u53d1\u5e03\u4e86cdk8\u548c\u65b0\u7248CloudTrail\uff0cCloudTrail\u662f\u5176\u7528\u4e8e\u76d1\u63a7\u548c\u5ba1\u8ba1\u4f01\u4e1aAWS\u8d26\u6237\u7684\u4ea7\u54c1\u3002\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u5ba1\u8ba1\u8ddf\u8e2a\u7684\u201c\u4e00\u6b65\u5feb\u901f\u521b\u5efa\u8fc7\u7a0b\u201d\uff0c\u5916\u52a0\u4e00\u4e2a\u65b0\u7684\u914d\u7f6e\u5411\u5bfc\uff0c\u5141\u8bb8\u7ba1\u7406\u5458\u81ea\u5b9a\u4e49\u5173\u952e\u8bbe\u7f6e\u3002\n\u901a\u8fc7\u4e00\u952e\u8ba2\u9605\u6211\u4eec\u7684YouTube\u9891\u9053(\u5982\u4e0b\u6240\u793a)\uff0c\u663e\u793a\u60a8\u5bf9\u6211\u4eec\u4f7f\u547d\u7684\u652f\u6301\u3002\u6211\u4eec\u7684\u8ba2\u9605\u7528\u6237\u8d8a\u591a\uff0cYouTube\u5411\u60a8\u63a8\u8350\u7684\u76f8\u5173\u4f01\u4e1a\u548c\u65b0\u5174\u6280\u672f\u5185\u5bb9\u5c31\u8d8a\u591a\u3002\u8c22\u8c22!\u3002\n\u2026\u3002\u6211\u4eec\u8fd8\u60f3\u544a\u8bc9\u60a8\u6211\u4eec\u7684\u4f7f\u547d\uff0c\u4ee5\u53ca\u60a8\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u5b83\u3002SiliconANGLE Media Inc.\u7684\u5546\u4e1a\u6a21\u5f0f\u662f\u57fa\u4e8e\u5185\u5bb9\u7684\u5185\u5728\u4ef7\u503c\uff0c\u800c\u4e0d\u662f\u5e7f\u544a\u3002\u4e0e\u8bb8\u591a\u5728\u7ebf\u51fa\u7248\u7269\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u4ed8\u8d39\u5899\u6216\u6295\u653e\u6a2a\u5e45\u5e7f\u544a\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u6211\u4eec\u7684\u65b0\u95fb\u4fdd\u6301\u5f00\u653e\uff0c\u4e0d\u53d7\u5f71\u54cd\uff0c\u4e5f\u4e0d\u9700\u8981\u8ffd\u9010\u6d41\u91cf\u3002\u5173\u4e8eSiliconANGLE\u7684\u65b0\u95fb\u3001\u62a5\u9053\u548c\u8bc4\u8bba-\u4ee5\u53ca\u6211\u4eec\u7684\u7845\u8c37\u6f14\u64ad\u5ba4\u548cCUBE\u7684\u5168\u7403\u5de1\u56de\u89c6\u9891\u56e2\u961f\u63d0\u4f9b\u7684\u73b0\u573a\u65e0\u811a\u672c\u89c6\u9891-\u9700\u8981\u5927\u91cf\u7684\u8f9b\u52e4\u5de5\u4f5c\u3001\u65f6\u95f4\u548c\u91d1\u94b1\u3002\u8981\u4fdd\u6301\u9ad8\u8d28\u91cf\uff0c\u9700\u8981\u8d5e\u52a9\u5546\u7684\u652f\u6301\uff0c\u8fd9\u4e9b\u8d5e\u52a9\u5546\u4e0e\u6211\u4eec\u5bf9\u65e0\u5e7f\u544a\u65b0\u95fb\u5185\u5bb9\u7684\u613f\u666f\u4fdd\u6301\u4e00\u81f4\u3002\n\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u91cc\u7684\u62a5\u9053\u3001\u89c6\u9891\u91c7\u8bbf\u7b49\u65e0\u5e7f\u544a\u5185\u5bb9\uff0c\u8bf7\u82b1\u70b9\u65f6\u95f4\u67e5\u770b\u4e00\u4e0b\u6211\u4eec\u8d5e\u52a9\u5546\u652f\u6301\u7684\u89c6\u9891\u5185\u5bb9\u6837\u672c\uff0c\u53d1\u63a8\u7279\u8868\u793a\u652f\u6301\uff0c\u5e76\u4e0d\u65ad\u56de\u5230SiliconANGLE\u3002", "note_en": "Amazon Web Services Inc. today launched Cloud Development Kit for Kubernetes, or   cdk8s , an open-source development toolkit designed to make Kubernetes clusters easier to build and maintain.\n Kubernetes has emerged as the go-to framework for managing software containers in the enterprise. It allows engineers to compose container clusters by defining\u00a0configuration\u00a0details in the relatively simple YAML data serialization language.\n But YAML, while a popular choice for configuration tasks, lacks most of the advanced features of programming languages such as Python, which makes large-scale Kubernetes clusters difficult to manage. That\u2019s the challenge cdk8s is aimed at addressing.\n \u201cYAML is an excellent format for describing the desired state of your cluster, but it does not have primitives for expressing logic and reusable abstractions,\u201d AWS engineers Elad Ben-Israel and Nathan Taber explained in a   blog post .\n AWS\u2019 cdk8s toolkit tackles the issue by making it possible to work with framework using the popular TypeScript, Python, Java, and .NET programming languages. Using the languages\u2019 advanced features, engineers can write more sophisticated configuration logic than what YAML supports to automate manual tasks. That reduces the amount of\u00a0boilerplate code that needs to be written and, for companies with advanced needs, provides the ability to\u00a0create multiple \u201clayers\u201d of software logic on top of\u00a0Kubernetes to abstract its complexity.\n \u201cHigher layers can abstract the complexity of the API (by providing smart defaults for example) or they can represent opinionated ideas that abstract away major details in favor of a simpler mental model,\u201d Ben-Israel and Taber wrote.\n Using a programming language instead of YAML also allows engineers to create Kubernetes configuration files leveraging the same tools with which they build their applications. When writing code, they can use an integrated development environment with auto-completion features. Then, once it\u2019s time to deploy a configuration file, they can use their team\u2019s existing continuous integration and continuous delivery tools instead of having to rely on a separate YAML workflow.\n Under the hood, cdk8s works by automatically converting code into YAML syntax. Ben-Israel and Taber said that AWS is exploring the possibility of adding the ability to disassemble YAML files back into code with future releases. The cloud giant is also working to add support for additional programming languages and more features to streamline Kubernetes management\u00a0tasks.\n AWS launched cdk8s today alongside a  new version CloudTrail, its product for monitoring and auditing enterprise AWS accounts. There\u2019s a now a \u201cone-step quick create process\u201d for creating audit trails\u00a0plus a new\u00a0 configuration wizard that allows administrators to customize key settings.\n  Show your support for our mission with our one-click subscription to our YouTube channel (below). The more subscribers we have, the more YouTube will suggest relevant enterprise and emerging technology content to you. Thanks!\n  \u2026 We\u2019d also like to tell you about our mission and how you can help us fulfill it. SiliconANGLE Media Inc.\u2019s business model is based on the intrinsic value of the content, not advertising. Unlike many online publications, we don\u2019t have a paywall or run banner advertising, because we want to keep our journalism open, without influence or the need to chase traffic. The journalism, reporting and commentary on\u00a0 SiliconANGLE\u00a0\u2014 along with live, unscripted video from our Silicon Valley studio and globe-trotting video teams at\u00a0  theCUBE\u00a0\u2014 take a lot of hard work, time and money. Keeping the quality high requires the support of sponsors who are aligned with our vision of ad-free journalism content.\n If you like the reporting, video interviews and other ad-free content here,\u00a0please take a moment to check out a sample of the video content supported by our sponsors,\u00a0  tweet your support, and keep coming back to\u00a0  SiliconANGLE.", "posttime": "2020-05-14 06:18:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u5f00\u53d1,open,yaml", "title": "AWS\u5f00\u6e90\u4e91\u5f00\u53d1\u5de5\u5177\u5305\u8ba9Kubernetes\u66f4\u6613\u4e8e\u4f7f\u7528", "title_en": "AWS open sources cloud development kit to make Kubernetes easier to use", "transed": 1, "url": "https://siliconangle.com/2020/05/13/aws-open-sources-cdk8s-make-kubernetes-easier-use/", "via": "", "real_tags": ["\u5f00\u6e90", "\u5f00\u53d1", "open", "yaml"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002025, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u535a\u5ba2\u662f\u4f7f\u7528Hugo\u751f\u6210\u7684\u3002\u6211\u6b63\u5728\u91cd\u5efa\u7684\u4e00\u4e2a\u6587\u6863\u7f51\u7ad9\u4e5f\u662f\u7528\u96e8\u679c\u5236\u4f5c\u7684\u3002\u8fd9\u4e24\u4e2a\u9879\u76ee\u8ba9\u6211\u6709\u673a\u4f1a\u4e86\u89e3\u8fd9\u4e2a\u5de5\u5177\uff0c\u65f6\u800c\u6b23\u8d4f\u5b83\uff0c\u65f6\u800c\u8bc5\u5492\u5b83\u3002\n\u6211\u7684\u4e00\u4e9b\u62b1\u6028\u662f\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u56fa\u6709\u7684\uff0c\u5176\u4ed6\u7684\u5219\u662f\u9488\u5bf9Hugo\u7684\u3002\n\u5728\u5176\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u4e2d\uff0c\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u83b7\u53d6\u4e00\u4e2a\u5145\u6ee1\u6807\u8bb0\u6587\u4ef6\u7684\u76ee\u5f55\u6811\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u7ed3\u6784\u76f8\u540c\u7684\u5145\u6ee1HTML\u6587\u4ef6\u7684\u76ee\u5f55\u6811\u3002\n\u9884\u8ba1\u76ee\u5f55\u7684\u5f62\u72b6\u5c06\u5f71\u54cd\u751f\u6210\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\nHugo\u79ef\u7d2f\u4e86\u5982\u6b64\u591a\u7684\u529f\u80fd\uff0c\u4ee5\u81f3\u4e8e\u4e0a\u9762\u63cf\u8ff0\u7684\u7b80\u5355\u6a21\u578b\u5df2\u7ecf\u6210\u500d\u589e\u957f\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u518d\u5bb9\u6613\u5730\u77e5\u9053\u6587\u4ef6\u5177\u6709\u4ec0\u4e48\u6548\u679c\uff0c\u6216\u8005\u4e3a\u4ec0\u4e48\u67d0\u4e9b\u6587\u4ef6\u6ca1\u6709\u60a8\u8ba4\u4e3a\u5e94\u8be5\u5177\u6709\u7684\u6548\u679c\u3002\n\u8bf7\u770b\u4e00\u4e0b\u6a21\u677f\u67e5\u627e\u987a\u5e8f\u201c\u5e2e\u52a9\u9875\u9762\u201d\u3002\u96e8\u679c\u5728\u8fd9\u91cc\u505a\u4e86\u5f88\u591a\u4e8b\u60c5\uff0c\u5b83\u7684\u591a\u8bed\u8a00\u80fd\u529b\uff0c\u5b83\u7684\u5206\u7c7b\u6cd5\uff0c\u7b49\u7b49\u2026\u3002\u4f46\u4ece\u793a\u4f8b\u7684\u6570\u91cf\u548c\u53ef\u80fd\u7684\u67e5\u627e\u4f4d\u7f6e\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e9b\u529f\u80fd\u662f\u4ee5\u590d\u6742\u6027\u4e3a\u4ee3\u4ef7\u7684\u3002\n\u6211\u8ba4\u4e3a\u6587\u4ef6\u7cfb\u7edf\u4e0d\u662f\u63cf\u8ff0\u5e16\u5b50\u3001\u8bed\u8a00\u3001\u6a21\u677f\u548c\u8f93\u51fa\u683c\u5f0f\u4e4b\u95f4\u590d\u6742\u5173\u7cfb\u7684\u5408\u9002\u5de5\u5177\u3002\u592a\u5bb9\u6613\u8ff7\u8def\u4e86\u3002\n\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u660e\u767d_index.md\u548cindex.md\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u5e16\u5b50\u5217\u8868\uff0c\u53e6\u4e00\u4e2a\u662f\u9875\u9762\u5305\u4e2d\u7684\u5e16\u5b50\u672c\u8eab\u3002\u6216\u8005\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\u6211\u7528\u9519\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u9519\u8bef\uff0c\u4f46\u6211\u7684\u76ee\u5f55\u4f3c\u4e4e\u4e0d\u8d77\u4f5c\u7528\u3002\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6211\u5728\u4f7f\u7528\u8be5\u5de5\u5177\u65f6\u9047\u5230\u4e86\u8bb8\u591a\u7c7b\u4f3c\u7684\u5fae\u5999\u884c\u4e3a\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6709\u4e0d\u540c\u7684\u201c\u79cd\u7c7b\u201d\u7684\u9875\u9762\u548c\u4e0d\u540c\u7684\u201c\u7c7b\u578b\u201d\u7684\u9875\u9762\uff0c\u5e76\u4e14\u5b83\u5f71\u54cd\u9875\u9762\u662f\u5426\u663e\u793a\u5728\u9875\u9762\u96c6\u5408\u4e2d\u7b49\u7b49\u3002(\u522b\u8ba9\u6211\u89e3\u91ca\uff0c\u6211\u4e0d\u80fd\u89e3\u91ca\u3002)\u3002\u5173\u952e\u662f\u6709\u5f88\u591a\u6982\u5ff5\uff0c\u8fd9\u4e9b\u6982\u5ff5\u5e76\u4e0d\u90fd\u76f4\u89c2\u5730\u5de5\u4f5c\uff0c\u5de5\u5177\u884c\u4e3a\u65b9\u5f0f\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u6587\u4ef6\u540d\u4e2d\u7684\u5355\u4e2a\u4e0b\u5212\u7ebf\u3002\n\u6211\u9047\u5230\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u60f3\u5728\u77ed\u4ee3\u7801\u4e2d\u5448\u73b0\u5185\u5bb9\u4e2d\u7684\u6807\u8bb0\u3002\u5728\u8fd9\u91cc\uff0c\u4e00\u4e2a\u5c0f\u89d2\u8272\u53c8\u4e00\u6b21\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u4e0d\u540c\u3002\u6b64{{&lt\uff1b\u77ed\u7801&gt\uff1b}}\u4e0e{{%\u77ed\u7801%}}\u4e0d\u540c\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u79cd\u884c\u4e3a\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u9020\u6210\u4e86\u6df7\u4e71\uff0c\u4f60\u731c\u600e\u4e48\u7740\uff1f\u867d\u7136\u6211\u770b\u4e86\u6587\u6863\uff0c\u4f46\u6211\u7684\u7f51\u7ad9\u4e0a\u7684\u884c\u4e3a\u4e0e\u6587\u6863\u6240\u6697\u793a\u7684\u76f8\u53cd\u3002\n\u5f53\u7136\u90fd\u662f\u6211\u7684\u9519\u3002\u4e00\u5207\u90fd\u6709\u8bb0\u5f55\u5728\u6848\u3002\u95ee\u9898\u662f\uff0c\u6587\u6863\u7684\u8fd0\u884c\u65f6\u95f4\u6bd4\u5178\u578b\u7684\u201c\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u201d\u5377\u8981\u957f\u3002\u6211\u5b9e\u9645\u4e0a\u8fd8\u6ca1\u6709\u7edf\u8ba1\u8fc7\u5b57\u6570\uff0c\u4f46\u4f3c\u4e4e\u6709\u5f88\u591a\u4e1c\u897f\u6bd4\u6211\u5e94\u8be5\u7ecf\u5386\u7684\u8981\u591a\u5f97\u591a\uff0c\u624d\u80fd\u5448\u73b0\u4e00\u4e2a\u535a\u5ba2\u6216\u4e00\u4e9b\u6587\u6863\u7f51\u7ad9\u3002\u201c\u5185\u5bb9\u7ba1\u7406\u201d\u4e00\u8282\u670924\u9875\uff0c\u6bcf\u4e2a\u9875\u9762\u90fd\u5f15\u5165\u4e86\u65b0\u6982\u5ff5\u548c\u65b0\u6807\u5fd7\uff0c\u4ee5\u4fbf\u5728\u60a8\u7684\u914d\u7f6e\u4e2d\u8fdb\u884c\u8c03\u6574\u3002\n\u4f60\u53ef\u80fd\u4f1a\u8bf4\u201c\u5b83\u5f88\u5f3a\u5927\uff0c\u8981\u9760\u4f60\u6765\u5b66\u4e60\u201d\u3002\u6211\u4e0d\u4f1a\u4e89\u8fa9\u8bf4\u5b83\u4e0d\u5f3a\u5927\uff0c\u4f46\u662f\u5982\u679c\u5b83\u4f9d\u8d56\u4e8e\u4e0b\u5212\u7ebf\u4ee5\u5916\u7684\u5176\u4ed6\u4e1c\u897f\u6765\u8868\u793a\u6587\u4ef6\u7684\u67d0\u4e9b\u5185\u5bb9\uff0c\u90a3\u4e48\u4f7f\u7528\u8fd9\u79cd\u5f3a\u5927\u7684\u4e1c\u897f\u53ef\u80fd\u4f1a\u66f4\u660e\u667a\u3002\u6587\u4ef6\u6811\u771f\u7684\u662f\u7528\u6237\u5b9e\u73b0\u5176\u76ee\u6807\u7684\u6700\u4f73\u62bd\u8c61\u5417\uff1f\n\u6211\u7406\u89e3\u5728\u6587\u4ef6\u6811\u4e2d\u4f7f\u7528\u6587\u672c\u6587\u4ef6\u7684\u597d\u5904\uff1a\u53ef\u4ee5\u4ece\u7528\u6237\u6700\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\u5904\u7406\u8fd9\u4e9b\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u5176\u5168\u90e8\u7b7e\u5165\u5230\u7248\u672c\u63a7\u5236\u4e2d\u3002\u5f88\u597d\u3002\n\u95ee\u9898\u662f\u6587\u672c\u7f16\u8f91\u5668\u7684\u5de5\u5177\u5f88\u5f31\u3002\u5982\u679c\u6709\u4e1c\u897f\u662f\u5982\u6b64\u590d\u6742\u548c\u5f3a\u5927\uff0c\u5e76\u4e14\u6253\u7b97\u88ab\u89c6\u4e3a\u201c\u4ee3\u7801\u201d\uff0c\u90a3\u4e48\u6211\u7684\u671f\u671b\u5c31\u4f1a\u76f8\u5e94\u5730\u589e\u52a0\uff1a\u5b9e\u65f6\u9519\u8bef\u62a5\u544a\u5728\u54ea\u91cc\uff1f\u201c\u8c03\u8bd5\u5668\u201d\u5728\u54ea\u91cc\uff1f\u81ea\u52a8\u5b8c\u6210\uff1f\n\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u201crelref&#34\uff1b\u201d\u521b\u5efa\u6307\u5411\u7ad9\u70b9\u5185\u9875\u9762\u7684\u94fe\u63a5\u3002\u6700\u9177\u7684\u662f\uff0c\u5982\u679c\u4f60\u5728\u94fe\u63a5\u4e2d\u653e\u4e86\u4e00\u4e2a\u6253\u5b57\u9519\u8bef\uff0c\u7f51\u7ad9\u5c06\u65e0\u6cd5\u6784\u5efa\u3002\u4fdd\u8bc1\u94fe\u63a5\u6b63\u786e\uff01\u6211\u559c\u6b22\u3002\u4f46\u662f\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u60a8\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u952e\u5165\u60a8\u7684\u5185\u5bb9\uff0c\u5728\u67d0\u4e2a\u65f6\u5019\u70b9\u51fb\u4fdd\u5b58\uff0c\u7136\u540e\u5e76\u4e14\u53ea\u6709\u5230\u90a3\u65f6\u60a8\u7684Hugo\u6784\u5efa\u624d\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u3002\n\u8fd9\u8ba9\u4f60\u60f3\u8d77\u4ec0\u4e48\u4e86\u5417\uff1f\u8fd9\u8ba9\u6211\u56de\u60f3\u8d7790\u5e74\u4ee3\u7684\u5de5\u7a0b\u5b66\u6821\uff0c\u90a3\u65f6\u6211\u6b63\u5728\u5b66\u4e60Fortran 77(\u4ee5\u53ca\u65b0\u7684\u70ed\u95e8Fortran 90\uff01)\u3002\u7f16\u5199\u4ee3\u7801\u3002\u6551\u4eba\u554a\u3002\u8fd0\u884c\u7f16\u8bd1\u5668\u3002OOPS\u9519\u8bef\u3002\u67e5\u627e\u9519\u8bef\u6587\u4ef6\u548c\u884c\u3002\u60f3\u60f3\u5427\u3002\u554a\u54c8\uff01\u4fee\u5427\u3002\u6551\u4eba\u554a\u3002\u8fd0\u884c\u7f16\u8bd1\u5668\u3002\u4ee5\u53ca\u5728\u2026\u4e0a\n\u6211\u4e0d\u77e5\u9053\u4f60\u600e\u4e48\u6837\uff0c\u4f46\u6211\u4e0d\u518d\u8fd9\u6837\u5de5\u4f5c\u4e86\u3002\u65e0\u8bba\u6211\u662f\u5199\u56f4\u68cb\u8fd8\u662f\u6253\u5b57\uff0c\u6211\u90fd\u80fd\u5728\u6253\u5b57\u65f6\u770b\u5230\u6211\u7684\u9519\u8bef\uff0c\u5e76\u5f97\u5230\u5173\u4e8e\u54ea\u4e9b\u662f\u771f\u6b63\u6b63\u786e\u7684\u5efa\u8bae\u3002\u8fd9\u4e9b\u8bed\u8a00\u7684\u521b\u9020\u8005\u63d0\u4f9b\u5de5\u5177\u6765\u5e2e\u52a9\u6211\uff0c\u56e0\u4e3a\u4ed6\u4eec\u611f\u53d7\u5230\u4e86\u6211\u7684\u75db\u82e6\u3002\u6211\u5728\u5199\u795e\u79d8\u7684\u6587\u5b57\uff0c\u4f46\u6211\u5f97\u5230\u4e86\u5f88\u591a\u5e2e\u52a9\u3002\u5f53\u6211\u5728\u96e8\u679c\u505a\u4e8b\u60c5\u65f6\uff0c\u6211\u51e0\u4e4e\u5f97\u4e0d\u5230\u4efb\u4f55\u5e2e\u52a9\u3002\n\u5982\u679c\u6a21\u677f\u4e0d\u80fd\u50cf\u60a8\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u800c\u60a8\u60f3\u8981\u5355\u6b65\u6267\u884c\u5b83\uff0c\u5c31\u597d\u50cf\u5b83\u662f\u666e\u901a\u4ee3\u7801\u4e00\u6837\uff0c\u90a3\u5c31\u592a\u7cdf\u7cd5\u4e86\u3002\u4e00\u4e2a\u6709\u7528\u7684\u6587\u6863\u9875\u9762\u5efa\u8bae\u60a8\u5c06\u201cprintf\u201d\u8bed\u53e5\u653e\u5165\u6a21\u677f\u4e2d\u300290\u5e74\u4ee3\u7684\u4eba\u6253\u6765\u7535\u8bdd\uff0c\u4ed6\u4eec\u60f3\u8981\u56de\u4ed6\u4eec\u7684\u8c03\u8bd5\u5668\u3002\n\u5f53\u6211\u4f7f\u7528relref\u521b\u5efa\u5185\u90e8\u94fe\u63a5\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u81ea\u52a8\u5b8c\u6210\uff1f\u5982\u679c\u6211\u7684\u63a8\u8350\u4eba\u6709\u6253\u5b57\u9519\u8bef\uff0c\u96be\u9053\u6211\u4e0d\u5e94\u8be5\u5f97\u5230\u4e00\u4e2a\u7ea2\u8272\u7684\u66f2\u6298\u4e0b\u5212\u7ebf\u5417\uff1f\u4f7f\u7528\u5feb\u6377\u7801\u65f6\u81ea\u52a8\u5b8c\u6210\u5982\u4f55\uff1f(\u6211\u8bd5\u7740\u5728\u6211\u7684VSCode\u4e2d\u5b89\u88c5\u8fd9\u4e2a\u6269\u5c55\uff0c\u4f46\u662f\u9664\u4e86\u4e3a\u6211\u8f93\u5165\u7684\u6bcf\u4e2a\u82f1\u6587\u5355\u8bcd\u90fd\u5f39\u51fa\u4e00\u4e2a\u81ea\u52a8\u8865\u5168\u529f\u80fd\u4e4b\u5916\uff0c\u5b83\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4f5c\u7528\u3002)\u3002\n\u6211\u5e0c\u671b\u80fd\u591f\u5355\u51fb\u4efb\u4f55\u5feb\u6377\u4ee3\u7801\uff0c\u6216\u9009\u62e9\u4efb\u4f55\u6587\u4ef6\uff0c\u5e76\u6709\u4e00\u4e2a\u5de5\u5177\u544a\u8bc9\u6211\u5b83\u4ece\u54ea\u91cc\u83b7\u53d6\u5c06\u7528\u4e8e\u5448\u73b0\u5b83\u7684\u6a21\u677f\uff0c\u4ee5\u53ca\u8f93\u51fa\u5c06\u5230\u54ea\u91cc\u3002\n\u4f46\u662f\u6211\u6ca1\u6709\u8fd9\u4e9b\uff0c\u6240\u4ee5\u5f53\u4e00\u4e9b\u4e1c\u897f\u4e0d\u50cf\u6211\u671f\u671b\u7684\u90a3\u6837\u5de5\u4f5c\u65f6\uff0c\u6211\u6700\u7ec8\u53ea\u80fd\u73a9\u4e00\u4e2a\u5197\u957f\u800c\u4ee4\u4eba\u6cae\u4e27\u7684\u731c\u8c1c\u6e38\u620f\u3002\n\u6211\u4e00\u5f00\u59cb\u771f\u7684\u5f88\u60f3\u559c\u6b22\u96e8\u679c\u3002\u5728\u6211\u610f\u8bc6\u5230\u6211\u5c06\u4e0d\u5f97\u4e0d\u628a\u6211\u7684\u7f51\u7edc\u5185\u5bb9\u521b\u4f5c\u5de5\u5177\u653e\u5728Backburner\u4e0a\u4e4b\u540e\uff0c\u6211\u5f00\u59cb\u4e86\u8fd9\u9879\u5de5\u4f5c\u3002\n\u6211\u60f3\uff0c\u5982\u679c\u6211\u4e0d\u80fd\u5efa\u9020\u4e00\u4e9b\u4f1f\u5927\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u6211\u5e94\u8be5\u4ece\u73b0\u5b58\u7684\u4e1c\u897f\u4e2d\u6311\u9009\u6700\u597d\u7684\uff0c\u5e76\u5b66\u4f1a\u4e0e\u6211\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\u751f\u6d3b\u5728\u4e00\u8d77\u3002\n\u5df2\u7ecf\u4e00\u5e74\u591a\u4e86\uff0c\u6211\u5c31\u662f\u627e\u4e0d\u5230\u5bf9\u96e8\u679c\u7684\u7231\u3002\u6211\u4f7f\u7528\u5b83\uff0c\u5f53\u5b83\u90fd\u8bbe\u7f6e\u6b63\u786e\u65f6\uff0c\u5b83\u662f\u6709\u6548\u7684\u3002\u4f46\u662f\uff0c\u5b83\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u5de5\u5177\u5417\uff1f\u4e00\u8f86\u81ea\u884c\u8f66\u7ed9\u6211\u521b\u9020\u5185\u5bb9\u7684\u5934\u8111\uff1f\u4e00\u70b9\u4e5f\u4e0d\u3002\n\u827e\u4f26\u00b7\u51ef(Alan Kaye)\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u6f14\u8bb2\uff0c\u540d\u4e3a\u201c\u590d\u6742\u5417\uff1f\u8fd8\u662f\u6211\u4eec\u628a\u4e8b\u60c5\u590d\u6742\u5316\u4e86\uff1f\u201c\u3002\u8fd9\u4e5f\u9002\u7528\u4e8e\u8fd9\u91cc\u3002\n\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u5df2\u7ecf\u8d85\u8d8a\u4e86\u4f7f\u5b83\u4eec\u53d8\u5f97\u4f1f\u5927\u7684\u754c\u9650\uff1a\u5b83\u4eec\u662f\u89e3\u51b3\u7b80\u5355\u95ee\u9898\u7684\u7b80\u5355\u5de5\u5177\u3002\u901a\u8fc7\u8ba9\u4ed6\u4eec\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u53d8\u5f97\u590d\u6742\u4e86\uff0c\u6548\u7387\u4e5f\u964d\u4f4e\u4e86\u3002\nPS\uff1a\u6211\u5f88\u62b1\u6b49\u6ca1\u6709\u5305\u62ec\u6b63\u786e\u7684\u4ee3\u7801\u7247\u6bb5\u3002\u539f\u6765\uff0c\u5982\u679c\u6211\u5c06Hugo\u77ed\u7801\u5305\u88c5\u5728\u4ee3\u7801\u5757\u4e2d\uff0cHugo\u4f1a\u5c1d\u8bd5\u5c06\u5b83\u4eec\u89e3\u91ca\u4e3a\u5b9e\u9645\u7684\u77ed\u7801\u3002\u5982\u679c\u6211\u7528\\\u5bf9\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\uff0c\u5b83\u4f1a\u5448\u73b0\u659c\u6760\uff0c\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u5b83\u5c31\u4f1a\u5d29\u6e83\uff0c\u5e76\u663e\u793a\u201c\u7a7a\u6307\u9488\u53d6\u6d88\u5f15\u7528\u9519\u8bef\u201d\u3002\u8036\u3002", "note_en": "This blog is generated using  Hugo. A documentation site I\u2019m rebuilding is also made with Hugo. These two projects have given me a chance to get to know the tool, to appreciate it at times, and to curse it otherwise.\n Some of my complaints are inherent to static site generators, others are more specific to Hugo.\n  In its simplest form, a static site generator takes a directory tree full of markdown files, and cranks out an identically structured directory tree full of HTML files.\n It\u2019s expected that the shape of your directories will affect how the generator works.\n Hugo has accumulated such a vast array of capabilities that the simple model described above has multiplied to the point where it\u2019s no longer easy to know what effect a file has, or why some file does not have the effect you think it should.\n Have a look at the  template lookup order \u201chelp page\u201d. Hugo accomplishes a lot here, with its multi-language abilities, and its taxonomies, etc\u2026 But you can see from the number of examples and possible lookup places that the capabilities are paid for in complexity.\n I don\u2019t think the filesystem is the right tool to describe the complex relations between posts and languages and templates and output formats. It\u2019s too easy to get lost.\n  It took me a little while to understand that _index.md and index.md are not the same thing. One is used to showcase a list of posts, the other one is the post itself within a page bundle. Or something like that. I used the wrong one for a while and got no errors, but my table-of-contents didn\u2019t seem to work. I spent a lot of time sorting that out.\n I ran into a number of subtle behavior gotchas like that with the tool. For instance there are different \u201ckinds\u201d of pages and different \u201ctypes\u201d of pages, and it affects whether a page shows up in a collection of pages among other things. (Don\u2019t ask me to explain, I can\u2019t.) The point is there are lots of concepts, and these concepts don\u2019t all work intuitively, and the difference between the tool behaving one way or the other can boil down to a single underscore in a file name.\n I ran into another issue where I wanted to render markdown in content within a shortcode. Here again one little character makes a big difference. This {{&lt; shortcode &gt;}} is not the same as {{% shortcode %}}. This behavior has changed over time,  causing confusion, and guess what? Though I read the docs, the behavior on my site is opposite what the  docs indicate.\n Of course it\u2019s all my fault. Everything is  documented. The thing is the documentation runs longer than your typical \u201clearn a programming language\u201d volume. I haven\u2019t actually counted the words but it seems like there is a lot more than I should have to go through to render a blog or some docs site. The section on \u201cContent Management\u201d has 24 pages, each bringing in new concepts and new flags to tweak in your configuration.\n You might say \u201cit\u2019s powerful, it\u2019s up to you to learn it\u201d. I won\u2019t argue it\u2019s not powerful, but something this powerful could be more sane to use if it relied on something other than the presence of an underscore to mean something about a file. Is the file tree truly the best abstraction for the user to accomplish their goals?\n  I understand the draw of using text files in a file tree: they can be worked on from the user\u2019s favorite text editor, and it can all be checked into version control. Fine.\n The problem is the tooling for text editors is weak. If something is this complex and powerful, and intended to be seen as \u201ccode\u201d my expectations grow accordingly: where is the live error reporting? Where is the \u201cdebugger\u201d? Autocomplete?\n For instance, you can create a link to a page within your site using a \u201c relref&#34;. The cool thing is that the site will fail to build if you put a typo in the link. Guaranteed link correctness! I like. But the way it works is you type your stuff in your text editor, at some point hit save, then and only then your Hugo build will throw an error.\n Does this remind you of anything? It takes me back to engineering school in the nineties where I was learning Fortran 77 (and the new hotness Fortran 90!) Write code. Save. Run compiler. Oops error. Find error file and line. Think some. Aha! Fix. Save. Run compiler. And on and on\u2026\n I don\u2019t know about you but I don\u2019t work like this anymore. Whether I write Go or Typescript, I get to see my mistakes as I type them, and I get suggestions for what is actually correct. The creators of those languages provide tools to help me because they feel my pain. I\u2019m writing cryptic text but I\u2019m getting a lot of help. When I do things in Hugo I get almost no help.\n If a template doesn\u2019t work as you expect and you want to step through it as if it were normal code, too bad. A  helpful docs page recommends you put \u201cprintf\u201d statements in your template. The nineties called, they want their debugger back.\n Why would I not get an autocomplete when I create an internal link using relref? Shouldn\u2019t I get a red squiggly underline if my relref has a typo? How about autocomplete when using a shortcode? (I tried installing  this extension to my VSCode but it doesn\u2019t seem to be doing much apart from causing an autocomplete popup for every single English word I type.)\n I\u2019d like to be able to click on any shortcode, or select any file, and have a tool tell me where it\u2019s sourcing the templates that will be used to render it, and where the output will go.\n But I don\u2019t have any of that, so when something doesn\u2019t work quite work like I expect I end up just playing a lengthy and frustrating guessing game.\n  I started off really wanting to like Hugo. I got into it after I realized I was going to have to put my  web content authoring tool on the backburner.\n I figured if I can\u2019t build something great, then I should pick the best of what exists and learn to live with the things I disliked.\n It\u2019s been over a year now, and I just can\u2019t find love for Hugo. I use it, it\u2019s effective when it\u2019s all set up correctly. But does it feel like a wonderful powerful tool? A bicycle for my content-generating mind? Hardly.\n There is a  great talk by  Alan Kaye dubbed \u201cIs it complex? or did we make it complicated?\u201d that applies here.\n Static site generators have stepped over and beyond the bounds of what made them great: they were simple tools for simple problems. By making them do so much more they became complicated, and less effective.\n PS: I\u2019m sorry for not including proper code snippets. Turns out if I wrap Hugo short codes in a code block, Hugo tries to interpret them as actual shortcodes. If I escape the characters with \\ it renders the slashes, and if I don\u2019t it crashes with \u201cNull pointer dereference error\u201d. Yay.", "posttime": "2020-05-14 06:17:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96e8\u679c,thoughts,\u6587\u4ef6", "title": "\u5173\u4e8e\u96e8\u679c\u7684\u601d\u8003", "title_en": "Thoughts on Hugo", "transed": 1, "url": "https://olivierforget.net/blog/2020/thoughts-on-hugo/", "via": "", "real_tags": ["\u96e8\u679c", "thoughts", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "d93c07e10a0d109ab68963d8aae906e4.jpg", "infoid": 1002024, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f--\u65b0\u7684\u653f\u5e9c\u9884\u6d4b\u663e\u793a\uff0c\u7f8e\u56fd\u4eca\u5e74\u7684\u53ef\u518d\u751f\u80fd\u6e90\u53d1\u7535\u91cf\u6709\u671b\u8d85\u8fc7\u7164\u70ad\u53d1\u7535\u91cf\uff0c\u8fd9\u662f\u6709\u8bb0\u5f55\u4ee5\u6765\u7684\u9996\u6b21\u3002\u8fd9\u4e00\u8f6c\u53d8\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u7531\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u63a8\u52a8\u7684\uff0c\u5bf9\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\n\u8fd9\u662f\u4e00\u4e2a\u91cc\u7a0b\u7891\uff0c\u8fd9\u5728\u5341\u5e74\u524d\u4f3c\u4e4e\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\uff0c\u5f53\u65f6\u7164\u70ad\u5360\u4e3b\u5bfc\u5730\u4f4d\uff0c\u51e0\u4e4e\u63d0\u4f9b\u4e86\u5168\u56fd\u4e00\u534a\u7684\u7535\u529b\u3002\u5c3d\u7ba1\u7279\u6717\u666e\u653f\u5e9c\u4e09\u5e74\u6765\u4e00\u76f4\u5728\u63a8\u52a8\u901a\u8fc7\u524a\u5f31\u71c3\u7164\u53d1\u7535\u5382\u7684\u6c61\u67d3\u89c4\u5b9a\u6765\u91cd\u632f\u5883\u51b5\u4e0d\u4f73\u7684\u884c\u4e1a\uff0c\u4f46\u5b83\u8fd8\u662f\u51fa\u73b0\u4e86\u3002\n\u7136\u800c\uff0c\u8fd9\u4e9b\u52aa\u529b\u672a\u80fd\u963b\u6b62\u5f3a\u5927\u7684\u7ecf\u6d4e\u529b\u91cf\uff0c\u81ea2010\u5e74\u4ee5\u6765\uff0c\u8fd9\u4e9b\u529b\u91cf\u5bfc\u81f4\u7535\u529b\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u6dd8\u6c70\u4e86\u6570\u767e\u5bb6\u8001\u5316\u7684\u71c3\u7164\u7535\u5382\uff0c\u5e76\u964d\u4f4e\u4e86\u5269\u4f59\u7535\u5382\u7684\u8fd0\u8425\u9891\u7387\u3002\u5728\u6b64\u671f\u95f4\uff0c\u5efa\u8bbe\u5927\u578b\u98ce\u529b\u53d1\u7535\u573a\u7684\u6210\u672c\u4e0b\u964d\u4e8640%\u4ee5\u4e0a\uff0c\u800c\u592a\u9633\u80fd\u6210\u672c\u4e0b\u964d\u4e8680%\u4ee5\u4e0a\u3002\u7531\u4e8e\u6c34\u529b\u538b\u88c2\u7684\u7e41\u8363\uff0c\u5929\u7136\u6c14\u7684\u4ef7\u683c\u5df2\u7ecf\u8dcc\u81f3\u5386\u53f2\u4f4e\u70b9\uff0c\u5929\u7136\u6c14\u662f\u4e00\u79cd\u71c3\u70e7\u66f4\u6e05\u6d01\u7684\u7164\u70ad\u7684\u66ff\u4ee3\u54c1\u3002\n\u968f\u7740\u5de5\u5382\u3001\u96f6\u552e\u5546\u3001\u9910\u9986\u548c\u5199\u5b57\u697c\u5728\u5168\u56fd\u8303\u56f4\u5185\u5173\u95ed\uff0c\u4ee5\u51cf\u7f13\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\uff0c\u7535\u529b\u9700\u6c42\u5927\u5e45\u4e0b\u964d\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u71c3\u7164\u7535\u5382\u7684\u8fd0\u8425\u6210\u672c\u5f80\u5f80\u9ad8\u4e8e\u5929\u7136\u6c14\u53d1\u7535\u5382\u6216\u53ef\u518d\u751f\u80fd\u6e90\uff0c\u8bb8\u591a\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u6b63\u5728\u9996\u5148\u524a\u51cf\u71c3\u7164\u53d1\u7535\u4f5c\u4e3a\u56de\u5e94\u3002\nIHS Markit\u7684\u7164\u70ad\u5206\u6790\u5e08Jim Thompson\u79f0\uff0c\u201c\u75ab\u60c5\u4f7f\u7164\u70ad\u884c\u4e1a\u9762\u4e34\u7684\u6240\u6709\u538b\u529b\u90fd\u8fbe\u5230\u4e86\u6781\u9650.\u201d\n\u4ec5\u5728\u4eca\u5e74\u7684\u524d\u56db\u4e2a\u534a\u6708\uff0c\u7f8e\u56fd\u7684\u98ce\u529b\u6da1\u8f6e\u673a\u3001\u592a\u9633\u80fd\u7535\u6c60\u677f\u548c\u6c34\u7535\u5927\u575d\u7684\u53d1\u7535\u91cf\u5c31\u5206\u522b\u572890\u5929\u5185\u8d85\u8fc7\u4e86\u7164\u70ad\u53d1\u7535\u91cf\uff0c\u6253\u7834\u4e86\u53bb\u5e74\u5168\u5e7438\u5929\u7684\u8bb0\u5f55\u30025\u67081\u65e5\uff0c\u5728\u5fb7\u514b\u8428\u65af\u5dde\uff0c\u4ec5\u98ce\u529b\u53d1\u7535\u4e00\u9879\u7684\u53d1\u7535\u91cf\u5c31\u51e0\u4e4e\u662f\u7164\u70ad\u7684\u4e09\u500d\u3002\n\u7f8e\u56fd\u80fd\u6e90\u60c5\u62a5\u7f72(Energy Information Administration)\u7684\u6700\u65b0\u62a5\u544a\u4f30\u8ba1\uff0c\u7f8e\u56fd\u4eca\u5e74\u7684\u7164\u70ad\u603b\u6d88\u8017\u91cf\u5c06\u4e0b\u964d\u8fd1\u56db\u5206\u4e4b\u4e00\uff0c\u71c3\u7164\u7535\u5382\u9884\u8ba1\u4ec5\u63d0\u4f9b\u5168\u56fd19%\u7684\u7535\u529b\uff0c\u9996\u6b21\u4f4e\u4e8e\u6838\u7535\u548c\u53ef\u518d\u751f\u80fd\u6e90\uff0c\u540e\u8005\u5305\u62ec\u98ce\u80fd\u3001\u592a\u9633\u80fd\u3001\u6c34\u7535\u5927\u575d\u3001\u5730\u70ed\u548c\u751f\u7269\u8d28\u80fd\u3002\n\u5929\u7136\u6c14\u5de5\u5382\u63d0\u4f9b\u4e86\u5168\u56fd38%\u7684\u7535\u529b\uff0c\u7531\u4e8e\u71c3\u6599\u4ef7\u683c\u8f83\u4f4e\uff0c\u9884\u8ba1\u5b83\u4eec\u7684\u4ea7\u91cf\u5c06\u4fdd\u6301\u7a33\u5b9a\u3002\n\u7164\u70ad\u662f\u6240\u6709\u5316\u77f3\u71c3\u6599\u4e2d\u6700\u80ae\u810f\u7684\uff0c\u81ea2005\u5e74\u4ee5\u6765\uff0c\u5b83\u7684\u4e0b\u964d\u5df2\u7ecf\u5e2e\u52a9\u7f8e\u56fd\u51cf\u5c11\u4e8615%\u7684\u4e8c\u6c27\u5316\u78b3\u6392\u653e\u3002\u4eca\u5e74\uff0c\u8be5\u673a\u6784\u9884\u8ba1\u7f8e\u56fd\u7684\u6392\u653e\u91cf\u5c06\u518d\u4e0b\u964d11%\uff0c\u8fd9\u662f\u81f3\u5c1170\u5e74\u6765\u7684\u6700\u5927\u964d\u5e45\u3002\u867d\u7136\u5927\u6d41\u884c\u4f7f\u8fd9\u4e9b\u9884\u6d4b\u53d8\u5f97\u4e0d\u786e\u5b9a\uff0c\u4f46\u9884\u8ba1\u4e0b\u964d\u7684\u90e8\u5206\u539f\u56e0\u662f\u7f8e\u56fd\u4eba\u5f00\u8f66\u7684\u6b21\u6570\u51cf\u5c11\u4e86\uff0c\u4f46\u4e3b\u8981\u662f\u56e0\u4e3a\u71c3\u7164\u7535\u5382\u7684\u8fd0\u884c\u9891\u7387\u51cf\u5c11\u4e86\u3002\n\u4e13\u5bb6\u8868\u793a\uff0c\u5373\u4f7f\u7164\u70ad\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u8d85\u51fa\u9884\u671f\u5e76\u53cd\u5f39\uff0c\u56fd\u5bb6\u7535\u529b\u7cfb\u7edf\u7684\u620f\u5267\u6027\u8f6c\u53d8\u4e5f\u4e0d\u592a\u53ef\u80fd\u53ea\u662f\u6619\u82b1\u4e00\u73b0\u3002\n\u7535\u529b\u7684\u4e3b\u8981\u6d88\u8d39\u8005\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u548c\u5927\u578b\u79d1\u6280\u516c\u53f8\u8d8a\u6765\u8d8a\u591a\u5730\u8f6c\u5411\u98ce\u7535\u573a\u548c\u592a\u9633\u80fd\u53d1\u7535\u573a\u53d1\u7535\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u968f\u7740\u6280\u672f\u7684\u8fdb\u6b65\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u7684\u4ef7\u683c\u4e0d\u65ad\u4e0b\u964d\uff0c\u4e5f\u662f\u56e0\u4e3a\u5bf9\u7a7a\u6c14\u6c61\u67d3\u548c\u6c14\u5019\u53d8\u5316\u7684\u62c5\u5fe7\u3002\u5305\u62ec\u4e1c\u5357\u90e8\u7684\u675c\u514b\u80fd\u6e90(Duke Energy)\u548c\u4e2d\u897f\u90e8\u7684Xcel Energy\u5728\u5185\u7684\u5927\u578b\u7535\u529b\u516c\u53f8\u76ee\u524d\u6b63\u8ba1\u5212\u57282025\u5e74\u4e4b\u524d\u8ba9\u81f3\u5c1140\u591a\u5bb6\u5927\u578b\u71c3\u7164\u7535\u5382\u9000\u5f79\uff0c\u76ee\u524d\u6ca1\u6709\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u8ba1\u5212\u5efa\u8bbe\u65b0\u7684\u7164\u70ad\u8bbe\u65bd\u3002\n\u83b1\u65af\u5927\u5b66\u571f\u6728\u4e0e\u73af\u5883\u5de5\u7a0b\u526f\u6559\u6388\u4e39\u5c3c\u5c14\u00b7\u79d1\u6c49(Daniel Cohan)\u8bf4\uff0c\u201c\u7535\u7f51\u7684\u53d8\u5316\u6bd4\u4efb\u4f55\u4eba\u9884\u671f\u7684\u90fd\u5feb\u5f97\u591a\u3002\u201d\u201c\u5341\u5e74\u524d\uff0c\u6211\u6559\u6211\u7684\u5b66\u751f\uff0c\u7164\u70ad\u662f\u4e00\u76f4\u5728\u8fd0\u884c\u7684\u2018\u57fa\u672c\u8d1f\u8377\u2019\u8d44\u6e90\uff0c\u5982\u679c\u4f60\u60f3\u652f\u4ed8\u66f4\u9ad8\u7684\u4ef7\u683c\uff0c\u592a\u9633\u80fd\u662f\u4f60\u53ef\u80fd\u4f1a\u6492\u8fdb\u53bb\u7684\u4e1c\u897f\u3002\u73b0\u5728\u7164\u70ad\u88ab\u63a8\u5230\u4e86\u8fb9\u7f18\uff0c\u98ce\u80fd\u548c\u592a\u9633\u80fd\u662f\u6700\u4fbf\u5b9c\u7684\u9009\u62e9\u3002\u201c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u7535\u529b\u516c\u53f8\u8fc7\u53bb\u5e38\u5e38\u62c5\u5fc3\uff0c\u4f7f\u7528\u8d85\u8fc7\u4e00\u5c0f\u90e8\u5206\u7684\u98ce\u80fd\u548c\u592a\u9633\u80fd\u4f1a\u4f7f\u56fd\u5bb6\u7684\u706f\u5f88\u96be\u4fdd\u6301\u4eae\u7740\uff0c\u56e0\u4e3a\u592a\u9633\u5e76\u4e0d\u603b\u662f\u7167\u8000\u7684\uff0c\u98ce\u4e5f\u4e0d\u603b\u662f\u5439\u7684\u3002\u4f46\u4ece\u90a3\u65f6\u8d77\uff0c\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u5df2\u7ecf\u627e\u5230\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u5929\u7136\u6c14\u5de5\u5382\u7b49\u6280\u672f\uff0c\u8fd9\u4e9b\u6280\u672f\u53ef\u4ee5\u8fc5\u901f\u542f\u52a8\uff0c\u4ee5\u6ee1\u8db3\u9700\u6c42\u6fc0\u589e\uff0c\u66f4\u597d\u7684\u5929\u6c14\u9884\u62a5\uff0c\u4ee5\u53ca\u8d8a\u6765\u8d8a\u591a\u7684\u5927\u578b\u7535\u6c60\u50a8\u5b58\u9879\u76ee\uff0c\u6bd4\u5982\u5185\u534e\u8fbe\u5dde\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u8ba1\u5212\u7684\u9879\u76ee\u3002\n\u7f8e\u56fd\u80fd\u6e90\u60c5\u62a5\u7f72(Energy Information Administration)\u9884\u8ba1\u4eca\u5e74\u98ce\u80fd\u548c\u592a\u9633\u80fd\u53d1\u7535\u91cf\u5c06\u589e\u52a0\uff0c\u5c3d\u7ba1\u968f\u7740\u4f9b\u5e94\u94fe\u4e2d\u65ad\uff0c\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bb8\u591a\u9879\u76ee\u88ab\u6401\u7f6e\u3002\u4f8b\u5982\uff0c\u897f\u5317\u5730\u533a\u7684\u4e00\u5bb6\u4e3b\u8981\u516c\u7528\u4e8b\u4e1a\u516c\u53f8PacifiCorp\u8868\u793a\uff0c\u5728\u5b8c\u6210\u6000\u4fc4\u660e\u5dde\u5728\u5efa\u7684503\u5146\u74e6\u5927\u578b\u98ce\u529b\u53d1\u7535\u573a\u65b9\u9762\uff0c\u8be5\u516c\u53f8\u6b63\u9762\u4e34\u6311\u6218\uff0c\u5c3d\u7ba1\u4e00\u540d\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u52aa\u529b\u5bfb\u627e\u201c\u521b\u9020\u6027\u7684\u89e3\u51b3\u65b9\u6848\u201d\uff0c\u4ee5\u4fbf\u572811\u6708\u7684\u6700\u540e\u671f\u9650\u524d\u5b8c\u6210\u3002\n\u4e0a\u5468\uff0c\u7f8e\u56fd\u56fd\u7a0e\u5c40(Internal Revenue Service)\u8868\u793a\uff0c\u4e3a\u4e86\u6709\u8d44\u683c\u83b7\u5f97\u5173\u952e\u7684\u8054\u90a6\u7a0e\u6536\u8865\u8d34\uff0c\u5b83\u5c06\u4e3a\u6709\u53ef\u80fd\u9519\u8fc7\u4eca\u5e74\u5b8c\u5de5\u9879\u76ee\u6700\u540e\u671f\u9650\u7684\u98ce\u80fd\u548c\u592a\u9633\u80fd\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u3002\n\u7164\u7535\u7684\u8870\u843d\u5728\u6574\u4e2a\u884c\u4e1a\u9020\u6210\u4e86\u52a8\u8361\u3002\u77ff\u4e1a\u516c\u53f8\u5df2\u7ecf\u89e3\u96c7\u4e86\u6000\u4fc4\u660e\u5dde\u548c\u8499\u5927\u62ff\u5dde\u7b49\u5dde\u7684\u6570\u767e\u540d\u5de5\u4eba\u3002\u4eca\u5e744\u6708\uff0c\u6717\u7ef4\u5c24\u7535\u529b\u516c\u53f8(Longview Power)\u5728\u897f\u5f17\u5409\u5c3c\u4e9a\u5dde\u8fd0\u8425\u7740\u7f8e\u56fd\u6700\u5e74\u8f7b\u3001\u6700\u5148\u8fdb\u7684\u71c3\u7164\u7535\u5382\u4e4b\u4e00\uff0c\u8be5\u516c\u53f8\u7533\u8bf7\u7834\u4ea7\u4fdd\u62a4\uff0c\u7406\u7531\u662f\u5927\u6d41\u884c\u662f\u4e00\u4e2a\u56e0\u7d20\u3002\n\u5206\u6790\u5e08\u8868\u793a\uff0c\u5982\u679c\u5929\u7136\u6c14\u4ef7\u683c\u4ece\u76ee\u524d\u7684\u4f4e\u70b9\u4e0a\u6da8\uff0c\u660e\u5e74\u7164\u7535\u53ef\u80fd\u4f1a\u51fa\u73b0\u6e29\u548c\u53cd\u5f39\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5373\u4f7f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cEIA\u76ee\u524d\u4e5f\u4e0d\u8ba4\u4e3a\u7164\u70ad\u4f1a\u53d6\u4ee3\u53ef\u518d\u751f\u80fd\u6e90\u3002\n\u76ee\u524d\uff0c\u7531\u4e8e\u5168\u56fd\u5929\u7136\u6c14\u4f9b\u8fc7\u4e8e\u6c42\uff0c\u8bb8\u591a\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u4f7f\u7528\u5929\u7136\u6c14\u53d1\u7535\u5f80\u5f80\u6bd4\u7164\u70ad\u4fbf\u5b9c\uff0c\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8e\u6e29\u6696\u7684\u51ac\u5b63\u51cf\u5c11\u4e86\u5bf9\u5929\u7136\u6c14\u4f9b\u6696\u7684\u9700\u6c42\uff0c\u518d\u52a0\u4e0a\u6c34\u529b\u538b\u88c2\u7684\u7e41\u8363\u3002\u5728\u5fb7\u514b\u8428\u65af\u5dde\u8fd9\u6837\u7684\u5730\u65b9\uff0c\u5929\u7136\u6c14\u7ecf\u5e38\u662f\u94bb\u63a2\u8005\u751f\u4ea7\u7684\u4e00\u79cd\u4e30\u5bcc\u7684\u526f\u4ea7\u54c1\uff0c\u4ed6\u4eec\u4f7f\u7528\u6c34\u529b\u538b\u88c2\u6765\u5f00\u91c7\u539f\u6cb9\u3002\n\u7136\u800c\uff0c\u6700\u8fd1\u51a0\u72b6\u75c5\u6bd2\u5bfc\u81f4\u5168\u7403\u6cb9\u4ef7\u66b4\u8dcc\u3002\u8bb8\u591a\u77f3\u6cb9\u94bb\u63a2\u5546\u73b0\u5728\u6b63\u88ab\u8feb\u5173\u95ed\u6cb9\u4e95\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u660e\u5e74\u5929\u7136\u6c14\u51cf\u5c11\uff0c\u5929\u7136\u6c14\u4ef7\u683c\u53ef\u80fd\u4e0a\u6da8\uff0c\u4ece\u800c\u5e2e\u52a9\u7164\u70ad\u590d\u82cf\u3002\n\u7136\u800c\uff0c\u8fd8\u6709\u4e00\u4e2a\u672a\u77e5\u6570\uff1a\u5982\u679c\u5927\u6d41\u884c\u9020\u6210\u7684\u8d22\u52a1\u75db\u82e6\u5bfc\u81f4\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u52a0\u5feb\u51b3\u5b9a\u6dd8\u6c70\u66f4\u591a\u7684\u71c3\u7164\u7535\u5382\uff0c\u8be5\u884c\u4e1a\u5728\u672a\u6765\u51e0\u5e74\u5c06\u66f4\u96be\u53cd\u5f39\u3002\u71c3\u7164\u7535\u5382\u4e00\u65e6\u5173\u95ed\uff0c\u5c31\u5f88\u96be\u91cd\u542f\u3002\n\u6807\u51c6\u666e\u5c14\u5168\u7403\u666e\u6c0f(S&P Global Platts)\u7535\u529b\u884c\u4e1a\u5206\u6790\u5e08\u9a6c\u5357\u00b7\u963f\u6731\u54c8(Manan Ajuha)\u8868\u793a\uff1a\u201c\u5982\u679c\u6211\u4eec\u786e\u5b9e\u770b\u5230\u4e00\u4e9b\u516c\u53f8\u52a0\u5feb\u4e86\u6dd8\u6c70\u66f4\u591a\u71c3\u7164\u7535\u5382\u7684\u8ba1\u5212\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u201d\n\u5bf9\u4e8e\u8bb8\u591a\u71c3\u7164\u7535\u5382\u6765\u8bf4\uff0c\u4e00\u4e2a\u5371\u9669\u7684\u8ff9\u8c61\u662f\u5b83\u4eec\u8fd0\u884c\u7684\u9891\u7387\u964d\u4f4e\u4e86\u3002\u65e9\u57282010\u5e74\uff0c\u7f8e\u56fd\u71c3\u7164\u7535\u5382\u7684\u5e73\u5747\u8fd0\u529b\u7ea6\u4e3a\u5176\u4ea7\u80fd\u768467%\u3002\u53bb\u5e74\uff0c\u8fd9\u4e00\u6bd4\u4f8b\u51e0\u5341\u5e74\u6765\u9996\u6b21\u964d\u81f3\u4e00\u534a\u4ee5\u4e0b\uff0c\u4eca\u5e74\u8fd8\u5c06\u8fdb\u4e00\u6b65\u4e0b\u6ed1\u3002\n\u80fd\u6e90\u7ecf\u6d4e\u548c\u91d1\u878d\u5206\u6790\u7814\u7a76\u6240(Institute For Energy Economics And Financial Analysis)\u7684\u6570\u636e\u5206\u6790\u5e08\u585e\u65af\u00b7\u8d39\u65af\u7279(Seth Feaster)\u8868\u793a\uff1a\u201c\u4f60\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5382\u8d8a\u5c11\uff0c\u4fdd\u7559\u5b83\u4eec\u7684\u6210\u672c\u5c31\u8d8a\u9ad8\u3002\u201d\u4ed6\u7684\u56e2\u961f\u6700\u8fd1\u4f30\u8ba1\uff0c\u52302025\u5e74\uff0c\u7164\u70ad\u53ef\u80fd\u5360\u7f8e\u56fd\u53d1\u7535\u91cf\u768410%\u6216\u66f4\u5c11\u3002\n\u6700\u65b0\u7684\u4f8b\u5b50\u662f\uff1a\u672c\u6708\uff0c\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u5408\u4f5c\u793eGreat River Energy\u8868\u793a\uff0c\u8ba1\u5212\u57282022\u5e74\u4e4b\u524d\u5173\u95ed\u5176\u4f4d\u4e8e\u5317\u8fbe\u79d1\u4ed6\u5dde\u7684\u5de8\u578b\u7164\u70ad\u6eaa\u7ad9(Coal Creek Station)\uff0c\u8fd9\u662f\u4e00\u5ea71.1\u5343\u5146\u74e6\u7684\u71c3\u7164\u7535\u5382\u3002\u867d\u7136\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u7684\u4e00\u540d\u5b98\u5458\u5c06\u8fd9\u4e00\u51b3\u5b9a\u5f52\u56e0\u4e8e\u957f\u671f\u7684\u7ecf\u6d4e\u8d8b\u52bf\uff0c\u800c\u4e0d\u662f\u5927\u6d41\u884c\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5173\u95ed\u7684\u539f\u56e0\u662f\u5c06\u53d6\u4ee3\u5b83\u7684\u662f\u4ec0\u4e48\uff1a\u8be5\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u8ba1\u5212\u589e\u52a01.1\u5343\u5146\u74e6\u7684\u65b0\u98ce\u7535\u88c5\u673a\u5bb9\u91cf\uff0c\u5c11\u91cf\u5929\u7136\u6c14\uff0c\u4ee5\u53ca\u9996\u4e2a\u53ef\u4ee5\u957f\u671f\u50a8\u5b58\u98ce\u7535\u7684\u540c\u7c7b\u7535\u6c60\u3002\n\u5c31\u7164\u70ad\u884c\u4e1a\u800c\u8a00\uff0c\u4ed6\u4eec\u8868\u793a\uff0c\u8fd9\u4e9b\u9000\u4f11\u4e2d\u7684\u8bb8\u591a\u4eba\u53ef\u80fd\u88ab\u8bc1\u660e\u662f\u76ee\u5149\u77ed\u6d45\u7684\u3002\u884c\u4e1a\u8d38\u6613\u7ec4\u7ec7\u7f8e\u56fd\u7535\u529b\u516c\u53f8(American\u2018s Power)\u7684\u9996\u5e2d\u6267\u884c\u5b98\u7c73\u6b47\u5c14\u00b7\u5e03\u6d1b\u5fb7\u6c83\u65af(Michelle Broudworth)\u8ba4\u4e3a\uff0c\u71c3\u7164\u7535\u5382\u4ecd\u7136\u662f\u7f8e\u56fd\u7535\u529b\u7ed3\u6784\u7684\u5173\u952e\u652f\u67f1\uff0c\u4e5f\u662f\u9632\u6b62\u5929\u7136\u6c14\u4ef7\u683c\u4e0a\u6da8\u7684\u5b9d\u8d35\u5bf9\u51b2\u624b\u6bb5\uff0c\u5c31\u50cf\u8fc7\u53bb\u5728\u7279\u522b\u4e25\u91cd\u7684\u51ac\u5b63\u98ce\u66b4\u671f\u95f4\u6240\u505a\u7684\u90a3\u6837\uff0c\u5f53\u65f6\u5bf9\u71c3\u6c14\u4f9b\u6696\u7684\u9700\u6c42\u53ef\u80fd\u4f1a\u6fc0\u589e\u3002\n\u201c\u7164\u70ad\u8239\u961f\u5e76\u6ca1\u6709\u6b7b\uff0c\u201d\u5e03\u6d1b\u5fb7\u6c83\u601d\u8bf4\u3002\u201c\u672a\u6765\u4ecd\u9700\u8981\u5927\u91cf\u7684\u7164\u70ad\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u4e0d\u4f1a\u5192\u9669\u5e76\u5a01\u80c1\u5230\u7535\u7f51\u7684\u53ef\u9760\u6027\u3002\u201d\n\u867d\u7136\u7279\u6717\u666e\u603b\u7edf\u4e0a\u4efb\u65f6\u8a93\u8a00\u8981\u62ef\u6551\u7164\u70ad\u884c\u4e1a\uff0c\u91cd\u632f\u91c7\u77ff\u4e1a\u7684\u5c31\u4e1a\u673a\u4f1a\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4ed6\u4e00\u76f4\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4ed6\u63a8\u52a8\u653e\u677e\u5bf9\u71c3\u7164\u7535\u5382\u4ee3\u4ef7\u9ad8\u6602\u7684\u7a7a\u6c14\u6c61\u67d3\u89c4\u5b9a\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u5de5\u5382\u7684\u5173\u95ed\u3002\u653f\u5e9c\u4ee5\u63d0\u9ad8\u7535\u7f51\u53ef\u9760\u6027\u4e3a\u7531\uff0c\u95f4\u63a5\u8865\u8d34\u71c3\u7164\u7535\u5382\u7684\u51e0\u9879\u8ba1\u5212\u90fd\u65e0\u75be\u800c\u7ec8\u3002\n\u7f8e\u56fd\u8fd8\u6ca1\u6709\u8fbe\u5230\u82f1\u56fd\u7684\u5730\u6b65\uff0c\u82f1\u56fd\u73b0\u5728\u4e00\u6b21\u8fc7\u51e0\u4e2a\u661f\u671f\uff0c\u6839\u672c\u4e0d\u4f7f\u7528\u4efb\u4f55\u71c3\u7164\u53d1\u7535\u3002\u4f46\u7f8e\u56fd\u7684\u4e00\u4e9b\u5730\u533a\u73b0\u5728\u5df2\u7ecf\u63d0\u524d\u4e86\u89e3\u4e86\u7164\u70ad\u5728\u51cf\u5c11\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u5728\u98d9\u5347\u7684\u751f\u6d3b\u3002\n\u201c\u5728\u7f8e\u56fd\u7684\u4e00\u4e9b\u5730\u533a\uff0c\u6211\u4eec\u73b0\u5728\u770b\u5230\uff0c\u5728\u67d0\u4e9b\u65e5\u5b50\u91cc\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u7684\u666e\u53ca\u7387\u8fbe\u5230\u4e8660%\u621670%\uff0c\u201d\u6e05\u6d01\u80fd\u6e90\u5546\u4e1a\u7ec4\u7ec7\u5148\u8fdb\u80fd\u6e90\u7ecf\u6d4e(Advanced Energy Economy)\u7684\u9996\u5e2d\u6267\u884c\u5b98\u7eb3\u7279\u00b7\u514b\u91cc\u9ed8(Nat Kreamer)\u8bf4\uff0c\u201c\u6ca1\u6709\u4eba\u5c16\u53eb\u7740\u8bf4\u4ed6\u4eec\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u3002\u201d", "note_en": "WASHINGTON \u2014 The United States is on track to produce more electricity this year from renewable power than from coal for the first time on record, new  government projections show, a transformation partly driven by the coronavirus pandemic, with profound implications in the fight against climate change.\n It is a milestone that seemed all but unthinkable a decade ago, when coal was so dominant that it provided  nearly half the nation\u2019s electricity. And it comes despite the Trump administration\u2019s three-year push to try to revive the ailing industry by weakening pollution rules on coal-burning power plants.\n Those efforts, however, failed to halt the powerful economic forces that  have led electric utilities to retire hundreds of aging coal plants since 2010 and run their remaining plants less frequently. The cost of building large wind farms has declined  more than 40 percent in that time, while solar costs have dropped  more than 80 percent. And the price of natural gas, a cleaner-burning alternative to coal,  has fallen to historic lows as a result of the fracking boom.\n As factories, retailers, restaurants and office buildings have shut down nationwide to slow the spread of the coronavirus,  demand for electricity has fallen sharply. And, because coal plants often cost more to operate than gas plants or renewables, many utilities are cutting back on coal power first in response.\n \u201cThe outbreak has put all the pressures facing the coal industry on steroids,\u201d said Jim Thompson, a coal analyst at IHS Markit.\n In just the first four and a half months of this year, America\u2019s fleet of wind turbines, solar panels and hydroelectric dams have produced more electricity than coal on 90 separate days \u2014 shattering last year\u2019s record of 38 days for the entire year. On May 1 in Texas,\u00a0wind power alone supplied nearly three times as much electricity as coal did.\n The  latest report from the Energy Information Administration estimates that America\u2019s total coal consumption will fall by nearly one-quarter this year, and coal plants are expected to provide just 19 percent of the nation\u2019s electricity, dropping for the first time below both nuclear power and renewable power, a category that includes wind, solar, hydroelectric dams, geothermal and biomass.\n Natural gas plants, which supply 38 percent of the nation\u2019s power, are expected to hold their output steady thanks to low fuel prices.\n Coal is the dirtiest of all fossil fuels, and its decline has already helped drive down United States carbon dioxide emissions 15 percent since 2005. This year, the agency  expects America\u2019s emissions to fall by another 11 percent, the largest drop in at least 70 years. While the pandemic has made these projections uncertain, the decline is expected to come\u00a0partly because Americans aren\u2019t driving as much, but mainly because coal plants are running less often.\n  Even if coal does manage to beat expectations and rebound later this year, experts say that the dramatic shift in the nation\u2019s electricity system is unlikely to be just a blip.\n  Utilities and large technology companies, major consumers of electricity, are increasingly turning to wind and solar farms for their power, both because renewables keep getting cheaper as technology improves but also because of concerns over air pollution and climate change. Large power companies, including Duke Energy in the Southeast and Xcel Energy in the Midwest,  are currently planning to retire at least four dozen large coal plants by 2025, and no utility is currently planning to build a new coal facility.\n \u201cThe grid is changing so much faster than anyone expected,\u201d said Daniel Cohan, an associate professor of civil and environmental engineering at Rice University. \u201cA decade ago, I was teaching my students that coal was the \u2018baseload\u2019 source that runs all the time, and solar was something you might sprinkle in if you want to pay more. Now coal\u2019s been pushed to the margins and it\u2019s wind and solar that are the cheapest options.\u201d\n At the same time, electric companies used to worry that using more than just a tiny fraction of wind and solar would make it difficult to keep the nation\u2019s lights on, since the sun isn\u2019t always shining and the wind isn\u2019t always blowing. But since then, utilities have discovered ways to tackle this problem by using technologies like natural-gas plants that can be quickly turned on to meet spikes in demand, better weather forecasting and, increasingly, vast battery storage projects such as those planned in  Nevada and  California.\n The Energy Information Administration expects wind and solar generation to increase this year, although the Covid-19 outbreak is likely to put many projects on hold as supply chains are disrupted. For instance, Pacificorp, a major utility in the Northwest, said it was facing challenges in completing a large 503-megawatt wind farm under construction in Wyoming, though a spokesman said the company was trying to find \u201ccreative solutions\u201d in order to meet a November deadline.\n Last week, the Internal Revenue Service  signaled that it would provide some flexibility for wind and solar developers at risk of missing deadlines for finishing projects this year in order to qualify for a key federal tax subsidy.\n The decline of coal power has created turmoil across the industry. Mining companies  have laid off hundreds of workers in states like Wyoming and Montana. In April, Longview Power, which operates one of the nation\u2019s youngest and most advanced coal power plants, in West Virginia,  filed for Chapter 11 bankruptcy protection, citing the pandemic as a factor.\n  Analysts said that coal power could see a moderate rebound next year if natural gas prices rise from their current lows. Still, even under that scenario, the E.I.A. does not currently see coal overtaking renewable energy.\n For now, it is often cheaper for many utilities to generate electricity from natural gas than coal because of a nationwide gas glut, thanks in part to a warm winter that reduced demand for gas heating, combined with the boom in hydraulic fracturing. In places like Texas, natural gas is frequently an abundant side product produced by drillers that use fracking to extract crude oil.\n More recently, however, the coronavirus has caused oil prices to crash worldwide. Many oil drillers  are now being forced to shut down their wells, which could mean less natural gas next year and potentially higher gas prices, helping coal recover.\n There is a wild card, however: If the financial pain caused by the pandemic leads utilities to speed up their decisions to retire more coal plants, the industry would have a much harder time bouncing back in the years ahead. Once a coal-burning plant is closed, it is difficult to restart.\n \u201cI wouldn\u2019t be surprised if we do see some companies accelerate their plans to retire more coal plants,\u201d said Manan Ajuha, a power industry analyst at S&amp;P Global Platts.\n One danger sign for many coal plants is that they are running less frequently. Back in 2010, the average U.S. coal plant ran at about 67 percent of its capacity. Last year, that fraction dipped below one-half for the first time in decades and is slipping further this year.\n \u201cThe less you use these plants, the more expensive they are to keep around,\u201d said Seth Feaster, a data analyst at the Institute for Energy Economics and Financial Analysis. His group  recently estimated that, by 2025, coal could make up 10 percent or less of the electricity generated in the United States.\n The latest example: This month Great River Energy, a cooperative based in Minnesota,  said it planned to close its giant Coal Creek Station, a 1.1 gigawatt coal plant in North Dakota, by 2022. While a utility official attributed the decision to long-term economic trends, not the pandemic, the closure is notable for what will replace it: The utility plans to add 1.1 gigawatts of new wind capacity, a small amount of gas, as well as  a first-of-its-kind battery that can store wind power for long periods.\n  The coal industry, for its part, says that many of these retirements may prove shortsighted. Michelle Bloodworth, the chief executive of America\u2019s Power, an industry trade group, argued that coal plants remained a critical pillar of the nation\u2019s electricity mix and a valuable hedge in case natural gas prices rise, as they have done in the past during particularly severe winter storms when demand for gas heating can spike.\n \u201cThe coal fleet is not dead,\u201d Ms. Bloodworth said. \u201cThere is still a significant amount of coal that\u2019s going to be needed in the future to make sure we don\u2019t risk and threaten the reliability of the grid.\u201d\n While President Trump came into office vowing to save the coal industry and revive mining jobs, he has so far been unable to do so. His push to relax costly air pollution rules on coal plants have not stopped the plant closures. And  several plans by the administration to indirectly subsidize coal plants, on the grounds that they can improve grid reliability, have gone nowhere.\n The United States is not yet at the point reached in Britain, which  now goes for weeks at a time without using any coal power at all. But some parts of the United States are now getting an early preview of life where coal is on the decline and renewables are soaring.\n \u201cIn some parts of the country, we\u2019re now seeing renewable penetration hit 60 or 70 percent on some days,\u201d said Nat Kreamer, chief executive of Advanced Energy Economy, a clean-energy business group, \u201cand no one\u2019s screaming that they can\u2019t do that.\u201d", "posttime": "2020-05-14 05:48:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u51c6\u5907,energy,\u7164\u70ad", "title": "\u7b2c\u4e00\u6b21\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u51c6\u5907\u5728\u7f8e\u56fd\u5f00\u53d1Eclipse Coal\u3002", "title_en": "In a First, Renewable Energy Is Poised to Eclipse Coal in U.S.", "transed": 1, "url": "https://www.nytimes.com/2020/05/13/climate/coronavirus-coal-electricity-renewables.html", "via": "", "real_tags": ["\u5f00\u53d1", "\u51c6\u5907", "energy", "\u7164\u70ad"]}, {"category": "", "categoryclass": "", "imagename": "a9741eaca4845ec8a5c6f980e61b803b.png", "infoid": 1002023, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e744\u670824\u65e5\uff0c\u82f9\u679c\u548c\u8c37\u6b4c\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684\u82f9\u679c\u548c\u8c37\u6b4c\u8054\u7cfb\u4eba\u8ffd\u8e2a\u534f\u8bae\uff0c\u4ed6\u4eec\u5171\u540c\u7f16\u5199\u4e86\u8be5\u534f\u8bae\u3002\u73b0\u5728\u5b83\u5c06\u88ab\u79f0\u4e3a\u201c\u66b4\u9732\u901a\u77e5\u6280\u672f\u201d\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u540d\u79f0\u66f4\u597d\u5730\u63cf\u8ff0\u4e86\u534f\u8bae\u7684\u6027\u8d28\u3002\n4\u670829\u65e5\uff0c\u82f9\u679c\u53d1\u5e03\u4e86\u8be5\u534f\u8bae\u7684\u7b2c\u4e00\u4e2aiOS13.5\u6d4b\u8bd5\u7248\u3002\u6b64\u6d4b\u8bd5\u7248\u9762\u5411API\u6d4b\u8bd5\u548c\u6536\u96c6\u53cd\u9988\u7684\u5f00\u53d1\u4eba\u5458\u3002\u5bf9API\u7684\u8bbf\u95ee\u5c06\u4ec5\u9650\u4e8e\u516c\u5171\u536b\u751f\u5f53\u5c40\u6388\u6743\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6b64\u6b21\u66f4\u65b0\u662f\u5bf9\u6279\u8bc4(\u5176\u4e2d\u5927\u90e8\u5206\u662f\u6beb\u65e0\u6839\u636e\u7684)\u4ee5\u53ca\u8be5\u534f\u8bae1.1\u548c1.2\u7248\u672c\u4e2d\u5b9e\u73b0\u7684\u51e0\u4e2a\u6280\u672f\u66f4\u6539\u7684\u56de\u5e94\u3002\u6211\u4eec\u5c06\u5728\u672c\u6587\u4e2d\u8ba8\u8bba\u8fd9\u4e9b\u66f4\u6539\u3002\n\u6b63\u5982\u82f9\u679c\u548c\u8c37\u6b4c\u7ecf\u5e38\u6307\u51fa\u7684\u90a3\u6837\uff0c\u8054\u7cfb\u4eba\u8ffd\u8e2a\u53ea\u662f\u8fd9\u4e00\u534f\u8bae\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5374\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u9879\u3002\n\u8fd9\u4e00\u52aa\u529b\u80cc\u540e\u7684\u4e3b\u8981\u60f3\u6cd5\u662f\u901a\u8fc7\u63d0\u524d\u901a\u77e5\u6f5c\u5728\u7684\u611f\u67d3\u8005\u6765\u51cf\u7f13\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\n\u6b63\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5f53\u4e00\u4e2a\u4eba\u611f\u67d3\u591a\u4e2a\u4eba\u540e\uff0c\u5f53\u7b2c\u4e00\u4e2a\u4eba\u7684\u51a0\u72b6\u75c5\u6bd2\u8bca\u65ad\u5f97\u5230\u786e\u8ba4\u65f6(\u56e0\u4e3a\u6f5c\u4f0f\u671f\u7ea6\u4e3a14\u5929)\uff0c\u5927\u90e8\u5206\u6700\u8fd1\u611f\u67d3\u7684\u4eba\u5f88\u53ef\u80fd\u8fd8\u6ca1\u6709\u611f\u89c9\u5230\u4efb\u4f55\u75c5\u5f81\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u4f1a\u611f\u67d3\u5176\u4ed6\u4eba\u3002\n\u5982\u679c\u6211\u4eec\u80fd\u8bbe\u6cd5\u5728\u8bca\u65ad\u65f6\u544a\u77e5\u8fd9\u4e9b\u65e0\u75c7\u72b6\u7684\u643a\u5e26\u8005\u611f\u67d3\u4ed6\u4eec\u7684\u4eba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9632\u6b62\u8fde\u9501\u53cd\u5e94\u3002\u4ece\u800c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u611f\u67d3\u7684\u4f20\u64ad\u3002\n\u6b64\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u81f3\u5c11\u90e8\u5206\u53d6\u6d88\u9694\u79bb\u9650\u5236\u3002\u5b9e\u65bd\u8fd9\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u53ef\u80fd\u4f1a\u633d\u6551\u8bb8\u591a\u56fd\u5bb6\u7684\u7ecf\u6d4e\uff0c\u82f9\u679c\u548c\u8c37\u6b4c\u8054\u5408\u8d77\u6765\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\u662f\u6709\u5145\u5206\u7406\u7531\u7684\u3002\n\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u65e7\u7684\u534f\u8bae\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u65b0\u7684\u534f\u8bae\u5e94\u8be5\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u7a0d\u540e\u5c06\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u65b0\u65e7\u534f\u8bae\u4e4b\u95f4\u7684\u5176\u4ed6\u533a\u522b\u3002\n\u4e00\u6b3e\u5b89\u88c5\u4e86iOS\u6216Android\u64cd\u4f5c\u7cfb\u7edf\u7684\u667a\u80fd\u624b\u673a\u4e0a\u5b89\u88c5\u4e86\u4e00\u6b3e\u5e94\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u82f9\u679c\u548c\u8c37\u6b4c\u7684\u8054\u7cfb\u4eba\u8ffd\u8e2aAPI\u542f\u52a8\u8054\u7cfb\u4eba\u8ffd\u8e2a\u3002\n\u6b64\u5bc6\u94a5\u7528\u4e8e\u5c06\u8ddf\u8e2a\u5bc6\u94a5\u4e0e\u5f53\u5929\u7684\u6570\u5b57\u8fde\u63a5\u8d77\u6765\uff0c\u751f\u6210HKDF\u5f62\u5f0f\u7684\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\u3002\n\u6b64\u5bc6\u94a5\u7528\u4e8e\u5c06\u8ddf\u8e2a\u5bc6\u94a5\u4e0e\u5f53\u5929\u7684\u6570\u5b57\u8fde\u63a5\u8d77\u6765\uff0c\u751f\u6210HKDF\u5f62\u5f0f\u7684\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\u3002\n\u6bcf\u969410\u5206\u949f\uff0c\u8be5\u5bc6\u94a5\u7528\u4e8e\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u6eda\u52a8\u63a5\u8fd1ID\uff0c\u4f5c\u4e3a\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\u7684HMAC\uff0c\u5e76\u52a0\u5165\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u6570\u3002\u8be5\u4e34\u65f6\u5bc6\u94a5\u4f7f\u7528\u84dd\u7259\u4f4e\u80fd\u91cf\u5e7f\u64ad\u3002\u5176\u4ed6\u667a\u80fd\u624b\u673a\u8bfb\u53d6\u6b64\u5bc6\u94a5\u540e\u4f1a\u5c06\u5176\u5b58\u50a8\u5728\u672c\u5730\u3002\n\u4e00\u65e6\u6709\u4eba\u88ab\u611f\u67d3\uff0c\u4ed6\u4eec\u7684\u6700\u540e14\u4e2a\u6bcf\u65e5\u5bc6\u94a5\u5c06\u88ab\u53d1\u5e03\uff0c\u6240\u6709\u5176\u4ed6\u8bbe\u5907\u5728\u4e0b\u8f7d\u8fd914\u4e2a\u6bcf\u65e5\u5bc6\u94a5\u540e\uff0c\u5c06\u751f\u6210\u6240\u670914\u5929\u7684\u6eda\u52a8\u90bb\u8fd1ID\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u672c\u5730\u5b58\u50a8\u7684\u6eda\u52a8\u90bb\u8fd1ID\u8fdb\u884c\u6bd4\u8f83\u3002\n\u5982\u679c\u5339\u914d\uff0c\u4f60\u5c31\u4e0e\u611f\u67d3\u8005\u6709\u8fc7\u63a5\u89e6\u3002\n\u60a8\u53ef\u4ee5\u5728\u6211\u4eec\u53d1\u8868\u7684\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\u627e\u5230\u66f4\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002\n\u6bcf\u5929\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u968f\u673a16\u5b57\u8282\u6bcf\u65e5\u66dd\u5149\u5bc6\u94a5\u3002\u5b83\u7528\u4e8e\u751f\u6210\u4e34\u65f6\u6807\u8bc6\u7b26\u7684\u52a0\u5bc6\u5bc6\u94a5(\u6eda\u52a8\u63a5\u8fd1\u5bc6\u94a5\uff0c\u6216RPIKey)\uff0c\u4ee5\u53ca\u5143\u6570\u636e\u52a0\u5bc6\u5bc6\u94a5(\u76f8\u5173\u7684\u52a0\u5bc6\u5143\u6570\u636e\u5bc6\u94a5\uff0c\u6216AEMKey)\uff1aRPIKey=HKDF(ExpKey\uff0cNULL\uff0cUTF8(\u201cEN-RPIK\u201d)\uff0c16)AEMKey=HKDF(ExpKey\uff0cNULL\uff0cUTF8(\u201cEN-AEMK\u201d)\uff0c16)\u5176\u4e2d-HKDF(Key\uff0cSalt\uff0cInfo\u3002-NULL\u4ee3\u8868\u672a\u4f7f\u7528\u7684\u76d0\u3002-UTF8(\u201cen-RPIK\u201d)\u662f\u4e0eUTF8\u4e2d\u7684en-RPIK\u5b57\u7b26\u4e32\u76f8\u5bf9\u5e94\u7684\u5b57\u8282\u6570\u7ec4\u3002\nBLE\u89c4\u8303\u5047\u5b9a\u6bcf15-20\u5206\u949f\u66f4\u6539\u4e00\u6b21MAC\u5730\u5740\uff0c\u4ee5\u907f\u514d\u8bbe\u5907\u8ddf\u8e2a\u3002\u6bcf\u6b21\u66f4\u6539MAC\u5730\u5740\u65f6\uff0c\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u4e34\u65f6\u6eda\u52a8\u90bb\u8fd1ID(RPID)\u5bc6\u94a5\u3002RFID=AES128(RPIKey\uff0cUTF8(\u201cen-RPI\u201d)||0x000000000000||Ti)\u5176\u4e2d\uff0cAES128(\u5bc6\u94a5\uff0c\u6570\u636e)\u7528\u4e8e128\u4f4d\u5bc6\u94a5\u7684AES\u52a0\u5bc6\u529f\u80fd\u3002-Key\u4e3a\u7b2c\u4e00\u6b65\u751f\u6210\u7684RPIKey\u6216Rolling Proximity Key\u3002-DATA\u662f\u4ee5\u4e0b\u5404\u9879\u7684\u4e32\u8054(||-SYMBOL\u8868\u793a\u4e32\u8054)\uff1a-UTF8(\u201cen-RPI\u201d)\u662f\u4e0e\u7528UTF8\u7f16\u7801\u7684EN-RPI\u884c\u76f8\u5bf9\u5e94\u76846\u5b57\u8282\u6570\u7ec4\u3002-0x000000000000\u662f\u516d\u4e2a\u96f6\u5b57\u8282(\u603b\u5171\u5f97\u5230\u4e00\u4e2a128\u4f4d\u7684\u5757)\u3002-ti-4\u5b57\u8282\uff0c10\u5206\u949f\u4e34\u65f6\u95f4\u9694\uff0c\u6309unix_timeamp div(60*10)\u8ba1\u7b97\uff0cdiv\u8868\u793a\u6574\u6570\u9664\u6cd5\u3002\u63a5\u4e0b\u6765\uff0c\u5bf94\u5b57\u8282\u7684\u5173\u8054\u52a0\u5bc6\u5143\u6570\u636e(AEM)\u8fdb\u884c\u7f16\u7801\u3002\u89c4\u8303\u4e2d\u6ca1\u6709\u516c\u5f00\u8be5\u5143\u6570\u636e\u7a76\u7adf\u662f\u5982\u4f55\u7f16\u8bd1\u7684\u3002\u5f88\u53ef\u80fd\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4fdd\u7559\u6269\u5c55\u534f\u8bae\u7684\u9009\u9879\u3002\u6211\u4eec\u5c06\u5728\u672c\u6587\u540e\u9762\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u5143\u6570\u636e\u3002AEM=AES128AES CTR(AEMKEY\uff0cRFID\uff0cMETADATA)\uff0c\u5176\u4e2d-AES128AES CTR(KEY\uff0cIV\uff0cDATA)\u7528\u4e8e\u2212-CTR\u52a0\u5bc6\u529f\u80fd\uff0cAEMKEY\u662f128\u4f4d\u5bc6\u94a5\u3002\u6570\u636e\u8f93\u51fa\u5927\u5c0f\u4e0e\u6570\u636e\u8f93\u5165\u5927\u5c0f\u5339\u914d\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6dfb\u52a0\u4efb\u4f55\u5185\u5bb9\u6765\u5339\u914d\u5757\u5927\u5c0f\u3002\u6eda\u52a8\u63a5\u8fd1\u5bc6\u94a5\u7528\u4f5c\u8f93\u5165\u5411\u91cfIV\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u4e34\u65f6\u6807\u8bc6\u7b26\u6eda\u52a8\u63a5\u8fd1ID\u4e0e\u5173\u8054\u7684\u52a0\u5bc6\u5143\u6570\u636e\u7ec4\u5408\uff0cBLE\u6709\u6548\u8d1f\u8f7d\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u4e00\u6279\u662f\u901a\u8fc7\u84dd\u7259\u4f4e\u80fd\u8017\u5e7f\u64ad\u7684\u3002\u8bfb\u53d6\u6570\u636e\u5e76\u968f\u540e\u5c06\u5176\u5b58\u50a8\u5728\u672c\u5730\u7684\u8bbe\u5907\u3002\n3.\u4e00\u65e6\u6709\u4eba\u88ab\u611f\u67d3\uff0c\u4ed6\u4eec\u6700\u8fd1\u768414\u4e2a\u6bcf\u65e5\u5bc6\u94a5\u88ab\u53d1\u5e03\uff0c\u6240\u6709\u5176\u4ed6\u8bbe\u5907\u5728\u4e0b\u8f7d\u8fd914\u4e2a\u6bcf\u65e5\u5bc6\u94a5\u540e\uff0c\u751f\u6210\u6240\u670914\u5929\u7684Rolling Apacity ID\uff0c\u5e76\u5c06\u5176\u4e0e\u672c\u5730\u5b58\u50a8\u7684Rolling Proximity ID\u8fdb\u884c\u6bd4\u8f83\u3002\n\u81ea\u8be5\u534f\u8bae\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u53d1\u5e03\u4ee5\u6765\uff0c\u65b0\u95fb\u5934\u6761\u4e0d\u65ad\u5411\u6bcf\u4e2a\u4eba\u901a\u62a5\u82f9\u679c\u548c\u8c37\u6b4c(Apple\uff1bGoogle)\u5f00\u53d1\u7684\u4e00\u9879\u8ffd\u8e2a\u8054\u7cfb\u4eba\u7684\u65b0\u534f\u8bae\u3002\u5728\u53ea\u770b\u4e86\u6807\u9898\u4e4b\u540e\uff0c\u5927\u591a\u6570\u8bfb\u8005\u5bf9\u53e6\u4e00\u4e2a\u8ddf\u8e2a\u7cfb\u7edf\u7684\u5370\u8c61\u662f\uff0c\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f(\u65e0\u8bba\u662f\u533f\u540d\u3001\u52a0\u5bc6\u8fd8\u662f\u672c\u5730\u6570\u636e\u5b58\u50a8)\u80fd\u963b\u6b62\u4ed6\u4eec\u3002\n\u4ee5\u524d\u7528\u4e8e\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\u751f\u6210\u7684\u4e3b\u79c1\u6709\u8ddf\u8e2a\u5bc6\u94a5\u5df2\u88ab\u5220\u9664\u3002\u5728\u65b0\u7248\u672c\u4e2d\uff0c\u6bcf\u4e2a\u66dd\u5149\u5bc6\u94a5(\u65e9\u5148\u7684\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5)\u90fd\u662f\u968f\u673a\u751f\u6210\u7684\uff0c\u56e0\u6b64\u5373\u4f7f\u5728\u7406\u8bba\u4e0a\u4e5f\u4e0d\u53ef\u80fd\u5728\u5b83\u4eec\u4e4b\u95f4\u5efa\u7acb\u8054\u7cfb\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u88ab\u7528\u4e8e\u7531\u79d1\u5b66\u754c\u5f00\u53d1\u7684DP-3T\u534f\u8bae\u4e2d\u3002\u60a8\u53ef\u4ee5\u5728\u6211\u4eec\u4ee5\u524d\u5904\u7406\u6b64\u534f\u8bae\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u9605\u8bfb\u6b64\u534f\u8bae\u3002\n\u56e0\u6b64\uff0c\u82f9\u679c\u548c\u8c37\u6b4c\u5bf9\u6279\u8bc4\u7684\u53cd\u5e94\u662f\u4fdd\u62a4\u534f\u8bae\u514d\u53d7\u4e24\u79cd\u53ef\u80fd\u7684\u653b\u51fb\uff1a\n\u5982\u679c\u5165\u4fb5\u8005\u53d1\u73b0\u4e86\u667a\u80fd\u624b\u673a\u7684\u65e7\u5907\u4efd\uff0c\u4ed6\u4eec\u53ef\u4ee5\u63d0\u53d6\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\uff0c\u8fd9\u8db3\u4ee5\u751f\u6210\u65b0\u7684\u6bcf\u65e5\u5bc6\u94a5\u5e76\u5e7f\u64ad\u865a\u5047\u7684\u65b0\u8054\u7cfb\u4eba\u3002\n\u5982\u679c\u5165\u4fb5\u8005\u8bbe\u6cd5\u627e\u5230\u94fe\u63a5\u7684\u5bc6\u94a5\uff0c\u751a\u81f3\uff0c\u5982\u679c\u4ed6\u4eec\u6709\u5927\u91cf\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u673a\u80fd\u529b\uff0c\u731c\u6d4b\u8ddf\u8e2a\u5bc6\u94a5(\u5728\u67d0\u4eba\u88ab\u611f\u67d3\u5e76\u53d1\u5e03\u6bcf\u65e5\u8ddf\u8e2a\u5bc6\u94a5\u4e4b\u540e)\uff0c\u4ed6\u4eec\u53ef\u4ee5\u501f\u52a9\u4e4b\u524d\u5b89\u88c5\u7684BLE\u4fe1\u6807\u63a8\u65ad\u53d7\u611f\u67d3\u7684\u79fb\u52a8\uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u4ee5\u521b\u5efa\u5047\u7684\u65b0\u8054\u7cfb\u4eba(\u5982\u679c\u4ed6\u4eec\u5df2\u7ecf\u8bbe\u6cd5\u8ba1\u7b97\u51fa\u8ddf\u8e2a\u5bc6\u94a5)\u3002\n\u6bcf10\u5206\u949f\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u5bc6\u94a5\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u7684\u5bc6\u94a5\u8d77\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u67d0\u4e00\u5929\uff0c\u5728\u4e00\u4e9b\u5927\u56fd\uff0c\u670910.000\u4eba\u62a5\u544a\u4e86\u65b0\u7684\u611f\u67d3\u75c5\u4f8b\u3002\u8fd9\u5c06\u521b\u5efa14\u4e07\u4e2a\u6bcf\u65e5\u5bc6\u94a5\uff0c\u6216\u8005\u667a\u80fd\u624b\u673a\u9700\u8981\u751f\u6210\u7684140K*144~2000\u4e07\u4e2a\u4e34\u65f6\u5bc6\u94a5(\u6bcf\u5929\u521b\u5efa144\u4e2a\u4e34\u65f6\u5bc6\u94a5\uff0c24*60/10)\u3002\u901a\u8fc7\u6bd4\u8f83\u5e76\u68c0\u67e5\u8054\u7cfb\u4eba\u65e5\u671f\u53f7\u7801\u7684\u6240\u6709\u6bcf\u65e5\u5bc6\u94a5\uff0c\u800c\u4e0d\u662f\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u4e34\u65f6\u5bc6\u94a5\uff0c\u53ef\u4ee5\u4f18\u5316\u5339\u914d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u6bcf\u5929\u6709\u5927\u7ea610\u4e2a\u8054\u7cfb\u4eba\uff0c\u5373\u6bcf\u4e24\u5468140\u4e2a\u8054\u7cfb\u4eba\uff0c\u60a8\u7684\u624b\u673a\u5c06\u9700\u8981\u8fdb\u884c140*10K=140\u4e07\u6b21\u64cd\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u53ef\u89c2\u7684\u6570\u5b57\u3002\u8bb8\u591a\u73b0\u4ee3\u667a\u80fd\u624b\u673a\u652f\u6301AES\u52a0\u5bc6\u7684\u786c\u4ef6\u52a0\u901f\uff0c\u8fd9\u4f7f\u5b83\u4eec\u80fd\u591f\u66f4\u5feb\u5730\u5339\u914d\u8054\u7cfb\u4eba\uff0c\u5e76\u4f7f\u7528\u66f4\u5c11\u7684\u7535\u6c60\u7535\u91cf\u3002\n\u5728\u89c4\u8303\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6bcf10\u5206\u949f\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u6807\u8bc6\u7b26\u6eda\u52a8\u63a5\u8fd1\u6807\u8bc6\u7b26\u3002\u540c\u65f6\uff0c\u84dd\u7259\u4f4e\u80fd\u91cfMAC\u6bcf\u969415\u523020\u5206\u949f\u66f4\u6362\u4e00\u6b21\uff0c\u95f4\u9694\u4e0d\u540c\u3002\u7531\u4e8eRPI\u548cMAC\u66f4\u6539\u4e0d\u540c\u6b65\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u65b0MAC\u4e0e\u65e7RPI\u5173\u8054\uff0c\u6216\u5c06\u65b0RPI\u4e0e\u65e7MAC\u5173\u8054\u3002\u8fd9\u4e00\u9519\u8bef\u53ef\u80fd\u5141\u8bb8\u8ddf\u8e2a\u7528\u6237\u7684\u79fb\u52a8\uff0c\u4f8b\u5982\uff0c\u5728\u4ea4\u6613\u4e2d\u5fc3\uff0c\u4f7f\u7528BLE\u4fe1\u6807\u3002\u65b0\u7248\u672c\u7684\u534f\u8bae\u540c\u6b65\u4e86MAC\u548cRPI\u66f4\u6539\u3002\u5f15\u8ff0\u5982\u4e0b\uff1a\u201c\u5bc6\u94a5\u65f6\u95f4\u8868\u662f\u56fa\u5b9a\u7684\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u7ec4\u4ef6\u5b9a\u4e49\uff0c\u4ece\u800c\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u53ef\u7528\u4e8e\u8ddf\u8e2a\u7684\u9759\u6001\u6216\u53ef\u9884\u6d4b\u4fe1\u606f\u3002\u201d\n\u4e0d\u5728\u7cfb\u7edf\u7ea7\u522b\u4f46\u5728\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u5de5\u4f5c\u7684\u534f\u8bae\u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u540c\u6b65MAC\u548cRPI\u66f4\u6539\u3002\u56e0\u6b64\uff0cDP-3T\u534f\u8bae\u548cOpenCovidTrace\u5728\u8bbf\u95eeBLE\u670d\u52a1\u7684\u65f6\u523b\u751f\u6210\u4e34\u65f6\u6807\u8bc6\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6807\u8bc6\u4e0d\u4f1a\u88ab\u5e7f\u64ad\u3002\n\u52a0\u5bc6\u5143\u6570\u636e\u7684\u51fa\u73b0\u662f\u89c4\u8303\u4e2d\u6700\u795e\u79d8\u7684\u53d8\u5316\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u5b83\u5c06\u5305\u542b\u4ec0\u4e48\u5185\u5bb9\uff0c\u4ee5\u53ca\u8c01\u5c06\u6709\u6743\u8bbf\u95ee\u5b83\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u8bd5\u7740\u731c\u6d4b\u4e00\u4e0b\u3002\n\u5b83\u6bcf\u969415\u523020\u5206\u949f\u5728\u6211\u4eec\u7684\u8bbe\u5907\u4e0a\u751f\u6210\u548c\u52a0\u5bc6\u4e00\u6b21\uff0c\u5927\u5c0f\u53ea\u67094\u4e2a\u5b57\u8282\u3002\u5b83\u53ef\u4ee5\u662f\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\uff1a1)\u6709\u5173\u6211\u4eec\u8bbe\u5907\u7684\u4fe1\u606f\uff1b2)\u65f6\u95f4\uff1b3)\u4f4d\u7f6e(\u4e0d\u7cbe\u786e\uff0c\u56e0\u4e3a\u9650\u5236\u4e3a4\u4e2a\u5b57\u8282)\uff1b4)\u65f6\u533a\uff1b5)\u53d1\u5e03\u6b64\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u7ec4\u7ec7\uff1b6)\u53ef\u80fd\u662f\u7531\u53d1\u5e03\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u7ec4\u7ec7\u5206\u914d\u7ed9\u60a8\u7684ID\u3002\n\u5b83\u4f1a\u88ab\u5e7f\u64ad\u5230\u9644\u8fd1\u7684\u6240\u6709\u8bbe\u5907(\u5c3d\u7ba1\u5b83\u662f\u52a0\u5bc6\u7684)\uff0c\u5176\u4ed6\u4eba\u90fd\u4e0d\u4f1a\u62e5\u6709\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u53d7\u5230\u611f\u67d3\uff0c\u6b64\u6570\u636e\u4e0d\u4f1a\u4e0a\u8f7d\u5230\u670d\u52a1\u5668\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u60a8\u8054\u7cfb\u8fc7\u7684\u8bbe\u5907\u624d\u80fd\u83b7\u53d6\u6b64\u6570\u636e\u3002\u5047\u8bbe\u8fd9\u662f\u60a8\u7684\u8054\u7cfb\u4eba\u4e0d\u62e5\u6709\u7684\u67d0\u79cd\u6570\u636e\uff0c\u8fd9\u5c06\u662f\u5408\u4e4e\u903b\u8f91\u7684\uff0c\u8fd9\u4f7f\u5f97\u65f6\u95f4\u548c\u5730\u70b9\u9009\u9879\u53d8\u5f97\u4e0d\u592a\u53ef\u80fd\u3002\u4e0d\u8fc7\uff0c\u5373\u4f7f\u6b64\u534f\u8bae\u4e2d\u4e0d\u4f7f\u7528\u6b64\u6570\u636e\uff0c\u4e00\u4e9b\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u5c06\u5176\u7528\u4f5c\u6392\u5e8f\u7684\u6269\u5c55\u3002\u5173\u4e8e\u60a8\u7684\u5176\u4ed6\u6570\u636e\u5f88\u53ef\u80fd\u5b58\u5728\u3002\n\u53ea\u6709\u5728\u5176\u4e2d\u4e00\u4e2a\u7528\u6237\u53d7\u5230\u611f\u67d3\u5e76\u5171\u4eab\u53ef\u7528\u4e8e\u751f\u6210\u5bc6\u94a5\u548c\u521d\u59cb\u5316\u5411\u91cf\u4ee5\u89e3\u5bc6\u6b64\u6570\u636e\u7684\u65e5\u5e38\u5bc6\u94a5\u4e4b\u540e\uff0c\u624d\u80fd\u89e3\u5bc6\u6b64\u6570\u636e\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u611f\u67d3\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u6570\u636e\u624d\u662f\u91cd\u8981\u7684\u3002\n\u8ba1\u7b97\u63a5\u89e6\u8ddd\u79bb\u6240\u5fc5\u9700\u7684\u7535\u8bdd\u578b\u53f7\u3001\u4ee3\u7801\u6216\u84dd\u7259\u53d1\u5c04\u5668\u7684\u529f\u7387\u3002\n\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u6216\u53d1\u5e03\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u7ec4\u7ec7\u6216\u56fd\u5bb6/\u5730\u533a\u7684\u4ee3\u7801\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u77e5\u9053\u8c01\u786e\u8ba4\u4e86\u8bca\u65ad\u3002\n\u6700\u574f\u7684\u60c5\u51b5\u662f\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e9b\u5185\u90e8ID\uff0c\u5141\u8bb8\u4f7f\u7528\u6b64\u534f\u8bae\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u5176\u4e0d\u662f\u533f\u540d\u7684\uff0c\u5c3d\u7ba1\u6b64\u534f\u8bae\u4e00\u5f00\u59cb\u58f0\u660e\u4e86\u6240\u6709\u5185\u5bb9\u3002\u5728\u4ed6\u4eec\u7684\u6570\u636e\u5e93\u4e2d\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528\u5143\u6570\u636e\u4e2d\u7684ID\u5c06\u6bcf\u4e2a\u7528\u6237\u7684\u6570\u636e\u4e0e\u534f\u8bae\u4f7f\u7528\u7684\u533f\u540d\u6807\u8bc6\u7b26\u8054\u7cfb\u8d77\u6765\u3002\u5728\u611f\u67d3\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u627e\u51fa\u53ef\u80fd\u611f\u67d3\u60a8\u7684\u7528\u6237\u7684ID\u5e76\u8bf7\u6c42\u6b64\u4fe1\u606f\u3002\n\u82f9\u679c\u548c\u8c37\u6b4c\u5df2\u7ecf\u8868\u660e\uff0c\u4ed6\u4eec\u80fd\u591f\u63a5\u53d7\u6279\u8bc4\uff0c\u5e76\u8fc5\u901f\u505a\u51fa\u53cd\u5e94\u3002\u534f\u8bae\u7684\u6539\u53d8\u6d88\u9664\u4e86\u51e0\u4e2a\u5b89\u5168\u95ee\u9898\uff0c\u63d0\u9ad8\u4e86\u5339\u914d\u53d7\u611f\u67d3\u8054\u7cfb\u4eba\u7684\u6027\u80fd\uff0c\u5e76\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u589e\u52a0\u4e86\u65b0\u7684\u9009\u62e9\u3002\n\u7136\u800c\uff0c\u4e3b\u8981\u7684\u95ee\u9898\u662f\uff0c\u5f53\u6d89\u53ca\u5230\u7528\u6237\u7684\u8054\u7cfb\u4eba\u548c\u79fb\u52a8\u6570\u636e\u7684\u9690\u79c1\u65f6\uff0c\u7528\u6237\u5bf9IT\u5de8\u5934\u7684\u4e0d\u4fe1\u4efb\u4e0d\u592a\u53ef\u80fd\u6d88\u5931\u3002\u8fd9\u4e0d\u662f\u7b80\u5355\u5730\u901a\u8fc7\u66f4\u6539\u534f\u8bae\u540d\u79f0\u5c31\u80fd\u89e3\u51b3\u7684\u3002\n\u6211\u4eecOpenCovidTrace\u786e\u4fe1\uff0c\u8fd9\u79cd\u793e\u4f1a\u91cd\u8981\u6027\u7684\u9879\u76ee\u5fc5\u987b\u4ee5\u5f00\u6e90\u65b9\u5f0f\u5b9e\u65bd\uff0c\u6211\u4eec\u7528\u6237\u6570\u636e\u7684\u5b89\u5168\u548c\u9690\u79c1\u9700\u8981\u5f97\u5230\u4e13\u4e1a\u793e\u533a\u7684\u786e\u8ba4\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u5f00\u6e90\u5e73\u53f0OpenCovidTrace\u4e0a\u5de5\u4f5c\uff0c\u5b83\u652f\u6301DP-3T\u534f\u8bae\uff0c\u5e76\u5b9e\u73b0\u4e86Apple&amp\uff1bGoogle\u534f\u8bae\uff0c\u4f46\u7531\u4e8eiOS\u7684\u9650\u5236\u800c\u505a\u51fa\u4e86\u4e00\u4e9b\u6539\u53d8\u3002\n\u52a0\u5165\u6211\u4eec\u7684Github\u5427\uff01\u60a8\u7684\u610f\u89c1\u548c\u53cd\u9988\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u9879\u76ee\u7684\u53d1\u5c55\uff0c\u5728\u9694\u79bb\u89e3\u9664\u540e\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5171\u540c\u6251\u706d\u51a0\u72b6\u75c5\u6bd2\u7684\u7206\u53d1\u3002\n\u7531\u6b27\u6d32\u79d1\u5b66\u754c\u5f00\u53d1\u7684\u63a5\u89e6\u8005\u8ffd\u8e2a\u534f\u8baeDP-3T\u7684https://github.com/DP-3T/-Github\u50a8\u5b58\u5e93\u3002https://opencovidtrace.org-\u6211\u4eec\u7684\u5f00\u6e90\u9879\u76ee", "note_en": "On April 24th 2020 Apple &amp; Google have announced a new version of the Apple &amp; Google Contact Tracing Protocol which they programmed in a joint effort. Now it\u2019s to be called \u201cExposure Notification Technology\u201d, since this name better describes the nature of the protocol.\n On 29th of April Apple  released the first iOS 13.5 beta implementation of the protocol. This beta version targets developers for API testing and collecting feedback. The access to the API will be limited to apps authorised by public health authorities.\n This update is a reaction to the criticism (most of which was baseless) as well as several technical changes implemented in versions 1.1 and 1.2 of this protocol. We are going to discuss these changes in this article.\n  As it is often noted by Apple &amp; Google, contact tracing is only a part of this protocol, nevertheless a very important one.\n The main idea behind this effort is to decelerate the spread of COVID-19 by notifying potentially infected individuals in advance.\n  As illustrated in the infographic above, after one person infects several others, then, by the time the COVID-19 diagnosis of the first person is confirmed (as its incubation period is about 14 days), most of the recently infected people will most likely not yet feel any of its symptoms. Instead they will be infecting others.\n If we can manage to inform such symptom-free carriers at the moment of diagnosis of the person who had infected them, we can prevent a chain reaction. Thus drastically reducing spread of infection.\n This approach can help to at least partially remove quarantine restrictions. Implementing this simple idea might save economies in many countries, and Apple &amp; Google have united in this task for a good reason.\n We shall now have a look into the way the old protocol functioned and how the new one is supposed to work. Later on other differences between the old and the new protocol shall be discussed in more detail.\n  An app is installed on a smartphone with iOS or Android that launches contact tracing via Apple &amp; Google Contact Tracing API.\n  This key is used to generate Daily Tracing Key as HKDF from Tracing Key joined with the number of the day.\n  This key is used to generate Daily Tracing Key as HKDF from Tracing Key joined with the number of the day.\n Every 10 minutes, this key is used to generate a temporary Rolling Proximity ID as HMAC of Daily Tracing Key joined with a time interval number. This temporary key is broadcasted using Bluetooth Low Energy. Other smartphones that read this key store it locally afterwards.\n Once someone is infected, their last 14 daily keys are published, and all other devices, after downloading these 14 daily keys, generate Rolling Proximity IDs for all the 14 days and compare them to locally stored Rolling Proximity IDs.\n If there is a match, you\u2019ve had a contact with an infected person.\n You can find a more detailed description in  the previous article we published about the topic.\n   Every day a new random 16-byte daily Exposure Key is generated. It is used for generation of an encryption key for temporary identifiers (Rolling Proximity Key, or RPIKey), as well as metadata encryption key (Associated Encrypted Metadata Key, or AEMKey):  RPIKey = HKDF(ExpKey, NULL, UTF8(\u201cEN-RPIK\u201d),16) AEMKey = HKDF(ExpKey, NULL, UTF8(\u201cEN-AEMK\u201d),16)  where -  HKDF(Key, Salt, Info, OutputLength) designates the HKDF function as defined by  IETF RFC 5869, using the SHA-256 hash function. -  NULL stands for salt that is not used. -  UTF8(\u201cEN-RPIK\u201d) is a byte array that corresponds with the EN-RPIK string in UTF8.\n BLE specifications assume changing MAC address every 15\u201320 minutes to avoid device tracing. Every time a MAC address is changed, a new temporary Rolling Proximity ID (RPID) key is generated.  RPID = AES128(RPIKey, UTF8(\u201cEN-RPI\u201d) || 0x000000000000 || Ti) where  AES128(Key, Data) is for AES crypto function with 128-bit key.  -  Key is RPIKey or Rolling Proximity Key generated at first step. -  Data is concatenation (||-symbol designates concatenation) of the following: -  UTF8(\u201cEN-RPI\u201d) is a 6-byte array corresponding with the EN-RPI line encoded in UTF8. -  0x000000000000 is six zero bytes (to get one 128-bit block in total). -  Ti \u2014 4-byte number of 10-minute temporary interval, calculated as  unix_timestamp div (60 * 10), whereas div stands for integer division. Next, 4 bytes of Associated Encrypted Metadata (AEM) are encoded. It is not disclosed in specification, how exactly this metadata is compiled. Probably, it was done to leave options to expand the protocol.  We\u2019ll talk about metadata in more detail later in the article.  AEM = AES128\u2212CTR(AEMKey, RPID, Metadata), where -  AES128\u2212CTR(Key, IV, Data) is for  AES-CTR crypto-function, and  AEMKey is 128-bit key. Data-out size matches data-in size, so there is no need to add anything to match block size. Rolling Proximity Key is used as input vector  IV. Next, temporary identifier Rolling Proximity ID is combined with Associated Encrypted Metadata, and this is what BLE Payload looks like:\n  This batch is broadcast via Bluetooth Low Energy. Devices that read it and store it locally afterwards.\n 3. Once someone is infected, their last 14 daily keys are published, and all other devices, after downloading these 14 daily keys, generate Rolling Proximity IDs for all the 14 days and compare them to locally stored Rolling Proximity IDs.\n    Since the release of the first version of this protocol, news headlines were informing everyone about a new protocol for tracing contacts that was developed by Apple &amp; Google. After reading headlines only, most readers got an impression of yet another tracking system, and nothing (neither anonymity nor encryption nor local data storage) could dissuade them.\n  A primary private Tracing Key that was used before for Daily Tracing Keys generation has been removed. In the new version, each Exposure Key (Daily Tracing Key earlier) is randomly generated, so it is impossible to establish a link between them even in theory.\n This approach is used in DP-3T Protocol, developed by the scientific community. You can read about this protocol in more detail in one of our previous articles dealing with this protocol in more detail.\n Thus, Apple &amp; Google reaction to criticism was to protect the protocol from two possible attacks:\n Should an intruder find an old backup of a smartphone, they could extract Daily Tracing Key, and this was enough to generate fresh daily keys and broadcast fake new contacts.\n If an intruder manages to find linked keys or even, if they have access to a vast amount of time and computer power, guess a Tracing Key (after someone gets infected and publishes Daily Tracing Keys), they can deduce movements of infected with the help of previously installed BLE beacons, or they can create fake new contacts (in case they have managed to calculate Tracing Key).\n   Generating a temporary key every 10 minutes is not a problem, however, this might come into play with keys downloaded from the server. For example, one day in some big country 10.000 people have reported new infections. This would create 140 thousand daily keys, or 140K*144 ~ 20 million temporary keys (144 temporary keys are created every day, 24*60/10) that a smartphone needs to generate. It is possible to optimise matchmaking by making a comparison and going through all daily keys for a contact\u2019s day number, instead of generating all the possible temporary keys. In this case, if you had around 10 contacts per day, i.e. 140 contacts per two weeks, your phone would need to make 140*10K=1.4M operations, which is quite a considerable number. Many modern smartphones support hardware acceleration for AES encryption, which allows them to match contacts faster and to use less battery power.\n   In the first version of specifications, a temporary identifier Rolling Proximity Identifier was being generated every 10 minutes. At the same time, Bluetooth Low Energy MAC changes every 15 to 20 minutes with different intervals. Since RPI and MAC change was not synchronised, it was possible to associate new MAC with old RPI or new RPI with old MAC. This mistake could allow to track users movements, for example, in trading centres, with BLE beacons. New version of protocol has MAC and RPI changes synchronised. To quote: \u201cThe key schedule is fixed and defined by operating system components, preventing applications from including static or predictable information that could be used for tracking.\u201d\n Protocols which do not work on system level but on app level cannot synchronise MAC and RPI changes this way. Thus,  DP-3T protocol and  OpenCovidTrace generate temporary identifiers at the moment of access to BLE service, and these identifiers are not broadcast.\n  The appearance of encrypted metadata is the most enigmatic change in specifications. It is not clarified what it will contain and who will have access to it, so let\u2019s try to guess.\n  It is generated and encrypted on our device every 15 to 20 minutes and is only 4 bytes in size. It could be one of the following:  1) Information about our device;  2) Time;  3) Location (not precise, since it\u2019s limited to 4 bytes); 4) Time zone;  5) Organisation that published this particular application;  6) Possibly, an ID assigned to you by the organisation that published this app.\n It is broadcasted to all nearby devices (although it\u2019s encrypted) and no one else possesses this information. In case of infection, this data is not uploaded to the server. So, only devices that you were in contact with get this data. It would be logical to assume that this is some sort of data your contact does not possess, which makes time and location options unlikely. Although, even if this data is not used in this protocol, some developers might use it as an extension of sorts. There is a high probability that additional data about you exists.\n This data can only be decrypted after one of its users gets infected and shares their daily key that can be used to generate a key and initialization vector to decrypt this data. Consequently, this data must be only important in case of infection.\n  Phone model, code or the power of the Bluetooth transmitter which is necessary to calculate distance of contact.\n Code of the application, or the organisation or the country that has published this application, so that it is possible to know who has confirmed the diagnosis.\n Worst case scenario, this could be some internal ID that would allow developers of apps that make use of this protocol to make them not anonymous, despite everything that was declared by this protocol in the first place.  In their databases, developers can use ID in metadata to link data of every user with anonymous identifiers protocol uses. In case of an infection it could be possible to find out the ID of the user who could have infected you and request this information.\n  Apple &amp; Google have demonstrated that they can take criticism and promptly react to it. Changes in protocol have removed several security issues, improved performance when matching infected contacts and added new options to app developers.\n  However, the main issue, which is distrust from users towards IT giants when it comes to privacy of their contacts and movement data is unlikely to disappear. It cannot be solved simply by changing the protocol\u2019s name.\n We at OpenCovidTrace are certain that projects of this social importance must be implemented as open source, and that safety and privacy of our user\u2019s data needs to be confirmed by a professional community.\n This is why we\u2019re working on an open source platform  OpenCovidTrace that supports DP-3T protocol and implements Apple &amp; Google protocol with some changes caused by iOS limitations.\n Join us on Github!  Your input and feedback will help our project\u2019s development and together we\u2019ll be able to quench coronavirus outbreaks after the quarantine is lifted.\n       https://github.com/DP-3T/ \u2014 Github repository for DP-3T, a contact-tracing protocol developed by european scientific community.  https://opencovidtrace.org \u2014 our open-source project", "posttime": "2020-05-14 05:31:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,app,apple,\u534f\u8bae", "title": "\u65b0Apple\u548cGoogle\u8054\u7cfb\u4eba\u8ffd\u8e2a\u534f\u8bae\u8ff0\u8bc4", "title_en": "Review of New Apple and Google Contact Tracing Protocol", "transed": 1, "url": "https://medium.com/@OpenTrace/review-of-new-apple-and-google-contact-tracing-protocol-7696c9203967", "via": "", "real_tags": ["google", "app", "apple", "\u534f\u8bae"]}, {"category": "", "categoryclass": "", "imagename": "0eebe80b7084a6bda7a8622a1b6b9730.png", "infoid": 1002022, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PermalLink GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\nV0.8.0\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u7248\u672c\uff0c\u5b83\u5305\u62ec\u51e0\u4e2a\u7a81\u7834\u6027\u7684\u66f4\u6539\u3001\u7ef4\u62a4\u4fee\u590d\u548c\u6587\u6863\u66f4\u65b0\ud83c\udf89\u3002\nuseEffect\u3001useLayoutEffect\u3001useMemo\u3001useCallback\u3001useImperativeHandle Now\u90fd\u4e00\u76f4\u5b9e\u73b0\u5230useX7\uff0c\u4ee5\u63d0\u9ad8\u53ef\u7528\u6027\u3002\n\u652f\u6301Reaction Hooks API\u3002\u5141\u8bb8\u7f16\u5199\u5177\u6709\u72b6\u6001\u548c\u590d\u6742\u4ea4\u4e92\u7684\u529f\u80fd\u7ec4\u4ef6\u3002\n\u8fd9\u4e9b\u7ec4\u4ef6\u4f7f\u7528BuckleScript 5.0.0+\u9644\u5e26\u7684\u65b0PPX\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u6587\u6863\u3002\n\u8fd9\u91cc\u6ca1\u6709\u7a81\u7834\u6027\u7684\u53d8\u5316\uff0c\u4f46\u662f\u5982\u679c\u60a8\u5bf9\u8fc1\u79fb\u67d0\u4e9b\u7ec4\u4ef6\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5347\u7ea7\u811a\u672c\u3002\u5b83\u5c06\u5305\u88c5\u73b0\u6709\u7684ReasonReact\u7ec4\u4ef6\uff0c\u5c31\u50cf\u5b83\u4eec\u662fHooks\u7ec4\u4ef6\u4e00\u6837\u3002\nDOM\u9053\u5177Crossorigin\u73b0\u5728\u88ab\u6b63\u786e\u547d\u540d\u4e3aCrossOrigin\u3002\u8fd9\u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u7a81\u7834\u6027\u53d8\u5316\uff0c\u56e0\u6b64\u7248\u672c\u98a0\u7c38(#290)\u3002\n\u7a81\u7834\u6027\u7684\u5c0f\u53d8\u5316(\u53ea\u6709\u5f53\u4f60\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u5347\u7ea7\u7684\u65f6\u5019)\u3002\u8fc1\u79fb/\u5347\u7ea7\u811a\u672c\u4e00\u5982\u65e2\u5f80\u5730\u5728\u8fd9\u91cc\u3002\nReactEventRe\u73b0\u5728\u5df2\u5f03\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fReactEvent\u3002\u5b83\u4eec\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u540e\u8005\u5e26\u6765\u4e86\u751f\u6d3b\u8d28\u91cf\u7684\u6781\u5927\u63d0\u9ad8\uff0c\u90a3\u5c31\u662f\u628a\u6211\u4eec\u7684\u8001\u4eba\u53d8\u6210\uff1a\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528-&gt\uff1b\u5feb\u901f\u7ba1\u9053(|)\u3002\u5728OCaml\u8bed\u6cd5\u4e2d)\uff0c\u5e76\u4e14\u6211\u4eec\u5df2\u7ecf\u66f4\u6539\u4e86\u5404\u79cdReactEvent\u6a21\u5757\u4e2d\u7684target\u7684\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2aJs.t\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fDom.element\u3002\u540c\u6837\u7684\u60c5\u51b5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u8fd9\u6837\u7684\u5c5e\u6027\u3002\n\u6700\u540e\uff0cbs.send.Pipe\u5df2\u88ab\u975e\u6b63\u5f0f\u5f03\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u5220\u9664\u4e86\u8fd9\u4e9b\u7528\u6cd5\u3002\u4e0d\u4f7f\u7528e|&gt\uff1bReactEventRe.Mouse.PrevenentDefault\uff0c\u800c\u4f7f\u7528e-&gt\uff1bReactEvent.Mouse.PrevenentDefault\u6216ReactEvent.Mouse.PrevenentDefault(E)\u3002\u8003\u8651\u5230\u6240\u6709\u56e0\u7d20\uff0cbs.send.Pipe\u662f\u6700\u7e41\u91cd\u7684BuckleScript\u7279\u6b8a\u6279\u6ce8\u3002\u5982\u679c\u60a8\u7684\u5e93\u6b63\u5728\u4f7f\u7528\u5b83\uff0c\u8bf7\u8003\u8651\u4e5f\u5c06\u5176\u5220\u9664\u3002\u8c22\u8c22!\u3002\n\u788e\u7247\u5df2\u767b\u9646\uff01&lt\uff1b&gt\uff1b\u5b501\u5b502&lt\uff1b/&gt\uff1b\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u788e\u7247\u4e0a\u7684ReactJS&39\uff1b\u6587\u6863\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u76ee\u524d\u4e0d\u652f\u6301\uff1a\n\u6b64\u5916\uff0cDOM\u7ec4\u4ef6\u5b50\u9879\u6269\u5c55&lt\uff1bdiv&gt\uff1b.foo&lt\uff1b/div&gt\uff1b\u73b0\u5728\u53ef\u4ee5\u5de5\u4f5c\u3002\u4e0d\u518d\u9700\u8981\u4f7f\u7528ReasonReact.createDomElement\u540e\u5907\uff01\nDOM PROPS_TYPE\u3001_OPEN\u7b49(\u53c2\u89c1\u4e0b\u9762\u76840.4.2\u7248\u672c\u8bf4\u660e)\u88ab\u6b63\u5f0f\u5220\u9664\u3002\u4f7f\u7528type_\u3001open_\u7b49\u3002\n\u5b57\u6bb5\u8ba2\u9605\u5df2\u5f03\u7528\uff0c\u73b0\u5728\u5df2\u5b8c\u5168\u5220\u9664\u3002\u8bf7\u6539\u7528\u65b0\u7684\u8ba2\u9605\u5e2e\u52a9\u5668\u3002\nstringToElement\u3001nullElement\u3001arrayToElement\u4e5f\u4e00\u53bb\u4e0d\u590d\u8fd4\u4e86\u3002\u4f7f\u7528ReasonReact.string\u3001null\u3001array\u30020.4.0\u4e2d\u4ee5\u524d\u7684\u8fc1\u79fb\u811a\u672c\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\nReasonReact.createDomElement\u66f4\u6539\u4e3aReactDOMRe.createElementVariadi\u3002\u8fd9\u4e0eReactDOMRe.createElement\u66f4\u52a0\u4e00\u81f4\u3002\u4e24\u8005\u90fd\u7531JSX\u8f6c\u6362\u4f7f\u7528\uff1b\u540e\u8005\u662fDOM\u5143\u7d20\u7684\u5b50\u7ea7(\u5982\u4e0a\u6240\u8ff0)\uff0c\u5e76\u4e14\u6027\u80fd\u5f00\u9500\u5f88\u5c0f\u3002\nDOM\u7ec4\u4ef6\u73b0\u5728\u65e0\u9700\u4fee\u6539\u5373\u53ef\u652f\u6301aria-*\u5c5e\u6027\uff1a&lt\uff1bdiv ariaLabel=&#34\uff1bfoo&#34\uff1b/&gt\uff1b\u3002CamelCase ariaStuff\u5c06\u7f16\u8bd1\u6210\u548f\u53f9\u8c03\u3002\n\u5bf9\u4e8eDOM\u5c5e\u6027\uff0c\u4e0d\u4f7f\u7528_open\u3001_type\u3001_egin\u3001_end\u3001_in\u3001_to\uff0c\u800c\u4f7f\u7528\u65b0\u7684\u5c3e\u90e8\u4e0b\u5212\u7ebf\u7248\u672c\u4ee5\u4fdd\u6301\u4e00\u81f4\u6027\uff1aopen_\u3001type_\u7b49\u3002\u73b0\u5728\u4e0d\u5efa\u8bae\u4f7f\u7528\u4ee5\u524d\u7684\u524d\u5bfc\u4e0b\u5212\u7ebf\u7248\u672c\u3002\n\u73b0\u5728\u6062\u590dReasonReact.Callback\u6a21\u5757\uff0c\u5e76\u5728\u5176\u4e0a\u653e\u7f6e\u4e00\u4e2a\u5f03\u7528\u8b66\u544a\u3002\u8fd9\u6837\uff0c\u81f3\u5c11\u60a8\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u9879\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7f16\u8bd1\u3002\n\u653e\u677ewrapJsForReason\u548cwrapReasonForJs\u7c7b\u578b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528bs.Summary\u8fdb\u884c\u4e92\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528Js.t\u5bf9\u8c61\u3002\n\u6839\u636e\u6211\u4eec\u4e4b\u524d\u5728\u6587\u6863\u4e2d\u7684\u8b66\u544a\uff0cddmount\u73b0\u5728\u8fd4\u56de\u5355\u4f4d\u3002\u8981\u89e6\u53d1\u72b6\u6001\u66f4\u65b0\uff0c\u8bf7\u4f7f\u7528self.send(MyAction)\u3002\n\u771f\u6b63\u5220\u9664self.duce\uff1b\u4f7f\u7528self.send(\u4e0d\u8981\u4e0eReducer\u6df7\u6dc6\uff0c\u540e\u8005\u4ecd\u7136\u5b58\u5728)\u3002\nWill ReceiveProps\u5df2\u5f03\u7528\u3002\u6211\u4eec\u5c06\u5f88\u5feb\u8fc7\u6e21\u5230Reaction 16\uff0c\u5e76\u91ca\u653e\u7ed1\u5b9a\u5230DerveStateFromProps\u3002\n\u6b64\u7248\u672c\u9700\u8981bs-Platform 2.2.2\uff01\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u5347\u7ea7\u5230\u5b83\uff0c\u522b\u62c5\u5fc3\uff1b\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528ResonReact 0.3.2\u3002\u53ea\u6709\u4e24\u4e2a\u5c0f\u53d8\u5316\u3002\n\u4f7f\u7528\u65b0\u7684bs\u5e73\u53f0Js.Nullable.toOption\u3002\u4f7f\u7528ReasonReact(\u6b64\u7248\u672c\u7684\u4e3b\u8981\u76ee\u7684)\u65f6\uff0c\u4e0d\u518d\u51fa\u73b0\u5f03\u7528\u8b66\u544a\u3002\nself.duce\u73b0\u5728\u88ab\u66f4\u6539\u4e3aself.send\uff0c\u5177\u6709\u66f4\u7b80\u5355\u7684\u8bed\u4e49\uff0c\u53ef\u4ee5\u6d88\u9664\u7acb\u5373\u8c03\u7528\u6848\u4f8b\u4e2d\u7684\u6df7\u4e71\u3002\u66f4\u9ad8\u7684\u6027\u80fd\u548c\u66f4\u5c11\u7684\u5206\u914d\uff01\u8fc1\u79fb\u811a\u672c\u5c06\u4e3a\u60a8\u8f6c\u6362\u5927\u90e8\u5206\u4ee3\u7801\u3002\n\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u4e2a\u7a81\u7834\u6027\u7684\u53d8\u5316\uff0c\u4f46\u53ea\u662f\u56e0\u4e3a\u5220\u9664\u4e86\u4e00\u4e9b\u4e0d\u53d7\u6b22\u8fce\u7684\u4e1c\u897f\u3002\u8fd9\u6b21\u6ca1\u6709\u8fc1\u79fb\u811a\u672c\uff1b\u56e0\u4e3a\u60a8\u9047\u5230\u7684\u51e0\u4e2a\u7834\u574f\u6027\u66f4\u6539(\u5982\u679c\u6709)\u5e94\u8be5\u5df2\u7ecf\u88ab\u7c7b\u578b\u7cfb\u7edf\u53d1\u73b0\u5e76\u5728\u51e0\u79d2\u5185\u4fee\u590d\u3002\n\u6240\u6709\u6587\u4ef6\u90fd\u662f\u5927\u5199\u7684\u3002\u8fd9\u9075\u5faa\u4e86\u65b0\u7684\u793e\u533a\u4e60\u8bed\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5185\u90e8\u66f4\u6539\u4e0d\u4f1a\u5f71\u54cd\u60a8\u5bf9ReasonReact\u7684\u4f7f\u7528\u3002\n\u66f4\u591a\u7684DOM\u9053\u5177\u3002\u6bcf\u5e74\u65b0\u589e\u7684DOM\u9053\u5177\u6bd4\u6211\u4eec\u53d1\u5e03\u7684\u6570\u91cf\u8fd8\u8981\u591a\u3002\u6d3b\u7740\u771f\u662f\u4e00\u6bb5\u6709\u8da3\u7684\u65f6\u5149\u3002\nRef\u73b0\u5728\u7684\u7c7b\u578b\u4e3aJs.nullable(Dom.element)\uff0c\u800c\u4e0d\u662fJs.null(Dom.element)\u3002Js.nullable\u662f\u6765\u81eaBuckleScript\u7684\u65b0\u793e\u533a\u4e60\u8bed\u3002\u68c0\u67e5\u4ee3\u7801\u5e93\u5e76\u5c06state.myRef\uff1a=Js.Null.to_opt(TheRef)\u66f4\u6539\u4e3astate.myRef\uff1a=Js.Nullable.to_opt(TheRef)\u3002\u6211\u4eec\u8fd8\u5efa\u8bae\u60a8\u5220\u9664\u6240\u6709\u63d0\u5230\u7684Js.null\u3001Js.unfinded\u3001Js.Null\u548cJs.Unfinded\u3002\u53ef\u4ee5\u68c0\u67e5JavaScript null\u548c\u672a\u5b9a\u4e49\u7684Js.Nullable\uff0c\u4ece\u800c\u4f7fJS\u4e92\u64cd\u4f5c\u66f4\u52a0\u5065\u58ee\u3002\u5728\u8fc7\u53bb\uff0c\u4eba\u4eec\u952e\u5165\u67d0\u4e9b\u503c(\u7279\u522b\u662fjs\u5bf9\u8c61\u5b57\u6bb5)\uff0c\u4f8b\u5982NULL\uff0c\u7136\u540e\u5fd8\u8bb0\u5b83\u4eec\u53ef\u4ee5\u662f\u672a\u5b9a\u4e49\u7684\u3002\nDOM\u7ec4\u4ef6(ReactDOMRe)\u7684OPEN\u3001END\u548cIN\u5c5e\u6027\u73b0\u5728\u66f4\u6539\u4e3a_OPEN\u3001_END\u548c_IN\uff0c\u4ee5\u907f\u514d\u4f7f\u7528\u4fdd\u7559\u5173\u952e\u5b57\u3002\u53ea\u6709\u5f53\u60a8\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\u5e76\u4e14\u4f7f\u7528\u65e7\u8bed\u6cd5\u65f6\uff0c\u8fd9\u624d\u662f\u6709\u5bb3\u7684\u3002\n\u91cd\u5927\u66f4\u65b0\uff0c\u4f46\u518d\u6b21\u6ca1\u6709\u7834\u574f\u6027\u66f4\u6539\uff0c\u5e76\u518d\u6b21\u4f7f\u7528\u65b9\u4fbf\u7684\u8fc1\u79fb\u811a\u672c\uff01=)\u3002\n\u6b64\u7248\u672c\u4e2d\u6700\u5927\u7684\u53d8\u5316\u662f\u4e0d\u63a8\u8350\u4f7f\u7528statefComponent\u548cstatefComponentWithRetainedProps\u3002statelessComponent\u4fdd\u6301\u4e0d\u53d8\u3002\n\u9605\u8bfb\u672c\u8fc1\u79fb\u6307\u5357\u540e\uff0c\u4f7f\u7528(\u6216\u4e0d\u4f7f\u7528)\u8fc1\u79fb\u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1aNodeReasonFile.re\uff1aNode node_modules/reason-react/migrate/from02xTo024.js myReasonFile.re\u3002\n\u4e0d\u518d\u9700\u8981ReasonReact.statefulComponent\u3002\u73b0\u5728\uff0c\u6bcf\u4e2a\u72b6\u6001\u66f4\u6539\u90fd\u901a\u8fc7\u79f0\u4e3aReducer&#34\uff1b(\u4e5f\u5c31\u662f\u72b6\u6001\u673a\u7684\u7092\u4f5c\u8bcd)\u7684\u4e13\u7528\u3001\u96c6\u4e2d\u3001\u53cd\u5e94\u5149\u7ea4\u5c31\u7eea\u7684\u672c\u5730\u7ec4\u4ef6\u673a\u5236\u6765\u63a7\u5236\u3002\n\u4f8b\u5982\uff0c\u5c06self.update handleClick(\u5176\u4e2dhandleClick\u662fFun Self=&gt\uff1bReasonReact.Update{.self.state\uff0cfoo\uff1abar})\u66ff\u6362\u4e3aself.duce(FUN_=&gt\uff1bClick)\u3002Click\u53ea\u662f\u60a8\u5b9a\u4e49\u7684\u4e00\u4e2a\u53d8\u4f53\u6784\u9020\u51fd\u6570\u3002\u8ba9\u6211\u4eec\u79f0\u5b83\u4e3a\u884c\u52a8\u5427\u3002\n\u51cf\u901f\u5668\uff1a\u6709\u8da3\u7684\u64cd\u4f5c\u72b6\u6001=&gt\uff1b\u5207\u6362\u64cd\u4f5c{|Click=&gt\uff1bReasonReact\u3002\u66f4\u65b0{.state\uff0cfoo\uff1abar}}\u3002\n\u6709\u5173\u64cd\u4f5c\u3001\u51cf\u91cf\u548c\u65b0\u589e\u66f4\u65b0\u7684\u76f8\u5173\u7ae0\u8282\u5728\u4e3b\u8981\u6587\u6863\u4e2d\u3002\n\u4ee5\u524d\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528ReasonReact.SilentUpdate\u6765\u5904\u7406ReactJS&#39\uff1b\u5b9e\u4f8b\u53d8\u91cf\u6a21\u5f0f(\u4f8b\u5982\uff0c\u5c06\u5c5e\u6027\u9644\u52a0\u5230\u7ec4\u4ef6\u7c7b\u672c\u8eab\uff0c\u5982\u8ba1\u65f6\u5668ID\u3001\u8ba2\u9605\u3001\u5f15\u7528\u7b49)\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8f6c\u5230\u4f7f\u7528\u539f\u56e0\u5f15\u7528\u5355\u5143\u683c(\u800c\u4e0d\u662fReaction\u5f15\u7528\uff0c\u5373\u53ef\u53d8\u539f\u56e0\u5f15\u7528)\u3002\u8bf7\u53c2\u9605\u66f4\u65b0\u7684\u5b9e\u4f8b\u53d8\u91cf\u90e8\u5206\u3002\n\u65b0\u7684\u5efa\u8bae\u8fd8\u89e3\u51b3\u4e86\u5728\u6e32\u67d3\u4e2d\u6307\u5b9a\u591a\u4e2a\u5f15\u7528\u7684\u89d2\u4f8b\u9519\u8bef\u3002\nReasonReact\u4e2d\u672a\u6765\u7684ReactJS\u7ea4\u7a0b\u4e0d\u80fd\u5f88\u597d\u5730\u5904\u7406\u8fd4\u56de\u65b0\u72b6\u6001\u7684\u751f\u547d\u5468\u671f\u4e8b\u4ef6\uff0c\u4e5f\u5c31\u662f\uff1a\n\u8bf7\u8fd4\u56de\u524d\u8005\u7684ReasonReact.NoUpdate(\u76ee\u524d\u4e0d\u80fd\u4e3a\u540e\u8005\u505a\u592a\u591a\u4e8b\u60c5\uff0c\u8bf7\u8fd4\u56deWill ReceiveProps\u3002\u4fdd\u6301\u539f\u6837)\u3002\u5982\u679c\u60a8\u786e\u5b9e\u9700\u8981\u89e6\u53d1\u72b6\u6001\u66f4\u6539\uff0c\u90a3\u4e48\u5728\u8fd4\u56de\u4e4b\u524d\u4f7f\u7528self.duce(Fun()=&gt\uff1bBar)()\uff0c\u4e5f\u5c31\u662f\u7acb\u5373\u5e94\u7528Reduce\u3002\n\u6211\u4eec\u5c06\u5728\u672a\u6765\u4f7f\u6240\u6709\u751f\u547d\u5468\u671f\u8fd4\u56de\u5355\u4f4d\uff1b\u8fd9\u5c06\u662f\u4e00\u4e2a\u66f4\u6539ReasonReact.NoUpdate\u4e3a\u7a7a\u7684\u7b80\u5355\u4ee3\u7801\u3002\nREACTION/REACTION-dom\u73b0\u5728\u662f\u4f9d\u8d56\u9879\uff0c\u800c\u4e0d\u662fpeerDependency\u3002\u8fd9\u9075\u5faa\u5c06\u7ed1\u5b9a\u5e93\u4f5c\u4e3a\u5b9e\u73b0\u7ec6\u8282\u7684Reason/BS\u4e60\u60ef\u7528\u6cd5\u3002NPM/Yarn\u4ecd\u7136\u53ef\u4ee5\u6b63\u786e\u5730\u5220\u9664\u591a\u4e2a\u7248\u672c\u7684REACTION/REACTION-DOM\uff1b\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u7ec8\u4e8e\u5220\u9664\u4e86ReactRe\u3002\u5b83\u4ece0.1.4\u5f00\u59cb\u5c31\u88ab\u5f03\u7528\u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u4e0b\u9762\u76840.1.4\u90e8\u5206\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u8fc1\u79fb\u3002\n\u6211\u4eec\u5df2\u7ecf\u7ed9\u4e86\u4eba\u4eec\u4e00\u70b9\u5598\u606f\u7684\u7a7a\u95f4\uff0c\u5728\u6253\u7834\u53d8\u5316\u65b9\u9762\uff1b\u73b0\u5728\u6211\u4eec\u91cd\u65b0\u53d1\u5e03\u4e86\u53e6\u4e00\u4e2a\uff0c\u8fd9\u4e00\u6b21\u662f\u4e00\u4e2a\u5c0f\u7684\u8fc1\u79fb\u811a\u672c\u3002\u5b89\u88c5Reason-Reaction\u4e4b\u540e\uff0c\u4f7f\u7528\u8282\u70b9node_modules/reason-react/oldScriptCarefulMigrateFrom015To020.js myReasonFile.re\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5c06\u72b6\u6001\u8f6c\u5230\u4e86Self\u4e2d\uff0c\u800c\u4e0d\u662f\u6709\u8da3\u7684\u72b6\u6001Self=&gt\uff1b.\uff0c\u73b0\u5728\uff0c\u60a8\u6709\u4e86\u4e50\u8da3{state\uff0cHandle}=&gt\uff1b.\u3002\u6574\u5f20\u5531\u7247\u90fd\u662f\u6211\u81ea\u5df1\u7684\u3002\u4f60\u53ef\u4ee5\u968f\u610f\u62c6\u5378\uff0c\u5f97\u5230\u4f60\u9700\u8981\u7684\u4efb\u4f55\u4e1c\u897f\uff01\nSelf\u73b0\u5728\u5305\u542b\u4e00\u4e2a\u65b0\u7684\u9053\u5177\uff0cretainedProps\u3002\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684(\u975e\u4e2d\u65ad\u7684)\u529f\u80fd\uff0c\u89e3\u51b3\u4e86\u4ee5\u524d\u5c06\u9053\u5177\u8f6c\u53d1\u5230\u72b6\u6001\u7684\u7a0d\u5fae\u4e0d\u65b9\u4fbf\u7684\u65b9\u5f0f\uff0c\u5982\u65e7API\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u73b0\u5728\u6709\u4e00\u4e2a\u4e13\u95e8\u7684API\u4e3a\u5b83\uff01\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0\u4e86\u8fd9\u4e00\u70b9\u3002\n\u4e0d\u95f4\u65ad\u66f4\u65b0\u3002\u4e0ebs-platform&gt\uff1b=1.8.0\u914d\u5408\u4f7f\u7528\u6548\u679c\u66f4\u597d\uff0c\u5b83\u9644\u5e26\u4ee5\u4e0bReasonReact JSX\u4fee\u590d\uff1a\n\u8c03\u6574ReactDOMRe&#39\uff1b\u7684\u9053\u5177\u548c\u6837\u5f0f\uff0c\u4ee5\u5305\u542b\u66f4\u51c6\u786e\u7684DOM\u548c\u6837\u5f0f\u5c5e\u6027\u548c\u6837\u5f0f(#9\u3001#15\u3001#17)\u3002\n\u6dfb\u52a0ReactDOMRe.Style.unsafeAddProp\u4ee5\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u5c06\u9053\u5177\u6dfb\u52a0\u5230\u73b0\u6709\u6837\u5f0f\u3002\u786e\u4fdd\u4f60\u77e5\u9053\u4f60\u5728\u505a\u4ec0\u4e48\uff01\n\u4fee\u590d\u4e0d\u540c\u4f4d\u7f6e\u7684reactRef&39\uff1b\u7684\u7c7b\u578b\u3002Reaction\u5f15\u7528\u5b9e\u9645\u4e0a\u603b\u662f\u53ef\u4ee5\u4e3a\u7a7a\u7684\uff1b\u6211\u4eec\u4ee5\u524d\u53ea\u4e3aDOM\u5f15\u7528\u786e\u8ba4\u4e86\u5b83\uff0c\u73b0\u5728\u6211\u4eec\u4e5f\u4e3a\u81ea\u5b9a\u4e49(\u590d\u5408)\u7ec4\u4ef6\u5f15\u7528\u786e\u8ba4\u4e86\u5b83\u3002\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\u5728\u8fd9\u91cc\u3002\u8fd9\u5728\u6211\u4eec\u7684\u6587\u6863\u7684\u53c2\u8003\u90e8\u5206\u4e5f\u6709\u8bb0\u5f55\u3002\n\u91cd\u5927\u66f4\u65b0\uff01\u867d\u7136\u8fd9\u662f100%\u5411\u540e\u517c\u5bb9\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u91cd\u5927\u7684\u7248\u672c\u8df3\u8dc3\u3002\u6211\u4eec\u5df2\u7ecf\u6839\u636e\u4f60\u4eec\u6240\u6709\u4e86\u4e0d\u8d77\u7684\u4eba\u7684\u53cd\u9988\u4fee\u6539\u4e86\u6574\u4e2aAPI\uff0c\u5e76\u4e14\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e10\u8fdb\u7684\u8fc1\u79fb\u8def\u5f84\u3002\n\u5b89\u88c5\u65b0\u7684\u4f9d\u8d56\u9879\u540e\uff0c\u60a8\u7684\u73b0\u6709\u4ee3\u7801\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\u3002\u90a3\u4e0d\u662f\u5f88\u68d2\u5417\uff1f\u4f60\u53ef\u4ee5\u9012\u589e\u5730\u628a\u4e1c\u897f\u8f6c\u6362\u8fc7\u6765\u3002\u65e7\u6a21\u5757\u5c06\u4e00\u76f4\u4fdd\u7559\u5230\u4e0b\u4e00\u4e2a\u6216\u4e0b\u4e00\u4e2a\u7248\u672c\u3002\u522b\u6025!\nReactDOMRe\u3001ReactDOMServerRe\u548cReactEventRe\u4fdd\u6301\u539f\u6837\u3002\u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528ReactRe(\u4f46\u4ecd\u7136\u4fdd\u7559)\uff0c\u800c\u652f\u6301\u65b0\u7684\u5b9e\u73b0ReasonReact\u3002\nAPI\u4e0d\u518d\u9700\u8981\u6a21\u5757/\u51fd\u6570\u5668(\u8bf7\u4e0d\u8981\u4e3a\u65b0\u7684\u51fd\u6570\u7ec4\u5408\u529f\u80fd\u800c\u75af\u72c2\uff01)\u3002\n\u4ee5\u4e0b\u5b9a\u4e49\u539f\u5c01\u4e0d\u52a8\u5730\u4eceReactRe\u5ef6\u7eed\u5230ReasonReact\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u641c\u7d22\u548c\u66ff\u6362\u5c31\u53ef\u4ee5\u4fee\u590d\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\uff1a\ncreateElement(\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\uff0c\u8fd9\u4e0d\u662f\u65e0\u5904\u4e0d\u5728\u7684ReactJS React.createElement)\u3002\u5b83\u53ea\u5728\u9003\u751f\u8231\u95e8\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\u5982\u679c\u4f60\u4ece\u672a\u7528\u8fc7\u5b83\uff1a\u592a\u68d2\u4e86\uff01\n\u5c0f\u5199jsx&lt\uff1bdiv&gt\uff1b\u4efb\u4f55&lt\uff1b/div&gt\uff1b\u6ca1\u6709\u66f4\u6539&lt\uff1b/div&gt\uff1b\u3002uppercase&lt\uff1bfoo ref=a key=b bar=baz&gt\uff1bhello\u518d\u89c1&lt\uff1b/foo&gt\uff1b\u7528\u4e8e\u8f6c\u6362\u4e3aFoo.createElement ref\uff1a\uff1aa key\uff1a\uff1ab bar\uff1a\uff1abaz[hello\uff0c\u518d\u89c1]\u3002\u5b83\u73b0\u5728\u8f6c\u6362\u4e3aReasonReact.element ref\uff1a\uff1aa key\uff1a\uff1ab(Foo.make bar\uff1a\uff1abaz[|hello\uff0c\u518d\u89c1|])\u3002\u6211\u4eec\u5df2\u7ecf\u63d0\u53d6\u4e86ref\u548ckey\uff0c\u5e76\u4e13\u95e8\u8c03\u7528\u4e86\u4e00\u4e2a\u597d\u7684\u63aa\u65bd\uff0c\u73b0\u5728\u6211\u4eec\u4f7f\u7528array\uff0c\u800c\u4e0d\u662f\u4f7f\u7528list\u4f5c\u4e3a\u5b50\u7ea7\u3002\u66f4\u60ef\u7528\u7684ReactJS\uff0clist&lt\uff1b-&gt\uff1b\u6570\u7ec4\u8f6c\u6362\u6405\u52a8\u3002\n\u8981\u4f7f\u7528\u65b0\u7684JSX\uff0c\u8bf7\u5c06bsconfig.json&#39\uff1b\u7684{&#34\uff1bReaction&#34\uff1b\uff1a{&#34\uff1bReaction-JSX&#34\uff1b\uff1atrue}}\u66f4\u6539\u4e3a{&#34\uff1bReaction&#34\uff1b\uff1a{&#34\uff1bReaction-JSX&#34\uff1b\uff1a2}}\u3002\u867d\u7136\u60a8\u5728\u5f00\u59cb\u65f6\u53ef\u80fd\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u66f4\u6539\u6574\u4e2a\u9879\u76ee\u4e2d\u7684\u6240\u6709JSX\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u5230\u5904\u90fd\u662f\u7c7b\u578b\u9519\u8bef\u3002\u76f8\u53cd\uff0c\u8bf7\u4fdd\u6301\u60a8\u7684\u65e7bsconfig.json\u4e0d\u53d8\uff0c\u5bf9\u4e8e\u60a8\u60f3\u8981\u6709\u9009\u62e9\u5730\u8f6c\u6362\u7684JSX\uff0c\u8bf7\u5728\u6587\u4ef6\u9876\u90e8\u6dfb\u52a0\u4e00\u4e2a[@bs.config{jsx\uff1a2}]\uff1b\u3002\u4e00\u65e6\u60a8\u8f6c\u6362\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u8bf7\u5207\u6362\u5230bsconfig.json\u4e2d\u7684{&#34\uff1bact-jsx&#34\uff1b\uff1a2}\u5e76\u5220\u9664\u6bcf\u4e2a\u6587\u4ef6\u9876\u90e8\u7684@bs.config\u3002\n\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u8f6c\u5230bsconfig.json\u4e2d\u7684{&#34\uff1breact-jsx&#34\uff1b\uff1a2}\uff0c\u5e76\u5728\u8981\u4f7f\u7528\u65e7\u7684\u5927\u5199JSX\u8f6c\u6362\u7684\u6587\u4ef6\u9876\u90e8\u653e\u7f6e\u4e00\u4e2a[@bs.config{jsx\uff1a1}]\u3002\n\u5728\u5f00\u59cb\u4e0b\u9762\u51e0\u8282\u4e4b\u524d\uff0c\u8bf7\u5148\u7b80\u5355\u6d4f\u89c8\u4e00\u4e0b\u6587\u6863\u9875\u9762\u4e0a\u7684\u65b0API\u3002\ncreateElement\u73b0\u5728\u79f0\u4e3aFoo.make\u3002make\u5728Reason/OCaml\u4e2d\u662f\u4e00\u4e2a\u66f4\u60ef\u7528\u7684\u672f\u8bed\uff0c\u4e5f\u662ftype\u7684\u7f29\u5199\uff01\nComponentBag\u7684\u6982\u5ff5\u73b0\u5728\u79f0\u4e3aSelf\u3002\u6211\u4eec\u8ba4\u4e3a\u5b83\u4f1a\u662f\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u540d\u5b57\u3002\u65b0\u7684Self\u4e0d\u518d\u5305\u542b\u9053\u5177\u3001state\u3001setState\u548cinstanceVars\uff1b\u5728\u65b0\u7684ReasonReact\u4e2d\u4e0d\u518d\u9700\u8981\u8fd9\u4e9b\u3002\n\u66ff\u6362\u4e3a\u65b0\u7684make(\u4ee5\u524d\u4e3acreateElement)\u8c03\u7528\uff0c\u8be5\u8c03\u7528\u63a5\u53d7\u5e26\u6807\u7b7e\u7684\u53c2\u6570\u3002\u8bf7\u53c2\u9605\u672c\u8282\u4e2d\u7684\u66f4\u591a\u5185\u5bb9\u3002\n\u73b0\u5728\u5982\u4f55\u5728\u66f4\u65b0/\u5904\u7406\u56de\u8c03\u4e2d\u8bbf\u95ee\u9053\u5177\uff1f\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u56de\u8c03\u5b9a\u4e49\u79fb\u5230make\u51fd\u6570\u4f53\u4e2d\u3002\n\u4e0d\u518d\u9700\u8981\u4e86\u3002\u5728ReactJS\u4e2d\uff0c\u5c06\u5b9e\u4f8b\u53d8\u91cf\u9644\u52a0\u5230\u7ec4\u4ef6\u4e00\u76f4\u662f\u5f15\u51651.\u53ef\u53d8\u72b6\u6001(2.\u4e0d\u4f1a\u89e6\u53d1\u91cd\u65b0\u5448\u73b0)\u7684\u4e00\u79cd\u72e1\u733e\u65b9\u5f0f\u3002\u73b0\u5728\uff0c\u5c06\u60a8\u7684\u503c\u7f6e\u4e8e\u72b6\u6001\u5e76\u5728\u56de\u8c03&amp\uff1b\u751f\u547d\u5468\u671f\u4e2d\u4f7f\u7528ReasonReact.SilentUpdate(\u4e0d\u89e6\u53d1\u91cd\u65b0\u5448\u73b0\uff0c\u4f46\u66f4\u65b0\u72b6\u6001)\u53d6\u4ee3\u4e86\u6574\u4e2a\u6982\u5ff5\u3002\n\u4e0d\u8981\u4e0e\u60a8\u7ecf\u5e38\u4f7f\u7528\u7684ReactJS setState\u6df7\u6dc6(\u4e0d\u8fc7\uff0c\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u672c\u8fc1\u79fb\u6307\u5357\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9)\u3002\u8fd9\u662f\u4e00\u4e2a\u9003\u751f\u8231\u53e3\uff0c\u4f8b\u5982\uff0c\u5f53\u60a8\u4e0d\u80fd\u4ece\u66f4\u65b0\u5668\u8fd4\u56de\u9009\u9879\u72b6\u6001\u65f6\uff0c\u56e0\u4e3a\u60a8\u5e0c\u671b\u4ee5\u5f3a\u5236\u65b9\u5f0f\u548c\u5f02\u6b65\u65b9\u5f0f\u8bbe\u7f6e\u72b6\u6001\u3002\u65b0\u7684\u4e60\u60ef\u7528\u6cd5\u662f\u53ea\u4f7f\u7528self.update myhandler()\u3002\u6ce8\u610fupdate myhandler\u50cf\u4ee5\u524d\u4e00\u6837\u8fd4\u56de\u4e00\u4e2a\u56de\u8c03\uff0c\u4f46\u662f\u73b0\u5728\u60a8\u7acb\u5373\u5e94\u7528\u4e86\u8be5\u56de\u8c03\u3002\n\u66f4\u65b0\u7a0b\u5e8f\u548c\u5904\u7406\u7a0b\u5e8f\u73b0\u5728\u79f0\u4e3a\u66f4\u65b0\u548c\u5904\u7406\u7a0b\u5e8f\u3002\u5b83\u4eec\u5e94\u8be5\u662f\u4e00\u4e2a\u5bb9\u6613\u641c\u7d22\u548c\u66ff\u6362\u7684\u5de5\u5177\u3002\n\u4ed6\u4eec\u63a5\u53d7\u7684\u56de\u8c03\u7b7e\u540d\u5df2\u66f4\u6539\u3002\u4ee3\u66ff\u4f8b\u5982\u66f4\u65b0\u7a0b\u5e8f(FUN{props\uff0cstate\uff0cinstanceVars}event=&gt\uff1bome{.state\uff0cfoo\uff1atrue})\uff0c\u5b83\u73b0\u5728\u66f4\u65b0(Fun\u4e8b\u4ef6\u72b6\u6001Self=&gt\uff1bReasonReact.Update{.state\uff0cfoo\uff1atrue})\u3002\u65b0\u56de\u8c03\u7684\u6b63\u5f0f\u7b80\u5316\u7c7b\u578b\uff1apayload=&gt\uff1bstate=&gt\uff1bself=&gt\uff1bupdate state\u3002\nREF\u73b0\u5728\u9a7b\u7559\u5728state\u4e2d\uff0c\u5982\u4e0a\u9762ComponentBag.instanceVars\u4e2d\u6240\u8ff0\u3002\u60a8\u73b0\u5728\u4f7f\u7528update\u5e76\u8fd4\u56deReasonReact.SilentUpdate{.state\uff0cref\uff1atheRef}\uff0c\u800c\u4e0d\u662fComponentBag.Handler+muating instanceVars\u3002\u5728\u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u53c2\u7167\u548c\u5176\u4ed6\u53c2\u7167\u53ef\u80fd\u9ed8\u8ba4\u4e3a\u65e0\u3002\n\u6211\u4eec\u6700\u7ec8\u51b3\u5b9a\u5728\u751f\u547d\u5468\u671f\u65b9\u6cd5\u4e2d\u53bb\u6389\u7ec4\u4ef6\u524d\u7f00\uff01ComponentDidMount\u73b0\u5728\u4ec5\u79f0\u4e3adidMount\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u7b7e\u540d\u7a0d\u6709\u66f4\u6539\uff1b\u8bf7\u5728\u65b0\u7684\u751f\u547d\u5468\u671f\u4e8b\u4ef6\u90e8\u5206\u67e5\u770b\u5b83\u4eec\u3002\n\u5b50\u5e2e\u52a9\u5668&amp\uff1b\u7c7b\u578breactJsChildren\u3001listToElement\u548cjsChildrenToReason\u90fd\u4eceReasonReact\u4e2d\u6d88\u5931\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u6570\u7ec4\u800c\u4e0d\u662fList\u3002\n\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u65e7\u7684API\u4e2d\u8fd9\u6837\u8c03\u7528\u5b83\u3002\u8bf7\u544a\u8bc9@_chenglou\uff0c\u4ed6\u5e94\u8be5\u5728\u4e00\u4e2a\u4e25\u8083\u7684\u9879\u76ee\u4e0a\u66f4\u4e25\u8083\u5730\u547d\u540d\u3002\u65b0\u540d\u79f0\u4e3awrapJsForReason\u3002\u7b7e\u540d\u6ca1\u6709\u592a\u591a\u66f4\u6539\uff1b\u53c2\u6570\u73b0\u5728\u5df2\u6807\u8bb0\uff0c\u5e76\u663e\u5f0f\u63a5\u53d7\u6700\u540e\u4f4d\u7f6e\u7684\u672a\u6807\u8bb0\u5b50\u9879\u3002\u793a\u4f8b\uff1a\n\u5916\u90e8myJSReactClass\uff1aReasonReact\u3002reactClass=&#34\uff1bmyJSReactClass&#34\uff1b[@@bs.\u3002\u6a21\u5757]\uff1blet createElement name\uff1a\uff1a(name\uff1astring)age\uff1a\uff1a(age\uff1aoption int)=\uff1f=&gt\uff1bReactRe.wrapPropsShamelless myJSReactClass{&#34\uff1bname&#34\uff1b\uff1aname\uff0c&#34\uff1bage&#34\uff1b\uff1ajs\u3002\u53ef\u7a7a.From_opt age}\uff1b\n\u5916\u90e8myJSReactClass\uff1aReasonReact\u3002reactClass=&#34\uff1bmyJSReactClass&#34\uff1b[@@bs.\u3002\u6a21\u5757]\uff1b\u8ba9make name\uff1a\uff1a(name\uff1astring)age\uff1a\uff1a(age\uff1aoption int)=\uff1fChild=&gt\uff1bReasonReact.wrapJsForReason reactClass\uff1a\uff1amyJSReactClass\u9053\u5177\uff1a\uff1a{&#34\uff1bname&#34\uff1b\uff1aname\uff0c&#34\uff1bage&#34\uff1b\uff1ajs\u3002\u53ef\u4ee5\u4e3a\u7a7a\u3002From_opt age}\u5b50\u4ee3\uff1b\n\u4e0d\u8981\u5fd8\u8bb0\uff0c\u4e00\u65e6\u8fd9\u4e9b\u8f6c\u6362\u5b8c\u6210\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u8c03\u7528\u7ad9\u70b9\u5c06\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u63cf\u8ff0\u7684\u65b0JSX\u8f6c\u6362\u3002\u5426\u5219\uff0c\u5b83\u4eec\u5c06\u751f\u6210\u7c7b\u578b\u9519\u8bef\u3002\n\u73b0\u5728\u79f0\u4e3awrapReasonForJs\u3002\u4e3a\u8be5\u4e92\u64cd\u4f5c\u63d0\u4f9b\u670d\u52a1\u7684\u6587\u4ef6\u7ea7include\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\uff1b\u5b83\u66fe\u7ecf\u9b54\u672f\u822c\u5730\u5bfc\u51fa\u652f\u6301\u7ec4\u4ef6comp\u4ee5\u4f9bJS\u4f7f\u7528\u3002\u73b0\u5728\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7\u65b0\u7684wrapReasonForJs\u624b\u52a8\u5bfc\u51facomp\u3002\u4e0a\u4e00\u4e2a\u793a\u4f8b\u7684\u7eed\u7bc7\uff1a\nlet component=.\uff1blet make.\uff1blet comp=ReasonReact.wrapReasonForJs\uff1a\uff1aComponent(Fun jsProps=&gt\uff1bmake name\uff1a\uff1ajsProps##name age\uff1a\uff1a\uff1f(js.\u3002\u53ef\u7a7a.to_opt jsProps##age)[||])\uff1b\n\u8be5\u51fd\u6570\u63a5\u53d7\u5e26\u6807\u7b7e\u7684Reason\u7ec4\u4ef6\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5728\u7ed9\u5b9ajs\u5c5e\u6027\u7684\u60c5\u51b5\u4e0b\u8981\u6c42\u60a8\u5728\u4f20\u5165\u6b63\u786e\u8f6c\u6362\u7684\u53c2\u6570\u7684\u540c\u65f6\u8c03\u7528make\u7684\u51fd\u6570\u3002\nDOM\u5f15\u7528\u73b0\u5728\u88ab\u7c7b\u578b\u5316\u4e3aJs.null Dom.element\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fDom.element(https://github.com/reasonml/reason-react/commit/6f2a75b).\u3002\u7b80\u5355\u7684\u8fc1\u79fb\uff1ahttps://github.com/reasonml-community/reason-react-example/commit/b44587a", "note_en": "Permalink     GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n       v0.8.0 is a  huge release that includes several breaking changes, maintenance fixes and documentation updates  \ud83c\udf89\n           useEffect,  useLayoutEffect,  useMemo,  useCallback,  useImperativeHandle now are all consistently implemented up to  useX7 to improve usability.\n   Support for  React Hooks API. Allows for writing function components with state and complex interactions.\n     These components use a new PPX shipped with BuckleScript 5.0.0+. Please read the documentation for more.\n There is no breaking change here, but if you&#39;re interested in migrating some components the upgrade script is  provided. It will wrap existing ReasonReact components as if they are Hooks components.\n    The DOM prop  crossorigin is now correctly named  crossOrigin. This is a tiny breaking change, thus the version bump (#290).\n     Small breaking change (only if you haven&#39;t upgraded for a while).  The migration/upgrade script, as always, is  here.\n  ReactEventRe is now deprecated in favor of  ReactEvent. They&#39;re similar but the latter comes with the big quality-of-life improvement of turning our old:\n    Aka, you can use the  -&gt; fast pipe now ( |. in OCaml syntax), and we&#39;ve changed the definition of  target in the various  ReactEvent modules to directly give you back a  Js.t object instead of  Dom.element. Same applies to other such attributes.\n  Lastly,  bs.send.pipe is informally deprecated, so we&#39;ve removed the usage of those too. Instead of  e |&gt; ReactEventRe.Mouse.preventDefault, use either  e-&gt;ReactEvent.Mouse.preventDefault or  ReactEvent.Mouse.preventDefault(e).  bs.send.pipe is, all things considered, the  heaviest BuckleScript special annotation. If your library uses it, please consider removing it too. Thanks!\n  Fragment has landed!  &lt;&gt; child1 child2 &lt;/&gt;. For more info, check  ReactJS&#39; docs on Fragment. Note that we currently don&#39;t support:\n   Additionally, DOM component children spread  &lt;div&gt;...foo&lt;/div&gt; now works. No more need to use the  ReasonReact.createDomElement fallback!\n  The DOM props  _type,  _open, and others (see 0.4.2 release notes below) are officially removed. Use  type_,  open_, etc.\n The field  subscriptions was deprecated and is now removed completely. Please use the new  subscriptions helper instead.\n ReasonReact.stringToElement,  nullElement,  arrayToElement are also gone for good. Use  ReasonReact.string,  null,  array. The previous migration script in  0.4.0 already took care of this.\n  ReasonReact.createDomElement is changed in favor of  ReactDOMRe.createElementVariadic. This is more consistent with  ReactDOMRe.createElement. Both are used by the JSX transform; the latter, when it&#39;s a children spread for DOM elements (mentioned above) and has a small perf cost.\n    DOM components now support  aria-* attributes without needing hacks:  &lt;div ariaLabel=&#34;foo&#34; /&gt;. The camelCase  ariaStuff will compile to  aria-stuff.\n For DOM props, instead of  _open,  _type,  _begin,  _end,  _in,  _to, use the new trailing underscore version for consistency:  open_,  type_, etc. The former leading underscore versions are now  deprecated.\n  Restore  ReasonReact.Callback module for now and put a deprecation warning on it. This way, at least your third-party dependencies can compile further.\n Relax  wrapJsForReason and  wrapReasonForJs types so that we can use  bs.abstract for interop instead of  Js.t objects.\n    didMount now returns  unit, per our previous warnings in the docs. To trigger a state update, use  self.send(MyAction).\n Remove  self.reduce for real; use  self.send (not to be confused with  reducer, which is still around).\n  willReceiveProps deprecated. We&#39;ll transition to React 16 very soon and release our binding to  deriveStateFromProps.\n    This release  requires bs-platform 2.2.2! If your app haven&#39;t upgraded to it, don&#39;t worry; you can still use ResonReact 0.3.2 just fine. Only two small changes.\n Use the new bs-platform  Js.Nullable.toOption. No more deprecation warnings when you use ReasonReact (main purpose of the release).\n     self.reduce is now changed into  self.send, with a simpler semantic that clears up the confusion on the immediate call case. More performant and fewer allocations too! The migration script will convert most of the code over for you.\n    Technically a breaking change, but just because of the removal of a few deprecated things.  No migration script this time; since the few breaking changes you encounter (if any) should have be spotted by the type system and fixed in a few secs anyway.\n  All files upper-cased. This follows the  new community idiom. Technically an internal change; doesn&#39;t affect your usage of ReasonReact.\n More DOM props. There are like, more DOM props added per year than the number of releases we have. What a funny time to be alive.\n  ref is now typed as  Js.nullable(Dom.element), not  Js.null(Dom.element).  Js.nullable is the new community idiom from BuckleScript. Go through your codebase and change your  state.myRef := Js.Null.to_opt(theRef) into  state.myRef := Js.Nullable.to_opt(theRef). We suggest you to also remove all mentions of  Js.null,  Js.undefined,  Js.Null and  Js.Undefined.  Js.Nullable checks for both JavaScript  null and  undefined, thus making the JS interop more robust. In the past, people type certain values (especially js objects fields) as e.g.  null and forget they can be  undefined.\n DOM components ( ReactDOMRe)&#39;s  open,  end and  in attributes are now changed to  _open,  _end and  _in to avoid using reserved keywords. This is only breaking if you&#39;re using these attributes  and are on the old syntax.\n  Major update, but again with  no breaking changes, and  again with a convenience  migration script! =)\n The big change in this release is the deprecation of  statefulComponent and  statefulComponentWithRetainedProps.  statelessComponent stays the same.\n   After reading this migration guide, use the migration script (or not) like so:  node node_modules/reason-react/migrate/from02xTo024.js myReasonFile.re.\n  There&#39;s no more need for  ReasonReact.statefulComponent. Every state change is now controlled through a dedicated, centralized, react-fiber-ready, component-local mechanism called &#34;reducer&#34; (aka, the hype word for &#34;state machine&#34;).\n   Replace e.g.  self.update handleClick (where  handleClick is  fun self =&gt; ReasonReact.Update {...self.state, foo: bar}) with  self.reduce (fun _ =&gt; Click).  Click is just a variant constructor you&#39;ve defined. Let&#39;s call it &#34;action&#34;.\n reducer :  fun  action  state  =&gt;  switch action {  |  Click  =&gt;  ReasonReact . Update { ...state , foo : bar} }\n  The relevant section on actions, reducers and the new update additions are  in the main docs.\n   Before, we used to recommend using  ReasonReact.SilentUpdate to deal with ReactJS&#39; instance variables pattern (e.g. attaching properties onto the component class itself, like timer IDs, subscriptions, refs, etc.). Now we&#39;ve moved to using a Reason  ref cell (not the React ref, the  mutative Reason  ref). See the updated  instance variables section.\n The new recommendation also solves a corner-case bug with assigning more than one refs in the render.\n  The future ReactJS Fiber in ReasonReact won&#39;t work well with lifecycle events that return the new state, aka:\n  Please return  ReasonReact.NoUpdate for the former (can&#39;t do much for the latter,  willReceiveProps, for now. Keep it as it is). If you really need to trigger a state change, before the return, use a  self.reduce (fun () =&gt; Bar) (), aka immediately apply a reduce.\n We will make all lifecycles return  unit in the future; it&#39;ll be an easy codemod to change  ReasonReact.NoUpdate to nothing.\n  React/react-dom are now dependencies, rather than peerDependencies. This follows the Reason/BS idiom of making the bound library an implementation detail. NPM/Yarn will still dedupe multiple versions of react/react-dom correctly; no worries about that.\n    We&#39;ve finally removed  ReactRe. It&#39;s been deprecated since 0.1.4. And we&#39;ve offered a comprehensive migration in the 0.1.4 section below.\n We&#39;ve given folks a bit of breathing room in terms of breaking changes; now we&#39;re shipping another one, this time with a small migration script.  After installing reason-react, use  node node_modules/reason-react/oldScriptCarefulMigrateFrom015To020.js myReasonFile.re\n Instead of  fun state self =&gt; ..., we&#39;ve now rolled  state into  self, and now, you have  fun {state, handle} =&gt; .... The whole record is  self. Feel free to destructure and get whatever you need!\n self now contains a new prop,  retainedProps. This is a new (non-breaking) feature that solves the previous slightly inconvenient way of forwarding props to state, as described in the old API&#39;s lifecycle methods. Now there&#39;s a dedicated API for it! The docs describes this in detail.\n  Non-breaking update. Works better with bs-platform &gt;=1.8.0, which comes with the following ReasonReact JSX fixes:\n   Adjust ReactDOMRe&#39;s  props and  style to include more accurate DOM and style attributes and styles (#9, #15, #17).\n Add  ReactDOMRe.Style.unsafeAddProp to unsafely add a prop to an existing  style. Make sure you know what you&#39;re doing!\n Fix  reactRef&#39;s type in various locations. A React ref is actually always nullable; we&#39;ve previously only acknowledged it for DOM ref, now we do for custom (composite) components ref too. A more detailed explanation is  here. This is documented in our docs in the ref section as well.\n  Major update! Though this is 100% backward compatible, so no major version bump. We&#39;ve revamped the whole API based on all you awesome folks&#39; feedback, and we&#39;ve provided a gradual migration path.\n   Upon installing the new dependencies,  your existing code still works. Isn&#39;t that great? You can incrementally convert things over. The old modules will stay around until the next or next next version. No rush!\n ReactDOMRe,  ReactDOMServerRe and  ReactEventRe stay as-is.  ReactRe is now deprecated (but again, is staying around) in favor of the new implementation,  ReasonReact.\n  No more modules/functors needed for the API (don&#39;t go crazy with the new function composition power please!)\n  The following definitions are carried over from  ReactRe into  ReasonReact, unchanged. A simple search-and-replace fixes all of them:\n createElement (if you recall, this isn&#39;t the pervasive ReactJS  React.createElement). It&#39;s only used raw in escape hatch situations. If you&#39;ve never used it: great!\n  Lowercase JSX  &lt;div&gt; whatever &lt;/div&gt; didn&#39;t change. Uppercase  &lt;Foo ref=a key=b bar=baz&gt; hello goodbye &lt;/Foo&gt; used to translate to  Foo.createElement ref::a key::b bar::baz [hello, goodbye]. It now translates to  ReasonReact.element ref::a key::b (Foo.make bar::baz [|hello, goodbye|]). We&#39;ve pulled out  ref and  key into a dedicated call for good measures, and instead of using list as children, we now use array. More idiomatic ReactJS, list &lt;-&gt; array conversion churn.\n To use the new JSX, change  bsconfig.json&#39;s  {&#34;reason&#34;: {&#34;react-jsx&#34;: true}} to  {&#34;reason&#34;: {&#34;react-jsx&#34;: 2}}.  Although you probably won&#39;t do that at the beginning, since that&#39;d change all JSX in the whole project and cause type errors everywhere. Instead, keep your old  bsconfig.json unchanged and for the JSX you&#39;d like to selectively convert over, put a  [@@@bs.config {jsx: 2}]; at the top of the file. Once you&#39;ve converted everything over, switch to  {&#34;react-jsx&#34;: 2} in  bsconfig.json and remove those  @@@bs.config at the top of every file.\n Alternatively, you can go straight to  {&#34;react-jsx&#34;: 2} in  bsconfig.json, and put a  [@@@bs.config {jsx: 1}] at the top of files where you&#39;d like to use the old uppercase JSX transform.\n Before starting the sections below, please briefly go through the new API on the documentation page.\n   Foo.createElement is now referred to as  Foo.make.  make is a more idiomatic term in Reason/OCaml, and is shorter to type!\n  The concept of  componentBag is now called  self. We thought it&#39;d be a more appropriate name. The new  self doesn&#39;t contain  props,  state,  setState and  instanceVars anymore; these are no longer needed in the new ReasonReact.\n  Replaced with the new  make (previously  createElement) call which takes in labeled arguments. See more in  this section.\n How to access  props in the  update/ handle callbacks now? You&#39;d move these callback definitions into the  make function body.\n    No longer needed. In ReactJS, attaching instance variables onto a component has always been a sly way of introducing 1. mutative state that 2. doesn&#39;t trigger re-render. This whole concept is now replaced by putting your value into  state and using   ReasonReact.SilentUpdate (doesn&#39;t trigger re-render, but does update state) in callbacks &amp; lifecycles.\n  Not to be confused with the ReactJS  setState you often use (though if you&#39;re reading this migration guide, you probably know this already). This was an escape hatch designed for times when you can&#39;t, for example, return an  option state from an  updater, because you want to  setState imperatively and asynchronously. The new idiom is to just use  self.update myhandler (). Notice  update myhandler returns a callback just like before, but now you&#39;re immediately applying the callback.\n  updater and  handler are now called  update and  handle. They should be an easy search-and-replace.\n  The signature of the callback they take has changed. Instead of e.g.  updater (fun {props, state, instanceVars} event =&gt; Some {...state, foo: true}), it&#39;s now  update (fun event state self =&gt; ReasonReact.Update {...state, foo: true}). Formal, simplified type of the new callback:  payload =&gt; state =&gt; self =&gt; update state.\n     ref now lives inside state, as described in  componentBag.instanceVars just above. Instead of  componentBag.handler+ mutating  instanceVars, you&#39;d now use  update and returning  ReasonReact.SilentUpdate {...state, ref: theRef}.  refs and others probably default to  None in your initial state.\n  We&#39;ve decided to finally drop the  component prefix to lifecycle methods!  componentDidMount is now just called  didMount, etc. The signatures changed slightly; see them in the new  lifecycle events section.\n  The children helpers &amp; types  reactJsChildren,  listToElement and  jsChildrenToReason are all gone from  ReasonReact, since we now use array instead of list.\n   It&#39;s not clear why we called it this way in the old API. Please tell @_chenglou that he should name things more seriously on a serious project. The new name is  wrapJsForReason. The signature hasn&#39;t changed much; arguments are labeled now and explicitly accept an unlabeled  children at the last position. Example:\n  external  myJSReactClass  :  ReasonReact . reactClass  =  &#34;myJSReactClass&#34; [ @@ bs . module] ; let  createElement name ::( name :  string) age ::( age :  option  int)= ?  =&gt;  ReactRe .wrapPropsShamelessly myJSReactClass { &#34;name&#34; : name,  &#34;age&#34; :  Js . Nullable .from_opt age} ;\n  external  myJSReactClass  :  ReasonReact . reactClass  =  &#34;myJSReactClass&#34; [ @@ bs . module] ; let  make name ::( name :  string) age ::( age :  option  int)= ?  children  =&gt;  ReasonReact .wrapJsForReason reactClass ::myJSReactClass props ::{ &#34;name&#34; : name,  &#34;age&#34; :  Js . Nullable .from_opt age} children ;\n Don&#39;t forget that once these are converted over, the callsites of these components will need to use the new JSX transform described above. Otherwise they&#39;ll generate type errors.\n  Now called  wrapReasonForJs. The file-level  include that served this interop is gone; it used to magically export the backing component  comp for JS consumption. You now have to manually export  comp through the new  wrapReasonForJs. Continuation of the previous example:\n let  component  = ... ; let  make  ... ; let  comp  =  ReasonReact .wrapReasonForJs  ::component ( fun  jsProps  =&gt; make name ::jsProps ##name age :: ?( Js . Nullable .to_opt jsProps ##age)  [||]) ;\n The function takes in the labeled reason  component, and a function that, given the js props, asks you to call  make while passing in the correctly converted parameters.\n   DOM ref is now typed as  Js.null Dom.element, instead of just  Dom.element ( https://github.com/reasonml/reason-react/commit/6f2a75b). Trivial migration:  https://github.com/reasonml-community/reason-react-example/commit/b44587a", "posttime": "2020-05-14 05:29:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7406\u6027,reason", "title": "\u7406\u6027\u53cd\u5e940.8", "title_en": "Reason React 0.8", "transed": 1, "url": "https://github.com/reasonml/reason-react/blob/master/HISTORY.md#080-042020", "via": "", "real_tags": ["\u7406\u6027", "reason"]}, {"category": "", "categoryclass": "", "imagename": "d5f302f812f72559f103272a273d1573.png", "infoid": 1002021, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5e76\u4e0d\u6253\u7b97\u518d\u5199\u4e00\u7bc7\u5173\u4e8e\u96f6\u7684\u5e16\u5b50\uff0c\u4f46\u662f\u5f53\u751f\u6d3b\u629b\u7ed9\u4f60\u4e00\u4e2a\u96f6\u7684\u65f6\u5019\uff0c\u8ba9\u4f60\u505a\u96f6\u63f4\u52a9\uff0c\u6216\u8005\u8bf8\u5982\u6b64\u7c7b\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5f00\u59cb\u5427\uff01\n\u5982\u679c\u4f60\u60f3\u8df3\u8fc7\u66f2\u6298\u7684\u63ed\u793a\uff0c\u53ea\u9700\u9605\u8bfb\u603b\u7ed3\u548c\u5efa\u8bae\uff0c\u73b0\u5728\u5c31\u662f\u4f60\u7684\u673a\u4f1a\u3002\n\u5728\u7f16\u5199\u7b80\u5355\u7684\u5185\u5b58\u57fa\u51c6\u6d4b\u8bd5\u65f6\uff0c\u6211\u59cb\u7ec8\u8ba4\u4e3a\u5199\u5165\u5185\u5b58\u7684\u503c\u65e0\u5173\u7d27\u8981\u3002\u6700\u8fd1\uff0c\u5728\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u51c6\u6d4b\u8bd51\u6765\u63a2\u6d4bAVX-512\u5546\u5e97\u548c\u8bfb\u53d6\u6240\u6709\u6743\u4e4b\u95f4\u7684\u4ea4\u4e92\u65f6\uff0c\u6211\u9047\u5230\u4e86\u5947\u602a\u7684\u6027\u80fd\u504f\u5dee\u3002\u8fd9\u5c31\u662f\u90a3\u4e2a\u6545\u4e8b2\u3002\n\u5728\u5f53\u524d\u4e3b\u6d41CPU\u4e0a\uff0c\u5927\u591a\u6570\u6307\u4ee4\u7684\u65f6\u5e8f\u4e0e\u6570\u636e\u65e0\u5173\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u8bba\u6307\u4ee4\u7684\u8f93\u5165\u503c\u5982\u4f55\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u90fd\u662f\u76f8\u540c\u7684\u3002\u4e0e\u60a83\u6216\u6211\u4e0d\u540c\uff0c\u60a8\u7684cpu\u52a01+2\u6240\u9700\u7684\u65f6\u95f4\u4e0e\u52a068040486+80866502\u6240\u9700\u7684\u65f6\u95f4\u76f8\u540c\u3002\n\u6574\u6570\u9664\u6cd5\u4f9d\u8d56\u4e8e\u5927\u591a\u6570x86CPU\u7684\u6570\u636e\uff1a\u8f83\u5927\u7684\u8f93\u5165\u901a\u5e38\u9700\u8981\u8f83\u957f\u7684\u65f6\u95f4\uff0c\u5c3d\u7ba1\u7ec6\u8282\u5728\u4e0d\u540c\u7684\u5fae\u4f53\u7cfb\u7ed3\u6784\u4e2d\u5dee\u522b\u5f88\u59274\u3002\n\u5728AMD Zen\u548cZen2\u82af\u7247\u4e0a\uff0cBMI2\u6307\u4ee4PDEP\u548cpext\u5177\u6709\u51fa\u4e86\u540d\u7684\u7cdf\u7cd5\u4e14\u4f9d\u8d56\u4e8e\u6570\u636e\u7684\u6027\u80fd\u3002\n\u9047\u5230\u975e\u89c4\u683c\u5316\u6570\u5b57\u65f6\uff0c\u6d6e\u70b9\u6307\u4ee4\u7684\u6027\u80fd\u901a\u5e38\u8f83\u6162\uff0c\u5c3d\u7ba1\u67d0\u4e9b\u820d\u5165\u6a21\u5f0f(\u5982\u5237\u65b0\u4e3a\u96f6)\u53ef\u80fd\u4f1a\u907f\u514d\u8fd9\u4e00\u70b9\u3002\n\u8fd9\u4e2a\u5217\u8868\u5e76\u4e0d\u662f\u8be6\u5c3d\u7684\uff1a\u8fd8\u6709\u5176\u4ed6\u4f9d\u8d56\u4e8e\u6570\u636e\u7684\u6027\u80fd\u60c5\u51b5\uff0c\u7279\u522b\u662f\u5f53\u60a8\u5f00\u59cb\u6df1\u5165\u7814\u7a76\u590d\u6742\u7684\u5fae\u4ee3\u7801\u6307\u4ee4(\u5982cpuid)\u65f6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5047\u8bbe\u4e0a\u9762\u6ca1\u6709\u5217\u51fa\u7684\u5927\u591a\u6570\u7b80\u5355\u6307\u4ee4\u5728\u56fa\u5b9a\u65f6\u95f4\u5185\u6267\u884c\u5e76\u4e0d\u662f\u4e0d\u5408\u7406\u7684\u3002\n\u5f53\u7136\uff0c\u5730\u5740\u5f88\u91cd\u8981\u3002\u6bd5\u7adf\uff0c\u5730\u5740\u51b3\u5b9a\u4e86\u7f13\u5b58\u884c\u4e3a\uff0c\u7f13\u5b58\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u91ca\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u6027\u80fd\u5dee\u5f025\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u8ba4\u4e3a\u52a0\u8f7d\u6216\u5b58\u50a8\u7684\u6570\u636e\u503c\u5e76\u4e0d\u91cd\u8981\u3002\u9664\u4e86\u5728x86\u4e0a\u6ca1\u6709\u5e7f\u6cdb\u90e8\u7f72\u7684\u786c\u4ef6\u538b\u7f29\u7f13\u5b58\u7b49\u573a\u666f\u4e4b\u5916\uff0c\u6ca1\u6709\u592a\u591a\u7406\u7531\u671f\u671b\u5185\u5b58\u6216\u9ad8\u901f\u7f13\u5b58\u5b50\u7cfb\u7edf\u5173\u5fc3\u52a0\u8f7d\u6216\u5b58\u50a8\u7684\u4f4d\u503c\u3002\nGitHub\u4e0a\u63d0\u4f9b\u4e86\u4e0e\u8fd9\u7bc7\u6587\u7ae0\u76f8\u5173\u7684\u5b8c\u6574\u57fa\u51c6(\u5305\u62ec\u4e00\u4e9b\u6b64\u5904\u672a\u63d0\u53ca\u7684\u5176\u4ed6\u57fa\u51c6)\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4efb\u52a1\u5f00\u59cb\u3002\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aint\u503cval\uff0c\u5e76\u7528\u8be5\u503c\u7684\u526f\u672c\u586b\u5145\u7ed9\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u3002\u5c31\u50cfmemset\u4e00\u6837\uff0c\u53ea\u662f\u503c\u662fint\u503c\uff0c\u800c\u4e0d\u662fchar\u503c\u3002\nvoid ill_int(int*buf\uff0csize_t size\uff0cint val){for(size_t i=0\uff1bi&lt\uff1bsize\uff1b++i){buf[i]=val\uff1b}}\u3002\nvoid ill_int(int*buf\uff0csize_t size\uff0cint val){for(int*end=buf+size\uff1bbuf\uff01=end\uff1b++buf){*buf=val\uff1b}}\u3002\n\u5728C++\u4e2d\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u90a3\u4e48\u591a\uff1a\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u76f4\u63a5\u59d4\u6258\u7ed9std\uff1a\uff1aFill\uff0c\u5b83\u505a\u7684\u4e8b\u60c5\u4e0e\u4e00\u884c\u7a0b\u5e8f8\uff1a\nSTD\uff1a\uff1aFill\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u4e4b\u5904\uff0c\u5b83\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u5c31\u50cf\u4e0a\u9762\u7684C\u7248\u672c\u4e00\u6837\u3002\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0cGCC\u548c\u514b\u5170\u5c06\u5b83\u4eec\u7f16\u8bd1\u6210\u4e86\u76f8\u540c\u7684\u673a\u5668\u4ee3\u78019\u3002\n\u6709\u4e86\u6b63\u786e\u7684\u7f16\u8bd1\u5668\u53c2\u6570(\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c-march=NATIVE-O3-funroll-loops)\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2astd\uff1a\uff1aFill\u7248\u672c(\u4ee5\u53ca\u6240\u6709\u5176\u4ed6\u7248\u672c)\u80fd\u591f\u4f7f\u7528AVX\u5411\u91cf\u6307\u4ee4\u6765\u5b9e\u73b0\uff0c\u4e8b\u5b9e\u7684\u786e\u5982\u6b64\u3002\u5bf9\u4e8e\u5927\u578b\u586b\u65b9\uff0c\u6267\u884c\u7e41\u91cd\u63d0\u5347\u5de5\u4f5c\u7684\u90e8\u5206\u5982\u4e0b\u6240\u793a\uff1a\n\u3002L4\uff1avmovdquYMMWORD PTR[rax+0]\uff0cymm1 vmovdquYMMWORD PTR[rax+32]\uff0cymm1 vmovdquYMMWORD PTR[rax+64]\uff0cymm1 vmovdquYMMWORD PTR[rax+96]\uff0cymm1 vmovdquYMMWORD PTR[rax+128]\uff0cymm1 vmovdquyMMWORD PTR[rax+128]\uff0cymm1 vmovdquYMMWORD PTR[rax+128]\uff0cymm1 vmovdquyMMWORD PTR[rax+128]\u3002L4\u3002\n\u5b83\u4f7f\u75288\u676132\u5b57\u8282\u7684AVX2\u5b58\u50a8\u6307\u4ee4\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u590d\u5236256\u5b57\u8282\u7684\u6570\u636e\u3002Full\u51fd\u6570\u8981\u5927\u5f97\u591a\uff0c\u5b83\u6709\u4e00\u4e2a\u7528\u4e8e\u5c0f\u4e8e32\u5b57\u8282\u7684\u7f13\u51b2\u533a\u7684\u6807\u91cf\u90e8\u5206(\u5e76\u4e14\u5728\u77e2\u91cf\u5316\u90e8\u5206\u5b8c\u6210\u4e4b\u540e\u8fd8\u53ef\u4ee5\u5904\u7406\u5947\u6570\u5143\u7d20)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u77e2\u91cf\u5316\u8df3\u8f6c\u8868\uff0c\u53ef\u4ee5\u5728\u4e3b\u5faa\u73af\u4e4b\u524d\u5904\u7406\u591a\u8fbe7\u4e2a32\u5b57\u8282\u7684\u5757\u3002\u6ca1\u6709\u52aa\u529b\u5bf9\u9f50\u76ee\u7684\u5730\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u5bf9\u9f50\u523064\u5b57\u8282\uff0c\u6240\u4ee5\u8fd9\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002\n\u524d\u620f\u591f\u591a\u4e86\uff1a\u8ba9\u6211\u4eec\u628aC++\u7248\u672c\u62ff\u51fa\u6765\u8f6c\u4e00\u8f6c\uff0c\u5b8c\u5168\u968f\u673a\u9009\u62e9\u4e24\u4e2a\u4e0d\u540c\u7684\u586b\u5145\u503c(Val)\uff1a0(\u586b\u51450)\u548c1(\u586b\u51451)\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e0a\u9762\u63d0\u5230\u7684GCC 9.2.1\u548c-march=ative-O3-funroll-loops\u6807\u5fd7\u3002\n\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u7ec4\u7ec7\uff0c\u4ee5\u4fbf\u5bf9\u4e8e\u4e24\u4e2a\u6d4b\u8bd5\uff0c\u6211\u4eec\u8c03\u7528\u76f8\u540c\u7684\u975e\u5185\u8054\u51fd\u6570\uff1a\u6267\u884c\u5b8c\u5168\u76f8\u540c\u7684\u6307\u4ee4\uff0c\u53ea\u662f\u503c\u4e0d\u540c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7f16\u8bd1\u5668\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u4f9d\u8d56\u4e8e\u6570\u636e\u7684\u4f18\u5316\u3002\n\u4ee5\u4e0b\u662f\u8fd9\u4e24\u4e2a\u503c\u7684\u586b\u5145\u541e\u5410\u91cf(GB/s)\uff0c\u533a\u57df\u5927\u5c0f\u4ece100\u5230100,000,000\u5b57\u8282\u3002\n\u56fe1\u6beb\u4e0d\u5947\u602a\uff0c\u6027\u80fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u586b\u5145\u533a\u57df\u9002\u5408\u7684\u7f13\u5b58\u7ea7\u522b\u3002\n\u5f53\u7f13\u51b2\u533a\u9002\u5408L1\u6216L2\u7f13\u5b58(\u6700\u9ad8\u53ef\u8fbe~256 KiB 12)\u65f6\uff0c\u4e00\u5207\u90fd\u76f8\u5f53\u6b63\u5e38\u3002\u5bf9\u4e8e\u975e\u5e38\u5c0f\u7684\u533a\u57df\u5927\u5c0f\uff0c\u76f8\u5bf9\u8f83\u5dee\u7684\u6027\u80fd\u53ef\u4ee5\u901a\u8fc7\u77e2\u91cf\u5316\u5b9e\u73b0\u7684\u5e8f\u5e55\u548c\u7ed3\u5c3e\u6765\u89e3\u91ca\uff1a\u5bf9\u4e8e\u5c0f\u7684\u533a\u57df\u5927\u5c0f\uff0c\u5728\u8fd9\u4e9b\u4e00\u6b21\u4e00\u6b21\u7684\u6574\u6570\u5faa\u73af\u4e2d\u82b1\u8d39\u4e86\u76f8\u5bf9\u5927\u91cf\u7684\u65f6\u95f4\uff1a\u6211\u4eec\u4e0d\u662f\u6bcf\u4e2a\u5468\u671f\u6700\u591a\u590d\u523632\u5b57\u8282\uff0c\u800c\u662f\u4ec5\u590d\u52364\u4e2a\u5b57\u8282\u3002\n\u8fd9\u4e5f\u89e3\u91ca\u4e86\u5728~1,000\u5230~30,000\u5b57\u8282\u4e4b\u95f4\u901f\u5ea6\u6700\u5feb\u7684\u533a\u57df\u6027\u80fd\u53c2\u5dee\u4e0d\u9f50\u7684\u539f\u56e0\uff1a\u8fd9\u662f\u9ad8\u5ea6\u53ef\u91cd\u590d\u6027\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u566a\u97f3\u3002\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e9b\u91c7\u6837\u503c\u5177\u6709\u66f4\u5927\u7684\u4f59\u6570mod 32\u3002\u4f8b\u5982\uff0c740\u5b57\u8282\u7684\u6837\u672c\u4ee5\u5927\u7ea673 GB/s\u7684\u901f\u5ea6\u8fd0\u884c\uff0c\u800c\u4e0b\u4e00\u4e2a\u5b57\u8282\u4e3a988\u7684\u6837\u672c\u4ee5\u8f83\u6162\u768464 GB/s\u8fd0\u884c\u3002\u8fd9\u662f\u56e0\u4e3a740%32\u662f4\uff0c\u800c988%32\u662f28\uff0c\u56e0\u6b64\u540e\u4e00\u79cd\u5927\u5c0f\u9700\u8981\u8fdb\u884c\u7684\u6e05\u7406\u5de5\u4f5c\u662f\u524d13\u76847\u500d\u3002\u672c\u8d28\u4e0a\uff0c\u6211\u4eec\u662f\u5bf9\u952f\u9f7f\u51fd\u6570\u8fdb\u884c\u534a\u968f\u673a\u91c7\u6837\uff0c\u5982\u679c\u60a8\u4ee5\u66f4\u7cbe\u7ec6\u7684\u7c92\u5ea6\u7ed8\u5236\u6b64\u533a\u57df(\u9009\u62e9\u5b83\u6216\u53ea\u9700\u5355\u51fb\u6b64\u590414)\uff0c\u60a8\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u770b\u5230\u5b83\u3002\n\u5947\u602a\u7684\u662f\uff0c\u6211\u4eec\u770b\u5230\u96f6\u5e97\u548c\u4e00\u5e97\u4e4b\u95f4\u6709\u660e\u663e\u7684\u5206\u6b67\u3002\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u3001\u6267\u884c\u76f8\u540c\u6307\u4ee4\u6d41\u7684\u76f8\u540c\u673a\u5668\u4ee3\u7801\uff0c\u53ea\u662f\u4f20\u9012\u7ed9STORE\u6307\u4ee4\u7684ymm1\u5bc4\u5b58\u5668\u7684\u503c\u6709\u6240\u4e0d\u540c\u3002\u65e0\u8bba\u662f\u5728L3\u8986\u76d6\u7684\u533a\u57df(\u5728\u6211\u7684\u7cfb\u7edf\u4e0a\u6700\u9ad8\u53ef\u8fbe6MiB)\uff0c\u8fd8\u662f\u5728\u6211\u4eec\u9884\u671fRAM\u672a\u547d\u4e2d\u7684\u533a\u57df(\u770b\u8d77\u6765RAM\u533a\u57df\u7684\u5dee\u5f02\u4f1a\u7f29\u5c0f\uff0c\u4f46\u8fd9\u4e3b\u8981\u662f\u8089\u773c\u4e0a\u7684\u628a\u620f)\uff0c\u5b58\u50a80\u59cb\u7ec8\u6bd4\u5b58\u50a81\u5feb17%\u523018%\uff1a\u76f8\u5bf9\u6027\u80fd\u5dee\u5f02\u5927\u81f4\u76f8\u540c)\u3002\n\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff1f\u4e3a\u4ec0\u4e48CPU\u5173\u5fc3\u5b58\u50a8\u7684\u662f\u4ec0\u4e48\u503c\uff0c\u4e3a\u4ec0\u4e48\u96f6\u662f\u7279\u6b8a\u7684\u5462\uff1f\n\u5f53\u6211\u4eec\u5173\u6ce8\u9002\u5408L2\u6216L3\u7684\u533a\u57df\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6d4b\u91cfL2_LINES_out.Silent\u548cL2_Lines_out.non_Silent\u4e8b\u4ef6\u6765\u83b7\u5f97\u4e00\u4e9b\u989d\u5916\u7684\u6d1e\u5bdf\u529b\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u4ee5\u9759\u9ed8\u6216\u975e\u9759\u9ed8\u65b9\u5f0f\u6d4b\u91cf\u4eceL2\u9010\u51fa\u7684\u7ebf\u8def\u6570\u91cf\u3002\n\u7edf\u8ba1\u7531L2\u7f13\u5b58\u586b\u5145\u89e6\u53d1\u65f6\u7531L2\u7f13\u5b58\u9759\u9ed8\u4e22\u5f03\u7684\u884c\u6570\u3002\u8fd9\u4e9b\u7ebf\u8def\u901a\u5e38\u5904\u4e8e\u5171\u4eab\u6216\u72ec\u5360\u72b6\u6001\u3002\n\u7edf\u8ba1\u7531\u4e8c\u7ea7\u7f13\u5b58\u586b\u5145\u89e6\u53d1\u65f6\u7531\u4e8c\u7ea7\u7f13\u5b58\u9010\u51fa\u7684\u884c\u6570\u3002\u8fd9\u4e9b\u7ebf\u8def\u5904\u4e8e\u4fee\u6539\u72b6\u6001\u3002\u4fee\u6539\u540e\u7684\u884c\u5199\u56de\u5230L3\u3002\n\u8fd9\u91cc\u6240\u6307\u7684\u72b6\u6001\u662fMESI\u9ad8\u901f\u7f13\u5b58\u72b6\u6001\uff0c\u901a\u5e38\u7f29\u5199\u4e3aM(\u5df2\u4fee\u6539)\u3001E(\u72ec\u5360\uff0c\u4f46\u672a\u4fee\u6539)\u548cS(\u53ef\u80fd\u662f\u5171\u4eab\u7684\uff0c\u672a\u4fee\u6539)\u3002\n\u7b2c\u4e8c\u4e2a\u5b9a\u4e49\u5e76\u4e0d\u5b8c\u5168\u51c6\u786e\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u610f\u5473\u7740\u53ea\u6709\u4fee\u6539\u540e\u7684\u884c\u624d\u4f1a\u89e6\u53d1\u975e\u9759\u9ed8\u4e8b\u4ef6\u3002\u4f46\u662f\uff0c\u6211\u53d1\u73b0\u5904\u4e8eE\u72b6\u6001\u7684\u672a\u4fee\u6539\u884c\u4e5f\u53ef\u4ee5\u89e6\u53d1\u6b64\u4e8b\u4ef6\u3002\u7c97\u7565\u5730\u8bf4\uff0c\u672a\u4fee\u6539\u884c\u7684\u884c\u4e3a\u4f3c\u4e4e\u662f\uff0c\u5728L2\u548cL3\u4e2d\u672a\u547d\u4e2d\u7684\u884c\u901a\u5e38\u4ee5\u975e\u9759\u9ed8\u65b9\u5f0f\u88ab\u586b\u5145\u5230L2\u4e2d\uff0c\u4f46\u662f\u5728L2\u4e2d\u672a\u547d\u4e2d\u5e76\u4e14\u5728L3\u4e2d\u547d\u4e2d\u7684\u672a\u4fee\u6539\u884c\u901a\u5e38\u5c06\u88ab\u9759\u9ed8\u5730\u9010\u51fa15\u3002\u5f53\u7136\uff0c\u88ab\u4fee\u6539\u7684\u884c\u5fc5\u987b\u88ab\u975e\u9759\u9ed8\u5730\u9010\u51fa\u4ee5\u4fbf\u7528\u65b0\u6570\u636e\u66f4\u65b0\u5916\u5c42\u3002\n\u603b\u800c\u8a00\u4e4b\uff1a\u9759\u9ed8\u9010\u51fa\u4e0e\u5904\u4e8eE\u6216S\u72b6\u6001\u7684\u672a\u4fee\u6539\u7684\u7ebf\u8def\u76f8\u5173\u8054\uff0c\u800c\u975e\u9759\u9ed8\u9010\u51fa\u4e0eM\u3001E\u6216(\u53ef\u80fd)S\u72b6\u6001\u7684\u7ebf\u8def\u76f8\u5173\u8054\uff0c\u5bf9E\u548cS\u7684\u9759\u9ed8\u4e0e\u975e\u9759\u9ed8\u7684\u9009\u62e9\u662f\u5728\u67d0\u4e9b\u672a\u77e5\u4e8b\u7269\u4e2d\u505a\u51fa\u7684\u3002\n\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u586b\u51450\u548c\u586b\u51451\u60c5\u51b5\u4e0b\u7684\u9759\u9ed8\u9010\u51fa\u548c\u975e\u9759\u9ed8\u9010\u51fa\uff1a\n\u56fe2\u4e24\u79cd\u60c5\u51b5\u7684\u9010\u51fa\u603b\u6570(\u9759\u9ed8\u548c\u975e\u9759\u9ed8)\u662f\u76f8\u540c\u7684\uff1a\u5f53\u533a\u57df\u9002\u5408L2\u65f6\u63a5\u8fd1\u4e8e\u96f617\uff0c\u7136\u540e\u8fc5\u901f\u589e\u52a0\u5230\u6bcf\u4e2a\u5b58\u50a8\u7684\u9ad8\u901f\u7f13\u5b58\u7ebf~1\u9010\u51fa\u3002\u5728L3\u4e2d\uff0c\u586b\u51451\u7684\u884c\u4e3a\u4e5f\u4e0e\u6211\u4eec\u9884\u671f\u7684\u4e00\u6837\uff1a\u57fa\u672c\u4e0a\u6240\u6709\u7684\u9a71\u9010\u90fd\u662f\u975e\u9759\u9ed8\u7684\u3002\u8fd9\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u5fc5\u987b\u975e\u9759\u9ed8\u5730\u9010\u51fa\u5df2\u4fee\u6539\u7684\u884c\uff0c\u4ee5\u5c06\u5176\u5df2\u4fee\u6539\u7684\u6570\u636e\u5199\u5165\u9ad8\u901f\u7f13\u5b58\u5b50\u7cfb\u7edf\u7684\u4e0b\u4e00\u5c42\u3002\n\u5bf9\u4e8e\u586b\u51450\uff0c\u60c5\u51b5\u5c31\u4e0d\u540c\u4e86\u3002\u4e00\u65e6\u7f13\u51b2\u533a\u5927\u5c0f\u4e0d\u518d\u9002\u5408L2\uff0c\u6211\u4eec\u770b\u5230\u4eceL2\u6536\u56de\u7684\u603b\u6570\u76f8\u540c\uff0c\u4f46\u5176\u4e2d63%\u662f\u9759\u9ed8\u7684\uff0c\u5176\u4f59\u7684\u662f\u975e\u9759\u9ed8\u7684\u3002\u8bf7\u8bb0\u4f4f\uff0c\u53ea\u6709\u672a\u7ecf\u4fee\u6539\u7684\u884c\u624d\u6709\u88ab\u65e0\u58f0\u9a71\u9010\u7684\u5e0c\u671b\u3002\u8fd9\u610f\u5473\u7740\u81f3\u5c1163%\u7684\u65f6\u95f4\uff0cL218\u80fd\u591f\u68c0\u6d4b\u5230\u5199\u5165\u662f\u5197\u4f59\u7684\uff1a\u5b83\u4e0d\u6539\u53d8\u7ebf\u8def\u7684\u503c\uff0c\u56e0\u6b64\u7ebf\u8def\u88ab\u9759\u9ed8\u5730\u9010\u51fa\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5199\u56deL3\u3002\u8fd9\u5927\u6982\u5c31\u662f\u5bfc\u81f4\u6027\u80fd\u63d0\u5347\u7684\u539f\u56e0\uff1aL3\u4e0a\u7684\u538b\u529b\u964d\u4f4e\u4e86\uff1a\u5c3d\u7ba1\u6240\u6709\u9690\u542b\u7684\u8bfb\u53d619\u4ecd\u7136\u9700\u8981\u901a\u8fc7L3\uff0c\u4f46\u8fd9\u4e9b\u884c\u4e2d\u53ea\u67091\u884c\u6700\u7ec8\u4f1a\u88ab\u5199\u56de\u3002\n\u4e00\u65e6\u6d4b\u8bd5\u5f00\u59cb\u8d85\u8fc7L3\u9608\u503c\uff0c\u5373\u4f7f\u5728\u586b\u51450\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u9a71\u9010\u4e5f\u53d8\u4e3a\u975e\u9759\u9ed8\u72b6\u6001\u3002\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u96f6\u4f18\u5316\u505c\u6b62\u53d1\u751f\u3002\u6b63\u5982\u524d\u9762\u63d0\u5230\u768415\uff0c\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684\u6a21\u5f0f\uff0c\u5373\u4f7f\u5bf9\u4e8e\u53ea\u8bfb\u5de5\u4f5c\u8d1f\u8f7d\u4e5f\u662f\u5982\u6b64\uff1a\u4e00\u65e6\u884c\u4f5c\u4e3aL3\u672a\u547d\u4e2d\u800c\u4e0d\u662f\u547d\u4e2d\u7684\u7ed3\u679c\u5230\u8fbeL2\uff0c\u5b83\u4eec\u968f\u540e\u7684\u9010\u51fa\u5c31\u53d8\u6210\u975e\u9759\u9ed8\u7684\uff0c\u5373\u4f7f\u4ece\u672a\u5199\u5165\u4e5f\u662f\u5982\u6b64\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u8fd9\u4e9b\u884c\u53ef\u80fd\u4ecd\u88ab\u68c0\u6d4b\u4e3a\u672a\u4fee\u6539\uff0c\u5c3d\u7ba1\u6211\u4eec\u81f3\u5c11\u5728L2_LINES_OUT\u4e8b\u4ef6\u53d1\u751f\u65f6\u5931\u53bb\u4e86\u5bf9\u6548\u679c\u7684\u53ef\u89c1\u6027\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u7ba1\u6240\u6709\u9010\u51fa\u90fd\u662f\u975e\u9759\u9ed8\u7684\uff0c\u4f46\u90e8\u5206\u9010\u51fa\u4ecd\u6307\u793a\u4f20\u51fa\u6570\u636e\u672a\u4fee\u6539\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u8ba4\uff0c\u5f53\u4f7f\u7528\u4e00\u7ec4\u4e0d\u540c\u4e8b\u4ef6\u79fb\u5165RAM\u65f6\uff0c\u8fd9\u79cd\u660e\u663e\u7684\u4f18\u5316\u4ecd\u7136\u4f1a\u53d1\u751f\u3002\u6709\u51e0\u4e2a\u53ef\u4f9b\u9009\u62e9-\u6211\u8bd5\u8fc7\u7684\u6240\u6709\u8fd9\u4e9b\u90fd\u8bb2\u8ff0\u4e86\u76f8\u540c\u7684\u6545\u4e8b\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecdunc_arb_trk_requests.write\uff0c\u6587\u6863\u5982\u4e0b\uff1a\n\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u76d1\u89c6\u5668\u7531L3\u548c\u5185\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u6d41\u4f7f\u7528\uff0c\u800c\u4e0d\u662fL2\u548cL3\u4e4b\u95f4\u7684\u6570\u636e\u6d41\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u7684\u5199\u5165\u901a\u5e38\u662f\u6307\u5c06\u5230\u8fbe\u5185\u5b58\u7684\u5199\u5165\u3002\n\u4e0b\u9762\u662f\u6b64\u4e8b\u4ef6\u5982\u4f55\u9488\u5bf9\u6211\u4eec\u4e00\u76f4\u5728\u8fd0\u884c\u7684\u540c\u4e00\u6d4b\u8bd5\u8fdb\u884c\u7f29\u653e(\u4e3a\u4e86\u5c06\u7126\u70b9\u8f6c\u79fb\u5230\u611f\u5174\u8da3\u7684\u533a\u57df\uff0c\u5927\u5c0f\u8303\u56f4\u5df2\u6539\u53d8)20\uff1a\n\u56fe3\u5f53\u7f13\u51b2\u533a\u8d85\u8fc7L3\u7684\u5927\u5c0f\u65f6\uff0c\u884c\u4e3a\u826f\u597d\u7684\u586b\u51451\u7684\u5199\u5165\u6b21\u6570\u63a5\u8fd1\u6bcf\u4e2a\u9ad8\u901f\u7f13\u5b58\u7ebf\u4e00\u6b21\u5199\u5165-\u540c\u6837\uff0c\u8fd9\u4e5f\u662f\u9884\u671f\u7684\u3002\u5bf9\u4e8e\u66f4\u53db\u9006\u7684\u586b\u5145\u7269\u6765\u8bf4\uff0c\u51e0\u4e4e\u6b63\u597d\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u4e00\u534a\u3002\u5bf9\u4e8e\u57fa\u51c6\u6d4b\u8bd5\u5199\u5165\u7684\u6bcf\u4e24\u884c\uff0c\u6211\u4eec\u53ea\u5411\u5185\u5b58\u5199\u56de\u4e00\u884c\uff01\u5982\u679c\u6211\u4eec\u6d4b\u91cf\u96c6\u6210\u5b58\u50a8\u5668\u63a7\u5236\u566821\u5904\u7684\u5b58\u50a8\u5668\u5199\u5165\uff0c\u4e5f\u4f1a\u53cd\u6620\u76f8\u540c\u76842\uff1a1\u6bd4\u7387\uff1a\u5199\u5165\u96f6\u4ec5\u5bfc\u81f4\u5b58\u50a8\u5668\u63a7\u5236\u5668\u5904\u7684\u5199\u5165\u6b21\u6570\u7684\u4e00\u534a\u3002\n\u8fd9\u4e00\u5207\u90fd\u76f8\u5f53\u5947\u602a\u3002\u6709\u4e00\u4e2a\u201c\u5197\u4f59\u5199\u5165\u201d\u4f18\u5316\u6765\u907f\u514d\u5199\u56de\u76f8\u540c\u7684\u503c\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\uff1a\u8fd9\u4f3c\u4e4e\u53ef\u4ee5\u4f7f\u4e00\u4e9b\u5e38\u89c1\u7684\u5199\u5165\u6a21\u5f0f\u53d7\u76ca\u3002\n\u5b83\u4f3c\u4e4e\u53ea\u9002\u7528\u4e8e\u5168\u96f6\u503c\uff0c\u8fd9\u53ef\u80fd\u6709\u70b9\u4e0d\u5bfb\u5e38\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u96f6\u8986\u76d6\u96f6\u662f\u6700\u5e38\u89c1\u7684\u5197\u4f59\u5199\u5165\u60c5\u51b5\u4e4b\u4e00\uff0c\u5e76\u4e14\u68c0\u6d4b\u96f6\u503c\u53ef\u4ee5\u6bd4\u5b8c\u5168\u6bd4\u8f83\u66f4\u5ec9\u4ef7\u5730\u5b8c\u6210\u3002\u8fd8\u6709\uff0c\u201c\u662f\u96f6\u5417\uff1f\u201d\u72b6\u6001\u53ef\u4ee5\u4f5c\u4e3a\u5355\u4e2a\u4f4d\u8fdb\u884c\u901a\u4fe1\u548c\u5b58\u50a8\uff0c\u8fd9\u53ef\u80fd\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679cL2\u53c2\u4e0e\u91cd\u590d\u68c0\u6d4b(L2_LINES_OUT\u7ed3\u679c\u663e\u793a\u662f\u8fd9\u6837)\uff0c\u90a3\u4e48\u68c0\u6d4b\u53ef\u80fd\u5728\u7ebf\u8def\u88ab\u9010\u51fa\u65f6\u53d1\u751f\uff0c\u6b64\u65f6\u60a8\u60f3\u8981\u4e0eL3\u4e2d\u7684\u7ebf\u8def\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f46\u662f\u60a8\u80af\u5b9a\u4e0d\u80fd\u5c06\u6574\u4e2a\u65e7\u503c\u5b58\u50a8\u5728L2\u4e2d\u6216\u5176\u9644\u8fd1(\u8fd9\u5c06\u9700\u8981\u4e0eL2\u672c\u8eab\u4e00\u6837\u5927\u7684\u5b58\u50a8\u7a7a\u95f4)\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u5c06\u8be5\u884c\u4e3a\u96f6\u7684\u6307\u793a\u7b26\u5b58\u50a8\u5728\u5355\u4e2a\u4f4d\u4e2d\uff0c\u5e76\u5c06\u73b0\u6709\u884c\u4f5c\u4e3a\u9a71\u9010\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u6bd4\u8f83\u3002\n\u7136\u800c\uff0c\u6700\u5947\u602a\u7684\u662f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u53c2\u657022\uff0c\u4f18\u5316\u5e76\u4e0d\u662f100%\u5730\u542f\u52a8\uff0c\u800c\u662f\u53ea\u5bf940%\u523060%\u7684\u4ee3\u7801\u884c\u8d77\u4f5c\u7528\u3002\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u8fd9\u79cd\u6548\u679c\u5462\uff1f\u53ef\u4ee5\u60f3\u8c61\uff0c\u53ef\u80fd\u5b58\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u9884\u6d4b\u5668\uff0c\u5176\u6839\u636e\u4f8b\u5982\u4f18\u5316\u6700\u8fd1\u662f\u5426\u6709\u6548(\u5373\uff0c\u5197\u4f59\u5b58\u50a8\u6700\u8fd1\u662f\u5426\u5e38\u89c1)\u6765\u786e\u5b9a\u662f\u5426\u5e94\u7528\u8be5\u4f18\u5316\u3002\u6216\u8bb8\u8be5\u9884\u6d4b\u5668\u8fd8\u8003\u8651\u4e86\u8bf8\u5982\u51fa\u7ad9\u961f\u521723\u7684\u5360\u7528\u7387\u4e4b\u7c7b\u7684\u56e0\u7d20\uff1a\u5f53\u603b\u7ebf\u63a5\u8fd1\u5bb9\u91cf\u65f6\uff0c\u4e0e\u603b\u7ebf\u4e0a\u51e0\u4e4e\u6ca1\u6709\u660e\u663e\u538b\u529b\u7684\u60c5\u51b5\u76f8\u6bd4\uff0c\u641c\u7d22\u6d88\u9664\u5197\u4f59\u5199\u5165\u53ef\u80fd\u66f4\u503c\u5f97\u529f\u7387\u6216\u7b49\u5f85\u65f6\u95f4\u635f\u5931\u3002\n\u5728\u6b64\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u4efb\u4f55\u9884\u6d4b\u8005\u90fd\u4f1a\u53d1\u73b0\u4f18\u5316\u662f100%\u6709\u6548\u7684\uff1a\u6bcf\u6b21\u5199\u5165\u90fd\u662f\u5197\u4f59\u7684\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u731c\u6d4b\uff0c\u7b2c\u4e8c\u4e2a\u6761\u4ef6(\u961f\u5217\u5360\u7528\u7387)\u4f1a\u5bfc\u81f4\u53ea\u6d88\u9664\u4e00\u4e9b\u5546\u5e97\u7684\u884c\u4e3a\uff1a\u968f\u7740\u66f4\u591a\u7684\u5546\u5e97\u88ab\u6d88\u9664\uff0c\u603b\u7ebf\u4e0a\u7684\u8d1f\u8f7d\u4f1a\u964d\u4f4e\uff0c\u56e0\u6b64\u5728\u67d0\u4e2a\u70b9\u4e0a\uff0c\u9884\u6d4b\u5668\u4e0d\u518d\u8ba4\u4e3a\u5220\u9664\u5546\u5e97\u662f\u503c\u5f97\u7684\uff0c\u5e76\u4e14\u60a8\u4f1a\u8fbe\u5230\u4e00\u79cd\u7a33\u5b9a\u72b6\u6001\uff0c\u5373\u6839\u636e\u9884\u6d4b\u5668\u9608\u503c\u53ea\u6d88\u9664\u4e00\u5c0f\u90e8\u5206\u5546\u5e97\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u68c0\u9a8c\u8fd9\u4e00\u7406\u8bba\uff1a\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u4efb\u4f55\u5546\u5e97\u90fd\u53ef\u4ee5\u88ab\u6dd8\u6c70\uff0c\u4f46\u88ab\u6dd8\u6c70\u5546\u5e97\u7684\u6bd4\u7387\u53d7\u5230\u9884\u6d4b\u8005\u884c\u4e3a\u7684\u9650\u5236\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u7eaf\u5197\u4f59\u96f6\u5546\u5e97\u7684\u57fa\u51c6\u4ee560%\u7684\u6bd4\u7387\u88ab\u6d88\u9664\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9884\u671f\u4efb\u4f55\u81f3\u5c11\u5177\u670960%\u5197\u4f59\u5546\u5e97\u7684\u57fa\u51c6\u53ef\u4ee5\u8fbe\u523060%\u7684\u6bd4\u7387\uff0c\u800c\u5982\u679c\u6bd4\u7387\u8f83\u4f4e\uff0c\u60a8\u5c06\u770b\u5230\u6240\u6709\u5197\u4f59\u5546\u5e97\u88ab\u5b8c\u5168\u6d88\u9664(\u56e0\u4e3a\u73b0\u5728\u603b\u7ebf\u59cb\u7ec8\u4fdd\u6301\u8db3\u591f\u7684\u6d3b\u52a8\u4ee5\u89e6\u53d1\u9884\u6d4b\u5668)\u3002\n\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e2a\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5b83\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5b9e\u73b0alt01\uff0c\u5b83\u5728\u5199\u51650\u7684\u7f13\u5b58\u884c\u548c\u5199\u51651\u7684\u7f13\u5b58\u884c\u4e4b\u95f4\u4ea4\u66ff\u3002\u6240\u6709\u5199\u5165\u90fd\u662f\u5197\u4f59\u7684\uff0c\u4f46\u53ea\u670950%\u662f\u96f6\uff0c\u56e0\u6b64\u5728\u6d89\u53ca\u9884\u6d4b\u5668\u7684\u7406\u8bba\u4e0b\uff0c\u6211\u4eec\u9884\u8ba1\u53ef\u80fd\u4f1a\u6d88\u966450%\u7684\u5b58\u50a8(\u5373\uff0c100%\u7684\u5197\u4f59\u5b58\u50a8\u88ab\u6d88\u9664\uff0c\u5b83\u4eec\u5360\u603b\u6570\u768450%)\u3002\n\u8fd9\u91cc\u6211\u4eec\u5173\u6ce8L3\uff0c\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u7684\u56fe2\uff0c\u663e\u793a\u4e86\u9759\u9ed8\u9a71\u9010(\u975e\u9759\u9ed8\u9a71\u9010\u6784\u6210\u4e86\u5176\u4f59\u90e8\u5206\uff0c\u4e0e\u524d\u9762\u4e00\u6837\u52a0\u8d77\u6765\u4e3a1)\uff1a\n\u56fe4\u6211\u4eec\u6ca1\u6709\u770b\u523050%\u7684\u6d88\u9664\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u770b\u5230\u5168\u96f6\u60c5\u51b5\u7684\u6d88\u9664\u7387\u8fd8\u4e0d\u5230\u4e00\u534a\uff1a27%\u5bf963%\u3002L3\u533a\u57df\u7684\u6027\u80fd\u6bd4All One\u7684\u60c5\u51b5\u8981\u597d\uff0c\u4f46\u53ea\u662f\u7a0d\u5fae\u597d\u4e00\u70b9\uff01\u56e0\u6b64\uff0c\u8fd9\u5e76\u4e0d\u652f\u6301\u9884\u6d4b\u5668\u80fd\u591f\u6d88\u9664\u4efb\u4f55\u5546\u5e97\u5e76\u4e3b\u8981\u6839\u636e\u51fa\u7ad9\u961f\u5217\u5360\u6709\u7387\u8fdb\u884c\u64cd\u4f5c\u7684\u7406\u8bba\u3002\n\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u7f13\u51b2\u533a\u4ec5\u9002\u5408RAM\u7684\u533a\u57df\uff0c\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u7684\u56fe3\uff1a\n\u56fe5\u56de\u60f3\u4e00\u4e0b\uff0c\u8fd9\u4e9b\u884c\u663e\u793a\u4e86\u5230\u8fbe\u5b58\u50a8\u5668\u5b50\u7cfb\u7edf\u7684\u5199\u5165\u6b21\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230alt01\u518d\u6b21\u5212\u5206\u4e860\u548c1\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a\u5927\u7ea675%\u7684\u5199\u5165\u5230\u8fbe\u5185\u5b58\uff0c\u800c\u5728\u5168\u96f6\u7684\u60c5\u51b5\u4e0b\u53ea\u670948%\uff0c\u56e0\u6b64\u6d88\u9664\u7684\u6548\u679c\u540c\u6837\u5927\u7ea6\u662f\u4e00\u534a\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6027\u80fd\u8fd8\u5212\u5206\u4e86\u51680\u548c\u51681\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a\u5b83\u51e0\u4e4e\u6b63\u597d\u4ecb\u4e8e\u5176\u4ed6\u4e24\u79cd\u60c5\u51b5\u4e4b\u95f4\u3002\n\u6240\u4ee5\u6211\u4e0d\u77e5\u9053\u5230\u5e95\u662f\u600e\u4e48\u56de\u4e8b\u3002\u4f3c\u4e4e\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u7ebf\u6761\u6709\u8d44\u683c\u88ab\u6dd8\u6c70\uff0c\u8fd9\u662f\u7531\u4e8e\u4e00\u4e9b\u672a\u77e5\u7684\u5185\u90e8\u673a\u5236\u5728UARCH\u4e2d\u7684\u539f\u56e0\u3002\n\u6700\u540e\uff0c\u4e0b\u9762\u662f\u5404\u79cd\u5176\u4ed6Intel\u548cAMDx86\u67b6\u6784\u4ee5\u53caIBM\u7684POWER9\u548cAmazon\u7684Graviton 2 ARM\u5904\u7406\u5668\u7684\u6027\u80fd\u7ed3\u679c(\u4e0e\u56fe1\u76f8\u540c)\uff0c\u6bcf\u4e2a\u9009\u9879\u5361\u4e00\u4e2a\u3002\n\u5728\u6d4b\u8bd5\u7684\u4efb\u4f55\u5176\u4ed6\u975eSKL\u786c\u4ef6\u7684\u6027\u80fd\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u5197\u4f59\u5199\u5165\u4f18\u5316\u5e76\u4e0d\u660e\u663e\u3002\u751a\u81f3\u6ca1\u6709\u50cf\u54c8\u65af\u97e6\u5c14\u6216Skylake-X\u8fd9\u6837\u5bc6\u5207\u76f8\u5173\u7684\u82f1\u7279\u5c14\u786c\u4ef6\u3002\u6211\u8fd8\u7528\u6027\u80fd\u8ba1\u6570\u5668\u505a\u4e86\u4e00\u4e9b\u73b0\u573a\u6d4b\u8bd5\uff0c\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u5199\u64cd\u4f5c\u51cf\u5c11\u7684\u8bc1\u636e\u3002\u56e0\u6b64\uff0c\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8fd9\u53ef\u80fd\u53ea\u662fSkylake\u5ba2\u6237\u7aef\u7684\u4e00\u4ef6\u4e8b(\u5f53\u7136\uff0cSkylake\u5ba2\u6237\u7aef\u53ef\u80fd\u662f\u90e8\u7f72\u6700\u5e7f\u6cdb\u7684\u82f1\u7279\u5c14\u5ba2\u6237\u7aef\uff0c\u5373\u4f7f\u662f\u56e0\u4e3a\u6709\u8bb8\u591a\u540d\u79f0\u4e0d\u540c\u7684\u53d8\u4f53\uff1aKaby Lake\u3001Coffee Lake\u7b49)\u3002\u8bf7\u6ce8\u610f\uff0cSkylake-S\u5728\u8fd9\u91cc\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u4e0e\u672c\u6587\u5176\u4f59\u90e8\u5206\u4e0d\u540c\u7684(\u53f0\u5f0f\u673ai7-6700)\u82af\u7247\uff0c\u6240\u4ee5\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u786e\u8ba4\u8fd9\u53d1\u751f\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u82af\u7247\u4e0a\u3002\n\u9664\u4e86RAM\u533a\u57df\uff0c\u6c99\u6865\u7684\u541e\u5410\u91cf\u662f\u5176\u540e\u7ee7\u8005\u7684\u4e00\u534a\uff1a\u5c3d\u7ba1\u652f\u630132\u5b57\u8282AVX\u6307\u4ee4\uff0c\u4f46\u5185\u6838\u4e2d\u53ea\u670916\u5b57\u8282\u7684\u52a0\u8f7d/\u5b58\u50a8\u8def\u5f84\u3002\nAMD Zen2\u5728L2\u548cL3\u533a\u57df\u5177\u6709\u51fa\u8272\u7684\u5199\u5165\u6027\u80fd\u3002\u6240\u6709\u82f1\u7279\u5c14\u82af\u7247\u5728L2\u4e2d\u7684\u5199\u5165\u541e\u5410\u91cf\u90fd\u4e0b\u964d\u5230\u5927\u7ea6\u4e00\u534a\uff1a\u7565\u9ad8\u4e8e16\u5b57\u8282/\u5468\u671f(\u5bf9\u4e8e\u5927\u591a\u6570\u82af\u7247\u6765\u8bf4\uff0c\u5927\u7ea6\u662f50 GB/s)\u3002Zen2\u4fdd\u6301\u5176L1\u541e\u5410\u91cf\uff0c\u5b9e\u9645\u4e0a\u5728L2\u4e2d\u6709\u6700\u9ad8\u7684\u7ed3\u679c\uff1a\u8d85\u8fc7100 Gb/s\u3002\u5728\u6b64\u6d4b\u8bd5\u4e2d\uff0cZen2\u5728L3\u4e2d\u4e5f\u7ba1\u7406\u8d85\u8fc770 Gb/s\uff0c\u8fdc\u8fdc\u597d\u4e8eIntel\u82af\u7247\u3002\nCannon Lake\u548cSkylake-X\u5728L2\u5c45\u4f4f\u533a\u90fd\u8868\u73b0\u51fa\u76f8\u5f53\u5927\u7684\u6837\u672c\u95f4\u65b9\u5dee\u3002\u6211\u5728\u8fd9\u91cc\u7684\u7406\u8bba\u662f\u9884\u53d6\u5668\u5e72\u6270\uff0c\u5b83\u7684\u884c\u4e3a\u4e0e\u65e9\u671f\u7684\u82af\u7247\u4e0d\u540c\uff0c\u4f46\u6211\u4e0d\u786e\u5b9a\u3002\nSkylake-X\u7684L3\u8bbe\u8ba1\u4e0e\u5176\u4ed6\u82af\u7247\u4e0d\u540c\uff0cL3\u586b\u5145\u541e\u5410\u91cf\u76f8\u5f53\u4f4e\uff0c\u7ea6\u4e3a\u5f53\u4ee3Intel\u82af\u7247\u7684\u4e00\u534a\uff0c\u4e0d\u5230Zen2\u7684\u4e09\u5206\u4e4b\u4e00\u3002\nPOWER9\u7684\u8868\u73b0\u65e2\u4e0d\u5dee\u4e5f\u4e0d\u597d\u3002\u6700\u6709\u8da3\u7684\u90e8\u5206\u53ef\u80fd\u662f\u9ad8L3\u586b\u5145\u541e\u5410\u91cf\uff1aL3\u541e\u5410\u91cf\u4e0eL1\u6216L2\u541e\u5410\u91cf\u4e00\u6837\u9ad8\u6216\u66f4\u9ad8\uff0c\u4f46\u4ecd\u4e0d\u5728Zen2\u8303\u56f4\u5185\u3002\n\u4e9a\u9a6c\u900a\u7684\u65b0Graviton\u5904\u7406\u5668\u975e\u5e38\u6709\u8da3\u3002\u5b83\u4f3c\u4e4e\u88ab\u9650\u5236\u5728\u6bcf\u4e2a\u5468\u671f24\u4e2a16\u5b57\u8282\u7684\u5b58\u50a8\uff0c\u4f7f\u5176\u53ef\u80fd\u7684\u5b58\u50a8\u541e\u5410\u91cf\u8fbe\u523040 GB/s\u7684\u5cf0\u503c\uff0c\u56e0\u6b64\u4e0e\u53ef\u4ee5\u8fbe\u5230100 GB/s\u6216\u66f4\u9ad8\u7684\u7ade\u4e89\u5bf9\u624b(\u4ed6\u4eec\u6709\u66f4\u9ad8\u7684\u9891\u7387\u548c32\u5b57\u8282\u7684\u5b58\u50a8)\u76f8\u6bd4\uff0c\u5b83\u5728L1\u533a\u57df\u8868\u73b0\u4e0d\u4f73\uff0c\u4f46\u5b83\u4e00\u76f4\u4fdd\u6301\u774040 GB/s\u7684RAM\u5927\u5c0f\uff0cRAM\u7ed3\u679c\u8db3\u591f\u5e73\uff0c\u53ef\u4ee5\u5728\u5176\u4e0a\u63d0\u4f9b\u996e\u6599\uff0c\u800c\u8fd9\u662f\u5728\u5171\u4eab\u768464\u4e2aCPU\u4e3b\u673a\u4e0a\uff0c\u6211\u53ea\u652f\u4ed8\u4e86\u5355\u4e2a\u5185\u683825\u7684\u8d39\u7528\uff01RAM\u6027\u80fd\u662f\u6240\u6709\u6d4b\u8bd5\u7684\u786c\u4ef6\u4e2d\u6700\u9ad8\u7684\u3002\n\u4ee5\u4e0b\u662f\u6211\u4eec\u53d1\u73b0\u7684\u7b80\u8981\u603b\u7ed3\u3002\u5982\u679c\u4f60\u521a\u8bfb\u5b8c\u6574\u7bc7\u6587\u7ae0\uff0c\u8fd9\u4f1a\u6709\u70b9\u591a\u4f59\uff0c\u4f46\u6211\u4eec\u9700\u8981\u5bb9\u7eb3\u6bcf\u4e2a\u521a\u521a\u8df3\u5230\u8fd9\u4e00\u90e8\u5206\u7684\u4eba\uff0c\u5bf9\u5417\uff1f\n\u5f53\u5c06\u5168\u96f6\u9ad8\u901f\u7f13\u5b58\u7ebf\u5199\u5165\u5df2\u7ecf\u5168\u96f6\u7684\u9ad8\u901f\u7f13\u5b58\u7ebf\u65f6\uff0c\u82f1\u7279\u5c14\u82af\u7247\u663e\u7136\u53ef\u4ee5\u6d88\u9664\u4e00\u4e9b\u5197\u4f59\u5b58\u50a8\u3002\n\u6b64\u4f18\u5316\u81f3\u5c11\u6700\u65e9\u5e94\u7528\u4e8eL3\u7684L2\u5199\u56de\uff0c\u56e0\u6b64\u9002\u7528\u4e8e\u5de5\u4f5c\u96c6\u4e0d\u9002\u5408L2\u7684\u6269\u5c55\u3002\n\u6839\u636e\u5de5\u4f5c\u96c6\u5927\u5c0f\uff0c\u8be5\u6548\u679c\u6d88\u9664\u4e86\u5bf9L3\u7684\u5199\u5165\u8bbf\u95ee\u548c\u5bf9\u5185\u5b58\u7684\u5199\u5165\u3002\n\u5bf9\u4e8e\u8fd9\u91cc\u8ba8\u8bba\u7684\u7eaf\u5b58\u50a8\u57fa\u51c6\uff0c\u6b64\u4f18\u5316\u7684\u6548\u679c\u662f\u5199\u5165\u6b21\u6570\u51cf\u5c11\u4e86~63%(\u5230L3)\u548c~50%(\u5230\u5185\u5b58)\uff0c\u8fd0\u884c\u65f6\u95f4\u51cf\u5c11\u4e8615%\u523020%\u3002\n\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u662f\u771f\u6b63\u6709\u7528\u7684\u5462\uff1f\u6211\u4eec\u80fd\u5229\u7528\u8fd9\u4e00\u53d1\u73b0\u5c06\u8ba1\u7b97\u4e2d\u771f\u6b63\u91cd\u8981\u7684\u4e8b\u60c5\u7684\u901f\u5ea6\u63d0\u9ad8\u56db\u500d\u5417\uff1f\u8fd9\u4e9b\u4efb\u52a1\u5305\u62ec\u6bd4\u7279\u5e01\u6316\u6398\u3001\u9ad8\u9891\u4ea4\u6613\u548c\u5b9e\u65f6\u5b9a\u5411\u5e7f\u544a\u3002\n\u6ca1\u6709\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u6ca1\u6709-\u4f46\u5b83\u53ef\u80fd\u4f1a\u5bf9\u67d0\u4e9b\u60c5\u51b5\u8d77\u5230\u5c0f\u5c0f\u7684\u63d0\u632f\u4f5c\u7528\u3002\n\u8fd9\u4e9b\u6848\u4f8b\u4e2d\u7684\u8bb8\u591a\u53ef\u80fd\u5728\u6ca1\u6709\u4efb\u4f55\u7279\u522b\u52aa\u529b\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u4e86\u597d\u5904\u3002\u6bd5\u7adf\uff0c\u96f6\u5df2\u7ecf\u662f\u4e00\u4e2a\u7279\u5b9a\u503c\uff1a\u5bf9\u4e8e\u67d0\u4e9b\u8bed\u8a00\uff0c\u5b83\u662f\u5185\u5b58\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5230\u8fbe\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u662f\u5728\u8bed\u8a00\u5206\u914d\u7ea7\u522b\u3002\u56e0\u6b64\uff0c\u8bb8\u591a\u53ef\u80fd\u83b7\u5f97\u8fd9\u79cd\u597d\u5904\u7684\u6848\u4f8b\uff0c\u53ef\u80fd\u5df2\u7ecf\u662f\u8fd9\u6837\u4e86\u3002\n\u5197\u4f59\u7684\u96f6\u8fc7\u96f6\u53ef\u80fd\u4e5f\u4e0d\u50cf\u60a8\u60f3\u8c61\u7684\u90a3\u4e48\u7f55\u89c1\uff1a\u8003\u8651\u5230\u5728\u4f4e\u7ea7\u8bed\u8a00\u4e2d\uff0c\u5185\u5b58\u901a\u5e38\u5728\u4ece\u5206\u914d\u5668\u6536\u5230\u540e\u88ab\u6e05\u9664\uff0c\u4f46\u662f\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u5185\u5b58\u76f4\u63a5\u6765\u81ea\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6240\u4ee5\u5b83\u5df2\u7ecf\u662f\u96f626\u4e86\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u8fdb\u884c\u5927\u91cf\u5197\u4f59\u5199\u5165\uff0c\u60a8\u53ef\u80fd\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u3002\n..", "note_en": "I had no plans to write  another post about zeros, but when life throws you a zero make zeroaid, or something like that. Here we go!\n If you want to jump over the winding reveal and just read the summary and advice,  now is your chance.\n When writing simple memory benchmarks I have always taken the position the  value written to memory didn\u2019t matter. Recently, while running a straightforward benchmark  1 probing the interaction between AVX-512 stores and  read for ownership I ran into a weird performance deviation. This is that story  2.\n     On current mainstream CPUs, the timing of most instructions isn\u2019t data-dependent. That is, their performance is the same regardless of the  value of the input(s) to the instruction. Unlike you  3 or me your CPU takes the same time to add  1 + 2 as it does to add  68040486 + 80866502.\n  Integer division is data-dependent on most x86 CPUs: larger inputs generally take longer although the details vary widely among microarchitectures  4.\n  BMI2 instructions  pdep and  pext have  famously terrible and data-dependent performance on AMD Zen and Zen2 chips.\n  Floating point instructions often have slower performance when  denormal numbers are encountered, although some rounding modes such as  flush to zero may avoid this.\n That list is not exhaustive: there are other cases of data-dependent performance, especially when you start digging into complex microcoded instructions such as   cpuid. Still, it isn\u2019t unreasonable to assume that most simple instructions not listed above execute in constant time.\n  Certainly, the  address matters. After all the address determines the caching behavior, and caching can easily account for two orders of magnitude difference in performance  5. On the other hand, I wouldn\u2019t expect the  data values loaded or stored to matter. There is not much reason to expect the memory or caching subsystem to care about the value of the bits loaded or stored, outside of scenarios such as hardware-compressed caches not widely deployed  6 on x86.\n  The full benchmark associated with this post (including some additional benchmarks not mention here) is  available on GitHub.\n    Let\u2019s start with a very simple task. Write a function that takes an  int value  val and fills a buffer of a given size with copies of that value. Just like   memset, but with an  int value rather than a  char one.\n  void  fill_int ( int *  buf ,  size_t  size ,  int  val )  {  for  ( size_t  i  =  0 ;  i  &lt;  size ;  ++ i )  {  buf [ i ]  =  val ;  } }\n  void  fill_int ( int *  buf ,  size_t  size ,  int  val )  {  for  ( int *  end  =  buf  +  size ;  buf  !=  end ;  ++ buf )  {  * buf  =  val ;  } }\n In C++, we don\u2019t even need that much: we can simply delegate directly to  std::fill which does the same thing as a one-liner  8:\n  There is nothing magic about  std::fill, it also  uses a loop just like the C version above. Not surprisingly, gcc and clang compile them to the  same machine code  9.\n With the right compiler arguments ( -march=native -O3 -funroll-loops in our case), we expect this  std::fill version (and all the others) to be implemented with with AVX vector instructions, and  it is so. The part which does the heavy lifting work for large fills looks like this:\n . L4 :  vmovdqu  YMMWORD  PTR  [ rax  +  0 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  32 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  64 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  96 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  128 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  160 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  192 ] ,  ymm1  vmovdqu  YMMWORD  PTR  [ rax  +  224 ] ,  ymm1  add  rax ,  256  cmp  rax ,  r9  jne  . L4\n It copies 256 bytes of data every iteration using eight 32-byte AVX2 store instructions. The full function is much larger, with a scalar portion for buffers smaller than 32 bytes (and which also handles the odd elements after the vectorized part is done), and a vectorized jump table to handle up to seven 32-byte chunks before the main loop. No effort is made to align the destination, but we\u2019ll align everything to 64 bytes in our benchmark so this won\u2019t matter.\n  Enough foreplay: let\u2019s take the C++ version out for a spin, with two different fill values ( val) selected completely at random: zero ( fill0) and one ( fill1). We\u2019ll use gcc 9.2.1 and the  -march=native -O3 -funroll-loops flags mentioned above.\n We organize it so that for both tests we call the  same non-inlined function: the exact same instructions are executed and only the value differs. That is, the compile isn\u2019t making any data-dependent optimizations.\n Here\u2019s the fill throughput in GB/s for these two values, for region sizes ranging from 100 up to 100,000,000 bytes.\n  Figure 1    Not surprisingly, the performance depends heavily on what level of cache the filled region fits into.\n Everything is fairly sane when the buffer fits in the L1 or L2 cache (up to ~256 KiB  12). The relatively poor performance for very small region sizes is explained by the prologue and epilogue of the vectorized implementation: for small sizes a relatively large amount of of time is spent in these int-at-a-time loops: rather than copying up to 32 bytes per cycle, we copy only 4.\n This also explains the bumpy performance in the fastest region between ~1,000 and ~30,000 bytes: this is highly reproducible and not noise. It occurs because because some sampled values have a larger remainder mod 32. For example, the sample at 740 bytes runs at ~73 GB/s while the next sample at 988 runs at a slower 64 GB/s. That\u2019s because 740 % 32 is 4, while 988 % 32 is 28, so the latter size has 7x more cleanup work to to do than the former  13. Essentially, we are sampling semi-randomly a sawtooth function and if you plot this region with finer granularity (go for it or just  click here  14) you can see it quite clearly.\n   Weird in that we we see a clear divergence between stores of zero versus ones. Remember that this is the exact same function, the same  machine code executing the same stream of instructions, only varying in the value of the  ymm1 register passed to the store instruction. Storing zero is consistently about 17% to 18% faster than storing one, both in the region covered by the L3 (up to 6 MiB on my system), and beyond that where we expect misses to RAM (it looks like the difference narrows in the RAM region, but it\u2019s mostly a trick of the eye: the relative performance difference is about the same).\n What\u2019s going on here? Why does the CPU care  what values are being stored, and why is zero special?\n We can get some additional insight by measuring the  l2_lines_out.silent and  l2_lines_out.non_silent events while we focus on the regions that fit in L2 or L3. These events measure the number of lines evicted from L2 either  silently or  non-silently.\n   Counts the number of lines that are silently dropped by L2 cache when triggered by an L2 cache fill. These lines are typically in Shared or Exclusive state.\n  Counts the number of lines that are evicted by L2 cache when triggered by an L2 cache fill. Those lines are in Modified state. Modified lines are written back to L3.\n The states being referred to here are  MESI cache states, commonly abbreviated M (modified), E (exclusive, but not modified) and S (possibly shared, not modified).\n The second definition is not completely accurate. In particular, it implies that only modified lines trigger the  non-silent event. However,  I find that unmodified lines in E state can also trigger this event. Roughly, the behavior for unmodified lines seems to be that lines that miss in L2  and L3 usually get filled into the L2 in a state where they will be evicted  non-silently, but unmodified lines that miss in L2 and  hit in L3 will generally be evicted silently  15. Of course, lines that are modified  must be evicted non-silently in order to update the outer levels with the new data.\n In summary: silent evictions are associated with unmodified lines in E or S state, while non-silent evictions are associated with M, E or (possibly) S state lines, with the silent vs non-silent choice for E and S being made in some unknown matter.\n Let\u2019s look at silent vs non-silent evictions for the  fill0 and  fill1 cases:\n  Figure 2   The  total number of evictions (sum of silent and non-silent) is the same for both cases: near zero  17 when the region fits in L2, and then quickly increases to ~1 eviction per stored cache line. In the L3,  fill1 also behaves as we\u2019d expect: essentially all of the evictions are non-silent. This makes sense since modified lines  must be evicted non-silently to write their modified data to the next layer of the cache subsystem.\n For  fill0, the story is different. Once the buffer size no longer fits in L2, we see the same  total number of evictions from L2, but 63% of these are silent, the rest non-silent. Remember, only unmodified lines even have the hope of a silent eviction. This means that at least 63% of the time, the L2  18 is able to detect that the write is  redundant: it doesn\u2019t change the value of the line, and so the line is evicted silently. That is, it is never written back to the L3. This is presumably what causes the performance boost: the pressure on the L3 is reduced: although all the implied reads  19 still need to go through the L3, only about 1 out of 3 of those lines ends up getting written back.\n Once the test starts to exceed the L3 threshold, all of the evictions become non-silent even in the  fill0 case. This doesn\u2019t necessarily mean that the zero optimization stops occurring. As mentioned earlier  15, it is a typical pattern even for read-only workloads: once lines arrive in L2 as a result of an L3 miss rather than a hit, their subsequent eviction becomes non-silent, even if never written. So we can assume that the lines are probably still detected as not modified, although we lose our visibility into the effect at least as far as the  l2_lines_out events go. That is, although all evictions are non-silent, some fraction of the evictions are still indicating that the outgoing data is unmodified.\n  In fact, we can confirm that this apparent optimization still happens as move into RAM using a different set of events. There are several to choose from \u2013 and all of those that I tried tell the same story. We\u2019ll focus on  unc_arb_trk_requests.writes,  documented as follows:\n  Important to note that the \u201cuncore tracker\u201d these events monitor is used by data flowing between L3 and memory, not between L2 and L3. So  writes here generally refers to writes that will reach memory.\n Here\u2019s how this event scales for the same test we\u2019ve been running this whole time (the size range has been shifted for focus on the area of interest)  20:\n  Figure 3  The number of writes for well-behaved  fill1 approaches one write per cache line as the buffer exceeds the size of L3 \u2013 again, this is as expected. For the more rebellious  fill0, it is almost exactly half that amount. For every two lines written by the benchmark, we only write one back to memory! This same 2:1 ratio is reflected also if we measure memory writes at the integrated memory controller  21: writing zeros results in only half the number of writes at the memory controller.\n  This is all fairly strange. It\u2019s not weird that there would be a \u201credundant writes\u201d optimization to avoid writing back identical values: this seems like it could benefit some common write patterns.\n It is perhaps a bit unusual that it only apparently applies to all-zero values. Maybe this is because zeros overwriting zeros is one of the most common redundant write cases, and detecting zero values can done more cheaply than a full compare. Also, the \u201cis zero?\u201d state can be communicated and stored as a single bit, which might be useful. For example, if the L2 is involved in the duplicate detection (and the  l2_lines_out results suggest it is), perhaps the detection happens when the line is evicted, at which point you want to compare to the line in L3, but you certainly can\u2019t store the entire old value in or near the L2 (that would require storage as large as the L2 itself). You could store an indicator that the line was zero, however, in a single bit and compare the existing line as part of the eviction process.\n  What is the weirdest of all, however, is that the optimization doesn\u2019t kick in 100% of the time but only for 40% to 60% of the lines, depending on various parameters  22. What would lead to that effect? One could imagine that there could be some type of predictor which determines whether to apply this optimization or not, depending on e.g., whether the optimization has recently been effective \u2013 that is, whether redundant stores have been common recently. Perhaps this predictor also considers factors such as the occupancy of outbound queues  23: when the bus is near capacity, searching for eliminating redundant writes might be more worth the power or latency penalty compared to the case when there is little apparent pressure on the bus.\n In this benchmark, any predictor would find that the optimization is 100% effective:  every write is redundant! So we might guess that the second condition (queue occupancy) results in a behavior where only some stores are eliminated: as more stores are eliminated, the load on the bus becomes lower and so at some point the predictor no long thinks it is worth it to eliminate stores and you reach a kind of stable state where only a fraction of stores are eliminated based on the predictor threshold.\n  We can kind of test that theory: in this model, any store is  capable of being eliminated, but the ratio of eliminated stores is bounded above by the predictor behavior. So if we find that a benchmark of  pure redundant zero stores is eliminated at a 60% rate, we might expect that any benchmark with at least 60% redundant stores can reach the 60% rate, and with lower rates, you\u2019d see full elimination of all redundant stores (since now the bus always stays active enough to trigger the predictor).\n  Let\u2019s try a benchmark which adds a new implementation,  alt01 which alternates between writing a cache line of zeros and a cache line of ones. All the writes are redundant, but only 50% are zeros, so under the theory that a predictor is involved we expect that maybe 50% of the stores will be eliminated (i.e., 100% of the redundant stores are eliminated and they make up 50% of the total).\n Here we focus on the L3, similar to Fig. 2 above, showing silent evictions (the non-silent ones make up the rest, adding up to 1 total as before):\n  Figure 4  We don\u2019t see 50% elimination. Rather we see less than half the elimination of the all-zeros case: 27% versus 63%. Performance is better in the L3 region than the all ones case, but only slightly so! So this doesn\u2019t support the theory of a predictor capable of eliminating on any store and operating primarily on outbound queue occupancy.\n Similarly, we can examine the region where the buffer fits only in RAM, similar to Fig. 3 above:\n  Figure 5  Recall that the lines show the number of writes reaching the memory subsystem. Here we see that  alt01 again splits the difference between the zero and ones case: about 75% of the writes reach memory, versus 48% in the all-zeros case, so the elimination is again roughly half as effective. In this case, the performance also splits the difference between all zeros and all ones: it falls almost exactly half-way between the two other cases.\n So I don\u2019t know what\u2019s going on exactly. It seems like maybe only some fraction are of lines are eligible for elimination due to some unknown internal mechanism in the  uarch.\n  Finally, here are the performance results (same as  Figure 1) on a variety of other Intel and AMD x86 architectures, as well as IBM\u2019s POWER9 and Amazon\u2019s Graviton 2 ARM processor, one per tab.\n   The redundant write optimization isn\u2019t evident in the performance profile for  any of the other non- SKL hardware tested. Not even closely related Intel hardware like Haswell or Skylake-X. I also did a few spot tests with performance counters, and didn\u2019t see any evidence of a reduction in writes. So for now this might a Skylake client only thing (of course, Skylake client is perhaps the most widely deployed Intel  uarch even due to the many identical- uarch-except-in-name variants: Kaby Lake, Coffee Lake, etc, etc). Note that the Skylake-S result here is for a different (desktop i7-6700) chip than the rest of this post, so we can at least confirm this occurs on two different chips.\n  Except in the RAM region, Sandy Bridge throughput is half of its successors: a consequence of having only a 16-byte load/store path in the core, despite supporting 32-byte AVX instructions.\n  AMD Zen2 has  excellent write performance in the L2 and L3 regions. All of the Intel chips drop to about half throughput for writes in the L2: slightly above 16 bytes per cycle (around 50 GB/s for most of these chips). Zen2 maintains its L1 throughput and in fact has its highest results in L2: over 100 GB/s. Zen2 also manages more than 70 GB/s in the L3, much better than the Intel chips, in this test.\n  Both Cannon Lake and Skylake-X exhibit a fair amount of inter-sample variance in the L2 resident region. My theory here would be prefetcher interference which behaves differently than earlier chips, but I am not sure.\n  Skylake-X, with a different L3 design than the other chips, has quite poor L3 fill throughput, about half of contemporary Intel chips, and less than a third of Zen2.\n  The POWER9 performance is neither terrible nor great. The most interesting part is probably the high L3 fill throughput: L3 throughput is as high or higher than L1 or L2 throughput, but still not in Zen2 territory.\n  Amazon\u2019s new Graviton processor is very interesting. It seems to be limited to one 16-byte store per cycle  24, giving it a peak possible store throughput of 40 GB/s, so it doesn\u2019t do well in the L1 region versus competitors that can hit 100 GB/s or more (they have both higher frequency and 32 byte stores), but it sustains the 40 GB/s all the way to RAM sizes, with a RAM result flat enough to serve drinks on, and this on a shared 64-CPU host where I paid for only a single core  25! The RAM performance is the highest out of all hardware tested.\n    Here\u2019s a brief summary of what we found. This will be a bit redundant if you\u2019ve just read the whole thing, but we need to accommodate everyone who just skipped down to this part, right?\n Intel chips can apparently eliminate some redundant stores when an all-zero cache line is written to a cache line that was already all-zero.\n  This optimization applies at least as early as L2 writeback to L3, so would apply to the extend that working sets don\u2019t fit in L2.\n  The effect eliminates both write accesses to L3, and writes to memory depending on the working set size.\n  For the pure store benchmark discussed here effect of this optimization is a reduction in the number of writes of ~63% (to L3) and ~50% (to memory), with a runtime reduction of between 15% and 20%.\n  So is any of actually useful? Can we use this finding to quadruple the speed of the things that really matter in computation: tasks like bitcoin mining, high-frequency trading and targeting ads in real time?\n Nothing like that, no \u2013 but it might provide a small boost for some cases.\n Many of those cases are probably getting the benefit without any special effort. After all, zero is already a special value: it\u2019s how memory arrives comes from the operating system, and at the language allocation level for some languages. So a lot of cases that could get this benefit, probably already are.\n Redundant zero-over-zero probably isn\u2019t as rare as you might think either: consider that in low level languages, memory is often cleared after receiving it from the allocator, but in many cases this memory came directly from the OS so it is already zero  26.\n If you are making a ton of redundant writes, the first thing you might want to do i\n......", "posttime": "2020-05-14 05:13:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u5546\u5e97,store,l3", "title": "\u786c\u4ef6\u5546\u5e97\u6d88\u9664", "title_en": "Hardware Store Elimination", "transed": 1, "url": "https://travisdowns.github.io/blog/2020/05/13/intel-zero-opt.html", "via": "", "real_tags": ["\u786c\u4ef6", "\u5546\u5e97", "store", "l3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002020, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u548c/\u6216\u77ed\u4fe1\u8ba2\u9605Bitbucket\u7ad9\u70b9\u66f4\u65b0\u5df2\u5173\u95ed\u3002\u65e0\u8bba\u4f55\u65f6\u53d1\u5e03\u66f4\u65b0\uff0c\u60a8\u90fd\u4f1a\u6536\u5230\u901a\u77e5\u3002\n\u8fc7\u53bb\u7684\u4e8b\u4ef6", "note_en": "Subscribe to updates for   Bitbucket site is down via email and/or text message. Whenever an update is posted, you&#39;ll receive a notification.\n      Past Incidents", "posttime": "2020-05-14 05:13:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bitbucket,\u6536\u5230", "title": "Bitbucket\u5df2\u5173\u95ed", "title_en": "Bitbucket Is Down", "transed": 1, "url": "https://bitbucket.status.atlassian.com/", "via": "", "real_tags": ["bitbucket", "\u6536\u5230"]}, {"category": "", "categoryclass": "", "imagename": "e03542ddccc2cfeac2464e5b896c9801.jpg", "infoid": 1002018, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b89\u4e09\u6d66-\u79d1(Ann Miura-Ko)\u5bf9\u5371\u673a\u671f\u95f4\u7684\u6295\u8d44\u5e76\u4e0d\u964c\u751f\u30022001\u5e749\u670810\u65e5\uff0c\u5979\u5f00\u59cb\u4ece\u4e8b\u98ce\u9669\u6295\u8d44\uff0c\u62c5\u4efb\u5206\u6790\u5e08\u30022008\u5e74\uff0c\u5c31\u5728\u8d1d\u5c14\u65af\u767b(Bear Stearns)\u5012\u95ed\u7684\u65f6\u5019\uff0c\u5979\u4e0e\u4eba\u5171\u540c\u521b\u7acb\u4e86\u81ea\u5df1\u7684\u79cd\u5b50\u671f\u57fa\u91d1Flodgate\u3002\n\u76ee\u524d\u7531\u5168\u7403\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5f15\u53d1\u7684\u51b2\u51fb\u4f3c\u4e4e\u66f4\u4e25\u91cd\u3002\u201c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u6b21\u6839\u672c\u6027\u7684\u91cd\u7f6e\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7ecf\u6d4e\u4e8b\u4ef6\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u573a\u533b\u7597\u5371\u673a\u3002\u8fd9\u662f\u4e00\u7cfb\u5217\u65e0\u5904\u4e0d\u5728\u3001\u6539\u53d8\u5236\u5ea6\u3001\u6539\u53d8\u751f\u6d3b\u7684\u4e8b\u4ef6\uff0c\u201cMiura-Ko\u4e0a\u5468\u5728\u52a0\u5dde\u5e15\u6d1b\u963f\u5c14\u6258\u7684\u5bb6\u4e2d\u63a5\u53d7\u7535\u8bdd\u91c7\u8bbf\u65f6\u8bf4\u3002\n\u5b89\u4e09\u6d66-\u79d1(Ann Miura-Ko)\u5bf9\u5371\u673a\u671f\u95f4\u7684\u6295\u8d44\u5e76\u4e0d\u964c\u751f\u30022001\u5e749\u670810\u65e5\uff0c\u5979\u5f00\u59cb\u4ece\u4e8b\u98ce\u9669\u6295\u8d44\uff0c\u62c5\u4efb\u5206\u6790\u5e08\u30022008\u5e74\uff0c\u5c31\u5728\u8d1d\u5c14\u65af\u767b(Bear Stearns)\u5012\u95ed\u7684\u65f6\u5019\uff0c\u5979\u4e0e\u4eba\u5171\u540c\u521b\u7acb\u4e86\u81ea\u5df1\u7684\u79cd\u5b50\u671f\u57fa\u91d1Flodgate\u3002\n\u76ee\u524d\u7531\u5168\u7403\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5f15\u53d1\u7684\u51b2\u51fb\u4f3c\u4e4e\u66f4\u4e25\u91cd\u3002\u201c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u6b21\u6839\u672c\u6027\u7684\u91cd\u7f6e\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7ecf\u6d4e\u4e8b\u4ef6\u3002..\u3002", "note_en": "Ann Miura-Ko is no stranger to investing during a crisis. She got her start in venture capital as an analyst on September 10, 2001. She co-founded her seed-stage fund, Floodgate, in 2008 just as Bear Stearns was collapsing.\n The current shock set off by the global coronavirus pandemic seems worse. \u201cThis is actually a fundamental reset. It\u2019s not just an economic event. It\u2019s not just a healthcare crisis. It\u2019s a pervasive, system-changing, life-altering series of events,\u201d said Miura-Ko in a phone interview from her home in Palo Alto, California, last week.\n      Ann Miura-Ko is no stranger to investing during a crisis. She got her start in venture capital as an analyst on September 10, 2001. She co-founded her seed-stage fund, Floodgate, in 2008 just as Bear Stearns was collapsing.\n The current shock set off by the global coronavirus pandemic seems worse. \u201cThis is actually a fundamental reset. It\u2019s not just an economic event. ...", "posttime": "2020-05-14 04:30:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6295\u79f0,face,\u6539\u53d8", "title": "\u98ce\u6295\u79f0\uff0c\u521d\u521b\u4f01\u4e1a\u9762\u4e34\u201c\u6839\u672c\u6027\u7684\u91cd\u7f6e\u201d", "title_en": "Startups Face a \u2018Fundamental Reset,\u2019 Says VC", "transed": 1, "url": "https://www.theinformation.com/articles/startups-are-undergoing-a-fundamental-reset-says-vc", "via": "", "real_tags": ["\u6295\u79f0", "face", "\u6539\u53d8"]}, {"category": "", "categoryclass": "", "imagename": "35b3d294a803a30342168a867f269825.jpeg", "infoid": 1002017, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f18\u6b65(Uber)\u5c06\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63a8\u51fa\u4e00\u5957\u65b0\u7684\u5b89\u5168\u529f\u80fd\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u51fa\u884c\u524d\u68c0\u67e5\u53f8\u673a\u662f\u5426\u6234\u4e86\u53e3\u7f69\u3002\n\u6b64\u4e3e\u662f\u8be5\u516c\u53f8\u8bd5\u56fe\u6062\u590d\u5176\u6838\u5fc3\u53eb\u8f66\u4e1a\u52a1\u7684\u52bf\u5934\uff0c\u56e0\u4e3a\u5404\u56fd\u5e0c\u671b\u9010\u6b65\u5f00\u59cb\u53d6\u6d88\u51a0\u72b6\u75c5\u6bd2\u5c01\u9501\u9650\u5236\u3002\n\u4ece\u5468\u4e00\u5f00\u59cb\uff0c\u53f8\u673a\u548c\u9a91\u624b\u5c06\u88ab\u8981\u6c42\u4f69\u6234\u53e3\u7f69\u548c\u8986\u76d6\u7269\uff0c\u4ee5\u52aa\u529b\u963b\u6b62\u75be\u75c5\u7684\u4f20\u64ad\u3002\u4f46\u4e0e\u4e58\u5ba2\u4e0d\u540c\u7684\u662f\uff0c\u73b0\u5728\u53f8\u673a\u5c06\u88ab\u8981\u6c42\u5728\u63a5\u53d7\u9884\u8ba2\u4e4b\u524d\uff0c\u901a\u8fc7\u81ea\u62cd\u6765\u9a8c\u8bc1\u4ed6\u4eec\u662f\u5426\u6234\u7740\u53e3\u7f69\u3002\u9a91\u624b\u4e5f\u5c06\u88ab\u8981\u6c42\u5750\u5728\u540e\u5ea7\u3002\n\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u65e7\u91d1\u5c71\u7684\u516c\u53f8\u5728\u5168\u7403\u8303\u56f4\u5185\u4e00\u76f4\u53d7\u5230\u5c31\u5730\u907f\u96be\u63aa\u65bd\u7684\u4e25\u91cd\u5f71\u54cd\uff0c\u8be5\u516c\u53f8\u8fd8\u5c06\u6295\u8d445000\u4e07\u7f8e\u5143\uff0c\u5411\u53f8\u673a\u548c\u5feb\u9012\u5458\u5206\u53d1\u53e3\u7f69\u3001\u6d17\u624b\u6db2\u548c\u6d88\u6bd2\u5242\u7b49\u7528\u54c1\u3002\u4f18\u6b65\u6b63\u5728\u4e0e\u7f8e\u56fd\u7684\u9ad8\u4e50\u6c0f(Clorox)\u548c\u6b27\u6d32\u7684\u8054\u5408\u5229\u534e(Unilever)\u5408\u4f5c\u63d0\u4f9b\u4f9b\u5e94\u3002\n\u4f18\u6b65\u9996\u5e2d\u6267\u884c\u5b98Dara Khosrowshahi\u5468\u4e09\u5728Zoom\u7535\u8bdd\u4f1a\u8bae\u4e0a\u544a\u8bc9\u8bb0\u8005\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u7684\u5b89\u5168\u610f\u5473\u7740\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u91c7\u53d6\u9002\u5f53\u7684\u9884\u9632\u63aa\u65bd\uff0c\u4e0d\u4ec5\u662f\u4e3a\u4e86\u4fdd\u62a4\u81ea\u5df1\uff0c\u4e5f\u662f\u4e3a\u4e86\u4fdd\u62a4\u53f8\u673a\u548c\u4e0b\u4e00\u4e2a\u53ef\u80fd\u4e0a\u8f66\u7684\u4eba\u3002\n\u5982\u679c\u53f8\u673a\u548c\u4e58\u5ba2\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6ca1\u6709\u6234\u9762\u7f69\uff0c\u4ed6\u4eec\u90fd\u53ef\u4ee5\u53d6\u6d88\u884c\u7a0b\u3002\u4f18\u6b65\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u8d2d\u4e70\u4e862000\u4e07\u4e2a\u53e3\u7f69\uff0c\u5e76\u5c06\u5176\u4e2d500\u4e07\u4e2a\u5206\u53d1\u7ed9\u4e86\u53f8\u673a\u3002\n\u4f18\u6b65\u4ea7\u54c1\u7ba1\u7406\u9ad8\u7ea7\u603b\u76d1\u8428\u94a6\u00b7\u574e\u8428\u5c14(Sachin Kansal)\u5728\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8868\u793a\uff0c\u81ea\u6211\u8ba4\u8bc1\u662f\u597d\u7684\uff0c\u4f46\u6709\u65f6\u6838\u5b9e\u771f\u7684\u5f88\u91cd\u8981\u3002\u53d1\u5e03\u6307\u5bfc\u65b9\u9488\u548c\u8981\u6c42\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u4e00\u56de\u4e8b\uff0c\u4f46\u6709\u65f6\u6211\u4eec\u5fc5\u987b\u5f3a\u5236\u6267\u884c\u8fd9\u4e9b\u8981\u6c42\u3002\n\u4f18\u6b65\u548c\u56fd\u5185\u7ade\u4e89\u5bf9\u624bLyft\u9762\u4e34\u8d8a\u6765\u8d8a\u5927\u7684\u538b\u529b\uff0c\u8981\u6c42\u4ed6\u4eec\u5411\u53f8\u673a\u652f\u4ed8\u5e26\u85aa\u75c5\u5047\u7b49\u798f\u5229\uff0c\u4e24\u5bb6\u516c\u53f8\u90fd\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u9762\u4e34\u8bc9\u8bbc\uff0c\u6307\u63a7\u4ed6\u4eec\u9519\u8bef\u5730\u5c06\u53f8\u673a\u5f52\u7c7b\u4e3a\u627f\u5305\u5546\u3002\n\u5728\u5065\u5eb7\u5371\u673a\u671f\u95f4\uff0c\u96f6\u5de5\u5de5\u4eba\u7684\u4e0d\u786e\u5b9a\u5730\u4f4d\u518d\u6b21\u66b4\u9732\u51fa\u6765\uff0c\u56e0\u4e3a\u53f8\u673a\u4eec\u62b1\u6028\u8bf4\uff0c\u4ed6\u4eec\u6ca1\u6709\u4e00\u4e2a\u4ed6\u4eec\u5df2\u7ecf\u5f00\u59cb\u4f9d\u8d56\u7684\u5173\u952e\u6536\u5165\u6765\u6e90\u3002\n\u5468\u4e8c\uff0c\u5728\u6709\u62a5\u9053\u79f0\u8be5\u516c\u53f8\u63d0\u51fa\u6536\u8d2d\u98df\u54c1\u914d\u9001\u516c\u53f8GrubHub\u540e\uff0c\u8be5\u516c\u53f8\u5438\u5f15\u4e86\u65b0\u95fb\u5934\u6761\u3002\u6d88\u606f\u4eba\u58eb\u5411CNBC\u8bc1\u5b9e\uff0c\u4f18\u6b65\u5df2\u7ecf\u63d0\u51fa\u6536\u8d2d\u8981\u7ea6\uff0c\u4f46\u8868\u793a\u53cc\u65b9\u5728\u4ef7\u683c\u4e0a\u4ecd\u5b58\u5728\u5206\u6b67\u3002\n\u4f18\u6b65\u6700\u8fd1\u5ba3\u5e03\u5c06\u88c1\u545814%\uff0c\u4eca\u5e74\u7b2c\u4e00\u5b63\u5ea6\u51fa\u73b0\u4e8629\u4ebf\u7f8e\u5143\u7684\u5de8\u989d\u4e8f\u635f\u3002\u5c3d\u7ba1Eats\u4e1a\u52a1\u7684\u603b\u9884\u8ba2\u91cf\u5927\u5e45\u589e\u957f\uff0c\u4f46\u8fd9\u5e76\u4e0d\u80fd\u5f25\u8865\u5176\u6838\u5fc3\u6e38\u4e50\u8bbe\u65bd\u90e8\u95e8\u7684\u4e0b\u6ed1\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4f18\u6b65\u6700\u8fd1\u7275\u5934\u5411\u7535\u52a8\u6ed1\u677f\u8f66\u548c\u81ea\u884c\u8f66\u79df\u8d41\u521d\u521b\u516c\u53f8Lime\u6295\u8d44\u4e861.7\u4ebf\u7f8e\u5143\uff0c\u968f\u7740\u4e24\u5bb6\u516c\u53f8\u8fdb\u4e00\u6b65\u6574\u5408\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f18\u6b65\u5c06\u8f6c\u79fb\u81ea\u5df1\u7684\u81ea\u884c\u8f66\u548c\u6ed1\u677f\u8f66\u90e8\u95e8Jump\u3002", "note_en": "Uber\u00a0is launching a new set of safety features in its app, including a tool that checks if drivers are wearing face masks before starting trips.\n The move is an attempt by the firm to restore momentum in its core ride-hailing business as countries look to gradually start lifting their coronavirus lockdown restrictions.\n  Starting Monday, drivers and riders will be required to wear face masks and coverings\u00a0in an effort to stop the spread of the disease. But unlike riders, drivers will now be required to verify that they&#39;re wearing face masks by taking a selfie before accepting a booking. Riders will also be required to sit in the back seat.\n The San Francisco-based company, which has been heavily affected by shelter-in-place measures worldwide, will also invest $50 million to distribute supplies such as masks, hand sanitizer and disinfectant to drivers and couriers. Uber is partnering with\u00a0 Clorox in the U.S. and\u00a0 Unilever in Europe to provide the supplies.\n &#34;Keeping everyone safe means that everyone must take proper precautions, not only to protect yourselves, but to protect your driver and protect the next person who may be getting into the car after,&#34; Uber\u00a0CEO Dara Khosrowshahi told reporters Wednesday over a  Zoom call.\n  Drivers and riders will both have the ability to cancel a trip if either of them aren&#39;t wearing a face covering. Uber said it has already acquired 20 million masks and distributed 5 million of them to drivers.\n &#34;Self-certification is good but sometimes verification is really important,&#34; Sachin Kansal, senior director of product management at Uber, said on the\u00a0call. &#34;It is one thing for us to issue guidelines and requirements, but sometimes we have to enforce those requirements.&#34;\n  Uber and domestic rival\u00a0 Lyft have come under  increased pressure to pay drivers benefits such as paid sick leave, with both companies facing a lawsuit in the state of California alleging that they have misclassified their drivers as contractors.\n The uncertain status of gig workers has again come into light during the health crisis, as drivers complain of being left without a key source of income that they have come to depend on.\n  The company attracted headlines Tuesday following reports that it had made an offer to buy food delivery firm GrubHub. Sources  confirmed to CNBC that Uber had made the offer but said the two sides remain at odds on price.\n Uber, which recently said it would lay off 14% of its workforce, racked up a huge loss of $2.9 billion in the first quarter. Though gross bookings in its Eats business grew significantly, this didn&#39;t make up for the slump in its core rides division.\n Meanwhile,  Uber recently led a $170 million investment in Lime, the electric scooter and bike rentals start-up, which will see it transfer its own bikes and scooters unit Jump as the two companies further integrate their apps.", "posttime": "2020-05-14 04:16:18", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5468\u4e00,require,\u53f8\u673a", "title": "\u4f18\u6b65\u5c06\u4ece\u5468\u4e00\u5f00\u59cb\u8981\u6c42\u6240\u6709\u53f8\u673a\u548c\u4e58\u5ba2\u4f69\u6234\u53e3\u7f69", "title_en": "Uber Will Require All Drivers and Riders To Wear Masks Starting Monday", "transed": 1, "url": "https://www.cnbc.com/2020/05/13/uber-will-require-all-drivers-and-riders-to-wear-masks-starting-next-week.html", "via": "", "real_tags": ["\u5468\u4e00", "require", "\u53f8\u673a"]}, {"category": "", "categoryclass": "", "imagename": "d2aeabb515e3c0e2fb335ef425a3990d.jpg", "infoid": 1002015, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f1\u56fd\u957f\u5f13\u662f\u4e2d\u4e16\u7eaa\u4e00\u79cd\u5f3a\u5927\u7684\u6b66\u5668\uff0c\u636e\u8bf4\u53ef\u4ee5\u523a\u7a7f\u5bf9\u624b\u7684\u76d4\u7532\uff0c\u53ef\u80fd\u662f\u51e0\u573a\u5173\u952e\u519b\u4e8b\u80dc\u5229\u7684\u51b3\u5b9a\u6027\u56e0\u7d20\uff0c\u6700\u8457\u540d\u7684\u662f\u963f\u91d1\u5e93\u5c14\u6218\u5f79\u3002\u82f1\u56fd\u57c3\u514b\u585e\u7279\u5927\u5b66\u7684\u8003\u53e4\u5b66\u5bb6\u56e2\u961f\u6700\u8fd1\u5728\u201c\u53e4\u8463\u6742\u5fd7\u201d\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7\u8bba\u6587\u63d0\u4f9b\u4e86\u8bc1\u636e\uff0c\u8bc1\u660e\u957f\u5f13\u7bad\u9020\u6210\u7684\u4f24\u53e3\u7c7b\u4f3c\u4e8e\u73b0\u4ee3\u7684\u67aa\u4f24\uff0c\u5e76\u4e14\u80fd\u591f\u7a7f\u900f\u957f\u9aa8\u3002\n\u5386\u53f2\u5b66\u5bb6\u7ee7\u7eed\u4e89\u8bba\u957f\u5f13\u5728\u6218\u6597\u4e2d\u5230\u5e95\u6709\u591a\u6709\u6548\u3002\u5df2\u7ecf\u6709\u8bb8\u591a\u5173\u4e8e\u590d\u5236\u54c1\u7684\u91cd\u6f14\u5b9e\u9a8c\uff0c\u4f46\u6ca1\u6709\u4e2d\u4e16\u7eaa\u65f6\u671f\u7684\u957f\u5f13\u5e78\u5b58\u4e0b\u6765\uff0c\u5c3d\u7ba1\u8bb8\u591a16\u4e16\u7eaa\u7684\u6807\u672c\u662f\u4ece\u739b\u4e3d\u00b7\u73ab\u7470\u7684\u6b8b\u9ab8\u4e2d\u627e\u5230\u7684\u3002\u9886\u5bfc\u8fd9\u9879\u6700\u65b0\u7814\u7a76\u7684\u57c3\u514b\u585e\u7279\u5927\u5b66\u7684\u5965\u5229\u5f17\u00b7\u514b\u96f7\u987f(Oliver Creighton)\u548c\u4ed6\u7684\u5408\u8457\u8005\u8ba4\u4e3a\uff0c\u8fd9\u6837\u7684\u5b9e\u9a8c\u901a\u5e38\u662f\u5728\u8f83\u77ed\u7684\u8ddd\u79bb\u5185\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u7bad\u5934\u5728\u98de\u884c\u4e2d\u5e76\u4e0d\u5b8c\u5168\u7a33\u5b9a\u548c\u65cb\u8f6c\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u5f71\u54cd\u6218\u6597\u4eba\u5458\u906d\u53d7\u7684\u5404\u79cd\u4f24\u5bb3\u3002\u4ed6\u548c\u4ed6\u7684\u56e2\u961f\u76f8\u4fe1\uff0c\u4ed6\u4eec\u7684\u5206\u6790\u663e\u793a\u4e86\u9aa8\u5b66\u8bc1\u636e\u5728\u5e2e\u52a9\u89e3\u51b3\u6b64\u7c7b\u4e89\u8bba\u4e2d\u7684\u91cd\u8981\u6027\u3002\n\u8fd9\u662f\u76f8\u5bf9\u7f55\u89c1\u7684\u53d1\u73b0\u66b4\u529b\u521b\u4f24\u7684\u76f4\u63a5\u8bc1\u636e\uff0c\u4ece\u6b66\u5668\u5230\u9aa8\u9abc\u9057\u9ab8\u5728\u4e2d\u4e16\u7eaa\u7684\u5893\u5730\uff0c\u9664\u4e86\u4ece\u5df2\u77e5\u7684\u5386\u53f2\u6218\u6597\u7684\u5927\u89c4\u6a21\u57cb\u846c\u3002\u6700\u8457\u540d\u7684\u8fd9\u7c7b\u9057\u5740\u4e0e1361\u5e74\u745e\u5178\u54e5\u7279\u5170\u7684\u7ef4\u65af\u6bd4\u6218\u5f79\u548c1461\u5e74\u82f1\u56fd\u5317\u7ea6\u514b\u90e1\u7684\u6258\u987f\u6218\u5f79\u6709\u5173\u3002\u6839\u636e\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u6765\u81ea\u8fd9\u4e9b\u7f51\u7ad9\u7684\u6570\u636e\u63d0\u4f9b\u4e86\u5173\u4e8e\u4e2d\u4e16\u7eaa\u6218\u4e89\u73b0\u5b9e\u7684\u6709\u7528\u4fe1\u606f-\u4eba\u4eec\u5982\u4f55\u6218\u6597\u548c\u88ab\u6740\uff0c\u4f7f\u7528\u4e86\u54ea\u4e9b\u6b66\u5668\uff0c\u9020\u6210\u4e86\u4ec0\u4e48\u6837\u7684\u4f24\u5bb3\uff0c\u4ee5\u53ca\u7a7f\u7740\u4ec0\u4e48\u76d4\u7532(\u5982\u679c\u6709\u7684\u8bdd)\u3002\u7279\u522b\u662f\u7531\u7bad\u5934\u9020\u6210\u7684\u521b\u4f24\u7684\u8bc1\u636e\u5c31\u66f4\u52a0\u7f55\u89c1\u4e86\u3002\n\u76ee\u524d\u7684\u7814\u7a76\u68c0\u67e5\u4e8622\u5757\u9aa8\u5934\u788e\u7247\u548c3\u9897\u7259\u9f7f\uff0c\u90fd\u663e\u793a\u51fa\u660e\u663e\u7684\u521b\u4f24\u8ff9\u8c61\u3002\u8fd9\u4e9b\u90fd\u662f1997\u5e74\u81f32007\u5e74\u5728\u57c3\u514b\u585e\u7279\u6316\u6398\u4e2d\u4e16\u7eaa\u591a\u7c73\u5c3c\u52a0\u4fee\u9053\u9662\u5893\u5730\u671f\u95f4\u6536\u96c6\u7684\uff0c\u4e3a\u5efa\u8bbe\u516c\u4e3b\u8d2d\u7269\u533a\u505a\u51c6\u5907\u3002\u6839\u636e\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u4fee\u9053\u9662\u6210\u7acb\u4e8e1232\u5e74\uff0c\u5e76\u4e8e1259\u5e74\u6b63\u5f0f\u5723\u5316\uff0c\u4fee\u9053\u9662\u7684\u5893\u5730\u53ef\u80fd\u5305\u62ec\u5bcc\u6709\u7684\u3001\u5730\u4f4d\u8f83\u9ad8\u7684\u95e8\u5916\u6c49\u3002\n\u7279\u522b\u662f\u5728\u4fee\u9053\u9662\u6b63\u5385\u7684\u5317\u8fc7\u9053\u4e0a\u7684\u4e00\u4e2a\u6316\u6398\u9057\u5740(EPH068849)\uff0c\u53d1\u73b0\u4e86\u8bb8\u591a\u8131\u8282\u7684\u9aa8\u5934(\u800c\u4e0d\u662f\u5b8c\u6574\u7684\u9aa8\u9abc)\u3002\u8fd9\u4e9b\u5927\u591a\u662f\u6765\u81ea\u4e0d\u540c\u65f6\u671f\u7684\u5934\u9aa8\u3001\u4e0b\u80a2\u3001\u4e0a\u80a2\u548c\u624b\uff0c\u8fd9\u8868\u660e\u6240\u8c13\u7684\u540e\u671f\u575f\u5893\u7684\u4ea4\u9519\uff0c\u8fd9\u5728\u4e2d\u4e16\u7eaa\u5893\u5730\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u505a\u6cd5\u3002\n\u572822\u4e2a\u9aa8\u788e\u7247\u6837\u672c\u4e2d\uff0c\u6709\u4e00\u4e2a\u662f\u53f3\u773c\u4e0a\u65b9\u6709\u4e00\u4e2a\u7a7f\u523a\u4f24\u53e3\uff0c\u540e\u8111\u6709\u4e00\u4e2a\u5c04\u51fa\u4f24\u53e3\u7684\u9885\u9aa8\u3002\u4f5c\u8005\u731c\u6d4b\uff0c\u6839\u636e\u4e0e\u4e4b\u76f8\u5173\u7684\u5265\u843d\u548c\u65ad\u88c2\uff0c\u7bad\u5934\u51fb\u4e2d\u65f6\u5f88\u53ef\u80fd\u662f\u987a\u65f6\u9488\u65cb\u8f6c\u7684\u3002\u4e2d\u4e16\u7eaa\u7684\u7bad\u662f\u6709\u9576\u8fb9\u7684\uff0c\u8fd9\u4f7f\u70ae\u5f39\u65cb\u8f6c\uff0c\u4f7f\u5176\u5728\u98de\u884c\u4e2d\u66f4\u51c6\u786e\u548c\u66f4\u7a33\u5b9a\u3002\u4f46\u8fd9\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u8bc1\u636e\uff0c\u8868\u660e\u8fd9\u652f\u7bad\u662f\u6545\u610f\u629b\u5c04\u7684\uff0c\u8fd9\u6837\u5b83\u5c31\u4f1a\u987a\u65f6\u9488\u65cb\u8f6c\u3002\n\u4f5c\u8005\u5199\u9053\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u67aa\u652f\u5236\u9020\u5546\u5386\u6765\u5728\u67aa\u7ba1\u4e0a\u52a0\u4e86\u819b\u7ebf\uff0c\u8fd9\u6837\u5b50\u5f39\u5c31\u4f1a\u987a\u65f6\u9488\u65b9\u5411\u65cb\u8f6c\u3002\u8fd8\u6709\u8bc1\u636e\u8868\u660e\uff0c\u7bad\u6746\u624e\u8fdb\u4e86\u5934\u9aa8\uff0c\u5e76\u88ab\u62c9\u56de\u5934\u90e8\u524d\u90e8\uff0c\u9020\u6210\u4e86\u66f4\u591a\u7684\u5934\u9aa8\u9aa8\u6298\u3002\n\u4f5c\u8005\u8ba4\u4e3a\u8fd9\u652f\u7bad\u662f\u65b9\u5f62\u6216\u83f1\u5f62\u7684\uff0c\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u519b\u4e8b\u6b66\u5668\u3002\u8fd9\u7c7b\u7bad\u5934\u6709\u65f6\u4f1a\u4e0e\u5f29\u87ba\u6813\u5934\u6df7\u6dc6\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f5c\u8005\u5df2\u7ecf\u786e\u5b9a\uff0c\u7a7f\u523a\u70b9\u4e0d\u591f\u5927\uff0c\u4e0d\u8db3\u4ee5\u9020\u6210\u521b\u4f24\uff0c\u4e0d\u53ef\u80fd\u662f\u5f29\u9020\u6210\u7684\u3002\u4f5c\u8005\u5199\u9053\uff0c\u8fd9\u4e9b\u7bad\u5934\u662f\u519b\u7528\u7bad\u5934\uff0c\u8fd9\u8868\u660e\u96c6\u5408\u4f53\u4e2d\u53ef\u80fd\u81f3\u5c11\u6709\u4e00\u540d\u6218\u6597\u4f24\u5458\uff0c\u6216\u8005\u81f3\u5c11\u4e00\u540d\u6218\u5730\u4e8b\u6545\u6216\u8c0b\u6740\u7684\u53d7\u5bb3\u8005\uff0c\u8fd9\u540d\u53d7\u5bb3\u8005\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u89e6\u5230\u519b\u7528\u88c5\u5907\u7684\u4eba\u3002\n\u5728\u53f3\u4fa7\u80eb\u9aa8\u9876\u90e8\u9644\u8fd1\u8fd8\u6709\u53e6\u4e00\u5904\u523a\u4f24\uff0c\u8868\u660e\u4e00\u652f\u7bad\u4ece\u540e\u9762\u7a7f\u8fc7\u5c0f\u817f\u7684\u8089\uff0c\u523a\u5165\u4e86\u9aa8\u5934\u3002\u5176\u4e2d\u4e00\u6839\u80a1\u9aa8\u663e\u793a\u51fa\u521b\u4f24\u7684\u8ff9\u8c61\uff0c\u4e0e\u7bad\u5934\u7684\u63a0\u8fc7\u649e\u51fb\u4e00\u81f4\uff0c\u5c3d\u7ba1\u4f5c\u8005\u627f\u8ba4\uff0c\u7c7b\u4f3c\u7684\u4f24\u5bb3\u53ef\u80fd\u6765\u81ea\u67d0\u79cd\u5200\u7247\u5de5\u5177\u3002\n\u4f5c\u8005\u5199\u9053\uff0c\u4e0a\u8ff0\u4e09\u4e2a\u6837\u672c\u751a\u81f3\u53ef\u80fd\u6765\u81ea\u540c\u4e00\u4e2a\u4eba\u3002\u4f5c\u8005\u5199\u9053\uff0c\u4e00\u79cd\u60c5\u51b5\u662f[\u5934\u9aa8\u7684\u81f4\u547d\u4f24\u53e3]\u9996\u5148\u53d1\u751f\uff0c\u80eb\u9aa8\u548c\u80a1\u9aa8\u7684\u4f24\u53e3\u968f\u540e\u53d1\u751f\uff0c\u5f53\u65f6\u4e2a\u4f53\u5df2\u7ecf\u6b7b\u4ea1\u6216\u6fd2\u4e34\u6b7b\u4ea1\uff0c\u8138\u671d\u4e0b\u3002\u867d\u7136\u8fd9\u53ea\u662f\u4e00\u79cd\u731c\u6d4b\uff0c\u4f46\u8fd9\u5f88\u53ef\u80fd\u89e3\u91ca\u4e86\u8fdb\u5165\u89d2\u5ea6\u504f\u79bb\u7684\u539f\u56e0\uff0c\u5982\u679c\u4e2a\u4eba\u662f\u7ad9\u7740\u7684\u8bdd\uff0c\u8fd9\u5f88\u96be\u89e3\u91ca\u3002\u6216\u8005\uff0c\u4e2a\u4eba\u53ef\u80fd\u9a91\u5728\u9a6c\u4e0a\uff0c\u6216\u7ad9\u5728\u8f83\u9ad8\u7684\u4f4d\u7f6e\uff0c\u6216\u7ad9\u5728\u8f83\u9ad8\u7684\u7ed3\u6784\u4e0a\u3002&#34\uff1b\u3002\n\u8fd9\u4e9b\u7ed3\u679c\u5bf9\u6211\u4eec\u7406\u89e3\u4e2d\u4e16\u7eaa\u957f\u5f13\u7684\u5a01\u529b\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\uff1b\u5bf9\u4e8e\u6211\u4eec\u5982\u4f55\u8bc6\u522b\u8003\u53e4\u8bb0\u5f55\u4e2d\u7684\u7bad\u521b\u4f24\uff1b\u4ee5\u53ca\u5bf9\u4e8e\u6218\u4e89\u4f24\u4ea1\u88ab\u57cb\u846c\u5728\u54ea\u91cc\uff0c\u514b\u96f7\u987f\u544a\u8bc9\u4e2d\u4e16\u7eaa\u4e16\u754c\uff0c\u5728\u4e2d\u4e16\u7eaa\u4e16\u754c\uff0c\u7bad\u5c04\u4e2d\u773c\u775b\u6216\u9762\u90e8\u5bfc\u81f4\u7684\u6b7b\u4ea1\u53ef\u80fd\u5177\u6709\u7279\u6b8a\u7684\u610f\u4e49\u3002\u795e\u804c\u4eba\u5458\u4f5c\u5bb6\u6709\u65f6\u5c06\u8fd9\u79cd\u4f24\u5bb3\u89c6\u4e3a\u795e\u6ce8\u5b9a\u7684\u60e9\u7f5a\uff0c\u6700\u8457\u540d\u7684\u4f8b\u5b50\u5c31\u662f1066\u5e74\u54c8\u7f57\u5fb7\u4e8c\u4e16\u56fd\u738b\u5728\u9ed1\u65af\u5ef7\u65af\u6218\u573a\u4e0a\u53ef\u80fd\u662f\u4e5f\u53ef\u80fd\u4e0d\u662f\u88ab\u7bad\u5c04\u4e2d\u773c\u775b\u3002\u6211\u4eec\u7684\u7814\u7a76\u805a\u7126\u4e86\u8fd9\u79cd\u4f24\u5bb3\u7684\u53ef\u6015\u73b0\u5b9e\u3002", "note_en": "The  English longbow was a powerful medieval weapon said to be able to pierce an opponent&#39;s armor and may have been a decisive factor in several key military victories, most notably the  Battle of Agincourt.  A recent paper published in the Antiquaries Journal by a team of archaeologists at the University of Exeter in the UK has yielded evidence that longbow arrows created similar wounds to modern-day gunshot wounds and were capable of penetrating through long bones.\n Historians continue to debate just how effective the longbow was in battle. There have been numerous re-enactment experiments with replicas, but no medieval-period longbows have survived, although many 16th-century specimens were recovered from the  wreck of the  Mary Rose. The University of Exeter&#39;s Oliver Creighton, who led the latest study, and his co-authors argue that such experiments are typically done over shorter ranges, so the arrows are not fully stable and spinning in flight. This, in turn, would affect the kinds of injuries combatants sustained. He and his team believe their analysis shows the importance of osteological evidence in helping to resolve such debates.\n It&#39;s relatively rare to find direct evidence of violent trauma from weapons to skeletal remains in medieval burial sites, with the exception of mass burials from known historical battles. The best-known such sites are associated with the 1361 Battle of Visby in Gotland, Sweden, and the 1461 Battle of Towton in North Yorkshire, England. Per the authors, data from these sites has yielded useful information on &#34;the realities of medieval warfare\u2014how people fought and were killed, which weapons were used and what sorts of injuries these caused, and what armor (if any) was worn.&#34; Evidence of trauma specifically caused by arrowheads is even rarer.\n The current study examined 22 bone fragments and three teeth, all showing clear signs of trauma. All were collected during the excavation of the burial ground of a medieval Dominican friary in Exeter from 1997 to 2007, to prepare for the construction of the Princesshay shopping district. Established in 1232 and officially consecrated in 1259, the friary&#39;s burial grounds likely included wealthy, high-status laypersons, according to the authors.\n One dig site (EPH06 8849) in particular, in the north aisle of the friary nave, contained many disarticulated bones (as opposed to complete skeletons). These were mostly skull bone, lower limbs, upper limbs, and hands, from different time periods, indicating  so-called &#34;intercutting&#34; of later graves, a common practice in medieval cemeteries.\n One of the 22 bone-fragment specimens was a cranium with a puncture wound atop the right eye and an exit wound at the back of the head. The authors surmise that the arrow was likely spinning clockwise when it hit, based on the associated\u00a0 spalling and fracturing. Medieval arrows were fletched, which put a spin on the projectile to make it more accurate and stable during flight. But this could be the first evidence that the arrow was fletched deliberately so that it would spin clockwise.\n &#34;Notably, gun manufacturers have historically rifled barrels so that bullets spin in the same\u2014clockwise\u2014direction,&#34; the authors wrote.\u00a0There is also evidence the shaft of the arrow lodged itself in the skull and was pulled back through the front of the head, creating even more fractures to the skull.\n    The authors suggest the arrow in question was a square or diamond-shaped &#34; bodkin&#34; type, a common military weapon. Such arrowheads can sometimes be confused with crossbow bolt-heads, but in this case, the authors have determined that the points of penetration aren&#39;t large enough for the trauma to have been caused by a crossbow.\u00a0&#34;That the arrowheads were military points suggests that the assemblage is likely to contain at least one battle casualty, or at least a victim of a field accident or murder perpetrated by an individual with access to military-style equipment,&#34; the authors wrote.\n There was another puncture wound near the top of a right tibia, suggesting an arrow had passed through the flesh of the calf from behind and lodged itself in the bone. And one of the femurs showed signs of trauma &#34;consistent with a glancing impact from an arrow,&#34; although the authors acknowledge that a similar injury could have come from some kind of &#34;bladed implement.&#34;\n All three of the aforementioned samples may even have come from the same casualty.\u00a0&#34;One scenario is that [the fatal wound to the skull] occurred first and that the wounds to the tibia and femur occurred subsequently, when the individual was dead or dying and face down,&#34; the authors wrote. &#34;Although this can only be a matter for speculation, this would probably account for the otherwise off angles of entry, which are hard to explain if the individual was standing up.&#34; Alternatively, the individual could have been &#34;mounted on a horse or standing in an elevated position, or on an elevated structure.&#34;\n &#34;These results have profound implications for our understanding of the power of the medieval longbow; for how we recognize arrow trauma in the archaeological record; and for where battle casualties were buried,&#34;\u00a0 Creighton told Medievalists.net.\u00a0&#34;In the medieval world, death caused by an arrow in the eye or the face could have special significance. Clerical writers sometimes saw the injury as a divinely ordained punishment, with the &#39;arrow in the eye&#39; which may or may not have been sustained by  King Harold II on the battlefield of Hastings in 1066 the most famous case in point. Our study brings into focus the horrific reality of such an injury.&#34;", "posttime": "2020-05-14 04:14:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u73b0,arrows,\u4e2d\u4e16\u7eaa", "title": "\u7814\u7a76\u53d1\u73b0\uff0c\u4e2d\u4e16\u7eaa\u7684\u7bad\u9020\u6210\u7684\u4f24\u5bb3\u7c7b\u4f3c\u4e8e\u67aa\u4f24", "title_en": "Medieval arrows caused injuries similar to gunshot wounds, study finds", "transed": 1, "url": "https://arstechnica.com/science/2020/05/medieval-arrows-caused-injuries-similar-to-gunshot-wounds-study-finds/", "via": "", "real_tags": ["\u53d1\u73b0", "arrows", "\u4e2d\u4e16\u7eaa"]}, {"category": "", "categoryclass": "", "imagename": "6f71dcd6a2d8474c98196da2c471b02f.jpg", "infoid": 1002014, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81ea\u7f51\u7edc\u5b89\u5168\u516c\u53f8ESET\u7684\u7814\u7a76\u4eba\u5458\u4eca\u5929\u5ba3\u5e03\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u524d\u6240\u672a\u89c1\u7684\u6076\u610f\u8f6f\u4ef6\u6846\u67b6\uff0c\u5177\u6709\u5f53\u4eca\u7f55\u89c1\u7684\u9ad8\u7ea7\u529f\u80fd\u3002\n\u540d\u4e3aRamsay\u7684ESET\u8868\u793a\uff0c\u8fd9\u4e2a\u6076\u610f\u8f6f\u4ef6\u5de5\u5177\u5305\u4f3c\u4e4e\u662f\u88ab\u8bbe\u8ba1\u6765\u611f\u67d3\u6709\u6c14\u9699\u7684\u8ba1\u7b97\u673a\uff0c\u5c06Word\u548c\u5176\u4ed6\u654f\u611f\u6587\u4ef6\u6536\u96c6\u5728\u4e00\u4e2a\u9690\u85cf\u7684\u5b58\u50a8\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u7b49\u5f85\u53ef\u80fd\u7684\u6e17\u51fa\u673a\u4f1a\u3002\nRamsay\u7684\u53d1\u73b0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53d1\u73b0\uff0c\u56e0\u4e3a\u6211\u4eec\u5f88\u5c11\u770b\u5230\u6709\u80fd\u529b\u8df3\u8fc7\u7a7a\u9699\u7684\u6076\u610f\u8f6f\u4ef6\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u516c\u53f8\u53ef\u4ee5\u91c7\u53d6\u7684\u6700\u4e25\u683c\u548c\u6700\u6709\u6548\u7684\u5b89\u5168\u4fdd\u62a4\u63aa\u65bd\uff0c\u4ee5\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002\n\u6c14\u9699\u7cfb\u7edf\u662f\u6307\u4e0e\u516c\u53f8\u7f51\u7edc\u7684\u5176\u4f59\u90e8\u5206\u9694\u79bb\u5e76\u4e0e\u516c\u5171\u4e92\u8054\u7f51\u9694\u7edd\u7684\u8ba1\u7b97\u673a\u6216\u7f51\u7edc\u3002\n\u6c14\u9699\u8ba1\u7b97\u673a/\u7f51\u7edc\u7ecf\u5e38\u51fa\u73b0\u5728\u653f\u5e9c\u673a\u6784\u548c\u5927\u578b\u4f01\u4e1a\u7684\u7f51\u7edc\u4e0a\uff0c\u5b83\u4eec\u901a\u5e38\u5b58\u50a8\u7edd\u5bc6\u6587\u4ef6\u6216\u77e5\u8bc6\u4ea7\u6743\u3002\n\u8bbf\u95ee\u6c14\u9699\u7f51\u7edc\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4efb\u4f55\u5b89\u5168\u6f0f\u6d1e\u7684\u5723\u676f\uff0c\u56e0\u4e3a\u7531\u4e8e\u6c14\u9699(\u7f3a\u4e4f\u4e0e\u9644\u8fd1\u8bbe\u5907\u7684\u4efb\u4f55\u8fde\u63a5)\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u901a\u5e38\u662f\u4e0d\u53ef\u80fd\u88ab\u653b\u7834\u7684\u3002\n\u5728\u4eca\u5929\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\uff0cESET\u8868\u793a\uff0c\u5b83\u53d1\u73b0\u4e86\u4e00\u79cd\u7f55\u89c1\u7684\u6076\u610f\u8f6f\u4ef6\u682a\uff0c\u4f3c\u4e4e\u662f\u4e13\u95e8\u5f00\u53d1\u51fa\u6765\u7684\uff0c\u76ee\u7684\u662f\u8df3\u8fc7\u7a7a\u6c14\u95f4\u9699\uff0c\u5230\u8fbe\u5b64\u7acb\u7684\u7f51\u7edc\u3002\n\u6839\u636eESET\u4ece\u5176\u53d1\u73b0\u7684Ramsay\u6076\u610f\u8f6f\u4ef6\u6837\u672c\u4e2d\u6536\u96c6\u5230\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u770b\u5230\u4f7f\u7528Ramsay\u5de5\u5177\u5305\u7684\u653b\u51fb\u6309\u4ee5\u4e0b\u6a21\u5f0f\u8fd0\u884c\uff1a\n\u5982\u679c\u53d7\u5bb3\u8005\u4e0b\u8f7d\u5e76\u8fd0\u884c\u8be5\u6587\u6863\uff0c\u8be5\u6587\u4ef6\u4f1a\u5c1d\u8bd5\u4f7f\u7528CVE-2017-1188\u6216CVE-2017-0199\u6f0f\u6d1e\u611f\u67d3\u7528\u6237Ramsay\u6076\u610f\u8f6f\u4ef6\u3002\n\u62c9\u59c6\u9f50(Ramsay&34\uff1b)\u6536\u85cf\u5bb6\u6a21\u5757\u5f00\u59cb\u8fd0\u4f5c\u3002\u6b64\u6a21\u5757\u641c\u7d22\u53d7\u5bb3\u8005\u7684\u6574\u4e2a\u8ba1\u7b97\u673a\uff0c\u5e76\u5728\u9690\u85cf\u7684\u5b58\u50a8\u6587\u4ef6\u5939\u4e2d\u6536\u96c6Word\u3001PDF\u548cZIP\u6587\u6863\u3002\n\u62c9\u59c6\u9f50\u7684\u6492\u5e03\u5668\u6a21\u5757\u4e5f\u53d1\u6325\u4e86\u4f5c\u7528\u3002\u6b64\u6a21\u5757\u5c06Ramsay\u6076\u610f\u8f6f\u4ef6\u7684\u526f\u672c\u9644\u52a0\u5230\u5728\u53ef\u79fb\u52a8\u9a71\u52a8\u5668\u548c\u7f51\u7edc\u5171\u4eab\u4e0a\u627e\u5230\u7684\u6240\u6709PE(\u4fbf\u643a\u53ef\u6267\u884c)\u6587\u4ef6\u3002\nESET\u8bf4\uff0c\u5728\u7814\u7a76\u671f\u95f4\uff0c\u5b83\u8fd8\u6ca1\u6709\u80fd\u591f\u8bc6\u522b\u51fa\u4efb\u4f55\u62c9\u59c6\u9f50\u6e17\u51fa\u6a21\u5757\u3002\nESET\u7814\u7a76\u5458\u4f0a\u683c\u7eb3\u897f\u5965\u00b7\u6851\u7c73\u4f26(Ignacio Sanmilan)\u8bf4\uff1a\u6211\u4eec\u6700\u521d\u5728VirusTotal\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2aRamsay\u5b9e\u4f8b\u3002\u8be5\u6837\u672c\u662f\u4ece\u65e5\u672c\u4e0a\u4f20\u7684\uff0c\u5e76\u4f7f\u6211\u4eec\u53d1\u73b0\u4e86\u8be5\u6846\u67b6\u7684\u66f4\u591a\u7ec4\u4ef6\u548c\u7248\u672c\u3002\nESET\u8868\u793a\uff0c\u4ed6\u4eec\u5df2\u7ecf\u80fd\u591f\u8ffd\u8e2a\u5230Ramsay\u6076\u610f\u8f6f\u4ef6\u6846\u67b6\u7684\u4e09\u4e2a\u4e0d\u540c\u7248\u672c\uff0c\u4e00\u4e2a\u57282019\u5e749\u6708\u7f16\u8bd1(Ramsay V1)\uff0c\u53e6\u5916\u4e24\u4e2a\u57282020\u5e743\u6708\u521d\u548c\u4e0b\u65ec\u7f16\u8bd1(Ramsay v2.a\u548cv2.b)\u3002\n\u6851\u7c73\u4f26\u8bf4\uff0cESET\u53d1\u73b0\u4e86\u5927\u91cf\u8bc1\u636e\uff0c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u8fd9\u4e2a\u6846\u67b6\u6b63\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u9ed1\u5ba2\u4ecd\u5728\u4fee\u8865\u4ee3\u7801\u3002\n\u4f8b\u5982\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u4f20\u9012\u65b9\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u5728\u6700\u8fd1\u7684Ramsay\u7248\u672c\u4e2d\uff0c\u8be5\u6076\u610f\u8f6f\u4ef6\u8fd8\u5728Word\u6587\u6863\u4e4b\u4e0a\u6536\u96c6PDF\u548cZIP\u6587\u4ef6\u3002\n\u7814\u7a76\u4eba\u5458\u8fd8\u6ca1\u6709\u6b63\u5f0f\u786e\u5b9a\u8c01\u53ef\u80fd\u662f\u62c9\u59c6\u9f50\u7684\u5e55\u540e\u9ed1\u624b\u3002\u4e0d\u8fc7\uff0c\u6851\u7c73\u4f26\u8868\u793a\uff0c\u6076\u610f\u8f6f\u4ef6\u5305\u542b\u5927\u91cf\u4e0eRetro\u5171\u4eab\u7684\u6587\u7269\uff0cRetro\u662f\u6b64\u524d\u7531\u9ed1\u5ba2\u7ec4\u7ec7DarkHotel\u5f00\u53d1\u7684\u6076\u610f\u8f6f\u4ef6\u83cc\u682a\uff0c\u636e\u4fe1\u8be5\u7ec4\u7ec7\u662f\u4e3a\u4e86\u97e9\u56fd\u653f\u5e9c\u7684\u5229\u76ca\u800c\u8fd0\u8425\u3002", "note_en": "Researchers from cyber-security firm ESET announced today that they discovered a never-before-seen malware framework with advanced capabilities that are rarely seen today.\n Named Ramsay, ESET says this malware toolkit appears to have been designed to infect air-gapped computers, collect Word and other sensitive documents in a hidden storage container, and then wait for a possible exfiltration opportunity.\n The Ramsay discovery is an important one because we rarely see malware that contains the capability to jump the air gap, considered the most strict and effective security protection measure that companies can take to safeguard sensitive data.\n  Air-gapped systems are computers or networks that are isolated from the rest of a company&#39;s network and cut off from the public internet.\n Air-gapped computers/networks are often found on the networks of government agencies and large enterprises, where they usually store top-secret documents or intellectual property.\n   Getting access to an air-gapped network is often considered the Holy Grail of any security breach, as these systems are often impossible to breach due to the air gap (lack of any connection to nearby devices).\n  In a report published today, ESET said it discovered a rare malware strain that appears to have been specifically developed to jump the air gap and reach isolated networks.\n   Based on what ESET has been able to glean from the Ramsay malware samples it discovered, attacks with the Ramsay toolkit have been seen operating by the following pattern:\n If the victim downloads and runs the document, the file tries to use the CVE-2017-1188 or CVE-2017-0199 vulnerabilities to infect the user with the Ramsay malware.\n The Ramsay &#34;collector&#34; module kicks in. This module searches the victim&#39;s entire computer and gathers Word, PDF, and ZIP documents in a hidden storage folder.\n The Ramsay &#34;spreader&#34; module also kicks in. This module appends a copy of the Ramsay malware to all PE (portable executable) files found on removable drives and network shares.\n ESET says that during its research, it was not able to identify any Ramsay exfiltration module just yet.\n  &#34;We initially found an instance of Ramsay in VirusTotal,&#34; said ESET researcher Ignacio Sanmillan. &#34;That sample was uploaded from Japan and led us to the discovery of further components and versions of the framework.&#34;\n  ESET said they&#39;ve been able to track down three different versions of the Ramsay malware framework, one compiled in September 2019 (Ramsay v1), and two others in early and late March 2020 (Ramsay v2.a and v2.b).\n Sanmillan said ESET discovered &#34;substantial evidence to conclude that this framework is at a developmental stage,&#34; and that the hackers are still tinkering with the code.\n For example, the email delivery methods have varied, and in recent Ramsay versions, the malware also collected PDF and ZIP files, on top of Word documents.\n The researcher has not made a formal attribution as who might be behind Ramsay. However, Sanmillan said that the malware contained a large number of shared artifacts with Retro, a malware strain previously developed by  DarkHotel, a hacker group believed to be operating in the interests of the South Korean government.", "posttime": "2020-05-14 04:14:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,app,\u6076\u610f\u8f6f\u4ef6,malware,ramsay", "title": "\u65b0\u7684Ramsay\u6076\u610f\u8f6f\u4ef6\u53ef\u4ee5\u4ece\u6709\u7a7a\u9699\u7684\u7f51\u7edc\u4e2d\u7a83\u53d6\u654f\u611f\u6587\u6863", "title_en": "New Ramsay malware can steal sensitive documents from air-gapped networks", "transed": 1, "url": "https://www.zdnet.com/article/new-ramsay-malware-can-steal-sensitive-documents-from-air-gapped-networks/", "via": "", "real_tags": ["\u8f6f\u4ef6", "app", "\u6076\u610f\u8f6f\u4ef6", "malware", "ramsay"]}, {"category": "", "categoryclass": "", "imagename": "6f268b1cd843be0ec69e109414269196.jpg", "infoid": 1002013, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u51a0\u72b6\u75c5\u6bd2\u75c52019(CoronaVirus)\u5065\u5eb7\u5371\u673a\u671f\u95f4\uff0c\u6570\u5b57\u6280\u672f\u4e00\u76f4\u662f\u4e00\u6761\u751f\u547d\u7ebf\u3002\u7136\u800c\uff0c\u5b83\u5bf9\u4eba\u9645\u5173\u7cfb\u7684\u5f71\u54cd\u4ecd\u7136\u590d\u6742\u3002\u5b83\u5141\u8bb8\u8bb8\u591a\u9886\u57df\u7684\u5de5\u4f5c\u548c\u8054\u7cfb\uff0c\u4f46\u8fd9\u6837\u505a\u7684\u65b9\u5f0f\u901a\u5e38\u662f\u4fb5\u6270\u6027\u7684\u3001\u4ee4\u4eba\u7cbe\u75b2\u529b\u7aed\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5bf9\u9762\u5bf9\u9762\u7684\u5173\u7cfb\u9020\u6210\u4fb5\u8680\u3002\n\u5173\u4e8e\u79d1\u6280\u5bf9\u6574\u4f53\u5fc3\u7406\u5065\u5eb7\u5f71\u54cd\u7684\u4e89\u8bba\u6b63\u5728\u6fc0\u70c8\u8fdb\u884c\u3002\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u58f0\u79f0\u667a\u80fd\u624b\u673a\u6467\u6bc1\u4e86\u4e00\u4ee3\u4eba\uff0c\u800c\u53e6\u4e00\u4e9b\u4eba\u5219\u8ba4\u4e3a\u5c4f\u5e55\u65f6\u95f4\u6839\u672c\u4e0d\u80fd\u9884\u6d4b\u5fc3\u7406\u5065\u5eb7\u3002\n\u5728\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u8fdb\u884c\u4e86\u591a\u5e74\u7684\u7814\u7a76\u540e\uff0c\u6211\u5f97\u51fa\u7ed3\u8bba\uff0c\u5c4f\u5e55\u65f6\u95f4\u4f1a\u6270\u4e71\u6211\u4eec\u4eba\u7c7b\u4f53\u9a8c\u7684\u4e00\u4e2a\u57fa\u672c\u65b9\u9762--\u5173\u6ce8\u5f7c\u6b64\u7684\u773c\u775b\u3002\n\u667a\u80fd\u624b\u673a\uff0c\u751a\u81f3\u6bd4\u7535\u89c6\u7b49\u8001\u5f0f\u6280\u672f\u66f4\u79ef\u6781\u5730\u8bbe\u8ba1\uff0c\u901a\u8fc7\u5c06\u4eba\u4eec\u7684\u624b\u6307\u548c\u773c\u775b\u5411\u4e0b\u5438\u5f15\u5230\u5c4f\u5e55\u4e0a\uff0c\u5e76\u4f7f\u4ed6\u4eec\u8fdc\u79bb\u5f7c\u6b64\uff0c\u4ece\u800c\u63a7\u5236\u548c\u5229\u7528\u4eba\u4eec\u7684\u6ce8\u610f\u529b\u3002\u4eba\u4eec\u8d8a\u6765\u8d8a\u4e0d\u80fd\u628a\u76ee\u5149\u4ece\u522b\u5904\u79fb\u5f00\u3002\n\u4eba\u7c7b\u5728\u52a8\u7269\u4e2d\u51e0\u4e4e\u662f\u72ec\u4e00\u65e0\u4e8c\u7684-\u5305\u62ec\u5173\u7cfb\u5bc6\u5207\u7684\u7075\u957f\u7c7b\u52a8\u7269-\u6211\u4eec\u901a\u8fc7\u773c\u775b\u51dd\u89c6\u7684\u534f\u8c03\u6765\u5206\u4eab\u610f\u4e49\u548c\u5408\u4f5c\u5b9e\u73b0\u76ee\u6807\u7684\u80fd\u529b\u3002\n\u4ece\u751f\u547d\u7684\u6700\u521d\u51e0\u5929\u5f00\u59cb\uff0c\u5a74\u513f\u5c31\u4f1a\u8c03\u6574\u5230\u7167\u987e\u8005\u7684\u773c\u775b\u6765\u5bfb\u627e\u5b89\u6170\u548c\u89e3\u8bfb\u60c5\u611f\u3002\u968f\u7740\u4ed6\u4eec\u7684\u6210\u957f\uff0c\u4eba\u4eec\u5728\u8fd9\u4e9b\u6280\u80fd\u7684\u57fa\u7840\u4e0a\u53d1\u5c55\u8d77\u6765\uff0c\u5e76\u5b66\u4f1a\u4e0e\u793e\u4ea4\u4f19\u4f34\u9501\u5b9a\u76ee\u5149\uff0c\u8fdb\u884c\u6c9f\u901a\u548c\u534f\u4f5c\u3002\n\u4eba\u7c7b\u773c\u775b\u5468\u56f4\u7684\u767d\u8272\u5f88\u5927\uff0c\u4f7f\u4f34\u4fa3\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u5b83\u4eec\u3002\u5176\u7ed3\u679c\u662f\uff0c\u4eba\u7c7b\u80fd\u591f\u7cbe\u51c6\u5730\u8ffd\u8e2a\u5f7c\u6b64\u51dd\u89c6\u7684\u65b9\u5411\u3002\u4e00\u4e9b\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u8fdb\u5316\u9002\u5e94\u662f\u667a\u4eba\u4f5c\u4e3a\u4e00\u4e2a\u7269\u79cd\u8fdb\u6b65\u7684\u57fa\u7840\u3002\n\u5728\u79fb\u52a8\u6280\u672f\u65e0\u5904\u4e0d\u5728\u7684\u4eca\u5929\uff0c\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u89c6\u89c9\u540c\u6b65\u7ecf\u5e38\u53d7\u5230\u5e72\u6270\u3002\u4eba\u7c7b\u5728\u5f7c\u6b64\u773c\u91cc\u53d8\u5f97\u964c\u751f\u4e86\u5417--\u8fd9\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff1f\n\u6211\u548c\u6211\u7684\u540c\u4e8b\u4eec\u901a\u8fc7\u91cd\u590d40\u591a\u5e74\u524d\u5f00\u5c55\u7684\u4e00\u9879\u540d\u4e3a\u201c\u9759\u6b62\u9762\u5b54\u201d\u7684\u5b9e\u9a8c\u6765\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u5b9e\u9a8c\u4e2d\uff0c\u7236\u6bcd\u4eec\u81ea\u7531\u5730\u4e0e\u5e74\u5e7c\u7684\u5b69\u5b50\u73a9\u800d\uff0c\u4f46\u968f\u540e\u88ab\u6307\u793a\u901a\u8fc7\u4fdd\u6301\u9762\u90e8\u9759\u6b62\u548c\u65e0\u8868\u60c5\u51e0\u5206\u949f\u6765\u8868\u73b0\u51fa\u65e0\u52a8\u4e8e\u8877\u3002\u5728\u8fd9\u6bb5\u4ecd\u7136\u9762\u4e34\u7684\u65f6\u671f\u4e4b\u540e\u662f\u4e00\u6bb5\u79f0\u4e3a\u56e2\u805a\u7684\u4fee\u590d\u671f\uff0c\u7236\u6bcd\u4eec\u5728\u8fd9\u6bb5\u65f6\u671f\u53c8\u4f1a\u505a\u51fa\u6b63\u5e38\u7684\u53cd\u5e94\u3002\n\u8fd9\u4e2a\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u5b9e\u9a8c-\u73a9\u800d\uff0c\u4ecd\u7136\u9762\u5bf9\uff0c\u91cd\u805a-\u521b\u9020\u4e86\u4e00\u4e2a\u7f29\u5f71\uff0c\u7814\u7a76\u4eba\u5458\u5728\u5176\u4e2d\u7814\u7a76\u4e86\u7236\u6bcd\u9000\u7f29\u7684\u66f4\u5e7f\u6cdb\u7684\u5f71\u54cd\uff0c\u5e76\u8bc1\u660e\u4e86\u4fee\u590d\u793e\u4f1a\u8131\u8282\u7684\u91cd\u8981\u6027\u3002\n\u8fd9\u4e2a\u7ecf\u5178\u7684\u5b9e\u9a8c\u542f\u53d1\u6211\u4eec\u5c06\u5c4f\u5e55\u5bf9\u4eb2\u5b50\u5173\u7cfb\u7684\u5f71\u54cd\u6982\u5ff5\u5316\u4e3a\u4e00\u5f20\u81ea\u7136\u53d1\u751f\u7684\u4ecd\u7136\u5b58\u5728\u7684\u5927\u8138\u3002\u5728\u6211\u4eec\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u9759\u6b62\u9762\u5b54\u7684\u65f6\u95f4\u6bb5\uff0c\u8fd9\u6837\u7236\u6bcd\u5728\u4f7f\u7528\u667a\u80fd\u624b\u673a\u65f6\u6ca1\u6709\u4ec0\u4e48\u53cd\u5e94-\u5411\u4e0b\u770b\uff0c\u773c\u775b\u9501\u5b9a\u5728\u5e74\u5e7c\u7684\u5b69\u5b50\u9762\u524d\u7684\u5c4f\u5e55\u4e0a\u4e24\u5206\u949f\uff0c\u800c\u4e0d\u662f\u4fdd\u6301\u8138\u4e0d\u52a8\u3002\u6211\u4eec\u8fd8\u8981\u6c42\u7236\u6bcd\u62a5\u544a\u4ed6\u4eec\u901a\u5e38\u5728\u5bb6\u91cc\u770b\u5c4f\u5e55\u7684\u65f6\u95f4\u3002", "note_en": "Digital technology has been a lifeline during the  coronavirus disease 2019 (COVID-19) health crisis. Yet, its impact on human relationships remains complex. It allows for work and connection in many domains but does so in ways that are often  intrusive, exhausting, and potentially  corrosive to face-to-face relationships.\n The debate about technology\u2019s effect on overall mental health rages on. Some  researchers claim smartphones have  destroyed a generation, while others argue  screen time doesn\u2019t predict mental health at all.\n After years of research on the topic, I have come to the conclusion that screen time can disrupt a fundamental aspect of our human experience \u2013  paying attention to one another\u2019s eyes.\n Smartphones, even more than older technologies like television, have been aggressively designed to  control and capitalize human attention throughout the day by drawing people\u2019s fingers and eyes down to a screen and away from one another. Increasingly, people can\u2019t look away.\n  Human beings are almost unique among animals \u2013  including closely related primates \u2013 in our ability to share meaning and collaborate on goals through the coordination of eye gaze.\n From the earliest days of life, babies tune into their caregivers\u2019 eyes to find comfort and decipher emotion.  As they grow, people build on these skills and learn to lock eyes with social partners to communicate and collaborate.\n  The whites around human eyes are large, making them highly visible to partners. The result is humans are able to track the direction of each other\u2019s gaze with exquisite accuracy. Some argue this evolutionary adaptation was  fundamental to   Homo sapiens\u2018 advancement as a species.\n  Today, with the ubiquity of mobile technology, visual synchrony between people is frequently disrupted. Are humans becoming strangers to each others\u2019 eyes \u2013 and does it matter?\n My colleagues and I  studied this question by repeating an experiment developed over 40 years ago called the  Still Face.\n In the experiment, parents freely play with their young children, but then are instructed to be unresponsive by holding their faces still and inexpressive for a few minutes. This still face period is followed by a period of repair called the reunion, when parents respond normally again.\n The three-part experiment \u2013 play, still face, reunion \u2013 creates a microcosm in which researchers study the broader effects of parental withdrawal and document the importance of repairing social disconnection.\n This classic experiment inspired us to conceptualize the impact of screens on the parent-child relationship as one big naturally occurring Still Face. In our study, we modified the still face period so that parents, instead of keeping their faces still, were unresponsive while using a smartphone \u2013 looking down, with eyes locked on screens in front of their young children for two minutes. We also asked parents to report on how much time they typically spent on screens at home.", "posttime": "2020-05-14 03:59:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,usage,\u773c\u775b", "title": "\u667a\u80fd\u624b\u673a\u7684\u4f7f\u7528\u662f\u5bf9\u6211\u4eec\u4eba\u7c7b\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u7684\u5a01\u80c1", "title_en": "Smartphone usage is a threat to essential components of our humanity", "transed": 1, "url": "https://www.iafrikan.com/2020/05/13/computer-smartphones-screens-communication-relationships-talking-in-person/", "via": "", "real_tags": ["\u624b\u673a", "usage", "\u773c\u775b"]}]