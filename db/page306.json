[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1002322, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PostgreSQL\u5168\u7403\u5f00\u53d1\u5c0f\u7ec4\u5df2\u7ecf\u53d1\u5e03\u4e86\u6211\u4eec\u6570\u636e\u5e93\u7cfb\u7edf\u6240\u6709\u53d7\u652f\u6301\u7248\u672c\u7684\u66f4\u65b0\uff0c\u5305\u62ec12.3\u300111.8\u300110.13\u30019.6.18\u548c9.5.22\u3002\u6b64\u7248\u672c\u4fee\u590d\u4e86PostgreSQL\u670d\u52a1\u5668\u4e2d\u53d1\u73b0\u7684\u4e00\u4e2a\u5b89\u5168\u95ee\u9898\u548c\u8fc7\u53bb\u4e09\u4e2a\u6708\u62a5\u544a\u7684\u8d85\u8fc775\u4e2a\u9519\u8bef\u3002\n\u53d7\u5f71\u54cd\u7684\u7248\u672c\uff1a9.5-12\u3002\u5b89\u5168\u56e2\u961f\u4e0d\u6d4b\u8bd5\u4e0d\u53d7\u652f\u6301\u7684\u7248\u672c\uff0c\u4f46PostgreSQL 9.5\u4e4b\u524d\u7684\u7248\u672c\u5b58\u5728\u6b64\u95ee\u9898\u3002\nPostgreSQL\u7684Windows Installer\u8c03\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u6ca1\u6709\u5b8c\u5168\u9650\u5b9a\u8def\u5f84\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5b89\u88c5\u7a0b\u5e8f\u52a0\u8f7d\u7684\u76ee\u5f55\u6216\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f18\u5148\u4e8e\u9884\u671f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5177\u6709\u5c06\u6587\u4ef6\u6dfb\u52a0\u5230\u5176\u4e2d\u4e00\u4e2a\u76ee\u5f55\u7684\u6743\u9650\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u8be5\u5b89\u88c5\u7a0b\u5e8f\u7684\u7ba1\u7406\u6743\u9650\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\n\u6b64\u66f4\u65b0\u8fd8\u4fee\u590d\u4e86\u8fc7\u53bb\u51e0\u4e2a\u6708\u62a5\u544a\u7684\u8d85\u8fc775\u4e2a\u9519\u8bef\u3002\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\u4ec5\u5f71\u54cd\u7248\u672c12\uff0c\u4f46\u4e5f\u53ef\u80fd\u5f71\u54cd\u6240\u6709\u652f\u6301\u7684\u7248\u672c\u3002\n\u5bf9\u751f\u6210\u7684\u5217\u8fdb\u884c\u4e86\u591a\u4e2a\u4fee\u590d\uff0c\u5305\u62ec\u5f53\u751f\u6210\u7684\u5217\u7684\u8f93\u51fa\u662f\u8868\u4e2d\u7269\u7406\u5217\u7684\u7cbe\u786e\u526f\u672c\u65f6(\u4f8b\u5982\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u8c03\u7528\u4e86\u53ef\u4ee5\u8fd4\u56de\u5176\u81ea\u5df1\u8f93\u5165\u7684\u51fd\u6570)\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8868\u4e2d\u7684\u6570\u636e\u5d29\u6e83\u6216\u635f\u574f\u3002\nALTER TABLE\u7684\u51e0\u4e2a\u4fee\u590d\uff0c\u5305\u62ec\u786e\u4fdd\u5c06SET STORAGE\u6307\u4ee4\u4f20\u64ad\u5230\u8868\u7684\u7d22\u5f15\u3002\n\u4fee\u590d\u5728\u53e6\u4e00\u4e2a\u4f1a\u8bdd\u6b63\u5728\u5220\u9664\u76f8\u540c\u5bf9\u8c61\u65f6\u4f7f\u7528DROP OWNSEN BY\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u4e89\u7528\u60c5\u51b5\u3002\n\u4fee\u590d\u4e86\u5c06COLLATE\u5e94\u7528\u4e8e\u5206\u533a\u7ed1\u5b9a\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e0d\u53ef\u6392\u5e8f\u7c7b\u578b\u65f6\u53d1\u751f\u7684\u5d29\u6e83\u3002\n\u5141\u8bb8\u5706\u5f62\u7c7b\u578b\u7684\u8f93\u5165\u63a5\u53d7\u6587\u6863\u4e2d\u6307\u5b9a\u7684\u683c\u5f0f(x\uff0cy)\uff0cr\u3002\n\u5141\u8bb8get_bit()\u548cset_bit()\u51fd\u6570\u5728\u957f\u5ea6\u8d85\u8fc7256MB\u7684BYTEA\u5b57\u7b26\u4e32\u4e0a\u4e0d\u4f1a\u5931\u8d25\u3002\n\u907f\u514d\u5728\u5d29\u6e83\u6062\u590d\u671f\u95f4\u8fc7\u65e9\u56de\u6536WAL\u6bb5\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4WAL\u6bb5\u5728\u5b58\u6863\u4e4b\u524d\u88ab\u56de\u6536\u3002\n\u901a\u8fc7\u8df3\u8fc7\u4e0d\u76f8\u5173\u7684\u65f6\u95f4\u7ebf\uff0c\u907f\u514d\u5728\u6062\u590d\u671f\u95f4\u5c1d\u8bd5\u4ece\u5f52\u6863\u5b58\u50a8\u4e2d\u63d0\u53d6\u4e0d\u5b58\u5728\u7684WAL\u6587\u4ef6\u3002\n\u4fee\u590d\u540c\u6b65\u5907\u7528\u7ba1\u7406\u4e2d\u7684\u51e0\u4e2a\u4e89\u7528\u6761\u4ef6\uff0c\u5305\u62ec\u66f4\u6539SYNCHRONIZY_STANDBY_NAMES\u8bbe\u7f6e\u65f6\u53d1\u751f\u7684\u4e00\u4e2a\u4e89\u7528\u60c5\u51b5\u3002\nGSSAPI\u652f\u6301\u7684\u51e0\u4e2a\u4fee\u590d\u5305\u62ec\u5bf9\u4f7f\u7528GSSAPI\u52a0\u5bc6\u65f6\u53d1\u751f\u7684\u5185\u5b58\u6cc4\u6f0f\u7684\u4fee\u590d\u3002\npg_dump\u7684\u5176\u4ed6\u51e0\u4e2a\u4fee\u590d\uff0c\u5305\u62ec\u8f6c\u50a8\u5173\u4e8eRLS\u7b56\u7565\u7684\u6ce8\u91ca\u548c\u5c06\u4e8b\u4ef6\u89e6\u53d1\u5668\u7684\u6062\u590d\u63a8\u8fdf\u5230\u7ed3\u675f\u3002\n\u6b64\u66f4\u65b0\u8fd8\u5305\u542b\u6469\u6d1b\u54e5\u548c\u52a0\u62ff\u5927\u80b2\u7a7a\u5730\u533aDST\u6cd5\u5f8b\u66f4\u6539\u7684tzdata\u7248\u672c2020a\uff0c\u4ee5\u53ca\u4e0a\u6d77\u7684\u5386\u53f2\u66f4\u6b63\u3002America/Godthab\u533a\u57df\u5df2\u91cd\u547d\u540d\u4e3aAmerica/Nuuk\uff0c\u4ee5\u53cd\u6620\u5f53\u524d\u7684\u82f1\u8bed\u7528\u6cd5\uff1b\u4e0d\u8fc7\uff0c\u65e7\u540d\u79f0\u4ecd\u53ef\u7528\u4f5c\u517c\u5bb9\u94fe\u63a5\u3002\u8fd9\u8fd8\u4f1a\u66f4\u65b0initdb\uff1b\u7684\u5df2\u77e5Windows\u65f6\u533a\u540d\u79f0\u5217\u8868\uff0c\u4ee5\u5305\u62ec\u6700\u8fd1\u6dfb\u52a0\u7684\u540d\u79f0\u3002\n\u6240\u6709PostgreSQL\u66f4\u65b0\u7248\u672c\u90fd\u662f\u7d2f\u79ef\u6027\u7684\u3002\u4e0e\u5176\u4ed6\u6b21\u8981\u7248\u672c\u4e00\u6837\uff0c\u7528\u6237\u4e0d\u9700\u8981\u8f6c\u50a8\u548c\u91cd\u65b0\u52a0\u8f7d\u4ed6\u4eec\u7684\u6570\u636e\u5e93\uff0c\u4e5f\u4e0d\u9700\u8981\u4f7f\u7528PG_UPGRADE\u6765\u5e94\u7528\u6b64\u66f4\u65b0\u7248\u672c\uff1b\u60a8\u53ea\u9700\u5173\u95edPostgreSQL\u5e76\u66f4\u65b0\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6\u5373\u53ef\u3002\n\u8df3\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u66f4\u65b0\u7248\u672c\u7684\u7528\u6237\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u989d\u5916\u7684\u66f4\u65b0\u540e\u6b65\u9aa4\uff1b\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u65e9\u671f\u7248\u672c\u7684\u53d1\u884c\u8bf4\u660e\u3002", "note_en": "The PostgreSQL Global Development Group has released an update to all supportedversions of our database system, including 12.3, 11.8, 10.13, 9.6.18, and9.5.22. This release fixes one security issue found in the PostgreSQLserver and over 75 bugs reported over the last three months.\n    Versions Affected: 9.5 - 12. The security team does not test unsupported versions, but this issue existed before PostgreSQL 9.5.\n The Windows installer for PostgreSQL invokes system-provided executables that do not have fully-qualified paths. Executables in the directory where the installer loads or the current working directory take precedence over the intended executables. An attacker having permission to add files into one of those directories can use this to execute arbitrary code with the installer&#39;s administrative rights.\n   This update also fixes over 75 bugs that were reported in the last severalmonths. Some of these issues affect only version 12, but may also affect allsupported versions.\n  Several fixes for GENERATED columns, including an issue where it was possible to crash or corrupt data in a table when the output of the generated column was the exact copy of a physical column on the table, e.g. if the expression called a function which could return its own input.\n Several fixes for  ALTER TABLE, including ensuring the  SET STORAGE directive is propagated to a table&#39;s indexes.\n Fix a potential race condition when using  DROP OWNED BY while another session is deleting the same objects.\n   Fix crash when COLLATE is applied to an uncollatable type in a partition bound expression.\n     Allow input of type circle to accept the format  (x,y),r, which is specified in the documentation.\n Allow for the  get_bit() and  set_bit() functions to not fail on  bytea strings longer than 256MB.\n Avoid premature recycling of WAL segments during crash recovery, which could lead to WAL segments being recycled before being archived.\n Avoid attempting to fetch nonexistent WAL files from archive storage during recovery by skipping irrelevant timelines.\n  Fix several race conditions in synchronous standby management, including one that occurred when changing the  synchronous_standby_names setting.\n Several fixes for GSSAPI support, include a fix for a memory leak that occurred when using GSSAPI encryption.\n       Several other fixes for  pg_dump, which include dumping comments on RLS policies and postponing restore of event triggers until the end.\n This update also contains tzdata release 2020a for DST law changes in Moroccoand the Canadian Yukon, plus historical corrections for Shanghai. TheAmerica/Godthab zone has been renamed to America/Nuuk to reflect current English usage; however, the old name remains available as a compatibility link. Thisalso updates initdb&#39;s list of known Windows time zone names to include recentadditions.\n   All PostgreSQL update releases are cumulative. As with other minor releases,users are not required to dump and reload their database or use  pg_upgrade inorder to apply this update release; you may simply shutdown PostgreSQL andupdate its binaries.\n Users who have skipped one or more update releases may need to run additional,post-update steps; please see the release notes for earlier versions fordetails.", "posttime": "2020-05-16 06:43:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u53d1\u5e03,\u7248\u672c", "title": "\u5df2\u53d1\u5e03PostgreSQL 12.3\u300111.8\u300110.13\u30019.6.18\u548c9.5.22", "title_en": "PostgreSQL 12.3, 11.8, 10.13, 9.6.18, and 9.5.22 Released", "transed": 1, "url": "https://www.postgresql.org/about/news/2038/", "via": "", "real_tags": ["\u53d1\u5e03", "\u7248\u672c"]}, {"category": "", "categoryclass": "", "imagename": "23bc7a8c73f06563f7c7c2a3d1bd7bc9.jpg", "infoid": 1002321, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5730\u7403\u4e0a\u6355\u83b7\u548c\u63a7\u5236\u805a\u53d8\u80fd\u7684\u4e00\u4e2a\u5173\u952e\u6311\u6218\u662f\u4fdd\u6301\u7b49\u79bb\u5b50\u4f53(\u4e3a\u805a\u53d8\u53cd\u5e94\u63d0\u4f9b\u71c3\u6599\u7684\u5e26\u7535\u6c14\u4f53)\u7684\u7a33\u5b9a\u6027\uff0c\u5e76\u4fdd\u6301\u6570\u767e\u4e07\u6444\u6c0f\u5ea6\u7684\u6e29\u5ea6\u6765\u542f\u52a8\u548c\u7ef4\u6301\u805a\u53d8\u53cd\u5e94\u3002\u8fd9\u4e00\u6311\u6218\u9700\u8981\u5728\u751c\u751c\u5708\u5f62\u72b6\u7684\u6258\u5361\u9a6c\u514b\u805a\u53d8\u8bbe\u65bd\u4e2d\u63a7\u5236\u78c1\u5c9b\uff0c\u5373\u5728\u7b49\u79bb\u5b50\u4f53\u4e2d\u5f62\u6210\u7684\u6ce1\u72b6\u7ed3\u6784\u3002\u8fd9\u4e9b\u5c9b\u5c7f\u53ef\u80fd\u4f1a\u751f\u957f\uff0c\u51b7\u5374\u7b49\u79bb\u5b50\u4f53\uff0c\u5e76\u5f15\u53d1\u7834\u574f-\u50a8\u5b58\u5728\u7b49\u79bb\u5b50\u4f53\u4e2d\u7684\u80fd\u91cf\u7a81\u7136\u91ca\u653e-\u8fd9\u53ef\u80fd\u4f1a\u963b\u6b62\u805a\u53d8\u53cd\u5e94\uff0c\u5e76\u4e25\u91cd\u7834\u574f\u5bb9\u7eb3\u5b83\u4eec\u7684\u805a\u53d8\u8bbe\u65bd\u3002\u666e\u6797\u65af\u987f\u5927\u5b66(Princeton University)\u548c\u7f8e\u56fd\u80fd\u6e90\u90e8(DOE)\u666e\u6797\u65af\u987f\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u5b9e\u9a8c\u5ba4(PPPL)\u7684\u79d1\u5b66\u5bb6\u4eec\u7684\u7814\u7a76\u8868\u660e\uff0cITER\u4e2d\u9ebb\u70e6\u7684\u78c1\u5c9b\u3001\u6cd5\u56fd\u5728\u5efa\u7684\u56fd\u9645\u6258\u5361\u9a6c\u514b\u4ee5\u53ca\u5176\u4ed6\u672a\u6765\u4e0d\u5141\u8bb8\u5927\u89c4\u6a21\u4e2d\u65ad\u7684\u8bbe\u65bd\u5f97\u5230\u4e86\u66f4\u597d\u7684\u63a7\u5236\u3002\u666e\u6797\u65af\u987f\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u9879\u76ee\u7684\u7814\u7a76\u751f\u7231\u5fb7\u534e\u591a\u00b7\u7f57\u5fb7\u91cc\u683c\u65af(Eduardo Rodriguez)\u8bf4\uff0c\u8fd9\u9879\u7814\u7a76\u53ef\u80fd\u4f1a\u4e3a\u4e4b\u524d\u88ab\u8ba4\u4e3a\u65e0\u6cd5\u83b7\u5f97\u7684\u6539\u8fdb\u63a7\u5236\u65b9\u6848\u6253\u5f00\u5927\u95e8\u3002\u4ed6\u5728\u201c\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u5b66\u201d\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7\u8bba\u6587\u7684\u7b2c\u4e00\u4f5c\u8005\u62a5\u9053\u4e86\u8fd9\u4e00\u53d1\u73b0\u3002\n\u8fd9\u9879\u7814\u7a76\u662f\u5728Allan Reiman\u548cNat Fisch\u4e4b\u524d\u5de5\u4f5c\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u540d\u4e3aRF[\u5c04\u9891]\u7535\u6d41\u51dd\u805a\u7684\u65b0\u6548\u5e94\uff0c\u5b83\u53ef\u4ee5\u6781\u5927\u5730\u4fc3\u8fdb\u7a33\u5b9a\u3002\u65b0\u7684\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u8bba\u6587\u5c55\u793a\u4e86\u5982\u4f55\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u8fd9\u79cd\u6548\u5e94\u3002Reiman\u662fPPPL\u7684\u6770\u51fa\u7814\u7a76\u5458\uff0cFisch\u662f\u666e\u6797\u65af\u987f\u5927\u5b66\u6559\u6388\uff0c\u666e\u6797\u65af\u987f\u5927\u5b66\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u9879\u76ee\u4e3b\u4efb\uff0cPPPL\u5b66\u672f\u4e8b\u52a1\u526f\u4e3b\u4efb\u3002\n\u805a\u53d8\u53cd\u5e94\u7ed3\u5408\u4e86\u8f7b\u5143\u7d20\u7684\u5f62\u5f0f-\u7531\u81ea\u7531\u7535\u5b50\u548c\u539f\u5b50\u6838\u7ec4\u6210\u7684\u7269\u8d28\u72b6\u6001-\u5728\u592a\u9633\u548c\u6052\u661f\u4e2d\u4ea7\u751f\u5927\u91cf\u7684\u80fd\u91cf\u3002\u5168\u4e16\u754c\u7684\u79d1\u5b66\u5bb6\u90fd\u5728\u5bfb\u6c42\u5728\u5730\u7403\u4e0a\u91cd\u73b0\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4e3a\u5168\u4eba\u7c7b\u63d0\u4f9b\u51e0\u4e4e\u53d6\u4e4b\u4e0d\u5c3d\u7684\u5b89\u5168\u548c\u6e05\u6d01\u7684\u7535\u529b\u3002\n\u8fd9\u7bc7\u65b0\u8bba\u6587\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5316\u7684\u5206\u6790\u6a21\u578b\uff0c\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5229\u7528RF\u6ce2\u5bf9\u5c9b\u5c7f\u8fdb\u884c\u52a0\u70ed\uff0c\u5e76\u9a71\u52a8\u7535\u6d41\u4f7f\u5176\u6536\u7f29\u548c\u6d88\u5931\u3002\u5f53\u6e29\u5ea6\u8db3\u591f\u9ad8\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u590d\u6742\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u5bfc\u81f4\u5c04\u9891\u7535\u6d41\u51dd\u805a\u6548\u5e94\uff0c\u4f7f\u7535\u6d41\u96c6\u4e2d\u5728\u5c9b\u7684\u4e2d\u5fc3\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u7a33\u5b9a\u6027\u3002\u4f46\u662f\uff0c\u968f\u7740\uff0c\u4ee5\u53ca\u5c9b\u5c7f\u8f83\u51b7\u7684\u8fb9\u7f18\u548c\u8f83\u70ed\u7684\u5185\u90e8\u4e4b\u95f4\u7684\u6e29\u5ea6\u68af\u5ea6\u53d8\u5f97\u66f4\u5927\uff0c\u8fd9\u79cd\u68af\u5ea6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u7a33\u5b9a\uff0c\u4ece\u800c\u4f7f\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6e29\u5ea6\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u8fd9\u4e00\u70b9\u5bf9\u70b9\u662f\u5c04\u9891\u6ce2\u80fd\u5426\u8fbe\u5230\u7a33\u5b9a\u76ee\u6807\u7684\u4e00\u4e2a\u91cd\u8981\u6307\u6807\u3002\u7f57\u5fb7\u91cc\u683c\u65af\u8bf4\uff0c\u6211\u4eec\u5206\u6790\u5f53\u524d\u7684\u51b7\u51dd\u548c\u52a0\u70ed\u4ea7\u751f\u7684\u68af\u5ea6\u589e\u52a0\u7684\u6e4d\u6d41\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u4ee5\u786e\u5b9a\u7cfb\u7edf\u662f\u5426\u7a33\u5b9a\u3002\u6211\u4eec\u5e0c\u671b\u4e0d\u4f1a\u589e\u957f\u3002&#34\uff1b\u65b0\u7684\u8bba\u6587\u5c55\u793a\u4e86\u5982\u4f55\u63a7\u5236\u6ce2\u7684\u529f\u7387\u548c\u7784\u51c6\uff0c\u4ee5\u4fbf\u5728\u8003\u8651\u5230\u4e0d\u7a33\u5b9a\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u5c04\u9891\u7535\u6d41\u51dd\u805a\u6548\u5e94\u3002\u7f57\u5fb7\u91cc\u683c\u65af\u8bf4\uff0c\u5173\u6ce8\u8fd9\u4e00\u70b9\u53ef\u4ee5\u6539\u5584\u805a\u53d8\u53cd\u5e94\u5806\u7684\u7a33\u5b9a\u6027\u3002\n\u7814\u7a76\u4eba\u5458\u73b0\u5728\u8ba1\u5212\u5728\u6a21\u578b\u4e2d\u5f15\u5165\u65b0\u7684\u65b9\u9762\uff0c\u4ee5\u5f00\u5c55\u66f4\u8be6\u7ec6\u7684\u8c03\u67e5\u3002\u8fd9\u4e9b\u6b65\u9aa4\u5305\u62ec\u5728\u8ba1\u7b97\u673a\u4ee3\u7801\u4e2d\u5305\u62ec\u51dd\u805a\u6548\u5e94\u7684\u5de5\u4f5c\uff0c\u4ee5\u5bf9\u53d1\u5c04\u7684\u5c04\u9891\u6ce2\u7684\u884c\u4e3a\u53ca\u5176\u771f\u5b9e\u6548\u679c\u8fdb\u884c\u5efa\u6a21\u3002\u8fd9\u9879\u6280\u672f\u6700\u7ec8\u5c06\u7528\u4e8e\u8bbe\u8ba1\u6700\u4f18\u7684\u5c9b\u5c7f\u7a33\u5b9a\u65b9\u6848\u3002\u66f4\u591a\u4fe1\u606f\uff1aE.Rodr\u00edguez\u7b49\u4eba\uff0c\u201c\u6e4d\u6d41\u589e\u5f3a\u4f20\u8f93\u4e2d\u5b58\u5728\u7684\u5c04\u9891\u7535\u6d41\u51dd\u805a\u201d\uff0c\u201c\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u201d(2020)\u3002\u7f16\u53f7\uff1a10.1063/5.0001881", "note_en": "A key challenge to capturing and controlling fusion energy on Earth is maintaining the stability of plasma\u2014the electrically charged gas that fuels fusion reactions\u2014and keeping it millions of degrees hot to launch and maintain fusion reactions. This challenge requires controlling magnetic islands, bubble-like structures that form in the plasma in doughnut-shaped tokamak fusion facilities. These islands can grow, cool the plasma and trigger disruptions\u2014the sudden release of energy stored in the plasma\u2014that can halt fusion reactions and seriously damage the fusion facilities that house them.      Research by scientists at Princeton University and at the U.S. Department of Energy&#39;s (DOE) Princeton Plasma Physics Laboratory (PPPL) points toward improved control of the troublesome magnetic islands in ITER, the international tokamak under construction in France, and other future   facilities that cannot allow large disruptions. &#34;This research could open the door to improved control schemes previously deemed unobtainable,&#34; said Eduardo Rodriguez, a graduate student in the Princeton Program in Plasma Physics and first author of a paper in  Physics of Plasmas that reports the findings.\n  The research follows up on  previous work by Allan Reiman and Nat Fisch, which identified a new effect called &#34;RF [radio frequency] current condensation&#34; that can greatly facilitate the stabilization of  . The new  Physics of Plasmas paper shows how to make optimal use of the effect. Reiman is a Distinguished Research Fellow at PPPL and Fisch is a Princeton University professor and Director of the Princeton Program in Plasma Physics and Associate Director of Academic Affairs at PPPL.\n  Fusion reactions combine light elements in the form of  \u2014the state of matter composed of free electrons and atomic nuclei\u2014to generate massive amounts of energy in the sun and stars. Scientists throughout the world are seeking to reproduce the process on Earth for a virtually inexhaustible supply of safe and clean power to generate electricity for all humanity.\n  The new paper, based on a simplified analytical model, focuses on use of RF waves to heat the islands and drive electric current that causes them to shrink and disappear. When the temperature gets sufficiently high, complicated interactions can occur that lead to the RF current condensation effect, which concentrates the current in the center of the island and can greatly enhance the stabilization. But as the  , and the gradient of the temperature between the colder edge and the hot interior of the island grows larger, the gradient can drive instabilities that make it more difficult to increase the temperature further.\n    This point-counterpoint is an important indicator of whether the RF waves will accomplish their stabilizing goal. &#34;We analyze the interaction between the current condensation and the increased turbulence from the gradient the heating creates to determine whether the system is stabilized or not,&#34; Rodriguez says. &#34;We want the   not to grow.&#34; The new paper shows how to control the power and aiming of the waves to make optimal use of the RF current condensation effect, taking account of the instabilities. Focusing on this can lead to improved stabilization of fusion reactors,&#34; Rodriguez said.\n  The researchers now plan to introduce new aspects into the model to develop a more detailed investigation. Such steps include work being done towards including the condensation effect in computer codes to model the behavior of launched RF waves and their true effect. The technique would ultimately be used in designing optimal island stabilization schemes.        More information:\t\t\t\t\t\t\t\t\t\t\t\tE. Rodr\u00edguez et al, RF current condensation in the presence of turbulent enhanced transport,  Physics of Plasmas (2020).  DOI: 10.1063/5.0001881", "posttime": "2020-05-16 06:43:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u63a2\u7d22,explore,\u7b49\u79bb\u5b50\u4f53", "title": "\u79d1\u5b66\u5bb6\u63a2\u7d22\u65e0\u7ebf\u7535\u6ce2\u7684\u80fd\u91cf\u4ee5\u5e2e\u52a9\u63a7\u5236\u805a\u53d8\u53cd\u5e94", "title_en": "Scientists explore the power of radio waves to help control fusion reactions", "transed": 1, "url": "https://phys.org/news/2020-04-scientists-explore-power-radio-fusion.html", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u63a2\u7d22", "explore", "\u7b49\u79bb\u5b50\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "0d251bda309b4577dd317f7b284d21a7.jpeg", "infoid": 1002317, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5df4\u5c14\u7684\u6469(\u7f8e\u8054\u793e)-\u7f8e\u56fd3-4\u6708\u96f6\u552e\u989d\u521b\u7eaa\u5f55\u5730\u66b4\u8dcc16.4%\uff0c\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u5bfc\u81f4\u7684\u4f01\u4e1a\u5173\u95ed\u8ba9\u8d2d\u7269\u8005\u671b\u800c\u5374\u6b65\uff0c\u5a01\u80c1\u5230\u5168\u56fd\u5404\u5730\u5546\u5e97\u7684\u751f\u5b58\u80fd\u529b\uff0c\u5e76\u8fdb\u4e00\u6b65\u62d6\u7d2f\u4e86\u4e0b\u6ed1\u7684\u7ecf\u6d4e\u3002\n\u7f8e\u56fd\u5546\u52a1\u90e8\u5468\u4e94\u53d1\u5e03\u7684\u96f6\u552e\u91c7\u8d2d\u62a5\u544a\u663e\u793a\uff0c\u96f6\u552e\u884c\u4e1a\u5d29\u6e83\u5f97\u5982\u6b64\u4e4b\u5feb\uff0c\u4ee5\u81f3\u4e8e\u8fc7\u53bb12\u4e2a\u6708\u7684\u9500\u552e\u989d\u5927\u5e45\u4e0b\u964d\u4e8621.6%\u3002\u5bf9\u4e8e\u53ef\u4ee5\u8ffd\u6eaf\u52301992\u5e74\u7684\u96f6\u552e\u6570\u636e\u6765\u8bf4\uff0c\u4e0b\u964d\u7684\u4e25\u91cd\u6027\u662f\u65e0\u4e0e\u4f26\u6bd4\u7684\u30024\u6708\u4efd\u7684\u6708\u5ea6\u964d\u5e45\u51e0\u4e4e\u662f\u4e00\u4e2a\u6708\u524d\u521b\u4e0b\u76848.3%\u7684\u5148\u524d\u7eaa\u5f55\u964d\u5e45\u7684\u4e24\u500d\u3002\n\u54a8\u8be2\u516c\u53f8Maria Fiorini Ramirez\u7684\u9996\u5e2d\u7f8e\u56fd\u7ecf\u6d4e\u5b66\u5bb6\u7ea6\u4e66\u4e9a\u00b7\u590f\u76ae\u7f57(Joshua Shapiro)\u8868\u793a\uff1a\u201c\u8fd9\u5c31\u50cf\u4e00\u573a\u98d3\u98ce\u6765\u4e86\uff0c\u628a\u6574\u4e2a\u7ecf\u6d4e\u5937\u4e3a\u5e73\u5730\uff0c\u73b0\u5728\u6211\u4eec\u6b63\u8bd5\u56fe\u8ba9\u5b83\u6062\u590d\u8fd0\u8f6c\u3002\u201d\n\u590f\u76ae\u7f57\u8bf4\uff0c\u4ed6\u8ba4\u4e3a\u968f\u7740\u5404\u5dde\u548c\u5730\u65b9\u91cd\u65b0\u5f00\u653e\u7ecf\u6d4e\uff0c\u96f6\u552e\u989d\u5e94\u8be5\u4f1a\u6709\u6240\u53cd\u5f39\u3002\u4f46\u4ed6\u8868\u793a\uff0c\u603b\u4f53\u9500\u552e\u4ecd\u5c06\u4f4e\u8ff7\uff0c\u201c\u56e0\u4e3a\u5c06\u6709\u5f88\u5927\u4e00\u90e8\u5206\u5931\u53bb\u7684\u5de5\u4f5c\u5c97\u4f4d\u4e00\u53bb\u4e0d\u590d\u8fd4\u3002\u201d\n\u4ece3\u6708\u52304\u6708\uff0c\u964d\u5e45\u6700\u5927\u7684\u662f\u670d\u88c5\u3001\u7535\u5b50\u4ea7\u54c1\u548c\u5bb6\u5177\u5e97\u3002\u6d88\u8d39\u8005\u957f\u671f\u8f6c\u5411\u5728\u7ebf\u8d2d\u7269\u7684\u8d8b\u52bf\u6b63\u5728\u52a0\u901f\uff0c\u8fd9\u4e00\u7ec6\u5206\u5e02\u573a\u7684\u6708\u5ea6\u589e\u5e45\u4e3a8.4%\u3002\u4e0e\u53bb\u5e74\u540c\u671f\u76f8\u6bd4\uff0c\u5728\u7ebf\u9500\u552e\u989d\u98d9\u5347\u4e8621.6%\u3002\n\u9664\u4e86\u5728\u7ebf\uff0c4\u6708\u4efd\u6ca1\u6709\u4e00\u4e2a\u96f6\u552e\u7c7b\u522b\u5e78\u514d\u4e8e\u96be\u3002\u6c7d\u8f66\u7ecf\u9500\u5546\u7684\u6708\u5ea6\u964d\u5e45\u4e3a13%\u3002\u5bb6\u5177\u5e97\u6d88\u5316\u4e8659%\u7684\u66b4\u8dcc\u3002\u7535\u5b50\u4ea7\u54c1\u548c\u5bb6\u7535\u5546\u5e97\u4e0b\u8dcc\u4e8660%\u4ee5\u4e0a\u3002\u9500\u552e\u5efa\u6750\u7684\u96f6\u552e\u5546\u516c\u5e03\u7684\u964d\u5e45\u7ea6\u4e3a3%\u3002\u57283\u6708\u7684\u6050\u614c\u6027\u62a2\u8d2d\u4e4b\u540e\uff0c\u98df\u54c1\u6742\u8d27\u9500\u552e\u4e0b\u964d\u4e8613%\u3002\n\u670d\u88c5\u5e97\u7684\u9500\u552e\u989d\u4e0b\u964d\u4e8679%\uff0c\u767e\u8d27\u5546\u5e97\u7684\u9500\u552e\u989d\u4e0b\u964d\u4e8629%\u3002\u9910\u5385\uff0c\u5176\u4e2d\u4e00\u4e9b\u5df2\u7ecf\u5f00\u59cb\u6c38\u4e45\u5173\u95ed\uff0c\u5c3d\u7ba1\u79ef\u6781\u8f6c\u5411\u5916\u5356\u548c\u5916\u5356\u8ba2\u5355\uff0c\u4f46\u4ecd\u5fcd\u53d7\u7740\u8fd130%\u7684\u4e0b\u964d\u3002\n\u5bf9\u4e8e\u5df2\u7ecf\u6447\u6447\u6b32\u5760\u7684\u96f6\u552e\u4e1a\u6765\u8bf4\uff0c\u652f\u51fa\u7684\u80cc\u9760\u80cc\u81ea\u7531\u843d\u4f53\u6784\u6210\u4e86\u4e25\u91cd\u7684\u98ce\u9669\u3002\u767e\u8d27\u5546\u5e97\u3001\u9910\u9986\u548c\u6c7d\u8f66\u7ecf\u9500\u5546\u90fd\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u4e0a\u4e2a\u6708\uff0c\u96f6\u552e\u5546\u6bcf\u82b1\u8d395\u7f8e\u5143\uff0c\u5c31\u6709\u8fd11\u7f8e\u5143\u6d41\u5411\u4e86\u975e\u5546\u5e97\u96f6\u552e\u5546\uff0c\u8fd9\u8bc1\u660e\u5927\u6d41\u884c\u52a0\u901f\u4e86\u5411\u5728\u7ebf\u8d2d\u7269\u7684\u8f6c\u53d8\u3002\n\u96f6\u552e\u5546\u4e0d\u4ec5\u53d7\u5230\u5dde\u548c\u5730\u65b9\u5f3a\u5236\u5173\u95ed\u4f01\u4e1a\u7684\u5a01\u80c1\uff0c\u8fd8\u53d7\u5230\u8fc7\u53bb\u4e24\u4e2a\u6708\u521b\u7eaa\u5f55\u76843600\u4e07\u4e2a\u5de5\u4f5c\u5c97\u4f4d\u6d41\u5931\u7684\u5a01\u80c1\u3002\u88c1\u5458\u548c\u5de5\u65f6\u51cf\u5c11\u9f13\u52b1\u4e86\u652f\u51fa\u7684\u56de\u843d\u3002\n\u6765\u81ea\u5f17\u5409\u5c3c\u4e9a\u5dde\u91cc\u58eb\u6ee1\u90ca\u533a\u768429\u5c81\u7684\u6797\u8d5b\u00b7\u5bcc\u5c14\u987f(Lindsay Fulton)\u4e8e3\u6708\u5e95\u4ece\u9500\u552e\u5de5\u4f5c\u4e2d\u88ab\u6682\u65f6\u89e3\u96c7\uff0c\u5979\u8bf4\uff0c\u5979\u73b0\u5728\u505a\u7684\u5c11\u91cf\u8d2d\u7269\u5927\u591a\u662f\u5728\u7f51\u4e0a\u8fdb\u884c\u7684\u3002\u5979\u77ed\u671f\u5185\u6ca1\u6709\u6d4f\u89c8\u5546\u5e97\u6216\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\u800c\u8d2d\u7269\u7684\u8ba1\u5212\u3002\n\u201c\u6211\u611f\u89c9\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6bcf\u4e2a\u4eba\u7684\u4e60\u60ef\u90fd\u6539\u53d8\u4e86\uff0c\u201d\u5979\u8bf4\u3002\n\u5728\u8fc7\u53bb\u7684\u4e24\u5468\u91cc\uff0cJ.Crew\uff0cNeiman Marcus\u548cStage Stores\u90fd\u7533\u8bf7\u4e86\u7834\u4ea7\u4fdd\u62a4\u3002J.C.Penney\u4f3c\u4e4e\u5373\u5c06\u8ffd\u968f\u4ed6\u4eec\u7684\u811a\u6b65\u3002\u745e\u94f6(UBS)\u4f30\u8ba1\uff0c\u672a\u6765\u4e94\u5e74\u53ef\u80fd\u4f1a\u6709\u5927\u7ea610\u4e07\u5bb6\u95e8\u5e97\u5173\u95ed\u3002\n\u201c\u6574\u4e2a\u7ecf\u6d4e\u6a21\u5f0f\u6b63\u5728\u74e6\u89e3\uff0c\u201dGlobalData Retail\u8463\u4e8b\u603b\u7ecf\u7406\u5c3c\u5c14\u00b7\u6851\u5fb7\u65af(Neil Saunders)\u8bf4\u3002\u201c\u8fd9\u5c06\u662f\u975e\u5e38\u75db\u82e6\u7684\u3002\u5bf9\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u8fd9\u5c06\u662f\u81f4\u547d\u7684\u3002\u201c\u3002\n\u4e00\u7fa4\u5b66\u672f\u7ecf\u6d4e\u5b66\u5bb6\u57284\u6708\u4efd\u7684\u4e00\u9879\u5206\u6790\u4e2d\u53d1\u73b0\uff0c\u5173\u95ed\u4e00\u4e2a\u6708\u53ef\u80fd\u4f1a\u6467\u6bc131%\u7684\u975e\u6742\u8d27\u5e97\u96f6\u552e\u5546\u3002\u5173\u95ed\u56db\u4e2a\u6708\u53ef\u80fd\u4f1a\u8feb\u4f7f65%\u7684\u516c\u53f8\u5173\u95ed\u3002\n\u96f6\u552e\u652f\u51fa\u9aa4\u964d\u662f\u7f8e\u56fd\u7ecf\u6d4e\u840e\u7f29\u7684\u4e00\u4e2a\u5173\u952e\u539f\u56e0\u3002\u96f6\u552e\u989d\u7ea6\u5360\u6240\u6709\u6d88\u8d39\u8005\u652f\u51fa\u7684\u4e00\u534a\uff0c\u6d88\u8d39\u8005\u652f\u51fa\u7ea6\u5360\u603b\u7ecf\u6d4e\u6d3b\u52a8\u768470%\u3002\u5176\u4f59\u7684\u6d88\u8d39\u8005\u652f\u51fa\u5305\u62ec\u624b\u673a\u548c\u4e92\u8054\u7f51\u5408\u540c\u3001\u5065\u8eab\u623f\u4f1a\u5458\u8d44\u683c\u548c\u513f\u7ae5\u4fdd\u80b2\u7b49\u670d\u52a1\u3002\n\u7531\u4e8e\u5f88\u5c11\u6709\u7f8e\u56fd\u4eba\u6b63\u5e38\u8d2d\u7269\u3001\u65c5\u884c\u3001\u5916\u51fa\u5c31\u9910\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u6d88\u8d39\uff0c\u7ecf\u6d4e\u5b66\u5bb6\u4f30\u8ba1\uff0c\u56fd\u5185\u751f\u4ea7\u603b\u503c(GDP)-\u8861\u91cf\u7ecf\u6d4e\u6d3b\u52a8\u7684\u6700\u5e7f\u6cdb\u6307\u6807-\u57284-6\u6708\u8fd9\u4e2a\u5b63\u5ea6\u6b63\u4ee5\u5927\u7ea640%\u7684\u5e74\u7387\u840e\u7f29\u3002\u8fd9\u5c06\u662f\u6709\u8bb0\u5f55\u4ee5\u6765\u6700\u6df1\u7684\u5b63\u5ea6\u964d\u5e45\u3002\n\u5bf9\u96f6\u552e\u4e1a\u65bd\u52a0\u7684\u538b\u529b\u4e5f\u5728\u5168\u7403\u8303\u56f4\u5185\u611f\u53d7\u5230\u3002\u5728\u4f7f\u7528\u6b27\u5143\u7684\u6b27\u6d32\u56fd\u5bb6\u4e2d\uff0c\u96f6\u552e\u989d\u4ece2\u6708\u52303\u6708\u75db\u82e6\u5730\u4e0b\u964d\u4e8611.2%\u3002\nOpportunity Insight\u8ffd\u8e2a\u7684\u652f\u51fa\u8868\u660e\uff0c\u6d88\u8d39\u8005\u652f\u51fa\u53ef\u80fd\u57284\u6708\u4e2d\u65ec\u5de6\u53f3\u89e6\u5e95\uff0c\u7136\u540e\u5f00\u59cb\u5c0f\u5e45\u56de\u5347\uff0c\u81f3\u5c11\u5728\u670d\u88c5\u548c\u4e00\u822c\u5546\u54c1\u7c7b\u522b\u662f\u8fd9\u6837\u3002\u4f46\u4ea4\u901a\u3001\u9910\u996e\u3001\u9152\u5e97\u4ee5\u53ca\u827a\u672f\u548c\u5a31\u4e50\u65b9\u9762\u7684\u652f\u51fa\u4ecd\u7136\u4e25\u91cd\u4f4e\u8ff7\u3002\n\u5373\u4f7f\u9500\u552e\u989d\u4e0b\u964d\uff0c\u5927\u6d41\u884c\u4e5f\u8feb\u4f7f\u4eba\u4eec\u5728\u9002\u5e94\u5728\u5bb6\u5de5\u4f5c\u7684\u540c\u65f6\u6539\u53d8\u8d2d\u4e70\u65b9\u5f0f\u3002\u76d1\u6d4b\u5305\u88c5\u5546\u54c1\u9500\u552e\u7684CSolutions\u6ce8\u610f\u5230\u4e86\u5411\u8212\u9002\u548c\u4fbf\u5229\u7684\u8f6c\u53d8\u3002\u4e0e\u4e00\u5e74\u524d\u76f8\u6bd4\uff0c\u70d8\u7119\u9762\u7c89\u3001\u756a\u8304\u9171\u3001\u51b0\u6dc7\u6dcb\u3001\u9884\u6df7\u9e21\u5c3e\u9152\u548c\u65e9\u9910\u9999\u80a0\u7684\u9500\u91cf\u6fc0\u589e\u3002\n\u6839\u636e\u76d1\u6d4b\u5728\u7ebf\u96f6\u552e\u5546\u7684Adobe Analytics\u7684\u6570\u636e\uff0c\u4ece3\u6708\u52304\u6708\uff0c\u7761\u8863\u8d2d\u4e70\u91cf\u98d9\u5347\u4e86143%\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u88e4\u5b50\u3001\u5939\u514b\u548c\u80f8\u7f69\u7684\u9500\u91cf\u5219\u6709\u6240\u4e0b\u964d\u3002\n\u79d1\u8fea\u00b7\u6d3e\u73c0(Cody Pipper)\u662f\u4e00\u5bb6\u540d\u4e3aLitehouse Pools and Spas\u768416\u5bb6\u8fde\u9501\u5e97\u7684\u9500\u552e\u52a9\u7406\uff0c\u4ed6\u8bf4\u4ed6\u6ce8\u610f\u5230\u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u4ee5\u670d\u52a1\u4e8e\u5bb6\u5ead\u751f\u6d3b\u65b9\u5f0f\u7684\u65b9\u5f0f\u6d88\u8d39\u300224\u5c81\u7684\u76ae\u73c0\u6765\u81ea\u4fc4\u4ea5\u4fc4\u5dde\u57c3\u5229\u91cc\u4e9a\uff0c\u4ed6\u8bf4\u4ed6\u81ea\u5df1\u82b1\u4e862500\u7f8e\u5143\u4e3a\u4ed6\u7684\u59bb\u5b50\u4e70\u4e86\u4e00\u8f86\u4f69\u6d1b\u987f\u5065\u8eab\u81ea\u884c\u8f66\uff0c\u4ed6\u7684\u59bb\u5b50\u662f\u4e00\u540d\u533b\u7597\u52a9\u7406\uff0c\u6700\u8fd1\u56de\u5230\u4e86\u5de5\u4f5c\u5c97\u4f4d\u3002\u4ed6\u8bf4\uff0c\u4ed6\u4eec\u9884\u8ba1\u5916\u51fa\u5c31\u9910\u548c\u5728\u5546\u573a\u8d2d\u7269\u7684\u82b1\u8d39\u4f1a\u66f4\u5c11\u3002\n\u201c\u6211\u548c\u5bb6\u4eba\u4e00\u8d77\u51fa\u53bb\u73a9\uff0c\u770b\u7535\u89c6\uff0c\u771f\u7684\u5f88\u5f00\u5fc3\uff0c\u201d\u6d3e\u73c0\u8bf4\uff0c\u4ed6\u6709\u4e00\u4e2a1\u5c81\u7684\u513f\u5b50\u3002\u201c\u6211\u8ba4\u4e3a\u8fd9\u662f\u5e38\u6001\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u505a\u7684\u3002\u201c\u3002\nD\u2018Innocenzio\u4ece\u7ebd\u7ea6\u62a5\u9053\u3002\u7f8e\u8054\u793e\u64b0\u7a3f\u4eba\u838e\u62c9\u00b7\u5170\u91d1\u5728\u5f17\u5409\u5c3c\u4e9a\u5dde\u91cc\u58eb\u6ee1\u5bf9\u8fd9\u7bc7\u62a5\u9053\u505a\u51fa\u4e86\u8d21\u732e\u3002", "note_en": "BALTIMORE (AP) \u2014 U.S. retail sales tumbled by a record 16.4% from March to April as business shutdowns caused by the coronavirus kept shoppers away, threatened the viability of stores across the country and further weighed down a sinking economy.\n The Commerce Department\u2019s report Friday on retail purchases showed a sector that has collapsed so fast that sales over the past 12 months are down a crippling 21.6%. The severity of the decline is unrivaled for retail figures that date back to 1992. The monthly decline in April nearly doubled the previous record drop of 8.3% \u2014 set just one month earlier.\n  \u201cIt\u2019s like a hurricane came and leveled the entire economy, and now we\u2019re trying to get it back up and running,\u201d said Joshua Shapiro, chief U.S. economist for the consultancy Maria Fiorini Ramirez.\n  Shapiro said he thinks retail sales should rebound somewhat as states and localities reopen their economies. But he said overall sales would remain depressed \u201cbecause there is going to be a big chunk of the lost jobs that don\u2019t come back.\u201d\n The sharpest declines from March to April were at clothing, electronics and furniture stores. A long-standing migration of consumers toward online purchases is accelerating, with that segment posting a 8.4% monthly gain. Measured year over year, online sales surged 21.6%.\n Other than online, not a single retail category was spared in April. Auto dealers suffered a monthly drop of 13%. Furniture stores absorbed a 59% plunge. Electronics and appliance stores were down over 60%. Retailers that sell building materials posted a drop of roughly 3%. After panic buying in March, grocery sales fell 13%.\n Clothing-store sales tumbled 79%, department stores 29%. Restaurants, some of which are already starting to close permanently, endured a nearly 30% decline despite shifting aggressively to takeout and delivery orders.\n  For a retail sector that had already been reeling, a back-to-back free-fall in spending poses a grave risk. Department stores, restaurants and auto dealerships are in danger. Nearly $1 of every $5 spent at retailers last month went to non-store retailers, evidence that the pandemic has accelerated the shift toward online shopping.\n Retailers are being imperiled not only by business shutdowns mandated by states and localities but also by a record loss of 36 million jobs over the past two months. The layoffs and reduced hours have encouraged a pullback in spending.\n Lindsay Fulton, a 29-year-old from suburban Richmond, Virginia, who was furloughed from her sales job at the end of March, said most of what little shopping she does now is online. She has no plans anytime soon to browse stores or simply shop for fun.\n \u201cI feel like, across the board, everyone\u2019s habits have changed,\u201d she said.\n In the past two weeks, J.Crew, Neiman Marcus and Stage Stores have filed for bankruptcy protection. J.C. Penney appears on the verge of following them. UBS estimates that roughly 100,000 stores could shutter over the next five years.\n \u201cThe whole economic model is unraveling,\u201d Neil Saunders, managing director of GlobalData Retail. \u201cThis is going to be very painful. For some, it\u2019s going to be fatal.\u201d\n An April analysis by a group of academic economists found that a one-month closure could wipe out 31% of non-grocer retailers. A four-month closure could force 65% to close.\n  The plunge in retail spending is a key reason why the U.S. economy is contracting. Retail sales account for roughly half of all consumer spending, which fuels about 70% of total economic activity. The rest of consumer spending includes services like cellphone and internet contracts, gym memberships and child care.\n With few Americans shopping,  traveling, eating out or otherwise spending normally, economists have estimated that the gross domestic product \u2014 the broadest gauge of economic activity \u2014 is shrinking in the April-June quarter at a roughly 40% annual rate. That would be the deepest quarterly drop on record.\n The pressures being exerted on retail are also being felt globally. Among the European countries that share the euro currency, retail sales fell a painful 11.2% from February to March.\n Spending tracked by Opportunity Insights suggests that consumer spending might have bottomed out around mid-April before beginning to tick up slightly, at least in the clothing and general merchandise categories. But spending on transportation, restaurants, hotels and arts and entertainment remains severely depressed.\n Even with the sales declines, the pandemic is forcing shifts in what people buy as they adjust to working at home. CSolutions, which monitors sales of packaged goods, has noted a shift to comfort and convenience. Sales of baking flour, tomato sauces, ice cream, premixed cocktails and breakfast sausages have surged from a year ago.\n Pajama-buying rocketed 143% from March to April, according to Adobe Analytics, which monitors online retailers. By contrast, sales of pants, jackets and bras have declined.\n Cody Pipper, a sales associate for a 16-store chain called Litehouse Pools and Spas, says he\u2019s noticed that more people are now spending in ways that serve their at-home lifestyles. Pipper, 24, of Elyria, Ohio, said he himself spent $2,500 for a Peloton exercise bike for his wife, a medical assistant who recently returned to work. He said they expect to spend less on dining out and shopping at the mall.\n \u201cI\u2019ve had a really good time with the family hanging out, watching TV,\u201d said Pipper who has a 1-year-old son. \u201cI think this is the norm. This is what we are supposed to do now.\u201d\n  D\u2019Innocenzio reported from New York. AP writer Sarah Rankin contributed to this report from Richmond, Virginia.", "posttime": "2020-05-16 06:03:29", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u75c5\u6bd2,\u66b4\u8dcc,sales,\u652f\u51fa", "title": "\u7531\u4e8e\u75c5\u6bd2\u6765\u88ad\uff0c\u7f8e\u56fd4\u6708\u4efd\u96f6\u552e\u989d\u66b4\u8dcc\u521b\u7eaa\u5f55\u768416%", "title_en": "US Retail Sales Plunged a Record 16 Percent In April As Virus Hit", "transed": 1, "url": "https://apnews.com/e95a6d2d0a721fcffb4efb9435b84f4f", "via": "", "real_tags": ["\u75c5\u6bd2", "\u66b4\u8dcc", "sales", "\u652f\u51fa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002316, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1.\u7edf\u8ba1/\u6570\u503c\u5206\u6790/\u6570\u636e\u79d1\u5b66\u6bd4\u4f60\u8fd9\u4e2a\u535a\u5ba2\u7684\u8bfb\u8005\u60f3\u8c61\u7684\u8981\u96be\u5f97\u591a\u3002\n2.\u4e0e\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u73af\u5883\u4e00\u6837\uff0c\u5b66\u672f\u754c\u5145\u65a5\u7740\u6770\u51fa\u7684\u3001\u6210\u529f\u7684\u3001\u4eba\u8109\u6df1\u539a\u7684\u865a\u5f20\u58f0\u52bf\u7684\u4eba\u3002", "note_en": "1. Statistics / numerical analysis / data science is a lot harder than you, the reader of this blog, might think.\n 2. Academia, like any other working environment, is full of prominent, successful, well-connected bluffers.", "posttime": "2020-05-16 06:02:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u540d\u8a89,connections,\u73af\u5883", "title": "\u5b66\u672f\u754c\u7684\u5f88\u591a\u5185\u5bb9\u90fd\u662f\u5173\u4e8e\u4eba\u8109\u548c\u540d\u8a89\u6d17\u94b1\u7684\u3002", "title_en": "So much of academia is about connections and reputation laundering", "transed": 1, "url": "https://statmodeling.stat.columbia.edu/2020/05/14/so-much-of-academia-is-about-connections-and-reputation-laundering/", "via": "", "real_tags": ["\u540d\u8a89", "\u73af\u5883"]}, {"category": "", "categoryclass": "", "imagename": "67f48ecec668cbb8875db44d2efdce26.jpeg", "infoid": 1002315, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[UPDATED@DEC\uff0c2019\u5e74]\u6211\u53d1\u73b0\u8fd9\u7bc7\u8001\u535a\u6587\u6700\u8fd1\u5728\u9ed1\u5ba2\u65b0\u95fb\u548cReddit\u4e0a\u88ab\u5206\u4eab\u548c\u8ba8\u8bba\u4e86\u5f88\u591a\u3002\u6211\u60f3\u6f84\u6e05\u51e0\u4ef6\u4e8b\uff1a\n\u8fd9\u7bc7\u5e16\u5b50\u73b0\u5728\u4e0d\u662f\u5f88\u65b0\u3002\u6280\u672f\u5806\u6808\u4e0d\u65ad\u53d1\u5c55\u2026\u3002\u800c\u4e14\u5728\u8fc7\u53bb\u4e24\u5e74\u7684\u5168\u804c\u5de5\u4f5c\u4e2d\u53d8\u5f97\u6709\u70b9\u590d\u6742\u3002\u6700\u521d\uff0cListen Notes\u57282017\u5e741\u6708\u76843\u4e2aDigitalOcean\u6c34\u6ef4\u4e0a\u8fd0\u884c(\u7ea630\u7f8e\u5143/\u6708)\u3002\u201c\u65e0\u804a\u201d\u5e76\u4e0d\u610f\u5473\u7740\u201c\u7b80\u5355\u201d\u6216\u201c\u4f7f\u7528\u975e\u5e38\u9648\u65e7\u3001\u975e\u5e38\u4f01\u4e1a\u7ea7\u7684\u6280\u672f\u5806\u6808\u201d\u3002\u201c\u65e0\u804a\u201d\u5728\u8fd9\u91cc\u7684\u610f\u601d\u662f\u6211\u53ea\u4f7f\u7528\u6211\u719f\u6089\u7684\u6280\u672f\u5806\u6808\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5feb\u901f\u542f\u52a8\u9879\u76ee&\u66f4\u591a\u5730\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u65b9\u9762\u3002\n\u6211\u53ea\u82b1\u4e8610%~20%\u7684\u65f6\u95f4\u5728\u5de5\u7a0b\u4e0a(\u53ef\u80fd\u63a5\u8fd110%)\uff0c\u73b0\u5728\u200a-\u200a80%\u7684\u5de5\u7a0b\u65f6\u95f4\u7528\u4e8e\u8fed\u4ee3\u73b0\u6709\u7684\u7279\u6027/\u57fa\u7840\u8bbe\u65bd/\u5185\u90e8\u5de5\u5177\uff0c\u800c20%\u7528\u4e8e\u8bd5\u9a8c\u65b0\u4e8b\u7269\u3002\u6211\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u5728\u4e0e\u4ed6\u4eba\u4ea4\u8c08\u3001\u56de\u590d\u7535\u5b50\u90ae\u4ef6(\u5360\u6211\u65f6\u95f4\u768430%~40%)\u548c\u601d\u8003(\uff01)\u4e0a\uff0c\u8fd9\u88ab\u5de5\u7a0b\u5e08\u4eec\u8ba4\u4e3a\u4e0d\u662f\u201c\u771f\u6b63\u7684\u5de5\u4f5c\u201d\uff1a)\u6211\u901a\u5e38\u6bcf\u5929\u5728\u529e\u516c\u5ba4\u54464~8\u4e2a\u5c0f\u65f6\uff0c\u4f46\u6211\u7528\u82f9\u679c\u624b\u673a\u5de5\u4f5c(\u4f8b\u5982\uff0c\u56de\u590d\u7535\u5b50\u90ae\u4ef6\u3001Slake\u2026\u7684\u804a\u5929\u64cd\u4f5c)\u3002\u5f53\u6211\u4e0d\u5728\u529e\u516c\u5ba4\u7684\u65f6\u5019\uff0c\u591a\u60f3\u60f3\u201c\u542c\u7b14\u8bb0\u201d\u3002\n\u6211\u5fc5\u987b\u5411\u90a3\u4e9b\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u611f\u5230\u5192\u72af\u7684\u4eba\u9053\u6b49\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u8d5e\u626c\u4f60\u6700\u559c\u6b22\u7684\u6280\u672f\uff0c\u6216\u8005\u6211\u6ca1\u6709\u5199\u51fa\u4f60\u540c\u610f\u7684\u4e1c\u897f\uff0c\u6216\u8005\u6211\u6ca1\u6709\u56de\u7b54\u4f60\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u63d0\u51fa\u7684\u6240\u6709\u95ee\u9898\uff0c\u200a-\u200a\u516c\u5e73\u5730\u8bf4\uff0c\u6211\u65e0\u6cd5\u9884\u6d4b\u4f60\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\u53ef\u80fd\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff01\u8981\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u5f00\u5fc3\u662f\u4e0d\u53ef\u80fd\u7684\uff1a(\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u662f\u5411\u4f60\u5c55\u793a\u4e3a\u4e00\u79cd\u975e\u5e38\u5177\u4f53\u7684\u5728\u7ebf\u4e1a\u52a1\u7c7b\u578b\u505a\u5de5\u7a0b\u7684\u5355\u5411\u65b9\u6cd5\u3002\u8fd9\u4e0d\u662f\u552f\u4e00\u7684\u529e\u6cd5\u3002\u8fd9\u80af\u5b9a\u4e0d\u662f\u6700\u597d\u7684\u529e\u6cd5\u3002\u6211\u5e0c\u671b\u8fd9\u7bc7\u535a\u6587\u80fd\u4e3a\u79d1\u6280\u754c\u63d0\u4f9b\u4e00\u4e2a\u6709\u7528\u7684\u6570\u636e\u70b9\u3002\u60a8\u53ef\u4ee5\u4ece\u9ed1\u5ba2\u65b0\u95fb\u6216\u72ec\u7acb\u9ed1\u5ba2\u7f51\u7ad9\u627e\u5230\u66f4\u591a\u6570\u636e\u70b9\uff1a)\u3002\nListen Notes\u662f\u4e00\u4e2a\u64ad\u5ba2\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u5e93\u3002Listen Notes\u80cc\u540e\u7684\u6280\u672f\u5b9e\u9645\u4e0a\u975e\u5e38\u975e\u5e38\u65e0\u804a\u3002\u6ca1\u6709AI\uff0c\u6ca1\u6709\u6df1\u5ea6\u5b66\u4e60\uff0c\u6ca1\u6709\u533a\u5757\u94fe\u3002(\u300a\u4efb\u4f55\u5fc5\u987b\u8bf4\u6211\u5728\u7528AI\u7684\u7537\u4eba\u90fd\u4e0d\u662f\u5728\u7528\u771fAI\u300b\uff1a)\u3002\n\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u590d\u5236\u6211\u4e3aListen Notes\u6784\u5efa\u7684\u4e1c\u897f\uff0c\u6216\u8005\u8f7b\u677e\u5730\u505a\u4e00\u4e9b\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u4f60\u4e0d\u9700\u8981\u96c7\u5f88\u591a\u5de5\u7a0b\u5e08\u3002\u8bb0\u4f4f\uff0c\u5f53Instagram\u878d\u8d445750\u4e07\u7f8e\u5143\u5e76\u88ab\u8138\u4e66\u4ee510\u4ebf\u7f8e\u5143\u6536\u8d2d\u65f6\uff0c\u4ed6\u4eec\u53ea\u670913\u540d\u5458\u5de5\uff0c\u200a-\u200a\u5e76\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u662f\u5de5\u7a0b\u5e08\u3002Instagram\u7684\u6545\u4e8b\u53d1\u751f\u57282012\u5e74\u521d\u3002\u73b0\u5728\u662f2019\u5e74\uff0c\u7528\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5de5\u7a0b\u56e2\u961f\u200a-\u200a\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u4eba\uff0c\u4e5f\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u6709\u53ef\u80fd\u5efa\u9020\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u4e1c\u897f\u3002\nListenNotes.com\u662f\u4e00\u4e2a\u4e3a\u64ad\u5ba2\u542c\u4f17\u63d0\u4f9b\u670d\u52a1\u7684\u7f51\u7ad9\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u4e00\u4e2a\u64ad\u5ba2\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u7a0d\u540e\u6536\u542c\u64ad\u653e\u5217\u8868\uff0c\u6536\u542c\u526a\u8f91\uff0c\u5141\u8bb8\u4f60\u526a\u5207\u4efb\u4f55\u64ad\u5ba2\u8282\u76ee\u7684\u4e00\u6bb5\uff0c\u4ee5\u53ca\u6536\u542c\u8b66\u62a5\uff0c\u5f53\u4e92\u8054\u7f51\u4e0a\u7684\u65b0\u64ad\u5ba2\u4e2d\u63d0\u5230\u6307\u5b9a\u7684\u5173\u952e\u5b57\u65f6\uff0c\u5b83\u4f1a\u901a\u77e5\u4f60\u3002\n\u64ad\u5ba2\u641c\u7d22&amp\uff1bDirectory API\u9002\u7528\u4e8e\u5f00\u53d1\u4eba\u5458\u3002\u6211\u4eec\u9700\u8981\u8ddf\u8e2aAPI\u4f7f\u7528\u60c5\u51b5\uff0c\u4ece\u4ed8\u8d39\u7528\u6237\u90a3\u91cc\u83b7\u5f97\u8d44\u91d1\uff0c\u505a\u5ba2\u6237\u652f\u6301\uff0c\u7b49\u7b49\u3002\n\u6211\u5728AWS\u4e0a\u8fd0\u884c\u6240\u6709\u4e1c\u897f\u3002\u670920\u53f0\u751f\u4ea7\u670d\u52a1\u5668(\u622a\u81f32019\u5e745\u67085\u65e5)\uff1a\nProduction-API\u670d\u52a1\u4e8eAPI\u6d41\u91cf\u3002\u6211\u4eec\u8fd0\u884c\u4e24\u4e2a\u7248\u672c\u7684API(\u622a\u81f32019\u5e745\u67084\u65e5)\uff0c\u5373v1api(\u65e7\u7248\u672c)\u548cv2api(\u65b0\u7248\u672c)\u3002\n\u751f\u4ea7\u5de5\u4eba\u8fd0\u884c\u79bb\u7ebf\u5904\u7406\u4efb\u52a1\uff0c\u4ee5\u4f7f\u64ad\u5ba2\u6570\u636e\u5e93\u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u795e\u5947\u7684\u4e1c\u897f(\u4f8b\u5982\uff0c\u641c\u7d22\u7ed3\u679c\u6392\u540d\u3001\u5267\u96c6/\u64ad\u5ba2\u63a8\u8350\u2026)\u3002\u3002\nProduction-lb\u662f\u8d1f\u8f7d\u5e73\u8861\u5668\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u8fd8\u5728\u6b64\u670d\u52a1\u5668\u4e0a\u8fd0\u884cRedis&amp\uff1bRabbitMQ\u3002\u6211\u77e5\u9053\u8fd9\u5e76\u4e0d\u7406\u60f3\u3002\u4f46\u6211\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4eba\uff1a)\u3002\nProduction-Pangu\u670d\u52a1\u5668\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u751f\u4ea7\u7684\u670d\u52a1\u5668\uff0c\u6211\u6709\u65f6\u4f1a\u8fd0\u884c\u4e00\u6b21\u6027\u811a\u672c\u5e76\u6d4b\u8bd5\u66f4\u6539\u3002\u76d8\u53e4\u662f\u4ec0\u4e48\u610f\u601d\uff1f\n\u8fd9\u4e9b\u670d\u52a1\u5668\u4e2d\u7684\u5927\u591a\u6570\u90fd\u53ef\u4ee5\u6c34\u5e73\u6269\u5c55\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u628a\u5b83\u4eec\u547d\u540d\u4e3a\u751f\u4ea7\u578b1\uff0c\u751f\u4ea7\u578b2\u2026\u3002\u5728\u8230\u961f\u4e2d\u589e\u52a0\u4e00\u6279\u4ee5\u751f\u4ea7\u4e3a\u4e3b\u7684\u98de\u673a\u548c\u4e00\u6279\u4ee5\u751f\u4ea7\u4e3a\u4e3b\u7684\u98de\u673a\u53ef\u80fd\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\n\u6574\u4e2a\u540e\u7aef\u90fd\u662f\u7528Django/Python3\u7f16\u5199\u7684\u3002\u9009\u62e9\u7684\u64cd\u4f5c\u7cfb\u7edf\u662fUbuntu\u3002\n\u6211\u4f7f\u7528uWSGI\u670d\u52a1\u4e8e\u7f51\u7edc\u6d41\u91cf\u3002\u6211\u628anginx\u653e\u5728uWSGI\u8fdb\u7a0b\u524d\u9762\uff0cuWSGI\u8fdb\u7a0b\u4e5f\u662f\u8d1f\u8f7d\u5747\u8861\u5668\u3002\n\u4e3b\u8981\u7684\u6570\u636e\u5b58\u50a8\u662f\u200a-\u200a\uff0c\u8fd9\u662f\u6211\u591a\u5e74\u7684\u5f00\u53d1\u548c\u8fd0\u8425\u7ecf\u9a8c\uff0cPostgreSql\u7ecf\u8fc7\u6218\u6597\u6d4b\u8bd5\u7684\u6280\u672f\u5f88\u597d\uff0c\u6240\u4ee5\u6211\u665a\u4e0a\u53ef\u4ee5\u7761\u4e2a\u597d\u89c9\u3002\u5b83\u6709\u591a\u79cd\u7528\u9014(\u4f8b\u5982\u7f13\u5b58\u3001\u7edf\u8ba1\u3001\u2026)\u3002\u3002\u4e0d\u96be\u731c\u6d4b\uff0c\u67d0\u4e2a\u5730\u65b9\u4f7f\u7528\u4e86Elasticsearch\u3002\u662f\u7684\uff0c\u6211\u4f7f\u7528Elasticsearch\u4e3a\u64ad\u5ba2\u548camp\uff1b\u5267\u96c6\u7f16\u5236\u7d22\u5f15\uff0c\u5e76\u4e3a\u641c\u7d22\u67e5\u8be2\u63d0\u4f9b\u670d\u52a1\uff0c\u5c31\u50cf\u5927\u591a\u6570\u4e4f\u5473\u7684\u4e92\u8054\u7f51\u516c\u53f8\u4e00\u6837\u3002\n\u82b9\u83dc\u662f\u7528\u6765\u8fdb\u884c\u7ebf\u4e0b\u52a0\u5de5\u7684\u3002\u800c\u82b9\u83dc\u51fb\u8d25\u662f\u4e3a\u4e86\u8c03\u5ea6\u4efb\u52a1\uff0c\u8fd9\u5c31\u50cfCron\u4f5c\u4e1a\uff0c\u4f46\u8981\u597d\u4e00\u70b9\u3002\u5982\u679c\u5c06\u6765Listen Notes\u83b7\u5f97\u4e86\u5438\u5f15\u529b\uff0c\u800c\u82b9\u83dc\u548cAmp\uff1bBeat\u5bfc\u81f4\u4e86\u4e00\u4e9b\u89c4\u6a21\u95ee\u9898\uff0c\u6211\u53ef\u80fd\u4f1a\u8f6c\u800c\u4f7f\u7528\u6211\u4e3a\u524d\u96c7\u4e3b\u505a\u7684\u4e24\u4e2a\u9879\u76ee\uff1andkale\u548cnndScheduler\u3002\n\u7b49\u7b49\uff0cDocker/Kubernetes/Serverless\u600e\u4e48\u6837\uff1f\u6ca1\u6709\u3002\u968f\u7740\u7ecf\u9a8c\u7684\u79ef\u7d2f\uff0c\u4f60\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u8fc7\u5ea6\u8bbe\u8ba1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u65e9\u57282014\u5e74\uff0c\u6211\u5c31\u4e3a\u6211\u7684\u524d\u96c7\u4e3b\u505a\u8fc7\u4e00\u4e9bDocker\u7684\u65e9\u671f\u5de5\u4f5c\uff0c\u8fd9\u5bf9\u4e00\u5bb6\u4ef7\u503c10\u4ebf\u7f8e\u5143\u7684\u4e2d\u578b\u521d\u521b\u516c\u53f8\u6765\u8bf4\u662f\u4ef6\u597d\u4e8b\uff0c\u4f46\u5bf9\u4e8e\u4e00\u5bb6\u53ea\u6709\u4e00\u4e2a\u4eba\u7684\u5c0f\u578b\u521d\u521b\u516c\u53f8\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u77eb\u6789\u8fc7\u6b63\u3002\n\u7f51\u7ad9\u524d\u7aef\u4e3b\u8981\u662f\u7528Reaction+Redux++webpack+\u642d\u5efa\u7684\u3002\u8fd9\u662f\u73b0\u5728\u76f8\u5f53\u6807\u51c6\u7684\u3002\u5728\u90e8\u7f72\u5230\u751f\u4ea7\u4e2d\u65f6\uff0cJS\u6346\u7ed1\u5305\u5c06\u4e0a\u4f20\u5230Amazon S3\u5e73\u53f0\uff0c\u5e76\u901a\u8fc7\u4e91\u524d\u7aef\u63d0\u4f9b\u670d\u52a1\u3002\n\u5728ListenNotes.com\u4e0a\uff0c\u5927\u591a\u6570\u7f51\u9875\u4e00\u534a\u662f\u670d\u52a1\u5668\u7aef\u5448\u73b0\u7684(Django\u6a21\u677f)\uff0c\u53e6\u4e00\u534a\u662f\u5ba2\u6237\u7aef\u5448\u73b0\u7684(REACT)\u3002\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u90e8\u5206\u63d0\u4f9b\u7f51\u9875\u7684\u6837\u677f\uff0c\u5ba2\u6237\u7aef\u6e32\u67d3\u90e8\u5206\u57fa\u672c\u4e0a\u662f\u4ea4\u4e92\u5f0fWeb\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u6709\u51e0\u4e2a\u7f51\u9875\u5b8c\u5168\u662f\u901a\u8fc7\u670d\u52a1\u5668\u7aef\u5448\u73b0\u7684\uff0c\u56e0\u4e3a\u6211\u61d2\u5f97\u8ba9\u4e8b\u60c5\u53d8\u5f97\u5b8c\u7f8e&\u8fd8\u6709\u4e00\u4e9b\u6f5c\u5728\u7684\u641c\u7d22\u5f15\u64ce\u4f18\u5316(SEO)\u597d\u4e1c\u897f\u3002\n\u6211\u5728ListenNotes.com\u4e0a\u4f7f\u7528\u4e86\u4e00\u4e2a\u7ecf\u8fc7\u5927\u91cf\u4fee\u6539\u7684Reaction-media-Player\u7248\u672c\u6765\u6784\u5efa\u97f3\u9891\u64ad\u653e\u5668\uff0c\u5b83\u5728\u51e0\u4e2a\u5730\u65b9\u4f7f\u7528\uff0c\u5305\u62ecListen Notes\u7f51\u7ad9\u3001Twitter Embedded Player\u548c\u7b2c\u4e09\u65b9\u7f51\u7ad9\u4e0a\u7684\u5d4c\u5165\u5f0fPlayer\uff1a\n\u6211\u4eec\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7b80\u5355\u53ef\u9760\u7684\u64ad\u5ba2API\u63a5\u53e3\u3002\u6784\u5efaAPI\u7c7b\u4f3c\u4e8e\u6784\u5efa\u7f51\u7ad9\u3002\u6211\u5c06\u76f8\u540c\u7684django/python\u6808\u7528\u4e8e\u540e\u7aef\uff0c\u5c06ReactJ\u7528\u4e8e\u524d\u7aef(\u4f8b\u5982\uff0capi\u4eea\u8868\u677f\u3001\u6587\u6863\u2026)\u3002\u3002\n\u5bf9\u4e8e\u63a5\u53e3\uff0c\u6211\u4eec\u9700\u8981\u8ddf\u8e2a\u7528\u6237\u5728\u5f53\u524d\u8ba1\u8d39\u5468\u671f\u5185\u4f7f\u7528\u4e86\u591a\u5c11\u4e2a\u8bf7\u6c42\uff0c\u5e76\u5728\u4e00\u4e2a\u8ba1\u8d39\u5468\u671f\u7ed3\u675f\u65f6\u6536\u53d6$\u3002\u4e0d\u96be\u60f3\u8c61\uff0cRedis\u5728\u8fd9\u91cc\u88ab\u5927\u91cf\u4f7f\u7528(\uff1a)\u3002\n\u6211\u4f7f\u7528Ansible\u670d\u52a1\u5668\u8fdb\u884c\u673a\u5668\u914d\u7f6e\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u5806YAML\u6587\u4ef6\u6765\u6307\u5b9a\u54ea\u79cd\u7c7b\u578b\u7684\u670d\u52a1\u5668\u9700\u8981\u6709\u4ec0\u4e48\u914d\u7f6e\u6587\u4ef6&\u4ec0\u4e48\u8f6f\u4ef6\u3002\u6211\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u6b63\u786e\u7684\u914d\u7f6e\u6587\u4ef6\u548c\u53ea\u9700\u6309\u4e00\u4e0b\u6309\u94ae\u5373\u53ef\u5b89\u88c5\u7684\u6240\u6709\u8f6f\u4ef6\u542f\u52a8\u670d\u52a1\u5668\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e9bAnsible YAML\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\uff1a\n\u6211\u5728\u7ed9\u4e1c\u897f\u547d\u540d\u65f6\u672c\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u4f46\u518d\u8bf4\u4e00\u6b21\uff0c\u73b0\u5728\u5bf9\u4ed6\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u6211\u8fd8\u4f7f\u7528Ansible\u5c06\u4ee3\u7801\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u6709\u4e00\u4e2a\u5728MacOS\u4e0a\u8fd0\u884c\u7684\u5305\u88c5\u5668\u811a\u672c\uff0c\u540d\u4e3adeploy.sh\uff1a\nlistennote repo\u7684\u7248\u672c\uff1ahead\u7684\u610f\u601d\u662f\u201c\u53ea\u90e8\u7f72\u6700\u65b0\u7248\u672c\u201d\u3002\u5982\u679c\u6307\u5b9a\u4e86GIT\u63d0\u4ea4\u7684sha\uff0c\u90a3\u4e48\u5b83\u5c06\u90e8\u7f72\u7279\u5b9a\u7248\u672c\u7684\u4ee3\u7801\u200a-\u200a\u8fd9\u5728\u6211\u9700\u8981\u4ece\u7cdf\u7cd5\u7684\u90e8\u7f72\u56de\u6eda\u65f6\u7279\u522b\u6709\u7528\u3002\n\u670d\u52a1\u5668\u7c7b\u578b\uff1aWeb\u3001Worker\u3001API\u8fd8\u662f\u5168\u90e8\u3002\u6211\u4e0d\u5fc5\u4e00\u6b21\u6027\u90e8\u7f72\u5230\u6240\u6709\u670d\u52a1\u5668\u3002\u6709\u65f6\u6211\u4f1a\u4fee\u6539Javascript\u4ee3\u7801\uff0c\u7136\u540e\u6211\u53ea\u9700\u8981\u90e8\u7f72\u5230Web\u4e0a\uff0c\u800c\u4e0d\u9700\u8981\u63a5\u89e6API\u6216Worker\u3002\n\u90e8\u7f72\u8fc7\u7a0b\u4e3b\u8981\u7531Ansible YAML\u6587\u4ef6\u7f16\u6392\uff0c\u5f53\u7136\uff0c\u5b83\u975e\u5e38\u7b80\u5355\uff1a\n\u5728\u6211\u7684Macbook Pro\u4e0a\uff0c\u5982\u679c\u8981\u90e8\u7f72\u5230Web\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u6784\u5efaJavascript\u6346\u7ed1\u5305\u5e76\u4e0a\u4f20\u5230S3\u3002\n\u5728\u76ee\u6807\u670d\u52a1\u5668\u4e0a\uff0cgit\u5c06listennote repo\u514b\u9686\u5230\u4e00\u4e2a\u4ee5\u65f6\u95f4\u6233\u547d\u540d\u7684\u6587\u4ef6\u5939\uff0c\u7b7e\u51fa\u7279\u5b9a\u7248\u672c\uff0c\u7136\u540epip\u5b89\u88c5\u65b0\u7684Python\u4f9d\u8d56\u9879(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\u5728\u76ee\u6807\u670d\u52a1\u5668\u4e0a\uff0c\u5c06symlink\u5207\u6362\u5230\u4e0a\u8ff0\u65f6\u95f4\u6233\u547d\u540d\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u901a\u8fc7superorctl\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\u3002\n\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4e0d\u4f7f\u7528\u90a3\u4e9b\u82b1\u54e8\u7684CI\u5de5\u5177\u3002\u53ea\u662f\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u9645\u6709\u6548\u7684\u4e8b\u60c5\u3002\n\u6211\u4f7f\u7528\u6570\u636e\u91c7\u96c6\u5361\u8fdb\u884c\u76d1\u63a7\u548c\u62a5\u8b66\u3002\u6211\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u4eea\u8868\u677f\u4e2d\u6709\u4e00\u4e9b\u9ad8\u7ea7\u6307\u6807\u3002\u65e0\u8bba\u6211\u5728\u8fd9\u91cc\u505a\u4ec0\u4e48\uff0c\u90fd\u662f\u4e3a\u4e86\u5728\u5904\u7406\u751f\u4ea7\u670d\u52a1\u5668\u65f6\u589e\u5f3a\u6211\u7684\u4fe1\u5fc3\u3002\n\u6211\u5c06Datadog\u8fde\u63a5\u5230PagerDuty\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0cPagerDuty\u4f1a\u901a\u8fc7\u7535\u8bdd\u548c\u77ed\u4fe1\u5411\u6211\u53d1\u9001\u63d0\u9192\u3002\n\u6211\u8fd8\u4f7f\u7528\u6eda\u52a8\u6761\u5de5\u5177\u6765\u5173\u6ce8Django\u4ee3\u7801\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u5b83\u4f1a\u6355\u6349\u5230\u610f\u5916\u7684\u5f02\u5e38\uff0c\u5e76\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6&amp\uff1bSlake\u901a\u77e5\u6211\u3002\n\u6211\u7ecf\u5e38\u4f7f\u7528Slake\u3002\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u4eba\u7684\u516c\u53f8\uff0c\u6240\u4ee5\u6211\u4e0d\u4f7f\u7528SLACK\u4e0e\u4eba\u4ea4\u6d41\u3002\u6211\u4f7f\u7528Slake\u76d1\u89c6\u6709\u8da3\u7684\u5e94\u7528\u7a0b\u5e8f\u7ea7\u4e8b\u4ef6\u3002\u9664\u4e86\u5c06Datadog\u548cRollbar\u4e0eSlake\u96c6\u6210\u4e4b\u5916\uff0c\u6211\u8fd8\u5728Listen Notes\u540e\u7aef\u4ee3\u7801\u4e2d\u4f7f\u7528Slack Income WebHooks\uff0c\u6bcf\u5f53\u7528\u6237\u6ce8\u518c\u6216\u6267\u884c\u4e00\u4e9b\u6709\u8da3\u7684\u64cd\u4f5c(\u4f8b\u5982\uff0c\u6dfb\u52a0\u6216\u5220\u9664\u5185\u5bb9)\u65f6\u90fd\u4f1a\u901a\u77e5\u6211\u3002\u8fd9\u5728\u79d1\u6280\u516c\u53f8\u662f\u975e\u5e38\u666e\u904d\u7684\u505a\u6cd5\u3002\u5f53\u4f60\u9605\u8bfb\u4e00\u4e9b\u5173\u4e8e\u4e9a\u9a6c\u900a\u6216\u8d1d\u5b9d\u65e9\u671f\u5386\u53f2\u7684\u4e66\u7c4d\u65f6\uff0c\u4f60\u4f1a\u77e5\u9053\u8fd9\u4e24\u5bb6\u516c\u53f8\u90fd\u6709\u7c7b\u4f3c\u7684\u901a\u77e5\u673a\u5236\uff1a\u6bcf\u5f53\u7528\u6237\u6ce8\u518c\u65f6\uff0c\u529e\u516c\u5ba4\u91cc\u7684\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u542c\u5230\u201c\u53ee\u5f53\u201d\u7684\u58f0\u97f3\u3002\n\u81ea2017\u5e74\u521d\u63a8\u51fa\u4ee5\u6765\uff0cListen Notes\u9664\u4e86\u8fd9\u4e00\u6b21\u4e4b\u5916\uff0c\u6ca1\u6709\u4efb\u4f55\u5927\u7684\u505c\u673a(&gt\uff1b5\u5206\u949f)\u3002\u5728\u8fd9\u4e9b\u4e1a\u52a1\u4e0a\uff0c\u6211\u603b\u662f\u975e\u5e38\u7ec6\u5fc3\u548c\u52a1\u5b9e\u3002\u7f51\u7edc\u670d\u52a1\u5668\u7684\u914d\u7f6e\u4e25\u91cd\u8fc7\u5269\uff0c\u4ee5\u9632\u56e0\u65b0\u95fb\u4e8b\u4ef6\u6216\u5176\u4ed6\u539f\u56e0\u800c\u51fa\u73b0\u5de8\u5927\u7684\u5cf0\u503c\u3002\n\u6211\u5728\u65e7\u91d1\u5c71\u7684\u4e00\u4e2a\u540d\u4e3aWeWork\u7684\u534f\u540c\u5de5\u4f5c\u7a7a\u95f4\u5de5\u4f5c\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u60f3\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5e72\u8106\u5728\u5bb6\u5de5\u4f5c\uff0c\u6216\u8005\u968f\u4fbf\u53bb\u51e0\u5bb6\u5496\u5561\u5e97\u3002\u55ef\uff0c\u6211\u5f88\u770b\u91cd\u751f\u4ea7\u529b\uff0c\u6211\u613f\u610f\u5728\u751f\u4ea7\u529b\u4e0a\u6295\u8d44\u3002\u6211\u4e0d\u76f8\u4fe1\u5806\u79ef\u5982\u5c71\u7684\u65f6\u95f4\u6709\u52a9\u4e8e\u8f6f\u4ef6\u5f00\u53d1(\u6216\u4efb\u4f55\u7c7b\u578b\u7684\u77e5\u8bc6/\u521b\u9020\u6027\u5de5\u4f5c)\u3002\u6211\u4e00\u5929\u5de5\u4f5c\u8d85\u8fc78\u5c0f\u65f6\u662f\u5f88\u7f55\u89c1\u7684(\u5bf9\u4e0d\u8d77\uff0c\u6709996\u4eba)\u3002\u6211\u60f3\u8ba9\u6bcf\u4e00\u5206\u949f\u90fd\u6709\u4ef7\u503c\u3002\u56e0\u6b64\uff0c\u6211\u9700\u8981\u7684\u662f\u4e00\u95f4\u6f02\u4eae\u800c\u76f8\u5bf9\u6602\u8d35\u7684\u79c1\u4eba\u529e\u516c\u5ba4\u3002(&amp\uff1b)\u6211\u4e0d\u662f\u4e3a\u4e86\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u548c\u7701\u94b1\u800c\u4f18\u5316\uff0c\u800c\u662f\u4e3a\u4e86\u82b1\u66f4\u5c11\u7684\u65f6\u95f4&amp\uff1b\u8d5a\u94b1\u800c\u4f18\u5316\uff1a)\u3002\n\u6211\u7528\u7684\u662fMacBook Pro\u3002\u6211\u5728\u6d41\u6d6a\u8005+VirtualBox\u5185\u90e8\u8fd0\u884c(\u51e0\u4e4e)\u76f8\u540c\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4f7f\u7528\u4e0e\u4e0a\u8ff0\u76f8\u540c\u7684\u4e00\u7ec4Ansible YAML\u6587\u4ef6\u5728Vagant\u5185\u63d0\u4f9b\u5f00\u53d1\u73af\u5883\u3002\n\u6211\u8d5e\u540c\u8fd9\u79cd\u94c1\u677f\u4e00\u5757\u7684\u56de\u8d2d\u7406\u5ff5\u3002\u6240\u4ee5\u53ea\u6709\u4e00\u4e2aListennote repo\uff0c\u5305\u542bDevOps\u811a\u672c\u3001\u524d\u7aef\u548c\u540e\u7aef\u4ee3\u7801\u3002\u6b64Listennote\u56de\u8d2d\u4f5c\u4e3aGitHub\u79c1\u6709\u56de\u8d2d\u6258\u7ba1\u3002\u6211\u8d1f\u8d23\u4e3b\u5206\u652f\u673a\u6784\u7684\u6240\u6709\u5f00\u53d1\u5de5\u4f5c\u3002\u6211\u5f88\u5c11\u4f7f\u7528\u529f\u80fd\u5206\u652f\u3002\n\u6211\u4f7f\u7528PyCharm\u7f16\u5199\u4ee3\u7801\u5e76\u8fd0\u884c\u5f00\u53d1\u670d\u52a1\u5668(Django runserver&amp\uff1bwebpack\u5f00\u53d1\u670d\u52a1\u5668)\u3002\u662f\u7684\uff0c\u6211\u77e5\u9053\uff0c\u8fd9\u5f88\u65e0\u804a\u3002\u6bd5\u7adf\uff0c\u5b83\u4e0d\u662fVisual Studio\u4ee3\u7801\u6216Atom\u6216\u4efb\u4f55\u5f88\u9177\u7684IDE\u3002\u4f46\u662fPyCharm\u5bf9\u6211\u6765\u8bf4\u5f88\u597d\u3002\u6211\u662f\u4e2a\u8001\u6d3e\u3002\n\u6211\u7528\u5f88\u591a\u6709\u7528\u7684\u5de5\u5177\u548c\u670d\u52a1\u5c06Listen Notes\u6253\u9020\u6210\u4e00\u79cd\u4ea7\u54c1\u548c\u4e00\u5bb6\u516c\u53f8\uff1a\n\u529e\u4e8b\u5458\u9700\u8981\u4e3a\u7b79\u6b3e(SAFE)\u548c\u96c7\u7528\u4e0d\u662f\u6765\u81eaUpwork\u7684\u627f\u5305\u5546\u751f\u6210\u6cd5\u5f8b\u6587\u4ef6\u3002\nBREX\u8868\u793a\uff0c\u5bf9\u4e8e\u5145\u503c\u5361\u200a-\u200a\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f975,000\u7f8e\u5143\u7684\u589e\u91cfAWS\u79ef\u5206\uff0c\u8be5\u79ef\u5206\u53ef\u4ee5\u5728WeWork\u6216\u6761\u7eb9\u5730\u56fe\u96c6\u7684AWS\u79ef\u5206\u4e4b\u4e0a\u7533\u8bf7\u3002\n\u90a6\u6c83\u4f0a\u5546\u52a1\u8fd0\u901a\u5361\u200a-\u200a\u60a8\u53ef\u4ee5\u4e3a\u8c6a\u534e\u9152\u5e97\u548c\u822a\u73ed\u8d5a\u53d6\u4e07\u8c6a\u90a6\u6c83\u4f0a\u79ef\u5206\u3002\u8fd9\u662f\u65c5\u6e38\u7684\u6700\u4f73\u4fe1\u7528\u5361\u79ef\u5206\uff1a)\n\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u5f00\u529e\u516c\u53f8\u7684\u7f8e\u597d\u65f6\u4ee3\u3002\u6709\u8fd9\u4e48\u591a\u73b0\u6210\u7684\u5de5\u5177\u548c\u670d\u52a1\uff0c\u53ef\u4ee5\u8282\u7701\u6211\u4eec\u7684\u65f6\u95f4\u548c\u91d1\u94b1\uff0c\u63d0\u9ad8\u6211\u4eec\u7684\u751f\u4ea7\u529b\u3002\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u56e2\u961f(\u6216\u8005\u53ea\u6709\u4e00\u4e2a\u4eba)\uff0c\u4f7f\u7528\u7b80\u5355\u4e4f\u5473\u7684\u6280\u672f\uff0c\u5efa\u7acb\u4e00\u4e9b\u5bf9\u4e16\u754c\u6709\u7528\u7684\u4e1c\u897f\uff0c\u8fd9\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u6709\u53ef\u80fd\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u516c\u53f8\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\u3002\u4f60\u4e0d\u9700\u8981\u96c7\u4f63\u5927\u91cf\u7684\u5168\u804c\u5458\u5de5\u3002\u60a8\u53ef\u4ee5\u96c7\u4f63\u670d\u52a1(SaaS)\u548c\u6309\u9700\u627f\u5305\u5546\u6765\u5b8c\u6210\u4efb\u52a1\u3002\n\u5927\u591a\u6570\u65f6\u5019\uff0c\u5efa\u9020\u548c\u8fd0\u8f93\u4e1c\u897f\u7684\u6700\u5927\u969c\u788d\u662f\u60f3\u5f97\u592a\u591a\u3002\u5982\u679c\u8fd9\u4e2a\uff0c\u5982\u679c\u90a3\u4e2a\u3002\u5b69\u5b50\uff0c\u4f60\u4e00\u70b9\u4e5f\u4e0d\u91cd\u8981\u3002\u6bcf\u4e2a\u4eba\u90fd\u5fd9\u4e8e\u81ea\u5df1\u7684\u751f\u6d3b\u3002\u6ca1\u6709\u4eba\u5173\u5fc3\u4f60\u548c\u4f60\u5efa\u9020\u7684\u4e1c\u897f\uff0c\u76f4\u5230\u4f60\u8bc1\u660e\u4f60\u503c\u5f97\u522b\u4eba\u5173\u6ce8\u3002\u5373\u4f7f\u4f60\u641e\u7838\u4e86\u6700\u521d\u7684\u4ea7\u54c1\u53d1\u5e03\uff0c\u4e5f\u5f88\u5c11\u6709\u4eba\u4f1a\u6ce8\u610f\u5230\uff0c\u4ed6\u4eec\u60f3\u5927\uff0c\u4ece\u5c0f\u505a\u8d77\uff0c\u884c\u52a8\u8fc5\u901f\u3002\u53ea\u8981\u4f60\u771f\u7684\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u4f7f\u7528\u65e0\u804a\u7684\u6280\u672f\uff0c\u5f00\u59cb\u4e00\u4e9b\u7b80\u5355(\u751a\u81f3\u4e11\u964b)\u7684\u4e8b\u60c5\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\u3002\n\u73b0\u5728\u6709\u8fd9\u4e48\u591a\u72c2\u70ed\u7684\u8d27\u8fd0\u72c2\u70ed\u5206\u5b50\u3002\u5ffd\u7565\u566a\u97f3\u3002\u4fdd\u6301\u51b7\u9759\uff0c\u7ee7\u7eed\u524d\u8fdb\u3002", "note_en": "[Updated @ Dec, 2019] I found that this old blog post got shared &amp; discussed a lot recently on Hacker News and Reddit. I\u2019d like to clarify a few things:\n This post is not very up-to-date now. The tech stack keeps evolving\u2026 and is becoming a bit complex over the full-time work in the past 2 years. Initially, Listen Notes was running on 3 DigitalOcean droplets (~$30/month) in Jan 2017. \u201cBoring\u201d doesn\u2019t mean \u201csimple\u201d or \u201cusing very old &amp; very enterprise-y tech stack\u201d. \u201cBoring\u201d here means I just use the tech stack that I\u2019m familiar with so I can quickly launch the project &amp; focus more on the business end.\n I only spend 10%~20% of my time (likely close to 10%) on engineering nowadays\u200a\u2014\u200a80% of engineering time is used to iterate on existing features/infra/internal tools, while 20% is to experiment on new things. Most of my time is spent on talking to other human beings, replying emails (30%~40% of my time), and thinking (!!!), which is not considered as \u201creal work\u201d by engineers\u00a0:) I usually stay in office for 4~8 hours/day, but I work from iPhone (e.g., reply emails, ChatOps from Slack\u2026) and think about Listen Notes a lot when I\u2019m not in office.\n I have to apologize to those who feel offended by this post, because I didn\u2019t praise your favorite technology, or I didn\u2019t write things that you agree to, or I didn\u2019t answer all of your questions in this post\u200a\u2014\u200ato be fair, I can\u2019t predict what questions you may have when writing this post! It\u2019s impossible to make everyone happy\u00a0:(\n This blog post is to show you\u00a0  one way \u00a0of doing engineering for a very specific type of online business. It\u2019s not the only way. It\u2019s certainly not the best way. I hope this blog post provides one useful data point to the tech world. You can find more data points from places like Hacker News or Indie Hackers\u00a0:)\n  Listen Notes\u00a0is a podcast search engine and database. The technology behind Listen Notes is actually very very boring. No AI, no deep learning, no blockchain.\u00a0 \u201cAny man who must say I am using AI is not using True AI\u201d\u00a0:)\n After reading this post, you should be able to replicate what I build for Listen Notes or easily do something similar. You don\u2019t need to hire a lot of engineers. Remember,\u00a0 when Instagram raised $57.5M and got acquired by Facebook for $1B, they had only\u00a0 13 employees\u200a\u2014\u200anot all of them were engineers. The Instagram story happened in early 2012. It\u2019s 2019 now, it\u2019s more possible than ever to build something meaningful with a tiny engineering team\u200a\u2014\u200aeven one person.\n      A website\u00a0 ListenNotes.com\u00a0for podcast listeners. It provides a search engine, a podcast database,\u00a0 Listen Later\u00a0playlists,\u00a0 Listen Clips\u00a0that allows you to cut a segment of any podcast episode, and\u00a0 Listen Alerts\u00a0that notifies you when a specified keyword is mentioned in new podcasts on the Internet.\n Podcast Search &amp; Directory APIs\u00a0for developers. We need to track the API usage, get money from paid users, do customer support, and more.\n I run everything on AWS. There are 20 production servers (as of May 5, 2019):\n    production-api\u00a0serves api traffics. We run two versions of API (as of May 4, 2019), thus v1api (the legacy version) and v2api (the new version).\n   production-worker\u00a0runs offline processing tasks to keep the podcast database always up-to-date and to provide some magical things (e.g., search result ranking, episode/podcast recommendations\u2026).\n production-lb\u00a0is the load balancer. I also run Redis &amp; RabbitMQ on this server, for convenience. I know this is not ideal. But I\u2019m not a perfect person\u00a0:)\n production-pangu\u00a0is the production-like server that I sometimes run one-off scripts and test changes. What\u2019s the meaning of \u201c pangu\u201d?\n Most of these servers can be horizontally scaled. That\u2019s why I name them\u00a0 production-something1,\u00a0 production-something2\u2026 It could be very easy to add\u00a0 production-something3\u00a0and\u00a0 production-something4\u00a0to the fleet.\n   The entire backend is written in Django / Python3. The operating system of choice is Ubuntu.\n I use\u00a0 uWSGI\u00a0to serve web traffics. I put\u00a0 NGINX\u00a0in front of uWSGI processes, which also serves as load balancer.\n The main data store is\u00a0 PostgreSQL, which I\u2019ve got a lot of development &amp; operational experience over many years\u200a\u2014\u200abattle tested technology is good, so I can sleep well at night.\u00a0 Redis\u00a0is used for various purposes (e.g., caching, stats,\u2026). It\u2019s not hard to guess that\u00a0 Elasticsearch\u00a0is used somewhere. Yes, I use Elasticsearch to index podcasts &amp; episodes and to serve search queries, just like\u00a0 most\u00a0 boring\u00a0 companies.\n Celery\u00a0is used for offline processing. And\u00a0 Celery Beat\u00a0is for scheduling tasks, which is like Cron jobs but a bit nicer. If in the future Listen Notes gains traction and Celery &amp; Beat cause some scaling issues, I probably will switch to the two projects I did for my previous employer:\u00a0 ndkale\u00a0and\u00a0 ndscheduler.\n  Wait, how about Docker / Kubernetes / serverless? Nope. As you gain experience, you know when not to over-engineer. I actually did some early Docker work for my previous employer back in 2014, which was good for a mid-sized billion-dollar startup but may be overkill for a one-person tiny startup.\n   The web frontend is primarily built with\u00a0 React\u00a0+\u00a0 Redux\u00a0+\u00a0 Webpack\u00a0+\u00a0 ES. This is pretty standard nowadays. When deploying to production, JS bundles would be uploaded to\u00a0 Amazon S3\u00a0and served via\u00a0 CloudFront.\n On\u00a0 ListenNotes.com, most web pages are half server-side rendered ( Django template) and half client-side rendered ( React). The server-side rendered part provides a boilerplate of a web page, and the client-side rendered part is basically an interactive web app. But a few web pages are rendered entirely via server side, because of my laziness to make things perfect &amp; some potential SEO goodies.\n  I use a heavily modified version of\u00a0 react-media-player\u00a0to build the audio player on ListenNotes.com, which is used in several places, including\u00a0 Listen Notes Website,\u00a0 Twitter embedded player, and embedded player on 3rd party websites:\n    We provide a simple and reliable\u00a0 podcast API\u00a0to developers. Building the API is similar to building\u00a0 the website. I use the same Django/Python stack for the backend, and ReactJs for the frontend (e.g., API dashboard, documentation\u2026).\n     For the API, we need to track how many requests a user uses in current billing cycle, and charge $$$ at the end of a billing cycle. It\u2019s not hard to imagine that Redis is heavily used here\u00a0:)\n    I use\u00a0 Ansible\u00a0for machine provisioning. Basically, I wrote a bunch of yaml files to specify what type of servers need to have what configuration files &amp; what software. I can spin up a server with all correct configuration files &amp; all software installed with one button push. This is the directory structure of those Ansible yaml files:\n   I could\u2019ve done a better job in naming things. But again, it\u2019s good enough for\u00a0now.\n I also use Ansible to deploy code to production. Basically, I have a wrapper script\u00a0 deploy.sh\u00a0that is run on macOS:\n   Version of the listennotes repo: HEAD means \u201cjust deploy the latest version\u201d. If a SHA of a git commit is specified, then it\u2019ll deploy a specific version of code\u200a\u2014\u200athis is particularly useful when I need to rollback from a bad deployment.\n What kind of servers: web, worker, api, or all. I don\u2019t have to deploy to all servers all at once. Sometimes I make changes on Javascript code, then I just need to deploy to web, without touching api or worker.\n The deployment process is mostly orchestrated by Ansible yaml files, and of course, it\u2019s dead simple:\n On my Macbook Pro, if it\u2019s to deploy to web servers, then build Javascript bundles and upload to S3.\n On the target servers, git clone the listennotes repo to a timestamp-named folder, check out the specific version, and pip install new Python dependencies if any.\n On the target servers, switch symlink to the above timestamp-named folder and restart servers via supervisorctl.\n As you can see, I don\u2019t use those fancy CI tools. Just dead simple things that actually work.\n  I use\u00a0 Datadog\u00a0for monitoring &amp; alerting. I\u2019ve got some high level metrics in a simple dashboard. Whatever I do here is to boost my confidence when I am messing around the production servers.\n   I connect\u00a0 Datadog\u00a0to PagerDuty. If something goes wrong,\u00a0 PagerDuty\u00a0will send me alerts via phone call &amp; SMS.\n I also use\u00a0 Rollbar\u00a0to keep an eye on the health of Django code, which will catch unexpected exceptions and notify me via email &amp; Slack as well.\n I use\u00a0 Slack\u00a0a lot. Yes, this is a one-person company, so I don\u2019t use Slack for communicating with human beings. I use Slack to monitor interesting application-level events. In addition to integrating Datadog and Rollbar with Slack, I also use\u00a0 Slack incoming webhooks\u00a0in Listen Notes backend code to notify me whenever a user signs up or performs some interesting actions (e.g., adding or deleting things). This is a very common practice in tech companies. When you read some books about Amazon or PayPal\u2019s early history, you\u2019ll know that both companies had similar notification mechanism: whenever a user signed up, there would be a \u201cding\u201d sound to notify everyone in the office.\n Since launched in early 2017, Listen Notes hasn\u2019t got any big outage (&gt; 5 minutes) except for\u00a0 this one. I\u2019m always very careful &amp; practical in these operational stuffs. The web servers are significantly over-provisioned, just in case there\u2019s some huge spike due to press events or whatever.\n  I work in a\u00a0 WeWork\u00a0coworking space in San Francisco. Some people may wonder why not just work from home or from some random coffee shops. Well, I value productivity a lot and I\u2019m willing to invest money in productivity. I don\u2019t believe piling time helps software development (or any sort of knowledge/creativity work). It\u2019s rare that I work over 8 hours in a day (Sorry,\u00a0 996 people). I want to make every minute count. Thus, a nice &amp; relatively expensive private office is what I need\u00a0:) Instead of optimizing for spending more time &amp; saving money, I optimize for spending less time &amp; making money\u00a0:)\n   I\u2019m using a MacBook Pro. I run the (almost) identical infrastructure inside\u00a0 Vagrant\u00a0+\u00a0 VirtualBox. I use the same set of Ansible yaml files as described above to provision the development environment inside Vagrant.\n I subscribe to the\u00a0 monolithic repo\u00a0philosophy. So there\u2019s one and only one listennotes repo, containing DevOps scripts, frontend &amp; backend code. This listennotes repo is hosted as a GitHub private repo. I do all development work on the master branch. I rarely use feature branches.\n I write code and run the dev servers (Django runserver &amp; webpack dev server) by using\u00a0 PyCharm. Yea, I know, it\u2019s boring. After all, it\u2019s not Visual Studio Code or Atom or whatever cool IDEs. But PyCharm works just fine for me. I\u2019m old school.\n     There are a bunch of useful tools &amp; services that I use to build Listen Notes as a product and a company:\n Clerky\u00a0to generate legal documents for fund raising (SAFE) and hiring contractors who are not from Upwork.\n   Brex\u00a0for charge card\u200a\u2014\u200ayou can get incremental $5000 AWS credits, which can be applied on top of the AWS credits from WeWork or Stripe Atlas.\n Bonvoy Business Amex Card\u200a\u2014\u200aYou can earn Marriott Bonvoy points for luxury hotels and flights. It\u2019s the best credit card points for traveling\u00a0:)\n   As you can see, we are living in a wonderful age to start a company. There are so many off-the-shelf tools and services that save us time &amp; money and increase our productivity. It\u2019s more possible than ever to build something useful to the world with a tiny team (or just one person), using simple &amp; boring technology.\n As time goes, companies become smaller and smaller. You don\u2019t need to hire tons of full-time employees. You can hire services (SaaS) and on-demand contractors to get things done.\n Most of time, the biggest obstacle of building &amp; shipping things is over thinking. What if this, what if that. Boy, you are not important at all. Everyone is busy in their own life. No one cares about you and the things you build, until you prove that you are worth other people\u2019s attention. Even you screw up the initial product launch, few people will notice.\u00a0 Think big, start small, act fast. It\u2019s absolutely okay to use the boring technology and start something simple (even ugly), as long as you actually solve problems.\n  There are so many\u00a0 cargo-cult-type people now. Ignore the noises. Keep calm and carry on.", "posttime": "2020-05-16 06:01:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e92\u8054\u7f51,technology", "title": "\u5355\u4eba\u4e92\u8054\u7f51\u516c\u53f8\u80cc\u540e\u7684\u67af\u71e5\u6280\u672f", "title_en": "The boring technology behind a one-person Internet company", "transed": 1, "url": "https://www.listennotes.com/blog/the-boring-technology-behind-a-one-person-23/", "via": "", "real_tags": ["\u4e92\u8054\u7f51"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002314, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Project Loom\u65e8\u5728\u6781\u5927\u5730\u51cf\u5c11\u7f16\u5199\u3001\u7ef4\u62a4\u548c\u89c2\u5bdf\u5145\u5206\u5229\u7528\u53ef\u7528\u786c\u4ef6\u7684\u9ad8\u541e\u5410\u91cf\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u4f5c\u3002\n\u7ec7\u5e03\u673a\u9879\u76ee\u4e8e2017\u5e74\u5e95\u5f00\u5de5\u3002\u8fd9\u4efd\u6587\u4ef6\u89e3\u91ca\u4e86\u9879\u76ee\u7684\u52a8\u673a\u548c\u91c7\u53d6\u7684\u65b9\u6cd5\uff0c\u5e76\u603b\u7ed3\u4e86\u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u5de5\u4f5c\u3002\u50cf\u6240\u6709OpenJDK\u9879\u76ee\u4e00\u6837\uff0c\u5b83\u5c06\u5206\u9636\u6bb5\u4ea4\u4ed8\uff0c\u4e0d\u540c\u7684\u7ec4\u4ef6\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u5230\u8fbeGA(\u901a\u7528\u53ef\u7528\u6027)\uff0c\u5f88\u53ef\u80fd\u9996\u5148\u5229\u7528\u9884\u89c8\u673a\u5236\u3002\n\u60a8\u53ef\u4ee5\u5728\u5b83\u7684wiki\u4e0a\u627e\u5230\u66f4\u591a\u5173\u4e8eProject Loom\u7684\u6750\u6599\uff0c\u5e76\u5c1d\u8bd5\u4e0b\u9762\u5728Loom EA\u4e8c\u8fdb\u5236\u6587\u4ef6(\u65e9\u671f\u8bbf\u95ee)\u4e2d\u63cf\u8ff0\u7684\u5927\u90e8\u5206\u5185\u5bb9\u3002\n\u865a\u62df\u7ebf\u7a0b\u662f\u8fd0\u884c\u65f6\u8c03\u8bd5\u5668\u548c\u63a2\u67e5\u5668\u4e2d\u7684\u7ebf\u7a0b\u5f15\u5165\u4ee3\u7801\u3002\n\u865a\u62df\u7ebf\u7a0b\u4e0d\u662fOS\u7ebf\u7a0b\u7684\u5305\u88c5\u5668\uff0c\u800c\u662fJava\u5b9e\u4f53\u3002\n\u521b\u5efa\u865a\u62df\u7ebf\u7a0b\u7684\u6210\u672c\u5f88\u4f4e-\u62e5\u6709\u6570\u767e\u4e07\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u8981\u5c06\u5b83\u4eec\u6c47\u96c6\u5728\u4e00\u8d77\uff01\nJava\u88ab\u7528\u6765\u7f16\u5199\u4e00\u4e9b\u4e16\u754c\u4e0a\u6700\u5927\u3001\u4f38\u7f29\u6027\u6700\u5f3a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u53ef\u4f38\u7f29\u6027\u662f\u7a0b\u5e8f\u4f18\u96c5\u5730\u5904\u7406\u4e0d\u65ad\u589e\u957f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u80fd\u529b\u3002Java\u7a0b\u5e8f\u89c4\u6a21\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5e76\u884c\u6027\uff1a\u6211\u4eec\u5e0c\u671b\u5904\u7406\u53ef\u80fd\u4f1a\u53d8\u5f97\u76f8\u5f53\u5927\u7684\u6570\u636e\u5757\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5176\u8f6c\u6362\u63cf\u8ff0\u4e3a\u6d41\u4e0a\u7684\u03bb\u7ba1\u9053\uff0c\u901a\u8fc7\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5e76\u884c\uff0c\u6211\u4eec\u8981\u6c42\u591a\u4e2a\u5904\u7406\u5185\u6838\u5c06\u5b83\u4eec\u7684\u7259\u9f7f\u653e\u5728\u4e00\u4e2a\u4efb\u52a1\u4e2d\uff0c\u5c31\u50cf\u4e00\u7fa4\u98df\u4eba\u9c7c\u541e\u566c\u4e00\u6761\u5927\u9c7c\u4e00\u6837\uff1b\u4e00\u4e2a\u98df\u4eba\u9c7c\u5c31\u53ef\u4ee5\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c-\u8fd9\u6837\u505a\u4f1a\u66f4\u5feb\u3002\u8fd9\u79cd\u673a\u5236\u662f\u5728Java8\u4e2d\u63d0\u4f9b\u7684\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u79cd\u4e0d\u540c\u7684\u3001\u66f4\u96be\u7684\u3001\u66f4\u6d41\u884c\u7684\u4f38\u7f29\u65b9\u5f0f\uff0c\u5373\u540c\u65f6\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u8981\u6c42\u7684\u76f8\u5bf9\u72ec\u7acb\u7684\u4efb\u52a1\u3002\u4ed6\u4eec\u5fc5\u987b\u540c\u65f6\u63d0\u4f9b\u670d\u52a1\uff0c\u8fd9\u4e0d\u662f\u4e00\u79cd\u5b9e\u65bd\u9009\u62e9\uff0c\u800c\u662f\u4e00\u79cd\u8981\u6c42\u3002\u6211\u4eec\u79f0\u5176\u4e3a\u5e76\u53d1\uff0c\u5b83\u662f\u5f53\u4ee3\u8f6f\u4ef6\u7684\u9762\u5305\u548c\u9ec4\u6cb9\uff0c\u8fd9\u5c31\u662f\u7ec7\u5e03\u673a\u7684\u610f\u4e49\u6240\u5728\u3002\n\u8003\u8651\u4e00\u4e0bWeb\u670d\u52a1\u5668\u3002\u5b83\u670d\u52a1\u7684\u6bcf\u4e2a\u8bf7\u6c42\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u90fd\u662f\u72ec\u7acb\u4e8e\u5176\u4ed6\u8bf7\u6c42\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\uff0c\u6211\u4eec\u90fd\u4f1a\u8fdb\u884c\u4e00\u4e9b\u89e3\u6790\u3001\u67e5\u8be2\u6570\u636e\u5e93\u6216\u5411\u670d\u52a1\u53d1\u51fa\u8bf7\u6c42\uff0c\u7136\u540e\u7b49\u5f85\u7ed3\u679c\u3001\u8fdb\u884c\u4e00\u4e9b\u8fdb\u4e00\u6b65\u7684\u5904\u7406\u5e76\u53d1\u9001\u54cd\u5e94\u3002\u8be5\u8fdb\u7a0b\u4e0d\u4ec5\u5728\u5b8c\u6210\u67d0\u4e9b\u4f5c\u4e1a\u65f6\u4e0d\u4e0e\u5176\u4ed6\u5e76\u53d1HTTP\u8bf7\u6c42\u534f\u4f5c\uff0c\u800c\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5b83\u6839\u672c\u4e0d\u5173\u5fc3\u5176\u4ed6\u8bf7\u6c42\u6b63\u5728\u505a\u4ec0\u4e48\uff0c\u800c\u4e14\u5b83\u4ecd\u7136\u5728\u5904\u7406\u548cI/O\u8d44\u6e90\u65b9\u9762\u4e0e\u5b83\u4eec\u7ade\u4e89\u3002\u4e0d\u662f\u98df\u4eba\u9c7c\uff0c\u800c\u662f\u51fa\u79df\u8f66\uff0c\u6bcf\u8f86\u90fd\u6709\u81ea\u5df1\u7684\u8def\u7ebf\u548c\u76ee\u7684\u5730\uff0c\u5b83\u65c5\u884c\u548c\u505c\u7559\u3002\u5728\u540c\u4e00\u9053\u8def\u7cfb\u7edf\u4e0a\u884c\u9a76\u7684\u5176\u4ed6\u51fa\u79df\u8f66\u7684\u5b58\u5728\u5e76\u4e0d\u4f1a\u8ba9\u4efb\u4f55\u4e00\u8f86\u51fa\u79df\u8f66\u66f4\u65e9\u5730\u5230\u8fbe\u76ee\u7684\u5730-\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u53ef\u80fd\u4f1a\u653e\u6162\u901f\u5ea6-\u4f46\u5982\u679c\u5728\u4efb\u4f55\u65f6\u5019\u57ce\u5e02\u9053\u8def\u4e0a\u53ea\u6709\u4e00\u8f86\u51fa\u79df\u8f66\uff0c\u90a3\u5c31\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7f13\u6162\u7684\u4ea4\u901a\u7cfb\u7edf\uff0c\u5b83\u5c06\u662f\u4e00\u4e2a\u529f\u80fd\u5931\u8c03\u7684\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u5835\u585e\u5e02\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\u5171\u4eab\u9053\u8def\u7684\u51fa\u79df\u8f66\u8d8a\u591a\uff0c\u7cfb\u7edf\u5c31\u8d8a\u597d\u3002\u4ece\u65e9\u671f\u5f00\u59cb\uff0cJava\u5c31\u652f\u6301\u8fd9\u7c7b\u5de5\u4f5c\u3002servlet\u5141\u8bb8\u6211\u4eec\u7f16\u5199\u5728\u5c4f\u5e55\u4e0a\u770b\u8d77\u6765\u5f88\u76f4\u89c2\u7684\u4ee3\u7801\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5e8f\u5217-\u89e3\u6790\u3001\u6570\u636e\u5e93\u67e5\u8be2\u3001\u5904\u7406\u3001\u54cd\u5e94-\u4e0d\u4f1a\u62c5\u5fc3\u670d\u52a1\u5668\u73b0\u5728\u53ea\u5904\u7406\u8fd9\u4e00\u4e2a\u8bf7\u6c42\u8fd8\u662f\u5904\u7406\u4e00\u5343\u4e2a\u5176\u4ed6\u8bf7\u6c42\u3002\n\u6bcf\u4e2a\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e9b\u4e0e\u5176\u57df\u81ea\u7136\u76f8\u5173\u7684\u5e76\u53d1\u5355\u5143\uff0c\u6709\u4e9b\u5de5\u4f5c\u662f\u72ec\u7acb\u4e8e\u5176\u4ed6\u5de5\u4f5c\u540c\u65f6\u5b8c\u6210\u7684\u3002\u5bf9\u4e8eWeb\u670d\u52a1\u5668\uff0c\u8fd9\u53ef\u80fd\u662fHTTP\u8bf7\u6c42\u6216\u7528\u6237\u4f1a\u8bdd\uff1b\u5bf9\u4e8e\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u8fd9\u53ef\u80fd\u662f\u4e8b\u52a1\u3002\u5e76\u53d1\u6027\u5728Java\u4e4b\u524d\u5c31\u6709\u4e86\u60a0\u4e45\u800c\u4e30\u5bcc\u7684\u5386\u53f2\uff0c\u4f46\u5c31Java\u7684\u8bbe\u8ba1\u800c\u8a00\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7b80\u5355\uff1a\u7528\u987a\u5e8f\u8fd0\u884c\u7684\u5e76\u53d1\u8f6f\u4ef6\u5355\u5143\u8868\u793a\u8fd9\u4e2a\u5e76\u53d1\u7684\u57df\u5355\u5143\uff0c\u5c31\u50cf\u51fa\u79df\u8f66\u5728\u5176\u7b80\u5355\u7684\u8def\u7ebf\u4e0a\u884c\u9a76\uff0c\u800c\u4e0d\u5173\u5fc3\u4efb\u4f55\u5176\u4ed6\u7684\u5355\u5143\u3002\u8fd9\u4e2a\u8f6f\u4ef6\u6784\u9020\u5c31\u662f\u7ebf\u7a0b\u3002\u5b83\u865a\u62df\u5316\u4ece\u5904\u7406\u5668\u5230I/O\u8bbe\u5907\u7684\u8d44\u6e90\uff0c\u5e76\u5b89\u6392\u5b83\u4eec\u7684\u4f7f\u7528-\u5229\u7528\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u5728\u4e0d\u540c\u65f6\u95f4\u4f7f\u7528\u4e0d\u540c\u786c\u4ef6\u5355\u5143\u7684\u4e8b\u5b9e-\u5c06\u5176\u516c\u5f00\u4e3a\u987a\u5e8f\u8fdb\u7a0b\u3002\u7ebf\u7a0b\u7684\u5b9a\u4e49\u7279\u6027\u662f\uff0c\u5b83\u4eec\u4e0d\u4ec5\u5bf9\u5904\u7406\u64cd\u4f5c\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e14\u8fd8\u5bf9\u963b\u585e\u8fdb\u884c\u6392\u5e8f-\u7b49\u5f85\u67d0\u4e2a\u5916\u90e8\u4e8b\u4ef6\u53d1\u751f\uff0c\u65e0\u8bba\u662fI/O\u8fd8\u662f\u67d0\u4e2a\u4e8b\u4ef6\uff0c\u6216\u8005\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u89e6\u53d1\uff0c\u53ea\u6709\u5728\u8be5\u4e8b\u4ef6\u53d1\u751f\u540e\u624d\u7ee7\u7eed\u6267\u884c\u3002\u7ebf\u7a0b\u4e4b\u95f4\u5e94\u8be5\u5982\u4f55\u6700\u597d\u5730\u901a\u4fe1\u7684\u95ee\u9898-\u5171\u4eab\u6570\u636e\u7ed3\u6784\u548c\u6d88\u606f\u4f20\u9012\u7684\u9002\u5f53\u7ec4\u5408\u5e94\u8be5\u662f\u4ec0\u4e48-\u5bf9\u4e8e\u7ebf\u7a0b\u7684\u6982\u5ff5\u6765\u8bf4\u5e76\u4e0d\u91cd\u8981\uff0c\u800c\u4e14\u65e0\u8bbaJava\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5f53\u524d\u7684\u7ec4\u5408\u662f\u4ec0\u4e48\uff0c\u90fd\u6709\u53ef\u80fd\u968f\u7740\u65b0\u529f\u80fd\u7684\u51fa\u73b0\u800c\u6539\u53d8\u3002\n\u65e0\u8bba\u60a8\u662f\u76f4\u63a5\u4f7f\u7528\u8fd8\u662f\u5728JAX-RS\u6846\u67b6\u5185\u4f7f\u7528\uff0cJava\u4e2d\u7684\u5e76\u53d1\u6027\u90fd\u610f\u5473\u7740\u7ebf\u7a0b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6574\u4e2aJava\u5e73\u53f0-\u4eceVM\u5230\u8bed\u8a00\u548c\u5e93\uff0c\u518d\u5230\u8c03\u8bd5\u5668\u548c\u5206\u6790\u5668-\u90fd\u662f\u56f4\u7ed5\u7ebf\u7a0b\u6784\u5efa\u7684\uff0c\u4f5c\u4e3a\u8fd0\u884c\u7a0b\u5e8f\u7684\u6838\u5fc3\u7ec4\u7ec7\u7ec4\u4ef6\uff1a\nI/O API\u662f\u540c\u6b65\u7684\uff0c\u5e76\u4e14\u63cf\u8ff0\u901a\u8fc7\u963b\u585e\u7ebf\u7a0b\u6765\u542f\u52a8I/O\u64cd\u4f5c\u5e76\u7b49\u5f85\u5b83\u4eec\u7684\u7ed3\u679c\u4f5c\u4e3a\u8bed\u53e5\u7684\u987a\u5e8f\u6392\u5e8f\uff1b\n\u5185\u5b58\u526f\u4f5c\u7528(\u5982\u679c\u7ec4\u7ec7\u4e3a\u65e0\u7ade\u4e89)\u6309\u7ebf\u7a0b\u7684\u64cd\u4f5c\u987a\u5e8f\u6392\u5e8f\uff0c\u5c31\u597d\u50cf\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u7ade\u4e89\u4f7f\u7528\u8be5\u5185\u5b58\u4e00\u6837\uff1b\n\u5f02\u5e38\u901a\u8fc7\u5c06\u5931\u8d25\u7684\u64cd\u4f5c\u653e\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u8c03\u7528\u5806\u6808\u7684\u4e0a\u4e0b\u6587\u4e2d\u6765\u63d0\u4f9b\u6709\u7528\u7684\u4fe1\u606f\uff1b\n\u8c03\u8bd5\u5668\u4e2d\u7684\u5355\u6b65\u6267\u884c\u9075\u5faa\u987a\u5e8f\u6267\u884c\uff0c\u65e0\u8bba\u5b83\u9700\u8981\u4e00\u4e9b\u5904\u7406\u8fd8\u662fI/O\uff0c\u56e0\u4e3a\u5355\u6b65\u6267\u884c\u4e0e\u7ebf\u7a0b\u76f8\u5173\u8054\uff1b\n\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u6587\u4ef6\u5728\u663e\u793a\u5904\u7406\u6216\u7b49\u5f85I/O\u6216\u540c\u6b65\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u65f6\uff0c\u6309\u7ebf\u7a0b\u7ec4\u7ec7\u5de5\u4f5c\u3002\n\u95ee\u9898\u5728\u4e8e\uff0c\u7ebf\u7a0b(\u5e76\u53d1\u7684\u8f6f\u4ef6\u5355\u4f4d)\u65e0\u6cd5\u4e0e\u5e94\u7528\u7a0b\u5e8f\u57df\u7684\u81ea\u7136\u5e76\u53d1\u5355\u4f4d(\u4f1a\u8bdd\u3001HTTP\u8bf7\u6c42\u6216\u5355\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c)\u7684\u89c4\u6a21\u76f8\u5339\u914d\uff0c\u4e5f\u65e0\u6cd5\u4e0e\u73b0\u4ee3\u786c\u4ef6\u53ef\u4ee5\u652f\u6301\u7684\u5e76\u53d1\u89c4\u6a21\u76f8\u5339\u914d\u3002\u4e00\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u5904\u7406\u8d85\u8fc7\u4e00\u767e\u4e07\u4e2a\u5e76\u53d1\u6253\u5f00\u5957\u63a5\u5b57\uff0c\u4f46\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u80fd\u6709\u6548\u5730\u5904\u7406\u8d85\u8fc7\u51e0\u5343\u4e2a\u6d3b\u52a8(\u975e\u7a7a\u95f2)\u7ebf\u7a0b\u3002\u968f\u7740servlet\u5bb9\u5668\u4e0a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u589e\u52a0\uff0c\u5b83\u9700\u8981\u5904\u7406\u66f4\u591a\u7684\u52a8\u6001\u8bf7\u6c42\uff0c\u5176\u6269\u5c55\u80fd\u529b\u53d7\u5230\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u652f\u6301\u7684\u7ebf\u7a0b\u6570\u91cf\u76f8\u5bf9\u8f83\u5c11\u7684\u9650\u5236\u3002Servlet\u8bfb\u8d77\u6765\u4e0d\u9519\uff0c\u4f46\u4f38\u7f29\u6027\u5f88\u5dee\u3002\n\u8fd9\u4e0d\u662f\u7ebf\u7a0b\u6982\u5ff5\u7684\u57fa\u672c\u9650\u5236\uff0c\u800c\u662f\u5b83\u4eec\u5728JDK\u4e2d\u5b9e\u73b0\u4e3a\u56f4\u7ed5\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u7684\u65e0\u5173\u7d27\u8981\u7684\u5305\u88c5\u5668\u7684\u610f\u5916\u7279\u6027\u3002OS\u7ebf\u7a0b\u5360\u7528\u7684\u7a7a\u95f4\u5f88\u5927\uff0c\u521b\u5efa\u5b83\u4eec\u9700\u8981\u5206\u914dOS\u8d44\u6e90\uff0c\u800c\u5bf9\u5b83\u4eec\u8fdb\u884c\u8c03\u5ea6-\u5373\u4e3a\u5b83\u4eec\u5206\u914d\u786c\u4ef6\u8d44\u6e90-\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u3002\u4e0e\u5176\u8bf4\u5b83\u4eec\u662f\u51fa\u79df\u8f66\uff0c\u4e0d\u5982\u8bf4\u5b83\u4eec\u662f\u706b\u8f66\u3002\n\u8fd9\u5c31\u9020\u6210\u4e86\u7ebf\u7a0b\u8981\u505a\u7684\u4e8b\u60c5(\u5c06\u8ba1\u7b97\u8d44\u6e90\u7684\u8c03\u5ea6\u62bd\u8c61\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6784\u9020)\u548c\u5b83\u4eec\u53ef\u4ee5\u6709\u6548\u505a\u7684\u4e8b\u60c5\u4e4b\u95f4\u5b58\u5728\u5f88\u5927\u7684\u4e0d\u5339\u914d\u3002\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684\u4e0d\u5339\u914d\u53ef\u80fd\u4f1a\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd\u3002\n\u5b83\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u5f71\u54cd\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u4e3a\u900f\u660e\u5171\u4eab\u7a00\u7f3a\u8ba1\u7b97\u8d44\u6e90\u800c\u53d1\u660e\u7684\u7528\u4e8e\u865a\u62df\u5316\u7a00\u7f3a\u8ba1\u7b97\u8d44\u6e90\u7684\u7ebf\u7a0b\u672c\u8eab\u5df2\u7ecf\u6210\u4e3a\u7a00\u7f3a\u8d44\u6e90\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u642d\u5efa\u590d\u6742\u7684\u811a\u624b\u67b6\u6765\u5171\u4eab\u5b83\u4eec\u3002\n\u56e0\u4e3a\u521b\u5efa\u7ebf\u7a0b\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4eec\u6c47\u96c6\u5728\u4e00\u8d77\u3002\u521b\u5efa\u65b0\u7ebf\u7a0b\u7684\u6210\u672c\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u4e3a\u4e86\u91cd\u7528\u5b83\u4eec\uff0c\u6211\u4eec\u4e50\u4e8e\u4ed8\u51fa\u6cc4\u9732\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf\u548c\u590d\u6742\u7684\u53d6\u6d88\u534f\u8bae\u7684\u4ee3\u4ef7\u3002\n\u4f46\u662f\uff0c\u4ec5\u6c60\u5316\u5c31\u63d0\u4f9b\u4e86\u4e00\u79cd\u8fc7\u4e8e\u7c97\u7c92\u5ea6\u7684\u7ebf\u7a0b\u5171\u4eab\u673a\u5236\u3002\u5373\u4f7f\u5728\u5355\u4e2a\u65f6\u95f4\u70b9\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u4e5f\u6ca1\u6709\u8db3\u591f\u7684\u7ebf\u7a0b\u6765\u8868\u793a\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5e76\u53d1\u4efb\u52a1\u3002\u5728\u4efb\u52a1\u7684\u6574\u4e2a\u6301\u7eed\u65f6\u95f4\u5185\u4ece\u6c60\u4e2d\u501f\u7528\u7ebf\u7a0b\u65f6\uff0c\u5373\u4f7f\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\u67d0\u4e9b\u5916\u90e8\u4e8b\u4ef6(\u4f8b\u5982\u6765\u81ea\u6570\u636e\u5e93\u6216\u670d\u52a1\u7684\u54cd\u5e94\uff0c\u6216\u8005\u4f1a\u963b\u585e\u7ebf\u7a0b\u7684\u4efb\u4f55\u5176\u4ed6\u6d3b\u52a8)\uff0c\u7ebf\u7a0b\u4e5f\u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002\u5f53\u4efb\u52a1\u5904\u4e8e\u975e\u6d3b\u52a8\u72b6\u6001\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5b9e\u5728\u662f\u592a\u5b9d\u8d35\u4e86\uff0c\u65e0\u6cd5\u6302\u8d77\u3002\u4e3a\u4e86\u66f4\u597d\u3001\u66f4\u9ad8\u6548\u5730\u5171\u4eab\u7ebf\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u4efb\u52a1\u5fc5\u987b\u7b49\u5f85\u67d0\u4e2a\u7ed3\u679c\u65f6\u5c06\u7ebf\u7a0b\u8fd4\u56de\u5230\u6c60\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u4efb\u52a1\u5728\u6574\u4e2a\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u518d\u7ed1\u5b9a\u5230\u5355\u4e2a\u7ebf\u7a0b\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u907f\u514d\u963b\u585e\u7ebf\u7a0b\u3002\n\u5176\u7ed3\u679c\u662f\u5f02\u6b65API\u7684\u6fc0\u589e\uff0c\u4eceJDK\u4e2d\u7684\u5f02\u6b65NIO\uff0c\u5230\u5f02\u6b65servlet\uff0c\u518d\u5230\u8bb8\u591a\u4e0d\u9057\u4f59\u529b\u4e0d\u963b\u585e\u7ebf\u7a0b\u7684\u6240\u8c13\u201c\u53cd\u5e94\u6027\u201d\u5e93\u3002\u5c06\u4efb\u52a1\u62c6\u5206\u5e76\u8ba9\u5f02\u6b65\u6784\u9020\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8d77\u4f1a\u4ea7\u751f\u4fb5\u5165\u6027\u7684\u3001\u5305\u7f57\u4e07\u8c61\u7684\u548c\u7ea6\u675f\u6027\u7684\u6846\u67b6\u3002\u5373\u4f7f\u662f\u57fa\u672c\u7684\u63a7\u5236\u6d41\uff0c\u5982\u5faa\u73af\u548ctry/catch\uff0c\u4e5f\u9700\u8981\u5728\u201c\u53cd\u5e94\u5f0f\u201dDSL\u4e2d\u91cd\u5efa\uff0c\u6709\u4e9b\u8fd0\u52a8\u7c7b\u6709\u6570\u767e\u4e2a\u65b9\u6cd5\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u56e0\u4e3a\u8bb8\u591aJava\u5e73\u53f0\u5047\u8bbe\u6267\u884c\u4e0a\u4e0b\u6587\u5305\u542b\u5728\u7ebf\u7a0b\u4e2d\uff0c\u6240\u4ee5\u4e00\u65e6\u6211\u4eec\u5c06\u4efb\u52a1\u4e0e\u7ebf\u7a0b\u5206\u79bb\uff0c\u6240\u6709\u7684\u4e0a\u4e0b\u6587\u90fd\u4f1a\u4e22\u5931\uff1a\u5f02\u5e38\u5806\u6808\u8ddf\u8e2a\u4e0d\u518d\u63d0\u4f9b\u6709\u7528\u7684\u4e0a\u4e0b\u6587\uff0c\u5f53\u6211\u4eec\u5728\u8c03\u8bd5\u5668\u4e2d\u5355\u6b65\u6267\u884c\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u5728\u8c03\u8bd5\u5668\u4ee3\u7801\u4e2d\uff0c\u4ece\u4e00\u4e2a\u4efb\u52a1\u8df3\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\uff0c\u800cI/O\u8d1f\u8f7d\u4e0b\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u914d\u7f6e\u6587\u4ef6\u53ea\u80fd\u5411\u6211\u4eec\u663e\u793a\u7a7a\u95f2\u7684\u7ebf\u7a0b\u6c60\uff0c\u56e0\u4e3a\u7b49\u5f85I/O\u7684\u4efb\u52a1\u4e0d\u4f1a\u901a\u8fc7\u963b\u585e\u6765\u4fdd\u6301\u5176\u7ebf\u7a0b\uff0c\u800c\u662f\u5c06\u5176\u8fd4\u56de\u5230\u6c60\u4e2d\u3002\n\u53d1\u660e\u8fd9\u79cd\u6837\u5f0f\u4e0d\u662f\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u7406\u89e3-\u5b83\u66f4\u96be\uff1b\u4e5f\u4e0d\u662f\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u8c03\u8bd5\u6216\u5256\u6790-\u5b83\u66f4\u96be\uff1b\u4e5f\u4e0d\u662f\u56e0\u4e3a\u5b83\u4e0e\u8bed\u8a00\u7684\u5176\u4f59\u90e8\u5206\u5f88\u597d\u5730\u5339\u914d\uff0c\u6216\u8005\u4e0e\u73b0\u6709\u4ee3\u7801\u5f88\u597d\u5730\u96c6\u6210-\u6070\u6070\u76f8\u53cd\uff0c\u5b83\u5177\u6709\u75c5\u6bd2\u4fb5\u5165\u6027\uff0c\u5e76\u4e14\u51e0\u4e4e\u4e0d\u53ef\u80fd\u4e0e\u666e\u901a\u540c\u6b65\u4ee3\u7801\u8fdb\u884c\u5e72\u51c0\u7684\u96c6\u6210\uff0c\u800c\u53ea\u662f\u56e0\u4e3aJava\u4e2d\u7684\u7ebf\u7a0b\u5b9e\u73b0\u5728\u5360\u7528\u7a7a\u95f4\u548c\u6027\u80fd\u65b9\u9762\u90fd\u4e0d\u591f\u5145\u5206\u3002\u5f02\u6b65\u7f16\u7a0b\u98ce\u683c\u65e0\u5904\u4e0d\u5728\u5730\u4e0eJava\u5e73\u53f0\u7684\u8bbe\u8ba1\u4f5c\u6597\u4e89\uff0c\u5e76\u5728\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u89c2\u5bdf\u6027\u65b9\u9762\u4ed8\u51fa\u4e86\u9ad8\u6602\u7684\u4ee3\u4ef7\u3002\u4f46\u5b83\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff1a\u6ee1\u8db3\u53ef\u4f38\u7f29\u6027\u548c\u541e\u5410\u91cf\u9700\u6c42\uff0c\u5e76\u5145\u5206\u5229\u7528\u6602\u8d35\u7684\u786c\u4ef6\u8d44\u6e90\u3002\n\u4e00\u4e9b\u7f16\u7a0b\u8bed\u8a00\u8bd5\u56fe\u901a\u8fc7\u5728\u7ebf\u7a0b\u4e4b\u4e0a\u6784\u5efa\u4e00\u4e2a\u65b0\u6982\u5ff5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u5f02\u6b65/\u7b49\u5f85\u30021\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u7ebf\u7a0b\uff0c\u4f46\u662f\u534f\u4f5c\u8c03\u5ea6\u70b9\u88ab\u663e\u5f0f\u5730\u6807\u8bb0\u4e3a\u7b49\u5f85\u3002\u8fd9\u4f7f\u5f97\u7f16\u5199\u53ef\u4f38\u7f29\u7684\u540c\u6b65\u4ee3\u7801\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u901a\u8fc7\u5f15\u5165\u4e00\u79cd\u65b0\u7684\u4e0a\u4e0b\u6587\u6765\u89e3\u51b3\u4e0a\u4e0b\u6587\u95ee\u9898\uff0c\u8fd9\u79cd\u4e0a\u4e0b\u6587\u9664\u4e86\u540d\u79f0\u4e4b\u5916\u90fd\u662f\u7ebf\u7a0b\uff0c\u4f46\u4e0e\u7ebf\u7a0b\u4e0d\u517c\u5bb9\u3002\u5982\u679c\u540c\u6b65\u548c\u5f02\u6b65\u4ee3\u7801\u901a\u5e38\u4e0d\u80fd\u6df7\u5408-\u4e00\u4e2a\u5757\uff0c\u53e6\u4e00\u4e2a\u8fd4\u56de\u67d0\u79cd\u7c7b\u578b\u7684Future\u6216\u6d41-\u5f02\u6b65/\u7b49\u5f85\u521b\u5efa\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u201c\u6709\u8272\u201d\u4e16\u754c\uff0c\u5373\u4f7f\u5b83\u4eec\u90fd\u662f\u540c\u6b65\u7684\uff0c\u4e5f\u4e0d\u80fd\u6df7\u5408\uff0c\u66f4\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u8c03\u7528\u540c\u6b65\u4ee3\u7801\u5f02\u6b65\u6765\u6307\u793a\uff0c\u5c3d\u7ba1\u662f\u540c\u6b65\u7684\uff0c\u4f46\u6ca1\u6709\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\u56e0\u6b64\uff0cC#\u9700\u8981\u4e24\u4e2a\u4e0d\u540c\u7684API\u6765\u6682\u505c\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u7684\u6267\u884c\u4e00\u6bb5\u9884\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0cKotlin\u4e5f\u9700\u8981\u8fd9\u6837\u505a\uff0c\u4e00\u4e2a\u7528\u4e8e\u6682\u505c\u7ebf\u7a0b\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u6682\u505c\u7c7b\u4f3c\u4e8e\u7ebf\u7a0b\u4f46\u4e0d\u662f\u7ebf\u7a0b\u7684\u65b0\u6784\u9020\u3002\u4ece\u540c\u6b65\u5230I/O\uff0c\u6240\u6709\u590d\u5236\u7684\u540c\u6b65API\u90fd\u662f\u5982\u6b64\u3002\u4e0d\u4ec5\u540c\u4e00\u6982\u5ff5\u7684\u4e24\u4e2a\u5b9e\u73b0\u6ca1\u6709\u5355\u4e00\u7684\u62bd\u8c61\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u4e16\u754c\u5728\u8bed\u6cd5\u4e0a\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u8fd9\u8981\u6c42\u7a0b\u5e8f\u5458\u5c06\u5979\u7684\u4ee3\u7801\u5355\u5143\u6807\u8bb0\u4e3a\u9002\u5408\u5728\u4e00\u79cd\u6a21\u5f0f\u6216\u53e6\u4e00\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\n\u4e3a\u5c06\u7ebf\u7a0b\u4f5c\u4e3a\u7a00\u7f3a\u8d44\u6e90\u8fdb\u884c\u7ba1\u7406\u800c\u6784\u5efa\u7684\u673a\u5236\u662f\u4e00\u4e2a\u4e0d\u5e78\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u597d\u7684\u62bd\u8c61\u88ab\u629b\u5f03\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u53e6\u4e00\u4e2a\uff0c\u5728\u5927\u591a\u6570\u65b9\u9762\u66f4\u7cdf\u7cd5\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b9e\u73b0\u7684\u8fd0\u884c\u65f6\u6027\u80fd\u7279\u5f81\u3002\u8fd9\u79cd\u60c5\u51b5\u5bf9Java\u751f\u6001\u7cfb\u7edf\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u6709\u5bb3\u5f71\u54cd\u3002\n\u7a0b\u5e8f\u5458\u88ab\u8feb\u505a\u51fa\u9009\u62e9\uff0c\u8981\u4e48\u5c06\u57df\u5e76\u53d1\u5355\u5143\u76f4\u63a5\u5efa\u6a21\u4e3a\u7ebf\u7a0b\u5e76\u6d6a\u8d39\u786c\u4ef6\u53ef\u4ee5\u652f\u6301\u7684\u5927\u91cf\u541e\u5410\u91cf\uff0c\u8981\u4e48\u4f7f\u7528\u5176\u4ed6\u65b9\u5f0f\u5728\u975e\u5e38\u7ec6\u7c92\u5ea6\u7684\u7ea7\u522b\u4e0a\u5b9e\u73b0\u5e76\u53d1\uff0c\u4f46\u653e\u5f03\u4e86Java\u5e73\u53f0\u7684\u4f18\u52bf\u3002\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u6709\u76f8\u5f53\u5927\u7684\u8d22\u52a1\u6210\u672c\uff0c\u8981\u4e48\u662f\u786c\u4ef6\u6210\u672c\uff0c\u8981\u4e48\u662f\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\nProject Loom\u65e8\u5728\u6d88\u9664\u9ad8\u6548\u8fd0\u884c\u5e76\u53d1\u7a0b\u5e8f\u4e0e\u9ad8\u6548\u7f16\u5199\u3001\u7ef4\u62a4\u548c\u89c2\u5bdf\u5e76\u53d1\u7a0b\u5e8f\u4e4b\u95f4\u4ee4\u4eba\u6cae\u4e27\u7684\u6743\u8861\u3002\u5b83\u5229\u7528\u4e86\u5e73\u53f0\u7684\u4f18\u52bf\uff0c\u800c\u4e0d\u662f\u5bf9\u6297\u5b83\u4eec\uff0c\u540c\u65f6\u4e5f\u5229\u7528\u4e86\u5f02\u6b65\u7f16\u7a0b\u7684\u9ad8\u6548\u7ec4\u4ef6\u7684\u4f18\u52bf\u3002\u5b83\u5141\u8bb8\u60a8\u4ee5\u719f\u6089\u7684\u98ce\u683c\u7f16\u5199\u7a0b\u5e8f\uff0c\u4f7f\u7528\u719f\u6089\u7684API\uff0c\u5e76\u4e0e\u5e73\u53f0\u53ca\u5176\u5de5\u5177-\u4f46\u4e5f\u4e0e\u786c\u4ef6-\u4fdd\u6301\u548c\u8c10\uff0c\u4ee5\u5b9e\u73b0\u7f16\u5199\u65f6\u95f4\u548c\u8fd0\u884c\u65f6\u6210\u672c\u7684\u5e73\u8861\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u5c06\u662f\u5e7f\u53d7\u6b22\u8fce\u7684\u3002\u5b83\u65e0\u9700\u66f4\u6539\u8bed\u8a00\uff0c\u53ea\u9700\u5bf9\u6838\u5fc3\u5e93API\u7a0d\u4f5c\u66f4\u6539\u5373\u53ef\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6b65Web\u670d\u52a1\u5668\u5c06\u80fd\u591f\u5904\u7406\u66f4\u591a\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u9700\u8981\u66f4\u591a\u7684\u786c\u4ef6\u3002\n\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u7ebf\u66f4\u8f7b\uff0c\u6211\u4eec\u5c31\u80fd\u6709\u66f4\u591a\u7684\u7ebf\u3002\u5982\u679c\u6211\u4eec\u62e5\u6709\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u6309\u9884\u671f\u4f7f\u7528\uff1a\u901a\u8fc7\u865a\u62df\u5316\u7a00\u7f3a\u7684\u8ba1\u7b97\u8d44\u6e90\u5e76\u9690\u85cf\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u7684\u590d\u6742\u6027\uff0c\u76f4\u63a5\u8868\u793a\u5e76\u53d1\u7684\u57df\u5355\u5143\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u65b0\u60f3\u6cd5\uff0c\u4e5f\u8bb8\u6700\u719f\u6089\u7684\u65b9\u6cd5\u662fErlang and Go\u4e2d\u91c7\u7528\u7684\u65b9\u6cd5\u3002\n\u6211\u4eec\u7684\u57fa\u7840\u662f\u865a\u62df\u7ebf\u7a0b\u3002\u865a\u62df\u7ebf\u7a0b\u53ea\u662f\u7ebf\u7a0b\uff0c\u4f46\u662f\u521b\u5efa\u548c\u963b\u585e\u5b83\u4eec\u7684\u6210\u672c\u5f88\u4f4e\u3002\u5b83\u4eec\u7531Java\u8fd0\u884c\u65f6\u7ba1\u7406\uff0c\u4e0d\u662fOS\u7ebf\u7a0b\u7684\u4e00\u5bf9\u4e00\u5305\u88c5\u5668\uff0c\u800c\u662f\u5728JDK\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u7684\u3002\n\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u662f\u91cd\u91cf\u7ea7\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5fc5\u987b\u652f\u6301\u6240\u6709\u8bed\u8a00\u548c\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u3002\u7ebf\u7a0b\u9700\u8981\u6302\u8d77\u548c\u6062\u590d\u6267\u884c\u8ba1\u7b97\u7684\u80fd\u529b\u3002\u8fd9\u9700\u8981\u4fdd\u7559\u5176\u72b6\u6001\uff0c\u5305\u62ec\u5305\u542b\u5f53\u524d\u6307\u4ee4\u7d22\u5f15\u7684\u6307\u4ee4\u6307\u9488\u6216\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u4ee5\u53ca\u5b58\u50a8\u5728\u5806\u6808\u4e0a\u7684\u6240\u6709\u672c\u5730\u8ba1\u7b97\u6570\u636e\u3002\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u77e5\u9053\u8bed\u8a00\u662f\u5982\u4f55\u7ba1\u7406\u5b83\u7684\u5806\u6808\u7684\uff0c\u6240\u4ee5\u5b83\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u5806\u6808\u3002\u7136\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u67d0\u4e2a\u7a7a\u95f2\u7684CPU\u5185\u6838\uff0c\u5728\u5b83\u4eec\u53d8\u5f97\u53ef\u4ee5\u8fd0\u884c(\u542f\u52a8\u6216\u53d6\u6d88\u9a7b\u7559)\u65f6\u5b89\u6392\u5b83\u4eec\u7684\u6267\u884c\u3002\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5fc5\u987b\u8c03\u5ea6\u5404\u79cd\u7ebf\u7a0b\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u5904\u7406\u548c\u963b\u585e\u7684\u6df7\u5408\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a\u622a\u7136\u4e0d\u540c-\u4e00\u4e9b\u7ebf\u7a0b\u670d\u52a1HTTP\u8bf7\u6c42\uff0c\u53e6\u4e00\u4e9b\u7ebf\u7a0b\u64ad\u653e\u89c6\u9891-\u5b83\u7684\u8c03\u5ea6\u5668\u5fc5\u987b\u662f\u4e00\u4e2a\u8db3\u591f\u5168\u9762\u7684\u6298\u8877\u65b9\u6848\u3002\n\u901a\u8fc7\u4e0d\u5c06\u5176\u72b6\u6001\u5177\u4f53\u5316\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\uff0c\u800c\u662f\u5c06\u5176\u72b6\u6001\u5177\u4f53\u5316\u4e3aVM\u5df2\u77e5\u7684Java\u5bf9\u8c61\uff0c\u5e76\u4e14\u5728Java\u8fd0\u884c\u65f6\u7684\u76f4\u63a5\u63a7\u5236\u4e0b\uff0cBoom\u589e\u52a0\u4e86\u63a7\u5236\u6267\u884c\u3001\u6302\u8d77\u548c\u6062\u590d\u6267\u884c\u7684\u80fd\u529b\u3002Java\u5bf9\u8c61\u5b89\u5168\u9ad8\u6548\u5730\u5bf9\u5404\u79cd\u72b6\u6001\u673a\u548c\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5efa\u6a21\uff0c\u56e0\u6b64\u4e5f\u975e\u5e38\u9002\u5408\u5bf9\u6267\u884c\u8fdb\u884c\u5efa\u6a21\u3002Java\u8fd0\u884c\u65f6\u77e5\u9053Java\u4ee3\u7801\u5982\u4f55\u5229\u7528\u5806\u6808\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u66f4\u7d27\u51d1\u5730\u8868\u793a\u6267\u884c\u72b6\u6001\u3002\u5bf9\u6267\u884c\u7684\u76f4\u63a5\u63a7\u5236\u8fd8\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u66f4\u9002\u5408\u6211\u4eec\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8c03\u5ea6\u5668(\u666e\u901aJava\u8c03\u5ea6\u5668)\uff1b\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u63d2\u62d4\u7684\u81ea\u5b9a\u4e49SCH\n\u64cd\u4f5c\u7cfb\u7edf\u6700\u591a\u53ef\u4ee5\u652f\u6301\u51e0\u5343\u4e2a\u6d3b\u52a8\u7ebf\u7a0b\uff0c\u800cJava\u8fd0\u884c\u65f6\u53ef\u4ee5\u652f\u6301\u6570\u767e\u4e07\u4e2a\u865a\u62df\u7ebf\u7a0b\u3002\u5e94\u7528\u7a0b\u5e8f\u57df\u4e2d\u7684\u6bcf\u4e2a\u5e76\u53d1\u5355\u5143\u90fd\u53ef\u4ee5\u7531\u5176\u81ea\u5df1\u7684\u7ebf\u7a0b\u8868\u793a\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u7f16\u7a0b\u3002\u5fd8\u6389\u7ebf\u7a0b\u6c60\u5427\uff0c\u53ea\u9700\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u4efb\u52a1\u4e00\u4e2a\u7ebf\u7a0b\u3002\u60a8\u5df2\u7ecf\u751f\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u7ebf\u7a0b\u6765\u5904\u7406\u4f20\u5165\u7684HTTP\u8bf7\u6c42\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u5728\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u60f3\u8981\u540c\u65f6\u67e5\u8be2\u4e00\u4e2a\u6570\u636e\u5e93\u5e76\u5411\u5176\u4ed6\u4e09\u4e2a\u670d\u52a1\u53d1\u51fa\u4f20\u51fa\u8bf7\u6c42\u5417\uff1f\u6ca1\u95ee\u9898-\u751f\u6210\u66f4\u591a\u7ebf\u7a0b\u3002\u4f60\u9700\u8981\u5728\u4e0d\u6d6a\u8d39\u5b9d\u8d35\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\u4e8b\u60c5\u7684\u53d1\u751f\u5417\uff1f\u5fd8\u6389\u56de\u8c03\u6216\u53cd\u5e94\u5f0f\u6d41\u94fe\u5427--\u53ea\u9700\u963b\u585e\u5373\u53ef\u3002\u7f16\u5199\u76f4\u622a\u4e86\u5f53\u3001\u67af\u71e5\u4e4f\u5473\u7684\u4ee3\u7801\u3002\u7ebf\u7a0b\u7ed9\u6211\u4eec\u5e26\u6765\u7684\u6240\u6709\u597d\u5904-\u63a7\u5236\u6d41\u3001\u5f02\u5e38\u4e0a\u4e0b\u6587\u3001\u8c03\u8bd5\u6d41\u3001\u5206\u6790\u7ec4\u7ec7-\u90fd\u7531\u865a\u62df\u7ebf\u7a0b\u4fdd\u7559\uff1b\u53ea\u6709\u5360\u7528\u7a7a\u95f4\u548c\u6027\u80fd\u65b9\u9762\u7684\u8fd0\u884c\u65f6\u6210\u672c\u6ca1\u6709\u4e86\u3002\u4e0e\u5f02\u6b65\u7f16\u7a0b\u76f8\u6bd4\uff0c\u7075\u6d3b\u6027\u6ca1\u6709\u4efb\u4f55\u635f\u5931\uff0c\u56e0\u4e3a\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u6211\u4eec\u6ca1\u6709\u653e\u5f03\u5bf9\u8c03\u5ea6\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236\u3002\n\u6709\u4e86\u624b\u5934\u7684\u65b0\u529f\u80fd\uff0c\u6211\u4eec\u77e5\u9053\u5982\u4f55\u5b9e\u73b0\u865a\u62df\u7ebf\u7a0b\uff1b\u5982\u4f55\u5411\u7a0b\u5e8f\u5458\u8868\u793a\u8fd9\u4e9b\u7ebf\u7a0b\u5c31\u4e0d\u90a3\u4e48\u6e05\u695a\u4e86\u3002\nJava\u7684\u6bcf\u4e00\u4e2a\u65b0\u7279\u6027\u90fd\u4f1a\u5728\u4fdd\u62a4\u548c\u521b\u65b0\u4e4b\u95f4\u5236\u9020\u7d27\u5f20\u5173\u7cfb\u3002\u5411\u524d\u517c\u5bb9\u6027\u8ba9\u73b0\u6709\u4ee3\u7801\u4eab\u53d7\u65b0\u7279\u6027(\u4f7f\u7528\u5355\u4e00\u62bd\u8c61\u65b9\u6cd5\u7c7b\u578b\u7684\u65e7\u4ee3\u7801\u5982\u4f55\u4f7f\u7528lambdas\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50)\u3002\u4f46\u6211\u4eec\u4e5f\u5e0c\u671b\u6539\u6b63\u8fc7\u53bb\u7684\u8bbe\u8ba1\u9519\u8bef\uff0c\u91cd\u65b0\u5f00\u59cb\u3002\nThread\u7c7b\u53ef\u4ee5\u8ffd\u6eaf\u5230Java1.0\uff0c\u591a\u5e74\u6765\u79ef\u7d2f\u4e86\u65b9\u6cd5\u548c\u5185\u90e8\u5b57\u6bb5\u3002\u5b83\u5305\u542b\u5df2\u5e9f\u5f0320\u591a\u5e74\u7684Suspend\u3001Resume\u3001Stop\u548ccountStackFrames\u7b49\u65b9\u6cd5\uff0c\u5047\u5b9a\u7ebf\u7a0b\u6570\u91cf\u5f88\u5c11\u7684getAllStackTraces\u7b49\u65b9\u6cd5\uff0c\u6dfb\u52a0\u4ee5\u652f\u6301\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5bb9\u5668\u4f7f\u7528\u7684\u8fc7\u65f6\u6982\u5ff5(\u5982context-classloader)\uff0c\u751a\u81f3\u66f4\u8001\u7684\u65b9\u6cd5(\u5982ThreadGroup)\uff0c\u5176\u539f\u59cb\u7528\u9014\u4f3c\u4e4e\u5df2\u88ab\u5386\u53f2\u9057\u5fd8\uff0c\u4f46\u4ecd\u6e17\u900f\u5230\u8bb8\u591a\u5904\u7406\u7ebf\u7a0b\u7684\u5185\u90e8\u4ee3\u7801\u548c\u5de5\u5177\u4e2d\uff0c\u5305\u62ec\u8fc7\u65f6\u7684\u3001\u672a\u4f7f\u7528\u7684\u65b9\u6cd5(\u5982Thread.\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u65e9\u671f\u7684Loom\u539f\u578b\u5728\u4e00\u4e2a\u65b0\u7684Fibre\u7c7b\u4e2d\u8868\u793a\u6211\u4eec\u7684\u7528\u6237\u6a21\u5f0f\u7ebf\u7a0b\uff0c\u8be5\u7c7b\u5e2e\u52a9\u6211\u4eec\u68c0\u67e5\u73b0\u6709\u4ee3\u7801\u5bf9\u7ebf\u7a0bAPI\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5728\u90a3\u6b21\u5b9e\u9a8c\u4e2d\u7684\u51e0\u4e2a\u89c2\u5bdf\u7ed3\u679c\u5e2e\u52a9\u6211\u4eec\u5f62\u6210\u4e86\u81ea\u5df1\u7684\u7acb\u573a\uff1a\n\u7ebf\u7a0bAPI\u7684\u67d0\u4e9b\u90e8\u5206\u4f7f\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u7279\u522b\u662fThread.currentThread()\u548cThreadLocal\u3002\u6ca1\u6709\u5b83\u4eec\uff0c\u51e0\u4e4e\u6ca1\u6709\u73b0\u6709\u7684\u4ee3\u7801\u53ef\u4ee5\u8fd0\u884c\u3002\u6211\u4eec\u5c1d\u8bd5\u4f7fThreadLocal\u5e73\u5747\u7ebf\u7a0b\u6216\u7ea4\u7a0b\u4f4d\u4e8e\u672c\u5730\uff0c\u5e76\u8ba9Thread.currentThread()\u8fd4\u56de\u7ea4\u7a0b\u7684\u4e00\u4e9bThread\u89c6\u56fe\uff0c\u4f46\u8fd9\u4e9b\u90fd\u589e\u52a0\u4e86\u590d\u6742\u6027\u3002\nThread API\u7684\u5176\u4ed6\u90e8\u5206\u4e0d\u4ec5\u5f88\u5c11\u4f7f\u7528\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u5411\u7a0b\u5e8f\u5458\u516c\u5f00\u3002\u4eceJava 5\u5f00\u59cb\uff0c\u9f13\u52b1\u7a0b\u5e8f\u5458\u901a\u8fc7ExecutorServices\u95f4\u63a5\u521b\u5efa\u548c\u542f\u52a8\u7ebf\u7a0b\uff0c\u8fd9\u6837Thread\u7c7b\u4e2d\u7684\u6742\u4e71\u5c31\u4e0d\u4f1a\u9020\u6210\u5f88\u5927\u7684\u5371\u5bb3\uff1b\u65b0\u7684Java\u5f00\u53d1\u4eba\u5458\u4e0d\u9700\u8981\u63a5\u89e6\u5927\u90e8\u5206\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u9700\u8981\u63a5\u89e6\u5b83\u8fc7\u65f6\u7684\u75d5\u8ff9\u3002\u56e0\u6b64\uff0c\u4fdd\u7559Thread API\u7684\u6559\u5b66\u6210\u672c\u5f88\u5c0f\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5143\u6570\u636e\u79fb\u5230\u201cSideCar\u201d\u5bf9\u8c61\u4ee5\u4ec5\u6309\u9700\u5206\u914d\uff0c\u4ece\u800c\u51cf\u5c11\u5143\u6570\u636e\u5728Thread\u7c7b\u4e2d\u7684\u5360\u7528\u7a7a\u95f4\u3002\n\u65b0\u7684\u5f03\u7528\u548c\u5220\u9664\u7b56\u7565\u5c06\u9010\u6e10\u5141\u8bb8\u6211\u4eec\u6e05\u7406Thread API\u3002\n\u6211\u4eec\u60f3\u4e0d\u51fa\u6bd4Thread\u66f4\u597d\u7684\u4e1c\u897f\u6765\u8bc1\u660e\u4e00\u4e2a\u5168\u65b0\u7684API\u662f\u5408\u7406\u7684\u3002\n\u4ecd\u7136\u6709\u4e00\u4e9b\u4e0d\u4fbf\u4e4b\u5904\uff0c\u6bd4\u5982\u4e0d\u5e78\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u4e2d\u65ad\u673a\u5236\uff0c\u4f46\u662f\u6211\u4eec\u5728\u90a3\u6b21\u5b9e\u9a8c\u4e2d\u5b66\u5230\u7684-\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u90e8\u5206Thread API\uff0c\u800c\u4e0d\u5f3a\u8c03\u5176\u4ed6\u90e8\u5206-\u6539\u53d8\u4e86\u65b9\u5411\uff0c\u503e\u5411\u4e8e\u4fdd\u7559\u73b0\u6709\u7684API\uff0c\u5e76\u7528Thread\u7c7b\u8868\u793a\u6211\u4eec\u7684\u7528\u6237\u6a21\u5f0f\u7ebf\u7a0b\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\uff1a\u865a\u62df\u7ebf\u7a0b\u5c31\u662f\u7ebf\u7a0b\uff0c\u4efb\u4f55\u77e5\u9053\u7ebf\u7a0b\u7684\u5e93\u90fd\u5df2\u7ecf\u77e5\u9053\u865a\u62df\u7ebf\u7a0b\u4e86\u3002\u8c03\u8bd5\u5668\u548c\u5206\u6790\u5668\u4e0e\u4eca\u5929\u7684\u7ebf\u7a0b\u4e00\u6837\u4f7f\u7528\u5b83\u4eec\u3002\u4e0e\u5f02\u6b65/\u7b49\u5f85\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4eec\u6ca1\u6709\u5f15\u5165\u201c\u8bed\u4e49\u9e3f\u6c9f\u201d\uff1a\u4ee3\u7801\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u884c\u4e3a\u5728\u8fd0\u884c\u65f6\u88ab\u4fdd\u7559\uff0c\u5e76\u4e14\u5bf9\u6240\u6709\u5de5\u5177\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u4e3a\u4e86\u83b7\u5f97\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u6709\u4e86\u65b0\u7684Thread.Builder\uff0c\u5b83\u53ef\u4ee5\u505a\u4e0e\u4e0a\u9762\u76f8\u540c\u7684\u4e8b\u60c5\uff1a\n\u6ca1\u6709\u516c\u5171\u6216\u53d7\u4fdd\u62a4\u7684Thread\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u865a\u62df\u7ebf\u7a0b\uff0c\u8fd9\u610f\u5473\u7740Thread\u7684\u5b50\u7c7b\u4e0d\u80fd\u662f\u865a\u62df\u7684\u3002\u56e0\u4e3a\u5c06\u5e73\u53f0\u7c7b\u5b50\u7c7b\u5316\u4f1a\u9650\u5236\u6211\u4eec\u53d1\u5c55\u5b83\u4eec\u7684\u80fd\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a\u3002\n\u5b83\u53ef\u4ee5\u4f20\u9012\u7ed9java.util.concurrent.Executors\u4ee5\u521b\u5efa\u4f7f\u7528\u865a\u62df\u7ebf\u7a0b\u5e76\u7167\u5e38\u4f7f\u7528\u7684ExecutorServices\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u4e5f\u4e0d\u60f3\u8981\u865a\u62df\u7ebf\u7a0b\u6c60\uff0c\u6240\u4ee5\u6211\u4eec\u5411\u6267\u884c\u5668\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u65b9\u6cd5newUnboundedExecutor\u3002\u5b83\u6784\u9020\u4e00\u4e2aExecutorSe\u3002\n..", "note_en": "Project Loom aims to drastically reduce the effort of writing, maintaining, and observing high-throughput concurrent applications that make the best use of available hardware.\n Work on Project Loom started in late 2017. This document explains the motivations for the project and the approaches taken, and summarizes our work so far. Like all OpenJDK projects, it will be delivered in stages, with different components arriving in GA (General Availability) at different times, likely taking advantage of the  Preview mechanism, first.\n You can find more material about Project Loom on its  wiki, and try most of what\u2019s described below in the  Loom EA binaries (Early Access).\n   A virtual thread is a  Thread \u2014 in code, at runtime, in the debugger and in the profiler.\n A virtual thread is not a wrapper around an OS thread, but a Java entity.\n Creating a virtual thread is cheap \u2014 have millions, and don\u2019t pool them!\n     Java is used to write some of the biggest, most scalable applications in the world. Scalability is the ability of a program to gracefully handle growing workloads. One way in which Java programs scale is  parallelism: we want to process a chunk of data that could grow quite large, so we describe its transformation as a pipeline of lambdas on a stream, and by setting it to  parallel we ask multiple processing cores to sink their teeth into the task as one, like a swarm of piranhas devouring a large fish; one piranha could get the job done \u2014 it\u2019s just faster this way. That mechanism was delivered in Java 8. But there\u2019s a different, harder and more prevalent, kind of scaling, which is about handling relatively independent tasks demanded of the application at the same time. That they must be served simultaneously is not an implementation choice but a requirement. We call that  concurrency, it\u2019s the bread-and-butter of contemporary software, and that\u2019s what Loom is about.\n Consider the web server. Each of the requests it serves is largely independent of the others. For each, we do some parsing, query a database or issue a request to a service and wait for the result, do some more processing and send a response. Not only does this process not cooperate with other simultaneous HTTP requests on completing some job, most of the time it doesn\u2019t care at all about what other requests are doing, yet it still competes with them for processing and I/O resources. Not piranhas, but taxis, each with its own route and destination, it travels and makes its stops. The presence of other taxis traveling on the same road system does not make any one cab reach its destination any sooner \u2014 if anything, it might slow it down \u2014 but if only a single cab could be on the city roads at any one time it wouldn\u2019t just be a slow transit system, it would be a dysfunctional one. The more taxis we can share the roads without gridlocking downtown, the better the system. From its early days Java supported this kind of job. Servlets allow us to write code that looks straightforward on the screen. It\u2019s a simple sequence \u2014 parsing, database query, processing, response \u2014 that doesn\u2019t worry if the server is now handling just this one request or a thousand others.\n Every concurrent application has some units of concurrency natural to its domain, some work that is done independently of other work and at the same time. For a web server, this could be the HTTP request or the user session; for a database server this could be the transaction. Concurrency has a long and rich history that predates Java\u2019s, but the idea, as far as how Java was designed, is simple: represent this domain unit of concurrency with a software unit of concurrency that runs sequentially, like a taxi going on its simple route without caring about any others. This software construct is the thread. It virtualizes resources, from processors to I/O devices, and schedules their use \u2014 exploiting the fact that each process might employ different hardware units at different times \u2014 exposing it as a sequential process. The defining feature of threads is that they sequence not only processing operations but also  blocking \u2014 waiting for some external occurrence, be it I/O or some event or triggered by another thread, continuing execution only after that occurrence. The question of how threads should best communicate with one another \u2014 what the appropriate mix of shared data structures and message passing should be \u2014 is not essential to the concept of threads, and it\u2019s possible that whatever the current mix is in Java applications, it will shift with new features.\n Whether you use them directly or inside, say, a JAX-RS framework, concurrency in Java means threads. In fact, the entire Java platform \u2014 from the VM, through the language and libraries, to the debuggers and profilers \u2014 is built around the thread as the core organizing component of a running program:\n I/O APIs are  synchronous and describe initiating I/O operations and waiting for their result as a sequential ordering of statements by  blocking the thread;\n Memory side-effects (if organized to be race-free) are sequentially ordered by the actions of the thread, as if no other thread is competing to use that memory;\n exceptions provide useful information by placing the failing operation in the context of the current thread\u2019s call-stack;\n single-stepping in a debugger follows execution in order, whether it entails some processing or I/O because single-stepping is associated with a thread;\n application profiles organize work by threads when showing how much time is spent processing or waiting for I/O or synchronization.\n The problem is that the thread, the software unit of concurrency, cannot match the scale of the application domain\u2019s natural units of concurrency \u2014 a session, an HTTP request, or a single database operation \u2014 nor can it match the scale of concurrency that modern hardware can support. A server can handle upward of a million concurrent open sockets, yet the operating system cannot efficiently handle more than a few thousand active (non-idle) threads. As the workload on the servlet container increases and it needs to handle more requests in flight, its ability to scale becomes limited by the relatively small number of threads the OS can support. Servlets read nicely but scale poorly.\n This is not a fundamental limitation of the concept of threads, but an accidental feature of their implementation in the JDK as trivial wrappers around operating system threads. OS threads have a high footprint, creating them requires allocating OS resources, and scheduling them \u2014 i.e.\u00a0assigning hardware resources to them \u2014 is suboptimal. They\u2019re not taxis so much as trains.\n This creates a large mismatch between what threads were  meant to do \u2014 abstract the scheduling of computational resources as a straightforward construct \u2014 and what they effectively  can do. A mismatch in several orders of magnitude can have a big impact.\n  And a big impact it\u2019s had. Ironically, the threads invented to virtualize scarce computational resources for the purpose of transparently sharing them, have themselves become scarce resources, and we\u2019ve had to erect complex scaffolding to share  them.\n Because threads are costly to create, we pool them. The cost of creating a new thread is so high that to reuse them we happily pay the price of  leaking thread-locals and a  complex cancellation protocol.\n But pooling alone offers a thread-sharing mechanism that is too coarse-grained. There just aren\u2019t enough threads in a thread pool to represent all the concurrent tasks running even  at a single point in time. Borrowing a thread from the pool for the entire duration of a task holds on to the thread even while it is waiting on some external event, such as a response from a database or a service, or any other activity that would block it. OS threads are just too precious to hang on to when the task is inactive. To share threads more finely and efficiently, we could return the thread to the pool every time the task has to wait for some result. This means that the task is no longer bound to a single thread for its entire execution. It also means we must avoid blocking the thread.\n The result is the proliferation of  asynchronous APIs, from asynchronous NIO in the JDK, through asynchronous servlets, to the many so-called \u201creactive\u201d libraries that go to great lengths to not block threads. Chopping down tasks to pieces and letting the asynchronous construct put them together results in intrusive, all-encompassing and constraining frameworks. Even basic control flow, like loops and try/catch, need to be reconstructed in \u201creactive\u201d DSLs, some sporting classes with hundreds of methods.\n Because, as mentioned above, much of the Java platform assumes that execution context is embodied in a thread, all that context is lost once we dissociate tasks from threads: Exception stack traces no longer provide a useful context, when single-stepping in the debugger we find ourselves in scheduler code, jumping from one task to another, and the profile of an application under I/O load could only show us idle thread pools, because tasks waiting for I/O do not keep holding their thread by blocking and, instead, return it to the pool.\n This style was invented not because it is easier to understand \u2014 it\u2019s harder; not because it is easier to debug or profile \u2014 it\u2019s  much harder; not because it fits well with the rest of the language or integrates well with existing code \u2014 quite the opposite,  it is virally-intrusive and makes clean integration with ordinary synchronous code virtually impossible, but just because the implementation of threads in Java is inadequate in both footprint and performance. The asynchronous programming style fights the design of the Java platform at every turn and pays a high price in maintainability and observability. But it does so  for a good reason: to meet the scalability and throughput demands and make good use of costly hardware resources.\n Some programming languages tried to address the problem by building a  new concept on top of threads:  async/await.  1 It works similarly to threads but cooperative scheduling points are marked explicitly with  await. This makes it possible to write scalable synchronous code and solves the context issue by introducing a new kind of context that is a thread in all but name but is  incompatible with threads. If synchronous and asynchronous code cannot normally be mixed \u2014 one blocks and the other returns some sort of  Future or  Flow \u2014 async/await creates two differently \u201ccolored\u201d worlds that cannot be mixed even though  both of them are synchronous, and, to make matters more confusing, calls synchronous code asynchronous to indicate that, despite being synchronous, no thread is blocked. As a result, C# requires   two different APIs to suspend execution of the currently executing code for some predetermined duration, and  Kotlin does too, one to suspend the thread and one to suspend the new construct that is  like a thread, but isn\u2019t. The same goes for all synchronous APIs, from synchronization to I/O, that are duplicated. Not only is there no single abstraction of two implementations of the same concept, but the two worlds are syntactically disjoint, requiring the programmer to mark her code units as suitable to run in one mode or the other, but not both.\n The mechanisms built to manage threads as a scarce resource are an unfortunate case of a good abstraction abandoned in favor of another, worse in most respects, merely because of the runtime performance characteristics of the implementation. This state of affairs has had a large deleterious effect on the Java ecosystem.\n Programmers are forced to choose between modeling a unit of domain concurrency directly as a thread and wasting considerable throughput that their hardware can support, or using other ways to implement concurrency on a very fine-grained level but relinquishing the strengths of the Java platform. Both choices have a considerable financial cost, either in hardware or in development and maintenance effort.\n  Project Loom intends to eliminate the frustrating tradeoff between efficiently running concurrent programs and efficiently writing, maintaining and observing them. It leans into the strengths of the platform rather than fight them, and also into the strengths of the efficient components of asynchronous programming. It lets you write programs in a familiar style, using familiar APIs, and in harmony with the platform and its tools \u2014 but also with the hardware \u2014 to reach a balance of write-time and runtime costs that, we hope, will be widely appealing. It does so without changing the language, and with only minor changes to the core library APIs. A simple, synchronous web server will be able to handle many more requests without requiring more hardware.\n  If we could make threads lighter, we could have more of them. If we have more of them, they could be used as intended: to directly represent domain units of concurrency by virtualizing scarce computational resources and hiding the complexity of managing those resources. This is not a new idea, and is perhaps most familiar as the approach taken in Erlang and Go.\n Our foundation is  virtual threads. Virtual threads are just threads, but creating and blocking them is cheap. They are managed by the Java runtime and are not one-to-one wrappers of OS threads, rather, they are implemented in userspace in the JDK.\n OS threads are heavyweight because they must support all languages and all workloads. A thread requires the ability to suspend and resume the execution of a computation. This requires preserving its state, which includes the instruction pointer, or program counter, that contains the index of the current instruction, as well as all of the local computation data, which is stored on the stack. Because the OS does not know how a language manages its stack, it must allocate one that is large enough. Then we must  schedule executions when they become  runnable \u2014 started or unparked \u2014 by assigning them to some free CPU core. Because the OS kernel must schedule all manner of threads that behave very differently from one another in their blend of processing and blocking \u2014 some serving HTTP requests, others playing videos \u2014 its scheduler must be an adequate all-around compromise.\n Loom adds the ability to control execution, suspending and resuming it, by reifying its state not as an OS resource, but as a Java object known to the VM, and under the direct control of the Java runtime. Java objects securely and efficiently model all sorts of state machines and data structures, and so are well suited to model execution, too. The Java runtime knows how Java code makes use of the stack, so it can represent execution state more compactly. Direct control over execution also lets us pick schedulers \u2014 ordinary Java schedulers \u2014 that are better-tailored to our workload; in fact, we can use pluggable custom schedulers. Thus, the Java runtime\u2019s superior insight into Java code allows us to shrink the cost of threads.\n Whereas the OS can support up to a few thousand active threads, the Java runtime can support millions of virtual threads. Every unit of concurrency in the application domain can be represented by its own thread, making programming concurrent applications easier. Forget about thread-pools, just spawn a new thread, one per task. You\u2019ve already spawned a new virtual thread to handle an incoming HTTP request, but now, in the course of handling the request, you want to simultaneously query a database and issue outgoing requests to three other services? No problem \u2014 spawn  more threads. You need to wait for something to happen without wasting precious resources? Forget about callbacks or reactive stream chaining \u2014 just block. Write straightforward, boring code. All the benefits threads give us \u2014 control flow, exception context, debugging flow, profiling organization \u2014 are preserved by virtual threads; only the runtime cost in footprint and performance is gone. There is no loss in flexibility compared to asynchronous programming because, as we\u2019ll see, we have not ceded fine-grained control over scheduling.\n  With new capabilities on hand, we knew how to  implement virtual threads; how to represent those threads to programmers was less clear.\n Every new Java feature creates a tension between conservation and innovation. Forward compatibility lets existing code enjoy the new feature (a great example of that is how old code using single-abstract-method types works with lambdas). But we also wish to correct past design mistakes and begin afresh.\n The  java.lang.Thread class dates back to Java 1.0, and over the years accumulated both methods and internal fields. It contains methods such as  suspend,  resume,  stop and  countStackFrames, that have been deprecated for over twenty years, methods like  getAllStackTraces that assume that the number of threads is small, antiquated concepts such as the context-classloader, added to support certain application container usages, and even older ones, such as  ThreadGroup, whose original purpose seems to have been lost to history yet still permeates a lot of internal code and tools that deal with threads, including outdated, unused methods such as  Thread.enumerate.\n Indeed, earlier prototypes of Loom represented our user-mode threads in a new  Fiber class that helped us examine the dependencies of existing code on the thread API. Several observations made during that experiment helped shape our position:\n Some parts of the thread API are very pervasively used, in particular,  Thread.currentThread() and  ThreadLocal. Without them very little existing code can run. We tried making  ThreadLocal mean thread-or-fiber-local and had  Thread.currentThread() return some  Thread view of the  Fiber, but these were added complications.\n Other parts of the  Thread API are not only seldom used, but are hardly exposed to programmers at all. Since Java 5, programmers have been encouraged to create and start threads indirectly through  ExecutorServices, so that the clutter in the  Thread class is not terribly harmful; new Java developers need not be exposed to most of it and not at all to its antiquated vestiges. So the pedagogical cost of keeping the  Thread API is small.\n We could reduce the footprint of the metadata in the  Thread class by moving it to a \u201csidecar\u201d object to only be allocated on demand.\n The new deprecation and removal policy will gradually allow us to clean up the  Thread API.\n We couldn\u2019t come up with anything sufficiently better than  Thread that would justify a completely new API.\n There are still some inconveniences like unfortunate return types and the  interruption mechanism, but what we learned during that experiment \u2014 that we can keep parts of the Thread API and de-emphasize others \u2014 moved the needle in favor of keeping the existing API, and representing our user-mode threads with the  Thread class. And here we are: virtual threads are just  Threads, and any library that knows  Thread already knows virtual threads. Debuggers and profilers work with them as with today\u2019s threads. Unlike async/await, they introduce no \u201csemantic gap\u201d: the behavior of the code as it appears to the programmer on the screen is preserved at runtime, and appears the same to all tools.\n    For more flexibility, there\u2019s the new   Thread.Builder, that can do the same thing as above:\n    There is no public or protected  Thread constructor to create a virtual thread, which means that subclasses of  Thread cannot be virtual. Because subclassing platform classes constrains our ability to evolve them, it\u2019s something we want to discourage.\n   that can be passed to   java.util.concurrent.Executors to create  ExecutorServices that employ virtual threads and used as usual. But since we don\u2019t need and don\u2019t want and to pool virtual threads, we\u2019ve added a new method,   newUnboundedExecutor to  Executors. It constructs an  ExecutorSe\n......", "posttime": "2020-05-16 06:00:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,\u9879\u76ee,state,\u7ebf\u7a0b", "title": "Java\uff1a(\u9879\u76ee)\u7edd\u7f18\u7ebf\u675f\u7684\u72b6\u6001", "title_en": "Java: State of (Project) Loom", "transed": 1, "url": "http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html", "via": "", "real_tags": ["java", "\u9879\u76ee", "state", "\u7ebf\u7a0b"]}, {"category": "", "categoryclass": "", "imagename": "fc9482f732de35ce76f0c4d07897163c.png", "infoid": 1002313, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u5b87\u5b99\u4e2d\u63a2\u7d22\u4f60\u7684\u4ee3\u7801\u5462\uff1f(\u97f3\u4e50\u63d0\u793a\uff1a\u4e5f\u662fSprint Zarathustra\uff0cOp.30-Strauss)\u8fd9\u662f\u5728\u770b\u4e86\u8096\u6069\u00b7\u5361\u7f57\u5c14(Sean Carroll)\u5173\u4e8e\u91cf\u5b50\u529b\u5b66\u591a\u4e16\u754c\u89e3\u91ca\u7684\u6f14\u8bb2\u540e\u8df3\u5165\u6211\u8111\u6d77\u7684\u95ee\u9898\u3002\n\u91cf\u5b50\u529b\u5b66\u7684\u591a\u4e16\u754c\u89e3\u91ca\u5c06\u6211\u4eec\u7684\u5b87\u5b99\u60f3\u8c61\u6210\u4e00\u4e2a\u65e0\u9650\u5206\u652f\u7684\u5b87\u5b99\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u90a3\u91cc\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u91cf\u5b50\u7ed3\u679c\u90fd\u5b58\u5728\u4e8e\u5b83\u81ea\u5df1\u7684\u5b87\u5b99\u4e2d\u3002\u6bcf\u6b21\u5b87\u5b99\u5206\u652f\u65f6\uff0c\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0e\u6bcd\u5b87\u5b99\u7565\u6709\u4e0d\u540c\u7684\u5b50\u5b87\u5b99\uff0c\u4f8b\u5982\uff0c\u4e07\u6709\u5f15\u529b\u548c\u5149\u901f\u7b49\u5b87\u5b99\u5e38\u6570\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\n\u56fe\u5f62TDY(&#34\uff1b\u5b87\u5b99)y--&gt\uff1by_0(&#34\uff1b\u5b87\u5b990&34\uff1b)y--&gt\uff1by_1(&#34\uff1b\u5b87\u5b991&#34\uff1b)y_0--&gt\uff1by_00(&#34\uff1b\u5b87\u5b9900&34\uff1b)y_0--&gt\uff1by_01(&#34\uff1b\u5b87\u5b9901&#34\uff1b)y_1--&G\u3002Y_11(&#34\uff1b\u5b87\u5b9911&#34\uff1b)\u3002\n\u5047\u8bbe\u60a8\u6b63\u5728\u53c2\u52a0\u6c42\u804c\u9762\u8bd5\uff0c\u5e76\u4e14\u8981\u6c42\u60a8\u7f16\u5199FizzBuzz(\u8fd9\u53ef\u80fd\u6697\u793a\u60a8\u6b63\u5728\u8fdb\u884c\u6a21\u62df[1])\uff0c\u60a8\u51b3\u5b9a\u4f7f\u7528for\u5faa\u73af\uff0c\u56e0\u6b64\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\u3002\n1 for(\u8bbei=1\uff1bi&lt\uff1b=100\uff1bi++){2 if(i%15=0){3\u63a7\u5236\u53f0\u3002log(&#39\uff1bFizzBuzz&#39\uff1b)\uff1b4}Else if(i%3=0){5\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(#39\uff1bFizz&#39\uff1b)\uff1b6}Else if(i%5=0){7\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(#39\uff1bBuzz&39\uff1b)\uff1b8}\u5176\u4ed6{9\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(I)\uff1b10}11}\u3002\n\u6839\u636e\u91cf\u5b50\u529b\u5b66\u7684\u591a\u4e16\u754c\u89e3\u91ca\uff0c\u5f53\u4f60\u51b3\u5b9a\u4f7f\u7528FOR\u5faa\u73af\u7684\u90a3\u4e00\u523b\uff0c\u4f60\u7684\u5b87\u5b99\u5c31\u5206\u652f\u6210\u4e86\u8bb8\u591a\u5b87\u5b99\u3002\u5728\u8fd9\u4e2a\u5b87\u5b99\u4e2d\uff0c\u60a8\u7f16\u5199\u4e86\u4e00\u4e2afor\u5faa\u73af\uff0c\u4f46\u5728\u53e6\u4e00\u4e2a\u5b87\u5b99\u4e2d\uff0c\u60a8\u7f16\u5199\u4e86\u4e00\u4e2awhile\u5faa\u73af\u3002\n\u6211\u5df2\u7ecf\u7f16\u5199\u4e86\u4e00\u4e2aJavaScript\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u4e0d\u540c\u7684\u4e16\u754c\u4e2d\u63a2\u7d22\u60a8\u7684\u4ee3\u7801\u3002\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5df4\u522b\u5854\u63d2\u4ef6\uff0c\u53ef\u4ee5\u968f\u673a\u5730\u5bf9\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u8f6c\u6362\uff0c\u8fd9\u53ef\u4ee5\u5f52\u56e0\u4e8e\u4eba\u7c7b\u7684\u51b3\u7b56\uff0c\u4ece\u800c\u6a21\u62df\u4f60\u53ef\u80fd\u5728\u53e6\u4e00\u4e2a\u4e16\u754c\u5199\u7684\u4ee3\u7801\u3002\n\u4e3a\u4e86\u6a21\u62df\u5176\u4ed6\u9886\u57df\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u5217\u51fa\u4e86\u53ef\u80fd\u5e94\u7528\u4e8e\u60a8\u7684\u4ee3\u7801\u7684\u6240\u6709\u8f6c\u6362\u3002\n\u5982\u679c\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u5de5\u5177\u8fd0\u884cFizzBuzz\u793a\u4f8b\uff0c\u5b83\u5c06\u6253\u5370\u51fa\u4e00\u68f5\u5b87\u5b99\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u5305\u542b\u60a8\u5728\u6a21\u62df\u9762\u8bd5\u671f\u95f4\u53ef\u80fd\u5728\u5176\u4ed6\u5b87\u5b99\u4e2d\u7f16\u5199\u7684\u4ee3\u7801\u3002\n\u5b87\u5b99{\u6df1\u5ea6\uff1a0\uff0c\u6570\u636e\uff1a{//\u539f\u59cb\u7236\u5b87\u5b99\u540d\u79f0\uff1a&#39\uff1b\u4e16\u754c0&#39\uff1b\uff0c\u4ee3\u7801\uff1a&#39\uff1bfor(\u8bbei=1\uff1bi&lt\uff1b=100\uff1bi++){\\n&#39\uff1b+&#39\uff1bif(i%15==0){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizzbuzz&#39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(I%3=0){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(I%5=0){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bBuzz&#39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else{\\n&#39\uff1b+&#39\uff1b+&#39\uff1bconsole.\u3002\\n&#39\uff1b+&#39\uff1b}\\n&#39\uff1b+&#39\uff1b}\uff0c\u5b50\u4ee3\uff1a[\u8bed\u4e49\u5c42{\u6df1\u5ea6\uff1a1\uff0c\u6570\u636e\uff1a{//\u5907\u7528\u5b50\u8bed\u4e49\u5c42\u540d\u79f0\uff1a&#39\uff1b\u4e16\u754c0=&gt\uff1b\u4e16\u754c0\u2080&#39\uff1b\uff0c\u4ee3\u7801\uff1a&#39\uff1b\u5bf9\u4e8e(\u8bbei=2\uff1bi&lt\uff1b=99\uff1bi++){\\n&#39\uff1b+&#39\uff1bIf(0=14%i){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizzBuzz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(2%i=1){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(0==6/i){\\n&\u3002console.log(&#39\uff1bbuzz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}\u5426\u5219{\\n&#39\uff1b+&#39\uff1b+&#39\uff1b}\\n&#39\uff1b+&#39\uff1b}\\n&#39\uff1b+&#39\uff1b}}\uff0c\u8bed\u4e49\u5c42{\u6df1\u5ea6\uff1a1\uff0c\u6570\u636e\uff1a{//\u53e6\u4e00\u4e2a\u5907\u7528\u5b50\u8bed\u4e49\u5c42\u540d\u79f0\uff1a&#39\uff1bWorld 0=&gt\uff1bWorld 0\u2081&#39\uff1b\uff0c\u4ee3\u7801\uff1a&#39\uff1blet i=2\uff1b\\n&#39\uff1b+&#39\uff1b\u800c(101&gt\uff1b=i){\\n&#39\uff1b+&#39\uff1bif(15%i=0){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizzbuzz&#39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(I%4=1){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bFizz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else If(I%4&lt\uff1b=0){\\n&#39\uff1b+&#34\uff1bconsole.log(&#39\uff1bBuzz&39\uff1b)\uff1b\\n&#34\uff1b+&#39\uff1b}Else{\\n&#39\uff1b+&#39\uff1bconsole.log(I)\uff1b\\n&#39\uff1b+&#39\uff1b}\\n&#39\uff1b+&#39\uff1b\\n&#39\uff1b+&#39\uff1bi++\\n&#39\uff1b+&#39\uff1b}&#39\uff1b}}]}\u3002\n\u201c\u6a21\u62df\u5047\u8bf4\u6216\u6a21\u62df\u7406\u8bba\u8ba4\u4e3a\uff0c\u6240\u6709\u73b0\u5b9e\uff0c\u5305\u62ec\u5730\u7403\u548c\u5b87\u5b99\uff0c\u5b9e\u9645\u4e0a\u90fd\u662f\u4eba\u5de5\u6a21\u62df\uff0c\u5f88\u53ef\u80fd\u662f\u8ba1\u7b97\u673a\u6a21\u62df\u3002\u201d--\u7ef4\u57fa\u767e\u79d1(wikipedia.org)\u3002\n\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u60a8\u53ef\u80fd\u8fd8\u559c\u6b22\u5256\u6790JavaScript Quine\u6216\u7f16\u5199\u60a8\u81ea\u5df1\u7684JavaScript\u6a21\u677f\u6807\u8bb0\u3002", "note_en": "What if you could explore your code in another universe?(Cue music:   Also sprach Zarathustra, Op. 30 \u2013 Strauss)This is the question that popped into my mind after watching Sean Carroll\u2019s talkon the many-worlds interpretation of quantum mechanics.\n     The many-worlds interpretation of quantum mechanics imagines our universe as onenode in an infinitely branching tree of universes where every possible quantumoutcome exists in its own universe. And each time a universe branches, itcreates a child universe that is slightly different from the parent universe,e.g., universal constants such as gravity and the speed of light might differ.\n graph TDy(&#34;Universe&#34;)y --&gt; y_0(&#34;Universe 0&#34;)y --&gt; y_1(&#34;Universe 1&#34;)y_0 --&gt; y_00(&#34;Universe 00&#34;)y_0 --&gt; y_01(&#34;Universe 01&#34;)y_1 --&gt; y_10(&#34;Universe 10&#34;)y_1 --&gt; y_11(&#34;Universe 11&#34;)\n  Imagine that you are in a job interview, and you are asked to write FizzBuzz(which is probably a hint that you are in a simulation [1]).You decide to use a for-loop so you write the following code.\n 1 for  ( let  i  =  1 ;  i  &lt;=  100 ;  i ++ )  {  2  if  ( i  %  15  ===  0 )  {  3  console . log ( &#39;FizzBuzz&#39; );  4  }  else  if  ( i  %  3  ===  0 )  {  5  console . log ( &#39;Fizz&#39; );  6  }  else  if  ( i  %  5  ===  0 )  {  7  console . log ( &#39;Buzz&#39; );  8  }  else  {  9  console . log ( i ); 10  } 11 }\n According to the many-worlds interpretation of quantum mechanics, your universebranched into many universes the moment you decided to use a for-loop. In thisuniverse you wrote a for-loop, but in another universe you wrote a while-loop.\n  I\u2019ve written a JavaScript command-line tool that allows you to explore your codein alternate universes. It\u2019s essentially a Babel plugin that randomly appliestransformations to your code that could be attributed to human decision makingtherefore simulating code you might have written in another universe.\n Here\u2019s a list of all the transformations that might be applied to your code inorder to simulate outcomes in other universes.\n    If we run the FizzBuzz example through the command-line tool, it will print outa binary tree of universes containing code you might have written in otheruniverses during your simulated interview.\n  Universe  {  depth :  0 ,  data :  {   // Original parent universe    name :  &#39;World 0&#39; ,   code :  &#39;for (let i = 1; i &lt;= 100; i++) {\\n&#39;  +   &#39; if (i % 15 === 0) {\\n&#39;  +   &#34; console.log(&#39;FizzBuzz&#39;);\\n&#34;  +   &#39; } else if (i % 3 === 0) {\\n&#39;  +   &#34; console.log(&#39;Fizz&#39;);\\n&#34;  +   &#39; } else if (i % 5 === 0) {\\n&#39;  +   &#34; console.log(&#39;Buzz&#39;);\\n&#34;  +   &#39; } else {\\n&#39;  +   &#39; console.log(i);\\n&#39;  +   &#39; }\\n&#39;  +   &#39;}&#39;  },  children :  [  Universe  {  depth :  1 ,  data :  {   // Alternate child universe    name :  &#39;World 0 =&gt; World 0\u2080&#39; ,   code :  &#39;for (let i = 2; i &lt;= 99; i++) {\\n&#39;  +   &#39; if (0 === 14 % i) {\\n&#39;  +   &#34; console.log(&#39;FizzBuzz&#39;);\\n&#34;  +   &#39; } else if (2 % i === 1) {\\n&#39;  +   &#34; console.log(&#39;Fizz&#39;);\\n&#34;  +   &#39; } else if (0 == 6 / i) {\\n&#39;  +   &#34; console.log(&#39;Buzz&#39;);\\n&#34;  +   &#39; } else {\\n&#39;  +   &#39; console.log(i);\\n&#39;  +   &#39; }\\n&#39;  +   &#39;}&#39;  }  },  Universe  {  depth :  1 ,  data :  {   // Another alternate child universe    name :  &#39;World 0 =&gt; World 0\u2081&#39; ,   code :  &#39;let i = 2;\\n&#39;  +   &#39;\\n&#39;  +   &#39;while (101 &gt;= i) {\\n&#39;  +   &#39; if (15 % i === 0) {\\n&#39;  +   &#34; console.log(&#39;FizzBuzz&#39;);\\n&#34;  +   &#39; } else if (i % 4 === 1) {\\n&#39;  +   &#34; console.log(&#39;Fizz&#39;);\\n&#34;  +   &#39; } else if (i % 4 &lt;= 0) {\\n&#39;  +   &#34; console.log(&#39;Buzz&#39;);\\n&#34;  +   &#39; } else {\\n&#39;  +   &#39; console.log(i);\\n&#39;  +   &#39; }\\n&#39;  +   &#39;\\n&#39;  +   &#39; i++\\n&#39;  +   &#39;}&#39;  }  }  ] }\n \u201cThe simulation hypothesis or simulation theory proposes that all of reality, including the Earth and the universe, is in fact an artificial simulation, most likely a computer simulation.\u201d \u2013  wikipedia.org\n  If you liked this post, you might also like Dissecting a JavaScript Quine or  Write Your Own JavaScript Template Tag.", "posttime": "2020-05-16 05:38:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u4e16\u754c,interpretation,\u5b87\u5b99", "title": "JavaScript\u7684\u591a\u4e16\u754c\u89e3\u91ca", "title_en": "The Many-Worlds Interpretation of JavaScript", "transed": 1, "url": "https://hachibu.net/posts/2020/the-many-worlds-interpretation-of-javascript/", "via": "", "real_tags": ["java", "\u4e16\u754c", "\u5b87\u5b99"]}, {"category": "", "categoryclass": "", "imagename": "f50398f59c7daa90853d64e8c5e5f79a.jpeg", "infoid": 1002312, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5dde\u5927\u5b66\u5723\u514b\u9c81\u65af\u5206\u6821\u7684\u8b66\u5bdf\u5229\u7528\u519b\u4e8b\u76d1\u89c6\u8bbe\u5907\u5bf9\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u7814\u7a76\u751f\u201c\u91ce\u732b\u201d\u7f62\u5de5\u8fdb\u884c\u4e86\u76d1\u89c6\u548c\u76d1\u7ba1\u3002", "note_en": "UC Santa Cruz police utilized military surveillance equipment to surveil and police the graduate student 'wildcat' strike earlier this year. ", "posttime": "2020-05-16 05:38:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8b66\u65b9,police,\u76d1\u89c6", "title": "\u52a0\u5dde\u8b66\u65b9\u5728\u7814\u7a76\u751f\u7f62\u5de5\u4e2d\u4f7f\u7528\u519b\u4e8b\u76d1\u63a7\u6280\u672f", "title_en": "California Police Used Military Surveillance Tech at Grad Student Strike", "transed": 1, "url": "https://www.vice.com/en_us/article/7kppna/california-police-used-military-surveillance-tech-at-grad-student-strike", "via": "", "real_tags": ["\u8b66\u65b9", "police", "\u76d1\u89c6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002311, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u578b\u79d1\u6280\u516c\u53f8\u6700\u8fd1\u4e00\u76f4\u53d7\u5230\u8054\u90a6\u76d1\u7ba1\u673a\u6784\u8d8a\u6765\u8d8a\u4e25\u683c\u7684\u5ba1\u67e5\u3002\u636e\u62a5\u9053\uff0c\u51e0\u5bb6\u79d1\u6280\u516c\u53f8\u6b63\u5728\u63a5\u53d7\u8c03\u67e5\uff0c\u4f46\u672c\u4e13\u680f\u53ea\u9488\u5bf9\u4e9a\u9a6c\u900a\uff0c\u5b83\u4f3c\u4e4e\u6210\u4e3a\u76d1\u7ba1\u7684\u9776\u5b50\uff0c\u90e8\u5206\u539f\u56e0\u662f\u7279\u6717\u666e\u603b\u7edf\u4e0d\u559c\u6b22\u4e9a\u9a6c\u900a\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u6770\u592b\u00b7\u8d1d\u4f50\u65af\uff0c\u4ed6\u4e5f\u62e5\u6709\u7279\u6717\u666e\u6700\u4e0d\u559c\u6b22\u7684\u62a5\u7eb8\u4e4b\u4e00\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u7279\u6717\u666e\u62c6\u5206\u4e9a\u9a6c\u900a\u7684\u76ee\u6807\u53ea\u4f1a\u8ba9\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u81f3\u5c11\u589e\u52a0350\u4ebf\u7f8e\u5143\u7684\u8d22\u5bcc\u3002\n\u8fd9\u5f88\u7b80\u5355\uff1a\u4e9a\u9a6c\u900a\u7684\u4ef7\u503c\u8981\u6bd4\u4f5c\u4e3a\u4e00\u5bb6\u5355\u4e00\u516c\u53f8\u7684\u4ef7\u503c\u9ad8\u5f97\u591a\u3002\n\u8d1d\u4f50\u65af\u4e0d\u662f\u50bb\u74dc\uff0c\u6240\u4ee5\u4ed6\u5bf9\u81ea\u5df1\u7684\u516c\u53f8\u4e86\u5982\u6307\u638c\u3002\u4e5f\u8bb8\u5bf9\u4ed6\u6765\u8bf4\uff0c\u5df2\u7ecf\u662f\u8fd9\u4e2a\u661f\u7403\u4e0a\u6700\u5bcc\u6709\u7684\u4eba\u5c31\u8db3\u591f\u4e86\u3002\u65e0\u8bba\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u8d1d\u4f50\u65af\u76ee\u524d\u4f3c\u4e4e\u5e0c\u671b\u8ba9\u4e9a\u9a6c\u900a\u4fdd\u6301\u5b8c\u597d\u65e0\u635f\u3002\n\u5e74\u8f7b\u7684\u884c\u4e1a\u5f80\u5f80\u6709\u5e74\u8f7b\u7684\u521b\u59cb\u4eba\u548c\u9996\u5e2d\u6267\u884c\u5b98-\u901a\u5e38\u662f\u4ece\u672a\u5728\u5176\u4ed6\u5730\u65b9\u5de5\u4f5c\u8fc7\u7684\u4eba\u3002\u4ed6\u4eec\u901a\u5e38\u662f\u4e0d\u4f1a\u88ab\u8003\u8651\u4ece\u4e8b\u4ed6\u4eec\u7684\u5de5\u4f5c\u7684\u4eba\uff0c\u5f53\u7136\uff0c\u9664\u975e\u4ed6\u4eec\u62e5\u6709\u8fd9\u5bb6\u8fde\u9501\u5e97\u3002\u56e0\u6b64\uff0c\u79d1\u6280\u516c\u53f8\u7684\u9996\u5e2d\u6267\u884c\u5b98\u4eec\u6709\u76f8\u5f53\u591a\u7684\u9752\u5c11\u5e74\u884c\u4e3a\uff0c\u4ed6\u4eec\u8fd8\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u4e3a\u6240\u6b32\u4e3a\u5e76\u4e0d\u603b\u662f\u6709\u7ecf\u6d4e\u610f\u4e49\u7684\u3002\u6709\u5f88\u591a\u4f8b\u5b50\u8868\u660e\uff0c\u79d1\u6280\u516c\u53f8\u7684\u8fd0\u8425\u7eaf\u7cb9\u662f\u51fa\u4e8e\u4e00\u65f6\u5174\u8d77\uff0c\u6709\u65f6\uff0c\u5373\u4f7f\u5728CEO\u79bb\u804c\u540e\uff0c\u8fd9\u4e9b\u7a81\u53d1\u5947\u60f3\u4ecd\u7136\u4f1a\u5236\u5ea6\u5316\u3002\u5728Facebook\u3001Google\u3001Twitter\u548c\u5176\u4ed6\u8bb8\u591a\u5730\u65b9\u90fd\u6709\u5f88\u591a\u8fd9\u6837\u7684\u6545\u610f\u884c\u4e3a\uff0c\u5c31\u50cf\u8fc7\u53bb\u50cf\u96c5\u864e\u8fd9\u6837\u7684\u516c\u53f8\u73b0\u5728\u5df2\u7ecf\u6d88\u5931\u4e86\u4e00\u6837\u3002\n\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u572820\u591a\u5c81\u7684\u65f6\u5019\u66fe\u5728\u51e0\u5bb6\u516c\u53f8\u5de5\u4f5c\u8fc7\uff0c\u5728\u521b\u7acb\u4e9a\u9a6c\u900a\u4e4b\u524d\uff0c\u4ed6\u4e0d\u80fd\u88ab\u6307\u8d23\u7f3a\u4e4f\u7ecf\u9a8c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6b63\u662f\u4ed6\u7684\u7ba1\u7406\u6280\u80fd\u5e2e\u52a9\u4e9a\u9a6c\u900a\u591a\u5e74\u6765\u84ec\u52c3\u53d1\u5c55\uff0c\u7279\u522b\u662f\u5728\u534e\u5c14\u8857\u3002\u4f46\u5373\u4f7f\u662f\u8d1d\u4f50\u65af\u4e5f\u60f3\u8981\u4ed6\u7684\u65b9\u5f0f\uff0c\u663e\u7136\u4ed6\u66f4\u5e0c\u671b\u4e9a\u9a6c\u900a\u4fdd\u6301\u5b8c\u597d\u65e0\u635f\uff0c\u65e0\u8bba\u8fd9\u662f\u5426\u5408\u7406\u3002\n\u8003\u8651\u4e00\u4e0b\u4e9a\u9a6c\u900a(Amazon)\u7684\u96f6\u6563\u60c5\u51b5\u3002\u4e9a\u9a6c\u900a\u6210\u7acb\u4e8e1994\u5e74\uff0c\u53d1\u660e\u4e86\u7535\u5b50\u5546\u52a1\uff0c\u4eca\u5929\u662f\u8be5\u9886\u57df\u65e0\u53ef\u4e89\u8bae\u7684\u5de8\u5934\u3002\u4e9a\u9a6c\u900aWeb\u670d\u52a1\u4e5f\u4eceWeb2.0\u5f00\u59cb\u53d1\u660e\u4e86\u4e91\u670d\u52a1\u884c\u4e1a\uff0c\u81f3\u4eca\u4ecd\u662f\u6700\u5927\u7684\u516c\u5171\u4e91\u53c2\u4e0e\u8005\u3002\u4e9a\u9a6c\u900a\u4e5f\u662f\u89c6\u9891\u5185\u5bb9\u548c\u97f3\u4e50\u7684\u91cd\u8981\u521b\u5efa\u8005\u548c\u53d1\u884c\u5546(\u5728\u8fd9\u4e2a\u6b63\u5728\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u65b0\u884c\u4e1a\u7684\u884c\u4e1a\u91cc\uff0c\u5b83\u4e0d\u662f\u6700\u5927\u7684\uff0c\u800c\u662f\u7b2c\u4e8c\u6216\u7b2c\u4e09)\u3002\u4e9a\u9a6c\u900a\u4ee5Kindle\u4e3b\u5bfc\u7535\u5b50\u4e66\u51fa\u7248\uff0c\u4ee5Audible\u4e3b\u5bfc\u6709\u58f0\u56fe\u4e66\u51fa\u7248\u3002\u522b\u5fd8\u4e86\u4e9a\u9a6c\u900a\u4ecd\u7136\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u7eb8\u8d28\u4e66\u9500\u552e\u5546\u3002\u4e9a\u9a6c\u900a\u8fd8\u5efa\u7acb\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u8fd0\u8f93\u4e1a\u52a1\uff0c\u5982\u679c\u5b83\u9009\u62e9\u8fd9\u6837\u505a\uff0c\u53ef\u80fd\u4f1a\u4e0e\u8054\u90a6\u5feb\u9012(FedEx)\u548c\u8054\u5408\u5305\u88f9(UPS)\u7ade\u4e89\u3002\n\u8fd9\u81f3\u5c11\u662f\u4e9a\u9a6c\u900a\u7684\u4e94\u9879\u622a\u7136\u4e0d\u540c\u7684\u4e1a\u52a1\uff0c\u6bcf\u9879\u4e1a\u52a1\u7684\u4ef7\u503c\u90fd\u5c06\u8fbe\u5230\u6570\u767e\u4ebf\u7f8e\u5143-\u5176\u4e2d\u4e00\u4e9b\u4ef7\u503c\u6570\u5343\u4ebf\u7f8e\u5143\u3002\n\u6fc0\u8fdb\u7684\u5bf9\u51b2\u57fa\u91d1\u53ef\u80fd\u4f1a\u770b\u5230\u62c6\u5206\u4e9a\u9a6c\u900a\u7684\u76c8\u5229\u673a\u4f1a\uff0c\u5e76\u63d0\u8bae\u8fd9\u4e48\u505a\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u53d1\u751f\u3002\u4e9a\u9a6c\u900a\u592a\u5927\u4e86\u3002\u4e9a\u9a6c\u900a\u7684\u5e02\u503c\u7ea6\u4e3a1.2\u4e07\u4ebf\u7f8e\u5143\uff0c\u8fd9\u6837\u7684\u57fa\u91d1-\u6bd4\u5982\u76ee\u524d\u6b63\u5728\u4e0eTwitter\u6253\u4ea4\u9053\u7684\u57c3\u5229\u5965\u7279\u7ba1\u7406\u516c\u53f8(Elliott Management)-\u5c06\u4e0d\u5f97\u4e0d\u4ee5\u7ea6660\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\u4e9a\u9a6c\u900a5.5%\u7684\u80a1\u4efd\uff0c\u624d\u80fd\u5f15\u8d77\u8d1d\u4f50\u65af\u7684\u6ce8\u610f\u3002\u57c3\u5229\u5965\u7279\u7ba1\u7406\u516c\u53f8\u6ca1\u6709\u90a3\u79cd\u6218\u5229\u54c1\u3002\n\u51fa\u4e8e\u5b8c\u5168\u76f8\u540c\u7684\u539f\u56e0\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u770b\u5230\u4efb\u4f55\u6fc0\u8fdb\u5206\u5b50\u5728Alphabet\u3001\u82f9\u679c\u6216\u5fae\u8f6f\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\u3002\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u5b83\u4eec\u90fd\u592a\u5927\u4e86\uff0c\u4e0d\u80fd\u7834\u4ea7\uff0c\u8fd9\u5c31\u662f\u7559\u7ed9\u7f8e\u8054\u50a8\u548c\u6b27\u76df\u7684\u539f\u56e0\u3002\n\u5982\u679c\u6709\u4e00\u5bb6\u89c4\u6a21\u5927\u5230\u8db3\u4ee5\u6b3a\u8d1f\u4e9a\u9a6c\u900a\u7684\u7ef4\u6743\u57fa\u91d1\uff0c\u4ed6\u4eec\u4f1a\u8fd9\u6837\u5411\u4ed6\u4eec\u7684\u9ad8\u5c14\u592b\u4f19\u4f34\u6295\u8d44\u8005\u89e3\u91ca\u3002\u628a\u8fd9\u770b\u4f5c\u662f\u4e00\u4e2a\u9ad8\u6982\u5ff5\u7684\u7535\u89c6\u6216\u7535\u5f71\u63a8\u4ecb\u4f1a(\u662f\u7684\uff0c\u786e\u5b9e\u662f\u8fd9\u6837)\u3002\u4e9a\u9a6c\u900a\u4e0d\u53ea\u662f\u4e9a\u9a6c\u900a\uff1a\u4e00\u4e2a\u652f\u79bb\u7834\u788e\u7684\u4e9a\u9a6c\u900a\u770b\u8d77\u6765\u50cf\u662f\u6c83\u5c14\u739b(\u4eca\u5929\u7684\u5e02\u503c\u4e3a3500\u4ebf\u7f8e\u5143)\u3001\u5fae\u8f6f(\u4eca\u5929\u7684\u5e02\u503c\u4e3a1.42\u4e07\u4ebf\u7f8e\u5143)\u3001Netflix\u7684\u4e00\u534a(\u4eca\u5929\u7684\u5e02\u503c\u4e3a1930\u4ebf\u7f8e\u5143\uff0c\u56e0\u6b64\u4e3a960\u4ebf\u7f8e\u5143)\u3001\u4f01\u9e45\u5170\u767b\u4e66\u5c4b(Penguin Random House)\u548c\u5df4\u8bfa(Barnes\uff1bNoble)(\u4eca\u5929\u7684\u5e02\u503c\u4e3a25\u4ebf\u7f8e\u5143-\u5728\u8fd9\u4e2a\u8ba1\u7b97\u4e2d\u751a\u81f3\u4e0d\u662f\u4e00\u4e2a\u820d\u5165\u8bef\u5dee)\u3001Spotify\u7684\u4e09\u5206\u4e4b\u4e00(\u4eca\u5929\u7684\u5e02\u503c\u4e3a290\u4ebf\u7f8e\u5143\uff0c\u56e0\u6b64\u662f90\u4ebf\u7f8e\u5143)\u548c\u5341\u5206\u4e4b\u4e00\u7684\u7ec4\u5408(\u4eca\u5929\u7684\u5e02\u503c\u4e3a3500\u4ebf\u7f8e\u5143)\uff0c\u4ee5\u53caNetflix\u7684\u4e00\u534a(\u4eca\u5929\u7684\u5e02\u503c\u4e3a1930\u4ebf\u7f8e\u5143\uff0c\u56e0\u6b64\u4e3a960\u4ebf\u7f8e\u5143)\uff0c\u4ee5\u53caSpotify\u7684\u5341\u5206\u4e4b\u4e00\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u4e9a\u9a6c\u900a\u7684\u603b\u5e02\u503c\u4e3a1.88\u4e07\u4ebf\u7f8e\u5143\uff0c\u9ad8\u4e8e\u76ee\u524d1.2\u4e07\u4ebf\u7f8e\u5143\u7684\u5e02\u503c\u3002\n\u57fa\u4e8e\u8d1d\u4f50\u65af\u62e5\u6709\u4e9a\u9a6c\u900a11%\u7684\u80a1\u4efd\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ed6\u7684\u80a1\u7968\u4ef7\u503c\u5c06\u4ece1320\u4ebf\u7f8e\u5143\u589e\u52a0\u52302060\u4ebf\u7f8e\u5143\uff0c\u589e\u52a0740\u4ebf\u7f8e\u5143\u3002\n\u4f60\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\u8fd9\u4e9b\u6570\u5b57\u662f\u9519\u8bef\u7684\uff0c\u7279\u522b\u662f\u5fae\u8f6f\u7684\u8d21\u732e\u3002\u4f46\u5982\u679c\u4f60\u542c\u4e00\u4e0b\u6700\u8fd1\u7684\u5fae\u8f6f\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\uff0c\u770b\u770b\u5206\u6790\u5e08\u4eec\u5bf9\u8be5\u516c\u53f8\u7684\u8bc4\u8bba\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5fae\u8f6f1.42\u4e07\u4ebf\u7f8e\u5143\u7684\u5e02\u503c\u4e2d\uff0c\u5927\u90e8\u5206\u4f3c\u4e4e\u90fd\u5f52\u529f\u4e8e\u4ed6\u4eec\u7684\u4e91\u4ea7\u54c1Azure\uff0c\u800c\u4e0d\u662fWindows\u6216Office\u6216\u786c\u4ef6\u3002\n\u5373\u4f7f\u4f60\u5c06\u76f8\u5f53\u4e8e\u5fae\u8f6f\u7684\u4efd\u989d\u6253\u6298\u56db\u5206\u4e4b\u4e00\uff0c\u81f31.065\u4e07\u4ebf\u7f8e\u5143\uff0c\u4e9a\u9a6c\u900a\u7684\u88ab\u80a2\u89e3\u4ef7\u503c\u4ecd\u4e3a1.52\u4e07\u4ebf\u7f8e\u5143\uff0c\u4f7f\u8d1d\u4f50\u65af\u589e\u52a0\u4e86350\u4ebf\u7f8e\u5143\u7684\u8d22\u5bcc\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u8d1d\u4f50\u65af\u7684\u51c0\u8d44\u4ea7\u4e0d\u4ec5\u4ec5\u7531\u4e9a\u9a6c\u900a\u6784\u6210\u3002\u798f\u5e03\u65af\u79f0\uff0c\u622a\u81f3\u4eca\u5929\u4e0a\u5348\uff0c\u4ed6\u7684\u603b\u8eab\u4ef7\u4e3a1434\u4ebf\u7f8e\u5143\u3002\u518d\u52a0\u4e0a350\u4ebf\u7f8e\u5143\uff0c\u603b\u8ba1\u81f3\u5c111784\u4ebf\u7f8e\u5143\u3002\n\u6bd4\u65b9\u8bf4\uff0c\u7279\u6717\u666e\u603b\u7edf\u8bfb\u4e86\u8fd9\u7bc7\u4e13\u680f(\u6216\u8005\u798f\u514b\u65af\u65b0\u95fb(Fox News)\u4e0a\u7684\u67d0\u4e2a\u4eba\u63d0\u5230\u4e86\u5b83\uff0c\u8fd9\u662f\u66f4\u6709\u53ef\u80fd\u7684)\uff0c\u5e76\u51b3\u5b9a\u4e0d\u8ba9\u8d1d\u4f50\u65af\u53d8\u5f97\u66f4\u5bcc\u6709\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cLiberty Media\u7684\u7ea6\u7ff0\u00b7\u9a6c\u9f99(John Malone)\u53ef\u4ee5\u4e3a\u8d1d\u4f50\u65af\u63d0\u4f9b\u5efa\u8bae\uff0c\u8ba9\u4e9a\u9a6c\u900a\u4fdd\u6301\u5728\u4e00\u8d77\uff0c\u540c\u65f6\u901a\u8fc7\u4f7f\u7528\u8ddf\u8e2a\u80a1\u7968\u83b7\u5f97\u5927\u90e8\u5206\u9644\u52a0\u503c\u3002\u8fd9\u4e9b\u662f\u72ec\u7acb\u4ea4\u6613\u7684\u80a1\u7968\uff0c\u4e0e\u4e9a\u9a6c\u900a\u7279\u5b9a\u90e8\u95e8\u7684\u8d22\u52a1\u4e1a\u7ee9\u6302\u94a9\u3002\u9a6c\u9f99\u7ecf\u5e38\u4f7f\u7528\u8ddf\u8e2a\u80a1\u7968\u6765\u63d0\u5347Liberty\u7684\u5e02\u503c\uff0c\u800c\u4e14\u6548\u679c\u5f88\u597d\u3002\u4e5f\u8bb8\u5b83\u7684\u6548\u7387\u53ea\u670975%\uff0c\u4f46\u5b83\u6d89\u53ca\u7684\u6587\u4e66\u5de5\u4f5c\u548c\u6295\u8d44\u94f6\u884c\u5bb6\u8d39\u7528\u8981\u5c11\u5f97\u591a\u3002\n\u5982\u679c\u4e9a\u9a6c\u900a(\u4e0d\u4ec5\u4ec5\u662f\u8d1d\u4f50\u65af)\u60f3\u8981\u770b\u8d77\u6765\u66f4\u5927\uff0c\u6216\u8bb8\u60f3\u501f\u66f4\u591a\u7684\u94b1\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u8fd9\u6b21\u9ed1\u5ba2\u653b\u51fb\u4e3a\u516c\u53f8\u989d\u5916\u8bc1\u660e3200\u4ebf\u7f8e\u5143\u7684\u865a\u62df\u5e02\u503c\u662f\u5408\u7406\u7684\u3002\n\u662f\u7684\uff0c\u4f46\u6211\u4eec\u5373\u5c06\u9677\u5165\u8870\u9000\uff0c\u8fd9\u4e0d\u4f1a\u4f24\u5bb3\u4e9a\u9a6c\u900a\u548c\u7f8e\u56fd\u7684\u5176\u4ed6\u6240\u6709\u4f01\u4e1a\u5417\uff1f\n\u57fa\u4e8e\u76ee\u524d\u7684\u8fd9\u4e9b\u4e1a\u52a1\uff0c\u6211\u4f1a\u8bf4\u201c\u4e0d\u201d\u3002\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u4e0d\u4f1a\u8f93\u7684\u3002", "note_en": "Big technology companies have been recently coming under increased scrutiny from federal regulators. Several tech companies are reportedly under investigation, but this column is only about Amazon, which seems to be in regulatory crosshairs in part because President Trump  doesn\u2019t like Amazon founder and CEO  Jeff Bezos, who also owns one of Trump\u2019s least-favorite newspapers, the   Washington Post. Ironically, Trump\u2019s goal of breaking-up Amazon would only make Jeff Bezos  at least $35 billion richer.\n It\u2019s simple: Amazon is worth a lot more in pieces than it is as a single company.\n Bezos is no fool, so he knows this about his company. Maybe being already the richest man on the planet is enough for him. Whatever the reason, Bezos, for now, seems to want to keep Amazon in one piece.\n Young industries tend to have young founders and CEOs \u2014 often people who have never worked anywhere else. They are often people who would not be considered for their jobs except, of course, they own the joint. So there\u2019s a fair amount of juvenile behavior from tech CEOs who have yet to realize that it doesn\u2019t always make financial sense to get your own way. There are many examples of tech businesses being run purely on a whim and sometimes those whims remain institutionalized even after the CEO\u2019s departure. There\u2019s plenty of such willful behavior at places like Facebook, Google, Twitter, and many others just as there used to be at companies now gone like Yahoo.\n Jeff Bezos  worked at several companies throughout his 20s and can\u2019t be accused of lacking experience before founding Amazon. In fact, it\u2019s his managerial skill that helped Amazon thrive over the years, especially on Wall Street. But even Bezos wants his way and would apparently prefer that Amazon remain in one piece whether that makes sense or not.\n Consider Amazon in pieces. Founded in 1994, Amazon invented e-commerce and is today the undisputed giant in that field. Amazon Web Services invented, too, the cloud services industry starting with Web 2.0, and remains by far the biggest public cloud player. Amazon is also a substantial creator and distributor of video content and music (not the biggest but second or third in what is becoming a huge new industry). Amazon dominates eBook publishing with Kindle and audiobook publishing with Audible. Don\u2019t forget that Amazon remains the world\u2019s largest seller of printed books, too. Amazon has also built a huge shipping operation that could compete with FedEx and UPS if it chose to do so.\n That\u2019s at least five distinct Amazon businesses that would each be worth tens \u2014 some of them hundreds \u2014 of billions of dollars.\n An activist hedge fund might see the profit opportunity in tearing Amazon apart and propose to do just that, except it won\u2019t happen. Amazon is too large. With Amazon worth around $1.2  trillion, such a fund \u2014 like an  Elliott Management, which is currently messing with Twitter \u2014 would have to buy 5.5 percent of Amazon for around $66 billion just to get Bezos\u2019 attention. Elliott Management doesn\u2019t have that kind of loot.\n For exactly this same reason you won\u2019t see any activist moves being made on Alphabet, Apple, or Microsoft, either. They are all literally too big to bust, which is what leaves it to the Feds and to the EU.\n If there was an activist fund big enough to bully Amazon, here is how they\u2019d explain it to their golf buddy investors. Think of this as a high concept TV or movie pitch meeting (yes, it  really happens like this). Amazon isn\u2019t just Amazon: an Amazon in pieces looks like a combination of Walmart (market cap today $350 billion), Microsoft (market cap today $1.42 trillion), half of a Netflix (market cap today of $193 billion, so $96 billion), Penguin Random House plus Barnes &amp; Noble (market cap today of $2.5 billion \u2014 not even a rounding error in this calculation), a third of Spotify (market cap today or $29 billion, so $9 billion), and a tenth of a FedEx based on the number of operated aircraft (market cap today of $30 billion, so $3 billion). Add it all up and the total is $1.88 trillion, up from Amazon\u2019s market cap today of $1.2 trillion.\n Based on Bezos owning 11 percent of Amazon, the value of his shares under this scenario would increase from $132 billion to $206 billion for an increase of $74 billion.\n You might argue that these numbers are wrong, especially the Microsoft contribution. But if you listen to recent Microsoft earnings calls and look at what analysts are writing about that company, most of Microsoft\u2019s $1.42 trillion market cap seems to be  attributed to Azure, their cloud offering, rather than to Windows or Office or hardware.\n Even if you discount the Microsoft-equivalent share by a quarter down to $1.065 trillion, the dismembered value of Amazon still comes out to $1.52 trillion making Bezos $35 billion richer.\n And remember, Bezos\u2019 net worth is made of more than just Amazon.  Forbes says he is worth a total of $143.4 billion as of this morning. Add $35 billion to that for a total of at least $178.4 billion.\n  Let\u2019s say President Trump reads this column (or someone on  Fox News mentions it, which is  more likely) and decides not to make Bezos even richer. In that case,  John Malone of Liberty Media could advise Bezos on ways to keep Amazon together yet gain much of that additional value through the use of  tracking stocks. These are separately traded shares that are linked to the financial performance of specific Amazon divisions. Malone has used tracking stocks a lot to get Liberty\u2019s market cap up and it works. Maybe it\u2019s only 75 percent as efficient, but then it involves a lot less paperwork and investment banker fees.\n If Amazon (not just Bezos) wanted to look bigger and perhaps borrow more money, they could pretty easily justify an extra $320 billion in virtual market cap for the company through this hack.\n Yeah, but we\u2019re going into a recession, isn\u2019t that going to hurt Amazon along with every other business in America?\n Based on these businesses at this time I\u2019d say \u201cno.\u201d Jeff Bezos can\u2019t lose.", "posttime": "2020-05-16 05:37:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d1d\u4f50\u65af,\u4e0d\u80fd,bezos", "title": "\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u4e0d\u80fd\u8f93", "title_en": "Jeff Bezos Can\u2019t Lose", "transed": 1, "url": "https://www.cringely.com/2020/05/11/jeff-bezos-cant-lose/", "via": "", "real_tags": ["\u8d1d\u4f50\u65af", "\u4e0d\u80fd", "bezos"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002309, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u4ee5\u641c\u7d22\u4e0e\u7cbe\u795e\u75c5\u7406\u72b6\u6001\u7684\u53d1\u751f\u548c\u6301\u7eed\u6709\u5173\u7684\u5938\u5f20\u6216\u975e\u7406\u6027\u7684\u601d\u7ef4\u6a21\u5f0f\u3002\n\u8ba4\u77e5\u626d\u66f2\u662f\u4e00\u79cd\u5938\u5f20\u6216\u975e\u7406\u6027\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u6d89\u53ca\u5230\u7cbe\u795e\u75c5\u7406\u72b6\u6001\u7684\u5f00\u59cb\u548c\u6301\u7eed\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u66f4\u53d7\u5fc3\u7406\u793e\u4f1a\u56e0\u7d20\u5f71\u54cd\u7684\u72b6\u6001\uff0c\u5982\u6291\u90c1\u548c\u7126\u8651\u3002[1]\u7cbe\u795e\u75c5\u5b66\u5bb6\u4e9a\u4f26\u00b7T\u00b7\u8d1d\u514b\u4e3a\u7814\u7a76\u8fd9\u4e9b\u626d\u66f2\u73b0\u8c61\u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u4ed6\u7684\u5b66\u751f\u5927\u536b\u00b7D\u00b7\u4f2f\u6069\u65af\u7ee7\u7eed\u5bf9\u8fd9\u4e00\u4e3b\u9898\u8fdb\u884c\u7814\u7a76\u3002\u4f2f\u6069\u65af\u5728\u201c\u611f\u89c9\u826f\u597d\u7684\u65b0\u60c5\u7eea\u7597\u6cd5\u201d[2]\u4e00\u4e66\u4e2d\u63cf\u8ff0\u4e86\u4e0e\u8ba4\u77e5\u626d\u66f2\u53ca\u5176\u6d88\u9664\u6709\u5173\u7684\u4e2a\u4eba\u548c\u4e13\u4e1a\u8f76\u4e8b\u3002\n\u8ba4\u77e5\u626d\u66f2\u662f\u5bfc\u81f4\u4e2a\u4f53\u4e0d\u51c6\u786e\u5730\u611f\u77e5\u73b0\u5b9e\u7684\u60f3\u6cd5\u3002\u6839\u636e\u8d1d\u514b\u7684\u8ba4\u77e5\u6a21\u578b\uff0c\u6d88\u6781\u7684\u73b0\u5b9e\u89c2\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u6d88\u6781\u56fe\u5f0f(\u6216\u56fe\u5f0f)\uff0c\u662f\u60c5\u7eea\u969c\u788d\u75c7\u72b6\u548c\u8f83\u5dee\u4e3b\u89c2\u5e78\u798f\u611f\u7684\u4e00\u4e2a\u56e0\u7d20\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6d88\u6781\u7684\u601d\u7ef4\u6a21\u5f0f\u4f1a\u5f3a\u5316\u6d88\u6781\u7684\u60c5\u7eea\u548c\u60f3\u6cd5\u3002[3]\u5728\u56f0\u96be\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u626d\u66f2\u7684\u601d\u60f3\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4f53\u7684\u8d1f\u9762\u4e16\u754c\u89c2\u548c\u6291\u90c1\u6216\u7126\u8651\u7684\u7cbe\u795e\u72b6\u6001\u3002\n\u8ba4\u77e5\u6e90\u4e8e\u4e2d\u4e16\u7eaa\u62c9\u4e01\u8bedCognit\u012bvus\uff0c\u76f8\u5f53\u4e8e\u5df2\u77e5\u7684\u62c9\u4e01\u8bedCognit(Us)\u3002[4]\u626d\u66f2\u662f\u6307\u626d\u66f2\u6216\u6539\u53d8\u67d0\u7269\u7684\u771f\u5b9e\u3001\u81ea\u7136\u6216\u539f\u59cb\u72b6\u6001\u7684\u884c\u4e3a\u3002[5]\u3002\n1957\u5e74\uff0c\u963f\u5c14\u4f2f\u7279\u00b7\u57c3\u5229\u65af(Albert Ellis)\u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u4f46\u4ed6\u5c06\u5e2e\u52a9\u8ba4\u77e5\u7597\u6cd5\u7ea0\u6b63\u8ba4\u77e5\u626d\u66f2\uff0c\u5e76\u95f4\u63a5\u5e2e\u52a9\u5927\u536b\u00b7\u4f2f\u6069\u65af(David Burns)\u64b0\u5199\u201c\u611f\u89c9\u826f\u597d\u624b\u518c\u201d(Feel Good Handbook)\u3002\u57c3\u5229\u65af\u521b\u9020\u4e86\u4ed6\u6240\u8bf4\u7684\u7406\u6027\u4fe1\u5ff5\u7684ABC\u6280\u5de7\u3002ABC\u4ee3\u8868(A)\u6fc0\u6d3b\u4e8b\u4ef6\uff0c(B)\u975e\u7406\u6027\u7684\u4fe1\u5ff5\u548c(C)\u6765\u81ea\u4fe1\u5ff5\u7684\u540e\u679c\u3002\u57c3\u5229\u65af\u60f3\u8981\u8bc1\u660e\uff0c\u6fc0\u6d3b\u4e8b\u4ef6\u4e0d\u662f\u5bfc\u81f4\u60c5\u7eea\u884c\u4e3a\u6216\u540e\u679c\u7684\u539f\u56e0\uff0c\u800c\u662f\u4fe1\u5ff5\u548c\u4eba\u4eec\u5982\u4f55\u975e\u7406\u6027\u5730\u611f\u77e5\u6709\u52a9\u4e8e\u540e\u679c\u7684\u4e8b\u4ef6\u3002[6]\u901a\u8fc7\u8fd9\u79cd\u6a21\u5f0f\uff0c\u57c3\u5229\u65af\u8bd5\u56fe\u5bf9\u4ed6\u7684\u75c5\u4eba\u4f7f\u7528\u7406\u6027\u60c5\u7eea\u884c\u4e3a\u7597\u6cd5(REBT)\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u91cd\u65b0\u67b6\u6784\u6216\u4ee5\u66f4\u7406\u6027\u7684\u65b9\u5f0f\u91cd\u65b0\u89e3\u91ca\u7ecf\u9a8c\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u57c3\u5229\u65af\u4e3a\u4ed6\u7684\u5ba2\u6237\u89e3\u91ca\u4e86\u4e00\u5207\uff0c\u800c\u8d1d\u514b\u5219\u5e2e\u52a9\u4ed6\u7684\u5ba2\u6237\u81ea\u5df1\u5f04\u6e05\u695a\u8fd9\u4e00\u70b9\u3002[7]\u8d1d\u514b\u7b2c\u4e00\u6b21\u6ce8\u610f\u5230\u8fd9\u4e9b\u81ea\u52a8\u626d\u66f2\u7684\u601d\u7ef4\u8fc7\u7a0b\u662f\u5728\u7ec3\u4e60\u7cbe\u795e\u5206\u6790\u7684\u65f6\u5019\uff0c\u800c\u4ed6\u7684\u75c5\u4eba\u5219\u9075\u5faa\u7740\u8bf4\u51fa\u4efb\u4f55\u8111\u6d77\u4e2d\u60f3\u5230\u7684\u8bdd\u7684\u89c4\u5219\u3002Aaron\u610f\u8bc6\u5230\u4ed6\u7684\u75c5\u4eba\u6709\u975e\u7406\u6027\u7684\u6050\u60e7\u3001\u60f3\u6cd5\u548c\u611f\u77e5\uff0c\u8fd9\u4e9b\u90fd\u662f\u81ea\u7136\u800c\u7136\u7684\u3002\u8d1d\u514b\u5f00\u59cb\u6ce8\u610f\u5230\u4ed6\u7684\u81ea\u52a8\u601d\u7ef4\u8fc7\u7a0b\uff0c\u4ed6\u77e5\u9053\u4ed6\u7684\u75c5\u4eba\u6709\uff0c\u4f46\u6ca1\u6709\u62a5\u544a\u3002\u5927\u591a\u6570\u65f6\u5019\uff0c\u8fd9\u4e9b\u60f3\u6cd5\u90fd\u662f\u5bf9\u81ea\u5df1\u6709\u504f\u89c1\u7684\uff0c\u800c\u4e14\u662f\u975e\u5e38\u9519\u8bef\u7684\u3002[8]\u3002\n\u8d1d\u514b\u8ba4\u4e3a\uff0c\u5426\u5b9a\u56fe\u5f0f\u662f\u5728\u89c6\u89d2\u548c\u884c\u4e3a\u4e0a\u53d1\u5c55\u548c\u8868\u73b0\u51fa\u6765\u7684\u3002\u626d\u66f2\u7684\u601d\u7ef4\u8fc7\u7a0b\u5bfc\u81f4\u4e13\u6ce8\u4e8e\u8d2c\u4f4e\u81ea\u5df1\uff0c\u653e\u5927\u5c0f\u7684\u5916\u90e8\u632b\u6298\uff0c\u4f53\u9a8c\u522b\u4eba\u65e0\u4f24\u5927\u96c5\u7684\u8bc4\u8bba\uff0c\u540c\u65f6\u8ba4\u4e3a\u81ea\u5df1\u4f4e\u4eba\u4e00\u7b49\u3002\u4e0d\u53ef\u907f\u514d\u5730\uff0c\u8ba4\u77e5\u53cd\u6620\u5728\u4ed6\u4eec\u7684\u884c\u4e3a\u4e2d\uff0c\u51cf\u5c11\u4e86\u5173\u5fc3\u81ea\u5df1\u3001\u5bfb\u6c42\u5feb\u4e50\u548c\u653e\u5f03\u7684\u6b32\u671b\u3002\u8fd9\u4e9b\u7531\u4e8e\u8ba4\u77e5\u800c\u5938\u5f20\u7684\u611f\u89c9\u611f\u89c9\u771f\u5b9e\u800c\u51c6\u786e\uff0c\u56e0\u4e3a\u901a\u8fc7\u884c\u4e3a\u5f3a\u5316\u540e\u7684\u56fe\u5f0f\u5f80\u5f80\u662f\u81ea\u52a8\u7684\uff0c\u6ca1\u6709\u65f6\u95f4\u8fdb\u884c\u53cd\u601d\u3002[9]\u8fd9\u4e2a\u5faa\u73af\u4e5f\u88ab\u79f0\u4e3a\u8d1d\u514b\u8ba4\u77e5\u4e09\u90e8\u66f2\uff0c\u5173\u6ce8\u7684\u7406\u8bba\u662f\u4eba\u7684\u8d1f\u9762\u56fe\u5f0f\u9002\u7528\u4e8e\u81ea\u6211\u3001\u672a\u6765\u548c\u73af\u5883\u3002[10]\u3002\n1972\u5e74\uff0c\u7cbe\u795e\u75c5\u5b66\u5bb6\u3001\u7cbe\u795e\u5206\u6790\u5b66\u5bb6\u548c\u8ba4\u77e5\u6cbb\u7597\u5b66\u8005\u4e9a\u4f26\u00b7T\u00b7\u8d1d\u514b\u51fa\u7248\u4e86\u201c\u6291\u90c1\u75c7\uff1a\u539f\u56e0\u548c\u6cbb\u7597\u201d\u4e00\u4e66\u3002[11]\u4ed6\u5bf9\u5f17\u6d1b\u4f0a\u5fb7\u4f20\u7edf\u7684\u6291\u90c1\u75c7\u6cbb\u7597\u65b9\u6cd5\u611f\u5230\u4e0d\u6ee1\uff0c\u56e0\u4e3a\u6ca1\u6709\u7ecf\u9a8c\u8bc1\u636e\u8bc1\u660e\u5f17\u6d1b\u4f0a\u5fb7\u7cbe\u795e\u5206\u6790\u7684\u6210\u529f\u3002\u8d1d\u514b\u7684\u4e66\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5168\u9762\u7684\u548c\u7ecf\u9a8c\u652f\u6301\u7684\u6291\u90c1\u75c7\u7406\u8bba\u6a21\u578b-\u5176\u6f5c\u5728\u7684\u539f\u56e0\uff0c\u75c7\u72b6\u548c\u6cbb\u7597\u3002\u5728\u7b2c\u4e8c\u7ae0\u201c\u6291\u90c1\u75c7\u75c7\u72b6\u5b66\u201d\u4e2d\uff0c\u4ed6\u63cf\u8ff0\u4e86\u6291\u90c1\u75c7\u7684\u8ba4\u77e5\u8868\u73b0\uff0c\u5305\u62ec\u4f4e\u81ea\u6211\u8bc4\u4ef7\u3001\u8d1f\u9762\u671f\u671b\u3001\u81ea\u8d23\u548c\u81ea\u6211\u6279\u8bc4\u3001\u4f18\u67d4\u5be1\u65ad\u548c\u8eab\u4f53\u5f62\u8c61\u626d\u66f2\u3002[11]\u3002\n1980\u5e74\uff0c\u4f2f\u6069\u65af\u51fa\u7248\u4e86\u201c\u611f\u89c9\u826f\u597d\uff1a\u65b0\u60c5\u7eea\u7597\u6cd5\u201d\uff0c\u4f7f\u4e9a\u4f26\u00b7T\u00b7\u8d1d\u514b\u5bf9\u626d\u66f2\u601d\u7ef4\u7684\u65b9\u6cd5\u5e7f\u4e3a\u4eba\u77e5\u5e76\u5f97\u5230\u666e\u53ca\u3002[13]\u4f2f\u6069\u65af\u4ec5\u5728\u7f8e\u56fd\u5c31\u552e\u51fa\u4e86400\u591a\u4e07\u518c\u300a\u611f\u89c9\u826f\u597d\uff1a\u65b0\u60c5\u7eea\u7597\u6cd5\u300b\u4e00\u4e66\u3002\u8fd9\u672c\u4e66\u901a\u5e38\u662f\u4e3a\u90a3\u4e9b\u8ba4\u77e5\u626d\u66f2\u5bfc\u81f4\u6291\u90c1\u7684\u60a3\u8005\u5f00\u7684\u5904\u65b9\u3002\u8d1d\u514b\u8d5e\u540c\u8fd9\u672c\u4e66\uff0c\u4ed6\u8bf4\u8fd9\u672c\u4e66\u5c06\u901a\u8fc7\u7b80\u5316\u5e7f\u6cdb\u7684\u5b66\u4e60\u548c\u7814\u7a76\u6765\u5e2e\u52a9\u5176\u4ed6\u4eba\u6539\u53d8\u4ed6\u4eec\u7684\u6291\u90c1\u60c5\u7eea\uff0c\u8fd9\u4e9b\u5b66\u4e60\u548c\u7814\u7a76\u662f\u5728\u8d1d\u514b\u4f5c\u4e3apsy\u7684\u5b66\u751f\u548c\u5b9e\u8df5\u8005\u5f00\u59cb\u4e0d\u4e45\u4e4b\u540e\u8fdb\u884c\u7684\u3002\n\u4e0b\u9762\u5217\u51fa\u7684\u8ba4\u77e5\u626d\u66f2[14]\u662f\u81ea\u52a8\u601d\u7ef4\u7684\u7c7b\u522b\uff0c\u5c06\u4e0e\u903b\u8f91\u8c2c\u8bef\u533a\u5206\u5f00\u6765\u3002\n\u8fd9\u4e5f\u88ab\u79f0\u4e3a\u201c\u5206\u88c2\uff0c\u975e\u9ed1\u5373\u767d\u201d\u7684\u601d\u7ef4\uff0c\u5373\u4e24\u6781\u5206\u5316\u7684\u601d\u7ef4\u3002\u6709\u4e9b\u4eba\u8981\u4e48\u5168\u6709\u8981\u4e48\u5168\u65e0\u601d\u7ef4\u626d\u66f2\uff0c\u628a\u751f\u6d3b\u5206\u6210\u975e\u9ed1\u5373\u767d\u7684\u7c7b\u522b\u3002[14]\u4ed6\u4eec\u8981\u4e48\u662f\u6210\u529f\uff0c\u8981\u4e48\u662f\u5931\u8d25\uff1b\u8981\u4e48\u662f\u597d\u7684\uff0c\u8981\u4e48\u662f\u574f\u7684\uff1b\u6ca1\u6709\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u3002\u6839\u636e\u4e00\u7bc7\u6587\u7ae0\uff0c\u201c\u56e0\u4e3a\u603b\u662f\u6709\u4eba\u613f\u610f\u6279\u8bc4\uff0c\u8fd9\u5f80\u5f80\u4f1a\u5d29\u6e83\u6210\u4e00\u79cd\u4e24\u6781\u5206\u5316\u7684\u4eba\u8ba4\u4e3a\u81ea\u5df1\u5b8c\u5168\u5931\u8d25\u7684\u503e\u5411\u3002\u4e24\u6781\u5206\u5316\u7684\u601d\u60f3\u5bb6\u96be\u4ee5\u63a5\u53d7\u201c\u8db3\u591f\u597d\u201d\u6216\u90e8\u5206\u6210\u529f\u7684\u6982\u5ff5\u3002\n\u4f8b\u5b50(\u6458\u81ea\u201c\u611f\u89c9\u826f\u597d\u624b\u518c\u201d)\uff1a\u4e00\u4e2a\u5973\u5b69\u5403\u4e86\u4e00\u52fa\u51b0\u6fc0\u51cc\u3002\u5979\u8ba4\u4e3a\u81ea\u5df1\u6253\u7834\u4e86\u81ea\u5df1\u7684\u996e\u98df\u4e60\u60ef\uff0c\u662f\u4e2a\u5f7b\u5934\u5f7b\u5c3e\u7684\u5931\u8d25\u8005\u3002\u5979\u53d8\u5f97\u975e\u5e38\u6cae\u4e27\uff0c\u7ed3\u679c\u5403\u4e86\u6574\u6574\u4e00\u5938\u8131\u51b0\u6fc0\u51cc\u3002[14]\u3002\n\u8fd9\u4e2a\u4f8b\u5b50\u6355\u6349\u5230\u4e86\u8fd9\u79cd\u626d\u66f2\u7684\u4e24\u6781\u5316\u672c\u8d28--\u8fd9\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u5982\u679c\u4ed6\u4eec\u4e0d\u5b8c\u7f8e\uff0c\u4ed6\u4eec\u5c31\u5b8c\u5168\u4e0d\u591f\u3002\u4e3a\u4e86\u5bf9\u6297\u8fd9\u79cd\u626d\u66f2\uff0c\u4f2f\u6069\u65af\u5efa\u8bae\u7528\u7070\u8272\u7684\u8272\u8c03\u6765\u601d\u8003\u4e16\u754c\u3002[14]\u4f8b\u5b50\u4e2d\u7684\u5973\u5b69\u5e76\u6ca1\u6709\u56e0\u4e3a\u5403\u4e86\u4e00\u52fa\u51b0\u6fc0\u51cc\u800c\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e00\u4e2a\u5f7b\u5e95\u7684\u5931\u8d25\u8005\uff0c\u800c\u662f\u4ecd\u7136\u53ef\u4ee5\u8ba4\u8bc6\u5230\u5979\u8282\u98df\u7684\u6574\u4f53\u52aa\u529b\u81f3\u5c11\u662f\u90e8\u5206\u6210\u529f\u7684\u3002\n\u5728\u8bc1\u636e\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\u4ed3\u4fc3\u4e0b\u7ed3\u8bba\u3002\u5c06\u201c\u5355\u4e00\u8d1f\u9762\u4e8b\u4ef6\u201d\u89c6\u4e3a\u201c\u6c38\u4e0d\u7ed3\u675f\u7684\u5931\u8d25\u6a21\u5f0f\u201d\u3002[14]\u4ece\u5355\u4e00\u4e8b\u4ef6\u6216\u5355\u4e00\u8bc1\u636e\u4e2d\u5f97\u51fa\u975e\u5e38\u5e7f\u6cdb\u7684\u7ed3\u8bba\u3002\u5373\u4f7f\u574f\u4e8b\u53ea\u53d1\u751f\u4e00\u6b21\uff0c\u9884\u8ba1\u4e5f\u4f1a\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u53d1\u751f\u3002[3]\u3002\n\u4f8b1\uff1a\u5e74\u8f7b\u5973\u5b50\u7b2c\u4e00\u6b21\u7ea6\u4f1a\u5c31\u88ab\u7ea6\u51fa\u53bb\u4e86\uff0c\u4f46\u7b2c\u4e8c\u6b21\u5374\u6ca1\u6709\u3002\u5f53\u5979\u544a\u8bc9\u5979\u7684\u670b\u53cb\uff0c\u201c\u8fd9\u79cd\u4e8b\u603b\u662f\u53d1\u751f\u5728\u6211\u8eab\u4e0a\u65f6\uff0c\u5979\u5fc3\u70e6\u610f\u4e71\uff01\u6211\u6c38\u8fdc\u4e5f\u627e\u4e0d\u5230\u771f\u7231\u4e86\uff01\u201c\u3002\n\u4f8b2\uff1a\u5973\u4eba\u5f88\u5b64\u72ec\uff0c\u7ecf\u5e38\u628a\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u5bb6\u91cc\u3002\u5979\u7684\u670b\u53cb\u6709\u65f6\u9080\u8bf7\u5979\u5171\u8fdb\u665a\u9910\uff0c\u7ed3\u8bc6\u65b0\u670b\u53cb\u3002\u5979\u89c9\u5f97\u8fde\u8bd5\u4e00\u8bd5\u90fd\u6ca1\u7528\u3002\u6ca1\u6709\u4eba\u4f1a\u771f\u6b63\u559c\u6b22\u5979\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6240\u6709\u7684\u4eba\u90fd\u662f\u4e00\u6837\u7684\uff0c\u65e2\u5c0f\u6c14\u53c8\u81ea\u79c1\u3002[19]\u3002\n\u5bf9\u6297\u8fd9\u79cd\u626d\u66f2\u7684\u4e00\u4e2a\u5efa\u8bae\u662f\uff0c\u901a\u8fc7\u5bf9\u81ea\u5df1\u7684\u60c5\u51b5\u8fdb\u884c\u51c6\u786e\u7684\u5206\u6790\u6765\u201c\u68c0\u67e5\u8bc1\u636e\u201d\u3002\u8fd9\u6709\u52a9\u4e8e\u907f\u514d\u5938\u5927\u81ea\u5df1\u7684\u5904\u5883\u3002[14]\n\u5f53\u4e00\u4e2a\u4eba\u53ea\u505c\u7559\u5728\u60c5\u51b5\u7684\u8d1f\u9762\u7ec6\u8282\u4e0a\uff0c\u800c\u8fc7\u6ee4\u6389\u79ef\u6781\u7684\u65b9\u9762\u65f6\uff0c\u8fc7\u6ee4\u626d\u66f2\u5c31\u4f1a\u53d1\u751f\u3002[14]\u3002\n\u5b89\u8fea\u5728\u5de5\u4f5c\u4e2d\u6240\u505a\u7684\u6f14\u793a\u5f97\u5230\u7684\u5927\u591a\u662f\u8d5e\u626c\u548c\u6b63\u9762\u53cd\u9988\uff0c\u4f46\u4e5f\u6709\u4e00\u5c0f\u90e8\u5206\u6279\u8bc4\u3002\u5728\u6f14\u8bb2\u7ed3\u675f\u540e\u7684\u51e0\u5929\u91cc\uff0c\u5b89\u8fea\u4e00\u76f4\u6c89\u6d78\u5728\u8fd9\u4e00\u8d1f\u9762\u53cd\u5e94\u4e0a\uff0c\u5fd8\u8bb0\u4e86\u4ed6\u4e5f\u5f97\u5230\u7684\u6240\u6709\u79ef\u6781\u53cd\u5e94\u3002[14]\u3002\n\u201c\u611f\u89c9\u826f\u597d\u624b\u518c\u201d\u6307\u51fa\uff0c\u8fc7\u6ee4\u5c31\u50cf\u201c\u4e00\u6ef4\u58a8\u6c34\uff0c\u4f1a\u4f7f\u70e7\u676f\u91cc\u7684\u6c34\u53d8\u8272\u3002\u201d[14]\u5bf9\u6297\u8fc7\u6ee4\u7684\u4e00\u4e2a\u5efa\u8bae\u662f\u6210\u672c\u6548\u76ca\u5206\u6790\u3002\u60a3\u6709\u8fd9\u79cd\u626d\u66f2\u7684\u4eba\u53ef\u80fd\u60f3\u5750\u4e0b\u6765\u8bc4\u4f30\u4e00\u4e0b\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u8fc7\u6ee4\u79ef\u6781\u7684\u4e00\u9762\uff0c\u4e13\u6ce8\u4e8e\u8d1f\u9762\u7684\u4e00\u9762\uff0c\u662f\u5bf9\u4ed6\u4eec\u6709\u5229\u8fd8\u662f\u6709\u5bb3\u3002[14]\u3002\n\u53d6\u6d88\u6b63\u9762\u4f53\u9a8c\u7684\u8d44\u683c\u662f\u6307\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u539f\u56e0\u575a\u6301\u4e0d\u8ba1\u5165\u6b63\u9762\u4f53\u9a8c\uff0c\u4ece\u800c\u62d2\u7edd\u6b63\u9762\u4f53\u9a8c\u3002\u5c3d\u7ba1\u65e5\u5e38\u7ecf\u9a8c\u5b58\u5728\u77db\u76fe\uff0c\u4f46\u6d88\u6781\u7684\u4fe1\u5ff5\u4f9d\u7136\u5b58\u5728\u3002\u5265\u593a\u6b63\u9762\u7684\u8d44\u683c\u53ef\u80fd\u662f\u8ba4\u77e5\u626d\u66f2\u8303\u56f4\u5185\u6700\u5e38\u89c1\u7684\u8c2c\u8bef\uff1b\u5b83\u7ecf\u5e38\u88ab\u5206\u6790\u4e3a\u6c38\u8fdc\u662f\u5bf9\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u626d\u66f2\uff0c\u4e00\u4e2a\u4eba\u5904\u4e8e\u8981\u4e48\u5168\u6709\u8981\u4e48\u5168\u65e0\u7684\u81ea\u6211\u5224\u65ad\u4e2d\u3002\u5904\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u4eba\u8868\u73b0\u51fa\u6291\u90c1\u7684\u8ff9\u8c61\u3002\n\u5728\u51e0\u4e4e\u6ca1\u6709\u8bc1\u636e(\u5982\u679c\u6709\u7684\u8bdd)\u7684\u60c5\u51b5\u4e0b\u5f97\u51fa\u521d\u6b65\u7ed3\u8bba(\u901a\u5e38\u662f\u5426\u5b9a\u7684)\u3002\u786e\u5b9a\u4e86\u4e24\u4e2a\u7279\u5b9a\u5b50\u7c7b\u578b\uff1a\n\u8bfb\u5fc3\u672f\uff1a\u4ece\u4e00\u4e2a\u4eba\u7684\u884c\u4e3a\u548c\u975e\u8bed\u8a00\u4ea4\u6d41\u4e2d\u63a8\u65ad\u51fa\u4ed6\u6216\u5979\u53ef\u80fd\u7684\u6216\u53ef\u80fd\u7684(\u901a\u5e38\u662f\u8d1f\u9762\u7684)\u60f3\u6cd5\uff1b\u5728\u6ca1\u6709\u8be2\u95ee\u4ed6\u7684\u60c5\u51b5\u4e0b\u5bf9\u6700\u7cdf\u7cd5\u7684\u7591\u4f3c\u60c5\u51b5\u91c7\u53d6\u9884\u9632\u63aa\u65bd\u3002\u4e00\u4e2a\u5b66\u751f\u5047\u8bbe\u4ed6\u6216\u5979\u7684\u8bba\u6587\u7684\u8bfb\u8005\u5df2\u7ecf\u5bf9\u8bba\u6587\u7684\u4e3b\u9898\u505a\u51fa\u4e86\u51b3\u5b9a\uff0c\u56e0\u6b64\uff0c\u5199\u8bba\u6587\u662f\u4e00\u9879\u6beb\u65e0\u610f\u4e49\u7684\u7ec3\u4e60\u3002\n\u4f8b\u53e52\uff1a\u51ef\u6587\u8ba4\u4e3a\uff0c\u56e0\u4e3a\u5348\u9910\u65f6\u4ed6\u4e00\u4e2a\u4eba\u5750\u7740\uff0c\u6240\u4ee5\u5176\u4ed6\u4eba\u80af\u5b9a\u90fd\u8ba4\u4e3a\u4ed6\u662f\u4e2a\u5931\u8d25\u8005\u3002(\u8fd9\u53ef\u80fd\u4f1a\u9f13\u52b1\u81ea\u6211\u5b9e\u73b0\u7684\u9884\u8a00\uff1b\u51ef\u6587\u53ef\u80fd\u4e0d\u4f1a\u53d1\u8d77\u793e\u4ea4\u6d3b\u52a8\uff0c\u56e0\u4e3a\u4ed6\u62c5\u5fc3\u5468\u56f4\u7684\u4eba\u5df2\u7ecf\u5bf9\u4ed6\u6301\u8d1f\u9762\u770b\u6cd5)\u3002[21]\u3002\n\u7b97\u547d\uff1a\u9884\u6d4b\u4e8b\u4ef6\u7684\u7ed3\u679c(\u901a\u5e38\u662f\u8d1f\u9762\u7684)\u4f8b\u5982\uff1a\u6291\u90c1\u7684\u4eba\u544a\u8bc9\u81ea\u5df1\u4ed6\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6539\u5584\uff1b\u4ed6\u4eec\u5c06\u5728\u4e00\u751f\u4e2d\u7ee7\u7eed\u6291\u90c1\u3002[14]\n\u5bf9\u6297\u8fd9\u79cd\u6b6a\u66f2\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u95ee\u4e00\u95ee\uff1a\u201c\u5982\u679c\u8fd9\u662f\u771f\u7684\uff0c\u5b83\u66f4\u80fd\u8bf4\u660e\u6211\u8fd8\u662f\u4ed6\u4eec\uff1f\u201d\n\u6309\u6bd4\u4f8b\u589e\u52a0\u611f\u77e5\u5230\u7684\u5931\u8d25\u3001\u5f31\u70b9\u6216\u5a01\u80c1\u7684\u6743\u91cd\uff0c\u6216\u51cf\u8f7b\u611f\u77e5\u5230\u7684\u6210\u529f\u3001\u529b\u91cf\u6216\u673a\u4f1a\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u6743\u91cd\u5c31\u4e0d\u540c\u4e8e\u5176\u4ed6\u4eba\u5206\u914d\u7684\u6743\u91cd\uff0c\u6bd4\u5982\u5c0f\u9898\u5927\u505a\u3002\u5728\u6291\u90c1\u7684\u5ba2\u6237\u4e2d\uff0c\u522b\u4eba\u7684\u79ef\u6781\u7279\u5f81\u5e38\u5e38\u88ab\u5938\u5927\uff0c\u800c\u4ed6\u4eec\u7684\u6d88\u6781\u7279\u5f81\u5f80\u5f80\u88ab\u4f4e\u4f30\u3002\n\u707e\u96be\u6027--\u66f4\u770b\u91cd\u53ef\u80fd\u51fa\u73b0\u7684\u6700\u574f\u7ed3\u679c\uff0c\u4e0d\u7ba1\u53ef\u80fd\u6027\u6709\u591a\u5927\uff0c\u6216\u8005\u5728\u611f\u89c9\u4e0d\u8212\u670d\u7684\u60c5\u51b5\u4e0b\u7ecf\u5386\u65e0\u6cd5\u5fcd\u53d7\u6216\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u3002\n\u5728\u60c5\u611f\u63a8\u7406\u626d\u66f2\u4e2d\uff0c\u5047\u8bbe\u60c5\u611f\u66b4\u9732\u4e86\u4e8b\u7269\u7684\u771f\u5b9e\u672c\u8d28\uff0c\u5e76\u5c06\u73b0\u5b9e\u4f53\u9a8c\u4e3a\u60c5\u611f\u8054\u7cfb\u7684\u601d\u60f3\u7684\u53cd\u6620\uff1b\u4eba\u4eec\u4ec5\u4ec5\u6839\u636e\u611f\u89c9\u6765\u76f8\u4fe1\u67d0\u4e9b\u4e8b\u60c5\u662f\u6b63\u786e\u7684\u3002\n\u4f8b\u53e5\uff1a\u6211\u89c9\u5f97\u81ea\u5df1\u5f88\u7b28\uff0c\u6240\u4ee5\u6211\u4e00\u5b9a\u5f88\u7b28\u3002[3]\u5bf9\u4e58\u5750\u98de\u673a\u611f\u5230\u6050\u60e7\uff0c\u7136\u540e\u5f97\u51fa\u7ed3\u8bba\uff0c\u98de\u673a\u4e00\u5b9a\u662f\u4e00\u79cd\u5371\u9669\u7684\u65c5\u884c\u65b9\u5f0f\u3002[14]\u4e00\u60f3\u5230\u8981\u6253\u626b\u522b\u4eba\u7684\u623f\u5b50\uff0c\u6211\u5c31\u4e0d\u77e5\u6240\u63aa\uff0c\u56e0\u6b64\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u751a\u81f3\u5f00\u59cb\u6253\u626b\u90fd\u662f\u6ca1\u6709\u5e0c\u671b\u7684\u3002[19]\u3002\n\u963f\u5c14\u4f2f\u7279\u00b7\u57c3\u5229\u65af(Albert Ellis)\u5728\u4ed6\u7684\u7406\u6027\u60c5\u7eea\u884c\u4e3a\u7597\u6cd5(REBT)\u4e2d\u63d0\u51fa\u4e86\u5fc5\u987b\u6216\u5e94\u8be5\u7684\u58f0\u660e\uff0c\u8fd9\u662fCBT\u7684\u4e00\u79cd\u65e9\u671f\u5f62\u5f0f\uff1b\u4ed6\u5c06\u5176\u547d\u540d\u4e3aMururbation\u3002\u8fc8\u514b\u5c14\u00b7C\u00b7\u683c\u96f7\u5384\u59c6(Michael C.Graham)\u79f0\u4e4b\u4e3a\u201c\u671f\u5f85\u4e16\u754c\u4e0e\u73b0\u5728\u4e0d\u540c\u201d\u3002[23]\u5b83\u53ef\u4ee5\u88ab\u89c6\u4e3a\u8981\u6c42\u7279\u5b9a\u7684\u6210\u5c31\u6216\u884c\u4e3a\uff0c\u800c\u4e0d\u7ba1\u5b9e\u9645\u60c5\u51b5\u5982\u4f55\u3002\n\u4e00\u4f4d\u97f3\u4e50\u4f1a\u94a2\u7434\u5bb6\u5728\u4e00\u573a\u6f14\u51fa\u540e\u8ba4\u4e3a\u4ed6\u6216\u5979\u4e0d\u5e94\u8be5\u72af\u8fd9\u4e48\u591a\u9519\u8bef\u3002[19]\u3002\n\u5728\u201c\u611f\u89c9\u826f\u597d\uff1a\u65b0\u60c5\u7eea\u7597\u6cd5\u201d\u4e00\u4e66\u4e2d\uff0c\u5927\u536b\u00b7\u4f2f\u6069\u65af\u660e\u786e\u533a\u5206\u4e86\u75c5\u6001\u7684\u201c\u5e94\u8be5\u201d\u58f0\u660e\u3001\u9053\u5fb7\u8981\u6c42\u548c\u793e\u4f1a\u89c4\u8303\u3002\n\u4e0e\u6b64\u76f8\u5173\u7684\u8ba4\u77e5\u626d\u66f2\u4e5f\u51fa\u73b0\u5728\u57c3\u5229\u65af\u7684REBT\u4e2d\uff0c\u5b83\u503e\u5411\u4e8e\u8bf4\u672a\u6765\u7684\u60c5\u666f\u5c06\u662f\u53ef\u6015\u7684\uff0c\u800c\u4e0d\u662f\u73b0\u5b9e\u5730\u8bc4\u4f30\u8be5\u60c5\u666f\u7684\u5404\u79cd\u6d88\u6781\u548c\u79ef\u6781\u7684\u7279\u5f81\u3002\u6839\u636e\u4f2f\u6069\u65af\u7684\u8bf4\u6cd5\uff0c\u201c\u5fc5\u987b\u201d\u548c\u201c\u5e94\u8be5\u201d\u7684\u9648\u8ff0\u662f\u8d1f\u9762\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u8ba9\u4eba\u611f\u5230\u5185\u759a\u548c\u4e0d\u5b89\u3002\u6709\u4e9b\u4eba\u8fd8\u5c06\u8fd9\u79cd\u626d\u66f2\u6307\u5411\u5176\u4ed6\u4eba\uff0c\u5f53\u5176\u4ed6\u4eba\u6ca1\u6709\u505a\u4ed6\u4eec\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u65f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6124\u6012\u548c\u632b\u8d25\u611f\u3002\u4ed6\u8fd8\u63d0\u5230\uff0c\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u53db\u9006\u601d\u60f3\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8bd5\u56fe\u97ad\u7b56\u81ea\u5df1\u53bb\u505a\u4e00\u4e9b\u201c\u5e94\u8be5\u201d\u7684\u4e8b\u60c5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4eba\u7684\u613f\u671b\u6070\u597d\u76f8\u53cd\u3002[14]\u3002\n\u4e2a\u4eba\u5316\u662f\u5c06\u4e2a\u4eba\u8d23\u4efb\u4e0e\u4e00\u4e2a\u4eba\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u5b9e\u9645\u62e5\u6709\u7684\u63a7\u5236\u7a0b\u5ea6\u4e0d\u6210\u6bd4\u4f8b\u5730\u5206\u914d\u7ed9\u4e2a\u4eba\u3002\n\u4f8b1\uff1a\u5bc4\u517b\u7684\u5b69\u5b50\u8ba4\u4e3a\u4ed6/\u5979\u6ca1\u6709\u88ab\u9886\u517b\u662f\u56e0\u4e3a\u4ed6/\u5979\u201c\u4e0d\u591f\u53ef\u7231\u201d\u3002\n\u4f8b2\uff1a\u5b69\u5b50\u7684\u6210\u7ee9\u5f88\u5dee\u3002\u4ed6/\u5979\u7684\u6bcd\u4eb2\u8ba4\u4e3a\u8fd9\u662f\u56e0\u4e3a\u5979\u4e0d\u662f\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u7236\u6bcd\u3002[14]\u3002\n\u8d23\u5907\u662f\u4e2a\u6027\u5316\u7684\u53cd\u9762\u3002\u5728\u8d23\u5907\u626d\u66f2\u4e2d\uff0c\u4e0d\u6210\u6bd4\u4f8b\u7684\u8d23\u5907\u88ab\u5f52\u548e\u4e8e\u4ed6\u4eba\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u3002[14]\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u4eba\u907f\u514d\u627f\u62c5\u4e2a\u4eba\u8d23\u4efb\uff0c\u4e3a\u201c\u53d7\u5bb3\u8005\u5fc3\u6001\u201d\u8ba9\u8def\u3002\n\u5728\u8fd9\u79cd\u8ba4\u77e5\u626d\u66f2\u4e2d\uff0c\u72af\u9519\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u3002\u8fd9\u79cd\u626d\u66f2\u7684\u7279\u70b9\u662f\u79ef\u6781\u5730\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e2a\u4eba\u7684\u884c\u4e3a\u6216\u60f3\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u6709\u65f6\u8fd8\u4f1a\u628a\u81ea\u5df1\u7684\u5229\u76ca\u653e\u5728\u53e6\u4e00\u4e2a\u4eba\u7684\u611f\u53d7\u4e4b\u4e0a\u3002[3]\u3002\u5728\u8fd9\u79cd\u8ba4\u77e5\u626d\u66f2\u4e2d\uff0c\u81ea\u5df1\u62e5\u6709\u7684\u5173\u4e8e\u5468\u56f4\u73af\u5883\u7684\u4e8b\u5b9e\u603b\u662f\u6b63\u786e\u7684\uff0c\u800c\u5176\u4ed6\u4eba\u7684\u89c2\u70b9\u548c\u89c2\u70b9\u5374\u88ab\u9519\u8bef\u5730\u770b\u5f85[24]\u3002\n\u4f9d\u9760\u793e\u4f1a\u63a7\u5236\u6765\u83b7\u5f97\u53e6\u4e00\u4e2a\u4eba\u7684\u5408\u4f5c\u884c\u52a8[3]\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u7684\u57fa\u672c\u5047\u8bbe\u662f\uff0c\u4e00\u4e2a\u4eba\u7684\u5e78\u798f\u53d6\u51b3\u4e8e\u4ed6\u4eba\u7684\u884c\u52a8\u3002\u6539\u53d8\u7684\u8c2c\u8bef\u8fd8\u5047\u8bbe\u5176\u4ed6\u4eba\u5e94\u8be5\u81ea\u52a8\u6539\u53d8\u4ee5\u9002\u5e94\u81ea\u5df1\u7684\u5229\u76ca\uff0c\u548c/\u6216\u5f3a\u8feb\u4ed6\u4eec\u6539\u53d8\u662f\u516c\u5e73\u7684\u3002\u5b83\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u5927\u591a\u6570\u8650\u5f85\u5173\u7cfb\u4e2d\uff0c\u5728\u8fd9\u79cd\u5173\u7cfb\u4e2d\uff0c\u4f34\u4fa3\u5bf9\u5f7c\u6b64\u7684\u5e7b\u60f3\u4e0e\u4ed6\u4eec\u76f8\u4fe1\u5e78\u798f\u3001\u7231\u3001\u4fe1\u4efb\u548c\u5b8c\u7f8e\u53ea\u4f1a\u5728\u4ed6\u4eec\u6216\u53e6\u4e00\u4e2a\u4eba\u6539\u53d8\u4ed6\u4eec\u5b58\u5728\u7684\u65b9\u9762\u65f6\u624d\u4f1a\u53d1\u751f\u3002[25]\u3002\n\u516c\u5e73\u8c2c\u8bef\u5c31\u662f\u76f8\u4fe1\u751f\u6d3b\u5e94\u8be5\u662f\u516c\u5e73\u7684\u3002\u5f53\u751f\u6d3b\u88ab\u8ba4\u4e3a\u662f\u4e0d\u516c\u5e73\u7684\u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u6124\u6012\u7684\u60c5\u7eea\u72b6\u6001\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bd5\u56fe\u7ea0\u6b63\u8fd9\u79cd\u60c5\u51b5\u3002[3]\u53ef\u4ee5\u9002\u7528\u6216\u6392\u9664\u666e\u904d\u6b63\u4e49\u7684\u60c5\u51b5\u5f88\u5c11\u3002\u6b63\u4e49\u6e90\u4e8e\u53e4\u82f1\u56fd\u665a\u671f\u7684\u201c\u53f8\u6cd5\u201d\uff0c\u516c\u5e73\u548c\u6b63\u4e49\u56e0\u6587\u5316\u3001\u6c11\u65cf\u6216\u56fd\u5bb6\u7684\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u53ef\u89c1\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u5f52\u56e0\u4e8e\u516c\u5e73\u548c\u6b63\u4e49\u3002[26][26]\n\u4e00\u79cd\u8fc7\u5206\u6982\u62ec\u7684\u5f62\u5f0f\uff1b\u5c06\u4e00\u4e2a\u4eba\u7684\u884c\u4e3a\u5f52\u56e0\u4e8e\u4ed6\u6216\u5979\u7684\u6027\u683c\u800c\u4e0d\u662f\u5c5e\u6027\u3002\u4e0d\u662f\u5047\u8bbe\u884c\u4e3a\u662f\u5076\u7136\u7684\u6216\u5176\u4ed6\u5916\u5728\u7684\uff0c\u800c\u662f\u6839\u636e\u63a8\u65ad\u51fa\u7684\u4eba\u6216\u7269\u7684\u7279\u5f81\u7ed9\u67d0\u4eba\u6216\u67d0\u4e8b\u8d34\u4e0a\u6807\u7b7e\u3002\n\u8ba4\u77e5\u91cd\u7ec4(CR)\u662f\u4e00\u79cd\u6d41\u884c\u7684\u6cbb\u7597\u5f62\u5f0f\uff0c\u7528\u4e8e\u8bc6\u522b\u548c\u62d2\u7edd\u4e0d\u9002\u5e94\u7684\u8ba4\u77e5\u626d\u66f2[27]\uff0c\u901a\u5e38\u7528\u4e8e\u8bca\u65ad\u4e3a\u6291\u90c1\u75c7\u7684\u4e2a\u4eba\u3002[28]\u5728CR\u4e2d\uff0c\u6cbb\u7597\u5e08\u548c\u5ba2\u6237\u9996\u5148\u68c0\u67e5\u5ba2\u6237\u62a5\u544a\u7684\u538b\u529b\u4e8b\u4ef6\u6216\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u4e00\u540d\u6291\u90c1\u7684\u7537\u5927\u5b66\u751f\u5728\u7ea6\u4f1a\u65f6\u9047\u5230\u56f0\u96be\uff0c\u4ed6\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u7684\u65e0\u7528\u4f1a\u5bfc\u81f4\u5973\u4eba\u62d2\u7edd\u4ed6\u3002\u6cbb\u7597\u5e08\u548c\u5ba2\u6237\u53ef\u80fd\u4f1a\u4e00\u8d77\u521b\u9020\u4e00\u79cd\u66f4\u73b0\u5b9e\u7684\u8ba4\u77e5\uff0c\u4f8b\u5982\uff0c\u9080\u8bf7\u5973\u5b69\u7ea6\u4f1a\u5728\u6211\u7684\u63a7\u5236\u8303\u56f4\u4e4b\u5185\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6211\u53ef\u4ee5\u505a\u4e00\u4e9b\u4e8b\u60c5\u6765\u5f71\u54cd\u4ed6\u4eec\u7684\u51b3\u5b9a\uff0c\u4f46\u65e0\u8bba\u4ed6\u4eec\u662f\u5426\u540c\u610f\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u90fd\u4e0d\u662f\u6211\u6240\u80fd\u63a7\u5236\u7684\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4ed6\u4eec\u62d2\u7edd\u6211\u7684\u9080\u8bf7\uff0c\u6211\u4e0d\u627f\u62c5\u8d23\u4efb\u3002CR\u7597\u6cd5\u65e8\u5728\u6d88\u9664\u5305\u62ec\u5ba2\u6237\u529f\u80fd\u5931\u8c03\u6216\u8d1f\u9762\u89c2\u70b9\u5728\u5185\u7684\u81ea\u52a8\u601d\u7ef4\u3002\u6839\u636e\u8d1d\u514b\u7684\u8bf4\u6cd5\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c11\u65e0\u4ef7\u503c\u3001\u7126\u8651\u548c\u5feb\u611f\u7f3a\u5931\u7684\u611f\u89c9\uff0c\u8fd9\u4e9b\u90fd\u662f\u51e0\u79cd\u5f62\u5f0f\u7684\u7cbe\u795e\u75be\u75c5\u7684\u75c7\u72b6\u3002[29]\u8ba4\u77e5\u969c\u788d\u662f\u8d1d\u514b\u548c\u4f2f\u6069\u65af\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\u3002[30][30]\u3002\n\u90a3\u4e9b\u88ab\u8bca\u65ad\u4e3a\u81ea\u604b\u578b\u4eba\u683c\u969c\u788d\u7684\u4eba\u503e\u5411\u4e8e\u8ba4\u4e3a\u81ea\u5df1\u4e0d\u5207\u5b9e\u9645\u5730\u4f18\u8d8a\uff0c\u8fc7\u5206\u5f3a\u8c03\u81ea\u5df1\u7684\u957f\u5904\uff0c\u800c\u4f4e\u4f30\u4e86\u81ea\u5df1\u7684\u5f31\u70b9\u3002[29]\u56e0\u6b64\uff0c\u81ea\u604b\u8005\u4f7f\u7528\u5938\u5f20\u548c\u6700\u5c0f\u5316\u6765\u62b5\u5fa1\u7cbe\u795e\u75db\u82e6\u3002[31][32]\u3002\n\u5728\u8ba4\u77e5\u7597\u6cd5\u4e2d\uff0c\u53bb\u5171\u6d4e\u5931\u8c03\u6216\u53bb\u5171\u6d4e\u5931\u8c03\u662f\u4e00\u79cd\u8ba4\u77e5\u91cd\u7ec4\u6280\u672f\uff0c\u53ef\u7528\u4e8e\u6cbb\u7597\u8ba4\u77e5\u626d\u66f2\uff0c\u5982\u653e\u5927\u548c\u707e\u96be[33]\uff0c\u901a\u5e38\u89c1\u4e8e\u7126\u8651\u548c\u7cbe\u795e\u75c5\u7b49\u5fc3\u7406\u969c\u788d[28]\u3002[34]\u8fd9\u4e9b\u969c\u788d\u7684\u4e3b\u8981\u7279\u5f81\u662f\u4e3b\u89c2\u53cd\u6620\u88ab\u751f\u6d3b\u73af\u5883\u538b\u57ae\uff0c\u65e0\u6cd5\u5f71\u54cd\u751f\u6d3b\u73af\u5883\u3002\nCR\u7684\u76ee\u6807\u662f\u5e2e\u52a9\u5ba2\u6237\u6539\u53d8\u4ed6\u6216\u5979\u7684\u770b\u6cd5\uff0c\u4f7f\u611f\u53d7\u5230\u7684\u4f53\u9a8c\u53d8\u5f97\u4e0d\u90a3\u4e48\u91cd\u8981\u3002\n\u5bf9\u8ba4\u77e5\u626d\u66f2\u8bca\u65ad\u7684\u5e38\u89c1\u6279\u8bc4\u6d89\u53ca\u8ba4\u8bc6\u8bba\u548c\u7406\u8bba\u57fa\u7840\u3002\u8bca\u65ad\u80cc\u540e\u7684\u9690\u542b\u5047\u8bbe\u662f\uff0c\u6cbb\u7597\u5e08\u662f\u7edd\u5bf9\u6b63\u786e\u7684\uff0c\u53ea\u6709\u6cbb\u7597\u5e08\u7684\u4e16\u754c\u89c2\u662f\u6b63\u786e\u7684\u3002\u5982\u679c\u60a3\u8005\u7684\u770b\u6cd5\u4e0e\u6cbb\u7597\u5e08\u7684\u4e0d\u540c\uff0c\u53ef\u80fd\u4e0d\u662f\u56e0\u4e3a\u667a\u529b\u969c\u788d\uff0c\u800c\u662f\u56e0\u4e3a\u60a3\u8005\u6709\u4e0d\u540c\u7684\u7ecf\u5386\u3002\u6279\u8bc4\u4eba\u58eb\u58f0\u79f0\uff0c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u60a3\u6709\u6291\u90c1\u75c7\u7684\u60a3\u8005\u5b58\u5728\u8ba4\u77e5\u80fd\u529b\u969c\u788d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u6291\u90c1\u7684\u53d7\u8bd5\u8005\u770b\u8d77\u6765\u201c\u66f4\u60b2\u4f24\uff0c\u4f46\u66f4\u806a\u660e\u201d\u3002[35]\u3002\n\u8ba4\u77e5\u5931\u8c03--\u540c\u65f6\u6301\u6709\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u76f8\u4e92\u77db\u76fe\u7684\u4fe1\u4ef0\u3001\u89c2\u5ff5\u6216\u4ef7\u503c\u89c2\u7684\u4eba\u6240\u7ecf\u5386\u7684\u5fc3\u7406\u538b\u529b\u3002\n\u9632\u5fa1\u673a\u5236--\u51cf\u5c11\u4e0d\u53ef\u63a5\u53d7\u6216\u6f5c\u5728\u6709\u5bb3\u523a\u6fc0\u5f15\u8d77\u7684\u7126\u8651\u7684\u65e0\u610f\u8bc6\u5fc3\u7406\u673a\u5236\n\u8ba4\u77e5\u504f\u5dee\u4e00\u89c8\u8868--\u5224\u65ad\u4e2d\u504f\u79bb\u89c4\u8303\u6216\u7406\u6027\u7684\u7cfb\u7edf\u6027\u6a21\u5f0f\u3002\n\u8d6b\u5c14\u8499\u5fb7\uff0c\u4f69\u7279\u62c9\uff1b\u5965\u7ef4\u8d1d\u514b\uff0c\u76d6\u5c14\u7279\u626c\uff1b\u5e03\u9c81\u683c\u66fc\uff0c\u4e39\u5c3c\u5c14\uff1b\u5409\u5e03\u65af\uff0c\u7ea6\u7ff0C(2015)\u3002\u8ba4\u77e5\u626d\u66f2\u4e0e\u95ee\u9898\u884c\u4e3a\u5916\u5316\u7684\u5143\u5206\u6790\u3002\u5211\u4e8b\u53f8\u6cd5\u4e0e\u884c\u4e3a\u300242(3)\uff1a245-262\u300210.1177/0093854814552842\u3002\n\u7ea6\u7ff0\u00b7\u683c\u7f57\u970d\u5c14\u8457(2009)\u300215\u79cd\u5e38\u89c1\u7684\u8ba4\u77e5\u626d\u66f2\u3002\u5fc3\u7406\u4e2d\u67a2\u3002\u5b58\u6863\u65e5\u671f\u4e3a2009-07-07\u3002CS1\u7ef4\u62a4\uff1aBOT\uff1a\u539f\u59cbURL\u72b6\u6001\u672a\u77e5(\u94fe\u63a5)\u3002\n\u963f\u5c14\u4f2f\u7279\u00b7\u57c3\u5229\u65af(1957)\u3002\u7406\u6027\u5fc3\u7406\u6cbb\u7597\u4e0e\u4e2a\u4f53\u5fc3\u7406\u5b66\u3002\u4e2a\u4f53\u5fc3\u7406\u5b66\u6742\u5fd7\u300213\u70b942\u5206\u3002\n^Beck\uff0cAaron T.(1997)\u3002\u8ba4\u77e5\u6cbb\u7597\u7684\u8fc7\u53bb\u548c\u672a\u6765\u3002\u5fc3\u7406\u6cbb\u7597\u4e0e\u7814\u7a76\u6742\u5fd7\u30026(4)\uff1a277\u3002\n\u739b\u4e3d\u4e9a\u00b7\u79d1\u74e6\u5947\uff1b\u4e9a\u4f26\u00b7T\u00b7\u8d1d\u514b(1986)\u3002\u6291\u90c1\u75c7\u4e2d\u7684\u4e0d\u826f\u9002\u5e94\u8ba4\u77e5\u7ed3\u6784\u3002\u201c\u7f8e\u56fd\u7cbe\u795e\u75c5\u5b66\u6742\u5fd7\u201d\uff1a526\u3002\n^Beck\uff0cAaron T.(1967)\u3002\u6291\u90c1\u75c7\u7684\u539f\u56e0\u548c\u6cbb\u7597\u3002\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u8d39\u57ce\uff1a\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u51fa\u7248\u793e\u3002\u7b2c166\u9875\u3002\n^a b Beck\uff0cAaron T.(1972)\u3002\u6291\u90c1\u75c7\uff1b\u75c5\u56e0\u548c\u6cbb\u7597\u3002\u8d39\u57ce\uff1a\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u51fa\u7248\u793e\u3002ISBN\u7535\u8bdd\uff1a978-0-8122-7652-7\u3002\n\u5927\u536b\u00b7D\u00b7\u4f2f\u6069\u65af(1980)\u3002\u611f\u89c9\u826f\u597d\uff1a\u65b0\u7684\u60c5\u7eea\u7597\u6cd5\u3002\u7ebd\u7ea6\uff1a\u660e\u5929\u3002ISBN978-0-688-03633-1\u3002\n^\u7f57\u4f2f\u8328\uff0c\u8fd9\u662f\u4e54\u3002\u8ba4\u77e5\u884c\u4e3a\u6cbb\u7597\u53f2\u3002\u5168\u56fd\u8ba4\u77e5\u884c\u4e3a\u6cbb\u7597\u5e08\u534f\u4f1a\u5728\u7ebf\u603b\u90e8\u3002\u5168\u56fd\u8ba4\u77e5\u884c\u4e3a\u6cbb\u7597\u5e08\u534f\u4f1a\u3002\u5b58\u6863\u65e5\u671f\u4e3a2016-05-06\u3002\n\u8fc8\u514b\u5c14\u00b7C\u00b7\u683c\u96f7\u5384\u59c6(2014)\u3002\u751f\u6d3b\u5b9e\u4e8b\uff1a\u5341\u4e2a\u6ee1\u8db3\u7684\u95ee\u9898\u3002\u90ca\u533a\u51fa\u7248\u793e\u300237\u9875\u3002ISBN\u7535\u8bdd\uff1a978-1-4787-2259-5\u3002\n\u5409\u5c14\uff0c\u4f69\u5fb7\u7f57\u00b7J\u00b7\u83ab\u96f7\u8bfa\uff1b\u5361\u91cc\u6d1b\uff0c\u5f17\u6717\u897f\u65af\u79d1\u00b7\u6cfd\u7ef4\u5c14\u00b7\u95e8\u5fb7\u65af\uff1b\u6885\u5361\uff0c\u80e1\u91cc\u5965\u00b7\u6851\u5207\u65af(2001)\u3002\u793e\u4ea4\u6050\u60e7\u75c7\u8ba4\u77e5\u884c\u4e3a\u6cbb\u7597\u7684\u6709\u6548\u6027\uff1a\u4e00\u9879\u835f\u8403\u5206\u6790\u7efc\u8ff0\u3002\u897f\u73ed\u7259\u7684\u5fc3\u7406\u5b66\u30025\uff1a17-25\u3002\n^\u3002\n..", "note_en": "Jump to navigation  Jump to search  An exaggerated or irrational thought pattern involved in the onset and perpetuation of psychopathological states\n A  cognitive distortion is an exaggerated or irrational thought pattern involved in the onset and perpetuation of  psychopathological states, especially those more influenced by psychosocial factors, such as  depression and  anxiety.  [1] Psychiatrist  Aaron T. Beck laid the groundwork for the study of these distortions, and his student  David D. Burns continued research on the topic. Burns, in Feeling Good the new Mood Therapy   [2], described personal and professional anecdotes related to cognitive distortions and their elimination.\n Cognitive distortions are thoughts that cause individuals to perceive reality inaccurately. According to the cognitive model of Beck, a negative outlook on reality, sometimes called  negative  schemas (or  schemata), is a factor in symptoms of emotional dysfunction and poorer subjective well-being. Specifically, negative thinking patterns reinforce negative  emotions and thoughts.  [3] During difficult circumstances, these distorted thoughts can contribute to an overall negative outlook on the world and a depressive or anxious mental state.\n    Cognitive comes from the Medieval Latin  cognit\u012bvus, equivalent to Latin cognit(us) known.  [4] Distortion means the act of twisting or altering something out of its true, natural, or original state.  [5]\n  In 1957 Albert Ellis, though he did not know it yet, would aid cognitive therapy in correcting Cognitive Distortions and indirectly helping David Burns in writing The Feeling Good Handbook. Ellis created what he called the ABC Technique of rational beliefs. The ABC stand for (A)Activating Event, (B)beliefs that are irrational and (C) the consequences that come from the belief. Ellis wanted to prove that the activating event is not what caused the emotional behavior or the consequences, but the beliefs and how the person irrationally perceive the events that aids the consequences.  [6] With this model Ellis attempted to use Rational Emotive Behavior Therapy (REBT) with his patients, in order to help them &#34;reframe&#34; or reinterpret the experience in a more rational manner. In this model Ellis explains it all for his clients, while Beck helps his clients figure this out on their own.  [7] Beck first started to notice these automatic distorted thought processes when practicing psychoanalysis while his patients followed the rule of saying anything that comes to mind. Aaron realized that his patients had irrational fears, thoughts, and perceptions that were automatic. Beck began noticing his automatic thought processes that he knew his patients had but did not report. Most of the time the thoughts were biased against themselves and very erroneous.  [8]\n Beck believed that the negative schemas developed and manifested themselves in the perspective and behavior. The distorted thought processes lead to focusing on degrading the self, amplifying minor external setbacks, experiences other&#39;s harmless comments as ill-intended, while simultaneously seeing self as inferior. Inevitably cognitions are reflected in their behavior with a reduce desire to care for self, to seek pleasure and give up. These exaggerated perceptions due to cognition feel real and accurate because the schemas after being reinforced through the behavior tend to become automatic and do not allow time for reflection.  [9] This cycle is also known as  Beck&#39;s Cognitive Triad, focused on the theory that the person&#39;s negative schema applied to the self, the future, and the environment.  [10]\n In 1972, psychiatrist, psychoanalyst, and  cognitive therapy scholar Aaron T. Beck published  Depression: Causes and Treatment.  [11] He was dissatisfied with the conventional Freudian treatment of  depression, because there was no empirical evidence for the success of Freudian  psychoanalysis. Beck&#39;s book provided a comprehensive and empirically supported theoretical model for depression\u2014its potential causes, symptoms, and treatments. In Chapter 2, titled &#34;Symptomatology of Depression&#34;, he described &#34;cognitive manifestations&#34; of depression, including low self-evaluation, negative expectations, self-blame and self-criticism, indecisiveness, and distortion of the  body image.  [11]\n In was in 1980 when Burns published  Feeling Good: The New Mood Therapy  [12]; making Aaron T. Beck&#39;s approach to distorted thinking widely known and popularized.  [13] Burns sold over 4 Million copies of the book &#34;Feeling Good: The New Mood Therapy&#34; in the United States alone. It was a book commonly &#34;prescribe&#34; for patients that have cognitive distortions that have lead to depression. Beck approved of the book saying that it would help others alter their depressed moods by simplifying the extensive study and research that had taken place since shortly after Beck had started as a student and practitioner of psychoanalytic psychiatry.  [12] Nine years later  The Feeling Good Handbook, which was also built on Beck&#39;s work was published. The Feeling Good Handbook includes a list of ten specific cognitive distortions, which will be discussed throughout this article.  [14]\n   The cognitive distortions listed below  [14] are categories of automatic thinking, and are to be distinguished from  logical fallacies.\n   This is also referred to as \u201cSplitting,&#34;  [16] \u201cBlack-and-White Thinking,&#34;  [3] and &#34;Polarized Thinking.&#34;  [17] Someone with the All-or-Nothing Thinking distortion looks at life in black and white categories.  [14] Either they are a success or a failure; either they are good or bad; there is no in-between. According to one article, \u201cBecause there is always someone who is willing to criticize, this tends to collapse into a tendency for polarized people to view themselves as a total failure. Polarized thinkers have difficulty with the notion of being \u2018good enough\u2019 or a partial success.&#34;  [18]\n Example (from  The Feeling Good Handbook): A girl eats a spoonful of ice cream. She thinks she is a complete failure for breaking her diet. She becomes so depressed that she ends up eating the whole quart of ice cream.  [14]\n This example captures the polarized nature of this distortion--the person believes they are totally inadequate if they fall short of perfection. In order to combat this distortion, Burns suggests thinking of the world in terms of shades of gray.  [14] Rather than viewing herself as a complete failure for eating a spoonful of ice cream, the girl in the example could still recognize her overall effort to diet as at least a partial success.\n   Making  hasty generalizations from insufficient evidence. Seeing a \u201csingle negative event\u201d as a \u201cnever-ending pattern of defeat.&#34;  [14] Drawing a very broad conclusion from a single incident or a single piece of evidence. Even if something bad happens only once, it is expected to happen over and over again.  [3]\n Example 1: A young woman is asked out on a first date, but not a second one. She is distraught as she tells her friend, \u201cThis always happens to me! I\u2019ll never find love!\u201d\n Example 2: A woman is lonely and often spends most of her time at home. Her friends sometimes ask her to dinner and to meet new people. She feels it is useless to even try. No one really could like her. And anyway, all people are the same; petty and selfish.  [19]\n One suggestion to combat this distortion is to \u201cExamine the Evidence\u201d by performing an accurate analysis of one\u2019s situation. This aids in avoiding exaggerating one\u2019s circumstances.  [14]\n  Filtering distortions occur when an individual dwells only on the negative details of a situation and filters out the positive aspects.  [14]\n Example: Andy gets mostly compliments and positive feedback about a presentation he has done at work, but he also has received a small piece of criticism. For several days following his presentation, Andy dwells on this one negative reaction, forgetting all of the positive reactions that he had also been given.  [14]\n The Feeling Good Handbook notes that filtering is like a \u201cdrop of ink that discolors a beaker of water.&#34;  [14] One suggestion to combat filtering is a cost-benefit analysis. A person with this distortion may want to sit down and assess whether filtering out the positive and focusing on the negative is helping or hurting them in the long run.  [14]\n  Disqualifying the positive refers to rejecting positive experiences by insisting they &#34;don&#39;t count&#34; for some reason or other. Negative belief is maintained despite contradiction by everyday experiences. Disqualifying the positive may be the most common fallacy in the cognitive distortion range; it is often analyzed with &#34;always being right&#34;, a type of distortion where a person is in an all-or-nothing self-judgment. People in this situation show signs of depression.\n    Reaching preliminary conclusions (usually negative) with little (if any) evidence. Two specific subtypes are identified:\n Mind reading:  Inferring a person&#39;s possible or probable (usually negative) thoughts from his or her  behavior and  nonverbal communication; taking precautions against the worst suspected case without asking the person. Example 1: A student assumes that the readers of his or her paper have already made up their minds concerning its topic, and, therefore, writing the paper is a pointless exercise.\n Example 2: Kevin assumes that because he sits alone at lunch, everyone else must think he is a loser. (This can encourage self-fulfilling prophecy; Kevin may not initiate social contact because of his fear that those around him already perceive him negatively).  [21]\n Fortune-telling: predicting outcomes (usually negative) of events Example\u00a0: A depressed person tells themselves they will never improve; they will continue to be depressed for their whole life.  [14]\n One way to combat this distortion is to ask, \u201cIf this is true, does it say more about me or them?  [22]\u201d\n   Giving proportionally greater weight to a perceived failure, weakness or threat, or lesser weight to a perceived success, strength or opportunity, so that the weight differs from that assigned by others, such as &#34; making a mountain out of a molehill&#34;. In depressed clients, often the positive characteristics of  other people are exaggerated and their negative characteristics are understated.\n Catastrophizing \u2013 Giving greater weight to the worst possible outcome, however unlikely, or experiencing a situation as unbearable or impossible when it is just uncomfortable\n   In the emotional reasoning distortion, it is assumed that feelings expose the true nature of things and experience reality as a reflection of emotionally linked thoughts; something is believed true solely based on a feeling.\n Examples: &#34;I feel stupid, therefore I must be stupid&#34;.  [3] Feeling fear of flying in planes, and then concluding that planes must be a dangerous way to travel.  [14] Feeling overwhelmed by the prospect of cleaning one&#39;s house, therefore concluding that it&#39;s hopeless to even start cleaning.  [19]\n  Making &#34;must&#34; or &#34;should&#34; statements was included by  Albert Ellis in his  rational emotive behavior therapy (REBT), an early form of CBT; he termed it &#34;musturbation&#34;. Michael C. Graham called it &#34;expecting the world to be different than it is&#34;.  [23] It can be seen as demanding particular achievements or behaviors regardless of the realistic circumstances of the situation.\n Example: After a performance, a concert pianist believes he or she should not have made so many mistakes.  [19]\n In  Feeling Good: The New Mood Therapy, David Burns clearly distinguished between pathological &#34;should statements&#34;, moral imperatives, and social norms.\n A related cognitive distortion, also present in Ellis&#39; REBT, is a tendency to &#34; awfulize&#34;; to say a future scenario will be awful, rather than to realistically appraise the various negative and positive characteristics of that scenario.According to Burns, \u201cmust\u2019 and \u201cshould\u201d statements are negative because they cause the person to feel guilty and upset at themselves. Some people also direct this distortion at other people, which can cause feelings of anger and frustration when that other person does not do what they should have done. He also mentions how this type of thinking can lead to rebellious thoughts. In other words, trying to whip oneself into doing something with \u201cshoulds\u201d may cause one to desire just the opposite.  [14]\n   Personalization is assigning personal blame disproportionate to the level of control a person realistically has in a given situation.\n Example 1: A foster child assumes that he/she has not been adopted because he/she is not \u201cloveable enough.\u201d\n Example 2: A child has bad grades. His/her mother believes it is because she is not a good enough parent.  [14]\n Blaming is the opposite of personalization. In the blaming distortion, the disproportionate level of blame is placed upon other people, rather than oneself.  [14] In this way, the person avoids taking personal responsibility, making way for a \u201cvictim mentality.\u201d\n   In this cognitive distortion, being wrong is unthinkable. This distortion is characterized by actively trying to prove one&#39;s actions or thoughts to be correct, and sometimes prioritizing  self-interest over the feelings of another person.  [3]. In this Cognitive Distortion, the facts that oneself has about its surroundings are always right while other people opinions and perspectives are wrongly seen   [24]\n  Relying on  social control to obtain cooperative actions from another person  [3] The underlying assumption of this thinking style is that one&#39;s happiness depends on the actions of others. The fallacy of change also assumes that other people should change to suit one&#39;s own interests automatically and/or that it is fair to pressure them to change. It may be present in most abusive relationships in which partners&#39; &#34;visions&#34; of each other are tied into the belief that happiness, love, trust, and perfection would just occur once they or the other person change aspects of their beings.  [25]\n  Fallacy of fairness is the belief that life should be fair. When life is perceived to be unfair, an angry emotional state is produced which may lead to attempts to correct the situation.  [3] There are few situations in which &#34;universal justice&#34; can be applied or excluded. Justice comes from the late Old English justice \u2018administration of the law\u2019, fairness and justice vary between culture, people, or country, it is seen that they need to be attributed in any situation.  [26]\n   A form of overgeneralization; attributing a person&#39;s actions to his or her character instead of to an attribute. Rather than assuming the behaviour to be accidental or otherwise extrinsic, one assigns a label to someone or something that is based on the inferred character of that person or thing.\n  Cognitive restructuring (CR) is a popular form of therapy used to identify and reject maladaptive cognitive distortions  [27] and is typically used with individuals diagnosed with depression.  [28] In CR, the therapist and client first examine a stressful event or situation reported by the client. For example, a depressed male college student who experiences difficulty in dating might believe that his &#34;worthlessness&#34; causes women to reject him. Together, therapist and client might then create a more realistic cognition, e.g., &#34;It is within my control to ask girls on dates. However, even though there are some things I can do to influence their decisions, whether or not they say yes is largely out of my control. Thus, I am not responsible if they decline my invitation.&#34; CR therapies are designed to eliminate &#34;automatic thoughts&#34; that include clients&#39; dysfunctional or negative views. According to Beck, doing so reduces feelings of worthlessness, anxiety, and anhedonia that are symptomatic of several forms of mental illness.  [29] CR is the main component of Beck&#39;s and Burns&#39;s  cognitive behavioral therapy.  [30]\n   Those diagnosed with narcissistic personality disorder tend to view themselves as unrealistically superior and overemphasize their strengths but understate their weaknesses.  [29] As such, narcissists use  exaggeration and  minimization to defend against psychic pain.  [31]  [32]\n   In  cognitive therapy, decatastrophizing or decatastrophization is a  cognitive restructuring technique that may be used to treat cognitive distortions, such as magnification and catastrophizing,  [33] commonly seen in psychological disorders like  anxiety  [28] and  psychosis.  [34] Major features of these disorders are the subjective report of being overwhelmed by life circumstances and the incapability of affecting them.\n The goal of CR is to help the client change his or her perceptions to render the felt experience as less significant.\n   Common criticisms of the diagnosis of cognitive distortion relate to  epistemology and the theoretical basis. The implicit assumption behind the diagnosis is that the therapist is infallible and that only the  world view of the therapist is correct. If the perceptions of the patient differ from those of the therapist, it may not be because of intellectual malfunctions but because the patient has different experiences. Critics claim that there is no evidence that patients suffering from e.g. depression have dysfunctional cognitive abilities. Actually, some depressed subjects appear to be \u201csadder but wiser\u201d.  [35]\n  Cognitive dissonance\u00a0\u2013 Psychological stress experienced by an individual who holds two or more contradictory beliefs, ideas, or values at the same time\n Defence mechanism\u00a0\u2013 Unconscious psychological mechanism that reduces anxiety arising from unacceptable or potentially harmful stimuli\n       List of cognitive biases\u00a0\u2013 Systematic patterns of deviation from norm or rationality in judgment\n  ^   Helmond, Petra; Overbeek, Geertjan; Brugman, Daniel; Gibbs, John C. (2015). &#34;A Meta-Analysis on Cognitive Distortions and Externalizing Problem Behavior&#34;.  Criminal Justice and Behavior.  42 (3): 245\u2013262.  doi: 10.1177/0093854814552842.\n  ^     a     b     c     d     e     f     g   Grohol, John (2009).  &#34;15 Common Cognitive Distortions&#34;. PsychCentral. Archived from the original on 2009-07-07.  CS1 maint: BOT: original-url status unknown ( link)\n    ^   Ellis, Albert (1957). &#34;Rational Psychotherapy and Individual Psychology&#34;.  Journal of Individual Psychology.  13: 42.\n ^   Beck, Aaron T. (1997). &#34;The Past and Future of Cognitive Therapy&#34;.  Journal of Psychotherapy and Research.  6 (4): 277.\n ^   Kovacs, Maria; Beck, Aaron T. (1986). &#34;Maladaptive Cognitive Structure in Depression&#34;.  The American Journal of Psychiatry: 526.\n ^   Beck, Aaron T. (1967).  Depression Causes and Treatment. Philadelphia, Pennsylvania: University of Pennsylvania Press. p.\u00a0166.\n ^     a     b   Beck, Aaron T. (1972).  Depression; Causes and Treatment. Philadelphia: University of Pennsylvania Press.  ISBN\u00a0  978-0-8122-7652-7.\n ^     a     b     c   Burns, David D. (1980).  Feeling Good: The New Mood Therapy. New York: Morrow.  ISBN\u00a0  978-0-688-03633-1.\n ^   Roberts, Joe.  &#34;History of Cognitive Behavioral Therapy&#34;.  National Association of Cognitive Behavioral Therapists Online Headquarters. National Association of Cognitive Behavioral Therapists. Archived from  the original on 2016-05-06 .\n          ^   Graham, Michael C. (2014).  Facts of Life: ten issues of contentment. Outskirts Press. p.\u00a037.  ISBN\u00a0  978-1-4787-2259-5.\n    ^   Gil, Pedro J. Moreno; Carrillo, Francisco Xavier M\u00e9ndez; Meca, Julio S\u00e1nchez (2001).  &#34;Effectiveness of cognitive-behavioural treatment in social phobia: A meta-analytic review&#34;.  Psychology in Spain.  5: 17\u201325.\n ^  \n......", "posttime": "2020-05-16 05:35:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,cognitive,\u626d\u66f2", "title": "\u8ba4\u77e5\u626d\u66f2", "title_en": "Cognitive distortion", "transed": 1, "url": "https://en.wikipedia.org/wiki/Cognitive_distortion#Main_types", "via": "", "real_tags": ["\u8ba4\u77e5", "cognitive", "\u626d\u66f2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002308, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u559c\u6b22\u5ea6\u91cf\uff0c\u4f46\u8ba8\u538c\u624b\u52a8\u6d41\u7a0b\u3002\u5f53\u6211\u4eec\u5728AWS\u96c6\u6210\u4e2d\u91c7\u7528Datadog\u7684\u5185\u7f6e\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u5c06AWS CloudWatch\u6307\u6807\u5bfc\u5165\u5230Datadog\u4e2d\uff0c\u4f46\u9996\u5148\u6211\u4eec\u9700\u8981\u81ea\u52a8\u6267\u884c\u8bbe\u7f6e\u5b83\u6240\u9700\u7684\u5927\u91cf\u624b\u52a8\u6b65\u9aa4\u3002Datadog\u7684AWS\u96c6\u6210\u529f\u80fd\u76f8\u5f53\u5f3a\u5927\uff0c\u4e00\u65e6\u542f\u7528\uff0c\u5b83\u5c06\u81ea\u52a8\u5c06\u6307\u5b9a\u7684CloudWatch\u6307\u6807\u540c\u6b65\u5230Datadog\u5e10\u6237\u3002\u57fa\u672c\u4e0a\uff0cCloudWatch\u4e2d\u7684\u4efb\u4f55\u53ef\u7528\u5185\u5bb9\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5728Datadog\u4e2d\u4e0e\u6211\u4eec\u6240\u6709\u5176\u4ed6\u6307\u6807\u548c\u4eea\u8868\u76d8\u4e00\u8d77\u4f7f\u7528\u3002\n\u5c3d\u7ba1\u96c6\u6210\u529f\u80fd\u5f3a\u5927\u4e14\u65b9\u4fbf\uff0c\u4f46\u5176\u8bbe\u7f6e\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u76f8\u5f53\u590d\u6742\u3002\u5982Datadog\u6587\u6863\u4e2d\u6240\u8ff0\uff0c\u9700\u898118\u4e2a\u624b\u52a8\u6b65\u9aa4\uff0c\u5305\u62ec\uff1a\n\u5982\u679c\u60a8\u50cf\u6211\u4eec\u4e00\u6837\u62e5\u6709\u591a\u4e2aAWS\u5e10\u6237\uff0c\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\uff01\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528Terraform\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u5206\u4eabScribd\u5982\u4f55\u4f7f\u7528Terraform\u5728\u6574\u4e2a\u7ec4\u7ec7\u8303\u56f4\u5185\u81ea\u52a8\u5316\u6211\u4eec\u7684Datadog\u548cAWS\u96c6\u6210\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6784\u5efa\u4e86terraform-aws-datadog\u6a21\u5757\u3002\u53ea\u9700\u5bf9HCL\u4ee3\u7801\u8fdb\u884c\u8026\u5408\uff0cTerraform\u5c06\u6267\u884c\u6240\u6709\u5fc5\u8981\u6b65\u9aa4\uff0c\u4ee5\u4f7f\u7528Scribd\u7684\u6700\u4f73\u5b9e\u8df5\u8bbe\u7f6eDatadog\u4e0e\u7279\u5b9aAWS\u5e10\u6237\u7684\u96c6\u6210\uff1a\n\u6a21\u5757&#34\uff1bdatadog&#34\uff1b{SOURCE=&#34\uff1bgit\uff1a\uff1ahttps://github.com/scribd/terraform-aws-datadog.git?ref=master&#34\uff1baws_account_id=data.\u3002AWS_CALLER_IDENTITY\u3002\u5f53\u524d\u3002account_id datadog_api_key=var\u3002datadog_api_key env=&#34\uff1b\u4ea7\u54c1&#34\uff1b\u547d\u540d\u7a7a\u95f4=&#34\uff1bTeam_Foo&#34\uff1b}\u3002\n\u4eceAWS\u8d26\u6237\u7ef4\u62a4\u4eba\u5458\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4f7f\u7528\u6a21\u5757\u662f\u7ee7\u627f\u96c6\u4e2d\u5316\u6700\u4f73\u5b9e\u8df5\u7684\u4fbf\u6377\u65b9\u5f0f\u3002\u5bf9\u4e8e\u6a21\u5757\u7ef4\u62a4\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684Terraform\u6a21\u5757\u53d1\u5e03\u6d41\u7a0b\u53d1\u5e03\u5bf9Datadog\u96c6\u6210\u6a21\u5757\u7684\u4efb\u4f55\u66f4\u6539\u3002\n\u6700\u521d\uff0c\u8be5\u6a21\u5757\u53ea\u8bbe\u7f6e\u57fa\u7840\u96c6\u6210\u3002\u968f\u7740\u91c7\u7528\u7387\u7684\u589e\u52a0\uff0c\u5404\u4e2a\u56e2\u961f\u5411\u8be5\u6a21\u5757\u6dfb\u52a0\u4e86\u66f4\u591a\u529f\u80fd\u3002\u5176\u4e2d\u4e00\u4e2a\u529f\u80fd\u662f\u81ea\u52a8\u8bbe\u7f6eCloudWatch\u7684\u65e5\u5fd7\u63a5\u6536\u3002\n\u5c31\u50cf\u8bbe\u7f6e\u5b98\u65b9\u7684AWS\u96c6\u6210\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\uff0c\u65e5\u5fd7\u540c\u6b65\u7684\u8bf4\u660e\u6709\u70b9\u4e0d\u582a\u91cd\u8d1f\u3002\n\u6a21\u5757DATADOG&#34\uff1b{SOURCE=&#34\uff1bgit\uff1a\uff1ahttps://github.com/scribd/terraform-aws-datadog.git?ref=master&#34\uff1bDATADOG_APIKEY=var.\u3002datadog_api_key env=&#34\uff1b\u4ea7\u54c1&#34\uff1b\u540d\u79f0\u7a7a\u95f4=&#34\uff1bproject_foo&#34\uff1bcloudwatch_log_group=[&#34\uff1bcloudwatch_log_group_1&#34\uff1b\uff0c&#34\uff1bcloudwatch_log_group_2&#34\uff1b]}\u3002\n\u5c31\u8fd9\u6837!\u3002TerraForm\u5c06\u81ea\u52a8\u4e3a\u6307\u5b9a\u65e5\u5fd7\u7ec4\u521b\u5efaDatadog\u65e0\u670d\u52a1\u5668\u529f\u80fd\u548c\u89e6\u53d1\u5668\uff0c\u4ee5\u5c06\u6240\u6709CloudWatch\u65e5\u5fd7\u8f6c\u53d1\u5230Datadog\u3002\u5728\u8fd0\u884cTerraform Apply\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5728\u51e0\u5206\u949f\u5185\u770b\u5230\u65e5\u5fd7\u663e\u793a\u5728Datadog\u4e2d\u3002\n\u901a\u8fc7\u5c06\u6307\u6807\u548c\u65e5\u5fd7\u540c\u6b65\u5230Datadog\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5229\u7528Datadog\u4f5c\u4e3a\u6240\u6709\u4e8b\u7269\u76d1\u63a7\u7684\u4e2d\u5fc3\u4e2d\u5fc3\u3002\u6211\u4eec\u8ba1\u5212\u5728\u5c06Scribd\u7684\u57fa\u7840\u8bbe\u65bd\u8fc1\u79fb\u5230AWS\u65f6\uff0c\u4e3a\u8be5\u6a21\u5757\u5e26\u6765\u66f4\u591a\u529f\u80fd\u3002\n\u901a\u8fc7\u5b98\u65b9AWS\u96c6\u6210\u83b7\u53d6\u7684\u6307\u6807\u4f1a\u88ab\u8026\u5408\u5206\u949f\u5ef6\u8fdf\uff0c\u8fd9\u4e0d\u9002\u5408\u7528\u4f5c\u76d1\u63a7\u5173\u952e\u7cfb\u7edf\u7684\u4fe1\u53f7\u3002\u6709\u673a\u4f1a\u901a\u8fc7\u81ea\u52a8\u8bbe\u7f6eDatadog\u4ee3\u7406\u6765\u5b9e\u73b0\u5b9e\u65f6\u6307\u6807\u540c\u6b65\u3002\ndatadog-serverless-\u51fd\u6570repos\u5305\u542b\u53e6\u5916\u4e24\u4e2a\u57fa\u4e8elambda\u7684AWS\u6269\u5c55\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u4e3a\u6a21\u5757\u7684\u53ef\u7528\u529f\u80fd\uff1avpc_flow_log_monitor\u548crds_enhanced_monitor\u3002\n\u7279\u522b\u611f\u8c22\u6cf0\u52d2\u00b7\u9ea6\u514b\u5362\u5c14(Taylor McClure)\u548c\u6c49\u5bc6\u5c14\u987f\u00b7\u970d\u5fb7(Hamilton Hord)\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\uff0c\u4ee5\u53ca\u8d5b\u57fa\u5170\u00b7\u4f2f\u5c14(Sai Kiran Burle)\u3001\u5361\u59c6\u5170\u00b7\u6cd5\u54c8\u8fea(Kamran Farhadi)\u548c\u5c24\u91d1\u00b7\u76ae\u95e8\u8bfa\u592b(Eugene Pimenov", "note_en": "We love metrics but hate manual processes. When we adopted Datadog\u2019s builtin AWS integrationwe couldn\u2019t wait to get AWS CloudWatch metrics into Datadog, but first we needed to automatethe  numerous manual stepsrequiredto set it up. Datadog\u2019s AWS integration is quite powerful, onceenabled it will automatically synchronize specified CloudWatch metrics into aDatadog account. Basically, anything available within CloudWatch, can be easilymade available in Datadog, alongside all of our other metrics and dashboards.\n Despite the integration\u2019s power and convenience, its setup process is actuallyquite involved. As outlined in  Datadog\u2019sdocumentation,there are  18 manual steps required, including:\n  If you have more than a few AWS accounts like we do, you may prefer to automate this! In our case, that means using  Terraform.\n In this blog post, we would like to share how Scribd uses Terraform to automateour Datadog and AWS integration across the organization.\n  To address this problem, we built the  terraform-aws-datadogmodule. With only couplelines of HCL code, Terraform will perform all the necessary steps to setupDatadog integration with a specific AWS account with Scribd\u2019s best practices:\n module  &#34;datadog&#34;  {  source  =  &#34;git::https://github.com/scribd/terraform-aws-datadog.git?ref=master&#34;  aws_account_id  =  data . aws_caller_identity . current . account_id  datadog_api_key  =  var . datadog_api_key  env  =  &#34;prod&#34;  namespace  =  &#34;team_foo&#34; }\n The benefit from an AWS Account maintainer point of view is that using themodule is a convenient way to inherit centralized best practice. For modulemaintainers, any change to the Datadog integration module can be released usinga  standard Terraform module release process.\n  Initially, the module only sets up the base integration. As adoption increased, morefeatures were added to the module by various teams. One of these features isautomation for setting up log ingestion for CloudWatch.\n Like setting up the official AWS integration app, the  instructions for logsynchronizationare a bit overwhelming.\n  module  &#34;datadog&#34;  {  source  =  &#34;git::https://github.com/scribd/terraform-aws-datadog.git?ref=master&#34;  datadog_api_key  =  var . datadog_api_key  env  =  &#34;prod&#34;  namespace  =  &#34;project_foo&#34;  cloudwatch_log_groups  =  [ &#34;cloudwatch_log_group_1&#34; ,  &#34;cloudwatch_log_group_2&#34; ] }\n That\u2019s it! Terraform will automatically create the Datadog serverless functionand triggers for specified log groups to forward all CloudWatch logs intoDatadog. After running  terraform apply, you should be able to see logs showingup in Datadog within minutes.\n  With both metrics and logs synchronized into Datadog, we are able to leverageDatadog as the central hub for all things monitoring. We are planning to bringmore features to the module as we migrate Scribd\u2019s infrastructure into AWS.\n Metrics ingested through the official AWS integration are delayed by coupleminutes, which is not ideal to use as signals for monitoring critical systems.There are opportunities to enable real time metrics synchronization byautomating Datadog agent setup.\n The  datadog-serverless-functionsrepocontains two other lambda based AWS augmentations that we may add as availablefeatures of the module:  vpc_flow_log_monitoring and  rds_enhanced_monitoring.\n  Special shout out to Taylor McClure and Hamilton Hord for starting the project, as wellas Sai Kiran Burle, Kamran Farhadi and Eugene Pimenov for improvements and bugfixes.", "posttime": "2020-05-16 05:35:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "terraform,integrate,datadog", "title": "\u4f7f\u7528Terraform\u96c6\u6210Datadog\u548cAWS", "title_en": "Using Terraform to Integrate Datadog and AWS", "transed": 1, "url": "https://tech.scribd.com/blog/2020/managing-datadog-aws-with-terraform.html", "via": "", "real_tags": ["terraform", "integrate", "datadog"]}, {"category": "", "categoryclass": "", "imagename": "44f1fb5aedb35cd455880f632bfadc2c.jpg", "infoid": 1002307, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u88ab\u79f0\u4e3aT\u7ec6\u80de\u7684\u514d\u75ab\u52c7\u58eb\u5e2e\u52a9\u6211\u4eec\u5bf9\u6297\u4e00\u4e9b\u75c5\u6bd2\uff0c\u4f46\u5b83\u4eec\u5728\u5bf9\u6297\u5bfc\u81f4\u51a0\u72b6\u75c5\u6bd2\u7684SARS-CoV-2\u75c5\u6bd2\u65b9\u9762\u7684\u91cd\u8981\u6027\u5c1a\u4e0d\u6e05\u695a\u3002\u73b0\u5728\uff0c\u4e24\u9879\u7814\u7a76\u663e\u793a\uff0c\u53d7\u611f\u67d3\u7684\u4eba\u4f53\u5185\u6709\u9488\u5bf9\u75c5\u6bd2\u7684T\u7ec6\u80de\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u4ed6\u4eec\u7684\u5eb7\u590d\u3002\u8fd9\u4e24\u9879\u7814\u7a76\u8fd8\u53d1\u73b0\uff0c\u4e00\u4e9b\u4ece\u672a\u611f\u67d3\u8fc7SARS-CoV-2\u7684\u4eba\u5177\u6709\u8fd9\u4e9b\u7ec6\u80de\u9632\u5fa1\u80fd\u529b\uff0c\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u4eec\u4e4b\u524d\u611f\u67d3\u4e86\u5176\u4ed6\u51a0\u72b6\u75c5\u6bd2\u3002\n\u201c\u8fd9\u662f\u4ee4\u4eba\u9f13\u821e\u7684\u6570\u636e\uff0c\u201d\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u75c5\u6bd2\u5b66\u5bb6Angela Rasmussen\u8bf4\uff0c\u201c\u867d\u7136\u8fd9\u9879\u7814\u7a76\u6ca1\u6709\u6f84\u6e05\u6e05\u9664SARS-CoV-2\u611f\u67d3\u7684\u4eba\u672a\u6765\u662f\u5426\u80fd\u62b5\u5fa1\u75c5\u6bd2\uff0c\u4f46\u4e24\u9879\u7814\u7a76\u90fd\u786e\u5b9a\u4e86T\u7ec6\u80de\u5bf9\u5b83\u7684\u5f3a\u70c8\u53cd\u5e94\uff0c\u8fd9\u201d\u9884\u793a\u7740\u957f\u671f\u4fdd\u62a4\u6027\u514d\u75ab\u7684\u53d1\u5c55\u201c\uff0cRasmussen\u8bf4\u3002\u8fd9\u4e9b\u53d1\u73b0\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u7814\u7a76\u4eba\u5458\u521b\u9020\u66f4\u597d\u7684\u75ab\u82d7\u3002\n\u6b63\u5728\u5f00\u53d1\u7684100\u591a\u79cd\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u4e3b\u8981\u5173\u6ce8\u53e6\u4e00\u79cd\u514d\u75ab\u53cd\u5e94\uff1a\u6297\u4f53\u3002\u8fd9\u4e9b\u86cb\u767d\u662f\u7531B\u7ec6\u80de\u5236\u9020\u7684\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u4f1a\u4e0eSARS-CoV-2\u7ed3\u5408\uff0c\u963b\u6b62\u5176\u8fdb\u5165\u7ec6\u80de\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cT\u7ec6\u80de\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u963b\u6b62\u611f\u67d3\u3002\u8f85\u52a9T\u7ec6\u80de\u523a\u6fc0B\u7ec6\u80de\u548c\u5176\u4ed6\u514d\u75ab\u9632\u5fa1\u8005\u91c7\u53d6\u884c\u52a8\uff0c\u800c\u6740\u4f24T\u7ec6\u80de\u5219\u7784\u51c6\u5e76\u6467\u6bc1\u53d7\u611f\u67d3\u7684\u7ec6\u80de\u3002\u75be\u75c5\u7684\u4e25\u91cd\u7a0b\u5ea6\u53d6\u51b3\u4e8e\u8fd9\u4e9bT\u7ec6\u80de\u53cd\u5e94\u7684\u5f3a\u5ea6\u3002\n\u5229\u7528\u751f\u7269\u4fe1\u606f\u5b66\u5de5\u5177\uff0c\u7531\u62c9\u970d\u4e9a\u514d\u75ab\u5b66\u7814\u7a76\u6240\u7684\u514d\u75ab\u5b66\u5bb6Shane Crotty\u548cAlessandro Sette\u9886\u5bfc\u7684\u4e00\u4e2a\u5c0f\u7ec4\u9884\u6d4b\u4e86\u54ea\u4e9b\u75c5\u6bd2\u86cb\u767d\u7247\u6bb5\u5c06\u6fc0\u53d1\u6700\u5f3a\u5927\u7684T\u7ec6\u80de\u53cd\u5e94\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u5c0610\u540d\u4ece\u8f7b\u5ea6\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u4e2d\u5eb7\u590d\u7684\u60a3\u8005\u7684\u514d\u75ab\u7ec6\u80de\u66b4\u9732\u5728\u8fd9\u4e9b\u75c5\u6bd2\u7247\u6bb5\u4e2d\u3002\n\u6240\u6709\u7684\u60a3\u8005\u90fd\u643a\u5e26\u4e86\u8bc6\u522bSARS-CoV-2\u523a\u7a81\u86cb\u767d\u7684\u8f85\u52a9T\u7ec6\u80de\uff0c\u8fd9\u4f7f\u5f97\u75c5\u6bd2\u80fd\u591f\u6e17\u900f\u5230\u6211\u4eec\u7684\u7ec6\u80de\u4e2d\u3002\u4ed6\u4eec\u8fd8\u85cf\u533f\u7740\u80fd\u5bf9\u5176\u4ed6SARS-CoV-2\u86cb\u767d\u8d77\u53cd\u5e94\u7684\u8f85\u52a9T\u7ec6\u80de\u3002\u8be5\u56e2\u961f\u572870%\u7684\u53d7\u8bd5\u8005\u4e2d\u68c0\u6d4b\u5230\u75c5\u6bd2\u7279\u5f02\u6027\u6740\u624bT\u7ec6\u80de\uff0c\u4ed6\u4eec\u4eca\u5929\u5728\u201c\u7ec6\u80de\u201d\u6742\u5fd7\u4e0a\u62a5\u9053\u3002\u201c\u514d\u75ab\u7cfb\u7edf\u770b\u5230\u8fd9\u79cd\u75c5\u6bd2\uff0c\u5c31\u4f1a\u4ea7\u751f\u6709\u6548\u7684\u514d\u75ab\u53cd\u5e94\uff0c\u201d\u585e\u7279\u8bf4\u3002\n\u8fd9\u4e00\u7ed3\u679c\u4e0e\u67cf\u6797\u590f\u91cc\u7279\u5927\u5b66\u533b\u9662\u7684\u514d\u75ab\u5b66\u5bb6Andreas Thiel\u548c\u4ed6\u7684\u540c\u4e8b4\u670822\u65e5\u5728MedRxiv\u4e0a\u4f5c\u4e3a\u9884\u5370\u672c\u53d1\u5e03\u7684\u4e00\u9879\u7814\u7a76\u7ed3\u679c\u4e0d\u7b26\u3002\u4ed6\u4eec\u572818\u540d\u51a0\u72b6\u75c5\u6bd2\u4f4f\u9662\u60a3\u8005\u4e2d\u53d1\u73b0\u4e8615\u540d\u9488\u5bf9\u523a\u7a81\u86cb\u767d\u7684\u8f85\u52a9\u6027T\u7ec6\u80de\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8fd8\u8be2\u95ee\u6ca1\u6709\u611f\u67d3SARS-CoV-2\u7684\u4eba\u662f\u5426\u4e5f\u4f1a\u4ea7\u751f\u5bf9\u6297\u5b83\u7684\u7ec6\u80de\u3002Thiel\u548c\u4ed6\u7684\u540c\u4e8b\u5206\u6790\u4e8668\u540d\u672a\u611f\u67d3\u7684\u4eba\u7684\u8840\u6db2\uff0c\u53d1\u73b034%\u7684\u4eba\u62e5\u6709\u8bc6\u522bSARS-CoV-2\u7684\u8f85\u52a9T\u7ec6\u80de\u3002La Jolla\u7814\u7a76\u5c0f\u7ec4\u57282015\u5e74\u81f32018\u5e74\u671f\u95f4\u6536\u96c6\u7684\u7ea6\u4e00\u534a\u50a8\u5b58\u7684\u8840\u6db2\u6837\u672c\u4e2d\u68c0\u6d4b\u5230\u8fd9\u79cd\u4ea4\u53c9\u53cd\u5e94\uff0c\u8fd9\u8fdc\u8fdc\u65e9\u4e8e\u5f53\u524d\u7684\u5927\u6d41\u884c\u5f00\u59cb\u3002\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u7ec6\u80de\u5f88\u53ef\u80fd\u662f\u7531\u8fc7\u53bb\u611f\u67d3\u56db\u79cd\u5bfc\u81f4\u611f\u5192\u7684\u4eba\u7c7b\u51a0\u72b6\u75c5\u6bd2\u4e2d\u7684\u4e00\u79cd\u89e6\u53d1\u7684\uff1b\u8fd9\u4e9b\u75c5\u6bd2\u4e2d\u7684\u86cb\u767d\u8d28\u4e0eSARS-CoV-2\u76f8\u4f3c\u3002\n\u7231\u8377\u534e\u5927\u5b66\u7684\u75c5\u6bd2\u514d\u75ab\u5b66\u5bb6\u53f2\u8482\u6587\u00b7\u74e6\u5c14\u52a0\u8bf4\uff0c\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u201c\u5f88\u5927\u4e00\u90e8\u5206\u4eba\u53ef\u80fd\u80fd\u591f\u5e94\u5bf9\u8fd9\u79cd\u75c5\u6bd2\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u6211\u4eec\u63a5\u89e6\u666e\u901a\u611f\u5192\u75c5\u6bd2\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5c11\u91cf\u7684\u6b8b\u4f59\u514d\u75ab\u529b\u3002\u201d\u7136\u800c\uff0c\u8fd9\u4e24\u9879\u7814\u7a76\u90fd\u6ca1\u6709\u8bd5\u56fe\u786e\u5b9a\u5177\u6709\u4ea4\u53c9\u53cd\u5e94\u6027\u7684\u4eba\u4e0d\u4f1a\u56e0\u51a0\u72b6\u75c5\u6bd2\u800c\u60a3\u75c5\u3002\n\u5728\u8fd9\u4e9b\u7814\u7a76\u4e4b\u524d\uff0c\u7814\u7a76\u4eba\u5458\u4e0d\u77e5\u9053T\u7ec6\u80de\u662f\u5426\u5728\u6d88\u9664SARS-CoV-2\u65b9\u9762\u53d1\u6325\u4f5c\u7528\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u5b83\u4eec\u662f\u5426\u4f1a\u5f15\u53d1\u5371\u9669\u7684\u514d\u75ab\u7cfb\u7edf\u8fc7\u5ea6\u53cd\u5e94\u3002\u201c\u8fd9\u4e9b\u8bba\u6587\u771f\u7684\u5f88\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f00\u59cb\u5b9a\u4e49\u514d\u75ab\u53cd\u5e94\u4e2d\u7684T\u7ec6\u80de\u6210\u5206\uff0c\u201d\u62c9\u65af\u7a46\u68ee\u8bf4\u3002\u4f46\u5979\u548c\u5176\u4ed6\u79d1\u5b66\u5bb6\u8b66\u544a\u8bf4\uff0c\u8fd9\u4e00\u7ed3\u679c\u5e76\u4e0d\u610f\u5473\u7740\u4ece\u51a0\u72b6\u75c5\u6bd2\u4e2d\u5eb7\u590d\u7684\u4eba\u53ef\u4ee5\u514d\u53d7\u518d\u6b21\u611f\u67d3\u3002\n\u514b\u7f57\u8482\u6307\u51fa\uff0c\u4e3a\u4e86\u6fc0\u53d1\u6297\u4f53\u7684\u4ea7\u751f\uff0c\u5bf9\u6297\u75c5\u6bd2\u7684\u75ab\u82d7\u9700\u8981\u523a\u6fc0\u8f85\u52a9T\u7ec6\u80de\u3002\u4ed6\u8bf4\uff1a\u201c\u4ee4\u4eba\u9f13\u821e\u7684\u662f\uff0c\u6211\u4eec\u5728\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u4e2d\u770b\u5230\u9488\u5bf9SARS-CoV-2\u7684\u826f\u597d\u8f85\u52a9\u6027T\u7ec6\u80de\u53cd\u5e94\u3002\u201d\u5317\u5361\u7f57\u6765\u7eb3\u5927\u5b66\u6559\u5802\u5c71\u5206\u6821\u7684\u5206\u5b50\u75c5\u6bd2\u5b66\u5bb6\u96f7\u5207\u5c14\u00b7\u683c\u96f7\u5384\u59c6(Rachel Graham)\u8bf4\uff0c\u8fd9\u4e9b\u7ed3\u679c\u5bf9\u75ab\u82d7\u8bbe\u8ba1\u8fd8\u6709\u5176\u4ed6\u91cd\u8981\u7684\u610f\u4e49\u3002\u5927\u591a\u6570\u6b63\u5728\u7814\u53d1\u7684\u75ab\u82d7\u65e8\u5728\u5f15\u53d1\u9488\u5bf9SPAKE\u7684\u514d\u75ab\u53cd\u5e94\uff0c\u4f46La Jolla\u5c0f\u7ec4\u7684\u7814\u7a76\u786e\u5b9a\uff0cT\u7ec6\u80de\u5bf9\u51e0\u79cd\u75c5\u6bd2\u86cb\u767d\u6709\u53cd\u5e94\uff0c\u8fd9\u8868\u660e\u57fa\u4e8e\u8fd9\u4e9b\u86cb\u767d\u7684\u75ab\u82d7\u53ef\u80fd\u4f1a\u66f4\u6709\u6548\u3002\u683c\u96f7\u5384\u59c6\u8bf4\uff1a\u201c\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u53ea\u4e13\u6ce8\u4e8e\u4e00\u79cd\u86cb\u767d\u3002\u201d", "note_en": "Immune warriors known as T cells help us fight some viruses, but their importance for battling SARS-CoV-2, the virus that causes COVID-19, has been unclear. Now, two studies reveal infected people harbor T cells that target the virus\u2014and may help them recover. Both studies also found some people never infected with SARS-CoV-2 have these cellular defenses, most likely because they were previously infected with other coronaviruses.\n \u201cThis is encouraging data,\u201d says virologist Angela Rasmussen of Columbia University.\u00a0Although the studies don\u2019t clarify whether people who clear a SARS-CoV-2 infection can ward off the virus in the future, both identified strong T cell responses to it, which \u201cbodes well for the development of long-term protective immunity,\u201d Rasmussen says. The findings could also help researchers create better vaccines.\n The more than 100 COVID-19 vaccines in development mainly focus on another immune response: antibodies. These proteins are made by B cells and ideally latch onto SARS-CoV-2 and prevent it from entering cells. T cells, in contrast, thwart infections in two different ways. Helper T cells spur B cells and other immune defenders into action, whereas killer T cells target and destroy infected cells. The severity of disease can depend on the strength of these T cell responses.\n Using bioinformatics tools, a team led by Shane Crotty and Alessandro Sette, immunologists at the La Jolla Institute for Immunology, predicted which viral protein pieces would provoke the most powerful T cell responses. They then exposed immune cells from 10 patients who had recovered from mild cases of COVID-19 to these viral snippets.\n All of the patients carried helper T cells that recognized the SARS-CoV-2 spike protein, which enables the virus to infiltrate our cells. They also harbored helper T cells that react to other SARS-CoV-2 proteins. And the team detected virus-specific killer T cells in 70% of the subjects, they report today in  Cell. \u201cThe immune system sees this virus and mounts an effective immune response,\u201d Sette says.\n The results jibe with those of a study posted as a preprint on medRxiv on 22 April by immunologist Andreas Thiel of the Charit\u00e9 University Hospital in Berlin and colleagues. They  identified helper T cells targeting the spike protein in 15 out of 18 patients hospitalized with COVID-19.\n The teams also asked whether people who haven\u2019t been infected with SARS-CoV-2 also produce cells that combat it. Thiel and colleagues analyzed blood from 68 uninfected people and found that 34% hosted helper T cells that recognized SARS-CoV-2. The La Jolla team detected this crossreactivity in about half of stored blood samples collected between 2015 and 2018, well before the current pandemic began. The researchers think these cells were likely triggered by past infection with one of the four human coronaviruses that cause colds; proteins in these viruses resemble those of SARS-CoV-2.\n The results suggest \u201cone reason that a large chunk of the population may be able to deal with the virus is that we may have some small residual immunity from our exposure to common cold viruses,\u201d says viral immunologist Steven Varga of the University of Iowa. However, neither of the studies attempted to establish that people with crossreactivity don\u2019t become as ill from COVID-19.\n Before these studies, researchers didn\u2019t know whether T cells played a role in eliminating SARS-CoV-2, or even whether they could provoke a dangerous immune system overreaction. \u201cThese papers are really helpful because they start to define the T cell component of the immune response,\u201d Rasmussen says. But she and other scientists caution that the results do not mean that people who have recovered from COVID-19 are protected from reinfection.\n To spark production of antibodies, vaccines against the virus need to stimulate helper T cells, Crotty notes. \u201cIt is encouraging that we are seeing good helper T cell responses against SARS-CoV-2 in COVID-19 cases,\u201d he says. The results have other significant implications for vaccine design, says molecular virologist Rachel Graham of the University of North Carolina, Chapel Hill. Most vaccines under development aim to elicit an immune response against spike, but the La Jolla group\u2019s study\u00a0determined that T cells reacted to several viral proteins, suggesting vaccines that sic the immune system on these proteins as well could be more effective.\u00a0\u201cIt is important to not just concentrate on one protein,\u201d Graham says.", "posttime": "2020-05-16 05:34:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,bode,\u7ec6\u80de", "title": "\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u4e2d\u53d1\u73b0\u7684T\u7ec6\u80de\u5bf9\u957f\u671f\u514d\u75ab\u662f\u4e2a\u597d\u5146\u5934", "title_en": "T cells found in Covid-19 patients \u2018bode well\u2019 for long-term immunity", "transed": 1, "url": "https://www.sciencemag.org/news/2020/05/t-cells-found-covid-19-patients-bode-well-long-term-immunity", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "bode", "\u7ec6\u80de"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002306, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56e0\u6b64\uff0c\u5047\u8bbe\u60a8\u5df2\u7ecf\u5c06\u60a8\u7684Terraform\u57fa\u7840\u8bbe\u65bd\u5206\u89e3\u6210\u591a\u4e2a\u72ec\u7acb\u7684\u5c0f\u5806\u6808\u3002\u5728\u5b83\u4eec\u4e4b\u95f4\u5171\u4eab\u516c\u5171\u6570\u636e\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5728\u672c\u6f14\u793a\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe\u5728\u4e0d\u540c\u7684\u5806\u6808\u4e2d\u6709\u4e24\u4e2a\u670d\u52a1\uff1aservice-a\u548cservice-b\uff0c\u8fd9\u4e24\u4e2a\u670d\u52a1\u90fd\u9700\u8981\u540c\u4e00\u4e2avPC\u4e2d\u76f8\u540c\u5b50\u7f51\u4e0a\u7684ALB\u3002\n\u6a21\u5757service_a_alb{source=&#34\uff1bterraform-aws-module/alb/aws&#34\uff1bname=&#34\uff1bservice-a&#34\uff1bload_balancer_type=&#34\uff1bapplication&#34\uff1bvpc_id=&#34\uff1bvpc-12345&#34\uff1bsubnet=[&#34\uff1bsubnetfoo&#34\uff1b\uff0c&#34\uff1bsubnetbar&#34\uff1b\uff0c&#34\uff1bsubnetbaz&#34\uff1b]\u3002\n\u6a21\u5757\u670d\u52a1_b_alb{\u6e90=&#34\uff1bterraform-aws-module/alb/aws&#34\uff1b\u540d\u79f0=&#34\uff1b\u670d\u52a1-b&#34\uff1b\u8d1f\u8f7d\u5747\u8861\u5668\u7c7b\u578b=&#34\uff1b\u5e94\u7528\u7a0b\u5e8f&#34\uff1bvpc_id=&#34\uff1bvpc-12345&#34\uff1b\u5b50\u7f51=[&#34\uff1b\u5b50\u7f51-foo&#34\uff1b\uff0c&#34\uff1b\u5b50\u7f51\u6761&#34\uff1b\uff0c&#34\uff1b\u5b50\u7f51-baz&#34\uff1b]\u3002\n\u60a8\u53ef\u4ee5\u770b\u5230vPC_id\u548c\u5b50\u7f51\u88ab\u590d\u5236\u5e76\u5728\u5806\u6808\u4e4b\u95f4\u5171\u4eab\u3002\u73b0\u5728\u6700\u660e\u663e\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u6570\u636e\u8d44\u6e90\uff1a\nData AWS_vpc vpc{default=false filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bmy-vpc&#34\uff1b]}}data aws_subnetids public{vpc_id=data.aws_vpc.vpc.id filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bpublic-*&#34\uff1b\uff0c]}}\u6a21\u5757service_a_alb{source=&#34\uff1bTerraForm-aws-module/alb/aws&#34\uff1bname=&#34\uff1bservice-a&#34\uff1bload_balancer_type=&#34\uff1bapplication&#34\uff1bvpc_id=data.aws_vpc.vpc_id subnet=data.aws_subnet_ids.public.ids}\u3002\nData AWS_vpc vpc{default=false filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bmy-vpc&#34\uff1b]}}data aws_subnetids public{vpc_id=data.aws_vpc.vpc.id filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bpublic-*&#34\uff1b\uff0c]}}\u6a21\u5757service_b_alb{source=&#34\uff1bTerraForm-aws-module/alb/aws&#34\uff1bname=&#34\uff1bservice-b&#34\uff1bload_balancer_type=&#34\uff1bapplication&#34\uff1bvpc_id=data.aws_vpc.vpc_id subnet=data.aws_subnet_ids.public.ids}\u3002\n\u4f46\u662f\u73b0\u5728\u6570\u636e\u8d44\u6e90\u662f\u91cd\u590d\u7684\uff0c\u5e76\u4e14AWS\u521a\u521a\u5f03\u7528\u4e86\u60a8\u7684\u4e00\u4e2a\u53ef\u7528\u533a\u3002\u4e0d\u80fd\u518d\u5728\u5176\u4e2d\u63d0\u4f9b\u8d44\u6e90\u3002\u60a8\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u8fdb\u5165\u6bcf\u4e2a\u5806\u6808\u5e76\u7f16\u8f91\u6570\u636e\u8d44\u6e90\u3002\u600e\u4e48\u529e\u5462\uff1f\nData AWS_vpc vpc{default=false filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bmy-vpc&#34\uff1b]}}data aws_subnetids public{vpc_id=data.aws_vpc.vpc.id filter{name=&#34\uff1btag\uff1aname&#34\uff1bvalues=[&#34\uff1bpublic-*&#34\uff1b\uff0c]}}\u8f93\u51favpc_id{value=data.aws_vpc.vpc.id}\u8f93\u51fapublic_subnetid{value=data.aws_\u5b50\u7f51_ids.public.ids}terraform{backend&#34\uff1bs3&#34\uff1b{bucket=&#34\uff1bterraform.example.com&#34\uff1bkey=&#34\uff1b{[env_name]}/{[AWS_Region]}/{[vpc_name]}&#34\uff1bregion=\u3002\ndata terraform_remote_state env{\u540e\u7aef=&#34\uff1bS3&#34\uff1b\u914d\u7f6e={\u5b58\u50a8\u6876=&#34\uff1bterraform.example.com&#34\uff1bENCRYPT=TRUE KEY=&#34\uff1b${var.env_name}/${var.aws_region}/${var.vpc_name}&#34\uff1bRegion=var.aws_region}}\u672c\u5730{PUBLIC_SUBNET_ID=data.terraform_remote_state.env.outputs.public_subnet_ids vpc_id=data.terraform_remote_state.env.outputs.vpc_id}\u6a21\u5757SERVICE_a_ALB{SOURCE-AWS-MODULES/ALB/AWS&#34\uff1bNAME=&#34\uff1bSERVICE-a&#34\uff1bLOAD_BALANER_TYPE=&#34\uff1bAPPLICATION&#34\uff1bvpc_id=local.vpc_id\u5b50\u7f51=local.public_subnet_ids}\u3002\ndata terraform_remote_state env{\u540e\u7aef=&#34\uff1bS3&#34\uff1b\u914d\u7f6e={\u5b58\u50a8\u6876=&#34\uff1bterraform.example.com&#34\uff1bENCRYPT=TRUE KEY=&#34\uff1b${var.env_name}/${var.aws_region}/${var.vpc_name}&#34\uff1bRegion=var.aws_region}}\u672c\u5730{PUBLIC_SUBNET_ID=data.terraform_remote_state.env.outputs.public_subnet_ids vpc_id=data.terraform_remote_state.env.outputs.vpc_id}\u6a21\u5757SERVICE_b_ALB{SOURCE-AWS-MODULES/ALB/AWS&#34\uff1bNAME=&#34\uff1bSERVICE-b&#34\uff1bLOAD_BANCER_TYPE=&#34\uff1bAPPLICATION&#34\uff1bvpc_id=local.vpc_id\u5b50\u7f51=local.public_subnet_ids}\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u80fd\u8ba4\u4e3a\u5bf9\u6570\u636e\u5806\u6808\u7684\u5f15\u7528\u662f\u91cd\u590d\u7684\u3002\u662f\u7684\uff0c\u4f46\u8ba9\u6211\u4eec\u56de\u5230\u88ab\u5426\u51b3\u7684az\u7684\u95ee\u9898\u4e0a\u6765\u3002\u8981\u8fc7\u6ee4\u6389\u4e0d\u826f\u5b50\u7f51\uff0c\u60a8\u53ea\u9700\u5728\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u66f4\u6539\uff1a\n\u672c\u5730\u53d8\u91cf{EXCLUDE_PUBLIC_SUBNETS=[&#34\uff1bSUBNET-BAZ&#34\uff1b]}\u8f93\u51faPUBLIC_SUBLINT_ID{value=[\u5bf9\u4e8e\u6570\u636e\u4e2d\u7684SUBTONET_ID\u3002aws_SUBLINT_ids.public.ids\uff1aSUBLINT_ID if\uff01\u5305\u542b(local.excluded_public_subnet\uff0csubnetid)]}\u3002\n\u8bf7\u544a\u8bc9\u6211\u60a8\u5bf9\u6b64\u7684\u60f3\u6cd5\u548c\u610f\u89c1\u3002\u5982\u4f55\u5728\u5206\u89e3\u7684Terraform\u73af\u5883\u4e2d\u7ba1\u7406\u5171\u4eab\u6570\u636e\uff1f", "note_en": "So let\u2019s say you have decomposed your Terraform infrastructure into small individual and mostly independent stacks. What is the best method to share common data between them? In this article we will discuss a possible solution.\n For this demonstration we will assume there are two services in separate stacks; service-a and service-b, both require an ALB on same the subnets in the same VPC.\n module service_a_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-a&#34;   load_balancer_type = &#34;application&#34;   vpc_id = &#34;vpc-12345&#34;  subnets = [  &#34;subnet-foo&#34;,  &#34;subnet-bar&#34;,  &#34;subnet-baz&#34;  ]  ... }\n  module service_b_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-b&#34;   load_balancer_type = &#34;application&#34;   vpc_id = &#34;vpc-12345&#34;  subnets = [  &#34;subnet-foo&#34;,  &#34;subnet-bar&#34;,  &#34;subnet-baz&#34;  ]  ... }\n You can see the vpc_id and subnets are duplicated and shared between the stacks. The obvious thing to do now would be to use data resources:\n data aws_vpc vpc {  default = false  filter {  name = &#34;tag:Name&#34;  values = [&#34;MY-VPC&#34;]  } }  data aws_subnet_ids public {  vpc_id = data.aws_vpc.vpc.id  filter {  name = &#34;tag:Name&#34;  values = [  &#34;PUBLIC-*&#34;,  ]  } } module service_a_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-a&#34;  load_balancer_type = &#34;application&#34;   vpc_id = data.aws_vpc.vpc_id  subnets = data.aws_subnet_ids.public.ids }\n  data aws_vpc vpc {  default = false  filter {  name = &#34;tag:Name&#34;  values = [&#34;MY-VPC&#34;]  } }  data aws_subnet_ids public {  vpc_id = data.aws_vpc.vpc.id  filter {  name = &#34;tag:Name&#34;  values = [  &#34;PUBLIC-*&#34;,  ]  } } module service_b_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-b&#34;   load_balancer_type = &#34;application&#34;   vpc_id = data.aws_vpc.vpc_id  subnets = data.aws_subnet_ids.public.ids }\n but now the data resources are duplicated and AWS has just deprecated one of your availability zones. Resources can no longer be provisioned in it. The last thing you want to do is to go into each stack and edit the data resources. What to do?\n  data aws_vpc vpc {  default = false  filter {  name = &#34;tag:Name&#34;  values = [&#34;MY-VPC&#34;]  } }  data aws_subnet_ids public {  vpc_id = data.aws_vpc.vpc.id  filter {  name = &#34;tag:Name&#34;  values = [  &#34;PUBLIC-*&#34;,  ]  } } output vpc_id {  value = data.aws_vpc.vpc.id } output public_subnet_ids {  value = data.aws_subnet_ids.public.ids } terraform {  backend &#34;s3&#34; {  bucket = &#34;terraform.example.com&#34;  key = &#34;{[ env_name ]}/{[ aws_region ]}/{[ vpc_name ]}&#34;  region = {[ aws_region ]}  encrypt = true  } }\n  data terraform_remote_state env {  backend = &#34;s3&#34;  config = {  bucket = &#34;terraform.example.com&#34;  encrypt = true  key = &#34;${var.env_name}/${var.aws_region}/${var.vpc_name}&#34;  region = var.aws_region  } } locals {  public_subnet_ids = data.terraform_remote_state.env.outputs.public_subnet_ids  vpc_id = data.terraform_remote_state.env.outputs.vpc_id } module service_a_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-a&#34;   load_balancer_type = &#34;application&#34;   vpc_id = local.vpc_id  subnets = local.public_subnet_ids }\n  data terraform_remote_state env {  backend = &#34;s3&#34;  config = {  bucket = &#34;terraform.example.com&#34;  encrypt = true  key = &#34;${var.env_name}/${var.aws_region}/${var.vpc_name}&#34;  region = var.aws_region  } } locals {  public_subnet_ids = data.terraform_remote_state.env.outputs.public_subnet_ids  vpc_id = data.terraform_remote_state.env.outputs.vpc_id } module service_b_alb {  source = &#34;terraform-aws-modules/alb/aws&#34;   name = &#34;service-b&#34;   load_balancer_type = &#34;application&#34;   vpc_id = local.vpc_id  subnets = local.public_subnet_ids }\n By now you might be thinking well the references to the data stack are duplicated. Yes they are but let\u2019s go back to the issue of the deprecated az. To filter out the bad subnets you only need to make the change in one place:\n locals {  excluded_public_subnets = [  &#34;subnet-baz&#34;  ] } output public_subnet_ids {  value = [  for subnet_id in data.aws_subnet_ids.public.ids:  subnet_id if ! contains(local.excluded_public_subnets, subnet_id)  ] }\n  Please let me know your thoughts and opinions on this. How do you manage shared data in a decomposed Terraform environment?", "posttime": "2020-05-16 05:34:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5171\u4eab,global,aws", "title": "\u4e0eTerraform\u5171\u4eab\u5168\u5c40\u5806\u6808\u6570\u636e", "title_en": "Sharing global stack data with Terraform", "transed": 1, "url": "https://medium.com/@dpetzold/sharing-global-stack-data-with-terraform-1af0e2757e11", "via": "", "real_tags": ["\u5171\u4eab", "global", "aws"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002305, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Nelson Teich\u7684\u8f9e\u804c\u662f\u5728\u535a\u5c14\u7d22\u7eb3\u7f57\u4e8e4\u6708\u4efd\u89e3\u96c7\u8def\u6613\u65af\u00b7\u66fc\u5fb7\u5854\u540e\u536b\u751f\u90e8\u53d1\u51fa\u7684\u4fe1\u606f\u4e2d\u5ba3\u5e03\u7684\u3002\n\u5df4\u897f\u536b\u751f\u90e8\u957f\u5728\u4e0a\u4efb\u4e0d\u5230\u4e00\u4e2a\u6708\u540e\u7a81\u7136\u8f9e\u804c\uff0c\u5c31\u5728\u4e00\u5929\u524d\uff0c\u8be5\u56fd\u5ba3\u5e03\u5df2\u6709\u8fd11.4\u4e07\u4eba\u6b7b\u4ea1\u3002\n\u7eb3\u5c14\u900a\u00b7\u6cf0\u5947(Nelson Teich)\u7684\u7a81\u7136\u8f9e\u804c\u662f\u5728\u5468\u4e94\u4e0a\u5348\u536b\u751f\u90e8\u53d1\u5e03\u7684\u4e00\u6761\u7b80\u77ed\u7684WhatsApp\u6d88\u606f\u4e2d\u5ba3\u5e03\u7684\uff0c\u8fd9\u53ef\u80fd\u4f1a\u52a0\u6df1\u56f4\u7ed5\u5df4\u897f\u5e94\u5bf9\u57c3\u535a\u62c9\u75ab\u60c5\u7684\u52a8\u8361\u3002\nTeich\u662f\u5df4\u897f\u4e0d\u5230\u4e00\u4e2a\u6708\u5185\u7b2c\u4e8c\u4f4d\u79bb\u4efb\u7684\u536b\u751f\u90e8\u957f\u3002\n\u4ed6\u5e7f\u53d7\u6b22\u8fce\u7684\u524d\u4efb\u8def\u6613\u65af\u00b7\u66fc\u5fb7\u5854(Luiz ManDetta)\u4e8e4\u670816\u65e5\u88ab\u8be5\u56fd\u6781\u53f3\u7ffc\u603b\u7edf\u8d3e\u5c14\u00b7\u535a\u5c14\u7d22\u7eb3\u7f57(Jair Bolsonaro)\u89e3\u96c7\uff0c\u539f\u56e0\u662f\u5728\u793e\u4f1a\u5b64\u7acb\u63aa\u65bd\u4e0a\u5b58\u5728\u5206\u6b67\uff0c\u535a\u5c14\u7d22\u7eb3\u7f57\u8ba4\u4e3a\u8fd9\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\u6cf0\u5947\u8f9e\u804c\u7684\u6d88\u606f\u8ba9\u6297\u51fb\u75c5\u6bd2\u7684\u533b\u751f\u4eec\u611f\u5230\u6cae\u4e27\u3002\u8036\u9c81\u5927\u5b66\u533b\u5b66\u9662(Yale School Of Medicine)\u6d41\u884c\u75c5\u5b66\u6559\u6388\u963f\u5c14\u4f2f\u7279\u00b7\u79d1(Albert Ko)\u6307\u8d23\u201c\u7f3a\u4e4f\u9886\u5bfc\u529b\u548c\u6cbb\u7406\u4e0d\u5584\u201d\u3002\n\u201c\u5931\u53bb\u4e24\u540d\u536b\u751f\u90e8\u957f\u771f\u7684\u4f1a\u5bf9\u8be5\u56fd\u6297\u51fb\u75ab\u60c5\u7684\u80fd\u529b\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\uff0c\u201dKo\u8bf4\uff0c\u4ed6\u5728\u5df4\u897f\u6709\u4e30\u5bcc\u7684\u5de5\u4f5c\u7ecf\u9a8c\u3002\n\u5728\u5468\u4e94\u4e0b\u5348\u5411\u8bb0\u8005\u53d1\u8868\u7684\u7b80\u77ed\u7535\u89c6\u58f0\u660e\u4e2d\uff0c\u6cf0\u5947\u6ca1\u6709\u89e3\u91ca\u4ed6\u79bb\u5f00\u7684\u539f\u56e0-\u4e5f\u6ca1\u6709\u56de\u7b54\u4efb\u4f55\u95ee\u9898\u3002\n\u201c\u751f\u6d3b\u662f\u7531\u9009\u62e9\u7ec4\u6210\u7684\uff0c\u4eca\u5929\u6211\u9009\u62e9\u4e86\u79bb\u5f00\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5728\u8fd9\u6837\u56f0\u96be\u7684\u65f6\u671f\uff0c\u7ad9\u5728\u8fd9\u6837\u4e00\u4e2a\u90e8\u59d4\u7684\u524d\u5217\u5e76\u4e0d\u5bb9\u6613\u3002\u201d\n\u5728\u4e0a\u4efb\u65f6\uff0cTeich\u6700\u521d\u4f3c\u4e4e\u9075\u5faaBolsonaro\u7684\u8def\u7ebf\uff0c\u8ba4\u4e3a\u652f\u6491\u5df4\u897f\u7ecf\u6d4e\u4e0e\u63a7\u5236\u4e0d\u65ad\u589e\u957f\u7684\u5927\u6d41\u884c\u6b7b\u4ea1\u4eba\u6570\u540c\u6837\u91cd\u8981\u3002\n\u4f46\u6700\u8fd1\u51e0\u5468\uff0cTeich\u5728\u793e\u4f1a\u5b64\u7acb\u548c\u4f7f\u7528\u759f\u75be\u836f\u7269\u6c2f\u55b9\u6cbb\u7597\u51a0\u72b6\u75c5\u6bd2\u7684\u95ee\u9898\u4e0a\u8d8a\u6765\u8d8a\u4e0d\u540c\u610fBolsonaro\u7684\u89c2\u70b9\u3002\n\u5df4\u897f\u603b\u7edf\u70ed\u60c5\u5730\u652f\u6301\u4f7f\u7528\u8fd9\u79cd\u836f\u7269\uff0c\u5c3d\u7ba1\u4e00\u7cfb\u5217\u533b\u5b66\u7814\u7a76\u8868\u660e\uff0c\u5b83\u5bf9\u60a3\u6709\u51a0\u72b6\u75c5\u6bd2\u7684\u4eba\u6ca1\u6709\u79ef\u6781\u5f71\u54cd\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5065\u5eb7\u5e76\u53d1\u75c7\u3002\n\u5468\u56db\uff0c\u535a\u5c14\u7d22\u7eb3\u7f57\u5ba3\u5e03\uff0c\u4ed6\u5e0c\u671b\u4fee\u6539\u66fc\u5fb7\u5854\u5f15\u5165\u7684\u89c4\u8303\u6c2f\u55b9\u4f7f\u7528\u7684\u8bae\u5b9a\u4e66\u3002\n\u5468\u4e00\uff0c\u5f53\u6cf0\u5947\u5728\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\u53d1\u73b0\u603b\u7edf\u53d1\u5e03\u4e86\u4e00\u9879\u6cd5\u4ee4\uff0c\u5c06\u5065\u8eab\u623f\u3001\u7f8e\u5bb9\u9662\u548c\u7406\u53d1\u5e08\u5217\u4e3a\u57fa\u672c\u670d\u52a1\u65f6\uff0c\u4ed6\u516c\u5f00\u611f\u5230\u5c34\u5c2c\u3002\n\u201c\u8fd9\u4e0d\u662f\u6211\u4eec\u7684\u89d2\u8272\uff0c\u8fd9\u662f\u603b\u7edf\u7684\u51b3\u5b9a\uff0c\u201d\u4ed6\u8bf4\uff0c\u770b\u8d77\u6765\u5f88\u56f0\u60d1\u3002\n\u6cf0\u5947\u4e0b\u53f0\u540e\uff0c\u4ed6\u7684\u524d\u4efb\u66fc\u5fb7\u5854\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u8ba9\u6211\u4eec\u7948\u7977\u5427\u3002\u201d\u5728\u63a5\u53d7\u201c\u5723\u4fdd\u7f57\u65e5\u62a5\u201d(Estado De S Paulo)\u7684\u91c7\u8bbf\u65f6\uff0c\u66fc\u5fb7\u5854\u5c06\u6cf0\u5947\u77ed\u6682\u7684\u4efb\u671f\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u8ff7\u5931\u7684\u6708\u4efd\uff0c\u88ab\u6254\u8fdb\u4e86\u5783\u573e\u6876\u201d\u3002\n\u6839\u636e\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins University)\u7684\u6570\u636e\uff0c\u5468\u56db\u665a\u95f4\uff0c\u5df4\u897f\u572824\u5c0f\u65f6\u5185\u62a5\u544a\u4e86844\u4f8b\u65b0\u6b7b\u4ea1\u75c5\u4f8b\uff0c\u4f7f\u603b\u6b7b\u4ea1\u4eba\u6570\u8fbe\u523013993\u4eba\uff0c\u76ee\u524d\u6709202918\u4f8b\u6b7b\u4ea1\u75c5\u4f8b\uff0c\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u7b2c\u516d\u5927\u53d7\u5f71\u54cd\u56fd\u5bb6\u3002", "note_en": "Nelson Teich\u2019s resignation was announced in message from health ministry after Bolsonaro sacked Luiz Mandetta in April\n    Brazil\u2019s health minister has abruptly resigned after less than a month on the job \u2013 and a day after the country announced it had recorded nearly 14,000 deaths.\n The sudden resignation of Nelson Teich was announced in a curt WhatsApp message from the health ministry on Friday morning, and is likely to deepen the turmoil around Brazil\u2019s flailing response to the pandemic.\n Teich was Brazil\u2019s second health minister to leave office in less than a month.\n His popular predecessor, Luiz Mandetta, was fired by he country\u2019s far-right president, Jair Bolsonaro,on 16 April following disagreements over social isolation measures, which Bolsonaro has dismissed as unnecessary.\n News of Teich\u2019s resignation was greeted with dismay by doctors fighting the virus. Albert Ko, a professor of epidemiology at the Yale School of Medicine blamed \u201cthe lack of leadership and poor governance\u201d.\n \u201cTo lose two health ministers will really have a dramatic impact on the country\u2019s ability to contest the epidemic,\u201d said Ko, who has extensive experience working in Brazil.\n In a short televised  statement to reporters on Friday afternoon, Teich did not explain his reasons for leaving \u2013 nor did he answer any questions.\n \u201cLife is made of choices and today I chose to leave,\u201d he said. \u201cIt\u2019s not easy to be at the front of a ministry like this at such a difficult period.\u201d\n  On taking office, Teich initially appeared to follow Bolsonaro\u2019s line, arguing that bolstering Brazil\u2019s economy was as important as controlling the pandemic\u2019s growing death toll.\n But in recent weeks Teich had increasingly disagreed with Bolsonaro over social  isolation and the use of the malaria drug chloroquine to treat coronavirus.\n The Brazilian president has enthusiastically backed using the drug, despite a string of medical studies showing that it has no positive effect on people suffering Covid-19, and can possibly cause other health complications.\n On Thursday Bolsonaro announced that he wanted to change the protocol regulating the use of chloroquine that Mandetta had introduced.\n Teich was publicly embarrassed on Monday when he discovered during a press conference that the president had issued a decree that classified gyms, beauty salons and barbers as essential services.\n \u201cThis was not our role, it was the president\u2019s decision,\u201d he  said, looking flummoxed.\n After Teich stood down, his predecessor, Mandetta,  tweeted: \u201cLet\u2019s pray.\u201d In an interview for the Estado de S Paulo newspaper, Mandetta described Teich\u2019s short tenure as \u201ca lost month, thrown in the garbage bin\u201d.\n Brazil reported 844 new deaths in 24 hours on Thursday night, taking the total to 13,993 and it now has  202,918 cases, making it the world\u2019s sixth most affected country, according to  Johns Hopkins University figures.", "posttime": "2020-05-16 05:33:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,loses,\u5df4\u897f", "title": "\u5df4\u897f\u4e0d\u5230\u4e00\u4e2a\u6708\u5185\u5931\u53bb\u7b2c\u4e8c\u4f4d\u536b\u751f\u90e8\u957f\uff0c\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u4eba\u6570\u4e0a\u5347", "title_en": "Brazil loses second health minister in less than a month as Covid-19 deaths rise", "transed": 1, "url": "https://www.theguardian.com/world/2020/may/15/brazil-health-minister-nelson-teich-resigns", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "loses", "\u5df4\u897f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002304, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7845\u63a2\u6d4b\u5668\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7c92\u5b50\u548c\u6838\u7269\u7406\u4e2d\u6d4b\u91cf\u7535\u79bb\u8f90\u5c04\u3002\u8fd9\u4e2a\u81ea\u5df1\u52a8\u624b\u7684\u9879\u76ee\u5141\u8bb8\u4f7f\u7528\u7845\u5149\u7535\u4e8c\u6781\u7ba1\u4ece\u5934\u5f00\u59cb\u5236\u9020\u4f4e\u6210\u672c\u7684\u7c92\u5b50\u63a2\u6d4b\u5668\u3002\u5b83\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u7c92\u5b50\u7c7b\u578b(\u963f\u5c14\u6cd5\u7c92\u5b50\u548c\u7535\u5b50)\uff0c\u5e76\u6d4b\u91cf\u5b83\u4eec\u572833keV\u52308 MeV\u4e4b\u95f4\u7684\u80fd\u91cf\u3002\u63a2\u6d4b\u5668\u5fc5\u987b\u5c4f\u853d\u5149\u7ebf\uff0c\u56e0\u6b64\u6700\u597d\u5b89\u88c5\u5728\u4f60\u6700\u559c\u6b22\u7684\u7cd6\u679c\u9521\u76d2\u91cc\u3002\u4fe1\u53f7\u8f93\u51fa\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u666e\u901a\u7b14\u8bb0\u672c\u7535\u8111\u548c\u667a\u80fd\u624b\u673a\u7684\u9ea6\u514b\u98ce\u6216\u8033\u673a\u8f93\u5165\u3002\n\u8fd9\u4e2a\u9879\u76ee\u662f\u4e3a\u5b66\u751f\u548c\u6559\u80b2\u5de5\u4f5c\u8005\u8bbe\u8ba1\u7684\u4e00\u4e2a\u516c\u6c11\u79d1\u5b66\u5de5\u5177\uff0c\u5141\u8bb8\u4ed6\u4eec\u53d1\u73b0\u6211\u4eec\u73af\u5883\u4e2d\u7684\u5929\u7136\u653e\u5c04\u6027\uff0c\u5e76\u8c03\u67e5\u65e5\u5e38\u7269\u54c1\uff0c\u5982\u8001\u5f0f\u73bb\u7483\u548c\u65e7\u9676\u74f7\u3002\u5f53\u7136\uff0c\u8457\u540d\u7684\u9999\u8549\u548c\u5176\u4ed6\u98df\u7269\uff0c\u5982\u67d0\u4e9b\u81b3\u98df\u98df\u76d0\u6216\u575a\u679c\uff0c\u90fd\u662f\u6709\u8da3\u7684\u7814\u7a76\u5bf9\u8c61\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u8f7b\u5fae\u7684\u653e\u5c04\u6027\uff0c\u8fd9\u662f\u56e0\u4e3a\u5929\u7136\u4e30\u5bcc\u7684\u94be-40\u540c\u4f4d\u7d20\uff0c\u8fd9\u4f7f\u5f97\u5373\u4f7f\u662f\u6211\u4eec\u4eba\u7c7b\u4e5f\u6709\u4e00\u70b9\u70b9\u653e\u5c04\u6027\u3002\nDIY\u7c92\u5b50\u63a2\u6d4b\u5668\u662f\u5f00\u6e90\u7684\u79d1\u5b66\u786c\u4ef6\uff0c\u6839\u636eCERN\u5f00\u653e\u786c\u4ef6\u8bb8\u53ef\u8bc1\u53d1\u5e03\u3002\u65bd\u5de5\u7ec6\u8282\u548c\u8fdb\u884c\u6d4b\u91cf\u7684\u8f6f\u4ef6\u53ef\u5728\u76f8\u5e94\u7684\u9879\u76ee\u7f51\u7ad9\u4e0a\u627e\u5230\u3002\u7535\u8def\u677f\u548c\u7535\u5b50\u90e8\u4ef6(\u7ea620\u6b27\u5143)\u53ef\u4ee5\u901a\u8fc7\u5f00\u653e\u7684\u786c\u4ef6\u8bbe\u8ba1\u5e93Kitspace\u8f7b\u677e\u91c7\u8d2d\u3002\u8fd9\u6b3e\u63a2\u6d4b\u5668\u6709\u4e24\u79cd\u7248\u672c\uff0c\u7535\u5b50\u63a2\u6d4b\u5668\u7684\u53d8\u79cd\u662f\u4e3a\u7535\u5b50\u521d\u5b66\u8005\u63a8\u8350\u7684\u3002\u4e0b\u9762\u8ba8\u8bba\u7684\u6d4b\u91cf\u662f\u7528\u66f4\u5148\u8fdb\u7684\u03b1\u8c31\u4eea\u53d8\u5f02\u4f53\u8fdb\u884c\u7684\u3002\u4e24\u4e2a\u53d8\u79cd\u6240\u9700\u7684\u7535\u8def\u677f\u76f8\u540c\uff0c\u4f46\u67d0\u4e9b\u7535\u5b50\u90e8\u4ef6\u6709\u6240\u4e0d\u540c\u3002\n\u5728\u76f8\u5e94\u7684\u79d1\u5b66\u8bba\u6587\u4e2d\uff0c\u8be5\u63a2\u6d4b\u5668\u7684\u6027\u80fd\u901a\u8fc7\u591a\u4e2a\u53c2\u8003\u6d4b\u91cf\u8fdb\u884c\u4e86\u8868\u5f81\uff0c\u5e76\u4e0e\u6a21\u62df\u7ed3\u679c\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5b83\u8fd8\u5305\u62ec\u5173\u4e8e\u5982\u4f55\u5c06\u539f\u672c\u7528\u4e8e\u63a2\u6d4b\u5149\u7684\u534a\u5bfc\u4f53\u7845\u4e8c\u6781\u7ba1\u6539\u53d8\u7528\u9014\u4ee5\u6d4b\u91cf\u7535\u79bb\u8f90\u5c04\u548c\u653e\u5c04\u6027\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u5728\u4e0b\u9762\u6240\u793a\u7684\u6d4b\u91cf\u4e2d\uff0c\u4e00\u4e2a\u6765\u81ea\u5fb7\u56fd\u5361\u5c14\u65af\u9c81\u5384\u7684Majolika\u9676\u74f7\u5236\u9020\u5382\u7684\u65e7\u9676\u74f7\u540a\u5760\u88ab\u653e\u5728\u7845\u63a2\u6d4b\u5668\u7684\u6b63\u4e0b\u65b9\u3002\u80fd\u8c31\u663e\u793a\u4e86\u8bb8\u591a\u6765\u81ea\u03b2\u8870\u53d8\u7684\u7535\u5b50\uff0c\u4ee5\u53ca\u57283\u52304 MeV\u8303\u56f4\u5185\u7684\u4e24\u6761\u7279\u5f81\u03b1\u80fd\u7ebf\u3002\u901a\u8fc7\u5c06\u8fd9\u4e00\u6d4b\u91cf\u4e0e\u4e00\u5757\u5c0f\u94c0\u77f3\u7684\u80fd\u8c31\u8fdb\u884c\u6bd4\u8f83(c.f.\u3002\u56fe9)\uff0c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u51e0\u6761\u8f83\u9ad8\u80fd\u91cf\u7684\u03b1\u7ebf\u4e22\u5931\u4e86\u3002\u7279\u522b\u662f\uff0c\u6700\u53f3\u8fb9\u7684\u4e24\u4e2a\u949a\u540c\u4f4d\u7d20\u5cf0\u5e76\u4e0d\u5b58\u5728\u3002\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8b\u5b9e\u6765\u89e3\u91ca\uff0c\u90a3\u5c31\u662f\u94c0\u57fa\u9676\u74f7\u6d82\u6599\uff0c\u5373\u6240\u8c13\u7684\u94c0\u91c9\uff0c\u901a\u5e38\u662f\u7531\u5316\u5b66\u63d0\u7eaf\u7684\u94c0\u751f\u4ea7\u7684\u3002\u7531\u4e8e\u8fd9\u79cd\u6cb9\u6f06\u6700\u591a\u53ea\u6709\u5341\u5206\u4e4b\u51e0\u5e74\u7684\u5386\u53f2\uff0c\u6240\u4ee5\u53ea\u6709\u94c0\u8870\u53d8\u94fe\u7684\u6700\u9876\u7aef\u7684\u540c\u4f4d\u7d20\u51fa\u73b0\u5728\u6cb9\u6f06\u4e2d\u3002\u5728\u8fd9\u6761\u94fe\u4e2d\uff0c\u4ece\u956d\u5f00\u59cb\u7684\u653e\u5c04\u6027\u540c\u4f4d\u7d20\uff0c\u5305\u62ec\u948b\uff0c\u5c06\u7ecf\u5386\u51e0\u6b21\u56fe\u4e2d\u6ca1\u6709\u7684\u7279\u5f81\u6027\u7684\u963f\u5c14\u6cd5\u8870\u53d8\u3002\u901a\u8fc7\u8fd9\u6b21\u6d4b\u91cf\uff0c\u6211\u4eec\u80fd\u591f\u786e\u8ba4\u8fd9\u79cd\u7279\u6b8a\u7684\u94c0\u6d82\u6599\u662f\u4ee5\u5316\u5b66\u52a0\u5de5\u7684\u94c0\u77ff\u4e3a\u57fa\u7840\u7684\uff0c\u5e76\u4e0d\u5305\u542b\u7eaf\u77ff\u7269\u53ca\u5176\u6240\u6709\u7684\u653e\u5c04\u6027\u540c\u4f4d\u7d20(\u56e0\u4e3a\u94c0\u77ff\u7269\u6709\u6570\u5341\u4ebf\u5e74\u7684\u5386\u53f2\uff0c\u5176\u6240\u6709\u53ef\u80fd\u7684\u540c\u4f4d\u7d20\u80af\u5b9a\u90fd\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4ea7\u751f\u7684)\u3002\n\u7531\u4e8e\u6e90\u548c\u6d4b\u91cf\u88c5\u7f6e\u7684\u7279\u6027\uff0c\u6d4b\u5f97\u7684\u03b1\u80fd\u91cf\u503c\u6bd4\u94c0\u540c\u4f4d\u7d20\u7684\u5b9e\u9645\u7279\u5f81\u03b1\u80fd\u91cf\u4f4e\u7ea61 MeV\uff1a\u5f53\u7c92\u5b50\u4e0e\u9676\u74f7\u8868\u9762\u6d82\u5c42\u76f8\u4e92\u4f5c\u7528\u65f6\uff0c\u4e00\u4e9b\u80fd\u91cf\u635f\u5931\uff0c\u4e00\u4e9b\u80fd\u91cf\u88ab\u7845\u63a2\u6d4b\u5668\u524d\u9762\u7684\u77ed\u6c14\u9699\u5438\u6536(\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7ea6\u4e3a2\u6beb\u7c73)\u3002\n[*]\u5728\u4e13\u4e1a\u6d4b\u91cf\u8bbe\u7f6e\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u771f\u7a7a\u5ba4\u548c\u771f\u7a7a\u6cf5\u6765\u964d\u4f4e\u5468\u56f4\u7a7a\u6c14\u7684\u5bc6\u5ea6\u6765\u6539\u5584\u8fd9\u4e00\u70b9\u3002", "note_en": "Silicon detectors are widely used in particle and nuclear physics for measuring ionizing radiation. This Do-It-Yourself project allows making a low-cost particle detector from scratch using silicon photodiodes. It can distinguish different particle types (alpha particles and electrons) and measures their energy between 33 keV and 8 MeV. The detector must be shielded from light and is, therefore, best mounted inside your favorite candy tin box. The signal output can be directly connected with microphone or headset inputs of regular laptops and smartphones.\n    This project was designed as a citizen science tool for students and educators, allowing them the discovery of natural radioactivity in our environment and investigation of everyday-objects such as vintage glasses and old ceramics. Of course, the famous bananas and other food such as certain dietary table salts or nuts are interesting research objects. All those are slightly radioactive due to the naturally abundant potassium-40 isotope which makes even us humans a tiny little bit radioactive as well.\n The DIY particle detector is open source science hardware, released under the CERN open hardware license. Construction details and software for undertaking measurements can be found on the corresponding  project website. The circuit board and electronic parts (~20 EUR) can be easily procured via  kitspace, an open hardware design repository. There are two versions of this detector, the  electron-detector variant is suggested for electronic beginners. The measurment discussed below was taken with the more advanced  alpha-spectrometer varant. The required circuit boards are the same for both variants, but some of the electronic parts differ.\n In the corresponding  scientific paper, the performance of this detector was characterized in several reference measurements and compared with simulations. It also covers further information on how semiconducting silicon diodes, that are originally intended for detecting light, can be repurposed to measure ionizing radiation and radioactivity.\n  For the measurement shown below, an old ceramic pendant from the Majolika ceramics manufacture in Karlsruhe, Germany, was put right below the silicon detector. The energy spectrum shows a lot of electrons from beta decays as well as two characteristic alpha energy lines in the 3 to 4 MeV range. By comparing this measurement with the energy spectrum from a  small uranium stone (c.f.  paper, figure 9), it can be concluded that several higher energy alpha lines are missing. In particular, the two peaks of polonium isotopes on the very right are not present. This can be explained by the fact, that uranium-based ceramic paint, so-called  uranium glaze, was typically produced from chemically purified uranium. Since this paint is only a few tenths of years old at most, only the topmost isotopes of the  uranium decay chain appear in the paint. The radioactive isotopes from radium onwards in this chain, including polonium, would undergo several characteristic alpha decays that are not present in the diagram. From this measurement, we are able to confirm that this particular uranium paint was based on chemically processed uranium ore and does not contain the pure mineral with all its radioactive isotopes (since uranium minerals are billions of years old all of its possible isotopes must have been generated over time).\n The measured alpha energy values are about 1 MeV lower than the actual characteristic alpha energies of the uranium isotopes due to properties of the source and the measurement setup: some energy is lost while the particle is interacting with the surface coating of the ceramic and some more is absorbed in the short air gap in front of the silicon detector (in this case about 2 mm).*\n [*] In professional measurement setups, this can be improved by employing a vacuum chamber and pump in order to reduce the density of the surrounding air.", "posttime": "2020-05-16 05:19:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7c92\u5b50,particle,\u6d4b\u91cf", "title": "DIY\u7c92\u5b50\u63a2\u6d4b\u5668", "title_en": "DIY Particle Detector", "transed": 1, "url": "https://scoollab.web.cern.ch/diy-particle-detector", "via": "", "real_tags": ["\u7c92\u5b50", "particle", "\u6d4b\u91cf"]}]