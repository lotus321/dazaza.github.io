[{"category": "", "categoryclass": "", "imagename": "f1754e98ed8bcff3effa8f206460c3fc.jpg", "infoid": 1003989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5404\u5730\u81f3\u5c11\u670911\u5bb6\u5730\u65b9\u7535\u89c6\u53f0\u4f3c\u4e4e\u64ad\u653e\u4e86\u4e0e\u4e9a\u9a6c\u900a\u7f16\u5199\u7684\u76f8\u540c\u7684\u65b0\u95fb\u5957\u9910\uff0c\u5728\u4eba\u4eec\u5bf9\u516c\u53f8\u4ed3\u5e93\u5de5\u4eba\u5b89\u5168\u7684\u62c5\u5fe7\u65e5\u76ca\u52a0\u5267\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u5ba3\u4f20\u4e86\u8be5\u516c\u53f8\u4e3a\u4fdd\u6301\u53f8\u673a\u548c\u5ba2\u6237\u5065\u5eb7\u6240\u505a\u7684\u52aa\u529b\uff0c\u4e9a\u9a6c\u900a\u62d2\u7edd\u900f\u9732\u6709\u591a\u5c11\u5458\u5de5\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\n\u5468\u4e8c\uff0c\u5de6\u503e\u65b0\u95fb\u673a\u6784Courier Newsroom\u4ee5\u89c6\u9891\u8499\u592a\u5947\u7684\u5f62\u5f0f\u53d1\u5e03\u4e86\u8fd9\u4e2a\u7535\u89c6\u8282\u76ee\u5305\uff0c\u5176\u4e2d\u663e\u793a\u5f53\u5730\u65b0\u95fb\u4e3b\u64ad\u5927\u58f0\u6717\u8bfb\u6765\u81ea\u4e9a\u9a6c\u900a\u7684\u811a\u672c\u7247\u6bb5\uff0c\u515c\u552e\u8be5\u516c\u53f8\u7684\u5b89\u5168\u534f\u8bae\u3002\n\u4e9a\u9a6c\u900a\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u4e3a\u516c\u53f8\u901a\u8fc7\u65b0\u95fb\u7ebf\u53d1\u9001\u89c6\u9891\u65b0\u95fb\u7a3f\u8fdb\u884c\u4e86\u8fa9\u62a4-\u901a\u8baf\u7ebf\u5305\u542b\u4e00\u4e2a\u811a\u672c\u548c\u89c6\u9891-\u544a\u8bc9\u798f\u5e03\u65af\uff0c\u8fd9\u4e0d\u662f\u5ba3\u4f20\u89c6\u9891\uff0c\u8fd9\u662f\u516c\u53f8\u7684\u5e38\u89c1\u505a\u6cd5\u3002\n\u8fd9\u4efd\u65b0\u95fb\u7a3f\u53d1\u5e03\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u7684\u80a1\u4e1c\u8ba1\u5212\u5728\u5468\u4e09\u4e3e\u884c\u5e74\u4f1a\u65f6\u5411\u8be5\u516c\u53f8\u65bd\u538b\uff0c\u8981\u6c42\u5176\u91c7\u53d6\u5b89\u5168\u63aa\u65bd\u3002\u622a\u81f3\u5468\u4e8c\uff0c\u4e9a\u9a6c\u900a\u7684\u5e02\u503c\u8d85\u8fc71.2\u4e07\u4ebf\u7f8e\u5143\uff0c\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u6709\u4ef7\u503c\u7684\u516c\u53f8\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u4e00\u76f4\u5f00\u653e\u7684\u4ed3\u5e93\u7684\u6761\u4ef6\u53d7\u5230\u4e86\u5bc6\u5207\u5173\u6ce8\uff0c\u5de5\u4eba\u4eec\u4e3e\u884c\u6297\u8bae\u6d3b\u52a8\uff0c\u8981\u6c42\u8fdb\u4e00\u6b65\u4fdd\u62a4\u4ed6\u4eec\u514d\u53d7\u75c5\u6bd2\u7684\u4fb5\u88ad\uff0c\u540c\u65f6\u4e5f\u8981\u6c42\u516c\u53f8\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u5e26\u85aa\u75c5\u5047\u3002\n\u5173\u4e8e\u8fd9\u4e9b\u6761\u4ef6\u7684\u95ee\u9898\u5df2\u7ecf\u5f15\u8d77\u4e86\u5341\u51e0\u4e2a\u5dde\u603b\u68c0\u5bdf\u957f\u7684\u6ce8\u610f\uff0c\u4ed6\u4eec\u7ed9\u4e9a\u9a6c\u900a\u53d1\u4e86\u4e00\u5c01\u4fe1\uff0c\u8981\u6c42\u4e9a\u9a6c\u900a\u516c\u5e03\u5176\u4ed3\u5e93\u548c\u5168\u98df\u8d85\u5e02(Whole Foods)\u6709\u591a\u5c11\u5de5\u4eba\u611f\u67d3\u4e86\u51a0\u72b6\u75c5\u6bd2\uff0c\u4ee5\u53ca\u6709\u591a\u5c11\u4eba\u6b7b\u4ea1\u7684\u7edf\u8ba1\u6570\u636e\u3002\n\u5728\u53d1\u9001\u7ed9\u5f53\u5730\u4e00\u5bb6\u65b0\u95fb\u7f16\u8f91\u90e8\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u4e9a\u9a6c\u900a\u5439\u5618\u81ea\u5df1\u53d1\u9001\u7684\u89c6\u9891\u7247\u6bb5\u201c\u8ba9\u89c2\u4f17\u7b2c\u4e00\u6b21\u6df1\u5165\u4e86\u89e3\u4e86\u516c\u53f8\u7684\u5efa\u7b51\uff0c\u770b\u770b\u516c\u53f8\u662f\u5982\u4f55\u6539\u53d8\u8fd0\u8425\u65b9\u5f0f\u7684\uff0c\u4ee5\u56de\u5e94\u65b0\u51a0\u80ba\u708e\u201d\u3002\u798f\u5e03\u65af\u83b7\u5f97\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5b83\u6b63\u5728\u5411\u5458\u5de5\u63d0\u4f9b\u53e3\u7f69\u548c\u4f53\u6e29\u68c0\u6d4b\uff0c\u5e76\u8fdb\u884c\u4ee4\u4eba\u9707\u60ca\u7684\u8f6e\u73ed\uff0c\u4f46\u4ed3\u5e93\u5de5\u4f5c\u4eba\u5458\u8868\u793a\uff0c\u516c\u53f8\u505a\u5f97\u8fd8\u4e0d\u591f\u3002\u5de5\u4eba\u4eec\u8868\u793a\uff0c\u5bf9\u793e\u4f1a\u8ddd\u79bb\u7684\u6267\u884c\u529b\u5ea6\u4e0d\u591f\uff0c\u5e76\u8981\u6c42\u5173\u95ed\u548c\u6e05\u7406\u6709\u611f\u67d3\u7684\u8bbe\u65bd\u3002\n\u8be5\u516c\u53f8\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u53cd\u5e94\u5f15\u8d77\u4e86\u52b3\u5de5\u6d3b\u52a8\u4eba\u58eb\u548c\u6c11\u4e3b\u515a\u653f\u5ba2\u7684\u6124\u6012\uff0c\u4f5b\u8499\u7279\u5dde\u53c2\u8bae\u5458\u4f2f\u5c3c\u00b7\u6851\u5fb7\u65af(Bernie Sanders)\u3002\u5468\u4e8c\uff0c\u5728\u4e00\u6761\u63d0\u5230Courier Newsroom\u89c6\u9891\u7684\u63a8\u6587\u4e2d\uff0c\u5bf9\u8be5\u516c\u53f8\u8fdb\u884c\u4e86\u731b\u70c8\u62a8\u51fb\u3002\n\u64ad\u653e\u8fd9\u6bb5\u89c6\u9891\u7684\u7535\u89c6\u53f0\u7684\u7f16\u8f91\u5224\u65ad\u529b\u4e5f\u53d7\u5230\u4e86\u8d28\u7591\u3002\n\u8fd9\u6bb5\u6c47\u7f16\u89c6\u9891\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf92018\u5e74\u53d1\u5e03\u7684\u4e00\u6bb5\u7c7b\u4f3c\u8499\u592a\u5947\u89c6\u9891\u7684\u56de\u5fc6\uff0c\u5f53\u65f6\u8f9b\u514b\u83b1SBGI\u5e7f\u64ad\u7ad9\u7684190\u591a\u540d\u4e3b\u64ad\u6717\u8bfb\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u811a\u672c\uff0c\u8b66\u544a\u4eba\u4eec\u8b66\u60d5\u201c\u504f\u89c1\u548c\u5047\u65b0\u95fb\u201d\u3002\u5728\u64ad\u653e\u4e9a\u9a6c\u900a\u8282\u76ee\u7684\u7535\u89c6\u53f0\u4e2d\uff0c\u4f3c\u4e4e\u53ea\u6709\u4e00\u4e2a\u662f\u8f9b\u514b\u83b1\u7535\u89c6\u53f0\u3002", "note_en": "At least 11 local TV stations across the U.S. appear to have run identical news packages that Amazon scripted, promoting the company\u2019s efforts to keep drivers and customers healthy as concerns grow about worker safety at the company\u2019s warehouses, with Amazon refusing to say how many of its workers have died from the coronavirus.\n      The TV package, which the left-leaning news outlet Courier Newsroom published as a  video montage that widely spread on Tuesday, shows local news anchors reading aloud the scripted segment from Amazon, touting the company\u2019s safety protocols.\n  A spokesperson for Amazon defended the company sending out the video news release over a news wire\u2014which contained a script as well as video\u2014telling  Forbes it was not a promotional video and is common practice for companies.\n    The release comes as Amazon shareholders plan to press the company on its  safety measures when it holds its annual meeting Wednesday, with its market capitalization as of Tuesday sitting at over $1.2 trillion\u2014making it the most valuable company in the world.\n  Conditions at warehouses\u2014which have remained open throughout the coronavirus pandemic\u2014have come under scrutiny, with workers staging  protests demanding further protection from the virus while also asking the company to provide them with paid sick leave.\n    Questions about those conditions have drawn the attention of a group of over a dozen states\u2019 attorneys general, which sent a  letter to Amazon demanding the company release statistics on how many workers at its warehouses and Whole Foods have been infected with coronavirus, as well as how many have died.\n  In an email sent to a local newsroom and obtained by  Forbes, Amazon touts the video footage it sent as \u201cgiving viewers for the first time an inside look at its buildings to see how the company has transformed its operations in response to COVID-19.\u201d\n    Amazon has said it\u2019s providing masks and temperature checks to employees and staggering shifts, but warehouse workers say the company hasn\u2019t done enough. Workers have said there\u2019s not enough enforcement of social distancing, and have asked that facilities with infections be shut down and cleaned.\n    The company\u2019s response to coronavirus has drawn the ire of labor activists and Democratic politicians, with Sen. Bernie Sanders (I-Vt.) lashing out at the company in a tweet Tuesday referencing the Courier Newsroom video.\n    The TV stations that aired the video have also had their editorial judgment brought into question.\n            The compilation video sparked memories of a similar montage  video published in 2018, where more than 190 anchors at Sinclair    SBGI  Broadcast stations read an identical script warning against \u201cbiased and fake news.\u201d Only one of the stations that ran Amazon\u2019s segment appeared to be a Sinclair station.", "posttime": "2020-05-28 05:27:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u53d1\u5e03,\u7167\u672c\u5ba3\u79d1,scripted", "title": "\u4e9a\u9a6c\u900a\u53d1\u5e03\u4e86\u4e00\u6bb5\u7167\u672c\u5ba3\u79d1\u7684\u65b0\u95fb\u7247\u6bb5\uff0c11\u5bb6\u7535\u89c6\u53f0\u64ad\u51fa\u4e86\u8fd9\u4e00\u7247\u6bb5", "title_en": "Amazon Sent Out a Scripted News Segment, and 11 Stations Aired It", "transed": 1, "url": "https://www.forbes.com/sites/nicholasreimann/2020/05/26/amazon-sent-out-a-scripted-news-segment-and-11-stations-aired-it/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u53d1\u5e03", "\u7167\u672c\u5ba3\u79d1", "scripted"]}, {"category": "", "categoryclass": "", "imagename": "f4aa39bdbd75645727f02b2c1805e62c.png", "infoid": 1003986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Concurnas\u662f\u4e00\u79cd\u5f00\u6e90\u7684JVM\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e8\u5728\u6784\u5efa\u53ef\u9760\u3001\u53ef\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u7684\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u548c\u5e76\u884c\u7cfb\u7edf\u3002\n\u4f7f\u7528Concurnas\u4f7f\u5e76\u53d1\u548c\u5e76\u884c\u7f16\u7a0b\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4ece\u800c\u5e2e\u52a9\u7ec4\u7ec7\u5145\u5206\u5229\u7528\u73b0\u4ee3\u591a\u6838CPU\u548cGPU\u786c\u4ef6\u3002\nConcurnas\u53ef\u4e0eJava(\u548c\u5176\u4ed6JVM\u8bed\u8a00)\u4e92\u64cd\u4f5c-\u7ec4\u7ec7\u80fd\u591f\u5728\u5e76\u53d1\u73af\u5883\u4e2d\u5229\u7528\u73b0\u6709\u7684Java\u8f6f\u4ef6\u3002\n\u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\uff0c\u4f7f\u7528Concurnas\u5f00\u53d1\u4eba\u5458\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801\u884c\u66f4\u5c11\u3002\u8be5\u4ee3\u7801\u66f4\u5b89\u5168\u3001\u66f4\u6613\u4e8e\u6d4b\u8bd5\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u8d28\u91cf\u5e76\u63d0\u9ad8\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u53d7Python\u548cJava\u7b49\u8bed\u8a00\u7684\u542f\u53d1\uff0cConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u5783\u573e\u56de\u6536\u8bed\u8a00\uff0c\u5b83\u5229\u7528\u6613\u4e8e\u5b66\u4e60\u7684\u8bed\u6cd5\u8fdb\u884c\u7c7b\u578b\u63a8\u7406\u3002\nConcurnas\u662f\u4e00\u79cd\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u7f16\u8bd1\u8bed\u8a00\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95eeJVM\u63d0\u4f9b\u7684\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\u3002\nConcurnas\u4f7f\u4ece\u5c0f\u578b\u7814\u7a76\u539f\u578b\u5230\u5168\u7403\u8303\u56f4\u7684\u5206\u5e03\u5f0f\u751f\u4ea7\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u6210\u4e3a\u53ef\u80fd\u3002\nConcurnas\u662f\u4e00\u9879\u5f00\u6e90\u6280\u672f\uff0c\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u548c\u4fee\u6539\u3002\u7531Concurnas Ltd\u63d0\u4f9b\u7684\u6301\u7eed\u5f00\u53d1\u548c\u5546\u4e1a\u652f\u6301\nConcurnas@JAX\u4f26\u65662020.\u3002\u6211\u4eec\u5c06\u57282020\u4f26\u6566JAX\u5927\u4f1a\u4e0a\u8c08\u8bbaConcurnas\u3002\nConcurnas\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u6781\u5176\u5f3a\u5927\u7684\u5e76\u53d1\u6a21\u578b\uff0c\u5b83\u5141\u8bb8\u60a8\u7f16\u5199\u5e76\u53d1\u4ee3\u7801\uff0c\u800c\u4e0d\u5fc5\u7f16\u5199\u6837\u677f\u4ee3\u7801\u6765\u7ba1\u7406\u7ebf\u7a0b\u3001\u4e34\u754c\u533a\u6216\u9501\uff01\nConcurnas\u4f5c\u4e3a\u5e76\u53d1\u8ba1\u7b97\u7684\u4e13\u95e8\u5316\uff0c\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u4e3aGPU\u7f16\u7a0b\u63d0\u4f9b\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u60a8\u53ef\u4ee5\u7528\u60ef\u7528\u7684Concurnas\u4ee3\u7801\u7f16\u5199\u4ee3\u7801\u5e76\u5728GPU\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u5fc5\u5207\u6362\u5230C/C++\uff01\nConcurnas\u4e3a\u4e0e\u975e\u5806\u7ba1\u7406\u3001\u975e\u5783\u573e\u56de\u6536\u7684\u5185\u5b58\u4ea4\u4e92\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4f7f\u5f97\u4f7f\u7528GPU\u3001\u5927\u6570\u636e\u548c\u81ea\u5b9a\u4e49\u6570\u636e\u5e93\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\nConcurnas\u652f\u6301\u73b0\u4ee3\u547d\u4ee4\u5f0f\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5e38\u7528\u6784\u9020\uff0c\u4f8b\u5982\uff1aif-Elif-Else\u3001for\u3001while\u5faa\u73af\u3001\u65ad\u8a00\u3001\u5f02\u5e38\u3002\u52a0\u4e0a\u6765\u81ea\u5757\u7684\u9690\u5f0f\u8fd4\u56de\uff0c\u4ee5\u53ca\u8bed\u53e5\u3001\u5217\u8868\u7406\u89e3\u3001\u590d\u5370\u673a\u7b49\u7b49\uff01\nConcurnas\u4ece\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u53bb\u6389\u4e86\u7e41\u91cd\u7684\u5de5\u4f5c\u548c\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u8ba9\u5b83\u518d\u6b21\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u3002Concurnas\u9ad8\u7ea7\u652f\u6301\u7c7b(\u5177\u4f53\u3001\u62bd\u8c61\u3001\u7ee7\u627f)\u3001\u6cdb\u578b(\u8f93\u5165\u3001\u8f93\u51fa\u3001\u901a\u914d\u7b26\u3001\u6709\u754c)\u3001\u679a\u4e3e\u3001\u6ce8\u91ca\u3002\u4ee5\u53ca\u8bf8\u5982\u7279\u5f81\u3001\u5143\u7ec4\u3001\u5bf9\u8c61\u63d0\u4f9b\u7a0b\u5e8f\u3001\u7c7b\u578b\u5b9a\u4e49\u3001\u57fa\u4e8e\u7528\u6cd5\u7684\u6cdb\u578b\u7c7b\u578b\u63a8\u65ad\u3001\u7c7b\u5b57\u6bb5getter/setter\u7684\u81ea\u52a8\u751f\u6210/\u91cd\u5b9a\u5411\u3001\u7c7b\u6563\u5217\u4ee3\u7801\u548c\u7b49\u5f0f\u7b49\u65b0\u7279\u6027\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u8303\u4f8b\u7ed3\u5408\u4e86\u4e00\u7ec4\u975e\u5e38\u6709\u7528\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7eaf\u51fd\u6570\u5f0f\u7f16\u7a0b\u5728\u4e16\u754c\u4e0a\u5f88\u5c11\u89c1\u3002\u5728Concurnas\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5b83\u4eec\u96c6\u6210\u5230Concurnas\u4e2d\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u65b9\u6cd5\u548c\u51fd\u6570\u5f15\u7528\u3001lambdas\u3001\u90e8\u5206\u51fd\u6570\u6c42\u503c\u3001\u60f0\u6027\u6c42\u503c\u3001\u6a21\u5f0f\u5339\u914d\u7b49\u7b49\uff01\nConcurnas\u5bf9\u65b0\u5174\u7684\u53cd\u5e94\u5f0f\u7f16\u7a0b\u8303\u4f8b\u62e5\u6709\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u81ea\u52a8\u54cd\u5e94\u8f93\u5165\u53c2\u6570\u66f4\u6539\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u5141\u8bb8\u60a8\u521b\u5efa\u53cd\u5e94\u5f0f\u7ba1\u9053\u3002\u4e00\u79cd\u975e\u5e38\u81ea\u7136\u7684\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u7684\u65b9\u6cd5\u3002\nConcurnas\u4e3a\u6838\u5fc3\u6570\u636e\u7ed3\u6784(\u5305\u62ec\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5217\u8868\u3001\u6620\u5c04\u3001\u8303\u56f4\u548c\u96c6\u5408)\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u5728\u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u4e2d\u6d41\u884c\u7684\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u4e00\u4e2a\u5b57\u7b26\u8fd0\u7b97\u7b26\u5c06\u8fd0\u7b97\u7b26\u5e94\u7528\u4e8e\u6570\u7ec4/\u77e9\u9635/\u5217\u8868\u7684\u6240\u6709\u5143\u7d20\u3002\nConcurnas\u63d0\u4f9b\u72ec\u7acb\u7f16\u8bd1\u5668\u3001\u4ea4\u4e92\u5f0fREPL shell\u3001Jupyter Notebook\u3001VS Code\u3001Atom\u548cSublime Text\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u7a7a\u5b89\u5168\u8bed\u8a00\uff0c\u8fd9\u6709\u52a9\u4e8e\u6d88\u9664\u73b0\u4ee3\u7f16\u7a0b\u4e2d\u6700\u5e38\u89c1\u7684\u9519\u8bef\u6765\u6e90\u4e4b\u4e00\uff1a\u7a7a\u6307\u9488\u5f02\u5e38\uff01\nConcurnas\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u60a8\u53ef\u4ee5\u8bbf\u95eeJDK\u548cJVM\u63d0\u4f9b\u7684\u51fa\u8272\u7684\u591a\u5e73\u53f0\u6027\u80fd\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4e0e\u5176\u4ed6JVM\u8bed\u8a00(\u5982Java\u3001Scala\u3001Kotlin\u548cClojure)\u517c\u5bb9-\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u96c6\u6210/\u4f7f\u7528\u6240\u6709\u73b0\u6709\u7684JVM\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u4fee\u6539\u3002\nConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5e7f\u6cdb\u4f7f\u7528\u7c7b\u578b\u63a8\u7406\u6765\u6d88\u9664\u7c7b\u578b\u8d1f\u62c5\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cConcurnas\u4ee3\u7801\u4e0ePython\u4ee3\u7801(\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u6700\u5bb9\u6613\u7f16\u7801\u7684\u8bed\u8a00\u4e4b\u4e00)\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f46\u5177\u6709Java\u7684\u6027\u80fd\uff01\n\u7f16\u7a0b\u8bed\u8a00\u4e0d\u4ec5\u4ec5\u662f\u673a\u5668\u7528\u7684--\u4eba\u4eec\u4e5f\u9700\u8981\u9605\u8bfb\u5b83\u4eec\uff01Concurnas\u63d0\u4f9b\u4e86\u7b80\u6d01\u7684\u8bed\u6cd5\u548c\u8bb8\u591a\u5feb\u6377\u65b9\u5f0f\uff0c\u4f7f\u7f16\u5199\u6613\u4e8e\u9605\u8bfb\u548c\u7ef4\u62a4\u7684\u4ee3\u7801\u6210\u4e3a\u89c4\u8303\u3002\u5bf9\u4e8e\u9700\u8981\u989d\u5916\u6e05\u6670\u5ea6\u7684\u4ee3\u7801\uff0cConcurnas\u4e5f\u53ef\u4ee5\u5197\u957f\u3002\nConcurnas\u901a\u8fc7\u8868\u8fbe\u5f0f\u5217\u8868\u3001\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5bf9\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00\u63d0\u4f9b\u5e7f\u6cdb\u652f\u6301\u3002Concurnas\u8fd8\u652f\u6301\u8bed\u8a00\u6269\u5c55\uff0c\u5141\u8bb8\u60a8\u5c06\u975eConcurnas\u4ee3\u7801\u6bb5\u76f4\u63a5\u5d4c\u5165\u5230Concurnas\u4ee3\u7801\u6587\u4ef6\u4e2d\u3002\ndef gcd(x int\uff0cy int){//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570While(Y){(x\uff0cy)=(y\uff0cx mod y)}x}calc1=gcd(8\uff0c20)\uff01//\u5728\u9694\u79bbcalc2=gcd(6\uff0c45)\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97\uff01//\u5982\u679ccalc1&gt\uff1bcalc2\u5426\u5219calc2\uff0c\u8bf7\u5728\u5355\u72ec\u7684\u9694\u79bbcalc3=calc1\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97//^\u7b49\u5f85calc1\u7684\u7ed3\u679c\u3002\nConcurnas\u5141\u8bb8\u60a8\u901a\u8fc7\u4f7f\u7528bang\uff01\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u578b\u5bb9\u5668(\u79f0\u4e3a\u9694\u79bb)\u4e2d\u8f7b\u677e\u5730\u5e76\u53d1\u6267\u884c\u8ba1\u7b97\uff01\u63a5\u7ebf\u5458\u3002\n\u5e76\u53d1\u8ba1\u7b97\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u6700\u56f0\u96be\u7684\u65b9\u9762\u4e4b\u4e00\u3002\n\u8bf7\u6ce8\u610f\u5e76\u53d1\u8ba1\u7b97\u662f\u5982\u4f55\u5728Concurnas\u4e2d\u6210\u4e3a\u4e00\u884c\u7a0b\u5e8f\u7684\uff0c\u521b\u5efa/\u7ba1\u7406\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u3001\u751f\u547d\u5468\u671f\u3001\u9501(\u6216\u6b7b\u9501\uff01)\u3001\u4e34\u754c\u533a\u3001\u540c\u6b65\u3001\u7b49\u5f85\u3001\u901a\u77e5\u7ebf\u7a0b\u7b49\u90fd\u4e0d\u7528\u62c5\u5fc3\u3002\u6240\u6709\u8fd9\u4e9b\u56f0\u96be\u7684\u4e8b\u60c5\u90fd\u4f1a\u81ea\u52a8\u5904\u7406-\u8ba9\u60a8\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u4e8b\u60c5\u3002\nn=10 nplusone={n+=1\uff1bn}\uff01//\u5728\u4e00\u4e2a\u5206\u79bb\u7269\u4e2d\u6267\u884c\u6b64\u8ba1\u7b97\uff0cn\u7684\u526f\u672c\u4e3anminusone={n-=1\uff1bn}\uff01//\u53e6\u4e00\u4e2a\u5206\u79bb\u7269\u5728n\u7684\u5355\u72ec\u526f\u672c\u4e0a//\u4ee5\u4e0a\u4e24\u4e2a\u5206\u79bb\u7269\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\u3002n//nplusone==11//nminusone==9\u3002\nConcurnas\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u90fd\u5728\u9694\u79bb\u4e2d\u6267\u884c\u3002\u9694\u79bb\u88ab\u6620\u5c04\u5230\u8fd0\u884c\u4ee3\u7801\u7684\u673a\u5668\u7684\u5e95\u5c42\u786c\u4ef6\u7ebf\u7a0b\u4e0a\u3002\u9694\u79bb\u5668\u5728\u5176\u81ea\u5df1\u7684\u4e13\u7528\u5185\u5b58\u7a7a\u95f4\u5185\u8fd0\u884c\u3002\n\u5c06\u590d\u5236\u9694\u79bb\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u72b6\u6001\uff0c\u4f46\u5f15\u7528\u3001\u53c2\u4e0e\u8005\u548c\u4e00\u4e9b\u7279\u6b8a\u6807\u8bb0\u7684\u53ef\u5171\u4eab\u7c7b\u9664\u5916\u3002\u8fd9\u79cd\u72b6\u6001\u9694\u79bb\u4f7f\u63a8\u7406\u548c\u8bbe\u8ba1\u5e76\u53d1\u7b97\u6cd5\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u4e3a\u540c\u6b65\u548c\u7ade\u4e89\u6761\u4ef6\u7f16\u5199\u4ee3\u7801\u7684\u9700\u8981\u3002\nAREF INT\uff1a//\u8fd9\u662f\u4e00\u4e2aINT{//\u5e76\u53d1\u6267\u884c\u7684\u590d\u6742\u9694\u79bb\u6700\u7ec8\u8bbe\u7f6eAREF.//\u6b64\u5904\u7684\u590d\u6742\u4ee3\u7801.AREF=10}\uff01//AREF&#39\uff1b\u9700\u8981\u5176\u5f53\u524d\u503c\uff1aRESULT INT=AREF//\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\u4efb\u4f55\u503c\uff0c\u6267\u884c\u5c06\u6682\u505cSystem.out.println(&#34\uff1bAREF\u7684\u503c\u4e3a\uff1a&#34\uff1b+RESULT)\u3002\nexeccount int\uff1a=0 for(A In 1 To 10){//\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97..execount++}\uff01//\u751f\u6210\u9694\u79bb\u4ee5\u5e76\u53d1\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u3002\u7b49\u5f85(execount\uff1bexecount==10)//\u6682\u505c\u8fdb\u4e00\u6b65\u6267\u884c\uff0c\u76f4\u5230execount==10\u3002\naval int\uff1a//\u672a\u8bbe\u7f6e\u521d\u59cb\u503cbval int\uff1a=22//\u521d\u59cb\u503c\u5df2\u77e5SUMMARTS int\uff1a=EVERY(aval\uff0cbval){aval+bval}//\u4ee5\u4e0a\u521d\u59cb\u5316\u540e\uff0c\u5141\u8bb8\u6267\u884c.aval=100 bval=200//\u4e0a\u9762\u7684\u6bcf\u4e2a\u5757\u90fd\u5c06\u5e76\u53d1\u8fd0\u884c\uff0c\u5e76\u6700\u7ec8\u5c06SUMMICS\u8bbe\u7f6e\u4e3a\uff1aAWAIT(SUMMILES\uff1bSUMMILES==300)\u3002\n\u5b83\u4eec\u4e0d\u662f\u5728\u9694\u79bb\u4e4b\u95f4\u590d\u5236\uff0c\u800c\u662f\u5171\u4eab\uff0c\u4f46\u63d0\u4f9b\u5bf9\u5176\u53ef\u53d8\u72b6\u6001\u7684\u53d7\u63a7\u539f\u5b50\u8bbf\u95ee\u3002\u5982\u679c\u8bf7\u6c42\u65f6\u5c1a\u672a\u5728REF\u4e0a\u8bbe\u7f6e\u503c\uff0c\u5219\u6682\u505c\u6267\u884c\uff0c\u5e76\u5141\u8bb8\u6267\u884c\u5176\u4ed6\u9694\u79bb\uff0c\u76f4\u5230\u8bbe\u7f6e\u4e86\u503c\uff0c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Concurnas\u63d0\u4f9b\u7684\u4ee5\u4e0b\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020\u5bf9\u5f15\u7528\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94\uff1a\n\u7b49\u5f85\u5c06\u6682\u505c\u6267\u884c\uff0c\u76f4\u5230\u5728REF\u4e0a\u8bbe\u7f6e\u4e86\u503c\u5e76\u4e14\u6ee1\u8db3\u4e86\u53ef\u9009\u7684\u4fdd\u62a4\u6761\u4ef6\u3002\nonchange\u5c06\u5728\u5176\u76d1\u89c6\u7684\u4efb\u4f55\u5f15\u7528\u53d1\u751f\u66f4\u6539\u65f6\u89e6\u53d1\u5176\u4ee3\u7801\u5757\u7684\u5e76\u53d1\u6267\u884c\u3002\n\u6bcf\u4e2a\u53c2\u6570\u7684\u884c\u4e3a\u4e0eonchange\u76f8\u540c\uff0c\u4f46\u5982\u679c\u5728\u4efb\u4f55\u53d7\u76d1\u89c6\u7684\u5f15\u7528\u4e0a\u8bbe\u7f6e\u4e86\u521d\u59cb\u503c\uff0c\u5219\u4f1a\u89e6\u53d1\na int\uff1ab int\uff1ac&lt\uff1b=a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=Every(a\uff0cb){a+b}d&lt\uff1b-a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=onchange(a\uff0cb){a+b}\u3002\n\u4e0eConcurnas\u7684\u5927\u591a\u6570\u8bed\u6cd5\u5143\u7d20\u4e00\u6837\uff0c\u63d0\u4f9b\u4e86\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020Every and OnChange\u7684\u7b80\u660e\u7248\u672c\u3002\u8fd9\u6709\u6548\u5730\u5c06\u53cd\u5e94\u5f0f\u8ba1\u7b97\u53d8\u6210\u4e86\u4e00\u884c\u64cd\u4f5c\u3002\ncount1 int\uff1a=100 count2 int\uff1a=100 onchange(count1\uff0ccount2){System.out.println(&#34\uff1bsum\uff1a{count1+count2}&#34\uff1b)}trans{count1-=10 count2+=10}//\u5c06\u8f93\u51fa\uff1a&#34\uff1bsum\uff1a200&#34\uff1b\nConcurnas\u901a\u8fc7TRANS BLOCK\u5173\u952e\u5b57\u652f\u6301\u8f6f\u4ef6\u4e8b\u52a1\u5185\u5b58\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u5f15\u7528\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u66f4\u6539\u5728\u4e8b\u52a1\u4e4b\u5916\u4ee5\u539f\u5b50\u4e3a\u57fa\u7840\u53ef\u89c1\u3002\n\u6765\u81eacom.concurnas.lang.Pulsar\u5bfc\u5165Pulsar\uff0cRealtimePulsar\u6765\u81eajava.time\u5bfc\u5165\u6301\u7eed\u65f6\u95f4Pulsar=new RealtimePulsar()oneOffTrigger\uff1a=10\u79d2\u65f6\u95f4\u5185\u7684pulsar.after(Duration.ofSeconds(10))//schedule\u4e8b\u4ef6.\u6bcf\u4e2a(OneOffTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+oneOffTrigger)}//\u6bcf2\u79d2\u5b89\u639210\u6b21\u4e8b\u4ef6.RepeatingTrigger\uff1a=Pulsar.Repeat(Duration.ofSecond(2)\uff0c10)\u6bcf(RepeatingTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+RepeatingTrigger)}\u3002\n\u5e76\u53d1\u7cfb\u7edf\u5de5\u7a0b\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\u662f\u5e0c\u671b\u6709\u4e00\u4e9b\u57fa\u4e8e\u65f6\u95f4\u7684\u89e6\u53d1\u5668\uff0c\u7b49\u5f8510\u79d2\uff0c\u7136\u540e\u6267\u884cx&#34\uff1b\u6216\u6bcf\u96943\u79d2\u505a\u4e00\u6b21y\u7b49\uff0c\u6216\u5728\u6b64\u7279\u5b9a\u65f6\u95f4\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5728Concurnas\uff0c\u6211\u4eec\u5c06\u6b64\u79f0\u4e3a\u65f6\u95f4\u8ba1\u7b97\u3002\n\u65f6\u95f4\u8ba1\u7b97\u901a\u8fc7\u5185\u7f6e\u7684Pulsar\u5e93\u5f97\u5230\u652f\u6301\uff0c\u8be5\u5e93\u4f4d\u4e8e\uff1acom.concurnas.lang.Pulsar\u3002\u6b64\u5e93\u5141\u8bb8\u6211\u4eec\u5c06\u6d3b\u52a8\u5b89\u6392\u5728\u7ecf\u8fc7\u4e00\u5b9a\u65f6\u95f4\u540e\u5728\u5c06\u6765\u8fdb\u884c\u3002\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u4e3a\u5c06\u6765\u7684\u91cd\u590d\u5b89\u6392\u4efb\u52a1\u3002\nConcurnas\u63d0\u4f9b\u8109\u51b2\u661f\u7684\u5b9e\u65f6\u5b9e\u73b0\u548c\u51b0\u51bb\u65f6\u95f4\u5b9e\u73b0(\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u65f6\u95f4\u5e94\u7528)\uff0c\u5141\u8bb8\u65f6\u95f4\u4f5c\u4e3a\u53d7\u63a7\u53d8\u91cf\u6ce8\u5165\u3002\nresult=parfor(b in 0\u523010){gcd(b\uff0c10-b)}//result==[10\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c5\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c10\uff1a]\u3002\nConcurnas\u62e5\u6709\u5bf9\u5e76\u884cfor\u5faa\u73af\u7684\u5934\u7b49\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4e9b\u662f\u7528\u4e8e\u5728\u5faa\u73af\u4e0a\u4e0b\u6587\u4e2d\u5e76\u884c\u6267\u884c\u57fa\u4e8e\u4efb\u52a1\u7684\u64cd\u4f5c\u7684\u65b9\u4fbf\u800c\u76f4\u89c2\u7684\u673a\u5236\u3002\u5b83\u4eec\u4e0eConcurnas\u4e2d\u7684\u5e38\u89c4\u5faa\u73af\u5177\u6709\u76f8\u540c\u7684\u8bed\u6cd5\u3002\nACTOR MyActor{//\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aACTOR-count=0 def Increment(){count++}}//\u4f7f\u7528\u4e0a\u9762\u7684ACTOR\uff1ama=new MyActor()ma.incremental()//\u5c31\u50cf\u6b63\u5e38\u7684\u65b9\u6cd5\u8c03\u7528\u4e00\u6837\uff0c\u5c06\u963b\u585e\uff0c\u76f4\u5230\u6267\u884c\u5b8c\u6210sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210{ma.increate()}\uff01//\u5e76\u53d1\u8c03\u7528{ma.increate()}\uff01}count=ma.getCount()//count==3\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\nConcurnas\u4e2d\u7684\u53c2\u4e0e\u8005\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u5fae\u670d\u52a1\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u5728\u81ea\u5df1\u7684\u4e13\u7528\u9694\u79bb\u5185\u8fd0\u4f5c\u3002\u4ece\u8c03\u7528\u4ee3\u7801\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53c2\u4e0e\u8005\u7684\u5916\u89c2\u548c\u884c\u4e3a\u4e0e\u5e38\u89c4\u5bf9\u8c61\u4e00\u6837\u3002\n\u53c2\u4e0e\u8005\u5141\u8bb8\u6211\u4eec\u4ee5\u5355\u7ebf\u7a0b\u6837\u5f0f\u7f16\u5199\u670d\u52a1\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u591f\u4ee5\u5e76\u53d1\u65b9\u5f0f\u5b89\u5168\u5730\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u540c\u6b65\u6216\u4e89\u7528\u6761\u4ef6\uff0c\u56e0\u4e3a\u5bf9\u53c2\u4e0e\u8005\u7684\u6bcf\u4e2a\u8c03\u7528\u90fd\u662f\u6309\u987a\u5e8f\u8fd0\u884c\u7684\uff0c\u5e76\u4e14\u5728\u5b8c\u6210\u4e4b\u524d\u5177\u6709\u5bf9\u53c2\u4e0e\u8005\u72b6\u6001\u7684\u72ec\u5360\u8bbf\u95ee\u6743\u9650\u3002\u81ea\u7136\uff0c\u56e0\u4e3a\u53c2\u4e0e\u8005\u5b9e\u73b0\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u5e76\u53d1\u63a7\u5236\uff0c\u6240\u4ee5\u65e0\u9700\u8de8\u591a\u4e2a\u9694\u79bb\u8fdb\u884c\u590d\u5236\u5c31\u53ef\u4ee5\u5b89\u5168\u5730\u5171\u4eab\u5b83\u4eec\u3002\nclass MyCounter(-count int){//\u666e\u901a\u7c7bdef increment(){count++}}//\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7of\u5173\u952e\u5b57\u5b9a\u4e49\u548c\u4f7f\u7528\u6211\u4eec\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff0c\u5982\u4e0b\u6240\u793a\uff1aActor MyActor of MyCounter(0)//\u8ba9\u6211\u4eec\u4f7f\u7528\u65b0\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff1ama=new MyActor()ma.incremental()sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210ma.increate()\uff01ma.increate()\uff01}count=ma.count//count==3\u3002\n\u6709\u65f6\u6211\u4eec\u6ca1\u6709\u4ece\u96f6\u5f00\u59cb\u5b9a\u4e49\u6f14\u5458\u7684\u5962\u4f88\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u9884\u5148\u5b58\u5728\u7684\u4ee3\u7801\uff0c\u60c5\u51b5\u5c24\u5176\u5982\u6b64\u3002\u4e3a\u6b64\uff0cConcurnas\u63d0\u4f9b\u4e86\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u3002\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u6784\u9020\u5b83\u4eec\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u5e76\u56f4\u7ed5\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\n\u7528\u4e8e\u521b\u5efa\u88ab\u5305\u88c5\u7684\u7c7b\u6216\u65b9\u6cd5\u7684\u5b9e\u4f8b\u7684\u4efb\u4f55\u6784\u9020\u51fd\u6570\u4e5f\u7531\u7c7b\u578b\u5316\u53c2\u4e0e\u8005\u63d0\u4f9b\u3002\nclass MyCounter(-count int){def increate(){count++}}inst1=\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u65b0\u5efa\u6267\u884c\u5143inst2=new\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u521b\u5efa\u65b0\u6267\u884c\u5143\u3002\n\u521b\u5efa\u7c7b\u578b\u5316\u6267\u884c\u5143\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b(\u73b0\u5728\u662fAND ACTOR\uff01)\u65f6\uff0c\u53ea\u9700\u4f7f\u7528ACTOR\u5173\u952e\u5b57\u4ee3\u66ff\u6216\u9644\u52a0\u4e8eNEW\u5173\u952e\u5b57\u3002\n//\u4e00\u4e2a\u7b80\u5355\u7684\u77e9\u9635\u4e58\u6cd5\u5185\u6838.gpukernel 2 matMult(M int\uff0cK int\uff0cGLOBAL in A Float[2]\uff0cGLOBAL in B Float[2]\uff0cGLOBAL OUT result Mat Float[2]){globalRow=get_global_id(0)globalCol=get_global_id(1)acc=0.0f\uff1bfor(k=0\uff1bk&lt\uff1bK\uff1bk++){acc+=A[k*M+globalRow]*B[globalCol*K+k]}\u3002\nConcurnas\u62e5\u6709GPU\u8ba1\u7b97\u7684\u4e00\u6d41\u5e02\u6c11\u652f\u6301\u3002GPU\u53ef\u4ee5\u50cfCPU\u534f\u5904\u7406\u5668\u4e00\u6837\u4f7f\u7528\uff0c\u901a\u8fc7\u5b83\u4eec\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u7ecf\u5e38\u80fd\u591f\u5c06\u8bb8\u591a\u8ba1\u7b97\u9650\u5236\u95ee\u9898\u7684\u8ba1\u7b97\u901f\u5ea6\u63d0\u9ad8100\u500d\u4ee5\u4e0a\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u57fa\u4e8eCPU\u7684\u8ba1\u7b97\u3002\nGPU\u8ba1\u7b97\u7684\u6838\u5fc3\u662f\u5185\u6838\u3002\u8fd9\u4e9b\u90fd\u662f\u5728\u6211\u4eec\u7684GPU\u4e0a\u6267\u884c\u7684\uff0c\u4ee5\u4fbf\u6267\u884c\u8ba1\u7b97\u3002Concurnas\u5141\u8bb8\u60a8\u4f7f\u7528Concurnas\u7f16\u7a0b\u8bed\u8a00\u7684\u5b50\u96c6\u521b\u5efa\u5185\u6838\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u7a0d\u52a0\u4fee\u6539\u5c31\u53ef\u4ee5\u7f16\u5199\u60ef\u7528\u7684\u5e76\u53d1\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728GPU\u4e0a\u6267\u884c\u8ba1\u7b97\u3002\n//\u5728GPU\u8bbe\u5907\u4e0a\u521b\u5efa\u6570\u7ec4\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayMixed&lt\uff1bint[]&gt\uff1b(int[].class\uff0c10)//\u5c06\u6570\u636e\u4ece\u5806\u590d\u5236\u5230\u7f13\u51b2\u533a.copy Complete\u5e03\u5c14\u503c\uff1agps.GPURef=ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])//\u5728\u6211\u4eec\u7b49\u5f85\u590d\u5236\u5b8c\u6210\u7684\u540c\u65f6\uff0c\u53ef\u80fd\u5728GPU\u4e0a\u6267\u884c\u5176\u4ed6\u8ba1\u7b97.await(Copy Complete)//a\u4ec5\u8f93\u5165\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayIn&lt\uff1bint[]&gt\uff1b(INT[].class\uff0c10)//a 2 x 4\u8f93\u51fa\u77e9\u9635\u77e9\u9635\u57abgpus.GPUBufferOutput=device.makeOffHeapArrayOut&lt\uff1bint[2]&gt\uff1b(int[2].class\uff0c2\uff0c4)\u3002\n\u5f53\u6211\u4eec\u68c0\u67e5\u8981\u5728GPU\u4e0a\u6267\u884c\u7684\u7b97\u6cd5\u65f6\uff0c\u901a\u5e38\u5b83\u4eec\u8bbe\u8ba1\u548c\u4f7f\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u662f\u4e0eGPU\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u6709\u5173\u3002Concurnas\u4e3a\u6b64\u8fc7\u7a0b\u63d0\u4f9b\u4e13\u95e8\u7684\u652f\u6301\u3002\n\u4e00\u4e9b\u6700\u9ad8\u6548\u7684GPU\u7b97\u6cd5\u901a\u8fc7\u540c\u65f6\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u548c\u8ba1\u7b97\u7684\u6d41\u6c34\u7ebf\u6765\u5b9e\u73b0\u5b83\u4eec\u7684\u6548\u7387\uff0c\u4ece\u800c\u4f7fGPU\u59cb\u7ec8\u5fd9\u4e8e\u505a\u6709\u7528\u7684\u5de5\u4f5c\u3002Concurnas\u51ed\u501f\u5176\u5bf9\u975e\u963b\u585eGPU\u64cd\u4f5c(\u5982\u901a\u8fc7Refs\u8fdb\u884c\u6570\u636e\u4f20\u8f93)\u7684\u672c\u673a\u652f\u6301\uff0c\u4f7f\u5f97\u8fd9\u4e00\u70b9\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\n//\u5b9a\u4e49\u7b26\u5408C99\u7684\u539f\u59cbOpenCL C\u4ee3\u7801\uff1a@GPUStubFunction(Source=&#34\uff1bFloat plus1(Float a\uff0cFloat b){return a+b\uff1b}&#34\uff1b)gpudef plus1(a Float\uff0cb Float)Float//\u4f7f\u7528\u73b0\u6709\u7684\u7b26\u5408C99\u7684OPENCL C\u4ee3\u7801\uff1a@GPUStubFunction(sources=[&#39\uff1b./cpucode.cl&#39\uff1b\uff0c&#39\uff1b./gpuutilCode.cl&#39\uff1b])gpudef plus2(a Float\uff0cb Float)Float\u3002\nConcurnas\u4f7f\u7528OpenCL\u5b9e\u73b0GPU\u8ba1\u7b97\u3002\u8fd9\u662f\u6709\u5229\u7684\uff0c\u56e0\u4e3a\u9664\u4e86\u5176\u591a\u4f9b\u5e94\u5546\u652f\u6301(\u4e3b\u8981\u662f\u82f1\u7279\u5c14\u3001NVIDIA\u548cAMD)\u5916\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u7528\u4e8eGPU\u8ba1\u7b97\u7684\u6574\u4e2a\u73b0\u6709\u5e93\u4ee3\u7801\u3002\nConcurnas\u5141\u8bb8\u4ee5\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\uff0c\u8981\u4e48\u76f4\u63a5\u901a\u8fc7\u7528\u7b26\u5408C99\u7684OpenCL C\u4ee3\u7801\u7f16\u5199\u7684\u4ee3\u7801\u5b57\u7b26\u4e32\u4f7f\u7528\uff0c\u8981\u4e48\u4f5c\u4e3a\u9644\u52a0\u5230\u5b58\u6839\u5185\u6838\u7684\u6ce8\u91ca\u4e2d\u7684\u76f4\u63a5\u6587\u4ef6\u5f15\u7528\u3002\n//\u4e00\u79cd\u5229\u7528GPU\u672c\u5730\u5185\u5b58gpukernel 2matMultLocal(M int\uff0cN int\uff0cK int\uff0c\u5e38\u91cfA\u6d6e\u70b9[2]\uff0c\u5e38\u91cfB\u6d6e\u70b9[2]\uff0cGLOBAL OUT RESULT FLOAT[2]){row=get_local_id(0)col=get_local_id(1)globalRow=CacheSize*get_group_id(0)+row//\u7ed3\u679c\u884c(0..M)globalCol=CacheSize*get_group_id(1)+colof result(0..N)//\u672c\u5730\u5185\u5b58\u4fdd\u5b58\u7f13\u5b58A\u548cB\u4e2d\u7684CacheSize\u5143\u7d20*CacheSize\u5143\u7d20\u3002CacheSize]acc=0.0f//\u5faa\u73af\u904d\u5386\u6240\u6709\u5206\u7247cacheSize int=K/CacheSize for(t=0\uff1bt&lt\uff1bcacheSize\uff1bt++){//\u5c06\u5168\u5c40\u5185\u5b58\u4e2d\u7684A\u548cB\u7684\u4e00\u6bb5\u7f13\u5b58//\u5230\u672c\u5730\u5185\u5b58tiledRow=CacheSize*t+row tiledCol=CacheSize*t+colcacheA[ol][row]=A[tiledCol*M+globalRow]cacheb[ol][row]=B[globalCol*K+tiledRow]\u5c4f\u969c(True)/\u3002k++){//\u7d2f\u52a0\u77e9\u9635\u5b50\u90e8\u5206\u7684\u7ed3\u679cacc+=cacheA[k][row]*cacheb[ol][k]}\u5c4f\u969c(True)//\u786e\u4fdd\u5728\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7f13\u5b58\u8282\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u9879}result[globalCol*M+globalRow]=acc}\u3002\nConcurnas\u5177\u6709\u5bf9\u672c\u5730GPU\u5185\u5b58\u548c\u5c4f\u969c\u7684\u672c\u5730\u60ef\u7528\u652f\u6301\u3002\u901a\u5e38\uff0c\u5f53\u5728GPU\u4e0a\u4f7f\u7528\u672c\u5730\u5185\u5b58\u5b9e\u73b0\u7a7a\u95f4\u5c40\u90e8\u6027\u5f88\u5f3a\u7684\u7b97\u6cd5\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u6027\u80fd\u65b9\u9762\u53d7\u76ca\u826f\u591a\u3002\nConcurnas GPU\u5b9e\u65bd\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u6027\u80fd\u5206\u6790\u9009\u9879\u3002\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u3001\u4f7f\u4eba\u80fd\u591f\u8c03\u8bd5GPU\u4ee3\u7801\u4ee5\u4fbf\u786e\u5b9a\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u4ee5\u53ca\u7528\u4e8e\u76d1\u89c6\u76ee\u7684\u90fd\u662f\u6709\u7528\u7684\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer(port=42001)remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n//\u5ba2\u6237\u7aef\uff1arm=Remote(&#39\uff1blocalhost&#39\uff1b\uff0cport=42001)//\u8fdc\u7a0b\u6267\u884c\u4ee3\u7801\uff0c\u8fd4\u56deref\uff1aans int\uff1a={10+10}\uff01(rm.onailReter())rm.close()//ans==20\nConcurnas\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u3001\u76f4\u89c2\u548c\u975e\u4fb5\u5165\u5f0f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u662f\u5bf9\u5e76\u53d1\u8ba1\u7b97\u9694\u79bb\u6a21\u578b\u7684\u6269\u5c55\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef/\u5df2\u7ecf\u4f7f\u7528\u7684\u5e76\u53d1\u8ba1\u7b97\u6a21\u578b\u6765\u6784\u5efa\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u6269\u5c55\u5230\u8fdc\u7a0b\u5de5\u4f5c\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53\u6211\u4eec\u7684\u8ba1\u7b97\u9700\u6c42\u589e\u957f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6269\u5c55\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u6765\u9002\u5e94\u3002\nConcurnas\u62bd\u8c61\u5316\u4e86\u8bb8\u591a\u5173\u4e8e\u7ba1\u7406\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u8270\u82e6\u5de5\u4f5c\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u66f4\u6709\u8da3\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f7f\u7528Concurnas\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u5c06\u7f13\u5b58\u7ed3\u679c\uff0c\u5e76\u5728\u53d1\u751f\u7f51\u7edc\u6545\u969c\u65f6\u7b49\u5f85\u5ba2\u6237\u7aef\u91cd\u65b0\u8fde\u63a5\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer()//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000 remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n\u7c7bMyCalculator{//\u4f9d\u8d56\u4ee3\u7801-callCounter=0//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570.def gcd(x int\uff0cy int){//+\u8ba1\u6570\u5668\u548cResult While(Y){(x\uff0cy)=(y\uff0cx mod y)}&#34\uff1bcount\uff1a{++callCounter}\uff0cresult\uff1a{x}&#34\uff1b}}//\u8fdc\u7a0b\u8fde\u63a5\u5e76\u6267\u884cRM=Remote(&#39\uff1b127.0.0.1&#39\uff1b)//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000\u7ed3\u679c=try{calc=MyCalculator()calc.gcd(344756)//\u8fd8\u4f20\u8f93\u4f9d\u8d56\u4ee3\u7801(MyCalculator.class)\u548c\u5bf9\u8c61\u72b6\u6001(CallCounter).res\u5b57\u7b26\u4e32\uff1a={calc.gcd(97,7081)}\uff01(rm.onailReter())res\uff1aget()}Finally{rm.close()}//result==count\uff1a2\uff0cresult\uff1a97\u3002\n\u4f7f\u7528Concurnas\uff0c\u53ef\u4ee5\u5bf9\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u8fd0\u884c\u63d0\u4ea4\u7ed9\u5b83\u4eec\u7684\u4efb\u4f55\u88ab\u8ba4\u4e3a\u53ef\u4ee5\u5b89\u5168\u6267\u884c\u7684\u4ee3\u7801\u3002\n\u5185\u90e8Concurnas\u5206\u5e03\u5f0f\u8ba1\u7b97API\u5305\u62ec\u5bf9\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u7684\u89c4\u5b9a\uff0c\u8be5\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u672c\u8eab\u76f8\u5f53\u590d\u6742\uff0c\u5e76\u4e14\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u80fd\u591f\u6267\u884c\u9759\u6001\u4ee3\u7801\u4f9d\u8d56\u5173\u7cfb\u5206\u6790\uff0c\u4ee5\u4fbf\u9884\u5148\u786e\u5b9a\u5e76\u62a2\u5148\u63d0\u4f9b\u6267\u884c\u6240\u9700\u7684\u4ee3\u7801\u3002\n..", "note_en": "Concurnas is an open source JVM programming language designed for building reliable, scalable, high performance concurrent, distributed and parallel systems\n    Using Concurnas helps organizations take full advantage of modern multi-core CPU and GPU hardware by making concurrent and parallel  programming easier.\n  Concurnas is  interoperable with Java (and other JVM languages) - organizations are able to leverage existing Java software in a concurrent environment.\n  Compared to other languages, with Concurnas  developers need to write fewer lines of code. That code is safer and easier to test, increasing quality and boosting developer productivity.\n    Inspired by languages such as  Python and  Java, Concurnas is a statically typed, garbage collected language utilizing type inference with an easy to learn syntax.\n  Concurnas is a compiled language which runs on the Java Virtual Machine and as such has access to the incredible performance offered by the JVM\n  Concurnas makes it possible to use the same code from a small research prototype to a planet scale distributed production solution\n  Concurnas is an open source technology, free to use and modify. With on going development and commercial support provided by  Concurnas Ltd\n  Concurnas @ JAX London 2020... We will be speaking about Concurnas at  JAX LONDON 2020\n    Concurnas offers a simple but extremely powerful concurrency model which allows you to write concurrent code without having to write boilerplate code to manage threads, critical sections or locks!\n  Concurnas offers first class citizen support for distributed computing as a specialization of concurrent computing\n  Concurnas offers first class citizen support for GPU programming. You can write your code in idiomatic Concurnas code and run on the GPU without having to switch to C/C++!\n  Concurnas offers first class citizen support for interacting with non heap managed, non garbage collected memory. This makes working with GPUs, big data and custom databases a breeze.\n  Concurnas supports all the usual constructs used in modern imperative computing such as: if-elif-else, for, while loops, assertions, exceptions. Plus implicit returns from blocks, with statements, list comprehension, copiers and much much more!\n  Concurnas takes the hard work and boiler plate out of object oriented programming and makes it fun again. Concurnas has advanced support for\r\t\t\tclasses (concrete, abstract, inheritance), generics (in out, wild cards, bounded), enumerations, annotations. As well as new features such as traits, tuples, object providers, typedefs, usage based generic type inference, automatic generation/ redirection of class field getters/setters, class hashcodes and equalities.\n  The functional programming paradigm incorporates a set of tremendously useful approaches to solving problems, but pure functional programming is rarely seen in the wild. With Concurnas we&#39;ve taken the most widely used elements of functional programming, and integrated them into Concurnas. With Concurnas you have access to method and function references, lambdas, partial function evaluation, lazy evaluation, pattern matching plus a whole lot more!\n  Concurnas has first class citizen support for the emerging reactive programming paradigm. With Concurnas you can write code which will react to changes in input parameters automatically - thus allowing you to create reactive pipelines. A very natural way of solving algorithmic problems.\n  Concurnas has first class citizen support for core data structures including arrays, matrices, lists, maps, ranges and sets.\n  A technique popular in the scientific computing community, Concurnas allows you to apply an operator to all elements of an array/matrix/list via a one character operator\n  Concurnas offers a standalone compiler, an interactive REPL shell, Jupyter Notebook, VS Code, Atom and Sublime text support.\n  Concurnas is a null safe language, this helps to eliminate one of the most common sources of bugs in modern programming: the null pointer exception!\n  Concurnas runs on the Java Virtual Machine, which not only gives you access to the JDK and fantastic multi-platform performance offered by the JVM but also compatibility with other JVM languages such as  Java,  Scala,  Kotlin and  Clojure - plus you can easily integrate/use all your existing JVM code without modification.\n  Concurnas is a statically typed language which uses type inference extensively to remove the burden of types. Often times Concurnas code is indistinguishable from Python code (widely recognized as one of the easiest languages to code in) but with the performance of  Java!\n  Programming languages are not just for machines - people need to read them too! Concurnas offers a concise syntax and many shortcuts to make writing easy to read and maintainable code the norm. Concurnas is also able to be verbose, for code which requires that extra bit of clarity.\n  Concurnas has extensive support for Domain Specific Languages via; expression lists, extension functions and operator overloading. Concurnas also supports language extensions, which allow you to directly embed segments of non Concurnas code into your Concurnas code files.\n    def gcd(x int, y int){//greatest common divisor of two integers\r while(y){\r (x, y) = (y, x mod y)\r }\r x\r}\r\rcalc1 = gcd(8, 20)!//run this calculation in an isolate\rcalc2 = gcd(6, 45)!//run this calculation in a separate isolate\r\rcalc3 = calc1 if calc1 &gt; calc2 else calc2\r//^^^ wait for the results of calc1 and calc2 before assigning calc3\n  Concurnas allows you to easily execute computation, concurrently, in separate thread-like containers called  isolates via use of the bang  ! operator.\n  Concurrent computation is often recognized as one of the most difficult aspects of modern software engineering\n  Notice how concurrent computation is a one liner in Concurnas, there is no worry about creating/managing threads, thread pools, life-cycles, locks (or deadlocks!), critical sections, synchronization, wait, notifying threads etc. All this hard stuff is taken care of automatically - leaving you to focus on what&#39;s important.\n    n = 10\r\rnplusone = { n += 1; n }!//perform this calculation in an isolate, a copy of n is made\rnminusone = { n -= 1; n }!//another isolate, on a separate copy of n\r//The above two isolates will never interfere with one another&#39;s copy of n\r\r//nplusone == 11\r//nminusone == 9\n  All code in Concurnas is executed in isolates. Isolates are mapped onto the underlying hardware threads of the machine upon which one is running one&#39;s code. Isolates operate within their own dedicated memory space.\n  All state used in an isolate is copied with the exception of references, actors and some specially marked shareable classes. This isolation of state makes reasoning and designing concurrent algorithms easier since it reduces the need to code for synchronization and race conditions.\n    aRef int://this is a ref of type int\r{//complex isolate executed concurrently eventually sets aRef...\r //complex code here...\r aRef = 10\r}!\r\r//aRef&#39;s current value is requested of it:\rresult int = aRef//If no value has yet been set execution will pause\r\rSystem.out.println(&#34;The value of aRef is: &#34; + result)\n  execount int: = 0\rfor(a in 1 to 10){\r //some complex calculation..\r execount++\r}!//spawn an isolate to execute the above concurrently.\r\rawait(execount; execount==10)//pause further execution until execount == 10\n  aval int://no initial value set\rbval int: = 22 //initial value known\r\rsumvals int: = every(aval, bval) { aval + bval }\r//after initializing above, execution is allowed to carry on...\r\raval = 100\rbval = 200\r\r//every block above will run concurrently and eventually set sumvals to:\rawait(sumvals; sumvals==300)\n  They are not copied between isolates, rather they are shared but provide controlled, atomic access to their changeable state. If a value is not yet set on a ref when it is requested, execution is paused and other isolates are allowed to execute until a value has been set, after which execution continues.\n  We can react to changes to refs via the following reactive programming constructs provided by Concurnas:\n  await\u00a0Will pause execution until a value has been set on a ref and an optional guard condition has been satisfied\n  onchange\u00a0Will trigger execution of its code block to occur concurrently upon any of its monitored refs being changed\n  every\u00a0Behaves as  onchange but will trigger if an initial value has been set on any monitored ref\n    a int:\rb int:\r\rc &lt;= a + b //same as: c int: = every(a, b) { a + b }\rd &lt;- a + b //same as: c int: = onchange(a, b) { a + b }\n  As with most syntactical elements of Concurnas, a concise version of the reactive programming constructs  every and  onchange is provided. This effectively turns reactive computing into a one line operation.\n    account1 int: = 100\raccount2 int: = 100\ronchange(account1, account2) {\r System.out.println(&#34;sum: {account1 + account2}&#34;)\r}\r\rtrans{\r account1 -= 10\r account2 += 10\r}\r\r//will output: &#34;sum: 200&#34;\n  Concurnas supports software transactional memory via the trans block keyword. This allows us to make changes to one or more refs and have those changes visible outside of our transaction on an atomic basis.\n    from com.concurnas.lang.pulsar import Pulsar, RealtimePulsar\rfrom java.time import Duration\r\rpulsar = new RealtimePulsar()\r\roneOffTrigger := pulsar.after(Duration.ofSeconds(10))//schedule event for 10 seconds time...\revery(oneOffTrigger){\r System.out.println(&#34;Current time: &#34; + oneOffTrigger)\r}\r//schedule event every 2 seconds 10 times...\rrepeatingTrigger := pulsar.repeat(Duration.ofSeconds(2), 10)\revery(repeatingTrigger){\r System.out.println(&#34;Current time: &#34; + repeatingTrigger)\r}\n  A common pattern in concurrent systems engineering is to want to have some for of time based trigger, &#34;wait 10 seconds then do x&#34; or &#34;do y every 3 seconds etc&#34; or &#34;perform this action at this certain time&#34;. At Concurnas we refer to this as temporal computing.\n  Temporal computing is supported via the built in Pulsar library found at: com.concurnas.lang.pulsar. This library allows us to schedule activities to take place in the future after a certain amount of time has elapsed. It also allows us to schedule tasks for future repetition.\n  Concurnas offers both a realtime implementation of pulsars and a &#39;Frozen&#39;-time implementation (designed primarily for testing temporal applications), which permits time to be injected as a controlled variable.\n    result = parfor(b in 0 to 10){\r gcd(b, 10-b)\r}\r\r//result == [10:, 1:, 2:, 1:, 2:, 5:, 2:, 1:, 2:, 1:, 10:]\n  Concurnas has first class citizen support for parallel for loops. These are a convenient and intuitive mechanism for performing task based operations in the context of a loop, in parallel. They have the same syntax as conventional loops in Concurnas.\n  actor MyActor{//lets define an actor\r -count = 0\r def increment(){\r count++\r }\r}\r\r//Use of the above actor:\rma = new MyActor()\r\rma.increment()//just like normal method call, will block until execution is complete\r\rsync{//sync - wait for all isolates created in the block to complete\r {ma.increment()}!//called concurrently\r {ma.increment()}!\r}\r\rcount = ma.getCount()\r//count == 3, not possible with regular objects!\n  Actors in Concurnas enable us to build micro-services. Each actor operates within its own dedicated isolate. Actors look and behave just like regular objects from the perspective of the calling code.\n  Actors allow us to write service code in a single threaded style and be able to run them safety in a concurrent manner without having to concern ourselves with synchronization or race conditions as each call to an actor runs sequentially and has exclusive access to the sate of the actor until it completes. Naturally, because actors implement their own concurrency control they are safe to be shared without copying across multiple isolates.\n    class MyCounter(-count int){//ordinary class\r def increment(){\r count++\r }\r}\r\r//We can now define and use our typed actor through the aid of the of keyword as follows:\ractor MyActor of MyCounter(0)\r\r\r//let&#39;s use our new typed actor:\rma = new MyActor()\r\rma.increment()\r\rsync{//sync - wait for all isolates created in the block to complete\r ma.increment()!\r ma.increment()!\r}\r\rcount = ma.count//count == 3\n  Sometimes we do not have the luxury of defining actors from scratch. This is particularly the case if we are working with pre existing code. To this end Concurnas provides typed actors. Typed actors construct their own and wrap around an instance of an ordinary object.\n  Any constructor used to create an instance of the class or method being wrapped is also provided by the typed actor.\n    class MyCounter(-count int){\r def increment(){\r count++\r }\r}\r\rinst1 = actor MyCounter(0) //create a new actor on MyCounter\rinst2 = new actor MyCounter(0) //create a new actor on MyCounter\n  Another way to create a typed actor is to simply use the actor keyword in place of or in addition to the new keyword when creating an instance of an object (now and actor!).\n  //a simple kernel for performing matrix multiplication...\rgpukernel 2 matMult(M int, K int, \r global in A float[2], global in B float[2], global out resultMat float[2]) {\r globalRow = get_global_id(0) \r globalCol = get_global_id(1) \r acc = 0.0f;\r for (k=0; k&lt;K; k++) {\r acc += A[k*M + globalRow] * B[globalCol*K + k]\r }\r resultMat[globalCol*M + globalRow] = acc;\r}\n  Concurnas has first class citizen support for GPU computing. GPUs can be used like CPU co processors and through their use we&#39;re often able to improve the speed of computation for many compute bound problems by over 100x compared to conventional CPU based computation.\n  Central to GPU computing are kernels. These are executed on our GPUs in order to perform computation. Concurnas allows you to create kernels in a subset of the Concurnas programming language. This means we can write idiomatic Concurnas code with only slight modifications in order to perform computation on the GPU.\n    //create an array buffer on a GPU device\rar gpus.GPUBufferInput = device.makeOffHeapArrayMixed&lt;int[]&gt;(int[].class, 10)\r//copy data from the heap into the buffer...\rcopyComplete boolean:gps.GPURef = ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])\r//perform other computation, possibly on the GPU, whilst we wait for the copy to complete...\rawait(copyComplete)\r\r//an input only buffer\rar gpus.GPUBufferInput = device.makeOffHeapArrayIn&lt;int[]&gt;(int[].class, 10)\r//a 2 by 4 output matrix\rmat gpus.GPUBufferOutput = device.makeOffHeapArrayOut&lt;int[2]&gt;(int[2].class, 2, 4)\n  When we examine algorithms to execute on the GPU, often a big factor in their design and usage concerns transference of data to and from the GPU. Concurnas offers dedicated support for this process.\n  Some of the most efficient GPU algorithms achieve their efficiency by implementing pipelining of data transference and computation together so to always keep the GPU busy doing useful work. Concurnas makes this easy by virtue of its native support for non blocking GPU operations such as data transference via refs.\n    //defining raw C99 compliant OpenCL C code:\r@GPUStubFunction(source=&#34;float plus1(float a, float b){ return a + b;}&#34;)\rgpudef plus1(a float, b float) float\r\r//using existing C99 compliant OpenCL C code:\r@GPUStubFunction(sources=[&#39;./cpucode.cl&#39;, &#39;./gpuutilCode.cl&#39;])\rgpudef plus2(a float, b float) float\n  Concurnas implements GPU computing by using OpenCL. This is advantageous because in addition to its multi vendor support (mainly Intel, Nvidia and AMD) one has access to a whole host of existing library code for GPU computation.\n  Concurnas allows for existing code to be used in one of two ways, either directly via a code string written in C99 compliant OpenCL C code or as a direct file reference in an annotation attached to a stub kernel.\n    //a matrix multiplication algorithm leveraging GPU local memory\rgpukernel 2 matMultLocal(M int, N int, K int, \r constant A float[2], constant B float[2], global out result float[2]) {\r row = get_local_id(0)\r col = get_local_id(1)\r globalRow = CacheSize*get_group_id(0) + row //row of result (0..M)\r globalCol = CacheSize*get_group_id(1) + col //col of result (0..N)\r\t\r //local memory holding cache of CacheSize*CacheSize elements from A and B\r local cacheA = float[CacheSize, CacheSize]\r local cacheb = float[CacheSize, CacheSize]\r\t\r acc = 0.0f\r\t\r //loop over all tiles\r cacheSize int = K/CacheSize\r for (t=0; t&lt;cacheSize; t++) {\r //cache a section of A and B from global memory\r //into local memory tiledRow = CacheSize*t + row\r tiledCol = CacheSize*t + col\r cacheA[col][row] = A[tiledCol*M + globalRow]\r cacheb[col][row] = B[globalCol*K + tiledRow]\r\t\t\r barrier(true)//ensure all work items finished caching\r\t\t\r for (k=0; k&lt;CacheSize; k++) {//accumulate result for matrix subsections\r acc += cacheA[k][row] * cacheb[col][k]\r }\r\t\t\r barrier(true)//ensure all work items finished before moving on to next cache section\r }\r \r result[globalCol*M + globalRow] = acc\r}\n  Concurnas has native idiomatic support for local GPU memory and barriers. Often algorithms with a strong degree of spatial locality benefit hugely in terms of performance when they are implemented with local memory on a GPU\n    The Concurnas GPU implementation provides detailed profiling options. This is useful for both development, in enabling one to debug one&#39;s GPU code so as to determine how much time is spent performing certain operations, and for monitoring purposes\n  //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer(port = 42001)\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  //A client:\rrm = Remote(&#39;localhost&#39;, port = 42001)\r//execute code remotely, returning a ref:\rans int: = {10+10}!(rm.onfailRetry())\rrm.close()\r//ans == 20\n  Concurnas provides an easy to use, intuitive and non invasive solution for distributed computing which acts as an extension of the isolate model of concurrent computation. In this way we are able to use the concurrent computing model which we are used to/have already built our software using and can easily extend this to working on a remote basis. In this way as our computational requirements grow we can easily scale our solutions to accommodate.\n  Concurnas abstracts away much of the hard work Concerning managing distributed computing, allowing us to focus on the more interesting problems which we are trying to solve. For instance, with Concurnas remote servers will cache results and wait for clients to reconnect in the event of network failure.\n    //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer()//use default port 42000\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  class MyCalculator{//dependent code\r -callCounter = 0\r //greatest common divisor of two integers...\r def gcd(x int, y int){//+ counter and result\r while(y){\r (x, y) = (y, x mod y)\r }\r &#34;count: {++callCounter}, result: {x}&#34;\r }\r}\r\r//connect and execute remotely\rrm = Remote(&#39;127.0.0.1&#39;)//use default port 42000\rresult = try{\r calc = MyCalculator()\r calc.gcd(34, 4756)\r\r //Dependant code (MyCalculator.class) and object state (callCounter) is also transmitted...\r res String: = {calc.gcd(97, 7081)}!(rm.onfailRetry())\r res:get()\r}finally{\r rm.close()\r}\r//result == count: 2, result: 97\n  With Concurnas, remote servers are able to be configured such that they can run any code submit to them deemed safe for execution.\n  The internal Concurnas distributed computing API includes a provision for dependency resolution which itself is quite sophisticated and in the interests of performance is able to perform static code dependency analysis in order to determine and preemptively provide upfront the code that is required in order to execut\n......", "posttime": "2020-05-28 04:55:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,\u7f16\u7a0b\u8bed\u8a00,\u4ee3\u7801", "title": "\u5e76\u53d1\u7f16\u7a0b\u8bed\u8a00(Concurnas Programming Language)", "title_en": "The Concurnas Programming Language", "transed": 1, "url": "https://concurnas.com/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "fb53181a19f8110ed96b1b9f4471f747.jpg", "infoid": 1003985, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92020\u8d22\u5bcc\u4f20\u5a92IP\u6709\u9650\u516c\u53f8\u3002\u7248\u6743\u6240\u6709\u3002\u4f7f\u7528\u672c\u7f51\u7ad9\u5373\u8868\u793a\u63a5\u53d7\u6211\u4eec\u7684\u4f7f\u7528\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56(\u60a8\u7684\u52a0\u5dde\u9690\u79c1\u6743)|CCPA\u8bf7\u52ff\u51fa\u552e\u6211\u7684\u4fe1\u606f\u8d22\u5bcc\u662fFortune Media IP Limited\u7684\u5546\u6807\uff0c\u5728\u7f8e\u56fd\u548c\u5176\u4ed6\u56fd\u5bb6/\u5730\u533a\u6ce8\u518c\u3002\u201c\u8d22\u5bcc\u201d\u6742\u5fd7\u53ef\u80fd\u4f1a\u56e0\u672c\u7f51\u7ad9\u4e0a\u7684\u4e00\u4e9b\u4ea7\u54c1\u548c\u670d\u52a1\u94fe\u63a5\u800c\u83b7\u5f97\u8865\u507f\u3002\u62a5\u76d8\u5982\u6709\u66f4\u6539\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002\u5f15\u6587\u81f3\u5c11\u5ef6\u8fdf\u4e8615\u5206\u949f\u3002\u7531Interactive Data\u63d0\u4f9b\u7684\u5e02\u573a\u6570\u636e\u3002\u6668\u661f\u516c\u53f8\u63d0\u4f9b\u7684ETF\u548c\u5171\u540c\u57fa\u91d1\u6570\u636e\u3002\u9053\u743c\u65af\u6761\u6b3e\u548c\u6761\u4ef6\uff1ahttp://www.djindexes.com/mdsidx/html/tandc/indexestandcs.html.\u3002\u6807\u51c6\u666e\u5c14\u6307\u6570\u6570\u636e\u662f\u829d\u52a0\u54e5\u5546\u54c1\u4ea4\u6613\u6240\u516c\u53f8\u7684\u8d22\u4ea7\u3002\u4ee5\u53ca\u5b83\u7684\u8bb8\u53ef\u4eba\u3002\u7248\u6743\u6240\u6709\u3002\u6761\u6b3e\u548c\u6761\u4ef6\u3002\u7531\u4ea4\u4e92\u5f0f\u6570\u636e\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u652f\u6301\u548c\u5b9e\u65bd\u3002|\u6b27\u76df\u6570\u636e\u4e3b\u9898\u8bf7\u6c42", "note_en": "\u00a9 2020 Fortune Media IP Limited. All Rights Reserved. Use of this site constitutes acceptance of our  Terms of Use and  Privacy Policy ( Your California Privacy Rights) |  CCPA Do Not Sell My Information FORTUNE is a trademark of Fortune Media IP Limited, registered in the U.S. and other countries. FORTUNE may receive compensation for some links to products and services on this website. Offers may be subject to change without notice. Quotes delayed at least 15 minutes. Market data provided by  Interactive Data. ETF and Mutual Fund data provided by  Morningstar, Inc. Dow Jones Terms &amp; Conditions:  http://www.djindexes.com/mdsidx/html/tandc/indexestandcs.html. S&amp;P Index data is the property of Chicago Mercantile Exchange Inc. and its licensors. All rights reserved.  Terms &amp; Conditions. Powered and implemented by  Interactive Data Managed Solutions. |  EU Data Subject Requests", "posttime": "2020-05-28 04:55:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9996\u5e2d,ceo,\u6570\u636e", "title": "AMD\u9996\u5e2d\u6267\u884c\u5b98\u4e3d\u838e\u00b7\u82cf(Lisa Su)\u662f\u6807\u51c6\u666e\u5c14500\u6307\u6570\u6210\u4efd\u80a1\u516c\u53f8\u85aa\u916c\u6700\u9ad8\u7684\u9996\u5e2d\u6267\u884c\u5b98", "title_en": "AMD CEO Lisa Su is highest paid CEO in S&P 500", "transed": 1, "url": "https://fortune.com/2020/05/27/ceo-pay-average-coronavirus-lisa-su-bob-iger-reed-hastings-salary/", "via": "", "real_tags": ["\u9996\u5e2d", "ceo", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5728MacOS10.15.5\u7684\u6d4b\u8bd5\u7248\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2aAPFS\u6587\u4ef6\u7cfb\u7edf\u7f3a\u9677\u3002\u8be5\u9519\u8bef\u7684\u6280\u672f\u7ec6\u8282\u5982\u4e0b\u6240\u793a\uff0c\u4f46\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u4e0d\u80fd\u518d\u4f7f\u7528\u81ea\u5df1\u7684\u6587\u4ef6\u590d\u5236\u673a\u6765\u5efa\u7acbMacOS Catalina\u7cfb\u7edf\u5377\u7684\u521d\u59cb\u53ef\u5f15\u5bfc\u5907\u4efd\u3002\u9700\u8981\u975e\u5e38\u6e05\u695a\u7684\u662f\uff0c\u73b0\u6709\u5907\u4efd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u4e0d\u4f1a\u5f71\u54cdCCC\u4fdd\u5b58\u6570\u636e\u7684\u80fd\u529b\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u542f\u52a8\u76d8\u6216\u5907\u4efd\u76d8\u4e0a\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002\u6b64\u9519\u8bef\u7684\u5f71\u54cd\u4ec5\u9650\u4e8e\u521d\u59cb\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\u3002\n\u6240\u4ee5\u90a3\u662f\u4e2a\u67e0\u6aac\u2026\u2026\u3002\u4f46\u662f\uff0c\u563f\uff0c\u5317\u534a\u7403\u7684\u590f\u5929\u5df2\u7ecf\u5230\u4e86\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u505a\u70b9\u67e0\u6aac\u6c34\u5427\uff01\n\u5728\u53bb\u5e74\u7684\u82f9\u679c\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\uff0c\u82f9\u679c\u5efa\u8bae\u5907\u4efd\u8f6f\u4ef6\u5e94\u8be5\u4f7f\u7528\u82f9\u679c\u8f6f\u4ef6\u8fd8\u539f(ASR)\u6765\u514b\u9686APFS\u5377\u7ec4\u3002\u8d77\u521d\u6211\u5bf9\u6b64\u4e0d\u5c51\u4e00\u987e-\u6211\u4e0d\u5e94\u8be5\u4f7f\u7528\u82f9\u679c\u7684\u9ed1\u5323\u5b50\u5de5\u5177\u6765\u505a\u6211\u7684\u5de5\u4f5c\uff0c\u6211\u66f4\u559c\u6b22\u5bf9\u6211\u7684\u5907\u4efd\u627f\u62c5\u5168\u90e8\u8d23\u4efb\u3002\u7136\u800c\uff0c\u8003\u8651\u5230\u82f9\u679c\u5c06\u7ee7\u7eed\u9650\u5236APFS\u7684\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u6388\u4e88\u5b83\uff0c\u6211\u4eec\u51b3\u5b9a\u6295\u5165\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u6765\u8bc4\u4f30\u8fd9\u4e00\u529f\u80fd\uff0c\u6211\u4eec\u5728\u8fc7\u53bb\u76848\u4e2a\u6708\u91cc\u4e00\u76f4\u5728\u5bf9\u5176\u8fdb\u884cBeta\u6d4b\u8bd5\u3002\u6211\u4e0d\u559c\u6b22\u4f9d\u8d56ASR\u8fdb\u884c\u5e38\u89c4\u5907\u4efd\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u5e76\u4e14\u65e0\u6cd5\u6df1\u5165\u4e86\u89e3\u5176\u5185\u90e8\u6d3b\u52a8(\u4f8b\u5982\uff0c\u590d\u5236\u7684\u6587\u4ef6\u3001\u9047\u5230\u7684\u9519\u8bef)\uff0c\u4f46\u5728\u8fd9\u79cd\u5b9a\u4e49\u975e\u5e38\u72ed\u7a84\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Apple\u7684\u4e13\u6709\u5b9e\u7528\u7a0b\u5e8f\u6765\u5efa\u7acb\u53ef\u5f15\u5bfc\u7684\u5907\u4efd\u3002\u4e0a\u5468\u65e5\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7248\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u56f4\u7ed5\u6b64\u529f\u80fd\u7684\u65b0\u7528\u6237\u754c\u9762\uff0c\u6211\u4eec\u6253\u7b97\u901a\u8fc7\u5229\u7528ASR\u8fdb\u884c\u521d\u59cb\u5907\u4efd\u6765\u7ee7\u7eed\u751f\u6210\u53ef\u5f15\u5bfc\u7684\u5907\u4efd\u3002\n\u6211\u5df2\u7ecf\u670910.15.4\u7684\u5907\u4efd\uff0c\u66f4\u65b0\u523010.15.5\u540e\u9700\u8981\u505a\u4ec0\u4e48\u7279\u6b8a\u7684\u4e8b\u60c5\u5417\uff1f\n\u4e0d\u662f\u7684\u3002\u5982\u679c\u60a8\u5728\u4ee5\u524d\u7248\u672c\u7684Catalina\u4e0a\u5efa\u7acb\u4e86\u5907\u4efd\uff0c\u5219\u60a8\u7684\u5907\u4efd\u5377\u5df2\u7ecf\u5177\u6709\u529f\u80fd\u6b63\u5e38\u7684\u56fa\u4ef6\u94fe\u63a5\uff0cCCC\u5c06\u7ee7\u7eed\u6b63\u5e38\u66f4\u65b0\u8be5\u5377\u3002\u575a\u6301\u4f7f\u7528CCC 5.1.17\uff0c\u5e76\u5728\u4e0b\u5468\u5de6\u53f3\u66f4\u65b0\u5230CCC 5.1.18\u3002\n\u6211\u6b63\u5728\u5c1d\u8bd5\u521b\u5efa10.15.5\u7684\u65b0\u5907\u4efd\u3002\u5982\u4f55\u7ee7\u7eed\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\uff1f\n\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c10.15.5\uff0c\u5e76\u4e14\u8981\u5c06Catalina\u7cfb\u7edf\u5377\u5907\u4efd\u5230\u7a7a\u78c1\u76d8\uff0c\u5219\u5e94\u4f7f\u7528CCC 5.1.18\u6d4b\u8bd5\u7248\u66ff\u6362\u60a8\u7684CCC\u526f\u672c\u3002\u6253\u5f00CCC 5.1.18\u540e\uff1a\nCCC\u968f\u540e\u5c06\u663e\u793a\u65b0\u7684UI\uff0c\u8be5UI\u5c06\u5f15\u5bfc\u60a8\u5b8c\u6210\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\u7684\u8fc7\u7a0b\uff0c\u6216\u8005\u5982\u679c\u60a8\u9009\u62e9\u53ea\u521b\u5efa\u6570\u636e\u5907\u4efd\u7684\u8bdd\u3002\u65b0\u529f\u80fd\u8bb0\u5f55\u5982\u4e0b\uff1a\n\u6211\u4eec\u9884\u8ba1CCC 5.1.18\u7684\u6d4b\u8bd5\u671f\u5f88\u77ed--\u5927\u90e8\u5206\u66f4\u6539\u90fd\u662f\u5728\u65b0\u7684UI\u4e2d\u8fdb\u884c\u7684\uff0c\u540e\u7aef\u529f\u80fd\u5df2\u7ecf\u8fc7\u4e86\u76f8\u5f53\u4e25\u683c\u7684\u6d4b\u8bd5\u3002\u6211\u4eec\u5df2\u7ecf\u5c06\u672c\u5730\u5316\u8d44\u6e90\u53d1\u9001\u7ed9\u6211\u4eec\u7684\u7ffb\u8bd1\u56e2\u961f\uff0c\u6211\u4eec\u9884\u8ba1\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u53d1\u5e035.1.18\u7684\u6700\u7ec8\u7248\u672c\u3002\nCHFLAGS()\u7cfb\u7edf\u8c03\u7528\u4e0d\u80fd\u518d\u5728APFS\u5377\u4e0a\u7684\u6587\u4ef6\u5939\u4e0a\u8bbe\u7f6eSF_FIRMLINK\u6807\u5fd7\u3002\u5b83\u4e0d\u662f\u4ee5\u6211\u4eec\u4f1a\u68c0\u6d4b\u5230\u7684\u9519\u8bef\u4ee3\u7801\u5931\u8d25\uff0c\u800c\u662f\u4ee5\u9759\u9ed8\u65b9\u5f0f\u5931\u8d25-\u5b83\u4ee5\u6210\u529f\u9000\u51fa\u72b6\u6001\u9000\u51fa\uff0c\u4f46\u4ee5\u9759\u9ed8\u65b9\u5f0f\u65e0\u6cd5\u8bbe\u7f6e\u7279\u6b8a\u6807\u5fd7\u3002\u8fd9\u662fCHFLAGS\u7684APFS\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u4e2d\u7684\u4e00\u4e2a\u9519\u8bef-\u5982\u679c\u7cfb\u7edf\u8c03\u7528\u6ca1\u6709\u6267\u884c\u60a8\u8981\u6c42\u5b83\u505a\u7684\u4e8b\u60c5\uff0c\u5b83\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u6210\u529f\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u76f8\u5f53\u4ee4\u4eba\u8ba8\u538c\u7684\u9519\u8bef\u3002\u82f9\u679c\u516c\u53f8\u5ba3\u626c\u8bf4\uff0c\u4f60\u5e94\u8be5\u7ecf\u5e38\u68c0\u67e5\u4f60\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u662f\u8fd9\u6837\u505a\u7684--\u51fa\u4e8e\u5b97\u6559\u539f\u56e0\u3002\u8fd9\u4e2a\u9519\u8bef\u4ece\u6211\u4eec\u8eab\u8fb9\u6e9c\u8d70\u4e86\u591a\u4e45\uff0c\u8c01\u77e5\u9053\u5462\uff0c\u56e0\u4e3a\u7cfb\u7edf\u8c03\u7528\u4ee5\u6210\u529f\u9519\u8bef\u4ee3\u7801\u9000\u51fa\u3002\n\u6211\u4eec\u4e0d\u9700\u8981\u8bbe\u7f6e\u8bb8\u591a\u8fd9\u6837\u7684\u6807\u5fd7\uff0c\u4e5f\u4e0d\u9700\u8981\u7ecf\u5e38\u8bbe\u7f6e\u5b83\u4eec-\u53ea\u9700\u5728\u7b2c\u4e00\u6b21\u5907\u4efdMacOS\u7cfb\u7edf\u5377\u65f6\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u8fc7\uff0c\u5b83\u6070\u597d\u5bf9APFS\u5377\u7ec4\u7684\u529f\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u6b64\u8bbe\u7f6e\u8fd9\u4e9b\u6807\u5fd7\u5931\u8d25\u610f\u5473\u7740\u572810.15.5\u548c\u66f4\u9ad8\u7248\u672c\u4e0a\u521b\u5efa\u7684\u65b0\u7684\u5168\u7cfb\u7edf\u5907\u4efd\u5c06\u4e0d\u80fd\u5f15\u5bfc\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u60a8\u7684\u6570\u636e\u90fd\u4e0d\u5728\u76ee\u6807\u4e0a(\u4e0d\u8fc7\u8981\u6e05\u695a\u7684\u662f\uff0c\u6240\u6709\u6570\u636e\u90fd\u5df2\u5907\u4efd)\u3002\u8fd9\u4e0e\u6211\u4eec\u5728\u8fd9\u91cc\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\u6709\u4e9b\u80cc\u9053\u800c\u9a70\u3002\u73b0\u5728\u5f88\u96be\u627e\u5230\u4eb2\u5207\u7684\u8bed\u8a00\u6765\u8868\u8fbe\u6211\u5bf9\u82f9\u679c\u7684\u611f\u60c5\u3002\u4e0d\u8fc7\uff0c\u6211\u53ea\u60f3\u8bf4\uff0c\u6211\u5bf9\u82f9\u679c\u5728\u70b9\u53d1\u5e03\u7684\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4e2d\u5f15\u5165\u8fd9\u7c7b\u9519\u8bef\u611f\u5230\u975e\u5e38\u5931\u671b\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u770b\u5230\u4e86Catalina\u76845\u4e2a\u4e3b\u8981\u66f4\u65b0\uff0c\u6211\u4eec\u5e94\u8be5\u671f\u5f85\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u770b\u5230\u6bd4\u8fd9\u4e2a\u66f4\u9ad8\u7684\u8d28\u91cf\u3002\n\u4e0a\u5468\u4e00(5\u670818\u65e5)\uff0c\u6211\u5c31\u6b64\u95ee\u9898\u5411\u82f9\u679c\u63d0\u4ea4\u4e86\u4e00\u4efd\u9519\u8bef\u62a5\u544a(FB7706647)\u3002\u6211\u8fd8\u4e0e\u82f9\u679c\u7684\u5f00\u53d1\u8005\u6280\u672f\u652f\u6301\u90e8\u95e8\u53d1\u751f\u4e86\u4e00\u8d77\u4e8b\u4ef6\u3002\u6211\u5f97\u5230\u4e86\u4e00\u4e2a\u540c\u60c5\u7684\u8033\u6735\uff0c\u6709\u4eba\u5411\u82f9\u679c\u5de5\u7a0b\u90e8\u63d0\u51fa\u4e86\u6211\u7684\u89c2\u70b9--\u6211\u975e\u5e38\u611f\u6fc0\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u5207\u90fd\u662f\u5f92\u52b3\u7684\u3002\u6700\u65b0\u768410.15.5\u6d4b\u8bd5\u7248\u4e8e\u4e0a\u5468\u4e09(5\u670820\u65e5)\u53d1\u5e03\uff0c\u6ca1\u6709\u4efb\u4f55\u4fee\u590d\u3002\u4eca\u5929\uff0c\u82f9\u679c\u516c\u53f8\u53d1\u5e03\u4e8610.15.5\uff0c\u5e26\u6709\u8fd9\u4e2a\u4ee4\u4eba\u8ba8\u538c\u7684\u5c0f\u9519\u8bef\uff0c\u800c\u6211\u4eec\u73b0\u5728\u6b63\u5728\u521b\u5efa\u5b8c\u6574\u7684\uff0c\u4f46\u529f\u80fd\u7565\u5dee\u7684\u5907\u4efd\u3002\n\u8fd9\u4f1a\u4e0d\u4f1a\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5b89\u5168\u8865\u4e01--\u4e5f\u8bb8\u82f9\u679c\u4e0d\u60f3\u8ba9\u7b2c\u4e09\u65b9\u521b\u5efaFirmlink\uff1f\n\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd--\u5982\u679c\u8fd9\u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u800c\u5b9e\u9645\u4e0a\u662f\u82f9\u679c\u6545\u610f\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u6211\u4f1a\u8ba4\u4e3a\u8fd9\u8fdc\u8fdc\u6bd4\u4e00\u4e2a\u6f0f\u6d1e\u7cdf\u7cd5\u5f97\u591a\u3002\u9996\u5148\uff0c\u5982\u679c\u7b2c\u4e09\u65b9\u4e0d\u5e94\u8bbe\u7f6e\u6216\u5220\u9664SF_FIRMLINK\u6807\u5fd7\uff0c\u5219\u5e94\u5c06\u5176\u4e0e\u6807\u5fd7\u7684\u5b9a\u4e49\u4e00\u8d77\u8bb0\u5f55(\u5373\u5728/usr/include/sys/stat.h\u4e2d)\u3002\u5176\u6b21\uff0c\u5982\u679c\u60a8\u4e0d\u5141\u8bb8\u8bbe\u7f6eSF_FIRMLINK\u6807\u5fd7\uff0c\u90a3\u4e48\u7cfb\u7edf\u8c03\u7528\u5e94\u8be5\u8fd4\u56de-1\u5e76\u5c06errno\u8bbe\u7f6e\u4e3aEPERM-\u62a5\u544a\u6210\u529f\u548c\u5931\u8d25\u5e94\u53d7\u5230\u8c34\u8d23\u3002\u6700\u540e\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9--\u5728\u6ca1\u6709\u4efb\u4f55\u8b66\u544a\u7684\u60c5\u51b5\u4e0b\u5728\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e2d\u8fdb\u884c\u8fd9\u6837\u7684\u66f4\u6539\u662f\u5bf9\u4f9d\u8d56\u6587\u6863\u529f\u80fd\u7684\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u7684\u516c\u5f00\u654c\u610f\u3002\n\u6211\u60f3\u6211\u4eec\u4f1a\u5728\u672a\u6765\u7684\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e2d\u53d1\u73b0\u8fd9\u662f\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\u7cfb\u7edf\u7f3a\u9677\uff0c\u6e9c\u8fdb\u4e86\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff0c\u6216\u8005\u82f9\u679c\u516c\u53f8\u53d1\u73b0\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u63a5\u53d7\u7684\u505a\u6cd5\uff0c\u901a\u8fc7\u5728\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5e03\u5468\u671f\u7684\u4e2d\u95f4\u6084\u6084\u5730\u5220\u9664\u6587\u6863\u529f\u80fd\uff0c\u4ece\u800c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e0d\u77e5\u4e0d\u89c9\u5730\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002", "note_en": "Early last week we discovered an APFS filesystem bug in a beta of macOS 10.15.5. The  technical details of the bug are laid out below, but the short version is that we&#39;re no longer able to use our own file copier to establish an initial bootable backup of a macOS Catalina System volume.   To be very clear \u2013 existing backups are unaffected, and this has no effect on CCC&#39;s ability to preserve your data, nor any effect on the integrity of the filesystems on your startup disk or your backup disk. The impact of this bug is limited to the  initial creation of a  bootable backup.\n So that&#39;s a lemon... But hey, summer has arrived here in the northern hemisphere, so let&#39;s make some lemonade!\n  Last year at Apple&#39;s Developer Conference, Apple suggested that backup software should use Apple&#39;s &#34;Apple Software Restore&#34; (ASR) for cloning APFS volume groups. Initially I dismissed this \u2013 I shouldn&#39;t have to use Apple&#39;s black-box utility to do my job, I prefer to take full responsibility for my backups. Anticipating a world in which Apple continues to restrict access to APFS rather than grant it, though, we decided to invest a fair amount of time evaluating this functionality, and we&#39;ve been beta testing it for the last 8 months. I don&#39;t like to lean on ASR for general backups because  it has some shortcomings and doesn&#39;t give any insight into its internal activity (e.g. files copied, errors encountered), but in this very narrowly-defined case, we can leverage Apple&#39;s proprietary utility just to  establish bootable backups. We posted a beta last Sunday with new UI around this functionality, and we intend to continue producing bootable backups by leveraging ASR for the initial backup.\n I already have backups of 10.15.4, do I need to do anything special after updating to 10.15.5?\n No. If you established your backup on a previous version of Catalina, then your backup volume already has functional firmlinks and CCC will continue to update that volume just fine. Stick with CCC 5.1.17, and update to CCC 5.1.18 when it&#39;s available in the next week or so.\n I&#39;m trying to create a new backup of 10.15.5. How do I proceed to create a bootable backup?\n If you&#39;re running 10.15.5 and you&#39;re backing up a Catalina system volume to an empty disk, then you should replace your copy of CCC with  the CCC 5.1.18 beta. After you open CCC 5.1.18:\n  CCC will then present new UI that will guide you through the procedure of creating a bootable backup, or if you choose, a Data-only backup instead. The new functionality is documented here:\n  We anticipate a short beta period for CCC 5.1.18 \u2013 the bulk of the changes are in the new UI, the backend functionality has already been tested pretty rigorously. We&#39;ve sent the localization resources off to our translation team, and we anticipate posting a final release of 5.1.18 within the next couple weeks.\n   The  chflags() system call can no longer set the SF_FIRMLINK flag on a folder on an APFS volume. Rather than fail with an error code that we would have detected, it fails silently \u2013 it exits with a  success exit status, but silently fails to set the special flag. That&#39;s a bug in the APFS filesystem implementation of  chflags \u2013 if a system call doesn&#39;t do what you ask it to do, it&#39;s supposed to return an error code, not success. That&#39;s a fairly nasty bug too. Apple preaches that you should always check your error codes, and we do \u2013 religiously. This bug slipped past us for who knows how long because the system call exits with a  success error code.\n We don&#39;t need to set many of these flags, nor set them frequently \u2013 just on the first backup of the macOS system volume. It happens to be essential to  the functionality of an APFS volume group, though, so the failure to set these flags means that new full-system backups created on 10.15.5 and later won&#39;t be bootable, and it will  appear as if none of your data is on the destination (to be clear, though, all of the data is backed up). Kind of the opposite of what we&#39;re trying to do here. It&#39;s hard to find kind words to express my feelings towards Apple right now. Suffice it to say, though, I&#39;m extremely disappointed that Apple would introduce this kind of bug in a dot-release OS update. We&#39;ve seen 5 major updates to Catalina now, we should expect to see higher quality than this from an operating system.\n Last Monday (May 18) I filed a bug report with Apple on this subject (FB7706647). I also opened an incident with Apple&#39;s Developer Technical Support. I got a sympathetic ear, and someone to advocate my case with Apple Engineering \u2013 which I  greatly appreciate. However, it was for naught. The last 10.15.5 beta shipped last Wednesday (May 20) \u2013 without a fix. Then today, Apple shipped 10.15.5 with this nasty little bug, and here we are, creating  whole, but slightly less functional backups.\n Could this simply be a security fix \u2013 maybe Apple doesn&#39;t want third-parties to create firmlinks?\n If that&#39;s the case \u2013 if this is not actually a bug and is actually an intentional change by Apple, then I would argue that this is far worse than a bug. First, if third-parties should not set or remove the SF_FIRMLINK flag, then that should be documented alongside the flag&#39;s definition (i.e. in /usr/include/sys/stat.h). Second, if you&#39;re not going to allow the setting of the SF_FIRMLINK flag, then the system call should return -1 and set errno to EPERM \u2013 reporting success and failing is reprehensible. Last, and most important \u2013 making such a change in a production OS release with no warning is openly hostile to third-party developers who were relying on the  documented functionality.\n I suppose we&#39;ll find out in future OS releases whether this was a simple filesystem bug that slipped into a production OS release, or if Apple finds it to be an acceptable practice to blindside developers by silently removing documented functionality in the middle of a production OS release cycle.", "posttime": "2020-05-28 04:55:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f15\u5bfc,bootable,\u82f9\u679c", "title": "MacOS 10.15.5\u4e2d\u7684\u9519\u8bef\u4f1a\u5f71\u54cd\u53ef\u5f15\u5bfc\u5907\u4efd", "title_en": "A bug in macOS 10.15.5 impacts bootable backups", "transed": 1, "url": "https://bombich.com/blog/2020/05/27/bug-in-macos-10.15.5-impacts-bootable-backups-weve-got-you-covered", "via": "", "real_tags": ["\u5f15\u5bfc", "bootable", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003983, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7edc\u5e76\u4e0d\u50cf\u7528\u8c37\u6b4c\u641c\u7d22\u65f6\u90a3\u6837\u6d41\u7545\u3002\u4f46\u6709\u4e9b\u7ebf\u7a0b\u7684\u2026\u7a0b\u5ea6\u66f4\u9ad8\u3002\u7c98\u6027\u7684\uff0c\u8bf1\u6355\u66f4\u591a\u7684\u773c\u775b\u5e76\u4e0d\u610f\u5473\u7740\u90a3\u4e9b\u7ebf\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ebf\u3002\u800c\u4e14\u4e0d\u786e\u5b9a\u90a3\u4e9b\u7c98\u6027\u7684\u7ebf\u662f\u4e0d\u662f\u6211\u4eec\u9700\u8981\u7684\u7ebf\u3002\n\u522b\u8bef\u4f1a\u6211\u7684\u610f\u601d\u3002\u5e76\u4e0d\u662f\u6240\u6709\u901a\u5411\u5927\u578b\u8282\u70b9\u7684\u7ebf\u7a0b\u90fd\u662f\u574f\u7684\uff0c\u5c3d\u7ba1\u5b83\u4eec\u53ef\u80fd\u662f\u7cbe\u7b80\u7684\u3002\u76f8\u53cd\u5730\u3002\u7cbe\u7b80\u7684\u7ad9\u70b9\u901a\u5e38\u662f\u6709\u6548\u7684\uff0c\u5e76\u4e14\u5305\u542b\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002\n\u4f46\u8fd9\u7bc7\u5e16\u5b50\u4e0d\u662f\u5173\u4e8e\u8fd9\u6837\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u5f97\u5230\u4e86\u8db3\u591f\u7684\u5173\u6ce8\u3002\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u7f51\u7edc\u4e00\u4e9b\u5947\u602a\u89d2\u843d\u7684\u5e16\u5b50\u3002\u6709\u65f6\u9690\u85cf\uff0c\u4f46\u73cd\u73e0-\u7ed9\u6b63\u786e\u7684\u773c\u775b\u3002\n\u5982\u679c\u4f60\u7684\u641c\u7d22\u4e0d\u662f\u975e\u5e38\u660e\u786e\u7684\u8bdd\uff0c\u4f60\u4e0d\u4f1a\u901a\u8fc7\u8c37\u6b4c\u641c\u7d22\u8fdb\u5165\u8fd9\u6837\u7684\u7f51\u7ad9\u3002\u4f60\u662f\u901a\u8fc7\u7f51\u7edc\u7684\u4f20\u95fb\u3001\u4e2a\u4eba\u63a8\u8350\u3001\u6709\u4eba\u6545\u610f\u653e\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u6216\u8bba\u575b\u4e0a\u7684\u94fe\u63a5\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u7684\u3002\u4e0e\u6267\u884c\u641c\u7d22\u65f6\u751f\u6210\u7684\u94fe\u63a5\u76f8\u53cd\u3002\n\u4e0d\u8fc7\u8981\u95ee\u95ee\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u627e\u5230\u4e00\u4e9b\u7f51\u7ad9\uff0c\u5374\u627e\u4e0d\u5230\u5176\u4ed6\u7f51\u7ad9\u5462\uff1f\u5f53\u6211\u4eec\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u67d0\u4ef6\u4e1c\u897f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u7684\u524d10\u540d\u7f51\u7ad9\u662f\u6211\u4eec\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u7b54\u6848\u5417\uff1f\u4e5f\u8bb8\uff0c\u4e5f\u8bb8\u4e0d\u662f\u3002\n\u5f53\u6211\u627e\u5230\u83b1\u683c\u6c83\u5c14\u7279\u7684\u8def\u65f6\uff0c\u6211\u5f88\u60ca\u8bb6\uff0c\u4ed6\u7684\u7535\u5b50\u97f3\u4e50\u5728\u4e00\u4e9b\u5708\u5b50\u91cc\u5f88\u51fa\u540d\u3002Legowelt\u8fd8\u6709\u4e00\u4e2a\u7f8e\u672f\u9986\uff0c\u91cc\u9762\u6709\u5f88\u9177\u7684\u6cb9\u753b\uff0c\u6df7\u97f3\u5e26\uff0c\u5e76\u4e3b\u529e\u4e86\u73b0\u5728\u5df2\u7ecf\u6b7b\u4ea1\u7684\u5f71\u5b50\u72fc\u8d5b\u535a\u670b\u514b\u6742\u5fd7\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u7684\u4e1c\u897f\u3002\n\u5982\u679c\u4e0d\u662f\u6211\u4fe1\u4efb\u7684\u4f5c\u5bb6\u63a8\u8350\u7684(\u6709\u94fe\u63a5\u7684)\u201c\u683c\u91cc\u83ab\u5c14\u62a5\u201d\uff0c\u6211\u4f1a\u627e\u5230\u5b83\u5417\uff1f\u5982\u679c\u6211\u505a\u4e86\uff0c\u6211\u4f1a\u56db\u5904\u6d4f\u89c8\u5417\uff1f\u5f88\u53ef\u80fd\u4e0d\u4f1a\u3002\n\u4ec0\u4e48\u4e1c\u897f\u80fd\u8ba9\u4eba\u8d4f\u5fc3\u60a6\u76ee\uff1f\u4f3c\u4e4e\u662f\u4e5d\u5341\u5e74\u4ee3\u7684\u4e00\u9875\u3002\u5b83\u770b\u8d77\u6765\u5c31\u662f\u4e0d\u4e13\u4e1a\u3002\u4f46\u78b0\u5de7\u7684\u662f\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662fUnix\u76f8\u5173\u6750\u6599\u3001sed\u3001\u5b89\u5168\u65b9\u9762\u7684\u5b9d\u85cf\uff0c\u800c\u8fd9\u7c7b\u548c\u6700\u540e\u4e00\u7bc7\u5e16\u5b50\u662f\u4ece2019\u5e74\u5f00\u59cb\u7684\u3002\n\u5982\u679c\u6211\u4eec\u4ece\u7f8e\u5b66\u7684\u89d2\u5ea6\u6765\u8bc4\u5224\u8fd9\u4e9b\u7f51\u7ad9\uff0c\u90a3\u5c31\u4e0d\u516c\u5e73\u4e86\u3002\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5ffd\u89c6\u5b83\u4eec\u5c06\u662f\u9519\u8bef\u7684\u3002\nLegowelt\u53ef\u80fd\u4f1a\u56e0\u5176\u590d\u53e4\u7684\u6c1b\u56f4\u800c\u88ab\u8ba4\u4e3a\u662f\u65f6\u9ae6\u7684\uff0c\u4f46\u6211\u60f3\u77e5\u9053\u5b83\u662f\u4e0d\u662f\u5728\u5236\u4f5c\u65f6\u5c31\u662f\u6545\u610f\u7684\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u6211\u559c\u6b22Grymoire\u548cLegowelt\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u7f8e\u5b66\u3002\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u6211\u770b\u6765\uff0c\u4ed6\u4eec\u66fe\u7ecf\u505a\u8fc7\u67d0\u79cd\u8bbe\u8ba1\uff0c\u5c31\u662f\u8fd9\u6837\u3002\u4ed6\u4eec\u7684\u91cd\u70b9\u4e00\u76f4\u662f\u5236\u4f5c\u6709\u4ef7\u503c\u7684\u5185\u5bb9\u3002\u8ba9\u8fd9\u4e2a\u4e16\u754c\u548c\u4eba\u6c11\u8fd0\u8f6c\u8d77\u6765\u3002\n\u4ec0\u4e48\u662f\u8d28\u91cf\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u4f46\u662f\u5f53\u6211\u4eb2\u8eab\u7ecf\u5386\u7684\u65f6\u5019\u6211\u5c31\u77e5\u9053\u4e86\u3002\u4f60\u4e5f\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u8d28\u91cf\u3002\u5f53\u6211\u4eec\u542c\u5230\uff0c\u5f53\u6211\u4eec\u770b\u5230\uff0c\u5f53\u6211\u4eec\u54c1\u5c1d\uff0c\u611f\u53d7\uff0c\u751a\u81f3\u55c5\u5230\u65f6\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u3002\u6211\u4eec\u5bf9\u4ec0\u4e48\u6709\u8d28\u91cf\u7684\u770b\u6cd5\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u611f\u77e5\u8d28\u91cf\u7684\u7ecf\u9a8c\u662f\u5982\u6b64\u666e\u904d\u3002\n\u590d\u53e4\u7684\u4e1c\u897f\u53ef\u4ee5\u5f88\u53ef\u7231\uff0c\u4f46\u4f60\u4e0d\u559c\u6b22\u964c\u751f\u7684\u4e1c\u897f(\u5982\u679c\u4f60\u559c\u6b22\u7684\u8bdd)\uff0c\u56e0\u4e3a\u5b83\u6ecb\u517b\u4e86\u4f60\u5bf9\u590d\u53e4\u7684\u6e34\u671b\uff0c\u56e0\u4e3a\u4f60\u6000\u65e7\u3002\u5982\u679c\u4f60\uff0c\u5c31\u50cf\u6211\u4e00\u6837\uff0c\u5c0f\u65f6\u5019\u78b0\u5de7\u73a9RPG\uff0c\u73a9\u7535\u8111\u6e38\u620f\uff0c\u9a91\u81ea\u884c\u8f66\u5230\u5904\u770b\uff0c\u4f60\u770b\u7684\u65f6\u5019\u4f1a\u89c9\u5f97\u6000\u65e7\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u7b2c\u4e00\u5b63\u95ea\u8000\u5149\u8292\u7684\u539f\u56e0\u3002\u5b83\u95ea\u95ea\u53d1\u5149\uff0c\u56e0\u4e3a\u5b83\u5f88\u597d\u5403\u3002\n\u4e5f\u8bb8\u8fd9\u662f\u4e2a\u7cdf\u7cd5\u7684\u5bf9\u6bd4\u3002\u6211\u8ba4\u4e3a\uff0c\u5947\u602a\u7684\u4e1c\u897f\u975e\u5e38\u523b\u610f\u5730\u4f7f\u7528\u610f\u8c61\u3001\u6bd4\u55bb\u548c\u97f3\u4e50\u6765\u4ea7\u751f\u67d0\u79cd\u611f\u89c9\u3002\u6211\u5728\u683c\u91cc\u83ab\u5c14\u548c\u83b1\u683c\u6c83\u5c14\u7279\u7684\u7f8e\u5b66\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u523b\u610f\u7684\u4e1c\u897f\uff0c\u4f46\u5f53\u6211\u8bbf\u95ee\u4ed6\u4eec\u7684\u4e3b\u9875\u65f6\uff0c\u6211\u786e\u5b9e\u4f53\u9a8c\u5230\u4e86\u6781\u597d\u7684\u8d28\u91cf\u3002", "note_en": "The Web is not as streamlined as when searching with Google would have it. But some threads being more\u2026 sticky, and snares more eyes does not mean those threads are the threads we want. And it is not sure that those sticky threads are the threads we need.\n Don&#39;t get me wrong. Not all threads leading to large nodes, streamlined as they may be, are bad. On the contrary. Streamlined sites are often effective and contain valuable information.\n But this post is not about such sites, they get enough attention as it. This is post is about some odd corners of the Web. Sometimes hidden, yet pearls - for the right eyes.\n You won&#39;t get to such sites by googling, if your search is not remarkably explicit. You get there by the hearsay of the Web, a personal recommendation, a link someone deliberately puts on their site or in a forum. The opposite of generated links when doing a search.\n  Ask though, why we find some sites while we don&#39;t find others? Are the streamlined top 10 sites we get when googling something the best &#39;answers&#39; to the &#39;question&#39; we had? Maybe, maybe not.\n I was amazed when I found my way to  Legowelt, famous for his electronic music in some circles. Legowelt also has an art gallery with cool paintings, mixtapes, and host the now-dead The Shadow Wolf cyberpunk magazine, and much else.\n If not writers I trust had recommended (with a link)  The Grymoire, would I have found it? And if I did, would I browse around? Most likely not.\n What meets the eye? A page seemingly from the nineties. It just does not look &#39;professional&#39;. But as so happens, it is considered to be a treasure on Unix related material, sed, security, and the such and the last post is from 2019.\n If we judge such sites from aesthetics, we would not be fair. But most of all, we would make a mistake to ignore them.\n Legowelt may be experienced as hipsteresque with its retro vibes, but I wonder if this was deliberate when it was made? I don&#39;t know. I like The Grymoire and Legowelt because of the content, not because of their aesthetics.\n In both cases, it seems to me they once did some kind of design, and that was that. Their focus has been to produce valuable content. To make the world and people tick.\n What is quality? I don&#39;t know. But I know it when I experience it. And so do you, we all know quality. We know it when we hear, when we see, when we taste, feel, and even smell. Our views on what has quality may vary, but the experience of sensing quality is as such universal.\n  Things retro can be cute, but you don&#39;t like Stranger Things (if you do) because it nourishes your crave for things retro, because of nostalgia. If you, just like me, happend to play RPGs, play computer games, and bike around as a kid you feel nostalgia when watching, but this is not what makes the first season sparkle. It sparkles because it is good.\n A bad comparison perhaps. Stranger Things very deliberately uses, I think, imagery, references, and music to produce certain feelings. And I see nothing deliberate in the aesthetics of The Grymoire and Legowelt, but I do experience splendid quality when visiting their homepages.", "posttime": "2020-05-28 04:55:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7edc,pearls,\u7f51\u7ad9", "title": "\u4e24\u9897\u7f51\u7edc\u660e\u73e0", "title_en": "Two Pearls of the Web", "transed": 1, "url": "https://herebeseaswines.net/essays/2020-05-27-two-pearls-of-the-web", "via": "", "real_tags": ["\u7f51\u7edc", "pearls", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003981, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u547d\u4ee4\u884c\u754c\u9762\u7684\u8bb8\u591a\u4f18\u70b9\u53ef\u4ee5\u5f52\u56e0\u4e8e\u5b83\u4eec\u5c06\u7528\u6237\u4ea4\u4e92\u5177\u4f53\u5316\u7684\u4e8b\u5b9e\uff1a\u4ea4\u4e92\u672c\u8eab\u88ab\u5236\u4f5c\u6210\u4e00\u4e9b\u2026", "note_en": "Many of the advantages of Command Line Interfaces can be attributed to the fact that they reify the user interaction: the interaction itself is made into som...", "posttime": "2020-05-28 04:19:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5177\u4f53\u5316,reified,\u4ea4\u4e92", "title": "CLI\u662f\u5177\u4f53\u5316\u7684UI(2017)", "title_en": "CLIs are reified UIs (2017)", "transed": 1, "url": "https://www.expressionsofchange.org/reification-of-interaction/", "via": "", "real_tags": ["\u5177\u4f53\u5316", "reified", "\u4ea4\u4e92"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003980, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce!\u3002\u968f\u5fc3\u6240\u6b32\u5730\u6d4f\u89c8\uff0c\u60a8\u53ef\u4ee5\u968f\u610f\u6dfb\u52a0\u4e00\u4e9b\u5f15\u8bed\u3002\u5982\u679c\u60a8\u559c\u6b22\u6216\u4e0d\u559c\u6b22\u5f15\u7528\uff0c\u8bf7\u4f7f\u7528+\u548c-\u94fe\u63a5\u6295\u7968\u3002\u5982\u679c\u60a8\u89c9\u5f97\u62a5\u4ef7\u6839\u672c\u4e0d\u503c\u5f97\u653e\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u8bf7\u5355\u51fb\u5176\u65c1\u8fb9\u7684[X]\u94fe\u63a5\uff1b\u867d\u7136\u62a5\u4ef7\u4e0d\u4f1a\u7acb\u5373\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\uff0c\u4f46\u4f1a\u91cd\u65b0\u63d0\u4ea4\u4ee5\u4f9b\u5ba1\u67e5\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5c06\u5176\u5220\u9664\u3002", "note_en": "Welcome! Browse away to your amusement, and feel free to add some quotes yourself.\t\t If you like or dislike a quote, vote with the + and - links. If you feel that the quote doesn&#39;t deserve to be in the database at all, click its [X] link next to it; while the quote will not be removed from the database immediately, it will be resubmitted for review, and it is possible that it will be removed.", "posttime": "2020-05-28 04:19:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,irc,\u62a5\u4ef7", "title": "Bash IRC\u62a5\u4ef7\u6570\u636e\u5e93", "title_en": "Bash IRC Quote Database", "transed": 1, "url": "http://bash.org", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "irc", "\u62a5\u4ef7"]}, {"category": "", "categoryclass": "", "imagename": "f84888ccb991bd3c17338478b60adeda.jpg", "infoid": 1003979, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u516c\u53f8\u7684\u76ee\u6807\u662f\uff0c5\u670827\u65e5\u661f\u671f\u4e09\uff0c\u730e\u9e709\u53f7\u4ece\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u7684\u53d1\u5c04\u7efc\u5408\u4f5339A(LC-39A)\u53d1\u5c04\u201c\u673a\u7ec4\u9f99\u201d\u7b2c\u4e8c\u6b21\u6f14\u793a(Demo-2)\u4efb\u52a1\u3002", "note_en": "SpaceX is targeting Wednesday, May 27 for Falcon 9\u2019s launch of Crew Dragon\u2019s second demonstration (Demo-2) mission from Launch Complex 39A (LC-39A) at NASA\u2019s...", "posttime": "2020-05-28 04:18:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "crew,\u53d1\u5c04", "title": "SpaceX Crew\u6f14\u793a-2", "title_en": "SpaceX Crew Demo-2", "transed": 1, "url": "https://youtu.be/rjb9FdVdX5I", "via": "", "real_tags": ["crew", "\u53d1\u5c04"]}, {"category": "", "categoryclass": "", "imagename": "f84888ccb991bd3c17338478b60adeda.jpg", "infoid": 1003978, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u516c\u53f8\u7684\u76ee\u6807\u662f\uff0c5\u670827\u65e5\u661f\u671f\u4e09\uff0c\u730e\u9e709\u53f7\u4ece\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40(NASA)\u7684\u53d1\u5c04\u7efc\u5408\u4f5339A(LC-39A)\u53d1\u5c04\u201c\u673a\u7ec4\u9f99\u201d\u7b2c\u4e8c\u6b21\u6f14\u793a(Demo-2)\u4efb\u52a1\u3002", "note_en": "SpaceX is targeting Wednesday, May 27 for Falcon 9\u2019s launch of Crew Dragon\u2019s second demonstration (Demo-2) mission from Launch Complex 39A (LC-39A) at NASA\u2019s...", "posttime": "2020-05-28 04:18:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "crew,\u53d1\u5c04", "title": "SpaceX Crew\u6f14\u793a-2(\u5b9e\u51b5\u6d41)", "title_en": "SpaceX Crew Demo-2 (Livestream)", "transed": 1, "url": "https://www.youtube.com/watch?v=rjb9FdVdX5I", "via": "", "real_tags": ["crew", "\u53d1\u5c04"]}, {"category": "", "categoryclass": "", "imagename": "4d4b5f073e8196649b6a3f9cd1b67fc4.png", "infoid": 1003977, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "9\u67081\u65e5\u6e05\u6668\u30021995\u5e7411\u65e5\uff0c\u4f0a\u4e3d\u838e\u767d\u5973\u738b2\u53f7\u90ae\u8f6e\u5728\u4ece\u5357\u5b89\u666e\u987f\u524d\u5f80\u7ebd\u7ea6\u7684\u9014\u4e2d\uff0c\u5728\u7ebd\u82ac\u5170\u6d77\u5cb8\u5916\u7684\u67d0\u4e2a\u5730\u65b9\u53d7\u5230\u98d3\u98ce\u8def\u6613\u65af\u7684\u5c3e\u90e8\u88ad\u51fb\u3002\u4eff\u4f5b\u611f\u89c9\u5230\u5b83\u5373\u5c06\u6d88\u4ea1\uff0c\u8def\u6613\u65af\u6700\u540e\u4e00\u6b21\u5174\u594b\u8d77\u6765\uff0c\u62bd\u6410\u7740\u590d\u6d3b\uff0c\u5c06\u5317\u5927\u897f\u6d0b\u6380\u8d77\u4e86\u65f6\u901f130\u82f1\u91cc\u7684\u72c2\u98ce\u548c40\u82f1\u5c3a\u9ad8\u7684\u5de8\u6d6a\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u6ca1\u6709\u5f15\u8d77\u8239\u957f\u7f57\u7eb3\u5fb7\u00b7\u6c83\u91cc\u514b(Ronald Warwick)\u4e0d\u5fc5\u8981\u7684\u62c5\u5fe7\uff0c\u4ed6\u662f\u4e00\u540d\u670930\u5e74\u822a\u6d77\u7ecf\u9a8c\u7684\u8001\u624b\uff0c\u975e\u5e38\u719f\u6089\u6ce2\u6d9b\u6c79\u6d8c\u7684\u5927\u6d77\u3002\u8def\u6613\u65af\u5e76\u4e0d\u51fa\u4eba\u610f\u6599\uff0c\u81ea\u4ece\u79bb\u5f00\u82f1\u56fd\u4ee5\u6765\uff0c\u8fd9\u8258\u8239\u4e00\u76f4\u5728\u7a33\u6b65\u8ddf\u8e2a\u98ce\u66b4\u7684\u8def\u5f84\u3002\u8fd9\u4f4d\u9000\u5f79\u51c6\u5c06\u5728\u82f1\u56fd\u8428\u9ed8\u585e\u7279\u90e1\u7684\u5bb6\u4e2d\u56de\u5fc6\u9053\uff1a\u201c\u8fd9\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u516c\u5e73\u7684\u7ade\u4e89\uff0c\u6211\u4eec\u662f\u4e00\u8258\u6a2a\u8de8\u5927\u897f\u6d0b\u7684\u73ed\u8f6e\u3002\u201d\n\u665a\u9910\u65f6\uff0c\u6c83\u91cc\u514b\u544a\u8beb\u8239\u4e0a\u7684\u4e58\u5ba2\uff0c\u591c\u95f4\u7684\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d8\u5f97\u6709\u70b9\u8270\u96be\uff0c\u5e76\u786e\u4fdd\u8239\u8231\u5185\u4efb\u4f55\u6563\u843d\u7684\u8d22\u7269\u5b89\u5168\u3002\u7136\u540e\uff0c\u4ed6\u505a\u4e86\u4efb\u4f55\u8239\u957f\u5728\u6ce2\u6d9b\u6c79\u6d8c\u7684\u6d77\u9762\u4e0a\u90fd\u4f1a\u505a\u7684\u4e8b\u60c5\u3002\u968f\u7740\u8239\u9a76\u5411\u6d77\u6d6a\uff0c\u6c83\u91cc\u514b\u628a\u5b83\u7684\u901f\u5ea6\u964d\u5230\u4e86\u51e0\u8282\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u6447\u6446\u201d\uff0c\u610f\u601d\u662f\u5c3d\u53ef\u80fd\u8f7b\u67d4\u5730\u6e21\u8fc7\u6d77\u6d6a\uff0c\u540c\u65f6\u4fdd\u6301\u6070\u5230\u597d\u5904\u7684\u901f\u5ea6\uff0c\u4ee5\u4fdd\u6301\u5bf9\u65b9\u5411\u7684\u63a7\u5236\u3002\u5728\u79bb\u9a7e\u9a76\u53f0\u5f88\u8fdc\u7684\u5730\u65b9\uff0c\u72c2\u98ce\u547c\u5578\uff0c\u97ad\u6253\u7740\u88c5\u7532\u7a97\u6237\uff0c\u51e0\u540d\u4e58\u5ba2\u5728\u4e00\u5bb6\u9152\u5427\u91cc\u4e0d\u7ecf\u610f\u5730\u5b88\u591c\u3002\u5728\u8fd9\u8258\u8239\u7684\u9a7e\u9a76\u53f0\u4e0b\u65b9\uff0c\u98ce\u547c\u5578\u800c\u8fc7\uff0c\u97ad\u6253\u7740\u88c5\u7532\u7a97\u6237\uff0c\u51e0\u540d\u4e58\u5ba2\u5728\u9152\u5427\u91cc\u4e0d\u7ecf\u610f\u5730\u5b88\u591c\u3002\n\u51cc\u66682\u70b9\u521a\u8fc7\uff0c\u6c83\u91cc\u514b\u548c\u4ed6\u7684\u8b66\u5b98\u4eec\u7a81\u7136\u770b\u5230\u9644\u8fd1\u6709\u4e00\u4e2a\u6c79\u6d8c\u7684\u6c34\u602a\u548c\u62bd\u6410\u7684\u767d\u8272\u6ce1\u6cab\u3002\u201c\u5982\u679c\u4f60\u7ad9\u5728QE2\u7684\u6865\u4e0a\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f60\u7684\u773c\u775b\u9ad8\u5ea6\u5728\u6d77\u5e73\u9762\u4ee5\u4e0a90\u82f1\u5c3a\u3002\u201d\u4ece\u88ab\u96e8\u6c34\u6d78\u900f\u7684\u9ed1\u6697\u4e2d\u4ed6\u4eec\u6240\u80fd\u770b\u5230\u7684\uff0c\u9690\u7ea6\u53ef\u89c1\u7684\u6ce2\u6d6a\u7684\u6ce2\u5cf0\u548c\u6865\u672c\u8eab\u4e00\u6837\u9ad8\u3002\u6c83\u91cc\u514b\u8bf4\uff0c\u4ed6\u4ee5\u524d\u4ece\u672a\u5728\u6d77\u6d0b\u4e2d\u9047\u5230\u8fc7\u8fd9\u4e48\u5927\u7684\u4e1c\u897f\uff0c\u4ed6\u8bf4\uff0c\u5c31\u50cf\u4ed6\u4eec\u6b63\u9a76\u5411\u201c\u591a\u4f5b\u7684\u767d\u8272\u60ac\u5d16\u201d\u3002\n\u5927\u7ea6\u4e00\u5206\u949f\u540e\uff0c\u6d77\u6d6a\u649e\u51fb\u4e86QE2\u7684\u524d\u7532\u677f\u3002\u201c\u6211\u4eec\u6ca1\u6709\u505a\u5f97\u592a\u8fc7\u5206\uff0c\u201d\u6c83\u91cc\u514b\u8bf4\u3002\u201c\u6211\u4eec\u5b9e\u9645\u4e0a\u7ecf\u5386\u4e86\u8fd9\u4e00\u5207\u3002\u201d\u4e00\u8fde\u4e32\u7684\u6296\u52a8\u51fb\u7a7f\u4e86\u8fd9\u8258\u8239\u3002\u6c34\u5899\u5012\u584c\u5728\u8239\u7684\u7532\u677f\u4e0a\uff0c\u94a2\u677f\u5f2f\u66f2\u4e86\u7ea618\u82f1\u5bf8\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e00\u5207\u90fd\u5728\u8fd9\u8258\u8239\u7684\u64cd\u4f5c\u8303\u56f4\u5185\u3002\u201c\u6211\u4eec\u6ca1\u6709\u88ab\u649e\u5012\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5927\u591a\u6570\u4e58\u5ba2\u90fd\u5728\u5e8a\u4e0a\u3002\u201d\n\u4f46\u8fd9\u4e00\u6ce2\u7684\u53cd\u5e38\u73b0\u8c61\u4ecd\u7136\u56f0\u6270\u7740\u6c83\u91cc\u514b\u3002\u5bf9\u4e8e\u4e00\u4f4d\u5317\u6d77\u8001\u624b\u6765\u8bf4\uff0c40\u82f1\u5c3a\u9ad8\u7684\u6d77\u6d6a\uff0c\u8fd9\u79cd\u4f1a\u8ba9\u6211\u4eec\u5927\u591a\u6570\u4eba\u611f\u5230\u6050\u60e7\u7684\u6d77\u6d6a\uff0c\u5e76\u4e0d\u662f\u4ec0\u4e48\u4e0d\u5bfb\u5e38\u7684\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u7a81\u7136\u5192\u51fa\u7684\u4e00\u80a1\u6d6a\u662f\u5176\u4ed6\u6d6a\u7684\u4e24\u500d\u591a\uff0c\u8fd9\u662f\u4e0d\u5bfb\u5e38\u7684\u3002\u6c83\u91cc\u514b\u9047\u5230\u4e86\u4e00\u80a1\u65e0\u8d56\u7684\u6d77\u6d6a\u3002\n\u901a\u4fd7\u5730\u8bf4\uff0c\u201c\u65e0\u8d56\u6d6a\u201d\u6307\u7684\u662f\u4efb\u4f55\u5f02\u5e38\u5927\u7684\u6d6a\u3002\u4f46\u662f\uff0c\u6d41\u6d6a\u5e76\u4e0d\u4e00\u5b9a\u8981\u5728\u7edd\u5bf9\u89c4\u6a21\u4e0a\u5f88\u5927\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u4e0e\u4e00\u573a\u5927\u98ce\u66b4\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u5fb7\u56fdGeesthacht\u6d77\u5cb8\u7814\u7a76\u6240\u6240\u957fBurkard Baschek\u5c06\u5176\u5b9a\u4e49\u4e3a\u7edf\u8ba1\u4e0a\u6781\u7aef\u7684\u4efb\u4f55\u6ce2\u6d6a\u3002\u201c(\u65e0\u8d56\u6ce2)\u81f3\u5c11\u662f\u6240\u8c13\u7684\u663e\u8457\u6ce2\u9ad8\u7684\u4e24\u500d\uff0c\u201d\u4ed6\u8bf4\u3002\u6709\u6548\u6d6a\u9ad8\u88ab\u5b9a\u4e49\u4e3a\u4efb\u4f55\u7ed9\u5b9a\u65f6\u523b\u6700\u5927\u4e09\u5206\u4e4b\u4e00\u7684\u6d6a\u7684\u5e73\u5747\u503c\uff0c\u201c\u5982\u679c\u4f60\u5728\u90a3\u91cc\u89c2\u5bdf\u6d77\u51b5\uff0c\u4f60\u4f1a\u4eb2\u773c\u770b\u5230\u7684\u6d6a\u3002\u201d\n\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u80fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u4e00\u4e2a\u6d41\u6c13\u6ce2\uff0c\u5e76\u4e14\u6ca1\u6709\u6ce8\u610f\u5230\u3002\u591a\u4e48?\u3002\u201c\u5982\u679c\u4f60\u5728\u5e73\u9759\u7684\u6761\u4ef6\u4e0b\u5916\u51fa\uff0c\u201d\u5df4\u65af\u5207\u514b\u8bf4\uff0c\u201c\u6d77\u6d6a\u6709\u4e00\u7c73\u9ad8\uff0c\u7a81\u7136\u4f60\u7ecf\u5386\u4e86\u4e24\u7c73\u9ad8\u7684\u6d77\u6d6a\uff0c\u90a3\u53c8\u600e\u4e48\u6837\uff1f\u201d\u4e8b\u5b9e\u4e0a\uff0c\u5df4\u820d\u514b\u8bf4\uff0c\u5728\u4e16\u754c\u6d77\u6d0b\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6bcf\u5929\u6709\u4e00\u4e2a\u6d77\u6d6a\u662f\u4e00\u79cd\u65e0\u8d56\u6d77\u6d6a\u3002\u5728\u52a0\u5dde\u5927\u5b66\u6d1b\u6749\u77f6\u5206\u6821(UCLA)\u4efb\u804c\u671f\u95f4\uff0c\u4ed6\u5206\u6790\u4e86\u7f8e\u56fd\u897f\u6d77\u5cb8\u591a\u4e2a\u6d6e\u6807\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u63a8\u7b97\u5230\u5168\u7403\uff0c\u4f30\u8ba1\u5728\u5317\u5927\u897f\u6d0b\u62d6\u7f51\u7684\u8239\u53ea(\u5982QE2)\u201c\u572825\u5e74\u7684\u4f7f\u7528\u5bff\u547d\u5185\u5c06\u9047\u523020-30\u6b21\u8fd9\u6837\u7684\u65e0\u8d56\u6d77\u6d6a\u201d\uff0c\u6216\u8005\u8bf4\u5927\u7ea6\u4e00\u5e74\u4e00\u6b21\u3002\n\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u6d41\u6c13\u6d77\u6d6a\u662f\u6570\u5b66\u5bf9\u8c61\uff0c\u8fd9\u610f\u5473\u7740\u6c34\u624b\uff0c\u7136\u540e\u662f\u79d1\u5b66\u5bb6\uff0c\u5bf9\u5b83\u4eec\u7684\u672c\u8d28\u7406\u89e3\u5f97\u5f88\u6162\u300219\u4e16\u7eaa\u672b\uff0c\u6c34\u624b\u7684\u77e5\u8bc6\u548c\u79d1\u5b66\u4e4b\u95f4\u7684\u754c\u9650\u53ef\u80fd\u4f1a\u50cf\u96fe\u6c14\u7b3c\u7f69\u7684\u5730\u5e73\u7ebf\u4e00\u6837\u6a21\u7cca\uff0c\u6709\u4fe1\u8a89\u7684\u6742\u5fd7\u7ecf\u5e38\u62a5\u9053\u201c\u6d77\u6d0b\u602a\u517d\u201d\u7684\u76ee\u51fb\u4e8b\u4ef6\u3002\u7136\u800c\uff0c\u5230\u4e8620\u4e16\u7eaa\u4e2d\u53f6\uff0c\u8fd9\u4e9b\u602a\u7269\u4e2d\u7684\u5927\u591a\u6570\u5df2\u7ecf\u88ab\u9a71\u6563\u6216\u89e3\u91ca-\u4f46\u4e0d\u662f\u6d41\u6c13\u6d77\u6d6a\uff0c\u76f4\u5230\u4eca\u5929\uff0c\u5b83\u4eec\u4ecd\u7136\u88ab\u9519\u8bef\u5730\u8bc6\u522b\u548c\u4e0d\u5b8c\u5168\u7406\u89e3\u3002\u5373\u4f7f\u662f\u6587\u660e\u4e2d\u6700\u8457\u540d\u7684\u6d77\u6d6a\u4e4b\u4e00\uff0c\u5317\u4e95\u7684\u795e\u5948\u5ddd\u9644\u8fd1\u7684\u5927\u6d6a\uff0c\u4e5f\u7ecf\u5e38\u88ab\u8bef\u89e3\u4e3a\u6d77\u5578-\u6728\u523b\u751a\u81f3\u88ab\u7528\u4f5c\u8054\u5408\u56fd\u6559\u79d1\u6587\u7ec4\u7ec7\u6d77\u5578\u8b66\u62a5\u6807\u5fd7\u7684\u8c61\u5f81-\u800c\u6b63\u5982\u51e0\u4f4d\u5b66\u8005\u6240\u8bf4\uff0c\u5b83\u5b9e\u9645\u4e0a\u66f4\u6709\u53ef\u80fd\u662f\u6d41\u6c13\u6d77\u6d6a\u30021\uff0c2\n\u6d41\u6d6a\u79d1\u5b66\u572820\u4e16\u7eaa60\u5e74\u4ee3\u521d\u5f00\u59cb\u5f62\u6210\uff0c\u4e0d\u662f\u5728\u6d77\u6d0b\u4e2d\uff0c\u800c\u662f\u5728\u5251\u6865\u5927\u5b66\u5de5\u7a0b\u7cfb\u7684\u4e00\u4e2a\u6ce2\u6d6a\u6c34\u69fd\u4e2d-\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5f88\u957f\u5f88\u6d45\u7684\u6c34\u69fd\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u7528\u6765\u4ea7\u751f\u4e0d\u540c\u9891\u7387\u7684\u6d77\u6d6a\u7684\u201c\u6868\u201d\u3002\u5728\u90a3\u91cc\uff0c\u7269\u7406\u5b66\u5bb6\u548c\u6d41\u4f53\u529b\u5b66\u4e13\u5bb6T\u00b7\u5e03\u9c81\u514b\u00b7\u672c\u6770\u660e(T.Brooke Benjamin)\u5728\u7814\u7a76\u751f\u5409\u59c6\u00b7\u8d39\u5c14(Jim Feir)\u7684\u5e2e\u52a9\u4e0b\uff0c\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e9b\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u88ab\u8ba4\u4e3a\u7684\u4e1c\u897f\u65f6\u9047\u5230\u4e86\u56f0\u96be\uff1a\u6240\u8c13\u7684\u201c\u65af\u6258\u514b\u65af\u6ce2\u201d\u7684\u7a33\u5b9a\u6027\uff0c\u4e5f\u5c31\u662f\u753119\u4e16\u7eaa\u5251\u6865\u5927\u5b66(Cambridge University)\u8457\u540d\u6570\u5b66\u5bb6\u4e54\u6cbb\u00b7\u52a0\u5e03\u91cc\u57c3\u5c14\u00b7\u65af\u6258\u514b\u65af(George Gabriel Stokes)\u63d0\u51fa\u7684\u90a3\u79cd\u6d41\u4f53\u52a8\u529b\u5b66\u7684Ur\u6ce2\u6216\u539f\u578b\u6ce2\u7684\u7406\u8bba\u3002\u65af\u6258\u514b\u65af\u53d7\u5230\u4e00\u540d\u82f1\u56fd\u5de5\u7a0b\u5e08\u7565\u5fae\u9707\u60ca\u7684\u62a5\u544a\u7684\u542f\u53d1\uff0c\u8be5\u62a5\u544a\u79f0\uff0c\u4e00\u8258\u51cf\u901f\u7684\u8239\u63a8\u7740\u201c\u5b64\u96f6\u96f6\u7684\u4e00\u5806\u6c34\u201d\u524d\u8fdb\u4e86\u8fd1\u4e24\u82f1\u91cc\uff0c\u5728\u8fd0\u6cb3\u4e2d\u822a\u884c\u65f6\uff0c\u5b83\u7684\u901f\u5ea6\u548c\u5f62\u72b6\u4fdd\u6301\u4e0d\u53d8\u3002\u65af\u6258\u514b\u65af\u5bfb\u627e\u4e00\u4e2a\u65b9\u7a0b\u5f0f\uff0c\u53ef\u4ee5\u63cf\u8ff0\u6ce2\u6d6a\u5728\u6d45\u6c34\u4e2d\u4f20\u64ad\uff0c\u800c\u4e0d\u6539\u53d8\u5f62\u72b6\u30023\u4e2a\u3002\n\u4eba\u4eec\u66fe\u76f8\u5f53\u7406\u6240\u5f53\u7136\u5730\u8ba4\u4e3a\uff0c\u88ab\u79f0\u4e3a\u65af\u6258\u514b\u65af\u201c\u6ce2\u6d6a\u5217\u8f66\u201d\u7684\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u7a33\u5b9a\u7684\u3002\u4f46\u5728\u6ce2\u6d6a\u6c34\u7bb1\u4e2d\u5de5\u4f5c\u7684\u5de5\u7a0b\u5e08-\u6d4b\u8bd5\u8239\u53ea\u7684\u6c34\u52a8\u529b\u7b49-\u53d1\u73b0\u4e86\u4e0d\u7a33\u5b9a\u56e0\u7d20\u30024.\u5f53\u4ed6\u4eec\u5f00\u59cb\u81ea\u5df1\u5bfb\u627e\u7a33\u5b9a\u7684\u65f6\u5019\uff0c\u8d39\u5c14\u548c\u672c\u6770\u660e\u6ce8\u610f\u5230\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u7684\u540c\u4e8bJ.C.R.\u4ea8\u7279(J.C.R.Hunt)\u5199\u9053\uff0c\u4e24\u4eba\u201c\u89c2\u5bdf\u5230\u9020\u6ce2\u673a\u4ea7\u751f\u7684\u6ce2\u6d6a\u6700\u521d\u662f\u9891\u7387\u548c\u6ce2\u957f\u6052\u5b9a\u7684\u5e38\u89c4\u5217\u8f66\uff0c\u4f46\u968f\u540e\u6c34\u7bb1\u4e0b\u65b9\u7ea65\u7c73\u5904\u5f00\u59cb\u5f62\u6210\u9891\u7387\u548c\u6ce2\u957f\u4e0d\u540c\u7684\u6ce2\u7fa4\u3002\u201d5\u8003\u8651\u5230\u53ef\u80fd\u662f\u9020\u6ce2\u786c\u4ef6\u6709\u95ee\u9898\uff0c\u4ed6\u4eec\u9996\u5148\u60f3\u51fa\u4e86\u4e00\u4e2a\u9632\u6b62\u9891\u7387\u79fb\u52a8\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u642c\u5230\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u6c34\u7bb1\uff0c\u914d\u5907\u4e86\u4e00\u4e2a\u53ef\u7f16\u7a0b\u9020\u6ce2\u673a\u3002\u4f46\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u5f53\u6ce2\u6d6a\u987a\u7740\u6c34\u7bb1\u5411\u4e0b\u79fb\u52a8\u65f6\uff0c\u5c31\u4f1a\u53d7\u5230\u9891\u7387\u9ad8\u4f4e\u7684\u201c\u8fb9\u5e26\u201d\u7684\u51b2\u51fb\u3002\u5173\u952e\u7684\u662f\uff0c\u5f53\u8fd9\u4e9b\u8fb9\u5e26\u6cbf\u7740\u5766\u514b\u884c\u8fdb\u65f6\uff0c\u5b83\u4eec\u7684\u632f\u5e45\u6216\u9ad8\u5ea6\u5448\u6307\u6570\u7ea7\u589e\u957f\u3002\n\u8fd9\u79cd\u6548\u5e94\uff0c\u73b0\u5728\u88ab\u79f0\u4e3a\u201c\u672c\u6770\u660e-\u8d39\u5c14\u4e0d\u7a33\u5b9a\u6027\u201d\uff0c\u4e3a\u65e0\u8d56\u6ce2\u662f\u5982\u4f55\u5f62\u6210\u7684\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7ebf\u7d22\u3002\u6b63\u5982J.B.Zirker\u5728\u4ed6\u7684\u4e66\u201c\u6d77\u6d0b\u6ce2\u6d6a\u7684\u79d1\u5b66\u201d(The Science Of Ocean Waves)\u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u6ce2\u7fa4\u4e00\u65e6\u627e\u5230\u4e86\u4e00\u79cd\u8c03\u5236\u7684\u751c\u871c\u70b9\uff0c\u5c31\u4f1a\u4ece\u81ea\u5df1\u90a3\u91cc\u7a83\u53d6\u80fd\u91cf\uff0c\u4ea7\u751f\u4e00\u4e2a\u5355\u4e00\u7684\u9ad8\u6ce2-\u6bd4\u6b63\u5e38\u7684\u6d77\u6d6a\u52a8\u529b\u5b66\u53ef\u80fd\u9884\u671f\u7684\u8981\u9ad8-\u7136\u540e\u5c06\u5176\u201c\u8fd4\u56de\u201d\u5230\u4e3b\u6ce2\u3002\u4ed6\u5199\u9053\uff1a\u201c\u8fb9\u5e26\u9ad8\u5ea6\u5448\u6307\u6570\u7ea7\u589e\u957f\uff0c\u4ee5\u727a\u7272\u4e3b\u6ce2\u4e3a\u4ee3\u4ef7\uff0c\u4e3b\u6ce2\u6700\u7ec8\u89e3\u4f53\u3002\u201d\u201c\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u4eba\u89c1\u8fc7\u6216\u9884\u6599\u5230\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u201d\n\u6700\u7ec8\u4f7f\u6d41\u6d6a\u7684\u6982\u5ff5\u5982\u6b64\u5f15\u4eba\u6ce8\u76ee\u7684\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4f1a\u589e\u957f\u5230\u610f\u60f3\u4e0d\u5230\u7684\u9ad8\u5ea6\uff0c\u800c\u4e14\u5b83\u4eec\u53d1\u751f\u7684\u9891\u7387\u6bd4\u9884\u671f\u7684\u8981\u9ad8\u5f97\u591a\u3002\u6b63\u5982\u54c8\u4f5b\u5927\u5b66(Harvard University)\u7269\u7406\u5b66\u5bb6\u57c3\u91cc\u514b\u00b7\u6d77\u52d2(Eric Heller)\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u5173\u4e8e\u5927\u6d6a\u4ea7\u751f\u7684\u8bb8\u591a\u60f3\u6cd5\u90fd\u53d7\u5230\u4e86\u8457\u540d\u6570\u5b66\u5bb6\u548c\u6d77\u6d0b\u5b66\u5bb6M\u00b7S\u00b7\u9686\u76d6-\u5e0c\u91d1\u65af(M.S.Longuet-Higgins)\u7684\u5f71\u54cd\uff0c\u6b63\u5982\u4ed6\u5728\u4e00\u9879\u7814\u7a76\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u4ed6\u8bd5\u56fe\u201c\u4ece\u7406\u8bba\u4e0a\u7814\u7a76\u968f\u673a\u79fb\u52a8\u7684\u9ad8\u65af\u8868\u9762\u7684\u7edf\u8ba1\u7279\u6027\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u6d77\u6d0b\u3002\n\u201c\u4ed6\u7684\u7406\u8bba\u662f\u57fa\u4e8e\u6ce2\u6d6a\u7684\u968f\u673a\u6dfb\u52a0\uff0c\u201d\u6d77\u52d2\u8bf4\u3002\u201c\u4ed6\u628a\u5b83\u4eec\u5747\u5300\u5730\u76f8\u52a0\u5230\u5f88\u5927\u7684\u9762\u79ef\u4e0a\uff0c\u7136\u540e\u8be2\u95ee\u4f60\u4f1a\u5f97\u5230\u591a\u5c11\u4e0d\u5409\u5229\u7684\u76f8\u52a0\uff0c\u4ece\u800c\u4ea7\u751f\u5de8\u5927\u7684\u6ce2\u6d6a\u3002\u201d\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u8fc7\u7a0b\u3002\u6839\u636e\u6d77\u52d2\u7684\u8bf4\u6cd5\uff0c\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u201c(\u5728\u73b0\u5b9e\u4e2d)\u53d1\u751f\u7684\u53cd\u5e38\u6d77\u6d6a\u4e8b\u4ef6\u6bd4\u8fd9\u4e00\u7406\u8bba\u6240\u80fd\u771f\u6b63\u89e3\u91ca\u7684\u8981\u591a\u5f97\u591a\u3002\u4eba\u4eec\u8111\u6d77\u4e2d\u7684\u706f\u6ce1\u7184\u706d\u4e86--\u8fd9\u4e00\u5b9a\u662f\u975e\u7ebf\u6027\u8fdb\u5316\uff01\u201c\u3002\n\u56e0\u6b64\uff0c\u6d41\u6c13\u6d77\u6d6a\u649e\u4e0a\u4e86\u957f\u671f\u5b58\u5728\u7684\u968f\u673a\u5206\u5e03\u6ce2\u9ad8\u7684\u201c\u9ad8\u65af\u6d77\u201d\u6a21\u578b\u3002\u5b83\u4eec\u5e76\u4e0d\u50cf\u4eba\u4eec\u60f3\u8c61\u7684\u90a3\u6837\u662f\u957f\u5c3e\u7684\uff0c\u65b0\u7684\u6982\u7387\uff0c\u5982\u6240\u8c13\u7684\u201c\u6cf0\u4e30\u5206\u5e03\u201d(\u6070\u5de7\u542c\u8d77\u6765\u50cf\u201c\u53f0\u98ce\u201d\uff0c\u4f46\u5374\u662f\u4ee5\u4e00\u4f4d\u571f\u8033\u5176\u5b66\u8005\u7684\u540d\u5b57\u547d\u540d\u7684)\u5df2\u7ecf\u6d41\u884c\u8d77\u6765\uff0c\u53ef\u4ee5\u7528\u6765\u9884\u6d4b\u65e0\u8d56\u6d77\u6d6a\u7684\u53ef\u80fd\u6027\u3002\n\u7814\u7a76\u6d41\u6d6a\u7684\u6700\u5927\u597d\u5904\u4e4b\u4e00\u4e0d\u662f\u5728\u5b9e\u9a8c\u5ba4\uff0c\u800c\u662f\u6d77\u6d0b\u672c\u8eab\u30021995\u5e74\u665a\u4e0a\uff0cqe2\u53f7\u88ab\u5de8\u6d6a\u51fb\u4e2d\uff0c\u8fd8\u6709\u53e6\u4e00\u4f4d\u76ee\u51fb\u8005\uff0c\u4ed6\u662f\u4ece\u6df1\u5ea6\u6c89\u6d78\u7684\u4f4d\u7f6e\u4f53\u9a8c\u5230\u5de8\u6d6a\u7684\uff1a\u201c\u6d6e\u680744139\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531\u52a0\u62ff\u5927\u54c8\u5229\u6cd5\u514b\u65af\u6c14\u8c61\u5c40\u76d1\u6d4b\u7684\u4eea\u8868\u5f0f\u6d6e\u52a8\u4fe1\u6807\u3002\u5b83\u5728\u6298\u78e8\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u7edf\u8ba1\u56fe\u7b80\u5355\uff0c\u4f46\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\u3002\u6709\u4e00\u6761\u7565\u5fae\u53c2\u5dee\u4e0d\u9f50\u7684\u952f\u9f7f\u72b6\u6ce2\u6d6a\u9ad8\u5ea6\u7ebf\uff0c\u6c83\u91cc\u514b\u4e0d\u5f97\u4e0d\u4e0e\u4e4b\u5bf9\u6297\u768440\u82f1\u5c3a\u9ad8\u7684\u6eda\u8f74\u3002\u4f46\u968f\u540e\uff0c\u5728\u6ca1\u6709\u9884\u6599\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u51fa\u73b0\u4e86\u4e00\u4e2a\u620f\u5267\u6027\u7684\u5355\u5cf0\uff0c\u8df3\u5230\u4e86\u9875\u9762\u7684\u9876\u90e8\uff0c\u51e0\u4e4e\uff0c\u4ece\u5b57\u9762\u4e0a\u770b\uff0c\u201c\u8d85\u51fa\u4e86\u56fe\u8868\u7684\u8303\u56f4\u201d\u3002\u5c31\u50cf\u7a81\u7136\u4e00\u6837\uff0c\u5b83\u518d\u6b21\u4e0b\u6c89\uff0c\u5c31\u50cf\u5b83\u4ece\u6765\u6ca1\u6709\u5728\u90a3\u91cc\u4e00\u6837\u3002\n\u50cf44139\u8fd9\u6837\u7684\u6d6e\u6807\uff0c\u914d\u5907\u4e86\u52a0\u901f\u8ba1\u548c\u5176\u4ed6\u6d4b\u91cf\u8bbe\u5907\uff0c\u4e3a\u8fd9\u4e2a\u6c34\u624b\u7684\u8d26\u76ee\u548c\u4f30\u8ba1\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u7ade\u6280\u573a\u5e26\u6765\u4e86\u7cbe\u5ea6\u3002\u5728\u5b83\u4eec\u51fa\u73b0\u4e4b\u524d\uff0c\u6d4b\u91cf\u6d77\u6d6a\u7684\u9ad8\u5ea6\u662f\u4e00\u4e2a\u4e0d\u7cbe\u786e\u7684\u8fc7\u7a0b\u3002\u4e00\u9879\u65e9\u671f\u7684\u3001\u590d\u6742\u7684\u52aa\u529b\n\u4f46\u6d6e\u6807\u8fdc\u975e\u5b8c\u7f8e\u3002\u4ed6\u4eec\u8981\u4e48\u88ab\u6d77\u6d6a\u6df9\u6ca1\uff0c\u8981\u4e48\u4fa7\u8eab\u88ab\u649e\u3002\u8fd8\u6709\u4e00\u4e2a\u9009\u62e9\u504f\u89c1\u7684\u95ee\u9898\u3002Baschek\u8bf4\uff0c\u5927\u591a\u6570\u4eea\u8868\u5f0f\u6d6e\u6807\u90fd\u4f4d\u4e8e\u9760\u8fd1\u6d77\u5cb8\u7684\u5730\u65b9\uff0c\u800c\u6700\u5927\u7684\u65e0\u8d56\u6d77\u6d6a\u66f4\u9891\u7e41\u5730\u51fa\u73b0\u5728\u5f00\u9614\u7684\u6d77\u6d0b\u4e0a\u3002\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6d6e\u6807\u90fd\u80fd\u6d4b\u91cf\u6d77\u6d6a\u7684\u65b9\u5411\u3002\u800c\u5df2\u7ecf\u6355\u83b7\u7684\u5927\u6d6a\u6d4b\u91cf-qe2\uff0c\u6216\u8005\uff0c\u5728\u540c\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u53e6\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u4f8b\u5b50\u4e2d\uff0c\u5728\u632a\u5a01\u6d77\u5cb8\u5916\u7684\u77f3\u6cb9\u5e73\u53f0\u5fb7\u9c81\u666e\u7eb3(Draupner)\u4e0a\u6355\u83b7\u768430\u7c73\u957f\u7684\u6d77\u6d6a-\u662f\u5355\u70b9\u6d4b\u91cf\u3002\u201c\u8fd9\u662f\u4e00\u4e2a\u6d6e\u6807\u6216\u96f7\u8fbe\u70b9\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f46\u4f60\u4e0d\u77e5\u9053\u6ce2\u5cf0\u7684\u957f\u5ea6\u662f\u591a\u5c11\u3002\u201d\u5982\u679c\u4f60\u6d4b\u91cf\u4e00\u4e2a\u6d41\u6c13\u6d77\u6d6a\uff0c\u5b83\u662f\u4e00\u4e2a\u5c40\u90e8\u6d6a\u82b1\uff0c\u8fd8\u662f\u7ecf\u8fc7\u6570\u82f1\u91cc\uff1f\u5b83\u80fd\u6301\u7eed\u591a\u4e45\uff1f\u8fd9\u4e2a\u65e0\u8d56\u6ce2\u662f\u4e0d\u662f\u6b63\u597d\u5728\u4f60\u7684\u6d6e\u6807\u4e4b\u524d\u5f62\u6210\uff0c\u7136\u540e\u5728\u90a3\u4e4b\u540e\u7acb\u5373\u89e3\u4f53\uff1f\u8fd9\u4e5f\u662f\u4f60\u4e0d\u77e5\u9053\u7684\u3002\u201c\u3002\n\u4e00\u4e2a\u5f15\u4eba\u6ce8\u76ee\u7684\u63d0\u9192\u662f\uff0c\u5c3d\u7ba1\u79d1\u5b66\u7684\u6d4b\u91cf\u80fd\u529b\u8d8a\u6765\u8d8a\u590d\u6742\u548c\u5f3a\u5927\uff0c\u4f46\u4ecd\u7136\u5728\u8ffd\u8d76\u6d69\u701a\u7684\u6d77\u6d0b\uff0c\u76f4\u52302011\u5e74\uff0c\u4eba\u4eec\u624d\u7ec8\u4e8e\u5728\u91ce\u5916\u89c2\u5bdf\u5230\u4e86\u957f\u671f\u6000\u7591\u4f46\u4ece\u672a\u89c2\u5bdf\u5230\u7684\u201c\u5408\u5e76\u6d77\u5578\u201d\u73b0\u8c61--\u4e24\u4e2a\u6ce2(\u975e\u7ebf\u6027\u5f62\u6210)\u53d8\u6210(\u7ebf\u6027)\u66f4\u5f3a\u5927\u7684\u4e00\u4e2a--\u8fd9\u8981\u5f52\u529f\u4e8e\u56f4\u7ed5\u6d77\u5578\u8fd0\u884c\u7684\u4e00\u7cfb\u5217\u536b\u661f\u3002\u6b63\u5982\u4e00\u4f4d\u8c03\u67e5\u4eba\u5458\u6240\u8bf4\uff0c\u6355\u83b7\u5408\u5e76\u7684\u6d77\u5578\u662f\u201c10\u4e07\u5206\u4e4b\u4e00\u7684\u673a\u4f1a\u201d\u7684\u968f\u673a\u89c2\u5bdf\u30027\u4e2a\u3002\n\u51fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u5373\u4f7f\u5728\u8fd9\u4e2a\u7f51\u7edc\u6570\u636e\u548c\u8d85\u7ea7\u8ba1\u7b97\u673a\u6a21\u62df\u7684\u65f6\u4ee3\uff0c\u5173\u4e8e\u6d41\u6d6a\u7684\u4e00\u4e9b\u6700\u597d\u7684\u6570\u636e\u4ecd\u7136\u6765\u81ea\u5728\u6d77\u4e0a\u5de5\u4f5c\u7684\u7537\u7537\u5973\u5973\u3002\n2010\u5e741\u6708\uff0c\u5728\u963f\u62c9\u65af\u52a0\u5dde\u5723\u4fdd\u7f57\u9547\u9644\u8fd1\u4f5c\u4e1a\u7684\u8783\u87f9\u8239\u201c\u9ece\u660e\u65e9\u201d(\u78b0\u5de7\u51fa\u73b0\u5728\u6700\u81f4\u547d\u7684\u6355\u83b7\u7269\u771f\u4eba\u79c0\u8282\u76ee\u4e2d)\u906d\u9047\u4e86\u636e\u8bf4\u662f\u91cd\u8981\u6d6a\u9ad8\u4e24\u500d\u7684\u6d77\u6d6a\u3002\u5728\u968f\u540e\u5173\u4e8e\u4e00\u540d\u8239\u5458\u53d7\u4f24\u7684\u4fdd\u9669\u8c03\u67e5\u8fc7\u7a0b\u4e2d\uff0c\u5df4\u820d\u514b\u88ab\u53eb\u6765\u5e2e\u52a9\u56de\u7b54\u4e00\u4e2a\u5fc5\u8981\u4f46\u56f0\u96be\u7684\u95ee\u9898\uff1a\u8239\u957f\u662f\u5426\u5e94\u8be5\u77e5\u9053\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u6d77\u6d6a\uff0c\u4ed6\u662f\u5426\u6709\u8db3\u591f\u7684\u51c6\u5907\uff1f\u8fd9\u6d89\u53ca\u5230\u901a\u5e38\u7684\u95ee\u9898\uff0c\u5373\u8fd9\u79cd\u6ce2\u7684\u6982\u7387\uff0c\u4f46\u6709\u4e00\u4e2a\u4e0d\u540c\u5bfb\u5e38\u7684\u626d\u66f2\u3002\u90a3\u5e74\u51ac\u5929\u51fb\u6253\u5c0f\u8239\u7684\u6ce2\u6d6a\u5e76\u4e0d\u662f\u6765\u81ea\u5f53\u65f6\u7684\u6ce2\u6d6a\u65b9\u5411\u3002\n\u5df4\u65af\u5207\u514b\u8bf4\uff0c\u8fd9\u8fdd\u53cd\u4e86\u4f20\u7edf\u7684\u7ebf\u6027\u7406\u8bba\uff0c\u5373\u6765\u81ea\u540c\u4e00\u65b9\u5411\u7684\u6ce2\u53e0\u52a0\u5e76\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u6ce2\u3002\u201c\u8fd9\u5b8c\u5168\u662f\u4e2a\u8c1c\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u80cc\u540e\u7684\u7269\u7406\u539f\u7406\uff0c\u6211\u4eec\u6240\u80fd\u505a\u7684\u5c31\u662f\u6316\u6398\u51fa\u6211\u4eec\u62e5\u6709\u7684\u7f8e\u56fd\u897f\u6d77\u5cb8\u7684\u8bb0\u5f55\uff0c\u5927\u7ea6100\u5e74\u7684\u5168\u90e8\u6570\u636e\u3002\u201d\u4ed6\u4eec\u60f3\u8981\u56de\u7b54\u7684\u95ee\u9898\u662f\uff1a\u6d41\u6c13\u6ce2\u53d1\u751f\u7684\u89d2\u5ea6\u4e0e\u4e3b\u6d41\u6ce2\u65b9\u5411\u4e0d\u540c\u7684\u53ef\u80fd\u6027\u6709\u591a\u5927\uff1f\u4ed6\u8bf4\uff0c\u4ed6\u4eec\u53d1\u73b0\u7684\u53ef\u80fd\u6027\u7ea6\u4e3a1%\u3002\u201c\u73b0\u5728\u7531\u6cd5\u5b98\u6765\u51b3\u5b9a\u8fd9\u662f\u5426\u53ef\u80fd\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u5c31\u662f\u79d1\u5b66\u7684\u7ec8\u7ed3\u3002\u201d\n\u5f53\u4f60\u6cbf\u7740\u6982\u7387\u5206\u5e03\u7684\u5c3e\u90e8\u884c\u8fdb\u65f6\uff0c\u65e0\u8d56\u6ce2\u53d8\u5f97\u8d8a\u6765\u8d8a\u5947\u602a\u3002\u5b83\u4eec\u7684\u5927\u5c0f\u548c\u65b9\u5411\u4e0d\u4ec5\u53ef\u80fd\u51fa\u4e4e\u610f\u6599\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u4e00\u4e9b\u4e0d\u592a\u53ef\u80fd\u7684\u5730\u65b9\u3002\u5f53\u6211\u8054\u7cfb\u5230\u582a\u57f9\u62c9\u6fb3\u5927\u5229\u4e9a\u56fd\u7acb\u5927\u5b66(Australian National University)\u7269\u7406\u4e0e\u5de5\u7a0b\u5b66\u9662(Research School Of Physical And Engineering)\u6559\u6388\u3001\u4e16\u754c\u9886\u5148\u7684\u975e\u7ebf\u6027\u52a8\u529b\u5b66\u4e13\u5bb6\u7eb3\u5c14\u00b7\u963f\u8d6b\u6885\u6377\u8036\u592b(Nail Akhmediev)\u65f6\uff0c\u4ed6\u6307\u51fa\uff0c\u6211\u4eec\u901a\u8fc7Skype\u8fdb\u884c\u7684\u5bf9\u8bdd\u53ef\u80fd\u4f1a\u53d7\u5230\u5f02\u5e38\u6ce2\u7684\u5f71\u54cd\u3002(\u4ed6\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u975e\u7ebf\u6027\u6ce2\uff0c\u4e5f\u5c31\u662f\u4ed6\u7684\u540d\u5b57\u201c\u963f\u8d6b\u6885\u6377\u592b\u547c\u5438\u5668\u201d)\u3002\n\u201c\u73b0\u5728\uff0c\u5f53\u6211\u4eec\u4ea4\u8c08\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u58f0\u97f3\u90fd\u662f\u901a\u8fc7\u5149\u7ea4\u4f20\u64ad\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u662f\u6d77\u6d6a\u3002\u65e0\u8bba\u662f\u6d77\u6d6a\u8fd8\u662f\u5149\u7ea4\u4e2d\u7684\u6ce2\u6d6a\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u76f8\u540c\u7684\u65b9\u7a0b\u5f0f\u3002\u201c\u3002\u4ed6\u6307\u51fa\uff0c\u5728\u5149\u7ea4\u4e2d\uff0c\u6ce2\u53ef\u80fd\u662f\u6df7\u6c8c\u548c\u6e4d\u6d41\u7684\u3002\u8fde\u63a5\u582a\u57f9\u62c9\u548c\u7ebd\u7ea6\u5e02\u7684\u7ba1\u9053\u7531\u8bb8\u591a\u9891\u9053\u7ec4\u6210-\u6210\u5343\u4e0a\u4e07\u7684\u4eba\u540c\u65f6\u901a\u8bdd\u3002\u201c\u5728\u5149\u7ea4\u4e2d\uff0c\u5b83\u90fd\u662f\u5355\u5411\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u4f46\u7531\u4e8e\u6709\u51e0\u4e2a\u6e20\u9053\uff0c\u5b83\u4eec\u76f8\u4e92\u4ea4\u53c9\u3002\n\u5728\u5408\u9002\u7684\u6761\u4ef6\u4e0b\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u51fa\u73b0\u6d41\u6c13\u6ce2\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u9996\u5148\u7531\u52a0\u5dde\u5927\u5b66\u6d1b\u6749\u77f6\u5206\u6821(UCLA)\u7269\u7406\u5b66\u5bb6\u4e39\u5c3c\u5c14\u00b7\u7d22\u5229(Daniel Solli)\u548c\u4ed6\u7684\u540c\u4e8b\u57282007\u5e74\u53d1\u8868\u5728\u300a\u81ea\u7136\u300b(The Nature)\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\u62a5\u9053\uff0c\u4ed6\u4eec\u5728\u8bba\u6587\u4e2d\u6307\u51fa\uff0c\u51fa\u73b0\u4e86\u201c\u4e00\u79cd\u5bf9\u566a\u58f0\u654f\u611f\u7684\u975e\u7ebf\u6027\u8fc7\u7a0b\uff0c\u5728\u8fd9\u79cd\u8fc7\u7a0b\u4e2d\uff0c\u7a84\u5e26\u8f93\u5165\u4ea7\u751f\u4e86\u6781\u5bbd\u7684\u8f90\u5c04\u3002\u201d\u6b63\u5982\u7269\u7406\u5b66\u5bb6\u5c3c\u5c14\u00b7\u5e03\u7f57\u5fb7\u91cc\u514b(Neil Broderick)\u6307\u51fa\u7684\u90a3\u6837\uff0c\u867d\u7136\u4e00\u6b21\u7279\u522b\u558b\u558b\u4e0d\u4f11\u7684Skype\u5bf9\u8bdd\u4e0d\u592a\u53ef\u80fd\u5728\u5168\u7403\u7535\u4fe1\u7f51\u7edc\u4e2d\u5f15\u53d1\u707e\u96be\u6027\u7684\u8109\u51b2\uff0c\u4f46\u5149\u5b66\u6d41\u6c13\u6ce2\u7684\u51fa\u73b0\u63d0\u9192\u6211\u4eec\uff0c\u5728\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u7cfb\u7edf\u4e2d\uff0c\u975e\u7ebf\u6027\u6570\u5b66\u770b\u8d77\u6765\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff1b\u4ed6\u6307\u51fa\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u4f7f\u7528\u201c\u79cd\u5b50\u8109\u51b2\u201d\u548c\u4eba\u5de5\u73ca\u745a\u7901\u4e00\u8d77\uff0c\u4e3a\u51b2\u6d6a\u8005\u521b\u9020\u201c\u5b8c\u7f8e\u7684\u6ce2\u201d\u30028\u4e2a\n\u5f53\u6211\u770b\u7740Akhmediev\u548c\u4ed6\u7684\u540c\u4e8b\u5728\u6c49\u5821\u7684\u6ce2\u6d6a\u6c34\u6c60\u4e2d\u8fdb\u884c\u7684\u4e00\u6b21\u5b9e\u9a8c\u7684\u89c6\u9891\u65f6\uff0c\u6211\u7a81\u7136\u60f3\u5230\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u3002\u5728\u89c6\u9891\u4e2d\uff0c\u4e00\u8258\u5c0f\u4e50\u9ad8\u6d77\u76d7\u8239\u5750\u5728\u5766\u514b\u955c\u9762\u6c34\u9762\u4e1d\u6ed1\u8d77\u4f0f\u7684\u6c34\u9762\u4e0a\u8f7b\u8f7b\u5730\u4e0a\u4e0b\u6d6e\u52a8\uff0c\u770b\u4e0d\u89c1\u7684\u662f\uff0c\u6ce2\u6d6a\u53d1\u751f\u5668\u62cd\u6253\u7740\u7a33\u5b9a\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u8109\u51b2\u3002\u7136\u540e\u5b83\u5c31\u5728\u90a3\u91cc\uff0c\u8fdc\u5904\u6709\u4e00\u6761\u9ed1\u6697\u7684\u5e26\u5b50\uff0c\u541e\u6ca1\u5e76\u503e\u8986\u4e86\u8fd9\u8258\u5012\u9709\u7684\u8239\u3002\u8fd9\u662f\u4e00\u4e2a\u201c\u8d85\u7ea7\u201d\u7684\u6d41\u6c13\u6d6a\uff0c\u4e0d\u662f\u663e\u7740\u6d6a\u9ad8\u7684\u4e24\u500d\uff0c\u800c\u662f\u4e94\u500d\u3002\u6709\u90a3\u4e48\u4e00\u4f1a\u513f\uff0c\u6211\u8bbe\u60f3\u4e86\u4e00\u4e2a\u5ba4\u5185\u6c34\u4e0a\u516c\u56ed\uff0c\u5728\u90a3\u91cc\uff0c\u6e38\u6cf3\u8005\u4eec\u5728\u5e73\u9759\u5730\u6c90\u6d74\u65f6\uff0c\u4f1a\u6109\u5feb\u5730\u3001\u51fa\u4eba\u610f\u6599\u5730\u88ab\u7cbe\u81f4\u7684\u975e\u7ebf\u6027\u63a8\u6324\u3002\n\u4f46\u8fd9\u9879\u5b9e\u9a8c\u9c9c\u660e\u5730\u63d0\u9192\u4eba\u4eec\uff0c\u6d41\u6c13\u6d77\u6d6a\u7684\u4ea7\u751f\u4ecd\u6709\u591a\u5c11\u795e\u79d8\u4e4b\u5904\u3002\u5b83\u4eec\u662f\u6d77\u6d0b\u4e2d\u7684\u9ed1\u5929\u9e45\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5728\u4e00\u822c\u7edf\u8ba1\u610f\u4e49\u4e0a\uff0c\u6d41\u6c13\u6ce2\u4f1a\u53d1\u751f\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u4eec\u4f1a\u5728\u54ea\u91cc\u3001\u4f55\u65f6\u6216\u5982\u4f55\u53d1\u751f\uff0c\u4e5f\u4e0d\u77e5\u9053\u5b83\u4eec\u4f1a\u4e0d\u4f1a\u53d1\u751f\u3002\u4e5f\u8bb8\u5728\u4e16\u754c\u6d77\u6d0b\u4e2d\u751a\u81f3\u8fd8\u67095\u500d\u7684\u6d41\u6d6a\u5c1a\u672a\u88ab\u53d1\u73b0\u3002\u6d77\u52d2\u8bf4\uff0c\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5982\u6b64\u591a\u7684\u6ce2\u6d6a\u79d1\u5b66\u90fd\u662f\u5173\u4e8e\u6982\u7387\u7684\uff1b\u5373\u4f7f\u6211\u4eec\u6709\u4e86\u89e3\u6d77\u6d0b\u7684\u6240\u6709\u6570\u636e\uff0c\u6211\u4eec\u4e5f\u4e0d\u4f1a\u6709\u8db3\u591f\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\u6765\u5904\u7406\u5b83\u3002\u201c\u5982\u4eca\uff0c\u7edf\u8ba1\u5b66\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7269\u7406\u5b66\u7684\u4e00\u90e8\u5206\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u9664\u4e86\u7edf\u8ba1\u4ee5\u5916\u4ec0\u4e48\u90fd\u6ca1\u6709\u201d\uff0c\u9664\u4e86\u731c\u6d4b\u7c92\u5b50\u5c06\u51fa\u73b0\u5728\u54ea\u91cc\uff0c\u751a\u81f3\u662f\u5426\u4f1a\u51fa\u73b0\u4e4b\u5916\uff0c\u522b\u65e0\u4ed6\u6cd5\u3002\u5373\u4f7f\u662f\u6700\u98ce\u5e73\u6d6a\u9759\u7684\u5927\u6d77\uff0c\u4e5f\u662f\u6df7\u4e71\u7684\u5e4c\u5b50--\u4e00\u79cd\u4e0d\u5728\u573a\u8bc1\u660e--\u65e0\u8bba\u662f\u5b9e\u9645\u7684\u8fd8\u662f\u7edf\u8ba1\u7684\u3002\n1.Cartwright\uff0cJ.H.&Amp\uff1bNakamura\uff0cN.\u5317\u4e95\u7684\u795e\u5948\u5ddd\u7684\u7b2c\u4e00\u6b21\u5927\u6d6a\u662f\u4e00\u79cd\u4ec0\u4e48\u6837\u7684\u6d6a\u6f6e\u3002\u201c\u7b14\u8bb0\u548c\u8bb0\u5f55\uff1a\u7687\u5bb6\u5b66\u4f1a\u79d1\u5b66\u53f2\u671f\u520a\u201d\u7b2c63\u9875\uff0c119-135\u9875(2009)\u3002\n2.Dudley\uff0cJ.M.\uff0cSarano\uff0cV.&Amp\uff1bDias\uff0cF.\u3002\u300a\u8bba\u5317\u585e\u7684\u795e\u5948\u5ddd\u9644\u8fd1\u7684\u5927\u6d6a\uff1a\u4e9a\u5357\u6781\u6c34\u57df\u7684\u672c\u5730\u5316\u3001\u7ebf\u6027\u548c\u6d41\u6c13\u6d77\u6d6a\u300b\uff0c\u300a\u7b14\u8bb0\u548c\u8bb0\u5f55\uff1a\u7687\u5bb6\u5b66\u4f1a\u79d1\u5b66\u53f2\u671f\u520a\u300b\u7b2c67\u9875\uff0c\u7b2c159-164\u9875(2013\u5e74)\u3002\n5.\u4ea8\u7279\uff0cJ.C.R.\uff0c\u201cT\u00b7\u5e03\u9c81\u514b\u00b7\u672c\u6770\u660e\u7684\u975e\u7ebf\u6027\u548c\u6ce2\u52a8\u7406\u8bba\u8d21\u732e\u201d(1929-1995)\uff0c\u201c\u6d41\u4f53\u529b\u5b66\u5e74\u5ea6\u8bc4\u8bba\u201d\u7b2c38\u671f\uff0c1-25\u9875(2006\u5e74)\u3002\n6.Jahne\uff0cB.\uff0cSchmidt\uff0cM.\u548cAmp\uff1bRocholz\uff0cR.\u77ed\u98ce\u6d6a\u7684\u7efc\u5408\u5149\u5b66\u659c\u7387/\u9ad8\u5ea6\u6d4b\u91cf\uff1a\u539f\u7406\u548c\u6821\u51c6&gt;\u201c\u56fd\u9645\u6d4b\u91cf\u79d1\u5b66\u4e0e\u6280\u672f\u201d\u7b2c16\u671f\uff0c1937-1944\u9875(2005)\u3002\n7.Buis\uff0cA.&Amp\uff1bCole\uff0cS.-NASA\u53d1\u73b0\u65e5\u672c\u6d77\u5578\u6ce2\u5408\u5e76\uff0c\u529f\u7387\u7ffb\u4e86\u4e00\u756a\uff0c\u89c1NASA.gov(2011)\u3002\n\u89c6\u9891\u5d4c\u5165\uff1a\u6ce2\u6d9b\u6c79\u6d8c\u7684\u6d77\u9762\u4e0a\uff0c\u4e00\u8258\u73a9\u5177\u8239\u5728\u6c49\u5821\u6ce2\u6d6a\u6c34\u7bb1\u4e2d\u5212\u6868\u4ea7\u751f\u7684\u6ce2\u6d6a\u4e0a\u884c\u9a76\u3002\u7269\u7406\u5b66\u5bb6\u5185\u5c14\u00b7\u963f\u8d6b\u6885\u6377\u8036\u592b(Nail Akhmediev)\u8bf4\uff0c\u201c\u7531\u4e8e\u6c34\u6ce2\u672c\u8eab\u7684\u81ea\u7136\u4e0d\u7a33\u5b9a\u6027\u201d\uff0c\u5bf9\u5212\u6868\u884c\u4e3a\u7684\u5fae\u5c0f\u6270\u52a8\u4f1a\u589e\u52a0\u3002*\u8fd9\u5076\u5c14\u4f1a\u4ea7\u751f\u50cf\u7ffb\u8239\u8fd9\u6837\u7684\u65e0\u8d56\u6ce2\u6d6a\u3002\u963f\u8d6b\u6885\u6377\u8036\u592b\u8bf4\uff0c\u4ed6\u770b\u5230\u7684\u5f02\u5e38\u6d77\u6d6a\u9ad8\u8fbe\u663e\u8457\u6d77\u6d6a\u9ad8\u5ea6\u7684\u4e94\u500d\u3002\u70b9\u8bc4\uff1aYouTube/SteveHOCP", "note_en": "Early in the morning on Sept. 11, 1995, the cruise liner the Queen Elizabeth 2, on its way from Southampton to New York, was being lashed by the tail end of Hurricane Luis, somewhere off the coast of Newfoundland. As if sensing its imminent demise, Luis had galvanized one last time, twitching to life and whipping the North Atlantic into a torrent of 130 mph winds and 40-foot waves. None of this caused undue concern for the ship\u2019s captain, Ronald Warwick, a 30-year sailing veteran well acquainted with rough seas. Luis was hardly unexpected; since leaving England, the ship had steadily tracked the storm\u2019s path. \u201cThis was fair game for us,\u201d the retired Commodore recalls, from his home in Somerset, England.\u00a0\u201cWe are a transatlantic liner.\u201d\n  At dinner, Warwick had advised the ship\u2019s passengers that things might get a bit rough during the night, and to secure any loose possessions in their cabin. He then did what any captain would do in heavy seas. With the ship steered into the waves, Warwick slowed it to a few knots.\u00a0\u201cHeaving to\u201d it is called, the idea being to ride out the waves as gently as possible, while maintaining just enough speed to maintain steering control.\u00a0Far below the ship\u2019s bridge, where winds roared and whipped against the armored windows, a handful of passengers held casual vigil in a bar.\n  Just after 2 a.m., Warwick and his officers suddenly saw a surging monster of water and convulsive white froth in the near distance. \u201cIf you\u2019re standing on the bridge of the QE2,\u201d he says, \u201cyour height of eye above sea level is 90 feet.\u201d From what they could discern through the rain-soaked darkness, the crest of the looming wave was as high as the bridge itself. Warwick, who says he had never encountered anything so large in the ocean before, said it was as if they were heading into the \u201cwhite cliffs of Dover.\u201d\n    A minute or so later, the wave crashed across the forward deck of the QE2. \u201cWe didn\u2019t go over the top of it,\u201d says Warwick. \u201cWe virtually went through it.\u201d A series of judders shot through the ship. The wall of water crashed down on the ship\u2019s deck, buckling its steel plates some 18 inches. Still, this was all within the operating bounds of the ship. \u201cWe weren\u2019t knocked off our feet or anything,\u201d he says. \u201cMost passengers were in bed.\u201d\n    But the anomalousness of this one wave still haunts Warwick. For an old North Sea hand, 40-foot waves, the kind that would terrify most of us, were nothing out of the ordinary. But the emergence from nowhere of a single wave that was more than twice as high as the others was exceptional. Warwick had encountered a rogue wave.\n    In the common parlance, \u201crogue wave\u201d has come to mean any wave that is unusually large. But a rogue wave does not have to be big on an absolute scale, nor is it necessarily associated with a heavy storm. Burkard Baschek, director of the Institute of Coastal Research, in Geesthacht, Germany, defines it as any wave that is statistically extreme. \u201c[A rogue wave is] at least twice as high as the so-called significant wave height,\u201d he says. The significant wave height is defined as the average of the largest one-third of waves at any given moment, \u201cthe waves you would see by eye if you\u2019re out there and looking at the sea state.\u201d\n  This means you have probably experienced a rogue wave and not noticed. How? \u201cIf you\u2019re out in calm conditions,\u201d says Baschek, \u201cand the waves are one meter high, and suddenly you experience a two meter wave, so what?\u201d In fact, Baschek says one wave per day, somewhere in the world\u2019s oceans, is a rogue wave. While at the University of California, Los Angeles (UCLA), he analyzed data from a number of buoys off the west coast of the United States and, extrapolating the figures globally, estimated that ships trawling the North Atlantic (like the QE2) would \u201cencounter 20-30 of these rogue waves during their service lives of 25 years,\u201d or about one a year.\n  That rogue waves are, at base, mathematical objects has meant that sailors, then scientists, have been slow to grasp their nature. Late into the 19th century, the line between sailors\u2019 lore and science could be as blurred as a fog-bound horizon, with reputable journals routinely reporting on the sightings of \u201cmonsters of the sea.\u201d By the mid-20th century, though, most of these monsters had been dispelled or explained\u2014but not rogue waves, which continue to be misidentified and incompletely understood today. Even one of civilization\u2019s most famous waves, Hokusai\u2019s\u00a0 The Great Wave off Kanagawa, is often misinterpreted as a tsunami\u2014the woodcut has even been used as the symbol of a UNESCO tsunami warning sign\u2014when it is actually more likely a rogue wave, as several scholars have argued. 1,2\n    The science of rogue waves began to take shape in the early 1960s, not in the ocean but in a wave tank\u2014essentially a long, shallow trough with a \u201cpaddle\u201d for generating waves of varying frequencies\u2014in Cambridge University\u2019s Engineering Department. There, the physicist and fluid dynamics expert T. Brooke Benjamin, aided by a graduate student named Jim Feir, were having trouble trying to prove something that had long been assumed: the stability of the so-called \u201cStokes wave,\u201d the sort of Ur-wave, or prototypical wave, of fluid dynamics, theorized by the renowned 19th-century Cambridge University mathematician George Gabriel Stokes. Stokes, inspired by a British engineer\u2019s faintly astonished report of a \u201csolitary heap of water,\u201d pushed along by a slowing boat, that had maintained its speed and shape for nearly two miles as it traveled through a canal, looked for an equation that could describe a wave propagating in shallow water without changing shape. 3\n  It had been rather taken for granted that the Stokes \u201cwave trains,\u201d as they were called, were essentially stable. But engineers working in wave tanks \u2014 testing ships\u2019 hydrodynamics and the like\u2014were finding instabilities. 4\u00a0As they set out in their own search of stability, Feir and Benjamin noticed something odd. Their colleague, J.C.R. Hunt, wrote that the two \u201cobserved how waves generated at the wave maker started as a regular train with constant frequency and wavelength, but then about 5 m down the tank began to form into groups of waves with varying frequencies and wavelengths.\u201d 5\u00a0Thinking it might be a problem with the wave generating hardware, they first worked out a solution to keep the frequency from shifting. They then moved to a larger tank, with a programmable wave maker. But the results were the same.\u00a0As the wave moved down the tank, it was buffeted by \u201csidebands\u201d of higher and lower frequency. Critically, these sidebands grew exponentially in amplitude, or height, as they traveled down the tank.\n      The effect, now known as the \u201cBenjamin-Feir instability,\u201d offered a hint as to how rogue waves form. As J.B. Zirker describes in his book, \u00a0The Science of Ocean Waves, the wave group, once it found a kind of sweet spot of modulation, stole energy from itself to produce a single high wave\u2014higher than might be expected from the normal dynamics of the waves\u2014then \u201creturned\u201d it to the primary wave. \u201cThe sidebands grew exponentially in height at the expense of the primary wave, which eventually disintegrated,\u201d he writes. \u201cNobody had ever seen or expected the likes of this before.\u201d\n  What ultimately made the concept of rogue waves so striking was not simply that they could grow to unexpected heights, but that they occurred more frequently than they were expected to. As Eric Heller, a physicist at Harvard University, explains it, much of the thinking on large wave creation was influenced by M.S. Longuet-Higgins, the noted mathematician and oceanographer, who was, as he wrote in one study, trying to \u201cstudy theoretically the statistical properties of a random, moving Gaussian surface.\u201d In other words, the ocean.\n  \u201cHis theory was based on the random addition of waves,\u201d Heller says. \u201cHe was uniformly adding them up over large areas and asking how many unlucky additions you would get resulting in large waves.\u201d It was a linear process. According to Heller, there was just one problem: \u201cThere were more freak wave events [in reality] than that theory could ever really account for. Light bulbs went off in people\u2019s heads\u2014it must be nonlinear evolution!\u201d\n  And so rogue waves crashed into the longstanding \u201cGaussian seas\u201d model of randomly distributed wave heights. They were not quite as long-tail as had been thought, and new probabilities, like the so-called \u201cTayfun distribution\u201d (which coincidentally sounds like \u201ctyphoon\u201d but is named for a Turkish scholar) have gained currency to predict the likelihood of rogue waves.\n      One of the biggest boons to the study of rogue waves came not in the laboratory, but in the ocean itself. On the night in 1995 that the QE2 was struck by the giant wave, there was another witness, one who experienced the wave from a deeply immersive position: \u201cBuoy 44139,\u201d an instrumented floating beacon monitored by the Canadian Forces Meteorological Office at Halifax. The statistical graph it generated during the torment is simple, yet chilling. There is a slightly jagged saw-tooth line of wave heights, the 40-foot rollers that Warwick had hove to against. But then, with no anticipatory buildup, there rises a single, dramatic peak, leaping toward the top of the page, almost, literally, \u201coff the charts.\u201d Just as suddenly, it plunges again, as if it were never there.\n  Buoys like 44139, equipped with accelerometers and other measuring devices, brought precision to an arena where sailor\u2019s accounts and estimations had dominated. Before their advent, gauging the heights of waves was an inexact process. One early, and complicated, effort involved photographing the ocean from an airplane and mathematically estimating wave height via the reflection of light. 6\n  But buoys are far from perfect. They get overtopped by waves, or knocked on their sides. There is also an issue of selection bias. Most instrumented buoys are located close to shore, says Baschek, while the largest rogue waves occur more frequently on the open ocean. Not all buoys can measure the direction of waves. And the big wave measurements that have been captured\u2014the QE2, or, in another well-known instance earlier that same year, a 30-meter wave captured on the oil platform Draupner off the coast of Norway\u2014are single point measurements. \u201cIt\u2019s a buoy or a radar point,\u201d he says.\u00a0\u201cBut you have no idea what the crest length is.\u00a0If you measure a rogue wave, is it one local spray, or is it going over miles and miles? How long does it persist? Does this rogue wave form right before your buoy and fall apart right after that? This is also something you don\u2019t know.\u201d\n    As a striking reminder of how science, even with its ever more sophisticated and powerful measurement capabilities, is still catching up with the enormity of the ocean, it was only in 2011 that the long-suspected, but never observed, phenomena of \u201cmerging tsunami\u201d\u2014two waves (formed non-linearly) becoming (linearly) a more powerful one\u2014was finally observed in the wild, thanks to a procession of satellites orbiting over the tsunami. The capture of the merging tsunami was a \u201cone in 10 million chance\u201d random observation, as an investigator put it. 7\n  For these reasons, even in this age of networked data and supercomputer simulations, some of the best data on rogue waves continues to come from the men and women who work on the sea.\n    In January, 2010, the crab boat Early Dawn (featured, as it happens, in the\u00a0 Deadliest Catch\u00a0reality series), operating near the town of St. Paul, Alaska, was struck by a wave that was said to be twice as high as the significant wave height.\u00a0In the course of a subsequent insurance investigation concerning injuries to a crew member, Baschek was called in to help answer a necessary but difficult question: Should the captain have known about the possibility of such a wave, and was he prepared enough? This involved the usual problem of the probabilities of such waves, with an unusual twist. The wave that struck the boat that winter did not come from the prevailing wave direction.\n  This violated the traditional linear theories, Baschek says, of the superposition of waves coming out of the same direction and combining into a larger wave. \u201cThis was a total puzzle,\u201d he says. \u201cBecause we don\u2019t know the physics behind it, all we could do was dig out the records we had of the West Coast of the U.S., about 100 years of total data.\u201d The question they wanted to answer: How likely is it the rogue wave occurs at an angle that differs from the prevailing wave direction? He says they found a likelihood of about 1 percent. \u201cIt is now up to a judge to decide if this was likely or not,\u201d he says. \u201cThat\u2019s where science ends.\u201d\n  As you travel down the tail of the probability distribution, rogue waves become ever stranger. Not only can their size and direction be unexpected, but they can appear in some unlikely places. When I reach Nail Akhmediev, a professor in the Research School of Physics and Engineering at the Australian National University in Canberra, and one of the world\u2019s leading experts in nonlinear dynamics (he has a special kind of nonlinear wave, an \u201cAkhmediev breather\u201d to his name), he points out that our very conversation, conducted via Skype, may be subject to rogue waves.\n  \u201cRight now, when we are talking, all this sound, it travels through optical fiber,\u201d he says. \u201cIt\u2019s waves. Whether ocean waves or waves in optical fibers, it\u2019s basically the same equations.\u201d In optical fiber, he notes, waves can be chaotic and turbulent. The pipes that connect Canberra and New York City are comprised of many channels\u2014thousands of people talking at once. \u201cIn a fiber, it\u2019s all unidirectional,\u201d he says. \u201cBut because there are several channels, they cross each other.\u201d\n  Under the right conditions, even rogue waves can appear, a fact first reported by UCLA physicist Daniel Solli and colleagues in a 2007 paper in\u00a0 Nature, in which they noted the appearance of \u201ca noise-sensitive, non-linear process in which extremely broadband radiation is generated from a narrowband input.\u201d And while it is unlikely that a particularly voluble Skype conversation is going to trigger a catastrophic pulse across global telecommunications networks, as physicist Neil Broderick points out, the emergence of optical rogue waves remind us that the nonlinear math looks much the same across waves in many different kinds of systems; perhaps \u201cseed pulses,\u201d he notes, could be used, along with artificial reefs, to create \u201cperfect waves\u201d for surfers. 8\n  This thought came to me as I watched a video of an experiment that Akhmediev and his colleagues conducted in a wave tank in Hamburg. In the video, a small Lego pirate ship sits gently bobbing atop the silky undulations of the tank\u2019s mirror-surface water, as, unseen, a wave generator beats out a steady pulse of fluid dynamics. And then there it is, a dark band in the distance, which engulfs and capsizes the hapless boat. It is a \u201csuper\u201d rogue wave, not twice the significant wave height, but\u00a0 five\u00a0times. I envisioned, for a moment, an indoor water park where swimmers, placidly bathing, would be delightedly and unexpectedly jostled by exquisitely derived nonlinearity.\n  But the experiment was a stark reminder of how much mystery still lay in the generation of rogue waves. They are the ocean\u2019s black swans. We know that rogue waves occur, in a general statistical sense, but we do not know where or when\u2014or, fully, how\u2014they will, or will not, occur. Perhaps there are even 5x rogue waves yet to be discovered in the world\u2019s seas. It is not surprising, says Heller, that so much of wave science is about probability; even if we had all the data to understand the ocean, we would not have computers powerful enough to crunch it. \u201cStatistics is very much a part of physics these days,\u201d he says. \u201cThere will be cases in quantum mechanics where there\u2019s nothing but statistics,\u201d no way other than guesses as to where or even if a particle\u2019s going to appear. Even the calmest sea is a veneer\u2014an alibi\u2014for chaos, actual and statistical.\n        1. Cartwright, J.H.E. &amp; Nakamura, N. What Kind of a Wave is Hokusai\u2019s\u00a0 Great Wave Off Kanagawa.\u00a0 Notes and Records: The Royal Society Journal of the History of Science\u00a0 63, 119\u2013135 (2009).\n  2. Dudley, J.M., Sarano, V., &amp; Dias, F. \u201cOn Hokusai\u2019s\u00a0 Great Wave Off Kanagawa :\u00a0Localization, linearity and a rogue wave in sub-Antarctic Waters.\u00a0 Notes and Records: The Royal Society Journal of the History of Science\u00a0 67, 159-164 (2013).\n      5. Hunt, J.C.R. Nonlinear and Wave Theory Contributions of T. Brooke Benjamin (1929-1995)\u00a0 Annual Review of Fluid Mechanics\u00a0 38, 1-25 (2006).\n  6. Jahne, B., Schmidt, M., &amp; Rocholz, R. Combined optical slope/height measurements of short wind waves: principle and calibration.\u00a0 Measurement Science and Technology\u00a0 16, 1937-1944 (2005).\n  7. Buis, A. &amp; Cole, S.\u00a0 NASA finds Japan tsunami waves merged, doubling power.\u00a0NASA.gov (2011).\n      Video embed:\u00a0 ROUGH SEAS\u00a0A toy boat rides over waves created by a paddle in a Hamburg wave tank. Small perturbations to the behavior of the paddle grow \u201cdue to the natural instabilities of the water waves themselves,\u201d says physicist Nail Akhmediev.*\u00a0This occasionally produces rogue waves like the one that topples the boat. Akhmediev says he has seen rogue waves as large as five times the significant wave height. Credit:\u00a0YouTube/SteveHOCP", "posttime": "2020-05-28 03:57:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u5931,waves,\u6d77\u6d6a", "title": "\u5f53\u597d\u7684\u6d77\u6d6a\u6d88\u5931\u65f6(2014)", "title_en": "When Good Waves Go Rogue (2014)", "transed": 1, "url": "http://oceans.nautil.us/article/547/when-good-waves-go-rogue", "via": "", "real_tags": ["\u6d88\u5931", "waves", "\u6d77\u6d6a"]}, {"category": "", "categoryclass": "", "imagename": "6be00fc95f878531d2b62431648eea6a.png", "infoid": 1003975, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e8c\u90e8\u5206--\u5728\u8fd9\u91cc\u9605\u8bfb\u7b2c\u4e00\u90e8\u5206\uff1a\u56de\u5230PostgreSQL\u6570\u636e\u7c7b\u578b\u7684\u57fa\u7840\u3002\n\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5206\u4eab\u4e86\u4e00\u4e9b\u6211\u5728\u7814\u7a76PostgreSQL\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u65f6\u5b66\u5230\u7684\u6709\u8da3(\u6709\u65f6\u4ee4\u4eba\u60ca\u8bb6)\u7684\u4e8b\u60c5\u3002NUMERIC\u3001INTEGER\u3001DATE\u548cchar/varchar\u7b49\u6570\u636e\u7c7b\u578b\u5b58\u5728\u4e8e\u6240\u6709\u5176\u4ed6\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u56e0\u4e3a\u4f7f\u7528\u6b64\u7c7b\u6570\u636e\u7684\u9700\u6c42\u51e0\u4e4e\u662f\u65e2\u5b9a\u7684\u3002\u4e0d\u540c\u7cfb\u7edf\u7684\u5b9e\u73b0\u53ef\u80fd\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u901a\u5e38\u6709\u4e00\u4e9b\u6807\u51c6\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u548c\u5206\u6790\u8fd9\u4e9b\u7c7b\u578b\u7684\u6570\u636e(\u4f8b\u5982\uff0c\u6267\u884c\u6570\u5b66\u8ba1\u7b97\u3001\u627e\u51fa\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3001\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b\u7b49)\u3002\n\u5728Postgres\u4e2d\uff0c\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u5373\u4f7f\u662f\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u4e0d\u592a\u719f\u6089\u7684\u6570\u636e\u7c7b\u578b\u3002\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u4e00\u4e0b\u6570\u7ec4\u3001\u679a\u4e3e\u548c\u8303\u56f4\u7c7b\u578b\u3002\n\u6570\u7ec4\u53ef\u80fd\u6bd4\u8f83\u719f\u6089\uff0c\u4f46\u5982\u679c\u60a8\u662f\u7f16\u7a0b\u65b0\u624b\uff0c\u8bf7\u6ce8\u610f\uff1a\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u4fdd\u5b58\u5bf9\u8c61\u96c6\u5408\u7684\u6570\u636e\u7c7b\u578b\u3002\u5728\u67d0\u4e9b\u8bed\u8a00(\u5982JavaScript)\u4e2d\uff0c\u6570\u7ec4\u672c\u8eab\u4e0d\u5fc5\u4fdd\u5b58\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3002\u7136\u800c\uff0c\u5728Postgres\u4e2d\uff0c\u6570\u7ec4\u5143\u7d20\u5fc5\u987b\u90fd\u662f\u540c\u4e00\u7c7b\u578b-\u8868\u5b9a\u4e49\u6697\u793a\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u9762\u7684Countries\u5217\u4e2d\u770b\u5230\u7684\uff0c\u6570\u7ec4\u58f0\u660e\u5fc5\u987b\u5177\u6709\u8be5\u6570\u7ec4\u5c06\u5305\u542b\u7684\u503c\u7684\u7c7b\u578b\u540d\u79f0\u3002\n\u6211\u5728\u4e92\u8054\u7f51\u4e0a\u7684\u641c\u7d22\u4f3c\u4e4e\u8868\u660e\uff0c\u6570\u7ec4\u7c7b\u578b\u975e\u5e38\u9002\u5408\u4e0d\u9700\u8981\u4e25\u683c\u9075\u5faa\u89c4\u8303\u5316\u89c4\u5219\u7684\u6570\u636e\u3002\u4ee5\u4e0a\u9762\u7684\u793a\u4f8b\u4e3a\u4f8b(\u6539\u7f16\u81ea\u201cPostgreSQL\u6545\u969c\u6392\u9664\u201d\u4e00\u4e66\u4e2d\u7684\u4e00\u4e2a\u793a\u4f8b)\uff1aCOUNTRIES_VISTED\u8868\u5b58\u50a8\u6bcf\u4e2a\u4eba\u53bb\u8fc7\u7684\u56fd\u5bb6\u7684\u5217\u8868\u3002\u5982\u679c\u60a8\u60f3\u6807\u51c6\u5316\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u8868\u6765\u5b58\u50a8\u4eba\u5458\u548c\u6bcf\u4e2a\u8bbf\u95ee\u8fc7\u7684\u56fd\u5bb6/\u5730\u533a\u7684\u7ec4\u5408\uff0c\u7ed3\u679c\u662f\u6bcf\u4e2a\u4eba\u6700\u591a\u6709\u51e0\u5341\u884c\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5355\u72ec\u7684\u67e5\u9605\u8868\u683c\u5c06\u4e24\u4e2a\u5b57\u6bcd\u7684\u56fd\u5bb6/\u5730\u533a\u4ee3\u7801\u94fe\u63a5\u5230\u5b8c\u6574\u7684\u56fd\u5bb6/\u5730\u533a\u540d\u79f0\u3002\n\u4f46\u662f\uff0c\u60a8\u53ef\u80fd\u4e0d\u4e00\u5b9a\u9700\u8981\u7ef4\u62a4\u67e5\u627e\u8868(\u6709\u4eba\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u66f4\u6539\u56fd\u5bb6\u540d\u79f0\u5e76\u4e0d\u4e00\u5b9a\u8981\u5728\u8bbf\u95ee\u8fc7\u7684\u56fd\u5bb6\u5217\u8868\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539)\u3002\u60a8\u53ef\u80fd\u8fd8\u4f1a\u53d1\u73b0\uff0c\u5c06\u8bbf\u95ee\u8fc7\u7684\u56fd\u5bb6/\u5730\u533a\u5217\u8868\u4fdd\u5b58\u5728\u6bcf\u4eba\u4e00\u6761\u8bb0\u5f55\u4e2d\u4f1a\u66f4\u6709\u5e2e\u52a9\uff0c\u800c\u4e0d\u662f\u6bcf\u4eba\u53ef\u80fd\u9700\u8981\u5904\u7406\u6570\u5341\u6761\u8bb0\u5f55\u3002\u4f7f\u7528\u6570\u7ec4\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u53bb\u6389\u591a\u4f59\u7684\u8868\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u62e5\u6709\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4eba\u7684\u591a\u884c\u3002\n\u6211\u9047\u5230\u7684\u5176\u4ed6\u51e0\u4e2a\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7c7b\u578b\u7684\u793a\u4f8b\u6709\uff1a\u65f6\u95f4\u5e8f\u5217\u6570\u636e(\u5982\u80a1\u7968\u4ef7\u683c)\u3001\u6807\u8bb0(\u7528\u4e8e\u5206\u7c7b\u6216\u793e\u4ea4\u5a92\u4f53)\u3001\u4ece\u4eea\u5668\u83b7\u53d6\u7684\u8bfb\u6570\u6216\u6d4b\u91cf\u3002\u53e6\u4e00\u4e2a\u597d\u7684\u7ecf\u9a8c\u6cd5\u5219\u53ef\u80fd\u662f\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u6709\u4f7f\u7528\u6570\u7ec4\u7684\u5730\u65b9\uff0c\u5e76\u4e14\u60a8\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u5728\u83b7\u53d6\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u5219\u5c06\u6570\u636e\u5b58\u50a8\u4e3a\u6570\u7ec4\u7c7b\u578b\u53ef\u4ee5\u4e3a\u60a8\u8282\u7701\u5bf9\u67e5\u627e\u8868\u7684\u591a\u4e00\u6b21\u8fde\u63a5\u3002\n\u6211\u559c\u6b22\u8fd9\u6837\u53ef\u89c6\u5316\u679a\u4e3e\uff1a\u5982\u679c\u6211\u53ea\u9700\u8981\u7528\u4e0b\u62c9\u5217\u8868\u4e2d\u7684\u503c\u586b\u5145\u4e00\u5217\uff0c\u90a3\u4e48\u8be5\u4e0b\u62c9\u5217\u8868\u4e2d\u4f1a\u6709\u4ec0\u4e48\u5462\uff1f\u679a\u4e3e\u7c7b\u578b\u81ea\u5e26\u4e00\u7ec4\u53ef\u63a5\u53d7\u7684\u503c\u3002(\u51fa\u4e8e\u597d\u5947\uff1a\u679a\u4e3e\u7c7b\u578b\u5728\u540d\u4e3apg_enum\u7684\u7cfb\u7edf\u76ee\u5f55\u4e2d\u6ce8\u518c\uff0c\u5176\u4e2d\u679a\u4e3e\u503c\u5728\u5185\u90e8\u8868\u793a\u4e3a\u6574\u6570\uff0c\u6bcf\u4e2a\u679a\u4e3e\u201c\u6807\u7b7e\u201d\u6216\u540d\u79f0\u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32\u3002)\u3002\n\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u4f1a\u60f3\uff1a\u201c\u4f46\u8fd9\u542c\u8d77\u6765\u4e0d\u50cf\u662f\u4e00\u4e2a\u68c0\u67e5\u7ea6\u675f\u5417\uff1f\u6216\u8005\u53ef\u80fd\u662f\u5f15\u7528\u67e5\u627e\u8868\u7684\u5916\u952e\uff1f\u201c\u3002\u4f60\u6ca1\u6709\u504f\u79bb\u6b63\u8f68\uff01\u8fd9\u4e09\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u56e0\u6b64\u5176\u4e2d\u4e00\u79cd\u65b9\u6cd5\u53ef\u80fd\u6bd4\u5176\u4ed6\u65b9\u6cd5\u66f4\u9002\u5408\u7279\u5b9a\u7684\u7528\u4f8b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u7684\u53ef\u63a5\u53d7\u503c\u5217\u8868\u5c06\u4e0d\u65ad\u66f4\u6539\uff0c\u6211\u4f1a\u9009\u62e9\u67e5\u627e\u8868\uff0c\u56e0\u4e3a\u4fee\u6539\u8868\u901a\u5e38\u6bd4\u4fee\u6539\u679a\u4e3e\u6216\u7ea6\u675f\u66f4\u5bb9\u6613\u3002\u6240\u4ee5\uff0c\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u53d6\u51b3\u4e8e\u60a8\u7684\u7279\u5b9a\u9700\u6c42\uff0c\u5c3d\u7ba1\u6211\u786e\u5b9e\u611f\u89c9\u5230\uff0c\u5c06\u8fd9\u4e09\u79cd\u65b9\u6cd5\u89c6\u4e3a\u89e3\u51b3\u95ee\u9898\u7684\u591a\u4e2a\u6f5c\u5728\u5de5\u5177\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\u60a8\u53ef\u80fd\u4f1a\u8bf4\uff0c\u201c\u8303\u56f4\u201d\u53ef\u4ee5\u63cf\u8ff0\u67d0\u4e00\u7ec4\u503c\uff0c\u5373\u5f53\u67d0\u7269\u201c\u5728\u67d0\u4e2a\u8303\u56f4\u5185\u201d\u65f6\uff0c\u5b83\u5c31\u662f\u8be5\u96c6\u5408\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u5b83\u542c\u8d77\u6765\u53ef\u80fd\u4e0e\u679a\u4e3e\u76f8\u8ddd\u4e0d\u8fdc\u3002\u6211\u53d1\u73b0\u628a\u8303\u56f4\u7c7b\u578b\u7684\u4e3b\u8981\u7279\u5f81\u60f3\u6210\u5982\u4e0b\u662f\u6709\u5e2e\u52a9\u7684\uff1a\na)\u4f60\u4e00\u60f3\u5230\u4e00\u4e2a\u533a\u95f4\u5c31\u4f1a\u60f3\u5230\u5b83\u7684\u754c\u9650(\u5373\u4e0b\u9650\u548c\u4e0a\u9650)\u3002b)\u8303\u56f4\u5185\u7684\u503c\u5177\u6709\u56fa\u6709\u7684\u987a\u5e8f\u3002\n\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u60a8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u4e0d\u5b58\u5728\u9650\u5236\u7684\u8303\u56f4\u7c7b\u578b(\u56e0\u6b64\u8303\u56f4\u662f\u65e0\u9650\u7684)\uff0c\u4f46\u662f\u5373\u4f7f\u662f\u4e00\u4e2a\u65e0\u754c\u8303\u56f4\u4e5f\u4ecd\u7136\u6709\u4e00\u4e2a\u987a\u5e8f\u3002\n\u8303\u56f4\u7c7b\u578b\u9002\u7528\u4e8e\u8bf8\u5982\u5e74\u9f84\u3001\u4ef7\u683c\u548c\u91cd\u91cf\u7b49\u6570\u5b57\u6570\u636e\uff1b\u65e5\u671f/\u65f6\u95f4\u6570\u636e\u4e5f\u662f\u5178\u578b\u7684\u5019\u9009\u7c7b\u578b\u3002\u6211\u63a8\u8350\u9605\u8bfbJonathan Katz\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u4ed6\u5728\u5176\u4e2d\u6df1\u5165\u7814\u7a76\u4e86\u5982\u4f55\u5c06\u65e5\u671f\u8303\u56f4\u7c7b\u578b\u7528\u4e8e\u65e5\u7a0b\u5b89\u6392\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u4e9b\u53ea\u662fPostgreSQL\u4e2d\u60a8\u53ef\u80fd\u6ca1\u6709\u4f7f\u7528\u8fc7\u6216\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u51e0\u79cd\u6570\u636e\u7c7b\u578b\u3002\u8fd9\u4e9b\u66f4\u201c\u9ad8\u7ea7\u201d\u7684\u6570\u636e\u7c7b\u578b\u7684\u9177\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u7b80\u5316\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5e76\u8ba9\u60a8\u7f16\u5199\u66f4\u7b80\u6d01\u7684\u6570\u636e\u5e93\u67e5\u8be2\u3002\n\u4f8b\u5982\uff0c\u6709\u4e00\u4e9b\u5185\u7f6e\u8fd0\u7b97\u7b26\u53ef\u4ee5\u4e0e\u8303\u56f4\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff0c\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u627e\u5230\u4e24\u4e2a\u8303\u56f4\u7684\u4ea4\u96c6\uff0c\u6216\u786e\u5b9a\u67d0\u4e2a\u503c\u662f\u5426\u5728\u8be5\u8303\u56f4\u5185\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u8bbe\u7f6e\u4e86\u4e24\u4e2a\u5355\u72ec\u7684\u5217\u6765\u8868\u793a\u8303\u56f4\u9650\u5236(\u4e00\u4e2a\u5e38\u89c1\u7684\u5217\u662f\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4)\uff0c\u60a8\u5c31\u4e0d\u80fd\u5f97\u5230\u76f8\u540c\u7684\u7b54\u6848\u3002\u4f46\u662f\uff0c\u7ed3\u5408\u4f7f\u7528\u8303\u56f4\u8fd0\u7b97\u7b26\u548c\u4e13\u95e8\u7684\u7d22\u5f15(\u5982GIST)\u53ef\u80fd\u6709\u52a9\u4e8e\u4ee5\u66f4\u5feb\u3001\u66f4\u9ad8\u6548\u7684\u65b9\u5f0f\u83b7\u5f97\u6240\u9700\u5185\u5bb9\u3002\n\u6211\u4eec\u5728Crunchy\u6570\u636e\u4ea4\u4e92\u5b66\u4e60\u95e8\u6237\u4e2d\u5173\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u7b2c\u4e8c\u95e8\u8bfe\u7a0b\u91cd\u70b9\u4ecb\u7ecd\u4e0a\u8ff0\u4e09\u79cd\u7c7b\u578b\u4ee5\u53caXML\u3002\u5b83\u5141\u8bb8\u60a8\u4f7f\u7528\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u4e14\u8fd8\u5411\u60a8\u4ecb\u7ecd\u4e86\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u9644\u5e26\u7684\u4e00\u4e9b\u6709\u7528\u7684\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u3002\n\u60a8\u662f\u5426\u66fe\u7ecf\u4e0d\u5f97\u4e0d\u66f4\u6539\u60a8\u7684\u6570\u636e\u7ed3\u6784\u5e76\u5c06\u5176\u4ece\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u8fc1\u79fb\u5230\u66f4\u9ad8\u7ea7\u7684\u6570\u636e\u7c7b\u578b(\u5982\u4e0a\u8ff0\u4e09\u79cd\u7c7b\u578b)\uff1f\u4f60\u7684\u51b3\u7b56\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f\u4f60\u7684\u7ecf\u5386\u5982\u4f55\uff1f\u8bf7\u5728\u4e0b\u9762\u53d1\u8868\u8bc4\u8bba\u3002", "note_en": "This post is the second in a two-part series -- read the first here:  Going Back to Basics with PostgreSQL Data Types.\n In my last post, I shared some interesting (and at times surprising) things that I learned while digging into data types in PostgreSQL. Data types like numeric, integer, date, and char/varchar exist in every other relational database system since the need to work with such data is pretty much a given. The implementation may vary somewhat between systems, but generally there are standard ways you\u2019ll want to process and analyze these types of data (e.g. perform mathematical calculations, find the length of a character string, cast from one type to another, etc).\n In Postgres, we have a few more data types that may not be as well known even for experienced developers. Let\u2019s take a quick look at arrays, enum, and range types.\n  Arrays are likely something familiar, but in case you\u2019re new to programming: it\u2019s a data type meant to hold a collection of things. In some languages such as JavaScript, the array itself doesn\u2019t have to hold values that are of the same data type. In Postgres, however, the array elements must all be of the same type - the table definition alludes to it:\n  As we can see above with the countries column, the array declaration must have the type name of the values that array will contain.\n My internet searching seems to indicate that the array type is well suited for data that doesn\u2019t have to strictly follow the rules of normalization. Take the example above (adapted from an example in the book  Troubleshooting PostgreSQL): the countries_visited table stores a list of countries that each person has been to. If you wanted to normalize the data, you might go instead with a table that stores a combination of the person and each individual country visited, resulting in up to dozens of rows per person. You might also have a separate lookup table to link a two-letter country code to the full country name.\n However, you may not\u00a0 have a need to maintain a lookup table (one could argue that a change in a country\u2019s name doesn\u2019t have to have a corresponding change in the list of visited countries). You may also find it more helpful to keep the list of countries visited in one record per person, instead of having to deal with potentially dozens of records per person. Using an array means you can do away with the extra table, and you don\u2019t need to have multiple rows that pertain to the same person.\n A few other examples I\u2019ve come across where the array type could be used are: time series data (such as stock prices), tagging (for categories, or social media), readings or measurements taken from an instrument. Another good rule of thumb might be, if there are places in your application code where you\u2019re using arrays and you often find yourself fetching entire data sets, storing the data as an array type could save you one more join against a lookup table.\n  I like to visualize enums this way: if I needed to populate a column with only values from a dropdown, what would be on that dropdown list? An enum type comes with its own set of acceptable values. (For the curious: enum types are registered in a system catalog called  pg_enum, where the enum values are represented internally as integers, and each enum \u201clabel\u201d or name is stored as a character string.)\n Some of you may be wondering: \u201cBut doesn\u2019t that just sound like a CHECK constraint? Or perhaps foreign keys referencing a lookup table?\u201d You\u2019re not off track! These three are implemented differently, so one method might be a better fit for a particular use case than the others. For example, if my list of acceptable values is going to change constantly, I\u2019d opt for a lookup table since it\u2019s generally easier to modify a table than modify enums or constraints. So, it boils down to what your specific requirements are, although I do get the sense that it\u2019s okay to view these three methods I tas multiple potential tools to solve a problem.\n  You might say that a \u201crange\u201d can describe some set of values, i.e. when something is \u201cwithin a range,\u201d it is part of that set. So, it may not sound far off from enums on a surface level.  I find it helpful to think of a range type&#39;s key characteristics as:\n a) You can\u2019t think of a range without thinking of its bounds (i.e. lower and upper limits). b) The values within a range have an inherent sequence.\n Technically, you could specify a range type where the limits do not exist (so the range is infinite), but even an  unbounded range still has an order within it.\n Range types work well for numeric data such as age, price, and weight; date/time data is also a typical candidate. I recommend checking out  Jonathan Katz\u2019s blog post where he does a deep dive into  using the date range type for a scheduling application.\n  These are just a few data types in PostgreSQL that you might not have worked with or been aware of. The cool thing about these more \u201cadvanced\u201d data types is that they may help simplify your application code as well as let you write more concise database queries.\n For example, there are some  built-in operators that you can use with range types that let you easily find the intersection of two ranges, or determine whether a value falls within the range. That\u2019s not to say that you can\u2019t arrive at the same answers if you had set up two individual columns that represent the range limits (a common one is start time and end time). But using the range operators combined with a specialized index such as  GiST may help get what you need in a quicker and more efficient way.\n Our  second course on data types in the Crunchy Data interactive learning portal focuses on the above three types plus XML. It lets you play around with these data types with a little sample data, and it also introduces you to some helpful functions and operators that come with these data types.\n Have you ever had to change your data structure and migrate from a common data type to a more advanced one like the above three? What was your decision-making process like, and how did the experience go for you? Comment below.", "posttime": "2020-05-28 03:51:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u53ef\u80fd", "title": "\u9ad8\u7ea7PostgreSQL\u6570\u636e\u7c7b\u578b", "title_en": "Advanced PostgreSQL Data Types", "transed": 1, "url": "https://info.crunchydata.com/blog/advanced-postgresql-data-types", "via": "", "real_tags": ["\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "cbc250efce170fc4478ab1e0968dd767.jpg", "infoid": 1003974, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u767d\u5bab\u5c06\u76ee\u5149\u6295\u5411\u4e86\u4e00\u540dTwitter\u5458\u5de5\uff0c\u6b64\u524d\u8be5\u516c\u53f8\u5728\u603b\u7edf\u7684\u4e24\u6761\u63a8\u6587\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u4e8b\u5b9e\u6838\u67e5\u94fe\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u9009\u6c11\u6b3a\u8bc8\u6709\u5173\u7684\u8c0e\u8a00\u548c\u9519\u8bef\u4fe1\u606f\u3002\u5468\u4e09\u65e9\u4e0a\uff0c\u798f\u514b\u65af\u65b0\u95fb(Fox News)\u7387\u5148\u63d0\u51fa\u4e86\u8fd9\u4e00\u6307\u63a7\uff0c\u7279\u6717\u666e\u987e\u95ee\u51ef\u8389\u5b89\u00b7\u5eb7\u97e6(Kellyanne Conway)\u5728\u6316\u6398\u4e86\u4e00\u4e9b\u6279\u8bc4\u7279\u6717\u666e\u3001\u5eb7\u5a01\u548c\u653f\u5e9c\u7684\u63a8\u6587\u540e\uff0c\u5c06\u76ee\u6807\u5bf9\u51c6\u4e86Twitter\u7684\u7f51\u7ad9\u5b8c\u6574\u6027\u4e3b\u7ba1\u5c24\u5c14\u00b7\u7f57\u65af(Yoel Roth)\u3002\n\u5eb7\u5a01\u79f0\u8fd9\u540d\u5458\u5de5\u201c\u53ef\u6015\u201d\uff0c\u5e76\u6307\u793a\u542c\u4f17\u53bb\u8ffd\u67e5\u4ed6\u3002\u5979\u5728\u76f4\u64ad\u4e2d\u8bf4\uff1a\u201c\u65e7\u91d1\u5c71\u7684\u4eba\u53bb\u53eb\u9192\u4ed6\uff0c\u544a\u8bc9\u4ed6\u4ed6\u9a6c\u4e0a\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u8ffd\u968f\u8005\u3002\u201d\u8fd9\u901a\u7535\u8bdd\u7acb\u5373\u88ab\u53f3\u7ffc\u4eba\u58eb\u548c\u7279\u6717\u666e\u7684\u652f\u6301\u8005\u63a5\u542c\uff0c\u4ed6\u4eec\u5f00\u59cb\u5206\u4eab\u8fd9\u540d\u5458\u5de5\u63a8\u6587\u7684\u622a\u56fe\u3002\u636e\u201c\u8bae\u5b9a\u4e66\u201d\u62a5\u9053\uff0c\u7f57\u65af\u5df2\u7ecf\u9762\u4e34\u7740\u5927\u91cf\u7684\u8650\u5f85\u548c\u9a9a\u6270\uff0c\u5305\u62ec\u591a\u8d77\u6b7b\u4ea1\u5a01\u80c1\u3002\nTwitter\u4e0d\u4f1a\u5c31\u7f57\u65af\u7684\u63a8\u6587\u5bf9\u4ed6\u91c7\u53d6\u4efb\u4f55\u884c\u52a8\uff0c\u8be5\u516c\u53f8\u544a\u8bc9BuzzFeed\u65b0\u95fb\uff0c\u4ed6\u5bf9\u4e8b\u5b9e\u6838\u67e5\u6ca1\u6709\u8d23\u4efb\u3002Twitter\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9The Verge\uff1a\u201cTwitter\u6ca1\u6709\u4eba\u5bf9\u6211\u4eec\u7684\u653f\u7b56\u6216\u6267\u6cd5\u884c\u52a8\u8d1f\u8d23\uff0c\u770b\u5230\u4e2a\u522b\u5458\u5de5\u6210\u4e3a\u516c\u53f8\u51b3\u7b56\u7684\u76ee\u6807\u662f\u4ee4\u4eba\u9057\u61be\u7684\u3002\u201d\n\u5468\u4e8c\u4e0b\u5348\u665a\u4e9b\u65f6\u5019\uff0c\u63a8\u7279\u5bf9\u7279\u6717\u666e\u7684\u63a8\u6587\u8fdb\u884c\u4e86\u4e8b\u5b9e\u6838\u67e5\uff0c\u9644\u4e0a\u4e86\u65e8\u5728\u6f84\u6e05\u90ae\u5bc4\u6295\u7968\u4e2d\u5e38\u89c1\u8c0e\u8a00\u548c\u9519\u8bef\u4fe1\u606f\u7684\u4fe1\u606f\uff0c\u5bfc\u81f4\u4e86\u7316\u7357\u7684\u9009\u6c11\u6b3a\u8bc8\uff0c\u8fd9\u662f\u4e0d\u771f\u5b9e\u7684\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u8bc1\u636e\u652f\u6301\u3002\u636eTwitter\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u79f0\uff0c\u8fd9\u4e9b\u63a8\u6587\u201c\u5305\u542b\u5173\u4e8e\u6295\u7968\u8fc7\u7a0b\u7684\u6f5c\u5728\u8bef\u5bfc\u6027\u4fe1\u606f\uff0c\u5e76\u5df2\u88ab\u8d34\u4e0a\u6807\u7b7e\uff0c\u4ee5\u63d0\u4f9b\u6709\u5173\u90ae\u5bc4\u9009\u7968\u7684\u989d\u5916\u4e0a\u4e0b\u6587\u3002\u201d\u70b9\u51fb\u6216\u70b9\u51fb\u7279\u6717\u666e\u63a8\u6587\u6240\u9644\u7684\u94fe\u63a5\uff0c\u5373\u201c\u83b7\u53d6\u90ae\u5bc4\u9009\u7968\u7684\u4e8b\u5b9e\u201d\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e00\u7cfb\u5217\u63ed\u7a7f\u8c0e\u8a00\u7684\u65b0\u95fb\u6587\u7ae0\u548c\u94fe\u63a5\u3002\n\u7279\u6717\u666e\u548c\u5171\u548c\u515a\u5168\u56fd\u59d4\u5458\u4f1a\u7684\u76ee\u6807\u662f\u8bd5\u56fe\u6269\u5927\u90ae\u5bc4\u6295\u7968\u7684\u5dde\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4e00\u79cd\u5e2e\u52a9\u8d4b\u4e88\u66f4\u591a\u9009\u6c11\u9009\u4e3e\u6743\u7684\u65b9\u5f0f\uff0c\u5e76\u5728\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u671f\u95f4\u4e3a\u6295\u7968\u521b\u9020\u66f4\u5b89\u5168\u7684\u6761\u4ef6\uff0c\u56e0\u4e3a\u5386\u53f2\u4e0a\u88ab\u5265\u593a\u516c\u6c11\u6743\u7684\u9009\u6c11\u4e2d\u66f4\u9ad8\u7684\u6295\u7968\u7387\u5f80\u5f80\u4f1a\u635f\u5bb3\u5171\u548c\u515a\u5019\u9009\u4eba\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5171\u548c\u515a\u5168\u56fd\u59d4\u5458\u4f1a\u4e0a\u5468\u672b\u8d77\u8bc9\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5dde\u957f\u52a0\u6587\u00b7\u7ebd\u745f\u59c6(Gavin Newsom)\u4e3a2020\u5e74\u5927\u9009\u5236\u5b9a\u7684\u90ae\u5bc4\u6295\u7968\u6269\u5927\u8ba1\u5212\uff0c\u58f0\u79f0\u90ae\u5bc4\u6295\u7968\u5bfc\u81f4\u9009\u6c11\u6b3a\u8bc8\uff0c\u5e76\u79f0\u6b64\u4e3e\u662f\u201c\u975e\u6cd5\u548c\u539a\u989c\u65e0\u803b\u7684\u6743\u529b\u593a\u53d6\u201d\u3002\n\u7279\u6717\u666e\u4e00\u76f4\u5c06\u77db\u5934\u5bf9\u51c6\u90a3\u4e9b\u6ca1\u6709\u5bf9\u4ed6\u8868\u73b0\u51fa\u6beb\u4e0d\u542b\u7cca\u7684\u5949\u627f\u7684\u79d1\u6280\u516c\u53f8\u3002\u63a8\u7279\u51b3\u5b9a\u7ed9\u81ea\u5df1\u7684\u8c0e\u8a00\u8d34\u4e0a\u6807\u7b7e\uff0c\u8fd9\u8ba9\u4ed6\u5bf9\u516c\u53f8\u8fdb\u884c\u4e86\u731b\u70c8\u62a8\u51fb\u3002\u7279\u6717\u666e\u7acb\u5373\u4ee5\u5a01\u80c1\u4fe1\u606f\u56de\u5e94\u63a8\u7279\u7684\u884c\u4e3a\uff0c\u5468\u4e8c\u665a\u95f4\u5728\u4ed6\u7684\u63a8\u7279\u8d26\u6237\u4e0a\u5199\u9053\uff0c\u8be5\u516c\u53f8\u201c\u73b0\u5728\u6b63\u5728\u5e72\u98842020\u5e74\u603b\u7edf\u9009\u4e3e\u201d\uff0c\u5e76\u91cd\u7533\u4e86\u4ed6\u7684\u865a\u5047\u58f0\u660e\uff0c\u5373\u90ae\u5bc4\u9009\u7968\u201c\u5c06\u5bfc\u81f4\u5927\u89c4\u6a21\u8150\u8d25\u548c\u821e\u5f0a\u201d\u3002\n\u5468\u4e09\uff0c\u7279\u6717\u666e\u5a01\u80c1\u8981\u5bf9\u8be5\u516c\u53f8\u91c7\u53d6\u201c\u91cd\u5927\u884c\u52a8\u201d\uff0c\u5e76\u8868\u793a\u4ed6\u5c06\u76d1\u7ba1\u6216\u5173\u95ed\u4efb\u4f55\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u3002\u867d\u7136\u4ed6\u6ca1\u6709\u6743\u529b\u5173\u95ed\u884c\u4f7f\u5baa\u6cd5\u6743\u5229\u7684\u79c1\u8425\u516c\u53f8\uff0c\u4f46\u7279\u6717\u666e\u7684\u8a00\u8bba\u5347\u7ea7\uff0c\u518d\u52a0\u4e0a\u9488\u5bf9\u4e2a\u4eba\u5458\u5de5\uff0c\u662f\u4ed6\u7684\u6587\u5316\u6218\u4e89\u4e2d\u4ee4\u4eba\u4e0d\u5b89\u7684\u65b0\u8fdb\u5c55\u3002", "note_en": "The White House has set its sights on a single Twitter employee after the company  attached a fact-checking link to two of the president\u2019s tweets containing lies and misinformation related to voter fraud. The charge was led on  Fox News Wednesday morning, with Trump advisor Kellyanne Conway targeting Twitter\u2019s head of site integrity, Yoel Roth, after digging up some tweets that were critical of Trump, Conway, and the administration.\n Conway called the employee \u201chorrible\u201d and directed listeners to go after him. \u201cSomebody in San Francisco go wake him up and tell him he\u2019s about to get a lot more followers,\u201d she said on air. Immediately, the call was picked up by right-wing personalities and Trump supporters, who began sharing screenshots of the employee\u2019s tweets. Roth is already facing a torrent of abuse and harassment, including multiple death threats,  reports  Protocol.\n Twitter won\u2019t be taking any action against Roth for his tweets, and the company  tells  BuzzFeed News  he was not responsible for the fact-checks. \u201cNo one person at Twitter is responsible for our policies or enforcement actions, and it\u2019s unfortunate to see individual employees targeted for company decisions,\u201d a Twitter spokesperson tells  The Verge.\n  Twitter  fact-checked Trump\u2019s tweets late on Tuesday afternoon by attaching information designed to clarify common lies and misinformation on mail-in voting resulting in rampant voter fraud, which is untrue and unsupported by any evidence. According to a Twitter spokesperson, the tweets \u201ccontain potentially misleading information about voting processes and have been labeled to provide additional context around mail-in ballots.\u201d Tapping or clicking the link attached to Trump\u2019s tweets that says \u201cGet the facts about mail-in ballots\u201d  leads to a series of news articles and links debunking the lies.\n Trump and the Republican National Committee are targeting states trying to expand mail-in voting as a way to help enfranchise more voters and to create safer conditions for voting during the COVID-19 pandemic, as  higher voter turnout rates among historically disenfranchised voters tend to harm Republican candidates. The RNC, in fact,  sued California over the weekend for Gov. Gavin Newsom\u2019s mail-in voting expansion plan for the 2020 election, claiming mail-in voting leads to voter fraud and calling the move an \u201cillegal and brazen power grab.\u201d\n Trump has  consistently targeted tech companies that don\u2019t show him unquestioning adulation. Twitter\u2019s decision to label his falsehoods sent him on a tirade against the company. Trump immediately responded to Twitter\u2019s actions with threatening messages,  writing on his Twitter account on Tuesday evening that the company is \u201cnow interfering in the 2020 Presidential Election,\u201d and reiterating his false statement that mail-in ballots \u201cwill lead to massive corruption and fraud.\u201d\n Trump on Wednesday then threatened \u201cbig action\u201d against the company and said he will regulate or shut down any social media platform. While he doesn\u2019t have the authority to shut down private companies for exercising their constitutional rights, Trump\u2019s escalation of rhetoric, combined with the targeting of individual employees, is a disturbing new advancement in his culture war.", "posttime": "2020-05-28 03:51:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u7ec7,house", "title": "\u767d\u5bab\u7ec4\u7ec7\u9a9a\u6270Twitter\u5458\u5de5\uff0c\u7279\u6717\u666e\u5a01\u80c1\u516c\u53f8", "title_en": "White House organizes harassment of Twitter employee as Trump threatens company", "transed": 1, "url": "https://www.theverge.com/2020/5/27/21272210/trump-twitter-fact-check-admin-targeting-employee-voter-fraud-controversy", "via": "", "real_tags": ["\u7ec4\u7ec7", "house"]}, {"category": "", "categoryclass": "", "imagename": "1270984a27ad82c9cb3e4bc7d07901c0.png", "infoid": 1003973, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OpenSSH\uff0c\u6700\u6d41\u884c\u7684\u8fde\u63a5\u548c\u7ba1\u7406\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u5de5\u5177\uff0c\u4eca\u5929\u5ba3\u5e03\u8ba1\u5212\u653e\u5f03\u5bf9\u5176SHA-1\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6848\u7684\u652f\u6301\u3002\n\u8be5\u7b97\u6cd5\u57282017\u5e742\u6708\u7684\u4e00\u6b21\u5b9e\u9645\u653b\u51fb\u4e2d\u88ab\u7834\u89e3\uff0c\u5f53\u65f6\u8c37\u6b4c\u5bc6\u7801\u5b66\u5bb6\u62ab\u9732\u4e86Shatted\uff0c\u8fd9\u9879\u6280\u672f\u53ef\u4ee5\u8ba9\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u770b\u8d77\u6765\u50cf\u662f\u62e5\u6709\u76f8\u540c\u7684SHA-1\u6587\u4ef6\u7b7e\u540d\u3002\n\u5f53\u65f6\uff0c\u5236\u9020SHA-1\u78b0\u649e\u88ab\u8ba4\u4e3a\u662f\u8ba1\u7b97\u6602\u8d35\u7684\uff0c\u8c37\u6b4c\u4e13\u5bb6\u8ba4\u4e3aSHA-1\u4ecd\u7136\u53ef\u4ee5\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u81f3\u5c11\u4e94\u5e74\uff0c\u76f4\u5230\u6210\u672c\u4e0b\u964d\u3002\n\u7136\u800c\uff0c\u968f\u540e\u57282019\u5e745\u6708\u548c2020\u5e741\u6708\u53d1\u5e03\u7684\u7814\u7a76\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e00\u79cd\u66f4\u65b0\u7684\u65b9\u6cd5\uff0c\u5c06SHA-1\u9009\u62e9\u524d\u7f00\u51b2\u7a81\u653b\u51fb\u7684\u6210\u672c\u5206\u522b\u964d\u4f4e\u523011\u4e07\u7f8e\u5143\u548c5\u4e07\u7f8e\u5143\u4ee5\u4e0b\u3002\n\u5bf9\u4e8e\u6c11\u65cf\u56fd\u5bb6\u548c\u9ad8\u7aef\u7f51\u7edc\u72af\u7f6a\u96c6\u56e2\u7b49\u9ad8\u7ea7\u5a01\u80c1\u53c2\u4e0e\u8005\u6765\u8bf4\uff0c\u5982\u679c\u4ed6\u4eec\u53ef\u4ee5\u751f\u6210SSH\u8eab\u4efd\u9a8c\u8bc1\u5bc6\u94a5\uff0c\u6388\u4e88\u4ed6\u4eec\u5bf9\u5173\u952e\u670d\u52a1\u5668\u7684\u8fdc\u7a0b\u4e14\u672a\u88ab\u68c0\u6d4b\u5230\u7684\u8bbf\u95ee\u6743\u9650\uff0c50,000\u7f8e\u5143\u53ea\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4ee3\u4ef7\u3002\nOpenSSH\u5f00\u53d1\u4eba\u5458\u4eca\u5929\u8868\u793a\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u7248\u672c\u4e2d\u9ed8\u8ba4\u7981\u7528\u516c\u94a5\u7b7e\u540d\u7b97\u6cd5\u3002\nOpenSSH\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528&#34\uff1bssh-rsa&#34\uff1b\u6a21\u5f0f\u751f\u6210SSH\u8eab\u4efd\u9a8c\u8bc1\u5bc6\u94a5\u3002\u5176\u4e2d\u4e00\u4e2a\u5bc6\u94a5\u5b58\u50a8\u5728\u7528\u6237\u60f3\u8981\u767b\u5f55\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u53e6\u4e00\u4e2a\u5b58\u50a8\u5728\u7528\u6237\u7684\u672c\u5730OpenSSH\u5ba2\u6237\u7aef\u4e2d\uff0c\u5141\u8bb8\u7528\u6237\u8bbf\u95ee\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u5fc5\u5728\u6bcf\u6b21\u767b\u5f55\u65f6\u8f93\u5165\u5bc6\u7801\uff0c\u800c\u662f\u63d0\u4f9b\u672c\u5730\u8eab\u4efd\u9a8c\u8bc1\u5bc6\u94a5\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cOpenSSH ssh-rsa\u6a21\u5f0f\u4f7f\u7528SHA-1\u6563\u5217\u51fd\u6570\u751f\u6210\u8fd9\u4e9b\u5bc6\u94a5\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u5bc6\u94a5\u5bb9\u6613\u53d7\u5230SHAterred\u653b\u51fb\uff0c\u4ece\u800c\u5141\u8bb8\u5a01\u80c1\u884c\u4e3a\u8005\u751f\u6210\u91cd\u590d\u7684\u5bc6\u94a5\u3002\nOpenSSH DEVS\u4eca\u5929\u8868\u793a\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u5c3d\u7ba1\u5b58\u5728\u66f4\u597d\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u8be5\u7b97\u6cd5\u4ecd\u7136\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8fd9\u662f\u6700\u521d\u7684SSH RFC\u6307\u5b9a\u7684\u552f\u4e00\u5269\u4f59\u7684\u516c\u94a5\u7b7e\u540d\u7b97\u6cd5\u3002\nOpenSSH\u56e2\u961f\u73b0\u5728\u8981\u6c42\u670d\u52a1\u5668\u6240\u6709\u8005\u68c0\u67e5\u4ed6\u4eec\u7684\u5bc6\u94a5\u662f\u5426\u662f\u4f7f\u7528\u9ed8\u8ba4\u7684ssh-rsa\u6a21\u5f0f\u751f\u6210\u7684\uff0c\u7136\u540e\u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u5f0f\u751f\u6210\u65b0\u7684\u5bc6\u94a5\u3002\nOpenSSH\u56e2\u961f\u8bf4\uff0c\u63a8\u8350\u7684\u6a21\u5f0f\u662frsa-sha2-256/512(OpenSSH 7.2\u4ee5\u540e\u652f\u6301)\u3001ssh-ed25519(OpenSSH 6.5\u4ee5\u540e\u652f\u6301)\u6216ecdsa-sha2-nistp256/384/521(OpenSSH 5.7\u4ee5\u540e\u652f\u6301)\u3002\n\u8fd9\u662f\u6700\u8fd1\u516c\u544a\u4e2d\u6700\u7cbe\u5f69\u7684\u90e8\u5206\u3002\u5bf9\u4e8eOpenSSH\u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528\u57fa\u4e8essh-rsa SHA-1\u7684\u5bc6\u94a5\u7684\u6240\u6709\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u8bbe\u5907\uff0c\u8bf7\u9ed8\u54c0\u4e00\u5206\u949f(&amp\uff1bs)\u3002pic.twitter.com/zf5VewugC6\u3002\n-\u80e1\u91cc\u5965(@juliocesarfort)2020\u5e745\u670827\u65e5\u3002\nOpenSSH\u9879\u76ee\u5c06\u5728\u672a\u6765(\u76ee\u524d\u672a\u6307\u5b9a)\u7248\u672c\u4e2d\u9ed8\u8ba4\u7981\u7528ssh-rsa\u6a21\u5f0f\uff0c\u7136\u800c\uff0c\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u4eec\u8fd8\u8ba1\u5212\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u542f\u7528UpdateHostKeys\u529f\u80fd\uff0c\u4ee5\u5141\u8bb8\u670d\u52a1\u5668\u6240\u6709\u8005\u8f7b\u677e\u3001\u81ea\u52a8\u5730\u4ece\u65e7\u7684ssh-rsa\u6a21\u5f0f\u8fc1\u79fb\u5230\u66f4\u597d\u7684\u8eab\u4efd\u9a8c\u8bc1\u7b97\u6cd5\u3002\n\u4f9d\u8d56OpenSSH\u7ba1\u7406\u8fdc\u7a0b\u7cfb\u7edf\u7684\u670d\u52a1\u5668\u6240\u6709\u8005\u53ef\u4ee5\u5728OpenSSH8.3\u66f4\u6539\u65e5\u5fd7\u4e2d\u627e\u5230\u6709\u5173\u5982\u4f55\u6d4b\u8bd5\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u662f\u5426\u6709\u5f31\u7684\u57fa\u4e8eSHA-1\u7684\u5bc6\u94a5\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5728\u4ee5\u524d\u7684\u7248\u672c8.2\u4e2d\uff0cOpenSSH\u56e2\u961f\u8fd8\u6dfb\u52a0\u4e86\u5bf9\u57fa\u4e8eFIDO/U2F\u7684\u786c\u4ef6\u5b89\u5168\u5bc6\u94a5\u7684\u652f\u6301\uff0c\u8be5\u5bc6\u94a5\u8fd8\u53ef\u4ee5\u7528\u6765\u4ee5\u66f4\u5b89\u5168\u7684\u65b9\u5f0f\u767b\u5f55\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002", "note_en": "OpenSSH, the most popular utility for connecting to and managing remote servers, has announced today plans to drop support for its SHA-1 authentication scheme.\n  The algorithm was broken in a practical, real-world attack in February 2017, when Google cryptographers disclosed  SHAttered, a technique that could make two different files appear as they had the same SHA-1 file signature.\n At the time, creating an SHA-1 collision was considered computationally expensive, and Google experts thought SHA-1 could still be used in practice for at least half a decade until the cost would go down.\n However, subsequent research released in May 2019 and in January 2020, detailed an updated methodology to cut down the cost of an SHA-1 chosen-prefix collision attack to  under $110,000 and  under $50,000, respectively.\n   For advanced threat actors, such as nation-state and high-end cybercrime groups, $50,000 is a small price to pay if they could generate an SSH authentication key that grants them remote and undetected access to critical servers.\n  &#34;For this reason, we will be disabling the &#39;ssh-rsa&#39; public key signature algorithm by default in a near-future release,&#34; OpenSSH developers said today.\n   The OpenSSH app uses the &#34;ssh-rsa&#34; mode to generate  SSH authentication keys. One of these keys is stored on the server a user wants to log in, and the other is stored in the user&#39;s local OpenSSH client, allowing users to access servers without having to enter their passwords on every login, presenting the local authentication key instead.\n By default, the OpenSSH ssh-rsa mode generates these keys by using the SHA-1 hashing function, meaning these keys are susceptible to SHAterred attacks, allowing threat actors to generate duplicate keys.\n &#34;This algorithm is unfortunately still used widely despite the existence of better alternatives, being the only remaining public key signature algorithm specified by the original SSH RFCs,&#34; OpenSSH devs said today.\n The OpenSSH team is now asking server owners to check if their keys have been generated with the default ssh-rsa mode, and generate new ones using a different mode.\n Recommended modes are rsa-sha2-256/512 (supported since OpenSSH 7.2), ssh-ed25519 (supported since OpenSSH 6.5) or ecdsa-sha2-nistp256/384/521 (supported since OpenSSH 5.7), the OpenSSH team said.\n here&#39;s the best piece of the recent announcement. RIP &amp; one minute silence to all embedded systems and appliances that will never see an upgrade for deprecating ssh-rsa SHA-1 based keys in OpenSSH.  pic.twitter.com/zf5VewugC6\n\u2014 Julio (@juliocesarfort)  May 27, 2020\n The OpenSSH project will by disabling the ssh-rsa mode by default in a future (currently unspecified) release, however, before that, they also plan to enable the  UpdateHostKeys feature by default, to allow server owners to easily and automatically migrate from the old ssh-rsa mode to better authentication algorithms.\n Server owners who rely on OpenSSH to manage remote systems can find additional details on how to test their server for weak SHA-1-based keys in the  OpenSSH 8.3 changelog.\n In a previous release, in version 8.2, the OpenSSH team also added  support for FIDO/U2F-based hardware security keys, which can also be used to log into remote servers in even a safer manner.", "posttime": "2020-05-28 03:36:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u98ce\u9669,deprecate,openssh", "title": "\u7531\u4e8e\u5b89\u5168\u98ce\u9669\uff0cOpenSSH\u5c06\u5f03\u7528SHA-1\u767b\u5f55", "title_en": "OpenSSH To Deprecate SHA-1 Logins Due To Security Risk", "transed": 1, "url": "https://www.zdnet.com/article/openssh-to-deprecate-sha-1-logins-due-to-security-risk/", "via": "", "real_tags": ["\u98ce\u9669", "deprecate", "openssh"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003972, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\u518c\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u63a5\u6536\u4e2a\u6027\u5316\u7814\u7a76\u548c\u8d44\u6e90", "note_en": "Register to receive personalised research and resources by email", "posttime": "2020-05-28 03:24:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b27\u6d32,european,\u7535\u5b50\u90ae\u4ef6", "title": "Maximator\uff1a\u6b27\u6d32\u4fe1\u53f7\u60c5\u62a5\u5408\u4f5c", "title_en": "Maximator: European signals intelligence cooperation", "transed": 1, "url": "https://www.tandfonline.com/doi/full/10.1080/02684527.2020.1743538", "via": "", "real_tags": ["\u6b27\u6d32", "european", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "b894bee943e59df3ce1120e18c37b139.jpg", "infoid": 1003971, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4eca\u5929\u7684\u6570\u5b57\u65f6\u4ee3\uff0c\u6709\u65f6\u611f\u89c9\u786c\u4ef6\u5df2\u7ecf\u9000\u5c45\u6b21\u8981\u5730\u4f4d\uff0c\u800c\u4e0d\u662f\u9a71\u52a8\u6211\u4eec\u8bbe\u5907\u7684\u8f6f\u4ef6\u3002\u672c\u6708\u6700\u4f73\u6309\u94ae\u5c06\u5173\u6ce8\u4e00\u4e9b\u6309\u94ae\u548c\u5f00\u5173\u5728\u65b0\u65e7\u8bbe\u5907\u4e0a\u7684\u6837\u5b50\uff0c\u4ee5\u4e86\u89e3\u6211\u4eec\u662f\u5982\u4f55\u5728\u7269\u7406\u548c\u89e6\u89c9\u5c42\u9762\u4e0e\u5b83\u4eec\u4e92\u52a8\u7684\u3002\n\u82f9\u679c\u7684\u8776\u5f62\u952e\u76d8\u5f00\u5173\u662f\u88c5\u9970\u73b0\u4ee3\u8bbe\u5907\u7684\u6700\u7cdf\u7cd5\u7684\u6309\u94ae\u4e4b\u4e00\uff1a\u4e0d\u53ef\u9760\uff0c\u63a5\u89e6\u4e00\u70b9\u70b9\u7070\u5c18\u6216\u6c61\u57a2\u5c31\u5bb9\u6613\u6298\u65ad\uff0c\u66f4\u6362\u8d77\u6765\u6781\u5176\u56f0\u96be\u548c\u6602\u8d35\u3002\n\u4f46\u66f4\u6df1\u5c42\u6b21\u7684\u95ee\u9898\u5e76\u4e0d\u662f\u8776\u5f62\u5f00\u5173\u7ecf\u5e38\u574f\u6389\uff0c\u800c\u662f\u6709\u7f3a\u9677\u7684\u8bbe\u8ba1\u76ee\u6807\u5bfc\u81f4\u82f9\u679c\u4e00\u5f00\u59cb\u5c31\u505a\u51fa\u4e86\u4e00\u4e2a\u7cdf\u7cd5\u7684\u6309\u94ae\u3002\u82f9\u679c\u516c\u53f8\u9009\u62e9\u8ba9\u6574\u4e2a\u952e\u76d8\u5145\u6ee1\u6309\u952e\uff0c\u4ece\u800c\u5e26\u6765\u66f4\u7f8e\u89c2\u7684\u8bbe\u8ba1\uff0c\u65c5\u884c\u65f6\u95f4\u66f4\u77ed\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u6574\u4f53\u66f4\u8584\uff0c\u800c\u4e0d\u662f\u5236\u9020\u673a\u68b0\u529f\u80fd\u7684\u952e\u76d8\u3002\u5b83\u51e0\u4e4e\u6bc1\u4e86\u6574\u6574\u4e00\u4ee3\u82f9\u679c\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\n\u6211\u4eec\u4eca\u5929\u7684\u5927\u90e8\u5206\u6280\u672f\u90fd\u662f\u9ad8\u5ea6\u6570\u5b57\u5316\u7684\uff0c\u89e6\u6478\u5c4f\u548c\u8f6f\u4ef6\u4e3a\u6211\u4eec\u5982\u4f55\u4e92\u52a8\u63d0\u4f9b\u4e86\u65e0\u9650\u7684\u53ef\u80fd\u6027\u3002\u8fd9\u79cd\u6570\u5b57\u54f2\u5b66\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6709\u5de8\u5927\u7684\u73bb\u7483\u677f\u4f5c\u4e3a\u667a\u80fd\u624b\u673a\uff0c\u82f9\u679cMacBook Pro\u4e0a\u6709\u4e89\u8bae\u7684Touch Bar\uff0c\u6216\u8005Elgato Stream Deck\u7684\u53ef\u5b9a\u5236\u6309\u94ae\u7684\u539f\u56e0\u3002\n\u5f53\u4e8b\u7269\u88ab\u4fdd\u7559\u4e3a\u7269\u7406\u6309\u94ae\u65f6\uff0c\u5f80\u5f80\u662f\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7406\u7531-\u6bd4\u5982\u624b\u673a\u4e0a\u7684\u7535\u6e90\u6309\u94ae\uff0c\u5b83\u9700\u8981\u5728\u66f4\u9ad8\u7684\u4ea4\u4e92\u7ea7\u522b\u4e0a\u5de5\u4f5c\uff0c\u624d\u80fd\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u6570\u5b57\u6309\u94ae\uff1b\u8033\u673a\u4e0a\u7684\u97f3\u91cf\u63a7\u5236\uff0c\u9700\u8981\u4e0e\u4f60\u770b\u4e0d\u5230\u7684\u4e1c\u897f\u4ea4\u4e92\uff1b\u6216\u8005\u89c6\u9891\u6e38\u620f\u63a7\u5236\u5668\uff0c\u5b83\u8981\u6c42\u5feb\u901f\u800c\u51c6\u786e\u7684\u547d\u4ee4\uff0c\u540c\u65f6\u4f60\u7684\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u5c4f\u5e55\u4e0a\u7684\u64cd\u4f5c\u4e0a\u3002\n\u5f53\u4e8b\u7269\u4ee5\u7269\u7406\u6309\u94ae\u7684\u5f62\u5f0f\u4fdd\u5b58\u65f6\uff0c\u5f80\u5f80\u662f\u56e0\u4e3a\u8fd9\u6837\u505a\u6709\u5f88\u597d\u7684\u7406\u7531\u3002\n\u5f53\u7136\uff0c\u8fd8\u6709\u7b14\u8bb0\u672c\u7535\u8111\u952e\u76d8\uff0c\u826f\u597d\u7684\u6253\u5b57\u80fd\u529b\u662f\u6700\u91cd\u8981\u7684\u3002\u6570\u5b57\u952e\u76d8\u5728\u51c6\u786e\u6027\u6216\u59cb\u7ec8\u6b63\u786e\u6ce8\u518c\u8f93\u5165\u65b9\u9762\u5b58\u5728\u8fd9\u4e9b\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684iPhone\u548cAndroid\u624b\u673a\u6709\u5982\u6b64\u591a\u7684\u952e\u76d8\u9009\u62e9\uff0c\u5177\u6709\u4e0d\u540c\u7684\u9884\u6d4b\u6587\u672c\u529f\u80fd\uff0c\u8bd5\u56fe\u6d88\u9664\u8fd9\u4e9b\u51f9\u51f8\u4e0d\u5e73\u7684\u5730\u65b9\u3002\u4e0d\u8fc7\uff0c\u7269\u7406\u952e\u76d8\u4e0d\u5e94\u8be5\u6709\u540c\u6837\u7684\u95ee\u9898\u3002\u5f53\u60a8\u6309\u4e0b\u4e00\u4e2a\u952e\u65f6\uff0c\u60a8\u4e0d\u4f1a\u4ec5\u4ec5\u671f\u671b\u5b83\u5df2\u7ecf\u6309\u4e0b\uff1b\u60a8\u4f9d\u8d56\u4e8e\u5b83\u786e\u5b9e\u6309\u4e0b\u4e86\uff0c\u800c\u4e0d\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u6216\u7cbe\u529b\u6765\u68c0\u67e5\u548c\u786e\u8ba4\u662f\u4e0d\u662f\u8fd9\u6837\u3002\n\u4e0e\u6b64\u76f8\u51b2\u7a81\u7684\u662f\u957f\u8fbe\u6570\u5341\u5e74\u7684\u6d88\u8d39\u6280\u672f\u8d8b\u52bf\uff0c\u8fd9\u79cd\u8d8b\u52bf\u4ee5\u727a\u7272\u529f\u80fd\u4e3a\u4ee3\u4ef7\uff0c\u91cd\u89c6\u8ba9\u7535\u5b50\u4ea7\u54c1\u53d8\u5f97\u66f4\u7b80\u5355\u3001\u66f4\u65f6\u5c1a\u3001\u66f4\u8584\u3002\u8fd9\u4e00\u8d8b\u52bf\u7684\u5f71\u54cd\u662f\u591a\u65b9\u9762\u7684\uff0c\u800c\u4e14\u8fd8\u5728\u7ee7\u7eed\uff0c\u5b83\u4eec\u5f71\u54cd\u7740\u4ece\u7535\u6c60\u5bff\u547d\u5230\u6211\u4eec\u7684\u624b\u673a\u4e0a\u662f\u5426\u67093.5\u6beb\u7c73\u8033\u673a\u63d2\u5b54\u7684\u65b9\u65b9\u9762\u9762\u3002\u4e1a\u754c\u51e0\u4e4e\u6bcf\u5bb6\u516c\u53f8\u90fd\u5728\u8ffd\u968f\u8fd9\u4e00\u8d8b\u52bf\uff0c\u4f46\u53ef\u4ee5\u8bf4\u662f\u82f9\u679c\u5f15\u9886\u4e86\u5b83\u8fd1\u4e4e\u72c2\u70ed\u7684\u627f\u8bfa\uff0c\u8ba9\u6bcf\u4e00\u4ee3\u786c\u4ef6\u90fd\u6bd4\u4e0a\u4e00\u4ee3\u66f4\u5c0f\u3001\u66f4\u8f7b\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u727a\u7272\u4e86\u53ef\u9760\u6027\uff0c\u4ee5\u6362\u53d6\u65f6\u5c1a\u3002\u76f4\u5230\u6700\u8fd1\u51e0\u5e74\uff0c\u82f9\u679c\u624d\u7ec8\u4e8e\u5f00\u59cb\u626d\u8f6c\u8fd9\u4e00\u8d8b\u52bf\uff0c\u63a8\u51fa\u4e86\u66f4\u597d\u5730\u5728\u529f\u80fd\u548c\u5916\u5f62\u4e4b\u95f4\u627e\u5230\u5e73\u8861\u7684\u65b0\u786c\u4ef6\u3002\n\u7136\u800c\uff0c\u82f9\u679c\u5e76\u4e0d\u662f\u552f\u4e00\u843d\u5165\u8fd9\u4e00\u9677\u9631\u7684\u516c\u53f8\u3002\u591a\u5e74\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u8bb8\u591a\u8bbe\u5907\u7684\u4f8b\u5b50\uff0c\u5b83\u4eec\u8bd5\u56fe\u5c06\u7269\u7406\u786c\u4ef6\u6309\u94ae\u6700\u5c0f\u5316\uff0c\u4ee5\u5b9e\u73b0\u66f4\u8584\u7684\u8bbe\u5907\u6216\u66f4\u591a\u53ef\u5b9a\u5236\u7684\u8f6f\u952e\u3002\u8bb8\u591a\u516c\u53f8\u90fd\u5c1d\u8bd5\u8fc7\uff0c\u4ece\u5fae\u8f6f\u6700\u521d\u7684Surface\u952e\u76d8\u5957\u5230\u8054\u60f3\u7684\u6570\u5b57\u548cE Ink Yoga Books\uff0c\u518d\u5230\u82f9\u679c\u7684iPad\u6570\u5b57\u952e\u76d8\u3002\n\u4f46\u8fd9\u4e9b\u516c\u53f8\u4e0d\u65ad\u5438\u53d6\u7684\u6559\u8bad\u662f\uff0c\u5b83\u5f88\u5c11\u594f\u6548\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u5fae\u8f6f\u5c06\u5176Surface\u4fdd\u62a4\u5957\u8f6c\u5411\u4e86\u673a\u68b0\u952e\u76d8\uff1b\u8054\u60f3\u5373\u5c06\u63a8\u51fa\u7684\u53ef\u6298\u53e0\u7b14\u8bb0\u672c\u7535\u8111\u5305\u62ec\u4e00\u4e2a\u53ef\u4ee5\u6253\u5b57\u7684\u7269\u7406\u952e\u76d8\u914d\u4ef6\uff1b\u82f9\u679c\u73b0\u5728\u63d0\u4f9b\u4e86\u4e00\u6b3e\u552e\u4ef7350\u7f8e\u5143\u7684\u952e\u76d8\u4fdd\u62a4\u5957\uff0c\u8fd9\u662f\u5176\u76ee\u524diPad Pro\u4ea7\u54c1\u9635\u5bb9\u4e2d\u7684\u7687\u51a0\u4e0a\u7684\u660e\u73e0\u3002\u5b83\u4eec\u6bd4\u5b83\u4eec\u7684\u524d\u8eab\u66f4\u539a\u66f4\u91cd\uff0c\u4f46\u5b83\u4eec\u7684\u53ef\u9760\u6027\u8981\u9ad8\u5f97\u591a\u3002\n\u4e0d\u8fc7\uff0c\u82f9\u679c\u7684\u95ee\u9898\u6bd4\u5176\u4ed6\u4f8b\u5b50\u8981\u4e25\u91cd\u5f97\u591a\uff0c\u56e0\u4e3a\u8774\u8776\u952e\u76d8\u4e0d\u662f\u8bd5\u9a8c\u6027\u7684\u8f85\u52a9\u9879\u76ee\uff0c\u4e5f\u4e0d\u662f\u952e\u76d8\u76d2\uff1a\u5b83\u628a\u8d4c\u6ce8\u62bc\u5728\u4e86\u6574\u4e2a\u65d7\u8230\u7b14\u8bb0\u672c\u7535\u8111\u7cfb\u5217\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u4ef6\u4e0a\u3002\n\u6216\u8bb8\u8be5\u516c\u53f8\u8ba4\u4e3a\u4e0d\u5408\u683c\u7387\u503c\u5f97\u5192\u9669\u3002(\u6bd5\u7adf\uff0c\u82f9\u679c\u82b1\u4e86\u6570\u5e74\u65f6\u95f4\u53cd\u590d\u7814\u7a76\u8bbe\u8ba1\uff0c\u5e76\u5728\u8ba4\u8f93\u4e4b\u524d\u63a8\u51fa\u4e86\u591a\u4ee3\u8774\u8776\u5f00\u5173\u3002)\u3002\u4f46\u952e\u76d8\u662f\u4efb\u4f55\u8ba1\u7b97\u673a\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\uff0c\u81f3\u5c11\u5c31\u6211\u4eec\u73b0\u5728\u7684\u4f7f\u7528\u65b9\u5f0f\u800c\u8a00\u662f\u8fd9\u6837\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u6307\u671b\u5b83\u4eec\u6bcf\u6b21\u90fd\u80fd\u51c6\u786e\u5730\u8f93\u5165\u4f60\u8f93\u5165\u7684\u6587\u672c\uff0c\u7f8e\u89c2\u6216\u8f7b\u8584\u65b9\u9762\u7684\u4efb\u4f55\u8fdb\u6b65\u90fd\u4f1a\u8ba9\u5b83\u4eec\u751a\u81f3\u4e0d\u5982\u89e6\u6478\u5c4f\u7b14\u8bb0\u672c\u7535\u8111\u6709\u7528\u3002\n\u597d\u7684\u6309\u94ae\u6709\u65f6\u53ef\u4ee5\u5f25\u8865\u7cdf\u7cd5\u7684\u8f6f\u4ef6\uff0c\u4f46\u7cdf\u7cd5\u7684\u6309\u94ae-\u7528\u6237\u548c\u8f6f\u4ef6\u4e4b\u95f4\u6447\u6447\u6b32\u5760\u7684\u6865\u6881-\u8981\u5f25\u8865\u8d77\u6765\u8981\u56f0\u96be\u5f97\u591a\u3002\u65b0\u65e7\u526a\u5200\u5f00\u5173\u4e0d\u662f\u6211\u6700\u559c\u6b22\u7528\u6765\u6253\u5b57\u7684\uff1b\u867d\u7136\u5176\u4ed6\u4eba\u53ef\u80fd\u4e0d\u540c\u610f\uff0c\u4f46\u6211\u53d1\u73b0\u8774\u8776\u5f00\u5173\u6bd4\u66f4\u67d4\u8f6f\u3001\u66f4\u539a\u5b9e\u7684\u526a\u5200\u5f00\u5173\u4f7f\u7528\u8d77\u6765\u66f4\u8106\u3001\u66f4\u7075\u654f\u3002\u4f46\u662f\u526a\u5200\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u53ef\u9760\u7684\uff0c\u8fd9\u662f\u8774\u8776\u5f00\u5173\u6240\u4e0d\u80fd\u505a\u5230\u7684\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u6240\u6709\u7684\u4e0d\u540c\u3002\n\u8fd9\u662f\u82f9\u679c\u516c\u53f8\u7ee7\u7eed\u5bfb\u627e\u7684\u5e73\u8861\u3002\u89e6\u6478\u680f\u4e5f\u6709\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff0c\u7528\u8f6f\u4ef6\u66ff\u4ee3\u673a\u68b0\u6309\u952e\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u4ee5\u727a\u7272\u7269\u7406\u53ef\u9760\u6027\u4e3a\u4ee3\u4ef7\uff0c\u627f\u8bfa\u4e86\u66f4\u591a\u7684\u5b9e\u7528\u4ef7\u503c\u3002\u4e5f\u8bb8\u5b83\u4f1a\u5de5\u4f5c\u5f97\u66f4\u597d\uff1a\u529f\u80fd\u952e\u5bf9\u7b14\u8bb0\u672c\u7535\u8111\u7684\u65e5\u5e38\u4f7f\u7528\u5e76\u4e0d\u90a3\u4e48\u5173\u952e\uff0c\u800c\u4e14\u53ef\u80fd\u597d\u5904\u5927\u4e8e\u98ce\u9669\u3002\u4f46\u82f9\u679c\u5df2\u7ecf\u4e0d\u5f97\u4e0d\u5bf9\u8fd9\u4e00\u8c03\u6574\u8fdb\u884c\u5fae\u8c03\uff0c\u5728\u65b0\u7684Touch Bar\u673a\u578b\u4e2d\u589e\u52a0\u4e86\u7269\u7406ESC\u952e\uff0c\u8fd9\u662f\u65e7\u673a\u578b\u6240\u7f3a\u4e4f\u7684\uff0c\u56e0\u4e3a\u6709\u4e9b\u4e1c\u897f\u5c31\u662f\u4e0d\u80fd\u4f9d\u8d56\u8f6f\u4ef6\u3002\n\u82f9\u679c\u9971\u53d7\u8bdf\u75c5\u7684\u952e\u76d8\u7684\u6545\u4e8b\u5176\u5b9e\u5e76\u4e0d\u662f\u5173\u4e8e\u7269\u7406\u90e8\u5206\u7684\u8d28\u91cf\uff0c\u800c\u662f\u82f9\u679c\u8bd5\u56fe\u8ba9\u8774\u8776\u5f00\u5173\u3001\u89e6\u6478\u6746\u6216\u4efb\u4f55\u8fd9\u4e9b\u66ff\u6362\u952e\u76d8\u53d1\u6325\u4f5c\u7528\u7684\u52a8\u673a\u3002\u5b83\u662f\u5173\u4e8e\u4e00\u4e2a\u5355\u4e00\u7684\u8bbe\u8ba1\u51b3\u7b56\u5982\u4f55\u6ce2\u53ca\u5e76\u5f71\u54cd\u6574\u4e2a\u4ea7\u54c1\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u8de8\u8d8a\u6574\u4e2a\u51e0\u4ee3\u786c\u4ef6\u3002\u4e00\u79cd\u2026\u3002\u8774\u8776\u6548\u5e94\u3002", "note_en": "In today\u2019s digital age, it sometimes feels like hardware has taken a back seat to the software that drives our devices.   Button of the Month  will look at what some of those buttons and switches are like on devices old and new to appreciate how we interact with them on a physical, tactile level.\n Apple\u2019s butterfly keyboard switches are some of the worst buttons to grace a modern device: unreliable, prone to breaking after coming in contact with a tiny bit of dust or grime, and incredibly difficult and expensive to replace.\n But the deeper issue isn\u2019t that the butterfly switches often break; it\u2019s the flawed design goals that led Apple to make a bad button in the first place. Apple chose to make an entire keyboard full of buttons that resulted in a more aesthetically pleasing design with shorter travel and a thinner overall laptop, rather than making ones that are mechanically functional. And it nearly wrecked an entire generation of Apple\u2019s laptops.\n   Most of our technology today is heavily digital, with touchscreens and software offering limitless possibilities for how we interact. That digital philosophy is the reason we have giant glass slabs as smartphones, the controversial Touch Bar on Apple\u2019s MacBook Pros, or the customizable buttons of the  Elgato Stream Deck.\n When things are  kept as physical buttons, it tends to be because there\u2019s a very good reason for it \u2014 things like power buttons on phones, which need to work at a higher interaction level to enable the use of all those digital buttons; volume controls on headphones, where there\u2019s a need to interact with something that you can\u2019t see; or video game controllers, which demand fast and accurate commands while your attention is devoted to the action on-screen.\n When things are kept as physical buttons, it tends to be because there\u2019s a very good reason for it\n And of course, there\u2019s the laptop keyboard, where the ability to type well is paramount. Digital keyboards have these issues with accuracy or correctly registering inputs all the time. It\u2019s why our iPhones and Android phones have so many keyboard options, with different predictive text capabilities to try to smooth out those bumps. Physical keyboards aren\u2019t supposed to have the same issue, though. When you press a key, you don\u2019t just expect it to have pressed down; you rely on the fact that it did, without having to take time or effort to check and confirm that that\u2019s the case.\n In conflict with that is the decades-long trend in consumer technology that prizes making gadgets simpler, sleeker, and thinner at the expense of functionality. The ramifications of this trend are many and ongoing, and they impact everything from battery life to whether we have 3.5mm headphone jacks on our phones. Nearly every company in the business has followed this trend, but it\u2019s arguably Apple that\u2019s led it with an almost fanatical devotion to making every generation of hardware smaller and lighter than the one before it, sacrificing reliability for style along the way. It\u2019s only in recent years that  Apple\u2019s finally started to reverse this trend, with new hardware that better finds the balance between function and form.\n Apple isn\u2019t the only company that\u2019s fallen into this trap, however. We\u2019ve seen plenty of examples over the years of devices that try to minimize physical hardware buttons for thinner devices or more customizable software keys. Any number of companies have tried, from Microsoft\u2019s original Surface keyboard covers to Lenovo\u2019s digital and E Ink Yoga Books to Apple\u2019s digital iPad keyboard.\n   But the lesson that these companies keep learning is that it rarely works. Microsoft has since shifted its Surface covers to mechanical keyboards; Lenovo\u2019s upcoming foldable laptop includes a physical keyboard accessory to type with; and Apple now offers a $350 keyboard case that\u2019s the crown jewel of its current iPad Pro lineups. They\u2019re thicker and heavier solutions than their predecessors, but they\u2019re far more reliable.\n Apple\u2019s issue cuts far deeper than those other examples, though, because the butterfly keyboards weren\u2019t on an experimental side project or a keyboard case: it gambled on a key component on its entire lineup of flagship laptops.\n Maybe the company thought the failure rate was worth the risk. (After all, Apple spent years iterating on the design and shipped multiple generations of the butterfly switch before throwing in the towel.) But keyboards are an integral part of any computer, at least for how we use them now. If you can\u2019t rely on them to input the text you typed accurately every time, any gains in aesthetics or thinness render them less useful than even a touchscreen laptop.\n  Good buttons can sometimes make up for bad software, but a bad button \u2014 a crumbling bridge between the user and the software \u2014 is far harder to make up for. The old-new scissor-switches aren\u2019t my favorite to type on; while others may disagree, I find the butterfly switches far crisper and snappier to use than the softer, mushier scissor-switch. But the scissors are  reliable in a way that the butterfly switches aren\u2019t, and that makes all the difference.\n It\u2019s a balance Apple is continuing to find. The Touch Bar is a similar idea, replacing mechanical keys with software replacements that promise far more utility at the expense of physical reliability. Maybe it\u2019ll work better: function keys aren\u2019t as critical to daily laptop use, and maybe the benefits outweigh the risks. But Apple\u2019s already had to fine-tune that adjustment, adding a physical Esc key to its newer Touch Bar models that the old ones lacked because some things just can\u2019t rely on software.\n The story of Apple\u2019s reviled keyboards isn\u2019t really about the quality of the physical part, as much as it is Apple\u2019s motivation in trying to make the butterfly switches or the Touch Bar or any of these replacement keyboards work at all. It\u2019s about how a single design decision can ripple out and sour the user experience for an entire product, across whole generations of hardware. A sort of\u2026 butterfly effect.", "posttime": "2020-05-28 03:24:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,apple,\u82f9\u679c,\u952e\u76d8,\u8003\u8651", "title": "\u82f9\u679c\u7684\u8774\u8776\u952e\u76d8\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u5b83\u4f18\u5148\u8003\u8651\u5f62\u5f0f\u800c\u4e0d\u662f\u529f\u80fd", "title_en": "Apple\u2019s butterfly keyboard failed by prioritizing form over function", "transed": 1, "url": "https://www.theverge.com/circuitbreaker/2020/5/27/21270299/apple-butterfly-keyboard-hardware-design-macbook-pro-physical-key-button", "via": "", "real_tags": ["app", "apple", "\u82f9\u679c", "\u952e\u76d8", "\u8003\u8651"]}]