[{"category": "", "categoryclass": "", "imagename": "580c2dcf55477ffa5762122766b7758e.jpg", "infoid": 1004228, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd8\u8bb0\u5f972019\u5e74\u7684\u90a3\u4e2a\u6545\u4e8b\u5417\uff1f\u5f53\u65f6\uff0c\u5728\u7ebf\u8ba2\u8d2d\u5e94\u7528GrubHub\u88ab\u6293\u5230\u521b\u5efa\u4e86\u6570\u4ee5\u5343\u8ba1\u7684\u865a\u5047\u516c\u53f8\u7f51\u7ad9\uff0c\u552f\u4e00\u7684\u76ee\u7684\u5c31\u662f\u8d85\u8d8a\u771f\u6b63\u7684\u6240\u6709\u8005\u7684\u7f51\u7ad9\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5411\u5728\u7ebf\u8ba2\u5355\u4e2d\u6ce8\u5165\u8d39\u7528\u3002\n\u8fd9\u4e0d\u4ec5\u542c\u8d77\u6765\u5f88\u53ef\u7591\uff0c\u800c\u4e14\u786e\u5b9e\u5982\u6b64\uff0c\u4ed6\u4eec\u5f88\u5feb\u5c31\u7ed3\u675f\u4e86\u8fd9\u4e00\u529f\u80fd\u3002\u4e00\u4e2a\u88ab\u5ffd\u89c6\u7684\u91cd\u8981\u7ec6\u8282\u662f\uff0c\u4ed6\u4eec\u4e0d\u4ec5\u5efa\u7acb\u4e86\u4e00\u4e2a\u5047\u7f51\u7ad9\uff0c\u7136\u540e\u4ed6\u4eec\u4f1a\u79ef\u6781\u5730\u58f0\u79f0\u8be5\u7f51\u7ad9\u5730\u5740\u662fGoogle My Business\u7684\u5b98\u65b9\u5730\u5740\uff0c\u7136\u540e\u5728Google Maps\u4e0a\u663e\u793a\u4ed6\u4eec\u7684\u5047\u7f51\u7ad9\uff0c\u5728\u641c\u7d22\u7ed3\u679c\u77e5\u8bc6\u9762\u677f\u7b49\u4e2d\u663e\u793a\u4ed6\u4eec\u7684\u5047\u7f51\u7ad9\u3002\n\u5feb\u8fdb\u8fd1\u4e00\u5e74\u540e\uff0c\u6211\u4eec\u5076\u7136\u53d1\u73b0\u4e86\u53e6\u4e00\u4f4d\u5e74\u5ea6\u4e0d\u9053\u5fb7\u589e\u957f\u9ed1\u5ba2\u7684\u7ade\u4e89\u8005\uff0c2020&34\uff1b\u3002\n\u4e00\u5bb6\u540d\u4e3aSlice\u7684\u521d\u521b\u516c\u53f8\u663e\u7136\u975e\u5e38\u559c\u6b22\u683c\u9c81\u5e03\u7684\u60f3\u6cd5\uff0c\u4ed6\u4eec\u5f00\u59cb\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd9\u4e00\u6b21\u4e5f\u770b\u5230\u4e86\u4e00\u4e2a\u673a\u4f1a\uff0c\u8ba9\u683c\u9c81\u5e03\u62a2\u5148\u4e00\u6b65\u83b7\u5f97\u5ec9\u4ef7\u4ea7\u54c1\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u4ed6\u4eec\u7684\u670d\u52a1\u3002\n\u4ed6\u4eec\u7684\u628a\u620f\u96c6\u4e2d\u5728\u77e5\u8bc6\u9762\u677f\u4e0a\u3002\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u6709\u4e00\u5757\u6807\u4ef7\u7684\u623f\u5730\u4ea7\uff0c\u8fd8\u6709\u4e00\u4e2a\u8c37\u6b4c\u7684\u5956\u676f\u9879\u76ee\u3002\u5b83\u4e0d\u4ec5\u5177\u6709\u5b9e\u4f53(\u4f8b\u5982\u672c\u5730\u62ab\u8428\u9910\u5385)\u7684\u8bed\u4e49\u6570\u636e\uff0c\u800c\u4e14\u5982\u679c\u60a8\u662f\u2026\u2026\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u60a8\u81ea\u5df1\u7684\u6570\u636e\u6765\u7d22\u8d54\u3002\ud83e\udd41..\u3002\u6839\u636e.\ud83e\udd41\u7684\u8bf4\u6cd5\uff0c\u8f66\u4e3b..\u3002\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u6211\u7684\u4e1a\u52a1\u3002\u6211\u60f3\u4f60\u77e5\u9053\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u4e86\u5427\uff1f\n\u901a\u8fc7\u7533\u8bf7\u4e1a\u52a1\uff0c\u60a8\u53ef\u4ee5\u7ba1\u7406\u77e5\u8bc6\u9762\u677f\u4e2d\u7684\u7279\u6b8a\u5143\u7d20\uff0c\u5982\u8425\u4e1a\u65f6\u95f4\u548c\u8054\u7cfb\u7535\u8bdd\u53f7\u7801\u3002\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u53d1\u5e03\u5173\u4e8e\u4f60\u4f01\u4e1a\u7684\u65b0\u95fb\uff0c\u5305\u62ec\u6709\u8da3\u7684\u5de5\u4f5c\u673a\u4f1a\u3002\u5076\u7136\u7684\u662f\uff0c\u6211\u4eec\u5728Slice\u7684\u670b\u53cb\u4eec\u6709\u5f88\u591a\u5173\u4e8e\u6570\u767e\u5bb6\u5f53\u5730\u4f01\u4e1a\u7684\u65b0\u95fb\uff0c\u6bcf\u4e00\u5bb6\u90fd\u6709\u8fd9\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u4f18\u60e0\uff1a\u8ba2\u8d2d\u63d0\u8d27\u548c\u9001\u8d27\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u4f18\u60e0(\u5f88\u62b1\u6b49\u5728\u8fd9\u91cc\u6ee5\u7528\u6487\u53f7)\u3002\n\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f\u770b\u770b\u4f60\u81ea\u5df1(\u771f\u7684\uff0c\u70b9\u51fb\u5b83)\u3002\u5c71\u8c37\u91cc\u7684\u4e00\u4ef6\u7f8e\u4e3d\u7684\u4e8b\u60c5\u3002Slice\u80fd\u591f\u6ce8\u5165\u4ed6\u4eec\u7684\u8425\u9500\u865a\u4f2a\u7684\u62a5\u4ef7\uff0c\u5e76\u514d\u8d39\u7d22\u8981SERP\u7684\u5927\u7247\uff01(\u50bb\u74dc\u683c\u9c81\u5e03\u6b63\u5728\u4e3a\u4e00\u5219\u5e7f\u544a\u4e70\u5355\uff0c\u54c8\uff01)\u3002\u4e0d\u901a\u8fc7Slice\u70b9\u9910\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u603b\u800c\u8a00\u4e4b\u3002Slice\u521b\u5efa\u4e86\u975e\u5b98\u65b9\u7f51\u7ad9\uff0c\u58f0\u79f0\u8c37\u6b4c\u201c\u6211\u7684\u5546\u4e1a\u6863\u6848\u201d\uff0c\u7136\u540e\u5f00\u59cb\u63a8\u51fa\u865a\u5047\u7684\u3001\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u4f18\u60e0\uff0c\u6240\u4ee5\u6bcf\u5f53\u6709\u4eba\u641c\u7d22\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u5f53\u5730\u62ab\u8428\u5e97\u65f6\uff0cSlice\u5c31\u65e0\u6cd5\u5728\u641c\u7d22\u7ed3\u679c\u4e2d\u7ed5\u5f00Slice\u3002\u4e3aSlice\u5e26\u6765\u4e86\u66f4\u591a\u7684\u514d\u8d39\u70b9\u51fb\u548c\u5b89\u88c5\uff0c\u5e76\u4e3a\u4f01\u4e1a\u4e3b\u5e26\u6765\u4e86\u66f4\u591a\u7684Slice-Order-Tax\u3002", "note_en": "Remember that story from 2019 where Grubhub, a online ordering app, was  caught creating,  thousands of fake company websites for to sole purpose of outranking the true owner&#39;s site so they could inject their fees into online orders?\n  It not only sounded shady, it was and they  ended this &#34;feature&#34; quickly after. An important overlooked detail was that they did not only setup a fake website, they would actively then  claim the website address as being official on Google My Business, which would then feature their fake website on Google Maps, in the search results Knowledge Panel, etc.\n  Fast forward almost one year, and we stumbled upon another contender for the &#34;Unethical Growth Hacker of the Year, 2020&#34;.\n  A start-up named Slice, apparently liked Grubhub&#39;s idea so much, they started doing the same, but this time also saw an  opportunity to one-up Grubhub&#39;s attempt in acquiring cheap leads to their service.\n  Their trick centers around the Knowledge Panel. A priced piece of real estate in the search results, and a  trophy project by Google. It not only features semantic data of an entity (e.g. Local Pizza restaurant) but you can also &#34;claim&#34; it as your own if you are... \ud83e\udd41... the owner according to...\ud83e\udd41... Google My Business. I think you see where this is going?\n  By claiming a business you can manage special elements in the knowledge panels, such as opening hours and contact phone numbers. But you can also  post &#34;news&#34; about your business, including &#34;interesting offers&#34;. And by chance our friends at  Slice have lots of &#34;news&#34; on hundreds of local businesses with every single one having this amazing offer: &#34; Order Pickup and Delivery&#34;. That is some great &#34;offer&#34; (sorry for the abuse of apostrophes here).\n    The result?  Look yourself (really, click it). A thing of beauty in the Valley. Slice is able inject their  marketing fluff offers and claim large pieces of the SERP, for free! (Dumb Grubhub is paying for an ad, ha!). It is almost impossible not to order via Slice.\n  In summary. Slice creates un-official websites, claims Google My Business profiles, and then starts pushing out  fake &#34;verified&#34; offers so whenever someone searches for their favorite local pizza place, there is no way around Slice in the search results. Leading to more free clicks and installs for Slice and  more Slice-order-tax for the business owners.", "posttime": "2020-05-29 20:32:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,google,\u8c37\u6b4c,slice,evil", "title": "Slice\u5728\u8c37\u6b4c\u7684\u90aa\u6076\u589e\u957f\u9ed1\u5ba2", "title_en": "Slice's evil growth hack in Google", "transed": 1, "url": "https://yvoschaap.com/weblog/another_mass_hijack_attempt_of_the_google_search_results", "via": "", "real_tags": ["\u9ed1\u5ba2", "google", "\u8c37\u6b4c", "slice", "evil"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004227, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u5c06\u89e3\u91ca\u5982\u4f55\u5728ARM-Linux\u4e0a\u8bbe\u7f6eCUPS\u7f51\u7edc\u6253\u5370\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u9488\u5bf9\u5176\u4ed6\u4f53\u7cfb\u7ed3\u6784\u7684\u65e7\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\u6216\u5df2\u505c\u4ea7\u7684\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u7528Docker with QEMU\u5e73\u53f0\u4eff\u771f\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ARM\u670d\u52a1\u5668\u5bb9\u5668\u5185\u6a21\u62df\u768432\u4f4dLinux\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\u3002\u5728\u6211\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u5c06\u8bbe\u7f6e\u4e00\u53f0Dell 1250c\u6253\u5370\u673a\uff0c\u4f46\u5b83\u4e5f\u5e94\u8be5\u53ef\u4ee5\u4e0e\u5176\u4ed6\u8bbe\u5907\u914d\u5408\u4f7f\u7528\u3002\n\u6709\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u5728\u5bb6\u91cc\u4f7f\u7528Dell 1250c\u6253\u5370\u673a\uff0c\u8fde\u63a5\u5230\u8fd0\u884cOpenWRT\u7684TP-Link\u8def\u7531\u5668\uff0c\u4f5c\u4e3a\u7b80\u5355\u7684\u7f51\u7edc\u6253\u5370\u89e3\u51b3\u65b9\u6848\u3002\u4f7f\u7528\u6b64\u8bbe\u7f6e\uff0c\u53ea\u8981\u5ba2\u6237\u7aef\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u652f\u6301\u65e7\u5f0f\u548c\u4e13\u6709\u6234\u5c14\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6211\u5c31\u53ef\u4ee5\u4ece\u672c\u5730\u7f51\u7edc\u4e2d\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u8fdb\u884c\u6253\u5370\u3002\n\u5f88\u5feb\uff0c\u6211\u60f3\u7528\u6211\u81ea\u5df1\u7684\u5bb6\u5ead\u670d\u52a1\u5668\u53d6\u4ee3TP-Link\u8def\u7531\u5668\uff0c\u8fd9\u662f\u4e00\u53f0\u8fd0\u884cArchLInux\u7684\u5c0f\u578b\u5ec9\u4ef7\u7684ARM\u8ba1\u7b97\u673a\u3002\u5373\u4f7f\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\u4f7f\u7528CUPS\u5b89\u88c5\u548c\u914d\u7f6e\u6253\u5370\u670d\u52a1\u5668\u4e5f\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u9700\u8981\u5f00\u653e\u6e90\u7801\u7684\u6253\u5370\u9a71\u52a8\u7a0b\u5e8f\u3002\u6234\u5c14\u5b98\u65b9\u4ec5\u5bf9\u6b64\u8bbe\u5907\u7684Windows\u548cMacOS\u63d0\u4f9b\u6709\u9650\u7684\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u30022011\u5e74\u8d77\uff0cXerox Phaser 6000\u7684\u5907\u7528\u9a71\u52a8\u7a0b\u5e8f\u4e0e\u6b64\u6234\u5c14\u6253\u5370\u673a\u517c\u5bb9\uff0c\u652f\u6301Linux\uff0c\u4f46\u4ec5\u9650\u4e8e32\u4f4dPC\u4f53\u7cfb\u7ed3\u6784\u3002\u6211\u4e0d\u80fd\u5728\u6211\u7684\u624b\u81c2\u5e73\u53f0\u4e0a\u4f7f\u7528\u5b83\u3002\n\u56e0\u6b64\uff0c\u6211\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528CUPS\u548cARM\u677f\u4e0a\u7684\u6253\u5370\u9a71\u52a8\u7a0b\u5e8f\u201c\u6a21\u62df\u201d32/64\u4f4d\u73af\u5883\uff0c\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u8fd9\u53f0\u6253\u5370\u673a\u3002\u6211\u4f7f\u7528QEMU\u548cDocker\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f7f\u7528\u7684\u662f\u8bd5\u9a8c\u6027\u7684\u3001\u9c9c\u4e3a\u4eba\u77e5\u7684\u5bb9\u5668\u914d\u7f6e\u3002\n\u5728ARM\u677f\u4e0a\uff0c\u5b89\u88c5Docker\u5e76\u5f15\u5bfc\u540d\u4e3aArchLInux-cupsd\u7684x64 ArchLInux\u5bb9\u5668\u3002\u6211\u4eec\u8fd8\u9700\u8981AUR\u5305qemu-user-static-bin\u3002\u4ee5\u4e0b\u547d\u4ee4\u5728ArchLInux ARM\u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u4f46\u539f\u5219\u4e0a\u5b89\u88c5\u7a0b\u5e8f\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u53d1\u884c\u7248\u4e0a\u8fd0\u884c\u3002\nPacman-S docker qemu-user-static-bingpasswd-a picout dockersystemctl enable--now dockerDOCKER_CLI_ENTIFICATION=enable docker run--\u7279\u6743\\-v/dev/bus/usb/\uff1a/dev/bus/usb/\\-p 631\uff1a631\\-dit\\--\u59cb\u7ec8\u91cd\u65b0\u542f\u52a8\\-entry point/usr/bin/cupsd\\--name ArchLInux-cupsd--Platform Linux\u3002\nDocker\u548c\u5bb9\u5668\u5c06\u5728\u5f15\u5bfc\u65f6\u81ea\u52a8\u542f\u52a8\uff0c\u5e76\u5c06CUPS\u914d\u7f6e\u548c\u7f51\u7edc\u6253\u5370\u7aef\u53e3631\u8f6c\u53d1\u5230\u4e3b\u673a\u3002\u8bf7\u786e\u4fdd\u5728\u9632\u706b\u5899\u4e0a\u6253\u5f00\u6b64\u7aef\u53e3\u3002\n\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u5c06\u5728\u5bb9\u5668\u5185\u751f\u6210\u4e00\u4e2ashell\u3002\u6211\u4eec\u73b0\u5728\u5c06\u5b89\u88c5CUPS\u5b88\u62a4\u7a0b\u5e8f\u548c\u4e13\u6709\u6253\u5370\u9a71\u52a8\u7a0b\u5e8f\u3002\u6839\u636e\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e0d\u540c\uff0c\u60a8\u5fc5\u987b\u5411\u5305\u7ba1\u7406\u5668\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5b58\u50a8\u5e93\u3002\n\u9664\u4e86\u5b89\u88c5\u4f9d\u8d56\u9879\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u8bbe\u7f6eroot\u5bc6\u7801\uff0c\u56e0\u4e3a\u7a0d\u540e\u6211\u4eec\u5c06\u5728CUPS Web\u7ba1\u7406\u754c\u9762\u4e2d\u4f7f\u7528\u5b83\u3002\n\u542f\u52a8CUPS\u6253\u5370\u670d\u52a1\u5668\u4e4b\u524d\uff0c\u8bf7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4ee5\u5141\u8bb8\u8fdc\u7a0b\u8bbf\u95ee\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u5728\u7f51\u7edc\u5b89\u5168\u65b9\u9762\u975e\u5e38\u5bbd\u677e\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u6839\u636e\u9700\u8981\u8fdb\u884c\u66f4\u6539\u3002\n[.]\u4fa6\u542c0.0.0.0\uff1a631[.]#\u9650\u5236\u5bf9\u670d\u52a1\u5668\u7684\u8bbf\u95ee.&lt\uff1blocation/&&gt;order Allow\uff0cDeny Allow all&lt\uff1b/location&&gt;#\u9650\u5236\u5bf9\u7ba1\u7406\u9875\u9762\u7684\u8bbf\u95ee.&lt\uff1blocation/admin&&gt;order Allow\uff0cDeny Allow all&lt\uff1b/location&&gt;[.]\u3002\n\u68c0\u67e5\u5bb9\u5668\u5185\u662f\u5426\u53ef\u4ee5\u8bc6\u522b\u60a8\u7684USB\u8fde\u63a5\u7684\u6253\u5370\u673a\uff0c\u5e76\u68c0\u67e5\u6743\u9650\u662f\u5426\u6b63\u786e\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7https://&lt\uff1bYOUR_SERVER_IP&gt\uff1b\uff1a631/admin/\u4e0a\u7684Web\u914d\u7f6e\u754c\u9762\u7167\u5e38\u8bbe\u7f6e\u6253\u5370\u673a(\u4f7f\u7528\u6253\u5370\u670d\u52a1\u5668\u7684\u672c\u5730IP\u5730\u5740)\u3002\u65e7\u5f0f\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\u4e5f\u5e94\u8be5\u53ef\u7528\u4e14\u5de5\u4f5c\u6b63\u5e38\u3002\n\u5728\u6700\u540e\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5c06\u914d\u7f6eAvahi\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c06\u6211\u4eec\u7684\u7f51\u7edc\u6253\u5370\u673a\u901a\u544a\u7ed9\u672c\u5730\u7f51\u7edc\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002\u6211\u731cCUPS\u53ef\u4ee5\u548cAvahi\u4e00\u8d77\u8fd0\u884c\u5f97\u5f88\u597d\uff0c\u4f46\u662f\u5728Docker\u4e2d\u6ca1\u6709Systemd\u652f\u6301(\u5728Podman\u4e2d\u4e5f\u6ca1\u6709\u591a\u5e73\u53f0\u652f\u6301)\uff0c\u5728\u5bb9\u5668\u4e2d\u540c\u65f6\u8fd0\u884c\u5c31\u6709\u70b9\u590d\u6742\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u5728\u4e3b\u673a\u7cfb\u7edf\u672c\u8eab\u7684Docker\u5bb9\u5668\u4e4b\u5916\u8fd0\u884cAvahi\u3002\n\u521b\u5efa\u4ee5\u4e0bavahi-service\u6587\u4ef6\uff0c\u4f46\u4e00\u5b9a\u8981\u66ff\u6362\u4ee5\u4e0b\u90e8\u5206\uff1aname\u3001rp\u3001ty\u3001adminurl\u548cnote\u3002\u90e8\u5206adminurl\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u5c06\u4e0eCUPS\u4f7f\u7528\u7684\u5185\u90e8\u6253\u5370\u673a\u540d\u79f0\u76f8\u5bf9\u5e94\u3002\u8f6c\u5230https://&lt\uff1bYOUR_SERVER_IP&gt\uff1b\uff1a631/printers/\uff0c\uff0c\u5355\u51fb\u60a8\u914d\u7f6e\u7684\u6253\u5370\u673a\u5e76\u8bb0\u4e0b\u6253\u5370\u673a\u540d\u79f0\u3002\nstandalone=&#39\uff1bno&#39\uff1b\uff1f&gt\uff1b&lt\uff1b\uff01--*-nxml-*--&gt\uff1b&lt\uff1b\uff01DOCTYPE\u670d\u52a1\u7ec4\u7cfb\u7edf&#34\uff1bavahi-service.dtd&#34\uff1b&gt\uff1b&lt\uff1bservice-group&gt\uff1b&lt\uff1b\u540d\u79f0&gt\uff1b/\u540d\u79f0&gt\uff1b\u670d\u52a1&lt\uff1b&lt\uff1b\u7c7b\u578b&gt\uff1b_ipp._tcp&lt\uff1b/\u7c7b\u578b&gt\uff1b&lt\uff1bsubtype&gt\uff1b_universal._sub._ipp._tcp&lt\uff1b/subtype&gt\uff1b&lt\uff1bport&gt\uff1b631&lt\uff1b/port&gt\uff1b&lt\uff1btxt-Record&gt\uff1btxtver=1&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bqTotal=1&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1brp=printers/Dell_1250c_Color_Printer&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bty=\u6234\u5c141250c&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1badminurl=http://192.168.178.2:631/printers/Dell_1250c_Color_Printer&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-Record&gt\uff1b\u5907\u6ce8=\u6234\u5c141250c&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1bpriority=0&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bproduct=(GPL Ghostscript)&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1b\u6253\u5370\u673a\u72b6\u6001=3&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1bprinter-type=0x801046&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-record&gt\uff1bTransparent=T&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bBinary=T&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1b\u4f20\u771f=F&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bColor=T&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1b\u53cc\u9762=T&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bStaple=F&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bCopies=T&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1bCollate=F&lt\uff1b/txt-record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bPunch=F&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1bScan=F&lt\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-record&gt\uff1bpdl=application/octet-stream\uff0c\u5e94\u7528\u7a0b\u5e8f/pdf\uff0c\u5e94\u7528\u7a0b\u5e8f/PostScript\uff0c\u56fe\u50cf/jpeg\uff0c\u56fe\u50cf/png\uff0c\u56fe\u50cf/urf\uff1b/txt-Record&gt\uff1b&lt\uff1btxt-Record&gt\uff1burf=w8\uff0cSRGB24\uff0ccp1\uff0crs600&lt\uff1b/txt-Record\n\u6839\u636e\u60a8\u7684\u8bbe\u7f6e\uff0c\u60a8\u5e94\u8be5\u5728systemd-Resolution\u4e2d\u7981\u7528\u591a\u64adDNS\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u7ed3\u5408\u4f7f\u7528avahi\u548cnss-mds\u3002\n\u60a8\u7684Linux\u5ba2\u6237\u7cfb\u7edf\u5c06\u4f7f\u7528\u7f51\u7edc\u6253\u5370\u673a\uff0c\u4e00\u65e6CUPS\u548cAvahi\u5728\u90a3\u91cc\u8fd0\u884c\uff0c\u5b83\u5c06\u81ea\u52a8\u68c0\u6d4b\u6253\u5370\u673a\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u60a8\u7684\u670d\u52a1\u5668\u662f\u5426\u6b63\u5728\u64ad\u53d1\u6253\u5370\u673a\u3002\nAvahi-BROWSE-ART+wlan0 IPv4 Dell 1250c_ip._tcp local=wlan0 IPv4 Dell 1250c_ip._tcp local hostname=[picoud.local]address=[192.168.178.2]port=[631]txt=[&#34\uff1bURF=w8\uff0cSRGB24\uff0cCP1\uff0cRs600&#34\uff1b&#34\uff1bPDL=application/octet-stream\uff0capplication/pdf\uff0capplication/postscript\u3002&#34\uff1bPunch=F&#34\uff1b&#34\uff1bColate=F&#34\uff1b&#34\uff1b\u526f\u672c=T&#34\uff1b&#34\uff1b\u88c5\u8ba2=F&#34\uff1b&#34\uff1b\u53cc\u9762=T&#34\uff1b&#34\uff1b\u989c\u8272=T&#34\uff1b&#34\uff1b\u4f20\u771f=F&#34\uff1b&#34\uff1b\u4e8c\u8fdb\u5236=T&#34\uff1b&#34\uff1b\u900f\u660e=T&#34\uff1b&#34\uff1b\u6253\u5370\u673a\u7c7b\u578b=0x801046&#\u3002&#34\uff1bPriority=0&#34\uff1b&#34\uff1b\u5907\u6ce8=DELL 1250c&#34\uff1b&#34\uff1badminurl=http://192.168.178.2:631/printers/Dell_1250c_Color_Printer&#34\uff1b&#34\uff1bty=DELL_1250c_Color_Printer&#34\uff1b&#34\uff1brp=printers/Dell_1250c_Color_Printer&#34\uff1b&#34\uff1bqTotal=1&#34\uff1b&#34\uff1btxtver=1&#34\uff1b]\u3002\n\u5728iOS 13\u3001Windows 10\u548c\u6700\u65b0\u7248\u672c\u7684Ubuntu\u4e0a\uff0c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u9a71\u52a8\u7a0b\u5e8f\u5373\u53ef\u53d1\u73b0\u548c\u4f7f\u7528\u6253\u5370\u673a\u3002\n*\u6b64\u8868\u5355\u6536\u96c6\u60a8\u7684\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u5185\u5bb9\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8ddf\u8e2a\u7f51\u7ad9\u4e0a\u7684\u8bc4\u8bba\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\uff0c\u5728\u8be5\u653f\u7b56\u4e2d\uff0c\u60a8\u5c06\u83b7\u5f97\u6709\u5173\u6211\u4eec\u5b58\u50a8\u60a8\u7684\u6570\u636e\u7684\u4f4d\u7f6e\u3001\u65b9\u5f0f\u548c\u539f\u56e0\u7684\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "In this guide I\u2019m going to explain how to setup a CUPS network printing server on an ARM-Linux which will still be able to use older or discontinued printer drivers, meant for other architectures, using Docker with Qemu platform emulation. Therefore we could use for example 32bit Linux printer drivers emulated inside the container on our ARM server. In my example I\u2019m going to setup a Dell 1250c printer, but it should work with other devices as well.\n  For a long time I used a Dell 1250c printer, connected to a TP-Link router running OpenWRT, as a  simple network printing solution at home. Using this setup, I was able to print from every machine in the local network, as long the client operating system still had support for the legacy and proprietary Dell drivers.\n Soon I wanted to replace the TP-Link router with my own home-server, a small and inexpensive ARM-computer running ArchLinux. Installing and configuring a printing server using CUPS even on this platform would be easy but requires open-source printing drivers. Officially, Dell has  limited driver support for Windows and MacOS only, regarding this device. An alternative driver for the Xerox Phaser 6000 from 2011, which is compatible to this Dell printer, has Linux support but is  limited to the 32bit PC architecture. I won\u2019t be able to use it on my ARM-platform.\n  So somehow I have to \u201cemulate\u201d an 32/64bit environment with CUPS and the printing driver on the ARM board, to be able to use this printer again. I achieved this using Qemu and Docker using an experimental and lesser known container configuration.\n  On the ARM board, install Docker and bootstrap an x64 ArchLinux container called  archlinux-cupsd. We\u2019ll also need the  AUR package  qemu-user-static-bin. The following commands were tested on  ArchLinux ARM but in principle the setup should work on other distributions too.\n pacman -S docker qemu-user-static-bingpasswd -a picloud dockersystemctl enable --now dockerDOCKER_CLI_EXPERIMENTAL=enabled docker run --privileged \\ -v /dev/bus/usb/:/dev/bus/usb/ \\ -p 631:631 \\ -dit \\ --restart always \\ --entrypoint /usr/bin/cupsd \\ --name archlinux-cupsd --platform linux/amd64 archlinuxdocker exec -it archlinux-cupsd\n Docker and the container will be automatically started at boot time and will forward the CUPS configuration and network printing port  631 to the host. Be sure to open this port on your firewall.\n The last command will spawn a shell inside the container. We\u2019re now going to install the CUPS daemon together with the proprietary printing drivers. Depending on the driver, you have to add custom repositories to your package manager.\n   Besides installing the dependencies, we\u2019re going to set a root password since we\u2019ll need it later in the CUPS web admin interface.\n Before starting the CUPS printing server, modify the configuration file to allow remote access. The following example is very permissive regarding network security so you might want to change this according to your needs.\n [...]Listen 0.0.0.0:631[...]# Restrict access to the server...&lt;Location /&gt; Order allow,deny Allow all&lt;/Location&gt;# Restrict access to the admin pages...&lt;Location /admin&gt; Order allow,deny Allow all&lt;/Location&gt;[...]\n Check if your USB-attached printer is recognized inside the container and check if the permissions are correct.\n   Now you can setup the printer as usual via the web configuration interface at  https://&lt;YOUR_SERVER_IP&gt;:631/admin/ (use the local ip address of your printing server). The legacy printer drivers should be also available and working.\n  In the last step, we\u2019ll going to configure Avahi, a daemon which will advertise our network printer to the local network. I guess CUPS would run fine together with Avahi but without Systemd-support in Docker (and  no multi-platform support in Podman) it is a bit complicated to run both in the container. So I decided to run Avahi outside of the Docker container on the host system itself.\n  Create following Avahi-service file but be sure to replace following sections:  name,  rp,  ty,  adminurl and  note. The part  adminurl is crucial, it will correspond to the internal printer name used by CUPS. Go to   https://&lt;YOUR_SERVER_IP&gt;:631/printers/, click on your configured printer and write down the printer name.\n &lt;?xml version=&#34;1.0&#34; standalone=&#39;no&#39;?&gt;&lt;!--*-nxml-*--&gt;&lt;!DOCTYPE service-group SYSTEM &#34;avahi-service.dtd&#34;&gt;&lt;service-group&gt; &lt;name&gt;Dell 1250c&lt;/name&gt; &lt;service&gt; &lt;type&gt;_ipp._tcp&lt;/type&gt; &lt;subtype&gt;_universal._sub._ipp._tcp&lt;/subtype&gt; &lt;port&gt;631&lt;/port&gt; &lt;txt-record&gt;txtver=1&lt;/txt-record&gt; &lt;txt-record&gt;qtotal=1&lt;/txt-record&gt; &lt;txt-record&gt;rp=printers/Dell_1250c_Color_Printer&lt;/txt-record&gt; &lt;txt-record&gt;ty=Dell 1250c&lt;/txt-record&gt; &lt;txt-record&gt;adminurl=http://192.168.178.2:631/printers/Dell_1250c_Color_Printer&lt;/txt-record&gt; &lt;txt-record&gt;note=Dell 1250c&lt;/txt-record&gt; &lt;txt-record&gt;priority=0&lt;/txt-record&gt; &lt;txt-record&gt;product=(GPL Ghostscript)&lt;/txt-record&gt; &lt;txt-record&gt;printer-state=3&lt;/txt-record&gt; &lt;txt-record&gt;printer-type=0x801046&lt;/txt-record&gt; &lt;txt-record&gt;Transparent=T&lt;/txt-record&gt; &lt;txt-record&gt;Binary=T&lt;/txt-record&gt; &lt;txt-record&gt;Fax=F&lt;/txt-record&gt; &lt;txt-record&gt;Color=T&lt;/txt-record&gt; &lt;txt-record&gt;Duplex=T&lt;/txt-record&gt; &lt;txt-record&gt;Staple=F&lt;/txt-record&gt; &lt;txt-record&gt;Copies=T&lt;/txt-record&gt; &lt;txt-record&gt;Collate=F&lt;/txt-record&gt; &lt;txt-record&gt;Punch=F&lt;/txt-record&gt; &lt;txt-record&gt;Bind=F&lt;/txt-record&gt; &lt;txt-record&gt;Sort=F&lt;/txt-record&gt; &lt;txt-record&gt;Scan=F&lt;/txt-record&gt; &lt;txt-record&gt;pdl=application/octet-stream,application/pdf,application/postscript,image/jpeg,image/png,image/urf&lt;/txt-record&gt; &lt;txt-record&gt;URF=W8,SRGB24,CP1,RS600&lt;/txt-record&gt; &lt;/service&gt;&lt;/service-group&gt;\n Depending on your setup you should disable multicast dns in systemd-resolved since we\u2019re going to use Avahi together with nss-mds.\n     Your Linux guest system, which will use the network printer, will automatically detect the printer as soon CUPS and Avahi is running there. Use following command to see if your server is advertising the printer.\n avahi-browse -art+ wlan0 IPv4 Dell 1250c _ipp._tcp local= wlan0 IPv4 Dell 1250c _ipp._tcp local hostname = [picloud.local] address = [192.168.178.2] port = [631] txt = [&#34;URF=W8,SRGB24,CP1,RS600&#34; &#34;pdl=application/octet-stream,application/pdf,application/postscript,image/jpeg,image/png,image/urf&#34; &#34;Scan=F&#34; &#34;Sort=F&#34; &#34;Bind=F&#34; &#34;Punch=F&#34; &#34;Collate=F&#34; &#34;Copies=T&#34; &#34;Staple=F&#34; &#34;Duplex=T&#34; &#34;Color=T&#34; &#34;Fax=F&#34; &#34;Binary=T&#34; &#34;Transparent=T&#34; &#34;printer-type=0x801046&#34; &#34;printer-state=3&#34; &#34;product=(GPL Ghostscript)&#34; &#34;priority=0&#34; &#34;note=Dell 1250c&#34; &#34;adminurl=http://192.168.178.2:631/printers/Dell_1250c_Color_Printer&#34; &#34;ty=Dell_1250c_Color_Printer&#34; &#34;rp=printers/Dell_1250c_Color_Printer&#34; &#34;qtotal=1&#34; &#34;txtver=1&#34;]\n Discovering and using the printer without installing any drivers is possible on iOS 13, Windows 10 and the lastest Ubuntu.\n    *  This form collects your name, email and content so that we can keep track of the comments placed on the website. For more info check our privacy policy where you&#39;ll get more info on where, how and why we store your data.", "posttime": "2020-05-29 20:32:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u6253\u5370,qemu,legacy,lt", "title": "\u4f7f\u7528QEMU\u6a21\u62dfCUPS\u7684\u65e7\u5f0f\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f", "title_en": "Emulate legacy printer drivers for CUPS with QEMU", "transed": 1, "url": "https://blog.project-insanity.org/2020/05/19/cups-airprint-server-with-legacy-printer-driver-support/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u6253\u5370", "qemu", "legacy", "lt"]}, {"category": "", "categoryclass": "", "imagename": "05275ddf887f6eff1d8ca5b3af4acefd.png", "infoid": 1004226, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fd8\u6389\u5783\u573e\u90ae\u4ef6\u3001\u5e7f\u544a\u90ae\u4ef6\u3001\u9ed1\u5ba2\u653b\u51fb\u673a\u5668\u4eba\u5427\u3002\u4fdd\u6301\u60a8\u771f\u5b9e\u90ae\u7bb1\u7684\u6e05\u6d01\u548c\u5b89\u5168\u3002\u5783\u573e\u90ae\u4ef6\u63d0\u4f9b\u4e34\u65f6(\u6216\u6c38\u4e45)\u3001\u5b89\u5168\u3001\u533f\u540d\u3001\u514d\u8d39\u3001\u4e00\u6b21\u6027\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u60f3\u6765\u4e00\u676f\u5417\uff1f\u6b64\u5904\uff1a@trashemail_bot\u3002\n\u4e00\u6b21\u6027\u7535\u5b50\u90ae\u4ef6-\u662f\u4e00\u9879\u670d\u52a1\uff0c\u5141\u8bb8\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u540e\u81ea\u6bc1\u7684\u4e34\u65f6\u5730\u5740(\u8fd9\u91cc\u7684\u4e34\u65f6\u56e0\u7d20\u53d6\u51b3\u4e8e\u60a8)\u63a5\u6536\u7535\u5b50\u90ae\u4ef6\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3a\uff1a\u4e34\u65f6\u90ae\u4ef6\u300110\u5206\u949f\u90ae\u4ef6\u3001\u4e00\u6b21\u6027\u7535\u5b50\u90ae\u4ef6\u3001\u5047\u90ae\u4ef6\u6216\u5783\u573e\u90ae\u4ef6\u3002\u8bb8\u591a\u8bba\u575b\u3001Wi-Fi\u6240\u6709\u8005\u3001\u7f51\u7ad9\u548c\u535a\u5ba2\u8981\u6c42\u8bbf\u95ee\u8005\u5728\u67e5\u770b\u5185\u5bb9\u3001\u53d1\u5e03\u8bc4\u8bba\u6216\u4e0b\u8f7d\u4e4b\u524d\u8fdb\u884c\u6ce8\u518c\u3002\n\u5783\u573e\u90ae\u4ef6\u4e0d\u662f\u6700\u5148\u8fdb\u7684\u4e00\u6b21\u6027\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\uff0c\u4f46\u5b83\u662f\u4e00\u9879\u53ef\u9760\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u907f\u514d\u5783\u573e\u90ae\u4ef6\uff0c\u786e\u4fdd\u5b89\u5168\uff0c\u5e76\u5c06\u7535\u5b50\u90ae\u4ef6\u76f4\u63a5\u53d1\u9001\u5230\u60a8\u7684@trashemail_bot Telegram\u673a\u5668\u4eba\u3002\u5982\u679c\u60a8\u6536\u5230\u7684\u6b64\u7c7b\u90ae\u4ef6\u592a\u591a\uff0c\u53ea\u9700\u5355\u51fb\u4e00\u4e0b(Oops\u547d\u4ee4\uff0c\u56e0\u4e3a\u8fd9\u662f\u7535\u62a5\u673a\u5668\u4eba)\u5373\u53ef\u5220\u9664\u7535\u5b50\u90ae\u4ef6ID\uff1a)\u3002\n\u6709\u4e9b\u7f51\u7ad9\u63d0\u4f9b\u6b64\u7c7b\u529f\u80fd(\u5982https://temp-mail.org/en/\u7b49)\uff0c\u4f46\u6b64\u7c7b\u5e73\u53f0\u5b58\u5728\u67d0\u4e9b\u95ee\u9898\uff1a\n\u6bcf\u6b21\u4f60\u5fc5\u987b\u8bbf\u95ee\u7f51\u7ad9\u624d\u80fd\u83b7\u5f97\u4e00\u5c01\uff0c\u4f60\u4e0d\u53ef\u80fd\u957f\u65f6\u95f4\u4fdd\u7559\u76f8\u540c\u7684\u4e34\u65f6\u90ae\u4ef6\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u5207\uff0c\u6211\u51b3\u5b9a\u6839\u636e\u6211\u7684\u7231\u597d\u505a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5e76\u8003\u8651\u5c06\u5176\u4f5c\u4e3a\u4e00\u79cd\u670d\u52a1\u63d0\u4f9b\u7ed9\u5176\u4ed6\u4eba\uff1a)\u6211\u7684\u670d\u52a1\u5982\u4f55\u6bd4\u4ed6\u4eec\u7684\u66f4\u597d\uff1a\n\u6574\u4e2a\u6e90\u4ee3\u7801\u90fd\u662f\u516c\u5f00\u7684\uff0c\u6211\u5bf9\u4f60\u7684\u6570\u636e\u4e00\u70b9\u4e5f\u4e0d\u611f\u5174\u8da3\u3002\n\u73b0\u5728\u6211\u62e5\u6709\u4e00\u4e2a\u57dftrashemail.in\uff0c\u60a8\u5c06\u53ea\u80fd\u4ece\u8be5\u57df\u83b7\u5f97\u7535\u5b50\u90ae\u4ef6ID\u3002(\u60a8\u5f88\u5bb9\u6613\u8bb0\u4f4f)\u3002\n\u60a8\u7684\u7535\u5b50\u90ae\u4ef6ID\u7684\u4e34\u65f6\u6709\u6548\u65f6\u95f4\u5728\u60a8\u8eab\u4e0a\uff0c\u800c\u4e0d\u662f\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u6c38\u4e45\u4fdd\u5b58\u5b83\uff0c\u6216\u8005\u53ea\u8981\u6211\u80fd\u591f\u7ef4\u62a4@trashemail_bot\u3002\n\u8fd9\u4e2a\u9879\u76ee\u662f\u51fa\u4e8e\u6fc0\u60c5\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u4efb\u4f55\u8d5a\u53d6\u4efb\u4f55\u4e1c\u897f\u7684\u52a8\u673a\uff0c\u6240\u4ee5\u6ca1\u6709\u5e7f\u544a\u3002(\u6211\u662f\u8ba4\u771f\u7684\uff0c\u6211\u4e5f\u8ba8\u538c\u4ed6\u4eec\uff0c\u5c31\u50cf\u4f60\u4e00\u6837)\u3002\nTrashEmail\u662fJava Spring-Boot\u5fae\u670d\u52a1\uff0c\u4efb\u4f55\u4eba\u5f53\u524d\u90fd\u53ef\u4ee5\u5728\u672c\u5730\u6784\u5efa\u5b83\uff0c\u53ea\u9700\u5f88\u5c11\u7684\u8bbe\u7f6e\u8fdb\u884c\u8c03\u6574\uff0c\u7136\u540e\u5728\u672c\u5730\u8fd0\u884c\u6574\u4e2a\u5b89\u88c5\u7a0b\u5e8f\u3002\u60a8\u53ea\u9700\u62e5\u6709\u90ae\u4ef6\u670d\u52a1\u5668(SMTP\u548cIMAP)\u3001\u7535\u62a5bot\u4ee4\u724c\u548cMVN\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u6784\u5efa\u5b83\u3002\u5bf9\u90ae\u4ef6\u670d\u52a1\u5668\u6709\u4ee5\u4e0b\u51e0\u4e2a\u8981\u6c42\uff1a\n\u6240\u6709\u60a8\u9700\u8981\u505a\u7684\u5c31\u662f\u514b\u9686\u6e90\u4ee3\u7801\uff0c\u6784\u5efa\u5e76\u8fd0\u884c\uff0c\u7136\u540e\u544a\u8bc9\u7535\u62a5\u60a8\u6b63\u5728\u76d1\u542c\u8fd9\u91cc\u3002\ngit\u514b\u9686https://github.com/r0hi7/Trashemail.git cd\u5783\u573e\u90ae\u4ef6#\u6839\u636e\u60a8\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f.yml\u6587\u4ef6#mvn\u5168\u65b0\u5b89\u88c5#\u5982\u679c\u6210\u529fljava-jar\u76ee\u6807/\u5783\u573e\u90ae\u4ef6\u76ee\u6807/teldot-0.0.1-SNAPSHOT.jar\u3002\n#Email Server imap\u548csmtp\u914d\u7f6e#smtp\u670d\u52a1\u5668\u5e94\u652f\u6301\u521b\u5efa\u548c\u5220\u9664\u522b\u540d#imap\u670d\u52a1\u5668\u5e94\u652f\u6301\u7a7a\u95f2\u7535\u5b50\u90ae\u4ef6Server\uff1ahost\uff1atrashemail.in admin\uff1aEmail\uff1aContact@trashemail.in\u5bc6\u7801\uff1achangeme API\uff1aAliases\uff1aadd_url\uff1ahttps://trashemail.in/admin/mail/aliases/add Remove_url\uff1ahttps://trashemail.in/admin/mail/aliases/remove imap\uff1ahost\uff1atrashemail.in\u7aef\u53e3\uff1a993Email\uff1aContact@trashemail.in\u5bc6\u7801\uff1achangeme\u3002#Telegram BOT\u4e13\u7528\u8bbe\u7f6eTelegram\uff1aurl\uff1ahttps://api.telegram.org/bot botToken\uff1aTelegram-BOT-Token#\u7528\u4e8e\u5f00\u53d1\u76ee\u7684\uff0c\u4f7f\u7528H2\u3002#\u6211\u66f4\u559c\u6b22\u6587\u4ef6\u4e2d\u6301\u4e45\u7684H2\u3002Spring\uff1adataSource\uff1aurl\uff1ajdbc\uff1ah2\uff1afile\uff1a./appdb\uff1bDB_CLOSE_ON_EXIT=FALSE\uff1bAUTO_RECONNECT=TRUE Driver-Class-Name\uff1aorg.h2.\u9a71\u52a8\u7a0b\u5e8f\u7528\u6237\u540d\uff1aSA Password\uff1aPassword JPA\uff1aDatabase-Platform\uff1aorg.hibernate.Dialt.H2Dialect Hibernate\uff1aDDL-AUTO\uff1aUPDATE H2\uff1aConsole\uff1aPath\uff1a/H2-\u63a7\u5236\u53f0\u8bbe\u7f6e\uff1aWeb-Allow-Other\uff1aTrue Application\uff1aName\uff1aTrashemail#Tomcat\u670d\u52a1\u5668\u8bbe\u7f6e\u670d\u52a1\u5668\uff1a\u7aef\u53e3\uff1a9090#\u8bb0\u5f55\u5668\u8bbe\u7f6e\u65e5\u5fd7\u8bb0\u5f55\uff1aLevel\uff1aIO\uff1agiHub\uff1atrashemail\uff1adebug\u3002\n\u73b0\u5728\u5fc5\u987b\u5c06\u6b64\u670d\u52a1\u516c\u5f00\u5230\u4e92\u8054\u7f51\u4e0a\uff0c\u5e76\u4e14\u6709\u5982\u4e0b\u9009\u9879\uff1angrok\u3001dataplicity\u3001localnel\u7b49\u3002\nDB\u662f\u7531H2\u8d1f\u8d23\u7684\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d(\u6211\u8ba4\u4e3a\u8fd9\u5c31\u8db3\u591f\u4e86\uff0c\u5b83\u9700\u8981\u975e\u5e38\u8f7b\u7684DB\u8868)\u3002\n\u5b83\u6b3a\u9a97\u4e86\u7528\u6237\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6ID\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u9000\u51faID\u3002\u4e3a\u4ec0\u4e48Alais\uff0c\u56e0\u4e3aIMAP\u9700\u8981\u6b63\u786e\u8f6e\u8be2\u63a5\u6536\u7684\u90ae\u4ef6\uff1f\u8fd9\u5c31\u662f\u5b83\u662f\u5982\u4f55\u8bbe\u8ba1\u7684\u3002\n\u4e00\u65e6\u90ae\u4ef6\u88ab\u53d6\u56de\uff0c\u5c31\u4f1a\u8bc6\u522b\u76ee\u6807\u5e76\u53d1\u9001\u7535\u62a5\u6d88\u606f\u3002\n\u6211\u5df2\u7ecf\u5c1d\u8bd5\u8bbe\u8ba1\u8fd9\u9879\u670d\u52a1\u662f\u53ef\u9760\u7684\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u4efb\u4f55\u95ee\u9898\u7684\u53ef\u9760\u6027(\u6216\u4efb\u4f55\u5176\u4ed6)\uff0c\u8bf7\u968f\u65f6\u4e0b\u964d\u516c\u5173\u3002\u6211\u5f88\u4e50\u610f\u5ba1\u67e5\u548c\u5408\u5e76\u3002", "note_en": "Forget about spam, advertising mailings, hacking and attacking robots. Keep your real mailbox clean and secure.Trashemail provides temporary(or permanent), secure, anonymous, free, disposable email address. Want to get one ? its here :  @trashemail_bot\n  Disposable email - is a service that allows to receive email at a temporary(Here in case, the temporary factor is upto you) address that self-destructed after a certain time elapses. It is also known by names like : tempmail, 10minutemail, throwaway email, fake-mail or trash-mail. Many forums, Wi-Fi owners, websites and blogs ask visitors to register before they can view content, post comments or download something.\n Trashemail is not most advanced throwaway email service but a reliable service that helps you avoid spam, stay safe and get emails delivered directly to your  @trashemail_bot  Telegram bot. And in case you are getting too many such mails, just delete the email Id :) with one click(oops command, since this is telegram bot).\n There are websites that offers such sort of functionalities (like  https://temp-mail.org/en/ etc) but the certain issues with such platforms:\n Everytime you have to visit site to get one, you cant keep the same temporary mail for long.\n Considering all of this, I decided to make a open source project out of my hobby and thought of offering it as a service to others :)How my service is  better than theirs:\n The entire source code is open for audit, I am not interested in your data at all.\n Right now I own a domain trashemail.in and you will get emailIds from this domain only. (Easy for you to remember).\n The temporary time for your emailId to be alive is on you, not on the server, you can keep it permamently as well, or as long as I am able to maintaint the  @trashemail_bot.\n This project is out of passion, so I dont have motive of earning anything, so  No Ads.(I am serious, I hate them too, like you)\n  TrashEmail is Java spring-boot microservice that anyone can build locally currently with few setting to tune in and then have the entire setup running locally.All you need to own is mail server(SMTP and IMAP), telegram bot token and  mvn locally to build it.Few requirements with the mailserver:\n  All you need to do is clone the source, build and run, and just tell telegram that you are listening here.\n git clone https://github.com/r0hi7/Trashemail.git cd Trashemail  # Update the application.yml file  # according to your mail servermvn clean install  # If successfulljava -jar target/trashemail target/teledot-0.0.1-SNAPSHOT.jar\n  # Email Server IMAP and SMTP configuration  # SMTP server should support Alias creation and deletion  # IMAP server should support IDLE emailServer:  host:  trashemail.in  admin:  email:  contact@trashemail.in  password:  changeme  api:  aliases:  add_url:  https://trashemail.in/admin/mail/aliases/add  remove_url:  https://trashemail.in/admin/mail/aliases/remove  imap:  host:  trashemail.in  port:  993  email:  contact@trashemail.in  password:  changeme  # Telegram bot specific settings telegram:  url:  https://api.telegram.org/bot  botToken:  telegram-bot-token  # For development purpose, H2 is used.  # I prefer H2 persistent in file. spring:  datasource:  url:  jdbc:h2:file:./AppDB;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE  driver-class-name:  org.h2.Driver  username:  sa  password:  password  jpa:  database-platform:  org.hibernate.dialect.H2Dialect  hibernate:  ddl-auto:  update  h2:  console:  path:  /h2-console  settings:  web-allow-others:  true  application:  name:  Trashemail  # Tomcat server settings server:  port:  9090  # Logger settings logging:  level:  io:  github:  trashemail:  debug\n Now will have to expose this service to internet, and there are options like :  ngrok,  dataplicity,  localtunnel etc.\n DB is taken care by  h2, in a file, (I think that is sufficient, It need very light DB table).\n  It fools the user, that it created an email Id rather it creates an alais to exiting ID. Why Alais, as IMAP needs to poll right, for incoming mails? This is how it is engineered.\n  As soon as mail is fetched, the target is identified and telegram message is sent.\n I have tried to engineer this service to be reliable, in case if you find any issues with the reliability(or with anything else), please feel free to drop in a PR. I would be happy to review and merge.", "posttime": "2020-05-29 20:16:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u90ae\u4ef6,telegram,trashemail", "title": "TrashEmail\uff1a\u57fa\u4e8e\u7535\u62a5\u7684\u4e00\u6b21\u6027\u90ae\u4ef6\u670d\u52a1", "title_en": "TrashEmail: Telegram based disposable mail service", "transed": 1, "url": "https://github.com/r0hi7/Trashemail", "via": "", "real_tags": ["\u90ae\u4ef6", "telegram"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004225, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "##4042302.org\u4e0a\u7684nginx\u914d\u7f6e#Location/{ERROR_PAGE 404=302 https://2017.4042302.org$request_uri\uff1bTRY_FILES$URI$URI/=404\uff1b}\u3002\n\u5982\u679c\u6797\u514b\u65af\u4ece\u6765\u6ca1\u6709\u6b7b\u8fc7\u5462\uff1f\u5982\u679c\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u7834\u574f\u8fc7\u7f51\u7edc\u5462\uff1f\u5982\u679c\u4e0d\u6d89\u53ca\u4efb\u4f55\u989d\u5916\u7684\u5de5\u4f5c\u5462\uff1f", "note_en": "## nginx configuration on 4042302.org#location / { error_page 404 =302 https://2017.4042302.org$request_uri; try_files $uri $uri/ =404;}\n  What if links never died? What if  we never broke the Web? What if it didn\u2019t involve any extra work?", "posttime": "2020-05-29 20:16:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "uri", "title": "404\u2192302", "title_en": "404 \u2192 302", "transed": 1, "url": "https://4042302.org/", "via": "", "real_tags": ["uri"]}, {"category": "", "categoryclass": "", "imagename": "378170328701625b3cb383faba4b4f59.png", "infoid": 1004224, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u73b0\u5728\u90fd\u5728\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u89c6\u9891\u804a\u5929\u73b0\u5728\u975e\u5e38\u6d41\u884c\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528Twilio\u53ef\u7f16\u7a0b\u89c6\u9891\u5de5\u5177\u548cJavaScript\u683c\u5f0f\u7684Twilio\u65e0\u670d\u52a1\u5668\u5de5\u5177\u5305\uff0c\u57289\u5206\u949f\u5185\u542f\u52a8\u5e76\u8fd0\u884c\u89c6\u9891\u804a\u5929\u5ba4\u3002\n\u5c06API\u5bc6\u94a5\u4fdd\u5b58\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4ee5\u4fbf\u5f88\u5feb\u4f7f\u7528\u5b83\u4eec\uff0c\u7136\u540e\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u901a\u8fc7Twilio CLI\u5b89\u88c5Twilio\u65e0\u670d\u52a1\u5668\u5de5\u5177\u5305(\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\u3002\n\u5c06{insert-project-name}\u66ff\u6362\u4e3a\u60a8\u7684\u9879\u76ee\u540d\u79f0--\u6211\u8c03\u7528\u4e86\u6211\u7684tfvideo\u3002\u8be5\u547d\u4ee4\u5b8c\u6210\u540e\uff0c\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u9879\u76ee\u540d\u79f0\u7684\u76ee\u5f55\u3002\n\u9879\u76ee\u76ee\u5f55\u4e2d\u5305\u542b\u4e00\u4e9b\u73b0\u6210\u7684\u6587\u4ef6\u5939\u3002\u5728\u51fd\u6570\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3avideo-token.js\u7684\u6587\u4ef6\uff0c\u5728\u8d44\u6e90\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u6587\u4ef6\uff1aVideo.html\u548cindex.js\u3002\u5728.env\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u60a8\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5305\u542bACCOUNT_SID\u548cAUTH_TOKEN\u7684\u524d\u4e24\u884c\u3002\u5728\u5b83\u4eec\u4e0b\u9762\uff0c\u6dfb\u52a0\u60a8\u7684\u5e10\u6237SID\u3001API\u5bc6\u94a5\u548cAPI\u5bc6\u94a5\uff1a\n\u5728\u51fd\u6570/video-token.js\u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u751f\u6210\u8bbf\u95ee\u4ee4\u724c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3001\u56fa\u5b9a\u7684\u623f\u95f4\u540d\u79f0\u548cACCESS_TOKEN_IDENTITY\uff0c\u8fd9\u5bf9\u4e8e\u6bcf\u4e2a\u7528\u6237\u90fd\u662f\u4e0d\u540c\u7684\u3002\u6240\u6709\u7528\u6237\u90fd\u5c06\u88ab\u6388\u4e88\u5bf9\u623f\u95f4TF\u7684\u8bbf\u95ee\u6743\u9650\u3002\u6b64\u4ee3\u7801\u662f\u4ece\u6b64\u9875\u9762\u4fee\u6539\u7684\uff0c\u8be5\u9875\u9762\u8fd8\u5305\u542b\u6709\u5173\u8bbf\u95ee\u4ee4\u724c\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u51fa\u53e3\u3002\u5904\u7406\u7a0b\u5e8f=Function(Context\uff0cEvent\uff0cCallback){const Twilio_Account_SID=Context\u3002Twilio_Account_SID\uff1bConst Twilio_API_Key=\u4e0a\u4e0b\u6587\u3002Twilio_API_Key\uff1bConst Twilio_API_SECRET=\u4e0a\u4e0b\u6587\u3002Twilio_API_Secure\uff1bConst Access_Token_Identity=Math\u3002\u968f\u673a()\u3002toString(36)\u3002\u5b50\u4e32(2\uff0c15)+\u6570\u5b66\u3002\u968f\u673a()\u3002toString(36)\u3002substring(2\uff0c15)\uff1b//\u968f\u673a\u5ba2\u6237\u7aef\u540d\u79f0const room_name=&#39\uff1btf&#39\uff1b\uff1b//\u56fa\u5b9a\u623f\u95f4\u540d\u79f0const AccessToken=Twilio\u3002JWT\u3002AccessToken\uff1bconst VideoGrant=AccessToken\u3002VideoGrant\uff1b//\u53c2\u4e0e\u623f\u95f4\u53ea\u63d0\u4f9bToken//\u521b\u5efa\u4e00\u4e2aVideo Grant\u8ba9\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528Video\uff0c\u53ea\u5bf9\u8fd9\u4e2a\u623f\u95f4const VideoGrant=new VideoGrant({room\uff1aroom_name})\uff1b//\u521b\u5efa\u4e00\u4e2a\u8bbf\u95ee\u4ee4\u724c\uff0c\u5c06\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u6743\u9650const accessToken=new AccessToken(Twilio_Account_SID\uff0cTwilio_API_Key\uff0cTwilio_API_Secret)\uff1baccesToken\u7b7e\u540d\u5e76\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u6743\u9650const accessToken=new AccessToken(Twilio_Account_SID\uff0cTwilio_API_Key\uff0cTwilio_API_Secret)\uff1baccessToken\u3002addGrant(VideoGrant)\uff1b//\u5c06\u6388\u6743\u6dfb\u52a0\u5230Token accessToken\u4e2d\u3002IDENTITY=ACCESS_TOKEN_IDENTITY\uff1bcallback(NULL\uff0c{Token\uff1aaccessToken.\u3002toJwt()//\u5c06\u4ee4\u724c\u5e8f\u5217\u5316\u4e3aJWT\u5b57\u7b26\u4e32})\uff1b}\uff1b\n\u73b0\u5728\u6253\u5f00\u60a8\u521b\u5efa\u7684\u7a7a\u767d\u8d44\u4ea7/Video.html\u6587\u4ef6\u3002\u6211\u4eec\u5c06\u7f16\u5199\u4e00\u4e9b\u57fa\u672c\u7684HTML\uff0c\u5305\u62ec\u8fdb\u5165\u548c\u79bb\u5f00\u623f\u95f4\u7684\u6309\u94ae\u3001\u5c06\u81ea\u52a8\u663e\u793a\u7528\u6237\u76f8\u673a\u9884\u89c8\u7684\u89c6\u9891\u6807\u7b7e\u3001Axios\u548cTwilio Video.js\u5e93\u4ee5\u53ca\u6211\u4eec\u5373\u5c06\u901a\u8fc7\u811a\u672c\u6807\u7b7e\u521b\u5efa\u7684\u8d44\u6e90/index.js\u6587\u4ef6\uff1a\n&lt\uff1b\uff01DOCTYPE html&gt\uff1b&lt\uff1bhtml&gt\uff1b&lt\uff1bhead&gt\uff1b&lt\uff1bmeta charset=&#34\uff1butf-8&#34\uff1b&gt\uff1b&lt\uff1bmeta http-equv=&#34\uff1bX-UA\u517c\u5bb9&#34\uff1b&gt\uff1b&lt\uff1bmeta name=&#34\uff1bviewport&#34\uff1bcontent=&#34\uff1bwidth=device-width\uff0cinitial-scale=\u3002/title&gt\uff1b&lt\uff1b/head&gt\uff1b&lt\uff1bbody&gt\uff1b&lt\uff1bdiv id=&#34\uff1b\u623f\u95f4\u63a7\u5236&#34\uff1b&gt\uff1b&lt\uff1bvideo id=&#34\uff1bvideo&#34\uff1bautoplay muted=&#34\uff1btrue&#34\uff1bwidth=&#34\uff1b320&#34\uff1bhigh=&#34\uff1b240&#34\uff1b&gt\uff1b&lt\uff1b/video&gt\uff1b&lt\uff1b\u6309\u94aeID\u3002&gt\uff1b\u52a0\u5165\u623f\u95f4&lt\uff1b/BUTTON&&gt;&lt\uff1bBUTTON id=&#34\uff1bBUTTON-LEVE&#34\uff1b/BUTTON&&gt;&lt\uff1b/BUTTON&&gt;&lt\uff1b/div&&gt;t\uff1b&lt\uff1bscript src=&#34\uff1b//media.twiliocdn.com/sdk/js/video/releases/2.3.0/twilio-video.min.js&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1bscript src=&#34\uff1bhttps://unpkg.com/axios@0.19.0/dist/axios.min.js&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1bscript src=&#34\uff1bindex.js&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1b/BODY&gt\uff1b&lt\uff1b/html&gt\uff1b\n\u5c06\u65e0\u670d\u52a1\u5668\u57df\u540d(\u8fd9\u5c06\u662f\u57fa\u672cURL)\u8bbe\u7f6e\u4e3a\u60a8\u4f7f\u7528CLI\u6a21\u677f\u5bf9\u9879\u76ee\u8fdb\u884c\u7684\u4efb\u4f55\u547d\u540d\u3002\n\u5f53\u7528\u6237\u8fdb\u5165\u623f\u95f4\u65f6\uff0c\u901a\u8fc7axios\u8c03\u7528\u51fd\u6570/video-token.js\u6587\u4ef6\u751f\u6210\u8bbf\u95ee\u4ee4\u724c\u3002\n\u901a\u8fc7\u9644\u52a0\u4e8b\u4ef6\u4fa6\u542c\u5668\u6765\u8ba2\u9605\u6216\u53d6\u6d88\u8ba2\u9605\u8fdc\u7a0b\u53c2\u4e0e\u8005\u7684\u66f2\u76ee\u5230TF\u4f1a\u8bae\u5ba4\uff0c\u4ece\u800c\u663e\u793a\u8fdc\u7a0b\u53c2\u4e0e\u8005\u7684\u89c6\u9891\u3002\u5982\u679c\u4ed6\u4eec\u5df2\u7ecf\u5728\u623f\u95f4\u4e2d\uff0c\u6211\u4eec\u8fed\u4ee3\u73b0\u6709\u53c2\u4e0e\u8005\u5e76\u5c06\u4e8b\u4ef6\u4fa6\u542c\u5668\u9644\u52a0\u5230trackSubscribed\u3002\n\u6700\u540e\uff0c\u5982\u679c\u66f4\u6539\u623f\u95f4\u540d\u79f0\uff0c\u8fd8\u5fc5\u987b\u66f4\u6539\u751f\u6210\u7684\u4ee4\u724c\u3002\n(()=&gt\uff1b{&#39\uff1b\u4f7f\u7528\u4e25\u683c\u7684\uff1bconst Twilio_domain=location\u3002\u4e3b\u673a\uff1b//\u7528\u6237\u72ec\u6709\uff0c\u5c06\u662f\u89c6\u9891\u5e94\u7528\u7a0b\u5e8fconst room_name=&#39\uff1btf&#39\uff1b\uff1bconst Video=Twilio\u8bbf\u95ee\u7684\u7f51\u7ad9\u3002video\uff1blet VideoRoom\uff0clocalStream\uff1bconst video=document\u3002getElementById(&#34\uff1bvideo&#34\uff1b)\uff1b//\u9884\u89c8\u5c4f\u5e55\u5bfc\u822a\u5668\u3002\u5a92\u4f53\u8bbe\u5907\u3002getUserMedia({VIDEO\uff1aTRUE\uff0cAUDIO\uff1aTRUE})\u3002\u7136\u540e(VID=&gt\uff1b{\u89c6\u9891\u3002srcObject=vid\uff1blocalStream=vid\uff1b})//\u6309\u94ae\u5e38\u91cf\u8054\u5408RoomButton=document\u3002getElementById(&#34\uff1bbutton-Join&#34\uff1b)\uff1bconst leaveRoomButton=document\u3002getElementById(&#34\uff1bbutton-Leave&#34\uff1b)\uff1bvar site=`https\uff1a//${Twilio_domain}/video-token`\uff1bconsole\u3002log(`Site${site}`)\uff1bjoinRoomButton\u3002onClick=()=&gt\uff1b{//\u83b7\u53d6\u8bbf\u95ee\u4ee4\u724caxios\u3002get(`https\uff1a//${Twilio_domain}/video-token`)\u3002\u5219(Async(Body)=&gt\uff1b{Const Token=Body\u3002\u6570\u636e\u3002\u4ee4\u724c\uff1b\u63a7\u5236\u53f0\u3002log(Token)\uff1b//\u63a5\u5165\u623f\u95f4\u89c6\u9891\u3002connect(Token\uff0c{name\uff1aroom_name})\u3002\u90a3\u4e48((\u623f\u95f4)=&gt\uff1b{\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(`\u5df2\u8fde\u63a5\u5230\u623f\u95f4${room\u3002name}`)\uff1bVideoRoom=\u623f\u95f4\uff1b\u623f\u95f4\u3002\u53c2\u4e0e\u8005\u3002for Each(ParticipantConnected)\uff1b\u623f\u95f4\u3002\u5728(&#34\uff1bParticipantConnected&#34\uff1b\uff0cParticipantConnected)\uff1b\u623f\u95f4\u4e0a\u3002\u5728(&#34\uff1b\u53c2\u4e0e\u4eba\u65ad\u5f00\u8fde\u63a5&#34\uff1b\uff0c\u53c2\u4e0e\u4eba\u65ad\u5f00\u8fde\u63a5)\uff1b\u623f\u95f4\u4e0a\u3002\u4e00\u6b21(&#34\uff1b\u65ad\u5f00&#34\uff1b\uff0c(\u9519\u8bef)=&gt\uff1b\u623f\u95f4\u3002\u53c2\u4e0e\u8005\u3002forEach(ArticipantDisconnected))\uff1bjoinRoomButton\u3002Disabled=true\uff1bleaveRoomButton\u3002Disabled=false\uff1b})\uff1b})\uff1b}\uff1b//\u79bb\u5f00\u623f\u95f4leveRoomButton\u3002onClick=()=&gt\uff1b{VideoRoom\u3002\u65ad\u5f00\u8fde\u63a5()\uff1b\u63a7\u5236\u53f0\u3002log(`\u4e0e\u623f\u95f4${VideoRoom\u65ad\u5f00\u8fde\u63a5\u3002name}`)\uff1bjoinRoomButton\u3002Disabled=false\uff1bleaveRoomButton\u3002Disabled=true\uff1b}\uff1b})()\uff1b//\u8fde\u63a5\u53c2\u4e0e\u8005\u5e38\u91cfParticipantConnected=(Participant)=&gt\uff1b{Console\u3002\u65e5\u5fd7(`Participant${Participant\u3002\u6807\u8bc6}\u5df2\u8fde\u63a5&#39\uff1b`)\uff1bconst div=\u6587\u6863\u3002createElement(&#39\uff1bdiv&#39\uff1b)\uff1b//\u4e3a\u65b0\u53c2\u4e0e\u8005div\u521b\u5efadiv\u3002ID=\u53c2\u4e0e\u8005\u3002SID\uff1b\u53c2\u4e0e\u8005\u3002\u5728(&#39\uff1btrackSubscribed&#39\uff1b\uff0cTrack=&gt\uff1btrackSubscribed(div\uff0cTrack))\uff1b\u53c2\u4e0e\u8005\u4e0a\u3002\u5728(&#39\uff1btrackUnscribed&#39\uff1b\uff0ctrackUnscribed)\uff1b\u53c2\u4e0e\u8005\u4e0a\u3002\u811a\u5370\u3002forEach(\u53d1\u5e03=&gt\uff1b{IF(\u53d1\u5e03\u3002isSubscribed){trackSubscribed(div\uff0cPublication.\u3002\u97f3\u8f68)\uff1b}})\uff1b\u6587\u6863\u3002\u8eab\u4f53\u3002appendChild(Div)\uff1b}Const ParticipantDisconnected=(Participant)=&gt\uff1b{Console.\u3002\u65e5\u5fd7(`Participant${Participant\u3002Identity}\u5df2\u65ad\u5f00\u8fde\u63a5\u3002`)\uff1b\u6587\u6863\u3002getElementById(\u53c2\u4e0e\u8005\u3002SID)\u3002Remove()\uff1b}const trackSubscribed=(div\uff0cTrack)=&gt\uff1b{div.\u3002appendChild(\u8f68\u8ff9\u3002Attach())\uff1b}const trackUnscribed=(\u8ddf\u8e2a)=&gt\uff1b{\u8ddf\u8e2a\u3002\u5206\u79bb()\u3002forEach(\u5143\u7d20=&gt\uff1b\u5143\u7d20\u3002Remove())\uff1b}\u3002\n\u5728\u547d\u4ee4\u884c\u4e0a\uff0c\u8fd0\u884cTwilio Serverless\uff1aDeploy\u3002CLI\u5c06\u795d\u8d3a\u60a8\u6210\u529f\u90e8\u7f72\u4e86\u65e0\u670d\u52a1\u5668\u9879\u76ee\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u90e8\u7f72\u7ec6\u8282\u3002\u6293\u53d6Assets\u4e0b\u7684Assets/Video.html URL\uff0c\u4e0e\u60a8\u7684\u670b\u53cb\u5206\u4eab\uff0c\u7136\u540eTada\uff01\u5f53\u60a8\u9700\u8981\u5feb\u901f\u89c6\u9891\u901a\u8bdd\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u548c\u5171\u4eab\u60a8\u81ea\u5df1\u7684\u89c6\u9891\u5ba4\u3002\n\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u8003\u8651\u5230\u6ca1\u6709CSS\u7f16\u5199\uff0c\u5b83\u7edd\u5bf9\u4e0d\u9519\uff0c\u5bf9\u5427\uff1f\u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728GitHub\u4e0a\u627e\u5230\u3002\nTwilio\u7684\u65e0\u670d\u52a1\u5668\u5de5\u5177\u5305\u53ef\u4ee5\u65b9\u4fbf\u5730\u6258\u7ba1\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u5176\u5feb\u901f\u542f\u52a8\u548c\u8fd0\u884c\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u66f4\u591a\u7684CSS\u6765\u7f8e\u5316\u5e94\u7528\u7a0b\u5e8f\uff0c\u6dfb\u52a0\u53ef\u7f16\u7a0b\u7684\u804a\u5929\u529f\u80fd\uff0c\u6216\u8005\u66f4\u591a\u7684Twilio\u89c6\u9891\u529f\u80fd\uff0c\u83b7\u5f97\u7528\u6237\u7684\u540d\u5b57\u5e76\u5728\u4ed6\u4eec\u804a\u5929\u65f6\u663e\u793a\u4ed6\u4eec\uff0c\u7b49\u7b49\u3002\u8bf7\u5728\u7f51\u4e0a\u6216\u8bc4\u8bba\u4e2d\u8ba9\u6211\u77e5\u9053\u60a8\u6b63\u5728\u6784\u5efa\u4ec0\u4e48\u3002", "note_en": "With many of us now working remote, video chats are so in right now. Here\u2019s how to get up-and-running with a video chat room in nine minutes using  Twilio Programmable Video\u00a0and the  Twilio Serverless Toolkit\u00a0in JavaScript.\n     Save your API Keys somewhere to use them soon and then  install the Twilio Serverless Toolkit\u00a0via the Twilio CLI if you haven&#39;t already by running\n      Replace  {insert-project-name} with your project name--I called mine  tfvideo. When the command completes, a directory with the project name will be created under your current directory.\n The project directory contains some ready-made folders. In  functions, add a file called  video-token.js and in  assets add two files:  video.html and  index.js. Set your environment variables in  .env. You can leave the first two lines containing  ACCOUNT_SID and  AUTH_TOKEN alone. Below them, add your Account SID, API Key, and API Secret:\n    In  functions/video-token.js add the following code to generate an access token. Here we set environment variables, a fixed room name, and the  ACCESS_TOKEN_IDENTITY\u00a0which will be different for every user. All users will be granted access to the room  tf. This code was modified from  this page which also contains more information on Access Tokens.\n exports . handler  =  function ( context ,  event ,  callback )  {   const  TWILIO_ACCOUNT_SID  =  context . TWILIO_ACCOUNT_SID ;   const  TWILIO_API_KEY  =  context . TWILIO_API_KEY ;   const  TWILIO_API_SECRET  =  context . TWILIO_API_SECRET ;   const  ACCESS_TOKEN_IDENTITY  =   Math . random ()   . toString ( 36 )   . substring ( 2 ,  15 )  +   Math . random ()   . toString ( 36 )   . substring ( 2 ,  15 );  // random client name     const  ROOM_NAME  =  &#39;tf&#39; ;  // fixed room name   const  AccessToken  =  Twilio . jwt . AccessToken ;   const  VideoGrant  =  AccessToken . VideoGrant ;   // only tokens are available for participating rooms   // Create a Video grant enabling client to use Video, only for this room    const  videoGrant  =  new  VideoGrant ({   room :  ROOM_NAME   });   //Create an access token to sign and return to the client with the grant we just created   const  accessToken  =  new  AccessToken (   TWILIO_ACCOUNT_SID ,   TWILIO_API_KEY ,   TWILIO_API_SECRET   );   accessToken . addGrant ( videoGrant );  //Add the grant to the token   accessToken . identity  =  ACCESS_TOKEN_IDENTITY ;   callback ( null ,  {   token :  accessToken . toJwt ()  //Serialize the token to a JWT string   });  };\n Now open the blank  assets/video.html file you made. We&#39;re going to write some bare-bones HTML including buttons for joining and leaving the room, a video tag that will automatically display a preview of the user&#39;s camera, and the Axios and Twilio Video.js libraries and\u00a0 assets/index.js file we&#39;re about to make\u00a0 via script tags:\n &lt;!DOCTYPE html&gt;  &lt; html &gt;   &lt; head &gt;   &lt; meta  charset = &#34;utf-8&#34; &gt;   &lt; meta  http-equiv = &#34;X-UA-Compatible&#34; &gt;   &lt; meta  name = &#34;viewport&#34;  content = &#34;width=device-width, initial-scale=1&#34; &gt;   &lt; title &gt;Twilio Video Serverless Demo &lt;/ title &gt;  &lt;/ head &gt;   &lt; body &gt;   &lt; div  id = &#34;room-controls&#34; &gt;   &lt; video  id = &#34;video&#34;  autoplay  muted = &#34;true&#34;  width = &#34;320&#34;   height = &#34;240&#34; &gt;&lt;/ video &gt;   &lt; button  id = &#34;button-join&#34; &gt;Join Room &lt;/ button &gt;   &lt; button  id = &#34;button-leave&#34;  disabled &gt;Leave Room &lt;/ button &gt;   &lt;/ div &gt;    &lt; script  src = &#34;//media.twiliocdn.com/sdk/js/video/releases/2.3.0/twilio-video.min.js&#34; &gt;&lt;/ script &gt;   &lt; script  src = &#34;https://unpkg.com/axios@0.19.0/dist/axios.min.js&#34; &gt;&lt;/ script &gt;   &lt; script  src = &#34;index.js&#34; &gt;&lt;/ script &gt;   &lt;/ body &gt;  &lt;/ html &gt;\n set the serverless domain name (this will be the base URL) as whatever you called your project with the CLI template\n   generate an access token via\u00a0 axios call to the  functions/video-token.js file when a user joins the room\n   display a remote participant&#39;s video by attaching an event listener to subscribe or unsubscribe their tracks to the  tf room. If they are already in the room, we iterate over the existing  participants and attach an event listener to  trackSubscribed.\n Lastly, if you change the room name, you must also change the token that&#39;s generated.\n (()  =&gt;  {   &#39;use strict&#39; ;   const  TWILIO_DOMAIN  =  location . host ;  //unique to user, will be website to visit for video app   const  ROOM_NAME  =  &#39;tf&#39; ;   const  Video  =  Twilio . Video ;   let  videoRoom ,  localStream ;   const  video  =  document . getElementById ( &#34;video&#34; );     // preview screen   navigator . mediaDevices . getUserMedia ({ video :  true ,  audio :  true })   . then ( vid  =&gt;  {   video . srcObject  =  vid ;   localStream  =  vid ;   })     // buttons   const  joinRoomButton  =  document . getElementById ( &#34;button-join&#34; );   const  leaveRoomButton  =  document . getElementById ( &#34;button-leave&#34; );   var  site  =  `https:// ${ TWILIO_DOMAIN } /video-token` ;   console . log ( `site  ${ site } ` );   joinRoomButton . onclick  =  ()  =&gt;  {   // get access token   axios . get ( `https:// ${ TWILIO_DOMAIN } /video-token` ). then ( async  ( body )  =&gt;  {   const  token  =  body . data . token ;   console . log ( token );   //connect to room   Video . connect ( token ,  {  name :  ROOM_NAME  }). then (( room )  =&gt;  {   console . log ( `Connected to Room  ${ room . name } ` );   videoRoom  =  room ;    room . participants . forEach ( participantConnected );   room . on ( &#34;participantConnected&#34; ,  participantConnected );    room . on ( &#34;participantDisconnected&#34; ,  participantDisconnected );   room . once ( &#34;disconnected&#34; ,  ( error )  =&gt;   room . participants . forEach ( participantDisconnected )   );   joinRoomButton . disabled  =  true ;   leaveRoomButton . disabled  =  false ;   });   });   };   // leave room   leaveRoomButton . onclick  =  ()  =&gt;  {   videoRoom . disconnect ();   console . log ( `Disconnected from Room  ${ videoRoom . name } ` );   joinRoomButton . disabled  =  false ;   leaveRoomButton . disabled  =  true ;   };  })();   // connect participant  const  participantConnected  =  ( participant )  =&gt;  {   console . log ( `Participant  ${ participant . identity }  connected&#39;` );    const  div  =  document . createElement ( &#39;div&#39; );  //create div for new participant   div . id  =  participant . sid ;    participant . on ( &#39;trackSubscribed&#39; ,  track  =&gt;  trackSubscribed ( div ,  track ));   participant . on ( &#39;trackUnsubscribed&#39; ,  trackUnsubscribed );     participant . tracks . forEach ( publication  =&gt;  {   if  ( publication . isSubscribed )  {   trackSubscribed ( div ,  publication . track );   }   });   document . body . appendChild ( div );  }   const  participantDisconnected  =  ( participant )  =&gt;  {   console . log ( `Participant  ${ participant . identity }  disconnected.` );   document . getElementById ( participant . sid ). remove ();  }   const  trackSubscribed  =  ( div ,  track )  =&gt;  {   div . appendChild ( track . attach ());  }   const  trackUnsubscribed  =  ( track )  =&gt;  {   track . detach (). forEach ( element  =&gt;  element . remove ());  }\n On the command line, run  twilio serverless:deploy. The CLI will congratulate you with  Serverless project successfully deployed and some other deployment details. Grab the  assets/video.html URL under  Assets, share it with your friends, and  tada! You have your own video room to use and share when you need a quick video call.\n  This app is pretty bare-bones but definitely decent given the lack of CSS written, eh? The complete code can be found  here on GitHub.\n  Twilio&#39;s Serverless Toolkit makes it easy to host apps and get them up-and-running quickly. Next you can write some more CSS to prettify the app, add a  programmable chat feature\u00a0or  more Twilio Video features, get users&#39; names and display them when they are in the chat, and more. Let me know online or in the comments what you&#39;re building.", "posttime": "2020-05-29 19:59:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,java,javascript,deploy,\u623f\u95f4", "title": "\u4f7f\u7528JavaScript\u548cTwilio\u57289\u5206\u949f\u5185\u6784\u5efa\u548c\u90e8\u7f72\u89c6\u9891\u5e94\u7528", "title_en": "Build and Deploy a Video App with JavaScript and Twilio in 9 Minutes", "transed": 1, "url": "https://www.twilio.com/blog/build-a-video-app-javascript-twilio-cli-quickly", "via": "", "real_tags": ["app", "java", "deploy", "\u623f\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "5622f0817abb0d1725265c44ac123dca.jpg", "infoid": 1004223, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6700\u8fd1\u5173\u4e8eWD\u3001\u4e1c\u829d\u548c\u5e0c\u6377\u5c06SMR\u9a71\u52a8\u5668\u6ed1\u5165\u96f6\u552e\u6e20\u9053\u5e76\u672a\u62ab\u9732\u5176\u901f\u5ea6\u8f83\u6162\u7684\u6280\u672f\u7684\u4f7f\u7528\u60c5\u51b5\u7684\u6240\u6709\u4e89\u8bae\uff0c\u6211\u4eec\u8ba4\u4e3a\u6df1\u5165\u4e86\u89e3\u4f7f\u7528SMR\u9a71\u52a8\u5668\u7684\u5b9e\u9645\u5f71\u54cd\u4f1a\u5f88\u6709\u8da3\u3002\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6709\u8d1f\u9762\u5f71\u54cd\uff0c\u4f46\u6700\u597d\u8fd8\u662f\u8868\u73b0\u51fa\u6765\u3002\u4e3a\u6b64\uff0c\u4eca\u5929\u6211\u4eec\u5c06\u6bd4\u8f83WD Red 4TB SMR\u9a71\u52a8\u5668\u4e0e\u5176\u524d\u8eabCMR\u9a71\u52a8\u5668\uff0c\u4ee5\u53ca\u5176\u4ed6\u5236\u9020\u5546\u7684CMR\u9a71\u52a8\u5668\u3002\n\u867d\u7136\u4e0eSTH\u4e3b\u7ad9\u70b9\u76f8\u6bd4\uff0c\u6211\u4eec\u5728YouTube\u4e0a\u7684\u5b58\u5728\u4ecd\u7136\u5f88\u5c0f\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8db3\u591f\u91cd\u8981\u7684\u53d1\u73b0\uff0c\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u9605\u8bfb\u90a3\u4e9b\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\u7684\u4eba\u3002\u5f53\u4f60\u9605\u8bfb\u7684\u65f6\u5019\uff0c\u8bf7\u4e0d\u8981\u62d8\u6ce5\u4e8e\u542c\u3002\n\u6211\u4eec\u7684\u8bb8\u591a\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u719f\u6089SMR\u548cCMR\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4f46\u662f\u5feb\u901f\u590d\u4e60\u4e00\u4e0b\u4e0d\u4f1a\u4f24\u5bb3\u4efb\u4f55\u4eba\uff01\n\u9996\u5148\u662fCMR\uff0c\u5b83\u4ee3\u8868\u4f20\u7edf\u7684\u78c1\u8bb0\u5f55\u3002\u81ea2000\u5e74\u4ee3\u4e2d\u671f\u4ee5\u6765\uff0c\u8fd9\u4e00\u76f4\u662f\u786c\u76d8\u6570\u636e\u5b58\u50a8\u80cc\u540e\u7684\u6807\u51c6\u6280\u672f\u3002\u6570\u636e\u88ab\u5199\u5165\u5e76\u6392\u7684\u3001\u4e0d\u91cd\u53e0\u7684\u78c1\u9053\u4e0a\uff0c\u5e76\u4e14\u5728\u4e00\u4e2a\u78c1\u9053\u4e0a\u7684\u5199\u5165\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5176\u76f8\u90bb\u78c1\u9053\u3002\n\u8f83\u65b0\u7684\u7ade\u4e89\u8005\u662fSMR\uff0c\u5373\u74e6\u5f0f\u78c1\u8bb0\u5f55\u3002\u5b83\u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u74e6\u7247\uff0c\u662f\u56e0\u4e3a\u6570\u636e\u8f68\u8ff9\u53ef\u4ee5\u50cf\u5c4b\u9876\u74e6\u7247\u4e00\u6837\u53ef\u89c6\u5316\uff1b\u5b83\u4eec\u90e8\u5206\u76f8\u4e92\u91cd\u53e0\u3002\u7531\u4e8e\u8fd9\u79cd\u91cd\u53e0\uff0c\u4ea7\u751f\u7684\u78c1\u9053\u66f4\u8584\uff0c\u4ece\u800c\u5141\u8bb8\u66f4\u591a\u7684\u78c1\u9053\u9002\u5408\u7ed9\u5b9a\u7684\u533a\u57df\uff0c\u5e76\u5b9e\u73b0\u66f4\u597d\u7684\u603b\u4f53\u6570\u636e\u5bc6\u5ea6\u3002WD Red\u662f\u8bbe\u5907\u7ba1\u7406\u7684SMR\u9a71\u52a8\u5668\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u663e\u793a\u4e3a\u666e\u901a\u786c\u76d8\u9a71\u52a8\u5668\u3002\n\u5f53\u9700\u8981\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u65f6\uff0cSMR\u78c1\u9053\u7684\u91cd\u53e0\u6392\u5217\u4f1a\u4f7f\u9a71\u52a8\u5668\u64cd\u4f5c\u53d8\u5f97\u590d\u6742\u3002\u5728SMR\u9a71\u52a8\u5668\u4e0a\u5199\u5165\u6570\u636e\u65f6\uff0c\u91cd\u53e0\u78c1\u9053\u4e0a\u7684\u6570\u636e\u4e5f\u4f1a\u53d7\u5230\u5199\u5165\u8fc7\u7a0b\u7684\u5f71\u54cd\u3002\u8fd9\u4f1a\u5f3a\u5236\u5728\u8be5\u8fc7\u7a0b\u4e2d\u91cd\u5199\u91cd\u53e0\u78c1\u9053\u4e0a\u7684\u6570\u636e\uff0c\u8fd9\u9700\u8981\u989d\u5916\u7684\u65f6\u95f4\u6765\u6267\u884c\u3002\n\u4f5c\u4e3a\u5bf9\u6b64\u635f\u5931\u7684\u7f13\u89e3\uff0c\u53ef\u4ee5\u5c06\u5199\u5165\u7f13\u5b58\u5230\u4f7f\u7528CMR\u6280\u672f\u8fd0\u884c\u7684\u9a71\u52a8\u5668\u7684\u67d0\u4e2a\u6bb5\uff0c\u5e76\u4e14\u5728\u7a7a\u95f2\u65f6\u95f4\u5185\uff0c\u9a71\u52a8\u5668\u4f1a\u5c06\u8fd9\u4e9b\u5199\u5165\u5047\u8131\u673a\u5230SMR\u533a\u57df\u3002\u663e\u7136\uff0c\u6b64CMR\u7f13\u5b58\u7684\u5bb9\u91cf\u5c06\u662f\u6709\u9650\u7684\uff0c\u5982\u679c\u6709\u8db3\u591f\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5219\u53ef\u80fd\u4f1a\u8017\u5c3d\u3002\n\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u9a71\u52a8\u5668\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u76f4\u63a5\u5199\u5165SMR\u5e76\u8c03\u7528\u6027\u80fd\u635f\u5931\u3002WD\u6ca1\u6709\u63d0\u4f9b\u4ed6\u4eec\u7684\u9a71\u52a8\u5668\u5982\u4f55\u51cf\u8f7b\u4f7f\u7528SMR\u5bf9\u6027\u80fd\u5f71\u54cd\u7684\u7ec6\u8282\uff0c\u6240\u4ee5\u6211\u4eec\u6b63\u5728\u731c\u6d4bWD Red\u4e2dCMR\u7f13\u5b58\u533a\u7684\u5927\u5c0f\u751a\u81f3\u662f\u5426\u5b58\u5728\u3002\n\u5982\u679c\u4f60\u60f3\u8981\u66f4\u591a\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u7b2c\u4e09\u65b9\u63cf\u8ff0\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u4e1c\u829d2015\u5e74\u7684\u4f1f\u5927\u8bba\u6587\uff1a\u7528\u4e8e\u5927\u5bb9\u91cf\u786c\u76d8\u9a71\u52a8\u5668\u7684\u74e6\u7247\u78c1\u8bb0\u5f55\u6280\u672f(The Shingled Magic Record Technologies for Large-Capacity Hard Disk Drive)\u3002\n\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8eSTH\u7684\u6587\u7ae0\u4e4b\u540e\uff0c\u6211\u4eec\u6536\u5230\u7684\u95ee\u9898\u662f\u8fd9\u5bf9\u9635\u5217\u6709\u4f55\u5f71\u54cd\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u7684\u8bfb\u8005\u4f7f\u7528RAID\u9635\u5217\u3002\u6211\u4eec\u5728STH\u4f7f\u7528\u4e86\u5f88\u591aZF\uff0c\u6240\u4ee5\u57282020\u5e744\u6708\u4e2d\u65ec\uff0c\u6211\u4eec\u5f00\u59cb\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u770b\u770b\u662f\u5426\u771f\u7684\u6709\u533a\u522b\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u786e\u5b9e\u5b58\u5728\uff0c\u800c\u4e14\u662f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u3002\n\u5bf9\u4e8e\u6d4b\u8bd5\u914d\u7f6e\uff0c\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u4e0d\u5f3a\u8c03CPU\u6027\u80fd\u7684\u914d\u7f6e\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u5c06CPU\u6027\u80fd\u4ece\u65b9\u7a0b\u5f0f\u4e2d\u5254\u9664\uff0c\u5c06\u91cd\u70b9\u653e\u5728\u9a71\u52a8\u5668\u6027\u80fd\u4e0a\u3002\u4e0b\u9762\u662f\u6211\u4eec\u4f7f\u7528\u7684\u5185\u5bb9\uff1a\n\u64cd\u4f5c\u7cfb\u7edf\uff1aWindows 10 Pro 1909 64\u4f4d/FreeNAS 11.3-U2(\u8bf7\u6ce8\u610f\uff0c\u6700\u65b0\u7248\u672c\u662fFreeNAS 11.3-U3.1\uff0c\u4f46\u5b83\u662f\u5728\u6211\u4eec\u542f\u52a8\u9879\u76ee\u4e4b\u540e\u5f88\u4e45\u624d\u53d1\u5e03\u7684)\u3002\nWD40EFAX\u662f\u6bd4\u8f83\u4e2d\u7684\u552f\u4e00SMR\u9a71\u52a8\u5668\uff0c\u4e5f\u662f\u6d4b\u8bd5\u7684\u91cd\u70b9\u3002\n\u6211\u4eec\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u6d4b\u8bd5\u9886\u57df\u3002\u9996\u5148\uff0c\u65b0\u7684SMR\u9a71\u52a8\u5668\u5df2\u7ecf\u901a\u8fc7\u4e86\u51e0\u4e2a\u6807\u51c6\u57fa\u51c6\u6d4b\u8bd5\uff0c\u770b\u770b\u5b83\u5728\u66f4\u5927\u7684\u9a71\u52a8\u5668\u6c60\u4e2d\u7684\u8868\u73b0\u5982\u4f55\u3002\u4e4b\u540e\uff0c\u8fd0\u884c\u4e86\u4e00\u4e9b\u66f4\u6709\u9488\u5bf9\u6027\u7684\u6d4b\u8bd5\uff0c\u5728\u6807\u51c6\u7684ZFS RAIDZ\u64cd\u4f5c\u4e2d\u5c06WD40EFAX\u4e0e\u5176\u4ed6\u4e09\u4e2aCMR 4TB\u9a71\u52a8\u5668\u8fdb\u884c\u5bf9\u6bd4\uff1a\u5728\u9a71\u52a8\u5668\u51fa\u73b0\u6545\u969c\u540e\u4f7f\u7528\u65b0\u9a71\u52a8\u5668\u91cd\u5efa\u9635\u5217\u3002\n\u5728\u5f00\u59cb\u6b64\u6d4b\u8bd5\u5e8f\u5217\u4e4b\u524d\uff0c\u901a\u8fc7\u5411\u9a71\u52a8\u5668\u5199\u51653TB\u7684\u6570\u636e\u6765\u51c6\u5907\u9a71\u52a8\u5668\uff0c\u7136\u540e\u5220\u9664\u5176\u4e2d\u76841TB\u6570\u636e\u3002\u6d4b\u8bd5\u5728\u9a71\u52a8\u5668\u51c6\u5907\u5b8c\u6210\u540e\u7acb\u5373\u5f00\u59cb\u3002\u9996\u5148\uff0c\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684125 GB\u6587\u4ef6\u62f7\u8d1d\u6765\u6d4b\u8bd5\u57fa\u51c6\u5b9e\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u4e4b\u5916\u7684\u987a\u5e8f\u5199\u5165\u901f\u5ea6\u3002\u4e4b\u540e\uff0c\u4f7f\u7528CrystalDiskMark\u67e5\u770b\u7b2c\u4e00\u6b21\u6d4b\u8bd5\u4e2d\u7684\u5927\u91cf\u987a\u5e8f\u5199\u5165\u662f\u5426\u4f1a\u5bf9\u9a71\u52a8\u5668\u6027\u80fd\u4ea7\u751f\u6301\u4e45\u5f71\u54cd\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u901f\u5ea6\u6267\u884c\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5b83\u4eec\u4e4b\u95f4\u7684\u9a71\u52a8\u5668\u7a7a\u95f2\u65f6\u95f4\u3002\u6700\u540e\uff0c\u6267\u884c\u4e86FreeNAS RAIDZ\u518d\u94f6\u5316\u3002\n\u8fd9\u4e9b\u6709\u9488\u5bf9\u6027\u7684\u6d4b\u8bd5\u5e76\u4e0d\u662f\u4e3a\u4e86\u5168\u9762\uff0c\u800c\u662f\u4e3a\u4e86\u9610\u660eSMR Drive\u4e0e\u5176CMR\u7ade\u4e89\u5bf9\u624b\u4e4b\u95f4\u7684\u4efb\u4f55\u660e\u663e\u533a\u522b\u3002\n\u7531\u4e8eWD Red\u9a71\u52a8\u5668\u662f\u4f5c\u4e3a\u9002\u7528\u4e8e\u6700\u591a8\u4e2a\u78c1\u76d8\u9635\u5217\u7684NAS\u578b\u9a71\u52a8\u5668\u9500\u552e\u7684\uff0c\u56e0\u6b64RAIDZ\u518d\u94f6\u6d4b\u8bd5\u7279\u522b\u6709\u610f\u4e49\u3002\u91cd\u65b0\u767d\u94f6\u6216RAID\u91cd\u5efa\u6d89\u53ca\u5927\u91cf\u6570\u636e\u7684\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u53d7\u5230SMR\u6280\u672f\u6027\u80fd\u635f\u5931\u7684\u4e25\u91cd\u5f71\u54cd\u3002\n\u6d4b\u8bd5\u9635\u5217\u662f\u4e00\u4e2a4\u9a71\u52a8\u5668RAIDZ\u5377\uff0c\u5bb9\u91cf\u5df2\u586b\u6ee160%\u5de6\u53f3\u3002\u7136\u540e\u4ece\u9635\u5217\u4e2d\u5378\u4e0b\u4e00\u4e2a\u9a71\u52a8\u5668\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u9a71\u52a8\u5668\u5c06\u63d2\u5165\u5176\u4f4d\u7f6e\uff0c\u5e76\u5bf9\u91cd\u65b0\u7f6e\u94f6\u8fdb\u884c\u8ba1\u65f6\u3002\u9635\u5217\u4e2d\u7684\u5176\u4ed6\u4e09\u4e2a\u9a71\u52a8\u5668\u4fdd\u6301\u4e00\u81f4\u3002\u4e3a\u4e86\u7ed9\u65b9\u6848\u589e\u52a0\u989d\u5916\u7684\u538b\u529b\uff0c\u5728\u6062\u590d\u767d\u94f6\u671f\u95f4\uff0c\u9635\u5217\u5c06\u627f\u62c5\u4e00\u4e9b\u8d1f\u8f7d\uff1b1MB\u7684\u6587\u4ef6\u5c06\u901a\u8fc7\u7f51\u7edc\u62f7\u8d1d\u5230\u9635\u5217\uff0c2TB\u7684\u6570\u636e\u5c06\u4ece\u9635\u5217\u8bfb\u53d6\u5e76\u901a\u8fc7\u7f51\u7edc\u62f7\u8d1d\u5230\u8f85\u52a9\u8bbe\u5907\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f46\u6211\u4eec\u60f3\u8981\u5f3a\u8c03\u9a71\u52a8\u5668\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5206\u79bb\u3002\u6b64\u5916\uff0cNAS\u5355\u5143\u548cRAID\u9635\u5217\u8bbe\u8ba1\u4e3a\u5728\u964d\u7ea7\u72b6\u6001\u4e0b\u7ee7\u7eed\u4e3a\u5e94\u7528\u7a0b\u5e8f\u548c\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002\n\u6211\u4eec\u77e5\u9053iXsystems\u5728WD Red SMR\u9a71\u52a8\u5668\u4e0a\u7684\u7acb\u573a\uff0c\u5728\u8fd9\u91cc\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u70b9\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4ed6\u4eec\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e9b\u9a71\u52a8\u5668\u3002\u90a3\u4e2a\u535a\u5ba2\u662f\u5728\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u8fd9\u6b21\u5192\u9669\u4e4b\u540e\u53d1\u5e03\u7684\u3002\u5b83\u8bf4\uff0c\u8bf7\u5411WD\u5bfb\u6c42\u66f4\u591a\u4fe1\u606f\uff0cWD\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u6708\u91cc\u6ca1\u6709\u63d0\u4f9b\u6700\u65b0\u60c5\u51b5\u3002\u5373\u4f7f\u5728iXsystems\u535a\u5ba2\u95ee\u4e16\u540e\uff0c\u6211\u4eec\u4e5f\u8ba4\u4e3a\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u503c\u5f97\u7684\uff0c\u56e0\u4e3a\u9605\u8bfbiXsystems\u535a\u5ba2\u7684\u7528\u6237\u6570\u91cf\u53ef\u80fd\u662f\u5c11\u6570\uff0c\u5373\u4f7f\u662f\u5728STH\u8bfb\u8005\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\n\u6211\u4eec\u8fd8\u5728\u6d4b\u8bd5\u4e00\u4e2a\u8bb8\u591a\u4eba\u53ef\u80fd\u6ca1\u6709\u60f3\u5230\u7684\u5e38\u89c1\u7528\u4f8b\u3002\u6211\u4eec\u770b\u5230\u7684\u4e0d\u662f\u8fd0\u884c\u72b6\u51b5\u826f\u597d\u7684SMR\u9a71\u52a8\u5668\u9635\u5217\uff0c\u800c\u662f\u4f7f\u7528WD Red SMR\u9a71\u52a8\u5668\u4e0e\u5305\u62ecWD Red CMR\u7248\u672c\u7684CMR\u9a71\u52a8\u5668\u8fdb\u884c\u91cd\u5efa\u7684\u5f71\u54cd\u3002\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u6d89\u53ca\u7684\u4e0d\u53ea\u662f\u4e3a\u9635\u5217\u8d2d\u4e70\u4e00\u7ec4\u65b0\u9a71\u52a8\u5668\u7684\u7528\u6237\uff0c\u800c\u662f\u7528\u6237\u53ef\u80fd\u5fc5\u987b\u5feb\u901f\u8d2d\u4e70\u9a71\u52a8\u5668\u624d\u80fd\u4f7fNAS\u5c3d\u5feb\u6062\u590d\u6b63\u5e38\u72b6\u6001\u7684\u5e38\u89c1\u60c5\u51b5\u3002\u60f3\u60f3\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u60a8\u77e5\u9053FreeNAS\u9635\u5217\u4e2d\u6709WD Red 4TB\u9a71\u52a8\u5668(\u53ef\u80fd\u662fCMR)\uff0c\u4e00\u4e2a\u9a71\u52a8\u5668\u51fa\u73b0\u6545\u969c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u53bb\u767e\u601d\u4e70(Best Buy)\u3002\u4ed6\u4eec\u6709WD Red\u7684\u5e93\u5b58\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u505a\u4e00\u5929\u7684\u5728\u7ebf\u7814\u7a76\u5c31\u53ef\u4ee5\u4e70\u4e0b\u5e76\u5b89\u88c5\u5b83\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5728\u5f97\u51fa\u6700\u7ec8\u7ed3\u8bba\u4e4b\u524d\u5f97\u51fa\u6d4b\u8bd5\u7ed3\u679c\u3002", "note_en": "With all the  recent controversy regarding WD, Toshiba, and Seagate slipping SMR drives into retail channels and failing to disclose the use of their slower technology, we thought it would be interesting to dive into the actual impact of using a SMR drive. We can hypothesize that there is a negative impact, but it is better to show it. To that end, today we will be comparing a WD Red 4TB SMR drive to its CMR predecessor, as well as CMR drives from other manufacturers.\n    While our YouTube presence is still small compared to the STH main site, we thought this was an important enough finding that we should try reading those who may be impacted. Feel free to listen along while you read.\n  Many of our readers may already be familiar with the differences between SMR and CMR, but a quick refresher never hurt anyone!\n First up is CMR, which stands for conventional magnetic recording. This has been the standard technology behind hard drive data storage since the mid-2000s. Data is written on magnetic tracks that are side-by-side, do not overlap, and write operations on one track do not affect its neighbors.\n The newer contender is SMR, or shingled magnetic recording. It is called shingled because the data tracks can be visualized like roofing shingles; they partially overlap each other. Because of this overlap, the resulting tracks are thinner allowing more to fit into a given area and achieving better overall data density. The WD Red is a device-managed SMR drive, which presents itself to the operating system as a normal hard drive.\n  The overlapping arrangement of SMR tracks complicates drive operations when it comes time to write data to the disk. When data is written on a SMR drive the data on the overlapping tracks will be affected by the write process as well. This forces the data on the overlapping tracks to be rewritten during the process, which takes extra time to perform.\n  As a mitigation against this penalty, writes can be cached to a segment of the drive that operates with CMR technology, and during idle time the drive will spool those writes out to the SMR area. Obviously this CMR cache will have a limited capacity, and with enough write operations can be exhausted.\n  When that happens the drive has no choice but to write directly to SMR and invoke a performance penalty. WD has not provided the specifics of how their drives mitigate against the performance impact of using SMR, so we are operating on guesswork as to the size or even existence of a CMR cache area in the WD Red.\n If you want another 3rd party description of this, you can see the great 2015 paper by Toshiba:\u00a0 Shingled Magnetic Recording Technologies for Large-Capacity Hard Disk Drives.\n After the previous article on STH, the question we received was how this impacts arrays. Specifically, RAID arrays our readers use. We utilize a lot of ZFS at STH, so in mid-April 2020 we started a project to see if, indeed, there was a difference. In short, there was, and in a big way.\n  For the test configuration, we wanted a configuration that de-emphasized CPU performance. Effectively we wanted to take CPU performance out of the equation to focus on drive performance. Here is what we utilized:\n OS: Windows 10 Pro 1909 64-bit / FreeNAS 11.3-U2 (note, the latest is\u00a0 FreeNAS 11.3-U3.1 but it was released well after we started the project)\n    The WD40EFAX is the only SMR drive in the comparison and is the focus of the testing.\n  We had two main areas of testing. First up, the new SMR drive has been put through a handful of standard benchmarks just to see how it performs in the context of a larger pool of drives. After that, some more targeted tests were run, pitting the WD40EFAX against three other CMR 4TB drives in a standard ZFS RAIDZ operation: rebuilding an array with a new drive after a drive has failed.\n Prior to beginning this sequence of tests, the drives were prepped by having 3TB of data written to them, and then 1TB of that data is deleted. Testing commenced immediately after the drive prep was completed. First, a simple 125GB file copy to test sequential write speeds outside of the context of a benchmark utility. Following that, CrystalDiskMark was used to see if the large sequential write from the first test would have an lasting impact on the drive performance. These tests were performed as rapidly as possible to minimize drive idle time between them. Finally, a FreeNAS RAIDZ resilver was performed.\n These targeted tests are not designed to be comprehensive, but instead, illuminate any obvious differences between the SMR drive and its CMR competitors.\n The RAIDZ resilver test is of particular interest, since the WD Red drive is marketed as a NAS type drive suitable for arrays of up to 8 disks. A resilver or RAID rebuild involves an enormous amount of data being read and written, and has the potential to be heavily impacted by the performance penalties of SMR technology.\n The test array is a 4-drive RAIDZ volume that has been filled to around 60% capacity. A drive is then removed from the array, and our test drives will be inserted in its place and the resilver timed. The other three drives in the array remain consistent. In an attempt to add additional stress to the scenario, during the resilver some load will be placed upon the array; 1MB files will be copied to the array over the network, and 2TB of data will be read from the array and copied over the network to a secondary device. This is a significant workload, but we wanted to stress the drives to ensure we could get separation. Also, NAS units and RAID arrays are designed to continue serving applications and users when in degraded states.\n  We are aware of iXsystems stance on WD Red SMR drives, detailed in an article  here. The short version is that they advise against use of these drives. That blog was posted after we had already embarked upon this adventure. It says look to WD for more information and WD has not, over the course of the ensuing month, provided an update. Even after it came out we thought the experiment worthwhile since the number of users that read the iXsystems blog is likely a minority, even among STH readers.\n We are also testing a common use case that many may not think of. Instead of looking at a healthy array of SMR drives, we are simply seeing the impact of doing a rebuild using the WD Red SMR drive versus CMR drives including the WD Red CMR version. This is important because it touches on those who are not just buying a new set of drives for an array, but instead is a commonly-known case where a user may have to purchase a drive quickly to get a NAS back to a healthy state as soon as possible. Think of this as you know you have WD Red 4TB drives (likely CMR) in your FreeNAS array, a drive fails so you go to Best Buy. They have a WD Red in stock so you buy it and install it without doing a day\u2019s worth of online research.\n Next, we are going to get to our test results before getting to our final words.", "posttime": "2020-05-29 19:42:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "red,\u9a71\u52a8\u5668", "title": "WD Red SMR\u4e0eCMR\u6d4b\u8bd5\u7ed3\u679c\u5bf9\u6bd4", "title_en": "WD Red SMR vs. CMR Tested", "transed": 1, "url": "https://www.servethehome.com/wd-red-smr-vs-cmr-tested-avoid-red-smr/", "via": "", "real_tags": ["red", "\u9a71\u52a8\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004222, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CNN\u8bb0\u8005\u5965\u9a6c\u5c14\u00b7\u5e0c\u95e8\u5c3c\u65af\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u6297\u8bae\u73b0\u573a\u76f4\u64ad\u65f6\u88ab\u8b66\u65b9\u62d8\u7559\uff0c\u6b64\u524d\u4ed6\u5411\u8b66\u5bdf\u6e05\u695a\u5730\u8868\u660e\u4e86\u81ea\u5df1\u7684\u8eab\u4efd\u3002\nCNN\u7684\u6444\u50cf\u673a\u4e5f\u88ab\u62d8\u7559\uff0c\u5e76\u5728\u673a\u7ec4\u4eba\u5458\u6234\u4e0a\u624b\u94d0\u65f6\u7ee7\u7eed\u62cd\u6444\uff0c\u8b66\u65b9\u4f3c\u4e4e\u6ca1\u6709\u610f\u8bc6\u5230\u6444\u50cf\u673a\u8fd8\u5728\u5f00\u7740\u3002\n\u5728\u8b66\u5bdf\u5230\u8fbe\u73b0\u573a\u5e76\u4e0e\u6297\u8bae\u8005\u53d1\u751f\u51b2\u7a81\u540e\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u4e0a\u6f14\u4e86\u620f\u5267\u6027\u7684\u573a\u9762\u3002\u8fd9\u662f\u4e00\u4e2a\u591a\u5c0f\u65f6\u4ee5\u6765\u5f53\u5c40\u9996\u6b21\u51fa\u73b0\u5728\u73b0\u573a\u3002\n\u4e00\u4e9b\u8eab\u7a7f\u9632\u66b4\u88c5\u5907\u7684\u8b66\u5bdf\u7acb\u5373\u91c7\u53d6\u884c\u52a8\uff0c\u4f7f\u7528\u80e1\u6912\u55b7\u96fe\u548c\u8b66\u68cd\u9a71\u6563\u8b66\u5bdf\u5c40\u9644\u8fd1\u7684\u4eba\u7fa4\u3002\u53ef\u4ee5\u770b\u5230\u8b66\u5bdf\u63a8\u6421\u81f3\u5c11\u4e00\u4eba\uff0c\u800c\u6297\u8bae\u8005\u7684\u56de\u5e94\u662f\u5728\u5176\u4ed6\u4eba\u9003\u79bb\u73b0\u573a\u65f6\u5411\u8b66\u5bdf\u6295\u63b7\u70ae\u5f39\u3002\n\u8b66\u5bdf\u548c\u6d88\u9632\u8f66\u5df2\u7ecf\u62b5\u8fbe\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u6297\u8bae\u6d3b\u52a8\u7684\u9707\u4e2d\uff0c\u90a3\u91cc\u6709\u4e00\u4e9b\u5efa\u7b51\u6b63\u5728\u71c3\u70e7\u3002\nCNN\u5728\u73b0\u573a\u7684\u5de5\u4f5c\u4eba\u5458\u76ee\u7779\u4e86\u5f53\u5c40\u5728\u51cc\u66684\uff1a30\u521a\u8fc7\u5c31\u5230\u8fbe\u73b0\u573a\u3002\u57c3\u7279\u3002\n\u4eca\u5929\u6e05\u6668\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u4ecd\u6709\u5927\u91cf\u6297\u8bae\u8005\u5916\u51fa\uff0c\u591a\u5ea7\u5efa\u7b51\u7740\u706b\u3002\n\u6570\u767e\u4eba\u4ecd\u5728\u7b2c\u4e09\u8b66\u533a\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u5bdf\u5927\u697c\u9644\u8fd1\u6297\u8bae\u3002\n\u8f66\u7ad9\u9644\u8fd1\u81f3\u5c11\u8fd8\u6709\u53e6\u5916\u4e94\u5ea7\u5efa\u7b51\u7740\u706b\u3002\u73b0\u5728\u5df2\u7ecf\u88ab\u5927\u706b\u70e7\u6bc1\u7684\u71c3\u70e7\u7684\u5efa\u7b51\u4e4b\u4e00\u662f\u4e00\u4e2a\u6d3b\u52a8\u7a7a\u95f4\uff0c\u8ddd\u79bb\u8b66\u5bdf\u5c40\u5927\u7ea6\u4e00\u4e2a\u8857\u533a\uff0c\u6709\u591a\u5bb6\u9910\u5385\u3002\u8f66\u7ad9\u5bf9\u9762\u7684\u4e00\u5bb6\u9152\u7c7b\u5546\u5e97\u4e5f\u88ab\u70e7\u6bc1\u3002\n\u6628\u665a\u6df1\u591c\uff0c\u660e\u5c3c\u82cf\u8fbe\u56fd\u6c11\u8b66\u536b\u961f\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5411\u5723\u4fdd\u7f57\u3001\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u548c\u5468\u8fb9\u793e\u533a\u8c03\u52a8\u4e86500\u591a\u540d\u58eb\u5175\u3002\n\u5f53\u88ab\u95ee\u53ca\u56fd\u6c11\u8b66\u536b\u961f\u65f6\uff0c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u5e02\u957f\u96c5\u5404\u5e03\u00b7\u5f17\u96f7(Jacob Frey)\u8868\u793a\uff1a\u201c\u6211\u63d0\u5230\u7684\u8bb8\u591a\u56fd\u6c11\u8b66\u536b\u961f\u90fd\u6709\u9a7b\u624e\uff0c\u800c\u4e14\u6b63\u9a7b\u624e\u5728\u4e0d\u540c\u5730\u70b9\uff0c\u4ee5\u5e2e\u52a9\u9632\u6b62\u6211\u4eec\u770b\u5230\u7684\u4e00\u4e9b\u62a2\u52ab\u884c\u4e3a\u3002\u201d\n\u56fd\u6c11\u8b66\u536b\u961f\u7684\u4e00\u4e9b\u90e8\u7f72\u5730\u70b9\u5305\u62ec\u94f6\u884c\u3001\u6742\u8d27\u5e97\u548c\u836f\u5e97\u3002\n\u5468\u56db\uff0c\u6297\u8bae\u6d3b\u52a8\u8fde\u7eed\u7b2c\u4e09\u4e2a\u665a\u4e0a\u8513\u5ef6\u5230\u7f8e\u56fd\u5404\u5730\uff0c\u4eba\u7fa4\u793a\u5a01\u53cd\u5bf9\u8b66\u5bdf\u7684\u66b4\u884c\uff0c\u5e76\u8981\u6c42\u5bf9\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u7684\u6b7b\u4ea1\u4f38\u5f20\u6b63\u4e49\u3002\n\u5f17\u6d1b\u4f0a\u5fb7\u662f\u4e00\u540d46\u5c81\u7684\u9ed1\u4eba\u7537\u5b50\uff0c\u4ed6\u5728\u6c42\u6551\u540e\u6b7b\u4ea1\uff0c\u5f53\u65f6\u4e00\u540d\u767d\u4eba\u8b66\u5bdf\u5728\u5c06\u5f17\u6d1b\u4f0a\u5fb7\u6309\u5728\u5730\u4e0a\u7684\u540c\u65f6\uff0c\u5c06\u4ed6\u7684\u819d\u76d6\u6309\u5728\u4e86\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8116\u5b50\u4e0a\u51e0\u5206\u949f\u3002\u636e\u5f53\u5c40\u79f0\uff0c\u5f17\u6d1b\u4f0a\u5fb7\u4e0d\u4e45\u540e\u5728\u9644\u8fd1\u7684\u4e00\u5bb6\u533b\u9662\u88ab\u5ba3\u5e03\u6b7b\u4ea1\u3002\n\u660e\u5c3c\u82cf\u8fbe\u5dde\u6297\u8bae\u6d3b\u52a8\uff1a\u5f17\u6d1b\u4f0a\u5fb7\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u53bb\u4e16\uff0c\u5468\u56db\u90a3\u91cc\u53d1\u751f\u4e86\u5927\u89c4\u6a21\u6297\u8bae\u6d3b\u52a8\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u4eba\u7fa4\u653e\u706b\u711a\u70e7\u4e86\u5f53\u5929\u65e9\u4e9b\u65f6\u5019\u758f\u6563\u7684\u4e00\u4e2a\u8b66\u5bdf\u5c40\u3002\u5728\u9644\u8fd1\u7684\u5723\u4fdd\u7f57\uff0c\u6297\u8bae\u8005\u548c\u8b66\u5bdf\u7528\u50ac\u6cea\u74e6\u65af\u5bf9\u5cd9\u3002\u636e\u8b66\u65b9\u79f0\uff0c\u8d85\u8fc7170\u5bb6\u4f01\u4e1a\u906d\u5230\u7834\u574f\u6216\u62a2\u52ab\uff0c\u660e\u5c3c\u82cf\u8fbe\u5dde\u56fd\u6c11\u8b66\u536b\u961f\u88ab\u52a8\u5458\u5230\u8fd9\u4e24\u4e2a\u57ce\u5e02\u3002\n\u5168\u56fd\u6027\u7684\u6124\u6012\uff1a\u4e0d\u53ea\u662f\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u6297\u8bae\u8005\u8d70\u4e0a\u8857\u5934\uff0c\u79d1\u7f57\u62c9\u591a\u5dde\u7684\u4e39\u4f5b\u5e02\u3001\u7ebd\u7ea6\u5e02\u3001\u7530\u7eb3\u897f\u5dde\u7684\u5b5f\u83f2\u65af\u3001\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u51e4\u51f0\u57ce\u548c\u4fc4\u4ea5\u4fc4\u5dde\u7684\u54e5\u4f26\u5e03\u5e02\u3002\n\u7279\u6717\u666e\u548c\u63a8\u7279\uff1a\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u603b\u7edf\u5c31\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u6297\u8bae\u6d3b\u52a8\u5728\u63a8\u7279\u4e0a\u53d1\u5e16\u79f0\uff0c\u5f53\u62a2\u52ab\u5f00\u59cb\u65f6\uff0c\u67aa\u51fb\u4e8b\u4ef6\u5c31\u5f00\u59cb\u4e86\u3002\u63a8\u7279\u5df2\u7ecf\u5c06\u8fd9\u6761\u63a8\u6587\u6807\u8bb0\u4e3a\u8fdd\u53cd\u4e86\u8be5\u5e73\u53f0\u7684\u89c4\u5b9a\uff0c\u5e76\u7f8e\u5316\u4e86\u66b4\u529b\u3002\n\u5bf9\u5f17\u6d1b\u4f0a\u5fb7\u4e4b\u6b7b\u7684\u8c03\u67e5\uff1a\u5730\u65b9\u548c\u8054\u90a6\u5b98\u5458\u5c1a\u672a\u5ba3\u5e03\u5bf9\u6d89\u53ca\u5f17\u6d1b\u4f0a\u5fb7\u4e4b\u6b7b\u7684\u8b66\u5b98\u63d0\u51fa\u4efb\u4f55\u6307\u63a7\uff0c\u4f46\u8868\u793a\u8c03\u67e5\u662f\u5f53\u52a1\u4e4b\u6025\u3002\u6240\u6709\u56db\u540d\u8b66\u5b98\u90fd\u63f4\u5f15\u4e86\u7b2c\u4e94\u4fee\u6b63\u6848\u4e2d\u53cd\u5bf9\u81ea\u8bc1\u5176\u7f6a\u7684\u6743\u5229\u3002\n\u8054\u90a6\u653f\u5e9c\u547c\u5401\u91c7\u53d6\u884c\u52a8\uff1a\u4f17\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u6566\u4fc3\u53f8\u6cd5\u90e8\u8fdb\u884c\u8c03\u67e5\uff0c\u79f0\u8054\u90a6\u653f\u5e9c\u5728\u4fc3\u8fdb\u6240\u6709\u6267\u6cd5\u673a\u6784\u7684\u95ee\u8d23\u6587\u5316\u65b9\u9762\u53ef\u4ee5\u53d1\u6325\u5173\u952e\u4f5c\u7528\u3002\n\u8dea\u5728\u5f17\u6d1b\u4f0a\u5fb7\u8116\u5b50\u4e0a\u7684\u8b66\u5b98\uff1a\u8fd9\u4f4d\u8b66\u5b98\u5fb7\u91cc\u514b\u00b7\u8096\u6587(Derek Chauvin)\u4e4b\u524d\u5411\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u8b66\u5bdf\u5c40\u5185\u52a1\u90e8\u63d0\u51fa\u4e8618\u8d77\u9488\u5bf9\u4ed6\u7684\u6295\u8bc9\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u4e9b\u6295\u8bc9\u662f\u4e3a\u4e86\u4ec0\u4e48\u3002\n\u8b66\u65b9\u544a\u8bc9CNN\uff0c\u7ebd\u7ea6\u8b66\u5bdf\u5c40\u5728\u5468\u56db\u7684\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u6297\u8bae\u6d3b\u52a8\u4e2d\u8fdb\u884c\u4e8640\u591a\u4eba\u7684\u902e\u6355\u548c\u4f20\u7968\u3002\n\u4e00\u540d\u6267\u6cd5\u5b98\u5458\u8868\u793a\uff0c\u6307\u63a7\u8303\u56f4\u4ece\u59a8\u788d\u653f\u5e9c\u884c\u653f\u5230\u72af\u7f6a\u6301\u6709\u6b66\u5668\uff0c\u8fd9\u4e9b\u6307\u63a7\u6e90\u4e8e\u4e00\u540d\u5973\u5b50\u5728\u8054\u5408\u5e7f\u573a\u62c9\u5f39\u7c27\u5200\u3002\n\u8fd9\u4f4d\u5b98\u5458\u8bf4\uff0c\u4e00\u540d\u6297\u8bae\u8005\u5728\u8bd5\u56fe\u4ece\u4e00\u540d\u7ebd\u7ea6\u8b66\u5bdf\u7684\u76ae\u5957\u4e2d\u62d4\u51fa\u67aa\u540e\u4e5f\u88ab\u902e\u6355\u3002\n\u793a\u5a01\u8005\u6297\u8bae\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u7684\u6b7b\u4ea1\uff0c\u4ed6\u5728\u4e00\u540d\u8b66\u5bdf\u7528\u819d\u76d6\u6309\u4f4f\u4ed6\u65f6\uff0c\u6073\u6c42\u81ea\u5df1\u65e0\u6cd5\u547c\u5438\uff0c\u968f\u540e\u6b7b\u4ea1\u3002\n\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e\u4eca\u665a\u65e9\u4e9b\u65f6\u5019\u5728\u5723\u4fdd\u7f57\u548c\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u793a\u5a01\u8005\u7eb5\u706b\u65f6\u53d1\u5e03\u7684\u5173\u4e8e\u660e\u5c3c\u82cf\u8fbe\u5dde\u6297\u8bae\u6d3b\u52a8\u7684\u63a8\u6587\u88ab\u63a8\u7279\u6807\u8bb0\u4e3a\u8fdd\u53cd\u4e86\u8be5\u5e73\u53f0\u7684\u89c4\u5b9a\u3002\n\u8fd9\u4e9b\u66b4\u5f92\u662f\u5728\u73b7\u6c61\u5bf9\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8bb0\u5fc6\uff0c\u6211\u4e0d\u4f1a\u8ba9\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f\u7684\u3002\u521a\u521a\u4e0e\u5dde\u957f\u8482\u59c6\u00b7\u6c83\u5c14\u5179\u901a\u8bdd\uff0c\u544a\u8bc9\u4ed6\u519b\u65b9\u4e00\u76f4\u4e0e\u4ed6\u540c\u5728\u3002\u4efb\u4f55\u56f0\u96be\uff0c\u6211\u4eec\u90fd\u4f1a\u627f\u62c5\u63a7\u5236\u6743\uff0c\u4f46\u662f\uff0c\u5f53\u62a2\u52ab\u5f00\u59cb\u65f6\uff0c\u5c04\u51fb\u5c31\u5f00\u59cb\u4e86\u3002\u8c22\u8c22\uff01&#34\uff1b\n\u63a8\u7279\u7684\u56de\u5e94\uff1a\u8fd9\u6761\u63a8\u6587\u88ab\u63a8\u7279\u4e0a\u7684\u4e00\u5219\u901a\u77e5\u9690\u85cf\u4e86\u8d77\u6765--\u4f46\u5728\u901a\u77e5\u540e\u9762\u4ecd\u7136\u53ef\u4ee5\u770b\u5230\u3002\n\u8fd9\u6761\u63a8\u6587\u8fdd\u53cd\u4e86\u63a8\u7279\u5173\u4e8e\u7f8e\u5316\u66b4\u529b\u7684\u89c4\u5b9a\u3002\u7136\u800c\uff0c\u901a\u77e5\u79f0\uff0cTwitter\u5df2\u7ecf\u786e\u5b9a\uff0c\u8fd9\u6761\u63a8\u6587\u4fdd\u6301\u53ef\u8bbf\u95ee\u72b6\u6001\u53ef\u80fd\u7b26\u5408\u516c\u4f17\u5229\u76ca\u3002\n\u63a8\u7279\u5b98\u65b9\u901a\u8baf\u8d26\u53f7\u7684\u53e6\u4e00\u4efd\u58f0\u660e\u89e3\u91ca\u8bf4\uff0c\u57fa\u4e8e\u6700\u540e\u4e00\u53e5\u8bdd\u7684\u5386\u53f2\u80cc\u666f\uff0c\u5b83\u4e0e\u66b4\u529b\u7684\u8054\u7cfb\uff0c\u4ee5\u53ca\u5b83\u4eca\u5929\u53ef\u80fd\u5f15\u53d1\u7c7b\u4f3c\u884c\u52a8\u7684\u98ce\u9669\uff0c\u8fd9\u6761\u63a8\u6587\u5df2\u7ecf\u88ab\u6807\u8bb0\u3002\n\u8fd9\u6761\u8b66\u544a\u4fe1\u606f\u53ef\u80fd\u4f1a\u52a0\u5267\u7279\u6717\u666e\u4e0e\u63a8\u7279\u4e4b\u95f4\u6301\u7eed\u4e0d\u65ad\u7684\u4e89\u7aef\u3002\u5c31\u5728\u6628\u5929\uff0c\u7279\u6717\u666e\u7b7e\u7f72\u4e86\u4e00\u9879\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u547d\u4ee4\uff0c\u51e0\u5929\u524d\uff0c\u63a8\u7279\u79f0\u4ed6\u7684\u4e24\u6761\u63a8\u6587\u53ef\u80fd\u5177\u6709\u8bef\u5bfc\u6027\u3002\n\u5468\u4e8c\uff0cTwitter\u5bf9\u7279\u6717\u666e\u7684\u4e24\u6761\u63a8\u6587\u8fdb\u884c\u4e86\u4e8b\u5b9e\u6838\u67e5\uff0c\u5176\u4e2d\u4e00\u6761\u58f0\u79f0\uff0c\u5728\u6ca1\u6709\u8bc1\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u90ae\u5bc4\u9009\u7968\u5c06\u5bfc\u81f4\u5e7f\u6cdb\u7684\u9009\u6c11\u6b3a\u8bc8\u3002\u7279\u6717\u666e\u7acb\u5373\u4e88\u4ee5\u56de\u51fb\uff0c\u6307\u8d23\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u5de8\u5934\u8fdb\u884c\u5ba1\u67e5\uff0c\u5e76\u8b66\u544a\u79f0\uff0c\u5982\u679c\u5b83\u7ee7\u7eed\u4e3a\u4ed6\u7684\u4fe1\u606f\u63d0\u4f9b\u9644\u5f55\uff0c\u4ed6\u5c06\u5229\u7528\u8054\u90a6\u653f\u5e9c\u7684\u6743\u529b\u6765\u63a7\u5236\u5b83\uff0c\u751a\u81f3\u5173\u95ed\u5b83\u3002\n\u79d1\u6280\u516c\u53f8\u4e5f\u5728\u56de\u51fb\u8fd9\u4e00\u547d\u4ee4\uff1bFacebook\u548c\u8c37\u6b4c\u8868\u793a\uff0c\u7279\u6717\u666e\u7684\u63d0\u8bae\u6709\u53ef\u80fd\u635f\u5bb3\u4e92\u8054\u7f51\u548c\u66f4\u5e7f\u6cdb\u7684\u6570\u5b57\u7ecf\u6d4e\u3002\n\u5468\u56db\uff0c\u6297\u8bae\u6d3b\u52a8\u5e2d\u5377\u4e86\u7f8e\u56fd\u591a\u4e2a\u4e3b\u8981\u57ce\u5e02\uff0c\u4eba\u7fa4\u8d70\u4e0a\u8857\u5934\uff0c\u8981\u6c42\u5bf9\u8b66\u5bdf\u7684\u66b4\u884c\u91c7\u53d6\u884c\u52a8\uff0c\u5e76\u5bf9\u51e0\u8d77\u76f8\u5173\u6b7b\u4ea1\u4e8b\u4ef6\u8ffd\u7a76\u8d23\u4efb\u3002\n\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u548c\u5723\u4fdd\u7f57\u88ab\u79f0\u4e3a\u53cc\u80de\u80ce\u57ce\u5e02\uff0c\u8fd9\u4e24\u4e2a\u57ce\u5e02\u90fd\u51fa\u73b0\u4e86\u5927\u89c4\u6a21\u7684\u6297\u8bae\u6d3b\u52a8\u3002\u5728\u5723\u4fdd\u7f57\uff0c\u6297\u8bae\u8005\u4e0e\u9632\u66b4\u8b66\u5bdf\u5bf9\u5cd9\uff0c\u6765\u56de\u51fb\u6253\u50ac\u6cea\u74e6\u65af\u7f50\u3002\u8b66\u65b9\u8bf4\uff0c\u8d85\u8fc7170\u5bb6\u4f01\u4e1a\u88ab\u6297\u8bae\u6d3b\u52a8\u6d17\u52ab\u6216\u7834\u574f\u3002\n\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\uff0c\u6570\u5343\u540d\u6297\u8bae\u8005\u5305\u56f4\u4e86\u4e00\u4e2a\u8b66\u5bdf\u5c40\u5e76\u653e\u706b\u711a\u70e7\u3002\u4ed6\u4eec\u5728\u5927\u697c\u7684\u4fa7\u9762\u55b7\u6f06\uff0c\u8bd5\u56fe\u722c\u4e0a\u53bb\uff0c\u5f53\u5927\u706b\u541e\u566c\u5927\u697c\u65f6\uff0c\u4ed6\u4eec\u6b22\u547c\u8d77\u6765\u3002\n\u5728\u7530\u7eb3\u897f\u5dde\u5b5f\u83f2\u65af\uff0c\u6297\u8bae\u8005\u5728\u5e02\u4e2d\u5fc3\u6e38\u884c\u4e86\u51e0\u4e2a\u5c0f\u65f6\u3002\u4ed6\u4eec\u4e3e\u7740\u6807\u8bed\uff0c\u8981\u6c42\u4e3a\u6700\u8fd1\u88ab\u6740\u5bb3\u7684\u51e0\u540d\u7f8e\u56fd\u9ed1\u4eba\u4f38\u5f20\u6b63\u4e49--\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u3001\u827e\u54c8\u8fc8\u5fb7\u00b7\u963f\u8d1d\u91cc\u548c\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2\u3002\n\u5728\u6cf0\u52d2\u5c45\u4f4f\u7684\u80af\u5854\u57fa\u5dde\u8def\u6613\u65af\u7ef4\u5c14\uff0c\u6297\u8bae\u6d3b\u52a8\u4e5f\u5347\u7ea7\u4e3a\u66b4\u529b\u4e8b\u4ef6\uff0c\u5e76\u4e8e3\u6708\u4efd\u88ab\u8b66\u65b9\u5f00\u67aa\u6253\u6b7b\u3002\n\u8b66\u65b9\u7279\u522b\u987e\u95ee\u6770\u897f\u00b7\u54c8\u62c9\u8fea(Jessie Halladay)\u8868\u793a\uff0c\u5728\u4eca\u665a\u7684\u6297\u8bae\u6d3b\u52a8\u4e2d\uff0c\u4eba\u7fa4\u4e2d\u53d1\u751f\u4e86\u67aa\u51fb\u4e8b\u4ef6\u3002", "note_en": "CNN journalist Omar Jimenez has been taken into police custody during a live broadcast at the site of the protests in Minneapolis, after clearly identifying himself to officers.\n  The CNN camera was also taken into custody and continued to record as the crew was handcuffed, with police seemingly unaware that the camera was still on.\n Dramatic scenes have unfolded in Minneapolis after the police arrived on the scene and clashed with protesters. It was the first time authorities had been seen on the scene in more than an hour.\n The police officers, some in riot gear, immediately launched into action, using pepper spray and batons to disperse crowds near the police station. Police were seen shoving at least one person, while protesters responded by throwing projectiles at the officers as others fled the site.\n Police and fire engines have arrived at the epicenter of the protests in Minneapolis, where a number of buildings have been burning.\n CNN crew on the site witnessed the authorities arriving to the scene just after 4:30 a.m. ET.\n A large number of protesters are still out early this morning in Minneapolis and a number of buildings are on fire.\n Hundreds of people are still protesting near the Minneapolis police building in the 3rd\u00a0Precinct.\n At least five other buildings in the vicinity of the station are in flames. One of the burning structures that has now been destroyed by the fire was an events space with a multiple restaurants about a block away from the police station. A liquor store across the street from the station has also been burned down.\n The Minnesota National Guard tweeted late last night that they had activated more than 500 soldiers to St. Paul, Minneapolis and surrounding communities.\n When asked about the National Guard, Minneapolis Mayor Jacob Frey said \u201cmany of the National Guard as I mentioned were stationed and are being stationed at locations to help prevent some of the looting that we\u2019ve seen.\u201d\n Some of the locations where the National Guard is being positioned include banks, grocery stores and pharmacies.\n Protests spread across the United States for the third night in a row on Thursday, as crowds demonstrated against police brutality and called for justice in the death of George Floyd.\n Floyd,\u00a0a 46-year-old black man, died after pleading for help as a white police officer pressed\u00a0his knee on Floyd&#39;s neck for several minutes while pinning him to the ground. Floyd was declared dead at a nearby hospital soon after, according to authorities.\n  Minnesota protests: Floyd died in Minneapolis, which saw large-scale protests on Thursday. Crowds numbering in the thousands set fire to a police precinct, which had been evacuated earlier in the day. In nearby St. Paul, protesters and police faced off with tear gas. More than 170 businesses were damaged or looted, according to police, and the Minnesota National Guard was mobilized to both cities.\n Nationwide outrage: It wasn&#39;t just Minnesota; protesters took to the streets in Denver, Colorado; New York City; Memphis, Tennessee; Phoenix, Arizona; and Columbus, Ohio.\n Trump and Twitter: President Donald Trump tweeted about the Minnesota protests, saying &#34;when the looting starts, the shooting starts.&#34; Twitter has since flagged the tweet as violating the platform&#39;s rules and &#34;glorifying violence.&#34;\n Investigation into the death: Local and federal officials have not announced any charges against the officers involved in Floyd&#39;s death, but said the investigation is a top priority. All four officers have invoked their Fifth Amendment right against self incrimination.\n Federal call for action: The House Judiciary Committee urged the Justice Department to investigate, saying the federal government has a critical role to play in promoting a culture of accountability for all law enforcement organizations.\n The officer who knelt on Floyd&#39;s neck: The officer, Derek Chauvin, had 18 prior complaints filed against him with the Minneapolis Police Department&#39;s Internal Affairs. It&#39;s unclear what these complaints were for.\n The New York Police Department carried out more than 40 arrests and summons during the George Floyd protests on Thursday, police told CNN.\n The charges range from obstruction of governmental administration to criminal possession of a weapon, which stemmed from a woman who pulled a switchblade at Union Square, said a law enforcement official.\n One protestor was also arrested\u00a0after\u00a0trying to yank the gun out of a New York Police officer\u2019s holster, the official said.\n  Demonstrators were protesting the death of George Floyd, who\u00a0 died after pleading that he couldn&#39;t breathe\u00a0while a police officer held him down with his knee.\n US President Donald Trump&#39;s tweet on the protests in Minnesota, which he posted earlier tonight as protesters set fires in St. Paul and Minneapolis, has been flagged by Twitter as violating the platform&#39;s rules.\n  &#34;These THUGS are dishonoring the memory of George Floyd, and I won\u2019t let that happen. Just spoke to Governor Tim Walz and told him that the Military is with him all the way. Any difficulty and we will assume control but, when the looting starts, the shooting starts. Thank you!&#34;\n Twitter&#39;s response: The tweet is hidden by a notice from Twitter -- but is still viewable behind the notice.\n &#34;This Tweet violated the Twitter Rules about glorifying violence. However, Twitter has determined that it may be in the public&#39;s interest for the Tweet to remain accessible,&#34; says the notice.\n A  separate statement from the official Twitter Communications account explained that the tweet had been flagged &#34;based on the historical context of the last line, its connection to violence, and the risk it could inspire similar actions today.&#34;\n   The warning message will likely fuel Trump&#39;s ongoing dispute with Twitter. Just yesterday, Trump signed\u00a0 an executive order\u00a0targeting\u00a0 social media companies, days after Twitter called two of his tweets &#34;potentially misleading.&#34;\n On Tuesday, Twitter\u00a0 applied a fact-check\u00a0to two of Trump&#39;s tweets, including one that claimed, without evidence, that mail-in ballots would lead to widespread voter fraud. Trump immediately shot back, accusing the social media giant of censorship and warning that if it continued to offer addendums to his messages, he would use the power of the federal government to rein it in, or even shut it down.\n Tech companies are also pushing back on the order; Facebook and Google have said Trump&#39;s proposal risks harming the internet and the wider digital economy.\n Protests swept across a number of major American cities on Thursday, with crowds taking to the streets to demand action against police brutality and accountability for several related deaths.\n Minneapolis and St. Paul, known as the &#34;Twin Cities&#34; of Minnesota, both saw huge protests. In St. Paul, protesters faced off against riot police, batting tear gas canisters back and forth. More than 170 businesses were looted or damaged by the protests, police said.\n  And in Minneapolis, thousands of protesters surrounded a police precinct and set it on fire. They spray-painted the sides of the building, tried to climb up it, and cheered as the flames engulfed the building.\n   In Memphis, Tennessee, protesters marched through midtown for several hours. They held up signs demanding justice for several black Americans who had recently been killed -- George Floyd, Ahmaud Arbery, and Breonna Taylor.\n  The protests also escalated into violence in Louisville, Kentucky, where Taylor lived and was shot by police in March.\n Shots were fired in the crowd during the protests tonight, said police special advisor Jessie Halladay.", "posttime": "2020-05-29 19:27:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56e2\u961f,team,\u8b66\u5bdf", "title": "CNN\u56e2\u961f\u5728\u7535\u89c6\u76f4\u64ad\u4e2d\u88ab\u660e\u5c3c\u82cf\u8fbe\u5dde\u8b66\u65b9\u902e\u6355", "title_en": "CNN team arrested by Minnesota police on live television", "transed": 1, "url": "https://edition.cnn.com/us/live-news/george-floyd-protest-updates-05-28-20/h_4ed08403663fa4ed3518221d0f2a1552", "via": "", "real_tags": ["\u56e2\u961f", "team", "\u8b66\u5bdf"]}, {"category": "", "categoryclass": "", "imagename": "9fac4c0d8bdde5878b8a352da4ae2bb4.png", "infoid": 1004221, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-Twitter\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u8868\u793a\uff0cTwitter\u9996\u5e2d\u6267\u884c\u5b98\u6770\u514b\u00b7\u591a\u5c14\u897f(Jack Dorsey)\u4e8b\u5148\u5f97\u5230\u4e86\u516c\u53f8\u5458\u5de5\u7684\u901a\u77e5\uff0c\u516c\u53f8\u51b3\u5b9a\u5c06\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u7684\u4e00\u6761\u63a8\u6587\u6807\u8bb0\u4e3a\u7f8e\u5316\u66b4\u529b\u3002\n\u8fd9\u4f4d\u5973\u53d1\u8a00\u4eba\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u8fd9\u4e00\u51b3\u5b9a\u662f\u7531Twitter\u5185\u90e8\u7684\u56e2\u961f\u5171\u540c\u505a\u51fa\u7684\uff0c\u6211\u4eec\u7684\u9996\u5e2d\u6267\u884c\u5b98\u6770\u514b\u00b7\u591a\u897f\u5728\u8fd9\u6761\u63a8\u6587\u88ab\u8d34\u4e0a\u6807\u7b7e\u4e4b\u524d\u5c31\u88ab\u544a\u77e5\u4e86\u8fd9\u4e00\u8ba1\u5212\u3002", "note_en": "(Reuters) - Twitter CEO Jack Dorsey was informed in advance by the company&#39;s staff of a decision to tag a tweet by President Donald Trump as &#34;glorifying violence&#34;, a spokeswoman for the company said.\n &#34;The decision was made jointly by teams within Twitter, and our CEO Jack Dorsey was informed of the plan before the Tweet was labelled,&#34; the spokeswoman said in an email.", "posttime": "2020-05-29 19:11:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u7279,\u7279\u79f0,ceo,twitter", "title": "\u63a8\u7279\u79f0\u9996\u5e2d\u6267\u884c\u5b98\u591a\u5c14\u897f\u5728\u51b3\u5b9a\u7ed9\u7279\u6717\u666e\u63a8\u6587\u8d34\u6807\u7b7e\u4e4b\u524d\u5c31\u901a\u77e5\u4e86\u4ed6", "title_en": "Twitter Says CEO Dorsey Informed in Advance of Decision to Tag Trump Tweet", "transed": 1, "url": "https://www.nytimes.com/reuters/2020/05/29/technology/29reuters-twitter-trump-minneapolis-dorsey.html", "via": "", "real_tags": ["\u63a8\u7279", "\u7279\u79f0", "ceo", "twitter"]}, {"category": "", "categoryclass": "", "imagename": "b72bc031b1166cc15e0bd00758f5bb00.jpeg", "infoid": 1004220, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63a8\u7279\u516c\u53f8\u3002\u5728\u7279\u6717\u666e\u603b\u7edf\u7684\u4e00\u6761\u63a8\u6587\u4e0a\u53d1\u5e03\u4e86\u901a\u77e5\uff0c\u56e0\u4e3a\u5b83\u8fdd\u53cd\u4e86\u8be5\u516c\u53f8\u6240\u8bf4\u7684\u7f8e\u5316\u66b4\u529b\u7684\u89c4\u5b9a\uff0c\u4ece\u800c\u4f7f\u5176\u4e0d\u88ab\u4eba\u770b\u5230\u3002\n\u7279\u6717\u666e\u7684\u63a8\u6587\u662f\u5bf9\u660e\u5c3c\u82cf\u8fbe\u5dde\u66b4\u529b\u6297\u8bae\u6d3b\u52a8\u7684\u8bc4\u8bba\u3002\u8fd9\u7bc7\u5e16\u5b50\u73b0\u5728\u53ea\u80fd\u5728\u7528\u6237\u70b9\u51fb\u5e26\u6709\u901a\u77e5\u7684\u6846\u540e\u624d\u80fd\u770b\u5230\uff0c\u901a\u77e5\u79f0\u8fd9\u8fdd\u53cd\u4e86Twitter\u7981\u6b62\u9f13\u52b1\u66b4\u529b\u7684\u89c4\u5b9a\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4ecd\u7136\u53ef\u89c1\u3002", "note_en": "Twitter Inc. placed a notice on a tweet from President Trump, shielding it from view for breaking what the company said are its rules about glorifying violence.\n  Mr. Trump\u2019s tweet was a comment on the violent protests in Minnesota. The post can now only be seen after users click a box with a notice saying it violated Twitter\u2019s rules against encouraging violence, but it otherwise remains visible.", "posttime": "2020-05-29 18:56:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u63a8\u7279,\u53d1\u5e03,\u7279\u6717\u666e,flags,\u901a\u77e5", "title": "\u63a8\u7279\u65d7\u5e1c\u7279\u6717\u666e\u53d1\u5e03\u5173\u4e8e\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u6297\u8bae\u6d3b\u52a8\u7684\u63a8\u6587\uff0c\u79f0\u5176\u201c\u7f8e\u5316\u66b4\u529b\u201d", "title_en": "Twitter Flags Trump Tweet About Minneapolis Protests for 'Glorifying Violence'", "transed": 1, "url": "https://www.wsj.com/articles/twitter-hides-trump-tweet-for-glorifying-violence-11590743851", "via": "", "real_tags": ["\u63a8\u7279", "\u53d1\u5e03", "\u7279\u6717\u666e", "flags", "\u901a\u77e5"]}, {"category": "", "categoryclass": "", "imagename": "005adaabdd204f30fd9ea51fecd23d5e.jpg", "infoid": 1004219, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e09\u4ebf\u4e94\u5343\u4e5d\u767e\u4e07\u5e74\u524d\u7684\u6ce5\u76c6\u7eaa\u672b\u671f\u662f\u4e00\u4e2a\u591a\u4e8b\u4e4b\u79cb\uff1a\u9c7c\u6162\u6162\u5730\u79bb\u5f00\u6d77\u6d0b\uff0c\u8568\u7c7b\u68ee\u6797\u5728\u9646\u5730\u4e0a\u524d\u8fdb\u3002\u4e16\u754c\u6b63\u5728\u4ece1200\u4e07\u5e74\u524d\u7684\u5927\u706d\u7edd\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u4f46\u6c14\u5019\u4ecd\u7136\u6df7\u4e71\uff0c\u5728\u6e29\u5ba4\u6761\u4ef6\u548c\u5982\u6b64\u6df1\u7684\u51b0\u51bb\u4e4b\u95f4\u6447\u6446\uff0c\u4ee5\u81f3\u4e8e\u70ed\u5e26\u5730\u533a\u5f62\u6210\u4e86\u51b0\u5ddd\u3002\u7136\u540e\uff0c\u5c31\u5728\u5730\u7403\u4ece\u8fd9\u4e9b\u51b0\u6cb3\u65f6\u4ee3\u4e4b\u4e00\u53d8\u6696\u7684\u65f6\u5019\uff0c\u53e6\u4e00\u6b21\u4f3c\u4e4e\u6ca1\u6709\u7406\u7531\u7684\u706d\u7edd\u53d1\u751f\u4e86\u3002\u73b0\u5728\uff0c\u4fdd\u5b58\u5728\u683c\u9675\u5170\u5c9b\u4e1c\u90e8\u53e4\u8001\u6e56\u6cca\u6c89\u79ef\u7269\u4e2d\u7684\u8568\u7c7b\u690d\u7269\u5b62\u5b50\u6697\u793a\u4e86\u4e00\u4e2a\u7f6a\u9b41\u7978\u9996\uff1a\u5730\u7403\u7684\u4fdd\u62a4\u6027\u81ed\u6c27\u5c42\u7a81\u7136\u88ab\u5265\u79bb\uff0c\u4f7f\u5730\u8868\u751f\u547d\u66b4\u9732\u5728\u5f15\u53d1\u7a81\u53d8\u7684\u7d2b\u5916\u7ebf(UV)\u8f90\u5c04\u4e4b\u4e0b\u3002\n\u5357\u5b89\u666e\u987f\u5927\u5b66(University Of Southampton)\u5b62\u7c89\u5b66\u5bb6\u7ea6\u7ff0\u00b7\u9a6c\u6b47\u5c14(John Marshall)\u548c\u4ed6\u7684\u5408\u8457\u8005\u5728\u4eca\u5929\u53d1\u8868\u5728\u201c\u79d1\u5b66\u8fdb\u5c55\u201d(Science Advance)\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\u8bf4\uff0c\u5c31\u5728\u706d\u7edd\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5b62\u5b50\u53d8\u5f97\u7578\u5f62\u548c\u6df1\u8272\uff0c\u8868\u660eDNA\u53d7\u635f\u3002\u4ed6\u8bf4\uff0c\u8fd9\u662f\u201c\u6240\u6709\u7684\u81ed\u6c27\u4fdd\u62a4\u90fd\u6d88\u5931\u4e86\u201d\u7684\u8bc1\u636e\u3002\n\u79d1\u5b66\u5bb6\u4eec\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u76f8\u4fe1-\u81f3\u5c11\u5728\u4eba\u7c7b\u6210\u4e3a\u706d\u7edd\u7684\u529b\u91cf\u4e4b\u524d-\u53ea\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6d88\u706d\u5730\u7403\u4e0a\u7684\u751f\u547d\uff1a\u5c0f\u884c\u661f\u649e\u51fb\u6216\u5927\u89c4\u6a21\u706b\u5c71\u55b7\u53d1\u3002\u4f46\u5728\u4e24\u5e74\u524d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u6709\u8bc1\u636e\u8868\u660e\uff0c\u5728\u5730\u7403\u4e0a\u6700\u4e25\u91cd\u7684\u706d\u7edd-2.52\u4ebf\u5e74\u524d\u7684\u4e8c\u53e0\u7eaa\u672b\u671f-\u706b\u5c71\u5c06\u897f\u4f2f\u5229\u4e9a\u76d0\u6c89\u79ef\u7269\u62ac\u9ad8\u5230\u5e73\u6d41\u5c42\uff0c\u5728\u90a3\u91cc\u5b83\u4eec\u53ef\u80fd\u52a9\u957f\u4e86\u5316\u5b66\u53cd\u5e94\uff0c\u6d88\u9664\u4e86\u81ed\u6c27\u5c42\uff0c\u4f7f\u6574\u4e2a\u68ee\u6797\u706d\u83cc\u3002\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u7684\u53e4\u751f\u7269\u5b66\u5bb6\u52b3\u4f26\u00b7\u8428\u5170(Lauren Sallan)\u8bf4\uff0c\u73b0\u5728\uff0c\u6765\u81ea\u6ce5\u76c6\u7eaa\u672b\u671f\u7684\u5b62\u5b50\u63d0\u51fa\u4e86\u4e00\u4e2a\u4ee4\u4eba\u4fe1\u670d\u7684\u6848\u4f8b\uff0c\u5373\u4f7f\u6ca1\u6709\u55b7\u53d1\uff0c\u6c14\u5019\u53d8\u6696\u4e5f\u4f1a\u8017\u5c3d\u81ed\u6c27\u5c42\u3002\u201c\u56e0\u4e3a\u8bc1\u636e\u5982\u6b64\u6709\u529b\uff0c\u5b83\u4f1a\u8ba9\u4eba\u4eec\u91cd\u65b0\u601d\u8003\u5176\u4ed6\u7684\u5927\u706d\u7edd\u4e8b\u4ef6\u3002\u201d\n\u6ce5\u76c6\u7eaa\u672b\u671f\u7684\u706d\u7edd\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u7b3c\u7f69\u57281200\u4e07\u5e74\u524d\u665a\u6ce5\u76c6\u7eaa\u706d\u7edd\u7684\u9634\u5f71\u4e2d\uff0c\u8fd9\u662f\u5730\u7403\u4e0a\u6700\u5927\u7684\u706d\u7edd\u4e4b\u4e00\u3002\u5b83\u5f88\u53ef\u80fd\u662f\u7531\u706b\u5c71\u55b7\u53d1\u7684\u6c14\u4f53\u9020\u6210\u7684\uff0c\u8fd9\u4e9b\u6c14\u4f53\u4f7f\u5730\u7403\u6025\u5267\u53d8\u51b7\u548c\u53d8\u6696\uff0c\u5bfc\u81f4\u5927\u591a\u6570\u73ca\u745a\u548c\u8bb8\u591a\u8d1d\u58f3\u6d77\u6d0b\u751f\u7269\u6b7b\u4ea1\u3002\u4f4610\u5e74\u524d\uff0c\u8428\u5170\u548c\u5176\u4ed6\u4eba\u7684\u7814\u7a76\u8868\u660e\uff0c\u6ce5\u76c6\u7eaa\u672b\u672c\u8eab\u5c31\u5f88\u5f3a\u5927\uff0c\u706d\u7edd\u4e86\u8bb8\u591a\u690d\u7269\u548c\u810a\u690e\u52a8\u7269\uff0c\u5305\u62ec\u5927\u591a\u6570\u56db\u8db3\u9c7c\uff0c\u8fd9\u79cd\u56db\u8db3\u9c7c\u5df2\u7ecf\u5f00\u59cb\u8fdb\u5316\u624b\u6307\u548c\u811a\u8dbe\u3002\u53ea\u6709\u4e94\u8dbe\u56db\u8db3\u52a8\u7269\u5e78\u5b58\u4e0b\u6765\u3002\u201c\u5b83\u91cd\u7f6e\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u8fdb\u5316\uff0c\u201d\u9a6c\u6b47\u5c14\u8bf4\u3002\u201c\u6240\u6709\u8fd9\u4e9b\u53e4\u8001\u7684\u8840\u7edf\uff0c\u90fd\u88ab\u8e22\u51fa\u4e86\u6846\u6846\u3002\u201d\n\u6ce5\u76c6\u7eaa\u672b\u671f\u7f3a\u5c11\u7684\u662f\u4e00\u4e2a\u539f\u56e0\u3002\u8428\u5170\u8bf4\uff0c\u6ca1\u6709\u706b\u5c71\u6d3b\u52a8\u6216\u5de8\u5927\u5f71\u54cd\u7684\u8bc1\u636e\uff0c\u4f46\u5728\u4e0e\u51b0\u5ddd\u76f8\u5173\u7684\u5ca9\u77f3\u6c89\u79ef\u7269\u7684\u5feb\u901f\u5f62\u6210\u548c\u6d88\u5931\u4e2d\u770b\u5230\u4e86\u4e00\u4e2a\u8bf1\u4eba\u7684\u7ebf\u7d22\u3002\u201c\u5f53\u65f6\u7684\u6c14\u5019\u786e\u5b9e\u51fa\u4e86\u70b9\u95ee\u9898\u3002\u201d\n\u5728\u8fc7\u53bb\u768430\u5e74\u91cc\uff0c\u9a6c\u6b47\u5c14\u4e00\u76f4\u5728\u683c\u9675\u5170\u5c9b\u4e1c\u90e8\u63a2\u7d22\u4ece\u8fd9\u4e2a\u65f6\u5019\u5e78\u5b58\u4e0b\u6765\u7684\u5ca9\u77f3\u3002\u5f53\u65f6\uff0c\u8fd9\u7247\u571f\u5730\u8fdc\u79bb\u5317\u6781\uff0c\u4f4d\u4e8e\u8f83\u4f4e\u7eac\u5ea6\uff0c\u88ab\u9501\u5b9a\u5728\u4e00\u5757\u540d\u4e3a\u65e7\u7ea2\u7802\u5ca9\u5927\u9646\u7684\u5e72\u65f1\u5185\u9646\u3002\u6ce5\u76c6\u7eaa\u6700\u540e\u4e00\u4e2a\u51b0\u671f\u4e4b\u540e\uff0c\u968f\u7740\u6c14\u5019\u53d8\u6696\uff0c\u6e56\u6cca\u5f62\u6210\u5e76\u5145\u6ee1\u4e86\u6c89\u79ef\u7269\uff0c\u8fd9\u4e9b\u6c89\u79ef\u7269\u6162\u6162\u53d8\u6210\u4e86\u6ce5\u5ca9\uff0c\u8bb0\u5f55\u4e86\u706d\u7edd\u524d\u548c\u706d\u7edd\u671f\u95f4\u7684\u6761\u4ef6\u30022017\u5e74\uff0c\u9a6c\u6b47\u5c14\u57286\u7c73\u957f\u7684\u94bb\u82af\u4e2d\u6316\u6398\u51fa\u4e86\u5b8c\u7f8e\u7684\u6ce5\u5ca9\u3002\n\u5b83\u6355\u6349\u5230\u4e86\u4e00\u4e2a\u60ca\u4eba\u7684\u53d8\u5316\uff1a\u5065\u5eb7\u7684\u5316\u77f3\u5b62\u5b50\uff0c\u5305\u88f9\u7740\u72ec\u7279\u7684\u5bf9\u79f0\u5c16\u523a\uff0c\u7a81\u7136\u53d8\u5f97\u7578\u5f62\uff0c\u5b83\u4eec\u7684\u5c16\u523a\u7834\u8d25\u4e0d\u5e73\u3002\u5b62\u5b50\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u5316\u77f3\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u76d4\u7532\uff0c\u4f46\u5b83\u4eec\u5f88\u5bb9\u6613\u53d7\u5230\u7d2b\u5916\u7ebf\u8f90\u5c04\uff0c\u5c31\u50cf\u4eba\u7c7b\u4e00\u6837\uff1b\u5b62\u5b50\u751a\u81f3\u4f1a\u5bf9\u7d2b\u5916\u7ebf\u4ea7\u751f\u201c\u6652\u9ed1\u201d\u7684\u53cd\u5e94\u3002\u5b9e\u9a8c\u53e4\u690d\u7269\u5b66\u5bb6\u6770\u5f17\u91cc\u00b7\u672c\u5361(Jeffrey Benca)\u8bf4\uff0c\u9a6c\u6b47\u5c14\u770b\u5230\u7684\u635f\u5bb3\u4e0e\u8fd9\u79cd\u66b4\u9732\u662f\u4e00\u81f4\u7684\uff0c\u4ed6\u5c06\u8fd9\u79cd\u635f\u5bb3\u4e0e\u4e8c\u53e0\u7eaa\u672b\u7684\u7269\u79cd\u706d\u7edd\u8054\u7cfb\u8d77\u6765\u3002\u201c\u4ed6\u4eec\u7684\u5efa\u8bae\u4f3c\u4e4e\u76f8\u5f53\u5408\u7406\uff0c\u201d\u4ed6\u8bf4\u3002\n\u9a6c\u6b47\u5c14\u8ba4\u4e3a\uff0c\u6c14\u5019\u53d8\u6696\u5bfc\u81f4\u4e86\u66f4\u5f3a\u5927\u7684\u590f\u5b63\u96f7\u66b4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5c06\u6d88\u8017\u81ed\u6c27\u7684\u6c34\u548c\u76d0\u7684\u6df7\u5408\u7269\u6ce8\u5165\u5e73\u6d41\u5c42\u3002\u7531\u4e8e\u7d2b\u5916\u7ebf\u6740\u6b7b\u4e86\u68ee\u6797\uff0c\u8fdb\u5165\u6d77\u6d0b\u7684\u8425\u517b\u7269\u8d28\u5f84\u6d41\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6d6e\u6e38\u751f\u7269\u548c\u85fb\u7c7b\u7684\u5927\u91cf\u7e41\u6b96\uff0c\u8fd9\u5c06\u5728\u5931\u63a7\u7684\u53cd\u9988\u4e2d\u4ea7\u751f\u66f4\u591a\u7834\u574f\u81ed\u6c27\u7684\u76d0\u3002\u201c\u770b\u8d77\u6765\u8fd9\u53ef\u80fd\u662f\u4e00\u573a\u5b8c\u7f8e\u7684\u98ce\u66b4\uff0c\u201d\u4ed6\u8bf4\u3002\n\u963f\u5df4\u62c9\u5951\u4e9a\u5dde\u7acb\u5927\u5b66\u7684\u5730\u7403\u5316\u5b66\u5bb6\u838e\u62c9\u00b7\u5361\u5c14\u8fc8\u514b\u5c14\u8bf4\uff0c\u9a6c\u6b47\u5c14\u7684\u8bbe\u60f3\u4e0d\u4ec5\u53ef\u4ee5\u89e3\u91ca\u7269\u79cd\u706d\u7edd\uff0c\u8fd8\u53ef\u4ee5\u89e3\u91ca\u90a3\u4e2a\u65f6\u671f\u7684\u8bb8\u591a\u5929\u7136\u6c14\u77ff\u85cf\u3002\u5b83\u4eec\u662f\u7531\u8150\u70c2\u7684\u6709\u673a\u7269\u5f62\u6210\u7684\uff0c\u4f46\u6ca1\u6709\u4eba\u89e3\u91ca\u6d6e\u6e38\u751f\u7269\u751f\u957f\u6240\u9700\u7684\u6fc0\u589e\u3002\u6765\u81ea\u67af\u6b7b\u68ee\u6797\u7684\u8425\u517b\u5f84\u6d41\u53ef\u80fd\u4f7f\u6d77\u6d0b\u751f\u7269\u80a5\u6c83\u3002\n\u8fd9\u4e5f\u9884\u793a\u7740\u5728\u5f53\u4eca\u53d8\u6696\u7684\u4e16\u754c\u91cc\u53ef\u80fd\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u66f4\u5f3a\u5927\u7684\u96f7\u66b4\u6709\u65f6\u4f1a\u201c\u8fc7\u51b2\u201d\u5bf9\u6d41\u5c42\uff0c\u5e76\u5411\u5e72\u71e5\u3001\u5bd2\u51b7\u7684\u5e73\u6d41\u5c42\u6ce8\u5165\u6e7f\u6c14\u3002\u5f53\u4e0e\u6c14\u6eb6\u80f6\u9897\u7c92\u548c\u6c2f\u5206\u5b50\u7ed3\u5408\u65f6\uff0c\u6e7f\u6c14\u53ef\u80fd\u4f1a\u4fb5\u8680\u81ed\u6c27\u3002\n\u4f46\u5927\u6c14\u79d1\u5b66\u5bb6\u51e0\u4e4e\u65e0\u6cd5\u5c31\u8fd9\u4e9b\u81ed\u6c27\u6d88\u8017\u662f\u5426\u6b63\u5728\u53d1\u751f\u8fbe\u6210\u4e00\u81f4\uff0c\u66f4\u4e0d\u7528\u8bf4\u6570\u4ebf\u5e74\u524d\u4e86\u3002\u73b0\u5728\u53d1\u751f\u7684\u8d85\u8c03\u6bd4\u9884\u671f\u7684\u8981\u591a\uff0c\u4f46\u5b83\u4eec\u662f\u5426\u4f1a\u5f15\u53d1\u7834\u574f\u6027\u53cd\u5e94\u5c1a\u4e0d\u6e05\u695a\u3002\u7814\u7a76\u8fd9\u4e00\u52a8\u6001\u7684\u8fc8\u963f\u5bc6\u5927\u5b66\u5927\u6c14\u5316\u5b66\u5bb6\u57c3\u5229\u5965\u7279\u00b7\u963f\u7279\u62c9\u65af(Elliot Atlas)\u5bf9\u9a6c\u6b47\u5c14\u7684\u7406\u8bba\u6301\u6000\u7591\u6001\u5ea6\u3002\u4ed6\u8868\u793a\uff0c\u5b83\u9700\u8981\u5728\u6a21\u578b\u4e0a\u8fdb\u884c\u66f4\u4e25\u683c\u7684\u6d4b\u8bd5\u3002\u201c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u5417\uff1f\u6211\u4e0d\u80fd\u8fd9\u4e48\u8bf4\u3002\u201c\u3002\n\u5c31Carmichael\u800c\u8a00\uff0c\u5979\u5e0c\u671b\u770b\u5230\u82b1\u7c89\u9897\u7c92\u4ee5\u5916\u7684\u8bc1\u636e\u8868\u660e\u7d2b\u5916\u7ebf\u5bfc\u81f4\u4e86\u7269\u79cd\u706d\u7edd\u3002\u201c\u6211\u5bf9\u8bf4\u7d2b\u5916\u7ebf\u8f90\u5c04\u662f\u539f\u56e0\u6301\u8c28\u614e\u6001\u5ea6\uff0c\u201d\u5979\u8bf4\u3002\u201c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u201d", "note_en": "The end of the Devonian period, 359 million years ago, was an eventful time: Fish were inching out of the ocean, and fernlike forests were advancing on land. The world was recovering from a mass extinction 12 million years earlier, but the climate was still chaotic, swinging between hothouse conditions and freezes so deep that glaciers formed in the tropics. And then, just as the planet was warming from one of these ice ages, another extinction struck, seemingly without reason. Now, spores from fernlike plants, preserved in ancient lake sediments from eastern Greenland, suggest a culprit: The planet\u2019s protective ozone layer was suddenly stripped away, exposing surface life to a blast of mutation-causing ultraviolet (UV) radiation.\n Just as the extinction set in,  the spores became misshapen and dark, indicating DNA damage, John Marshall, a palynologist at the University of Southampton, and his co-authors say in a paper published today in  Science Advances. It\u2019s evidence, he says, that \u201call of the ozone protection is gone.\u201d\n Scientists have long believed\u2014at least before humanity became a force for extinction\u2014that there were just two ways to wipe out life on Earth: an asteroid strike or massive volcanic eruptions. But 2 years ago, researchers found evidence that in Earth\u2019s worst extinction\u2014the end-Permian, 252 million years ago\u2014volcanoes lofted Siberian salt deposits into the stratosphere, where they might have fed chemical reactions that obliterated the ozone layer and sterilized whole forests. Now, spores from the end-Devonian make a compelling case that, even without eruptions, a warming climate can deplete the ozone layer, says Lauren Sallan, a paleobiologist at the University of Pennsylvania. \u201cBecause the evidence is so strong, it will make people rethink other mass extinction events.\u201d\n The end-Devonian die-off has long sat in the shadow of the Late Devonian extinction 12 million years earlier, one of the planet\u2019s largest. Likely driven by volcanoes that emitted gases that drastically cooled and warmed the planet, it killed most corals and many shelled sea creatures. But 10 years ago, work by Sallan and others revealed the end-Devonian was mighty in its own right, wiping out many plants and vertebrates, including most tetrapods, the four-limbed fish that had begun to evolve fingers and toes. Only the five-toed tetrapods survived. \u201cIt resets our own evolution,\u201d Marshall says. \u201cAll these archaic lineages, it kicked them out of the frame.\u201d\n What the end-Devonian lacked was a cause. There was no evidence for volcanism or a giant impact, but one alluring clue was seen in the rapid formation and disappearance of rock deposits associated with glaciers, Sallan says. \u201cSomething was really screwed up with climate at that time.\u201d\n Over the past 3 decades, Marshall has explored rocks surviving from this time in eastern Greenland. At the time, this terrain lay far from the arctic, at lower latitudes, locked in the arid interior of a landmass called the Old Red Sandstone Continent. As the climate warmed after the Devonian\u2019s last ice age, lakes formed and filled with sediment that slowly turned to mudstone, recording conditions before and during the extinction. In 2017, Marshall exhumed the perfect mudstone in a 6-meter-long drilled core.\n It captures a startling transformation: Healthy fossilized spores, coated in distinctive symmetrical spikes, suddenly grow misshapen, their spikes dilapidated and uneven. Spores are a common fossil because of their armored coat, but they are vulnerable to UV radiation, much like humans; spores can even develop a \u201ctan\u201d in response to UV. The damage Marshall saw is consistent with such exposure, says Jeffrey Benca, an experimental paleobotanist who has linked such damage to the end-Permian extinction. \u201cWhat they propose seems quite plausible,\u201d he says.\n Marshall argues that the warming climate drove more powerful summer thunderstorms, which could have injected an ozone-depleting mix of water and salts into the stratosphere. As UV rays killed off forests, nutrient runoff into the sea could have caused blooms of plankton and algae, which would have produced more ozone-destroying salts in a runaway feedback. \u201cIt looks like it might be a perfect storm,\u201d he says.\n Marshall\u2019s scenario could explain not just the extinction, but also the many natural gas deposits dating from the period, says Sarah Carmichael, a geochemist at Appalachian State University. They formed from decaying organic matter, but no one has explained the needed surge in plankton growth. Nutrient runoff from dead forests could have fertilized the marine life.\n It\u2019s also a portent of what could happen in today\u2019s warming world, where more powerful thunderstorms sometimes \u201covershoot\u201d the troposphere and inject moisture into the dry, cold stratosphere. When combined with aerosol particles and chlorine molecules, the  moisture may eat away ozone.\n But atmospheric scientists can barely agree on whether these ozone depletions are happening now, let alone hundreds of millions of years ago. More overshoots occur now than expected, but whether they are spurring damaging reactions is not yet clear. Elliot Atlas, an atmospheric chemist at the University of Miami who studies this dynamic, is skeptical of Marshall\u2019s theory. It needs much more rigorous testing in models, he says. \u201cIs it impossible? I can\u2019t say that.\u201d\n Carmichael, for her part, would like to see evidence beyond the pollen grains that UV drove the extinction. \u201cI\u2019m wary of saying UV radiation is the reason,\u201d she says. \u201cBut I think it\u2019s a reason.\u201d", "posttime": "2020-05-29 18:40:19", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e27\u5931,mass,\u706d\u7edd", "title": "\u4e0e\u81ed\u6c27\u4e27\u5931\u3001\u6c14\u5019\u53d8\u6696\u6709\u5173\u7684\u53e4\u4ee3\u5927\u706d\u7edd", "title_en": "Ancient Mass Extinction Tied To Ozone Loss, Warming Climate", "transed": 1, "url": "https://www.sciencemag.org/news/2020/05/no-asteroids-or-volcanoes-needed-ancient-mass-extinction-tied-ozone-loss-warming", "via": "", "real_tags": ["\u4e27\u5931", "mass", "\u706d\u7edd"]}, {"category": "", "categoryclass": "", "imagename": "79b1a48d0853f9b2ebc5ccf648245667.png", "infoid": 1004218, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Slice\u7531\u81ea\u79f0\u7b2c\u4e09\u4ee3\u62ab\u8428\u7684\u4f0a\u5229\u5c14\u00b7\u585e\u62c9(Ilir Sela)\u4e8e2010\u5e74\u521b\u7acb\uff0c\u6700\u521d\u547d\u540d\u4e3aMypizza\uff0c\u4ee5\u7eaa\u5ff5\u4f0a\u5229\u4e9a\u62e5\u6709\u548c\u7ba1\u7406\u7684\u7b2c\u4e00\u5bb6\u62ab\u8428\u5e97\u3002\u4e0eDoorDash\u3001PostMate\u548c\u5176\u4ed6\u98df\u54c1\u805a\u5408\u5668\u4e0d\u540c\uff0cSlice\u91c7\u7528\u5782\u76f4\u6574\u5408\u7684\u9001\u8d27\u65b9\u5f0f\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u53cd\u5411\u7279\u8bb8\u7ecf\u8425\u6a21\u5f0f\u3002\n\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u7ed9\u5f53\u5730\u62ab\u8428\u5e97\u5e26\u6765\u7684\u4ef7\u503c\uff0c\u5c31\u50cf\u591a\u7c73\u8bfa\u7ed9\u4ed6\u4eec\u7684\u52a0\u76df\u5546\u63d0\u4f9b\u7684\u4e00\u6837\u3002\n\u805a\u5408\u4e2d\u5c0f\u4f01\u4e1a\u5bf9\u62ab\u8428\u76d2\u7b49\u7269\u54c1\u7684\u8d2d\u4e70\u529b\uff0c\u964d\u4f4e\u9ad8\u8fbe80%\u7684\u6210\u672c\u3002\n\u6210\u4e3a\u5f53\u5730\u62ab\u8428\u5e97\u7684\u540e\u53f0\uff0c\u4e0d\u518d\u9700\u8981\u96c7\u4f63\u517c\u804c\u4eba\u5458\u6765\u7ba1\u7406\u8ba2\u5355\u3001\u63a5\u542c\u7535\u8bdd\u7b49\u3002\n\u901a\u8fc7\u5e02\u573a\u6570\u5b57\u670d\u52a1\u51cf\u53bb\u805a\u5408\u5668\u6536\u53d6\u7684\u6240\u6709\u75af\u72c2\u8d39\u7528\uff0c\u589e\u52a0\u5f53\u5730\u62ab\u8428\u5e97\u7684\u7bee\u5b50\u5927\u5c0f\u548c\u8ba2\u8d2d\u9891\u7387\u3002\n\u6839\u636e\u7efc\u5408\u8d2d\u4e70\u529b\uff0c\u4ee5\u5177\u6709\u7ade\u4e89\u529b\u7684\u4ef7\u683c\u8c08\u5224\u5e76\u63d0\u4f9b\u7b2c\u4e09\u65b9\u670d\u52a1(\u5982\u9001\u8d27)\u3002\n\u4ece\u4e00\u5f00\u59cb\uff0c\u751a\u81f3\u5230\u4eca\u5929\uff0cIlir\u7684\u9500\u552e\u91cd\u70b9\u90fd\u662f\u4ece\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u66f4\u591a\u8ba2\u5355\uff0c\u800c\u4e0d\u662f\u50cf\u5176\u4ed6\u98df\u54c1\u805a\u96c6\u5546\u6240\u9f13\u5439\u7684\u90a3\u6837\uff0c\u8ba9\u65b0\u5ba2\u6237\u767b\u673a\u3002\u4f0a\u5229\u5c14\u89e3\u91ca\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u9644\u8fd1\u4f4f\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u4f60\u6700\u559c\u6b22\u7684\u62ab\u8428\u5e97\u662f\u4ec0\u4e48\u4e86\u3002\u7136\u540e\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u9001\u8d27\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u9910\u5385\u9009\u62e9\u95ee\u9898\u3002\u8fd9\u4f7f\u5f97\u767b\u4e0a\u65b0\u5ba2\u6237\u5e76\u8de8\u8d8a\u9e21\u8089\u548c\u9e21\u86cb\u5e02\u573a\u7684\u6d41\u52a8\u6027\u95ee\u9898\u53d8\u5f97\u66f4\u6709\u8bf4\u670d\u529b\u3002\n\u4ed6\u62ff\u8d77\u7535\u8bdd\uff0c\u5f00\u59cb\u7ed9\u5f53\u5730\u7684\u62ab\u8428\u5e97\u6253\u7535\u8bdd\uff0c\u5e76\u575a\u6301\u8981\u4eb2\u81ea\u51fa\u73b0\u5728\u5546\u5e97\u91cc\u3002\u4ed6\u8bf4\uff0c\u8fd9\u8ba9\u516c\u53f8\u53d8\u5f97\u4eba\u6027\u5316\uff0c\u5e76\u8ba9\u4ed6\u4e0e\u5c0f\u4f01\u4e1a\u4e3b\u53d1\u5c55\u4e86\u4e00\u4e9b\u878d\u6d3d\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u7ed9\u81ea\u5df1\u589e\u52a0\u53ef\u4fe1\u5ea6\uff0c\u4ed6\u3002\n\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u59ff\u6001\u7ed9\u4e86\u4ed6\u66f4\u591a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5e76\u8ba9\u4eba\u89c9\u5f97\u4ed6\u4eec\u5728\u6ca1\u6709\u89c4\u6a21\u7684\u65f6\u5019\u662f\u6709\u89c4\u6a21\u7684\u3002\n\u4e0d\u5c3d\u7136\u3002\u5f53\u4e0e\u8fd9\u4e9b\u5546\u5e97\u7684\u8001\u677f\u4f1a\u9762\uff0c\u8ba8\u8bba\u4ed6\u7684\u6570\u5b57\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u611f\u89c9\u4e1a\u52a1\u8fd0\u4f5c\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\uff0c\u8ba9\u8bb8\u591a\u5c0f\u5546\u5e97\u8001\u677f\u4e0d\u613f\u52a0\u5165\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u6ce8\u610f\u5230\uff0c\u6240\u6709\u8fd9\u4e9b\u83dc\u5355\u4e0a\u4ecd\u7136\u6709\u4f20\u771f\u53f7\u7801\uff0c\u9644\u8fd1\u7684\u516c\u53f8\u4f7f\u7528\u8fd9\u4e9b\u53f7\u7801\u4e3a\u5458\u5de5\u9884\u8ba2\u5348\u9910\u3002\u56e0\u6b64\uff0c\u4ed6\u6ca1\u6709\u5c1d\u8bd5\u9500\u552e\u4ed6\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u662f\u51b3\u5b9a\u9500\u552e\u4ed6\u7684\u4ef7\u503c\u4e3b\u5f20\uff0c\u5373\u4ece\u60a8\u7684\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u66f4\u591a\u8ba2\u5355\uff0c\u56e0\u6b64\u4ed6\u3002\n\u5c06\u97f3\u8c03\u66f4\u6539\u4e3a&#34\uff1b\u60a8\u662f\u5426\u9700\u8981\u66f4\u591a\u4f20\u771f\u8ba2\u5355&#34\uff1b\u800c\u4e0d\u662f\u60f3\u52a0\u5165\u6211\u4eec\u7684\u5e73\u53f0\u3002\u8f7b\u677e\u3001\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5c55\u793a\u4ef7\u503c\u3002\n\u60f3\u51fa\u4e86\u5982\u4f55\u5c06\u5728\u7ebf\u8ba2\u5355\u8f6c\u6362\u6210\u4f20\u771f\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ed9\u52a0\u5165\u7684\u4eba\u5e26\u6765\u4efb\u4f55\u8d1f\u9762\u5f71\u54cd\u3002\n\u5728\u52a0\u5165\u65b0\u7684\u4f20\u771f\u5ba2\u6237\u5e76\u5c55\u793a\u4ef7\u503c\u540e\uff0c\u4ed6\u4f1a\u7ee7\u7eed\u5c06\u4ed6\u4eec\u52a0\u5165Slice\u5e73\u53f0\uff0c\u8fd9\u4e3a\u6240\u6709\u8005\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u4ef7\u503c\u548c\u66f4\u9ad8\u7684\u6548\u7387\u3002\n\u8ba9\u81ea\u5df1\u9002\u5e94\u73b0\u6709\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u663e\u793a\u4ef7\u503c\uff0c\u7136\u540e\u628a\u5b83\u4eec\u53d8\u5f97\u66f4\u597d\u3002&#34\uff1b", "note_en": "Slice was started by Ilir Sela, a self-proclaimed &#34;third-generation pizza.&#34; in 2010 and was initially named Mypizza, in tribute to the first pizzeria that Illia owned and managed. Unlike Doordash, Postmates, and other food aggregators, Slice takes a vertically integrated approach to delivery, which they dubbed as a &#34;reverse franchise&#34; model.\n  Think of it as bringing the same kind of value to local pizzerias as Domino&#39;s delivers to their franchisees.\n Aggregating buying power for SMBs for things like Pizza boxes decreasing costs by as much as 80%\n Being the &#34;back-office&#34; for local pizzerias eliminating the need for hiring part-time workers for managing orders, answering calls..etc\n Increase basket-size and order frequency for local pizzerias by a marketplace digital offering minus all crazy fees aggregators charge.\n Negotiating and offering 3rd party services(such as delivery) at competitive prices due to the aggregated buying power.\n     To get started and even to this day, Ilir focused his sales pitch on getting more orders from YOUR CUSTOMERS rather than onboarding new clients as the other food aggregators preach. Ilir explains\u00a0 that if you&#39;ve been living in a neighborhood for enough time, you likely already know what your favorite pizza spot is. The issue then becomes one of delivery as opposed to restaurant selection.\u00a0That made it more compelling to onboard new clients and leap-frog the chicken and egg marketplace\u2014liquidity problem.\n  He picked up the phone and started calling in local pizzerias and insisted on\u00a0 showing up personally at the store.\u00a0\u00a0That humanized the company and allowed him to develop some rapport with small business owners. To lend himself more credibility he\n  Weirdly, that small gesture gave him even more credibility and made it seem that they had scale when they didn&#39;t.\n    Not quite it. When meeting with owners of these shops about his &#34;digital&#34; solution, it felt like a massive change to the business operations and made a lot of small shop owners reluctant to get on board.\n At the same time, he noticed that all these menus still had fax numbers that were used by companies nearby to order in lunch for their employees. So instead of trying to sell his solution, he decided to sell his value proposition which is\u00a0 MORE ORDERS FROM YOUR CUSTOMER\u00a0and so he\n Changed pitch to &#34;Do you want more fax orders&#34; rather than do you want to join our platform. Easy, simple way to demonstrate value.\n Figured out how to turn online orders into faxes and offered almost no downside for people joining\n After onboarding new &#34;fax clients&#34; and demonstrating value, he would then go on to onboard them onto the Slice platform, which offered even more value and increased efficiency to the owners.\n   &#34;Fit yourself within the existing workflow to show value and then change them for the better. &#34;", "posttime": "2020-05-29 18:39:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "slice,startup,\u5ba2\u6237", "title": "Startup Slice\u662f\u5982\u4f55\u83b7\u5f97\u9996\u62791000\u540d\u5ba2\u6237\u7684", "title_en": "How the Startup Slice Got Their First 1000 Customers", "transed": 1, "url": "https://first1000.substack.com/p/-slice", "via": "", "real_tags": ["slice", "startup", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004217, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Stoke\u662fx86-64\u6307\u4ee4\u96c6\u7684\u968f\u673a\u4f18\u5316\u5668\u548c\u7a0b\u5e8f\u5408\u6210\u5668\u3002Stoke\u4f7f\u7528\u968f\u673a\u641c\u7d22\u6765\u63a2\u7d22\u6240\u6709\u53ef\u80fd\u7684\u7a0b\u5e8f\u8f6c\u6362\u7684\u6781\u9ad8\u7ef4\u7a7a\u95f4\u3002\u5c3d\u7ba1\u4efb\u4f55\u4e00\u4e2a\u968f\u673a\u53d8\u6362\u90fd\u4e0d\u592a\u53ef\u80fd\u4ea7\u751f\u6240\u9700\u7684\u7801\u5e8f\u5217\uff0c\u4f46\u662f\u91cd\u590d\u5e94\u7528\u6570\u767e\u4e07\u6b21\u53d8\u6362\u8db3\u4ee5\u4ea7\u751f\u65b0\u9896\u4e14\u4e0d\u660e\u663e\u7684\u7801\u5e8f\u5217\u3002Stoke\u53ef\u4ee5\u5728\u8bb8\u591a\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u4f7f\u7528\uff0c\u6bd4\u5982\u9488\u5bf9\u6027\u80fd\u6216\u5927\u5c0f\u4f18\u5316\u4ee3\u7801\uff0c\u4ece\u5934\u5f00\u59cb\u7efc\u5408\u5b9e\u73b0\uff0c\u6216\u8005\u7528\u6d6e\u70b9\u8ba1\u7b97\u7684\u7cbe\u5ea6\u6765\u6362\u53d6\u6027\u80fd\u3002\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u7ea7\u4f18\u5316\u5668\uff0cStoke\u5df2\u7ecf\u88ab\u8bc1\u660e\u4f18\u4e8e\u901a\u7528\u548c\u7279\u5b9a\u4e8e\u57df\u7684\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4ee3\u7801\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u80dc\u8fc7\u4e13\u5bb6\u624b\u5199\u4ee3\u7801\u3002\n\u9664\u4e86\u641c\u7d22\u7a0b\u5e8f\u4e4b\u5916\uff0cStoke\u8fd8\u5305\u542b\u9a8c\u8bc1\u57fa\u7840\u8bbe\u65bd\u6765\u663e\u793ax86-64\u7a0b\u5e8f\u4e4b\u95f4\u7684\u7b49\u4ef7\u6027\u3002Stoke\u53ef\u4ee5\u8003\u8651\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6267\u884c\u6709\u754c\u9a8c\u8bc1\uff0c\u76f4\u5230\u663e\u793a\u6240\u6709\u53ef\u80fd\u8f93\u5165\u7684\u7b49\u4ef7\u6027\u7684\u5b8c\u5168\u5f62\u5f0f\u9a8c\u8bc1\u3002\nStoke\u662f\u5728GitHub\u4e0a\u4f5c\u4e3a\u5f00\u6e90\u5f00\u53d1\u7684\uff0c\u53ef\u4ee5\u4ecegithub.com/StanfordPL/stoke\u4e0b\u8f7d\u3002\u5b58\u50a8\u5e93\u5305\u542b\u6709\u5173\u5982\u4f55\u5b89\u88c5Stoke\u53ca\u5176\u4f9d\u8d56\u9879\u7684\u8bf4\u660e\u3002", "note_en": "STOKE is a stochastic optimizer and program synthesizer for the x86-64 instruction set. STOKE uses random search to explore the extremely high-dimensional space of all possible program transformations. Although any one random transformation is unlikely to produce a code sequence that is desirable, the repeated application of millions of transformations is sufficient to produce novel and non-obvious code sequences. STOKE can be used in many different scenarios, such as optimizing code for performance or size, synthesizing an implementation from scratch or to trade accuracy of floating point computations for performance. As a superoptimizer, STOKE has been shown to outperform the code produced by general-purpose and domain-specific compilers, and in some cases expert hand-written code.\n In addition to searching over programs, STOKE contains verification infrastructure to show the equivalence between x86-64 programs. STOKE can consider test-cases, perform bounded verification all the way to fully formal verification that shows the equivalence for all possible inputs.\n      STOKE is developed as open source on GitHub and can be downloaded from  github.com/StanfordPL/stoke. The repository contains instructions on how to install STOKE as well as its dependencies.", "posttime": "2020-05-29 18:39:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u4f18\u5316,stochastic,stoke", "title": "STOKE--\u4e00\u79cd\u968f\u673a\u8d85\u4f18\u5316\u5668\u548c\u7a0b\u5e8f\u5408\u6210\u5668", "title_en": "Stoke \u2013 A stochastic superoptimizer and program synthesizer", "transed": 1, "url": "http://stoke.stanford.edu/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u4f18\u5316", "stoke"]}, {"category": "", "categoryclass": "", "imagename": "01f74bfb2b4dac530eb025a9dd835e7f.jpg", "infoid": 1004216, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63a8\u7279\u516c\u53f8\u3002\u4e0a\u5468\u4e94\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u7684\u4e00\u6761\u63a8\u6587\u88ab\u8d34\u4e0a\u201c\u7f8e\u5316\u66b4\u529b\u201d\u7684\u6807\u7b7e\uff0c\u5c31\u5728\u51e0\u4e2a\u5c0f\u65f6\u524d\uff0c\u4ed6\u7b7e\u7f72\u4e86\u4e00\u9879\u884c\u653f\u547d\u4ee4\uff0c\u5a01\u80c1\u8981\u5265\u593a\u8be5\u516c\u53f8\u7684\u8d23\u4efb\u4fdd\u62a4\u3002\n\u7279\u6717\u666e\u7684\u8fd9\u6761\u4ee4\u4eba\u4e0d\u5feb\u7684\u63a8\u6587\u662f\u4ed6\u5bf9\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u9a9a\u4e71\u7684\u53cd\u5e94\u3002\u4ed6\u5f15\u7528\u4e86\u8fc8\u963f\u5bc6\u4e00\u4f4d\u524d\u8b66\u5bdf\u5c40\u957f\u7684\u8bdd\u8bf4\uff0c\u201c\u5f53\u62a2\u52ab\u5f00\u59cb\u65f6\uff0c\u67aa\u51fb\u5c31\u5f00\u59cb\u4e86\u3002\u201d\n\u5b8c\u6574\u7684\u63a8\u6587\u5199\u9053\uff1a\u201c\u8fd9\u4e9b\u66b4\u5f92\u662f\u5728\u73b7\u6c61\u5bf9\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8bb0\u5fc6\uff0c\u6211\u4e0d\u4f1a\u8ba9\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f\u7684\u3002\u521a\u521a\u4e0e\u5dde\u957f\u8482\u59c6\u00b7\u6c83\u5c14\u5179\u901a\u8bdd\uff0c\u544a\u8bc9\u4ed6\u519b\u65b9\u4e00\u76f4\u4e0e\u4ed6\u540c\u5728\u3002\u4efb\u4f55\u56f0\u96be\uff0c\u6211\u4eec\u90fd\u4f1a\u627f\u62c5\u63a7\u5236\u6743\uff0c\u4f46\u662f\uff0c\u5f53\u62a2\u52ab\u5f00\u59cb\u65f6\uff0c\u5c04\u51fb\u5c31\u5f00\u59cb\u4e86\u3002\u8c22\u8c22\uff01\u201c\u3002\n\u5f53\u7528\u6237\u70b9\u51fb\u8fd9\u6761\u63a8\u6587\u65f6\uff0c\u5b83\u73b0\u5728\u5199\u9053\uff1a\u201c\u8fd9\u6761\u63a8\u6587\u8fdd\u53cd\u4e86\u63a8\u7279\u5173\u4e8e\u7f8e\u5316\u66b4\u529b\u7684\u89c4\u5b9a\u3002\u7136\u800c\uff0c\u63a8\u7279\u5df2\u7ecf\u8ba4\u5b9a\uff0c\u8ba9\u8fd9\u6761\u63a8\u6587\u4fdd\u6301\u53ef\u8bbf\u95ee\u72b6\u6001\u53ef\u80fd\u7b26\u5408\u516c\u4f17\u5229\u76ca\u3002\u201c\u3002\n\u8fd9\u662f\u7279\u6717\u666e\u7684\u7b2c\u4e00\u6761\u63a8\u6587\u5728\u7528\u6237\u70b9\u51fb\u65f6\u88ab\u5c4f\u853d\u3002\n\u63a8\u7279\u79f0\uff0c\u6b64\u4e3e\u201c\u662f\u4e3a\u4e86\u9632\u6b62\u5176\u4ed6\u4eba\u53d7\u5230\u542f\u53d1\u800c\u5b9e\u65bd\u66b4\u529b\u884c\u4e3a\u201d\u3002\n\u7279\u6717\u666e\u4e00\u76f4\u5728\u4e0e\u8be5\u516c\u53f8\u5c31\u5176\u5bf9\u4ed6\u7684\u63a8\u6587\u7684\u53cd\u5e94\u8fdb\u884c\u6597\u4e89\uff0c\u8fd9\u4e9b\u63a8\u6587\u6697\u793aMSNBC\u4e3b\u6301\u4eba\u4e54\u00b7\u65af\u5361\u4f2f\u52d2\u5bf92001\u5e74\u6d1b\u91cc\u00b7\u514b\u52b3\u82cf\u8482\u65af\u7684\u6b7b\u4ea1\u8d1f\u6709\u8d23\u4efb\u3002\u514b\u52b3\u82cf\u8482\u65af\u7684\u9ccf\u592bT.J.Klausutis\u8981\u6c42Twitter\u5220\u9664\u8fd9\u4e9b\u63a8\u6587\u3002\u8be5\u516c\u53f8\u6ca1\u6709\u5220\u9664\u8fd9\u4e9b\u63a8\u6587\uff0c\u4f46\u5b83\u5728\u603b\u7edf\u901a\u8fc7\u90ae\u5bc4\u9009\u7968\u53d1\u5e03\u7684\u53e6\u4e00\u6761\u63a8\u6587\u4e2d\u6dfb\u52a0\u4e86\u201c\u83b7\u53d6\u4e8b\u5b9e\u201d\u6807\u7b7e\u3002\n\u7279\u6717\u666e\u7b7e\u7f72\u4e86\u4e00\u9879\u884c\u653f\u547d\u4ee4\uff0c\u547c\u5401\u542f\u52a8\u76d1\u7ba1\u7a0b\u5e8f\uff0c\u6f84\u6e05\u901a\u4fe1\u6b63\u5f53\u6cd5\u7b2c230\u6761\u7684\u8303\u56f4\uff0c\u201c\u4ee5\u786e\u4fdd\u90a3\u4e9b\u58f0\u79f0\u4e3a\u7528\u6237\u63d0\u4f9b\u81ea\u7531\u548c\u516c\u5f00\u8a00\u8bba\u7684\u8bba\u575b\uff0c\u4f46\u4ecd\u7136\u4ece\u4e8b\u6b3a\u9a97\u6027\u6216\u501f\u53e3\u5ba1\u67e5\u7684\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u5c06\u4e0d\u88ab\u5141\u8bb8\u4eab\u6709\u6b64\u7c7b\u884c\u4e3a\u7684\u8c41\u514d\u6743\u3002\u201d\n\u8be5\u547d\u4ee4\u8fd8\u5efa\u7acb\u4e86\u4e00\u4e2a\u5de5\u4f5c\u7ec4\uff0c\u4ee5\u5236\u5b9a\u5404\u5dde\u53ef\u4ee5\u901a\u8fc7\u7684\u793a\u8303\u7acb\u6cd5\u3002\nTwitter TWTR\uff0c-4.44%\u7684\u80a1\u4ef7\u5468\u56db\u6536\u76d8\u4e0b\u8dcc\u8d85\u8fc74%\uff0cFacebook FB\uff0c-1.60%\u7684\u80a1\u4ef7\u4e5f\u6536\u76d8\u4e0b\u8dcc\u3002", "note_en": "Twitter Inc. on Friday labeled a tweet of President Donald Trump\u2019s as having \u201cglorified violence,\u201d just hours after he signed an executive order threatening to strip the company of protections against liability.\n  The offending tweet by Trump came in his reaction to the riots in Minneapolis. He employed a quote from a former Miami police chief who said, \u201cwhen the looting starts, the shooting starts.\u201d\n  The full tweet read: \u201cThese THUGS are dishonoring the memory of George Floyd, and I won\u2019t let that happen. Just spoke to Governor Tim Walz and told him that the Military is with him all the way. Any difficulty and we will assume control but, when the looting starts, the shooting starts. Thank you!\u201d\n    When users click on the tweet, it now reads: \u201cThis Tweet violated the Twitter Rules about glorifying violence. However, Twitter has determined that it may be in the public\u2019s interest for the Tweet to remain accessible.\u201d\n    It\u2019s the first tweet of Trump\u2019s that is masked when users click on it.\n  Twitter said the move was \u201cin the interest of preventing others from being inspired to commit violent acts.\u201d\n    Trump has been battling the company over its reaction to tweets he\u2019s made suggesting MSNBC host Joe Scarborough was responsible for the 2001 death of Lori Klausutis. Klausutis\u2019 widower, T.J. Klausutis, asked Twitter to remove the tweets. The company has not removed the tweets but it added a \u201cget the facts\u201d tab to another of the president\u2019s tweets over mail-in ballots.\n  Trump signed an executive order calling for the start of a regulatory process to clarify the scope of Section 230 of the Communications Decency Act \u201cto ensure social media companies who purport to provide users a forum for free and open speech, but nonetheless engage in deceptive or pretextual censorship, will not be allowed to entitled to immunity for such actions.\u201d\n  The order also establishes a working group to develop model legislation that states could adopt.\n      Twitter  TWTR,  -4.44% shares ended over 4% lower on Thursday, and Facebook  FB,  -1.60% also closed lower.", "posttime": "2020-05-29 17:14:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u7279,\u66b4\u529b,labels,\u63a8\u6587", "title": "\u63a8\u7279\u5c06\u7279\u6717\u666e\u7684\u63a8\u6587\u8d34\u4e0a\u201c\u7f8e\u5316\u66b4\u529b\u201d\u7684\u6807\u7b7e", "title_en": "Twitter labels Trump tweet as \u2018glorifying violence\u2019", "transed": 1, "url": "https://www.marketwatch.com/story/twitter-labels-trump-tweet-as-glorifying-violence-2020-05-29", "via": "", "real_tags": ["\u63a8\u7279", "\u66b4\u529b", "labels", "\u63a8\u6587"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004214, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AWK\u662f\u4e00\u79cd\u5177\u670940\u591a\u5e74\u5386\u53f2\u7684\u6587\u672c\u5904\u7406\u8bed\u8a00\u3002\u5b83\u6709\u4e00\u4e2aPOSIX\u6807\u51c6\uff0c\u6709\u51e0\u4e2a\u7b26\u5408\u6807\u51c6\u7684\u5b9e\u73b0\uff0c\u57282020\u5e74\u4ecd\u7136\u4ee4\u4eba\u60ca\u8bb6\u5730\u76f8\u5173-\u65e0\u8bba\u662f\u5bf9\u4e8e\u7b80\u5355\u7684\u6587\u672c\u5904\u7406\u4efb\u52a1\u8fd8\u662f\u5bf9\u4e8e\u4e89\u8bba\u201c\u5927\u6570\u636e\u201d\u3002GNU Awk5.1\u7684\u53d1\u5e03\u4f3c\u4e4e\u662f\u8c03\u67e5AWK\u7248\u56fe\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u770b\u770bGNU Awk\u4e00\u76f4\u5728\u505a\u4e9b\u4ec0\u4e48\uff0c\u5e76\u770b\u770b\u8fd9\u4e9b\u5929AWK\u5728\u54ea\u91cc\u88ab\u4f7f\u7528\u3002", "note_en": "AWK is a text-processing language with a history spanning more than 40years. It has a POSIXstandard, several conforming implementations, and is still surprisingly relevant in 2020 \u2014 both for simple text processing tasks and for wrangling \"big data\".  Therecentreleaseof GNU Awk 5.1 seems like a good reason to survey the AWK landscape, seewhat GNU Awk has been up to, and look at where AWK is being used these days.", "posttime": "2020-05-29 16:57:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "state,awk", "title": "\u201c\u66d9\u5149\u4e4b\u56fd\u201d(The State Of The Awk)", "title_en": "The State of the Awk", "transed": 1, "url": "https://lwn.net/Articles/820829/", "via": "", "real_tags": ["state", "awk"]}, {"category": "", "categoryclass": "", "imagename": "79b1a48d0853f9b2ebc5ccf648245667.png", "infoid": 1004213, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Slice\u7531\u81ea\u79f0\u7b2c\u4e09\u4ee3\u62ab\u8428\u7684\u4f0a\u5229\u5c14\u00b7\u585e\u62c9(Ilir Sela)\u4e8e2010\u5e74\u521b\u7acb\uff0c\u6700\u521d\u547d\u540d\u4e3aMypizza\uff0c\u4ee5\u7eaa\u5ff5\u4f0a\u5229\u4e9a\u62e5\u6709\u548c\u7ba1\u7406\u7684\u7b2c\u4e00\u5bb6\u62ab\u8428\u5e97\u3002\u4e0eDoorDash\u3001PostMate\u548c\u5176\u4ed6\u98df\u54c1\u805a\u5408\u5668\u4e0d\u540c\uff0cSlice\u91c7\u7528\u5782\u76f4\u6574\u5408\u7684\u9001\u8d27\u65b9\u5f0f\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u53cd\u5411\u7279\u8bb8\u7ecf\u8425\u6a21\u5f0f\u3002\n\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u7ed9\u5f53\u5730\u62ab\u8428\u5e97\u5e26\u6765\u7684\u4ef7\u503c\uff0c\u5c31\u50cf\u591a\u7c73\u8bfa\u7ed9\u4ed6\u4eec\u7684\u52a0\u76df\u5546\u63d0\u4f9b\u7684\u4e00\u6837\u3002\n\u805a\u5408\u4e2d\u5c0f\u4f01\u4e1a\u5bf9\u62ab\u8428\u76d2\u7b49\u7269\u54c1\u7684\u8d2d\u4e70\u529b\uff0c\u964d\u4f4e\u9ad8\u8fbe80%\u7684\u6210\u672c\u3002\n\u6210\u4e3a\u5f53\u5730\u62ab\u8428\u5e97\u7684\u540e\u53f0\uff0c\u4e0d\u518d\u9700\u8981\u96c7\u4f63\u517c\u804c\u4eba\u5458\u6765\u7ba1\u7406\u8ba2\u5355\u3001\u63a5\u542c\u7535\u8bdd\u7b49\u3002\n\u901a\u8fc7\u5e02\u573a\u6570\u5b57\u670d\u52a1\u51cf\u53bb\u805a\u5408\u5668\u6536\u53d6\u7684\u6240\u6709\u75af\u72c2\u8d39\u7528\uff0c\u589e\u52a0\u5f53\u5730\u62ab\u8428\u5e97\u7684\u7bee\u5b50\u5927\u5c0f\u548c\u8ba2\u8d2d\u9891\u7387\u3002\n\u6839\u636e\u7efc\u5408\u8d2d\u4e70\u529b\uff0c\u4ee5\u5177\u6709\u7ade\u4e89\u529b\u7684\u4ef7\u683c\u8c08\u5224\u5e76\u63d0\u4f9b\u7b2c\u4e09\u65b9\u670d\u52a1(\u5982\u9001\u8d27)\u3002\n\u4ece\u4e00\u5f00\u59cb\uff0c\u751a\u81f3\u5230\u4eca\u5929\uff0cIlir\u7684\u9500\u552e\u91cd\u70b9\u90fd\u662f\u4ece\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u66f4\u591a\u8ba2\u5355\uff0c\u800c\u4e0d\u662f\u50cf\u5176\u4ed6\u98df\u54c1\u805a\u96c6\u5546\u6240\u9f13\u5439\u7684\u90a3\u6837\uff0c\u8ba9\u65b0\u5ba2\u6237\u767b\u673a\u3002\u4f0a\u5229\u5c14\u89e3\u91ca\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u9644\u8fd1\u4f4f\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u4f60\u6700\u559c\u6b22\u7684\u62ab\u8428\u5e97\u662f\u4ec0\u4e48\u4e86\u3002\u7136\u540e\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u9001\u8d27\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u9910\u5385\u9009\u62e9\u95ee\u9898\u3002\u8fd9\u4f7f\u5f97\u767b\u4e0a\u65b0\u5ba2\u6237\u5e76\u8de8\u8d8a\u9e21\u8089\u548c\u9e21\u86cb\u5e02\u573a\u7684\u6d41\u52a8\u6027\u95ee\u9898\u53d8\u5f97\u66f4\u6709\u8bf4\u670d\u529b\u3002\n\u4ed6\u62ff\u8d77\u7535\u8bdd\uff0c\u5f00\u59cb\u7ed9\u5f53\u5730\u7684\u62ab\u8428\u5e97\u6253\u7535\u8bdd\uff0c\u5e76\u575a\u6301\u8981\u4eb2\u81ea\u51fa\u73b0\u5728\u5546\u5e97\u91cc\u3002\u4ed6\u8bf4\uff0c\u8fd9\u8ba9\u516c\u53f8\u53d8\u5f97\u4eba\u6027\u5316\uff0c\u5e76\u8ba9\u4ed6\u4e0e\u5c0f\u4f01\u4e1a\u4e3b\u53d1\u5c55\u4e86\u4e00\u4e9b\u878d\u6d3d\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u7ed9\u81ea\u5df1\u589e\u52a0\u53ef\u4fe1\u5ea6\uff0c\u4ed6\u3002\n\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e2a\u5c0f\u5c0f\u7684\u59ff\u6001\u7ed9\u4e86\u4ed6\u66f4\u591a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5e76\u8ba9\u4eba\u89c9\u5f97\u4ed6\u4eec\u5728\u6ca1\u6709\u89c4\u6a21\u7684\u65f6\u5019\u662f\u6709\u89c4\u6a21\u7684\u3002\n\u4e0d\u5c3d\u7136\u3002\u5f53\u4e0e\u8fd9\u4e9b\u5546\u5e97\u7684\u8001\u677f\u4f1a\u9762\uff0c\u8ba8\u8bba\u4ed6\u7684\u6570\u5b57\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u611f\u89c9\u4e1a\u52a1\u8fd0\u4f5c\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\uff0c\u8ba9\u8bb8\u591a\u5c0f\u5546\u5e97\u8001\u677f\u4e0d\u613f\u52a0\u5165\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u6ce8\u610f\u5230\uff0c\u6240\u6709\u8fd9\u4e9b\u83dc\u5355\u4e0a\u4ecd\u7136\u6709\u4f20\u771f\u53f7\u7801\uff0c\u9644\u8fd1\u7684\u516c\u53f8\u4f7f\u7528\u8fd9\u4e9b\u53f7\u7801\u4e3a\u5458\u5de5\u9884\u8ba2\u5348\u9910\u3002\u56e0\u6b64\uff0c\u4ed6\u6ca1\u6709\u5c1d\u8bd5\u9500\u552e\u4ed6\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u662f\u51b3\u5b9a\u9500\u552e\u4ed6\u7684\u4ef7\u503c\u4e3b\u5f20\uff0c\u5373\u4ece\u60a8\u7684\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u66f4\u591a\u8ba2\u5355\uff0c\u56e0\u6b64\u4ed6\u3002\n\u5c06\u97f3\u8c03\u66f4\u6539\u4e3a&#34\uff1b\u60a8\u662f\u5426\u9700\u8981\u66f4\u591a\u4f20\u771f\u8ba2\u5355&#34\uff1b\u800c\u4e0d\u662f\u60f3\u52a0\u5165\u6211\u4eec\u7684\u5e73\u53f0\u3002\u8f7b\u677e\u3001\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5c55\u793a\u4ef7\u503c\u3002\n\u60f3\u51fa\u4e86\u5982\u4f55\u5c06\u5728\u7ebf\u8ba2\u5355\u8f6c\u6362\u6210\u4f20\u771f\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ed9\u52a0\u5165\u7684\u4eba\u5e26\u6765\u4efb\u4f55\u8d1f\u9762\u5f71\u54cd\u3002\n\u5728\u52a0\u5165\u65b0\u7684\u4f20\u771f\u5ba2\u6237\u5e76\u5c55\u793a\u4ef7\u503c\u540e\uff0c\u4ed6\u4f1a\u7ee7\u7eed\u5c06\u4ed6\u4eec\u52a0\u5165Slice\u5e73\u53f0\uff0c\u8fd9\u4e3a\u6240\u6709\u8005\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u4ef7\u503c\u548c\u66f4\u9ad8\u7684\u6548\u7387\u3002\n\u8ba9\u81ea\u5df1\u9002\u5e94\u73b0\u6709\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u663e\u793a\u4ef7\u503c\uff0c\u7136\u540e\u628a\u5b83\u4eec\u53d8\u5f97\u66f4\u597d\u3002&#34\uff1b", "note_en": "Slice was started by Ilir Sela, a self-proclaimed &#34;third-generation pizza.&#34; in 2010 and was initially named Mypizza, in tribute to the first pizzeria that Illia owned and managed. Unlike Doordash, Postmates, and other food aggregators, Slice takes a vertically integrated approach to delivery, which they dubbed as a &#34;reverse franchise&#34; model.\n  Think of it as bringing the same kind of value to local pizzerias as Domino&#39;s delivers to their franchisees.\n Aggregating buying power for SMBs for things like Pizza boxes decreasing costs by as much as 80%\n Being the &#34;back-office&#34; for local pizzerias eliminating the need for hiring part-time workers for managing orders, answering calls..etc\n Increase basket-size and order frequency for local pizzerias by a marketplace digital offering minus all crazy fees aggregators charge.\n Negotiating and offering 3rd party services(such as delivery) at competitive prices due to the aggregated buying power.\n     To get started and even to this day, Ilir focused his sales pitch on getting more orders from YOUR CUSTOMERS rather than onboarding new clients as the other food aggregators preach. Ilir explains\u00a0 that if you&#39;ve been living in a neighborhood for enough time, you likely already know what your favorite pizza spot is. The issue then becomes one of delivery as opposed to restaurant selection.\u00a0That made it more compelling to onboard new clients and leap-frog the chicken and egg marketplace\u2014liquidity problem.\n  He picked up the phone and started calling in local pizzerias and insisted on\u00a0 showing up personally at the store.\u00a0\u00a0That humanized the company and allowed him to develop some rapport with small business owners. To lend himself more credibility he\n  Weirdly, that small gesture gave him even more credibility and made it seem that they had scale when they didn&#39;t.\n    Not quite it. When meeting with owners of these shops about his &#34;digital&#34; solution, it felt like a massive change to the business operations and made a lot of small shop owners reluctant to get on board.\n At the same time, he noticed that all these menus still had fax numbers that were used by companies nearby to order in lunch for their employees. So instead of trying to sell his solution, he decided to sell his value proposition which is\u00a0 MORE ORDERS FROM YOUR CUSTOMER\u00a0and so he\n Changed pitch to &#34;Do you want more fax orders&#34; rather than do you want to join our platform. Easy, simple way to demonstrate value.\n Figured out how to turn online orders into faxes and offered almost no downside for people joining\n After onboarding new &#34;fax clients&#34; and demonstrating value, he would then go on to onboard them onto the Slice platform, which offered even more value and increased efficiency to the owners.\n   &#34;Fit yourself within the existing workflow to show value and then change them for the better. &#34;", "posttime": "2020-05-29 16:42:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "slice,startup,\u5ba2\u6237", "title": "Startup Slice\u662f\u5982\u4f55\u83b7\u5f97\u9996\u62791000\u540d\u5ba2\u6237\u7684", "title_en": "How the Startup Slice Got Their First 1000 Customers", "transed": 1, "url": "https://first1000.substack.com/p/-slice?r=1u7h1&utm_campaign=post&utm_medium=web&utm_source=copy", "via": "", "real_tags": ["slice", "startup", "\u5ba2\u6237"]}]