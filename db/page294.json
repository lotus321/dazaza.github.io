[{"category": "", "categoryclass": "", "imagename": "46e9764acd8fe7926a3bc5d7fe14625e.jpeg", "infoid": 1002493, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d85\u7ea7\u5145\u7535\u5df2\u7ecf\u542f\u7528(\u975e\u6cd5)\uff0c\u6bcf\u6b21\u5145\u7535\u505c\u6b62\u65f6\uff0c\u6211\u4f1a\u5c06\u6210\u672c\u52a0\u8d77\u6765\uff0c\u7136\u540e\u968f\u673a\u7ed9\u4e00\u4e2a\u7279\u65af\u62c9\u5458\u5de5\u73b0\u91d1\u3002\u5982\u679c\u6709\u4eba\u6211..\u3002", "note_en": "Supercharging has been enabled (illegally) and every time It stops for a charge I will add the cost up and give a random Tesla employee the cash. If anyone i...", "posttime": "2020-05-17 11:12:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u542f\u7528,breaking,\u505c\u6b62", "title": "\u8d8a\u72f1\u7279\u65af\u62c9(\u91cd\u65b0\u542f\u7528\u589e\u538b\u5668)", "title_en": "Jail breaking a Tesla (re-enabling supercharger)", "transed": 1, "url": "https://www.youtube.com/post/UgxiZkSq4p32uBZWgQ14AaABCQ", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u542f\u7528", "breaking", "\u505c\u6b62"]}, {"category": "", "categoryclass": "", "imagename": "37c54af3c5be9bb3c942cc07a0f736c6.jpeg", "infoid": 1002492, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u60a8\u53ef\u4ee5\u542c\u5230\u8bb8\u591a\u6d6e\u70b9\u683c\u5f0f\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u7528\u9014\u548c\u7528\u9014\u7684\u6458\u8981\u3002\nx86\u5b9e\u73b0\u4e2d\u901a\u5e38\u5df2\u77e5\u768480\u4f4dIEEE 754\u6269\u5c55\u7cbe\u5ea6\u4e8c\u8fdb\u5236\u6d6e\u70b9\u683c\u5f0f\u59cb\u4e8eIntel 8087\u6570\u5b66\u534f\u5904\u7406\u5668(\u4ee5\u524dCPU\u4e0d\u652f\u6301\u6d6e\u70b9\u8ba1\u7b97\uff0c\u800cFPU\u662f\u5355\u72ec\u7684\u534f\u5904\u7406\u5668)\u3002\u5728\u6b64\u5b9e\u73b0\u4e2d\uff0c\u5b83\u5305\u542b\uff1a\n\u8bb8\u591a(\u4f46\u4e0d\u662f\u6240\u6709)C/C++\u5b9e\u73b0\u4f7f\u7528\u8fd9\u79cd80\u4f4d(10\u5b57\u8282)\u683c\u5f0f\u5b9e\u73b0long Double\u3002\n\u672c\u673a\u53d7x86 CPU\u652f\u6301\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cX87\u5904\u7406\u5668\u5728\u5185\u90e8\u90fd\u4f7f\u752880\u4f4d\u53cc\u6269\u5c55\u7cbe\u5ea6\u3002\n\u5927\u591a\u6570GPU\uff0c\u7279\u522b\u662f\u5305\u62ecRTX\u7cfb\u5217\u5728\u5185\u7684\u6e38\u620fGPU\uff0c\u90fd\u4e25\u91cd\u9650\u5236\u4e86FP64\u7684\u6027\u80fd(\u901a\u5e38\u662fFP32\u6027\u80fd\u76841/32\uff0c\u800c\u4e0d\u662f1/2\uff0c\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6709\u5173GPU\u7684\u6587\u7ae0)\u3002\n\u5728\u6700\u8fd1\u65e0\u9650\u652f\u6301FP64\u7684GPU\u4e2d\uff0c\u6709\u7279\u65af\u62c9P100/P40/P4\u548cQuadro GP100\u4e2d\u7684GP100/102/104\uff0c\u7279\u65af\u62c9V100/Quadro GV100/Titan V\u4e2d\u7684GV100\uff0c\u4ee5\u53ca\u6700\u8fd1\u53d1\u5e03\u7684A100\u4e2d\u7684GA100(\u6709\u8da3\u7684\u662f\uff0c\u65b0\u7684\u5b89\u57f9\u67b6\u6784\u5177\u6709\u652f\u6301FP64\u7684\u7b2c\u4e09\u4ee3\u5f20\u91cf\u6838\u5fc3\uff0cA100\u5f20\u91cf\u6838\u5fc3\u5305\u62ec\u65b0\u7684\u7b26\u5408IEEE\u7684FP64\u5904\u7406\uff0c\u63d0\u4f9bV100\u7684FP64\u6027\u80fd\u76842.5\u500d)\u3002\n\u8fd9\u79cd\u683c\u5f0f\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u4e00\u76f4\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u4e3b\u529b\u3002\u53e6\u4e00\u79cdIEEE 754\u683c\u5f0f\uff0c\u5355\u7cbe\u5ea6\u6d6e\u70b9\u683c\u5f0f\uff0c\u5177\u6709\uff1a\n\u957f\u671f\u4ee5\u6765\uff0c\u795e\u7ecf\u7f51\u7edc\u8ba1\u7b97\u7684\u6807\u51c6\u7c7b\u578b\u3002\u957f\u671f\u4ee5\u6765\uff0c\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u6743\u91cd\u3001\u6fc0\u6d3b\u548c\u5176\u4ed6\u503c\u4e00\u76f4\u9ed8\u8ba4\u7528FP32\u8868\u793a\u3002\n\u8303\u56f4\uff1a~5.96E\u22128(6.10E\u22125)\u2026\u300265504\uff0c4\u4f4d\u6709\u6548\u5c0f\u6570\u4f4d\u7cbe\u5ea6\u3002\nDL\u4e2d\u6709\u4e00\u79cd\u8d8b\u52bf\u662f\u4f7f\u7528FP16\u800c\u4e0d\u662fFP32\uff0c\u56e0\u4e3a\u8f83\u4f4e\u7cbe\u5ea6\u7684\u8ba1\u7b97\u4f3c\u4e4e\u5bf9\u795e\u7ecf\u7f51\u7edc\u5e76\u4e0d\u91cd\u8981\u3002\u66f4\u9ad8\u7684\u7cbe\u786e\u5ea6\u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u6548\u679c\uff0c\u4f46\u901f\u5ea6\u8f83\u6162\uff0c\u4f1a\u5360\u7528\u66f4\u591a\u5185\u5b58\u5e76\u964d\u4f4e\u901a\u4fe1\u901f\u5ea6\u3002\n\u76ee\u524d\u4e0d\u5728C/C++\u6807\u51c6\u4e2d(\u4f46\u6709\u4e00\u4e2a\u7b80\u77ed\u7684\u6d6e\u52a8\u63d0\u8bae)\u3002\u67d0\u4e9bC/C++\u7cfb\u7edf\u652f\u6301__FP16\u7c7b\u578b\u3002\u5426\u5219\uff0c\u53ef\u4ee5\u4e0e\u7279\u5b9a\u5e93\u4e00\u8d77\u4f7f\u7528\u3002\n\u5728\u8f83\u65e7\u7684\u6e38\u620fGPU\u4e0a\u652f\u6301\u8f83\u5dee(FP32\u76841/64\u6027\u80fd\uff0c\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6709\u5173GPU\u7684\u5e16\u5b50)\u3002\u76ee\u524d\u5df2\u5728\u73b0\u4ee3GPU(\u4f8b\u5982NVIDIA RTX\u7cfb\u5217)\u4e0a\u83b7\u5f97\u826f\u597d\u652f\u6301\u3002\n\u53e6\u4e00\u79cd\u6700\u521d\u7531Google\u5f00\u53d1\u768416\u4f4d\u683c\u5f0f\u88ab\u79f0\u4e3a\u201c\u8111\u6d6e\u70b9\u683c\u5f0f\u201d\uff0c\u7b80\u79f0\u4e3a\u201cbflat16\u201d\u3002\u8fd9\u4e2a\u540d\u5b57\u6765\u6e90\u4e8e\u201c\u8c37\u6b4c\u5927\u8111\u201d\uff0c\u8fd9\u662f\u8c37\u6b4c\u7684\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5c0f\u7ec4\uff0c\u8fd9\u79cd\u5f62\u5f0f\u7684\u60f3\u6cd5\u5c31\u662f\u5728\u8fd9\u91cc\u6784\u601d\u51fa\u6765\u7684\u3002\n\u6700\u521d\u7684IEEE FP16\u5728\u8bbe\u8ba1\u65f6\u6ca1\u6709\u8003\u8651\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\uff0c\u5176\u52a8\u6001\u8303\u56f4\u592a\u7a84\u3002BFLOAT16\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u63d0\u4f9b\u4e0eFP32\u76f8\u540c\u7684\u52a8\u6001\u8303\u56f4\u3002\nbfloat16\u683c\u5f0f\u662f\u622a\u77ed\u7684IEEE754FP32\uff0c\u5141\u8bb8\u5feb\u901f\u8f6c\u6362\u4e3aIEEE754FP32\u6216\u4eceIEEE754FP32\u5feb\u901f\u8f6c\u6362\u3002\u5728\u8f6c\u6362\u4e3abfloat16\u683c\u5f0f\u65f6\uff0c\u6307\u6570\u4f4d\u88ab\u4fdd\u7559\uff0c\u800c\u6709\u6548\u4f4d\u57df\u53ef\u4ee5\u901a\u8fc7\u622a\u65ad\u6765\u51cf\u5c11\u3002\n\u73b0\u5728\u4f3c\u4e4e\u6b63\u5728\u53d6\u4ee3FP16\u3002\u4e0e\u901a\u5e38\u9700\u8981\u901a\u8fc7\u635f\u8017\u7f29\u653e\u7b49\u6280\u672f\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u7684FP16\u4e0d\u540c\uff0cBF16\u5728\u8bad\u7ec3\u548c\u8fd0\u884c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u65f6\u51e0\u4e4e\u662fFP32\u7684\u4e34\u65f6\u66ff\u4ee3\u54c1\u3002\nCPU\uff1a\u91c7\u7528AVX-512 BF16\u6269\u5c55\u3001ARMv8-A\u7684\u73b0\u4ee3\u82f1\u7279\u5c14\u81f3\u5f3ax86(\u5e93\u73c0\u6e56\u5fae\u4f53\u7cfb\u7ed3\u6784)\u652f\u6301\u3002\nGPU\uff1a\u5728NVIDIA A100\u4e2d\u652f\u6301(\u7b2c\u4e00\u4e2a\u652f\u6301\u7684)\uff0c\u5c06\u5728\u672a\u6765\u7684AMD GPU\u4e2d\u652f\u6301\u3002\nASIC\uff1a\u5728Google TPU v2/v3(\u4e0d\u662fv1\uff01)\u4e2d\u652f\u6301\uff0c\u5728Intel Nervana NNP(\u73b0\u5df2\u53d6\u6d88)\u4e2d\u652f\u6301\u3002\nFlexpoint\u662f\u7531Intel\u7684Nervana\u5f00\u53d1\u7684\u4e00\u79cd\u7d27\u51d1\u6570\u5b57\u7f16\u7801\u683c\u5f0f\uff0c\u7528\u4e8e\u8868\u793a\u6807\u51c6\u6d6e\u70b9\u503c\u3002\u540e\u6765\uff0cNervana\u6539\u7528BFLOAT\uff0c\u7136\u540e\uff0c\u751a\u81f3\u66f4\u665a\uff0c\u82f1\u7279\u5c14\u53d6\u6d88\u4e86Nervana\u5904\u7406\u5668\u3002\nFlexpoint\u901a\u8fc7\u62c6\u5206\u5c3e\u6570\u548c\u6307\u6570\u90e8\u5206\u7ed3\u5408\u4e86\u5b9a\u70b9\u548c\u6d6e\u70b9\u7684\u4f18\u70b9\uff0c\u6307\u6570\u90e8\u5206\u5728\u6240\u6709\u7b97\u672f\u6267\u884c\u5143\u7d20\u4e4b\u95f4\u5171\u4eab\u3002\u901a\u8fc7\u4ec5\u4f20\u9012\u6574\u6570\u503c\uff0c\u964d\u4f4e\u4e86\u5185\u5b58\u548c\u5e26\u5bbd\u8981\u6c42\u3002\u6b64\u5916\uff0c\u8fd9\u8fd8\u964d\u4f4e\u4e86\u786c\u4ef6\u590d\u6742\u6027\uff0c\u964d\u4f4e\u4e86\u529f\u8017\u548c\u9762\u79ef\u8981\u6c42\u3002\nTF32\u4f7f\u7528\u4e0e\u534a\u7cbe\u5ea6(FP16)\u6570\u5b66\u76f8\u540c\u768410\u4f4d\u5c3e\u6570\uff0c\u663e\u793a\u51fa\u5bf9\u4e8eAI\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7cbe\u5ea6\u8981\u6c42\u6709\u8db3\u591f\u7684\u4f59\u91cf\u3002TF32\u91c7\u7528\u4e0eFP32\u76f8\u540c\u76848\u4f4d\u6307\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u652f\u6301\u76f8\u540c\u7684\u6570\u503c\u8303\u56f4\u3002\u56e0\u6b64\uff0cTF32\u5177\u6709\uff1a\nTF32\u7684\u4f18\u70b9\u662f\u683c\u5f0f\u4e0eFP32\u76f8\u540c\u3002\u4f7f\u7528TF32\u8ba1\u7b97\u5185\u79ef\u65f6\uff0c\u8f93\u5165\u64cd\u4f5c\u6570\u7684\u5c3e\u6570\u4ece23\u4f4d\u56db\u820d\u4e94\u5165\u523010\u4f4d\u3002\u56db\u820d\u4e94\u5165\u7684\u64cd\u4f5c\u6570\u88ab\u7cbe\u786e\u76f8\u4e58\uff0c\u5e76\u5728\u666e\u901aFP32\u4e2d\u7d2f\u52a0\u3002\nTF32\u5f20\u91cf\u5185\u6838\u5bf9FP32\u8f93\u5165\u8fdb\u884c\u64cd\u4f5c\uff0c\u65e0\u9700\u66f4\u6539\u4ee3\u7801\u5373\u53ef\u5728FP32\u4e2d\u4ea7\u751f\u7ed3\u679c\u3002\u975e\u77e9\u9635\u8fd0\u7b97\u7ee7\u7eed\u4f7f\u7528FP32\u3002\u8fd9\u4e3a\u5728DL\u6846\u67b6\u548cHPC\u4e2d\u52a0\u901fFP32\u8f93\u5165/\u8f93\u51fa\u6570\u636e\u63d0\u4f9b\u4e86\u4e00\u6761\u7b80\u5355\u7684\u9014\u5f84\u3002\nTF32\u7684\u6700\u5927\u4f18\u52bf\u5728\u4e8e\uff0c\u53ea\u6709\u5728\u6700\u6df1\u5c42(\u5373CUDA\u7f16\u8bd1\u5668\u5185\u90e8)\u624d\u9700\u8981\u7f16\u8bd1\u5668\u652f\u6301\u3002\u5176\u4f59\u4ee3\u7801\u53ea\u770b\u5230\u7cbe\u5ea6\u8f83\u4f4e\u7684FP32\uff0c\u4f46\u52a8\u6001\u8303\u56f4\u76f8\u540c\u3002\u5229\u7528TF32\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u8c03\u6574\u5e93\u7684\u8c03\u7528\u8005\u4ee5\u6307\u793aTF32\u662f\u5426\u6b63\u5e38\u7684\u95ee\u9898\u3002TF32\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u4ee5\u5229\u7528\u5f20\u91cf\u6838\u5fc3\u901f\u5ea6\u7684\u4e1c\u897f\u800c\u5b58\u5728\uff0c\u800c\u4e0d\u9700\u8981\u505a\u592a\u591a\u7684\u5de5\u4f5c\u3002\nFP16\u548cBFLOAT16\u7b49\u683c\u5f0f\u9700\u8981\u66f4\u591a\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5b83\u4eec\u6d89\u53ca\u4e0d\u540c\u7684\u4f4d\u5e03\u5c40\u3002\u4f7f\u7528\u8fd9\u4e9b\u683c\u5f0f\u662f\u503c\u5f97\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u51cf\u5c11\u4e86\u5185\u5b58\u5e26\u5bbd\uff0c\u56e0\u6b64\u5141\u8bb8\u66f4\u5feb\u7684\u6267\u884c\u3002(\u6765\u6e90)", "note_en": "There are many floating point formats you can hear about in the context of deep learning. Here is a summary of what are they about and where are they used.\n  A 80-bit  IEEE 754  extended precision binary floating-point format typically known in x86 implementation started from the Intel 8087 math co-processor (good old times when CPUs did not support floating point computations and FPU was a separate co-processor). In this implementation it contains:\n       Many (but not all) C/C++ implementations implement  long double using this 80-bit (10 bytes) format.\n  Natively supported by x86 CPUs. By default, the x87 processors all use 80-bit double-extended precision internally.\n           Most GPUs, especially gaming ones including RTX series, have severely limited FP64 performance (usually 1/32 of FP32 performance instead of 1/2, see the  post on GPUs for more details).\n Among recent GPUs with unrestricted FP64 support are  GP100/102/104 in Tesla P100/P40/P4 and Quadro GP100,  GV100 in Tesla V100/Quadro GV100/Titan V and  GA100 in  recently announced A100 (interestingly, the new Ampere architecture has  3rd generation tensor cores with FP64 support, the A100 Tensor Core includes new IEEE-compliant FP64 processing that delivers 2.5x the FP64 performance of V100).\n  The format that was the workhorse of deep learning for a long time. Another IEEE 754 format, the  single-precision floating-point with:\n     The standard type for neural network computations for a long time. Weights, activations and other values in neural networks have long been represented in FP32 by default.\n         Range: ~5.96e\u22128 (6.10e\u22125) \u2026 65504 with 4 significant decimal digits precision.\n  There is a trend in DL towards using FP16  instead of FP32 because lower precision calculations seem to be not critical for neural networks. Additional precision gives nothing, while being slower, takes more memory and reduces speed of communication.\n  Currently not in C/C++ standard (but there is a  short float  proposal).  Some C/C++ systems support  __fp16 type. Otherwise, can be used with  special libraries.\n  Was poorly supported on older gaming GPUs (with 1/64 performance of FP32, see the  post on GPUs for more details). Right now well-supported on modern GPUs, e.g. NVIDIA RTX series.\n    Another 16-bit format originally developed by Google is called \u201c Brain Floating Point Format\u201d, or \u201cbfloat16\u201d for short. The name flows from \u201cGoogle Brain\u201d, which is an artificial intelligence research group at Google where the idea for this format was conceived.\n The original IEEE FP16 was not designed with deep learning applications in mind, its dynamic range is too narrow. BFLOAT16 solves this, providing dynamic range identical to that of FP32.\n    The bfloat16 format, being a truncated IEEE 754 FP32, allows for fast conversion to and from an IEEE 754 FP32. In conversion to the bfloat16 format, the exponent bits are preserved while the significand field can be reduced by truncation.\n    Seems to be replacing FP16 right now. Unlike FP16, which typically requires special handling via techniques such as loss scaling, BF16 comes close to being a drop-in replacement for FP32 when training and running deep neural networks.\n    CPU: Supported in modern Intel Xeon x86 ( Cooper Lake microarchitecture) with  AVX-512 BF16 extensions,  ARMv8-A.\n GPU: Supported in  NVIDIA A100 (first one to support), will be supported in  future AMD GPUs.\n ASIC: Supported in Google TPU v2/v3 (not v1!), was supported in Intel  Nervana NNP ( now cancelled).\n    Flexpoint is a compact number encoding format developed by Intel\u2019s Nervana used to represent standard floating point values. Later, Nervana switched to BFLOAT, then, even later, Intel cancelled Nervana processors.\n Flexpoint combines the advantages of fixed point and floating point by splitting up the mantissa and the exponent part which is shared across all arithmetic execution elements. By only passing the integer value, both memory and bandwidth requirements are reduced. Additionally, this lowers hardware complexity, lowering both power and area requirements.\n        TF32 uses the same 10-bit mantissa as the half-precision (FP16) math, shown to have more than sufficient margin for the precision requirements of AI workloads. And TF32 adopts the same 8-bit exponent as FP32 so it can support the same numeric range. So, TF32 has:\n   The advantage of TF32 is that the format is the same as FP32. When computing inner products with TF32, the input operands have their mantissas rounded from 23 bits to 10 bits. The rounded operands are multiplied exactly, and accumulated in normal FP32.\n TF32 Tensor Cores operate on FP32 inputs and produce results in FP32 with no code change required. Non-matrix operations continue to use FP32. This provides an easy path to accelerate FP32 input/output data in DL frameworks and HPC.\n   The big advantage of TF32 is that compiler support is required only at the deepest levels, i.e. inside the CUDA compiler. The rest of code just sees FP32 with less precision, but the same dynamic range. Exploiting TF32 will largely be a matter of tweaking callers of libraries to indicate whether TF32 is okay. TF32 exists as something that can be quickly plugged in to exploit Tensor Core speed without much work.\n Formats such as FP16 and BFLOAT16 require more work, since they involve different bit layouts. It is worth putting in efforts into using these formats, since they reduce memory bandwidth and consequently permit even faster execution. ( source)", "posttime": "2020-05-17 11:12:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "fp32,\u683c\u5f0f", "title": "FP64\u3001FP32\u3001FP16\u3001BFLOAT16\u3001TF32\u548c\u52a8\u7269\u56ed\u7684\u5176\u4ed6\u6210\u5458", "title_en": "FP64, FP32, FP16, BFLOAT16, TF32, and Other Members of the Zoo", "transed": 1, "url": "https://medium.com/@moocaholic/fp64-fp32-fp16-bfloat16-tf32-and-other-members-of-the-zoo-a1ca7897d407", "via": "", "real_tags": ["fp32", "\u683c\u5f0f"]}, {"category": "", "categoryclass": "", "imagename": "359999fd03d2aeb7e461eaf6c8837acc.jpg", "infoid": 1002491, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "5\u670815\u65e5(\u5408\u4f17\u56fd\u9645\u793e)--\u6839\u636e\u4e00\u9879\u65b0\u7684\u7814\u7a76\uff0c\u79d1\u5b66\u5bb6\u4eec\u89c2\u5bdf\u5230\u4e86\u4e00\u4e2a\u51fa\u4eba\u610f\u6599\u7684\u5927\u91cf\u5b50\u7cfb\u7edf\uff0c\u5b83\u5177\u670915\u4e07\u4ebf\u4e2a\u7ea0\u7f20\u7684\u539f\u5b50\u3002\n\u91cf\u5b50\u7ea0\u7f20\u63cf\u8ff0\u4e86\u72ec\u7acb\u7c92\u5b50\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u8fd9\u4e00\u73b0\u8c61\u662f\u91cf\u5b50\u8ba1\u7b97\u3001\u91cf\u5b50\u52a0\u5bc6\u548c\u5176\u4ed6\u91cf\u5b50\u6280\u672f\u524d\u666f\u7684\u5173\u952e\u3002\n\u901a\u5e38\uff0c\u91cf\u5b50\u7ea0\u7f20\u4ee5\u4e00\u5bf9\u8026\u5408\u7684\u539f\u5b50\u6216\u7535\u5b50\u4e3a\u7279\u5f81\u3002\u7ea0\u7f20\u6001\u662f\u76f8\u5f53\u5fae\u5999\u7684\u3002\u4e3a\u4e86\u786e\u4fdd\u7ea0\u7f20\u7c92\u5b50\u4e0d\u53d7\u5e72\u6270\uff0c\u8bb8\u591a\u91cf\u5b50\u7cfb\u7edf\u5fc5\u987b\u88ab\u9694\u79bb\uff0c\u5e76\u4fdd\u6301\u5728\u63a5\u8fd1\u7edd\u5bf9\u96f6\u5ea6\u7684\u6e29\u5ea6\uff0c\u8fd9\u9650\u5236\u4e86\u5b83\u4eec\u7684\u5b9e\u9645\u751f\u5b58\u80fd\u529b\u3002\n\u5728\u5468\u4e94\u53d1\u8868\u5728\u201c\u81ea\u7136\u901a\u8baf\u201d(Nature Communications)\u4e0a\u7684\u8fd9\u9879\u65b0\u7814\u7a76\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u5c06\u4e00\u56e2\u6c14\u4f53\u539f\u5b50\u4e91\u52a0\u70ed\u5230450\u5f00\u5c14\u6587\u4ee5\u4e0a\u7684\u6e29\u5ea6\u3002\u539f\u5b50\u8fdc\u4e0d\u662f\u5b64\u7acb\u7684\u3002\u6bcf\u9694\u51e0\u5fae\u79d2\uff0c\u6570\u5341\u4ebf\u4e2a\u6c14\u4f53\u539f\u5b50\u5c31\u4f1a\u53d1\u751f\u78b0\u649e\uff0c\u5bfc\u81f4\u5b83\u4eec\u7684\u7535\u5b50\u96f6\u661f\u5730\u5411\u4e0d\u540c\u65b9\u5411\u65cb\u8f6c\u3002\n\u7269\u7406\u5b66\u5bb6\u7528\u6fc0\u5149\u6d4b\u91cf\u70bd\u70ed\u800c\u6df7\u4e71\u7684\u6c14\u4f53\u539f\u5b50\u4e91\u7684\u78c1\u5316\u5f3a\u5ea6\u3002\u901a\u8fc7\u6d4b\u91cf\u7531\u7535\u5b50\u81ea\u65cb\u6a21\u5f0f\u5f15\u8d77\u7684\u78c1\u5316\u5f3a\u5ea6\uff0c\u79d1\u5b66\u5bb6\u4eec\u80fd\u591f\u68c0\u6d4b\u5230\u6c14\u4f53\u539f\u5b50\u4e4b\u95f4\u7684\u8026\u5408\u3002\u79d1\u5b66\u5bb6\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\u4e86\u5927\u7ea615\u4e07\u4ebf\u4e2a\u539f\u5b50\u7684\u7ea0\u7f20--\u603b\u5171\u6bd4\u4e4b\u524d\u7684\u7ea0\u7f20\u8bb0\u5f55\u5927\u4e86100\u500d\u3002\n\u5982\u679c\u6211\u4eec\u505c\u6b62\u6d4b\u91cf\uff0c\u7ea0\u7f20\u5c06\u4fdd\u6301\u5927\u7ea61\u6beb\u79d2\uff0c\u8fd9\u610f\u5473\u7740\u65b0\u4e00\u627915\u4e07\u4ebf\u4e2a\u539f\u5b50\u6bcf\u79d2\u88ab\u7ea0\u7f201000\u6b21\uff0c\u897f\u73ed\u7259\u5149\u5b50\u79d1\u5b66\u7814\u7a76\u6240\u7814\u7a76\u5458\u3001\u8be5\u7814\u7a76\u7684\u7b2c\u4e00\u4f5c\u8005\u8d3e\u521a\u5728\u4e00\u4efd\u65b0\u95fb\u7a3f\u4e2d\u8bf4\u3002\n\u4f60\u4e00\u5b9a\u8ba4\u4e3a1\u6beb\u79d2\u5bf9\u539f\u5b50\u6765\u8bf4\u662f\u5f88\u957f\u7684\u65f6\u95f4\uff0c\u8db3\u4ee5\u53d1\u751f\u5927\u7ea650\u6b21\u968f\u673a\u78b0\u649e\uff0c\u5b54\u4ee4\u8f89\u8bf4\u3002\u8fd9\u6e05\u695a\u5730\u8868\u660e\u7ea0\u7f20\u4e0d\u4f1a\u88ab\u8fd9\u4e9b\u968f\u673a\u4e8b\u4ef6\u7834\u574f\u3002\u8fd9\u53ef\u80fd\u662f\u8fd9\u9879\u5de5\u4f5c\u6700\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ed3\u679c\u3002\n\u5927\u89c4\u6a21\u63a2\u6d4b\u91cf\u5b50\u7ea0\u7f20\u7684\u80fd\u529b\u53ef\u4ee5\u5e2e\u52a9\u79d1\u5b66\u5bb6\u6539\u8fdb\u8d85\u7075\u654f\u78c1\u573a\u63a2\u6d4b\u6280\u672f\u3002\n\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u5728\u7814\u7a76\u5927\u8111\u78c1\u4fe1\u53f7\u7684\u8111\u78c1\u56fe\u9886\u57df\u4e2d\u4f7f\u7528\u4e86\u5177\u6709\u70ed\u7684\u3001\u9ad8\u5bc6\u5ea6\u539f\u5b50\u6c14\u4f53\u7684\u4f20\u611f\u5668\u3002\u7ea0\u7f20\u7684\u52a0\u5165\u53ef\u4ee5\u5e2e\u52a9\u79d1\u5b66\u5bb6\u4ee5\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u7814\u7a76\u5927\u8111\u7684\u78c1\u4fe1\u53f7\u3002\nIFCO\u7684\u5408\u8457\u8005\u6469\u6839\u00b7\u7c73\u5207\u5c14(Morgan Mitchell)\u8868\u793a\uff0c\u8fd9\u4e00\u7ed3\u679c\u4ee4\u4eba\u60ca\u8bb6\uff0c\u771f\u6b63\u504f\u79bb\u4e86\u6bcf\u4e2a\u4eba\u5bf9\u7ea0\u7f20\u7684\u9884\u671f\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u79cd\u5de8\u5927\u7684\u7ea0\u7f20\u6001\u5c06\u5728\u4ece\u5927\u8111\u6210\u50cf\u5230\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u518d\u5230\u6697\u7269\u8d28\u641c\u7d22\u7684\u5404\u79cd\u5e94\u7528\u4e2d\u5e26\u6765\u66f4\u597d\u7684\u4f20\u611f\u5668\u6027\u80fd\u3002", "note_en": "May 15 (UPI) -- Scientists have observed an unexpectedly large quantum system featuring 15 trillion entangled atoms, according to a new study.\n Quantum entanglement describes the connection between separate particles. The phenomenon is key to the promise of quantum computing, quantum encryption and other quantum technologies.\n Usually, quantum entanglement features a pair of coupled atoms or electrons. Entangled states are quite delicate. To ensure entangled particles remain undisturbed, many quantum systems must be isolated and kept at temperatures approaching absolute zero, limiting their practical viability.\n For the new study,  published Friday in Nature Communications, researchers heated a cloud of gas atoms to temperatures upwards of 450 Kelvin. The atoms were far from isolated. Every few microseconds, billions of gas atoms would collide, causing their electrons to spin sporadically in different directions.\n Physicists used a laser to measure the magnetization of the hot and chaotic cloud of gas atoms. By measuring magnetization, caused by electron spin patterns, scientists were able to detect coupling between the gas atoms. Scientists were surprised to detect entanglement of some 15 trillion atoms -- a total 100 times greater than the previous entanglement record.\n &#34;If we stop the measurement, the entanglement remains for about one millisecond, which means that 1,000 times per second a new batch of 15 trillion atoms is being entangled,&#34; first study author Jia Kong, researcher at the Institute of Photonic Sciences in Spain, said in a news release.\n &#34;And you must think that one millisecond is a very long time for the atoms, long enough for about fifty random collisions to occur,&#34; Kong said. &#34;This clearly shows that the entanglement is not destroyed by these random events. This is maybe the most surprising result of the work.&#34;\n The ability to detect quantum entanglement on large scales could help scientists improve ultra-sensitive magnetic field detection technologies.\n Researchers already use sensors featuring hot, high-density atomic gases in the field of magnetoencephalography, the study of the brain&#39;s magnetic signals. The addition of entanglement could help scientists study the magnetic signals of the brain at higher resolutions.\n &#34;This result is surprising, a real departure from what everyone expects of entanglement,&#34; said co-author Morgan Mitchell, professor at IFCO. &#34;We hope that this kind of giant entangled state will lead to better sensor performance in applications ranging from brain imaging to self-driving cars to searches for dark matter.&#34;", "posttime": "2020-05-17 11:11:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u539f\u5b50,trillion,\u7ea0\u7f20", "title": "15\u4e07\u4ebf\u4e2a\u539f\u5b50\u7684\u7ea0\u7f20", "title_en": "Entangling 15 trillion atoms", "transed": 1, "url": "https://www.upi.com/Science_News/2020/05/15/Physicists-observe-quantum-entanglement-of-15-trillion-atoms/9931589541660/", "via": "", "real_tags": ["\u539f\u5b50", "trillion", "\u7ea0\u7f20"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002489, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4e0e\u4e3b\u8981\u996e\u6599\u5236\u9020\u5546\u5408\u4f5c\u5c06\u53ef\u6301\u7eed\u79cd\u690d\u7684\u4f5c\u7269\u8f6c\u5316\u4e3a\u5851\u6599\u7684\u65b0\u8ba1\u5212\uff0c\u5564\u9152\u548c\u8f6f\u996e\u6599\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u4ece\u201c\u5168\u690d\u7269\u201d\u74f6\u5b50\u91cc\u555c\u996e\u51fa\u6765\u3002\n\u8377\u5170\u7684\u4e00\u5bb6\u751f\u7269\u5316\u5de5\u516c\u53f8\u5e0c\u671b\u542f\u52a8\u5bf9\u4e00\u4e2a\u5f00\u521b\u6027\u9879\u76ee\u7684\u6295\u8d44\uff0c\u8be5\u9879\u76ee\u5e0c\u671b\u7528\u690d\u7269\u7cd6\u800c\u4e0d\u662f\u5316\u77f3\u71c3\u6599\u5236\u9020\u5851\u6599\u3002\n\u8fd9\u4e9b\u7531\u53ef\u518d\u751f\u5316\u5b66\u54c1\u516c\u53f8Avantium\u8bbe\u8ba1\u7684\u8ba1\u5212\u5df2\u7ecf\u8d62\u5f97\u4e86\u5564\u9152\u5236\u9020\u5546\u5609\u58eb\u4f2f(Carlsberg)\u7684\u652f\u6301\uff0c\u5609\u58eb\u4f2f\u5e0c\u671b\u7528\u5185\u5c42\u690d\u7269\u5851\u6599\u886c\u91cc\u7684\u7eb8\u677f\u74f6\u5b50\u51fa\u552e\u76ae\u5c14\u65af\u7eb3\u3002\nAvantium\u7684\u9996\u5e2d\u6267\u884c\u5b98\u6c64\u59c6\u00b7\u8303\u00b7\u963f\u80af(Tom Van Aken)\u8868\u793a\uff0c\u4ed6\u5e0c\u671b\u5728\u4eca\u5e74\u5e74\u5e95\u4e4b\u524d\u6279\u51c6\u5bf9\u4f4d\u4e8e\u8377\u5170\u7684\u4e16\u754c\u9886\u5148\u7684\u751f\u7269\u5851\u6599\u5de5\u5382\u7684\u91cd\u5927\u6295\u8d44\u3002\u5c3d\u7ba1\u51a0\u72b6\u75c5\u6bd2\u88ab\u5c01\u9501\uff0c\u4f46\u8be5\u9879\u76ee\u4ecd\u5728\u8f68\u9053\u4e0a\u8fdb\u884c\uff0c\u9884\u8ba1\u5c06\u5728\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\u516c\u5e03\u4e0e\u5176\u4ed6\u98df\u54c1\u548c\u996e\u6599\u516c\u53f8\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u3002\n\u8be5\u9879\u76ee\u5f97\u5230\u4e86\u53ef\u53e3\u53ef\u4e50(Coca-Cola)\u548c\u8fbe\u80fd(Danone)\u7684\u652f\u6301\uff0c\u8fd9\u4e24\u5bb6\u516c\u53f8\u5e0c\u671b\u901a\u8fc7\u89e3\u51b3\u5851\u6599\u6c61\u67d3\u548c\u5bf9\u5316\u77f3\u71c3\u6599\u7684\u4f9d\u8d56\u9020\u6210\u7684\u73af\u5883\u7834\u574f\uff0c\u786e\u4fdd\u5176\u74f6\u88c5\u4ea7\u54c1\u7684\u672a\u6765\u3002\n\u5168\u7403\u6bcf\u5e74\u7ea6\u67093\u4ebf\u5428\u5851\u6599\u662f\u7531\u5316\u77f3\u71c3\u6599\u5236\u6210\u7684\uff0c\u8fd9\u662f\u6c14\u5019\u5371\u673a\u7684\u4e3b\u8981\u8d21\u732e\u8005\u3002\u5176\u4e2d\u5927\u90e8\u5206\u6ca1\u6709\u56de\u6536\u5229\u7528\uff0c\u52a9\u957f\u4e86\u4e16\u754c\u6d77\u6d0b\u4e2d\u5fae\u5851\u6599\u7684\u7978\u5bb3\u3002\u5fae\u5851\u6599\u53ef\u80fd\u9700\u8981\u6570\u767e\u5e74\u624d\u80fd\u5b8c\u5168\u5206\u89e3\u3002\nVan Aken\u8bf4\uff1a\u201c\u8fd9\u79cd\u5851\u6599\u5177\u6709\u975e\u5e38\u5438\u5f15\u4eba\u7684\u53ef\u6301\u7eed\u6027\u8bc1\u4e66\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f7f\u7528\u5316\u77f3\u71c3\u6599\uff0c\u800c\u4e14\u53ef\u4ee5\u56de\u6536--\u4f46\u5b83\u5728\u81ea\u7136\u754c\u4e2d\u7684\u964d\u89e3\u901f\u5ea6\u4e5f\u6bd4\u666e\u901a\u5851\u6599\u5feb\u5f97\u591a\u3002\u201d\nAvantium\u7684\u690d\u7269\u5851\u6599\u88ab\u8bbe\u8ba1\u6210\u5177\u6709\u8db3\u591f\u7684\u5f39\u6027\u6765\u5bb9\u7eb3\u78b3\u9178\u76d0\u996e\u6599\u3002\u8bd5\u9a8c\u8868\u660e\uff0c\u4f7f\u7528\u5806\u80a5\u5668\uff0c\u690d\u7269\u5851\u6599\u53ef\u4ee5\u5728\u4e00\u5e74\u5185\u5206\u89e3\uff0c\u5982\u679c\u653e\u5728\u6b63\u5e38\u7684\u6237\u5916\u6761\u4ef6\u4e0b\uff0c\u5206\u89e3\u65f6\u95f4\u4f1a\u66f4\u957f\u51e0\u5e74\u3002\u4f46\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u5e94\u8be5\u88ab\u56de\u6536\u5229\u7528\uff0cVan Aken\u8bf4\u3002\n\u8fd9\u5bb6\u751f\u7269\u70bc\u6cb9\u5382\u8ba1\u5212\u5c06\u53ef\u6301\u7eed\u7684\u690d\u7269\u7cd6\u5206\u89e3\u6210\u7b80\u5355\u7684\u5316\u5b66\u7ed3\u6784\uff0c\u7136\u540e\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\uff0c\u5f62\u6210\u4e00\u79cd\u65b0\u7684\u690d\u7269\u6027\u5851\u6599-\u52302023\u5e74\uff0c\u8fd9\u79cd\u5851\u6599\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u8d85\u5e02\u7684\u8d27\u67b6\u4e0a\u3002\n\u8fd9\u4e2a\u63a2\u8def\u8005\u9879\u76ee\u6700\u521d\u6bcf\u5e74\u5c06\u4f7f\u7528\u7389\u7c73\u3001\u5c0f\u9ea6\u6216\u751c\u83dc\u4e2d\u7684\u7cd6\u5236\u90205000\u5428\u5851\u6599\u3002\u7136\u800c\uff0cAvantium\u9884\u8ba1\uff0c\u968f\u7740\u5bf9\u53ef\u518d\u751f\u5851\u6599\u7684\u9700\u6c42\u6500\u5347\uff0c\u5176\u4ea7\u91cf\u5c06\u4f1a\u589e\u957f\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cAvantium\u8ba1\u5212\u4f7f\u7528\u6765\u81ea\u53ef\u6301\u7eed\u6765\u6e90\u7684\u751f\u7269\u5783\u573e\u7684\u690d\u7269\u7cd6\uff0c\u8fd9\u6837\u690d\u7269\u5851\u6599\u7684\u5174\u8d77\u5c31\u4e0d\u4f1a\u5f71\u54cd\u5168\u7403\u98df\u54c1\u4f9b\u5e94\u94fe\u3002", "note_en": "Beer and soft drinks could soon be sipped from \u201call-plant\u201d bottles under new plans to turn sustainably grown crops into plastic in partnership with major beverage makers.\n A biochemicals company in the Netherlands hopes to kickstart investment in a pioneering project that hopes to make plastics from plant sugars rather than fossil fuels.\n The plans, devised by renewable chemicals company Avantium, have already won the support of  beer-maker Carlsberg, which hopes to sell its pilsner in a cardboard bottle lined with an inner layer of plant plastic.\n Avantium\u2019s chief executive, Tom van Aken, says he hopes to greenlight a major investment in the world-leading bioplastics plant in the Netherlands by the end of the year. The project, which remains on track despite the coronavirus lockdown, is set to reveal partnerships with other food and drink companies later in the summer.\n  The project has the backing of Coca-Cola and Danone, which hope to secure the future of their bottled products by tackling the environmental damage caused by  plastic pollution and a reliance on fossil fuels.\n Globally around 300 million tonnes of plastic is made from fossil fuels every year, which is a major contributor to the climate crisis. Most of this is not recycled and contributes  to the scourge of microplastics in the world\u2019s oceans. Microplastics can take hundreds of years to decompose completely.\n \u201cThis plastic has very attractive sustainability credentials because it uses no fossil fuels, and can be recycled \u2013 but would also degrade in nature much faster than normal plastics do,\u201d says Van Aken.\n Avantium\u2019s plant plastic is designed to be resilient enough to contain carbonate drinks. Trials have shown that the plant plastic would decompose in one year using a composter, and a few years longer if left in normal outdoor conditions. But ideally, it should be recycled, said Van Aken.\n The bio-refinery plans to break down sustainable plant sugars into simple chemical structures that can then be rearranged to form a new plant-based plastic \u2013 which could appear on supermarket shelves by 2023.\n The path-finder project will initially make a modest 5,000 tonnes of plastic every year using sugars from corn, wheat or beets. However, Avantium expects its production to grow as demand for renewable plastics climbs.\n In time, Avantium plans to use plant sugars from sustainable sourced biowaste so that the rise of plant plastic does not affect the global food supply chain.", "posttime": "2020-05-17 10:40:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5851\u6599,based", "title": "\u5851\u6599\u7684\u7ec8\u7ed3\uff1f\u65b0\u7684\u690d\u7269\u6027\u74f6\u5b50\u5c06\u5728\u4e00\u5e74\u5185\u964d\u89e3", "title_en": "The end of plastic? New plant-based bottles will degrade in a year", "transed": 1, "url": "https://www.theguardian.com/environment/2020/may/16/the-end-of-plastic-new-plant-based-bottles-will-degrade-in-a-year", "via": "", "real_tags": ["\u5851\u6599", "based"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002488, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u5185\u5bb9\u6ce8\u91ca\uff1a\u5728\u8fd9\u4e2a\u535a\u5ba2\u4e0a\uff0c\u6211\u901a\u5e38\u4f1a\u8bd5\u7740\u7a0d\u5fae\u63a7\u5236\u4e00\u4e0b\u6211\u5929\u751f\u7684\u4eb5\u6e0e\u7a0b\u5ea6\u3002\u6211\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8fd9\u6837\u505a)\u3002\n\u6211\u5199\u5047\u8bf4\u7684\u4e3b\u8981\u539f\u56e0\u662f\u8981\u6bc1\u6389\u5dee\u52b2\u7684\u8f6f\u4ef6\u3002\u4e00\u5207\u90fd\u5f88\u7cdf\u7cd5\uff0c\u6211\u5e0c\u671b\u5b83\u4e0d\u90a3\u4e48\u53ef\u6015\u3002\n\u4f46\u662f\uff0c\u4f60\u4f5c\u4e3a\u9ed1\u5ba2\u629b\u51fa\u7684\u90a3\u4e2a\u968f\u673a\u4ee3\u7801\uff0c\u5f53\u5b83\u505a\u4e86\u4f60\u9700\u8981\u505a\u7684\u4e8b\u60c5\u65f6\u5c31\u505c\u6b62\u4e86\uff0c\u628a\u5b83\u6254\u5230\u4e86pypi\u4e0a\uff0c\u7136\u540e\u53c8\u5ffd\u7565\u4e86\u5b83\uff1f\n\u5b8c\u5168\u6ca1\u95ee\u9898\u3002\u8c22\u8c22\u4f60\u5199\u4e86\u8fd9\u5c01\u4fe1\u3002\u8fd9\u4e2a\u4e16\u754c\u56e0\u4e3a\u4f60\u8fd9\u6837\u505a\u800c\u7a0d\u5fae\u597d\u4e86\u4e00\u4e9b\uff0c\u4f60\u6ca1\u6709\u671f\u671b\u201c\u505a\u5f97\u66f4\u597d\u201d\u7684\u8d1f\u62c5\u3002\u8fd9\u6bd5\u7adf\u4e0d\u662f\u4e00\u4efd\u5de5\u4f5c\uff0c\u4e0d\u662f\u5417\uff1f\u6211\u4eec\u4e0d\u662f\u4ed8\u94b1\u8ba9\u4f60\u8fd9\u4e48\u505a\u7684\u3002\n\u6211\u81ea\u6b3a\u6b3a\u4eba\u5730\u8ba4\u4e3a\uff0c\u5173\u4e8e\u5047\u8bbe\uff0c\u6211\u53ef\u4ee5\u5408\u6cd5\u5730\u5ba3\u79f0\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5b83\u662f\u9ad8\u8d28\u91cf\u7684\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eba\u4eec\u57281.0\u7248\u672c\u4e2d\u62a5\u544a\u7684\u6700\u4e25\u91cd\u7684\u9519\u8bef\u662f\uff0c\u5f53\u7ed9\u5b9a\u9519\u8bef\u7684\u53c2\u6570\u65f6\uff0c\u5047\u8bbe\u4ece\u6b63\u786e\u7684\u4f4d\u7f6e\u629b\u51fa\u5177\u6709\u6b63\u786e\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5e76\u663e\u793a\u9519\u8bef\u7684\u9519\u8bef\u6d88\u606f\u3002\u5047\u8bbe\u9002\u7528\u4e8eOSX\u3001Linux\u3001Windows\uff0c\u53ef\u80fd\u662f*BSD(\u6211\u542c\u8bf4\u8fc7SQLITE\u7684\u4e00\u4e9b\u6253\u5305\u95ee\u9898\uff0c\u4f46\u6b64\u540e\u5c31\u518d\u4e5f\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u4e00\u65e6\u8fd9\u4e9b\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u5b83\u5c31\u4f1a\u8d77\u4f5c\u7528)\u3001Python2.7\u30013.2-3.4\u3001CPython\u3001PyPy\u2026\u3002\u5b83\u6709100%\u7684\u5206\u652f\u673a\u6784\u8986\u76d6\u7387\uff0c\u6709\u6587\u6863\u8bb0\u5f55\uff0c\u7b49\u7b49\u3002\u57fa\u672c\u4e0a\uff0c\u5c31\u8d28\u91cf\u800c\u8a00\uff0c\u5047\u8bbe\u51e0\u4e4e\u6bcf\u4ef6\u4e8b\u90fd\u662f\u6b63\u786e\u7684\u3002\n\u6240\u4ee5\u6211\u5df2\u7ecf\u8bc1\u660e\u4e86\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\uff0c\u4f60\u4e5f\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u5bf9\u5417\uff1f\n\u4e0d\uff0c\u90a3\u662f\u80e1\u8bf4\u516b\u9053\u3002\u6211\u5728\u8fd9\u91cc\u544a\u8bc9\u4f60\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u505a\u8fc7\u514d\u8d39\u5236\u4f5c\u9ad8\u8d28\u91cf\u8f6f\u4ef6\u5de5\u4f5c\u7684\u4eba\uff0c\u4f60\u6ca1\u6709\u5fc5\u8981\u8fd9\u6837\u505a\uff0c\u4f60\u4e5f\u4e0d\u5e94\u8be5\u4e3a\u6ca1\u6709\u8fd9\u6837\u505a\u800c\u611f\u5230\u96be\u8fc7\u3002\n\u60f3\u77e5\u9053\u6211\u5728\u5047\u8bbe\u4e2d\u662f\u600e\u4e48\u505a\u5bf9\u7684\u5417\uff1f\u6211\u7684\u610f\u601d\u662f\uff0c\u5bf9\u7ec6\u8282\u548c\u9ad8\u6807\u51c6\u7684\u75f4\u8ff7\u6709\u6240\u5e2e\u52a9\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u4f46\u5b83\u4eec\u751a\u81f3\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u4e24\u4ef6\u4e8b\u662f\u6211\u505a\u51fa\u5047\u8bbe\u7684\u5173\u952e\u56e0\u7d20\uff0c\u8fd9\u5c31\u662f\u4eca\u5929\u7684\u8f6f\u4ef6\u8d28\u91cf\uff1a\n\u4eca\u5e74\uff0c\u6211\u628a800\u5c0f\u65f6\u7684\u5de5\u4f5c\u65f6\u95f4\u5b8c\u5168\u514d\u8d39\u5730\u653e\u5728\u4e86\u5047\u8bbe\u7684\u67d0\u4e2a\u5730\u65b9\u3002\u8fd9\u5c31\u662f\u8fbe\u5230\u8fd9\u79cd\u8d28\u91cf\u6c34\u5e73\u6240\u9700\u8981\u7684\u3002\n\u6211\u4e4b\u6240\u4ee5\u80fd\u8fd9\u6837\u505a\uff0c\u53ea\u662f\u56e0\u4e3a\u6211\u6709\u65f6\u95f4\u548c\u91d1\u94b1\u8fd9\u6837\u505a\u3002\u6211\u6709\u65f6\u95f4\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6211\u6709\u5f3a\u8feb\u75c7\uff0c\u6ca1\u6709\u5bb6\u5c5e\uff0c\u4e5f\u6ca1\u6709\u5de5\u4f5c\u3002\u6211\u53ea\u80fd\u56e0\u4e3a\u94b1\u800c\u6ca1\u6709\u5de5\u4f5c\u3002\u6211\u4e4b\u6240\u4ee5\u6709\u94b1\uff0c\u53ea\u662f\u56e0\u4e3a\u6211\u53bb\u5e74\u4e0b\u534a\u5e74\u7684\u5de5\u8d44\u662f\u6211\u4e60\u60ef\u7684\u4e24\u500d\uff0c\u751f\u6d3b\u8d39\u662f\u6211\u4e60\u60ef\u7684\u4e00\u534a\uff0c\u800c\u4e14\u592a\u6cae\u4e27\u4e86\uff0c\u4e0d\u80fd\u628a\u5b83\u82b1\u5728\u4efb\u4f55\u6709\u8da3\u7684\u4e8b\u60c5\u4e0a\u3002\n\u6211\u80fd\u5728\u4e0d\u5230800\u5c0f\u65f6\u7684\u65f6\u95f4\u91cc\u505a\u5047\u8bbe\u5417\uff1f\u53ef\u80fd\u5427\u3002\u4e0d\u8fc7\uff0c\u6211\u6000\u7591\u6211\u80fd\u5728\u4e0d\u5230400\u5929\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u5982\u679c\u671f\u671b\u6211\u80fd\u5728\u53ef\u884c\u7684\u6700\u77ed\u65f6\u95f4\u5185\u5b8c\u6210\u4efb\u4f55\u9879\u76ee\uff0c\u90a3\u5c31\u592a\u611a\u8822\u4e86\u3002\n\u4e0d\u8fc7\uff0c\u5047\u8bbe\u662f\u4e00\u4e2a\u5e9e\u5927\u800c\u590d\u6742\u7684\u9879\u76ee(\u5982\u679c\u5b83\u770b\u8d77\u6765\u4e0d\u50cf\uff0c\u90a3\u662f\u56e0\u4e3a\u8fd9800\u4e2a\u5c0f\u65f6\u4e2d\u7684\u5f88\u591a\u65f6\u95f4\u90fd\u82b1\u5728\u4e86\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u4e0a)\u3002\u5927\u591a\u6570\u9879\u76ee\u53ef\u80fd\u8981\u7b80\u5355\u4e00\u4e2a\u6570\u91cf\u7ea7\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e3a\u4e86\u751f\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\uff0c\u4f60\u53ea\u9700\u8981\u4f11\u606f\u4e24\u5468\uff0c\u5b9e\u9645\u4e0a\u662f\u514d\u8d39\u5de5\u4f5c\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u751f\u6d3b\u5728\u6587\u660e\u56fd\u5bb6\uff0c\u4f60\u7684\u5047\u671f\u6d25\u8d34\u51e0\u4e4e\u662f\u4f60\u5047\u671f\u6d25\u8d34\u7684\u4e00\u534a\uff0c\u5982\u679c\u4f60\u4f4f\u5728\u7f8e\u56fd\uff0c\u4f60\u7684\u5047\u671f\u6d25\u8d34\u53ef\u80fd\u4f1a\u8d85\u8fc7\u4f60\u7684\u5047\u671f\u6d25\u8d34\u3002\n\u4f60\u80fd\u5728\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u751f\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\uff0c\u53ea\u5728\u4f60\u7684\u7a7a\u95f2\u65f6\u95f4\u5de5\u4f5c\u5417\uff1f\u6211\u6000\u7591\u3002\u7a7a\u95f2\u65f6\u95f4\u5929\u751f\u6548\u7387\u8f83\u4f4e\u3002\u4f60\u7d2f\u4e86\uff0c\u5b83\u662f\u652f\u79bb\u7834\u788e\u7684\u3002\u4e00\u5929\u665a\u4e0a\uff0c\u4f60\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u8bd5\u56fe\u5f04\u6e05\u695a\u4e3a\u4ec0\u4e48\u4f60\u7684windows\u7248\u672c\u73b0\u5728\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684pip\uff0c\u7136\u540e\u6211\u731c\u4f60\u53ef\u4ee5\u518d\u82b1\u534a\u4e2a\u5c0f\u65f6\uff0c\u4f46\u4f60\u7684\u5fc3\u5e76\u4e0d\u662f\u771f\u7684\u5728\u91cc\u9762\uff0c\u4f60\u57fa\u672c\u4e0a\u6ca1\u6709\u65f6\u95f4\u597d\u597d\u5730\u6295\u5165\u5176\u4e2d\u3002\u8d28\u91cf\u7684\u95e8\u69db\u5f88\u9ad8\uff0c\u969c\u788d\u4e5f\u66f4\u9ad8\uff0c\u9664\u4e86\u6295\u5165\u65f6\u95f4\u4e4b\u5916\uff0c\u4f60\u771f\u7684\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u505a\u7684\u3002\n\u522b\u8bef\u4f1a\u6211\u7684\u610f\u601d\u3002\u5982\u679c\u60a8\u80fd\u82b1\u65f6\u95f4\uff0c\u6211\u5c06\u975e\u5e38\u611f\u8c22\u60a8\u3002\u6211\u53ea\u662f\u89c9\u5f97\u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\u4f60\u4e0d\u5e94\u8be5\u611f\u5230\u96be\u8fc7\u3002\n\u6ca1\u6709\u4e49\u52a1\u91ca\u653e\u52b3\u52a8\u529b\u3002\u4f60\u5728\u9879\u76ee\u4e0a\u514d\u8d39\u6295\u5165\u7684\u6bcf\u4e00\u4e2a\u5c0f\u65f6\u90fd\u662f\u9001\u7ed9\u4e16\u754c\u7684\u793c\u7269\u3002\u5982\u679c\u8fd9\u4e2a\u4e16\u754c\u56de\u6765\u5bf9\u4f60\u8bf4\u201c\u4f60\u662f\u4e2a\u574f\u4eba\uff0c\u56e0\u4e3a\u4f60\u4e0d\u652f\u6301\u8fd9\u4ef6\u4e8b\uff0c\u6211\u9700\u8981\u4f60\u652f\u6301\u201d\uff0c\u90a3\u4e48\u53bb\u4ed6\u5988\u7684\u4ed6\u4eec\u3002\u5982\u679c\u4ed6\u4eec\u60f3\u8981\uff0c\u4ed6\u4eec\u5e94\u8be5\u4ed8\u94b1\u7ed9\u4f60\uff0c\u6216\u8005\u81ea\u5df1\u505a\u3002\n(\u7f16\u8f91\u6ce8\u610f\uff1a\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bf4\u60a8\u4e0d\u5e94\u8be5\u8981\u6c42\u5f00\u653e\u6e90\u7801\u9879\u76ee\u4e0a\u7684\u7279\u6027\u3002\u53ea\u662f\u4f60\u6ca1\u6709\u8d44\u683c\u62e5\u6709\u5b83\u4eec\u3002\u5982\u679c\u4f60\u793c\u8c8c\u5730\u95ee\uff0c\u90a3\u5f88\u597d\u3002\u5982\u679c\u4f5c\u8005\u63a5\u7740\u8bf4\u201c\u5bf9\u4e0d\u8d77\uff0c\u4e0d\uff0c\u6211\u6ca1\u6709\u65f6\u95f4/\u6211\u4e0d\u611f\u5174\u8da3/\u786e\u5b9e\u6709\u4efb\u4f55\u5176\u4ed6\u539f\u56e0\u201d\uff0c\u90a3\u4e5f\u6ca1\u95ee\u9898\u3002)\u3002\n\u6ce8\uff1a\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u60a8\u53ef\u4ee5\u9605\u8bfb\u540e\u7eed\u6587\u7ae0\u3002", "note_en": "(Content note: I normally try to keep my natural level of profanity slightly under control on this blog. I won\u2019t be doing that in this post)\n The major reason I wrote  Hypothesis is to  destroy shitty software. Everything is terrible, and I want it to be less terrible.\n But that random code you threw together as a hack, stopped when it did what you needed to do, threw it up on pypi and then neglected it?\n That\u2019s totally OK. Thanks for writing it. The world is slightly better for your having done so, and there is no burden of expectation on you to \u201cdo a better job\u201d. It\u2019s not a job after all, is it? We\u2019re not paying you to do it.\n  I flatter myself that one of the things that I can legitimately claim about Hypothesis is that it is  high quality. So far the worst bug that anyone has reported in the 1.0 release is that when given a wrong argument, Hypothesis throws an exception with the right type from the right place with the wrong error message. Hypothesis works on OSX, Linux, Windows, probably *BSD (I heard about some packaging issues with sqlite, but nothing since, so I think it worked once those were resolved), Python 2.7, 3.2-3.4, CPython, Pypy\u2026 It\u2019s got 100% branch coverage, is documented, etc. Basically as far as quality goes Hypothesis does almost everything right.\n So I\u2019ve proved it can be done and that you should do it too, right?\n Nah, that\u2019s bullshit. I\u2019m here to tell you as someone who has done the work of producing quality software for free, you don\u2019t have to and you shouldn\u2019t feel bad about not doing so.\n Want to know how I did everything right in Hypothesis? I mean, obsessive attention to detail and high standards helped, and may even have been essential, but they weren\u2019t even close to sufficient. Really there are two things that were the key ingredients to my making Hypothesis the quality piece of software it is today:\n  I\u2019ve put somewhere in the region of 800 hours of work into Hypothesis this year, entirely for free. That\u2019s what it took to get to this level of quality.\n And I could only do this because I had the time and money to do so. I had the time to do so because I was being obsessive, had no dependents, and didn\u2019t have a job. I could only not have a job because of the money. I only had the money because I spent the latter half of last year with double the salary I was used to, half the living expenses I was used to, and too borderline depressed to spend it on anything interesting.\n  Could I have done Hypothesis in less than 800 hours? Probably. I doubt I could have done it in less than 400 though, and I would be foolish to expect I could do  any project in the smallest amount of time I could feasibly do it in.\n Hypothesis is a large and complicated project though (if it doesn\u2019t look like one, that\u2019s because a lot of those 800 hours were spent on making it easy to use). Most projects are probably an order of magnitude simpler.\n  i.e. only you having to take two weeks off work, working literally for free, in order to produce quality software.\n i.e. nearly half your holiday allowance if you live in a civilized country, or possibly more than your holiday allowance if you live in the US.\n  Can you produce quality software in less time than that, working only in your free time? I doubt it. Free time is inherently less productive. You\u2019re tired and it\u2019s fragmented. You spend an hour one evening trying to figure out why your windows builds are now failing because a new version of pip is released and after that I  guess you could put another half hour in but your heart isn\u2019t really in it and you\u2019d basically not have the time to get properly stuck into it. The bar for quality is high, and the obstacles to it are higher, and there\u2019s really nothing you can do to fix that other than to put in the time.\n Don\u2019t get me wrong. If you can put in the time I will be incredibly grateful to you. I just don\u2019t think you should feel bad if you don\u2019t.\n There is no obligation to free labour. Every hour you put in working on your project for free is a gift to the world. If the world comes back to you and says \u201cYou are a bad person for not supporting this thing I need you to support\u201d then fuck them. If they want that they should pay you for it, or do it themselves.\n (Edit to note: This isn\u2019t of course to say that you shouldn\u2019t ask for features on open source projects. Only that you are not  entitled to them. If you politely ask, that\u2019s fine. If the author then says \u201cSorry, no, I don\u2019t have the time / am not interested / literally any other reason at all\u201d, that\u2019s fine too)\n Note: If you liked this piece, there is  a follow up you may wish to read.", "posttime": "2020-05-17 10:25:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u5dee\u52b2,source", "title": "\u5bf9\u4e8e\u60a8\u7684\u5f00\u6e90\u5e93\u6765\u8bf4\uff0c\u6709\u70b9\u5dee\u52b2\u662f\u53ef\u4ee5\u63a5\u53d7\u7684", "title_en": "It\u2019s OK for your open source library to be a bit shitty", "transed": 1, "url": "https://www.drmaciver.com/2015/04/its-ok-for-your-open-source-library-to-be-a-bit-shitty/", "via": "", "real_tags": ["\u5f00\u6e90", "\u5dee\u52b2", "source"]}, {"category": "", "categoryclass": "", "imagename": "fbe7b52882a7d4cee9a05c9d495add50.png", "infoid": 1002487, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e9a\u9a6c\u900a\u901a\u77e5\u52a0\u62ff\u5927\u5de5\u4eba\uff0c\u5c3d\u7ba1\u4ed3\u5e93\u7684\u9700\u6c42\u5f88\u5927\uff0c\u800c\u4e14\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u5448\u9633\u6027\uff0c\u4f46\u4ecd\u5c06\u53d6\u6d88\u82f1\u96c4\u85aa\u916c\u3002\n\u968f\u7740\u4e9a\u9a6c\u900a\u9996\u5e2d\u6267\u884c\u5b98\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u51c6\u5907\u6210\u4e3a\u4e16\u754c\u4e0a\u7b2c\u4e00\u4f4d\u4e07\u4ebf\u5bcc\u7fc1\uff0c\u4e9a\u9a6c\u900a\u52a0\u62ff\u5927\u4ed3\u5e93\u7684\u5de5\u4eba\u4eec\u5df2\u7ecf\u63a5\u5230\u901a\u77e5\uff0c\u516c\u53f8\u5c06\u524a\u51cf\u4ed6\u4eec\u7684\u5de5\u8d44\u3002\n\u6839\u636ePressProgress\u83b7\u5f97\u7684\u4e00\u4efd\u516c\u53f8\u5185\u90e8\u5907\u5fd8\u5f55\uff0c\u4e9a\u9a6c\u900a\u672c\u5468\u544a\u8bc9\u5de5\u4eba\uff0c\u5b83\u5df2\u7ecf\u51b3\u5b9a\u53d6\u6d88\u82f1\u96c4\u85aa\u916c\uff0c\u8fd9\u662f\u4e3a\u4e86\u627f\u8ba4\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u5371\u9669\u7684\u5de5\u4f5c\u6761\u4ef6\u800c\u53d1\u653e\u7684\u3002\n\u591a\u540d\u5de5\u4eba\u5728\u5176\u52a0\u62ff\u5927\u4ed3\u5e93\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\uff0c\u5305\u62ec\u4e9a\u9a6c\u900a\u4f4d\u4e8e\u827e\u4f2f\u5854\u7701\u5df4\u5c14\u624e\u514b\u7684\u4ed3\u5e93\u7206\u53d1\u75ab\u60c5\uff0c\u4ee5\u53ca\u5b89\u5927\u7565\u7701\u535a\u5c14\u987f\u7684\u591a\u540d\u5de5\u4eba\uff0c5\u670813\u65e5\u5728\u90a3\u91cc\u6536\u5230\u4e86\u8fd9\u4efd\u5907\u5fd8\u5f55\u3002\n\u4e9a\u9a6c\u900a\u7684\u5907\u5fd8\u5f55\u6807\u9898\u4e3a\u201c\u51a0\u72b6\u75c5\u6bd2\u5de5\u8d44\u6fc0\u52b1\u548c\u53cc\u500d\u52a0\u73ed\u201d\uff0c\u58f0\u660e\u516c\u53f8\u5c06\u5728\u672c\u6708\u5e95\u53d6\u6d882\u7f8e\u5143\u7684\u52a0\u85aa\u548c\u53cc\u500d\u52a0\u73ed\u5de5\u8d44\uff1a\n\u201c\u6211\u4eec\u6700\u540e\u4e00\u6b21\u5c06\u6bcf\u5c0f\u65f62\u7f8e\u5143\u7684\u4e34\u65f6\u52a0\u85aa\u548c\u53cc\u500d\u52a0\u73ed\u8d39\u5ef6\u957f\u81f35\u670830\u65e5\u3002\u201d\u4e4b\u540e\uff0c\u5907\u5fd8\u5f55\u7ee7\u7eed\u5199\u9053\uff0c\u201c\u6211\u4eec\u5c06\u6062\u590d\u6b63\u5e38\u7684\u85aa\u916c\u548c\u52a0\u73ed\u7ed3\u6784\u3002\u201d\n\u5728\u7ed9The Press Progress\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u4e9a\u9a6c\u900a\u53d1\u8a00\u4eba\u8482\u83ab\u897f\u00b7\u5361\u7279(Timothy Carter)\u6ca1\u6709\u8d28\u7591\u8fd9\u4efd\u5907\u5fd8\u5f55\u7684\u771f\u5b9e\u6027\u3002\n\u5361\u7279\u6697\u793a\uff0c\u516c\u53f8\u57285\u670830\u65e5\u4e0d\u4f1a\u524a\u51cf\u5458\u5de5\u5de5\u8d44\uff0c\u800c\u662f\u201c\u5c06\u589e\u52a0\u7684\u65f6\u85aa\u5ef6\u957f\u81f35\u670830\u65e5\u201d\u3002\n\u8fd9\u4f4d\u53d1\u8a00\u4eba\u8865\u5145\u8bf4\uff1a\u201c\u5728\u8fd9\u6bb5\u56f0\u96be\u65f6\u671f\uff0c\u6211\u4eec\u7ee7\u7eed\u770b\u5230\u9700\u6c42\u65fa\u76db\uff0c\u6211\u4eec\u7684\u56e2\u961f\u6b63\u5728\u4e3a\u6211\u4eec\u7684\u5ba2\u6237\u548c\u793e\u533a\u505a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5de5\u4f5c\u3002\u201d\n\u5361\u7279\u6ce8\u610f\u5230\u4e9a\u9a6c\u900a\u9996\u5e2d\u6267\u884c\u5b98\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u6700\u8fd1\u53d1\u8868\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u5728\u58f0\u660e\u4e2d\uff0c\u8d1d\u4f50\u65af\u627f\u8bfa\u5c06\u9884\u671f\u768440\u4ebf\u7f8e\u5143\u201c\u8425\u4e1a\u5229\u6da6\u201d\u7528\u4e8e\u51a0\u72b6\u75c5\u6bd2\u63aa\u65bd\u3002\n\u8d1d\u4f50\u65af\u7684\u8fd9\u53e5\u8bdd\u8bf4\uff1a\u201c\u73b0\u5728\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u4e0d\u786e\u5b9a\u6027\u3002\u201d\u201c\u6211\u4eec\u80fd\u505a\u7684\u6700\u597d\u7684\u6295\u8d44\u662f\u4e3a\u4e86\u6211\u4eec\u6570\u5341\u4e07\u5458\u5de5\u7684\u5b89\u5168\u548c\u798f\u7949\u3002\u201d\n\u4e9a\u9a6c\u900a\u7684\u5458\u5de5\u6700\u8fd1\u516c\u5f00\u8c08\u8bba\u8be5\u516c\u53f8\u52a0\u62ff\u5927\u4ed3\u5e93\u7684\u5de5\u4f5c\u6761\u4ef6\uff0c\u8fd9\u5f15\u53d1\u4e86\u4eba\u4eec\u7684\u62c5\u5fe7\uff0c\u5373\u8be5\u516c\u53f8\u7528\u6765\u8ddf\u8e2a\u5458\u5de5\u751f\u4ea7\u7387\u7684\u76d1\u63a7\u6280\u672f\u6b63\u5728\u635f\u5bb3\u4ed6\u4eec\u7684\u5065\u5eb7\u3002\n\u4e0a\u5468\uff0c\u8be5\u516c\u53f8\u8fd8\u544a\u8bc9\u5176\u52a0\u62ff\u5927\u5de5\u4eba\uff0c\u5b83\u6b63\u5728\u9650\u5236\u5de5\u4eba\u53ef\u4ee5\u65e0\u85aa\u4f11\u5047\u7684\u65f6\u95f4\u3002\n\u5b89\u5927\u7565\u7701\u5c65\u884c\u4e2d\u5fc3\u7684\u4e00\u540d\u5de5\u4f5c\u4eba\u5458\u6700\u8fd1\u544a\u8bc9Press Progress\uff0c\u201c\u5927\u697c\u91cc\u7684\u6050\u60e7\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u813e\u6c14\u5f88\u66b4\u8e81\u3002\u201d", "note_en": "Amazon notifies Canadian workers it is cancelling hero pay despite \u2018heavy demand\u2019 and positive COVID-19 cases at warehouses\n  As Amazon CEO Jeff Bezos prepares to become  the first trillionaire in the world, workers at Amazon\u2019s Canadian warehouses have been notified that the company is going to roll back their wages.\n According to an internal company memo obtained by  PressProgress, Amazon told workers this week it has decided to cancel hero pay that was granted in recognition of hazardous working conditions during the coronavirus pandemic.\n A number of workers have  tested positive for COVID-19 at its Canadian warehouses, including an outbreak at  Amazon\u2019s Balzac, Alberta warehouse plus  multiple workers in Bolton, Ontario\u00a0where the memo was received on May 13.\n Titled \u201cCOVID-19 wage incentive and and double overtime,\u201d Amazon\u2019s memo states that the company will cancel a $2 wage increase and double overtime pay at the end of the month:\n \u201cWe are providing a final extension of the temporary $2/hour pay increase and double overtime pay through May 30.\u201d After that, the memo continues, \u201cwe will return to our regular pay and overtime structure.\u201d\n  In a statement to\u00a0 PressProgress, Amazon spokesperson Timothy Carter did not dispute the authenticity of the memo.\n Carter suggested the company was not cutting worker pay on May 30, but had instead \u201cextended the increased hourly pay through May 30.\u201d\n \u201cWe continue to see heavy demand during this difficult time and the team is doing incredible work for our customers and the community,\u201d the spokesperson added.\n Carter noted a recent statement by Amazon CEO Jeff Bezos wherein Bezos pledged to spend an anticipated $4 billion of its anticipated  \u201coperating profit\u201d on COVID-19 measures.\n \u201cThere is a lot of uncertainty in the world right now,\u201d the quote attributed to Bezos states. \u201cThe best investment we can make is in the safety and well-being of our hundreds of thousands of employees.\u201d\n Amazon\u2019s workers have recently spoken out about working conditions at the company\u2019s Canadian warehouses, raising concerns that  surveillance technology used by the company to track worker productivity is compromising their health.\n Last week, the company also told its Canadian workers it is  limiting the amount of unpaid time workers can take off.\n One Ontario fulfilment centre worker recently told  PressProgress that \u201cthe fear in the building is palpable, and tempers are flaring.\u201d", "posttime": "2020-05-17 10:25:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u52a0\u62ff\u5927,tells", "title": "\u4e9a\u9a6c\u900a\u544a\u8bc9\u52a0\u62ff\u5927\u4ed3\u5e93\u5de5\u4eba\u4ed6\u4eec\u7684\u5de5\u8d44\u88ab\u524a\u51cf\u4e86", "title_en": "Amazon Tells Canadian Warehouse Workers They\u2019re Getting a Pay Cut", "transed": 1, "url": "https://pressprogress.ca/amazon-tells-canadian-warehouse-workers-theyre-getting-a-pay-cut/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u52a0\u62ff\u5927", "tells"]}, {"category": "", "categoryclass": "", "imagename": "17537450ad37789d5f60ec9fe7fc3695.png", "infoid": 1002486, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GitHub\u662f5000\u591a\u4e07\u5f00\u53d1\u4eba\u5458\u7684\u5bb6\u56ed\uff0c\u4ed6\u4eec\u4e00\u8d77\u5de5\u4f5c\uff0c\u5171\u540c\u6258\u7ba1\u548c\u5ba1\u67e5\u4ee3\u7801\u3001\u7ba1\u7406\u9879\u76ee\u548c\u6784\u5efa\u8f6f\u4ef6\u3002\n\u62a5\u540d\u3002\n_/__/\\/__/_|_&lt\uff1b/_&lt\uff1b//_//_/(_/__//\\__//|_|/_/\\__//FPGA-101/Lessons/Labs\u7248\u6743\u6240\u67092018-2020/EnjoyDigital[&gt\uff1b\u8bfe\u7a0b-\u7b2c001\u8bfe\uff1a\u53d1\u73b0FPGA en\uff1ahttp://goo.gl/7CXE6N fr\uff1ahttp://goo.gl/FScQCJ-Lesson-002\uff1a\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2aFPGA\u8bbe\u8ba1en\uff1ahttp://goo.gl/mZJvFQ-Lesson-003\uff1a\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u7247\u4e0a\u7cfb\u7edfen\uff1ahttp://goo.gl/tsKDbF[&gt\uff1b\u5b9e\u9a8c-\u5b9e\u9a8c001\uff1a\u53d1\u73b0FPGA http://goo.gl/CrHD1P-Lab-002\uff1a\u7528FPGA\u521b\u5efa\u6570\u5b57\u65f6\u949f-Lab-003\uff1a\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u7247\u4e0a\u7cfb\u7edfhttp://goo.gl/UaygL4-Lab-004\uff1a\u4f7f\u7528\u60a8\u7684\u7b2c\u4e00\u4e2a\u8f6f\u6838http://goo.gl/veNGDD http://goo.gl/Q5dtyV[&gt\uff1b\u8054\u7cfb\u65b9\u5f0f-\u7535\u5b50\u90ae\u4ef6\uff1aFlorent[AT]Evie-digital.fr", "note_en": "GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.\n  Sign up\n                _______ ________ ______ ___ / __/ _ \\/ ___/ _ |___&lt; / _ &lt; / / _// ___/ (_ / __ /___/ / // / / /_/ /_/ \\___/_/ |_| /_/\\___/_/ FPGA-101 / Lessons / Labs Copyright 2018-2020 / EnjoyDigital[&gt; Lessons---------- - Lesson-001: Discover FPGAs en:  http://goo.gl/7CXE6N fr:  http://goo.gl/FScQCJ - Lesson-002: Create your first FPGA design en:  http://goo.gl/mZJvFQ - Lesson-003: Create your first System on Chip en:  http://goo.gl/tsKDbF[&gt; Labs------- - Lab-001: Discover FPGAs  http://goo.gl/CrHD1P - Lab-002: Create a digital clock with FPGA  http://goo.gl/UaygL4 - Lab-003: Create your first System on Chip  http://goo.gl/veNGDD - Lab-004: Use your first Soft Core CPU  http://goo.gl/Q5dtyV[&gt; Contact----------E-mail: florent [AT] enjoy-digital.fr", "posttime": "2020-05-17 10:24:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bfe\u7a0b,lessons,http", "title": "FPGA 101\u8bfe\u7a0b/\u5b9e\u9a8c", "title_en": "FPGA 101 Lessons/Labs", "transed": 1, "url": "https://github.com/litex-hub/fpga_101", "via": "", "real_tags": ["\u8bfe\u7a0b", "lessons", "http"]}, {"category": "", "categoryclass": "", "imagename": "9b5fc3c717aa23d3187b36212256cba8.png", "infoid": 1002485, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u5411\u4eba\u4eec\u8be2\u95ee\u4ed6\u4eec\u5c06\u4fee\u590dCSS\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\u65f6\uff0c\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u5e38\u89c1\u56de\u7b54\u662f\u6539\u8fdb\u5bf9\u89c6\u53e3\u5355\u5143\u7684\u5904\u7406\u3002\n\u7ecf\u5e38\u63d0\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\u5b83\u4eec\u4e0e\u6eda\u52a8\u6761\u7684\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5143\u7d20\u7684\u5927\u5c0f\u4e3a100vw\uff0c\u5e76\u4e14\u4ece\u8fb9\u5230\u8fb9\u62c9\u4f38\uff0c\u53ea\u8981\u9875\u9762\u6ca1\u6709\u5782\u76f4\u6eda\u52a8\u6761\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u5b83\u6709\u5782\u76f4\u6eda\u52a8\u6761\uff0c\u90a3\u4e48100vw\u5c31\u592a\u5bbd\u4e86\uff0c\u800c\u5782\u76f4\u6eda\u52a8\u6761\u7684\u5b58\u5728\u4f1a\u89e6\u53d1\u6c34\u5e73\u6eda\u52a8\u6761\uff0c\u56e0\u4e3a\u89c6\u53e3\u5355\u5143\u6ca1\u6709\u4f18\u96c5/\u53ef\u9009\u7684\u5904\u7406\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5728\u8eab\u4f53\u4e0a\u9690\u85cf\u4e86\u6ea2\u51fa\u7269\uff0c\u5426\u5219\u4f60\u5c31\u4e0d\u9700\u8981\u8fd9\u6837\u505a\u4e86\u3002(\u6f14\u793a)\u3002\n\u53e6\u4e00\u79cd\u60c5\u51b5\u6d89\u53ca\u79fb\u52a8\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u89c6\u53e3\u5355\u4f4d\u6765\u5e2e\u52a9\u60a8\u6cbf\u5c4f\u5e55\u5e95\u90e8\u5b9a\u4f4d\u56fa\u5b9a\u9875\u811a\u3002\u4f46\u662f\u6d4f\u89c8\u5668Chrome\u53ef\u80fd\u4f1a\u51fa\u73b0(\u4f8b\u5982\u5bfc\u822a\u3001\u952e\u76d8\u7b49)\uff0c\u5b83\u53ef\u80fd\u4f1a\u8986\u76d6\u9875\u811a\uff0c\u56e0\u4e3a\u79fb\u52a8\u6d4f\u89c8\u5668\u4e0d\u4f1a\u8003\u8651\u89c6\u53e3\u5927\u5c0f\u7684\u4efb\u4f55\u66f4\u6539\u3002\n\u8fd9\u771f\u7684\u7ba1\u7528\u5417\uff1f[\u2026]\u3002\u6211\u8fd0\u884c\u7684\u4efb\u4f55\u6d4b\u8bd5\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u73b0\u5728\u6211\u6b63\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002\u4f46\u6211\u786e\u5b9e\u6536\u5230\u4e86\u4e00\u4e9b\u5bf9\u6211\u7684\u63a8\u6587\u7684\u56de\u590d\uff0c\u6307\u51fa\u4e86\u4f7f\u7528\u8fd9\u6761\u63a8\u6587\u53ef\u80fd\u5b58\u5728\u7684\u5176\u4ed6\u95ee\u9898(\u65cb\u8f6c\u8bbe\u5907\u7684\u5f71\u54cd\uff0cChrome\u6ca1\u6709\u5b8c\u5168\u5ffd\u7565\u8be5\u5c5e\u6027\uff0c\u7b49\u7b49)\u3002\n\u603b\u6709\u4e00\u5929\u80fd\u5f97\u5230\u4e00\u4e9b\u771f\u6b63\u7684\u8de8\u6d4f\u89c8\u5668\u89e3\u51b3\u65b9\u6848\u4f1a\u66f4\u597d\uff0c\u4f46\u6211\u4e0d\u8ba4\u4e3a\u4f7f\u7528\u8fd9\u4e00\u89e3\u51b3\u65b9\u6848\u4f1a\u6709\u4efb\u4f55\u95ee\u9898\u3002\u4f7f\u7528\u4ee5\u4f9b\u5e94\u5546\u4e3a\u524d\u7f00\u7684\u5c5e\u6027\u4f5c\u4e3a\u6e10\u8fdb\u5f0f\u589e\u5f3a\u662f\u5f88\u5947\u602a\u7684\uff0c\u4f46\u662f\uff0c\u563f\uff0c\u8fd9\u4e2a\u4e16\u754c\u662f\u5f88\u5947\u602a\u7684\u3002", "note_en": "A surprisingly common response when asking people about things they\u2019d fix about  anything in CSS, is to improve the handling of viewport units.\n One thing that comes up often is how they relate to scrollbars. For example, if an element is sized to  100vw and stretches edge-to-edge, that\u2019s fine so long as the page doesn\u2019t have a vertical scrollbar. If it does have a vertical scrollbar, then  100vw is too wide, and the presence of that vertical scrollbar triggers a  horizontal scrollbar because viewport units don\u2019t have an elegant/optional way of handling that. So you might be hiding overflow on the body when you otherwise wouldn\u2019t need to, for example. ( Demo)\n Another scenario involves mobile browsers. You might use viewport units to help you position a fixed footer along the bottom of the screen. But then browser chrome might come up (e.g. navigation, keyboard, etc), and it may cover the footer, because the mobile browser doesn\u2019t consider anything changed about the viewport size.\n      Does this really work? [\u2026] I\u2019ve had no problems with any of the tests I\u2019ve run and I\u2019m using this method in production right now. But I did receive a number of responses to my tweet pointing to other possible problems with using this (the effects of rotating devices, Chrome not completely ignoring the property, etc.)\n It would be better to get some real cross-browser solution for this someday, but I don\u2019t see any issues using this as an improvement. It\u2019s weird to use a vendor-prefixed property as a progressive enhancement, but hey, the world is weird.", "posttime": "2020-05-17 10:24:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "webkit,mobile,\u6eda\u52a8\u6761", "title": "\u79fb\u52a8WebKit\u4e2d100vh\u7684CSS\u4fee\u590d", "title_en": "CSS fix for 100vh in mobile WebKit", "transed": 1, "url": "https://css-tricks.com/css-fix-for-100vh-in-mobile-webkit/", "via": "", "real_tags": ["webkit", "mobile", "\u6eda\u52a8\u6761"]}, {"category": "", "categoryclass": "", "imagename": "8a7dd96fe8cdc999d8e764f1254b92c9.jpg", "infoid": 1002484, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "3\u67086\u65e5\uff0c\u5229\u5179\u00b7\u65af\u4f69\u514b\u7279\u535a\u58eb\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u6761\u5e16\u5b50\uff0c\u8be5\u5e16\u5b50\u8fc5\u901f\u8d70\u7ea2\u3002\u622a\u81f3\u64b0\u5199\u672c\u6587\u65f6\uff0c\u5b83\u5df2\u7ecf\u83b7\u5f97\u4e86\u8d85\u8fc710\u4e07\u4e2a\u8d5e\u548c\u8fd14.1\u4e07\u6b21\u8f6c\u53d1\uff0c\u5e76\u88abStat News\u8f6c\u8f7d\u3002\u5b83\u58f0\u79f0\u201c\u8c08\u8bba\u6570\u5b66\u201d\uff0c\u5e76\u53cd\u6620\u4e86\u201c\u5907\u53d7\u5c0a\u656c\u7684\u6d41\u884c\u75c5\u5b66\u5bb6\u201d\u7684\u89c2\u70b9\u3002\u5b83\u575a\u79f0\uff0c\u8fd9\u201c\u4e0d\u662f\u4e00\u4e2a\u5047\u60f3\u7684\u3001\u6563\u5e03\u6050\u60e7\u7684\u3001\u6700\u574f\u7684\u60c5\u51b5\u201d\uff0c\u5c3d\u7ba1\u5b83\u5305\u542b\u7684\u9884\u6d4b\u53ef\u80fd\u662f\u9519\u8bef\u7684\uff0c\u4f46\u5b83\u4eec\u4e0d\u4f1a\u662f\u201c\u6570\u91cf\u7ea7\u9519\u8bef\u7684\u201d\u3002\u8fd9\u4e5f\u662f\u707e\u96be\u6027\u7684\u9519\u8bef\u3002\n\u65af\u4f69\u8d6b\u7279\u535a\u58eb\u768435\u6761\u63a8\u6587\u7684\u75c7\u7ed3\u5728\u4e8e\uff0c\u52305\u67085\u65e5\uff0c\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u5c06\u8fc5\u901f\u7ffb\u4e00\u756a\uff0c\u52305\u67085\u65e5\u5c06\u8fbe\u5230100\u4e07\u4f8b\uff0c\u52305\u670811\u65e5\u5c06\u8fbe\u5230400\u4e07\u4f8b\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u4f4f\u9662\u7387\u4e3a10%\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9884\u8ba1\u52305\u6708\u4e2d\u65ec\u5c06\u6709\u5927\u7ea640\u4e07\u4eba\u4f4f\u9662\uff0c\u8fd9\u5c06\u8d85\u8fc7\u5168\u56fd\u7ea633\u4e07\u5f20\u53ef\u7528\u7684\u533b\u9662\u5e8a\u4f4d\u3002\u8fd9\u5c06\u518d\u52a0\u4e0a\u533b\u62a4\u4eba\u5458\u7f3a\u4e4f\u9632\u62a4\u8bbe\u5907\uff0c\u5bfc\u81f4\u4ed6\u4eec\u201c\u4e00\u6b21\u4ece\u52b3\u52a8\u529b\u961f\u4f0d\u4e2d\u6d88\u5931\u6570\u5468\u201d\u3002\u4e16\u754c\u4e0a\u4e00\u534a\u7684\u4eba\u4f1a\u53d7\u5230\u590f\u5b63\u7684\u611f\u67d3\uff0c\u6211\u4eec\u88ab\u542b\u84c4\u5730\u5efa\u8bae\u8d2d\u4e70\u5e72\u8d27\uff0c\u5e76\u51c6\u5907\u597d\u4e0d\u8981\u79bb\u5f00\u5bb6\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u6761\u7ebf\u7d22\u662f\u9519\u7684\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a\u6211\u4eec\u6210\u529f\u5730\u5f2f\u66f2\u4e86\u66f2\u7ebf\uff0c\u907f\u514d\u4e86\u4e16\u754c\u672b\u65e5\u7684\u5230\u6765\uff1b\u9996\u5148\uff0c\u65af\u4f69\u8d6b\u7279\u535a\u58eb\u5c06\u53d6\u6d88\u5927\u578b\u6d3b\u52a8\u548c\u5173\u95ed\u5de5\u4f5c\u573a\u6240\u63cf\u8ff0\u4e3a\u53ea\u4f1a\u8ba9\u4e8b\u60c5\u6539\u53d8\u51e0\u5929\u6216\u51e0\u5468\u3002\n\u76f8\u53cd\uff0c\u8fd9\u4e2a\u5e16\u5b50\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5b83\u620f\u5267\u6027\u5730\u5938\u5927\u4e86\u6211\u4eec\u5bf9\u75c5\u6bd2\u8fd0\u4f5c\u65b9\u5f0f\u7684\u4e86\u89e3\uff1b\u5b83\u6210\u4e3a\u4e86\u4e00\u4e2a\u95ee\u9898\u7684\u727a\u7272\u54c1\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u4e13\u5bb6\u4e2d\u5f88\u5e38\u89c1\uff0c\u5373\u672a\u80fd\u5145\u5206\u89e3\u51b3\u56f4\u7ed5\u5176\u70b9\u4f30\u8ba1\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u4f46\u5b83\u4ee5\u4e24\u79cd\u622a\u7136\u76f8\u53cd\u7684\u65b9\u5f0f\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u9996\u5148\uff0c\u5b83\u4e25\u91cd\u4f4e\u4f30\u4e86\u5229\u5dee\u7684\u901f\u5ea6\u3002\u5982\u679c\u8840\u6e05\u5b66\u6d4b\u8bd5\u662f\u5b8c\u5168\u53ef\u4fe1\u7684\uff0c\u6211\u4eec\u5f88\u53ef\u80fd\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u524d\u5c31\u8fbe\u5230\u4e86200\u4e07\u4f8b\u7684\u4e16\u754c\u672b\u65e5\u91cc\u7a0b\u7891\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f\u5728\u7f8e\u56fd\uff0c\u800c\u662f\u5728\u7ebd\u7ea6\u5e02\uff0c4\u670823\u65e5\uff0c\u7ebd\u7ea6\u5e0220%\u7684\u5c45\u6c11\u51a0\u72b6\u75c5\u6bd2\u6297\u4f53\u5448\u9633\u6027\u3002\u5927\u7ea614%\u7684\u5dde\u5c45\u6c11\u8868\u73b0\u51fa\u6297\u4f53\uff0c\u8fd9\u8868\u660e\u4ec5\u5728\u5e1d\u56fd\u5dde\u5c31\u6709250\u4e07\u4f8b\uff1b\u7531\u4e8e\u6297\u4f53\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5f62\u6210\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f4\u6708\u4e2d\u65ec\u6216\u66f4\u65e9\u7684\u60c5\u51b5\u3002\n\u4f46\u662f\uff0c\u9664\u4e86\u5173\u4e8e\u4f20\u64ad\u901f\u5ea6\u7684\u9519\u8bef\u4e4b\u5916\uff0c\u8be5\u5e16\u5b50\u5728\u4f4f\u9662\u7387\u65b9\u9762\u4e5f\u662f\u975e\u5e38\u9519\u8bef\u7684\u3002\u867d\u7136\u7ebd\u7ea6\u5e02\u53d1\u73b0\u5176\u533b\u9662\u7cfb\u7edf\u6349\u895f\u89c1\u8098\uff0c\u4f46\u5b83\u907f\u514d\u4e86\u707e\u96be\u6027\u7684\u6545\u969c\uff0c\u5c3d\u7ba1\u5728\u5176\u5883\u5185\uff0c\u9884\u8ba1\u6574\u4e2a\u56fd\u5bb6\u7684\u75c5\u4f8b\u603b\u6570\u90fd\u662f\u5982\u6b64\uff0c\u6bd4\u9884\u671f\u63d0\u524d\u4e86\u4e00\u4e2a\u6708\u3002\u7f8e\u56fd\u5176\u4ed6\u5730\u533a\u53d1\u73b0\u81ea\u5df1\u7684\u533b\u9662\u5e8a\u4f4d\u7a7a\u7f6e\uff0c\u5e94\u6025\u80fd\u529b\u95f2\u7f6e\u3002\n\u6709\u4eba\u4f1a\u8ba4\u4e3a\uff0c\u8003\u8651\u5230\u4e3b\u6d41\u6765\u6e90\u5bf9\u6b64\u7ed9\u4e88\u7684\u5173\u6ce8\u7a0b\u5ea6\uff0c\u8fd9\u4e00\u9884\u6d4b\u5c06\u4f1a\u6709\u67d0\u79cd\u5f62\u5f0f\u7684\u91cd\u6e29\u3002\u5f53\u7136\uff0c\u6ca1\u6709\u53d1\u751f\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u8fd9\u4e2a\u5e16\u5b50\u548c2\u6708\u548c3\u6708\u7684\u65e0\u6570\u5176\u4ed6\u5e16\u5b50\u548c\u5a92\u4f53\u6587\u7ae0\u4e00\u6837\uff0c\u5df2\u7ecf\u5b8c\u5168\u88ab\u5185\u5b58\u5360\u7528\u4e86\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u539f\u8c05Twitter\u548cMedium\u7b49\u7f51\u7ad9\u7684\u8fd9\u79cd\u5c1d\u8bd5\uff0c\u4f46\u6765\u81ea\u4e3b\u6d41\u6765\u6e90\u7684\u72c2\u70ed\u4e5f\u88ab\u5ffd\u7565\u4e86\uff0c\u5a92\u4f53\u4ece\u672a\u91cd\u65b0\u8bbf\u95ee\u8fc7\uff0c\u770b\u770b\u4e8b\u60c5\u662f\u5982\u4f55\u53d1\u5c55\u7684\u3002\n\u4ee5\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e3a\u4f8b\u3002\u5dde\u957f\u7f57\u6069\u00b7\u5fb7\u6851\u8482\u65af(Ron DeSantis)\u56e0\u672a\u80fd\u5728\u6625\u5047\u671f\u95f4\u5173\u95ed\u6d77\u6ee9\u800c\u53d7\u5230\u4e25\u5389\u6279\u8bc4\uff0c\u6279\u8bc4\u4eba\u58eb\u8868\u793a\uff0c\u8be5\u5dde\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e0b\u4e00\u4e2a\u7ebd\u7ea6\u5dde\u3002\u6211\u66fe\u5728\u5176\u4ed6\u5730\u65b9\u8be6\u7ec6\u62a5\u9053\u8fc7\u8fd9\u4e00\u70b9\uff0c\u4f46\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u65b0\u75c5\u4f8b\u57284\u6708\u521d\u8fbe\u5230\u9876\u5cf0\uff0c\u5f53\u65f6\u5c31\u4eba\u5747\u611f\u67d3\u4eba\u6570\u800c\u8a00\uff0c\u8be5\u5dde\u662f\u4e00\u4e2a\u4e2d\u7b49\u6c34\u5e73\u7684\u5dde\u3002\u5f53\u7136\uff0c\u75c5\u6bd2\u5e76\u6ca1\u6709\u6d88\u5931\uff0c\u4f46\u4f5b\u7f57\u91cc\u8fbe\u5dde\u6bcf\u65e5\u75c5\u4f8b\u7684\u4e94\u5929\u6eda\u52a8\u5e73\u5747\u503c\u5927\u81f4\u76f8\u5f53\u4e8e3\u6708\u4e0b\u65ec\u7684\u6c34\u5e73\uff0c\u5c3d\u7ba1\u68c0\u6d4b\u5de5\u4f5c\u5df2\u7ecf\u5927\u5e45\u589e\u52a0\u3002\u8003\u8651\u5230\u589e\u52a0\u68c0\u6d4b\u7684\u56e0\u7d20\uff0c\u9633\u6027\u68c0\u6d4b\u7387\u81ea3\u6708\u4e0b\u65ec\u4ee5\u6765\u4e5f\u9010\u6e10\u4e0b\u964d\uff0c\u4ece4\u67081\u65e5\u768411.8%\u7684\u5cf0\u503c\u4e0b\u964d\u52305\u670812\u65e5\u76843.6%\u7684\u4f4e\u70b9\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d(The Washington Post)\u4ecd\u5728\u7ee7\u7eed\u62a5\u9053\u516c\u5171\u536b\u751f\u5b98\u5458\u4e5e\u6c42\u5dde\u5b98\u5458\u5173\u95ed\u6d77\u6ee9\u7684\u62a5\u9053(\u6b64\u65f6\u66f4\u6709\u8da3\u7684\u89d2\u5ea6\u53ef\u80fd\u662f\uff0c\u8fd9\u4e9b\u536b\u751f\u5b98\u5458\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u4e48\u9519)\uff0c\u800c\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d(New York Times)\u51e0\u5929\u524d\u6307\u51fa\uff0c\u201c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5728\u6625\u5047\u72c2\u6b22\u540e\uff0c\u8fc8\u963f\u5bc6\u5468\u56f4\u7684\u75c5\u4f8b\u5927\u5e45\u589e\u52a0\u201d\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u5173\u952e\u7684\u80cc\u666f\uff0c\u5373\u6848\u4ef6\u6570\u91cf\u6a21\u4eff\u4e86\u5176\u4ed6\u6ca1\u6709\u4e3e\u529e\u6625\u5047\u7684\u5dde\u7684\u589e\u957f\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d(New York Times)\u51e0\u5929\u524d\u6307\u51fa(\u8bef\u5bfc\u6027\u7684\uff0c\u4e25\u91cd\u7684)\u201c\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5728\u6625\u5047\u72c2\u6b22\u4e4b\u540e\uff0c\u8fc8\u963f\u5bc6\u5468\u56f4\u7684\u75c5\u4f8b\u6fc0\u589e\u201d\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u5173\u952e\u80cc\u666f\uff0c\u5373\u6848\u4ef6\u6570\u91cf\u6a21\u4eff\u4e86\u5176\u4ed6\u6ca1\u6709\u4e3e\u529e\u6625\u5047\u7684\u5dde\u7684\u60c5\u51b5\u3002\u540c\u6837\uff0c\u4e5f\u8bb8\u771f\u6b63\u7684\u6545\u4e8b\u662f\u6625\u5047\u7684\u4eba\u5728\u4ed6\u4eec\u4e4b\u95f4\u4f20\u64ad\u51a0\u72b6\u75c5\u6bd2\uff0c\u5e76\u5728\u4ed6\u4eec\u56de\u5bb6\u540e\u64ad\u79cd\u3002\u6211\u76f8\u4fe1\u5176\u4e2d\u4e00\u4e9b\u60c5\u51b5\u786e\u5b9e\u53d1\u751f\u4e86\uff0c\u4f46\u4ed6\u4eec\u4f3c\u4e4e\u6781\u4e0d\u53ef\u80fd\u5728\u4ed6\u4eec\u4e4b\u95f4\u5e7f\u6cdb\u4f20\u64ad\uff0c\u800c\u4e0d\u662f\u4e5f\u5e7f\u6cdb\u4f20\u64ad\u5230\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u8c03\u9152\u5e08\u3001\u670d\u52a1\u5458\u3001\u9152\u5e97\u5458\u5de5\u7b49\u4eba\u8eab\u4e0a\u3002\n\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e5f\u662f\u9996\u6279\u5c1d\u8bd5\u91cd\u65b0\u5f00\u653e\u7684\u5dde\u4e4b\u4e00\u30024\u670819\u65e5\uff0c\u675c\u74e6\u5c14\u53bf(\u6770\u514b\u900a\u7ef4\u5c14)\u91cd\u65b0\u5f00\u653e\u6d77\u6ee9\uff0c\u5f15\u53d1\u4e86\u8bb8\u591a\u56fd\u5bb6\u7684\u6000\u7591\u3002\u7136\u800c\uff0c\u4eca\u5929\u7684\u6bcf\u65e5\u75c5\u4f8b\u6bd4\u91cd\u65b0\u5f00\u653e\u5f53\u5929\u8981\u4f4e\uff1b\u6700\u8fd1\u4e0e\u589e\u52a0\u68c0\u6d4b\u76f8\u5173\u7684\u75c5\u4f8b\u6570\u91cf\u51fa\u73b0\u4e86\u6fc0\u589e\uff0c\u4f46\u73b0\u5728\u6b63\u5728\u56de\u843d\u3002\n\u6216\u8005\u60f3\u60f3\u4f50\u6cbb\u4e9a\u5dde\uff0c\u4e00\u5bb6\u8457\u540d\u7684\u5168\u56fd\u6027\u6742\u5fd7\u58f0\u79f0\u5b83\u901a\u8fc7\u91cd\u65b0\u5f00\u653e\u6765\u8fdb\u884c\u201c\u4eba\u7684\u727a\u7272\u201d\u3002\u7136\u800c\uff0c\u8fd1\u4e00\u4e2a\u6708\u540e\uff0c\u4f50\u6cbb\u4e9a\u5dde\u6bcf\u65e5\u75c5\u4f8b\u7684\u5e73\u5747\u4e94\u5929\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u60c5\u51b5\u5982\u4f55\uff0c\u8be5\u5dde\u56e0\u4e3e\u884c\u9762\u5bf9\u9762\u6295\u7968\u800c\u53d7\u5230\u4e25\u5389\u6279\u8bc4\uff1f\u5b83\u7684\u6848\u4ef6\u6570\u91cf\u6709\u6240\u589e\u52a0\uff0c\u4f46\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u589e\u52a0\u4e86\u68c0\u6d4b(\u81ea4\u6708\u521d\u4ee5\u6765\u589e\u52a0\u4e86\u8fd16\u500d)\uff0c\u4ee5\u53ca\u5176\u8089\u7c7b\u52a0\u5de5\u5382\u7279\u6709\u7684\u75ab\u60c5\u3002\u540e\u8005\u662f\u60b2\u5267\u6027\u7684\uff0c\u4f46\u4e0e\u9009\u4e3e\u65e0\u5173\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u5bc6\u5c14\u6c83\u57fa\u65e5\u62a5-\u54e8\u5175\u62a5\u7684\u8c03\u67e5\u672a\u80fd\u5c06\u4efb\u4f55\u6848\u4ef6\u4e0e\u9009\u4e3e\u8054\u7cfb\u8d77\u6765\uff1b\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u56fd\u5bb6\u8bc4\u8bba\u7b49\u4fdd\u5b88\u6d3e\u5a92\u4f53\u7f51\u7ad9\u5ffd\u89c6\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ee7\u7eed-\u5728\u56e0\u62d2\u7edd\u4e0b\u8fbe\u5c45\u5bb6\u8ba2\u5355\u800c\u53d7\u5230\u4e25\u5389\u6279\u8bc4\u4e4b\u540e\uff0c\u5357\u8fbe\u79d1\u4ed6\u5dde\u786e\u5b9e\u7206\u53d1\u4e86\u75ab\u60c5(\u518d\u6b21\u53d1\u751f\u5728\u5176\u8089\u7c7b\u52a0\u5de5\u5382)\uff0c\u4f46\u90a3\u91cc\u7684\u6b7b\u4ea1\u4eba\u6570\u4e00\u76f4\u4fdd\u6301\u5728\u5e73\u5747\u6bcf\u5929\u4e0d\u52303\u4eba\uff0c\u800c\u4e14\u51e0\u4e4e\u6ca1\u6709\u5927\u5f20\u65d7\u9f13-\u4f46\u8fd9\u4e00\u70b9\u5df2\u7ecf\u63d0\u51fa\u6765\u4e86\u3002\u4e00\u4e9b\u201c\u5582\u98df\u72c2\u70ed\u201d\u5df2\u7ecf\u53d6\u5f97\u4e86\u6210\u6548\uff0c\u4f46\u8bb8\u591a\u4eba\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\uff1b\u5a92\u4f53\u901a\u5e38\u4e0d\u4f1a\u627f\u8ba4\u8fd9\u4e00\u5931\u8d25\uff0c\u800c\u662f\u901a\u5e38\u4f1a\u7ee7\u7eed\u524d\u8fdb\u3002\n\u51fa\u4e8e\u51e0\u4e2a\u539f\u56e0\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u53d7\u6b22\u8fce\u7684\u53d1\u5c55\u3002\u9996\u5148\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u5bc6\u5207\u5173\u6ce8\u8fd9\u573a\u6d41\u884c\u75c5\uff0c\u56e0\u6b64\u672a\u80fd\u8ddf\u8fdb\u75af\u72c2\u5582\u517b\u6700\u7ec8\u662f\u5982\u4f55\u7ed3\u675f\u7684\u610f\u5473\u7740\u8bb8\u591a\u4eba\u53ef\u80fd\u4e0d\u4f1a\u50cf\u4ed6\u4eec\u5e94\u8be5\u7684\u90a3\u6837\u7ecf\u5e38\u66f4\u65b0\u81ea\u5df1\u7684\u89c2\u70b9\u3002\u5982\u679c\u4f60\u6000\u7591\u5a01\u65af\u5eb7\u661f\u5dde\u9009\u4e3e\u540e\u53d1\u751f\u4e86\u6570\u767e\u8d77\u6848\u4ef6\u548c\u6b7b\u4ea1\u4e8b\u4ef6\uff0c\u4f60\u53ef\u80fd\u4f1a\u88ab\u539f\u8c05\u3002\n\u5176\u6b21\uff0c\u6211\u4eec\u663e\u7136\u9700\u8981\u5728\u8fd9\u91cc\u5236\u5b9a\u653f\u7b56\uff0c\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u62a5\u9053\u574f\u6d88\u606f\u5bf9\u4e8e\u4ea7\u751f\u77e5\u60c5\u7684\u516c\u4f17\u8206\u8bba\u5f88\u91cd\u8981\u3002\u4f46\u62a5\u9053\u597d\u6d88\u606f\u540c\u6837\u91cd\u8981\u3002\u7b2c\u4e09\uff0c\u4ee5\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u786e\u5b9a\u6027\u8fdb\u884c\u9884\u6d4b\u662f\u6709\u5371\u9669\u7684\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u4e00\u79cd\u4e0d\u5230\u516d\u4e2a\u6708\u524d\u624d\u53d1\u73b0\u7684\u75c5\u6bd2\u3002\u6211\u4eec\u786e\u5b9e\u8fd8\u6709\u5f88\u591a\u4e0d\u77e5\u9053\u7684\u5730\u65b9\uff0c\u5e94\u8be5\u63d0\u9192\u4eba\u4eec\u8fd9\u4e00\u70b9\u3002\u6700\u540e\uff0c\u5728\u90a3\u4e9b\u786e\u5b9e\u8bb0\u5f97\u8fd9\u7c7b\u4e8b\u60c5\u7684\u4eba\u4e2d\uff0c\u4e0d\u627f\u8ba4\u9519\u8bef\u4f1a\u6fc0\u8d77\u4eba\u4eec\u5bf9\u4e13\u5bb6\u7684\u6124\u4e16\u5ac9\u4fd7\u548c\u8fdb\u4e00\u6b65\u7684\u4e0d\u4fe1\u4efb\u3002\u5bf9\u8fd9\u79cd\u4fe1\u4efb\u9020\u6210\u7684\u635f\u5bb3\u662f\u5371\u9669\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u8feb\u5207\u9700\u8981\u53ef\u4ee5\u4f9d\u8d56\u7684\u9ad8\u8d28\u91cf\u7684\u4e13\u5bb6\u610f\u89c1\u548c\u65b0\u95fb\u62a5\u9053\u3002", "note_en": "On March 6, Liz Specht, Ph.D.,  posted a thread on Twitter that immediately went viral.\u00a0 As of this writing, it has received over 100,000 likes and almost 41,000 retweets, and was republished at  Stat News. \u00a0It purported to \u201ctalk math\u201d and reflected the views of \u201c highly esteemed epidemiologists.\u201d It insisted it was \u201c not a hypothetical, fear-mongering, worst-case scenario,\u201d and that, while the predictions it contained might be wrong, they would not be \u201c orders of magnitude wrong.\u201d It was also catastrophically incorrect.\n The crux of Dr. Specht\u2019s 35-tweet thread was that the rapid doubling of COVID-19 cases would lead to about 1 million cases by May 5, 4 million by May 11, and so forth.\u00a0 Under this scenario, with a 10% hospitalization rate, we would expect approximately 400,000 hospitalizations by mid-May, which would more than overwhelm the estimated 330,000 available hospital beds in the country.\u00a0 This would combine with a lack of protective equipment for health care workers and lead to them \u201cdropping from the workforce for weeks at a time,\u201d to shortages of saline drips and so forth. Half the world would be infected by the summer, and we were implicitly advised to buy dry goods and to prepare not to leave the house.\n Interestingly, this thread was wrong not because we managed to bend the curve and stave off the apocalypse; for starters, Dr. Specht described the  cancellation of large events and workplace closures as something that would shift things by only days or weeks.\n Instead, this thread was wrong because it dramatically overstated our knowledge of the way the virus worked; it fell prey to the problem, common among experts, of failing to address adequately the uncertainty surrounding its point estimates.\u00a0 It did so in two opposing ways. First, it dramatically  understated the rate of spread. If serological tests are to be remotely believed, we likely hit the apocalyptic milestone of 2 million cases quite some time ago.\u00a0 Not in the United States, mind you, but  in New York City, where 20% of residents showed positive COVID-19  antibodies on April 23.\u00a0 Fourteen percent of state residents showed antibodies, suggesting 2.5 million cases in the Empire State alone; since antibodies take a while to develop, this was likely the state of affairs in mid-April or earlier.\n But in addition to being wrong about the rate of spread, the thread was also very wrong about the rate of hospitalization. While New York City found its hospital system stretched, it avoided catastrophic failure, despite having within its borders the entire number of cases predicted for the country as a whole, a month earlier than predicted. Other areas of the United States found themselves with empty hospital beds and unused emergency capacity.\n  One would think that, given the amount of attention this was given in mainstream sources, there would be some sort of revisiting of the prediction. Of course, nothing of the sort occurred. This thread has been absolutely memory-holed, along with countless other threads and Medium articles from February and March. We might forgive such forays on sites like Twitter and Medium, but feeding frenzies from mainstream sources are also passed over without the media ever revisiting to see how things turned out.\n Consider Florida. Gov. Ron DeSantis was castigated for failing to close the beaches during spring break, and critics suggested that the state might be the next New York. I\u2019ve written about this  at length elsewhere, but Florida\u2019s new cases peaked in early April, at which point it was a middling state in terms of infections per capita. The virus hasn\u2019t gone away, of course, but the five-day rolling average of daily cases in Florida is roughly where it was in late March, notwithstanding the fact that testing has increased substantially. Taking increased testing into account, the positive test rate has gradually declined since late March as well, falling from a peak of 11.8% on April 1 to a low of 3.6% on May 12.\n Notwithstanding this, the Washington Post continues to press stories of public health officials  begging state officials to close beaches (a more interesting angle at this point might be why these health officials were so wrong), while the New York Times noted a few days ago (misleadingly, and grossly so) that \u201cFlorida had a huge spike in cases around  Miami after spring break revelry,\u201d without providing the crucial context that the caseload mimicked increases in other states that did not play host to spring break. Again, perhaps the real story is that spring breakers passed COVID-19 among themselves and seeded it when they got home. I am sure some of this occurred, but it seems exceedingly unlikely that they would have spread it  widely among themselves and not also spread it widely to bartenders, wait staff, hotel staff, and the like in Florida.\n Florida was also one of the first states to experiment with reopening. Duval County (Jacksonville)  reopened its beaches on April 19 to much national skepticism. Yet daily cases are lower today than they were they day that it reopened; there was a recent spike in cases associated with increased testing, but it is now receding.\n   Or consider Georgia, which one prominent national magazine claimed was engaging in \u201chuman sacrifice\u201d by reopening. Yet, after nearly a month, a five-day average of Georgia\u2019s daily cases looks like this:\n  What about Wisconsin, which was heavily criticized for holding in-person voting? It has had an increased caseload, but that is largely due to  increased testing (up almost six-fold since early April) and an idiosyncratic outbreak in its  meatpacking plants. The latter is tragic, but it is not related to the election; in fact, a  Milwaukee Journal-Sentinel investigation failed to link any cases to the election; this has largely been ignored outside of conservative media sites such as  National Review.\n We could go on \u2013 after being panned for refusing to issue a stay-at-home order, South Dakota indeed suffered an outbreak (once again, in its meatpacking plants), but deaths there have consistently averaged less than three per day, to little fanfare \u2013 but the point is made.\u00a0 Some \u201cfeeding frenzies\u201d have panned out, but many have failed to do so; rather than acknowledging this failure, the press typically moves on.\n This is an unwelcome development, for a few reasons. First, not everyone follows this pandemic closely, and so a failure to follow up on how feeding frenzies end up means that many people likely don\u2019t update their views as often as they should. You\u2019d probably be forgiven if you suspected hundreds of cases and deaths followed the Wisconsin election.\n Second, we obviously need to get policy right here, and to be sure, reporting bad news is important for producing informed public opinion. But reporting good news is equally as important. Third, there are dangers to forecasting with  incredible certitude, especially with a virus that was detected less than six months ago. There really is a lot we still don\u2019t know, and people should be reminded of this. Finally, among people who  do remember things like this, a failure to acknowledge errors foments cynicism and further distrust of experts. The damage done to this trust is dangerous, for at this time we desperately need quality expert opinions and news reporting that we can rely upon.", "posttime": "2020-05-17 10:23:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "failure", "title": "\u66f4\u65b0\u5929\u7a7a\u6b63\u5728\u4e0b\u964d\u7684\u9884\u6d4b\u7684\u4ee3\u4ef7\u9ad8\u6602\u7684\u5931\u8d25-RealClearPolitics", "title_en": "The Costly Failure to Update Sky-Is-Falling Predictions \u2013 RealClearPolitics", "transed": 1, "url": "https://www.realclearpolitics.com/articles/2020/05/15/the_costly_failure_to_update_sky-is-falling_predictions_143215.html", "via": "", "real_tags": ["failure"]}, {"category": "", "categoryclass": "", "imagename": "5af5942a8d5c7eec4b3ccdcd2af90409.jpg", "infoid": 1002483, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6982\u7387\u548c\u7edf\u8ba1\uff1a\u5b83\u4eec\u65e0\u5904\u4e0d\u5728\uff0c\u4f46\u5b83\u4eec\u5f88\u96be\u7406\u89e3\uff0c\u800c\u4e14\u53ef\u80fd\u4e0e\u76f4\u89c9\u76f8\u53cd\u3002\u90a3\u4e48\uff0c\u5411\u6ca1\u6709\u65f6\u95f4\u3001\u6b32\u671b\u6216\u80cc\u666f\u7684\u89c2\u4f17\u4f20\u8fbe\u8fd9\u4e9b\u6570\u5b57\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4ec0\u4e48\u5462\uff1f\u4f0a\u6069\u00b7\u8096\u7279\u63a2\u7d22\u4e86\u73b0\u4ee3\u53ef\u89c6\u5316\u6280\u672f\uff0c\u53d1\u73b0\u6b63\u786e\u7684\u56fe\u7247\u771f\u7684\u80dc\u8fc7\u5343\u8a00\u4e07\u8bed\u3002\n\u4e73\u817a\u764c\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5987\u5973\u60a3\u4e73\u817a\u764c\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u4e3a\u4e86\u660e\u786e\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u6837\u4e00\u4e2a\u4eba\u53e3\uff0c\u5728\u8fd9\u4e2a\u4eba\u53e3\u4e2d\uff0c1%\u7684\u5973\u6027\u60a3\u6709\u4e73\u817a\u764c\uff0c\u800c\u4e73\u623fX\u5149\u68c0\u67e5\u670990%\u7684\u673a\u4f1a\u8fd4\u56de\u6b63\u786e\u7684\u7ed3\u679c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u540d\u5973\u6027\u60a3\u6709\u764c\u75c7\uff0c\u90a3\u4e48\u68c0\u6d4b\u5448\u9633\u6027\u7684\u53ef\u80fd\u6027\u4e3a90%\uff0c\u5982\u679c\u5973\u6027\u6ca1\u6709\u60a3\u764c\u75c7\uff0c\u90a3\u4e48\u68c0\u6d4b\u5448\u9634\u6027\u7684\u53ef\u80fd\u6027\u4e3a90%\u3002\u5047\u8bbe\u67d0\u4f4d\u5987\u5973\u68c0\u6d4b\u5448\u9633\u6027\uff0c\u5979\u60a3\u4e73\u817a\u764c\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u7b54\u6848\u53ef\u80fd\u770b\u8d77\u6765\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u56fe1\uff1a\u63cf\u8ff0\u4e73\u623fX\u5149\u68c0\u67e5\u7ed3\u679c\u7684\u6811\u72b6\u56fe\u3002(\u5355\u51fb\u6b64\u5904\u67e5\u770b\u6b64\u56fe\u50cf\u7684\u653e\u5927\u7248\u672c\u3002)\u3002\n\u5982\u56fe1\u6240\u793a\u7684\u6811\u5f62\u56fe\u53ef\u4ee5\u5e2e\u52a9\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u6811\u72b6\u56fe\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u6765\u81ea\u82f1\u56fd\u4e73\u817a\u764c\u7b5b\u67e5\u9879\u76ee\u3002\u56fe1\u4ece\u9876\u90e8\u5f00\u59cb\uff0c\u67091000\u540d\u5973\u6027\u3002\u9009\u62e9\u6570\u5b571000\u662f\u4e3a\u4e86\u65b9\u4fbf\u548c\u7b80\u5355\u3002\u5411\u4e0b\u79fb\u52a8\uff0c\u8fd9\u68f5\u6811\u4e00\u5206\u4e3a\u4e8c\uff1a\u5de6\u8fb9\u768410\u540d\u5987\u5973(\u62161%)\u60a3\u6709\u4e73\u817a\u764c\uff0c\u53f3\u8fb9\u7684990\u540d\u5987\u5973(\u621699%)\u6ca1\u6709\u60a3\u4e73\u817a\u764c\u3002\u63a5\u7740\uff0c10\u540d\u60a3\u6709\u4e73\u817a\u764c\u7684\u5973\u6027\u88ab\u5206\u62109\u540d(90%)\u6b63\u786e\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5973\u6027\u548c1\u540d(10%)\u9519\u8bef\u68c0\u6d4b\u4e3a\u9634\u6027\u7684\u5973\u6027\u3002990\u540d\u672a\u60a3\u4e73\u817a\u764c\u7684\u5973\u6027\u5206\u4e3a99\u540d(\u621610%)\u9519\u8bef\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5973\u6027\u548c891\u540d(\u621690%)\u6b63\u786e\u68c0\u6d4b\u4e3a\u9634\u6027\u7684\u5973\u6027\u3002\u4ece\u4e0b\u6392\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5973\u6027\u4e2d\uff0c9\u4eba\u60a3\u6709\u4e73\u817a\u764c\uff0c99\u4eba\u6ca1\u6709\u4e73\u817a\u764c\u3002\u56e0\u6b64\uff0c\u4e73\u817a\u764c\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5973\u6027\u60a3\u4e73\u817a\u764c\u7684\u6982\u7387\u4e3a9/108\uff0c\u7ea6\u4e3a8%\u3002\n\u50cf\u56fe1\u4e2d\u7684\u56fe\u8868\u90a3\u6837\u7684\u53ef\u89c6\u5316\u53ef\u4ee5\u6fc0\u6d3b\u4fe1\u606f\uff0c\u5f15\u8d77\u4eba\u4eec\u7684\u6ce8\u610f\uff0c\u6fc0\u53d1\u4eba\u4eec\u7684\u7075\u611f\uff0c\u5e76\u4ea7\u751f\u5f71\u54cd\u3002\u4ed6\u4eec\u53ef\u4ee5\u7b80\u660e\u627c\u8981\u5730\u603b\u7ed3\u6570\u636e\uff0c\u9610\u660e\u9690\u85cf\u7684\u6a21\u5f0f\uff0c\u5e76\u4e3a\u90a3\u4e9b\u7b97\u529b\u4e0d\u4f73\u7684\u4eba\u63d0\u4f9b\u6307\u5bfc\u3002\u8bb8\u591a\u56fe\u5f62\u90fd\u5177\u6709\u8fd9\u4e9b\u529f\u80fd\uff0c\u4f46\u5f53\u4fe1\u606f\u590d\u6742\u4e14\u60c5\u51b5\u975e\u5e38\u91cd\u8981\u65f6\uff0c\u7528\u4e8e\u8868\u793a\u6982\u7387\u7684\u56fe\u5f62\u53ef\u80fd\u7279\u522b\u91cd\u8981\u3002\n\u56fe1\u7b80\u5355\u800c\u5438\u5f15\u4eba\u5730\u89e3\u91ca\u4e86\u4e73\u623fX\u5149\u68c0\u67e5\u6d4b\u8bd5\u95ee\u9898\u4e2d\u590d\u6742\u7684\u6982\u7387\u96c6\uff0c\u5b83\u5f15\u5bfc\u60a8\u4e86\u89e3\u5206\u6790\u95ee\u9898\u6240\u9700\u7684\u903b\u8f91\u3002\u8be5\u6570\u5b57\u5177\u6709\u8bb8\u591a\u6240\u9700\u7684\u5c5e\u6027\u3002\u5b83\u662f\u5e72\u51c0\u7684\uff0c\u6ca1\u6709\u6742\u7269\u3002\u8fd9\u4e9b\u56fe\u6807\u5177\u6709\u63d0\u793a\u6027\uff0c\u5e76\u7528\u6570\u5b57\u548c\u6587\u5b57\u6807\u8bb0\u3002\u4eba\u53e3\u89c4\u6a21\u7684\u81ea\u7136\u9009\u62e9\uff0c\u53731000\u4eba\uff0c\u786e\u4fdd\u4e86\u7b97\u6cd5\u7684\u7b80\u5355\uff0c\u5e76\u8003\u8651\u4e86\u6d4b\u8bd5\u7684\u6240\u6709\u7ed3\u679c\u3002\u6700\u540e\uff0c\u4e5f\u662f\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u8be5\u56fe\u5f62\u9644\u5e26\u4e86\u4e00\u4e2a\u63cf\u8ff0\u5982\u4f55\u89e3\u91ca\u6570\u636e\u7684\u8bf4\u660e\u3002\n\u56fe2\u662f\u4e00\u4e2a\u56fe\u6807\u663e\u793a\uff0c\u5b83\u8bf4\u660e\u4e86\u4e0e\u56fe1\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u4f46\u8fd9\u4e00\u6b211000\u540d\u5987\u5973\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7531\u4e00\u4e2a\u56fe\u6807\u8868\u793a\u3002\u76d2\u5b50\u91cc\u7684\u5973\u6027\u662f\u90a3\u4e9b\u4e73\u817a\u764c\u68c0\u6d4b\u5448\u9633\u6027\u7684\u5973\u6027\uff0c\u76d2\u5b50\u91cc\u76849\u4e2a\u7ea2\u8272\u5973\u6027\u662f\u90a3\u4e9b\u68c0\u6d4b\u5448\u9633\u6027\u4e14\u786e\u5b9e\u60a3\u6709\u764c\u75c7\u7684\u5973\u6027\u3002\n\u62e5\u6709\u540c\u4e00\u7ec4\u6982\u7387\u7684\u591a\u79cd\u8868\u793a\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u56fe\u5f62\u683c\u5f0f\u5438\u5f15\u4e0d\u540c\u7684\u4eba\u3002\u50cf\u56fe2\u8fd9\u6837\u7684\u56fe\u6807\u663e\u793a\u8d8a\u6765\u8d8a\u591a\u5730\u88ab\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u6613\u4e8e\u5904\u7406\u7684\u6570\u5b57\u6765\u63cf\u8ff0\u6982\u7387\u3002\u572820\u4e16\u7eaa20\u5e74\u4ee3\u548c30\u5e74\u4ee3\uff0c\u5965\u5730\u5229\u54f2\u5b66\u5bb6\u5965\u6258\u00b7\u8bfa\u62c9\u65af\u548c\u4ed6\u7684\u5408\u4f5c\u8005\u666e\u53ca\u4e86\u56fe\u6807\u4f5c\u4e3a\u4e00\u79cd\u4ea4\u6d41\u4fe1\u606f\u7684\u624b\u6bb5\u3002\u4ed6\u4eec\u521b\u9020\u4e86\u4e00\u79cd\u540d\u4e3aIsotype\u7684\u56fe\u7247\u8bed\u8a00\uff0c\u5728\u8fd9\u79cd\u8bed\u8a00\u4e2d\uff0c\u7ecf\u5e38\u4f7f\u7528\u591a\u4e2a\u76f8\u540c\u7684\u56fe\u6807\u6765\u8868\u793a\u6570\u5b57\u3002\n\u56fe3\u663e\u793a\u4e86Neurath\u5b66\u6821\u7684\u56fe\u7247\u3002\u6bcf\u884c\u5305\u542b20\u4e2a\u5973\u6027\u56fe\u6807\uff0c\u6bcf\u4e2a\u56fe\u6807\u4ee3\u8868\u76f8\u5e94\u56fd\u5bb65%\u7684\u4eba\u53e3\u3002\u8fd9\u5f20\u56fe\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u4fe1\u606f\u662f\u5931\u4e1a\u5973\u6027\u7684\u6bd4\u4f8b\u5f88\u5927\u3002\u8be5\u56fe\u50cf\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u7528\u6570\u5b57\u8868\u683c\u8868\u793a(\u4e8b\u5b9e\u4e0a\uff0c\u4e0e\u8be5\u56fe\u5f62\u4e00\u8d77\u4f7f\u7528\u8fd9\u6837\u7684\u8868\u683c\u4f1a\u5f88\u6709\u7528)\uff1b\u7136\u800c\uff0c\u8be5\u56fe\u5f62\u6bd4\u8868\u683c\u66f4\u6709\u529b\u3001\u66f4\u76f4\u63a5\u5730\u4f20\u8fbe\u7edf\u8ba1\u6570\u636e\u3002\u5373\u4f7f\u6211\u4eec\u7684\u6570\u5b66\u5f88\u5dee\uff0c\u6211\u4eec\u4e5f\u4f1a\u7acb\u523b\u5bf9\u5de5\u4f5c\u7684\u5206\u5e03\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u5370\u8c61\u3002\u5176\u4ed6\u8457\u540d\u7684\u6570\u636e\u56fe\u5f62\u8868\u793a\u5305\u62ec\u67e5\u5c14\u65af\u00b7\u7ea6\u745f\u592b\u00b7\u7c73\u7eb3\u5fb7(Charles Joseph Minard)\u5173\u4e8e\u62ff\u7834\u4ed11812\u5e74\u8fdb\u5165\u4fc4\u7f57\u65af\u7684\u60b2\u60e8\u6218\u5f79\u7684\u6d41\u7a0b\u56fe(\u8bf7\u53c2\u9605\u4e86\u89e3\u4e0d\u786e\u5b9a\u6027\u7f51\u7ad9\u67e5\u770b\u6570\u636e\u7684\u52a8\u753b\u7248\u672c)\uff0c\u4ee5\u53ca\u5f17\u6d1b\u4f26\u65af\u00b7\u5357\u4e01\u683c\u5c14(Florence Nightingale)\u7684\u6781\u5730\u5730\u5f62\u56fe(\u540c\u6837\uff0c\u8bf7\u53c2\u9605\u52a8\u753b\u7248\u672c\u7684\u4e86\u89e3\u4e0d\u786e\u5b9a\u6027)\u3002\n\u56fe3\u662f\u5386\u53f2\u6570\u636e\u7684\u53ef\u89c6\u5316\uff0c\u800c\u4e0d\u662f\u6982\u7387\u7684\u53ef\u89c6\u5316\uff0c\u4f46\u662f\u8bf8\u5982\u56fe\u6807\u6761\u5f62\u56fe\u3001\u5757\u6761\u5f62\u56fe\u548c\u997c\u56fe\u4e4b\u7c7b\u7684\u7edf\u8ba1\u5de5\u5177\u5f53\u7136\u53ef\u4ee5\u7528\u6765\u4f20\u8fbe\u6982\u7387\u3002\u56fe4\u4e2d\u7684\u5806\u53e0\u6761\u5f62\u56fe\u4ee3\u8868\u4e86\u670d\u7528\u4ed6\u6c40\u7c7b\u836f\u7269\u5341\u5e74\u6765\u7684\u76ca\u5904(\u5bf9\u4e8e\u4e00\u4e2a\u5065\u5eb7\u768457\u5c81\u7537\u6027\u6765\u8bf4)\u3002\u6709\u4e24\u4e2a\u6807\u7b7e\u6e05\u6670\u7684\u6761\uff1b\u4e00\u4e2a\u4ee3\u8868100\u540d\u4e0d\u670d\u7528\u4ed6\u6c40\u7c7b\u836f\u7269\u7684\u76f8\u4f3c\u7537\u6027\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c\uff0c\u53e6\u4e00\u4e2a\u4ee3\u8868100\u540d\u670d\u7528\u4ed6\u6c40\u7c7b\u836f\u7269\u7684\u76f8\u4f3c\u7537\u6027\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u3002\u8fd9\u4e24\u4e2a\u680f\u4e4b\u95f4\u7684\u5173\u952e\u533a\u522b\u662f\u4e0b\u680f\u4e2d\u7684\u9ec4\u8272\u90e8\u5206\uff0c\u8fd9\u4ee3\u8868\u4e86100\u540d\u670d\u7528\u4ed6\u6c40\u7c7b\u836f\u7269\u7684\u7537\u6027\u4e2d\u67093\u4eba\u6ca1\u6709\u5fc3\u810f\u75c5\u53d1\u4f5c\u6216\u4e2d\u98ce\uff0c\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u670d\u7528\u4ed6\u6c40\u7c7b\u836f\u7269\uff0c\u4ed6\u4eec\u4f1a\u60a3\u5fc3\u810f\u75c5\u53d1\u4f5c\u6216\u4e2d\u98ce\u3002\n\u56fe4\uff1a\u5806\u53e0\u7684\u6761\u5f62\u56fe\uff0c\u663e\u793a\u4e00\u4e2a\u5065\u5eb7\u768457\u5c81\u7537\u5b50\u5728\u672a\u676510\u5e74\u5185\u5fc3\u810f\u75c5\u53d1\u4f5c\u6216\u4e2d\u98ce\u7684\u6982\u7387\u3002\n\u901a\u5e38\uff0c\u5bf9\u56fe\u5f62\u7684\u9700\u6c42\u968f\u7740\u6982\u7387\u7684\u590d\u6742\u6027\u800c\u589e\u52a0\u3002\u98d3\u98ce\u827e\u7433\u6700\u8fd1\u6a2a\u626b\u7f8e\u56fd\u4e1c\u6d77\u5cb8\u3002\u5f53\u98d3\u98ce\u4f4d\u4e8e\u5df4\u54c8\u9a6c\u7fa4\u5c9b\u9644\u8fd1\u65f6\uff0c\u6c14\u8c61\u5b66\u5bb6\u8fd0\u884c\u4e86\u4e00\u4e2a\u8ba1\u7b97\u673a\u6a21\u578b\u6765\u9884\u6d4b\u5176\u6700\u53ef\u80fd\u7684\u8def\u5f84\u3002\u56fe5\u6240\u793a\u7684\u610f\u5927\u5229\u9762\u6761\u56fe\u662f\u901a\u8fc7\u5e94\u7528\u5177\u6709\u51e0\u7ec4\u7565\u6709\u4e0d\u540c\u7684\u521d\u59cb\u6761\u4ef6\u7684\u6a21\u578b\u6765\u521b\u5efa\u7684\u3002\u8be5\u56fe\u663e\u793a\u5b58\u5728\u591a\u4e2a\u53ef\u80fd\u7684\u671f\u8d27\u3002\u6ca1\u6709\u63d0\u4f9b\u5177\u4f53\u7684\u6982\u7387\uff0c\u56e0\u4e3a\u8fd9\u5f20\u56fe\u50cf\u53ea\u5728NBC\u65b0\u95fb\u516c\u544a\u4e2d\u77ed\u6682\u51fa\u73b0\u3002\u8fd9\u6761\u4fe1\u606f\u88ab\u7acb\u5373\u800c\u7cbe\u5f69\u5730\u4f20\u8fbe\u4e86\u51fa\u6765\u3002\n\u56fe6\uff1a2011\u5e74\u6e29\u5e03\u5c14\u767b\u7f51\u7403\u516c\u5f00\u8d5b\u524d\u5341\u540d\u7f51\u7403\u9009\u624b\u8d62\u5f97\u7537\u5b50\u5355\u6253\u9526\u6807\u8d5b\u673a\u4f1a\u767e\u5206\u6bd4\u7684\u4e09\u7ef4\u6761\u5f62\u56fe(\u8d54\u7387\u53d6\u81ea2011\u5e746\u67081\u65e5\u5a01\u5ec9\u00b7\u5e0c\u5c14)\u3002\n\u56fe6\u4e2d\u7684\u56fe\u8868\u4ee3\u8868\u4e862011\u5e74\u6e29\u5e03\u5c14\u767b\u7f51\u7403\u516c\u5f00\u8d5b\u7537\u5b50\u5355\u6253\u9526\u6807\u8d5b\u524d\u5341\u540d\u7537\u5b50\u7f51\u7403\u8fd0\u52a8\u5458\u83b7\u80dc\u7684\u6982\u7387(\u4ee5\u767e\u5206\u6bd4\u8868\u793a)\u3002\u8fd9\u4e9b\u6982\u7387\u662f\u6839\u636e\u5a01\u5ec9\u00b7\u5e0c\u5c14\u63d0\u4f9b\u7684\u8d54\u7387\u6539\u7f16\u7684\u3002\u5fb7\u7ea6\u79d1\u7ef4\u5947\u662f\u6700\u7ec8\u7684\u83b7\u80dc\u8005\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5728\u9526\u6807\u8d5b\u5f00\u59cb\u524d\u4e0d\u4e45(2011\u5e746\u6708\u665a\u4e9b\u65f6\u5019)\uff0c\u4ed6\u662f\u6700\u53d7\u6b22\u8fce\u7684\u3002\u5728\u6761\u5f62\u56fe\u4e2d\u8868\u793a\u8fd9\u4e9b\u767e\u5206\u6bd4\u662f\u5408\u7406\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u56fe\u8868\u6709\u660e\u786e\u7684\u6807\u7b7e\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4fe1\u606f\u88ab\u4e09\u7ef4\u6548\u679c\u3001\u4e0d\u5fc5\u8981\u7684\u9525\u4f53\u4f7f\u7528\u548c\u72ec\u7279\u7684\u89c6\u89d2\u6240\u63a9\u76d6\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u8d1f\u9762\u7279\u5f81\u6982\u62ec\u4e3a\u56fe\u8868\u5783\u573e\u3002\u5b83\u4eec\u7ed9\u672c\u53ef\u4ee5\u63d0\u4f9b\u4fe1\u606f\u7684\u56fe\u8868\u589e\u6dfb\u4e86\u65e0\u7528\u7684\u6742\u4e71\u3002\u56fe7\u662f\u6ca1\u6709\u56fe\u8868\u5783\u573e\u7684\u56fe\u5f62\u7684\u6539\u8fdb\u7248\u672c\u3002\n\u56fe7\uff1a2011\u5e74\u6e29\u5e03\u5c14\u767b\u7537\u5b50\u5355\u6253\u9526\u6807\u8d5b\u524d\u5341\u540d\u7f51\u7403\u8fd0\u52a8\u5458\u8d62\u5f97\u7537\u5b50\u5355\u6253\u9526\u6807\u8d5b\u7684\u673a\u4f1a\u767e\u5206\u6bd4\u6761\u5f62\u56fe(\u8d54\u7387\u53d6\u81ea2011\u5e746\u67081\u65e5\u5a01\u5ec9\u00b7\u5e0c\u5c14)\u3002\n\u6709\u5f71\u54cd\u529b\u7684\u7f8e\u56fd\u7edf\u8ba1\u5b66\u5bb6\u7231\u5fb7\u534e\u00b7\u5854\u592b\u7279(Edward Tufte)\u5f3a\u70c8\u4e3b\u5f20\u5728\u56fe\u8868(\u5982\u56fe7)\u4e2d\u91c7\u7528\u6781\u7b80\u4e3b\u4e49\u3002\u4ed6\u7684\u8457\u4f5c\uff0c\u5305\u62ec\u201c\u5b9a\u91cf\u4fe1\u606f\u7684\u89c6\u89c9\u663e\u793a\u201d\uff0c\u53d7\u5230\u9ad8\u5ea6\u8d5e\u626c\u3002\n\u56fe8\u7684\u997c\u56fe\u662f\u4ece\u5f00\u7403\u5f00\u59cb\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4e92\u52a8\u5c55\u793a\u7684\u9759\u6001\u90e8\u5206\uff0c\u5c55\u793a\u4e862011\u5e7410\u670815\u65e5\u5229\u7269\u6d66\u548c\u66fc\u8054\u4e4b\u95f4\u7684\u8db3\u7403\u6bd4\u8d5b\u7ed3\u679c\u7684\u6982\u7387\u3002(\u56fe\u8868\u6458\u5f55\u4e8e2011\u5e7410\u67088\u65e5\u3002)\u3002\u5b83\u5f88\u5438\u5f15\u4eba\uff0c\u770b\u8d77\u6765\u5f88\u8001\u7ec3\uff0c\u4f46\u5b83\u5177\u6709\u8bef\u5bfc\u6027\u3002\u6bcf\u4e2a\u5207\u7247\u7684\u5927\u5c0f\u7531\u5176\u5728\u4e2d\u5fc3\u7684\u89d2\u5ea6\u786e\u5b9a\uff0c\u8868\u793a\u7279\u5b9a\u5f97\u5206\u7684\u6982\u7387\u3002\u8fd9\u5f88\u597d\uff0c\u4e5f\u662f\u5927\u591a\u6570\u997c\u56fe\u6240\u4f9d\u636e\u7684\u539f\u5219\u3002\u7136\u800c\uff0c\u56fe8\u8fd8\u5305\u62ec\u671d\u5411\u56fe\u50cf\u4e2d\u5fc3\u7684\u4e0d\u540c\u534a\u5f84\u7684\u6d53\u8272\u6954\u5f62\u7684\u96c6\u5408\u3002\u8fd9\u4e9b\u6954\u5f62\u4ee3\u8868\u4e0e\u5b83\u4eec\u6240\u5728\u7684\u5207\u7247\u76f8\u540c\u7684\u6982\u7387\u3002\u4e0d\u540c\u5bfb\u5e38\u7684\u662f\uff0c\u6d4b\u91cf\u6982\u7387\u7684\u662f\u6954\u5b50\u7684\u534a\u5f84\uff0c\u800c\u4e0d\u662f\u6954\u5b50\u7684\u9762\u79ef\u3002\u8fd9\u6709\u7279\u6b8a\u7684\u542b\u4e49\uff1b\u4f8b\u5982\uff0c\u5c061-1\u5e73\u5c40\u7684\u6954\u5f62(12%)\u4e0e0-0\u5e73\u5c40\u7684\u6954\u5f62(6%)\u8fdb\u884c\u6bd4\u8f83\u3002\u5c3d\u7ba1\u8981\u5927\u5f97\u591a\uff0c\u4f461-1\u6954\u5f62\u7684\u6982\u7387\u53ea\u662f0-0\u6954\u5f62\u7684\u4e24\u500d\u3002\u5982\u679c\u6ca1\u6709\u6954\u5f62\u7684\u5185\u90e8\u96c6\u5408\uff0c\u56fe\u5f62\u4f1a\u66f4\u6e05\u6670\u3002\n\u56fe8.2011\u5e7410\u670815\u65e5\u5229\u7269\u6d66\u5bf9\u9635\u66fc\u8054\u8db3\u7403\u6bd4\u8d5b\u7ed3\u679c\u6982\u7387\u7684\u997c\u56fe(\u56fe\u81ea\u5f00\u7403)\u3002\n\u5448\u73b0\u6982\u7387\u8fd8\u6709\u5176\u4ed6\u66f4\u5fae\u5999\u7684\u9677\u9631\uff0c\u9002\u7528\u4e8e\u8bed\u8a00\u3001\u6570\u5b57\u548c\u56fe\u5f62\u4ea4\u6d41\u3002\u89c2\u4f17\u53ef\u80fd\u5bf9\u6570\u5b66\u638c\u63e1\u5f97\u5f88\u5dee\uff0c\u5bf9\u5206\u6570\u548c\u6570\u5b57\u6bd4\u8f83\u611f\u5230\u56f0\u60d1\u3002\u4ed6\u4eec\u8fd8\u4f1a\u6709\u5148\u5165\u4e3a\u4e3b\u7684\u89c2\u5ff5\u548c\u504f\u89c1\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ed6\u4eec\u91c7\u53d6\u975e\u7406\u6027\u7684\u884c\u52a8\u3002\u4f8b\u5982\uff0c\u8003\u8651\u6846\u67b6\u95ee\u9898\uff0c\u5b83\u6d89\u53ca\u6982\u7387\u7684\u8868\u793a\u65b9\u5f0f\u3002\u4f26\u6566\u5730\u94c1\u6700\u8fd1\u7684\u4e00\u6761\u6807\u8bed\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6846\u5b9a\u7684\u4f8b\u5b50\uff0c99%\u7684\u5e74\u8f7b\u4eba\u6ca1\u6709\u72af\u7f6a\uff0c\u4e5f\u53ef\u4ee5\u75281%\u7684\u5e74\u8f7b\u4eba\u72af\u7f6a\u6765\u5f62\u5bb9\u3002\u5728\u521b\u5efa\u6b64\u7edf\u8ba1\u6570\u636e\u7684\u7b80\u5355\u6761\u5f62\u56fe\u65f6\uff0c\u60a8\u5fc5\u987b\u9009\u62e9\u6761\u5f62\u56fe\u5e94\u8be5\u8868\u793a99%\u8fd8\u662f1%\uff0c\u5e76\u4e14\u8fb9\u6846\u7684\u9009\u62e9\u5c06\u5f71\u54cd\u67e5\u770b\u8be5\u56fe\u5f62\u7684\u7528\u6237\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7531100\u4e2a\u56fe\u6807\u7ec4\u6210\u7684\u56fe\u6807\u6570\u7ec4(\u5e26\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u56fe\u6807)\u66f4\u5408\u9002\uff0c\u56e0\u4e3a\u5b83\u5305\u62ec\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\uff0c\u5e76\u8d4b\u4e88\u5b83\u4eec\u76f8\u540c\u7684\u6743\u91cd\u3002\u7406\u89e3\u4e0d\u786e\u5b9a\u6027\u6709\u4e00\u4e2a\u63a2\u7d22\u6846\u67b6\u7684\u4e92\u52a8\u5de5\u5177\u3002\n\u8ba1\u7b97\u80fd\u529b\u548c\u4e92\u8054\u7f51\u7684\u8fdb\u6b65\u5bfc\u81f4\u4e86\u6570\u636e\u7684\u56fe\u5f62\u8868\u793a\u6216\u4fe1\u606f\u56fe\u8868\u7684\u7206\u70b8\u6027\u589e\u957f\u3002\u516c\u4f17\u53ef\u4ee5\u83b7\u5f97\u5927\u91cf\u7684\u5728\u7ebf\u6570\u636e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u521b\u5efa\u53ef\u89c6\u5316\u5e76\u7acb\u5373\u4ee5\u5de8\u5927\u7684\u89c4\u6a21\u4f20\u64ad\u5b83\u4eec\u3002\u8fd9\u4e9b\u53ef\u89c6\u5316\u4e0d\u9700\u8981\u662f\u9759\u6001\u7684\uff1b\u5b83\u4eec\u53ef\u4ee5\u662f\u52a8\u6001\u7684\u548c\u4e92\u52a8\u7684\uff0c\u8fd9\u6253\u5f00\u4e86\u4e00\u4e2a\u5145\u6ee1\u4e86\u4ee5\u524d\u65e0\u6cd5\u60f3\u8c61\u7684\u673a\u4f1a\u7684\u4e16\u754c(\u65e2\u6709\u574f\u5904\uff0c\u4e5f\u6709\u597d\u5904)\u3002\u672c\u00b7\u5f17\u83b1(Ben Fry)\u548c\u6234\u592b\u00b7\u9ea6\u514b\u574e\u5fb7\u5229\u65af(Dave McCandless)\u7b49\u8bbe\u8ba1\u5e08\u4ee5\u53ca\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d(New York Times)\u548c\u201c\u536b\u62a5\u201d(The Guardian)\u7b49\u62a5\u7eb8\u5728\u53ef\u89c6\u5316\u6570\u636e\u65b9\u9762\u8d70\u5728\u4e86\u524d\u5217\u3002Protovis\u548cD3\u63d0\u4f9b\u4e86\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u53ef\u89c6\u5316\u6548\u679c\u7684\u5de5\u5177\uff0c\u8bb8\u591a\u773c\u775b\u548c\u753b\u9762\u516c\u4f17\u5728\u6536\u5230\u6570\u636e\u540e\u4f1a\u81ea\u52a8\u751f\u6210\u7edf\u8ba1\u56fe\u5f62\u3002\n\u56fe9\uff1a\u6587\u5b57\u4e91(\u5de6)\u548c\u6811\u5f62\u56fe(\u53f3)\u4ee3\u8868\u4e862011\u5e74\u6e29\u5e03\u5c14\u767b\u7f51\u7403\u516c\u5f00\u8d5b\u7537\u5b50\u5355\u6253\u9526\u6807\u8d5b\u524d24\u540d\u7537\u5b50\u7f51\u7403\u9009\u624b\u83b7\u80dc\u7684\u6982\u7387\u3002\n\u7528\u4e8e\u751f\u6210\u56fe9\u7684\u6570\u636e\u4e0e\u7528\u4e8e\u751f\u6210\u56fe6\u7684\u6570\u636e(\u53d6\u81eaWilliam Hill)\u76f8\u540c\uff0c\u53ea\u662f\u8fd9\u4e00\u6b21\u6211\u4eec\u4f7f\u7528\u7684\u662f\u524d24\u540d\u73a9\u5bb6\uff0c\u800c\u4e0d\u662f\u524d10\u540d\u3002\u8fd9\u4e9b\u56fe\u5f62\u662f\u901a\u8fc7\u5c06William Hill\u7684\u6570\u636e\u8f93\u5165\u5230\u591a\u53ea\u773c\u775b\u4e2d\uff0c\u7136\u540e\u5bf9\u8f93\u51fa\u8fdb\u884c\u4fee\u9970\u800c\u521b\u5efa\u7684\u3002\u5355\u8bcdcloud\u7684\u5b57\u4f53\u5927\u5c0f\u4e0e\u73a9\u5bb6\u8d62\u5f97\u51a0\u519b\u7684\u673a\u4f1a\u6210\u6b63\u6bd4\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u5355\u8bcd\u4e91\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\uff0c\u60a8\u53ea\u770b\u5230\u4e0d\u540c\u53c2\u4e0e\u8005\u7684\u6982\u7387\u5982\u4f55\u6bd4\u8f83\uff1b\u60a8\u770b\u4e0d\u5230\u6982\u7387\u7684\u5b9e\u9645\u503c\u3002\u800c\u4e14\uff0c\u957f\u8bcd\u6bd4\u77ed\u8bcd\u83b7\u5f97\u66f4\u591a\u7684\u7a7a\u95f4\uff01\u5728\u6811\u5f62\u56fe\u4e2d\uff0c\u5757\u7684\u9762\u79ef\u8868\u793a\u8be5\u73a9\u5bb6\u83b7\u80dc\u7684\u6982\u7387\u3002\u53ef\u4ee5\u901a\u8fc7\u7528\u6bcf\u4e2a\u5757\u8868\u793a\u7684\u6982\u7387\u6765\u6807\u8bb0\u6bcf\u4e2a\u5757\u6765\u6539\u8fdb\u8be5\u6811\u6620\u5c04\u3002\n\u4ea4\u4e92\u5f0f\u56fe\u5f62\u5728\u53ef\u89c6\u5316\u6982\u7387\u548c\u53ef\u89c6\u5316\u6570\u636e\u65b9\u9762\u5177\u6709\u5de8\u5927\u7684\u6f5c\u529b\u3002\u6c49\u65af\u00b7\u7f57\u65af\u6797(Hans Rosling)\u73b0\u5728\u8457\u540d\u7684Gapminder\u5f88\u597d\u5730\u5904\u7406\u4e86\u590d\u6742\u7684\u6570\u636e\u96c6\uff0c\u5f53\u4f34\u968f\u7740\u53d9\u4e8b\u65f6\uff0c\u5b83\u7279\u522b\u6709\u542f\u53d1\u6027\u3002\u7406\u89e3\u4e0d\u786e\u5b9a\u6027\u6709\u591a\u79cd\u5904\u7406\u6982\u7387\u7684\u4ea4\u4e92\u5de5\u5177\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4ea4\u4e92\u5f0f\u56fe\u5f62\u9f13\u52b1\u7528\u6237\u4e3b\u52a8\u800c\u4e0d\u662f\u88ab\u52a8\u5730\u53c2\u4e0e\u53ef\u89c6\u5316\uff0c\u8fd9\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u4fdd\u6301\u3002\u5de5\u5177\u63d0\u793a\u3001\u8d85\u94fe\u63a5\u548c\u5176\u4ed6\u52a8\u6001\u529f\u80fd\u53ef\u4ee5\u4e30\u5bcc\u4ea4\u4e92\u5f0f\u56fe\u5f62\uff0c\u5e76\u5e2e\u52a9\u5b83\u4eec\u9002\u5e94\u7528\u6237\u9996\u9009\u9879\u3002\u7f8e\u56fd\u79d1\u5b66\u4e0e\u5065\u5eb7\u59d4\u5458\u4f1a\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u79f0\u4e3aRisketer\u7684\u4ea4\u4e92\u5f0f\u5de5\u5177\uff0c\u5982\u56fe10\u6240\u793a\uff0c\u5176\u4e2d\u5305\u62ec\u8bb8\u591a\u8fd9\u4e9b\u529f\u80fd\u3002\u5b83\u63cf\u8ff0\u4e86\u7f8e\u56fd\u7684\u6b7b\u4ea1\u539f\u56e0\uff0c\u56e0\u4e3a\u76f8\u5173\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u7f29\u653e\u8bbe\u65bd\uff0c\u5b83\n\u968f\u7740\u8ba1\u7b97\u548c\u4fe1\u606f\u56fe\u8868\u7684\u8fd9\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u53d1\u5c55\uff0c\u5e26\u6765\u4e86\u5de8\u5927\u7684\u521b\u9020\u529b\u6f5c\u529b\u548c\u5783\u573e\u7684\u5de8\u5927\u6f5c\u529b\uff0c\u641c\u7d22\u5728\u7ebf\u6587\u732e\u4f60\u4f1a\u53d1\u73b0\u4e24\u8005\u90fd\u6709\u5f88\u591a\u3002\u5728\u8bbe\u8ba1\u56fe\u5f62\u6765\u4f20\u8fbe\u6982\u7387\u65b9\u9762\u6ca1\u6709\u786c\u6027\u89c4\u5b9a\uff0c\u4f46\u5982\u679c\u4f60\u7262\u8bb0\u89c2\u4f17\u7684\u9700\u6c42\u548c\u80fd\u529b\uff0c\u6ca1\u6709\u504f\u89c1\u5730\u6e05\u6670\u5730\u5448\u73b0\u4f60\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u53d9\u4e8b\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u6765\u53d1\u5c55\uff0c\u90a3\u4e48\u4f60\u7684\u53ef\u89c6\u5316\u5c31\u6709\u66f4\u597d\u7684\u6210\u529f\u673a\u4f1a\u3002\n\u6709\u5173\u53ef\u89c6\u5316\u6982\u7387\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1David Spiegelhalter\u3001Mike Pearson\u548cIan Short\u5728\u201c\u79d1\u5b66\u201d\u7b2c333\u5377\u4e0a\u53d1\u8868\u7684\u201c\u53ef\u89c6\u5316\u672a\u6765\u7684\u4e0d\u786e\u5b9a\u6027\u201d\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u4e86\u89e3\u4e0d\u786e\u5b9a\u6027\u7684\u94fe\u63a5\uff0c\u5728\u4e0d\u8ba2\u9605\u201c\u79d1\u5b66\u201d\u7684\u60c5\u51b5\u4e0b\u8bbf\u95ee\u8fd9\u7bc7\u8bba\u6587\u3002\n\u4f0a\u6069\u00b7\u8096\u7279\u662f\u5f00\u653e\u5927\u5b66\u7684\u6570\u5b66\u8bb2\u5e08\u3002\u4ed6\u7684\u6570\u5b66\u5174\u8da3\u5305\u62ec\u590d\u6570\u5206\u6790\u3001\u8fde\u5206\u5f0f\u3001\u52a8\u529b\u7cfb\u7edf\u3001\u53cc\u66f2\u51e0\u4f55\u548c\u4e0d\u786e\u5b9a\u6027\u3002\nMike Pearson\u662f\u8d1f\u8d23maths.org\u7f51\u7ad9\u7684\u6280\u672f\u6781\u5ba2\uff0c\u4ed6\u5bf9\u4f7f\u7528\u53ef\u89c6\u5316\u548c\u52a8\u753b\u4ea4\u6d41\u6570\u5b66\u548c\u7edf\u8ba1\u6570\u636e\u5f88\u611f\u5174\u8da3\u3002\u4ed6\u66fe\u7ecf\u662fPlus\u7684\u7ef4\u62a4\u8005\uff0c\u4f46\u73b0\u5728\u66f4\u591a\u5730\u53c2\u4e0e\u5230\u6211\u4eec\u7684\u59ca\u59b9\u7f51\u7ad9NRICH\u548c\u7406\u89e3\u4e0d\u786e\u5b9a\u6027\u7f51\u7ad9\u4e2d\u3002", "note_en": "Probabilities and statistics: they are everywhere, but they are hard to understand and can be counter-intuitive. So what&#39;s the best way of communicating them to an audience that doesn&#39;t have the time, desire, or background to get stuck into the numbers? Ian Short explores modern visualisation techniques and finds that the right picture really can be worth a thousand words.\n    What is the probability that a woman who tests positive for breast cancer actually has breast cancer? To pin this question down, let us consider a population in which 1% of women have breast cancer, and a mammography test which has a 90% chance of returning a correct result. That is, if a woman has cancer then there is a 90% chance the test will be positive, and if a woman does not have cancer then there is a 90% chance the test will be negative. Suppose a particular woman tests positive; what is the probability that she has breast cancer? The answer may seem surprising.\n  Figure 1: A tree diagram describing the outcomes of a mammography test. (Click  here to see a larger version of this image.)\n  A tree diagram, such as figure 1, can help answer this question. The data used in the tree diagram is from the UK  Breast Cancer Screening Programme. Figure 1 begins at the top with 1000 women. The number 1000 is chosen for convenience and simplicity. Moving down, the tree splits in two: 10 women (or 1%) on the left have breast cancer, and 990 women (or 99%) on the right do not have breast cancer. Continuing on, the 10 women with breast cancer split into 9 women (or 90%) who correctly test positive, and 1 woman (or 10%) who incorrectly tests negative. The 990 women without breast cancer split into 99 women (or 10%) who incorrectly test positive, and 891 women (or 90%) who correctly test negative. From the bottom row we see that of the women who test positive, 9 have breast cancer and 99 do not have breast cancer. Therefore the probability that a woman who tests positive for breast cancer actually has breast cancer is 9 in 108, which is roughly an 8% chance.\n    Visualisations like the graph in figure 1 can enliven information, grab people&#39;s attention, inspire, and influence. They can summarise data concisely, illuminate hidden patterns, and provide instruction for those with poor numeracy. Many graphics have these features, but those used to represent probabilities may be of particular importance when the information is complex and the circumstances highly significant.\n  The complex set of probabilities in the mammography test question is explained simply and attractively in figure 1, which guides you through the logic necessary to dissect the problem. This figure has many desirable properties. It is clear and free from clutter. The icons are suggestive, and are labelled with numbers and words. A natural choice of population size, namely 1000, ensures the arithmetic is simple, and all outcomes of the test are considered. Finally, and importantly, the graphic is accompanied by a narrative, which describes how to interpret the data.\n  Figure 2 is an icon display which illustrates the same information as figure 1, but this time each of the 1000 women is represented by an icon. The women in the box are those that test positive for breast cancer, and the 9 red women in the box are those that test positive and actually do have cancer.\n    It is useful to have multiple representations of the same set of probabilities, because different graphic formats appeal to different people. Icon displays such as figure 2 are used increasingly, because they can describe probabilities using numbers that are easy to handle. In the 1920s and 1930s the Austrian philosopher  Otto Neurath and his collaborators popularised the use of icons as a means of communicating information. They created a picture language called   Isotype, in which multiple identical icons were often used to represent numbers.\n    A graphic from Neurath&#39;s school is shown in figure 3. Each row contains twenty women icons, and each icon represents 5% of the population of the corresponding country. The most striking message of the graphic is the large proportion of unemployed women. The data of this image could also be represented in a table of numbers (in fact it would be useful to accompany this graphic by such a table); however, the graphic communicates the statistics with far more force and immediacy than a table. We instantly receive a general impression of the distribution of jobs, even if our mathematics is poor. Other celebrated graphical representations of data include Charles Joseph Minard&#39;s  flow map of Napoleon&#39;s tragic campaign into Russia in 1812 (see  the Understanding Uncertainty website for animated versions of the data) and  Florence Nightingale&#39;s  polar area charts (again, see  Understanding Uncertainty for an animated version).\n  Figure 3 is a visualisation of historical data rather than probabilities, but statistical tools such as icon bar charts, block bar charts, and pie charts can certainly be used to communicate probabilities. The stacked bar chart in figure 4 represents the benefits over ten years of taking statins (for a healthy 57 year old man). There are two clearly labelled bars; one represents all possible outcomes for 100 similar men who do not take statins, and the other represents all possible outcomes for 100 similar men who take statins. The key difference between the two bars is the yellow segment in the lower bar, which represents the 3 out of 100 men who take statins and do not suffer a heart attack or stroke, and who would have suffered a heart attack or stroke had they not taken statins.\n  Figure 4: A stacked bar chart with probabilities that a healthy 57 year old man has a heart attack or stroke in the next ten years.\n  Often the need for graphics increases with the complexity of probabilities. Hurricane Irene recently swept through the east coast of America. When the hurricane was located around the Bahamas, meteorologists ran a computer model to predict its most likely path. The spaghetti plot shown in figure 5 is created by applying the model with several slightly different sets of initial conditions. The graphic indicates that there are multiple possible futures. Specific probabilities are not supplied because the image appeared only briefly in an  NBC News bulletin. The message was communicated instantly and brilliantly.\n        Figure 6: Three-dimensional bar chart of percentage chances of the top ten tennis players winning the men&#39;s singles tournament at Wimbledon 2011 (odds taken from  William Hill on 1 June 2011).\n  The chart in figure 6 represents the probabilities (given as percentages) of the top ten male tennis players winning the men&#39;s singles tournament at Wimbledon 2011. The probabilities were adapted from odds supplied by  William Hill. Djokovic was the eventual winner, and in fact he was the favourite shortly before the tournament began (later in June 2011). It is reasonable to represent these percentages in a bar chart, and this chart is clearly labelled. The information is obscured, however, by the three-dimensional effect, the unnecessary use of cones, and the peculiar perspective. We can summarise these negative features as  chart junk. They add useless clutter to what could have been an informative chart. Figure 7 is an improved version of the graph without the chart junk.\n  Figure 7: Bar chart of percentage chances of the top ten tennis players winning the men&#39;s singles tournament at Wimbledon 2011 (odds taken from  William Hill on 1 June 2011).\n  The case for minimalism in graphics such as figure 7 has been argued strongly by the influential American statistician  Edward Tufte. His books, including   The Visual Display of Quantitative Information, are highly commended.\n  The pie chart of figure 8, which is a static part of an impressive interactive display from  Kick Off, exhibits probabilities of the outcome of a football match between Liverpool and Manchester United played on 15 October 2011. (The chart was extracted on 8 October 2011.) It is attractive, and appears artificially sophisticated, but it is misleading. The size of each slice, determined by its angle at the centre, represents the probability of a particular score. This is fine, and is the principle on which most pie charts are based. Figure 8 also includes, however, a collection of strongly coloured wedges of varying radii towards the centre of the image. These wedges represent the same probabilities as the slices in which they lie. Unusually, the radius of a wedge, rather than the area of a wedge, is used to measure the probability. This has peculiar implications; for example, compare the wedge for a 1-1 draw (12%) with the wedge for a 0-0 draw (6%). Despite being far larger, the 1-1 wedge represents only twice the probability of a 0-0 wedge. The graphic would be clearer without the inner collection of wedges.\n  Figure 8. Pie chart with probabilities of outcome of Liverpool versus Manchester United football match on 15 October 2011 (image from  Kick Off).\n  There are other more subtle pitfalls in presenting probabilities, which apply to verbal, numerical, and graphical communication. The audience might have a poor grasp of mathematics, and be confused by fractions and numeric comparisons. They will also have preconceptions and bias that may lead them to act irrationally. Consider for instance the issue of  framing, which concerns the way that probabilities are presented. An example of framing is provided by a recent slogan on the London Underground, &#34;99% of young people do not commit crimes&#34;, which could alternatively have been phrased &#34;1% of young people commit crimes&#34;. When creating a simple bar graph of this statistic you must choose whether your bar should represent the 99% or the 1%, and the choice of framing will influence those who view the graphic. In this case an icon array of 100 icons, with one distinguished icon, is more appropriate, because it includes all possible outcomes, and gives them equal weight. Understanding Uncertainty has an  interactive tool that explores framing.\n    Advances in computing power and the internet have led to an explosion in graphical representations of data, or  infographics. Massive quantities of online data are available to the public, who can create visualisations and immediately disseminate them on a huge scale. These visualisations need not be static; they can be dynamic and interactive, which opens up a world of previously inconceivable opportunities (for both harm and benefit). Designers such as  Ben Fry and  Dave McCandless, and newspapers such as   The New York Times and   The Guardian, lead the way in visualising data.   Protovis and   D3 provide tools for creating your own visualisations, and   Many Eyes and   tableau public generate statistical graphics automatically once they receive data.\n  Figure 9: Word cloud (left) and tree map (right) representing the probabilities of the top 24 male tennis players winning the men&#39;s singles tournament at Wimbledon 2011.\n  The data used to generate figure 9 is the same as that used to generate figure 6 (taken from William Hill), except this time we used the top 24 players rather than the top 10. These graphics were created by entering data from William Hill into  Many Eyes, and then embellishing the output. The font size of the word cloud is proportional to the chance of a player winning the title. A deficiency of using word clouds in this fashion is that you only see how probabilities of different players compare; you do not see the actual values of probabilities. Also, long words receive more space than short words! In the tree map, the area of a block represents the probability of that player winning. This tree map could be improved by labelling each block with the probability it represents.\n  Interactive graphics have great potential in the field of visualising probabilities, and visualising data in general. Hans Rosling&#39;s now famous   Gapminder handles complex data sets beautifully, and it is particularly instructive when accompanied by a narrative.  Understanding Uncertainty has a variety of interactive tools for handling probabilities. In general, interactive graphics encourage users to engage with visualisations actively, rather than passively, which helps understanding and retention. Tool-tips, hyperlinks, and other dynamic features can enrich interactive graphics, and help them adapt to user preferences. The  American Council on Science and Health has created an interactive tool called   Riskometer, shown in figure 10, which includes many of these features. It describes causes of death in the USA, and because the associated probabilities are small, there is a zooming facility, which is illustrated with a magnifying glass.\n  Figure 10: Magnified linear scale comparing deaths from pollution with other causes (image from  Riskometer.org).\n  With these exciting developments in computing and infographics comes huge potential for creativity, and huge potential for junk, and searching the on-line literature you will find plenty of both. There are no hard and fast rules for designing graphics to communicate probabilities, but if you keep the needs and abilities of the audience in mind, present your information clearly without bias, use narratives, and develop through experiment, then your visualisation has a better chance of success.\n  For more on visualising probabilities, see   Visualizing uncertainty about the future, by David Spiegelhalter, Mike Pearson, and Ian Short, published in volume 333 of  Science. You can access the paper without subscription to  Science by following the links on  Understanding Uncertainty.\n       Ian Short is a lecturer in mathematics at the  Open University. His mathematical interests include complex analysis, continued fractions, dynamical systems, hyperbolic geometry, and uncertainty.\n  Mike Pearson is a a techno-geek responsible for  maths.org sites with interests in communicating maths and stats using visualisations and animations.\rHe was a one-time  Plus maintainer, but is now more involved with our sister site  NRICH and the  Understanding Uncertainty website.", "posttime": "2020-05-17 09:53:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u89c6\u5316,\u4e0d\u786e\u5b9a\u6027,uncertainty,\u6982\u7387", "title": "\u7406\u89e3\u4e0d\u786e\u5b9a\u6027\uff1a\u53ef\u89c6\u5316\u6982\u7387", "title_en": "Understanding uncertainty: Visualising probabilities", "transed": 1, "url": "https://plus.maths.org/content/understanding-uncertainty-visualising-probabilities", "via": "", "real_tags": ["\u53ef\u89c6\u5316", "\u4e0d\u786e\u5b9a\u6027", "\u6982\u7387"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002481, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u5c06\u4e66\u5e97\u548c\u501f\u9605\u56fe\u4e66\u9986\u838e\u58eb\u6bd4\u4e9a\u548c\u516c\u53f8\u7684\u8bb0\u5f55\u6570\u5b57\u5316\u7684\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u6247\u4e86\u89e3\u7235\u58eb\u4e50\u65f6\u4ee3\u5df4\u9ece\u7684\u7a97\u53e3\uff0c\u63ed\u793a\u4e86\u5305\u62ec\u6b27\u5185\u65af\u7279\u00b7\u6d77\u660e\u5a01(Ernest Hemingway)\u3001\u8a79\u59c6\u65af\u00b7\u4e54\u4f0a\u65af(James Joyce)\u548c\u683c\u7279\u9c81\u5fb7\u00b7\u65af\u5766(Gertrude Stein)\u5728\u5185\u7684\u6587\u5b66\u5de8\u5934\u7684\u9605\u8bfb\u4e60\u60ef\u3002\n\u624b\u5199\u5361\u7247\u663e\u793a\uff0c1925\u5e74\uff0c\u4e5f\u5c31\u662f\u6d77\u660e\u5a01\u5199\u5c0f\u8bf4\u201c\u8001\u4eba\u4e0e\u6d77\u201d\u7684\u524d\u51e0\u5341\u5e74\uff0c\u4ed6\u501f\u7528\u4e86\u7ea6\u4e66\u4e9a\u00b7\u65af\u6d1b\u514b\u59c6\u7684\u56de\u5fc6\u5f55\u201c\u72ec\u81ea\u73af\u6e38\u4e16\u754c\u201d\u3002\u5546\u5e97\u5e97\u5458\u8349\u8349\u5199\u4e0b\u7684\u8bb0\u5f55\u663e\u793a\uff0c\u65af\u5766\u662f\u5982\u4f55\u5c06\u667a\u529b\u8ffd\u6c42\u4e0e\u8f83\u8f7b\u677e\u7684\u9605\u8bfb\u76f8\u5339\u914d\u7684\uff0c\u5176\u4e2d\u5305\u62ec\u7f57\u65af\u00b7\u514b\u7f57\u65af\u83f2\u5c14\u5fb7(Tth Crosfield)\u7684\u5386\u53f2\u6d6a\u6f2b\u5c0f\u8bf4\u201c\u53e4\u4ee3\u4e4b\u604b\u201d\u548c\u5b89\u5fb7\u9c81\u00b7\u82cf\u5854\u5c14(Andrew Soutar)\u7684\u5947\u5e7b\u5c0f\u8bf4\u201c\u5e73\u7b49\u5c9b\u201d(Equity Island)\u3002\n1919\u5e74\uff0c\u5f53\u897f\u5c14\u7ef4\u4e9a\u00b7\u6bd4\u5947\u5f00\u8bbe\u838e\u58eb\u6bd4\u4e9a\u5267\u56e2\u65f6\uff0c\u82f1\u6587\u4e66\u5f88\u8d35\uff0c\u5728\u5df4\u9ece\u5f88\u96be\u4e70\u5230\u3002\u8702\u62e5\u5230\u6587\u5b66\u73b0\u4ee3\u4e3b\u4e49\u4e4b\u90fd\u7684\u4f5c\u5bb6\u548c\u827a\u672f\u5bb6\u4e89\u5148\u6050\u540e\u5730\u7b7e\u7ea6\u6bd4\u5947\u7684\u56fe\u4e66\u9986\u670d\u52a1\u3002\u9664\u4e86\u6d77\u660e\u5a01\u548c\u65af\u5766\uff0c\u4ece\u827e\u6885\u00b7\u585e\u8d5b\u5c14(Aim\u00e9C\u00e9saire)\u5230\u897f\u8499\u59ae\u00b7\u5fb7\u00b7\u6ce2\u4f0f\u5a03(Simone De Beauva)\u3001\u96c5\u514b\u00b7\u62c9\u5eb7(Jacques Lacan)\u3001\u6c83\u5c14\u7279\u00b7\u672c\u6770\u660e(Walter Benjamin)\u548c\u4e54\u4f0a\u65af(Joyce)\u7b49\u4f5c\u5bb6\u90fd\u6210\u4e3a\u4e86\u4f1a\u5458--\u4ed6\u4eec\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e00\u5e45\u6124\u6012\u7684\u838e\u58eb\u6bd4\u4e9a\u62d4\u6389\u4ed6\u7684\u5934\u53d1\u7684\u56fe\u753b\u800c\u88ab\u8ffd\u6367\u3002\n1922\u5e74\uff0c\u6bd4\u5947\u51fa\u7248\u4e86\u4e54\u4f0a\u65af\u5907\u53d7\u4e89\u8bae\u7684\u5c0f\u8bf4\u201c\u5c24\u5229\u897f\u65af\u201d\uff0c\u5e76\u5c06\u8be5\u5e97\u4e00\u76f4\u5f00\u52301941\u5e74\uff0c\u5f53\u65f6\u5979\u62d2\u7edd\u5c06\u6700\u540e\u4e00\u672c\u4e54\u4f0a\u65af\u7684\u201c\u82ac\u5c3c\u6839\u5b88\u7075\u201d\u5356\u7ed9\u4e00\u540d\u7eb3\u7cb9\u519b\u5b98\uff0c\u56e0\u6b64\u88ab\u8feb\u5173\u95e8\u30021951\u5e74\uff0c\u4e54\u6cbb\u00b7\u60e0\u7279\u66fc(George Whitman)\u5f00\u4e86\u4e00\u5bb6\u65b0\u7684\u5546\u5e97\uff0c\u6bd4\u5947\u7684\u8bba\u6587\u4e8e1964\u5e74\u88ab\u666e\u6797\u65af\u987f\u5927\u5b66(Princeton University)\u6536\u8d2d\u3002\u81ea2014\u5e74\u4ee5\u6765\uff0c\u8be5\u5927\u5b66\u4e00\u76f4\u81f4\u529b\u4e8e\u5c06\u8fd9\u4e2a\u5e9e\u5927\u7684\u6863\u6848\u9986\u7684\u8bb0\u5f55\u6570\u5b57\u5316\uff0c\u8be5\u6863\u6848\u9986\u957f\u8fbe180\u4e2a\u76d2\u5b50\uff0c\u4f5c\u4e3a\u838e\u58eb\u6bd4\u4e9a\u4e0e\u516c\u53f8\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u7814\u7a76\u4eba\u5458\u9996\u6b21\u53ef\u4ee5\u5728\u7f51\u4e0a\u83b7\u5f97\u8fd9\u4e9b\u8bb0\u5f55\u3002\n\u666e\u6797\u65af\u987f\u5927\u5b66\u82f1\u8bed\u526f\u6559\u6388\u3001\u8be5\u9879\u76ee\u8d1f\u8d23\u4eba\u7ea6\u4e66\u4e9a\u00b7\u79d1\u5ef7(Joshua Kotin)\u8868\u793a\uff0c\u6bd4\u5947\u662f\u4e00\u4e2a\u201c\u4e00\u4e1d\u4e0d\u82df\u3001\u6267\u7740\u4e8e\u8bb0\u5f55\u7684\u4eba\u201d\uff0c\u201c\u6211\u4eec\u73b0\u5728\u624d\u5728\u5f00\u53d1\u6570\u5b57\u5de5\u5177\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u7406\u89e3\u548c\u5b9e\u73b0\u6863\u6848\u7684\u6f5c\u529b\u201d\u3002\n\u4ed6\u8bf4\uff1a\u201c\u8fd8\u6709\u5f88\u591a\u5b9d\u85cf\u6709\u5f85\u53d1\u6398\u3002\u5982\u679c\u4f60\u628a\u6240\u6709\u7684\u6587\u4ef6\u90fd\u5806\u5728\u6863\u6848\u9986\u91cc\uff0c\u90a3\u5c06\u662f\u4e00\u5ea778\u82f1\u5c3a\u9ad8\u7684\u5854\u697c\uff0c\u201c\u4ed6\u8bf4\u3002\u201c\u6211\u4ecd\u5728\u5bfb\u627e\u5b9d\u85cf--\u4f8b\u5982\uff0c\u5c31\u5728\u75ab\u60c5\u7206\u53d1\u524d\uff0c\u6211\u53d1\u73b0\u4e86\u4e54\u6cbb\u00b7\u5b89\u6cf0\u5c14(George Antheil)\u7684\u82ad\u857e\u821e\u5267\u201d\u9ea6\u5361\u5c3c\u514b\u201c(M\u00e9canique\uff0c1924\u5e74)\u7684\u4e00\u4efd\u624b\u7a3f\uff0c\u5b89\u6cf0\u5c14\u628a\u5b83\u9001\u7ed9\u4e86\u6bd4\u5947\u3002\u201d\n\u8bb0\u5f55\u663e\u793a\uff0c\u6d77\u660e\u5a01\u501f\u4e8690\u591a\u672c\u4e66\uff0c\u4ecePT Barnum\u7684\u81ea\u4f20\u52301929\u5e749\u6708\u4ed6\u501f\u4e868\u5929\u7684\u201c\u67e5\u592a\u83b1\u592b\u4eba\u7684\u60c5\u4eba\u201d\uff0c\u4e5f\u5c31\u662fDH Lawrence\u7684\u5c0f\u8bf4\u5728\u6cd5\u56fd\u9996\u6b21\u51fa\u7248\u7684\u90a3\u4e00\u5e74\uff0c\u4e5f\u5c31\u662f\u5b83\u5728\u7f8e\u56fd\u51fa\u7248\u768430\u5e74\u524d\u30021926\u5e74\uff0c\u4ed6\u501f\u4e86\u4e00\u672c\u6c64\u59c6\u00b7\u743c\u65af\u7684\u201c\u6597\u725b\u201d--\u516c\u725b\u5954\u8dd1\u5728\u4ed61926\u5e74\u7684\u5c0f\u8bf4\u201c\u592a\u9633\u7167\u5e38\u5347\u8d77\u201d\u4e2d\u626e\u6f14\u4e86\u4e2d\u5fc3\u89d2\u8272\u3002\u4ed6\u8fd8\u5728\u5546\u5e97\u4e70\u4e86\u4e00\u672c\u81ea\u5df1\u7684\u5c0f\u8bf4\u201c\u6c38\u522b\u4e86\uff0c\u6b66\u5668\u201d\u3002\n\u201c\u6211\u4eec\u60f3\u4e86\u89e3\u5929\u624d\uff0c\u201d\u79d1\u5ef7\u8bf4\u3002\u201c\u6d77\u660e\u5a01\u8bfb\u7684\u4e1c\u897f\u80fd\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u4ed6\u5199\u7684\u4e1c\u897f\u5417\uff1f\u4e3a\u4ec0\u4e48\u5b83\u5982\u6b64\u4f1f\u5927\uff1f\u201d\u5c06\u6211\u4eec\u7684\u65e5\u5e38\u505a\u6cd5-\u6211\u4eec\u4ece\u5f53\u5730\u56fe\u4e66\u9986\u501f\u7684\u4e1c\u897f\uff0c\u4e9a\u9a6c\u900a\u8d2d\u7269\u8f66\u91cc\u7684\u4e1c\u897f-\u4e0e\u8fc7\u53bb\u4eba\u4eec\u7684\u505a\u6cd5\u8054\u7cfb\u8d77\u6765\uff0c\u4e5f\u662f\u5f88\u6709\u8da3\u7684\u3002\u4e86\u89e3\u4eba\u4eec\u9605\u8bfb\u7684\u5185\u5bb9\u548c\u65b9\u5f0f\u662f\u975e\u6cd5\u7684--\u6211\u4eec\u6b63\u5728\u5b66\u4e60\u4e00\u9879\u975e\u5e38\u79c1\u5bc6\u3001\u5b64\u72ec\u7684\u6d3b\u52a8\u3002\u201c\n\u4ed6\u8bf4\uff0c\u6709\u4e9b\u5531\u7247\u201c\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u6216\u4ee4\u4eba\u5fc3\u9178\u7684\u6545\u4e8b\u201d\u3002\u6c83\u5c14\u7279\u00b7\u672c\u6770\u660e(Walter Benjamin)\u5728\u53bb\u4e16\u524d\u4e0d\u4e45\u501f\u4e86\u4e24\u672c\u4e66\uff1a\u4e00\u672c\u5fb7\u82f1\u8bcd\u5178\uff0c\u4ee5\u53ca\u57f9\u6839\u52cb\u7235(Lord Bacon)\u7684\u7269\u7406\u548c\u5f62\u800c\u4e0a\u5b66\u8457\u4f5c\u3002\u5f53\u6cd5\u56fd\u843d\u5165\u5fb7\u56fd\u4eba\u624b\u4e2d\u65f6\uff0c\u672c\u6770\u660e\u9003\u79bb\u4e86\u5df4\u9ece\uff0c\u4f46\u5728\u897f\u73ed\u7259\u8b66\u65b9\u544a\u8bc9\u4ed6\u5c06\u88ab\u79fb\u4ea4\u7ed9\u76d6\u4e16\u592a\u4fdd\u540e\uff0c\u4ed6\u4e8e1940\u5e749\u6708\u81ea\u6740\u3002\n\u79d1\u5ef7\u63a5\u7740\u8bf4\uff0c\u6863\u6848\u5e26\u6765\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u8054\u7cfb\uff0c\u827e\u6885\u585e\u8428\u5c14(Aim\u00e9C\u00e9saire)\u201c\u501f\u7528\u548c\u518d\u501f\u7528\u54c8\u83b1\u59c6\u6587\u827a\u590d\u5174\u65f6\u671f\u7684\u8bd7\u4eba\uff1b\u96c5\u514b\u00b7\u62c9\u574e(Jacques Lacan)\u501f\u4e86\u4e00\u672c\u5173\u4e8e\u7231\u5c14\u5170\u5386\u53f2\u7684\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u4e66\uff0c\u56e0\u4e3a\u4ed6\u5728\u8bfb\u4e54\u4f0a\u65af\u7684\u201d\u5c24\u5229\u897f\u65af\u201c(Ulysses)\uff1b\u514b\u52b3\u5fb7\u00b7\u5361\u6d2a(Claude Cahun)-\u7528\u7c73\u52d2\u00b7\u9732\u897f\u00b7\u65bd\u6c83\u5e03(Mlle Lucie Schwob)-\u9605\u8bfb\u4ea8\u5229\u00b7\u8a79\u59c6\u65af(Henry James)\uff1b\u683c\u7279\u9c81\u5fb7\u00b7\u65af\u5766(Gertrude Ste\u3002\u6240\u4ee5\u5f88\u591a\u4eba\u540c\u65f6\u770b\u6240\u8c13\u7684\u9ad8\u96c5\u548c\u4f4e\u4fd7\u7684\u4f5c\u54c1\u3002\u79d1\u5ef7\u8865\u5145\u8bf4\uff0c\u6863\u6848\u8fd8\u63ed\u793a\u4e86\u56fe\u4e66\u9986\u4e2d\u90a3\u4e9b\u9c9c\u4e3a\u4eba\u77e5\u7684\u6210\u5458\uff0c\u4ed6\u4eec\u7684\u4eba\u6570\u6709\u6570\u5343\u4eba\u3002\u201c\u6211\u559c\u6b22\u6210\u5458\u7231\u4e3d\u4e1d\u00b7\u57fa\u4f26\u3002\u5979\u662f\u56fe\u4e66\u9986\u91cc\u6700\u6d3b\u8dc3\u7684\u6210\u5458\u3002\u5979\u572818\u5e74\u7684\u65f6\u95f4\u91cc\u501f\u4e86\u6570\u767e\u672c\u4e66\u3002\u201c\u4ed6\u8bf4\u3002\u201c\u8fd9\u4e2a\u9879\u76ee\u8ba9\u6211\u4eec\u4e86\u89e3\u5e76\u8bb0\u4f4f\u4e86\u8fd9\u4e9b\u4eba\u3002\u201d\n\u7f8e\u56fd\u56fe\u4e66\u9986\u534f\u4f1a(American Library Association)\u8981\u6c42\u56fe\u4e66\u9986\u9500\u6bc1\u987e\u5ba2\u8bb0\u5f55\uff0c\u4ee5\u4fdd\u62a4\u4ed6\u4eec\u7684\u9690\u79c1\uff1b\u838e\u58eb\u6bd4\u4e9a\u548c\u838e\u58eb\u6bd4\u4e9a\u516c\u53f8\u5e76\u4e0d\u96b6\u5c5e\u4e8e\u7f8e\u56fd\u56fd\u5bb6\u56fe\u4e66\u9986\u534f\u4f1a\uff0c\u800c\u6bd4\u5947\u4fdd\u7559\u4e86\u4e00\u5207\u3002\u201c\u5979\u53ef\u80fd\u5e94\u8be5\u9500\u6bc1\u5979\u7684\u5531\u7247\uff0c\u201d\u79d1\u5ef7\u8bf4\uff0c\u201c\u4f46\u6211\u5f88\u9ad8\u5174\u5979\u6ca1\u6709\u8fd9\u4e48\u505a\u3002\u201d", "note_en": "A project to digitise records from the bookshop and lending library Shakespeare and Company offers a window into Paris during the jazz age, revealing the reading habits of literary titans including  Ernest Hemingway,  James Joyce and  Gertrude Stein.\n The handwritten cards show that in 1925, decades before he wrote his novel  The Old Man and the Sea, Hemingway was borrowing Joshua Slocum\u2019s memoir, Sailing Alone Around the World. And the records, scrawled by the shop\u2019s clerks, chart how Stein matched intellectual pursuits with lighter reading including TH Crosfield\u2019s historical romance A Love in Ancient Days, and Andrew Soutar\u2019s fantasy Equality Island.\n When Sylvia Beach opened Shakespeare and Company in 1919, English-language books were expensive and hard to find in Paris. Writers and artists who had flocked to the capital of literary modernism rushed to sign up for Beach\u2019s library service. Along with Hemingway and Stein, writers from Aim\u00e9 C\u00e9saire to  Simone de Beauvoir, Jacques Lacan,  Walter Benjamin and  Joyce all became members \u2013 and would have been chased up for late returns with  a drawing of an exasperated Shakespeare pulling out his hair.\n Beach published Joyce\u2019s controversial novel Ulysses in 1922, and kept the shop open until 1941, when she was forced to close after refusing to sell her last copy of Joyce\u2019s  Finnegans Wake to a Nazi officer.  George Whitman opened a new incarnation of the shop in 1951, and Beach\u2019s papers were acquired by Princeton University in 1964. The university has been working since 2014 to digitise records from the vast archive, which runs to 180 boxes, making them available to researchers online for the first time as part of  the Shakespeare and Company project.\n Joshua Kotin, an associate professor of English at Princeton and the project\u2019s director, said that Beach was a \u201cmeticulous, obsessive record keeper\u201d, and that \u201cwe are only now developing digital tools that will allow us to understand and realise the archive\u2019s potential\u201d.\n \u201cThere are so many treasures left to be discovered. If you stack all the papers in the archive, it would be a 78-foot tower,\u201d he said. \u201cI\u2019m still finding treasures \u2013 for example, just before the pandemic hit, I found a manuscript for George Antheil\u2019s Ballet M\u00e9canique (1924), which Antheil gave to Beach.\u201d\n  The records reveal that Hemingway borrowed more than 90 books, from PT Barnum\u2019s autobiography to Lady Chatterley\u2019s Lover, which he checked out for eight days in September 1929 \u2013 the year DH Lawrence\u2019s novel first appeared in France, 30 years before it was published in the US. In 1926, he borrowed a copy of Tom Jones\u2019s Bull Fighting \u2013 the running of the bulls played a central part in his  1926 novel The Sun Also Rises. He also bought a copy of his own novel A Farewell to Arms at the store.\n \u201cWe want to understand genius,\u201d Kotin said. \u201cDoes what Hemingway read help us understand what he wrote and why it is so great? It is also fascinating to connect our everyday practices \u2013 what we borrow from our local library, what\u2019s in our Amazon cart \u2013 to the practices of people in the past. And there\u2019s something illicit about learning about what and how people read \u2013 we\u2019re learning about a very private, solitary activity.\u201d\n Some of the records, he said, \u201ctell a surprising or poignant story\u201d. Shortly before he died, Walter Benjamin borrowed two books: a German-English dictionary, and Lord Bacon\u2019s Physical and Metaphysical Works. When France fell to the Germans, Benjamin fled Paris, but he killed himself in September 1940, after Spanish police told him he would be handed over to the Gestapo.\n The archive makes unexpected connections, Kotin continued, with Aim\u00e9 C\u00e9saire \u201cborrowing and re-borrowing the poets of the Harlem Renaissance; Jacques Lacan borrowing an obscure book about Irish history because he\u2019s reading Joyce\u2019s Ulysses; Claude Cahun \u2013 under the name Mlle Lucie Schwob \u2013 reading Henry James; Gertrude Stein reading fantasy novels. So many people read so-called high-brow and low-brow work at the same time.\u201d  The archive also sheds light on the lesser-known members of the library, Kotin added, who numbered in the thousands. \u201cI love the member  Alice Killen. She was the most active member of the library. She borrowed hundreds over books over 18 years,\u201d he said. \u201cThe project allows us to learn about and remember these people.\u201d\n The American Library Association requires libraries to destroy patron records to protect their privacy; Shakespeare and Company was not affiliated with the ALA, and Beach kept everything. \u201cShe probably should have destroyed her records,\u201d Kotin said, \u201cbut I\u2019m happy that she didn\u2019t.\u201d", "posttime": "2020-05-17 09:52:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9605\u8bfb,paris,\u8bb0\u5f55", "title": "\u5df4\u9ece\u4f20\u5947\u4e66\u5e97\u63ed\u793a\u4e86\u6770\u51fa\u5ba2\u6237\u7684\u9605\u8bfb\u4e60\u60ef", "title_en": "Legendary Paris bookshop reveals reading habits of illustrious clientele", "transed": 1, "url": "https://www.theguardian.com/books/2020/may/15/legendary-paris-bookshop-reveals-reading-habits-ernest-hemingway-gertrude-stein-shakespeare-and-company", "via": "", "real_tags": ["\u9605\u8bfb", "paris", "\u8bb0\u5f55"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002480, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u8fc7\uff0c\u8ba9\u6211\u89e3\u91ca\u4e00\u4e0b\u3002\u4e0a\u5468\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684APL\u9053\u6b49\u5e16\u5b50\u3002\u5b83\u6df1\u6df1\u5730\u89e6\u52a8\u4e86\u6211\u7684\u5fc3\u5f26\uff0c\u5e76\u7ed9\u4e86\u6211\u4e00\u79cd\u51b2\u52a8\uff0c\u60f3\u8981\u518d\u6b21\u5c1d\u8bd5\u7406\u89e3\u8fd9\u79cd\u7f8e\u4e3d\u800c\u5947\u602a\u7684\u8bed\u8a00\u3002\n\u6211(\u6709\u70b9\u51fa\u4e4e\u610f\u6599\u5730)\u53d1\u73b0\uff0c\u9664\u4e86\u4f7f\u7528\u5e7f\u6cdb\u7684\u5b57\u7b26\u96c6\u548c\u6781\u7aef\u7b80\u6d01\u4e4b\u5916\uff0cAPL\u8fd8\u6709\u4e24\u4e2a\u4e0eRuby\u4e00\u70b9\u4e5f\u4e0d\u964c\u751f\u7684\u4e3b\u8981\u7279\u6027\uff1a\u901a\u8fc7\u64cd\u4f5c\u94fe\u63a5\u8fdb\u884c\u8ba1\u7b97\uff0c\u4ee5\u53ca\u9002\u5408\u4e8e\u6240\u8ff0\u94fe\u63a5\u7684\u6269\u5c55\u7684\u6570\u7ec4\u64cd\u4f5c\u5e93(\u5728Ruby\u4e2d\uff0c\u5b83\u4eec\u7531Enumerable\u6a21\u5757\u8868\u793a)\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u4e00\u4e9bAPL\u65b9\u6cd5\u548c\u793a\u4f8b\u53ef\u4ee5\u975e\u5e38\u76f4\u63a5\u5730\u8f6c\u6362\u4e3aRuby\uff0c\u8fd9\u5c06\u662f\u60ef\u7528\u7684Ruby\u3002\u4e3a\u4e86\u6311\u6218\u8fd9\u79cd\u611f\u89c9\uff0c\u6211\u5c1d\u8bd5\u7ffb\u8bd1\u8457\u540d\u7684APL\u5355\u884c\u4ee3\u7801Conway\u7684Game of Life\u5b9e\u73b0\uff0c\u5e76\u6210\u529f\u5730\u5728\u4e00\u6761Ruby\u8bed\u53e5\u4e2d\u5b9e\u73b0\u4e86GOL\u3002\n\u5f53\u7136\uff0c\u5b9e\u73b0\u9700\u8981\u201c\u6570\u5b66\u6570\u7ec4\u201d\u7684\u6982\u5ff5\uff0c\u4e0eAPL\u7684\u6982\u5ff5\u76f8\u5339\u914d\uff0c\u6240\u4ee5\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u662f\u201c\u4e00\u6761\u8bed\u53e5\u52a0\u652f\u6301\u7c7b\u201d\uff0c\u4f46\u6211\u4ecd\u7136\u503e\u5411\u4e8e\u5c06\u5176\u89c6\u4e3a\u201c\u4e00\u6761\u8bed\u53e5\u201d\u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u5b9e\u73b0\u7684\u7c7b\u662f\u901a\u7528\u7684(\u6709\u70b9\u50cfNumo\uff1a\uff1aNarray)\uff0c\u5e76\u4e14\u6240\u4f7f\u7528\u7684\u64cd\u4f5c\u5bf9\u4efb\u4f55Rubyist\u6765\u8bf4\u90fd\u5f88\u719f\u6089\u3002\n\u8981\u7acb\u5373\u67e5\u770b\u6700\u7ec8\u5b9e\u73b0\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u56de\u8d2d\u3002\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5c06\u4e25\u683c\u6309\u7167APL\u7248\u672c\u4e2d\u7684\u89e3\u91ca\u6765\u5b8c\u6210\u5b9e\u73b0\u8fc7\u7a0b\u3002\n\u5728APL\u4e2d\uff0carray\u662f\u4e00\u4e2a\u6570\u5b66\u6570\u7ec4\uff1a\u5b83\u662f\u4e00\u4e2a\u7531\u6807\u91cf\u7ec4\u6210\u7684\u77e9\u5f62\u591a\u7ef4\u77e9\u9635\u3002\u5728Ruby\u4ee3\u7801\u4e2d\u7528APL\uff1a\uff1aAry\u8868\u793a\uff0c\u5728\u4e0b\u9762\u7684\u89e3\u91ca\u4e2d\u7b80\u79f0\u4e3aAA\u3002\n\u6807\u91cf\u662f\u6570\u5b57\u3001\u5b57\u7b26\u6216\u5176\u4ed6\u6570\u7ec4\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u5e94\u8be5\u6df7\u6dc6\u591a\u7ef4\u6570\u7ec4(\u77e9\u9635\uff0c\u5728\u67d0\u4e00\u7ef4\u65c1\u8fb9\u6709\u76f8\u7b49\u6570\u91cf\u7684\u5143\u7d20)\u548c\u5d4c\u5957\u6570\u7ec4\u3002\u793a\u4f8b\uff1a\n\u653e\u7f6eAA[1\uff0c2\uff0c3\uff0c4]\u3002RESHAPE(2\uff0c2)#1 2#3 4#--\u4e8c\u7ef4\u6570\u5b57\u77e9\u9635\u653e\u5165AA[AA[1\uff0c2]\uff0cAA[3\uff0c4]]#\u250c\u2500\u2510\u250c\u2500\u2510#\u25021 2\u2502\u25023 4\u2502#\u2514\u2500\u2518\u2514\u2500\u2518#--\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u4e00\u7ef4\u6570\u7ec4\u3002#\u6ce8\u610f\u5d4c\u5957\u6570\u7ec4\u5468\u56f4\u7684\u6846\u67b6\u6709\u52a9\u4e8e\u7406\u89e3\u5d4c\u5957\nA=AA[1\uff0c2]\u653e\u5165#1 2\u653e\u5165a\u3002WRAP#\u250c\u2500\u2510#\u250212\u2502#\u2514\u2500\u2518\u653e\u7f6e\u4e00\u4e2a\u3002\u5305\u8d77\u6765\u3002\u5c55\u5f00#1 2\u3002\n\u4e0e\u901a\u5e38\u7684\u6570\u5b66\u6570\u7ec4\u4e00\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u91cf(\u5982\u201c\u5c062\u52a0\u5230\u6bcf\u4e2a\u5143\u7d20\u201d)\u6216\u53e6\u4e00\u4e2a\u76f8\u540c\u5f62\u72b6\u7684\u6570\u7ec4(\u5982\u201c\u5c06\u6570\u7ec4A\u7684\u9879\u6dfb\u52a0\u5230\u6570\u7ec4B\u7684\u7c7b\u4f3c\u4f4d\u7f6e\u7684\u9879\u201d)\u6765\u6267\u884c\u6570\u5b66\u8fd0\u7b97\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u8ba9\u6211\u4eec\u4ece\u751f\u6d3b\u6e38\u620f\u7684\u7b2c\u4e00\u4ee3\u5f00\u59cb\u5427\uff1a\ncurrent_gen=aa[0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c0\uff0c1\uff0c1\uff0c0\uff0c0\uff0c1\uff0c1\uff0c0\uff0c0\uff0c0\uff0c0\uff0c1\uff0c0\uff0c0\uff0c0\uff0c1\uff0c0\uff0c0]\u3002RESHAPE(5\uff0c5)\u5c06CURRENT_GEN#0 0 0#0 0 1 1 0#0 1 1 0 0#0 0 1 0 0#0 0 0\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u521a\u521a\u521b\u5efa\u4e86\u4e00\u4e2a\u75311\u548c0\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u201c\u91cd\u5851\u201d\u4e3a5\u00d75\u7684\u4e8c\u7ef4\u77e9\u9635\u3002\n\u653e\u7f6ecurrent_gen\u3002hRotate(1)#0 0 0#0 1 1 0 0#1 1 0 0#0 1 0 0 0#0 0 0\u3002\n#hRotate\u53ea\u662f\u5c06\u6bcf\u884c\u4e2d\u7684\u503c\u5faa\u73af\u5411\u5de6\u79fb\u4f4d\uff0c\u7c7b\u4f3c\u4e8e(\u4ec5\u4e00\u7ef4)Array#Rotation of Ruby\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u751f\u6210\u65cb\u8f6c\u76843\u79cd\u53d8\u4f53\uff1a1\u79cd\u5411\u5de6\uff0c\u65e0\u4e00\u79cd\uff0c1\u79cd\u5411\u53f3\uff1a\n\u5f53\u524d\u4e00\u4ee3\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(AA[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)#\u250c\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502\u25020 0 0\u2502#\u25020 0 0 1 1 1\u2502\u25020 0 1 1 0\u2502\u25020 1 1 0 0\u2502#\u25020 0 1 1 0\u2502\u25020 1 1 0 0\u2502\u25021 1 0 0 0\u2502\u3002#\u25020 0 0 1 0\u2502\u25020 0 1 0 0\u2502\u25020 1 0 0 0\u2502#\u25020 0 0\u2502\u25020 0 0\u2502\u25020 0 0\u2502#\u2514\u2500\u2518\u3002\n\u8ba9\u6211\u4eec\u4ece#product\u5f00\u59cb\uff1a\u5b83\u7c7b\u4f3c\u4e8eRuby\u7684Array#product(\u5c06\u4e24\u4e2a\u6570\u7ec4\u8fdb\u884c\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408)\uff0c\u4f46\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\uff1aAPL\u7684\u201cproduct\u201d\u4e0d\u53ea\u662f\u751f\u6210\u7ec4\u5408\uff0c\u800c\u662f\u63a5\u53d7\u7acb\u5373\u5e94\u7528\u4e8e\u5b83\u4eec\u7684\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u5728\u9999\u8349\u7ea2\u5b9d\u77f3\u4e2d\uff1a\n\u8fd9\u91cc\u7684#WRAP\u662f\u5fc5\u9700\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u53ea\u4ea7\u751f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u7ec4(\u4f5c\u4e3a\u6807\u91cf)-1\u30010\u548c1\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u6570\u5b57\u6bcf\u4e2a\u884c\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c\u66f4\u591a\u7684\u65cb\u8f6c\uff0c\u5c06\u6240\u6709\u6570\u5b57\u5782\u76f4\u79fb\u4f4d-1\u30010\u548c1\uff1a\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(AA[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)#\u250c\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502\u25020 0 0 1 1\u2502#\u25020 0 0\u2502\u25020 0 0 1 1\u2502\u25020 0 1 1 0\u2502#\u25020 0 0 1 1\u2502\u25020 0 1 1 0\u2502\u25020 0 0 1 0\u2502\u3002#\u25020 0 1 1 0\u2502\u25020 0 0 1 0\u2502\u25020 0 0\u2502#\u25020 0 0 1 0\u2502\u25020 0 0\u2502\u25020 0 0\u2502#\u2514\u2500\u2518#\u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2500\u3002\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502\u25020 0 1 1 0\u2502#\u25020 0 0\u2502\u25020 0 1 1 0\u2502\u25020 1 1 0 0\u2502#\u25020 0 1 1 0\u2502\u25020 1 1 0 0\u2502\u25020 0 1 0 0\u2502#\u25020 1 1 0 0\u2502\u25020 0 1 0 0\u2502\u25020 0 0\u2502#\u25020 0 1 0\u30020\u2502\u25020 0 0\u2502\u25020 0 0\u2502#\u2514\u2500\u2518#\u250c\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502\u25020 1 1 0 0\u2502\u3002#\u25020 0 0\u2502\u25020 1 1 0 0\u2502\u25021 1 0 0 0\u2502#\u25020 1 1 0 0\u2502\u25021 1 0 0 0\u2502\u25020 1 0 0 0\u2502#\u25021 1 0 0 0\u2502\u25020 1 0 0 0\u2502\u25020 0 0\u2502#\u25020 1 0 0 0\u2502\u25020 0 0\u2502\u25020 0 0\u2502#\u2514\u2500\u2518\u2514\u3002\u2500\u2518\u2514\u2500\u2518\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5f53\u524d\u770b\u5230\u7684\u662f\u75312\u7ef4\u77e9\u9635(5\u00d75)\u7ec4\u6210\u76842\u7ef4\u77e9\u9635(3\u00d73)\uff1a\u5185\u90e8\u77e9\u9635\u88ab\u5305\u88f9\u5728\u5e27\u4e2d\u3002\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)#\u250c\u2500\u2510#\u25020 1 2 2 1\u2502#\u25021 3 4 3 1\u2502#\u25021 4 5 4 1\u2502#\u25021 3 3 2 0\u2502#\u25020 1 1 1\u2502#\u2514\u2500\u2518\u3002\n\u8fd9\u91cc\u7684#Reduce\u662f\u76f8\u540c\u7684\u53ef\u679a\u4e3e\u6570#Reduce\u3002\u91cd\u8981\u7684\u7279\u6027\u662fAPL\u6837\u5f0f\u7684\u6570\u7ec4\u662f\u6309\u5143\u7d20\u6c42\u548c\u7684\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u6709\u4e86\u6240\u67099\u4e2a\u77e9\u9635\u7684\u603b\u548c\uff0c\u8868\u793a\u6bcf\u4e2a\u5355\u5143\u6709\u591a\u5c11\u6d3b\u52a8\u90bb\u5c45(\u5305\u62ec\u5176\u81ea\u8eab)\u3002\n\u73b0\u5728\uff0c\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u4e0b\u4e00\u4ee3\u5e94\u8be5\u53ea\u67093\u62164\u4e2a\u7ec6\u80de\u5b58\u6d3b\uff1a\n\u5355\u5143\u683c\u4e3a3\u8868\u793a\u201c\u6d3b\u7740+2\u4e2a\u90bb\u5c45\u201d(\u6d3b\u7740\u7684\u6761\u4ef6)\u6216\u201c\u7a7a\u77403\u4e2a\u90bb\u5c45\u201d(\u53d8\u6210\u6d3b\u7740\u7684\u6761\u4ef6)\u3002\n4\u7684\u610f\u601d\u662f\u201c\u6d3b\u7740+3\u4e2a\u90bb\u5c45\u201d(\u6d3b\u7740\u7684\u6761\u4ef6)\u6216\u201c\u7a7a\u7740\uff0c\u67094\u4e2a\u90bb\u5c45\u201d(\u4e0d\u662f\u6d3b\u7740\u7684\u6761\u4ef6)\u3002\n\u4e3a\u4e86\u68c0\u67e5\u201c\u5b83\u662f\u5426\u7b49\u4e8e\u67d0\u7269\u201d\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86.eq\u8fd0\u7b97\u7b26\u3002\u8fd9\u53ef\u80fd\u662f\u89e3\u51b3\u65b9\u6848\u4e2d\u6700\u201c\u975eRubyish\u201d\u7684\u90e8\u5206\uff1a\u5b83\u4e0d\u662f\u751f\u6210true/false\uff0c\u800c\u662f\u63d0\u4f9b1/0\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u7b97\u6cd5\u6765\u8bf4\uff0c\u59cb\u7ec8\u4fdd\u6301\u6570\u5b57\u5f62\u5f0f\u5f88\u91cd\u8981\u3002\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002eq(3)#\u250c\u2500\u2510#\u25020 0 0\u2502#\u25020 1 0 1 0\u2502#\u25020 0 0\u2502#\u25020 1 1 0 0\u2502#\u25020 0 0\u2502#\u2514\u2500\u2518PUT CURRENT_GEN\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(4)#\u250c\u2500\u2510#\u25020 0 0\u2502#\u25020 0 1 0 0\u2502#\u25020 1 0 1 0\u2502#\u25020 0 0\u2502#\u25020 0 0\u2502#\u2514\u2500\u2518\u3002\n\u4f46\u662f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u540c\u65f6\u5e94\u7528\u8fd9\u4e24\u79cd\u64cd\u4f5c\uff0c\u4ece\u800c\u4ea7\u751f\u4e24\u4e2a\u5143\u7d20\u7684\u6570\u7ec4(\u5728APL\u4e2d\uff0c\u591a\u6b21\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\u7684\u80fd\u529b\u79f0\u4e3a\u6e17\u900f)\uff1a\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(AA[3\uff0c4])#\u250c\u2500\u2510\u250c\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502#\u25020 1 0 1 0 0\u2502\u25020 0 1 0 0\u2502#\u25020 0 0\u2502\u25020 1 0 1 0 0\u2502#\u25020 1 1 0 0\u2502\u25020 0 0\u2502#\u25020 0 0\u2502\u25020 0 0\u2502\u3002#\u2514\u2500\u2518\u2514\u2500\u2518\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5411\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u6dfb\u52a0\u201c\u5b83\u662f\u5426\u6d3b\u7740\u201d\u7684\u6761\u4ef6\u3002\u53ea\u9700\u4f7f\u7528\u539f\u59cb\u6570\u7ec4\u5373\u53ef\u8f7b\u677e\u6267\u884c(&Amp\uff1bing)\u3002\u4e3a\u4e86\u4e0d\u4e2d\u65ad\u6211\u4eec\u7684\u64cd\u4f5c\u94fe\uff0c\u6211\u4eec\u8fd8\u5c06\u4f7f\u75281(\u65e0\u64cd\u4f5c)\u7684\u7b2c\u4e00\u4e2a\u6570\u7ec4(&amp\uff1bamp\uff1b)\uff1a\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(AA[3\uff0c4])\u3002Zip(AA[1\uff0ccurrent_gen]\uff0c&amp\uff1b\uff1a&amp\uff1b)#\u250c\u2500\u2510\u250c\u2500\u2510#\u25020 0 0\u2502\u25020 0 0\u2502#\u25020 1 0 1 0\u2502\u25020 0 1 0 0\u2502#\u25020 0 0\u2502\u25020 1 0 0 0\u2502#\u25020 1 1 0 0\u2502\u25020 0 0\u2502#\u25020 0 0\u2502\u25020 0 0\u2502#\u3002\u2514\u2500\u2518\u2514\u2500\u2518\u3002\n\u8fd9\u91cc\u7684#zip\u548c\u4e0a\u9762\u7684#product\u4e00\u6837\uff0c\u51e0\u4e4e\u7c7b\u4f3c\u4e8eRuby\u7684Array#zip\uff0c\u4f46\u4e5f\u5c06\u63d0\u4f9b\u7684\u64cd\u4f5c\u5e94\u7528\u4e8e\u6bcf\u4e00\u5bf9\u3002\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(AA[3\uff0c4])\u3002Zip(AA[1\uff0ccurrent_gen]\uff0c&amp\uff1b\uff1a&amp\uff1b)\u3002Reduce(&amp\uff1b\uff1a|)#\u250c\u2500\u2510#\u25020 0 0\u2502#\u25020 1 1 1 0\u2502#\u25020 1 0 0 0\u2502#\u25020 1 1 0 0\u2502#\u25020 0 0\u2502#\u2514\u2500\u2518\u3002\n\u2026\u3002\u8fd9\u51e0\u4e4e\u5c31\u662f\u6211\u4eec\u7684\u6700\u7ec8\u7b54\u6848\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u201c\u5185\u542b\u6570\u7ec4\u7684\u6807\u91cf\u201d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u89e3\u5f00\uff1a\n\u653e\u7f6ecurrent_gen\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(AA[3\uff0c4])\u3002Zip(AA[1\uff0ccurrent_gen]\uff0c&amp\uff1b\uff1a&amp\uff1b)\u3002Reduce(&amp\uff1b\uff1a|)\u3002\u5c55\u5f00#0 0 0#0 1 1 1 0#0 1 0 0 0#0 1 1 0 0#0 0 0\u3002\n\u5b9a\u4e49\u5bff\u547d(CURRENT_GEN)CURRENT_GEN\u3002\u5305\u8d77\u6765\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1ahRotate)\u3002\u4ea7\u54c1(aa[-1\uff0c0\uff0c1]\uff0c&amp\uff1b\uff1avRotate)\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)\u3002EQ(AA[3\uff0c4])\u3002Zip(AA[1\uff0ccurrent_gen]\uff0c&amp\uff1b\uff1a&amp\uff1b)\u3002Reduce(&amp\uff1b\uff1a|)\u3002\u5c55\u5f00\u672b\u7aef\u3002\nLife\u2190{\u21911\u2375\u2228.\u22273 4=+/\uff0c\u20181 0 1\u2218.\u2296\u20191 0 1\u2218.\u233d\u2282\u2375}\u3002\ndef life(CURRENT_GEN)#LIFE\u2190{--\u51fd\u6570\u58f0\u660eCURRENT_GEN#\u2375--\u51fd\u6570\u53c2\u6570\u3002\u5305\u88c5#\u2282--WRAP\u4f7f\u5176\u6210\u4e3a\u6807\u91cf\u3002\u4ea7\u54c1(#\u2218.\u3002--\u4e58\u79efAA[-1\uff0c0\uff0c1]\uff0c#\u20181 0 1-1\uff0c0\uff0c1(\u662f\u7684\uff0c\u20191\u662f-1)&amp\uff1b\uff1ah\u65cb\u8f6c)#\u233d--h\u65cb\u8f6c\u3002\u4ea7\u54c1(#\u2218.\u3002--product AA[-1\uff0c0\uff0c1]\uff0c#\u20181 0 1&amp\uff1b\uff1avRotate)#\u2296--vRotate\u3002Reduce(&amp\uff1b\uff1a+)\u3002Reduce(&amp\uff1b\uff1a+)#+/\uff0c--Reduce\u4e24\u6b21\uff1f4.EQ(#=AA[3\uff0c4])#3\u3002Zip(#--\u89c1\u4e0b\u6587\uff1f\u5173\u4e8e\u8fd93\u884cAA[1\uff0cCURRENT_GEN]\uff0c#1\u2375&amp\uff1b\uff1a&amp\uff1b)\u3002Reduce(&amp\uff1b\uff1a|)#\u2228.\u2227\u3002\u5c55\u5f00#\u2191--\u5c55\u5f00\u7ed3\u675f#}\n\u00ab\u6211\u505a\u4e86\u4e24\u4e2a\u7b80\u5316\uff1a\u653e\u5f03\u4e86\u5b9e\u73b0\u201c\u4e00\u6b21\u51cf\u5c11\u4e24\u4e2a\u7ea7\u522b\u201d(\u4e24\u4e2a\u51cf\u5c11\u5c31\u8db3\u591f\u77ed\u4e86)\uff0c\u4ee5\u53ca\u4ece\u76f8\u5f53\u590d\u6742\u7684APL\u7684\u201c\u5185\u79ef\u201d\u8fd0\u7b97\u7b26(\u5b83\u63a5\u53d7\u4e24\u4e2a\u51fd\u6570\uff0c\u5e76\u5c06\u5b83\u4eec\u53d8\u6210\u6211\u7528Zip+Reduce\u7684\u5e38\u89c4Ruby\u8868\u793a\u7684\u4e1c\u897f)\u3002\n\u6700\u521d\u7684APL\u6587\u7ae0\u901a\u8fc7\u5c06Glider\u79fb\u52a8\u523010\u00d710\u7f51\u683c\u6765\u6f14\u793a\u5176\u7528\u6cd5\u3002\u6211\u4eec\u8bd5\u8bd5\u8fd9\u4e2a\u5427\u3002\u4f46\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u663e\u793a\u8fd9\u4e24\u4e2a0\u548c1\uff0c\u4f7f\u5b83\u4eec\u770b\u8d77\u6765\u66f4\u6f02\u4eae\u4e00\u4e9b\u3002\u540c\u6837\uff0c\u501f\u7528APL\uff1a\ndef show(Grid)#APL\u98ce\u683c\u7684aa#valuesat(Aa)\u751f\u6210\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u9879\u76ee\u6570\u7ec4\uff0c\u5e76\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u4f5c\u4e3a\u7d22\u5f15\u8fdb\u884c\u6574\u5f62\u3002\u5c06AA[&#39\uff1b&#39\uff1b\uff0c&#39\uff1b\u2588&#39\uff1b]\u653e\u5165\u3002(\u6805\u683c)\u7aef\u70b9\u5904\u7684\u503c_\u3002\nGlider=AA[1\uff0c1\uff0c1\uff0c1\uff0c0\uff0c0\uff0c0\uff0c0\uff0c1\uff0c0]\u3002\u91cd\u5851(3\uff0c3)\u6805\u683c=\u6ed1\u5757\u3002\u91c7\u7528(-10\uff0c-10)\u663e\u793a\u6805\u683c\u3002WRAP#\u250c\u2500\u2510#\u2502\u2502#\u2502\u2588\u2502#\u2514\u2500\u2518Generations=[GRID]9\u3002\u4e58\u4ee5{\u4e16\u4ee3&lt\uff1b&lt\uff1b\u751f\u6d3b(\u4e16\u4ee3\u3002last)}show AA[*GENERATIONS]#\u6216\u8005\uff0c\u66f4\u7b80\u5355\u5730\uff0c\u4f7f\u75282.7\u7684\u679a\u4e3e\u5668#\u4ea7\u751f\uff1a\u4e16\u4ee3=\u679a\u4e3e\u5668\u3002\u751f\u4ea7(\u6805\u683c){|cur|\u5bff\u547d(Cur)}\u3002\u53d6(10)\u3002\u6620\u5c04(&amp\uff1b\uff1aWRAP)\u663e\u793aAA[*\u5c42\u4ee3]#\u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u3002\u2500\u2510\u250c\u2500\u2510#\u2502\u3002\u2502#\u2502#\u2502\u2588\u2502#\u2502\u3002\u2502\u2588\u2502\u2502\u2588\u2502\u2502\u2588\u2588\u2502#\u2502\u2588\u2502\u2502\u2588\u2502\u2502\u2588\u2588\u2502\u2502\u2588\u2502\u2502\u2588\u2588\u3002\u2502#\u2502\u2588\u2502\u2502\u2588\u2502\u2502\u2588\u2588\u2502\u2502\u2588\u2502#\u2502\u2588\u2502\u2502\u2588\u2588\u2502\u2502\u2588\u2502\u3002\u2502#\u2502\u2588\u2502#\u2514\u2500\u2518\u2514\u2500\u3002\u2500\u2518\u2514\u2500\u2518", "note_en": "But let me explain. Last week, I stumbled upon a new  APL apology post. It struck some deep chord in me and gave me an impulse to make another attempt to understand this beautifully  weird language.\n What I (somewhat unexpectedly) find out, is that besides the use of extensive character set and extreme terseness, APL has two main features that are not at all alien to Ruby: calculations through operation chaining, and an extensive library of array operations, suitable for said chaining (in Ruby, they are represented by  Enumerable module).\n At this point, I felt that  probably some of APL approaches and examples could be translated to Ruby pretty straightforwardly, and that would be an  idiomatic Ruby. To challenge this feeling, I experimented with translating the (in)famous  APL\u2019s one-line  Conway\u2019s Game of Life implementation\u2014 and succeeded to implement GoL in exactly one Ruby statement.\n Of course, the implementation required the notion of \u201cmathematical array\u201d, matching that of APL, so technically it is \u201cone statement plus supporting class\u201d, but I still prefer to think about it as \u201cone-statement\u201d one, as the class implemented is of generic use (somewhat like  Numo::NArray), and operations used are familiar to any Rubyist.\n To look immediately at the final implementation you may jump  straight to the repo. The rest of this article goes through the implementation process, closely following the explanations in  APL\u2019s version.\n   In APL,  array is a mathematical array: it is a  rectangular multidimensional matrix of scalars. It is represented by  APL::Ary in Ruby code, and shortened to  AA in explanations below.\n  Scalar is number, or character, or another array. This means one should not confuse  multidimensional arrays (matrices, with an equal number of elements alongside some dimension), and  nested arrays. Example:\n puts  AA [ 1 ,  2 ,  3 ,  4 ]. reshape ( 2 ,  2 ) # 1 2 # 3 4 # -- two-dimensional matrix of numbers puts  AA [ AA [ 1 ,  2 ],  AA [ 3 ,  4 ]] # \u250c\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2510 # \u25021 2\u2502 \u25023 4\u2502 # \u2514\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 # -- one-dimensional array of two one-dimensional arrays. # Note the frames around nested arrays helping to understand the nesting\n  a  =  AA [ 1 ,  2 ] puts  a # 1 2 puts  a . wrap # \u250c\u2500\u2500\u2500\u2510 # \u25021 2\u2502 # \u2514\u2500\u2500\u2500\u2518 puts  a . wrap . unwrap # 1 2\n As usual for mathematical arrays, mathematical operations could be performed with scalar (like \u201cadd 2 to every element\u201d) or another array of the same shape (like \u201cadd item of array A to item in a similar position of array B\u201d)\n That being said, let\u2019s begin with some first generation of our Game of Life:\n current_gen  =  AA [ 0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  1 ,  1 ,  0 ,  0 ,  1 ,  1 ,  0 ,  0 ,  0 ,  0 ,  1 ,  0 ,  0 ]. reshape ( 5 ,  5 ) puts  current_gen # 0 0 0 0 0 # 0 0 1 1 0 # 0 1 1 0 0 # 0 0 1 0 0 # 0 0 0 0 0\n So far, we\u2019ve just created an array of 1s and 0s and \u201creshaped\u201d it into 5\u00d75 two-dimensional matrix.\n  puts  current_gen . hrotate ( 1 ) # 0 0 0 0 0 # 0 1 1 0 0 # 1 1 0 0 0 # 0 1 0 0 0 # 0 0 0 0 0\n #hrotate is simply shifting values in each row to the left, cyclically, and resembles (1-dimensional only)  Array#rotate of Ruby.\n Now, let\u2019s produce 3 variants of the rotation: 1 to the left, none, and 1 to the right:\n current_gen . wrap . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 0 0 1 1\u2502 \u25020 0 1 1 0\u2502 \u25020 1 1 0 0\u2502 # \u25020 0 1 1 0\u2502 \u25020 1 1 0 0\u2502 \u25021 1 0 0 0\u2502 # \u25020 0 0 1 0\u2502 \u25020 0 1 0 0\u2502 \u25020 1 0 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n  Let\u2019s start with  #product: It is like Ruby\u2019s  Array#product (make all possible combinations of two arrays), with one important difference: APL\u2019s \u201cproduct\u201d, instead of just producing combinations, accepts also operation to immediately apply to them. So, in vanilla Ruby:\n    #wrap here is necessary so we will product just one entire array (as a scalar) per  -1,  0, and  1, not each-row-per-each-number.\n With that in hands, let\u2019s produce some more rotations, shifting all numbers by -1, 0, and 1  vertically:\n puts  current_gen . wrap . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate ). product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 1 1\u2502 # \u25020 0 0 0 0\u2502 \u25020 0 0 1 1\u2502 \u25020 0 1 1 0\u2502 # \u25020 0 0 1 1\u2502 \u25020 0 1 1 0\u2502 \u25020 0 0 1 0\u2502 # \u25020 0 1 1 0\u2502 \u25020 0 0 1 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 0 0 1 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 1 1 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 0 1 1 0\u2502 \u25020 1 1 0 0\u2502 # \u25020 0 1 1 0\u2502 \u25020 1 1 0 0\u2502 \u25020 0 1 0 0\u2502 # \u25020 1 1 0 0\u2502 \u25020 0 1 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 0 1 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 1 1 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 1 1 0 0\u2502 \u25021 1 0 0 0\u2502 # \u25020 1 1 0 0\u2502 \u25021 1 0 0 0\u2502 \u25020 1 0 0 0\u2502 # \u25021 1 0 0 0\u2502 \u25020 1 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 1 0 0 0\u2502 \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n Note that what we currently see is a  2 dimensional matrix (3\u00d73) of  2-dimensional matrices (5\u00d75): inner metrices are wrapped in frames.\n  puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 1 2 2 1\u2502 # \u25021 3 4 3 1\u2502 # \u25021 4 5 4 1\u2502 # \u25021 3 3 2 0\u2502 # \u25020 1 1 1 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n #reduce here is the same  Enumerable#reduce. The important feature is that APL-style arrays are summing up element-wise, so now we have a sum of all 9 matrices, representing  how many alive neighbors (including itself) every cell had.\n Now, it should be noticed, that only cells with 3 or 4 should be alive in the next generation:\n cell with 3 means \u201calive + 2 neighbors\u201d (condition to live) or \u201cempty with 3 neighbors\u201d (condition to become alive)\n  cell with 4 means \u201calive + 3 neighbours\u201d (condition to live) or \u201cempty with 4 neighbours\u201d ( not a condition to become alive)\n To check \u201cwhether it is equal to something\u201d, we have  .eq operator implemented. That\u2019s, probably, most \u201cnon-Rubyish\u201d part of the solution: instead of producing  true/ false, it gives  1/ 0. Unfortunately, it is important to the algorithm to always stay as numbers.\n  puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( 3 ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 # \u25020 1 0 1 0\u2502 # \u25020 0 0 0 0\u2502 # \u25020 1 1 0 0\u2502 # \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( 4 ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 # \u25020 0 1 0 0\u2502 # \u25020 1 0 1 0\u2502 # \u25020 0 0 0 0\u2502 # \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n But we also may apply both operations at once, producing array of two elements (ability to perform one operation several times is called  pervasion in APL):\n puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( AA [ 3 ,  4 ]) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 1 0 1 0\u2502 \u25020 0 1 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 1 0 1 0\u2502 # \u25020 1 1 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n Now, we need to add a condition of \u201cwhether it was alive\u201d to the  second array. It is easy to perform with just  &amp;-ing with original array. To not break our chain of operations, we\u2019ll also  &amp; the first array with  1 (no-op):\n puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( AA [ 3 ,  4 ])  . zip ( AA [ 1 ,  current_gen ],  &amp; :&amp; ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 1 0 1 0\u2502 \u25020 0 1 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 1 0 0 0\u2502 # \u25020 1 1 0 0\u2502 \u25020 0 0 0 0\u2502 # \u25020 0 0 0 0\u2502 \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n #zip here, like  #product above, is almost like the  Array#zip of Ruby, but also applies provided operation to each pair.\n  puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( AA [ 3 ,  4 ])  . zip ( AA [ 1 ,  current_gen ],  &amp; :&amp; )  . reduce ( &amp; :| ) # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u25020 0 0 0 0\u2502 # \u25020 1 1 1 0\u2502 # \u25020 1 0 0 0\u2502 # \u25020 1 1 0 0\u2502 # \u25020 0 0 0 0\u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n \u2026which is almost our final answer, but it is still a \u201cscalar with array inside\u201d, and we need to unwrap it:\n puts  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( AA [ 3 ,  4 ])  . zip ( AA [ 1 ,  current_gen ],  &amp; :&amp; )  . reduce ( &amp; :| )  . unwrap # 0 0 0 0 0 # 0 1 1 1 0 # 0 1 0 0 0 # 0 1 1 0 0 # 0 0 0 0 0\n  def  life ( current_gen )  current_gen . wrap  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :hrotate )  . product ( AA [ - 1 ,  0 ,  1 ],  &amp; :vrotate )  . reduce ( &amp; : + ). reduce ( &amp; : + )  . eq ( AA [ 3 ,  4 ])  . zip ( AA [ 1 ,  current_gen ],  &amp; :&amp; )  . reduce ( &amp; :| )  . unwrap end\n  Life\u2190{\u21911 \u2375\u2228.\u22273 4=+/,\u00af1 0 1\u2218.\u2296\u00af1 0 1\u2218.\u233d\u2282\u2375}\n  def  life ( current_gen )  # Life\u2190{ -- function declaration  current_gen  # \u2375 -- function argument  . wrap  # \u2282 -- wrap to make it scalar  . product (  # \u2218. -- product  AA [ - 1 ,  0 ,  1 ],  # \u00af1 0 1 -- -1, 0, 1 (yeah, \u00af1 is -1)  &amp; :hrotate )  # \u233d -- hrotate  . product (  # \u2218. -- product  AA [ - 1 ,  0 ,  1 ],  # \u00af1 0 1  &amp; :vrotate )  # \u2296 -- vrotate  . reduce ( &amp; : + ). reduce ( &amp; : + )  # +/, -- reduce twice\u00b9  . eq (  # =  AA [ 3 ,  4 ])  # 3 4  . zip (  # -- see below\u00b9 about those 3 lines  AA [ 1 ,  current_gen ],  # 1 \u2375  &amp; :&amp; ). reduce ( &amp; :| )  # \u2228.\u2227  . unwrap  # \u2191 -- unwrap end  # }\n \u00b9I made two simplifications: abstained for implementing \u201creduce by 2 levels at once\u201d (two reduces is short enough), and from quite complicated APL\u2019s \u201cinner product\u201d operator (which takes two functions and makes them into something that I represented in regular Ruby with zip+reduce).\n   Original APL\u2019s article demonstrates the usage by moving Glider through 10\u00d710 grid. Let\u2019s try this. But first, we want a method to display those 0s and 1s a bit prettier. Again, borrowed from APL:\n def  show ( grid )  # APL-style AA#values_at(aa) produces array of items from the first array, taken and shaped  # using numbers from second array as indexes.  puts  AA [ &#39; &#39; ,  &#39;\u2588&#39; ]. values_at ( grid ) end\n  glider  =  AA [ 1 ,  1 ,  1 ,  1 ,  0 ,  0 ,  0 ,  1 ,  0 ]. reshape ( 3 ,  3 ) grid  =  glider . take ( - 10 ,  - 10 ) show  grid . wrap # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2502 # \u2502 \u2588\u2588\u2588\u2502 # \u2502 \u2588 \u2502 # \u2502 \u2588 \u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 generations  =  [ grid ] 9 . times  {  generations  &lt;&lt;  life ( generations . last )  } show  AA [ * generations ] # or, simpler, with 2.7&#39;s Enumerator#produce: generations  =  Enumerator . produce ( grid )  {  | cur |  life ( cur )  }. take ( 10 ). map ( &amp; :wrap ) show  AA [ * generations ] # \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2588 \u2502 # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588\u2588\u2588 \u2502 \u2502 \u2588\u2588 \u2502 # \u2502 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588\u2588\u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588 \u2588 \u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2588 \u2502 # \u2502 \u2588\u2588\u2588\u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588 \u2588\u2502 \u2502 \u2588\u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2502 # \u2502 \u2588 \u2502 \u2502 \u2588 \u2588\u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2502 \u2588 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 # \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518", "posttime": "2020-05-17 09:52:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ruby,\u6e38\u620f,apl,life,\u6570\u7ec4", "title": "\u53d7APL\u542f\u53d1\u7684\u4e00\u4e2aRuby\u8bed\u53e5\u4e2d\u7684\u751f\u547d\u6e38\u620f", "title_en": "Game of Life in one Ruby statement inspired by APL", "transed": 1, "url": "https://zverok.github.io/blog/2020-05-16-ruby-as-apl.html", "via": "", "real_tags": ["ruby", "\u6e38\u620f", "apl", "life", "\u6570\u7ec4"]}, {"category": "", "categoryclass": "", "imagename": "b6a70d6815292f0a641e9f6ab4ce46b8.jpg", "infoid": 1002477, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60f3\u8981\u96c6\u88c5\u7bb1\u5417\uff1f\u4e86\u89e3\u5982\u4f55\u4f7f\u7528OKD\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8bbe\u7f6e\u548c\u8fd0\u884cKubernetes\u5bb9\u5668\u96c6\u7fa4\u3002\n\u4f60\u4e00\u76f4\u5728\u7528\u4f60\u6700\u559c\u6b22\u7684\u641c\u7d22\u5f15\u64ce\u641c\u7d22\u4e92\u8054\u7f51\uff0c\u6bd4\u5982DuckDuckGo\uff0c\u4e86\u89e3\u4f60\u80fd\u4e86\u89e3\u5230\u7684\u6240\u6709\u5173\u4e8e\u96c6\u88c5\u7bb1\u7684\u4fe1\u606f-\u8fd9\u79cd\u611f\u89c9\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u5e2d\u5377\u4e86\u79d1\u6280\u884c\u4e1a\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u5df2\u7ecf\u542c\u8bf4\u8fc7Kubernetes\uff0c\u5b83\u662f\u76ee\u524d\u6700\u6d41\u884c\u7684\u5bb9\u5668\u7ba1\u7406\u5e73\u53f0\u3002\u4e5f\u8bb8\u4f60\u5728\u8270\u96be\u7684\u9053\u8def\u4e0a\u5076\u7136\u9047\u5230\u4e86\u5e93\u4f2f\u5185\u65af\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u4e00\u4e9b\u5e93\u4f2f\u5185\u65af\u7684\u6307\u5bfc\u8bfe\u7a0b\u3002\n\u4e5f\u8bb8\u4f60\u81ea\u5df1\u7ecf\u5386\u4e86\u5f04\u6e05\u695a\u8fd9\u4ef6\u4e8b\u7684\u8fc7\u7a0b\u3002\u5f53\u4f60\u76ef\u7740\u8c37\u6b4c\u3001\u4e9a\u9a6c\u900a\u548c\u5176\u4ed6\u516c\u53f8\u7684\u4ea7\u54c1\u65f6\uff0c\u4f60\u4f1a\u81ea\u8a00\u81ea\u8bed\u5730\u8bf4\uff0c\u80af\u5b9a\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff01&#34\uff1b\u5f53\u4f60\u76ef\u7740\u8c37\u6b4c\u3001\u4e9a\u9a6c\u900a\u548c\u5176\u4ed6\u516c\u53f8\u7684\u4ea7\u54c1\u65f6\uff0c\u4f60\u4f1a\u5bf9\u81ea\u5df1\u8bf4\u3002\u60a8\u5df2\u7ecf\u5f88\u597d\u5730\u4e86\u89e3\u4e86\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5b83\u4eec\uff0c\u751a\u81f3\u53ef\u80fd\u5df2\u7ecf\u90e8\u7f72\u4e86\u4e00\u4e9b\u96c6\u88c5\u7bb1\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u8fd8\u5728\u8fd0\u884c\u3002\u592a\u68d2\u4e86\uff01\u4e00\u8def\u4e0a\uff0c\u4f60\u5f00\u59cb\u8bfb\u5230\u6216\u542c\u5230\u5173\u4e8e\u5bb9\u5668\u7f16\u6392\u7684\u4e66\uff0c\u7136\u540e\u4f60\u6cbf\u7740\u90a3\u91cc\u7684\u6bcf\u4e2a\u70b9\u51fb\u8bf1\u9975\u94fe\u63a5\u8d70\u8fdb\u4e86\u5154\u5b50\u6d1e\u3002\n\u5982\u679c\u770b\u7740\u8fd9\u4e9b\u63d0\u4f9b\u5546\u4f1a\u8ba9\u4f60\u7684\u94b1\u5305\u53d7\u4f24\uff0c\u6216\u8005\u4f60\u548c\u6211\u4e00\u6837\uff0c\u66f4\u613f\u610f\u8ba9\u4f60\u7684\u6570\u636e\u5728\u4f60\u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u4e0d\u8981\u5bb3\u6015\uff01OpenShift\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\uff01\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u641c\u7d22\uff0c\u60a8\u53d1\u73b0\u4e86\u7ea2\u5e3d\u63d0\u4f9b\u7684OpenShift Container Platform\u3002\u867d\u7136\u4ed6\u4eec\u786e\u5b9e\u63d0\u4f9b60\u5929\u7684\u8bd5\u7528\u671f\uff0c\u4f46\u4f60\u5e76\u4e0d\u662f\u771f\u7684\u60f3\u628a\u4fe1\u7528\u5361\u5b58\u6863\u3002\u4e5f\u8bb8\u4f60\u4e0d\u60f3\u548c\u63a8\u9500\u5458\u6253\u4ea4\u9053\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u7ed9\u4f60\u3002\u4e0eRedHat\u505a\u7684\u51e0\u4e4e\u6240\u6709\u4e8b\u60c5\u4e00\u6837\uff0c\u6709\u4e00\u4e2a\u540d\u4e3aOpenShift OKD\u7684\u5f00\u6e90\u793e\u533a\u9879\u76ee\u3002\n\u6211\u559c\u6b22\u5f00\u6e90\u3002\u5c3d\u7ba1\u6211\u5728\u7ea2\u5e3d\u5de5\u4f5c\u4e86\u5c06\u8fd1\u4e94\u5e74\uff0c\u4f46\u6211\u4ecd\u7136\u8fd0\u884c\u6240\u6709\u4e1c\u897f\u7684\u4e0a\u6e38\u7248\u672c\u3002\u6211\u559c\u6b22\u66f4\u8d34\u8fd1\u793e\u533a\uff0c\u4ece\u6211\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5f00\u59cb\u4e00\u4e9b\u516c\u53f8\u8054\u7cfb\u3002\u6b64\u5916\uff0c\u6211\u559c\u6b22\u6211\u7684\u5de5\u4f5c\u7684\u4e00\u4e2a\u90e8\u5206\u662f\u5c06\u590d\u6742\u7684\u6d41\u7a0b\u5206\u89e3\u6210\u5bb9\u6613\u7406\u89e3\u548c\u53ef\u91cd\u590d\u7684\u90e8\u5206\u3002\n\u4e3a\u4e86\u5de5\u4f5c\uff0c\u6211\u5468\u800c\u590d\u59cb\u5730\u51fa\u5dee\u3002\u867d\u7136\u6211\u5728\u5bb6\u91cc\u6709\u4e00\u4e2a\u7531\u5404\u79cd\u73b0\u6210\u90e8\u4ef6\u7ec4\u6210\u7684\u575a\u5b9e\u7684\u5b9e\u9a8c\u5ba4\uff0c\u4f46\u6709\u65f6\u5ba2\u6237\u7aef\u7ad9\u70b9\u4e0d\u5141\u8bb8\u6211\u4f7f\u7528VPN\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u5fc5\u987b\u60f3\u51fa\u4e00\u79cd\u65b9\u6cd5\u6765\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u53ef\u9760\u5730\u8fd0\u884c\u73af\u5883\u3002\u6211\u8fd8\u5fc5\u987b\u786e\u4fdd\u8fd9\u4e2a\u73af\u5883\u662fNAT&39\uff1bD\uff0c\u8fd9\u6837\u5bf9\u4e8e\u5916\u754c\u6765\u8bf4\uff0c\u8fde\u63a5\u5230WiFi\u7684\u53ea\u662f\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\n\u672c\u6307\u5357\u5411\u60a8\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u8fd0\u884clibvirt\u7684\u5355\u4e2a\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u57282+\u8282\u70b9\u7fa4\u96c6\u4e0a\u8fd0\u884cOpenShift\u3002\u6211\u627e\u5230\u7684\u5927\u591a\u6570\u6307\u5357\u53ea\u6709\u4e00\u90e8\u5206\u662f\u5b8c\u6574\u7684\u3002\u65e0\u8bba\u662fOCP\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u8fd8\u662f\u4e0d\u540c\u7684\u7528\u4f8b\uff0c\u90fd\u9700\u8981\u53e6\u4e00\u79cd\u5904\u7406\u65b9\u5f0f\u3002\n\u6700\u7ec8\uff0c\u6211\u559c\u6b22\u9009\u62e9\u4e00\u4e2a\u590d\u6742\u7684\u8bdd\u9898\uff0c\u76f4\u622a\u4e86\u5f53\u5730\u8d70\u4e00\u904d\uff0c\u8fb9\u8d70\u8fb9\u89e3\u91ca\u3002\u50cf\u6240\u6709\u5176\u4ed6\u4f5c\u8005\u4e00\u6837\uff0c\u6211\u4e5f\u6709\u7f3a\u9677\uff0c\u56e0\u4e3a\u5f53\u6211\u5bf9\u8fd9\u4e2a\u8fc7\u7a0b\u8fc7\u4e8e\u719f\u6089\u65f6\uff0c\u6211\u6ca1\u6709\u5145\u5206\u8be6\u7ec6\u5730\u89e3\u91ca\u4e8b\u60c5\u3002\u6211\u786e\u5b9e\u52aa\u529b\u6839\u636e\u53cd\u9988\u8fdb\u884c\u66f4\u6b63\uff0c\u4ee5\u4fbf\u7ed9\u4f60\u7559\u4e0b\u4e00\u4e2a\u6e05\u6670\u3001\u7b80\u6d01\u7684\u6307\u5357\uff0c\u89e3\u91ca\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7334\u5b50\u770b\u5230\u7334\u5b50\u505a\u7684\u6307\u5357\u3002\n\u5982\u679c\u60a8\u5bf9\u672c\u6307\u5357\u7684NAT&D\u90e8\u5206\u4e0d\u611f\u5174\u8da3(\u5373\u60a8\u6709\u6807\u51c6\u7f51\u7edc\u5e03\u5c40)\uff0c\u8bf7\u8df3\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa41\u30012A\u30012B\u3002\n\u5728\u5f3a\u5236\u95e8\u6237(\u5373\u9152\u5e97\u6216\u5176\u4ed6\u5f3a\u5236\u95e8\u6237)\u7684\u9650\u5236\u4e0b\u5de5\u4f5c\uff0c\u8be5\u95e8\u6237\u4e0d\u5141\u8bb8\u6765\u81ea\u6865\u63a5\u865a\u62df\u673a\u7684\u591a\u4e2a\u8fde\u63a5)\u3002\n\u6211\u5047\u8bbe\u60a8\u77e5\u9053\u5982\u4f55\u8bbe\u7f6e\u67d0\u79cd\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f(\u5982\u679c\u8df3\u8fc7NAT-ing\u90e8\u5206)\u3002\n\u6211\u5047\u8bbe\u60a8\u6b63\u5728\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5c01\u95ed\u7684\u73af\u5883(\u5373\uff0c\u60a8\u6ca1\u6709\u4f7f\u7528\u96c6\u4e2d\u5f0fDNS/DHCP/Web\u670d\u52a1\u5668)\u3002\n\u8981\u8bbe\u7f6e\u4e3b\u673a\uff0c\u8bf7\u4e3a\u6240\u6709\u865a\u62df\u673a\u521b\u5efa\u6865\u63a5\u7f51\u7edc\uff0c\u4ee5\u4fbf\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u4e0e\u5176\u81ea\u8eab\u901a\u4fe1\uff1a\nnmcli con shownmcli con add ifname br0\u7c7b\u578b\u7f51\u6865con-name br0nmcli con add type bridge-lave ifname eno1 master br0nmcli con up br0nmcli con Modify&#34\uff1bbridge-br0&#34\uff1bifname br0 type ethernetIP4 10.120.120.1/24\u3002\n\u8fd9\u5e94\u8be5\u662f\u6865\u63a5\u7f51\u7edc\u6240\u9700\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u4ee5\u4fbf\u8ba9nlibvirt\u6765\u5bbe\u4f7f\u7528\u3002\n\u6b64\u865a\u62df\u673a\u72ec\u7acb\u4e8eOpenShift\u5b89\u88c5\u3002\u5b83\u6258\u7ba1OpenShift\u6240\u9700\u7684\u670d\u52a1\uff0c\u4f46\u4e0d\u53d7\u5b89\u88c5(\u6216\u7f3a\u5c11)OKD4\u7684\u5f71\u54cd\u3002\n\u6b64VM\u5e94\u8be5\u6709\u4e24\u4e2a\u7f51\u5361\uff0c\u4e00\u4e2a\u4f4d\u4e8e\u7f51\u6865\u4e0a\uff0c\u53e6\u4e00\u4e2a\u4f4d\u4e8eNAT\u63a5\u53e3\u4e0a\u3002\u5728\u6211\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u8bbe\u7f6e\u4e86\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u5728\u6307\u5b9a\u4e3a\u7f51\u5173\u7684\u8bbf\u5ba2\u4e0a\uff0c\u786e\u4fddsysctl\u6253\u5f00\u4ee5\u8fdb\u884c\u6570\u636e\u5305\u8f6c\u53d1\u3002\u6570\u636e\u5305\u8f6c\u53d1\u5141\u8bb8\u7f51\u5173\u5145\u5f53\u8f6c\u53d1\u548c\u8def\u7531\u6d41\u91cf\u7684\u8def\u7531\u5668\u3002\n\u63a5\u4e0b\u6765\uff0c\u7528Firewalld\u521b\u5efa\u4e24\u4e2a\u533a\u57df\u3002\u5916\u90e8\u533a\u57df\u9700\u8981\u7ed1\u5b9a\u5230libvirt NAT\u4e0a\u53ef\u4ee5\u8bbf\u95ee\u4e92\u8054\u7f51\u7684\u63a5\u53e3\u3002\u6b64\u63a5\u53e3/\u533a\u57df\u8fd8\u5e94\u786e\u4fdd\u542f\u7528\u4f2a\u88c5\uff1a\nnmcli con mod${Internal}ipv4.address&#34\uff1b10.120.120.250/24&#34\uff1bnmcli con mod${Internal}ipv4.dns-search&#34\uff1blab-cluster.okd4.lab&#34\uff1bnmcli con mod${Internal}connection.autoconnect yesnmcli con mod${Internal}ipv4\u65b9\u6cd5\u624b\u518c\u3002\n\u6211\u5df2\u51b3\u5b9a\u5141\u8bb8\u5185\u90e8\u533a\u57df\u4e0a\u7684\u5185\u90e8\u6d41\u91cf\uff0c\u800c\u4e0d\u662f\u5f00\u653e\u6240\u6709\u5355\u4e2a\u7aef\u53e3\u3002\u8fd9\u6837\u505a\u98ce\u9669\u81ea\u8d1f\u3002\n\u786e\u4fdd\u7981\u7528systemd\u89e3\u6790\uff0c\u5e76\u4e14\u7f51\u7edc\u7ba1\u7406\u5668\u4f7f\u7528\u9ed8\u8ba4DNS\u8bbe\u7f6e\uff1a\n\u6211\u4eec\u6b63\u5728\u5b89\u88c5\u6b64\u9879\u76ee\u4fdd\u5b58\u4e00\u4e9b\u547d\u4ee4\u6240\u9700\u7684\u6240\u6709\u8f6f\u4ef6\u5305\u3002\n\u56e0\u4e3aHAProxy\u7ed1\u5b9a\u5230\u7aef\u53e380\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06Apache\u79fb\u5230\u4e0d\u540c\u7684\u7aef\u53e3\u30028080\u53f7\u7aef\u53e3\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9009\u62e9\uff1a\n\u5c06Apache\u7aef\u53e3\u6dfb\u52a0\u5230\u5185\u90e8\u9632\u706b\u5899\u3002\u5982\u679c\u5df2\u5c06\u5185\u90e8\u8bbe\u7f6e\u4e3a\u63a5\u53d7\u6240\u6709\u5185\u5bb9\uff0c\u5219\u4e0d\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\n\u5bf9\u4e8e\u6b64\u5b89\u88c5\uff0c\u6838\u5fc3\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u662f\u4ecehttps://getfedora.org/coreos/download/\u4e0b\u8f7d\u7684\uff0c\u6211\u4f7f\u7528\u7684\u662f\u88f8\u673a\u6620\u50cf\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u7b26\u53f7\u94fe\u63a5\uff0c\u4ee5\u4fbf\u5728\u66f4\u65b0CoreOS\u6620\u50cf\u65f6\u4e0d\u5fc5\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u3002\u53e6\u5916\uff0c\u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6700\u65b0\u7248\u672c\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u5fc5\u6bcf\u6b21\u53d1\u5e03\u90fd\u66f4\u65b0PXE\u83dc\u5355\uff1a\ndnsmasq\u7684\u5927\u90e8\u5206\u8bbe\u7f6e\u5728\u5176\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b8c\u6210\u3002\u4f46\u662f\uff0c\u5728\u5355\u4e2a\u4e3bOKD4\u90e8\u7f72\u4e2d\uff0c\u6211\u53d1\u73b0\u8fbe\u5230\u4e86\u5e76\u53d1DNS\u8bf7\u6c42\u7684\u6700\u5927\u6570\u91cf\u3002\u9ed8\u8ba4\u503c\u4e3a150\u3002\u8981\u589e\u52a0\u8fd9\u4e2a\u503c\uff0c\u60a8\u9700\u8981\u7f16\u8f91\u4f4d\u4e8e/etc/systemd/system/multi-user.target.wants/dnsmasq.service\u7684systemd\u5355\u5143\u6587\u4ef6\uff0c\u4f7f\u5176\u5982\u4e0b\u6240\u793a\uff1a\n\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u8f91dnsmasq.conf\u6587\u4ef6\u4e86\u3002\u6b64\u6587\u4ef6\u4f4d\u4e8eCentOS 8\u4e0a\u7684/etc/dnsmasq.conf\u3002Dnsmasq\u540c\u65f6\u7528\u4e8eDHCP\u548cDNS\u3002Dnsmasq\u5b9e\u73b0\u5b98\u65b9\u7684DHCP\u9009\u9879\u3002\u67e5\u770b\u6b64\u9875\u9762\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e\u60a8\u7406\u89e3\u6587\u4ef6\u4e2d\u7684dhcp-option=\u8bbe\u7f6e\u3002\u800cdnsmasq\u4e2d\u7684\u4e00\u4e9bDHCP\u9009\u9879\u6709\u6f02\u4eae\u7684\u540d\u79f0\u3002\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6211\u907f\u514d\u4f7f\u7528\u5b83\u4eec\uff0c\u56e0\u4e3a\u4e0b\u9762\u4f7f\u7528\u7684\u51e0\u4e2a\u9009\u9879\u6ca1\u6709\u6f02\u4eae\u7684\u540d\u79f0\u3002dhcp-option\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a\n\u52a1\u5fc5\u8981\u77e5\u9053\uff0cFedora CoreOS DHCP\u5ba2\u6237\u7aef\u5f53\u524d\u4e0d\u4f7f\u7528\u53d1\u9001\u540d\u79f0\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4e3b\u673a\u4eceDHCP\u670d\u52a1\u5668\u63a5\u6536\u5176\u4e3b\u673a\u540d\u548cIP\u65f6\uff0c\u5b83\u4e0d\u4f1a\u5411dnsmasq\u7684DNS\u90e8\u5206\u6ce8\u518c\u3002\u8fd9\u5bfc\u81f4\u6211\u4f7f\u7528dnsmasq\u9759\u6001\u8bbe\u7f6eIP\u3002\u8fd9\u662f\u4f7f\u7528\u6807\u8bb0\u6765\u5b8c\u6210\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u6807\u8bb0MAC\u5730\u5740\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u6807\u8bb0\u5e2e\u52a9\u8bc6\u522b\u4e3b\u673a\u3002\u4ee5\u4e0b\u662f\u53d1\u9001\u5230\u65b0\u865a\u62df\u673a\u7684\u4e3b\u673a\u540d\uff1a\n\u6211\u4e0d\u6253\u7b97\u6df1\u5165\u8ba8\u8bbaOpenShift 4\u7684\u6240\u6709\u8981\u6c42\u3002\u60a8\u53ef\u4ee5\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u627e\u5230\u8fd9\u4e9b\u8981\u6c42\u3002\u5bf9\u4e8eDNS\uff0c\u60a8\u9700\u8981\u5177\u5907\uff1a\n\u6307\u5411\u8def\u7531\u5668\u524d\u9762\u7684\u8d1f\u8f7d\u5e73\u8861\u5668\u7684\u901a\u914d\u7b26\u6761\u76ee(\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5b83\u662f\u7531HAProxy\u5904\u7406\u7684\u7f51\u5173IP)\u3002\n\u6211\u4eec\u5c06\u5728dnsmasq\u4e2d\u4f7f\u7528host-record\u9009\u9879\u5bf9\u5176\u8fdb\u884c\u914d\u7f6e\u3002\u6b64\u9009\u9879\u4f4d\u4e8e\u4ee5\u4e0b\u6587\u4ef6\u7684\u5e95\u90e8\uff1a\n#\u5728\u6765\u5bbe\u4e0a\u4e3a\u9ed8\u8ba4NAT\u63a5\u53e3\u8bbe\u7f6eDNSMasq#dnsmasq.conf#\u5c06\u6b64\u8bbe\u7f6e\u4e3a\u4fa6\u542c\u5185\u90e8interfacelisten-address=\uff1a\uff1a1,127.0.0.1\uff0c10.120.120.250interface=enp2s0expand-hosts#\u8fd9\u662f\u7fa4\u96c6\u5c06\u4f4d\u4e8e\u7684\u57dfondomain=lab-cluster.okd4.lab#\u4e0a\u6e38DNS\u670d\u52a1\u5668.\u3002\u8fd9\u5e94\u8be5\u662f\u60a8\u7684computer/laptopserver=192.168.122.1local=/okd4.lab/local=/lab-cluster.okd4.lab/#\u4e0a\u7684libvirt NAT#\u63a5\u53e3\u8bbe\u7f6e\u901a\u914d\u7b26DNS\u4ee5\u6307\u5411\u5185\u90e8\u63a5\u53e3#HAProxy\u5c06\u5728\u6b64interfaceaddress=/.apps.lab-cluster.okd4.lab/10.120.120.250dhcp-range=10.120.120.20\uff0c10.120.120.220\uff0c12hdhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases#\u4e0a\u4fa6\u542c\u6307\u5b9a\u8981\u670d\u52a1\u7684PXE\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u5730\u5740#the pxeserver(\u6b64\u4e3b\u673a)dhcp-boot=pxelinux.0\uff0cpxeserver\uff0c10.120.120.250#DHCP\u9009\u98793\u662f\u8def\u7531\u5668DHCP-Option=3\uff0c10.120.120.250#DHCP\u9009\u98796\u662fDNS\u670d\u52a1\u5668DHCP-Option=6\uff0c10.120.120.250#DHCP\u9009\u987928\u662f\u5e7f\u64ad\u5730\u5740DHCP-Option=28\uff0c10.120.120.255#\u6807\u8bb0\u9700\u8981\u8be5\u96c6\u5408\u3002\u8bbe\u7f6e\u5177\u6709\u7279\u5b9atagdhcp-mac=set:bootstrap\uff0c52:54:00:15:30:f2dhcp-mac=set:master\uff0c52:54:00:06:94:85dhcp-mac=set:worker\uff0c52:54:00:82:fc:9e#\u7684mac\u5730\u5740\u5c06\u6807\u8bb0\u4e0e\u7279\u5b9a\u4e3b\u673a\u540d\u5339\u914d#dhcp\u9009\u987912\u662f\u8981\u5206\u53d1\u7ed9\u5ba2\u6237\u7aef\u7684\u4e3b\u673a\u540ddhcp-option=Tag\uff1aBootstrap\uff0c12\uff0cbootstrap.lab-cluster.okd4.labdhcp-option=tag:master\uff0c12\uff0cmaster-0.lab-cluster.okd4.labdhcp-option=tag:worker\uff0c12\uff0cworker-0.lab-cluster.okd4.labdhcp-host=52:54:00:15:30:f2\uff0c10.120.120.99dhcp-host=52:54:00:06:94:85\uff0c10.120.120.50dhcp-host=52:54:00:82:fc:9e\uff0c10.120.120.60#-dhcp\u9009\u9879\u662f\u7528\u4e8e\u8c03\u8bd5\u7684\u8be6\u7ec6\u65e5\u5fd7\u8bb0\u5f55\u65e5\u5fd7-dhcppxe-Prompt=&#34\uff1b\u6309F8\u8fdb\u5165\u83dc\u5355\u3002&#34\uff1b\uff0c10pxe-SERVICE=x86PC\uff0c&#34\uff1bPXE\u542f\u52a8\u670d\u52a1\u5668&#34\uff1b\uff0cpxelinuxenable-tftptftp-root=/var/lib/tftpboot#\u8bbe\u7f6eetcd\u7684\u670d\u52a1\u8bb0\u5f55\u3002\u901a\u5e38\u5728#srv recordsrv-host=_etcd-server-ssl._tcp.lab-cluster.okd4.lab\uff0cetcd-0.lab-cluster.okd4.lab\u30012380\u30010\u300110#\u4e3b\u673a\u8bb0\u5f55\u9009\u9879\u4e2d\u67093\u4e2a\u6216\u66f4\u591a\u6761\u76ee\u94fe\u63a5dnshost-record=52:54:00:dd:5e:07\uff0c10.120.120.250\uff0cbastion.okd4.labhost-record=52:54:00:15:30:f2\uff0c10.120.120.99\uff0cbootstrap.lab-cluster.okd4.labhost-record=52:54:00:06:94:85\uff0c10.120.120.50\uff0c\u7684MAC\u3001IP\u548c\u4e3b\u673a\u540d\u3002master-0.lab-cluster.okd4.labhost-record=52:54:00:06:94:85\uff0c10.120.120.50\uff0cetcd-0.lab-cluster.okd4.labhost-record=52:54:00:82:fc:9e\uff0c10.120.120.60\uff0cWorker-0.lab-cluster.okd4.lab#\u8fd9\u4e9b\u4e3b\u673a\u8bb0\u5f55\u4f9bapi.lab-cluster.okd4.lab\uff0c10.120.120.250,3600host-record=bastion.okd4.lab\uff0c\u548capi-int\u6307\u5411HAProxyhost-Record=bastion.okd4.lab\uff0capi-int.lab-cluster.okd4.lab\uff0c10.120.120.250,3600\u3002\n\u590d\u5236\u4e0a\u8ff0\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8986\u76d6/etc/dnsmasq.conf\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\u670d\u52a1\uff1asudo systemctl Restart dnsmasq\u3002\n\u6ce8\u610f\uff1a\u4e0d\u8981\u5fd8\u8bb0\u66f4\u6539\u4e0a\u8ff0\u6587\u4ef6\u4e2d\u7684MAC\u5730\u5740\uff0c\u4f7f\u5176\u4e0e\u60a8\u7684\u865a\u62df\u673a\u7684MAC\u5730\u5740\u76f8\u5339\u914d\u3002\n\u7531\u4e8eOKD\u4ee3\u8868\u4f01\u4e1a\u89e3\u51b3\u65b9\u6848\u7684\u793e\u533a\u7248\u672c\uff0c\u56e0\u6b64\u5047\u5b9a\u8d1f\u8f7d\u5e73\u8861\u5668\u5728\u60a8\u7684\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3aHAProxy\u7684\u8f6f\u4ef6\u8d1f\u8f7d\u5e73\u8861\u5668\u3002\u5b83\u7684\u8bbe\u7f6e\u76f8\u5bf9\u7b80\u5355\u660e\u4e86\u3002\n\u9996\u5148\u8981\u505a\u7684\u662f\u786e\u4fddSELinux\u5141\u8bb8\u6240\u9700\u7684HAProxy\u7aef\u53e3\uff1a\n\u8bed\u4e49\u7aef\u53e3-a-tttp_port_t-ptcp 6443\u8bed\u4e49\u7aef\u53e3-a-tttp_port_t-p tcp 22623\n\u7aef\u53e36443\u662f\u7528\u4e8e\u4e3b\u673a\u5230\u4e3b\u673a\u901a\u4fe1\u3001\u8bbf\u95eeWeb UI\u4ee5\u53ca\u4f7f\u7528oc\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u7684API\u7aef\u53e3\u3002\n\u7aef\u53e322623\u4e3a\u52a0\u5165\u7fa4\u96c6\u7684\u65b0\u4e3b\u673a\u63d0\u4f9b\u914d\u7f6e\u6587\u4ef6\u3002\u8fd9\u4e24\u4e2a\u7aef\u53e3\u90fd\u662f\u96c6\u7fa4\u6210\u529f\u8fd0\u884c\u7684\u5fc5\u5907\u7aef\u53e3\uff0c\u5047\u8bbe\u8d1f\u8f7d\u5747\u8861\u4e2d\u90fd\u6709\u591a\u4e2a\u540e\u7aef\u3002\n#HAProxy\u914d\u7f6e\u8282#\u5168\u5c40settings#--globalmaxconn 20000log/dev/log local0 infochroot/var/lib/haproxypidfile/var/run/haproxy.piduser haproxygroup haproxydaemon#\u6253\u5f00stats unixsocketstats\u5957\u63a5\u5b57/var/lib/haproxy/stats#\u3002--#\u7684\u5171\u540c\u9ed8\u8ba4\u503c\u662f\u6240\u6709&#39\uff1b\u76d1\u542c&#39\uff1b\u548c&#39\uff1b\u540e\u7aef&#39\uff1b\u8282\u5c06#Use if not\u5728\u5176block#--defaultsmode\u4e2d\u6307\u5b9ahttplog\u5168\u5c40\u9009\u9879httplog\u9009\u9879dontlognull\u9009\u9879\u8f6c\u53d1\u9664127.0.0.0/8\u9009\u9879\u91cd\u65b0\u8c03\u5ea6\u91cd\u8bd53timeout http-request 10stimeout\u961f\u52171mtimeout\u8fde\u63a510stimeout\u5ba2\u6237\u7aef300 stimeout\u670d\u52a1\u5668300stimeout http-Keep-live 10stimeout check 10smaxconn 20000\u524d\u7aef\u63a7\u5236\u3002-plan-apibind*\uff1a6443 mode tcpdefault_backend control-plan-apioption tcplogbackend control-plan-apiBalance\u6e90\u6a21\u5f0ftcpserver master-0 master-0.lab-cluster.okd4.lab\uff1a6443 checkserver bootstrap bootstrap.lab-cluster.okd4.lab\uff1a6443\u68c0\u67e5\u5907\u4efd\u524d\u7aefcontrol-plan-bootstrapbind*\uff1a22623mode tcpdefault_backend control-Plane-boot23mode\u3002\u5165\u53e3-\u8def\u7531\u5668-httpoption tcplog\u540e\u7aef\u5165\u53e3-\u8def\u7531\u5668-httpBalance\u6e90\u6a21\u5f0ftcpserver worker-0 worker-0.lab-cluster.okd4.lab\uff1a80 check\u524d\u7aef\u5165\u53e3-\u8def\u7531\u5668-httpsbind*\uff1a443\u6a21\u5f0ftcpdefault_backend\u5165\u53e3-\u8def\u7531\u5668-httpsoption tcplogbackend\u5165\u53e3-\u8def\u7531\u5668-httpsBalance\u6e90\u6a21\u5f0ftcpserver worker-0 worker-0.lab-cluster.okd4.lab\uff1a443 check\u3002\n\u6211\u5728\u5355\u4e2a\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884c\u5165\u53e3\u8def\u7531\u5668\u3002\u8fd9\u9700\u8981\u5728\u5b89\u88c5\u524d\u540e\u5bf9OpenShift\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u3002\u8fd9\u53cd\u6620\u5728\u4e0a\u9762\u7684HAProxy\u914d\u7f6e\u4e2d\uff0c\u6807\u9898\u4e3a\u540e\u7aef\u5165\u53e3-\u8def\u7531\u5668-https\u3002\u5982\u679c\u60a8\u4f7f\u7528\u66f4\u591a\u8282\u70b9\uff0c\u53ea\u9700\u5c06\u8282\u70b9\u5b9a\u4e49\u6dfb\u52a0\u5230HAProxy\u914d\u7f6e\u4e2d\u76f8\u5e94\u7684\u540e\u7aef\u90e8\u5206\u3002\n\u6bcf\u5f53\u60a8\u91cd\u65b0\u542f\u52a8dnsmasq\u65f6\uff0cHAProxy\u90fd\u5bb9\u6613\u5931\u8d25\uff0c\u5e76\u4e14\u5b83\u65e0\u6cd5\u5728\u91cd\u65b0\u542f\u52a8\u671f\u95f4\u89e3\u6790\u4e3b\u673a\uff0c\u65e0\u8bba\u591a\u4e48\u77ed\u6682\u3002\u6b64\u5916\uff0c\u6211\u8fd8\u89c2\u5bdf\u5230\uff0c\u5728\u91cd\u65b0\u542f\u52a8\u65f6\uff0cHAProxy\u6709\u65f6\u4f1a\u56e0\u4e3a\u540c\u6837\u7684\u539f\u56e0\u800c\u65e0\u6cd5\u542f\u52a8\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5728dnsmasq\u8fd0\u884c\u4e4b\u540e\u7b80\u5355\u5730\u91cd\u65b0\u542f\u52a8\u5b83(\u5c3d\u7ba1\u60a8\u53ef\u4ee5\u9009\u62e9\u7f16\u8f91HAProxy\u7684systemd\u670d\u52a1\u5355\u5143\uff0c\u4ee5\u786e\u4fdd\u5b83\u5728dnsmasq\u4e4b\u540e\u542f\u52a8)\u3002\n\u4e0b\u9762\u7684\u6587\u4ef6\u5f15\u7528\u4e86Apache\u6258\u7ba1\u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u83dc\u5355\u5177\u6709\u7528\u4e8e\u62c9\u5165\u7684\u7aef\u53e38080\u3002\u7531\u4e8eHAProxy\u6b63\u5728\u76d1\u542c\u4e24\u4e2a\u6807\u51c6Web\u7aef\u53e3(80\u548c443)\uff0c\u56e0\u6b64\u5728\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u544a\u8bc9Apache\u76d1\u542c\u7aef\u53e38080\u3002\n#master PXE fileUI menu.c32DEFAULT fedcosTIMEOUT 100MENU title RedHat CoreOS Node InstallationMENU TABMSG\u6309Enter\u952e\u5f15\u5bfc\uff0c\u6216\u6309Tab\u952e\u7f16\u8f91\u83dc\u5355\u9879LABEL fedcos\u548c\u83dc\u5355\u6807\u7b7einstall fedcos/kernel http://bastion.okd4.lab:8080/fedcos/installer-kernel/INITRD http://bastion.okd4.lab:8080/fedcos/installer-initramfs.img/append console=tty0\u63a7\u5236\u53f0=ttyS0 IP=dhcp rd.nednet=1 coreos.\u3002/IGNING/MASTER.ign coreos.inst.image_url=http://bastion.okd4.lab:8080/fedcos/metal.raw.gz\u6838\u5fc3.inst.install_dev=vdaIPAPPEND 2\u3002\n\u6ce8\u610f\uff1a\u60a8\u5e94\u8be5\u4e3a\u60a8\u62e5\u6709\u7684\u6bcf\u53f0\u4e3b\u673a\u521b\u5efa\u6b64\u6587\u4ef6\u3002\u6587\u4ef6\u540d\u5e94\u8be5\u662f\u5e26\u6709&#39\uff1b-&#39\uff1b\u800c\u4e0d\u662f&#39\uff1b\uff1a&#39\uff1b&gt\uff1b\u768401-&lt\uff1bMac\u5730\u5740\u3002dnsmasq\u79df\u7ea6\u5982\u4e0b\u6240\u793a\uff1a\n\u56e0\u6b64\uff0c\u8bf7\u4f7f\u7528\u7b2c\u4e94\u4e2a\u5b57\u6bb5\u4e0eTFTP\u670d\u52a1\u5668\u5339\u914d\u3002\u7ed9\u5b9aMAC\u5730\u574052\uff1a54\uff1a00\uff1a06\uff1a94\uff1a85\uff0c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\u5c06\u4e3a/var/lib/tftpboot/pxelinux.cfg/01-52-54-00-06-94-85\u3002\n\u5728OCP4\u548cOKD\u4e2d\u8bbe\u7f6e\u73af\u5883\u7684\u6b65\u9aa4\u51e0\u4e4e\u76f8\u540c\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a\n\u5982\u679c\u60a8\u7684\u6bcd\u7248\u5c11\u4e8e\u4e09\u4e2a\uff0c\u5219\u9700\u8981\u624b\u52a8\u7f16\u8f91etcd\u4ef2\u88c1\u4fdd\u62a4\u3002\n\u89e3\u538b\u7f29\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u5c06\u5176\u653e\u5165/bin\u4e2d(\u6216\u66f4\u6539\u8def\u5f84\u4ee5\u4f7f\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b58\u5728)\u3002\n\u76ee\u524d\uff0c\u4f3c\u4e4e\u552f\u4e00\u6709\u6548\u7684\u7248\u672c\u662f2020\u5e7401\u670828\u65e5022517\u3002\u6211\u8fd8\u8bd5\u8fc7\u5176\u4ed6\u51e0\u4e2a\uff0c\u4f46\u90fd\u6ca1\u6709\u6210\u529f\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u786e\u4fdd\u60a8\u62e5\u6709\u6b63\u786e\u7684\u7248\u672c\uff1a\nPull\u5bc6\u94a5\u5bf9\u4e8eOKD\u662f\u53ef\u9009\u7684\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u5bf9\u6d4b\u8bd5\u7279\u5b9a\u64cd\u4f5c\u7b26\u5f88\u6709\u5e2e\u52a9\u3002\u6211\u5efa\u8bae\u5728\u5b89\u88c5\u4e4b\u524d\u5bf9\u62c9\u5165\u5bc6\u7801\u8fdb\u884c60\u5929\u7684\u8bc4\u4f30\u3002\u4ece\u8fd9\u91cc\u83b7\u53d6\u60a8\u7684\u62c9\u52a8\u79d8\u8bc0\u3002\n\u786e\u4fdd\u6240\u6709\u53d8\u91cf\u90fd\u4e0d\u4e3a\u7a7a\uff01\u672c\u6307\u5357\u7684\u5176\u4f59\u90e8\u5206\u4f9d\u8d56\u4e8e\u73af\u5883\u53d8\u91cf\u6765\u586b\u5145\u914d\u7f6e\u6587\u4ef6\u3002\n\u4e0b\u9762\u7684cat\u547d\u4ee4\u7528\u4e0a\u9762\u521b\u5efa\u7684shell\u53d8\u91cf\u66ff\u6362\u53d8\u91cf\u3002\u8fd9\u662f\u7528\u4e8e\u521b\u5efa\u6e05\u5355\u548c\u70b9\u706b\u6587\u4ef6\u7684\u521d\u59cb\u7fa4\u96c6\u914d\u7f6eYAML\u6587\u4ef6\u3002\nCAT&lt\uff1b&lt\uff1bEOF&GT\uff1binstall-config.yaml.bakapiVersion\uff1av1baseDomain\uff1a${base_domain}COMPUTE\uff1a-HYPERTHREADING\uff1a\u5df2\u542f\u7528\u7fa4\u96c6\u540d\u79f0\uff1aWorker\u7fa4\u96c6\u526f\u672c\uff1a${Number_of_Worker_VMS}\u63a7\u5236\u5e73\u9762\uff1a*Hyperthreading\uff1a\u5df2\u542f\u7528\u7fa4\u96c6\u540d\u79f0\uff1a\u4e3b\u7fa4\u96c6\u526f\u672c\uff1a${Number_of_Master_VMS}\u5143\u6570\u636e\uff1a\u7fa4\u96c6\u540d\u79f0\uff1a${CLUSTER_NAME}\u7f51\u7edc\uff1a${CLUSTER_NAME}\u7fa4\u96c6\u7f51\u7edc\uff1a${CLUSTER_NETWORK}.\u3002{}FIPS\uff1aFALSE PULLSET\uff1a${PULL_SECRET}${sshKey\uff1a${SSH_KEY}FEOF\u3002\n\u6211\u4eec\u521b\u5efa\u5907\u4efd\u7684\u539f\u56e0\u662f\uff0c\u8fd0\u884copenShift-install\u547d\u4ee4\u5c06\u6d88\u8017\u8be5\u6587\u4ef6\uff0c\u5e76\u4e14\u6211\u4eec\u5e0c\u671b\u62e5\u6709\u8be5\u6587\u4ef6\u7684\u526f\u672c\uff0c\u4ee5\u5907\u91cd\u65b0\u5f00\u59cb\u6216\u521b\u5efa\u65b0\u7fa4\u96c6\u65f6\u4f7f\u7528\u3002\n\u6211\u5df2\u7ecf\u4f7f\u7528OKD 4.4.x\u8fd0\u884c\u4e86\u51e0\u4e2a\u6d4b\u8bd5\uff0c\u5c1d\u8bd5\u8c03\u6574\u5165\u53e3\u63a7\u5236\u5668\u548cCVO\u7684\u6e05\u5355\u3002\u8c03\u6574\u8fd9\u4e9b\u6587\u4ef6\u800c\u4e0d\u662f\u4f7f\u7528\u73b0\u6709\u7684IGN\u6587\u4ef6\u4f3c\u4e4e\u4f1a\u5bfc\u81f4\u5f15\u5bfc\u7a0b\u5e8f\u673a\u5668\u5728\u4ece\u670d\u52a1\u5668\u6536\u5230DHCP\u54cd\u5e94\u540e\u6302\u8d77\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728\u5b89\u88c5\u540e\u6b65\u9aa4\u4e2d\u8fdb\u884c\u8fd9\u4e9b\u8c03\u6574\u3002\n\u63a5\u4e0b\u6765\uff0c\u751f\u6210\u5c06\u4f7f\u7528\u6e05\u5355\u76ee\u5f55\u7684Ignition\u914d\u7f6e\u3002\u5c06\u8fd9\u4e9bIgnition\u914d\u7f6e\u590d\u5236\u5230\u76f8\u5e94\u7684Apache\u76ee\u5f55\uff1a\n\u6700\u540e\uff0cPXE\u542f\u52a8\u865a\u62df\u673a\u3002\u5982\u679c\u4e00\u5207\u914d\u7f6e\u6b63\u786e\uff0c\u7fa4\u96c6\u5c06\u5f00\u59cb\u81ea\u884c\u914d\u7f6e\u3002\n\u5728\u8d44\u6e90\u6709\u9650\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u4ec5\u542f\u52a8\u5f15\u5bfc\u548c\u4e3bVM\u3002\u5f15\u5bfc\u8fc7\u7a0b\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u542f\u52a8Worker/Infra/Compute\u8282\u70b9\u5e76\u5173\u95ed\u5f15\u5bfc\u8ba1\u7b97\u673a\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4(30\u5206\u949f\u6216\u66f4\u957f\u65f6\u95f4)\u3002\n\u53ea\u8981\u60a8\u5728\u542f\u52a8\u8fdb\u7a0b\u7684\u540c\u4e00\u5929\u4e0e\u7fa4\u96c6\u4ea4\u4e92\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u5bfc\u51fa\u4e0e\u7fa4\u96c6\u4ea4\u4e92\u6240\u9700\u7684KUBECONFIG\u53d8\u91cf\uff1a\n\u8981\u76d1\u89c6\u521d\u59cb\u5b89\u88c5\u8fc7\u7a0b\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002bootstrap-Complete\u547d\u4ee4\u5c06\u544a\u8bc9\u60a8\u4f55\u65f6\u505c\u6b62\u5f15\u5bfc\u8ba1\u7b97\u673a\u662f\u5b89\u5168\u7684\u3002install-Complete\u547d\u4ee4\u53ea\u662f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u68c0\u67e5\u4e00\u6b21API\uff0c\u4ee5\u786e\u4fdd\u4e00\u5207\u90fd\u5df2\u5b8c\u6210\u3002\n\u5728\u6dfb\u52a0\u5de5\u4f5c\u8282\u70b9\u671f\u95f4\uff0c\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u5b83\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u751a\u81f3\u6ca1\u6709\u5217\u51fa\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u72b6\u6001\u3002\n\u5f53\u65b0\u670d\u52a1\u5668\u8bd5\u56fe\u52a0\u5165\u96c6\u7fa4\u65f6\uff0c\u901a\u5e38\u5b58\u5728\u7531\u6240\u8ff0\u670d\u52a1\u5668\u53d1\u51fa\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff0c\u4ee5\u4fbf\u96c6\u7fa4\u4fe1\u4efb\u65b0\u8282\u70b9\u3002\u5982\u679c\u60a8\u770b\u4e0d\u5230\u8282\u70b9\uff0c\u5e76\u4e14\u6709\u6302\u8d77\u7684CSR\uff0c\u5219\u9700\u8981\u6279\u51c6\u5b83\u4eec\u3002\n\u4e00\u65e6\u5de5\u4eba\u51fa\u73b0\u5728\u5217\u8868\u4e2d\uff0c\u5c31\u7ed9\u5b83\u8d34\u4e0a\u6807\u7b7e\uff0c\u4ee5\u4fbf\u5165\u53e3\u64cd\u4f5c\u5458\u53ef\u4ee5\u7ee7\u7eed\u64cd\u4f5c\uff1a\n\u6700\u540e\uff0c\u89c2\u5bdf\u96c6\u7fa4\u64cd\u4f5c\u7b26\u3002\u6839\u636e\u7f51\u901f\u548c\u7cfb\u7edf\u8d44\u6e90\u7684\u4e0d\u540c\uff0c\u6b64\u8fc7\u7a0b\u6700\u591a\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210\u3002\nOC\u83b7\u53d6\u7fa4\u96c6\u8fd0\u7b97\u7b26NAME\u5e94\u7528\u7a0b\u5e8f\u3001\u4e91\u51ed\u636e\u5e94\u7528\u7a0b\u5e8f\u3001\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u3001\u53ef\u7528\u7248\u672c\u548c\u6b63\u5728\u964d\u7ea7\u7684SINCE\u8ba4\u8bc1\u7248\u672c\u3001\u5df2\u964d\u7ea7\u7684\u7248\u672c\u3001\u5df2\u964d\u7ea7\u7684SINCE\u8ba4\u8bc1\u7248\u672c\u3001\u5df2\u964d\u7ea7\u7684\u7248\u672c\u3001\u5df2\u964d\u7ea7\u7248\u672c\u3001\u5df2\u964d\u7ea7\u30023.1%TRUE_PRODUCT_FUSE_FUSE_PROFUSE_PROFUSE_FULL_FUSE_FULL_FIRESS_FIRED_FIRESS_FIRED_FIRESS_FIRED 4.3.1_FIRESS_FIRED_FIRESS_FIRESS*4.3.1_FUBLISE_FUSICE_FIRESS_FIRESS*4.3.1_FULL_FULL_FIRESS_FIRESS**4.3.1%_FUBLICE\u30023.1%True\uff1a\u865a\u5047\u4fe1\u606f\uff1b18hingress\uff1b\u865a\u5047\u4fe1\u606f\uff1b\u771f\u4fe1\u606f\uff1b11minsight\uff1b\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube-apiserver\uff1b\u865a\u5047\u4fe1\u606f\uff1a4.3.1%\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube-apiserver\uff1b\u865a\u5047\u4fe1\u606f\uff1a4.3.1%\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube-apiserver\uff1b\u865a\u5047\u4fe1\u606f\uff1b\u865a\u5047\u4fe1\u606f\uff1a4.3.1%\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube--\u8702\u7a9d\uff1b\u4fe1\u606f\uff1a4.3.1%\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube--\u8702\u7fa4\uff1a33.1%\uff1b\u865a\u5047\u4fe1\u606f\uff1a19hkube--\u8702\u7fa4\uff1a43.1%\u3002*TRUE_FUBE_FUBLE_FALSE_FUBLE_FIRESS_FUBLY_FUBLE_MANAGER_FIRESS_FUBLE_BUBLE_PROFIBE_FULL_FUBLE_FIRESS_FIRESS_FUBLE_FIRESS_FULL_FUBLE_FUBLE_FUBLISE_FUBLE_MUBLE_MANAGER_FUBLICE_FUTERS_FUBLE_FUBLE_\u3002\u9519\u8bef\u4ee3\u7801\uff1a\u9519\u8bef\u4ee3\u7801\uff1a19hMachine-config*4.3.1*\u3002\n..", "note_en": "Want containers? Learn how to set up and run a Kubernetes container cluster on your laptop with OKD.\n You&#39;ve been searching the Internet with your favorite search engine, such as\u00a0 DuckDuckGo, learning all you can learn about containers\u2014this sensation that has swept over the tech industry in the last few years. By now, you have heard about  Kubernetes, by far the most popular platform for managing containers. Maybe you stumbled across  Kubernetes The Hard Way or maybe even some Kubernetes guided courses.\n Maybe you went through the process of figuring this stuff out on your own. &#34;There has to be an easier way!&#34; you say to yourself as you stare at offerings from Google, Amazon, and others. You&#39;ve got a good idea why you want to use them and may have even deployed some containerized applications, and the apps are\u00a0working. Great! Along the way, you started reading or hearing about container orchestration, and you went down the rabbit hole following\u00a0every click-bait link out there.\n If looking at these providers makes your wallet hurt, or you&#39;re like me, and prefer to keep  your data under  your control, have no fear! OpenShift can help! After some more searching, you discover the\u00a0 OpenShift Container Platform, the offering from Red Hat. While they do offer 60-day trials, you don&#39;t really want to put a credit card on file. Maybe you don&#39;t want to deal with salespeople. Either way, I have a solution for you. As with almost everything Red Hat does, there is an open source community project called  OpenShift OKD.\n  I love open source.\u00a0Even though I have been happily working at Red Hat for almost five years now, I still run the upstream versions of everything. I like to be closer to the community and kick off some of the corporate ties from my day job. In addition, one of the parts I love about my job is breaking down complex processes into easily understood and repeatable pieces.\n I travel week in and week out for my job. While I have a substantial lab at home consisting of various off the shelf parts, there are times when a client site does not allow me to VPN out. For\u00a0cases like these, I had to come up with a way to run an environment reliably on my laptop. I also had to make sure that this environment was NAT&#39;d so that, to the outside world, it was just my laptop connecting to the WiFi.\n This guide shows you how to run OpenShift with a 2+ node cluster using\u00a0a single hypervisor running  libvirt. Most of the guides I found were only partially complete. Either difference between OCP versions\u00a0or different use cases necessitated an alternate way of doing things.\n Ultimately, I enjoy taking a complex topic, and making a straight-forward walk-through, explaining things as I go. I, like all other authors, am flawed in that I fail to explain things in sufficient detail when I become overly familiar with the process. I do try hard to make corrections based on feedback to\u00a0leave you with a clear, concise guide that explains what is happening so that it is not a simple monkey-see-monkey-do guide.\n If you are not interested in the NAT&#39;d portion of this guide (i.e., you have standard network layouts), skip steps 1, 2A, 2B below.\n   Work within the constraints of a captive portal (i.e., a hotel or other captive portal\u00a0that does not allow multiple connections from bridged VMs)\n    I assume you know how to set up a hypervisor of some sort (if skipping the NAT-ing section)\n    I assume you are trying to make an enclosed environment (i.e., you are not using a centralized DNS/DHCP/webserver)\n  To set up the host, create a bridge network for all the VMs to communicate with themselves on:\n nmcli con shownmcli con add ifname br0 type bridge con-name br0nmcli con add type bridge-slave ifname eno1 master br0nmcli con up br0nmcli con modify &#34;bridge-br0&#34; ifname br0 type ethernet ip4 10.120.120.1/24\n This should be all that is required for a bridged network for the\u00a0 libvirt guests to use.\n  This VM is independent of the OpenShift install. It hosts services required by OpenShift but is unaffected by the installation (or lack thereof) of OKD4.\n This VM should have two network cards, one that is on the bridge, and one that is on the NAT interface. In my case, I set up the following:\n    On the guest that is designated as the gateway, ensure that the  sysctl is  on for packet-forwarding. Packet-forwarding allows the gateway to act as a router forwarding and routing traffic.\n    Next, make two zones with  firewalld. The external zone should be bound to the interface on the libvirt NAT, which can access the internet. This interface/zone should also make sure that masquerading is enabled:\n         nmcli con mod ${INTERNAL} ipv4.address &#34;10.120.120.250/24&#34;nmcli con mod ${INTERNAL} ipv4.dns-search &#34;lab-cluster.okd4.lab&#34;nmcli con mod ${INTERNAL} connection.autoconnect yesnmcli con mod ${INTERNAL} ipv4.method manual\n I have decided to allow internal traffic on the internal zones instead of opening up all the individual ports.  Do this at your own risk.\n Make sure that  systemd-resolved is disabled and that Network Manager uses the default DNS settings:\n   We are installing all the packages we need for this project to save some commands.\n     Because HAProxy binds to port  80, we need to move Apache to a different port. Port\u00a0 8080 is a reasonable choice:\n    Add the Apache port to the internal firewall. This is not necessary if you have set the internal to accept everything:\n     CoreOS files are downloaded from  https://getfedora.org/coreos/download/ For this installation, I am using the Bare Metal images.\n We are going to use symlinks in order not to have to change configuration files if we update the CoreOS image. Also, create a symlink to the latest version so that we don&#39;t have to update the PXE menu each release:\n   Most of the setup for dnsmasq is done in its configuration file. However, in a single master OKD4 deployment, I found that the maximum number of concurrent DNS requests was being reached. The default is 150. To increase this, you need to edit the  systemd unit file located at  /etc/systemd/system/multi-user.target.wants/dnsmasq.service so that it looks like this:\n    After that is complete, we are ready to start editing the  dnsmasq.conf file. This file is located at\u00a0 /etc/dnsmasq.conf on CentOS 8. Dnsmasq is used for both DHCP and DNS. Dnsmasq implements the official DHCP options. Review  this page, as it helps you make sense of the  dhcp-option= settings in the file. While some of the DHCP options in dnsmasq have &#34;pretty&#34; names. I avoided using them for consistency&#39;s sake as several of the options used below did not have a &#34;pretty&#34; name. The syntax of the  dhcp-option is as follows:\n  It is important to know that the Fedora CoreOS DHCP client does not currently use  send-name. This means that while a host receives its hostname and IP from the DHCP server, it does not register with the DNS portion of dnsmasq. This led me to statically set the IPs with dnsmasq. This is done using tagging, like so:\n  Once you have tagged the MAC address, you can then use this tag to help identify the host. Below is the hostname that is sent to the new VM:\n  I am not going to cover all of the OpenShift 4 requirements in depth. You can find the requirements in the  official documentation. For DNS, you need to have:\n A wildcard entry that points to a load balancer fronting the routers (in our case it is the gateway IP handled by HAProxy)\n We are going to configure these in dnsmasq using the  host-record option. This option is at the bottom of the file below:\n # Setup DNSMasq on Guest For Default NAT interface# dnsmasq.conf# Set this to listen on the internal interfacelisten-address=::1,127.0.0.1,10.120.120.250interface=enp2s0expand-hosts# This is the domain the cluster will be ondomain=lab-cluster.okd4.lab# The &#39;upstream&#39; dns server... This should be the libvirt NAT# interface on your computer/laptopserver=192.168.122.1local=/okd4.lab/local=/lab-cluster.okd4.lab/# Set the wildcard DNS to point to the internal interface# HAProxy will be listening on this interfaceaddress=/.apps.lab-cluster.okd4.lab/10.120.120.250dhcp-range=10.120.120.20,10.120.120.220,12hdhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases# Specifies the pxe binary to serve and the address of# the pxeserver (this host)dhcp-boot=pxelinux.0,pxeserver,10.120.120.250# dhcp option 3 is the routerdhcp-option=3,10.120.120.250# dhcp option 6 is the DNS serverdhcp-option=6,10.120.120.250# dhcp option 28 is the broadcast addressdhcp-option=28,10.120.120.255# The set is required for tagging. Set a mac address with a specific tagdhcp-mac=set:bootstrap,52:54:00:15:30:f2dhcp-mac=set:master,52:54:00:06:94:85dhcp-mac=set:worker,52:54:00:82:fc:9e# Match the tag with a specific hostname# dhcp option 12 is the hostname to hand out to clientsdhcp-option=tag:bootstrap,12,bootstrap.lab-cluster.okd4.labdhcp-option=tag:master,12,master-0.lab-cluster.okd4.labdhcp-option=tag:worker,12,worker-0.lab-cluster.okd4.labdhcp-host=52:54:00:15:30:f2,10.120.120.99dhcp-host=52:54:00:06:94:85,10.120.120.50dhcp-host=52:54:00:82:fc:9e,10.120.120.60# the log-dhcp option is verbose logging used for debugginglog-dhcppxe-prompt=&#34;Press F8 for menu.&#34;, 10pxe-service=x86PC, &#34;PXEBoot Server&#34;, pxelinuxenable-tftptftp-root=/var/lib/tftpboot# Set the SRV record for etcd. Normally there are 3 or more entries in# SRV recordsrv-host=_etcd-server-ssl._tcp.lab-cluster.okd4.lab,etcd-0.lab-cluster.okd4.lab,2380,0,10# host-record options are linking the mac, ip and hostname for dnshost-record=52:54:00:dd:5e:07,10.120.120.250,bastion.okd4.labhost-record=52:54:00:15:30:f2,10.120.120.99,bootstrap.lab-cluster.okd4.labhost-record=52:54:00:06:94:85,10.120.120.50,master-0.lab-cluster.okd4.labhost-record=52:54:00:06:94:85,10.120.120.50,etcd-0.lab-cluster.okd4.labhost-record=52:54:00:82:fc:9e,10.120.120.60,worker-0.lab-cluster.okd4.lab# These host records are for the api and api-int to point to HAProxyhost-record=bastion.okd4.lab,api.lab-cluster.okd4.lab,10.120.120.250,3600host-record=bastion.okd4.lab,api-int.lab-cluster.okd4.lab,10.120.120.250,3600\n Copy the contents of the above file, overwrite the  /etc/dnsmasq.conf and then restart the service:  sudo systemctl restart dnsmasq\n NOTE:\u00a0Don&#39;t forget to change the MAC addresses in the above file to match your VM&#39;s MAC addresses\n  As OKD represents a community version of an enterprise solution, a load balancer is assumed to be functioning in your environment. To achieve this, we are going to use a software load balancer called HAProxy. It&#39;s relatively straight forward to set up.\n The first thing to do is to make sure that SELinux allows the needed HAProxy ports:\n semanage port -a -t http_port_t -p tcp 6443semanage port -a -t http_port_t -p tcp 22623\n Port 6443 is the API port which is used for\u00a0master-to-master communication and\u00a0the Web UI, as well as using the  oc\u00a0command-line utilities.\n Port 22623 provides configuration files to new hosts joining the cluster. Both ports are required for the successful operation of the cluster, and both are assumed to have multiple backends in the load balancer.\n  # HAProxy Config section# Global settings#---------------------------------------------------------------------globalmaxconn 20000log /dev/log local0 infochroot /var/lib/haproxypidfile /var/run/haproxy.piduser haproxygroup haproxydaemon# turn on stats unix socketstats socket /var/lib/haproxy/stats#---------------------------------------------------------------------# common defaults that all the &#39;listen&#39; and &#39;backend&#39; sections will# use if not designated in their block#---------------------------------------------------------------------defaultsmode httplog globaloption httplogoption dontlognulloption forwardfor except 127.0.0.0/8option redispatchretries 3timeout http-request 10stimeout queue 1mtimeout connect 10stimeout client 300stimeout server 300stimeout http-keep-alive 10stimeout check 10smaxconn 20000frontend control-plane-apibind *:6443mode tcpdefault_backend control-plane-apioption tcplogbackend control-plane-apibalance sourcemode tcpserver master-0 master-0.lab-cluster.okd4.lab:6443 checkserver bootstrap bootstrap.lab-cluster.okd4.lab:6443 check backupfrontend control-plane-bootstrapbind *:22623mode tcpdefault_backend control-plane-bootstrapoption tcplogbackend control-plane-bootstrapbalance sourcemode tcpserver master-0 master-0.lab-cluster.okd4.lab:22623 checkserver bootstrap bootstrap.lab-cluster.okd4.lab:22623 check backupfrontend ingress-router-httpbind *:80mode tcpdefault_backend ingress-router-httpoption tcplogbackend ingress-router-httpbalance sourcemode tcpserver worker-0 worker-0.lab-cluster.okd4.lab:80 checkfrontend ingress-router-httpsbind *:443mode tcpdefault_backend ingress-router-httpsoption tcplogbackend ingress-router-httpsbalance sourcemode tcpserver worker-0 worker-0.lab-cluster.okd4.lab:443 check\n I am running the ingress router on the single worker node. This requires some tweaking of OpenShift before and after the installation. This is reflected in the HAProxy config above by the heading  backend ingress-router-https. If you are using more nodes, simply add node definitions to the appropriate  backend section in the HAProxy configuration.\n HAProxy is prone to failure anytime you restart dnsmasq, and it cannot resolve hosts during the restart, however brief. In addition, I have observed that there are times on reboot that HAProxy will not start for the same reason. The solution is to simply restart it after dnsmasq is running (although you can optionally edit the  systemd service unit for HAProxy to make sure it starts after dnsmasq).\n        The file below references resources hosted by Apache, so we want to make sure the menu has port  8080 for the pull. Because HAProxy is listening on both standard web ports ( 80 and  443), in an earlier step, we told Apache to listen on port  8080.\n # master pxe fileUI menu.c32DEFAULT fedcosTIMEOUT 100MENU TITLE RedHat CoreOS Node InstallationMENU TABMSG Press ENTER to boot or TAB to edit a menu entryLABEL fedcos\u00a0 \u00a0 MENU LABEL Install fedcos\u00a0 \u00a0 KERNEL http://bastion.okd4.lab:8080/fedcos/installer-kernel\u00a0 \u00a0 INITRD http://bastion.okd4.lab:8080/fedcos/installer-initramfs.img\u00a0 \u00a0 APPEND console=tty0 console=ttyS0 ip=dhcp rd.neednet=1 coreos.inst=yes coreos.inst.ignition_url=http://bastion.okd4.lab:8080&gt;/ignition/master.ign coreos.inst.image_url=http://bastion.okd4.lab:8080/fedcos/metal.raw.gz coreos.inst.install_dev=vdaIPAPPEND 2\n NOTE: You should create this file for each host you have. The file name should be  01-&lt;mac addresses with &#39;-&#39; instead of &#39;:&#39;&gt;. The dnsmasq lease looks like this:\n  Therefore, use the fifth field to match with the TFTP server. Given the MAC address of  52:54:00:06:94:85, the full path to the file would be  /var/lib/tftpboot/pxelinux.cfg/01-52-54-00-06-94-85\n    The steps for setting up an environment are almost identical between OCP4 and OKD. The main differences are:\n Need to manually edit the ETCD Quorum guard if you have less than three\u00a0masters\n  Extract and place the binaries in  /bin (or alter your PATH so that the binaries are there).\n  At this time, the only release that appears to be working is 2020-01-28-022517. I have tried several others without success. Make sure you have the correct version by running the following command:\n  The pull secrets are optional for OKD. However, they are helpful for testing specific operators. I recommend getting a 60-day evaluation for the pull secret before installation. Obtain your pull secret from  here.\n       ENSURE THAT ALL VARIABLES ARE NOT EMPTY! The rest of this guide relies on the environment variables to fill in configuration files.\n     The  cat command below replaces the variables with the shell variables created above. This is the initial cluster configuration YAML file that is used to create the manifests and Ignition files.\n cat &lt;&lt; EOF &gt; install-config.yaml.bakapiVersion: v1baseDomain: ${BASE_DOMAIN}compute:- hyperthreading: Enabled \u00a0\u00a0\u00a0 name: worker\u00a0 replicas: ${NUMBER_OF_WORKER_VMS}controlPlane:\u00a0 hyperthreading: Enabled \u00a0\u00a0\u00a0 name: master\u00a0\u00a0 replicas: ${NUMBER_OF_MASTER_VMS}metadata:\u00a0 name: ${CLUSTER_NAME}\u00a0networking:\u00a0 clusterNetwork:\u00a0 - cidr: ${CLUSTER_NETWORK}\u00a0\u00a0 \u00a0 hostPrefix: 23\u00a0\u00a0 networkType: OpenShiftSDN\u00a0 serviceNetwork:\u00a0\u00a0 - ${SERVICE_NETWORK}platform:\u00a0 none: {}\u00a0fips: false\u00a0pullSecret: ${PULL_SECRET}\u00a0sshKey: ${SSH_KEY}\u00a0EOF\n The reason we create the backup is that running the  openshift-install command will consume the file and we want to have a copy of it in case we start over or create a new cluster.\n   I have run several tests with OKD 4.4.x, trying to adjust the manifests for\u00a0the Ingress Controller and the CVO.\u00a0Adjusting these files instead of using the stock IGN files seems to result in the bootstrap machine hanging after receiving the DHCP response from the server, so we will make these adjustments in a post-install step.\n Next, generate the Ignition configurations, which will consume the manifests directory. Copy these Ignition configurations\u00a0to the appropriate Apache directory:\n    Finally, PXEboot the VMs. If everything is configured correctly, the cluster starts to configure itself.\n On a computer with limited resources, only start the bootstrap and master VMs. After the bootstrap process is complete, you can start the worker/infra/compute node and take down the bootstrap machine. It can take quite some time for this to complete (30 minutes or more).\n  As long as you are interacting with the cluster on the same date as you started the process, you can run the following to export the  KUBECONFIG variable that is needed for interacting with the cluster:\n    to monitor the initial installation process. The  bootstrap-complete\u00a0command will tell you when it is safe to stop the bootstrap machine. The  install-complete\u00a0command simply checks the API every so often to ensure everything has completed.\n During the addition of the worker node, you may see it not being ready, or not even listed. Use the following commands to view the status.\n     When a new server attempts to join a cluster, there are often certificate signing requests that are issued by said server so that the cluster trusts the new node. If you do not see nodes, and you have pending CSRs, you need to approve them.\n   Once the worker shows up in the list, label it so that the ingress operator can proceed:\n  Finally, watch the cluster operators. This process can take up to a couple of hours to complete before everything goes &#34;True,&#34;\u00a0depending on Internet speed and system resources:\n oc get clusteroperatorsNAME \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 VERSION \u00a0 AVAILABLE \u00a0 PROGRESSING \u00a0 DEGRADED \u00a0 SINCEauthentication \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a014hcloud-credential \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a020hcluster-autoscaler \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a018hconsole \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a09hdns \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a018mimage-registry \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a018hingress \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0 \u00a0True \u00a0 \u00a0 \u00a0 11minsights \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a019hkube-apiserver \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a019hkube-controller-manager \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a019hkube-scheduler \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a019hmachine-api \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 True \u00a0 \u00a0 \u00a0 \u00a0False \u00a0 \u00a0 \u00a0 \u00a0 False \u00a0 \u00a0 \u00a019hmachine-config \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.3.1 \u00a0\n......", "posttime": "2020-05-17 08:35:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,kubernetes", "title": "\u5982\u4f55\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884cKubernetes\u96c6\u7fa4", "title_en": "How to run a Kubernetes cluster on your laptop", "transed": 1, "url": "https://www.redhat.com/sysadmin/kubernetes-cluster-laptop", "via": "", "real_tags": ["\u7535\u8111"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002474, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u53d1\u73b0\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u603b\u662f\u6709\u53ef\u80fd\u7cbe\u786e\u6d4b\u91cf\u4e24\u4e2a\u7269\u7406\u89c2\u6d4b\u503c\uff0c\u8fd9\u5c31\u662f\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u3002\n\u6211\u4eec\u53ef\u80fd\u5df2\u7ecf\u4ece\u9ad8\u4e2d\u6216\u5927\u5b66\u7684\u7269\u7406\u8bfe\u7a0b\u4e2d\u5b66\u5230\u4e86\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u5373\u67d0\u4e9b\u7c92\u5b50\u7684\u4f4d\u7f6e\u88ab\u786e\u5b9a\u5f97\u8d8a\u7cbe\u786e\uff0c\u5b83\u7684\u52a8\u91cf\u4ece\u521d\u59cb\u6761\u4ef6\u5c31\u8d8a\u4e0d\u80fd\u51c6\u786e\u5730\u9884\u6d4b\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u7269\u7406\u89c2\u5bdf\u91cf\u662f\u4f4d\u7f6e\u548c\u52a8\u91cf\u3002\n\u5f62\u5f0f\u4e0a\uff0c\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u6307\u51fa\uff0c\u4e24\u4e2a\u4efb\u610f\u5384\u7c73\u7b97\u7b26\u5728\u7ed9\u5b9a\u72b6\u6001\u4e0b\u7684\u65b9\u5dee\u7684\u4e58\u79ef\u603b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4ea4\u6362\u5668\u671f\u671b\u503c\u7684\u5e73\u65b9\u3002\u5728\u516c\u5f0f\u4e2d\uff1a\n\u5176\u4e2d$\\mathbb{V}_{\\psi}(\\Omega_1)$\u548c$\\mathbb{V}_{\\psi}(\\Omega_2)$\u4f7f\u7528\u6211\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u7684\u7b26\u53f7\uff0c$[\\Omega_1\uff0c\\Omega_2]$\u79f0\u4e3a$\\Omega_1$\u548c$\\Omega_2$\u7684\u6362\u4f4d\u5668\uff0c$[\\Omega_1\uff0c\\Omega_2]=\u3002\n\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u60f3\u7ed9\u51fa\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u7684\u4e00\u4e2a\u6570\u5b66\u8bc1\u660e\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u4ee5\u4e0b\u56db\u4e2a\u5b9a\u7406\u548c\u6027\u8d28\u6765\u8bc1\u660e\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u3002\n\u67ef\u897f-\u65bd\u74e6\u8328\u4e0d\u7b49\u5f0f\u6307\u51fa\uff0c\u5bf9\u4e8e\u5185\u79ef\u7a7a\u95f4\u7684\u6240\u6709\u5411\u91cf$u$\u548c$v$\uff0c\u786e\u5b9e\u3002\n\u6240\u6709\u5411\u91cf$u$\u548c$v$\u7684\u5185\u79ef\u7684\u865a\u90e8\uff0c$\\text{Im}\\BIG(\\Langu\uff0cv\\Rangle\\BIG)$\u53ef\u4ee5\u8ba1\u7b97\u4e3a\n\u5047\u8bbe$u=a1+b1i$\u548c$v=a2+b2i$\uff0c\u5176\u4e2d$a1$\u3001$a2$\u3001$b1$\u548c$b2$\u662f\u5b9e(\u5217)\u5411\u91cf\u3002\n\u5bf9\u4e8e\u719f\u6089\u4e09\u89d2\u5f62\u5e76\u77e5\u9053\u590d\u6570\u7684\u6781\u5750\u6807\u8868\u8fbe\u5f0f\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u5e94\u8be5\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u6211\u4eec\u5c06\u8df3\u8fc7\u8fd9\u91cc\u7684\u6b63\u5f0f\u8bc1\u660e\u3002\n\u5982\u679cA\u662fHermitian$n$x$n$\u77e9\u9635\uff0c\u5219\u5bf9\u6240\u6709$u\uff0cv^{\\\u7d20\u6570}\\in\\mathbb{C}$\u3002\u6211\u4eec\u6709\u3002\n\u7531\u4e8e$\\Delta_{\\psi}(\\ommega)=\\omega-\\langle\\omegga\\rangle_{\\psi}i$\u548c$\\omegga$\u662f\u5384\u7c73\u7b97\u5b50\uff0c\u56e0\u6b64$\\Delta_{\\psi}(\\ommega)$\u4e5f\u662f\u5384\u7c73\u7b97\u5b50\u3002\u57fa\u4e8e\u65b9\u5dee\u7684\u5b9a\u4e49\uff0c\u5229\u7528\u5384\u7c73\u7279\u6027\u8d28\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u5f97\u5230\u3002\n\u6211\u4eec\u5c06\u67ef\u897f-\u65bd\u74e6\u8328\u4e0d\u7b49\u5f0f\u5e94\u7528\u4e8e\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u7684\u5de6\u4fa7\uff0c\n\u5728\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u4e2d\uff0c\u6362\u4f4d\u5b50$[\\Omega_1\uff0c\\Omega_2]=0$\u8868\u793a\u4e3a$\\Omega_1\\Omega_2=\\Omega_2\\Omega_1$\u548c$\\Omega_1\\Omega_2|\\psi\\Rangle=\\Omega_2\\Omega_1|\\psi\\Rangle$\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c$[\\Omega_1\uff0c\\Omega_2]=0$\uff0c\u5219\u4e24\u4e2a\u8fde\u7eed\u6d4b\u91cf$\\Omega_1\\Omega_2$\u548c$\\Omega_1\\Omega_2$\u4e4b\u540e\u7684\u7cfb\u7edf\u72b6\u6001\u76f8\u540c\u3002\u5426\u5219\uff0c\u5982\u679c$[\\Omega_1\uff0c\\Omega_2]\\NEQ 0$\uff0c\u5219\u7cfb\u7edf\u5728\u4e24\u4e2a\u8fde\u7eed\u5ea6\u91cf$\\Omega_1\\Omega_2$\u548c$\\Omega_1\\Omega_2$\u4e0d\u76f8\u540c\u540e\u5904\u4e8e\u72b6\u6001\u3002\u5982\u679c\u6362\u5411\u5668$[\\\u6b27\u7c73\u8304_1\uff0c\\\u6b27\u7c73\u8304_2]=0$\uff0c\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u8868\u660e\uff0c$\\\u6b27\u7c73\u8304_1$\u548c$\\\u6b27\u7c73\u8304_2$\u6240\u6d4b\u91cf\u7684\u4e24\u4e2a\u7269\u7406\u89c2\u6d4b\u503c\u5728\u7cbe\u5ea6\u4e0a\u662f\u6ca1\u6709\u6781\u9650\u7684\u3002\n\u5728\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u7684\u5176\u4ed6\u8868\u8ff0\u4e2d\uff0c\u6709\u65f6\u6211\u4eec\u4f1a\u770b\u5230\u201c\u540c\u65f6\u6027\u201d\u8fd9\u4e2a\u8bcd\u3002\u5982\u4f55\u7406\u89e3\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u4e2d\u7684\u540c\u65f6\u6027\uff1f\u7ed9\u5b9a\u7684\u6d4b\u91cf\u4f1a\u6539\u53d8\u7cfb\u7edf\u7684\u72b6\u6001\uff0c\u5728\u65f6\u57df\u4e0a\u51e0\u4e4e\u4e0d\u53ef\u80fd\u8fbe\u5230\u7edd\u5bf9\u7684\u540c\u65f6\u6027\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u540c\u65f6\u6027\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u8fd9\u91cc\u7684\u540c\u65f6\u662f\u6307\u6d4b\u91cf\u987a\u5e8f$\\Omega_1$\u548c$\\Omega_2$\u4e0d\u4f1a\u6539\u53d8\u6700\u7ec8\u7684\u89c2\u6d4b\u7ed3\u679c\uff0c\u56e0\u4e3a\u6211\u4eec\u52aa\u529b\u4f7f\u5b83\u4eec\u540c\u65f6\u8fdb\u884c\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u63a7\u5236\u8fd9\u4e24\u4e2a\u6d4b\u91cf\u7684\u786e\u5207\u987a\u5e8f\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u540c\u65f6\u53ea\u610f\u5473\u7740$[\\\u6b27\u7c73\u8304_1\uff0c\\\u6b27\u7c73\u8304_2]=0$\u3002\n\u5982\u6d77\u68ee\u5821\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u4e0d\u7b49\u5f0f\u5de6\u4fa7\u6240\u793a\uff0c\u5982\u4f55\u6d4b\u91cf\u7cfb\u7edf\u72b6\u6001\u7684\u7269\u7406\u53ef\u89c2\u6d4b\u503c\u7684\u65b9\u5dee\uff1f\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u6d4b\u91cf\u6539\u53d8\u4e86\u7cfb\u7edf\u7684\u72b6\u6001\u3002\u6211\u4eec\u5c06\u9700\u8981\u521b\u5efa\u5927\u91cf\u7cfb\u7edf\u72b6\u6001\u7684\u514b\u9686\u3002\u4e00\u65e6\u6d4b\u91cf\u4e86\u7cfb\u7edf\u72b6\u6001\uff0c\u5c31\u5e94\u8be5\u5c06\u5176\u4e22\u5f03\uff0c\u5e76\u4e14\u4e0d\u518d\u7528\u4e8e\u6d4b\u91cf\u7269\u7406\u53ef\u89c2\u6d4b\u5bf9\u8c61\u3002\u5bf9\u540c\u4e00\u7cfb\u7edf\u72b6\u6001\u7684\u6d4b\u91cf\u610f\u5473\u7740\u5bf9\u7cfb\u7edf\u72b6\u6001\u514b\u9686\u7684\u6d4b\u91cf\uff0c\u800c\u4e0d\u662f\u5bf9\u786e\u5207\u7684\u7cfb\u7edf\u72b6\u6001\u7684\u6d4b\u91cf\u3002\n\u6d77\u68ee\u5821\u7684\u4e00\u822c\u6d4b\u4e0d\u51c6\u539f\u7406\u80fd\u4ee5\u5982\u6b64\u7b80\u5355\u7684\u65b9\u5f0f\u63a8\u5bfc\u51fa\u6765\uff0c\u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u7684\u5927\u5b66\u7269\u7406\u8bfe\u7a0b\u8001\u5e08\u4ece\u6765\u6ca1\u6709\u62ff\u51fa\u8bc1\u636e\u6765\u8bc1\u660e\u8fd9\u4e00\u91cd\u8981\u539f\u5219\u3002", "note_en": "In quantum mechanics, one of the key discoveries is that it is not always possible that we could measure two physical observables precisely, which is the Heisenberg\u2019s general uncertainty principle.\n  We might have learned a special case of the Heisenberg\u2019s general uncertainty principle from high school or college physics courses that the more precisely the position of some particle is determined, the less precisely its momentum can be predicted from initial conditions, and vice versa. In this case, the two physical observables are position and momentum.\n  Formally, the Heisenberg\u2019s general uncertainty principle states that the product of the variances of two arbitrary hermitian operators on a given state is always greater than or equal to one-fourth the square of the expected value of their commutator. In formulas:\n where $\\mathbb{V}_{\\psi}(\\Omega_1)$ and $\\mathbb{V}_{\\psi}(\\Omega_2)$ are using the notations from my previous  post, $[\\Omega_1, \\Omega_2]$ is called the commutator of $\\Omega_1$ and $\\Omega_2$, and $[\\Omega_1, \\Omega_2] = \\Omega_1 \\Omega_2 - \\Omega_2 \\Omega_1$.\n  In this blog post, I would like to show a mathematical proof to Heisenberg\u2019s general uncertainty principle.\n  We would use the following four theorems and properties to prove Heisenberg\u2019s general uncertainty principle.\n  The Cauchy\u2013Schwarz inequality states that for all vectors $u$ and $v$ of an inner product space it is true that\n   The imaginary part of the inner product of all vectors $u$ and $v$, $\\text{Im}\\big(\\langle u, v \\rangle\\big)$, could be computed as\n Assuming $u = a_1 + b_1 i$ and $v = a_2 + b_2 i$, where $a_1$, $a_2$, $b_1$, and $b_2$ are real (column) vectors.\n     This should be very straightforward to the people who are familiar with triangles and know the polar coordinate expression of complex numbers. We will skip the formal proof here.\n  If A is a hermitian $n$-by-$n$ matrix, then for all $u, v^{\\prime} \\in \\mathbb{C}$. we have\n    Because $\\Delta_{\\psi}(\\Omega) = \\Omega - \\langle \\Omega \\rangle_{\\psi} I$ and $\\Omega$ is a hermitian operator, therefore $\\Delta_{\\psi}(\\Omega)$ is also a hermitian operator. Based on  the definition of variance, using the hermitian property, we further have\n We apply the Cauchy\u2013Schwarz inequality to the left side of the Heisenberg\u2019s general uncertainty principle,\n      In Heisenberg\u2019s general uncertainty principle, the commutator $[\\Omega_1, \\Omega_2] = 0$ suggests $\\Omega_1 \\Omega_2 = \\Omega_2 \\Omega_1$ and $\\Omega_1 \\Omega_2 | \\psi \\rangle = \\Omega_2 \\Omega_1 | \\psi \\rangle$. This means that the system states after the two sequential measures $\\Omega_1 \\Omega_2$ and $\\Omega_1 \\Omega_2$ are the same if $[\\Omega_1, \\Omega_2] = 0$. Otherwise, if $[\\Omega_1, \\Omega_2] \\neq 0$ the system states after the two sequential measures $\\Omega_1 \\Omega_2$ and $\\Omega_1 \\Omega_2$ are not the same. If the commutator $[\\Omega_1, \\Omega_2] = 0$, Heisenberg\u2019s general uncertainty principle suggests that the two physical observables that $\\Omega_1$ and $\\Omega_2$ are measuring would have not limit in precision.\n  In other expressions of Heisenberg\u2019s general uncertainty principle, sometimes we would see the word \u201csimultaneity\u201d. How to understand the simultaneity in Heisenberg\u2019s general uncertainty principle? Given measurement would change the system state, and it is almost impossible to achieve the absolute simultaneity in the time domain, what does the simultaneity mean in this case? Here simultaneity means that the order of measurement $\\Omega_1$ and $\\Omega_2$ do not change the final observation, as we tried hard to make them simultaneous and it is impossible to control the exact order of these two measurements. In short, simultaneity just means $[\\Omega_1, \\Omega_2] = 0$.\n  How to measure the variance of physical observable for a system state, as is shown at the left side of the inequality of Heisenberg\u2019s general uncertainty principle? Measurement changes system state in quantum mechanics. We would need to create lots of clones of the system state. Once a system state is measured, it should be discarded and not be used for the measurement for the physical observable anymore. Measurement on the same system state means measurement on system state clones and not the exact system state.\n  It is quite amazing that the Heisenberg\u2019s general uncertainty principle could be derived in a such simple way. Unfortunately, the my college physics course instructor never showed a proof to this important principle.", "posttime": "2020-05-17 08:17:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u539f\u7406,uncertainty,omega", "title": "\u6d77\u68ee\u5821\u6d4b\u4e0d\u51c6\u539f\u7406\u8bc1\u660e", "title_en": "Heisenberg's Uncertainty Principle Proof", "transed": 1, "url": "https://leimao.github.io/blog/Heisenberg-Uncertainty-Principle/", "via": "", "real_tags": ["\u539f\u7406", "omega"]}, {"category": "", "categoryclass": "", "imagename": "545bbe2f1723dc132fce2293ab51a6c0.jpg", "infoid": 1002473, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u5173\u4e8e\u968f\u673a\u7532\u9aa8\u6587\u6a21\u578b\u7684\u4e00\u7cfb\u5217\u5e16\u5b50\u4e2d\u7684\u7b2c\u4e00\u7bc7\u3002*\u5bf9\u4e8e\u4e00\u4e9b\u4eba\u7684\u54c1\u5473\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6709\u70b9\u4e0d\u7a33\u5b9a\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5bf9\u53ef\u8bc1\u660e\u7684\u5b89\u5168\u4e0d\u611f\u5174\u8da3\uff0c\u6ca1\u95ee\u9898\u3002\u201c\u4e00\u65e6\u6211\u628a\u8fd9\u4ef6\u4e8b\u4ece\u6211\u7684\u7cfb\u7edf\u4e2d\u62ff\u51fa\u6765\uff0c\u6211\u4f1a\u5e26\u56de\u66f4\u591a\u5173\u4e8e\u8f6f\u4ef6\u548c\u7269\u7406\u5b89\u5168\u7684\u4fe1\u606f\u3002\n\u78b0\u5de7\u4eca\u5929\u6211\u8ba1\u5212\u8bb2\u6388\u4e00\u95e8\u5173\u4e8e\u53ef\u8bc1\u660e\u5b89\u5168\u548c\u201c\u968f\u673aOracle\u6a21\u578b\u201d\u7684\u8bfe\u7a0b\u3002\u201c\u5728\u6574\u7406\u6211\u7684\u60f3\u6cd5\u65f6\uff0c\u6211\u7a81\u7136\u60f3\u5230\uff0ca)\u8fd9\u95e8\u8bfe\u53ef\u80fd\u4f1a\u8ba9\u4e0d\u662f\u6211\u7814\u7a76\u751f\u7684\u4eba\u611f\u5174\u8da3\uff0cb)\u4f3c\u4e4e\u6ca1\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u201d\u95e8\u5916\u6c49\u201c\u4ecb\u7ecd\u5b83\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u6211\u559c\u6b22\u8c08\u8bba\u5bc6\u7801\u5b66\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u4ece\u4e0d\u5b89\u5168\u7684\u539f\u8bed\u5f00\u59cb\uff0c\u5b9e\u73b0\u5e76\u4e0d\u91cd\u8981\u3002\n\u56e0\u6b64\uff0c\u5192\u7740\u758f\u8fdc\u6211\u5c0f\u5c0f\u7684\u8bfb\u8005\u7684\u98ce\u9669\uff0c\u6211\u5c06\u4ece\u6211\u4eec\u5b9a\u671f\u5b89\u6392\u7684\u201c\u5bc6\u7801\u7cfb\u7edf\u5982\u4f55\u53d8\u574f\u201d\u8282\u76ee\u4e2d\u62bd\u51fa\u65f6\u95f4\u6765\u8c08\u8c08\u8fd9\u4e2a\u4e66\u5446\u5b50\u7684\u8bdd\u9898-\u6b63\u5982\u6211\u4eec\u7a0d\u540e\u5c06\u770b\u5230\u7684\uff0c\u8fd9\u672c\u8eab\u5c31\u662f\u5bc6\u7801\u5982\u4f55\u51fa\u9519\u7684\u53e6\u4e00\u79cd\u5473\u9053\u3002\n\u5728\u8ba8\u8bba\u968f\u673a\u9884\u8a00\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8ba8\u8bba\u6563\u5217\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u63a5\u53d7(\u6f5c\u5728\u7684)\u957f\u8f93\u5165\uff0c\u5e76\u5c06\u5176\u2018\u6563\u5217\u2019\u6210\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u503c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6d88\u606f\u6458\u8981\u3002\n\u6211\u4eec\u5728\u5bc6\u7801\u5b66\u4e2d\u7ecf\u5e38\u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u3002\u867d\u7136\u4ed6\u4eec\u56e0\u51fa\u73b0\u5728\u6570\u5b57\u7b7e\u540d\u65b9\u6848\u4e2d\u800c\u53d7\u5230\u6700\u591a\u7684\u5173\u6ce8\uff0c\u4f46\u4ed6\u4eec\u4e5f\u51fa\u73b0\u5728\u8bb8\u591a\u52a0\u5bc6\u65b9\u6848\u4e2d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6574\u4e2a\u7403\u573a\u4e0a\uff0c\u6254\u4e00\u5757\u77f3\u5934\u800c\u4e0d\u51fb\u4e2d\u4e00\u5757\u662f\u76f8\u5f53\u56f0\u96be\u7684\u3002\n\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u5bc6\u7801\u5b66\u6563\u5217\u51fd\u6570\u5fc5\u987b\u81f3\u5c11\u6ee1\u8db3\u4ee5\u4e0b\u5c5e\u6027\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u9996\u5148\uff0c\u6211\u4eec\u9884\u8ba1\u5b83\u662f\u201c\u5355\u5411\u7684\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f88\u96be\u201c\u53cd\u8f6c\u201d\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u53ea\u7ed9\u51fa\u4e00\u4e2a\u6d88\u606f\u6458\u8981\uff0c\u5c31\u5f88\u96be\u627e\u5230\u539f\u6765\u7684\u6d88\u606f\u3002\n\u5176\u6b21\uff0c\u6563\u5217\u51fd\u6570\u5e94\u8be5\u662f\u201c\u6297\u51b2\u7a81\u7684\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5e94\u8be5\u5f88\u96be\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u6d88\u606f(M\uff0cM\u2018)\uff0c\u4f7f\u5f97Hash(M)==Hash(M\u2019)\u3002\u6b64\u5c5e\u6027\u5bf9\u4e8e\u6570\u5b57\u7b7e\u540d\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u5e38\u4e0d\u76f4\u63a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u54c8\u5e0c\u7b7e\u540d\u3002*\u5982\u679c\u5bf9\u624b\u53ef\u4ee5\u627e\u5230\u4e24\u6761\u6563\u5217\u4e3a\u76f8\u540c\u503c\u7684\u6d88\u606f\uff0c\u90a3\u4e48\u4e00\u6761\u6d88\u606f\u4e0a\u7684\u7b7e\u540d(\u6563\u5217)\u4e5f\u662f\u53e6\u4e00\u6761\u6d88\u606f\u4e0a\u7684\u7b7e\u540d\u3002\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u7cdf\u7cd5\u7684\u793e\u4f1a\u540e\u679c\u3002\n\u6709\u65f6\uff0c\u6211\u4eec\u5bf9\u6563\u5217\u51fd\u6570\u7684\u8981\u6c42\u751a\u81f3\u66f4\u9ad8\u3002\u4f46\u68d8\u624b\u7684\u90e8\u5206\u662f\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u518d\u8981\u6c42\u591a\u5c11\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u60a8\u751f\u6d3b\u5728Delphia\uff0c\u4e00\u4e2a\u7981\u6b62\u6240\u6709\u52a0\u5bc6\u7b97\u6cd5\u7684\u56fd\u5bb6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4f60\u8fd8\u662f\u6709\u79d8\u5bc6\u8981\u4fdd\u5b88\u3002\u5982\u679c\u60a8\u6ce8\u610f\u5230\u60a8\u7684\u653f\u5e9c\u5e76\u6ca1\u6709\u7981\u6b62\u54c8\u5e0c\u51fd\u6570\u3002\u8fd9\u7ed9\u4e86\u4f60\u4e00\u4e2a\u60f3\u6cd5\uff1a\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u4ece\u6563\u5217\u51fd\u6570\u4e2d\u2018\u7834\u89e3\u2019\u51fa\u4e00\u4e2a\u52a0\u5bc6\u65b9\u6848\u3002\n\u8fd9\u4e0d\u662f\u75af\u4e86\u3002\u8bb8\u591a\u6563\u5217\u7b97\u6cd5\u7684\u8f93\u51fa\u770b\u8d77\u6765\u76f8\u5f53\u968f\u673a\u3002\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u4f7f\u7528\u6563\u5217\u51fd\u6570\u6765\u6784\u5efa\u6d41\u5bc6\u7801\u3002\u57fa\u672c\u4e0a\uff0c\u4f60\u53ea\u9700\u8981\u4f7f\u7528\u6563\u5217\u51fd\u6570\u6765\u6563\u5217\u4e00\u4e2a\u5bc6\u94a5(\u4ee5\u53ca\u67d0\u79cd\u8ba1\u6570\u5668\u503c)\uff1b\u8fd9\u5c06\u4ea7\u751f\u4e00\u4e32\u201c\u968f\u673a\u5bfb\u627e\u201d\u7684\u6bd4\u7279\u6d41\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u7528\u4f60\u7684\u660e\u6587\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002\n\u95ee\u9898\u662f\uff1a\u4e00\u4e2a\u201c\u5355\u5411\u201d\u548c\u201c\u9632\u78b0\u649e\u201d\u7684\u6563\u5217\u51fd\u6570\u662f\u5426\u8db3\u4ee5\u786e\u4fdd\u8fd9\u4e2a\u65b9\u6848\u7684\u5b89\u5168\uff1f\u6211\u7ed9\u4f60\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u63d0\u793a\uff1a\u4e0d\u662f\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u4e24\u4e2a\u5c5e\u6027\u90fd\u4e0d\u610f\u5473\u7740\u6563\u5217\u51fd\u6570\u7684\u8f93\u51fa\u662f\u201c\u968f\u673a\u770b\u201d\u7684\u3002\u60a8\u53ef\u4ee5\u8bbe\u60f3\u6ee1\u8db3\u8fd9\u4e9b\u4fdd\u8bc1\u7684\u6563\u5217\u51fd\u6570\uff0c\u4f46\u4ea7\u751f\u7684\u8f93\u51fa\u5bf9\u4e8e\u6784\u5efa\u6d41\u5bc6\u7801\u662f\u65e0\u7528\u7684(\u6bd4\u5982\u8bf4\uff0c\u5b83\u4eec\u53ef\u80fd\u5305\u542b\u53ef\u9884\u6d4b\u503c\u7684\u957f\u5b57\u7b26\u4e32)\u3002\u201c\u5982\u679c\u4f60\u7528\u8fd9\u4e9b\u6765\u6784\u5efa\u4f60\u7684\u5bc6\u7801\uff0c\u4f60\u4f1a\u975e\u5e38\u5931\u671b\u7684\u3002\n\u5f53\u5bc6\u7801\u5b66\u5bb6\u7b2c\u4e00\u6b21\u5f00\u59cb\u601d\u8003\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0\u95ee\u9898\u65f6\uff0c\u4ed6\u4eec\u7684\u95ee\u9898\u662f\uff0c\u4ed6\u4eec\u60f3\u4ece\u4e00\u4e2a\u201c\u7406\u60f3\u201d\u7684\u6563\u5217\u51fd\u6570\u4e2d\u5f97\u5230\u4ec0\u4e48\u3002\u5bf9\u4e8e\u4e00\u4f4d\u6570\u5b66\u5bb6\u6765\u8bf4\uff0c\u7b54\u6848\u88ab\u8bc1\u660e\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u4ed6\u4eec\u5e0c\u671b\u5b83\u7684\u884c\u4e3a\u50cf\u4e00\u4e2a\u968f\u673a\u51fd\u6570\u3002\u8fd9\u4e2a\u672f\u8bed\u6709\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u6570\u5b66\u5b9a\u4e49\uff1b\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u8ba8\u8bba\u7684\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7b49\u6548\u7684\u66f4\u5bb9\u6613\u8c08\u8bba\u7684\u5b9a\u4e49\u3002\n\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u4e00\u4e2a\u7406\u60f3\u7684\u6563\u5217\u51fd\u6570\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5927\u7684\u786c\u7f16\u7801\u8868\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u4e00\u4e2a\u4f7f\u7528\u6df7\u6dc6\u548c\u6269\u6563\u7684\u5c0f\u7b97\u6cd5(\u5c31\u50cf\u6211\u4eec\u5bf9\u5927\u591a\u6570\u771f\u6b63\u7684\u6563\u5217\u51fd\u6570\u6240\u505a\u7684\u90a3\u6837)\u3002\u8be5\u8868\u5c06\u8f93\u5165\u6d88\u606f\u653e\u5728\u4e00\u680f\u4e2d\uff0c\u76f8\u5e94\u7684\u8f93\u51fa\u653e\u5728\u53e6\u4e00\u680f\u4e2d\u3002\n\u8fd9\u4e2a\u8868\u7684\u91cd\u8981\u4e4b\u5904\u5728\u4e8e\uff0c\u6bcf\u4e2a\u5355\u4e2a\u8f93\u51fa\u503c\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u968f\u673a\u5b57\u7b26\u4e32\u3002\n\u8f93\u5165(\u4e8c\u8fdb\u5236)\u4f4d\u4e32\uff1a\u8f93\u5165(\u4e8c\u8fdb\u5236)\u4f4d\u4e32\uff1b\u8f93\u51fa\u4f4d\u4e32\uff1b\u8f93\u51fa\u4f4d\u4e32\uff1b\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b0\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b1\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b2\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b00\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b3\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b01\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b4\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b10\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b5\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b11\u4f4d\u5b8c\u5168\u968f\u673a\u4f4d\u4e32\uff1b6\u4f4d\u968f\u673a\u4f4d\u4e32\uff1b\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\u3002\n\u663e\u7136\uff0c\u4e00\u4e2a\u6709\u7528\u7684\u6563\u5217\u51fd\u6570\u7684\u6574\u4e2a\u8868\u4f1a\u76f8\u5f53\u5927\u3002\u591a\u5927?\u3002\u55ef\uff0cSHA1\u53ef\u4ee5\u63a5\u53d7\u6700\u5927\u957f\u5ea6\u4e3a2^64\u5b57\u8282\u7684\u6d88\u606f\u3002\u6240\u4ee5\u7b54\u6848\u662f\uff1a\u592a\u5927\u4e86\uff0c\u653e\u4e0d\u8fdb\u8fd9\u4e2a\u535a\u5ba2\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6574\u4e2a\u8868\u683c\u4e2d\u7684\u6761\u76ee\u4f1a\u6bd4\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u8fd8\u591a\u3002\n\u5373\u4f7f\u6211\u4eec\u6709\u7a7a\u95f4\u5b58\u50a8\u8fd9\u6837\u7684\u8868\uff0c\u6563\u5217\u8fc7\u7a0b-\u67e5\u627e\u8f93\u5165\u5e76\u627e\u5230\u8f93\u51fa-\u4e5f\u4f1a\u975e\u5e38\u8017\u65f6\u3002*\u5982\u679c\u6211\u4eec\u5c06\u54c8\u5e0c\u8868\u5b58\u50a8\u5728\u56fe\u7075\u673a(\u4e94\u5206\u8ba1\u7b97\u673a)\u7684\u78c1\u5e26\u4e0a\uff0c\u4ec5\u5c06\u78c1\u5934\u79fb\u52a8\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u5c31\u4f1a(\u5e73\u5747)\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u6b65\u957f\uff0c\u8fd9\u662f\u8f93\u5165\u5927\u5c0f\u7684\u6307\u6570\u500d\u3002\n\u65f6\u4e0d\u65f6\u5730\uff0c\u5f53\u6211\u5728\u5165\u95e8\u8bfe\u7a0b\u4e2d\u63d0\u5230\u6240\u6709\u8fd9\u4e9b\u65f6\uff0c\u4e00\u4e9b\u96c4\u5fc3\u52c3\u52c3\u7684\u5b66\u751f\u8bd5\u56fe\u60f3\u51fa\u4e00\u4e2a\u806a\u660e\u7684\u65b9\u6cd5\uff0c\u628a\u684c\u5b50\u7f29\u5c0f\u5230\u6211\u4eec\u53ef\u4ee5\u968f\u8eab\u643a\u5e26\u7684\u4e1c\u897f\u3002\u4f46\u95ee\u9898\u662f\uff1a\u8fd9\u7ec4\u8f93\u51fa\u5b57\u7b26\u4e32\u5e76\u4e0d\u662f\u5b8c\u5168\u968f\u673a\u7684\u3002\u627e\u5230\u4e00\u79cd\u7528\u7d27\u51d1\u6563\u5217\u8868\u793a\u5b83\u4eec\u7684\u65b9\u6cd5\u7b49\u540c\u4e8e\u538b\u7f29\u968f\u673a\u6570\u636e\u3002\u201c\u4e0d\u5e78\u7684\u662f\uff0c\u4fe1\u606f\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u7981\u5fcc\u3002\n\u8ba9\u6211\u4eec\u76d8\u70b9\u4e00\u4e0b\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5e0c\u671b\u6211\u81f3\u5c11\u8bf4\u670d\u4e86\u4f60\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u5bc6\u7801\u5b66\u5bb6\u786e\u5b9e\u5e0c\u671b\u4ed6\u4eec\u7684\u6563\u5217\u51fd\u6570\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u968f\u673a\u51fd\u6570\u3002\n\u5176\u6b21\uff0c\u201c\u771f\u6b63\u7684\u201d\u6563\u5217\u51fd\u6570\u4e0d\u80fd\u662f\u968f\u673a\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u662f\u5b8c\u5168\u4e0d\u53ef\u884c\u548c\u4e0d\u5207\u5b9e\u9645\u7684\u3002*\u5982\u679c\u4f60\u770b\u770b\u50cfSHA1\u3001SHA512\u548cRIPEMD160\u8fd9\u6837\u7684\u5b9e\u7528\u6563\u5217\u51fd\u6570-\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u6709\u5f88\u597d\u7684\u3001\u7531\u51e0KB\u4ee3\u7801\u7ec4\u6210\u7684\u7b80\u77ed\u5b9e\u73b0-\u5e94\u8be5\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u662f\u968f\u673a\u51fd\u6570\uff0c\u65e0\u8bba\u8f93\u51fa\u770b\u8d77\u6765\u6709\u591a\u201c\u968f\u673a\u201d\u3002\n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b9e\u8df5\u4e2d\u4e0d\u80fd\u4f7f\u7528\u968f\u673a\u51fd\u6570\uff0c\u90a3\u4e48\u53e6\u4e00\u79cd\u65b9\u6cd5\u5462\uff1f\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u5c06\u6211\u4eec\u7684\u6563\u5217\u51fd\u6570\u5efa\u6a21\u4e3a\u968f\u673a\u51fd\u6570\uff0c\u53ea\u662f\u4e3a\u4e86\u5b89\u5168\u8bc1\u660e\u7684\u76ee\u7684\u3002\u7136\u540e\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u4f1a\u7528SHA\u6216RIPEMD\u6216\u4e00\u4e9b\u5b9e\u7528\u7684\u6563\u5217\u51fd\u6570\u4ee3\u66ff\u3002*\u76ee\u524d\u8fd8\u4e0d\u5b8c\u5168\u6e05\u695a\u5b89\u5168\u8bc1\u660e\u662f\u5426\u4ecd\u7136\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4f46\u81f3\u5c11\u6211\u4eec\u4f1a\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\n\u6211\u5c06\u63cf\u8ff0\u4e00\u4e2a\u597d\u83b1\u575e\u5c06\u5448\u73b0\u7684\u573a\u666f\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u4e00\u95f4\u5149\u7ebf\u660e\u4eae\u7684\u4e0d\u5207\u5b9e\u9645\u7684\u529e\u516c\u5ba4\u3002\u53f2\u8482\u592b\u00b7\u5e03\u585e\u7c73(Steve Buscemi)\u626e\u6f14\u7684\u4e00\u4f4d\u8457\u540d\u5bc6\u7801\u5b66\u5bb6\u521a\u521a\u63d0\u51fa\u5c06\u54c8\u5e0c\u51fd\u6570\u5efa\u6a21\u4e3a\u968f\u673a\u51fd\u6570\u3002\u4ed6\u7684\u540c\u4e8b\uff0c\u7531\u51ef\u7279\u00b7\u6e29\u65af\u83b1\u7279\u626e\u6f14\uff0c\u7ea0\u6b63\u4e86\u4ed6\u7684\u9519\u8bef\u3002\n\u201c\u6211\u505a\u4e0d\u5230\uff0c\u201d\u5979\u4f24\u5fc3\u5730\u6447\u6447\u5934\u89e3\u91ca\u9053\uff0c\u201c\u8ba1\u7b97\u4e00\u4e2a\u968f\u673a\u51fd\u6570\u9700\u8981\u6307\u6570\u7ea7\u7684\u65f6\u95f4\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e0d\u65b9\u4fbf\u3002\u201c\u5982\u679c\u6211\u4eec\u5728\u5b89\u5168\u8bc1\u660e\u4e2d\u5141\u8bb8\u8fd9\u79cd\u6563\u5217\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u8ba9\u5404\u65b9-\u5305\u62ec\u5bf9\u624b-\u8fd0\u884c\u6307\u6570\u7ea7\u7684\u65f6\u95f4\u6b65\u957f\u3002\u4f46\u6211\u4eec\u4e0d\u80fd\u53ea\u8fd9\u6837\u505a\u3002\u6211\u4eec\u7684\u6574\u4e2a\u5b89\u5168\u8bc1\u660e\u90fd\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff0c\u5373\u5f53\u4e8b\u4eba\u53ea\u80fd\u8fdb\u884c\u6709\u9650\u7684\u8ba1\u7b97\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fdb\u884c\u7684\u8ba1\u7b97\u3002\u201c\u5982\u679c\u8ba9\u53cc\u65b9\u8fdb\u884c\u4efb\u610f\u7684\u6307\u6570\u65f6\u95f4\u8ba1\u7b97\uff0c\u90a3\u4e48\u5bf9\u624b\u53ef\u4ee5\u505a\u4efb\u4f55\u4e8b\u60c5\uff1a\u4ed6\u751a\u81f3\u53ef\u4ee5\u66b4\u529b\u7834\u89e3\u5bc6\u94a5\u3002\u201d\n\u7a81\u7834\u6765\u81ea\u4e00\u4f4d\u8def\u8fc7\u7684\u770b\u95e8\u4eba(\u9a6c\u7279\u00b7\u8fbe\u8499\uff0c\u91cd\u65b0\u626e\u6f14\u4ed6\u5728\u201c\u5584\u610f\u730e\u6740\u201d\u4e2d\u7684\u89d2\u8272)\uff1a\u201c\u5982\u679c\u4f60\u53ea\u662f\u521b\u9020\u4e00\u4e2a\u865a\u6784\u7684\u4e16\u754c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u88ab\u9650\u5236\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u8ba1\u7b97\uff0c\u4f46\u54c8\u5e0c\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u4f8b\u5916\u3002\u6563\u5217\uff0c\u5355\u72ec\u6563\u5217\uff0c\u6839\u672c\u4e0d\u9700\u8981\u4efb\u4f55\u65f6\u95f4\u3002\u201c\u5f53\u4f60\u8bd5\u56fe\u6563\u5217\u4e00\u4e9b\u4e1c\u897f\u65f6\uff0c\u65f6\u949f\u5c31\u4f1a\u505c\u6b62\u3002\u201d\n\u8fd9\u5c31\u662f\u6211\u4eec\u73b0\u5728\u7684\u5904\u5883\u3002\u90a3\u4e48\u5b8c\u7f8e\u7684\u6563\u5217\u51fd\u6570\u5e94\u8be5\u662f\u968f\u673a\u51fd\u6570\u3002\u4f46\u662f\u968f\u673a\u51fd\u6570\u662f\u4e0d\u5207\u5b9e\u9645\u7684-\u6211\u4eec\u4e0d\u80fd\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u751a\u81f3\u5728\u6211\u4eec\u7684\u5b89\u5168\u8bc1\u660e\u4e2d\u90fd\u4e0d\u80fd\u4e0d\u6253\u7834\u5b83\u4eec\u3002\n\u5bc6\u7801\u5b66\u5bb6\u662f\u56fa\u6267\u7684\u4eba\uff0c\u6211\u4eec\u6709\u5f88\u597d\u7684\u60f3\u8c61\u529b\u3002\u6240\u4ee5\u6211\u4eec\u60f3\u51fa\u4e86\u4e00\u4e2a\u767d\u65e5\u68a6\uff0c\u4e00\u79cd\u5047\u88c5\u968f\u673a\u51fd\u6570\u662f\u5b9e\u7528\u7684\u65b9\u6cd5-\u53ea\u662f\u4e3a\u4e86\u6211\u4eec\u7684\u5b89\u5168\u8bc1\u660e\u3002\n\u8fd9\u4e2a\u767d\u65e5\u68a6\u7684\u5f71\u54cd\u7ed3\u679c\u662f\u65e2\u7f8e\u597d\u53c8\u53ef\u6015\u3002\u4e00\u65b9\u9762\uff0c\u5b83\u8ba9\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u90a3\u4e9b\u65e0\u6cd5\u7528\u5176\u4ed6\u65b9\u5f0f\u8bc1\u660e\u7684\u8ba1\u5212\u7684\u5b89\u5168\u6027\u3002\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6709\u6548\u5730\u505a\u8fd9\u4ef6\u4e8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u5bfc\u81f4\u7684\u5b89\u5168\u8bc1\u636e\u5728\u6280\u672f\u610f\u4e49\u4e0a\u662f\u5b8c\u5168\u6ca1\u6709\u610f\u4e49\u7684\u3002\n\u6bd5\u7adf\uff0c\u6211\u4eec\u6700\u7ec8\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u50cfSHA\u8fd9\u6837\u7684\u771f\u6b63\u7684\u6563\u5217\u51fd\u6570\u6765\u5b9e\u65bd\u8be5\u65b9\u6848\uff0c\u8fd9\u80af\u5b9a\u4e0d\u662f\u968f\u673a\u7684\u3002\u90a3\u4e48\u968f\u673a\u7684\u7532\u9aa8\u6587\u5b89\u5168\u8bc1\u660e\u80fd\u7ed9\u6211\u4eec\u5e26\u6765\u4ec0\u4e48\u5462\uff1f\u8fd9\u662f\u81ea\u8fd9\u4e2a\u60f3\u6cd5\u4ea7\u751f\u4ee5\u6765\u4e00\u76f4\u56f0\u6270\u7740\u5bc6\u7801\u5b66\u5bb6\u7684\u5927\u95ee\u9898\u4e4b\u4e00\u3002\n\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd9\u4e00\u5207\u90fd\u662f\u5b66\u672f\u6027\u7684\uff0c\u90a3\u4f60\u5c31\u5927\u9519\u7279\u9519\u4e86\u3002*\u4e00\u4e9b\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5bc6\u7801\u539f\u8bed\u7684\u5b89\u5168\u8bc1\u660e\u8bbe\u7f6e\u5728\u6b64\u6a21\u578b\u4e2d\uff1a\u8fd9\u5305\u62ec\u5927\u591a\u6570RSA\u7b7e\u540d\u548c\u52a0\u5bc6\uff0c\u4ee5\u53caDSA\u6240\u57fa\u4e8e\u7684ElGamal\u7b7e\u540d\u65b9\u6848\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u62ff\u8d70\u5176\u4ed6\u4e1c\u897f\uff0c\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u4e0a\u9762\u5217\u51fa\u7684\u8ba1\u5212\u5f88\u91cd\u8981\u3002\u5982\u679c\u6211\u4eec\u5728\u5b89\u5168\u8bc1\u660e\u4e2d\u505a\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u4eba\u4eec\u5e94\u8be5\u7406\u89e3\u8fd9\u662f\u4ec0\u4e48\u3002\n\u5728\u6211\u7684\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5b9e\u9645\u89e3\u91ca\u4ec0\u4e48\u662f\u201c\u968f\u673a\u9884\u8a00\u201d\uff0c\u4ee5\u53ca\u5b83\u4e0e\u6211\u4eec\u4e0a\u9762\u6240\u505a\u7684\u75af\u72c2\u5047\u8bbe\u6709\u4f55\u5173\u7cfb\u3002\u6211\u8fd8\u5c06\u89e3\u91ca\u6211\u4eec\u5982\u4f55\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\u8bc1\u660e\u4e8b\u60c5\uff0c\u5e76\u8c08\u8bba\u4e3a\u4ec0\u4e48\u5bc6\u7801\u5b66\u5bb6\u5982\u6b64\u8ba8\u538c\u5b83\u3002", "note_en": "This is the first in a  series of posts on the Random Oracle Model. \u00a0This might get a little wonky for some people\u2019s tastes, so if \u00a0you\u2019re not interested in provable security, no problem. \u00a0I\u2019ll be back with more on software and physical security once I get this out of my system.\n It happens that I\u2019m scheduled to teach a class today on provable security, and something called the \u201cRandom Oracle Model\u201d. \u00a0While getting my thoughts together, it occurred to me that a) this subject might be of interest to people who aren\u2019t my grad students, and b) there doesn\u2019t seem to be a good \u201clayperson\u2019s\u201d introduction to it.For the most part I like to talk about how cryptography gets  implemented. \u00a0But implementation doesn\u2019t matter a lick if you\u2019re starting with insecure primitives.\n So at the risk of alienating my tiny readership, I\u2019m going\u00a0to take a break from our regularly scheduled \u201chow cryptographic systems go bad\u201d programming to talk about this wonkish subject \u2014 which, as we\u2019ll see in a bit, is itself just another flavor of how crypto goes wrong.\n  Before we talk about Random Oracles, we first need to discuss  hash functions. \u00a0These are functions that take a (potentially) long input, and \u2018hash\u2019 it down into a fixed-size value that we refer to as a  Message Digest.\n We use hash functions a lot in  cryptography. \u00a0They get the most press for turning up in\u00a0 digital signature schemes, but they also make an appearance in many encryption schemes. \u00a0In fact, throughout the field, it\u2019s pretty hard to throw a stone without hitting one.\n For the most part, a  cryptographic\u00a0hash function has to satisfy at least some of the following properties. \u00a0First of all, we expect it to be \u201cone way\u201d, meaning that it\u2019s hard to \u2018invert\u2019 the function,  i.e., to\u00a0find the original message given only a Message Digest.\n Secondly, a hash function should be \u201ccollision resistant\u201d. \u00a0In other words, it should be hard to find two different messages (M, M\u2019) such that Hash(M) == Hash(M\u2019). \u00a0This property is  very important for digital signatures, since we typically don\u2019t sign the message directly, we sign a  hash\u00a0of the message. \u00a0If an adversary can find two messages that hash to the same value, then a signature on (the hash of) one message is also a signature on the other. \u00a0In practice this can lead to\u00a0 bad\u00a0consequences.\n Sometimes we demand even more from our hash functions. \u00a0The tricky part is knowing  how much\u00a0more we can ask. \u00a0To illustrate, let me give an example.\n  Imagine that you live in Delphia, a nation that bans all encryption algorithms. \u00a0Despite this, you have secrets to keep. \u00a0You notice that your government has  not banned hash functions. \u00a0This gives you an idea: perhaps you can \u2018hack\u2019 an encryption scheme out of a hash function.\n This isn\u2019t crazy. \u00a0The outputs of many\u00a0 hash algorithms  look pretty random. \u00a0Maybe you could use a hash function to build a  stream cipher. \u00a0Basically, you\u2019ll \u00a0use a hash function to hash a secret key (along with some kind of counter value); this will result in a stream\u00a0of \u2018random looking\u2019 bits which you can then  XOR with your plaintext.\n The question is: would a \u201cone-way\u201d and \u201ccollision-resistant\u201d hash function be sufficient to ensure that this scheme is secure? \u00a0I\u2019ll give you a blunt hint:  no. \u00a0Technically neither of these properties implies that the output of a hash function be \u2018random looking\u2019. \u00a0You can conceive of hash functions that meet those guarantees, and yet produce outputs that would be useless for building a stream cipher (they might, say, contain long strings of predictable values). \u00a0If you use these to build your cipher, you\u2019ll be terribly disappointed.\n  When cryptographers first started  pondering\u00a0problems like the above, their question was what they wanted from an \u201cideal\u201d hash function. \u00a0To a mathematician, the answer turned out to be obvious. \u00a0They wanted it to behave like a  random function. \u00a0That term has a very specific mathematical\u00a0 definition; for\u00a0the purposes of this discussion we\u2019ll use an equivalent one that\u2019s easier to talk about.\n Imagine that we wanted to implement an ideal hash function. \u00a0Instead of designing a small algorithm that uses  confusion and diffusion (as we do with most real hash functions), we might instead create a big hard-coded table. \u00a0The table would have the input messages in one column, and the corresponding outputs on the other.\n The important thing about this table is that  every single output value\u00a0is an independent, random string.\n Input (binary) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Output \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0 \u00a00  Totally random bitstring 1\u00a0 \u00a0 \u00a0 \u00a01  Totally random bitstring 2\u00a0 \u00a0 \u00a0 \u00a000 \u00a0  Totally random bitstring 3\u00a0 \u00a0 \u00a0 \u00a001  Totally random bitstring 4\u00a0 \u00a0 \u00a0 \u00a010  Totally random bitstring 5\u00a0 \u00a0 \u00a0 \u00a011  Totally random bitstring 6 \u00a0 \u00a0 \u00a0 \u00a0and so on...\n Obviously the full table for a useful hash function would be pretty big. \u00a0How big? Well,\u00a0 SHA1\u00a0accepts messages up to 2^64  bytes in length. \u00a0So the answer is: too big to fit in this blog. \u00a0In fact, there would be more entries in the full table than there are  atoms in the universe.\n Even if we had room to store such a table, the process of hashing \u2014 looking up an input and finding the output \u2014 would be awfully time consuming. \u00a0If we stored our hash table on the tape of a Turing machine (the quintissential computer), just moving the tape head to the right place would take (on average) a\u00a0number of time steps that\u2019s  exponential\u00a0in the size of the input.\n From time to time when I mention all of this in my  intro course, some ambitious student tries to come up with a clever way to shrink the table down into something that we can carry around. \u00a0But here\u2019s the problem: the set of output strings are\u00a0 perfectly random. Finding a way to represent them in a compact hash would be equivalent to compressing random data. \u00a0Unfortunately, information theory tells us that this is a big\u00a0 no-no.\n  Let\u2019s take stock for a moment. \u00a0So far I hope that I\u2019ve convinced you of at least two things. First, cryptographers would really like their hash functions to  behave\u00a0like random functions.\n Second, \u201creal\u201d hash functions  can\u2019t\u00a0be random functions, because that would be totally unworkable and impractical. \u00a0If you look at practical hash functions like\u00a0SHA1, SHA512 and RIPEMD160 \u2014 all of which have nice, short implementations consisting of a few KB of code \u2014 it should be obvious that these are not random functions, no matter how \u2018random\u2019 the outputs look.\n  So if we can\u2019t use random functions in practice, what about an alternative approach? Perhaps we could  model\u00a0our hash functions as random functions, just for the purposes of the security proof. \u00a0Then in real life we\u2019d substitute in SHA or RIPEMD or some practical hash function. \u00a0It\u2019s not totally clear that the security proof would still mean anything, but at least we\u2019d be doing  something.\n I\u2019ll describe a scene as Hollywood would present it: an unrealistically well-lit office at MIT. A noted cryptographer, played by Steve Buscemi, has just proposed to model hash functions as random functions. \u00a0His colleague, played by Kate Winslet, sets him straight.\n \u201cCan\u2019t do it,\u201d she explains, shaking her head sadly, \u201cit\u2019s not just\u00a0 inconvenient that it takes exponential time to evaluate a random function. \u00a0If we allowed this sort of hashing in our security proof, we would have to let the parties \u2014 including the Adversary \u2014 run for an exponential number of time steps. \u00a0But we  can\u2019t\u00a0do that. \u00a0Our entire security proof is based on the idea that the parties can only perform  limited\u00a0computations, specifically\u00a0those that can be conducted in polynomial-time. \u00a0If let the parties peform arbitrary exponential-time computations, then adversary could do anything: he could even\u00a0 brute-force the key.\u201d\n  The breakthrough comes from a passing janitor (Matt Damon, reprising his role from Good Will Hunting): \u201cWhat if you just create an imaginary world where everyone is limited to polynomial time computations, but there\u2019s a special exception for hashing. \u00a0Hashing, and hashing alone, doesn\u2019t take any time at all. \u00a0When you try to hash something, the clock stops.\u201d\n  And so this is where we are. \u00a0The perfect hash function would be a  random function. \u00a0But random functions are impractical \u2014 we can\u2019t use them in real life, or even in our security proofs without breaking them.\n Cryptographers are stubborn people, and we have good imaginations. \u00a0So we\u2019ve come up with a daydream, a way to  pretend\u00a0that random functions are practical \u2014 just for the purposes of our security proof.\n The implications of this daydream turn out to be both wonderful and terrible. \u00a0On the one hand, it allows us to prove the security of schemes that  can\u2019t\u00a0be proven in other ways. Furthermore, we can do it very efficiently. \u00a0On the other hand, it leads to security proofs that are, in a technical sense,  totally meaningless.\n After all, we will ultimately have to implement the scheme with a real\u00a0hash function like SHA, which is decidedly not random. \u00a0What does a random oracle security proof buy us then?\u00a0 This is one of the big questions that has plagued cryptographers since this idea came about.\n And if you think that this is all academic, you\u2019d be wrong. \u00a0The security proofs for some of the most widely-used cryptographic primitives are set in this model: this includes most\u00a0 RSA signing and encryption, as well as the Elgamal signature scheme upon which\u00a0 DSA is based.\n If you take nothing else away from this post, you should notice that the schemes listed above are  important. \u00a0If we\u2019re doing something funny in the security proofs, people should understand what it is.\n In my  next post I\u2019ll actually explain what a \u201crandom oracle\u201d is, and how it relates to the crazy assumptions we made above. \u00a0I\u2019ll also explain how we can prove things in this model, and talk about why cryptographers love to hate it so much.", "posttime": "2020-05-17 08:17:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "oracle,\u6a21\u578b,\u51fd\u6570", "title": "\u4ec0\u4e48\u662f\u968f\u673aOracle\u6a21\u578b\uff0c\u60a8\u4e3a\u4ec0\u4e48\u8981\u5173\u5fc3\u5b83\uff1f", "title_en": "What is the Random Oracle Model and why should you care?", "transed": 1, "url": "https://blog.cryptographyengineering.com/2011/09/29/what-is-random-oracle-model-and-why-3/", "via": "", "real_tags": ["oracle", "\u6a21\u578b", "\u51fd\u6570"]}]