[{"category": "", "categoryclass": "", "imagename": "77e8317116fe72a1ef85fac4bf53d9cf.jpg", "infoid": 1004212, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5546\u4e1a\u5185\u5e55\u201d(Business Insider)\u6700\u5148\u83b7\u5f97\u7684\u4e00\u4efd\u53d1\u7ed9\u5458\u5de5\u7684\u5907\u5fd8\u5f55\u663e\u793a\uff0c\u963f\u535a\u7ef4\u8328\u5c06\u5728\u8fc7\u6e21\u671f\u5185\u7ee7\u7eed\u7559\u5728\u516c\u53f8\uff0c\u4f46\u516c\u53f8\u4e00\u76f4\u5728\u201c\u79ef\u6781\u62db\u8058\u5019\u9009\u4eba\u201d\u63a5\u66ff\u4ed6\u3002\n\u5458\u5de5\u5907\u5fd8\u5f55\u5199\u9053\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u91cd\u5927\u7684\u65b0\u878d\u8d44\uff0c\u5728\u7ed3\u675f\u5173\u952e\u7684\u6218\u7565\u4f01\u4e1a\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u65b9\u9762\u6709\u975e\u5e38\u79ef\u6781\u7684\u52bf\u5934\u3002\u201d\u5f53\u8463\u4e8b\u4f1a\u548c\u6211\u8ba1\u5212\u6211\u4eec\u6240\u505a\u7684\u6539\u53d8\u4ee5\u53caMagic Leap\u5728\u4e0b\u4e00\u4e2a\u91cd\u70b9\u9636\u6bb5\u9700\u8981\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u53d8\u5f97\u5f88\u6e05\u695a\uff0c\u6211\u89d2\u8272\u7684\u6539\u53d8\u662f\u5f88\u81ea\u7136\u7684\u4e0b\u4e00\u6b65\u3002\u6211\u4e0e\u8463\u4e8b\u4f1a\u8ba8\u8bba\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u73b0\u5728\u662f\u5f15\u8fdb\u4e00\u4f4d\u65b0\u7684\u9996\u5e2d\u6267\u884c\u5b98\u7684\u65f6\u5019\u4e86\uff0c\u4ed6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6211\u4eec\u4e13\u6ce8\u4e8e\u4f01\u4e1a\u7a7a\u95f4\u8ba1\u7b97\u7684\u8ba1\u5212\u5546\u4e1a\u5316\u3002\u201c\u3002\n\u5728\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\u4e4b\u524d\uff0c\u8fd9\u5bb6\u589e\u5f3a\u73b0\u5b9e\u521d\u521b\u516c\u53f8\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\u5927\u5e45\u88c1\u5458\uff0c\u5e76\u5ba3\u5e03\u5c06\u4ece\u5f00\u53d1\u6d88\u8d39\u4ea7\u54c1\u8f6c\u5411\u5b8c\u5168\u4e13\u6ce8\u4e8e\u4f01\u4e1a\u4e1a\u52a1\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u6709\u62a5\u9053\u79f0\uff0cMagic Leap\u5df2\u7ecf\u9501\u5b9a\u4e86\u53e6\u59163.5\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u907f\u514d\u8fdb\u4e00\u6b65\u88c1\u5458\u3002\n\u5728Abovitz\u7684\u4efb\u671f\u5185\uff0c\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u5df2\u7ecf\u7b79\u96c6\u4e86\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u98ce\u9669\u6295\u8d44\uff0c\u4f46\u5728\u521b\u9020\u4e3b\u6d41AR\u8bbe\u5907\u7684\u7ade\u8d5b\u4e2d\uff0c\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u4e5f\u7ecf\u5386\u4e86\u5f88\u591a\u969c\u788d\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8bd5\u56fe\u8d85\u8fc7\u82f9\u679c\u3001\u5fae\u8f6f\u548cFacebook\u3002Abovitz\u4f3c\u4e4e\u603b\u662f\u628a\u516c\u53f8\u7684\u91cd\u70b9\u653e\u5728\u6d88\u8d39\u8005\u8eab\u4e0a\uff0c\u6240\u4ee5\u5f53\u516c\u53f8\u5c06\u91cd\u70b9\u8f6c\u5411\u4f01\u4e1a\u65f6\uff0c\u516c\u53f8\u8463\u4e8b\u4f1a\u5c06\u76ee\u5149\u6295\u5411\u5176\u4ed6\u5730\u65b9\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002", "note_en": "According to a memo sent to staff, first obtained by  Business Insider, Abovitz will continue on with the company through a transition period but that the company has been \u201cactively recruiting candidates\u201d to replace him.\n \u201cWe have closed significant new funding and have very positive momentum towards closing key strategic enterprise partnerships,\u201d the staff memo reads. \u201cAs the Board and I planned the changes we made and what Magic Leap needs for this next focused phase, it became clear to us that a change in my role was a natural next step. I discussed this with the Board and we have agreed that now is the time to bring in a new CEO who can help us to commercialize our focused plan for spatial computing in enterprise.\u201d\n  The announcement comes after the augmented reality startup announced substantial layoffs earlier this month and announced that it would be pivoting from developing consumer products to fully focusing on its enterprise business. It was reported earlier this month that Magic Leap had locked down an additional $350 million in funding which would help the startup avoid further layoffs.\n The startup has raised billions of venture capital funding under Abovitz\u2019s tenure, but the startup has also undergone plenty of hurdles as they attempted to outdo Apple, Microsoft and Facebook in the race to create a mainstream AR device. Abovitz always seemed to have a consumer focus for his company, so it\u2019s unsurprising that the company\u2019s board would look elsewhere as the company shifts focus to enterprise.", "posttime": "2020-05-29 16:26:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "abovitz,leap", "title": "Magic Leap\u9996\u5e2d\u6267\u884c\u5b98\u7f57\u5c3c\u00b7\u963f\u535a\u7ef4\u8328(Rony Abovitz)\u79bb\u804c", "title_en": "Magic Leap CEO Rony Abovitz Is Out", "transed": 1, "url": "https://techcrunch.com/2020/05/28/magic-leap-ceo-rony-abovitz-is-out/", "via": "", "real_tags": ["abovitz", "leap"]}, {"category": "", "categoryclass": "", "imagename": "e0663f9a568cb9c2d47dadd61d6cf53d.jpg", "infoid": 1004211, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "dLRN 2015\u5f00\u5e55\u5f0f\u4e3b\u65e8\u6f14\u8bb2\u3002\u4e8e10\u670816\u65e5\u5728\u65af\u5766\u798f\u5927\u5b66\u6295\u9012\u3002\u5b9e\u9645\u7684\u4e3b\u65e8\u53ef\u80fd\u5df2\u5728\u663e\u8457\u5207\u7ebf\u2026\u4e0a\u8fdb\u884c\u3002\n\u5927\u7ea6\u4e00\u5468\u524d\uff0c\u6211\u5728\u770b\u4fc4\u52d2\u5188\u5dde\u67aa\u51fb\u6848\u7684\u62a5\u9053\u3002\u6211\u662f\u4e00\u4e2a\u76f8\u5f53\u6807\u51c6\u7684\u81ea\u7531\u4e3b\u4e49\u8005\uff0c\u5f53\u6211\u770b\u5230\u652f\u6301\u6211\u81ea\u7531\u4e3b\u4e49\u89c2\u70b9\u7684\u4e1c\u897f\u65f6\uff0c\u6211\u5f80\u5f80\u4f1a\u6ce8\u610f\u5230\u5b83\u4eec\u3002\n\u56e0\u6b64\uff0c\u5f53\u6211\u5728\u4e00\u7bc7\u6587\u7ae0\u4e2d\u770b\u5230\u8fd9\u53e5\u8bdd\u65f6\uff0c\u6211\u4f1a\u975e\u5e38\u5174\u594b\u3002\u8fd9\u662f\u6765\u81eaCSJ\u7684\uff1a\n\u6839\u636e\u53bb\u5e747\u6708\u53d1\u8868\u7684\u4e00\u9879\u7814\u7a76\uff0c\u6839\u636e\u7f8e\u56fd2006\u5e74\u81f32013\u5e7412\u6708\u671f\u95f4\u5927\u89c4\u6a21\u6740\u622e\u7684\u6570\u636e\uff0c\u53bb\u5e747\u6708\u53d1\u8868\u7684\u4e00\u9879\u7814\u7a76\u663e\u793a\uff0c\u67d0\u4e2a\u5dde\u7684\u67aa\u652f\u62e5\u6709\u7387\u4e0e\u8be5\u5dde\u53d1\u751f\u7684\u6301\u67aa\u5927\u89c4\u6a21\u6740\u622e\u3001\u6821\u56ed\u67aa\u51fb\u548c\u5927\u89c4\u6a21\u67aa\u51fb\u4e8b\u4ef6\u5bc6\u5207\u76f8\u5173\u3002\n\u6240\u4ee5\u8840\u6db2\u5f00\u59cb\u8df3\u52a8\u3002\u8be5\u6b7b\u7684\uff0c\u6211\u662f\u5bf9\u7684\u3002\u4e16\u754c\u4f55\u65f6\u624d\u80fd\u770b\u5230\u5b83\uff1f\n\u56e0\u6b64\uff0c\u4e00\u5e74\u524d\uff0c\u6211\u4f1a\u628a\u8fd9\u4e2a\u94fe\u63a5\u6254\u5230Twitter\u4e0a\uff0c\u5e76\u9644\u4e0a\u4e00\u4efd\u8be5\u6b7b\u7684\u7814\u7a76\u603b\u7ed3\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u77e5\u9053\u6211\u662f\u4e00\u4e2a\u597d\u7684\u81ea\u7531\u4e3b\u4e49\u8005\uff0c\u5e76\u8f6c\u53d1\u5b83\uff0c\u4ee5\u8bc1\u660e\u4ed6\u4eec\u662f\u597d\u7684\u81ea\u7531\u4e3b\u4e49\u8005\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u542c\uff0c\u4f60\u53ef\u4ee5\u542c\u5230\u6211\u4eec\u96c6\u4f53\u7684\u795e\u7ecf\u5143\u786c\u5316\u7684\u58f0\u97f3\u3002\n\u4f46\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u8bd5\u9a8c\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u793e\u4ea4\u5a92\u4f53\uff0c\u79f0\u4e3a\u8054\u5408\u7ef4\u57fa\u3002\u5b83\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u6211\u5bf9\u5728\u7ebf\u4ea4\u6d41\u548c\u534f\u4f5c\u7684\u770b\u6cd5\u3002\n\u6211\u4e0d\u60f3\u8ba9\u4eba\u4eec\u5728\u6280\u672f\u89d2\u5ea6\u4e0a\u72b9\u8c6b\u4e0d\u51b3\u3002\u6211\u60f3\u6709\u65f6\u5019\u4eba\u4eec\u542c\u5230\u201c\u8054\u90a6\u7684\u4e1c\u897f\u201d\uff0c\u5c31\u4f1a\u60f3\u201c\u54e6\uff0c\u4ed6\u5728\u8bf4\u8054\u90a6\u7684\u4e1c\u897f\u201d\u3002\u4f46\u6211\u4e0d\u662f\u3002\u6211\u771f\u7684\u4e0d\u662f\u3002\u6211\u8bf4\u7684\u662f\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u601d\u8003\u4f60\u7684\u5728\u7ebf\u6d3b\u52a8\uff0c\u65e0\u8bba\u4f60\u4f7f\u7528\u4ec0\u4e48\u5de5\u5177\u3002\u4e0e\u8fd9\u6b21\u4f1a\u8bae\u76f8\u5173\u7684\u662f\uff0c\u6211\u4e5f\u5728\u8c08\u8bba\u4e00\u79cd\u4e0d\u540c\u7684\u5408\u4f5c\u65b9\u5f0f\u3002\n\u6211\u6ca1\u6709\u6df1\u5165\u4e86\u89e3\u6211\u7684\u8054\u5408\u7ef4\u57fa\u65e5\u5fd7\u662f\u4ec0\u4e48\uff0c\u53ea\u8981\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u4e0d\u662f\u5728\u535a\u5ba2\u548c\u63a8\u7279\u4e0a\u5199\u4f60\u7684\u7ecf\u5386\uff0c\u800c\u662f\u7ef4\u57fa\u4e86\u5b83\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7ef4\u57fa\u53d8\u6210\u4e86\u4f60\u77e5\u9053\u7684\u4e1c\u897f\u7684\u4ee3\u8868\uff0c\u8fde\u63a5\u5230\u522b\u4eba\u5173\u4e8e\u4ed6\u4eec\u77e5\u9053\u7684\u4e8b\u60c5\u7684\u7ef4\u57fa\u3002\n\u6240\u4ee5\uff0c\u5f53\u6211\u770b\u5230\u8fd9\u6837\u4e00\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u4f1a\u60f3--\u54c7\uff0c\u6211\u7684\u7ef4\u57fa\u91cc\u6ca1\u6709\u592a\u591a\u5173\u4e8e\u67aa\u652f\u7ba1\u5236\u7684\u5185\u5bb9\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u9875\u9762\u3002\n\u6211\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u201c\u53bb\u6d41\u201d\u8fd9\u7bc7\u6587\u7ae0\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u5173\u4e8e\u4fc4\u52d2\u5188\u5dde\u7684\uff0c\u4f46\u6211\u60f3\u4ece\u5176\u4e2d\u63d0\u53d6\u4e00\u4e2a\u53ef\u91cd\u7528\u7684\u90e8\u5206\uff0c\u6700\u7ec8\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u8bb8\u591a\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u6211\u60f3\u4e3a\u8fd9\u4e2a\u60f3\u6cd5\u6216\u4e8b\u5b9e\u505a\u4e00\u4e2a\u4e3b\u9875\u3002\u6211\u601d\u8003\u8fd9\u4ef6\u4e8b\u7684\u4e2d\u5fc3\u3002\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u9875\u9762\uff1a\n\u8fd9\u662f\u6211\u80fd\u60f3\u8c61\u5230\u7684\u6700\u57fa\u672c\u7684\u9875\u9762-\u5b83\u975e\u5e38\u63a5\u8fd1\u4e8e\u4e00\u6761\u63a8\u6587\uff0c\u82b1\u4e86\u5927\u7ea6\u540c\u6837\u591a\u7684\u65f6\u95f4\u3002\u6211\u7ffb\u9605\u4e86\u4fee\u6539\u5386\u53f2\uff0c\u6211\u82b1\u4e86\u5927\u7ea645\u79d2\u624d\u628a\u8fd9\u4e2a\u9875\u9762\u5f04\u5f97\u8fd9\u4e48\u957f\uff0c\u5927\u7ea6\u662f\u53d1\u63a8\u7279\u7684\u65f6\u95f4\u3002\u6211\u65e9\u4e0a6\u70b957\u5206\u5f00\u59cb\u5de5\u4f5c\uff0c6\u70b958\u5206\u628a\u8fd9\u4e2a\u505a\u597d\u3002\n\u6211\u79bb\u5f00\u4e86\u5b83\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u53bb\u62ff\u5496\u5561\uff0c\u786e\u4fdd\u5b69\u5b50\u4eec\u90fd\u51c6\u5907\u597d\u4e0a\u5b66\u4e86\u3002\u5f53\u6211\u56de\u6765\u65f6\uff0c\u6211\u770b\u5230\u8fd9\u4e00\u9875\uff0c\u6211\u60f3\uff0c\u4f60\u77e5\u9053\u4ec0\u4e48\u4f1a\u8ba9\u8fd9\u4e00\u9875\u66f4\u597d\u5417\uff1f\u5b9e\u9645\u7814\u7a76\u7684\u94fe\u63a5\u3002\u6240\u4ee5\uff0c\u6211\u591a\u82b1\u4e86\u51e0\u5206\u949f\uff0c\u627e\u5230\u4e86\u5b9e\u9645\u7684\u8bba\u6587\uff0c\u5e76\u6dfb\u52a0\u4e86\u5b83\u3002\n\u6211\u6dfb\u52a0\u5b83\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u8fd9\u4e2a\u60f3\u6cd5\u5728\u7f51\u7edc\u4e0a\u7684\u4e3b\u9875\uff0c\u800c\u8fd9\u4e2a\u60f3\u6cd5\u7684\u4e3b\u9875\u5e94\u8be5\u6709\u4e00\u4e2a\u5230\u7814\u7a76\u7684\u94fe\u63a5\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u7814\u7a76\u7684\u94fe\u63a5\uff0c\u5e76\u6307\u51fa\u8be5\u94fe\u63a5\u53ea\u80fd\u901a\u8fc7\u8ba2\u9605\u83b7\u5f97\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e0e\u63a8\u7279\u5e76\u6ca1\u6709\u592a\u5927\u7684\u4e0d\u540c\u3002\u4f46\u73b0\u5728\u6211\u5728\u627e\u53ef\u4ee5\u628a\u5b83\u8054\u7cfb\u8d77\u6765\u7684\u4e1c\u897f\u3002\u6211\u5728\u6211\u7684\u7ef4\u57fa\u4e0a\u641c\u7d22\u6211\u53ef\u4ee5\u94fe\u63a5\u5230\u7684\u5173\u4e8e\u81ea\u6740\u7684\u6587\u7ae0\u3002\n\u6211\u771f\u7684\u5f88\u5174\u594b\uff0c\u56e0\u4e3a\u6211\u8bb0\u5f97\u6211\u516d\u4e2a\u6708\u524d\u5199\u7684\u81ea\u6740\u5e26\u6587\u7ae0\uff0c\u610f\u8bc6\u5230\u8fd9\u5c06\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u94fe\u63a5\u3002\u6240\u4ee5\u6211\u94fe\u63a5\u5230\u5b83\uff0c\u7136\u540e\u518d\u8bfb\u4e00\u904d\u3002\u6211\u73b0\u5728\u8981\u505a\u7684\u662f\u60f3\u4e00\u60f3\u6211\u5728\u94fe\u63a5\u524d\u9762\u653e\u4e86\u4ec0\u4e48\u53e5\u5b50\u3002\u6211\u5728\u8003\u8651\u5982\u4f55\u5b9a\u4e49\u8fd9\u79cd\u5173\u7cfb\u3002\n\u7136\u800c\uff0c\u8bfb\u5230\u5b83\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u5e76\u4e0d\u662f\u6211\u6240\u60f3\u7684\u90a3\u79cd\u5e72\u51c0\u7684\u652f\u6301\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5f53\u6211\u94fe\u63a5\u5230\u5b83\u65f6\uff0c\u5b83\u63d0\u9192\u6211\uff0c\u8bb8\u591a\u793e\u4f1a\u5b66\u5bb6\u8ba4\u4e3a\u81ea\u6740\u8170\u5e26\u662f\u7f8e\u56fd\u897f\u90e8\u767d\u4eba\u4e2d\u5e74\u4eba\u53e3\u7ed3\u6784\u7684\u7ed3\u679c\u3002\u767d\u4eba\u7684\u81ea\u6740\u7387\u662f\u9ed1\u4eba\u7684\u4e24\u500d\u591a\uff0c\u6700\u8fd1\u81ea\u6740\u7387\u7684\u4e0a\u5347\u7eaf\u7cb9\u662f\u767d\u4eba\u73b0\u8c61\u3002\n\u8fd9\u6253\u7834\u4e86\u6211\u7684\u7b80\u5355\u6545\u4e8b\uff0c\u5373\u66f4\u591a\u7684\u67aa\u652f=\u66f4\u591a\u7684\u81ea\u6740\u7387\uff0c\u56e0\u4e3a\u4e8b\u5b9e\u662f\uff0c\u767d\u4eba\u7537\u6027\u5145\u65a5\u7684\u897f\u90e8\u5404\u5dde\u5f80\u5f80\u4f1a\u6709\u66f4\u591a\u7684\u67aa\u652f\u62e5\u6709\u91cf\u548c\u66f4\u591a\u7684\u81ea\u6740\u7387\u3002\n\u6211\u8bf4\u8fd9\u662f\u4e00\u4e2a\u5730\u533a\u6027\u7684\u95ee\u9898\uff0c\u4f46\u4e00\u4e2a\u6f5c\u5728\u7684\u6f5c\u5728\u53d8\u91cf\u662f\u4eba\u53e3\u4e2d\u7684\u7537\u6027\u767d\u4eba\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u79cd\u610f\u4e49\u7684\u4ea7\u751f\u4e0e\u6211\u4eec\u5728\u4eca\u5929\u7684\u7f51\u7edc\u4e0a\u901a\u5e38\u770b\u5230\u7684\u662f\u591a\u4e48\u7684\u4e0d\u540c\u3002\u8fd9\u91cc\u4ee4\u4eba\u5174\u594b\u7684\u662f\u6784\u5efa\u590d\u6742\u6027\uff0c\u800c\u4e0d\u662f\u964d\u4f4e\u590d\u6742\u6027\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u542b\u4e49\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u6211\u4eec\u53ef\u80fd\u77e5\u9053\u8fd9\u6761\u63a8\u6587\u7684\u201c\u610f\u601d\u201d\uff0c\u4ee5\u53ca\u4e00\u7bc7\u535a\u5ba2\u5e16\u5b50\u7684\u201c\u610f\u601d\u201d\uff0c\u4f46\u8fd9\u91cc\u7684\u610f\u601d\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u4e0d\u662f\u5efa\u7acb\u4e00\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u4e89\u8bba\uff0c\u800c\u662f\u8bd5\u56fe\u5efa\u7acb\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f\u65b0\u7406\u89e3\u7684\u95ee\u9898\u6a21\u578b\u3002\n\u6211\u548c\u6c83\u5fb7\u00b7\u574e\u5b81\u5b89(Ward Cunningham)\u5408\u4f5c\u4e86\u4e00\u5e74\u534a\uff0c\u4ed6\u57281995\u5e74\u53d1\u660e\u4e86\u6700\u65e9\u7684\u7ef4\u57fa\uff0c\u5c06\u8fd9\u79cd\u65b0\u7684\u4e2a\u4eba\u7ef4\u57fa\u6280\u672f\u7528\u4e8e\u6559\u80b2\u9886\u57df\uff0c\u6211\u4e00\u76f4\u4fdd\u5b58\u7740\u8fd9\u4e2a\u4e2a\u4eba\u7ef4\u57fa\uff0c\u5b83\u662f\u6211\u81ea\u5df1\u7684\u4e1c\u897f\u548c\u6211\u4ece\u5176\u4ed6\u7f51\u7ad9\u590d\u5236\u7684\u4e1c\u897f\u7684\u96c6\u5408\uff0c\u5df2\u7ecf\u6709\u4e00\u5e74\u591a\u4e86\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u7684\u4e2a\u4eba\u7ef4\u57fa\u91cc\u6709\u5c06\u8fd11000\u7bc7\u6587\u7ae0\u3002\u6211\u53ef\u80fd\u8fd8\u67091000\u591a\u4e2a\u6563\u5e03\u5728\u5176\u4ed6\u7f51\u7ad9\u4e0a\u3002\u5b83\u4eec\u6765\u81ea\u6211\u81ea\u5df1\u548c\u5176\u4ed6\u4eba\uff0c\u662f\u6211\u9047\u5230\u7684\u60f3\u6cd5\u7684\u6700\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u6216\u8005\u662f\u6570\u636e\uff0c\u6216\u8005\u662f\u60f3\u6cd5\u7684\u4f8b\u5b50\u3002\u6709\u4e9b\u662f\u5bf9\u5468\u516d\u4e0b\u96e8\u7684\u5496\u5561\u9986\u8fdb\u884c\u4e0b\u5348\u8c03\u67e5\u7684\u7ed3\u679c\uff0c\u4f46\u5927\u591a\u6570\u90fd\u50cf\u6211\u521a\u624d\u5728\u8fd9\u91cc\u5c55\u793a\u7684\u90a3\u6837\uff0c\u662f\u901a\u8fc7\u94fe\u63a5\u5efa\u7acb\u590d\u6742\u6027\u7684\u7b80\u5355\u77e5\u8bc6\u3002\n\u5f53\u4f60\u89c4\u5212\u51fa\u4e0a\u5343\u7bc7\u4f60\u81ea\u5df1\u4e86\u89e3\u7684\u6587\u7ae0\u65f6\uff0c\u4f60\u4f1a\u5f00\u59cb\u770b\u5230\u5bf9\u4f60\u601d\u60f3\u7684\u5f71\u54cd\uff0c\u8fd9\u4e9b\u5f71\u54cd\u5f88\u96be\u7528\u8bed\u8a00\u6765\u63cf\u8ff0\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f60\u5199\u7684\u8fd9\u4e9b\u4e1c\u897f\u5f00\u59cb\u5f62\u6210\u4e00\u4e2a\u5e2e\u52a9\u4f60\u601d\u8003\u7684\u6df1\u5c42\u7f51\u7edc\u3002\u5728\u6211\u81ea\u5df1\u7684\u7ef4\u57fa\u91cc\uff0c\u8fd9\u662f\u4e00\u4e2a\u540d\u4e3a\u201c\u7ad9\u5728\u4e00\u8fb9\u201d\u7684\u9875\u9762\u7684\u94fe\u63a5\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u5eb7\u5b9a\u65af\u57fa\u662f\u5982\u4f55\u5728\u770b\u5230\u4ed6\u7684\u4e00\u5e45\u5177\u8c61\u753b\u7684\u4fa7\u9762\uff0c\u6ca1\u6709\u610f\u8bc6\u5230\u5b83\u662f\u5177\u8c61\u6027\u7684(\u5e76\u4e14\u53d1\u73b0\u5b83\u6709\u4e86\u5f88\u5927\u7684\u6539\u8fdb)\u540e\uff0c\u5982\u4f55\u53d1\u660e\u4e86\u4ed6\u7684\u62bd\u8c61\u827a\u672f\u7248\u672c\u7684\u3002\n\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u901a\u8fc7\u5173\u8054\u94fe\u63a5\u8054\u7cfb\u5728\u4e00\u8d77\u7684\uff0c\u8fd9\u4e9b\u94fe\u63a5\u4e0e20\u4e16\u7eaa80\u5e74\u4ee3\u7684\u7535\u8111\u751f\u6210\u7684\u8bd7\u6b4c\uff0c\u4e00\u4e2a\u673a\u5668\u4eba\u540d\u4e3ahaiku\u7684\u201c\u627e\u5230\u7684\u8dc6\u62f3\u9053\u201d(\u201c710,711,712\u201d)\uff0c\u53cc\u5cf0\u5e03\u666f\u4e2d\u5bfc\u81f4\u6740\u624b\u9c8d\u52c3\u89d2\u8272\u521b\u4f5c\u7684\u4e8b\u4ef6\uff0c\u4ee5\u53ca\u65af\u7279\u62c9\u6587\u65af\u57fa\u5bf9\u6f14\u594f\u8005\u94a2\u7434\u7684\u5438\u5f15\u529b\u6709\u5173\u3002\u5176\u4ed6\u7684\u9053\u8def\u5206\u652f\u5230\u65e9\u671f\u62bd\u8c61\u827a\u672f\u548c\u795e\u667a\u8fd0\u52a8\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e9b\u4e1c\u897f\u7684\u610f\u4e49\u6bd4\u4e00\u4e2a\u4eba\u4ece\u4e00\u7bc7\u5e16\u5b50\u6216\u4e00\u7bc7\u8bba\u6587\u4e2d\u83b7\u5f97\u7684\u8981\u5fae\u5999\u548c\u4e30\u5bcc\u5f97\u591a\uff0c\u4e00\u79cd\u77e5\u8bc6\u4fdd\u6301\u4e86\u5b83\u7684\u6d41\u52a8\u6027\uff0c\u5e76\u4e0d\u65ad\u4ea7\u751f\u65b0\u7684\u89c1\u89e3\u3002\n\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e9b\u94fe\u63a5\u662f\u5728\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\u7f16\u8f91\u7684\uff0c\u4ec5\u4ec5\u662f\u901a\u8fc7\u8bb0\u5f55\u6211\u6240\u5b66\u6216\u542c\u5230\u7684\u4e1c\u897f\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u6211\u4ee5\u524d\u542c\u5230\u7684\u6216\u5176\u4ed6\u4eba\u5199\u7684\u4e1c\u897f\u8054\u7cfb\u8d77\u6765\u3002\u6211\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u4e8e\u53d1\u73b0\u827a\u672f\u7684\u95ee\u9898\u7684\u7ef4\u57fa\u3002\n\u8fd9\u6bb5\u7ecf\u5386\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u6211\uff0c\u4ee5\u81f3\u4e8e\u6211\u53d1\u73b0\u5f88\u96be\u518d\u4e0e\u5f88\u591a\u6280\u672f\u4e13\u5bb6\u6c9f\u901a\u4e86\u3002\u8fd9\u5c31\u50cf\u8bd5\u56fe\u5411\u4e00\u4e2a\u4ece\u672a\u8bfb\u8fc7\u4e66\u7684\u4eba\u89e3\u91ca\u6587\u5b66\u4e00\u6837\u3002\u4f60\u4f1a\u88ab\u95ee\u5230\u201c\u6240\u4ee5\u57fa\u672c\u4e0a\u4e00\u672c\u4e66\u5c31\u662f\u522b\u4eba\u8bf4\u7684\u5199\u4e0b\u6765\u7684\u8bdd\uff1f\u201d\u4f60\u8bf4\u4e0d\uff0c\u4e0d\u4ec5\u4ec5\u662f\u8fd9\u6837\u3002\u4f46\u5b83\u8fd8\u6709\u4ec0\u4e48\u6bd4\u8fd9\u66f4\u591a\u7684\u5462\uff1f\n\u8fd9\u662f\u6211\u8bd5\u56fe\u4ece\u8fd9\u6b21\u7ecf\u5386\u4e2d\u62bd\u8c61\u51fa\u4e00\u4e9b\u5173\u4e8e\u6211\u4eec\u5728\u7f51\u7edc\u4e0a\u5408\u4f5c\u7684\u65b9\u5f0f\u4ee5\u53ca\u76ee\u524d\u4e25\u91cd\u5931\u8861\u7684\u65b9\u5f0f\u7684\u66f4\u4e00\u822c\u7684\u4e1c\u897f\u3002\n\u6211\u8981\u63d0\u51fa\u7684\u8bba\u70b9\u662f\uff0c\u793e\u4ea4\u7f51\u7edc\u7684\u4e3b\u8981\u5f62\u5f0f-\u535a\u5ba2\u3001Twitter\u3001Facebook\u3001\u8bba\u575b\u3001Reddit\u548cInstagram\u7684\u6df7\u5408\u4f53-\u662f\u4e00\u79cd\u8d2b\u7a77\u7684\u5b66\u4e60\u548c\u7814\u7a76\u6a21\u5f0f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7269\u79cd\uff0c\u6211\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u7269\u79cd\u7684\u751f\u5b58\u6709\u8d56\u4e8e\u6211\u4eec\u6446\u8131\u201c\u7f51\u7edc\u4f5c\u4e3a\u5bf9\u8bdd\u201d\u7684\u751c\u871c\u3001\u54b8\u7684\u8102\u80aa\uff0c\u8f6c\u5411\u4e00\u4e9b\u66f4\u6c38\u6052\u3001\u66f4\u4e00\u4f53\u5316\u3001\u66f4\u53cd\u590d\u3001\u4e0d\u90a3\u4e48\u4e2a\u4eba\u5316\u548c\u4e0d\u90a3\u4e48\u81ea\u4fe1\u7684\u4e1c\u897f\uff0c\u4e00\u4e9b\u66f4\u5b64\u72ec\u4f46\u66f4\u6709\u8054\u7cfb\u7684\u4e1c\u897f\u3002\n\u6211\u4e0d\u6307\u671b\u80fd\u8bf4\u670d\u4f60\u4eec\u5f88\u591a\u4eba\uff0c\u4f46\u6211\u4f1a\u62ff\u6211\u80fd\u62ff\u5230\u7684\u3002\n\u4e3a\u4e86\u6709\u6548\u5730\u8c08\u8bba\u8fd9\u4e00\u70b9\uff0c\u6211\u60f3\u4ecb\u7ecd\u4e24\u4e2a\u672f\u8bed\uff0c\u5b83\u4eec\u4ee3\u8868\u4e86\u4e0d\u540c\u7684Web\u65b9\u5f0f\uff1a\u82b1\u56ed\u548c\u6eaa\u6d41\u3002\u8fd9\u4e9b\u672f\u8bed\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6709\u6bd4\u6211\u66f4\u65e9\u7684\u5386\u53f2\uff0c\u4f46\u6211\u4eec\u5c06\u6839\u636e\u81ea\u5df1\u7684\u76ee\u7684\u8c03\u6574\u5b9a\u4e49\u3002\n\u82b1\u56ed\u662f\u4e00\u4e2a\u4e0e\u8d85\u6587\u672c\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u53e4\u8001\u9690\u55bb\u3002\u719f\u6089\u5386\u53f2\u7684\u4eba\u90fd\u4f1a\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9\u300220\u4e16\u7eaa\u4e2d\u53f6\u7684\u5c94\u8def\u82b1\u56ed\u3002\u7ef4\u57fa\u56ed\u4e01\u7684\u6982\u5ff5\u59cb\u4e8e20\u4e16\u7eaa90\u5e74\u4ee3\u3002\u9a6c\u514b\u00b7\u4f2f\u6069\u65af\u57661998\u5e74\u7684\u6563\u6587\u201c\u8d85\u6587\u672c\u82b1\u56ed\u201d\u3002\n\u82b1\u56ed\u5c31\u662f\u7f51\u7edcAS\u62d3\u6251\u3002\u5c06\u7f51\u7edc\u4f5c\u4e3a\u7a7a\u95f4\u3002\u5b83\u662f\u6574\u5408\u7684\u7f51\u7edc\uff0c\u8fed\u4ee3\u7684\u7f51\u7edc\uff0c\u4f5c\u4e3a\u4e8b\u7269\u5f7c\u6b64\u6392\u5217\u548c\u91cd\u65b0\u5b89\u6392\u7684\u7f51\u7edc\u3002\n\u82b1\u56ed\u4e2d\u7684\u4e8b\u7269\u4e0d\u4f1a\u5d29\u6e83\u6210\u4e00\u5957\u5355\u4e00\u7684\u5173\u7cfb\u6216\u89c4\u8303\u5e8f\u5217\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u7f51\u7edc\u4f5c\u4e3a\u62d3\u6251\u201d\u6216\u201c\u7f51\u7edc\u4f5c\u4e3a\u7a7a\u95f4\u201d\u7684\u610f\u601d\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u4e00\u6b21\u7a7f\u8fc7\u82b1\u56ed\u90fd\u4f1a\u521b\u9020\u65b0\u7684\u8def\u5f84\u548c\u65b0\u7684\u610f\u4e49\uff0c\u5f53\u6211\u4eec\u5728\u82b1\u56ed\u4e2d\u6dfb\u52a0\u4e1c\u897f\u65f6\uff0c\u6211\u4eec\u4f1a\u4ee5\u4e00\u79cd\u5141\u8bb8\u8bb8\u591a\u672a\u6765\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u5173\u7cfb\u7684\u65b9\u5f0f\u6765\u6dfb\u52a0\u5b83\u4eec\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u5f20\u6ce2\u7279\u5170\u65e5\u672c\u82b1\u56ed\u7684\u6865\u7684\u62fc\u8d34\u7167\u7247\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u4e0d\u77e5\u9053\u4f60\u80fd\u4e0d\u80fd\u770b\u51fa\u6765\uff0c\u4f46\u8fd9\u662f\u540c\u4e00\u5ea7\u6865\uff0c\u5728\u4e00\u5e74\u4e2d\u7684\u4e0d\u540c\u65f6\u95f4\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u770b\u8fd9\u5ea7\u6865\u3002\n\u6865\u5c31\u662f\u6865\uff0c\u6865\u5c31\u662f\u6865--\u4e00\u4e2a\u6709\u7279\u5b9a\u8fb9\u754c\u548c\u660e\u786e\u76ee\u7684\u7684\u660e\u786e\u4e8b\u7269\u3002\u4f46\u82b1\u56ed\u7684\u591a\u7ebf\u6027\u6027\u8d28\u610f\u5473\u7740\u6ca1\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u6b63\u786e\u5730\u770b\u5230\u8fd9\u5ea7\u6865\uff0c\u6ca1\u6709\u4e00\u4e2a\u4eba\u53ef\u4ee5\u6b63\u786e\u5730\u63a5\u8fd1\u3002\u5efa\u7b51\u5e08\u521b\u9020\u4e86\u8fd9\u5ea7\u6865\uff0c\u4f46\u9020\u5c31\u8fd9\u5ea7\u6865\u610f\u4e49\u7684\u5374\u662f\u516c\u56ed\u7684\u6e38\u5ba2\u3002\u4e00\u5ea7\u597d\u7684\u6865\u53ef\u4ee5\u652f\u6301\u5f88\u591a\u65b9\u6cd5\uff0c\u5f88\u591a\u666f\u8272\uff0c\u5f88\u591a\u5b63\u8282\uff0c\u4e5f\u8bb8\u8fd8\u6709\u5f88\u591a\u7528\u9014\uff0c\u5bf9\u4e8e\u5efa\u7b51\u5e08\u6765\u8bf4\uff0c\u8fd9\u5ea7\u6865\u7684\u610f\u4e49\u751a\u81f3\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6f14\u53d8\u3002\n\u5728\u82b1\u56ed\u91cc\uff0c\u95ee\u5148\u53d1\u751f\u4e86\u4ec0\u4e48\u5145\u5176\u91cf\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u5728\u4e00\u4e2a\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u82b1\u56ed\u91cc\uff0c\u201c\u8fd9\u5ea7\u6865\u662f\u5728\u8fd9\u4e9b\u6811\u4e4b\u540e\u5efa\u9020\u7684\u5417\u201d\u8fd9\u4e2a\u95ee\u9898\u662f\u6beb\u65e0\u610f\u4e49\u7684\u5386\u53f2\u7410\u4e8b\u3002\u6865\u4e0d\u56de\u5e94\u6811\u6728\uff0c\u6811\u6728\u4e5f\u4e0d\u56de\u5e94\u6865\u3002\u5b83\u4eec\u4ee5\u4e00\u79cd\u76f8\u5bf9\u6c38\u6052\u7684\u65b9\u5f0f\u76f8\u4e92\u8054\u7cfb\u3002\n\u82b1\u56ed\u91cc\u7684\u4e00\u5207\u90fd\u662f\u5982\u6b64\u3002\u6bcf\u4e00\u6735\u82b1\u3001\u6bcf\u4e00\u68f5\u6811\u548c\u6bcf\u4e00\u682a\u85e4\u8513\u90fd\u662f\u7531\u56ed\u4e01\u76f8\u5bf9\u4e8e\u6574\u4f53\u6765\u770b\u7684\uff0c\u8fd9\u6837\u53c2\u89c2\u8005\u5728\u82b1\u56ed\u4e2d\u627e\u5230\u81ea\u5df1\u7684\u9053\u8def\u65f6\uff0c\u53ef\u4ee5\u6709\u72ec\u7279\u800c\u8fde\u8d2f\u7684\u4f53\u9a8c\u3002\u6211\u4eec\u628a\u82b1\u56ed\u521b\u9020\u6210\u4e00\u79cd\u4f53\u9a8c\u7684\u751f\u6210\u5668\uff0c\u80fd\u591f\u65e0\u9650\u7684\u8868\u8fbe\u548c\u610f\u4e49\u3002\n\u5f53\u6211\u6dfb\u52a0\u67aa\u652f\u63a7\u5236\u6587\u7ae0\u65f6\uff0c\u82b1\u56ed\u5c31\u662f\u6211\u5728\u7ef4\u57fa\u4e0a\u505a\u7684\u4e8b\u60c5\uff0c\u628a\u4e00\u4e2a\u7ecf\u5e38\u76f8\u4e92\u51b2\u7a81\u7684\u4fe1\u606f\u7f51\u7edc\u6784\u5efa\u6210\u4e00\u4e2a\u7f51\u7edc\uff0c\u53ef\u4ee5\u4ea7\u751f\u6d1e\u5bdf\u529b\uff0c\u91cd\u590d\u5b83\uff0c\u8ba9\u5b83\u6210\u957f\u4e3a\u6bd4\u5355\u4e00\u4e8b\u4ef6\u3001\u5355\u4e00\u53d9\u4e8b\u6216\u5355\u4e00\u610f\u4e49\u66f4\u5927\u7684\u4e1c\u897f\u3002\n\u6eaa\u6d41\u662f\u4e00\u4e2a\u6709\u7740\u53e4\u8001\u6839\u6e90\u7684\u8f83\u65b0\u7684\u6bd4\u55bb\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8282\u76ee\u7684\u201c\u4e8b\u4ef6\u6d41\u201d\uff0c\u4e5f\u5c31\u662f\u7814\u7a76\u4eba\u5458\u572820\u4e16\u7eaa90\u5e74\u4ee3\u63d0\u51fa\u7684\u201c\u751f\u6d3b\u6d41\u201d\u3002\u6700\u8fd1\uff0c\u201c\u6d41\u201d\u4e00\u8bcd\u88ab\u7528\u6765\u5f62\u5bb9\u65e0\u4f11\u6b62\u7684Twitter\u3001\u65b0\u95fb\u63d0\u9192\u548cFacebook\u63d0\u8981\u3002\n\u5728\u6eaa\u6d41\u7684\u6bd4\u55bb\u4e2d\uff0c\u4f60\u4e0d\u4f1a\u901a\u8fc7\u7ed5\u7740\u5b83\u8d70\u3001\u770b\u5b83\uff0c\u6216\u8005\u8ddf\u7740\u5b83\u8d70\u5230\u5c3d\u5934\u6765\u4f53\u9a8c\u5b83\u3002\u4f60\u8df3\u8fdb\u53bb\uff0c\u8ba9\u5b83\u6d41\u8fc7\u3002\u5f53\u7269\u4f53\u6f02\u6d6e\u800c\u8fc7\u65f6\uff0c\u4f60\u4f1a\u611f\u89c9\u5230\u5b83\u7684\u529b\u91cf\u6253\u5728\u4f60\u8eab\u4e0a\u3002\n\u8fd9\u5e76\u4e0d\u662f\u8bf4\u4f60\u5728\u6eaa\u6d41\u4e2d\u662f\u88ab\u52a8\u7684\u3002\u4f60\u53ef\u4ee5\u6d3b\u8dc3\u8d77\u6765\u3002\u4f46\u662f\u4f60\u5728\u90a3\u91cc\u7684\u884c\u4e3a-\u4f60\u7684\u535a\u5ba2\u5e16\u5b50\uff0c@\u63d0\u53ca\uff0c\u8bba\u575b\u8bc4\u8bba-\u5b58\u5728\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u4e8b\u4ef6\u65f6\u95f4\u7ebf\u4e0a\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u53d9\u4e8b\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0cStream\u7528\u5e8f\u5217\u5316\u66ff\u6362\u4e86\u62d3\u6251\u3002\u4e0e\u60f3\u8c61\u4e00\u4e2a\u6c38\u6052\u7684\u8fde\u63a5\u548c\u591a\u6761\u8def\u5f84\u7684\u4e16\u754c\u4e0d\u540c\uff0cStream\u5411\u6211\u4eec\u5c55\u793a\u4e86\u4e00\u6761\u4ee5\u6211\u4eec\u7684\u7ecf\u9a8c(\u800c\u4e14\u53ea\u6709\u6211\u4eec\u7684\u7ecf\u9a8c)\u4e3a\u4e2d\u5fc3\u7684\u5355\u4e00\u7684\u3001\u6309\u65f6\u95f4\u987a\u5e8f\u6392\u5217\u7684\u8def\u5f84\u3002\n\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u201c\u6eaa\u6d41\u201d\u6700\u597d\u662f\u901a\u8fc7\u5df4\u8d6b\u91d1\u7684\u8bdd\u8bed\u89c2\u5ff5\u7684\u955c\u5934\u6765\u770b\u7684\u3002\u5df4\u8d6b\u91d1\u8ba4\u4e3a\u8bdd\u8bed\uff0c\u4e5f\u5c31\u662f\u8c08\u8bdd\u7684\u8bdd\u8f6e\uff0c\u4e0e\u4e0a\u4e0b\u6587\u5bc6\u4e0d\u53ef\u5206\u3002\u8981\u7406\u89e3\u4e00\u4efd\u58f0\u660e\uff0c\u4f60\u5fc5\u987b\u56de\u987e\u4e4b\u524d\u7684\u4e8b\u60c5\uff0c\u4f60\u5fc5\u987b\u627e\u51fa\u5b83\u5728\u56de\u590d\u4ec0\u4e48\uff0c\u4f60\u5fc5\u987b\u77e5\u9053\u5199\u8fd9\u4efd\u58f0\u660e\u7684\u4eba\u548c\u4ed6\u4eec\u7684\u6f14\u8bb2\u4e0a\u4e0b\u6587\u3002\u8981\u7406\u89e3\u60a8\u7684\u58f0\u660e\uff0c\u6211\u5fc5\u987b\u91cd\u5efa\u60a8\u7684\u6574\u4e2a\u6d41\u7a0b\u3002\n\u5f53\u7136\uff0c\u56e0\u4e3a\u6211\u4e0d\u80fd\u5bf9\u968f\u610f\u7684\u8bdd\u8bed\u8fd9\u6837\u505a\uff0c\u6240\u4ee5\u6211\u5927\u591a\u53ea\u662f\u505c\u7559\u5728\u6211\u77e5\u9053\u7684\u6eaa\u6d41\u4e2d\u3002\u5982\u679c\u82b1\u56ed\u662f\u4e16\u535a\u4f1a\uff0c\u90a3\u6eaa\u6d41\u5c31\u662f\u8c08\u8bdd\u548c\u4fee\u8f9e\uff0c\u65e0\u8bba\u597d\u574f\u3002\n\u8fd9\u4e00\u70b9\u4f60\u5728Facebook\u3001Twitter\u3001Instagram\u7b49\u7f51\u7ad9\u4e0a\u770b\u5f97\u6700\u6e05\u695a\u3002\u4f46\u5b83\u4e5f\u662f\u4f60\u667a\u80fd\u624b\u673a\u7684\u901a\u77e5\u9762\u677f\uff0c\u5b83\u4e5f\u662f\u7535\u5b50\u90ae\u4ef6\uff0c\u5b83\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u535a\u5ba2\u3002\u5766\u7387\u5730\u8bf4\uff0c\u73b0\u5728\u4e00\u5207\u90fd\u597d\u4e86\u3002\n\u82b1\u56ed\u662f\u7efc\u5408\u7684\uff0c\u800c\u6eaa\u6d41\u662f\u81ea\u6211\u4e3b\u5f20\u7684\u3002\u8fd9\u662f\u8bf4\u670d\uff0c\u662f\u4e89\u8bba\uff0c\u662f\u5021\u5bfc\u3002\u8fd9\u662f\u4e2a\u4eba\u5316\u7684\uff0c\u4e2a\u6027\u5316\u7684\uff0c\u5373\u65f6\u7684\u3002\u5b83\u8ba9\u4eba\u7cbe\u795e\u632f\u594b\u3002\u6b63\u5982\u6211\u4eec\u53ef\u80fd\u9a6c\u4e0a\u770b\u5230\u7684\u90a3\u6837\uff0c\u5b83\u4e5f\u975e\u5e38\u4e0d\u9002\u5408\u6211\u4eec\u6240\u4f7f\u7528\u7684\u67d0\u4e9b\u7528\u9014\u3002\n\u6d41\u662f\u6211\u5728Twitter\u548c\u535a\u5ba2\u5e73\u53f0\u4e0a\u505a\u7684\u4e8b\u60c5\u3002\u6211\u628a\u4e00\u4e2a\u4e8b\u5b9e\u4f5c\u4e3a\u53e6\u4e00\u5757\u7816\u5934\u6295\u5c04\u5230\u6211\u968f\u7740\u65f6\u95f4\u5efa\u7acb\u7684\u8bba\u70b9\u6216\u53d9\u4e8b\u6216\u4eba\u7269\u89d2\u8272\u4e2d\uff0c\u7136\u540e\u91cd\u8ff0\u800c\u4e0d\u662f\u91cd\u590d\u3002\n\u6211\u60f3\u5728\u5ea7\u7684\u5927\u591a\u6570\u4eba\u90fd\u8bfb\u8fc7\u8303\u5c3c\u74e6\u5c14\u00b7\u5e03\u4ec01945\u5e74\u7684\u6587\u7ae0\uff0c\u5c31\u50cf\u6211\u4eec\u6240\u60f3\u7684\u90a3\u6837\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u8bfb\u8fc7\uff0c\u4f60\u9700\u8981\u8bfb\u4e00\u8bfb\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u8bfb\u8fc7\uff0c\u6211\u4e5f\u6709\u70b9\u7fa1\u6155\u4f60\u3002\u7b2c\u4e00\u6b21\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u4e00\u751f\u4e2d\u6700\u7f8e\u597d\u7684\u7ecf\u5386\u4e4b\u4e00\uff0c\u6211\u8ba4\u4e3a\u5373\u4f7f\u5728\u4eca\u5929\uff0c\u5728\u7f51\u7edc\u8ba9\u8d85\u6587\u672c\u53d8\u5f97\u53f8\u7a7a\u89c1\u60ef\u4e4b\u540e\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u79cd\u4ee4\u4eba\u60ca\u53f9\u7684\u7ecf\u5386\u3002\n\u73b0\u5728\uff0c\u5f53\u4eba\u4eec\u8c08\u8bba\u5e03\u4ec0\u7684\u6587\u7ae0\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u8c08\u8bba\u7684\u662f\u4ece\u7b2c\u516d\u8282\u5f00\u59cb\u7684\u90a3\u90e8\u5206\uff0c\u8fd9\u4f3c\u4e4e\u662f\u5982\u6b64\u6709\u5148\u89c1\u4e4b\u660e\uff0c\u5982\u6b64\u9884\u793a\u7740\u7f51\u7edc\u7684\u5230\u6765\u3002\u4ed6\u5728\u90a3\u91cc\u8c08\u5230\u4e86\u4ed6\u8bbe\u60f3\u7684\u4e00\u79cd\u540d\u4e3aMemex\u7684\u673a\u5668\uff1a\n\u6bd4\u65b9\u8bf4\uff0c\u5907\u5fd8\u5f55\u7684\u6240\u6709\u8005\u5bf9\u5f13\u7bad\u7684\u8d77\u6e90\u548c\u5c5e\u6027\u611f\u5174\u8da3\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u4ed6\u6b63\u5728\u7814\u7a76\u4e3a\u4ec0\u4e48\u5728\u5341\u5b57\u519b\u4e1c\u5f81\u7684\u5c0f\u89c4\u6a21\u51b2\u7a81\u4e2d\uff0c\u571f\u8033\u5176\u7684\u77ed\u5f13\u660e\u663e\u4f18\u4e8e\u82f1\u56fd\u7684\u957f\u5f13\u3002\u4ed6\u7684\u5907\u5fd8\u5f55\u91cc\u6709\u51e0\u5341\u672c\u53ef\u80fd\u76f8\u5173\u7684\u4e66\u7c4d\u548c\u6587\u7ae0\u3002\u9996\u5148\uff0c\u4ed6\u6d4f\u89c8\u4e86\u4e00\u672c\u767e\u79d1\u5168\u4e66\uff0c\u627e\u5230\u4e86\u4e00\u7bc7\u6709\u8da3\u4f46\u7c97\u7565\u7684\u6587\u7ae0\uff0c\u628a\u5b83\u7559\u5728\u4e86\u8ba1\u5212\u4e2d\u3002\u63a5\u4e0b\u6765\uff0c\u5728\u4e00\u6bb5\u5386\u53f2\u4e2d\uff0c\u4ed6\u627e\u5230\u4e86\u53e6\u4e00\u4e2a\u76f8\u5173\u7684\u9879\u76ee\uff0c\u5e76\u5c06\u4e24\u8005\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u4ed6\u5c31\u8fd9\u6837\u8d70\u7740\uff0c\u5efa\u9020\u4e86\u4e00\u6761\u5305\u542b\u8bb8\u591a\u7269\u54c1\u7684\u5c0f\u5f84\u3002\u6709\u65f6\uff0c\u4ed6\u4f1a\u63d2\u5165\u81ea\u5df1\u7684\u8bc4\u8bba\uff0c\u8981\u4e48\u5c06\u5176\u94fe\u63a5\u5230\u4e3b\u8def\u5f84\uff0c\u8981\u4e48\u5c06\u5176\u52a0\u5165\u5230\u67d0\u4e2a\u7279\u5b9a\u9879\u76ee\u7684\u4fa7\u8def\u4e2d\u3002\u5f53\u53d1\u73b0\u53ef\u7528\u6750\u6599\u7684\u5f39\u6027\u6027\u80fd\u4e0e\u5f13\u6709\u5f88\u5927\u5173\u7cfb\u65f6\uff0c\u4ed6\u5c31\u5206\u53c9\u8d70\u5230\u4e00\u6761\u5c0f\u8def\u4e0a\uff0c\u5e26\u4ed6\u7ffb\u9605\u5f39\u6027\u8bfe\u672c\u548c\u7269\u7406\u5e38\u6570\u8868\u3002\u4ed6\u63d2\u5165\u4e86\u4e00\u9875\u81ea\u5df1\u7684\u624b\u5199\u5206\u6790\u3002\u56e0\u6b64\uff0c\u4ed6\u5728\u8ff7\u5bab\u822c\u7684\u6750\u6599\u4e2d\u627e\u5230\u4e86\u4ed6\u611f\u5174\u8da3\u7684\u7ebf\u7d22\u3002\n\u4e3a\u4e86\u8ba9\u4f60\u4e86\u89e3\u4e00\u4e0b\u5b9e\u9645\u4e0a\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u77ed\u7684\u91cd\u5efa\uff0c\u6458\u81eaMacromedia 50\u5468\u5e74\u7eaa\u5ff5\u7684\u4e00\u7bc7\u6587\u7ae0\uff1a\n\u6240\u4ee5\u5927\u591a\u6570\u4eba\u8bf4\u8fd9\u662f\u7f51\u7edc\u7684\u6700\u521d\u613f\u666f\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u662f\u90a3\u4e9b\u8d85\u6587\u672c\u5148\u9a71\u4eec\u7684\u7075\u611f\u6765\u6e90\u3002\n\u4f46\u5728\u73b0\u5b9e\u4e2d\uff0c\u5b83\u6839\u672c\u65e0\u6cd5\u9884\u6d4b\u7f51\u7edc\u3002\u4e0d\u7528\u8c22\u3002\u7f51\u7edc\u7684\u5de5\u4f5c\u65b9\u5f0f\u51e0\u4e4e\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u8fd9\u5f88\u5947\u602a\uff0c\u56e0\u4e3a\u5728\u6211\u4eec\u7684\u8111\u6d77\u4e2d\uff0c\u7f51\u7edc\u4ecd\u7136\u662f\u8fd9\u6837\u8fd0\u4f5c\u7684\uff0c\u4f46\u8fd9\u662f\u865a\u6784\u7684\u3002\n\u60a8\u7684\u673a\u5668\u662f\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u51fa\u7248\u8bbe\u5907\u3002\u5982\u679c\u4f60\u6709\u6587\u4ef6\u7684\u526f\u672c\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u6ce8\u91ca\uff0c\u66f4\u6539\uff0c\u6dfb\u52a0\u94fe\u63a5\uff0c\u6c47\u603b\uff0c\u8fd9\u662f\u56e0\u4e3aMemex\u662f\u7528\u6765\u601d\u8003\u7684\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u7528\u6765\u53d1\u5e03\u7684\u5de5\u5177\u3002\n\u8fd9\u5bf9\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u8ba8\u8bba\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u80fd\u529b-\u94fe\u63a5\u3001\u6ce8\u91ca\u3001\u66f4\u6539\u3001\u6c47\u603b\u3001\u590d\u5236\u548c\u5171\u4eab-\u8fd9\u4e9b\u90fd\u662f\u56ed\u827a\u7684\u52a8\u8bcd\u3002\n\u6bcf\u4e2aMemex\u5e93\u90fd\u5305\u542b\u60a8\u7684\u539f\u59cb\u6750\u6599\u548c\u4ed6\u4eba\u7684\u6750\u6599\u3002\u6ca1\u6709\u53ea\u8bfb\u7248\u672c\u7684\u5907\u5fd8\u5f55\uff0c\u56e0\u4e3a\u90a3\u6837\u4f1a\u5f88\u611a\u8822\u3002\u60a8\u9605\u8bfb\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u53ef\u4ee5\u94fe\u63a5\u548c\u6ce8\u91ca\u3002\u63d0\u9192\u4f60\u4e00\u4e0b\uff0c\u6211\u4e0d\u4f1a\u56de\u590d\u7684\u3002\u53d8\u5316\u3002\u8fd9\u4e00\u70b9\u7a0d\u540e\u4f1a\u5f88\u91cd\u8981\u3002\n\u94fe\u63a5\u662f\u5173\u8054\u7684\u3002\u8fd9\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u94fe\u63a5\u4e0d\u4ec5\u662f\u83b7\u53d6\u539f\u59cb\u6750\u6599\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u4ed6\u4eec\u4e0d\u662f\u5728\u8bf4\uff0c\u563f\uff0c\u8fd9\u662f\u4eca\u5929\u6700\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u5b83\u4eec\u4f1a\u63d0\u9192\u4f60\u9700\u8981\u95ee\u7684\u95ee\u9898\uff0c\u63d0\u9192\u4f60\u90a3\u4e9b\u4e0d\u662f\u7acb\u7aff\u89c1\u5f71\u7684\u8054\u7cfb\u3002\n\u94fe\u63a5\u65e2\u7531\u8bfb\u8005\u5236\u4f5c\uff0c\u4e5f\u7531\u4f5c\u8005\u5236\u4f5c\u3002\u8fd9\u662f\u4e00\u4ef6\u4ee4\u4eba\u9707\u60ca\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5fd8\u8bb0\u4e86\uff0c\u4f46\u8fd9\u91cc\u7684\u94fe\u63a5\u4e0d\u662f\u4f5c\u8005\u610f\u56fe\u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u8bfb\u8005\u5206\u6790\u7684\u4e00\u90e8\u5206\u3002\u5907\u5fd8\u5f55\u4e2d\u7684\u5927\u90e8\u5206\u94fe\u63a5\u90fd\u662f\u7531\u8bfb\u8005\u800c\u4e0d\u662f\u4f5c\u8005\u5efa\u7acb\u7684\u3002\u5f53\u7136\uff0c\u5728\u4e07\u7ef4\u7f51\u4e0a\uff0c\u53ea\u6709\u4f5c\u8005\u624d\u80fd\u786e\u5b9a\u94fe\u63a5\u3002\u6587\u6863\u5185\u7684\u94fe\u63a5\u8868\u793a\u6587\u6863\u53ea\u80fd\u6709\u4e00\u7ec4\u5173\u8054\uff0c\u81f3\u5c11\u5728\u4ee5\u540e\u662f\u8fd9\u6837\u3002\n\u5168\u65b0\u7684\u767e\u79d1\u5168\u4e66\u5f62\u5f0f\u5c06\u4f1a\u51fa\u73b0\uff0c\u51c6\u5907\u597d\u7528\u4e00\u7f51\u5173\u8054\u7684\u5c0f\u5f84\u8d2f\u7a7f\u5176\u4e2d\uff0c\u51c6\u5907\u653e\u5165\u5907\u5fd8\u5f55\u4e2d\u5e76\u5728\u90a3\u91cc\u653e\u5927\u3002\u5f8b\u5e08\u53ef\u4ee5\u968f\u65f6\u63a5\u89e6\u5230\u4ed6\u7684\u6574\u4e2a\u7ecf\u5386\u4ee5\u53ca\u670b\u53cb\u548c\u6743\u5a01\u673a\u6784\u7684\u7ecf\u5386\u7684\u76f8\u5173\u610f\u89c1\u548c\u51b3\u5b9a\u3002(\u2026=\u3002\n\u8fd9\u4f4d\u5386\u53f2\u5b66\u5bb6\u5bf9\u4e00\u4e2a\u6c11\u65cf\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u5e74\u8868\u8bb0\u5f55\uff0c\u5c06\u5176\u4e0e\u4e00\u6761\u53ea\u505c\u7559\u5728\u91cd\u8981\u9879\u76ee\u4e0a\u7684\u8df3\u8dc3\u5c0f\u5f84\u76f8\u63d0\u5e76\u8bba\uff0c\u5e76\u53ef\u4ee5\u968f\u65f6\u8ddf\u8e2a\u5f53\u4ee3\u5c0f\u5f84\uff0c\u8fd9\u4e9b\u5c0f\u5f84\u5f15\u5bfc\u4ed6\u5728\u7279\u5b9a\u65f6\u4ee3\u8d70\u904d\u6574\u4e2a\u6587\u660e\u3002\u73b0\u5728\u6709\u4e86\u4e00\u79cd\u65b0\u7684\u804c\u4e1a--\u5f00\u62d3\u8005\uff0c\u4ed6\u4eec\u4e50\u4e8e\u5728\u6d77\u91cf\u7684\u516c\u5171\u8bb0\u5f55\u4e2d\u5efa\u7acb\u6709\u7528\u7684\u5c0f\u5f84\u3002\n\u6bcf\u6b21\u6211\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u6211\u90fd\u88ab\u5b83\u7684\u666f\u8c61\u9707\u64bc\u4e86\u3002\u4f46\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4ef6\u4e8b\u53d1\u751f\u4e86\uff0c\u800c\u662f\u56e0\u4e3a\u5b83\u201c\u6ca1\u6709\u201d\u53d1\u751f\u3002\u6211\u88ab\u9707\u64bc\u4e86\uff0c\u56e0\u4e3a\u57282015\u5e74\uff0c\u8fd9\u4e00\u613f\u666f\u8fd8\u6709\u4e00\u4e9b\u6211\u4eec\u8fd8\u6ca1\u6709\u63a2\u7d22\u7684\u56e0\u7d20\u3002\n\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e00\u613f\u666f\u4e2d\u6709\u4e00\u79cd\u4f60\u4e0d\u7531\u81ea\u4e3b\u5730\u6e34\u671b\u9605\u8bfb\u7684\u5185\u5bb9\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u8054\u7cfb\u4e0d\u662f\u5f00\u73a9\u7b11\uff0c\u800c\u662f\u4e00\u4e2a\u4e3b\u9898\u9886\u57df\u7684\u5fc3\u7406\u6a21\u578b\u7684\u6784\u5efa\u3002\u800c\u8fd9\u79cd\u6a21\u5f0f\u53ef\u4ee5\u88ab\u5176\u4ed6\u4eba\u91c7\u7528\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u6269\u5c55\u548c\u6784\u5efa\u3002\u4eba\u7c7b\u53ef\u4ee5\u8fdb\u6b65\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u771f\u6b63\u7684\u5408\u4f5c\u901a\u8fc7\u4e89\u8bba\u6765\u8fdb\u6b65\u3002\n\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u4eca\u5929\u770b\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u6211\u4eec\u51e0\u4e4e\u770b\u4e0d\u5230\u8fd9\u4e2a\u539f\u59cb\u7684\u613f\u666f\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\n\u8d77\u521d\uff0c\u6211\u5728\u8fd9\u4e00\u90e8\u5206\u6709\u4e00\u4e2a\u5f88\u957f\u7684\u53d9\u8ff0\uff0c\u6545\u4e8b\u5728\u4e95\u548c\u970d\u534e\u5fb7\u00b7\u83b1\u56e0\u6208\u5c14\u5fb7\u3001\u6234\u592b\u00b7\u6e29\u7eb3\u548c\u90ae\u4ef6\u5217\u8868\u4e4b\u95f4\u79fb\u52a8\uff0c\u4ee5\u53ca\u4e54\u6069\u00b7\u5df4\u683c\u7684\u53f2\u8bd7\u300a\u544a\u522b\u51ef\u7279\u00b7\u5e03\u4ec0\u300b\u65b0\u95fb\u7ec4\u3002\n\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u5916\u5356\u90e8\u5206\u6765\u6355\u6349\u8fd9\u4e00\u70b9\uff1f\u4e5f\u8bb8\u4eca\u665a\u7684\u5564\u9152\u662f\u5916\u5356\u90e8\u5206\u3002\u4e5f\u8bb8\u4e0d\u7ba1\u4f60\u559c\u4e0d\u559c\u6b22\u3002\n\u4f46\u6211\u4f1a\u628a\u5b83\u5f52\u7ed3\u4e3a\u8fd9\u4e00\u70b9\u3002\u5f52\u6839\u7ed3\u5e95\u662f\u8c01\u6709\u80fd\u529b\u6539\u53d8\u4e8b\u60c5\u3002\u5b83\u843d\u5230\u4e86\u590d\u5370\u7684\u53f3\u8fb9\u3002\n\u5728\u7f51\u7edc\u4e0a\uff0c\u5982\u679c\u4f60\u60f3\u9605\u8bfb\u4ec0\u4e48\u4e1c\u897f\uff0c\u4f60\u5fc5\u987b\u5728\u522b\u4eba\u7684\u670d\u52a1\u5668\u4e0a\u9605\u8bfb\u5b83\uff0c\u5728\u90a3\u91cc\u4f60\u4e0d\u80fd\u91cd\u5199\u5b83\uff0c\u4f60\u4e0d\u80fd\u7ed9\u5b83\u52a0\u6ce8\u91ca\uff0c\u4f60\u4e0d\u80fd\u590d\u5236\u5b83\uff0c\u4f60\u4e0d\u80fd\u7ed9\u5b83\u6dfb\u52a0\u94fe\u63a5\uff0c\u4f60\u4e0d\u80fd\u5bf9\u5b83\u8fdb\u884c\u7ba1\u7406\u3002\n\u8fd9\u4e9b\u662f\u56ed\u827a\u7684\u52a8\u8bcd\uff0c\u5b83\u4eec\u5728\u65e9\u671f\u7684\u7f51\u7edc\u4e0a\u662f\u4e0d\u5b58\u5728\u7684\u3002\n\u4f46\u662f\uff0c\u4ee5\u670d\u52a1\u5668\u4e3a\u4e2d\u5fc3\u7684Web\u771f\u6b63\u64c5\u957f\u7684\u662f\u5206\u5e03\u5f0f\u5bf9\u8bdd\u3002\u4e00\u7fa4\u5bf9Usenet\u3001\u90ae\u4ef6\u5217\u8868\u548cBBS\u6587\u5316\u611f\u5230\u6cae\u4e27\u7684\u4eba\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u4e00\u4e2a\u534a\u8d85\u6587\u672c\u3001\u534a\u8bba\u575b\u7684\u4e1c\u897f\u3002\u5b83\u88ab\u79f0\u4e3a\u535a\u5ba2\uff0c\u5b83\u5f88\u6f02\u4eae\uff0c\u5b83\u88ab\u8bc1\u660e\u662f\u539f\u578b\u6d41\u3002\u5f53\u4ed6\u4eec\u5c06\u8f9b\u8fea\u52a0\u6dfb\u52a0\u5230\u8fd9\u4e2a\u6a21\u578b\u4e2d\u65f6\uff0c\u5b83\u53d8\u5f97\u4ee4\u4eba\u60ca\u53f9\u3002\n\u56e0\u6b64\uff0c\u57282006\u5e74\u5de6\u53f3\uff0cTwitter\u3001Facebook\u548c\u5176\u4ed6\u7f51\u7ad9\u8f6c\u5411\u76f4\u63a5\u53d7\u5230\u8fd9\u79cd\u4e2a\u4eba\u9875\u9762+\u8ba2\u9605\u9605\u8bfb\u5668\u7ec4\u5408\u7684\u542f\u53d1\u7684\u6a21\u5f0f\u3002\u4f60\u6709\u4e00\u4e2a\u4ee3\u8868\u4f60\u7684\u9875\u9762\uff0c\u6309\u65f6\u95f4\u5012\u5e8f\u6392\u5217--\u4f60\u7684Facebook\u9875\u9762\u6216Twitter\u4e3b\u9875\u3002\u4f60\u7684\u670b\u53cb\u7684\u9875\u9762\u88ab\u805a\u5408\u5230\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u65f6\u95f4\u987a\u5e8f\u63d0\u8981\u4e2d\u3002\u60a8\u7684\u6d41\u5c06\u6210\u4e3a\u60a8\u7684\u4e0a\u4e0b\u6587\u548c\u754c\u9762\u3002\n\u6211\u4eec\u770b\u5230\u5b83\u53d1\u5c55\u6210\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684\u7f51\u7edc\u3002\u4e00\u4e2a\u7531\u201c\u563f\uff0c\u8fd9\u5f88\u9177\u201d\u7684\u4e00\u8df3\u94fe\u63a5\u7ec4\u6210\u7684\u7f51\u7edc\u3002\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\uff0c\u94fe\u63a5\u88ab\u7528\u6765\u521b\u5efa\u4e00\u6761\u5bf9\u8bdd\u7ebf\u7d22(\u4e00\u79cd\u201c\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u6211\u5728\u91cd\u590d\u4ec0\u4e48\uff0c\u5c31\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u201d\u7684\u94fe\u63a5)\uff0c\u800c\u4e0d\u662f\u601d\u60f3\u7684\u8054\u60f3\u3002\n\u201c\u5bf9\u8bdd\u7f51\u201d\u3002\u4e00\u4e2a\u6c89\u8ff7\u4e8e\u4e89\u8bba\u89c2\u70b9\u7684\u7f51\u7edc\u3002\u7f51\u7edc\u88ab\u89c6\u4e3a\u81ea\u6211\u8868\u8fbe\u7684\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u601d\u60f3\u7684\u5de5\u5177\u3002\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5c06\u4fe1\u606f\u548c\u6570\u636e\u878d\u5408\u5230\u4f60\u7684\u8bba\u70b9\u4e2d\uff0c\u8fd9\u6837\u5b83\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u7528\u6765\u53cd\u5bf9\u4f60\u3002\u7ea4\u7f51\u4e0d\u662f\u53ef\u91cd\u6784\u7684\u5e95\u76d8\u6a21\u578b\u3002\n..", "note_en": "Opening keynote for dLRN 2015. Delivered October 16th @ Stanford. Actual keynote may have gone on significant tangents\u2026\n  A week or so ago, I was reading about the Oregon shooting. I\u2019m a pretty standard issue liberal and when I see things that support my liberal views I tend to notice them.\n  So when I see this line in an article I get all excited. This is from the CSJ:\n The prevalence of gun ownership in a given state is \u201csignificantly associated with state incidence of mass killings with firearms, school shootings, and mass shootings,\u201d according to a study published last July from numbers compiled of mass killings in the US between 2006 to December 2013.\n So the blood starts pumping. Dammit, I\u2019m right. When will the world see it?\n  So a year ago I would have thrown the link to Twitter with a damning summary of the study, and everyone would have known I was a good liberal and retweeted it to prove that they were good liberals and if you listened closely you could hear our collective neurons harden.\n But for the past year I\u2019ve been experimenting with another form of social media called federated wiki. And it\u2019s radically changed how I think about online communication and collaboration.\n I don\u2019t want people to get hung up on the technology angle. I think sometimes people hear \u201cFederated Thingamabob\u201d and just sort of tune out thinking \u201cOh, he\u2019s talking about a feature of Federated Thingamabob.\u201d But I\u2019m not. I\u2019m really not. I\u2019m talking about a different way to think your online activity, no matter what tool you use. And relevant to this conference, I\u2019m talking about a different way of collaborating as well.\n Without going to much into what my federated wiki journal is, just imagine that instead of blogging and tweeting your experience you wiki\u2019d it. And over time the wiki became a representation of things you knew, connected to other people\u2019s wikis about things they knew.\n So when I see an article like this I think \u2014 Wow, I don\u2019t have much in my wiki about gun control, this seems like a good start to build it out and I make a page.\n The first thing I do is \u201cde-stream\u201d the article. The article is about Oregon, but I want to extract a reusable piece out of it in a way that it can be connected to many different things eventually. I want to make a home page for this idea or fact. My hub for thinking about this. So I make a page like so:\n  This is the most basic page I can imagine \u2014 it\u2019s pretty close to a tweet, and it took about as much time. I looked through the revision history and it took me about 45 seconds to make this much of the page, about the time it takes to tweet something. I started at 6:57 a. m. and had this up by 6:58.\n I wander away from it for a bit. I go and get my coffee and make sure the kids are getting ready for school. When I come back I see this page and I think, you know what would make this page better? A link to the actual study. So \u00a0I spend a couple more minutes and track down the actual paper and add it.\n  I add it, because this is the home page for this idea of mine on the web, and the home page for the idea should have a link to the study.\n Here we note we have a link to the study and indicate the link is only available via subscription.\n So far this is not terribly different than tweeting. But now I look for things to link it to. I search my wiki for articles on suicide I could link this to.\n  And I get really excited, because I remember the Suicide Belt article I wrote six months ago, and realize that would be a  perfect\u00a0link. So I link to it and read it again. And what I\u2019m trying to do now is think about what sentence I put in front of the link. I\u2019m thinking about how I define the relation.\n However, reading it I realize it\u2019s not the clean sort of support I was thinking about.\n  Why? Because when I link to it it reminds me that many sociologists believe the suicide belt is a result of the white, middle-aged demographics of the American West. Suicide rates of whites are more than twice those of blacks and the recent rise in suicide rates is a purely a white phenomenon.\n This punctures my simple story where more guns = more suicides because the truth is that western states full of white males are going to tend to have both more gun ownership and more suicide.\n   I say that there\u2019s a regional issue, but a potential lurking variable is male whiteness of population.\n Note how different this sort of meaning making is from what we generally see on today\u2019s web. The excitement here is in building complexity, not reducing it. More importantly note how meaning changes here. We probably know what the tweet would have \u201cmeant\u201d, and what a blog post would have \u201cmeant\u201d, but meaning here is something different. Instead of building an argument about the issue this attempts to build a model of the issue that can generate new understandings.\n I\u2019ve been working with Ward Cunningham, the guy who invented the original wiki back in 1995, on the educational use of this new personal wiki technology for a year and a half now, and I\u2019ve been keeping this personal wiki, which is a collection of both my own stuff and stuff I\u2019ve copied from other websites for over a year now.\n I have close to 1,000 articles in my personal wiki at this point. I have maybe 1,000 more scattered on other sites. They are from myself and others, most simple summaries of ideas I encounter, or data, or examples of ideas. Some are the result of afternoon-long rainy Saturday coffee shop investigations, but most are like what I have just showed you here, simple knowledge that builds complexity through linking.\n And when you get to that point, where you\u2019ve mapped out 1000s of articles of your own knowledge you start to see impacts on your thought that are very hard to describe.\n Over time these things you write up start to form a deep network that helps you think. Here\u2019s a representation of links to and from a page called \u201cOn Its Side\u201d in my own wiki that details how Kandinsky invented his version of abstract art after seeing a representational painting of his on its side and not recognizing it as representational (and finding it vastly improved).\n  You can see this is tied via associative links to and from it to computer generated poetry of the 1980s, a \u201cfound haiku\u201d called Haiku by a Robot (\u201c710,711,712\u201d), an incident on the Twin Peaks set that led to the creation of the Killer Bob character, and Stravinsky\u2019s attraction to the player piano. Other trails branch off into the relation between early abstract art and the Theosophical Movement. Together these things have meaning far more subtle and rich than one could get from a post or paper, a knowledge keeps its fluidity and continues to generate new insights.\n And weirdly, these links were compiled over the space of a year, just by noting things I learned or heard and linking them to things I\u2019d heard before or that others had written. I created a wiki on issues of found art without even knowing it.\n This experience has radically changed me, to the point I find it hard to communicate with a lot of technologists anymore. It\u2019s like trying to explain literature to someone who has never read a book. You\u2019re asked \u201cSo basically a book is just words someone said written down?\u201d And you say no, it\u2019s more than that. But  how\u00a0is it more than that?\n This is my attempt to abstract from this experience something more general about the way in which we collaborate on the web, and the way in which it is currently very badly out of balance..\n I am going to make the argument that the predominant form of the social web \u2014 that amalgam of blogging, Twitter, Facebook, forums, Reddit, Instagram \u2014 is an impoverished model for learning and research and that our survival as a species depends on us getting past the sweet, salty fat of \u201c the web as conversation\u201d \u00a0and on to something more timeless, integrative, iterative, something less personal and less self-assertive, something more solitary yet more connected.\n I don\u2019t expect to convince many of you, but I\u2019ll take what I can get.\n  To talk about this effectively I\u2019d like to introduce two terms representing different approaches to the Web: The Garden and the Stream. Each of these terms has a history that predates me, but we\u2019re going to tweak the definitions for our own purposes.\n  The Garden is an old metaphor associated with hypertext. Those familiar with the history will recognize this. The Garden of Forking Paths from the mid-20th century. The concept of the Wiki Gardener from the 1990s. Mark Bernstein\u2019s 1998 essay Hypertext Gardens.\n The Garden is the web as topology. The web as space. It\u2019s the integrative web, the iterative web, the web as an arrangement and rearrangement of things to one another.\n Things in the Garden don\u2019t collapse to a single set of relations or canonical sequence, and that\u2019s part of what we mean when we say \u201cthe web as topology\u201d or the \u201cweb as space\u201d. Every walk through the garden creates new paths, new meanings, and when we add things to the garden we add them in a way that allows many future, unpredicted relationships\n We can see this here in this collage of photos of a bridge in Portland\u2019s Japanese Garden. I don\u2019t know if you can see this, but this is the same bridge from different views at different times of year.\n The bridge is a bridge is a bridge \u2014 a defined thing with given boundaries and a stated purpose. But the multi-linear nature of the garden means that there is no one right view of the bridge, no one correct approach. The architect creates the bridge, but it is the visitors to the park which create the bridge\u2019s meaning. A good bridge supports many approaches, many views, many seasons, maybe many uses, and the meaning of that bridge will even evolve for the architect over time.\n In the Garden, to ask what happened first is trivial at best. The question \u201cDid the bridge come after these trees\u201d in a well-designed garden is meaningless historical trivia. The bridge doesn\u2019t reply to the trees or the trees to the bridge. They are  related \u00a0to one another in a relatively timeless way.\n This is true of everything in the garden. Each flower, tree, and vine is seen in relation to the whole by the gardener so that the visitors can have unique yet coherent experiences as they find their own paths through the garden. We create the garden as a sort of experience generator, capable of infinite expression and meaning.\n The Garden is what I was doing in the wiki as I added the Gun Control articles, building out a network of often conflicting information into a web that can generate insights, iterating it, allowing that to grow into something bigger than a single event, a single narrative, or single meaning.\n  The Stream is a newer metaphor with old roots. We can think of the\u201devent stream\u201d of programming, the \u201clifestream\u201d proposed by researchers in the 1990s. More recently, the term stream has been applied to the never ending parade of twitter, news alerts, and Facebook feeds.\n In the stream metaphor you don\u2019t experience the Stream by walking around it and looking at it, or following it to its end. You jump in and let it flow past. You feel the force of it hit you as things float by.\n It\u2019s not that you are  passive \u00a0in the Stream. You can be active. But your actions in there \u2014 your blog posts, @ mentions, forum comments \u2014 exist in a context that is collapsed down to a simple timeline of events that together form a  narrative .\n In other words, the Stream replaces topology with serialization. Rather than imagine a timeless world of connection and multiple paths, the Stream presents us with a single, time ordered path with our experience (and only our experience) at the center.\n In many ways the Stream is best seen through the lens of Bakhtin\u2019s idea of the utterance. Bakhtin saw the utterance, the conversational turn of speech, as inextricably tied to context. To understand a statement you must go back to things before, you must find out what it was replying to, you must know the person who wrote it and their speech context. To understand your statement I must reconstruct your entire stream.\n And of course since I can\u2019t do that for random utterances, I mostly just stay in the streams I know. If the Garden is exposition, the stream is conversation and rhetoric, for better and worse.\n You see this most clearly in things like Facebook, Twitter, Instagram. But it\u2019s also the notifications panel of your smartphone, it\u2019s also email, it\u2019s also to a large extent blogging. Frankly, it\u2019s everything now.\n Whereas the garden is integrative, the Stream is self-assertive. It\u2019s persuasion, it\u2019s argument, it\u2019s advocacy. It\u2019s personal and personalized and immediate. It\u2019s invigorating. And as we may see in a minute it\u2019s also profoundly unsuited to some of the uses we put it to.\n The stream is what I do on Twitter and blogging platforms. I take a fact and project it out as another brick in an argument or narrative or persona that I build over time, and recapitulate instead of iterate.\n  I\u2019m going to assume most people in the room here have read Vannevar Bush\u2019s 1945 essay  As We May Think. If you haven\u2019t read it yet, you need to.\n If you haven\u2019t read it I also kind of envy you. Reading that article for the first time was one of the great experiences of my life, and I think even today, after the web has made exposure to hypertext common it is still an amazing experience.\n Now when people talk about Bush\u2019s article, they are usually talking about the portion that starts around section six, which seems so prescient, so predictive of the web to come. He talks there about a machine he envisions called the Memex:\n The owner of the memex, let us say, is interested in the origin and properties of the bow and arrow. Specifically he is studying why the short Turkish bow was apparently superior to the English long bow in the skirmishes of the Crusades. He has dozens of possibly pertinent books and articles in his memex. First he runs through an encyclopedia, finds an interesting but sketchy article, leaves it projected. Next, in a history, he finds another pertinent item, and ties the two together. Thus he goes, building a trail of many items. Occasionally he inserts a comment of his own, either linking it into the main trail or joining it by a side trail to a particular item. When it becomes evident that the elastic properties of available materials had a great deal to do with the bow, he branches off on a side trail which takes him through textbooks on elasticity and tables of physical constants. He inserts a page of longhand analysis of his own. Thus he builds a trail of his interest through the maze of materials available to him.\n Just to give you a sense of what that looks like in practice, here\u2019s a short reconstruction from a 50th anniversary Macromedia piece:\n  So most people say this is the original vision of the web. And certainly it was the inspiration of those pioneers of hypertext.\n But in reality it doesn\u2019t predict the web at all . Not at all. The web works very little like this. It\u2019s weird, because in our minds the web still works like this, but it\u2019s a fiction.\n  Your machine is a library not a publication device. \u00a0You have copies of documents is there that you control directly, that you can annotate, change, add links to, summarize, and this is because the memex is a tool to think with, not a tool to publish with.\n And this is crucial to our talk here, because these abilities \u2013 to link, annotate, change, summarize, copy, and share \u2014 these are the verbs of gardening.\n Each memex library contains your original materials and the materials of others.  There\u2019s no read-only version of the memex, because that would be silly. Anything you read you can link and annotate. Not reply to, mind you. Change. This will be important later.\n Links are associative.  This is a huge deal. Links are there not only as a quick way to get to source material. They aren\u2019t a way to say, hey here\u2019s the interesting thing of the day. They remind you of the questions you need to ask, of the connections that aren\u2019t immediately evident.\n Links are made by readers as well as writers. \u00a0A stunning thing that we forget, but the link here is not part of the author\u2019s intent, but of the reader\u2019s analysis. The majority of links in the memex are made by readers, not writers. On the world wide web of course, only an author gets to determine links. And links inside the document say that there can only be one set of associations for the document, at least going forward.\n  Wholly new forms of encyclopedias will appear, ready made with a mesh of associative trails running through them, ready to be dropped into the memex and there amplified. The lawyer has at his touch the associated opinions and decisions of his whole experience, and of the experience of friends and authorities\u2026\n The historian, with a vast chronological account of a people, parallels it with a skip trail which stops only on the salient items, and can follow at any time contemporary trails which lead him all over civilization at a particular epoch. There is a new profession of trail blazers, those who find delight in the task of establishing useful trails through the enormous mass of the common record.\n I\u2019m blown away by the vision of this every time I read this. But not because this has happened, but because it *hasn\u2019t* happened. I\u2019m blown away because here, in 2015, there are elements to this vision that we still haven\u2019t explored.\n More than that, there\u2019s a substance to the vision that you can\u2019t help but long for reading it. Note that connections here aren\u2019t banter, but the construction of a mental model of a subject area. And that model can be taken by someone else and extended, built on. Humanity can advance, not through argument by through a true collaboration.\n   So when we look at the web today, we see very little of this original vision. What happened?\n Originally I had a long narrative in this section, and the story moved between the WELL and Howard Rheingold and Dave Winer and mailing lists, and Jorn Barger\u2019s epic goodbye to the Kate Bush news group.\n Maybe we can have an outtakes section that captures that? Maybe beers tonight is the outtakes section. Maybe whether you like it or not.\n But I\u2019ll boil it down to this. It came down to who had the power to change things. It came down to the right to make copies.\n On the web, if you wanted to read something you had to read it on someone else\u2019s server where you couldn\u2019t rewrite it, and you couldn\u2019t annotate it, you couldn\u2019t copy it, and you couldn\u2019t add links to it, you couldn\u2019t curate it.\n These are the verbs of gardening, and they didn\u2019t exist on the early web.\n But what a server-centric web is really good at is distributed conversation. A bunch of people frustrated with Usenet and mailing lists and BBS culture realized this, and they created something that was half-hypertext, half forum. And it was called blogging and it was beautiful, and it turned out to be the prototypical Stream. And when they added syndication to that model it became  amazing.\n So in 2006 or so Twitter, Facebook and other sites move to a model directly inspired by this personal page + feed reader combination. You have a page which represents you, in a reverse chronological stream \u2014 your Facebook page or Twitter home page.The pages of people you are friends with get aggregated into a serialized time ordered feed. Your Stream becomes your context and your interface.\n And we see that develop into the web as we know it today. A web of \u201chey this is cool\u201d one-hop links. A web where where links are used to create a conversational trail (a sort of \u201cread this if you want to understand what I am riffing on\u201d link) instead of associations of ideas.\n The \u201cconversational web\u201d. A web obsessed with arguing points. A web seen as a tool for self-expression rather than a tool for thought. A web where you weld information and data into your arguments so that it can never be repurposed against you. The web not as a reconfigurable model of understan\n......", "posttime": "2020-05-29 15:54:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6eaa\u6d41,stream,\u94fe\u63a5", "title": "\u201c\u82b1\u56ed\u4e0e\u6eaa\u6d41\uff1a\u6280\u672f\u7530\u56ed\u201d", "title_en": "The Garden and the Stream: A Technopastoral", "transed": 1, "url": "https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/", "via": "", "real_tags": ["\u6eaa\u6d41", "stream", "\u94fe\u63a5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004210, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a(FSF)\u73b0\u5728\u5411\u6240\u6709FSF\u534f\u4f1a\u4f1a\u5458\u514d\u8d39\u63d0\u4f9b\u514d\u8d39\u89c6\u9891\u4f1a\u8bae\u4f5c\u4e3a\u989d\u5916\u7684\u4f1a\u5458\u798f\u5229\u3002\u73b0\u5728\u6210\u4e3a\u4f1a\u5458\u53ef\u4ee5\u5e2e\u52a9\u4f60\u62b5\u5fa1\u4e0d\u65ad\u589e\u52a0\u7684\u793e\u4f1a\u538b\u529b\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u4e8b\u4ef6\u671f\u95f4\u548c\u4e4b\u540e\uff0c\u4f7f\u7528\u975e\u81ea\u7531\u8f6f\u4ef6\u4e0e\u540c\u4e8b\u3001\u670b\u53cb\u548c\u4eb2\u4eba\u4ea4\u6d41\u3002\n\u81ea\u4ece\u793e\u4ea4\u8ddd\u79bb\u6307\u5357\u53d1\u5e03\u4ee5\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u901a\u8fc7\u5e38\u89c1\u7684\u8fdc\u7a0b\u901a\u4fe1\u5de5\u5177\u53d1\u51fa\u4fb5\u72af\u7528\u6237\u81ea\u7531\u7684\u8b66\u62a5\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u6211\u4eec\u6700\u8fd1\u7684\u51fa\u7248\u7269\u8b66\u544a\u7528\u6237\u5e7f\u6cdb\u4f7f\u7528\u7684\u7528\u4e8e\u8fdc\u7a0b\u901a\u4fe1\u548c\u6559\u80b2\u7684\u975e\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982Zoom\u3002\n\u6b63\u5982\u5728LibrePlanet 2020\u4e0a\u627f\u8bfa\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u7acb\u4e86\u4e00\u4e2a\u5de5\u4f5c\u7ec4\u6765\u8bb0\u5f55\u548c\u89e3\u51b3\u81ea\u7531\u8f6f\u4ef6\u4ea4\u6d41\u5e73\u53f0\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\uff0c\u8fd9\u4e2a\u9879\u76ee\u5c31\u662f\u8fd9\u4e00\u52aa\u529b\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u7684\u514d\u8d39\u901a\u4fe1\u5de5\u5177\u7bb1\u4e2d\u7684\u53e6\u4e00\u4e2a\u5021\u8bae\u662f\u521b\u5efa\u4e00\u4e2a\u534f\u4f5c\u8d44\u6e90\u9875\u9762\uff0c\u5c06\u7528\u6237\u5f15\u5bfc\u5230\u5c0a\u91cd\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662fZoom\u8fd9\u6837\u7684\u4f1a\u8bae\u5de5\u5177\uff0c\u540e\u8005\u8981\u6c42\u7528\u6237\u653e\u5f03\u4e0e\u8f6f\u4ef6\u76f8\u5173\u7684\u81ea\u7531\uff0c\u6700\u8fd1\u7531\u4e8e\u4ece\u5b89\u5168\u95ee\u9898\u5230\u4fb5\u72af\u9690\u79c1\u7684\u4e00\u7cfb\u5217\u95ee\u9898\u800c\u6210\u4e3a\u6279\u8bc4\u7684\u7126\u70b9\u3002\n\u6211\u4eec\u7528\u6765\u63d0\u4f9b\u9053\u5fb7\u89c6\u9891\u4f1a\u8bae\u63a5\u5165\u7684\u5e73\u53f0\u662fJitsi Meet\u3002\u5728\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\u8feb\u4f7f\u6211\u4eec\u53d6\u6d88\u4e86\u9762\u5bf9\u9762\u7684\u6d3b\u52a8\u540e\uff0c\u6211\u4eec\u4ee5\u524d\u66fe\u7528\u5b83\u6765\u6d41\u5a92\u4f53\u548c\u5f55\u5236\u6211\u4eec\u4e00\u5e74\u4e00\u5ea6\u7684LibrePlanet\u5927\u4f1a\uff0c\u4f9b\u5728\u7ebf\u89c2\u4f17\u89c2\u770b\u3002\u9009\u62e9Jitsi Meet\u53ea\u662f\u89e3\u51b3Zoom\u548cFacebook\u7b49\u670d\u52a1\u7ed9\u7528\u6237\u81ea\u7531\u5e26\u6765\u7684\u95ee\u9898\u7684\u7b2c\u4e00\u6b65\u3002\u5373\u4f7f\u662f\u901a\u8fc7\u8fd0\u884cJitsi\u7684\u670d\u52a1\u5668\u53d1\u8d77\u547c\u53eb\u7684\u7528\u6237\uff0c\u5982\u679c\u8be5\u670d\u52a1\u5668\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u6216\u4e0e\u7b2c\u4e09\u65b9\u5171\u4eab\u4fe1\u606f\uff0c\u4e5f\u53ef\u80fd\u4ecd\u7136\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3002FSF\u5bf9\u6211\u4eec\u6b63\u5728\u8fd0\u884c\u7684\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4ee5\u589e\u5f3a\u9690\u79c1\u548c\u8f6f\u4ef6\u81ea\u7531\u5ea6\uff0c\u5e76\u53d1\u5e03\u4e86\u6e90\u4ee3\u7801\uff0c\u4ee5\u6fc0\u52b1\u5176\u4ed6\u4eba\u6258\u7ba1\u81ea\u5df1\u7684\u5b9e\u4f8b\u3002FSF\u5b9e\u4f8b\u4e0d\u4f7f\u7528\u4efb\u4f55\u7b2c\u4e09\u65b9\u670d\u52a1\u5668\u8fdb\u884c\u7f51\u7edc\u521d\u59cb\u5316\uff0c\u4e5f\u4e0d\u63a8\u8350\u6216\u94fe\u63a5\u5230\u4efb\u4f55\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u7684\u670d\u52a1\u3002\n\u4e3a\u4e86\u80fd\u591f\u63d0\u4f9b\u53ef\u6301\u7eed\u548c\u53ef\u9760\u7684\u670d\u52a1\uff0c\u6211\u4eec\u63d0\u4f9b\u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u5bf9\u8bdd\u7684\u529f\u80fd\uff0c\u4ec5\u4f9b\u5173\u8054\u6210\u5458\u4f7f\u7528\uff0c\u5e76\u4e14\u4ec5\u4f9b\u4e2a\u4eba\u3001\u975e\u5546\u4e1a\u4f7f\u7528\u3002\u6210\u5458\u53ef\u4ee5\u4f7f\u7528\u5176\u6210\u5458\u51ed\u636e\u521b\u5efa\u9891\u9053\uff0c\u4f46\u968f\u540e\u4efb\u4f55\u4eba\u6216\u7ec4\u90fd\u53ef\u4ee5\u53c2\u4e0e\u5bf9\u8bdd\u3002\u53ef\u4ee5\u9080\u8bf7\u975e\u4f1a\u5458\uff0c\u4f46\u4e0d\u80fd\u542f\u52a8\u9891\u9053\u3002\nJitsi Meet\u4e3a\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u5bf9\u8bdd\u63d0\u4f9b\u7aef\u5230\u7aef\u52a0\u5bc6\u3002\u5bf9\u4e8e\u4e09\u4e2a\u6216\u66f4\u591a\u4eba\u4e4b\u95f4\u7684\u5bf9\u8bdd\uff0c\u59cb\u7ec8\u4f1a\u5728\u7f51\u7edc\u7ea7\u522b\u8fdb\u884c\u52a0\u5bc6\uff0c\u4f46\u60a8\u4ecd\u7136\u9700\u8981\u5bf9\u5904\u7406\u89c6\u9891\u6d41\u7684\u670d\u52a1\u5668\u8fd0\u8425\u5546\u7ed9\u4e88\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4fe1\u4efb\u3002\u56e0\u4e3aFSF\u63a7\u5236\u7740\u7269\u7406\u673a\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u4f1a\u5458\u63d0\u4f9b\u60a8\u671f\u671b\u4ece\u6211\u4eec\u8fd9\u91cc\u5f97\u5230\u7684\u9690\u79c1\u548c\u81ea\u7531\u7684\u5c0a\u91cd\u3002FSF\u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u6765\u81ea\u547c\u53eb\u7684\u4efb\u4f55\u8bed\u97f3\u3001\u89c6\u9891\u6216\u6d88\u606f\uff0c\u5e76\u4e14\u65e5\u5fd7\u8bb0\u5f55\u975e\u5e38\u5c11--\u4ec5\u7528\u4e8e\u6545\u969c\u6392\u9664\u548c\u9632\u6b62\u6ee5\u7528\u3002Jitsi\u6b63\u5728\u4e3a\u8d85\u8fc7\u4e24\u4e2a\u4eba\u7684\u901a\u8bdd\u5f00\u53d1\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u4e00\u65e6\u53ef\u4ee5\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u5728\u6211\u4eec\u7684\u5b9e\u4f8b\u4e0a\u5b9e\u73b0\u8fd9\u4e9b\u66f4\u6539\u3002\n\u4f5c\u4e3a\u4e00\u5bb6\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0cFSF\u7684\u8d44\u6e90\u6709\u9650\uff0c\u8fd9\u6709\u65f6\u53ef\u80fd\u4f1a\u5f71\u54cd\u670d\u52a1\u5668\u7684\u5bb9\u91cf\u3002\u6211\u4eec\u5c06\u5c1d\u8bd5\u4e0d\u540c\u7684\u53c2\u6570\u548c\u9650\u5236\uff0c\u5e76\u6839\u636e\u9700\u8981\u6539\u8fdb\u5b9e\u4f8b\uff0c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0repo\u3002\n\u73b0\u5728\uff0c\u8fdc\u7a0b\u548c\u6570\u5b57\u8fde\u63a5\u5728\u6211\u4eec\u7684\u65e5\u5e38\u751f\u6d3b\u4e2d\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u53d1\u6325\u7740\u66f4\u5927\u7684\u4f5c\u7528\uff0c\u4e0d\u65ad\u5730\u4ea4\u6d41\u548c\u63a8\u52a8\u81ea\u7531\u8f6f\u4ef6\u662f\u5f88\u91cd\u8981\u7684\u3002\u6211\u4eec\u7684\u6210\u529f\u53d6\u51b3\u4e8e\u652f\u6301\u6211\u4eec\u7684\u4eba\u4eec\uff0c\u4f5c\u4e3a\u56de\u62a5\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u6211\u4eec\u7684\u4e00\u4efd\u529b\u91cf\uff0c\u786e\u4fdd\u6ca1\u6709\u4eba\u88ab\u8feb\u653e\u5f03\u4ed6\u4eec\u7684\u81ea\u7531\uff0c\u4ee5\u4fbf\u7528\u6280\u672f\u6765\u8fc7\u4ed6\u4eec(\u73b0\u5728\u662f\u504f\u8fdc\u7684)\u65e5\u5e38\u751f\u6d3b\u3002\u8bf7\u8003\u8651FSF\u534f\u4f1a\u4f1a\u5458\u8d44\u683c\uff0c\u4ee5\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u5e76\u7ee7\u7eed\u60a8\u5bf9\u81ea\u7531\u8f6f\u4ef6\u7684\u5021\u5bfc\u3002\n\u63d2\u56fe\u7248\u6743\u6240\u6709\u00a92020\uff0c\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff0cInc.\uff0cZo\u00ebKoyman\uff0c\u6839\u636e\u77e5\u8bc6\u5171\u4eab\u7f72\u540d4.0\u56fd\u9645\u8bb8\u53ef\u6388\u6743\u3002", "note_en": "The Free Software Foundation (FSF) is now offering all FSF associatemembers free &#34;as in freedom&#34; videoconferencing as an additional member benefit.  Becoming a member now helps you push back against increased societal pressure to use nonfree software to communicate with coworkers, friends, and loved ones during the COVID-19 pandemic, and after.\n  We have been raising the alarm about encroachments upon user freedom bypopular remote communication tools since social distancingguidelines were issued. You might have seen our recentpublications warning users about widely used nonfree applicationsfor  remote communication and  education, like Zoom.\n As promised at LibrePlanet 2020, we have formed a working groupto document and address major issues facing free softwarecommunication platforms, and this project is part of thateffort. Another initiative in our free communication toolbox is a collaborative resource page created to steer users toapplications that respect them, and away from conferencing tools likeZoom, which requires users to give up their software-relatedfreedoms, and which has been a recent focal point of  criticismdue to problems ranging from  security issues to privacyviolations.\n The platform we use to offer ethical videoconferencing access is Jitsi Meet. We used it previously to  stream and record our annual  LibrePlanet conference for anonline audience after the COVID-19 pandemic forced us to cancelthe in-person event. Choosing Jitsi Meet is only the first stepto addressing the problems posed to user freedom by services like Zoomand Facebook. Even users that start a call via a server runningJitsi could still be vulnerable if that server depends on orshares information with third parties. The FSF made changes tothe code we are running, in order to enhance privacy and software freedom,and  published the source code, to motivate others to hosttheir own instances. The FSF instance does not use any thirdparty servers for network initialization, and does not recommendor link to any potentially problematic services.\n In order to be able to provide a sustainable and reliableservice, we are offering the ability to create conversations onthe server exclusively to associate members, and it is only intended forpersonal, noncommercial use. Members can create a channel usingtheir member credentials, but then any person or group canparticipate in the conversation. Nonmembers can be invited, butcannot start a channel.\n  Jitsi Meet offers end-to-end encryption for conversations betweentwo people. For conversations between three or more people, therewill always be encryption at the network level, but you stillhave to place some level of trust in the server operators thatprocess your video stream. Because the FSF controls the physicalmachine, we can offer members the respect of privacy and freedomyou have come to expect from us. The FSF servers do not store anyvoice, video, or messages from calls, and logging is minimal --for the purpose of troubleshooting and abuse preventiononly. Jitsi is working on  developing end-to-end encryptionfor calls with more than two people, and we will implement thesechanges on our instance as soon as this becomes available.\n As a nonprofit, the FSF has limited resources, which may at timesaffect the server capacity. We will experiment with differentparameters and limitations and improve the instance asneeded, and update the  repo accordingly.\n  Now that remote and digital connections are playing a bigger rolein our daily lives than ever before, it is important tocommunicate about and push for free software continuously. Oursuccess hinges on the people that support us, and in return, wewant to do our part to make sure no one is forced to give uptheir freedom in order to live their (now remote) daily liveswith technology. Please consider an  FSF associatemembership to help support our work, and continue youradvocacy for free software.\n Illustration Copyright \u00a9 2020, Free Software Foundation, Inc., by Zo\u00eb Kooyman, Licensed under  Creative Commons Attribution 4.0 International license.", "posttime": "2020-05-29 15:54:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f1a\u5458,freedom,\u63d0\u4f9b", "title": "FSF\u4e3a\u6240\u6709\u51c6\u4f1a\u5458\u63d0\u4f9b\u5c0a\u91cd\u81ea\u7531\u7684\u89c6\u9891\u4f1a\u8bae", "title_en": "FSF gives freedom-respecting videoconferencing to all associate members", "transed": 1, "url": "https://www.fsf.org/blogs/community/fsf-gives-freedom-respecting-videoconferencing-to-all-associate-members", "via": "", "real_tags": ["\u4f1a\u5458", "freedom", "\u63d0\u4f9b"]}, {"category": "", "categoryclass": "", "imagename": "03cea8448283caa127bcf35d7ab368c0.jpg", "infoid": 1004209, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Hattis Law\u6b63\u5728\u8c03\u67e5\u6709\u5173\u897f\u90e8\u6570\u636e\u79d8\u5bc6\u5c06\u5176\u5305\u62ecWD Red\u786c\u76d8\u5728\u5185\u7684\u8bb8\u591a\u786c\u76d8\u9a71\u52a8\u5668\u66f4\u6362\u4e3a\u52a3\u8d28\u74e6\u7247\u78c1\u8bb0\u5f55(SMR)\u6280\u672f\u7684\u6295\u8bc9\uff0c\u6b3a\u9a97\u548c\u4f24\u5bb3\u4e86\u6d88\u8d39\u8005\u3002\n4\u6708\u521d\u6709\u6d88\u606f\u79f0\uff0c\u897f\u90e8\u6570\u636e\u5728\u6ca1\u6709\u5411\u5ba2\u6237\u62ab\u9732\u7684\u60c5\u51b5\u4e0b\uff0c\u79d8\u5bc6\u5c06\u5176Red NAS\u786c\u76d8\u9a71\u52a8\u5668\u4ece\u6807\u51c6\u7684CMR\u6280\u672f\u964d\u7ea7\u4e3a\u901f\u5ea6\u6162\u5f97\u591a\u7684SMR\u6280\u672f\u3002\u5ba2\u6237\u62b1\u6028\u6b64\u4ea4\u6362\u673a\u5bfc\u81f4\u6027\u80fd\u5927\u5e45\u964d\u4f4e\u548c\u5b58\u50a8\u6545\u969c\uff0c\u7279\u522b\u662f\u5728RAID\u914d\u7f6e(\u5982\u7f51\u7edc\u8fde\u63a5\u5b58\u50a8(NAS)\u8bbe\u5907\u4e2d\u4f7f\u7528\u65f6)\u3002\u8fd9\u79cd\u79d8\u5bc6\u964d\u7ea7\uff0c\u663e\u7136\u662f\u4e3a\u4e86\u524a\u51cf\u6210\u672c\uff0c\u7279\u522b\u6709\u5bb3\u548c\u6b3a\u9a97\u6027\uff0c\u56e0\u4e3a\u897f\u90e8\u6570\u636e\u7684\u5e7f\u544a\u548c\u627f\u8bfa\uff0cWD Red\u786c\u76d8\u662f\u4e3aNAS\u548cRAID\u4f7f\u7528\u7684\u3002\u4f46\u662f\uff0c\u4f17\u6240\u5468\u77e5\u548c\u63a5\u53d7\u7684\u662f\uff0cSMR\u6280\u672f\u5b8c\u5168\u4e0d\u9002\u5408RAID\u548cNAS\u8bbe\u5907\u7684\u4f7f\u7528\uff0c\u5e76\u4e14\u53ef\u80fd\u5bfc\u81f4\u8f83\u5dee\u7684\u6301\u7eed\u5199\u5165\u6027\u80fd\u548cRAID\u91cd\u5efa\u65f6\u7684\u5931\u8d25\u3002\u6b64\u5916\uff0c\u897f\u90e8\u6570\u636e\u8fd8\u5c06\u4e00\u4e9b\u84dd\u76d8\u548c\u9ed1\u76d8\u6362\u6210\u4e86\u901f\u5ea6\u8f83\u6162\u7684SMR\u6280\u672f\u3002\n\u897f\u90e8\u6570\u636e\u6700\u521d\u5426\u8ba4\u4e86\u8fd9\u4e00\u79d8\u5bc6\u8f6c\u6362\uff0c\u4f46\u5728\u516c\u4f17\u538b\u529b\u4e0b\uff0c\u4ed6\u4eec\u522b\u65e0\u9009\u62e9\uff0c\u6700\u7ec8\u627f\u8ba4\u4e86\u81ea\u5df1\u7684\u6240\u4f5c\u6240\u4e3a\u3002\n\u5982\u679c\u60a8\u8d2d\u4e70\u4e86\u8fd9\u4e9b\u897f\u90e8\u6570\u636e\u786c\u76d8\u4e2d\u7684\u4e00\u4e2a\uff0c\u5e76\u8ba4\u4e3a\u60a8\u662f\u6b64\u8bc8\u9a97\u7684\u53d7\u5bb3\u8005\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u4e86\u89e3\u60a8\u7684\u7ecf\u5386\u3002\n\u4f60\u53ef\u80fd\u6709\u7d22\u8d54\uff0c\u5e76\u6709\u8d44\u683c\u6210\u4e3a\u96c6\u4f53\u8bc9\u8bbc\u7684\u539f\u544a\u3002", "note_en": "Hattis Law is investigating complaints that Western Digital secretly switched many of its hard drives, including its WD Red hard drives, to inferior shingled magnetic recording (SMR) technology, deceiving and harming consumers.\n News emerged in early April that Western Digital secretly downgraded its Red NAS hard disk drives from the standard CMR technology to the much slower SMR technology without disclosing this to its customers. Customers are complaining that this switch has resulted in drastically slower performance and storage failures, especially when used in RAID configurations such as in network attached storage (\u201cNAS\u201d) devices. This secret downgrade, apparently done to cut costs, is particularly harmful and deceptive because Western Digital advertises and promises that WD Red hard drives are meant for NAS and RAID use. But it is widely known and accepted that the SMR technology is wholly inappropriate for RAID and NAS device usage and can cause poor sustained write performance and failures on RAID rebuilds. In addition, Western Digital also switched some Blue and Black drives to the slower SMR technology.\n Western Digital initially denied the secret switch, but after public pressure had no choice but to finally  admit what they had done.\n      If you bought one of these Western Digital hard drives and believe you have been a victim of this fraud, please contact us about your experience.\n You may have a claim and qualify to be a plaintiff in a class action lawsuit.", "posttime": "2020-05-29 15:38:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u76d8,\u53d1\u8d27,digital,\u897f\u90e8\u6570\u636e", "title": "\u897f\u90e8\u6570\u636e\u5c31\u53d1\u8d27\u901f\u5ea6\u8f83\u6162\u7684SMR\u786c\u76d8(\u5305\u62ecWD Red NAS)\u63d0\u8d77\u8bc9\u8bbc", "title_en": "Western Digital Lawsuit for Shipping Slower SMR Hard Drives Including WD Red NAS", "transed": 1, "url": "https://www.hattislaw.com/cases/investigations/western-digital-lawsuit-for-shipping-slower-smr-hard-drives-including-wd-red-nas/?shh", "via": "", "real_tags": ["\u786c\u76d8", "\u53d1\u8d27", "digital", "\u897f\u90e8\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "e3b0738883303ac7da58ba0208b4d295.png", "infoid": 1004208, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u201cLinux Sucks\u201d2020\u5e74\u7684\u4e00\u671f--\u6700\u521d\u53d1\u5e03\u4e8e2020\u5e745\u670828\u65e5\u3002\u5982\u4f55\u652f\u6301\u3001\u9605\u8bfb\u3001\u6536\u542c\u548c\u89c2\u770b\u4f26\u675c\u514b\u671f\u520a\uff1ahttp://www.lunduke.com==\u7531==.", "note_en": "This is the 2020 installment of \"Linux Sucks\" -- originally released on May 28th, 2020.How to support, read, listen to, and watch The Lunduke Journal:http://www.lunduke.com== Made possible by ==...", "posttime": "2020-05-29 15:37:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,2020,http", "title": "Linux Sucks 2020", "title_en": "Linux Sucks 2020", "transed": 1, "url": "https://lbry.tv/@Lunduke:e/LinuxSucks2020:b", "via": "", "real_tags": ["linux", "2020", "http"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004207, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136\u4f7f\u7528SIMD\u6307\u4ee4\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u503c\u662f\u53ef\u884c\u7684\uff0c\u4f46\u6b64\u5e94\u7528\u7a0b\u5e8f\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u5bf9\u4e8e\u5178\u578b\u60c5\u51b5\uff0c\u5f53\u89e3\u6790\u5355\u4e2a\u503c\u65f6\uff0c\u6807\u91cf\u8fc7\u7a0b-\u5982\u6807\u51c6\u7684atoi\u6216strtol-\u6bd4\u4efb\u4f55\u82b1\u54e8\u7684SSE\u4ee3\u7801\u90fd\u8981\u5feb\u3002\n\u7136\u800c\uff0cSIMD\u7a0b\u5e8f\u53ef\u4ee5\u975e\u5e38\u5feb\u901f\u5730\u5e76\u884c\u8f6c\u6362\u51e0\u4e2a\u6570\u5b57\u3002\u53ea\u6709\u4e00\u4e2a&#34\uff1b\u4f46&#34\uff1b\uff1a\u8f93\u5165\u6570\u636e\u5fc5\u987b\u662f\u89c4\u5219\u548c\u6709\u6548\u7684\uff0c\u5373\u8f93\u5165\u5b57\u7b26\u4e32\u5fc5\u987b\u53ea\u5305\u542bASCII\u6570\u5b57\u3002\u6700\u8fd1\uff0c\u6211\u66f4\u65b0\u4e86\u4e00\u7bc7\u5173\u4e8e\u4f7f\u7528\u57fa\u51c6\u6d4b\u8bd5\u7ed3\u679c\u8fdb\u884cSSE\u89e3\u6790\u7684\u6587\u7ae0\u3002\u8fd9\u4e9b\u901f\u5ea6\u786e\u5b9e\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f8b\u5982\uff0cSSSE3\u89e3\u6790\u5668\u6bd4\u5355\u7eaf\u7684\u6807\u91cf\u4ee3\u7801\u5feb7\u52309\u500d\u3002\n\u663e\u800c\u6613\u89c1\u7684\u95ee\u9898\u662f\uff0c\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u5f3a\u5927\u7684SIMD\u7a0b\u5e8f\u6765\u8f6c\u6362\u771f\u5b9e\u6570\u636e\uff1f\u6211\u6240\u8bf4\u7684\u5b9e\u6570\u662f\u6307\u53ef\u80fd\u635f\u574f\u7684\u8f93\u5165\uff0c\u8fd9\u4e9b\u8f93\u5165\u5305\u542b\u4e00\u7cfb\u5217\u4e0d\u540c\u957f\u5ea6\u7684\u6570\u5b57\uff0c\u7531\u9884\u5b9a\u4e49\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u5206\u9694\u3002\n\u4f7f\u7528SSE\u6307\u4ee4\u9ad8\u6548\u5206\u6790\u548c\u9a8c\u8bc1\u6b64\u7c7b\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u3002\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u53d8\u4f53\uff0c\u5b83\u53ea\u5904\u7406\u65e0\u7b26\u53f7\u6570\u5b57\uff0c\u8fd8\u6709\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u6709\u7b26\u53f7\u6570\u5b57\u53d8\u4f53\u3002\n\u672c\u6587\u4ece\u65e0\u7b7e\u540d\u8f6c\u6362\u5f00\u59cb\uff0c\u56e0\u4e3a\u5b83\u6bd4\u7b7e\u540d\u8f6c\u6362\u66f4\u5bb9\u6613\u3002\u7b7e\u540d\u7684\u8f6c\u6362\u5206\u4eab\u4e86\u6838\u5fc3\u601d\u60f3\uff0c\u53ea\u662f\u589e\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6b65\u9aa4\u3002\n\u6b63\u6587\u4f34\u968f\u7740BSD\u8bb8\u53ef\u7684\u8f6f\u4ef6\uff0c\u5176\u4e2d\u5305\u62ec\u4e0e\u9a8c\u8bc1\u548c\u57fa\u51c6\u7a0b\u5e8f\u4e00\u8d77\u7684\u5168\u529f\u80fd\u5b9e\u73b0\u3002\n\u5b83\u662f\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff1b\u4f46\u5b83\u5e94\u8be5\u5f88\u5927\uff0c\u6bd4\u5982\u51e0\u5343\u5b57\u8282\u6216\u5146\u5b57\u8282\u3002\n\u8f93\u5165\u5305\u542b\u6574\u6570\u3002\u6570\u5b57\u662f\u53ef\u9009\u7684\u7b26\u53f7\u5b57\u7b26&#39\uff1b+&#39\uff1b\u6216&#39\uff1b-&#39\uff1b\u540e\u8ddf\u975e\u7a7a\u7684\u6570\u5b57\u5e8f\u5217&#39\uff1b0&#39\uff1b..&#39\uff1b9&#39\uff1b\u3002\n\u6570\u5b57\u7531\u7528\u6237\u5b9a\u4e49\u7684\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u5206\u9694\uff1b\u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u662f\u9017\u53f7\u548c\u7a7a\u767d\u5b57\u7b26(\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49)\u3002\n\u89e3\u6790\u5668\u5fc5\u987b\u80fd\u591f\u68c0\u67e5\u8f93\u5165\u7684\u6709\u6548\u6027\uff0c\u5373\u7f3a\u5c11\u65e0\u6548\u5b57\u7b26\u548c\u6b63\u786e\u7684\u8f93\u5165\u683c\u5f0f(\u6570\u5b57\u81f3\u5c11\u7528\u4e00\u4e2a\u5b57\u7b26\u5206\u9694\uff0c\u7b26\u53f7\u5b57\u7b26\u53ea\u51fa\u73b0\u5728\u6570\u5b57\u7684\u5f00\u5934)\u3002\n\u5bf9\u4e8e\u8f93\u5165\u5b57\u7b26\u4e32&#34\uff1b123\uff1b-52\uff0c+432424-999\uff1b1234568\uff0c+879&#34\uff1b\u4ee5\u53ca\u4e09\u4e2a\u5206\u9694\u7b26&#39\uff1b\uff0c&#39\uff1b&#39\uff1b\u548c&#39\uff1b&#39\uff1b\uff0c\u9884\u8ba1\u7b97\u6cd5\u5c06\u63d0\u53d6\u516d\u4e2a\u6574\u6570\uff1a[123\uff0c-52,432424\uff0c-999,1234568,879]\u3002\u8f6c\u6362\u6570\u5b57\u7684\u987a\u5e8f\u5fc5\u987b\u4e0e\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u7684\u987a\u5e8f\u5b8c\u5168\u76f8\u540c\u3002\n\u8fd8\u6d4b\u8bd5\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u89e3\u6790\u5668\u3002\u6b64\u89e3\u6790\u5668\u4ec5\u5c06\u6240\u6709\u975e\u6570\u5b57\u548c\u975e\u7b26\u53f7\u5b57\u7b26\u89c6\u4e3a\u5206\u9694\u7b26\u3002\n\u8f6c\u6362\u7b97\u6cd5\u5728\u5faa\u73af\u4e2d\u5de5\u4f5c\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6070\u597d\u4ece\u5185\u5b58\u52a0\u8f7d\u5e76\u5904\u7406\u4e00\u4e2a\u8f93\u5165\u5411\u91cf\u3002\n\u6839\u636e\u6570\u5b57\u7684\u5e03\u5c40\uff0c\u8f93\u5165\u5c06\u6807\u51c6\u5316\u4e3aSIMD\u7a0b\u5e8f\u6240\u9700\u7684\u683c\u5f0f\u3002\u5728\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u9009\u62e9\uff1a\u4ece\u8f93\u5165\u4e2d\u8f6c\u6362\u591a\u5c11\u4e2a\u6570\u5b57\uff0c\u4ee5\u53ca\u54ea\u4e2aSIMD\u7a0b\u5e8f\u9002\u5408\u8f6c\u6362\u3002\n\u7531\u4e8eSIMD\u7a0b\u5e8f\u5728\u77e2\u91cf\u4e2d\u5f3a\u52a0\u4e86\u7279\u5b9a\u7684\u6570\u5b57\u5e03\u5c40\uff0c\u56e0\u6b64\u4efb\u610f\u8f93\u5165\u5fc5\u987b\u6b63\u786e\u5bf9\u9f50\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8bc6\u522b\u8f93\u5165\u4e2d\u7684\u6570\u5b57\u8de8\u5ea6\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8de8\u5ea6\u79fb\u52a8\u5230\u5411\u91cf\u7684\u67d0\u4e9b\u5b50\u6570\u7ec4\u4e0a\u3002\u8ba9\u6211\u4eec\u5047\u8bbe\u6b64\u65f6\u8f93\u5165\u5305\u542b\u6570\u5b57\u6216\u5206\u9694\u7b26(\u7528_\u8868\u793a)\u3002\n\u4f8b\u5982\uff0c\u4e00\u4e2a\u6570\u5b57\u4e3a1_2_3_4_5_6_\u7684\u5411\u91cf\u5fc5\u987b\u8f6c\u6362\u4e3a123456_\u3002\u7136\u540e\uff0cSSE\u8fc7\u7a0b\u5c06\u6240\u6709\u6570\u5b57\u5e76\u884c\u8f6c\u6362\u4e3a\u6570\u7ec4[1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6]\u3002\u540c\u6837\uff0c\u5e26\u6709\u4e24\u4f4d\u6570\u7684\u77e2\u91cf_12__34_\u5fc5\u987b\u8f6c\u6362\u4e3a12345678_\uff0c\u7136\u540e\u7ed3\u679c\u5c06\u662f[12\uff0c34\uff0c56\uff0c78]\u3002\n\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff0c\u5f53\u4e00\u4e2a\u5b57\u7b26\u4e32\u542b\u6709\u4e0d\u540c\u4f4d\u6570\u7684\u6570\u5b57\u65f6\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8f6c\u6362INPUT_1_2_34_567_89__\uff1a\n\u5982\u679c\u6211\u4eec\u9009\u62e9\u8f6c\u6362\u4e00\u4f4d\u6570\uff0c\u5219\u53ea\u80fd\u8f6c\u6362\u524d\u4e24\u4e2a\u8303\u56f4-\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4fdd\u6301\u8f93\u5165\u6570\u5b57\u7684\u987a\u5e8f\u3002\u6807\u51c6\u5316\u540e\uff0c\u8f93\u5165\u4e3a12_\u3002\u8f93\u5165\u7aef\u7684Tail_34_567_89__\u4fdd\u6301\u4e0d\u53d8\u3002\n\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e24\u4f4d\u6570\u7684\u8f6c\u6362\uff0c\u90a3\u4e48\u524d\u4e09\u4e2a\u8de8\u5ea6\u5c31\u53ef\u4ee5\u8f6c\u6362\u3002\u8f83\u77ed\u7684\u6570\u5b57\u7528\u96f6\u5b8c\u6210\uff0c\u7136\u540e\u5f52\u4e00\u5316\u8f93\u5165\u4e3a010234_\u3002\u7ed3\u679c\u662f[1\uff0c2\uff0c34]\uff1b\u6b64\u65f6\u95f4\u4f4d\u8f83\u77ed\u7684\u8f93\u5165\u7684Tail_567_89__\u4fdd\u6301\u4e0d\u53d8\u3002\n\u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u56db\u4f4d\u6570\u7684\u8f6c\u6362\uff0c\u90a3\u4e48\u56db\u4e2a\u7b2c\u4e00\u4e2a\u8de8\u5ea6\u5c31\u53ef\u4ee5\u8f6c\u6362\u3002\u540c\u6837\uff0c\u8f83\u77ed\u7684\u6570\u5b57\u7528\u96f6\u5b8c\u6210\uff0c\u6807\u51c6\u5316\u8f93\u5165\u4e3a0001000200340567\u3002\u7ed3\u679c\u662f[1\uff0c2\uff0c34,567]\uff0c\u4f46\u4ecd\u672a\u5904\u7406\u5757\u7684\u5c3e\u90e8\uff0c\u5373_89__\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e3a\u4e86\u8f6c\u6362\u7ed9\u5b9a\u7684\u8de8\u5ea6\u7ec4\u5408\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\uff1a\n\u83b7\u53d6\u6b64\u4fe1\u606f\u4f3c\u4e4e\u76f8\u5f53\u590d\u6742\uff0c\u7279\u522b\u662f\u5f53\u6211\u4eec\u67e5\u770b\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u65f6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6240\u6709\u53c2\u6570\u90fd\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97\u3002\u8de8\u8ddd\u7ec4\u5408\u53ef\u4ee5\u4fdd\u5b58\u4e3a\u4f4d\u6a21\u5f0f\uff0c\u5176\u4e2d1\u8868\u793a\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u4eceVector_1_2_34_567_89__\uff0c\u6211\u4eec\u5f97\u5230\u8303\u56f4\u6a21\u5f0f0b0101011011101100=0x56ec.\u8303\u56f4\u6a21\u5f0f\u7528\u4e8e\u4ece\u9884\u8ba1\u7b97\u9635\u5217\u83b7\u53d6\u8bb0\u5f55\u3002\u8bb0\u5f55\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\nShuffle_digits-16\u5b57\u8282\u6570\u7ec4\uff0c\u5b83\u662f\u6307\u4ee4_mm_Shuffle_ep8(PShufb)\u7684\u53c2\u6570\uff1b\u6307\u4ee4\u5728\u67d0\u4e9b\u4f4d\u7f6e\u79fb\u52a8\u5b57\u8282\uff1b\nCONVERSION_ROUTINE-\u9009\u62e9SSE\u8f6c\u6362\u8fc7\u7a0b\u7684\u679a\u4e3e\uff1b\u4f8b\u5982\uff0c\u5b83\u544a\u8bc9\u60a8\u7f6e\u4e71\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u7531\u4e24\u4f4d\u6570\u7ec4\u6210\u7684\u6570\u7ec4\uff1b\nELEMENT_COUNT-SSE\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5fc5\u987b\u5b58\u50a8\u5728\u8f93\u51fa\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6570\u3002\n\u5177\u6709\u9884\u8ba1\u7b97\u9635\u5217\u7684\u89e3\u51b3\u65b9\u6848\u4ec5\u9002\u7528\u4e8eSSE\uff0c\u56e0\u4e3a\u8de8\u5ea6\u6a21\u5f0f\u5177\u670916\u4f4d\u3002\u5728\u5411\u91cf\u8f83\u5bbd\u7684AVX2\u548cAVX512\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u7684\u8868\u4f1a\u7b80\u5355\u5730\u592a\u5927\uff0c\u5206\u522b\u4e3a232\u4e2a\u6216264\u4e2a\u6761\u76ee\u3002\u6b64\u5916\uff0cAVX2\u7248\u672c\u7684pshfb\u6307\u4ee4\u9002\u7528\u4e8e\u901a\u9053\uff0c\u5373\u77e2\u91cf\u7684128\u4f4d\u534a\u90e8\u5206\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u5bf9\u6240\u6709\u8f93\u5165\u8fdb\u884c\u6df7\u6d17\u3002\n\u4f46\u662fAVX2\u548cAVX512\u6307\u4ee4\u4ecd\u7136\u53ef\u4ee5\u7528\u4e8e\u7b97\u6cd5\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u7279\u522b\u662f\u5728\u8f93\u5165\u9a8c\u8bc1\u4e2d\u3002\n\u8981\u6784\u5efa\u6574\u4e2a\u9884\u8ba1\u7b97\u8868\uff0c\u5fc5\u987b\u5904\u7406\u6240\u670965536\u4e2a\u8de8\u5ea6\u6a21\u5f0f\u3002\u5904\u7406\u56fe\u6848\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\u786e\u5b9a\u6570\u5b57\u8de8\u5ea6\u3002\u5bf9\u4e8ePattern_ddd_d__ddd_dd_we\uff0c\u6709\u56db\u4e2a\u8de8\u5ea6[(1\uff0c3)\uff0c(6\uff0c6)\uff0c(9\uff0c11)\uff0c(14\uff0c15)]\u3002\u4f46\u662f\u5bf9\u4e8e\u6a21\u5f0f_dddd_ddd\uff0c\u53ea\u6709\u4e00\u4e2a\u8de8\u5ea6[(4\uff0c7)]\u3002\u77e2\u91cf\u672b\u7aef\u7684\u8de8\u5ea6\u53ef\u80fd\u4f1a\u5728\u4e0b\u4e00\u5757\u4e2d\u7ee7\u7eed\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u8f6c\u6362\u5b83\u3002\u7136\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u4ece\u5411\u91cf\u5f00\u59cb\u7684\u8de8\u5ea6\u662f\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u5e76\u4e14\u5305\u62ec\u5728\u8de8\u5ea6\u7684\u5217\u8868\u4e2d\u3002\n\u627e\u5230\u8de8\u5ea6\u7684\u6700\u4f73\u8f6c\u6362\u65b9\u6848\u3002\u6211\u4eec\u7cfb\u7edf\u5730\u68c0\u67e5\u54ea\u4e9bSSE\u8f6c\u6362\u662f\u53ef\u80fd\u7684\uff0c\u5373\u4e00\u4f4d/\u4e24\u4f4d/\u56db\u4f4d/\u516b\u4f4d\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u8f6c\u6362\u53ef\u4ee5\u5904\u7406\u591a\u5c11\u4e2a\u8de8\u5ea6-\u9009\u62e9\u5904\u7406\u9879\u76ee\u6700\u591a\u7684\u7a0b\u5e8f\u3002\u6b64\u6b65\u9aa4\u7684\u8f93\u51fa\u662f\u4ee5\u4e0b\u8bb0\u5f55\u5b57\u6bb5\u7684\u503c\uff1aTOTAL_SKIP-\u5904\u7406\u4e86\u591a\u5c11\u4e2a\u8f93\u5165\u5b57\u8282\uff1b\u5bf9\u4e8ePattern_dddd_\uff0c\u6211\u4eec\u77e5\u9053\u5904\u7406\u4e86\u6574\u4e2a\u8f93\u5165(Total_Skip=16)\uff1b\u5bf9\u4e8ePattern_d_ddd_d\uff0c\u6211\u4eec\u53ea\u5904\u7406\u7d22\u5f155\u5904\u7684\u7b2c\u4e00\u4e2a\u8de8\u5ea6\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\u8de8\u5ea6\u4e4b\u540e\u7684\u56db\u4e2a\u975e\u6570\u5b57\u5b57\u7b26\u4e5f\u53ef\u4ee5\u8df3\u8fc7\uff0c\u56e0\u6b64Total_Skip\u662f9\u3002\n\u6784\u5efa\u6d17\u724c\u6a21\u5f0f\u3002\u6709\u4e86\u5143\u7d20\u5927\u5c0f\u548c\u8de8\u5ea6\u4f4d\u7f6e\u540e\uff0c\u5c31\u6784\u5efa\u4e86\u5411\u91cfShuffle_digits\u3002\u8de8\u8ddd\u4e2d\u7684\u5b57\u7b26\u6620\u5c04\u5230\u5411\u91cf\u4e2d\u7684\u9002\u5f53\u5b50\u6570\u7ec4\u4e0a\u3002\u5728\u8be5\u6b65\u9aa4\u4e2d\u8fd8\u5b8c\u6210\u4e86\u96f6\u8865\u5168\uff0c\u56e0\u4e3a\u6307\u4ee4pshfb\u6216\u8005\u4ece\u8f93\u5165\u5411\u91cf\u590d\u5236\u7ed9\u5b9a\u7684\u5b57\u8282\uff0c\u6216\u8005\u5982\u679c\u7d22\u5f15\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u6700\u9ad8\u6709\u6548\u4f4d\uff0c\u5219\u5c06\u5176\u7f6e\u96f6\u3002\n\u8ba9\u6211\u4eec\u8003\u8651span pattern_ddd__d__ddd_dd_\u3002\u53ef\u4ee5\u4f7f\u7528\u56db\u4f4d\u8f6c\u6362\u8fdb\u884c\u8f6c\u6362\uff0c\u56e0\u6b64\u5f52\u4e00\u5316\u5411\u91cf\u7684\u5e03\u5c40\u5e94\u4e3a\uff1a\n[a0|a1|a2|a3|b0|b1|b2|b3|c0|c1|c2|c3|d0|d1|d2|d3]\u3002\n\u5411\u91cf\u4e2d\u6709\u56db\u4e2a\u6570\u5b57a\u3001b\u3001c\u548cd\uff1b\u8bf7\u6ce8\u610f\uff0c\u7b2c0\u7d22\u5f15\u5904\u7684\u5b57\u8282\u4fdd\u5b58\u6700\u9ad8\u6709\u6548\u6570\u5b57\u3002\n\u6a21\u5f0f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u6709\u4e09\u4f4d\u6570\uff0c\u5206\u522b\u4f4d\u4e8e\u7d22\u5f151\u30012\u548c3\uff0c\u8868\u793aa1=1\u3001a2=2\u3001a3=3\uff1ba0\u7684\u503c\u5e94\u4e3a\u96f6\uff0c\u56e0\u6b64a0=0x80\u3002\n\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5728\u7d22\u5f156\u5904\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64b3=6\uff0c\u7531\u4e8e\u5176\u4f59\u6570\u5b57\u5fc5\u987b\u4e3a\u96f6\uff0c\u56e0\u6b64b0=b1=b2=0x80\u3002\n\u7b2c\u4e09\u4e2a\u6570\u5b57\u7684\u7d22\u5f15\u4e3a9\u300110\u300111\uff0c\u56e0\u6b64c1=9\uff0cc2=10\uff0cc3=11\uff0cc0=0x80\u3002\n\u6700\u540e\u4e00\u4e2a\u6570\u5b57\uff0c\u5373\u7b2c\u56db\u4e2a\u6570\u5b57\uff0c\u5728\u7d22\u5f1514\u548c15\u5904\u6709\u4e24\u4f4d\u6570\uff0c\u56e0\u6b64d2=14\uff0cd3=15\uff0c\u5176\u4f59\u5fc5\u987b\u4e3a\u96f6\uff0c\u6240\u4ee5d0=d1=0x80\u3002\n[80|1|2|3|80|80|80|6|80|9|10|11|80|80|14|15]\u3002\n//t0=[&#39\uff1b0&#39\uff1b..&#39\uff1b9]\u4e2d\u7684input[i]\uff1f0xff\uff1a0x00 const__m128i t0=decimal_digits_ask(Input)\uff1bconst uint16_t span_ask=_mm_movemask_ep8(T0)\uff1b\n\u7136\u540e\uff0c\u5c06\u6df7\u6d17\u540e\u7684\u5411\u91cf\u53d1\u5e03\u5230\u9002\u5f53\u7684\u8f6c\u6362\u4f8b\u7a0b\u3002block kinfo\u7ed3\u6784\u4fdd\u5b58\u8f6c\u6362\u7c7b\u578b(CONVERSION_ROUTINE)\u548c\u4eceSSE\u7ed3\u679c\u4e2d\u83b7\u5f97\u7684\u9879\u76ee\u6570(ELEMENT_COUNT)\u3002\u4f7f\u7528SSE\u8f6c\u6362\u7a0b\u5e8f\u5e76\u4e0d\u603b\u662f\u53ef\u884c\u7684\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6807\u91cf\u4ee3\u7801\u6765\u5904\u7406\u5947\u602a\u7684\u60c5\u51b5\u3002\n\u5982\u679c(b.\u3002CONVERSION_ROUTINE==CONVERSION\uff1a\uff1aSSE1 Digit){CONVERT_1 Digit(\u65e0\u5e8f\u6392\u5217\uff0cb.\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(b.\u3002CONVERSION_ROUTINE==CONVERSION\uff1a\uff1aSSE2 Digits){CONVERT_2 Digits(\u65e0\u5e8f\u6392\u5217\uff0cb.\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(b.\u3002CONVERSION_ROUTE==CONVERSION\uff1a\uff1aSSE4 Digits){CONVERT_4 Digits(\u65e0\u5e8f\u6392\u5217\uff0cb.\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(b.\u3002CONVERSION_ROUTE==CONVERSION\uff1a\uff1aSSE8 Digits){CONVERT_8 Digits(\u65e0\u5e8f\u6392\u5217\uff0cb.\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE{//\u4e0d\u652f\u6301\u5927\u5c0f\u5199\uff0c\u6b64\u5904\u8c03\u7528\u6807\u91cf\u4ee3\u7801}\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u63a9\u7801\uff1a\u4e00\u4e2a\u662f\u6570\u5b57\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u662f\u5206\u9694\u7b26\u4f4d\u7f6e\u3002\u5982\u679cOr&#ed\u63a9\u7801\u5305\u542b\u4e00\u4e9b\u96f6\u5143\u7d20\uff0c\u5219\u8868\u793a\u5b58\u5728\u65e0\u6548\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u67b6\u6784\uff1a\nconst__m128i bytemask_digit=DECIMAL_DIGITS_MASK(\u8f93\u5165)\uff1bconst__m128i bytemask_Sep=\u5339\u914d\u5668\u3002get_ask(\u8f93\u5165)\uff1bconst__m128i bytemask_valid=_mm_or_si128(bytemask_digit\uff0cbytemask_Sep)\uff1bconst uint16_t Valid_Mask=_mm_movemask_ep8(Bytemask_Valid)\uff1bIF(Valid_Mask\uff01=0xffff){Throw std\uff1a\uff1alogic_error(&#34\uff1berror input&#34\uff1b)\uff1b}\u3002\n\u6700\u901a\u7528\u7684SSE\u5b9e\u73b0\u5728\u65f6\u95f4\u4e0a\u4e0e\u5206\u9694\u7b26\u96c6\u5408\u7684\u5927\u5c0f\u6210\u6b63\u6bd4\u3002\u5c06\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u5e7f\u64ad\u5230\u77e2\u91cf\u4e2d\uff0c\u7136\u540e\u4e0e\u8f93\u5165\u77e2\u91cf\u8fdb\u884c\u6bd4\u8f83\u3002\u5f97\u5230\u7684\u5b57\u8282\u63a9\u7801\u4e0e\u524d\u4e00\u4e2a\u7ed3\u679c\u76f8\u540c\u3002\n__m128i get_ask(const__m128i&amp\uff1binput\uff0cconst__m128i&amp\uff1binitial)const{__m128i result=initial\uff1bfor(size_t i=0\uff1bi&lt\uff1bn+1\uff1bi++){const__m128i ask=_mm_cmpeq_ep8(\u5b57\u6bcd[i]\uff0cinput)\uff1bresult=_mm_or_si128(result\uff0cask)\uff1b}\u8fd4\u56de\u7ed3\u679c\uff1b\n\u5982\u679c\u5206\u9694\u7b26\u96c6\u5408\u5728\u7f16\u8bd1\u65f6\u662f\u5df2\u77e5\u7684\uff0c\u5219\u7f16\u8bd1\u5668\u53ef\u4ee5\u5c55\u5f00\u5faa\u73af\u3002\nSSE4.2\u4e2d\u7684SNTI\u6307\u4ee4pcmpestrm(_Mm_Cmpestrm)\u4e5f\u53ef\u7528\u4e8e\u76f8\u540c\u7684\u60c5\u51b5\u3002\u8be5\u6307\u4ee4\u6709\u4e24\u4e2a\u53c2\u6570\u3002\u4e00\u4e2a\u662f\u8f93\u5165\u5411\u91cf\uff0c\u53e6\u4e00\u4e2a\u89e3\u91ca\u4e3a\u4e00\u7ec4\u5355\u72ec\u7684\u5b57\u7b26(\u6700\u591a16\u4e2a)\u6216\u5b57\u7b26\u8303\u56f4(\u6700\u591a8\u4e2a)\u3002\u7ed3\u679c\u662f\u4e0e\u96c6\u5408(\u6216\u8303\u56f4)\u5339\u914d\u7684\u8f93\u5165\u5b57\u7b26\u7684\u63a9\u7801\u3002\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u4e86\u96c6\u5408\u53d8\u91cf\u3002\n__m128i get_ask(const__m128i&amp\uff1binput\uff0cconst__m128i&amp\uff1binitial){const uint8_t mode=_SIDD_UBYTE_OPS|_SID_CMP_EQUAL_ANY|_SID_UNIT_MASK\uff1breturn_mm_or_si128(Initial\uff0c_mm_cmpestrm(set\uff0cset_size\uff0cinput\uff0c16\uff0cmode))\uff1b}\u3002\n\u5904\u7406\u8f93\u5165\u5411\u91cf\u4e2d\u7684\u6240\u6709\u6570\u5b57\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6709\u65f6\u751a\u81f3\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5728\u5355\u4e2a\u8fed\u4ee3\u4e2d\uff0c\u8f6c\u63621\u523016\u4e2a\u5b57\u8282\u3002\u4e0b\u8868\u663e\u793a\u4e86\u8be6\u7ec6\u4fe1\u606f--\u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u8bba\u662f\uff0c\u51e0\u4e4e95%\u7684\u6a21\u5f0f\u5904\u7406\u81f3\u5c11\u4e00\u534a\u7684\u8f93\u5165\u5411\u91cf\u3002\n\u4f46\u662f\uff0c\u8f93\u5165\u9a8c\u8bc1\u603b\u662f\u9488\u5bf9\u6574\u4e2a\u5411\u91cf\u8fdb\u884c\u7684\uff0c\u5168\u90e8\u4e3a16\u4e2a\u5b57\u8282\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u4f1a\u88ab\u514b\u670d\uff0c\u8bf7\u53c2\u89c1\u5904\u7406\u66f4\u5927\u7684\u8f93\u5165\u3002\n\u4e0a\u4ea4\u6240\u7684\u5355\u4f4d\u6ca1\u6709\u5f97\u5230\u5145\u5206\u5229\u7528\u3002\u6700\u957f\u7684\u4e00\u4f4d\u6570\u5b57\u5e8f\u5217\u662f&#34\uff1b1\uff1b2\uff1b3\uff1b4\uff1b5\uff1b6\uff1b7\uff1b8\uff1b&#34\uff1b\u3002\u5b83\u5305\u542b8\u4e2a\u6570\u5b57\uff0c\u800cSSE\u8fc7\u7a0b\u80fd\u591f\u5904\u740616\u4e2a\u6570\u5b57\u3002\u540c\u6837\uff0c\u6700\u957f\u7684\u4e24\u4f4d\u6570\u5b57\u5e8f\u5217\u662f&#34\uff1b12\uff1b34\uff1b56\uff1b78\uff1b98\uff1b\uff1b&#34\uff1b\u3002\u5b83\u67095\u4e2a\u6570\u5b57\uff0c\u4f46\u662fSSE\u8fc7\u7a0b\u80fd\u591f\u8f6c\u63628\u4e2a\u6570\u5b57\u3002\u540c\u6837\uff0c\u6700\u957f\u7684\u56db\u4f4d\u6570\u5b57\u5e8f\u5217\u662f&#34\uff1b1234\uff1b5678\uff1b9123\uff1b\uff1b&#34\uff1b-\u5b83\u6709\u4e09\u4e2a\u56db\u4f4d\u6570\u5b57\uff0cSSE\u8fc7\u7a0b\u53ef\u4ee5\u8f6c\u6362\u56db\u4e2a\u6570\u5b57\u3002\n\u4e0e\u65e0\u7b26\u53f7\u8f6c\u6362\u7c7b\u4f3c\uff0c\u6709\u7b26\u53f7\u8f6c\u6362\u4e5f\u9700\u8981Aspan\u6a21\u5f0f\u3002\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56fe\u6848\u4e2d\u8fd8\u5305\u62ec\u7b26\u53f7\u5b57\u7b26&#39\uff1b+&#39\uff1b\u548c&#39\uff1b-&#39\uff1b\u3002\u5bf9\u4e8e\u6b64\u793a\u4f8b\u5b57\u7b26\u4e32\uff1a\n\u6df7\u6d17\u8de8\u8d8a\u5230\u6b63\u786e\u7684\u5411\u91cf\u5143\u7d20\u4e0a-\u8fd9\u4e0e\u65e0\u7b26\u53f7\u8f6c\u6362\u4e2d\u7684\u60c5\u51b5\u5b8c\u5168\u76f8\u540c\u3002\n\u8f93\u5165=[&#39\uff1b_&#39\uff1b|&#39\uff1b-&#39\uff1b|&#39\uff1b1&#39\uff1b|&#39\uff1b2&#39\uff1b|&#39\uff1b3&#39\uff1b|&#39\uff1b_&#39\uff1b|&#39\uff1b+&#39\uff1b|&#39\uff1b4&#39\uff1b|&#39\uff1b5&#39\uff1b|&#39\uff1b_&#39\uff1b|&#39\uff1b-&#39\uff1b|&#39\uff1b6&##\u3002_&#39\uff1b|&#39\uff1b7&#39\uff1b|&#39\uff1b8&#39\uff1b|&#39\uff1b_&#39\uff1b]\u3002\n\u968f\u673a\u6d17\u724c=[&#39\uff1b-&#39\uff1b&#39\uff1b1&#39\uff1b&#39\uff1b2&#39\uff1b&#39\uff1b3&#39\uff1b|0x00&#39\uff1b+&#39\uff1b&#39\uff1b4&#39\uff1b&#39\uff1b5&#39\uff1b|0x00 0x00&#39\uff1b-&#39\uff1b&#39\uff1b&#39\uff1b6&#39\uff1b|0x00 0x00&#39\uff1b7&#39\uff1b&#39\uff1b8&#\n\u968f\u673a\u6807\u8bb0=[&#39\uff1b-&#39\uff1b&#39\uff1b-&#39\uff1b&#39\uff1b|&#39\uff1b+&#39\uff1b&#39\uff1b+&#39\uff1b&#39\uff1b+&#39\uff1b&#39\uff1b+&#39\uff1b|&#39\uff1b-&#39\uff1b&#39\uff1b-&#39\uff1b&#39\uff1b-&#39\uff1b&#39\uff1b-&#39\uff1b|&##\u30027&#39\uff1b&#39\uff1b7&#39\uff1b&#39\uff1b7&#39\uff1b&#39\uff1b7&#39\uff1b]\u3002\nShuffled_Signs\u5411\u91cf\u4e0d\u4e00\u5b9a\u53ea\u5305\u542b&#39\uff1b+&#39\uff1b\u6216&#39\uff1b-&#39\uff1b\uff0c\u5b83\u53ef\u80fd\u8fd8\u5305\u542b\u6570\u5b57\uff0c\u4f46\u8fd9\u4e0d\u662f\u9519\u8bef\u3002\n\u4ece\u6df7\u6d17\u540e\u7684\u77e2\u91cf\u4e2d\u5220\u9664\u7b26\u53f7\u5b57\u7b26\uff0c\u5e76\u5c06ASCII\u5b57\u7b26\u8f6c\u6362\u4e3a\u503c\uff1a\n[0 1 2 3|0 0 4 5|0 0 0 6|0 0 7 8]\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u65e0\u7b26\u53f7\u6570\u5b57\u5411\u91cf\uff0c\u8fd9\u6837\u7684\u8f93\u5165\u53ef\u4ee5\u901a\u8fc7\u5df2\u7ecf\u5b9a\u4e49\u7684SSE\u8fc7\u7a0b\u8fdb\u884c\u8f6c\u6362\uff1a\n\u6700\u540e\uff0c\u53d6\u6d88\u9002\u5f53\u7684\u5143\u7d20\uff1b\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u7b49\u5f0f(~x+1)\uff0c\u5b83\u5728SSE\u4ee3\u7801\u4e2d\u8868\u793a\u4e3a(xxor(-1)-(-1))\u3002\u503c-1\u662f\u901a\u8fc7\u5c06SHUFFLED_SIGNES\u4e0e&#39\uff1b-&#39\uff1b\u8fdb\u884c\u6bd4\u8f83\u800c\u83b7\u5f97\u7684\uff1a\nNegated_MASK=(Shuffled_Signs==PACKED_BYTE(&#39\uff1b-&#39\uff1b))[ff|00 00 00|ff|00 00 00]\u3002\n\u7531\u4e8e\u6307\u4ee4_mm_subs_epu8(Psubusb)\u7528\u4e8e\u4eceASCII\u8272\u8c03\u6570\u503c\u8fdb\u884c\u8f6c\u6362\uff0c\u56e0\u6b64\u5bf9\u6df7\u6d17\u77e2\u91cf\u4e2d\u7684\u7b26\u53f7\u5b57\u7b26\u8fdb\u884c\u63a9\u853d\u662f\u514d\u8d39\u7684\uff0c\u56e0\u4e3a\u6307\u4ee4_mm_subs_epu8(Psubusb)\u7528\u4e8e\u4eceASCII\u8272\u8c03\u6570\u503c\u8f6c\u6362\uff1a\n\u8be5\u6307\u4ee4\u6267\u884c\u9971\u548c\u51cf\u6cd5\uff0c\u5373\u8ba1\u7b97max(0\uff0ca-b)\u3002\u7531\u4e8e&#39\uff1b-&#39\uff1b\u548c&#39\uff1b+&#39\uff1b\u7684ASCII\u4ee3\u7801\u5206\u522b\u4e3a43\u548c45\uff0c\u800c&#39\uff1b0&#39\uff1b\u7684ASCII\u4ee3\u7801\u4e3a48\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e24\u4e2a\u7b26\u53f7\u5b57\u7b26\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5747\u4e3a\u96f6\u3002\n\u5b57\u7b26&#39\uff1b+&#39\uff1b\u548c&#39\uff1b-&#39\uff1b\u53ea\u80fd\u51fa\u73b0\u5728\u6570\u5b57\u8303\u56f4\u7684\u5f00\u5934\uff0c\u5373\u6211\u4eec\u60f3\u8981\u62d2\u7edd\u50cf&#34\uff1b++12&#34\uff1b\u6216&#34\uff1b1234-\uff0c&#34\uff1b\u8fd9\u6837\u7684\u8f93\u5165\u3002\n\u7b2c\u4e00\u9636\u6bb5\u7c7b\u4f3c\u4e8e\u65e0\u7b26\u53f7\u8f6c\u6362\uff0c\u5373\u5c06\u6240\u6709\u63a9\u7801\u201c\u6216\u201d\u7f16\u8f91\u5728\u4e00\u8d77\uff0c\u7136\u540e\u5c06\u96f6\u4e2a\u5143\u7d20\u6307\u5411\u65e0\u6548\u5b57\u7b26\u3002\n\u7b2c\u4e8c\u9636\u6bb5\u68c0\u67e5\u7b26\u53f7\u5b57\u7b26\u662f\u5426\u653e\u7f6e\u6b63\u786e\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8de8\u5ea6\u7ec4\u5408\uff0c\u6211\u4eec\u9700\u8981\u9884\u5148\u8ba1\u7b97\u6709\u6548\u7b26\u53f7\u4f4d\u7f6e\u7684\u63a9\u7801\u3002\u7136\u540e\uff0c\u5728\u6216\u76d6\u4e0a\u9762\u5177\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u653e\u7f6e\u5728\u6709\u6548\u4f4d\u7f6e\u5373\u53ef\u3002(#39\uff1b-#39\uff1b-#39\uff1b-#39\uff1b-#39\uff1b-#39\uff1b-#39\uff1b-#39\uff1b\u6211\u4eec\u53ea\u9700\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u653e\u7f6e\u5728\u6709\u6548\u4f4d\u7f6e\u5373\u53ef\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u7531\u4e8e\u9a8c\u8bc1\u53ea\u9700\u8981\u7b80\u5355AND\uff0c\u6240\u4ee5\u9884\u8ba1\u7b97\u6570\u636e\u5177\u6709\u7528\u4e8e\u65e0\u6548\u7b26\u53f7\u4f4d\u7f6e\u7684\u4f4d\u63a9\u7801\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u663e\u793a\u4e86\u7b2c\u4e8c\u6b65\u7684\u67b6\u6784\u3002\nconst__m128i ascii_minus=_mm_set1_ep8(&#39\uff1b-&#39\uff1b)\uff1bconst__m128i ascii_plus=_mm_set1_ep8(&#39\uff1b+&#39\uff1b)\uff1b//.\u3002const__m128i bytemask_plus=_mm_cmpeq_ep8(input\uff0cascii_plus)\uff1bconst__m128i bytemask_minus=_mm_cmpeq_ep8(input\uff0cascii_minus)\uff1bconst_m128i bytemask_sign=_mm_or_si128(bytemask_plus\uff0cbytemask_minus)\uff1b//.\u3002const uint16_t sign_ask=_mm_movemask_ep8(Bytemask_Sign)\uff1bconst uint16_t span_ask=_mm_movemask_ep8(Bytemask_Span)\uff1bconst\u5757\u4fe1\u606f&amp\uff1bbi=\u5757[span_ask]\uff1bif(sign_ask&amp\uff1bbi\u3002INVALID_SIGN_MASK){\u5728\u65e0\u6548\u4f4d\u7f6e\u629b\u51fastd\uff1a\uff1arun_error(&#34\uff1b&#39\uff1b+&#39\uff1b\u6216&#39\uff1b-&#39\uff1b)\uff1b}\u3002\nAVX512VBMI\u5b9a\u4e49\u4e86\u529f\u80fd\u5f3a\u5927\u7684\u6307\u4ee4_mm512_permutex2var_ep8(Vperm2b)\uff0c\u5b83\u4f7f\u7528ZMM\u5bc4\u5b58\u5668\u6bcf\u4e2a\u5b57\u8282\u7684\u6700\u4f4e7\u4f4d\u4f5c\u4e3a\u7d22\u5f15\uff0c\u5728128\u5b57\u8282\u8868\u4e2d\u8fdb\u884c\u67e5\u627e\u3002\u5185\u90e8\u51fd\u6570\u7684\u8c03\u7528\u5f88\u5947\u602a\uff1a\nconst__m512i lookup_lo=.//\u5143\u7d200..63const__m512i lookup_hi=.//\u548c64..127\u8f6c\u6362\u7684\u67e5\u627econst__m512i=_mm512_permutex2var_ep8(lookup_lo\uff0cinput\uff0clookup_hi)\uff1b\n\u5982\u679c\u6709\u6548\u5b57\u7b26\u96c6\u9002\u5408\u6807\u51c6ASCII\u5b57\u7b26\u96c6\uff0c\u5373\u4ec5\u8bbe\u7f6e\u4e86\u6700\u4f4e7\u4f4d\uff0c\u5219\u9a8c\u8bc1\u6b65\u9aa4\u53ef\u80fd\u4f1a\u5feb\u901f\u62d2\u7edd\u6269\u5c55ASCII(\u7b2c7\u4f4d\u96c6)\uff0c\u7136\u540e\u4f7f\u7528_mm512_permutex2var_ep8\u7684\u5355\u4e2a\u8c03\u7528\u8f6c\u6362\u8f93\u5165\u3002\u5f53\u5141\u8bb8\u5b8c\u6574\u76848\u4f4d\u8f93\u5165\u65f6\uff0c\u5219\u5fc5\u987b\u4f7f\u7528256\u5b57\u8282\u67e5\u627e\u7684\u4e24\u4e2a\u90e8\u5206\u8c03\u7528\u6307\u4ee4\u4e24\u6b21\u3002\n\u6b64\u6307\u4ee4\u7684\u4e00\u6b21(\u6216\u4e24\u6b21)\u8c03\u7528\u5141\u8bb8\u5c06\u6240\u670964\u4e2a\u8f93\u5165\u5b57\u8282\u4e00\u6b21\u5206\u7c7b\u4e3a\u6240\u9700\u7684\u7c7b\u522b\uff1a\n\u7c7b\u522b\u7f16\u7801\u4e3a\u67d0\u4e2a\u4f4d\u7f6e\u7684\u4f4d\uff0c\u5728\u793a\u4f8b\u5b9e\u73b0\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u6a21\u5f0f\uff1a\n\u8303\u56f4\u6a21\u5f0f\u7531\u6307\u4ee4_mm512_movep8_ask(Vpmovb2m)\u4ece\u6700\u9ad8\u6709\u6548\u4f4d\u83b7\u5f97\uff1b\u5176\u5de5\u4f5c\u65b9\u5f0f\u4e0eSSE\u4e2d\u7684pmovmaskb\u5b8c\u5168\u76f8\u540c\u3002\u7b26\u53f7\u6a21\u5f0f\u7531\u6307\u4ee4_mm512_test_ep8_ask(Vptestmb)\u901a\u8fc7\u6d4b\u8bd5\u4f4d7(\u63a9\u78010x40)\u83b7\u5f97\u3002\nconst__m512i class=_mm512_permutex2var_ep8(class_lo\uff0cinput\uff0cclass_hi)\uff1bif(_mm512_test_ep8_ask(class\uff0cclass)\uff01=uint64_t(-1)){\u63b7\u51fastd\uff1a\uff1alogic_error(&#34\uff1b\u65e0\u6548\u5b57\u7b26&#34\uff1b)\uff1b}uint64_t span_mask64=_mm512_movep8_ask(Class)\uff1buint64_t sign_mask64=_mm512_test_ep8_ask(class\uff0c_mm512_set1_ep8(int8_t(0x40)\uff1b\nconst__m128i ascii_minus=_mm_set1_ep8(&#39\uff1b-&#39\uff1b)\uff1bconst__m128i ascii_plus=_mm_set1_ep8(&#39\uff1b+&#39\uff1b)\uff1b//.\u3002const__m128i bytemask_plus=_mm_cmpeq_ep8(input\uff0cascii_plus)\uff1bconst__m128i bytemask_minus=_mm_cmpeq_ep8(input\uff0cascii_minus)\uff1bconst_m128i bytemask_sign=_mm_or_si128(bytemask_plus\uff0cbytemask_minus)\uff1bconst__m128i bytemask_digit=\u3002const uint16_t span_ask=_mm_movemask_ep8(Bytemask_Span)\uff1bconst\u5757\u4fe1\u606f&amp\uff1bbi=\u5757\u4fe1\u606f[span_ask]\uff1b\nconst uint16_t sign_ask=_mm_movemask_ep8(Bytemask_Sign)\uff1bif(sign_ask&amp\uff1bbi.\u3002INVALID_SIGN_MASK){\u5728\u65e0\u6548\u4f4d\u7f6e\u629b\u51fastd\uff1a\uff1arun_error(&#34\uff1b&#39\uff1b+&#39\uff1b\u6216&#39\uff1b-&#39\uff1b)\uff1b}\u3002\nconst__m128i ascii_minus=_mm_set1_ep8(&#39\uff1b-&#39\uff1b)\uff1bconst__m128i\u968f\u673a\u6570\u5b57=_mm_loadu_si128((const__m128i*)bi\u3002\u6d17\u724c\u6570\u5b57)\uff1bconst__m128i Shuffle_Signs=_mm_loadu_si128((const__m128i*)bi.\u3002Shuffle_Signs)\uff1bconst__m128i Shuffled=_mm_Shuffle_EP8(\u8f93\u5165\uff0cShuffle_digits)\uff1bconst__m128i Shuffled_Signs=_mm_Shuffle_EP8(\u8f93\u5165\uff0cShuffle_Signs)\uff1bconst__m128i Negate_MASK=_mm_cmpeq_ep8(Shuffled_Signs\uff0cascii_minus)\uff1b\n\u5982\u679c(bi.\u3002CONVERSION_ROUTE==CONVERSION\uff1a\uff1aSSE1Digit){CONVERT_1digit(\u65e0\u5e8f\u6392\u5217\uff0c\u53cc\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(bi.\u3002CONVERSION_ROUTINE==CONVERSION\uff1a\uff1aSSE2 Digits){CONVERT_2 DIGNITS_SIGNED(\u65e0\u5e8f\u6392\u5217\uff0c\u5426\u5b9a\u63a9\u7801\uff0c\u53cc\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(bi.\u3002CONVERSION_ROUTE==CONVERSION\uff1a\uff1aSSE4 Digits){CONVERT_4 DIGNITS_SIGNED(Shuffled\uff0cNegate_MASK\uff0cbi.\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}ELSE IF(bi.\u3002CONVERSION_ROUTE==CONVERSION\uff1a\uff1aSSE8 Digits){CONVERT_8 DIGNITS_SIGNED(\u65e0\u5e8f\u6392\u5217\uff0c\u5426\u5b9a\u63a9\u7801\uff0c\u53cc\u3002ELEMENT_COUNT\uff0cOUTPUT)\uff1b}Else{//\u6807\u91cf\u8f6c\u6362}\u3002\n\u6b63\u5982\u8b66\u544a\u90e8\u5206\u6240\u8ff0\uff0c\u7b97\u6cd5\u7684\u5355\u4e2a\u6b65\u9aa4\u9a8c\u8bc1\u6574\u4e2a\u8f93\u5165\u5411\u91cf\uff0c\u4f46\u5f88\u5c11\u8f6c\u6362\u6765\u81ea\u8f93\u5165\u7684\u6240\u6709\u5b57\u8282\u3002\u5c3d\u7ba1\u68c0\u6d4b\u6570\u5b57\u548c\u7b26\u53f7\u5b57\u7b26\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662f\u5f88\u4fbf\u5b9c\u7684\uff0c\u4f46\u6211\u4eec\u770b\u5230\u9488\u5bf9\u4efb\u610f\u4e00\u7ec4\u5206\u9694\u7b26\u8fdb\u884c\u9a8c\u8bc1\u53ef\u80fd\u771f\u7684\u5f88\u8017\u65f6\u3002\n..", "note_en": "While conversion from a string into an integer value is feasible with SIMDinstructions, this application is unpractical. For typical cases, when a singlevalue is parsed, scalar procedures \u2014 like the standard  atoi or strtol \u2014 are faster than any fancy SSE code.\n However, SIMD procedures can be really fast and convert  in parallel severalnumbers. There is only one &#34;but&#34;: the input data has to be regular and valid,i.e. the input string must contain only ASCII digits. Recently, I updatedarticle about  SSE parsing with the benchmark results. Thespeed-ups are really impressive, for example the SSSE3 parser is 7 to 9 timesfaster than a naive, scalar code.\n The obvious question is how these powerful SIMD procedures can be used toconvert real data? By  real I mean possibly broken inputs that contain seriesof numbers of different length separated with characters from a predefined set.\n  Methods to efficiently  parse and validate such strings using SSEinstructions. There is a special variant that handles only unsignednumbers and also a fully featured variant for signed numbers.\n The article starts with unsigned conversion, because it is easier than a signedone. The signed conversion shares the core idea, it just adds some extra steps.\n The text is accompanied with BSD-licensed software, that includes fullyfunctional implementations alongside the programs which validate and benchmarkthe procedures.\n It is a string of arbitrary length; but it should be large, say a fewkilobytes or megabytes.\n The input contains integer numbers. A number is an optional sign character&#39;+&#39; or &#39;-&#39; followed by a non-empty sequence of digits &#39;0&#39;..&#39;9&#39;.\n Numbers are separated with characters from a user-defiend set;for instance, it might be the comma and blank characters (space, newline, etc.).\n  Parser must be able to check validity of the input, i.e. lack of invalidcharacters and the proper input format (numbers are separated with atleast one character, sign characters are present only at the beginningof a number).\n For the input string &#34;123; -52, +432424 -999; 1234568, +879&#34;, and threeseparators &#39;,&#39;, &#39;;&#39; and &#39; &#39;, an algorithm is expected to extract six integers:[123, -52, 432424, -999, 1234568, 879]. The order of converted numbers must beexactly the same as in the input string.\n A simplified parser is also tested. This parser simply considers allnon-digit and non-sign characters as delimiters.\n  The conversion algorithm works in a loop, in each iteration exactly one inputvector is loaded from memory and processed.\n Depending on the layout of the digits, the input is  normalized to theformat required by the SIMD procedures. At this step we choose: how manynumbers from the input are converted and which SIMD procedure is suitablefor conversion.\n Since SIMD procedures impose specific layout of digits within a vector, anarbitrary input has to be properly aligned. In order to do this, we need toidentify  spans of digits in the input and move each span onto certainsubarrays of a vector. Let&#39;s assume at this point that the input contains eitherdigits or separators (denoted with  _).\n For instance, the vector with one-digit numbers  1___2_3__4__5_6_ must betransformed into  123456__________. Then an SSE procedure will convert inparallel all the numbers into the array [1, 2, 3, 4, 5, 6]. Likewise, the vectorwith two-digit numbers  _12__34___56_78_ must be transformed into 12345678________ and then the result will be [12, 34, 56, 78].\n Let&#39;s consider a more complicated case, when a string has numbers withdifferent count of digits. There are a few ways to convert the input _1_2_34_567_89__:\n If we choose conversion of one-digit numbers, then just the two first spanscan be converted \u2014 because we need to keep the order of numbers from the input.After normalization the input into  12______________ just two values [1,2] will be produced. The input&#39;s tail  _34_567_89__ remain untouched.\n If we choose conversion of two-digit numbers, then the three first spanscan be converted. Shorter numbers are completed with zeros, then normalizedinput is  010234__________. The result is [1, 2, 34]; this timea bit shorter input&#39;s tail  _567_89__ remain untouched.\n Finally, if we choose conversion of four-digit numbers, then the four firstspans can be converted. Again, shorter numbers are completed with zeros,and normalized input is  0001000200340567. The result is [1, 2, 34, 567],but still the chunk&#39;s tail, i.e.  _89__, is unprocessed.\n We can see that in order to convert given span combination we need to know:\n  Obtaining this information seems to be quite complicated, especially whenwe look at the last example. Fortunately, all parameters canbe  precalculated. A span combination can be saved as a bit-pattern,where ones represent digits. For example, from vector  _1_2_34_567_89__we get the  span pattern  0b0101011011101100 = 0x56ec.A span pattern is used to fetch a record from the precalculated array.The record contains following fields:\n shuffle_digits \u2014 an array of 16 bytes, which is the argument forthe instruction  _mm_shuffle_epi8 ( pshufb); the instructionmoves bytes at certain positions;\n conversion_routine \u2014 an enumeration that selects an SSE conversionprocedure; for instance, it tells that shuffled input is an arrayof two-digit numbers;\n element_count \u2014 the number of elements from the SSE conversionprocedure that must be stored in the output collection.\n The solution with a precalculated array is suitable only for SSE, as spanpatterns have 16 bits. In cases of AVX2 and AVX512, where vectors are wider,such a table would be simply too large, respectively  2 32 or 2 64 entries. Additionally, the AVX2 version of  pshufb instructionworks on lanes, i.e. 128-bit halves of a vector, thus it is impossible toshuffle all inputs.\n But AVX2 and AVX512 instructions still might be used in some parts ofalgorithms, especially in input validation.\n To build the whole precalculated table all 65536 span patterns have to beprocessed. Processing a pattern consists following steps:\n Determine digit spans. For pattern  _ddd__d__ddd_dd_ we have four spans[(1,3), (6,6), (9,11), (14,15)]. But for pattern  ____dddd___ddddd thereis only one span [(4,7)]. The span at the vector&#39;s end might be continued inthe next chunk, and we don&#39;t know how to convert it. However, we may assumethat a span which starts at the vector&#39;s beginning is a new number and thusit is included into the span&#39;s list.\n Find the best conversion scheme for the spans. We systematically checkwhich SSE conversion is possible, i.e. one-/two-/four-/eight-digit and howmany spans each conversion can process \u2014 the procedure which processes themost items is selected. The output from this step are values for the followingrecord fields: total_skip \u2014 how many  input bytes are processed; for pattern ____dddd________ we know that the whole input is processed( total_skip=16); for pattern  ____d____ddddd_d we process only thefirst span at index 5, but we know that four non-digit characters afterthe span can be also skipped, thus  total_skip is 9.\n Construct the shuffle pattern. Having the element size and spans positionsthe vector  shuffle_digits is built. The characters from a span are mappedon the appropriate subarrays in the vector. Also zero completion is done inthis step, as the instruction  pshufb either copy given byte from the inputvector or put zero if the index has got the most significant bit set.\n Let&#39;s consider span pattern  _ddd__d__ddd_dd_. It can be converted usingfour-digit conversion, so the layout of normalized vector should be:\n [ a0 | a1 | a2 | a3 | b0 | b1 | b2 | b3 | c0 | c1 | c2 | c3 | d0 | d1 | d2 | d3 ]\n There are four numbers  a,  b,  c and  d in the vector; notethat the bytes at 0th index hold the most significant digits.\n The first number in pattern has three digits at indices 1, 2 and 3. It meansthat  a1 = 1,  a2 = 2 and  a3 = 3; value of  a0 should be zeroed,so  a0 = 0x80.\n The second number has just one digit at index 6. Thus  b3 = 6 and, sincethe rest digits have to be zero,  b0 = b1 = b2 = 0x80.\n The third number has three digits at indices 9, 10, 11. Thus  c1 = 9, c2 = 10,  c3 = 11, and  c0 = 0x80.\n The last, forth number, has got two digits at indices 14 and 15. Thus d2 = 14,  d3 = 15 and the rest have to be zero, so  d0 = d1 = 0x80.\n  [ 80 | 1 | 2 | 3 | 80 | 80 | 80 | 6 | 80 | 9 | 10 | 11 | 80 | 80 | 14 | 15 ]\n // t0 = input[i] in [&#39;0&#39;..&#39;9] ? 0xff : 0x00 const  __m128i  t0  =  decimal_digits_mask ( input ); const  uint16_t  span_mask  =  _mm_movemask_epi8 ( t0 );\n     The  shuffled vector is then issued to the proper conversion routine. The blockinfo structure keeps the conversion kind ( conversion_routine) and also the numberof items to get from the SSE result ( element_count). It is not alwayspossible to use any SSE conversion procedure, thus a scalar code is neededto handle odd cases.\n if  ( b . conversion_routine  ==  Conversion :: SSE1Digit )  {  convert_1digit ( shuffled ,  b . element_count ,  output ); }  else  if  ( b . conversion_routine  ==  Conversion :: SSE2Digits )  {  convert_2digits ( shuffled ,  b . element_count ,  output ); }  else  if  ( b . conversion_routine  ==  Conversion :: SSE4Digits )  {  convert_4digits ( shuffled ,  b . element_count ,  output ); }  else  if  ( b . conversion_routine  ==  Conversion :: SSE8Digits )  {  convert_8digits ( shuffled ,  b . element_count ,  output ); }  else  {  // case unsupported, a scalar code is called here }\n In practise we need two masks: one with positions of digits, another withpositions of separators. If the or&#39;ed mask has some zero elements, it meansthat there are invalid characters. Below is a schema:\n const  __m128i  bytemask_digit  =  decimal_digits_mask ( input ); const  __m128i  bytemask_sep  =  matcher . get_mask ( input ); const  __m128i  bytemask_valid  =  _mm_or_si128 ( bytemask_digit ,  bytemask_sep ); const  uint16_t  valid_mask  =  _mm_movemask_epi8 ( bytemask_valid ); if  ( valid_mask  !=  0xffff )  {  throw  std :: logic_error ( &#34;wrong input&#34; ); }\n  The most generic SSE implementation works in time proportional to the sizeof a separators set. Each character from the set is broadcasted intoa vector and then compared with the input vector. The resulting byte mask isored with the previous result.\n __m128i  get_mask ( const  __m128i &amp;  input ,  const  __m128i &amp;  initial )  const  {  __m128i  result  =  initial ;  for  ( size_t  i = 0 ;  i  &lt;  n  +  1 ;  i ++ )  {  const  __m128i  mask  =  _mm_cmpeq_epi8 ( letters [ i ],  input );  result  =  _mm_or_si128 ( result ,  mask );  }  return  result ; }\n If the separators set is known at compilation time, then a compiler mayunroll the loop.\n The SNTI instruction  pcmpestrm ( _mm_cmpestrm) from SSE4.2 can also be usedin same cases. The instruction gets two arguments. One is an input vector.Another one is interpreted either as a set of individual characters (up to 16) orcharacters ranges (up to 8). The result is a mask for the input characters matchingthe set (or ranges). In the example below the set variant was used.\n __m128i  get_mask ( const  __m128i &amp;  input ,  const  __m128i &amp;  initial )  {  const  uint8_t  mode  =  _SIDD_UBYTE_OPS  |  _SIDD_CMP_EQUAL_ANY  |  _SIDD_UNIT_MASK ;  return  _mm_or_si128 ( initial ,  _mm_cmpestrm ( set ,  set_size ,  input ,  16 ,  mode )); }\n It is unlikely, and sometimes impossible, to process all digits from theinput vector. In a single iteration one to 16 bytes are converted. The tablebelow shows details \u2014 an important conclusion is that almost 95% ofpatterns process at least half of an input vector.\n  However, the input validation is always done for the whole vector,all 16 bytes. This problem might be overcome, see  Processing largerinputs.\n SSE units are underutilized. The longest one-digit number sequenceis &#34;1;2;3;4;5;6;7;8;&#34;. It contains eight numbers, while the SSE procedureis able to process 16 numbers. Likewise, the longest two-digit numbersequence is &#34;12;34;56;78;98;;&#34;. It has five numbers, but the SSE procedureis able to convert eight numbers. Similarly, the longest four-digit numberssequence is &#34;1234;5678;9123;;&#34; \u2014 it has three four-digit numbers, the SSEprocedure is able to convert four numbers.\n Similarly to the unsigned conversion, the signed conversion also requires  aspan pattern. But in this case also the sign characters &#39;+&#39; and &#39;-&#39; areincluded in the pattern. For this sample string:\n     Shuffle spans onto proper vector elements \u2014 this is exactly the sameas in unsigned conversion.\n  input =[ &#39;_&#39; | &#39;-&#39; | &#39;1&#39; | &#39;2&#39; | &#39;3&#39; | &#39;_&#39; | &#39;+&#39; | &#39;4&#39; | &#39;5&#39; | &#39;_&#39; | &#39;-&#39; | &#39;6&#39; | &#39;_&#39; | &#39;7&#39; | &#39;8&#39; | &#39;_&#39; ]\n  shuffled =[ &#39;-&#39; &#39;1&#39; &#39;2&#39; &#39;3&#39; | 0x00 &#39;+&#39; &#39;4&#39; &#39;5&#39; | 0x00 0x00 &#39;-&#39; &#39;6&#39; | 0x00 0x00 &#39;7&#39; &#39;8&#39; ]\n  shuffled_signs =[ &#39;-&#39; &#39;-&#39; &#39;-&#39; &#39;-&#39; | &#39;+&#39; &#39;+&#39; &#39;+&#39; &#39;+&#39; | &#39;-&#39; &#39;-&#39; &#39;-&#39; &#39;-&#39; | &#39;7&#39; &#39;7&#39; &#39;7&#39; &#39;7&#39; ]\n The  shuffled_signs vector does not necessarily contain only &#39;+&#39; or &#39;-&#39;,it might contain also digits, but this is not an error.\n  From the  shuffled vector the sign characters are removed andASCII characters are converted into values:\n [ 0 1 2 3 | 0 0 4 5 | 0 0 0 6 | 0 0 7 8 ]\n Thus we end up with a vector of unsigned numbers, and such an inputcan be converted by the already defined SSE procedures:\n Finally, negate appropriate elements; we use a well known equation  (~x + 1),which is expressed in the SSE code as  (x xor  (-1) -  (-1)). The value   -1is obtained from comparing  shuffled_signs with the &#39;-&#39;:\n negated_mask = (shuffled_signs == packed_byte(&#39;-&#39;))[ ff ff ff ff | 00 00 00 00 | ff ff ff ff | 00 00 00 00 ]\n Masking of the sign characters in  shuffled vector is done at no cost, asthe instruction  _mm_subs_epu8 ( psubusb) is used to convert from ASCII tonumeric values:\n  The instruction performs  subtract with saturation, i.e. calculates  max(0, a-b). Since the ASCII codes of &#39;-&#39; and &#39;+&#39; are respectively 43 and 45 and theASCII code of &#39;0&#39; is 48, then the result of such expression is zero for bothsign characters.\n The characters &#39;+&#39; and &#39;-&#39; can be present only at the beginning of a digitspan, i.e. we want to reject inputs like &#34;++12&#34; or &#34;1234-,&#34;.\n   The first phase is similar to the unsigned conversion, i.e. all masks are or&#39;edtogether, then zero elements point at invalid characters.\n The second phase checks if sign characters are placed properly. For each spancombination we need to precalculate the mask of valid sign positions. Then,after or&#39;ing the masks for the &#39;+&#39; and &#39;-&#39; we simply verify if they are placedon valid positions.\n In practise the precalculated data has a bit-mask for invalid sign positions,thanks to that validation require just a simple and. The snippet below showsthe schema of the second step.\n const  __m128i  ascii_minus  =  _mm_set1_epi8 ( &#39;-&#39; ); const  __m128i  ascii_plus  =  _mm_set1_epi8 ( &#39;+&#39; ); // ... const  __m128i  bytemask_plus  =  _mm_cmpeq_epi8 ( input ,  ascii_plus ); const  __m128i  bytemask_minus  =  _mm_cmpeq_epi8 ( input ,  ascii_minus ); const  __m128i  bytemask_sign  =  _mm_or_si128 ( bytemask_plus ,  bytemask_minus ); // ... const  uint16_t  sign_mask  =  _mm_movemask_epi8 ( bytemask_sign ); const  uint16_t  span_mask  =  _mm_movemask_epi8 ( bytemask_span ); const  BlockInfo &amp;  bi  =  blocks [ span_mask ]; if  ( sign_mask  &amp;  bi . invalid_sign_mask )  {  throw  std :: runtime_error ( &#34;&#39;+&#39; or &#39;-&#39; at invalid position&#34; ); }\n AVX512VBMI defines the powerful instruction  _mm512_permutex2var_epi8 ( vperm2b)which does a lookup in a 128-byte table using as the indices the seven lowest bits ofeach byte of a ZMM register. Invocation of the intrinsics function is weird:\n const  __m512i  lookup_lo  =  ...  // elements 0..63 const  __m512i  lookup_hi  =  ...  // and 64..127 of the lookup const  __m512i  transformed  =  _mm512_permutex2var_epi8 ( lookup_lo ,  input ,  lookup_hi );\n If the set of valid character fits in the standard ASCII character set, i.e.just seven lowest bits are set, then the validation step might quickly rejectextended ASCII (7th bit set) and then translate the input using singleinvocation of  _mm512_permutex2var_epi8. When full 8-bit inputis allowed, then the instruction has to be called twice with two halvesof a 256-byte lookup.\n An invocation (or two) of this instruction allows to classify  at onceall 64 input bytes into required categories:\n  Category is encoded as a bit at certain position, in sample implementationfollowing schema is used:\n   The span pattern is obtained from the most significant bits by the instruction _mm512_movepi8_mask ( vpmovb2m); it works exactly the same way as pmovmaskb from SSE. The sign pattern is obtained by the instruction _mm512_test_epi8_mask ( vptestmb), by testing bit 7th (mask  0x40).\n  const  __m512i  classes  =  _mm512_permutex2var_epi8 ( class_lo ,  input ,  class_hi ); if  ( _mm512_test_epi8_mask ( classes ,  classes )  !=  uint64_t ( - 1 ))  {  throw  std :: logic_error ( &#34;invalid character&#34; ); } uint64_t  span_mask64  =  _mm512_movepi8_mask ( classes ); uint64_t  sign_mask64  =  _mm512_test_epi8_mask ( classes ,  _mm512_set1_epi8 ( int8_t ( 0x40 )));\n const  __m128i  ascii_minus  =  _mm_set1_epi8 ( &#39;-&#39; ); const  __m128i  ascii_plus  =  _mm_set1_epi8 ( &#39;+&#39; ); // ... const  __m128i  bytemask_plus  =  _mm_cmpeq_epi8 ( input ,  ascii_plus ); const  __m128i  bytemask_minus  =  _mm_cmpeq_epi8 ( input ,  ascii_minus ); const  __m128i  bytemask_sign  =  _mm_or_si128 ( bytemask_plus ,  bytemask_minus ); const  __m128i  bytemask_digit  =  decimal_digits_mask ( input ); const  __m128i  bytemask_span  =  _mm_or_si128 ( bytemask_digit ,  bytemask_sign ); const  uint16_t  span_mask  =  _mm_movemask_epi8 ( bytemask_span ); const  BlockInfo &amp;  bi  =  block_info [ span_mask ];\n  const  uint16_t  sign_mask  =  _mm_movemask_epi8 ( bytemask_sign ); if  ( sign_mask  &amp;  bi . invalid_sign_mask )  {  throw  std :: runtime_error ( &#34;&#39;+&#39; or &#39;-&#39; at invalid position&#34; ); }\n  const  __m128i  ascii_minus  =  _mm_set1_epi8 ( &#39;-&#39; ); const  __m128i  shuffle_digits  =  _mm_loadu_si128 (( const  __m128i * ) bi . shuffle_digits ); const  __m128i  shuffle_signs  =  _mm_loadu_si128 (( const  __m128i * ) bi . shuffle_signs ); const  __m128i  shuffled  =  _mm_shuffle_epi8 ( input ,  shuffle_digits ); const  __m128i  shuffled_signs  =  _mm_shuffle_epi8 ( input ,  shuffle_signs ); const  __m128i  negate_mask  =  _mm_cmpeq_epi8 ( shuffled_signs ,  ascii_minus );\n  if  ( bi . conversion_routine  ==  Conversion :: SSE1Digit )  {  convert_1digit ( shuffled ,  bi . element_count ,  output ); }  else  if  ( bi . conversion_routine  ==  Conversion :: SSE2Digits )  {  convert_2digits_signed ( shuffled ,  negate_mask ,  bi . element_count ,  output ); }  else  if  ( bi . conversion_routine  ==  Conversion :: SSE4Digits )  {  convert_4digits_signed ( shuffled ,  negate_mask ,  bi . element_count ,  output ); }  else  if  ( bi . conversion_routine  ==  Conversion :: SSE8Digits )  {  convert_8digits_signed ( shuffled ,  negate_mask ,  bi . element_count ,  output ); }  else  {  // scalar conversion }\n As it was stated in  Caveats section, a single step of algorithm validates thewhole input vector but rarely converts all bytes from the input. Althoughdetecting digits and sign characters might be considered cheap, we saw thatvalidating against an arbitrary set of separators might be really time\n......", "posttime": "2020-05-29 14:50:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9e\u73b0,series,\u8f6c\u6362", "title": "\u7528SIMD\u5b9e\u73b0\u6574\u6570\u5e8f\u5217\u7684\u89e3\u6790", "title_en": "Parsing Series of Integers with SIMD", "transed": 1, "url": "http://0x80.pl/articles/simd-parsing-int-sequences.html", "via": "", "real_tags": ["\u5b9e\u73b0", "series", "\u8f6c\u6362"]}, {"category": "", "categoryclass": "", "imagename": "1a19830f6e036521ead5ddbd6f25b2b6.png", "infoid": 1004206, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5982\u6211\u4eec\u5728\u8fc7\u53bb\u51e0\u5468\u4e2d\u5206\u4eab\u7684\u90a3\u6837\uff0c\u4e3a\u4e86\u8ba9MagicLeap\u8d70\u4e0a\u6210\u529f\u7684\u9053\u8def\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u91cd\u70b9\u653e\u5728\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u7a7a\u95f4\u8ba1\u7b97\u5e73\u53f0\u4e0a\u3002\n\u6b63\u5982\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u6700\u7ec8\u90fd\u610f\u8bc6\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u7684\u5b9e\u9645\u6280\u672f\u5b8c\u5168\u4e0d\u50cf\u6211\u4eec\u627f\u8bfa\u7684\u90a3\u6837\uff0c\u591a\u5e74\u6765\u4e00\u76f4\u6492\u8c0e\uff0c\u628a\u5bb9\u6613\u4e0a\u5f53\u7684\u8d22\u5927\u6c14\u7c97\u7684\u6295\u8d44\u8005\u5356\u7ed9\u4e86\u4ed6\u4eec\u3002\u6211\u4eec\u7684\u9a97\u5c40\u6b63\u5728\u5206\u5d29\u79bb\u6790\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4ece\u552f\u4e00\u611a\u8822\u5230\u7ed9\u6211\u4eec\u66f4\u591a\u94b1\u7684\u6295\u8d44\u8005\u8eab\u4e0a\u69a8\u53d6\u6700\u540e\u51e0\u7f8e\u5143\uff0c\u65b9\u6cd5\u662f\u91cd\u590d\u201c\u4f01\u4e1a\u201d\u8fd9\u4e2a\u8bcd\uff0c\u7136\u540e\u50cf\u6b27\u6bd4-\u4e07\u00b7\u514b\u8bfa\u6bd4(Obi-wan Kenobi)\u90a3\u6837\u7528\u6211\u4eec\u7684\u624b\u6307\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5927\u91cf\u7684\u65b0\u8d44\u91d1\uff0c\u5e76\u5bf9\u7ed3\u675f\u5173\u952e\u7684\u6218\u7565\u4f01\u4e1a\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u6709\u975e\u5e38\u79ef\u6781\u7684\u5f71\u54cd\u3002\n\u4f60\u4e0d\u4f1a\u76f8\u4fe1\u7684\uff0c\u6211\u4eec\u4e0d\u77e5\u4f55\u6545\u53c8\u7b79\u96c6\u4e863.5\u4ebf\u7f8e\u5143\u3002\u6211\u77e5\u9053\uff0c\u5bf9\u5427\uff1f\n\u5f53\u8463\u4e8b\u4f1a\u548c\u6211\u8ba1\u5212\u6211\u4eec\u6240\u505a\u7684\u6539\u53d8\uff0c\u4ee5\u53caMagic Leap\u5728\u8fd9\u4e2a\u4e13\u6ce8\u7684\u4e0b\u4e00\u4e2a\u9636\u6bb5\u9700\u8981\u4ec0\u4e48\u65f6\uff0c\u6211\u4eec\u53d8\u5f97\u5f88\u6e05\u695a\uff0c\u6211\u7684\u89d2\u8272\u53d1\u751f\u53d8\u5316\u662f\u5f88\u81ea\u7136\u7684\u4e0b\u4e00\u6b65\u3002\n\u6211\u4e0e\u8463\u4e8b\u4f1a\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u81f4\u8ba4\u4e3a\uff0c\u73b0\u5728\u662f\u65f6\u5019\u5f15\u5165\u4e00\u4f4d\u65b0\u7684\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u4ed6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6211\u4eec\u4e13\u6ce8\u4e8e\u4f01\u4e1a\u7a7a\u95f4\u8ba1\u7b97\u7684\u8ba1\u5212\u5546\u4e1a\u5316\u3002\u6211\u4eec\u4e00\u76f4\u5728\u79ef\u6781\u62db\u8058\u8fd9\u4e00\u804c\u4f4d\u7684\u5019\u9009\u4eba\uff0c\u6211\u671f\u5f85\u7740\u5f88\u5feb\u5c31\u80fd\u5206\u4eab\u66f4\u591a\u3002\n\u6211\u4ece2011\u5e74\u5f00\u59cb\u9886\u5bfcMagic Leap(\u4ece\u6211\u7684\u8f66\u5e93\u5f00\u59cb)\uff0c\u6211\u4eec\u5f00\u521b\u4e86\u4e00\u4e2a\u65b0\u9886\u57df\u3002\u4e00\u79cd\u65b0\u7684\u5a92\u4ecb\u3002\u6211\u4eec\u4e00\u8d77\u5b9a\u4e49\u4e86\u8ba1\u7b97\u7684\u672a\u6765\u3002\n\u6ca1\u6709\u4eba\u4f1a\u8bb0\u5f97\u6211\u4eec\u6216\u6211\u4eec\u5728\u2009-\u2009\u4e0a\u505a\u8fc7\u7684\u4efb\u4f55\u4e8b\u60c5\uff0c\u9664\u975eNetflix\u5236\u4f5c\u4e00\u90e8\u50cf\u8d39\u5c14\u97f3\u4e50\u8282\u8fd9\u6837\u7684\u7eaa\u5f55\u7247\u3002\u6211\u559c\u6b22\u90a3\u90e8\u7535\u5f71\u3002\u8fd9\u8ba9\u6211\u89c9\u5f97\u4e5f\u8bb8\u6211\u4eec\u5e94\u8be5\u628aCraigslist\u7684\u5e7f\u544a\u6539\u6210\u201c\u6bd4\u5229\u00b7\u9ea6\u514b\u6cd5\u5170\u7c7b\u578b\u201d\u3002\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4ec0\u4e48\u65f6\u5019\u51fa\u72f1\uff1f\n\u6211\u5bf9\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u7684\u4e00\u5207\u611f\u5230\u60ca\u8bb6\uff0c\u5e76\u671f\u5f85\u7740Magic Leap\u5728\u672a\u6765\u51e0\u5341\u5e74\u5c06\u521b\u9020\u7684\u4e00\u5207\u3002\n\u6211\u5f88\u60ca\u8bb6\uff0c\u6211\u4eec\u7b79\u96c6\u4e8624\u4ebf\u7f8e\u5143\uff0c\u5e76\u8bbe\u6cd5\u5c06\u8fd9\u4e2a\u9a97\u5c40\u5ef6\u957f\u4e867\u5e74\uff0c\u800c\u4e14\u8fd8\u5728\u7ee7\u7eed\u3002\u6211\u4eec\u751a\u81f3\u8bf4\u670d\u4e86\u8c37\u6b4c\u8fdb\u884c\u6295\u8d44\u3002\u8c37\u6b4c\uff01\u90a3\u4e9b\u5bb6\u4f19\u5f88\u806a\u660e\uff01\n\u5728\u6574\u4e2a\u8fc7\u6e21\u671f\u95f4\uff0c\u6211\u5c06\u7ee7\u7eed\u62c5\u4efb\u6211\u4eec\u7684\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u5e76\u6b63\u5728\u4e0e\u8463\u4e8b\u4f1a\u8ba8\u8bba\u5982\u4f55\u7ee7\u7eed\u4ece\u8463\u4e8b\u4f1a\u5c42\u9762\u63d0\u4f9b\u6218\u7565\u548c\u613f\u666f\u3002\u6211\u4ecd\u7136\u5bf9Magic Leap\u7684\u672a\u6765\u611f\u5230\u8d85\u7ea7\u5174\u594b\uff0c\u5e76\u5bf9\u6211\u4eec\u7684\u56e2\u961f\u548c\u4ed6\u4eec\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u624d\u534e\u548c\u80fd\u529b\u6df1\u4fe1\u4e0d\u7591\u3002", "note_en": "As we\u2019ve shared over the last several weeks, in order to set MagicLeap on a course for success, we have pivoted to focus ondelivering a spatial computing platform for enterprise.\n As nearly everyone has finally realized, our actual technology is  nothing at all like what we promised,  lied about for years, and  sold gullible deep-pocketed investors on. Our con is  falling apart at the seams, so we\u2019ll milk the last few dollars out of the only investors dumb enough to give us even more money, by repeating the word \u201centerprise\u201d and doing that thing with our fingers like Obi-Wan Kenobi.\n We have closed significant new funding and have very positivemomentum towards closing key strategic enterprise partnerships.\n You\u2019re not going to believe this but  we somehow raised another $350 million. I know, right?\n As the board and I planned the changes we made and what Magic Leapneeds for this next focused phase, it became clear to us that achange in my role was a natural next step.\n  I discussed this with the board and we have agreed that now is thetime to bring in a new CEO who can help us to commercialize ourfocused plan for spatial computing in enterprise. We have beenactively recruiting candidates for this role and I look forward tosharing more soon.\n  I have been leading Magic Leap since 2011 (starting in my garage).We have created a new field. A new medium. And together we havedefined the future of computing.\n No one will remember us or anything we\u2019ve done\u2009\u2014\u2009unless Netflix makes one of those documentaries like the Fyre Festival one. I love that movie. Which makes me think maybe we should change our Craigslist ad to \u201cBilly McFarland type\u201d. Actually, when does he get out of prison?\n I am amazed at everything we have built and look forward toeverything Magic Leap will create in the decades to come.\n I am amazed that we raised $2.4 billion and have managed to stretch this con out for 7 years and counting. We even convinced Google to invest. Google! Those guys are smart!\n I will remain our CEO through the transition and am in discussionswith the board with regards to how I will continue to providestrategy and vision from a board level. I remain super excitedabout Magic Leap\u2019s future and believe deeply in our team and allof their incredible talent and capabilities.", "posttime": "2020-05-29 14:50:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u58f0\u660e,vc,\u4f01\u4e1a", "title": "\u4ece\u98ce\u6295\u652f\u6301\u7684\u516c\u5173\u672f\u8bed\u7ffb\u8bd1\u6210Magic Leap CEO\u58f0\u660e\u7684\u82f1\u6587", "title_en": "Translation from VC-Backed PR Jargon to English of Magic Leap CEO Statement", "transed": 1, "url": "https://daringfireball.net/2020/05/abovitz_magic_leap_translation", "via": "", "real_tags": ["\u58f0\u660e", "vc", "\u4f01\u4e1a"]}, {"category": "", "categoryclass": "", "imagename": "3d98fcfe1d6029d48bb6ce6c3952c123.png", "infoid": 1004202, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u7b2c\u4e00\u6b21\u542c\u5230\u8ff7\u5e7b\u836f\u8fd9\u4e2a\u8bcd\u7684\u65f6\u5019\uff0c\u5b83\u542c\u8d77\u6765\u5c31\u50cf\u5176\u4ed6\u4ee4\u4eba\u4e0a\u763e\u7684\u6bd2\u54c1\u4e00\u6837\uff0c\u8ba9\u4eba\u53d1\u75af\u3002\u7136\u800c\uff0c\u8ff7\u5e7b\u5242\u4f3c\u4e4e\u6709\u8bb8\u591a\u6cbb\u7597\u6548\u679c\uff0c\u6bd4\u5982\u5e26\u6765\u6301\u4e45\u7684\u6539\u5584\u5e78\u798f\u611f\u548c\u6cbb\u6108\u8bb8\u591a\u5fc3\u7406\u969c\u788d\u3002\n\u6211\u5f88\u597d\u5947\u6211\u5bf9\u6240\u6709\u8fd9\u4e9b\u60c5\u7eea\u7684\u611f\u89c9\uff0c\u4ee5\u53ca\u5927\u8111\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u56de\u60f3\u8d77\u6765\uff0c\u6211\u4e00\u76f4\u662f\u4e00\u4e2a\u76f8\u4fe1\u8089\u773c\u6240\u89c1\u7684\u535a\u7269\u5b66\u5bb6\u3002\u6211\u7684\u60f3\u6cd5\u662f\uff0c\u5316\u5b66\u7269\u8d28\u53ef\u4ee5\u8c03\u8282\u4efb\u4f55\u4f53\u9a8c\uff0c\u5373\u4f7f\u90a3\u662f\u6211\u7684\u60c5\u7eea\u3002\n\u5f53\u6211\u6cae\u4e27\u7684\u65f6\u5019\uff0c\u6211\u7684\u611f\u89c9\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u6211\u65e0\u6cd5\u89e3\u91ca\u90a3\u662f\u4ec0\u4e48\u3002\u53ea\u6709\u865a\u65e0\u548c\u9ebb\u6728\u7684\u611f\u89c9\u3002\n\u8fc8\u514b\u5c14\u00b7\u6ce2\u4f26\u7684\u201c\u5982\u4f55\u6539\u53d8\u4f60\u7684\u60f3\u6cd5\u201d\u4e00\u4e66\u63d0\u4f9b\u4e86\u5f88\u591a\u5173\u4e8e\u6211\u4eec\u5982\u4f55\u4f53\u9a8c\u4e8b\u7269\u3001\u5927\u8111\u5982\u4f55\u5de5\u4f5c\u4ee5\u53ca\u5b83\u4e0e\u8ff7\u5e7b\u5242\u7684\u5173\u7cfb\u7684\u89c1\u89e3\u3002\n\u8ff7\u5e7b\u5242\u662f\u4e00\u7c7b\u5728\u611f\u77e5\u548c\u8ba4\u77e5\u8fc7\u7a0b\u4e2d\u5f15\u8d77\u5fc3\u7406\u53d8\u5316\u7684\u7cbe\u795e\u6d3b\u6027\u7269\u8d28\u3002\u8ff7\u5e7b\u836f\u4e2d\u7684\u5316\u5b66\u7269\u8d28\u4f5c\u7528\u4e8e\u5927\u8111\u7684\u5173\u952e\u533a\u57df\uff0c\u4ece\u800c\u6539\u53d8\u6211\u4eec\u901a\u5e38\u5bf9\u73b0\u5b9e\u7684\u770b\u6cd5\u3002\u867d\u7136\u5b83\u53d6\u51b3\u4e8e\u9662\u843d\uff0c\u4f46\u4e00\u4e9b\u5e38\u89c1\u7684\u4f53\u9a8c\u662f\u89c6\u89c9\u6539\u53d8\uff0c\u795e\u79d8/\u5b97\u6559\u4f53\u9a8c\u3002\n\u4e00\u4e9b\u5e38\u7528\u7684\u8ff7\u5e7b\u5242\u6709\u88f8\u76d6\u83c7\u7d20\u3001LSD\u548cDMT\u3002\u4f17\u6240\u5468\u77e5\uff0c\u88f8\u76d6\u83c7\u7d20\u5b58\u5728\u4e8e\u9b54\u672f\u8611\u83c7\u4e2d\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u81ea\u7136\u5b58\u5728\u7684\u7269\u8d28\uff0c\u800cLSD\u662f\u4e00\u79cd\u4eba\u9020\u7269\u8d28(DMT\u53ef\u4ee5\u5408\u6210\uff0c\u4f46\u4e5f\u5728\u8bb8\u591a\u52a8\u690d\u7269\u4e2d\u53d1\u73b0)\u3002\n\u867d\u7136\u8bb8\u591a\u8ff7\u5e7b\u5242\u5728\u4e16\u754c\u8303\u56f4\u5185\u662f\u975e\u6cd5\u7684(\u56e0\u4e3a\u5b83\u7684\u5386\u53f2)\uff0c\u4f46\u6709\u5f88\u591a\u5173\u4e8e\u8ff7\u5e7b\u5242\u5982\u4f55\u4f5c\u7528\u4e8e\u5927\u8111\u548c\u4e00\u4e2a\u4eba\u7684\u7ecf\u5386\u7684\u7814\u7a76\u3002\n\u6839\u636e\u5982\u4f55\u6539\u53d8\u4f60\u7684\u60f3\u6cd5\uff0c\u81ea50\u5e74\u4ee3\u521d\u5f00\u59cb\u8ff7\u5e7b\u836f\u7269\u7814\u7a76\u523010\u5e74\u4ee3\u521d\uff0c\u8ff7\u5e7b\u836f\u7269\u4e00\u76f4\u5728\u6cbb\u7597\u4e0d\u540c\u7c7b\u578b\u7684\u75be\u75c5\uff0c\u5305\u62ec\u6291\u90c1\u3001\u6210\u763e\u3001\u5f3a\u8feb\u75c7\u3001\u7cbe\u795e\u5206\u88c2\u75c7\u3001\u81ea\u95ed\u75c7\u548c\u4e34\u7ec8\u7126\u8651\u3002\n\u65af\u5766\u5c3c\u65af\u62c9\u592b\u00b7\u683c\u6d1b\u592b(Stanislav Grof)\u662f\u5229\u7528\u6539\u53d8\u7684\u610f\u8bc6\u72b6\u6001\u6765\u6cbb\u7597\u3001\u6210\u957f\u548c\u6d1e\u5bdf\u7684\u5148\u9a71\u7814\u7a76\u8005\uff0c\u4ed6\u66fe\u58f0\u79f0\u8ff7\u5e7b\u836f\u7684\u4ef7\u503c\u53ef\u4ee5\u4e0e\u663e\u5fae\u955c\u5bf9\u751f\u7269\u5b66\u6216\u671b\u8fdc\u955c\u5bf9\u5929\u6587\u5b66\u7684\u4ef7\u503c\u76f8\u5ab2\u7f8e\u3002\n\u4f26\u6566\u5e1d\u56fd\u7406\u5de5\u5b66\u9662\u7684Robin Carhart-Harris\u535a\u58eb\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u53d1\u73b0\uff0c\u88f8\u76d6\u83c7\u7d20\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u8ff7\u5e7b\u7269\u8d28\uff0c\u5728\u5927\u8111\u4e2d\u540d\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u7684\u7f51\u7edc\u4e2d\u964d\u4f4e\u5927\u8111\u6d3b\u52a8\u3002\n\u8fd9\u4e2a\u7f51\u7edc\u4f5c\u4e3a\u5927\u8111\u7684\u4e2d\u67a2\uff0c\u5c06\u8fdb\u5316\u4e0a\u8f83\u65b0\u7684\u5927\u8111\u76ae\u5c42\u90e8\u5206\u4e0e\u8fdb\u5316\u4e0a\u8f83\u8001\u7684\u8d1f\u8d23\u8bb0\u5fc6\u3001\u60c5\u611f\u7b49\u7684\u5927\u8111\u90e8\u5206\u8fde\u63a5\u8d77\u6765\u3002\nDMN\u5728\u6211\u4eec\u4ece\u4e8b\u5143\u8ba4\u77e5\u8fc7\u7a0b\u65f6\u88ab\u6fc0\u6d3b\uff0c\u6bd4\u5982\u6784\u5efa\u81ea\u6211\u6216\u81ea\u6211\uff0c\u601d\u8003\u4e00\u4e2a\u4eba\u7684\u81ea\u6211\u3001\u4ed6\u4eba\u3001\u8fc7\u53bb\u548c\u672a\u6765\u3002\u5b83\u521b\u9020\u4e86\u4e00\u79cd\u81ea\u6211\u610f\u8bc6\uff0c\u8ba9\u4eba\u7c7b\u6709\u80fd\u529b\u60f3\u8c61\u6210\u4e3a\u522b\u4eba\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u8fd9\u4e9b\u529f\u80fd\u4f3c\u4e4e\u53ea\u5c5e\u4e8e\u4eba\u7c7b\uff0c\u5c24\u5176\u662f\u6210\u5e74\u4eba\u3002\n\u8fd9\u5c31\u662f\u4f60\u7684\u601d\u7eea\u5f98\u5f8a\u7684\u5730\u65b9\u3002\u8fd9\u5c31\u662f\u5f53\u4f60\u6c89\u601d\u65f6\u6fc0\u6d3b\u7684\u4e1c\u897f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5fc3\u7406\u5b66\u5bb6\u5df2\u7ecf\u786e\u5b9a\u4e86\u4e0d\u5feb\u4e50\u4e0e\u8d70\u795e\u7684\u65f6\u95f4\u4e4b\u95f4\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\uff0c\u8fd9\u662f\u7531DMN\u6267\u884c\u7684\u3002\n\u5f53\u6211\u4eec\u9677\u5165\u6291\u90c1\u601d\u7ef4\u6a21\u5f0f\u65f6\uff0c\u6211\u4eec\u4f1a\u8fc7\u591a\u5730\u6fc0\u6d3b\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u3002\u6291\u90c1\u4f1a\u8ba9\u4e00\u4e2a\u4eba\u7684\u81ea\u6211\u53d8\u5f97\u6bd4\u5e94\u6709\u7684\u66f4\u5927\uff0c\u4ee5\u81f3\u4e8e\u4f60\u4e0e\u73b0\u5b9e\u8131\u8282\u3002\n\u4e5f\u8bb8\u6211\u60f3\u5f97\u592a\u591a\u4e86\uff0c\u770b\u4e0d\u6e05\u5916\u9762\u7684\u4e16\u754c\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u56de\u8fc7\u5934\u6765\u770b\uff0c\u8fd9\u4e2a\u63cf\u8ff0\u4f3c\u4e4e\u662f\u5bf9\u7684\u3002\u6211\u7684\u5927\u8111\u91cc\u53ef\u80fd\u6709\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u7528\u6765\u56fa\u5b9a\u6211\u5bf9\u73b0\u5b9e\u7684\u611f\u77e5\u3002\n\u88f8\u76d6\u83c7\u7d20\u4f3c\u4e4e\u80fd\u663e\u8457\u964d\u4f4eDMN\u7684\u6d3b\u6027\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u4e2a\u4eba\u81ea\u6211\u7684\u6682\u65f6\u89e3\u4f53\uff0c\u8fb9\u754c\u7ebf\u7684\u611f\u89c9\u6d88\u5931\u4e86\uff0c\u5c31\u50cf\u4f60\u4e0e\u4e16\u754c\u5176\u4ed6\u4eba\u4e4b\u95f4\u6ca1\u6709\u5206\u79bb\u4e00\u6837\u3002\n\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins)\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u8bb8\u591a\u901a\u8fc7\u670d\u7528\u8ff7\u5e7b\u836f\u6765\u5b8c\u6210\u795e\u79d8\u4f53\u9a8c\u7684\u4eba\u62a5\u544a\u79f0\uff0c\u4ed6\u4eec\u5bf9\u4f53\u9a8c\u7684\u5f00\u653e\u7a0b\u5ea6\u4ece\u957f\u8fdc\u6765\u770b\u90fd\u6709\u6240\u63d0\u9ad8\uff0c\u5e78\u798f\u611f\u4e5f\u6709\u6240\u6539\u5584\u3002\n\u8fd9\u8868\u660e\uff0c\u5728\u5927\u8111\u91cd\u65b0\u5e03\u7ebf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5927\u8111\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\uff0c\u8fd9\u4e9b\u53d8\u5316\u5bfc\u81f4\u4e86\u957f\u671f\u7684\u7ed3\u679c\u3002\n\u4efb\u4f55\u4eba\u7684\u5927\u8111\u90fd\u6709\u4e00\u79cd\u53eb\u505a\u795e\u7ecf\u53ef\u5851\u6027\u7684\u80fd\u529b\uff0c\u5b83\u5141\u8bb8\u5927\u8111\u5728\u4e00\u751f\u4e2d\u6539\u53d8\u548c\u91cd\u7ec4\u81ea\u5df1\u3002\u4f60\u7684\u5927\u8111\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u5b66\u4e60\uff0c\u4f8b\u5982\uff0c\u4f60\u611f\u77e5\u4e16\u754c\u7684\u65b9\u5f0f\u603b\u662f\u6709\u53ef\u80fd\u6539\u53d8\u7684\u3002\n\u4e3a\u4e86\u8ba9\u5927\u8111\u5b66\u4e60\uff0c\u5b83\u9700\u8981\u65b0\u7684\u795e\u7ecf\u56de\u8def\u7684\u5f62\u6210\u3002\u4f60\u4f7f\u7528\u7684\u795e\u7ecf\u56de\u8def\u8d8a\u591a\uff0c\u5b83\u4eec\u5c31\u8d8a\u5f3a\u3002\u8ff7\u5e7b\u836f\u4f3c\u4e4e\u4f7f\u5927\u8111\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u6b64\u66f4\u5bb9\u6613\u6446\u8131\u76f8\u540c\u7684\u6a21\u5f0f\uff0c\u5e76\u5728\u5927\u8111\u4e2d\u5f62\u6210\u65b0\u7684\u8fde\u63a5\u3002\u8ff7\u5e7b\u836f\u7684\u8fd9\u4e00\u529f\u80fd\u53ef\u80fd\u5c31\u662f\u8ff7\u5e7b\u4f53\u9a8c\u8ba9\u4eba\u4eec\u601d\u60f3\u66f4\u5f00\u653e\u3001\u66f4\u5feb\u4e50\u7684\u539f\u56e0\u3002\n\u8fd9\u79cd\u8ba4\u77e5\u72b6\u6001\u7684\u5149\u8c31\u89e3\u91ca\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u71b5\u662f\u5982\u4f55\u4e0e\u4e0d\u540c\u7684\u7cbe\u795e\u72b6\u51b5\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u3002\n\u5982\u679c\u4f60\u8d70\u5230\u5de6\u8fb9\uff0c\u5728\u9ad8\u71b5\u7aef(\u66f4\u7075\u6d3b\u7684\u72b6\u6001)\uff0c\u6709\u8ff7\u5e7b\u72b6\u6001\u3001\u5a74\u513f\u610f\u8bc6\u548c\u53d1\u6563/\u521b\u9020\u6027\u601d\u7ef4\u7b49\u3002\n\u5728\u201c\u54f2\u5b66\u5a74\u513f\u201d\u4e2d\uff0c\u6208\u666e\u5c3c\u514b\u535a\u58eb\u79f0\u8fd9\u4e9b\u72b6\u6001\u4e3a\u201c\u706f\u7b3c\u610f\u8bc6\u201d\u3002\u5f53\u4f60\u7ad9\u5728\u8fd9\u4e00\u5934\u65f6\uff0c\u4f60\u5c31\u50cf\u4e2a\u5b69\u5b50\u3002\u4f60\u6ca1\u6709\u4efb\u4f55\u8fc7\u6ee4\u5668\u6765\u6539\u53d8\u548c\u4f18\u5316\u4f60\u5e7f\u64ad\u7684\u73b0\u5b9e\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b69\u5b50\u4eec\u4f3c\u4e4e\u603b\u662f\u6bd4\u6210\u5e74\u4eba\u66f4\u6709\u521b\u9020\u529b\u3002\u4ed6\u4eec\u89c6\u4e16\u754c\u4e3a\u4ed6\u4eec\u7684\u6e38\u4e50\u573a\u3002\u6574\u4e2a\u5b87\u5b99\u90fd\u5728\u90a3\u91cc\u7b49\u7740\u4ed6\u4eec\u53bb\u63a2\u7d22\u3002\u4f5c\u4e3a\u6210\u5e74\u4eba\uff0c\u6211\u4eec\u8bd5\u56fe\u50cf\u4ed6\u4eec\u4e00\u6837\u5bcc\u6709\u521b\u9020\u529b\uff0c\u4f46\u521b\u9020\u529b\u7684\u611f\u89c9\u66f4\u96be\u5b9e\u73b0\u3002\n\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8ff7\u5e7b\u836f\u80fd\u8ba9\u4f60\u5728\u77ed\u65f6\u95f4\u5185\u6062\u590d\u7ae5\u5e74\u65f6\u7684\u6837\u5b50\u3002\u56de\u5230\u90a3\u4e2a\u65f6\u4ee3\uff0c\u4f60\u81ea\u7136\u66f4\u6709\u521b\u9020\u529b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u80fd\u628a\u4e16\u754c\u770b\u4f5c\u4f60\u7684\u6e38\u4e50\u573a\uff0c\u4e5f\u8bb8\u4f60\u5c31\u66f4\u5bb9\u6613\u5230\u8fbe\u9ad8\u71b5\u7684\u4e00\u7aef\u3002\u4f60\u662f?\n\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u4e00\u76f4\u8d70\u5230\u5149\u8c31\u7684\u5c3d\u5934\uff0c\u6211\u4eec\u5c31\u4f1a\u6709\u4e0a\u763e\u3001\u6291\u90c1\u3001\u5f3a\u8feb\u75c7\u548c\u50f5\u5316/\u72ed\u9698\u7684\u601d\u7ef4\u3002\n\u8fd9\u4e00\u7aef\u66f4\u63a5\u8fd1\u6210\u5e74\u4eba\u7684\u6b63\u5e38\u6e05\u9192\u610f\u8bc6\uff0c\u6208\u666e\u5c3c\u514b\u535a\u58eb\u79f0\u4e4b\u4e3a\u805a\u5149\u706f\u610f\u8bc6\u3002\u8fd9\u79cd\u72b6\u6001\u8ba9\u6211\u4eec\u53ef\u4ee5\u505a\u6210\u4eba\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u91cd\u8981\u7684\u4e8b\u60c5\u4e0a\uff0c\u6216\u8005\u4ece\u8fc7\u53bb\u4e2d\u5438\u53d6\u6559\u8bad\u3002\u8fd9\u4e9b\u529f\u80fd\u5bf9\u4e8e\u5b9e\u73b0\u6211\u4eec\u7684\u957f\u671f\u76ee\u6807\u81f3\u5173\u91cd\u8981\uff0c\u53ef\u80fd\u4e5f\u662f\u6211\u4eec\u6210\u4e3a\u4eba\u7c7b\u7684\u539f\u56e0\u3002\n\u7136\u800c\uff0c\u5f53\u5b83\u8d70\u5f97\u592a\u8fdc\u65f6\uff0c\u4f60\u7684\u5927\u8111\u5c31\u4f1a\u51fa\u73b0\u8fc7\u591a\u7684\u79e9\u5e8f\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u5fc3\u7406\u969c\u788d\u3002\u4f8b\u5982\uff0c\u6291\u90c1\u75c7\u53ef\u80fd\u662f\u8fc7\u5ea6\u6d3b\u8dc3\u7684\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u7684\u7ed3\u679c\uff0c\u5b83\u901a\u8fc7\u5c06\u6211\u4eec\u7f6e\u4e8e\u7834\u574f\u6027\u601d\u7ef4\u7684\u5faa\u73af\u4e2d\uff0c\u4f7f\u6211\u4eec\u4e0e\u4e16\u754c\u8131\u8282\u3002\n\u5e1d\u56fd\u7406\u5de5\u5b66\u9662\u7684\u5b9e\u9a8c\u5ba4\u4f7f\u7528\u8111\u90e8\u626b\u63cf\u6280\u672f\u6765\u89c2\u5bdf\u5f53\u4e00\u4e2a\u4eba\u6444\u5165\u88f8\u76d6\u83c7\u7d20\u65f6\uff0c\u4ed6\u7684\u5927\u8111\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u89c6\u89c9\u6548\u679c\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\uff0c\u7f8e\u8f6e\u7f8e\u5942\u3002\n\u8fd9\u8868\u660e\uff0c\u9ad8\u71b5\u5927\u8111\u7684DMN\u88ab\u5206\u89e3\uff0c\u800c\u5927\u8111\u7684\u5176\u4ed6\u901a\u5e38\u4e0d\u76f8\u8fde\u7684\u90e8\u5206\u53d8\u5f97\u66f4\u52a0\u6574\u5408\uff0c\u5728\u5927\u8111\u4e2d\u5f62\u6210\u4e86\u4e00\u7cfb\u5217\u65b0\u7684\u8fde\u63a5\u3002\u65b0\u7684\u8054\u7cfb\u53ef\u80fd\u4f1a\u6fc0\u53d1\u66f4\u9ad8\u6c34\u5e73\u7684\u521b\u9020\u529b\uff0c\u4ece\u800c\u5728\u5927\u8111\u4e2d\u5f62\u6210\u65b0\u7684\u610f\u4e49\u3002\n\u5f53\u8fd9\u79cd\u8ff7\u5e7b\u4f53\u9a8c\u53d1\u751f\u65f6\uff0c\u4f60\u7684\u81ea\u6211\u5c31\u6d88\u5931\u4e86\uff0c\u4f60\u7684\u5934\u8111\u5c31\u6269\u5c55\u4e86\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u4f53\u9a8c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u662f\u53ef\u4ee5\u83b7\u5f97\u7684\u3002\u4e00\u4e9b\u7c7b\u4f3c\u7684\u4f53\u9a8c\u53ef\u80fd\u662f\u656c\u754f\u3001\u611f\u6069\u3001\u5f00\u653e\u7684\u5fc3\u6001\u548c\u8054\u7cfb\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5927\u81ea\u7136\u4f1a\u5e2e\u52a9\u4f60\uff0c\u4e5f\u4f1a\u7ed9\u4f60\u5e26\u6765\u60ca\u559c\u3002\u60f3\u8c61\u4e00\u4e0b\u4f60\u89c1\u8fc7\u7684\u6700\u4f1f\u5927\u7684\u666f\u8272\u4e4b\u4e00\u3002\u5f53\u4f60\u770b\u5230\u7f8e\u666f\u65f6\uff0c\u4f60\u4f1a\u611f\u5230\u656c\u754f\u3002\u4f60\u4f1a\u610f\u8bc6\u5230\u4f60\u4e0e\u5927\u81ea\u7136\u606f\u606f\u76f8\u5173\u3002\u4f60\u4f1a\u60c5\u4e0d\u81ea\u7981\u5730\u628a\u81ea\u5df1\u770b\u4f5c\u4e16\u754c\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8fd9\u4e0e\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e16\u754c\u4e2d\u5fc3\u662f\u76f8\u53cd\u7684\u3002\u8fd9\u5c31\u662f\u4f60\u7684\u81ea\u8d1f\u6240\u505a\u7684\u3002\n\u5f53\u6211\u53bb\u770b\u597d\u7684\u97f3\u4e50\u4f1a\u65f6\uff0c\u6211\u4e2a\u4eba\u4e5f\u611f\u89c9\u5230\u4e86\u8fd9\u79cd\u81ea\u6211\u7684\u74e6\u89e3\u3002\u73b0\u573a\u7684\u58f0\u97f3\u548c\u7f8e\u5b66\u603b\u662f\u8ba9\u6211\u656c\u754f\u4e0d\u5df2\u3002\u6211\u6c89\u6d78\u5728\u8fd9\u4e00\u573a\u666f\u4e2d\u3002\u5269\u4e0b\u7684\u662f\u58f0\u97f3\u548c\u76f8\u4e92\u5173\u8054\u7684\u611f\u89c9\u3002\u6211\u5f3a\u70c8\u5730\u611f\u89c9\u5230\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u4eba\u4eec\u53ef\u4ee5\u968f\u65f6\u5728\u4ed6\u4eec\u7684Spotify(\u6216Apple Music)\u4e0a\u542c\u97f3\u4e50\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4ecd\u7136\u53bb\u542c\u6f14\u5531\u4f1a\u3002\n\u90a3\u5f53\u4f60\u5fc3\u5b58\u611f\u6fc0\u7684\u65f6\u5019\u5462\uff1f\u4f60\u5bf9\u4eba\u4eec\u66f4\u52a0\u5f00\u653e\u4e86\u3002\u4f60\u4f1a\u611f\u89c9\u5230\u4e0e\u5176\u4ed6\u4eba\u7684\u8054\u7cfb\u3002\u4f60\u610f\u8bc6\u5230\u4f60\u7684\u751f\u6d3b\u4e0e\u4ed6\u4eba\u7ea0\u7f20\u4e0d\u6e05\u3002\u6211\u7ecf\u5e38\u542c\u4eba\u8bf4\uff0c\u611f\u6069\u662f\u6cbb\u7597\u6291\u90c1\u601d\u60f3\u7684\u6700\u6d41\u884c\u7684\u89e3\u6bd2\u5242\u4e4b\u4e00\u3002\u8fd9\u4f3c\u4e4e\u662f\u5b83\u80cc\u540e\u7684\u673a\u5236\u3002\n\u7136\u540e\uff0c\u5c31\u50cf\u8ff7\u5e7b\u5242\u4e00\u6837\uff0c\u4e30\u5bcc\u8fd9\u4e9b\u7cbe\u795e\u54c1\u8d28\u53ef\u80fd\u662f\u589e\u5f3a\u5e78\u798f\u611f\u3001\u589e\u5f3a\u521b\u9020\u529b\u6216\u6cbb\u7597\u6291\u90c1\u75c7\u7b49\u50f5\u786c\u7cbe\u795e\u969c\u788d\u7684\u5173\u952e\u3002\n\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u6240\u8981\u505a\u7684\u4e00\u4ef6\u5c0f\u4e8b\u4f46\u610f\u4e49\u91cd\u5927\u7684\u4e8b\u60c5\u53ef\u80fd\u662f\u62e5\u62b1\u90a3\u4e9b\u80fd\u62d3\u5c55\u4f60\u601d\u7ef4\u7684\u611f\u89c9\uff0c\u6bd4\u5982\u611f\u6069\u3001\u7231\u3001\u656c\u754f\u6216\u8054\u7cfb\u3002\n\u5fc3\u7406\u5b66\u5bb6\u91cc\u514b\u00b7\u6c49\u68ee\u535a\u58eb\u5728\u4ed6\u5173\u4e8e\u79ef\u6781\u795e\u7ecf\u53ef\u5851\u6027\u8bad\u7ec3\u7684\u4e66\u201c\u54c8\u5fb7\u6797\u5e78\u798f\u201d\u4e2d\u8bf4\uff0c\n\u201c\u5e73\u5747\u800c\u8a00\uff0c\u4e00\u4e2a\u4eba\u5927\u7ea6\u4e09\u5206\u4e4b\u4e00\u7684\u529b\u91cf\u662f\u4e0e\u751f\u4ff1\u6765\u7684\uff0c\u4e0e\u751f\u4ff1\u6765\u7684\u6c14\u8d28\u3001\u624d\u534e\u3001\u60c5\u7eea\u548c\u6027\u683c\u3002\u53e6\u5916\u4e09\u5206\u4e4b\u4e8c\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u5c55\u8d77\u6765\u7684\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u79cd\u690d\u2026\u6765\u5f97\u5230\u5b83\u4eec\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u53d1\u5c55\u5feb\u4e50\u548c\u5176\u4ed6\u5185\u5728\u529b\u91cf\uff0c\u4ece\u800c\u4fc3\u8fdb\u6210\u5c31\u611f\u3001\u7231\u5fc3\u3001\u6548\u7387\u3001\u667a\u6167\u548c\u5185\u5fc3\u7684\u5e73\u9759\u3002\u201c\u3002\n\u5176\u4ed6\u5de5\u5177\u53ef\u4ee5\u662f\u51a5\u60f3\u4e4b\u7c7b\u7684\u7ec3\u4e60\uff0c\u8ba9\u4f60\u4f53\u9a8c\u4e00\u79cd\u6539\u53d8\u7684\u610f\u8bc6\u72b6\u6001\u3002\u4e8b\u5b9e\u4e0a\uff0c\u957f\u671f\u51a5\u60f3\u7684\u4eba\u7684\u5927\u8111\u770b\u8d77\u6765\u5f88\u50cf\u670d\u7528\u88f8\u76d6\u83c7\u7d20\u7684\u4eba\u7684\u5927\u8111\u3002\u51a5\u60f3\u4f3c\u4e4e\u5c31\u50cf\u8ff7\u5e7b\u5242\u4e00\u6837\u80fd\u51cf\u5c11DMN\u7684\u6d3b\u52a8\u3002\n\u867d\u7136\u8ff7\u5e7b\u5242\u4f3c\u4e4e\u4e0d\u4f1a\u4e0a\u763e\uff0c\u800c\u4e14\u5728\u6539\u5584\u5e78\u798f\u611f\u65b9\u9762\u975e\u5e38\u6709\u6548\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u4e13\u4e1a\u533b\u751f\u6216\u6cbb\u7597\u5e08\u7684\u5e2e\u52a9\uff0c\u670d\u7528\u8ff7\u5e7b\u5242\u4ecd\u7136\u6709\u53ef\u80fd\u51fa\u73b0\u7cdf\u7cd5\u7684\u8ff7\u5e7b\u7ecf\u5386\u6216\u7cdf\u7cd5\u7684\u65c5\u884c\u3002\n\u7136\u800c\uff0c\u7814\u7a76\u8868\u660e\uff0c\u5982\u679c\u6709\u5408\u9002\u7684\u4e13\u4e1a\u4eba\u58eb\u966a\u540c\uff0c\u7cdf\u7cd5\u7ecf\u5386\u7684\u53ef\u80fd\u6027\u6781\u4f4e\u3002(\u5e03\u666f\u548c\u5e03\u666f\u7684\u6982\u5ff5\u5bf9\u4e8e\u4efb\u4f55\u7531\u4e13\u4e1a\u6cbb\u7597\u5e08\u521b\u9020\u7684\u8ff7\u5e7b\u65c5\u884c\u6765\u8bf4\u90fd\u662f\u5f88\u91cd\u8981\u7684\u4e00\u4ef6\u4e8b)\n\u8ff7\u5e7b\u836f\u9886\u57df\u7684\u7814\u7a76\u4eba\u5458\u4ecd\u9700\u901a\u8fc7\u8bb8\u591a\u8bd5\u9a8c\u624d\u80fd\u4f7f\u836f\u7269\u83b7\u5f97\u6279\u51c6\u3002\u4f46\u662f\uff0c\u6211\u671f\u5f85\u7740\u8ff7\u5e7b\u5242\u548c\u6539\u53d8\u7684\u610f\u8bc6\u72b6\u6001\u53d8\u5f97\u4eba\u4eba\u90fd\u80fd\u63a5\u89e6\u5230\u7684\u90a3\u4e00\u5929\u3002\n\u5982\u679c\u4f60\u6ca1\u6709\u8bfb\u8fc7\uff0c\u60f3\u4e86\u89e3\u8ff7\u5e7b\u836f\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u8fc8\u514b\u5c14\u00b7\u6ce2\u4f26\u7684\u201c\u5982\u4f55\u6539\u53d8\u4f60\u7684\u60f3\u6cd5\u201d\u3002\u5b83\u6db5\u76d6\u4e86\u6211\u5728\u8fd9\u91cc\u63d0\u5230\u7684\u5927\u591a\u6570\u60f3\u6cd5\uff0c\u6b64\u5916\u8fd8\u6709\u66f4\u591a\u5173\u4e8e\u795e\u7ecf\u79d1\u5b66\u7684\u7ec6\u8282\uff0c\u8ff7\u5e7b\u7814\u7a76\u7684\u5386\u53f2\uff0c\u4ed6\u81ea\u5df1\u7684\u8ff7\u5e7b\u4e4b\u65c5\uff0c\u7b49\u7b49\u3002", "note_en": "When I first heard the word &#34;psychedelics,&#34; it just sounded like other addictive drugs that make people go crazy. However, psychedelics seem to have many therapeutic effects such as causing lasting improved well-being and curing many psychological disorders.\n I got curious about how I feel all those emotions and what&#39;s happening in the brain. In retrospect, I have been always a naturalist who believes in what I can see physically. My thought was that chemicals can mediate any experience even if that&#39;s my emotions.\n When I was depressed, the feeling was different, but I didn&#39;t have any explanation as to what that was. Just the sense of nothingness and stuckness.\n Michael Pollan\u2019s   How to Change Your Mind offered a lot of insights into one way of understanding how we experience things, how the brain works, and its relationship with psychedelics.\n    Psychedelics are a class of psychoactive substances that cause psychological changes in perception and cognitive processes. The chemicals in psychedelics drugs work on key regions in the brain to alter our &#34;usual&#34; version of reality. Although it depends on the compound, some of the common experiences are visual alteration, mystical/religious experience.\n Some of the commonly used psychedelics are psilocybin, LSD, and DMT. Psilocybin is known to be found in magic mushrooms as it is a naturally occurring substance while LSD is a man-made substance (DMT can be synthesized but it is also found in many plants and animals).\n Although many psychedelics are illegal worldwide ( because of its history), there are many pieces of research on how psychedelics act on the brain and one&#39;s experience.\n Psychedelics had been treating different types of conditions including depression, addiction, OCD, schizophrenia, autism, and end-of-life anxiety since the beginning of psychedelics research in the early 50s into the early 10s, according to   How to Change Your Mind.\n Stanislav Grof\u2014a pioneering researcher of the use of altered states of consciousness for purposes of healing, growth, and insight\u2014once claimed that  the value of psychedelics is  &#34;comparable to the value the microscope has for biology or the telescope has for astronomy.&#34;\n Dr. Robin Carhart-Harris and his colleagues at the Imperial College London  found that  psilocybin, one of the common psychedelic substances, lowers brain activity in a network in the brain called the Default Mode Network.\n The network works as a hub of the brain connecting parts of the evolutionarily newer cerebral cortex to evolutionarily older parts of the brain that are responsible for memory, emotion, etc...\n The DMN activates when we engage in metacognitive processes such as the construction of the self or ego and thinking about one&#39;s self, others, the past, and the future. It creates a sense of self and gives humans the ability to imagine what it is like to be someone else. Those functions seem to exclusively belong to humans, especially adults.\n This is where your mind wanders. This is what you activate when you ruminate. In fact, psychologists have identified  a strong correlation between unhappiness and time spent in mind wandering, which is performed by the DMN.\n We&#39;re activating the default mode network too much when we engage in depressive thinking patterns.  Depression makes one&#39;s self more enlarged than it should be to the point where it disconnects you from reality.\n Maybe I was thinking about myself too much and couldn&#39;t see what&#39;s present in the outside world. Looking back, the description seems about right. I might have had a filter in my brain that fixated my perception of reality.\n Psilocybin seems to reduce activity in the DMN sharply. What follows is the temporary dissolution of one&#39;s ego, and the sense of boundaries disappears like there is no separation between you and the rest of the world.\n A study at Johns Hopkins  found that many people who had &#34;complete mystical experiences&#34; by taking psychedelics reported  long-term increases in their &#34;openness to experience&#34; and improvements in well-being.\n It suggests that in the process of rewiring the brain, some changes happen in the brain that leads to long-term results.\n Anyone&#39;s brain has this ability called  neural plasticity that allows the brain to change and reorganize itself throughout one&#39;s life. Your brain never stops learning and changes in, for example, the way you perceive the world, are always possible.\n For the brain to learn, it requires new formations of neural circuits. The more you use the same neural circuits, the stronger they get.  Psychedelics seem to make the brain more &#34;flexible&#34; so that it gets easier to get out of the same patterns and to form the new connections in the brain. This function of psychedelics might be the reason why the psychedelic experience allows people to be more open-minded and happier.\n  This spectrum of cognitive states explains how different levels of &#34;entropy&#34; are linked to different mental conditions.\n    If you go to the left, on the high-entropy end (more flexible states), there are  psychedelic state, infant consciousness, and divergent/creative thinking among others.\n In   The Philosophical Baby, Dr. Gopnik calls these states  the lantern consciousness. When you&#39;re on this end, you&#39;re like a child. You don&#39;t have any filter that alters and optimizes the reality you broadcast. Children seem always more creative than adults, sadly. They see the world as their playground. The whole universe is there for them to explore. We, as adults, try to get creative like them, but the feeling of creativity is harder to achieve.\n In a way, psychedelics make you be your childhood self again for a short amount of time. Back to the time, you were naturally more creative. In other words, if you can see the world as your playground, it is perhaps easier for you to reach the high-entropy end. Do you?\n On the more low-entropy end, on the other hand, we have  addiction, depression, OCD, and rigid/narrow thinking if we go all the way to the end of the spectrum.\n This end is closer to adults&#39; normal waking consciousness, which Dr. Gopnik calls the spotlight consciousness. This state lets us do our adult things like focusing attention on what&#39;s important or learning from the past. Those functions are essential for achieving our long-term goals and probably what makes us humans.\n However, when it goes too far to the point you have an excess of order in the brain, that causes psychological disorders.  Depression, for instance, might be a result of a hyperactive default mode network, which that disconnects us from the world by putting us in loops of destructive thinking.\n  The Imperial College lab used brain scanning technologies to see what&#39;s going on in one&#39;s brain when the individual takes in psilocybin.  The visualization is stunning and beautiful.\n   This shows that  a high-entropy brain&#39;s DMN gets disintegrated while other parts of the brain that are usually not connected, get more integrated making a new series of connections in the brain.  The new connections might be sourcing the increased level of creativity that form new meanings in the brain.\n When this psychedelic experience happens, your ego disappears and your mind expands. This type of experience is accessible to everyone to some degree. Some of the similar experiences could be a sense of awe, gratitude, open-mindedness, connection.\n That&#39;s why nature helps and amazes you. Imagine one of the greatest views you&#39;ve seen. When you encounter a great view, you go &#34;Awe.&#34; You realize you&#39;re connected to nature. You can&#39;t help but see yourself as a tiny part of the world. That is the opposite of thinking yourself as the center of the world. That&#39;s what your ego does.\n I personally feel this dissolution of self when I go see good music concerts as well. The live sound and aesthetics never fail me to go &#34;Awe.&#34; I get absorbed in the scene. What&#39;s left is the sound and the sense of interconnectedness. I strongly feel this is why people still go to concerts when they can listen to music anytime on their Spotify (or Apple Music).\n What about when you are grateful? You&#39;re more open to people. You feel the connection with other people. You realize your life is greatly entangled with others. I often hear being grateful as one of the most popular antidotes to depressive thinking. This seems to be the mechanism behind it.\n Then, like psychedelics do,  enriching those mental qualities might be the key for enhanced well-being, boosted creativity, or curing rigid mental disorders such as depression.\n A small but significant thing to do to serve the goal could be embracing those feelings that expand your mind like gratitude, love, awe, or connectedness.\n The psychologist Dr. Rick Hanson tells in his book on positive neural plasticity training,   Hardwiring Happiness, that\n \u201cOn average, about a third of a person\u2019s strengths are innate, built into his or her genetically based temperament, talents, mood, and personality. The other two-thirds are developed over time. You get them by growing them\u2026 it means that we can develop the happiness and other inner strengths that foster fulfillment, love, effectiveness, wisdom, and inner peace.\u201d\n Other tools could be practices like meditation that lets you experience an altered state of consciousness. In fact,   the brains of long-term meditators look much like the brains of people on psilocybin . Meditation seems to work just like psychedelics reducing activity in the DMN.\n  Although psychedelics seem to be not addictive and highly effective in improving well-being, it still poses possibilities of bad psychedelic experiences or bad trips if the drugs are taken with no assistance from professional doctors or therapists.\n However, if accompanied by the right professionals, the research has been showing that there is an extremely low possibility of bad experiences. (The concept of set and setting is one thing that is important for any psychedelic trips, which professional therapists create)\n The researchers in the psychedelics field still have many trials to go through for the drugs to get approved. But, I look forward to the day psychedelics and an altered state of consciousness become accessible to everyone.\n If you haven\u2019t read and want to know about psychedelics, I highly recommend  How to Change Your Mind by Michael Pollan. It covers most of the ideas I mentioned here in addition to more details about the neuroscience, the history of psychedelics research, his own psychedelic journeys, and much more.", "posttime": "2020-05-29 13:14:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e78\u798f\u611f,psychedelics,\u5927\u8111", "title": "\u8ff7\u5e7b\u5242\u3001\u5927\u8111\u3001\u5e78\u798f\u611f\u548c\u521b\u9020\u529b\u4e4b\u95f4\u7684\u5173\u7cfb", "title_en": "Relationship between psychedelics, the brain, well-being, and creativity", "transed": 1, "url": "https://mythirdbrain.substack.com/p/what-psychedelics-teach-us-about", "via": "", "real_tags": ["\u5e78\u798f\u611f", "\u5927\u8111"]}, {"category": "", "categoryclass": "", "imagename": "36835720529c347d4bf47c723eed6e0c.jpg", "infoid": 1004201, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636eBusiness Insider\u62a5\u9053\uff0c\u8d44\u91d1\u96c4\u539a\u7684\u589e\u5f3a\u73b0\u5b9e\u516c\u53f8Magic Leap\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u7f57\u5c3c\u00b7\u963f\u535a\u7ef4\u8328(Rony Abovitz)\u5c06\u8f9e\u53bb\u804c\u52a1\u3002\u963f\u535a\u7ef4\u8328\u7684\u79bb\u804c\u8ba1\u5212\u5c1a\u672a\u786e\u5b9a\u5177\u4f53\u65e5\u671f\uff0c\u8fd9\u6807\u5fd7\u7740\u4ed6\u6267\u638cMagic Leap\u7684\u4efb\u671f\u65e0\u793c\u5730\u7ed3\u675f\u3002Magic Leap\u662f\u4e00\u5bb6\u66fe\u7ecf\u8f70\u52a8\u4e00\u65f6\u7684\u521d\u521b\u516c\u53f8\uff0c\u56e0\u5176\u65e9\u671f\u5bf9\u5176\u6280\u672f\u53ca\u5176\u7b79\u96c6\u7684\u4ee4\u4eba\u77a0\u76ee\u7ed3\u820c\u7684\u98ce\u9669\u6295\u8d44\u7684\u79d8\u800c\u4e0d\u5ba3\u800c\u8d62\u5f97\u4e86\u9ad8\u5ea6\u5173\u6ce8\u3002\nMagic Leap\u5728\u8fc7\u53bb\u5341\u5e74\u91cc\u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u7ecf\u7b79\u96c6\u4e86\u5927\u7ea630\u4ebf\u7f8e\u5143\uff0c\u5c3d\u7ba1\u5b83\u53ea\u53d1\u5e03\u4e86\u4e00\u6b3e\u4ea7\u54c1\uff0cMagic Leap 1\u8033\u673a\u3002\u5c31\u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u8be5\u516c\u53f8\u521a\u521a\u7b79\u96c6\u4e863.5\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u6b64\u524d\u8be5\u516c\u53f8\u57284\u6708\u4efd\u88c1\u5458\u7ea61,000\u4eba\uff0c\u5e76\u653e\u5f03\u4e86\u6d88\u8d39\u8005\u4e1a\u52a1\uff0c\u4e13\u6ce8\u4e8e\u5411\u516c\u53f8\u9500\u552e\u4f01\u4e1a\u7ea7\u8bbe\u5907\u3002\n\u636eBI\u62a5\u9053\uff0cAbovitz\u5c06\u6682\u65f6\u7559\u5728\u516c\u53f8\u3002\u4ed6\u76ee\u524d\u5c06\u7ee7\u7eed\u62c5\u4efb\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u76f4\u5230\u7ee7\u4efb\u8005\u88ab\u516c\u5f00\u4efb\u547d\u5e76\u62c5\u4efb\u8fd9\u4e00\u804c\u52a1\uff1b\u76ee\u524d\u8fd8\u4e0d\u6e05\u695aMagic Leap\u7684\u8463\u4e8b\u4f1a\u662f\u5426\u5df2\u7ecf\u51b3\u5b9a\u4e86\u4eba\u9009\uff0c\u53ea\u662f\u51b3\u5b9a\u8fd8\u6ca1\u6709\u5ba3\u5e03\u3002\u6839\u636e\u5468\u56db\u53d1\u7ed9\u5458\u5de5\u7684\u4e00\u4efd\u516c\u53f8\u5907\u5fd8\u5f55\uff0cAbovitz\u5c06\u8fd9\u4e00\u53d8\u5316\u63cf\u8ff0\u4e3aMagic Leap\u7684\u201c\u81ea\u7136\u7684\u4e0b\u4e00\u6b65\u201d\uff0c\u5728\u4ed6\u4e0d\u518d\u638c\u7ba1\u4e4b\u540e\uff0c\u4ed6\u5c06\u201c\u4ece\u8463\u4e8b\u4f1a\u5c42\u9762\u63d0\u4f9b\u6218\u7565\u548c\u613f\u666f\u201d\uff0cBI\u83b7\u5f97\u7684\u4e00\u4efd\u516c\u53f8\u5907\u5fd8\u5f55\u663e\u793a\u3002", "note_en": "Rony Abovitz, the co-founder and CEO of lavishly funded augmented reality company Magic Leap, will step down from his position,  reports  Business Insider. Abovitz\u2019s planned departure, which doesn\u2019t yet have a concrete date, marks an unceremonious end to his tenure at the helm of Magic Leap, a once-buzzy startup that earned a high profile for how secretive it was early on about its technology and the eye-popping amounts of venture capital it raised.\n Magic Leap has so far raised about $3 billion dollars over the last decade, though it has only released one product, the  Magic Leap 1 headset. The company  raised $350 million of that funding just earlier this month, after  laying off about 1,000 employees back in April and ditching its consumer business to focus on  selling enterprise-grade devices to companies.\n Abovitz will stay on at the company for the time being,  BI reports. He\u2019ll remain CEO for now until a replacement is publicly named and takes on the role; it\u2019s not clear if Magic Leap\u2019s board has decided on someone already and has simply decided not to announce it yet. Abovitz describes the change as \u201ca natural next step\u201d for Magic Leap, and after he is no longer in charge he will \u201cprovide strategy and vision from a Board level,\u201d according to a company memo Abovitz sent to employees on Thursday and obtained by  BI.", "posttime": "2020-05-29 12:58:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "leap", "title": "Magic Leap\u9996\u5e2d\u6267\u884c\u5b98\u4e0b\u53f0", "title_en": "Magic Leap CEO steps down", "transed": 1, "url": "https://www.theverge.com/2020/5/28/21274070/magic-leap-ceo-rony-abovitz-stepping-down-replacement-ar-vr-mixed-reality", "via": "", "real_tags": ["leap"]}, {"category": "", "categoryclass": "", "imagename": "7f3601718ebf657907fea92d8a0d534d.png", "infoid": 1004200, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u8ba8\u8bba\u6ca1\u6709\u6539\u53d8\u548c\u5f26\u529f\u80fd\u7684\u548c\u5f26\u53d8\u6362\u3002\u6211\u4eec\u57fa\u672c\u4e0a\u53ea\u5904\u7406\u4e86\u4e00\u4e2a\u4e3b\u548c\u5f26\u53ca\u5176\u6362\u4f4d\u3002\u4f60\u53ef\u4ee5\u628a\u4e00\u4e2a\u5927\u548c\u5f26\u60f3\u8c61\u6210\u4e00\u4e2a\u5728\u97f3\u9ad8\u5706\u5708\u4e2d\u65cb\u8f6c\u7684\u521a\u6027\u5f62\u72b6\uff1a\u4e00\u4e2a\u56db\u4e2a\u534a\u97f3\u7684\u53f0\u9636\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u4e09\u4e2a\u534a\u97f3\u7684\u53f0\u9636\uff0c\u7ed3\u5408\u6210\u5b8c\u7f8e\u7684\u7b2c\u4e94\u4e2a\u97f3\u7684\u4e03\u4e2a\u534a\u97f3\u3002\u6211\u4eec\u6682\u65f6\u4fdd\u7559\u7b2c\u4e94\u4e2a\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u548c\u58f0\uff0c\u4f46\u6211\u4eec\u4f1a\u6539\u53d8\u7b2c\u4e09\u4e2a\u3002\n\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684\u8f6c\u53d8\u662f\u5c06\u7b2c\u4e09\u4e2a\u97f3\u9636\u964d\u4f4e\u4e00\u4e2a\u53f0\u9636\uff0c\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5c0f\u4e09\u548c\u5f26\u3002\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6211\u4eec\u8ba4\u4e3a\u5c0f\u8c03\u548c\u5f26\u662f\u60b2\u4f24\u6216\u5fe7\u90c1\u7684\uff0c\u6709\u65f6\u8fd8\u6709\u70b9\u53d1\u7262\u9a9a\u3002\n\u5b83\u4eec\u5728\u6d41\u884c\u97f3\u4e50\u6216\u6447\u6eda\u4e50\u4e2d\u4e0d\u662f\u5f88\u5e38\u89c1\uff0c\u4f46\u5728\u6c11\u8c23\u548c\u7235\u58eb\u4e50\u4e2d\u5f88\u53d7\u6b22\u8fce(\u7279\u522b\u662f\u52a0\u4e0a\u4e03\u5206\u97f3\u7b26\uff0c\u8fd9\u4f7f\u5b83\u4eec\u53d8\u5f97\u524d\u536b)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u770b\u5230\u7684\u524d\u4e09\u4e2a\u5f62\u72b6\u975e\u5e38\u9002\u5408\u8fd9\u79cd\u53d8\u6362\uff1a\u5b83\u4eec\u53ea\u6709\u4e09\u5206\u4e4b\u4e00\uff0c\u800c\u4e14\u5b83\u4f4d\u4e8e\u624b\u6307\u4e4b\u4e0b\u3002\u4e3e\u8d77\u6216\u79fb\u52a8\u8fd9\u6839\u624b\u6307\u5f88\u5bb9\u6613\u3002\u8fd9\u5c06\u5927\u8c03\u4e09\u5206\u97f3\u53d8\u4e3a\u5c0f\u4e09\u5206\u97f3\u7b26\uff0c\u6211\u4eec\u5c06\u5176\u8bb0\u4e3a3\u266d\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5e73\u5766\u7684\u4e09\u5206\u97f3\u7b26\u3002\u5728\u7235\u58eb\u4e50\u4e2d\uff0c\u5c55\u5e73\u901a\u5e38\u7528\u51cf\u53f7\u8868\u793a\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u4f1a\u770b\u5230Em\u6807\u8bb0\u4e3aE-\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u5f53\u6f14\u594fDM\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u6700\u4f4e\u7684\u4e24\u6839\u5f26\u9759\u97f3\u3002\u6211\u8fd8\u5217\u51fa\u4e86\u5012\u7f6eDM/F\uff0c\u56e0\u4e3a\u5b83\u6709\u65f6\u7528\u4e8e\u548c\u5f26\u8fdb\u884c\u4e2d(\u4f8b\u5982\uff0c\u884c\u8d70\u7684\u4f4e\u97f3)\u3002\nC\u5f62\u7684\u7b2c\u4e09\u4e2a\u97f3\u662f\u5728\u5f00\u5f26\u4e0a\u53d1\u51fa\u7684\uff0c\u800c\u4e14\u5b83\u662f\u53cc\u97f3\u7684\uff0c\u6240\u4ee5\u4eba\u7c7b\u662f\u4e0d\u53ef\u80fd\u964d\u4f4e\u5b83\u7684\u97f3\u91cf\u7684\u3002G\u7684\u5f62\u72b6\u4e5f\u5f88\u68d8\u624b\uff0c\u5c3d\u7ba1\u5728\u201c\u6c11\u95f4\u201dG\u4e2d\u4f60\u53ef\u4ee5\u4f5c\u5f0a\u5e76\u4f7f\u7b2c\u4e09\u4e2a\u58f0\u97f3\u9759\u97f3\uff0c\u8fd9\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f3a\u529b\u548c\u5f26\u3002\u5728\u7d27\u8981\u5173\u5934\uff0c\u7535\u6e90\u7ebf\u53ef\u4ee5\u4ee3\u66ff\u5927\u5f26\u6216\u5c0f\u5f26\u3002\n\u4e0d\u8fc7\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6362(\u6392\u9664)Em\u6216Am\u6765\u4ea7\u751f\u6240\u6709\u5176\u4ed6\u5c0f\u8c03\u548c\u5f26\u3002\n\u53ef\u4ee5\u628a\u7b2c\u4e09\u4e2a\u518d\u5f80\u4e0b\u79fb\u4e00\u7ea7\uff0c\u4e5f\u53ef\u4ee5\u5f80\u4e0a\u79fb\u4e00\u7ea7\u3002\u8fd9\u4f1a\u4ea7\u751f\u60ac\u6302\u7684\u548c\u5f26\u3002\u4e24\u6b21\u964d\u4e0b\u7684\u7b2c\u4e09\u548c\u5f26\u53d8\u6210\u7b2c\u4e8c\u548c\u5f26\uff0c\u6240\u4ee5\u8fd9\u4e2a\u548c\u5f26\u88ab\u79f0\u4e3a\u60ac\u6302\u7684\u7b2c\u4e8c\u548c\u5f26\u3002\u5347\u8d77\u7684\u4e09\u548c\u5f26\u53d8\u6210\u4e86\u7b2c\u56db\u548c\u5f26\uff0c\u6240\u4ee5\u8fd9\u4e2a\u548c\u5f26\u88ab\u79f0\u4e3a\u60ac\u6302\u7684\u7b2c\u56db\u548c\u5f26\u3002\u5b83\u4eec\u7ecf\u5e38\u88ab\u7528\u6765\u70b9\u7f00\u6216\u8fdb\u884c\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u5e38\u89c4\u7684\u5927\u8c03\u6216\u5c0f\u8c03\u548c\u5f26(\u4e54\u6cbb\u00b7\u54c8\u91cc\u68ee\u7684\u201c\u67d0\u4e8b\u201d\u6216\u7ea6\u7ff0\u00b7\u5217\u4fac\u7684\u201c\u5723\u8bde\u5feb\u4e50\u201d(\u6218\u4e89\u5df2\u7ecf\u7ed3\u675f)\u5e7f\u6cdb\u4f7f\u7528\u4e86\u8fd9\u4e2a\u5373\u5174\u5c0f\u8c03)\u3002\n\u4f46\u662f\u5728E\u4e2d\u6682\u505c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u592a\u5b9e\u9645\u7684\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u5728\u7b2c\u56db\u4e2a\u8c03\u5b50\u4e0a\u4f7f\u7528\u76f8\u90bb\u7684\u5f26\uff0c\u6700\u540e\u4f60\u4f1a\u5f97\u5230\u7b2c\u4e94\u4e2a\u4e09\u91cd\u594f(\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u9759\u97f3\u4e00\u4e2a)\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u91cd\u65b0\u89e3\u91ca\u4e3a\u7b2c\u4e5d\u4e2a\u516b\u5ea6\u4ee5\u4e0a\u7684\u97f3\u9636\u3002\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u7528\u542c\u8d77\u6765\u66f4\u597d\u7684\u52a0\u4e5d\u548c\u5f26\u6765\u4ee3\u66ff\u505c\u987f\u7684\u7b2c\u4e8c\u4e2a\u548c\u5f26\u3002\u8fd9\u4e2a\u4fdd\u7559\u4e86\u4e3b\u8981\u7684\u4e09\u5206\u4e4b\u4e00\uff0c\u4f46\u589e\u52a0\u4e86\u7b2c\u4e5d\u4e2a\uff1a", "note_en": "So far we\u2019ve been discussing chord transformations that didn\u2019t change the chord\u2019s function. We\u2019ve been essentially dealing with just one major chord and its transpositions. You can think of a major chord as a rigid shape rotating through the circle of pitches: a four-semitone step topped with a three-semitone step, combining to seven semitones of the perfect fifth. We\u2019ll keep the fifth for the time being, because it\u2019s such a nice consonance, but we\u2019ll be mutating the third.\n The first such transformation is to lower the third by one step to obtain a minor triad. For some reason, we perceive minor chords as sad or melancholy, sometimes a bit whiny.\n They are not very common in pop or rock music, but they are popular in folk and jazz (especially with added sevenths, which makes them edgy).\n The first three shapes we\u2019ve seen so far are perfect for this transformation: they have a single third, and it sits under a finger. Lifting or shifting this finger is easy. That changes the major third to a minor third, which we will notate as 3\u266d, since you can think of it as a  flatted third. In jazz, flatting is often represented by a minus sign, so you might see Em notated as E-, and so on.\n      When playing Dm, we usually mute the two lowest strings. I also listed the inversion Dm/F, as it\u2019s sometimes used in chord progressions (e.g., a walking bass).\n The C shape has the third voiced on an open string, and it\u2019s doubled, so it\u2019s humanly impossible to lower it. G shape is also tricky, although with the \u201cfolk\u201d G you could cheat and mute the third, which results in a power chord. A power cord can be substituted, in a pinch, for either a major or a minor chord.\n  Normally, though, you produce all other minor chords by transposing (barring) either Em or Am.\n It\u2019s possible to move the third one more step down, or one step up. This results in suspended chords. Twice lowered third becomes a second, so that chord is called the suspended second. A raised third becomes a fourth, so that chord is called the suspended fourth. They are often used as embellishments, or in progression, with a regular major or minor chord in between (George Harrison\u2019s  Something or John Lennon\u2019s  Happy Xmas (War Is Over) use this riff extensively).\n      But suspended second in E is not very practical, since you have to use the adjacent string at the fourth fret, and you end up with the fifth in triplicate (of course, you can mute one).\n  Interestingly enough, the second can be reinterpreted as the ninth, an octave over. So, instead of using a suspended second, you may replace it with a better sounding add-nine chord. This one keeps the major third, but adds a ninth:", "posttime": "2020-05-29 12:43:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5409\u4ed6,guitar,\u548c\u5f26", "title": "\u5409\u4ed6\u5206\u89e3\uff1a5.\u53d8\u5f02\u7b2c\u4e09", "title_en": "Guitar Decomposed: 5. Mutating the Third", "transed": 1, "url": "https://bartoszmilewski.com/2020/05/27/guitar-decomposed-5-mutating-the-third/", "via": "", "real_tags": ["\u5409\u4ed6", "guitar", "\u548c\u5f26"]}, {"category": "", "categoryclass": "", "imagename": "395f48837da68a5de48c054d2402d840.jpg", "infoid": 1004198, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u4eba\u6b63\u5728\u5c31\u7ee7\u7eed\u9501\u5b9a\u7f8e\u56fd\u7ecf\u6d4e\u4ee5\u9632\u6b62\u65b0\u51a0\u80ba\u708e\u8513\u5ef6\u7684\u597d\u5904\u5c55\u5f00\u6fc0\u70c8\u8fa9\u8bba\uff0c\u4e00\u4e2a\u5b98\u65b9\u7edf\u8ba1\u6570\u636e\u53ef\u80fd\u638c\u63e1\u7740\u89e3\u51b3\u8fd9\u573a\u4e89\u8bba\u7684\u5173\u952e\uff1a\u53d1\u751f\u5728\u517b\u8001\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u7684\u6b7b\u4ea1\u4eba\u6570\u5360\u6bd4\u9ad8\u5f97\u60ca\u4eba\u3002\n210\u4e07\u7f8e\u56fd\u4eba\uff0c\u5360\u7f8e\u56fd\u4eba\u53e3\u76840.62%\uff0c\u5c45\u4f4f\u5728\u7597\u517b\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u4e2d\u3002(\u517b\u8001\u9662\u662f\u4e3a\u9700\u8981\u5e2e\u52a9\u7684\u8001\u5e74\u4eba\u63d0\u4f9b\u7684\u4f4f\u6240\uff0c\u5982\u6d17\u6fa1\u6216\u7a7f\u8863\uff0c\u4ed6\u4eec\u4e5f\u9700\u8981\u5168\u5929\u5019\u7684\u533b\u7597\u76d1\u7763\uff1b\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u662f\u4e3a\u9700\u8981\u5e2e\u52a9\u7684\u8001\u5e74\u4eba\u8bbe\u8ba1\u7684\uff0c\u4f46\u4e0d\u9700\u8981\u5168\u804c\u7684\u73b0\u573a\u533b\u7597\u76d1\u7763\u3002)\u3002\n\u6839\u636e\u683c\u96f7\u683c\u00b7\u683c\u6587\u548c\u6211\u4e3a\u673a\u4f1a\u5e73\u7b49\u7814\u7a76\u57fa\u91d1\u4f1a\u8fdb\u884c\u7684\u4e00\u9879\u5206\u6790\uff0c\u622a\u81f35\u670822\u65e5\uff0c\u5728\u76ee\u524d\u62a5\u544a\u8fd9\u7c7b\u6570\u636e\u768441\u4e2a\u5dde\u4e2d\uff0c\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u6240\u6709\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u768442%\u53d1\u751f\u5728\u517b\u8001\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u4e2d\u3002\n(\u5728\u62a5\u544a\u6b7b\u4ea1\u603b\u6570\u7684\u5dde\u4e2d\uff0c42%\u7684COVID\u6b7b\u4ea1\u53d1\u751f\u5728\u957f\u671f\u62a4\u7406\u8bbe\u65bd\u4e2d\uff1b\u6839\u636e\u7eb3\u5165\u672a\u62a5\u544a\u5dde\u7684\u4eba\u53e3\u7edf\u8ba1\u6570\u636e\uff0c\u6211\u4eec\u8fd8\u4f30\u8ba1\u7f8e\u56fd\u603b\u4eba\u53e3\u7684\u8fd9\u4e00\u6bd4\u4f8b\u4e3a42%\u3002)\u3002\n\u8ba9\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff1a\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u4e2d\u670942%\u53d1\u751f\u5728\u5360\u7f8e\u56fd\u603b\u4eba\u53e30.62%\u7684\u8bbe\u65bd\u4e2d\u3002\n\u800c42%\u53ef\u80fd\u662f\u4e00\u4e2a\u4f4e\u4f30\u7684\u6570\u5b57\u3002\u50cf\u7ebd\u7ea6\u5dde\u8fd9\u6837\u7684\u5dde\u5c06\u90a3\u4e9b\u5728\u533b\u9662\u6b7b\u4ea1\u7684\u4eba\u6392\u9664\u5728\u7597\u517b\u9662\u4e4b\u5916\uff0c\u5373\u4f7f\u4ed6\u4eec\u6700\u521d\u662f\u5728\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u4e2d\u611f\u67d3\u7684\u3002\u5728\u7ebd\u7ea6\u4ee5\u5916\uff0c\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u7684\u4e00\u534a\u4ee5\u4e0a\u662f\u957f\u671f\u62a4\u7406\u673a\u6784\u7684\u5c45\u6c11\u3002\n\u4e0a\u5468\u4e4b\u524d\uff0c\u4fc4\u4ea5\u4fc4\u5dde\u62a5\u544a\u8bf4\uff0c41%\u7684COVID\u6b7b\u4ea1\u53d1\u751f\u5728\u957f\u671f\u62a4\u7406\u673a\u6784\u3002\u4f46\u4e0a\u5468\u4e94\u6700\u65b0\u62ab\u9732\u7684\u6570\u636e\u663e\u793a\uff0c\u8003\u8651\u52304\u670815\u65e5\u4e4b\u524d\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u8fd9\u4e00\u6bd4\u4f8b\u4e0a\u5347\u81f370%\u3002\n\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\uff0c\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u4e2d\u670981%\u662f\u517b\u8001\u9662\u548c\u517b\u8001\u9662\u5c45\u6c11\u3002\u4ece\u5f17\u5409\u5c3c\u4e9a\u5dde\u5230\u65b0\u7f55\u5e03\u590f\u5dde\u7684\u4e1c\u6d77\u5cb8\u5730\u533a\u53d7\u707e\u5c24\u4e3a\u4e25\u91cd\u3002\n\u53e6\u4e00\u79cd\u524a\u51cf\u6570\u636e\u7684\u65b9\u6cd5\u662f\u5c06\u7597\u517b\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u7684\u6b7b\u4ea1\u4eba\u6570\u89c6\u4e3a\u751f\u6d3b\u5728\u8fd9\u4e9b\u8bbe\u65bd\u4e2d\u7684\u4eba\u53e3\u7684\u4e00\u90e8\u5206\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6709\u4e09\u4e2a\u5dde\u5728\u8d1f\u9762\u65b9\u5411\u4e0a\u8131\u9896\u800c\u51fa\uff1a\u65b0\u6cfd\u897f\u5dde\u3001\u9a6c\u8428\u8bf8\u585e\u5dde\u548c\u5eb7\u6d85\u72c4\u683c\u5dde\u3002\n\u5728\u9a6c\u8428\u8bf8\u585e\u5dde\u548c\u5eb7\u6d85\u72c4\u683c\u5dde\uff0c\u6bcf\u4e07\u540d\u7597\u517b\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u5c45\u6c11\u7684COVID\u6b7b\u4ea1\u4eba\u6570\u5206\u522b\u4e3a703\u4eba\u548c827\u4eba\u3002\u5728\u65b0\u6cfd\u897f\u5dde\uff0c\u8fd110%\u7684\u957f\u671f\u62a4\u7406\u673a\u6784\u5c45\u6c11-10000\u4eba\u4e2d\u6709954\u4eba-\u6b7b\u4e8e\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u3002\n\u53ef\u60b2\u7684\u662f\uff0c\u4e8b\u60c5\u672c\u4e0d\u5e94\u8be5\u662f\u8fd9\u6837\u7684\u30023\u670817\u65e5\uff0c\u5f53\u5927\u6d41\u884c\u521a\u521a\u5f00\u59cb\u52a0\u901f\u65f6\uff0c\u65af\u5766\u798f\u5927\u5b66\u6d41\u884c\u75c5\u5b66\u5bb6John Ioannidis\u8b66\u544a\u8bf4\uff0c\u201c\u51e0\u5341\u5e74\u6765\uff0c\u5373\u4f7f\u662f\u4e00\u4e9b\u6240\u8c13\u7684\u6e29\u548c\u6216\u666e\u901a\u611f\u5192\u7c7b\u578b\u7684\u51a0\u72b6\u75c5\u6bd2\uff0c\u5f53\u5b83\u4eec\u611f\u67d3\u7597\u517b\u9662\u7684\u4eba\u65f6\uff0c\u75c5\u6b7b\u7387\u4e5f\u9ad8\u8fbe8%\u3002\u201dIoannidis\u88ab\u5ffd\u7565\u4e86\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u50cf\u7ebd\u7ea6\u5dde\u3001\u65b0\u6cfd\u897f\u5dde\u548c\u5bc6\u6b47\u6839\u5dde\u8fd9\u6837\u7684\u5dde\u5b9e\u9645\u4e0a\u547d\u4ee4\u7597\u517b\u9662\u63a5\u6536\u6b63\u5728\u51fa\u9662\u7684\u65b0\u51a0\u80ba\u708e\u6d3b\u52a8\u6027\u611f\u67d3\u60a3\u8005\u3002\n\u5bf9\u8fd9\u4e9b\u547d\u4ee4\u6700\u4ec1\u6148\u7684\u89e3\u91ca\u662f\uff0c\u5b83\u4eec\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u786e\u4fdd\u5404\u5dde\u4e0d\u4f1a\u6324\u6ee1\u4ed6\u4eec\u7684ICU\u3002\u4f46\u5728\u4f4f\u9662\u4eba\u6570\u8fbe\u5230\u9876\u5cf0\u540e\uff0c\u50cf\u7ebd\u7ea6\u5dde\u957f\u5b89\u5fb7\u9c81\u00b7\u79d1\u83ab(Andrew Cuomo)\u8fd9\u6837\u7684\u5dde\u957f\u6b63\u5728\u52a0\u500d\u6267\u884c\u4ed6\u4eec\u7684\u547d\u4ee4\u3002\n\u5c31\u57284\u670823\u65e5\uff0cCuomo\u8fd8\u5ba3\u5e03\u7597\u517b\u9662\u201c\u65e0\u6743\u53cd\u5bf9\u201d\u63a5\u6536\u60a3\u6709\u6d3b\u52a8\u6027COVID\u611f\u67d3\u7684\u8001\u5e74\u60a3\u8005\u3002\u201c\u8fd9\u5c31\u662f\u89c4\u5219\uff0c\u8fd9\u5c31\u662f\u89c4\u5219\uff0c\u4ed6\u4eec\u5fc5\u987b\u9075\u5b88\u8fd9\u4e00\u70b9\u3002\u201d\u76f4\u52305\u670810\u65e5-\u5728\u517b\u8001\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u7684\u8fd13000\u540d\u7ebd\u7ea6\u5c45\u6c11\u6b7b\u4ea1\u540e-\u5e93\u9ed8\u624d\u4e0b\u53f0\uff0c\u90e8\u5206\u64a4\u9500\u4e86\u4ed6\u7684\u547d\u4ee4\u3002\n\u5bf9\u4e8e\u739b\u4e3d\u4e9a\u00b7\u6ce2\u5c14\u7279\u65af\u6765\u8bf4\uff0c\u79d1\u83ab\u7684\u6539\u53d8\u6765\u5f97\u592a\u665a\u4e86\u3002\u5979\u7684\u7236\u4eb2\u5361\u6d1b\u65af\u00b7\u52a0\u83b1\u6208\u65af(Carlos Gallegos)\u4e8e4\u6708\u4efd\u5728\u957f\u5c9b\u7684\u4e00\u5bb6\u7597\u517b\u9662\u6b7b\u4e8e\u65b0\u51a0\u80ba\u708e\uff0c\u8fd9\u5bb6\u7597\u517b\u9662\u9075\u5b88\u4e86\u79d1\u83ab\u7684\u547d\u4ee4\u3002\u201c\u8fd9\u662f\u4e00\u8bb0\u8033\u5149\uff0c\u201d\u5979\u8bf4\uff0c\u201c\u56e0\u4e3a\u4ed6\u4e0d\u4f1a\u4e3a\u53d1\u751f\u5728\u6211\u7236\u4eb2\u548c\u5176\u4ed6\u90a3\u4e48\u591a\u4eba\u8eab\u4e0a\u7684\u4e8b\u60c5\u8d1f\u8d23\u3002\u201d\n\u5c06\u5e93\u9ed8\u7b49\u5dde\u957f\u7684\u51b3\u5b9a\u4e0e\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5dde\u957f\u7f57\u6069\u00b7\u5fb7\u6851\u8482\u65af(Ron DeSantis)\u7684\u51b3\u5b9a\u8fdb\u884c\u5bf9\u6bd4\u3002\u5728\u4f5b\u7f57\u91cc\u8fbe\u5dde\uff0c\u6240\u6709\u7597\u517b\u9662\u5de5\u4f5c\u4eba\u5458\u5728\u8fdb\u5165\u8bbe\u65bd\u4e4b\u524d\u90fd\u88ab\u8981\u6c42\u5bf9\u65b0\u51a0\u80ba\u708e\u75c7\u72b6\u8fdb\u884c\u7b5b\u67e5\u30023\u670815\u65e5\uff0c\u5728\u5927\u591a\u6570\u5dde\u88ab\u5c01\u9501\u4e4b\u524d\uff0c\u5fb7\u6851\u8482\u65af\u7b7e\u7f72\u4e86\u4e00\u9879\u884c\u653f\u547d\u4ee4\uff0c\u7981\u6b62\u670b\u53cb\u548c\u5bb6\u4eba\u8bbf\u95ee\u7597\u517b\u9662\uff0c\u5e76\u7981\u6b62\u533b\u9662\u5c06\u611f\u67d3SARS-CoV-2\u7684\u60a3\u8005\u9001\u8fdb\u957f\u671f\u62a4\u7406\u8bbe\u65bd\u3002\n\u4f5b\u7f57\u91cc\u8fbe\u5dde\u533b\u7597\u7ba1\u7406\u5c40(Agency For Healthcare Administration)\u7684\u8d1f\u8d23\u4eba\u739b\u4e3d\u00b7\u6885\u4f11(Mary Mayhew)\u8bf4\uff1a\u201c\u6bcf\u5929\u5728\u8fd9\u4e9b(\u4e0e\u533b\u9662\u7684)\u7535\u8bdd\u4e2d\uff0c\u6211\u90fd\u4f1a\u542c\u5230\u540c\u6837\u7684\u8bc4\u8bba\u548c\u95ee\u9898\uff0c\u2018\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u9001\u56de\u7597\u517b\u9662\uff0c\u2019\u201d\u4f5b\u7f57\u91cc\u8fbe\u5dde\u533b\u7597\u7ba1\u7406\u673a\u6784\u7684\u8d1f\u8d23\u4eba\u739b\u4e3d\u00b7\u6885\u4f11(Mary Mayhew)\u8bf4\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u5f88\u65e9\u5c31\u5212\u6e05\u4e86\u4e00\u6761\u5f3a\u786c\u7684\u754c\u9650\u3002\u6211\u53cd\u590d\u5bf9\u533b\u9662\u3001\u9996\u5e2d\u6267\u884c\u5b98\u3001\u51fa\u9662\u8ba1\u5212\u8005\u548c\u9996\u5e2d\u533b\u7597\u5b98\u8bf4\uff0c\u2018\u6211\u77e5\u9053\uff0c20\u5e74\u6765\uff0c\u8ba9\u4e2a\u4eba\u8fdb\u51fa\u4e00\u76f4\u662f\u6839\u6df1\u8482\u56fa\u7684\uff0c\u7279\u522b\u662f\u901a\u8fc7\u8054\u90a6\u533b\u7597\u4fdd\u9669(Medicare)\u7684\u62a5\u9500\u653f\u7b56\u3002\u8fd9\u4e0d\u662f\u6211\u4eec\u4eca\u5929\u5173\u6ce8\u7684\u7126\u70b9\u3002\u6211\u4e0d\u4f1a\u628a\u4efb\u4f55\u6709\u4e1d\u6beb\u79ef\u6781\u98ce\u9669\u7684\u4eba\u9001\u56de\u7597\u517b\u9662\u3002\u6211\u4eec\u4e00\u76f4\u5728\u8bf4\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u8981\u8ba9\u4e24\u4e2a\u6848\u5b50\u53d8\u621020\u4e2a\uff0c\u6216\u80055\u4e2a\u53d8\u621050\u4e2a\u3002\u5982\u679c\u4f60\u5728\u9001\u56de\u8fd9\u4e2a\u4eba\u65f6\u4e0d\u5bf9\u4ed6\u4eec\u8fdb\u884c\u7ba1\u7406\uff0c\u4f60\u4f1a\u6709\u66f4\u591a\u7684\u4eba\u88ab\u8f6c\u79fb\u56de\u533b\u9662\u3002\u201c\u3002\n\u4f5b\u7f57\u91cc\u8fbe\u5dde\u8fd8\u4f18\u5148\u8003\u8651\u4e2a\u4eba\u9632\u62a4\u8bbe\u5907(PPE)\u7684\u957f\u671f\u62a4\u7406\u8bbe\u65bd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u660e\u767d\uff0c\u4fdd\u62a4\u517b\u8001\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u7684\u5de5\u4eba\u5373\u4f7f\u4e0d\u662f\u66f4\u91cd\u8981\uff0c\u4e5f\u540c\u6837\u91cd\u8981\u3002\u5fb7\u6851\u8482\u65af\u8bf4\uff1a\u201c\u5982\u679c\u6211\u80fd\u628a\u4e2a\u4eba\u9632\u62a4\u7528\u54c1\u9001\u5230\u7597\u517b\u9662\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9632\u6b62\u90a3\u91cc\u7206\u53d1\u75ab\u60c5\uff0c\u8fd9\u5c06\u6bd4\u6211\u53ea\u7ed9\u4ed6\u4eec\u518d\u900150\u4e07\u4e2aN95\u53e3\u7f69\u66f4\u80fd\u51cf\u8f7b\u533b\u9662\u7684\u8d1f\u62c5\u3002\u201d\n\u867d\u7136\u5bf9\u4e8e\u5df2\u7ecf\u6b7b\u4ea1\u7684\u6570\u5343\u540d\u7597\u517b\u9662\u5c45\u6c11\u6765\u8bf4\u5df2\u7ecf\u592a\u665a\u4e86\uff0c\u4f46\u901a\u8fc7\u5411\u4f5b\u7f57\u91cc\u8fbe\u5dde\u7684\u699c\u6837\u5b66\u4e60\uff0c\u4ecd\u7136\u6709\u65f6\u95f4\u4fdd\u62a4\u7559\u4e0b\u6765\u7684\u6570\u767e\u4e07\u4eba\u3002\n\u9996\u5148\uff0c\u6bcf\u4e2a\u5f3a\u5236\u8981\u6c42\u7597\u517b\u9662\u63a5\u6536\u6d3b\u8dc3\u611f\u67d3\u65b0\u51a0\u80ba\u708e\u7684\u60a3\u8005\u7684\u5dde\u90fd\u5e94\u8be5\u7acb\u5373\u64a4\u9500\u548c\u64a4\u9500\u8fd9\u4e00\u547d\u4ee4\u3002\n\u5176\u6b21\uff0c\u5c31\u50cf\u4f5b\u7f57\u91cc\u8fbe\u6240\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5fc5\u987b\u81f3\u5c11\u5728\u672a\u6765\u51e0\u4e2a\u6708\u9650\u5236\u5bb6\u4eba\u548c\u670b\u53cb\u8bbf\u95ee\u7597\u517b\u9662\uff0c\u53ef\u80fd\u7684\u4f8b\u5916\u662f\u90a3\u4e9b\u53ef\u4ee5\u8bc1\u660e\u4ed6\u4eec\u6ca1\u6709\u79ef\u6781\u611f\u67d3\u8fd9\u79cd\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u7684\u4eba\u3002\n\u7b2c\u4e09\uff0c\u6211\u4eec\u5fc5\u987b\u4f18\u5148\u5b89\u6392\u517b\u8001\u9662\u548c\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u7684\u4e2a\u4eba\u9632\u62a4\u88c5\u5907\uff0c\u81f3\u5c11\u4e0e\u533b\u9662\u548c\u5176\u4ed6\u6025\u6551\u4eba\u5458\u540c\u7b49\u4f18\u5148\u3002\n\u7b2c\u56db\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528RT-PCR\u6d4b\u8bd5\u548cFDA\u6388\u6743\u7684\u5176\u4ed6\u68c0\u6d4b\u65b9\u6cd5\uff0c\u5bf9\u6240\u6709\u7597\u517b\u9662\u5de5\u4f5c\u4eba\u5458\u548c\u5c45\u6c11\u8fdb\u884c\u6d3b\u52a8\u6027\u611f\u67d3\u68c0\u6d4b\u3002\n\u7b2c\u4e94\uff0c\u6211\u4eec\u5fc5\u987b\u5c3d\u4e00\u5207\u53ef\u80fd\u786e\u4fdd\u7597\u517b\u9662\u5de5\u4f5c\u4eba\u5458\u5728\u5355\u4e00\u8bbe\u65bd\u5de5\u4f5c\uff1b\u5728\u591a\u4e2a\u8bbe\u65bd\u5de5\u4f5c\u7684\u5de5\u4f5c\u4eba\u5458\u5f88\u53ef\u80fd\u6b63\u5728\u5e2e\u52a9\u4f20\u64ad\u611f\u67d3\u3002\u53d7\u611f\u67d3\u7684\u7597\u517b\u9662\u5de5\u4f5c\u4eba\u5458\u548c\u5c45\u6c11\u5e94\u8be5\u5728\u6821\u5916\u8bbe\u65bd\u8fdb\u884c\u9694\u79bb\u3002\u5404\u5dde\u53ef\u4ee5\u4e0e\u73b0\u5728\u7a7a\u7f6e\u7684\u9152\u5e97\u7b7e\u8ba2\u5408\u540c\uff0c\u4ee5\u534f\u52a9\u8fd9\u4e00\u8fdb\u7a0b\u3002\n\u7b2c\u516d\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u62d2\u7edd\u62a5\u544aCOVID\u7597\u517b\u9662\u6b7b\u4ea1\u4eba\u6570\u7684\u4e03\u4e2a\u5dde-\u590f\u5a01\u5937\u3001\u65b0\u58a8\u897f\u54e5\u5dde\u3001\u5317\u8fbe\u79d1\u4ed6\u5dde\u3001\u5357\u8fbe\u79d1\u4ed6\u5dde\u3001\u5bc6\u82cf\u91cc\u5dde\u3001\u5bc6\u6b47\u6839\u5dde\u548c\u4f5b\u8499\u7279\u5dde-\u9700\u8981\u5f00\u59cb\u62a5\u544a\u4ed6\u4eec\u5728\u957f\u671f\u62a4\u7406\u8bbe\u65bd\u4e2d\u7684\u6b7b\u4ea1\u4eba\u6570\u3002\u8054\u90a6\u653f\u5e9c\u5df2\u7ecf\u5bf95\u67085\u65e5\u4e4b\u540e\u53d1\u751f\u7684\u7597\u517b\u9662\u6b7b\u4ea1\u63d0\u51fa\u4e86\u8fd9\u6837\u7684\u8981\u6c42\uff0c\u4f46\u6b63\u5982\u4fc4\u4ea5\u4fc4\u5dde\u544a\u8bc9\u6211\u4eec\u7684\u90a3\u6837\uff0c\u4ece\u4e4b\u524d\u51e0\u4e2a\u6708\u83b7\u5f97\u6570\u636e\u4e5f\u5f88\u91cd\u8981\u3002\n\u5c24\u5176\u662f\u5bc6\u6b47\u6839\u5dde\u7206\u53d1\u4e86\u4e25\u91cd\u7684\u65b0\u51a0\u80ba\u708e\u75ab\u60c5\uff0c\u5dde\u957f\u683c\u96f7\u7434\u00b7\u60e0\u7279\u9ed8(Gretchen Whitmer)\u6700\u8fd1\u5c06\u8be5\u5dde\u7684\u7ecf\u6d4e\u5c01\u9501\u5ef6\u957f\u81f36\u670812\u65e5\u3002\u5bc6\u6b47\u6839\u5dde\u957f\u671f\u62a4\u7406\u4e2d\u5fc3\u6b7b\u4ea1\u4eba\u6570\u7684\u900f\u660e\u5ea6\u5bf9\u4e8e\u8bc4\u4f30\u5979\u7684\u533b\u7597\u653f\u7b56\u662f\u5426\u660e\u667a\u81f3\u5173\u91cd\u8981\u3002\nCOVID\u957f\u671f\u62a4\u7406\u60b2\u5267\u8fd8\u6709\u4e00\u7ebf\u5e0c\u671b--\u6216\u8005\u53ef\u80fd\u662f\u94dc\u7ebf\u3002\u65b0\u51a0\u80ba\u708e\u8fd1\u4e00\u534a\u7684\u6b7b\u4ea1\u53d1\u751f\u5728\u957f\u671f\u62a4\u7406\u673a\u6784\uff0c\u8fd9\u610f\u5473\u7740\u5168\u56fd99.4%\u6ca1\u6709\u751f\u6d3b\u5728\u8fd9\u4e9b\u5730\u65b9\u7684\u4eba\u6b7b\u4e8e\u8fd9\u79cd\u75be\u75c5\u7684\u53ef\u80fd\u6027\u5927\u7ea6\u662f\u6211\u4eec\u4e4b\u524d\u8ba4\u4e3a\u7684\u4e00\u534a\u3002\n\u8bb8\u591a\u6b27\u6d32\u56fd\u5bb6\u90fd\u5728\u52aa\u529b\u89e3\u51b3\u4e0e\u6211\u4eec\u76f8\u540c\u7684\u7597\u517b\u9662\u95ee\u9898\u3002\u4f46\u57fa\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u8bc1\u636e\u8868\u660e\u65b0\u51a0\u80ba\u708e\u7684\u91cd\u75c5\u96c6\u4e2d\u5728\u8001\u5e74\u4eba\uff0c\u745e\u58eb\u548c\u5fb7\u56fd\u5df2\u7ecf\u91cd\u65b0\u5f00\u653e\u4e86\u4ed6\u4eec\u7684\u4e2d\u5c0f\u5b66\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u745e\u5178\u4ece\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u5173\u95ed\u5b83\u4eec\u3002\u5fb7\u56fd\u7684\u5927\u90e8\u5206\u5de5\u5382\u4ecd\u5728\u8fd0\u8425\uff0c\u745e\u5178\u7684\u9910\u5385\u4e5f\u4f9d\u7136\u8425\u4e1a\u3002\u6240\u6709\u8fd9\u4e9b\u56fd\u5bb6\u7684\u65b0\u51a0\u80ba\u708e\u7684\u4f4f\u9662\u7387\u548c\u6b7b\u4ea1\u7387\u90fd\u662f\u7a33\u5b9a\u5230\u4e0b\u964d\u7684\u3002\n\u8fd9\u4e9b\u56fd\u5bb6\u7684\u7ed3\u679c\u5e94\u8be5\u4f1a\u8ba9\u6211\u4eec\u66f4\u6709\u4fe1\u5fc3\uff0c\u8ba4\u4e3a\u91cd\u65b0\u5f00\u653e\u7ecf\u6d4e\u7684\u6709\u5206\u5bf8\u7684\u6b65\u9aa4\u53ef\u4ee5\u5728\u8fd9\u91cc\u594f\u6548\u3002\n\u5dde\u653f\u5e9c\u5bf9\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u7684\u6df1\u5ea6\u8d1f\u6709\u7684\u8d23\u4efb\u6bd4\u8bb8\u591a\u7f8e\u56fd\u4eba\u610f\u8bc6\u5230\u7684\u8981\u591a\u5f97\u591a\u3002\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u5404\u5dde\u6709\u673a\u4f1a\u4ece\u81ea\u5df1\u7684\u9519\u8bef\u4e2d\u5438\u53d6\u6559\u8bad\uff0c\u505a\u6b63\u786e\u7684\u4e8b\u60c5\uff1a\u4fdd\u62a4\u8106\u5f31\u7684\u8001\u5e74\u4eba\uff0c\u8ba9\u6570\u767e\u4e07\u7f8e\u56fd\u4eba\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u3002\n\u66f4\u65b01\uff1a\u72b9\u4ed6\u5dde\u548c\u582a\u8428\u65af\u5dde\u5df2\u7ecf\u5f00\u59cb\u62a5\u544a\u5168\u5dde\u8303\u56f4\u5185\u7684\u7597\u517b\u9662\u6b7b\u4ea1\u4eba\u6570\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u4f30\u8ba1\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u4f8b\u4ece43%\u4e0a\u5347\u523042%\u3002\u5730\u56fe\u548c\u6587\u672c\u5df2\u66f4\u65b0\uff0c\u4ee5\u53cd\u6620\u8fd9\u4e00\u65b0\u4fe1\u606f\u3002\n\u66f4\u65b02\uff1a\u963f\u62c9\u65af\u52a0\u5dde\u5dde\u957f\u6770\u592b\u00b7\u7279\u7eb3(Jeff Turner)\u7684\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u963f\u62c9\u65af\u52a0\u6ca1\u6709\u65b0\u51a0\u80ba\u708e\u4ece\u517b\u8001\u9662\u6216\u8f85\u52a9\u751f\u6d3b\u8bbe\u65bd\u6b7b\u4ea1\u7684\u62a5\u544a\u3002\u6000\u4fc4\u660e\u5dde\u536b\u751f\u90e8\u7684\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u768414\u4f8b\u4e2d\uff0c\u6000\u4fc4\u660e\u5dde\u5df2\u7ecf\u7ecf\u5386\u4e864\u4f8b\u8fd9\u6837\u7684\u6b7b\u4ea1\u3002\u5730\u56fe\u548c\u6587\u672c\u5df2\u66f4\u65b0\uff0c\u4ee5\u53cd\u6620\u6b64\u4fe1\u606f\u3002\n\u5728Twitter\u548cYouTube\u4e0a\u5173\u6ce8@avik\uff0c\u5728Facebook\u4e0a\u5173\u6ce8\u836f\u5242\u5e08\u3002\u6216\u8005\uff0c\u6ce8\u518c\u63a5\u6536\u836f\u5242\u5e08\u6bcf\u5468\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u7684\u6587\u7ae0\u6458\u8981\u3002\u8bf7\u5728FREOPP.org\u4e0a\u9605\u8bfb\u201c\u65b0\u51a0\u80ba\u708e\u671f\u95f4\u8ba9\u4eba\u4eec\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u7684\u65b0\u6218\u7565\u201d\uff0c\u8fd9\u662f\u963f\u7ef4\u514b\u4e0e\u4eba\u5408\u8457\u7684\u4e00\u9879\u7ecf\u6d4e\u91cd\u65b0\u5f00\u653e\u8ba1\u5212\u3002", "note_en": "Americans are vigorously debating the merits of continuing to lock down the U.S. economy to prevent the spread of COVID-19.\u00a0A single\u00a0statistic may hold the key to resolving this debate: the astounding\u00a0share of deaths occurring in nursing homes and assisted living facilities.\n    2.1 million Americans, representing 0.62% of the U.S. population, reside in nursing homes and assisted living facilities. (Nursing homes are residences for seniors needing help with activities of daily living, such as taking a shower or getting dressed, who also require 24/7 medical supervision; assisted living facilities are designed for seniors who need help with activities of daily living, but don\u2019t require full-time on-site medical supervision.)\n  According to an  analysis that Gregg Girvan and I conducted for the  Foundation for Research on Equal Opportunity, as of May 22, in the 41\u00a0states that currently report such figures, an astounding 42% of all COVID-19 deaths have taken place in nursing homes and assisted living facilities.\n       (Among states reporting their death totals, 42% of COVID deaths have taken place in long-term care facilities; we also estimate the share as 42% for the full U.S. population, based on incorporating the demographics of the non-reporting states.)\n    Let that sink in: 42% of all COVID-19 deaths are taking place in facilities that house 0.62% of the U.S. population.\n  And 42% could be\u00a0an undercount. States like New York exclude from their nursing home death tallies those who die in a hospital, even if they were originally infected in an assisted living facility. Outside of New York, more than half of all deaths from COVID-19 are of residents in long-term care facilities.\n    Prior to last week, Ohio reported that 41% of COVID deaths were taking place in long-term care facilities. But updated disclosures last Friday, taking deaths prior to April 15 into account,  upped that share to 70%.\n  In Minnesota, 81% of all COVID-19 deaths are of nursing home and residential care home residents. The region from the eastern seaboard from Virginia to New Hampshire has been especially hard-hit.\n      Another way to cut the data is to look at nursing home and assisted living facility deaths as a share of the population that lives in those facilities. On that basis, three states stand out in the negative direction: New Jersey, Massachusetts, and Connecticut.\n  In Massachusetts and Connecticut, COVID deaths per 10,000 nursing home and assisted living facility residents were 703 and 827, respectively. In New Jersey, nearly 10 percent of all long-term care facility residents\u2014954 in 10,000\u2014have died from the novel coronavirus.\n  The tragedy is that it didn\u2019t have to be this way. On March 17, as the pandemic was just beginning to accelerate, Stanford epidemiologist John Ioannidis  warned that \u201ceven some so-called mild or common-cold-type coronaviruses have been known for decades [to] have case fatality rates as high as 8% when they infect people in nursing homes.\u201d Ioannidis was ignored.\n    Instead, states like New York, New Jersey, and Michigan actually ordered nursing homes to accept patients with active COVID-19 infections who were being discharged from hospitals.\n  The most charitable interpretation of these orders is that they were designed to ensure that states would not overcrowd their ICUs. But well after hospitalizations peaked, governors like New York\u2019s Andrew Cuomo were doubling down on their mandates.\n  As recently as April 23, Cuomo  declared that nursing homes \u201cdon\u2019t have a right to object\u201d to accepting elderly patients with active COVID infections. \u201cThat is the rule and that is the regulation and they have to comply with that.\u201d Only on May 10\u2014after the deaths of nearly 3,000 New York residents of nursing homes and assisted living facilities\u2014did Cuomo stand down and partially rescind his order.\n  Cuomo\u2019s change of heart came too late for Maria Porteus. Her father, Carlos Gallegos, died of COVID-19 in a Long Island nursing home in April that adhered to Cuomo\u2019s mandate. \u201cIt\u2019s a slap in the face,\u201d  she said, \u201cbecause he\u2019s not taking responsibility for what happened to my father and so many others.\u201d\n    Contrast the decisions by governors like Cuomo with those of Florida Gov. Ron DeSantis. In Florida, all nursing home workers were required to be screened for COVID-19 symptoms before entering a facility. On March 15, before most states had locked down, DeSantis  signed an executive order that banned nursing home visitations from friends and family, and also banned hospitals from discharging SARS-CoV-2-infected patients into long-term care facilities.\n  \u201cEvery day on these calls [with hospitals], I would hear the same comments and questions around, \u2018We need to get these individuals returned back to the nursing home,\u2019\u201d  said\u00a0Mary Mayhew, who runs Florida\u2019s Agency for Healthcare Administration. \u201cWe drew a hard line early on. I said repeatedly to the hospital, to the CEOs, to the discharge planners, to the chief medical officers, \u2018I understand that for 20 years it\u2019s been ingrained, especially through Medicare reimbursement policy, to get individuals in and out. That is not our focus today. I\u2019m not going to send anyone back to a nursing home who has the slightest risk of being positive.\u2019 What we said constantly is let\u2019s not have two cases become 20 or five become 50. If you don\u2019t manage this individual as you return them back, you will have far more being transferred back to the hospital.\u201d\n  Florida also prioritized long-term care facilities for personal protective equipment, or PPE, with the understanding that it was just as important, if not more so, to protect workers at nursing homes and assisted living facilities. \u201cIf I can send PPE to the nursing homes, and they can prevent an outbreak there, that\u2019s going to do more to lower the burden on hospitals than me just sending them another 500,000 N95 masks,\u201d said DeSantis.\n    While it is too late for thousands of nursing home residents who have already died, there is still time to protect the millions who remain, by learning from Florida\u2019s example.\n  First, every state that has mandated that nursing homes accept actively infected COVID-19 patients should immediately rescind and reverse that mandate.\n  Second, as Florida has done, we must restrict visits to nursing homes by family and friends for at least the next several months, with the possible exception of those who can prove that they are not actively infected with the novel coronavirus.\n  Third, we must prioritize nursing homes and assisted living facilities for personal protective equipment, at an at least equal level of priority as hospitals and other first responders.\n  Fourth, we must test all nursing home workers and residents for active infections, using RT-PCR tests and other FDA-authorized methods of detection.\n  Fifth, we must strive wherever possible to ensure that nursing home staff are working at a single facility; it is likely that staff working at multiple facilities are helping to spread the infection. Infected nursing home workers and residents should be quarantined at an off-campus facility. States could contract with now-empty hotels to assist with this process.\n  Sixth, the seven\u00a0states that thus far have refused to report COVID nursing home deaths\u2014Hawaii, New Mexico, North Dakota, South Dakota, Missouri, Michigan, and Vermont\u2014need to start reporting their death tolls in long-term care facilities. The federal government has instituted such a requirement for nursing home deaths occurring\u00a0after May 5, but as Ohio teaches us, it is also important to get the data from the previous\u00a0several months.\n  Michigan, in particular, has had a significant outbreak of COVID-19, and Gov. Gretchen Whitmer recently  extended the state&#39;s economic lockdown through June 12. Transparency into fatalities at long-term care centers in Michigan is essential for assessing the wisdom of her\u00a0policy.\n    There is one silver lining\u2014or perhaps bronze lining\u2014to the COVID long-term care tragedy. The fact that nearly half of all COVID-19 deaths have occurred in long-term care facilities means that the 99.4 percent of the country that  doesn\u2019t live in those places is roughly half as likely to die of the disease than we previously thought.\n    Many European countries have struggled with the same nursing home problems that we have. But based on the mounting evidence that serious illness from COVID-19 is concentrated in the elderly, Switzerland and Germany have reopened their primary and secondary schools. Sweden, for the most part, never closed them to begin with. Germany has kept most of its factories in operation, and Sweden\u2019s restaurants remain open. All of these countries have stable-to-declining rates of hospitalization and death from COVID-19.\n  The results in these countries should give us increased confidence that  measured steps to reopen the economy can work here.\n  State governments bear much more of the responsibility for the depth of the COVID-19 pandemic than many Americans appreciate. But that also means that states have the opportunity to learn from their own mistakes and do the right thing: by protecting vulnerable seniors, and letting millions of Americans get back to work.\n    UPDATE 1: Utah and Kansas have begun reporting nursing home fatalities statewide, which brought our estimate of fatality share from 43% to 42%. The maps and text have been updated to reflect this new information.\n  UPDATE 2: A spokesman for Alaska Gov. Jeff Turner stated that Alaska has no COVID-19 deaths to report from nursing homes or assisted living facilities. A spokeswoman for the Wyoming Department of Health stated that Wyoming has experienced 4 such fatalities out of a total of 14 COVID-19 deaths. The maps and text have been updated to reflect this information.\n  FOLLOW  @Avik on Twitter and  YouTube, and  The Apothecary on  Facebook. Or, sign up to receive a  weekly e-mail digest of articles from  The Apothecary. Read   A New Strategy for Bringing People Back to Work During Covid-19, an economic reopening plan co-authored by Avik, at FREOPP.org.", "posttime": "2020-05-29 12:10:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u7edf\u8ba1,\u7597\u517b\u9662", "title": "\u51a0\u72b6\u75c5\u6bd2\u7edf\u8ba1\uff1a\u7f8e\u56fd42%\u7684\u6b7b\u4ea1\u6765\u81ea0.6%\u7684\u4eba\u53e3", "title_en": "Coronavirus Statistic: 42% Of U.S. Deaths Are From 0.6% Of The Population", "transed": 1, "url": "https://www.forbes.com/sites/theapothecary/2020/05/26/nursing-homes-assisted-living-facilities-0-6-of-the-u-s-population-43-of-u-s-covid-19-deaths/", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u7edf\u8ba1", "\u7597\u517b\u9662"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004195, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6709\u591a\u79cd\u5f62\u72b6\u548c\u5927\u5c0f\u3002\u867d\u7136\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u76ee\u524d\u7684\u8986\u76d6\u7387\u6700\u9ad8\uff0c\u4f46\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7c7b\u522b\u7684\u6a21\u578b\u53ef\u4ee5\u6709\u6548\u5730\u8de8\u8d8a\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898\u9886\u57df\u3002\u8fd9\u7bc7\u6587\u7ae0\u7b80\u8981\u603b\u7ed3\u4e86\u51e0\u4e2a\u4e0e\u57fa\u4e8e\u6811\u7684\u6a21\u578b\u5bc6\u5207\u76f8\u5173\u7684\u57fa\u4e8e\u89c4\u5219\u7684\u6a21\u578b(\u4f46\u4e0d\u592a\u5e7f\u4e3a\u4eba\u77e5)\u3002\n\u867d\u7136\u8fd9\u7bc7\u6587\u7ae0\u7684\u91cd\u70b9\u662f\u89e3\u91ca\u8fd9\u4e9b\u6a21\u578b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u5b83\u4e0eRules\u5305\u7684\u53d1\u5e03\u4e0d\u8c0b\u800c\u5408\uff0cRules\u5305\u662f\u4e00\u4e2a\u4e3a\u8fd9\u4e9b\u6a21\u578b\u63d0\u4f9b\u7528\u6237\u754c\u9762\u7684tidyModels\u5305\u3002tidyverse\u535a\u5ba2\u4e0a\u7684\u4e00\u4e2a\u914d\u5957\u5e16\u5b50\u63cf\u8ff0\u4e86\u8be5\u8f6f\u4ef6\u5305\u7684\u7528\u6cd5\u3002\n\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u89c4\u5219\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4(Quinlan\uff0c1979)\u3002\u672c\u6587\u7684\u91cd\u70b9\u662f\u5c06\u89c4\u5219\u7528\u4e8e\u4f20\u7edf\u7684\u6709\u76d1\u7763\u5b66\u4e60(\u4e0e\u5173\u8054\u89c4\u5219\u6316\u6398\u76f8\u5bf9)\u3002\u5728\u529f\u80fd\u5de5\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u89c4\u5219\u662f\u6761\u4ef6\u903b\u8f91\u8bed\u53e5\u3002\u5b83\u4e5f\u53ef\u4ee5\u9644\u52a0\u5230\u67d0\u79cd\u9884\u6d4b\u503c\uff0c\u4f8b\u5982\u3002\n\u4ece\u6570\u636e\u521b\u5efa\u89c4\u5219\u6709\u591a\u79cd\u65b9\u6cd5\u3002\u6700\u6d41\u884c\u7684\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u6811\u7684\u6a21\u578b\uff0c\u7136\u540e\u5c06\u6a21\u578b\u7ed3\u6784\u201c\u6241\u5e73\u5316\u201d\u4e3a\u4e00\u7ec4\u89c4\u5219\u3002\u8fd9\u88ab\u79f0\u4e3a\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u7684\u65b9\u6cd5\u3002\n\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528\u6765\u81ea\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u8428\u514b\u62c9\u95e8\u6258\u7684\u623f\u4ef7\u6570\u636e\u96c6\u3002\u5220\u9664\u4e86\u5177\u6709\u5927\u91cf\u7ea7\u522b\u7684\u4e24\u4e2a\u9884\u6d4b\u5668\uff0c\u4ee5\u4f7f\u89c4\u5219\u8f93\u51fa\u66f4\u5177\u53ef\u8bfb\u6027\uff1a\nfor(pkg in c(&#39\uff1bdplyr&#39\uff1b\uff0c&#39\uff1bmodel data&39\uff1b\uff0c&#39\uff1brpart&39\uff1b)){if(\uff01requiedNamespace(Pkg)){install.Packages(Pkg)}}\u5e93(Dplyr)\u6570\u636e(Sacramento\uff0cPackage=#34\uff1bmodel data&34\uff1b)Sacramento&lt\uff1b-Sacramento%&&gt;%Mariate(Price\u3002\n##Tibble[932\u00d77](S3\uff1atbl_df/tbl/data.frame)##$bed\uff1aint[1\uff1a932]2 3 2 2 2 3 3 3 2 3.##$baths\uff1anum[1\uff1a932]1 1 1 2 1 2 2.##$sqft\uff1aint[1\uff1a932]836 1167 796 852 797 1122 1104 1177 941 1146.##$type\uff1afactor w/3 level&(##$sqft\uff1aint[1\uff1a932]836 1167 796 852 797 1122 1104 1177 941 1146)##$type\uff1afactor w/3 level&\u3002\uff0c..\uff1a3 3 3 1 3 3 1.##$\u4ef7\u683c\uff1aNum[1\uff1a932]4.77 4.83 4.84 4.84 4.91.##$\u7eac\u5ea6\uff1aNum[1\uff1a932]38.6 38.5 38.6 38.5.##$\u7ecf\u5ea6\uff1aNum[1\uff1a932]-121-121-121-121.\u3002\n##n=932#\u8282\u70b9)\uff0c\u62c6\u5206\uff0cn\uff0c\u504f\u5dee\uff0cyval##*\u8868\u793a\u7ec8\u7aef\u8282\u70b9#1)\u6839932 48.5000 5.334##2)sqft&lt\uff1b1594535 18.7200 5.211##4)sqft&lt\uff1b1170235 8.0440 5.107##8)sqft&lt\uff1b934.5 71 2.2760 5.002*##9)sqft&gt\uff1b=1170164 4.6500 5.152*#5)sqft&gt\uff1b=121.3 300 6.1390 5.292##10)\u7ecf\u5ea6&lt\uff1b-121.3 243 4.8850 5.270*##11)\u7ecf\u5ea6&gt\uff1b=-121.3 57 0.6081 5.388*##3)sqft&gt\uff1b=1594397 10.6000 5.501##6)sqft&lt\uff1b2317245 4.7420 5.432##12)\u7ecf\u5ea6&lt\uff1b-121.3 205 3.3190 5.407*##13)\u7ecf\u5ea6&gt\uff1b=-121.3 40 0.6179 5.562*#7)sqft&gt\uff1b=2317152 2.8450 5.611#14)\u7ecf\u5ea6&lt\uff1b-121.2 110 1.6790 5.570*#15)\u7ecf\u5ea6&gt\uff1b=-121.2 42 0.4864 5.720*\n\u6b64\u7279\u5b9a\u6811\u4e2d\u7684\u62c6\u5206\u6d89\u53ca\u76f8\u540c\u7684\u4e24\u4e2a\u9884\u6d4b\u5668\u3002\u8fd9\u4e9b\u5230\u7ec8\u7aef\u8282\u70b9\u7684\u8def\u5f84\u7531\u4e00\u7ec4IF-THEN\u89c4\u5219\u7ec4\u6210\u3002\u8003\u8651\u5230\u7b2c\u516b\u4e2a\u7ec8\u7aef\u8282\u70b9\u7684\u8def\u5f84\uff1a\n\u5982\u679c(sqft&lt\uff1b1594amp\uff1bsqft&lt\uff1b1169.5&amp\uff1bsqft&lt\uff1b934.5)\uff0c\u5219PRED=5.001820\u3002\n\u5f88\u5bb9\u6613\u5c06\u8fd9\u6761\u89c4\u5219\u5220\u51cf\u5230\u53ea\u6709934.5\u5e73\u65b9\u82f1\u5c3a\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u4ece\u6b64\u6a21\u578b\u751f\u6210\u7684\u89c4\u5219\u5c06\u662f\uff1a\n##\u4ef7\u683c##5.0\u5f53sqft\uff1b935##5.2\u5f53sqft\u662f935\u52301170##5.3\u5f53sqft\u662f1170\u52301594&amp\uff1b\u7ecf\u5ea6&gt\uff1b-121##5.4\u5f53sqft\u662f1170\u52301594&amp\uff1b\u7ecf\u5ea6&gt\uff1b=-121##5.4\u5f53sqft\u662f1594\u52302317&amp\uff1b\u7ecf\u5ea6&lt\uff1b-121##5.6\u5f53sqft\u662f1594\u52302317&amp\uff1b\u7ecf\u5ea6&gt\uff1b=-\u3002-121##5.7\uff0c\u5f53sqft&&gt;=2317&amp\uff1b\u7ecf\u5ea6&&gt;=-121\u65f6\u3002\n\u54ea\u4e9b\u66f4\u73b0\u4ee3\u7684\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528\u6216\u751f\u6210\u89c4\u5219\uff1f\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e09\u4e2a(\u5b83\u4eec\u90fd\u5305\u542b\u5728\u89c4\u5219\u5305\u4e2d)\u3002\nC4.5\u7b97\u6cd5(Quinlan\uff0c1993b)\u662f\u4e00\u4e2a\u65e9\u671f\u7684\u57fa\u4e8e\u6811\u7684\u6a21\u578b\uff0c\u5b83\u662f\u5728\u66f4\u8457\u540d\u7684Cart\u6a21\u578b\u4e4b\u540e\u4e0d\u4e45\u53d1\u5e03\u7684\u3002\u6b64\u6a21\u578b\u7684\u4e00\u4e2a\u5f88\u9177\u7684\u65b9\u9762\u662f\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u5206\u7c7b\u6811\u6216\u4e00\u7ec4\u89c4\u5219\u3002\u8fd9\u4e9b\u89c4\u5219\u662f\u4ece\u539f\u59cb\u6811\u6d3e\u751f\u7684\uff0c\u5176\u65b9\u5f0f\u4e0e\u4e0a\u9762\u4e3arpart\u663e\u793a\u7684\u65b9\u5f0f\u5927\u81f4\u76f8\u540c\u3002\n\u591a\u5e74\u6765\uff0c\u4f5c\u8005(Ross Quinlan)\u4e0d\u65ad\u8fdb\u5316\u51fa\u79f0\u4e3aC5.0\u7684\u4e0b\u4e00\u4ee3\u6a21\u578b\u3002\u5927\u7ea610\u5e74\u524d\uff0c\u4ed6\u5f00\u6e90\u4e86\u8fd9\u4e2a\u578b\u53f7\uff0c\u4e8e\u662fC50R\u5305\u8bde\u751f\u4e86\u3002\u4e0e\u5176\u524d\u8eab\u4e00\u6837\uff0cC5.0\u53ef\u4ee5\u7528\u4e8e\u6811\u6216\u89c4\u5219\u3002\u8fd9\u4e2a\u6a21\u578b\u6709\u5f88\u591a\u8fdb\u6b65(\u5728Kuhn and Johnson(2013)\u4e2d\u6709\u8be6\u7ec6\u4ecb\u7ecd)\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\u5305\u542b\u4e86Boosting\u3002\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u5206\u7c7b\u89c4\u5219\u96c6\u5408\u3002\u5b83\u66f4\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u7684AdaBoost\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u66f4\u73b0\u4ee3\u7684\u968f\u673a\u68af\u5ea6\u63d0\u5347\u8303\u5f0f\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\u7531\u4e8ec5.0\u4ec5\u7528\u4e8e\u5206\u7c7b\uff0c\u56e0\u6b64\u8679\u819c\u6570\u636e\u7684\u5355\u4e2a\u89c4\u5219\u96c6\u793a\u4f8b\u5982\u4e0b\uff1a\n\u89c4\u52191\uff1a(50\uff0c\u63d0\u53472.9)\u82b1\u74e3\u957f\u5ea6=1.9-&gt;\u7c7b\u522bsetosa[0.981]\u89c4\u52192\uff1a(48/1\uff0c\u63d0\u53472.9)\u82b1\u74e3\u957f\u5ea6=4.9\u82b1\u74e3\u5bbd\u5ea6=1.7-&gt;\u82b1\u8272\u7ea7[0.960]\u89c4\u52193\uff1a(46/1\uff0c\u63d0\u53472.9)\u82b1\u74e3\u5bbd\u5ea6\u3002Virginica\u7c7b[0.958]\u89c4\u52194\uff1a(46/2\uff0cLift2.8)\u82b1\u74e3\u957f\u5ea6\uff1b4.9-&gt\uff1b\u7c7bVirginica[0.938]\u9ed8\u8ba4\u7c7b\uff1asetosa\u3002\n\u5982\u679c\u5728\u8679\u819c\u6570\u636e\u4e0a\u4f7f\u7528\uff0c\u5177\u670950\u4e2a\u7ec4\u6210\u6a21\u578b\u7684\u52a9\u63a8\u7ec4\u5408\u603b\u5171\u4f7f\u7528\u4e86276\u4e2a\u89c4\u5219\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fed\u4ee3\u5e73\u5747\u6bcf\u4e2a\u89c4\u5219\u96c6\u67095.52\u4e2a\u89c4\u5219\u3002\n\u63a7\u5236\u6bcf\u4e2a\u89c4\u5219\u96c6\u590d\u6742\u6027\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\u8c03\u6574\u5728\u8282\u70b9\u5185\u8fdb\u884c\u9644\u52a0\u62c6\u5206\u6240\u9700\u7684\u6700\u5c0f\u6570\u636e\u70b9\u6570\u91cf\u3002\u6b64\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a\u4e24\u4e2a\u6570\u636e\u70b9\u3002\u5982\u679c\u5c06\u8be5\u503c\u589e\u52a0\u523020\uff0c\u5219\u89c4\u5219\u7684\u5e73\u5747\u6570\u91cf\u4ece5.52\u4e2a\u89c4\u5219\u51cf\u5c11\u52303.2\u4e2a\u89c4\u5219\u3002\n\u8c03\u4f18\u65f6\uff0c\u53e6\u4e00\u4e2a\u4e3b\u8981\u8c03\u4f18\u53c2\u6570\u662f\u63d0\u5347\u8fed\u4ee3\u7684\u6b21\u6570\u3002C50R\u5305\u652f\u6301\u8de8Boosting\u8fed\u4ee3\u7684\u5b50\u6a21\u578b\u9884\u6d4b\uff1b\u5728\u8bb8\u591a\u503c\u4e0a\u8c03\u4f18\u6b64\u53c2\u6570\u7684\u8ba1\u7b97\u6210\u672c\u4e0d\u662f\u5f88\u9ad8\u3002\n\u524d\u9762\u63d0\u5230\u7684\u7f57\u65af\u00b7\u6606\u5170(Ross Quinlan)\u4e5f\u5f00\u53d1\u4e86\u6a21\u578b\u6811(Quinlan\uff0c1992)\u3002\u8fd9\u4e9b\u662f\u57fa\u4e8e\u56de\u5f52\u6811\u7684\u6a21\u578b\uff0c\u5728\u7ec8\u7aef\u8282\u70b9\u4e2d\u5305\u542b\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\u8fd9\u4e2a\u6a21\u578b\u88ab\u79f0\u4e3aM5\uff0c\u4e0eC5.0\u975e\u5e38\u76f8\u4f3c\uff0c\u6709\u4e00\u4e2a\u57fa\u4e8e\u89c4\u5219\u7684\u6a21\u62df\u3002\u5927\u591a\u6570\u57fa\u4e8e\u6811\u7684\u6a21\u578b\uff0c\u7279\u522b\u662f\u6811\u7684\u96c6\u5408\uff0c\u503e\u5411\u4e8e\u4ea7\u751f\u4e0d\u9002\u5408\u5c3e\u90e8\u7684\u6a21\u578b(\u5f88\u50cf\u56de\u5f52\u5230\u5e73\u5747\u503c)\u3002\u6a21\u578b\u6811\u4e0d\u4f1a\u53d7\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u7ec8\u7aef\u56de\u5f52\u6a21\u578b\u53ef\u4ee5\u5728\u6574\u4e2a\u7ed3\u679c\u6570\u636e\u8303\u56f4\u5185\u505a\u51fa\u9884\u6d4b\u3002\n\u572820\u4e16\u7eaa90\u5e74\u4ee3\u6700\u521d\u7684\u4e00\u7cfb\u5217\u8bba\u6587\u4e4b\u540e\uff0c\u6606\u5170\u6ca1\u6709\u53d1\u8868\u592a\u591a\u5173\u4e8e\u65b9\u6cd5\u8bba\u7684\u6587\u7ae0\uff0c\u56e0\u4e3a\u4ed6\u53d1\u5c55\u4e86\u8fd9\u79cd\u65b9\u6cd5\u8bba\u3002\u73b0\u4ee3\u7248\u7684\u793a\u8303\u89c4\u5219\u88ab\u79f0\u4e3a\u7acb\u4f53\u4e3b\u4e49\u3002\u7acb\u4f53\u4e3b\u4e49\u89c4\u5219\u548cM5\u89c4\u5219(\u5728Kuhn\u548cJohnson(2013)\u4e2d\u5217\u4e3e)\u4e4b\u95f4\u6709\u4e00\u4e9b\u5c0f\u7684\u6280\u672f\u5dee\u5f02\uff0c\u4f46\u4e3b\u8981\u7684\u6539\u8fdb\u662f\uff1a\n\u59d4\u5458\u4f1a\u5408\u594f\u7c7b\u4f3c\u4e8e\u52a9\u63a8\u5668\u3002\u5728Boosting\u4e2d\uff0c\u4f1a\u6309\u987a\u5e8f\u521b\u5efa\u4e00\u7ec4\u6a21\u578b\u3002\u5bf9\u4e8e\u5f53\u524d\u7684Boosting\u8fed\u4ee3\uff0c\u4f7f\u7528\u7531\u4ee5\u524d\u6a21\u578b\u7684\u7ed3\u679c\u5b9a\u4e49\u7684\u6848\u4f8b\u6743\u91cd\u521b\u5efa\u6a21\u578b\u3002\u5728\u59d4\u5458\u4f1a\u4e2d\uff0c\u6848\u4f8b\u6743\u91cd\u4e0d\u53d8\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u9488\u5bf9\u59d4\u5458\u4f1a\u7684\u6bcf\u6b21\u8fed\u4ee3\u4fee\u6539\u7ed3\u679c\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6837\u672c\u4e4b\u524d\u9884\u6d4b\u4e0d\u8db3\uff0c\u5219\u5176\u7ed3\u679c\u503c\u4f1a\u88ab\u66f4\u6539\u4e3a\u66f4\u5927\uff0c\u8fd9\u6837\u6a21\u578b\u5c31\u4f1a\u5411\u4e0a\u62c9\uff0c\u4ee5\u52aa\u529b\u505c\u6b62\u9884\u6d4b\u4e0d\u8db3\u3002\n\u5728\u59d4\u5458\u4f1a\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u6a21\u578b\u4f7f\u7528\u539f\u59cb\u7ed3\u679c\u503c\\(y\\)\u3002\u5728\u8fdb\u4e00\u6b65\u8fed\u4ee3\u4e2d\uff0c\u5c06\u4f7f\u7528\u4fee\u6539\u540e\u7684\u503c\\(y^*\\)\u3002\u5bf9\u4e8e\u8fed\u4ee3\\(m\\)\uff0c\u6a21\u578b\u4f7f\u7528\u6b64\u8c03\u6574\u516c\u5f0f\uff1a\n\u4f5c\u4e3a\u6f14\u793a\uff0c\u4e0b\u9762\u7684\u56fe\u8868\u663e\u793a\u4e86\u4f2a\u7ed3\u679c\u5982\u4f55\u5728\u8fed\u4ee3\u4e2d\u53d8\u5316\u3002\u8fd9\u6240\u623f\u5b50\u7684\u89c2\u6d4b\u4ef7\u662f5.3\u82f1\u9551\u3002\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6a21\u578b\u9884\u6d4b\u4e0d\u8db3(\u663e\u793a\u4e3a\u5b9e\u5fc3\u9ed1\u70b9)\u3002\u5782\u76f4\u7ebf\u8868\u793a\u6b64\u6a21\u578b\u7684\u6b8b\u5dee\u3002\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5f00\u653e\u7684\u84dd\u8272\u5706\u5708\u663e\u793a\\(y^*{(2)}\\)\u7684\u503c\u3002\u5728\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5bf9\u8be5\u6570\u636e\u70b9\u7684\u9884\u6d4b\u53d8\u5f97\u66f4\u5dee\uff0c\u4f46\u968f\u7740\u8fed\u4ee3\u7684\u8fdb\u884c\uff0c\u6b8b\u5dee\u901a\u5e38\u4f1a\u53d8\u5c0f\u3002\n\u603b\u4f53\u9884\u6d4b\u662f\u901a\u8fc7\u5bf9\u59d4\u5458\u4f1a\u6a21\u578b\u9884\u6d4b\u8fdb\u884c\u5e73\u5747\u6765\u505a\u51fa\u7684\u3002\u8fd9\u5728Cubist\u505a\u51fa\u7684\u57fa\u4e8e\u6a21\u578b\u7684\u9884\u6d4b\u4e2d\u5f97\u51fa\u4e86\u7ed3\u8bba\u3002\n\u5728\u6a21\u578b\u9884\u6d4b\u4e4b\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u8fdb\u884c\u6a21\u578b\u540e\u6700\u8fd1\u90bb\u8c03\u6574(Quinlan\uff0c1993a)\u3002\u5f53\u9884\u6d4b\u65b0\u7684\u6570\u636e\u70b9\u65f6\uff0c\u5728\u8bad\u7ec3\u96c6\u4e2d\u627e\u5230K\u6700\u8fd1\u7684\u90bb\u5c45(\u8fde\u540c\u5b83\u4eec\u7684\u539f\u59cb\u9884\u6d4b)\u3002\u5982\u679c\u90bb\u5c45\u7684\u8bad\u7ec3\u96c6\u9884\u6d4b\u8868\u793a\u4e3a\\(t\\)\uff0c\u5219\u8c03\u6574\u4e3a\uff1a\n\u5176\u4e2d\u6743\u91cd\\(w_\\ell\\)\u57fa\u4e8e\u53cd\u5411\u8ddd\u79bb(\u4ee5\u4fbf\u8fdc\u70b9\u5bf9\u5e73\u5dee\u7684\u8d21\u732e\u8f83\u5c0f)\u3002\u5f53\u539f\u59cb\u9884\u6d4b\u548c\u65b0\u9884\u6d4b\u4e4b\u95f4\u7684\u5dee\u5f02\u8f83\u5927\u65f6\uff0c\u8c03\u6574\u5e45\u5ea6\u8f83\u5927\u3002\u968f\u7740\u65b0\u6837\u672c\u7684\u9884\u6d4b\u4e0e\u5176\u6700\u63a5\u8fd1\u7684\u76f8\u90bb\u6837\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\u589e\u5927\uff0c\u8c03\u6574\u53d8\u5f97\u66f4\u5927\u3002\n\u5047\u8bbe\u6211\u4eec\u7684\u6a21\u578b\u53ea\u4f7f\u7528\u5e73\u65b9\u82f1\u5c3a\u548c\u7ecf\u5ea6\u4f5c\u4e3a\u9884\u6d4b\u503c\u3002\u8bad\u7ec3\u6570\u636e\u5982\u4e0b\u6240\u793a\uff0c\u65b0\u7684\u9884\u6d4b\u70b9\u8868\u793a\u4e3a\u4e00\u4e2a\u5927\u7684\u7ea2\u8272\u6b63\u65b9\u5f62\u3002\u8bad\u7ec3\u96c6\u4e2d\u6700\u8fd1\u76846\u4e2a\u90bb\u5c45\u663e\u793a\u4e3a\u7ea2\u8272\u5706\u5708\u3002\u5706\u7684\u5927\u5c0f\u8868\u793a\u91cd\u91cf\u7684\u5927\u5c0f\u3002\u8fd9\u8868\u660e\u8fd1\u70b9\u6bd4\u8fdc\u70b9\u5bf9\u5e73\u5dee\u7684\u5f71\u54cd\u66f4\u5927\u3002\n\u6b64\u8c03\u6574\u901a\u5e38\u4f1a\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u3002\u6709\u8da3\u7684\u662f\uff0c\u5728\u8c03\u4f18\u65f6\u901a\u5e38\u4f1a\u51fa\u73b0\u8fd9\u6837\u4e00\u79cd\u6a21\u5f0f\uff0c\u53731\u8fd1\u90bb\u6a21\u578b\u6bd4\u4e0d\u4f7f\u7528\u8c03\u6574\u8981\u5dee\u5f97\u591a\uff0c\u4f46\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u90bb\u5c45\u7684\u5de5\u4f5c\u8981\u597d\u5f97\u591a\u3002\u4e00\u79cd\u60f3\u6cd5\u662f\uff0c\u5355\u4e2a\u90bb\u5c45\u7684\u4f7f\u7528\u53ef\u80fd\u8fc7\u5ea6\u9002\u5408\u8bad\u7ec3\u96c6(\u5c31\u50cf\u5728\u66f4\u4f20\u7edf\u7684K-NN\u6a21\u578b\u4e2d\u4f1a\u53d1\u751f\u7684\u90a3\u6837)\u3002\n\u4f7f\u7528\u8fd9\u4e24\u79cd\u6280\u672f\uff0c\u7acb\u4f53\u4e3b\u4e49\u5f80\u5f80\u4f1a\u5728\u6027\u80fd\u65b9\u9762\u4ea7\u751f\u975e\u5e38\u6709\u7ade\u4e89\u529b\u7684\u6548\u679c\u3002\u4e24\u4e2a\u4e3b\u8981\u53c2\u6570\u662f\u59d4\u5458\u4f1a\u6210\u5458\u7684\u6570\u91cf\u548c\u5728\u8c03\u6574\u4e2d\u4f7f\u7528\u7684\u6700\u8fd1\u90bb\u5c45\u7684\u6570\u91cf\u3002Cubist\u8f6f\u4ef6\u5305\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u62df\u5408\u6a21\u578b\u6765\u9884\u6d4b\u90bb\u5c45\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u5728\u8c03\u6574\u6b64\u53c2\u6570\u65f6\u51e0\u4e4e\u4e0d\u9700\u8981\u8ba1\u7b97\u6210\u672c\u3002\n\u5bf9\u4e8e\u8428\u514b\u62c9\u95e8\u6258\u7684\u6570\u636e\uff0c\u5355\u4e2a\u6a21\u578b(\u4f8b\u5982\u4e00\u4e2a\u59d4\u5458\u4f1a)\u75316\u6761\u89c4\u5219\u7ec4\u6210\uff0c\u6bcf\u6761\u89c4\u5219\u90fd\u6709\u81ea\u5df1\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u524d\u56db\u6761\u89c4\u5219\u662f\uff1a\n##\u89c4\u52191\uff1a[198\u4f8b\uff0c\u5e73\u5747\u503c5.187264\uff0c\u8303\u56f44.681241\u52305.759668\uff0c\u4f30\u8ba1\u8bef\u5dee0.131632]#\u5982\u679c##sqft&lt\uff1b=1712\u65f6##\u7eac\u5ea6&&gt;38.46639#\u7eac\u5ea6&lt\uff1b=38.61377##\u7ecf\u5ea6&&gt;\uff1b-121.5035##THEN##\u7ed3\u679c=-48.838393+0.000376\u5e73\u65b9\u82f1\u5c3a+1.39\u7eac\u5ea6#\u89c4\u52192\uff1a[121.5035\u4f8b\uff0c\u5e73\u5747\u503c5.220439\uff0c\u8303\u56f44.477121\u52305.923762\uff0c\u6700\u5927\u9519\u8bef0.105572]#\u5982\u679c##\u5e73\u65b9\u82f1\u5c3a=1712##\u7eac\u5ea6\uff1b38.61377#\u7ecf\u5ea6&&gt;-38.61377##\u7ecf\u5ea6&lt\uff1b=-121.0504##THEN##\u7ed3\u679c=93.155414+0.000431\u5e73\u65b9\u82f1\u5c3a+0.78\u7ecf\u5ea6+0.16\u7eac\u5ea6#\u89c4\u52193\uff1a[90\u7bb1\uff0c\u5e73\u5747\u503c5.273133\uff0c\u8303\u56f44.851258\u81f35.580444\uff0c\u6700\u5927\u8bef\u5dee0.078920]#\u5982\u679c##\u5e73\u65b9\u82f1\u5c3a=1712##\u7eac\u5ea6#\u3002=38.46639##\u7136\u540e##\u7ed3\u679c=15.750124+0.000344\u5e73\u65b9\u82f1\u5c3a+0.09\u7ecf\u5ea6-0.005\u5f20\u5e8a\u4f4d##+0.005\u4e2a\u6d74\u7f38#\u89c4\u52194\uff1a[35\u7bb1\uff0c\u5e73\u5747\u503c5.340909\uff0c\u8303\u56f45.018076\u52305.616476\uff0c\u6700\u5927\u9519\u8bef0.086056]#\u5982\u679c##\u5e73\u65b9\u82f1\u5c3a=1712#\u7ecf\u5ea6=-121.5035#\u90a3\u4e48#\u7ed3\u679c=4.865655+0.000357\u5e73\u65b9\u82f1\u5c3a\u3002\n\u88ab\u9884\u6d4b\u7684\u65b0\u6837\u672c\u5c06\u843d\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u89c4\u5219\u6761\u4ef6\uff0c\u5e76\u4e14\u6700\u7ec8\u9884\u6d4b\u662f\u6240\u6709\u76f8\u5e94\u7ebf\u6027\u6a21\u578b\u9884\u6d4b\u7684\u5e73\u5747\u503c\u3002\n\u5982\u679c\u8be5\u6a21\u578b\u9488\u5bf950\u4e2a\u59d4\u5458\u4f1a\u8fd0\u884c\uff0c\u5219\u5728\u6240\u6709\u59d4\u5458\u4f1a\u4e2d\u603b\u5171\u4f7f\u7528\u4e86271\u6761\u89c4\u5219\uff0c\u5e73\u5747\u6bcf\u4f4d\u59d4\u5458\u4f1a\u6210\u5458\u4f7f\u7528\u4e865.42\u6761\u89c4\u5219\u3002\nRuleFit\u6a21\u578b(Friedman\u548cPopescu\uff0c2008)\u5728\u6982\u5ff5\u4e0a\u76f8\u5f53\u7b80\u5355\uff1a\u4f7f\u7528\u6811\u96c6\u6210\u521b\u5efa\u4e00\u5927\u7ec4\u89c4\u5219\uff0c\u5c06\u89c4\u5219\u7528\u4f5c\u4e8c\u5143\u9884\u6d4b\u5668\uff0c\u7136\u540e\u62df\u5408\u53ea\u5305\u62ec\u6700\u91cd\u8981\u89c4\u5219\u7279\u5f81\u7684\u6b63\u5219\u5316\u6a21\u578b\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u4f7f\u7528\u589e\u5f3a\u6811\u6765\u751f\u6210\u89c4\u5219\uff0c\u5219\u901a\u8fc7\u6bcf\u68f5\u6811\u7684\u6bcf\u6761\u8def\u5f84\u90fd\u5c06\u751f\u6210\u53ef\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u9884\u6d4b\u5668\u7684\u6761\u4ef6\u8bed\u53e5(\u5982\u4e0a\u9762\u9488\u5bf9rpart\u6240\u793a)\u3002\u5982\u679c\u5bf9Sacramento\u6570\u636e\u4f7f\u7528\u5177\u6709100\u6b21Boosting\u8fed\u4ee3\u3001\u9650\u5236\u4e3a3\u4e2a\u62c6\u5206\u7684xgBoost\u6a21\u578b\uff0c\u5219\u4f1a\u751f\u6210609\u6761\u89c4\u5219\u7684\u521d\u59cb\u96c6\u5408\u3002\u4e00\u4e9b\u4f8b\u5b50\uff1a\n\u663e\u7136\uff0c\u89c4\u5219\u663e\u793a\u4e86\u4e00\u4e9b\u5197\u4f59\uff1b\u89c4\u5219\u4e2d\u5f80\u5f80\u6709\u5927\u91cf\u7684\u76f8\u4f3c\u4e4b\u5904\u3002\n\u8fd9\u4e9b\u9884\u6d4b\u5668\u88ab\u6dfb\u52a0\u5230\u6b63\u5219\u5316\u56de\u5f52\u6a21\u578b(\u4f8b\u5982\uff0c\u7ebf\u6027\u6216\u903b\u8f91\u56de\u5f52\u6a21\u578b)\uff0c\u8be5\u6a21\u578b\u5c06\u8fdb\u884c\u7279\u5f81\u9009\u62e9\u4ee5\u5220\u9664\u65e0\u7528\u6216\u5197\u4f59\u7684\u89c4\u5219\u3002\u6839\u636e\u6a21\u578b\u53d7\u5230\u7684\u60e9\u7f5a\u7a0b\u5ea6\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u6700\u7ec8\u6a21\u578b\u4e2d\u5305\u542b\u7684\u89c4\u5219\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u6839\u636e\u60e9\u7f5a\u7684\u4e0d\u540c\uff0c\u8428\u514b\u62c9\u95e8\u6258\u6570\u636e\u7684\u6700\u7ec8\u89c4\u5219\u96c6\u53ef\u4ee5\u5927\u5230\u6570\u767e\u6761\uff0c\u4e5f\u53ef\u4ee5\u5c0f\u5230\u51e0\u6761\u3002\n\u6211\u4eec\u53ef\u4ee5\u751f\u6210glmnet\u53d8\u91cf\u91cd\u8981\u6027\u5206\u6570\uff0c\u7136\u540e\u6839\u636e\u539f\u59cb\u9884\u6d4b\u5668(\u800c\u4e0d\u662f\u89c4\u5219)\u53c2\u6570\u5316\u91cd\u8981\u6027\u3002\u4f8b\u5982\uff1a\u5bf9\u4e8e\u60e9\u7f5a\u503c\\(\\\u03bb\\)=0.005\uff1a\nRuleFit\u6709\u8bb8\u591a\u8c03\u4f18\u53c2\u6570\uff1b\u5b83\u7ee7\u627f\u4e86Boosting\u6a21\u578b\u548cglmnet(\u5957\u7d22\u6b63\u5219\u5316\u91cf)\u7684\u53c2\u6570\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6a21\u578b\u5bf9\u8c61\u5728\u5957\u7d22\u60e9\u7f5a\u4e2d\u8fdb\u884c\u591a\u4e2a\u9884\u6d4b\u3002\n\u603b\u800c\u8a00\u4e4b\uff0cRuleFit\u662f\u4e00\u79cd\u5c06\u89c4\u5219\u7528\u4f5c\u529f\u80fd\u7684\u7b80\u6d01\u800c\u5f3a\u5927\u7684\u65b9\u6cd5\u3002\u5c06\u6b64\u6a21\u578b\u4e0e\u7acb\u4f53\u4e3b\u4e49\u8fdb\u884c\u5bf9\u6bd4\u662f\u5f88\u6709\u8da3\u7684\uff1a\nRoss Quinlan\u4e00\u76f4\u652f\u6301\u6211\u4eec\u53d1\u5e03C5.0\u548cCubist\u5185\u90e8\u5de5\u4f5c\u539f\u7406\u7684\u52aa\u529b\u3002\u6211\u8981\u611f\u8c22\u4ed6\u7684\u5e2e\u52a9\u548c\u4ed6\u591a\u5e74\u6765\u6240\u505a\u7684\u4e00\u5207\u51fa\u8272\u7684\u5de5\u4f5c\u3002\nPopescu Be(2008)&lt;\u901a\u8fc7\u89c4\u5219\u96c6\u5408\u7684\u9884\u6d4b\u6027\u5b66\u4e60&gt;\uff0c\u201c\u5e94\u7528\u7edf\u8ba1\u5e74\u9274\u201d\uff0c\u7b2c916-954\u9875\u3002\nQuinlan R(1979)\u3002\u201c\u901a\u8fc7\u5f52\u7eb3\u4ece\u5927\u91cf\u7684\u4f8b\u5b50\u4e2d\u53d1\u73b0\u89c4\u5219\u3002\u201d\u5fae\u7535\u5b50\u65f6\u4ee3\u7684\u4e13\u5bb6\u7cfb\u7edf\u3002\nQuinlan R(1992)\u3002\u201c\u5728\u8fde\u7eed\u7684\u8bfe\u5802\u4e0a\u5b66\u4e60\u3002\u201d\u7b2c\u4e94\u5c4a\u6fb3\u5927\u5229\u4e9a\u4eba\u5de5\u667a\u80fd\u8054\u5e2d\u4f1a\u8bae\u8bba\u6587\u96c6\uff0c\u7b2c343-348\u9875\u3002\nQuinlan R(1993a)\u3002\u201c\u5c06\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\u548c\u57fa\u4e8e\u6a21\u578b\u7684\u5b66\u4e60\u76f8\u7ed3\u5408\u3002\u201d\u7b2c\u5341\u5c4a\u56fd\u9645\u673a\u5668\u5b66\u4e60\u4f1a\u8bae\u8bba\u6587\u96c6\uff0c\u7b2c236-243\u9875\u3002", "note_en": "Machine learning models come in many shapes and sizes. While deep learning models currently have the lion\u2019s share of coverage, there are many other classes of models that are effective across many different problem domains. This post gives a short summary of several  rule-based models that are closely related to tree-based models (but are less widely known).\n While this post is focused on explaining on how these models work, it coincides with the release of the  rules package, a tidymodels package that provides a user interface to these models. A  companion post at the tidyverse blog describes the usage of the package.\n  Rules in machine learning have been around for a long time (Quinlan, 1979). The focus of this article is using rules for traditional supervised learning (as opposed to   association rule mining). In the context of feature engineering, a rule is a  conditional logical statement. It can be attached to some sort of predicted value too, such as\n  There are various ways to create rules from data. The most popular method is to create a tree-based model and then \u201cflatten\u201d the model structure into a set of rules. This is called a \u201cseparate and conquer\u201d approach.\n To demonstrate this, let\u2019s use a data set with housing prices from Sacramento CA. Two predictors with a large number of levels are removed to make the rule output more readable:\n for (pkg in c(&#39;dplyr&#39;, &#39;modeldata&#39;, &#39;rpart&#39;)) { if (!requireNamespace(pkg)) { install.packages(pkg) }}library(dplyr)data(Sacramento, package = &#34;modeldata&#34;)Sacramento &lt;- Sacramento %&gt;% mutate(price = log10(price)) %&gt;% select(-zip, -city)str(Sacramento)\n ## tibble [932 \u00d7 7] (S3: tbl_df/tbl/data.frame)## $ beds : int [1:932] 2 3 2 2 2 3 3 3 2 3 ...## $ baths : num [1:932] 1 1 1 1 1 1 2 1 2 2 ...## $ sqft : int [1:932] 836 1167 796 852 797 1122 1104 1177 941 1146 ...## $ type : Factor w/ 3 levels &#34;Condo&#34;,&#34;Multi_Family&#34;,..: 3 3 3 3 3 1 3 3 1 3 ...## $ price : num [1:932] 4.77 4.83 4.84 4.84 4.91 ...## $ latitude : num [1:932] 38.6 38.5 38.6 38.6 38.5 ...## $ longitude: num [1:932] -121 -121 -121 -121 -121 ...\n   ## n= 932 ## ## node), split, n, deviance, yval## * denotes terminal node## ## 1) root 932 48.5000 5.334 ## 2) sqft&lt; 1594 535 18.7200 5.211 ## 4) sqft&lt; 1170 235 8.0440 5.107 ## 8) sqft&lt; 934.5 71 2.2760 5.002 *## 9) sqft&gt;=934.5 164 4.6500 5.152 *## 5) sqft&gt;=1170 300 6.1390 5.292 ## 10) longitude&lt; -121.3 243 4.8850 5.270 *## 11) longitude&gt;=-121.3 57 0.6081 5.388 *## 3) sqft&gt;=1594 397 10.6000 5.501 ## 6) sqft&lt; 2317 245 4.7420 5.432 ## 12) longitude&lt; -121.3 205 3.3190 5.407 *## 13) longitude&gt;=-121.3 40 0.6179 5.562 *## 7) sqft&gt;=2317 152 2.8450 5.611 ## 14) longitude&lt; -121.2 110 1.6790 5.570 *## 15) longitude&gt;=-121.2 42 0.4864 5.720 *\n The splits in this particular tree involve the same two predictors. These paths to the terminal nodes are comprised of a set of  if-then rules. Consider the path to the eighth terminal node:\n if (sqft &lt; 1594 &amp; sqft &lt; 1169.5 &amp; sqft &lt; 934.5) then pred = 5.001820\n It is easy to  prune this rule down to just  sqft &lt; 934.5. In all, the rules generated from this model would be:\n ## price ## 5.0 when sqft &lt; 935 ## 5.2 when sqft is 935 to 1170 ## 5.3 when sqft is 1170 to 1594 &amp; longitude &lt; -121## 5.4 when sqft is 1170 to 1594 &amp; longitude &gt;= -121## 5.4 when sqft is 1594 to 2317 &amp; longitude &lt; -121## 5.6 when sqft is 1594 to 2317 &amp; longitude &gt;= -121## 5.6 when sqft &gt;= 2317 &amp; longitude &lt; -121## 5.7 when sqft &gt;= 2317 &amp; longitude &gt;= -121\n What are some more modern models that can use or generate rules? We\u2019ll walk through three (which are all included in the  rules package).\n The C4.5 algorithm (Quinlan, 1993b) was an early tree-based model that was released not long after the more well known CART model. One cool aspect of this model is that it could generate a classification tree  or a set of rules. These rules are derived from the original tree much in the same way that was shown above for  rpart.\n Over the years, the author (Ross Quinlan) kept evolving the next generation of the model called  C5.0. About 10 years ago, he open-sourced that model and the C50 R package was born. Like its predecessor, C5.0 could be used for trees or for rules. There are a variety of advances to this model (detailed in Kuhn and Johnson (2013)), but the most significant was the inclusion of boosting. In effect, you could create an ensemble of classification rules. Rather than approaching the problem via the more modern stochastic gradient boosting paradigm, it is more similar to the classical AdaBoost methodology.\n Since C5.0 is classification only, an example of a single rule set for the iris data is:\n Rule 1: (50, lift 2.9) Petal.Length &lt;= 1.9 -&gt; class setosa [0.981]Rule 2: (48/1, lift 2.9) Petal.Length &gt; 1.9 Petal.Length &lt;= 4.9 Petal.Width &lt;= 1.7 -&gt; class versicolor [0.960]Rule 3: (46/1, lift 2.9) Petal.Width &gt; 1.7 -&gt; class virginica [0.958]Rule 4: (46/2, lift 2.8) Petal.Length &gt; 4.9 -&gt; class virginica [0.938]Default class: setosa\n If used on the iris data, a boosting ensemble with 50 constituent models used a total of 276 rules and each iteration averaged 5.52 rules per rule set.\n The primary method of controlling the complexity of each rule set is to adjust the minimum number of data points required to make additional splits within a node. The default for this parameter is two data points. If this value was increased to 20, the mean number of rules was reduced from 5.52 rules to 3.2 rules.\n When tuning, the other main tuning parameter is the number of boosting iterations. The C50 R package enables  sub-model predictions across boosting iterations; tuning this parameter over many values is not very computation expensive.\n The aforementioned Ross Quinlan also developed  model trees (Quinlan, 1992). These are regression tree-based models that contain  linear regression models in the terminal nodes. This model was called M5 and, much like C5.0, there was a rule-based analog. Most tree-based models, especially ensembles of trees, tend to produce models that underfit in the tails (much like regression to the mean). Model trees do not suffer from this issue since their terminal regression models could make predictions across the whole range of the outcome data.\n After an initial set of papers in the 1990\u2019s, Quinlan didn\u2019t publish much on the methodology as he evolved it. The modern version of model rules was called   Cubist. There were a number of small technical differences between Cubist and M5 rules (enumerated in Kuhn and Johnson (2013)) but the main improvements were:\n   Committee ensembles are similar to boosting. In boosting, a set of models are created sequentially. For the current iteration of boosting, the model is created using case weights that are defined by the results of previous models. In committees, case weights are not changed. Instead the outcome values are modified for each iteration of committees. For example, if a sample is under-predicted previously, its outcome value is changed to be larger so that the model will be pulled upward in an effort to stop under-predicting.\n In committees, the first model uses the original outcome value  \\(y\\). On further iterations, a modified value  \\(y^*\\) is used instead. For iteration  \\(m\\), the model uses this adjustment formula:\n  As a demonstration, the plot below shows how the pseudo-outcome changes over iterations. The observed price of the house in question is 5.3. On the first iteration, the model under-predicts (show as the solid black dot). The vertical line represents the residual from this model. On the next iteration, the open blue circle shows the value of  \\(y^*_{(2)}\\). On the second iteration, the prediction for this data point becomes  worse but, as iterations proceed, the residuals generally become smaller.\n  Ensemble predictions are made by averaging over the committee model predictions. This concludes in the  model-based prediction made by Cubist.\n After the model prediction, there is an option to conduct a post-model nearest-neighbor adjustment (Quinlan, 1993a). When predicting a new data point, the  K-nearest neighbors are found in the training set (along with their original predictions). If the training set predictions for the neighbors are denoted as  \\(t\\), the adjustment is:\n  where the weights  \\(w_\\ell\\) are based on the inverse distances (so that far points contribute less to the adjustment). The adjustment is large when the difference between the original and new predictions is large. As the difference between the predictions of the new sample and its closest neighbor increases, the adjustment becomes larger.\n Suppose our model used only square footage and longitude as predictors. The training data are shown below with a new prediction point represented as a large red square. The 6-closest neighbors in the training set are shown as red circles. The size of the circle represents the magnitude of the weight. This shows that the nearby points influence the adjustment more than distant points.\n  This adjustment generally improves performance of the model. Interestingly, there is often a pattern when tuning where the 1-nearest neighbor model does much worse than using no adjustment but two or more neighbors do a much better job. One idea is that the use of a single neighbor is likely overfitting to the training set (as would occur with a more traditional K-NN model).\n Using both of these techniques, Cubist tends to produce  very competitive in terms of performance. The two primary parameters are the number of committee members and the number of nearest neighbors to use in the adjustment. The Cubist package can use the same fitted model to make predictions across the number of neighbors, so there is little computational cost when tuning this parameter.\n For the Sacramento data, a single model (e.g.\u00a0one committee) consisted of 6 rules, each with its own linear regression model. For example, the first four rules are:\n ## Rule 1: [198 cases, mean 5.187264, range 4.681241 to 5.759668, est err 0.131632]## ## if## sqft &lt;= 1712## latitude &gt; 38.46639## latitude &lt;= 38.61377## longitude &gt; -121.5035## then## outcome = -48.838393 + 0.000376 sqft + 1.39 latitude## ## Rule 2: [254 cases, mean 5.220439, range 4.477121 to 5.923762, est err 0.105572]## ## if## sqft &lt;= 1712## latitude &gt; 38.61377## longitude &gt; -121.5035## longitude &lt;= -121.0504## then## outcome = 93.155414 + 0.000431 sqft + 0.78 longitude + 0.16 latitude## ## Rule 3: [90 cases, mean 5.273133, range 4.851258 to 5.580444, est err 0.078920]## ## if## sqft &lt;= 1712## latitude &lt;= 38.46639## then## outcome = 15.750124 + 0.000344 sqft + 0.09 longitude - 0.005 beds## + 0.005 baths## ## Rule 4: [35 cases, mean 5.340909, range 5.018076 to 5.616476, est err 0.086056]## ## if## sqft &lt;= 1712## longitude &lt;= -121.5035## then## outcome = 4.865655 + 0.000357 sqft\n New samples being predicted will fall into one or more rule conditions and the final prediction is the average of all of the corresponding linear model predictions.\n If the model is run for 50 committees, a total of 271 rules were used across the committees with the average of 5.42 rules per committee member.\n RuleFit models (Friedman and Popescu, 2008) are fairly simple in concept: use a tree ensemble to create a large set of rules, use the rules as binary predictors, then fit a regularized model that only includes the most important rule features.\n For example, if a boosted tree were used to generate rules, each path through each tree would generate a conditional statement that can be used to define a model predictor (as was shown above for  rpart). If an  xgboost model with 100 boosting iterations with a limit of three splits were used on the Sacramento data, an initial set of 609 rules were generated. Some examples:\n     Clearly, the rules show some redundancy; there tends to be a significant amount of similarity in the rules.\n These predictors are added to a regularized regression model (e.g.\u00a0linear or logistic) that will conduct feature selection to remove unhelpful or redundant rules. Based on how much the model is penalized, the user can choose the number of rules that are contained in the final model. For example, depending on the penalty, the final rule set for the Sacramento data can be as large as hundreds or as small as a handful.\n  We can generate glmnet variable importance scores and then parameterize the importance in terms of the original predictors (instead of the rules). For example: for a penalty value of  \\(\\lambda\\) = 0.005:\n  RuleFit has many tuning parameters; it inherits them from the boosting model as well as one from  glmnet (the amount of lasso regularization). Fortunately, multiple predictions can be made across the lasso penalty using the same model object.\n All-in-all, RuleFit is a neat and powerful method for using rules as features. It is interesting to contrast this model and Cubist:\n Ross Quinlan has been supportive of our efforts to publish the inner workings of C5.0 and Cubist. I\u2019d like to thank him for his help and all of the excellent work he has done over the years.\n Friedman JH; Popescu BE (2008) \u201c Predictive learning via rule ensembles.\u201d _Annals of Applied Statistic_s, pp.\u00a0916-954.\n  Quinlan R (1979). \u201cDiscovering rules by induction from large collections of examples.\u201d  Expert Systems in the Micro Electronics Age.\n Quinlan R (1992). \u201c Learning with continuous classes.\u201d  Proceedings of the 5th Australian Joint Conference On Artificial Intelligence, pp.\u00a0343-348.\n Quinlan R (1993a). \u201c Combining instance-based and model-based learning.\u201d  Proceedings of the Tenth International Conference on Machine Learning, pp.\u00a0236-243.", "posttime": "2020-05-29 11:53:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c4\u5219,rule,\u6a21\u578b", "title": "\u73b0\u4ee3\u57fa\u4e8e\u89c4\u5219\u7684\u6a21\u578b", "title_en": "Modern Rule-Based Models", "transed": 1, "url": "https://rviews.rstudio.com/2020/05/21/modern-rule-based-models/", "via": "", "real_tags": ["\u89c4\u5219", "rule", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "e879bb92b18a967a3af3e32a4b74dace.jpg", "infoid": 1004194, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u529e\u516c\u5ba4\u91cc\uff0c\u684c\u5b50\u5e94\u8be5\u76f8\u8ddd6\u82f1\u5c3a\u3002\u5982\u679c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u96c7\u4e3b\u5e94\u8be5\u8003\u8651\u5728\u684c\u5b50\u5468\u56f4\u7ad6\u8d77\u5851\u6599\u76fe\u724c\u3002\n\u8fd9\u4e9b\u90fd\u662f\u7f8e\u56fd\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3(Centers For Disease Control And Prevention)\u5173\u4e8e\u7f8e\u56fd\u96c7\u4e3b\u91cd\u65b0\u5f00\u653e\u529e\u516c\u5ba4\u4ee5\u9632\u6b62\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u7684\u6700\u5b89\u5168\u65b9\u5f0f\u7684\u5168\u9762\u65b0\u5efa\u8bae\u3002\n\u5982\u679c\u9075\u5faa\u8fd9\u4e9b\u6307\u5bfc\u65b9\u9488\uff0c\u5c06\u5bfc\u81f4\u4f01\u4e1a\u5de5\u4f5c\u7ecf\u9a8c\u7684\u6df1\u8fdc\u91cd\u5851\u3002\u4ed6\u4eec\u751a\u81f3\u98a0\u8986\u4e86\u591a\u5e74\u6765\u5173\u4e8e\u901a\u52e4\u7684\u5efa\u8bae\uff0c\u6566\u4fc3\u4eba\u4eec\u81ea\u5df1\u5f00\u8f66\u4e0a\u73ed\uff0c\u800c\u4e0d\u662f\u4e58\u5750\u516c\u5171\u4ea4\u901a\u5de5\u5177\u6216\u62fc\u8f66\uff0c\u4ee5\u907f\u514d\u6f5c\u5728\u7684\u75c5\u6bd2\u66b4\u9732\u3002\n\u8fd9\u4e9b\u5efa\u8bae\u4ece\u901a\u98ce\u7cfb\u7edf\u7684\u6280\u672f\u5efa\u8bae(\u6700\u53ef\u53d6\u7684\u662f\u6253\u5f00\u66f4\u591a\u7684\u7a97\u6237)\u5230\u5efa\u8bae\u53d6\u6d88\u62ff\u94c1\u5496\u5561\u673a\u548c\u96f6\u98df\u7bb1\u7b49\u516c\u5171\u798f\u5229\u3002\n\u6307\u5357\u8bf4\uff1a\u201c\u7528\u9884\u5305\u88c5\u7684\u5355\u4efd\u98df\u54c1\u4ee3\u66ff\u5496\u5561\u58f6\u3001\u996e\u6c34\u673a\u548c\u6563\u88c5\u96f6\u98df\u7b49\u9ad8\u89e6\u89c9\u7684\u516c\u5171\u98df\u54c1\u3002\u201d\n\u8fd8\u6709\u4e00\u4e9b\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u5982\u679c\u4e0d\u662f\u51e0\u4e4e\u4e0d\u53ef\u80fd\u7684\u8bdd\uff1a\u201c\u9650\u5236\u7535\u68af\u7684\u4f7f\u7528\u548c\u5360\u7528\uff0c\u4ee5\u4fdd\u6301\u81f3\u5c116\u82f1\u5c3a\u7684\u793e\u4ea4\u8ddd\u79bb\u3002\u201d\n\u7f8e\u56fd\u6700\u5927\u7684\u516c\u5171\u536b\u751f\u673a\u6784CDC\u5728\u5176\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86\u8fd9\u4e00\u6307\u5bfc\u65b9\u9488\uff0c\u56e0\u4e3a\u5404\u5dde\u6b63\u5f00\u59cb\u89e3\u9664\u6700\u4e25\u683c\u7684\u5c01\u9501\u547d\u4ee4\u3002\u5546\u5e97\u3001\u9910\u9986\u3001\u6d77\u6ee9\u548c\u516c\u56ed\u6b63\u5728\u5206\u9636\u6bb5\u91cd\u65b0\u5f00\u653e\u3002\u4f46\u5404\u7ea7\u767d\u9886\u529e\u516c\u5ba4\u5458\u5de5\u5927\u591a\u7ee7\u7eed\u5728\u5bb6\u5de5\u4f5c\uff0c\u80fd\u591f\u901a\u8fc7\u7b14\u8bb0\u672c\u7535\u8111\u3001\u89c6\u9891\u4f1a\u8bae\u548c\u677e\u5f1b\u6709\u6548\u5730\u5de5\u4f5c\u3002\n\u5176\u4e2d\u4e00\u4e9b\u63aa\u65bd\u4e0e\u4e00\u4e9b\u96c7\u4e3b\u5df2\u7ecf\u5728\u8ba1\u5212\u7684\u4e8b\u60c5\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u5176\u4ed6\u96c7\u4e3b\u53ef\u80fd\u4f1a\u7b80\u5355\u5730\u8ba4\u4e3a\u8ba9\u5458\u5de5\u5728\u5bb6\u5de5\u4f5c\u66f4\u5bb9\u6613\u3002\n\u7814\u7a76\u8be5\u5730\u533a\u7684\u975e\u8425\u5229\u6027\u667a\u5e93\u7845\u8c37\u5408\u8d44\u4f01\u4e1a\u7684\u603b\u88c1\u517c\u9996\u5e2d\u6267\u884c\u5b98\u62c9\u585e\u5c14\u00b7\u6c49\u8003\u514b(Russell Hancock)\u8868\u793a\uff1a\u201c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4f01\u4e1a\u4e0d\u60f3\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u3002\u201d\u201c\u4f60\u4e0d\u4f1a\u770b\u5230\u9f13\u58f0\u3001\u97f3\u8c03\u3001\u54ed\u58f0\u548c\u8d76\u56de\u529e\u516c\u5ba4\u7684\u58f0\u97f3\u3002\u201d\n\u6c49\u8003\u514b\u4ee5Twitter\u7b49\u6781\u7aef\u4f8b\u5b50\u4e3a\u4f8b\u8bf4\uff0c\u4ed6\u4ece\u7845\u8c37\u516c\u53f8\u548c\u8be5\u5730\u533a\u4ee5\u5916\u7684\u516c\u53f8\u90a3\u91cc\u90fd\u542c\u5230\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002Twitter\u66fe\u8868\u793a\uff0c\u5b83\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u91cd\u8fd4\u516c\u53f8\u529e\u516c\u7a7a\u95f4\u3002\u8bb8\u591a\u4eba\u8ba1\u5212\u901a\u8fc7\u7cbe\u7b80\u9700\u8981\u6765\u5de5\u4f5c\u7684\u4eba\u6765\u4fdd\u6301\u5b89\u5168\uff0c\u540c\u65f6\u5236\u5b9a\u4e0eCDC\u6307\u5bfc\u65b9\u9488\u4e00\u81f4\u7684\u8ba1\u5212\u3002\n\u201c\u4e0d\u95f4\u65ad\u5730\u6d88\u6bd2\u8868\u9762\uff0c\u6e05\u6d17\u6696\u901a\u7a7a\u8c03\uff0c\u201d\u4ed6\u8bf4\uff0c\u4ed6\u6307\u7684\u662f\u901a\u98ce\u7cfb\u7edf\uff0c\u201c\u6253\u5f00\u7a97\u6237\uff0c\u901a\u98ce\uff0c\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\u3002\u201d\n\u5927\u578b\u529e\u516c\u5bb6\u5177\u516c\u53f8Knoll\uff0cInc.\u8d1f\u8d23\u5de5\u4f5c\u573a\u6240\u7684\u526f\u603b\u88c1\u7279\u96f7\u897f\u00b7\u6000\u9ed8(Tracy Wmer)\u4e00\u76f4\u5728\u4e0e\u8bb8\u591a\u516c\u53f8\u8ba8\u8bba\u6700\u5b89\u5168\u7684\u91cd\u65b0\u5f00\u4e1a\u65b9\u5f0f\u3002\u4ed6\u8bf4\uff0c\u4ed6\u540c\u610fCDC\u7684\u5927\u90e8\u5206\u5efa\u8bae\uff0c\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u6210\u529f\u7684\u91cd\u65b0\u5f00\u4e1a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5c06\u53d6\u51b3\u4e8e\u5458\u5de5\u7684\u5408\u89c4\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6700\u5927\u7684\u56e0\u7d20\u662f\u52b3\u52a8\u529b\u548c\u4ed6\u4eec\u5728\u5b9e\u73b0\u8fd9\u4e00\u73b0\u5b9e\u65f6\u5fc5\u987b\u627f\u62c5\u7684\u4e2a\u4eba\u8d23\u4efb\u3002\u201d\n\u75be\u63a7\u4e2d\u5fc3\u4e5f\u63d0\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u91cd\u7533\u4e86\u4e00\u79cd\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u56fd\u6c11\u53e3\u5934\u7985\u7684\u4e1c\u897f\uff1a\u5b9a\u671f\u6d17\u624b\u81f3\u5c1120\u79d2\uff1b\u4e0d\u78b0\u62f3\u5934\u6216\u63e1\u624b\uff1b\u4e0d\u78b0\u8138\u3002\n\u7f8e\u56fd\u75be\u75c5\u63a7\u5236\u4e0e\u9884\u9632\u4e2d\u5fc3\u5efa\u8bae\uff0c\u5bf9\u5458\u5de5\u7684\u9694\u79bb\u5e94\u8be5\u5728\u4ed6\u4eec\u4e0a\u73ed\u4e4b\u524d--\u5728\u901a\u52e4\u65f6\u5f00\u59cb\u3002\u4e0e\u6700\u8fd1\u7684\u516c\u5171\u653f\u7b56\u6307\u5bfc\u65b9\u9488\u622a\u7136\u4e0d\u540c\u7684\u662f\uff0c\u8be5\u673a\u6784\u8868\u793a\uff0c\u4e2a\u4eba\u5e94\u8be5\u72ec\u81ea\u9a7e\u8f66\u4e0a\u73ed\u3002\n\u8be5\u673a\u6784\u8868\u793a\uff0c\u96c7\u4e3b\u5e94\u8be5\u652f\u6301\u8fd9\u4e00\u52aa\u529b\uff1a\u201c\u5411\u5458\u5de5\u63d0\u4f9b\u6fc0\u52b1\uff0c\u9f13\u52b1\u4ed6\u4eec\u4f7f\u7528\u5c3d\u91cf\u51cf\u5c11\u4e0e\u4ed6\u4eba\u8fd1\u8ddd\u79bb\u63a5\u89e6\u7684\u4ea4\u901a\u65b9\u5f0f\uff0c\u6bd4\u5982\u4e3a\u72ec\u81ea\u4e0a\u4e0b\u73ed\u6216\u5355\u4eba\u4e58\u8f66\u7684\u505c\u8f66\u63d0\u4f9b\u8865\u507f\u3002\u201d\n\u89c4\u6a21\u8f83\u5c0f\u7684\u516c\u53f8\u4e5f\u5df2\u7ecf\u5728\u8ba8\u8bba\u5982\u4f55\u91cd\u65b0\u5f00\u4e1a\uff0c\u5176\u4e2d\u4e00\u4e9b\u516c\u53f8\u7684\u60f3\u6cd5\u4e0eCDC\u63a8\u8350\u7684\u60f3\u6cd5\u76f8\u540c\u3002\u4f46\u8bb8\u591a\u529e\u516c\u5ba4\u90fd\u9762\u4e34\u7740\u72ec\u7279\u7684\u6311\u6218\u3002\u4f8b\u5982\uff0c\u90a3\u4e9b\u6ca1\u6709\u5411\u5916\u6253\u5f00\u7684\u7a97\u6237\uff0c\u5141\u8bb8\u901a\u98ce\uff1b\u5f88\u5c11\u6216\u6839\u672c\u6ca1\u6709\u8fdb\u5165\u6237\u5916\u7a7a\u95f4\u7684\u7a97\u6237\uff1b\u6216\u8005\u662f\u5c0f\u800c\u5f00\u653e\u7684\uff0c\u516d\u4e2a\u6708\u524d\u8fd8\u662f\u5fc5\u9700\u54c1\u7684\u5e73\u9762\u56fe\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u7981\u6b62\u4f7f\u7528\u3002\n\u4e3a\u8bbe\u65bd\u7ba1\u7406\u884c\u4e1a\u670d\u52a1\u7684\u51fa\u7248\u7269FMLink\u7684\u51fa\u7248\u4eba\u5f7c\u5f97\u00b7\u57fa\u6885\u5c14(Peter Kimmel)\u8bf4\uff0cCDC\u7684\u6307\u5bfc\u65b9\u9488\u662f\u201c\u4e00\u4efd\u5173\u4e8e\u9700\u8981\u505a\u4ec0\u4e48\u7684\u5f88\u597d\u7684\u6e05\u5355\u201d\u3002\n\u4f46\u4ed6\u8bf4\uff0c\u5b83\u4eec\u4e5f\u63d0\u51fa\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u5305\u62ec\u793e\u4f1a\u758f\u8fdc\u5c06\u5982\u4f55\u53d1\u6325\u4f5c\u7528\u3002\u201c\u8fd9\u610f\u5473\u7740\u6bcf\u5c42\u697c\u7684\u5de5\u4f5c\u573a\u6240\u8981\u5c11\u5f97\u591a\uff0c\u5bc6\u5ea6\u4e5f\u5927\u5927\u964d\u4f4e\u3002\u5269\u4e0b\u7684\u5de5\u4eba\u5c06\u4f4f\u5728\u54ea\u91cc\uff1f\u5bb6\u5177\u5728\u65b0\u7684\u5e03\u5c40\u4e0b\u80fd\u7528\u5417\uff1f\u201c\u3002\u4ed6\u95ee\u3002\n\u4ed6\u8bf4\uff1a\u201c\u867d\u7136\u6709\u5f88\u591a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6848\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u601d\u8003\u548c\u9884\u7b97\uff0c\u800c\u8fd9\u4e9b\u9884\u7b97\u53ef\u80fd\u5e76\u4e0d\u5b58\u5728\u3002\u201d\nMobify\u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u6e29\u54e5\u534e\u7684\u516c\u53f8\uff0c\u62e5\u670940\u540d\u5458\u5de5\uff0c\u5e2e\u52a9\u5927\u578b\u96f6\u552e\u5546\u5efa\u9020\u6570\u5b57\u5e97\u9762\u3002\u4e0a\u5468\uff0c\u8be5\u516c\u53f8\u642c\u56de\u4e86\u529e\u516c\u5ba4\uff0c\u5e76\u5df2\u6309\u7167CDC\u7684\u5efa\u8bae\u8fdb\u884c\u4e86\u591a\u9879\u6539\u53d8\u3002\u8fd9\u680b\u5927\u697c\u7684\u623f\u4e1c\u73b0\u5728\u8981\u6c42\u5728\u7535\u68af\u91cc\u4f7f\u7528\u53e3\u7f69\u3002\u516c\u53f8\u81ea\u5df1\u505a\u51fa\u7684\u5176\u4ed6\u6539\u53d8\u3002\n\u201c\u6bcf\u684c\u4e00\u4eba\u3002\u6211\u4eec\u628a\u7bad\u5934\u653e\u5728\u5730\u677f\u4e0a\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u53ef\u4ee5\u671d\u4e00\u4e2a\u65b9\u5411\u53bb\u6d17\u624b\u95f4\uff0c\u4ece\u53e6\u4e00\u4e2a\u65b9\u5411\u51fa\u6765\uff0c\u201c\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u4f0a\u6208\u5c14\u00b7\u6cd5\u83b1\u8328\u57fa(Igor Faletski)\u8bf4\u3002\u201c\u6ca1\u6709\u66f4\u591a\u7684\u5171\u4eab\u98df\u7269\u4e86\u3002\u536b\u751f\u7ad9\u7528\u6e7f\u5dfe\u3002\u201c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u8bf4\uff0c\u53ef\u80fd\u6709\u4e00\u79cd\u66f4\u5927\u7684\u529b\u91cf\u5728\u8d77\u4f5c\u7528\uff1a\u5de5\u4eba\u672c\u8eab\u7684\u51b2\u52a8\u3002\n\u201c\u81ea\u4ece\u6211\u4eec\u4e0a\u5468\u5f00\u4e1a\u4ee5\u6765\uff0c\u53ea\u67095\u540d\u5458\u5de5\u8fdb\u6765\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u56e0\u4e3a\u529e\u516c\u5ba4\u76f8\u5f53\u5927\uff0c\u6240\u4ee5\u4eba\u4eec\u53ef\u4ee5\u5750\u5728\u4e0d\u540c\u7684\u89d2\u843d\u3002\u201d", "note_en": "Inside the office, desks should be six feet apart. If that isn\u2019t possible, employers should consider erecting plastic shields around desks.\n These are among  sweeping new recommendations from the Centers for Disease Control and Prevention on the safest way for American employers reopening their offices to prevent the spread of the coronavirus.\n If followed, the guidelines would lead to a far-reaching remaking of the corporate work experience. They even upend years of advice on commuting, urging people to drive to work by themselves, instead of taking mass transportation or car-pooling, to avoid potential exposure to the virus.\n The recommendations run from technical advice on ventilation systems (more open windows are most desirable) to suggested abolition of communal perks like latte makers and snack bins.\n \u201cReplace high-touch communal items, such as coffee pots, water coolers, and bulk snacks, with alternatives such as prepackaged, single-serving items,\u201d the guidelines say.\n And some border on the impractical, if not near impossible: \u201cLimit use and occupancy of elevators to maintain social distancing of at least 6 feet.\u201d\n The C.D.C., the nation\u2019s top public health agency, posted the guidelines on its website as states are beginning to lift their most stringent lockdown orders. Shops, restaurants, beaches and parks are reopening in phases. But white-collar office employees at all levels mostly continue to work from home, able to function effectively with laptops, video conferencing and Slack.\n  Some of the measures are in keeping with what some employers are already planning, but other employers may simply decide it\u2019s easier to keep employees working from home.\n \u201cCompanies, surprisingly, don\u2019t want to go back to work,\u201d said Russell Hancock, president and CEO of Joint Venture Silicon Valley, a nonprofit think tank that studies the region. \u201cYou will not see the drum beat and hue and cry and rush to get back to the office.\u201d\n  Citing extreme examples like Twitter, which has said it may never return to corporate office space, Mr. Hancock said that he has heard similar things from both Silicon Valley companies and those outside the region. Many are planning to stay safe by thinning who is required to come to work, along with making plans consistent with the C.D.C. guidelines.\n \u201cIncessant disinfecting of surfaces, cleansing out your HVAC,\u201d he said, referring to the ventilation system, \u201copening windows, ventilation, all of those things.\u201d\n Tracy Wymer, vice president of workplace for Knoll, Inc., a large office-furniture company, who has been in discussions with numerous companies about the safest way to reopen, said he agreed with much of what the C.D.C. was advising but he added that a big part of successful reopening would involve employee compliance.\n  \u201cThe biggest factor is on the work force and the personal responsibility they must take in making this reality work,\u201d he said.\n The C.D.C. addressed that part too, reiterating what has become a kind of national mantra: regular hand washing of at least 20 seconds; no fist bumps or handshakes; no face touching.\n The C.D.C. recommended that the isolation for employees should begin before they get to work \u2014 on their commute. In a stark change from public policy guidelines in the recent past, the agency said individuals should drive to work \u2014 alone.\n Employers should support this effort, the agency said: \u201cOffer employees incentives to use forms of transportation that minimize close contact with others, such as offering reimbursement for parking for commuting to work alone or single-occupancy rides.\u201d\n  Smaller companies also have already been discussing how to reopen, some with the kinds of ideas the C.D.C. is recommending. But there are distinctive challenges in many offices. For instance, those that do not have windows that open to the outside, permitting ventilation; have little or no access to outdoor space; or are small and open, with floor plans that were de rigueur just six months ago and now are verboten.\n  Peter Kimmel, the publisher of FMLink, a publication serving the facilities management industry, said that the C.D.C. guidelines are \u201ca good checklist of what needs to be done.\u201d\n But they also raise numerous questions, he said, including how social distancing will work. \u201cThis means many fewer workplaces per floor, reducing the density considerably. Where will the remaining workers be housed? Will the furniture work in the new layout?\u201d he asked.\n \u201cWhile there are many solutions, these often require substantial thought and a budget that likely doesn\u2019t exist,\u201d he said.\n Mobify, a Vancouver-based company with 40 employees that helps build digital storefronts for major retailers, moved back into its office last week and has already made a number of the changes recommended by the C.D.C. The building\u2019s landlord now requires mask use in the elevator. Other changes the company made on its own.\n \u201cOne person per table. We put arrows on the floor so people will go to the restroom one direction and come out the other,\u201d said Igor Faletski, the company\u2019s chief executive. \u201cNo more shared food. Sanitation stations with wipes.\u201d\n At the same time, he said, there may be a larger force at work: the impulses of the workers themselves.\n \u201cSince we opened up last week, only five employees have come in,\u201d he said. \u201cBecause the office is quite big, there was room for people to sit in different corners.\u201d", "posttime": "2020-05-29 11:07:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5efa\u8bae,recommends", "title": "CDC\u5efa\u8bae\u5bf9\u7f8e\u56fd\u529e\u4e8b\u5904\u8fdb\u884c\u5168\u9762\u6539\u9769", "title_en": "CDC Recommends Sweeping Changes to American Offices", "transed": 1, "url": "https://www.nytimes.com/2020/05/28/health/cdc-coronavirus-offices.html", "via": "", "real_tags": ["\u5efa\u8bae"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004193, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u6211\u5728Haskell\u53d6\u5f97\u8fdb\u5c55\u7684\u6301\u7eed\u52aa\u529b\u7684\u4e00\u90e8\u5206(\u8fd9\u662f\u62112016\u5e74\u7684\u76ee\u6807\u4e4b\u4e00\uff01)\uff0c\u6211\u5728edX\u4e0a\u5173\u6ce8Erik Meijer\u7684\u51fd\u6570\u5f0f\u7f16\u7a0bMOOC\u3002\n\u7b2c\u4e00\u5802\u8bfe\u662f\u975e\u5e38\u57fa\u7840\u7684\u4e1c\u897f\uff0c\u6211\u5f88\u5feb\u5c31\u5b66\u5b8c\u4e86\u3002\u7b2c7\u8bfe\u662f\u5173\u4e8e\u51fd\u6570\u89e3\u6790\u5668\u548cM*(\u53ef\u6015\u7684)\u3002\u8fd9\u5c31\u662f\u6211\u7b2c\u4e00\u6b21\u9047\u5230\u56f0\u96be\u7684\u5730\u65b9\uff0c\u6211\u60f3\u8fd9\u4f1a\u662f\u4e00\u7bc7\u6709\u8da3\u7684\u6587\u7ae0\u3002\u6211\u4ee5\u524d\u5df2\u7ecf\u5728Haskell\u4e2d\u4f7f\u7528\u8fc7\u89e3\u6790\u5668\u7ec4\u5408\u5668(\u4e3b\u8981\u662fParsec\u548cAttoparsec)\uff0c\u4f46\u4ece\u672a\u771f\u6b63\u7406\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6216\u8005\u81f3\u5c11\u4e0d\u8db3\u4ee5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u89e3\u6790\u5668\u7ec4\u5408\u5668\u3002\u4e0b\u9762\u662f\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u770b\u6cd5\u3002\u4e0d\u8981\u671f\u5f85\u771f\u6b63\u5148\u8fdb\u7684\u4e1c\u897f\uff01\u8fd9\u53ea\u662f\u5bf9\u57fa\u672c\u6982\u5ff5\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u6784\u5efa\u66f4\u590d\u6742\u3001\u66f4\u6709\u7528\u7684\u5de5\u5177\u3002\u7279\u522b\u662f\uff0c\u6211\u4e0d\u4f1a\u8c08\u8bba\uff1a\n\u7f16\u5199\u60a8\u81ea\u5df1\u7684\u89e3\u6790\u5668\u7ec4\u5408\u5668\u5e93\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u5b9e\u662f\uff0c\u60a8\u5c06\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5b66\u4e60(\u6216\u5de9\u56fa)\u5176\u4ed6\u77e5\u8bc6\uff0c\u6bd4\u5982\uff1a\u51fd\u6570\u5668\u3001\u5e94\u7528\u7a0b\u5e8f\uff0c\u5f53\u7136\u8fd8\u6709Monad\uff0c\u66f4\u4e00\u822c\u7684\u662f\uff0c\u5982\u4f55\u5728Haskell\u4e2d\u8bbe\u8ba1DSL\u3002\u6211\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u6982\u5ff5\u4e86(\u81f3\u5c11\uff0c\u6211\u662f\u8fd9\u4e48\u60f3\u7684\uff0c\u2026)\u3002\uff0c\u4f46\u662f\u4ece\u9ad8\u7ea7\u62bd\u8c61\u4e2d\u77e5\u9053\u67d0\u4ef6\u4e8b\u662f\u4ec0\u4e48\uff0c\u4e0e\u77e5\u9053\u5982\u4f55\u5728\u5177\u4f53\u7c7b\u578b(\u5982\u89e3\u6790\u5668)\u4e0a\u5b9e\u73b0\u5b83\u4e0d\u662f\u4e00\u56de\u4e8b\uff01\n\u6211\u4eec\u53ef\u4ee5\u5c06\u89e3\u6790\u5668\u89c6\u4e3a\u6d88\u8017\u67d0\u4e9b\u8f93\u5165\u7684\u4e1c\u897f\uff0c\u5e76\u8f93\u51fa\u6240\u6d88\u8017\u5185\u5bb9\u7684\u7ed3\u6784\u5316\u8868\u793a\u5f62\u5f0f\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u5b57\u7b26\u4e32(Haskell\u7c7b\u578b\u5b57\u7b26\u4e32)\u3002\u6240\u4ee5\u8fd9\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\n\u8fd9\u91cc\uff0ca\u8868\u793a\u4ece\u5b57\u7b26\u6d41(\u5b57\u7b26\u4e32)\u6784\u5efa\u7684\u5185\u5bb9\u7684\u7c7b\u578b\u3002\u8fd9\u53ef\u4ee5\u662f\u8bed\u6cd5\u6811\u3001\u6570\u5b57\u5217\u8868\u6216\u5176\u4ed6\u4efb\u4f55\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u80fd\u591f\u8bc6\u522b\u50cf&#34\uff1b[1\uff0c2\uff0c3\uff0c4]&#34\uff1b\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u7684\u89e3\u6790\u5668\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\uff1aparser[Int](\u6269\u5c55\u4e3astring-&gt\uff1b[Int])\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u5217\u8868\u3002\n\u8003\u8651\u5230\u7b2c\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56dea\u800c\u4e0d\u662fa(\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c)\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u66f4\u4e30\u5bcc\u7684\u7c7b\u578b\uff0c\u5982\u4efb\u4e00\u79cd\u7c7b\u578b\u6765\u5904\u7406\u89e3\u6790\u9519\u8bef\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u7531a\u548c\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5143\u7ec4\uff0c\u5b83\u8868\u793a\u672a\u88ab\u89e3\u6790\u5668\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u90e8\u5206\u3002\u7136\u540e\uff0c\u8be5\u7c7b\u578b\u5c06\u53d8\u4e3a\uff1a\n\u4e3e\u4e00\u4e2a\u5931\u8d25\u7684\u89e3\u6790\u5668\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u6211\u4eec\u524d\u9762\u7684\u80fd\u591f\u5904\u7406\u6574\u6570\u5217\u8868\u7684\u89e3\u6790\u5668\uff0c\u5982\u679c\u60a8\u7ed9\u5b83\u5b57\u7b26\u4e32&#34\uff1b[1\uff0c2&#34\uff1b\uff1b\uff0c\u5b83\u5c06\u5931\u8d25\uff0c\u5e76\u4e14\u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u3002\n\u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u6211\u4eec\u5411\u89e3\u6790\u5668\u63d0\u4f9b&#34\uff1b[1\uff0c2\uff0c3\uff0c4]toto&#34\uff1b\uff0c\u5b83\u5c06\u6d88\u8017\u5b57\u7b26\u4e32\u4e2d\u8868\u793a\u6574\u6570\u5217\u8868\u7684\u90e8\u5206\uff0c\u800c\u7559\u4e0b&#34\uff1btoto&#34\uff1b\u4f5c\u4e3a\u5269\u4f59\u7684\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u7ed3\u679c\u5c06\u662f\uff1aJust([1\uff0c2\uff0c3\uff0c4]\uff0c&#34\uff1btoto&#34\uff1b)\u3002\n--\u6b64\u89e3\u6790\u5668\u59cb\u7ec8\u6210\u529f\u5e76\u8fd4\u56de\u4f5c\u4e3a\u8f93\u5165\u7ed9\u5b9a\u7684\u503c--(\u4fdd\u6301\u8f93\u5165\u5b57\u7b26\u4e32\u4e0d\u53d8)\uff1a\uff1aa-&gt\uff1bParser a a=Parser$\\s-&gt\uff1bJust(a\uff0cs)\u3002\n--\u6b64\u89e3\u6790\u5668\u8fd4\u56de\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c--\u7a7a\u8f93\u5165\u65f6\u5931\u8d25\uff1a\uff1aparser Char=Parser$\\s-&gt\uff1bcase s of[]-&gt\uff1bNothing(c\uff1axs)-&gt\uff1bJust(c\uff0cxs)\u3002\n\u57fa\u672c\u89e3\u6790\u5668\u7684\u884c\u4e3a\u4f3c\u4e4e\u4e0e\u9884\u671f\u4e00\u81f4\u3002\u6211\u4eec\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u4ec0\u4e48\u4e5f\u5f97\u4e0d\u5230\uff0c\u5e76\u4e14\u4ed6\u4eec\u80fd\u591f\u90e8\u5206\u4f7f\u7528\u8f93\u5165\u3002\u6240\u4ee5\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u4f46\u662f\u66f4\u590d\u6742\u7684\u89e3\u6790\u5668\u5462\uff1f\u6211\u4eec\u5e0c\u671b\u89e3\u6790\u5b57\u7b26\u4e32\u6216\u66f4\u590d\u6742\u7684\u6a21\u5f0f\u3002\u8ba9\u6211\u4eec\u4f7f\u7528\u57fa\u672c\u7684\u89e3\u6790\u5668\u5c1d\u8bd5\u4ece\u8f93\u5165\u4e2d\u8bc6\u522b\u5b57\u7b26\u4e32\uff1a\n\uff1a\uff1astring-&gt\uff1bParser String&#34\uff1b&#34\uff1b=return&#34\uff1b&#34\uff1b(c1\uff1axs1)=Parser$\\s-&gt\uff1bcase runParser oneChar of Nothing-&gt\uff1bNothing Just(c2\uff0cREST)-&gt\uff1bif c1==c2\u5219case runParser(String Xs1)Nothing of Nothing-&gt\uff1bNothing Just(Match\uff0crest 2)-&gt\uff1bJust(c2\uff1aMatch\uff0cREST 2\u3002\n\u8fd9\u4e0d\u662f\u5f88\u65b9\u4fbf(\u4f46\u5f88\u6709\u6548)\u2026\u3002\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u4e00\u904d\u53c8\u4e00\u904d\u5730\u7f16\u5199\u6837\u677f\u6765\u7f16\u5199\u89e3\u6790\u5668\u3002\u5e0c\u671b\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8457\u540d\u7684\u7ed3\u6784\uff0c\u5b83\u5141\u8bb8\u5728Haskell\u4e2d\u8fdb\u884c\u7ec4\u5408\uff0c\u5b83\u53eb\u505aMonad(\u6211\u4e0d\u4f1a\u518d\u505a\u5173\u4e8eMonad\u7684\u6559\u7a0b\uff0c\u6240\u4ee5\u6211\u5047\u8bbe\u60a8\u5df2\u7ecf\u719f\u6089\u4e86\u8fd9\u4e2a\u6982\u5ff5)\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u6211\u4eec\u7684\u89e3\u6790\u5668\u7c7b\u578b\u6210\u4e3aMonad\u7684\u5b9e\u4f8b\u6765\u907f\u514d\u6240\u6709\u7684\u6837\u677f\u3002\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528DO\u8bed\u6cd5\u5e72\u51c0\u5730\u7f16\u5199\u6211\u4eec\u7684\u89e3\u6790\u5668\uff01\u751c!\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u6211\u4eec\u7684\u89e3\u6790\u5668\u6210\u4e3a\uff1aFunctor\u3001Applicative\u548cMonad\u7684\u5b9e\u4f8b\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u7684\u89e3\u6790\u5668\u662f\u51fd\u6570\u5668\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5c06\u51fd\u6570\u6620\u5c04\u5230\u6211\u4eec\u7684\u89e3\u6790\u7ed3\u679c\u4e0a\uff1a\nInstance functor Parser\u5176\u4e2d--FMAP\uff1a\uff1a(a-&gt\uff1bb)-&gt\uff1bParser a-&gt\uff1bParser b--1.\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u8fd0\u884cParser\u3002--2.\u5bf9\u89e3\u6790\u7ed3\u679c\u5e94\u7528\u51fd\u6570\u3002FMAP f p=Parser$\\s-&gt\uff1bcase runParser p s of Nothing-&gt\uff1bNothing Just(a\uff0crest)-&gt\uff1bJust(f a\uff0crest)\n--\u89e3\u6790`String`&#34\uff1b42&#34\uff1b\u7136\u540e\u4f7f\u7528`read`\uff1a\uff1aparser Int=(FMAP Read$String&#34\uff1b42&#34\uff1b)parse42&#34\uff1b42\u5c06\u5176\u8f6c\u6362\u4e3a`Int`\uff01&#34\uff1b\n\u5176\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u89e3\u6790\u5668\u6210\u4e3aApplicative\u7684\u5b9e\u4f8b\u3002\u8fd9\u90e8\u5206\u5bf9\u6211\u6765\u8bf4\u5e76\u4e0d\u660e\u663e\u3002\u6211\u627e\u5230\u7684\u6240\u6709\u793a\u4f8b\u90fd\u662f\u5173\u4e8e\u7b80\u5355\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u6bd4\u5982\u53ef\u80fd\uff0c\u4f46\u6211\u53d1\u73b0\u89e3\u6790\u5668\u975e\u5e38\u4e0d\u540c\u3002\u4f46\u662f\u591a\u4e8f\u4e86\u7c7b\u578b\u548c\u4e00\u4e9b\u7528\u4f8b(\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230)\uff0c\u6211\u60f3\u5230\u4e86\u4e0b\u9762\u7684\u5b9e\u73b0(\u5e0c\u671b\u5b83\u662f\u6b63\u786e\u7684\u2026)\u3002\uff1a\n\u5b9e\u4f8b\u5e94\u7528\u89e3\u6790\u5668\uff0c\u5176\u4e2d--PURE\uff1a\uff1aA-&gt\uff1bParser a--\u5728\u89e3\u6790\u5668\u5185\u5305\u88c5\u4e00\u4e2a\u503c\uff0c\u4fdd\u6301\u8f93\u5165\u4e0d\u53d8\u3002Pure a=Parser$\\s-&gt\uff1bJust(a\uff0cs)--(&lt\uff1b*&gt\uff1b)\uff1a\uff1aParser(a-&gt\uff1bb)-&gt\uff1bParser a-&gt\uff1bParser b--1.\u5728\u8f93\u5165\u4e0a\u8fd0\u884c\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668(\u751f\u6210\u51fd\u6570(a-&gt\uff1bb)\u3002--2.\u5bf9\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668\u7559\u4e0b\u7684\u5269\u4f59\u8f93\u5165\u8fd0\u884c\u7b2c\u4e8c\u4e2a\u89e3\u6790\u5668\u3002--3.\u5bf9\u7b2c\u4e8c\u4e2a\u89e3\u6790\u5668\u7684\u7ed3\u679c\u5e94\u7528\u51fd\u6570(a-&gt\uff1bb)\u3002p1&lt\uff1b*&gt\uff1bp2=\u89e3\u6790\u5668$\\s-&gt\uff1bcase runParser p1 s of Nothing-&gt\uff1bNothing Just(f\uff0crest)-&gt\uff1bcase runParser p2 Rest of Nothing-&gt\uff1bNothing Just(a\uff0crest 2)-&gt\uff1bJust(f a\uff0crest 2)\u3002\n\u524d\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7528\u5904\u53ef\u80fd\u5e76\u4e0d\u660e\u663e\uff0c\u4f46\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u89e3\u6790\u5668\u9886\u57df\u5185\u63d0\u5347\u4e00\u4e9b\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u51e0\u4e2a\u89e3\u6790\u5668\u7684\u7ed3\u679c\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7684\u7ed3\u679c\u5206\u7ec4\u5230\u4e00\u4e2a\u5143\u7ec4\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Applicative\u6765\u5b9e\u73b0\uff1a\n\u8fd9\u662f\u6211\u4eec\u5c06\u7528\u6765\u5c06\u539f\u59cb\u89e3\u6790\u7ed3\u6784\u8f6c\u6362\u4e3a\u6211\u4eec\u81ea\u5df1\u7684\u7c7b\u578b(\u4f8b\u5982\uff1aAST)\u7684\u6784\u9020\u3002\n\u6570\u636eAST=Foo String|Bar String|Pair Char Char\u6d3e\u751f(\u663e\u793a)\uff0cparseBar\uff0cparsePair\uff1a\uff1aparser AST=Foo&lt\uff1b$&gt\uff1bString&#34\uff1bfoo&#34\uff1b=Bar&lt\uff1b$&gt\uff1bString&#34\uff1bbar&#34\uff1b=Pair&lt\uff1b$&gt\uff1boneChar&lt\uff1b*&gt\uff1boneChar\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u7684\u89e3\u6790\u5668\u662fMonad\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5fc5\u987b\u5b9e\u73b0\uff1a&gt\uff1b&gt\uff1b=\uff0c&gt\uff1b&gt\uff1b&gt\uff1b\uff0c\u8fd4\u56de\u548c\u5931\u8d25\uff1a\n\u5b9e\u4f8b\u5355\u9879\u89e3\u6790\u5668WHERE--(&gt\uff1b&gt\uff1b=)\uff1a\uff1aParser a-&gt\uff1b(a-&gt\uff1bParser b)-&gt\uff1bParser b--1.\u5728\u8f93\u5165\u65f6\u8fd0\u884c\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668\u3002--2.\u5c06\u89e3\u6790\u7ed3\u679c\u53cd\u9988\u7ed9`f`\u3002--3.\u5728\u5269\u4f59\u90e8\u5206\u8fd0\u884c\u7b2c\u4e8c\u4e2a\u89e3\u6790\u5668(`f`\u7684\u7ed3\u679c)--input(\u7531\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668\u7559\u4e0b)p&gt\uff1b=f=Parser$\\s-&gt\uff1bcase runParser p s of Nothing-&gt\uff1bNothing Just(a\uff0crest)-&gt\uff1brunParser(F A)rest--(&gt\uff1b&gt\uff1b)\uff1aparser a--&gt\uff1bParser b-&gt\uff1bParser b--1.\u8fd0\u884c\u3002--2.\u5bf9\u5269\u4f59\u8f93\u5165(\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668\u7559\u4e0b)\u8fd0\u884c\u7b2c\u4e8c\u4e2a\u89e3\u6790\u5668--\u6211\u4eec\u5ffd\u7565\u7b2c\u4e00\u4e2a\u89e3\u6790\u5668\u7684\u7ed3\u679c\u3002p1&gt\uff1b&gt\uff1bp2=\u89e3\u6790\u5668$\\s-&gt\uff1bcase runParser p1s of Nothing-&gt\uff1bNothing Just(_\uff0cREST)-&gt\uff1brunParser p2 rest--return\uff1a\uff1aA-&gt\uff1bParser a return=\u7eaf--FAIL\uff1a\uff1aString-&gt\uff1bParser a Fail_=Parser(Const Nothing)\n\u591a\u4e8f\u4e86\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528DO\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u5c06\u7b80\u5316\u66f4\u590d\u6742\u7684\u89e3\u6790\u5668\u7684\u5b9e\u73b0\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002\n--\u4ece\u8f93\u5165\u89e3\u6790\u7279\u5b9a\u7684`Char`\uff1a\uff1aChar-&gt\uff1bParser Char c=do C1&lt\uff1b-oneChar\u5982\u679cc==C1\uff0c\u5219\u8fd4\u56deC1\u5426\u5219\u5931\u8d25\u3002\n--\u4ece\u8f93\u5165\u89e3\u6790\u7279\u5b9a\u6a21\u5f0f\uff1a\uff1astring-&gt\uff1bParser string[]=return[](c\uff1axs)=do c1&lt\uff1b-char c rest&lt\uff1b-string&#39\uff1bxs return(c1\uff1arest)\u3002\ndo\u8868\u793a\u6cd5\u4f7f\u7ec4\u5408\u89e3\u6790\u5668\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\uff01\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u6784\u5efa\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u89e3\u6790\u7ec4\u5408\u7b26\uff1a\u9009\u9879\u3001\u8bb8\u591a\u3001\u9009\u9879\u7b49\u7b49\u3002\u4f46\u662f\u6211\u5c06\u628a\u5b83\u7559\u4f5c\u7ec3\u4e60\u3002\n\u6b64\u5916\uff0c\u5b9e\u73b0\u9519\u8bef\u62a5\u544a\u673a\u5236\u4ee5\u53ca\u4f4d\u7f6e\u8ddf\u8e2a(\u5b9a\u4f4d\u8f93\u5165\u4e2d\u7684\u9519\u8bef)\u4f1a\u5f88\u6709\u8da3\uff0c\u4f46\u6211\u5c06\u628a\u5b83\u7559\u7ed9\u53e6\u4e00\u4e2a\u535a\u5ba2\u5e16\u5b50(\u6216\u8005\u4f5c\u4e3a\u8bfb\u8005\u7684\u7ec3\u4e60\uff01)\u3002\n\u5b9e\u73b0(\u975e\u5e38)\u57fa\u672c\u7684\u89e3\u6790\u7ec4\u5408\u5668\u4f7f\u6211\u66f4\u597d\u5730\u7406\u89e3\u4e86Parsec\u6216Attoparsec\u7b49\u5e93\u7684\u57fa\u7840\uff0c\u5e76\u5b9e\u73b0\u4e86Applicative\u548cMonad\u7b49\u7c7b\u578b\u7c7b\u7684\u4e0d\u90a3\u4e48\u5fae\u4e0d\u8db3\u9053\u7684\u5b9e\u4f8b\u3002\u867d\u7136\u5f88\u57fa\u672c\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u66f4\u719f\u6089Haskell\u7684\u7c7b\u4f3cDSL\u7684\u529f\u80fd\uff0c\u5e76\u611f\u53d7\u8be5\u8bed\u8a00\u5728\u7279\u5b9a\u9886\u57df\u5efa\u6a21\u65b9\u9762\u63d0\u4f9b\u7684\u5f3a\u5927\u529f\u80fd\u7684\u597d\u65b9\u6cd5\u3002", "note_en": "As part of my ongoing effort to make progress in Haskell (that\u2019s one of my goals for 2016!), I\u2019m following the  MOOC on functionnal programming by  Erik Meijer on  edX.\n The first lessons were pretty basic stuff, and I got through them quickly. Lesson 7 is about  Functional parsers and M***** (scary). This is where I encountered my first difficulties, and I thought it would be an interesting writing. I already used parser combinators in Haskell before (mainly  Parsec and  Attoparsec), but never really understood how they worked, or at least not enough to implement one myself. So here is my take on the subject. Don\u2019t expect really advanced stuff! It\u2019s just an introduction to the basic concepts, on which we could build more complex and useful tools. In particular,  I won\u2019t talk about:\n    One of the interesting facts about writing your own parser combinators library, is that you will learn (or consolidate) other knowledges in the process, like:  Functors,  Applicatives and, of course,  Monads, and more generaly, how to  design DSL in Haskell. I already knew about this concepts (at least, that\u2019s what I thought\u2026), but knowing what something is from a high level of abstraction,  is not the same as knowing how to implement it on a concrete type (like a Parser)!\n  We can view a  Parser as  something that consumes some input, and outputs a structured representation of what was consumed. For the sake of simplicity, we\u2019ll only consume strings (Haskell type  String). So that would be something like:\n  Here  a represents the type of what is  built from the stream of characters ( String). This could be a syntactic tree, or a list of numbers, or anything else. For example a parser that is able to recognize a string like  &#34;[1, 2, 3, 4]&#34; could have the type:  Parser [Int] (expended to  String -&gt; [Int]), which means it takes a  String and output a  list of integers.\n   To take into account the first point, we could return  Maybe a instead of  a (resulting in  Nothing in case of failure). Note that we could also use a richer type like  Either to handle parsing errors. And for the second point, we can return a tuple of a  a and a  String, which represents the part of the string that wasn\u2019t consumed by the parser. The type would then become:\n  As an example of a parser that would fail, if you take our previous  parser that is able to handle a list of integers, if you give it the string  &#34;[1 ,2&#34;, it will fail, and return  Nothing.\n Similarly, if we feed the  parser with  &#34;[1, 2, 3, 4]toto&#34;, it will consume the part of the string that represents the list of integers, and leave  &#34;toto&#34; as a remaining input. Thus the result would be:  Just ([1, 2, 3, 4], &#34;toto&#34;).\n   -- This parser always succeeds and returns the value given as input -- (leaving the input string intact)  :: a -&gt;  Parser a  a =  Parser $ \\s -&gt;  Just (a, s)\n -- This parser returns the first char of the input string, and -- fail on empty input  ::  Parser  Char  =  Parser $ \\s -&gt;  case s  of [] -&gt;  Nothing (c:xs) -&gt;  Just (c, xs)\n          The basic parsers seem to behave as expected. We get  Nothing in case of failure, and they are able to partially consume the input. So all is good, but what about more complex parsers? We would like to parse strings, or more complex patterns. Let\u2019s try to recognize a string from the input, using our basic parsers:\n ::  String -&gt;  Parser  String   &#34;&#34; = return  &#34;&#34;  (c1:xs1) =  Parser $ \\s -&gt;  case runParser oneChar s  of  Nothing -&gt;  Nothing  Just (c2, rest) -&gt;  if c1 == c2  then  case runParser (string xs1) rest  of  Nothing -&gt;  Nothing  Just (match, rest2) -&gt;  Just (c2:match, rest2)  else  Nothing\n       This isn\u2019t very convenient (but it works)\u2026 Because we have to write the boilerplate to  compose parsers over and over. Hopefully, we know a famous structure that allows composition in Haskell, and this is called  Monad (and I won\u2019t make yet another tutorial on  Monads, so I will assume you already are familiar with this concept). That means we could avoid all the boilerplate, by making our  Parser type an instance of  Monad. This would allow us to use the  do syntax to cleanly compose our parsers! Sweet!\n To do so, we\u2019ll have to make our  Parser an instance of:  Functor,  Applicative and  Monad.\n  First of all, our Parser is an instance of   Functor, which means we can  map functions over the result of our parsing:\n instance  Functor  Parser  where  -- fmap :: (a -&gt; b) -&gt; Parser a -&gt; Parser b  -- 1. Run parser on input string.  -- 2. Apply function on result of parsing. fmap f p =  Parser $ \\s -&gt;  case runParser p s  of  Nothing -&gt;  Nothing  Just (a, rest) -&gt;  Just (f a, rest)\n -- Parse `String` &#34;42&#34; and then convert it to `Int` using `read`  ::  Parser  Int  = (fmap read $ string  &#34;42&#34;)  parse42  &#34;42 is the answer!&#34;\n   Secondly, we can make our parser an instance of   Applicative. This part wasn\u2019t obvious for me. All the examples I found were about instances for easy types like  Maybe, but I found a  Parser to be pretty different. But thanks to the types and some use-cases (that you\u2019ll find below), I figured the following implementation (which will hopefully be correct\u2026):\n instance  Applicative  Parser  where  -- pure :: a -&gt; Parser a  -- Wrap a value inside a parser, leaving input unchanged. pure a =  Parser $ \\s -&gt;  Just (a, s)  -- (&lt;*&gt;) :: Parser (a -&gt; b) -&gt; Parser a -&gt; Parser b  -- 1. Run first parser on input (resulting in a function (a -&gt; b).  -- 2. Run second parser on remaining input, left by first parser.  -- 3. Apply function (a -&gt; b) on result of second parser. p1 &lt;*&gt; p2 =  Parser $ \\s -&gt;  case runParser p1 s  of  Nothing -&gt;  Nothing  Just (f, rest) -&gt;  case runParser p2 rest  of  Nothing -&gt;  Nothing  Just (a, rest2) -&gt;  Just (f a, rest2)\n The usefulness of the previous instance might not be obvious, but it allows us to  lift some function inside the realm of parsers. For example if we want to take the result of several parsers and then group their results into a tuple, we can do it using  Applicatives:\n   This is the kind of constructs we will use to convert the raw parsed structure into our own types (e.g: an AST).\n data  AST =  Foo  String |  Bar  String |  Pair  Char  Char  deriving ( Show) , parseBar, parsePair ::  Parser  AST  =  Foo &lt;$&gt; string  &#34;foo&#34;  =  Bar &lt;$&gt; string  &#34;bar&#34;  =  Pair &lt;$&gt; oneChar &lt;*&gt; oneChar\n      Last but not least, our parser is a   Monad. Which means it must implement:  &gt;&gt;=,  &gt;&gt;,  return and  fail:\n instance  Monad  Parser  where  -- (&gt;&gt;=) :: Parser a -&gt; (a -&gt; Parser b) -&gt; Parser b  -- 1. Run first parser on input.  -- 2. Feed result of parsing to `f`.  -- 3. Run second parser (result of `f`) on remaining  -- input (left by first parser) p &gt;&gt;= f =  Parser $ \\s -&gt;  case runParser p s  of  Nothing -&gt;  Nothing  Just (a, rest) -&gt; runParser (f a) rest  -- (&gt;&gt;) :: Parser a -&gt; Parser b -&gt; Parser b  -- 1. Run first parser on input.  -- 2. Run second parser on remaining input (left by first parser)  -- We ignore result of first parser. p1 &gt;&gt; p2 =  Parser $ \\s -&gt;  case runParser p1 s  of  Nothing -&gt;  Nothing  Just (_, rest) -&gt; runParser p2 rest  -- return :: a -&gt; Parser a return = pure  -- fail :: String -&gt; Parser a fail _ =  Parser (const  Nothing)\n Thanks to this definition we can use the  do syntactic sugar, which will ease the implementation of more complex parsers. Let\u2019s see what we can do.\n -- Parse a specific `Char` from the input  ::  Char -&gt;  Parser  Char  c =  do c1 &lt;- oneChar  if c == c1  then return c1  else failure\n     -- Parse a specific pattern from the input  ::  String -&gt;  Parser  String  [] = return []  (c:xs) =  do c1 &lt;- char c rest &lt;- string&#39; xs return (c1:rest)\n    The  do notation makes it very easy to combine parsers! We now have some basic building blocks that we could use to implement more parsing combinators:  choice,  many,  option, etc. But I\u2019ll leave it as an exercise.\n Moreover, it would be interesting to implement an error reporting mechanism, as well as position tracking (to locate errors in the input), but I\u2019ll leave it for another blog-post (or as an exercise for the reader!).\n  Implementing (very) basic parsing combinators led me to better understand the foundation of libraries like  Parsec or  Attoparsec, and to implement not so trivial instances of typeclasses like  Applicatives and  Monads. Although basic, I think it\u2019s a good way to be more familiar with the  DSL-like capabilities of Haskell, and to feel the power that the language offers in term of domain-specific modeling.", "posttime": "2020-05-29 10:51:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u5408,parser,\u89e3\u6790\u5668", "title": "\u89e3\u6790\u5668\u7ec4\u5408\u5668\u4e2d\u6709\u4ec0\u4e48\uff1f(2016)", "title_en": "What's in a Parser Combinator? (2016)", "transed": 1, "url": "https://remusao.github.io/posts/whats-in-a-parser-combinator.html", "via": "", "real_tags": ["\u7ec4\u5408", "parser", "\u89e3\u6790\u5668"]}, {"category": "", "categoryclass": "", "imagename": "9ba0a0bdd754737729998585710c3a1d.png", "infoid": 1004192, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6587\u672c\u5448\u73b0\u5728\u4e00\u5c0f\u90e8\u5206\u7f51\u7ad9\u4e0a\u51fa\u73b0\u6545\u969c\u3002\u5b83\u4eec\u901a\u5e38\u662f\u4e3b\u8981\u7684\u7f51\u7ad9\uff0c\u5728\u90a3\u91cc\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u60f3\u5230\u4f1a\u6709\u5982\u6b64\u57fa\u672c\u7684\u4e1c\u897f\u88ab\u7834\u574f\uff0c\u6bd4\u5982Apple.com\uff0cimgix.com\uff0c\u751a\u81f3\u6211\u4eec\u4eb2\u5207\u7684\u4e3b\u673a\u5a92\u4ecb\u3002\u81f3\u5c11\u6709\u4e24\u4e2abug\u5b58\u5728\uff0c\u636e\u6211\u6240\u77e5\uff0c\u5b83\u4eec\u8fd8\u6ca1\u6709\u88ab\u6e05\u695a\u5730\u8bc6\u522b\u3001\u8bb0\u5f55\uff0c\u751a\u81f3\u6ca1\u6709\u547d\u540d\u3002\u6211\u5e0c\u671b\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u5df2\u7ecf\u627e\u5230\u4e86\u539f\u56e0\u3002\n\u5b83\u4eec\u53ef\u80fd\u53ea\u5728Windows\u4e0a\u53d1\u751f\uff0c\u5c3d\u7ba1\u5b83\u4eec\u4f3c\u4e4e\u4e0d\u662fWindows\u7684bug\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u9519\u8bef\u4e4b\u6240\u4ee5\u9003\u8fc7\u4e86\u4eba\u4eec\u7684\u6ce8\u610f\uff0c\u662f\u56e0\u4e3a\u5728\u7f51\u7edc\u5f00\u53d1\u793e\u533a\u7684\u67d0\u4e9b\u975e\u4e13\u4e1a\u7684\u89d2\u843d\u91cc\uff0c\u5947\u602a\u5730\u7f3a\u4e4f\u5bf9Windows\u7684\u6d4b\u8bd5\u3002\n\u5751\u5751\u6d3c\u6d3c\u7684\u6587\u5b57\uff1a\u6587\u5b57\u4ece\u5b57\u9762\u4e0a\u770b\u662f\u7834\u788e\u7684\uff0c\u5c31\u50cf\u4e0b\u9762\u82f9\u679c\u7684\u9875\u9762\u4e0a\u663e\u793a\u7684\u90a3\u6837\u3002\u4e22\u5931\u4e86\u5c0f\u5757\u788e\u7247\u3002\u82f9\u679c\u7684\u7f51\u7ad9\u5728Windows\u4e0a\uff0c\u5728\u6240\u6709\u6d4f\u89c8\u5668\u4e2d\u90fd\u662f\u8fd9\u6837\u88ab\u7834\u574f\u7684\uff0c\u81f3\u5c11\u6709\u4e24\u5e74\u7684\u65f6\u95f4\u3002\n\u6d82\u62b9\u6587\u672c\uff1a\u6587\u672c\u88ab\u6d82\u62b9\uff0c\u5b57\u5f62\u7ebf\u6761\u7c97\u7ec6\u5728\u8d85\u8584\u548c\u8fc7\u5ea6\u7c97\u4f53\u4e4b\u95f4\u968f\u673a\u53d8\u5316\u3002\n\u8bf7\u770bSuper\u4e2dS\u7684\u9876\u90e8\u548cComputer\u4e2dC\u7684\u9876\u90e8\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u7ebf\u6761\u5728\u54ea\u91cc\u6298\u65ad\uff0c\u51e0\u4e4e\u6d88\u5931\u4e86\uff0c\u5c31\u50cf\u6709\u4eba\u7528\u767d\u8272\u6cb9\u6f06\u6d82\u62b9\u4e00\u6837\u3002\u770b\u770biPad\u548cPro\u4e2dP\u7684\u9876\u90e8\u7684\u952f\u9f7f\u72b6\u3002(\u4ec5\u4f9b\u53c2\u8003\uff0c\u8fd9\u79cd\u5b57\u4f53\u662fMyriad Set Pro\u3002)\u3002\n\u82f9\u679c\u7684\u7f51\u7ad9\u5728Windows\u4e0a\u5c31\u50cf\u8fd9\u6837\u762b\u75ea\u4e86\u81f3\u5c11\u4e24\u5e74\u3002\u6211\u5728\u591a\u4e2aWindows8.1\u548c10\u53f0\u673a\u5668\u4e0a\u7684\u6240\u6709\u4e3b\u8981\u6d4f\u89c8\u5668\u4e0a\u770b\u5230\u4e86\u5b83\uff1aIE11\u3001Chrome\u3001Firefox\u3001Edge\uff0c\u6211\u60f3\u751a\u81f3\u8fd8\u6709Opera(\u57fa\u4e8eChromium)\u3002\n\u57282016\u5e74\u672b\u62162017\u5e74\u521d\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728Microsoft Edge\u4e2d\u6d88\u5931\u4e86-\u6211\u4e0d\u77e5\u9053Edge\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u82f9\u679c\u7684\u7f51\u7ad9\u5728Chrome\u3001Firefox\u548c\u5176\u4ed6\u6d4f\u89c8\u5668\u4e0a\u4ecd\u7136\u65e0\u6cd5\u4f7f\u7528\u3002\u76f4\u5230\u6211\u5728Quora\u4e0a\u95ee\u662f\u5426\u6709\u4eba\u77e5\u9053\u82f9\u679c\u7684\u6587\u672c\u6e32\u67d3\u4e3a\u4ec0\u4e48\u4f1a\u635f\u574f\uff0c\u82f9\u679c\u624d\u4fee\u590d\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002\n\u6211\u5f88\u5c11\u5728\u7f51\u4e0a\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u3002Wired.com\u7684\u6587\u672c\u5728\u51e0\u5e74\u524d\u4ee5\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u88ab\u7834\u574f--\u8fd9\u662f\u6211\u8bb0\u5fc6\u4e2d\u552f\u4e00\u7684\u53e6\u4e00\u4e2a\u6848\u4f8b\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u4ed6\u4eec\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u540e\u6765\u53c8\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7cdf\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u6807\u9898\u9009\u62e9\u4e86\u51e0\u4e4e\u65e0\u6cd5\u9605\u8bfb\u7684\u5b57\u4f53\uff1a\n\u8fd9\u79cd\u5b57\u4f53\u66f4\u9002\u5408\u5974\u96b6\u6240\u6709\u7684\u96ea\u8304\u5e97\uff0c\u800c\u4e0d\u662f\u79d1\u6280/\u5de6\u7ffc\u8bc4\u8bba\u7f51\u7ad9\u3002\n\u5982\u4f60\u6240\u89c1\uff0c\u6587\u672c\u6781\u5176\u6c61\u8ff9\u6591\u6591\u3002\u5b57\u4f53\u662f\u963f\u9edb\u5c14\u00b7\u6851\u65af\uff0c\u6839\u672c\u4e0d\u5e94\u8be5\u662f\u8fd9\u6837\u7684\u3002\u8fd9\u662f\u5728imgix\u7684\u5f00\u53d1\u6587\u6863\u9875\u9762\u4e0a\u3002\u6211\u57282016\u5e747\u6708\u4e3a\u4ed6\u4eec\u5199\u4e86\u4e00\u4efd\u9519\u8bef\u62a5\u544a\uff0c\u6709\u5f88\u591a\u7ec6\u8282\u548c\u622a\u56fe\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u4fee\u590d\u3002\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u4e0d\u80fd\u590d\u5236\u5b83\uff0c\u8fd9\u5f88\u5947\u602a\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u5728\u4efb\u4f55Windows\u673a\u5668\u4e0a\u7528\u4efb\u4f55\u6d4f\u89c8\u5668\u590d\u5236\u5b83\u3002\u516d\u4e2a\u6708\u540e\uff0c\u6211\u5728Quora\u4e0a\u8be2\u95ee\u4e86\u8fd9\u4ef6\u4e8b--\u6211\u6ca1\u6709\u65f6\u95f4\u9694\u79bb\u8fd9\u4e2a\u6f0f\u6d1e\uff0c\u4f46\u6211\u975e\u5e38\u597d\u5947\u662f\u5426\u6709\u4eba\u9694\u79bb\u4e86\u3002\n\u76f4\u5230\u51e0\u5206\u949f\u524d\uff0c\u6211\u8fd8\u4ee5\u4e3aimgix\u548c\u82f9\u679c\u4e00\u6837\uff0c\u5728Quora\u4e0a\u8be2\u95ee\u4e86\u8fd9\u4e2a\u95ee\u9898\u540e\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u610f\u8bc6\u5230\uff0c\u4ed6\u4eec\u53ef\u80fd\u5df2\u7ecf\u5728\u6587\u6863\u9875\u9762\u4e0a\u4fee\u590d\u4e86\u5b83\uff0c\u4f46\u73b0\u5728\u4ed6\u4eec\u7684\u4e3b\u9875\u5bfc\u822a\u5b50\u83dc\u5355\u88ab\u751f\u52a8\u5730\u3001\u75db\u82e6\u5730\u635f\u574f\u4e86\uff1a\n\u60a8\u53ef\u4ee5\u5728\u5b83\u4eec\u7684\u4e3b\u83dc\u5355\u6807\u9898\u4e2d\u770b\u5230\u4e00\u4e9b\u6c61\u70b9\uff0c\u4f46\u5b83\u786e\u5b9e\u4f1a\u5728\u5f39\u51fa\u83dc\u5355\u4e2d\u5f39\u51fa\u3002\u4e0a\u9762\u7684\u56fe\u7247\u5728\u5927\u591a\u6570\u663e\u793a\u5668\u4e0a\u90fd\u6bd4\u771f\u4eba\u5927\u5c0f\u5c0f\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u70b9\u51fb\u6216\u70b9\u51fb\u5b83\uff0c\u5b83\u5e94\u8be5\u4f1a\u5c55\u5f00\uff0c\u4f60\u4f1a\u66f4\u5168\u9762\u5730\u611f\u53d7\u5230\u8fd9\u4e2a\u9519\u8bef\u3002\u7f51\u7edc\u4e0a\u7684\u6587\u672c\u6ca1\u6709\u7406\u7531\u4f1a\u53d8\u6210\u8fd9\u4e2a\u6837\u5b50--\u4e5f\u5c31\u662f\u8bf4\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u3002\n\u5f53imgix\u8bf4\u4ed6\u4eec\u4e0d\u80fd\u91cd\u73b0\u8fd9\u4e00\u70b9\u65f6\uff0c\u6211\u60f3\u5230\u4e86Medium\u7f51\u9875\u8bbe\u8ba1\u5e08Marcin Wichary\u5728Medium\u7ecf\u5386\u4e86\u4e00\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u5b57\u4f53\u9519\u8bef\u540e\u5199\u7684\u4e00\u7bc7\u4ee4\u4eba\u60ca\u53f9\u7684\u5e16\u5b50\u3002\u4ed6\u6307\u51fa\uff0c\u7531\u4e8e\u8be5\u9519\u8bef\u53ea\u53d1\u751f\u5728Windows\u548cLinux\u4e0a\uff0c\u4ed6\u5fc5\u987b\u542f\u52a8\u4e00\u4e9b\u865a\u62df\u673a\u624d\u80fd\u91cd\u73b0\u5b83(\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u5728\u66f4\u6539/\u9519\u8bef\u88ab\u63a8\u9001\u5230\u751f\u4ea7\u73af\u5883\u4e4b\u540e)\u3002\n\u6211\u5dee\u70b9\u4ece\u6905\u5b50\u4e0a\u6454\u4e0b\u6765\u3002Medium\u6ca1\u6709\u5728Windows\u4e0a\u6d4b\u8bd5\u5417\uff1f\u4ed6\u4eec\u7684\u529e\u516c\u5ba4\u91cc\u6ca1\u6709\u4efb\u4f55\u771f\u6b63\u7684Windows\u673a\u5668\uff0c\u751a\u81f3\u8fdeQA\u90fd\u6ca1\u6709\uff1f\u5b83\u4eec\u5b8c\u5168\u4f9d\u8d56\u4e8e\u865a\u62df\u673a\uff0c\u53ef\u9884\u89c1\u7684\u5de5\u4f5c\u6469\u64e6\u5c06\u5bfc\u81f4\u8f83\u5c11\u7684\u6d4b\u8bd5\uff0c\u751a\u81f3\u4e0d\u4f1a\u8fdb\u884c\u6d4b\u8bd5\u3002\u5b83\u8fd8\u5bfc\u81f4\u4e0eUI/GPU\u76f8\u5173\u7684\u884c\u4e3a\u7f3a\u4e4f\u6709\u6548\u6027\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u8bb8\u591a\u9057\u6f0f\u7684bug\u3002\u6211\u4e0d\u6562\u76f8\u4fe1\u50cfMedium\u8fd9\u6837\u7684\u5927\u51fa\u7248\u5546\u4f1a\u5982\u6b64\u9c81\u83bd\uff0c\u8fd9\u8ba9\u6211\u6000\u7591\u5982\u679cIMGIX\u200a-\u200a\u5c31\u662f\u8fd9\u6837\uff0c\u4ed6\u4eec\u53ef\u80fd\u4e5f\u6ca1\u6709Windows\u673a\u5417\uff1f\n\u8fd9\u53e5\u8bdd\u51fa\u81ea\u201c\u7ef4\u7279\u7eaa\u4e8b\u62a5\u201d\u7684\u4e00\u7bc7\u6587\u7ae0\u3002\u5b57\u4f53\u662fAdobe\u7684Source Sans Pro\uff0c\u7edd\u5bf9\u4e0d\u5e94\u8be5\u662f\u8fd9\u4e2a\u6837\u5b50\u3002\u67e5\u770bTypekit\u4e0a\u7684\u5b57\u4f53\uff0c\u5728Windows\u4e0a\uff0c\u5728\u4efb\u4f55\u6d4f\u89c8\u5668\u4e2d\uff0c\u770b\u770b\u5b83\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u5b57\u4f53\u6216\u5b57\u4f53\u90fd\u4e0d\u5e94\u8be5\u662f\u90a3\u6837\u7684\u3002\u6c61\u8ff9\u662f\u4e2a\u866b\u5b50\u3002\nMarcin Wichary\u7684\u5e16\u5b50\u5df2\u7ecf\u88ab\u7f16\u8f91\uff0c\u53bb\u6389\u4e86Medium\u6ca1\u6709\u5728Windows\u548cLinux\u4e0a\u6d4b\u8bd5\uff0cVM\u7684\u4f7f\u7528\u7b49\u90e8\u5206\u3002\u6211\u731c\u5b83\u5f97\u5230\u4e86\u5f3a\u70c8\u7684\u53cd\u5e94\uff0cMedium\u7684CTO Dan Pupius\u5728\u540e\u7eed\u7684\u5e16\u5b50\u4e2d\u8bd5\u56fe\u6709\u70b9\u5012\u9000\uff0c\u4ed6\u4f3c\u4e4e\u6697\u793a25%\u7684\u7528\u6237\u5e76\u4e0d\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\u3002\u4ed6\u8bf4\u201c\u4e0d\u523025%\u201d(\u90a3\u4e48\uff0c24%\uff1f)\u3002\u7684\u4e2d\u7b49\u8bbf\u95ee\u8005\u90fd\u5728Windows\u4e0a\uff0c\u5c31\u597d\u50cf\u8fd9\u662f\u5728\u8bc1\u660e\u2026\u662f\u6e05\u767d\u7684\u4e00\u6837\nWindows\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u5e73\u53f0\u3002\u53f0\u5f0f\u673a\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5e73\u53f0\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765--\u5b83\u662f\u6211\u4eec\u5de5\u4f5c\u7684\u5730\u65b9\u3002\u6240\u6709\u51fa\u7248\u5546\u90fd\u5e94\u8be5\u5728Windows\u3001Mac\u548cLinux\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u9664\u975e99%\u5de6\u53f3\u7684\u8bfb\u8005\u53ea\u6765\u81ea\u4e00\u4e2a\u5e73\u53f0\u3002\n\u5728\u505a\u6211\u4eec\u7684\u5de5\u4f5c\u3001\u6d4b\u8bd5\u7b49\u65b9\u9762\uff0c\u5728\u7f51\u7edc\u5f00\u53d1\u7684\u67d0\u4e9b\u89d2\u843d\u5b58\u5728\u7740\u82f9\u679c\u7684\u504f\u89c1\uff0c\u8fd9\u662f\u9700\u8981\u963b\u6b62\u7684\u3002\u5f00\u53d1\u8005\u548c\u7528\u6237\u6709\u5f88\u591a\u5408\u7406\u7684\u7406\u7531\u9009\u62e9Windows10\uff0c\u800c\u4e0d\u662fMac(\u6216Linux)\u3002(\u4f8b\u5982\uff0c\u4e00\u4e2a\u539f\u56e0\u53ef\u80fd\u662f\u82f9\u679c\u6700\u8fd1\u53d6\u6d88\u4e86\u7b14\u8bb0\u672c\u7535\u8111\u6240\u6709\u6700\u6709\u7528\u7684\u7aef\u53e3\uff0c\u5947\u602a\u7684\u662f\uff0c\u540c\u65f6\u5927\u5e45\u63d0\u9ad8\u4e86\u4ef7\u683c-\u5f88\u5c11\u6709\u4eba\u613f\u610f\u82b12800\u7f8e\u5143\u4e70\u4e00\u53f0\u8fde\u4e00\u4e2a\u6807\u51c6USB\u7aef\u53e3\u90fd\u6ca1\u6709\uff0c\u800c\u4e14\u53ea\u670916 GB\u8fc7\u65f6\u667a\u80fd\u624b\u673aRAM(LPDDR3)\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\u5728\u7f8e\u56fd\u4ee5\u5916\uff0c\u751a\u81f3\u53ea\u662f\u67d0\u4e9b\u7f8e\u56fd\u57ce\u5e02\uff0c\u4eba\u4eec\u5bf9Mac\u7684\u5174\u8da3\u6025\u5267\u4e0b\u964d\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u53ea\u5728Mac\u4e0a\u6d4b\u8bd5\uff0c\u4f60\u5c31\u662f\u5728\u8fb9\u7f18\u5316\u4eba\u7c7b\u4e2d\u7684\u7edd\u5927\u591a\u6570\u4eba\u3002)\u3002\n\u6211\u6709\u65f6\u975e\u5e38\u6279\u8bc4\u5fae\u8f6f\uff0c\u4f46\u4f5c\u4e3a\u4e00\u540dQA\u7ecf\u7406\uff0c\u6211\u4e0d\u53ef\u80fd\u628aWindows\u7559\u7ed9VM\uff0c\u6211\u4e5f\u4e0d\u53ef\u80fd\u63a5\u53d7\u6587\u672c\u5448\u73b0\u50cf\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u90a3\u6837\u7cdf\u7cd5\u3002\u597d\u7684\u6587\u672c\u6e32\u67d3\u5f88\u5bb9\u6613\u5728Windows\u4e0a\u5b9e\u73b0\uff0c\u7edd\u5927\u591a\u6570\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u90fd\u80fd\u505a\u5230(\u5982\u679c\u4f60\u6b63\u5728\u6784\u5efa\u672c\u5730\u6216UWP\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u5fae\u8f6f\u7684DirectWrite API)\u3002\n\u6211\u6ca1\u6709\u592a\u591a\u7684\u65f6\u95f4\u6765\u9694\u79bb\u8fd9\u4e9b\u9519\u8bef\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u8ba4\u4e3a\u8fd9\u5c06\u4e0e\u5b57\u4f53\u6587\u4ef6\u6709\u5173\uff0c\u4f46\u4e0d\u4f1a\u50cfttf vs otf\u6216woff vs woff2\u90a3\u6837\u660e\u663e\u3002\u8fd9\u53ef\u80fd\u4e0eOTF\u6765\u6e90\u5b57\u4f53\u4e2d\u7684GLIF\u8868\u9009\u62e9\u6709\u5173\u3002\u6709\u4ec0\u4e48\u4e3b\u610f\u5417\uff1f\nJoe Duarte\u662f\u4e00\u540d\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u793e\u4f1a\u79d1\u5b66\u5bb6\u548c\u8f6f\u4ef6QA\u987e\u95ee\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7grasion@protonmail.com\u8054\u7cfb\u5230\u4ed6\u3002", "note_en": "Text rendering is broken on a small percentage of websites. They\u2019re often major websites where you\u2019d never expect something so basic to be broken, like Apple.com, imgix.com, and even our gracious host Medium. There are at least two bugs out there, and to my knowledge they\u2019ve not been clearly identified, documented, or even given names. I\u2019m hoping that some of you might have figured out the causes.\n They might only happen on Windows, though they don\u2019t seem to be Windows bugs. I think these bugs have escaped attention because of a bizarre lack of testing on Windows in certain unprofessional corners of the web development community.\n  Pockmarked text: Text is literally broken, like on Apple\u2019s page below. missing small pieces. Apple\u2019s website was broken this way on Windows, in all browsers, for at least  two years.\n Smudged text: Text is smudged, with glyph line thickness varying randomly between super-thin and overly bold.\n  Look at the top of the  S in Super and the top of the  C in Computer. You can see where the lines break, almost disappear, like someone dabbed them with white paint. And look at the jaggedness at the tops of the Ps in iPad and Pro. (FYI, that typeface is Myriad Set Pro.)\n Apple\u2019s website was broken on Windows like this for  at least two years. I saw it on multiple Windows 8.1 and 10 machines in all major browsers: IE11, Chrome, Firefox, Edge, and I think even Opera (which is based on Chromium).\n At some point in late 2016 or early 2017, the problem disappeared in Microsoft Edge \u2014 I have no idea what changed in Edge that would fix this problem, but Apple\u2019s site remained broken in Chrome, Firefox and other browsers. Apple didn\u2019t fix the bug until  I asked on Quora if anyone knew why Apple\u2019s text rendering was broken.\n I\u2019ve very rarely seen this problem on the web. Wired.com\u2019s text was broken in the exact same way a few years ago \u2014 that\u2019s the only other case I remember. They\u2019ve since fixed it, but then made things worse by choosing an almost unreadable typeface for their titles:\n  This typeface is more suited to a slave-owning cigar shop than a technology/leftist commentary website.\n  As you can see, the text is extremely smudged. The typeface is Adelle Sans, and it\u2019s not supposed to look that way at all. This was on imgix\u2019s dev docs page. I wrote up a bug report for them in July 2016, with lots of detail and screenshots, but they didn\u2019t fix it. They said they couldn\u2019t reproduce it, which was odd because I could reproduce it on any Windows machine in any browser. Then I asked about it on Quora six months later \u2014 I didn\u2019t have time to isolate the bug, but I was very curious if someone else had.\n Until a few minutes ago, I thought imgix fixed it after I asked about it on Quora, just as Apple had. Now I realize that they might have fixed it on the docs page, but now their homepage nav submenus are vividly, painfully broken:\n  You can see a bit of the smudge in their main menu titles, but it really pops out in the fly-out menu. The image above is smaller than life-size on most displays, so if you click or tap it should expand and you\u2019ll get a fuller sense of the bug. There\u2019s no reason why text on the web should ever look like this \u2014 that is, there\u2019s no question that this is a bug.\n When imgix said they couldn\u2019t repro this, I thought about the  amazing post written by Medium web designer Marcin Wichary after Medium had experienced a really bad font bug. He noted that since the bug was only happening on Windows and Linux, he had to fire up some VMs to reproduce it (note that this was  after the change/bug had been pushed to production).\n I almost fell out of my chair.  Medium didn\u2019t test on Windows? They didn\u2019t have any actual Windows machines in the office, not even for QA? They depended entirely on VMs, with the predictable effort friction that will lead to less testing, or even no testing. It also leads to a lack of validity for UI/GPU-related behaviors and can result in a lot of missed bugs. I couldn\u2019t believe that a major publisher like Medium could be so reckless, and it made me wonder if that\u2019s what was going on at imgix\u200a\u2014\u200amight they not have any Windows machines either?\n   That\u2019s from  an article in Chronicle Vitae. The font is Adobe\u2019s Source Sans Pro, and it definitely isn\u2019t supposed to look like that. View the  font at Typekit, on Windows, in any browser, to see how it\u2019s supposed to look. And realistically,  no typeface or font is supposed to look like that. Smudge is a bug.\n Marcin Wichary\u2019s post has since been edited to remove the part about Medium not testing on Windows and Linux, the use of VMs, etc. I guess it got a strong reaction, and Medium CTO Dan Pupius tried to backpedal a bit in a  follow-up post where he seemed to suggest that 25% of your users is not an enormous number. He said \u201cfewer than 25%\u201d (so, 24%?) of Medium visitors were on Windows, as though this were somehow exculpatory\u2026\n  Windows is an important platform. The desktop is a very important platform, and will be for the foreseeable future \u2014 it\u2019s where we work. All publishers should be testing on Windows, Mac, and Linux unless 99 percent or so of their readers are coming from only one platform.\n There\u2019s an Apple bias in certain corners of web development that needs to be discouraged when it comes to doing our jobs, testing, etc. There are many reasonable reasons for developers and users to choose Windows 10 over a Mac (or a Linux). (For example, one reason would be that Apple recently stripped all the most useful ports from its laptops and, strangely, dramatically increased their price at the same time \u2014 few people are willing to spend $2800 for a laptop that lacks even a single standard USB port, and which sports a mere 16 GB of obsolete  smartphone RAM (LPDDR3). Outside of the US, or even just certain US cities, interest in Macs drops dramatically, so if you\u2019re only testing on Macs, you\u2019re marginalizing a large majority of humanity.)\n I\u2019ve been  extremely critical of Microsoft at times, but as a QA Manager, there\u2019s no way I\u2019d leave Windows to VMs, and there\u2019s no way I\u2019d be okay with text rendering as broken as we see above. Good text rendering is easy to achieve on Windows, and the vast majority of websites and apps achieve it (if you\u2019re building a native or UWP app, I highly recommend Microsoft\u2019s  DirectWrite API).\n I haven\u2019t had much time to isolate these bugs, so I\u2019m hoping some of you know what\u2019s going on. I assume it\u2019s going to be something to do with the font files, but not something obvious like ttf vs otf, or woff vs woff2. It might have to do with the glyf table choice in otf-sourced fonts. Any ideas?\n  Joe Duarte is a data scientist, social scientist, and software QA consultant. You can reach him at   gravity@protonmail.com .", "posttime": "2020-05-29 10:35:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b57\u4f53,web,windows", "title": "\u4e24\u4e2a\u4f3c\u4e4e\u6ca1\u6709\u4eba\u8c08\u8bba\u7684\u795e\u79d8\u7684\u7f51\u7edc\u5b57\u4f53\u9519\u8bef(2018)", "title_en": "Two mysterious web font bugs that no one seems to be talking about (2018)", "transed": 1, "url": "https://medium.com/@ValidScience/two-mysterious-web-font-bugs-that-no-one-seems-to-be-talking-about-861022e7fe69", "via": "", "real_tags": ["\u5b57\u4f53", "web", "windows"]}]