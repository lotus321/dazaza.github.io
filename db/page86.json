[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1005866, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u60a8\u5728\u7f51\u7ad9\u4e2d\u5bfc\u822a\u65f6\uff0c\u6b64\u7f51\u7ad9\u4f7f\u7528Cookie\u6765\u6539\u5584\u60a8\u7684\u4f53\u9a8c\u3002\u5728\u8fd9\u4e9bcookie\u4e2d\uff0c\u88ab\u5f52\u7c7b\u4e3a\u5fc5\u8981\u7684cookie\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u7f51\u7ad9\u7684\u57fa\u672c\u529f\u80fd\u7684\u5de5\u4f5c\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u8fd8\u4f7f\u7528\u7b2c\u4e09\u65b9cookie\u6765\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u548c\u4e86\u89e3\u60a8\u5982\u4f55\u4f7f\u7528\u672c\u7f51\u7ad9\u3002\u53ea\u6709\u7ecf\u8fc7\u60a8\u7684\u540c\u610f\uff0c\u8fd9\u4e9bCookie\u624d\u4f1a\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\u3002\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u9000\u51fa\u8fd9\u4e9bcookie\u3002\u4f46\u662f\u9009\u62e9\u4e0d\u4f7f\u7528\u8fd9\u4e9bcookie\u53ef\u80fd\u4f1a\u5bf9\u60a8\u7684\u6d4f\u89c8\u4f53\u9a8c\u4ea7\u751f\u5f71\u54cd\u3002", "note_en": "This website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.", "posttime": "2020-06-10 00:03:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u57c3\u9686\u00b7\u9a6c\u65af\u514b,\u9a6c\u65af\u514b,musk,cookie", "title": "\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u7684SpaceX\u5728Starlink\u536b\u661f\u7cfb\u7edf\u4e2d\u4f7f\u7528Linux", "title_en": "Elon Musk\u2019s SpaceX uses Linux in Starlink satellite system", "transed": 1, "url": "https://androidrookies.com/elon-musks-spacex-uses-linux-operating-system-in-starlink-satellite-system/", "via": "", "real_tags": ["linux", "\u57c3\u9686\u00b7\u9a6c\u65af\u514b", "\u9a6c\u65af\u514b", "musk", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005865, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u7528\u6237\u542c\u5230\u8fd9\u53e5\u8bdd\u65f6\uff0c\u8bed\u97f3\u52a9\u624b\u4f1a\u63d0\u793a\u7528\u6237\u8bbf\u95ee\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u5982\u6b64\u7f51\u7ad9\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u82f9\u679c\u4e00\u76f4\u5728\u4ee5\u591a\u79cd\u65b9\u5f0f\u8868\u793a\u5bf9\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u8fd0\u52a8\u7684\u652f\u6301\uff0c\u4eca\u5929\u53c8\u51fa\u73b0\u4e86\u4e00\u4e9b\u65b0\u7684\u652f\u6301\u65b9\u5f0f\u3002\n\u672c\u6708\u521d\uff0c\u82f9\u679c\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u5e93\u514b\u5199\u4e86\u4e00\u5c01\u4fe1\uff0c\u8c08\u5230\u82f9\u679c\u5fc5\u987b\u91c7\u53d6\u66f4\u591a\u884c\u52a8\u6765\u652f\u6301\u8be5\u56fd\u7684\u53cd\u79cd\u65cf\u4e3b\u4e49\u6597\u4e89\u3002\u8fd9\u5c01\u4fe1\u6700\u521d\u662f\u5728\u5185\u90e8\u53d1\u5e03\u7ed9\u5458\u5de5\u7684\uff0c\u73b0\u5728\u653e\u5728\u4e86\u82f9\u679c\u7f51\u7ad9\u7684\u9996\u9875\u3002\n\u4eca\u5929\u65e9\u4e9b\u65f6\u5019\uff0c\u636e\u62a5\u9053\uff0c\u82f9\u679c\u5730\u56fe\u5df2\u7ecf\u66f4\u65b0\u4e86\u534e\u76db\u987f\u7279\u533a\u7684\u5730\u56fe\uff0c\u6b63\u786e\u5730\u663e\u793a\u4e86\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u5e7f\u573a\uff0c\u8fd9\u662f\u7b2c16\u8857\u7684\u4e00\u90e8\u5206\uff0c\u7531\u534e\u76db\u987f\u5e02\u957f\u7a46\u91cc\u5c14\u00b7\u9c8d\u745f(Muriel Bowser)\u91cd\u65b0\u547d\u540d\u3002\u8fd9\u5f20\u5730\u56fe\u4e5f\u88ab\u91cd\u65b0\u62cd\u6444\uff0c\u4ee5\u5c55\u793a\u8857\u5934\u827a\u672f\uff0c\u4e0a\u9762\u7528\u5de8\u5927\u7684\u9ec4\u8272\u5b57\u6bcd\u7b80\u5355\u5730\u5199\u7740\u9ed1\u4eba\u7684\u751f\u547d\u4e5f\u662f\u91cd\u8981\u7684\u3002\u8857\u9053\u548c\u827a\u672f\u54c1\u90fd\u5411\u767d\u5bab\u8dd1\u53bb\u3002\n\u4eba\u4eec\u8fd8\u53d1\u73b0\uff0c\u82f9\u679c\u6b63\u5728\u7528Siri\u652f\u6301\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d(Black Lives Matter)\u8fd0\u52a8\u3002\u636eAppleInsider\u62a5\u9053\uff0c\u5982\u679c\u7528\u6237\u5bf9Siri\u8bf4\u201c\u6240\u6709\u751f\u547d\u90fd\u5f88\u91cd\u8981\u201d\uff0c\u8bed\u97f3\u52a9\u624b\u73b0\u5728\u4f1a\u63d0\u9192\u4f60\uff0c\u8fd9\u4e0e\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u8fd0\u52a8\u4e0d\u540c\uff0c\u5e76\u63d0\u793a\u4f60\u8bbf\u95ee\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u7f51\u7ad9\u3002\n\u5982\u679c\u4f60\u5bf9Siri\u8bf4\u201c\u6240\u6709\u7684\u751f\u547d\u90fd\u5f88\u91cd\u8981\u201d\uff0c\u5979\u4f1a\u56de\u590d\u5982\u4e0b\u4fe1\u606f\uff1a\n\u201c\u6240\u6709\u7684\u751f\u547d\u90fd\u5f88\u91cd\u8981\u201d\u8fd9\u53e5\u8bdd\u7ecf\u5e38\u88ab\u7528\u6765\u56de\u5e94\u201c\u9ed1\u4eba\u7684\u751f\u547d\u4e5f\u662f\u91cd\u8981\u7684\u201d\u8fd9\u4e00\u77ed\u8bed\uff0c\u4f46\u5b83\u5e76\u4e0d\u4ee3\u8868\u540c\u6837\u7684\u5173\u5207\u3002\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u4eba\u6743\u8fd0\u52a8\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eeBlacklivesmatter.com.&#34\uff1b\n\u6211\u4eec\u5c1d\u8bd5\u4e86\u8fd9\u4e2a\u77ed\u8bed\uff0c\u679c\u7136\u5f97\u5230\u4e86\u63d0\u793a\u3002\u82f9\u679c\u8fd8\u6ca1\u6709\u8bf4Siri\u7684\u8fd9\u6b21\u66f4\u65b0\u662f\u5426\u5bf9\u6240\u6709iPhone\u7528\u6237\u90fd\u662f\u5b9e\u65f6\u7684\uff0c\u4f46\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u7684\u8bdd\uff0c\u5b83\u4f1a\u975e\u5e38\u5feb\u3002\n\u4e54\u00b7\u7ef4\u6258\u5207\u514b(Joe Wituschek)\u5df2\u7ecf\u5728\u79d1\u6280\u884c\u4e1a\u5de5\u4f5c\u4e86\u5341\u591a\u5e74\u3002\u4e54\u4ee5\u524d\u662f\u82f9\u679c\u516c\u53f8\u7684\u8bb0\u8005\uff0c\u73b0\u5728\u4f5c\u4e3aiMore\u7684\u65b0\u95fb\u64b0\u7a3f\u4eba\u62a5\u9053\u8be5\u516c\u53f8\u3002\u901a\u8fc7Twitter@joewituschek\u4e0e\u4e54\u8054\u7cfb\u3002", "note_en": "The voice assistant will prompt users to visit the Black Lives Matter website when hearing the phrase.\n Apple has been showing its support to the Black Lives Matter movement in a number of ways over the last few weeks, and a few new ones have popped up today.\n At the beginning of the month, CEO Tim Cook  penned a letter that talks about how Apple &#34;must do more&#34; to support the fight against racism in the country. The letter, which was originally released internally to employees, now sits at the top of Apple&#39;s website.\n Earlier today, it was reported that Apple Maps has  updated its map of Washington D.C. to correctly show Black Lives Matter Plaza, a portion of 16th Street which was renamed by D.C. Mayor Muriel Bowser. The map has also been photographed again to show the street art, which simply says &#34;Black Lives Matter&#34; in huge yellow lettering. The street, and the art, run towards the White House.\n  It has also been discovered that Apple is supporting the Black Lives Matter movement with Siri. Reported by  AppleInsider, if users say &#34;All Lives Matter&#34; to Siri, the voice assistant will now caution you that it and the Black Lives Matter movement are different and prompt you to visit the Black Lives Matter website.\n If you say &#34;All Lives Matter&#34; to Siri, she will respond with the following message:\n &#34;&#39;All Lives Matter&#39; is often used in response to the phrase &#39;Black Lives Matter&#39;, but it does not represent the same concerns. To learn more about the Black Lives Matter human rights movement, visit BlackLivesMatter.com.&#34;\n We tried the phrase and, sure enough, got the prompt. Apple has not said if this update to Siri is live for all iPhone users, but it would be safe to assume that, if it is not yet, it will be very quick.\n   Joe Wituschek has been in the technology industry for over a decade. Formerly Apple, Joe now covers the company as a news writer for iMore. Connect with Joe on Twitter @joewituschek.", "posttime": "2020-06-10 00:02:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cd\u5b9a\u5411,matter,\u82f9\u679c", "title": "\u73b0\u5728\uff0c\u5728Siri\u4e0a\u8bf4\u201c\u6240\u6709\u751f\u547d\u90fd\u5f88\u91cd\u8981\u201d\u4f1a\u5c06\u4f60\u91cd\u5b9a\u5411\u5230Blacklivesmatter.com", "title_en": "Saying \u201cAll Lives Matter\u201d to Siri Now Redirects You to Blacklivesmatter.com", "transed": 1, "url": "https://www.imore.com/saying-all-lives-matter-siri-now-redirects-you-blacklivesmattercom", "via": "", "real_tags": ["\u91cd\u5b9a\u5411", "matter", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "49e21ec70f14fa791cee238b554ac7a5.jpeg", "infoid": 1005864, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u8f6f\u4ef6\u5373\u670d\u52a1(SaaS)\u548c\u5176\u4ed6\u65b0\u7684\u8f6f\u4ef6\u4ea4\u4ed8\u6a21\u5f0f\u7684\u5174\u8d77\uff0c\u8bb8\u591a\u7ec4\u7ec7\u6b63\u5728\u5b9e\u8df5\u8f6f\u4ef6\u7684\u5b8c\u5168\u6240\u6709\u6743\uff0c\u4f7f\u5de5\u7a0b\u5e08\u80fd\u591f\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u8d1f\u8d23\u5176\u5de5\u4f5c\u3002\n\u5728\u8fd9\u6837\u7684\u7ec4\u7ec7\u4e2d\uff0c\u53ef\u7406\u89e3\u6027\u91c7\u53d6\u4e86\u66f4\u5f3a\u5927\u7684\u5f62\u5f0f\uff0c\u51b3\u5b9a\u4e86\u5de5\u7a0b\u5e08\u80fd\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u7406\u89e3\u8f6f\u4ef6\u662f\u5982\u4f55\u64cd\u4f5c\u7684\uff0c\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237\u662f\u5982\u4f55\u5229\u7528\u5b83\u7684\u3002\n\u56e0\u6b64\uff0c\u51b3\u5b9a\u62e5\u6709\u8fd9\u4e9b\u4fe1\u606f\u7684\u56e2\u961f\u53ef\u4ee5\u8bbf\u95ee\u975e\u5e38\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u5982\u4f7f\u7528\u6a21\u5f0f\u3001\u771f\u5b9e\u4e16\u754c\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4ee5\u53ca\u5b9e\u9645\u7684\u6027\u80fd\u548c\u53ef\u7528\u6027\u7edf\u8ba1\u6570\u636e\u3002\n\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u8fd9\u6b63\u662f\u53ef\u7ef4\u62a4\u6027\u548c\u76d1\u63a7\u5de5\u5177\u7684\u4f5c\u7528\u6240\u5728\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u8fd9\u4e9b\u5de5\u5177\u7528\u4e8e\u652f\u6301\u66f4\u4f20\u7edf\u7684IT\u95ee\u9898\uff0c\u91cd\u70b9\u5728\u4e8e\uff1a\n\u5f53\u7cfb\u7edf\u884c\u4e3a\u4e0d\u6b63\u5e38\u65f6\u53d1\u51fa\u8b66\u62a5\uff0c\u5e76\u5e2e\u52a9\u8bc6\u522b\u6839\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u6062\u590d\u6b63\u5e38\u670d\u52a1\u3002\n\u786e\u5b9a\u6027\u80fd\u74f6\u9888\uff0c\u4ee5\u4fbf\u5206\u914d\u989d\u5916\u8d44\u6e90\u6216\u901a\u77e5\u76f8\u5173\u56e2\u961f\u3002\n\u8fd9\u4e9b\u90fd\u662fIT\u81ea\u53e4\u4ee5\u6765\u4e00\u76f4\u5728\u5904\u7406\u7684\u5f88\u597d\u7684\u7528\u4f8b\uff0c\u800c\u4e14\u7531\u4e8e\u5b83\u4eec\u7684ROI\u975e\u5e38\u6e05\u695a\uff0c\u8bb8\u591a\u4f9b\u5e94\u5546\u90fd\u5728\u63d0\u4f9b\u5f88\u597d\u7684\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u662f\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u8981\u5904\u7406\u7684\u7528\u4f8b\uff0c\u8fd9\u4e9b\u5de5\u5177\u4ece\u6765\u5c31\u4e0d\u662f\u7528\u6765\u5e2e\u52a9\u4ed6\u4eec\u7684\u3002\n\u6240\u6709\u8fd9\u4e9bIT\u7528\u4f8b\u7684\u5171\u540c\u70b9\u662f\uff0c\u5bf9\u7cfb\u7edf\u6709\u57fa\u672c\u5de5\u4f5c\u77e5\u8bc6\u7684\u4eba\u9700\u8981\u786e\u5207\u5730\u4e86\u89e3\u7cfb\u7edf\u5728\u7279\u5b9a\u5b9e\u4f8b\u4e2d\u7684\u884c\u4e3a\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u9002\u5f53\u5730\u54cd\u5e94\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6536\u96c6\u5173\u4e8e\u4e00\u7ec4\u9884\u5b9a\u4e49\u4e8b\u4ef6\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5f80\u5f80\u662f\u5173\u4e8e\u7cfb\u7edf\u5982\u4f55\u4e0e\u5176\u5468\u56f4\u7684\u4e16\u754c\u4ea4\u4e92\u7684\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u5bf9\u7cfb\u7edf\u7684\u5185\u90e8\u5de5\u4f5c\u6709\u6df1\u5165\u7684\u4e86\u89e3\uff0c\u5e76\u5e0c\u671b\u66f4\u591a\u5730\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6839\u636e\u4ed6\u4eec\u5bf9\u7cfb\u7edf\u6240\u505a\u7684\u5177\u4f53\u66f4\u6539\uff0c\u6bcf\u5929(\u5982\u679c\u4e0d\u662f\u6bcf\u5c0f\u65f6)\u6536\u96c6\u66f4\u6539\u6240\u9700\u7684\u6570\u636e\u3002\n\u968f\u7740\u8f6f\u4ef6\u89c4\u6a21\u7684\u6269\u5927\u548c\u53d8\u5316\uff0c\u5b83\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u8fd9\u79cd\u590d\u6742\u6027\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56fa\u6709\u7684\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5373\u4e1a\u52a1\u9700\u6c42\u7684\u6570\u91cf\u5728\u4e0d\u65ad\u589e\u957f\u3002\u8fd9\u79cd\u590d\u6742\u6027\u7684\u5176\u4f59\u90e8\u5206\u662f\u4e0d\u53d7\u6b22\u8fce\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u5e94\u7528\u7a0b\u5e8f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u88ab\u91cd\u65b0\u5b9a\u4f4d\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u7cdf\u7cd5\u7684\u8bbe\u8ba1\u9009\u62e9\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u6280\u672f\u503a\u52a1\u3002\n\u4e0d\u7ba1\u5176\u6765\u6e90\u5982\u4f55\uff0c\u590d\u6742\u6027\u90fd\u4f1a\u635f\u5bb3\u5de5\u7a0b\u5e08\u7406\u89e3\u548c\u6709\u6548\u5730\u6839\u636e\u9700\u8981\u66f4\u6539\u8f6f\u4ef6\u7684\u80fd\u529b\u3002\u8fd9\u4e00\u95ee\u9898\u901a\u5e38\u4f1a\u56e0\u4eba\u5458\u6d41\u5931\u9020\u6210\u7684\u77e5\u8bc6\u6d41\u5931\u800c\u52a0\u5267\u3002\n\u5f53\u7136\uff0c\u5728\u8f6f\u4ef6\u884c\u4e1a\uff0c\u5fc5\u987b\u5c06\u8f6f\u4ef6\u590d\u6742\u6027\u964d\u81f3\u6700\u4f4e\u662f\u4eba\u6240\u5171\u77e5\u7684\u3002\u8f6f\u4ef6\u8d8a\u590d\u6742\uff0c\u5f00\u53d1\u65b0\u529f\u80fd\u7684\u6210\u672c\u5c31\u8d8a\u9ad8\uff0c\u7cfb\u7edf\u7684\u6574\u4f53\u8d28\u91cf\u4e5f\u5c31\u8d8a\u4f4e\u3002\u5173\u4e8e\u5982\u4f55\u6784\u5efa\u5c06\u590d\u6742\u6027\u964d\u81f3\u6700\u4f4e\u5e76\u5141\u8bb8\u7cfb\u7edf\u548c\u56e2\u961f\u66f4\u597d\u5730\u6269\u5c55\u7684\u5e94\u7528\u7a0b\u5e8f\u8f6f\u4ef6\uff0c\u5df2\u7ecf\u5199\u4e86\u5f88\u591a\u6587\u7ae0\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u5f00\u53d1\u65b0\u7684\u8f6f\u4ef6\uff0c\u60a8\u5f88\u53ef\u80fd\u4f1a\u5ffd\u7565\u53ef\u7406\u89e3\u6027\uff0c\u800c\u504f\u5411\u4e8e\u5b83\u7684\u4e00\u4e2a\u4ee3\u7406\uff1a\u590d\u6742\u6027\u3002\u901a\u8fc7\u4e13\u6ce8\u4e8e\u907f\u514d\u548c\u964d\u4f4e\u590d\u6742\u6027\uff0c\u60a8\u81ea\u7136\u4f1a\u4fdd\u6301\u53ef\u7406\u89e3\u6027\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8f6f\u4ef6\u7684\u590d\u6742\u6027\u662f\u65e0\u6570\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u548c\u6280\u672f\u7684\u7126\u70b9\u3002\n\u9996\u5148\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\uff0c\u4ece\u9ad8\u7d20\u8d28\u7684\u52b3\u52a8\u529b\u5f00\u59cb\u3002\u6709\u624d\u534e\u7684\u5de5\u7a0b\u5e08\u5229\u7528\u4ed6\u4eec\u7684\u7ecf\u9a8c\uff0c\u5728\u8f6f\u4ef6\u7684\u6e90\u4ee3\u7801\u548c\u4f53\u7cfb\u7ed3\u6784\u4e2d\u4ee5\u7b80\u5355\u800c\u4f18\u96c5\u7684\u65b9\u5f0f\u8868\u8fbe\u590d\u6742\u7684\u4e1a\u52a1\u95ee\u9898\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u66f4\u5bb9\u6613\u7406\u89e3\u7684\u8f6f\u4ef6\u3002\n\u4e0b\u4e00\u6b65\uff0c\u5c3d\u91cf\u4f7f\u7cfb\u7edf\u53d8\u5f97\u5c3d\u53ef\u80fd\u5c0f\uff0c\u56e0\u4e3a\u8f83\u5c0f\u7684\u7cfb\u7edf\u672c\u8d28\u4e0a\u4e0d\u592a\u590d\u6742\uff0c\u4e5f\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u901a\u8fc7\u5c06\u91cd\u70b9\u653e\u5728\u771f\u6b63\u91cd\u8981\u7684\u4e1a\u52a1\u9700\u6c42\u4e0a\uff0c\u800c\u5ffd\u7565(\u81f3\u5c11\u6682\u65f6)\u975e\u5f3a\u5236\u6027\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u4ece\u201c\u9876\u5c42\u201d\u51cf\u5c11\u7cfb\u7edf\u3002\u901a\u8fc7\u4f7f\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u62bd\u8c61\uff0c\u4f8b\u5982\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u3001\u9ad8\u7ea7\u6846\u67b6\u548c\u73b0\u4ee3\u6570\u636e\u5e93\uff0c\u901a\u5e38\u4e5f\u53ef\u4ee5\u4ece\u201c\u5e95\u5c42\u201d\u7f29\u51cf\u7cfb\u7edf\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u786e\u4fdd\u642d\u5efa\u597d\u811a\u624b\u67b6\uff0c\u4ee5\u4fbf\u5728\u590d\u6742\u60c5\u51b5\u51fa\u73b0\u65f6\u8fdb\u884c\u5904\u7406\u3002\u4ee5\u5355\u5143\u6d4b\u8bd5\u548c\u7cfb\u7edf\u6d4b\u8bd5\u7684\u5f62\u5f0f\u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u5de5\u7a0b\u56e2\u961f\u53ef\u4ee5\u5b89\u5168\u5730\u91cd\u6784\u590d\u6742\u6027\u3002\u4f7f\u7528\u9ad8\u8d28\u91cf\u7684\u53ef\u89c2\u5bdf\u6027\u5de5\u5177\u6765\u5e2e\u52a9\u60a8\u66f4\u9ad8\u5c42\u6b21\u5730\u4e86\u89e3\u7cfb\u7edf\u3002\u81ea\u52a8\u5316\u60a8\u7684\u96c6\u6210\u548c\u90e8\u7f72\u7ba1\u9053\uff0c\u4f7f\u60a8\u80fd\u591f\u5feb\u901f\u6539\u8fdb\u548c\u8fed\u4ee3\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6d89\u53ca\u5230\u73b0\u6709\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u63a5\u53d7\u6211\u4eec\u7684\u5de5\u7a0b\u56e2\u961f\u672a\u80fd\u7406\u89e3\u4ee3\u7801\u662f\u4e0a\u5e1d\u9020\u6210\u7684\u707e\u96be\u3002\u6309\u590d\u6742\u6027\u6536\u8d39\u4e0d\u518d\u662f\u63d0\u9ad8\u53ef\u7406\u89e3\u6027\u7684\u53ef\u884c\u65b9\u6cd5\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u60a8\u9762\u4e34\u7684\u9057\u7559\u7cfb\u7edf\u662f\u4f7f\u7528\u6bd4\u5f53\u524d\u53ef\u7528\u7684\u5de5\u5177\u66f4\u4f4e\u7ea7\u522b\u7684\u5de5\u5177\u7f16\u5199\u7684\uff0c\u8fd9\u4e9b\u5de5\u5177\u662f\u7531\u65e9\u5df2\u79bb\u5f00\u7684\u4eba\u7f16\u5199\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u811a\u624b\u67b6\u3002\u62b1\u6028\u4f60\u5fc5\u987b\u5e94\u4ed8\u7684\u6280\u672f\u503a\u52a1\u548c\u4f60\u7684\u5de5\u7a0b\u5e08\u65e0\u6cd5\u7406\u89e3\u7684\u201c\u4e0d\u53ef\u8bfb\u7684\u4ee3\u7801\u201d\u4e0d\u4f1a\u8ba9\u4f60\u8d70\u5f97\u5f88\u8fdc\u3002\u4e5f\u4e0d\u4f1a\u68a6\u60f3\u5f88\u5c11\u5b9e\u73b0\u7684\u957f\u671f\u91cd\u6784\u548c\u8fc1\u79fb\u3002\n\u8fd9\u5c31\u662f\u751f\u4ea7\u8c03\u8bd5\u5e73\u53f0\u5927\u653e\u5f02\u5f69\u7684\u5730\u65b9\u3002\u901a\u8fc7\u8ba9\u60a8\u7684\u5de5\u7a0b\u5e08\u6df1\u5165\u4e86\u89e3\u4ed6\u4eec\u6b63\u5728\u52aa\u529b\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f00\u59cb\u7406\u89e3\u5b83\u3002\u901a\u8fc7\u8ddf\u8e2a\u73af\u5883\u548c\u7528\u4f8b\u4e2d\u7684cookie\u788e\u5c51\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u5730\u89e3\u5f00\u8fd9\u79cd\u590d\u6742\u6027\u3002\n\u6211\u4eec\u73b0\u5728\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u53ef\u7406\u89e3\u6027\u7684\u91cd\u8981\u6027\u6709\u4e86\u66f4\u597d\u7684\u8ba4\u8bc6\u3002\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e00\u76f4\u90fd\u77e5\u9053\u4fdd\u6301\u4ee3\u7801\u7684\u6613\u8bfb\u6027\u548c\u6613\u7ef4\u62a4\u6027\u5f88\u91cd\u8981\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5f88\u591a\u5de5\u4f5c\u90fd\u96c6\u4e2d\u5728\u8fd9\u4e00\u58ee\u4e3e\u4e0a\u3002\u7136\u800c\uff0c\u6211\u4eec\u73b0\u5728\u66f4\u52a0\u8ba4\u8bc6\u5230\uff0c\u5b83\u53ef\u4ee5\u5728\u5141\u8bb8\u8f6f\u4ef6\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u957f\u548c\u53d1\u5c55\u65b9\u9762\u4ea7\u751f\u591a\u5927\u7684\u4e0d\u540c\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e5f\u6311\u6218\u4e86\u8fd9\u6837\u7684\u5047\u8bbe\uff0c\u5373\u901a\u8fc7\u5904\u7406\u590d\u6742\u6027\u548c\u8bbe\u8ba1\u548c\u7f16\u5199\u66f4\u597d\u3001\u66f4\u7b80\u5355\u7684\u8f6f\u4ef6\uff0c\u53ef\u7406\u89e3\u6027\u603b\u662f\u53ef\u4ee5\u63d0\u9ad8\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u5728\u4e2d\u9014\u767b\u4e0a\u4e86\u706b\u8f66\uff0c\u5bf9\u5b83\u662f\u5982\u4f55\u5230\u8fbe\u90a3\u91cc\u7684\u51e0\u4e4e\u6ca1\u6709\u63a7\u5236\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u5f00\u59cb\u8ddf\u8e2a\u548c\u7ba1\u7406\u53ef\u7406\u89e3\u6027\uff0c\u5c06\u5176\u4f5c\u4e3a\u81ea\u5df1\u7684\u5173\u952e\u5ea6\u91cf\uff0c\u6700\u5927\u5316\u5de5\u7a0b\u901f\u5ea6\u548c\u8d28\u91cf\uff0c\u5373\u4f7f\u5728\u4e0d\u662f\u6700\u4f73\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u4e3d\u5170\u00b7\u6d77\u83ab\u7ef4\u5947(Liran Haimovitch)\u662fRookout\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6280\u672f\u5b98\u3002\u4ed6\u662f\u73b0\u4ee3\u8f6f\u4ef6\u65b9\u6cd5\u8bba(\u5982\u654f\u6377\u3001\u7cbe\u76ca\u548cdevops)\u7684\u5021\u5bfc\u8005\u3002Liran\u7684\u6fc0\u60c5\u5728\u4e8e\u4e86\u89e3\u8f6f\u4ef6\u7684\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u3002\u5f53\u4ed6\u4e0d\u60f3\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4ed6\u901a\u5e38\u5728\u6f5c\u6c34\u6216\u5f92\u6b65\u65c5\u884c\u3002\nInfoQ\u4e0a\u4e0a\u5468\u5185\u5bb9\u7684\u7efc\u8ff0\u6bcf\u5468\u4e8c\u90fd\u4f1a\u53d1\u5e03\u3002\u52a0\u5165\u4e00\u4e2a\u8d85\u8fc725\u4e07\u540d\u9ad8\u7ea7\u5f00\u53d1\u4eba\u5458\u7684\u793e\u533a\u3002\u67e5\u770b\u793a\u4f8b\u3002\n\u9009\u62e9\u60a8\u7684\u56fd\u5bb6/\u5730\u533a\u6211\u540c\u610fInfoQ.com\u6309\u7167\u672c\u9690\u79c1\u58f0\u660e\u4e2d\u7684\u8bf4\u660e\u5904\u7406\u6211\u7684\u6570\u636e\u3002", "note_en": "Change is the only constant in life. Nowhere is this more apparent than in software engineering, where a developer\u2019s daily job is to modify, adapt, tweak, or even remake the systems they are responsible for.\n  As applications grow and teams scale, it becomes more challenging to maintain a clear understanding of the software itself. Complexity hurts engineers\u2019 ability to understand and effectively change the software as needed.\n  Understandability is the concept that a system should be presented so that an engineer can easily comprehend it.\u00a0The more understandable a system is, the easier it will be for engineers to change it in a predictable and safe manner.\n  A system is understandable if it meets the following criteria: complete, concise, clear, and organized.\n  Understandability and observability are complementary, but the later focuses more on two things: the ability to alert when the system misbehaves and help to identify the causes so that normal service can be restored; and the ability to help identify performance bottlenecks so that additional resources can be allocated or that the relevant teams be informed.\n  2,500 years ago Heraclitus said that \u201cchange is the only constant in life.\u201d Nowhere is this more apparent than in software engineering, where a developer\u2019s daily job is to modify, adapt, tweak, or even remake the systems they are responsible for. Another such aspect that makes software engineering relatively unique among human disciplines is the vast freedom we have to mold our works, within the man-made boundaries defined by the mechanics of computer science.\n Our ability to effectively exercise that great power often falls short on a very surprising limitation \u2014our ability to know our own creations. As applications grow and teams scale, it becomes even harder to maintain a clear understanding of the software itself, causing projects to crumble like the biblical Tower of Babel.\n  Most commercial software engineering tasks out there do not start out with a clean slate. There is an existing application, written using a certain computer language(s), relying on a set of frameworks and libraries, and running on top of some operating system(s).\n       We take it upon ourselves (or our teams) to change that existing application so that it meets some requirement(s), such as developing a new feature, fixing an existing bug, etc. Simultaneously we are required to continue meeting all the existing (un)documented requirements, and maintain the existing behavior as much as possible.\n And, as every junior software engineer finds out on their first day on the job, writing a piece of code to solve a simple computer science problem (or copying the answer from StackOverflow) is nowhere near the level of complexity of solving that same problem within a large and intricate system.\n  Borrowing from the  financial industry, let\u2019s define Understandability: \u201cUnderstandability is the concept that a system should be presented so that an engineer can easily comprehend it.\u201d The more understandable a system is, the easier it will be for engineers to change it in a predictable and safe manner.\n    Drawing further on that analogy, we can say that a system is understandable if it meets the following criteria:\n Complete. The system must be presented using a predefined set of sources (source code, documentation, etc.) to cover all key information. No critical pieces of information may be left to the engineer\u2019s imagination.\n  Concise. The system source code should not bury the user with an excessive amount of detail. This is where  s eparation of concerns and  a bstraction come into play, allowing the engineer to focus on the task at hand.\n  Clear. Use a presentation methodology that is easy for the reader to scan. This is where  c onsistency, coding conventions, source-code formatting, code comments, and syntax highlighting make a huge difference.\n  Organized. The engineer should be able to easily locate cross-referenced information within the system. This is where  m odularity, software documentation, source-code navigation controls, and source code management tools allow engineers to find their way around the system.\n  With the rise of  Software as a Service (SaaS) and other new  s oftware delivery paradigms, many organizations are practicing  total ownership of software, empowering engineers to take responsibility for the application throughout its lifecycle.\n In such organizations, Understandability takes on an even more powerful form, determining how well engineers can understand how the software operates and how it is being utilized by the application\u2019s customers.\n And so, highly valuable information such as usage patterns, real-world inputs and outputs, and actual performance and availability statistics can become accessible to teams determined to have them.\n  Reading this you might be thinking, that\u2019s exactly what  o bservability and monitoring tools are for. Unfortunately, that\u2019s not the case. Those tools are there to support more traditional IT problems, focusing on:\n Alerting when the system misbehaves and helping to identify the root so that normal service can be restored.\n  Identifying performance bottlenecks so that additional resources can be allocated or that the relevant teams be informed.\n Those are all great use-cases IT has been dealing with since time immemorial, and as the ROI for them is quite clear, a large number of vendors are offering great tools to solve those problems. However, those are not the use cases software engineering teams are tasked with, and those tools were never meant to help them.\n What all of those IT use cases have in common is that someone, with a basic working knowledge of the system, needs to know exactly how the system behaved in a specific instance so that they can respond to it appropriately. This means we collect data about a predefined set of events, which tends to be about how the system is interacting with the world around it.\n Software engineering teams, on the other hand, have an in-depth knowledge of the inner workings of the system and are looking to understand more about how it works. The data they need to collect changes on a daily (if not hourly) basis, based on the specific change they are making to the system.\n  As software scales and mutates, it becomes ever more complex. A big part of that complexity is inherent, due to the simple fact that the number of business requirements is ever-growing. The rest of that complexity is unwanted, caused by the way the application has been repurposed over time as well as poor design choices and is commonly referred to as  tech debt.\n Regardless of its source, complexity hurts engineers\u2019 ability to understand and effectively change the software as needed. This problem is usually aggravated by the knowledge loss caused by personnel turnover.\n Of course, in the software industry, it is common knowledge that software complexity has to be minimized. The more complex the software, the more expensive it will be to develop new features and the overall quality of the system will be lower. Much has been written on how to build application software that keeps complexity to a minimum and allows systems and teams to scale better.\n  If you are developing new software, you will likely neglect Understandability in favor of one of its proxies: complexity. By focusing on avoiding and reducing complexity you will naturally maintain understandability. Lucky for you, complexity in software is at the focus of countless software development tools and techniques.\n First and foremost, start with a high-quality workforce. Talented engineers draw on their experience to express complex business problems in simple and elegant ways in both the software\u2019s source code and architecture, creating an easier to understand software.\n Next, try to make the system as small as possible, since smaller systems by nature are less complex and easier to understand. Systems can be reduced from the \u201ctop\u201d by focusing on the business requirements that truly matter, while leaving out, at least temporarily, requirements that are not mandatory. Systems can often be reduced from the \u201cbottom\u201d as well, by using higher-level abstractions, such as new programming languages, advanced frameworks, and modern databases.\n Last but not least, make sure to have the scaffolding in place to deal with complexity when it arises. Write automated tests in the form of both unit-tests and system-tests to ensure that your engineering team can safely refactor that complexity away. Put in high-quality observability tools to help you gain a high-level understanding of the system. Automate your integration and deployment pipelines to enable you to improve and iterate fast.\n  When it comes to existing software, on the other hand, we tend to accept our engineering team\u2019s failure to understand the code as a god-wrought catastrophe. Charging at complexity head-on is no longer a viable approach to improving Understandability.\n More often than not, you are faced with a legacy system that was written using lower-level instruments than what is currently available, by people who have long ago left and none of the scaffolding is there. Complaining about the technical debt you have to cope with and the \u201cunreadable code\u201d your engineers cannot understand is not going to get you very far. Nor will dreaming about long-term refactorings and migrations which will rarely ever come to pass.\n That\u2019s where production debugging platforms shine. By allowing your engineers the in-depth view of the code in motion they are striving for, they can begin to understand it. And by following the cookie crumbs across environments and use cases, they can unravel that complexity step-by-step.\n  We now have a better perspective on the importance of Understandability in software development. On the one hand, we always knew that keeping code easy to read and maintain was important and that much of software engineering was focused on that feat. And yet, we now have a greater appreciation for how much of a difference it can make in allowing software to grow and evolve over time.\n On the other hand, we have also challenged the assumption that Understandability can always be improved by tackling complexity and designing and writing better, simpler software. More often than not, we find ourselves boarding the train midway through, with little or no control over how it got there. And so, we must start tracking and managing Understandability as its own key metric, maximizing engineering velocity and quality, even under less than optimal conditions.\n  Liran Haimovitch is the Co-Founder and CTO of Rookout. He\u2019s an advocate of modern software methodologies like agile, lean, and devops. Liran\u2019s passion is to understand how software actually works. When he\u2019s not thinking of code, he\u2019s usually diving or hiking.\n  A round-up of last week\u2019s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers. \t\t\t View an example\n  Select your country              I consent to InfoQ.com handling my data as explained in this  Privacy Notice.", "posttime": "2020-06-10 00:01:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "important,\u8f6f\u4ef6", "title": "\u53ef\u7406\u89e3\u6027\uff1a\u60a8\u6ca1\u6709\u8ddf\u8e2a\u7684\u6700\u91cd\u8981\u7684\u6307\u6807", "title_en": "Understandability: The Most Important Metric You\u2019re Not Tracking", "transed": 1, "url": "https://www.infoq.com/articles/understandability-metric-not-tracking/", "via": "", "real_tags": ["important", "\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "e8907c8a4632a921b88bc0d38aa44854.jpg", "infoid": 1005863, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u51b3\u5b9a\u7528\u4eba\u5de5\u667a\u80fd\u53d6\u4ee3\u4eba\u7c7b\u8bb0\u8005\u6765\u8fd0\u8425\u5176\u65b0\u95fb\u548c\u641c\u7d22\u7f51\u7ad9MSN.com\uff0c\u8fd9\u4e00\u51b3\u5b9a\u53d7\u5230\u4e86\u6279\u8bc4\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u81ea\u52a8\u5316\u7cfb\u7edf\u8ba9\u82f1\u56fd\u6d41\u884c\u4e50\u961fLittle Mix\u7684\u4e24\u540d\u6df7\u8840\u6210\u5458\u611f\u5230\u56f0\u60d1\u3002\n\u636e\u82f1\u56fd\u201c\u536b\u62a5\u201d\u6700\u5148\u62a5\u9053\uff0cMSN.com\u65b0\u4e0a\u4efb\u7684\u673a\u5668\u4eba\u7f16\u8f91\u9009\u62e9\u4e86\u4e00\u7bc7\u5173\u4e8eLittle Mix\u6b4c\u624bJade Thirlwall\u4e0e\u79cd\u65cf\u4e3b\u4e49\u7684\u7ecf\u5386\u7684\u6545\u4e8b\u51fa\u73b0\u5728\u4e3b\u9875\u4e0a\uff0c\u4f46\u7528\u4e86Thirlwall\u4e50\u961f\u6210\u5458Leigh-Anne PInnock\u7684\u7167\u7247\u6765\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\nThirlwall\u5728\u5979\u7684Instagram\u62a5\u9053\u4e2d\u63d0\u9192\u4eba\u4eec\u6ce8\u610f\u8fd9\u4e2a\u9519\u8bef\uff0c\u5979\u5199\u9053\uff1a\u201c@MSN\u5982\u679c\u4f60\u8981\u4ece\u5176\u4ed6\u51c6\u786e\u7684\u5a92\u4f53\u673a\u6784\u590d\u5236\u548c\u7c98\u8d34\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u8981\u786e\u4fdd\u4f60\u4f7f\u7528\u7684\u662f\u6b63\u786e\u7684\u6df7\u8840\u7fa4\u4f53\u6210\u5458\u7684\u56fe\u7247\u3002\u201d\n\u5979\u8865\u5145\u9053\uff1a\u201c\u8fd9\u4e9b\u72d7\u5c4e\u603b\u662f\u53d1\u751f\u5728@leighannpInnock\u548c\u6211\u8eab\u4e0a\uff0c\u8fd9\u5df2\u7ecf\u6210\u4e86\u4e00\u4e2a\u6d41\u4f20\u7684\u7b11\u8bdd\u2026\u2026\u3002\u4f60\u4e0d\u80fd\u4ece\u4e00\u4e2a\u56e2\u4f53\u2026\u7684\u56db\u4e2a\u6210\u5458\u4e2d\u533a\u5206\u51fa\u4e24\u4e2a\u6709\u8272\u4eba\u79cd\u5973\u4eba\uff0c\u8fd9\u771f\u5192\u72af\u4e86\u6211\u3002\u505a\u5f97\u66f4\u597d\uff01\u201c\u3002\n\u636e\u82f1\u56fd\u201c\u536b\u62a5\u201d\u62a5\u9053\uff0c\u8fd9\u4e00\u9519\u8bef\u662f\u7531\u5fae\u8f6f\u65b0\u7684\u81ea\u52a8\u5316\u7cfb\u7edf\u9020\u6210\u7684\u3002\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u4e0a\u6708\u5e95\u89e3\u96c7\u4e86MSN\u7684\u7f16\u8f91\u4eba\u5458\u3002\u8fd9\u4e9b\u8bb0\u8005\u7684\u4efb\u52a1\u4e0d\u662f\u64b0\u5199\u62a5\u9053\uff0c\u800c\u662f\u4ece\u5176\u4ed6\u5a92\u4f53\u6311\u9009\u6587\u7ae0\uff0c\u5728MSN\u4e3b\u9875\u4e0a\u805a\u7126\u3002\u636e\u62a5\u9053\uff0c\u7f8e\u56fd\u7ea6\u670950\u540d\u8bb0\u8005\u88ab\u89e3\u96c7\uff0c\u82f1\u56fd\u670927\u540d\u8bb0\u8005\u88ab\u89e3\u96c7\u3002\n\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u6700\u8fd1\u7684\u8fd9\u4e2a\u9519\u8bef\uff0c\u4f46\u8003\u8651\u5230\u7cfb\u7edf\u7684\u81ea\u52a8\u5316\u6027\u8d28\uff0c\u8fd9\u4e2a\u9519\u8bef\u53ef\u80fd\u662f\u7531\u4e8e\u901a\u8baf\u793e\u63d0\u4f9b\u7684\u8d34\u9519\u6807\u7b7e\u7684\u56fe\u7247\u9020\u6210\u7684\u3002\n\u8fd9\u6b63\u662f\u4eba\u7c7b\u7f16\u8f91\u5e94\u8be5\u53d1\u73b0\u7684\u90a3\u79cd\u9519\u8bef\uff0c\u5c3d\u7ba1\u6b63\u5982\u65af\u5c14\u6c83\u5c14\u7684\u8bc4\u8bba\u6240\u8868\u660e\u7684\u90a3\u6837\uff0c\u8fd9\u5df2\u7ecf\u4e0d\u662f\u7b2c\u4e00\u6b21\u72af\u8fd9\u6837\u7684\u9519\u8bef\u4e86\u3002\u4f8b\u5982\uff0c\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0cBBC\u5728\u4f7f\u7528\u7bee\u7403\u8fd0\u52a8\u5458\u52d2\u5e03\u6717\u00b7\u8a79\u59c6\u65af(LeBron James)\u7684\u955c\u5934\u6765\u8bf4\u660e\u4ed6\u7684\u961f\u53cb\u79d1\u6bd4\u00b7\u5e03\u83b1\u6069\u7279(Kobe Bryant)\u53bb\u4e16\u7684\u6d88\u606f\u540e\uff0c\u88ab\u8feb\u9053\u6b49\u3002\n\u5fae\u8f6f\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9\u201c\u536b\u62a5\u201d\uff1a\u201c\u4e00\u65e6\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u52a0\u4ee5\u89e3\u51b3\uff0c\u5e76\u66f4\u6362\u4e86\u4e0d\u6b63\u786e\u7684\u5f62\u8c61\u3002\u201d\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u201c\u536b\u62a5\u201d\u62a5\u9053\u8bf4\uff0cMSN\u7684\u5176\u4f59\u4eba\u7c7b\u5458\u5de5\u5df2\u7ecf\u6536\u5230\u8b66\u544a\uff0c\u65b0\u95fb\u673a\u6784\u6b63\u5728\u53d1\u5e03\u5bf9\u8be5\u7f51\u7ad9\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u5173\u952e\u62a5\u9053\u3002\u5de5\u4f5c\u4eba\u5458\u88ab\u544a\u77e5\uff0c\u4eba\u5de5\u667a\u80fd\u53ef\u80fd\u4f1a\u9009\u62e9\u8fd9\u4e9b\u6709\u8da3\u7684\u6545\u4e8b\uff0c\u5e76\u5c06\u5b83\u4eec\u653e\u5728MSN\u4e3b\u9875\u4e0a\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4eba\u7c7b\u5de5\u4f5c\u4eba\u5458\u5df2\u88ab\u544a\u77e5\u5220\u9664\u8fd9\u4e9b\u6545\u4e8b\u3002", "note_en": "Microsoft\u2019s decision to  replace human journalists with AI to run its news and search site MSN.com has been criticized after the automated system confused two mixed-race members of British pop group Little Mix.\n As first  reported by  The Guardian, the newly-instated robot editors of MSN.com selected a story about Little Mix singer Jade Thirlwall\u2019s  experience with racism to appear on the homepage, but used a picture of Thirlwall\u2019s bandmate Leigh-Anne Pinnock to illustrate it.\n Thirlwall drew attention to the mistake on her Instagram story, writing: \u201c@MSN If you\u2019re going to copy and paste articles from other accurate media outlets, you might want to make sure you\u2019re using an image of the correct mixed race member of the group.\u201d\n She added: \u201cThis shit happens to @leighannepinnock and I ALL THE TIME that it\u2019s become a running joke ... It offends me that you couldn\u2019t differentiate the two women of colour out of four members of a group \u2026 DO BETTER!\u201d\n   According to  The Guardian, the mistake was made by Microsoft\u2019s new automated systems. The tech giant laid off the editorial staff of MSN  late last month. These journalists were not tasked with writing stories, but selecting articles from other outlets to spotlight on the MSN homepage. Around 50 journalists were reportedly let go in the US and 27 in the UK.\n It\u2019s not clear exactly what caused this recent mistake, but given the automated nature of the system it\u2019s possible the error was due to mislabelled pictures provided by wire services.\n This is exactly the sort of mistake that human editors are supposed to spot, though as Thirlwall\u2019s comments make clear, this is far from the first time such errors have been made. Earlier this year, for example, the BBC was forced to  apologize after using footage of basketball player LeBron James to illustrate news of the death of his teammate Kobe Bryant.\n A spokesperson for Microsoft told  The Guardian: \u201cAs soon as we became aware of this issue, we immediately took action to resolve it and have replaced the incorrect image.\u201d\n Notably,  The Guardian reports that the remaining human staff at MSN have been warned that critical coverage of the site\u2019s automated systems is being published by news outlets. The staff were told that the AI may select these stories as interesting and place them on the MSN homepage. If this happens the human staff have been told to remove the stories.", "posttime": "2020-06-09 23:36:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u5fae\u8f6f,microsoft,\u6df7\u8840,ai", "title": "\u5fae\u8f6f\u4eba\u5de5\u667a\u80fd\u8bb0\u8005\u5728MSN\u4e3b\u9875\u4e0a\u8ff7\u60d1\u6df7\u8840\u5c0f\u6df7\u8840\u6b4c\u624b", "title_en": "Microsoft's AI Journalists Confuse Mixed-Race Little Mix Singers on MSN Homepage", "transed": 1, "url": "https://www.theverge.com/2020/6/9/21284934/microsoft-ai-news-editors-msn-homepage-little-mix-singers", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u5fae\u8f6f", "microsoft", "\u6df7\u8840", "ai"]}, {"category": "", "categoryclass": "", "imagename": "2aa0de4843951f1bd17c642334fa28a2.png", "infoid": 1005862, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e00\u6b21\u60a8\u9047\u5230\u6280\u672f\u6311\u6218\u5e76\u591a\u6b21\u5c1d\u8bd5\u89e3\u51b3\u90fd\u4ee5\u5931\u8d25\u544a\u7ec8\u662f\u4ec0\u4e48\u65f6\u5019\uff1f\u53ef\u80fd\u662f\u7531\u4e8e\u60a8\u4f7f\u7528\u7684\u5e73\u53f0\u7684\u9650\u5236\uff0c\u6216\u8005\u662f\u60a8\u81ea\u8eab\u6280\u672f\u80fd\u529b\u7684\u9650\u5236\u3002\u6216\u8005\uff0c\u4e5f\u8bb8\u8fd9\u53ea\u662f\u4e00\u4e2a\u975e\u5e38\u96be\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u89e3\u51b3\uff0c\u4f46\u6700\u7ec8\u4e0d\u503c\u5f97\u4e3a\u6b64\u82b1\u8d39\u7cbe\u529b\u3002\n\u6709\u65f6\u5019\uff0c\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u4e0e\u5176\u8bf4\u662f\u201c\u89e3\u51b3\u95ee\u9898\u201d\uff0c\u4e0d\u5982\u8bf4\u662f\u7528\u4eba\u529b\u89e3\u51b3\u65b9\u6848\u6765\u56de\u907f\u95ee\u9898\u3002\u6211\u5c06\u5411\u60a8\u5c55\u793a\u4e00\u79cd\u79f0\u4e3a\u201cFlintstone\u201d\u7684\u6280\u672f\uff0c\u5e76\u7ed9\u60a8\u4e00\u4e9b\u6307\u5bfc\u65b9\u9488\uff0c\u544a\u8bc9\u60a8\u5982\u4f55\u8bc6\u522b\u4f4e\u6280\u672f\u7684Flintstone\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u6bd4\u6b63\u9762\u89e3\u51b3\u95ee\u9898\u66f4\u6709\u610f\u4e49\u7684\u60c5\u51b5\u3002\nFlintstning\u662f\u5728\u5e55\u540e\u5229\u7528\u4eba\u529b\u6765\u89e3\u51b3\u4f20\u7edf\u4e0a\u57fa\u4e8e\u8f6f\u4ef6\u7684\u95ee\u9898\u3002\u6211\u7b2c\u4e00\u6b21\u542c\u5230\u8fd9\u4e2a\u8bcd\u662f\u57282006\u5e74\u901a\u8fc7\u5bd2\u6b66\u7eaa\u4e4b\u5bb6\u3002\u5b83\u901a\u5e38\u7528\u5728\u521b\u4e1a\u521d\u671f\u5b8c\u5168\u624b\u5de5\u64cd\u4f5c\u7684\u73af\u5883\u4e2d\uff0c\u76ee\u7684\u662f\u5728\u4f60\u8bd5\u56fe\u5b9e\u73b0\u81ea\u52a8\u5316\u4e4b\u524d\uff0c\u5148\u4ece\u91cc\u5230\u5916\u5b66\u4e60\u4e00\u4e2a\u8fc7\u7a0b\u3002\u4f46\u662f\uff0c\u5b83\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u4e5f\u5f88\u6709\u4ef7\u503c\uff0c\u4f8b\u5982\uff0c\u5728\u60a8\u6709\u4e00\u4e2a\u7279\u522b\u96be\u4ee5\u6349\u6478\u7684\u6280\u672f\u6311\u6218\u4e14\u6ee1\u8db3\u7279\u5b9a\u6807\u51c6\u96c6\u7684\u60c5\u51b5\u4e0b\u3002\n\u5982\u679c\u60a8\u5bf9\u8fd9\u4e94\u4e2a\u95ee\u9898\u7684\u56de\u7b54\u662f\u80af\u5b9a\u7684\uff0c\u90a3\u4e48\u60a8\u7684\u95ee\u9898\u5f88\u53ef\u80fd\u5c31\u662f\u57fa\u4e8eFlintstone\u7684\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5019\u9009\u8005\uff1a\n\u8ba9\u6211\u4ece\u6211\u6700\u8fd1\u4e00\u6bb5YouTube\u89c6\u9891\u7684\u8bc4\u8bba\u4e2d\u7ed9\u51fa\u4e00\u4e2a\u5f88\u597d\u7684Flintstering\u89e3\u51b3\u65b9\u6848\u5019\u9009\u8005\u7684\u5177\u4f53\u4f8b\u5b50\uff1a\n\u8fd9\u4e2a\u53ebTapan\u7684\u5bb6\u4f19\u95ee\u6211\uff0c\u662f\u5426\u6709\u53ef\u80fd\u4f7f\u7528\u6211\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u81ea\u52a8\u5316\u6280\u672f\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5b9a\u671f\u8fdb\u884c\u5783\u573e\u6536\u96c6\uff0c\u6e05\u9664\u4ed6\u6570\u636e\u5e93\u4e2d\u672a\u4f7f\u7528\u7684\u7167\u7247\u3002\n\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u786e\u5b9e\u4e0d\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u5408\u9002\u5de5\u5177\u3002\u4ed6\u9700\u8981\u5728Adalo\u4e2d\u8fd0\u884c\u5e76\u5904\u7406\u6b64\u95ee\u9898\u7684cron\u8fdb\u7a0b\u7684\u7b49\u4ef7\u7269\uff0c\u4f46\u662fAdalo\u76ee\u524d\u6ca1\u6709\u57fa\u4e8e\u65f6\u95f4\u7684\u7cfb\u7edf\u751f\u6210\u4efb\u52a1\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u4ed6\u6b63\u5728\u6320\u5934\uff0c\u8bd5\u56fe\u627e\u51fa\u5982\u4f55\u81ea\u52a8\u5316\u8fd9\u4e2a\u5783\u573e\u6536\u96c6\u8fc7\u7a0b\u3002\n\u6211\u5efa\u8bae\u4ed6\u96c7\u4f63\u4e00\u540d\u865a\u62df\u52a9\u7406(VA)\u6bcf\u5468\u767b\u5f55\u4ed6\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6e05\u7406\u6570\u636e\u5e93\u4e2d\u672a\u4f7f\u7528\u7684\u56fe\u50cf\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u4e00\u4e2a\u6280\u672f\u89e3\u51b3\u65b9\u6848\u3002\u8003\u8651\u5230Adalo\u5982\u4f55\u4f7f\u7528\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5171\u4eab\u540c\u4e00\u6570\u636e\u5e93\u7684\u80fd\u529b\uff0c\u4e3a\u4ed6\u7684\u9000\u4f0d\u519b\u4eba\u7ba1\u7406\u5c40\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u4e25\u683c\u9650\u5236\u7684\u6743\u9650\u7684\u7279\u6b8a\u7ba1\u7406\u754c\u9762\u5bf9\u4ed6\u6765\u8bf4\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u5728\u4e0d\u9020\u6210\u4efb\u4f55\u771f\u6b63\u7684\u5b89\u5168\u98ce\u9669\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\u5728\u62db\u52df\u3001\u5206\u914d\u9000\u4f0d\u519b\u4eba\u7ba1\u7406\u5c40\u548c\u7f16\u5199\u5feb\u901f\u89c6\u89c9\u754c\u9762\u4e4b\u95f4\uff0c\u5927\u7ea6\u9700\u8981\u4e24\u4e2a\u5c0f\u65f6\u7684\u5de5\u4f5c\uff0c\u4ed6\u7684\u5783\u573e\u6536\u96c6\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\u4ed6\u6bcf\u5468\u5c06\u652f\u4ed8\u51e0\u7f8e\u5143\u7684\u9000\u4f0d\u519b\u4eba\u7ba1\u7406\u5c40\u8d39\u7528\uff0c\u4f46\u4ed6\u5df2\u7ecf\u8282\u7701\u4e86\u6570\u5343\u7f8e\u5143\u7684\u5f00\u53d1\u5de5\u4f5c\uff0c\u5e76\u7acb\u5373\u5904\u7406\u4e86\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u80dc\u5229\u3002\n\u663e\u7136\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u95ee\u9898\u90fd\u9002\u5408\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u901a\u8fc7\u68c0\u67e5\u4f60\u7684\u7279\u6027\u79ef\u538b\uff0c\u5e76\u4f7f\u7528\u4e0a\u9762\u7684\u4e94\u4e2a\u95ee\u9898\u9010\u4e00\u5206\u6790\u4f60\u7684\u76d8\u5b50\u91cc\u6709\u4ec0\u4e48\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6280\u672f\u5728\u77ed\u65f6\u95f4\u5185\u89e3\u51b3\u4e00\u5927\u5806\u7279\u6027\u3002\n\u6211\u6709\u51e0\u4e2a\u9000\u4f0d\u519b\u4eba\u534f\u4f1a\uff0c\u6765\u81eaUpwork on Keener in Slake\uff0c\u6709\u672a\u7ed3\u7684\u5c0f\u65f6\u5408\u540c\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u5f55\u5236\u4e00\u6bb5\u7ec7\u5e03\u673a\u89c6\u9891\uff0c\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u4efb\u52a1\u3002\u5f53\u9700\u8981\u4e00\u4e9b\u4e0a\u4e0b\u6587\u624d\u80fd\u7406\u89e3\u548c\u5b8c\u6210\u4efb\u52a1\uff0c\u5e76\u4e14\u9700\u8981\u7684\u662f\u4f4e\u4f18\u5148\u7ea7\u548c\u4e0d\u9891\u7e41\u7684\u5de5\u4f5c\u65f6\uff0c\u8fd9\u5f88\u597d\u5730\u53d1\u6325\u4e86\u4f5c\u7528\u3002\n\u5bf9\u4e8e\u5de5\u4f5c\u66f4\u52a0\u65e0\u8111\u7684\u60c5\u51b5\uff0c\u4e9a\u9a6c\u900a\u63d0\u4f9b\u4e86\u4e00\u9879\u540d\u4e3aMechanical Turk\u7684\u670d\u52a1\uff0c\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u5411\u4eba\u7c7b\u5206\u914d\u79f0\u4e3aHITS(\u4eba\u7c7b\u667a\u80fd\u4efb\u52a1)\u7684\u5c0f\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u9700\u8981\u5168\u5929\u5019\u5de5\u4f5c\uff0c\u5e76\u4e14\u9700\u8981\u6269\u5c55\u5230\u4e00\u4e2a\u4eba\u53ef\u4ee5\u5904\u7406\u7684\u8303\u56f4\u5185\u3002\u8fd9\u57fa\u672c\u4e0a\u5c31\u50cf\u662f\u4e00\u4e2a\u5b9e\u65f6\u7684eBay\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u5185\u51e0\u4e2a\u4fbf\u58eb\u7684\u5fae\u4ea4\u6613\u5c06\u8fd9\u4e9b\u52b3\u529b\u51fa\u79df\u51fa\u53bb\u3002\u8fd9\u662f\u53e6\u4e00\u4e2a\u5e16\u5b50\u7684\u4e3b\u9898\uff0c\u4f46\u662f\u4f60\u7684\u6b66\u5668\u5e93\u91cc\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u3002\n\u4e0b\u4e00\u6b21\uff0c\u5f53\u60a8\u53d1\u73b0\u81ea\u5df1\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6280\u672f\u5c1d\u8bd5\u5931\u8d25\u540e\u9677\u5165\u56f0\u5883\u65f6\uff0c\u8bf7\u4f7f\u7528\u4e0a\u9762\u7684\u95ee\u9898\u6765\u786e\u5b9a\u60a8\u7684\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528Flntstone\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u662f\u4e00\u79cd\u5168\u9762\u7684\u80dc\u5229\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u66f4\u4fbf\u5b9c/\u66f4\u5feb/\u66f4\u6709\u5f39\u6027\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u96c7\u4f63\u5bf9\u8fd9\u4efd\u5de5\u4f5c\u611f\u5230\u9ad8\u5174\u7684\u4eba\u3002\n\u5728\u672a\u6765\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u89e3\u6784\u8fd9\u79cd\u706b\u77f3\u6280\u672f\u7684\u4e24\u4e2a\u4e3b\u8981\u57fa\u672c\u539f\u5219\uff0c\u5373\u6211\u4f7f\u7528\u7684\u4e24\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u79f0\u4e3a\u201c\u63a7\u5236\u53cd\u8f6c\u201d\u548c\u201c\u6c14\u95f8\u201d\u3002\u6211\u5c06\u5411\u4f60\u5c55\u793a\u8fd9\u4e9b\u79ef\u6728\u662f\u5982\u4f55\u4e0e\u7b2c\u4e09\u79cd\u6211\u79f0\u4e4b\u4e3a\u201c\u8d5b\u9a6c\u201d\u6a21\u5f0f\u7684\u4e50\u9ad8\u79ef\u6728\u7ed3\u5408\u4f7f\u7528\uff0c\u521b\u9020\u6027\u5730\u89e3\u51b3\u96be\u9898\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u6536\u4ef6\u7bb1\u91cc\u7684\u81ea\u52a8\u5316\u3001\u6760\u6746\u548c\u6a2a\u5411\u601d\u7ef4\u7b49\u72ec\u5bb6\u5185\u5bb9\uff0c\u4e00\u5b9a\u8981\u52a0\u5165\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u5217\u8868\u3002\u5e72\u676f", "note_en": "When was the last time you butted your head against a technical challenge and had several failed attempts to solve it? Maybe it was due to limitations of the platform you\u2019re using or limitations of your own technical ability. Or maybe it was just a really freakin\u2019 hard problem to solve that is solvable via technical means but not ultimately worth the energy for doing so.\n Sometimes the best solution isn\u2019t to \u201cbeat the problem\u201d so much as to side-step it with a human-powered solution. I\u2019m going to show you a technique for doing this called \u201cFlintstoning\u201d and give you some guidelines for how to identify situations where a low-tech Flintstoned solution might make more sense than tackling the problem head-on.\n  Flintstoning is using human power under the hood to solve what would traditionally be a software-based problem. I first heard this term back in 2006 via  Cambrian House. It\u2019s typically used in the context of doing things in a decidedly-manual way early on in a startup for the sake of learning a process inside &amp; out  before you try to automate it. But it\u2019s valuable in other contexts such as in the case where you have a particularly elusive technical challenge that meets a certain set of criteria.\n  If you can answer yes to these five questions it\u2019s likely that your problem is a good candidate for a Flintstoning-based solution:\n   Let me give you a concrete example of a good Flintstoning solution candidate from a  comment on one of my recent YouTube videos:\n This guy Tapan is asking if it would be possible to use my  hack with browser-based automation for essentially doing periodic garbage collection clearing out unused photos in his database after a certain time period.\n Browser-automation really isn\u2019t the right tool for this. He needs the equivalent of a cron process that runs in  Adalo and handles this but Adalo currently has no concept of time-based system generated tasks so he\u2019s scratching his head trying to figure out how to automate this garbage collection process.\n Rather than engineering a technical solution I suggested he just hire a virtual assistant (VA) to log into his app weekly and clean out the unused images in the database. Given how Adalo works with the ability for two apps to share the same database it\u2019s trivial for him to create a special admin interface for his VA with heavily-restricted permissions that enables that person to handle this without creating any real security risk. With maybe two hours of work between recruiting and tasking the VA and writing a quick visual interface his garbage collection problem is solved with no more head butting. He\u2019ll pay a few dollars each week in VA fees but has saved would could be a couple thousand dollars in dev work and has the problem handled immediately so it\u2019s a massive win.\n  Obviously not every problem lends itself to being solved in this way but by going through your feature backlog and analyzing what\u2019s on your plate dev-wise using the above five questions, you may find you can knock out a bunch of features using this technique in short order.\n I have a few VA\u2019s from  Upwork on retainer in Slack with standing open hourly contracts and for situations like this I can simply record a Loom video and task them in situations like these. This works well for situations when there\u2019s a bit of context required to understand and complete the task and it\u2019s low-priority and infrequent work that\u2019s required.\n For situations where the work is more mindless, 24/7 and needs to scale beyond what one person can handle Amazon offers a service called  Mechanical Turk to programmatically task humans with small jobs called  HITs (human intelligence tasks). It\u2019s basically like a realtime eBay of grunt work in which you\u2019re farming out this labor via microtransactions of a few pennies from within your app. That\u2019s a topic for another post but a powerful tool to have in your arsenal.\n  Next time you find yourself going down a rabbit hole of failed technical attempts at solving a problem, use the questions above to determine whether your problem is a good candidate for a Flntstone solution. It\u2019s a win all around with you getting a cheaper/faster/resilient solution in place while also employing someone who is happy to have the work.\n In a future post I\u2019ll deconstruct the two main underlying principles of this technique of Flintstoning which are two design patterns I use called \u201cInversion of Control\u201d and \u201cAirlocks.\u201d I\u2019ll show you how those are like lego blocks that can be used in conjunction with a third I call the \u201cHorserace\u201d pattern to solve hard problems creatively. Be sure to join my email list if you want exclusive content like this around automation, leverage and lateral thinking in your inbox. cheers", "posttime": "2020-06-09 23:35:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6280\u672f,hard", "title": "\u5728\u8270\u96be\u7684\u6280\u672f\u6311\u6218\u4e2d\u8131\u9896\u800c\u51fa", "title_en": "Flintstoning your way around hard technical challenges", "transed": 1, "url": "https://grid7.com/2020/06/lateral-thinking-and-flintstoning/", "via": "", "real_tags": ["\u6280\u672f", "hard"]}, {"category": "", "categoryclass": "", "imagename": "dbfc6d926e957d1c1369026ff42c0871.jpeg", "infoid": 1005861, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u63d0\u4ea4\u4eba\u3002\n\u4ee5.\u4e3a\u52a8\u529b", "note_en": "Presented by\n  Powered by", "posttime": "2020-06-09 23:33:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62c9\u7f8e,ramesses,\u63d0\u4ea4", "title": "\u6cd5\u8001\u62c9\u7f8e\u897f\u65af\u516d\u4e16\u5893", "title_en": "Pharaoh Ramesses VI Tomb", "transed": 1, "url": "https://my.matterport.com/show/?m=NeiMEZa9d93", "via": "", "real_tags": ["\u62c9\u7f8e", "ramesses", "\u63d0\u4ea4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005860, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u021cElde\u021de to Alle Men\u021dOur Detts\uff1ato hyma at\u021de Schule Tarettry\uff0ctry.\u3002\n\u548c\u4e2d\u4e16\u7eaa\u82f1\u8bed\u4e00\u6837\uff0c\u8fd9\u6bd4\u4e00\u5f00\u59cb\u770b\u8d77\u6765\u8981\u5bb9\u6613\u5f97\u591a\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u6bd4\u770b\u8d77\u6765\u7b80\u5355\u5f97\u591a\uff0c\u53ef\u80fd\u4f1a\u6210\u4e3a\u6211\u7684\u9996\u9009\u793a\u4f8b\u3002\u552f\u4e00\u5947\u602a\u7684\u8bcd\u662f\u8212\u52d2\u5854\u672c\u8eab\u2026\u3002\n\u662f\u554a\uff01\u5982\u679c\u4f60\u80fd\u8bfb\u82f1\u8bed\uff0c\u4f60\u5c31\u80fd\u5b66\u4f1a\u8bfb\u4e2d\u4e16\u7eaa\u82f1\u8bed\u3002\u5b83\u770b\u8d77\u6765\u50cf\u4e00\u95e8\u5916\u8bed\uff0c\u4f46\u5b83\u4e0d\u662f\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u4e0d\u5b8c\u5168\u662f\u5916\u56fd\u7684\u3002\u4f60\u53ef\u4ee5\u5b66\u4f1a\u4e00\u4e9b\u5c0f\u7a8d\u95e8\u3002\u8fd9\u4e9b\u628a\u620f\u53ef\u80fd\u4f1a\u8ba9\u4f60\u8d70\u5230\u90a3\u91cc\u768490%\u621695%\uff0c\u81f3\u5c11\u5728\u4ee5\u540e\u7684\u77ed\u4fe1\u4e2d\u662f\u8fd9\u6837\uff0c\u6bd4\u5982\u57281350\u5e74\u5de6\u53f3\u3002\n\u514d\u8d23\u58f0\u660e\uff1a\u6211\u4ece\u672a\u5b66\u8fc7\u4e2d\u53e4\u82f1\u8bed\u3002\u8fd9\u53ea\u662f\u6211\u81ea\u5df1\u6361\u5230\u7684\u4e1c\u897f\u3002\u8fd9\u4e00\u6761\u4e2d\u7684\u4efb\u4f55\u4e8b\u5b9e\u58f0\u660e\u90fd\u53ef\u80fd\u662f\u767e\u5206\u4e4b\u767e\u9519\u8bef\u7684\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u5f88\u6210\u529f\u5730\u9605\u8bfb\u4e86\u4e2d\u53e4\u82f1\u8bed\uff0c\u6211\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002\n\u82f1\u8bed\u4e00\u5f00\u59cb\u662f\u5fb7\u8bed\u3002\u53e4\u82f1\u8bed\uff0c\u4e5f\u53eb\u76ce\u683c\u9c81-\u6492\u514b\u900a\u8bed\uff0c\u786e\u5b9e\u662f\u4e00\u95e8\u5916\u8bed\uff0c\u9700\u8981\u8ba4\u771f\u5b66\u4e60\u3002\u6211\u4e0d\u8ba4\u4e3a\u4e00\u4e2a\u8bb2\u82f1\u8bed\u7684\u4eba\u4ec5\u4ec5\u9760\u4e00\u4e9b\u6280\u5de7\u5c31\u80fd\u5b66\u4f1a\u9605\u8bfb\u5b83\u3002\n\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u53e4\u82f1\u8bed\u4e0e\u5fb7\u8bed\u5206\u9053\u626c\u9573\u30021066\u5e74\uff0c\u8bfa\u66fc\u5e95\u4eba\u5165\u4fb5\u82f1\u683c\u5170\uff0c\u82f1\u8bed\u88ab\u539a\u539a\u5730\u6d82\u4e0a\u4e86\u4e00\u5c42\u6cd5\u8bed\u3002\u4e2d\u4e16\u7eaa\u82f1\u8bed\u662f\u82f1\u8bed\u548c\u6cd5\u8bed\u7684\u6df7\u5408\u4f53\u3002\u91cc\u9762\u4ecd\u7136\u662f\u5fb7\u8bed\uff0c\u4f46\u662f\u5f88\u591a\u62fc\u5199\u548c\u8bcd\u6c47\u90fd\u662f\u6cd5\u56fd\u5316\u7684\u3002\u8fd9\u5f88\u597d\uff0c\u56e0\u4e3a\u5f88\u591a\u6cd5\u56fd\u5316\u7684\u8bcd\u8fd8\u5728\u7528\u73b0\u4ee3\u82f1\u8bed\uff0c\u6240\u4ee5\u4f1a\u5f88\u719f\u6089\u3002\n\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u82f1\u683c\u5170\u7684\u6bcf\u4e00\u4e2a\u5c0f\u5730\u65b9\u90fd\u6709\u81ea\u5df1\u7684\u5c0f\u65b9\u8a00\u300215\u4e16\u7eaa\u672b\uff0c\u5370\u5237\u673a\u88ab\u5f15\u5165\uff0c\u90a3\u65f6\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u4e66\u7c4d\u662f\u5728\u4f26\u6566\u6216\u4f26\u6566\u5468\u8fb9\u51fa\u7248\u7684\uff0c\u90a3\u91cc\u4f7f\u7528\u7684\u7c73\u5fb7\u5170\u65b9\u8a00\u6210\u4e3a\u6807\u51c6\uff0c\u5176\u4ed6\u65b9\u8a00\u5f00\u59cb\u6d88\u5931\u3002\n\u9644\u5f5520200606\uff1a\u5173\u4e8e\u7c73\u5fb7\u5170\u65b9\u8a00\u7684\u90e8\u5206\u662f\u5bf9\u7684\u3002\u5173\u4e8e\u4f26\u6566\u7684\u90a3\u90e8\u5206\u662f\u9519\u7684\u3002\u4f26\u6566\u4e0d\u5728\u4e2d\u90e8\u5730\u533a\u3002\n\u021cElde\u021de to Alle Men\u021dOur Detts\uff1ato hyma at\u021de Schule Tarettry\uff0ctry.\u3002\n\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff0c\u5bf9\u5427\uff1f\u4f46\u5b83\u5e76\u4e0d\u50cf\u770b\u8d77\u6765\u90a3\u4e48\u7cdf\u7cd5\u3002\u8ba9\u6211\u4eec\u6446\u8131\u745c\u4f3d\u548c\u8346\u68d8\uff1a\n\u8fd9\u662f\u9605\u8bfb\u4e2d\u53e4\u82f1\u8bed\u7684\u5927\u79d8\u8bc0\uff1a\u542c\u8d77\u6765\u6bd4\u770b\u8d77\u6765\u597d\u542c\u3002\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u4e00\u4e2a\u5355\u8bcd\u662f\u4ec0\u4e48\uff0c\u8bd5\u7740\u5927\u58f0\u6717\u8bfb\u3002\u4f8b\u5982\uff0c\u4ec0\u4e48\u662f\u201c\u6240\u6709\u7537\u4eba\u201d\uff1f\u54e6\uff0c\u5c31\u662f\u201c\u5168\u662f\u7537\u4eba\u201d\uff0c\u90a3\u5f88\u7b80\u5355\u3002\u201c\u4f60\u4eec\u662f\u6234\u7279\u65af\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u201c\u4f60\u7684\u503a\u52a1\u201d\u3002\u90a3\u53ef\u4e0d\u662f\u4ec0\u4e48\u4f2a\u88c5\uff01\u79f0\u5176\u4e3a\u201c\u7ffb\u8bd1\u201d\u672a\u514d\u6709\u4e9b\u7275\u5f3a\u3002\n\u201c\u8036\u5c14\u5fb7\u201d\u548c\u201c\u5c1d\u8bd5\u201d\u6709\u70b9\u68d8\u624b\u3002\u968f\u7740\u8bed\u8a00\u7684\u53d8\u5316\uff0c\u5143\u97f3\u51e0\u4e4e\u603b\u662f\u6bd4\u8f85\u97f3\u53d8\u5316\u5f97\u66f4\u5feb\u3002\u4e2d\u5f0f\u82f1\u8bed\u4e2d\u7684\u5143\u97f3\u53ef\u80fd\u4e0e\u73b0\u4ee3\u7684\u5143\u97f3\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u8f85\u97f3\u5c31\u4e0d\u90a3\u4e48\u4e0d\u540c\u4e86\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u4e0d\u51fa\u4e00\u4e2a\u5355\u8bcd\uff0c\u8bd5\u7740\u5728\u5143\u97f3\u4e0a\u7a0d\u5fae\u6363\u788e\u4e00\u4e0b\u3002\u4f8b\u5982\uff0c\u201cMore\u201d\u901a\u5e38\u62fc\u5199\u4e3a\u201cmoche\u201d\u3002\n\u7a0d\u5fae\u772f\u4e00\u773c\uff0c\u4f60\u4e5f\u8bb8\u5c31\u80fd\u628a\u201c\u5c1d\u8bd5\u201d\u53d8\u6210\u201c\u81f4\u656c\u201d\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u672c\u6765\u9762\u76ee\u3002\u7b2c\u4e00\u4e2a\u201c\u81f4\u656c\u201d\u662f\u540d\u8bcd\uff0c\u7b2c\u4e8c\u4e2a\u662f\u52a8\u8bcd\u3002\u8fd9\u4e2a\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u201c\u5982\u679c\u4f60\u559d\u4e86\uff0c\u5c31\u559d\u5427\uff01\u201d\n\u6211\u4e0d\u5f97\u4e0d\u67e5\u4e00\u4e0b\u201cYelde\u201d\uff0c\u4f46\u67e5\u5b8c\u4e4b\u540e\u6211\u89c9\u5f97\u6709\u70b9\u50bb\uff0c\u56e0\u4e3a\u5b83\u662f\u201c\u5c48\u670d\u201d\u7684\u610f\u601d\u3002\n\u8fd9\u662f\u56e0\u4e3a\u82f1\u8bed\u7684\u57fa\u672c\u8bed\u6cd5\u4ecd\u7136\u4e0e\u5fb7\u8bed\u57fa\u672c\u76f8\u540c\u3002\u82f1\u8bed\u73b0\u5728\u4e0e\u5fb7\u8bed\u4e0d\u540c\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u4e0d\u518d\u628a\u4e3b\u8981\u52a8\u8bcd\u653e\u5728\u53e5\u5b50\u7684\u672b\u5c3e\u3002\u5982\u679c\u4e00\u4e2a\u4e2d\u4e16\u7eaa\u82f1\u8bed\u53e5\u5b50\u7684\u672b\u5c3e\u6302\u7740\u4e00\u4e2a\u52a8\u8bcd\uff0c\u90a3\u4e48\u5b83\u5f88\u53ef\u80fd\u662f\u4e3b\u8981\u52a8\u8bcd\u3002\u53ea\u8981\u628a\u5b83\u89e3\u91ca\u6210\u4f60\u4ece\u5c24\u8fbe\u90a3\u91cc\u542c\u5230\u7684\u5c31\u884c\u4e86\u3002\n\u2026\u3002\u4f46\u5b83\u4eec\u4e2d\u7684\u8bb8\u591a\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u8fc7\u65f6\u7684\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f88\u719f\u6089\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u77e5\u9053\u201c\u8036\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff1a\u5b83\u6307\u7684\u662f\u201c\u4f60\u201d\uff0c\u5c31\u50cf\u201c\u542c\u89c1\u4f60\uff0c\u542c\u89c1\u4f60\uff01\u201d\u6216\u8005\u201c\u54e6\uff0c\u4f60\u4eec\u8fd9\u4e9b\u5c0f\u4fe1\u7684\u4eba\uff01\u201d\n\u7b2c\u4e8c\u4eba\u79f0\u5355\u6570\u52a8\u8bcd\u4ee5\u2018-st\u2019\u7ed3\u5c3e\uff1b\u7b2c\u4e09\u4eba\u79f0\u5355\u6570\u52a8\u8bcd\u4ee5\u2018-th\u2019\u7ed3\u5c3e\u3002\u4f8b\u5982\uff1a\n\u5177\u4f53\u5730\u8bf4\uff0c\u201cdo\u201d\u7684\u5f62\u5f0f\u662f\uff1a\u6211\u505a\uff0c\u4f60\u505a\uff0c\u4ed6\u505a\u3002\n\u4e00\u4e9b\u5728\u4e2d\u4e16\u7eaa\u82f1\u8bed\u4e2d\u5f88\u5e38\u89c1\u7684\u8bcd\u5c31\u8fd9\u6837\u6d88\u5931\u4e86\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u67e5\u5b57\u5178\u3002\u5982\u679c\u4f60\u6709\u8ba2\u9605\uff0c\u201c\u725b\u6d25\u82f1\u8bed\u8bcd\u5178\u201d\u662f\u5f88\u68d2\u7684\u3002\u5bc6\u6b47\u6839\u5927\u5b66\u6709\u4e00\u672c\u4e2d\u4e16\u7eaa\u82f1\u8bed\u8bcd\u5178\uff0c\u4f60\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002\n\u5728\u5fb7\u8bed(\u4ee5\u53ca\u5fb7\u8bed\u8d77\u6e90\u7684\u539f\u59cb\u8bed\u8a00)\u4e2d\uff0c\u52a8\u8bcd\u7531\u5143\u97f3\u7684\u53d8\u5316\u6765\u8868\u793a\u3002\u6709\u65f6\uff0c\u8fd9\u4e00\u70b9\u5728\u73b0\u4ee3\u82f1\u8bed\u4e2d\u6301\u7eed\u5b58\u5728\u3002\u4f8b\u5982\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6709\u201c\u559d\uff0c\u559d\uff0c\u559d\u201d\u548c\u201c\u7761\uff0c\u7761\u201d\u7684\u539f\u56e0\u3002\u8fd9\u5728\u73b0\u4ee3\u5fb7\u8bed\u4e2d\u6bd4\u5728\u73b0\u4ee3\u82f1\u8bed\u4e2d\u66f4\u5e38\u89c1\uff0c\u5728\u4e2d\u4e16\u7eaa\u82f1\u8bed\u4e2d\u4e5f\u6bd4\u73b0\u5728\u66f4\u5e38\u89c1\u3002\n\u8fc7\u53bb\u5f0f\u901a\u5e38\u4ee5\u2018-ed\u2019\u7ed3\u5c3e\uff0c\u5c31\u50cf\u5728\u73b0\u4ee3\u82f1\u8bed\u4e2d\u4e00\u6837\u3002\n\u9996\u5148\u8981\u77e5\u9053\u7684\u662f\uff0c\u201csch-\u201d\u5728\u5fb7\u8bed\u4e2d\u603b\u662f\u53d1\u97f3\u4e3a\u201csh-\u201d\uff0c\u4ece\u6765\u4e0d\u4f1a\u6709\u50cf\u201cSchool\u201d\u6216\u201cSchedule\u201d\u8fd9\u6837\u7684\u96be\u53d1\u97f3\u3002\n\u90a3\u662f\u4ec0\u4e48\u201c\u8212\u83b1\u65af\u201d\u5462\uff1f\u4e5f\u8bb8\u548c\u5b66\u6821\u6709\u5173\uff1f\u7ed3\u679c\u5e76\u975e\u5982\u6b64\u3002\u8fd9\u662f\u201c\u5e94\u8be5\uff0c\u5e94\u8be5\u201d\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u4f46\u5728\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5b83\u6709\u201c\u6b20\u201d\u7684\u65e7\u542b\u4e49\uff0c\u73b0\u5728\u5df2\u7ecf\u5931\u53bb\u4e86\u3002\u5982\u679c\u6211\u5728\u7814\u7a76\u201c\u5e94\u8be5\u201d\u8fd9\u4e2a\u8bcd\u7684\u5386\u53f2\u65f6\u6ca1\u6709\u78b0\u5230\u8fd9\u4e2a\u8bcd\uff0c\u6211\u5c31\u4e0d\u4f1a\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\uff0c\u4e5f\u4e0d\u4f1a\u53bb\u67e5\u5b83\u3002\n\u4f46\u8bf7\u6ce8\u610f\uff0c\u5b83\u786e\u5b9e\u9075\u5faa\u4e86\u5178\u578b\u7684\u4e2d\u4e16\u7eaa\u82f1\u8bed\u6a21\u5f0f\uff1a\u8c10\u97f3\u2018sh-\u2019\u548c\u2018-l-\u2019\u4fdd\u6301\u4e0d\u53d8\uff0c\u800c\u5143\u97f3\u53d1\u751f\u4e86\u53d8\u5316\u3002\u5728\u73b0\u4ee3\u5355\u8bcd\u201c\u5e94\u5f53\u201d\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7248\u672c\u7684\u201cschulen\u201d\uff0c\u8fc7\u53bb\u65f6\u7528\u2018-d\u2019\u8868\u793a\uff0c\u5c31\u50cf\u5f80\u5e38\u4e00\u6837\u3002\n\u201cschuleth\u201d\u548c\u201cye\u201d\u8fde\u7528\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u201cschulest\u201d\u3002\u6211\u4e0d\u77e5\u9053\u90a3\u662f\u600e\u4e48\u56de\u4e8b\u3002\n[\u9644\u5f5520200608\uff1a\u201cye\u201d\u662f\u590d\u6570\uff0c\u201c-st\u201d\u53ea\u7528\u4e8e\u5355\u6570\u52a8\u8bcd\u3002\n\u5854\u57fa\u65af\u00b7\u6d77\u5fb7\uff0c\u4f60\u4eec\u4e0d\u662f\u4e3a\u7537\u4eba\u800c\u6218\uff0c\u4e0d\u662f\u4e3a\u4e0b\u6446\u800c\u6218\uff0c\u57c3\u5229\u65af\u00b7\u8036\u65af\u00b7\u8212\u4f26\u4e0d\u4f1a\u5bf9\u4f60\u4eec\u8bf4\u518d\u89c1\u3002\n\u4f60\u4eec\u8981\u5f53\u5fc3\uff0c\u4e0d\u8981\u5728\u4eba\u9762\u524d\u88c5\u6a21\u4f5c\u6837\uff0c\u514d\u5f97\u88ab\u4eba\u770b\u89c1\uff0c\u4e0d\u7136\uff0c\u4f60\u4eec\u5728\u5929\u4e0a\u7684\u7236\u5c31\u4e0d\u4f1a\u6709\u6028\u8a00\u4e86\u3002\n\u201c\u5c0f\u5fc3\u201d\u662f\u4e00\u79cd\u6709\u70b9\u53e4\u8001\u4f46\u4ecd\u7136\u5f88\u597d\u7684\u82f1\u8bed\uff1b\u5b83\u7684\u610f\u601d\u662f\u201c\u5c0f\u5fc3\u201d\u3002\n\u5927\u58f0\u6717\u8bfb\u201c\u91cc\u7ef4\u65af\u5185\u65af\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u5230\u5b83\u5b9e\u9645\u4e0a\u662f\u201c\u4e49\u201d\u3002(\u8bf7\u8bb0\u4f4f\uff0c\u201cy\u201d\u4e00\u5f00\u59cb\u662f\u201cgh\u201d\u3002)\u3002\n\u6211\u4e0d\u5f97\u4e0d\u67e5\u4e00\u4e0b\u201cmeeed\u201d\uff0c\u8fd9\u4e2a\u8bcd\u4f3c\u4e4e\u4ece1380\u5e74\u5c31\u6d88\u5931\u4e86\u3002\u5b83\u7684\u610f\u601d\u662f\u201c\u5956\u52b1\u201d\uff0c\u800c\u8fd9\u6b63\u662fNIV\u5bf9\u5b83\u7684\u7ffb\u8bd1\uff1a\n\u5f53\u5fc3\u4e0d\u8981\u5728\u522b\u4eba\u9762\u524d\u884c\u4f60\u7684\u4e49\uff0c\u8ba9\u4ed6\u4eec\u770b\u89c1\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u4f60\u5c31\u4e0d\u4f1a\u4ece\u4f60\u7684\u5929\u7236\u90a3\u91cc\u5f97\u5230\u4efb\u4f55\u5956\u8d4f\u3002\n\u4e3b\u8981\u7684\u56f0\u96be\u662f\u5b83\u7684\u8bd7\u610f\u8bed\u8a00\uff0c\u5373\u4f7f\u5728\u73b0\u4ee3\u82f1\u8bed\u4e2d\u4e5f\u53ef\u80fd\u6709\u70b9\u6666\u6da9\u96be\u61c2\u3002\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6765\u4fee\u6b63\u4e00\u4e0b\u660e\u663e\u90e8\u5206\u7684\u62fc\u5199\uff1a\n\u6211\u4eec\u8fd9\u4e9b\u8001\u4eba\uff0c\u6211\u5bb3\u6015\uff0c\u6240\u4ee5\u6211\u4eec\uff1a\u76f4\u5230\u6211\u4eec\u8150\u70c2\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u6210\u719f\u5417\uff1f\u5f53\u4e16\u754c\u90fd\u5728\u547c\u5578\u800c\u8fc7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6ee1\u6000\u5e0c\u671b\u3002\n\u5bc6\u6b47\u6839\u5927\u5b66\u7684\u5b57\u5178\u4f7f\u7528\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u68d8\u624b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u67e5\u627e\u201cmeed\u201d\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b83\u5217\u5728\u201cmede\u201d\u4e0b\u9762\u3002\u5982\u679c\u60a8\u627e\u4e0d\u5230\u60f3\u8981\u4f5c\u4e3a\u6807\u9898\u7684\u5355\u8bcd\uff0c\u8bf7\u5c1d\u8bd5\u8fdb\u884c\u5168\u6587\u641c\u7d22\u3002\n\u65e0\u8bba\u5982\u4f55\uff0cHoppen\u5c31\u5728\u90a3\u91cc\uff0c\u5b83\u53ef\u4ee5\u662f\u201c\u8df3\u201d\u7684\u610f\u601d\uff0c\u4f46\u5728\u8fd9\u4e2a\u8bd7\u610f\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5b83\u610f\u5473\u7740\u8df3\u821e\u3002\n\u6211\u4eec\u8fd9\u4e9b\u8001\u4eba\uff0c\u6211\u5bb3\u6015\uff0c\u6240\u4ee5\u6211\u4eec\uff1a\u76f4\u5230\u6211\u4eec\u8150\u70c2\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u6210\u719f\u5417\uff1f\u6211\u4eec\u603b\u662f\u5728\u4e16\u754c\u5439\u7b1b\u7684\u65f6\u5019\u8df3\u821e\u3002\n\u201cpike\u201d\u5728\u8fd9\u91cc\u662f\u52a8\u8bcd\uff0c\u5b83\u7684\u610f\u601d\u662f(\u5373\u4f7f\u73b0\u5728)\u5439\u7b1b\u5b50\u3002\n\u5a01\u5ec9\u00b7\u5361\u514b\u65af\u987f\u88ab\u8ba4\u4e3a\u662f\u7b2c\u4e00\u4e2a\u5728\u82f1\u56fd\u5370\u5237\u548c\u9500\u552e\u4e66\u7c4d\u7684\u4eba\u3002\u8fd9\u6bb5\u8f76\u4e8b\u662f\u6211\u6700\u559c\u6b22\u7684\u6545\u4e8b\u4e4b\u4e00\u3002\u4ed6\u572814\u4e16\u7eaa90\u5e74\u4ee3\u672b\u5199\u4e0b\u4e86\u8fd9\u9996\u8bd7\uff0c\u5f53\u65f6\u6b63\u503c\u4e2d\u4e16\u7eaa\u82f1\u8bed\u7684\u672b\u671f\uff1a\n\u5728\u6211\u7684\u65e5\u5b50\u91cc\uff0c\u6070\u5de7\u6709\u4e00\u4f4d\u540d\u53eb\u8c22\u83f2\u5c14\u5fb7\u7684\u9a6c\u8f66\u592b\u5728\u5854\u7c73\u65af\u7684\u4e00\u8258\u5e0c\u666e\u6cb3\u4e0a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u628a\u8239\u5f00\u5230\u6cfd\u5170\u5fb7\uff0c\u4e3a\u4e86\u6e29\u5fb7\u7684\u83b1\u514b\uff0c\u4ed6\u4eec\u5728\u4f5b\u6717\u5fb7\u9017\u7559\uff0c\u6e29\u7279\u5230\u5170\u5fb7\u53bb\u7ed9\u4ed6\u4eec\u6253\u6c14\u3002\u4ed6\u4eec\u4e2d\u6709\u4e00\u4e2a\u53eb\u8c22\u83f2\u5c14\u5fb7\uff0c\u4e00\u4e2a\u53eb\u7f8e\u585e\u7684\u4eba\uff0c\u4ed6\u5750\u5728\u4e00\u8258\u5e06\u8239\u4e0a\uff0c\u7528\u65a7\u5934\u780d\u4e0b\u4e86\u51b0\u5757\uff0c\u7279\u522b\u662f\u4ed6\u7528\u65a7\u5934\u780d\u9e21\u86cb\uff1b\u8fd8\u6709\u90a3\u9996\u597d\u5fb7\u3002\u201c\u597d\u5fb7\u201d\u662f\u4ed6\u4eec\u4e2d\u7684\u4e00\u4f4d\uff0c\u540d\u53eb\u8c22\u83f2\u5c14\u5fb7\uff0c\u662f\u4e00\u4f4d\u7f8e\u585e\u4eba\uff0c\u4ed6\u7528\u65a7\u5934\u780d\u9e21\u86cb\uff0c\u8fd8\u780d\u4e0b\u4e86\u201c\u597d\u5fb7\u201d\u3002\u201c\u597d\u5fb7\u201d\u662f\u4ed6\u4eec\u4e2d\u7684\u4e00\u4f4d\uff0c\u540d\u53eb\u8c22\u83f2\u5c14\u5fb7\uff0c\u662f\u4e00\u4f4d\u7f8e\u585e\u4eba\uff0c\u4ed6\u7528\u65a7\u5b50\u780d\u9e21\u86cb\u3002\u6700\u540e\uff0c\u5973\u4eba\u53c8\u8bf4\u4e86\u4e00\u53e5\u8bdd\uff0c\u4ed6\u8bf4\u4ed6\u662f\u201c\u4f0a\u4f26\u201d\uff0c\u7136\u540e\u5584\u826f\u7684\u6000\u592b\u8bf4\uff0c\u5979\u7684\u59bb\u5b50\u662f\u6211\u4eec\u5bb6\u7684\u4eba\u3002", "note_en": "\u021celde \u021de to alle men \u021doure dettes: to hym \u00feat \u021de schule\u00fe trybut, trybut.\n  As often with Middle English, this is easier than it looks at first. In fact this one is  so much easier than it looks that it might become my go-to example. The only strange word is  schule\u00fe itself\u2026\n Yup! If you can read English, you can learn to read Middle English.It looks like a foreign language, but it&#39;s not. Not entirely foreign,anyway. There are tricks you can pick up. The tricks get you maybe90 or 95% of the way there, at least for later texts, say after 1350or so.\n Disclaimer: I have never studied Middle English. This is juststuff I&#39;ve picked up on my own. Any factual claims in this articlemight be 100% wrong. Nevertheless I have pretty good success readingMiddle English, and this is how I do it.\n   English started out as German.  Old English, also called Anglo-Saxon,really is a foreign language, and requires serious study. I don&#39;tthink an anglophone can learn to read it with mere tricks.\n Over the centuries Old English diverged from German. In 1066 theNormans invaded England and the English language got a thick layer ofFrench applied on top. Middle English is that mashup of English andFrench. It&#39;s still German underneath, but a lot of the spelling andvocabulary is Frenchified. This is good, because a lot of thatFrenchification is still in Modern English, so it will be familiar.\n For a long time each little bit of England had its own little dialect.The printing press was introduced in the late 15th century, and atthat point, because most books were published in or around London, theMidlands dialect used there became the standard, and the otherdialects started to disappear.\n [ Addendum 20200606: The part about Midlands dialect is right. The part about London is wrong. London is not in the Midlands.\u00a0]\n With the introduction of printing, the spelling, which had been fluidand do-as-you-please, became frozen. Unfortunately, during the 15thcentury, the Midlands dialect had been undergoing a change inpronunciation now called the Great Vowel Shift and many words froze withspelling and pronunciations that didn&#39;t match. This is why Englishvowel spellings are such a mess. For example, why are \u201cmeat\u201d and\u201cmeet\u201d spelled differently but pronounced the same? Why are \u201cread\u201d(present tense) and \u201cread\u201d (past tense) pronounced differently butspelled the same? In Old English, it made more sense. Modern Englishis a snapshot of the moment in the middle of a move when half yourstuff is sitting in boxes on the sidewalk.\n By the end of the 17th century things had settled down to the spellingmess that is Modern English.\n  Depending on when it was written and by whom, you might see some ofthese obsolete letters:\n \u021c \u2014 This letter is called   yogh. It&#39;s usually a \u2018y\u2019sound, but if the word it&#39;s in doesn&#39;t make sense with a \u2018y\u2019 trypretending that it&#39;s a \u2018g\u2019 or \u2018gh\u2019 instead and see if the meaningbecomes clearer. (It was originally more like a \u201cgh-\u201d sound.German words like  gestern and  garden change to  yesterday and yard when they turn into English. This is also why we have wordslike \u2018night\u2019 that are still spelled with a \u2018gh\u2019 but is nowpronounced with a \u2018y\u2019.)\n  \u00f0 \u2014 This is an   edh. This is usually also a  th, butit might be a  d. Originally  \u00fe and  \u00f0 represented differentsounds (\u201cthin\u201d and \u201cthis\u201d respectively) but in Middle English they&#39;re kindainterchangeable. The uppercase version looks like  \u0110.\n  u, v \u2014 Letters \u2018u\u2019 and \u2018v\u2019 are sometimes interchangeable. Ifthere&#39;s a \u2018u\u2019 in a funny place, try reading it as a \u2018v\u2019 instead andsee if it makes more sense. For example, what&#39;s the exotic-looking&#34;haue\u201d? When you know the trick, you see it&#39;s just the totallyordinary word \u201chave\u201d, wearing a funny hat.\n w \u2014 When w is used as a vowel, Middle English just uses a \u2018u\u2019. Forexample, the word for \u201claw\u201d is often spelled \u201claue\u201d.\n y \u2014 Where Middle English uses \u2018y\u2019, we often use \u2018i\u2019. Also sometimesvice-versa.\n  \u021celde \u021de to alle men \u021doure dettes: to hym \u00feat \u021de schule\u00fe trybut, trybut.\n Daunting, right? But it&#39;s not as bad as it looks. Let&#39;s get rid ofthe yoghs and thorns:\n   Here&#39;s the big secret of reading Middle English:  it sounds better thanit looks. If you&#39;re not sure what a word is, try reading it aloud.For example, what&#39;s \u201calle men\u201d? Oh, it&#39;s just \u201call men\u201d, that waseasy. What&#39;s \u201cyoure dettes\u201d? It turns out it&#39;s \u201cyour debts\u201d. That&#39;snot much of a disguise! It would be a stretch to call this\u201ctranslation\u201d.\n  \u201cYelde\u201d and \u201ctrybut\u201d are a little trickier. As languages change,vowels nearly always change faster than consonants. Vowels in MiddleEnglish can be rather different from their modern counterparts;consonants less so. So if you can&#39;t figure out a word, try mashing onthe vowels a little. For example, \u201cmuch\u201d is usually spelled \u201cmoche\u201d.\n With a little squinting you might be able to turn \u201ctrybut\u201d into\u201ctribute\u201d, which is what it is. The first \u201ctribute\u201d is a noun, thesecond a verb. The construction is analogous to \u201cif you have a drink,drink!\u201d\n I had to look up \u201cyelde\u201d, but after I had I felt a littlesilly, because it&#39;s  \u201cyield\u201d.\n    That&#39;s because the basic grammar of English is still mostly the sameas German. One thing English now does differently from German is thatwe no longer put the main verb at the end of the sentence. If aMiddle English sentence has a verb hanging at the end, it&#39;s probablythe main verb. Just interpret it as if you had heard it from Yoda.\n  \u2026 but many of them are old-fashioned in a way you might be familiarwith. For example, you probably know what \u201cye\u201d means: it&#39;s \u201cyou\u201d,like in \u201chear ye, hear ye!\u201d or\u201c o ye of little faith!\u201d.\n Verbs in second person singular end in \u2018-st\u2019; in third personsingular, \u2018-th\u2019. So for example:\n   In particular, the forms of \u201cdo\u201d are: I do, thou dost, he doth.\n Some words that were common in Middle English are just gone. You&#39;llprobably need to consult a dictionary at some point. The Oxford English Dictionary is great if you have asubscription. The University of Michiganhas a dictionary of Middle English that you can use for free.\n    In German (and the proto-language from which German descended), verbtense is indicated by a change in the vowel. Sometimes this persistsin modern English. For example, it&#39;s why we have \u201cdrink, drank,drunk\u201d and \u201csleep, slept\u201d. In Modern German this is more common thanin Modern English, and in Middle English it&#39;s also more common than itis now.\n Past tense usually gets an \u2018-ed\u2019 on the end, like in Modern English.\n    The first thing to know is that \u201csch-\u201d is always pronounced \u201csh-\u201d asit still is in German, never with a hard sound like \u201cschool\u201d or\u201cschedule\u201d.\n What&#39;s \u201cschuleth\u201d then? Maybe something do to with schools? It turnsout not. This is a form of \u201cshall, should\u201d but in this context it hasits old meaning, now lost, of \u201cowe\u201d. If I hadn&#39;t run across thiswhile researching the history of the word \u201cshould\u201d, I wouldn&#39;t haveknown what it was, and would have had to look it up.\n But notice that it does follow a typical Middle English pattern: theconsonants \u2018sh-\u2019 and \u2018-l-\u2019 stayed the same, while the vowels changed.In the modern word \u201cshould\u201d we have a version of \u201cschulen\u201d with thepast tense indicated by \u2018-d\u2019 just like usual.\n \u201cSchuleth\u201d goes with \u2018ye\u2019 so it ought to be \u2018schulest\u2019. I don&#39;t knowwhat&#39;s up with that.\n [ Addendum 20200608: \u201cye\u201d is plural, and \u2018-st\u2019 only goes on singular verbs.\u00a0]\n   Takith hede, that ye do not youre riytwisnesse bifor men, to be seyn of hem, ellis ye schulen haue no meede at youre fadir that is in heuenes.\n  Take heed, that you do not your riytwisnesse before men, to be seen of them, else you shall have no meede at your father that is in heaven.\n \u201cTake heed\u201d is a bit archaic but still good English; it means \u201cBecareful\u201d.\n Reading \u201criytwisnesse\u201d aloud we can guess that it is actually\u201crighteousness\u201d. (Remember that that \u2018y\u2019 started out as a \u2018gh\u2019.)\n  I had to look up \u201cmeede\u201d, which seems to have disappeared since 1380.It meant \u201creward\u201d, and that&#39;s exactly how the NIV translates it:\n Be careful not to practice your righteousness in front of others to be seen by them. If you do, you will have no reward from your Father in heaven.\n  Therfore whanne thou doist almes, nyle thou trumpe tofore thee, as ypocritis doon in synagogis and stretis, that thei be worschipid of men; sotheli Y seie to you, they han resseyued her meede.\n The same tricks work for most of this. \u201cWhanne\u201d is \u201cwhen\u201d. \u201cAlmes\u201dis now spelled \u201calms\u201d. We still have this word; it&#39;s the handout yougive to beggars. The \u201csch\u201d in \u201cworschipid\u201d is pronounced like \u2018sh\u2019 soit&#39;s \u201cworshipped\u201d.\n \u201cResseyued\u201d looks hard, but if you remember to try reading the \u2018u\u2019 asa \u2018v\u2019 and the \u2018y\u2019 as an \u2018i\u2019, you get \u201cresseived\u201d which is just oneletter off of \u201creceived\u201d. \u201cMeede\u201d we just learned. So this is:\n Therefore when you do alms, nyle thou trumpe before you, as hypocrites do in synagogues and streets, that they be worshipped by men; sotheli I say to you, they have received their reward.\n Now we have the general meaning and some of the other words becomeclearer. What&#39;s \u201ctrumpe\u201d? It&#39;s \u201ctrumpeting\u201d. When you give to theneedy, don&#39;t you trumpet before you, as the hypocrites do. So eventhough I don&#39;t know what \u201cnyle\u201d is exactly, the context makes it clearthat it&#39;s something like \u201cdo not\u201d. Negative words often began with\u2018n\u2019 just as they do now (no, nor, not, never, neither, nothing, etc.).Looking it up, I find that it&#39;s more usually spelled \u201cnill\u201d. Thisword is no longer used; it means the opposite of \u201cwill\u201d. (It stillappears in the phrase \u201cwilly-nilly\u201d, which means \u201cwhether you want toor not\u201d.)\n \u201cSothely\u201d means \u201ctruly\u201d. \u201cSoth\u201d or \u201csooth\u201d is an archaic word fortruth, like in \u201csoothsayer\u201d, a truth-speaker.\n  So when you give to the needy, do not announce it with trumpets, as the hypocrites do in the synagogues and on the streets, to be honored by others. Truly I tell you, they have received their reward in full.\n  Let&#39;s try somrething a little harder, a random sentence from  The Canterbury Tales, writtenaround 1390. Wish me luck!\n  The main difficulty is that it&#39;s poetic language, which might be a bitobscure even in Modern English. But first let&#39;s fix the spelling ofthe obvious parts:\n We old men, I dread, so fare we:   Til we be rotten, can we not be ripe?   We hoppen alwey whil that the world will pipe.\n The University of Michigan dictionary canbe a bit tricky to use. For example, if you look up \u201cmeede\u201d it won&#39;tfind it; it&#39;s listed under \u201cmede\u201d. If you don&#39;t find the word you wantas a headword, try doing full-text search.\n Anyway,  hoppen is in there.It can mean \u201chopping\u201d, but in this poetic context it means dancing.\n We old men, I dread, so fare we:   Til we be rotten, can we not be ripe?   We  dance always while the world will pipe.\n \u201cPipe\u201d is a verb here, it means (even now) to play the pipes.\n  William Caxton is thought to have been thefirst person to print and sell books in England. This anecdote of hisis one of my favorites. He wrote it the late 1490s, at the very tailend of Middle English:\n In my dayes happened that certayn marchauntes were in a shippe in Tamyse, for to haue sayled ouer the see into zelande, and for lacke of wynde thei taryed atte Forlond, and wente to lande for to refreshe them; And one of theym named Sheffelde, a mercer, cam in-to an hows and axed for mete; and specyally he axyed after eggys; and the goode wyf answerde, that she coude speke no frenshe, And the marchaunt was angry, for he also coude speke no frenshe, but wolde haue hadde \u2018egges\u2019 and she understode hym not. And theene at laste another sayd that he wolde haue \u2018eyren\u2019 then the good wyf sayd that she vnderstod hym wel.\n A \u201cmercer\u201d is a merchant, and \u201ctaryed\u201c is now spelled \u201ctarried\u201d, whichis now uncommon and means to stay somewhere temporarily.\n I think the only other part of this that doesn&#39;t succumb to the tricksin this article is the place names:\n   Caxton is bemoaning the difficulties of translating into \u201cEnglish\u201d in1490, at a time when English was still a collection of local dialects.He ends the anecdote by asking:\n Loo, what sholde a man in thyse dayes now wryte, \u2018egges\u2019 or \u2018eyren\u2019?\n Thanks to Caxton and those that followed him, we can answer:definitely \u201cegges\u201d.\n [ Addendum: Paul Bolle informs me that in Dutch, eggs are still\u201ceieren\u201d, not \u201cegges\u201d, and that \u201ceke\u201d (\u201calso\u201d) is spelled \u201cook\u201d andpronounced \u201coke\u201d. He also informed me that I labeled the wrong placeas \u201cZeeland\u201d on my map, which I have corrected. Thank you very much!\u00a0]\n [ Addendum: brian d foy showed me this video of a person trying to buy a cow from a Frisian farmer, by speaking in Old English.Friesland is up the coast from Zeeland. The person is Eddie Izzard\u203d\u203dThanks, brian!\u00a0]", "posttime": "2020-06-09 23:32:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9605\u8bfb,read,\u82f1\u8bed", "title": "\u5b66\u4e60\u9605\u8bfb\u4e2d\u53e4\u82f1\u8bed", "title_en": "Learn to read Middle English", "transed": 1, "url": "https://blog.plover.com/lang/middle-english.html", "via": "", "real_tags": ["\u9605\u8bfb", "read", "\u82f1\u8bed"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005859, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u68d2\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5LBRY\u5e94\u7528\u7a0b\u5e8f\u6765\u4e0b\u8f7d\u548c\u64ad\u653eDRM-Free\u89c6\u9891\u3002\n\u8fd9\u662fLinux Sucks\u7cfb\u5217\u7684\u7b2c\u4e00\u90e8\uff0c\u5728\u6ca1\u6709\u73b0\u573a\u89c2\u4f17\u7684\u60c5\u51b5\u4e0b\u62cd\u6444\u3002\u4e3a\u4e86\u4fdd\u6301\u73b0\u573a\u7684\u611f\u89c9\uff0c\u5f53\u9762\u5c55\u793a(\u81f3\u5c11\u5c3d\u53ef\u80fd\u591a\u5730)\u2026\u3002\u6211\u4e00\u53e3\u6c14\u5f55\u4e86\u6574\u6574\u4e00\u4e2a\u5c0f\u65f6\u3002\u7981\u6b62\u7f16\u8f91\u3002\n\u201c\u6211\u770b\u4e86\u4f60\u4eec\u6240\u6709\u7684Linux\u70c2\u89c6\u9891\uff0c\u8fd9\u53ef\u80fd\u662f\u5230\u76ee\u524d\u4e3a\u6b62\u6700\u6709\u6d1e\u5bdf\u529b\u3001\u6700\u6709\u52c7\u6c14\u3001\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u89c6\u9891\u3002(\u7279\u522b\u662f\u6700\u540e15\u5206\u949f)\u592a\u68d2\u4e86\uff0c\u5148\u751f\u201c-YouTube\u7528\u6237\u3002\n\u4f26\u675c\u514b\u671f\u520a\u7684\u51fa\u7248\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8e\u6797\u8bfa\u5fb7\u7684\u652f\u6301\u3002\u60f3\u8981\u51fa\u8272\u7684Linux\u4e91\u6258\u7ba1\uff0c\u540c\u65f6\u5728\u6b64\u8fc7\u7a0b\u4e2d\u652f\u6301Lunduke Journal\u5417\uff1f\u770b\u770b\u6797\u8bfa\u5fb7\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u67e5\u770b\u201c\u652f\u6301\u4f26\u675c\u514b\u671f\u520a\u201d\u9875\u9762\uff0c\u4e86\u89e3\u76f4\u63a5\u5e2e\u52a9\u652f\u6301\u6211\u4eec\u5236\u4f5c\u7684\u597d\u7684\u3001\u4e66\u5446\u5b50\u7684\u6587\u7ae0\u3001\u64ad\u5ba2\u548c\u89c6\u9891\u7684\u5404\u79cd\u65b9\u5f0f\u3002", "note_en": "Even better, you can install  the LBRY application to download and  play the DRM-Free video\n  This is the first installment of the Linux Sucks series to be filmed without a live audience. To keep the feeling of a live, in person show (at least as much as possible)\u2026 I recorded the full hour+ in one take. No editing.\n       \u201cI watched all of your Linux sucks videos, this one may well be the most insightful, courages and important one so far. (Particularly last 15 min) Bravo sir\u201d -  YouTube User\n     The Lunduke Journal is made possible, in part, through the support of Linode. Want awesome Linux cloud hosting while supporting The Lunduke Journal in the process? Check out  Linode.\n You can also check out the  \u201cSupport The Lunduke Journal\u201d page for a variety of ways you can help directly support the good, nerdy articles, podcasts, and videos we produce.", "posttime": "2020-06-09 23:31:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u89c6\u9891", "title": "Linux\u5dee\u52b2", "title_en": "Linux Sucks", "transed": 1, "url": "https://lunduke.com/posts/2020-05-28/", "via": "", "real_tags": ["linux", "\u89c6\u9891"]}, {"category": "", "categoryclass": "", "imagename": "dada54a382437eb4d9f1f835301bda9a.jpg", "infoid": 1005858, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u667a\u6167\u8de8\u8d8a\u4e16\u7eaa\u548c\u534a\u7403\u3002\u5b83\u4e0d\u4f1a\u79ef\u5c18\uff0c\u5982\u679c\u5904\u7406\u5f97\u5f53\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u8001\u5316\u3002\u82e5\u963f\u91d1\u00b7\u739b\u4e3d\u4e9a\u00b7\u9a6c\u67e5\u591a\u00b7\u5fb7\u00b7\u963f\u897f\u65af(Joaquim Maria Machado De Assis)\u7684\u201cBr\u00e1s Cubas\u6b7b\u540e\u56de\u5fc6\u5f55\u201d\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u8fd9\u672c\u4e66\u88ab\u5927\u591a\u6570\u4eba\u9057\u5fd8\u4e86\u5f88\u4e45\uff0c\u5b83\u662f\u6709\u53f2\u4ee5\u6765\u6700\u98ce\u8da3\u3001\u6700\u597d\u73a9\u7684\u4e66\u4e4b\u4e00\uff0c\u56e0\u6b64\u4e5f\u662f\u6700\u6709\u751f\u547d\u529b\u3001\u6700\u6c38\u6052\u7684\u4e66\u4e4b\u4e00\u3002\u8fd9\u662f\u4e00\u4e2a\u7231\u60c5\u6545\u4e8b--\u771f\u7684\u662f\u5f88\u591a\u7231\u60c5\u6545\u4e8b--\u662f\u4e00\u90e8\u5173\u4e8e\u9636\u7ea7\u3001\u793c\u4eea\u548c\u81ea\u6211\u7684\u559c\u5267\uff0c\u662f\u5bf9\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u65f6\u4ee3\u7684\u53cd\u601d\uff0c\u662f\u5bf9\u6b7b\u4ea1\u7684\u575a\u5b9a\u4e0d\u79fb\u7684\u5ba1\u89c6\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9\u8bb2\u6545\u4e8b\u672c\u8eab\u7684\u4e00\u6b21\u4eb2\u5bc6\u800c\u6b23\u559c\u82e5\u72c2\u7684\u63a2\u7d22\u3002\u8fd9\u662f\u4e00\u90e8\u95ea\u95ea\u53d1\u5149\u7684\u6770\u4f5c\uff0c\u8bfb\u8d77\u6765\u662f\u4e00\u79cd\u65e0\u4ee5\u4f26\u6bd4\u7684\u4e50\u8da3\uff0c\u4f46\u65e0\u7f18\u65e0\u6545\uff0c21\u4e16\u7eaa\u51e0\u4e4e\u6ca1\u6709\u8bf4\u82f1\u8bed\u7684\u4eba\u8bfb\u8fc7\u5b83(\u6211\u6700\u8fd1\u624d\u7b2c\u4e00\u6b21\u8bfb\u5230\u5b83\uff0c\u90a3\u662f\u57282019\u5e74)\u3002\n\u4f46\u5b83\u5e78\u5b58\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u5fc5\u987b\u88ab\u9605\u8bfb\uff0c\u56e0\u4e3a\u5b83\u7684\u6563\u6587\u7684\u97f3\u4e50\uff0c\u6700\u91cd\u8981\u7684\u662f\u5b83\u7684\u5f62\u5f0f\u4e0a\u7684\u5b09\u620f\u3002\u5f17\u6d1b\u62c9\u00b7\u6c64\u59c6\u68ee-\u5fb7\u6c83(Flora Thomson-DeVeaux)\u7684\u65b0\u8bd1\u672c\u662f\u9001\u7ed9\u4e16\u754c\u7684\u4e00\u4efd\u5149\u8363\u793c\u7269\uff0c\u56e0\u4e3a\u5b83\u95ea\u8000\u7740\u5149\u8292\uff0c\u56e0\u4e3a\u5b83\u5531\u7740\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u6709\u8da3\uff0c\u8bbe\u6cd5\u6355\u6349\u5230\u4e86\u9a6c\u67e5\u591a\u65e0\u4e0e\u4f26\u6bd4\u7684\u8bed\u6c14\uff0c\u65e2\u5c16\u523b\u53c8\u601d\u5ff5\uff0c\u81ea\u6211\u6495\u88c2\u548c\u6d6a\u6f2b\u3002\u5b83\u7684\u53d9\u8ff0\u8005Br\u00e1s Cubas\u5df2\u7ecf\u6b7b\u4e86\u3002\u4ed6\u4ece\u575f\u5893\u91cc\u8bb2\u8ff0\u4e86\u4ed6\u7684\u751f\u6d3b\u6545\u4e8b\uff0c\u4e5f\u8bb8\u56e0\u4e3a\u4ed6\u5df2\u7ecf\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\u4e86-\u6b7b\u4ea1\u548c\u4e00\u5207-\u4ed6\u5b8c\u5168\u6309\u7167\u4ed6\u60f3\u8981\u7684\u65b9\u5f0f\u8bb2\u8ff0\u4e86\u8fd9\u4e2a\u6545\u4e8b\uff0c\u4f20\u7edf\u88ab\u8bc5\u5492\u4e86\u3002\u8fd9\u90e8\u5c0f\u8bf4\u4ee5\u7b80\u77ed\u800c\u660e\u4eae\u7684\u7bc7\u7ae0\u5c55\u5f00\uff0c\u65e0\u5c3d\u7684\u81ea\u6211\u6307\u6d89\u548c\u81ea\u6211\u6000\u7591\u8fdb\u4e00\u6b65\u70b9\u4eae\u4e86\u8fd9\u90e8\u5c0f\u8bf4\u3002\u201c\u6211\u5f00\u59cb\u540e\u6094\u6211\u66fe\u7ecf\u5f00\u59cb\u5199\u8fd9\u672c\u4e66\uff0c\u201dBr\u00e1s Cubas\u5728\u540d\u4e3a\u201c\u4e66\u4e2d\u7684\u7f3a\u9677\u201d\u7684\u4e00\u7ae0\u4e2d\u5199\u9053\u3002\u201c\u5e76\u4e0d\u662f\u8bf4\u8fd9\u8ba9\u6211\u611f\u5230\u538c\u5026\uff0c\u201d\u4ed6\u7ee7\u7eed\u8bf4\u3002\u201c\u6211\u6ca1\u522b\u7684\u4e8b\u53ef\u505a\uff0c\u628a\u51e0\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u7bc7\u7ae0\u9001\u5230\u53e6\u4e00\u4e2a\u4e16\u754c\uff0c\u603b\u662f\u6709\u70b9\u8ba9\u4eba\u5206\u5fc3\uff0c\u8fdc\u79bb\u6c38\u6052\u3002\u201d\n\u6545\u4e8b\u7684\u6838\u5fc3\u51e0\u4e4e\u662f\u4f20\u7edf\u7684\uff0c\u4e00\u4e2a19\u4e16\u7eaa\u7684\u8d35\u65cf\u4e09\u89d2\u604b\u3002Br\u00e1s Cubas\u5f98\u5f8a\u5728\u91cc\u7ea6\u70ed\u5185\u5362\u5bcc\u88d5\u9636\u5c42\u7684\u8fb9\u7f18\uff0c\u4f46\u7f3a\u4e4f\u7ed3\u5a5a\u7684\u610f\u613f(\u4ed6\u59d0\u59d0\u7684\u75f4\u8ff7)\u6216\u5728\u653f\u5e9c\u5185\u90e8\u5d1b\u8d77\u7684\u96c4\u5fc3(\u4ed6\u7236\u4eb2\u7684\u613f\u671b)\u3002\u4ed6\u9519\u8fc7\u4e86\u4e00\u4e2a\u4e0e\u7f8e\u4e3d\u7684\u7ef4\u5409\u5229\u4e9a\u7ed3\u5a5a\u7684\u673a\u4f1a\uff0c\u5e76\u88ab\u5979\u5f3a\u5927\u7684\u7236\u4eb2\u4e00\u4e0b\u5b50\u5e26\u5165\u4e86\u516c\u4f17\u751f\u6d3b\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4e00\u4f4d\u540d\u53eb\u6d1b\u535a\u00b7\u5185\u7ef4\u65af(Lobo Neves)\u7684\u53ef\u656c\u7537\u5b50\u540c\u65f6\u63a5\u53d7\u4e86\u7ef4\u5409\u5229\u4e9a\u548c\u5979\u7236\u4eb2\u7684\u6307\u5bfc\uff0c\u76f4\u5230\u90a3\u65f6\uff0c\u5e03\u9c81\u65af\u00b7\u5e93\u5df4\u65af\u624d\u5f00\u59cb\u5bf9\u7ef4\u5409\u5229\u4e9a\u4ea7\u751f\u4e86\u597d\u611f\u3002\u4ed6\u4eec\u5f00\u59cb\u4e86\u4e00\u6bb5\u5a5a\u5916\u60c5\uff0c\u5e76\u8bd5\u56fe\u4e0d\u8ba9\u7ef4\u5409\u5229\u4e9a\u8fc7\u4e8e\u4fe1\u4efb\u7684\u4e08\u592b\u77e5\u9053\u8fd9\u4ef6\u4e8b--\u771f\u7684\u4e0d\u662f\u90a3\u4e48\u52aa\u529b\u3002\u5f88\u5feb\uff0c\u91cc\u7ea6\u70ed\u5185\u5362\u793e\u4f1a\u4e2d\u7684\u6bcf\u4e2a\u4eba\u4f3c\u4e4e\u90fd\u77e5\u9053\u4e86\uff0c\u53d1\u73b0\u7684\u5371\u9669\u53ea\u4f1a\u62c9\u8fd1\u604b\u4eba\u7684\u8ddd\u79bb\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5e03\u9c81\u65af\u00b7\u5e93\u5df4\u65af(Br\u00e1s Cubas)\u5728\u670b\u53cb\u6606\u5361\u65af\u00b7\u535a\u5c14\u5df4(Quincas Borba)\u7684\u5e2e\u52a9\u4e0b\u601d\u8003(\u4ece\u575f\u5893\u4e2d)\u751f\u6d3b\u7684\u610f\u4e49\u3002\u6606\u5361\u65af\u00b7\u535a\u5c14\u5df4\u8bd5\u56fe\u666e\u53ca\u4e00\u79cd\u540d\u4e3a\u4eba\u6587\u4e3b\u4e49\u7684\u54f2\u5b66\uff0c\u9a6c\u67e5\u591a\u5199\u9053\uff0c\u8fd9\u79cd\u54f2\u5b66\u65e8\u5728\u201c\u6bc1\u6389\u6240\u6709\u5176\u4ed6\u7684\u4e1c\u897f\u201d\u3002\u5b83\u7684\u6838\u5fc3\u662f\u76f8\u4fe1\u4efb\u4f55\u4eba\u7c7b\u90fd\u662f\u6b63\u786e\u7684\u3002Br\u00e1s Cubas\u627f\u8ba4\u8fd9\u662f\u4e00\u79cd\u8fc7\u5206\u4e50\u89c2\u7684\u89c2\u70b9\uff0c\u4f46\u5728\u6fc0\u8fdb\u7684\u89c2\u5ff5\u4e2d\u627e\u5230\u4e86\u67d0\u79cd\u5b89\u6170\uff0c\u5373\u4eba\u7c7b\u5e94\u8be5\u88ab\u5141\u8bb8\u505a\u4efb\u4f55\u4eba\u7c7b\u81ea\u7136\u505a\u7684\u4e8b\u60c5\uff0c\u65e0\u8bba\u6211\u4eec\u505a\u4ec0\u4e48\uff0c\u6211\u4eec\u90fd\u5e94\u8be5\u505a-\u5bf9\u521b\u9020\u66f4\u591a\u7684\u4eba\u7c7b\u6000\u7740\u7279\u522b\u7684\u656c\u610f\u3002\u201c\u4f8b\u5982\uff0c\u201d\u4ed6\u5199\u9053\uff0c\u201c\u7231\u662f\u4e00\u79cd\u796d\u53f8\uff0c\u7e41\u6b96\u662f\u4e00\u79cd\u4eea\u5f0f\u3002\u56e0\u4e3a\u751f\u547d\u662f\u5b87\u5b99\u6240\u80fd\u7ed9\u4e88\u7684\u6700\u5927\u5229\u76ca\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u751f\u547d\u7684\u4f20\u9012\u8fdc\u4e0d\u662f\u6b22\u547c\u7684\u573a\u5408\uff0c\u800c\u662f\u7075\u6027\u5f25\u6492\u7684\u6700\u9ad8\u65f6\u523b\u3002\u56e0\u6b64\uff0c\u4eba\u751f\u771f\u7684\u53ea\u6709\u4e00\u4ef6\u4e0d\u5e78\u7684\u4e8b\uff0c\u90a3\u5c31\u662f\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u751f\u3002\u201c\u3002\n\u9a6c\u67e5\u591a\u8f7b\u677e\u5730\u5728\u4e66\u4e2d\u7684\u7231\u60c5\u6545\u4e8b\u548c\u5f62\u800c\u4e0a\u5b66\u63d2\u66f2\u4e4b\u95f4\u5207\u6362\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5c3d\u7ba1\u8fd9\u672c\u4e66\u662f\u5173\u4e8e\u4e25\u8083\u7684\u4e8b\u60c5-\u7231\uff0c\u751f\u547d\u672c\u8eab\uff0c\u6b7b\u4ea1\u7684\u7ec8\u7ed3-\u4f46\u5b83\u4ece\u6765\u6ca1\u6709\u628a\u81ea\u5df1\u5f53\u56de\u4e8b\u3002\u5728\u7b2c\u56db\u7ae0\u201c\u56fa\u5b9a\u7684\u89c2\u5ff5\u201d\u4e2d\uff0c\u9a6c\u67e5\u591a\u5f00\u59cb\u4e86\u4e00\u4e2a\u5b8f\u5927\u7684\u7c7b\u6bd4\uff0c\u5c06\u4eba\u7c7b\u6b21\u8981\u7684\u52aa\u529b\u4e0e\u90a3\u4e9b\u5343\u53e4\u56de\u54cd\u7684\u52aa\u529b\u8fdb\u884c\u6bd4\u8f83\u3002\u201c\u6253\u4e2a\u6bd4\u65b9\uff0c\u5b83\u5c31\u50cf\u4e4c\u5408\u4e4b\u4f17\uff0c\u8eb2\u5728\u5c01\u5efa\u57ce\u5821\u7684\u9634\u5f71\u4e0b\uff1b\u57ce\u5821\u5012\u584c\u4e86\uff0c\u4e4c\u5408\u4e4b\u4f17\u8fd8\u5728\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u51ed\u501f\u81ea\u5df1\u7684\u529b\u91cf\u53d8\u5f97\u5b8f\u4f1f\u8d77\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u540d\u526f\u5176\u5b9e\u7684\u5927\u672c\u8425\u3002\u4e0d\uff0c\u8fd9\u4e2a\u7c7b\u6bd4\u771f\u7684\u4e0d\u884c\u3002\u201c\u3002\u7ae0\u8282\u6807\u9898\u672c\u8eab\u5c31\u662f\u89e3\u9664\u6b66\u88c5\u7684\u3002\u6709\u4e00\u7ae0\u6070\u5982\u5176\u5206\u5730\u88ab\u79f0\u4e3a\u201c\u60b2\u4f24\u4f46\u77ed\u6682\u201d\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u201c\u77ed\u6682\u800c\u5feb\u4e50\u201d\uff0c\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002\u6709\u4e00\u7ae0\u662f\u5173\u4e8e\u9774\u5b50\u7684\uff0c\u53e6\u4e00\u7ae0\u662f\u5173\u4e8e\u4f5c\u8005\u7684\u817f\u7684\uff0c\u8fd8\u6709\u4e00\u7ae0\u53eb\u201c\u4e0d\u8981\u5f53\u771f\u201d\u3002\u7b2cCXXX\u7ae0\u7684\u6807\u9898\u662f\u201c\u5c06\u88ab\u63d2\u5165\u5230\u7b2cCXXIX\u7ae0\u201d\uff0c\u5728\u6700\u540e\uff0c\u4f5c\u8005\u8981\u6c42\u8bfb\u8005\u5c06\u5176\u63d2\u5165\u524d\u4e00\u7ae0\u7684\u7b2c\u4e00\u53e5\u548c\u7b2c\u4e8c\u53e5\u4e4b\u95f4\u3002\u8fd8\u6709\u4e00\u79cd\u4e0e\u6cb3\u9a6c\u6709\u5173\u7684\u957f\u65f6\u95f4\u5e7b\u89c9\u3002\n\u4e0d\u77e5\u4f55\u6545\uff0c\u8fd9\u4e9b\u6076\u4f5c\u5267\u548c\u4e92\u6587\u6027\u7684\u8da3\u5473\u4e1d\u6beb\u6ca1\u6709\u524a\u5f31\u6545\u4e8b\u7684\u529b\u91cf\u3002Br\u00e1s Cubas\u548cVirg\u00edlia\u4e4b\u95f4\u7684\u6d6a\u6f2b\u6545\u4e8b\u4ee4\u4eba\u4fe1\u670d\uff0c\u6292\u60c5\u6027\u6781\u5f3a\u3002\u6211\u4eec\u5bf9\u65e0\u610f\u4e2d\u7684\u6d1b\u535a\u00b7\u5185\u7ef4\u65af\u7684\u611f\u89c9\u662f\u771f\u5b9e\u7684\uff0c\u53d9\u8ff0\u8005\u548c\u7ef4\u5409\u5229\u4e9a\u5bf9\u4ed6\u72af\u4e0b\u7684\u7f6a\u884c\u6c38\u8fdc\u4e0d\u4f1a\u53d7\u5230\u60e9\u7f5a-\u65e0\u8bba\u662f\u751f\u662f\u6b7b\u3002\u8fd9\u662f\u5173\u952e\u3002\u8fd9\u662f\u4e00\u672c\u65e0\u795e\u8bba\u7684\u4e66\uff0c\u91cc\u9762\u6ca1\u6709\u6cd5\u5b98\uff0c\u53ea\u6709\u826f\u77e5\uff0c\u72af\u7f6a\u8005\u72ec\u81ea\u8eba\u5728\u90a3\u91cc\uff0c\u5728\u4e00\u4e2a\n\u672c\u6587\u6458\u81ea\u4f01\u9e45\u7ecf\u5178\u51fa\u7248\u793e(Penguin Classics)6\u6708\u51fa\u7248\u7684\u201cBr\u00e1s Cubas\u6b7b\u540e\u56de\u5fc6\u5f55\u201d(The Pemoir Memoir of Br\u00e1s Cubas)\u4e00\u4e66\u7684\u5f15\u8a00\u3002", "note_en": "Wit leaps centuries and hemispheres. It does not collect dust, and, when done right, it does not age. \u201c The Posthumous Memoirs of Br\u00e1s Cubas,\u201d by Joaquim Maria Machado de Assis, is a case in point. Long forgotten by most, it\u2019s one of the wittiest, most playful, and therefore most alive and ageless books ever written. It is a love story\u2014many love stories, really\u2014and it\u2019s a comedy of class and manners and ego, and it\u2019s a reflection on a nation and a time, and an unflinching look at mortality, and all the while it\u2019s an intimate and ecstatic exploration of storytelling itself. It is a glittering masterwork and an unmitigated joy to read, but, for no good reason at all, almost no English speakers in the twenty-first century have read it (and I first read it only recently, in 2019).\n  But it survives, and must be read, for the music of its prose and, more than anything else, for its formal playfulness. A new translation, by Flora Thomson-DeVeaux, is a glorious gift to the world, because it sparkles, because it sings, because it\u2019s very funny and manages to capture Machado\u2019s inimitable tone, at once mordant and wistful, self-lacerating and romantic. Its narrator, Br\u00e1s Cubas, is dead. He tells the story of his life from the grave, and maybe because he has nothing left to lose\u2014being dead and all\u2014he tells the story precisely as he wants to, convention be damned. The novel unfolds in brief, bright chapters, brightened further with endless self-referentiality and self-doubt. \u201cI am beginning to regret that I ever took to writing this book,\u201d Br\u00e1s Cubas writes in a chapter called \u201cThe Flaw in the Book.\u201d \u201cNot that it tires me,\u201d he continues. \u201cI have nothing else to do, and dispatching a few meager chapters into the other world is invariably a bit of a distraction from eternity.\u201d\n The story, at its core, is almost conventional, a nineteenth-century aristocratic love triangle. Br\u00e1s Cubas hovers at the edges of Rio de Janeiro\u2019s moneyed classes but lacks the will to marry (his sister\u2019s obsession) or the ambition to rise within the government (his father\u2019s wish). He passes on a chance to marry the beautiful Virg\u00edlia and be catapulted into public life by her powerful father. Instead, an honorable man named Lobo Neves takes both Virg\u00edlia\u2019s hand and her father\u2019s mentorship, and it\u2019s only then that Br\u00e1s Cubas begins to feel drawn to Virg\u00edlia. They begin an affair, and try\u2014not so hard, really\u2014to keep it hidden from Virg\u00edlia\u2019s too trusting husband. Soon everyone in Rio\u2019s society seems to know, with the danger of discovery only drawing the lovers closer.\n  Meanwhile, Br\u00e1s Cubas contemplates the meaning of life (from the grave), aided by his friend Quincas Borba, who is trying to popularize a philosophy called Humanitism, designed, Machado writes, \u201cto ruin all the rest.\u201d At its core is a belief in the rightness of anything human. Br\u00e1s Cubas admits that it\u2019s Panglossian but finds a certain comfort in the radical notion that humans should be allowed to do anything humans naturally do, that whatever we do we are meant to do\u2014with special reverence for the making of more humans. \u201cLove, for example,\u201d he writes, \u201cis a priesthood; reproduction, a ritual. Since life is the greatest benefit the universe can bestow\u00a0.\u00a0.\u00a0. it follows that the transmission of life, far from being an occasion for gallanting, is the supreme hour of a spiritual Mass. Hence there is truly only one misfortune in life: never being born.\u201d\n  Machado veers between the book\u2019s love story and its metaphysical interludes with ease, in part because though the book is about earnest things\u2014love, life itself, the finality of death\u2014it never takes itself seriously. In Chapter IV, \u201cThe Fixed Idea,\u201d Machado begins a grand analogy comparing lesser human endeavors to those that echo through the ages. \u201cTo offer a poor analogy, it is like the rabble, sheltered in the shadow of the feudal castle; the castle fell and the rabble remained. Indeed, they became grand in their own right, a veritable stronghold\u00a0.\u00a0.\u00a0. No, the analogy\u2019s really no good.\u201d The chapter titles themselves are disarming. One chapter, aptly called \u201cSad, but Short,\u201d is followed by \u201cShort, but Happy,\u201d which is both. There is a chapter dedicated to boots, another to the author\u2019s legs, while another is called \u201cNot to Be Taken Seriously.\u201d Chapter CXXX is titled \u201cTo Be Inserted Into Chapter CXXIX,\u201d and at the end of it, the author asks that the reader insert it between the first and second sentences of the previous chapter. There\u2019s also a long hallucination involving a hippopotamus.\n Somehow none of the gags and intertextual fun does anything to diminish the power of the story. The romance between Br\u00e1s Cubas and Virg\u00edlia is convincing and wildly lyrical. The feeling we have for the unwitting Lobo Neves is real, and the crime that the narrator and Virg\u00edlia commit on him is never punished\u2014in life or death. And this is key. This is an atheistic book, where there is no judge but one\u2019s conscience, and where the offender lies alone, in a box permeated by worms, recounting his life and failures without any heavenly consequence. It\u2019s funny, too. It is wholly original and unlike anything other than the many books that came after it and seem to have knowingly or not borrowed from it.\n Readers are an amnesiac species, and so, every few decades, we wake up to believe that an author addressing the reader directly, or playing with form, or including references to the author or the book within that book, is new and should be labelled post or meta or whatever unfortunate and confining term will come next. But the fact is that an outsized number of the classics of the world employ one or many of these so-called post/meta devices. It began with Cervantes, who allowed  Don Quixote and Sancho Panza to be aware, in Book II, that they were characters in Book I. \u201c Candide\u201d\u2014which Machado references many times\u2014is endlessly self- aware, and Thackeray, in \u201c Vanity Fair,\u201d makes so many references to the author\u2019s presence and powers and omniscience that a reader loses count. Joyce and Austen and Nabokov and Sterne\u2014also referenced by Machado\u2014and Stein and Pessoa and legions more have experimented with the form of the novel, have inserted and questioned their authorial authority, and their willingness to experiment, and to have some fun with the relationship between writer, reader, and the book itself, have kept the form fresh and surprising, and so have kept it alive.\n But now it is different. Now strangely\u2014so strangely\u2014we live in times of profound traditionalism in literature, and it\u2019s difficult to explain why. I had the enormous pleasure a few years ago to judge a contest to name the year\u2019s best novel, and the committee I was part of had an unexpectedly good time doing the job. There were so many brilliant books. But, of the four hundred or so American novels we were asked to read that year, only a few dozen could be called funny, only a few could be called playful, and I counted exactly two that were in any significant way experimental. If that\u2019s not an indication of a general fear of the new, a hesitation to take chances, and a startling and ill-advised self-seriousness about the novel, I\u2019m not sure what is. This isn\u2019t to say that all novels, or even most, should be, or could be, as playful as this one, but it wouldn\u2019t hurt to have a few more that allow humans\u2014characters, readers, authors even\u2014to laugh. Denying the jokes in life, and the joke of life itself, is too sad.\n This essay was drawn from the introduction to \u201c The Posthumous Memoirs of Br\u00e1s Cubas,\u201d which is out in June from Penguin Classics.", "posttime": "2020-06-09 23:30:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u73b0,wittiest,cubas", "title": "\u91cd\u65b0\u53d1\u73b0\u6709\u53f2\u4ee5\u6765\u6700\u98ce\u8da3\u7684\u4e00\u672c\u4e66", "title_en": "Rediscovering One of the Wittiest Books Ever Written", "transed": 1, "url": "https://www.newyorker.com/books/second-read/rediscovering-one-of-the-wittiest-books-ever-written", "via": "", "real_tags": ["\u53d1\u73b0", "wittiest", "cubas"]}, {"category": "", "categoryclass": "", "imagename": "263ab5201861be9cc4ecf45f1f6b8a58.jpg", "infoid": 1005856, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e2\u5065\u58ee\u53c8\u7cbe\u81f4\uff0c\u6ca1\u6709\u5176\u4ed6\u98ce\u683c\u80fd\u5982\u6b64\u5438\u5f15\u4eba\u5730\u878d\u5165\u5e02\u4e2d\u5fc3\u3002", "note_en": "Both robust and finessed, no other style lends itself so engagingly to the inner city", "posttime": "2020-06-09 23:12:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5efa\u7b51,\u827a\u672f,\u88c5\u9970,architects,\u98ce\u683c", "title": "\u4e3a\u4ec0\u4e48\u6469\u5929\u5927\u697c\u5efa\u7b51\u5e08\u603b\u662f\u56de\u5f52\u88c5\u9970\u827a\u672f", "title_en": "Why skyscraper architects always return to Art Deco", "transed": 1, "url": "https://propertylistings.ft.com/propertynews/new-york-united-states/6271-why-skyscraper-architects-always-return-to-art-deco-.html", "via": "", "real_tags": ["\u5efa\u7b51", "\u827a\u672f", "\u88c5\u9970", "\u98ce\u683c"]}, {"category": "", "categoryclass": "", "imagename": "0b5ea9e2c685fff025cb2072bfa64041.jpg", "infoid": 1005855, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u4eca\uff0c\u4f60\u7684\u95ea\u4eae\u7684\u65b0\u5c0f\u73a9\u610f\u513f\u5f88\u53ef\u80fd\u5728\u7269\u7406\u4e0a\u505c\u6b62\u4e4b\u524d\uff0c\u5c31\u4f1a\u56e0\u4e3a\u8f6f\u4ef6\u66f4\u65b0(\u6216\u7f3a\u5c11\u8f6f\u4ef6\u66f4\u65b0)\u800c\u8fc7\u65f6\u3002\n\u6d88\u8d39\u8005\u8fd0\u52a8\u7ec4\u7ec7\u54ea\u4e2a\u6700\u8fd1\u7684\u4e00\u4efd\u62a5\u544a\uff1f\u8fd9\u8868\u660e\uff0c\u5982\u679c\u667a\u80fd\u51b0\u7bb1\u80cc\u540e\u7684\u54c1\u724c\u505c\u6b62\u63d0\u4f9b\u8f6f\u4ef6\u652f\u6301\u548c\u66f4\u65b0\uff0c\u667a\u80fd\u51b0\u7bb1\u7684\u5bff\u547d\u53ef\u80fd\u53ea\u6709\u51e0\u5e74\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0cSonos\u53d1\u5e03\u4e86\u7528\u4e8e\u5176\u8054\u7f51\u626c\u58f0\u5668\u7684\u65b0\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u4e0d\u80fd\u5728\u81ea\u6709\u54c1\u724c\u7684\u65e7\u8bbe\u5907\u4e0a\u8fd0\u884c\u3002\n\u8fd9\u4fc3\u4f7f\u6211\u5728\u63a8\u7279\u4e0a\u4e0d\u7ecf\u610f\u5730\u63d0\u5230\uff0c\u6211\u6709\u4e00\u53f0\u670912\u5e74\u5386\u53f2\u7684\u7535\u89c6\u3002\n\u4e3a\u4e86\u8ba9\u81ea\u5df1\u611f\u89c9\u597d\u4e00\u70b9\uff0c\u6211\u8fd8\u8ba9\u4eba\u4eec\u5206\u4eab\u4ed6\u4eec\u6700\u8001\u7684\u53ef\u5de5\u4f5c\u7684\u5c0f\u73a9\u610f\u513f\u3002\n\u5728\u8f6f\u4ef6\u66f4\u65b0\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u5b89\u5168\u6f0f\u6d1e\u6210\u4e3a\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u4e4b\u524d\u7684\u65e5\u5b50\u91cc\uff0c\u5b83\u4eec\u4ecd\u7136\u5f88\u5f3a\u5927\u3002\n\u53a8\u623f\u5c0f\u73a9\u610f\u90fd\u662f\u7ecf\u4e45\u8010\u7528\u7684\uff0c\u4e00\u4e9b\u670920\u300130\u300140\u751a\u81f350\u5e74\u5386\u53f2\u7684\u6405\u62cc\u5668\u548c\u6405\u62cc\u673a\u81ea\u8c6a\u5730\u70ab\u8000\u7740\uff0c\u8fd8\u6709\u4e00\u4e2a\u670920\u5e74\u5386\u53f2\u7684\u5e03\u83b1\u7ef4\u5c14\u4e09\u660e\u6cbb\u70e4\u9762\u5305\u673a\u3001\u4e00\u4e2a20\u4e16\u7eaa90\u5e74\u4ee3\u521d\u7684\u7535\u996d\u7172\u548c\u4e00\u4e2a\u670933\u5e74\u5386\u53f2\u7684\u5e03\u52b3\u6069\u69a8\u6c41\u673a\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u739b\u4e3d\u00b7\u5e03\u5170\u65af\u79d1\u59c6\u5199\u9053\uff1a\u6d17\u7897\u673a\u662f1996\u5e74\u7684\uff0c\u51b0\u7bb1\u548c\u6d17\u8863\u673a\u662f1997\u5e74\u7684\uff0c\u4f46\u5e03\u52b3\u6069\u7684\u6405\u62cc\u673a\u662f90\u5e74\u4ee3\u521d\u7684\u3002\u5f53\u7136\uff0c\u6211\u4e0a\u5927\u5b66\u65f680\u591a\u5c81\u7684\u4e09\u660e\u6cbb\u70e4\u9762\u5305\u673a\u4f9d\u7136\u575a\u56fa\u8010\u7528\u3002\n\u8428\u62c9\u81f3\u4eca\u4ecd\u5728\u4f7f\u75281977\u5e74\u4f5c\u4e3a\u7ed3\u5a5a\u793c\u7269\u6536\u5230\u7684\u9633\u5149\u71a8\u6597\uff0c\u90a3\u6bd4\u5a5a\u59fb\u6301\u7eed\u7684\u65f6\u95f4\u8fd8\u957f\u3002\n\u82cf\u8bf4\uff1a\u6211\u7684\u540d\u8d35\u9ad8\u538b\u9505\u662f1975\u5e74\u7684\u5723\u8bde\u793c\u7269\uff0c\u81f3\u4eca\u4ecd\u5728\u4f7f\u7528\u3002\u6211\u6bcd\u4eb2\u7684\u90a3\u4ef61953\u5e74\u5723\u8bde\u8282\u7684\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u516d\u5e74\u524d\u5c31\u8fc7\u4e16\u4e86\uff0c\u73b0\u5728\u4ecd\u7136\u5b8c\u597d\u65e0\u635f\u3002\n\u6570\u91cf\u60ca\u4eba\u7684\u4efb\u5929\u5802\u6e38\u620f\u7537\u5b69(1989\u5e74\u63a8\u51fa)\u548c\u5076\u5c14\u63a8\u51fa\u7684NES(1983\u5e74\u63a8\u51fa\u7684\u4efb\u5929\u5802\u5a31\u4e50\u7cfb\u7edf)\u4e5f\u4ecd\u5728\u6d4b\u8bd5\u4e2d\u3002\n\u5f7c\u5f97\u00b7\u6208\u7279\u54c8\u5fb7(Peter Gothard)\u7684\u4e16\u5609\u8d85\u7ea7\u8f66\u9053(Sega Mega Drive)\u5373\u5c06\u6295\u5165\u4f7f\u7528\uff0c\u76ee\u524d\u4ecd\u5728\u5b8c\u7f8e\u8fd0\u884c\u3002\n\u4ed6\u8bf4\uff0c\u5728\u6211\u8bb0\u4e8b\u4e4b\u524d\uff0c\u8fd9\u6839\u5c0f\u68cd\u5b50\u5c31\u4e00\u76f4\u5728\u652f\u6491\u7740\u6211\u3002\n\u8fd8\u6709\u4e00\u4e9b\u8001\u5f0f\u8ba1\u7b97\u5668\u4ecd\u5728\u4f7f\u7528--\u4e0a\u9762\u8fd9\u53f0\u5c5e\u4e8e\u83ab\u963f\u5854\u5179\u00b7\u963f\u5854\u62c9\u6559\u6388(Prof Moataz Attallah)\u3002\n\u6211\u7236\u4eb21997\u5e74\u4ece\u6cd5\u56fd\u4e70\u7ed9\u6211\u7684\uff0c\u4ed6\u8bf4\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u540d\u5b57Graphique Couleur\u7684\u7531\u6765\u3002\n\u4fdd\u7f57\u00b7\u9a6c\u514b\u65af(Paul Marks)\u81ea1977\u5e74\u5f97\u5230\u5361\u897f\u6b27FX-29\u8ba1\u7b97\u5668\u4ee5\u6765\uff0c\u4e00\u76f4\u5728\u4f7f\u7528\u5b83\u3002\n\u8bb8\u591aiPod\u3001\u7d22\u5c3c\u968f\u8eab\u542c\u548c\u9ad8\u4fdd\u771f\u97f3\u54cd\u4ecd\u5904\u4e8e\u826f\u597d\u7684\u5de5\u4f5c\u72b6\u6001\uff0c\u5076\u5c14\u8fd8\u6709\u8ff7\u4f60\u789f\u673a\u548c\u4e00\u53f020\u4e16\u7eaa60\u5e74\u4ee3\u7684HMV\u5f55\u97f3\u673a\u3002\n\u53ef\u80fd\u8fd8\u80fd\u7528--\u6211\u4ece90\u5e74\u4ee3\u521d\u5c31\u6709\u7684Vestax\u5f55\u97f3\u673a\uff0cKeith Devereux\u8bf4\uff0c\u73b0\u5728\u8fd8\u6ca1\u7528\u8fc7\uff0c\u56e0\u4e3a\u6211\u518d\u4e5f\u4e70\u4e0d\u5230\u5f55\u97f3\u5e26\u4e86\u3002\u5f53\u524d\u662f\u5426\u6b63\u5728\u4f7f\u7528\uff1f\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c21\u4e16\u7eaa\u521d\u90a3\u53f0\u503c\u5f97\u4fe1\u8d56\u7684\u65e7iPod\u3002\n\u9910\u5385\u8bc4\u8bba\u5bb6\u6770\u4f0a\u00b7\u96f7\u7eb3(Jay Rayner)\u95ee\u9053\uff1a1993\u5e74\u7684\u96c5\u9a6c\u54c8\u00b7\u514b\u62c9\u7ef4\u8bfa\u5a03(Yamaha Clavinova)\u6570\u7801\u94a2\u7434\u7b97\u6570\u5417\uff1f\n\u8fd8\u6709\u5404\u79cd\u8c03\u9891\u6536\u97f3\u673a\u3001\u5531\u673a\u3001\u65e9\u671f\u6570\u5b57\u6536\u97f3\u673a\u548c\u626c\u58f0\u5668\u3002\n\u201c\u8fde\u7ebf\u201d\u82f1\u56fd\u6267\u884c\u4e3b\u7f16\u6770\u91cc\u7c73\u00b7\u6000\u7279\u8868\u793a\uff0c\u968f\u7740\u786c\u4ef6\u751f\u547d\u5468\u671f\u53d8\u5f97\u8d8a\u6765\u8d8a\u77ed\uff0c\u6709\u4e9b\u786c\u4ef6\u751a\u81f3\u4ee5\u6708\u800c\u4e0d\u662f\u5e74\u6765\u8861\u91cf\uff0c\u4eba\u4eec\u5f88\u5bb9\u6613\u8ba4\u4e3a\u5927\u591a\u6570\u4eba\u53ea\u60f3\u8981\u6700\u65b0\u7248\u672c\u7684\u4ea7\u54c1\u3002\n\u55ef\uff0c\u8fd9\u4e00\u89c2\u70b9\u5728\u7b14\u8bb0\u672c\u7535\u8111\u548c\u667a\u80fd\u624b\u673a\u9886\u57df\u53ef\u80fd\u6709\u4ef7\u503c\uff0c\u4f46\u6709\u65f6\u65e7\u4ea7\u54c1\u53ea\u662f\u66f4\u597d--\u66f4\u597d\u7684\u7ec4\u4ef6\u3001\u66f4\u597d\u7684\u8bbe\u8ba1\u548c\u66f4\u957f\u7684\u5bff\u547d\u3002\n\u4e00\u6b3e\u65b0\u7684\u84dd\u7259\u626c\u58f0\u5668\u53ef\u80fd\u5b89\u88c5\u4e86\u6700\u65b0\u7684\u8f6f\u4ef6\u548c\u82af\u7247\u7ec4\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u5c31\u66f4\u4f18\u8d8a\u3002\nYouTube\u9891\u9053Old Tech New Spec\u7684\u4e3b\u6301\u4eba\u9a6c\u4e01\u00b7\u66fc\u5fb7(Martin Mander)\u5bf9\u4eca\u5929\u4ecd\u5728\u4f7f\u7528\u7684\u65e7\u8bbe\u5907\u8fdb\u884c\u4e86\u6539\u9020\u3002\n\u4ed6\u5bb6\u7684\u5899\u4e0a\u6302\u7740\u4e00\u53f01975\u5e74\u7684\u65e5\u7acbCRT\u7535\u89c6\uff0c\u4ed6\u5c06\u5176\u6539\u88c5\u6210\u6570\u5b57\u89c6\u9891\u6d41\u3002\n\u4ed6\u8bf4\uff0c\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u65e7\u6280\u672f\u771f\u7684\u5f88\u7b28\u91cd\uff0c\u73b0\u4ee3\u6280\u672f\u771f\u7684\u5f88\u5c0f\uff0c\u6240\u4ee5\u65e7\u8bbe\u5907\u6709\u66f4\u5927\u7684\u7a7a\u95f4\u6765\u4fee\u6539\u5b83\u3002\n\u4f60\u53ef\u4ee5\u5728\u5b83\u91cc\u9762\u88c5\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u8986\u76c6\u5b50\u5706\u5468\u7387\u6216Arduino\uff0c\u8ba9\u5b83\u50cf\u5b83\u5e94\u8be5\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u4f46\u4ee5\u4e00\u79cd\u66f4\u73b0\u4ee3\u7684\u65b9\u5f0f\u3002", "note_en": "These days, your shiny new gadget is likely to be rendered obsolete by software updates (or a lack of them) before it physically grinds to a halt.\n A recent report by the consumer campaign group Which? suggests  the lifespan of a smart fridge could be just a few years if the brand behind it stops providing software support and updates.\n Meanwhile,  Sonos has released new software for its internet-connected speakers that does not work on its own-branded older devices.\n And this prompted me to casually mention on Twitter that I have a 12-year-old TV.\n To make myself feel better, I also asked people to share their oldest working gadgets.\n   Made in the days before software updates, operating systems and security vulnerabilities were part of of the ecosystem, they&#39;re all still going strong.\n   Kitchen gadgets were built to last, with a number of 20-, 30-, 40- and even 50-year-old whisks and mixers proudly shown off, along with a 20-year-old Breville sandwich toaster, a rice cooker from the early 1990s and a 33-year-old Braun juicer.\n     Mary Branscombe, meanwhile, writes: &#34;Dishwasher from 1996, fridge and washing machine from 1997 - but the Braun hand blender is from the early 90s. And of course my mid-80s sandwich toaster from college is still going strong.&#34;\n Sarah is still using a Sunbeam iron she received as a wedding present in 1977, which &#34;lasted longer than the marriage&#34;.\n And Sue says: &#34;My Prestige High Dome pressure cooker was a Christmas present in 1975 - still in use. My mother&#39;s identical one, from Christmas 1953, was passed on six years ago, still good.&#34;\n  A surprising number of Nintendo Game Boys (launched in 1989) and the occasional NES (Nintendo Entertainment System, launched in 1983) are still being put through their paces too.\n    And Peter Gothard&#39;s Sega Mega Drive is &#34;coming up for 30, and still working perfectly&#34;.\n    &#34;This little stick has been &#39;backing me up&#39; since before I can remember,&#34; he says.\n   There are also a number of vintage calculators still in service - the one above belongs to Prof Moataz Attallah.\n &#34;My dad bought it for me in 1997 from France - hence the name, Graphique Couleur,&#34; he says.\n   And Paul Marks has been using his Casio FX-29 calculator since he got it, in 1977.\n   Plenty of iPods, Sony Walkmans and hi-fis are still in good working order, along with the occasional Minidisc player and one 1960s HMV record player.\n &#34;Functioning, probably - the Vestax recorder, which I have had since the early 90s,&#34; Keith Devereux says, &#34;unused now since I can&#39;t really get audio cassettes any more. Currently in use? Almost certainly the trusty old iPod from the early 2000s.&#34;\n    And restaurant critic Jay Rayner asks: &#34;Does a Yamaha Clavinova digital piano from 1993 count?&#34;\n  There are also a variety of working FM radios, turntables, early digital radios and speakers.\n  &#34;As hardware lifecycles get shorter and shorter, with some even measured in months not years, it&#39;s easy to think that most people just want the latest version of a product,&#34; Wired UK executive editor Jeremy White says.\n &#34;Well, that view may have value in the worlds of laptops and smartphones but sometimes older products are just better - better components, better design and a better lifespan.\n  &#34;A new Bluetooth speaker may have the latest software and chipsets - but this won&#39;t mean it&#39;s superior.\n     Martin Mander, host of the YouTube channel Old Tech New Spec, modifies old devices that continue to be of service in today&#39;s world.\n On his wall at home is a Hitachi CRT TV from 1975, which he has refitted to stream digital video.\n &#34;At its heart, old technology was really bulky and modern technology is really tiny,&#34; he says, &#34;so you have more space inside an old device to modify it.\n &#34;You can fit something new inside it, like a Raspberry Pi or an Arduino, to make it work like it is supposed to but in a more modern way.&#34;", "posttime": "2020-06-09 23:11:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "broke,\u8f6f\u4ef6", "title": "\u5982\u679c\u5b83\u6ca1\u6709\u574f\uff1a\u5206\u4eab\u4f60\u6700\u8001\u7684\u8fd8\u5728\u5de5\u4f5c\u7684\u5c0f\u73a9\u610f\u513f", "title_en": "If it ain't broke: Share your oldest working gadgets", "transed": 1, "url": "https://www.bbc.co.uk/news/technology-52965974", "via": "", "real_tags": ["broke", "\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "d20f3562dccf21a6d1fc97ba23016042.png", "infoid": 1005854, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u6709\u7684\u6570\u636e\u5e93\u8bbf\u95ee\u5e93\u8303\u56f4\u4ece\u53d1\u9001\u539f\u59cbSQL\u5b57\u7b26\u4e32\u5230\u66f4\u9ad8\u7ea7\u522b\u7684\u62bd\u8c61(\u5982SQL\u67e5\u8be2\u6784\u5efa\u5668\u548cORM)\u3002\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684\u6bcf\u4e00\u79cd\u90fd\u6709\u81ea\u5df1\u7684\u95ee\u9898\u548c\u9677\u9631\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5728Node.js\u548cTypeScript\u4e2d\u4f7f\u7528\u6570\u636e\u5e93\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7f3a\u4e4f\u6700\u4f73\u5b9e\u8df5\u3002\nPrisma\u662f\u4e00\u4e2a\u5f00\u6e90\u6570\u636e\u5e93\u5de5\u5177\u5305\u3002\u5b83\u53d6\u4ee3\u4e86\u4f20\u7edf\u7684ORM\uff0c\u5e76\u4f7f\u7528\u9488\u5bf9Node.js\u548cTypeScript\u7684\u81ea\u52a8\u751f\u6210\u7684\u3001\u7c7b\u578b\u5b89\u5168\u7684\u67e5\u8be2\u6784\u5efa\u5668\u7b80\u5316\u4e86\u6570\u636e\u5e93\u8bbf\u95ee\u3002\nPrisma\u76ee\u524d\u652f\u6301PostgreSQL\u3001MySQL\u548cSQLite\u6570\u636e\u5e93-\u8fd8\u6709\u66f4\u591a\u8ba1\u5212\u4e2d\u7684\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u60f3\u67e5\u770b\u5bf9\u7279\u5b9a\u6570\u636e\u5e93\u7684\u652f\u6301\uff0c\u8bf7\u521b\u5efa\u65b0\u7684GitHub\u7248\u672c\u6216\u8ba2\u9605\u73b0\u6709\u7248\u672c(\u4f8b\u5982MongoDB\u6216DynamoDB)\u3002\n\u5728\u8fd0\u884c\u4e86Prisma2.0\u7684\u9884\u89c8\u7248\u548c\u6d4b\u8bd5\u7248\u5c06\u8fd1\u4e00\u5e74\u4e4b\u540e\uff0c\u5e76\u4ece\u6211\u4eec\u7684\u793e\u533a\u6536\u96c6\u4e86\u5927\u91cf\u6709\u7528\u7684\u53cd\u9988\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u591f\u63a8\u51faPrisma Client for General Availability\ud83c\udf89\u3002\nPrisma Client\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u7262\u8bb0\u4e24\u4e2a\u4e3b\u8981\u76ee\u6807\uff1a\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u4ed4\u7ec6\u5730\u4e86\u89e3Prisma Client\u5982\u4f55\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u66f4\u5feb\u5730\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u65f6\u7f16\u5199\u66f4\u5177\u5f39\u6027\u548c\u5065\u58ee\u6027\u7684\u4ee3\u7801\u3002\nPrisma\u5ba2\u6237\u7aef\u7684\u6700\u5927\u597d\u5904\u4e4b\u4e00\u662f\u5b83\u63d0\u4f9b\u7684\u62bd\u8c61\u7ea7\u522b\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5728\u5bf9\u8c61(\u800c\u4e0d\u662fSQL)\u4e2d\u8003\u8651\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u51cf\u5c11\u4e86\u5c06\u5173\u7cfb\u6570\u636e\u6620\u5c04\u5230\u9762\u5411\u5bf9\u8c61\u6570\u636e\u7684\u8ba4\u77e5\u548c\u5b9e\u9645\u5f00\u9500\u3002\n\u867d\u7136Prisma\u5ba2\u6237\u7aef\u5c06\u6570\u636e\u4f5c\u4e3a\u5bf9\u8c61\u8fd4\u56de\uff0c\u4f46\u5b83\u4e0d\u662fORM\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d7\u5230\u5bf9\u8c61\u5173\u7cfb\u963b\u6297\u4e0d\u5339\u914d\u7ecf\u5e38\u5bfc\u81f4\u7684\u5e38\u89c1\u95ee\u9898\u7684\u56f0\u6270\u3002\nPrisma\u4e0d\u4f1a\u5c06\u7c7b\u6620\u5c04\u5230\u8868\uff0c\u4e5f\u4e0d\u4f1a\u50cf\u4f20\u7edfORM\u4e2d\u7ecf\u5e38\u770b\u5230\u7684\u90a3\u6837\uff0c\u5b58\u5728\u590d\u6742\u7684\u6a21\u578b\u5b9e\u4f8b\u6216\u9690\u85cf\u7684\u6027\u80fd\u9677\u9631(\u4f8b\u5982\uff0c\u7531\u4e8e\u5ef6\u8fdf\u52a0\u8f7d)\u3002Prisma\u5ba2\u6237\u7aef\u4e3a\u60a8\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u67e5\u8be2API\uff0c\u91cd\u70b9\u653e\u5728\u7ed3\u6784\u7c7b\u578b\u548c\u81ea\u7136\u67e5\u8be2\u4e0a(\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u6700\u63a5\u8fd1\u4f20\u7edfORM\u7684\u6570\u636e\u6620\u5c04\u5668\u6a21\u5f0f)\u3002\n\u4f7f\u7528Prisma Client\uff0c\u60a8\u53ef\u4ee5\u5236\u5b9a\u5982\u4e0b\u67e5\u8be2\u6765\u8bfb\u53d6\u548c\u5199\u5165\u8fd9\u4e9b\u8868\u4e2d\u7684\u6570\u636e\uff1a\n\u5982\u60a8\u6240\u89c1\uff0c\u751f\u6210\u7684postsByAuthor\u5305\u542b\u4e00\u4e2a\u7eafJavaScript\u5bf9\u8c61\u6570\u7ec4(\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528typecript\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5c06\u662f\u5f3a\u7c7b\u578b\u7684)\u3002\u60a8\u8fd8\u53ef\u4ee5\u8f7b\u677e\u5730\u5305\u62ec\u6a21\u578b\u7684\u5173\u7cfb\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u8fd8\u53ef\u4ee5\u68c0\u7d22\u5173\u4e8e\u8fd4\u56de\u5e16\u5b50\u7684&#34\uff1b\u4f5c\u8005&#34\uff1b\u7684\u4fe1\u606f\uff1a\nconst postsByAuthorWithAuthorInfo=\u7b49\u5f85Prisma.post\u3002findMany({where\uff1a{Author\uff1a{id\uff1a42}}\uff0cinclude\uff1a{Author\uff1atrue\uff0c}})\u3002\n\u518d\u6b21\u6ce8\u610f\uff0c\u5728\u4f7f\u7528TypeScript\u65f6\uff0cpostsByAuthorWithAuthorInfo\u4e2d\u7684\u5bf9\u8c61\u662f\u5b8c\u5168\u7c7b\u578b\u5316\u7684\uff0c\u56e0\u6b64\u8bbf\u95eePOST\u4f5c\u8005\u7684\u4e0d\u5b58\u5728\u5c5e\u6027(\u5728\u672c\u4f8b\u4e2d)\u5c06\u5f15\u53d1\u7f16\u8bd1\u5668\u9519\u8bef\u3002\n\u4f7f\u7528\u73b0\u6709\u6570\u636e\u5e93\u5de5\u5177\u8bbf\u95ee\u76f8\u5173\u6570\u636e(\u5373\u901a\u8fc7\u5916\u952e\u8fde\u63a5\u7684\u8868\u4e2d\u7684\u6570\u636e)\u53ef\u80fd\u7279\u522b\u68d8\u624b\u3002\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u8fd9\u4e9b\u5173\u7cfb\u5728\u5173\u7cfb\u6570\u636e\u5e93\u548c\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684\u8868\u793a\u65b9\u5f0f\u6839\u672c\u4e0d\u5339\u914d\uff1a\n\u5173\u7cfb\uff1a\u6570\u636e\u901a\u5e38\u662f\u6807\u51c6\u5316(\u5e73\u9762)\u7684\uff0c\u5e76\u4f7f\u7528\u5916\u952e\u8de8\u5b9e\u4f53\u8fdb\u884c\u94fe\u63a5\u3002\u7136\u540e\u9700\u8981\u8054\u63a5\u8fd9\u4e9b\u5b9e\u4f53\u4ee5\u663e\u793a\u5b9e\u9645\u7684\u5173\u7cfb\u3002\n\u9762\u5411\u5bf9\u8c61\uff1a\u5bf9\u8c61\u53ef\u4ee5\u662f\u6df1\u5ea6\u5d4c\u5957\u7684\u7ed3\u6784\uff0c\u60a8\u53ea\u9700\u4f7f\u7528\u70b9\u7b26\u53f7\u5c31\u53ef\u4ee5\u904d\u5386\u5173\u7cfb\u3002\nconst result=\u7b49\u5f85Prisma.user\u3002findMany({include\uff1a{post\uff1a{select\uff1a{id\uff1atrue\uff0ctitle\uff1atrue})\u3002\n\u518d\u6b21\u6ce8\u610f\uff0c\u5728\u4e0a\u8ff0\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fTypeScript\uff01\n\u4f7f\u7528SQL(\u4f8b\u5982CREATE TABLE USER\u3001ALTER TABLE USER ADD COLUMN EMAIL)\u8bfb\u53d6\u8868\u548c\u5176\u4ed6\u6570\u636e\u5e93\u7ed3\u6784\u7684\u5b9a\u4e49\u53ef\u80fd\u4f1a\u3002Prisma\u5f15\u5165\u4e86\u79f0\u4e3aPrisma\u6a21\u5f0f\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u7684\u58f0\u660e\u6027\u7248\u672c\u3002\nPrisma\u6a21\u5f0f\u662f\u901a\u8fc7\u81ea\u7701\u6570\u636e\u5e93\u751f\u6210\u7684\uff0c\u5b83\u662fPrisma\u5ba2\u6237\u7aef\u67e5\u8be2API\u7684\u57fa\u7840\u3002\u4f8b\u5982\uff0c\u8fd9\u662f\u4e0a\u8ff0\u7528\u6237\u548c\u53d1\u5e03\u5b9a\u4e49\u7684\u7b49\u6548\u7248\u672c\uff1a\nmodel{id Int@default(autoincremental())@id\u7535\u5b50\u90ae\u4ef6\u5b57\u7b26\u4e32@\u552f\u4e00\u540d\u79f0\u5b57\u7b26\u4e32\uff1fPosts Post[]}model{id Int@default(autoincremental())@id\u6807\u9898\u5b57\u7b26\u4e32\u5185\u5bb9\u5b57\u7b26\u4e32\uff1fAuthor User@Relationship(\u5b57\u6bb5\uff1a[Author ID]\uff0c\u5f15\u7528\uff1a[ID])Author ID Int}\u3002\n\u6ce8\u610f\uff1a\u6211\u4eec\u8fd8\u5728\u5f00\u53d1\u4e00\u4e2a\u540d\u4e3aPrisma Migrate\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\u3002\u4f7f\u7528Prisma Migrate\uff0c\u57fa\u4e8e\u81ea\u7701\u7684\u5de5\u4f5c\u6d41\u88ab\u98a0\u5012\uff0c\u60a8\u53ef\u4ee5\u5c06\u58f0\u660e\u6027Prisma\u67b6\u6784\u6620\u5c04\u5230\u6570\u636e\u5e93\uff1bPrisma Migrate\u5c06\u751f\u6210\u6240\u9700\u7684SQL\u8bed\u53e5\uff0c\u5e76\u9488\u5bf9\u6570\u636e\u5e93\u6267\u884c\u8fd9\u4e9b\u8bed\u53e5\u3002\n\u81ea\u52a8\u5b8c\u6210\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5b83\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5728\u5176\u7f16\u8f91\u5668\u4e2d\u63a2\u7d22API\uff0c\u800c\u4e0d\u662f\u67e5\u627e\u53c2\u8003\u6587\u6863\u3002\u56e0\u4e3aPrisma\u5ba2\u6237\u673a\u662f\u4ece\u60a8\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u751f\u6210\u7684\uff0c\u6240\u4ee5\u60a8\u4f1a\u5bf9\u67e5\u8be2API\u611f\u5230\u975e\u5e38\u719f\u6089\u3002\n\u62e5\u6709\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6709\u52a9\u4e8e\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u8fb9\u4f7f\u7528\u8fb9\u5b66\u4e60API\u3002\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u8fd8\u53ef\u4ee5\u589e\u5f3a\u60a8\u7684\u4fe1\u5fc3\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u786e\u4fdd\u5efa\u8bae\u7684API\u64cd\u4f5c\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\nPrisma\u5ba2\u6237\u7aef\u4fdd\u8bc1\u6240\u6709\u6570\u636e\u5e93\u67e5\u8be2\u7684\u5b8c\u5168\u7c7b\u578b\u5b89\u5168\uff0c\u5373\u4f7f\u53ea\u68c0\u7d22\u6a21\u578b\u5c5e\u6027\u7684\u5b50\u96c6\u6216\u4f7f\u7528include\u52a0\u8f7d\u5173\u7cfb\u4e5f\u662f\u5982\u6b64\u3002\n\u518d\u6b21\u8003\u8651\u524d\u9762\u793a\u4f8b\u4e2d\u7684USER\u548cPOST\u8868\uff0cPRISMA\u751f\u6210\u4ee5\u4e0b\u7c7b\u578b\u7684\u6587\u5b57\u811a\u672c\u6765\u8868\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8fd9\u4e9b\u8868\u7684\u6570\u636e\uff1a\n\u7c7b\u578buser={id\uff1anumber email\uff1astring name\uff1astring|null}\u7c7b\u578bPost={id\uff1anumber AuthId\uff1anumber|null title\uff1astring|null content\uff1astring|null}\u3002\nPrisma\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u4efb\u4f55\u7eafCRUD\u67e5\u8be2\u90fd\u5c06\u8fd4\u56de\u76f8\u5e94\u952e\u5165\u7684\u5bf9\u8c61\u7684\u54cd\u5e94\u3002\u4f46\u662f\uff0c\u518d\u6b21\u8003\u8651\u4e0a\u9762\u7684\u67e5\u8be2\uff0c\u5176\u4e2d\u4f7f\u7528include\u6765\u83b7\u53d6\u5173\u7cfb\uff1a\nconst postsByAuthorWithAuthorInfo=\u7b49\u5f85Prisma.post\u3002findMany({where\uff1a{Author\uff1a{id\uff1a42}}\uff0cinclude\uff1a{Author\uff1atrue\uff0c}})\u3002\npostsByAuthorWithAuthorInfo\u4e2d\u7684\u5bf9\u8c61\u4e0e\u751f\u6210\u7684Post\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u56e0\u4e3a\u5b83\u4eec\u643a\u5e26\u9644\u52a0\u7684Author\u5bf9\u8c61\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPrisma\u5ba2\u6237\u7aef\u4ecd\u7136\u63d0\u4f9b\u5b8c\u5168\u7684\u7c7b\u578b\u5b89\u5168\uff0c\u5e76\u4e14\u80fd\u591f\u9759\u6001\u952e\u5165\u7ed3\u679c\uff01\u4ee5\u4e0b\u662f\u8be5\u7c7b\u578b\u7684\u5916\u89c2\uff1a\n\u591a\u4e8f\u4e86\u8fd9\u4e00\u70b9\uff0cTypeScript\u7f16\u8bd1\u5668\u5c06\u6355\u6349\u60a8\u518d\u6b21\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u8fd9\u5c06\u662f\u975e\u6cd5\u7684\uff1a\n\u6570\u636e\u5e93\u5de5\u5177\u901a\u5e38\u5b58\u5728\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e\u5e93\u4e4b\u95f4\u540c\u6b65\u5bf9\u6570\u636e\u6a21\u578b\u6240\u505a\u7684\u66f4\u6539\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5728\u66f4\u6539\u6570\u636e\u5e93\u8868\u4e4b\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u9700\u8981\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u624b\u52a8\u8c03\u6574\u5404\u81ea\u7684\u6a21\u578b\uff0c\u5e76\u626b\u63cf\u4ee3\u7801\u5e93\u4ee5\u67e5\u627e\u8868\u7684\u7528\u6cd5\u4ee5\u66f4\u65b0\u5b83\u3002\n\u8fd9\u4f7f\u5f97\u6570\u636e\u5e93\u6a21\u5f0f\u8fc1\u79fb\u548c\u4ee3\u7801\u91cd\u6784\u53d8\u5f97\u53ef\u6015\uff0c\u56e0\u4e3a\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e24\u4e2a\u5c42\u5728\u66f4\u6539\u540e\u4fdd\u6301\u540c\u6b65\uff01\nPrisma\u5ba2\u6237\u7aef\u5bf9\u6b64\u95ee\u9898\u91c7\u53d6\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002Prisma\u5ba2\u6237\u7aef\u7684\u67e5\u8be2API\u662f\u57fa\u4e8e\u60a8\u7684\u6570\u636e\u5e93\u67b6\u6784\u751f\u6210\u7684\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u540c\u6b65\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u66f4\u6539\u3002\n\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u60a8\u53ea\u9700\u5728\u6570\u636e\u5e93\u6a21\u5f0f\u66f4\u6539\u540e\u91cd\u65b0\u751f\u6210Prisma\u5ba2\u6237\u7aef\uff0c\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230\u60a8\u7684Prisma\u5ba2\u6237\u7aef\u67e5\u8be2API\u3002\u591a\u4e8f\u4e86\u81ea\u52a8\u5b8c\u6210\u548c\u7c7b\u578b\u5b89\u5168\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u66f4\u65b0\u4e3a\u65b0\u67e5\u8be2\u6bd4\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u65b9\u6cd5\u90fd\u8981\u5feb\u5f97\u591a\u3002\nPrisma\u7684\u4e3b\u8981\u7528\u4f8b\u662f\u6784\u5efa\u9700\u8981\u5728\u6570\u636e\u5e93\u4e2d\u6301\u4e45\u5316\u6570\u636e\u7684\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\u3002\n\u81ea\u4ecePrisma2.0\u7684\u9884\u89c8\u9636\u6bb5\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u793e\u4ea4\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u5230\u7535\u5b50\u5546\u52a1\u5546\u5e97\uff0c\u518d\u5230\u751f\u4ea7\u529b\u5de5\u5177\u548c\u5e02\u573a\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u770b\u5230\u4f60\u548c\u666e\u91cc\u65af\u739b\u4e00\u8d77\u5efa\u9020\u4e86\u4ec0\u4e48\uff01\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u662f\u6211\u804c\u4e1a\u751f\u6daf\u4e2d\u5f00\u53d1\u5f97\u6700\u5feb\u7684\u4e00\u6b21\u3002Prisma\u6781\u5927\u5730\u7f29\u77ed\u4e86\u5b9e\u73b0\u65f6\u95f4\uff0c\u540c\u65f6\u589e\u52a0\u4e86\u4eba\u4eec\u5bf9\u6211\u7684\u4ee3\u7801\u7684\u4fe1\u5fc3\u3002\u6211\u8fd8\u80fd\u591f\u5bf9\u8bb8\u591a\u65b0\u7684\u589e\u91cf\u529f\u80fd\u8bf4\u201c\u662f\u201d\uff1b\u73b0\u5728\u9700\u8981\u534a\u5929\u65f6\u95f4\u624d\u80fd\u5b9e\u73b0\u4e00\u4e9b\u8fc7\u53bb\u9700\u8981\u4e24\u4e09\u4e2a\u4eba\u624d\u80fd\u5b8c\u6210\u7684\u4e8b\u60c5\u3002\n\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u516c\u5f00\u7531\u524d\u7aef(\u4f8b\u5982\uff0cWeb\u6216\u79fb\u52a8)\u6216\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684API\u3002Prisma\u5ba2\u6237\u7aef\u517c\u5bb9\u6240\u6709\u73b0\u6709\u7684API\u6280\u672f\uff0c\u5982REST\u3001GraphQL\u3001Thrift\u6216GRPC\u3002\nPRISMA\u5ba2\u6237\u7aef\u53ef\u7528\u4e8e\u4f20\u7edf\u7684\u5355\u7247\u670d\u52a1\u5668\u3001\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u548c\u65e0\u670d\u52a1\u5668\u90e8\u7f72\u3002\u8bf7\u9605\u8bfb\u6709\u5173\u90e8\u7f72\u7684\u6587\u6863\u9875\u9762\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\n\u5c3d\u7ba1Prisma\u8fd8\u5f88\u5e74\u8f7b\uff0c\u4f46\u6211\u4eec\u5bf9\u65b0\u5174\u7684\u751f\u6001\u7cfb\u7edf\u548c\u6211\u4eec\u770b\u5230\u7684\u56f4\u7ed5\u5b83\u751f\u957f\u7684\u5404\u79cd\u5de5\u5177\u611f\u5230\u975e\u5e38\u81ea\u8c6a\u548c\u5174\u594b\u3002\njs\u751f\u6001\u7cfb\u7edf\u4ee5\u8bb8\u591a\u4e0d\u540c\u7684\u6846\u67b6\u800c\u95fb\u540d\uff0c\u8fd9\u4e9b\u6846\u67b6\u8bd5\u56fe\u7b80\u5316\u5de5\u4f5c\u6d41\u5e76\u89c4\u5b9a\u67d0\u4e9b\u7ea6\u5b9a\u3002\u8bb8\u591a\u6846\u67b6\u4f5c\u8005\u51b3\u5b9a\u4f7f\u7528Prisma\u4f5c\u4e3a\u4ed6\u4eec\u9009\u62e9\u7684\u6570\u636e\u5c42\uff0c\u6211\u4eec\u5bf9\u6b64\u611f\u5230\u975e\u5e38\u8c26\u5351\u3002\n\u7531GitHub\u8054\u5408\u521b\u59cb\u4ebaTom Preston-Werner\u521b\u5efa\u7684\u65b0Redwood JS\u6846\u67b6\u8bd5\u56fe\u6210\u4e3aNode.js\u7684Ruby on rails\u7248\u3002Redwood JS\u57fa\u4e8eReact\u548cGraphQL\uff0c\u5e76\u9644\u5e26\u4e86\u7528\u4e8e\u65e0\u670d\u52a1\u5668\u529f\u80fd\u7684\u5185\u7f6e\u90e8\u7f72\u6a21\u578b\u3002\n\u53e6\u4e00\u4e2a\u5728\u793e\u533a\u4e2d\u8d8a\u6765\u8d8a\u53d7\u671f\u5f85\u548c\u5174\u594b\u7684\u6846\u67b6\u662fBlitz.js\u3002\u95ea\u7535\u6218\u6784\u5efa\u5728Next.js\u4e4b\u4e0a\uff0c\u4e0eRedwood\u76f8\u6bd4\uff0c\u5b83\u91c7\u53d6\u4e86\u4e00\u79cd\u4e0eRedwood\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u5b83\u7684\u76ee\u6807\u662f\u5b8c\u5168\u6d88\u9664API\u670d\u52a1\u5668\uff0c\u6062\u590d\u670d\u52a1\u5668\u6e32\u67d3\u6846\u67b6\u7684\u7b80\u5355\u6027\u3002\n\u5728Prisma\uff0c\u6211\u4eec\u662fGraphQL\u7684\u8d85\u7ea7\u7c89\u4e1d\uff0c\u5e76\u76f8\u4fe1\u5b83\u7684\u5149\u660e\u672a\u6765\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6210\u7acb\u4e86Prisma\u5b9e\u9a8c\u5ba4\u56e2\u961f\uff0c\u4ed6\u4eec\u81f4\u529b\u4e8e\u5728GraphQL\u751f\u6001\u7cfb\u7edf\u4e2d\u5f00\u53d1\u5f00\u6e90\u5de5\u5177\u3002\n\u5b83\u76ee\u524d\u4e13\u6ce8\u4e8e\u6784\u5efaNexus\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5f00\u53d1GraphQL\u670d\u52a1\u5668\u7684\u4ee4\u4eba\u6109\u5feb\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002\u4e0eRedwood\u76f8\u53cd\uff0cNexus\u662f\u4e00\u4e2a\u4ec5\u9650\u540e\u7aef\u7684GraphQL\u6846\u67b6\uff0c\u5bf9\u4e8e\u5982\u4f55\u4ece\u524d\u7aef\u8bbf\u95eeGraphQL API\u6ca1\u6709\u4efb\u4f55\u610f\u89c1\u3002\n\u4f7f\u7528Nexus\u7684Prisma\u63d2\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5728GraphQL API\u4e2d\u516c\u5f00Prisma\u6a21\u578b\uff0c\u800c\u65e0\u9700\u5b9e\u73b0\u5c06GraphQL\u89e3\u6790\u5668\u8fde\u63a5\u5230\u6570\u636e\u5e93\u65f6\u6240\u9700\u7684\u5178\u578bCRUD\u6837\u677f\u3002\nmodel{id Int@default(autoincremental())@id\u7535\u5b50\u90ae\u4ef6\u5b57\u7b26\u4e32@\u552f\u4e00\u540d\u79f0\u5b57\u7b26\u4e32\uff1fPosts Post[]}model{id Int@default(autoincremental())@id\u6807\u9898\u5b57\u7b26\u4e32\u5185\u5bb9\u5b57\u7b26\u4e32\uff1fAuthor User@Relationship(\u5b57\u6bb5\uff1a[Author ID]\uff0c\u5f15\u7528\uff1a[ID])Author ID Int}\n\u591a\u4e8f\u4e86\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u51e0\u4e4e\u4e0d\u9700\u8981\u4efb\u4f55\u6837\u677f\u5c31\u53ef\u4ee5\u4e3aPrisma\u6a21\u578b\u516c\u5f00\u5b8c\u6574\u7684CRUD\u64cd\u4f5c\uff0c\u5305\u62ec\u8fc7\u6ee4\u5668\u3001\u5206\u9875\u548c\u8ba2\u8d2d\u529f\u80fd\u3002\n\u5feb\u901f\u5165\u95e8(5\u5206\u949f)\u4e86\u89e3\u5982\u4f55\u4f7f\u7528Prisma\u5ba2\u6237\u7aef\u9488\u5bf9\u6f14\u793aSQLite\u6570\u636e\u5e93\u53d1\u9001\u6570\u636e\u5e93\u67e5\u8be2-\u65e0\u9700\u8bbe\u7f6e\uff01\n3\u6708\u4efd\u6d4b\u8bd5\u7248\u7684\u79ef\u6781\u53cd\u54cd\u8ba9\u6211\u4eec\u4e0d\u77e5\u6240\u63aa\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u4e0e\u5927\u5bb6\u5206\u4eab\u4eca\u5929\u7684\u6b63\u5f0f\u53d1\u5e03\uff01\u975e\u5e38\u611f\u8c22\u6bcf\u4e00\u4e2a\u966a\u4f34\u6211\u4eec\u8d70\u8fc7\u8fd9\u6bb5\u65c5\u7a0b\u7684\u4eba\uff01\n\u5982\u679c\u4f60\u662f\u65b0\u6765\u666e\u91cc\u65af\u9a6c\u7684\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u770b\u5230\u4f60\u5750\u5728\u6211\u4eec\u7684\u201c\u677e\u5f1b\u201d\u8f66\u91cc\uff01\u5982\u679c\u60a8\u5df2\u7ecf\u5728\u4f7f\u7528Prisma\uff0c\u8bf7\u5728#Showcase\u9891\u9053\u4e2d\u53d1\u5e03\u60a8\u6784\u5efa\u7684\u5185\u5bb9\uff0c\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u3002\n\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u5185\u5bb9\u521b\u4f5c\u8005\u793e\u533a\u611f\u5230\u81ea\u8c6a\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u8bb8\u591a\u5173\u4e8ePrisma\u7684\u7cbe\u5f69\u6587\u7ae0\u548c\u89c6\u9891\uff01\u6709\u5173\u6700\u4f73Prisma\u8d44\u6e90\u7684\u6982\u8ff0\uff0c\u8bf7\u67e5\u770bAWOWE-Prisma repo\u3002\u522b\u5fd8\u4e86\u521b\u5efa\u4e00\u4e2a\u516c\u5173\uff0c\u91cc\u9762\u6709\u4efb\u4f55\u9057\u6f0f\u7684\u4e1c\u897f\uff01\n\u7ee7\u53bb\u5e74\u9996\u6620\u6210\u529f\u540e\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u57286\u670825\u65e5(\u5de5\u4f5c\u574a)\u548c26\u65e5(\u8bb2\u5ea7)\u4e3e\u529e\u53e6\u4e00\u7248\u7684\u68f1\u955c\u65e5\u3002\n\u4eca\u5e74\uff0c\u6211\u4eec\u5c06\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u5e76\u9080\u8bf7\u6bcf\u4e2a\u4eba\u4e0e\u6211\u4eec\u4e00\u8d77\u56f4\u7ed5\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u3001\u6570\u636e\u5e93\u5de5\u4f5c\u6d41\u7684\u6700\u4f73\u5b9e\u8df5\u4ee5\u53caPrisma\u7684\u4e00\u5207\u5185\u5bb9\u8fdb\u884c\u7cbe\u5f69\u7684\u6f14\u8bb2\uff01", "note_en": "The existing  landscape of database access libraries ranges from sending raw SQL strings to higher-level abstractions like SQL query builders and ORMs. Each of these approaches come with their own  problems and pitfalls. Overall, there&#39;s a lack of best practices for application developers who work with databases in Node.js and TypeScript.\n    Prisma is an open source database toolkit. It replaces traditional ORMs and makes database access easy with an auto-generated and type-safe query builder for Node.js and TypeScript.\n Prisma currently supports  PostgreSQL,  MySQL and  SQLite databases \u2013\u00a0with more planned. Please create  new GitHub issues or subscribe to existing ones (e.g. for  MongoDB or  DynamoDB) if you&#39;d like to see support for specific databases.\n After running the Preview and Beta versions of Prisma 2.0 for almost a year and gathering lots of helpful feedback from our community, we are excited to launch Prisma Client for General Availability \ud83c\udf89\n  Prisma Client provides an entirely new way for developers to access a database with two main goals in mind:\n   In this section, we&#39;ll take a closer look at how Prisma Client enables developers to build applications faster while writing more resilient and robust code.\n    One of the biggest benefits of Prisma Client is the level of abstraction it provides. It allows developers to think of their data in  objects (instead of SQL), reducing the cognitive and practical overhead of mapping  relational to  object-oriented data.\n Although Prisma Client returns data as objects,  it&#39;s not an ORM and therefore doesn&#39;t suffer from  common problems often caused by the object-relational impedance mismatch.\n Prisma doesn&#39;t map classes to tables and there are no complex model instances or hidden performance pitfalls (e.g. due to lazy loading) as often seen in traditional ORMs. Prisma Client provides a query API for  your database schema with a focus on  structural typing and natural querying (in that sense, it gets closest to the  data mapper pattern of traditional ORMs).\n   With Prisma Client, you can formulate queries like the following to read and write data in these tables:\n  As you can see, the resulting  postsByAuthor contains an array of plain JavaScript objects (if you&#39;re using TypeScript, these objects will be strongly typed). You can also easily include the relations of a model, in this case, you could also retrieve the information about the &#34;author&#34; of the return posts:\n const postsByAuthorWithAuthorInfo  =  await prisma .post . findMany ( { where :  { author :  { id :  42  }  } , include :  { author :  true ,  } } )\n Note again that the objects in  postsByAuthorWithAuthorInfo are fully typed when using TypeScript, so accessing a non-existing property on the  author of a post, in this case, would throw a compiler error.\n  Accessing related data (meaning, data from tables that are connected via  foreign keys) can be especially tricky with existing database tools. This is mostly due to the fundamental mismatch of how these relations are represented in relational databases and object-oriented languages:\n Relational: Data is typically   normalized (flat) and uses  foreign keys to link across entities. The entities then need to be JOINed to manifest the actual relationships.\n Object-oriented: Objects can be  deeply nested structures where you can traverse relationships simply by using  dot notation.\n  const result  =  await prisma .user . findMany ( { include :  { posts :  { select :  { id :  true , title :  true  }  }  } } )\n Note again that in all of the above cases, the  result will be fully typed if you&#39;re using TypeScript!\n  Reading definitions of tables and other database structures using SQL (e.g.  CREATE TABLE User,  ALTER TABLE User ADD COLUMN email) can feel noisy. Prisma introduces a declarative version of your database schema known as the  Prisma schema.\n The Prisma schema is generated by introspecting your database and serves as the foundation for the query API of Prisma Client. As an example, this is the equivalent version of the  above  User and  Post definitions:\n model    { id  Int  @default ( autoincrement ( ) )  @id email  String  @unique name  String ? posts  Post [ ] } model    { id  Int  @default ( autoincrement ( ) )  @id title  String content  String ? author  User  @relation ( fields:  [author Id ] ,  references:  [id ] ) author Id  Int }\n Note: We are also working on a tool for  database migrations called  Prisma Migrate. With Prisma Migrate, the  introspection-based workflow is &#34;reversed&#34; and you can map your declarative Prisma schema to the database; Prisma Migrate will generate the required SQL statements and execute them against the database.\n  Auto-completion is an immensely powerful feature that enables developers to explore an API in their editors instead of looking up reference docs. Because Prisma Client is generated from  your database schema, the query API will feel very familiar to you.\n Having auto-completion available largely contributes to greater productivity because you can &#34;learn the API as you use it&#34;. Auto-completion also increases confidence because you can be sure that the suggested API operations will work.\n   Prisma Client guarantees full type-safety for  all database queries, even when only a subset of a model&#39;s properties are retrieved or relations are loaded using  include.\n Consider again the  User and  Post tables from the example before, Prisma generates the following TypeScript types to represent the data from these tables in your application:\n type User  =  { id :  number email :  string name :  string  |  null } type Post  =  { id :  number authorId :  number  |  null title :  string  |  null content :  string  |  null }\n Any plain  CRUD query sent by Prisma Client will return a response of objects that are typed accordingly. However, consider again the query from above where  include was used to fetch a relation:\n const postsByAuthorWithAuthorInfo  =  await prisma .post . findMany ( { where :  { author :  { id :  42  }  } , include :  { author :  true ,  } } )\n The objects inside  postsByAuthorWithAuthorInfo don&#39;t match the generated  Post type because they carry the additional  author object. In that case, Prisma Client still provides full type-safety and is able to statically type the result! Here&#39;s what the type looks like:\n  Thanks to this, the TypeScript compiler will catch cases where you&#39;re accessing properties that don&#39;t exist. For example, this would be illegal:\n   Database tools often have the problem of needing to  synchronize changes that are made to data models between  application code and the  database. For example, after having changed a database table, developers often need to manually adjust the respective model in their application code and scan the codebase for usages of the table to update it.\n This makes database schema migrations and code refactorings scary because there&#39;s no guarantee the two layers remain in sync after the change!\n Prisma Client takes a different approach to this problem. Instead of manually synchronizing changes between application code and database, Prisma Client&#39;s query API is  generated based on your database schema.\n With that approach, you can simply re-generate Prisma Client after a database schema change and the changes will automatically be synchronized to your Prisma Client query API. Thanks to auto-completion and type-safety, updating your application code to the new queries will be a lot faster than with any other approach.\n   The main use case for Prisma is building server-side applications that need to persist data in a database.\n Since the Preview phase of Prisma 2.0, we have seen developers build a wide range of applications, from social networking apps to e-commerce shops, to productivity tools and marketplaces. We are excited to see what you&#39;re building with Prisma!\n This is the fastest I\u2019ve developed in my career, by far.Prisma has dramatically reduced implementation time, while increasing confidence in my code.I\u2019ve also been able to say yes to a lot of new incremental features;it now takes half a day to implement something that used to take two or three.\n  Server-side applications typically expose an  API that&#39;s consumed by frontend (e.g. web or mobile) or other apps. Prisma Client is compatible with all existing API technologies, such as REST, GraphQL, Thrift, or gRPC.\n   Prisma Client can be used in traditional monolithic servers, microservice architectures, and serverless deployments. Read the docs page about  deployment to learn more.\n   Despite Prisma&#39;s young age, we are very proud and excited about the emerging ecosystem and a variety of tools we see growing around it.\n  The Node.js ecosystem is known for lots of different frameworks that try to streamline workflows and prescribe certain conventions. We are extremely humbled that many framework authors decide to use Prisma as their data layer of choice.\n The new  RedwoodJS framework by GitHub co-founder  Tom Preston-Werner seeks to become the &#34;Ruby on Rails&#34; equivalent for Node.js. RedwoodJS is based on React and GraphQL and comes with a baked-in deployment model for serverless functions.\n    Another framework with increasing anticipation and excitement in the community is  Blitz.js. Blitz is build on top of Next.js and takes a fundamentally different approach compared to Redwood. Its goal is to completely eliminate the API server and  &#34;bring back the simplicity of server rendered frameworks&#34;.\n  At Prisma, we&#39;re huge fans of GraphQL and believe in its bright future. That&#39;s why we founded the  Prisma Labs team which dedicates its time to work on open source tools in the GraphQL ecosystem.\n It is currently focused on building  Nexus, a delightful application framework for developing GraphQL servers. As opposed to Redwood, Nexus is a  backend-only GraphQL framework and has no opinions on how you access the GraphQL API from the frontend.\n Using the Prisma plugin for Nexus, you can expose Prisma models in your GraphQL API without the overhead of implementing the typical CRUD boilerplate that&#39;s needed when connecting GraphQL resolvers to a database.\n model    { id  Int  @default ( autoincrement ( ) )  @id email  String  @unique name  String ? posts  Post [ ] } model    { id  Int  @default ( autoincrement ( ) )  @id title  String content  String ? author  User  @relation ( fields:  [author Id ] ,  references:  [id ] ) author Id  Int }\n Thanks to that plugin, there&#39;s almost no boilerplate needed to expose full CRUD operations, including filters, pagination, and ordering capabilities, for Prisma models.\n     Quickstart (5 min) Explore how to send database queries with Prisma Client against a demo  SQLite database \u2013 no setup required!\n   We&#39;ve been overwhelmed by the positive response to the Beta release in March and are excited to share today&#39;s General Availability with everyone! A huge thank you to everyone who has accompanied us on this journey!\n  If you&#39;re new to Prisma, we&#39;d love to see you around in our  Slack! In case you&#39;re already using Prisma, let everyone know by posting what you build in the    #showcase channel.\n We&#39;re proud of our community of content creators who created lots of awesome articles and videos about Prisma! For an overview of the best Prisma resources, check out the    awesome-prisma repo. And don&#39;t forget to create a PR with anything that&#39;s missing!\n   After the successful premiere last year, we are excited to host another edition of  Prisma Day on June 25th (workshops) and 26th (talks).\n This year, we are going remote and are inviting everyone to join us for amazing talks around modern application development, best practices for database workflows and everything Prisma!", "posttime": "2020-06-09 22:51:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u5145\u6ee1\u4fe1\u5fc3,productivity,prisma", "title": "Prisma 2.0\uff1a\u8ba9\u60a8\u7684\u6570\u636e\u5e93\u5145\u6ee1\u4fe1\u5fc3\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387", "title_en": "Prisma 2.0: Confidence and productivity for your database", "transed": 1, "url": "https://www.prisma.io/blog/n0v98rzc8br1/", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u5145\u6ee1\u4fe1\u5fc3", "prisma"]}, {"category": "", "categoryclass": "", "imagename": "6b07d3b79c9227a2573a10db1095b64d.png", "infoid": 1005853, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u62a5\u544a\u4e4b\u540e\u5c06\u6709\u66f4\u591a\u5373\u5c06\u63d0\u4ea4\u7684\u62a5\u544a\uff0c\u5bf9\u67d0\u4e9b\u76ee\u6807\u548c\u6280\u672f\u6307\u6807\u8fdb\u884c\u66f4\u5168\u9762\u7684\u6982\u8ff0\u3002\n\u9ed1\u6697\u76c6\u5730\u662f\u4e00\u4e2a\u96c7\u4f63\u9ed1\u5ba2\u7684\u7ec4\u7ec7\uff0c\u76ee\u6807\u662f\u516d\u5927\u6d32\u6570\u4ee5\u5343\u8ba1\u7684\u4e2a\u4eba\u548c\u6570\u767e\u5bb6\u673a\u6784\u3002\u76ee\u6807\u5305\u62ec\u5021\u5bfc\u56e2\u4f53\u548c\u8bb0\u8005\u3001\u6c11\u9009\u548c\u9ad8\u7ea7\u653f\u5e9c\u5b98\u5458\u3001\u5bf9\u51b2\u57fa\u91d1\u548c\u591a\u4e2a\u884c\u4e1a\u3002\n\u9ed1\u6697\u76c6\u5730\u5e7f\u6cdb\u9488\u5bf9\u7f8e\u56fd\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u5305\u62ec\u5f00\u5c55\u540d\u4e3a#exxonnow\u7684\u6d3b\u52a8\u7684\u7ec4\u7ec7\uff0c\u8be5\u6d3b\u52a8\u65ad\u8a00\u57c3\u514b\u68ee\u7f8e\u5b5a\u9690\u7792\u6709\u5173\u6c14\u5019\u53d8\u5316\u7684\u4fe1\u606f\u957f\u8fbe\u6570\u5341\u5e74\u3002\n\u6211\u4eec\u8fd8\u786e\u8ba4\u9ed1\u6697\u76c6\u5730\u662f\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(Electronic Frontier Foundation)\u4e4b\u524d\u62a5\u544a\u7684\u5bf9\u81f4\u529b\u4e8e\u7f51\u7edc\u4e2d\u7acb\u5021\u5bfc\u7684\u7ec4\u7ec7\u8fdb\u884c\u7f51\u7edc\u9493\u9c7c\u7684\u5e55\u540e\u9ed1\u624b\u3002\n\u6211\u4eec\u6ee1\u6000\u4fe1\u5fc3\u5730\u5c06\u201c\u9ed1\u6697\u76c6\u5730\u201d\u4e0e\u4e00\u5bb6\u5370\u5ea6\u516c\u53f8Belltrox InfoTech Services\u548c\u76f8\u5173\u5b9e\u4f53\u8054\u7cfb\u8d77\u6765\u3002\n\u516c\u6c11\u5b9e\u9a8c\u5ba4\u5df2\u7ecf\u901a\u77e5\u4e86\u6570\u767e\u540d\u76ee\u6807\u4e2a\u4eba\u548c\u673a\u6784\uff0c\u5e76\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u4e86\u8ddf\u8e2a\u548c\u8bc6\u522b\u6d3b\u52a8\u7684\u534f\u52a9\u3002\u5e94\u51e0\u4e2a\u76ee\u6807\u7684\u8981\u6c42\uff0c\u516c\u6c11\u5b9e\u9a8c\u5ba4\u4e0e\u7f8e\u56fd\u53f8\u6cd5\u90e8(DoJ)\u5206\u4eab\u4e86\u4ed6\u4eec\u6210\u4e3a\u76ee\u6807\u7684\u4fe1\u606f\u3002\u6211\u4eec\u6b63\u5728\u901a\u77e5\u5176\u4ed6\u76ee\u6807\u3002\n\u6211\u4eec\u5c06\u201c\u9ed1\u6697\u76c6\u5730\u201d\u8fd9\u4e2a\u540d\u5b57\u547d\u540d\u4e3a\u4e00\u4e2a\u96c7\u4f63\u9ed1\u5ba2\u7ec4\u7ec7\uff0c\u8be5\u7ec4\u7ec7\u7684\u76ee\u6807\u662f\u516d\u5927\u6d32\u6570\u4ee5\u5343\u8ba1\u7684\u4e2a\u4eba\u548c\u7ec4\u7ec7\uff0c\u5305\u62ec\u9ad8\u7ea7\u653f\u5ba2\u3001\u653f\u5e9c\u68c0\u5bdf\u5b98\u3001\u9996\u5e2d\u6267\u884c\u5b98\u3001\u8bb0\u8005\u548c\u4eba\u6743\u634d\u536b\u8005\u3002\u6211\u4eec\u6ee1\u6000\u4fe1\u5fc3\u5730\u5c06\u201c\u9ed1\u6697\u76c6\u5730\u201d\u4e0e\u603b\u90e8\u8bbe\u5728\u5370\u5ea6\u7684\u79d1\u6280\u516c\u53f8BellTroX InfoTech Services(\u201cBellTroX\u201d)\u8054\u7cfb\u8d77\u6765\u3002\n\u5728\u6211\u4eec\u591a\u5e74\u7684\u8c03\u67e5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u9ed1\u6697\u76c6\u5730\u5f88\u53ef\u80fd\u4ee3\u8868\u4ed6\u4eec\u7684\u5ba2\u6237\u5bf9\u6d89\u53ca\u9ad8\u8c03\u516c\u5171\u6d3b\u52a8\u3001\u5211\u4e8b\u6848\u4ef6\u3001\u91d1\u878d\u4ea4\u6613\u3001\u65b0\u95fb\u62a5\u9053\u548c\u5ba3\u4f20\u7684\u5bf9\u624b\u8fdb\u884c\u5546\u4e1a\u95f4\u8c0d\u6d3b\u52a8\u3002\u6b64\u62a5\u544a\u7a81\u51fa\u663e\u793a\u4e86\u51e0\u4e2a\u76ee\u6807\u7fa4\u96c6\u3002\u5728\u672a\u6765\u7684\u62a5\u544a\u4e2d\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u5173\u4e8e\u7279\u5b9a\u76ee\u6807\u96c6\u7fa4\u548c\u9ed1\u6697\u76c6\u5730\u6d3b\u52a8\u7684\u66f4\u591a\u7ec6\u8282\u3002\n2017\u5e74\uff0c\u4e00\u540d\u8bb0\u8005\u8054\u7cfb\u4e86\u516c\u6c11\u5b9e\u9a8c\u5ba4\uff0c\u8fd9\u540d\u8bb0\u8005\u66fe\u6210\u4e3a\u9493\u9c7c\u4f01\u56fe\u7684\u76ee\u6807\uff0c\u5e76\u8be2\u95ee\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u8c03\u67e5\u3002\u6211\u4eec\u5c06\u7f51\u7edc\u9493\u9c7c\u5c1d\u8bd5\u94fe\u63a5\u5230\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684URL\u7f29\u77ed\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u5458\u7528\u5b83\u6765\u4f2a\u88c5\u7f51\u7edc\u9493\u9c7c\u94fe\u63a5\u3002\n\u6211\u4eec\u968f\u540e\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7f29\u77ed\u5668\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u81ea\u5b9a\u4e49URL\u7f29\u77ed\u5668\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u7f51\u7edc\u7531\u4e00\u4e2a\u6211\u4eec\u79f0\u4e3a\u201c\u9ed1\u6697\u76c6\u5730\u201d\u7684\u7ec4\u7ec7\u8fd0\u8425\u3002\u56e0\u4e3a\u7f29\u5199\u5668\u521b\u5efa\u7684URL\u5177\u6709\u8fde\u7eed\u7684\u77ed\u7801\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u679a\u4e3e\u5b83\u4eec\u5e76\u8bc6\u522b\u51e0\u4e4e28,000\u4e2a\u5305\u542b\u76ee\u6807\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u989d\u5916URL\u3002\u6211\u4eec\u4f7f\u7528\u5f00\u6e90\u60c5\u62a5\u6280\u672f\u6765\u8bc6\u522b\u6570\u767e\u4e2a\u76ee\u6807\u4e2a\u4eba\u548c\u7ec4\u7ec7\u3002\u540e\u6765\uff0c\u6211\u4eec\u8054\u7cfb\u4e86\u4ed6\u4eec\u4e2d\u7684\u76f8\u5f53\u4e00\u90e8\u5206\u4eba\uff0c\u7ec4\u88c5\u4e86\u4e00\u5e45\u9ed1\u6697\u76c6\u5730\u76ee\u6807\u7684\u5168\u7403\u56fe\u666f\u3002\n\u6211\u4eec\u7684\u8c03\u67e5\u4ea7\u751f\u4e86\u51e0\u4e2a\u4ee4\u4eba\u611f\u5174\u8da3\u7684\u96c6\u7fa4\uff0c\u6211\u4eec\u5c06\u5728\u672c\u62a5\u544a\u4e2d\u63cf\u8ff0\uff0c\u5176\u4e2d\u5305\u62ec\u7f8e\u56fd\u4e24\u4e2a\u81f4\u529b\u4e8e\u6c14\u5019\u53d8\u5316\u548c\u7f51\u7edc\u4e2d\u7acb\u7684\u5021\u5bfc\u7ec4\u7ec7\u96c6\u7fa4\u3002\n\u867d\u7136\u6211\u4eec\u6700\u521d\u8ba4\u4e3a\u9ed1\u6697\u76c6\u5730\u53ef\u80fd\u662f\u7531\u56fd\u5bb6\u652f\u6301\u7684\uff0c\u4f46\u76ee\u6807\u7684\u8303\u56f4\u5f88\u5feb\u5c31\u6e05\u695a\u5730\u8868\u660e\uff0c\u9ed1\u6697\u76c6\u5730\u5f88\u53ef\u80fd\u662f\u4e00\u6b21\u96c7\u4f63\u9ed1\u5ba2\u7684\u884c\u52a8\u3002\u9ed1\u6697\u76c6\u5730\u7684\u76ee\u6807\u5f80\u5f80\u53ea\u5728\u6709\u4e89\u8bae\u7684\u6cd5\u5f8b\u7a0b\u5e8f\u3001\u5ba3\u4f20\u95ee\u9898\u6216\u5546\u4e1a\u4ea4\u6613\u4e2d\u7684\u4e00\u65b9\u3002\n\u6211\u4eec\u9ad8\u5ea6\u81ea\u4fe1\u5730\u5c06\u9ed1\u6697\u76c6\u5730\u7684\u6d3b\u52a8\u4e0e\u5728\u4e00\u5bb6\u540d\u4e3aBellTroX InfoTech Services(\u4e5f\u79f0\u4e3a\u201cBellTroX D|G|TAL Security\u201d\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u540d\u79f0)\u7684\u5370\u5ea6\u516c\u53f8\u5de5\u4f5c\u7684\u4e2a\u4eba\u8054\u7cfb\u8d77\u6765\u30022015\u5e74\uff0cBellTroX\u7684\u8463\u4e8b\u82cf\u7c73\u7279\u00b7\u53e4\u666e\u5854(Sumit Gupta)\u5728\u52a0\u5dde\u56e0\u53c2\u4e0e\u7c7b\u4f3c\u7684\u9ed1\u5ba2\u96c7\u4f63\u8ba1\u5212\u800c\u88ab\u8d77\u8bc9\u3002\n\u6570\u767e\u5c01\u9ed1\u6697\u76c6\u5730\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u65f6\u95f4\u6233\u4e0e\u5370\u5ea6UTC+5\uff1a30\u65f6\u533a\u7684\u5de5\u4f5c\u65f6\u95f4\u4e00\u81f4\u3002\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(EFF)\u5728\u4e4b\u524d\u5bf9\u9488\u5bf9\u7f51\u7edc\u4e2d\u7acb\u5021\u5bfc\u56e2\u4f53\u7684\u9493\u9c7c\u4fe1\u606f\u8fdb\u884c\u7684\u8c03\u67e5\u4e2d\u4e5f\u53d1\u73b0\u4e86\u540c\u6837\u7684\u65f6\u95f4\u76f8\u5173\u6027\uff0c\u6211\u4eec\u4e5f\u5c06\u5176\u4e0e\u9ed1\u6697\u76c6\u5730\u8054\u7cfb\u8d77\u6765\u3002\n\u9ed1\u6697\u76c6\u5730\u7684\u51e0\u4e2aURL\u7f29\u77ed\u670d\u52a1\u90fd\u6709\u4e0e\u5370\u5ea6\u76f8\u5173\u7684\u540d\u79f0\uff1aHoli\u3001Rongali\u548cPochanchi(\u88681)\u3002\u80e1\u91cc\u8282\u662f\u8457\u540d\u7684\u5370\u5ea6\u6559\u8282\u65e5\uff0c\u4e5f\u88ab\u79f0\u4e3a\u201c\u989c\u8272\u8282\u201d\uff0c\u8363\u52a0\u5229\u662f\u6bd4\u6e56\u7684\u4e09\u4e2a\u963f\u8428\u59c6\u8bed\u8282\u65e5\u4e4b\u4e00\uff0c\u6ce2\u660c\u5947\u5f88\u53ef\u80fd\u662f\u5b5f\u52a0\u62c9\u8bed\u201c55\u201d\u7684\u97f3\u8bd1\u3002\n\u6b64\u5916\uff0c\u9ed1\u6697\u76c6\u5730\u7559\u4e0b\u4e86\u4ed6\u4eec\u7684\u9493\u9c7c\u5de5\u5177\u5305\u6e90\u4ee3\u7801\u7684\u526f\u672c\uff0c\u53ef\u4ee5\u5728\u7f51\u4e0a\u516c\u5f00\u83b7\u5f97\uff0c\u4ee5\u53ca\u663e\u793a\u6d4b\u8bd5\u6d3b\u52a8\u7684\u65e5\u5fd7\u6587\u4ef6\u3002\u7f51\u7edc\u9493\u9c7c\u5de5\u5177\u5305\u8c03\u7528\u7684\u65e5\u5fd7\u4ee3\u7801\u8bb0\u5f55\u4e86UTC+5\uff1a30\u4e2d\u7684\u65f6\u95f4\u6233\uff0c\u65e5\u5fd7\u6587\u4ef6\u663e\u793a\u9ed1\u6697\u76c6\u5730\u4f3c\u4e4e\u4f7f\u7528\u5370\u5ea6\u7684IP\u5730\u5740\u8fdb\u884c\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u3002\n\u4e0e\u6211\u4eec\u5728NortonLifeLock\u7684\u5408\u4f5c\u8005\u4e00\u8d77\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u672c\u62a5\u544a\u4e2d\u63cf\u8ff0\u7684\u6d3b\u52a8\u4e0e\u4e0eBelltrox\u76f8\u5173\u7684\u4e2a\u4eba\u4e4b\u95f4\u7684\u5927\u91cf\u6280\u672f\u8054\u7cfb\u3002\u8fd9\u4e9b\u8054\u7cfb\u4f7f\u6211\u4eec\u9ad8\u5ea6\u81ea\u4fe1\u5730\u5f97\u51fa\u7ed3\u8bba\uff0c\u9ed1\u6697\u76c6\u5730\u4e0eBellTrox\u6709\u5173\u3002\n\u6211\u4eec\u80fd\u591f\u8bc6\u522b\u51faBellTroX\u7684\u51e0\u540d\u5458\u5de5\uff0c\u4ed6\u4eec\u7684\u6d3b\u52a8\u4e0e\u9ed1\u6697\u76c6\u5730\u91cd\u53e0\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u6d4b\u8bd5URL\u7f29\u5199\u7a0b\u5e8f\u65f6\u4f7f\u7528\u4e86\u5305\u62ec\u7b80\u5386\u5728\u5185\u7684\u4e2a\u4eba\u6587\u6863\u4f5c\u4e3a\u8bf1\u9975\u5185\u5bb9\u3002\u4ed6\u4eec\u8fd8\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u53d1\u5e16\u63cf\u8ff0\u653b\u51fb\u6280\u672f\uff0c\u5e76\u5c06\u5176\u5f52\u529f\u4e8e\u5305\u542b\u4e0e\u9ed1\u6697\u76c6\u5730\u57fa\u7840\u8bbe\u65bd\u94fe\u63a5\u7684\u5c4f\u5e55\u622a\u56fe\u3002BellTroX\u53ca\u5176\u5458\u5de5\u4f3c\u4e4e\u4f7f\u7528\u59d4\u5a49\u7684\u8bf4\u6cd5\u5728\u7f51\u4e0a\u63a8\u5e7f\u4ed6\u4eec\u7684\u670d\u52a1\uff0c\u5305\u62ec\u201c\u9053\u5fb7\u9ed1\u5ba2\u201d\u548c\u201c\u8ba4\u8bc1\u7684\u9053\u5fb7\u9ed1\u5ba2\u201d\u3002Belltrox\u7684\u53e3\u53f7\u662f\uff1a\u201c\u60a8\u60f3\u8981\uff0c\u6211\u4eec\u5c31\u60f3\uff01\u201d\n\u57282020\u5e746\u67087\u65e5\u661f\u671f\u65e5\uff0c\u6211\u4eec\u89c2\u5bdf\u5230BellTroX\u7f51\u7ad9\u5f00\u59cb\u63d0\u4f9b\u9519\u8bef\u6d88\u606f\u3002\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u5c06BellTroX\u4e0e\u8fd9\u4e9b\u884c\u52a8\u8054\u7cfb\u8d77\u6765\u7684\u5e16\u5b50\u548c\u5176\u4ed6\u6750\u6599\u6700\u8fd1\u5df2\u88ab\u5220\u9664\u3002\n\u5173\u4e8eBelltrox\u548c\u9ed1\u6697\u76c6\u5730\u4e4b\u95f4\u8fdb\u4e00\u6b65\u8054\u7cfb\u7684\u6280\u672f\u8bc1\u636e\u8be6\u89c1\u9644\u5f55A\u3002\u6298\u8877\u6307\u6807\u89c1\u9644\u5f55B\u3002\n\u6b64\u5916\uff0c2015\u5e74\uff0c\u7f8e\u56fd\u53f8\u6cd5\u90e8\u8d77\u8bc9\u4e86\u51e0\u540d\u7f8e\u56fd\u79c1\u5bb6\u4fa6\u63a2\u548c\u5370\u5ea6\u56fd\u6c11Sumit Gupta(\u53f8\u6cd5\u90e8\u6307\u51fa\uff0c\u4ed6\u4e5f\u4f7f\u7528\u5316\u540dSumit Vishnoi)\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u9ed1\u5ba2\u96c7\u4f63\u8ba1\u5212\u4e2d\u626e\u6f14\u4e86\u89d2\u8272\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0c\u53e4\u666e\u5854\u4ece\u672a\u56e0\u4e0e\u8d77\u8bc9\u4e66\u6709\u5173\u800c\u88ab\u6355\u3002\u4e00\u5bb6\u5370\u5ea6\u516c\u53f8\u6ce8\u518c\u6570\u636e\u7684\u805a\u5408\u5668\u5c06Sumit Gupta\u5217\u4e3aBelltrox\u7684\u8463\u4e8b\uff0c\u800c\u201cSumit Vishnoi\u201d\u5728\u7f51\u4e0a\u53d1\u5e03\u7684\u5e16\u5b50\u4e2d\u4e5f\u63d0\u5230\u4e86BelltroX\u3002\u8d77\u8bc9\u4e66\u4e2d\u63cf\u8ff0\u7684\u884c\u52a8\uff0c\u5305\u62ec\u4e0e\u79c1\u5bb6\u4fa6\u63a2\u7684\u5e7f\u6cdb\u5173\u7cfb\uff0c\u4e0e\u6211\u4eec\u5f52\u56e0\u4e8eBelltrox\u7684\u884c\u52a8\u76f8\u4f3c\u3002\n\u6211\u4eec\u89c2\u5bdf\u4e86\u9ed1\u6697\u76c6\u5730\u51e0\u5e74\u6765\u7684\u6d3b\u52a8\uff0c\u5305\u62ec\u793e\u4ea4\u5a92\u4f53\u6d3b\u52a8\u548c\u5728BellTroX\u5de5\u4f5c\u7684\u4e2a\u4eba\u5e16\u5b50\u3002LinkedIn\u4e0a\u5217\u51fa\u7684\u4e00\u4e9b\u4e3aBelltroX\u5de5\u4f5c\u7684\u4e2a\u4eba\u63d0\u5230\u4e86\u4e00\u4e9b\u8868\u660e\u9ed1\u5ba2\u80fd\u529b\u7684\u6d3b\u52a8\u3002\nBellTroX\u7684LinkedIn\u9875\u9762\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5458\u5de5\u7684\u9875\u9762\uff0c\u5df2\u7ecf\u6536\u5230\u4e86\u6570\u767e\u540d\u4ece\u4e8b\u4f01\u4e1a\u60c5\u62a5\u548c\u79c1\u4eba\u8c03\u67e5\u5404\u4e2a\u9886\u57df\u7684\u4e2a\u4eba\u7684\u652f\u6301\u3002\n\u7f8e\u56fd\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u7684\u8c03\u67e5\u5458\uff0c\u4ee5\u524d\u662f\u7f8e\u56fd\u6d77\u5173\u548c\u8fb9\u5883\u5de1\u903b\u961f\u7684\u5408\u540c\u8c03\u67e5\u5458\u3002\n\u79c1\u5bb6\u4fa6\u63a2\uff0c\u5176\u4e2d\u8bb8\u591a\u4eba\u4ee5\u524d\u5728\u8054\u90a6\u8c03\u67e5\u5c40\u3001\u8b66\u5bdf\u3001\u519b\u961f\u548c\u5176\u4ed6\u653f\u5e9c\u90e8\u95e8\u62c5\u4efb\u8fc7\u804c\u52a1\u3002\nLinkedIn\u7684\u4ee3\u8a00\u53ef\u80fd\u662f\u5b8c\u5168\u65e0\u5bb3\u7684\uff0c\u5e76\u4e0d\u80fd\u8bc1\u660e\u4e2a\u4eba\u4e0eBellTroX\u7b7e\u8ba2\u4e86\u9ed1\u5ba2\u6216\u5176\u4ed6\u6d3b\u52a8\u7684\u5408\u540c\u3002\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u5f15\u53d1\u4e86\u4e00\u4e9b\u4ee3\u8a00\u4eba\u4e0eBelltroX\u4e4b\u95f4\u5173\u7cfb\u6027\u8d28\u7684\u95ee\u9898\u3002\n\u5c3d\u7ba1\u53f8\u6cd5\u90e8\u4e4b\u524d\u8d77\u8bc9\u4e86BellTroX\u8463\u4e8b\uff0c\u4ee5\u53ca\u5728\u5176\u4ed6\u9ed1\u5ba2\u96c7\u4f63\u6848\u4ef6\u4e2d\u4e5f\u63d0\u51fa\u4e86\u8d77\u8bc9\uff0c\u4f46\u63d0\u4f9b\u8fd9\u4e9b\u670d\u52a1\u7684\u516c\u53f8\u516c\u5f00\u5ba3\u4f20\u4ed6\u4eec\u7684\u6d3b\u52a8\u3002\u8fd9\u8868\u660e\uff0c\u516c\u53f8\u53ca\u5176\u5ba2\u6237\u5e76\u4e0d\u6307\u671b\u9762\u4e34\u6cd5\u5f8b\u540e\u679c\uff0c\u4f7f\u7528\u96c7\u4f63\u9ed1\u5ba2\u7684\u516c\u53f8\u53ef\u80fd\u662f\u79c1\u4eba\u8c03\u67e5\u884c\u4e1a\u7684\u6807\u51c6\u505a\u6cd5\u3002\u867d\u7136LinkedIn\u7684\u80cc\u4e66\u5e76\u4e0d\u80fd\u8bc1\u660e\u4e2a\u4eba\u4e0eBellTroX\u7b7e\u8ba2\u4e86\u9ed1\u5ba2\u6216\u5176\u4ed6\u6d3b\u52a8\u7684\u5408\u540c\uff0c\u4f46\u5b83\u786e\u5b9e\u5f15\u53d1\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u5373\u90a3\u4e9b\u53d1\u5e03\u80cc\u4e66\u7684\u4eba\u4e0eBelltroX\u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u6027\u8d28\uff0c\u5305\u62ec\u8fd9\u4e9b\u79c1\u4eba\u4fa6\u63a2(PI)\u4e0e\u4e00\u5bb6\u9c9c\u4e3a\u4eba\u77e5\u7684\u5370\u5ea6\u516c\u53f8\u6709\u4ec0\u4e48\u4e1a\u52a1\u3002\n\u9ed1\u6697\u76c6\u5730\u62e5\u6709\u4e00\u7cfb\u5217\u5f15\u4eba\u6ce8\u76ee\u7684\u76ee\u6807\uff0c\u4ece\u591a\u4e2a\u56fd\u5bb6\u7684\u9ad8\u7ea7\u653f\u5e9c\u5b98\u5458\u548c\u5019\u9009\u4eba\uff0c\u5230\u5bf9\u51b2\u57fa\u91d1\u548c\u94f6\u884c\u7b49\u91d1\u878d\u670d\u52a1\u516c\u53f8\uff0c\u518d\u5230\u5236\u836f\u516c\u53f8\u3002\u4ee4\u4eba\u4e0d\u5b89\u7684\u662f\uff0c\u9ed1\u6697\u76c6\u5730\u5e7f\u6cdb\u9488\u5bf9\u81f4\u529b\u4e8e\u56fd\u5185\u548c\u5168\u7403\u95ee\u9898\u7684\u7f8e\u56fd\u5021\u5bfc\u7ec4\u7ec7\u3002\u8fd9\u4e9b\u76ee\u6807\u5305\u62ec\u6c14\u5019\u5021\u5bfc\u7ec4\u7ec7\u548c\u7f51\u7edc\u4e2d\u7acb\u6d3b\u52a8\u5bb6\u3002\n\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u5927\u7fa4\u5728\u7f8e\u56fd\u4ece\u4e8b\u73af\u5883\u95ee\u9898\u7684\u76ee\u6807\u4e2a\u4eba\u548c\u7ec4\u7ec7\u30022017\u5e74\u79cb\u5929\uff0c\u516c\u6c11\u5b9e\u9a8c\u5ba4\u4e0e\u8fd9\u4e9b\u56e2\u4f53\u8fdb\u884c\u4e86\u63a5\u89e6\uff0c\u5e76\u5f00\u59cb\u4e0e\u4ed6\u4eec\u5408\u4f5c\uff0c\u4ee5\u786e\u5b9a\u76ee\u6807\u7684\u6027\u8d28\u548c\u8303\u56f4\u3002\u6211\u4eec\u786e\u5b9a\u8fd9\u4e9b\u7ec4\u7ec7\u90fd\u4e0e#\u57c3\u514b\u68ee\u77e5\u9053\u8fd0\u52a8\u6709\u5173\uff0c\u8be5\u8fd0\u52a8\u7a81\u51fa\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u8fd9\u4e9b\u5021\u5bfc\u7ec4\u7ec7\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u4e9b\u6587\u4ef6\u6307\u5411\u4e86\u57c3\u514b\u68ee\u7f8e\u5b5a\u51e0\u5341\u5e74\u6765\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u4e86\u89e3\u3002\u6839\u636e\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u7684\u62a5\u9053\uff0c#exxonnow\u6d3b\u52a8\u5bfc\u81f4\u201c\u8be5\u516c\u53f8\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u7814\u7a76\u88ab\u66dd\u5149\uff0c\u5305\u62ec\u5b83\u5728\u6de1\u5316\u5a01\u80c1\u7684\u540c\u65f6\uff0c\u5c06\u6c14\u5019\u9884\u6d4b\u7eb3\u5165\u5176\u52d8\u63a2\u8ba1\u5212\u6240\u91c7\u53d6\u7684\u884c\u52a8\u3002\u201d\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u63cf\u8ff0\u4e86\u57c3\u514b\u68ee\u7f8e\u5b5a(ExxonMobil)\u3001\u591a\u4e2a\u5dde\u7684\u603b\u68c0\u5bdf\u957f\u548c\u53c2\u4e0e#\u57c3\u514b\u68ee\u7f8e\u5b5a(#exxonnow)\u8fd0\u52a8\u7684\u7ec4\u7ec7\u4e4b\u95f4\u6fc0\u70c8\u7684\u6cd5\u5f8b\u6597\u4e89\u3002\n\u6211\u4eec\u5411\u76ee\u6807\u63d0\u4f9b\u641c\u7d22\u67e5\u8be2\u4ee5\u67e5\u627e\u9ed1\u6697\u76c6\u5730\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u6307\u5bfc\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u67e5\u8be2\u4ece\u5176\u6536\u4ef6\u7bb1\u4e2d\u6536\u96c6\u7535\u5b50\u90ae\u4ef6\u3002\u867d\u7136\u6b64\u65b9\u6cd5\u4e0d\u80fd\u751f\u6210\u6240\u6709\u9ed1\u6697\u76c6\u5730\u7f51\u7edc\u9493\u9c7c\u5c1d\u8bd5\u7684\u5168\u9762\u96c6\u5408\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u8ffd\u6eaf\u6570\u636e\uff0c\u5e2e\u52a9\u6211\u4eec\u5c06\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u7684\u65f6\u95f4\u4e0e#exxonnow\u6d3b\u52a8\u4e2d\u7684\u5173\u952e\u4e8b\u4ef6\u5173\u8054\u8d77\u6765\u3002\u6211\u4eec\u5728\u76ee\u6807\u7ec4\u7ec7\u7684\u534f\u52a9\u4e0b\u786e\u5b9a\u4e86\u8fd9\u4e9b\u5173\u952e\u4e8b\u4ef6\uff0c\u5e76\u5217\u51fa\u4e86\u57c3\u514b\u68ee\u7f8e\u5b5a\u53d1\u5e03\u7684\u65f6\u95f4\u8868\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u56f4\u7ed5\u67d0\u4e9b\u5173\u952e\u4e8b\u4ef6\uff0c\u76ee\u6807\u589e\u52a0\u4e86\uff0c\u5982\u4e0b\u6240\u793a\u3002\n2016\u5e741\u6708\uff0c\u4e00\u7fa4\u73af\u4fdd\u7ec4\u7ec7\u548c\u8d44\u52a9\u8005\u79c1\u4e0b\u4f1a\u9762\uff0c\u8ba8\u8bba#\u57c3\u514b\u68ee\u7f8e\u5b5a\u77e5\u9053\u6d3b\u52a8\u3002\u4e00\u5c01\u9080\u8bf7\u6d3b\u52a8\u5bb6\u53c2\u52a01\u6708\u4efd\u4f1a\u8bae\u7684\u79c1\u4eba\u7535\u5b50\u90ae\u4ef6(\u201c1\u6708\u4efd\u7535\u5b50\u90ae\u4ef6\u201d)\u968f\u540e\u88ab\u4e0d\u660e\u8eab\u4efd\u7684\u5404\u65b9\u6cc4\u9732\u7ed9\u4e24\u5bb6\u62a5\u7eb8\u30022016\u5e744\u670813\u65e5\uff0c\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d(Wall Street Journal)\u520a\u767b\u4e86\u4e00\u7bc7\u9898\u4e3a\u201c\u57c3\u514b\u68ee\u7f8e\u5b5a\u56de\u51fb\u6c14\u5019\u53d8\u5316\u8c03\u67e5\u201d\u7684\u62a5\u9053\uff0c\u5f15\u7528\u4e861\u6708\u4efd\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4e00\u5929\u540e\uff0c\u201c\u81ea\u7531\u706f\u5854\u201d(Free Beacon)\u520a\u767b\u4e861\u6708\u4efd\u7535\u5b50\u90ae\u4ef6\u7684\u6253\u5370\u7167\u7247\u3002\n\u57282016\u5e743\u6708\uff0c\u4e00\u540d\u8bb0\u8005\u8be2\u95ee\u4e0e\u4f1a\u8005\u6709\u5173\u79d8\u5bc6\u4f1a\u8bae\u7684\u60c5\u51b5\u540e\uff0c\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u8fdb\u4e00\u6b65\u7684\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\uff0c\u76f4\u52302017\u5e746\u6708\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u63d0\u4ea4\u4e86\u4e00\u4efd\u6587\u4ef6\uff0c\u58f0\u79f0\u6709\u8bc1\u636e\u8868\u660e\u201c\u57c3\u514b\u68ee\u7f8e\u5b5a\u7684\u58f0\u660e\u53ef\u80fd\u5b58\u5728\u91cd\u5927\u865a\u5047\u548c\u8bef\u5bfc\u6027\u201d\u3002\u5728\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u4e8e2018\u5e741\u6708\u5bf9\u57c3\u514b\u68ee\u7f8e\u5b5a(ExxonMobil)\u63d0\u8d77\u8bc9\u8bbc\u524d\u4e0d\u4e45\uff0c\u76ee\u6807\u4e5f\u518d\u6b21\u98d9\u5347\u3002\n2016\u5e741\u6708\u7535\u5b50\u90ae\u4ef6\u7684\u6cc4\u9732\uff0c\u4ee5\u53ca\u6d3b\u52a8\u4eba\u58eb\u6ce8\u610f\u5230\u7684\u53ef\u7591\u7535\u5b50\u90ae\u4ef6\uff0c\u5bfc\u81f4\u51fa\u5e2d\u4f1a\u8bae\u7684\u4e00\u4e9b\u4eba\u6000\u7591\u4ed6\u4eec\u7684\u79c1\u4eba\u901a\u4fe1\u53ef\u80fd\u5df2\u7ecf\u88ab\u6cc4\u9732\u3002\u6211\u4eec\u540e\u6765\u786e\u5b9a\uff0c\u9664\u4e86\u4e24\u4e2a\u4eba\u4e4b\u5916\uff0c\u6240\u67091\u6708\u4efd\u6cc4\u9732\u7684\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u4eba\u4e5f\u90fd\u662f\u9ed1\u6697\u76c6\u5730\u7684\u76ee\u6807\u3002\n\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u5a92\u4f53\u4e0a\u8fd8\u51fa\u73b0\u4e86\u591a\u4e2a\u4e0e\u8fd9\u4e9b\u7ade\u9009\u95ee\u9898\u516c\u5f00\u76f8\u5173\u7684\u4e2a\u4eba\u7684\u5185\u90e8\u6587\u4ef6\u3002\n\u9ed1\u6697\u76c6\u5730\u5411\u76ee\u6807\u7684\u4e2a\u4eba\u548c\u673a\u6784\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\u53d1\u9001\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u3002\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u53c2\u4e0e#exxonnow\u8fd0\u52a8\u7684\u4e2a\u4eba\uff0c\u4ee5\u53ca#exxonnows\u6d3b\u52a8\u5bb6\u7684\u5bb6\u4eba\u3002\u5728\u81f3\u5c11\u4e00\u4e2a\u6848\u4f8b\u4e2d\uff0c\u76ee\u6807\u7684\u672a\u6210\u5e74\u5b69\u5b50\u4e5f\u5728\u7f51\u7edc\u9493\u9c7c\u7684\u76ee\u6807\u4e4b\u5217\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u201c\u504f\u79bb\u4e2d\u5fc3\u201d\u7684\u76ee\u6807\u8fdb\u4e00\u6b65\u8868\u660e\u4e86\u76ee\u6807\u7684\u77e5\u60c5\u6027\u8d28\uff0c\u4e5f\u8868\u660e\u4e86\u60c5\u62a5\u6536\u96c6\u7684\u76ee\u6807\u3002\n\u8bb8\u591a\u9488\u5bf9\u8fd9\u4e9b\u4eba\u7684\u7f51\u7edc\u9493\u9c7c\u90fd\u63d0\u5230\u4e86\u5854\u5409\u7279\u516c\u53f8\u5728\u57c3\u514b\u68ee\u7f8e\u5b5a\u548c\u6c14\u5019\u53d8\u5316\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u591a\u6761\u9493\u9c7c\u4fe1\u606f\u4f3c\u4e4e\u5f15\u7528\u4e86\u6709\u5173\u57c3\u514b\u68ee\u7f8e\u5b5a\u7684\u672a\u6307\u660e\u673a\u5bc6\u6587\u4ef6\u3002\u8fd9\u4e9b\u4fe1\u606f\u4e2d\u6709\u4e00\u4e9b\u5192\u5145\u4e86\u53c2\u4e0e#\u57c3\u514b\u68ee\u7f8e\u5b5a\u5ba3\u4f20\u6d3b\u52a8\u7684\u4e2a\u4eba\u6216\u53c2\u4e0e\u9488\u5bf9\u57c3\u514b\u68ee\u7f8e\u5b5a\u7684\u8bc9\u8bbc\u7684\u4e2a\u4eba\uff0c\u5982\u6cd5\u5f8b\u987e\u95ee\u3002\n\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u9ed1\u6697\u76c6\u5730\u53d1\u9001\u4e86\u5173\u4e8e\u57c3\u514b\u68ee\u7f8e\u5b5a\u7684\u5047\u8c37\u6b4c\u65b0\u95fb\u66f4\u65b0\uff0c\u8fd9\u663e\u7136\u662f\u76ee\u6807\u611f\u5174\u8da3\u7684\u8bdd\u9898\u3002\n\u5176\u4ed6\u8be1\u8ba1\u5305\u62ec\u865a\u5047\u7684\u63a8\u7279\u3001\u76f4\u63a5\u6d88\u606f\u548c\u5176\u4ed6\u58f0\u79f0\u5173\u6ce8\u6c14\u5019\u53d8\u5316\u5021\u5bfc\u7684\u901a\u4fe1\u3002\u9ed1\u6697\u76c6\u5730\u8fd8\u5b9a\u671f\u4f7f\u7528\u66f4\u901a\u7528\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u89c2\u5bdf\u5230\u9ed1\u6697\u76c6\u5730\u9488\u5bf9\u5176\u4ed6\u96c6\u7fa4\u4e2d\u7684\u76ee\u6807\uff0c\u5982\u6709\u9488\u5bf9\u6027\u7684\u5bf9\u51b2\u57fa\u91d1\uff0c\u8fdb\u884c\u4e86\u7c7b\u4f3c\u7684\u7279\u5b9a\u4e3b\u9898\u548c\u4e00\u822c\u5c1d\u8bd5\u7684\u6df7\u5408\u3002\u9ed1\u6697\u76c6\u5730\u8fd8\u5b9a\u671f\u5728\u4ed6\u4eec\u7684\u4fe1\u606f\u4e2d\u4f7f\u7528\u7b2c\u4e09\u65b9\u94fe\u63a5\u8ddf\u8e2a\u670d\u52a1\u3002\n\u5728\u81f3\u5c11\u4e00\u8d77\u6848\u4ef6\u4e2d\uff0c\u9ed1\u6697\u76c6\u5730\u6539\u53d8\u4e86\u88ab\u76d7\u5185\u90e8\u7535\u5b50\u90ae\u4ef6\u7684\u7528\u9014\uff0c\u4ee5\u91cd\u65b0\u7784\u51c6\u5176\u4ed6\u4e2a\u4eba\u3002\u8fd9\u4e00\u4e8b\u4ef6\u4f7f\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u9ed1\u6697\u76c6\u5730\u5728\u83b7\u5f97\u4e00\u4e2a\u6216\u591a\u4e2a\u5021\u5bfc\u56e2\u4f53\u7684\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\u65b9\u9762\u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u529f\u3002\n\u9ed1\u6697\u76c6\u5730\u7684\u76ee\u6807\u663e\u793a\u4e86\u4ed6\u4eec\u5bf9\u76ee\u6807\u53ca\u5176\u5173\u7cfb\u7684\u9ad8\u5ea6\u8be6\u7ec6\u548c\u51c6\u786e\u7684\u7406\u89e3\u3002\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u4e0d\u4ec5\u6765\u81ea\u4f2a\u88c5\u6210\u76ee\u6807\u540c\u4e8b\u548c\u670b\u53cb\u7684\u8d26\u6237\uff0c\u800c\u4e14\u9ed1\u6697\u76c6\u5730\u9009\u62e9\u7684\u76ee\u6807\u4e2a\u4eba\u8868\u660e\uff0c\u5b83\u5bf9\u975e\u6b63\u5f0f\u7684\u7ec4\u7ec7\u5c42\u7ea7\u6709\u6df1\u523b\u7684\u4e86\u89e3(\u4f8b\u5982\uff0c\u4f2a\u88c5\u6210\u6bd4\u76ee\u6807\u66f4\u6709\u6743\u5a01\u7684\u4e2a\u4eba)\u3002\u5176\u4e2d\u4e00\u4e9b\u77e5\u8bc6\u53ef\u80fd\u5f88\u96be\u4ec5\u4ece\u5f00\u6e90\u8c03\u67e5\u4e2d\u83b7\u5f97\u3002\u7ed3\u5408\u5b9a\u671f\u4e3a#exxonnow\u6d3b\u52a8\u91cf\u8eab\u5b9a\u505a\u7684\u8bf1\u9975\u5185\u5bb9\uff0c\u6211\u4eec\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u9ed1\u6697\u76c6\u5730\u8fd0\u8425\u5546\u53ef\u80fd\u4e0d\u4ec5\u5f97\u5230\u4e86\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf4\u660e\u4e86\u76ee\u6807\u662f\u8c01\uff0c\u800c\u4e14\u7279\u5b9a\u76ee\u6807\u53ef\u80fd\u4f1a\u54cd\u5e94\u54ea\u4e9b\u7c7b\u578b\u7684\u6d88\u606f\u3002\n\u867d\u7136\u6211\u4eec\u7684\u7814\u7a76\u9ad8\u5ea6\u81ea\u4fe1\u5730\u5f97\u51fa\u7ed3\u8bba\u8ba4\u4e3a\uff0c\u9ed1\u6697\u76c6\u5730\u5bf9\u4f20\u64ad\u8fd9\u4e9b\u7f51\u7edc\u9493\u9c7c\u4f01\u56fe\u8d1f\u6709\u8d23\u4efb\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u5f3a\u6709\u529b\u7684\u8bc1\u636e\u8868\u660e\u59d4\u6258\u65b9\uff0c\u76ee\u524d\u6211\u4eec\u4e5f\u4e0d\u80fd\u6700\u7ec8\u5c06\u9ed1\u6697\u76c6\u5730\u9488\u5bf9\u8fd9\u4e9b\u7ec4\u7ec7\u7684\u7f51\u7edc\u9493\u9c7c\u884c\u52a8\u5f52\u56e0\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u9ed1\u6697\u76c6\u5730\u5ba2\u6237\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5e7f\u6cdb\u9488\u5bf9\u884c\u4f7f\u7b2c\u4e00\u4fee\u6b63\u6848\u6743\u5229\u7684\u7f8e\u56fd\u975e\u8425\u5229\u7ec4\u7ec7\u662f\u683c\u5916\u4ee4\u4eba\u4e0d\u5b89\u7684\u3002\n\u81f3\u5c11\u6709\u4e24\u4e2a\u7f8e\u56fd\u5021\u5bfc\u56e2\u4f53\u6210\u4e3a\u9ed1\u6697\u76c6\u5730\u7684\u76ee\u6807\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u4ed6\u4eec\u4e00\u76f4\u5728\u8fdb\u884c\u5021\u5bfc\uff0c\u8981\u6c42\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(FCC)\u5728\u7f8e\u56fd\u4fdd\u7559\u7f51\u7edc\u4e2d\u7acb\u89c4\u5219\u3002EFF\u57282017\u5e74\u53d1\u5e03\u4e86\u4e00\u4efd\u5173\u4e8e\u8fd9\u4e00\u76ee\u6807\u7684\u62a5\u544a\uff0c\u6307\u51fa\u7f8e\u56fd\u975e\u653f\u5e9c\u7ec4\u7ec7\u4e89\u53d6\u672a\u6765\u548c\u65b0\u95fb\u81ea\u7531\u57282017\u5e747\u67087\u65e5\u81f38\u67088\u65e5\u671f\u95f4\u6210\u4e3a\u76ee\u6807\u3002\u6211\u4eec\u8fd8\u89c2\u5bdf\u5230\u9488\u5bf9\u66f4\u591a\u7684\u7f8e\u56fd\u6c11\u95f4\u793e\u4f1a\u56e2\u4f53\uff0c\u8fd9\u5c06\u5728\u4eca\u540e\u7684\u62a5\u544a\u4e2d\u8ba8\u8bba\u3002\n\u9664\u4e86\u9488\u5bf9\u516c\u6c11\u793e\u4f1a\uff0c\u6211\u4eec\u53d1\u73b0\u6765\u81ea\u7f8e\u56fd\u591a\u5bb6\u4e3b\u8981\u5a92\u4f53\u7684\u8bb0\u8005\u4e5f\u53d7\u5230\u4e86\u653b\u51fb\u3002\u76ee\u6807\u5305\u62ec\u8c03\u67e5\u4e0e\u4e0a\u8ff0\u5021\u5bfc\u7ec4\u7ec7\u76f8\u5173\u8bdd\u9898\u7684\u8bb0\u8005\uff0c\u4ee5\u53ca\u591a\u540d\u5546\u4e1a\u8bb0\u8005\u3002\n\u9ed1\u6697\u76c6\u5730\u7684\u76ee\u6807\u662f\u5e7f\u6cdb\u7684\uff0c\u6d89\u53ca\u591a\u4e2a\u884c\u4e1a\u3002\u5728\u516c\u6c11\u5b9e\u9a8c\u5ba4\u6536\u96c6\u7684\u76ee\u6807\u6837\u672c\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u91d1\u878d\u9886\u57df\u662f\u6700\u6709\u9488\u5bf9\u6027\u7684\u3002\u4ee5\u4e0b\u90e8\u5206\u7b80\u8981\u6982\u8ff0\u4e86\u51e0\u4e2a\u7279\u522b\u611f\u5174\u8da3\u7684\u884c\u4e1a\u5782\u76f4\u5e02\u573a\u3002\n\u9488\u5bf9\u91d1\u878d\u4e1a\u7684\u6700\u7a81\u51fa\u7684\u76ee\u6807\u6d89\u53ca\u4e00\u7fa4\u5bf9\u51b2\u57fa\u91d1\u3001\u5356\u7a7a\u8005\u3001\u8bb0\u8005\u548c\u8c03\u67e5\u4eba\u5458\uff0c\u4ed6\u4eec\u5728\u5fb7\u56fd\u652f\u4ed8\u5904\u7406\u5668Wirecard AG\u4ece\u4e8b\u4e0e\u5e02\u573a\u64cd\u7eb5\u76f8\u5173\u7684\u4e3b\u9898\u5de5\u4f5c\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c2020\u5e746\u67085\u65e5\u661f\u671f\u4e94\uff0c\u5fb7\u56fd\u8b66\u65b9\u641c\u67e5\u4e86Wirecard AG\u7684\u529e\u516c\u5ba4\uff0c\u8fd9\u4e0e\u6155\u5c3c\u9ed1\u68c0\u5bdf\u5b98\u5bf9\u67d0\u4e9b\u6267\u884c\u8463\u4e8b\u4f1a\u6210\u5458\u53d1\u8d77\u7684\u5211\u4e8b\u8c03\u67e5\u6709\u5173\u3002\n\u5728\u4e0e\u56f4\u7ed5Wirecard AG\u6848\u4ef6\u7684\u76ee\u6807\u7ec4\u7ec7\u548c\u4e2a\u4eba\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u5de5\u4f5c\u540e\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u8fd9\u4e00\u76ee\u6807\u80cc\u540e\u7684\u7edf\u4e00\u4e3b\u7ebf\u662f\u9488\u5bf9\u5728\u76ee\u6807\u5f62\u6210\u671f\u95f4\u5728Wirecard AG\u6301\u6709\u7a7a\u5934\u5934\u5bf8\u7684\u4e2a\u4eba\uff0c\u4ee5\u53ca\u62a5\u9053Wirecard AG\u6848\u4ef6\u7684\u8d22\u7ecf\u8bb0\u8005\u3002\u51e0\u4e2a\u6708\u6765\uff0c\u4e00\u4e9b\u4eba\u51e0\u4e4e\u6bcf\u5929\u90fd\u6210\u4e3a\u653b\u51fb\u76ee\u6807\uff0c\u51e0\u5e74\u6765\u4ed6\u4eec\u7ee7\u7eed\u6536\u5230\u4fe1\u606f\u3002\n\u6765\u81ea\u591a\u540d\u8bb0\u8005\u3001\u5356\u7a7a\u8005\u548c\u5bf9\u51b2\u57fa\u91d1\u7684\u79c1\u4eba\u7535\u5b50\u90ae\u4ef6\u88ab\u516c\u5f00\uff0c\u4f5c\u4e3a\u201c\u6cc4\u5bc6\u201d\u7f51\u7ad9\u548c\u6d3b\u52a8\u7684\u4e00\u90e8\u5206\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4efd\u901a\u8fc7\u5728\u7ebf\u5e16\u5b50\u5411\u5404\u4e2a\u8bba\u575b\u5206\u53d1\u7684PDF\u3002\u8fd9\u573a\u8fd0\u52a8\u7684\u540d\u5b57\u6765\u81eaZatarra\uff0c\u5f53\u65f6\u662f\u4e00\u5bb6\u7531\u51e0\u4e2a\u76ee\u6807\u8fd0\u8425\u7684\u516c\u53f8\u3002\u5982\u88685\u6240\u793a\uff0c\u8be5\u6587\u4ef6\u5927\u91cf\u6458\u5f55\u4e86\u8bb0\u8005\u4e0e\u5176\u6d88\u606f\u6765\u6e90\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u76ee\u6807\u8868\u793a\uff0c\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u5728\u53d1\u5e03\u5230\u7f51\u7ad9\u4e4b\u524d\uff0c\u5b58\u5728\u8bef\u5bfc\u6027\u7684\u5448\u73b0\u548c\u7f16\u8f91\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u867d\u7136\u8fd9\u4e9b\u6587\u4ef6\u53ef\u80fd\u662f\u57fa\u4e8e\u9ed1\u6697\u76c6\u5730\u901a\u8fc7\u7f51\u7edc\u9493\u9c7c\u83b7\u5f97\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u4f46\u8003\u8651\u5230\u8fd9\u4e9b\u6587\u4ef6\u7684\u5199\u4f5c\u3001\u8c03\u67e5\u672f\u8bed\u7684\u4f7f\u7528\u548c\u8be6\u7ec6\u7684\u7ec4\u7ec7\u7ed3\u6784\u56fe\u7b49\u6280\u672f\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\u53ef\u80fd\u627f\u62c5\u4e86\u5728\u7f51\u7ad9\u4e0a\u6c47\u7f16\u548c\u5c55\u793a\u8fd9\u4e9b\u6587\u4ef6\u7684\u5de5\u4f5c\u3002\n\u4e0e\u9488\u5bf9\u53c2\u4e0e#exxonnow\u5ba3\u4f20\u8fd0\u52a8\u7684\u7ec4\u7ec7\u4e00\u6837\uff0c\u6211\u4eec\u76ee\u524d\u4e0d\u80fd\u6700\u7ec8\u5c06\u8fd9\u4e00\u8fd0\u52a8\u5f52\u56e0\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u8d5e\u52a9\u5546\u3002", "note_en": "This report will be followed by additional forthcoming reports providing a more comprehensive overview of certain targets and technical indicators.\n  Dark Basin is a hack-for-hire group that has targeted thousands of individuals and hundreds of institutions on six continents. Targets include advocacy groups and journalists, elected and senior government officials, hedge funds, and multiple industries.\n Dark Basin extensively targeted American nonprofits, including organisations working on a campaign called  #ExxonKnew, which asserted that ExxonMobil hid information about climate change for decades.\n We also identify Dark Basin as the group behind the phishing of organizations working on net neutrality advocacy, previously reported by the  Electronic Frontier Foundation.\n We link Dark Basin with high confidence to an Indian company,  BellTroX InfoTech Services, and related entities.\n Citizen Lab has notified hundreds of targeted individuals and institutions and, where possible, provided them with assistance in tracking and identifying the campaign. At the request of several targets, Citizen Lab shared information about their targeting with the US Department of Justice (DOJ). We are in the process of notifying additional targets.\n  We give the name  Dark Basin to a hack-for-hire organization that has targeted thousands of individuals and organizations on six continents, including senior politicians, government prosecutors, CEOs, journalists, and human rights defenders. With high confidence, we link Dark Basin to BellTroX InfoTech Services (\u201cBellTroX\u201d), an India-based technology company.\n Over the course of our multi-year investigation, we found that Dark Basin likely conducted commercial espionage on behalf of their clients against opponents involved in high profile public events, criminal cases, financial transactions, news stories, and advocacy. This report highlights several clusters of targets. In future reports, we will provide more details about specific clusters of targets and Dark Basin\u2019s activities.\n  In 2017, Citizen Lab was contacted by a journalist who had been targeted with phishing attempts and asked if we could investigate. We linked the phishing attempts to a custom URL shortener, which the operators used to disguise the phishing links.\n We subsequently discovered that this shortener was part of a larger network of custom URL shorteners operated by a single group, which we call  Dark Basin. Because the shorteners created URLs with sequential shortcodes, we were able to enumerate them and identify almost 28,000 additional URLs containing e-mail addresses of targets. We used open source intelligence techniques to identify hundreds of targeted individuals and organizations. We later contacted a substantial fraction of them, assembling a global picture of Dark Basin\u2019s targeting.\n Our investigation yielded several clusters of interest that we will describe in this report, including two clusters of advocacy organizations in the United States working on climate change and net neutrality.\n While we initially thought that Dark Basin might be state-sponsored, the range of targets soon made it clear that Dark Basin was likely a hack-for-hire operation. Dark Basin\u2019s targets were often on only one side of a contested legal proceeding, advocacy issue, or business deal.\n    We link Dark Basin\u2019s activity with high confidence to individuals working at an Indian company named BellTroX InfoTech Services (also known as \u201cBellTroX D|G|TAL Security,\u201d and possibly other names). BellTroX\u2019s director, Sumit Gupta, was  indicted in California in 2015 for his role in a similar hack-for-hire scheme.\n  Timestamps in hundreds of Dark Basin phishing emails are consistent with working hours in India\u2019s UTC+5:30 time zone. The same timing correlations were found by the  Electronic Frontier Foundation (EFF) in a prior investigation of phishing messages targeting net neutrality advocacy groups, which we also link to Dark Basin.\n Several of Dark Basin\u2019s URL shortening services had names associated with India: Holi, Rongali, and Pochanchi (Table 1).  Holi is a well-known Hindu celebration also known as the \u201cfestival of colours,\u201d Rongali is one of the three Assamese festivals of  Bihu, and Pochanchi is likely a transliteration of the Bengali word for \u201cfifty-five.\u201d\n  Additionally, Dark Basin left copies of their phishing kit source code available openly online, as well as log files showing testing activity. The logging code invoked by the phishing kit recorded timestamps in UTC+5:30, and log files show that Dark Basin appeared to conduct some testing using an IP address in India.\n  Along with our collaborators at NortonLifeLock, we have unearthed numerous technical links between the campaigns described in this report and individuals associated with BellTroX. These links lead us to conclude with high confidence that Dark Basin is linked to BellTroX.\n We were able to identify several BellTroX employees whose activities overlapped with Dark Basin because they used personal documents, including a CV, as bait content when testing their URL shorteners. They also made social media posts describing and taking credit for attack techniques containing screenshots of links to Dark Basin infrastructure. BellTroX and its employees appear to use euphemisms for promoting their services online, including \u201cEthical Hacking\u201d and \u201cCertified Ethical Hacker.\u201d BellTroX\u2019s slogan is: \u201cyou desire, we do!\u201d\n  On Sunday, June 7th 2020 we observed that the BellTroX website began serving an error message. We have also observed that postings and other materials linking BellTroX to these operations have been recently deleted.\n Technical evidence of further links between BellTroX and Dark Basin are detailed in  Appendix A. Indicators of Compromise are available in  Appendix B.\n    Further, in 2015, the US DOJ indicted several US-based private investigators and an Indian national, Sumit Gupta (whom the DOJ notes also uses the alias Sumit Vishnoi), for their role in a hack-for-hire scheme. To our knowledge, Gupta was never arrested in relation to the indictment. An aggregator of Indian corporate registration data lists Sumit Gupta  as the director of BellTroX, and online postings by a \u201c Sumit Vishnoi\u201d contain references to BellTroX. The actions described in that indictment, including the extensive relationships with private investigators, are similar to those we ascribe to BellTroX.\n  We have observed Dark Basin\u2019s activities over several years, including the social media activities and posts of individuals working at BellTroX. Some of the individuals listed on LinkedIn as working for BellTroX mention activities that indicate hacking capabilities.\n   BellTroX\u2019s LinkedIn pages, and those of their employees, have received hundreds of endorsements from individuals working in various fields of corporate intelligence and private investigation.\n  An investigator at the US Federal Trade Commission and previously a contract investigator for US Customs and Border Patrol.\n  Private investigators, many with prior roles in the FBI, police, military and other branches of government.\n A LinkedIn endorsement may be completely innocuous, and is not proof that an individual has contracted with BellTroX for hacking or other activity. However it does raise questions as to the nature of the relationship between some of those who posted endorsements and BellTroX.\n Despite a previous DOJ indictment of the BellTroX Director, as well as indictments in other hack-for-hire cases, the companies that provide these services publicly promote their activities. This suggests that companies and their clients do not expect to face legal consequences and that the use of hack-for-hire firms may be standard practice within the private investigations industry. While a LinkedIn endorsement is not proof that an individual has contracted with BellTroX for hacking or other activity, it does raise questions as to the nature of the relationship between those who posted endorsements and BellTroX, including what business these private investigators (PIs) would have with an obscure Indian company.\n  Dark Basin has a remarkable portfolio of targets, from senior government officials and candidates in multiple countries, to financial services firms such as hedge funds and banks, to pharmaceutical companies. Troublingly, Dark Basin has extensively targeted American advocacy organizations working on domestic and global issues. These targets include climate advocacy organizations and net neutrality campaigners.\n  We discovered a large cluster of targeted individuals and organizations that were engaged in environmental issues in the US. In the fall of 2017, Citizen Lab made contact with these groups and began working with them to determine the nature and scope of the targeting. We determined that these organizations were all linked to the #ExxonKnew campaign, which highlights documents that, the advocacy organizations argue, point to Exxon\u2019s decades-long knowledge of climate change. According to the  New York Times, the #ExxonKnew campaign has led to \u201cexpos\u00e9s of the company\u2019s research into climate change, including actions it took to incorporate climate projections into its exploration plans while playing down the threat.\u201d The  New York Times  describes an intense legal battle between ExxonMobil, multiple states\u2019 attorneys general, and organizations engaged in the #ExxonKnew campaign.\n    We provided the targets with search queries to find Dark Basin emails and instructed them on how to use these queries to gather emails from their inboxes. While this methodology cannot generate a comprehensive set of all Dark Basin phishing attempts, it provided retrospective data that helped us correlate the timing of phishing emails with key events in the #ExxonKnew campaign. We identified these key events with the assistance of targeted organizations, as well as a  timeline released by ExxonMobil. We noted that targeting increased around certain key events, as illustrated below.\n  In January 2016, a group of environmental organizations and funders met privately to discuss the # Exxon Knew campaign. A private email inviting campaigners to the January meeting (the \u201cJanuary Email\u201d) was subsequently leaked by unknown parties to two newspapers. The January Email was quoted in a story entitled  \u201cExxon Fires Back at Climate-Change Probe\u201d on April 13, 2016 in the  Wall Street Journal, and a day later a picture of a printout of  the January Email was published in the  Free Beacon.\n  After a reporter queried the attendees about the secret meeting in March 2016, we found no further phishing emails until the New York Attorney General made a filing alleging evidence of \u201c potential materially false and misleading statements by Exxon\u201d in June 2017. Targeting also spiked again shortly before New York\u2019s Attorney General filed a lawsuit against ExxonMobil in January 2018.\n   The leak of the January 2016 Email, as well as suspicious emails noticed by campaigners, led some present at the meeting to suspect their private communications may have been compromised. We later determined that all but two recipients of the leaked January Email were also Dark Basin targets.\n We also note multiple other instances of  internal  documentation  related to individuals publicly connected to these campaign issues appearing in the press.\n  Dark Basin sent phishing emails to targets\u2019 personal and institutional email accounts. They targeted individuals involved in the #ExxonKnew campaign, as well as #ExxonKnew campaigners\u2019 family members. In at least one case a target\u2019s minor child was among those targeted with phishing. We believe this \u201coff-center\u201d targeting further indicates both the well-informed nature of the targeting, and an intelligence gathering objective.\n Much of the phishing against these individuals referenced targets\u2019 work on ExxonMobil and climate change. Notably, multiple phishing messages seemed to reference unspecified confidential documents concerning ExxonMobil. A number of these messages impersonated individuals involved in the #ExxonKnew advocacy campaign or individuals involved in litigation against ExxonMobil, such as legal counsel.\n   In other cases, Dark Basin sent fake Google News updates concerning ExxonMobil, clearly a topic of interest to the targets.\n  Other ruses included fake Twitter direct messages and other correspondence purporting to concern climate change advocacy. Dark Basin also regularly employed more generic phishing emails using the same infrastructure. We observed a similar mix of topic-specific and generic attempts by Dark Basin against targets in other clusters, such as targeted hedge funds. Dark Basin also regularly made use of third-party link tracking services in their messages.\n  In at least one case, Dark Basin repurposed a stolen internal email to re-target other individuals. This incident led us to conclude that Dark Basin had some success in gaining access to the email accounts of one or more advocacy groups.\n  Dark Basin\u2019s targeting revealed a highly detailed and accurate understanding of their targets and their relationships. Not only did phishing emails come from accounts masquerading as targets\u2019 colleagues and friends, but the individuals that Dark Basin chose to target showed that it had a deep knowledge of informal organizational hierarchies (e.g., masquerading as individuals with greater authority than the target). Some of this knowledge would likely have been hard to obtain from an open source investigation alone. Combined with the bait content, which was regularly tailored to the #ExxonKnew campaign, we concluded that Dark Basin operators were likely provided with detailed instructions not only about whom to target, but what kinds of messages specific targets might be responsive to.\n While our research concluded with high confidence that Dark Basin was responsible for transmitting these phishing attempts, we do not have strong evidence pointing to the party commissioning them and we are not conclusively attributing Dark Basin\u2019s phishing campaign against these organizations to a particular Dark Basin client at this time. That said, the extensive targeting of American nonprofits exercising their first amendment rights is exceptionally troubling.\n  At least two American advocacy groups were targeted by Dark Basin during a period in which they were engaged in sustained advocacy requesting that the Federal Communications Commission (FCC) preserve net neutrality rules in the US.  EFF published a report on this targeting in 2017, observing that US non-governmental organizations  Fight for the Future and  Free Press were targeted between July 7 and August 8, 2017. We also observed targeting of additional US civil society groups which will be discussed in future reporting.\n  In addition to the targeting of civil society, we found that journalists from multiple major US media outlets were also targeted. Targets included journalists investigating topics related to the advocacy organizations mentioned above, as well as multiple business reporters.\n  Dark Basin\u2019s targeting was widespread and implicated multiple industries. In the sample of the targeting collected by Citizen Lab, we found that the financial sector was the most targeted. The following section briefly outlines several industry verticals of particular interest.\n  The most prominent targeting of the financial sector concerned a cluster of hedge funds, short sellers, journalists, and investigators working on topics related to market manipulation at German payment processor Wirecard AG . We note that the  offices of Wirecard AG were searched on Friday, June 5 2020 by German police in connection with a criminal investigation against certain executive board members launched by Munich prosecutors.\n After extensive work with targeted organizations and individuals surrounding the  Wirecard AG case, we concluded the unifying thread behind this targeting was its aim at individuals who held short positions in Wirecard AG around the time of the targeting and financial reporters covering the Wirecard AG case. Some individuals were targeted almost daily for months, and continued to receive messages for years.\n Private emails from multiple journalists, short sellers, and hedge funds were made public as part of a \u201cleaks\u201d website and campaign, which included a PDF circulated via online posts to various forums. The campaign took its name from Zatarra, then a company operated by several of the targets. As Table 5 shows, the document draws heavily on excerpts of correspondence between journalists and their sources. The targets have said that these emails were misleadingly presented and edited before being posted on the website. We believe that, while the documents may have been based on emails obtained by Dark Basin through phishing, a second entity may have undertaken the work of compiling and presenting these documents on the website, given the sophistication of the writing, use of investigative jargon, and techniques such as detailed organizational charts.\n  As with the targeting of the organizations involved in the #ExxonKnew advocacy campaign, we are not conclusively attributing this campaign to a specific sponsor at this time.\n  Several international banks and investment firms, as well as prominent corporate law firms in the United States, Asia, and Europe, were targets. We also found a number of companies involved in offshore banking and finance were also targeted.\n  Lawyers were heavily represented in Dark Basin targeting. We found targeted individuals in many major US and global law firms. Lawyers working on corporate litigation and financial services were disproportionately represented, with targets in many countries including the US, UK, Israel, France, Belgium, Norway, Switzerland, Iceland, Kenya, and Nigeria.\n  We identified targets in multiple energy and extractive sectors, including petroleum companies. Targets ranged from lawyers and staff to CEOs and executives. In some cases, we observed large swaths of the energy and extractive industry targeted in a particular country, ranging from oilfield services companies and energy companies to prominent industry figures and officials at relevant government offices.\n  We identified a range of targets in Eastern and Central Europe, and Russia, indicative of targeting surrounding the investments and actions of extremely wealthy individuals, including cases surrounding individuals who could be considered oligarchs.\n  We identified targets in multiple governments, ranging from senior elected officials and their staff to members of the judiciary, prosecutors, members of parliament, and political parties. In a number of cases, we were able to connect this targeting to specific issues. We identified at least one individual who ran for elected office in the US. We anticipate providing future reporting on these cases.\n  Many of Dark Basin\u2019s targets were high profile, well-resourced individuals. However, we also found that private individuals were also targeted, which appeared to correlate with divorces or other legal matters.\n  Over the course of our investigation, we found Dark Basin regularly adapting techniques, possibly in response to disruptions from email providers filtering their phishing attempts. What follows is a brief overview of these techniques.\n  Dark Basin sent phishing emails from a range of accounts, including Gmail accounts as well as self-hosted accounts. Sophistication of the bait content, specificity to the target, message volume, and persistence across time varied widely between clusters. It appears that Dark Basin\u2019s customers may receive varying qualities of service and personal attention, possibly based on payment, or relationships with specific intermediaries.\n  The use of URL shorteners for masking phishing sites is a common technique. Over a sixteen month period, we enumerated 28 unique URL shortener services opera\n......", "posttime": "2020-06-09 22:33:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,basin,\u76ee\u6807", "title": "\u9ed1\u6697\u76c6\u5730\u63ed\u5f00\u4e86\u4e00\u8d77\u96c7\u4f63\u9ed1\u5ba2\u884c\u52a8\u7684\u9762\u7eb1", "title_en": "Dark Basin Uncovering a Hack-for-Hire Operation", "transed": 1, "url": "https://citizenlab.ca/2020/06/dark-basin-uncovering-a-massive-hack-for-hire-operation/", "via": "", "real_tags": ["\u9ed1\u5ba2", "basin", "\u76ee\u6807"]}, {"category": "", "categoryclass": "", "imagename": "10c030b2429f801a5aed8756bdece9d2.jpg", "infoid": 1005852, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4f18\u5316\u3001\u64cd\u4f5c\u7cfb\u7edf\u6216\u5d4c\u5165\u5f0f\u5f00\u53d1\u6216\u5176\u4ed6\u7c7b\u578b\u7684\u4f4e\u7ea7\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u6709\u65f6\u53ef\u80fd\u9700\u8981\u4e3a\u60a8\u6b63\u5728\u8fd0\u884c\u7684\u5904\u7406\u5668\u7f16\u5199\u672c\u673a\u6c47\u7f16\u4ee3\u7801\u3002\u5185\u8054\u6c47\u7f16\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u6c47\u7f16\u6307\u4ee4\u96c6\u6210\u5230Rust\u7a0b\u5e8f\u4e2d\uff0c\u5c06RustExpression\u4f5c\u4e3a\u8f93\u5165\u5bc4\u5b58\u5668\u63d0\u4f9b\u7ed9RustExpression\uff0c\u5e76\u5c06\u8f93\u51fa\u76f4\u63a5\u8f93\u51fa\u5230RustVariables\u3002\u6211\u4eec\u5df2\u7ecf\u5728nighly Rust\u4e2d\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u5185\u8054\u6c47\u7f16\u8bed\u6cd5\uff0c\u6211\u4eec\u6b63\u5728\u5bfb\u6c42\u5bf9\u5b83\u7684\u53cd\u9988\uff1b\u6211\u4eec\u76f8\u4fe1\u8fd9\u4e2a\u65b0\u8bed\u6cd5\u5728\u672a\u6765\u6709\u4e00\u6761\u7a33\u5b9a\u7684\u9053\u8def\u3002\n\u201c\u591c\u95f4\u751f\u9508\u201d\u5177\u6709\u5185\u8054\u6c47\u7f16&#34\uff1b(ASM\uff01)\u7684\u8bed\u6cd5\u3002\u7136\u800c\uff0c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u8fd9\u79cd\u8bed\u6cd5\u53ea\u662f\u66b4\u9732\u4e86LLVM\u7684AssemblyStructure\u7684\u4e00\u4e2a\u975e\u5e38\u539f\u59cb\u7684\u7248\u672c\uff0c\u6ca1\u6709\u4efb\u4f55\u5b89\u5168\u63aa\u65bd\u6765\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u5b83\u3002\u83b7\u53d6\u8be5\u8bed\u6cd5\u7684\u4efb\u4f55\u7ec6\u8282\uff0c\u5373\u4f7f\u662f\u7a0d\u6709\u9519\u8bef\uff0c\u90fd\u4f1a\u4ea7\u751f\u5185\u90e8\u7f16\u8bd1\u5668\u9519\u8bef(ICE)\uff0c\u800c\u4e0d\u662f\u60a8\u671f\u671b\u4ecerumstc\u5f97\u5230\u7684\u90a3\u79cd\u53cb\u597d\u7684\u9519\u8bef\u6d88\u606f\u3002\u8fd9\u79cd\u8bed\u6cd5\u8fd8\u5bb9\u6613\u51fa\u9519\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff1a\u5b83\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8eGCC\u7684\u5185\u8054\u6c47\u7f16\u8bed\u6cd5\uff0c\u4f46\u6709\u7ec6\u5fae\u7684\u5dee\u5f02(\u4f8b\u5982\u6ce8\u518c\u7ea6\u675f\u4e2d\u7684\u540d\u79f0)\u3002\u8fd9\u79cd\u8bed\u6cd5\u5728\u4efb\u4f55\u975eLLVM\u540e\u7aef\u4e0a\u4e5f\u51e0\u4e4e\u6ca1\u6709\u5e0c\u671b\u5f97\u5230\u652f\u6301\u3002\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u9650\u5236\uff0cASM\uff01\u5c3d\u7ba1\u8bed\u6cd5\u662f\u6700\u9700\u8981\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u4f46\u5b83\u4e0d\u592a\u53ef\u80fd\u4ece\u591c\u95f4\u5347\u7ea7\u5230\u7a33\u5b9a\u7684\u751f\u9508\u72b6\u6001\u3002\n\u52aa\u529b\u6539\u5584ASM\uff01\u5e76\u5c06\u5176\u5e26\u7ed9\u66f4\u591a\u7684\u7528\u6237\uff0cAmanieud&#39\uff1bAntras\u4e3aASM\uff01\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u3001\u66f4\u53cb\u597d\u7684\u8bed\u6cd5\u3002\u8be5\u8bed\u6cd5\u4ece\u6982\u5ff5\u5230\u7f16\u8bd1\u5668\u5b9e\u73b0\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\uff1a\n\u5185\u8054\u6c47\u7f16\u6210\u4e3a\u8bed\u8a00\u56e2\u961f\u7684\u9996\u6279\u9879\u76ee\u7ec4\u4e4b\u4e00\uff0c\u5e76\u5728\u9879\u76ee\u7ec4\u5b58\u50a8\u5e93\u4e2d\u8fed\u4ee3\u8bbe\u8ba1RFC\u3002\nRFC2873(\u4ecd\u5728\u8ba8\u8bba\u4e2d)\u4e3a\u8bed\u6cd5\u53ca\u5176\u4e0eRust\u8bed\u8a00\u7684\u4ea4\u4e92\u63d0\u4f9b\u4e86\u89c4\u8303\u3002\n\u6211\u4eec\u91cd\u547d\u540d\u4e86\u73b0\u6709\u7684ASM\uff01\u6dfb\u52a0\u5230llvm_asm\uff01\u4e2d\uff0c\u8fd9\u6837\u6bcf\u665a\u4f7f\u7528\u5185\u8054\u6c47\u7f16\u7684\u4eba\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u73b0\u6709\u7684\u8bed\u6cd5\u3002(\u6211\u4eec\u8ba1\u5212\u6700\u7ec8\u5220\u9664\u6b64\u8bed\u6cd5\uff0c\u56e0\u4e3a\u5b83\u5f88\u5bb9\u6613\u53d7\u5230ICE\u653b\u51fb\uff0c\u4f46\u5728\u8bc4\u4f30\u65b0\u8bed\u6cd5\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u65e7\u8bed\u6cd5\u53ef\u4f9b\u6bd4\u8f83\u548c\u9009\u62e9\u3002)\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u65b0\u7684\u5185\u8054\u6c47\u7f16\u8bed\u6cd5\u7684\u793a\u4f8b\uff0c\u5728x86-64 Linux\u4e0a\u4f7f\u7528\u76f4\u63a5\u5199\u5165yscall\u5c06\u6d88\u606f\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\uff1a\n#\uff01[Feature(ASM)]fn main(){let buf=&#34\uff1bHello from ASM\uff01\\n&#34\uff1b\uff1blet ret\uff1aI32\uff1bunsafe{asm\uff01(&#34\uff1bsyscall&#34\uff1b\uff0cin(&#34\uff1brax&#34\uff1b)1\uff0c//syscall number in(&#34\uff1bRDI&#34\uff1b)1\uff0c//FD(Stdout)in(&#34\uff1bRSI&#34\uff1b)\u3002)buf.len()\uff0cout(&#34\uff1brcx&#34\uff1b)_\uff0c//\u88absyscalls out(&#34\uff1br11&#34\uff1b)_\uff0c//\u88absyscalls lateout(&#34\uff1brax&#34\uff1b)ret\uff0c)\uff1b}println\uff01(&#34\uff1bwrite return\uff1a{}&#34\uff1b\uff0cret)\uff1b}", "note_en": "In the course of optimization, OS or embedded development, or other kinds oflow-level programming, you may sometimes need to write native assembly code forthe processor you&#39;re running on. &#34;Inline assembly&#34; provides a simple way tointegrate some assembly instructions into a Rust program, feeding Rustexpressions in as input registers, and getting output directly into Rustvariables. We&#39;ve introduced a new syntax for inline assembly in nightly Rust,and we&#39;re seeking feedback on it; we believe this new syntax has a path tostabilization in the future.\n Nightly Rust has had a syntax for &#34;inline assembly&#34; ( asm!) for a long time;however, this syntax just exposed a very raw version of LLVM&#39;s assemblyconstruct, with no safeguards to help developers use it. Getting any detail ofthis syntax even slightly wrong tended to produce an Internal Compiler Error(ICE) rather than the kind of friendly error message you&#39;ve come to expect fromrustc. This syntax was also error-prone for another reason: it looks similar toGCC&#39;s inline assembly syntax, but has subtle differences (such as the names inregister constraints). This syntax also had little to no hope of beingsupported on any non-LLVM backend. As a result of all these limitations, the asm! syntax was highly unlikely to ever graduate from nightly to stable Rust,despite being one of the most requested features.\n In an effort to improve  asm! and bring it to more users,  Amanieud&#39;Antras designed and implemented a new,friendlier syntax for  asm!. This syntax has had a long road from concept tocompiler implementation:\n Inline assembly became one of the language team&#39;s first  projectgroups,and iteratively designed RFCs in  the project grouprepository.\n RFC 2873 (still underdiscussion) provides a specification for the syntax and its interaction withthe Rust language.\n We  renamed the existing  asm! to llvm_asm!, so that peoplecurrently using inline assembly on nightly can continue to use the existingsyntax for now. (We plan to remove this syntax eventually, given its fragileICE-happy nature, but while evaluating the new syntax we want the old syntaxavailable for comparison and alternatives.)\n Here&#39;s an example of using the new inline assembly syntax, to print a messageto standard output using a direct   writesyscall on x86-64 Linux:\n #![feature(asm)]fn main() { let buf = &#34;Hello from asm!\\n&#34;; let ret: i32; unsafe { asm!( &#34;syscall&#34;, in(&#34;rax&#34;) 1, // syscall number in(&#34;rdi&#34;) 1, // fd (stdout) in(&#34;rsi&#34;) buf.as_ptr(), in(&#34;rdx&#34;) buf.len(), out(&#34;rcx&#34;) _, // clobbered by syscalls out(&#34;r11&#34;) _, // clobbered by syscalls lateout(&#34;rax&#34;) ret, ); } println!(&#34;write returned: {}&#34;, ret);}\n  The example above specifies the exact inputs, outputs, and clobbers required bythe Linux syscall calling convention. You can also provide inputs and outputsvia arbitrary registers, and the compiler will select appropriate registers foryou. The following example uses  bit manipulationinstructionsto compute the bit numbers of all set bits in a value, and stores them in aslice of memory:\n #![feature(asm)]fn main() { let mut bits = [0u8; 64]; for value in 0..=1024u64 { let popcnt; unsafe { asm!(&#34; popcnt {popcnt}, {v} 2: blsi rax, {v} jz 1f xor {v}, rax tzcnt rax, rax stosb jmp 2b 1: &#34;, v = inout(reg) value =&gt; _, popcnt = out(reg) popcnt, out(&#34;rax&#34;) _, // scratch inout(&#34;rdi&#34;) bits.as_mut_ptr() =&gt; _, ); } println!(&#34;bits of {}: {:?}&#34;, value, &amp;bits[0..popcnt]); }}\n (You can  try this example on theplayground.Note that this code serves to demonstrate inline assembly, not to demonstratean efficient implementation of any particular algorithm.)\n Notice that  value and  popcnt have registers selected for them, while bits.as_mut_ptr() must go in the  rdi register for use with the  stosbinstruction.\n For full details on the new  asm! syntax, see  RFC2873.Please try it out (including translating existing inline assembly to the newsyntax), and  report any bugs via the rust issuetracker with the tag  F-asm. Youcan also discuss inline assembly by creating a topic on  the project-inline-asmstream inZulip.", "posttime": "2020-06-09 22:33:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,rust,\u5185\u8054,assembly,\u8bed\u6cd5", "title": "Rust Night\u4e2d\u63d0\u4f9b\u7684\u65b0\u5185\u8054\u7a0b\u5e8f\u96c6\u8bed\u6cd5", "title_en": "New inline assembly syntax available in Rust nightly", "transed": 1, "url": "https://blog.rust-lang.org/inside-rust/2020/06/08/new-inline-asm.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "rust", "\u5185\u8054", "assembly", "\u8bed\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1005851, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "FUCHSIA\u662fGoogle\u5f00\u53d1\u7684\u4e00\u6b3e\u65b0\u64cd\u4f5c\u7cfb\u7edf\uff0c\u9762\u5411AArch64\u548cx86_64\u67b6\u6784\u3002\u867d\u7136\u4eba\u4eec\u5bf9\u8fd9\u6b3e\u64cd\u4f5c\u7cfb\u7edf\u7684\u7528\u9014\u4ee5\u53ca\u5c06\u5728\u54ea\u91cc\u4f7f\u7528\u77e5\u4e4b\u751a\u5c11\uff0c\u4f46\u5b83\u7684\u76ee\u6807\u4f3c\u4e4e\u662f\u5728\u667a\u80fd\u624b\u673a\u4e0a\u53d6\u4ee3Android\uff0c\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u53d6\u4ee3Chrome OS\u3002\n\u4e3a\u4e86\u83b7\u53d6\u5173\u4e8e\u672a\u6765\u53ef\u80fd\u5728\u6570\u767e\u4e07\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u51b3\u5b9a\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0bFuchsia\uff0c\u4e86\u89e3\u5b83\u7684\u5185\u90e8\u8bbe\u8ba1\u3001\u5b89\u5168\u5c5e\u6027\u3001\u4f18\u7f3a\u70b9\uff0c\u5e76\u627e\u5230\u653b\u51fb\u5b83\u7684\u65b9\u6cd5\u3002\n\u5f53\u4eca\u6700\u5e38\u89c1\u7684\u5185\u6838\u8bbe\u8ba1\u5f62\u5f0f\u662f\u5355\u7247\u5185\u6838\u3002\u4f8b\u5982\uff0cLinux\u548cBSD\u5185\u6838\u90fd\u662f\u5355\u7247\u7684\uff0c\u800c\u57fa\u4e8eLinux\u7684Android\u548cChrome OS\u5185\u6838\u4e5f\u662f\u5355\u7247\u7684\u3002\n\u4e00\u4e2a\u5355\u7247\u5185\u6838\u901a\u5e38\u975e\u5e38\u5927\uff0c\u5d4c\u5165\u4e86\u6240\u6709\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u548c\u7f51\u7edc\u5806\u6808\uff0c\u6709\u6570\u767e\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u63d0\u4f9b\u4e86\u6240\u6709\u7684\u7cfb\u7edf\u529f\u80fd\u3002\n\u5355\u7247\u5185\u6838\u7684\u5185\u90e8\u8bbe\u8ba1\u56e0\u5185\u6838\u800c\u5f02\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u4ee5\u4e0b\u5185\u90e8\u7ed3\u6784\u5f80\u5f80\u662f\u901a\u7528\u7684\uff1a\n\u5355\u4e00\u5185\u6838\u7684\u4e00\u4e2a\u660e\u663e\u7684\u5b89\u5168\u95ee\u9898\u662f\uff0c\u5185\u90e8\u7cfb\u7edf\u7ec4\u4ef6\u4e2d\u7684\u4efb\u4f55\u6f0f\u6d1e\u90fd\u4f1a\u5f71\u54cd\u5230\u6574\u4e2a\u5185\u6838\u3002\u5728\u4e0a\u9762\u7684\u6a21\u5f0f\u4e2d\uff0c\u5047\u8bbeUSB\u9a71\u52a8\u7a0b\u5e8f\u5b58\u5728\u53ef\u5229\u7528\u7684\u5185\u5b58\u635f\u574f\uff1a\u7531\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u5728\u5185\u6838\u7a7a\u95f4\u5185\u8fd0\u884c\uff0c\u5229\u7528\u6b64\u6f0f\u6d1e\u7684\u653b\u51fb\u8005\u5c06\u83b7\u5f97\u5bf9\u6240\u6709\u5185\u6838\u7684\u63a7\u5236\u6743\u3002\n\u6b63\u5982\u5176\u540d\u79f0\u6240\u793a\uff0c\u5fae\u5185\u6838\u662f\u4e00\u79cd\u88ab\u8bbe\u8ba1\u6210\u975e\u5e38\u5c0f\u7684\u5185\u6838\uff0c\u4ec5\u5b9e\u73b0\u6709\u9650\u6570\u91cf\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5982\u5206\u7c7b\u8c03\u5ea6\u3001\u5f02\u5e38\u5904\u7406\u3001\u5185\u5b58\u7ba1\u7406\u3001\u51e0\u4e2a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f(\u5982\u679c\u9700\u8981)\u548c\u51e0\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\u5176\u4f59\u7684\u7ec4\u4ef6\u88ab\u79fb\u5230\u7528\u6237\u533a\u57df\uff0c\u5e76\u4e14\u4e0d\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\u3002\n\u5728\u8fd9\u91cc\uff0cVFS\u5c42\u3001\u5957\u63a5\u5b57\u5c42\u3001\u7f51\u7edc\u5806\u6808\u3001\u6587\u4ef6\u7cfb\u7edf\u548c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u88ab\u79fb\u5230\u4e13\u7528\u7528\u6237\u8fdb\u7a0b\u4e2d\u7684\u7528\u6237\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u8fdb\u7a0b\u4e4b\u95f4\u901a\u8fc7IPC\u8fdb\u884c\u901a\u4fe1\u3002\n\u4f8b\u5982\uff0cFTP\u5ba2\u6237\u7aef\u53ef\u80fd\u53ea\u901a\u8fc7\u4e0e\u5176\u4ed6\u7528\u6237\u8fdb\u7a0b\u901a\u4fe1\u6765\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u5e76\u5c06\u5176\u5b58\u50a8\u5728USB Key\u4e2d\uff0c\u800c\u4e0d\u9700\u8981\u5185\u6838\u7684\u4efb\u4f55\u5e72\u9884\u3002\u5185\u6838\u53ea\u4fdd\u8bc1\u8fdb\u7a0b\u7684\u7279\u6743\u5206\u79bb\u548c\u9694\u79bb\u3002\n\u8fd9\u79cd\u5fae\u5185\u6838\u8bbe\u8ba1\u5177\u6709\u6709\u8da3\u7684\u5b89\u5168\u5c5e\u6027\u3002\u518d\u6b21\u5047\u8bbeUSB\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5b58\u5728\u6f0f\u6d1e\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u653b\u51fb\u8005\u5c06\u80fd\u591f\u63a7\u5236\u5728\u7528\u6237\u533a\u57df\u8fd0\u884c\u7684USB\u9a71\u52a8\u7a0b\u5e8f\u8fdb\u7a0b(\u7cfb\u7edf\u8fdb\u7a0b6)\uff0c\u4f46\u968f\u540e\u5c06\u7ed1\u5b9a\u5230\u6b64\u8fdb\u7a0b\uff0c\u65e0\u6cd5\u7acb\u5373\u4f7f\u7528\u66f4\u5e7f\u6cdb\u7684\u6743\u9650\u8fd0\u884c\uff0c\u65e0\u8bba\u8fd9\u4e9b\u6743\u9650\u662f\u5185\u6838\u6743\u9650\u8fd8\u662f\u5176\u4ed6\u8fdb\u7a0b(\u4f8b\u5982FTP\u5ba2\u6237\u7aef)\u7684\u6743\u9650\u3002\n\u56e0\u6b64\uff0c\u653b\u51fb\u8005\u5fc5\u987b\u5229\u7528\u989d\u5916\u7684\u6f0f\u6d1e\u624d\u80fd\u6a2a\u5411\u79fb\u52a8\uff0c\u4e0e\u5355\u4e00\u5185\u6838\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5b89\u5168\u6539\u8fdb\u3002\n\u7d2b\u7ea2\u8272\u7684\u5fae\u6838\u88ab\u79f0\u4e3a\u9506\u77f3\u3002\u5b83\u662f\u7528C++\u7f16\u5199\u7684\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u63cf\u8ff0\u4e86\u8be5\u5185\u6838\u7684\u4e00\u4e9b\u76f8\u5173\u5185\u90e8\u7ed3\u6784\u3002\n\u8be5\u7cfb\u7edf\u88ab\u7ec4\u7ec7\u6210\u5728\u7528\u6237\u533a\u57df\u4e2d\u8fd0\u884c\u7684\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0c\u7f51\u7edc\u5806\u6808\u662f\u5728\u7528\u6237\u9886\u57df\u8fd0\u884c\u7684\u7ec4\u4ef6\u3002USB\u9a71\u52a8\u7a0b\u5e8f\u4e5f\u662f\u5728\u7528\u6237\u533a\u57df\u8fd0\u884c\u7684\u7ec4\u4ef6\u3002\n\u8fd9\u4e9b\u7ec4\u4ef6\u901a\u8fc7IPC\u5f7c\u6b64\u4ea4\u4e92\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u8ba8\u8bba\u5b83\u4eec\u7684\u63a5\u53e3\u3002\n\u5bf9\u7ec4\u4ef6\u6ca1\u6709\u4e25\u683c\u7684\u7f16\u7a0b\u8bed\u8a00\u8981\u6c42\uff1a\u5b83\u4eec\u53ef\u4ee5\u7528C++\u3001Rust\u3001Go\u6216\u5176\u4ed6\u8bed\u8a00\u7f16\u5199\uff0c\u5e76\u901a\u8fc7IPC\u8fdb\u884c\u4ea4\u4e92\uff0c\u6ca1\u6709\u95ee\u9898\u3002\u4f8b\u5982\uff0cUSB\u9a71\u52a8\u7a0b\u5e8f\u662f\u7528C++\u7f16\u5199\u7684\uff0c\u800c\u7f51\u7edc\u5806\u6808\u662f\u7528Rust\u7f16\u5199\u7684\u3002\n\u5f53\u6d89\u53ca\u5230\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5b83\u4eec\u5728\u79f0\u4e3adevhost\u7684\u8fdb\u7a0b\u4e2d\u5408\u5e76\u5728\u4e00\u8d77\u3002devhost\u662f\u4e00\u4e2a\u5305\u542b\u591a\u5c42\u9a71\u52a8\u7a0b\u5e8f\u5806\u6808\u7684\u8fdb\u7a0b\u3002\u4f8b\u5982\uff1a\n\u8fd9\u91cc\u6709\u4e09\u4e2a\u9b54\u9b3c\u3002\u4f8b\u5982\uff0cDevhost\u8fdb\u7a0b3\u5305\u542bAHCI\u9a71\u52a8\u7a0b\u5e8f\u3001SATA\u9a71\u52a8\u7a0b\u5e8f\u4ee5\u53caMinFS\u548cBlobFS\u6587\u4ef6\u7cfb\u7edf\uff0c\u6240\u6709\u8fd9\u4e9b\u7ec4\u4ef6\u90fd\u4f4d\u4e8e\u540c\u4e00\u8fdb\u7a0b\u4e2d\u3002\n\u8fd9\u4f1a\u524a\u5f31\u5206\u6bb5\u6a21\u578b\uff0c\u56e0\u4e3a\u73b0\u5728\u51e0\u4e2a\u7ec4\u4ef6\u5b9e\u9645\u4e0a\u662f\u540c\u4e00\u8fdb\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u4e00\u4e2a\u7ec4\u4ef6\u4e2d\u7684\u6f0f\u6d1e\u4e5f\u4f1a\u5f71\u54cd\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ec4\u4ef6\u3002\u4f46\u662f\uff0c\u4f3c\u4e4edevhosts\u7684\u7ec4\u7ec7\u65b9\u5f0f\u662f\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u8bbe\u5907\u5806\u6808\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u5728\u540c\u4e00devhost\u4e2d\u4e0d\u53ef\u80fd\u540c\u65f6\u5305\u542bUSB\u9a71\u52a8\u7a0b\u5e8f\u548cSATA\u9a71\u52a8\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u7ec6\u5206\u6a21\u5f0f\u7684\u597d\u5904\u4ecd\u7136\u5b58\u5728\u3002\n\u9506\u77f3\u901a\u8fc7\u4f7f\u7528CPU\u7684MMU(\u5185\u5b58\u7ba1\u7406\u5355\u5143)\uff0c\u4ee5\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u5178\u578b\u65b9\u5f0f\u4fdd\u62a4\u5b83\u7684\u5185\u5b58\u548c\u8fdb\u7a0b\u7684\u5185\u5b58\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u5730\u5740\u7a7a\u95f4\u662f\u7531\u9506\u77f3\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u3002\n\u7136\u800c\uff0c\u4e0e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u76f8\u53cd\uff0cIOMMU(\u8f93\u5165\u8f93\u51faMMU)\u5728Zircon\u4e0a\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\uff1a\u5b83\u662f\u7531\u5185\u6838\u7f16\u7a0b\u7684\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8bbe\u5907\u4e3b\u673a\u8fdb\u7a0b\u53ea\u80fd\u5728\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u4e0a\u6267\u884cDMA\u64cd\u4f5c\uff0c\u800c\u4e0d\u80fd\u5728\u5916\u90e8\u6267\u884cDMA\u64cd\u4f5c\u3002\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u786e\u4fdd\u8fdb\u7a0b\u9694\u79bb\u800c\u8a00\uff0cIOMMU\u4e0eMMU\u4e00\u6837\u91cd\u8981\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709IOMMU\uff0cdevhost\u8fdb\u7a0b\u53ea\u9700\u5bf9\u5185\u6838\u9875\u9762\u6267\u884cDMA\u64cd\u4f5c\u5e76\u8986\u76d6\u5176\u5185\u5bb9\u5373\u53ef\u3002\n\u6b64\u5916\uff0c\u5728x86\u4e0a\uff0cTSS I/O\u4f4d\u56fe(\u4efb\u52a1\u72b6\u6001\u6bb5)\u7528\u4e8e\u9650\u5236\u5bf9I/O\u7aef\u53e3\u7684\u8bbf\u95ee\uff0c\u5176\u65b9\u5f0f\u4e0e\u672c\u6587\u7684\u8ba8\u8bba\u65e0\u5173\u3002\nzircon\u901a\u8fc7\u53e5\u67c4\u7ba1\u7406\u5bf9\u7ec4\u4ef6\u7684\u8bbf\u95ee\uff0c\u53e5\u67c4\u5728Unix\u4e0a\u53ef\u4ee5\u88ab\u89c6\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6216\u901a\u7528\u8bbf\u95ee\u4ee4\u724c\u3002\n\u4e0d\u6d89\u53ca\u67af\u71e5\u7684\u7ec6\u8282\uff0c\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u5bf9\u8c61\u57fa\u672c\u4e0a\u662f\u7531\u53e5\u67c4\u652f\u6301\u7684\uff0c\u5e76\u4e14\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u8def\u5f84\u5b9e\u9645\u4e0a\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u53e5\u67c4\u3002\u540c\u6837\uff0c\u5185\u6838\u4e0d\u77e5\u9053\u4efb\u4f55\u5173\u4e8e\u540d\u79f0\u7a7a\u95f4\u548cirobject\u7684\u4fe1\u606f\uff0c\u5b83\u53ea\u77e5\u9053\u53e5\u67c4\u3002\u540d\u79f0\u7a7a\u95f4\u9a7b\u7559\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u56f4\u7ed5\u53e5\u67c4\u7684\u7528\u6237\u53cb\u597d\u7684\u5927\u5305\u88c5\u5668\u3002\n\u628a\u624b\u6709\u4e00\u79cd\uff0c\u4e5f\u6709\u4e00\u79cd\u6743\u5229\u3002\u7edd\u5927\u591a\u6570\u9506\u77f3\u7cfb\u7edf\u4f9d\u8d56\u53e5\u67c4\u6765\u7ba1\u7406\u8bbf\u95ee\u6743\u9650\u3002\u8981\u8bbf\u95ee\u67d0\u4e9b\u7c7b\u7684syscall\uff0c\u53e5\u67c4\u5fc5\u987b\u662f\u6b63\u786e\u7c7b\u578b\u7684\uff0c\u8981\u4f7f\u7528syscall\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\uff0c\u53e5\u67c4\u4e5f\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u6743\u9650\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0eUnix\u7cfb\u7edf\u76f8\u53cd\uff0c\u5185\u6838\u4e0d\u7406\u89e3\u7528\u6237\u7684\u6982\u5ff5\u3002\n\u4e00\u5207\u90fd\u5f52\u7ed3\u5230\u53e5\u67c4\u7684\u6982\u5ff5\u4e0a\uff0c\u4ece\u5b89\u5168\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u662f\u6211\u4eec\u6700\u611f\u5174\u8da3\u7684\uff1a\u653b\u51fb\u8005\u901a\u5e38\u4f1a\u8bd5\u56fe\u83b7\u5f97\u6bd4\u4ed6\u4eec\u62e5\u6709\u7684\u66f4\u597d\u7684\u53e5\u67c4\u3002\n\u867d\u7136\u4e0d\u603b\u662f\u6700\u65b0\u7684\uff0c\u4f46\u5b98\u65b9\u6587\u4ef6\u5f88\u6e05\u695a\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u9700\u8981\u5f3a\u8c03\u7684\u3002\u5b83\u663e\u793a\u9700\u8981\u54ea\u4e9b\u53e5\u67c4\u6765\u6267\u884c\u54ea\u4e9b\u7c7b\u7684syscall\u3002\n\u5728\u7f13\u89e3\u65b9\u9762\uff0cFuchsia\u4f7f\u7528ASLR(userland\u5fc5\u9009)\u3001DEP\u3001SafeStack\u3001ShadowCallStack\u3001AutoVarInit\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cZircon\u5185\u6838\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u8fdb\u884c\u7f16\u8bd1\u3002\n\u5f53\u8c08\u5230\u5b89\u5168\u5b9e\u8df5\u65f6\uff0c\u53ef\u4ee5\u5728Fuchsia\u4ee3\u7801\u4e2d\u6ce8\u610f\u5230\u5f88\u591a(\u5168\u90e8\uff1f)\u3002\u7ec4\u4ef6\u5177\u6709\u5173\u8054\u7684\u5355\u5143\u6d4b\u8bd5\u548c\u6a21\u7cca\u5668\u3002\u6a21\u7cca\u662f\u901a\u8fc7libfuzzer\u6765\u6a21\u7cca\u7ec4\u4ef6\u5185\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u901a\u8fc7syzkler\u6765\u6a21\u7cca\u7528\u6237\u66b4\u9732\u7684syscall\u6765\u5b8c\u6210\u7684\u3002\u4e5f\u6709\u5bf9ASSAN\u548cUBSAN\u6d88\u6bd2\u5242\u7684\u652f\u6301\uff0c\u4f46\u662f\u4f3c\u4e4e\u6ca1\u6709MSAN\u6216TSAN\u652f\u6301\u3002\n\u6700\u540e\uff0c\u5f53\u8c08\u5230\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u5982\u524d\u6240\u8ff0\uff0c\u7ec4\u4ef6\u53ef\u4ee5\u7528C++\u3001Go\u3001Rust\u7f16\u5199\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u6700\u5bb9\u6613\u51fa\u73b0\u7f16\u7a0b\u9519\u8bef\u7684\u8bed\u8a00\u662fC++\u3002\u5bf9\u4e8eC++\u4ee3\u7801\uff0c\u7ec4\u4ef6\u901a\u5e38\u4f1a\u8986\u76d6\u51e0\u4e2a\u8fd0\u7b97\u7b26\u6765\u6267\u884c\u5065\u5168\u6027\u68c0\u67e5\uff1b\u4f8b\u5982\uff0c[]\u8fd0\u7b97\u7b26(\u5728\u8bbf\u95ee\u6570\u7ec4\u65f6\u4f7f\u7528)\u7ecf\u5e38\u4f1a\u8d85\u8f7d\uff0c\u4ee5\u786e\u4fdd\u7d22\u5f15\u5728\u6570\u7ec4\u8303\u56f4\u5185\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6ea2\u51fa\u6216\u4e0b\u6ea2\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u5728\u5bb9\u6613\u51fa\u9519\u7684\u8bed\u8a00\u4e0a\uff0c\u4e5f\u4f1a\u4e3b\u52a8\u91c7\u53d6\u4e00\u4e9b\u5b89\u5168\u63aa\u65bd\u3002\n\u7d2b\u7ea2\u8272\u4f7f\u7528\u5fae\u5185\u6838\uff0c\u5176\u653b\u51fb\u9762\u53d7\u81ea\u7136\u9650\u5236\uff1a\u5165\u53e3\u70b9\u5c11\uff0c\u903b\u8f91\u4e0d\u592a\u590d\u6742\u3002\n\u8be5\u7cfb\u7edf\u88ab\u7ec4\u7ec7\u6210\u5728\u7528\u6237\u533a\u57df\u4e2d\u8fd0\u884c\u7684\u7ec4\u4ef6\u3002\u8fd9\u5e26\u6765\u4e86\u826f\u597d\u7684\u5206\u6bb5\u5c5e\u6027\uff1a\u4ec5\u5f71\u54cd\u7ec4\u4ef6\u8fdb\u7a0b\u7684\u6f0f\u6d1e\u3002\n\u8fd9\u4e9b\u7ec4\u4ef6\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u8bf8\u5982Rust\u8fd9\u6837\u7684\u5b89\u5168\u8bed\u8a00\u7f16\u5199\uff0c\u5728\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u6839\u672c\u4e0d\u5b58\u5728\u51e0\u7c7b\u6f0f\u6d1e\u3002\n\u8fd9\u4e9b\u7ec4\u4ef6\u6709\u81ea\u5df1\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5c06\u5176\u653e\u5165\u6c99\u7bb1\u4e2d\uff0c\u5e76\u4e14\u5b8c\u5168\u4f4d\u4e8e\u7528\u6237\u7aef\u3002\u5185\u6838\u5bf9\u6b64\u4e00\u65e0\u6240\u77e5\u3002\n\u5bf9\u7ec4\u4ef6\u548csyscall\u7684\u8bbf\u95ee\u662f\u57fa\u4e8e\u53e5\u67c4\u7684\uff0c\u53e5\u67c4\u5145\u5f53\u5185\u6838\u77e5\u9053\u7684\u552f\u4e00\u4ee4\u724c\u3002\u5b83\u4eec\u88ab\u62bd\u8c61\u4e3a\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u5bf9\u8c61\u3002\n\u90a3\u4e48\uff0c\u5173\u4e8e\u5bcc\u5947\u897f\u4e9a\u7684\u5b89\u5168\u95ee\u9898\uff0c\u6211\u4eec\u80fd\u8bf4\u4e9b\u4ec0\u4e48\u5462\uff1f\u603b\u4f53\u800c\u8a00\uff0c\u5b83\u7684\u5185\u6838\u8bbe\u8ba1\u672c\u8d28\u4e0a\u6bd4Linux\u66f4\u5b89\u5168\uff0c\u56f4\u7ed5\u5b83\u7684\u7f13\u89e3\u63aa\u65bd\u548c\u5b89\u5168\u5b9e\u8df5\u4e5f\u6bd4Linux\u76ee\u524d\u91c7\u7528\u7684\u66f4\u597d\u3002\n\u5f53\u6d89\u53ca\u5230\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0cdevhost\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7ec4\u5408\u591a\u4e2a\u7ec4\u4ef6\u7684\u4e8b\u5b9e\u7a0d\u5fae\u524a\u5f31\u4e86\u5206\u6bb5\u6a21\u578b\u3002\n\u4e0e\u6240\u6709\u5176\u4ed6\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\u76f8\u53cd\uff0c\u76f4\u63a5\u7784\u51c6Zircon\u5185\u6838\u4f3c\u4e4e\u76f8\u5f53\u56f0\u96be\u3002\u5728\u7cfb\u7edf\u4e2d\u9762\u5411\u4e16\u754c\u7684\u90e8\u5206(USB\u3001\u84dd\u7259\u3001\u7f51\u7edc\u5806\u6808\u7b49)\u4e0a\u6210\u529f\u7684RCE(\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c)\u53ea\u4f1a\u8ba9\u60a8\u63a7\u5236\u76ee\u6807\u7ec4\u4ef6\uff0c\u4f46\u5b83\u4eec\u5728\u72ec\u7acb\u7684\u7528\u6237\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u60a8\u62e5\u6709\u7684\u53e5\u67c4\u53ef\u4ee5\u8bbf\u95ee\u7684\u6709\u9650\u6570\u91cf\u7684syscall\u5c06\u6743\u9650\u63d0\u5347\u5230\u5185\u6838\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5c06\u5176\u4ed6\u7ec4\u4ef6\u4f5c\u4e3a\u76ee\u6807\u800c\u4e0d\u662f\u5185\u6838\uff0c\u5e76\u5c06\u91cd\u70b9\u653e\u5728\u53ef\u4ee5\u901a\u8fc7IPC\u4e0e\u4e4b\u5bf9\u8bdd\u5e76\u4e14\u60a8\u77e5\u9053\u5176\u5177\u6709\u6709\u8da3\u53e5\u67c4\u7684\u7ec4\u4ef6\u4e0a\u4f3c\u4e4e\u66f4\u5bb9\u6613\u3002\n\u4e3a\u4e86\u597d\u73a9\uff0c\u6211\u4eec\u51b3\u5b9a\u5728\u7cfb\u7edf\u7684\u67d0\u4e9b\u90e8\u5206\u505a\u4e00\u4e9b\u6f0f\u6d1e\u7814\u7a76\uff0c\u770b\u770b\u6211\u4eec\u80fd\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u8d70\u591a\u8fdc\uff0c\u770b\u770bFuchsia\u603b\u4f53\u4e0a\u826f\u597d\u7684\u5b89\u5168\u5c5e\u6027\u662f\u5426\u771f\u7684\u5151\u73b0\u4e86\u4ed6\u4eec\u7684\u627f\u8bfa\u3002\n\u5c06USB\u8bbe\u5907\u8fde\u63a5\u5230\u673a\u5668\u65f6\uff0c\u4f5c\u4e3aUSB\u679a\u4e3e\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0cFuchsia\u5c06\u4ece\u8bbe\u5907\u83b7\u53d6\u63cf\u8ff0\u7b26\u8868\u3002\u8fd9\u662f\u7531USB Devhost\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\u5b8c\u6210\u7684\u3002\u8be5\u7ec4\u4ef6\u5728\u5904\u7406\u914d\u7f6e\u63cf\u8ff0\u7b26\u8868\u65f6\u5b9e\u9645\u4e0a\u5b58\u5728\u9519\u8bef\uff1a\n//\u8bfb\u53d6\u914d\u7f6e\u63cf\u8ff0\u7b26\u5934\u4ee5\u786e\u5b9a\u5927\u5c0fusb_configuration_description_t config_desc_Header\uff1bsize_t Actual\uff1bstatus=GetDescriptor(usb_dt_config\uff0cconfig\uff0c0\uff0c&amp\uff1bconfig_desc_header\uff0csizeof(Config_Desc_Header)\uff0c&amp\uff1bActual)\uff1bif(status==ZX_OK&amp\uff1b&amp\uff1bActual\uff01=sizeof(Config_Desc_Header)){status=ZX\u3002}if(status\uff01=ZX_OK){zxlogf(error\uff0c&#34\uff1b%s\uff1aGetDescriptor(USB_DT_CONFIG)FAILED\\n&#34\uff1b\uff0c__func__)\uff1breturn status\uff1b}uint16_t config_desc_size=letoh16(config_desc_header\u3002wTotalLength)\uff1bauto*config_desc=new(&amp\uff1bac)uint8_t[config_desc_size]\uff1b\u5982\u679c(\uff01\u4ea4\u6d41\u3002check()){return ZX_ERR_NO_MEMORY\uff1b}CONFIG_DESCS_[CONFIG]\u3002Reset(config_desc\uff0cconfig_desc_size)\uff1b//\u8bfb\u53d6\u5b8c\u6574\u914d\u7f6e\u63cf\u8ff0\u7b26status=GetDescriptor(USB_DT_CONFIG\uff0cconfig\uff0c0\uff0cconfig_desc\uff0cconfig_desc_size\uff0c&amp\uff1bActual)\uff1bIF(status=ZX_OK&amp\uff1b&amp\uff1bActual\uff01=config_desc_size){status=ZX_ERR_IO\uff1b}if(status\uff01=ZX_OK){zxlogf(\u3002%s\uff1aGetDescriptor(USB_DT_CONFIG)\u5931\u8d25\\n&#34\uff1b\uff0c__func__)\uff1b\u8fd4\u56de\u72b6\u6001\uff1b}\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u9996\u5148\uff0c\u8be5\u7ec4\u4ef6\u83b7\u53d6\u5177\u6709\u56fa\u5b9a\u5927\u5c0f\u7684config_desc_headerstructure\uff1b\u7136\u540e\uff0c\u5b83\u8bfb\u53d6\u8be5\u7ed3\u6784\u7684wTotalLength\u5b57\u6bb5\uff0c\u5206\u914d\u6b64\u5927\u5c0f\u7684\u7f13\u51b2\u533a\uff0c\u7136\u540e\u8fd9\u4e00\u6b21\u91cd\u65b0\u83b7\u53d6\u8868\uff0c\u68c0\u7d22\u5168\u90e8\u6570\u636e\u3002\n\u5728USB\u5806\u6808\u7684\u540e\u9762\uff0cwTotalLength\u503c\u88ab\u4fe1\u4efb\u4e3a\u7ed3\u6784\u7684\u603b\u5927\u5c0f\uff0c\u8fd9\u5728\u8fd9\u91cc\u662f\u6709\u610f\u4e49\u7684\u3002\n\u95ee\u9898\u662f\uff0c\u5728\u7b2c\u4e00\u6b21\u83b7\u53d6\u548c\u7b2c\u4e8c\u6b21\u83b7\u53d6\u4e4b\u95f4\uff0cUSB\u8bbe\u5907\u53ef\u80fd\u5df2\u7ecf\u4fee\u6539\u4e86wTotalLength\u503c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u7b2c\u4e8c\u6b21\u83b7\u53d6\u4e4b\u540e\uff0cwTotalLength\u53ef\u80fd\u5927\u4e8e\u521d\u59cb\u503c\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cUSB\u5806\u6808\u7684\u5176\u4f59\u90e8\u5206\u4ecd\u5c06\u4fe1\u4efb\u5b83\uff0c\u5e76\u5c06\u6267\u884c\u8d8a\u754c\u8bbf\u95ee\u3002\n\u63d0\u9192\u4e00\u4e0b\uff0cUSB\u5806\u6808\u5728\u7528\u6237\u7aef\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u5728\u5185\u6838\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5\u5b83\u4e0d\u662f\u4e00\u4e2a\u5185\u6838\u7f3a\u9677\u3002\n\u5728\u6d4f\u89c8USB\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u51fd\u6570\u5b58\u5728\u660e\u663e\u7684\u5806\u6808\u6ea2\u51fa\uff1a\nzx_status_t HidDevice\uff1a\uff1aHidDeviceGetReport(hid_report_type_t rpt_type\uff0cuint8_t rpt_id\uff0cuint8_t*out_report_data\uff0csize_t report_count\uff0csize_t*out_report_tual){input_report_size_t Need=GetReportSizeById(rpt_id\uff0cstatic_cast&lt\uff1bReportType&gt\uff1b(Rpt_Type))\uff1breport_count){return ZX_ERR_BUFFER_TOO_Small\uff1b}uint8_t\u62a5\u544a[HID_MAX_REPORT_LEN]\uff1bsize_t Actual=0\uff1bZX_STATUS_t STATUS=HIDBUS_\u3002GetReport(rpt_type\uff0crpt_id\uff0creport\uff0cRequired\uff0c&amp\uff1bActual)\uff1b/*.*/}\n\u7b80\u800c\u8a00\u4e4b\uff0cGetReportSizeById()\u51fd\u6570\u8fd4\u56de\u4ee5\u524d\u4eceUSB\u8bbe\u5907\u83b7\u5f97\u768416\u4f4d\u503c\u3002HID_MAX_REPORT_LEN\u7684\u503c\u4e3a8192\u3002\u5728\u8fd9\u91cc\uff0c\u5bf9GetReport()\u7684\u8c03\u7528\u53ef\u4ee5\u7528USB\u63a7\u5236\u7684\u6570\u636e\u6ea2\u51fa\u62a5\u544a\u6570\u7ec4\u3002\n\u8fd9\u9879\u529f\u80fd\u4f3c\u4e4e\u6ca1\u6709\u76f8\u5173\u7684\u7528\u6237\u53ef\u4ee5\u8ba9\u5b83\u6210\u4e3aUSB\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u5b83\u662f\u4e00\u4e2a\u6709\u70b9\u4e4f\u5473\u7684\u6f0f\u6d1e\u3002\u53e6\u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528SafeStack\u7f13\u89e3\u65f6\uff0c\u62a5\u544a\u6570\u7ec4\u5b9e\u9645\u4e0a\u4f4d\u4e8e\u4e0d\u5b89\u5168\u5806\u6808\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6ea2\u51fa\u62a5\u544a\u6570\u7ec4\u5c06\u4e0d\u5141\u8bb8\u653b\u51fb\u8005\u8986\u76d6\u8fd4\u56de\u6307\u4ee4\u6307\u9488\u3002\nResponseT RSP(\u72b6\u6001)\uff1bIF(\u72b6\u6001==\u72b6\u6001\uff1a\uff1ak\u62d2\u7edd){IF(\uff01RSP\u3002ParseReject(Rsp_Payload)){bt_log(trace\uff0c&#34\uff1bL2CAP&#34\uff1b\uff0c&#34\uff1bcmd\uff1a\u5ffd\u7565\u683c\u5f0f\u9519\u8bef\u7684\u547d\u4ee4\u62d2\u7edd\uff0c\u5927\u5c0f%zu&#34\uff1b\uff0crsp_payload\u3002size())\uff1breturn ResponseHandlerAction\uff1a\uff1akCompleteOutbound Transaction\uff1b}return InvokeResponseCallback(&amp\uff1bRSP_CB\uff0cstd\uff1a\uff1aMove(RSP))\uff1b}\u3002\n\u4f7f\u7528rsp_payload\u8c03\u7528ParseReject()\u65b9\u6cd5\uff0crsp_payload\u5305\u542b\u4efb\u610f\u5927\u5c0f\u7684\u63a5\u6536\u6570\u636e\u5305\u3002\u8be5\u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\uff1a\nBool CommandHandler\uff1a\uff1aResponse\uff1a\uff1aParseReject(const ByteBuffer&amp\uff1brej_payload_buf){auto&amp\uff1brej_payload=rej_payload_buf\u3002AS&lt\uff1bCommandRejectPayload&gt\uff1b()\uff1bReject_Reason_=static_cast&lt\uff1bRejectReason&gt\uff1b(letoh16(rej_payload.\u3002\u539f\u56e0))\uff1b/*.*/}\u3002\n\u5728\u8fd9\u91cc\uff0c\u6709\u6548\u8d1f\u8f7d\u7a81\u7136\u88ab\u89c6\u4e3aCommandRejectPayload\u7ed3\u6784\uff0c\u6ca1\u6709\u660e\u663e\u7684\u957f\u5ea6\u68c0\u67e5\u3002\u8fd9\u53ef\u80fd\u662f\u8d8a\u754c\u8bbf\u95ee\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c.as\uff1b&gt\uff1b\u6307\u4ee4\u4f1a\u81ea\u52a8\u6267\u884c\u957f\u5ea6\u68c0\u67e5\uff1a\n//\u4f7f\u7528\u8fb9\u754c\u68c0\u67e5\u5c06\u57fa\u7840\u7f13\u51b2\u533a\u8f6c\u6362\u4e3a\u7ed9\u5b9a\u7c7b\u578b\u3002\u5141\u8bb8\u7f13\u51b2\u533a\u5927\u4e8e//T\u3002\u7528\u6237\u8d1f\u8d23\u68c0\u67e5\u7b2c\u4e00\u4e2asizeof(T)\u5b57\u8282//\u662f\u5426\u8868\u793aT\u7684\u6709\u6548\u5b9e\u4f8b\u3002\u6a21\u677f&lt\uff1btypeName T&gt\uff1bconst T&amp\uff1bas()const{//std\uff1a\uff1ais_trivial_v\u5c06\u66f4\u6709\u529b\u5730\u4fdd\u8bc1\u7f13\u51b2\u533a\u5305\u542b\u6709\u6548\u7684T\u5bf9\u8c61\uff0c//\u4f46\u4e0d\u5141\u8bb8\u5f3a\u5236\u8f6c\u6362\u4e3a\u5177\u6709\u6709\u7528\u6784\u9020\u51fd\u6570\u7684\u7c7b\u578b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4//\u6570\u636e\u7f16\u7801\u7684//\u672a\u521d\u59cb\u5316\u5b57\u6bb5\u9519\u8bef/\u3002static_assert(std\uff1a\uff1ais_trivially_copy_v&lt\uff1bT&gt\uff1b\uff0c&#34\uff1b\u65e0\u6cd5\u91cd\u65b0\u89e3\u91ca\u5b57\u8282&#34\uff1b)\uff1bZX_Assert(size()&gt\uff1b=sizeof(T))\uff1breturn*reInterprete_cast&lt\uff1bconst T*&gt\uff1b(data())\uff1b}\u3002\n\u56e0\u6b64\uff0c\u8fd9\u53ea\u662f\u84dd\u7259\u7ec4\u4ef6\u7684\u62d2\u7edd\u670d\u52a1(DoS)\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u4ece\u5229\u7528\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6f0f\u6d1e\u3002\nStatus ServiceSearchResponse\uff1a\uff1aParse(Const ByteBuffer&amp\uff1bbuf){/*.*/if(buf.\u3002size()&lt\uff1b(2*sizeof(Uint16_T){bt_log(spew\uff0c&#34\uff1bsdp&#34\uff1b\uff0c&#34\uff1b\u5305\u592a\u5c0f\uff0c\u65e0\u6cd5\u89e3\u6790&#34\uff1b)\uff1b\u8fd4\u56de\u72b6\u6001(HostError\uff1a\uff1akPacketMalform)\uff1b}/*.*/size_t read_size=sizeof(Uint16_T)\uff1b/*.*/uint16_t\u8bb0\u5f55\u8ba1\u6570=betoh16(buf\u3002\u89c6\u56fe(READ_SIZE)\u3002AS&lt\uff1buint16_t&gt\uff1b()\uff1bread_size+=sizeof(Uint16_T)\uff1bif((buf.\u3002size()-read_size-sizeof(Uint8_T))&lt\uff1b(sizeof(ServiceHandle)*Record_Count){bt_log(spew\uff0c&#34\uff1bsdp&#34\uff1b\uff0c&#34\uff1b\u6570\u636e\u5305\u5bf9\u4e8e%d\u4e2a\u8bb0\u5f55&#34\uff1b\uff0cRecords_count)\uff1b\u8fd4\u56de\u72b6\u6001(HostError\uff1a\uff1akPacketMalform)\uff1b}(uint16_t i=0\uff1bi&lt\uff1bRecords_count\uff1bi+\u3002view(read_size+i*sizeof(ServiceHandle))\uff1bSERVICE_RECORD_HANDLE_LIST_\u3002emplace_back(betoh32(\u67e5\u770b\u3002as&lt\uff1buint32_t&gt\uff1b())\uff1b}/*.*/}\u3002\n\u8fd9\u91cc\u7684bug\u975e\u5e38\u6e05\u695a\uff1abuf.size()-read_size\u53ef\u4ee5\u7b49\u4e8e\u96f6\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u65e0\u7b26\u53f7\u8868\u8fbe\u5f0f(buf.size()-read_size-sizeof(Uint8_T))\u5305\u88c5\u5e76\u53d8\u4e3a\u6b63\u6570\uff0c\u8fd9\u610f\u5473\u7740\u957f\u5ea6\u68c0\u67e5\u6210\u529f\u3002\n\u7136\u540e\uff0c\u4ee3\u7801\u8fed\u4ee3\u5e76\u6267\u884c\u8d8a\u754c\u8bbf\u95ee.\u3002\u9664\u4e86\u8fd9\u4e00\u6b21\uff0c\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e9b\u7ed3\u6784\uff1a\nconst BufferView ByteBuffer\uff1a\uff1aview(size_t pos\uff0csize_t size)const{ZX_ASSERT_MSG(pos&lt\uff1b=this-&gt\uff1bsize()\uff0c&#34\uff1b\u65e0\u6548\u504f\u79fb\u91cf(pos=%zu)&#34\uff1b\uff0cpos)\uff1breturn BufferView(data()+pos\uff0cstd\uff1a\uff1amin(size\uff0cthis-&gt\uff1bsize()-pos))\uff1b}\u3002\nview()\u65b9\u6cd5\u6355\u83b7\u8d8a\u754c\u8bbf\u95ee\u3002\u518d\u8bf4\u4e00\u904d\uff0c\u8fd9\u53ea\u662f\u84dd\u7259\u7ec4\u4ef6\u7684ados\uff0c\u4e00\u70b9\u4e5f\u4e0d\u6709\u8da3\uff01\uff1a&#39\uff1b(\u3002\nFUHSIA\u9644\u5e26\u4e86\u9002\u7528\u4e8eAArch64\u548cx86_64\u7684\u5d4c\u5165\u5f0f\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u3002\u76ee\u524d\u8fd8\u4e0d\u5b8c\u5168\u6e05\u695a\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\uff1b\u53ef\u80fd\u662f\u4e3a\u4e86\u4fc3\u8fdb\u8fc1\u79fb\u5230Fuchsia\uff0c\u8ba9\u6765\u5bbeAndroid\u6216Chrome OS\u7cfb\u7edf\u5728VM\u4e0a\u8fd0\u884c\u5e76\u6267\u884cAndroid\u6216Chrome OS\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7ba1\u7406\u7a0b\u5e8f\u5728VMcall\u4e0a\u5b9e\u73b0PVCLOCK\u670d\u52a1\u3002\u6709\u4e86\u8fd9\u9879\u670d\u52a1\uff0c\u5ba2\u6237\u5185\u6838\u53ef\u4ee5\u901a\u8fc7\u4ee5\u5ba2\u6237\u7269\u7406\u5730\u5740(GPA)\u4e3a\u53c2\u6570\u6267\u884cvmcall\u6307\u4ee4\u6765\u8be2\u95ee\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u7684\u65f6\u95f4\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5c06\u65f6\u95f4\u7ed3\u6784\u5199\u5165\u5185\u5b58\u4e2d\u7ed9\u5b9a\u7684GPA\u3002\n\u4f46\u662f\uff0cvmcall\u6307\u4ee4\u5728\u6765\u5bbe\u7528\u6237\u4e2d\u5b9e\u9645\u4e0a\u662f\u5408\u6cd5\u7684\uff0c\u5e76\u4e14\u7cfb\u7edf\u7ba1\u7406\u7a0b\u5e8f\u4e0d\u4f1a\u9a8c\u8bc1\u8be5vmcall\u662f\u5426\u6765\u81ea\u6765\u5bbe\u5185\u6838\u3002\u56e0\u6b64\uff0c\u6765\u5bbe\u7528\u6237\u4ec5\u80fd\u4f7f\u7528\u4efb\u4f55GPA\u6267\u884cvmcall\uff0c\u5e76\u8986\u76d6\u6765\u5bbe\u5185\u6838\u5185\u5b58\u3002\n\u8fd9\u53ef\u7528\u4e8e\u4ece\u6765\u5bbe\u7528\u6237\u5230\u6765\u5bbe\u5185\u6838\u7684\u6743\u9650\u63d0\u5347\u3002\u4e00\u65e6\u5728\u6765\u5bbe\u5185\u6838\u4e2d\uff0c\u653b\u51fb\u8005\u62e5\u6709\u66f4\u591a\u53ef\u7528\u7684\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u4ece\u90a3\u91cc\u7814\u7a76\u548c\u5229\u7528VM\u9003\u9038\u6f0f\u6d1e\u3002\nZX_THREAD_WRITE_STATE()\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u8bbe\u7f6e\u6302\u8d77\u7ebf\u7a0b\u7684\u5bc4\u5b58\u5668\u3002\u53ea\u9700\u7ebf\u7a0b\u4e0a\u7684\u4e00\u4e2a\u53e5\u67c4\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6b64syscall\uff0c\u5e76\u4e14\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55userland\u7a0b\u5e8f\u90fd\u5141\u8bb8\u521b\u5efa\u7ebf\u7a0b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u6b64syscall\u3002\n\u5176\u4e2d\uff0c\u6b64\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u4fee\u6539\u7f16\u7801FPUstate\u7684\u5bc4\u5b58\u5668\uff0c\u7279\u522b\u662fx86\u4e0a\u7684MXCSR\u5bc4\u5b58\u5668\u3002\u8fd9\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a32\u4f4d\u5bc4\u5b58\u5668\uff0c\u5176\u4fdd\u7559\u4f4d\u5e94\u8be5\u4fdd\u6301\u4e3a\u96f6\u3002\u95ee\u9898\u662f\uff0c\u9506\u77f3\u4e0d\u5141\u8bb8\u4fee\u6539\u8fd9\u4e9b\u4fdd\u7559\u4f4d\u3002\n\u901a\u8fc7\u4f7f\u7528ZX_THREAD_WRITE_STATE()\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06MXCSR\u8bbe\u7f6e\u4e3a0xFFFFFFFF\uff0c\u5e76\u4e14\u5f53\u6302\u8d77\u7684\u7ebf\u7a0b\u6062\u590d\u65f6\u4f1a\u5f15\u53d1\u81f4\u547d\u7684#GP\u5f02\u5e38\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u6838\u6b7b\u673a\uff1a\n\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u4e00\u573a\u65e0\u6cd5\u5229\u7528\u7684\u6050\u614c\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u53d6\u5f97\u8fdb\u5c55\uff1a\u81f3\u5c11\u6211\u4eec\u8bbe\u6cd5\u51fb\u4e2d\u4e86\u5185\u6838\u3002\n\u5728x86\u4e0a\uff0c\u4e3a\u4e86\u4ece\u4e2d\u65ad\u6216\u5f02\u5e38\u8fd4\u56de\uff0c\u9700\u8981\u4f7f\u7528iretq\u6307\u4ee4\u3002\u5982\u679c\u8bd5\u56fe\u8fd4\u56de\u5230\u975e\u89c4\u8303\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8fd4\u56de\u5730\u5740\u57280x0000800000000000-0xFFFF7FFFFFFFFFF\u8303\u56f4\u5185\uff0c\u5219\u6b64\u6307\u4ee4\u5c06\u51fa\u9519(#GP)\u3002\n\u6b64\u6545\u969c\u662f\u7279\u6b8a\u7684\uff1a\u5b83\u662f\u901a\u8fc7\u5df2\u52a0\u8f7d\u5230gs.base\u5bc4\u5b58\u5668\u4e2d\u7684\u7528\u6237\u57df\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8(TLS)\u63a5\u6536\u7684\uff0c\u4f46\u5e26\u6709\u5185\u6838\u7684CPL(\u5f53\u524d\u7279\u6743\u7ea7\u522b)\u3002gs.base\u5bc4\u5b58\u5668\u57fa\u672c\u4e0a\u662f\u4fdd\u5b58\u6307\u5411TLS\u7684SA\u6307\u9488\u768464\u4f4d\u5bc4\u5b58\u5668\u3002\n\u5f53\u4ece\u4e2d\u65ad\u6216\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u65f6\uff0c\u9506\u77f3\u4e0d\u4f1a\u9a8c\u8bc1\u8fd4\u56de\u5730\u5740\u662f\u5426\u89c4\u8303\u3002\nzircon\u4e0d\u80fd\u6b63\u786e\u5904\u7406iretq\u751f\u6210\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5c06\u5185\u6838TLS\u91cd\u65b0\u5b58\u50a8\u5728#GP\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002\n\u8fd9\u4e24\u8005\u7684\u7ed3\u5408\u610f\u5473\u7740\u6709\u53ef\u80fd\u5728\u5185\u6838\u4e2d\u5236\u9020iretq\u6545\u969c\uff0c\u5e76\u4f7f\u7528userland TLS\u6267\u884c\u6545\u969c\u5904\u7406\u7a0b\u5e8f\uff01\nZircon\u4e0a\u7684\u5185\u6838TLS\u662f\u4e00\u4e2ax86_ercppu\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u4ee3\u7801\u6267\u884c\u7684\u6709\u7528\u5b57\u6bb5\uff0c\u6bd4\u5982gpf_return_target(\u5982\u4e0b\u6240\u793a)\u3002\n\u4f7f\u7528ZX_THREAD_WRITE_STATE()\u66f4\u6539\u6302\u8d77\u7ebf\u7a0b\u7684%RIP\u5bc4\u5b58\u5668\uff0c\u5e76\u5728\u5176\u4e2d\u653e\u7f6e\u4e00\u4e2a\u975e\u89c4\u8303\u503c\uff0c\u59820x00FFFFFFFFFFFFFF\u3002\u8fd8\u8981\u5c06gs.base\u7684\u503c\u66f4\u6539\u4e3a\u6211\u4eec\u5c06\u79f0\u4e3aFakeTlsAddr\u7684\u7279\u5b9a\u503c\u3002\n\u5f53\u7ebf\u7a0b\u6062\u590d\u65f6\uff0c\u5185\u6838\u5c06\u8fd4\u56det\u3002\n..", "note_en": "Fuchsia is a new operating system developed by Google,targeting the AArch64 and x86_64 architectures. While little is known about thepurpose of this OS and where it will be used, it seems plausible that it aims atreplacing Android on smartphones and Chrome OS on laptops.\n In the interest of acquiring knowledge on an OS that could possibly run onmillions of devices in the future, we decided to give a quick look at Fuchsia,learn about its inner design, security properties, strengths and weaknesses,and find ways to attack it.\n  The most common form of kernel design today is  monolithic kernels. Forexample, the Linux and BSD kernels are all monolithic, and being based on Linux,the Android and Chrome OS kernels are monolithic as well.\n A monolithic kernel is typically very big, embeds all device drivers and networkstacks, has hundreds of syscalls, and simply said provides all systemfunctionalities.\n The inner design of monolithic kernels varies from kernel to kernel, but overallthe following internals tend to be common:\n  One clear security problem of monolithic kernels is that any vulnerability in aninternal system component will affect all of the kernel. Suppose, in the schemaabove, that the USB driver has an exploitable memory corruption: since thedriver runs within the kernel space, an attacker that exploits this vulnerabilitygains control of all of the kernel.\n  A micro kernel is a type of kernel designed to be very small, as its nameindicates, implementing only a limited number of core features, such asscheduling, exception handling, memory management, a few device drivers (ifneeded) and a few syscalls. The rest of the components are moved to userland,and are not part of the kernel.\n   Here the VFS layer, socket layer, networks stacks, file systems and devicedrivers are moved to userland in dedicated user processes, which communicatebetween one another via IPCs.\n For example, an FTP client may fetch data from the network and store it in aUSB key only by communicating with other userland processes, without anyintervention by the kernel. The kernel only ensures privilege separation andisolation of the processes.\n This micro kernel design has interesting security properties. Suppose once againthat there is a vulnerability in the USB driver; in this case, an attacker willbe able to take control of the USB driver process running in userland ( Sys Process 6),but will then be bound to this very process with no opportunity to immediatelyrun with wider privileges, whether they be kernel privileges, or privileges ofother processes (the FTP client for instance).\n The attacker must therefore exploit additional vulnerabilities to move laterally,which is a strong security improvement compared to monolithic kernels.\n Fuchsia&#39;s micro kernel is called Zircon. It is written in  C++. We describehere some relevant internals of this kernel.\n The system is organised in  components which run in userland. The networkstack, for example, is a component that runs in userland. The USB drivers, too,are components that run in userland.\n The components interact with one another via IPCs, the interfaces of which wewon&#39;t discuss here.\n  There is no strict programming language requirements for components: they can bewritten in  C++,  Rust,  Go, or other, and interact via IPCs withoutproblems. For example, the USB drivers are written in  C++, and the networkstack is instead coded in  Rust.\n When it comes to device drivers, they get folded together in processes called devhosts. A devhost is a process that contains several layers of a driverstack. For example:\n  There are three devhosts here. The  Devhost Process 3 for example containsthe AHCI driver, the SATA driver, and the  MinFS and  BlobFS file systems.All of these components live within the same process.\n This kind of weakens the segmentation model because now several components areactually part of the same process, so a vulnerability in one component willaffect the other components of the process too. However, it appears thatdevhosts are organized in a way that only a single device stack can be in aprocess, typically implying that it&#39;s not possible to have the USB driver andthe SATA driver in the same devhost. Therefore, the benefits of the segmentationmodel hold.\n Zircon protects its memory and that of the processes by using the CPU&#39;s  MMU( Memory Management Unit),in a manner that is typical of modern OSes: each process has an address space,and this address space is context-switched by Zircon.\n Contrary to other OSes however, the  IOMMU( Input-Output MMU),plays an important role on Zircon: it is programmed by the kernel so that eachdevhost process can perform DMA operations only on its own address space andnot outside.\n The IOMMU is therefore as important as the MMU to ensure process isolation,because without it, a devhost process could simply perform DMA operationsagainst the kernel pages and overwrite their contents.\n Additionally, on x86, the  TSS I/O Bitmap( Task State Segment) isused to limit access to I/O ports, in a way that is not relevant to discusshere.\n  Zircon manages accesses to components via  handles, which can be seen as file descriptors on Unix, or general access tokens.\n Without going into boring details, the objects in the namespace are basicallybacked by handles, and a  path in the namespace actually corresponds to ahandle. Again, the kernel doesn&#39;t know anything about the namespaces and theirobjects, it only knows about handles. Namespaces live in userland and can beseen as big user-friendly wrappers around handles.\n Handles have a  kind and a  right. The Zircon syscalls, for the vastmajority, depend on handles to manage access rights. To access certain classesof syscalls, a handle must be of the right  kind, and to do specific operationswith a syscall, the handle must also have the right  right.\n It is to be noted that the kernel has no understanding of the notion of  user,contrary to Unix systems.\n Everything comes down to the notion of handle, and that&#39;s what we are mainlyinterested in from a security point of view: attackers will typically try toobtain better handles than the ones they have.\n Although not always up-to-date, the  official documentationis rather clear, and nothing particular needs to be highlighted. It shows whichhandles are required to perform which classes of syscalls.\n In terms of mitigations, Fuchsia uses  ASLR (mandatory for userland), DEP,  SafeStack, ShadowCallStack, AutoVarInit. The Zircon kernel iscompiled with all of that by default.\n When it comes to security practices, it can be noted in the Fuchsia code thata lot of (all?) components have associated unit tests and fuzzers. The fuzzingis done via  libfuzzer to fuzz internalstructures within components, and via  syzkallerto fuzz the user-exposed syscalls. There is also support for the ASan and UBSan sanitizers,however no  MSan or TSan support seemsto be present.\n Finally when it comes to programming languages, as said earlier, the componentscan be written in  C++,  Go,  Rust. Arguably the language most prone toprogramming errors used here is  C++. For  C++ code, the componentsusually override several operators to perform sanity checks; for example, the [] operator (used when accessing arrays) is often overloaded to makesure that the index is in the range of the array and doesn&#39;t overflow orunderflow. Therefore, even on &#34;error-prone&#34; languages, some security measuresare proactively put in place.\n Fuchsia uses a micro kernel whose attack surface is limited by nature: fewentry points, less complex logic.\n The system is organized in components which run in userland. This brings goodsegmentation properties: a vulnerability that affects a component compromisesonly its process.\n The components can actually be written in safe languages such as  Rust,in which several classes of vulnerabilities simply do not exist.\n The components have their own virtual filesystem that can be sandboxed andthat lives entirely on the user side. The kernel knows nothing about it.\n Access to components and syscalls is based on handles, which act as the onlytokens the kernel knows about. They are abstracted as objects in the namespace.\n So what can we say about security in Fuchsia? Overall, its kernel design isinherently safer than Linux&#39;s, and the mitigations and security practices aroundit are better than those currently adopted in Linux.\n  The fact that devhosts combine several components within one process weakensthe segmentation model a bit when it comes to device drivers.\n Contrary to every other major OS, it appears rather difficult to target theZircon kernel directly. A successful RCE ( Remote Code Execution) on the world-facing parts of thesystem (USB, Bluetooth, network stack, etc) will only give you control over thetargeted components, but they run in independent userland processes, not in thekernel. From a component, you then need to escalate privileges to the kernelusing the limited number of syscalls you can access with the handles you have.Overall, it seems easier to target other components rather than the kernel, andto focus on components that you can talk to via IPC and that you know haveinteresting handles.\n For fun, we decided to do some vulnerability research in some parts of thesystem, to see how far we could go in limited time, and see whether the overallgood security properties of Fuchsia really lived up to their promises.\n  When attaching a USB device to the machine, Fuchsia will fetch  descriptor tablesfrom the device as part of the USB enumeration process. This is done by acomponent in the USB devhost. The component actually has a bug when handling configuration descriptor tables:\n // read configuration descriptor header to determine size usb_configuration_descriptor_t  config_desc_header ; size_t  actual ; status  =  GetDescriptor ( USB_DT_CONFIG ,  config ,  0 ,  &amp; config_desc_header ,  sizeof ( config_desc_header ),  &amp; actual ); if  ( status  ==  ZX_OK  &amp;&amp;  actual  !=  sizeof ( config_desc_header ))  {  status  =  ZX_ERR_IO ; } if  ( status  !=  ZX_OK )  {  zxlogf ( ERROR ,  &#34;%s: GetDescriptor(USB_DT_CONFIG) failed \\n &#34; ,  __func__ );  return  status ; } uint16_t  config_desc_size  =  letoh16 ( config_desc_header . wTotalLength ); auto *  config_desc  =  new  ( &amp; ac )  uint8_t [ config_desc_size ]; if  ( ! ac . check ())  {  return  ZX_ERR_NO_MEMORY ; } config_descs_ [ config ]. reset ( config_desc ,  config_desc_size ); // read full configuration descriptor status  =  GetDescriptor ( USB_DT_CONFIG ,  config ,  0 ,  config_desc ,  config_desc_size ,  &amp; actual ); if  ( status  ==  ZX_OK  &amp;&amp;  actual  !=  config_desc_size )  {  status  =  ZX_ERR_IO ; } if  ( status  !=  ZX_OK )  {  zxlogf ( ERROR ,  &#34;%s: GetDescriptor(USB_DT_CONFIG) failed \\n &#34; ,  __func__ );  return  status ; }\n Let&#39;s see what&#39;s going on here. First, the component fetches the  config_desc_headerstructure, which has a fixed size; then, it reads the  wTotalLength field of the structure,allocates a buffer of this size, and then re-fetches the table this timeretrieving the full amount of data.\n Later in the USB stack, the  wTotalLength value is trusted as being the totalsize of the structure, which kind of makes sense here.\n The problem is, between the first fetch and the second fetch the USB devicecould have modified the  wTotalLength value. In fact, after the second fetch, wTotalLength could be bigger than the initial value; in that case the restof the USB stack will still trust it, and will perform out-of-bounds accesses.\n As a reminder, the USB stack runs in userland and not in the kernel, so it&#39;s nota kernel bug.\n While navigating through the USB code, we noticed a function that had an apparentstack overflow:\n zx_status_t  HidDevice :: HidDeviceGetReport ( hid_report_type_t  rpt_type ,  uint8_t  rpt_id ,  uint8_t *  out_report_data ,  size_t  report_count ,  size_t *  out_report_actual )  {  input_report_size_t  needed  =  GetReportSizeById ( rpt_id ,  static_cast &lt; ReportType &gt; ( rpt_type ));  if  ( needed  ==  0 )  {  return  ZX_ERR_NOT_FOUND ;  }  if  ( needed  &gt;  report_count )  {  return  ZX_ERR_BUFFER_TOO_SMALL ;  }  uint8_t  report [ HID_MAX_REPORT_LEN ];  size_t  actual  =  0 ;  zx_status_t  status  =  hidbus_ . GetReport ( rpt_type ,  rpt_id ,  report ,  needed ,  &amp; actual );  /* ... */ }\n In short, the  GetReportSizeById() function returns a 16-bit value previouslyobtained from the USB device.  HID_MAX_REPORT_LEN has the value  8192. Here,the call to  GetReport() can overflow the  report array with USB-controllabledata.\n It appears that there is no relevant user of this function that could make itUSB-triggerable, so it&#39;s a bit of an uninteresting bug. Note also that with the SafeStack mitigation, the  report array is actually in the  unsafe stack,which means that overflowing it will not allow the attacker to overwrite thereturn instruction pointer.\n ResponseT  rsp ( status ); if  ( status  ==  Status :: kReject )  {  if  ( ! rsp . ParseReject ( rsp_payload ))  {  bt_log ( TRACE ,  &#34;l2cap&#34; ,  &#34;cmd: ignoring malformed Command Reject, size %zu&#34; ,  rsp_payload . size ());  return  ResponseHandlerAction :: kCompleteOutboundTransaction ;  }  return  InvokeResponseCallback ( &amp; rsp_cb ,  std :: move ( rsp )); }\n The  ParseReject() method gets called with  rsp_payload, which containsthe received packet, of an arbitrary size. The method is implemented as follows:\n bool  CommandHandler :: Response :: ParseReject ( const  ByteBuffer &amp;  rej_payload_buf )  {  auto &amp;  rej_payload  =  rej_payload_buf . As &lt; CommandRejectPayload &gt; ();  reject_reason_  =  static_cast &lt; RejectReason &gt; ( letoh16 ( rej_payload . reason ));  /* ... */ }\n Here the payload is suddenly treated as a  CommandRejectPayload structure,with no apparent length check. This could be an out-of-bounds access, but in factthe  .As&lt;&gt; directive automatically performs the length check:\n // Converts the underlying buffer to the given type with bounds checking. The buffer is allowed // to be larger than T. The user is responsible for checking that the first sizeof(T) bytes // represents a valid instance of T. template  &lt; typename  T &gt; const  T &amp;  As ()  const  {  // std::is_trivial_v would be a stronger guarantee that the buffer contains a valid T object,  // but would disallow casting to types that have useful constructors, which might instead cause  // uninitialized field(s) bugs for data encoding/decoding structs.  static_assert ( std :: is_trivially_copyable_v &lt; T &gt; ,  &#34;Can not reinterpret bytes&#34; );  ZX_ASSERT ( size ()  &gt;=  sizeof ( T ));  return  * reinterpret_cast &lt; const  T *&gt; ( data ()); }\n  Therefore, this is only a DoS ( Denial Of Service) of the Bluetooth componentand not an interesting bug from an exploitation point of view, (un)fortunately.\n Status  ServiceSearchResponse :: Parse ( const  ByteBuffer &amp;  buf )  {  /* ... */  if  ( buf . size ()  &lt;  ( 2  *  sizeof ( uint16_t )))  {  bt_log ( SPEW ,  &#34;sdp&#34; ,  &#34;Packet too small to parse&#34; );  return  Status ( HostError :: kPacketMalformed );  }  /* ... */  size_t  read_size  =  sizeof ( uint16_t );  /* ... */  uint16_t  record_count  =  betoh16 ( buf . view ( read_size ). As &lt; uint16_t &gt; ());  read_size  +=  sizeof ( uint16_t );  if  (( buf . size ()  -  read_size  -  sizeof ( uint8_t ))  &lt;  ( sizeof ( ServiceHandle )  *  record_count ))  {  bt_log ( SPEW ,  &#34;sdp&#34; ,  &#34;Packet too small for %d records&#34; ,  record_count );  return  Status ( HostError :: kPacketMalformed );  }  for  ( uint16_t  i  =  0 ;  i  &lt;  record_count ;  i ++ )  {  auto  view  =  buf . view ( read_size  +  i  *  sizeof ( ServiceHandle ));  service_record_handle_list_ . emplace_back ( betoh32 ( view . As &lt; uint32_t &gt; ()));  }  /* ... */ }\n The bug is rather clear here:  buf.size() - read_size can be equal to zero,and in that case, the whole unsigned expression  (buf.size() - read_size - sizeof(uint8_t))wraps and becomes positive, meaning that the length check succeeds.\n The code then iterates and performs out-of-bounds accesses... Except that onceagain, some constructions are used:\n const  BufferView  ByteBuffer :: view ( size_t  pos ,  size_t  size )  const  {  ZX_ASSERT_MSG ( pos  &lt;=  this -&gt; size (),  &#34;invalid offset (pos = %zu)&#34; ,  pos );  return  BufferView ( data ()  +  pos ,  std :: min ( size ,  this -&gt; size ()  -  pos )); }\n The  view() method catches out-of-bounds accesses. So again, this is only aDoS of the Bluetooth component, not interesting! :&#39;(\n Fuchsia comes with an embedded hypervisor for both AArch64 and x86_64. It isnot completely clear why this hypervisor is present; possibly, to facilitate thetransition to Fuchsia, by having a guest Android or Chrome OS system run in a VMand execute Android or Chrome OS applications.\n  The hypervisor implements a  pvclock service on  vmcall. With this service,the guest kernel can ask the time to the hypervisor, by executing the  vmcallinstruction with a  guest physical address (GPA) as argument. The hypervisorwrites the time structure into the given GPA in memory.\n However, the  vmcall instruction is actually legal in the guest userland, and thehypervisor does not verify that the  vmcall came from the guest kernel. Therefore,the guest userland can just execute  vmcall with whatever GPA and havethe guest kernel memory be overwritten.\n This can be used in privilege escalations from the guest userland to the guest kernel.Once in the guest kernel, the attacker has more hypervisor interfaces available,and from there a VM escape vulnerability can be researched and leveraged.\n The  zx_thread_write_state() syscall allows to set the registersof a suspended thread. This syscall is accessible with just a handle on thethread, and thread creation is allowed by default to any userland program, sowe can invoke this syscall.\n Among others, this syscall allows to modify the registers encoding the FPUstate, and in particular the  MXCSR register on x86. This is basically a32-bit register that has reserved bits that should remain set to zero. Theproblem is, Zircon doesn&#39;t disallow modifications to these reserved bits.\n By using  zx_thread_write_state() we can set  MXCSR to  0xFFFFFFFF, andwhen the suspended thread resumes a fatal  #GP exception is raised, resultingin a kernel panic:\n  Of course, this is only an unexploitable panic, but we&#39;re making progress: atleast we managed to hit the kernel.\n On x86, in order to return from an interrupt or an exception, the  iretqinstruction is used. This instruction will fault ( #GP) if attempting toreturn to a  non-canonical address, that is to say, if the return address isin the range  0x0000800000000000- 0xFFFF7FFFFFFFFFFF.\n This fault is special: it is received with the userland  thread-local storage(TLS) already loaded in the  gs.base register, but with the CPL ( Current Privilege Level)of the kernel. The  gs.base register is basically a 64-bit register that holdsa pointer to the TLS.\n   Zircon does not verify that the return addresses are canonical when returningfrom an interrupt or exception handler.\n Zircon does not handle correctly the  iretq-generated faults, and doesn&#39;trestore the kernel TLS in the  #GP handler.\n The combination of the two means that it is possible to make  iretq fault inthe kernel, and to have the fault handler execute with the userland TLS!\n The kernel TLS on Zircon is a  x86_percpu structure, which contains usefulfields for code execution, such as  gpf_return_target (as we will see below).\n Use  zx_thread_write_state() to change the  %rip register of thesuspended thread, and put a non-canonical value in it, such as 0x00FFFFFFFFFFFFFF. Also change the value of  gs.base to a specificvalue that we will call  FakeTlsAddr.\n  When the thread resumes, the kernel will return t\n......", "posttime": "2020-06-09 22:15:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,fuchsia,operating,\u5185\u6838", "title": "\u770b\u4e00\u770b\u65b0\u7684Fuchsia\u64cd\u4f5c\u7cfb\u7edf\u548c\u4e00\u4e9b\u9519\u8bef", "title_en": "A look at the new Fuchsia Operating System and some bugs", "transed": 1, "url": "https://blog.quarkslab.com/playing-around-with-the-fuchsia-operating-system.html", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "fuchsia", "operating", "\u5185\u6838"]}]