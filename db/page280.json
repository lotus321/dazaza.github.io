[{"category": "", "categoryclass": "", "imagename": "a8313aba4769aa15a1f18a323e80ea39.jpg", "infoid": 1002292, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51(CNN)\u6839\u636e\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u7814\u7a76\u51a0\u72b6\u75c5\u6bd2\u5728\u534e\u76db\u987f\u5531\u8bd7\u73ed\u6210\u5458\u4e2d\u7206\u53d1\u7684\u516c\u5171\u536b\u751f\u5b98\u5458\u53d1\u73b0\uff0c\u75c5\u6bd2\u53ef\u80fd\u6709\u591a\u79cd\u4f20\u64ad\u9014\u5f84\u3002\n\u5f53\u5c40\u91c7\u8bbf\u4e86\u65af\u5361\u5409\u7279\u5c71\u8c37\u5408\u5531\u56e2\u7684\u6240\u6709122\u540d\u6210\u5458\uff0c\u4ed6\u4eec\u5728\u75ab\u60c5\u7206\u53d1\u524d\u6bcf\u5468\u4e8c\u5f00\u4f1a\uff0c\u6301\u7eed\u4e862.5\u4e2a\u5c0f\u65f6\u3002\u4ed6\u4eec\u91cd\u70b9\u5173\u6ce8\u4e863\u67083\u65e5\u548c3\u670810\u65e5\u5728\u534e\u76db\u987f\u5dde\u5f17\u519c\u5c71\u4e3e\u884c\u7684\u4e24\u6b21\u5f69\u6392\u3002\n\u62a5\u9053\u79f0\uff0c\u670953\u4eba\u60a3\u75c5\uff0c\u4e24\u4eba\u6b7b\u4ea1\uff0c\u9664\u4e00\u4eba\u5916\uff0c\u6240\u6709\u4eba\u90fd\u53c2\u52a0\u4e86\u4e24\u6b21\u5f69\u6392\u3002\u62a5\u544a\u79f0\uff0c\u5df2\u786e\u8ba433\u4f8b\uff0c20\u4eba\u53ef\u80fd\u611f\u67d3\u3002\n3\u670810\u65e5\u7684\u5f69\u6392\u670961\u4eba\uff0c\u5176\u4e2d\u4e00\u540d\u6210\u5458\u62a5\u544a\u8bf4\u6709\u611f\u5192\u75c7\u72b6\u3002\u6839\u636e\u62a5\u544a\uff0c\u8be5\u4eba\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\uff0c\u662f\u536b\u751f\u5f53\u5c40\u786e\u8ba4\u7684\u7b2c\u4e00\u4f8b\u75c5\u4f8b\u3002\n\u6839\u636e\u65af\u5361\u5409\u7279\u53bf\u516c\u5171\u536b\u751f\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u53bf\u5b98\u5458\u57283\u670810\u65e5\u53d1\u5e03\u4e86\u793e\u4ea4\u758f\u8fdc\u5efa\u8bae\uff0c\u4f46\u5927\u591a\u6570\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e9b\u5efa\u8bae\u3002\n\u6ca1\u6709\u4eba\u62a5\u544a\u53c2\u52a0\u8bad\u7ec3\u7684\u4eba\u4e4b\u95f4\u6709\u8eab\u4f53\u63a5\u89e6\uff0c\u4f46\u4ed6\u4eec\u5750\u5f97\u5f88\u8fd1\u3002\u62a5\u9053\u79f0\uff0c\u6905\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a6-10\u82f1\u5bf8\uff0c\u4f46\u4e00\u4e9b\u6210\u5458\u4e4b\u95f4\u6709\u7a7a\u4f4d\u3002\n\u5408\u5531\u56e2\u5206\u6210\u4e24\u7ec4\u8fdb\u884c\u90e8\u5206\u7ec3\u4e60\u3002\u4ed6\u4eec\u8bf4\uff0c\u5728\u90a345\u5206\u949f\u7684\u4f1a\u8bae\u4e2d\uff0c\u6210\u5458\u4eec\u8d70\u5f97\u66f4\u8fd1\u4e86\u3002\n\u62a5\u544a\u79f0\uff0c\u6b4c\u5531\u884c\u4e3a\u672c\u8eab\u53ef\u80fd\u6709\u52a9\u4e8e\u901a\u8fc7\u6c14\u6eb6\u80f6\u7684\u6392\u653e\u4f20\u64ad\uff0c\u800c\u6c14\u6eb6\u80f6\u7684\u4f20\u64ad\u53d7\u5230\u53d1\u58f0\u54cd\u5ea6\u7684\u5f71\u54cd\u3002\u62a5\u544a\u8fd8\u8bf4\uff0c\u4e00\u4e9b\u88ab\u79f0\u4e3a\u8d85\u7ea7\u6392\u653e\u8005\u7684\u4eba\u5728\u6f14\u8bb2\u8fc7\u7a0b\u4e2d\u6bd4\u540c\u9f84\u4eba\u91ca\u653e\u66f4\u591a\u7684\u6c14\u6eb6\u80f6\u9897\u7c92\u3002\n\u8fd8\u670915\u5206\u949f\u7684\u70b9\u5fc3\u4f11\u606f\u65f6\u95f4\uff0c\u6709\u997c\u5e72\u548c\u6a59\u5b50\u3002\u62a5\u9053\u79f0\uff0c\u6210\u5458\u4eec\u5728\u6392\u7ec3\u524d\u540e\u79fb\u52a8\u4e86\u6905\u5b50\uff0c\u5e76\u805a\u96c6\u5728\u4e00\u4e2a\u6905\u67b6\u5468\u56f4\u3002\n\u62a5\u544a\u79f0\uff0c\u8fd9\u7a81\u663e\u4e86\u8eab\u4f53\u8ddd\u79bb\u7684\u91cd\u8981\u6027\uff0c\u5305\u62ec\u4fdd\u6301\u4eba\u4e0e\u4eba\u4e4b\u95f4\u81f3\u5c116\u82f1\u5c3a\u7684\u8ddd\u79bb\uff0c\u907f\u514d\u4eba\u7fa4\u805a\u96c6\u548c\u62e5\u6324\u7684\u5730\u65b9\uff0c\u4ee5\u53ca\u5728\u516c\u5171\u573a\u5408\u7a7f\u5e03\u8d28\u9762\u7f69\uff0c\u56e0\u4e3a\u5728\u8fd9\u573a\u6d41\u884c\u75c5\u671f\u95f4\uff0c\u5176\u4ed6\u793e\u4ea4\u8ddd\u79bb\u63aa\u65bd\u5f88\u96be\u7ef4\u6301\u3002\n\u62a5\u9053\u79f0\uff0c\u53c2\u4e0e\u8005\u57283\u670810\u65e5\u7ec3\u4e60\u540e\u4e00\u5929\u81f312\u5929\u5185\u51fa\u73b0\u75c7\u72b6\u3002\n\u62a5\u544a\u79f0\uff0c\u5927\u591a\u6570\u6b4c\u624b\u662f\u5973\u6027(84%)\uff0c\u5979\u4eec\u7684\u5e74\u9f84\u4e2d\u503c\u4e3a69\u5c81\u3002\u53ea\u670932%\u7684\u4eba\u62a5\u544a\u6709\u6f5c\u5728\u7684\u5065\u5eb7\u72b6\u51b5\u3002\n\u5408\u5531\u56e2\u4e8e3\u670815\u65e5\u7ed9\u6210\u5458\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u8ba9\u4ed6\u4eec\u77e5\u9053\u6709\u4e9b\u4eba\u751f\u75c5\u4e86\u3002\u5728\u536b\u751f\u5b98\u5458\u8054\u7cfb\u4ed6\u4eec\u65f6\uff0c\u8bb8\u591a\u4eba\u5df2\u7ecf\u81ea\u6211\u9694\u79bb\uff0c\u62a5\u544a\u8bf4\uff0c\u8fd9\u53ef\u80fd\u5df2\u7ecf\u7f13\u89e3\u4e86\u8fdb\u4e00\u6b65\u7684\u4f20\u64ad\u3002\n\u8fd9\u9879\u7814\u7a76\u662f\u7531\u65af\u5361\u5409\u7279\u53bf\u516c\u5171\u536b\u751f\u5b98\u5458\u8fdb\u884c\u7684\uff0c\u5e76\u53d1\u8868\u5728\u75be\u63a7\u4e2d\u5fc3\u7684\u53d1\u75c5\u7387\u548c\u6b7b\u4ea1\u7387\u5468\u62a5\u4e0a\u3002", "note_en": "(CNN)Public health officials studying the Covid-19 outbreak among members of a Washington choir found numerous ways the virus could have spread,  according to a report published by the Centers for Disease Control and Prevention.\n Authorities interviewed all 122 members of  the Skagit Valley Chorale, which met every Tuesday for 2.5 hours before the outbreak. They focused on two rehearsals held March 3 and March 10 in Mount Vernon, Washington.\n The report said 53 people were sickened and two died -- and all but one attended both rehearsals. The report said Thirty-three cases were confirmed, the report said, and 20 people had probable infections.\n    There were 61 people at the March 10 rehearsal, including one member who reported having had cold-like symptoms. That person tested positive for Covid-19 and was the first case identified by health authorities, according to the report.\n   County officials issued social distancing recommendations on March 10, but most people were probably not yet aware of them,  according to a statement from Skagit County Public Health.\n No one reported physical contact between the attendees at the practices, but they sat close together. The report said the chairs were 6-10 inches apart, but there were empty seats between some of the members.\n  The choir broke into two groups for part of the practice. Members moved closer together for that 45-minute session, they said.\n &#34;The act of singing, itself, might have contributed to transmission through emission of aerosols, which is affected by loudness of vocalization,&#34; the report said. The report also said that some people, known as superemitters, release more aerosol particles during speech than their peers.\n There was also a 15-minute snack break with cookies and oranges. Members moved the chairs before and after the rehearsal and congregated around a chair rack, the report said.\n &#34;This underscores the importance of physical distancing, including maintaining at least 6 feet between persons, avoiding group gatherings and crowded places, and wearing cloth face coverings in public settings where other social distancing measures are difficult to maintain during this pandemic,&#34; the report said.\n  Attendees developed symptoms between one day to 12 days after the March 10 practice, the report said.\n Most of the singers were women (84%) and their median age was 69, the report said. Only 32% reported having underlying health conditions.\n   The choir emailed members March 15 to let them know that some people had gotten sick. Many had self-quarantined by the time health officials contacted them, and the report said this may have mitigated further spread.\n The study was conducted by Skagit County Public Heath officials and published in the CDC&#39;s Morbidity and Mortality Weekly Report.", "posttime": "2020-05-16 03:47:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u4f20\u64ad,spread", "title": "\u51a0\u72b6\u75c5\u6bd2\u5982\u4f55\u4ece\u4e00\u540d\u6210\u5458\u4f20\u64ad\u5230\u534e\u76db\u987f\u5408\u5531\u56e2\u8bca\u624087%\u7684\u6b4c\u624b", "title_en": "How Coronavirus Spread From One Member To 87% of the Singers at a Washington Choir Practice", "transed": 1, "url": "https://edition.cnn.com/2020/05/13/us/coronavirus-washington-choir-outbreak-trnd/index.html", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u4f20\u64ad", "spread"]}, {"category": "", "categoryclass": "", "imagename": "0f67c4d73c74615fb85c3848ef9fafdb.png", "infoid": 1002291, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a8\u89c6\u6b63\u5728\u5f3a\u8feb\u6218\u533a\u6e38\u620f\u73a9\u5bb6\u4f7f\u7528\u4ed6\u4eec\u7684\u624b\u673a\u53f7\u7801\u767b\u5f55\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u79cd\u6b3a\u9a97\u4f5c\u5f0a\u8005\u7684\u65b9\u5f0f\u3002", "note_en": "Activision is forcing Warzone gamers to use their cellphone number to log in, and using it as a way to permaban cheaters. ", "posttime": "2020-05-16 03:46:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53ec\u5524,duty,\u4f5c\u5f0a\u8005", "title": "\u300a\u4f7f\u547d\u53ec\u5524\uff1a\u6218\u533a\u300b\u4f5c\u5f0a\u8005\u5f522FA\u6240\u6709", "title_en": "'Call of Duty: Warzone' Cheaters Are Getting Owned by 2FA", "transed": 1, "url": "https://www.vice.com/en_us/article/3azzyn/call-of-duty-warzone-cheaters-2fa-cellphone-number", "via": "", "real_tags": ["\u53ec\u5524", "duty", "\u4f5c\u5f0a\u8005"]}, {"category": "", "categoryclass": "", "imagename": "54acbfd043bcca4a1e999d75b1a9c538.jpg", "infoid": 1002290, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6797\u5fb7\u5c14\u5199\u9053\uff0c20\u4e16\u7eaa30\u5e74\u4ee3\uff0c\u5357\u8fbe\u79d1\u4ed6\u5dde\u8d85\u8fc780%\u7684\u4eba\u53e3\u751f\u6d3b\u5728\u519c\u6751\u5730\u533a\u3002\u8fd9\u4e9b\u5bb6\u5ead\u6df1\u53d7\u5e72\u65f1\u3001\u6c99\u5c18\u66b4\u3001\u8757\u866b\u4fb5\u88ad\u548c\u519c\u4f5c\u7269\u4ef7\u683c\u4e0b\u8dcc\u7684\u5f71\u54cd\u3002\u5927\u591a\u6570\u5bb6\u5ead\u6ca1\u6709\u81ea\u6765\u6c34\u3001\u7535\u3001\u4e2d\u592e\u4f9b\u6696\u6216\u7535\u8bdd\u670d\u52a1\u3002\u6839\u636e1930\u5e74\u7684\u4e00\u9879\u5dde\u8c03\u67e5\uff0c\u519c\u573a\u5987\u5973\u5e73\u5747\u6bcf\u5468\u5de5\u4f5c66\u5c0f\u65f6\u3002\u9664\u4e86\u7167\u770b\u5b69\u5b50\u548c\u505a\u5bb6\u52a1\u5916\uff0c\u4ed6\u4eec\u8fd8\u5728\u519c\u573a\u505a\u6237\u5916\u5de5\u4f5c\uff0c\u6709\u65f6\u8fd8\u4e3a\u4e86\u5de5\u8d44\u800c\u5de5\u4f5c\u3002\n\u4f46\u5bf9\u4e8e\u5987\u5973\u798f\u5229\u5021\u5bfc\u8005\u6765\u8bf4\uff0c\u519c\u6751\u5987\u5973\u82b1\u65f6\u95f4\u9605\u8bfb\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\n\u6765\u81ea\u5357\u8fbe\u79d1\u4ed6\u5dde\u963f\u65af\u6258\u91cc\u4e9a\u7684\u5987\u5973\u4ff1\u4e50\u90e8\u8d1f\u8d23\u4eba\u8fbe\u683c\u5c3c\u00b7\u6b23\u5fb7\u96f7\u514b(Dagney Hinderaker)\u5199\u9053\uff0c\u201c\u6bcf\u4e2a\u5973\u6027\uff0c\u65e0\u8bba\u5de5\u4f5c\u591a\u4e48\u52aa\u529b\uff0c\u90fd\u5fc5\u987b\u65f6\u4e0d\u65f6\u5730\u505c\u4e0b\u6765\u5a31\u4e50\u4e00\u4e0b\uff0c\u5373\u4f7f\u8fd9\u53ef\u80fd\u53ea\u662f\u4e00\u4e2a\u5076\u5c14\u7684\u665a\u4e0a\u6216\u5468\u65e5\u4e0b\u5348\u3002\u201d\u201c\u5982\u679c\u4ed6\u4eec\u613f\u610f\u5750\u4e0b\u6765\u770b\u4e66\uff0c\u4ed6\u4eec\u4f1a\u66f4\u52a0\u7cbe\u795e\u9971\u6ee1\uff0c\u601d\u8003\u7684\u4e8b\u60c5\u4e5f\u4f1a\u66f4\u591a\u3002\u201d\n\u6797\u5fb7\u5c14\u8ba4\u4e3a\uff0c\u5bf9\u8bb8\u591a\u5973\u6027\u6765\u8bf4\uff0c\u9605\u8bfb\u4f3c\u4e4e\u662f\u4e00\u79cd\u5408\u7406\u7684\u4f11\u95f2\u65b9\u5f0f\u3002\u5b83\u6bd4\u6536\u97f3\u673a\u66f4\u5b9e\u60e0\uff0c\u6bd4\u7535\u5f71\u9662\u66f4\u65b9\u4fbf\u3002\u4e00\u4e9b\u5987\u5973\u7ed9\u5979\u4eec\u7684\u5b69\u5b50\u8bfb\u4e66\uff0c\u4e00\u5bb6\u4eba\u4e00\u8d77\u5b66\u4e60\u5723\u7ecf\u3002\u4f46\u5973\u6027\u8bfb\u8005\u62a5\u544a\u8bf4\uff0c\u5979\u4eec\u9605\u8bfb\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u5b83\u5f88\u6709\u8da3\u3002\n\u4e00\u4f4d\u7f51\u53cb\u5199\u9053\uff1a\u201c\u90a3\u4e9b\u751f\u6d3b\u6700\u5355\u8c03\u7684\u4eba\u53ef\u80fd\u4f1a\u89c9\u5f97\u81ea\u5df1\u8131\u9896\u800c\u51fa\uff0c\u8fdb\u5165\u4e86\u4e00\u4e2a\u66f4\u5feb\u4e50\u7684\u751f\u6d3b\u9636\u6bb5\u3002\u201d\n\u5728\u5199\u7ed9\u201c\u519c\u6c11\u7684\u59bb\u5b50\u201d\u6742\u5fd7\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0c\u53e6\u4e00\u4f4d\u6765\u81ea\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u519c\u5987\u5ba3\u79f0\uff0c\u201c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u4e0d\u8981\u626b\u5730\uff1b\u7b80\u5316\u4f60\u7684\u7528\u9910\uff1b\u4f46\u8981\u817e\u51fa\u65f6\u95f4\u6765\u9605\u8bfb\u3001\u5b66\u4e60\u548c\u601d\u8003\u3002\u201d\n\u6700\u559c\u6b22\u7684\u4e66\u5305\u62ec\u8d5e\u6069\u00b7\u683c\u96f7\u7684\u897f\u90e8\u5c0f\u8bf4\u548c\u5176\u4ed6\u5f53\u4ee3\u5c0f\u8bf4\uff0c\u4ee5\u53ca\u7ecf\u5178\u4f5c\u54c1\uff0c\u5982\u201c\u50b2\u6162\u4e0e\u504f\u89c1\u201d\u3002\u636e\u62a5\u9053\uff0c\u53d7\u8fc7\u66f4\u591a\u6559\u80b2\u7684\u519c\u573a\u5973\u6027\u9605\u8bfb\u66f4\u591a\u7684\u975e\u865a\u6784\u7c7b\u4e66\u7c4d\uff0c\u4f46\u6240\u6709\u6559\u80b2\u6c34\u5e73\u7684\u5973\u6027\u90fd\u4f1a\u9605\u8bfb\u3002\n\u7136\u800c\uff0c\u6797\u5fb7\u5c14\u5199\u9053\uff0c\u9605\u8bfb\u6750\u6599\u7684\u83b7\u53d6\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u5357\u8fbe\u79d1\u4ed6\u5dde\u7684\u4e00\u540d\u5987\u5973\u62a5\u544a\u8bf4\uff0c\u90bb\u5c45\u4eec\u51d1\u94b1\u8ba2\u9605\u4e86\u5f53\u5730\u7684\u62a5\u7eb8\uff0c\u805a\u96c6\u5728\u4e00\u4e2a\u6216\u53e6\u4e00\u4e2a\u5bb6\u91cc\u9605\u8bfb\u3002\u53e6\u4e00\u4f4d\u89e3\u91ca\u8bf4\uff0c\u4e00\u5bb6\u5987\u5973\u4ff1\u4e50\u90e8\u7ed9\u5979\u5bc4\u6765\u4e86\u65e7\u6742\u5fd7\uff0c\u5979\u628a\u5b83\u4eec\u5206\u53d1\u7ed9\u4e86\u5979\u7684\u719f\u4eba\u3002\n\u5979\u5199\u9053\uff1a\u201c\u6211\u5229\u7528\u6bcf\u4e00\u4e2a\u673a\u4f1a\u6765\u4e86\u89e3\u6765\u7684\u4eba(\u53ef\u80fd\u662f\u4e3a\u4e86\u7ef5\u7f8a\u6216\u5176\u4ed6\u4e00\u4e9b\u5dee\u4e8b)\u662f\u5426\u559c\u6b22\u5403\u4e00\u4e9b\u3002\u201d\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u4efb\u4f55\u8425\u9500\u6d88\u606f\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\u968f\u65f6\u53d6\u6d88\u8ba2\u9605\u3002\n\u4e3a\u519c\u6751\u8bfb\u8005\u63d0\u4f9b\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u8d44\u6e90\u662f\u5357\u8fbe\u79d1\u4ed6\u5dde\u514d\u8d39\u56fe\u4e66\u9986\u59d4\u5458\u4f1a\u7684\u5de1\u56de\u56fe\u4e66\u9986\u8ba1\u5212\u3002\u4efb\u4f55\u4e00\u4e2a\u5c0f\u9547\u6216\u5bb6\u5ead\u56e2\u4f53\u90fd\u53ef\u4ee5\u7533\u8bf7\u516d\u4e2a\u6708\u7684\u501f\u9605\uff0c\u85cf\u4e66\u4ece20\u523070\u672c\u4e0d\u7b49\u3002\u8be5\u59d4\u5458\u4f1a\u8fd8\u5efa\u7acb\u4e86\u53bf\u56fe\u4e66\u9986\uff0c\u4e0d\u662f\u7531\u4e00\u5ea7\u4e13\u95e8\u7684\u5efa\u7b51\u7ec4\u6210\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u9879\u76ee\uff0c\u4f7f\u5b66\u6821\u3001\u90ae\u5c40\u3001\u5976\u6cb9\u5382\u548c\u519c\u820d\u90fd\u80fd\u4e70\u5230\u4e66\u3002\n\u5f53\u7136\uff0c\u73b0\u5728\u53bb\u90ae\u5c40\u53d6\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u5f15\u8d77\u7126\u8651\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8bb8\u591a\u56fe\u4e66\u9986\u90fd\u5728\u7528\u4ed6\u4eec\u7684\u7535\u5b50\u4e66\u85cf\u4e66\u7ed9\u6211\u4eec\u5e26\u6765\u5a31\u4e50\u3002\nJSTOR\u662f\u4e00\u4e2a\u9762\u5411\u5b66\u8005\u3001\u7814\u7a76\u4eba\u5458\u548c\u5b66\u751f\u7684\u6570\u5b57\u56fe\u4e66\u9986\u3002JSTOR Daily\u7684\u8bfb\u8005\u53ef\u4ee5\u5728JSTOR\u4e0a\u514d\u8d39\u8bbf\u95ee\u6211\u4eec\u6587\u7ae0\u80cc\u540e\u7684\u539f\u59cb\u7814\u7a76\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u4efb\u4f55\u8425\u9500\u6d88\u606f\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\u968f\u65f6\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "Lindell writes that more than 80 percent of South Dakota\u2019s population lived in rural areas in the 1930s. These households suffered immensely from drought, dust storms, grasshopper infestations, and falling crop prices. Most homes had no running water, electricity, central heating, or telephone service. Farm women spent an average of sixty-six hours a week working, according to a 1930 state survey. In addition to childcare and housework, they did outdoor work on their farms and sometimes worked for wages, too.\n    But to advocates for women\u2019s welfare, it was crucial that farm women took time to read.\n \u201cEvery women, no matter how hard she must work, must pause at times for recreation, even though it may be only an occasional evening or Sunday afternoon,\u201d Dagney Hinderaker, a women\u2019s club leader from Astoria, South Dakota, wrote. \u201cThey will be more refreshed and have more things to think about if they will sit down and read.\u201d\n To many women, Lindell argues, reading seemed like a justifiable form of leisure. It was more affordable than radio and more accessible than a movie theater. Some women read to their children, and families studied the Bible together. But female readers reported that they read largely because it was fun.\n \u201cThose whose lives are the most humdrum may feel themselves lifted out of the ordinary into a more joyous phase of living,\u201d one wrote.\n In a letter to  The Farmer\u2019s Wife magazine, another farm woman from Minnesota proclaimed, \u201cLet the floor go unswept if necessary; simplify your meals; but make time for reading, studying and thinking.\u201d\n Favorite books included Zane Grey westerns and other contemporary novels, as well as classics like  Pride and Prejudice. Farm women with more education reported reading more nonfiction books, but women of all educational levels read.\n However, Lindell writes, access to reading materials could be an issue. One South Dakota woman reported that neighbors pooled their money for a subscription to the local newspaper, gathering at one home or another to read it. Another explained that a women\u2019s club sent her old magazines, which she distributed among her acquaintances.\n \u201cI used every opportunity to learn whether someone who comes (perhaps about sheep or some other errand) would like some,\u201d she wrote.\n  You may unsubscribe at any time by clicking on the provided link on any marketing message.\n  Another important resource for rural readers was the South Dakota Free Library Commission\u2019s traveling library program. Any small town or group of families could request a six-month loan of a collection of anywhere from twenty to seventy books. The commission also set up county libraries consisting not of a dedicated building but a program making books available at schools, post offices, creameries, and farmhouses.\n Right now, of course, heading to a post office to pick up a book might cause anxiety. Fortunately, many libraries are keeping us entertained with their e-book collections.\n        JSTOR is a digital library for scholars, researchers, and students. JSTOR Daily readers can access the original research behind our articles for free on JSTOR.\n  You may unsubscribe at any time by clicking on the provided link on any marketing message.", "posttime": "2020-05-16 03:45:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u519c\u5987,farm,\u9605\u8bfb", "title": "\u9605\u8bfb\u8ba9\u519c\u5987\u4eec\u5ea6\u8fc7\u4e86\u5927\u8427\u6761", "title_en": "Reading Got Farm Women Through the Depression", "transed": 1, "url": "https://daily.jstor.org/how-reading-got-farm-women-through-the-depression/", "via": "", "real_tags": ["\u519c\u5987", "farm", "\u9605\u8bfb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002289, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PeerTube\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u9879\u76ee\uff0c\u5b83\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u5f00\u653e\u548c\u5206\u6563\u7684\u89c6\u9891\u201c\u7ba1\u9053\u201d\uff0c\u7528\u4e8e\u6258\u7ba1\u89c6\u9891\u5185\u5bb9\uff0c\u91c7\u7528\u5206\u5e03\u5f0f\u7ba1\u7406\u548c\u793e\u533a\u9a71\u52a8\u7684\u5f00\u53d1\u3002Chocobozzz\u5728\u6570\u5341\u4f4d\u8d21\u732e\u8005\u7684\u5e2e\u52a9\u4e0b\uff0c\u6295\u5165\u4e86\u8270\u82e6\u7684\u5de5\u7a0b\u5de5\u4f5c\u6765\u5efa\u7acb\u4e00\u4e2a\u4f1f\u5927\u7684\u5e73\u53f0\uff0c\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u770b\u5230\u5b83\u5145\u6ee1\u5185\u5bb9\u3002\n\u4e3a\u4e86\u5e2e\u52a9\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0cSourceHut\u627f\u8bfa\u6295\u51655000\u7f8e\u5143\u5f15\u5bfcPeerTube\u7f51\u7edc\u4e0a\u7684\u5185\u5bb9\u3002\u8fd9\u7b14\u94b1\u5c06\u7528\u4e8e\u5e2e\u52a9\u65b0\u7684\u5185\u5bb9\u521b\u4f5c\u8005\u5f00\u59cb\u4e3aPeerTube\u5236\u4f5c\u89c6\u9891\u3002\u6211\u4eec\u5c06\u652f\u4ed8\u4e00\u4e9b\u8bbe\u5907\u6765\u5e2e\u52a9\u60a8\u5165\u95e8\uff1a\u76f8\u673a\u3001\u9ea6\u514b\u98ce\u3001\u89c6\u9891\u91c7\u96c6\u5361\u7b49\u7b49\uff0c\u53ea\u8981\u9002\u5408\u60a8\u8981\u5236\u4f5c\u7684\u89c6\u9891\u7c7b\u578b\uff0c\u5916\u52a0200\u7f8e\u5143\u7684\u9884\u7b97\u5c06\u7531\u60a8\u81ea\u884c\u51b3\u5b9a\u524d\u51e0\u4e2a\u89c6\u9891\u7684\u8d39\u7528\u3002\u9700\u8981\u4e00\u53f0\u597d\u76f8\u673a\u5417\uff1f\u4e00\u5bf9\u6f02\u4eae\u7684\u9ea6\u514b\u98ce\u7528\u6765\u8fdb\u884c\u91c7\u8bbf\u5417\uff1f\u4e00\u67b6\u7528\u6765\u6355\u6349\u955c\u5934\u7684\u65e0\u4eba\u673a\uff1f\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u5427\u3002\u4f60\u8fd8\u5c06\u88ab\u5b89\u7f6e\u5728Liberapay\uff0c\u8fd9\u6837\u4f60\u7684\u52c7\u6c14\u5c31\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5efa\u7acb\u4e00\u79cd\u53ef\u6301\u7eed\u7684\u751f\u6d3b\u65b9\u5f0f\u3002\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u7231\u597d\u8981\u5206\u4eab\uff0c\u6709\u5173\u4e8e\u67d0\u4e00\u5b66\u79d1\u7684\u6df1\u5165\u77e5\u8bc6\u8981\u6559\uff0c\u6216\u8005\u4f60\u6709\u60f3\u8981\u70ab\u8000\u7684\u624d\u534e\uff0c\u6216\u8005\u6709\u4e00\u4e2a\u6211\u4eec\u6ca1\u6709\u60f3\u5230\u7684\u597d\u4e3b\u610f\uff0c\u8bf7\u53d1\u7535\u5b50\u90ae\u4ef6\u5230sr@cmpwn.com\uff0c\u4e3b\u9898\u884c\u662f\u201cPeerTube Bootstrap\u5e94\u7528\u7a0b\u5e8f\uff1a&lt\uff1b\u4f60\u7684\u540d\u5b57&&gt;34\uff1b\u201d(PeerTube Bootstrap application\uff1a&lt\uff1byour name&gt\uff1b&34\uff1b)(\u6ce8\uff1a\u201cPeerTube Bootstrap application\uff1a&lt\uff1byour name&&gt;34\uff1b\u201d)\u3002\u5305\u62ec\u4f60\u662f\u8c01\u548c\u4f60\u4e3a\u4ec0\u4e48\u8981\u7533\u8bf7\u7684\u7b80\u77ed\u603b\u7ed3\uff0c\u4ee5\u53ca\u4f60\u60f3\u8981\u5236\u4f5c\u7684\u89c6\u9891\u7684\u7ec6\u8282\u3002\u544a\u8bc9\u6211\u4eec\u4e3a\u4ec0\u4e48\u5f00\u653e\u6587\u5316\u5bf9\u4f60\u5f88\u91cd\u8981\u3002\n\u60a8\u4e00\u5b9a\u8fd8\u6ca1\u6709\u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\u5b9a\u671f\u53d1\u5e03\u5185\u5bb9\u3002\u6211\u4eec\u5e0c\u671b\u8d44\u52a9\u65b0\u7684\u5185\u5bb9\u521b\u5efa\u8005\uff0c\u800c\u4e0d\u662f\u73b0\u6709\u7684\u5185\u5bb9\u521b\u5efa\u8005\u30021\u4e2a\u3002\n\u6211\u4eec\u5e0c\u671b\u60a8\u81f3\u5c11\u5236\u4f5c5\u4e2a\u89c6\u9891\u3002\u5982\u679c\u5728\u90a3\u4e4b\u540e\u4f60\u8ba4\u4e3a\u89c6\u9891\u5236\u4f5c\u4e0d\u9002\u5408\u4f60\uff0c\u6211\u4eec\u5c06\u6536\u56de\u8bbe\u5907\uff0c\u4f60\u5c31\u53ef\u4ee5\u6446\u8131\u56f0\u5883\u4e86\u3002\n\u4e00\u65e6\u4f60\u5f00\u59cb\u5728Liberapay\u4e0a\u6bcf\u6708\u81f3\u5c11\u8d5a20\u7f8e\u5143\uff0c\u6211\u4eec\u5c06\u5728\u6240\u6709\u521b\u5efa\u8005\u4e4b\u95f4\u5e73\u5206\u6b63\u5728\u8fdb\u884c\u7684\u6258\u7ba1\u6210\u672c\uff1a\u76ee\u524d\u662f45\u7f8e\u5143/\u6708\u3002\u4f60\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u671f\u671b\u652f\u4ed8\u8d85\u8fc7\u4f60Liberapay\u6536\u5165\u768425%\uff0c\u5176\u4f59\u7684\u5c06\u7531SourceHut\u6765\u652f\u4ed8\u3002\n\u6211\u4eec\u7684\u5b9e\u4f8b\u4f4d\u4e8espacepub.space\u3002\u6211\u4eec\u5c06\u5904\u7406\u670d\u52a1\u5668\u7684\u6280\u672f\u7ba1\u7406\uff0c\u5e76\u4e3a\u60a8\u8bbe\u7f6e\u5165\u95e8\u6240\u9700\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u5c06\u5171\u540c\u521b\u5efa\u4e00\u4e2a\u5f00\u653e\u6587\u5316\u521b\u5efa\u8005\u793e\u533a\uff0c\u4ed6\u4eec\u76f8\u4e92\u652f\u6301\uff0c\u5f62\u6210\u5145\u6ee1\u6d3b\u529b\u7684\u516c\u5730\u3002\u8ba9\u6211\u4eec\u5171\u540c\u6253\u9020PeerTube\u7cbe\u5f69\u7684\u5e73\u53f0\uff01\n\u5982\u679c\u4f60\u5df2\u7ecf\u53e6\u5916\u505a\u4e86\u51e0\u4e2a\u89c6\u9891\uff0c\u90a3\u5f88\u597d--\u4e00\u5b9a\u8981\u5728\u4f60\u7684\u7533\u8bf7\u4e2d\u8ba9\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u4f1a\u914c\u60c5\u51b3\u5b9a\u7684\u3002\u21a9\ufe0e", "note_en": "PeerTube is an excellent project which aims to create an open anddecentralized video \u201ctube\u201d for hosting video content with distributed governanceand community-driven development. Chocobozzz, with the help of dozens ofcontributors, has put in the hard engineering work to build a great platform,and now we want to see it filled with content.\n  To help make this happen,  SourceHut is committing $5,000 to bootstrap contenton the PeerTube network. This money will be used to help new content creatorsstart making videos for PeerTube. We\u2019ll pay for some equipment to get youstarted: cameras, microphones, video capture cards, and so on, whatever isappropriate for the kind of videos you intend to make, plus a $200 budget tospend at your discretion on the first few videos. Need a nice camera? A coupleof nice microphones for conducting interviews? A drone for capturing footage?Let\u2019s make it happen. You\u2019ll also be set up on  Liberapay so that youraudience can help you build a sustainable lifestyle.\n If you have an interesting hobby to share, in-depth knowledge on a subject toteach, or a talent you\u2019d like to show off, or a great idea we haven\u2019t thoughtof, please send an email to  sir@cmpwn.com with thesubject line \u201cPeerTube bootstrap application: &lt;your name&gt;&#34;. Include ashort summary of who you are and why you want to apply, and details on whatkinds of videos you\u2019d like to make. Tell us why open culture is important toyou.\n  You must not already be regularly publishing content on another platform.We\u2019re looking to fund new content creators, not existing ones.  1\n   We expect you to make at least 5 videos. If you decide video creation isn\u2019tfor you after that, we\u2019ll take the equipment back and you\u2019ll be off the hook.\n Once you start earning at least $20/month on Liberapay, we\u2019ll split theongoing cost of hosting evenly among all creators: currently $45/mo. You willnever be expected to pay more than 25% of your Liberapay income; SourceHutwill cover the rest.\n Our instance is at  spacepub.space. We\u2019ll handle the technicaladministration of the server and set you up with the resources you need to getstarted, and together we\u2019ll create a community of open-culture creators whosupport one another to produce a vibrant commons. Let\u2019s help make PeerTube agreat platform!\n If you\u2019ve already made a few videos on the side, that\u2019s fine - be sure to let us know in your application, and we\u2019ll exercise discretion.  \u21a9\ufe0e", "posttime": "2020-05-16 03:45:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "content,\u89c6\u9891", "title": "PeerTube Content Bootstrap\u57fa\u91d1", "title_en": "The PeerTube content bootstrap fund", "transed": 1, "url": "https://sourcehut.org/blog/2020-05-15-peertube-bootstrap-fund/", "via": "", "real_tags": ["content", "\u89c6\u9891"]}, {"category": "", "categoryclass": "", "imagename": "f057d335e11fc2a0bd2c09b880196a3d.png", "infoid": 1002288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929iOS\u7684Signal\u6d4b\u8bd5\u7248\u5305\u62ec\u5bf9GIF\u52a8\u753b\u641c\u7d22\u7684\u652f\u6301\u3002Signal iOS\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u652f\u6301\u53d1\u9001\u548c\u63a5\u6536GIF\uff0c\u4f46\u4eca\u5929\u7684\u6d4b\u8bd5\u7248\u589e\u52a0\u4e86\u5728Signal\u5185\u6d4f\u89c8\u548c\u641c\u7d22\u6d41\u884c\u7684GIF\u7684\u652f\u6301\u3002\u6211\u4eec\u4e4b\u524d\u5ba3\u5e03\u5728Signal Android\u4e2d\u5bf9\u52a8\u753bGIF\u641c\u7d22\u63d0\u4f9b\u8bd5\u9a8c\u6027\u652f\u6301\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u628a\u5b83\u5e26\u5230iOS\u4e0a\uff0c\u540c\u65f6\u8fd8\u5bf9\u8be5\u8fc7\u7a0b\u8fdb\u884c\u4e86\u4e00\u4e9b\u9690\u79c1\u66f4\u65b0\u3002\u50cfGIPHY\u8fd9\u6837\u7684GIF\u641c\u7d22\u5f15\u64ce\u63d0\u4f9b\u4e86\u7f51\u7edcAPI\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8f7b\u677e\u5730\u663e\u793aGIF\u7684\u8d8b\u52bf\u548c\u641c\u7d22\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4eba\u7ed9\u4f60\u53d1\u4e86\u4e00\u6761\u9080\u8bf7\u7684\u77ed\u4fe1\uff0c\u4f60\u53ef\u80fd\u60f3\u56de\u590d\u4e00\u6761\u8bf4\u201c\u6211\u5f88\u5174\u594b\u201d\u7684\u77ed\u4fe1\u3002\u4f7f\u7528\u96c6\u6210\u7684GIF\u641c\u7d22\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528GIF\u641c\u7d22\u201c\u6211\u5f88\u5174\u594b\u201d\uff0c\u7136\u540e\u53d1\u9001\u5176\u4e2d\u4e00\u4e2a\u7ed3\u679c\u3002\u5f53\u7136\uff0c\u5f53\u4f60\u8f93\u5165\u641c\u7d22\u65f6\uff0c\u5b83\u4f1a\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u5230GIF\u641c\u7d22\u5f15\u64ce\uff1a\u4e3a\u4e86\u5bf9GIPHY\u9690\u85cf\u4f60\u7684\u641c\u7d22\u8bcd\uff0cSignal\u670d\u52a1\u5145\u5f53\u9690\u79c1\u4fdd\u62a4\u4ee3\u7406\u3002\u67e5\u8be2GIPHY\u65f6\uff1a\u4fe1\u53f7\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u5230\u4fe1\u53f7\u670d\u52a1\u7684TCP\u8fde\u63a5\u3002\u4fe1\u53f7\u670d\u52a1\u6253\u5f00\u5230GIPHY HTTPS API\u7ec8\u7ed3\u70b9\u7684TCP\u8fde\u63a5\uff0c\u5e76\u5728APP\u548cGIPHY\u4e4b\u95f4\u4e2d\u7ee7\u5b57\u8282\u3002Signal APP\u901a\u8fc7\u4ee3\u7406TCP\u8fde\u63a5\u4e00\u76f4\u534f\u5546TLS\u5230GIPHY HTTPS API\u7aef\u70b9\u3002\n\u7531\u4e8e\u901a\u4fe1\u662f\u901a\u8fc7TLS\u4e00\u76f4\u5230GIPHY\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u4fe1\u53f7\u670d\u52a1\u6c38\u8fdc\u770b\u4e0d\u5230\u53d1\u9001\u6216\u63a5\u6536\u7684\u660e\u6587\u5185\u5bb9\u3002\u56e0\u4e3aTCP\u8fde\u63a5\u662f\u901a\u8fc7\u4fe1\u53f7\u670d\u52a1\u4ee3\u7406\u7684\uff0c\u6240\u4ee5GIPHY\u4e0d\u77e5\u9053\u662f\u8c01\u53d1\u51fa\u4e86\u8bf7\u6c42\u3002\u4fe1\u53f7\u670d\u52a1\u5b9e\u8d28\u4e0a\u5145\u5f53GIPHY\u6d41\u91cf\u7684VPN\uff1a\u4fe1\u53f7\u670d\u52a1\u77e5\u9053\u60a8\u662f\u8c01\uff0c\u4f46\u4e0d\u77e5\u9053\u60a8\u5728\u641c\u7d22\u6216\u9009\u62e9\u4ec0\u4e48\u3002GIPHY API\u670d\u52a1\u53ef\u4ee5\u770b\u5230\u641c\u7d22\u8bcd\uff0c\u4f46\u770b\u4e0d\u5230\u60a8\u662f\u8c01\u3002\u8fd9\u5f88\u6709\u6548\uff0c\u4f46\u6211\u4eec\u4e5f\u4e00\u76f4\u5728\u8003\u8651\u5982\u4f55\u63d0\u9ad8\u5bf9\u6d41\u91cf\u5206\u6790\u7684\u62b5\u6297\u529b\u3002\u5982\u679c\u4fe1\u53f7\u670d\u52a1\u662f\u6076\u610f\u7684\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6b63\u5728\u4f20\u8f93\u7684\u6570\u636e\u91cf\uff0c\u4ee5\u4fbf\u8fa8\u522b\u6b63\u5728\u4eceGIPHY\u68c0\u7d22\u7684GIF\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u7f13\u89e3\u6b64\u7c7b\u653b\u51fb\u7684\u6700\u5e38\u89c1\u65b9\u6cd5\u662f\u5f15\u5165\u660e\u6587\u586b\u5145\u3002\u5728\u6bcf\u4e2aGIF\u7684\u672b\u5c3e\u5305\u62ec\u968f\u673a\u6570\u91cf\u7684\u586b\u5145\u5c06\u4f7f\u4fe1\u53f7\u670d\u52a1\u66f4\u96be\u5c06\u5b83\u770b\u5230\u7684\u6b63\u5728\u4f20\u8f93\u7684\u6570\u636e\u91cf\u4e0e\u5df2\u77e5\u7684GIF\u76f8\u5173\u8054\u3002\u7136\u800c\uff0c\u95ee\u9898\u662f\u6211\u4eec\u4e0d\u80fd\u63a7\u5236\u5185\u5bb9\u3002\u5982\u4f55\u586b\u5145\u60a8\u65e0\u6cd5\u63a7\u5236\u7684\u660e\u6587\u5185\u5bb9\uff1fRFC 7233\u89c4\u8303\u5141\u8bb8HTTP\u5ba2\u6237\u7aef\u6307\u793a\u5b83\u4eec\u5e0c\u671b\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u63a5\u6536\u6587\u4ef6\u7684\u54ea\u4e9b\u90e8\u5206\u3002\u5ba2\u6237\u7aef\u5728\u5176\u8bf7\u6c42\u4e2d\u4f20\u9012\u4e00\u4e2aRange\u6807\u5934\uff0c\u670d\u52a1\u5668\u5728\u8be5\u5b57\u8282\u8303\u56f4\u5185\u4f20\u9012\u90e8\u5206\u5185\u5bb9\u3002\u9664\u4e86\u5176\u4ed6\u529f\u80fd\u5916\uff0c\u6b64\u529f\u80fd\u8fd8\u5141\u8bb8\u60a8\u7684\u6d4f\u89c8\u5668\u6062\u590d\u4e2d\u65ad\u7684\u4e0b\u8f7d\uff0c\u7acb\u5373\u5f00\u59cb\u663e\u793a\u5927\u578b\u6587\u6863\uff0c\u5e76\u5feb\u901f\u67e5\u627e\u5230\u957f\u89c6\u9891\u4e2d\u7684\u7ed9\u5b9a\u4f4d\u7f6e\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u6ee5\u7528\u8303\u56f4\u8bf7\u6c42\u6765\u6a21\u62df\u4e0d\u53d7\u63a7\u5236\u7684\u5185\u5bb9\u7684\u586b\u5145\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u5ba2\u6237\u7aef\u5e0c\u671b\u4e0b\u8f7d\u4e00\u4e2a13\u5b57\u8282\u7684\u6587\u4ef6\u3002\u7136\u800c\uff0c\u5ba2\u6237\u7aef\u4e0d\u5e0c\u671b\u5411\u7f51\u7edc\u900f\u9732\u5b83\u6070\u597d\u68c0\u7d22\u5230\u4e8613\u4e2a\u5b57\u8282\u3002\u5b83\u4e0d\u662f\u53d1\u51fa\u666e\u901a\u8bf7\u6c42\uff0c\u800c\u662f\u9009\u62e9\u4e00\u4e2a\u5757\u5927\u5c0f(\u5728\u672c\u4f8b\u4e2d\u4e3a6\u5b57\u8282)\uff0c\u5e76\u53d1\u51fa\u8be5\u5927\u5c0f\u7684\u987a\u5e8f\u8303\u56f4\u8bf7\u6c42\u3002\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u8bf7\u6c42\uff0c\u53ea\u5269\u4e0b1\u4e2a\u5b57\u8282\u9700\u8981\u68c0\u7d22\uff0c\u4f46\u662f\u5b83\u5bf9\u6700\u540e6\u4e2a\u5b57\u8282\u8fdb\u884c\u4e86\u91cd\u53e0\u8bf7\u6c42\uff0c\u5e76\u4e22\u5f03\u4e86\u6700\u540e\u4e00\u4e2a\u8bf7\u6c42\u7684\u524d5\u4e2a\u5b57\u8282\u3002\u5ba2\u6237\u7aef\u521a\u521a\u6210\u529f\u5730\u5c06\u8fd9\u6bb513\u5b57\u8282\u7684\u5185\u5bb9\u201c\u586b\u5145\u201d\u4e865\u4e2a\u5b57\u8282\uff0c\u8fd9\u4f7f\u5f97\u4efb\u4f55\u7f51\u7edc\u89c2\u5bdf\u8005\u90fd\u66f4\u96be\u786e\u5b9a\u68c0\u7d22\u5230\u7684\u5185\u5bb9\u7684\u771f\u5b9e\u957f\u5ea6\u3002\u5f53\u6211\u4eec\u5728\u4ee5\u4e0bGIF\u4e0a\u5c1d\u8bd5\u6b64\u7b56\u7565\u65f6\uff0c\u8bf7\u968f\u610f\u8ddf\u968f\u60a8\u7684\u7ec8\u7aef\u4e2d\u7684\u64cd\u4f5c\uff1a\u9996\u5148\uff0c\u6211\u4eec\u5c06\u786e\u5b9a\u76ee\u6807\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5e76\u9a8c\u8bc1\u670d\u52a1\u5668\u662f\u5426\u652f\u6301\u8303\u56f4\u8bf7\u6c42\uff1a\u6211\u4eec\u4f7f\u75281MB\u8303\u56f4\u5927\u5c0f(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\u4e0b\u8f7d\u6587\u4ef6\u7684\u7b2c\u4e00\u6bb5\uff1a\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4e0b\u8f7d\u6587\u4ef6\u7684\u7b2c\u4e8c\u6bb5(\u4e5f\u4f7f\u75281MB\u8303\u56f4\u5927\u5c0f)\uff0c\u5b83\u5c06\u4e0e\u7b2c\u4e00\u6bb5\u90e8\u5206\u91cd\u53e0\u3002\u6211\u4eec\u9700\u8981\u4e22\u5f03\u7b2c\u4e8c\u4e2a\u6570\u636e\u6bb5\u4e2d\u91cd\u53e0\u7684\u5b57\u8282\u3002\u6211\u4eec\u53d6\u4e24\u4e2a\u6bb5\u7684\u5408\u5e76\u5b57\u8282\u5927\u5c0f\uff0c\u7136\u540e\u51cf\u53bb\u539f\u59cb\u6587\u4ef6\u7684\u5b57\u8282\u5927\u5c0f\u3002\u8fd9\u5c31\u7559\u4e0b\u4e86\u9700\u8981\u4ece\u7b2c\u4e8c\u4e2a\u6570\u636e\u6bb5\u4e2d\u5220\u51cf\u7684131727\u4e2a\u5b57\u8282\uff1a\u73b0\u5728\u6211\u4eec\u51c6\u5907\u5c06\u4e24\u4e2a\u6587\u4ef6\u6570\u636e\u6bb5\u5408\u5e76\u5728\u4e00\u8d77\uff1a\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u5408\u5e76\u540e\u7684\u6587\u4ef6\u662f\u5426\u4e0e\u539f\u59cb\u6587\u4ef6\u76f8\u540c\uff1a\u5f53\u4f7f\u7528\u6b64\u7b56\u7565\u901a\u8fc7\u96a7\u9053\u4fe1\u53f7\u670d\u52a1\u53d1\u9001tls\u52a0\u5bc6\u7684\u8bf7\u6c42\u65f6\uff0c\u6211\u4eec\u5c06\u7528\u4e24\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u4f20\u8f93\u66ff\u63621965425\u5b57\u8282\u7684\u5355\u4e2a\u4f20\u8f93\uff0c\u6bcf\u4e2a\u4f20\u8f93\u7684\u5757\u5927\u5c0f\u4e3a1MB\u3002\u56e0\u6b64\uff0c\u4fe1\u53f7\u4ee3\u7406\u670d\u52a1\u5728\u8def\u7531\u6d41\u91cf\u65f6\u53ea\u770b\u5230\u5757\u5927\u5c0f\u7684\u91cd\u590d\u8bf7\u6c42\uff0c\u8fd9\u5e94\u8be5\u4f1a\u4f7f\u8bc6\u522b\u8be5\u6d41\u91cf\u7684\u5185\u5bb9\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u6211\u4eec\u8fd8\u5728\u7ee7\u7eed\u7814\u7a76\u5176\u4ed6\u63aa\u65bd\uff0c\u6bd4\u5982\u968f\u673a\u5316\u7ed3\u679c\u987a\u5e8f\u548c\u968f\u673a\u5316\u8de8\u591a\u4e2a\u4e0b\u8f7d\u7684\u8bf7\u6c42\u3002\u6211\u4eec\u4e0d\u76f8\u4fe1", "note_en": "Today\u2019s Signal beta for iOS includes support for animated GIF search. Signal iOS has long supported sending and receiving GIFs, but today\u2019s beta adds support for browsing and searching popular GIFs from within Signal. We  previously announced experimental support for animated GIF search in Signal Android, which we\u2019re now bringing to iOS, along with some privacy updates to the process. GIF search engines like GIPHY provide network APIs that allow an app to easily expose trending and search functionality for GIFs. For instance, if someone messages you with an invitation, you might want to write back with a message that says \u201cI\u2019m excited.\u201d With integrated GIF search, you could instead do a GIF search for \u201cI\u2019m excited\u201d and send one of the results instead. Of course, as you type your search, it\u2019s transmitted over the network to the GIF search engine:  In order to hide your search term from GIPHY, the Signal service acts as a privacy-preserving proxy. When querying GIPHY: The Signal app opens a TCP connection to the Signal service. The Signal service opens a TCP connection to the GIPHY HTTPS API endpoint and relays bytes between the app and GIPHY. The Signal app negotiates TLS through the proxied TCP connection all the way to the GIPHY HTTPS API endpoint.\n Since communication is done via TLS all the way to GIPHY, the Signal service never sees the plaintext contents of what is transmitted or received. Since the TCP connection is proxied through the Signal service, GIPHY doesn\u2019t know who issued the request. The Signal service essentially acts as a VPN for GIPHY traffic: the Signal service knows who you are, but not what you\u2019re searching for or selecting. The GIPHY API service sees the search term, but not who you are.  This has worked well, but we have also been thinking about ways to improve resistance to traffic analysis. If the Signal service were malicious, it could measure the amount of data being transmitted in order to discern something about the GIFs being retrieved from GIPHY. The most common way to mitigate an attack like that is through the introduction of plaintext padding. Including a random amount of padding at the end of each GIF would make it more difficult for the Signal service to correlate the amount of data it sees being transmitted with a known GIF. The problem, however, is that we don\u2019t control the content. How can you pad plaintext content that you don\u2019t control?  The  RFC 7233 specification allows HTTP clients to indicate which portions of a file they would like to receive from a remote server. The client passes a  Range header in its request, and the server delivers the partial content within that byte range. Among other things, this functionality allows your browser to resume interrupted downloads, begin displaying large documents immediately, and quickly seek to a given position within long videos. We can  also abuse range requests to simulate padding on content we don\u2019t control. In the diagram above, a client wishes to download a 13-byte file. However, the client doesn\u2019t wish to reveal to the network that it has retrieved exactly 13 bytes. Instead of making a normal request, it picks a block size (in this case 6 bytes), and issues sequential range requests for that amount. For the third and final request, there is only 1 byte remaining to be retrieved, but it instead makes an  overlapping request for the final 6 bytes, and discards the first 5 bytes of the final request. The client has just successfully \u201cpadded\u201d this 13-byte piece of content by 5 bytes, making it more difficult for any network observer to determine the true length of what was retrieved.  Feel free to follow along with the action in your terminal as we try this strategy on the following GIF: First, we\u2019ll determine the size of the target file and verify that the server supports range requests:  We download the first segment of the file using a 1MB range size (specified in bytes):  Next we\u2019ll download the second segment of the file (also using a 1MB range size) which will partially overlap with the first.  We need to discard the overlapping bytes in the second segment. We take the combined byte size of the two segments and subtract the byte size of the original file. This leaves us with  131727 bytes that need to be trimmed from the second segment:  Now we are ready to combine our two file segments together:  Finally, we can verify that the combined file is the same as the original:  When TLS-encrypted requests are sent through the tunneled Signal service using this strategy, we\u2019re replacing a single transfer of  1965425 bytes with two identically sized transfers for blocks of 1MB each. As a result, the Signal proxy service only sees repeated requests of a block size when routing traffic, which should make it more difficult to identify the content of that traffic. We\u2019re continuing to look at additional measures like randomizing the order of results and randomizing requests striped across multiple downloads.  We don\u2019t believe that privacy is about austerity. Communication should be expressive and fun. We want you to avoid sending plaintext, but that doesn\u2019t mean that your texts should always be so plain. Send an animated GIF today, and let us know what you think. If you\u2019re ready for a life of adventure (and occasional sadness), you can sign up for the Signal iOS beta channel by emailing support@whispersystems.org. Please include \u201cSignal iOS Beta\u201d in the subject line. If you need a stable and reliable messaging experience, we encourage you to wait a few days for the production release.", "posttime": "2020-05-16 03:44:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "giphy,preserves,gif", "title": "Signal\u5728GIPHY\u4e0a\u4fdd\u62a4\u9690\u79c1(2017)", "title_en": "Signal preserves privacy on GIPHY (2017)", "transed": 1, "url": "https://signal.org/blog/signal-and-giphy-update/", "via": "", "real_tags": ["giphy", "preserves", "gif"]}, {"category": "", "categoryclass": "", "imagename": "b9b6c904d850860c5dc75ebf1ffaa316.jpeg", "infoid": 1002287, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e7\u91d1\u5c71--\u52a0\u5dde\u5927\u5b66\u65e7\u91d1\u5c71\u5206\u6821(University of California\uff0cSan Francisco)\u533b\u5b66\u7cfb\u4e3b\u4efb\u9c8d\u52c3\u00b7\u74e6\u514b\u7279(Bob Wachter)\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e2d\u5750\u5728\u4e86\u524d\u6392\u3002\nWachter\u535a\u58eb\u7684\u5de5\u4f5c\uff0c\u81f3\u5c11\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u662f\u8ba9\u7cfb\u91cc\u5927\u7ea63000\u540d\u6559\u804c\u5458\u5de5\u3001\u5b9e\u4e60\u751f\u548c\u5de5\u4f5c\u4eba\u5458\u4e86\u89e3\u7814\u7a76\u3001\u6559\u80b2\u548c\u4e34\u5e8a\u62a4\u7406\u65b9\u9762\u7684\u6700\u65b0\u8fdb\u5c55\u3002\u4f46\u5927\u591a\u6570\u65e5\u5b50\u91cc\uff0c\u4ed6\u81f3\u5c11\u4f1a\u7559\u51fa\u4e24\u4e2a\u5c0f\u65f6\u6765\u901a\u77e5\u53e6\u4e00\u7fa4\u4eba\uff1a\u4ed6\u7684\u63a8\u7279\u8ffd\u968f\u8005\u3002\n..\u3002", "note_en": "SAN FRANCISCO\u2014Bob Wachter, the chairman of the department of medicine at the University of California, San Francisco, has had a front-row seat to the coronavirus pandemic.\n  Dr. Wachter\u2019s job, at least in part, is to keep the department\u2019s 3,000 or so faculty, trainees and staff current on developments in research, education and clinical care. But most days he sets aside at least two hours to keep another group informed: his Twitter followers.\n...", "posttime": "2020-05-16 03:44:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u63a8\u7279,coronavirus,\u75c5\u6bd2,tweeting", "title": "\u533b\u751f\u4eec\u5728\u63a8\u7279\u4e0a\u8c08\u8bba\u51a0\u72b6\u75c5\u6bd2\uff0c\u8ba9\u4e8b\u5b9e\u50cf\u75c5\u6bd2\u4e00\u6837\u4f20\u64ad", "title_en": "Doctors Are Tweeting About Coronavirus to Make Facts Go Viral", "transed": 1, "url": "https://www.wsj.com/articles/doctors-are-tweeting-about-coronavirus-to-make-facts-go-viral-11589558880", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u63a8\u7279", "\u75c5\u6bd2", "tweeting"]}, {"category": "", "categoryclass": "", "imagename": "342a95b3397cd1f6910fff42ab7c3fc5.png", "infoid": 1002286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u4e2a\u4e0e\u4e16\u9694\u7edd\u7684\u5357\u6781\u57fa\u5730\u8fc7\u51ac\u768412\u540d\u7537\u5b50\u4e2d\uff0c\u67096\u540d\u5728\u5b8c\u5168\u9694\u79bb17\u5468\u540e\u4f9d\u6b21\u51fa\u73b0\u4e86\u666e\u901a\u611f\u5192\u7684\u75c7\u72b6\u548c\u4f53\u5f81\u3002\u5bf9\u4ece\u4e0e\u75ab\u60c5\u6709\u5173\u7684\u7537\u5b50\u8eab\u4e0a\u63d0\u53d6\u7684\u6837\u672c\u8fdb\u884c\u68c0\u67e5\uff0c\u6ca1\u6709\u53d1\u73b0\u75c5\u539f\u4f53\u3002\n\u5168\u6587\u53ef\u63d0\u4f9b\u539f\u59cb\u5370\u5237\u7248\u672c\u7684\u626b\u63cf\u526f\u672c\u3002\u83b7\u53d6\u5b8c\u6574\u6587\u7ae0(1.2m)\u7684\u53ef\u6253\u5370\u526f\u672c(PDF\u6587\u4ef6)\uff0c\u6216\u5355\u51fb\u4e0b\u9762\u7684\u9875\u9762\u56fe\u50cf\u9010\u9875\u6d4f\u89c8\u3002\u6307\u5411PubMed\u7684\u94fe\u63a5\u4e5f\u53ef\u7528\u4e8e\u9009\u5b9a\u7684\u53c2\u8003\u3002\n\u8fd9\u4e9b\u5f15\u7528\u4f4d\u4e8ePubMed\u4e2d\u3002\u8fd9\u53ef\u80fd\u4e0d\u662f\u672c\u6587\u53c2\u8003\u6587\u732e\u7684\u5b8c\u6574\u5217\u8868\u3002\n\u5e03\u62c9\u65af\u79d1\u7ef4\u5947D\uff0cJamrichov\u00e1o\uff0cRathov\u00e1V\uff0cKaplan MM\uff0cKociskov\u00e1D\u3002\u65ad\u5976\u4ed4\u732a\u5bf9\u7532\u578b\u732a\u6d41\u611f\u75c5\u6bd2\u7684\u5b9e\u9a8c\u611f\u67d3\u30022.\u53d7\u611f\u67d3\u52a8\u7269\u7684\u8131\u6bd2\u3002\u516c\u725b\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u30021970\uff1b42(5)\uff1a767-770\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u5361\u6885\u9686\u00b7\u827e\u65af\uff0c\u6469\u5c14\u00b7\u5e03\u5e0c\u3002\u4e00\u4e2a\u4e0e\u4e16\u9694\u7edd\u7684\u5357\u6781\u793e\u533a\u547c\u5438\u9053\u611f\u67d3\u7684\u6d41\u884c\u75c5\u5b66\u3002\u5468\u6167\u541b(\u957f)1968\u5e749\u6708\uff1b66(3)\uff1a427-437\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\nElveback LR\uff0cFox JP\uff0cKetler A\uff0cBrandt CD\uff0cWassermann FE\uff0cHall CE\u3002\u75c5\u6bd2\u89c2\u5bdf\u8ba1\u5212\uff1a\u5bf9\u7ebd\u7ea6\u5927\u90fd\u5e02\u5bb6\u5ead\u4e2d\u7684\u75c5\u6bd2\u611f\u67d3\u8fdb\u884c\u6301\u7eed\u76d1\u6d4b\u30023.\u611f\u67d3\u4e0e\u75be\u75c5\u5173\u7cfb\u7684\u521d\u6b65\u62a5\u544a\u3002\u6211\u662f\u827e\u6bd4\u7c73\u5965\u30021966\u5e745\u6708\uff1b83(3)\uff1a436-454\u3002[PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u9996\u9875--\u671f\u520a\u4e3b\u8981\u5206\u7c7b--\u671f\u520a\u7ec6\u4ecb\u7ecd--\u671f\u520a\u9898\u5f55\u4e0e\u6587\u6458--\u671f\u520a\u8be6\u7ec6\u6587\u6458\u5185\u5bb9\u3002\u611f\u67d3\u725b\u4e0e\u6613\u611f\u725b\u63a5\u89e6\u4f20\u64ad\u53e3\u8e44\u75ab\u4e2d\u7684\u6f5c\u4f0f\u75c5\u6bd2\u611f\u67d3\u3002J\u611f\u67d3Dis\u30021971\u5e749\u6708\uff1b124(3)\uff1a270-276\u3002[PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\nHedblom EE.\u3002\u5728\u5357\u6781\u6d32\u9047\u5230\u7684\u533b\u7597\u95ee\u9898\u3002Mil Med.\u30021961\u5e7411\u6708\uff1b126\uff1a818-824\u3002[PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u798f\u5c14\u6469\u65afMJ\uff0c\u827e\u4f26TR\uff0c\u5e03\u62c9\u5fb7\u4f2f\u6069AF\uff0c\u65af\u6258\u7279EJ\u3002\u5357\u6781\u57fa\u5730\u4eba\u5458\u547c\u5438\u9053\u75c5\u6bd2\u7684\u7814\u7a76\u3002\u6c5f\u60e0\u56fd(\u957f)1971\u5e746\u6708\uff1b69(2)\uff1a187-199\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u80e1\u6069\u00b7B\uff0c\u6cf0\u745e\u5c14\u68c0\u5bdf\u5b98\u3002\u75c5\u6bd2\u5b66\u4e2d\u7684\u5668\u5b98\u57f9\u517b\u3002\u666e\u7f57\u683c\u00b7\u6885\u5fb7\u00b7\u7ef4\u7f57\u5c14\u30021969\u5e74\uff1b11\uff1a408-450\u3002[PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u8f9b\u666e\u68ee\u00b7\u96f7\u3002\u5173\u4e8e\u666e\u901a\u611f\u5192\u7684\u8ba8\u8bba\u3002Proc R Soc Med.\u30021958\u5e744\u6708\uff1b51(4)\uff1a267-271\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u9996\u9875--\u671f\u520a\u4e3b\u8981\u5206\u7c7b--\u671f\u520a\u7ec6\u4ecb\u7ecd--\u671f\u520a\u9898\u5f55\u4e0e\u6587\u6458--\u6587\u6458\u5185\u5bb9\u3002\u666e\u901a\u611f\u5192\u7684\u6d41\u884c\u75c5\u5b66\u3002\u56db\u3001\u5929\u6c14\u7684\u5f71\u54cd\u3002\u5468\u6167\u541b(\u957f)1965\u5e749\u6708\uff1b63(3)\uff1a427-439\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u7f57\u767b\u5728\u3002\u666e\u901a\u611f\u5192\u7684\u4e34\u5e8a\u8bc4\u4f30\u3002Proc R Soc Med.\u30021958\u5e744\u6708\uff1b51(4)\uff1a271-273\u3002[PubMed][\u8c37\u6b4c\u5b66\u8005]\u3002\n\u9996\u9875--\u671f\u520a\u4e3b\u8981\u5206\u7c7b--\u671f\u520a\u7ec6\u4ecb\u7ecd--\u671f\u520a\u9898\u5f55\u4e0e\u6587\u6458--\u671f\u520a\u8be6\u7ec6\u6587\u6458\u5185\u5bb9\u3002\u7279\u91cc\u65af\u5766\u00b7\u8fbe\u5e93\u5c3c\u4e9a\u7684\u666e\u901a\u611f\u5192\u3002\u6c5f\u60e0\u56fd(\u957f)1971\u5e746\u6708\uff1b69(2)\uff1a255-255\u3002[PMC\u514d\u8d39\u6587\u7ae0][PubMed][\u8c37\u6b4c\u5b66\u8005]", "note_en": "Six of 12 men wintering at an isolated Antarctic base sequentially developed symptoms and signs of a common cold after 17 weeks of complete isolation. Examination of specimens taken from the men in relation to the outbreak has not revealed a causative agent.\n  Full text is available as a scanned copy of the original print version. Get a printable copy (PDF file) of the   complete article (1.2M), or click on a page image below to browse page by page. Links to PubMed are also available for   Selected References.\n   These references are in PubMed. This may not be the complete list of references from this article.\n Blaskovic D, Jamrichov\u00e1 O, Rathov\u00e1 V, Kaplan MM, Kociskov\u00e1 D. Experimental infection of weanling pigs with A-swine influenza virus. 2. The shedding of virus by infected animals.   Bull World Health Organ. 1970; 42(5):767\u2013770.  [ PMC free article] [ PubMed]  [ Google Scholar]\n Cameron AS, Moore BW. The epidemiology of respiratory infection in an isolated Antarctic community.   J Hyg (Lond) 1968 Sep; 66(3):427\u2013437.  [ PMC free article] [ PubMed]  [ Google Scholar]\n Elveback LR, Fox JP, Ketler A, Brandt CD, Wassermann FE, Hall CE. The Virus Watch program: a continuing surveillance of viral infections in metropolitan New York families. 3. Preliminary report on association of infections with disease.   Am J Epidemiol. 1966 May; 83(3):436\u2013454. [ PubMed]  [ Google Scholar]\n Graves JH, McVicar JW, Sutmoller P, Trautman R, Wagner GG. Latent viral infection in transmission of foot-ana-mouth disease by contact between infected and susceptible cattle.   J Infect Dis. 1971 Sep; 124(3):270\u2013276. [ PubMed]  [ Google Scholar]\n HEDBLOM EE. The medical problems encountered in Antarctica.   Mil Med. 1961 Nov; 126:818\u2013824. [ PubMed]  [ Google Scholar]\n Holmes MJ, Allen TR, Bradburne AF, Stott EJ. Studies of respiratory viruses in personnel at an Antarctic base.   J Hyg (Lond) 1971 Jun; 69(2):187\u2013199.  [ PMC free article] [ PubMed]  [ Google Scholar]\n Hoorn B, Tyrrell DA. Organ cultures in virology.   Prog Med Virol. 1969; 11:408\u2013450. [ PubMed]  [ Google Scholar]\n SIMPSON REH. Discussion on the common cold.   Proc R Soc Med. 1958 Apr; 51(4):267\u2013271.  [ PMC free article] [ PubMed]  [ Google Scholar]\n Lidwell OM, Morgan RW, Williams RE. The epidemiology of the common cold. IV. The effect of weather.   J Hyg (Lond) 1965 Sep; 63(3):427\u2013439.  [ PMC free article] [ PubMed]  [ Google Scholar]\n RODEN AT. Clinical assessment of the common cold.   Proc R Soc Med. 1958 Apr; 51(4):271\u2013273. [ PubMed]  [ Google Scholar]\n Shibli M, Gooch S, Lewis HE, Tyrrell DA. Common colds on Tristan da Cunha.   J Hyg (Lond) 1971 Jun; 69(2):255\u2013255.  [ PMC free article] [ PubMed]  [ Google Scholar]", "posttime": "2020-05-16 03:44:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u5730,common,\u611f\u67d3", "title": "\u5357\u6781\u57fa\u5730\u9694\u79bb17\u5468\u540e\u666e\u901a\u611f\u5192\u66b4\u53d1(1973\u5e74)", "title_en": "Outbreak of common colds at Antarctic base after 17 weeks of isolation (1973)", "transed": 1, "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2130424/", "via": "", "real_tags": ["\u57fa\u5730", "common", "\u611f\u67d3"]}, {"category": "", "categoryclass": "", "imagename": "35dffc8a22bc5036929ffb68b1aba2c1.png", "infoid": 1002285, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u89e3\u91ca\u4e3a\u4ec0\u4e48\u64ad\u5ba2\u53d6\u4ee3\u4e86\u6211\u5728\u975e\u6b63\u5f0f\u5b66\u4e60\u4e2d\u5bf9\u7ef4\u57fa\u767e\u79d1\u7684\u5927\u91cf\u4f7f\u7528\u3002\u6211\u8fd8\u4f1a\u8c08\u8c08\u6211\u662f\u5982\u4f55\u6bcf\u5929\u6536\u542c\u4e94\u4e2a\u591a\u5c0f\u65f6\u7684\u64ad\u5ba2\u7684\uff01\n\u4e09\u79cd\u7b80\u5355\u4f46\u6781\u5176\u5f3a\u70c8\u7684\u6fc0\u60c5\u4e3b\u5bb0\u4e86\u6211\u7684\u751f\u6d3b\uff1a\u5bf9\u7231\u7684\u6e34\u671b\uff0c\u5bf9\u77e5\u8bc6\u7684\u8ffd\u6c42\uff0c\u4ee5\u53ca\u5bf9\u4eba\u7c7b\u82e6\u96be\u7684\u96be\u4ee5\u5fcd\u53d7\u7684\u601c\u60af\u3002--\u4f2f\u7279\u5170\u00b7\u7f57\u7d20\u81ea\u4f20\u7684\u5f00\u573a\u767d(\u5168\u6587)\u3002\n\u5728Web2.0\u65f6\u4ee3(2000\u5e74\u4ee3\u4e2d\u671f\u52302010\u5e74\u4ee3\u521d)\uff0c\u7ef4\u57fa\u767e\u79d1\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u975e\u6b63\u5f0f\u5b66\u4e60\u8d44\u6e90\u3002\u6bcf\u5f53\u6211\u60f3\u4e86\u89e3\u65b0\u8bdd\u9898\u3001\u5386\u53f2\u4e8b\u4ef6\u6216\u540d\u4eba\u65f6\uff0c\u6211\u90fd\u4f1a\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u3002\u7ef4\u57fa\u767e\u79d1\u9875\u9762\u901a\u5e38\u4f4d\u4e8e\u524d\u51e0\u4e2a\u641c\u7d22\u7ed3\u679c\u4e4b\u5217\u3002\n\u6211\u4f1a\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1\u7684\u9875\u9762\uff0c\u5e76\u51b3\u5b9a\u662f\u5426\u60f3\u8981\u66f4\u6df1\u5165\u5730\u6316\u6398(\u4f8b\u5982\uff0c\u627e\u5230\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u4e66\u6765\u9605\u8bfb)\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4ec5\u4ec5\u901a\u8fc7\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1\u9875\u9762\u5c31\u5b66\u5230\u4e86\u8db3\u591f\u7684\u4e1c\u897f\uff0c\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\u3002\n\u4f8b\u5982\uff0c\u5f53\u6211\u60f3\u5b66\u4e60Django(\u4e00\u79cdPython\u7f16\u7a0b\u6846\u67b6)\u65f6\uff0c\u6211\u4ece\u7ef4\u57fa\u767e\u79d1\u8bcd\u6761Django(Web\u6846\u67b6)\u5f00\u59cb\u3002\u5c31\u50cf\u4e86\u89e3\u4eac\u90fd\u5e02\u957f\u5510\u00b7\u74e6\u4f26\u4e01\u7684\u751f\u6d3b\u4e00\u6837\uff0c\u6606\u9633\u6218\u5f79\u7684\u5386\u53f2\u6027\u4e8b\u4ef6\uff0c\u6743\u529b\u7684\u6e38\u620f\u6982\u8ff0\uff0c\u7b49\u7b49\u3002\n\u6ce8\u610f\uff1a\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1\u9875\u9762\u53ea\u662f\u5b66\u4e60\u7684\u5f00\u59cb\uff0c\u8fd9\u5c31\u662f\u6211\u6240\u8bf4\u7684\u975e\u6b63\u5f0f\u5b66\u4e60\u7684\u610f\u601d\u3002\u5982\u679c\u6211\u83b7\u5f97\u4e86\u8db3\u591f\u7684\u5174\u8da3\uff0c\u6211\u4f1a\u627e\u5230\u5176\u4ed6\u66f4\u4e25\u8083\u7684\u6750\u6599(\u4f8b\u5982\uff0c\u4e66\u7c4d\u3001\u7f16\u7a0b\u6587\u6863\u2026\u2026)\u3002\u7528\u4e8e\u6b63\u89c4\u5b66\u4e60\u3002\n\u5230\u4e862013\u5e74\u5de6\u53f3\uff0c\u6211\u5f00\u59cb\u5168\u804c\u505a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002\u5728\u5f00\u653e\u5f0f\u529e\u516c\u573a\u6240\uff0c\u8bb8\u591a\u77e5\u8bc6\u578b\u5458\u5de5\u4e00\u8fb9\u5728\u7535\u8111\u4e0a\u5de5\u4f5c\uff0c\u4e00\u8fb9\u901a\u8fc7Spotify\u3001Pandora\u7b49\u6536\u542c\u97f3\u4e50\u3002\n\u4f46\u662f\u6211\u4e3a\u6574\u5929\u4e0d\u5b66\u4e60\u65b0\u4e1c\u897f\u800c\u53ea\u662f\u542c\u97f3\u4e50\u800c\u611f\u5230\u5185\u759a\u3002\u76f8\u53cd\uff0c\u6211\u5f00\u59cb\u4e00\u8fb9\u5de5\u4f5c\u4e00\u8fb9\u6536\u542c\u64ad\u5ba2(\u4e3b\u8981\u662f\u7f16\u5199\u4ee3\u7801)\uff0c\u4ece\u8fd9\u4e9b\u64ad\u5ba2\u4e2d\u5438\u6536\u4e86\u5927\u91cf\u4fe1\u606f\uff0c\u4f8b\u5982\u771f\u5b9e\u7684\u72af\u7f6a\u6848\u4ef6\u3001\u65b0\u95fb\u3001\u5de5\u7a0b\u5e08\u3001\u98ce\u9669\u8d44\u672c\u5bb6\u548c\u4f01\u4e1a\u5bb6\u7684\u804c\u4e1a\u9053\u8def\uff0c\u4ee5\u53ca\u4e86\u89e3\u5386\u53f2\u4e8b\u4ef6\u3002\n\u4f46\u662f\u600e\u4e48\u53ef\u80fd\u5728\u7f16\u7a0b\u5de5\u4f5c\u4e2d\u6536\u542c\u64ad\u5ba2\u5462\uff1f\u55ef\uff0c\u9664\u4e86\u5199\u4f5c\uff0c\u5982\u679c\u2026\u2026\u3002\u5426\u5219\u2026\u2026\u903b\u8f91\uff0c\u5728\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u4f4e\u7ea7\u601d\u8003\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\uff0c\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3001\u91cd\u6784\u4ee3\u7801\u3001\u4ece\u5806\u6808\u6ea2\u51fa\u590d\u5236\u548c\u7c98\u8d34\u4ee3\u7801\u3001\u8c03\u6574CSS\u6837\u5f0f\u3001\u8c03\u6574\u67d0\u4e9b\u670d\u52a1\u5668\u8f6f\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\u3001\u4f7f\u7528\u7b2c\u4e09\u65b9API\u3001\u5904\u7406HTML\u3001\u914d\u7f6eIDE\u3001\u8bbe\u7f6e\u5f00\u53d1\u73af\u5883\u3001\u7b49\u5f85CI\u5b8c\u6210\u3001\u7f16\u5199\u4e00\u6b21\u6027\u4ee3\u7801\u6765\u6d4b\u8bd5\u65b0\u6280\u672f\u3001\u8bd5\u9a8c\u4e00\u4e9b\u4f4e\u98ce\u9669\u7684DevOps\u3002\u7684\u4ee3\u7801\u8fdb\u884c\u672c\u5730\u4ee3\u7801\u5ba1\u67e5\uff0c\u624b\u52a8\u6267\u884c\u67d0\u4e9b\u4ea7\u54c1\u529f\u80fd\u7684QA.\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u4e00\u8fb9\u542c\u64ad\u5ba2\u4e00\u8fb9\u5199\u4ee3\u7801\u7684\u4eba\u3002\n\u4e3a\u4ec0\u4e48\u6211\u82b1\u4e8610\u5e74\u65f6\u95f4\u624d\u610f\u8bc6\u5230\uff0c\u6211\u53ef\u4ee5\u540c\u65f6\u6536\u542c\u64ad\u5ba2\u6216\u6709\u58f0\u8bfb\u7269\u548c\u4ee3\u7801\uff0c\u800c\u4e0d\u4f1a\u635f\u5931\u592a\u591a\u751f\u4ea7\u529b\u6216\u7406\u89e3\u529b\uff1f\n-\u8003\u7279\u5170\u00b7\u827e\u4f26(@csallen)2018\u5e745\u670817\u65e5\u3002\n\u5feb\u8fdb\u52302016\u5e74\uff0c\u6211\u53d1\u73b0\u6211\u4ece\u64ad\u5ba2\u4e2d\u6d88\u8d39\u7684\u4fe1\u606f\u6bd4\u4ece\u7535\u89c6\u3001YouTube\u89c6\u9891\u6216\u65b0\u95fb\u7f51\u7ad9\u7b49\u5176\u4ed6\u5a92\u4f53\u5f62\u5f0f\u4e2d\u6d88\u8d39\u7684\u4fe1\u606f\u66f4\u591a\u3002\u51c6\u786e\u5730\u8bf4\uff0c\u5f53\u6211\u5199\u4ee3\u7801\u3001\u901a\u52e4\u4e0a\u73ed\u3001\u5728\u5065\u8eab\u623f\u953b\u70bc\u3001\u53bb\u6742\u8d27\u5e97\u8d2d\u7269\u7b49\u7b49\u65f6\uff0c\u6211\u6bcf\u5929\u82b15\u4e2a\u591a\u5c0f\u65f6\u542c\u64ad\u5ba2\u3002\n\u57fa\u672c\u4e0a\uff0c\u6bcf\u5f53\u6211\u624b\u5fd9\u811a\u4e71\uff0c\u5934\u8111\u7a7a\u95f2\u7684\u65f6\u5019\uff0c\u6211\u5c31\u4f1a\u542c\u64ad\u5ba2\u3002\n\u64ad\u5ba2\u53ea\u662f\u8ba9\u77e5\u8bc6\u53d8\u5f97\u5bb9\u6613\u83b7\u53d6\uff0c\u5c31\u50cf\u7ef4\u57fa\u767e\u79d1\u4e00\u6837\u3002\u4e92\u8054\u7f51\u4e0a\u6709\u5927\u91cf\u7684\u64ad\u5ba2\uff0c\u57fa\u672c\u4e0a\u6db5\u76d6\u4e86\u6240\u6709\u7684\u8bdd\u9898\uff01\n\u5236\u4f5c\u64ad\u5ba2\u8981\u6bd4\u5199\u4e00\u672c\u4e66\u3001\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u6216\u5236\u4f5c\u4e00\u6bb5\u89c6\u9891\u5bb9\u6613\u5f97\u591a\u3002\u5b83\u964d\u4f4e\u4e86\u4e3b\u9898\u4e13\u5bb6\u5236\u4f5c\u5185\u5bb9\u200a-\u200a\u7684\u95e8\u69db\uff0c\u4ed6\u4eec\u53ea\u662f\u5728\u9ea6\u514b\u98ce\u524d\u804a\u5929\uff01\n\u4f5c\u4e3a\u4e00\u540d\u542c\u4f17\uff0c\u542c\u4e00\u4f4d\u4e13\u5bb6\u901a\u8fc7\u6211\u7684\u8033\u6735\u503e\u8bc9\u77e5\u8bc6\u6709\u591a\u9177\uff1f\n\u6700\u68d2\u7684\u662f\u64ad\u5ba2\u662f\u514d\u8d39\u7684\uff01\u662f\u7684\uff0c\u5728\u6709\u56f4\u5899\u7684\u82b1\u56ed\u5e73\u53f0\u4e0a\u6709\u4e00\u4e9b\u72ec\u5bb6\u64ad\u5ba2\uff0c\u4f46\u5927\u591a\u6570\u4f18\u79c0\u7684\u64ad\u5ba2\u90fd\u662f\u514d\u8d39\u6536\u542c\u7684\u3002\n\u5f53\u7136\uff0c\u5b83\u4eec\u4e2d\u7684\u8bb8\u591a\u90fd\u662f\u7531\u5e7f\u544a\u652f\u6301\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u8ba4\u4e3a\u82b1\u5728\u542c\u5e7f\u544a\u4e0a\u7684\u65f6\u95f4\u662f\u6d6a\u8d39\u7684\u94b1\uff0c\u90a3\u5c31\u4e0d\u662f\u5b8c\u5168\u514d\u8d39\u7684\u3002\u6211\u53ef\u80fd\u6709\u504f\u89c1\uff0c\u4f46\u6211\u8ba4\u4e3a\u64ad\u5ba2\u5e7f\u544a\u6ca1\u6709YouTube\u5e7f\u544a\u90a3\u4e48\u70e6\u4eba\uff1a)\u3002\n2017\u5e74\u521d\uff0c\u6211\u5efa\u7acb\u4e86\u4e00\u4e2a\u64ad\u5ba2\u641c\u7d22\u5f15\u64ce\uff0c\u540d\u4e3aListen Notes\uff0c\u5e2e\u52a9\u81ea\u5df1\u53d1\u73b0\u6709\u8da3\u7684\u64ad\u5ba2\u5267\u96c6\u3002\u64ad\u5ba2\u592a\u591a\u4e86\uff0c\u6211\u65e0\u6cd5\u5168\u90e8\u8ba2\u9605\u3002\n\u65e7\u7684\u64ad\u5ba2\u6536\u542c\u6a21\u5f0f\u662f\u8ba2\u9605\u51e0\u4e2a\u8282\u76ee\uff0c\u53ea\u542c\u8fd9\u4e9b\u8282\u76ee\u7684\u65b0\u5267\u96c6\u3002\u8fd9\u53ef\u80fd\u57282013\u5e74\u594f\u6548\uff0c\u5f53\u65f6\u64ad\u5ba2\u8fd8\u4e0d\u591a\u3002\n\u8fd9\u5c31\u50cf\u6211\u4eec\u572820\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\u7ed9\u51e0\u4e2a\u7f51\u7ad9\u52a0\u4e86\u4e66\u7b7e\uff0c\u4e00\u904d\u53c8\u4e00\u904d\u5730\u8bbf\u95ee\u90a3\u51e0\u4e2a\u7f51\u7ad9\uff0c\u56e0\u4e3a\u4e92\u8054\u7f51\u4e0a\u6ca1\u6709\u592a\u591a\u7684\u7f51\u7ad9\u3002\n\u968f\u7740\u64ad\u5ba2\u6570\u91cf\u7684\u589e\u957f\u8d8a\u6765\u8d8a\u5feb\uff0c\u8ba2\u9605\u7136\u540e\u53ea\u542c\u51e0\u4e2a\u8282\u76ee\u7684\u6a21\u5f0f\u5c06\u4e0d\u518d\u6709\u6548\u3002\n\u6e10\u6e10\u5730\uff0c\u6211\u5728Listen Notes\u4e0a\u6dfb\u52a0\u4e86\u65b0\u7684\u529f\u80fd\uff0c\u5e76\u57282017\u5e74\u5e95\u5c06\u5176\u53d8\u6210\u4e86\u6211\u7684\u5168\u804c\u5de5\u4f5c\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u505a\u4e86\u4e24\u5e74\u591a\u7684\u201c\u542c\u7b14\u8bb0\u201d\u4e86\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf9Listen Notes\u7684\u6280\u672f\u6808\u611f\u5174\u8da3\u3002\n\u622a\u81f3\u64b0\u5199\u8fd9\u7bc7\u6587\u7ae0(2020\u5e742\u6708)\uff0c\u81ea2017\u5e74\u672b\u4ee5\u6765\uff0c\u6211\u5df2\u7ecf\u6536\u542c\u4e863100\u591a\u96c6\u64ad\u5ba2\u3002\n\u6211\u5728\u9634\u5929\u8ba2\u9605\u4e86\u8fd9\u4e2a\u4e3b\u6b4c\u5355\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4e0d\u8ba2\u9605\u4e2a\u4eba\u64ad\u5ba2\u200a-\u200a\uff0c\u8fd9\u4e0e\u5927\u591a\u6570\u64ad\u5ba2\u542c\u4f17\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\n\u6211\u8fd8\u6709\u4e00\u4e2a\u79c1\u4eba\u64ad\u653e\u5217\u8868\uff0c\u91cc\u9762\u53ea\u6709\u6211\u548c\u6211\u59bb\u5b50\u5206\u4eab\u7684\u4e2d\u6587\u64ad\u5ba2\uff1a)\u3002\u6211\u4eec\u90fd\u4f1a\u5b9a\u671f\u5c06\u5267\u96c6\u6dfb\u52a0\u5230\u64ad\u653e\u5217\u8868\u4e2d\u3002\u5f53\u6211\u4eec\u5728\u516c\u8def\u65c5\u884c\u65f6\uff0c\u4e00\u8d77\u5728\u8f66\u91cc\u542c\u64ad\u5ba2\u662f\u5f88\u6709\u8da3\u7684\u3002\n\u5982\u679c\u4f60\u662fInstapaper\u6216Pocket\u7684\u7528\u6237\uff0c\u4f60\u53ef\u80fd\u5bf9\u4f60\u5728\u7f51\u4e0a\u770b\u5230\u7684\u4e00\u7bc7\u6587\u7ae0\u7684\u201c\u7a0d\u540e\u9605\u8bfb\u201d\u7684\u6982\u5ff5\u200a-\u200a\u5f88\u719f\u6089\uff0c\u4f46\u4f60\u6ca1\u6709\u65f6\u95f4\u9a6c\u4e0a\u9605\u8bfb\uff0c\u6240\u4ee5\u4f60\u628a\u6587\u7ae0\u6dfb\u52a0\u5230Instapaper\u6216Pocket\u4e2d\u7a0d\u540e\u9605\u8bfb\u3002\n\u5728Listen Notes\u4e0a\uff0c\u6211\u5c06\u64ad\u653e\u5217\u8868\u529f\u80fd\u547d\u540d\u4e3a\u201c\u7a0d\u540e\u6536\u542c\u201d\u3002\u4f60\u660e\u767d\u6211\u7684\u610f\u601d\u3002\n\u9996\u5148\uff0c\u5f53\u6211\u9047\u5230\u6211\u611f\u5174\u8da3\u7684\u8bdd\u9898\u6216\u4eba\u65f6\uff0c\u6211\u53ea\u9700\u641c\u7d22\u201c\u542c\u7b14\u8bb0\u201d\uff0c\u7136\u540e\u5728\u6211\u7684\u4e3b\u64ad\u653e\u5217\u8868\u4e2d\u6dfb\u52a0\u51e0\u96c6\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u6211\u5982\u4f55\u4f7f\u7528\u7ef4\u57fa\u767e\u79d1\u7684\u5173\u952e\u5b57\u641c\u7d22\uff01\n\u60f3\u8981\u5b66\u4e60\u65b0\u7f16\u7a0b\u6846\u67b6\u7684\u57fa\u672c\u6982\u5ff5\u5417\uff1f\u641c\u7d22\u90a3\u4e2a\u7f16\u7a0b\u6846\u67b6\u7684\u521b\u5efa\u8005\u7684\u540d\u5b57\uff0c\u72c2\u6b22\u5730\u6536\u542c\u4ed6\u4eec\u7684\u64ad\u5ba2\u91c7\u8bbf\uff01\u793a\u4f8b\uff1aVue\u7684Evan You\u548cRails\u7684DHH\u3002\n\u4f60\u5728\u7845\u8c37\u4f1a\u89c1\u4e00\u4f4d\u6295\u8d44\u8005\u5417\uff1f\u641c\u7d22\u4e00\u4e0b\u90a3\u4e2a\u6295\u8d44\u8005\u7684\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u6709\u6240\u4e86\u89e3\u4e86\uff01\u4f8b\u5982\uff1a\u8fc8\u514b\u00b7\u6885\u666e\u5c14\u65af(Mike Maples)\u548c\u4e9a\u5f53\u00b7\u5fb7\u96f7\u73c0(Adam Draper\n\u4e00\u5bb6\u516c\u53f8\u521a\u521a\u88ab\u6536\u8d2d\uff1f\u641c\u7d22\u5176\u521b\u59cb\u4eba\u7684\u540d\u5b57\uff0c\u4e86\u89e3\u8fd9\u5bb6\u516c\u53f8\u7684\u5386\u7a0b\uff01\u4f8b\u5982\uff1aGitHub\u7684\u514b\u91cc\u65af\u00b7\u4e07\u65af\u7279\u62c9\u65af(Chris Wanstrath)\uff0c\u683c\u5b50\u7684\u624e\u514b\u00b7\u4f69\u96f7\u7279(Zach Perret)\u3002\n\u770b\u5230\u63a8\u7279\u4e0a\u8ba8\u8bba\u7684\u5386\u53f2\u6027\u4e8b\u4ef6\u4e86\u5417\uff1f\u641c\u7d22\u6d89\u6848\u4eba\u5458\u7684\u540d\u5b57\uff01\u4f8b\u5b50\uff1a\u67e5\u5c14\u65af\u00b7\u66fc\u68ee(Charles Manson)\u3002\n\u51b3\u5b9a\u8981\u4e0d\u8981\u4e70\u4e66\uff1f\u641c\u7d22\u4f5c\u8005\u7684\u540d\u5b57\uff01\u4f8b\u5982\uff1a\u5c3c\u5c14\u00b7\u57c3\u4e9a\u5c14(Nir EYal)\uff0c\u4f0a\u83b2\u00b7\u6ce2\u83f2\u5c14\u7279(Elaine Pofeldt)\u3002\n\u5176\u6b21\uff0c\u6211\u770b\u4e86\u4e00\u4e0bListen-Real-Time\u9875\u9762\uff0c\u5728\u90a3\u91cc\u5b83\u663e\u793a\u4e86\u4eba\u4eec\u5728Listen Notes\u5e73\u53f0\u4e0a\u6b63\u5728\u6536\u542c\u7684\u5185\u5bb9\u3002\u6bcf\u6b21\u6211\u76ef\u7740Listen Real-Time\u9875\u9762\uff0c\u6211\u90fd\u4f1a\u60ca\u8bb6\u4e8e\u64ad\u5ba2\u5185\u5bb9\u7684\u591a\u6837\u6027\u3002\u6211\u7ecf\u5e38\u4ece\u672a\u77e5\u7684\u64ad\u5ba2\u4e2d\u53d1\u73b0\u6709\u8da3\u7684\u60c5\u8282\uff0c\u800c\u82f9\u679c\u64ad\u5ba2\u7684\u8bc4\u8bba\u4e3a\u96f6\u3002\n\u7b2c\u4e09\uff0c\u6211\u770b\u4e86\u4e00\u773c\u6211\u7684\u4e66\u7b7e\u64ad\u5ba2\u7684\u6700\u65b0\u4e00\u96c6\u3002\u7a0d\u540e\u6536\u542c\u7684\u64ad\u653e\u5217\u8868\u53ef\u4ee5\u540c\u65f6\u5305\u542b\u5267\u96c6\u548c\u64ad\u5ba2\u3002\u6211\u901a\u5e38\u4f1a\u6839\u636e\u6700\u8fd1\u7684\u53d1\u5e03\u65e5\u671f\u5bf9\u90a3\u4e9b\u6709\u4e66\u7b7e\u7684\u64ad\u5ba2\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4e9b\u662f\u6211\u559c\u6b22\u7684\u64ad\u5ba2\uff0c\u4f46\u6211\u4e0d\u592a\u53ef\u80fd\u6709\u65f6\u95f4(\u548c\u5174\u8da3)\u53bb\u542c\u5b83\u4eec\u7684\u6bcf\u4e00\u96c6\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5df2\u7ecf\u4e3a70\u591a\u4e2a\u64ad\u5ba2\u200a\u6dfb\u52a0\u4e86\u4e66\u7b7e\u3002\u6ce8\uff1a\u6211\u4e0d\u80fd\u8ba2\u960570\u4e2a\u64ad\u5ba2\uff1b\u5426\u5219\uff0c\u592a\u591a\u672a\u64ad\u653e\u7684\u65b0\u8282\u76ee\u4f1a\u8ba9\u6211\u5e94\u63a5\u4e0d\u6687\uff1a)\u3002\n\u6b64\u5916\uff0c\u5728\u6bcf\u4e2a\u64ad\u5ba2\u9875\u9762(\u793a\u4f8b)\u6216\u5267\u96c6\u9875\u9762(\u793a\u4f8b)\u7684\u4fa7\u8fb9\u680f\u4e0a\uff0c\u6700\u591a\u67098\u4e2a\u63a8\u8350\u3002\n\u7b2c\u56db\uff0cListen Note Chrome Extension\u63a8\u8350\u4e0e\u6211\u8bbf\u95ee\u7684\u7f51\u7ad9\u76f8\u5173\u7684\u64ad\u5ba2\u3002\u6211\u4e4b\u6240\u4ee5\u6784\u5efa\u8fd9\u4e2aChrome\u6269\u5c55\uff0c\u662f\u56e0\u4e3a\u6211\u603b\u662f\u60f3\u77e5\u9053\u67d0\u4e2a\u7f51\u7ad9(\u6216\u516c\u53f8)\u662f\u5426\u6709\u5b98\u65b9\u64ad\u5ba2\uff1a)\u539f\u6765\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u64ad\u5ba2\uff01\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4e5f\u4f1a\u4ece\u53e3\u53e3\u76f8\u4f20\u4e2d\u83b7\u5f97\u64ad\u5ba2\u63a8\u8350\uff0c\u4f8b\u5982Twitter\u3001\u7535\u5b50\u90ae\u4ef6\u65f6\u4e8b\u901a\u8baf\uff0c\u6216\u8005\u901a\u8fc7\u77ed\u4fe1\u6216\u7535\u5b50\u90ae\u4ef6\u4ece\u6211\u7684\u670b\u53cb\u90a3\u91cc\u83b7\u5f97\u63a8\u8350\u3002\u8fd9\u662f\u975e\u5e38\u8001\u5f0f\u7684\u505a\u6cd5\uff0c\u4f46\u5b83\u9002\u7528\u4e8e\u6240\u6709\u5a92\u4f53\u7c7b\u578b(\u4f8b\u5982\uff0cYouTube\u89c6\u9891\u3001\u4e66\u7c4d\u3001\u65b0\u95fb\u6587\u7ae0)\u3002\n\u6211\u4ece\u4e0d\u4f1a\u7528\u5b8c\u6211\u4e3b\u64ad\u653e\u5217\u8868\u4e2d\u53ef\u542c\u7684\u64ad\u5ba2\u5185\u5bb9\u3002\u800c\u4e14\u6211\u4ece\u6765\u4e0d\u4f1a\u89c9\u5f97\u81ea\u5df1\u88ab\u5185\u5bb9\u538b\u5f97\u5598\u4e0d\u8fc7\u6c14\u6765\u3002\n\u51e0\u5e74\u524d\uff0c\u5f53\u6211\u8ba2\u9605\u4e86\u5927\u7ea610\u4e2a\u64ad\u5ba2\u65f6\uff0c\u5f53\u8fd9\u4e9b\u64ad\u5ba2\u7684\u65b0\u96c6\u5f00\u59cb\u5728\u200a-\u200a\u4e0a\u51fa\u73b0\u65f6\uff0c\u6211\u611f\u5230\u4e0d\u77e5\u6240\u63aa\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e00\u96c6\u90fd\u503c\u5f97\u4e00\u542c\u3002\u6240\u4ee5\u6211\u5f88\u5feb\u5c31\u628a\u672a\u64ad\u653e\u7684\u5267\u96c6\u5806\u4e86\u8d77\u6765\u3002\n\u73b0\u5728\uff0c\u6211\u8981\u6ce8\u610f\u7684\u662f\u53ea\u6311\u9009\u6211\u771f\u6b63\u60f3\u542c\u7684\u5267\u96c6\u3002\u6211\u53ef\u4ee5\u6d4f\u89c8\u6570\u767e\u4e2a(\u5f88\u5feb\u5c31\u662f\u6570\u5343\u4e2a)\u4e0d\u540c\u7684\u64ad\u5ba2\u3002\n\u5f53\u7136\uff0c\u6211\u7528AirPods\u6536\u542c\u64ad\u5ba2\uff01\u8f83\u65e9\u524d\uff0c\u6211\u63d0\u5230\u6211\u901a\u5e38\u4e0e\u59bb\u5b50\u4e00\u8d77\u5728\u516c\u8def\u65c5\u884c\u65f6\u6536\u542c\u64ad\u5ba2\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u4eec\u5728\u6742\u8d27\u5e97\u8d2d\u7269\u65f6\uff0c\u6211\u4eec\u751a\u81f3\u4e00\u8d77\u542c\u540c\u6837\u7684\u64ad\u5ba2\uff01\n\u6211\u7684\u64ad\u5ba2\u6536\u542c\u7a0b\u5e8f\u542c\u8d77\u6765\u590d\u6742\u5417\uff1f\u55ef\uff0c\u7b97\u662f\u5427\u3002\u4f46\u8fd9\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4e00\u4e2a\u4e3b\u64ad\u653e\u5217\u8868\u200a-\u200a\uff0c\u8fd9\u662f\u6211\u7684\u97f3\u9891\u7248\u672c\u7684\u7ef4\u57fa\u767e\u79d1\uff0c\u7528\u4e8e\u975e\u6b63\u5f0f\u5b66\u4e60\u3002\n\u5982\u679c\u4f60\u60f3\u542c\u6211\u542c\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u8ba2\u9605\u6211\u7684\u4e3b\u64ad\u653e\u5217\u8868\u3002\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u5f00\u59cb\u4f60\u81ea\u5df1\u7684\u4e3b\u64ad\u653e\u5217\u8868\uff1ahttps://www.listennotes.com/listen/", "note_en": "In this article, I\u2019ll explain why podcasts replaced a lot of my Wikipedia usage for informal learning. I\u2019ll also talk about how I listen to five-plus hours of podcasts every day!\n Three passions, simple but overwhelmingly strong, have governed my life: the longing for love,\u00a0 the search for knowledge, and unbearable pity for the suffering of mankind. \u2014 The Prologue to \u00a0Bertrand Russell\u2019s autobiography ( full text)\n   In the Web 2.0 era (mid 2000s - early 2010s), Wikipedia was a great informal learning resource for me. Whenever I wanted to learn about a new topic, a historic event, or a famous person, I searched on Google. Wikipedia pages were usually among the first few search results.\n I would read the Wikipedia page and decide if I wanted to dig deeper (e.g., find books to read on the subject). Most often, I learned enough from just reading a Wikipedia page and moved on.\n For example, when I wanted to learn Django (a Python programming framework), I started with the Wikipedia entry \u00a0Django (web framework). Same as learning about the life of \u00a0Don Valentine, the city of \u00a0Kyoto, the historic event \u00a0Battle of Kunyang, an overview of \u00a0Game of Thrones, and more.\n Note: Reading Wikipedia pages is just the beginning of learning something, which is what I mean by &#34;informal learning&#34;. If I gain enough interest, I&#39;ll find other more serious materials (e.g., books, programming docs...) for &#34;formal learning&#34;.\n   Then around 2013, I started to work as a software engineer full-time. In open office workplaces, many knowledge workers listened to music via Spotify, Pandora, or the like, while working on a computer.\n But I felt guilty for not learning new things and just listening to music all day long. Instead, I started to listen to podcasts while I worked (mostly writing code), consuming tons of information from these podcasts, e.g., true crime cases, news, career paths for engineers, venture capitalists, and entrepreneurs, and learning about historic events.\n But how is it possible to listen to podcasts at a programming job? Well, other than writing &#34;if... else...&#34; logics, there are actually a lot of &#34;low thinking&#34; tasks in modern software engineering, e.g., writing unit tests, refactoring code, copying &amp; pasting code from Stack Overflow, tweaking CSS styling, tweaking config files for some server software, playing with 3rd party APIs, messing with HTML, configuring IDE, setting up dev environment, waiting for CI to finish, writing throwaway code to test out new technology, experimenting some low risk DevOps tasks on local dev or staging, testing coworker&#39;s code locally for code review, manually doing QA for certain product features...\n Turns out I&#39;m not the only one who listen to podcasts while writing code \u2013\n Why&#39;d it take me 10 years to realize I could listen to a podcast or audio book and code at the same time without losing much productivity or comprehension?\n\u2014 Courtland Allen (@csallen)  May 17, 2018\n  Fast forward to 2016 and I found that I was consuming more information from podcasts than from other media formats like TV, YouTube videos, or news websites. To be precise, I spent five-plus hours per day listening to podcasts when I was writing code, commuting to work, working out in the gym, grocery shopping, and so on.\n Basically, whenever my hands and eyes were busy but my mind was free, I would listen to podcasts.\n Podcasts just make knowledge accessible, like Wikipedia. There are tons of podcasts on the Internet that cover basically every topic!\n    It\u2019s easier to produce a podcast than write a book, a blog post, or produce a video. It lowers the bar for subject experts who produce content\u200a\u2014\u200athey just chat in front of a microphone!\n As a listener, how cool is it to listen to an expert on a subject dumping knowledge through my ears?\n The best part is that podcasts are free! Yes, there are a few exclusive podcasts available on walled garden platforms, but most great podcasts are free to listen to.\n Of course, many of them are ad-supported, so it\u2019s not completely free if you consider that the time spent listening to ads is money wasted. I might be biased, but I think podcast ads are less annoying than YouTube ads :).\n   In early 2017, I built a podcast search engine,\u00a0 Listen Notes, to help myself discover interesting podcast episodes. There were so many podcasts, and I couldn\u2019t subscribe to them all.\n The old podcast listening model was to subscribe to a few shows and only listen to new episodes from those shows. This may have worked in 2013 when there were not many podcasts.\n It\u2019s like when we bookmarked a few websites in the mid 1990s and visited those few websites again and again because there were not a lot of websites on the Internet.\n As the volume of podcasts grows faster and faster, the subscribe-then-listen-to-only-a-few-shows model won\u2019t work any more.\n Gradually, I added new features to Listen Notes and turned it into my full-time job in late 2017. I\u2019ve been working on Listen Notes for over two years so far. Btw, you may be interested in\u00a0 the tech stack of Listen Notes.\n       As of writing this article (February 2020), I\u2019ve listened to more than 3,100 podcast episodes since late 2017.\n   I subscribe to this master playlist on\u00a0 Overcast. Other than that, I don\u2019t subscribe to individual podcasts\u200a\u2014\u200awhich is very different than most podcast listeners out there.\n I also have a private playlist with only Chinese podcasts that I share with my wife :). We both add episodes to that playlist periodically. It\u2019s fun to listen to podcasts together in the car when we are on a road trip.\n     If you are an \u00a0Instapaper\u00a0or \u00a0Pocket\u00a0user, you may be familiar with the \u201cread it later\u201d concept\u200a\u2014\u200ayou come across an online article, but you don\u2019t have time to read it right away, so you add the article to Instapaper or Pocket to read later.\n On Listen Notes, I named the playlist feature as \u201c Listen Later.\u201d You get the idea.\n  First, when I encounter topics or people that I\u2019m interested in, I just search on Listen Notes and add a few episodes to my master playlist. This is similar to how I used Wikipedia\u2019s keyword search!\n  Want to learn basic concepts of a new programming framework? Search for the name of the creator of that programming framework and binge listen to their podcast interviews! Examples: \u00a0Evan You\u00a0of Vue, \u00a0DHH\u00a0of Rails\n Are you meeting an investor in Silicon Valley? Search the name of that investor to know a bit about them! Examples: \u00a0Mike Maples, \u00a0Adam Draper\n A company just got acquired? Search the name of its founder to learn the journey of this company! Examples: \u00a0Chris Wanstrath\u00a0of GitHub, \u00a0Zach Perret\u00a0of Plaid\n See a historic event discussed on Twitter? Search the names of the people involved! Example: \u00a0Charles Manson\n Deciding whether to buy a book or not? Search the author\u2019s name! Examples: \u00a0Nir Eyal, \u00a0Elaine Pofeldt\n Second, I look at the \u00a0Listen Real-Time\u00a0page, where it displays what people are listening to on the Listen Notes platform. Every time I stare at the Listen Real-Time page, I\u2019m amazed at how versatile podcast contents are. I often find interesting episodes from unknown podcasts that have zero reviews on Apple Podcasts.\n    Third, I take a glance at the latest episodes of my bookmarked podcasts. A\u00a0 Listen Later\u00a0playlist can have both episodes and podcasts. I typically sort those bookmarked podcasts by the latest published date. These are the podcasts I like, but it\u2019s unlikely that I\u2019ll have time (and interest) to listen to every new episode of them.\n So far, I\u2019ve bookmarked over 70 podcasts\u200a. Note: I can\u2019t subscribe to 70 podcasts; otherwise, it would be too overwhelming with tons of unplayed new episodes :)\n    Also, on the sidebar of each podcast page ( Example) or episode page ( Example), there are up to eight recommendations.\n    Fourth,\u00a0 Listen Note Chrome Extension\u00a0suggests podcasts associated with the websites I visit. I built this Chrome Extension because I always wonder if a particular website (or a company) has official podcasts or not :) Turns out more and more companies are starting their own podcasts!\n    Last but not least, I also get podcast recommendations from word of mouth, e.g., Twitter,\u00a0 email newsletters, or recommendations from my friends via texts or email. This is very old school, but it works well for all media types (e.g., YouTube videos, books, news articles).\n I never run out of podcast content to listen to from \u00a0my master playlist. And I never feel too overwhelmed with content.\n A few years ago, when I subscribed to around 10 podcasts, I felt overwhelmed when new episodes of those podcasts started coming in\u200a\u2014\u200anot every episode was worth listening to. So I quickly piled up unplayed episodes.\n Now, I\u2019m mindful to only pick episodes that I actually want to listen to. I get to explore hundreds (soon thousands) of different podcasts.\n  Of course, I use AirPods to listen to podcasts! Earlier on, I mentioned that I usually listen to podcasts together with my wife on road trips. Actually, we even listen to the same podcasts together when grocery shopping!\n     Does my podcast listening routine sound complex? Well, kind of. But it really boils down to just a master playlist\u200a\u2014\u200amy audio version of Wikipedia for informal learning.\n  You can \u00a0subscribe to my master playlist\u00a0if you want to listen to whatever I listen to. Or you can start your own master playlist: \u00a0https://www.listennotes.com/listen/", "posttime": "2020-05-16 03:43:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64ad\u5ba2,\u5b66\u4e60,wikipedia", "title": "\u4e3a\u4ec0\u4e48\u64ad\u5ba2\u662f\u6211\u7684\u65b0\u7ef4\u57fa\u767e\u79d1-\u5b8c\u7f8e\u7684\u975e\u6b63\u5f0f\u5b66\u4e60\u8d44\u6e90", "title_en": "Why Podcasts Are My New Wikipedia \u2013 The Perfect Informal Learning Resource", "transed": 1, "url": "https://lnns.co/6ArPszTwvDE", "via": "", "real_tags": ["\u64ad\u5ba2", "\u5b66\u4e60", "wikipedia"]}, {"category": "", "categoryclass": "", "imagename": "1c1f5e7dbafe061871ecea0c8e7606b5.jpeg", "infoid": 1002284, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": ".bigTop__review{\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b}.bigTop__VideoPlayerBox{\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b}.bigTop__VideoPlayerBox--\u88ab\u52a8{\u5bbd\u5ea6\uff1a100%\uff1b\u9ad8\u5ea6\uff1a100%\uff1b\u9876\u90e8\uff1a0\uff1b\u5de6\u4fa7\uff1a0\uff1b\u4e0d\u900f\u660e\u5ea6\uff1a0\uff1b/*z\u7d22\u5f15\uff1a-1\uff1b*/}.bigTop__VideoPlayerBox--\u56de\u9000{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1bz\u7d22\u5f15\uff1a0\uff1b}.bigTop__VideoPlayerBox--\u3002\u4e0d\u900f\u660e\u5ea6\uff1a1\uff1bz-index\uff1a1\uff1b}.bigTop__VideoPlayer{\u4f4d\u7f6e\uff1a\u76f8\u5bf9\uff1b\u586b\u5145-\u5e95\u90e8\uff1a56.25%\uff1b}.bigTop__codeholder{\u663e\u793a\uff1a\u65e0\uff1b}.bigTop__\u5e7b\u706f\u7247\u663e\u793a{\u5149\u6807\uff1a\u6307\u9488\uff1b\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u5e95\u90e8\uff1a0\uff1b\u53f3\u4fa7\uff1a0\uff1b\u80cc\u666f\u8272\uff1a#FFF\uff1b\u586b\u5145\uff1a10px\uff1b\u5bbd\u5ea6\uff1a300px\uff1b}.bigTop__button{\u8fb9\u6846\u5bbd\u5ea6\uff1a2px\uff1b\u8fb9\u6846\u6837\u5f0f\uff1a\u5b9e\u5fc3\uff1bfont\u3002\u6587\u672c\u8f6c\u6362\uff1a\u5927\u5199\uff1b\u5b57\u4f53\u5927\u5c0f\uff1a12px\uff1b\u5b57\u6bcd\u95f4\u8ddd\uff1a1px\uff1b\u5149\u6807\uff1a\u6307\u9488\uff1b\u9875\u8fb9\u8ddd\uff1a0\uff1b\u586b\u5145\uff1a6px 15px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b\u8fc7\u6e21\uff1a\u989c\u8272300ms\uff0c\u80cc\u666f\u989c\u8272300ms\uff1b}.bigTop_button--\u5d4c\u5165{\u80cc\u666f\uff1a\u900f\u660e\uff1b\u989c\u8272\uff1a#FFF\uff1b\u8fb9\u8ddd\uff1a30px\u81ea\u52a820px\uff1b\u6700\u5c0f\u5bbd\u5ea6\uff1a175px\uff1b\u8fb9\u6846\u989c\u8272\uff1a#FFF\uff1b}.bigTop_button--\u5d4c\u5165\uff1aho.\u3002\u8fb9\u6846\u989c\u8272\uff1a#333\uff1b\u80cc\u666f\u989c\u8272\uff1a#fff\uff1b}.bigTop__button--\u9ed1\u8272\uff1a\u60ac\u505c{color\uff1a#fff\uff1bback-color\uff1a#333\uff1b}.bigTop__Button--\u5185\u8054{\u7a7a\u8fb9\u8ddd\uff1a15px 0\uff1b}.bigTop__Atmotional{\u586b\u5145\uff1a0\uff1b\u8fb9\u8ddd\uff1a0\uff1b\u80cc\u666f\u5927\u5c0f\uff1a1px 1px\uff1b\u80cc\u666f\u4f4d\u7f6e\uff1a-1px-1px\uff1b}.bigTop__atomalic\uff1a\u7a7a{paddingBottom\uff1a0\uff1b\u80cc\u666f\u5927\u5c0f\uff1a1px 1px\uff1b\u80cc\u666f\u4f4d\u7f6e\uff1a-1px-1px\uff1b}.bigTop__atumular\uff1a\u7a7a{paddingBottom\uff1a}.bigTop__\u5927\u6c14\u89c6\u9891\uff0c.bigTop__\u5927\u6c14img{\u5bbd\u5ea6\uff1a100%\uff1b\u663e\u793a\uff1a\u5757\uff1b\u586b\u5145\uff1a0\uff1b\u9875\u8fb9\u8ddd\uff1a0\uff1b}/*\u7ec8\u7aef\u5a92\u4f53css*//*caption/credit*/.bigTop__captioncredit{\u663e\u793a\uff1a\u5757\uff1b\u5b57\u4f53\u7cfb\u5217\uff1a&#34\uff1b\u89c6\u7f51\u819c&#34\uff1b\uff0cHelvetica\uff0c\u5b8b\u4f53\uff0c\u65e0\u886c\u7ebf\uff1b\u989c\u8272\uff1a#666\uff1b\u8fb9\u8ddd\uff1a5px auto 0\uff1b\u586b\u5145\uff1a0 10px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b}.bigTop__Caption{font-size\uff1a14px\uff1bline-high\uff1a20px\uff1bfont-weight\uff1a300\uff1bdisplay\uff1ainline\uff1b}.bigTop_Credit{font-size\uff1a14px\uff1bline-high\uff1a20px\uff1bfont-weight\uff1a300\uff1btext-change\uff1auppercase\uff1bdisplay\uff1ainline\uff1b}/*\u7ed3\u675f\u5b57\u5e55/\u4fe1\u7528*//*\u89c6\u9891\u64ad\u653e\u6309\u94ae*/.bigTop__play{\u5bbd\u5ea6\uff1a50px\uff1b\u9ad8\u5ea6\uff1a50px\uff1b\u5149\u6807\uff1a\u6307\u9488\uff1b\u8fb9\u6846\uff1a1px#999\u5b9e\u5fc3\uff1b\u80cc\u666f\u989c\u8272\uff1aRGBA(0\uff0c0\uff0c0\uff0c0.7)\uff1b\u8fb9\u6846\u534a\u5f84\uff1a50%\uff1b\u6587\u672c\u7f29\u8fdb\uff1a-9999px\uff1b\u663e\u793a\uff1a\u5757\uff1b\u6846\u5927\u5c0f\u8c03\u6574\u3002.bigTop__play\uff0c.bigTop__VideoPlayerBox\uff1aHOVER+.bigTop__PLAY--\u72ec\u7acb\uff0c.bigTop__PLAY--HOVER{\u80cc\u666f\u989c\u8272\uff1a#0080c3\uff1b\u8fb9\u6846\u989c\u8272\uff1a#0080c3\uff1b}.bigTop__PLAY\uff1a\u4e4b\u524d{\u5bbd\u5ea6\uff1a0\uff1b\u9ad8\u5ea6\uff1a0\uff1b\u8fb9\u6846-\u9876\u90e8\uff1a11px\u7eaf\u8272\u900f\u660e\uff1b\u8fb9\u6846-\u5e95\u90e8\uff1a12px\u7eaf\u8272\u900f\u660e\uff1b\u8fb9\u6846-\u5de6\u8fb9\uff1a18px\u5b9e\u4f53#fff\uff1b\u5185\u5bb9\uff1a&#34\uff1b}.bigTop__VideoTrigger{\u5149\u6807\uff1a\u6307\u9488\uff1b\u5bbd\u5ea6\uff1a100%\uff1b\u9ad8\u5ea6\uff1a100%\uff1b\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u9876\u90e8\uff1a0\uff1b\u5de6\u4fa7\uff1a0\uff1b}.bigTop__play--\u72ec\u7acb{\u4f4d\u7f6e\uff1a\u7edd\u5bf9\uff1b\u9876\u90e8\uff1a50%\uff1b\u5de6\u4fa7\uff1a50%\uff1bTransform\uff1aTranslateY(-50%)TranslateX(-50%)\uff1b-webkit-Transform\uff1aTranslateY(-50%)TranslateX(-50%)\uff1bPointer-Events\uff1aNone\uff1b}/*\u89c6\u9891\u6309\u94ae*//*/.bigTopPage_Grid{padding\uff1a0 10px\uff1b\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\u5927\u5c0f\uff1a\u8fb9\u6846\uff1b\u5de6\u9875\u8fb9\u8ddd\uff1a\u81ea\u52a8\uff1b\u53f3\u9875\u8fb9\u8ddd\uff1a\u81ea\u52a8\uff1b}/*\u7ed3\u675f\u9875\u9762\u7f51\u683c**/*/.plitTop.bigTop__rel{\u80cc\u666f\u989c\u8272\uff1a#222\uff1b}.plitTop.bigTop__text\uff0c.plitTop.bigTop__flash\uff0c.plitTop.bigTop__flash\uff1alink\uff0c.plitTop.\u3002}.plitTop.bigTop--lightTheme.bigTop__rel{Background-color\uff1a#fff\uff1b}.plitTop.bigTop--lightTheme.bigTop__text\uff0c.plitTop.bigTop--lightTheme.bigTop_flash\uff0c.plitTop.bigTop--lightTheme.bigTop__flash\uff1alink\uff0c.plitTop.bigTop--lightTheme.bigTop_hed\uff0c.plitTop.bigTop\u3002}.\u62c6\u5206\u9876\u90e8.bigTop__overlay--Bottom\uff0c.plitTop.bigTop__overlay--\u9876\u90e8{\u80cc\u666f\uff1a\u521d\u59cb\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__media{\u6d6e\u52a8\uff1a\u53f3\uff1b\u5bbd\u5ea6\uff1a50%\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__captionCredit{\u6587\u672c\u5bf9\u9f50\uff1a\u53f3\uff1b\u989c\u8272\uff1a#666\uff1b}.\u62c6\u5206\u9876\u90e8.bigTop__text.bigTop__text--\u5e95\u90e8\uff0c.plitTop.bigTop__text.bigTop_text--\u53d8\u6362\uff1a\u5e73\u79fb(-50%\uff0c-50%)\uff1b-webkit-Transform\uff1a\u7ffb\u8bd1(-50%\uff0c-50%)\uff1b\u5bbd\u5ea6\uff1a50%\uff1b\u6700\u5c0f\u9ad8\u5ea6\uff1a\u521d\u59cb\uff1b\u586b\u5145\uff1a0 30px\uff1b}.edit-Japan.plitTop.bigTop__hed\uff0c.edit-Japan.plitTop.bigTop__dek{text-align\uff1aLeft\uff1b}/*\u4ec5\u96504\u4e2a\u5355\u5143*/@\u5a92\u4f53(\u6700\u5927\u5bbd\u5ea6\uff1a639px){.plitTop.bigTop__rel{paddingTop\uff1a15px\uff1b}.plititOnly(\u6700\u5927\u5bbd\u5ea6\uff1a639px){.plitTop.bigTop__rel{padd-Bottom\uff1a15px\uff1b}.plititOnly\u3002}.plitTop.bigTop__captionCredit{text-align\uff1aLeft\uff1bcolor\uff1a#f4f4f4\uff1b}.plitTop.bigTop--lightTheme.bigTop__captionCredit{color\uff1a#666\uff1b}.plitTop.bigTop__text.bigTop__text--Bottom\uff0c.plitTop.bigTop__text.bigTop__text--Bottom{positi", "note_en": ".bigTop__preview { opacity: 0;}.bigTop__videoPlayerBox { position: absolute;}.bigTop__videoPlayerBox--passive { width: 100%; height: 100%; top: 0; left: 0; opacity: 0; /*z-index: -1;*/}.bigTop__videoPlayerBox--fallback { position: relative; z-index: 0;}.bigTop__videoPlayerBox--fallback .videoHint { display: none !important;}.bigTop__videoPlayerBox--active { width: 100%; height: 100%; top: 0; left: 0; opacity: 1; z-index: 1;}.bigTop__videoPlayer { position: relative; padding-bottom: 56.25%;}.bigTop__codeholder { display: none;}.bigTop__slideshow { cursor: pointer; position: absolute; bottom: 0; right: 0; background-color: #fff; padding: 10px; width: 300px;}.bigTop__button { border-width: 2px; border-style: solid; font-family: &#39;Retina&#39;, Helvetica, Arial, sans-serif; font-weight: 600; text-transform: uppercase; font-size: 12px; letter-spacing: 1px; cursor: pointer; margin: 0; padding: 6px 15px; box-sizing: border-box; transition: color 300ms, background-color 300ms;}.bigTop_button--embedded { background: transparent; color: #fff; margin: 30px auto 20px; min-width: 175px; border-color: #fff;}.bigTop_button--embedded:hover { color: #333; background-color: #fff;}.bigTop__button--black { color: #333; border-color: #333; background-color: #fff;}.bigTop__button--black:hover { color: #fff; background-color: #333;}.bigTop__button--inline { margin: 15px 0 0;}.bigTop__atmospheric { padding: 0; margin: 0; background-size: 1px 1px; background-position: -1px -1px;}.bigTop__atmospheric:empty { padding-bottom: 56.25%; background-color: #000; background-size: cover; background-repeat: no-repeat;}.bigTop__atmospheric video,.bigTop__atmospheric img { width: 100%; display: block; padding: 0; margin: 0;}/******** end media CSS *******//******************caption/credit********************/.bigTop__captioncredit { display: block; font-family: &#34;Retina&#34;, Helvetica, Arial, sans-serif; color: #666; margin: 5px auto 0; padding: 0 10px; box-sizing: border-box;}.bigTop__caption { font-size: 14px; line-height: 20px; font-weight: 300; display: inline;}.bigTop__credit { font-size: 14px; line-height: 20px; font-weight: 300; text-transform: uppercase; display: inline;}/******** end caption/credit ******//******** Video Play Button *********/.bigTop__play { width: 50px; height: 50px; cursor: pointer; border: 1px #999 solid; background-color: rgba(0, 0, 0, 0.7); border-radius: 50%; text-indent: -9999px; display: block; box-sizing: border-box;}.bigTop__videoPlayerBox:hover + .bigTop__text &gt; .bigTop__play,.bigTop__videoPlayerBox:hover + .bigTop__play--standalone,.bigTop__play--hover { background-color: #0080c3; border-color: #0080c3;}.bigTop__play:before { width: 0; height: 0; border-top: 11px solid transparent; border-bottom: 12px solid transparent; border-left: 18px solid #fff; content: &#34; &#34;; position: absolute; display: block; margin-top: 13px; margin-left: 18px;}.bigTop__videoTrigger { cursor: pointer; width: 100%; height: 100%; position: absolute; top: 0; left: 0;}.bigTop__play--standalone { position: absolute; top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); pointer-events: none;}/***** Video Button *****//********************Make bigTop align to page grid***********************/.bigTopPage__grid { padding: 0 10px; box-sizing: border-box; margin-left: auto; margin-right: auto;}/*** end page grid **//********************splitTop styling***********************/.splitTop .bigTop__rel { background-color: #222;}.splitTop .bigTop__text,.splitTop .bigTop__flash,.splitTop .bigTop__flash:link,.splitTop .bigTop__hed,.splitTop .bigTop__dek { color: #fff;}.splitTop.bigTop--lightTheme .bigTop__rel { background-color: #fff;}.splitTop.bigTop--lightTheme .bigTop__text,.splitTop.bigTop--lightTheme .bigTop__flash,.splitTop.bigTop--lightTheme .bigTop__flash:link,.splitTop.bigTop--lightTheme .bigTop__hed,.splitTop.bigTop--lightTheme .bigTop__dek { color: #000;}.splitTop .bigTop__overlay { background-color: transparent;}.splitTop .bigTop__overlay--bottom,.splitTop .bigTop__overlay--top { background: initial;}.splitTop .bigTop__media { float: right; width: 50%;}.splitTop .bigTop__captioncredit { text-align: right; color: #666;}.splitTop .bigTop__text.bigTop__text--bottom,.splitTop .bigTop__text.bigTop__text--top { position: absolute; top: 50%; bottom: auto; left: 25%; transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%); width: 50%; min-height: initial; padding: 0 30px;}.edition-japan .splitTop .bigTop__hed,.edition-japan .splitTop .bigTop__dek { text-align: left;}/* 4 unit only */@media (max-width: 639px) { .splitTop .bigTop__rel { padding-bottom: 15px; } .splitTop .bigTop__media { float: none; width: 100%; } .splitTop .bigTop__captioncredit { text-align: left; color: #f4f4f4; } .splitTop.bigTop--lightTheme .bigTop__captioncredit { color: #666; } .splitTop .bigTop__text.bigTop__text--bottom, .splitTop .bigTop__text.bigTop__text--bottom { position: relative; width: auto; top: auto; left: auto; margin: 40px 20px; padding: 0; transform: none; -webkit-transform: none; } .bigTop__flash.flashlineSVG { margin-left: 0; }}/* 4, 8 unit splitTop font styling */@media (max-width: 979px) { .splitTop .bigTop__text .bigTop__hed { font-size: 32px; line-height: 1.12; } .wsj-modern span.bigTop__flash.flashlineSVG { text-indent: 215px; } .splitTop .bigTop__text .bigTop__dek { font-size: 16px; line-height: 1.38; }}/* 12, 16 unit splitTop font styling */@media (min-width: 980px) { .splitTop .bigTop__text .bigTop__hed { font-size: 52px; line-height: 1; } .splitTop .bigTop__text .bigTop__dek { font-size: 20px; line-height: 1.3; }}/*** end splitTop styling **//*****SECTION SPECIFIC STYLING***/.magazine .bigTop__flash,.magazine .bigTop__flash:link,.magazine .bigTop__flash:visited,.magazine .bigTop__flash:active { font-family: &#39;Retina Wide&#39;, &#39;Retina Narrow&#39;, &#39;Retina&#39;, &#39;Arial&#39;, sans-serif;}.magazine .bigTop__hed { font-weight: 400;}.magazine .bigTop__dek { font-family: &#39;Exchange&#39;, &#39;Chronicle SSm&#39;, Georgia, serif;}/***************Set via media query and not via classesto prevent page jump/rerenderPreviously set via CSS classes, e.g. bigTop__text--static, bigTop__hed-s,but it took too long for the page to &#34;settle&#34;**//* 4 unit only */@media (max-width: 639px) { .bigTopHide--4, .bigTop__flash.bigTopHide--4 { display: none; } .bigTop { margin: 0 0 20px; } .bigTop__overlay { display: none; } .bigTop__media--image { padding-bottom: 66.77%; } .bigTop__text { position: static; margin-top: 15px; text-align: left; margin-left: 10px; margin-right: 10px; width: auto; } .bigTop__overlay { display: none; } .bigTop__flash, .bigTop__flash:link, .bigTop__flash:active, .bigTop__flash:visited { color: #0080c3; text-align: left; } .bigTop__hed { font-size: 32px; line-height: 1.125; color: #000; text-align: left; } .bigTop__dek { font-size: 17px; line-height: 24px; color: #666; text-align: left; } .bigTop__flash + .bigTop__hed { margin-top: 4px; } .bigTop__hed + .bigTop__dek { margin-top: 1px; } .bigTop__dek:last-child { margin-bottom: 15px; } .bigTop__hed:last-child { margin-bottom: 14px; } .bigTop_button--embedded { margin: 15px 0 10px; color: #000; border-color: #000; min-width: 150px; } .bigTop_button--embedded:hover { background-color: #000; color: #fff; } .bigTop__text--flex &gt; .bigTop__play, .bigTop__play--standalone { position: absolute; top: 28vw; /* half of bottom padding of video elem */ left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); pointer-events: none; } .bigTop__videoTrigger { height: 0; padding-bottom: 56.25%; } .bigTop__flash.flashlineSVG { background-size: contain; } .wsj-modern .bigTop__text span:before { margin-left: 10px; }}/* 8 unit */@media (min-width: 640px) and (max-width: 979px) { .bigTop__captioncredit, .bigTop__text { max-width: 640px; } .wsj-modern .splitTop span.bigTop .bigTop__flash.flashlineSVG { min-width: 282px; } .bigTop__text.bigTop__text--bottom { box-sizing: border-box; min-height: 40%; top: auto; bottom: 0; padding-bottom: 10px; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); box-sizing: border-box; } .wsj-modern .bigTop span.bigTop__flash.flashlineSVG { max-width: 239px; min-height: 15px; max-height: 15px; min-width: 350px; } .wsj-modern .splitTop.bigTop span.bigTop__flash.flashlineSVG { min-width: 279px; } .bigTop__text.bigTop__text--top { top: auto; bottom:60%; max-height: 40%; padding-top: 10px; box-sizing: border-box; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__hed { font-size: 42px; line-height: 1.095; } .bigTop__hed + .bigTop__dek { margin-top: 9px; } .bigTop__flash + .bigTop__hed { margin-top: 5px; } .bigTop_button--embedded { margin: 20px auto; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { position: static; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { margin-top: 15px; } .bigTop__text--flex &gt; .bigTop__play + .bigTop__flash { margin-top: 15px; } .wsj-modern .splitTop .bigTop__text span:before { margin-left: 10px; }}/* 8, 12, 16 unit */@media (min-width: 640px) { .bigTopHide--8, .bigTopHide--12, .bigTopHide--16, .bigTop__flash.bigTopHide--8, .bigTop__flash.bigTopHide--12, .bigTop__flash.bigTopHide--16 { display: none; } .bigTop__rel { overflow: hidden; /* fix horizontal scroll in IE11 */ } .bigTop__media--image { padding-bottom: 51.3%; } .bigTop__media--image &gt; .bigTop__preview--forceblur { --webkit-filter: blur(20px); filter: blur(20px); } .bigTop__text { position: absolute; top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%); -webkit-transform: translateY(-50%) translateX(-50%); } .bigTop__dek { font-size: 20px; line-height: 28px; } .bigTop__text--static.bigTop__text { color: #000; position: static; transform: none; margin-left: auto; margin-right: auto; } .bigTop__text--inactive.bigTop__text--bottom, .bigTop__text--inactive.bigTop__text--center { opacity: 0; } .bigTop__text.bigTop__text--flex { flex-direction: column; display: flex; justify-content: flex-end; align-items: center; height: 100%; } .bigTop__text--clickthrough { pointer-events: none; } .bigTop__text--clickthrough &gt; .bigTop__flash, .bigTop__text--clickthrough &gt; .bigTop__hed, .bigTop__text--clickthrough &gt; .bigTop__dek { pointer-events: auto; } .bigTop__text.bigTop__text--flex.bigTop__text--center { justify-content: center; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { order: 2; }}/* 12 unit */@media (min-width: 980px) and (max-width: 1299px) { .bigTop__captioncredit { max-width: 960px; } .splitTop .bigTop__captioncredit { max-width: none; } .bigTop__play { width: 70px; height: 70px; } .bigTop__play:before { border-top-width: 16px; border-bottom-width: 17px; border-left-width: 26px; margin-top: 18px; margin-left: 25px; }}/* 12, 16 unit */@media (min-width: 980px) { .splitTop .bigTop__captioncredit { margin: 0; padding: 5px 5px 0 0; width: 50%; float: right; } .bigTop__hed { font-size: 52px; line-height: 1.077; } .edition-japan .bigTop__hed { font-size: 45px; } .bigTop__text { max-width: 960px; } .bigTop__text.bigTop__text--bottom { box-sizing: border-box; min-height: 30%; top: auto; bottom: 0; box-sizing: border-box; padding-bottom: 30px; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__text.bigTop__text--top { top: auto; bottom: 70%; max-height: 30%; padding-top: 10px; box-sizing: border-box; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__hed + .bigTop__dek { margin-top: 8px; } .bigTop__flash + .bigTop__hed { margin-top: 5px; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { /* need to do this because of IE11 */ position: absolute; top: 50%; left: 50%; transform: translateY(0) translateX(-50%); -webkit-transform: translateY(0) translateX(-50%); } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play + .bigTop__flash, .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play + .bigTop__hed { margin-top: 50px; } .bigTop__text--bottom.bigTop__text--flex &gt; .bigTop__play { margin-top: -45px; } .bigTop__text--center.bigTop__text--flex &gt; .bigTop__play { margin-top: 20px; } .bigTop__text--flex &gt; .bigTop__play + .bigTop__flash { margin-top: 15px; }}/* 16 unit */@media (min-width: 1300px) { .bigTop__captioncredit { max-width: 1280px; } .splitTop .bigTop__captioncredit { max-width: none; } .bigTop__play { width: 90px; height: 90px; } .bigTop__play:before { border-top-width: 20px; border-bottom-width: 22px; border-left-width: 33px; margin-top: 24px; margin-left: 33px; }}", "posttime": "2020-05-16 03:42:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,erases,bigtop", "title": "\u8c37\u6b4c\u5220\u9664\u6570\u5343\u4e2a\u94fe\u63a5\uff0c\u88ab\u865a\u5047\u6295\u8bc9\u6b3a\u9a97", "title_en": "Google Erases Thousands of Links, Tricked by Phony Complaints", "transed": 1, "url": "https://www.wsj.com/articles/google-dmca-copyright-claims-takedown-online-reputation-11589557001", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "erases", "bigtop"]}, {"category": "", "categoryclass": "", "imagename": "7245042964f260fe836d3ec31d4336d9.png", "infoid": 1002283, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b83\u76ee\u524d\u5b9e\u73b0\u4e86\u5404\u79cd\u521a\u4f53\u52a8\u529b\u5b66\u7b97\u6cd5\uff0c\u5305\u62ec\u6b63\u52a8\u529b\u5b66\u548c\u9006\u52a8\u529b\u5b66\uff0c\u4ee5\u53ca\u57fa\u4e8e\u8109\u51b2\u7ea7LCP\u548c\u57fa\u4e8e\u529b\u7684\u975e\u7ebf\u6027\u5f39\u7c27\u963b\u5c3c\u5668\u7684\u63a5\u89e6\u6a21\u578b\u3002\u5b9e\u73b0\u4e86\u7535\u673a\u3001\u4f3a\u670d\u548c\u4e32\u8054\u5f39\u6027\u6267\u884c\u5668(SEA)\u52a8\u529b\u5b66\u7684\u6267\u884c\u5668\u6a21\u578b\u3002\n\u6574\u4e2a\u4ee3\u7801\u5e93\u90fd\u662f\u6a21\u677f\u5316\u7684\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b63\u5411\u548c\u53cd\u5411\u6a21\u5f0f\u81ea\u52a8\u533a\u5206\u6807\u91cf\u7c7b\u578b\uff0c\u5982CppAD\u3001Stan Math fvar\u548cceres\uff1a\uff1ajet\u3002\u8be5\u5e93\u8fd8\u53ef\u4ee5\u4e0e\u5e38\u89c4\u6d6e\u70b9\u503c\u6216\u53cc\u7cbe\u5ea6\u503c\u4e00\u8d77\u4f7f\u7528\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u4f7f\u7528\u5305\u542b\u5b9a\u70b9\u6574\u6570\u6570\u5b66\uff0c\u5b83\u63d0\u4f9b\u8de8\u5e73\u53f0\u786e\u5b9a\u6027\u8ba1\u7b97\u3002\n\u6587\u4e2d\u63d0\u4f9b\u4e86\u5229\u7528CERES\u8fdb\u884c\u7cfb\u7edf\u8fa8\u8bc6\u7684\u68af\u5ea6\u548c\u4f7f\u7528\u63a7\u5236\u5de5\u5177\u7bb1\u751f\u6210\u8f68\u8ff9\u7684\u5b9e\u4f8b\u3002\nURDF\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7PyBullet\u63a5\u53e3\u6216\u57fa\u4e8eTinyXML2\u63d0\u4f9b\u7684\u89e3\u6790\u5668\u52a0\u8f7d\u3002\u56e0\u6b64\uff0c\u6240\u6709\u6a21\u62df\u529f\u80fd\u5747\u53ef\u7528\uff0c\u65e0\u9700PyBullet\u3002\n\u5efa\u8bae\u9996\u5148\u8bbe\u7f6eBLASFEO\u548cHPIPM\uff0c\u4ee5\u83b7\u5f97\u66f4\u9ad8\u6548\u7684\u89e3\u7b97\u5668\uff0c\u8fd9\u4e9b\u89e3\u7b97\u5668\u4e5f\u53ef\u4ee5\u5904\u7406\u4f18\u5316\u95ee\u9898\u4e2d\u7684\u7ea6\u675f\uff1a\n\u7136\u540e\u5b89\u88c5CppADCodeGen(\u6211\u4eec\u5e76\u4e0d\u771f\u6b63\u9700\u8981\u5b83\uff0c\u4f46\u662fCT\u9700\u8981CPPADCG\u6807\u5fd7\u624d\u80fd\u4f7f\u7528\u7ebf\u6027\u5316\u7a0b\u5e8f)\u3002\nct_optcon\u8981\u6784\u5efa\u8fd9\u4e9b\u6587\u4ef6\uff0c\u8bf7\u786e\u4fdd\u5b89\u88c5\u4e86Eigen\u548cBoost(libost-dev~1.65)\u3002\u63a5\u4e0b\u6765\uff0c\u53d1\u51fa\u4ee5\u4e0b\u547d\u4ee4\uff1a\nGit\u514b\u9686https://github.com/ethz-adrl/control-toolbox.gitcd ct_coem kdir buildcd buildcmake..\u3002-DCPPAD=1-DHPIPM=1makemake installcd../../ct_optconmkdir buildcd buildcmake..\u3002-DHPIPM=1makemake\u5b89\u88c5\u3002\n\u8981\u901a\u8fc7\u57fa\u4e8eWeb\u7684\u53ef\u89c6\u5316\u5de5\u5177MeshCat\u652f\u6301\u53ef\u89c6\u5316\uff0c\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\u5305\uff1a\n\u5efa\u8bae\u5b89\u88c5\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\uff0c\u5982ZeroMQ\u81ea\u8ff0\u6587\u4ef6\u6240\u793a\u3002\n\u8fd9\u5c06\u4f7f\u7528ZMQ\u4fa6\u542c\u7aef\u53e37000(C++MeshCat\u53ef\u89c6\u5316\u5ba2\u6237\u7aef\u4e2d\u7684\u9ed8\u8ba4\u8bbe\u7f6e)\u542f\u52a8MeshCat\u3002\n\u8981\u5b89\u88c5\u53ef\u89c6\u5316\u5de5\u5177\u670d\u52a1\u5668\u4ee5\u4f7f\u5176\u80fd\u591f\u5728\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\u4e0b\u8fd0\u884c\u53ef\u89c6\u5316\u5de5\u5177\u7a97\u53e3\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n\u5982\u679c\u6a21\u62df\u5668\u5728\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\u4e0b\u4f7f\u7528PyBullet\u53ef\u89c6\u5316\u8fd0\u884c\uff0c\u8bf7\u9996\u5148\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6253\u5f00\u53ef\u89c6\u5316\u5de5\u5177\u670d\u52a1\u5668\u3002\n\u8981\u52a0\u8f7d\u4e0d\u5e26pybullet\u7684URDF\u6a21\u578b\uff0c\u6211\u4eec\u7684\u57fa\u4e8eC++\u7684\u5bfc\u5165\u5668\u9700\u8981\u5b89\u88c5\u5982\u4e0b\u7684TinyXML2\uff1a", "note_en": "It currently implements various rigid-body dynamics algorithms, including forward and inverse dynamics, as well as contact models based on impulse-level LCP and force-based nonlinear spring-dampers. Actuator models for motors, servos, and Series-Elastic Actuator (SEA) dynamics are implemented.\n The entire codebase is templatized so you can use forward- and reverse-mode automatic differentiationscalar types, such as CppAD, Stan Math fvar and ceres::Jet. The library can also be used withregular float or double precision values. Another option is to use the includedfix-point integer math, that provide cross-platform deterministic computation.\n Examples to exploit the gradients for system identification using Ceres andtrajectory generation using the Control Toolbox are provided.\n          URDF files can be loaded either throught the PyBullet interface or a provided parser based on TinyXML2. All simulation features are therefore available without requiring PyBullet.\n      It is recommended to first set up BLASFEO and HPIPM for more efficient solvers that can also handle constraints in the optimization problems:\n     Then install CppADCodeGen (we don&#39;t really need it but CT requires the CPPADCG flag to use the linearizers).\n   ct_optconTo build these, make sure Eigen and Boost ( libboost-dev ~1.65) are installed. Next, issue the following commands:\n git clone https://github.com/ethz-adrl/control-toolbox.gitcd ct_coremkdir buildcd buildcmake .. -DCPPAD=1 -DHPIPM=1makemake installcd ../../ct_optconmkdir buildcd buildcmake .. -DHPIPM=1makemake install\n  To support visualization through the web-based visualizer MeshCat, the following packages need to be installed:\n   It is recommended to install the binary packages, as shown on the  ZeroMQ README file.\n              This will start MeshCat with ZMQ listening on port 7000 which is the default setting in the C++ MeshCat visualization client.\n   To install the visualizer server to be able to run the visualizer window in shared-memory mode, issue\n  If the simulator is running with PyBullet visualization in shared-memory mode,first open the visualizer server using\n   To load URDF models without pybullet, our C++-based importer requires TinyXML2 which is installed as follows:", "posttime": "2020-05-16 03:35:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,differentiable", "title": "Tiny Differentiable Simulator\u662f\u4e00\u4e2a\u4ec5\u5305\u542b\u5934\u6587\u4ef6\u7684C++\u7269\u7406\u5e93", "title_en": "Tiny Differentiable Simulator is a header-only C++ physics library", "transed": 1, "url": "https://github.com/google-research/tiny-differentiable-simulator", "via": "", "real_tags": ["c++"]}, {"category": "", "categoryclass": "", "imagename": "5c1b51bd4cef10099b7cf35b0dd67325.png", "infoid": 1002281, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ed3\u679c\u5e94\u8be5\u5f88\u5feb\u5c31\u4f1a\u663e\u793a\u51fa\u6765\u3002(\u4f8b\u5982\uff0c\u4ec5\u901a\u8fc7\u52a0\u8f7d\u9884\u89c8\u52a8\u753b\uff0c\u5982\u679c\u5b83\u5728\u53d1\u5e03\u524d\u6eda\u52a8\u65f6\u8f7b\u51fb\u5e76\u6301\u6709\u7684\u56fe\u50cf\uff0c\u4f8b\u5982PornHub mobile\u4f1a\u8fd9\u6837\u505a)-\u5e76\u4e14\u7ed3\u679c\u5e94\u8be5\u9650\u5236\u5728\u826f\u597d\u7684\u5339\u914d\u8303\u56f4\u5185\u3002\u4e5f\u4e0d\u5c40\u9650\u4e8e\u4e00\u4e2a\u7f51\u7ad9\uff0c\u66f4\u50cf\u662f\u8c37\u6b4c\u52a8\u753b\u56fe\u50cf\u641c\u7d22\u7684\u9690\u79c1\u7248\u672c(\u7531\u4e8e\u5927\u5c0f\u95ee\u9898\uff0c\u65e7\u7684.gif\u683c\u5f0f\u7684\u641c\u7d22\u4f1a\u6709\u4e00\u4e2a\u8b66\u544a\u4e09\u89d2\u5f62)\u3002", "note_en": "Results should show fast. (E.g. by only loading the preview animation if the image it tapped and held while scrolling before releasing, like e.g. PornHub mobile does it.) - And results should be limited to good matches. Not limited to one site either, but more like a privacy-enabled version of Google&#39;s animated image search (with a warning triangle for ones in the old .gif format due to size issues.)", "posttime": "2020-05-16 03:34:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,github,remove,\u52a8\u753b", "title": "\u4fe1\u53f7\uff1a\u7531\u4e8eFacebook\u7684\u53c2\u4e0e\u800c\u5220\u9664GIPHY\u652f\u6301[GitHub\u95ee\u9898]", "title_en": "Signal: Remove GIPHY support due to Facebook involvement [GitHub Issue]", "transed": 1, "url": "https://github.com/signalapp/Signal-Android/issues/9628", "via": "", "real_tags": ["facebook", "github", "remove", "\u52a8\u753b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002280, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6211\u5f88\u4e45\u4ee5\u6765\u4e00\u76f4\u60f3\u5199\u7684\u5e16\u5b50\u3002\u6211\u610f\u8bc6\u5230\uff0c\u5f53\u6d89\u53ca\u5230\u8fd9\u4e2a\u8bdd\u9898\u65f6\uff0c\u6211\u5b8c\u5168\u662f\u6709\u504f\u89c1\u7684\u3002\u6211\u5bf9\u770b\u5230SWIFT\u5728\u670d\u52a1\u5668\u4e0a\u53d6\u5f97\u6210\u529f\u62b1\u6709\u5927\u91cf\u6f5c\u5728\u9519\u4f4d\u7684\u4e50\u89c2\u60c5\u7eea\u548c\u65e2\u5f97\u5229\u76ca\u3002\u4f46\u6211\u4e5f\u76f8\u4fe1\uff0c\u6211\u6bd4\u5927\u591a\u6570\u4eba\u90fd\u6709\u66f4\u591a\u7684\u6d1e\u5bdf\u529b\uff0c\u56e0\u4e3a\u6211\u662f\u5168\u804c\u4ece\u4e8b\u8fd9\u9879\u5de5\u4f5c\u7684\u3002\u6211\u4e5f\u5e0c\u671b\u8fd9\u7bc7\u5e16\u5b50\u80fd\u5f15\u8d77\u5f88\u591a\u8ba8\u8bba\uff0c\u6240\u4ee5\u563f\uff0c\u63a8\u7279\uff0cReddit\u548c\u9ed1\u5ba2\u65b0\u95fb\ud83d\udc4b\u3002\n\u5f53\u6211\u4eceServerSide.swft\u4f1a\u8bae\u56de\u6765\u65f6\uff0c\u6211\u7b2c\u4e00\u6b21\u60f3\u5230\u8981\u5199\u70b9\u4ec0\u4e48\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u542c\u8bf4\u8fc7ServerSide.swft\u7684\u4eba(\u6211\u662f\u7ec4\u7ec7\u8005\u4e4b\u4e00)\uff0cServerSide.swft\u662fSWIFT on the Server\u7684\u4e00\u4e2a\u56fd\u9645\u4f1a\u8bae(\u6ca1\u6709\u4ec0\u4e48\u4ee4\u4eba\u60ca\u8bb6\u7684\u5730\u65b9)\u3002\u5b83\u662f\u4e00\u4e2a\u793e\u533a\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u805a\u96c6\u5728\u4e00\u8d77\u7684\u5730\u65b9\uff0c\u56e0\u4e3a\u5b83\u7684\u91cd\u70b9\u662f\u670d\u52a1\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u627e\u5230\u975e\u5e38\u6280\u672f\u6027\u7684\u8bb2\u5ea7\uff0c\u6bd4\u5982GRPC\u548c\u6d4b\u8bd5NIO\u7cfb\u7edf\u3002\u8fd9\u662f\u4e00\u6b21\u4ee4\u4eba\u656c\u754f\u7684\u4f1a\u8bae\uff0c\u4ee4\u4eba\u60ca\u53f9\u7684\u6f14\u8bb2\u8005\u9635\u5bb9\uff0c\u793e\u533a\u5468\u56f4\u771f\u7684\u662f\u4e00\u7247\u6cb8\u817e\u3002\u6700\u8fd1\uff0c\u6211\u8f9e\u53bb\u4e86\u6b63\u5f0f\u7684\u5de5\u4f5c\uff0c\u8f6c\u800c\u5168\u804c\u4ece\u4e8bSWIFT\u670d\u52a1\u5668\u7aef\u7684\u5de5\u4f5c\uff0c\u6211\u5bf9\u6b64\u611f\u5230\u76f8\u5f53\u6ee1\u610f\uff01\n\u4e00\u4e2a\u6708\u540e\uff0cIBM\u6084\u6084\u5730\u5ba3\u5e03\uff0c\u4ed6\u4eec\u5c06\u653e\u5f03SWIFT\u4f5c\u4e3a\u4ed6\u4eec\u7684\u5f00\u6e90\u8bed\u8a00\u4e4b\u4e00\u3002\u8fd9\u5bf9\u793e\u533a\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6253\u51fb\uff0c\u7279\u522b\u662f\u6bcf\u4e2a\u4f7f\u7528Kitura\u5e76\u6295\u8d44\u5b83\u7684\u4eba\u3002\u9664\u6b64\u4e4b\u5916\uff0cIBM\u6ca1\u6709\u53d1\u8868\u6b63\u5f0f\u58f0\u660e\u7684\u65b9\u5f0f\u7ed9\u8bb8\u591a\u4eba\u7559\u4e0b\u4e86\u4e0d\u597d\u7684\u54c1\u5473\u3002\n\u770b\u5230IBM\u5728\u670d\u52a1\u5668\u9886\u57df\u9000\u51faSWIFT\uff0c\u771f\u662f\u4e00\u4ef6\u4ee4\u4eba\u7f9e\u6127\u7684\u4e8b\u3002\u7ade\u4e89\u603b\u662f\u597d\u7684\uff0cIBM\u5e94\u8be5\u8bb0\u4f4f\u4ed6\u4eec\u4e3a\u4f7f\u670d\u52a1\u5668\u7aefSWIFT\u53ef\u884c\u800c\u6295\u5165\u7684\u5927\u91cf\u5de5\u4f5c\u3002\u6d88\u606f\u516c\u5e03\u540e\uff0c\u6709\u5f88\u591a\u4eba\u548c\u6587\u7ae0\u8ba4\u4e3a\u8fd9\u662f\u670d\u52a1\u5668\u4e0a\u7684SWIFT\u6b7b\u4e86\u7684\u4fe1\u53f7\u3002\u6bd5\u7adf\uff0c\u5982\u679cIBM\u4e0d\u80fd\u8ba9\u5b83\u5de5\u4f5c\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u4f1a\u6709\u4eba\u4f7f\u7528\u5b83\u5462\uff1f\n\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u6211\u5e76\u4e0d\u662f\u8bf4\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528SWIFT\u65f6\u4e00\u5207\u90fd\u662f\u5b8c\u7f8e\u7684\u3002\u6709\u4e00\u4e9b\u521d\u671f\u7684\u95ee\u9898\u548c\u95ee\u9898\u4ea7\u751f\u4e8e\u5b83\u7684\u4e0d\u6210\u719f\u3002\u5728Linux\u4e0a\u8fdb\u884c\u5f00\u53d1\u3001\u5d29\u6e83\u5904\u7406\u3001\u7f3a\u4e4f\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u3001\u8c03\u8bd5\u3001SwiftPM\u7279\u6027--\u6240\u6709\u8fd9\u4e9b\u90fd\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u969c\u788d\u548c\u95ee\u9898\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u5f04\u810f\u4f60\u7684\u624b\uff0c\u53ef\u4ee5\u8bf4\uff0c\u6211\u4e0d\u4f1a\u63a8\u8350\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528SWIFT\u3002\n\u7136\u800c\uff0c\u81ea1\u6708\u4efd\u4ee5\u6765\uff0c\u51fa\u73b0\u4e86\u4e00\u4e9b\u91cd\u5927\u4e8b\u6001\u53d1\u5c55\uff0c\u663e\u793a\u51fa\u5bf9\u672a\u6765\u7684\u771f\u6b63\u5e0c\u671b\u3002\u9996\u5148\uff0c\u57281\u6708\u5e95\uff0c\u6cf0\u5fb7\u00b7\u514b\u96f7\u6885\u5185\u514b\u5728\u8bba\u575b\u4e0a\u53d1\u5e03\u4e86\u5173\u4e8e\u65af\u5a01\u592b\u72796\u53f7\u4e4b\u8def\u7684\u5e16\u5b50\u3002\u8fd9\u4e0d\u662fSWIFT 6\u7684\u8def\u7ebf\u56fe\uff0c\u800c\u662f\u670d\u52a1\u5668\u8def\u7ebf\u56fe\u4e0a\u7684SWIFT\u3002SWIFT 6\u7684\u6bcf\u4e2a\u76ee\u6807\u8981\u4e48\u4e0e\u670d\u52a1\u5668\u76f8\u5173\uff0c\u8981\u4e48\u76f4\u63a5\u53d7\u76ca\u3002\u6bd4\u5982\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u3001LSP\u6539\u8fdb\u3001\u6784\u5efa\u65f6\u95f4\u548c\u4f9d\u8d56\u9879\u7ba1\u7406\u6539\u8fdb\u3002\u6e05\u5355\u4e0d\u80dc\u679a\u4e3e\uff0c\u6211\u751a\u81f3\u8fd8\u6ca1\u6709\u63d0\u5230\u771f\u6b63\u7684\u5e76\u53d1\u6a21\u578b\u7684\u76ee\u6807\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u662fSWIFT\u5728\u670d\u52a1\u5668\u4e0a\u7f3a\u5c11\u7684\u6700\u540e\u4e00\u4ef6\u4e1c\u897f\u3002\n\u4e3a\u4e86\u8868\u660e\u8fd9\u4e00\u5207\u7684\u91cd\u8981\u6027\uff0cSWIFT\u6838\u5fc3\u56e2\u961f\u6709\u4e86\u4e24\u540d\u65b0\u6210\u5458\u3002\u8d1f\u8d23SWIFT NIO\u548cSWIFT\u670d\u52a1\u5668\u5de5\u4f5c\u7ec4\u7684Tom Doron\u548c\u51e0\u4e4e\u5355\u67aa\u5339\u9a6c\u5c06SWIFT\u62d6\u5165Windows\u7684Saleem Abdulrasool\u3002\u62e5\u6709\u8fd9\u4e24\u4e2a\u6838\u5fc3\u56e2\u961f\u610f\u5473\u7740\u5728\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u4e4b\u5916\u7684SWIFT\u5bf9SWIFT\u56e2\u961f\u7684\u91cd\u8981\u6027\u3002\n\u51e0\u5929\u540e\uff0c\u7c73\u6c99\u5c14\u00b7\u6c99\u963f(Mishal Shah)\u5728\u8bba\u575b\u4e0a\u5ba3\u5e03\uff0c\u65af\u5a01\u592b\u7279\u5c06\u63d0\u4f9b\u591c\u95f4\u7801\u5934\u56fe\u7247\u3002\u867d\u7136\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u5b83\u5f88\u91cd\u8981\u3002\u5b83\u5141\u8bb8\u60a8\u6d4b\u8bd5SWIFT\u548cFoundation\u4e2d\u7684\u66f4\u6539\uff0c\u800c\u65e0\u9700\u7f16\u8bd1SWIFT\u6216\u5b89\u88c5\u65b0\u7684\u5de5\u5177\u94fe\u3002\u56e0\u6b64\uff0c\u6846\u67b6\u5f00\u53d1\u4eba\u5458\u73b0\u5728\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u9488\u5bf9SWIFT\u7684\u9884\u53d1\u5e03\u7248\u672c\u6d4b\u8bd5\u4ee3\u7801\u3002\n\u5b83\u8fd8\u5efa\u7acb\u5728SWIFT for Linux\u7684\u6708\u5ea6\u7248\u672c\u7684\u57fa\u7840\u4e0a\uff0c\u800cSWIFT for Linux\u5df2\u7ecf\u6301\u7eed\u4e86\u4e00\u5e74\u591a\u7684\u65f6\u95f4\u3002\u6700\u521d\u662f\u4eceSWIFT 4.2.2\u5f00\u59cb\u7684\uff0c\u5b83\u4e3a\u5feb\u901f\u83b7\u5f97Foundation\u7684\u4fee\u590d\u7a0b\u5e8f\u5f00\u8f9f\u4e86\u9053\u8def\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u4e0b\u4e00\u4e2aXcode\u7248\u672c\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u4e2aLinux\u6bd4MacOS\u66f4\u5feb\u53d1\u5e03SWIFT\u7248\u672c\u7684\u6848\u4f8b\uff01\n\u5728\u591c\u95f4Docker Images\u53d1\u5e03\u6d88\u606f\u4e00\u5468\u540e\uff0c\u79d1\u91cc\u00b7\u672c\u83f2\u5c14\u5fb7(Cory Benfield)\u5728dotSwift\u7684\u821e\u53f0\u4e0a\u5ba3\u5e03\u53d1\u5e03Swift Crypto\u3002Crypto\u662f\u60a8\u771f\u6b63\u60f3\u8981\u7684\u4efb\u4f55\u670d\u52a1\u5668\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u6eda\u52a8\u60a8\u81ea\u5df1\u7684Crypto\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u5e76\u4e14\u94fe\u63a5\u5230OpenSSL\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5f88\u96be\u4ece\u6240\u6709\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0eOpenSSL\u96c6\u6210\u3002\u4f9d\u9760\u7cfb\u7edf\u63d0\u4f9b\u7684OpenSSL\u5c06\u5728\u4efb\u4f55\u5408\u7406\u7684\u65f6\u95f4\u8303\u56f4\u5185\u963b\u6b62SWIFT\u652f\u6301HTTP/2\u548cHTTP/3\u3002\nSWIFT Crypto\u4ecd\u7136\u4e0d\u4f1a\u6ca1\u6709\u5b83\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002\u76ee\u524d\uff0cSWIFT Crypto\u65e2\u4e0d\u652f\u6301RSA\u5bc6\u94a5\uff0c\u4e5f\u4e0d\u652f\u6301PEM/DER\u5bc6\u94a5\u3002\u8fd9\u5728\u670d\u52a1\u5668\u4e16\u754c\u4e2d95%\u7684\u7528\u4f8b\u4e2d\u90fd\u662f\u6709\u95ee\u9898\u7684\uff01\ud83d\ude05\u5f53\u524d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u5d4c\u5165\u60a8\u81ea\u5df1\u7684BoringSSL\u526f\u672c\u5e76\u81ea\u5df1\u4f7f\u7528\u3002(\u4ee5\u53ca\u9700\u8981\u8fd9\u4e9b\u529f\u80fd\u6765\u5d4c\u5165\u81ea\u5df1\u7684BoringSSL\u526f\u672c\u7684\u6bcf\u4e2a\u4f9d\u8d56\u9879\u3002)\u3002\u8fd9\u518d\u6b21\u5f52\u56e0\u4e8eSWIFT\u7684\u4e0d\u6210\u719f\uff0cSWIFT\u52a0\u5bc6\u56e2\u961f\u5c06\u5728\u672a\u6765\u4fee\u590d\u8fd9\u4e00\u95ee\u9898\u3002\n\u4f46\u597d\u6d88\u606f\u4e0d\u65ad\u4f20\u6765\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u8bba\u575b\u4e0a\u5ba3\u5e03\u4e86\u9488\u5bf9SWIFT\u7684Google Summer\u4ee3\u7801\u9879\u76ee\u3002\u5728\u5ba3\u5e03\u7684\u56db\u4e2a\u9879\u76ee\u4e2d\uff0c\u6709\u4e24\u4e2a\u76f4\u63a5\u81f4\u529b\u4e8e\u670d\u52a1\u5668\u7aef\u548cLinux\u7684\u6539\u8fdb\u3002\n\u6700\u540e\uff0c\u7b2c\u4e8c\u5929Tom Doron\u5ba3\u5e03\u652f\u6301\u66f4\u591a\u7684Linux\u53d1\u884c\u7248\u3002\u8fd9\u662fSWIFT\u5411\u524d\u8fc8\u51fa\u7684\u4e00\u5927\u6b65\uff0c\u56e0\u4e3a\u5b83\u4f7f\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5728\u60a8\u5df2\u5728\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884cSWIFT\u3002\u8bb8\u591a\u516c\u53f8\u90fd\u6709\u56f4\u7ed5\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u6784\u5efa\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u5de5\u5177\u3002\u901a\u8fc7\u5c06SWIFT\u9650\u5236\u4e3a\u53ea\u80fd\u4f7f\u7528Ubuntu(Docker\u9664\u5916)\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u516c\u53f8\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u73b0\u5728\u4ed6\u4eec\u53ef\u4ee5\u4e86\uff0c\u5728\u5bf9Amazon Linux\u7684\u652f\u6301\u4e0b\uff0c\u5b83\u751a\u81f3\u4e3aLambda\u8fd9\u6837\u7684\u4e1c\u897f\u6253\u5f00\u4e86\u673a\u4f1a\u3002\n\u4e3a\u4e86\u914d\u5408\u8fd9\u4e00\u58f0\u660e(\u65e0\u8bba\u662f\u4e0d\u662f\u5de7\u5408)\uff0c\u4e9a\u9a6c\u900a\u53d1\u5e03\u4e86\u4ed6\u4eec\u7684Smoke Framework 2.0\u7248\u3002\u770b\u5230\u50cf\u4e9a\u9a6c\u900a\u8fd9\u6837\u7684\u516c\u53f8\u5168\u529b\u4ee5\u8d74\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528SWIFT\uff0c\u771f\u7684\u5f88\u9177\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770bServerSide.swft\u7f51\u7ad9\u4e0a\u897f\u8499\u7684\u89c6\u9891\uff1a\n\u867d\u7136\u4e0a\u9762\u7684\u4e00\u5207\u5bf9\u670d\u52a1\u5668\u6765\u8bf4\u90fd\u662f\u597d\u6d88\u606f\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u975e\u670d\u52a1\u5668\u7528\u4f8b\u5f00\u59cb\u8fdb\u5165\u5e02\u573a\u3002\u6700\u5927\u7684\u662fTensorFlow\u7684SWIFT\u3002\u4f7f\u7528SWIFT\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5947\u602a\u7684\u9009\u62e9\uff0c\u800cGoogle\u9009\u62e9SWIFT\u4f5c\u4e3a\u4ed6\u4eec\u7684\u4e3b\u8981ML\u8bed\u8a00\u4e4b\u4e00\u5c31\u66f4\u5947\u602a\u4e86\uff01\u4f46\u9009\u62e9\u5b83\u662f\u6709\u5145\u5206\u7684\u7406\u7531\u7684\u3002Tryolabs\u6700\u8fd1\u6df1\u5165\u7814\u7a76\u4e86\u8fd9\u6837\u505a\u7684\u539f\u56e0\u3001\u80cc\u666f\u548c\u597d\u5904\uff0c\u8fd9\u662f\u4e00\u672c\u5f88\u68d2\u7684\u4e66\uff01\u5373\u4f7f\u8fd9\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u4f60(\u5f53\u7136\u4e0d\u9002\u7528\u4e8e\u6211\uff01)\u3002\u5b83\u63d0\u4f9b\u4e86\u4e24\u5927\u597d\u5904\u3002\n\u9996\u5148\u662f\u6539\u8fdb\u8bed\u8a00\u672c\u8eab\u3002S4TF\u56e2\u961f\u9700\u8981\u5bf9SWIFT\u548c\u7f16\u8bd1\u5668\u8fdb\u884c\u4e00\u4e9b\u91cd\u5927\u66f4\u6539\uff0c\u4ee5\u5b9e\u73b0\u53ef\u533a\u5206\u7f16\u7a0b\u548cPython/C++\u4e92\u64cd\u4f5c\u6027\u7b49\u529f\u80fd\u3002\u6211\u4eec\u73b0\u5728\u770b\u5230\u8fd9\u4e9b\u53d8\u5316\u6b63\u5728\u4e0a\u6e38\u5e76\u5165SWIFT\u672c\u8eab\uff0c\u5728\u90a3\u91cc\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\u6b64\u5916\uff0cS4TF\u56e2\u961f\u6700\u8fd1\u53d1\u5e03\u4e86SWIFT\u57fa\u51c6\u6765\u5bf9\u4ee3\u7801\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\u770b\u5230\u65af\u5a01\u592b\u7279\u7684\u4f1f\u5927\u5de5\u5177\u5728\u82f9\u679c\u4e4b\u5916\u5f00\u53d1\uff0c\u8fd9\u771f\u662f\u592a\u68d2\u4e86\uff01\n\u5176\u6b21\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u601d\u60f3\u5206\u4eab\u673a\u4f1a\u3002\u5728\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u4e4b\u5916\u4f7f\u7528\u548c\u53d1\u5c55SWIFT\u7684\u4e00\u4e2a\u91cd\u5927\u9879\u76ee\u975e\u5e38\u91cd\u8981\u3002\u8fd9\u5411\u5916\u754c\u8bc1\u660e\u4e86\u65af\u5a01\u592b\u7279\u4e0d\u662f\u82f9\u679c\u7684\u8bed\u8a00\uff0c\u4e5f\u8bc1\u660e\u4e86\u6838\u5fc3\u56e2\u961f\u5e0c\u671b\u65af\u5a01\u592b\u7279\u4e0d\u4ec5\u4ec5\u662f\u7528\u6765\u7f16\u5199iOS\u5e94\u7528\u7a0b\u5e8f\u7684\u8bed\u8a00\u3002\n\u8981\u8ba9SWIFT\u5728\u7f51\u7edc\u4e0a\u5de5\u4f5c\uff0c\u4f46\u5728\u5ba2\u6237\u7aef\u5de5\u4f5c\uff0c\u8fd8\u6709\u5927\u91cf\u7684\u5de5\u4f5c\u8981\u505a\u3002SwiftWasm\u9879\u76ee\u5141\u8bb8\u60a8\u7f16\u5199SWIFT\uff0c\u5e76\u901a\u8fc7WebAssembly\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528\u5b83\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u8981\u4e3a\ud83c\udf89\u7f51\u7ad9\u7f16\u5199SWIFT\u800c\u4e0d\u662fJavaScript\uff0c\u867d\u7136SWIFT\u7684\u65e9\u671f\u9636\u6bb5\u548c\u5927\u91cf\u5de5\u4f5c\u8fd8\u9700\u8981\u56de\u6d41\u5230SWIFT\u4e2d\uff0c\u4f46\u5b83\u663e\u793a\u51fa\u4e86\u771f\u6b63\u7684\u524d\u666f\uff0c\u4f60\u73b0\u5728\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u5b83\u4e86\uff01\n\u968f\u7740\u670d\u52a1\u5668\u7aefSWIFT\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u4eca\u5e74\u7684\u901f\u5ea6\u53ea\u4f1a\u52a0\u5feb\u3002\u6211\u731c\u60f3\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u66f4\u591a\u53d7\u652f\u6301\u7684Linux\u53d1\u884c\u7248\u548c\u5bf9\u8be5\u8bed\u8a00\u7684\u8fdb\u4e00\u6b65\u6539\u8fdb\u3002\u867d\u7136\u6211\u4e0d\u6307\u671b\u65af\u5a01\u592b\u72796\u548c\u5f02\u6b65/\u7b49\u5f85\u5728\u4eca\u5e74\u767b\u9646\u3002Vapor4\u7684\u53d1\u5e03\u662f\u53c8\u5411\u524d\u8fc8\u8fdb\u4e86\u4e00\u6b65\uff0c\u5305\u542b\u4e86SSWG\u7684\u5927\u91cf\u5de5\u4f5c\u3002SSWG\u8fd8\u51fa\u7248\u4e86\u4e00\u4e9b\u5173\u4e8e\u6784\u5efa\u3001\u90e8\u7f72\u548c\u8c03\u8bd5\u6700\u4f73\u5b9e\u8df5\u6307\u5357\u3002\u8fd9\u4e9b\u7edd\u5bf9\u503c\u5f97\u4e00\u770b\u3002\n\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\uff0c\u65af\u5a01\u592b\u7279\u8fd8\u5e74\u8f7b\u3002\u5b83\u57282015\u5e74\u5e95\u624d\u662f\u5f00\u6e90\u7684\u3002\u56f4\u68cb\u662f\u4e00\u79cd\u65b0\u7684\u8bed\u8a00\uff0c\u4f46\u5b83\u4e8e2009\u5e74\u9996\u6b21\u53d1\u5e03\u3002\u94c1\u9508\u662f\u53e6\u4e00\u79cd\u5f15\u8d77\u5e7f\u6cdb\u5173\u6ce8\u7684\u8bed\u8a00\uff0c\u6700\u65e9\u51fa\u73b0\u57282010\u5e74\u3002\u65af\u5a01\u592b\u7279\u6b63\u5728\u8fce\u5934\u8d76\u4e0a\uff0c\u4f60\u5728\u8fdb\u884c\u6bd4\u8f83\u65f6\u5e94\u8be5\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\uff0c\u5bf9\u4e8e\u670d\u52a1\u5668\u4e0a\u7684SWIFT\u6765\u8bf4\u90fd\u5c06\u662f\u6709\u8da3\u7684\u4e00\u5e74\u3002\u672a\u6765\u80af\u5b9a\u662f\u5149\u660e\u7684\uff01", "note_en": "This is a post I&#39;ve been meaning to write for a very long time. I&#39;m conscious that I&#39;m completely biased when it comes to this topic. I have a large amount of potentially misplaced optimism and a vested interest in seeing Swift on the server succeed. But I also believe that I have more insight than most given I work full-time on it. I&#39;m also expecting to generate a lot of, uh, discussion with this post - so hey Twitter, Reddit and Hacker News \ud83d\udc4b\n I first thought about writing something when coming back from the  ServerSide.swift conference. For those who haven&#39;t heard of it (and full disclosure, I&#39;m one of the organisers) ServerSide.swift is an international conference for Swift on the Server (no surprises there). It&#39;s the one place where everyone from the community can come together because of the focus on the server. It&#39;s a great place to find very technical talks like  gRPC and  testing NIO systems. It was an awesome conference, an amazing line up of speakers and there was a real buzz around the community. Having recently quit my &#39;proper&#39; job to work on server-side Swift full time, I was feeling pretty pleased with it all!\n  Then a month later,  IBM quietly announced they were stepping away from Swift as one of their open source languages. It was a huge blow for the community, especially everyone who was using Kitura and invested in it. Added to that, the way that IBM made no formal announcement left a bad taste for many.\n It was a real shame to see IBM exit the Swift on the server scene. Competition is always good, and IBM should be remembered for the amount of work they put in to make server-side Swift viable. After the announcement, there were lots of people and articles taking this as the sign that Swift on the server is dead. After all, if IBM can&#39;t make it work, why would anyone use it?\n  To be clear, I&#39;m not saying that everything was (and is) perfect when using Swift on the server. There are teething problems and issues arising from it&#39;s immaturity. Developing on Linux, crash handling, lack of OS support, debugging, SwiftPM features - all have provided bumps in the road and issues. And up until quite recently, if you didn&#39;t want to get your hands dirty so to speak, I wouldn&#39;t have recommended using Swift on the server.\n However, since January there have been major developments that show real promise for the future. First, towards the end of January, Ted Kremenek posted  On the road to Swift 6 on the forums. And rather than being the Swift 6 roadmap, this was essentially the Swift on the server roadmap. Every single goal of Swift 6 is either related to the server or has a direct benefit for it. Things like new OS support,  LSP improvements, build times and dependency management improvements. The list goes on, and I haven&#39;t even mentioned the aim for a real concurrency model, which for me is the last missing piece for Swift on the server.\n To signify the importance of all this, the Swift core team got two new members.  Tom Doron - who is responsible for  SwiftNIO and the  Swift Server Work Group - and  Saleem Abdulrasool - who almost single-handedly has dragged Swift onto Windows. Having both on the core team signify the importance of Swift outside the Apple ecosystem to the Swift team.\n Then, a few days later,  Mishal Shah  posted on the forums to announce that there would be nightly docker images available for Swift. While this doesn&#39;t affect most developers, it is important. It allows you to test changes in Swift and Foundation without having to either compile Swift or install a new toolchain. So framework developers can now test code against pre-release versions of Swift without much effort.\n It also builds on the monthly releases of Swift for Linux that have been happening for over a year now. Originally started with Swift 4.2.2, it opened the way for getting fixes for Foundation quickly rather than waiting for the next Xcode release. And amazingly, this was a case of Linux getting quicker Swift releases than macOS!\n A week after the nightly Docker images announcement,  Cory Benfield went on stage at dotSwift to announce the release of  Swift Crypto. Crypto is a part of any server ecosystem that you really want to have. Rolling your own Crypto is a bad idea and linking against OpenSSL  was causing issues. It was difficult to integrate with OpenSSL from all the different operating systems. And relying on the system-provided OpenSSL would stop Swift from supporting HTTP/2 and HTTP/3 in any reasonable timeframe.\n Swift Crypto still isn&#39;t without it&#39;s issues, which is to be expected. Currently Swift Crypto doesn&#39;t support either  RSA keys or  PEM/DER keys. This is problematic in the server world for 95% of use cases! \ud83d\ude05 The current workaround is to embed your own copy of BoringSSL and use that yourself. (And also every dependency that needs these features to embed their  own copy of BoringSSL.) Again this is due to Swift&#39;s immaturity and something that the Swift Crypto team will fix going forward.\n But the good news kept coming. Earlier this month the Google Summer of Code projects for Swift  were announced on the forums. Out of the four projects announced,  two were directly working on improvements for server-side and Linux.\n Then finally, the next day  Tom Doron announced support for more Linux distributions. This is a huge step forward for Swift because it makes it easier to run Swift on the OS you&#39;re already using. Lots of companies have infrastructure and tooling built around different OSes. By constraining Swift to Ubuntu only (Docker aside), it meant these companies couldn&#39;t use it. Now they can and with support for Amazon Linux, it even opens up opportunities for things like Lambda.\n To coincide with the announcement (whether by coincidence or not), Amazon release 2.0 of their  Smoke Framework. It&#39;s really cool to see a company like Amazon go all in with Swift on the server. And if you want to learn more about it, check out Simon&#39;s video from ServerSide.swift:\n  Whilst everything above is great news for the server, there are non-server use cases that are starting to make inroads. The biggest is  Swift for Tensorflow. Using Swift for machine learning may seem like an odd choice, and Google choosing Swift as one of their primary ML languages even odder! But there are good reasons why it was chosen. Tryolabs recently did a  deep-dive into the reasons, background and benefits of this and it&#39;s a great read! And even though this may not be applicable to you (it certainly isn&#39;t to me!) it provides two big benefits.\n The first is improving the language itself. The S4TF team needed to make some big changes to both Swift and the compiler to allow things like differentiable programming and Python/C++ interoperability. We&#39;re now seeing these changes being merged back upstream into Swift itself, where they can be used by anyone. Additionally, the S4TF team recently released  Swift Benchmark to benchmark code. It&#39;s awesome to see great tooling for Swift developed outside of Apple!\n Second, it provides a big mindshare opportunity. A major project using and evolving Swift outside of the Apple ecosystem is important. It proves to outsiders that Swift isn&#39;t &#39;the Apple language&#39; and proves that the core team want Swift to be more than just the language to write iOS apps in.\n There&#39;s also a large amount of work going on making Swift work on the web, but client side. The  SwiftWasm project allows you write Swift and use it in the browser with WebAssembly. This could potentially mean writing Swift instead of JavaScript for websites \ud83c\udf89 Although it&#39;s early days and a lot of work needs to be upstreamed back into Swift, it shows real promise and you can try it out now!\n  Things are moving quickly with server-side Swift and this year is only accelerating. I suspect we&#39;ll see more supported Linux distros and further improvements to the language. Though I don&#39;t expect Swift 6 and async/await to land this year. The release of Vapor 4 is another step forward and encompasses a lot of the work of the SSWG. The SSWG are also publishing a  number of guides on best practices for building, deployment and debugging. These are definitely worth checking out.\n It&#39;s important to remember that Swift is still young. It was only open sourced at the end of 2015. Go is a &#39;new&#39; language, but it was first released in 2009. Rust, another language that&#39;s generating a lot of buzz first appeared in 2010. Swift is playing catch-up and you should take that into account when making comparisons. Whatever happens it&#39;s going to be an interesting year for Swift on the server. The future is definitely bright!", "posttime": "2020-05-16 03:33:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "swift", "title": "SWIFT\u5728\u670d\u52a1\u5668\u4e0a\u7684\u672a\u6765", "title_en": "The Future of Swift on the Server", "transed": 1, "url": "https://www.timc.dev/posts/future-of-server-side-swift/", "via": "", "real_tags": ["swift"]}, {"category": "", "categoryclass": "", "imagename": "7cbea3b8a6e039bba4b34a70d7239e22.jpeg", "infoid": 1002279, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f(\u7f8e\u8054\u793e)-\u636e\u6d77\u519b\u79f0\uff0c\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u800c\u5728\u5173\u5c9b\u4f11\u6218\u7684\u7f8e\u56fd\u822a\u7a7a\u6bcd\u8230\u4e0a\u7684\u4e94\u540d\u6c34\u5175\u7b2c\u4e8c\u6b21\u68c0\u6d4b\u51fa\u75c5\u6bd2\u5448\u9633\u6027\uff0c\u5e76\u5df2\u88ab\u5e26\u79bb\u8230\u8247\u3002\n\u8fd9\u79cd\u75c5\u6bd2\u5728\u897f\u5965\u591a\u00b7\u7f57\u65af\u798f\u53f7\u822a\u7a7a\u6bcd\u8230(USS Theodore Roosevelt)\u4e0a\u7684\u4e94\u540d\u6c34\u5175\u8eab\u4e0a\u6b7b\u7070\u590d\u71c3\uff0c\u7a81\u663e\u4e86\u8fd9\u79cd\u9ad8\u5ea6\u4f20\u67d3\u6027\u75c5\u6bd2\u7684\u4ee4\u4eba\u56f0\u60d1\u7684\u884c\u4e3a\uff0c\u5e76\u5f15\u53d1\u4e86\u5982\u4f55\u5c06\u68c0\u6d4b\u5448\u9633\u6027\u7684\u90e8\u961f\u91cd\u65b0\u878d\u5165\u519b\u961f\uff0c\u7279\u522b\u662f\u5728\u8230\u8247\u4e0a\u7684\u95ee\u9898\u3002\n\u6240\u6709\u4e94\u540d\u6c34\u624b\u4e4b\u524d\u90fd\u68c0\u6d4b\u5448\u9633\u6027\uff0c\u5e76\u81f3\u5c11\u7ecf\u5386\u4e86\u4e24\u5468\u7684\u9694\u79bb\u3002\u4f5c\u4e3a\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4ed6\u4eec\u90fd\u5fc5\u987b\u8fde\u7eed\u4e24\u6b21\u68c0\u6d4b\u5448\u9634\u6027\uff0c\u68c0\u6d4b\u95f4\u9694\u81f3\u5c11\u4e00\u5230\u4e24\u5929\uff0c\u7136\u540e\u624d\u5141\u8bb8\u4ed6\u4eec\u56de\u5230\u8239\u4e0a\u3002\n\u81ea3\u6708\u4e0b\u65ec\u53d1\u73b0\u75c5\u6bd2\u7206\u53d1\u4ee5\u6765\uff0c\u7f57\u65af\u798f\u53f7\u4e00\u76f4\u505c\u9760\u5728\u5173\u5c9b\u7684\u6e2f\u53e3\u3002\u81ea\u90a3\u4ee5\u540e\uff0c4800\u540d\u673a\u7ec4\u4eba\u5458\u4e2d\u5df2\u67094000\u591a\u4eba\u4e0a\u5cb8\u8fdb\u884c\u9694\u79bb\u6216\u9694\u79bb\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u6570\u767e\u540d\u6c34\u624b\u5f00\u59cb\u5728\u534f\u8c03\u4e00\u81f4\u7684\u6ce2\u6d6a\u4e2d\u56de\u5230\u8239\u4e0a\uff0c\u51c6\u5907\u518d\u6b21\u542f\u822a\u3002\n\u5728\u5468\u4e94\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u7f8e\u56fd\u6d77\u519b\u8868\u793a\uff0c\u5728\u8239\u4e0a\uff0c\u4e94\u540d\u6c34\u5175\u8fdb\u884c\u4e86\u81ea\u6211\u76d1\u63a7\uff0c\u5e76\u9075\u5b88\u4e86\u4e25\u683c\u7684\u793e\u4ea4\u8ddd\u79bb\u534f\u8bae\u3002\n\u6d77\u519b\u79f0\uff0c\u201c\u8fd9\u4e94\u540d\u6c34\u5175\u51fa\u73b0\u4e86\u6d41\u611f\u6837\u75be\u75c5\u75c7\u72b6\uff0c\u505a\u4e86\u6b63\u786e\u7684\u4e8b\u60c5\uff0c\u5411\u533b\u7597\u4eba\u5458\u62a5\u544a\u8fdb\u884c\u8bc4\u4f30\u201d\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u4ed6\u4eec\u7acb\u5373\u88ab\u4ece\u8239\u4e0a\u5e26\u8d70\uff0c\u5e76\u88ab\u9694\u79bb\u8d77\u6765\u3002\u4e0e\u4ed6\u4eec\u6709\u8054\u7cfb\u7684\u5c11\u6570\u5176\u4ed6\u6c34\u624b\u4e5f\u88ab\u5e26\u4e0b\u4e86\u8239\u3002\n\u201c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u987d\u56fa\u7684\u4f20\u67d3\u6027\u75be\u75c5\uff0c\u201d\u4ed6\u5728\u5468\u4e94\u7684\u7b80\u62a5\u4f1a\u4e0a\u544a\u8bc9\u4e94\u89d2\u5927\u697c\u8bb0\u8005\u3002\u4ed6\u8bf4\uff0c\u7531\u4e8e\u6d77\u519b\u884c\u52a8\u8fc5\u901f\uff0c\u7acb\u5373\u901a\u77e5\u4e86\u533b\u62a4\u4eba\u5458\uff0c\u5e76\u786e\u5b9a\u4e86\u53ef\u80fd\u4e5f\u66b4\u9732\u4e86\u54ea\u4e9b\u4eba\uff0c\u5e76\u5c06\u4ed6\u4eec\u5168\u90e8\u5e26\u79bb\u4e86\u8239\u3002\n\u636e\u7f8e\u56fd\u6d77\u519b\u79f0\uff0c\u622a\u81f3\u5468\u56db\uff0c\u5df2\u67092,900\u591a\u540d\u6c34\u624b\u91cd\u65b0\u767b\u4e0a\u8fd9\u8258\u8239\uff0c\u5728\u68c0\u6d4b\u5448\u9633\u6027\u76841000\u591a\u540d\u6c34\u624b\u4e2d\uff0c\u7ea6\u670925%\u7684\u4eba\u73b0\u5728\u5df2\u7ecf\u5eb7\u590d\u3002\n\u4e00\u4f4d\u719f\u6089\u8239\u4e0a\u60c5\u51b5\u7684\u7f8e\u56fd\u5b98\u5458\u8bf4\uff0c\u6307\u6325\u5b98\u4eec\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u6697\u793a\u8fd9\u53ef\u80fd\u4e0e\u6d4b\u8bd5\u51c6\u786e\u6027\u7684\u95ee\u9898\u6709\u5173\u3002\u8fd9\u4f4d\u4e0d\u613f\u900f\u9732\u59d3\u540d\u7684\u5b98\u5458\u8868\u793a\uff0c\u8239\u4e0a\u5df2\u7ecf\u52a0\u5f3a\u4e86\u7b5b\u67e5\u3002\u7531\u4e8e\u8ba8\u8bba\u7684\u662f\u5185\u90e8\u5ba1\u8bae\uff0c\u8fd9\u540d\u5b98\u5458\u8981\u6c42\u533f\u540d\u3002\u800c\u4e14\uff0c\u4efb\u4f55\u51fa\u73b0\u4efb\u4f55\u6d41\u611f\u6837\u75c7\u72b6\u7684\u4eba\u90fd\u6b63\u5728\u63a5\u53d7\u68c0\u6d4b\u5e76\u88ab\u79fb\u9664\u3002\n\u6c34\u624b\u4eec\u5df2\u7ecf\u7528\u9f3b\u62ed\u5b50\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u611f\u67d3\u53ef\u80fd\u5904\u4e8e\u5982\u6b64\u4f4e\u7684\u6c34\u5e73\uff0c\u4ee5\u81f3\u4e8e\u68c0\u6d4b\u4e0d\u5230\u5b83\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u6837\u7684\u75c5\u4f8b\u662f\u4e0d\u662f\u771f\u7684\u590d\u53d1\u4e86\uff0c\u6216\u8005\u4eba\u4eec\u5728\u6ca1\u6709\u771f\u6b63\u5b8c\u5168\u6e05\u9664\u75c5\u6bd2\u7684\u60c5\u51b5\u4e0b\u68c0\u6d4b\u5448\u9634\u6027\u3002", "note_en": "WASHINGTON (AP) \u2014 Five sailors on the U.S. aircraft carrier sidelined in Guam due to a COVID-19 outbreak have tested positive for the virus for the second time and have been taken off the ship, according to the Navy.\n The resurgence of the virus in the five sailors on the  USS Theodore Roosevelt underscores the befuddling behavior of the highly contagious virus and raises questions about how troops that test positive can be reintegrated into the military, particularly on ships.\n All five sailors had previously tested positive and had gone through at least two weeks of isolation. As part of the process, they all had to test negative twice in a row, with the tests separated by at least a day or two before they were allowed to go back to the ship.\n  The Roosevelt has been at port in Guam since late March after the outbreak of the virus was discovered. More than 4,000 of the 4,800 crew members have gone ashore since then for quarantine or isolation. Earlier this month hundreds of sailors began returning to the ship, in coordinated waves, to get ready to set sail again.\n In a statement Friday, the Navy said that, while onboard, the five sailors self-monitored and adhered to strict social distancing protocols.\n \u201cThese five Sailors developed influenza-like illness symptoms and did the right thing reporting to medical for evaluation,\u201d the Navy said, adding that they were immediately removed from the ship and put back in isolation. A small number of other sailors who were in contact with them were also taken off the ship.\n  \u201cThis is a very stubborn, infectious disease,\u201d he told Pentagon reporters during a briefing on Friday. He said that because of the Navy\u2019s quick action, medical crew were notified right away and determined who might have also been exposed and got them all off the ship.\n As of Thursday, more than 2,900 sailors have reboarded the ship, and about 25% of the more than 1,000 who had tested positive have now recovered, according to the Navy.\n One U.S. official familiar with the situation on the ship said commanders don\u2019t know why this is happening but suggested it could be related to questions about testing accuracy. The official, who spoke on condition of anonymity to discuss internal deliberations, said that screening has been intensified on the ship. And, anyone who exhibits any flu-like symptoms at all is being tested and removed.\n The sailors have been tested using the nasal swab. And in some cases the infection can be at such a low level that it is not detected by the test. It\u2019s not clear whether cases like these are actual relapses, or if people tested negative without really being completely clear of the virus.", "posttime": "2020-05-16 03:33:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u6401\u7f6e,sidelined,\u68c0\u6d4b", "title": "\u6401\u7f6e\u822a\u6bcd\u4e0a\u7684\u6c34\u624b\u7b2c\u4e8c\u6b21\u611f\u67d3\u75c5\u6bd2", "title_en": "Sailors on sidelined carrier get virus for second time", "transed": 1, "url": "https://apnews.com/0cae34376380ab4150002a58bd9934b9", "via": "", "real_tags": ["\u75c5\u6bd2", "\u6401\u7f6e", "sidelined", "\u68c0\u6d4b"]}, {"category": "", "categoryclass": "", "imagename": "21376bc9b9b767aec1127e3ab41d16f8.jpg", "infoid": 1002278, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5a92\u4f53\u5b9e\u9a8c\u5ba4(MIT\u2018s Media Lab)\u672c\u5468\u8bc1\u5b9e\uff0c\u7531\u4e8e\u88ab\u6307\u5411\u8d5e\u52a9\u5546\u548c\u516c\u4f17\u5938\u5927\u4e86\u8be5\u9879\u76ee\u7684\u7ed3\u679c\uff0c\u8be5\u9879\u76ee\u4e8e\u4e0a\u6708\u6084\u6084\u7ed3\u675f\u3002\u8be5\u9879\u76ee\u65e8\u5728\u63a8\u5e7f\u5728\u5bb6\u4e2d\u7684\u8ff7\u4f60\u6e29\u5ba4\u91cc\u79cd\u690d\u98df\u7269\u3002\n\u9ebb\u7701\u7406\u5de5\u5b66\u9662(Massachusetts Institute Of Technology)\u8fd8\u5ba3\u5e03\uff0c\u5c06\u5411\u56fd\u52a1\u9662\u73af\u5883\u4fdd\u62a4\u90e8\u652f\u4ed81.5\u4e07\u7f8e\u5143\u7684\u7f5a\u6b3e\uff0c\u56e0\u4e3a\u8be5\u9879\u76ee\u540d\u4e3a\u5f00\u653e\u519c\u4e1a\u5021\u8bae(Open Agriculture Initiative\uff0c\u7b80\u79f0OpenAg)\uff0c\u5c06\u5316\u5b66\u7269\u8d28\u4e0d\u5f53\u5904\u7f6e\u5230\u6ce2\u58eb\u987f\u90ca\u5916\u4e00\u4e2a\u7814\u7a76\u4e2d\u5fc3\u7684\u4e00\u53e3\u4e95\u91cc\uff0c\u8be5\u7814\u7a76\u6240\u5728\u90a3\u91cc\u8fdb\u884c\u4e86\u4e00\u4e9b\u5b9e\u9a8c\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u627f\u8bfa\u5173\u95ed\u6cb9\u4e95\uff0c\u56e0\u4e3aOpenAg\u5c06\u4e0d\u518d\u5728\u90a3\u91cc\u8fdb\u884c\u7814\u7a76\u3002\n\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u58f0\u660e\u5305\u542b\u5728\u4e00\u5c01\u7b80\u77ed\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u5176\u4f9d\u636e\u662fOpenAg\u7684\u9996\u5e2d\u7814\u7a76\u79d1\u5b66\u5bb6\u51ef\u52d2\u5e03\u00b7\u54c8\u73c0(Caleb Harper)\u5df2\u4e8e4\u670830\u65e5\u505c\u6b62\u5728\u8be5\u5927\u5b66\u7684\u5de5\u4f5c\u3002\n\u201c\u5f53\u4ed6\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u9886\u5bfc\u5f00\u653e\u519c\u4e1a\u8ba1\u5212\u65f6\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5df2\u7ecf\u5173\u95ed\u4e86\uff0c\u201d\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\u3002\u8be5\u5927\u5b66\u4ee5\u4fdd\u5bc6\u4e3a\u7531\uff0c\u4e0d\u613f\u8be6\u7ec6\u8bf4\u660e\u54c8\u73c0\u79bb\u5f00\u7684\u539f\u56e0\u3002\u54c8\u73c0\u6ca1\u6709\u56de\u590d\u624b\u673a\u4e0a\u7684\u7559\u8a00\u3002\nOpenAg\u9879\u76ee\u662f\u54c8\u73c0\u7684\u521b\u610f\uff0c\u4ed6\u63d0\u8bae\u8bbe\u8ba1\u548c\u90e8\u7f72\u5c0f\u578b\u9ad8\u79d1\u6280\u6e29\u5ba4\uff0c\u4ee5\u4e2a\u4eba\u98df\u54c1\u8ba1\u7b97\u673a\u7684\u5f62\u5f0f\u9500\u552e\uff0c\u65e8\u5728\u8ba9\u519c\u4f5c\u7269\u5728\u7a00\u8584\u7684\u7a7a\u6c14\u4e2d\u8301\u58ee\u6210\u957f\uff0c\u6ca1\u6709\u571f\u58e4\u6216\u9633\u5149\uff0c\u5e76\u5728\u7cbe\u786e\u63a7\u5236\u7684\u6761\u4ef6\u4e0b\u751f\u957f\u3002\u8be5\u9879\u76ee\u8fd8\u5305\u62ec\u5728\u9a6c\u8428\u8bf8\u585e\u5dde\u7c73\u5fb7\u5c14\u987f(Middleton)\u7684\u822a\u8fd0\u96c6\u88c5\u7bb1\u4e2d\u5b89\u7f6e\u66f4\u5927\u7684\u201c\u98df\u54c1\u670d\u52a1\u5668\u201d\uff0c\u90a3\u91cc\u53d1\u751f\u4e86\u4e0d\u5f53\u5904\u7f6e\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u662f\u516c\u4f17\u53ef\u4ee5\u4f7f\u7528\u6c14\u5019\u63a7\u5236\u8bbe\u5907\u6765\u53d1\u73b0\u548c\u8ddf\u8e2a\u5404\u79cd\u4f5c\u7269\u7684\u6700\u4f73\u6761\u4ef6\u3002\u54c8\u73c0\u5c06\u4ed6\u7684\u8ba1\u5212\u63cf\u8ff0\u4e3a\u62e5\u6709\u201c\u7b2c\u56db\u6b21\u519c\u4e1a\u9769\u547d\u201d\u7684\u6f5c\u529b\uff0cOpenAg\u4eceCBS\u65b0\u95fb\u8282\u76ee\u201c60\u5206\u949f\u201d\u3001\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u548c\u5176\u4ed6\u5a92\u4f53\u90a3\u91cc\u83b7\u5f97\u4e86\u79ef\u6781\u7684\u5a92\u4f53\u5173\u6ce8\u3002\n\u4f46\u5728\u8be5\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u7684\u79d1\u5b66\u5bb6\u8bf4\uff0c\u8fd9\u4e9b\u8bbe\u5907\u4ece\u6765\u6ca1\u6709\u50cf\u8bbe\u8ba1\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u54c8\u73c0\u6ca1\u6709\u5411\u8d5e\u52a9\u5546\u6216\u91c7\u8bbf\u627f\u8ba4\u8fd9\u4e00\u70b9\uff0c\u800c\u662f\u575a\u79f0\u4e00\u5207\u90fd\u5f88\u597d\u3002\u6709\u65f6\uff0c\u5b9e\u9a8c\u5ba4\u6210\u5458\u88ab\u544a\u77e5\u5728\u62cd\u7167\u4e4b\u524d\u5728\u5546\u5e97\u8d2d\u4e70\u690d\u7269\uff0c\u5237\u53bb\u7070\u5c18\uff0c\u7136\u540e\u628a\u5b83\u4eec\u653e\u8fdb\u98df\u7269\u7535\u8111\u91cc\u3002\n\u901a\u8fc7\u5173\u95edOpenAg\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5e0c\u671b\u5728\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u91cd\u6574\u65d7\u9f13\uff0c\u8be5\u5b9e\u9a8c\u5ba4\u81ea9\u6708\u4efd\u4ee5\u6765\u4e00\u76f4\u6ca1\u6709\u9886\u5bfc\u8005\u3002\u524d\u5bfc\u6f14\u4f0a\u85e4\u5fe0\u4e00(Joichi Ito)\u5728\u4e0e\u53bb\u5e74\u5728\u66fc\u54c8\u987f\u76d1\u72f1\u81ea\u6740\u7684\u6027\u72af\u7f6a\u8005\u6770\u5f17\u91cc\u00b7\u7231\u6cfc\u65af\u5766(Jeffrey Epstein)\u7684\u8d22\u52a1\u8054\u7cfb\u88ab\u66dd\u5149\u540e\uff0c\u8feb\u4e8e\u538b\u529b\u8f9e\u804c\u3002\u4eca\u5e741\u6708\uff0c\u8be5\u5927\u5b66\u53d1\u5e03\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u62ab\u9732\u4e86\u4f0a\u85e4\u548c\u7231\u6cfc\u65af\u5766\u4e4b\u95f4\u7684\u516b\u6b21\u5355\u72ec\u7684\u6821\u56ed\u4f1a\u9762\uff0c\u7231\u6cfc\u65af\u5766\u603b\u5171\u5411\u5a92\u4f53\u5b9e\u9a8c\u5ba4\u6350\u8d60\u4e8652.5\u4e07\u7f8e\u5143\u3002\n2017\u5e74\uff0c\u4f0a\u85e4\u548c\u7231\u6cfc\u65af\u5766\u7684\u4e00\u6b21\u4f1a\u9762\u5305\u62ec\u54c8\u73c0\u3002\u6839\u636e\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u62a5\u544a\uff0c\u7b2c\u4e8c\u5e74\uff0c\u4f0a\u85e4\u52aa\u529b\u4ece\u7231\u6cfc\u65af\u5766\u90a3\u91cc\u83b7\u5f97\u4e86150\u4e07\u7f8e\u5143\u7684\u6350\u6b3e\uff0c\u4ee5\u652f\u6301OpenAg\u7684\u7814\u7a76\u3002\u8fd9\u7b14\u6350\u6b3e\u4ece\u672a\u5151\u73b0\u3002", "note_en": "A high-profile research project at  M.I.T.\u2019s Media Lab that promoted growing food at home in mini-greenhouses was quietly closed last month  amid allegations that its results were exaggerated to sponsors and the public, the university confirmed this week.\n The Massachusetts Institute of Technology also  announced that it would pay a $15,000 fine to the State Department of Environmental Protection because the project, the Open Agricultural Initiative, or OpenAg for short, improperly disposed chemicals into a well at a research center outside Boston where it conducted some experiments. M.I.T. promised to close the well since OpenAg would no longer be conducting research there.\n M.I.T.\u2019s announcement was contained in a brief email and hinged on the fact that the principal research scientist at OpenAg, Caleb Harper, had stopped working at the university as of April 30.\n  \u201cAs he led the Open Agriculture Initiative at the M.I.T. Media Lab, it is closed at M.I.T.,\u201d a spokeswoman said in the email. The university wouldn\u2019t elaborate on why Mr. Harper was leaving, citing confidentiality. Mr. Harper did not respond to a message left on his phone.\n The OpenAg project was the brainchild of Mr. Harper, who proposed designing and deploying small high-tech greenhouses, marketed as personal food computers, meant to allow crops to thrive in thin air, without soil or sunlight and under precisely controlled conditions. The project also included larger \u201cfood servers\u201d housed in shipping containers in Middleton, Mass., where the improper disposal occurred.\n The idea was that the public could use the climate-controlled devices to discover and track the optimal conditions for various crops. Mr. Harper described his plan as holding the potential for a \u201cfourth agricultural revolution,\u201d and OpenAg received positive media attention from the CBS News program \u201c60 Minutes,\u201d The Wall Street Journal and other outlets.\n But scientists who worked at the lab said that the devices never worked as designed and that, rather than admit this to sponsors or in interviews, Mr. Harper insisted all was well. At times, members of the lab were told to buy plants at a store, brush off the dirt and place them inside the food computers before a photo shoot.\n  By closing OpenAg, M.I.T. is hoping to right the ship at the Media Lab, which has been without a leader since September. The former director, Joichi Ito,  resigned under pressure after revelations of his financial connections to Jeffrey Epstein, the convicted sex offender who killed himself in a Manhattan jail last year. In January, the university issued  a report that disclosed eight separate on-campus meetings between Mr. Ito and Mr. Epstein, who donated a total of $525,000 to the Media Lab.\n One meeting in 2017 between Mr. Ito and Mr. Epstein included Mr. Harper. The next year, according to the M.I.T. report, Mr. Ito worked to obtain a $1.5 million donation from Mr. Epstein to support research at OpenAg. The donation never materialized.", "posttime": "2020-05-16 03:32:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,closes,openag", "title": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5728\u79d1\u5b66\u5bb6\u63d0\u51fa\u8d28\u7591\u540e\u5173\u95ed\u201c\u98df\u54c1\u8ba1\u7b97\u673a\u201d\u9879\u76ee", "title_en": "MIT Closes \u2018Food Computer\u2019 Project After Scientists Raised Doubts", "transed": 1, "url": "https://www.nytimes.com/2020/05/13/business/media/mit-closes-food-computer-project.html", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "closes", "openag"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002276, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u5927\u591a\u6570\u8bc4\u8bba\u4e2d\uff0c\u6709\u4eba\u95ee\u6211\u4e3a\u4ec0\u4e48\u9009\u62e9\u56fe\u5f62\u6570\u636e\u5e93\u800c\u4e0d\u662f\u5176\u4ed6\u4e1c\u897f\uff1f\u8fd9\u662f\u4e00\u4e2a\u5f88\u96be\u56de\u7b54\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u76ee\u524d\u7684\u7ecf\u9a8c\u4ec5\u9650\u4e8e\u56fe\u5f62\u6570\u636e\u5e93\u65b9\u9762\u3002\u6211\u731c\u4f60\u4e5f\u5728\u60f3\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u8fd9\u662f\u6211\u8fc4\u4eca\u4e3a\u6b62\u6700\u597d\u7684\u56de\u7b54\u3002\u5728\u6211\u804c\u4e1a\u751f\u6daf\u7684\u8fd9\u4e2a\u9636\u6bb5\uff0c\u5982\u679c\u6211\u5728\u7f16\u5199\u91d1\u878d\u8f6f\u4ef6\uff0c\u6211\u53ea\u4f1a\u9009\u62e9\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002\u5173\u7cfb\u6570\u636e\u5e93\u662f\u975e\u5e38\u4e25\u683c\u7684\uff0c\u6240\u4ee5\u60a8\u9700\u8981\u771f\u6b63\u786e\u4fdd\u60a8\u4e8b\u5148\u4e86\u89e3\u60a8\u7684\u6570\u636e\u3002\u66f4\u6539\u6570\u636e\u5e93\u662f\u4e00\u9879\u5f88\u5927\u7684\u5de5\u4f5c\uff0c\u4f46\u5982\u679c\u8bbe\u8ba1\u6b63\u786e\uff0c\u6570\u636e\u5e93\u5c06\u4e3a\u60a8\u63d0\u4f9b\u975e\u5e38\u9ad8\u7ea7\u522b\u7684\u5b8c\u6574\u6027\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u83b7\u5f97\u826f\u597d\u7684\u6027\u80fd\u3002\u8fd9\u4e9b\u6570\u636e\u5e93\u5f88\u96be\u5206\u53d1\u548c\u6269\u5c55\uff0c\u56e0\u6b64\u6700\u7ec8\u5f80\u5f80\u4f1a\u51fa\u73b0\u5355\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u975e\u5e38\u5927\uff0c\u9700\u8981\u8fdb\u884c\u590d\u5236\u624d\u80fd\u8fdb\u884c\u5907\u4efd\u3002\u4e91\u63d0\u4f9b\u5546\u4eca\u5929\u62e5\u6709\u5e94\u8be5\u53ef\u4ee5\u6269\u5c55\u7684\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u4f46\u6211\u6ca1\u6709\u4f7f\u7528\u5b83\u4eec\u7684\u7ecf\u9a8c\u3002\u6211\u82b1\u4e867\u5e74\u65f6\u95f4\u5728MongoDB(\u6587\u6863\u6570\u636e\u5e93)\u4e0a\u6784\u5efa\u4ea7\u54c1\u3002\u8fd9\u4e9b\u6570\u636e\u5e93\u5e26\u6765\u4e86\u5206\u5e03\u5f0f\u53ef\u4f38\u7f29\u6027\u548c\u5927\u91cf\u6570\u636e\u7075\u6d3b\u6027\u7684\u627f\u8bfa\u3002\u5206\u5e03\u5f0f\u53ef\u4f38\u7f29\u6027\u975e\u5e38\u590d\u6742(\u56e0\u4e3a\u5b83\u9700\u8981\u5206\u7247)\uff0c\u800c\u4e14\u5b83\u4eec\u4ece\u672a\u50cf\u5173\u7cfb\u6570\u636e\u5e93\u90a3\u6837\u53ef\u9760\u3002\u5982\u679c\u6570\u636e\u5b8c\u6574\u6027\u4e0d\u662f\u95ee\u9898\uff0c\u5e76\u4e14\u60a8\u7684\u6570\u636e\u4e0d\u65ad\u53d8\u5316\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u5e93\u975e\u5e38\u68d2\u3002\u6211\u73b0\u5728\u6b63\u5728\u5b66\u4e60Dgraph(\u56fe\u5f62\u6570\u636e\u5e93)\u548cGraphQL\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22\u6211\u770b\u5230\u7684\u4e1c\u897f\u3002Dgraph\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u3001\u53ef\u4f38\u7f29\u7684\u6570\u636e\u5e93\uff0c\u5b83\u5728\u4e91\u4e2d\u5de5\u4f5c\uff0c\u5e76\u4e3a\u8be5\u73af\u5883\u4ece\u5934\u6784\u5efa\u3002\u5b83\u786e\u5b9e\u9700\u8981\u4e00\u4e2a\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u83b7\u5f97\u6570\u636e\u5b8c\u6574\u6027\uff0c\u4f46\u5b83\u4e0d\u90a3\u4e48\u4e25\u683c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u8fdb\u884c\u66f4\u6539\u3002Dgraph\u652f\u6301\u4e8b\u52a1\uff0c\u4f46\u6211\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u8fd9\u4e00\u70b9\u3002\u672c\u6587\u65e8\u5728\u5e2e\u52a9\u60a8\u5feb\u901f\u638c\u63e1Dgraph\u548cGraphQL\u3002\u6211\u5e0c\u671b\u8fd9\u4e2a\u5e16\u5b50\u5728\u6211\u51e0\u4e2a\u6708\u524d\u5f00\u59cb\u5de5\u4f5c\u65f6\u5c31\u5b58\u5728\u4e86\u3002GraphQL\u6709\u5f88\u591a\u6587\u6863\uff0c\u4f46\u662f\u5728\u6211\u7406\u89e3\u6211\u5c06\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6750\u6599\u4e4b\u524d\uff0c\u8fd9\u4e9b\u6587\u6863\u5bf9\u6211\u6765\u8bf4\u90fd\u6ca1\u6709\u610f\u4e49\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u6559\u60a8\u5b9a\u4e49GraphQL\u6a21\u5f0f\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u7136\u540e\u5411\u60a8\u5c55\u793aDgraph\u4ece\u8be5\u6a21\u5f0f\u751f\u6210\u7684GraphQL CRUD API\u3002\u4e4b\u540e\uff0c\u6211\u5c06\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u79f0\u4e3aGraphQL Playround\u7684\u6f02\u4eae\u7684\u56fe\u5f62\u3001\u4ea4\u4e92\u5f0f\u3001\u6d4f\u89c8\u5668\u5185GraphQL IDE\u6765\u8bbf\u95eeAPI\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u6700\u540e\uff0c\u6211\u5217\u51fa\u4e86\u5ba1\u67e5\u8005\u7684\u95ee\u9898\u548cDgraph\u5de5\u7a0b\u56e2\u961f\u7684\u7b54\u6848\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u7075\u611f\u6765\u81ea\u4e8e\u6211\u4e0eDgraph\u5408\u4f5c\u7684\u4e00\u4e2a\u540d\u4e3a\u201c\u65c5\u884c\u201d\u7684\u9879\u76ee\u3002Travel\u9879\u76ee\u662f\u4e00\u4e2a\u521d\u5b66\u8005\u5de5\u5177\u5305\uff0c\u7c7b\u4f3c\u4e8e\u6211\u7528\u6765\u6559\u6388\u56f4\u68cb\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684Service\u9879\u76ee\u3002Travel\u9879\u76ee\u4e13\u6ce8\u4e8e\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Dgraph\u548cGraphQL\u5728\u56f4\u68cb\u4e2d\u7f16\u5199\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u3002\u65c5\u6e38\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57ce\u5e02\u7684\u4fe1\u606f\uff0c\u5728\u90a3\u91cc\u6536\u96c6\u4e86\u56db\u4e2a\u70b9\u7684\u6570\u636e\u5e76\u8fdb\u884c\u4e86\u76f8\u5173\u3002\u6e05\u53551 TYPE City{id\uff1aid\uff01#MANDIRED\uff0c\u6807\u91cfTYPE\uff0cLookup Lat\uff1aFloat\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bLNG\uff1aFLOAT\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\u540d\u79f0\uff1aString\uff01@Search(by\uff1a[Exact])#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\uff0c\u53ef\u641c\u7d22\u54a8\u8be2\uff1a\u54a8\u8be2#\u975e\u5f3a\u5236\uff0c\u81ea\u5b9a\u4e49\u7c7b\u578b\u5929\u6c14\uff1a\u5929\u6c14#\u975e\u5f3a\u5236\uff0c\u81ea\u5b9a\u4e49\u7c7b\u578b\u5730\u70b9\uff1a[Place]#\u975e\u5f3a\u5236\uff0c\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u5217\u8868}\u7c7b\u578b\u54a8\u8be2{id\uff1aid\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\uff0c\u67e5\u627e\u5927\u9646\uff1aString\uff01#MANDIRED\u3002\u6807\u91cf\u7c7b\u578bCOUNTRY_CODE\uff1aSTRING\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bLAST_UPDATED\uff1aSTRING#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\u6d88\u606f\uff1aSTRING#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bSCORE\uff1aFLOAT\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\u6765\u6e90\uff1aString#NOT-MANDITY\uff0c\u6807\u91cf\u7c7b\u578b}\u7c7b\u578b\u4f4d\u7f6e{id\uff1aid\uff01#MANDRED\uff0c\u6807\u91cf\u7c7b\u578b\u67e5\u627e\u5730\u5740\uff1aString#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bAVG_USER_RATING\uff1aFLOAT#NOT-MANDITY\uff0c\u6807\u91cf\u7c7b\u578bCITY_NAME\uff1aSTRING\uff01#\u3002\u6807\u91cf\u7c7b\u578bLNG\uff1aFLOAT\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bLOCATION_TYPE\uff1a[string]#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\uff0c\u5217\u8868\u540d\u79f0\uff1aSTRING\uff01@search(by\uff1a[Exact])#MANDIRED\uff0c\u53ef\u641c\u7d22NO_USER_RATING\uff1aINT#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bPLACE_ID\uff1aSTRING\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578bPHOTO_ID\uff1aString#NOT-MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b}\u7c7b\u578b\u5929\u6c14{id\uff1aid\uff01#MANDIRED\uff0c\u6807\u91cf\u7c7b\u578b\uff0cLOOKUP CITY_NAME\uff1aSTRING\uff01\u6807\u91cf\u7c7b\u578bFeel_Like\uff1aFLOAT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578b\u6e7f\u5ea6\uff1aINT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578b\u538b\u529b\uff1aINT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578b\u65e5\u51fa\uff1aINT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578b\u65e5\u843d\uff1aINT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578bTEMP\uff1aFLOAT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578bTEMP_MIN\uff1aFLOAT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578bTEMP_MAX\uff1aFLOAT#\u975e\u5f3a\u5236\uff0c\u6807\u91cf\u7c7b\u578b\u53ef\u89c1\u6027\uff1aString#NOT-MAND\uff0c\u6807\u91cf\u7c7b\u578bWIND_DIRECTION\uff1aINT#NOT\u3002\n\u6e05\u53551\u663e\u793a\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u6574GraphQL\u6a21\u5f0f\u3002\u6211\u5df2\u7ecf\u6dfb\u52a0\u4e86\u6ce8\u91ca\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u5206\u89e3\u4e86\u6a21\u5f0f\u5b9a\u4e49\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bb5(\u8c13\u8bcd)\u3002\u8fd9\u5e94\u8be5\u4e3a\u60a8\u7406\u89e3SYNT\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\n\u6e05\u535512\u663e\u793a\u4e86\u7528\u4e8e\u542f\u52a8\u548c\u8fd0\u884cDgraph\u7684docker run\u547d\u4ee4\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u7248\u672c\u7684Dgraph\u4e0d\u662f\u7528\u4e8e\u751f\u4ea7\u7684\u6d88\u606f\u3002\u4f7f\u7528\u6b64\u7248\u672c\u8fdb\u884c\u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u3002\u7aef\u53e38080\u662f\u4e3aGraphQL\u516c\u5f00\u7684\u7aef\u53e3\u3002Dgraph\u542f\u52a8\u5e76\u8fd0\u884c\u540e\uff0c\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u6a21\u5f0f\u3002\u521b\u5efa\u6a21\u5f0f\u7684\u6700\u5feb\u65b9\u6cd5\u662f\u8fd0\u884ccurl\u547d\u4ee4\u3002\u6e05\u535513curl-H&#34\uff1bContent-Type\uff1aApplication/json&#34\uff1bhttp://localhost:8080/admin/schema-XPOST-d$&#39\uff1btype City{id\uff1aid\uff01\u54a8\u8be2\uff1a\u54a8\u8be2LAT\uff1a\u5f69\u8f66\uff01\u6db2\u5316\u5929\u7136\u6c14\uff1a\u6f02\u6d6e\uff01\u540d\u79f0\uff1astring\uff01@search(by\uff1a[Exact])\u5730\u70b9\uff1a[place]weet\uff1aweet}\u7c7b\u578b\u54a8\u8be2{id\uff1aid\uff01\u5927\u9646\uff1a\u5f26\uff01\u56fd\u5bb6\uff1a\u5b57\u7b26\u4e32\uff01COUNTRY_CODE\uff1a\u5b57\u7b26\u4e32\uff01LAST_UPDATED\uff1aString\u6d88\u606f\uff1aString\u5206\u6570\uff1aFloat\uff01\u6765\u6e90\uff1astring}\u7c7b\u578bPlace{id\uff1aid\uff01\u5730\u5740\uff1astring AVG_USER_RATING\uff1aFLOAT CITY_NAME\uff1aSTRING\uff01gaps_url\uff1astring lat\uff1aFloat\uff01\u6db2\u5316\u5929\u7136\u6c14\uff1a\u6f02\u6d6e\uff01location_type\uff1a[string]name\uff1astring\uff01@search(by\uff1a[Exact])no_user_Rating\uff1aint place_id\uff1astring\uff01Photo_id\uff1aString}\u7c7b\u578b\u5929\u6c14{id\uff1aid\uff01CITY_NAME\uff1a\u5b57\u7b26\u4e32\uff01\u63cf\u8ff0\uff1astring Feel_Like\uff1a\u6d6e\u52a8\u6e7f\u5ea6\uff1aINT\u538b\u529b\uff1aINT\u65e5\u51fa\uff1aINT\u65e5\u843d\uff1aINT TEMP\uff1aFLOAT TEMP_MIN\uff1aFLOAT TEMP_MAX\uff1aFLOAT\u53ef\u89c1\u6027\uff1aSTRING WIND_DIRECTION\uff1aINT WIND_SPEED\uff1aFloat}&#39\uff1bOUTPUT{&#34\uff1bdata&#34\uff1b\uff1a{&#34\uff1bcode&#34\uff1b\uff1a&#34\uff1bSuccess&#34\uff1b\uff0c&#34\uff1bMessage&#34\uff1b\uff1a&#34\uff1bDone&#34\uff1b}}\u3002\n\u6e05\u535513\u663e\u793a\u4e86\u521b\u5efa\u6a21\u5f0f\u7684curl\u547d\u4ee4\u3002\u590d\u5236\u3001\u7c98\u8d34\u5e76\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884ccurl\u547d\u4ee4\u3002\u5b8c\u6210\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u663e\u793a\u7684\u8f93\u51fa\u3002GraphQL\u6e38\u4e50\u573a\u662f\u4e00\u4e2a\u56fe\u5f62\u5316\u3001\u4ea4\u4e92\u5f0f\u3001\u6d4f\u89c8\u5668\u5185\u7684GraphQL IDE\uff0c\u7531Prisma\u521b\u5efa\uff0c\u57fa\u4e8eGraphiQL\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u9a8c\u8bc1\u6a21\u5f0f\u548c\u6570\u636e\u5728\u6570\u636e\u5e93\u4e2d\u662f\u5426\u5f97\u5230\u6b63\u786e\u7ba1\u7406\u3002\u8be5\u94fe\u63a5\u63d0\u4f9b\u5bf9\u4e09\u5927\u64cd\u4f5c\u7cfb\u7edf\u7684\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbf\u95ee\u3002\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u5e76\u4f7f\u5176\u8fd0\u884c\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u4ee5\u4e0b\u5185\u5bb9\u3002\u56fe1\u9009\u62e9URL\u7aef\u70b9\u9009\u9879\u5e76\u5728\u6587\u672c\u6846\u4e2d\u952e\u5165http://localhost:8080\uff0c\u5982\u56fe1\u6240\u793a\uff0c\u7136\u540e\u70b9\u51fbOpen\u6309\u94ae\u3002\u56fe2\u5047\u8bbe\u60a8\u8ba9Dgraph\u5728\u6e05\u535512\u4e2d\u8fd0\u884c\uff0c\u60a8\u5e94\u8be5\u770b\u5230\u6ca1\u6709\u8fde\u63a5\u9519\u8bef\u3001\u4e00\u4e2a\u7a7a\u7684\u5de5\u4f5c\u533a\u548c\u53f3\u4fa7\u7684\u4e24\u4e2a\u9009\u9879\u5361\uff0c\u5982\u56fe2\u6240\u793a\u3002\u7531\u4e8e\u201c\u6697\u201d\u4e3b\u9898\u975e\u5e38\u6697\uff0c\u6211\u5c06\u628a\u4e3b\u9898\u66f4\u6539\u4e3a\u201c\u4eae\u201d\u3002\u4e3a\u6b64\uff0c\u8bf7\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f\u53f3\u4e0a\u89d2\u7684\u9f7f\u8f6e\u56fe\u6807\uff0c\u5e76\u5c06\u7f16\u8f91\u5668\u7684\u4e3b\u9898\u8bbe\u7f6e\u4ece&#34\uff1b\u6697&#34\uff1b\u66f4\u6539\u4e3a&#34\uff1b\u4eae&#34\uff1b\uff0c\u7136\u540e\u5355\u51fb\u4fdd\u5b58\u3002\u6e05\u535514\u66f4\u6539\u4e3b\u9898\u540e\uff0cGraphQL\u6e38\u4e50\u573a\u5e94\u8be5\u5982\u4e0b\u6240\u793a\u3002\u56fe3\u56fe3\u663e\u793a\u4e86\u5c06\u4e3b\u9898\u66f4\u6539\u4e3a\u706f\u5149\u540eGraphQL\u6e38\u4e50\u573a\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u53f3\u4fa7\u7684\u4e24\u4e2a\u9009\u9879\u5361DOCS\u548cSCHEMA\u63d0\u4f9b\u6a21\u5f0f\u4fe1\u606f\u3002DOCS\u9009\u9879\u5361\u662fCRUD API\u7684\u4ea4\u4e92\u5f0f\u8d85\u94fe\u63a5\u89c6\u56fe\u3002\u6a21\u5f0f\u9009\u9879\u5361\u63d0\u4f9b\u6574\u4e2a\u6a21\u5f0f\u7684\u5e73\u9762\u89c6\u56fe\u3002\u56fe4\u56fe4\u663e\u793a\u4e86Schema\u9009\u9879\u5361\u4e2d\u5e73\u9762\u6a21\u5f0f\u7684\u90e8\u5206\u89c6\u56fe\u3002\u8be5\u6a21\u5f0f\u4e0d\u4ec5\u663e\u793a\u60a8\u63d0\u4f9b\u7684\u6570\u636e\u5b9a\u4e49\uff0c\u8fd8\u663e\u793a\u7531Drgaph\u751f\u6210\u7684\u6240\u6709\u7c7b\u578b\u548cCRUD API\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u8868\u793aCRUD API\u3002\u6e05\u535515\u7c7b\u578b\u7a81\u53d8{addCity(input\uff1a[AddCityInput\uff01]\uff01)\uff1aAddCityPayload updateCity(input\uff1aUpdateCityInput\uff01)\uff1aUpdateCityPayload delete City(filter\uff1aCityFilter\uff01)\uff1aDeleteCityPayload addConsulting(input\uff1a[AddAdvisoryInput\uff01]\uff01)\uff1aAddAdvisoryPayload updateConsulting(input\uff1aUpdateAdvisoryInput\uff01)\uff1aUpdateAdvisoryPput\uff01\n\u6e05\u535515\u663e\u793a\u4e86\u5305\u542b\u57fa\u4e8e\u6a21\u5f0f\u751f\u6210\u7684\u7a81\u53d8API\u7684\u7a81\u53d8\u7c7b\u578b\u3002\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u6dfb\u52a0\u3001\u66f4\u65b0\u548c\u5220\u9664\u529f\u80fd\u3002\u8fd9\u662f\u56e0\u4e3aID\u8c13\u8bcd\u5df2\u6dfb\u52a0\u5230\u67b6\u6784\u4e2d\u7684\u6bcf\u79cd\u7c7b\u578b\u3002\u6e05\u535516type query{getCity(id\uff1aid\uff01)\uff1aCity queryCity(filter\uff1aCityFilter Order\uff1aCityOrder First\uff1aInt Offset\uff1aInt)\uff1a[City]getConsulting(id\uff1aid\uff01)\uff1aAdvisoryFilter Order\uff1aAdvisoryOrder First\uff1aInt Offset\uff1a\uff1a[AdvisoryOrder First\uff1aInt Offset\uff1aInt)\uff1a[AdvisorygetPlace(id\uff1aid\uff01)\uff1aPlace queryPlace(Filter\uff1aPlaceFilter Order\uff1aPlaceOrder First\uff1aInt Offset\uff1aInt)\uff1a[\u3002\n\u6e05\u535516\u663e\u793a\u4e86\u5305\u542b\u57fa\u4e8e\u6a21\u5f0f\u751f\u6210\u7684\u67e5\u8be2API\u7684\u67e5\u8be2\u7c7b\u578b\u3002\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u83b7\u53d6\u548c\u67e5\u8be2\u51fd\u6570\u3002GET\u51fd\u6570\u4e4b\u6240\u4ee5\u5b58\u5728\uff0c\u662f\u56e0\u4e3a\u5411\u67b6\u6784\u4e2d\u7684\u6bcf\u4e2a\u7c7b\u578b\u6dfb\u52a0\u4e86ID\u8c13\u8bcd\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u67e5\u8be2\u529f\u80fd\u3002\u4e0d\u7528\u62c5\u5fc3\u7d22\u5f15\uff0c\u5f53\u67e5\u8be2\u51fd\u6570\u7b2c\u4e00\u6b21\u5728\u7279\u5b9a\u8c13\u8bcd\u4e0a\u8fd0\u884c\u65f6\uff0c\u4f1a\u521b\u5efa\u7d22\u5f15\u3002", "note_en": "In most of the reviews for this post, I was asked why choose a  graph database over something else? This is a hard question to answer since my experience right now is limited on the graph database side. My guess is you\u2019re wondering the same thing, so this is my best answer to date. At this point in my career, I would only choose a  relational database if I was writing financial software. Relational databases are very rigid so you need to really make sure you understand your data upfront. Changing the database is a big effort, but the database when designed correctly will give you very high levels of integrity and you can get good performance. These databases are hard to distribute and scale so you tend to end up with single instances that are very large and require replication for backup. The cloud providers have relational databases today that are supposed to scale, but I have no experience with them. I spent 7 years building products on MongoDB ( document database). These databases come with the promise of distributed scalability and lots of data flexibility. The distributed scalability is very complicated (since it requires sharding) and they have never been as reliable as the relational databases. If data integrity is not an issue and your data is constantly changing, these databases are great. I am now learning Dgraph (graph database) and GraphQL. I am really liking what I see. Dgraph is a distributed scalable database that works in the cloud and built from the ground up for that environment. It does require a schema so you can get the data integrity, but it\u2019s not as rigid so you have more flexibility to make changes. Dgraph supports transactions, but I have not played with that yet.  This post is intended to help you get up and running quickly with Dgraph and GraphQL. I wish this post existed when I started several months ago. There is a world of documentation out there for GraphQL, but none of it made sense to me until I understood the material I will present in this post. In this post, I will teach you the basics of defining a GraphQL schema, and then show you the GraphQL CRUD API that Dgraph generates from that schema. After that, I will show you how to access the API using a nice graphical, interactive, in-browser GraphQL IDE called  GraphQL Playground. At the end of this post, I listed questions reviewers had and answers from the Dgraph engineering team.  The inspiration for this post is a project I\u2019ve been working on with Dgraph called  Travel. The Travel project is a starter kit similar to the  Service project I use to teach application development in  Go. The Travel project is focused on learning how to write production applications in Go using Dgraph and GraphQL. The Travel project provides information for a city where four points of data are gathered and related. Listing 1 type City { id: ID! # mandatory, scalar type, lookup lat: Float! # mandatory, scalar type lng: Float! # mandatory, scalar type name: String! @search(by: [exact]) # mandatory, scalar type, searchable advisory: Advisory # not-mandatory, custom type weather: Weather # not-mandatory, custom type places: [Place] # not-mandatory, custom type, list}type Advisory { id: ID! # mandatory, scalar type, lookup continent: String! # mandatory, scalar type country: String! # mandatory, scalar type country_code: String! # mandatory, scalar type last_updated: String # not-mandatory, scalar type message: String # not-mandatory, scalar type score: Float! # mandatory, scalar type source: String # not-mandatory, scalar type}type Place { id: ID! # mandatory, scalar type, lookup address: String # not-mandatory, scalar type avg_user_rating: Float # not-mandatory, scalar type city_name: String! # mandatory, scalar type gmaps_url: String # not-mandatory, scalar type lat: Float! # mandatory, scalar type lng: Float! # mandatory, scalar type location_type: [String] # not-mandatory, scalar type, list name: String! @search(by: [exact]) # mandatory, scalar type, searchable no_user_rating: Int # not-mandatory, scalar type place_id: String! # mandatory, scalar type photo_id: String # not-mandatory, scalar type}type Weather { id: ID! # mandatory, scalar type, lookup city_name: String! # mandatory, scalar type description: String # not-mandatory, scalar type feels_like: Float # not-mandatory, scalar type humidity: Int # not-mandatory, scalar type pressure: Int # not-mandatory, scalar type sunrise: Int # not-mandatory, scalar type sunset: Int # not-mandatory, scalar type temp: Float # not-mandatory, scalar type temp_min: Float # not-mandatory, scalar type temp_max: Float # not-mandatory, scalar type visibility: String # not-mandatory, scalar type wind_direction: Int # not-mandatory, scalar type wind_speed: Float # not-mandatory, scalar type}\n Listing 1 shows the complete GraphQL schema for the application. I have added comments that break down each field (predicate) in the schema definition. That should give you a good starting point for understanding the syntax you see. I will break down each of the unique aspects of the syntax a bit more. GraphQL has a set of default  scalar types. Listing 2 Int: Signed 32\u2010bit integer.Float: Signed double-precision floating-point value.String: UTF\u20108 character sequence.DateTime: string in RFC3339 formatBoolean: true or false.ID: Auto-generated unique id.\n Listing 2 shows the set of default scalar types provided by GraphQL. These are the basic types provided by any database or programming language. Listing 3  Listing 3 shows the declaration of the  id predicate using the scalar type  ID. This scalar type auto-generates a unique ID for any node of data that is added to the database. Dgraph physically organizes the data based on this ID so a lookup can be performed quickly. This type is also a marker that Dgraph uses to build a full GraphQL CRUD API for the type. Listing 4 type City { id: ID! # mandatory, scalar type, lookup lat: Float! # mandatory, scalar type}type Advisory { continent: String! # mandatory, scalar type}\n Listing 4 shows three predicates in the schema using the exclamation point ( !). This indicates to the database that data for these predicates is required for any add or update operation. When the exclamation point is missing, the predicate is allowed to be null. Listing 5 type City { places: [Place] # not-mandatory, custom type, list}type Place { location_type: [String] # not-mandatory, scalar type, list}\n Listing 5 shows two predicates declared as a list by using square brackets around the type declaration. Listing 6  Listing 6 shows a field declared as searchable by an exact string  search. There are other options to choose from. Listing 7 input StringExactFilter { eq: String # Equal to le: String # Less than or equal lt: String # Less than ge: String # Greater than or equal gt: String # Greater than}input StringTermFilter { allofterms: String # Match all words provided: &#34;sydney melbourne&#34; anyofterms: String # Match any words provided: &#34;sydney melbourne&#34;}input StringFullTextFilter { alloftext: String # Match all words provided: &#34;sydney melbourne&#34; anyoftext: String # Match any words provided: &#34;sydney melbourne&#34;}input StringRegExpFilter { regexp: String # Match any city with ney: &#34;/.*ney.*/&#34;}\n Listing 7 shows the different string-type searches you can choose from based on  input types defined by Dgraph. When a field is searchable, Dgraph builds GraphQL query API\u2019s for the type based on the search filter selected. Listing 8  Listing 8 shows you how to define searchable predicates for some of the other scalar types. Listing 9 input FloatFilter { eq: Float le: Float lt: Float ge: Float gt: Float}input IntFilter { eq: Int le: Int lt: Int ge: Int gt: Int}Boolean doesn\u2019t have a special input filter type.\n Listing 9 shows the other scalar type searches you can choose from based on  input types that are defined by Dgraph. The  Boolean type does not have a special  input type defined.  The best way to run Dgraph on your local machine is to use Docker. If you don\u2019t have Docker installed yet, then please follow this  guide from Docker. As of the writing of this post, version 20.03.1 is the latest release of Dgraph. To download this version of Dgraph, just use the  docker pull command. Listing 10 $ docker pull dgraph/standalone:v20.03.1OUTPUTv20.03.1: Pulling from dgraph/standalone5bed26d33875: Pull completef11b29a9c730: Pull complete930bda195c84: Pull complete78bf9a5ad49e: Pull complete56d14a4dc4d7: Pull completeb2e6192c62a3: Pull complete02dca55cd04c: Pull completeca9eba547da7: Pull completee4c262d6c0b0: Pull completeDigest: sha256:22d2b55b3cb4d23032de2aa8b484ca83bebcfbba102010c259b332a239b676a6Status: Downloaded newer image for dgraph/standalone:v20.03.1docker.io/dgraph/standalone:v20.03.1\n Listing 10 shows the  docker pull command that downloads a standalone version of Dgraph and prepares Dgraph to run inside a container. Once all the different file layers are downloaded, run the  docker images command to validate the pull. Listing 11  Listing 11 shows the call to  docker images and the expected output for the Dgraph image. To validate this image works, spin up a container. Listing 12 $ docker run -it -p 8080:8080 dgraph/standalone:v20.03.1OUTPUTWarning: This standalone version is meant for quickstart purposes only. It is NOT RECOMMENDED for production environments.2020/04/10 14:07:40 Listening on :8000...[Decoder]: Using assembly version of decoder\n Listing 12 shows the  docker run command to use to get Dgraph up and running. Notice the message saying this version of Dgraph is not meant for production use. Use this version for local development and testing. Port  8080 is the port exposed for GraphQL.  With Dgraph up and running, the next step is to create a schema. The quickest way to create the schema is to run a  curl command. Listing 13 curl -H &#34;Content-Type: application/json&#34; http://localhost:8080/admin/schema -XPOST -d $&#39;type City { id: ID! advisory: Advisory lat: Float! lng: Float! name: String! @search(by: [exact]) places: [Place] weather: Weather}type Advisory { id: ID! continent: String! country: String! country_code: String! last_updated: String message: String score: Float! source: String}type Place { id: ID! address: String avg_user_rating: Float city_name: String! gmaps_url: String lat: Float! lng: Float! location_type: [String] name: String! @search(by: [exact]) no_user_rating: Int place_id: String! photo_id: String}type Weather { id: ID! city_name: String! description: String feels_like: Float humidity: Int pressure: Int sunrise: Int sunset: Int temp: Float temp_min: Float temp_max: Float visibility: String wind_direction: Int wind_speed: Float}&#39;OUTPUT{&#34;data&#34;:{&#34;code&#34;:&#34;Success&#34;,&#34;message&#34;:&#34;Done&#34;}}\n Listing 13 shows the  curl command that creates the schema. Copy, paste, and run that  curl command in your terminal. After it completes, you should see the output as presented.  The  GraphQL Playground is a graphical, interactive, in-browser GraphQL IDE, created by  Prisma and based on  GraphiQL. This is a nice tool for verifying that the schema and data are properly managed in the database. The link provides access to desktop apps for the three major operating systems. Once you download the application and get it running, you should see this. Figure 1  Select the  URL ENDPOINT option and type  http://localhost:8080 in the text box as seen in figure 1. Then hit the  OPEN button. Figure 2   Assuming you left Dgraph running at listing 12, you should see no connection errors, an empty workspace, and two tabs on the right as shown in figure 2. Since the \u201cdark\u201d theme is very dark, I am going to change the theme to \u201clight\u201d. To do that, select the gear icon in the top right corner of the application and change the  editor.theme setting from  &#34;dark&#34; to  &#34;light&#34; and hit save. Listing 14  After changing the theme, the GraphQL Playground should look like this. Figure 3   Figure 3 shows how GraphQL Playground should look after changing the theme to  &#34;light&#34;. The two tabs on the right,  DOCS and  SCHEMA provide schema information. The  DOCS tab is an interactive, hyper-linked view of the CRUD API. The  SCHEMA tab provides a flat view of the entire schema. Figure 4   Figure 4 shows you a partial view of the flat schema from the  SCHEMA tab. This schema not only shows the data definitions you provided, but all the types and the CRUD API generated by Drgaph.  There are two types that are important since they represent the CRUD API. Listing 15 type Mutation { addCity(input: [AddCityInput!]!): AddCityPayload updateCity(input: UpdateCityInput!): UpdateCityPayload deleteCity(filter: CityFilter!): DeleteCityPayload addAdvisory(input: [AddAdvisoryInput!]!): AddAdvisoryPayload updateAdvisory(input: UpdateAdvisoryInput!): UpdateAdvisoryPayload deleteAdvisory(filter: AdvisoryFilter!): DeleteAdvisoryPayload addPlace(input: [AddPlaceInput!]!): AddPlacePayload updatePlace(input: UpdatePlaceInput!): UpdatePlacePayload deletePlace(filter: PlaceFilter!): DeletePlacePayload addWeather(input: [AddWeatherInput!]!): AddWeatherPayload updateWeather(input: UpdateWeatherInput!): UpdateWeatherPayload deleteWeather(filter: WeatherFilter!): DeleteWeatherPayload}\n Listing 15 shows the  Mutation type that contains the mutation API that was generated based on the schema. You\u2019ll notice there is an  add,  update, and  delete function for each type. This is because the  ID predicate was added to each type in the schema. Listing 16 type Query { getCity(id: ID!): City queryCity(filter: CityFilter order: CityOrder first: Int offset: Int): [City] getAdvisory(id: ID!): Advisory queryAdvisory(filter: AdvisoryFilter order: AdvisoryOrder first: Int offset: Int): [Advisory] getPlace(id: ID!): Place queryPlace(filter: PlaceFilter order: PlaceOrder first: Int offset: Int): [Place] getWeather(id: ID!): Weather queryWeather(filter: WeatherFilter order: WeatherOrder first: Int offset: Int): [Weather]}\n Listing 16 shows the  Query type that contains the query API that was generated based on the schema. You can see there is a  get and  query function for each type. The  get function exists because the  ID predicate was added to each type in the schema. Each type will get a  query function by default. Don\u2019t worry about indexes, the first time a  query function runs on a specific predicate, an index is created.It\u2019s important to note that all interaction with the database will be through the GraphQL CRUD API. If you don\u2019t have a function that you need, you will need to change the schema to have Dgraph generate it for you or you will need to add a custom function yourself.  Now I will execute the  addCity,  getCity and  queryCity functions from inside the GraphQL Playground to show you how to access this API in a GraphQL format. Listing 17 mutation { addCity(input: [{ name: &#34;sydney&#34; lat: -33.865143 lng: 151.209900 }]) { city { id name lat lng } }}\n Listing 17 shows how to call the  addCity function to add a city to the database. Notice how the API is structured around the type system defined by Dgraph in the schema. Listing 18 type Mutation { addCity(input: [AddCityInput!]!): AddCityPayload}input AddCityInput { advisory: AdvisoryRef lat: Float! lng: Float! name: String! places: [PlaceRef] weather: WeatherRef}type AddCityPayload { city(filter: CityFilter, order: CityOrder, first: Int, offset: Int): [City] numUids: Int}input CityFilter { id: [ID!] name: StringExactFilter and: CityFilter or: CityFilter not: CityFilter}\n Listing 18 shows all the supporting types used to define the  addCity function. Having access to the schema and knowing how the APIs are structured will help you understand how to use the full API generated by Dgraph. Copy and paste the code in listing 17 into GraphQL Playground and click the play button. Figure 5   Figure 5 shows the  addCity function call and the result in the GraphQL Playground. To retrieve the city from the database, there is a lookup function named  getCity, and a query function named  queryCity. Listing 19  Listing 19 shows the  getCity function call. Copy and paste this call into the GraphQL Playground and click the play button. Figure 6   Figure 6 shows the  getCity function call and the result in the GraphQL Playground. Listing 20 query { queryCity(filter: { name: { eq: &#34;sydney&#34; } }) { id name lat lng }}\n Listing 20 shows the  queryCity function call. Copy and paste this call into the GraphQL Playground and hit the play button. Figure 7   Figure 7 shows the  queryCity function call and the result in the GraphQL Playground.  To shutdown the database, find the container id and then use the  docker stop command. Listing 21  Listing 21 shows how to find the id of the running Dgraph container and then stop and remove it. You can also hit  C in the terminal window running Dgraph to perform these same actions.  In this post, I showed you how to run Dgraph locally, the basics of defining a GraphQL schema, how to use the generated GraphQL CRUD API, and how to install and use a tool called GraphQL Playground. All these things are necessary to get up and running with Dgraph for application development. In future posts, I will show you how to leverage Dgraph, GraphQL, and the auto-generated CRUD API to build production based applications in Go. I\u2019ll do that with the  Travel project that is available today. For now, take the time to generate your own schema and look deeper at the  schema documentation provided by Dgraph. There are interfaces, enumerations, and inverse edges that I didn\u2019t cover in this post. There are other interesting types and details in the documentation so do take a look.  Do we need to add an ID predicate on every type we are defining? You aren\u2019t required to add an ID to a type. Types with IDs are provided a  get query function and  update mutation function because they can be identified uniquely. Given a type in the schema named  Product with an ID predicate: Query Functions Provided: - getProduct - queryProduct Mutation Functions Provided: - addProduct - updateProduct - deleteProduct Given a type in the schema named  Product without an ID predicate: Query Functions Provided: - queryProduct Mutation Functions Provided: - addProduct Is there a way to have a user defined ID? You can use  @id on a  String! field for user-defined IDs. See the example in  https://graphql.dgraph.io/docs/walk-through-example/. This ensures that 1) the field is unique and 2) automatically adds the hash index to the field for searching. How would user defined ID\u2019s affect performance and api generation? User-defined IDs\u2019s  get query would take the  String as input for the query. Mutations would require an internal lookup of the user-defined ID to find the node. The GraphQL API would allow you to query and mutate the type based on your user-defined ID instead of a hexadecimal number for the ID. Is the mutation and Query API a standard GraphQL API setup or is this something special in Dgraph? Query and Mutation are standard operations in GraphQL. Do all databases that support GraphQL provide the CRUD api\u2019s like Dgraph? With Dgraph, you\u2019ll define your GraphQL schema and Dgraph automatically generates a full GraphQL API to access the database. With other database systems, GraphQL support is typically done outside the database where you must also set up your own custom resolvers to translate GraphQL queries into the underlying database query language.", "posttime": "2020-05-16 02:16:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "graphql,\u7c7b\u578b", "title": "Dgraph\u3001GraphQL\u3001Schemas\u548cCRUD-Ardan\u5b9e\u9a8c\u5ba4", "title_en": "Dgraph, GraphQL, Schemas, & CRUD \u2013 Ardan Labs", "transed": 1, "url": "https://www.ardanlabs.com/blog/2020/05/dgraph-graphql-schemas-crud.html", "via": "", "real_tags": ["graphql", "\u7c7b\u578b"]}]