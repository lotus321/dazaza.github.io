[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1004000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "htmx\u5141\u8bb8\u60a8\u4f7f\u7528\u5c5e\u6027\u5728HTML\u4e2d\u76f4\u63a5\u8bbf\u95eeAjax\u3001WebSockets\u548cServer Sent Event\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u8d85\u6587\u672c\u7684\u7b80\u5355\u6027\u548c\u5f3a\u5927\u529f\u80fd\u6784\u5efa\u73b0\u4ee3\u7528\u6237\u754c\u9762\u3002\n&lt\uff1b\uff01--\u4eceunpkg\u52a0\u8f7d--&gt\uff1b&lt\uff1bScript src=&#34\uff1bhttps://unpkg.com/htmx.org@0.0.4&#34\uff1b&gt\uff1b&lt\uff1b/script&gt\uff1b&lt\uff1b\uff01--\u8ba9\u6309\u94ae\u901a\u8fc7AJAX\u53d1\u5e03\u5355\u51fb--&gt\uff1b&lt\uff1b\u6309\u94aeHX-POST=&#34\uff1b/\u5355\u51fb&#34\uff1bHX-SWAP=&#34\uff1b\u5916\u90e8HTML&#34\uff1b&gt\uff1b\u5355\u51fb\u6211&lt\uff1b/\u6309\u94ae&gt\uff1b\n&#34\uff1b\u5f53\u7528\u6237\u5355\u51fb\u6b64\u6309\u94ae\u65f6\uff0c\u5411/CLICED\u53d1\u51faAJAX\u8bf7\u6c42\uff0c\u5e76\u5c06\u6574\u4e2a\u6309\u94ae\u66ff\u6362\u4e3a\u54cd\u5e94&#34\uff1b", "note_en": "htmx allows you to access  AJAX, WebSockets and  Server Sent Eventsdirectly in HTML, using  attributes, so you can build modern user interfaces with the  simplicity and power of hypertext\n   &lt;!-- Load from unpkg --&gt; &lt;script src=&#34;https://unpkg.com/htmx.org@0.0.4&#34;&gt;&lt;/script&gt; &lt;!-- have a button POST a click via AJAX --&gt; &lt;button hx-post=&#34;/clicked&#34; hx-swap=&#34;outerHTML&#34;&gt; Click Me &lt;/button&gt;\n  &#34;When a user clicks on this button, issue an AJAX request to /clicked, and replace the entire button with the response&#34;", "posttime": "2020-05-28 07:03:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u7528\u4e8e,high,ajax", "title": "htmx-\u7528\u4e8eHTML\u7684\u9ad8\u6027\u80fd\u5de5\u5177", "title_en": "htmx \u2013 high power tools for HTML", "transed": 1, "url": "https://htmx.org/", "via": "", "real_tags": ["\u6027\u80fd", "\u7528\u4e8e", "high", "ajax"]}, {"category": "", "categoryclass": "", "imagename": "0b37347f047636e8d42e1c654625a8da.jpeg", "infoid": 1003999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a7a\u519b\u4e00\u53f7(\u8def\u900f\u793e)-\u767d\u5bab\u53d1\u8a00\u4eba\u5468\u4e09\u8868\u793a\uff0c\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u4e0d\u4e45\u5c06\u7b7e\u7f72\u4e00\u9879\u5173\u4e8e\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u547d\u4ee4\u3002\n\u53d1\u8a00\u4eba\u51ef\u8389\u00b7\u9ea6\u514b\u7eb3\u5c3c(Kayleigh McEnany)\u5728\u4e0e\u7279\u6717\u666e\u4e00\u8d77\u4ece\u4f5b\u7f57\u91cc\u8fbe\u5dde\u524d\u5f80\u534e\u76db\u987f\u7684\u7a7a\u519b\u4e00\u53f7\u4e0a\u5bf9\u8bb0\u8005\u53d1\u8868\u4e86\u4e0a\u8ff0\u8a00\u8bba\u3002\u4e00\u5929\u524d\uff0c\u63a8\u7279\u516c\u53f8(Twitter Inc)\u5bf9\u7279\u6717\u666e\u7684\u4e00\u4e9b\u63a8\u6587\u53d1\u51fa\u8b66\u544a\uff0c\u4fc3\u4f7f\u8bfb\u8005\u5bf9\u603b\u7edf\u7684\u8bf4\u6cd5\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002", "note_en": "ABOARD AIR FORCE ONE (Reuters) - U.S. President Donald Trump will sign an executive order shortly regarding social media companies, a White House spokeswoman said on Wednesday.\n Spokeswoman Kayleigh McEnany made the remark to reporters aboard Air Force One, traveling with Trump to Washington from Florida a day after Twitter Inc attached a warning to some of his tweets prompting readers to fact-check the president\u2019s claims.", "posttime": "2020-05-28 07:02:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5a92\u4f53,sign", "title": "\u7279\u6717\u666e\u5c06\u7b7e\u7f72\u9488\u5bf9\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u884c\u653f\u4ee4", "title_en": "Trump will sign an executive order on social media companies", "transed": 1, "url": "https://www.reuters.com/article/us-twitter-trump-executive-order/trump-will-sign-an-executive-order-on-social-media-companies-white-house-spokeswoman-idUSKBN2333BT", "via": "", "real_tags": ["\u5a92\u4f53", "sign"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5728Facebook\u4e0a\u5173\u6ce8\u6211\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u6bcf\u5929\u90fd\u5728\u53d1\u5e03\u51a0\u72b6\u75c5\u6bd2\u7684\u7edf\u8ba1\u6570\u636e\u3002\u6211\u4f7f\u7528Johns Hopkins GitHub\u5b58\u50a8\u5e93\u4e2d\u7684\u6bcf\u65e5\u66f4\u65b0\u6765\u751f\u6210\u8fd9\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\n\u8d77\u521d\uff0c\u6211\u53ea\u662f\u624b\u5de5\u5c06\u6570\u636e\u590d\u5236\u5230\u7535\u5b50\u8868\u683c\u4e2d\u3002\u4f46\u8fd9\u5f88\u5feb\u5c31\u53d8\u5f97\u5355\u8c03\u4e4f\u5473\u4e86\u3002\n\u7136\u540e\uff0c\u57283\u6708\u4e0b\u65ec\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u5c0fClojure\u7a0b\u5e8f\u6765\u63d0\u53d6\u548c\u5904\u7406\u6570\u636e\u3002\u6bcf\u5929\u65e9\u4e0a\u6211\u90fd\u4f1a\u542f\u52a8\u56de\u8d2d\uff0c\u7136\u540e\u8fd0\u884c\u6211\u7684\u5c0f\u7a0b\u5e8f\u3002\u5b83\u8bfb\u53d6\u6587\u4ef6\u3001\u8ba1\u7b97\u6570\u5b66\u5e76\u6253\u5370\u7ed3\u679c\u3002\n\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u5bf9\u8fd9\u4e2a\u7a0b\u5e8f\u505a\u4e86\u76f8\u5f53\u591a\u7684\u5c0f\u4fee\u6539\uff1b\u800c\u4e14\u5b83\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u589e\u957f\u3002\u5728\u8fdb\u884c\u8fd9\u4e9b\u8c03\u6574\u65f6\uff0c\u6211\u9009\u62e9\u4f7f\u7528\u4e0d\u540c\u7684\u89c4\u7a0b\uff1aREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u3002\nREPL\u9a71\u52a8\u7684\u8bbe\u8ba1\u5728Clojure\u5708\u5b50\u91cc\u975e\u5e38\u6d41\u884c\u3002\u5b83\u4e5f\u5f88\u6709\u8bf1\u60d1\u529b\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u60a8\u53ef\u4ee5\u5728REPL\u4e2d\u5c1d\u8bd5\u4e00\u4e9b\u5b9e\u9a8c\uff0c\u4ee5\u786e\u4fdd\u60a8\u6709\u6b63\u786e\u7684\u60f3\u6cd5\u3002\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u60f3\u6cd5\u5728\u4ee3\u7801\u4e2d\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u3002\u6700\u540e\uff0c\u901a\u8fc7\u5728REPL\u8c03\u7528\u8be5\u51fd\u6570\u6765\u6d4b\u8bd5\u8be5\u51fd\u6570\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4ee4\u4eba\u6ee1\u610f\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u5468\u671f\u65f6\u95f4-\u4ee3\u7801\u5b9e\u9a8c\u548cREPL\u6d4b\u8bd5\u4e4b\u95f4\u7684\u65f6\u95f4-\u51e0\u4e4e\u4e0eTDD\u4e00\u6837\u5c0f\u3002\u8fd9\u4f7f\u4eba\u4eec\u5bf9\u89e3\u51b3\u65b9\u6848\u5145\u6ee1\u4fe1\u5fc3\u3002\u5b83\u4f3c\u4e4e\u8fd8\u8282\u7701\u4e86\u6a21\u62df\u548c\u521b\u5efa\u5047\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u81f3\u5c11\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u53ef\u4ee5\u5728REPL\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u771f\u5b9e\u7684\u751f\u4ea7\u6570\u636e\u3002\u56e0\u6b64\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u6bd4TDD\u8d70\u5f97\u66f4\u5feb\u3002\n\u4f46\u540e\u6765\uff0c\u57284\u6708\u4e0b\u65ec\uff0c\u6211\u60f3\u505a\u4e00\u4e9b\u6bd4\u5f80\u5e38\u66f4\u590d\u6742\u7684\u4e8b\u60c5\u3002\u8fd9\u9700\u8981\u5bf9\u6211\u7684\u57fa\u672c\u7ed3\u6784\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\u3002\u7a81\u7136\u6211\u53d1\u73b0\u81ea\u5df1\u5145\u6ee1\u4e86\u6050\u60e7\u3002\u6211\u65e0\u6cd5\u786e\u4fdd\u8fd9\u4e9b\u8bbe\u8ba1\u66f4\u6539\u4e0d\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u7834\u574f\u7cfb\u7edf\u3002\u5982\u679c\u6211\u505a\u4e86\u8fd9\u4e9b\u66f4\u6539\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u68c0\u67e5\u6bcf\u4e00\u4e2a\u8f93\u51fa\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u90fd\u6ca1\u6709\u635f\u574f\u3002\u56e0\u6b64\uff0c\u6211\u63a8\u8fdf\u4e86\u6539\u9769\uff0c\u76f4\u5230\u6211\u53ef\u4ee5\u9f13\u8d77\u52c7\u6c14\uff0c\u628a\u9700\u8981\u7684\u4e13\u95e8\u65f6\u95f4\u653e\u5728\u4e00\u8fb9\u3002\n\u8fd9\u4e2a\u53d8\u5316\u5e76\u4e0d\u592a\u75db\u82e6\u3002Clojure\u662f\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u7684\u8bed\u8a00\u3002\u4f46\u9a8c\u8bc1\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u8fd9\u5bfc\u81f4\u6211\u5728\u90e8\u7f72\u7a0b\u5e8f\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef-4\u5929\u540e\u6211\u6355\u6349\u5230\u7684\u4e00\u4e2a\u5c0f\u9519\u8bef\u3002\u8fd9\u4e2a\u9519\u8bef\u8feb\u4f7f\u6211\u56de\u53bb\u66f4\u6b63\u6211\u751f\u6210\u7684\u6570\u636e\u548c\u56fe\u8868\u3002\n\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4fee\u6539\u8bbe\u8ba1\uff1f\u56e0\u4e3a\u6211\u6ca1\u6709\u5632\u7b11\u548c\u521b\u9020\u5047\u6570\u636e\u3002\u6211\u7684\u51fd\u6570\u53ea\u662f\u76f4\u63a5\u4ecerepo\u6587\u4ef6\u4e2d\u8bfb\u53d6\u3002\u6ca1\u6709\u529e\u6cd5\u7ed9\u4ed6\u4eec\u4f20\u9012\u5047\u6570\u636e\u3002\u6211\u9700\u8981\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u4e0e\u5632\u7b11\u548c\u4f2a\u9020\u6570\u636e\u6240\u9700\u7684\u8bbe\u8ba1\u66f4\u6539\u5b8c\u5168\u76f8\u540c\u3002\n\u5982\u679c\u6211\u575a\u6301TDD\u539f\u5219\uff0c\u6211\u5c31\u4f1a\u81ea\u52a8\u8fdb\u884c\u8bbe\u8ba1\u66f4\u6539\uff0c\u5c31\u4e0d\u4f1a\u9762\u4e34\u6050\u60e7\u3001\u5ef6\u8fdf\u548c\u9519\u8bef\u3002\n\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0cTDD\u4f1a\u5f3a\u8feb\u6211\u8fdb\u884c\u7684\u8bbe\u8ba1\u66f4\u6539\u6b63\u662f\u6211\u6700\u7ec8\u9700\u8981\u7684\u8bbe\u8ba1\u66f4\u6539\uff1f\u4e0d\u7528\u8c22\u3002\u4e3a\u4e86\u4f20\u9012\u5b64\u7acb\u7684\u8f93\u5165\u548c\u6536\u96c6\u5b64\u7acb\u7684\u8f93\u51fa\uff0cTDD\u5f3a\u52a0\u7ed9\u6211\u4eec\u7684\u89e3\u8026\u51e0\u4e4e\u603b\u662f\u5f3a\u8c03\u7075\u6d3b\u6027\u548c\u4fc3\u8fdb\u53d8\u5316\u7684\u8bbe\u8ba1\u3002\n\u6240\u4ee5\u6211\u5df2\u7ecf\u5438\u53d6\u4e86\u6559\u8bad\u3002REPL\u9a71\u52a8\u7684\u5f00\u53d1\u611f\u89c9\u6bd4TDD\u66f4\u5bb9\u6613\u3001\u66f4\u5feb\uff1b\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4e0b\u4e00\u6b21\uff0c\u6211\u53c8\u56de\u5230TDD\u4e86\u3002", "note_en": "If you follow me on facebook you know that I\u2019ve been publishing daily CoronaVirus statistics. I generate these statistics using the daily updates in the Johns Hopkins github  repository.\n At first I just hand copied the data into a spreadsheet. But that became tedious quite rapidly.\n Then, in late March, I wrote a little Clojure program to extract and process the data. Every morning I pull the repo, and then run my little program. It reads the files, does the math, and prints the results.\n  But over the last several weeks I\u2019ve made quite a few small modifications to the program; and it has grown substantially. In making these adaptations I chose to use a different discipline: REPL Driven Design.\n REPL Driven Design is quite popular in Clojure circles. It\u2019s also quite seductive. The idea is that you try some experiments in the REPL to make sure you\u2019ve got the right ideas. Then you write a function in your code using those idea. Finally, you test that function by invoking it at the REPL.\n It turns out that this is a very satisfying way to work. The cycle time \u2013 the time between a code experiment and the test at the REPL \u2013 is nearly as small as TDD. This breeds lots of confidence in the solution. It also seems to save the time needed to mock, and create fake data because, at least in my case, I could use real production data in my REPL tests. So, overall, it felt like I was moving faster than I would have with TDD.\n But then, in late April, I wanted to do something a little more complicated than usual. It required a design change to my basic structure. And suddenly I found myself full of fear. I had no way to ensure that those design changes wouldn\u2019t leave the system broken in some way. If I made those changes, I\u2019d have to examine every output to make sure that none of them had broken. So I postponed the change until I could muster the courage, and set aside the dedicated time it would require.\n The change was not too painful. Clojure is an easy language to work with. But the verfication was not trivial, which led me to deploy the program with a small bug \u2013 a bug I caught 4 days later. That bug forced me to go back and correct the data and graphs that I generated.\n Why did I need the design change? Because I was not mocking and creating fake data. My functions just read from the repo files directly. There was no way to pass them fake data. The design change I needed to make was precisely the same as the design change that I\u2019d have needed for mocking and fake data.\n Had I stuck with the TDD discipline I would have automatically made that design change, and I would not have faced the fear, the delay, and the error.\n Is it ironic that the very design change that TDD would have forced upon me was the design change I eventually needed? Not at all. The decoupling that TDD forces upon us in order to pass isolated inputs and gather isolated outputs is almost always the design that fascilitates flexibility and promotes change.\n So I\u2019ve learned my lesson. REPL driven development feels easier and faster than TDD; but it is not. Next time, it\u2019s back to TDD for me.", "posttime": "2020-05-28 07:02:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u9a71\u52a8,driven,tdd", "title": "REPL\u9a71\u52a8\u7684\u8bbe\u8ba1", "title_en": "REPL Driven Design", "transed": 1, "url": "http://blog.cleancoder.com/uncle-bob/2020/05/27/ReplDrivenDesign.html", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u9a71\u52a8", "driven", "tdd"]}, {"category": "", "categoryclass": "", "imagename": "9947574ad946f0dbe022efabe4ac64a4.jpg", "infoid": 1003997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u897f\u96c5\u56fe-\u5df2\u6545\u4fdd\u7f57\u00b7\u827e\u4f26(Paul Allen)\u521b\u7acb\u7684\u5730\u533a\u6587\u5316\u673a\u6784\uff0c\u5305\u62ec\u897f\u7eb3\u9a6c\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\uff0c\u5728\u74e6\u80af\u516c\u53f8(Vulcan Inc.)\u4e4b\u540e\u9762\u4e34\u6c38\u4e45\u5173\u95ed\u7684\u53ef\u80fd\u6027\u3002\u5468\u56db\u5ba3\u5e03\uff0c\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u706b\u795e\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u706b\u795e\u5236\u4f5c\u516c\u53f8\u3002\n\u5728\u74e6\u80af\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u8be5\u7ec4\u7ec7\u63d0\u5230\u4e86\u65b0\u51a0\u80ba\u708e\u5927\u6d41\u884c\u7684\u7834\u574f\u6027\u5f71\u54cd\uff0c\u4ee5\u53ca\u57282018\u5e74\u5fae\u8f6f\u8054\u5408\u521b\u59cb\u4eba\u827e\u4f26\u53bb\u4e16\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u8bc4\u4f30\u5176\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7684\u6f14\u53d8\u3002\n\u867d\u7136\u6301\u7eed\u7684\u5065\u5eb7\u5371\u673a\u5bfc\u81f4\u8bb8\u591a\u4f01\u4e1a\u5728\u5dde\u653f\u5e9c\u5f3a\u5236\u5173\u95ed\u671f\u95f4\u5173\u95ed\uff0c\u4f46\u74e6\u80af\u7684\u4e3e\u52a8\u8ba9\u4eba\u6000\u7591\u5b83\u7684\u4e00\u4e9b\u7ec4\u7ec7\u662f\u5426\u4f1a\u56de\u6765\u3002\n\u8fd9\u4e00\u4e3e\u63aa\u5f71\u54cd\u4e86\u5386\u53f2\u60a0\u4e45\u7684\u897f\u7eb3\u9a6c\u535a\u7269\u9986(Cineama)\uff0c\u5b83\u6b63\u5728\u8fdb\u884c\u56e0\u75ab\u60c5\u800c\u6682\u505c\u7684\u7ffb\u4fee\uff1b\u751f\u6d3b\u7535\u8111\uff1a\u8ba1\u7b97\u6280\u672f\u548c\u4e92\u52a8\u5c55\u54c1\u7684\u5386\u53f2\u5c55\u793a--\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4(Museum+Labs)\uff1b\u897f\u96c5\u56fe\u73b0\u5f53\u4ee3\u827a\u672f\u535a\u89c8\u4f1a\uff1b\u534e\u76db\u987f\u5dde\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u88c5\u7532\u535a\u7269\u9986(Fly Heritage And Tighting Armor Museum)\uff0c\u7b49\u7b49\u3002\n\u4e0e\u4e16\u754c\u5404\u5730\u7684\u8bb8\u591a\u4f01\u4e1a\u4e00\u6837\uff0c\u65b0\u51a0\u80ba\u708e\u5371\u673a\u7684\u7ecf\u6d4e\u5f71\u54cd\u8981\u6c42\u74e6\u80af\u8bc4\u4f30\u5176\u89c4\u6a21\u548c\u7ed3\u6784\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6548\u7387\u548c\u5f71\u54cd\uff0c\u5e76\u5728\u6211\u4eec\u7684\u8054\u5408\u521b\u59cb\u4eba\u53bb\u4e16\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u7ee7\u7eed\u53d1\u5c55\u3002\u6211\u4eec\u5df2\u7ecf\u505a\u51fa\u4e86\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u5173\u95ed\u4e24\u4e2a\u90e8\u95e8\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u8fc8\u5411\u4e00\u4e2a\u5c06\u56e0\u5927\u6d41\u884c\u800c\u4ee5\u65e0\u6cd5\u9884\u6d4b\u7684\u65b9\u5f0f\u6539\u53d8\u7684\u672a\u6765\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u524d\u5173\u95ed\u74e6\u80af\u827a\u672f+\u5a31\u4e50\u516c\u53f8\u548c\u74e6\u80af\u5236\u4f5c\u516c\u53f8\u3002\n\u8fd9\u573a\u5927\u6d41\u884c\u5bf9\u8bb8\u591a\u4f01\u4e1a\u548c\u975e\u8425\u5229\u7ec4\u7ec7\u90fd\u4ea7\u751f\u4e86\u6bc1\u706d\u6027\u7684\u5f71\u54cd\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u4f9d\u8d56\u516c\u5171\u96c6\u4f1a\u548c\u7279\u6b8a\u6d3b\u52a8\u4f5c\u4e3a\u5b9e\u73b0\u4f7f\u547d\u7684\u4e00\u90e8\u5206\u7684\u4f01\u4e1a\u3002\n\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u201c\u6d3b\u7740\u7684\u8ba1\u7b97\u673a\uff1a\u535a\u7269\u9986+\u5b9e\u9a8c\u5ba4\u201d\u5c06\u6682\u65f6\u5173\u95ed\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u91cd\u65b0\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u897f\u5185\u62c9\u9a6c\u7684\u7ffb\u4fee\u5df2\u7ecf\u6682\u505c\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\u4e5f\u5c06\u7ee7\u7eed\u5173\u95ed\u3002\u5df2\u7ecf\u53d6\u6d88\u4e862020\u5e74\u7684\u897f\u96c5\u56fe\u827a\u672f\u535a\u89c8\u4f1a\uff0c\u5728\u51b3\u5b9a\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u8ba1\u5212\u4e4b\u524d\uff0c\u5c06\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u770b\u770b\u5f62\u52bf\u548c\u827a\u672f\u4e16\u754c\u65e5\u5386\u7684\u53d1\u5c55\u60c5\u51b5\u3002\u540c\u6837\uff0c\u57c3\u5f17\u96f7\u7279\u7684\u98de\u884c\u9057\u4ea7\u548c\u6218\u6597\u76d4\u7532\u535a\u7269\u9986\u7684\u8463\u4e8b\u4f1a\u5df2\u7ecf\u51b3\u5b9a\uff0c\u5b83\u73b0\u5728\u4e5f\u5c06\u4fdd\u6301\u5173\u95ed\uff0c\u4ee5\u8bc4\u4f30\u662f\u5426\u3001\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u91cd\u65b0\u5f00\u653e\u3002\u6211\u4eec\u8fd8\u505a\u51fa\u4e86\u6c38\u4e45\u5173\u95ed\u6d1b\u6749\u77f6h\u4ff1\u4e50\u90e8\u7684\u6781\u5176\u8270\u96be\u7684\u51b3\u5b9a\uff0c\u5e76\u5f00\u59cb\u4e86\u5173\u95ed\u4f26\u6566\u539f\u6765\u7684h\u4ff1\u4e50\u90e8\u7684\u63d0\u6848\u7a0b\u5e8f\u3002\nVulcan Productions\u4eca\u5e74\u5c06\u7ee7\u7eed\u4e0e\u4ed6\u4eec\u503c\u5f97\u4fe1\u8d56\u7684\u5408\u4f5c\u4f19\u4f34\u548c\u8054\u5408\u5236\u7247\u4eba\u5408\u4f5c\uff0c\u9010\u6b65\u7ed3\u675f\u548c\u8fc7\u6e21\u9879\u76ee\uff0c\u5728\u6211\u4eec\u9010\u6b65\u9000\u51fa\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u6700\u5927\u52aa\u529b\u4e3a\u8fd9\u4e9b\u9879\u76ee\u7684\u6210\u529f\u505a\u597d\u51c6\u5907\u3002\n\u6211\u4eec\u4e3a\u6570\u5341\u4e07\u4eba\u53d7\u5230\u8fd9\u4e9b\u72ec\u7279\u7684\u673a\u6784\u548c\u7535\u5f71\u9879\u76ee\u7684\u6559\u80b2\u3001\u5a31\u4e50\u548c\u542f\u53d1\u800c\u611f\u5230\u81ea\u8c6a\uff0c\u5b83\u4eec\u7684\u5168\u7403\u5f71\u54cd\u4e0d\u53ef\u4f4e\u4f30\u3002Vulcan\u4ecd\u7136\u81f4\u529b\u4e8e\u4f7f\u4e16\u754c\u53d8\u5f97\u66f4\u7f8e\u597d\u7684\u4f7f\u547d\uff0c\u6211\u4eec\u611f\u8c22\u6bcf\u4e00\u4f4d\u56e2\u961f\u6210\u5458\u6bcf\u5929\u6240\u8868\u73b0\u51fa\u7684\u5949\u732e\u548c\u627f\u8bfa\u3002\u6b63\u662f\u901a\u8fc7\u4ed6\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u5bf9\u6211\u4eec\u4f7f\u547d\u7684\u70ed\u60c5\uff0c\u6211\u4eec\u591a\u5e74\u6765\u5728\u8fd9\u4e9b\u9879\u76ee\u4e2d\u53d6\u5f97\u4e86\u5982\u6b64\u591a\u7684\u6210\u5c31\u3002\n\u827e\u4f26\u7684\u53bb\u4e16\u5728\u897f\u96c5\u56fe\u7684\u6148\u5584\u827a\u672f\u754c\u7559\u4e0b\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7f3a\u53e3\uff0c\u56e0\u4e3a\u4ed6\u662f\u97f3\u4e50\u3001\u827a\u672f\u3001\u7535\u5f71\u548c\u79d1\u5e7b\u5c0f\u8bf4\u7684\u957f\u671f\u62e5\u62a4\u8005\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u70ed\u60c5\u82b1\u8d39\u4e86\u5927\u91cf\u8d22\u5bcc\u3002\n\u5728\u963f\u4f26\u59d0\u59d0\u4e54\u8fea\u00b7\u827e\u4f26\u7684\u9886\u5bfc\u4e0b\uff0c\u74e6\u80af\u7684\u672a\u6765\u4ee5\u53ca\u963f\u4f26\u8eab\u8fb9\u548c\u4eb2\u7231\u7684\u5927\u91cf\u8d44\u4ea7\uff0c\u5305\u62ec\u897f\u96c5\u56fe\u6d77\u9e70\u961f\u548c\u6ce2\u7279\u5170\u5f00\u62d3\u8005\u961f\uff0c\u90fd\u9762\u4e34\u7740\u4e0d\u786e\u5b9a\u7684\u51e0\u5e74\u3002\n\u706b\u795e\u6ca1\u6709\u5c06\u6d41\u884c\u6587\u5316\u535a\u7269\u9986(MoPOP)\u5217\u4e3a\u9762\u4e34\u4e0d\u786e\u5b9a\u6027\u7684\u7ec4\u7ec7\u4e4b\u4e00\uff0c\u8fd9\u662f\u827e\u4f26\u7684\u53e6\u4e00\u4ef6\u4f5c\u54c1\uff0c\u706b\u795e\u8868\u793a\uff0c\u97f3\u4e50\u548c\u79d1\u5e7b\u535a\u7269\u9986\u662f\u4e00\u4e2a\u72ec\u7acb\u7684501(C)3\u7ec4\u7ec7\uff0c\u4e0d\u53d7\u8fd9\u4e9b\u51b3\u5b9a\u7684\u5f71\u54cd\u3002\n\u827e\u4f26\u57281998\u5e74\u6536\u8d2d\u7684\u9ad8\u79d1\u6280\u7535\u5f71\u9662Cineama\u57282014\u5e74\u8fdb\u884c\u4e86\u4e00\u6b21\u91cd\u5927\u7684\u6700\u5148\u8fdb\u7684\u6280\u672f\u5347\u7ea7\uff0c\u5e76\u57282\u6708\u4efd\u5173\u95ed\uff0c\u8fdb\u884c\u4e86\u66f4\u591a\u7684\u6539\u53d8\u3002\u7531\u4e8e\u5f53\u65f6\u88ab\u5ba3\u4f20\u4e3a\u4e34\u65f6\u5173\u95ed\uff0c\u5728\u65b0\u51a0\u80ba\u708e\u4e4b\u524d\uff0c\u74e6\u80af\u89e3\u96c7\u4e86\u4e00\u6279\u5458\u5de5\u3002\nGeekWire Space&amp\uff1bScience-\u83b7\u5956\u822a\u7a7a\u822a\u5929\u548c\u79d1\u5b66\u7f16\u8f91\u827e\u4f26\u00b7\u535a\u4f0a\u5c14(Alan Boyle)\u6bcf\u5468\u5934\u6761", "note_en": "Seattle-area cultural institutions founded by the late Paul Allen, including the  Cinerama\u00a0movie theater and\u00a0 Living Computers Museum + Labs, face the possibility of permanent closure after Vulcan Inc. announced Thursday that it will wind down Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n In a statement from Vulcan, the organization cited the devastating impact of the COVID-19 pandemic as well as the need to continue to assess its evolution as an organization following the 2018 death of Allen, the Microsoft co-founder.\n While the ongoing health crisis has caused numerous businesses to close during state-mandated lockdowns, Vulcan\u2019s move called into question whether some of its organizations would ever return.\n  The move affects the historic Cinerama, which was undergoing renovations that had been halted by the pandemic; Living Computers: Museum + Labs, a historical showcase of computing technology as well as interactive exhibits;  Seattle Art Fair, a modern and contemporary art showcase in Seattle; the  Flying Heritage and Combat Armor Museum in Everett, Wash.; and more.\n  Like so many businesses worldwide, the economic impacts of the COVID-19 crisis require Vulcan to assess its size and structure to maximize effectiveness and impact, and continue to evolve as an organization following the death of our co-founder. We have made the extremely hard decision to close two divisions over the next several months as we move to a future that will be changed in untold ways by the pandemic. This means we are winding down both Vulcan Arts + Entertainment and Vulcan Productions by the end of the year.\n The pandemic has had devastating effects on many businesses and nonprofits alike, especially those that rely on public gatherings and special events as part of achieving their mission.\n For this reason, Living Computers: Museum + Labs will remain closed for now and spend the coming months reassessing if, how, and when to reopen. Cinerama\u2019s renovation was already paused given the pandemic, and will also stay closed for the foreseeable future. The Seattle Art Fair, which was already cancelled for 2020, will take some time to see how the situation and art world calendar evolve before deciding any further plans. And similarly, the board of the Flying Heritage and Combat Armor Museum in Everett has decided it will also remain closed for now to evaluate if, how, and when to reopen. We have also made the extremely difficult decision to permanently close h Club LA and are beginning the proposal process toward closing the original h Club in London.\n Vulcan Productions will continue to work with their trusted partners and co-producers to wind down and transition projects this year, doing their best to set these projects up for success as we make a gradual exit.\n We are proud of the hundreds of thousands of people that have been educated, entertained, and inspired by these unique institutions and film projects, and their global impact cannot be underestimated. Vulcan remains committed to its mission of making and leaving the world a better place, and we are grateful to each and every team member for the dedication and commitment they have exhibited on a daily basis. It is through their expertise and passion for our mission that we have accomplished so much in these projects throughout the years.\n Allen\u2019s death left a gaping hole in Seattle\u2019s philanthropic arts scene, as he was a longtime champion of music, art, film and science fiction, and spent large sums of his wealth in accordance with those passions.\n The future of Vulcan and the vast array of holdings near and dear to Allen, including the Seattle Seahawks and Portland Trail Blazers, have  faced an uncertain couple of years under the leadership of Allen\u2019s sister, Jody Allen.\n  The Museum of Pop Culture, or MoPOP, another Allen creation, was not listed by Vulcan among the organizations facing uncertainty, and Vulcan said the music and sci-fi museum is an independent 501(c)3 organization that is not impacted by the decisions.\n Cinerama, the high-tech movie theater that Allen purchased in 1998, underwent a major start-of-the-art technology upgrade in 2014 and was  closed for more changes in February. With what was billed as a temporary closure at the time, before COVID-19, Vulcan laid off a number of employees.\n      GeekWire Space &amp; Science - Weekly headlines from Alan Boyle, award-winning aerospace and science editor", "posttime": "2020-05-28 06:31:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5f71,\u7535\u5f71\u9662,seattle,\u5173\u95ed", "title": "\u897f\u96c5\u56fe\u7535\u5f71\u9662\u548c\u751f\u6d3b\u8ba1\u7b97\u673a\u535a\u7269\u9986\u7684\u672a\u6765\u60ac\u800c\u672a\u51b3", "title_en": "Future of Seattle\u2019s Cinerama and Living Computers Museum in Doubt", "transed": 1, "url": "https://www.geekwire.com/2020/paul-allens-vulcan-inc-shuttering-divisions-impact-cinerama-cultural-institutions/", "via": "", "real_tags": ["\u7535\u5f71", "\u7535\u5f71\u9662", "seattle", "\u5173\u95ed"]}, {"category": "", "categoryclass": "", "imagename": "78a4bff214844f9aaec3cd17cf4cd57e.jpg", "infoid": 1003996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u6b3e\u771f\u6b63\u4ee4\u4eba\u60ca\u53f9\u7684\u89c6\u9891\u6e38\u620f\u7ed3\u5408\u4e86\u5de7\u5999\u7684\u4ee3\u7801\u3001\u534e\u4e3d\u7684\u56fe\u5f62\u548c\u5de7\u5999\u7684\u52a8\u753b-\u5916\u52a0\u6570\u5343\u5c0f\u65f6\u7684\u8f9b\u52e4\u5de5\u4f5c\u3002\n\u56fd\u9645\u8db3\u8054(FIFA)\u3001\u72c2\u4eba(Madden)\u548c\u5176\u4ed6\u6d41\u884c\u6e38\u620f\u80cc\u540e\u7684\u827a\u7535\u516c\u53f8(Electronic Arts)\u7684\u7814\u7a76\u4eba\u5458\u6b63\u5728\u6d4b\u8bd5\u4eba\u5de5\u667a\u80fd\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u4ee5\u6b64\u6765\u52a0\u5feb\u5f00\u53d1\u8fdb\u7a0b\uff0c\u4f7f\u6e38\u620f\u66f4\u903c\u771f\u3002\u4e00\u4e2a\u5de7\u5999\u7684\u8f6c\u6298\u662f\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u5229\u7528\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u901a\u8fc7\u73a9\u4e00\u4e9b\u6700\u65e9\u7684\u6e38\u620f\u673a\u89c6\u9891\u6e38\u620f\u6765\u8bc1\u660e\u81ea\u5df1\u3002\n\u6765\u81eaEA\u548c\u6e29\u54e5\u534e\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u4e00\u4e2a\u56e2\u961f\u6b63\u5728\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u5f3a\u5316\u5b66\u4e60\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u5927\u81f4\u4e0a\u662f\u53d7\u5230\u52a8\u7269\u5bf9\u6b63\u9762\u548c\u8d1f\u9762\u53cd\u9988\u505a\u51fa\u53cd\u5e94\u7684\u5b66\u4e60\u65b9\u5f0f\u7684\u542f\u53d1\uff0c\u4ee5\u81ea\u52a8\u5236\u4f5c\u7c7b\u4eba\u89d2\u8272\u7684\u52a8\u753b\u3002\u201c\u7ed3\u679c\u975e\u5e38\u975e\u5e38\u6709\u5e0c\u671b\uff0c\u201d\u827a\u7535\u9ad8\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6cd5\u6bd4\u5965\u00b7\u6d25\u8bfa(Fabio Zinno)\u8bf4\u3002\n\u4f20\u7edf\u4e0a\uff0c\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u89d2\u8272\u548c\u4ed6\u4eec\u7684\u52a8\u4f5c\u90fd\u662f\u624b\u5de5\u5236\u4f5c\u7684\u3002\u56fd\u9645\u8db3\u8054(FIFA)\u7b49\u4f53\u80b2\u6e38\u620f\u5229\u7528\u52a8\u4f5c\u6355\u6349(Motion Capture)\uff0c\u8fd9\u662f\u4e00\u79cd\u6d89\u53ca\u8ddf\u8e2a\u771f\u4eba\u7684\u6280\u672f\uff0c\u901a\u5e38\u4f7f\u7528\u771f\u4eba\u8138\u4e0a\u6216\u8eab\u4f53\u4e0a\u7684\u6807\u8bb0\u6765\u5448\u73b0\u66f4\u903c\u771f\u7684\u4eba\u7c7b\u89d2\u8272\u52a8\u4f5c\u3002\u4f46\u53ef\u80fd\u6027\u53d7\u5230\u5df2\u7ecf\u5f55\u5236\u7684\u52a8\u4f5c\u7684\u9650\u5236\uff0c\u4ecd\u7136\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u4e3a\u89d2\u8272\u8bbe\u7f6e\u52a8\u753b\u3002\n\u4f8b\u5982\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u52a8\u753b\u8fc7\u7a0b\u4ee5\u53ca\u6e38\u620f\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\u5176\u4ed6\u5143\u7d20\uff0c\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u6e38\u620f\u516c\u53f8\u8282\u7701\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u540c\u65f6\u4f7f\u6e38\u620f\u66f4\u52a0\u903c\u771f\u548c\u9ad8\u6548\uff0c\u8fd9\u6837\u4e00\u6b3e\u590d\u6742\u7684\u6e38\u620f\u5c31\u53ef\u4ee5\u5728\u667a\u80fd\u624b\u673a\u4e0a\u8fd0\u884c\u3002\n\u8fd1\u5e74\u6765\uff0c\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u8ba9\u8ba1\u7b97\u673a\u5728\u6ca1\u6709\u4efb\u4f55\u6307\u5bfc\u7684\u60c5\u51b5\u4e0b\u5b66\u4f1a\u73a9\u590d\u6742\u7684\u6e38\u620f\u548c\u89e3\u51b3\u4ee4\u4eba\u70e6\u607c\u7684\u95ee\u9898\u800c\u6fc0\u8d77\u4e86\u4eba\u4eec\u7684\u5174\u594b\u30022013\u5e74\uff0c\u540e\u6765\u88ab\u8c37\u6b4c(Google)\u6536\u8d2d\u7684\u82f1\u56fd\u516c\u53f8DeepMind\u7684\u7814\u7a76\u4eba\u5458\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u521b\u5efa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4f1a\u4e86\u5c06\u51e0\u6b3e\u96c5\u8fbe\u5229(Atari)\u89c6\u9891\u6e38\u620f\u73a9\u5230\u8d85\u4eba\u7684\u6c34\u5e73\u3002\u8be5\u7a0b\u5e8f\u901a\u8fc7\u5b9e\u9a8c\u4ee5\u53ca\u50cf\u7d20\u548c\u6e38\u620f\u5206\u6570\u7684\u53cd\u9988\u5b66\u4f1a\u4e86\u73a9\u6e38\u620f\u3002DeepMind\u540e\u6765\u4f7f\u7528\u540c\u6837\u7684\u6280\u672f\u6784\u5efa\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u638c\u63e1\u4e86\u6781\u5176\u590d\u6742\u548c\u5fae\u5999\u7684\u68cb\u7c7b\u6e38\u620f\u56f4\u68cb\u7b49\u3002\n\u57287\u6708\u4efd\u5c06\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4f1a\u8baeSiggraph 2020\u4e0a\u5c55\u793a\u7684\u5de5\u4f5c\u4e2d\uff0cEA-UBC\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u521b\u9020\u51fa\u4e00\u79cd\u53ef\u63a7\u7684\u8db3\u7403\u8fd0\u52a8\u5458\uff0c\u65e0\u9700\u4f7f\u7528\u4f20\u7edf\u7684\u7f16\u7801\u6216\u52a8\u753b\u5c31\u53ef\u4ee5\u771f\u5b9e\u5730\u79fb\u52a8\u3002\n\u4e3a\u4e86\u5236\u4f5c\u8fd9\u4e2a\u89d2\u8272\uff0c\u7814\u7a76\u5c0f\u7ec4\u9996\u5148\u8bad\u7ec3\u4e86\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u4ee5\u8bc6\u522b\u548c\u590d\u5236\u52a8\u4f5c\u6355\u6349\u6570\u636e\u4e2d\u7684\u7edf\u8ba1\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u8bad\u7ec3\u53e6\u4e00\u4e2a\u6a21\u578b\uff0c\u4ee5\u518d\u73b0\u5177\u6709\u7279\u5b9a\u76ee\u6807\u7684\u771f\u5b9e\u8fd0\u52a8\uff0c\u4f8b\u5982\u5728\u6e38\u620f\u4e2d\u5411\u7403\u8dd1\u53bb\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4f1a\u751f\u6210\u539f\u59cb\u8fd0\u52a8\u6355\u6349\u6570\u636e\u4e2d\u627e\u4e0d\u5230\u7684\u52a8\u753b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u7a0b\u5e8f\u5b66\u4e60\u8db3\u7403\u8fd0\u52a8\u5458\u5982\u4f55\u79fb\u52a8\uff0c\u7136\u540e\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u89d2\u8272\u6162\u8dd1\u3001\u51b2\u523a\u548c\u6446\u52a8\u7684\u52a8\u753b\u3002\n\u7ebd\u7ea6\u5927\u5b66(NYU)\u6559\u6388\u6731\u5229\u5b89\u00b7\u6258\u683c\u5229\u5384\u65af(Julian Togelius)\u8bf4\uff1a\u201c\u6211\u7edd\u5bf9\u53ef\u4ee5\u770b\u5230\u8fd9\u9879\u6280\u672f\u5728\u4e0d\u540c\u65b9\u9762\u90fd\u5f88\u6709\u7528\u3002\u201d\u4ed6\u4e5f\u662f\u4e00\u5bb6\u4e3a\u6e38\u620f\u5236\u9020\u4eba\u5de5\u667a\u80fd\u5de5\u5177\u7684\u516c\u53f8a Modl.ai\u7684\u8054\u5408\u521b\u59cb\u4eba\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u5f3a\u5316\u5b66\u4e60\u9879\u76ee\u662f\u81ea\u52a8\u5316\u6216\u201c\u7a0b\u5e8f\u751f\u6210\u201d\u65b9\u6cd5\u6d6a\u6f6e\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u6539\u53d8\u6e38\u620f\u5185\u5bb9\u7684\u521b\u5efa\u65b9\u5f0f\u3002\n\u6258\u683c\u5229\u5384\u65af\u8bf4\uff1a\u201c\u7a0b\u5e8f\u5316\u52a8\u753b\u5c06\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u201d\u201c\u5b83\u57fa\u672c\u4e0a\u81ea\u52a8\u5316\u4e86\u6784\u5efa\u6e38\u620f\u5185\u5bb9\u7684\u5927\u91cf\u5de5\u4f5c\u3002\u201d\n\u968f\u7740\u6e38\u620f\u673a\u3001\u4e2a\u4eba\u7535\u8111\u548c\u667a\u80fd\u624b\u673a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u6e38\u620f\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\u548c\u590d\u6742\uff0c\u9700\u8981\u6e38\u620f\u516c\u53f8\u8fdb\u884c\u66f4\u5927\u7684\u6295\u8d44\u3002\u73b0\u6709\u7684\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u52a8\u753b\u5e08\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u5b83\u4eec\u3002\u5c31\u50cf\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u5728\u8f93\u5165\u8db3\u591f\u7684\u6570\u636e\u65f6\u70ae\u5236\u51fa\u7167\u7247\u7ea7\u7684\u9762\u5b54\u548c\u573a\u666f\u4e00\u6837\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u81ea\u52a8\u521b\u5efa\u65b0\u7684\u89d2\u8272\u548c\u573a\u666f\u3002\n\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u4e3a\u5176\u4ed6\u6d41\u6d3e\u751f\u6210\u5185\u5bb9\uff0c\u5305\u62ec\u52a8\u4f5c\u548c\u89d2\u8272\u626e\u6f14\u6e38\u620f\u3002\u4e00\u4e9b\u6e38\u620f\u516c\u53f8\u6b63\u5728\u8bd5\u9a8c\u7a0b\u5e8f\u751f\u6210\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4f7f\u6e38\u620f\u66f4\u5177\u6269\u5c55\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u88ab\u7528\u6765\u751f\u6210\u65b0\u7684\u4e16\u754c\uff0c\u4f9b\u73a9\u5bb6\u57282016\u5e74\u53d1\u5e03\u7684\u592a\u7a7a\u751f\u5b58\u6e38\u620f\u201c\u65e0\u4eba\u7684\u5929\u7a7a\u201d\u4e2d\u63a2\u7d22\u3002Togelius\u8bf4\uff0c\u4eba\u5de5\u667a\u80fd\u4e5f\u6b63\u5728\u6210\u4e3a\u4e00\u79cd\u4f7f\u7528\u4eba\u9020\u73a9\u5bb6\u6d4b\u8bd5\u6e38\u620f\u548c\u53d1\u73b0\u9519\u8bef\u7684\u5f3a\u5927\u65b9\u5f0f\u3002\n\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u4eba\u5de5\u667a\u80fd\u6709\u53ef\u80fd\u4ece\u5934\u5f00\u59cb\u751f\u6210\u7b80\u5355\u7684\u89c6\u9891\u6e38\u620f\u3002\u5468\u4e94\uff0c\u6765\u81ea\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u548c\u5236\u9020\u6e38\u620f\u82af\u7247\u7684\u82f1\u4f1f\u8fbe(Nvidia)\u7684\u7814\u7a76\u4eba\u5458\u62ab\u9732\u4e86\u4e00\u6b3e\u4eba\u5de5\u667a\u80fd\u5f15\u64ce\uff0c\u5b83\u5b66\u4f1a\u4e86\u5982\u4f55\u5728\u6ca1\u6709\u4efb\u4f55\u539f\u59cb\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u91cd\u73b0\u7ecf\u5178\u6e38\u620f\u5403\u8c46\u4eba(Pac-Man)\u3002\n\u5728\u8857\u673a\u6e38\u620f\u53d1\u5e0340\u5468\u5e74\u4e4b\u9645\uff0c\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u4e00\u4e2a\u540d\u4e3aGameGan\u7684\u7a0b\u5e8f\u5982\u4f55\u901a\u8fc7\u89c2\u5bdf\u5c4f\u5e55\u5e76\u76d1\u63a75\u4e07\u4e2a\u5403\u8c46\u4eba\u6e38\u620f\u671f\u95f4\u4f7f\u7528\u7684\u63a7\u4ef6\u6765\u91cd\u73b0\u7b80\u5355\u7684\u6e38\u620f\u3002GameGan\u968f\u540e\u751f\u6210\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u5305\u62ec\u65b0\u7684\u573a\u666f\u548c\u5e73\u53f0\u3002\nPac-Man\u80cc\u540e\u7684Namco\u516c\u53f8\u768410\u540d\u5de5\u7a0b\u5e08\u82b1\u4e8617\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u8bbe\u8ba1\u3001\u7f16\u7a0b\u548c\u6d4b\u8bd5\u6700\u521d\u7684\u6e38\u620f\u3002\u5982\u679c\u63d0\u4f9b\u8db3\u591f\u7684\u6570\u636e\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u6700\u7ec8\u53ef\u80fd\u4f1a\u521b\u9020\u51fa\u4e00\u6b3e\u5f15\u4eba\u6ce8\u76ee\u7684\u65b0\u6e38\u620f--\u201c\u6124\u6012\u7684\u5c0f\u9e1f\u201d\u6216\u201c\u7cd6\u679c\u7c89\u788e\u4f20\u5947\u201d\uff0c\u6ca1\u6709\u4eba\u9700\u8981\u7f16\u5199\u4ee3\u7801\u3002\n\u591a\u4f26\u591a\u5927\u5b66(University Of Toronto)\u52a9\u7406\u6559\u6388\u3001\u82f1\u4f1f\u8fbe(Nvidia)\u4eba\u5de5\u667a\u80fd\u4e3b\u4efb\u6851\u8d3e\u00b7\u83f2\u5fb7\u52d2(Sanja Fidler)\u8868\u793a\uff1a\u201c\u4f60\u53ef\u4ee5\u60f3\u8c61\u5728\u8bb8\u591a\u6e38\u620f\u4e0a\u8bad\u7ec3\u5b83-\u6570\u5343\u79cd\u4e0d\u540c\u7684\u6e38\u620f\u3002\u201d\u201c\u4eba\u4eec\u4f1a\u5e0c\u671b\uff0c\u73b0\u5728\u4f60\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u4e0d\u540c\u6e38\u620f\u4e2d\u7684\u4e0d\u540c\u4e1c\u897f\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u63d2\u5165\u5176\u4e2d\u3002\u201d\nEA\u7684Zinno\u8bf4\uff0c\u6e38\u620f\u5f00\u53d1\u8005\u53ef\u80fd\u9700\u8981\u51e0\u5e74\u65f6\u95f4\u624d\u80fd\u4f8b\u884c\u516c\u4e8b\u5730\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\uff0c\u90e8\u5206\u539f\u56e0\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5f88\u96be\u7406\u89e3\u548c\u8c03\u8bd5\u3002\u4ed6\u6307\u51fa\uff0c\u8bc1\u636e\u5c06\u5728\u7531\u6b64\u4ea7\u751f\u7684\u6e38\u620f\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e2d\u5f97\u5230\u8bc1\u660e\uff1a\u201c\u6e38\u620f\u5f00\u53d1\u5c31\u662f\u5b83\u81ea\u5df1\u7684\u91ce\u517d\u3002\u4e0d\u7ba1\u4f60\u7684\u52a8\u753b\u6280\u672f\u6709\u591a\u4e0d\u53ef\u601d\u8bae\uff0c\u5173\u952e\u662f\uff0c\u73a9\u8d77\u6765\u597d\u73a9\u5417\uff1f\u201c\u3002\n\u53c2\u4e0eEA\u9879\u76ee\u7684UBC\u6559\u6388Michiel van de Panne\u8bf4\uff0c\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u5728\u7269\u7406\u73b0\u5b9e\u73af\u5883\u4e2d\u8bad\u7ec3\u975e\u4eba\u7c7b\u7684\u89c6\u9891\u6e38\u620f\u89d2\u8272\u3002\u4f46\u4ed6\u627f\u8ba4\uff0c\u8bad\u7ec3\u7b97\u6cd5\u4ece\u5934\u5f00\u59cb\u5236\u4f5c\u5168\u65b0\u7684\u52a8\u753b\u5c06\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5f88\u96be\u91cf\u5316\u73a9\u5bb6\u4f1a\u53d1\u73b0\u4ec0\u4e48\u662f\u6709\u5438\u5f15\u529b\u7684\u3002Van de Panne\u8bf4\uff1a\u201c\u6211\u5728\u7b49\u7740\u770b\u771f\u6b63\u5145\u5206\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6765\u751f\u6210\u52a8\u753b\u7684\u4e1c\u897f\u3002\u201d\u201c\u4f46\u5b83\u80af\u5b9a\u4f1a\u6765\u7684\u3002\u201d\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u60f3\u8981\u6700\u597d\u7684\u5065\u5eb7\u5de5\u5177\u5417\uff1f\u770b\u770b\u6211\u4eecGear\u56e2\u961f\u6311\u9009\u7684\u6700\u597d\u7684\u5065\u8eab\u8ddf\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907(\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50)\u548c\u6700\u597d\u7684\u8033\u673a", "note_en": "A truly kick-ass videogame combines clever code, gorgeous graphics, and artful animation\u2014plus thousands of hours of hard work.\n Researchers at  Electronic Arts\u2014the company behind   FIFA,   Madden, and other popular games\u2014are testing recent advances in  artificial intelligence as a way to speed the development process and make games more lifelike. And in a neat twist, the researchers are harnessing an AI technique that proved itself by playing some of the earliest console videogames.\n A team from EA and the University of British Columbia in Vancouver is using a technique called  reinforcement learning, which is loosely inspired by the way animals learn in response to positive and negative feedback, to automatically animate humanoid characters. \u201cThe results are very, very promising,\u201d says Fabio Zinno, a senior software engineer at Electronic Arts.\n  Traditionally, characters in videogames and their actions are crafted manually. Sports games, such as  FIFA, make use of  motion capture, a technique that involves tracking a real person often using markers on their face or body, to render more lifelike actions in human characters. But the possibilities are limited by the actions that have been recorded, and code still needs to be written to animate the character.\n By automating the animation process, as well as other elements of game design and development, AI could save game companies millions of dollars while making games more realistic and efficient, so that a complex game can run on a smartphone, for example.\n  Reinforcement learning has sparked excitement in recent years by letting computers learn to play complex games and solve vexing problems without any instruction. In 2013, researchers at  DeepMind, a UK company later acquired by Google, used reinforcement learning to create a computer program that  learned to play several Atari videogames to a superhuman level. The program learned to play through experimentation and feedback from the pixels and the game score. DeepMind later  employed the same technique to build a program that  mastered the fiendishly complex and subtle board game Go, among other things.\n  In work to be presented in July at  Siggraph 2020, a computer graphics conference, the EA-UBC researchers show that reinforcement learning can  create a controllable soccer player that moves realistically without using conventional coding or animation.\n  To make the character, the team first trained a  machine-learning model to identify and reproduce statistical patterns in motion-capture data. They then used reinforcement learning to train another model to reproduce realistic motion with a specific objective, such as running toward a ball in the game. Crucially, this produces animations not found in the original motion-capture data. In other words, the program learns how a soccer player moves, and can then animate the character jogging, sprinting, and shimmying by itself.\n \u201cI can definitely see this technology being useful in different ways,\u201d says  Julian Togelius, a professor at NYU and the cofounder of a  Modl.ai, a company that makes AI tools for games. He adds that the reinforcement learning project is part of a wave of automated or \u201cprocedural generation\u201d methods that will transform how game content is created.\n \u201cProcedural animation will be a huge thing,\u201d Togelius says. \u201cIt basically automates a lot of the work that goes into building game content.\u201d\n As consoles, PCs, and smartphones become ever-more powerful, games will become increasingly sophisticated and complex, requiring greater investment from game companies. Existing tools can help make designers and animators more efficient, but they\u2019re still needed at every step. Just as AI can concoct photo-realistic  faces and  scenes when fed enough data, algorithms may automate the creation of new characters and scenes.\n AI could generate content for other genres, including action and role-playing games. Some game companies are experimenting with procedural generation as a way to make games more expansive. A simple method is used to generate new worlds for players to explore in   No Man\u2019s Sky, a space-based survival game released in 2016. Togelius says AI is also emerging as a powerful way to test games and find bugs, using artificial players.\n  At the other end of the spectrum, there\u2019s potential for AI to generate simple videogames from scratch. On Friday, researchers from the University of Toronto, MIT, and  Nvidia, which makes gaming chips, revealed an AI engine that learned how to recreate the classic game  Pac-Man without any of the original code.\n  On the  40th anniversary of the arcade game\u2019s release, the researchers showed how a program called  GameGAN can recreate simple games by watching the screen and monitoring the controls used during 50,000 games of  Pac-Man. GameGAN then generated its own version, complete with new scenarios and platforms.\n  It took 10 engineers at Namco, the company behind  Pac-Man, 17 months to design, program, and test the original game. If fed enough data, such an algorithm might eventually fashion a compelling new game\u2014an  Angry Birds or  Candy Crush that no one needed to code.\n \u201cYou can imagine training it on many games\u2014thousands of different games,\u201d says  Sanja Fidler, an assistant professor at the University of Toronto and director of AI at Nvidia. \u201cAnd one would hope that now you can somehow mash up and interpolate different things from different games.\u201d\n Zinno of EA says it may be several years before game developers routinely use AI, partly because machine-learning algorithms are tricky to understand and debug. The proof will be in the popularity of the resulting games, he notes: \u201cGame development is its own beast. No matter how incredible your animation technology, the point is, is it fun to play?\u201d\n Michiel van de Panne, a professor at UBC who is involved in the EA project, says the next step is to use reinforcement learning to train nonhuman videogame characters inside physically realistic environments. But he acknowledges it will be more difficult to train algorithms to come up with entirely new animation from scratch, because it is difficult to quantify what players will find appealing. \u201cI\u2019m waiting to see something that really takes full advantage of AI for the generation of animation,\u201d van de Panne says. \u201cBut it will come for sure.\u201d\n   \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2020-05-28 06:16:42", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f00\u53d1,\u6e38\u620f,\u4eba\u5de5\u667a\u80fd,\u5236\u4f5c,inject", "title": "\u6e38\u620f\u5236\u4f5c\u4eba\u6ce8\u5165\u4eba\u5de5\u667a\u80fd\u4ee5\u5f00\u53d1\u66f4\u903c\u771f\u7684\u89d2\u8272", "title_en": "Gamemakers Inject AI To Develop More Lifelike Characters", "transed": 1, "url": "https://www.wired.com/story/game-makers-inject-ai-develop-more-lifelike-characters/", "via": "", "real_tags": ["\u5f00\u53d1", "\u6e38\u620f", "\u4eba\u5de5\u667a\u80fd", "\u5236\u4f5c", "inject"]}, {"category": "", "categoryclass": "", "imagename": "ecd2506e767922c9713a626ebdc9df18.png", "infoid": 1003994, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90e8\u5206Word\u529f\u80fd\u7121\u6cd5\u65bc\u201c\u8c37\u6b4c\u6587\u4ef6\u201d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664.", "note_en": "\u90e8\u5206 Word \u529f\u80fd\u7121\u6cd5\u65bc\u300cGoogle \u6587\u4ef6\u300d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664\u3002", "posttime": "2020-05-28 05:59:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "app,\u81ea\u52a9\u5f0f,bootstrapped,\u8b8a\u66f4", "title": "\u6211\u8981\u5356\u6211\u7684\u81ea\u52a9\u5f0fSaaS\u9879\u76ee\u3002\u76ee\u524d\u7684MRR\u4e3a2500\u7f8e\u5143\uff0c\u800c\u4e14\u8fd8\u5728\u4e0d\u65ad\u589e\u957f", "title_en": "I'm selling my bootstrapped SaaS project. Currently doing $2500 MRR and growing", "transed": 1, "url": "https://docs.google.com/document/d/1BwBZUhgTLJTIXPV6GhC4ihBodlmjdJ0lH_vW9xoKxKA/edit?usp=sharing", "via": "", "real_tags": ["app", "\u81ea\u52a9\u5f0f", "\u8b8a\u66f4"]}, {"category": "", "categoryclass": "", "imagename": "0033f61c541dbe022aa163d2689519e4.png", "infoid": 1003993, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u521d\u7ea7\u7cfb\u7edf\u7ba1\u7406\u5458(\u6216\u5fc3\u70e6\u610f\u4e71\u7684\u4eba)\u6765\u8bf4\uff0c\ud83d\ude06\ud83d\ude23", "note_en": "For the junior sysadmins (or the distracted ones) \ud83d\ude06\ud83d\ude23", "posttime": "2020-05-28 05:59:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7cfb\u7edf\u7ba1\u7406\u5458,memes,\u5fc3\u70e6\u610f\u4e71", "title": "\u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u8ff7\u56e0", "title_en": "Memes for Sysadmins", "transed": 1, "url": "https://sysadminmemes.com/", "via": "", "real_tags": ["\u7cfb\u7edf\u7ba1\u7406\u5458", "memes", "\u5fc3\u70e6\u610f\u4e71"]}, {"category": "", "categoryclass": "", "imagename": "59f5d937570b5b372ac725cea83cafe2.jpg", "infoid": 1003992, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SpaceX\u548cOneWeb\u5df2\u7ecf\u8bf7\u6c42\u7f8e\u56fd\u5141\u8bb8\u5411\u8fd1\u5730\u8f68\u9053\u53d1\u5c04\u6570\u4e07\u9897\u989d\u5916\u7684\u536b\u661f\u3002\n\u9664\u4e86\u5df2\u7ecf\u83b7\u5f97\u8bb8\u53ef\u7684\u8fd112000\u9897\u536b\u661f\u4e4b\u5916\uff0cSpaceX\u8fd8\u7533\u8bf7\u53d1\u5c043\u4e07\u9897\u536b\u661f\uff0c\u8fd9\u4e0eSpaceX\u4e4b\u524d\u5ba3\u5e03\u7684Starlink\u8ba1\u5212\u662f\u4e00\u81f4\u7684\u3002\nOneWeb\u7533\u8bf7\u53d1\u5c04\u8fd14.8\u4e07\u9897\u536b\u661f\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u8fd9\u5bb6\u536b\u661f\u5bbd\u5e26\u516c\u53f8\u57283\u6708\u4efd\u7533\u8bf7\u7834\u4ea7\u3002\u5728\u76ee\u524d\u7684\u7ed3\u6784\u4e0b\uff0cOneWeb\u4e0d\u592a\u53ef\u80fd\u53d1\u5c04\u5f88\u5927\u6bd4\u4f8b\u7684\u536b\u661f\uff0c\u56e0\u4e3a\u636e\u62a5\u9053\uff0c\u8be5\u516c\u53f8\u5728\u7533\u8bf7\u7834\u4ea7\u65f6\u88c1\u51cf\u4e86\u5927\u90e8\u5206\u5458\u5de5\uff0c\u5e76\u8868\u793a\u6253\u7b97\u5229\u7528\u7834\u4ea7\u7a0b\u5e8f\u51fa\u552e\u4e1a\u52a1\uff0c\u4ee5\u5b9e\u73b0\u516c\u53f8\u4ef7\u503c\u7684\u6700\u5927\u5316\u3002\u83b7\u5f97\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u7684\u6279\u51c6\uff0c\u53d1\u5c04\u66f4\u591a\u536b\u661f\u53ef\u80fd\u4f1a\u63d0\u9ad8OneWeb\u7684\u8d44\u4ea7\u4ef7\u503c\uff0c\u5e76\u4e3a\u6536\u8d2d\u8be5\u516c\u53f8\u7684\u4eba\u63d0\u4f9b\u66f4\u591a\u9009\u62e9\u3002\nOneWeb\u5728\u5176FCC\u7533\u8bf7\u4e2d\u8868\u793a\uff0cOneWeb\u5df2\u7ecf\u83b7\u5f97\u503a\u52a1\u4eba\u5360\u6709\u878d\u8d44\uff0c\u9884\u8ba1\u5f88\u5feb\u5c31\u4f1a\u9000\u51fa\u7834\u4ea7\u6cd5\u7b2c11\u7ae0\u7684\u7a0b\u5e8f\uff0c\u4f7fOneWeb\u7684\u6218\u7565\u8d44\u4ea7\u4ef7\u503c\u6700\u5927\u5316\uff0c\u5e76\u786e\u4fdd\u5176\u5229\u76ca\u76f8\u5173\u8005\u548c\u5ba2\u6237\u6709\u4e00\u6761\u53ef\u884c\u7684\u524d\u8fdb\u9053\u8def\u3002\n\u7531\u4e8eFCC\u7684\u6700\u540e\u671f\u9650\uff0cSpaceX\u548cOneWeb\u7684\u7533\u8bf7\u662f\u6628\u5929\u63d0\u4ea4\u7684\u3002\u5176\u4ed6\u4f9b\u5e94\u5546\uff0c\u5982Telesat(1671\u9897\u536b\u661f)\u3001\u5f00\u666e\u52d2(360\u9897\u536b\u661f)\u548cViasat(288\u9897\u536b\u661f)\u63d0\u4ea4\u4e86\u8f83\u5c0f\u7684\u4f4e\u5730\u7403\u8f68\u9053\u661f\u5ea7\u7533\u8bf7\u3002Mangata Networks\u63d0\u4ea4\u4e86791\u9897\u4e2d\u5730\u7403\u8f68\u9053\u536b\u661f\u7684\u7533\u8bf7\u3002\n\u91cd\u8981\u7684\u662f\u8981\u660e\u767d\uff0cOneWeb\u7533\u8bf7\u8fd9\u4e48\u591a\u536b\u661f\u7684\u539f\u56e0\u662f\uff0c\u8fd9\u5c06\u4f7f\u5176\u4ed6\u52aa\u529b\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u7279\u522b\u662f(\u5bf9\u4e9a\u9a6c\u900a\u7684\u5b50\u516c\u53f8)Kuiper\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u63d0\u9ad8OneWeb\u7684\u7b2c\u4e00\u4ee3\u8bb8\u53ef\u8bc1\u7684\u4ef7\u503c\u3002\u536b\u661f\u884c\u4e1a\u987e\u95ee\u8482\u59c6\u00b7\u6cd5\u52d2(Tim Farrar)\u5728Twitter\u4e0a\u5199\u9053\uff0c\u8fd9\u4e0eSpaceX\u63d0\u51fa\u768430K\u536b\u661f\u63d0\u6848\u7684\u7406\u7531\u7c7b\u4f3c\u3002\nFCC\u89c4\u5b9a\uff0c\u9664\u975e\u83b7\u5f97\u8c41\u514d\uff0c\u5426\u5219\u536b\u661f\u8bb8\u53ef\u8bc1\u6301\u6709\u4eba\u53ef\u4ee5\u57286\u5e74\u5185\u53d1\u5c0450%\u7684\u8bb8\u53ef\u536b\u661f\uff0c\u5e76\u57289\u5e74\u5185\u53d1\u5c04\u6240\u6709\u536b\u661f\u3002\nOneWeb\u5df2\u7ecf\u83b7\u5f97\u4e86\u53d1\u5c04720\u9897\u536b\u661f\u7684\u8bb8\u53ef\uff0c\u5176\u7533\u8bf7\u5bfb\u6c42\u753147,844\u9897\u536b\u661f\u7ec4\u6210\u7684\u7b2c\u4e8c\u9636\u6bb5\u7684\u6388\u6743\u3002OneWeb\u6ca1\u6709\u8981\u6c42\u6539\u53d8\u51761200\u516c\u91cc\u7684\u8f68\u9053\u9ad8\u5ea6\u3002\u8be5\u516c\u53f8\u5728\u672c\u6587\u4ef6\u4e2d\u5411FCC\u63d0\u4f9b\u4e86\u6709\u5173\u5176\u8ba1\u5212\u7684\u66f4\u591a\u6280\u672f\u7ec6\u8282\u3002\nOneWeb\u5199\u9053\uff0c\u7531\u4e8e\u8054\u5408\u8f68\u9053\u7684\u4f7f\u7528\uff0cOneWeb\u536b\u661f\u57fa\u672c\u4e0a\u8986\u76d6\u4e86\u5730\u7403\u8868\u9762\u7684\u6240\u6709\u90e8\u5206\uff0c\u56e0\u6b64\uff0c\u539f\u5219\u4e0a\u8bb2\uff0c\u5b83\u4eec\u6709\u80fd\u529b\u4e3a\u5730\u7403\u4e0a\u6240\u6709\u4f4d\u7f6e\u63d0\u4f9b\u670d\u52a1\u3002\u5730\u7403\u8868\u9762\u7684\u6bcf\u4e00\u70b9\u90fd\u4f1a\u770b\u5230\u9ad8\u5ea6\u4e0d\u4f4e\u4e8e55\u00ba\u7684OneWeb\u536b\u661f\uff0c\u6700\u5c0f\u4ef0\u89d2\u968f\u7eac\u5ea6\u589e\u52a0\u3002\u4f8b\u5982\uff0c\u963f\u62c9\u65af\u52a0\u7684\u7528\u6237\u603b\u4f1a\u4f53\u9a8c\u5230\u660e\u663e\u9ad8\u4e8e55\u00ba\u7684\u4ef0\u89d2\u3002\n\u4e0e\u8f68\u9053\u7ea635000\u516c\u91cc\u7684\u5730\u7403\u9759\u6b62\u536b\u661f\u76f8\u6bd4\uff0c\u4f4e\u5730\u7403\u8f68\u9053\u536b\u661f\u9884\u8ba1\u5c06\u63d0\u4f9b\u66f4\u4f4e\u7684\u5ef6\u8fdf\u548c\u66f4\u5feb\u7684\u901f\u5ea6\u3002OneWeb\u8868\u793a\uff0c\u5b83\u7684\u7528\u6237\u5f80\u8fd4\u5ef6\u8fdf\u5c06\u4e0d\u523050\u6beb\u79d2\uff0c\u5927\u7ea6\u662fGSO(\u5730\u7403\u9759\u6b62\u8f68\u9053)\u536b\u661f\u5ef6\u8fdf\u76841/13\uff0c\u4e0e\u5730\u9762\u7f51\u7edc\u76f8\u5f53\u3002OneWeb\u8fd8\u8868\u793a\uff0c\u5176\u6280\u672f\u53ef\u4ee5\u63d0\u4f9b32ms\u7684\u5e73\u5747\u5ef6\u8fdf\u3002\nSpaceX\u516c\u5f00\u9884\u6d4b\u5176\u670d\u52a1\u7684\u5ef6\u8fdf\u4f4e\u4e8e20ms\uff0c\u4f46\u8be5\u516c\u53f8\u5728\u5411FCC\u7533\u8bf7\u65f6\u4e5f\u4f7f\u7528\u4e86\u4f4e\u4e8e50ms\u7684\u6570\u5b57\uff0c\u5e76\u8868\u793a\u6d88\u8d39\u8005\u51e0\u4e4e\u4e0d\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u5ef6\u8fdf\u6c34\u5e73\u3002FCC\u6d4b\u91cf\u5230\u5eb7\u5361\u65af\u7279\u5728\u9ad8\u5cf0\u65f6\u6bb5\u7684\u5ef6\u8fdf\u4e2d\u503c\u7565\u9ad8\u4e8e20ms\uff0c\u800cVerizon FiOS\u7684\u4e2d\u503c\u5ef6\u8fdf\u7565\u9ad8\u4e8e10ms\u3002\nSpaceX\u63d0\u4ea4\u7ed9\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u7684\u6587\u4ef6\u79f0\uff0c\u5176\u62df\u8bae\u76843\u4e07\u9897\u536b\u661f\u5c06\u7528\u4e8e\u7b2c\u4e8c\u4ee3\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5efa\u7acb\u5728\u8be5\u516c\u53f8\u76ee\u524d\u90e8\u7f72\u7684\u7b2c\u4e00\u4ee3\u7cfb\u7edf\u4e4b\u4e0a\u3002\u5728\u62df\u8bae\u768430,000\u9897\u536b\u661f\u4e2d\uff0c\u8d85\u8fc785%\u7684\u536b\u661f\u5c06\u5728400\u516c\u91cc\u4ee5\u4e0b\u7684\u6781\u4f4e\u9ad8\u5ea6\u8fd0\u884c\uff0c\u4f7f\u75288\u9897\u603b\u8f68\u9053\u9ad8\u5ea6\u4ece328\u516c\u91cc\u5230614\u516c\u91cc\u4e0d\u7b49\u7684\u536b\u661f\u3002\n\u5c31\u50cf\u65b0\u7684\u589e\u5bc6\u578b5G\u7f51\u7edc\u7684\u5927\u89c4\u6a21\u90e8\u7f72\u6b63\u5728\u5e2e\u52a9\u90a3\u4e9b\u5904\u4e8e\u66f4\u591a\u57ce\u5e02\u73af\u5883\u4e2d\u7684\u4eba\u4e00\u6837\uff0cSpaceX\u63d0\u51fa\u7684\u589e\u5bc6\u578b\u536b\u661f\u661f\u5ea7\u5c06\u5927\u5e45\u589e\u52a0\u5bb9\u91cf\uff0c\u5e76\u63a8\u52a8\u5373\u4f7f\u5728\u519c\u6751\u548c\u504f\u8fdc\u5730\u533a\u4e5f\u80fd\u63a5\u5165\u771f\u6b63\u5f3a\u5927\u5bbd\u5e26\u7684\u6d88\u8d39\u8005\u6570\u91cf\u3002\u867d\u7136SpaceX\u7684\u4e0b\u4e00\u4ee3\u661f\u5ea7\u5c06\u53ea\u4f7f\u7528\u5730\u9762\u6280\u672f\u90e8\u7f72\u7684\u5929\u7ebf\u6570\u91cf\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f46\u5176\u9891\u8c31\u6548\u7387\u9ad8\u7684\u8bbe\u8ba1\u548c\u5bc6\u96c6\u7684\u9891\u8c31\u91cd\u7528\u5c06\u4f7f\u5176\u80fd\u591f\u4e3a\u519c\u6751\u5730\u533a\u5e26\u6765\u4ee5\u524d\u4ec5\u4e3a\u57ce\u5e02\u5ba2\u6237\u4fdd\u7559\u7684\u670d\u52a1\u7c7b\u578b\u548c\u4ef7\u683c\u3002\n\u901a\u8fc7\u5728\u4f4e\u6d77\u62d4\u548c\u6781\u4f4e\u6d77\u62d4\u8fd0\u884c\uff0cSpaceX Gen2\u7cfb\u7edf\u5c06\u5b9e\u73b0\u66f4\u5c0f\u7684\u5149\u6591\u6ce2\u675f\u548c\u66f4\u5927\u7684\u536b\u661f\u5206\u96c6\uff0c\u5b9e\u73b0\u63d0\u9ad8\u4e16\u754c\u4efb\u4f55\u5730\u65b9\u53ef\u7528\u5bb9\u91cf\u6240\u9700\u7684\u5bc6\u96c6\u9891\u7387\u91cd\u7528\u3002SpaceX\u7684\u4e0b\u4e00\u4ee3\u7cfb\u7edf\u4fdd\u8bc1\u4e86\u4f4d\u4e8e\u5730\u9762\u4efb\u4f55\u5730\u70b9\u7684\u6bcf\u4e2a\u5ba2\u6237\u90fd\u80fd\u770b\u5230\u591a\u9897\u536b\u661f\uff0c\u4ece\u800c\u5177\u5907\u4e86\u4e0e\u5176\u4ed6\u9891\u8c31\u7528\u6237\u534f\u8c03\u6240\u9700\u7684\u7075\u6d3b\u6027\uff0c\u540c\u65f6\u4ecd\u80fd\u63d0\u4f9b\u5f3a\u5927\u7684\u670d\u52a1\uff0c\u5373\u4f7f\u5728\u62e5\u6324\u7684\u9891\u8c31\u73af\u5883\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\n\u5728\u7533\u8bf7\u7834\u4ea7\u4e4b\u524d\uff0cOneWeb\u5df2\u7ecf\u53d1\u5c04\u4e8674\u9897\u536b\u661f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cSpaceX\u5df2\u7ecf\u53d1\u5c04\u4e86\u5927\u7ea6420\u9897\u536b\u661f\uff0c\u76ee\u6807\u662f\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u63d0\u4f9b\u670d\u52a1\uff0c\u521a\u521a\u4e0e\u7f8e\u56fd\u9646\u519b\u7b7e\u7f72\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u6d4b\u8bd5Starlink\u7528\u4e8e\u519b\u4e8b\u7528\u9014\u3002", "note_en": "SpaceX and OneWeb have asked for US permission to launch tens of thousands of additional satellites into low Earth orbit.\n SpaceX&#39;s application to launch 30,000 satellites\u2014in addition to the nearly 12,000 it already has permission for\u2014is consistent with  SpaceX&#39;s previously announced plans for Starlink.\n OneWeb&#39;s  application to launch nearly 48,000 satellites is surprising because the satellite-broadband company  filed for bankruptcy in March. OneWeb is highly unlikely to launch a significant percentage of these satellites under its current structure, as the company  reportedly &#34;axed most of its staff&#34; when it filed for bankruptcy and says it intends to use bankruptcy proceedings &#34;to pursue a sale of its business in order to maximize the value of the company.&#34; Getting FCC approval to launch more satellites could improve the value of OneWeb&#39;s assets and give more options to whoever buys the company.\n &#34;OneWeb has already secured debtor-in-possession financing and expects to soon exit the Chapter 11 process in a manner that maximizes the value of OneWeb&#39;s strategic assets and also ensures a viable path forward for its stakeholders and customers,&#34; the company said in its FCC application.\n The SpaceX and OneWeb applications were filed yesterday because of an  FCC deadline. Other providers such as Telesat ( 1,671 satellites), Kepler ( 360 satellites), and Viasat ( 288 satellites) filed applications for smaller low-Earth-orbit constellations. Mangata Networks filed an  application for 791 satellites in medium-Earth orbits.\n &#34;It&#39;s important to understand that the reason OneWeb filed for so many satellites is that it will make others&#39; efforts more difficult, especially [for  Amazon subsidiary] Kuiper, and thereby potentially enhance the value of OneWeb&#39;s first gen license. Similar rationale to SpaceX&#39;s 30K satellite proposal,&#34; satellite-industry consultant Tim Farrar  wrote on Twitter.\n FCC rules give satellite licensees six years to launch 50 percent of licensed satellites and nine years to launch all of them, unless a waiver is granted.\n  OneWeb already had permission to launch 720 satellites, and its application seeks authorization of a second phase consisting of 47,844 satellites. OneWeb did not ask for a change in its orbital altitude of 1,200km. The company provided the FCC with more technical details on its plan in  this document.\n &#34;Because of the use of combined orbits, the OneWeb satellites essentially pass over all parts of the Earth&#39;s surface and therefore, in principle, have the ability to provide service to all Earth locations,&#34; OneWeb wrote. &#34;Every point on the Earth&#39;s surface will see, at all times, a OneWeb satellite at an elevation no less than 55\u00ba, with increasing minimum elevation angles with latitude. For instance, users in Alaska will always experience elevation angles significantly higher than 55\u00ba.&#34;\n Low-Earth-orbit satellites are expected to provide much lower latency and faster speeds than geostationary satellites that orbit at about 35,000km. OneWeb said its users &#34;will experience round-trip latency of less than 50 milliseconds, which is approximately 1/13th of the latency of GSO [geo-stationary orbit] satellites, and comparable to terrestrial networks.&#34; OneWeb has also  said its technology can provide average latency of 32ms.\n SpaceX has publicly  predicted sub-20ms latency for its service, but the company also used a sub-50ms figure in its application to the FCC and said this level of latency &#34;is nearly unnoticeable to consumers.&#34; The FCC has  measured Comcast&#39;s median latency at just over 20ms during peak usage hours and Verizon FiOS at just over 10ms.\n SpaceX&#39;s FCC filing says its proposed 30,000 satellites would be for a &#34;Gen2 System&#34; that builds on the first-generation system the company is currently deploying. More than 85 percent of the proposed 30,000 satellites would &#34;operate at very low altitudes below 400km, using eight total orbital altitudes ranging from 328km to 614km.&#34;\n  Just as large deployments of new densified 5G networks are helping those in more urban environments, the densified satellite constellation SpaceX proposes will substantially increase capacity and drive up the number of consumers even in rural and remote areas with access to truly robust broadband. While SpaceX&#39;s next-generation constellation will use only a small fraction of the number of antennas being deployed for terrestrial technologies, its spectrally efficient designs and intensive spectral reuse will allow it to bring to rural areas the type of services and prices previously reserved only for urban customers.\n By operating at low and very low altitudes, the SpaceX Gen2 System will enable smaller spot beams and greater satellite diversity, achieving the intensive frequency reuse needed to heighten capacity available anywhere in the world. And by guaranteeing multiple satellites in view for every customer located at any point on the ground, SpaceX&#39;s next-generation system incorporates the flexibility necessary to coordinate with other spectrum users while still delivering robust service, even in a crowded spectrum setting.\n OneWeb had launched 74 satellites before filing for bankruptcy. SpaceX has launched about  420 satellites\u00a0so far, is aiming to provide service later this year, and just  signed a deal with the US Army to test Starlink for military use.", "posttime": "2020-05-28 05:59:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7533\u8bf7,oneweb,\u536b\u661f", "title": "\u7834\u4ea7\u7684OneWeb\u4e3a48,000\u9897\u536b\u661f\u7533\u8bf7\u724c\u7167", "title_en": "Bankrupt OneWeb seeks license for 48,000 satellites", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/05/spacex-and-oneweb-seek-licenses-to-launch-78000-broadband-satellites/", "via": "", "real_tags": ["\u7533\u8bf7", "oneweb", "\u536b\u661f"]}, {"category": "", "categoryclass": "", "imagename": "aaba03073006f7d91342f5066d42f863.jpg", "infoid": 1003991, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b66\u8005\u4eec\u8bf4\uff0c\u4ed6\u4eec\u5728Linux\u3001MacOS\u3001Windows\u548cFreeBSD\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u7684USB\u9a71\u52a8\u7a0b\u5e8f\u5806\u6808\u4e2d\u53d1\u73b0\u4e8626\u4e2a\u65b0\u6f0f\u6d1e\u3002\n\u7531\u666e\u6e21\u5927\u5b66(Purdue University)\u7684\u60e0\u9e4f(\u97f3\u8bd1)\u548c\u745e\u58eb\u6d1b\u6851\u8054\u90a6\u7406\u5de5\u5b66\u9662\u7684\u9a6c\u8482\u4e9a\u65af\u00b7\u4f69\u8036(Mathias Payer)\u7ec4\u6210\u7684\u7814\u7a76\u56e2\u961f\u8868\u793a\uff0c\u6240\u6709\u7684\u6f0f\u6d1e\u90fd\u662f\u901a\u8fc7\u4ed6\u4eec\u521b\u5efa\u7684\u4e00\u79cd\u540d\u4e3aUSBFuzz\u7684\u65b0\u5de5\u5177\u53d1\u73b0\u7684\u3002\n\u8fd9\u4e2a\u5de5\u5177\u5c31\u662f\u5b89\u5168\u4e13\u5bb6\u6240\u8bf4\u7684\u7ed2\u6bdb\u5668\u3002\u6a21\u7cca\u5668\u662f\u5141\u8bb8\u5b89\u5168\u7814\u7a76\u4eba\u5458\u5c06\u5927\u91cf\u65e0\u6548\u3001\u610f\u5916\u6216\u968f\u673a\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u5230\u5176\u4ed6\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7136\u540e\uff0c\u5b89\u5168\u7814\u7a76\u4eba\u5458\u5206\u6790\u6d4b\u8bd5\u7684\u8f6f\u4ef6\u5982\u4f55\u53d1\u73b0\u65b0\u7684\u6f0f\u6d1e\uff0c\u5176\u4e2d\u4e00\u4e9b\u6f0f\u6d1e\u53ef\u80fd\u4f1a\u88ab\u6076\u610f\u5229\u7528\u3002\n\u4e3a\u4e86\u6d4b\u8bd5USB\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5f6d\u548c\u4f69\u8036\u5f00\u53d1\u4e86USBFuzz\uff0c\u8fd9\u662f\u4e00\u79cd\u4e13\u95e8\u4e3a\u6d4b\u8bd5\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684USB\u9a71\u52a8\u7a0b\u5e8f\u6808\u800c\u8bbe\u8ba1\u7684\u65b0\u7684Fuzz\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0cUSBFuzz\u7684\u6838\u5fc3\u662f\u4f7f\u7528\u8f6f\u4ef6\u6a21\u62df\u7684USB\u8bbe\u5907\u5411\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u968f\u673a\u8bbe\u5907\u6570\u636e(\u5f53\u4ed6\u4eec\u6267\u884cIO\u64cd\u4f5c\u65f6)\u3002\n\u7531\u4e8e\u6a21\u62df\u7684USB\u8bbe\u5907\u5728\u8bbe\u5907\u7ea7\u522b\u5de5\u4f5c\uff0c\u56e0\u6b64\u5c06\u5176\u79fb\u690d\u5230\u5176\u4ed6\u5e73\u53f0\u975e\u5e38\u7b80\u5355\u3002&#34\uff1b\n\u8fd9\u4f7f\u5f97\u7814\u7a76\u5c0f\u7ec4\u4e0d\u4ec5\u53ef\u4ee5\u5728\u5927\u591a\u6570Fuzzer\u7a0b\u5e8f\u5de5\u4f5c\u7684Linux\u4e0a\u6d4b\u8bd5USBFuzz\uff0c\u8fd8\u53ef\u4ee5\u5728\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6d4b\u8bd5USBFuzz\u3002\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u4eec\u5bf9USBFuzz\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff1a\n9 Linux\u5185\u6838\u7684\u6700\u65b0\u7248\u672c\uff1av4.14.81\u3001v4.15\u3001v4.16\u3001v4.17\u3001v4.18.19\u3001v4.19\u3001v4.19.1\u3001v4.19.2\u548cv4.20-rc2(\u8bc4\u4f30\u65f6\u7684\u6700\u65b0\u7248\u672c)\u3002\n\u5728\u4ed6\u4eec\u7684\u6d4b\u8bd5\u4e4b\u540e\uff0c\u7814\u7a76\u5c0f\u7ec4\u8bf4\uff0c\u5728USBFuzz\u7684\u5e2e\u52a9\u4e0b\uff0c\u4ed6\u4eec\u603b\u5171\u53d1\u73b0\u4e8626\u4e2a\u65b0\u7684\u6f0f\u6d1e\u3002\n\u7814\u7a76\u4eba\u5458\u5728FreeBSD\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5728MacOS\u4e2d\u53d1\u73b0\u4e86\u4e09\u4e2a\u6f0f\u6d1e(\u4e24\u4e2a\u5bfc\u81f4\u8ba1\u5212\u5916\u91cd\u542f\uff0c\u4e00\u4e2a\u7cfb\u7edf\u51bb\u7ed3)\uff0c\u5728Windows 8\u548cWindows 10\u4e2d\u53d1\u73b0\u4e86\u56db\u4e2a\u6f0f\u6d1e(\u5bfc\u81f4\u84dd\u5c4f\u6b7b\u4ea1)\u3002\n\u7136\u800c\uff0c\u7edd\u5927\u591a\u6570\u4e14\u6700\u4e25\u91cd\u7684\u9519\u8bef\u90fd\u662f\u5728Linux\u4e2d\u53d1\u73b0\u7684--\u603b\u517118\u4e2a\u3002\n16\u4e2a\u662f\u5404\u79cdLinux\u5b50\u7cfb\u7edf(USB\u6838\u5fc3\u3001USB\u58f0\u97f3\u548c\u7f51\u7edc)\u4e2d\u5177\u6709\u9ad8\u5b89\u5168\u6027\u5f71\u54cd\u7684\u5185\u5b58\u9519\u8bef\uff0c\u4e00\u4e2a\u9519\u8bef\u9a7b\u7559\u5728Linux USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u9a7b\u7559\u5728USB\u76f8\u673a\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u3002\n\u5f6d\u548c\u4f69\u8036\u8bf4\uff0c\u4ed6\u4eec\u5411Linux\u5185\u6838\u56e2\u961f\u62a5\u544a\u4e86\u8fd9\u4e9b\u9519\u8bef\uff0c\u5e76\u63d0\u51fa\u4e86\u4fee\u8865\u6f0f\u6d1e\u7684\u8865\u4e01\uff0c\u4ee5\u51cf\u8f7b\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5728\u4fee\u590d\u62a5\u544a\u7684\u6f0f\u6d1e\u65f6\u7684\u8d1f\u62c5\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8868\u793a\uff0c\u572818\u4e2aLinux\u6f0f\u6d1e\u4e2d\uff0c\u670911\u4e2a\u81ea\u53bb\u5e74\u9996\u6b21\u62a5\u544a\u4ee5\u6765\u6536\u5230\u4e86\u8865\u4e01\u3002\u8fd911\u4e2a\u6f0f\u6d1e\u4e2d\u670910\u4e2a\u8fd8\u6536\u5230\u4e86CVE\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u914d\u7ed9\u4e3b\u8981\u5b89\u5168\u6f0f\u6d1e\u7684\u72ec\u7279\u4ee3\u7801\u3002\n\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u5269\u4e0b\u7684\u6f0f\u6d1e\u5206\u4e3a\u4e24\u7c7b\uff1a\u4ecd\u5728\u7981\u8fd0\u6216\u6b63\u5728\u62ab\u9732\u7684\u6f0f\u6d1e\uff0c\u4ee5\u53ca\u90a3\u4e9b\u540c\u65f6\u88ab\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u548c\u62a5\u544a\u7684\u6f0f\u6d1e\u3002\nPayer\u6628\u5929\u516c\u5e03\u4e86\u7814\u7a76\u56e2\u961f\u7684\u767d\u76ae\u4e66\u8349\u7a3f\uff0c\u63cf\u8ff0\u4e86\u4ed6\u4eec\u5728USBFuzz\u4e0a\u7684\u5de5\u4f5c\u3002\u5f6d\u548c\u4f69\u8036\u8ba1\u5212\u5728\u5b9a\u4e8e2020\u5e748\u6708\u4e3e\u884c\u7684Usenix\u5b89\u5168\u7814\u8ba8\u4f1a\u865a\u62df\u5b89\u5168\u4f1a\u8bae\u4e0a\u5c55\u793a\u4ed6\u4eec\u7684\u7814\u7a76\u6210\u679c\u3002\n\u8fc7\u53bb\u4e5f\u8fdb\u884c\u8fc7\u7c7b\u4f3c\u7684\u5de5\u4f5c\u30022017\u5e7411\u6708\uff0c\u4e00\u540d\u8c37\u6b4c\u5b89\u5168\u5de5\u7a0b\u5e08\u4f7f\u7528\u8c37\u6b4c\u5236\u9020\u7684\u540d\u4e3asyzkaller\u7684Fuzzer\u53d1\u73b0\u4e8679\u4e2a\u5f71\u54cdLinux\u5185\u6838USB\u9a71\u52a8\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u3002\nPeng\u548cPayer\u8868\u793a\uff0cUSBFuzz\u4f18\u4e8e\u4e4b\u524d\u7684\u5de5\u5177\uff0c\u5982vUSBf\u3001syzkaller\u548cusb-fuzzer\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5de5\u5177\u4e3a\u6d4b\u8bd5\u4eba\u5458\u63d0\u4f9b\u4e86\u5bf9\u6d4b\u8bd5\u6570\u636e\u7684\u66f4\u591a\u63a7\u5236\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u8de8\u64cd\u4f5c\u7cfb\u7edf\u79fb\u690d\uff0c\u800c\u4e0d\u50cf\u4e0a\u9762\u6240\u6709\u7684\u5de5\u5177\u901a\u5e38\u53ea\u80fd\u5728*Nix\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u3002\nUSBFuzz\u8ba1\u5212\u5728Peng\u548cPayer\u7684Usenix Talk\u4e4b\u540e\u4f5c\u4e3a\u5f00\u6e90\u9879\u76ee\u5728GitHub\u4e0a\u53d1\u5e03\u3002\u56de\u8d2d\u5c06\u5728\u8fd9\u91cc\u63d0\u4f9b\u3002\nPeng\u548cPayer\u7684\u8bba\u6587\u540d\u4e3a\u201cUSBFuzz\uff1aA Framework for Fuzing USB Drivers by Device Emulation\u201d(USBFuzz\uff1aA Framework for Fuzing USB Drivers by Device Emulation)\uff0c\u8fd9\u91cc\u548c\u8fd9\u91cc\u90fd\u6709PDF\u683c\u5f0f\u7684\u6587\u7ae0\u3002", "note_en": "Academics say they discovered 26 new vulnerabilities in the USB driver stack employed by operating systems such as Linux, macOs, Windows, and FreeBSD.\n The research team, made up by Hui Peng from Purdue University and Mathias Payer from the Swiss Federal Institute of Technology Lausanne, said all the bugs were discovered with a new tool they created, named  USBFuzz.\n The tool is what security experts call a  fuzzer. Fuzzers are applications that let security researchers send large quantities of invalid, unexpected, or random data as inputs to other programs.\n Security researchers then analyze how the tested software behaves to discover new bugs, some of which may be exploited in a malicious way.\n  To test USB drivers, Peng and Payer developed USBFuzz, a new fuzzer specifically designed to test the USB driver stack of modern-day operating systems.\n   &#34;At its core, USBFuzz uses a software-emulated USB device to provide random device data to drivers (when they perform IO operations),&#34; the researchers said.\n &#34;As the emulated USB device works at the device level, porting it to other platforms is straight-forward.&#34;\n   This allowed the research team to test USBFuzz not only on Linux, where most fuzzer programs work, but also other operating systems. Researchers said they tested USBFuzz on:\n 9 recent versions of the Linux kernel: v4.14.81, v4.15,v4.16, v4.17, v4.18.19, v4.19, v4.19.1, v4.19.2, and v4.20-rc2 (the latest version at the time of evaluation)\n  Following their tests, the research team said that with the help of USBFuzz, they discovered a total of 26 new bugs.\n Researchers found one bug in FreeBSD, three in MacOS (two resulting in an unplanned reboot and one freezing the system), and four in Windows 8 and Windows 10 (resulting in Blue Screens of Death).\n However, the vast majority of bugs, and the most severe, were found in Linux -- 18 in total.\n Sixteen were memory bugs of high-security impact in various Linux subsystems (USB core, USB sound, and net-work), one bug resided in the Linux USB host controller driver, and the last in a USB camera driver.\n Peng and Payer said they reported these bugs to the Linux kernel team, along with proposed patches to reduce &#34;the burden on the kernel developers when fixing the reported vulnerabilities.&#34;\n Of the 18 Linux bugs, the research team said 11 received a patch since their initial reports last year. Ten of these 11 bugs also received a CVE, a unique code that&#39;s assigned to major security flaws.\n   &#34;The remaining bugs fall into two classes: those still under embargo/being disclosed and those that were concurrently found and reported by other researchers,&#34; researchers said.\n  Payer published yesterday a draft of the research team&#39;s white paper describing their work on USBFuzz. Peng and Payer plan to present their research at the Usenix Security Symposium virtual security conference, scheduled for August 2020.\n Similar work has been carried out in the past. A Google security engineer used a Google-made fuzzer named syzkaller to discover  79 bugs impacting Linux kernel USB drivers in November 2017.\n Peng and Payer said that USBFuzz is superior to previous tools like vUSBf, syzkaller, and usb-fuzzer because their tool grants testers more control over the test data and is also portable across operating systems, unlike all the above, which usually work only on *NIX systems.\n USBFuzz is scheduled to be released on GitHub as an open source project following Peng and Payer&#39;s Usenix talk. The repo will be available  here.\n Copies of Peng and Payer&#39;s paper, titled &#34; USBFuzz: A Framework for Fuzzing USB Drivers by Device Emulation,&#34; are available in PDF format  here and  here.", "posttime": "2020-05-28 05:44:09", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "windows,linux,tool,\u6f0f\u6d1e", "title": "\u65b0\u7684\u6a21\u7cca\u5de5\u5177\u5728Linux\u3001Windows\u3001MacOS\u548cFreeBSD\u4e2d\u53d1\u73b026\u4e2aUSB\u9519\u8bef", "title_en": "New Fuzzing Tool Finds 26 USB Bugs in Linux, Windows, macOS, and FreeBSD", "transed": 1, "url": "https://www.zdnet.com/article/new-fuzzing-tool-finds-26-usb-bugs-in-linux-windows-macos-and-freebsd/", "via": "", "real_tags": ["windows", "linux", "tool", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "f1754e98ed8bcff3effa8f206460c3fc.jpg", "infoid": 1003989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u5404\u5730\u81f3\u5c11\u670911\u5bb6\u5730\u65b9\u7535\u89c6\u53f0\u4f3c\u4e4e\u64ad\u653e\u4e86\u4e0e\u4e9a\u9a6c\u900a\u7f16\u5199\u7684\u76f8\u540c\u7684\u65b0\u95fb\u5957\u9910\uff0c\u5728\u4eba\u4eec\u5bf9\u516c\u53f8\u4ed3\u5e93\u5de5\u4eba\u5b89\u5168\u7684\u62c5\u5fe7\u65e5\u76ca\u52a0\u5267\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u5ba3\u4f20\u4e86\u8be5\u516c\u53f8\u4e3a\u4fdd\u6301\u53f8\u673a\u548c\u5ba2\u6237\u5065\u5eb7\u6240\u505a\u7684\u52aa\u529b\uff0c\u4e9a\u9a6c\u900a\u62d2\u7edd\u900f\u9732\u6709\u591a\u5c11\u5458\u5de5\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\n\u5468\u4e8c\uff0c\u5de6\u503e\u65b0\u95fb\u673a\u6784Courier Newsroom\u4ee5\u89c6\u9891\u8499\u592a\u5947\u7684\u5f62\u5f0f\u53d1\u5e03\u4e86\u8fd9\u4e2a\u7535\u89c6\u8282\u76ee\u5305\uff0c\u5176\u4e2d\u663e\u793a\u5f53\u5730\u65b0\u95fb\u4e3b\u64ad\u5927\u58f0\u6717\u8bfb\u6765\u81ea\u4e9a\u9a6c\u900a\u7684\u811a\u672c\u7247\u6bb5\uff0c\u515c\u552e\u8be5\u516c\u53f8\u7684\u5b89\u5168\u534f\u8bae\u3002\n\u4e9a\u9a6c\u900a\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u4e3a\u516c\u53f8\u901a\u8fc7\u65b0\u95fb\u7ebf\u53d1\u9001\u89c6\u9891\u65b0\u95fb\u7a3f\u8fdb\u884c\u4e86\u8fa9\u62a4-\u901a\u8baf\u7ebf\u5305\u542b\u4e00\u4e2a\u811a\u672c\u548c\u89c6\u9891-\u544a\u8bc9\u798f\u5e03\u65af\uff0c\u8fd9\u4e0d\u662f\u5ba3\u4f20\u89c6\u9891\uff0c\u8fd9\u662f\u516c\u53f8\u7684\u5e38\u89c1\u505a\u6cd5\u3002\n\u8fd9\u4efd\u65b0\u95fb\u7a3f\u53d1\u5e03\u4e4b\u9645\uff0c\u4e9a\u9a6c\u900a\u7684\u80a1\u4e1c\u8ba1\u5212\u5728\u5468\u4e09\u4e3e\u884c\u5e74\u4f1a\u65f6\u5411\u8be5\u516c\u53f8\u65bd\u538b\uff0c\u8981\u6c42\u5176\u91c7\u53d6\u5b89\u5168\u63aa\u65bd\u3002\u622a\u81f3\u5468\u4e8c\uff0c\u4e9a\u9a6c\u900a\u7684\u5e02\u503c\u8d85\u8fc71.2\u4e07\u4ebf\u7f8e\u5143\uff0c\u4f7f\u5176\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u6709\u4ef7\u503c\u7684\u516c\u53f8\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u4e00\u76f4\u5f00\u653e\u7684\u4ed3\u5e93\u7684\u6761\u4ef6\u53d7\u5230\u4e86\u5bc6\u5207\u5173\u6ce8\uff0c\u5de5\u4eba\u4eec\u4e3e\u884c\u6297\u8bae\u6d3b\u52a8\uff0c\u8981\u6c42\u8fdb\u4e00\u6b65\u4fdd\u62a4\u4ed6\u4eec\u514d\u53d7\u75c5\u6bd2\u7684\u4fb5\u88ad\uff0c\u540c\u65f6\u4e5f\u8981\u6c42\u516c\u53f8\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u5e26\u85aa\u75c5\u5047\u3002\n\u5173\u4e8e\u8fd9\u4e9b\u6761\u4ef6\u7684\u95ee\u9898\u5df2\u7ecf\u5f15\u8d77\u4e86\u5341\u51e0\u4e2a\u5dde\u603b\u68c0\u5bdf\u957f\u7684\u6ce8\u610f\uff0c\u4ed6\u4eec\u7ed9\u4e9a\u9a6c\u900a\u53d1\u4e86\u4e00\u5c01\u4fe1\uff0c\u8981\u6c42\u4e9a\u9a6c\u900a\u516c\u5e03\u5176\u4ed3\u5e93\u548c\u5168\u98df\u8d85\u5e02(Whole Foods)\u6709\u591a\u5c11\u5de5\u4eba\u611f\u67d3\u4e86\u51a0\u72b6\u75c5\u6bd2\uff0c\u4ee5\u53ca\u6709\u591a\u5c11\u4eba\u6b7b\u4ea1\u7684\u7edf\u8ba1\u6570\u636e\u3002\n\u5728\u53d1\u9001\u7ed9\u5f53\u5730\u4e00\u5bb6\u65b0\u95fb\u7f16\u8f91\u90e8\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u4e9a\u9a6c\u900a\u5439\u5618\u81ea\u5df1\u53d1\u9001\u7684\u89c6\u9891\u7247\u6bb5\u201c\u8ba9\u89c2\u4f17\u7b2c\u4e00\u6b21\u6df1\u5165\u4e86\u89e3\u4e86\u516c\u53f8\u7684\u5efa\u7b51\uff0c\u770b\u770b\u516c\u53f8\u662f\u5982\u4f55\u6539\u53d8\u8fd0\u8425\u65b9\u5f0f\u7684\uff0c\u4ee5\u56de\u5e94\u65b0\u51a0\u80ba\u708e\u201d\u3002\u798f\u5e03\u65af\u83b7\u5f97\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\n\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5b83\u6b63\u5728\u5411\u5458\u5de5\u63d0\u4f9b\u53e3\u7f69\u548c\u4f53\u6e29\u68c0\u6d4b\uff0c\u5e76\u8fdb\u884c\u4ee4\u4eba\u9707\u60ca\u7684\u8f6e\u73ed\uff0c\u4f46\u4ed3\u5e93\u5de5\u4f5c\u4eba\u5458\u8868\u793a\uff0c\u516c\u53f8\u505a\u5f97\u8fd8\u4e0d\u591f\u3002\u5de5\u4eba\u4eec\u8868\u793a\uff0c\u5bf9\u793e\u4f1a\u8ddd\u79bb\u7684\u6267\u884c\u529b\u5ea6\u4e0d\u591f\uff0c\u5e76\u8981\u6c42\u5173\u95ed\u548c\u6e05\u7406\u6709\u611f\u67d3\u7684\u8bbe\u65bd\u3002\n\u8be5\u516c\u53f8\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u53cd\u5e94\u5f15\u8d77\u4e86\u52b3\u5de5\u6d3b\u52a8\u4eba\u58eb\u548c\u6c11\u4e3b\u515a\u653f\u5ba2\u7684\u6124\u6012\uff0c\u4f5b\u8499\u7279\u5dde\u53c2\u8bae\u5458\u4f2f\u5c3c\u00b7\u6851\u5fb7\u65af(Bernie Sanders)\u3002\u5468\u4e8c\uff0c\u5728\u4e00\u6761\u63d0\u5230Courier Newsroom\u89c6\u9891\u7684\u63a8\u6587\u4e2d\uff0c\u5bf9\u8be5\u516c\u53f8\u8fdb\u884c\u4e86\u731b\u70c8\u62a8\u51fb\u3002\n\u64ad\u653e\u8fd9\u6bb5\u89c6\u9891\u7684\u7535\u89c6\u53f0\u7684\u7f16\u8f91\u5224\u65ad\u529b\u4e5f\u53d7\u5230\u4e86\u8d28\u7591\u3002\n\u8fd9\u6bb5\u6c47\u7f16\u89c6\u9891\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf92018\u5e74\u53d1\u5e03\u7684\u4e00\u6bb5\u7c7b\u4f3c\u8499\u592a\u5947\u89c6\u9891\u7684\u56de\u5fc6\uff0c\u5f53\u65f6\u8f9b\u514b\u83b1SBGI\u5e7f\u64ad\u7ad9\u7684190\u591a\u540d\u4e3b\u64ad\u6717\u8bfb\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u811a\u672c\uff0c\u8b66\u544a\u4eba\u4eec\u8b66\u60d5\u201c\u504f\u89c1\u548c\u5047\u65b0\u95fb\u201d\u3002\u5728\u64ad\u653e\u4e9a\u9a6c\u900a\u8282\u76ee\u7684\u7535\u89c6\u53f0\u4e2d\uff0c\u4f3c\u4e4e\u53ea\u6709\u4e00\u4e2a\u662f\u8f9b\u514b\u83b1\u7535\u89c6\u53f0\u3002", "note_en": "At least 11 local TV stations across the U.S. appear to have run identical news packages that Amazon scripted, promoting the company\u2019s efforts to keep drivers and customers healthy as concerns grow about worker safety at the company\u2019s warehouses, with Amazon refusing to say how many of its workers have died from the coronavirus.\n      The TV package, which the left-leaning news outlet Courier Newsroom published as a  video montage that widely spread on Tuesday, shows local news anchors reading aloud the scripted segment from Amazon, touting the company\u2019s safety protocols.\n  A spokesperson for Amazon defended the company sending out the video news release over a news wire\u2014which contained a script as well as video\u2014telling  Forbes it was not a promotional video and is common practice for companies.\n    The release comes as Amazon shareholders plan to press the company on its  safety measures when it holds its annual meeting Wednesday, with its market capitalization as of Tuesday sitting at over $1.2 trillion\u2014making it the most valuable company in the world.\n  Conditions at warehouses\u2014which have remained open throughout the coronavirus pandemic\u2014have come under scrutiny, with workers staging  protests demanding further protection from the virus while also asking the company to provide them with paid sick leave.\n    Questions about those conditions have drawn the attention of a group of over a dozen states\u2019 attorneys general, which sent a  letter to Amazon demanding the company release statistics on how many workers at its warehouses and Whole Foods have been infected with coronavirus, as well as how many have died.\n  In an email sent to a local newsroom and obtained by  Forbes, Amazon touts the video footage it sent as \u201cgiving viewers for the first time an inside look at its buildings to see how the company has transformed its operations in response to COVID-19.\u201d\n    Amazon has said it\u2019s providing masks and temperature checks to employees and staggering shifts, but warehouse workers say the company hasn\u2019t done enough. Workers have said there\u2019s not enough enforcement of social distancing, and have asked that facilities with infections be shut down and cleaned.\n    The company\u2019s response to coronavirus has drawn the ire of labor activists and Democratic politicians, with Sen. Bernie Sanders (I-Vt.) lashing out at the company in a tweet Tuesday referencing the Courier Newsroom video.\n    The TV stations that aired the video have also had their editorial judgment brought into question.\n            The compilation video sparked memories of a similar montage  video published in 2018, where more than 190 anchors at Sinclair    SBGI  Broadcast stations read an identical script warning against \u201cbiased and fake news.\u201d Only one of the stations that ran Amazon\u2019s segment appeared to be a Sinclair station.", "posttime": "2020-05-28 05:27:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u53d1\u5e03,\u7167\u672c\u5ba3\u79d1,scripted", "title": "\u4e9a\u9a6c\u900a\u53d1\u5e03\u4e86\u4e00\u6bb5\u7167\u672c\u5ba3\u79d1\u7684\u65b0\u95fb\u7247\u6bb5\uff0c11\u5bb6\u7535\u89c6\u53f0\u64ad\u51fa\u4e86\u8fd9\u4e00\u7247\u6bb5", "title_en": "Amazon Sent Out a Scripted News Segment, and 11 Stations Aired It", "transed": 1, "url": "https://www.forbes.com/sites/nicholasreimann/2020/05/26/amazon-sent-out-a-scripted-news-segment-and-11-stations-aired-it/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u53d1\u5e03", "\u7167\u672c\u5ba3\u79d1", "scripted"]}, {"category": "", "categoryclass": "", "imagename": "f4aa39bdbd75645727f02b2c1805e62c.png", "infoid": 1003986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Concurnas\u662f\u4e00\u79cd\u5f00\u6e90\u7684JVM\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e8\u5728\u6784\u5efa\u53ef\u9760\u3001\u53ef\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u7684\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u548c\u5e76\u884c\u7cfb\u7edf\u3002\n\u4f7f\u7528Concurnas\u4f7f\u5e76\u53d1\u548c\u5e76\u884c\u7f16\u7a0b\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4ece\u800c\u5e2e\u52a9\u7ec4\u7ec7\u5145\u5206\u5229\u7528\u73b0\u4ee3\u591a\u6838CPU\u548cGPU\u786c\u4ef6\u3002\nConcurnas\u53ef\u4e0eJava(\u548c\u5176\u4ed6JVM\u8bed\u8a00)\u4e92\u64cd\u4f5c-\u7ec4\u7ec7\u80fd\u591f\u5728\u5e76\u53d1\u73af\u5883\u4e2d\u5229\u7528\u73b0\u6709\u7684Java\u8f6f\u4ef6\u3002\n\u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\uff0c\u4f7f\u7528Concurnas\u5f00\u53d1\u4eba\u5458\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801\u884c\u66f4\u5c11\u3002\u8be5\u4ee3\u7801\u66f4\u5b89\u5168\u3001\u66f4\u6613\u4e8e\u6d4b\u8bd5\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u8d28\u91cf\u5e76\u63d0\u9ad8\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u53d7Python\u548cJava\u7b49\u8bed\u8a00\u7684\u542f\u53d1\uff0cConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u5783\u573e\u56de\u6536\u8bed\u8a00\uff0c\u5b83\u5229\u7528\u6613\u4e8e\u5b66\u4e60\u7684\u8bed\u6cd5\u8fdb\u884c\u7c7b\u578b\u63a8\u7406\u3002\nConcurnas\u662f\u4e00\u79cd\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u7f16\u8bd1\u8bed\u8a00\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95eeJVM\u63d0\u4f9b\u7684\u96be\u4ee5\u7f6e\u4fe1\u7684\u6027\u80fd\u3002\nConcurnas\u4f7f\u4ece\u5c0f\u578b\u7814\u7a76\u539f\u578b\u5230\u5168\u7403\u8303\u56f4\u7684\u5206\u5e03\u5f0f\u751f\u4ea7\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u6210\u4e3a\u53ef\u80fd\u3002\nConcurnas\u662f\u4e00\u9879\u5f00\u6e90\u6280\u672f\uff0c\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u548c\u4fee\u6539\u3002\u7531Concurnas Ltd\u63d0\u4f9b\u7684\u6301\u7eed\u5f00\u53d1\u548c\u5546\u4e1a\u652f\u6301\nConcurnas@JAX\u4f26\u65662020.\u3002\u6211\u4eec\u5c06\u57282020\u4f26\u6566JAX\u5927\u4f1a\u4e0a\u8c08\u8bbaConcurnas\u3002\nConcurnas\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u6781\u5176\u5f3a\u5927\u7684\u5e76\u53d1\u6a21\u578b\uff0c\u5b83\u5141\u8bb8\u60a8\u7f16\u5199\u5e76\u53d1\u4ee3\u7801\uff0c\u800c\u4e0d\u5fc5\u7f16\u5199\u6837\u677f\u4ee3\u7801\u6765\u7ba1\u7406\u7ebf\u7a0b\u3001\u4e34\u754c\u533a\u6216\u9501\uff01\nConcurnas\u4f5c\u4e3a\u5e76\u53d1\u8ba1\u7b97\u7684\u4e13\u95e8\u5316\uff0c\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u4e3aGPU\u7f16\u7a0b\u63d0\u4f9b\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u60a8\u53ef\u4ee5\u7528\u60ef\u7528\u7684Concurnas\u4ee3\u7801\u7f16\u5199\u4ee3\u7801\u5e76\u5728GPU\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u5fc5\u5207\u6362\u5230C/C++\uff01\nConcurnas\u4e3a\u4e0e\u975e\u5806\u7ba1\u7406\u3001\u975e\u5783\u573e\u56de\u6536\u7684\u5185\u5b58\u4ea4\u4e92\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4f7f\u5f97\u4f7f\u7528GPU\u3001\u5927\u6570\u636e\u548c\u81ea\u5b9a\u4e49\u6570\u636e\u5e93\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\nConcurnas\u652f\u6301\u73b0\u4ee3\u547d\u4ee4\u5f0f\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5e38\u7528\u6784\u9020\uff0c\u4f8b\u5982\uff1aif-Elif-Else\u3001for\u3001while\u5faa\u73af\u3001\u65ad\u8a00\u3001\u5f02\u5e38\u3002\u52a0\u4e0a\u6765\u81ea\u5757\u7684\u9690\u5f0f\u8fd4\u56de\uff0c\u4ee5\u53ca\u8bed\u53e5\u3001\u5217\u8868\u7406\u89e3\u3001\u590d\u5370\u673a\u7b49\u7b49\uff01\nConcurnas\u4ece\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u53bb\u6389\u4e86\u7e41\u91cd\u7684\u5de5\u4f5c\u548c\u7e41\u7410\u7684\u5de5\u4f5c\uff0c\u8ba9\u5b83\u518d\u6b21\u53d8\u5f97\u6709\u8da3\u8d77\u6765\u3002Concurnas\u9ad8\u7ea7\u652f\u6301\u7c7b(\u5177\u4f53\u3001\u62bd\u8c61\u3001\u7ee7\u627f)\u3001\u6cdb\u578b(\u8f93\u5165\u3001\u8f93\u51fa\u3001\u901a\u914d\u7b26\u3001\u6709\u754c)\u3001\u679a\u4e3e\u3001\u6ce8\u91ca\u3002\u4ee5\u53ca\u8bf8\u5982\u7279\u5f81\u3001\u5143\u7ec4\u3001\u5bf9\u8c61\u63d0\u4f9b\u7a0b\u5e8f\u3001\u7c7b\u578b\u5b9a\u4e49\u3001\u57fa\u4e8e\u7528\u6cd5\u7684\u6cdb\u578b\u7c7b\u578b\u63a8\u65ad\u3001\u7c7b\u5b57\u6bb5getter/setter\u7684\u81ea\u52a8\u751f\u6210/\u91cd\u5b9a\u5411\u3001\u7c7b\u6563\u5217\u4ee3\u7801\u548c\u7b49\u5f0f\u7b49\u65b0\u7279\u6027\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\u8303\u4f8b\u7ed3\u5408\u4e86\u4e00\u7ec4\u975e\u5e38\u6709\u7528\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7eaf\u51fd\u6570\u5f0f\u7f16\u7a0b\u5728\u4e16\u754c\u4e0a\u5f88\u5c11\u89c1\u3002\u5728Concurnas\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5b83\u4eec\u96c6\u6210\u5230Concurnas\u4e2d\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u65b9\u6cd5\u548c\u51fd\u6570\u5f15\u7528\u3001lambdas\u3001\u90e8\u5206\u51fd\u6570\u6c42\u503c\u3001\u60f0\u6027\u6c42\u503c\u3001\u6a21\u5f0f\u5339\u914d\u7b49\u7b49\uff01\nConcurnas\u5bf9\u65b0\u5174\u7684\u53cd\u5e94\u5f0f\u7f16\u7a0b\u8303\u4f8b\u62e5\u6709\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\u4f7f\u7528Concurnas\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u81ea\u52a8\u54cd\u5e94\u8f93\u5165\u53c2\u6570\u66f4\u6539\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u5141\u8bb8\u60a8\u521b\u5efa\u53cd\u5e94\u5f0f\u7ba1\u9053\u3002\u4e00\u79cd\u975e\u5e38\u81ea\u7136\u7684\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u7684\u65b9\u6cd5\u3002\nConcurnas\u4e3a\u6838\u5fc3\u6570\u636e\u7ed3\u6784(\u5305\u62ec\u6570\u7ec4\u3001\u77e9\u9635\u3001\u5217\u8868\u3001\u6620\u5c04\u3001\u8303\u56f4\u548c\u96c6\u5408)\u63d0\u4f9b\u4e86\u4e00\u6d41\u7684\u516c\u6c11\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u5728\u79d1\u5b66\u8ba1\u7b97\u793e\u533a\u4e2d\u6d41\u884c\u7684\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u4e00\u4e2a\u5b57\u7b26\u8fd0\u7b97\u7b26\u5c06\u8fd0\u7b97\u7b26\u5e94\u7528\u4e8e\u6570\u7ec4/\u77e9\u9635/\u5217\u8868\u7684\u6240\u6709\u5143\u7d20\u3002\nConcurnas\u63d0\u4f9b\u72ec\u7acb\u7f16\u8bd1\u5668\u3001\u4ea4\u4e92\u5f0fREPL shell\u3001Jupyter Notebook\u3001VS Code\u3001Atom\u548cSublime Text\u652f\u6301\u3002\nConcurnas\u662f\u4e00\u79cd\u7a7a\u5b89\u5168\u8bed\u8a00\uff0c\u8fd9\u6709\u52a9\u4e8e\u6d88\u9664\u73b0\u4ee3\u7f16\u7a0b\u4e2d\u6700\u5e38\u89c1\u7684\u9519\u8bef\u6765\u6e90\u4e4b\u4e00\uff1a\u7a7a\u6307\u9488\u5f02\u5e38\uff01\nConcurnas\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u60a8\u53ef\u4ee5\u8bbf\u95eeJDK\u548cJVM\u63d0\u4f9b\u7684\u51fa\u8272\u7684\u591a\u5e73\u53f0\u6027\u80fd\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4e0e\u5176\u4ed6JVM\u8bed\u8a00(\u5982Java\u3001Scala\u3001Kotlin\u548cClojure)\u517c\u5bb9-\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u96c6\u6210/\u4f7f\u7528\u6240\u6709\u73b0\u6709\u7684JVM\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u4fee\u6539\u3002\nConcurnas\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u5e7f\u6cdb\u4f7f\u7528\u7c7b\u578b\u63a8\u7406\u6765\u6d88\u9664\u7c7b\u578b\u8d1f\u62c5\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cConcurnas\u4ee3\u7801\u4e0ePython\u4ee3\u7801(\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u6700\u5bb9\u6613\u7f16\u7801\u7684\u8bed\u8a00\u4e4b\u4e00)\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f46\u5177\u6709Java\u7684\u6027\u80fd\uff01\n\u7f16\u7a0b\u8bed\u8a00\u4e0d\u4ec5\u4ec5\u662f\u673a\u5668\u7528\u7684--\u4eba\u4eec\u4e5f\u9700\u8981\u9605\u8bfb\u5b83\u4eec\uff01Concurnas\u63d0\u4f9b\u4e86\u7b80\u6d01\u7684\u8bed\u6cd5\u548c\u8bb8\u591a\u5feb\u6377\u65b9\u5f0f\uff0c\u4f7f\u7f16\u5199\u6613\u4e8e\u9605\u8bfb\u548c\u7ef4\u62a4\u7684\u4ee3\u7801\u6210\u4e3a\u89c4\u8303\u3002\u5bf9\u4e8e\u9700\u8981\u989d\u5916\u6e05\u6670\u5ea6\u7684\u4ee3\u7801\uff0cConcurnas\u4e5f\u53ef\u4ee5\u5197\u957f\u3002\nConcurnas\u901a\u8fc7\u8868\u8fbe\u5f0f\u5217\u8868\u3001\u6269\u5c55\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5bf9\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00\u63d0\u4f9b\u5e7f\u6cdb\u652f\u6301\u3002Concurnas\u8fd8\u652f\u6301\u8bed\u8a00\u6269\u5c55\uff0c\u5141\u8bb8\u60a8\u5c06\u975eConcurnas\u4ee3\u7801\u6bb5\u76f4\u63a5\u5d4c\u5165\u5230Concurnas\u4ee3\u7801\u6587\u4ef6\u4e2d\u3002\ndef gcd(x int\uff0cy int){//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570While(Y){(x\uff0cy)=(y\uff0cx mod y)}x}calc1=gcd(8\uff0c20)\uff01//\u5728\u9694\u79bbcalc2=gcd(6\uff0c45)\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97\uff01//\u5982\u679ccalc1&gt\uff1bcalc2\u5426\u5219calc2\uff0c\u8bf7\u5728\u5355\u72ec\u7684\u9694\u79bbcalc3=calc1\u4e2d\u8fd0\u884c\u6b64\u8ba1\u7b97//^\u7b49\u5f85calc1\u7684\u7ed3\u679c\u3002\nConcurnas\u5141\u8bb8\u60a8\u901a\u8fc7\u4f7f\u7528bang\uff01\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u578b\u5bb9\u5668(\u79f0\u4e3a\u9694\u79bb)\u4e2d\u8f7b\u677e\u5730\u5e76\u53d1\u6267\u884c\u8ba1\u7b97\uff01\u63a5\u7ebf\u5458\u3002\n\u5e76\u53d1\u8ba1\u7b97\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u6700\u56f0\u96be\u7684\u65b9\u9762\u4e4b\u4e00\u3002\n\u8bf7\u6ce8\u610f\u5e76\u53d1\u8ba1\u7b97\u662f\u5982\u4f55\u5728Concurnas\u4e2d\u6210\u4e3a\u4e00\u884c\u7a0b\u5e8f\u7684\uff0c\u521b\u5efa/\u7ba1\u7406\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u3001\u751f\u547d\u5468\u671f\u3001\u9501(\u6216\u6b7b\u9501\uff01)\u3001\u4e34\u754c\u533a\u3001\u540c\u6b65\u3001\u7b49\u5f85\u3001\u901a\u77e5\u7ebf\u7a0b\u7b49\u90fd\u4e0d\u7528\u62c5\u5fc3\u3002\u6240\u6709\u8fd9\u4e9b\u56f0\u96be\u7684\u4e8b\u60c5\u90fd\u4f1a\u81ea\u52a8\u5904\u7406-\u8ba9\u60a8\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u4e8b\u60c5\u3002\nn=10 nplusone={n+=1\uff1bn}\uff01//\u5728\u4e00\u4e2a\u5206\u79bb\u7269\u4e2d\u6267\u884c\u6b64\u8ba1\u7b97\uff0cn\u7684\u526f\u672c\u4e3anminusone={n-=1\uff1bn}\uff01//\u53e6\u4e00\u4e2a\u5206\u79bb\u7269\u5728n\u7684\u5355\u72ec\u526f\u672c\u4e0a//\u4ee5\u4e0a\u4e24\u4e2a\u5206\u79bb\u7269\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\u3002n//nplusone==11//nminusone==9\u3002\nConcurnas\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u90fd\u5728\u9694\u79bb\u4e2d\u6267\u884c\u3002\u9694\u79bb\u88ab\u6620\u5c04\u5230\u8fd0\u884c\u4ee3\u7801\u7684\u673a\u5668\u7684\u5e95\u5c42\u786c\u4ef6\u7ebf\u7a0b\u4e0a\u3002\u9694\u79bb\u5668\u5728\u5176\u81ea\u5df1\u7684\u4e13\u7528\u5185\u5b58\u7a7a\u95f4\u5185\u8fd0\u884c\u3002\n\u5c06\u590d\u5236\u9694\u79bb\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u72b6\u6001\uff0c\u4f46\u5f15\u7528\u3001\u53c2\u4e0e\u8005\u548c\u4e00\u4e9b\u7279\u6b8a\u6807\u8bb0\u7684\u53ef\u5171\u4eab\u7c7b\u9664\u5916\u3002\u8fd9\u79cd\u72b6\u6001\u9694\u79bb\u4f7f\u63a8\u7406\u548c\u8bbe\u8ba1\u5e76\u53d1\u7b97\u6cd5\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u4e3a\u540c\u6b65\u548c\u7ade\u4e89\u6761\u4ef6\u7f16\u5199\u4ee3\u7801\u7684\u9700\u8981\u3002\nAREF INT\uff1a//\u8fd9\u662f\u4e00\u4e2aINT{//\u5e76\u53d1\u6267\u884c\u7684\u590d\u6742\u9694\u79bb\u6700\u7ec8\u8bbe\u7f6eAREF.//\u6b64\u5904\u7684\u590d\u6742\u4ee3\u7801.AREF=10}\uff01//AREF&#39\uff1b\u9700\u8981\u5176\u5f53\u524d\u503c\uff1aRESULT INT=AREF//\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\u4efb\u4f55\u503c\uff0c\u6267\u884c\u5c06\u6682\u505cSystem.out.println(&#34\uff1bAREF\u7684\u503c\u4e3a\uff1a&#34\uff1b+RESULT)\u3002\nexeccount int\uff1a=0 for(A In 1 To 10){//\u4e00\u4e9b\u590d\u6742\u7684\u8ba1\u7b97..execount++}\uff01//\u751f\u6210\u9694\u79bb\u4ee5\u5e76\u53d1\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u3002\u7b49\u5f85(execount\uff1bexecount==10)//\u6682\u505c\u8fdb\u4e00\u6b65\u6267\u884c\uff0c\u76f4\u5230execount==10\u3002\naval int\uff1a//\u672a\u8bbe\u7f6e\u521d\u59cb\u503cbval int\uff1a=22//\u521d\u59cb\u503c\u5df2\u77e5SUMMARTS int\uff1a=EVERY(aval\uff0cbval){aval+bval}//\u4ee5\u4e0a\u521d\u59cb\u5316\u540e\uff0c\u5141\u8bb8\u6267\u884c.aval=100 bval=200//\u4e0a\u9762\u7684\u6bcf\u4e2a\u5757\u90fd\u5c06\u5e76\u53d1\u8fd0\u884c\uff0c\u5e76\u6700\u7ec8\u5c06SUMMICS\u8bbe\u7f6e\u4e3a\uff1aAWAIT(SUMMILES\uff1bSUMMILES==300)\u3002\n\u5b83\u4eec\u4e0d\u662f\u5728\u9694\u79bb\u4e4b\u95f4\u590d\u5236\uff0c\u800c\u662f\u5171\u4eab\uff0c\u4f46\u63d0\u4f9b\u5bf9\u5176\u53ef\u53d8\u72b6\u6001\u7684\u53d7\u63a7\u539f\u5b50\u8bbf\u95ee\u3002\u5982\u679c\u8bf7\u6c42\u65f6\u5c1a\u672a\u5728REF\u4e0a\u8bbe\u7f6e\u503c\uff0c\u5219\u6682\u505c\u6267\u884c\uff0c\u5e76\u5141\u8bb8\u6267\u884c\u5176\u4ed6\u9694\u79bb\uff0c\u76f4\u5230\u8bbe\u7f6e\u4e86\u503c\uff0c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Concurnas\u63d0\u4f9b\u7684\u4ee5\u4e0b\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020\u5bf9\u5f15\u7528\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94\uff1a\n\u7b49\u5f85\u5c06\u6682\u505c\u6267\u884c\uff0c\u76f4\u5230\u5728REF\u4e0a\u8bbe\u7f6e\u4e86\u503c\u5e76\u4e14\u6ee1\u8db3\u4e86\u53ef\u9009\u7684\u4fdd\u62a4\u6761\u4ef6\u3002\nonchange\u5c06\u5728\u5176\u76d1\u89c6\u7684\u4efb\u4f55\u5f15\u7528\u53d1\u751f\u66f4\u6539\u65f6\u89e6\u53d1\u5176\u4ee3\u7801\u5757\u7684\u5e76\u53d1\u6267\u884c\u3002\n\u6bcf\u4e2a\u53c2\u6570\u7684\u884c\u4e3a\u4e0eonchange\u76f8\u540c\uff0c\u4f46\u5982\u679c\u5728\u4efb\u4f55\u53d7\u76d1\u89c6\u7684\u5f15\u7528\u4e0a\u8bbe\u7f6e\u4e86\u521d\u59cb\u503c\uff0c\u5219\u4f1a\u89e6\u53d1\na int\uff1ab int\uff1ac&lt\uff1b=a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=Every(a\uff0cb){a+b}d&lt\uff1b-a+b//\u76f8\u540c\u4e8e\uff1aC int\uff1a=onchange(a\uff0cb){a+b}\u3002\n\u4e0eConcurnas\u7684\u5927\u591a\u6570\u8bed\u6cd5\u5143\u7d20\u4e00\u6837\uff0c\u63d0\u4f9b\u4e86\u53cd\u5e94\u5f0f\u7f16\u7a0b\u6784\u9020Every and OnChange\u7684\u7b80\u660e\u7248\u672c\u3002\u8fd9\u6709\u6548\u5730\u5c06\u53cd\u5e94\u5f0f\u8ba1\u7b97\u53d8\u6210\u4e86\u4e00\u884c\u64cd\u4f5c\u3002\ncount1 int\uff1a=100 count2 int\uff1a=100 onchange(count1\uff0ccount2){System.out.println(&#34\uff1bsum\uff1a{count1+count2}&#34\uff1b)}trans{count1-=10 count2+=10}//\u5c06\u8f93\u51fa\uff1a&#34\uff1bsum\uff1a200&#34\uff1b\nConcurnas\u901a\u8fc7TRANS BLOCK\u5173\u952e\u5b57\u652f\u6301\u8f6f\u4ef6\u4e8b\u52a1\u5185\u5b58\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u5f15\u7528\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u4f7f\u8fd9\u4e9b\u66f4\u6539\u5728\u4e8b\u52a1\u4e4b\u5916\u4ee5\u539f\u5b50\u4e3a\u57fa\u7840\u53ef\u89c1\u3002\n\u6765\u81eacom.concurnas.lang.Pulsar\u5bfc\u5165Pulsar\uff0cRealtimePulsar\u6765\u81eajava.time\u5bfc\u5165\u6301\u7eed\u65f6\u95f4Pulsar=new RealtimePulsar()oneOffTrigger\uff1a=10\u79d2\u65f6\u95f4\u5185\u7684pulsar.after(Duration.ofSeconds(10))//schedule\u4e8b\u4ef6.\u6bcf\u4e2a(OneOffTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+oneOffTrigger)}//\u6bcf2\u79d2\u5b89\u639210\u6b21\u4e8b\u4ef6.RepeatingTrigger\uff1a=Pulsar.Repeat(Duration.ofSecond(2)\uff0c10)\u6bcf(RepeatingTrigger){System.out.println(&#34\uff1b\u5f53\u524d\u65f6\u95f4\uff1a&#34\uff1b+RepeatingTrigger)}\u3002\n\u5e76\u53d1\u7cfb\u7edf\u5de5\u7a0b\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\u662f\u5e0c\u671b\u6709\u4e00\u4e9b\u57fa\u4e8e\u65f6\u95f4\u7684\u89e6\u53d1\u5668\uff0c\u7b49\u5f8510\u79d2\uff0c\u7136\u540e\u6267\u884cx&#34\uff1b\u6216\u6bcf\u96943\u79d2\u505a\u4e00\u6b21y\u7b49\uff0c\u6216\u5728\u6b64\u7279\u5b9a\u65f6\u95f4\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5728Concurnas\uff0c\u6211\u4eec\u5c06\u6b64\u79f0\u4e3a\u65f6\u95f4\u8ba1\u7b97\u3002\n\u65f6\u95f4\u8ba1\u7b97\u901a\u8fc7\u5185\u7f6e\u7684Pulsar\u5e93\u5f97\u5230\u652f\u6301\uff0c\u8be5\u5e93\u4f4d\u4e8e\uff1acom.concurnas.lang.Pulsar\u3002\u6b64\u5e93\u5141\u8bb8\u6211\u4eec\u5c06\u6d3b\u52a8\u5b89\u6392\u5728\u7ecf\u8fc7\u4e00\u5b9a\u65f6\u95f4\u540e\u5728\u5c06\u6765\u8fdb\u884c\u3002\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u4e3a\u5c06\u6765\u7684\u91cd\u590d\u5b89\u6392\u4efb\u52a1\u3002\nConcurnas\u63d0\u4f9b\u8109\u51b2\u661f\u7684\u5b9e\u65f6\u5b9e\u73b0\u548c\u51b0\u51bb\u65f6\u95f4\u5b9e\u73b0(\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u65f6\u95f4\u5e94\u7528)\uff0c\u5141\u8bb8\u65f6\u95f4\u4f5c\u4e3a\u53d7\u63a7\u53d8\u91cf\u6ce8\u5165\u3002\nresult=parfor(b in 0\u523010){gcd(b\uff0c10-b)}//result==[10\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c5\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c2\uff1a\uff0c1\uff1a\uff0c10\uff1a]\u3002\nConcurnas\u62e5\u6709\u5bf9\u5e76\u884cfor\u5faa\u73af\u7684\u5934\u7b49\u516c\u6c11\u652f\u6301\u3002\u8fd9\u4e9b\u662f\u7528\u4e8e\u5728\u5faa\u73af\u4e0a\u4e0b\u6587\u4e2d\u5e76\u884c\u6267\u884c\u57fa\u4e8e\u4efb\u52a1\u7684\u64cd\u4f5c\u7684\u65b9\u4fbf\u800c\u76f4\u89c2\u7684\u673a\u5236\u3002\u5b83\u4eec\u4e0eConcurnas\u4e2d\u7684\u5e38\u89c4\u5faa\u73af\u5177\u6709\u76f8\u540c\u7684\u8bed\u6cd5\u3002\nACTOR MyActor{//\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2aACTOR-count=0 def Increment(){count++}}//\u4f7f\u7528\u4e0a\u9762\u7684ACTOR\uff1ama=new MyActor()ma.incremental()//\u5c31\u50cf\u6b63\u5e38\u7684\u65b9\u6cd5\u8c03\u7528\u4e00\u6837\uff0c\u5c06\u963b\u585e\uff0c\u76f4\u5230\u6267\u884c\u5b8c\u6210sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210{ma.increate()}\uff01//\u5e76\u53d1\u8c03\u7528{ma.increate()}\uff01}count=ma.getCount()//count==3\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\nConcurnas\u4e2d\u7684\u53c2\u4e0e\u8005\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u5fae\u670d\u52a1\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u5728\u81ea\u5df1\u7684\u4e13\u7528\u9694\u79bb\u5185\u8fd0\u4f5c\u3002\u4ece\u8c03\u7528\u4ee3\u7801\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53c2\u4e0e\u8005\u7684\u5916\u89c2\u548c\u884c\u4e3a\u4e0e\u5e38\u89c4\u5bf9\u8c61\u4e00\u6837\u3002\n\u53c2\u4e0e\u8005\u5141\u8bb8\u6211\u4eec\u4ee5\u5355\u7ebf\u7a0b\u6837\u5f0f\u7f16\u5199\u670d\u52a1\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u591f\u4ee5\u5e76\u53d1\u65b9\u5f0f\u5b89\u5168\u5730\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u540c\u6b65\u6216\u4e89\u7528\u6761\u4ef6\uff0c\u56e0\u4e3a\u5bf9\u53c2\u4e0e\u8005\u7684\u6bcf\u4e2a\u8c03\u7528\u90fd\u662f\u6309\u987a\u5e8f\u8fd0\u884c\u7684\uff0c\u5e76\u4e14\u5728\u5b8c\u6210\u4e4b\u524d\u5177\u6709\u5bf9\u53c2\u4e0e\u8005\u72b6\u6001\u7684\u72ec\u5360\u8bbf\u95ee\u6743\u9650\u3002\u81ea\u7136\uff0c\u56e0\u4e3a\u53c2\u4e0e\u8005\u5b9e\u73b0\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u5e76\u53d1\u63a7\u5236\uff0c\u6240\u4ee5\u65e0\u9700\u8de8\u591a\u4e2a\u9694\u79bb\u8fdb\u884c\u590d\u5236\u5c31\u53ef\u4ee5\u5b89\u5168\u5730\u5171\u4eab\u5b83\u4eec\u3002\nclass MyCounter(-count int){//\u666e\u901a\u7c7bdef increment(){count++}}//\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7of\u5173\u952e\u5b57\u5b9a\u4e49\u548c\u4f7f\u7528\u6211\u4eec\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff0c\u5982\u4e0b\u6240\u793a\uff1aActor MyActor of MyCounter(0)//\u8ba9\u6211\u4eec\u4f7f\u7528\u65b0\u7684\u7c7b\u578b\u5316\u6267\u884c\u5143\uff1ama=new MyActor()ma.incremental()sync{//sync-\u7b49\u5f85\u5757\u4e2d\u521b\u5efa\u7684\u6240\u6709\u9694\u79bb\u5b8c\u6210ma.increate()\uff01ma.increate()\uff01}count=ma.count//count==3\u3002\n\u6709\u65f6\u6211\u4eec\u6ca1\u6709\u4ece\u96f6\u5f00\u59cb\u5b9a\u4e49\u6f14\u5458\u7684\u5962\u4f88\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u9884\u5148\u5b58\u5728\u7684\u4ee3\u7801\uff0c\u60c5\u51b5\u5c24\u5176\u5982\u6b64\u3002\u4e3a\u6b64\uff0cConcurnas\u63d0\u4f9b\u4e86\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u3002\u7c7b\u578b\u5316\u7684\u53c2\u4e0e\u8005\u6784\u9020\u5b83\u4eec\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u5e76\u56f4\u7ed5\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\n\u7528\u4e8e\u521b\u5efa\u88ab\u5305\u88c5\u7684\u7c7b\u6216\u65b9\u6cd5\u7684\u5b9e\u4f8b\u7684\u4efb\u4f55\u6784\u9020\u51fd\u6570\u4e5f\u7531\u7c7b\u578b\u5316\u53c2\u4e0e\u8005\u63d0\u4f9b\u3002\nclass MyCounter(-count int){def increate(){count++}}inst1=\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u65b0\u5efa\u6267\u884c\u5143inst2=new\u6267\u884c\u5143MyCounter(0)//\u5728MyCounter\u4e0a\u521b\u5efa\u65b0\u6267\u884c\u5143\u3002\n\u521b\u5efa\u7c7b\u578b\u5316\u6267\u884c\u5143\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b(\u73b0\u5728\u662fAND ACTOR\uff01)\u65f6\uff0c\u53ea\u9700\u4f7f\u7528ACTOR\u5173\u952e\u5b57\u4ee3\u66ff\u6216\u9644\u52a0\u4e8eNEW\u5173\u952e\u5b57\u3002\n//\u4e00\u4e2a\u7b80\u5355\u7684\u77e9\u9635\u4e58\u6cd5\u5185\u6838.gpukernel 2 matMult(M int\uff0cK int\uff0cGLOBAL in A Float[2]\uff0cGLOBAL in B Float[2]\uff0cGLOBAL OUT result Mat Float[2]){globalRow=get_global_id(0)globalCol=get_global_id(1)acc=0.0f\uff1bfor(k=0\uff1bk&lt\uff1bK\uff1bk++){acc+=A[k*M+globalRow]*B[globalCol*K+k]}\u3002\nConcurnas\u62e5\u6709GPU\u8ba1\u7b97\u7684\u4e00\u6d41\u5e02\u6c11\u652f\u6301\u3002GPU\u53ef\u4ee5\u50cfCPU\u534f\u5904\u7406\u5668\u4e00\u6837\u4f7f\u7528\uff0c\u901a\u8fc7\u5b83\u4eec\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u7ecf\u5e38\u80fd\u591f\u5c06\u8bb8\u591a\u8ba1\u7b97\u9650\u5236\u95ee\u9898\u7684\u8ba1\u7b97\u901f\u5ea6\u63d0\u9ad8100\u500d\u4ee5\u4e0a\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u57fa\u4e8eCPU\u7684\u8ba1\u7b97\u3002\nGPU\u8ba1\u7b97\u7684\u6838\u5fc3\u662f\u5185\u6838\u3002\u8fd9\u4e9b\u90fd\u662f\u5728\u6211\u4eec\u7684GPU\u4e0a\u6267\u884c\u7684\uff0c\u4ee5\u4fbf\u6267\u884c\u8ba1\u7b97\u3002Concurnas\u5141\u8bb8\u60a8\u4f7f\u7528Concurnas\u7f16\u7a0b\u8bed\u8a00\u7684\u5b50\u96c6\u521b\u5efa\u5185\u6838\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u7a0d\u52a0\u4fee\u6539\u5c31\u53ef\u4ee5\u7f16\u5199\u60ef\u7528\u7684\u5e76\u53d1\u4ee3\u7801\uff0c\u4ee5\u4fbf\u5728GPU\u4e0a\u6267\u884c\u8ba1\u7b97\u3002\n//\u5728GPU\u8bbe\u5907\u4e0a\u521b\u5efa\u6570\u7ec4\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayMixed&lt\uff1bint[]&gt\uff1b(int[].class\uff0c10)//\u5c06\u6570\u636e\u4ece\u5806\u590d\u5236\u5230\u7f13\u51b2\u533a.copy Complete\u5e03\u5c14\u503c\uff1agps.GPURef=ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])//\u5728\u6211\u4eec\u7b49\u5f85\u590d\u5236\u5b8c\u6210\u7684\u540c\u65f6\uff0c\u53ef\u80fd\u5728GPU\u4e0a\u6267\u884c\u5176\u4ed6\u8ba1\u7b97.await(Copy Complete)//a\u4ec5\u8f93\u5165\u7f13\u51b2\u533aar gpus.GPUBufferInput=device.makeOffHeapArrayIn&lt\uff1bint[]&gt\uff1b(INT[].class\uff0c10)//a 2 x 4\u8f93\u51fa\u77e9\u9635\u77e9\u9635\u57abgpus.GPUBufferOutput=device.makeOffHeapArrayOut&lt\uff1bint[2]&gt\uff1b(int[2].class\uff0c2\uff0c4)\u3002\n\u5f53\u6211\u4eec\u68c0\u67e5\u8981\u5728GPU\u4e0a\u6267\u884c\u7684\u7b97\u6cd5\u65f6\uff0c\u901a\u5e38\u5b83\u4eec\u8bbe\u8ba1\u548c\u4f7f\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u662f\u4e0eGPU\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u6709\u5173\u3002Concurnas\u4e3a\u6b64\u8fc7\u7a0b\u63d0\u4f9b\u4e13\u95e8\u7684\u652f\u6301\u3002\n\u4e00\u4e9b\u6700\u9ad8\u6548\u7684GPU\u7b97\u6cd5\u901a\u8fc7\u540c\u65f6\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u548c\u8ba1\u7b97\u7684\u6d41\u6c34\u7ebf\u6765\u5b9e\u73b0\u5b83\u4eec\u7684\u6548\u7387\uff0c\u4ece\u800c\u4f7fGPU\u59cb\u7ec8\u5fd9\u4e8e\u505a\u6709\u7528\u7684\u5de5\u4f5c\u3002Concurnas\u51ed\u501f\u5176\u5bf9\u975e\u963b\u585eGPU\u64cd\u4f5c(\u5982\u901a\u8fc7Refs\u8fdb\u884c\u6570\u636e\u4f20\u8f93)\u7684\u672c\u673a\u652f\u6301\uff0c\u4f7f\u5f97\u8fd9\u4e00\u70b9\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\n//\u5b9a\u4e49\u7b26\u5408C99\u7684\u539f\u59cbOpenCL C\u4ee3\u7801\uff1a@GPUStubFunction(Source=&#34\uff1bFloat plus1(Float a\uff0cFloat b){return a+b\uff1b}&#34\uff1b)gpudef plus1(a Float\uff0cb Float)Float//\u4f7f\u7528\u73b0\u6709\u7684\u7b26\u5408C99\u7684OPENCL C\u4ee3\u7801\uff1a@GPUStubFunction(sources=[&#39\uff1b./cpucode.cl&#39\uff1b\uff0c&#39\uff1b./gpuutilCode.cl&#39\uff1b])gpudef plus2(a Float\uff0cb Float)Float\u3002\nConcurnas\u4f7f\u7528OpenCL\u5b9e\u73b0GPU\u8ba1\u7b97\u3002\u8fd9\u662f\u6709\u5229\u7684\uff0c\u56e0\u4e3a\u9664\u4e86\u5176\u591a\u4f9b\u5e94\u5546\u652f\u6301(\u4e3b\u8981\u662f\u82f1\u7279\u5c14\u3001NVIDIA\u548cAMD)\u5916\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u7528\u4e8eGPU\u8ba1\u7b97\u7684\u6574\u4e2a\u73b0\u6709\u5e93\u4ee3\u7801\u3002\nConcurnas\u5141\u8bb8\u4ee5\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u4f7f\u7528\u73b0\u6709\u4ee3\u7801\uff0c\u8981\u4e48\u76f4\u63a5\u901a\u8fc7\u7528\u7b26\u5408C99\u7684OpenCL C\u4ee3\u7801\u7f16\u5199\u7684\u4ee3\u7801\u5b57\u7b26\u4e32\u4f7f\u7528\uff0c\u8981\u4e48\u4f5c\u4e3a\u9644\u52a0\u5230\u5b58\u6839\u5185\u6838\u7684\u6ce8\u91ca\u4e2d\u7684\u76f4\u63a5\u6587\u4ef6\u5f15\u7528\u3002\n//\u4e00\u79cd\u5229\u7528GPU\u672c\u5730\u5185\u5b58gpukernel 2matMultLocal(M int\uff0cN int\uff0cK int\uff0c\u5e38\u91cfA\u6d6e\u70b9[2]\uff0c\u5e38\u91cfB\u6d6e\u70b9[2]\uff0cGLOBAL OUT RESULT FLOAT[2]){row=get_local_id(0)col=get_local_id(1)globalRow=CacheSize*get_group_id(0)+row//\u7ed3\u679c\u884c(0..M)globalCol=CacheSize*get_group_id(1)+colof result(0..N)//\u672c\u5730\u5185\u5b58\u4fdd\u5b58\u7f13\u5b58A\u548cB\u4e2d\u7684CacheSize\u5143\u7d20*CacheSize\u5143\u7d20\u3002CacheSize]acc=0.0f//\u5faa\u73af\u904d\u5386\u6240\u6709\u5206\u7247cacheSize int=K/CacheSize for(t=0\uff1bt&lt\uff1bcacheSize\uff1bt++){//\u5c06\u5168\u5c40\u5185\u5b58\u4e2d\u7684A\u548cB\u7684\u4e00\u6bb5\u7f13\u5b58//\u5230\u672c\u5730\u5185\u5b58tiledRow=CacheSize*t+row tiledCol=CacheSize*t+colcacheA[ol][row]=A[tiledCol*M+globalRow]cacheb[ol][row]=B[globalCol*K+tiledRow]\u5c4f\u969c(True)/\u3002k++){//\u7d2f\u52a0\u77e9\u9635\u5b50\u90e8\u5206\u7684\u7ed3\u679cacc+=cacheA[k][row]*cacheb[ol][k]}\u5c4f\u969c(True)//\u786e\u4fdd\u5728\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7f13\u5b58\u8282\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u9879}result[globalCol*M+globalRow]=acc}\u3002\nConcurnas\u5177\u6709\u5bf9\u672c\u5730GPU\u5185\u5b58\u548c\u5c4f\u969c\u7684\u672c\u5730\u60ef\u7528\u652f\u6301\u3002\u901a\u5e38\uff0c\u5f53\u5728GPU\u4e0a\u4f7f\u7528\u672c\u5730\u5185\u5b58\u5b9e\u73b0\u7a7a\u95f4\u5c40\u90e8\u6027\u5f88\u5f3a\u7684\u7b97\u6cd5\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u6027\u80fd\u65b9\u9762\u53d7\u76ca\u826f\u591a\u3002\nConcurnas GPU\u5b9e\u65bd\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u6027\u80fd\u5206\u6790\u9009\u9879\u3002\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u3001\u4f7f\u4eba\u80fd\u591f\u8c03\u8bd5GPU\u4ee3\u7801\u4ee5\u4fbf\u786e\u5b9a\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u4ee5\u53ca\u7528\u4e8e\u76d1\u89c6\u76ee\u7684\u90fd\u662f\u6709\u7528\u7684\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer(port=42001)remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n//\u5ba2\u6237\u7aef\uff1arm=Remote(&#39\uff1blocalhost&#39\uff1b\uff0cport=42001)//\u8fdc\u7a0b\u6267\u884c\u4ee3\u7801\uff0c\u8fd4\u56deref\uff1aans int\uff1a={10+10}\uff01(rm.onailReter())rm.close()//ans==20\nConcurnas\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u6613\u4e8e\u4f7f\u7528\u3001\u76f4\u89c2\u548c\u975e\u4fb5\u5165\u5f0f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u662f\u5bf9\u5e76\u53d1\u8ba1\u7b97\u9694\u79bb\u6a21\u578b\u7684\u6269\u5c55\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef/\u5df2\u7ecf\u4f7f\u7528\u7684\u5e76\u53d1\u8ba1\u7b97\u6a21\u578b\u6765\u6784\u5efa\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u6269\u5c55\u5230\u8fdc\u7a0b\u5de5\u4f5c\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53\u6211\u4eec\u7684\u8ba1\u7b97\u9700\u6c42\u589e\u957f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6269\u5c55\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u6765\u9002\u5e94\u3002\nConcurnas\u62bd\u8c61\u5316\u4e86\u8bb8\u591a\u5173\u4e8e\u7ba1\u7406\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u8270\u82e6\u5de5\u4f5c\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u66f4\u6709\u8da3\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f7f\u7528Concurnas\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u5c06\u7f13\u5b58\u7ed3\u679c\uff0c\u5e76\u5728\u53d1\u751f\u7f51\u7edc\u6545\u969c\u65f6\u7b49\u5f85\u5ba2\u6237\u7aef\u91cd\u65b0\u8fde\u63a5\u3002\n//\u8fdc\u7a0b\u670d\u52a1\u5668\uff1areMServer=new com.concurnas.lang.Dist.RemoteServer()//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000 remServer.startServer()//\u7b49\u5230\u7ec8\u6b62remServer.close()\u3002\n\u7c7bMyCalculator{//\u4f9d\u8d56\u4ee3\u7801-callCounter=0//\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570.def gcd(x int\uff0cy int){//+\u8ba1\u6570\u5668\u548cResult While(Y){(x\uff0cy)=(y\uff0cx mod y)}&#34\uff1bcount\uff1a{++callCounter}\uff0cresult\uff1a{x}&#34\uff1b}}//\u8fdc\u7a0b\u8fde\u63a5\u5e76\u6267\u884cRM=Remote(&#39\uff1b127.0.0.1&#39\uff1b)//\u4f7f\u7528\u9ed8\u8ba4\u7aef\u53e342000\u7ed3\u679c=try{calc=MyCalculator()calc.gcd(344756)//\u8fd8\u4f20\u8f93\u4f9d\u8d56\u4ee3\u7801(MyCalculator.class)\u548c\u5bf9\u8c61\u72b6\u6001(CallCounter).res\u5b57\u7b26\u4e32\uff1a={calc.gcd(97,7081)}\uff01(rm.onailReter())res\uff1aget()}Finally{rm.close()}//result==count\uff1a2\uff0cresult\uff1a97\u3002\n\u4f7f\u7528Concurnas\uff0c\u53ef\u4ee5\u5bf9\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u8fd0\u884c\u63d0\u4ea4\u7ed9\u5b83\u4eec\u7684\u4efb\u4f55\u88ab\u8ba4\u4e3a\u53ef\u4ee5\u5b89\u5168\u6267\u884c\u7684\u4ee3\u7801\u3002\n\u5185\u90e8Concurnas\u5206\u5e03\u5f0f\u8ba1\u7b97API\u5305\u62ec\u5bf9\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u7684\u89c4\u5b9a\uff0c\u8be5\u4f9d\u8d56\u5173\u7cfb\u89e3\u6790\u672c\u8eab\u76f8\u5f53\u590d\u6742\uff0c\u5e76\u4e14\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u80fd\u591f\u6267\u884c\u9759\u6001\u4ee3\u7801\u4f9d\u8d56\u5173\u7cfb\u5206\u6790\uff0c\u4ee5\u4fbf\u9884\u5148\u786e\u5b9a\u5e76\u62a2\u5148\u63d0\u4f9b\u6267\u884c\u6240\u9700\u7684\u4ee3\u7801\u3002\n..", "note_en": "Concurnas is an open source JVM programming language designed for building reliable, scalable, high performance concurrent, distributed and parallel systems\n    Using Concurnas helps organizations take full advantage of modern multi-core CPU and GPU hardware by making concurrent and parallel  programming easier.\n  Concurnas is  interoperable with Java (and other JVM languages) - organizations are able to leverage existing Java software in a concurrent environment.\n  Compared to other languages, with Concurnas  developers need to write fewer lines of code. That code is safer and easier to test, increasing quality and boosting developer productivity.\n    Inspired by languages such as  Python and  Java, Concurnas is a statically typed, garbage collected language utilizing type inference with an easy to learn syntax.\n  Concurnas is a compiled language which runs on the Java Virtual Machine and as such has access to the incredible performance offered by the JVM\n  Concurnas makes it possible to use the same code from a small research prototype to a planet scale distributed production solution\n  Concurnas is an open source technology, free to use and modify. With on going development and commercial support provided by  Concurnas Ltd\n  Concurnas @ JAX London 2020... We will be speaking about Concurnas at  JAX LONDON 2020\n    Concurnas offers a simple but extremely powerful concurrency model which allows you to write concurrent code without having to write boilerplate code to manage threads, critical sections or locks!\n  Concurnas offers first class citizen support for distributed computing as a specialization of concurrent computing\n  Concurnas offers first class citizen support for GPU programming. You can write your code in idiomatic Concurnas code and run on the GPU without having to switch to C/C++!\n  Concurnas offers first class citizen support for interacting with non heap managed, non garbage collected memory. This makes working with GPUs, big data and custom databases a breeze.\n  Concurnas supports all the usual constructs used in modern imperative computing such as: if-elif-else, for, while loops, assertions, exceptions. Plus implicit returns from blocks, with statements, list comprehension, copiers and much much more!\n  Concurnas takes the hard work and boiler plate out of object oriented programming and makes it fun again. Concurnas has advanced support for\r\t\t\tclasses (concrete, abstract, inheritance), generics (in out, wild cards, bounded), enumerations, annotations. As well as new features such as traits, tuples, object providers, typedefs, usage based generic type inference, automatic generation/ redirection of class field getters/setters, class hashcodes and equalities.\n  The functional programming paradigm incorporates a set of tremendously useful approaches to solving problems, but pure functional programming is rarely seen in the wild. With Concurnas we&#39;ve taken the most widely used elements of functional programming, and integrated them into Concurnas. With Concurnas you have access to method and function references, lambdas, partial function evaluation, lazy evaluation, pattern matching plus a whole lot more!\n  Concurnas has first class citizen support for the emerging reactive programming paradigm. With Concurnas you can write code which will react to changes in input parameters automatically - thus allowing you to create reactive pipelines. A very natural way of solving algorithmic problems.\n  Concurnas has first class citizen support for core data structures including arrays, matrices, lists, maps, ranges and sets.\n  A technique popular in the scientific computing community, Concurnas allows you to apply an operator to all elements of an array/matrix/list via a one character operator\n  Concurnas offers a standalone compiler, an interactive REPL shell, Jupyter Notebook, VS Code, Atom and Sublime text support.\n  Concurnas is a null safe language, this helps to eliminate one of the most common sources of bugs in modern programming: the null pointer exception!\n  Concurnas runs on the Java Virtual Machine, which not only gives you access to the JDK and fantastic multi-platform performance offered by the JVM but also compatibility with other JVM languages such as  Java,  Scala,  Kotlin and  Clojure - plus you can easily integrate/use all your existing JVM code without modification.\n  Concurnas is a statically typed language which uses type inference extensively to remove the burden of types. Often times Concurnas code is indistinguishable from Python code (widely recognized as one of the easiest languages to code in) but with the performance of  Java!\n  Programming languages are not just for machines - people need to read them too! Concurnas offers a concise syntax and many shortcuts to make writing easy to read and maintainable code the norm. Concurnas is also able to be verbose, for code which requires that extra bit of clarity.\n  Concurnas has extensive support for Domain Specific Languages via; expression lists, extension functions and operator overloading. Concurnas also supports language extensions, which allow you to directly embed segments of non Concurnas code into your Concurnas code files.\n    def gcd(x int, y int){//greatest common divisor of two integers\r while(y){\r (x, y) = (y, x mod y)\r }\r x\r}\r\rcalc1 = gcd(8, 20)!//run this calculation in an isolate\rcalc2 = gcd(6, 45)!//run this calculation in a separate isolate\r\rcalc3 = calc1 if calc1 &gt; calc2 else calc2\r//^^^ wait for the results of calc1 and calc2 before assigning calc3\n  Concurnas allows you to easily execute computation, concurrently, in separate thread-like containers called  isolates via use of the bang  ! operator.\n  Concurrent computation is often recognized as one of the most difficult aspects of modern software engineering\n  Notice how concurrent computation is a one liner in Concurnas, there is no worry about creating/managing threads, thread pools, life-cycles, locks (or deadlocks!), critical sections, synchronization, wait, notifying threads etc. All this hard stuff is taken care of automatically - leaving you to focus on what&#39;s important.\n    n = 10\r\rnplusone = { n += 1; n }!//perform this calculation in an isolate, a copy of n is made\rnminusone = { n -= 1; n }!//another isolate, on a separate copy of n\r//The above two isolates will never interfere with one another&#39;s copy of n\r\r//nplusone == 11\r//nminusone == 9\n  All code in Concurnas is executed in isolates. Isolates are mapped onto the underlying hardware threads of the machine upon which one is running one&#39;s code. Isolates operate within their own dedicated memory space.\n  All state used in an isolate is copied with the exception of references, actors and some specially marked shareable classes. This isolation of state makes reasoning and designing concurrent algorithms easier since it reduces the need to code for synchronization and race conditions.\n    aRef int://this is a ref of type int\r{//complex isolate executed concurrently eventually sets aRef...\r //complex code here...\r aRef = 10\r}!\r\r//aRef&#39;s current value is requested of it:\rresult int = aRef//If no value has yet been set execution will pause\r\rSystem.out.println(&#34;The value of aRef is: &#34; + result)\n  execount int: = 0\rfor(a in 1 to 10){\r //some complex calculation..\r execount++\r}!//spawn an isolate to execute the above concurrently.\r\rawait(execount; execount==10)//pause further execution until execount == 10\n  aval int://no initial value set\rbval int: = 22 //initial value known\r\rsumvals int: = every(aval, bval) { aval + bval }\r//after initializing above, execution is allowed to carry on...\r\raval = 100\rbval = 200\r\r//every block above will run concurrently and eventually set sumvals to:\rawait(sumvals; sumvals==300)\n  They are not copied between isolates, rather they are shared but provide controlled, atomic access to their changeable state. If a value is not yet set on a ref when it is requested, execution is paused and other isolates are allowed to execute until a value has been set, after which execution continues.\n  We can react to changes to refs via the following reactive programming constructs provided by Concurnas:\n  await\u00a0Will pause execution until a value has been set on a ref and an optional guard condition has been satisfied\n  onchange\u00a0Will trigger execution of its code block to occur concurrently upon any of its monitored refs being changed\n  every\u00a0Behaves as  onchange but will trigger if an initial value has been set on any monitored ref\n    a int:\rb int:\r\rc &lt;= a + b //same as: c int: = every(a, b) { a + b }\rd &lt;- a + b //same as: c int: = onchange(a, b) { a + b }\n  As with most syntactical elements of Concurnas, a concise version of the reactive programming constructs  every and  onchange is provided. This effectively turns reactive computing into a one line operation.\n    account1 int: = 100\raccount2 int: = 100\ronchange(account1, account2) {\r System.out.println(&#34;sum: {account1 + account2}&#34;)\r}\r\rtrans{\r account1 -= 10\r account2 += 10\r}\r\r//will output: &#34;sum: 200&#34;\n  Concurnas supports software transactional memory via the trans block keyword. This allows us to make changes to one or more refs and have those changes visible outside of our transaction on an atomic basis.\n    from com.concurnas.lang.pulsar import Pulsar, RealtimePulsar\rfrom java.time import Duration\r\rpulsar = new RealtimePulsar()\r\roneOffTrigger := pulsar.after(Duration.ofSeconds(10))//schedule event for 10 seconds time...\revery(oneOffTrigger){\r System.out.println(&#34;Current time: &#34; + oneOffTrigger)\r}\r//schedule event every 2 seconds 10 times...\rrepeatingTrigger := pulsar.repeat(Duration.ofSeconds(2), 10)\revery(repeatingTrigger){\r System.out.println(&#34;Current time: &#34; + repeatingTrigger)\r}\n  A common pattern in concurrent systems engineering is to want to have some for of time based trigger, &#34;wait 10 seconds then do x&#34; or &#34;do y every 3 seconds etc&#34; or &#34;perform this action at this certain time&#34;. At Concurnas we refer to this as temporal computing.\n  Temporal computing is supported via the built in Pulsar library found at: com.concurnas.lang.pulsar. This library allows us to schedule activities to take place in the future after a certain amount of time has elapsed. It also allows us to schedule tasks for future repetition.\n  Concurnas offers both a realtime implementation of pulsars and a &#39;Frozen&#39;-time implementation (designed primarily for testing temporal applications), which permits time to be injected as a controlled variable.\n    result = parfor(b in 0 to 10){\r gcd(b, 10-b)\r}\r\r//result == [10:, 1:, 2:, 1:, 2:, 5:, 2:, 1:, 2:, 1:, 10:]\n  Concurnas has first class citizen support for parallel for loops. These are a convenient and intuitive mechanism for performing task based operations in the context of a loop, in parallel. They have the same syntax as conventional loops in Concurnas.\n  actor MyActor{//lets define an actor\r -count = 0\r def increment(){\r count++\r }\r}\r\r//Use of the above actor:\rma = new MyActor()\r\rma.increment()//just like normal method call, will block until execution is complete\r\rsync{//sync - wait for all isolates created in the block to complete\r {ma.increment()}!//called concurrently\r {ma.increment()}!\r}\r\rcount = ma.getCount()\r//count == 3, not possible with regular objects!\n  Actors in Concurnas enable us to build micro-services. Each actor operates within its own dedicated isolate. Actors look and behave just like regular objects from the perspective of the calling code.\n  Actors allow us to write service code in a single threaded style and be able to run them safety in a concurrent manner without having to concern ourselves with synchronization or race conditions as each call to an actor runs sequentially and has exclusive access to the sate of the actor until it completes. Naturally, because actors implement their own concurrency control they are safe to be shared without copying across multiple isolates.\n    class MyCounter(-count int){//ordinary class\r def increment(){\r count++\r }\r}\r\r//We can now define and use our typed actor through the aid of the of keyword as follows:\ractor MyActor of MyCounter(0)\r\r\r//let&#39;s use our new typed actor:\rma = new MyActor()\r\rma.increment()\r\rsync{//sync - wait for all isolates created in the block to complete\r ma.increment()!\r ma.increment()!\r}\r\rcount = ma.count//count == 3\n  Sometimes we do not have the luxury of defining actors from scratch. This is particularly the case if we are working with pre existing code. To this end Concurnas provides typed actors. Typed actors construct their own and wrap around an instance of an ordinary object.\n  Any constructor used to create an instance of the class or method being wrapped is also provided by the typed actor.\n    class MyCounter(-count int){\r def increment(){\r count++\r }\r}\r\rinst1 = actor MyCounter(0) //create a new actor on MyCounter\rinst2 = new actor MyCounter(0) //create a new actor on MyCounter\n  Another way to create a typed actor is to simply use the actor keyword in place of or in addition to the new keyword when creating an instance of an object (now and actor!).\n  //a simple kernel for performing matrix multiplication...\rgpukernel 2 matMult(M int, K int, \r global in A float[2], global in B float[2], global out resultMat float[2]) {\r globalRow = get_global_id(0) \r globalCol = get_global_id(1) \r acc = 0.0f;\r for (k=0; k&lt;K; k++) {\r acc += A[k*M + globalRow] * B[globalCol*K + k]\r }\r resultMat[globalCol*M + globalRow] = acc;\r}\n  Concurnas has first class citizen support for GPU computing. GPUs can be used like CPU co processors and through their use we&#39;re often able to improve the speed of computation for many compute bound problems by over 100x compared to conventional CPU based computation.\n  Central to GPU computing are kernels. These are executed on our GPUs in order to perform computation. Concurnas allows you to create kernels in a subset of the Concurnas programming language. This means we can write idiomatic Concurnas code with only slight modifications in order to perform computation on the GPU.\n    //create an array buffer on a GPU device\rar gpus.GPUBufferInput = device.makeOffHeapArrayMixed&lt;int[]&gt;(int[].class, 10)\r//copy data from the heap into the buffer...\rcopyComplete boolean:gps.GPURef = ar.writeToBuffer([1 2 3 4 5 6 7 8 9 10])\r//perform other computation, possibly on the GPU, whilst we wait for the copy to complete...\rawait(copyComplete)\r\r//an input only buffer\rar gpus.GPUBufferInput = device.makeOffHeapArrayIn&lt;int[]&gt;(int[].class, 10)\r//a 2 by 4 output matrix\rmat gpus.GPUBufferOutput = device.makeOffHeapArrayOut&lt;int[2]&gt;(int[2].class, 2, 4)\n  When we examine algorithms to execute on the GPU, often a big factor in their design and usage concerns transference of data to and from the GPU. Concurnas offers dedicated support for this process.\n  Some of the most efficient GPU algorithms achieve their efficiency by implementing pipelining of data transference and computation together so to always keep the GPU busy doing useful work. Concurnas makes this easy by virtue of its native support for non blocking GPU operations such as data transference via refs.\n    //defining raw C99 compliant OpenCL C code:\r@GPUStubFunction(source=&#34;float plus1(float a, float b){ return a + b;}&#34;)\rgpudef plus1(a float, b float) float\r\r//using existing C99 compliant OpenCL C code:\r@GPUStubFunction(sources=[&#39;./cpucode.cl&#39;, &#39;./gpuutilCode.cl&#39;])\rgpudef plus2(a float, b float) float\n  Concurnas implements GPU computing by using OpenCL. This is advantageous because in addition to its multi vendor support (mainly Intel, Nvidia and AMD) one has access to a whole host of existing library code for GPU computation.\n  Concurnas allows for existing code to be used in one of two ways, either directly via a code string written in C99 compliant OpenCL C code or as a direct file reference in an annotation attached to a stub kernel.\n    //a matrix multiplication algorithm leveraging GPU local memory\rgpukernel 2 matMultLocal(M int, N int, K int, \r constant A float[2], constant B float[2], global out result float[2]) {\r row = get_local_id(0)\r col = get_local_id(1)\r globalRow = CacheSize*get_group_id(0) + row //row of result (0..M)\r globalCol = CacheSize*get_group_id(1) + col //col of result (0..N)\r\t\r //local memory holding cache of CacheSize*CacheSize elements from A and B\r local cacheA = float[CacheSize, CacheSize]\r local cacheb = float[CacheSize, CacheSize]\r\t\r acc = 0.0f\r\t\r //loop over all tiles\r cacheSize int = K/CacheSize\r for (t=0; t&lt;cacheSize; t++) {\r //cache a section of A and B from global memory\r //into local memory tiledRow = CacheSize*t + row\r tiledCol = CacheSize*t + col\r cacheA[col][row] = A[tiledCol*M + globalRow]\r cacheb[col][row] = B[globalCol*K + tiledRow]\r\t\t\r barrier(true)//ensure all work items finished caching\r\t\t\r for (k=0; k&lt;CacheSize; k++) {//accumulate result for matrix subsections\r acc += cacheA[k][row] * cacheb[col][k]\r }\r\t\t\r barrier(true)//ensure all work items finished before moving on to next cache section\r }\r \r result[globalCol*M + globalRow] = acc\r}\n  Concurnas has native idiomatic support for local GPU memory and barriers. Often algorithms with a strong degree of spatial locality benefit hugely in terms of performance when they are implemented with local memory on a GPU\n    The Concurnas GPU implementation provides detailed profiling options. This is useful for both development, in enabling one to debug one&#39;s GPU code so as to determine how much time is spent performing certain operations, and for monitoring purposes\n  //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer(port = 42001)\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  //A client:\rrm = Remote(&#39;localhost&#39;, port = 42001)\r//execute code remotely, returning a ref:\rans int: = {10+10}!(rm.onfailRetry())\rrm.close()\r//ans == 20\n  Concurnas provides an easy to use, intuitive and non invasive solution for distributed computing which acts as an extension of the isolate model of concurrent computation. In this way we are able to use the concurrent computing model which we are used to/have already built our software using and can easily extend this to working on a remote basis. In this way as our computational requirements grow we can easily scale our solutions to accommodate.\n  Concurnas abstracts away much of the hard work Concerning managing distributed computing, allowing us to focus on the more interesting problems which we are trying to solve. For instance, with Concurnas remote servers will cache results and wait for clients to reconnect in the event of network failure.\n    //A remote server:\rremServer = new com.concurnas.lang.dist.RemoteServer()//use default port 42000\rremServer.startServer()\r//wait until time to terminate\rremServer.close()\n  class MyCalculator{//dependent code\r -callCounter = 0\r //greatest common divisor of two integers...\r def gcd(x int, y int){//+ counter and result\r while(y){\r (x, y) = (y, x mod y)\r }\r &#34;count: {++callCounter}, result: {x}&#34;\r }\r}\r\r//connect and execute remotely\rrm = Remote(&#39;127.0.0.1&#39;)//use default port 42000\rresult = try{\r calc = MyCalculator()\r calc.gcd(34, 4756)\r\r //Dependant code (MyCalculator.class) and object state (callCounter) is also transmitted...\r res String: = {calc.gcd(97, 7081)}!(rm.onfailRetry())\r res:get()\r}finally{\r rm.close()\r}\r//result == count: 2, result: 97\n  With Concurnas, remote servers are able to be configured such that they can run any code submit to them deemed safe for execution.\n  The internal Concurnas distributed computing API includes a provision for dependency resolution which itself is quite sophisticated and in the interests of performance is able to perform static code dependency analysis in order to determine and preemptively provide upfront the code that is required in order to execut\n......", "posttime": "2020-05-28 04:55:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,\u7f16\u7a0b\u8bed\u8a00,\u4ee3\u7801", "title": "\u5e76\u53d1\u7f16\u7a0b\u8bed\u8a00(Concurnas Programming Language)", "title_en": "The Concurnas Programming Language", "transed": 1, "url": "https://concurnas.com/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "fb53181a19f8110ed96b1b9f4471f747.jpg", "infoid": 1003985, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92020\u8d22\u5bcc\u4f20\u5a92IP\u6709\u9650\u516c\u53f8\u3002\u7248\u6743\u6240\u6709\u3002\u4f7f\u7528\u672c\u7f51\u7ad9\u5373\u8868\u793a\u63a5\u53d7\u6211\u4eec\u7684\u4f7f\u7528\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56(\u60a8\u7684\u52a0\u5dde\u9690\u79c1\u6743)|CCPA\u8bf7\u52ff\u51fa\u552e\u6211\u7684\u4fe1\u606f\u8d22\u5bcc\u662fFortune Media IP Limited\u7684\u5546\u6807\uff0c\u5728\u7f8e\u56fd\u548c\u5176\u4ed6\u56fd\u5bb6/\u5730\u533a\u6ce8\u518c\u3002\u201c\u8d22\u5bcc\u201d\u6742\u5fd7\u53ef\u80fd\u4f1a\u56e0\u672c\u7f51\u7ad9\u4e0a\u7684\u4e00\u4e9b\u4ea7\u54c1\u548c\u670d\u52a1\u94fe\u63a5\u800c\u83b7\u5f97\u8865\u507f\u3002\u62a5\u76d8\u5982\u6709\u66f4\u6539\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002\u5f15\u6587\u81f3\u5c11\u5ef6\u8fdf\u4e8615\u5206\u949f\u3002\u7531Interactive Data\u63d0\u4f9b\u7684\u5e02\u573a\u6570\u636e\u3002\u6668\u661f\u516c\u53f8\u63d0\u4f9b\u7684ETF\u548c\u5171\u540c\u57fa\u91d1\u6570\u636e\u3002\u9053\u743c\u65af\u6761\u6b3e\u548c\u6761\u4ef6\uff1ahttp://www.djindexes.com/mdsidx/html/tandc/indexestandcs.html.\u3002\u6807\u51c6\u666e\u5c14\u6307\u6570\u6570\u636e\u662f\u829d\u52a0\u54e5\u5546\u54c1\u4ea4\u6613\u6240\u516c\u53f8\u7684\u8d22\u4ea7\u3002\u4ee5\u53ca\u5b83\u7684\u8bb8\u53ef\u4eba\u3002\u7248\u6743\u6240\u6709\u3002\u6761\u6b3e\u548c\u6761\u4ef6\u3002\u7531\u4ea4\u4e92\u5f0f\u6570\u636e\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u652f\u6301\u548c\u5b9e\u65bd\u3002|\u6b27\u76df\u6570\u636e\u4e3b\u9898\u8bf7\u6c42", "note_en": "\u00a9 2020 Fortune Media IP Limited. All Rights Reserved. Use of this site constitutes acceptance of our  Terms of Use and  Privacy Policy ( Your California Privacy Rights) |  CCPA Do Not Sell My Information FORTUNE is a trademark of Fortune Media IP Limited, registered in the U.S. and other countries. FORTUNE may receive compensation for some links to products and services on this website. Offers may be subject to change without notice. Quotes delayed at least 15 minutes. Market data provided by  Interactive Data. ETF and Mutual Fund data provided by  Morningstar, Inc. Dow Jones Terms &amp; Conditions:  http://www.djindexes.com/mdsidx/html/tandc/indexestandcs.html. S&amp;P Index data is the property of Chicago Mercantile Exchange Inc. and its licensors. All rights reserved.  Terms &amp; Conditions. Powered and implemented by  Interactive Data Managed Solutions. |  EU Data Subject Requests", "posttime": "2020-05-28 04:55:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9996\u5e2d,ceo,\u6570\u636e", "title": "AMD\u9996\u5e2d\u6267\u884c\u5b98\u4e3d\u838e\u00b7\u82cf(Lisa Su)\u662f\u6807\u51c6\u666e\u5c14500\u6307\u6570\u6210\u4efd\u80a1\u516c\u53f8\u85aa\u916c\u6700\u9ad8\u7684\u9996\u5e2d\u6267\u884c\u5b98", "title_en": "AMD CEO Lisa Su is highest paid CEO in S&P 500", "transed": 1, "url": "https://fortune.com/2020/05/27/ceo-pay-average-coronavirus-lisa-su-bob-iger-reed-hastings-salary/", "via": "", "real_tags": ["\u9996\u5e2d", "ceo", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5728MacOS10.15.5\u7684\u6d4b\u8bd5\u7248\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2aAPFS\u6587\u4ef6\u7cfb\u7edf\u7f3a\u9677\u3002\u8be5\u9519\u8bef\u7684\u6280\u672f\u7ec6\u8282\u5982\u4e0b\u6240\u793a\uff0c\u4f46\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u4e0d\u80fd\u518d\u4f7f\u7528\u81ea\u5df1\u7684\u6587\u4ef6\u590d\u5236\u673a\u6765\u5efa\u7acbMacOS Catalina\u7cfb\u7edf\u5377\u7684\u521d\u59cb\u53ef\u5f15\u5bfc\u5907\u4efd\u3002\u9700\u8981\u975e\u5e38\u6e05\u695a\u7684\u662f\uff0c\u73b0\u6709\u5907\u4efd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u4e0d\u4f1a\u5f71\u54cdCCC\u4fdd\u5b58\u6570\u636e\u7684\u80fd\u529b\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u542f\u52a8\u76d8\u6216\u5907\u4efd\u76d8\u4e0a\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u3002\u6b64\u9519\u8bef\u7684\u5f71\u54cd\u4ec5\u9650\u4e8e\u521d\u59cb\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\u3002\n\u6240\u4ee5\u90a3\u662f\u4e2a\u67e0\u6aac\u2026\u2026\u3002\u4f46\u662f\uff0c\u563f\uff0c\u5317\u534a\u7403\u7684\u590f\u5929\u5df2\u7ecf\u5230\u4e86\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u505a\u70b9\u67e0\u6aac\u6c34\u5427\uff01\n\u5728\u53bb\u5e74\u7684\u82f9\u679c\u5f00\u53d1\u8005\u5927\u4f1a\u4e0a\uff0c\u82f9\u679c\u5efa\u8bae\u5907\u4efd\u8f6f\u4ef6\u5e94\u8be5\u4f7f\u7528\u82f9\u679c\u8f6f\u4ef6\u8fd8\u539f(ASR)\u6765\u514b\u9686APFS\u5377\u7ec4\u3002\u8d77\u521d\u6211\u5bf9\u6b64\u4e0d\u5c51\u4e00\u987e-\u6211\u4e0d\u5e94\u8be5\u4f7f\u7528\u82f9\u679c\u7684\u9ed1\u5323\u5b50\u5de5\u5177\u6765\u505a\u6211\u7684\u5de5\u4f5c\uff0c\u6211\u66f4\u559c\u6b22\u5bf9\u6211\u7684\u5907\u4efd\u627f\u62c5\u5168\u90e8\u8d23\u4efb\u3002\u7136\u800c\uff0c\u8003\u8651\u5230\u82f9\u679c\u5c06\u7ee7\u7eed\u9650\u5236APFS\u7684\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u6388\u4e88\u5b83\uff0c\u6211\u4eec\u51b3\u5b9a\u6295\u5165\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u6765\u8bc4\u4f30\u8fd9\u4e00\u529f\u80fd\uff0c\u6211\u4eec\u5728\u8fc7\u53bb\u76848\u4e2a\u6708\u91cc\u4e00\u76f4\u5728\u5bf9\u5176\u8fdb\u884cBeta\u6d4b\u8bd5\u3002\u6211\u4e0d\u559c\u6b22\u4f9d\u8d56ASR\u8fdb\u884c\u5e38\u89c4\u5907\u4efd\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u5e76\u4e14\u65e0\u6cd5\u6df1\u5165\u4e86\u89e3\u5176\u5185\u90e8\u6d3b\u52a8(\u4f8b\u5982\uff0c\u590d\u5236\u7684\u6587\u4ef6\u3001\u9047\u5230\u7684\u9519\u8bef)\uff0c\u4f46\u5728\u8fd9\u79cd\u5b9a\u4e49\u975e\u5e38\u72ed\u7a84\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528Apple\u7684\u4e13\u6709\u5b9e\u7528\u7a0b\u5e8f\u6765\u5efa\u7acb\u53ef\u5f15\u5bfc\u7684\u5907\u4efd\u3002\u4e0a\u5468\u65e5\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7248\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u56f4\u7ed5\u6b64\u529f\u80fd\u7684\u65b0\u7528\u6237\u754c\u9762\uff0c\u6211\u4eec\u6253\u7b97\u901a\u8fc7\u5229\u7528ASR\u8fdb\u884c\u521d\u59cb\u5907\u4efd\u6765\u7ee7\u7eed\u751f\u6210\u53ef\u5f15\u5bfc\u7684\u5907\u4efd\u3002\n\u6211\u5df2\u7ecf\u670910.15.4\u7684\u5907\u4efd\uff0c\u66f4\u65b0\u523010.15.5\u540e\u9700\u8981\u505a\u4ec0\u4e48\u7279\u6b8a\u7684\u4e8b\u60c5\u5417\uff1f\n\u4e0d\u662f\u7684\u3002\u5982\u679c\u60a8\u5728\u4ee5\u524d\u7248\u672c\u7684Catalina\u4e0a\u5efa\u7acb\u4e86\u5907\u4efd\uff0c\u5219\u60a8\u7684\u5907\u4efd\u5377\u5df2\u7ecf\u5177\u6709\u529f\u80fd\u6b63\u5e38\u7684\u56fa\u4ef6\u94fe\u63a5\uff0cCCC\u5c06\u7ee7\u7eed\u6b63\u5e38\u66f4\u65b0\u8be5\u5377\u3002\u575a\u6301\u4f7f\u7528CCC 5.1.17\uff0c\u5e76\u5728\u4e0b\u5468\u5de6\u53f3\u66f4\u65b0\u5230CCC 5.1.18\u3002\n\u6211\u6b63\u5728\u5c1d\u8bd5\u521b\u5efa10.15.5\u7684\u65b0\u5907\u4efd\u3002\u5982\u4f55\u7ee7\u7eed\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\uff1f\n\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c10.15.5\uff0c\u5e76\u4e14\u8981\u5c06Catalina\u7cfb\u7edf\u5377\u5907\u4efd\u5230\u7a7a\u78c1\u76d8\uff0c\u5219\u5e94\u4f7f\u7528CCC 5.1.18\u6d4b\u8bd5\u7248\u66ff\u6362\u60a8\u7684CCC\u526f\u672c\u3002\u6253\u5f00CCC 5.1.18\u540e\uff1a\nCCC\u968f\u540e\u5c06\u663e\u793a\u65b0\u7684UI\uff0c\u8be5UI\u5c06\u5f15\u5bfc\u60a8\u5b8c\u6210\u521b\u5efa\u53ef\u5f15\u5bfc\u5907\u4efd\u7684\u8fc7\u7a0b\uff0c\u6216\u8005\u5982\u679c\u60a8\u9009\u62e9\u53ea\u521b\u5efa\u6570\u636e\u5907\u4efd\u7684\u8bdd\u3002\u65b0\u529f\u80fd\u8bb0\u5f55\u5982\u4e0b\uff1a\n\u6211\u4eec\u9884\u8ba1CCC 5.1.18\u7684\u6d4b\u8bd5\u671f\u5f88\u77ed--\u5927\u90e8\u5206\u66f4\u6539\u90fd\u662f\u5728\u65b0\u7684UI\u4e2d\u8fdb\u884c\u7684\uff0c\u540e\u7aef\u529f\u80fd\u5df2\u7ecf\u8fc7\u4e86\u76f8\u5f53\u4e25\u683c\u7684\u6d4b\u8bd5\u3002\u6211\u4eec\u5df2\u7ecf\u5c06\u672c\u5730\u5316\u8d44\u6e90\u53d1\u9001\u7ed9\u6211\u4eec\u7684\u7ffb\u8bd1\u56e2\u961f\uff0c\u6211\u4eec\u9884\u8ba1\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u53d1\u5e035.1.18\u7684\u6700\u7ec8\u7248\u672c\u3002\nCHFLAGS()\u7cfb\u7edf\u8c03\u7528\u4e0d\u80fd\u518d\u5728APFS\u5377\u4e0a\u7684\u6587\u4ef6\u5939\u4e0a\u8bbe\u7f6eSF_FIRMLINK\u6807\u5fd7\u3002\u5b83\u4e0d\u662f\u4ee5\u6211\u4eec\u4f1a\u68c0\u6d4b\u5230\u7684\u9519\u8bef\u4ee3\u7801\u5931\u8d25\uff0c\u800c\u662f\u4ee5\u9759\u9ed8\u65b9\u5f0f\u5931\u8d25-\u5b83\u4ee5\u6210\u529f\u9000\u51fa\u72b6\u6001\u9000\u51fa\uff0c\u4f46\u4ee5\u9759\u9ed8\u65b9\u5f0f\u65e0\u6cd5\u8bbe\u7f6e\u7279\u6b8a\u6807\u5fd7\u3002\u8fd9\u662fCHFLAGS\u7684APFS\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u4e2d\u7684\u4e00\u4e2a\u9519\u8bef-\u5982\u679c\u7cfb\u7edf\u8c03\u7528\u6ca1\u6709\u6267\u884c\u60a8\u8981\u6c42\u5b83\u505a\u7684\u4e8b\u60c5\uff0c\u5b83\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u6210\u529f\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u76f8\u5f53\u4ee4\u4eba\u8ba8\u538c\u7684\u9519\u8bef\u3002\u82f9\u679c\u516c\u53f8\u5ba3\u626c\u8bf4\uff0c\u4f60\u5e94\u8be5\u7ecf\u5e38\u68c0\u67e5\u4f60\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u662f\u8fd9\u6837\u505a\u7684--\u51fa\u4e8e\u5b97\u6559\u539f\u56e0\u3002\u8fd9\u4e2a\u9519\u8bef\u4ece\u6211\u4eec\u8eab\u8fb9\u6e9c\u8d70\u4e86\u591a\u4e45\uff0c\u8c01\u77e5\u9053\u5462\uff0c\u56e0\u4e3a\u7cfb\u7edf\u8c03\u7528\u4ee5\u6210\u529f\u9519\u8bef\u4ee3\u7801\u9000\u51fa\u3002\n\u6211\u4eec\u4e0d\u9700\u8981\u8bbe\u7f6e\u8bb8\u591a\u8fd9\u6837\u7684\u6807\u5fd7\uff0c\u4e5f\u4e0d\u9700\u8981\u7ecf\u5e38\u8bbe\u7f6e\u5b83\u4eec-\u53ea\u9700\u5728\u7b2c\u4e00\u6b21\u5907\u4efdMacOS\u7cfb\u7edf\u5377\u65f6\u5c31\u53ef\u4ee5\u4e86\u3002\u4e0d\u8fc7\uff0c\u5b83\u6070\u597d\u5bf9APFS\u5377\u7ec4\u7684\u529f\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u6b64\u8bbe\u7f6e\u8fd9\u4e9b\u6807\u5fd7\u5931\u8d25\u610f\u5473\u7740\u572810.15.5\u548c\u66f4\u9ad8\u7248\u672c\u4e0a\u521b\u5efa\u7684\u65b0\u7684\u5168\u7cfb\u7edf\u5907\u4efd\u5c06\u4e0d\u80fd\u5f15\u5bfc\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u60a8\u7684\u6570\u636e\u90fd\u4e0d\u5728\u76ee\u6807\u4e0a(\u4e0d\u8fc7\u8981\u6e05\u695a\u7684\u662f\uff0c\u6240\u6709\u6570\u636e\u90fd\u5df2\u5907\u4efd)\u3002\u8fd9\u4e0e\u6211\u4eec\u5728\u8fd9\u91cc\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\u6709\u4e9b\u80cc\u9053\u800c\u9a70\u3002\u73b0\u5728\u5f88\u96be\u627e\u5230\u4eb2\u5207\u7684\u8bed\u8a00\u6765\u8868\u8fbe\u6211\u5bf9\u82f9\u679c\u7684\u611f\u60c5\u3002\u4e0d\u8fc7\uff0c\u6211\u53ea\u60f3\u8bf4\uff0c\u6211\u5bf9\u82f9\u679c\u5728\u70b9\u53d1\u5e03\u7684\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4e2d\u5f15\u5165\u8fd9\u7c7b\u9519\u8bef\u611f\u5230\u975e\u5e38\u5931\u671b\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u770b\u5230\u4e86Catalina\u76845\u4e2a\u4e3b\u8981\u66f4\u65b0\uff0c\u6211\u4eec\u5e94\u8be5\u671f\u5f85\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u770b\u5230\u6bd4\u8fd9\u4e2a\u66f4\u9ad8\u7684\u8d28\u91cf\u3002\n\u4e0a\u5468\u4e00(5\u670818\u65e5)\uff0c\u6211\u5c31\u6b64\u95ee\u9898\u5411\u82f9\u679c\u63d0\u4ea4\u4e86\u4e00\u4efd\u9519\u8bef\u62a5\u544a(FB7706647)\u3002\u6211\u8fd8\u4e0e\u82f9\u679c\u7684\u5f00\u53d1\u8005\u6280\u672f\u652f\u6301\u90e8\u95e8\u53d1\u751f\u4e86\u4e00\u8d77\u4e8b\u4ef6\u3002\u6211\u5f97\u5230\u4e86\u4e00\u4e2a\u540c\u60c5\u7684\u8033\u6735\uff0c\u6709\u4eba\u5411\u82f9\u679c\u5de5\u7a0b\u90e8\u63d0\u51fa\u4e86\u6211\u7684\u89c2\u70b9--\u6211\u975e\u5e38\u611f\u6fc0\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u5207\u90fd\u662f\u5f92\u52b3\u7684\u3002\u6700\u65b0\u768410.15.5\u6d4b\u8bd5\u7248\u4e8e\u4e0a\u5468\u4e09(5\u670820\u65e5)\u53d1\u5e03\uff0c\u6ca1\u6709\u4efb\u4f55\u4fee\u590d\u3002\u4eca\u5929\uff0c\u82f9\u679c\u516c\u53f8\u53d1\u5e03\u4e8610.15.5\uff0c\u5e26\u6709\u8fd9\u4e2a\u4ee4\u4eba\u8ba8\u538c\u7684\u5c0f\u9519\u8bef\uff0c\u800c\u6211\u4eec\u73b0\u5728\u6b63\u5728\u521b\u5efa\u5b8c\u6574\u7684\uff0c\u4f46\u529f\u80fd\u7565\u5dee\u7684\u5907\u4efd\u3002\n\u8fd9\u4f1a\u4e0d\u4f1a\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5b89\u5168\u8865\u4e01--\u4e5f\u8bb8\u82f9\u679c\u4e0d\u60f3\u8ba9\u7b2c\u4e09\u65b9\u521b\u5efaFirmlink\uff1f\n\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd--\u5982\u679c\u8fd9\u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u800c\u5b9e\u9645\u4e0a\u662f\u82f9\u679c\u6545\u610f\u6539\u53d8\u7684\uff0c\u90a3\u4e48\u6211\u4f1a\u8ba4\u4e3a\u8fd9\u8fdc\u8fdc\u6bd4\u4e00\u4e2a\u6f0f\u6d1e\u7cdf\u7cd5\u5f97\u591a\u3002\u9996\u5148\uff0c\u5982\u679c\u7b2c\u4e09\u65b9\u4e0d\u5e94\u8bbe\u7f6e\u6216\u5220\u9664SF_FIRMLINK\u6807\u5fd7\uff0c\u5219\u5e94\u5c06\u5176\u4e0e\u6807\u5fd7\u7684\u5b9a\u4e49\u4e00\u8d77\u8bb0\u5f55(\u5373\u5728/usr/include/sys/stat.h\u4e2d)\u3002\u5176\u6b21\uff0c\u5982\u679c\u60a8\u4e0d\u5141\u8bb8\u8bbe\u7f6eSF_FIRMLINK\u6807\u5fd7\uff0c\u90a3\u4e48\u7cfb\u7edf\u8c03\u7528\u5e94\u8be5\u8fd4\u56de-1\u5e76\u5c06errno\u8bbe\u7f6e\u4e3aEPERM-\u62a5\u544a\u6210\u529f\u548c\u5931\u8d25\u5e94\u53d7\u5230\u8c34\u8d23\u3002\u6700\u540e\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9--\u5728\u6ca1\u6709\u4efb\u4f55\u8b66\u544a\u7684\u60c5\u51b5\u4e0b\u5728\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e2d\u8fdb\u884c\u8fd9\u6837\u7684\u66f4\u6539\u662f\u5bf9\u4f9d\u8d56\u6587\u6863\u529f\u80fd\u7684\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u7684\u516c\u5f00\u654c\u610f\u3002\n\u6211\u60f3\u6211\u4eec\u4f1a\u5728\u672a\u6765\u7684\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e2d\u53d1\u73b0\u8fd9\u662f\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u4ef6\u7cfb\u7edf\u7f3a\u9677\uff0c\u6e9c\u8fdb\u4e86\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff0c\u6216\u8005\u82f9\u679c\u516c\u53f8\u53d1\u73b0\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u63a5\u53d7\u7684\u505a\u6cd5\uff0c\u901a\u8fc7\u5728\u751f\u4ea7\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5e03\u5468\u671f\u7684\u4e2d\u95f4\u6084\u6084\u5730\u5220\u9664\u6587\u6863\u529f\u80fd\uff0c\u4ece\u800c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e0d\u77e5\u4e0d\u89c9\u5730\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002", "note_en": "Early last week we discovered an APFS filesystem bug in a beta of macOS 10.15.5. The  technical details of the bug are laid out below, but the short version is that we&#39;re no longer able to use our own file copier to establish an initial bootable backup of a macOS Catalina System volume.   To be very clear \u2013 existing backups are unaffected, and this has no effect on CCC&#39;s ability to preserve your data, nor any effect on the integrity of the filesystems on your startup disk or your backup disk. The impact of this bug is limited to the  initial creation of a  bootable backup.\n So that&#39;s a lemon... But hey, summer has arrived here in the northern hemisphere, so let&#39;s make some lemonade!\n  Last year at Apple&#39;s Developer Conference, Apple suggested that backup software should use Apple&#39;s &#34;Apple Software Restore&#34; (ASR) for cloning APFS volume groups. Initially I dismissed this \u2013 I shouldn&#39;t have to use Apple&#39;s black-box utility to do my job, I prefer to take full responsibility for my backups. Anticipating a world in which Apple continues to restrict access to APFS rather than grant it, though, we decided to invest a fair amount of time evaluating this functionality, and we&#39;ve been beta testing it for the last 8 months. I don&#39;t like to lean on ASR for general backups because  it has some shortcomings and doesn&#39;t give any insight into its internal activity (e.g. files copied, errors encountered), but in this very narrowly-defined case, we can leverage Apple&#39;s proprietary utility just to  establish bootable backups. We posted a beta last Sunday with new UI around this functionality, and we intend to continue producing bootable backups by leveraging ASR for the initial backup.\n I already have backups of 10.15.4, do I need to do anything special after updating to 10.15.5?\n No. If you established your backup on a previous version of Catalina, then your backup volume already has functional firmlinks and CCC will continue to update that volume just fine. Stick with CCC 5.1.17, and update to CCC 5.1.18 when it&#39;s available in the next week or so.\n I&#39;m trying to create a new backup of 10.15.5. How do I proceed to create a bootable backup?\n If you&#39;re running 10.15.5 and you&#39;re backing up a Catalina system volume to an empty disk, then you should replace your copy of CCC with  the CCC 5.1.18 beta. After you open CCC 5.1.18:\n  CCC will then present new UI that will guide you through the procedure of creating a bootable backup, or if you choose, a Data-only backup instead. The new functionality is documented here:\n  We anticipate a short beta period for CCC 5.1.18 \u2013 the bulk of the changes are in the new UI, the backend functionality has already been tested pretty rigorously. We&#39;ve sent the localization resources off to our translation team, and we anticipate posting a final release of 5.1.18 within the next couple weeks.\n   The  chflags() system call can no longer set the SF_FIRMLINK flag on a folder on an APFS volume. Rather than fail with an error code that we would have detected, it fails silently \u2013 it exits with a  success exit status, but silently fails to set the special flag. That&#39;s a bug in the APFS filesystem implementation of  chflags \u2013 if a system call doesn&#39;t do what you ask it to do, it&#39;s supposed to return an error code, not success. That&#39;s a fairly nasty bug too. Apple preaches that you should always check your error codes, and we do \u2013 religiously. This bug slipped past us for who knows how long because the system call exits with a  success error code.\n We don&#39;t need to set many of these flags, nor set them frequently \u2013 just on the first backup of the macOS system volume. It happens to be essential to  the functionality of an APFS volume group, though, so the failure to set these flags means that new full-system backups created on 10.15.5 and later won&#39;t be bootable, and it will  appear as if none of your data is on the destination (to be clear, though, all of the data is backed up). Kind of the opposite of what we&#39;re trying to do here. It&#39;s hard to find kind words to express my feelings towards Apple right now. Suffice it to say, though, I&#39;m extremely disappointed that Apple would introduce this kind of bug in a dot-release OS update. We&#39;ve seen 5 major updates to Catalina now, we should expect to see higher quality than this from an operating system.\n Last Monday (May 18) I filed a bug report with Apple on this subject (FB7706647). I also opened an incident with Apple&#39;s Developer Technical Support. I got a sympathetic ear, and someone to advocate my case with Apple Engineering \u2013 which I  greatly appreciate. However, it was for naught. The last 10.15.5 beta shipped last Wednesday (May 20) \u2013 without a fix. Then today, Apple shipped 10.15.5 with this nasty little bug, and here we are, creating  whole, but slightly less functional backups.\n Could this simply be a security fix \u2013 maybe Apple doesn&#39;t want third-parties to create firmlinks?\n If that&#39;s the case \u2013 if this is not actually a bug and is actually an intentional change by Apple, then I would argue that this is far worse than a bug. First, if third-parties should not set or remove the SF_FIRMLINK flag, then that should be documented alongside the flag&#39;s definition (i.e. in /usr/include/sys/stat.h). Second, if you&#39;re not going to allow the setting of the SF_FIRMLINK flag, then the system call should return -1 and set errno to EPERM \u2013 reporting success and failing is reprehensible. Last, and most important \u2013 making such a change in a production OS release with no warning is openly hostile to third-party developers who were relying on the  documented functionality.\n I suppose we&#39;ll find out in future OS releases whether this was a simple filesystem bug that slipped into a production OS release, or if Apple finds it to be an acceptable practice to blindside developers by silently removing documented functionality in the middle of a production OS release cycle.", "posttime": "2020-05-28 04:55:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f15\u5bfc,bootable,\u82f9\u679c", "title": "MacOS 10.15.5\u4e2d\u7684\u9519\u8bef\u4f1a\u5f71\u54cd\u53ef\u5f15\u5bfc\u5907\u4efd", "title_en": "A bug in macOS 10.15.5 impacts bootable backups", "transed": 1, "url": "https://bombich.com/blog/2020/05/27/bug-in-macos-10.15.5-impacts-bootable-backups-weve-got-you-covered", "via": "", "real_tags": ["\u5f15\u5bfc", "bootable", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003983, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7edc\u5e76\u4e0d\u50cf\u7528\u8c37\u6b4c\u641c\u7d22\u65f6\u90a3\u6837\u6d41\u7545\u3002\u4f46\u6709\u4e9b\u7ebf\u7a0b\u7684\u2026\u7a0b\u5ea6\u66f4\u9ad8\u3002\u7c98\u6027\u7684\uff0c\u8bf1\u6355\u66f4\u591a\u7684\u773c\u775b\u5e76\u4e0d\u610f\u5473\u7740\u90a3\u4e9b\u7ebf\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ebf\u3002\u800c\u4e14\u4e0d\u786e\u5b9a\u90a3\u4e9b\u7c98\u6027\u7684\u7ebf\u662f\u4e0d\u662f\u6211\u4eec\u9700\u8981\u7684\u7ebf\u3002\n\u522b\u8bef\u4f1a\u6211\u7684\u610f\u601d\u3002\u5e76\u4e0d\u662f\u6240\u6709\u901a\u5411\u5927\u578b\u8282\u70b9\u7684\u7ebf\u7a0b\u90fd\u662f\u574f\u7684\uff0c\u5c3d\u7ba1\u5b83\u4eec\u53ef\u80fd\u662f\u7cbe\u7b80\u7684\u3002\u76f8\u53cd\u5730\u3002\u7cbe\u7b80\u7684\u7ad9\u70b9\u901a\u5e38\u662f\u6709\u6548\u7684\uff0c\u5e76\u4e14\u5305\u542b\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002\n\u4f46\u8fd9\u7bc7\u5e16\u5b50\u4e0d\u662f\u5173\u4e8e\u8fd9\u6837\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u5f97\u5230\u4e86\u8db3\u591f\u7684\u5173\u6ce8\u3002\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u7f51\u7edc\u4e00\u4e9b\u5947\u602a\u89d2\u843d\u7684\u5e16\u5b50\u3002\u6709\u65f6\u9690\u85cf\uff0c\u4f46\u73cd\u73e0-\u7ed9\u6b63\u786e\u7684\u773c\u775b\u3002\n\u5982\u679c\u4f60\u7684\u641c\u7d22\u4e0d\u662f\u975e\u5e38\u660e\u786e\u7684\u8bdd\uff0c\u4f60\u4e0d\u4f1a\u901a\u8fc7\u8c37\u6b4c\u641c\u7d22\u8fdb\u5165\u8fd9\u6837\u7684\u7f51\u7ad9\u3002\u4f60\u662f\u901a\u8fc7\u7f51\u7edc\u7684\u4f20\u95fb\u3001\u4e2a\u4eba\u63a8\u8350\u3001\u6709\u4eba\u6545\u610f\u653e\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u6216\u8bba\u575b\u4e0a\u7684\u94fe\u63a5\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u7684\u3002\u4e0e\u6267\u884c\u641c\u7d22\u65f6\u751f\u6210\u7684\u94fe\u63a5\u76f8\u53cd\u3002\n\u4e0d\u8fc7\u8981\u95ee\u95ee\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u627e\u5230\u4e00\u4e9b\u7f51\u7ad9\uff0c\u5374\u627e\u4e0d\u5230\u5176\u4ed6\u7f51\u7ad9\u5462\uff1f\u5f53\u6211\u4eec\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u67d0\u4ef6\u4e1c\u897f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u7684\u524d10\u540d\u7f51\u7ad9\u662f\u6211\u4eec\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u7b54\u6848\u5417\uff1f\u4e5f\u8bb8\uff0c\u4e5f\u8bb8\u4e0d\u662f\u3002\n\u5f53\u6211\u627e\u5230\u83b1\u683c\u6c83\u5c14\u7279\u7684\u8def\u65f6\uff0c\u6211\u5f88\u60ca\u8bb6\uff0c\u4ed6\u7684\u7535\u5b50\u97f3\u4e50\u5728\u4e00\u4e9b\u5708\u5b50\u91cc\u5f88\u51fa\u540d\u3002Legowelt\u8fd8\u6709\u4e00\u4e2a\u7f8e\u672f\u9986\uff0c\u91cc\u9762\u6709\u5f88\u9177\u7684\u6cb9\u753b\uff0c\u6df7\u97f3\u5e26\uff0c\u5e76\u4e3b\u529e\u4e86\u73b0\u5728\u5df2\u7ecf\u6b7b\u4ea1\u7684\u5f71\u5b50\u72fc\u8d5b\u535a\u670b\u514b\u6742\u5fd7\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u7684\u4e1c\u897f\u3002\n\u5982\u679c\u4e0d\u662f\u6211\u4fe1\u4efb\u7684\u4f5c\u5bb6\u63a8\u8350\u7684(\u6709\u94fe\u63a5\u7684)\u201c\u683c\u91cc\u83ab\u5c14\u62a5\u201d\uff0c\u6211\u4f1a\u627e\u5230\u5b83\u5417\uff1f\u5982\u679c\u6211\u505a\u4e86\uff0c\u6211\u4f1a\u56db\u5904\u6d4f\u89c8\u5417\uff1f\u5f88\u53ef\u80fd\u4e0d\u4f1a\u3002\n\u4ec0\u4e48\u4e1c\u897f\u80fd\u8ba9\u4eba\u8d4f\u5fc3\u60a6\u76ee\uff1f\u4f3c\u4e4e\u662f\u4e5d\u5341\u5e74\u4ee3\u7684\u4e00\u9875\u3002\u5b83\u770b\u8d77\u6765\u5c31\u662f\u4e0d\u4e13\u4e1a\u3002\u4f46\u78b0\u5de7\u7684\u662f\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662fUnix\u76f8\u5173\u6750\u6599\u3001sed\u3001\u5b89\u5168\u65b9\u9762\u7684\u5b9d\u85cf\uff0c\u800c\u8fd9\u7c7b\u548c\u6700\u540e\u4e00\u7bc7\u5e16\u5b50\u662f\u4ece2019\u5e74\u5f00\u59cb\u7684\u3002\n\u5982\u679c\u6211\u4eec\u4ece\u7f8e\u5b66\u7684\u89d2\u5ea6\u6765\u8bc4\u5224\u8fd9\u4e9b\u7f51\u7ad9\uff0c\u90a3\u5c31\u4e0d\u516c\u5e73\u4e86\u3002\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5ffd\u89c6\u5b83\u4eec\u5c06\u662f\u9519\u8bef\u7684\u3002\nLegowelt\u53ef\u80fd\u4f1a\u56e0\u5176\u590d\u53e4\u7684\u6c1b\u56f4\u800c\u88ab\u8ba4\u4e3a\u662f\u65f6\u9ae6\u7684\uff0c\u4f46\u6211\u60f3\u77e5\u9053\u5b83\u662f\u4e0d\u662f\u5728\u5236\u4f5c\u65f6\u5c31\u662f\u6545\u610f\u7684\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u6211\u559c\u6b22Grymoire\u548cLegowelt\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u7f8e\u5b66\u3002\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u6211\u770b\u6765\uff0c\u4ed6\u4eec\u66fe\u7ecf\u505a\u8fc7\u67d0\u79cd\u8bbe\u8ba1\uff0c\u5c31\u662f\u8fd9\u6837\u3002\u4ed6\u4eec\u7684\u91cd\u70b9\u4e00\u76f4\u662f\u5236\u4f5c\u6709\u4ef7\u503c\u7684\u5185\u5bb9\u3002\u8ba9\u8fd9\u4e2a\u4e16\u754c\u548c\u4eba\u6c11\u8fd0\u8f6c\u8d77\u6765\u3002\n\u4ec0\u4e48\u662f\u8d28\u91cf\uff1f\u6211\u4e0d\u77e5\u9053\u3002\u4f46\u662f\u5f53\u6211\u4eb2\u8eab\u7ecf\u5386\u7684\u65f6\u5019\u6211\u5c31\u77e5\u9053\u4e86\u3002\u4f60\u4e5f\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u8d28\u91cf\u3002\u5f53\u6211\u4eec\u542c\u5230\uff0c\u5f53\u6211\u4eec\u770b\u5230\uff0c\u5f53\u6211\u4eec\u54c1\u5c1d\uff0c\u611f\u53d7\uff0c\u751a\u81f3\u55c5\u5230\u65f6\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u3002\u6211\u4eec\u5bf9\u4ec0\u4e48\u6709\u8d28\u91cf\u7684\u770b\u6cd5\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u611f\u77e5\u8d28\u91cf\u7684\u7ecf\u9a8c\u662f\u5982\u6b64\u666e\u904d\u3002\n\u590d\u53e4\u7684\u4e1c\u897f\u53ef\u4ee5\u5f88\u53ef\u7231\uff0c\u4f46\u4f60\u4e0d\u559c\u6b22\u964c\u751f\u7684\u4e1c\u897f(\u5982\u679c\u4f60\u559c\u6b22\u7684\u8bdd)\uff0c\u56e0\u4e3a\u5b83\u6ecb\u517b\u4e86\u4f60\u5bf9\u590d\u53e4\u7684\u6e34\u671b\uff0c\u56e0\u4e3a\u4f60\u6000\u65e7\u3002\u5982\u679c\u4f60\uff0c\u5c31\u50cf\u6211\u4e00\u6837\uff0c\u5c0f\u65f6\u5019\u78b0\u5de7\u73a9RPG\uff0c\u73a9\u7535\u8111\u6e38\u620f\uff0c\u9a91\u81ea\u884c\u8f66\u5230\u5904\u770b\uff0c\u4f60\u770b\u7684\u65f6\u5019\u4f1a\u89c9\u5f97\u6000\u65e7\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u7b2c\u4e00\u5b63\u95ea\u8000\u5149\u8292\u7684\u539f\u56e0\u3002\u5b83\u95ea\u95ea\u53d1\u5149\uff0c\u56e0\u4e3a\u5b83\u5f88\u597d\u5403\u3002\n\u4e5f\u8bb8\u8fd9\u662f\u4e2a\u7cdf\u7cd5\u7684\u5bf9\u6bd4\u3002\u6211\u8ba4\u4e3a\uff0c\u5947\u602a\u7684\u4e1c\u897f\u975e\u5e38\u523b\u610f\u5730\u4f7f\u7528\u610f\u8c61\u3001\u6bd4\u55bb\u548c\u97f3\u4e50\u6765\u4ea7\u751f\u67d0\u79cd\u611f\u89c9\u3002\u6211\u5728\u683c\u91cc\u83ab\u5c14\u548c\u83b1\u683c\u6c83\u5c14\u7279\u7684\u7f8e\u5b66\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u523b\u610f\u7684\u4e1c\u897f\uff0c\u4f46\u5f53\u6211\u8bbf\u95ee\u4ed6\u4eec\u7684\u4e3b\u9875\u65f6\uff0c\u6211\u786e\u5b9e\u4f53\u9a8c\u5230\u4e86\u6781\u597d\u7684\u8d28\u91cf\u3002", "note_en": "The Web is not as streamlined as when searching with Google would have it. But some threads being more\u2026 sticky, and snares more eyes does not mean those threads are the threads we want. And it is not sure that those sticky threads are the threads we need.\n Don&#39;t get me wrong. Not all threads leading to large nodes, streamlined as they may be, are bad. On the contrary. Streamlined sites are often effective and contain valuable information.\n But this post is not about such sites, they get enough attention as it. This is post is about some odd corners of the Web. Sometimes hidden, yet pearls - for the right eyes.\n You won&#39;t get to such sites by googling, if your search is not remarkably explicit. You get there by the hearsay of the Web, a personal recommendation, a link someone deliberately puts on their site or in a forum. The opposite of generated links when doing a search.\n  Ask though, why we find some sites while we don&#39;t find others? Are the streamlined top 10 sites we get when googling something the best &#39;answers&#39; to the &#39;question&#39; we had? Maybe, maybe not.\n I was amazed when I found my way to  Legowelt, famous for his electronic music in some circles. Legowelt also has an art gallery with cool paintings, mixtapes, and host the now-dead The Shadow Wolf cyberpunk magazine, and much else.\n If not writers I trust had recommended (with a link)  The Grymoire, would I have found it? And if I did, would I browse around? Most likely not.\n What meets the eye? A page seemingly from the nineties. It just does not look &#39;professional&#39;. But as so happens, it is considered to be a treasure on Unix related material, sed, security, and the such and the last post is from 2019.\n If we judge such sites from aesthetics, we would not be fair. But most of all, we would make a mistake to ignore them.\n Legowelt may be experienced as hipsteresque with its retro vibes, but I wonder if this was deliberate when it was made? I don&#39;t know. I like The Grymoire and Legowelt because of the content, not because of their aesthetics.\n In both cases, it seems to me they once did some kind of design, and that was that. Their focus has been to produce valuable content. To make the world and people tick.\n What is quality? I don&#39;t know. But I know it when I experience it. And so do you, we all know quality. We know it when we hear, when we see, when we taste, feel, and even smell. Our views on what has quality may vary, but the experience of sensing quality is as such universal.\n  Things retro can be cute, but you don&#39;t like Stranger Things (if you do) because it nourishes your crave for things retro, because of nostalgia. If you, just like me, happend to play RPGs, play computer games, and bike around as a kid you feel nostalgia when watching, but this is not what makes the first season sparkle. It sparkles because it is good.\n A bad comparison perhaps. Stranger Things very deliberately uses, I think, imagery, references, and music to produce certain feelings. And I see nothing deliberate in the aesthetics of The Grymoire and Legowelt, but I do experience splendid quality when visiting their homepages.", "posttime": "2020-05-28 04:55:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f51\u7edc,pearls,\u7f51\u7ad9", "title": "\u4e24\u9897\u7f51\u7edc\u660e\u73e0", "title_en": "Two Pearls of the Web", "transed": 1, "url": "https://herebeseaswines.net/essays/2020-05-27-two-pearls-of-the-web", "via": "", "real_tags": ["\u7f51\u7edc", "pearls", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003981, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u547d\u4ee4\u884c\u754c\u9762\u7684\u8bb8\u591a\u4f18\u70b9\u53ef\u4ee5\u5f52\u56e0\u4e8e\u5b83\u4eec\u5c06\u7528\u6237\u4ea4\u4e92\u5177\u4f53\u5316\u7684\u4e8b\u5b9e\uff1a\u4ea4\u4e92\u672c\u8eab\u88ab\u5236\u4f5c\u6210\u4e00\u4e9b\u2026", "note_en": "Many of the advantages of Command Line Interfaces can be attributed to the fact that they reify the user interaction: the interaction itself is made into som...", "posttime": "2020-05-28 04:19:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5177\u4f53\u5316,reified,\u4ea4\u4e92", "title": "CLI\u662f\u5177\u4f53\u5316\u7684UI(2017)", "title_en": "CLIs are reified UIs (2017)", "transed": 1, "url": "https://www.expressionsofchange.org/reification-of-interaction/", "via": "", "real_tags": ["\u5177\u4f53\u5316", "reified", "\u4ea4\u4e92"]}]