[{"category": "", "categoryclass": "", "imagename": "9a7f4296d3d6d4e55b054dc759b2b8f4.jpg", "infoid": 1003392, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e4e\u6240\u6709\u4eba\u90fd\u540c\u610f\uff0c\u5e7f\u6cdb\u800c\u6301\u4e45\u7684\u5b66\u6821\u505c\u8bfe\u5bf9\u513f\u7ae5\u6709\u5bb3\u3002\u513f\u7ae5\u4e0d\u4ec5\u5728\u5b66\u4e60\u4e0a\u843d\u540e\uff0c\u800c\u4e14\u5b64\u7acb\u4f1a\u635f\u5bb3\u4ed6\u4eec\u7684\u5fc3\u7406\u5065\u5eb7\uff0c\u4f7f\u4e00\u4e9b\u4eba\u5bb9\u6613\u53d7\u5230\u8650\u5f85\u548c\u5ffd\u89c6\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u573a\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5bf9\u513f\u7ae5\u3001\u5b66\u6821\u6559\u804c\u5458\u5de5\u3001\u5bb6\u5ead\u548c\u6574\u4e2a\u793e\u533a\u6765\u8bf4\uff0c\u8fd9\u79cd\u5371\u5bb3\u662f\u5426\u5927\u4e8e\u4fdd\u6301\u5b66\u6821\u5f00\u653e\u548c\u7ed9\u4e88\u51a0\u72b6\u75c5\u6bd2\u66f4\u591a\u4f20\u64ad\u673a\u4f1a\u7684\u98ce\u9669\uff1f\n\u4e00\u4e2a\u672c\u53ef\u4ee5\u660e\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u56fd\u5bb6\u663e\u7136\u6ca1\u6709\u6536\u96c6\u5230\u4efb\u4f55\u6570\u636e\u3002\u4e0e\u5168\u7403\u8d8b\u52bf\u76f8\u53cd\uff0c\u81ea\u51a0\u72b6\u75c5\u6bd2\u51fa\u73b0\u4ee5\u6765\uff0c\u745e\u5178\u4e00\u76f4\u5c06\u65e5\u6258\u4e2d\u5fc3\u548c\u5b66\u6821\u5f00\u653e\u5230\u4e5d\u5e74\u7ea7\uff0c\u800c\u6ca1\u6709\u5bf9\u73ed\u7ea7\u89c4\u6a21\u3001\u5348\u9910\u653f\u7b56\u6216\u8bfe\u95f4\u4f11\u606f\u89c4\u5219\u8fdb\u884c\u4efb\u4f55\u91cd\u5927\u8c03\u6574\u3002\u8fd9\u4f7f\u5f97\u8fd9\u4e2a\u56fd\u5bb6\u6210\u4e3a\u4e00\u4e2a\u5173\u4e8e\u5b66\u6821\u5728\u75c5\u6bd2\u4f20\u64ad\u4e2d\u6240\u626e\u6f14\u89d2\u8272\u7684\u5b8c\u7f8e\u7684\u81ea\u7136\u5b9e\u9a8c\uff0c\u5176\u4ed6\u8bb8\u591a\u4eba\u5728\u91cd\u65b0\u5f00\u5b66\u6216\u601d\u8003\u4f55\u65f6\u8fd9\u6837\u505a\u65f6\u53ef\u4ee5\u4ece\u4e2d\u5438\u53d6\u6559\u8bad\u3002\u7136\u800c\uff0c\u745e\u5178\u5b98\u5458\u6ca1\u6709\u8ddf\u8e2a\u5b66\u9f84\u513f\u7ae5\u7684\u611f\u67d3\u60c5\u51b5-\u5373\u4f7f\u5927\u89c4\u6a21\u75ab\u60c5\u5bfc\u81f4\u4e2a\u522b\u5b66\u6821\u5173\u95ed\u6216\u6559\u804c\u5458\u5de5\u6b7b\u4e8e\u8fd9\u79cd\u75be\u75c5\u3002\n\u745e\u5178\u65d7\u8230\u533b\u5b66\u7814\u7a76\u4e2d\u5fc3\u5361\u7f57\u6797\u65af\u5361\u7814\u7a76\u6240(Ki)\u7684\u4f20\u67d3\u75c5\u6d41\u884c\u75c5\u5b66\u5bb6\u5361\u7433\u5a1c\u00b7\u91d1(Carina King)\u8868\u793a\uff1a\u201c\u6211\u4eec\u672a\u80fd\u56de\u7b54\u4e00\u4e9b\u5173\u4e8e\u4f20\u64ad\u548c\u4e0d\u540c\u5e72\u9884\u63aa\u65bd\u4f5c\u7528\u7684\u76f8\u5bf9\u57fa\u672c\u7684\u95ee\u9898\uff0c\u8fd9\u771f\u7684\u5f88\u4ee4\u4eba\u6cae\u4e27\u3002\u201d\u91d1\u8bf4\uff0c\u5979\u548c\u51e0\u4f4d\u540c\u4e8b\u5df2\u7ecf\u5236\u5b9a\u4e86\u4e00\u9879\u7814\u7a76\u5b66\u6821\u75ab\u60c5\u7684\u65b9\u6848\uff0c\u201c\u4f46\u7f3a\u4e4f\u8d44\u91d1\u3001\u65f6\u95f4\u548c\u4ee5\u524d\u5728\u745e\u5178\u8fdb\u884c\u6b64\u7c7b\u7814\u7a76\u7684\u7ecf\u9a8c\u963b\u788d\u4e86\u6211\u4eec\u7684\u8fdb\u5c55\u3002\u201d\n\u201c\u6211\u4eec\u6b63\u5728\u52aa\u529b\u52a8\u5458\uff0c\u4f46\u73b0\u5b9e\u5730\u8bf4\uff0c\u51e0\u5468\u540e\u5b66\u5e74\u5c31\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u542f\u52a8\u5e76\u8fd0\u884c\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\uff0c\u201dKing\u8bf4\u3002\u5979\u8865\u5145\u8bf4\uff0c\u5979\u5411\u516c\u5171\u536b\u751f\u5f53\u5c40\u8be2\u95ee\u5176\u4ed6\u52aa\u529b\u7684\u7ed3\u679c\u90fd\u662f\u5f92\u52b3\u7684\u3002\u201c\u6709\u4e00\u4e9b\u6570\u636e\u6536\u96c6\u53d1\u751f\u5728\u513f\u7ae5\u8eab\u4e0a\uff0c\u4f46\u4e0d\u662f\u96c6\u4e2d\u5728\u5b66\u6821\uff0c\u6216\u8005\uff0c\u636e\u6211\u6240\u77e5\uff0c\u4e0d\u4f1a\u56de\u7b54\u6709\u5173\u4f20\u8f93\u7684\u95ee\u9898\u3002\u201d\n\u7531\u4e8e\u513f\u7ae5\u5f88\u5c11\u51fa\u73b0\u4e25\u91cd\u7684\u51a0\u72b6\u75c5\u6bd2\u75c7\u72b6\uff0c\u51e0\u4e2a\u56fd\u5bb6\u7684\u513f\u79d1\u533b\u751f\u547c\u5401\u5b66\u6821\u91cd\u65b0\u5f00\u5b66\u3002\u4f46\u4e00\u4e2a\u5173\u952e\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff1a\u56e0\u4e3a\u8f7b\u5fae\u75c7\u72b6\u7684\u4eba\u53ef\u80fd\u5177\u6709\u6781\u5f3a\u7684\u4f20\u67d3\u6027\uff0c\u5e76\u7ecf\u5e38\u5f15\u53d1\u5927\u91cf\u611f\u67d3\uff0c\u5b66\u6821\u662f\u5426\u4e5f\u662f\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u7684\u6765\u6e90\uff0c\u53ef\u80fd\u662f\u7531\u611f\u89c9\u826f\u597d\u4f46\u53ef\u4ee5\u5c06\u75c5\u6bd2\u4f20\u67d3\u7ed9\u5f7c\u6b64\u3001\u4ed6\u4eec\u7684\u8001\u5e08\u548c\u4ed6\u4eec\u7684\u5bb6\u4eba\u7684\u5b69\u5b50\u63a8\u52a8\u7684\uff1f\n\u4e16\u754c\u5404\u5730\u7684\u536b\u751f\u5b98\u5458\u548c\u7814\u7a76\u4eba\u5458\u90fd\u5728\u4e89\u5148\u6050\u540e\u5730\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u5173\u952e\u662f\u8ffd\u8e2a\u53d7\u611f\u67d3\u7684\u513f\u7ae5\u662f\u5426\u5c06\u75c5\u6bd2\u4f20\u64ad\u7ed9\u4e0e\u4ed6\u4eec\u6709\u8fc7\u63a5\u89e6\u7684\u4eba\u3002\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\u5f6d\u535a\u516c\u5171\u536b\u751f\u5b66\u9662\u6d41\u884c\u75c5\u5e94\u5bf9\u653f\u7b56\u4e13\u5bb6\u5b89\u59ae\u5854\u00b7\u897f\u585e\u7f57(Anita Cicero)\u8868\u793a\uff1a\u201c\u6211\u62c5\u5fc3\u4eba\u4eec\u53ef\u80fd\u4f1a\u4ed3\u4fc3\u5224\u65ad\uff0c\u8ba4\u4e3a\u6ca1\u6709\u75c7\u72b6\u7684\u5b66\u6821\u513f\u7ae5\u6ca1\u6709\u5c06\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u7ed9\u6210\u5e74\u4eba\uff0c\u201d\u5979\u662f\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u5f6d\u535a\u516c\u5171\u536b\u751f\u5b66\u9662(Bloomberg School Of Public Health)\u5927\u6d41\u884c\u5e94\u5bf9\u653f\u7b56\u7684\u4e13\u5bb6\u3002\u201c\u5728\u745e\u5178\uff0c\u4ed6\u4eec\u6709\u96be\u5f97\u7684\u673a\u4f1a\u66f4\u597d\u5730\u4e86\u89e3(\u5b66\u6821)\u4f20\u64ad\u94fe\u3002\u4f46\u662f\u4f60\u627e\u4e0d\u5230\u4f60\u4e0d\u627e\u7684\u4e1c\u897f\u3002\u7f8e\u56fd\u548c\u5176\u4ed6\u6709\u5c01\u95ed\u5b66\u6821\u7684\u56fd\u5bb6\u80af\u5b9a\u4f1a\u4ece\u8fd9\u9879\u7814\u7a76\u4e2d\u53d7\u76ca\u3002\u201c\u3002\nKi\u7684\u4e34\u5e8a\u6d41\u884c\u75c5\u5b66\u5bb6\u827e\u739b\u00b7\u5f17\u5170\u65af(Emma Frans)\u4e5f\u5b9a\u671f\u5728\u62a5\u7eb8\u4e0a\u64b0\u5199\u5173\u4e8e\u79d1\u5b66\u548c\u5065\u5eb7\u7684\u4e13\u680f\u6587\u7ae0\uff0c\u5979\u8bf4\uff0c\u745e\u5178\u5728\u5927\u6d41\u884c\u671f\u95f4\u7684\u603b\u4f53\u76ee\u6807\u5e76\u4e0d\u662f\u5b8c\u5168\u6d88\u9664\u4f20\u64ad\uff0c\u800c\u662f\u9632\u6b62\u536b\u751f\u7cfb\u7edf\u8d1f\u62c5\u8fc7\u91cd\uff0c\u5e76\u4fdd\u62a4\u8001\u5e74\u4eba\u3002(\u524d\u8005\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u4f46\u540e\u8005\u6ca1\u6709\u6210\u529f\uff1a\u745e\u5178\u7597\u517b\u9662\u5c45\u6c11\u7684\u6b7b\u4ea1\u7387\u975e\u5e38\u9ad8\u3002)\u3002\u8c08\u5230\u5b66\u6821\uff0c\u5f17\u5170\u65af\u8bf4\uff0c\u201c\u5927\u591a\u6570\u745e\u5178\u4eba\u5bf9(\u4ed6\u4eec)\u7684\u5f00\u653e\u90fd\u5f88\u6ee1\u610f\u3002\u201d\u5979\u627f\u8ba4\uff0c\u7f3a\u4e4f\u6570\u636e\u662f\u4e00\u4e2a\u9519\u5931\u7684\u673a\u4f1a\u3002\u7531\u4e8e\u745e\u5178\u7684\u4e2d\u592e\u536b\u751f\u7cfb\u7edf\u548c\u5927\u91cf\u7684\u8bb0\u5f55\uff0c\u5982\u679c\u6709\u66f4\u591a\u7684\u68c0\u6d4b\uff0c\u201c\u672c\u6765\u53ef\u4ee5\u201d\u76f8\u5f53\u5bb9\u6613\u5730\u8ffd\u8e2a\u75c5\u4f8b\u3002\n\u4f46Ki\u513f\u79d1\u533b\u751f\u548c\u4e34\u5e8a\u6d41\u884c\u75c5\u5b66\u5bb6Jonas Ludvisson\u53d1\u8868\u4e86\u4e24\u7bc7\u5173\u4e8e\u513f\u7ae5\u51a0\u72b6\u75c5\u6bd2\u7684\u7efc\u8ff0\u6587\u7ae0\uff0c\u4ed6\u8ba4\u4e3a\u8ffd\u8e2a\u611f\u67d3\u8005\u7684\u63a5\u89e6\u8005\u5728\u76ee\u524d\u7684\u75ab\u60c5\u4e2d\u7528\u5904\u4e0d\u5927\u3002\u201c\u8be5\u75c5\u6bd2\u5728\u793e\u4f1a\u4e0a\u975e\u5e38\u666e\u904d\uff0c\u8d1f\u8d23\u4efb\u7684\u4eba\u8ba4\u4e3a\u8ffd\u8e2a\u4e2a\u4eba\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u6211\u4eec\u53ea\u68c0\u6d4b\u6709\u75c7\u72b6\u7684\u4e2a\u4f53\u3002\u6211\u540c\u610f\u8fd9\u4e00\u70b9\uff0c\u201c\u4ed6\u5728\u56de\u7b54\u201d\u79d1\u5b66\u201c\u6742\u5fd7\u8be2\u95ee\u7814\u7a76\u4eba\u5458\u662f\u5426\u5728\u8ddf\u8e2a\u5b66\u6821\u75ab\u60c5\u65f6\u5199\u9053\u3002\n\u5362\u5fb7\u7ef4\u683c\u677e\u8865\u5145\u8bf4\uff0c\u745e\u5178\u7684\u9690\u79c1\u6cd5\u5141\u8bb8\u536b\u751f\u4fdd\u5065\u4eba\u5458\u548c\u5b66\u6821\u5b98\u5458\u53ea\u5728\u201c\u5f53\u4e00\u4e2a\u4eba\u6709\u751f\u547d\u5371\u9669\u7684\u60c5\u51b5\u4e0b\u201d\u624d\u80fd\u901a\u77e5\u5bb6\u957f\u548c\u5b66\u6821\u5de5\u4f5c\u4eba\u5458\u611f\u67d3\u4e86\u75c5\u6bd2\u3002\u4ed6\u8bf4\uff0c\u7531\u4e8e\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u7684\u4e25\u91cd\u5e76\u53d1\u75c7\u5728\u513f\u7ae5\u4e2d\u975e\u5e38\u7f55\u89c1\uff0c\u8fd9\u4e0d\u9002\u7528\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u75c5\u4f8b\u3002\u201c\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u60a8\u81ea\u5df1\u7684\u5b69\u5b50\u2026\u3002\u6709\u51a0\u72b6\u75c5\u6bd2\uff0c\u201c\u4ed6\u5199\u9053\u3002\u201c\u6ca1\u6709\u4e00\u4e2a\u5b69\u5b50\u613f\u610f\u548c\u611f\u67d3\u51a0\u72b6\u75c5\u6bd2\u7684\u5b69\u5b50\u4e00\u8d77\u73a9\uff0c\u5373\u4f7f\u5927\u591a\u6570\u5b69\u5b50\u6ca1\u6709\u75c7\u72b6\uff0c\u6216\u8005\u53ea\u662f\u2018\u53d1\u70e7\u548c\u54b3\u55fd\u2019\u3002\u201d\n\u57285\u670819\u65e5\u53d1\u8868\u5728\u201c\u513f\u79d1\u5b66\u62a5\u201d\u4e0a\u7684\u4e00\u7bc7\u7efc\u8ff0\u8bba\u6587\u4e2d\uff0c\u8def\u5fb7\u7ef4\u68ee\u5f97\u51fa\u7ed3\u8bba\uff0c\u513f\u7ae5\u201c\u4e0d\u592a\u53ef\u80fd\u662f\u201d\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u7684\u4e3b\u8981\u9a71\u52a8\u529b\u3002\u4ed6\u5f15\u7528\u4e86\u6cd5\u56fd\u548c\u6fb3\u5927\u5229\u4e9a\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u4f46\u4ed6\u5199\u9053\uff0c\u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u745e\u5178\u5b66\u6821\u7206\u53d1\u51a0\u72b6\u75c5\u6bd2\u7684\u62a5\u544a\u201d\uff0c\u5f15\u7528\u4e86\u745e\u5178\u56fd\u5bb6\u6d41\u884c\u75c5\u5b66\u5bb6\u5b89\u5fb7\u65af\u00b7\u7279\u5185\u5c14(Anders Tegnell)5\u670812\u65e5\u7684\u201c\u4e2a\u4eba\u4ea4\u6d41\u201d\u3002\u8def\u5fb7\u7ef4\u683c\u68ee\u5199\u9053\uff1a\u201c\u8fd9\u652f\u6301\u4e86\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u4e0a\u5b66\u7684\u65e0\u75c7\u72b6\u513f\u7ae5\u4e0d\u592a\u53ef\u80fd\u4f20\u64ad\u8fd9\u79cd\u75be\u75c5\u3002\u201d\n\u7136\u800c\uff0c\u5bf9\u745e\u5178\u62a5\u7eb8\u7684\u626b\u63cf\u6e05\u695a\u5730\u8868\u660e\uff0c\u5b66\u6821\u7206\u53d1\u4e86\u75ab\u60c5\u3002\u5728Skellefte\u00ad\u9547\uff0c\u4e00\u6240\u4ece\u5b66\u9f84\u524d\u5230\u4e5d\u5e74\u7ea7\u7ea6\u6709500\u540d\u5b66\u751f\u7684\u5b66\u6821\uff0c\u4e00\u540d\u6559\u5e08\u6b7b\u4ea1\uff0c76\u540d\u6559\u804c\u5458\u5de5\u4e2d\u670918\u4eba\u68c0\u6d4b\u5448\u9633\u6027\u3002\u7531\u4e8e\u592a\u591a\u6559\u804c\u5458\u5de5\u751f\u75c5\uff0c\u5b66\u6821\u5173\u95ed\u4e86\u4e24\u5468\uff0c\u4f46\u5b66\u751f\u4eec\u6ca1\u6709\u63a5\u53d7\u75c5\u6bd2\u68c0\u6d4b\u3002\u5728\u4e4c\u666e\u8428\u62c9\uff0c\u5f53\u5b66\u6821\u5b98\u5458\u4ee5\u60a3\u8005\u9690\u79c1\u89c4\u5b9a\u4e3a\u7531\uff0c\u62d2\u7edd\u901a\u77e5\u5bb6\u4eba\u6216\u5de5\u4f5c\u4eba\u5458\u4e00\u540d\u6559\u5e08\u68c0\u6d4b\u5448\u9633\u6027\u65f6\uff0c\u5de5\u4f5c\u4eba\u5458\u8868\u793a\u6297\u8bae\u3002\u5b66\u6821\u6ca1\u6709\u505a\u4efb\u4f55\u63a5\u89e6\u8005\u8ffd\u8e2a\u3002\u5176\u4ed6\u5b66\u6821\u81f3\u5c11\u6709\u4e24\u540d\u5de5\u4f5c\u4eba\u5458\u6b7b\u4ea1\uff0c\u4f46\u8fd9\u4e9b\u5b66\u6821\u4ecd\u7136\u5f00\u653e\uff0c\u6ca1\u6709\u4eba\u8bd5\u56fe\u8ffd\u8e2a\u75be\u75c5\u5728\u90a3\u91cc\u7684\u4f20\u64ad\u60c5\u51b5\u3002\u5f53\u88ab\u95ee\u53ca\u8fd9\u4e9b\u6848\u4ef6\u65f6\uff0c\u8def\u5fb7\u7ef4\u683c\u677e\u8bf4\u4ed6\u4e0d\u77e5\u9053\u8fd9\u4e9b\u6848\u4ef6\u3002\u4ed6\u6ca1\u6709\u56de\u5e94\u6709\u5173\u4ed6\u662f\u5426\u4f1a\u4fee\u6539\u8bc4\u8bba\u6587\u7ae0\u4ee5\u7eb3\u5165\u8fd9\u4e9b\u5185\u5bb9\u7684\u8be2\u95ee\u3002\n\u5173\u4e8e\u5b66\u6821\u5728\u4f20\u64ad\u4e2d\u7684\u4f5c\u7528\u7684\u95f4\u63a5\u7ebf\u7d22\u53ef\u80fd\u6765\u81ea\u6297\u4f53\u7814\u7a76\u30025\u670819\u65e5\uff0c\u745e\u5178\u516c\u5171\u536b\u751f\u5c40\u516c\u5e03\u4e86\u5bf99\u4e2a\u5730\u533a1100\u4eba\u8fdb\u884c\u7684\u6297\u4f53\u8c03\u67e5\u7684\u521d\u6b65\u7ed3\u679c\u3002\u4ed6\u4eec\u62a5\u544a\u8bf4\uff0c\u513f\u7ae5\u548c\u9752\u5c11\u5e74\u7684\u6297\u4f53\u6d41\u884c\u7387\u4e3a4.7%\uff0c\u800c20\u5c81\u81f364\u5c81\u7684\u6210\u5e74\u4eba\u4e3a6.7%\uff0c65\u5c81\u81f370\u5c81\u7684\u4eba\u4e3a2.7%\u3002\u513f\u7ae5\u7684\u53d1\u75c5\u7387\u76f8\u5bf9\u8f83\u9ad8\uff0c\u8fd9\u8868\u660e\u53ef\u80fd\u5728\u5b66\u6821\u91cc\u51fa\u73b0\u4e86\u660e\u663e\u7684\u4f20\u64ad\u3002\u8be5\u673a\u6784\u6ca1\u6709\u63d0\u4f9b\u66f4\u5177\u4f53\u7684\u6570\u636e\u6765\u533a\u5206\u5e74\u9f84\u8f83\u5c0f\u7684\u5b69\u5b50\u548c\u5df2\u7ecf\u8f6c\u5411\u8fdc\u7a0b\u6559\u5b66\u7684\u9ad8\u4e2d\u548c\u5927\u5b66\u7684\u5b69\u5b50\u3002\n\u745e\u5178\u9519\u5931\u7684\u673a\u4f1a\u6572\u54cd\u4e86\u8b66\u949f\uff0c\u91d1\u8bf4\uff1a\u201c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u597d\u5b9e\u65bd\u57fa\u672c\u6d41\u884c\u75c5\u5b66\u7684\u65b9\u6848\u3002\u201d\u5176\u4ed6\u6b27\u6d32\u56fd\u5bb6\u76ee\u524d\u6b63\u5728\u8fdb\u884c\u7684\u7814\u7a76\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u63d0\u4f9b\u66f4\u591a\u7ebf\u7d22\u3002\u897f\u585e\u7f57\u548c\u4ed6\u7684\u540c\u4e8b\u4e0a\u5468\u53d1\u51fa\u547c\u5401\uff0c\u8981\u6c42\u201c\u586b\u8865\u7a7a\u767d\u201d\uff0c\u4ee5\u4e86\u89e3\u7f8e\u56fd\u5b66\u6821\u5728\u6d41\u611f\u5927\u6d41\u884c\u4e2d\u6240\u626e\u6f14\u7684\u89d2\u8272\u3002\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u56fd\u5bb6\u6388\u6743\uff0c\u4f18\u5148\u5b89\u6392\u5e76\u8fc5\u901f\u8d44\u52a9\u7814\u7a76\uff0c\u4ee5\u56de\u7b54\u8fd9\u4e9b\u79d1\u5b66\u95ee\u9898\u3002\u201d\u201c\u968f\u7740\u5b66\u6821\u91cd\u65b0\u5f00\u5b66\uff0c(\u8ba1\u7b97\u673a)\u6a21\u578b\u4e0d\u8db3\u4ee5\u786e\u5b9a\u5b66\u9f84\u513f\u7ae5\u53ca\u5176\u6559\u5e08\u548c\u7167\u987e\u8005\u751f\u6d3b\u4e2d\u9762\u4e34\u7684\u5b9e\u9645\u98ce\u9669\u3002\u201d", "note_en": "There\u2019s nearly universal agreement that widespread, long-lasting school closures harm children. Not only do children fall behind in learning, but isolation harms their mental health and leaves some vulnerable to abuse and neglect. But during this pandemic, does that harm outweigh the risk\u2014to children, school staff, families, and the community at large\u2014of keeping schools open and giving the coronavirus more chances to spread?\n The one country that could have definitively answered that question has apparently failed to collect any data. Bucking a global trend, Sweden has kept daycare centers and schools through ninth grade open since COVID-19 emerged, without any major adjustments to class size, lunch policies, or recess rules. That made the country a perfect natural experiment about schools\u2019 role in viral spread that many others could have learned from as they  reopen schools or ponder when to do so. Yet Swedish officials have not tracked infections among school children\u2014even when large outbreaks led to the closure of individual schools or staff members died of the disease.\n    \u201cIt\u2019s really frustrating that we haven\u2019t been able to answer some relatively basic questions on transmission and the role of different interventions,\u201d says Carina King, an infectious disease epidemiologist at the Karolinska Institute (KI), Sweden\u2019s flagship medical research center. King says she and several colleagues have developed a protocol to study school outbreaks, \u201cbut the lack of funding, time, and previous experience of conducting this sort of research in Sweden has hampered our progress.\u201d\n \u201cWe are trying to mobilize, but realistically with the school year ending in a few weeks, it seems unlikely we will be able to get what we want up and running,\u201d says King, who adds that her queries to public health authorities about other efforts have come up empty. \u201cThere is some data collection happening in children, but it\u2019s not focused around schools or, as far as I know, will not answer questions around transmission.\u201d\n Because children  rarely suffer severe symptoms of COVID-19,  pediatricians in  several countries have called for schools to reopen. But a key question remains: Because people with mild symptoms can be extremely infectious and frequently spark  large clusters of infections, could schools also be a source of COVID-19 outbreaks, possibly driven by children who feel fine but can pass the virus to each other, their teachers, and their families?\n    Health officials and researchers around the world are scrambling to answer that question. Key to that effort is tracing whether infected children spread the virus to people they\u2019ve been in contact with. \u201cI\u2019m concerned that there may be a rush to judgment that asymptomatic school children aren\u2019t spreading COVID-19 to adults,\u201d says Anita Cicero, an expert in pandemic response policy at Johns Hopkins University\u2019s Bloomberg School of Public Health. \u201cIn Sweden, they have had a rare opportunity to understand [school] transmission chains better. But you can\u2019t find what you don\u2019t look for. The U.S. and other countries with closed schools would certainly benefit from that research.\u201d\n Emma Frans, a clinical epidemiologist at KI who also writes a regular newspaper column on science and health, says Sweden\u2019s overall goal during the pandemic has not been to eliminate transmission completely, but to prevent the health system from becoming overburdened and to protect the elderly. (It has succeeded at the former but not the latter: Sweden has suffered very high mortality among nursing home residents.) Regarding schools, Frans says, \u201cMost people in Sweden are quite happy with [them] being open.\u201d She acknowledges the lack of data is a missed opportunity. With Sweden\u2019s centralized health system and extensive records, \u201cit would have been possible\u201d to track cases fairly easily had there been more testing.\n But KI pediatrician and clinical epidemiologist Jonas Ludvigsson, who has published two review articles about COVID-19 in children, thinks tracing infected people\u2019s contacts is of little use at this point in the epidemic. \u201cThe virus is so widespread in society that responsible people do not think it is a good idea to trace individuals. We only test symptomatic individuals. I agree with that,\u201d he wrote in response to  Science asking whether researchers were tracking school outbreaks.\n Ludvigsson added that Swedish privacy laws allow health care personnel and school officials to notify parents and school staff about an infection only \u201cif a person\u2019s life is at risk.\u201d Because severe complications from the new coronavirus  are so rare in children, that does not apply to cases of COVID-19, he says. \u201cConsider if your own child \u2026 had COVID-19,\u201d he wrote. \u201cNone of the kids will want to play with a child who has COVID-19, even if most kids will have no symptoms or only \u2018some fever and a cough.\u2019\u201d\n In a review paper published 19 May in  Acta Paediatrica, Ludvigsson concluded that  children are \u201cunlikely to be the main drivers\u201d of COVID-19 spread. He cited case studies from France and  Australia but wrote that, \u201cSo far there have been no reports of COVID-19 outbreaks in Swedish schools,\u201d citing \u201cpersonal communication\u201d from Anders Tegnell, Sweden\u2019s state epidemiologist, on 12 May. \u201cThis supports the argument that asymptomatic children attending schools are unlikely to spread the disease,\u201d Ludvigsson wrote.\n However, a scan of Swedish newspapers makes clear that school outbreaks have occurred. In the town of Skellefte\u00e5,  a teacher died and 18 of 76 staff tested positive at a school with about 500 students in preschool through ninth grade. The school closed for 2 weeks because so many staff were sick, but students were not tested for the virus. In Uppsala, staff protested when school officials,  citing patient privacy rules, declined to notify families or staff that a teacher had tested positive. No contact tracing was done at the school. At  least two staff members at other schools have died, but those schools remained open and no one attempted to trace the spread of the disease there. When asked about these cases, Ludvigsson said he was unaware of them. He did not respond to a query about whether he would amend the review article to include them.\n An indirect clue about schools\u2019 role in spread might come from antibody studies. On 19 May, the Swedish Public Health Agency announced  preliminary results from antibody surveys of 1100 people from nine regions. They reported that antibody prevalence in children and teenagers was 4.7%, compared with 6.7% in adults age 20 to 64 and 2.7% in 65- to 70-year-olds. The relatively high rate in children suggests there may have been significant spread in schools. The agency did not provide more specific data to distinguish between younger children and those in high schools and universities, which have switched to remote teaching.\n The missed opportunity in Sweden is a wake-up call, King says: \u201cWe need ready-to-implement protocols for basic epidemiology during these situations.\u201d Studies now underway in other European countries may soon provide more clues. And Cicero and colleagues issued a  call last week to \u201cfill in the blanks\u201d in the understanding of U.S. schools\u2019 role in the pandemic. \u201cWe need a national mandate to prioritize and quickly fund research to answer these scientific questions,\u201d they wrote. \u201cAs schools reopen, [computer] models are not sufficient to determine the actual risk to school-aged children and the teachers and caregivers in their lives.\u201d", "posttime": "2020-05-23 20:17:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u6d6a\u8d39,wasted", "title": "\u745e\u5178\u5982\u4f55\u6d6a\u8d39\u4e86\u5728\u5b66\u6821\u7814\u7a76\u51a0\u72b6\u75c5\u6bd2\u7684\u201c\u96be\u5f97\u673a\u4f1a\u201d", "title_en": "How Sweden wasted a \u2018rare opportunity\u2019 to study coronavirus in schools", "transed": 1, "url": "https://www.sciencemag.org/news/2020/05/how-sweden-wasted-rare-opportunity-study-coronavirus-schools", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u6d6a\u8d39", "wasted"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u53d1SARS-CoV-2\u75ab\u82d7\u7684\u91cd\u8981\u6027\u600e\u4e48\u5f3a\u8c03\u90fd\u4e0d\u4e3a\u8fc7--\u5b83\u88ab\u89c6\u4e3a\u6062\u590d\u6b63\u5e38\u751f\u6d3b\u7684\u5feb\u8f66\u9053\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u82f1\u56fd\u536b\u751f\u5927\u81e3\u9a6c\u7279\u00b7\u6c49\u8003\u514b(Matt Hancock)\u8bf4\u82f1\u56fd\u201c\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u201d\u3002\n\u4f46\u662f\uff0c\u5c3d\u7ba1\u5df2\u7ecf\u542f\u52a8\u4e86\u8bd5\u9a8c\uff0c\u5df2\u7ecf\u7b7e\u7f72\u4e86\u5236\u9020\u534f\u8bae-\u725b\u6d25\u5927\u5b66(Oxford University)\u73b0\u5728\u6b63\u5728\u4e3a\u4e0b\u4e00\u9636\u6bb5\u7684\u7814\u7a76\u62db\u52df1\u4e07\u540d\u5fd7\u613f\u8005-\u4f46\u90e8\u957f\u4eec\u548c\u4ed6\u4eec\u7684\u987e\u95ee\u6700\u8fd1\u51e0\u5929\u660e\u663e\u53d8\u5f97\u66f4\u52a0\u8c28\u614e\u3002\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u82f1\u56fd\u526f\u9996\u5e2d\u533b\u7597\u5b98\u4e54\u7eb3\u68ee\u00b7\u8303-\u5854\u59c6(Jonathan Van-Tam)\u8bf4\u4e86\u4e00\u53e5\u6ca1\u4eba\u60f3\u542c\u7684\u8bdd\uff1a\u201c\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u6211\u4eec\u80fd\u4e0d\u80fd\u63a5\u79cd\u75ab\u82d7\u3002\u201d\n\u75ab\u82d7\u5728\u539f\u7406\u4e0a\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u5374\u5f88\u590d\u6742\u3002\u7406\u60f3\u7684\u75ab\u82d7\u53ef\u4ee5\u9884\u9632\u611f\u67d3\uff0c\u9632\u6b62\u5176\u4f20\u64ad\uff0c\u800c\u4e14\u662f\u5b89\u5168\u7684\u3002\u4f46\u6b63\u5982\u75ab\u82d7\u65f6\u95f4\u8868\u6240\u663e\u793a\u7684\u90a3\u6837\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u662f\u5bb9\u6613\u5b9e\u73b0\u7684\u3002\n\u5728\u79d1\u5b66\u5bb6\u5206\u79bb\u51fa\u5bfc\u81f4\u827e\u6ecb\u75c5\u7684HIV\u75c5\u6bd230\u591a\u5e74\u540e\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u75ab\u82d7\u3002\u767b\u9769\u70ed\u75c5\u6bd2\u662f\u57281943\u5e74\u88ab\u53d1\u73b0\u7684\uff0c\u4f46\u7b2c\u4e00\u79cd\u75ab\u82d7\u76f4\u5230\u53bb\u5e74\u624d\u88ab\u6279\u51c6\uff0c\u5373\u4f7f\u5728\u90a3\u65f6\uff0c\u4eba\u4eec\u4e5f\u62c5\u5fc3\u5b83\u4f1a\u4f7f\u4e00\u4e9b\u4eba\u7684\u611f\u67d3\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u3002\u6709\u53f2\u4ee5\u6765\u7814\u53d1\u901f\u5ea6\u6700\u5feb\u7684\u75ab\u82d7\u662f\u9488\u5bf9\u816e\u817a\u708e\u7684\u3002\u82b1\u4e86\u56db\u5e74\u65f6\u95f4\u3002\n\u79d1\u5b66\u5bb6\u4eec\u4ee5\u524d\u66fe\u81f4\u529b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u7684\u7814\u7a76\uff0c\u56e0\u6b64\u5e76\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u7684\u3002\u4e24\u79cd\u51a0\u72b6\u75c5\u6bd2\u4ee5\u524d\u4e5f\u5f15\u8d77\u8fc7\u81f4\u547d\u7684\u7206\u53d1\uff0c\u5373Sars\u548cMers\uff0c\u8fd9\u4e24\u79cd\u75c5\u6bd2\u7684\u75ab\u82d7\u7814\u7a76\u90fd\u5728\u8fdb\u884c\u4e2d\u3002\u4f46\u6ca1\u6709\u4e00\u5bb6\u83b7\u5f97\u8bb8\u53ef\uff0c\u90e8\u5206\u539f\u56e0\u662fSars\u5931\u8d25\u4e86\uff0cMERS\u662f\u4e2d\u4e1c\u7684\u5730\u533a\u6027\u7ec4\u7ec7\u3002\u5438\u53d6\u7684\u7ecf\u9a8c\u6559\u8bad\u5c06\u5e2e\u52a9\u79d1\u5b66\u5bb6\u521b\u9020\u4e00\u79cd\u9488\u5bf9SARS-CoV-2\u7684\u75ab\u82d7\uff0c\u4f46\u5173\u4e8e\u8be5\u75c5\u6bd2\u4ecd\u6709\u8bb8\u591a\u53ef\u6015\u7684\u4e1c\u897f\u9700\u8981\u4e86\u89e3\u3002\n\u4e00\u4e2a\u4e3b\u8981\u7684\u62c5\u5fe7\u662f\u51a0\u72b6\u75c5\u6bd2\u5e76\u4e0d\u503e\u5411\u4e8e\u89e6\u53d1\u6301\u4e45\u7684\u514d\u75ab\u529b\u3002\u5927\u7ea6\u56db\u5206\u4e4b\u4e00\u7684\u666e\u901a\u611f\u5192\u662f\u7531\u4eba\u7c7b\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684\uff0c\u4f46\u514d\u75ab\u53cd\u5e94\u6d88\u9000\u5f97\u5982\u6b64\u4e4b\u5feb\uff0c\u4ee5\u81f3\u4e8e\u4eba\u4eec\u53ef\u80fd\u5728\u7b2c\u4e8c\u5e74\u518d\u6b21\u611f\u67d3\u3002\n\u725b\u6d25\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u6700\u8fd1\u5206\u6790\u4e86\u5eb7\u590d\u7684\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u7684\u8840\u6db2\uff0c\u53d1\u73b0IgG\u6297\u4f53-\u90a3\u4e9b\u5bf9\u66f4\u6301\u4e45\u7684\u514d\u75ab\u529b\u8d1f\u8d23\u7684\u6297\u4f53-\u5728\u611f\u67d3\u7684\u7b2c\u4e00\u4e2a\u6708\u6025\u5267\u4e0a\u5347\uff0c\u4f46\u968f\u540e\u53c8\u5f00\u59cb\u4e0b\u964d\u3002\n\u4e0a\u5468\uff0c\u7ebd\u7ea6\u6d1b\u514b\u83f2\u52d2\u5927\u5b66\u7684\u79d1\u5b66\u5bb6\u53d1\u73b0\uff0c\u5927\u591a\u6570\u5728\u6ca1\u6709\u4f4f\u9662\u7684\u60c5\u51b5\u4e0b\u4ece\u51a0\u72b6\u75c5\u6bd2\u4e2d\u5eb7\u590d\u7684\u4eba\u5e76\u6ca1\u6709\u4ea7\u751f\u5f88\u591a\u9488\u5bf9\u8be5\u75c5\u6bd2\u7684\u6740\u624b\u7ea7\u6297\u4f53\u3002\n\u201c\u8fd9\u662f\u7279\u522b\u5177\u6709\u6311\u6218\u6027\u7684\uff0c\u201d\u7231\u8377\u534e\u5927\u5b66\u7684\u8d44\u6df1\u51a0\u72b6\u75c5\u6bd2\u7814\u7a76\u5458\u65af\u5766\u5229\u00b7\u73c0\u5c14\u66fc(Stanley Perlman)\u8bf4\u3002\u201c\u5982\u679c\u81ea\u7136\u611f\u67d3\u4e0d\u80fd\u7ed9\u4f60\u5e26\u6765\u90a3\u4e48\u9ad8\u7684\u514d\u75ab\u529b\uff0c\u9664\u975e\u662f\u4e25\u91cd\u611f\u67d3\uff0c\u90a3\u4e48\u75ab\u82d7\u4f1a\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u3002\u201c\u3002\u5982\u679c\u4e00\u79cd\u75ab\u82d7\u53ea\u4fdd\u62a4\u4e00\u5e74\uff0c\u75c5\u6bd2\u5c31\u4f1a\u4f34\u968f\u6211\u4eec\u4e00\u6bb5\u65f6\u95f4\u3002\n\u75c5\u6bd2\u7684\u9057\u4f20\u7a33\u5b9a\u6027\u4e5f\u5f88\u91cd\u8981\u3002\u4e00\u4e9b\u75c5\u6bd2\uff0c\u5982\u6d41\u611f\uff0c\u53d8\u5f02\u5f97\u5982\u6b64\u4e4b\u5feb\uff0c\u4ee5\u81f3\u4e8e\u75ab\u82d7\u7814\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u6bcf\u5e74\u53d1\u5e03\u65b0\u7684\u914d\u65b9\u3002\u827e\u6ecb\u75c5\u6bd2\u7684\u5feb\u901f\u6f14\u53d8\u662f\u6211\u4eec\u6ca1\u6709\u75ab\u82d7\u7684\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0cSARS-CoV-2\u51a0\u72b6\u75c5\u6bd2\u4f3c\u4e4e\u76f8\u5f53\u7a33\u5b9a\uff0c\u4f46\u5b83\u6b63\u5728\u83b7\u5f97\u53d8\u5f02\uff0c\u5c31\u50cf\u6240\u6709\u75c5\u6bd2\u4e00\u6837\u3002\u5728\u75c5\u6bd2\u7684\u86cb\u767d\u8d28\u201c\u5c16\u5cf0\u201d\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e9b\u57fa\u56e0\u53d8\u5316\uff0c\u8fd9\u4e9b\u201c\u5c16\u5cf0\u201d\u662f\u5927\u591a\u6570\u75ab\u82d7\u7684\u57fa\u7840\u3002\u5982\u679c\u523a\u7a81\u86cb\u767d\u53d8\u5f02\u592a\u591a\uff0c\u75ab\u82d7\u4ea7\u751f\u7684\u6297\u4f53\u5b9e\u9645\u4e0a\u5c31\u4f1a\u8fc7\u65f6\uff0c\u53ef\u80fd\u65e0\u6cd5\u6709\u6548\u5730\u7ed3\u5408\u75c5\u6bd2\u4ee5\u9632\u6b62\u611f\u67d3\u3002\n\u4f26\u6566\u536b\u751f\u4e0e\u70ed\u5e26\u533b\u5b66\u9662(London School Of Hygiene And Tropical Medicine)\u65b0\u5174\u4f20\u67d3\u75c5\u6559\u6388\u9a6c\u4e01\u00b7\u5e0c\u4f2f\u5fb7(Martin Hibberd)\u66fe\u5e2e\u52a9\u8bc6\u522b\u8be5\u75c5\u6bd2\u7684\u4e00\u4e9b\u53d8\u5f02\uff0c\u4ed6\u79f0\u5176\u4e3a\u201c\u65e9\u671f\u9884\u8b66\u201d\u3002\n\u5728\u6025\u4e8e\u5f00\u53d1\u75ab\u82d7\u7684\u8fc7\u7a0b\u4e2d-\u73b0\u5728\u6709100\u591a\u79cd\u75ab\u82d7\u5728\u5f00\u53d1\u4e2d-\u5b89\u5168\u5fc5\u987b\u4ecd\u7136\u662f\u4f18\u5148\u4e8b\u9879\u3002\u4e0e\u9488\u5bf9\u91cd\u75c5\u60a3\u8005\u7684\u5b9e\u9a8c\u836f\u7269\u4e0d\u540c\uff0c\u8be5\u75ab\u82d7\u5c06\u63a5\u79cd\u7ed9\u6570\u5341\u4ebf\u901a\u5e38\u5065\u5eb7\u7684\u6f5c\u5728\u4eba\u7fa4\u3002\n\u8fd9\u610f\u5473\u7740\u79d1\u5b66\u5bb6\u5c06\u4e0d\u5f97\u4e0d\u6781\u5176\u4ed4\u7ec6\u5730\u68c0\u67e5\u5371\u9669\u526f\u4f5c\u7528\u7684\u8ff9\u8c61\u3002\u57282004\u5e74\u5bfb\u627e\u975e\u5178\u75ab\u82d7\u7684\u8fc7\u7a0b\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u4e00\u79cd\u5019\u9009\u75ab\u82d7\u5bfc\u81f4\u4e86\u96ea\u8c82\u7684\u809d\u708e\u3002\u53e6\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u662f\u201c\u6297\u4f53\u8bf1\u5bfc\u589e\u5f3a\u201d\uff0c\u5373\u75ab\u82d7\u4ea7\u751f\u7684\u6297\u4f53\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u672a\u6765\u7684\u611f\u67d3\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u3002\u8fd9\u4e00\u6548\u5e94\u5728\u540c\u65f6\u7ed9\u4e88SARS\u548cMES\u5b9e\u9a8c\u6027\u75ab\u82d7\u7684\u52a8\u7269\u4e2d\u9020\u6210\u4e86\u4e25\u91cd\u7684\u80ba\u635f\u4f24\u3002\n\u5f17\u6717\u897f\u65af\u00b7\u514b\u91cc\u514b\u7814\u7a76\u6240(Francis Crick Institute)\u5168\u7403\u6d41\u611f\u4e2d\u5fc3\u4e3b\u4efb\u7ea6\u7ff0\u00b7\u9ea6\u8003\u5229(John McCauley)\u8868\u793a\uff0c\u7406\u89e3\u6bcf\u79cd\u75ab\u82d7\u5e26\u6765\u7684\u7279\u6b8a\u6311\u6218\u9700\u8981\u65f6\u95f4\u3002\u201c\u4f60\u4e0d\u77e5\u9053\u6bcf\u79cd\u75ab\u82d7\u90fd\u4f1a\u7ed9\u4f60\u5e26\u6765\u7684\u56f0\u96be\u548c\u5177\u4f53\u7684\u56f0\u96be\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u800c\u4e14\u6211\u4eec\u6ca1\u6709\u5904\u7406\u8fd9\u79cd\u75c5\u6bd2\u6216\u75c5\u6bd2\u7ec4\u4ef6\u7684\u7ecf\u9a8c\u3002\u201d\n\u5f53\u82f1\u56fd\u9996\u76f8\u9c8d\u91cc\u65af\u00b7\u7ea6\u7ff0\u900a(Boris Johnson)\u5728\u7b2c10\u53f7\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\u8868\u793a\uff0c\u75ab\u82d7\u201c\u7edd\u4e0d\u662f\u6709\u4fdd\u8bc1\u7684\u201d\u65f6\uff0c\u4ed6\u7684\u9996\u5e2d\u79d1\u5b66\u987e\u95ee\u5e15\u7279\u91cc\u514b\u00b7\u74e6\u4f26\u65af(Patrick Vallance)\u8868\u793a\u540c\u610f\uff0c\u4f46\u8865\u5145\u8bf4\uff1a\u201c\u5982\u679c\u6211\u4eec\u6700\u7ec8\u6ca1\u6709\u53d6\u5f97\u4ec0\u4e48\u6210\u679c\uff0c\u6211\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u201d\u8bb8\u591a\u79d1\u5b66\u5bb6\u90fd\u8ba4\u540c\u8fd9\u4e00\u89c2\u70b9\u3002\n\u90a3\u4e9b\u6b63\u5728\u5f00\u53d1\u4e2d\u7684\u75c5\u6bd2\u81f3\u5c11\u5229\u7528\u4e86\u516b\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4ece\u51cf\u5f31\u548c\u706d\u6d3b\u7684\u75c5\u6bd2\u5230\u5c06\u9057\u4f20\u5bc6\u7801\u8d70\u79c1\u5230\u63a5\u53d7\u8005\u7ec6\u80de\u4e2d\u7684\u6280\u672f\uff0c\u7136\u540e\u8fd9\u4e9b\u6280\u672f\u5927\u91cf\u751f\u4ea7\u51fa\u5c16\u5cf0\u86cb\u767d\uff0c\u4f9b\u514d\u75ab\u7cfb\u7edf\u5236\u9020\u6297\u4f53\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u75ab\u82d7\u4f1a\u4ea7\u751f\u6301\u4e45\u7684\u3001\u9ad8\u6c34\u5e73\u7684\u6297\u4f53\u6765\u6d88\u706d\u75c5\u6bd2\uff0c\u4e5f\u4f1a\u4ea7\u751f\u201cT\u201d\u7ec6\u80de\u6765\u6467\u6bc1\u53d7\u611f\u67d3\u7684\u7ec6\u80de\u3002\u4f46\u6bcf\u79cd\u75ab\u82d7\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u4eca\u5929\u6ca1\u6709\u4eba\u77e5\u9053\u54ea\u79cd\u514d\u75ab\u53cd\u5e94\u8db3\u591f\u597d\u3002\n\u9886\u5bfc\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(WHO)\u5e94\u5bf9\u975e\u5178\u75ab\u60c5\u7684\u5927\u536b\u00b7\u6d77\u66fc(David Heymann)\u8bf4\uff1a\u201c\u6211\u4eec\u751a\u81f3\u4e0d\u77e5\u9053\u75ab\u82d7\u662f\u5426\u80fd\u4ea7\u751f\u514d\u75ab\u53cd\u5e94\uff0c\u4ece\u800c\u4fdd\u62a4\u4eba\u4eec\u514d\u53d7\u672a\u6765\u7684\u611f\u67d3\u3002\u201d\n\u7f8e\u56fd\u751f\u7269\u6280\u672f\u516c\u53f8\u6469\u5fb7\u7eb3\u62a5\u544a\u8bf4\uff0c\u572825\u540d\u63a5\u53d7\u75ab\u82d7\u63a5\u79cd\u7684\u5eb7\u590d\u60a3\u8005\u4e2d\uff0c\u6297\u4f53\u6c34\u5e73\u4e0e\u5eb7\u590d\u60a3\u8005\u7684\u6297\u4f53\u6c34\u5e73\u76f8\u4f3c\u3002\n\u725b\u6d25\u5927\u5b66\u7684\u53e6\u4e00\u79cd\u75ab\u82d7\u5e76\u6ca1\u6709\u963b\u6b62\u7334\u5b50\u611f\u67d3\u75c5\u6bd2\uff0c\u4f46\u4f3c\u4e4e\u786e\u5b9e\u9884\u9632\u4e86\u80ba\u708e\uff0c\u80ba\u708e\u662f\u5bfc\u81f4\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u6b7b\u4ea1\u7684\u4e3b\u8981\u539f\u56e0\u3002\n\u5982\u679c\u4eba\u7c7b\u505a\u51fa\u540c\u6837\u7684\u53cd\u5e94\uff0c\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u4ecd\u7136\u4f1a\u4f20\u64ad\u75c5\u6bd2\uff0c\u4f46\u6b7b\u4e8e\u8be5\u75c5\u6bd2\u7684\u53ef\u80fd\u6027\u8f83\u5c0f\u3002\n\u75ab\u82d7\u6548\u679c\u7684\u597d\u574f\u51b3\u5b9a\u4e86\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\u6709\u4e86\u4e00\u79cd\u53ef\u4ee5\u4fdd\u62a4\u6570\u5e74\u7684\u9ad8\u6548\u75ab\u82d7\uff0c\u5404\u56fd\u53ef\u4ee5\u901a\u8fc7\u4fdd\u62a4\u81f3\u5c11\u4e09\u5206\u4e4b\u4e8c\u7684\u4eba\u53e3\u6765\u5b9e\u73b0\u7fa4\u4f53\u514d\u75ab\u529b\u3002\n\u5e73\u5747\u800c\u8a00\uff0c\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u4f1a\u5c06\u75c5\u6bd2\u4f20\u67d3\u7ed9\u5176\u4ed6\u4e09\u4eba\uff0c\u4f46\u5982\u679c\u4e24\u4eba\u6216\u66f4\u591a\u4eba\u5177\u6709\u514d\u75ab\u529b\uff0c\u75ab\u60c5\u5c31\u4f1a\u5e73\u606f\u4e0b\u6765\u3002\u8fd9\u662f\u6700\u597d\u7684\u60c5\u51b5\u3002\n\u66f4\u6709\u53ef\u80fd\u7684\u662f\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u79cd\u75ab\u82d7\uff0c\u6216\u8005\u4e00\u4e9b\u53ea\u6709\u90e8\u5206\u6709\u6548\u7684\u75ab\u82d7\u3002\n\u542b\u6709\u5f31\u6bd2\u682a\u7684\u75ab\u82d7\u5bf9\u8001\u5e74\u4eba\u53ef\u80fd\u662f\u5371\u9669\u7684\uff0c\u4f46\u53ef\u80fd\u4f1a\u7ed9\u514d\u75ab\u7cfb\u7edf\u66f4\u5f3a\u5927\u7684\u5e74\u8f7b\u4eba\u63a5\u79cd\uff0c\u4ee5\u51cf\u5c11\u611f\u67d3\u7684\u4f20\u64ad\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8001\u5e74\u4eba\u53ef\u80fd\u4f1a\u63a5\u79cd\u7b80\u5355\u7684\u75ab\u82d7\uff0c\u9632\u6b62\u611f\u67d3\u8fdb\u5c55\u4e3a\u5371\u53ca\u751f\u547d\u7684\u80ba\u708e\u3002\u9ea6\u8003\u5229\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u6ca1\u6709\u8bf1\u5bfc\u514d\u75ab\u529b\u7684\u80fd\u529b\uff0c\u4f60\u5c31\u5fc5\u987b\u5236\u5b9a\u4e00\u79cd\u7b56\u7565\u6765\u51cf\u5c11\u611f\u67d3\u7684\u4e25\u91cd\u540e\u679c\u3002\u201d\n\u4f46\u90e8\u5206\u6709\u6548\u7684\u75ab\u82d7\u4e5f\u6709\u5176\u81ea\u8eab\u7684\u95ee\u9898\uff1a\u4e00\u79cd\u4e0d\u80fd\u963b\u6b62\u75c5\u6bd2\u590d\u5236\u7684\u75ab\u82d7\u53ef\u80fd\u4f1a\u9f13\u52b1\u8010\u836f\u83cc\u682a\u8fdb\u5316\uff0c\u4ece\u800c\u4f7f\u75ab\u82d7\u6210\u4e3a\u591a\u4f59\u7684\u3002\n\u6d88\u706d\u75c5\u6bd2\u7684\u5e0c\u671b\u59cb\u4e8e\u75ab\u82d7\uff0c\u4f46\u5e76\u4e0d\u5c40\u9650\u4e8e\u6b64\u3002\u201c\u5982\u679c\u6211\u4eec\u6709\u75ab\u82d7\uff0c\u4f60\u5f97\u5230\u7684\u4e0d\u662f\u5f69\u8679\u548c\u72ec\u89d2\u517d\uff0c\u201d\u9886\u5bfc\u4e16\u536b\u7ec4\u7ec7\u6839\u9664\u5929\u82b1\u8ba1\u5212\u7684PanDefense Consulting\u9996\u5e2d\u6267\u884c\u5b98\u62c9\u91cc\u00b7\u5e03\u91cc\u8fde\u7279(Larry Brilliant)\u8bf4\u3002\u5982\u679c\u6211\u4eec\u88ab\u8feb\u9009\u62e9\u4e00\u79cd\u53ea\u6709\u4e00\u5e74\u4fdd\u62a4\u671f\u7684\u75ab\u82d7\uff0c\u90a3\u4e48\u6211\u4eec\u6ce8\u5b9a\u4f1a\u8ba9Covid\u6210\u4e3a\u5730\u65b9\u6027\u75be\u75c5\uff0c\u4e00\u79cd\u6c38\u8fdc\u4f34\u968f\u7740\u6211\u4eec\u7684\u611f\u67d3\u3002\u201c\u3002\n\u7528\u4e00\u79cd\u6301\u7eed\u6570\u5e74\u7684\u75ab\u82d7\u4ecd\u7136\u5f88\u96be\u5f81\u670d\u8fd9\u79cd\u75c5\u6bd2\u3002\n\u5e03\u91cc\u8fde\u7279\u8bf4\uff1a\u201c\u9664\u6389Covid\u5c06\u6bd4\u6e05\u9664\u5929\u82b1\u66f4\u96be\u3002\u201d\u5bf9\u4e8e\u5929\u82b1\uff0c\u81f3\u5c11\u5f88\u6e05\u695a\u8c01\u88ab\u611f\u67d3\u4e86\uff0c\u800c\u51a0\u72b6\u75c5\u6bd2\u643a\u5e26\u8005\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u7684\u60c5\u51b5\u4e0b\u4f20\u64ad\u5b83\u3002\u4e00\u4e2a\u66f4\u68d8\u624b\u7684\u95ee\u9898\u662f\uff0c\u53ea\u8981\u611f\u67d3\u5728\u4e00\u4e2a\u56fd\u5bb6\u8086\u8650\uff0c\u6240\u6709\u5176\u4ed6\u56fd\u5bb6\u90fd\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\n\u6b63\u5982\u536b\u751f\u90e8\u524d\u514d\u75ab\u53f8\u957f\u5927\u536b\u00b7\u7d22\u5c14\u5179\u4f2f\u91cc(David Salisbury)\u6700\u8fd1\u5728\u82f1\u56fd\u7687\u5bb6\u56fd\u9645\u4e8b\u52a1\u7814\u7a76\u6240(Chatham House)\u7684\u4e00\u6b21\u7f51\u7edc\u7814\u8ba8\u4f1a\u4e0a\u6240\u8bf4\u7684\u90a3\u6837\uff1a\u201c\u9664\u975e\u6211\u4eec\u6709\u4e00\u79cd\u6570\u91cf\u60ca\u4eba\u7684\u75ab\u82d7\uff0c\u53ef\u4ee5\u5728\u4e16\u754c\u6240\u6709\u793e\u533a\u4ee5\u6781\u5feb\u7684\u901f\u5ea6\u63a5\u79cd\uff0c\u5426\u5219\u6211\u4eec\u7684\u9632\u5fa1\u5c06\u51fa\u73b0\u6f0f\u6d1e\uff0c\u75c5\u6bd2\u53ef\u4ee5\u7ee7\u7eed\u4f20\u64ad\u3002\u201d\n\u6216\u8005\u6b63\u5982\u5e03\u91cc\u8fde\u7279\u6240\u8bf4\uff0c\u8be5\u75c5\u6bd2\u5c06\u201c\u5728\u65f6\u95f4\u548c\u5730\u7406\u4e0a\u6765\u56de\u4e52\u4e53\u7403\u201d\u3002\n\u75ab\u82d7\u8054\u76dfGavi\u63d0\u51fa\u7684\u4e00\u9879\u5efa\u8bae\u662f\uff0c\u901a\u8fc7\u201c\u63d0\u524d\u5e02\u573a\u627f\u8bfa\u201d\u63d0\u9ad8\u5168\u7403\u75ab\u82d7\u7684\u53ef\u83b7\u5f97\u6027\u3002\u5e03\u91cc\u8fde\u7279\u8ba4\u4e3a\uff0c\u73b0\u5728\u5fc5\u987b\u6572\u5b9a\u67d0\u79cd\u5168\u7403\u534f\u8bae\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u73b0\u5728\u5e94\u8be5\u8981\u6c42\u53ec\u5f00\u4e00\u6b21\u5168\u7403\u4f1a\u8bae\uff0c\u8ba8\u8bba\u6211\u4eec\u5728\u63a5\u79cd\u75ab\u82d7\u65f6\u6216\u4e0d\u63a5\u79cd\u75ab\u82d7\u65f6\u8981\u505a\u4e9b\u4ec0\u4e48\u3002\u201d\n\u201c\u5982\u679c\u75ab\u82d7\u7684\u83b7\u53d6\u3001\u6d4b\u8bd5\u3001\u9a8c\u8bc1\u3001\u5236\u9020\u3001\u4ea4\u4ed8\u8ba1\u5212\u4ee5\u53ca\u5728\u4e16\u754c\u5404\u5730\u5efa\u7acb\u75ab\u82d7\u9879\u76ee\u7684\u8fc7\u7a0b\u90fd\u50cf\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u6837\u957f\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u5f00\u59cb\u4ed6\u5988\u7684\u8ba1\u5212\u5427\u3002\u201d\n\u4eba\u4eec\u5c06\u4e0d\u5f97\u4e0d\u9002\u5e94-\u751f\u6d3b\u5c06\u4f1a\u6539\u53d8\u3002\u6d77\u66fc\u8bf4\uff0c\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4e60\u60ef\u4e8e\u5bf9\u611f\u67d3\u8fdb\u884c\u5e7f\u6cdb\u7684\u76d1\u6d4b\uff0c\u5e76\u4ee5\u8fc5\u901f\u7684\u75ab\u60c5\u63a7\u5236\u4e3a\u540e\u76fe\u3002\u4eba\u4eec\u4e5f\u5fc5\u987b\u53d1\u6325\u81ea\u5df1\u7684\u4f5c\u7528\uff0c\u4fdd\u6301\u6d17\u624b\uff0c\u4fdd\u6301\u8eab\u4f53\u8ddd\u79bb\uff0c\u907f\u514d\u805a\u4f1a\uff0c\u7279\u522b\u662f\u5728\u5c01\u95ed\u7684\u7a7a\u95f4\u91cc\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u6539\u53d8\u7528\u9014\u7684\u836f\u7269\u6bd4\u75ab\u82d7\u6d4b\u8bd5\u66f4\u5feb\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u75ab\u82d7\u51fa\u73b0\u4e4b\u524d\u8fdb\u884c\u6297\u75c5\u6bd2\u6216\u6297\u4f53\u6cbb\u7597\u3002\u75c7\u72b6\u51fa\u73b0\u65f6\u7acb\u5373\u6cbb\u7597\u81f3\u5c11\u53ef\u4ee5\u964d\u4f4e\u6b7b\u4ea1\u7387\u3002\n\u9999\u6e2f\u5927\u5b66(University Of Hong Kong)\u4f20\u67d3\u75c5\u6559\u6388\u8881\u56fd\u52c7\u5efa\u8bae\u4ed6\u7684\u653f\u5e9c\uff0c\u6240\u6709\u7684\u793e\u4f1a\u8ddd\u79bb\u90fd\u53ef\u4ee5\u653e\u677e-\u4f46\u524d\u63d0\u662f\u4eba\u4eec\u5fc5\u987b\u5728\u706b\u8f66\u548c\u5de5\u4f5c\u573a\u6240\u7b49\u5c01\u95ed\u7684\u7a7a\u95f4\u91cc\u6234\u4e0a\u53e3\u7f69\uff0c\u800c\u4e14\u5728\u97f3\u4e50\u4f1a\u548c\u7535\u5f71\u9662\u4e0d\u5403\u4efb\u4f55\u98df\u7269\u6216\u996e\u6599\u3002\n\u5728\u9910\u5385\uff0c\u9910\u684c\u5fc5\u987b\u76f8\u4e92\u4fdd\u62a4\uff0c\u670d\u52a1\u4eba\u5458\u5c06\u4e25\u683c\u9075\u5b88\u89c4\u5219\uff0c\u4ee5\u9632\u6b62\u75c5\u6bd2\u4f20\u64ad\u3002\u4ed6\u8bf4\uff1a\u201c\u4ece\u6211\u4eec\u9999\u6e2f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u52e4\u594b\u53ca\u6b63\u786e\u4f7f\u7528\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u53e3\u7f69\u662f\u6700\u91cd\u8981\u7684\u63aa\u65bd\u3002\u201d\n\u4e2d\u592e\u5170\u5f00\u590f\u5927\u5b66(University Of Central Lancashire)\u7814\u7a76\u5a01\u80c1\u53cd\u5e94\u7684\u5fc3\u7406\u5b66\u5bb6\u8428\u4e3d\u5854\u00b7\u7b80\u00b7\u7f57\u5bbe\u900a(Sarita Jane Robinson)\u8868\u793a\uff0c\u4eba\u4eec\u4ecd\u5728\u9002\u5e94\u201c\u65b0\u5e38\u6001\u201d\uff0c\u5982\u679c\u4e0d\u91c7\u53d6\u66f4\u591a\u5e72\u9884\u63aa\u65bd--\u6bd4\u5982\u5bf9\u4e0d\u6234\u53e3\u7f69\u7f5a\u6b3e--\u201c\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u4eba\u4eec\u53c8\u56de\u5230\u4e86\u65e7\u884c\u4e3a\u201d\u3002\n\u5979\u8bf4\uff0c\u5f53\u751f\u6d3b\u6062\u590d\u548c\u5a92\u4f53\u8f6c\u79fb\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u6b7b\u4ea1\u4e0d\u5c51\u4e00\u987e\uff0c\u4f46\u8fd9\u79cd\u75be\u75c5\u7684\u4e25\u91cd\u6027\u5c06\u4f7f\u4eba\u4eec\u66f4\u96be\u5ffd\u89c6\u5b83\u3002\n\u6700\u540e\u4e00\u79cd\u53ef\u80fd\u6027\u53ef\u4ee5\u7701\u53bb\u5f88\u591a\u9ebb\u70e6\u3002\u4e00\u4e9b\u79d1\u5b66\u5bb6\u60f3\u77e5\u9053\uff0c\u666e\u901a\u611f\u5192\u51a0\u72b6\u75c5\u6bd2\u662f\u5426\u5728\u9065\u8fdc\u7684\u8fc7\u53bb\u8fdb\u5165\u4eba\u7c7b\uff0c\u5e76\u5728\u5b9a\u5c45\u4e4b\u524d\u5f15\u8d77\u4e86\u7c7b\u4f3c\u7684\u75be\u75c5\u3002\u5e15\u5c14\u66fc\u8bf4\uff1a\u201c\u5982\u679c\u75c5\u6bd2\u4e0d\u6539\u53d8\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u7406\u7531\u8ba4\u4e3a\u4e94\u5e74\u540e\u5b83\u4f1a\u5947\u8ff9\u822c\u5730\u4e0d\u4f1a\u5f15\u8d77\u80ba\u708e\u3002\u201d\u201c\u4f46\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u5e0c\u671b\uff1a\u6211\u4eec\u6700\u7ec8\u4f1a\u60a3\u4e0a\u4e00\u79cd\u6e29\u548c\u5f97\u591a\u7684\u75be\u75c5\uff0c\u800c\u4f60\u53ea\u4f1a\u56e0\u6b64\u800c\u60a3\u4e0a\u91cd\u611f\u5192\u3002\u201d\n\u6d77\u66fc\u8bf4\uff0c\u73b0\u5728\u5c31\u77e5\u9053\u5927\u6d41\u884c\u7684\u7ed3\u679c\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\u201c\u6211\u4eec\u4e0d\u4e86\u89e3\u8fd9\u79cd\u75c5\u6bd2\u7684\u547d\u8fd0\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5728\u7b2c\u4e00\u6b21\u5927\u6d41\u884c\u4e4b\u540e\uff0c\u5b83\u8fd8\u4f1a\u7ee7\u7eed\u4f20\u64ad\u5417\uff1f\u6216\u8005\uff0c\u5b83\u4f1a\u50cf\u5176\u4ed6\u4e00\u4e9b\u5927\u6d41\u884c\u75c5\u6bd2\u4e00\u6837\u6d88\u5931\u6216\u53d8\u5f97\u4e0d\u90a3\u4e48\u6bd2\u529b\u5417\uff1f\u8fd9\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u7684\u3002\u201c", "note_en": "It would be hard to overstate the importance of developing a vaccine to Sars-CoV-2 \u2013 it\u2019s seen as the fast track to a return to normal life. That\u2019s why the health secretary, Matt Hancock, said the UK was \u201cthrowing everything at it\u201d.\n But while trials have been launched and manufacturing deals already signed \u2013 Oxford University is now recruiting 10,000 volunteers for the next phase of its research \u2013 ministers and their advisers have become noticeably more cautious in recent days.\n   Earlier this week, England\u2019s deputy chief medical officer Jonathan Van-Tam said the words nobody wanted to hear: \u201cWe can\u2019t be sure we will get a vaccine.\u201d\n  Vaccines are simple in principle but complex in practice. The ideal vaccine protects against infection, prevents its spread, and does so safely. But none of this is easily achieved, as vaccine timelines show.\n More than 30 years after scientists isolated HIV, the virus that causes Aids, we have no vaccine. The dengue fever virus was identified in 1943, but the first vaccine was  approved only last year, and even then amid concerns it made the infection worse in some people. The fastest vaccine ever developed was for mumps. It took four years.\n Scientists have worked on coronavirus vaccines before, so are not starting from scratch. Two coronaviruses have caused lethal outbreaks before, namely Sars and Mers, and vaccine research went ahead for both. But none have been licensed, partly because Sars fizzled out and Mers is regional to the Middle East. The lessons learned will help scientists create a vaccine for Sars-CoV-2, but there is still an awful lot to learn about the virus.\n A chief concern is that coronaviruses do not tend to trigger long-lasting immunity. About a quarter of common colds are caused by human coronaviruses, but the immune response fades so rapidly that people  can become reinfected the next year.\n Researchers at Oxford University recently analysed blood from recovered Covid-19 patients and found that levels of IgG antibodies \u2013 those responsible for longer-lasting immunity \u2013 rose steeply in the first month of infection but then  began to fall again.\n Last week, scientists at Rockefeller University in New York found that most people who recovered from Covid-19 without going into hospital  did not make many killer antibodies against the virus.\n \u201cThat\u2019s what is particularly challenging,\u201d says Stanley Perlman, a veteran coronavirus researcher at the University of Iowa. \u201cIf the natural infection doesn\u2019t give you that much immunity except when it\u2019s a severe infection, what will a vaccine do? It could be better, but we don\u2019t know.\u201d If a vaccine only protects for a year, the virus will be with us for some time.\n The genetic stability of the virus matters too. Some viruses, such as influenza, mutate so rapidly that vaccine developers have to release new formulations each year. The rapid evolution of HIV is a major reason we have no vaccine for the disease.\n So far, the Sars-CoV-2 coronavirus seems fairly stable, but it is acquiring mutations, as all viruses do. Some genetic changes have been spotted in the virus\u2019s protein \u201cspikes\u201d which are the basis of most vaccines. If the spike protein mutates too much, the antibodies produced by a vaccine will effectively be out of date and might not bind the virus effectively enough to prevent infection.\n Martin Hibberd, professor of emerging infectious diseases at the London School of Hygiene and Tropical Medicine, who helped identify some of the virus\u2019s mutations, called them \u201can early warning\u201d.\n  In the rush to develop a vaccine \u2013 there are now more than 100 in development \u2013 safety must remain a priority. Unlike experimental drugs for the severely ill, the vaccine will be given to potentially billions of generally healthy people.\n This means scientists will have to check extremely carefully for signs of dangerous side-effects. During the search for a Sars vaccine in 2004, scientists found that one candidate  caused hepatitis in ferrets. Another serious concern is \u201cantibody-induced enhancement\u201d where the antibodies produced by a vaccine actually make future infections worse. The effect caused serious lung damage in animals given experimental vaccines for both  Sars and  Mers.\n John McCauley, director of the Worldwide Influenza Centre at the Francis Crick Institute, says it takes time to understand the particular challenges each vaccine throws up. \u201cYou don\u2019t know the difficulties, the specific difficulties, that every vaccine will give you,\u201d he says. \u201cAnd we haven\u2019t got experience in handling this virus or the components of the virus.\u201d\n  When the prime minister, Boris Johnson, told a No 10 press briefing that a vaccine was \u201cby no means guaranteed\u201d, his chief scientific adviser, Patrick Vallance, agreed, but added: \u201cI\u2019d be surprised if we didn\u2019t end up with something.\u201d Many scientists share that view.\n  Those in development draw on at least eight different approaches, from weakened and inactivated viruses to technologies that smuggle genetic code into the recipient\u2019s cells, which then churn out spike proteins for the immune system to make antibodies against.\n Ideally, a vaccine will generate persistent, high levels of antibodies to wipe out the virus and also \u201cT\u201d cells to destroy infected cells. But each vaccine is different and today no one knows what kind of immune response is good enough.\n \u201cWe don\u2019t even know if a vaccine can produce an immune response which would protect against future infection,\u201d says David Heymann, who led the response of the World  Health Organization (WHO) to the Sars epidemic.\n  The US biotech firm Moderna reported antibody levels  similar to those found in recovered patients in 25 people who received its vaccine.\n Another vaccine from Oxford University did not stop monkeys contracting the virus, but did appear to prevent pneumonia, a major cause of death in coronavirus patients.\n If humans react the same way, vaccinated people would still spread the virus, but be less likely to die from it.\n How well a vaccine works determines how it is used. Armed with a highly effective vaccine that protects for several years, countries could aim for herd immunity by protecting at least two-thirds of the population.\n Coronavirus patients pass the virus on to three others, on average, but if two or more are immune, the outbreak will fizzle out. That is the best-case scenario.\n More likely is we will end up with a vaccine, or a number of vaccines, that are only partially effective.\n Vaccines that contain weakened strains of virus can be dangerous for older people, but might be given to younger people with more robust immune systems to reduce the spread of infection.\n Meanwhile, older people might get vaccines that simple prevent infections progressing to life-threatening pneumonia. \u201cIf you don\u2019t have the ability to induce immunity, you\u2019ve got to develop a strategy for reducing serious outcomes of infection,\u201d says McCauley.\n But partially effective vaccines have their own problems: a vaccine that doesn\u2019t stop the virus replicating can encourage resistant strains to evolve, making the vaccine redundant.\n   Hopes for eliminating the virus start with a vaccine but do not end there. \u201cIf and when we have a vaccine, what you get is not rainbows and unicorns,\u201d says Larry Brilliant, CEO of Pandefense Advisory, who led the WHO\u2019s smallpox eradication programme. \u201cIf we are forced to choose a vaccine that gives only one year of protection, then we are doomed to have Covid become endemic, an infection that is always with us.\u201d\n The virus will still be tough to conquer with a vaccine that lasts for years.\n \u201cIt will be harder to get rid of Covid than smallpox,\u201d says Brilliant. With smallpox it was at least clear who was infected, whereas people with coronavirus can spread it without knowing. A thornier problem is that as long as the infection rages in one country, all other nations are at risk.\n As David Salisbury, the former director of immunisation at the Department of Health, told a Chatham House webinar recently: \u201cUnless we have a vaccine available in unbelievable quantities that could be administered extraordinarily quickly in all communities in the world we will have gaps in our defences that the virus can continue to circulate in.\u201d\n Or as Brilliant puts it, the virus will \u201cping-pong back and forth in time and geography\u201d.\n One proposal from  Gavi, the vaccine alliance, is to boost the availability of vaccines around the world through an \u201cadvance market commitment\u201d. And Brilliant believes some kind of global agreement must be hammered out now. \u201cWe should be demanding, now, a global conference on what we\u2019re going to do when we get a vaccine, or if we don\u2019t,\u201d he says.\n \u201cIf the process of getting a vaccine, testing it, proving it, manufacturing it, planning for its delivery, and building a vaccine programme all over the world, if that\u2019s going to take as long as we think, then let\u2019s fucking start planning it now.\u201d\n  People will have to adapt \u2013 and life will change. Heymann says we will have to get used to extensive monitoring for infections backed up by swift outbreak containment. People must play their part too, by maintaining handwashing, physical distancing and avoiding gatherings, particularly in enclosed spaces. Repurposed drugs are faster to test than vaccines, so we may have an antiviral or an antibody treatment that works before a vaccine is available, he adds. Immediate treatment when symptoms come on could at least reduce the death rate.\n Yuen Kwok-yung, a professor of infectious disease at the University of Hong Kong, has advised his government that all social distancing can be relaxed \u2013 but only if people wear masks in enclosed spaces such as on trains and at work, and that no food or drink are consumed at concerts and cinemas.\n At restaurants, tables will have to be shielded from each other and serving staff will follow strict rules to prevent spreading the virus. \u201cIn our Hong Kong perspective, the diligent and correct use of reusable masks is the most important measure,\u201d he says.\n Sarita Jane Robinson, a psychologist who studies responses to threats at the University of Central Lancashire, says people are still adapting to the \u201cnew normal\u201d and that without more interventions \u2013 such as fines for not wearing face masks \u2013 \u201cwe could see people drifting back to old behaviours\u201d.\n We might become blase about Covid-19 deaths when life resumes and the media move on, but the seriousness of the illness will make it harder to ignore, she says.\n  One last possibility could save a lot of trouble. Some scientists wonder whether the common cold coronaviruses crossed into humans in the distant past and caused similar illness before settling down. \u201cIf the virus doesn\u2019t change there\u2019s no reason to think that miraculously in five years\u2019 time it won\u2019t still cause pneumonia,\u201d says Perlman. \u201cBut that\u2019s the hope: that we end up with a much more mild disease and you only get a bad cold from it.\u201d\n Heymann says it is too soon to know how the pandemic will pan out. \u201cWe don\u2019t understand the destiny of this virus,\u201d he says. \u201cWill it continue to circulate after its first pandemic? Or will it, like some other pandemic viruses, disappear or become less virulent? That we do not know.\u201d", "posttime": "2020-05-23 20:16:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u5f97\u4e0d\u5230,\u75ab\u82d7", "title": "\u6211\u4eec\u53ef\u80fd\u5f97\u4e0d\u5230\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7", "title_en": "We might not get a coronavirus vaccine", "transed": 1, "url": "https://www.theguardian.com/world/2020/may/22/why-we-might-not-get-a-coronavirus-vaccine", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u5f97\u4e0d\u5230", "\u75ab\u82d7"]}, {"category": "", "categoryclass": "", "imagename": "8bc5c0c847f19225b3284d0d7718e705.jpeg", "infoid": 1003390, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u534e\u5c14\u8857\u65e5\u62a5\u6700\u5148\u62a5\u9053\uff0c\u6c7d\u8f66\u79df\u8d41\u5de8\u5934\u8d6b\u5179\u5468\u4e94\u665a\u95f4\u7533\u8bf7\u7834\u4ea7\uff0c\u6b64\u524d\u8be5\u516c\u53f8\u672a\u80fd\u4e0e\u5176\u6700\u5927\u7684\u8d37\u6b3e\u4eba\u8fbe\u6210\u534f\u8bae\u3002\n\u8d6b\u5179\u5411\u7279\u62c9\u534e\u5dde\u5a01\u5c14\u660e\u987f\u7684\u7f8e\u56fd\u7834\u4ea7\u6cd5\u9662\u7533\u8bf7\u7834\u4ea7\u6cd5\u7b2c11\u7ae0\u7684\u4fdd\u62a4\uff0c\u4f7f\u5176\u6210\u4e3a\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5e7f\u6cdb\u7ecf\u6d4e\u5f71\u54cd\u7684\u6700\u5927\u4f01\u4e1a\u53d7\u5bb3\u8005\u4e4b\u4e00\uff0c\u56e0\u4e3a\u65c5\u884c\u9650\u5236\u6467\u6bc1\u4e86\u79df\u8f66\u884c\u4e1a\u3002\n\u636e\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u62a5\u9053\uff0c\u8d6b\u5179\u7684\u503a\u52a1\u7ea6\u4e3a190\u4ebf\u7f8e\u5143\uff0c\u5176\u4e2d\u5305\u62ec\u5927\u7ea643\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\u503a\u5238\u548c\u8d37\u6b3e\uff0c\u4ee5\u53ca\u7531\u8be5\u516c\u53f8\u8f66\u961f\u652f\u6301\u7684144\u4ebf\u7f8e\u5143\u503a\u52a1\uff0c\u8d37\u6b3e\u4eba\u66fe\u8981\u6c42\u8be5\u516c\u53f8\u9884\u4ed8\u5176\u4e2d\u4e00\u4e9b\u503a\u52a1\uff0c\u4f46\u672a\u80fd\u5f97\u5230\u5176\u540c\u610f\u3002\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u79f0\uff0c\u8d6b\u5179\u6709\u5927\u7ea6190\u4ebf\u7f8e\u5143\u7684\u503a\u52a1\uff0c\u5176\u4e2d\u5305\u62ec\u7ea643\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\u503a\u5238\u548c\u8d37\u6b3e\uff0c\u4ee5\u53ca144\u4ebf\u7f8e\u5143\u7531\u8be5\u516c\u53f8\u8f66\u961f\u652f\u6301\u7684\u503a\u52a1\uff0c\u8d37\u6b3e\u4eba\u66fe\u8981\u6c42\u8be5\u516c\u53f8\u9884\u4ed8\u90e8\u5206\u503a\u52a1\uff0c\u4f46\u672a\u80fd\u5f97\u5230\u5176\u540c\u610f\u3002\n\u751a\u81f3\u5728\u75ab\u60c5\u7206\u53d1\u4e4b\u524d\uff0c\u8d6b\u5179\u7684\u4e1a\u52a1\u5c31\u5df2\u7ecf\u5728\u82e6\u82e6\u6323\u624e\uff0c\u56e0\u4e3a\u5b83\u8bd5\u56fe\u62b5\u5fa1\u6765\u81ea\u5176\u4ed6\u79df\u8d41\u673a\u6784\u4ee5\u53ca\u4f18\u6b65(Uber)\u548cLyft\u7b49\u53eb\u8f66\u4e1a\u52a1\u7684\u7ade\u4e89\u3002\n\u4eca\u5e744\u6708\uff0c\u968f\u7740\u65c5\u884c\u9677\u5165\u505c\u987f\uff0c\u8be5\u516c\u53f8\u89e3\u96c7\u4e861\u4e07\u540d\u5458\u5de5-\u7ea6\u5360\u5458\u5de5\u603b\u6570\u768426%-\u4e3a\u4e86\u8282\u7701\u73b0\u91d1\uff0c\u8be5\u516c\u53f8\u751a\u81f3\u5728\u7f51\u4e0a\u4ee5\u5927\u5e45\u6298\u6263\u51fa\u552e\u4e86\u81f3\u5c1120\u8f86\u76f8\u540c\u7684\u9ec4\u8272\u514b\u5c14\u7ef4\u7279Z06\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u51ef\u745f\u7433\u00b7\u9a6c\u91cc\u5185\u6d1b\u4e8e\u4e0a\u5468\u516d\u8f9e\u804c\uff0c\u516c\u53f8\u8463\u4e8b\u4f1a\u4efb\u547d\u4fdd\u7f57\u00b7\u65af\u901a\u63a5\u66ff\u9a6c\u91cc\u5185\u6d1b\uff0c\u6b64\u524d\u4fdd\u7f57\u00b7\u65af\u901a\u66fe\u62c5\u4efb\u8be5\u516c\u53f8\u5317\u7f8e\u6267\u884c\u526f\u603b\u88c1\u517c\u9996\u5e2d\u96f6\u552e\u8fd0\u8425\u5b98\u3002\n\u8d6b\u5179\u7684\u6bcd\u516c\u53f8\u8d6b\u5179\u5168\u7403\u63a7\u80a1\u516c\u53f8(Hertz Global Holdings Inc.)\u4e5f\u62e5\u6709\u79df\u8d41\u54c1\u724c\u7f8e\u5143(Dollar)\u548c\u8282\u4fed(Thrity)\u3002\u8d6b\u5179\u66fe\u57284\u6708\u4efd\u7684\u4e00\u4efd\u76d1\u7ba1\u7533\u62a5\u6587\u4ef6\u4e2d\u8868\u793a\uff0c\u5728\u6ca1\u6709\u652f\u4ed8\u8fd0\u8425\u79df\u7ea6\u7684\u67d0\u4e9b\u6b3e\u9879\u540e\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u8003\u8651\u5bfb\u6c42\u7834\u4ea7\u4fdd\u62a4\u3002\u8d6b\u5179\u8868\u793a\uff0c\u5982\u679c\u57285\u6708\u7684\u7b2c\u4e00\u5468\u4e4b\u524d\uff0c\u4e0e\u8d37\u6b3e\u4eba\u5c31\u51cf\u5c11\u8fd9\u4e9b\u4ed8\u6b3e\u7684\u8ba8\u8bba\u4e0d\u80fd\u53d6\u5f97\u6210\u679c\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u53d7\u5230\u5b9e\u8d28\u6027\u7684\u8d1f\u9762\u5f71\u54cd\u3002\n\u5728\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u6700\u521d\u62a5\u9053\u8d6b\u5179\u5c06\u4e8e\u5468\u4e94\u665a\u95f4\u7533\u8bf7\u7834\u4ea7\u540e\uff0c\u8d6b\u5179\u7684\u80a1\u4ef7\u5728\u76d8\u540e\u4ea4\u6613\u4e2d\u4e0b\u8dcc\u4e8650%\u3002", "note_en": "Car-rental giant Hertz filed for bankruptcy Friday night after it was unable to reach an agreement with its biggest lenders,  The Wall Street Journal first reported.\n Hertz  filed for Chapter 11 protections in the U.S. Bankruptcy Court in Wilmington, Delaware, making it one of the largest corporate casualties of the coronavirus pandemic&#39;s widespread economic fallout as travel restrictions decimate the rental car industry.\n  Hertz has around $19 billion in debt, which includes roughly $4.3 billion in corporate bonds and loans as well as $14.4 billion of debt backed by the company&#39;s fleet of vehicles, and lenders had asked the company for upfront payment on some of those obligations but couldn&#39;t get it to agree, according to The Journal.\n   Hertz&#39;s business had  already been struggling even before the pandemic as it tried to fend off competition from other rental agencies as well as ride-hailing businesses like Uber and Lyft.\n In April, as travel ground to a halt, it  laid off 10,000 workers \u2014 roughly 26% of its total workforce \u2014 and even put at least  20 identical yellow Corvette Z06s up for sale online at a steep discount as it tried to preserve cash.\n CEO Kathryn Marinello resigned last Saturday, and the company&#39;s board of directors named Paul Stone, who previously served as the company&#39;s executive vice president and chief retail operations officer for North America, to step in for Marinello.\n Hertz, whose parent company, Hertz Global Holdings Inc., also owns rental brands Dollar and Thrifty, had said in a  regulatory filing in April that it was considering seeking bankruptcy protections after it &#34;did not make certain payments&#34; on its operating lease. Hertz said it &#34;could be materially and negatively impacted&#34; if discussions with lenders to reduce those payments weren&#39;t fruitful by the first week of May.\n   Hertz&#39;s stock dropped by as much as 50% in after-hours trading following the The Wall Street Journal&#39;s initial report that the company would file for bankruptcy on Friday night.", "posttime": "2020-05-23 20:16:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u75c5\u6bd2,\u91cd\u521b,files", "title": "\u8d6b\u5179\u7533\u8bf7\u7834\u4ea7\uff0c\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u91cd\u521b\u79df\u8d41\u4e1a", "title_en": "Hertz files for bankruptcy as the coronavirus pandemic crushes rental industry", "transed": 1, "url": "https://www.businessinsider.com/hertz-filing-for-bankruptcy-as-early-as-this-weekend-report-2020-5", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u91cd\u521b", "files"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "SF\u65f6\u95f4\u8868\u5305\u62ec2,400+\u4e2a\u60f3\u6cd5\u548c\u53d1\u660e\uff0c\u6765\u81ea350+\u4e2a\u4f5c\u8005\u7684750+\u4e2a\u4f5c\u54c1\u3002", "note_en": "SF timeline of 2,400+ ideas and inventions from 750+ works by 350+ authors.", "posttime": "2020-05-23 19:49:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u660e,fiction,\u65f6\u95f4\u8868", "title": "\u79d1\u5e7b\u5c0f\u8bf4\u7684\u53d1\u660e\u65f6\u95f4\u7ebf", "title_en": "Science Fiction Timeline of Inventions", "transed": 1, "url": "http://www.technovelgy.com/ct/ctnlistPubDate.asp", "via": "", "real_tags": ["\u53d1\u660e", "fiction", "\u65f6\u95f4\u8868"]}, {"category": "", "categoryclass": "", "imagename": "ce180ee0bc883fe2936e72c295fb79f8.jpg", "infoid": 1003388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u62a5\u9053\uff0c\u5728\u82f1\u7279\u5c14\u65b0\u63a8\u51fa\u7684Comet Lake\u5904\u7406\u5668\u4e0a\u67b6\u540e\uff0cAMD\u7684Ryzen 9 3900X\u5df2\u7ecf\u964d\u4ef7\uff0c\u8fd9\u5f53\u7136\u53ef\u4ee5\u88ab\u89c6\u4e3a\u7b2c10\u4ee3\u53f0\u5f0f\u673a\u53d1\u5e03\u540e\u7684\u4e00\u6b21\u88ab\u52a8\u4e3e\u52a8\u3002\n\u6839\u636eTechPowerup\u7684\u4e00\u4efd\u62a5\u544a\uff0cAMD\u5df2\u7ecf\u5411\u96f6\u552e\u5546\u53d1\u51fa\u4fe1\u53f7\uff0c\u8981\u6c42\u5728\u7f8e\u56fd\u5c063900X\u7684\u4ef7\u683c\u964d\u81f3410\u7f8e\u5143\u5de6\u53f3\uff0c\u5b83\u5c06\u5728\u7f8e\u56fd\u4e0e\u9177\u777fi9-10900K\u751a\u81f3\u9177\u777fi7-10700K\u5c55\u5f00\u7ade\u4e89\u3002\u5982\u679c\u8fd9\u4e0d\u662f\u5bf9\u82f1\u7279\u5c14\u5904\u7406\u5668\u53d1\u5e03\u7684\u53cd\u5e94\uff0c\u90a3\u4e48\u65f6\u673a\u80af\u5b9a\u662f\u4f60\u6240\u8bf4\u7684\u6709\u8da3\u7684\u2026\u3002\n\u7136\u800c\uff0c\u8fd9\u4e2a\u6545\u4e8b\u6709\u4e00\u70b9\u4ee4\u4eba\u8d39\u89e3\u7684\u5730\u65b9\u3002\u5c31AMD\u7684\u5b98\u65b9\u552e\u4ef7\u800c\u8a00\uff0c3900X\u7684\u9996\u53d1\u4ef7\u4e3a499\u7f8e\u5143\uff0c\u4f46\u73b0\u5728AMD\u7f51\u7ad9\u4e0a\u7684\u6807\u4ef7\u4e3a449\u7f8e\u5143\u3002\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0cTechPowerup\u4e89\u8fa9\u8bf4\uff0c\u5728\u7ebf\u96f6\u552e\u5546\u6b63\u5728\u6574\u7406\u4ef7\u683c\u964d\u81f3410\u7f8e\u5143\u5de6\u53f3\u7684\u4ea7\u54c1\uff0c\u5c3d\u7ba1\u4ef7\u683c\u5728\u8fd9\u4e2a\u4ef7\u4f4d\u9644\u8fd1\u5f98\u5f8a\u4e0d\u5b9a\u3002\n\u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\uff0c3900X\u4e4b\u524d\u5df2\u7ecf\u8dcc\u81f3\u8fd9\u79cd\u7565\u9ad8\u4e8e400\u7f8e\u5143\u7684\u6c34\u5e73\u3002\n\u56de\u5230\u76ee\u524d\u7684\u4ef7\u683c\uff0cRyzen 3900X\u6628\u5929\u5728\u4e9a\u9a6c\u900a\u7684\u4ef7\u683c\u53ef\u80fd\u662f410\u7f8e\u5143\uff0c\u4f46\u73b0\u5728\u5728\u4e9a\u9a6c\u900a\u7684\u4ef7\u683c\u662f420\u7f8e\u5143\uff0c\u5728\u7f8e\u56fd\u7684Newegg\u662f432\u7f8e\u5143-\u4f46\u6b63\u5982\u4e00\u4f4d\u76ee\u5149\u654f\u9510\u7684TechPowerup\u8bfb\u8005\u6240\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u5b83\u5728Micro Center\u7684\u4ef7\u683c\u5df2\u7ecf\u8dcc\u81f3390\u7f8e\u5143\u3002\n\u8003\u8651\u5230\u5373\u4f7f\u662f\u9177\u777fi7-10700K\u7684\u53d1\u5e03\u4ef7\u683c\u4e5f\u5728410\u7f8e\u5143\u5de6\u53f3\uff0c\u8fd9\u771f\u7684\u662f\u4e00\u7b14\u5212\u7b97\u7684\u4ea4\u6613\u3002\u4e0e12\u6838\u7684Ryzen\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a8\u6838\u7684Intel\u90e8\u4ef6\u3002\n10\u6838\u7684\u82f1\u7279\u5c14\u9177\u777fi9-10900K\u552e\u4ef7\u5728510\u7f8e\u5143\u6216\u66f4\u9ad8\uff0c\u6b63\u5982\u6211\u4eec\u5728\u8bc4\u8bba\u4e2d\u6307\u51fa\u7684\u90a3\u6837\uff0c\u5728\u5927\u591a\u6570CPU\u7e41\u91cd\u7684\u5de5\u4f5c\u8d1f\u8f7d(\u4ee5\u53ca\u4e00\u4e9b\u5728\u591a\u6838\u4e0a\u5bf9\u5904\u7406\u5668\u9020\u6210\u6c89\u91cd\u6253\u51fb\u7684\u6e38\u620f)\u4e0a\uff0c\u5b83\u7684\u8868\u73b0\u90fd\u8d85\u8fc7\u4e863900X\u3002\n\u5728\u82f1\u56fd\uff0c\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c3900X\u73b0\u5728\u53ef\u4ee5\u5728\u7f51\u4e0a\u4e70\u5230\u5927\u7ea6410 GB\u7684\u4ef7\u683c\uff0c10700K\u4e5f\u5dee\u4e0d\u591a\uff0c10900K\u7684\u6807\u4ef7\u5927\u7ea6\u662f530 GB\u3002\n\u770b\u770bMicro Center 3900X\u5728\u7f8e\u56fd\u7684\u4ef7\u503c\uff0c\u8fd9\u6b3eAMD 12\u6838\u5904\u7406\u5668\u65e0\u7591\u4e3a\u8bb8\u591a\u5e0c\u671b\u6253\u9020\u66f4\u5f3a\u5927PC\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6781\u5177\u8bf1\u60d1\u529b\u7684\u63d0\u8bae\u3002\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u83b7\u5f97\u4e0e3900X\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u51b7\u5374\u5668(\u5c3d\u7ba1\u8bb8\u591a\u4eba\u53ef\u80fd\u5f88\u60f3\u5347\u7ea7\u8be5\u7ec4\u4ef6\uff0c\u4f46\u4e8b\u5b9e\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4ecd\u7136\u5728\u90a3\u91cc)\u3002\nAMD\u4f3c\u4e4e\u660e\u786e\u8868\u793a\uff0c\u5b83\u5728\u53f0\u5f0f\u673aCPU\u9886\u57df\u7684\u63a8\u8fdb\u4e0d\u4f1a\u6709\u4e1d\u6beb\u7f13\u548c\uff0c\u5f53\u7136\u8fd9\u751a\u81f3\u6ca1\u6709\u8003\u8651\u5230\u6211\u4eec\u5373\u5c06\u63a8\u51faRyzen 4000\u5904\u7406\u5668\uff0c\u6839\u636e\u4f20\u8a00\u78e8\u574a\u7684\u8bf4\u6cd5\uff0c\u8be5\u5904\u7406\u5668\u5c06\u4e8e9\u6708\u4efd\u9996\u6b21\u4eae\u76f8\u3002", "note_en": "AMD\u2019s Ryzen 9 3900X has reportedly been given a price cut in the wake of  Intel\u2019s new Comet Lake processors hitting the shelves, which could certainly be viewed as a reactive move following the 10th-gen desktop launch.\n According to a report by  TechPowerup, AMD has signaled to retailers to drop the price of the 3900X to around $410 over in the US, where it will compete with the Core i9-10900K and indeed the Core i7-10700K. If this isn\u2019t a reaction to the launch of those Intel processors, then the timing is certainly what you\u2019d call interesting\u2026\n    There\u2019s a bit to unpick with this story, however. As far as the official price listed by AMD goes, the  3900X launched at $499, but is now listed at $449 on AMD\u2019s website. As mentioned, TechPowerup contends that a drop to around $410 is being marshaled with online retailers, although prices are kind of peppered around that mark.\n Furthermore, note that the 3900X has been dropped to this kind of just-over-$400 level before.\n Going back to the current prices, the Ryzen 3900X might have been $410 yesterday at Amazon, but now sits at $420 there, or $432 at Newegg in the US \u2013 but as one eagle-eyed TechPowerup reader spotted, it has crashed down to  $390 at Micro Center.\n Now that really is a steal, given that even the Core i7-10700K has launched at around $410. That\u2019s an 8-core Intel part, compared to the 12-core Ryzen.\n  The 10-core Intel Core i9-10900K is pegged at $510 or more, and  as we pointed out in our review, it is outdone by the 3900X in most CPU-heavy workloads (and some games which hit the processor hard across multiple cores).\n In the UK, the 3900X can now be had for around \u00a3410 online, at the time of writing, and the 10700K is around the same mark, with the 10900K pitched at about \u00a3530.\n Looking at the value of the 3900X in the US at Micro Center, then, this AMD 12-core processor presents a highly tempting proposition for many users looking at building a beefier PC, no doubt. And remember that you get a cooler bundled with the 3900X too (although many may well want to upgrade that component, the fact is it\u2019s still there by default).\n AMD would seem to be making it clear that it\u2019s not going to relent in the slightest with its push in the desktop CPU arena, and of course that\u2019s not even taking into account that we have  Ryzen 4000 processors on the near horizon,  ready to debut in September according to the rumor mill.", "posttime": "2020-05-23 18:54:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,\u4e0b\u8dcc,drop,\u4ef7\u683c", "title": "AMD Ryzen 9 3900x\u4ef7\u683c\u4e0b\u8dcc\u53ef\u80fd\u4f1a\u524a\u5f31\u82f1\u7279\u5c14\u5f57\u661f\u6e56\u7684\u9500\u552e", "title_en": "AMD Ryzen 9 3900x price drop could take the wind out of Intel comet lake sales", "transed": 1, "url": "https://www.techradar.com/in/news/amd-ryzen-9-3900x-price-drop-could-take-the-wind-out-of-intel-comet-lake-cpu-sales", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u4e0b\u8dcc", "drop", "\u4ef7\u683c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u597d\uff0c\u4e16\u754c\uff01", "note_en": "Hello, world!", "posttime": "2020-05-23 18:54:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1,intentionally,\u4f60\u597d", "title": "Gourami\uff1a\u4e00\u4e2a\u7279\u610f\u5c0f\u800c\u8f7b\u91cf\u7ea7\u7684ActivityPub\u5fae\u535a\u670d\u52a1", "title_en": "Gourami: An intentionally small, lightweight ActivityPub microblogging service", "transed": 1, "url": "https://dev.gourami.social/", "via": "", "real_tags": ["\u670d\u52a1", "\u4f60\u597d"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u4e8f\u4e86Sharaf Zaman\u7684\u52aa\u529b\uff0cKrita\u73b0\u5728\u53ef\u4ee5\u5728Google Play\u5546\u5e97\u4e3aAndroid\u5e73\u677f\u7535\u8111\u548cChromebook(\u4e0d\u662fAndroid\u624b\u673a)\u63d0\u4f9b\u3002\n\u8fd9\u4e2a\u6d4b\u8bd5\u7248\u57fa\u4e8eKrita 4.2.9\uff0c\u662fKrita\u7684\u5b8c\u6574\u684c\u9762\u7248\u672c\uff0c\u56e0\u6b64\u6ca1\u6709\u7279\u6b8a\u7684\u89e6\u6478\u7528\u6237\u754c\u9762\u3002\u4f46\u5b83\u5c31\u5728\u90a3\u91cc\uff0c\u4f60\u53ef\u4ee5\u73a9\u5b83\u3002\n\u4e0eWindows\u548cSteam\u5546\u5e97\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u5546\u5e97\u91cc\u4e3aKrita\u7d22\u8981\u94b1\uff0c\u56e0\u4e3a\u8fd9\u662f\u4eba\u4eec\u5728\u8fd9\u4e9b\u8bbe\u5907\u4e0a\u5b89\u88c5Krita\u7684\u552f\u4e00\u65b9\u5f0f\uff0c\u4f46\u4f60\u53ef\u4ee5\u4eceKrita\u5185\u90e8\u8d2d\u4e70\u652f\u6301\u5fbd\u7ae0\u6765\u652f\u6301\u5f00\u53d1\u3002\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u9605\u8bfb\u5728Google\u7684Play Store\u4e2d\u83b7\u53d6\u6d4b\u8bd5\u7248\u7684\u5b98\u65b9\u8bf4\u660e\u3002(\u4e00\u70b9\u4e5f\u4e0d\u96be\uff01\u53ea\u9700\u8f6c\u5230\u201c\u65e9\u671f\u8bbf\u95ee\u201d\uff0c\u641c\u7d22org.krita\u5373\u53ef\u3002\u5728\u6211\u4eec\u83b7\u5f97\u5408\u7406\u7684\u4e0b\u8f7d\u91cf\u4e4b\u524d\uff0c\u60a8\u5fc5\u987b\u7a0d\u5fae\u5411\u4e0b\u6eda\u52a8\u3002)\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86Sharaf\u7684\u67d0\u4e2a\u7248\u672c\u6216\u60a8\u81ea\u5df1\u7b7e\u540d\u7684\u7248\u672c\uff0c\u5219\u9700\u8981\u9996\u5148\u4e3a\u6240\u6709\u7528\u6237\u5378\u8f7d\u8be5\u7248\u672c\uff01", "note_en": "Thanks to the hard work of Sharaf Zaman, Krita is now available in the Google Play Store for Android tablets and Chromebooks (not for Android phones).\n This beta, based on Krita 4.2.9, is the full desktop version of Krita, so it doesn\u2019t have a special touch user interface. But it\u2019s there, and you can play with it.\n Unlike the Windows and Steam store, we don\u2019t ask for money for Krita in the store, since it\u2019s the only way people can install Krita on those devices, but you can buy a supporter badge from within Krita to support development.\n You can read here  the official instructions on getting beta releases in Google\u2019s Play Store. (It\u2019s not hard at all! Just go to \u201c Early access\u201d and search for org.krita. Until we\u2019ve got a reasonable number of downloads, you\u2019ll have to scroll down a bit.)\n NOTE: if you have installed one of Sharaf\u2019s builds or a build you\u2019ve signed yourself, you need to uninstall that first, for all users!", "posttime": "2020-05-23 18:27:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "chrome,android,\u9002\u7528,beta,\u7248\u672c", "title": "Play\u5546\u5e97\u9996\u6b21\u63a8\u51fa\u9002\u7528\u4e8eAndroid\u548cChromeOS\u7684Krita Beta", "title_en": "First Krita Beta for Android and ChromeOS in Play Store", "transed": 1, "url": "https://krita.org/en/item/first-krita-beta-for-android-and-chromeos-in-play-store/", "via": "", "real_tags": ["chrome", "android", "\u9002\u7528", "beta", "\u7248\u672c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JWT\u901a\u5e38\u7528\u4e8e\u65e0\u72b6\u6001\u8eab\u4efd\u9a8c\u8bc1\u6d41\u3002\u591a\u4e8f\u4e86\u7b7e\u540d\uff0c\u670d\u52a1\u5668\u4e0d\u9700\u8981\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\u6765\u9a8c\u8bc1\u4ee4\u724c\u7684\u6709\u6548\u6027\u3002\u4f5c\u7528\u57df\u58f0\u660e(RFC8693\u7b2c4.2\u8282)\u5305\u542b\u4e0e\u4ee4\u724c\u76f8\u5173\u8054\u7684\u4f5c\u7528\u57df\u7684\u7a7a\u683c\u5206\u9694\u5217\u8868\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u6743\u9650\uff0c\u5c3d\u7ba1\u8fd9\u4e00\u8981\u6c42\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u7e41\u91cd\u3002\u4f5c\u7528\u57df\u8d8a\u591a\uff0c\u4ee4\u724c\u5c31\u8d8a\u5927\uff01\u4f46\u662fjwt\u5e94\u8be5\u662f\u7d27\u51d1\u7684\u4ee4\u724c\u683c\u5f0f\u2026\u3002\n\u4eca\u5929\uff0c\u6211\u5f88\u81ea\u8c6a\u5730\u5411\u60a8\u4ecb\u7ecd\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5c06\u4f5c\u7528\u57df\u5217\u8868\u538b\u7f29\u6210\u4e00\u4e2a\u4f4d\u56fe\uff0c\u5176\u4e2d\u4e00\u4f4d\u4ee3\u8868\u4e00\u4e2a\u4f5c\u7528\u57df\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7b80\u5355\u3002\u6211\u5c06\u6bcf\u4e2a\u4f5c\u7528\u57df\u4e0e\u5b57\u8282\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u4f4d\u76f8\u5173\u8054\uff0c\u800c\u4e0d\u662f\u5305\u542b\u4e0e\u8be5\u4ee4\u724c\u76f8\u5173\u8054\u7684\u6240\u6709\u4f5c\u7528\u57df\u7684\u5de8\u5927\u5b57\u7b26\u4e32\u3002\u6bcf\u4e00\u4f4d\u90fd\u544a\u8bc9\u6211\u4eec\u4f5c\u7528\u57df\u662f\u5426\u4e0e\u4ee4\u724c\u5173\u8054(\u6216\u4e0d\u5173\u8054)\u3002\n0 1 1 0 1 0 0 1 1 1 0 1(.)Scope_a\u2500\u2500\u2518\u2502Scope_b\u2500\u2518\u2502Scope_c\u2500\u2518\u2506(.)\u2506\u3002\n\u6b63\u5982\u60a8\u5df2\u7ecf\u77e5\u9053\u7684\uff0c\u5b57\u8282\u6570\u7ec4\u4e0d\u662fJSON\u6570\u636e\u7c7b\u578b\u3002\u4f46\u8fd9\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u752864\u8fdb\u5236\u5bf9\u8fd9\u4e9b\u5b57\u8282\u8fdb\u884c\u7f16\u7801\u3002\n\u6211\u4e0d\u60f3\u8986\u76d6\u5f53\u524d\u7684\u8303\u56f4\u58f0\u660e\u89c4\u8303\u3002\u5373\u4f7f\u4ece\u6280\u672f\u4e0a\u8bb2\u5b83\u4e0d\u4f1a\u8fdd\u53cd\u89c4\u8303(\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u5728\u91cc\u9762\u5b58\u50a8\u4e00\u4e2a\u5b57\u7b26\u4e32)\uff0c\u8fd9\u4e5f\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u5b9e\u8df5\uff0cIMO\u3002\u6b64\u5916\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u540c\u65f6\u62e5\u6709\u4f20\u7edf\u4f5c\u7528\u57df\u58f0\u660e\u548c\u4f4d\u56fe\u4f5c\u7528\u57df\u58f0\u660e\u3002\n\u4efb\u4f55\u8d44\u6e90\u63d0\u4f9b\u7a0b\u5e8f\u90fd\u5728\u8bb0\u5f55\u5176API\u4e2d\u53ef\u7528\u7684\u4f5c\u7528\u57df\u5217\u8868\u3002\u5b83\u662f\u5728\u201c\u4eba\u7c7b\u53ef\u8bfb\u7684\u201d\u6587\u6863(\u6587\u672c\u3001HTML\u3001PDF\u3001\u2026)\u4e2d\u5b9a\u4e49\u7684\u3002\u6216\u8005\u91c7\u7528\u7ed3\u6784\u5316\u89c4\u8303(OAuth Authorization Server\u5143\u6570\u636e\u3001OpenID\u8fde\u63a5\u53d1\u73b0\u3001OpenAPI\u3001\u2026)\u3002\u3002\n\u5bf9\u4e8e\u7ed3\u6784\u5316\u89c4\u8303\uff0c\u6211\u7684\u5efa\u8bae\u662f\u4fdd\u6301\u76f8\u540c\u7684\u6709\u5e8f\u5217\u8868\uff0c\u5e76\u4f7f\u7528\u6bcf\u4e2a\u4f5c\u7528\u57df\u7684\u7d22\u5f15\u4f5c\u4e3a\u4f4d\u53f7\u3002OAuth\u5143\u6570\u636e\u4e2d\u7684SCOLES_SUPPORTED\u5b57\u6bb5\u662f\u4e00\u4e2aJSON\u6570\u7ec4\u3002\u5143\u7d20\u7684\u987a\u5e8f\u88ab\u4fdd\u7559\u3002\u4f46\u662f\uff0cOpenAPI\u4e2d\u7684Scope\u5b57\u6bb5\u662f\u4e00\u4e2a\u6620\u5c04(JSON\u5bf9\u8c61)\u3002\u6211\u4eec\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u94a5\u5319\u7684\u6392\u5e8f\u3002OpenAPI\u89c4\u8303\u5f88\u6709\u5e0c\u671b\u5141\u8bb8\u6269\u5c55\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2ax-scope-order\u5173\u952e\u5b57\uff0c\u8be5\u5173\u952e\u5b57\u5c06\u5217\u51fa(JSON\u6570\u7ec4)\u5177\u6709\u4fdd\u7559\u987a\u5e8f\u7684\u4f5c\u7528\u57df(\u5c31\u50cf\u5728OAuth\u5143\u6570\u636e\u4e2d\u4e00\u6837)\u3002\n\u5047\u8bbe\u60a8\u7684API\u4e2d\u670942\u4e2a\u4f5c\u7528\u57df(\u6211\u4ee5Facebook API\u4e3a\u4f8b)\u3002\u5728\u4f4d\u56fe\u4e2d\u5b58\u50a8\u5b83\u4eec\u5c06\u9700\u89816\u4e2a\u5b57\u8282\u3002\u7531\u4e8e\u91c7\u7528Base64\u7f16\u7801\uff0c\u6211\u4eec\u5fc5\u987b\u505a4*n/3(+\u56db\u820d\u4e94\u5165\u7684\u4e58\u65704)=8\u5b57\u8282\u3002\u4e3a\u4e86\u516c\u5e73\u8d77\u89c1\uff0c\u6211\u5728\u58f0\u660e\u540d\u79f0\u4e2d\u6dfb\u52a0\u4e862\u4e2a\u5b57\u8282(\u524d\u7f00b_\u4e0e\u4f5c\u7528\u57dfClaim\u76f8\u6bd4)\uff0c\u603b\u517110\u4e2a\u5b57\u8282\u3002\u4f5c\u7528\u57df\u5217\u8868\u7535\u5b50\u90ae\u4ef6\u540d\u79f0\u7684\u5927\u5c0f\u76f8\u7b49\u3002\n\u4f7f\u7528\u4e8c\u5143\u8fd0\u7b97\u7b26\u6d4b\u8bd5\u5b57\u8282\u5e8f\u5217\u4e0d\u4f1a\u6d88\u8017CPU\u3002\u4e0e\u5b57\u7b26\u4e32\u64cd\u4f5c\u548c\u6bd4\u8f83\u76f8\u6bd4\uff0c\u5b83\u7684\u6027\u80fd\u53ef\u80fd\u66f4\u597d\u3002\nLSB vs MSB\u3002\u76ee\u524d\u6211\u4e0d\u77e5\u9053\u6700\u597d\u7684\u9009\u62e9\u662f\u4ec0\u4e48\u3002\u6211\u60f3\u7b54\u6848\u5e94\u8be5\u6765\u81ea\u4ee5\u4e0b\u51e0\u4e2a\u6807\u51c6\uff1a\n\u4ec0\u4e48\u662f\u6700\u6709\u6548\u7684/\u6700\u597d\u7684\uff1f\u8981\u7528\u591a\u79cd\u9762\u5411\u7f51\u7edc\u7684\u8bed\u8a00(JS\u3001Python\u3001Ruby\u3001Rust\u3001SWIFT\u3001\u2026)\u8fdb\u884c\u6d4b\u8bd5\u3002\n\u60a8\u53ef\u80fd\u60f3\u8981\u5f03\u7528\u67d0\u4e2a\u4f5c\u7528\u57df\uff0c\u4f46\u662f\u60a8\u4e0d\u80fd\u4ece\u5217\u8868\u4e2d\u5220\u9664\u6b64\u4f5c\u7528\u57df\uff0c\u5426\u5219\u5b83\u4f1a\u79fb\u52a8\u540e\u9762\u6240\u6709\u5176\u4ed6\u4f5c\u7528\u57df\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f1a\u677e\u4e00\u70b9\u3002\u4f46\u662f\u5982\u679c\u60a8\u7684\u4ee4\u724c\u65f6\u95f4\u6709\u9650\uff0c\u60a8\u53ef\u4ee5\u5728\u4e00\u6bb5\u5f03\u7528\u65f6\u95f4(\u957f\u4e8e\u6700\u957f\u4ee4\u724c\u751f\u5b58\u671f)\u4e4b\u540e\u7528\u53e6\u4e00\u4e2a\u4f4d\u4f5c\u7528\u57df\u66ff\u6362\u8be5\u4f4d\u4f5c\u7528\u57df\u3002\n\u6709\u4e9b\u4eba\u6b63\u5728\u5b9a\u4e49\u201c\u52a8\u6001\u201d\u8303\u56f4\u3002\u4f8b\u5982\uff1aperts.{id}.read\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u505a\u6cd5\u3002\u6211\u5bf9\u4f5c\u7528\u57df\u7684\u7406\u89e3\u662f\u6388\u4e88\u5bf9API\u529f\u80fd\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u800c\u4e0d\u662f\u5bf9\u8d44\u6e90\u672c\u8eab\u7684\u8bbf\u95ee\u6743\u9650\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u5ba0\u7269\u7684\u4f5c\u7528\u57dfpet.read\u3002\u60a8\u7684\u8d44\u6e90(\u4e5f\u79f0\u4e3a\u5185\u5bb9)ACL\u4e0d\u5e94\u8be5\u5728\u4f5c\u7528\u57df\u672c\u8eab\u4e2d\u3002\n\u6709\u4f55\u4e0d\u53ef\uff1f\u6211\u8fd8\u6ca1\u6709\u5206\u6790\u6211\u4eec\u53ef\u4ee5\u5728\u54ea\u91cc\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\uff0c\u4f46\u662f\u6211\u731c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5b83\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\uff0c\u4f46\u662f\u6211\u770b\u4e0d\u51fa\u5728OAuth(\u4ee4\u724c\u548c\u6388\u6743)\u7aef\u70b9\u4e2d\u4f7f\u7528\u5b83\u6709\u4ec0\u4e48\u5927\u7684\u597d\u5904\u3002\u5728\u6bcf\u4e2aAPI\u8bf7\u6c42\u4e2d\u53d1\u9001JWT\u65f6\uff0c\u4f1a\u51c6\u65f6\u8c03\u7528\u8fd9\u4e9b\u7aef\u70b9\u3002\n\u4f60\u53ef\u80fd\u6709\u95ee\u9898\uff0c\u6216\u8005\u4f60\u53ea\u662f\u60f3\u8ba8\u8bba\u4e00\u4e0b\u3002\u8bf7\u5728\u6211\u7684\u535a\u5ba2\u5e93\u4e2d\u6253\u5f00\u95ee\u9898\uff0c\u6216\u968f\u65f6\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u3002", "note_en": "JWT are often used in stateless authentication flows. Thanks to the signature, the server does not need anything else to verify the token validity.The  scope claim ( RFC8693 section 4.2) contains  a space-separated list of scopes associated with the token. The server can use it to check the application permissions.Although this claim can quickly become heavy. The more scopes you have, the bigger your token is!But JWT are meant to be a   compact token format\u2026\n Today I\u2019m proud to present you an idea to compress scope list into a bitmap where one bit represents one scope.\n  The idea is quite simple. Instead of a huge string with all the scopes associated with the token, I associate each scope to a bit in a byte sequence. Each bit tells us if a scope is associated (or not) to the token.\n  0 1 1 0 1 0 0 1 1 0 1 (...)scope_a \u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502scope_b \u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502scope_c \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2506 \u2506 \u2506 \u2506 \u2506 \u2506 \u2506 \u2506(...) \u2506 \u2506 \u2506 \u2506 \u2506 \u2506 \u2506\n  As you already know,  byte-array is not a JSON data type. But it\u2019s not a big deal, we can encode these bytes in  Base 64.\n    I  don\u2019t want to can\u2019t override the current  scope claim specification. Even if technically it would not break the specification (because we still store a string inside), this is not a good practice IMO. Furthermore, in some cases you might want to have both a traditional  scope claim and a bitmap scope claim.\n   Any resource provider is documenting the list of scopes available in its API. It\u2019s defined either in a \u201chuman readable\u201d documentation (text, html, pdf,\u2026) or in a structured specification ( OAuth Authorization Server Metadata,  OpenID Connect Discovery, OpenAPI,\u2026).\n For structured specifications my suggestion would be to keep the same ordered list and use the index of each scope as bit number.The   scopes_supported field in OAuth Metadata is a JSON array. Order of elements is preserved. However the   scopes field in OpenAPI is a map (JSON Object). We should not rely on the ordering of keys. Hopefuly the OpenAPI specification  allows extensions. It means that we could define a  x-scopes-order keyword which would list (JSON Array) the scopes with preserved ordering (like in OAuth Metadata).\n   Let say that you have 42 scopes in your API ( I use Facebook API as example). It would require 6 bytes to store them in the bitmap. Because of Base 64 encoding we have to do  4 * n / 3 (+ rounded up mult 4) = 8 bytes. And to be fair, I added 2 bytes in claim name (prefix  b_ compared to  scope claim) for a total of 10 bytes. The equivalent in size of scope list  email name.\n  Testing a byte sequence with binary operators is not CPU consuming. Compared to string manipulation and comparison it\u2019s probably more performant.\n   LSB vs  MSB. Currently I don\u2019t know what\u2019s the best option. I guess the answer should come from the following criteria:\n What\u2019s the most efficient/performant ?To be tested in multiple web-oriented languages (JS, Python, Ruby, Rust, Swift,\u2026)\n  You might want to deprecate a scope but you can\u2019t remove this scope from the list otherwise it would shift all other following scopes.\n In this case you will loose a bit. But if your tokens are limited in time, you could replace the bit scope with another after a deprecation period (longer than the max token lifetime).\n   Some people are definining \u201cdynamic\u201d scopes. For instance:  pets.{id}.read. I don\u2019t think it\u2019s a good practice. My understanding of scopes is to grant access to an API feature, not to the resource itself. In other words, IMHO you should have only one scope  pet.read which allows application to read a pet. Your resources (aka content) ACL should not be in the scope itself.\n   Why not ? I didn\u2019t analyze (yet) where and how we could use it but I guess it could be useful in some cases.However I don\u2019t see a big benefit to use it in OAuth (token and authorize) endpoints. These endpoints are called punctually while JWT is sent in each API request.\n  You might have questions or you just want to discuss about it. Please open issue in my blog repository or feel free to send me an email.", "posttime": "2020-05-23 18:00:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "scope,\u4f5c\u7528\u57df", "title": "JWT`Scope`\u58f0\u660e\u538b\u7f29", "title_en": "JWT `Scope` Claim Compression", "transed": 1, "url": "https://raphael.medaer.me/2020/05/21/scope-bitmap.html", "via": "", "real_tags": ["scope", "\u4f5c\u7528\u57df"]}, {"category": "", "categoryclass": "", "imagename": "ee837ad822eaf99f7652b2ea52cc109b.jpg", "infoid": 1003383, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Convos v4.08\u662f\u9762\u5305\u5e97\u521a\u63a8\u51fa\u7684\uff0c\u8fd9\u4e00\u6b21\u6211\u4eec\u5f88\u81ea\u8c6a\u5730\u5ba3\u5e03\u652f\u6301\u89c6\u9891\uff01\n\u5982\u679c\u60a8\u53ea\u662f\u5728\u6d4b\u8bd5Convos\uff0c\u60a8\u5c06\u4e0d\u4f1a\u770b\u5230\u542f\u52a8Videochat\u7684\u4efb\u4f55\u6309\u94ae\u3002\u5176\u539f\u56e0\u662f\u5e95\u5c42\u6280\u672f\u9700\u8981\u5b89\u5168\u8fde\u63a5\u3001STUN\u670d\u52a1\u5668\u548c\u53ef\u9009\u7684TURN\u670d\u52a1\u5668\u3002\n\u5982\u679c\u60a8\u5728\u6ca1\u6709\u5b89\u5168\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u8fde\u63a5\u5230Convos\uff0cWebRTC\u5c06(\u53ef\u80fd)\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002SSL\u8bc1\u4e66\u53ef\u4ee5\u8d2d\u4e70\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u201c\u8ba9\u6211\u4eec\u52a0\u5bc6\u201d\u514d\u8d39\u8bbe\u7f6e\u3002\u5982\u679c\u60a8\u76f4\u63a5\u5728Internet\u4e0a\u516c\u5f00Convos\uff0c\u5219\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u6307\u5b9a\u8bc1\u4e66\uff1a\n\u542f\u7528\u89c6\u9891\u652f\u6301\u7684\u7edd\u5bf9\u6700\u4f4e\u8981\u6c42\u662fSTUN\u670d\u52a1\u5668\u3002\u6b64\u670d\u52a1\u5668\u9700\u8981\u5f3a\u5236\u4ea4\u6362\u6709\u5173\u5982\u4f55\u76f8\u4e92\u8054\u7cfb\u7684\u57fa\u672c\u4fe1\u606f\u3002\n\u8981\u4f7f\u7528\u7ed9\u5b9a\u7684STUN\u670d\u52a1\u5668\u542f\u52a8Convos\uff0c\u60a8\u9700\u8981\u6307\u5b9aCONVOS_STUN\u73af\u5883\u53d8\u91cf\u3002\u793a\u4f8b\uff1a\nSTUN\u670d\u52a1\u5668\u4e0d\u9700\u8981\u592a\u591a\u5e26\u5bbd\uff0c\u56e0\u6b64\u6709\u8bb8\u591a\u514d\u8d39\u7684\u5907\u9009\u65b9\u6848\u53ef\u4f9b\u9009\u62e9\u3002\u5982\u679c\u60a8\u60f3\u8bbe\u7f6e\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u90a3\u4e48CoTurn\u662f\u4e00\u4e2a\u503c\u5f97\u5c1d\u8bd5\u7684\u53ef\u9760\u9879\u76ee\u3002\n\u5728\u4e24\u4e2a\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u7f51\u7edc\u201c\u590d\u6742\u201d\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981TURN\u670d\u52a1\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u5ba2\u6237\u7aef\u5c06\u89c6\u9891\u548c\u97f3\u9891\u6d41\u53d1\u9001\u5230TURN\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5bf9\u7b49\u8fde\u63a5\u3002\n\u8981\u4f7f\u7528\u7ed9\u5b9a\u7684TURN\u670d\u52a1\u5668\u542f\u52a8Convos\uff0c\u9700\u8981\u6307\u5b9aCONVOS_TURN\u73af\u5883\u53d8\u91cf\u3002\u793a\u4f8b\uff1a\n(\u636e\u6211\u6240\u77e5)\u6ca1\u6709\u514d\u8d39\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u4e3a\u6b64\u8bbe\u7f6e\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u5668\u3002Coturserver\u8fd8\u652f\u6301TURN\uff0c\u56e0\u6b64\u60a8\u53ea\u9700\u4e00\u53f0\u5916\u90e8\u670d\u52a1\u5668\u5373\u53ef\u83b7\u5f97\u6240\u6709\u60c5\u51b5\u4e0b\u7684Avideo\u8fde\u63a5\u3002\n\u4e00\u65e6\u60a8\u4f7f\u7528CONVOS_STUN\u73af\u5883\u53d8\u91cf\u542f\u52a8\u4e86Convos\uff0c\u60a8\u5c31\u53ef\u4ee5\u8fdb\u5165\u4efb\u4f55\u5bf9\u8bdd\uff0c\u5e76\u4e14\u5728\u5bf9\u8bdd\u540d\u79f0\u7684\u53f3\u4fa7\u5e94\u8be5\u6709\u4e00\u4e2a\u6444\u50cf\u673a\u7b26\u53f7\u3002\n\u5355\u51fb\u89c6\u9891\u6309\u94ae\u5c06\u901a\u77e5\u5bf9\u8bdd\u4e2d\u7684\u5176\u4ed6\u7528\u6237\u60a8\u5df2\u51c6\u5907\u597d\u8fdb\u884c\u89c6\u9891\u804a\u5929\u3002\u7136\u540e\u4efb\u4f55\u5176\u4ed6\u7528\u6237\u90fd\u53ef\u4ee5\u52a0\u5165\uff0c\u7136\u540e\u4f60\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u5e76\u542c\u5230\u5bf9\u65b9\u7684\u58f0\u97f3\u3002\n\u4fe1\u4ee4\u534f\u8bae\u4f7f\u7528IRC\u6765\u53d1\u9001WebRTC\u4fe1\u53f7\u3002\u7136\u800c\uff0c\u4fe1\u4ee4\u534f\u8bae\u662f\u4e13\u95e8\u9488\u5bf9Convos\u7684\uff0c\u6240\u4ee5\u60a8\u53ea\u80fd\u4e0e\u4e0e\u60a8\u6709\u76f8\u540cConvos\u7248\u672c\u7684\u5176\u4ed6\u4eba\u8fdb\u884c\u89c6\u9891\u804a\u5929\u3002\n\u4fe1\u4ee4\u534f\u8bae\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9bIRC\u7f51\u7edc\u51fa\u73b0\u95ee\u9898\u3002\u8fd9\u662f\u672a\u77e5\u7684\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u5c06\u4e0e\u60a8\u6700\u559c\u6b22\u7684IRC\u670d\u52a1\u5668/\u7f51\u7edc\u4e00\u8d77\u5de5\u4f5c\u3002\n\u76ee\u524d\u5b9e\u73b0\u7684\u9519\u8bef\u5904\u7406\u975e\u5e38\u5c11\u3002\u5982\u679c\u89c6\u9891\u5bf9\u60a8\u4e0d\u8d77\u4f5c\u7528\uff0c\u60a8\u53ef\u80fd\u5fc5\u987b\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5f00\u53d1\u4eba\u5458\u63a7\u5236\u53f0\u6765\u67e5\u627e\u95ee\u9898\u3002\n\u6211\u4eec\u5e0c\u671b\u5728Convos v5.00\u4e2d\u7a33\u5b9a\u5bf9\u89c6\u9891\u7684\u652f\u6301\u3002\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u662f\u672a\u6765\u7684\u4e8b\u4e86\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u65e6\u89c6\u9891\u652f\u6301\u6b63\u5e38\u5de5\u4f5c\uff0cConvos\u5c06\u4ece4.xx\u8df3\u52305.00\u3002", "note_en": "Convos  v4.08 isfresh from the bakery, and this time we are proud to announce video support!\n  If you are just testing out Convos, you won\u2019t see any button to start the videochat. The reason for this is that the underlying technology require a secure connection, a  STUN serverand optionally a  TURN server.\n  WebRTC will (probably) not function properly if you connect to Convos without asecure connection. SSL certificates can either be bought or set up for free with Let\u2019s Encrypt. If you expose Convos directly on theinternet you can specify the certificates from the command line:\n    The absolute minimum to enable video support is a STUN server. This server is needed forclients to exchange basic information for how to reach each other.\n To start Convos with a given STUN server, you need to specify the CONVOS_STUN environment variable. Example:\n  A STUN server does not require much bandwidth, so there are many free alternativesto choose from. If you want to set up your own server then Coturn is a solid project to try out.\n  A TURN server  might be needed some cases where the network between the twoclients is \u201ccomplicated\u201d. The two clients will in that case send the video andaudio streams to the TURN server, instead of using peer-to-peer connections.\n To start Convos with a given TURN server, you need to specify the CONVOS_TURN environment variable. Example:\n  There are (to my knowledge) no free alternatives for this, so you have to setup your own server for this. The  Coturnserver also supports TURN, so you only need one external server to get avideo connection for all cases.\n  Once you have started Convos with the  CONVOS_STUN environment variable, youcan go to any conversation and there should be a video camera symbol on theright side of the conversation name.\n  Clicking on the video button will notify the other user(s) in the conversationthat you are ready to video chat. Any other user can then join and you willthen see and hear each other.\n  The signalling protocol use IRC to send the WebRTC signals. The signalling protocolis however specific for Convos, so you can only video chat with other peoplewho have the same Convos version as yourself.\n   The signalling protocol  might cause issues for certain IRC networks. It isunknown which, but there are no guaranty that it will work with your favoriteIRC server/network.\n    There are very little error handling currently implemented. You probably haveto peak into the developer console in your browser to look for issues ifvideo does not work for you.\n  We hope to stabilize video support in Convos v5.00. It might sound likethat that is way into the future, but in reality Convos will jump from 4.xx to5.00 once video support seems to work properly.", "posttime": "2020-05-23 17:05:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "irc,convos", "title": "Convos IRC\u5ba2\u6237\u7aef\u73b0\u5728\u652f\u6301\u89c6\u9891\u804a\u5929", "title_en": "Convos IRC client now supports video chat", "transed": 1, "url": "https://convos.by/2020/5/23/experimental-video-support-using-webrtc.html", "via": "", "real_tags": ["irc", "convos"]}, {"category": "", "categoryclass": "", "imagename": "41c0e94e65b4f38fdba1b6c583388f86.jpg", "infoid": 1003382, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b80\u5355\u5730\u3001\u771f\u5b9e\u5730\u3001\u7edd\u5bf9\u5730\u3001\u7edd\u5bf9\u5730\u7406\u89e3\u4e00\u4e2a\u7cfb\u7edf\u6216\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u65e0\u7591\u9700\u8981\u4e00\u4e2a\u5076\u7136\u7684\u5e8f\u5217\u56fe\u3002\u5728\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u6210\u4e3a\u6807\u51c6\u4e4b\u524d\uff0c\u6211\u79bb\u5f00\u4e86\u5927\u5b66\uff0c\u4f46\u5b83\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002\u4f5c\u4e3a\u6211\u7b2c\u4e00\u4efd\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u63a5\u53d7\u4e86\u9762\u5411\u5bf9\u8c61\u548c\u4f7f\u7528Rational Rose\u7684\u6b63\u5f0f\u57f9\u8bad\u3002\u5f53\u8fd9\u4e2a\u5de5\u5177\u88ab\u96c6\u6210\u5230\u6211\u4eec\u7684\u5f00\u53d1\u8fc7\u7a0b\u548c\u73af\u5883\u4e2d\u65f6\uff0c\u6211\u6b23\u7136\u63a5\u53d7\u4e86\u8fd9\u4e2a\u5de5\u5177\uff0c\u7279\u522b\u662f\u5728\u901a\u8fc7\u6d88\u606f\u8ddf\u8e2a\u56fe(\u4e5f\u79f0\u4e3a\u5e8f\u5217\u56fe)\u6765\u63cf\u8ff0\u7c7b\u4ea4\u4e92\u7684\u80fd\u529b\u65b9\u9762\u3002\u4e0d\u5e78\u7684\u662f\uff0cRational Rose\u5728\u4eca\u5929\u662f\u6602\u8d35\u548c\u4e0d\u5e38\u89c1\u7684\u3002\u7684\u5f00\u53d1\u5b9e\u8df5\uff0c\u4f46\u662f\u5e8f\u5217\u56fe\u4ecd\u7136\u5b58\u5728\u3002\u767d\u677f\u56fe\u662f\u4e4f\u5473\u548c\u8017\u65f6\u7684\uff0c\u4f46\u662f\u4e92\u8054\u7f51\u4e0a\u6709\u771f\u6b63\u7b80\u5316\u56fe\u8868\u521b\u5efa\u7684\u5728\u7ebf\u5de5\u5177\uff1b\u5c31\u50cf\u8fd9\u91cc\u7684\u8fd9\u4e2a\u5bb6\u4f19\uff1a\u53ea\u8981\u7a0d\u52a0\u52aa\u529b\uff0cPythonImageMagick\u548chttps://www.websequencediagrams.com/\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u7c97\u7565\u7684\u8fd1\u4f3c\u503c\u3002\u4e00\u4e2a\u5feb\u901f\u5de5\u5177/\u5e93\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\u56fe\u8868=Diagram()\uff1b\u65b9\u6cd51=\u5bf9\u8c61(&#39\uff1bobject1&#39\uff1b)\uff1b\u5bf9\u8c612=\u5bf9\u8c61(&#39\uff1bobject2&39\uff1b)\uff1b\u5bf9\u8c613=\u5bf9\u8c61(&#39\uff1bobject3&39\uff1b)\uff1b*m1=\u6d88\u606f(obj1\uff0cobj2\uff0c&#39\uff1bmethod 1(Arg1)&#39\uff1b)\uff1b\u56fe\u8868.add(M1)\uff1b*m2=\u6d88\u606f(&#39\uff1bobj2\uff0c&#39\uff1bMethod 1(Arg1)&#39\uff1b)\uff1b\u56fe\u8868.add(M1)\uff1b*m2=\u6d88\u606f(&#39\uff1bobject3&#39\uff1b)\u3002*m3=message(obj1\uff0cobj1\uff0c&#39\uff1bMethod 2(Abc)&#39\uff1b)\uff1b*Diagram.add(M3)\uff1b*m4=message(obj1\uff0cobj3\uff0c&#39\uff1bMethod 3()&#39\uff1b)\uff1b*Diagram.add(M4)\uff1b*Diagram.raw()\uff1b\n\u5c06\u5176\u4e0e\u4e00\u4e9b\u65e5\u5fd7\u5206\u6790\u6216\u8c03\u8bd5\u5668\u8ddf\u8e2a\u914d\u5bf9\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u81ea\u52a8\u751f\u6210\u6574\u4e2a\u7cfb\u7edf\u4ea4\u4e92\u3002", "note_en": "Understanding a system or software architecture simply, truly, absolutely, undoubtedly requires an occasional sequence diagram.  I left university before object-oriented design became the norm, but it was trending up.\u00a0 As part of my first job we were officially trained in OO and the use of Rational Rose.\u00a0 The tool was integrated into our development process and environment, I embraced that tool, particularly in the ability to depict class interactions via &#39;message trace diagrams&#39;, otherwise known as &#39;sequence diagrams&#39;.\u00a0 Unfortunately, Rational Rose is pricey and uncommon in today&#39;s development practices but sequence diagrams are alive and well.\u00a0 Whiteboarding diagrams is tedious and time-consuming, but the inter-webs has on-line tools that really ease the creation of diagrams; like this fella right here:\u00a0 https://www.websequencediagrams.com/  With a bit of effort, Python paired with ImageMagick can generate a rough approximation.  A quick tool/library can make this:  \u00a0 diagram=Diagram();  \u00a0 obj1=Object(&#39;object1&#39;);  \u00a0 obj2=Object(&#39;object2&#39;);  \u00a0 obj3=Object(&#39;object3&#39;);    \u00a0 m1=Message(obj1,obj2,&#39;method1(arg1)&#39;);  \u00a0 diagram.add(m1);    \u00a0 m2=Message(obj2,obj1,&#39;return val&#39;);  \u00a0 diagram.add(m2);    \u00a0 m3=Message(obj1,obj1,&#39;method2(abc)&#39;);  \u00a0 diagram.add(m3);    \u00a0 m4=Message(obj1,obj3,&#39;method3()&#39;);  \u00a0 diagram.add(m4);    \u00a0 diagram.draw();        \n Pair this with some logging analysis, or debugger traces and you could auto-generate entire system interactions with ease.", "posttime": "2020-05-23 16:37:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,sequence,obj1", "title": "\u4f7f\u7528Python/ImageMagick\u521b\u5efa\u5e8f\u5217\u56fe", "title_en": "Creating Sequence Diagrams with Python/ImageMagick", "transed": 1, "url": "https://dragonquest64.blogspot.com/2020/05/python-generated-sequence-diagrams.html", "via": "", "real_tags": ["python", "sequence", "obj1"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1003381, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u91cd\u8bfb\u4e86\u672c\u00b7\u83ab\u65af\u5229(Ben Moseley)\u548c\u5f7c\u5f97\u00b7\u9a6c\u514b\u65af(Peter Marks)\u7684\u201c\u8d70\u51fa\u7126\u6cb9\u5751\u201d(Out Of The Tar Pit)\u4e00\u6587\uff0c\u4e3a\u201c\u6211\u4eec\u70ed\u7231\u7684\u5de5\u4f5c\u201d(Pap\u3002\u8fd9\u662f\u4e00\u4efd\u975e\u5e38\u6709\u540d\u7684\u62a5\u7eb8\u3002\u4f60\u53ef\u4ee5\u5728GitHub\u7684Papers We Love\u5b58\u50a8\u5e93\u627e\u5230\u5b83\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5f88\u591a\u4eba\u90fd\u559c\u6b22\u5b83\u3002\u518d\u6b21\u9605\u8bfb\u8fd9\u7bc7\u8bba\u6587\u5f15\u53d1\u4e86\u4e00\u4e9b\u601d\u8003\uff0c\u56e0\u6b64\u624d\u6709\u4e86\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u3002\n\u5f53\u5fc3\u56fe\u7075\u7684\u7126\u6cb9\u5751\uff0c\u5728\u90a3\u91cc\u4e00\u5207\u90fd\u6709\u53ef\u80fd\uff0c\u4f46\u6709\u8da3\u7684\u4e8b\u60c5\u90fd\u4e0d\u5bb9\u6613\u3002\n\u56fe\u7075\u7126\u6cb9\u5751\u662f\u4e00\u79cd\u56fe\u7075\u5b8c\u5168\u7684\u8bed\u8a00\u6216\u7cfb\u7edf(\u4efb\u4f55\u8bed\u8a00\u6216\u7cfb\u7edf\u90fd\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9)\uff0c\u4f46\u4f7f\u7528\u8d77\u6765\u65e2\u9ebb\u70e6\u53c8\u4e0d\u5207\u5b9e\u9645\u3002\u56fe\u7075\u673a\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u56fe\u7075\u7126\u6cb9\u5751\uff0c\u56e0\u4e3a\u4f60\u53ef\u80fd\u4e0d\u4f1a\u5728\u5de5\u4f5c\u4e2d\u4f7f\u7528\u5b83\u6765\u89e3\u51b3\u771f\u6b63\u7684\u95ee\u9898\u3002\u8fd9\u53ef\u80fd\u5f88\u6709\u8da3\uff0c\u4f46\u5e76\u4e0d\u5b9e\u7528\u3002\n\u6807\u9898\u7684\u542b\u4e49\u662f\uff0c\u6211\u4eec\u76ee\u524d\u6b63\u5904\u4e8e\u56fe\u7075\u7126\u6cb9\u5751\uff0c\u6211\u4eec\u9700\u8981\u91c7\u53d6\u63aa\u65bd\u6446\u8131\u5b83\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6587\u4ef6\u4e2d\u6982\u8ff0\u7684\u63aa\u65bd\u3002\n\u672c\u6587\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u7b2c\u4e00\u90e8\u5206\u662f\u5173\u4e8e\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u524d\u56e0\u540e\u679c\u7684\u8bba\u8ff0\u3002\u7b2c\u4e8c\u90e8\u5206\u662f\u63d0\u51fa\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u4ee5\u6700\u5c0f\u5316\u8f6f\u4ef6\u4e2d\u7684\u6240\u8c13\u610f\u5916\u590d\u6742\u6027\u3002\n\u672c\u6587\u7684\u8bba\u70b9\u662f\u8fd9\u6837\u7684\uff1a\u590d\u6742\u6027\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u51fa\u73b0\u95ee\u9898\u7684\u4e3b\u8981\u539f\u56e0\u3002\u590d\u6742\u6027\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5b83\u963b\u788d\u4e86\u5bf9\u8f6f\u4ef6\u7cfb\u7edf\u7684\u7406\u89e3\u3002\u8fd9\u4f1a\u5bfc\u81f4\u5404\u79cd\u4e0d\u826f\u7684\u4e8c\u9636\u6548\u5e94\uff0c\u5305\u62ec\u4e0d\u53ef\u9760\u3001\u5b89\u5168\u95ee\u9898\u3001\u5ef6\u8fdf\u4ea4\u4ed8\u548c\u7cdf\u7cd5\u7684\u6027\u80fd\uff0c\u5e76\u4e14-\u5728\u6076\u6027\u5faa\u73af\u4e2d-\u590d\u5408\u590d\u6742\u6027\uff0c\u968f\u7740\u7cfb\u7edf\u53d8\u5f97\u66f4\u5927\uff0c\u6240\u6709\u7684\u95ee\u9898\u90fd\u4f1a\u4ee5\u975e\u7ebf\u6027\u7684\u65b9\u5f0f\u6076\u5316\u3002\n\u7ee7\u5f17\u96f7\u5fb7\u00b7\u5e03\u9c81\u514b\u65af\u5728\u201c\u6ca1\u6709\u94f6\u5f39\u201d\u4e00\u4e66\u4e4b\u540e\uff0c\u4f5c\u8005\u4eec\u533a\u5206\u4e86\u672c\u8d28\u590d\u6742\u6027\u548c\u5076\u7136\u6027\u590d\u6742\u6027\u3002\u4f5c\u8005\u5c06\u201c\u672c\u8d28\u590d\u6742\u6027\u201d\u5b9a\u4e49\u4e3a\u7528\u6237\u770b\u5230\u7684\u95ee\u9898\u6240\u56fa\u6709\u7684\u590d\u6742\u6027\u3002\u201c\u5076\u7136\u7684\u590d\u6742\u6027\u201d\u5c31\u662f\u5269\u4e0b\u7684\u4e00\u5207\uff0c\u5305\u62ec\u6240\u6709\u4e0e\u8ba1\u7b97\u7684\u5e73\u51e1\u3001\u5b9e\u7528\u65b9\u9762\u6709\u5173\u7684\u4e1c\u897f\u3002\n\u4f5c\u8005\u8ba4\u4e3a\u72b6\u6001\u5904\u7406\u3001\u63a7\u5236\u6d41\u548c\u4ee3\u7801\u91cf\u662f\u590d\u6742\u6027\u7684\u9a71\u52a8\u56e0\u7d20\u3002\u5927\u591a\u6570\u8fd9\u79cd\u590d\u6742\u6027\u90fd\u88ab\u8d34\u4e0a\u4e86\u201c\u5076\u7136\u201d\u7684\u6807\u7b7e\uff0c\u56e0\u4e3a\u5b83\u4e0e\u673a\u5668\u7684\u7269\u7406\u73b0\u5b9e\u6709\u5173\uff0c\u800c\u4e0d\u662f\u4e0e\u7528\u6237\u7684\u95ee\u9898\u6709\u5173\u3002\n\u5efa\u8bae\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u7528\u6237\u7684\u975e\u6b63\u5f0f\u95ee\u9898\u9648\u8ff0\u8f6c\u5316\u4e3a\u6b63\u5f0f\u95ee\u9898\u9648\u8ff0\uff1a\u6d3e\u751f\u51fa\u53ef\u6267\u884c\u89c4\u8303\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u5e94\u8be5\u53ea\u8003\u8651\u5230\u5b9e\u9645\u6548\u7387\u8003\u8651\u6240\u9700\u7684\u6700\u5c0f\u7a0b\u5ea6\u7684\u201c\u610f\u5916\u201d\u590d\u6742\u6027\u7684\u589e\u52a0\u3002\n\u4f5c\u8005\u53d1\u73b0\u6211\u4eec\u5f53\u524d\u7684\u7f16\u7a0b\u6a21\u578b\u4e0d\u591f\u5b8c\u5584\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e26\u6765\u4e86\u592a\u591a\u7684\u610f\u5916\u590d\u6742\u6027\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u4e00\u79cd\u610f\u5916\u590d\u6742\u6027\u6700\u4f4e\u7684\u7f16\u7a0b\u6a21\u578b\u3002\u8bba\u6587\u7684\u7b2c\u4e8c\u90e8\u5206\u63d0\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u6a21\u578b\u3002\n\u5f53\u6211\u518d\u6b21\u9605\u8bfb\u8fd9\u7bc7\u8bba\u6587\u65f6\uff0c\u8ba9\u6211\u5370\u8c61\u6df1\u523b\u7684\u662f\uff0c\u5b83\u603b\u4f53\u4e0a\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u7684\u590d\u6742\u6027\u548c\u5929\u771f\u7684\u539f\u56e0\u662f\u9519\u8bef\u7684\u3002\n\u8fd9\u7bc7\u8bba\u6587\u662f\u9519\u8bef\u7684\uff0c\u6709\u4e24\u4e2a\u539f\u56e0\u3002\u9996\u5148\uff0c\u56e0\u4e3a\u5b83\u5c06\u8f6f\u4ef6\u5f00\u53d1\u89c6\u4e3a\u5b9e\u73b0\u95ee\u9898\u3002\u5982\u679c\u90a3\u662f\u771f\u7684\u5c31\u597d\u4e86\u3002\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u5982\u679c\u6211\u4eec\u4e00\u76f4\u8ba4\u4e3a\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8f6f\u4ef6\u5f00\u53d1\u65b9\u9762\u5c31\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\u7b2c\u4e8c\uff0c\u56e0\u4e3a\u5b83\u5ffd\u7565\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u52a8\u6001\u6027\uff0c\u5e76\u4e14\u505a\u4e86\u65e0\u6548\u7684\u5047\u8bbe\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u5bf9\u6211\u4eec\u901a\u8fc7\u5236\u4f5c\u8f6f\u4ef6\u89e3\u51b3\u7684\u95ee\u9898\u7684\u6027\u8d28\u662f\u5929\u771f\u7684\u3002\n\u6211\u540c\u610f\u4f5c\u8005\u7684\u89c2\u70b9\uff0c\u5373\u590d\u6742\u6027\u662f\u8f6f\u4ef6\u4e2d\u7684\u4e00\u4e2a\u5de8\u5927\u95ee\u9898\u3002\u590d\u6742\u6027\u7684\u975e\u7ebf\u6027\u7d2f\u79ef\u901a\u5e38\u4f1a\u5a01\u80c1\u5230\u975e\u5e73\u51e1\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\u505c\u6ede\u4e0d\u524d\u3002\u8bb8\u591a\u8f6f\u4ef6\u7cfb\u7edf\u4e0d\u4ec5\u4ec5\u662f\u6280\u672f\u503a\u52a1\uff0c\u8fd9\u662f\u6211\u4eec\u7ecf\u5e38\u7528\u6765\u5f62\u5bb9\u5931\u63a7\u590d\u6742\u6027\u7684\u672f\u8bed-\u5b83\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u7834\u4ea7\u4e86\uff01\u7136\u800c\uff0c\u590d\u6742\u6027\u95ee\u9898\u4e0d\u80fd\u4ec5\u9760\u66f4\u597d\u7684\u7f16\u7a0b\u6a21\u578b\u6765\u89e3\u51b3\u3002\u6211\u4eec\u5fc5\u987b\u8ffd\u67e5\u590d\u6742\u6027\u7684\u539f\u56e0\uff0c\u8d85\u8d8a\u673a\u5668\u7684\u9886\u57df\uff0c\u6df1\u5165\u5230\u73b0\u5b9e\u4e16\u754c\u3002\u867d\u7136\u66f4\u597d\u7684\u7f16\u7a0b\u6a21\u578b\u4f1a\u5f88\u597d\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u6307\u671b\u5b83\u4eec\u4f1a\u5e26\u6765\u5947\u8ff9\u3002\u539f\u56e0\u662f\uff0c\u590d\u6742\u6027\u7684\u6839\u672c\u539f\u56e0\u5728\u4e8e\u8f6f\u4ef6\u7cfb\u7edf\u4e0e\u5176\u8fd0\u884c\u7684\u4e16\u754c\u4e4b\u95f4\u7684\u7d27\u5f20\u5173\u7cfb\u3002\u8fd9\u8d85\u51fa\u4e86\u7f16\u7a0b\u6a21\u578b\u7684\u8303\u7574\u3002\n\u6839\u636e\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u7684\u89d2\u8272\u662f\u201c\u751f\u4ea7(\u4f7f\u7528\u67d0\u4e9b\u7ed9\u5b9a\u7684\u8bed\u8a00\u548c\u57fa\u7840\u8bbe\u65bd)\u5e76\u7ef4\u62a4\u670d\u52a1\u4e8e\u5176\u7528\u6237\u76ee\u7684\u7684\u8f6f\u4ef6\u7cfb\u7edf\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u89d2\u8272\u662f\u5b9e\u73b0\u8f6f\u4ef6\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7528\u6237\u7684\u89d2\u8272\u662f\u5145\u5f53\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u7684\u5148\u77e5\u3002\u4f5c\u8005\u5728\u62ec\u53f7\u4e2d\u6307\u51fa\uff0c\u4ed6\u4eec\u5047\u8bbe\u201c\u7528\u6237\u786e\u5b9e\u77e5\u9053\u5e76\u7406\u89e3\u4ed6\u4eec\u60f3\u8981\u89e3\u51b3\u7684\u95ee\u9898\u201d\u3002\u7136\u800c\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u4e00\u5047\u8bbe\u662f\u7ad9\u4e0d\u4f4f\u811a\u7684\uff01\u95ee\u95ee\u8f6f\u4ef6\u884c\u4e1a\u7684\u4efb\u4f55\u4eba\u5427\uff01\u6211\u4eec\u5df2\u7ecf\u6709\u9ebb\u70e6\u4e86\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u79cd\u77e5\u8bc6\u548c\u7406\u89e3\u7684\u6765\u6e90\uff0c\u6211\u4eec\u5982\u4f55\u521b\u5efa\u53ef\u6267\u884c\u89c4\u8303\uff1f\n\u5728\u4efb\u4f55\u975e\u5e73\u51e1\u7684\u7cfb\u7edf\u4e2d\uff0c\u90fd\u6709\u4e00\u4e9b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u56fa\u6709\u7684\u590d\u6742\u6027\u3002\n\u56e0\u6b64\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u95ee\u9898\u5f88\u91cd\u8981\u3002\u4f46\u8fd9\u662f\u4ec0\u4e48\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u95ee\u51e0\u4e2a\u95ee\u9898\uff0c\u628a\u201c\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u201d\u8fd9\u53e5\u8bdd\u62c9\u5f00\u4e00\u70b9\u3002\n\u95ee\u9898\u4ece\u4f55\u800c\u6765\uff1f\u8c01\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1f\u95ee\u9898\u662f\u5982\u4f55\u8868\u8fbe\u548c\u6c9f\u901a\u7684\uff0c\u662f\u7531\u8c01\u5411\u8c01\u4f20\u8fbe\u7684\uff1f\u5bf9\u95ee\u9898\u662f\u4ec0\u4e48\u8fbe\u6210\u4e00\u81f4\u4e86\u5417\uff1f\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u591a\u5c11\u79cd\u89e3\u91ca\u548c\u63d0\u6cd5\uff1f\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u95ee\u9898\uff1f\u8c01\u4f1a\u53d7\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u5f71\u54cd\uff1f\u8c01\u5bf9\u6b64\u611f\u5174\u8da3\uff1f\u8c01\u62e5\u6709\u5b83\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u95ee\u9898\u5f88\u91cd\u8981\uff1f\u662f\u8c01\u8ba4\u5b9a\u8fd9\u662f\u4e00\u4e2a\u503c\u5f97\u89e3\u51b3\u7684\u95ee\u9898\uff1f\u4e3a\u4ec0\u4e48\u8981\u89e3\u51b3\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u6709\u591a\u8feb\u5207\u9700\u8981\u89e3\u51b3\uff1f\u65f6\u95f4\u76f8\u5173\u5417\uff1f\u8fd9\u4e00\u76f4\u662f\u4e2a\u95ee\u9898\u5417\uff1f\u8fd9\u4e2a\u95ee\u9898\u6216\u7c7b\u4f3c\u7684\u95ee\u9898\u5b58\u5728\u4e86\u591a\u4e45\uff1f\u8fd9\u80fd\u4e0d\u518d\u662f\u4e2a\u95ee\u9898\u5417\uff1f\u5982\u679c\u95ee\u9898\u5f97\u4e0d\u5230\u89e3\u51b3\u600e\u4e48\u529e\uff1f\u90e8\u5206\u89e3\u51b3\u65b9\u6848\u53ef\u884c\u5417\uff1f\u8fd9\u4e2a\u95ee\u9898\u4e0e\u5176\u4ed6\u95ee\u9898\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u6216\u8005\u4e0e\u5176\u4ed6\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u95ee\u9898\u591a\u4e45\u6539\u53d8\u4e00\u6b21\uff1f\u95ee\u9898\u6539\u53d8\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u8fd8\u9700\u8981\u89e3\u51b3\u5417\uff1f\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u54ea\u4e9b\u529b\u91cf\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53d8\u5316\uff1f\u6211\u4eec\u80fd\u671f\u671b\u8fd9\u6837\u7684\u53d8\u5316\u6709\u591a\u6fc0\u8fdb\u5462\uff1f\n\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u95ee\u9898\u4e0d\u662f\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u662f\u95ee\u9898\u672c\u8eab\uff01\u5982\u679c\u8fd9\u4e9b\u95ee\u9898\u4e2d\u81f3\u5c11\u6709\u4e00\u4e9b\u6ca1\u6709\u7b54\u6848\uff0c\u6211\u4eec\u600e\u4e48\u80fd\u5f00\u59cb\u5e7b\u60f3\u5982\u4f55\u6700\u597d\u5730\u4e3a\u6211\u4eec\u7684\u201c\u95ee\u9898\u201d\u5f00\u53d1\u4e00\u4e2a\u201c\u89e3\u51b3\u65b9\u6848\u201d\u5462\uff1f\u8f6f\u4ef6\u5f00\u53d1\u7684\u9b54\u5492\u662f\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u80fd\u5b8c\u5168\u56de\u7b54\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f46\u5b83\u4eec\u5bf9\u6211\u4eec\u7684\u4f01\u4e1a\u81f3\u5173\u91cd\u8981\uff01\u5982\u679c\u6211\u4eec\u8981\u5bfb\u627e\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u6839\u672c\u539f\u56e0\uff0c\u6211\u4eec\u5fc5\u987b\u4ece\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u5f00\u59cb\u3002\n\u5f53\u6211\u4eec\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u95ee\u9898\u5b9a\u4e49\u89c6\u4e3a\u8d85\u51fa\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\u7684\u8303\u56f4\u65f6\uff0c\u6211\u4eec\u5c31\u4f1a\u7ed9\u81ea\u5df1\u5e26\u6765\u4ee4\u4eba\u4e0d\u5feb\u7684\u60ca\u559c--\u4ee5\u53ca\u7316\u7357\u7684\u590d\u6742\u6027\u3002\u6b63\u5982\u6770\u62c9\u5c14\u5fb7\u00b7\u6e29\u4f2f\u683c(Gerald Weinberg)\u5728\u201c\u4f60\u7684\u706f\u4eae\u4e86\u5417\uff1f\u201d(Are Your Lights On\uff1f)\u4e2d\u6240\u8bf4\uff1a\u201c\u8ba1\u7b97\u673a\u9886\u57df\u662f\u95ee\u9898\u5b9a\u4e49\u8bfe\u7a0b\u7684\u6bcd\u77ff\u3002\u201d\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u4eec\u8bd5\u56fe\u5b9e\u65bd\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u65f6\uff0c\u4efb\u4f55\u5173\u4e8e\u95ee\u9898\u662f\u4ec0\u4e48\u7684\u6a21\u68f1\u4e24\u53ef\u3001\u8bef\u89e3\u3001\u51b2\u7a81\u3001\u907f\u514d\u51b2\u7a81\u7b49\u95ee\u9898\u90fd\u4f1a\u4ee5\u590d\u6742\u6027\u7684\u5f62\u5f0f\u81ea\u7136\u5730\u56de\u6765\u56f0\u6270\u6211\u4eec\u3002\n\u8003\u8651\u4e00\u4e2a\u7531\u5b9e\u9645\u9886\u57df\u4e2d\u7684\u5b9e\u9645\u7ec4\u7ec7\u8fdb\u884c\u7684\u5b9e\u9645\u8f6f\u4ef6\u5f00\u53d1\u7684\u793a\u4f8b\uff1a\u7531\u632a\u5a01\u56fd\u5bb6\u516c\u5171\u5e7f\u64ad\u516c\u53f8NRK\u63d0\u4f9b\u7684\u7535\u89c6\u6d41\u5a92\u4f53\u670d\u52a1\u3002\u90a3\u662f\u6211\u5de5\u4f5c\u7684\u5730\u65b9\u3002\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f\u8fd9\u8981\u770b\u4f60\u95ee\u8c01\u4e86\u3002\u4f60\u5e94\u8be5\u95ee\u8c01\u5462\uff1f\u6211\u6b63\u597d\u5728\u9644\u8fd1\u3002\u5982\u679c\u4f60\u95ee\u6211\uff0c\u6211\u662f\u4ece\u4e8b\u8fd9\u9879\u670d\u52a1\u7684\u4f17\u591a\u5f00\u53d1\u8005\u4e4b\u4e00\uff0c\u6211\u53ef\u80fd\u4f1a\u8bf4\u7c7b\u4f3c\u4e8e\u201c\u4e3a\u632a\u5a01\u516c\u4f17\u63d0\u4f9b\u6d41\u884c\u7684\u3001\u9ad8\u8d28\u91cf\u7684\u3001\u591a\u6837\u5316\u7684\u7535\u89c6\u6d41\u5a92\u4f53\u670d\u52a1\u201d\u3002\u5f88\u660e\u663e\uff0c\u63d0\u4f9b\u8fd9\u6837\u7684\u670d\u52a1\u4e0d\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6280\u672f\u95ee\u9898\uff1a\u6211\u4eec\u9700\u8981\u4f1f\u5927\u7684\u5185\u5bb9\u3001\u4f1f\u5927\u7684\u5c55\u793a\u3001\u4f1f\u5927\u7684\u53ef\u7528\u6027\u3001\u4f1f\u5927\u7684\u4ea4\u4ed8\u5e73\u53f0\u7b49\u7b49\u3002\u521b\u5efa\u6709\u7528\u7684\u3001\u91cd\u8981\u7684\u8f6f\u4ef6\u7cfb\u7edf\u662f\u4e00\u9879\u591a\u5b66\u79d1\u7684\u5de5\u4f5c\u3002\n\u540c\u6837\u6e05\u695a\u7684\u662f\uff0c\u8fd9\u6837\u4e00\u4e2a\u9ad8\u7ea7\u522b\u7684\u95ee\u9898\u9648\u8ff0\u5fc5\u987b\u4ee5\u4e00\u767e\u4e07\u79cd\u65b9\u5f0f\u52a0\u4ee5\u89e3\u91ca\u548c\u8be6\u7ec6\u8bf4\u660e\uff0c\u624d\u80fd\u5177\u6709\u53ef\u64cd\u4f5c\u6027\u3002\u6240\u6709\u4e0a\u8ff0\u95ee\u9898\u5f00\u59cb\u7eb7\u81f3\u6c93\u6765\u3002\u8c01\u63d0\u4f9b\u5fc5\u8981\u7684\u89e3\u91ca\u548c\u5ba1\u8bae\uff1f\u8fd9\u4e2a\u95ee\u9898\u662f\u8c01\u9020\u6210\u7684\uff1f\u662f\u6211\u4eec\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5417\uff1f\u7535\u89c6\u6d41\u5a92\u4f53\u670d\u52a1\u7684\u4ea7\u54c1\u6240\u6709\u8005\uff1f\u7528\u6237\u4f53\u9a8c\u4e13\u5bb6\uff1f\u6211?\u3002\u516c\u4f17\uff1f\u7b54\u6848\u662f\u6211\u4eec\u6240\u6709\u4eba\u90fd\u6ca1\u6709\uff01\n\u4f46\u5b83\u4f1a\u53d8\u5f97\u66f4\u7cdf\uff0c\u6216\u8005\u66f4\u6709\u8da3\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u89c2\u70b9\u3002\u4e16\u754c\u662f\u52a8\u6001\u7684\u3002\u4e0d\u7ba1\u6211\u4eec\u559c\u4e0d\u559c\u6b22\uff0c\u5b83\u4e00\u76f4\u5728\u53d8\u3002\u56e0\u6b64\uff0c\u201c\u95ee\u9898\u201d\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\u3002\u8fd9\u4e0d\u662f\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u4e0d\u5b58\u5728\u4e8e\u771f\u7a7a\u4e2d\u3002\u4f8b\u5982\uff0c\u516c\u4f17\u5a92\u4f53\u6d88\u8d39\u4e60\u60ef\u7684\u53d8\u5316\u5bf9\u6211\u4eec\u7684\u5f71\u54cd\u5f88\u5927\u3002\u56fd\u9645\u5a92\u4f53\u5de8\u5934\u7684\u884c\u52a8\u4e5f\u5f71\u54cd\u7740\u6211\u4eec\u7684\u884c\u52a8\uff0c\u5927\u578b\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u7684\u884c\u52a8\u4e5f\u662f\u5982\u6b64\u3002\u4e00\u5207\u90fd\u5728\u6539\u53d8\uff0c\u6709\u65f6\u4f1a\u4ece\u4ee4\u4eba\u60ca\u8bb6\u7684\u89d2\u5ea6\u4ee5\u4ee4\u4eba\u60ca\u8bb6\u7684\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\u3002\n\u5728\u8fd9\u6837\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\u201c\u95ee\u9898\u201d\u5462\uff1f\u6211\u4eec\u672a\u6765\u7684\u6700\u4f73\u670d\u52a1\u65b9\u5411\u662f\u4ec0\u4e48\uff1f\u600e\u6837\u624d\u80fd\u4f7f\u5b83\u66f4\u53d7\u6b22\u8fce\uff0c\u8d28\u91cf\u66f4\u9ad8\uff0c\u66f4\u591a\u6837\u5316\uff0c\u5bf9\u516c\u4f17\u66f4\u597d\uff1f\u4f17\u8bf4\u7eb7\u7ead\uff01\u662fML\u9a71\u52a8\u7684\u5b9a\u5236\u548c\u4e2a\u6027\u5316\u5417\uff1f\u5b83\u6709\u66f4\u591a\u7684\u793e\u4ea4\u529f\u80fd\u5417\uff1f\u6311\u6218\u7535\u89c6\u5185\u5bb9\u53ca\u5176\u6d88\u8d39\u65b9\u5f0f\u7684\u662f\u5168\u65b0\u7684\u8eab\u4e34\u5176\u5883\u7684\u4e92\u52a8\u4f53\u9a8c\u5417\uff1f\u6211\u4eec\u4e5f\u4e0d\u77e5\u9053\u3002\u6ca1\u4eba\u77e5\u9053\u3002\n\u5982\u679c\u8ba4\u4e3a\u6709\u201c\u7528\u6237\u201d\u8fd9\u56de\u4e8b\uff0c\u90a3\u5c31\u592a\u5929\u771f\u4e86\u3002\u5982\u679c\u771f\u7684\u6709\u201c\u4f7f\u7528\u8005\u201d\u8fd9\u56de\u4e8b\uff0c\u4ee5\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u201c\u95ee\u9898\u201d\uff0c\u5b9e\u5728\u662f\u592a\u5929\u771f\u4e86\u3002\u5982\u679c\u4ed6\u4eec\u80fd\u5411\u6211\u4eec\u63d0\u4f9b\u201c\u95ee\u9898\u201d\uff0c\u4ee5\u4e3a\u5b83\u4f1a\u957f\u671f\u7a33\u5b9a\uff0c\u90a3\u5c31\u592a\u5929\u771f\u4e86\u3002\u5982\u679c\u201c\u95ee\u9898\u201d\u786e\u5b9e\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4fdd\u6301\u7a33\u5b9a\uff0c\u90a3\u4e48\u8ba4\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u7406\u89e3\u5b83\u7684\u60f3\u6cd5\u662f\u5929\u771f\u7684\u3002\u4ee5\u6b64\u7c7b\u63a8\u3002\n\u6211\u4eec\u4e0d\u80fd\u6307\u671b\u201c\u7528\u6237\u201d\u5411\u6211\u4eec\u63d0\u4f9b\u95ee\u9898\u63cf\u8ff0\uff0c\u81f3\u5c11\u6211\u4eec\u4e0d\u80fd\u7528\u5b83\u6765\u5b9e\u73b0\u53ef\u6267\u884c\u89c4\u8303\u3002\u5b9a\u4e49\u95ee\u9898\u7684\u95ee\u9898\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5728\u4e00\u4e2a\u5177\u4f53\u4f46\u4e0d\u65ad\u53d8\u5316\u7684\u80cc\u666f\u4e0b\u5c55\u5f00\uff0c\u5728\u4e00\u4e2a\u7531\u4eba\u7c7b\u884c\u4e3a\u8005\u7ec4\u6210\u7684\u590d\u6742\u7cfb\u7edf\u4e2d\u5c55\u5f00\u3002\u8fd9\u4e0d\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u5b83\u5728\u6211\u4eec\u505a\u7684\u6bcf\u4ef6\u4e8b\u4e2d\u90fd\u6839\u6df1\u8482\u56fa\u3002\u6211\u4eec\u65e0\u6cd5\u9003\u8131\u5b83\u3002\u7ed9\u5b83\u8d34\u4e0a\u610f\u5916\u6807\u7b7e\u4e5f\u4e0d\u4f1a\u8ba9\u5b83\u6d88\u5931\u3002\n\u6211\u4eec\u5e94\u8be5\u63a5\u53d7\u5b83\uff0c\u800c\u4e0d\u662f\u5ffd\u89c6\u5b83\u6216\u68a6\u60f3\u4e00\u4e2a\u201c\u7406\u60f3\u4e16\u754c\u201d\uff0c\u5728\u90a3\u91cc\u8f6f\u4ef6\u5f00\u53d1\u7684\u6240\u6709\u8fd9\u4e9b\u65b9\u9762\u90fd\u53ef\u4ee5\u88ab\u5ffd\u7565\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0d\u4ec5\u63a5\u53d7\u5b83\uff0c\u800c\u4e14\u628a\u5b83\u89c6\u4e3a\u6211\u4eec\u8981\u5904\u7406\u7684\u5de5\u4f5c\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u4e0d\u4ec5\u5e94\u8be5\u63d0\u4f9b\u7f16\u7a0b\u6216\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\u8f6f\u4ef6\u7684\u4e13\u4e1a\u77e5\u8bc6\uff0c\u8fd8\u5e94\u8be5\u63d0\u4f9b\u5fc3\u7406\u6a21\u578b\u7684\u5916\u90e8\u5316\u65b9\u9762\u7684\u4e13\u4e1a\u77e5\u8bc6\uff0c\u4ee5\u4fc3\u8fdb\u4ea4\u6d41\u548c\u652f\u6301\u534f\u4f5c\u5efa\u6a21\u3002\u8f6f\u4ef6\u5f00\u53d1\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e00\u4e2a\u901a\u4fe1\u95ee\u9898\u3002\u6211\u4eec\u5e94\u8be5\u79ef\u6781\u53c2\u4e0e\u5b9a\u4e49\u3001\u63cf\u7ed8\u3001\u63cf\u8ff0\u548c\u63a2\u7d22\u8d85\u8d8a\u8f6f\u4ef6\u7cfb\u7edf\u7684\u95ee\u9898\u57df\u672c\u8eab\u3002\u6211\u4eec\u5e94\u8be5\u63d0\u4f9b\u66f4\u597d\u7684\u6982\u5ff5\u548c\u66f4\u4e30\u5bcc\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u8be5\u9886\u57df\u3002\u5b83\u5c06\u5e2e\u52a9\u6211\u4eec\u53d1\u73b0\u65b0\u7684\u548c\u66f4\u597d\u7684\u95ee\u9898\u63cf\u8ff0\uff0c\u8fd9\u5c06\u5bfc\u81f4\u65b0\u7684\u548c\u66f4\u597d\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002\u8fd9\u79cd\u63a2\u7d22\u662f\u4e00\u4e2a\u6c38\u65e0\u6b62\u5883\u7684\u53d1\u73b0\u3001\u534f\u5546\u548c\u91cd\u65b0\u8bc4\u4f30\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u5e94\u8be5\u5728\u8fd9\u65b9\u9762\u53d1\u6325\u5e26\u5934\u4f5c\u7528\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u522b\u4eba\u4e3a\u6211\u4eec\u505a\u8fd9\u4ef6\u4e8b\u3002\n\u5f53\u6211\u4eec\u5047\u88c5\u6709\u7528\u6237\u53ef\u4ee5\u4ea4\u7ed9\u201c\u5f00\u53d1\u56e2\u961f\u201d\u5b9e\u73b0\u7684\u201c\u672c\u8d28\u95ee\u9898\u201d\u65f6\uff0c\u6211\u4eec\u662f\u5929\u771f\u7684\u67cf\u62c9\u56fe\u4e3b\u4e49\u8005\u3002\u6211\u4eec\u8868\u73b0\u5f97\u597d\u50cf\u201c\u95ee\u9898\u201d\u662f\u67d0\u79cd\u7a33\u5b9a\u548c\u6c38\u6052\u7684\u4e1c\u897f\uff0c\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7684\u5148\u9a8c\u7684\u3001\u795e\u5723\u7684\u5b9e\u4f53\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u5927\u591a\u6570\u95ee\u9898\u9886\u57df\u7684\u73b0\u5b9e\u3002\u4e5f\u8bb8\u53ef\u4ee5\u5c06\u8fd9\u6837\u7684\u95ee\u9898\u8bc6\u522b\u4e3a\u7eaf\u7cb9\u62bd\u8c61\u7684\u6570\u5b66\u7ed3\u6784--\u4e0d\u9700\u8981\u5728\u6211\u4eec\u5c45\u4f4f\u7684\u8f6c\u77ac\u5373\u901d\u7684\u4e16\u754c\u4e2d\u624e\u6839\u7684\u7ed3\u6784\u3002\u4f46\u662f\u5927\u591a\u6570\u8f6f\u4ef6\u7cfb\u7edf\u4e0d\u5904\u7406\u8fd9\u6837\u7684\u7ed3\u6784\u3002\n\u76f8\u53cd\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u6216\u8f6f\u4ef6\u7cfb\u7edf\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u52a8\u6001\u4e16\u754c\u4e2d\u5904\u7406\u975e\u6b63\u5f0f\u7684\u3001\u6a21\u68f1\u4e24\u53ef\u7684\u3001\u81ea\u76f8\u77db\u76fe\u7684\u3001\u6ce2\u52a8\u7684\u3001\u4e0d\u7a33\u5b9a\u7684\u95ee\u9898\u3002\u201c\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u201d\u603b\u662f\u5904\u4e8e\u8c08\u5224\u548c\u5c40\u90e8\u7406\u89e3\u7684\u72b6\u6001\u3002\u5047\u8bbe\u548c\u5047\u5b9a\u7684\u4e0d\u53d8\u91cf\u88ab\u4e00\u4e2a\u6ca1\u6709\u7279\u522b\u8003\u8651\u6211\u4eec\u8bd5\u56fe\u63cf\u8ff0\u5b83\u7684\u73b0\u5b9e\u6240\u8bc1\u660e\u662f\u65e0\u6548\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6ca1\u6709\u73b0\u6709\u6a21\u5f0f\u7684\u5931\u6548\uff0c\u5c31\u4e0d\u53ef\u80fd\u6709\u521b\u65b0\uff01\u8f6f\u4ef6\u5f00\u53d1\u7684\u95ee\u9898\u4e0d\u662f\u201c\u5982\u4f55\u5b9e\u73b0\u7ed9\u5b9a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u800c\u4e0d\u642c\u8d77\u77f3\u5934\u7838\u81ea\u5df1\u7684\u811a\u201d\u3002\u5b83\u662f\u5c06\u672c\u8d28\u4e0a\u662f\u975e\u6b63\u5f0f\u548c\u4e0d\u53ef\u5f62\u5f0f\u5316\u7684\u4e1c\u897f\u6b63\u89c4\u5316\u3002\u6b63\u5982\u65af\u8482\u82ac\u00b7\u6770\u4f0a\u00b7\u53e4\u5c14\u5fb7\u5728\u201c\u6591\u9a6c\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u201d\u4e00\u4e66\u4e2d\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u201c\u6211\u4e0d\u76f8\u4fe1\u5927\u81ea\u7136\u7684\u8bbe\u8ba1\u4f1a\u8ba9\u6211\u4eec\u6cae\u4e27\uff0c\u4f46\u6211\u8fd8\u662f\u4e3a\u5979\u7684\u4e0d\u59a5\u534f\u611f\u5230\u9ad8\u5174\u3002\u201d\n\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u8fd9\u79cd\u60c5\u51b5\u89c6\u800c\u4e0d\u89c1\u3002\u8fd9\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u4e00\u4e2a\u5185\u5728\u95ee\u9898\uff0c\u56e0\u6b64\u4e5f\u662f\u4e00\u4e2a\u57fa\u672c\u95ee\u9898\uff0c\u4e5f\u662f\u6211\u4eec\u5fc5\u987b\u8fce\u5934\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5728\u201c\u4e16\u754c\u4e0e\u673a\u5668\u201d(The World And The Machine)\u4e2d\uff0c\u8fc8\u514b\u5c14\u00b7A\u00b7\u6770\u514b\u900a(Michael A.Jackson)\u63d0\u5230\u4e86\u4ed6\u6240\u8bf4\u7684\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u539f\u7406\u201d\uff1a\n\u5728\u5e94\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u6982\u5ff5\u548c\u95ee\u9898\u4e0d\u660e\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u786e\u5207\u7684\u65b9\u6cd5\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5fc5\u987b\u83b7\u5f97\u6df1\u523b\u7684\u7406\u89e3\u548c\u4e30\u5bcc\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u95ee\u9898\u57df\u672c\u8eab\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6211\u4eec\u60f3\u8981\u5728\u8be5\u95ee\u9898\u57df\u4e2d\u64cd\u4f5c\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002\n\u6311\u6218\u5728\u4e8e\u6210\u529f\u5730\u6253\u597d\u4e00\u573a\u4e0d\u53ef\u80fd\u7684\u6218\u6597\u3002\u6211\u4eec\u5fc5\u987b\u4e0d\u65ad\u5c1d\u8bd5\u5c06\u95ee\u9898\u9501\u5b9a\u5230\u8db3\u591f\u7684\u7a0b\u5ea6\uff0c\u4ee5\u4fbf\u80fd\u591f\u6784\u5efa\u4e00\u53f0\u6709\u7528\u7684\u673a\u5668\u6765\u5e2e\u52a9\u89e3\u51b3\u95ee\u9898\uff0c\u5c31\u50cf\u6211\u4eec\u76ee\u524d\u6240\u7406\u89e3\u7684\u90a3\u6837\u3002\u6211\u4eec\u5fc5\u987b\u63a5\u53d7\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u6682\u65f6\u7684\uff0c\u56e0\u4e3a\u95ee\u9898\u4f1a\u6539\u53d8\u3002\u7136\u540e\uff0c\u6211\u4eec\u5fc5\u987b\u52aa\u529b\u5728\u4e00\u4e2a\u6839\u672c\u4e0d\u7a33\u5b9a\u7684\u95ee\u9898\u548c\u4e00\u4e2a\u6e34\u671b\u7a33\u5b9a\u7684\u673a\u5668\u4e4b\u95f4\u4fdd\u6301\u821e\u8e48\uff0c\u800c\u4e0d\u662f\u5012\u4e0b\u3002\n\u5982\u679c\u6211\u4eec\u5ffd\u89c6\u8fd9\u4e00\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u6307\u671b\u8fd9\u4e00\u52aa\u529b\u53d6\u5f97\u6210\u529f\u3002\u5bf9\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u63cf\u8ff0\u6ca1\u6709\u8003\u8651\u5230\u5fc5\u7136\u7684\u6b63\u5f0f\u7cfb\u7edf\u548c\u4e0d\u53ef\u8fd8\u539f\u7684\u975e\u6b63\u5f0f\u4e16\u754c\u4e4b\u95f4\u7684\u6301\u7eed\u7d27\u5f20\uff0c\u8fd9\u5c31\u9057\u6f0f\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u4e00\u4e9b\u57fa\u672c\u5185\u5bb9\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u201c\u8d70\u51fa\u7126\u6cb9\u5751\u201d\u662f\u9519\u8bef\u7684\u3002\n\u6211\u8ba4\u4e3a\u6211\u4eec\u9700\u8981\u63a5\u53d7\u548c\u62e5\u62b1\u8fd9\u4e2a\u7126\u6cb9\u5751\u3002\u81f3\u5c11\u90a3\u65f6\u6211\u4eec\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u590d\u6742\u6027\u7684\u771f\u6b63\u539f\u56e0\u3002\u73b0\u5b9e\u4e16\u754c\u662f\u4e00\u4e2a\u53c8\u70ed\u53c8\u7c98\u7684\u5730\u65b9\u3002\u8fd9\u662f\u6211\u4eec\u7684\u8f6f\u4ef6\u7cfb\u7edf\u548c\u6211\u4eec\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u8fd0\u884c\u7684\u5730\u65b9\u3002\u4efb\u4f55\u6709\u8da3\u7684\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u662f\u5bb9\u6613\u7684\u3002\u4f46\u662f\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u632f\u4f5c\u8d77\u6765\uff0c\u4e00\u5207\u90fd\u662f\u6709\u53ef\u80fd\u7684\uff01", "note_en": "I recently re-read the \u201c Out of the Tar Pit\u201d paper by Ben Moseley and Peter Marks for a Papers We Love session at work. It is a pretty famous paper. You can find it at the Papers We Love repository at GitHub for the simple reason that lots of people love it. Reading the paper again triggered some thoughts, hence this blog post.\n  Beware of the Turing tar-pit in which everything is possible but nothing of interest is easy.\n A  Turing tar-pit is a language or system that is Turing complete (and so can do as much as any language or system can do) yet is cumbersome and impractical to use. The Turing machine itself is a Turing tar-pit, because you probably wouldn\u2019t use it at work to solve real problems. It might be amusing but not practical.\n The implication of the title is that we are currently in a Turing tar-pit, and we need to take measures to get out of it. Specifically, the measures outlined in the paper.\n The paper consists of two parts. The first part is an essay about the causes and effects of complexity in software. The second part is a proposed programming model to minimize so-called accidental complexity in software.\n The argument of the paper goes like this: Complexity is the primary cause of problems in software development. Complexity is problematic because it hinders the understanding of software systems. This leads to all kinds of bad second-order effects including unreliability, security issues, late delivery and poor performance, and \u2013 in a vicious circle \u2013 compound complexity, making all the problems worse in a non-linear fashion as systems grow larger.\n Following  Fred Brooks in \u201c No Silver Bullet\u201c, the authors distinguish between  essential and  accidental complexity. The authors define \u201cessential complexity\u201d as the complexity inherent in the problem seen by the users. The \u201caccidental complexity\u201d is all the rest, including everything that has to do with the mundane, practical aspects of computing.\n The authors identify  state handling,  control flow and  code volume as drivers of complexity. Most of this complexity is labeled \u201caccidental\u201d, since it has to do with the physical reality of the machine, not with the user\u2019s problem.\n The proposed fix is to turn the user\u2019s informal problem statement into a formal one: to derive an executable specification. Beyond that, we should only allow for the minimal addition of \u201caccidental\u201d complexity as needed for practical efficiency concerns.\n The authors find our current programming models inadequate because they incur too much accidental complexity. Hence a new programming model is needed, one that incurs a minimum of accidental complexity. The second part of the paper presents such a model.\n What struck me as I was reading the paper again was that it is wrong about the causes of complexity and naive about software development in general.\n The paper is wrong for two reasons. First, because it treats software development as an implementation problem. It would be nice if that were true. It\u2019s not. We will not get much better at software development if we keep thinking that it is. Second, because it ignores the dynamics of software development and makes invalid assumptions. Specifically, it is naive about the nature of the problems we address by making software.\n I agree with the authors that complexity is a tremendous problem in software. The non-linear cumulation of complexity often threatens to make non-trivial software development efforts grind to a halt. Many software systems are not just riddled with  technical debt which is the term we often use for runaway complexity \u2013 they have practically gone bankrupt! However, the problem of complexity cannot be solved by means of a better programming model alone. We must trace the causes of complexity beyond the realm of the machine and into the real world. While better programming models would be nice, we can\u2019t expect wonders from them. The reason is that the root cause of complexity is to be found in the strenuous relationship between the software system and the world in which it operates. This is outside the realm of programming models.\n According to the authors, the role of a software development team is \u201cto produce (using some given language and infrastructure) and maintain a software system which serves the purposes of its users\u201d. In other words, the role is to implement the software. The role of the user, on the other hand, is to act as oracle with respect to the problem that needs to be solved. The authors note in parenthesis that they are assuming \u201cthat the users do in fact know and understand the problem that they want solved\u201d. Yet it is well-known that this assumption doesn\u2019t hold! Ask anyone in software! Already we\u2019re in trouble. How can we create an executable specification without a source for this knowledge and understanding?\n  In any non-trivial system there is some complexity inherent in the problem that needs to be solved.\n So clearly the problem is important. But what is it? In fact, let\u2019s pull the sentence \u201cthe problem that needs to be solved\u201d apart a bit, by asking some questions.\n Where did the problem come from? Who defined the problem? How is the problem articulated and communicated, by whom, to whom? Is there agreement on what the problem is? How many interpretations and formulations of the problem are there? Why this problem and not some other problem? Who are affected by this problem? Who has an interest in it? Who owns it? Why does the problem matter? Who determined that it was a problem worth solving? Why does it need to be solved? How badly does it need to be solved? Is time relevant? Has it always been a problem? How long has this problem or similar problems existed? Could it cease to be a problem? What happens if it isn\u2019t solved? Is a partial solution viable? How does the problem relate to other problems, or to solutions to other problems? How often does the problem change? What does it mean for the problem to change? Will it still need solving? What forces in the real world could potentially lead to changes? How radical can we expect such changes to be?\n We quickly see that the problem isn\u2019t  the solution, the problem is the problem itself! How can we even begin to have illusions about how to best develop a \u201csolution\u201d to our \u201cproblem\u201d without answers to at least some of these questions? The curse of software development is that we can never fully answer all of these questions, yet they are crucial to our enterprise! If we are to look for root causes of complexity in software, we must start by addressing questions such as these.\n When we treat the problem definition as somehow outside the scope of the software development effort, we set ourselves up for nasty surprises \u2013 and rampant complexity. As  Gerald Weinberg put it in \u201c Are Your Lights On?\u201c: \u201cThe computer field is a mother lode of problem definition lessons.\u201d Indeed, any ambiguity, misunderstandings, conflicts, conflict avoidance etc with respect to what the problem  is will naturally come back to haunt us in the form of complexity when we try to implement a solution.\n Consider an example of actual software development by an actual organization in an actual domain: the TV streaming service offered by NRK, the national public broadcaster in Norway. It\u2019s where I work. What is the problem? It depends on who you ask. Who should you ask? I happen to be nearby. If you ask me, one of many developers working on the service, I might say something like \u201cto provide a popular, high-quality, diverse TV streaming service for the Norwegian public\u201d. It is immediately clear that providing such a service is not a purely technical problem: we need great content, great presentation, great usability, a great delivery platform, among many other things. Creating useful, non-trivial software systems is a multi-disciplinary effort.\n It is also clear that such a high-level problem statement must be interpreted and detailed in a million ways in order to be actionable. All the questions above start pouring in. Who provides the necessary interpretation and deliberation? Who owns this problem? Is it our CEO? The product owner for the TV streaming service? The user experience experts? Me? The public? The answer is all and none of us!\n But it gets worse, or more interesting, depending on your perspective. The world is dynamic. It changes all the time, whether we like it or not. Hence \u201cthe problem\u201d changes as well. It is not something that we can exercise full control over. We don\u2019t exist in a vacuum. We are heavily influenced by changes to the media consumption habits of the public, for instance. The actions of the international media giants influence our actions as well, as do the actions of the large social media platforms. Everything changes, sometimes in surprising ways from surprising angles.\n With this backdrop, how do we address \u201cthe problem\u201d? What is the best future direction for our service? What would make it more popular, higher quality, more diverse, better for the public? Opinions vary! Is it ML-driven customization and personalization? Is it more social features? Is it radical new immersive and interactive experiences that challenge what TV content is and how it is consumed? We don\u2019t know. No-one knows.\n It is naive to think that there is such a thing as \u201cthe user\u201d. If there were such a thing as \u201cthe user\u201d, it is naive to think that they could provide us with \u201cthe problem\u201d. If they could provide us with \u201cthe problem\u201d, it is naive to think that it would stay stable over time. If \u201cthe problem\u201d did stay stable over time, it is naive to think that everyone would understand it the same way. And so on and so forth.\n We cannot expect \u201cthe user\u201d to provide us with a problem description, at least not one that we could use to implement an executable specification. The problem of defining the problem unfolds over time in a concrete yet shifting context, in a complex system of human actors. There is nothing inessential about this, it is ingrained in everything we do. We can\u2019t escape from it. Labeling it accidental won\u2019t make it go away.\n Instead of ignoring it or dreaming about an \u201cideal world\u201d where all of these aspects of software development can be ignored, we should accept it. Not only accept it, in fact, but see it as our job to handle. Software developers should provide expertise not just in programming or in running software in production, but also in the externalization of mental models to facilitate communication and enable collaborative modelling. Software development is largely a communication problem. We should take active part in defining, delineating, describing and exploring the problem domain itself, which goes beyond the software system. We should contribute to better concepts and a richer language to describe the domain. It will help us uncover new and better problem descriptions, which will lead to new and better software systems. This exploration is a never-ending process of discovery, negotiation and reevaluation. We should lead in this effort, not wait for someone else to do it for us.\n When we pretend that there is such a thing as \u201cthe essential problem\u201d that the user can hand over to \u201cthe development team\u201d for implementation, we are being naive Platonists. We\u2019re acting as if \u201cthe problem\u201d is something stable and eternal, an a priori, celestial entity that we can uncover. But that is not the reality of most problem domains. It may be possible to identify such problems for purely abstract, mathematical structures \u2013 structures that need no grounding in the fleeting world that we inhabit. But most software systems don\u2019t deal with such structures.\n Instead, most programs or software systems deal with informal, ambiguous, self-contradictory, fluctuating, unstable problems in a shifting, dynamic world. \u201cThe problem that needs solving\u201d is always in a state of negotiation and partial understanding. Assumptions and presumed invariants are rendered invalid by a reality that has no particular regard for our attempts to describe it. Indeed, there can be no innovation without the invalidation of existing models! The problem of software development is not \u201chow to implement a solution to a given problem without shooting yourself in the foot\u201d. It is to formalize something that in its nature is informal and unformalizable. As  Stephen Jay Gould puts it in \u201c What, if anything, is a zebra?\u201c, \u201cI do not believe that nature frustrates us by design, but I rejoice in her intransigence nonetheless.\u201d\n As software developers, we can\u2019t turn a blind eye to this state of affairs. It is an  intrinsic and hence  essential problem in software development, and one that we must tackle head-on. In \u201c The World and the Machine\u201c,  Michael A. Jackson refers to what he calls the \u201cVon Neumann principle\u201d:\n There is no point in using exact methods where there is no clarity in the concepts and issues to which they are to be applied.\n This means that we must gain a deep understanding and a rich language to describe the problem domain itself, not just the software system we want to operate in that problem domain.\n The challenge is to fight an impossible battle successfully. We must constantly try to pin down a problem to a sufficient degree to be able to construct a useful machine that helps solve the problem, as we currently understand it. We must accept that this solution is temporary since the problem will change. And then we must try to keep a dance going on between a fundamentally unstable problem and a machine that longs for stability, without toppling over.\n We can\u2019t hope to be successful in this endeavor if we ignore the nature of this process. An account of complexity in software that doesn\u2019t account for the continuous tension between a necessarily formal system and an irreducibly informal world is missing something essential about software development. That\u2019s why \u201cOut of the Tar Pit\u201d is wrong.\n I think we need to accept and embrace the tar-pit. At least then we\u2019re grappling with the real causes of complexity. The real world is a hot and sticky place. This is where our software systems and we, as software developers, must operate. Nothing of interest is ever going to be easy. But perhaps we can take heart that everything is still possible!", "posttime": "2020-05-23 15:43:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7126\u6cb9,tar,\u95ee\u9898", "title": "\u8fdb\u5165\u7126\u6cb9\u5751", "title_en": "Into the Tar Pit", "transed": 1, "url": "https://einarwh.wordpress.com/2020/05/19/into-the-tar-pit/", "via": "", "real_tags": ["\u7126\u6cb9", "tar", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "ffc75dc14ef85fa89ac324b6b288dc20.jpg", "infoid": 1003380, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u4eec138\u4ebf\u5e74\u7684\u5b87\u5b99\u4e2d\uff0c\u50cf\u6211\u4eec\u7684\u94f6\u6cb3\u7cfb\u4e00\u6837\u7684\u5927\u591a\u6570\u661f\u7cfb\u90fd\u662f\u9010\u6e10\u5f62\u6210\u7684\uff0c\u8fbe\u5230\u5927\u8d28\u91cf\u7684\u65f6\u95f4\u76f8\u5bf9\u8f83\u665a\u3002\u4f46\u662f\uff0c\u7528\u963f\u5854\u5361\u9a6c\u5927\u6beb\u7c73/\u4e9a\u6beb\u7c73\u9635\u5217(ALMA)\u53d1\u73b0\u7684\u4e00\u4e2a\u5de8\u5927\u7684\u65cb\u8f6c\u76d8\u72b6\u661f\u7cfb\uff0c\u5728\u5b87\u5b99\u53ea\u6709\u73b0\u5728\u5e74\u9f84\u768410%\u65f6\u88ab\u53d1\u73b0\uff0c\u6311\u6218\u4e86\u4f20\u7edf\u7684\u661f\u7cfb\u5f62\u6210\u6a21\u578b\u3002\u8fd9\u9879\u7814\u7a76\u53d1\u8868\u57282020\u5e745\u670820\u65e5\u7684\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u3002\u661f\u7cfbDLA0817G\uff0c\u4ee5\u5df2\u6545\u5929\u6587\u5b66\u5bb6\u4e9a\u745f\u00b7M\u00b7\u6c83\u5c14\u592b\u7684\u540d\u5b57\u6635\u79f0\u4e3a\u6c83\u5c14\u592b\u76d8\uff0c\u662f\u8fc4\u4eca\u89c2\u6d4b\u5230\u7684\u6700\u8fdc\u7684\u65cb\u8f6c\u76d8\u72b6\u661f\u7cfb\u3002ALMA\u65e0\u4e0e\u4f26\u6bd4\u7684\u529b\u91cf\u4f7f\u6211\u4eec\u6709\u53ef\u80fd\u770b\u5230\u8fd9\u4e2a\u661f\u7cfb\u4ee5\u6bcf\u79d2170\u82f1\u91cc(272\u516c\u91cc)\u7684\u901f\u5ea6\u65cb\u8f6c\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u7684\u94f6\u6cb3\u7cfb\u3002\n\u5fb7\u56fd\u6d77\u5fb7\u5821\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u5929\u6587\u5b66\u7814\u7a76\u6240\u7684\u4e3b\u8981\u4f5c\u8005\u9a6c\u585e\u5c14\u00b7\u5c3c\u5c14\u66fc\u8bf4\uff0c\u867d\u7136\u4e4b\u524d\u7684\u7814\u7a76\u6697\u793a\u4e86\u8fd9\u4e9b\u65e9\u671f\u65cb\u8f6c\u7684\u5bcc\u542b\u6c14\u4f53\u7684\u5706\u76d8\u7684\u5b58\u5728\uff0c\u4f46\u591a\u4e8f\u4e86ALMA\uff0c\u6211\u4eec\u73b0\u5728\u6709\u660e\u786e\u7684\u8bc1\u636e\u8868\u660e\uff0c\u5b83\u4eec\u6700\u65e9\u53d1\u751f\u5728\u5927\u7206\u70b8\u540e\u768415\u4ebf\u5e74\u524d\uff0c\u5fb7\u56fd\u6d77\u5fb7\u5821\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u5929\u6587\u5b66\u7814\u7a76\u6240\u7684\u4e3b\u8981\u4f5c\u8005\u9a6c\u585e\u5c14\u00b7\u5c3c\u5c14\u66fc(Marcel Neeleman)\u8bf4\u3002\n\u6c83\u5c14\u592b\u5706\u76d8\u7684\u53d1\u73b0\u4e3a\u8bb8\u591a\u661f\u7cfb\u5f62\u6210\u6a21\u62df\u63d0\u4f9b\u4e86\u6311\u6218\uff0c\u8fd9\u4e9b\u6a21\u62df\u9884\u6d4b\uff0c\u5728\u5b87\u5b99\u6f14\u5316\u7684\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5927\u8d28\u91cf\u661f\u7cfb\u662f\u901a\u8fc7\u8f83\u5c0f\u661f\u7cfb\u548c\u70ed\u6c14\u56e2\u7684\u591a\u6b21\u5408\u5e76\u800c\u6210\u957f\u7684\u3002\n\u5c3c\u5c14\u66fc\u89e3\u91ca\u8bf4\uff0c\u6211\u4eec\u5728\u5b87\u5b99\u65e9\u671f\u53d1\u73b0\u7684\u5927\u591a\u6570\u661f\u7cfb\u770b\u8d77\u6765\u90fd\u50cf\u706b\u8f66\u6b8b\u9ab8\uff0c\u56e0\u4e3a\u5b83\u4eec\u7ecf\u5386\u4e86\u59cb\u7ec8\u5982\u4e00\u7684\u3001\u7ecf\u5e38\u662f\u731b\u70c8\u7684\u5408\u5e76\u3002\u8fd9\u4e9b\u70ed\u5408\u5e76\u4f7f\u6211\u4eec\u5f88\u96be\u5f62\u6210\u6709\u5e8f\u7684\u3001\u51b7\u65cb\u8f6c\u7684\u5706\u76d8\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u6211\u4eec\u73b0\u5728\u7684\u5b87\u5b99\u4e2d\u89c2\u5bdf\u5230\u7684\u90a3\u6837\u3002\n\u5728\u5927\u591a\u6570\u661f\u7cfb\u5f62\u6210\u7684\u60c5\u666f\u4e2d\uff0c\u661f\u7cfb\u5728\u5927\u7206\u70b8\u540e60\u4ebf\u5e74\u5de6\u53f3\u624d\u5f00\u59cb\u663e\u793a\u51fa\u7ed3\u6784\u826f\u597d\u7684\u5706\u76d8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5929\u6587\u5b66\u5bb6\u5728\u5b87\u5b99\u53ea\u6709\u73b0\u5728\u5e74\u9f84\u7684\u767e\u5206\u4e4b\u5341\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u4e2a\u76d8\u72b6\u661f\u7cfb\uff0c\u8fd9\u8868\u660e\u80af\u5b9a\u6709\u5176\u4ed6\u751f\u957f\u8fc7\u7a0b\u4e3b\u5bfc\u4e86\u8fd9\u4e00\u4e8b\u5b9e\u3002\n\u8fd9\u7bc7\u8bba\u6587\u7684\u5408\u8457\u8005\u3001\u52a0\u5dde\u5927\u5b66\u5723\u514b\u9c81\u65af\u5206\u6821\u7684J\u00b7\u6cfd\u7ef4\u5c14\u00b7\u666e\u7f57\u67e5\u65af\u5361\u8bf4\uff0c\u6211\u4eec\u8ba4\u4e3a\u6c83\u5c14\u592b\u5706\u76d8\u4e3b\u8981\u662f\u901a\u8fc7\u51b7\u6c14\u4f53\u7684\u7a33\u5b9a\u79ef\u7d2f\u800c\u6210\u957f\u8d77\u6765\u7684\u3002\u7136\u800c\uff0c\u5269\u4e0b\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u5982\u4f55\u5728\u4fdd\u6301\u76f8\u5bf9\u7a33\u5b9a\u7684\u65cb\u8f6c\u5706\u76d8\u7684\u540c\u65f6\u7ec4\u88c5\u5982\u6b64\u5927\u7684\u6c14\u56e2\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8fd8\u5229\u7528\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u7684\u5361\u5c14\u00b7G\u00b7\u8a79\u65af\u57fa\u8d85\u5927\u578b\u9635\u5217(VLA)\u548cNASA/ESA\u54c8\u52c3\u592a\u7a7a\u671b\u8fdc\u955c\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6c83\u5c14\u592b\u5706\u76d8\u4e2d\u6052\u661f\u5f62\u6210\u7684\u4fe1\u606f\u3002\u5728\u5c04\u7535\u6ce2\u6bb5\uff0cALMA\u89c2\u5bdf\u4e86\u661f\u7cfb\u4e2d\u539f\u5b50\u6c14\u4f53\u548c\u5c18\u57c3\u7684\u8fd0\u52a8\u548c\u8d28\u91cf\uff0c\u800cVLA\u5219\u6d4b\u91cf\u4e86\u5206\u5b50\u8d28\u91cf--\u6052\u661f\u5f62\u6210\u7684\u71c3\u6599\u3002\u5728\u7d2b\u5916\u5149\u4e0b\uff0c\u54c8\u52c3\u89c2\u6d4b\u5230\u4e86\u5927\u8d28\u91cf\u6052\u661f\u3002\u666e\u7f57\u67e5\u65af\u5361\u89e3\u91ca\u8bf4\uff0c\u6c83\u5c14\u592b\u76d8\u4e2d\u7684\u8fd9\u4e00\u6bd4\u7387\u81f3\u5c11\u662f\u6211\u4eec\u94f6\u6cb3\u7cfb\u7684\u5341\u500d\u3002\u5b83\u4e00\u5b9a\u662f\u65e9\u671f\u5b87\u5b99\u4e2d\u6700\u591a\u4ea7\u7684\u76d8\u72b6\u661f\u7cfb\u4e4b\u4e00\u3002\n\u6c83\u5c14\u592b\u5706\u76d8\u662fALMA\u4e8e2017\u5e74\u9996\u6b21\u53d1\u73b0\u7684\u3002\u5c3c\u5c14\u66fc\u548c\u4ed6\u7684\u56e2\u961f\u5728\u68c0\u67e5\u4e00\u4e2a\u66f4\u8fdc\u7684\u7c7b\u661f\u4f53\u53d1\u51fa\u7684\u5149\u65f6\u53d1\u73b0\u4e86\u8fd9\u4e2a\u661f\u7cfb\u3002\u7c7b\u661f\u4f53\u53d1\u51fa\u7684\u5149\u5728\u7a7f\u8fc7\u94f6\u6cb3\u7cfb\u5468\u56f4\u5de8\u5927\u7684\u6c22\u6c14\u5e93\u65f6\u88ab\u5438\u6536\u4e86--\u8fd9\u5c31\u662f\u5b83\u662f\u5982\u4f55\u63ed\u793a\u81ea\u5df1\u7684\u3002\u5929\u6587\u5b66\u5bb6\u6ca1\u6709\u5bfb\u627e\u6765\u81ea\u6781\u5176\u660e\u4eae\u4f46\u66f4\u7a00\u6709\u7684\u661f\u7cfb\u7684\u76f4\u5c04\u5149\uff0c\u800c\u662f\u4f7f\u7528\u8fd9\u79cd\u5438\u6536\u65b9\u6cd5\u6765\u5bfb\u627e\u65e9\u671f\u5b87\u5b99\u4e2d\u66f4\u6697\u3001\u66f4\u6b63\u5e38\u7684\u661f\u7cfb\u3002\n\u5c3c\u5c14\u66fc\u8bf4\uff0c\u6211\u4eec\u7528\u8fd9\u79cd\u65b9\u6cd5\u53d1\u73b0\u6c83\u5c14\u592b\u5706\u76d8\u7684\u4e8b\u5b9e\u544a\u8bc9\u6211\u4eec\uff0c\u5b83\u5c5e\u4e8e\u65e9\u671f\u5b58\u5728\u7684\u6b63\u5e38\u661f\u7cfb\u7fa4\u3002\u5f53\u6211\u4eec\u4e0eALMA\u7684\u6700\u65b0\u89c2\u6d4b\u4ee4\u4eba\u60ca\u8bb6\u5730\u663e\u793a\u5b83\u5728\u65cb\u8f6c\u65f6\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u65e9\u671f\u65cb\u8f6c\u7684\u661f\u7cfb\u5e76\u4e0d\u50cf\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u4e48\u7f55\u89c1\uff0c\u800c\u4e14\u5e94\u8be5\u6709\u66f4\u591a\u7684\u65cb\u8f6c\u661f\u7cfb\u3002\n\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u7684\u5929\u6587\u5b66\u9879\u76ee\u4e3b\u4efb\u4e54\u00b7\u4f69\u65af(Joe Pesce)\u8bf4\uff0c\u8fd9\u4e00\u89c2\u6d4b\u96c6\u4e2d\u4f53\u73b0\u4e86ALMA\u7ed9\u5c04\u7535\u5929\u6587\u5b66\u5e26\u6765\u7684\u9ad8\u7ea7\u7075\u654f\u5ea6\u662f\u5982\u4f55\u589e\u5f3a\u4e86\u6211\u4eec\u5bf9\u5929\u6587\u5b66\u7684\u7406\u89e3\u3002\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u662f\u8be5\u671b\u8fdc\u955c\u7684\u8d44\u91d1\u6765\u6e90\uff0c\u8be5\u57fa\u91d1\u4f1a\u8d1f\u8d23\u5929\u6587\u5b66\u9879\u76ee\u7684\u4e3b\u4efb\u4e54\u00b7\u4f69\u65af(Joe Pesce)\u8bf4\u3002ALMA\u5141\u8bb8\u6211\u4eec\u5728\u51e0\u4e4e\u6bcf\u4e00\u6b21\u89c2\u6d4b\u4e2d\u90fd\u6709\u65b0\u7684\u3001\u610f\u60f3\u4e0d\u5230\u7684\u53d1\u73b0\u3002\u66f4\u591a\u4fe1\u606f\uff1a\u5b87\u5b99\u5927\u7206\u70b815\u4ebf\u5e74\u540e\uff0c\u4e00\u4e2a\u5bd2\u51b7\u3001\u5de8\u5927\u3001\u65cb\u8f6c\u7684\u76d8\u72b6\u661f\u7cfb\uff0c\u81ea\u7136\u754c(2020)\u3002\u7f51\u5740\uff1a10.1038/s41586-0202276-y\uff0c\u7f51\u5740\uff1awww.nature.com/products/s41586-0202276-y", "note_en": "In our 13.8 billion-year-old universe, most galaxies like our Milky Way form gradually, reaching their large mass relatively late. But a new discovery made with the Atacama Large Millimeter/submillimeter Array (ALMA) of a massive rotating disk galaxy, seen when the universe was only ten percent of its current age, challenges the traditional models of galaxy formation. This research appears on 20 May 2020 in the journal  Nature.    Galaxy DLA0817g, nicknamed the Wolfe Disk after the late astronomer Arthur M. Wolfe, is the most distant rotating disk galaxy ever observed. The unparalleled power of ALMA made it possible to see this galaxy spinning at 170 miles (272 kilometers) per second, similar to our Milky Way.\n  &#34;While previous studies hinted at the existence of these early rotating gas-rich disk  , thanks to ALMA we now have unambiguous evidence that they occur as early as 1.5 billion years after the Big Bang,&#34; said lead author Marcel Neeleman of the Max Planck Institute for Astronomy in Heidelberg, Germany.\n    The discovery of the Wolfe Disk provides a challenge for many galaxy formation simulations, which predict that massive galaxies at this point in the evolution of the cosmos grew through many mergers of smaller galaxies and hot clumps of gas.\n  &#34;Most galaxies that we find early in the universe look like train wrecks because they underwent consistent and often &#39;violent&#39; merging,&#34; explained Neeleman. &#34;These hot mergers make it difficult to form well-ordered, cold rotating disks like we observe in our present universe.&#34;\n   In most galaxy formation scenarios, galaxies only start to show a well-formed disk around 6 billion years after the Big Bang. The fact that the astronomers found such a disk galaxy when the universe was only ten percent of its current age, indicates that other growth processes must have dominated.\n  &#34;We think the Wolfe Disk has grown primarily through the steady accretion of cold gas,&#34; said J. Xavier Prochaska, of the University of California, Santa Cruz and coauthor of the paper. &#34;Still, one of the questions that remains is how to assemble such a large gas mass while maintaining a relatively stable, rotating disk.&#34;\n    The team also used the National Science Foundation&#39;s Karl G. Jansky Very Large Array (VLA) and the NASA/ESA Hubble Space Telescope to learn more about star formation in the Wolfe Disk. In radio wavelengths, ALMA looked at the galaxy&#39;s movements and mass of atomic gas and dust while the VLA measured the amount of molecular mass\u2014the fuel for star formation. In UV-light, Hubble observed massive stars. &#34;The   rate in the Wolfe Disk is at least ten times higher than in our own galaxy,&#34; explained Prochaska. &#34;It must be one of the most productive disk galaxies in the early universe.&#34;\n       The Wolfe Disk was first discovered by ALMA in 2017. Neeleman and his team found the galaxy when they examined the light from a more distant quasar. The light from the quasar was absorbed as it passed through a massive reservoir of hydrogen gas surrounding the galaxy\u2014which is how it revealed itself. Rather than looking for direct light from extremely bright, but more rare galaxies, astronomers used this &#39;absorption&#39; method to find fainter, and more &#39;normal&#39; galaxies in the early universe.\n  &#34;The fact that we found the Wolfe Disk using this method, tells us that it belongs to the normal population of galaxies present at early times,&#34; said Neeleman. &#34;When our newest observations with ALMA surprisingly showed that it is rotating, we realized that early rotating   galaxies are not as rare as we thought and that there should be a lot more of them out there.&#34;\n  &#34;This observation epitomizes how our understanding of the   is enhanced with the advanced sensitivity that ALMA brings to radio astronomy,&#34; said Joe Pesce, astronomy program director at the National Science Foundation, which funds the telescope. &#34;ALMA allows us to make new, unexpected findings with almost every observation.&#34;        More information:\t\t\t\t\t\t\t\t\t\t\t\tA cold, massive, rotating disk galaxy 1.5 billion years after the Big Bang,  Nature (2020).  DOI: 10.1038/s41586-020-2276-y ,  www.nature.com/articles/s41586-020-2276-y", "posttime": "2020-05-23 15:22:37", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u65e9\u671f,discovers,\u661f\u7cfb", "title": "ALMA\u5728\u65e9\u671f\u5b87\u5b99\u4e2d\u53d1\u73b0\u5927\u8d28\u91cf\u65cb\u8f6c\u76d8", "title_en": "ALMA Discovers Massive Rotating Disk In Early Universe", "transed": 1, "url": "https://phys.org/news/2020-05-alma-massive-rotating-disk-early.html", "via": "", "real_tags": ["\u65e9\u671f", "discovers", "\u661f\u7cfb"]}, {"category": "", "categoryclass": "", "imagename": "7717ad7eed59baca64ed55ee7e10107a.jpg", "infoid": 1003379, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2006\u5e74\uff0c\u5f53\u7814\u7a76\u5458\u8482\u59c6\u00b7\u5df4\u585e\u6d1b\u83ab\u65af(Tim Bartholomaus)\u5728\u963f\u62c9\u65af\u52a0\u7684\u7f57\u7279\u51b0\u5ddd(Root Glacier)\u5468\u56f4\u5f92\u6b65\u65c5\u884c\u5b89\u88c5\u79d1\u5b66\u4eea\u5668\u65f6\uff0c\u9047\u5230\u4e86\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u4e8b\u60c5\u3002\n\u8fd9\u5230\u5e95\u662f\u600e\u4e48\u56de\u4e8b\uff01&#34\uff1b\u5df4\u585e\u6d1b\u9a6c\u56de\u5fc6\u8d77\u5f53\u65f6\u7684\u60f3\u6cd5\u3002\u4ed6\u662f\u7231\u8fbe\u8377\u5927\u5b66\u7684\u51b0\u5ddd\u5b66\u5bb6\u3002\n\u51b0\u5ddd\u4e0a\u6563\u843d\u7740\u4e00\u56e2\u56e2\u82d4\u85d3\u3002\u4ed6\u4eec\u6ca1\u6709\u9644\u7740\u5728\u4efb\u4f55\u4e1c\u897f\u4e0a\uff0c\u4ed6\u4eec\u53ea\u662f\u8eba\u5728\u51b0\u4e0a\u4f11\u606f\uff0c\u4ed6\u8bf4\u3002\u5728\u767d\u8272\u7684\u4e16\u754c\u91cc\uff0c\u5b83\u4eec\u662f\u4eae\u7eff\u8272\u7684\u3002\n\u51fa\u4e8e\u597d\u5947\uff0c\u4ed6\u548c\u4e24\u4f4d\u540c\u4e8b\u5f00\u59cb\u7814\u7a76\u8fd9\u4e9b\u5947\u602a\u7684\u82d4\u85d3\u7403\u3002\u4ed6\u4eec\u5728\u201c\u6781\u5730\u751f\u7269\u5b66\u201d(Polar Biology)\u6742\u5fd7\u4e0a\u62a5\u9053\uff0c\u8fd9\u4e9b\u7403\u53ef\u4ee5\u6301\u7eed\u6570\u5e74\uff0c\u5e76\u4ee5\u4e00\u79cd\u534f\u8c03\u7684\u3001\u7f8a\u7fa4\u7684\u65b9\u5f0f\u56db\u5904\u79fb\u52a8\uff0c\u8fd9\u662f\u7814\u7a76\u4eba\u5458\u76ee\u524d\u8fd8\u65e0\u6cd5\u89e3\u91ca\u7684\u3002\n\u6574\u4e2a\u82d4\u85d3\u7403\u7fa4\u4f53\uff0c\u6574\u4e2a\u7fa4\u4f53\uff0c\u4ee5\u5927\u81f4\u76f8\u540c\u7684\u901f\u5ea6\u548c\u65b9\u5411\u79fb\u52a8\uff0cBartholomaus\u8bf4\u3002\u8fd9\u4e9b\u901f\u5ea6\u548c\u65b9\u5411\u53ef\u80fd\u4f1a\u5728\u51e0\u5468\u5185\u53d1\u751f\u53d8\u5316\u3002\n\u4e0a\u4e16\u7eaa50\u5e74\u4ee3\uff0c\u4e00\u4f4d\u51b0\u5c9b\u7814\u7a76\u4eba\u5458\u5728\u201c\u51b0\u5ddd\u5b66\u6742\u5fd7\u201d(Journal Of Glaciology)\u4e0a\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0c\u6307\u51fa\u6eda\u77f3\u53ef\u4ee5\u805a\u96c6\u82d4\u85d3\u3002\u4ed6\u79f0\u5b83\u4eec\u4e3a\u51b0\u5ddd\u8001\u9f20\u3002\n\u8fd9\u9879\u65b0\u5de5\u4f5c\u589e\u52a0\u4e86\u5bf9\u8fd9\u4e9b\u7ed2\u6bdb\u7403\u7684\u4e00\u5c0f\u90e8\u5206\u7814\u7a76\uff0c\u5c3d\u7ba1\u51b0\u5ddd\u5b66\u5bb6\u65e9\u5c31\u77e5\u9053\u5e76\u503e\u5411\u4e8e\u559c\u6b22\u5b83\u4eec\u3002\n\u540c\u6837\u6765\u81ea\u7231\u8fbe\u8377\u5927\u5b66\u7684\u91ce\u751f\u751f\u7269\u5b66\u5bb6\u7d22\u83f2\u00b7\u5409\u5c14\u4f2f\u7279\u8bf4\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u771f\u7684\u5f88\u50cf\u5728\u51b0\u5ddd\u4e0a\u5954\u8dd1\u7684\u5c0f\u54fa\u4e73\u52a8\u7269\u3001\u5c0f\u8001\u9f20\u3001\u82b1\u6817\u9f20\u6216\u8001\u9f20\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u52a8\u4f5c\u663e\u7136\u975e\u5e38\u7f13\u6162\u3002\n\u6bcf\u4e2a\u7403\u90fd\u50cf\u4e00\u4e2a\u67d4\u8f6f\u3001\u6f6e\u6e7f\u3001\u67d4\u8f6f\u7684\u82d4\u85d3\u6795\u5934\u3002\u8fd9\u4e9b\u7403\u53ef\u4ee5\u7531\u4e0d\u540c\u7684\u82d4\u85d3\u79cd\u7c7b\u7ec4\u6210\uff0c\u5e76\u88ab\u8ba4\u4e3a\u662f\u56f4\u7ed5\u7740\u67d0\u79cd\u6742\u8d28\u5f62\u6210\u7684\uff0c\u6bd4\u5982\u4e00\u70b9\u7070\u5c18\u3002\u5b83\u4eec\u5df2\u7ecf\u5728\u963f\u62c9\u65af\u52a0\u3001\u51b0\u5c9b\u3001\u65af\u74e6\u5c14\u5df4\u7fa4\u5c9b\u548c\u5357\u7f8e\u88ab\u53d1\u73b0\uff0c\u5c3d\u7ba1\u5b83\u4eec\u4e0d\u4f1a\u5728\u4efb\u4f55\u51b0\u5ddd\u4e0a\u751f\u957f--\u4f3c\u4e4e\u6761\u4ef6\u5fc5\u987b\u6070\u5230\u597d\u5904\u3002\n\u5409\u5c14\u4f2f\u7279\u548c\u5df4\u585e\u6d1b\u83ab\u65af\u4ee5\u53ca\u4ed6\u4eec\u5728\u534e\u76db\u987f\u5dde\u7acb\u5927\u5b66\u7684\u540c\u4e8b\u65af\u79d1\u7279\u00b7\u970d\u5854\u6797(Scott Hotaling)\u5bf9\u4ed6\u4eec\u7684\u52a8\u8bae\u611f\u5174\u8da3\u3002\n\u5409\u5c14\u4f2f\u7279\u8bf4\uff0c\u5927\u591a\u6570\u770b\u7740\u5b83\u4eec\u7684\u4eba\u90fd\u4f1a\u7acb\u5373\u60f3\u77e5\u9053\uff0c\u55ef\uff0c\u6211\u60f3\u77e5\u9053\u5b83\u4eec\u662f\u4e0d\u662f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5728\u8fd9\u91cc\u6253\u6eda\u3002\u6211\u8111\u6d77\u4e2d\u6d6e\u73b0\u7684\u662f\u5c0f\u9ec4\u82b1\uff0c\u5b83\u4eec\u663e\u7136\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u4f46\u4e5f\u662f\u5706\u7684\uff0c\u6eda\u6765\u6eda\u53bb\u7684\u3002\n\u5979\u6307\u51fa\uff0c\u7403\u7684\u6574\u4e2a\u8868\u9762\u5fc5\u987b\u5b9a\u671f\u66b4\u9732\u5728\u9633\u5149\u4e0b\u3002\u5409\u5c14\u4f2f\u7279\u8bf4\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5fc5\u987b\u771f\u7684\u6eda\u6765\u6eda\u53bb\uff0c\u5426\u5219\u5e95\u90e8\u7684\u82d4\u85d3\u5c31\u4f1a\u6b7b\u6389\u3002\n\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\u5b83\u4eec\u6eda\u52a8\u7684\u53ef\u80fd\u6027\uff0c\u4ed6\u4eec\u4e4b\u524d\u89c2\u5bdf\u5230\uff0c\u6709\u65f6\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e9b\u7403\u5728\u51b0\u57fa\u4e0a\u6447\u6447\u6b32\u5760\u3002\u5f53\u82d4\u85d3\u7403\u9694\u79bb\u4e86\u4e0b\u9762\u7684\u51b0\uff0c\u9632\u6b62\u5b83\u50cf\u5468\u56f4\u7684\u51b0\u4e00\u6837\u5feb\u901f\u878d\u5316\u65f6\uff0c\u8fd9\u4e2a\u57fa\u5ea7\u53ef\u80fd\u4f1a\u5f62\u6210\u3002\u79d1\u5b66\u5bb6\u4eec\u6000\u7591\u7403\u6700\u7ec8\u4f1a\u4ece\u57fa\u5ea7\u4e0a\u503e\u5012\u5e76\u6eda\u5f00\u3002\n\u4e3a\u4e86\u8ddf\u8e2a\u963f\u62c9\u65af\u52a030\u4e2a\u82d4\u85d3\u7403\u7684\u8fd0\u52a8\uff0c\u5409\u5c14\u4f2f\u7279\u548c\u5df4\u585e\u6d1b\u9a6c\u65af\u5728\u6bcf\u4e2a\u82d4\u85d3\u7403\u4e0a\u6807\u4e0a\u4e86\u4e00\u4e2a\u5c0f\u94c1\u4e1d\u5708\uff0c\u4e0a\u9762\u6709\u4e00\u4e2a\u5f69\u8272\u73e0\u5b50\u7684\u8bc6\u522b\u5e8f\u5217\u3002\u57282009\u5e74\u768454\u5929\u65f6\u95f4\u91cc\uff0c\u4ed6\u4eec\u8ffd\u8e2a\u4e86\u6bcf\u4e2a\u7403\u7684\u4f4d\u7f6e\u3002\u4ed6\u4eec\u57282010\u5e74\u30012011\u5e74\u548c2012\u5e74\u56de\u6765\u68c0\u67e5\u4ed6\u4eec\u3002\n\u5df4\u585e\u6d1b\u83ab\u65af\u8bf4\uff0c\u901a\u8fc7\u5e74\u590d\u4e00\u5e74\u5730\u56de\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u5355\u72ec\u7684\u82d4\u85d3\u7403\u7684\u5bff\u547d\u81f3\u5c11\u662f\uff0c\u4f60\u77e5\u9053\u7684\uff0c\u4e94\u516d\u5e74\uff0c\u751a\u81f3\u53ef\u80fd\u66f4\u957f\u3002\n\u82d4\u85d3\u7403\u7684\u8fd0\u52a8\u5f88\u5947\u7279\u3002\u7814\u7a76\u4eba\u5458\u66fe\u9884\u8ba1\uff0c\u8fd9\u4e9b\u7403\u4f1a\u901a\u8fc7\u4ece\u51b0\u57fa\u4e0a\u6eda\u843d\u800c\u968f\u673a\u79fb\u52a8\u3002\u73b0\u5b9e\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u4e9b\u7403\u4ee5\u4e00\u79cd\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u961f\u5f62\u5e73\u5747\u6bcf\u5929\u79fb\u52a8\u7ea6\u4e00\u82f1\u5bf8-\u5c31\u50cf\u4e00\u7fa4\u9e1f\u6216\u4e00\u7fa4\u89d2\u9a6c\u3002\n\u5df4\u585e\u6d1b\u9a6c\u65af\u8bf4\uff0c\u5f53\u6211\u4eec\u53c2\u89c2\u4ed6\u4eec\u6240\u6709\u4eba\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u90fd\u5728\u76f8\u5bf9\u7f13\u6162\u5730\u79fb\u52a8\uff0c\u6700\u521d\u90fd\u662f\u5411\u5357\u79fb\u52a8\u3002\u7136\u540e\u4ed6\u4eec\u90fd\u5f00\u59cb\u52a0\u901f\uff0c\u5e76\u5f00\u59cb\u5411\u897f\u65b9\u504f\u79bb\u3002\u7136\u540e\u4ed6\u4eec\u53c8\u653e\u6162\u4e86\u901f\u5ea6\uff0c\u5411\u897f\u524d\u8fdb\u4e86\u66f4\u8fdc\u3002\n\u7814\u7a76\u4eba\u5458\u8003\u8651\u4e86\u51e0\u79cd\u53ef\u80fd\u7684\u89e3\u91ca\u3002\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u662f\u6700\u660e\u663e\u7684\u4e00\u4e2a\uff0c\u5c31\u662f\u4ed6\u4eec\u521a\u4ece\u5c71\u5761\u4e0a\u6eda\u4e0b\u6765\u3002\u4f46\u6d4b\u91cf\u7ed3\u679c\u663e\u793a\uff0c\u82d4\u85d3\u7403\u5e76\u6ca1\u6709\u4e0b\u5761\u3002\n\u5df4\u585e\u6d1b\u9a6c\u4e4c\u65af\u8bf4\uff0c\u6211\u4eec\u4e0b\u4e00\u6b65\u60f3\uff0c\u4e5f\u8bb8\u662f\u98ce\u628a\u5b83\u4eec\u5439\u5411\u4e86\u4e00\u81f4\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u6211\u4eec\u6d4b\u91cf\u4e86\u4e3b\u8981\u7684\u98ce\u5411\u3002\n\u5409\u5c14\u4f2f\u7279\u8bf4\uff0c\u4e0d\u8fc7\uff0c\u5f53\u4e8b\u60c5\u4e0d\u7b26\u5408\u4f60\u7684\u5047\u8bbe\uff0c\u4e0d\u7b26\u5408\u4f60\u7684\u601d\u7ef4\u65b9\u5f0f\u65f6\uff0c\u8fd9\u603b\u662f\u4ee4\u4eba\u5174\u594b\u7684\u3002\n\u4e39\u9ea6\u6c14\u8c61\u7814\u7a76\u6240\u7684\u6c14\u5019\u79d1\u5b66\u5bb6\u9732\u4e1d\u00b7\u83ab\u7279\u4f26(Ruth Mottram)\u8868\u793a\uff1a\u6211\u8ba4\u4e3a\uff0c\u51b0\u5ddd\u8868\u9762\u5468\u56f4\u7684\u80fd\u91cf\u548c\u70ed\u91cf\u53ef\u80fd\u5b58\u5728\u67d0\u79cd\u7269\u7406\u610f\u4e49\u4e0a\u7684\u89e3\u91ca\uff0c\u4f46\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u5168\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u957f\u671f\u4ee5\u6765\uff0c\u5979\u4e00\u76f4\u5f88\u6b23\u8d4f\u51b0\u5ddd\u8001\u9f20\uff0c\u8fd9\u662f\u5979\u5728\u51b0\u5c9b\u8fdb\u884c\u7530\u91ce\u8c03\u67e5\u65f6\u770b\u5230\u7684\u3002\u5979\u8bf4\uff0c\u5f53\u4f60\u628a\u5b83\u4eec\u653e\u5728\u4e00\u5927\u5806\u4e1c\u897f\u4e0a\u770b\u65f6\uff0c\u5b83\u4eec\u975e\u5e38\u5438\u5f15\u4eba\u3002\u5f88\u96be\u4e0d\u53bb\u60f3\u201c\u661f\u9645\u8ff7\u822a\u201d\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\n\u5979\u5e0c\u671b\u770b\u5230\u66f4\u591a\u5173\u4e8e\u5b83\u4eec\u7684\u7814\u7a76\uff0c\u56e0\u4e3a\u5bf9\u51b0\u5ddd\u751f\u547d\u7684\u7814\u7a76\u5728\u6700\u8fd1\u51e0\u5e74\u771f\u7684\u5f00\u59cb\u4e86\u3002\u66fe\u7ecf\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5bd2\u51b7\u3001\u8d2b\u7620\u7684\u4e16\u754c\uff0c\u73b0\u5728\u5374\u53d1\u73b0\u5230\u5904\u90fd\u662f\u7ec6\u83cc\u3001\u85fb\u7c7b\u548c\u795e\u79d8\u7684\u751f\u547d\u5f62\u5f0f\u3002\n\u83ab\u7279\u4f26\u8bf4\uff1a\u51e0\u5e74\u524d\u6211\u53c2\u4e0e\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u6211\u4eec\u4f30\u8ba1\u683c\u9675\u5170\u51b0\u76d6\u590f\u5b63\u878d\u5316\u76845%\u523010%\u4e0e\u8868\u9762\u85fb\u7c7b\u548c\u7ec6\u83cc\u7684\u751f\u957f\u6709\u5173\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e2012\u5e74\u7684\u4e00\u9879\u7814\u7a76\uff0c\u5305\u62ec\u7b80\u5355\u8815\u866b\u548c\u6c34\u718a\u5728\u5185\u7684\u5fae\u5c0f\u751f\u7269\u751a\u81f3\u53ef\u4ee5\u751f\u6d3b\u5728\u82d4\u85d3\u7403\u5185\u3002\n\u8bfa\u4e01\u6c49\u7279\u4f26\u7279\u5927\u5b66(Nottingham Trent University)\u7684\u5c3c\u53e4\u62c9\u65af\u00b7\u7c73\u683c\u5229(Nicholas Midgley)\u8bf4\uff0c\u5f53\u65f6\uff0c\u4ed6\u548c\u540c\u4e8b\u65af\u8482\u82ac\u00b7\u5e93\u5c14\u68ee(Stephen Coulson)\u89e3\u5256\u4e86\u82d4\u85d3\u7403\uff0c\u5e76\u5728\u5176\u4e2d\u5b89\u88c5\u4e86\u52a0\u901f\u8ba1\u3002\u7c73\u5947\u5229\u8bf4\uff0c\u4ece\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u65cb\u8f6c\u3002\n\u4ed6\u4eec\u6ca1\u6709\u8ffd\u8e2a\u7403\u6eda\u5230\u54ea\u91cc\u53bb\u3002\u7c73\u683c\u5229\u8bf4\uff0c\u8fd9\u663e\u7136\u662f\u5f00\u5c55\u5e76\u53d1\u8868\u5728\u201c\u6839\u51b0\u5ddd\u201d(Root Glacier)\u4e0a\u7684\u5de5\u4f5c\u4fc3\u8fdb\u4e86\u6211\u4eec\u7406\u89e3\u7684\u5730\u65b9\u3002\u4ed6\u6307\u51fa\uff0c\u7814\u7a76\u82d4\u85d3\u7403\u7684\u79d1\u5b66\u5bb6\u975e\u5e38\u5c11\u3002\n\u5df4\u585e\u6d1b\u83ab\u65af\u8bf4\uff0c\u4ed6\u60f3\u518d\u6b21\u56de\u5230\u9c81\u7279\u51b0\u5ddd\uff0c\u597d\u597d\u5730\u3001\u957f\u65f6\u95f4\u5730\u5bfb\u627e\u5341\u591a\u5e74\u524d\u8d34\u4e0a\u6807\u7b7e\u7684\u82d4\u85d3\u7403\u3002\u4ed6\u77e5\u9053\u90a3\u4e2a\u5730\u65b9\u4ecd\u7136\u5806\u6ee1\u4e86\u82d4\u85d3\u7403\u3002\n\u5df4\u585e\u6d1b\u9a6c\u65af\u8bf4\uff0c\u6211\u53bb\u5e74\u786e\u5b9e\u53bb\u8fc7\u4ed6\u4eec\u90a3\u91cc\u3002\u6211\u7c97\u7565\u5730\u770b\u4e86\u4e00\u773c\uff0c\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u6807\u7b7e\uff0c\u4f46\u82d4\u85d3\u7403\u8fd8\u5728\u90a3\u91cc\u3002\u5927\u6982\u4ed6\u4eec\u8fd8\u5728\u51b0\u5ddd\u4e0a\u6253\u6eda\uff0c\u505a\u7740\u82d4\u85d3\u7403\u7684\u4e8b\u60c5\u3002", "note_en": "In 2006, while hiking around the  Root Glacier in Alaska to set up scientific instruments, researcher  Tim Bartholomaus encountered something unexpected.\n  &#34;What the heck is this!&#34; Bartholomaus recalls thinking. He&#39;s a glaciologist at the University of Idaho.\n  Scattered across the glacier were balls of moss. &#34;They&#39;re not attached to anything and they&#39;re just resting there on ice,&#34; he says. &#34;They&#39;re bright green in a world of white.&#34;\n  Intrigued, he and two colleagues set out to study these strange moss balls. In the journal  Polar Biology, they  report that the balls can persist for years and move around in a coordinated, herdlike fashion that the researchers can not yet explain.\n  &#34;The whole colony of moss balls, this whole grouping, moves at about the same speeds and in the same directions,&#34; Bartholomaus says. &#34;Those speeds and directions can change over the course of weeks.&#34;\n  In the 1950s, an Icelandic researcher  described them in the  Journal of Glaciology, noting that &#34;rolling stones  can gather moss.&#34; He called them &#34;j\u00f6kla-m\u00fds&#34; or &#34;glacier mice.&#34;\n    This new work adds to a very small body of research on these fuzz balls, even though glaciologists have long known about them and tend to be fond of them.\n    &#34;They really do look like little mammals, little mice or chipmunks or rats or something running around on the glacier, although they run in obviously very slow motion,&#34; says wildlife biologist  Sophie Gilbert, also at the University of Idaho.\n  Each ball is like a soft, wet, squishy pillow of moss. The balls can be composed of different moss species and are thought to form around some kind of impurity, like a bit of dust. They&#39;ve been seen in Alaska, Iceland, Svalbard and South America, although they won&#39;t grow on just any glacier \u2014 it seems that conditions have to be just right.\n  Their motion is what interested Gilbert and Bartholomaus, as well as their Washington State University colleague  Scott Hotaling.\n  &#34;Most people who would look at them would immediately wonder, &#39;Well, I wonder if they roll around out here in some way,&#39; &#34; says Gilbert. &#34;Tumbleweeds come to mind, which are obviously totally different, but also round and roll around.&#34;\n  She notes that the entire surface of the ball must periodically get exposed to the sun. &#34;These things must actually roll around or else that moss on the bottom would die,&#34; says Gilbert.\n  The possibility of their rolling had been noted by other researchers, who previously observed that the balls sometimes could be found teetering on a pedestal of ice. That pedestal might form as the moss ball insulated the ice underneath it, preventing it from melting as fast as the surrounding ice. Scientists suspected that the ball would eventually tip off of the pedestal and roll away.\n  To track the motion of 30 moss balls in Alaska, Gilbert and Bartholomaus tagged each one with a little loop of wire that had an identifying sequence of colored beads. Over a period of 54 days in 2009, they tracked the location of each ball. They returned to check on them in 2010, 2011 and 2012.\n  &#34;By coming back year after year,&#34; says Bartholomaus, &#34;we could figure out that these individual moss balls were living at least, you know, five, six years and potentially much, much longer.&#34;\n  The movement of the moss balls was peculiar. The researchers had expected that the balls would travel around randomly by rolling off their ice pedestals. The reality was different. The balls moved about an average of an inch a day in a kind of choreographed formation \u2014 like a flock of birds or a herd of wildebeests.\n  &#34;When we visited them all, they were all just sort of moving relatively slowly and initially toward the south,&#34; says Bartholomaus. &#34;Then they all started to speed up and kind of start to deviate toward the west. And then they slowed down again and progressed even farther to the west.&#34;\n    The researchers considered several possible explanations. The first, and most obvious one, is that they just rolled downhill. But measurements showed that the moss balls weren&#39;t going down a slope.\n  &#34;We next thought maybe the wind is sort of blowing them in consistent directions,&#34; says Bartholomaus, &#34;and so we measured the dominant direction of the wind.&#34;\n      &#34;It&#39;s always kind of exciting, though, when things don&#39;t comply with your hypothesis, with the way you think things work,&#34; says Gilbert.\n    &#34;I think that probably the explanation is somewhere in the physics of the energy and the heat around the surface of the glacier, but we haven&#39;t quite got there yet,&#34; says  Ruth Mottram, a climate scientist at the Danish Meteorological Institute.\n  She has long admired glacier mice, which she saw while doing fieldwork in Iceland. &#34;They&#39;re extremely engaging when you look at them in a great big mass,&#34; she says. &#34;It&#39;s very hard not to think of  tribbles from Star Trek or something like that.&#34;\n  She expects to see more research on them, as the study of life on glaciers has really taken off in recent years. What was once viewed as a cold, sterile world is now known to be full of bacteria and algae and mysterious life forms.\n  &#34;I was involved in some research a couple of years ago where we estimated that between 5 and 10% of the melt of the Greenland ice sheet in the summertime is related to the growth of algae and bacteria on the surface,&#34; says Mottram.\n  Indeed, tiny critters including simple worms and  water bears can even live inside moss balls, according to one  study from 2012.\n  Nicholas Midgley of Nottingham Trent University says that back then, he and his colleague  Stephen Coulson dissected moss balls and put accelerometers inside a number of them. &#34;From that we were able to deduce that they were actually rotating,&#34; says Midgley.\n  They did not track where the balls rolled. &#34;That&#39;s obviously where the work that&#39;s been undertaken and published on the Root Glacier advances our understanding,&#34; says Midgley, who notes that &#34;exceptionally few&#34; scientists have ever studied moss balls.\n  Bartholomaus says he&#39;d like to go back to Root Glacier again and do a good, long hunt for the moss balls that were tagged over a decade ago. He knows that the spot is still loaded with moss balls.\n  &#34;I did visit them last year,&#34; says Bartholomaus. &#34;I didn&#39;t find any tags during a quick cursory look, but the moss balls are still there. Presumably they&#39;re still rolling around on the glacier, doing their moss ball thing.&#34;", "posttime": "2020-05-23 15:15:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u51b0\u5ddd,fuzzy,\u82d4\u85d3", "title": "\u4e00\u7fa4\u6a21\u7cca\u7684\u7eff\u8272\u201c\u51b0\u5ddd\u8001\u9f20\u201d\u8ba9\u79d1\u5b66\u5bb6\u4eec\u611f\u5230\u56f0\u60d1", "title_en": "Herd of Fuzzy Green 'Glacier Mice' Baffles Scientists", "transed": 1, "url": "https://www.npr.org/2020/05/22/858800112/herd-like-movement-of-fuzzy-green-glacier-mice-baffles-scientists", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u51b0\u5ddd", "fuzzy", "\u82d4\u85d3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003378, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u5bb6\u65b0\u516c\u53f8\u5165\u804c\u53ef\u80fd\u662f\u4e00\u4ef6\u5f88\u5947\u602a\u7684\u4e8b\u60c5\u3002\u9664\u4e86\u8fd9\u4e2a\u542c\u8d77\u6765\u5f88\u50cf\u516c\u53f8\u7684\u540d\u5b57\u672c\u8eab(\u8fd9\u8ba9\u6211\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u89c9\u5f97\u6c34\u5211)\uff0c\u4ed6\u4eec\u8fd8\u8bd5\u56fe\u7528\u4e00\u4e9b\u5947\u602a\u7684\u65b9\u5f0f\u6765\u6559\u80b2\u65b0\u5458\u5de5\u3002\n\u8fd9\u91cc\u6709\u4e00\u79cd\u60c5\u51b5\uff1a\u4f60\u548c\u5927\u7ea612\u4e2a\u65b0\u6765\u7684\u4eba\u5728\u4e00\u4e2a\u4f1a\u8bae\u5ba4\u91cc\u3002\u4f60\u5728\u80cc\u5305\u91cc\u9012\u7ed9\u4f60\u4e00\u4e2a\u89e6\u63a7\u6746Macbook Pro\u3002\u8fd9\u662f\u4f60\u4f7f\u7528\u8fc7\u7684\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684\u578b\u53f7\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u81ea\u7136\u6253\u5b57\u4f4d\u7f6e\u7a81\u51fa\u4e86\u6700\u4e0a\u9762\u4e00\u884c\u7684\u6570\u5b57\uff0c\u5e76\u89e6\u53d1\u4e86\u901a\u5e38\u5b58\u5728\u4e8e\u90a3\u91cc\u7684\u5143\u529f\u80fd\uff1a\u4eae\u5ea6\u8c03\u9ad8/\u8c03\u4f4e\uff0c\u97f3\u91cf\u8c03\u9ad8/\u8c03\u4f4e\uff0c\u4ee5\u53ca\u4f60\u6240\u5728\u7684\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u4f55\u5176\u4ed6\u529f\u80fd\u3002\n\u6b64\u5916\uff0c\u8fd9\u6b3e\u952e\u76d8\u662f\u58f0\u540d\u72fc\u85c9\u7684\u8774\u8776\u952e\u76d8\uff0c\u8fd9\u662f\u4f60\u7b2c\u4e00\u6b21\u4f7f\u7528\u5b83\u4eec\u3002\u4f60\u5df2\u7ecf\u542c\u8bf4\u8fc7\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u8fd9\u662f\u4f60\u7b2c\u4e00\u6b21\u8df3\u8fd9\u4ef6\u4e8b\u7684\u63a2\u6208\u3002\u7ed3\u679c\u4e0d\u662f\u5f88\u597d\u3002\u5c3d\u7ba1\u4f60\u6709\u51e0\u5341\u5e74\u7684\u76f8\u5bf9\u8f83\u9ad8\u901f\u5ea6\u7684\u6253\u5b57\u7ecf\u9a8c\uff0c\u4f46\u4f60\u8fd8\u662f\u72af\u4e86\u5f88\u591a\u9519\u8bef\u3002\u4f60\u5f00\u59cb\u89c9\u5f97\u81ea\u5df1\u5f88\u8001\u4e86\u3002\n\u4ed6\u4eec\u8ba9\u4f60\u505a\u4e00\u5806\u4e71\u4e03\u516b\u7cdf\u7684\u4e8b\u60c5\u6765\u7b7e\u5230\u4e00\u4e9b\u4e1c\u897f\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u534a\u9014\u800c\u5e9f\u7684\u5355\u70b9\u767b\u5f55\u7cfb\u7edf\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\uff0c\u800c\u4e14\u6709\u4e00\u5927\u6279\u4f9b\u5e94\u5546\u9700\u8981\u4ed6\u4eec\u81ea\u5df1\u7684\u6388\u6743\u6750\u6599\u3002\u60a8\u5fc5\u987b\u5728\u60a8\u7684(\u4e2a\u4eba\uff01)\u4e0a\u5b89\u88c5\u4e00\u5806\u5e94\u7528\u7a0b\u5e8f\u3002\u624b\u673a\u53ef\u4ee5\u5b9e\u73b0\u53cc\u91cd\u8eab\u4efd\u9a8c\u8bc1\u548c\u5176\u4ed6\u5b89\u5168\u529f\u80fd\uff1a\u5148\u662f\u4e8c\u4eba\u7ec4\uff0c\u7136\u540e\u662f\u8c37\u6b4c\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u662fLastpass\u3002\u4f60\u8fd8\u53ef\u4ee5\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u767b\u5f55\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\uff0c\u4e00\u8def\u4e0a\u4f1a\u9020\u6210\u5927\u91cf\u7684\u6253\u5b57\u9519\u8bef\uff0c\u5e76\u89e6\u53d1\u89e6\u6478\u680f\u4e0a\u7684\u4e1c\u897f\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u73b0\u5728\u662f\u5f00\u59cb\u5b89\u88c5dev\u73af\u5883\u7684\u65f6\u5019\u4e86\u3002\u60a8\u8fd0\u884c\u4e86\u4e00\u7cfb\u5217\u795e\u79d8\u7684\u547d\u4ee4\uff0c\u5176\u4e2d\u5305\u62ec\u60a8\u4ece\u63d0\u4f9b\u7684URL\u4e2d\u83b7\u53d6\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u5176\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230shell\u4e2d\uff0c\u4ece\u800c\u8ba9\u5b83\u968f\u5fc3\u6240\u6b32\u5730\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u672c\u8eab\u6ca1\u6709\u5408\u9002\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002\n\u8fd9\u5c06\u5f00\u59cb\u4e0b\u8f7d\u6570GB\u7684\u6570\u636e\u3002\u4f60\u548c\u5176\u4ed6\u5341\u51e0\u4e2a\u4eba\u90fd\u5728\u540c\u4e00\u65f6\u95f4\uff0c\u5728\u540c\u4e00\u4e2a\u5c01\u95ed\u7684\u7a7a\u95f4\u91cc\uff0c\u5728\u540c\u4e00\u4e2a\u65e0\u7ebf\u7f51\u7edc\u4e0a\u505a\u8fd9\u4ef6\u4e8b\u3002\u4f60\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u5750\u5728\u623f\u95f4\u7684\u4e2d\u95f4\uff0c\u56e0\u6b64\u4e0d\u662f\u5728\u6709\u7535\u6e90\u63d2\u5ea7\u7684\u5899\u4e0a\u3002\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4f1a\u53d1\u70ed\uff0c\u98ce\u6247\u4e5f\u4f1a\u53d8\u5927\u3002\u7535\u6c60\u5f00\u59cb\u6ef4\u7b54\u4f5c\u54cd\u3002\n\u7136\u540e\u4ed6\u4eec\u4f1a\u8981\u6c42\u4f60\u5c06\u5176\u6700\u5c0f\u5316\uff0c\u56e0\u4e3a\u73b0\u5728\u662f\u505a\u4e0b\u4e00\u4ef6\u4e8b\u7684\u65f6\u5019\u4e86\u3002\u4ed6\u4eec\u8bf4\uff0c\u8ba9\u5b83\u5728\u540e\u53f0\u7ed3\u675f\u5427\u3002\u5b83\u5fc5\u987b\u8fd0\u884c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\u3002\n\u662f\u7684\uff0c\u6709\u4eba\u5728\u8fd9\u91cc\u8bd5\u7740\u6559\u5927\u5bb6\u5982\u4f55\u4f7f\u7528\u5185\u90e8\u7cfb\u7edf\u3002\u6bcf\u4e2a\u4eba\u90fd\u8981\u5230\u8fd9\u5bb6\u8c03\u67e5\u516c\u53f8\u7684\u7f51\u7ad9\u4e0a\u8f93\u5165\u4ed6\u4eec\u5199\u5728\u8bb0\u5206\u677f\u4e0a\u7684\u5bc6\u7801\u3002\u4f60\u77e5\u9053\u5417\uff0c\u5728\u90a3\u4e9b\u8c03\u67e5\u4e2d\uff0c\u516c\u53f8\u4f1a\u5728\u4f60\u4e0a\u6b21\u4ea4\u6613\u65f6\u95ee\u4f60\u662f\u5426\u559c\u6b22\u4ed6\u4eec\u7684\u670d\u52a1\uff1f\u5c31\u662f\u8fd9\u79cd\u4e8b\u3002\n\u60a8\u5e94\u8be5\u6df1\u5165\u5185\u90e8\u5de5\u5177\u6765\u67e5\u770b\u5458\u5de5\u540d\u5f55\u3002\u4f60\u5e94\u8be5\u627e\u5230\u4f60\u7684\u7ecf\u7406\u7684\u540d\u5b57\uff0c\u7136\u540e\u8f93\u5165\uff0c\u7136\u540e\u8f93\u5165\u4ed6\u4eec\u7684\u5934\u8854\u3002\u7136\u540e\uff0c\u4f60\u5e94\u8be5\u627e\u51fa\u5728\u516c\u53f8\u5176\u4ed6\u5730\u65b9\u62e5\u6709\u7279\u5b9a\u5934\u8854\u7684\u4eba\u7684\u540d\u5b57\u3002\n\u4f60\u5fc5\u987b\u628a\u5b83\u6253\u5bf9\u3002\u5728\u60a8\u8fd9\u6837\u505a\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u60a8\u5355\u51fb[\u4e0b\u4e00\u6b65]\u3002\u4ed6\u4eec\u544a\u8bc9\u60a8\u4e0d\u8981\u5355\u51fb\u201c\u540e\u9000\u201d\u6216\u91cd\u65b0\u52a0\u8f7d\u6216\u8bf8\u5982\u6b64\u7c7b\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u60a8\u53ef\u80fd\u4f1a\u641e\u7838\u3002\n\u6211\u6709\u6ca1\u6709\u63d0\u5230\u5728\u8fd9\u671f\u95f4\u6709\u4e00\u4e2a\u5b9a\u65f6\u5668\u5728\u6ef4\u7b54\u4f5c\u54cd\uff1f\u5927\u7ea62\u5206\u949f\u5f00\u59cb\uff0c\u5b83\u5c31\u5728\u90a3\u91cc\uff0c1\uff1a59\uff0c1\uff1a58\uff0c1\uff1a57\uff0c1\uff1a56\uff0c\u2026\u2026\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e00\u76f4\u5982\u6b64\u3002\n\u8fd9\u57fa\u672c\u4e0a\u662f\u5236\u9020\u538b\u529b\u548c\u5bf9\u53ef\u6015\u5236\u5ea6\u666e\u904d\u618e\u6068\u7684\u5b8c\u7f8e\u73af\u5883\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f\u7ed9\u4e00\u53ea\u72d7\u53d6\u540d\uff0c\u56e0\u4e3a\u516c\u53f8\u540d\u5f55\u91cc\u6709\u5ba0\u7269\u3002\u6211\u6ca1\u80fd\u5f88\u5feb\u627e\u5230\u4e00\u4e2a\u3002\u4f60\u5e94\u8be5\u5728\u7ec4\u7ec7\u7ed3\u6784\u56fe\u4e0a\u70b9\u51fb\u4e00\u4e0b\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62\u3002\n\u73b0\u5728\uff0c\u5f53\u6211\u9047\u5230\u8fd9\u6837\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u5f00\u59cb\u5c16\u523b\u548c\u6076\u6bd2\uff0c\u5f00\u59cb\u6a2a\u5411\u601d\u8003\u3002\u5c31\u50cf\uff0c\u597d\u5427\uff0c\u770b\u7740\u6211\u4e0d\u7528\u4f60\u90a3\u611a\u8822\u7684\u7cfb\u7edf\uff0c\u4f46\u4e0d\u7ba1\u600e\u6837\u8fd8\u662f\u8981\u5f97\u5230\u7b54\u6848\u3002\u4e3e\u4e2a\u6070\u5f53\u7684\u4f8b\u5b50\uff1a\u524d\u4e00\u5929\u623f\u95f4\u91cc\u6709\u4e00\u53ea\u72d7\u3002\u6211\u53ea\u662f\u5bf9\u7740\u623f\u95f4\u558a\u9053\uff1a\u563f\uff0c\u521a\u624d\u5728\u8fd9\u91cc\u7684\u90a3\u53ea\u72d7\u53eb\u4ec0\u4e48\u540d\u5b57\uff1f\u4f20\u611f\u5668\uff1f\u6765\u70b9\u5417\uff1f\u516d\u4e2a\u5b57\u6bcd\uff1f#34\uff1b\u2026\u2026\u3002\u7b54\u6848\u53c8\u56de\u6765\u4e86\uff1a\u201c\u9e21\u5757\u201d\u3002\u6211\u628a\u5b83\u6253\u8fdb\u53bb\uff0c\u5b83\u8d77\u4f5c\u7528\u4e86\u3002&#34\uff1b\u8c22\u8c22\uff01&#34\uff1b\n\u4e8b\u60c5\u5c31\u662f\u8fd9\u6837\u8fdb\u884c\u7684\uff0c\u95ee\u4e86\u66f4\u591a\u611a\u8822\u7684\u95ee\u9898\uff0c\u8ba9\u6211\u5728\u4ed6\u4eec\u611a\u8822\u7684\u5de5\u5177\u4e0a\u5f92\u52b3\u65e0\u529f\u3002\u6700\u540e\uff0c\u5b83\u8bf4\u5230\u4e0b\u4e00\u90e8\u5206\u5c31\u505c\u5728\u8fd9\u91cc\uff0c\u5e76\u6307\u51fa\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u53ea\u5b8c\u6210\u4e8630%\u3002\u662f\u7684\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u4e8b\u60c5\u8981\u505a\uff0c\u800c\u4e14\u8c01\u77e5\u9053\u8fd8\u4f1a\u6709\u591a\u5c11\u6a21\u5757\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6267\u884c\u3002\u547b\u541f\u3002\n\u53e6\u4e00\u90e8\u5206\u8ba9\u4f60\u548c\u5176\u4ed6\u4eba\u914d\u5bf9\u3002\u4f60\u4eec\u4e24\u4e2a\u90fd\u6709\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u4f46\u5176\u4e2d\u4e00\u53f0\u88ab\u6545\u610f\u5ffd\u7565\u4e86\uff0c\u6240\u4ee5\u4f60\u4e0d\u5f97\u4e0d\u6765\u56de\u9012\u9001\u4e00\u53f0(\u6216\u8005\u628a\u5b83\u6ed1\u5230\u684c\u5b50\u4e0a\uff0c\u968f\u4fbf\u4ec0\u4e48)\u3002\u4f60\u7684\u5931\u8d25\u73b0\u5728\u6210\u4e86\u522b\u4eba\u7684\u95ee\u9898\u3002\u66f4\u591a\u7684\u538b\u529b\u548c\u5bf9\u53ef\u6015\u8fc7\u7a0b\u7684\u618e\u6068\u3002\n\u4e8b\u60c5\u8fd8\u53d8\u5f97\u66f4\u597d\u4e86\uff1a\u4ed6\u4eec\u58f0\u79f0(\u5e76\u6492\u8c0e)\uff0c\u4f60\u7684\u7ecf\u7406\u5c06\u80fd\u591f\u770b\u5230\u8fd9\u4e00\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u6000\u7591\u8fd9\u662f\u771f\u7684\u3002\u5176\u6b21\uff0c\u6211\u7684\u7ecf\u7406\u4e0d\u4f1a\u628a\u7ed3\u679c\u5982\u4f55\u653e\u5728\u5fc3\u4e0a\u3002\u7b2c\u4e09\uff0c\u6211\u505a\u8fd9\u884c\u7684\u65f6\u95f4\u591f\u957f\u4e86\uff0c\u5373\u4f7f\u4ed6\u4eec\u53d1\u73b0\u6211\u8ba8\u538c\u4ed6\u4eec\u7cdf\u7cd5\u7684\u5185\u90e8\u7f51\u5de5\u5177\u548c\u611a\u8822\u7684\u5b9a\u65f6\u5bfb\u5b9d\u5de5\u5177\uff0c\u800c\u4e14\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u5f88\u5dee\uff0c\u6211\u4e5f\u4e0d\u5728\u4e4e\u3002\n\u4ed6\u4eec\u8bf4\u8fd9\u6837\u7684\u8bdd\u6765\u5413\u552c\u540e\u8f88\u3002\u8fd9\u662f\u80e1\u8bf4\u516b\u9053\u3002\u6211\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u4e5f\u662f\u8fd9\u6837\u5bf9\u5f85\u5b83\u7684\uff0c\u4f46\u4ed6\u4eec\u4e0d\u77e5\u9053\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u62c5\u5fc3\u3002\u4eb2\u773c\u76ee\u7779\u8fd9\u4ef6\u4e8b\u7684\u53d1\u751f\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u5bf9\u5f85\u6bcf\u4e2a\u4eba\u90fd\u50cf\u5bf9\u5f85\u5b69\u5b50\u4e00\u6837\uff0c\u5373\u4f7f\u662f\u4ed6\u4eec\u5168\u65b0\u7684\u8f6f\u4ef6\u4eba\u5458\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u662f\u4e2a\u574f\u5146\u5934\u3002\n\u53c8\u8fc7\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u53d7\u591f\u4e86\u3002\u6211\u544a\u8bc9\u6211\u7684\u540c\u684c(\u7528\u53e6\u4e00\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u7684\u90a3\u4e2a)\uff0c\u597d\u7684\uff0c\u56de\u5934\u89c1\u3002\u4ed6\u95ee\u6211\u8fd9\u4e00\u5929\u662f\u5426\u505a\u5b8c\u4e86\uff0c\u6211\u53ea\u8bf4\u505a\u5b8c\u4e86\u3002\u7136\u540e\u6211\u7ad9\u8d77\u6765\uff0c\u6084\u6084\u5730\u79bb\u5f00\u4e86\u3002\u6211\u518d\u4e5f\u6ca1\u6709\u56de\u8fc7\u6c34^H^\u81f4\u656c\u73ed\u3002\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u65e0\u5173\u7d27\u8981\u3002\n\u7b2c\u4e8c\u5929\uff0c\u6211\u8d70\u4e86\u8fdb\u53bb\uff0c\u521a\u597d\u907f\u5f00\u4e86\u767b\u673a\u533a\u3002\u6211\u5e94\u8be5\u63d0\u4e00\u4e0b\uff0c\u6ca1\u6709\u4eba\u8981\u6c42\u6216\u4e3a\u6211\u8bbe\u7acb\u529e\u516c\u684c\uff0c\u6240\u4ee5\u6211\u6700\u7ec8\u50cf\u96be\u6c11\u4e00\u6837\u5728\u4e00\u4e9b\u50cf\u9910\u5385\u644a\u4f4d\u4e00\u6837\u8bbe\u7f6e\u7684\u516c\u5171\u7a7a\u95f4\u624e\u8425\u3002\u4e00\u4e9b\u5df2\u7ecf\u5728\u516c\u53f8\u5de5\u4f5c\u7684\u670b\u53cb\u4f38\u51fa\u63f4\u624b\uff0c\u63d0\u4f9b\u4e86\u4ed6\u4eec\u81ea\u5df1\u5bf9\u5982\u4f55\u5f00\u59cb\u7684\u770b\u6cd5\uff0c\u6211\u5c31\u662f\u4ece\u90a3\u91cc\u5f00\u59cb\u7684\u3002\u6211\u7ad9\u7a33\u4e86\u811a\u8ddf\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u81ea\u6211\u9a71\u52a8\u7684\u521d\u5b66\u8005\u9879\u76ee\uff0c\u5f00\u59cb\u505a\u4e00\u4e9b\u7a0d\u5fae\u6709\u7528\u7684\u4e8b\u60c5\u3002\n\u5982\u679c\u4e0d\u662f\u4ed6\u4eec\u4f38\u51fa\u63f4\u624b\u5e2e\u52a9\u6211\uff0c\u6211\u5f88\u53ef\u80fd\u4f1a\u5728\u90a3\u91cc\u5c31\u5b8c\u4e8b\u4e86\uff0c\u7136\u540e\u5c31\u8d70\u4e86\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u652f\u6301\u6211\u3002\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u610f\u5473\u7740\u6211\u53ef\u4ee5\u7559\u4e0b\u6765\u5ea6\u8fc72019\u5e74\u5269\u4e0b\u7684\u75af\u72c2\u65f6\u5149\uff0c\u4e00\u5e74\u540e\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u79bb\u5f00\u3002\n\u7ed3\u8bed\uff1a\u6709\u4e00\u5929\uff0c\u5f53\u6211\u5750\u5728\u6ca1\u6709\u529e\u516c\u684c\u7684\u5730\u65b9\u65f6\uff0c\u4e00\u4e2a\u5b8c\u5168\u5076\u7136\u7684\u673a\u4f1a\uff0c\u6211\u7684\u7ecf\u7406\u8d70\u8fc7\uff0c\u5728\u6211\u4e0a\u4efb\u4ee5\u6765\u7b2c\u4e00\u6b21\u53d1\u73b0\u4e86\u6211\uff0c\u95ee\u6211\u662f\u5426\u8981\u548c\u67d0\u4e2a\u65b0\u4e0a\u4efb\u7684\u9ad8\u5c42\u7ba1\u7406\u4eba\u5458\u5728\u7089\u8fb9\u804a\u5929\u3002\u6211\u751a\u81f3\u4e0d\u77e5\u9053\u8fd9\u662f\u4e00\u4ef6\u4e8b\uff0c\u4f46\u4ed6\u8bf4\u6211\u5e94\u8be5\u53bb\uff0c\u6240\u4ee5\u6211\u548c\u4ed6\u4e00\u8d77\u53bb\u4e86\u3002\n\u6211\u4eec\u6765\u5f97\u6709\u70b9\u65e9\uff0c\u4eba\u4eec\u56f4\u7740\u6211\u4eec\u7ad9\u7740\u3002\u6211\u6700\u540e\u88ab\u4ecb\u7ecd\u7ed9\u67d0\u4eba\uff0c\u6211\u6253\u4e86\u58f0\u62db\u547c\u3002\u4ed6\u53d1\u73b0\u8fd9\u5df2\u7ecf\u662f\u6211\u5728\u516c\u53f8\u7684\u7b2c\u4e09\u5929\u4e86\uff0c\u4ed6\u95ee\u6211\uff0c\u4f60\u6709\u529e\u516c\u684c\u4e86\u5417\uff1f\u6211\u8bf4\u6ca1\u6709\u3002\u5f88\u6709\u8da3\uff0c\u5bf9\uff0c\u5728\u6211\u7684\u65b0\u8001\u677f\u9762\u524d\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\uff0c\u563f\uff0c\u8bda\u5b9e\u7684\u95ee\u9898\u4f1a\u5f97\u5230\u8bda\u5b9e\u7684\u56de\u7b54\uff0c\u8fd9\u5c31\u662f\u4ed6\u5f97\u5230\u7684\u3002\n\u540e\u6765\u6211\u53d1\u73b0\uff0c\u95ee\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u9996\u5e2d\u6267\u884c\u5b98\u3002\u4e0d\u9519\u3002\u4e5f\u8bb8\u4ed6\u662f\u5f00\u73a9\u7b11\u7684\uff0c\u4f46\u6211\u662f\u8ba4\u771f\u7684\uff1a\u6211\u6ca1\u6709\u529e\u516c\u684c\u3002\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u6ca1\u6709\u8ba4\u51faCEO\uff1a\u6211\u624d\u521a\u5f00\u59cb\uff0c\u6211\u53c8\u4e0d\u662f\u8bb0\u4f4f\u4e86\u8fd9\u4e9b\u4eba\u7684\u540d\u5b57\u548c\u9762\u5b54\u3002\u4f60\u597d\uff0c\u8ddf\u8e2a\u72c2\u5c0f\u9547\u8fd8\u662f\u4eb2\u5c41\u80a1\u5c0f\u9547\uff0c\u6211\u90fd\u4e0d\u662f\u3002\u6211\u4f1a\u5728\u9700\u8981\u7684\u65f6\u5019\u5b66\u4e60\u5b83\u4eec\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5728\u9002\u5f53\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u5728\u5b83\u51fa\u73b0\u7684\u65f6\u5019\u8bb0\u4f4f\u5b83\u4eec\u7684\u540d\u5b57\u548c\u9762\u5b54\u3002", "note_en": "Onboarding at a new company can be a weird thing. Besides the very corporate-sounding name itself (that makes some of us think&#34;waterboarding&#34;), there are some odd ways they try to &#34;teach&#34; the new employees.\n Here&#39;s a situation: you&#39;re in a conference room with about a dozen other new people. You&#39;re handed a touch bar Macbook Pro in a backpack. It&#39;s the first such model you&#39;ve ever used, and you&#39;re discovering that your natural typing position overhangs the top row of numbers, and is triggering the &#34;meta&#34; functions which typically live there: brightness up/down, volume up/down, and whatever else might be there from the context of the program you&#39;re in.\n Also, the keyboard is the infamous &#34;butterfly&#34; one, and this is your first time on one of them. You&#39;ve heard about it but this is your first tango with this particular thing. It turns out to not be very nice. You&#39;re making lots of mistakes, despite having decades of typing experience at relatively high speeds. You start feeling very old.\n They have you do a bunch of random crap to get signed in to things. They have a half-assed &#34;single sign on&#34; system that really isn&#39;t, and there are a bunch of vendors which require their own authorization stuff. You have to install a bunch of apps on your (personal!) phone to do the two-factor auth and other security stuff: there&#39;s Duo, then the Google app, and then Lastpass. You also get to sign in to all of this stuff on the laptop itself, making typing errors galore along the way, and triggering things on the touch bar.\n Anyway, at some point, you get this going, and now it&#39;s time to start &#34;installing&#34; the dev environment. You run a bunch of arcane commands, including something where you &#34;curl&#34; something from a provided URL, and pipe it into a shell, thus letting it do whatever it wants to do. There is not a proper installer per se.\n This starts downloading multiple gigabytes of data. You and the other dozen-or-so people are all doing this at the same time, in the same enclosed space, on the same wireless network. Most of you are sitting in the middle of the room and thus are not next to a wall with power outlets. Your laptop heats up, and the fan ramps up. The battery starts ticking down.\n Then they ask you to minimize that, because it&#39;s time for the next thing. Let it finish in the background, they said. It has to run for a long time and this way we can move on to the next stage.\n Yes, someone&#39;s here to try to teach the group how to use the internal systems. Everyone is to go out to this survey company&#39;s web site and type in a password they&#39;ve written on the marker board. You know those surveys where companies ask if you liked their service at your last transaction? It&#39;s that kind of thing.\n You&#39;re supposed to go dive into the internal tooling to look at the directory of employees. You&#39;re supposed to find your manager&#39;s name and type it in, followed by their title. Then you&#39;re supposed to find out the name of the person who has a specific title somewhere else in the company.\n You HAVE to type it in correctly. Until you do, it won&#39;t let you click [next]. They tell you not to click back or reload or anything like that, since &#34;you may screw it up&#34;.\n Did I mention there&#39;s a timer ticking down during all of this? It starts at maybe 2 minutes and it&#39;s just there, going 1:59, 1:58, 1:57, 1:56, ... and so on the whole time.\n This is basically the perfect environment for creating stress and general hatred of terrible systems. One of the questions was &#34;name a dog&#34;, because, well, the company directory included pets. I couldn&#39;t find one quickly. You were supposed to just click around the org chart until you found one.\n Now, when I run into a thing like this, I start getting snarky and bitchy and start thinking laterally. Like, okay, watch me not use your stupid system but get the answer anyway. Case in point: there had been a dog in the room the day before. I just called out to the room: &#34;Hey, what was the name of the dog that was in here before? Sensor? Morsel? Six letters?&#34; ... and the answer came back: &#34;Nugget&#34;. I typed it in and it worked. &#34;Thanks!&#34;\n It went on like this, asking more idiotic questions and sending me on wild goose chases through their stupid tools. Finally, it said &#34;stop here until the next part&#34; and noted that I had done only 30% of it so far. Yes, there was much more to go, plus who knows how many other modules were going to be executed this way. GROAN.\n Another part had you pair up with someone else. You both had laptops, but one was purposely ignored for this, so you had to hand the one back and forth (or slide it on the table, whatever). Your failings were now someone else&#39;s problem. More stress and hatred of a terrible process.\n It gets better, too: they had claimed (and lied) that &#34;your manager will be able to see the results of this&#34;. First of all, I doubt that was true. Second, my manager wouldn&#39;t give a rat&#39;s ass what the results of it would be. Third, I&#39;ve been doing this long enough that I don&#39;t care  even if they could find out that I hate their terrible &#34;intranet&#34; tools and moronic timed treasure hunt for dog names and people&#39;s titles and did poorly at it.\n They say stuff like that to scare the junior folks. It&#39;s bullshit. I know it and treat it as such, but they don&#39;t, and probably worry. Seeing it happen told me that they treat everyone like children, even their brand new software people. Bad sign.\n After another hour of this, I had enough. I told my table-mate (the one with the other laptop) &#34;well, see you around&#34;. He asked if I was &#34;done for the day&#34; and I just said &#34;yep&#34;. Then I got up and quietly exited. I never went back to any of the water^H^H^H^H^Honboarding classes. It turned out to not matter.\n  The next day, I went in and just avoided the onboarding area. I should mention that nobody had requested or set up a desk for me, so I wound up camped like a refugee in some common space that was set up like a restaurant booth. Some friends who had already been at the company reached out and provided their own take on how to get started, and I went from that. I got my footing and started doing mildly useful things as a self-driven starter project.\n If not for them reaching out and helping me, I probably would have just called it done right there and walked. Instead, they supported me. Of course, that just meant I got to stick around for the rest of the insanity that was my 2019, and wound up leaving anyway a year later.\n  Epilogue: while sitting there sans desk one day, by total chance, my manager walked by, spotted me for the first time since I had started, and asked if I was going to &#34;the fireside chat&#34; with some new incoming upper management type. I had no idea it even was a thing, but he said I should go, and so up I went with him.\n We were a little early and people were standing around. I wound up being introduced to someone and I said hello. He found out it was now my third day at the company and he asked &#34;do you have a desk yet&#34;, and I said I did not. It was funny, right, being asked that with my new boss right there. But hey, honest questions get honest answers, and that&#39;s what he got.\n I later found out the person asking the question was the CEO. Awesome.Maybe he meant it as a joke, but I was dead serious: I had no desk.\n As for why I didn&#39;t recognize the CEO: I had just started, and it&#39;s not like I memorize names and faces of these people. Hello, stalker-ville or ass-kisser-ville, and I am neither. I&#39;ll learn them as I need to learn them, and indeed, in due time, picked up the names and faces as it came up.", "posttime": "2020-05-23 15:14:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5371\u9669,red", "title": "\u53ea\u662f\u4e00\u4e9b\u5371\u9669\u4fe1\u53f7\u3002\u522b\u5c0f\u9898\u5927\u4f5c\u3002\u522b\u7406\u4ed6\u4eec\u5c31\u884c\u4e86", "title_en": "Just some red flags. No big deal. Just ignore them", "transed": 1, "url": "https://rachelbythebay.com/w/2020/05/22/boarded/", "via": "", "real_tags": ["\u5371\u9669", "red"]}, {"category": "", "categoryclass": "", "imagename": "88fd6ddb8253d4481c2e73bf9c8b9c36.png", "infoid": 1003377, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u66fe\u7ecf\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6301\u6709\u6240\u6709\u8fd9\u4e9b\u8bef\u89e3\uff0c\u4eca\u5929\u6211\u770b\u5230\u8bb8\u591a\u521d\u5b66\u8005\u90fd\u5728\u4e0e\u8fd9\u4e9b\u8bef\u89e3\u4f5c\u6597\u4e89\u3002\u6211\u7684\u4e00\u4e9b\u672f\u8bed\u53ef\u80fd\u4e0d\u662f\u6807\u51c6\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u5f20\u6211\u4f7f\u7528\u7684\u901f\u8bb0\u77ed\u8bed\u7684\u8868\u683c\uff0c\u4ee5\u53ca\u6211\u60f3\u8981\u8868\u8fbe\u7684\u610f\u601d\u3002\n\u7b80\u800c\u8a00\u4e4b\uff1a\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u7f16\u8bd1\u5668\u53ef\u4ee5\u9759\u6001\u9a8c\u8bc1\u5b83\u6240\u6307\u5411\u7684\u6570\u636e\u5728\u5176\u5f53\u524d\u5185\u5b58\u5730\u5740\u6709\u6548\u7684\u65f6\u95f4\u957f\u5ea6\u3002\u6211\u73b0\u5728\u5c06\u7528\u63a5\u4e0b\u6765\u76846000\u4e2a\u5355\u8bcd\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4eba\u4eec\u901a\u5e38\u4f1a\u611f\u5230\u56f0\u60d1\u7684\u5730\u65b9\u3002\n\u8fd9\u79cd\u8bef\u89e3\u66f4\u591a\u7684\u662f\u5173\u4e8e\u6cdb\u578b\uff0c\u800c\u4e0d\u662f\u751f\u5b58\u671f\uff0c\u4f46\u662f\u6cdb\u578b\u548c\u751f\u5b58\u671f\u5728\u94c1\u9508\u4e2d\u7d27\u5bc6\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u8c08\u5230\u5176\u4e2d\u4e00\u4e2a\u800c\u4e0d\u8c08\u5230\u53e6\u4e00\u4e2a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff1a\n\u5f53\u6211\u7b2c\u4e00\u6b21\u5f00\u59cb\u5b66\u4e60Rust\u65f6\uff0c\u6211\u77e5\u9053I32\u3001&amp\uff1bI32\u548c&amp\uff1bmut I32\u662f\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u6211\u8fd8\u7406\u89e3\u4e00\u4e9b\u6cdb\u578b\u7c7b\u578b\u53d8\u91cfT\u8868\u793a\u5305\u542b\u6240\u6709\u53ef\u80fd\u7c7b\u578b\u7684\u96c6\u5408\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6211\u628a\u8fd9\u4e24\u4ef6\u4e8b\u5206\u5f00\u7406\u89e3\uff0c\u6211\u8fd8\u662f\u4e0d\u80fd\u628a\u5b83\u4eec\u653e\u5728\u4e00\u8d77\u7406\u89e3\u3002\u5728\u6211\u7684\u65b0\u624bRust\u5934\u8111\u4e2d\uff0c\u6211\u8ba4\u4e3a\u6cdb\u578b\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\uff1a\n%t\u5305\u542b\u6240\u6709\u62e5\u6709\u7684\u7c7b\u578b\u3002&amp\uff1bT\u5305\u542b\u6240\u6709\u4e0d\u53d8\u7684\u501f\u7528\u7c7b\u578b\u3002&amp\uff1bmut T\u5305\u542b\u6240\u6709\u53ef\u53d8\u501f\u7528\u7c7b\u578b\u3002T\u3001&amp\uff1bT\u548c&amp\uff1bmut T\u662f\u4e0d\u76f8\u4ea4\u7684\u6709\u9650\u96c6\u3002\u6f02\u4eae\uff0c\u7b80\u5355\uff0c\u5e72\u51c0\uff0c\u8f7b\u677e\uff0c\u76f4\u89c2\uff0c\u5b8c\u5168\u9519\u8bef\u3002\u4e0b\u9762\u662f\u6cdb\u578b\u5728Rust\u4e2d\u7684\u5b9e\u9645\u5de5\u4f5c\u65b9\u5f0f\uff1a\nT\u3001&amp\uff1bT\u548c&amp\uff1bmut T\u90fd\u662f\u65e0\u9650\u96c6\u5408\uff0c\u56e0\u4e3a\u53ef\u4ee5\u501f\u7528ad-infinitum\u7c7b\u578b\u3002T\u662f&amp\uff1bT\u548c&amp\uff1bmut\u7684\u8d85\u96c6\u3002&amp\uff1bT\u548c&amp\uff1bmut T\u662f\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\u3002\u8fd9\u91cc\u6709\u51e0\u4e2a\u4f8b\u5b50\u6765\u9a8c\u8bc1\u8fd9\u4e9b\u6982\u5ff5\uff1a\n&amp\uff1bT{}\u7684\u7279\u5f81\u7279\u5f81{}\u5b9e\u65bd&lt\uff1bT&&gt;\uff1b\u7279\u5f81(&amp\uff1bt\uff1bT&&gt;\uff1b\u7279\u5f81)&amp\uff1bT\uff1bT&&gt;\uff1b\u7279\u5f81(&amp\uff1bt\uff1bT&&gt;\uff1b\u7279\u5f81)\u7f16\u8bd1\u9519\u8bef(&amp\uff1bmut\uff1bT&&gt;\uff1bT&&gt;\uff1b\u7279\u5f81)(&amp\uff1bmut T{})//\u7f16\u8bd1\u9519\u8bef\u3002\n\u9519\u8bef[E0119]\u3002mut_`\uff1a--&gt\uff1bsrc/lib.rs\uff1a7\uff1a1|3|\u4e3aT{}\u5b9e\u65bd&lt\uff1bT&gt\uff1b\u7279\u5f81|-\u7b2c\u4e00\u4e2a\u5b9e\u73b0\u5728\u6b64.\u30027|\u5b9e\u65bd&amp\uff1bmut T{}\u7684T&gt\uff1b\u7279\u5f81|^`\u51b2\u7a81\u7684`&amp\uff1bmut_`\u5b9e\u73b0\n\u7f16\u8bd1\u5668\u4e0d\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49&amp\uff1bT\u548c&amp\uff1bmut T\u7684\u7279\u5f81\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e\u5df2\u7ecf\u5305\u62ec\u6240\u6709&amp\uff1bT\u548c&amp\uff1bmut T\u7684\u7279\u5f81\u5b9e\u73b0\u51b2\u7a81\u3002\u4ee5\u4e0b\u7a0b\u5e8f\u6309\u9884\u671f\u8fdb\u884c\u7f16\u8bd1\uff0c\u56e0\u4e3a&amp\uff1bT\u548c&amp\uff1bmut T\u662f\u4e0d\u76f8\u4ea4\u7684\uff1a\n\u7279\u5f81\u7279\u5f81{}\u5b9e\u65bd&amp\uff1bT&&gt;\uff1b\u7279\u5f81{}//\u7f16\u8bd1&amp\uff1bmut T{}//\u5b9e\u65bd&lt\uff1bT&&gt;\uff1b\u7279\u5f81\u3002\n\u5927\u591a\u6570Rust\u521d\u5b66\u8005\u90fd\u662f\u5728\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u4e2d\u7b2c\u4e00\u6b21\u4e86\u89e3\u9759\u6001\u751f\u5b58\u671f\u7684\uff1a\n\u4ed6\u4eec\u88ab\u544a\u77e5\uff0c\u5b57\u7b26\u4e32\u6587\u5b57\u88ab\u786c\u7f16\u7801\u5230\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u5230\u53ea\u8bfb\u5b58\u50a8\u5668\u4e2d\uff0c\u56e0\u6b64\u5b83\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u4e14\u5bf9\u6574\u4e2a\u7a0b\u5e8f\u6709\u6548\uff0c\u8fd9\u5c31\u662f\u5b83\u662f\u9759\u6001\u7684\u3002\u56f4\u7ed5\u4f7f\u7528static\u5173\u952e\u5b57\u5b9a\u4e49\u9759\u6001\u53d8\u91cf\u7684\u89c4\u5219\u8fdb\u4e00\u6b65\u5f3a\u5316\u4e86\u8fd9\u4e9b\u6982\u5ff5\u3002\n\u9759\u6001\u5b57\u8282\uff1a[U8\uff1b3]=[1\uff0c2\uff0c3]\uff1b\u9759\u6001mut_bytes\uff1a[U8\uff1b3]=[1\uff0c2\uff0c3]\uff1bfn main(){mut_bytes[0]=99\uff1b//\u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u5f02\u9759\u6001\u4e0d\u5b89\u5168{mut_bytes[0]=99\uff1bassert_eq\uff01(99\uff0cmut_bytes[0])\uff1b}}\u3002\n\u9759\u6001\u751f\u5b58\u671f\u53ef\u80fd\u662f\u4ee5\u9759\u6001\u53d8\u91cf\u7684\u9ed8\u8ba4\u751f\u5b58\u671f\u547d\u540d\u7684\uff0c\u5bf9\u5417\uff1f\u56e0\u6b64\uff0c\u9759\u6001\u751f\u5b58\u671f\u5fc5\u987b\u9075\u5faa\u6240\u6709\u76f8\u540c\u7684\u89c4\u5219\u662f\u6709\u9053\u7406\u7684\uff0c\u5bf9\u5417\uff1f\n\u662f\u7684\uff0c\u4f46\u662f\u5177\u6709\u9759\u6001\u751f\u5b58\u671f\u7684\u7c7b\u578b\u4e0e\u4ee5\u9759\u6001\u751f\u5b58\u671f\u4e3a\u754c\u9650\u7684\u7c7b\u578b\u662f\u4e0d\u540c\u7684\u3002\u540e\u8005\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\uff0c\u53ef\u4ee5\u5b89\u5168\u81ea\u7531\u5730\u53d8\u5f02\uff0c\u53ef\u4ee5\u5220\u9664\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b58\u6d3b\u4efb\u610f\u6301\u7eed\u65f6\u95f4\u3002\n\u9759\u6001T\u662f\u5bf9\u67d0\u4e9bT\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u8fd9\u4e9bT\u53ef\u4ee5\u5b89\u5168\u5730\u65e0\u9650\u671f\u5730\u4fdd\u6301\u5f88\u957f\u65f6\u95f4\uff0c\u5305\u62ec\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\u53ea\u6709\u5f53T\u672c\u8eab\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u4e14\u5728\u521b\u5efa\u5f15\u7528\u540e\u4e0d\u4f1a\u79fb\u52a8\u65f6\uff0c\u8fd9\u624d\u662f\u53ef\u80fd\u7684\u3002t\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u521b\u5efa\u3002\u6709\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u751f\u6210\u968f\u673a\u7684\u52a8\u6001\u5206\u914d\u7684\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u5bf9\u5b83\u7684\u9759\u6001\u5f15\u7528\uff0c\u4ee3\u4ef7\u662f\u5185\u5b58\u6cc4\u6f0f\uff0c\u4f8b\u5982\n\u4f7f\u7528rand\uff1b//\u5728\u8fd0\u884c\u65f6\u751f\u6210\u968f\u673a\u9759\u6001\u5b57\u7b26\u4e32\u5f15\u7528fn rand_str_Generator()-&gt\uff1b&amp\uff1b&#39\uff1b\u9759\u6001\u5b57\u7b26\u4e32{let rand_string=rand\uff1a\uff1aRandom\uff1a\uff1a&lt\uff1bU64&gt\uff1b()\u3002to_string()\uff1bBox\uff1a\uff1aLeak(rand_string\u3002into_boxed_str())}\u3002\nT\uff1a&#39\uff1bStatic\u662f\u4e00\u4e9bT\uff0c\u5b83\u53ef\u4ee5\u5b89\u5168\u5730\u65e0\u9650\u671f\u5730\u4fdd\u6301\u5f88\u957f\u65f6\u95f4\uff0c\u5305\u62ec\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002T\uff1a&#39\uff1bstatic\u5305\u62ec\u6240\u6709&amp\uff1b&amp\uff1bstatic T\uff0c\u4f46\u5b83\u4e5f\u5305\u62ec\u6240\u6709\u62e5\u6709\u7684\u7c7b\u578b\uff0c\u5982String\u3001Vec\u7b49\u3002\u67d0\u4e9b\u6570\u636e\u7684\u6240\u6709\u8005\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u53ea\u8981\u6240\u6709\u8005\u6301\u6709\u6570\u636e\uff0c\u6570\u636e\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u5931\u6548\uff0c\u56e0\u6b64\u6240\u6709\u8005\u53ef\u4ee5\u5b89\u5168\u5730\u65e0\u9650\u671f\u5730\u6301\u6709\u6570\u636e\uff0c\u5305\u62ec\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002T\uff1a&#39\uff1b\u9759\u6001\u5e94\u7406\u89e3\u4e3a&#34\uff1bT\u7531&#34\uff1b\u9759\u6001\u751f\u5b58\u671f\u9650\u5b9a\uff0c\u800c\u4e0d\u662f&#34\uff1bT\u5177\u6709&#34\uff1b\u9759\u6001\u751f\u5b58\u671f\u3002\u5e2e\u52a9\u8bf4\u660e\u8fd9\u4e9b\u6982\u5ff5\u7684\u7a0b\u5e8f\uff1a\n\u4f7f\u7528rand\uff1bfn drop_static&lt\uff1bT\uff1a&#39\uff1bstatic&gt\uff1b(t\uff1at){std\uff1a\uff1amem\uff1a\uff1adrop(T)\uff1b}fn main(){let mut string\uff1avec&lt\uff1bstring&gt\uff1b=vec\uff1a\uff1anew()\uff1bfor_in 0.\u300210{if rand\uff1a\uff1aRandom(){//\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u662f\u968f\u673a\u751f\u6210\u7684//\u5e76\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\uff0c\u8ba9string=rand\uff1a\uff1aRandom\uff1a\uff1a&lt\uff1bU64&gt\uff1b()\u3002to_string()\uff1b\u5b57\u7b26\u4e32\u3002Push(String)\uff1b}//\u5b57\u7b26\u4e32\u662f\u62e5\u6709\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u5b83\u4eec\u7531\u5b57\u7b26\u4e32\u4e2dmut\u5b57\u7b26\u4e32\u7684\u9759\u6001\u7ea6\u675f{//\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u662f\u53ef\u53d8\u5b57\u7b26\u4e32\u3002PUSH_STR(&#34\uff1ba\u7a81\u53d8&#34\uff1b)\uff1b//\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u662f\u53ef\u4e22\u5f03\u7684DROP_STATIC(\u5b57\u7b26\u4e32)\uff1b//\u7f16\u8bd1}//\u7a0b\u5e8f\u7ed3\u675f\u524d\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u5df2\u5931\u6548println\uff01(&#34\uff1b\u6211\u662f\u7a0b\u5e8f\u7684\u7ed3\u5c3e&#34\uff1b)\uff1b}\u3002\n\u5982\u679cT\uff1a\u9759\u6001\uff0c\u5219T\u53ef\u4ee5\u662f\u5177\u6709\u9759\u6001\u751f\u5b58\u671f\u7684\u501f\u7528\u7c7b\u578b\u6216\u62e5\u6709\u7c7b\u578b\u3002\n&amp\uff1bA T\u9700\u8981\u5e76\u6697\u793aT\uff1a&#39\uff1ba\uff0c\u56e0\u4e3a\u5982\u679cT\u672c\u8eab\u5bf9&#39\uff1ba\u65e0\u6548\uff0c\u5219\u5bf9\u751f\u547d\u5468\u671f&a\u7684\u5f15\u7528\u4e0d\u80fd\u5bf9&#39\uff1ba\u6709\u6548\u3002\u4f8b\u5982\uff0cRust\u7f16\u8bd1\u5668\u6c38\u8fdc\u4e0d\u5141\u8bb8\u6784\u9020\u7c7b\u578b&amp\uff1bstatic Ref&lt\uff1b&#39\uff1ba\uff0c\u56e0\u4e3a\u5982\u679c\u5f15\u7528\u4ec5\u5bf9&#39\uff1ba\u6709\u6548\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4f7f&#39\uff1ba\u6210\u4e3a\u9759\u6001\u7c7b\u578b\u3002\n//\u4ec5\u91c7\u7528&#39\uff1ba\uff0ct\uff1a&#39\uff1ba\uff0cT\uff1a&#39\uff1ba&gt\uff1b(t\uff1a&amp\uff1b&39\uff1ba){}//\u4ee5&#39\uff1bfn t_bound&lt\uff1b&#39\uff1ba\uff0cT\uff1a&#39\uff1ba&gt\uff1b(t\uff1at){}//\u6240\u62e5\u6709\u7684\u5305\u542b\u5f15\u7528\u7ed3\u6784\u7684\u7c7b\u578b\u4e3a\u8fb9\u754c\u7684ref\u7c7b\u578b(&#39\uff1ba_ref&lt\uff1b&#39\uff1ba\uff0cT\uff1a&#39\uff1ba&gt\uff1b(t\uff1at){}//\u5305\u542b\u5f15\u7528\u7ed3\u6784\u7684fn t_bound&lt\uff1b(t\uff1at){}//\u62e5\u6709\u7684\u7c7b\u578b\u5305\u542b\u5f15\u7528\u7ed3\u6784\u3002a&gt\uff1b(&amp\uff1b#39\uff1ba T)\uff1bfn main(){let string=string\uff1a\uff1afrom(&#34\uff1bstring&#34\uff1b)\uff1bt_Bound(&amp\uff1bstring)\uff1b//\u7f16\u8bd1t_Bound(Ref(&amp\uff1bstring))\uff1b//\u7f16\u8bd1t_Bound(&amp\uff1bRef(&amp\uff1bString))\uff1b//\u7f16\u8bd1t_ref(&amp\uff1bstring)\uff1b//\u7f16\u8bd1t_ref(Ref(&amp\uff1bString))\uff1b//\u7f16\u8bd1t_ref(&amp\uff1bstring)\uff1b//\u7f16\u8bd1t_ref(&amp\uff1bstring\u3002//\u7f16\u8bd1\u9519\u8bef\uff0c\u9884\u671f\u7684ref\uff0c\u627e\u5230struct t_ref(&amp\uff1bRef(&amp\uff1bstring))\uff1b//\u7f16\u8bd1//\u5b57\u7b26\u4e32\u53d8\u91cf\u7531&#39\uff1ba t_bound(String)\uff1b//\u7f16\u8bd1}\u3002\n\u591a\u4e8f\u4e86Rust\u7684\u751f\u5b58\u671f\u7701\u7565\u89c4\u5219\uff0c\u8fd9\u4e2a\u4ee4\u4eba\u6b23\u6170\u7684\u8bef\u89e3\u5f97\u4ee5\u4fdd\u7559\uff0c\u5b83\u5141\u8bb8\u60a8\u7701\u7565\u51fd\u6570\u4e2d\u7684\u751f\u5b58\u671f\u6ce8\u91ca\uff0c\u56e0\u4e3aRust\u501f\u5165\u68c0\u67e5\u5668\u5c06\u6309\u7167\u4ee5\u4e0b\u89c4\u5219\u63a8\u65ad\u5b83\u4eec\uff1a\n\u5982\u679c\u5b58\u5728\u591a\u4e2a\u8f93\u5165\u751f\u5b58\u671f\uff0c\u4f46\u5176\u4e2d\u4e4b\u4e00\u662f&amp\uff1bself\u6216&amp mut self\uff0c\u5219self\u7684\u751f\u5b58\u671f\u5c06\u5e94\u7528\u4e8e\u6240\u6709\u8f93\u51fa\u5f15\u7528\n//elided FN\u6253\u5370(s\uff1a&amp\uff1bstr)\uff1b//\u6269\u5c55FN\u6253\u5370(s\uff1a&amp\uff1b&39\uff1ba&gt\uff1b(s\uff1a&amp\uff1b&#39\uff1ba str)\uff1b//elid FN trim(s\uff1a&amp\uff1bstr)-&gt\uff1b&amp\uff1bstr\uff1b//\u6269\u5c55FN trim&lt\uff1b&39\uff1ba&gt\uff1b(s\uff1a&amp\uff1b&39\uff1ba str)-&gt\uff1b&amp\u3002//\u975e\u6cd5\uff0c\u65e0\u6cd5\u786e\u5b9a\u8f93\u51fa\u5bff\u547d\uff0c\u6ca1\u6709\u8f93\u5165fn get_str()-&gt\uff1b&amp\uff1bstr\uff1b//\u663e\u5f0f\u9009\u9879\u5305\u62ecfn get_str\uff1b()-&gt\uff1b&amp\uff1b&39\uff1ba str\uff1b//\u6beb\u65e0\u610f\u4e49\u7684\u6cdb\u578b\uff0c\u56e0\u4e3a&#39\uff1ba\u5fc5\u987b\u7b49\u4e8e&#39\uff1bstatic fn get_str()-&gt\uff1b&amp\uff1b&39\uff1bstatic str\u3002//\u66f4\u597d\u3001\u66f4\u660e\u786e//\u975e\u6cd5\uff0c\u65e0\u6cd5\u786e\u5b9a\u8f93\u51fa\u5bff\u547d\uff0c\u591a\u4e2a\u8f93\u5165fn\u91cd\u53e0(s\uff1a&amp\uff1bstr\uff0ct\uff1a&amp\uff1bstr)-&gt\uff1b&amp\uff1bstr\uff1b//\u663e\u5f0f(\u4f46\u4ecd\u90e8\u5206\u7701\u7565)\u9009\u9879\u5305\u62ecfn\u91cd\u53e0&lt\uff1b&39\uff1ba&gt\uff1b(s\uff1a&amp\uff1b&39\uff1ba str\uff0ct\uff1a&amp\uff1bstr)-&gt\uff1b&amp\uff1ba str\uff1b/\u3002t\u8d85\u51fafn\u91cd\u53e0&lt\uff1ba&gt\uff1b(s\uff1a&amp\uff1bstr\uff0ct\uff1a&amp\uff1b&39\uff1ba str)-&gt\uff1b&amp\uff1ba str\uff1b//\u8f93\u51fa\u4e0d\u80fd\u8d85\u8fc7fn\u91cd\u53e0&lt\uff1b&39\uff1ba&gt\uff1b(s\uff1a&amp\uff1ba str\uff0ct\uff1a&amp\uff1ba str)-&gt\uff1b&amp\u3002//\u8f93\u51fa\u53ef\u4ee5\u8d85\u8fc7s&amp\uff1bt FN\u91cd\u53e0(s\uff1a&amp\uff1bstr\uff0ct\uff1a&amp\uff1bstr)-&gt\uff1b&amp\uff1b&39\uff1b\u9759\u6001str\uff1b//\u8f93\u51fa\u53ef\u4ee5\u8d85\u8fc7s&amp\uff1bt FN\u91cd\u53e0&lt\uff1b&39\uff1ba&gt\uff1b(s\uff1a&amp\uff1bstr\uff0ct\uff1a&amp\uff1bstr)-&&gt;&amp\uff1b&amp\uff1ba str\uff1b//\u8f93\u5165\u548camp\uff1b\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\u3002&#39\uff1ba\uff0c&#39\uff1bb&&gt;(s\uff1a&amp\uff1ba str\uff0ct\uff1a&amp\uff1b&39\uff1bb str)-&gt\uff1b&amp\uff1b&amp\uff1b&#39\uff1ba\uff0c&#39\uff1bb&&gt;(s\uff1a&amp\uff1b&39\uff1ba str\uff0ct\uff1a&amp\uff1b&39\uff1bb str)-&gt\uff1b&amp\uff1b&#39\uff1bb\u3002fn\u91cd\u53e0&lt\uff1ba&gt\uff1b(s\uff1a&amp\uff1ba str\uff0ct\uff1a&amp\uff1ba str)-&gt\uff1b&amp\uff1ba str\uff1bfn\u91cd\u53e0&lt\uff1ba\uff0c&#39\uff1bb&gt\uff1b(s\uff1a&amp\uff1b&39\uff1ba str\uff0ct\uff1a&amp\uff1b&39\uff1bb str)-&gt\uff1b&amp\uff1b&39\uff1b&#39\uff1ba\uff0c&#39\uff1bb\uff0c&#39\uff1bc&&gt;\uff1b(s\uff1a&amp\uff1b&39\uff1ba str\uff0ct\uff1a&amp\uff1b&#39\uff1bb str)-&gt\uff1b&amp\uff1b&#39\uff1bc str\uff1b//\u7701\u7565FN\u6bd4\u8f83(&amp\uff1bself\uff0cs\uff1a&amp\uff1bstr)-&gt\uff1b&amp\uff1b&amp\uff1bstr\uff1b//\u6269\u5c55\u7684fn\u6bd4\u8f83&lt\uff1ba\uff0c&39\uff1bb&gt\u3002&#39\uff1ba Self\uff0c&amp\uff1b&b str)-&gt\uff1b&amp\uff1ba str\uff1b\nRust\u7a0b\u5e8f\u6709\u53ef\u80fd\u5728\u6280\u672f\u4e0a\u662f\u53ef\u7f16\u8bd1\u7684\uff0c\u4f46\u5728\u8bed\u4e49\u4e0a\u4ecd\u7136\u662f\u9519\u8bef\u7684\u3002\u4ee5\u6b64\u4e3a\u4f8b\uff1a\nstruct ByteIter&lt\uff1b&#39\uff1ba&&gt;\uff1b{\u5269\u4f59\u90e8\u5206\uff1a&amp\uff1b&39\uff1ba[U8]}\u5b9e\u65bd&lt\uff1b&#39\uff1ba\uff1bByteIter&lt\uff1b{fn Next(&amp\uff1bmut self)-&gt\uff1boption&lt\uff1b&amp\uff1bU8&&gt;\uff1b{\u5982\u679c\u81ea\u6211\u4fdd\u7559\u3002is_Empty(){None}Else{let byte=&amp\uff1bself.reminder[0]\uff1bself.reminder=&amp\uff1bself.remindance[1..]\uff1bSome(Byte)}fn main(){let mut bytes=ByteIter{Remainder\uff1aB&#34\uff1b1&#34\uff1b}\uff1bassert_eq\uff01(Some(&amp\uff1bb&#39\uff1b1&#39\uff1b)\uff0cbytes\u3002next())\uff1bassert_eq\uff01(\u65e0\uff0c\u5b57\u8282\u3002Next())\uff1b}\u3002\nByteIter\u662f\u8fed\u4ee3\u5b57\u8282\u5207\u7247\u7684\u8fed\u4ee3\u5668\u3002\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u8df3\u8fc7\u8fed\u4ee3\u5668\u7279\u5f81\u5b9e\u73b0\u3002\u5b83\u4f3c\u4e4e\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u6b21\u68c0\u67e5\u51e0\u4e2a\u5b57\u8282\u600e\u4e48\u529e\uff1f\nfn main(){\u8bbemut bytes=ByteIter{\u5269\u4f59\u90e8\u5206\uff1aB&#34\uff1b1123&#34\uff1b}\uff1b\u8bbebyte_1=\u5b57\u8282\u3002Next()\uff1b\u8bbebyte_2=\u5b57\u8282\u3002Next()\uff1b\u5982\u679cbyte_1==byte_2{//\u505a\u70b9\u4ec0\u4e48}}\u3002\n\u9519\u8bef[E0499]\uff1a\u4e0d\u80fd\u4e00\u6b21\u5c06`bytes`\u4f5c\u4e3a\u53ef\u53d8\u53d8\u91cf\u591a\u6b21\u501f\u7528--&gt\uff1bsrc/main.rs\uff1a20\uff1a18|19|let byte_1=bytes\u3002Next()\uff1b|-\u7b2c\u4e00\u4e2a\u53ef\u53d8\u501f\u5165\u51fa\u73b0\u5728\u8fd9\u91cc20|let byte_2=bytes\u3002Next()\uff1b|^\u7b2c\u4e8c\u6b21\u53ef\u53d8\u501f\u5165\u51fa\u73b0\u5728\u6b64\u590421|If BYTE_1==BYTE_2{|-\u8fd9\u91cc\u7a0d\u540e\u4f7f\u7528\u7684\u7b2c\u4e00\u6b21\u501f\u5165\u3002\n\u6211\u60f3\u6211\u4eec\u53ef\u4ee5\u590d\u5236\u6bcf\u4e2a\u5b57\u8282\u3002\u5f53\u6211\u4eec\u6b63\u5728\u5904\u7406\u5b57\u8282\u65f6\uff0c\u590d\u5236\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5c06ByteIter\u8f6c\u6362\u4e3a\u53ef\u4ee5\u8fed\u4ee3\u4efb\u4f55[T]\u7684\u6cdb\u578b\u5207\u7247\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5728\u5c06\u6765\u5c06\u5176\u7528\u4e8e\u53ef\u80fd\u975e\u5e38\u6602\u8d35\u6216\u4e0d\u53ef\u80fd\u590d\u5236/\u514b\u9686\u7684\u7c7b\u578b\u3002\u54e6\uff0c\u597d\u5427\uff0c\u6211\u60f3\u6211\u4eec\u5bf9\u6b64\u65e0\u80fd\u4e3a\u529b\uff0c\u4ee3\u7801\u4f1a\u7f16\u8bd1\uff0c\u6240\u4ee5\u751f\u5b58\u671f\u6ce8\u91ca\u4e00\u5b9a\u662f\u6b63\u786e\u7684\uff0c\u5bf9\u5417\uff1f\n\u4e0d\uff0c\u5f53\u524d\u7684\u751f\u5b58\u671f\u6ce8\u91ca\u5b9e\u9645\u4e0a\u662f\u9519\u8bef\u7684\u6765\u6e90\uff01\u5b83\u7279\u522b\u96be\u88ab\u53d1\u73b0\uff0c\u56e0\u4e3a\u9519\u8bef\u7684\u751f\u547d\u5468\u671f\u6ce8\u91ca\u88ab\u7701\u7565\u4e86\u3002\u4e3a\u4e86\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u5ef6\u957f\u5df2\u53d6\u6d88\u7684\u751f\u547d\u5468\u671f\uff1a\nstruct ByteIter&lt\uff1b&#39\uff1ba&&gt;\uff1b{\u5269\u4f59\u90e8\u5206\uff1a&amp\uff1b&39\uff1ba&&gt;}\u5b9e\u65bd&lt\uff1b&#39\uff1ba&&gt;\uff1b\u5b57\u8282\u9879&lt\uff1b{FN Next&lt\uff1b&#39\uff1bb&&gt;(&amp\uff1b#39\uff1bb mut Self)-&&gt;\u9009\u9879&lt\uff1b&amp\uff1bb U8&&gt;t\uff1b{FN Next&lt\uff1b(&amp\uff1b#39\uff1bb MUT Self)-&&gt;\u9009\u9879&lt\uff1b&amp\uff1bb U8&&gt;t\uff1b{FN Next&lt\uff1b(&amp\uff1b#39\uff1bb MUT Self)-&&gt;\u9009\u9879&lt\uff1b&amp\uff1bb U8&&gt;\u3002IS_EMPTY(){NONE}ELSE{let byte=&amp\uff1bself.reminder[0]\uff1bself.reminder=&amp\uff1bself.reminder[1..]\uff1bome(Byte)}\u3002\n\u90a3\u4e00\u70b9\u5e2e\u52a9\u90fd\u6ca1\u6709\u3002\u6211\u8fd8\u662f\u5f88\u56f0\u60d1\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u53ea\u6709\u94c1\u9508\u4e13\u5bb6\u624d\u77e5\u9053\u7684\u70ed\u70b9\u63d0\u793a\uff1a\u7ed9\u4f60\u7684\u7ec8\u8eab\u6ce8\u91ca\u8d77\u63cf\u8ff0\u6027\u7684\u540d\u5b57\u3002\u8ba9\u6211\u4eec\u91cd\u8bd5\uff1a\n\u7ed3\u6784\u5b57\u8282\u9879\u76ee&#39\uff1b\u5269\u4f59\u90e8\u5206&&gt;\uff1b{\u5269\u4f59\u90e8\u5206\uff1a&amp\uff1b#39\uff1b\u5269\u4f59\u90e8\u5206[U8]}\u5b9e\u65bd&lt\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206\uff1b\u5b57\u8282\u9879&lt\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206&&gt;{FN NEXT&lt\uff1b&#39\uff1bMUT_SELF&&gt;(&amp\uff1b&39\uff1bMUT_Self MUT SELF)-&&gt;\u9009\u9879&lt\uff1b&amp\uff1b&39\uff1bIS_EMPTY(){NONE}ELSE{let byte=&amp\uff1bself.reminder[0]\uff1bself.reminder=&amp\uff1bself.reminder[1..]\uff1bome(Byte)}\u3002\n\u6bcf\u4e2a\u8fd4\u56de\u7684\u5b57\u8282\u90fd\u5e26\u6709&#39\uff1bmut_self\u6ce8\u91ca\uff0c\u4f46\u662f\u8fd9\u4e9b\u5b57\u8282\u663e\u7136\u6765\u81ea&#39\uff1bRELENDER\uff01\u8ba9\u6211\u4eec\u628a\u5b83\u4fee\u597d\u3002\n\u7ed3\u6784\u5b57\u8282\u9879&lt\uff1b&#39\uff1b\u5269\u4f59&&gt;\uff1b{\u5269\u4f59\u90e8\u5206\uff1a&amp\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206[U8]}\u5b9e\u65bd&lt\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206&lt\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206&&gt;{fn Next(&amp\uff1bmut self)-&&gt;\u9009\u9879&lt\uff1b&amp\uff1b&amp\uff1b&#39\uff1b\u5269\u4f59\u90e8\u5206U8&&gt;{\u5982\u679c\u81ea\u6211\u4fdd\u7559\u3002is_Empty(){None}Else{let byte=&amp\uff1bself.reemainth[0]\uff1bself.reminder=&amp\uff1bself.remindance[1..]\uff1bSome(Byte)}fn main(){let mut bytes=ByteIter{RELEMENT\uff1aB&#34\uff1b1123&#34\uff1b}\uff1blet byte_1=bytes\u3002Next()\uff1b\u8bbebyte_2=\u5b57\u8282\u3002Next()\uff1bstd\uff1a\uff1amem\uff1a\uff1adrop(Bytes)\uff1b//\u6211\u4eec\u73b0\u5728\u751a\u81f3\u53ef\u4ee5\u5220\u9664\u8fed\u4ee3\u5668\uff01\u5982\u679cBYTE_1==BYTE_2{//\u7f16\u8bd1//\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c}}\u3002\n\u73b0\u5728\u6211\u4eec\u56de\u8fc7\u5934\u6765\u770b\u6211\u4eec\u7a0b\u5e8f\u7684\u524d\u4e00\u4e2a\u7248\u672c\uff0c\u5b83\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48Rust\u8981\u7f16\u8bd1\u5b83\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff1a\u5b83\u662f\u5185\u5b58\u5b89\u5168\u7684\u3002\nRust\u501f\u5165\u68c0\u67e5\u5668\u53ea\u5173\u5fc3\u7a0b\u5e8f\u4e2d\u7684\u751f\u5b58\u671f\u6ce8\u91ca\uff0c\u53ea\u8981\u5b83\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u9759\u6001\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u5185\u5b58\u5b89\u5168\u6027\u3002\u5373\u4f7f\u751f\u547d\u5468\u671f\u6ce8\u91ca\u6709\u8bed\u4e49\u9519\u8bef\uff0cRust\u4e5f\u4f1a\u6109\u5feb\u5730\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u5176\u7ed3\u679c\u662f\u7a0b\u5e8f\u53d8\u5f97\u4e0d\u5fc5\u8981\u7684\u9650\u5236\u3002\n\u8fd9\u91cc\u662f\u4e00\u4e2a\u4e0e\u524d\u4e00\u4e2a\u793a\u4f8b\u76f8\u53cd\u7684\u5feb\u901f\u793a\u4f8b\uff1a\u5728\u8fd9\u4e2a\u5b9e\u4f8b\u4e2d\uff0cRuust\u7684\u751f\u5b58\u671f\u7701\u7565\u89c4\u5219\u78b0\u5de7\u5728\u8bed\u4e49\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u610f\u4e2d\u7528\u6211\u4eec\u81ea\u5df1\u4e0d\u5fc5\u8981\u7684\u663e\u5f0f\u751f\u5b58\u671f\u6ce8\u91ca\u7f16\u5199\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u9650\u5236\u6027\u7684\u65b9\u6cd5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cRuust\u7684\u751f\u5b58\u671f\u7701\u7565\u89c4\u5219\u5728\u8bed\u4e49\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u610f\u4e2d\u7528\u81ea\u5df1\u4e0d\u5fc5\u8981\u7684\u663e\u5f0f\u751f\u5b58\u671f\u6ce8\u91ca\u7f16\u5199\u4e86\u4e00\u4e2a\u975e\u5e38\u4e25\u683c\u7684\u65b9\u6cd5\u3002\n#[Derive(Debug)]struct NumRef&lt\uff1b&#39\uff1ba&gt\uff1b(&amp\uff1b#39\uff1ba I32)\uff1bIml&lt\uff1b&#39\uff1ba\uff1bNumRef&lt\uff1b&#39\uff1ba&&gt;{//my struct\u662f&#39\uff1ba\u4e0a\u7684\u6cdb\u578b\u7ed3\u6784\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4e5f\u9700\u8981\u7528&#39\uff1ba\u6ce8\u91ca//\u6211\u7684self\u53c2\u6570\uff0c\u5bf9\u5417\uff1f(\u56de\u7b54\uff1a\u4e0d\uff0c\u4e0d\u6b63\u786e)fn ome_method(&amp\uff1b&#39\uff1ba mut self){}}fn main(){let mut num_ref=NumRef(&amp\uff1b5)\uff1bnum_ref\u3002SomeMethod()\uff1b//\u53ef\u53d8\u5730\u501f\u7528num_ref\u4f5c\u4e3a\u5176\u5269\u4f59\u751f\u547d\u5468\u671f\u7684num_ref\u3002Some_Method()\uff1b//\u7f16\u8bd1\u9519\u8befprintln\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cnum_ref)\uff1b//\u4e5f\u7f16\u8bd1\u9519\u8bef}\u3002\n\u5982\u679c\u6211\u4eec\u5728&#39\uff1ba\u4e0a\u6709\u4e00\u4e9b\u7ed3\u6784\u6cdb\u578b\uff0c\u6211\u4eec\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u60f3\u8981\u7f16\u5199\u4e00\u4e2a\u5e26\u6709mut\u81ea\u8eab\u63a5\u6536\u5668\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u6b63\u5728\u5411Rust\u4f20\u8fbe\u7684\u662f\uff0c\u6b64\u65b9\u6cd5\u5c06\u5728\u7ed3\u6784\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u53ef\u53d8\u5730\u501f\u7528\u7ed3\u6784\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740Rust\u7684\u501f\u5165\u68c0\u67e5\u5668\u5728\u7ed3\u6784\u53d8\u4e3a\u6c38\u4e45\u53ef\u53d8\u501f\u5165\u4ece\u800c\u4e0d\u53ef\u7528\u4e4b\u524d\uff0c\u6700\u591a\u53ea\u5141\u8bb8\u8c03\u7528\u4e00\u6b21\u67d0\u4e9b\u65b9\u6cd5\u3002\u8fd9\u65b9\u9762\u7684\u7528\u4f8b\u6781\u5176\u7f55\u89c1\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u5bf9\u4e8e\u56f0\u60d1\u7684\u521d\u5b66\u8005\u6765\u8bf4\u975e\u5e38\u5bb9\u6613\u7f16\u5199\uff0c\u5e76\u4e14\u53ef\u4ee5\u7f16\u8bd1\u3002\u4fee\u590d\u65b9\u6cd5\u662f\u4e0d\u6dfb\u52a0\u4e0d\u5fc5\u8981\u7684\u663e\u5f0f\u751f\u5b58\u671f\u6ce8\u91ca\uff0c\u5e76\u8ba9Rust\u7684\u751f\u5b58\u671f\u7701\u7565\u89c4\u5219\u5904\u7406\uff1a\n#[\u6d3e\u751f(\u8c03\u8bd5)]struct NumRef&lt\uff1b&#39\uff1ba&gt\uff1b(&amp\uff1b#39\uff1ba I32)\uff1b\u5b9e\u65bd&39\uff1ba\uff1bNumRef&lt\uff1b&#39\uff1ba&&gt;a on mut self FN SOME_METHOD(&amp\uff1bMUT Self){}//\u4ee5\u4e0a\u884c\u5bf9FN SOME_METHOD_Desugared&lt\u3002b mut self){}}fn main(){let mut num_ref=NumRef(&amp\uff1b5)\uff1bnum_ref.\u3002\u67d0\u4e9b\u65b9\u6cd5()\uff1bnum_ref\u3002Some_Method()\uff1b//\u7f16\u8bd1println\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cnum_ref)\uff1b//\u7f16\u8bd1}\u3002\n\u524d\u9762\u6211\u4eec\u8ba8\u8bba\u4e86Rust\u7684\u51fd\u6570\u751f\u547d\u5468\u671f\u7701\u7565\u89c4\u5219\u3002Ruust\u8fd8\u5177\u6709\u7279\u5f81\u5bf9\u8c61\u7684\u751f\u5b58\u671f\u7701\u7565\u89c4\u5219\uff0c\u5176\u4e2d\u5305\u62ec\uff1a\n\u5982\u679c\u5c06\u7279\u5f81\u5bf9\u8c61\u7528\u4f5c\u6cdb\u578b\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u5219\u4ece\u5305\u542b\u7c7b\u578b\u63a8\u65ad\u5176\u751f\u5b58\u671f\u754c\u9650\u3002\u5982\u679c\u4ece\u5305\u542b\u7c7b\u578b\u6709\u591a\u4e2a\u754c\u9650\uff0c\u5219\u5fc5\u987b\u6307\u5b9a\u663e\u5f0f\u754c\u9650\u3002\n\u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u4e0d\u9002\u7528\uff0c\u5219\u5982\u679c\u7279\u6027\u5b9a\u4e49\u4e3a\u5177\u6709\u5355\u4e2a\u751f\u547d\u5468\u671f\u754c\u9650\uff0c\u5219\u4f7f\u7528\u8be5\u754c\u9650\u3002\n\u5982\u679c\u7279\u5f81\u6ca1\u6709\u751f\u5b58\u671f\u754c\u9650\uff0c\u5219\u5176\u751f\u5b58\u671f\u5728\u8868\u8fbe\u5f0f\u4e2d\u63a8\u65ad\uff0c\u5e76\u4e14\u5728\u8868\u8fbe\u5f0f\u4e4b\u5916\u662f\u9759\u6001\u7684\u3002\n\u6240\u6709\u8fd9\u4e00\u5207\u542c\u8d77\u6765\u8d85\u7ea7\u590d\u6742\uff0c\u4f46\u53ef\u4ee5\u7b80\u5355\u5730\u6982\u62ec\u4e3a\u7279\u5f81\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u754c\u9650\u662f\u4ece\u4e0a\u4e0b\u6587\u4e2d\u63a8\u65ad\u51fa\u6765\u7684\u3002\u5728\u770b\u4e86\u51e0\u4e2a\u4f8b\u5b50\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u751f\u547d\u5468\u671f\u754c\u9650\u7684\u63a8\u8bba\u975e\u5e38\u76f4\u89c2\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u8bb0\u4f4f\u5f62\u5f0f\u89c4\u5219\uff1a\n\u4f7f\u7528std\uff1a\uff1acell\uff1a\uff1aref\uff1b\u7279\u5f81\u7279\u5f81{}//\u7701\u7565\u7c7b\u578bT1=Box&lt\uff1bdyn\u7279\u5f81&gt\uff1b\uff1b//\u5c55\u5f00\uff0cBox&lt\uff1bT&gt\uff1b\u5bf9T\u6ca1\u6709\u751f\u5b58\u671f\u9650\u5236\uff0c\u56e0\u6b64\u63a8\u65ad\u4e3a&#39\uff1b\u9759\u6001\u7c7b\u578bT2=Box&lt\uff1bdyn\u7279\u5f81+&#39\uff1b\u9759\u6001&gt\uff1b\uff1b//\u7701\u7565\u5b9e\u65bd\u52a8\u6001\u7279\u5f81{}//\u6269\u5c55\u5b9e\u65bd\u52a8\u6001\u7279\u5f81+&#39\uff1b\u9759\u6001{}//\u7701\u7565\u7c7b\u578bT3\u3002\u52a8\u6001\u7279\u5f81\uff1b//\u6269\u5c55\u7684T\u9700\u8981T\uff1a&#39\uff1ba\uff0c\u56e0\u6b64\u63a8\u65ad\u4e3a&#39\uff1ba\u7c7b\u578bT4&gt\uff1b=&amp\uff1b#39\uff1ba(\u52a8\u6001\u7279\u5f81\uff1ba)\uff1b//\u7701\u7565\u7c7b\u578bT5&lt\uff1b&39\uff1ba&&gt;\uff1b=Ref&lt\uff1ba\uff0cDyn\u7279\u5f81&&gt;\uff1b//\u6269\u5c55\uff0c\u53c2\u8003\u3002\u9700\u8981T\uff1a&#39\uff1ba\uff0c\u56e0\u6b64\u63a8\u65ad\u4e3a&#39\uff1ba\u7c7b\u578bT6&lt\uff1b&#39\uff1ba&&gt;\uff1b=Ref&lt\uff1b&#39\uff1ba\uff0cdyn\u7279\u5f81\uff1b\u7279\u6027GenericTrait&lt\uff1b&#39\uff1ba&&gt;\uff1b\uff1a&#39\uff1ba{}//\u7701\u7565\u7c7b\u578bT7&lt\uff1b&#39\uff1ba&&gt;\uff1b=Box&lt\uff1ba&&gt;\uff1b=Box&lt\uff1ba&gt\uff1b=Box&lt\uff1ba&&gt;\uff1b&#39\uff1ba&&gt;=Box&lt\uff1bdyn GenericTrait&lt\uff1b&#39\uff1ba&gt\uff1bdyn GenericTrait&lt\uff1b&#39\uff1ba&gt\uff1b\n\u5b9e\u73b0\u7279\u5f81\u7684\u5177\u4f53\u7c7b\u578b\u53ef\u4ee5\u6709\u5f15\u7528\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u6709\u751f\u5b58\u671f\u754c\u9650\uff0c\u56e0\u6b64\u5b83\u4eec\u5bf9\u5e94\u7684\u7279\u5f81\u5bf9\u8c61\u4e5f\u6709\u751f\u5b58\u671f\u754c\u9650\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4e3a\u5f15\u7528\u5b9e\u73b0\u7279\u5f81\uff0c\u8fd9\u663e\u7136\u662f\u6709\u751f\u547d\u5468\u671f\u9650\u5236\u7684\uff1a\n\u7279\u5f81{}struct Struct{}struct Ref&&gt;\uff1b(&amp\uff1b&39\uff1bT&&gt;\uff1b(&amp\uff1b\uff1ba T)\uff1b\u5bf9\u7ed3\u6784{}\u5b9e\u65bd\u7279\u5f81\u5bf9&amp\uff1bStruct{}//\u5bf9\u5f15\u7528\u7c7b\u578b\u5b9e\u65bd\u7279\u5f81\u76f4\u63a5\u5bf9\u5f15\u7528\u7c7b\u578b\u5b9e\u65bd\u7279\u5f81\uff1b\u5bf9\u7c7b\u578b\u5b9e\u65bd\u7279\u5f81(&amp\uff1bA\uff0cT&&gt;\uff1b{}//\u5bf9\u5f15\u7528\u7c7b\u578b\u5b9e\u65bd\u7279\u5f81)\uff0cT&&gt;\uff1b(&amp\uff1bA\uff0cT&&gt;\uff1b(&amp\uff1ba)\uff1b(&amp\uff1ba)\uff1b\u76f4\u63a5\u5728\u5f15\u7528\u7c7b\u578b\u4e0a\u5b9e\u65bd\u7279\u5f81(&amp\uff1bStruct{})//\u5b9e\u65bd\u7279\u5f81(&amp\uff1bStruct{}//Iml Struct{}//Iml Characteristic)\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u662f\u503c\u5f97\u590d\u4e60\u7684\uff0c\u56e0\u4e3a\u5f53\u521d\u5b66\u8005\u5c06\u51fd\u6570\u4ece\u4f7f\u7528\u7279\u5f81\u5bf9\u8c61\u91cd\u6784\u5230\u6cdb\u578b(\u53cd\u4e4b\u4ea6\u7136)\u65f6\uff0c\u8fd9\u5e38\u5e38\u4f1a\u8ba9\u4ed6\u4eec\u611f\u5230\u56f0\u60d1\u3002\u4ee5\u6b64\u7a0b\u5e8f\u4e3a\u4f8b\uff1a\n\u4f7f\u7528std\uff1a\uff1afmt\uff1a\uff1adisplay\uff1bfn dynamic_thread_print(t\uff1abox&lt\uff1bdyn display+send&gt\uff1b){std\uff1a\uff1athread\uff1a\uff1aspawn(Move||{println\uff01(&#34\uff1b{}&#34\uff1b\uff0ct)\uff1b})\u3002Join()\uff1b}fn static_thread_print&lt\uff1bT\uff1adisplay+send&gt\uff1b(t\uff1at){std\uff1a\uff1athread\uff1a\uff1aspawn(Move||{println\uff01(&#34\uff1b{}&#34\uff1b\uff0ct)\uff1b})\u3002Join()\uff1b}\u3002\n\u9519\u8bef[E0310]\uff1a\u53c2\u6570\u7c7b\u578b`T`\u53ef\u80fd\u5b58\u5728\u65f6\u95f4\u4e0d\u591f\u957f--&gt\uff1bsrc/lib.rs\uff1a10\uff1a5|9|fn static_thread_print&lt\uff1bT\uff1adisplay+send&gt\uff1b(t\uff1at){|--help\uff1a\u8003\u8651\u6dfb\u52a0\u660e\u786e\u7684\u751f\u5b58\u671f\u9650\u5236.\uff1a`t\uff1a&#39\uff1bstatic+`10|std\uff1a\uff1aThread\uff1a\uff1aSPAWN(\u79fb\u52a8||{|^}\u7c7b\u578b`[Close@src/lib.rs\uff1a10\uff1agt\uff1bsrc/lib.rs\uff1a10\uff1a5|10|std\uff1a\uff1aThread\uff1a\uff1aSpawn(\u79fb\u52a8||{|^\u3002\n\u597d\u7684\uff0c\u5f88\u597d\uff0c\u7f16\u8bd1\u5668\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4f7f\u7528std\uff1a\uff1afmt\uff1a\uff1adisplay\uff1bfn dynamic_thread_print(t\uff1abox&lt\uff1bdyn display+send&gt\uff1b){std\uff1a\uff1athread\uff1a\uff1aspawn(Move||{println\uff01(&#34\uff1b{}&#34\uff1b\uff0ct)\uff1b})\u3002Join()\uff1b}fn static_thread_print&lt\uff1bT\uff1adisplay+send+&#39\uff1bstatic&gt\uff1b(t\uff1at){std\uff1a\uff1athread\uff1a\uff1aspawn(Move||{println\uff01(&#34\uff1b{}&#34\uff1b\uff0ct)\uff1b})\u3002Join()\uff1b}\n\u5b83\u73b0\u5728\u53ef\u4ee5\u7f16\u8bd1\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u51fd\u6570\u770b\u8d77\u6765\u5f7c\u6b64\u76f8\u90bb\u4e0d\u65b9\u4fbf\uff0c\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u4e2a\u51fd\u6570\u9700\u8981\u4e00\u4e2a&#3\u3002\n..", "note_en": "I&#39;ve held all of these misconceptions at some point and I see many beginners struggle with these misconceptions today. Some of my terminology might be non-standard, so here&#39;s a table of shorthand phrases I use and what I intend for them to mean.\n   In a nutshell: A variable&#39;s lifetime is how long the data it points to can be statically verified by the compiler to be valid at its current memory address. I&#39;ll now spend the next ~6000 words going into more detail about where people commonly get confused.\n  This misconception is more about generics than lifetimes but generics and lifetimes are tightly interwined in Rust so it&#39;s not possible to talk about one without also talking about the other. Anyway:\n When I first started learning Rust I understood that  i32,  &amp;i32, and  &amp;mut i32 are different types. I also understood that some generic type variable  T represents a set which contains all possible types. However, despite understanding both of these things separately, I wasn&#39;t able to understand them together. In my newbie Rust mind this is how I thought generics worked:\n  T contains all owned types.  &amp;T contains all immutably borrowed types.  &amp;mut T contains all mutably borrowed types.  T,  &amp;T, and  &amp;mut T are disjoint finite sets. Nice, simple, clean, easy, intuitive, and completely totally wrong. This is how generics actually work in Rust:\n  T,  &amp;T, and  &amp;mut T are all infinite sets, since it&#39;s possible to borrow a type ad-infinitum.  T is a superset of both  &amp;T and  &amp;mut T.  &amp;T and  &amp;mut T are disjoint sets. Here&#39;s a couple examples which validate these concepts:\n trait  Trait {} impl&lt;T&gt;  Trait  for  T {} impl&lt;T&gt;  Trait  for  &amp; T {}  // compile error impl&lt;T&gt;  Trait  for  &amp; mut  T {}  // compile error\n  error[E0119]: conflicting implementations of trait `Trait`  for type ` &amp;_`:  -- &gt; src /lib.rs: 5: 1  | 3  |  impl&lt;T&gt;  Trait  for  T {}  |  ------------------- first implementation here 4  | 5  |  impl&lt;T&gt;  Trait  for  &amp; T {}  |  ^^^^^^^^^^^^^^^^^^^^ conflicting implementation  for ` &amp;_`error[E0119]: conflicting implementations of trait `Trait`  for type ` &amp; mut _`:  -- &gt; src /lib.rs: 7: 1  | 3  |  impl&lt;T&gt;  Trait  for  T {}  |  ------------------- first implementation here... 7  |  impl&lt;T&gt;  Trait  for  &amp; mut  T {}  |  ^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation  for ` &amp; mut _`\n The compiler doesn&#39;t allow us to define an implementation of  Trait for  &amp;T and  &amp;mut T since it would conflict with the implementation of  Trait for  T which already includes all of  &amp;T and  &amp;mut T. The program below compiles as expected, since  &amp;T and  &amp;mut T are disjoint:\n trait  Trait {} impl&lt;T&gt;  Trait  for  &amp; T {}  // compiles impl&lt;T&gt;  Trait  for  &amp; mut  T {}  // compiles\n      Most Rust beginners get introduced to the  &#39;static lifetime for the first time in a code example that looks something like this:\n  They get told that  &#34;str literal&#34; is hardcoded into the compiled binary and it&#39;s loaded into read-only memory at run-time so it&#39;s immutable and valid for the entire program and that&#39;s what makes it  &#39;static. These concepts are further reinforced by the rules surrounding defining  static variables using the  static keyword.\n static BYTES: [ u8;  3]  = [ 1,  2,  3]; static  mut MUT_BYTES: [ u8;  3]  = [ 1,  2,  3]; fn  main() { MUT_BYTES[ 0]  =  99;  // compile error, mutating static is unsafe  unsafe { MUT_BYTES[ 0]  =  99;  assert_eq!( 99, MUT_BYTES[ 0]); }}\n   The  &#39;static lifetime was probably named after the default lifetime of  static variables, right? So it makes sense that the  &#39;static lifetime has to follow all the same rules, right?\n Well yes, but a type  with a  &#39;static lifetime is different from a type  bounded by a  &#39;static lifetime. The latter can be dynamically allocated at run-time, can be safely and freely mutated, can be dropped, and can live for arbitrary durations.\n  &amp;&#39;static T is an immutable reference to some  T that can be safely held indefinitely long, including up until the end of the program. This is only possible if  T itself is immutable and does not move  after the reference was created.  T does not need to be created at compile-time. It&#39;s possible to generate random dynamically allocated data at run-time and return  &#39;static references to it at the cost of leaking memory, e.g.\n use rand; // generate random &#39;static str refs at run-time fn  rand_str_generator() -&gt; &amp; &#39; static  str {  let rand_string  = rand :: random ::&lt; u64&gt;(). to_string();  Box :: leak(rand_string. into_boxed_str())}\n T: &#39;static is some  T that can be safely held indefinitely long, including up until the end of the program.  T: &#39;static includes all  &amp;&#39;static T however it also includes all owned types, like  String,  Vec, etc. The owner of some data is guaranted that data will never get invalidated as long as the owner holds onto it, therefore the owner can safely hold onto the data indefinitely long, including up until the end of the program.  T: &#39;static should be read as  &#34; T is bounded by a  &#39;static lifetime&#34; not  &#34; T has a  &#39;static lifetime&#34;. A program to help illustrate these concepts:\n use rand; fn  drop_static&lt;T:  &#39; static&gt;(t: T) { std ::mem :: drop(t);} fn  main() {  let  mut strings:  Vec &lt; String &gt;  =  Vec :: new();  for _  in  0.. 10 {  if rand :: random() {  // all the strings are randomly generated  // and dynamically allocated at run-time  let string  = rand :: random ::&lt; u64&gt;(). to_string(); strings. push(string); } }  // strings are owned types so they&#39;re bounded by &#39;static  for  mut string  in strings {  // all the strings are mutable string. push_str( &#34;a mutation&#34;);  // all the strings are droppable  drop_static(string);  // compiles }  // all the strings have been invalidated before the end of the program  println!( &#34;i am the end of the program&#34;);}\n  if  T: &#39;static then  T can be a borrowed type with a  &#39;static lifetime  or an owned type\n   &amp;&#39;a T requires and implies  T: &#39;a since a reference to  T of lifetime  &#39;a cannot be valid for  &#39;a if  T itself is not valid for  &#39;a. For example, the Rust compiler will never allow the construction of the type  &amp;&#39;static Ref&lt;&#39;a, T&gt; because if  Ref is only valid for  &#39;a we can&#39;t make a  &#39;static reference to it.\n  // only takes ref types bounded by &#39;a fn  t_ref&lt; &#39; a, T:  &#39; a&gt;(t: &amp; &#39; a T) {} // takes any types bounded by &#39;a fn  t_bound&lt; &#39; a, T:  &#39; a&gt;(t: T) {} // owned type which contains a reference struct  Ref&lt; &#39; a, T:  &#39; a&gt;(&amp; &#39; a T); fn  main() {  let string  =  String :: from( &#34;string&#34;);  t_bound( &amp;string);  // compiles  t_bound( Ref( &amp;string));  // compiles  t_bound( &amp; Ref( &amp;string));  // compiles  t_ref( &amp;string);  // compiles  t_ref( Ref( &amp;string));  // compile error, expected ref, found struct  t_ref( &amp; Ref( &amp;string));  // compiles  // string var is bounded by &#39;static which is bounded by &#39;a  t_bound(string);  // compiles}\n      This comforting misconception is kept alive thanks to Rust&#39;s lifetime elision rules, which allow you to omit lifetime annotations in functions because the Rust borrow checker will infer them following these rules:\n if there&#39;s multiple input lifetimes but one of them is  &amp;self or  &amp;mut self then the lifetime of  self is applied to all output refs\n  // elided fn  print(s:  &amp; str); // expanded fn  print&lt; &#39; a&gt;(s: &amp; &#39; a  str); // elided fn  trim(s:  &amp; str) -&gt;  &amp; str; // expanded fn  trim&lt; &#39; a&gt;(s: &amp; &#39; a  str) -&gt; &amp; &#39; a  str; // illegal, can&#39;t determine output lifetime, no inputs fn  get_str() -&gt;  &amp; str; // explicit options include fn  get_str&lt; &#39; a&gt;() -&gt; &amp; &#39; a  str;  // pointlessly generic, since &#39;a must equal &#39;static fn  get_str() -&gt; &amp; &#39; static  str;  // better, more explicit // illegal, can&#39;t determine output lifetime, multiple inputs fn  overlap(s:  &amp; str, t:  &amp; str) -&gt;  &amp; str; // explicit (but still partially elided) options include fn  overlap&lt; &#39; a&gt;(s: &amp; &#39; a  str, t:  &amp; str) -&gt; &amp; &#39; a  str;  // output can&#39;t outlive s fn  overlap&lt; &#39; a&gt;(s:  &amp; str, t: &amp; &#39; a  str) -&gt; &amp; &#39; a  str;  // output can&#39;t outlive t fn  overlap&lt; &#39; a&gt;(s: &amp; &#39; a  str, t: &amp; &#39; a  str) -&gt; &amp; &#39; a  str;  // output can&#39;t outlive s &amp; t fn  overlap(s:  &amp; str, t:  &amp; str) -&gt; &amp; &#39; static  str;  // output can outlive s &amp; t fn  overlap&lt; &#39; a&gt;(s:  &amp; str, t:  &amp; str) -&gt; &amp; &#39; a  str;  // no relationship between input &amp; output lifetimes // expanded fn  overlap&lt; &#39; a,  &#39; b&gt;(s: &amp; &#39; a  str, t: &amp; &#39; b  str) -&gt; &amp; &#39; a  str; fn  overlap&lt; &#39; a,  &#39; b&gt;(s: &amp; &#39; a  str, t: &amp; &#39; b  str) -&gt; &amp; &#39; b  str; fn  overlap&lt; &#39; a&gt;(s: &amp; &#39; a  str, t: &amp; &#39; a  str) -&gt; &amp; &#39; a  str; fn  overlap&lt; &#39; a,  &#39; b&gt;(s: &amp; &#39; a  str, t: &amp; &#39; b  str) -&gt; &amp; &#39; static  str; fn  overlap&lt; &#39; a,  &#39; b,  &#39; c&gt;(s: &amp; &#39; a  str, t: &amp; &#39; b  str) -&gt; &amp; &#39; c  str; // elided fn  compare( &amp; self, s:  &amp; str) -&gt;  &amp; str; // expanded fn  compare&lt; &#39; a,  &#39; b&gt;(&amp; &#39; a  self, &amp; &#39; b  str) -&gt; &amp; &#39; a  str;\n         It&#39;s possible for a Rust program to be technically compilable but still semantically wrong. Take this for example:\n struct  ByteIter&lt; &#39; a&gt; { remainder: &amp; &#39; a [ u8]} impl&lt; &#39; a&gt;  ByteIter&lt; &#39; a&gt; {  fn  next( &amp; mut  self) -&gt;  Option&lt; &amp; u8&gt; {  if  self.remainder. is_empty() {  None }  else {  let byte  =  &amp; self.remainder[ 0];  self.remainder  =  &amp; self.remainder[ 1..];  Some(byte) } }} fn  main() {  let  mut bytes  = ByteIter { remainder:  b&#34;1&#34; };  assert_eq!( Some( &amp; b&#39;1&#39;), bytes. next());  assert_eq!( None, bytes. next());}\n ByteIter is an iterator that iterates over a slice of bytes. We&#39;re skipping the  Iterator trait implementation for conciseness. It seems to work fine, but what if we want to check a couple bytes at a time?\n fn  main() {  let  mut bytes  = ByteIter { remainder:  b&#34;1123&#34; };  let byte_1  = bytes. next();  let byte_2  = bytes. next();  if byte_1  == byte_2 {  // do something }}\n  error[E0499]: cannot borrow `bytes`  as mutable more than once at a time  -- &gt; src /main.rs: 20: 18  | 19  |  let byte_1  = bytes. next();  |  ----- first mutable borrow occurs here 20  |  let byte_2  = bytes. next();  |  ^^^^^ second mutable borrow occurs here 21  |  if byte_1  == byte_2 {  |  ------ first borrow later used here\n I guess we can copy each byte. Copying is okay when we&#39;re working with bytes but if we turned  ByteIter into a generic slice iterator that can iterate over any  &amp;&#39;a [T] then we might want to use it in the future with types that may be very expensive or impossible copy / clone. Oh well, I guess there&#39;s nothing we can do about that, the code compiles so the lifetime annotations must be right, right?\n Nope, the current lifetime annotations are actually the source of the bug! It&#39;s particularly hard to spot because the buggy lifetime annotations are elided. Lets expand the elided lifetimes to get a clearer look at the problem:\n struct  ByteIter&lt; &#39; a&gt; { remainder: &amp; &#39; a [ u8]} impl&lt; &#39; a&gt;  ByteIter&lt; &#39; a&gt; {  fn  next&lt; &#39; b&gt;(&amp; &#39; b  mut  self) -&gt;  Option&lt;&amp; &#39; b  u8&gt; {  if  self.remainder. is_empty() {  None }  else {  let byte  =  &amp; self.remainder[ 0];  self.remainder  =  &amp; self.remainder[ 1..];  Some(byte) } }}\n That didn&#39;t help at all. I&#39;m still confused. Here&#39;s a hot tip that only Rust pros know: give your lifetime annotations descriptive names. Lets try again:\n struct  ByteIter&lt; &#39; remainder&gt; { remainder: &amp; &#39; remainder [ u8]} impl&lt; &#39; remainder&gt;  ByteIter&lt; &#39; remainder&gt; {  fn  next&lt; &#39; mut_self&gt;(&amp; &#39; mut_self  mut  self) -&gt;  Option&lt;&amp; &#39; mut_self  u8&gt; {  if  self.remainder. is_empty() {  None }  else {  let byte  =  &amp; self.remainder[ 0];  self.remainder  =  &amp; self.remainder[ 1..];  Some(byte) } }}\n Each returned byte is annotated with  &#39;mut_self but the bytes are clearly coming from  &#39;remainder! Lets fix it.\n struct  ByteIter&lt; &#39; remainder&gt; { remainder: &amp; &#39; remainder [ u8]} impl&lt; &#39; remainder&gt;  ByteIter&lt; &#39; remainder&gt; {  fn  next( &amp; mut  self) -&gt;  Option&lt;&amp; &#39; remainder  u8&gt; {  if  self.remainder. is_empty() {  None }  else {  let byte  =  &amp; self.remainder[ 0];  self.remainder  =  &amp; self.remainder[ 1..];  Some(byte) } }} fn  main() {  let  mut bytes  = ByteIter { remainder:  b&#34;1123&#34; };  let byte_1  = bytes. next();  let byte_2  = bytes. next(); std ::mem :: drop(bytes);  // we can even drop the iterator now!  if byte_1  == byte_2 {  // compiles  // do something }}\n Now that we look back on the previous version of our program it was obviously wrong, so why did Rust compile it? The answer is simple: it was memory safe.\n The Rust borrow checker only cares about the lifetime annotations in a program to the extent it can use them to statically verify the memory safety of the program. Rust will happily compile programs even if the lifetime annotations have semantic errors, and the consequence of this is that the program becomes unnecessarily restrictive.\n Here&#39;s a quick example that&#39;s the opposite of the previous example: Rust&#39;s lifetime elision rules happen to be semantically correct in this instance but we unintentionally write a very restrictive method with our own unnecessary explicit lifetime annotations.\n #[derive(Debug)] struct  NumRef&lt; &#39; a&gt;(&amp; &#39; a  i32); impl&lt; &#39; a&gt;  NumRef&lt; &#39; a&gt; {  // my struct is generic over &#39;a so that means I need to annotate  // my self parameters with &#39;a too, right? (answer: no, not right)  fn  some_method(&amp; &#39; a  mut  self) {}} fn  main() {  let  mut num_ref  =  NumRef( &amp; 5); num_ref. some_method();  // mutably borrows num_ref for the rest of its lifetime num_ref. some_method();  // compile error  println!( &#34;{:?}&#34;, num_ref);  // also compile error}\n If we have some struct generic over  &#39;a we almost never want to write a method with a  &amp;&#39;a mut self receiver. What we&#39;re communicating to Rust is &#34;this method will mutably borrow the struct for the entirety of the struct&#39;s lifetime&#34;. In practice this means Rust&#39;s borrow checker will only allow at most one call to  some_method before the struct becomes permanently mutably borrowed and thus unusable. The use-cases for this are extremely rare but the code above is very easy for confused beginners to write and it compiles. The fix is to not add unnecessary explicit lifetime annotations and let Rust&#39;s lifetime elision rules handle it:\n #[derive(Debug)] struct  NumRef&lt; &#39; a&gt;(&amp; &#39; a  i32); impl&lt; &#39; a&gt;  NumRef&lt; &#39; a&gt; {  // no more &#39;a on mut self  fn  some_method( &amp; mut  self) {}  // above line desugars to  fn  some_method_desugared&lt; &#39; b&gt;(&amp; &#39; b  mut  self){}} fn  main() {  let  mut num_ref  =  NumRef( &amp; 5); num_ref. some_method(); num_ref. some_method();  // compiles  println!( &#34;{:?}&#34;, num_ref);  // compiles}\n    Earlier we discussed Rust&#39;s lifetime elision rules  for functions. Rust also has lifetime elision rules for trait objects, which are:\n if a trait object is used as a type argument to a generic type then its life bound is inferred from the containing type if there&#39;s more than one bound from the containing type then an explicit bound must be specified\n if the above doesn&#39;t apply then if the trait is defined with a single lifetime bound then that bound is used\n  if the trait has no lifetime bounds then its lifetime is inferred in expressions and is  &#39;static outside of expressions\n All of that sounds super complicated but can be simply summarized as  &#34;a trait object&#39;s lifetime bound is inferred from context.&#34; After looking at a handful of examples we&#39;ll see the lifetime bound inferences are pretty intuitive so we don&#39;t have to memorize the formal rules:\n use std ::cell ::Ref; trait  Trait {} // elided type  T1 =  Box&lt; dyn Trait&gt;; // expanded, Box&lt;T&gt; has no lifetime bound on T, so inferred as &#39;static type  T2 =  Box&lt; dyn Trait +  &#39; static&gt;; // elided impl  dyn  Trait {} // expanded impl  dyn  Trait + &#39; static {} // elided type  T3&lt; &#39; a&gt; = &amp; &#39; a  dyn Trait; // expanded, &amp;&#39;a T requires T: &#39;a, so inferred as &#39;a type  T4&lt; &#39; a&gt; = &amp; &#39; a ( dyn Trait +  &#39; a); // elided type  T5&lt; &#39; a&gt; = Ref&lt; &#39; a,  dyn Trait&gt;; // expanded, Ref&lt;&#39;a, T&gt; requires T: &#39;a, so inferred as &#39;a type  T6&lt; &#39; a&gt; = Ref&lt; &#39; a,  dyn Trait +  &#39; a&gt;; trait  GenericTrait&lt; &#39; a&gt;: &#39;a {} // elided type  T7&lt; &#39; a&gt; =  Box&lt; dyn GenericTrait&lt; &#39; a&gt;&gt;; // expanded type  T8&lt; &#39; a&gt; =  Box&lt; dyn GenericTrait&lt; &#39; a&gt; +  &#39; a&gt;; // elided impl&lt; &#39; a&gt;  dyn  GenericTrait&lt; &#39; a&gt; {} // expanded impl&lt; &#39; a&gt;  dyn  GenericTrait&lt; &#39; a&gt; + &#39; a {}\n Concrete types which implement traits can have references and thus they also have lifetime bounds, and so their corresponding trait objects have lifetime bounds. Also you can implement traits directly for references which obviously have lifetime bounds:\n trait  Trait {} struct  Struct {} struct  Ref&lt; &#39; a, T&gt;(&amp; &#39; a T); impl  Trait  for  Struct {} impl  Trait  for  &amp; Struct {}  // impl Trait directly on a ref type impl&lt; &#39; a, T&gt;  Trait  for  Ref&lt; &#39; a, T&gt; {}  // impl Trait on a type containing refs\n Anyway, this is worth going over because it often confuses beginners when they refactor a function from using trait objects to generics or vice versa. Take this program for example:\n use std ::fmt ::Display; fn  dynamic_thread_print(t:  Box&lt; dyn Display +  Send&gt;) { std ::thread :: spawn( move  || {  println!( &#34;{}&#34;, t); }). join();} fn  static_thread_print&lt;T: Display +  Send&gt;(t: T) { std ::thread :: spawn( move  || {  println!( &#34;{}&#34;, t); }). join();}\n  error[E0310]: the parameter type `T` may not live long enough  -- &gt; src /lib.rs: 10: 5  | 9  |  fn  static_thread_print&lt;T: Display +  Send&gt;(t: T) {  |  -- help: consider adding an explicit lifetime bound...: `T:  &#39; static  +` 10  | std ::thread :: spawn( move  || {  |  ^^^^^^^^^^^^^^^^^^  |note: ...so that the type `[closure@src /lib.rs: 10: 24:  12: 6 t:T]` will meet its required lifetime bounds  -- &gt; src /lib.rs: 10: 5  | 10  | std ::thread :: spawn( move  || {  |  ^^^^^^^^^^^^^^^^^^\n Okay great, the compiler tells us how to fix the issue so lets fix the issue.\n use std ::fmt ::Display; fn  dynamic_thread_print(t:  Box&lt; dyn Display +  Send&gt;) { std ::thread :: spawn( move  || {  println!( &#34;{}&#34;, t); }). join();} fn  static_thread_print&lt;T: Display +  Send +  &#39; static&gt;(t: T) { std ::thread :: spawn( move  || {  println!( &#34;{}&#34;, t); }). join();}\n It compiles now but these two functions look awkward next to each other, why does the second function require a  &#3\n......", "posttime": "2020-05-23 15:14:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u5bff\u547d,\u7c7b\u578b", "title": "\u5e38\u89c1\u7684\u9508\u8680\u5bff\u547d\u8bef\u533a", "title_en": "Common Rust Lifetime Misconceptions", "transed": 1, "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md", "via": "", "real_tags": ["rust", "\u5bff\u547d", "\u7c7b\u578b"]}]