[{"category": "", "categoryclass": "", "imagename": "23b916b0168b4e4a9f6cc0747a20b0fb.png", "infoid": 1006035, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u8fd0\u884c\u8bb8\u591a\u540e\u7aef\u670d\u52a1\uff0c\u4e3a\u6211\u4eec\u7684\u5ba2\u6237\u63a7\u5236\u9762\u677f\u3001API\u548c\u6211\u4eec\u8fb9\u7f18\u53ef\u7528\u7684\u529f\u80fd\u63d0\u4f9b\u652f\u6301\u3002\u6211\u4eec\u62e5\u6709\u5e76\u8fd0\u8425\u540e\u7aef\u670d\u52a1\u7684\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u5728\u670d\u52a1\u4e4b\u95f4\u8def\u7531\u4efb\u610fTCP\u548cUDP\u6d41\u91cf\uff0c\u4e5f\u9700\u8981\u4ece\u8fd9\u4e9b\u6570\u636e\u4e2d\u5fc3\u5916\u90e8\u8def\u7531\u4efb\u610fTCP\u548cUDP\u6d41\u91cf\u3002\n\u4ee5\u524d\uff0c\u8fd9\u4e9b\u540e\u7aef\u670d\u52a1\u7684\u6240\u6709\u6d41\u91cf\u5728\u5230\u8fbe\u53ef\u7528\u5b9e\u4f8b\u4e4b\u524d\u90fd\u4f1a\u7ecf\u8fc7\u591a\u5c42\u6709\u72b6\u6001TCP\u4ee3\u7406\u548cNAT\u3002\u6b64\u89e3\u51b3\u65b9\u6848\u8fd0\u884c\u4e86\u51e0\u5e74\uff0c\u4f46\u968f\u7740\u6211\u4eec\u7684\u53d1\u5c55\uff0c\u5b83\u7ed9\u6211\u4eec\u7684\u670d\u52a1\u548c\u8fd0\u8425\u56e2\u961f\u5e26\u6765\u4e86\u8bb8\u591a\u95ee\u9898\u3002\u6211\u4eec\u7684\u670d\u52a1\u56e2\u961f\u9700\u8981\u5904\u7406\u53ef\u7528\u6027\u4e0b\u964d\u7684\u95ee\u9898\uff0c\u800c\u6211\u4eec\u7684\u8fd0\u8425\u56e2\u961f\u5728\u9700\u8981\u5bf9\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8fdb\u884c\u7ef4\u62a4\u65f6\u9700\u8981\u4ed8\u51fa\u5f88\u5927\u7684\u52aa\u529b\u3002\n\u8003\u8651\u5230\u6211\u4eec\u7684\u6709\u72b6\u6001TCP\u4ee3\u7406\u548cNAT\u89e3\u51b3\u65b9\u6848\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u76ee\u6807\u6765\u66ff\u4ee3\u8d1f\u8f7d\u5e73\u8861\u670d\u52a1\uff0c\u540c\u65f6\u4fdd\u7559\u5728\u6211\u4eec\u81ea\u5df1\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\uff1a\n\u901a\u8fc7\u5c06\u51b3\u7b56\u8def\u7531\u5230\u76ee\u7684\u670d\u52a1\u5668\u6765\u4fdd\u7559\u6e90IP\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u652f\u6301\u9700\u8981\u5ba2\u6237\u7aefIP\u5730\u5740\u4f5c\u4e3a\u5176\u64cd\u4f5c\u4e00\u90e8\u5206\u7684\u670d\u52a1\u5668\uff0c\u800c\u65e0\u9700X-Forwarded-For\u6807\u5934\u6216\u4ee3\u7406TCP\u6269\u5c55\u7b49\u53d8\u901a\u65b9\u6cd5\u3002\n\u652f\u6301\u540e\u7aef\u8de8\u591a\u4e2a\u673a\u67b6\u548c\u5b50\u7f51\u7684\u67b6\u6784\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u73b0\u6709\u7f51\u7edc\u8bbe\u5907\u65e0\u6cd5\u8def\u7531\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5141\u8bb8\u8fd0\u8425\u56e2\u961f\u5728\u96f6\u505c\u673a\u65f6\u95f4\u5185\u6267\u884c\u7ef4\u62a4\u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u968f\u65f6\u5220\u9664\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u670d\u52a1\u7684\u4efb\u4f55\u8fde\u63a5\u91cd\u7f6e\u6216\u505c\u673a\u3002\n\u4f7f\u7528\u5e38\u89c1\u4e14\u7ecf\u8fc7\u826f\u597d\u6d4b\u8bd5\u7684Linux\u5de5\u5177\u548c\u529f\u80fd\u3002Linux\u4e2d\u6709\u5f88\u591a\u975e\u5e38\u9177\u7684\u7f51\u7edc\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u8bd5\u9a8c\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4e3a\u90a3\u4e9b\u4e3b\u8981\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u64cd\u4f5c\u5458\u4f18\u5316\u4e00\u4e9b\u6700\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u7684\u884c\u4e3a\u3002\n\u8d1f\u8f7d\u5e73\u8861\u5668\u4e4b\u95f4\u6ca1\u6709\u663e\u5f0f\u8fde\u63a5\u540c\u6b65\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u663e\u8457\u589e\u52a0\u4e86\u7cfb\u7edf\u590d\u6742\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u51fa\u9519\u7684\u673a\u4f1a\u3002\n\u5141\u8bb8\u4ece\u5148\u524d\u7684\u8d1f\u8f7d\u5e73\u8861\u5668\u5b9e\u73b0\u5206\u9636\u6bb5\u90e8\u7f72\u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u5728\u4e24\u4e2a\u5b9e\u73b0\u4e4b\u95f4\u8fc1\u79fb\u7279\u5b9a\u670d\u52a1\u7684\u6d41\u91cf\uff0c\u4ee5\u53d1\u73b0\u95ee\u9898\u5e76\u83b7\u5f97\u5bf9\u7cfb\u7edf\u7684\u4fe1\u5fc3\u3002\n\u4ee5\u524d\uff0c\u5f53\u6d41\u91cf\u5230\u8fbe\u6211\u4eec\u7684\u540e\u7aef\u6570\u636e\u4e2d\u5fc3\u65f6\uff0c\u6211\u4eec\u7684\u8def\u7531\u5668\u4f1a\u6311\u9009\u6570\u636e\u5305\u5e76\u5c06\u5176\u8f6c\u53d1\u5230\u5b83\u6240\u77e5\u9053\u7684L4\u8d1f\u8f7d\u5747\u8861\u5668\u670d\u52a1\u5668\u4e4b\u4e00\u3002\u8fd9\u4e9bL4\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u786e\u5b9a\u6d41\u91cf\u7528\u4e8e\u4ec0\u4e48\u670d\u52a1\uff0c\u7136\u540e\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u670d\u52a1\u7684L7\u670d\u52a1\u5668\u4e4b\u4e00\u3002\n\u6b64\u67b6\u6784\u5728\u6b63\u5e38\u8fd0\u884c\u671f\u95f4\u8fd0\u884c\u826f\u597d\u3002\u4f46\u662f\uff0c\u53ea\u8981\u8d1f\u8f7d\u5e73\u8861\u5668\u96c6\u53d1\u751f\u66f4\u6539\uff0c\u95ee\u9898\u5c31\u4f1a\u5f88\u5feb\u6d6e\u51fa\u6c34\u9762\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u4f1a\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u65b0\u96c6\uff0c\u5e76\u4e14\u6d41\u91cf\u5f88\u53ef\u80fd\u4f1a\u5230\u8fbe\u4e0e\u4ee5\u524d\u4e0d\u540c\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u7531\u4e8e\u6bcf\u4e2a\u8d1f\u8f7d\u5e73\u8861\u5668\u7ef4\u62a4\u5176\u81ea\u5df1\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u56e0\u6b64\u5b83\u5c06\u65e0\u6cd5\u4e3a\u8fd9\u4e9b\u65b0\u7684\u6b63\u5728\u8fdb\u884c\u7684\u8fde\u63a5\u8f6c\u53d1\u6d41\u91cf\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u8fde\u63a5\u5c06\u88ab\u91cd\u7f6e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u6211\u4eec\u7684\u5ba2\u6237\u5e26\u6765\u9519\u8bef\u3002\n\u5728\u6b63\u5e38\u8fd0\u884c\u671f\u95f4\uff0c\u6211\u4eec\u7684\u65b0\u67b6\u6784\u5177\u6709\u4e0e\u4ee5\u524d\u8bbe\u8ba1\u7c7b\u4f3c\u7684\u884c\u4e3a\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u5c06\u9009\u62e9L4\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u7136\u540e\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u670d\u52a1\u7684L7\u670d\u52a1\u5668\u3002\n\u5f53\u8d1f\u8f7d\u5747\u8861\u5668\u96c6\u5408\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4f1a\u53d1\u751f\u91cd\u5927\u53d8\u5316\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u73b0\u5728\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u8def\u7531\u5668\u9009\u62e9\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u54ea\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u5e76\u4e0d\u91cd\u8981\uff0c\u5b83\u4eec\u6700\u7ec8\u5c06\u5230\u8fbe\u76f8\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\u3002\n\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u670d\u52a1\u5668\u4f7f\u7528BGP\u5411\u6570\u636e\u4e2d\u5fc3\u7684\u8def\u7531\u5668\u901a\u544a\u670d\u52a1IP\u5730\u5740\uff0c\u4e0e\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u76f8\u540c\u3002\u6211\u4eec\u7684\u8def\u7531\u5668\u6839\u636e\u4e00\u79cd\u79f0\u4e3a\u7b49\u4ef7\u591a\u8def\u5f84\u8def\u7531(ECMP)\u7684\u8def\u7531\u7b56\u7565\u6765\u9009\u62e9\u54ea\u4e9b\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u63a5\u6536\u6570\u636e\u5305\u3002\nECMP\u5bf9\u6570\u636e\u5305\u4e2d\u7684\u4fe1\u606f\u8fdb\u884c\u6563\u5217\u5904\u7406\uff0c\u4ee5\u9009\u62e9\u8be5\u6570\u636e\u5305\u7684\u8def\u5f84\u3002\u8def\u7531\u5668\u4f7f\u7528\u7684\u6563\u5217\u51fd\u6570\u901a\u5e38\u56fa\u5b9a\u5728\u56fa\u4ef6\u4e2d\u3002\u9009\u62e9\u4e0d\u826f\u6563\u5217\u51fd\u6570\u6216\u9009\u62e9\u4e0d\u826f\u8f93\u5165\u7684\u8def\u7531\u5668\u53ef\u80fd\u4f1a\u9020\u6210\u7f51\u7edc\u548c\u670d\u52a1\u5668\u8d1f\u8f7d\u5931\u8861\uff0c\u6216\u7834\u574f\u534f\u8bae\u5c42\u7684\u5047\u8bbe\u3002\n\u6211\u4eec\u4e0e\u7f51\u7edc\u56e2\u961f\u5408\u4f5c\uff0c\u786e\u4fdd\u5728\u6211\u4eec\u7684\u8def\u7531\u5668\u4e0a\u914d\u7f6eECMP\uff0c\u4f7f\u5176\u4ec5\u6839\u636e\u6570\u636e\u5305\u76845\u5143\u7ec4(\u534f\u8bae\u3001\u6e90\u5730\u5740\u548c\u7aef\u53e3\u4ee5\u53ca\u76ee\u7684\u5730\u5740\u548c\u7aef\u53e3)\u8fdb\u884c\u6563\u5217\u3002\n\u4e3a\u4e86\u8fdb\u884c\u7ef4\u62a4\uff0c\u6211\u4eec\u7684\u8fd0\u8425\u5546\u53ef\u4ee5\u64a4\u56deBGP\u4f1a\u8bdd\uff0c\u6d41\u91cf\u5c06\u900f\u660e\u5730\u8f6c\u79fb\u5230\u5176\u4ed6\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4f46\u662f\uff0c\u5982\u679c\u8d1f\u8f7d\u5e73\u8861\u5668\u7a81\u7136\u53d8\u5f97\u4e0d\u53ef\u7528(\u4f8b\u5982\u5185\u6838\u6b7b\u673a\u6216\u7535\u6e90\u6545\u969c)\uff0c\u5219\u5728BGP\u4fdd\u6301\u8fde\u63a5\u673a\u5236\u5931\u8d25\u548c\u8def\u7531\u5668\u7ec8\u6b62\u4f1a\u8bdd\u4e4b\u524d\u4f1a\u6709\u4e00\u6bb5\u77ed\u6682\u7684\u5ef6\u8fdf\u3002\n\u5728\u8def\u7531\u5668\u548c\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u4f7f\u7528\u53cc\u5411\u8f6c\u53d1\u68c0\u6d4b(BFD)\u534f\u8bae\uff0c\u8def\u7531\u5668\u53ef\u4ee5\u5728\u66f4\u77ed\u7684\u5ef6\u8fdf\u540e\u7ec8\u6b62BGP\u4f1a\u8bdd\u3002\u4e0d\u540c\u7684\u8def\u7531\u5668\u5bf9BFD\u6709\u4e0d\u540c\u7684\u9650\u5236\u548c\u9650\u5236\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5f88\u96be\u5728\u9891\u7e41\u4f7f\u7528L2\u94fe\u8def\u805a\u5408\u548cVXLAN\u7684\u73af\u5883\u4e2d\u4f7f\u7528\u3002\n\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u4e0e\u6211\u4eec\u7684\u7f51\u7edc\u56e2\u961f\u5408\u4f5c\uff0c\u4f7f\u7528\u4ed6\u4eec\u6700\u719f\u6089\u7684\u5de5\u5177\u548c\u914d\u7f6e\u6765\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u51cf\u5c11\u7ec8\u6b62BGP\u4f1a\u8bdd\u7684\u65f6\u95f4\u3002\n\u4e3a\u4e86\u786e\u4fdd\u6240\u6709\u8d1f\u8f7d\u5747\u8861\u5668\u90fd\u5c06\u6d41\u91cf\u53d1\u9001\u5230\u76f8\u540c\u7684\u540e\u7aef\uff0c\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528\u78c1\u60ac\u6d6e\u8fde\u63a5\u8c03\u5ea6\u5668\u3002MagLev\u662f\u4e00\u4e2a\u4e00\u81f4\u7684\u6563\u5217\u8c03\u5ea6\u5668\uff0c\u5b83\u5bf9\u6765\u81ea\u6bcf\u4e2a\u6570\u636e\u5305\u76845\u5143\u7ec4\u4fe1\u606f(\u534f\u8bae\u3001\u6e90\u5730\u5740\u548c\u7aef\u53e3\u4ee5\u53ca\u76ee\u7684\u5730\u5740\u548c\u7aef\u53e3)\u8fdb\u884c\u6563\u5217\uff0c\u4ee5\u786e\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u3002\n\u7531\u4e8e\u662f\u4e00\u81f4\u7684\u6563\u5217\uff0c\u6bcf\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u90fd\u4f1a\u4e3a\u6570\u636e\u5305\u9009\u62e9\u76f8\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u9700\u8981\u4fdd\u6301\u4efb\u4f55\u8fde\u63a5\u72b6\u6001\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u900f\u660e\u5730\u5728\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u95f4\u79fb\u52a8\u6d41\u91cf\uff0c\u800c\u4e0d\u9700\u8981\u5b83\u4eec\u4e4b\u95f4\u663e\u5f0f\u7684\u8fde\u63a5\u540c\u6b65\u3002\n\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u666e\u901a\u800c\u53ef\u9760\u7684Linux\u529f\u80fd\u3002\u81ea\u672c\u4e16\u7eaa\u521d\u4ee5\u6765\uff0cLinux\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7b2c4\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5373IP\u865a\u62df\u670d\u52a1\u5668(IPVS)\u3002IPVS\u4eceLinux4.18\u5f00\u59cb\u5c31\u652f\u6301\u78c1\u60ac\u6d6e\u8c03\u5ea6\u5668\u3002\n\u6211\u4eec\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u548c\u5e94\u7528\u670d\u52a1\u5668\u5206\u5e03\u5728\u591a\u4e2a\u673a\u67b6\u548c\u5b50\u7f51\u4e2d\u3002\u4e3a\u4e86\u8def\u7531\u6765\u81ea\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u6d41\u91cf\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528Foo-over-UDP\u5c01\u88c5\u3002\n\u5728foo-over-UDP\u5c01\u88c5\u4e2d\uff0c\u5728\u539f\u59cb\u6570\u636e\u5305\u5468\u56f4\u6dfb\u52a0\u65b0\u7684IP\u548cUDP\u62a5\u5934\u3002\u5f53\u8fd9\u4e9b\u6570\u636e\u5305\u5230\u8fbe\u76ee\u7684\u670d\u52a1\u5668\u65f6\uff0cLinux\u5185\u6838\u4f1a\u5220\u9664\u5916\u90e8IP\u548cUDP\u62a5\u5934\uff0c\u5e76\u5c06\u5185\u90e8\u6709\u6548\u8d1f\u8f7d\u91cd\u65b0\u63d2\u5165\u7f51\u7edc\u5806\u6808\u8fdb\u884c\u5904\u7406\uff0c\u5c31\u597d\u50cf\u6570\u636e\u5305\u6700\u521d\u662f\u5728\u8be5\u670d\u52a1\u5668\u4e0a\u63a5\u6536\u7684\u4e00\u6837\u3002\n\u4e0e\u5176\u4ed6\u5c01\u88c5\u65b9\u6cd5(\u5982IPIP\u3001GUE\u548cGeneve)\u76f8\u6bd4\uff0c\u6211\u4eec\u89c9\u5f97Foo-over-UDP\u5728\u529f\u80fd\u548c\u7075\u6d3b\u6027\u4e4b\u95f4\u53d6\u5f97\u4e86\u5f88\u597d\u7684\u5e73\u8861\u3002\u76f4\u63a5\u670d\u52a1\u5668\u8fd4\u56de(\u5176\u4e2d\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u76f4\u63a5\u56de\u590d\u5ba2\u6237\u7aef\u5e76\u7ed5\u8fc7\u8d1f\u8f7d\u5747\u8861\u5668)\u4f5c\u4e3a\u5c01\u88c5\u7684\u526f\u4ea7\u54c1\u5b9e\u73b0\u3002\u6ca1\u6709\u4e0e\u5c01\u88c5\u76f8\u5173\u8054\u7684\u72b6\u6001\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u53ea\u9700\u8981\u4e00\u4e2a\u5c01\u88c5\u63a5\u53e3\u5373\u53ef\u4ece\u6240\u6709\u8d1f\u8f7d\u5e73\u8861\u5668\u63a5\u6536\u6d41\u91cf\u3002\n#\u52a0\u8f7dIPV\u548cFOU\u6240\u9700\u7684\u5185\u6838\u6a21\u5757\u3002$modProbe IP_VS&amp\uff1b&amp\uff1bmodProbe IP_VS_mh&amp\uff1b&amp\uff1bmodProbe Fou#\u5728\u8d1f\u8f7d\u5747\u8861\u5668\u548c#\u4e00\u4e2a\u5e94\u7528\u670d\u52a1\u5668\u4e4b\u95f4\u521b\u5efa\u4e00\u6761\u96a7\u9053\u3002IP\u5c31\u662f\u673a\u5668&#39\uff1b#\u7f51\u7edc\u4e0a\u7684\u771f\u5b9eIP\u3002$IP link add name lbtun1 type ipip\\remote 192.0.2.1 local 192.0.2.2 ttl 2\\encap fou encap-SPORT auto encap-dport 5555#\u901a\u77e5\u5185\u6838\u6709\u5173\u53ef\u80fd\u5728\u6b64\u5904\u901a\u544a\u7684VIP\u7684\u4fe1\u606f\u3002$IP route add table local local 198.51.100.0/24\\dev lo proto kernel#\u4e3a\u96a7\u9053\u63d0\u4f9b\u6b64\u8ba1\u7b97\u673a\u672c\u5730\u7684IP\u5730\u5740\u3002#\u6b64\u8ba1\u7b97\u673a\u4e0a\u53d1\u5f80\u6b64IP\u5730\u5740\u7684\u901a\u4fe1\u5c06#\u6cbf\u96a7\u9053\u5411\u4e0b\u53d1\u9001\u3002\u5e76\u4e14\u5b83\u5e94\u8be5\u4f7f\u7528#MagLev\u8c03\u5ea6\u7a0b\u5e8f\u3002$ipvsadm-A-t 198.51.100.1\uff1a80-s mh#\u544a\u8bc9IPV\u6b64\u670d\u52a1\u7684\u540e\u7aef\u3002$ipvsadm-a-t 198.51.100.1\uff1a80-r 203.0.113.1\uff1a80\u3002\n#\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u3002$modproto fou#\u8bbe\u7f6eIPIP\u63a5\u6536\u5668\u3002#ipproto 4=IPIP(\u4e0d\u662fIPv4)$ip for add port 5555 ipproto 4#\u542f\u52a8\u96a7\u9053\u3002$ip link set dev tunl0 up#\u5728\u96a7\u9053\u63a5\u53e3\u4e0a\u7981\u7528\u53cd\u5411\u8def\u5f84\u7b5b\u9009\u3002$sysctl-w net.ipv4.conf.tunl0.rp_filter=0$sysctl-w net.ipv4.conf.all.rp_filter=0\u3002\nIPVS\u4e0d\u652f\u6301\u5c06\u57fa\u4e8eUDP\u7684Foo-over-UDP\u4f5c\u4e3a\u6570\u636e\u5305\u8f6c\u53d1\u65b9\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u9650\u5236\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u865a\u62df\u63a5\u53e3\u6765\u5b9e\u73b0foo-over-UDP\u5c01\u88c5\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528IPVS\u7684\u76f4\u63a5\u6570\u636e\u5305\u8f6c\u53d1\u65b9\u6cd5\u548c\u5185\u6838\u8def\u7531\u8868\u6765\u9009\u62e9\u7279\u5b9a\u7684\u63a5\u53e3\u3002\nLinux\u901a\u5e38\u88ab\u914d\u7f6e\u4e3a\u5ffd\u7565\u5230\u8fbe\u4e0e\u7528\u4e8e\u5e94\u7b54\u7684\u63a5\u53e3\u4e0d\u540c\u7684\u63a5\u53e3\u7684\u6570\u636e\u5305\u3002\u7531\u4e8e\u6570\u636e\u5305\u73b0\u5728\u5c06\u5230\u8fbe\u865a\u62dfTunl0&34\uff1b\u63a5\u53e3\uff0c\u6211\u4eec\u9700\u8981\u5728\u6b64\u63a5\u53e3\u4e0a\u7981\u7528\u53cd\u5411\u8def\u5f84\u8fc7\u6ee4\u3002\u5185\u6838\u4f7f\u7528\u547d\u540d\u63a5\u53e3\u548c\u6240\u6709\u63a5\u53e3\u4e2d\u8f83\u9ad8\u7684\u503c\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u51cf\u5c11&#34\uff1b\u6240\u6709&#34\uff1b\u5e76\u8c03\u6574\u5176\u4ed6\u63a5\u53e3\u3002\n\u6211\u4eec\u4ece\u4e92\u8054\u7f51\u63a5\u53d7\u7684\u6700\u5927IPv4\u6570\u636e\u5305\u5927\u5c0f\u6216\u6700\u5927\u4f20\u8f93\u5355\u4f4d(MTU)\u662f1500\u5b57\u8282\u3002\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u5728\u5c01\u88c5\u671f\u95f4\u4e0d\u4f1a\u5bf9\u8fd9\u4e9b\u6570\u636e\u5305\u8fdb\u884c\u5206\u6bb5\uff0c\u6211\u4eec\u5c06\u5185\u90e8MTU\u4ece\u9ed8\u8ba4\u503c\u589e\u52a0\uff0c\u4ee5\u9002\u5e94IP\u548cUDP\u62a5\u5934\u3002\n\u56e2\u961f\u4f4e\u4f30\u4e86\u5728\u6211\u4eec\u6240\u6709\u7684\u8bbe\u5907\u673a\u67b6\u4e0a\u66f4\u6362MTU\u7684\u590d\u6742\u6027\u3002\u6211\u4eec\u5fc5\u987b\u8c03\u6574\u6240\u6709\u8def\u7531\u5668\u548c\u4ea4\u6362\u673a\u7684MTU\uff0c\u8c03\u6574\u7ed1\u5b9a\u548cVXLAN\u63a5\u53e3\u7684MTU\uff0c\u6700\u540e\u8c03\u6574\u6211\u4eec\u7684FOO-Over-UDP\u5c01\u88c5\u3002\u5373\u4f7f\u7ecf\u8fc7\u7cbe\u5fc3\u7b56\u5212\u7684\u63a8\u5e7f\uff0c\u6211\u4eec\u4ecd\u7136\u53d1\u73b0\u4e86\u4ea4\u6362\u673a\u548c\u670d\u52a1\u5668\u5806\u6808\u4e2d\u4e0eMTU\u76f8\u5173\u7684\u9519\u8bef\uff0c\u5176\u4e2d\u8bb8\u591a\u9519\u8bef\u9996\u5148\u8868\u73b0\u4e3a\u7f51\u7edc\u5176\u4ed6\u90e8\u5206\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u8fd0\u884c\u5728\u6bcf\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u4e0a\u7684GO\u4ee3\u7406\uff0c\u5b83\u4e0e\u8ddf\u8e2a\u670d\u52a1\u4f4d\u7f6e\u7684\u63a7\u5236\u5e73\u9762\u5c42\u540c\u6b65\u3002\u7136\u540e\uff0c\u4ee3\u7406\u6839\u636e\u6d3b\u52a8\u670d\u52a1\u548c\u53ef\u7528\u7684\u540e\u7aef\u670d\u52a1\u5668\u914d\u7f6e\u7cfb\u7edf\u3002\n\u4e3a\u4e86\u914d\u7f6eIPV\u548c\u8def\u7531\u8868\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u57fa\u4e8eNetLink Go\u5305\u6784\u5efa\u7684\u5305\u3002\u6211\u4eec\u91cd\u65b0\u5f00\u6e90\u4e86\u6211\u4eec\u4eca\u5929\u6784\u5efa\u7684IPVS NetLink\u5305\uff0c\u5b83\u652f\u6301\u67e5\u8be2\u3001\u521b\u5efa\u548c\u66f4\u65b0IPVS\u865a\u62df\u670d\u52a1\u5668\u3001\u76ee\u7684\u5730\u548c\u7edf\u8ba1\u6570\u636e\u3002\n\u4e0d\u5e78\u7684\u662f\uff0ciptables\u6ca1\u6709\u6b63\u5f0f\u7684\u7f16\u7a0b\u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u6539\u4e3a\u6267\u884ciptables\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4ee3\u7406\u8ba1\u7b97\u4e00\u7ec4\u7406\u60f3\u7684iptables\u94fe\u548c\u89c4\u5219\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u6d3b\u52a8\u89c4\u5219\u8fdb\u884c\u534f\u8c03\u3002\n*filter-A input-d 198.51.100.0/24-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1anhAi5v93jwQYcJuK&#34\uff1b-j LEIFR-LB-A LEIFR-LB-d 198.51.100.1/32-p TCP-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1aG4qtNUVFCkLCu4yt&#34\uff1b-m multiport-dports 80-j Leiport\u3002-j Accept-A Leiur-GQ4OKHRLCJYOWIN9-s 172.16.0.0/12-m COMMENT--COMMENT\\&#34\uff1bLEIF\uff1a0XxZ2OwlQWzIYFTD&#34\uff1b-j Accept\u3002\n\u89c4\u5219\u7684iptables\u8f93\u51fa\u53ef\u80fd\u4e0e\u7406\u60f3\u89c4\u5219\u63d0\u4f9b\u7684\u8f93\u5165\u6709\u5f88\u5927\u4e0d\u540c\u3002\u4e3a\u4e86\u907f\u514d\u5728\u6bd4\u8f83\u4e2d\u89e3\u6790\u6574\u4e2aiptables\u89c4\u5219\uff0c\u6211\u4eec\u5c06\u89c4\u5219\u7684\u6563\u5217(\u5305\u62ec\u94fe\u4e2d\u7684\u4f4d\u7f6e)\u5b58\u50a8\u4e3aiptables\u6ce8\u91ca\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6ce8\u91ca\u4e0e\u7406\u60f3\u89c4\u5219\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u9700\u8981\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\u3002\u5728\u5171\u4eab\u7684\u94fe(\u5982\u8f93\u5165)\u4e0a\uff0c\u4ee3\u7406\u5ffd\u7565\u975e\u6258\u7ba1\u89c4\u5219\u3002\n\u6211\u4eec\u4f7f\u7528\u8fd9\u91cc\u4ecb\u7ecd\u7684\u7f51\u7edc\u8d1f\u8f7d\u5747\u8861\u4f5c\u4e3aKubernetes\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u63a7\u5236\u5668\u4e3a\u8bf7\u6c42\u8d1f\u8f7d\u5747\u8861IP\u7684Kubernetes\u670d\u52a1\u5206\u914d\u865a\u62dfIP\u5730\u5740\u3002\u8fd9\u4e9bIP\u7531\u4ee3\u7406\u5728IPVS\u4e2d\u914d\u7f6e\u3002\u6d41\u91cf\u5c06\u5b9a\u5411\u5230\u7fa4\u96c6\u8282\u70b9\u7684\u5b50\u96c6\uff0c\u7531Kube-Proxy\u5904\u7406\uff0c\u9664\u975e\u5916\u90e8\u6d41\u91cf\u7b56\u7565\u8bbe\u7f6e\u4e3a&#34\uff1bLocal&#34\uff1b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d41\u91cf\u5c06\u53d1\u9001\u5230\u8fd0\u884c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7279\u5b9a\u540e\u7aef\u3002\n\u8fd9\u5141\u8bb8\u6211\u4eec\u62e5\u6709\u5185\u90e8Kubernetes\u96c6\u7fa4\uff0c\u66f4\u597d\u5730\u590d\u5236\u4e91\u63d0\u4f9b\u5546\u4e0a\u6258\u7ba1\u96c6\u7fa4\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u884c\u4e3a\u3002\u8fd0\u884cKubernetes\u7684\u670d\u52a1(\u5982\u5165\u53e3\u63a7\u5236\u5668\u3001API\u7f51\u5173\u548c\u6570\u636e\u5e93)\u53ef\u4ee5\u8bbf\u95ee\u8d1f\u8f7d\u5747\u8861\u6d41\u91cf\u7684\u6b63\u786e\u5ba2\u6237\u7aefIP\u5730\u5740\u3002\n\u7ee7\u7eed\u5bc6\u5207\u5173\u6ce8IPV\u548c\u66ff\u4ee3\u65b9\u6848\u7684\u672a\u6765\u53d1\u5c55\uff0c\u5305\u62ecnftlb\u548cExpress data path(XDP)\u4ee5\u53caeBPF\u3002\n\u8fc1\u79fb\u5230nftables\u3002\u5355\u4e00\u7684\u4f18\u5148\u7ea7\u548c\u7f3a\u4e4fiptables\u7684\u53ef\u7f16\u7a0b\u63a5\u53e3\u4f7f\u5f97\u5b83\u4e0d\u9002\u5408\u5c06\u81ea\u52a8\u89c4\u5219\u4e0e\u64cd\u4f5c\u5458\u6dfb\u52a0\u7684\u89c4\u5219\u4e00\u8d77\u5305\u542b\u3002\u6211\u4eec\u5e0c\u671b\u968f\u7740\u66f4\u591a\u7684\u9879\u76ee\u548c\u8fd0\u8425\u8f6c\u79fb\u5230nftable\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5728\u4e0d\u9020\u6210\u8fd0\u8425\u76f2\u70b9\u7684\u60c5\u51b5\u4e0b\u5207\u6362\u5230nftable\u3002\n\u7531\u4e8eBGP\u4fdd\u7559\u8ba1\u65f6\u5668\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u6545\u969c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e34\u65f6\u4e2d\u65ad\u3002\u6211\u4eec\u5e0c\u671b\u6539\u8fdb\u6211\u4eec\u5904\u7406BGP\u4f1a\u8bdd\u6545\u969c\u7684\u65b9\u5f0f\u3002\n\u7814\u7a76\u4f7f\u7528\u8f7b\u91cf\u7ea7\u96a7\u9053\u6765\u51cf\u5c11\u8d1f\u8f7d\u5747\u8861\u5668\u8282\u70b9\u4e0a\u9700\u8981\u7684foo-over-UDP\u63a5\u53e3\u6570\u3002\n\u4f7f\u7528Linux\u5b9e\u73b0\u591a\u5c42\u8d1f\u8f7d\u5747\u8861\u3002\u6587\u68ee\u7279\u00b7\u4f2f\u7eb3\u7279(2018)\u3002\u63cf\u8ff0\u4f7f\u7528IPVS\u548cIPIP\u7684\u7f51\u7edc\u8d1f\u8f7d\u5e73\u8861\u5668\u3002\n\u4ecb\u7ecdGitHub\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4e54\u00b7\u5a01\u5ec9\u59c6\u65af\uff0c\u897f\u5965\u00b7\u6731\u5229\u5b89(2017)\u3002\u63cf\u8ff0\u4e86\u7c7b\u4f3c\u7684\u62c6\u5206\u7b2c4\u5c42\u548c\u7b2c7\u5c42\u67b6\u6784\uff0c\u4f7f\u7528\u4e00\u81f4\u7684\u54c8\u5e0c\u548cUDP\u4e0a\u7684Foo-over-UDP\u3002\u4ed6\u4eec\u4f3c\u4e4e\u5bf9IPV\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u4e9b\u9650\u5236\u4f3c\u4e4e\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\nFOO OVER UDP\u3002\u4e54\u7eb3\u68ee\u00b7\u79d1\u6bd4\u7279(2014)\u3002\u63cf\u8ff0IPIP\u548c\u5f53\u65f6\u521a\u521a\u4ecb\u7ecd\u7684foo-over-UDP\u7684\u57fa\u7840\u77e5\u8bc6\u3002\nUDP\u5c01\u88c5\u3001FOU\u3001GUE\u548cRCO\u3002\u6c64\u59c6\u00b7\u8d6b\u4f2f\u7279(2015)\u3002\u4ecb\u7ecd\u4e0d\u540c\u7684UDP\u5c01\u88c5\u9009\u9879\u3002\nBFD(\u53cc\u5411\u8f6c\u53d1\u68c0\u6d4b)\uff1a\u6709\u6548\u5417\uff1f\u503c\u5f97\u5417\uff1f\u6c64\u59c6\u5b66\u6821(2009)\u3002\u8ba8\u8bba\u4f7f\u7528\u901a\u7528\u534f\u8bae\u7684BFD\uff0c\u4ee5\u53ca\u5b83\u5728\u54ea\u91cc\u4f1a\u6210\u4e3a\u95ee\u9898\u3002\n\u8d1f\u8f7d\u5e73\u8861\u78c1\u60ac\u6d6e\u53ef\u7528\u6027", "note_en": "We run many backend services that power our customer dashboard, APIs, and features available at our edge. We own and operate physical infrastructure for our backend services. We need an effective way to route arbitrary TCP and UDP traffic between services and also from outside these data centers.\n Previously, all traffic for these backend services would pass through several layers of stateful TCP proxies and NATs before reaching an available instance. This solution worked for several years, but as we grew it caused our service and operations teams many issues. Our service teams needed to deal with drops of availability, and our operations teams had much toil when needing to do maintenance on load balancer servers.\n  With the experience with our stateful TCP proxy and NAT solutions in mind, we had several goals for a replacement load balancing service, while remaining on our own infrastructure:\n Preserve source IPs through routing decisions to destination servers. This allows us to support servers that require client IP addresses as part of their operation, without workarounds such as X-Forwarded-For headers or the PROXY TCP extension.\n Support an architecture where backends are located across many racks and subnets. This prevents solutions that cannot be routed by existing network equipment.\n Allow operation teams to perform maintenance with zero downtime. We should be able to remove load balancers at any time without causing any connection resets or downtime for services.\n Use Linux tools and features that are commonplace and well-tested. There are a lot of very cool networking features in Linux we could experiment with, but we wanted to optimize for least surprising behavior for operators who do not primarily work with these load balancers.\n No explicit connection synchronization between load balancers. We found that communication between load balancers significantly increased the system complexity, allowing for more opportunities for things to go wrong.\n Allow for staged rollout from the previous load balancer implementation. We should be able to migrate the traffic of specific services between the two implementations to find issues and gain confidence in the system.\n    Previously, when traffic arrived at our backend data centers, our routers would pick and forward packets to one of the L4 load balancers servers it knew about. \u00a0These L4 load balancers would determine what service the traffic was for, then forward the traffic to one of the service&#39;s L7 servers.\n This architecture worked fine during normal operations. However, issues would quickly surface whenever the set of load balancers changed. Our routers would forward traffic to the new set and it was very likely traffic would arrive to a different load balancer than before. As each load balancer maintained its own connection state, it would be unable to forward \u00a0traffic for these new in-progress connections. These connections would then be reset, potentially causing errors for our customers.\n   During normal operations, our new architecture has similar behavior to the previous design. A L4 load balancer would be selected by our routers, which would then forward traffic to a service&#39;s L7 server.\n There&#39;s a significant change when the set of load balancers changes. As our load balancers are now stateless, it doesn&#39;t matter which load balancer our router selects to forward traffic to, they&#39;ll end up reaching the same backend server.\n   Our load balancer servers announce service IP addresses to our data centers\u2019 routers using BGP, unchanged from the previous solution. Our routers choose which load balancers will receive packets based on a routing strategy called equal-cost multi-path routing (ECMP).\n ECMP hashes information from packets to pick a path for that packet. The hash function used by routers is often fixed in firmware. Routers that chose a poor hashing function, or chose bad inputs, can create unbalanced network and server load, or break assumptions made by the protocol layer.\n We worked with our networking team to ensure ECMP is configured on our routers to hash only based on the packet&#39;s 5-tuple\u2014the protocol, source address and port, and destination address and port.\n For maintenance, our operators can withdraw the BGP session and traffic will transparently shift to other load balancers. However, if a load balancer suddenly becomes unavailable, such as with a kernel panic or power failure, there is a short delay before the BGP keepalive mechanism fails and routers terminate the session.\n It&#39;s possible for routers to terminate BGP sessions after a much shorter delay using the Bidirectional Forwarding Detection (BFD) protocol between the router and load balancers. Different routers have different limitations and restrictions on BFD that makes it difficult to use in an environment heavily using L2 link aggregation and VXLANs.\n We&#39;re continuing to work with our networking team to find solutions to reduce the time to terminate BGP sessions, using tools and configurations they&#39;re most comfortable with.\n  To ensure all load balancers are sending traffic to the same backends, we decided to use the  Maglev connection scheduler. Maglev is a consistent hash scheduler hashing a 5-tuple of information from each packet\u2014the protocol, source address and port, and destination address and port\u2014to determine a backend server.\n By being a consistent hash, the same backend server is chosen by every load balancer for a packet without needing to persist any connection state. This allows us to transparently move traffic between load balancers without requiring explicit connection synchronization between them.\n  Where possible, we wanted to use commonplace and reliable Linux features. Linux has implemented a powerful layer 4 load balancer, the IP Virtual Server (IPVS), since the early 2000s. IPVS has supported the Maglev scheduler  since Linux 4.18.\n  Our load balancer and application servers are spread across multiple racks and subnets. To route traffic from the load balancer we opted to use Foo-Over-UDP encapsulation.\n In Foo-Over-UDP encapsulation a new IP and UDP header are added around the original packet. When these packets arrive on the destination server, the Linux kernel removes the outer IP and UDP headers and inserts the inner payload back into the networking stack for processing as if the packet had originally been received on that server.\n Compared to other encapsulation methods\u2014such as IPIP, GUE, and GENEVE\u2014we felt Foo-Over-UDP struck a nice balance between features and flexibility. Direct Server Return, where application servers reply directly to clients and bypass the load balancers, was implemented as a byproduct of the encapsulation. There was no state associated with the encapsulation, each server only required one encapsulation interface to receive traffic from all load balancers.\n  # Load in the kernel modules required for IPVS and FOU.$ modprobe ip_vs &amp;&amp; modprobe ip_vs_mh &amp;&amp; modprobe fou# Create one tunnel between the load balancer and# an application server. The IPs are the machines&#39;# real IPs on the network.$ ip link add name lbtun1 type ipip \\remote 192.0.2.1 local 192.0.2.2 ttl 2 \\encap fou encap-sport auto encap-dport 5555# Inform the kernel about the VIPs that might be announced here.$ ip route add table local local 198.51.100.0/24 \\dev lo proto kernel# Give the tunnel an IP address local to this machine.# Traffic on this machine destined for this IP address will# be sent down the tunnel.$ ip route add 203.0.113.1 dev lbtun1 scope link# Tell IPVS about the service, and that it should use the# Maglev scheduler.$ ipvsadm -A -t 198.51.100.1:80 -s mh# Tell IPVS about a backend for this service.$ ipvsadm -a -t 198.51.100.1:80 -r 203.0.113.1:80\n  # The kernel module may need to be loaded.$ modprobe fou# Setup an IPIP receiver.# ipproto 4 = IPIP (not IPv4)$ ip fou add port 5555 ipproto 4# Bring up the tunnel.$ ip link set dev tunl0 up# Disable reverse path filtering on tunnel interface.$ sysctl -w net.ipv4.conf.tunl0.rp_filter=0$ sysctl -w net.ipv4.conf.all.rp_filter=0\n IPVS does not support Foo-Over-UDP as a packet forwarding method. To work around this limitation, we&#39;ve created virtual interfaces that implement Foo-Over-UDP encapsulation. We can then use IPVS&#39;s direct packet forwarding method along with the kernel routing table to choose a specific interface.\n Linux is often configured to ignore packets that arrive on an interface that is different from the interface used for replies. As packets will now be arriving on the virtual &#34;tunl0&#34; interface, we need to disable reverse path filtering on this interface. The kernel uses the higher value of the named and &#34;all&#34; interfaces, so you may need to decrease &#34;all&#34; and adjust other interfaces.\n  The maximum IPv4 packet size, or maximum transmission unit (MTU), we accept from the internet is 1500 bytes. To ensure we did not fragment these packets during encapsulation we increased our internal MTUs from the default to accommodate the IP and UDP headers.\n The team had underestimated the complexity of changing the MTU across all our racks of equipment. We had to adjust the MTU across all our routers and switches, of our bonded and VXLAN interfaces, and finally our Foo-Over-UDP encapsulation. Even with a carefully orchestrated rollout, and we still uncovered MTU-related bugs with our switches and server stack, many of which manifested first as issues on other parts of the network.\n  We&#39;ve written a Go agent running on each load balancer that synchronizes with a control plane layer that&#39;s tracking the location of services. The agent then configures the system based on active services and available backend servers.\n To configure IPVS and the routing table we&#39;re using packages built upon the  netlink Go package. We&#39;re open sourcing the IPVS netlink package we built today, which supports querying, creating and updating IPVS virtual servers, destinations, and statistics.\n Unfortunately, there is no official programming interface for iptables, so we must instead execute the iptables binary. The agent computes an ideal set of iptables chains and rules, which is then reconciled with the live rules.\n  *filter-A INPUT -d 198.51.100.0/24 -m comment --comment \\&#34;leif:nhAi5v93jwQYcJuK&#34; -j LEIFUR-LB-A LEIFUR-LB -d 198.51.100.1/32 -p tcp -m comment --comment \\&#34;leif:G4qtNUVFCkLCu4yt&#34; -m multiport --dports 80 -j LEIFUR-GQ4OKHRLCJYOWIN9-A LEIFUR-GQ4OKHRLCJYOWIN9 -s 10.0.0.0/8 -m comment --comment \\&#34;leif:G4qtNUVFCkLCu4yt&#34; -j ACCEPT-A LEIFUR-GQ4OKHRLCJYOWIN9 -s 172.16.0.0/12 -m comment --comment \\&#34;leif:0XxZ2OwlQWzIYFTD&#34; -j ACCEPT\n The iptables output of a rule may differ significantly from the input given by our ideal rule. To avoid needing to parse the entire iptables rule in our comparisons, we store a hash of the rule, including the position in the chain, as an iptables comment. We then can compare the comment to our ideal rule to determine if we need to take any actions. On chains that are shared (such as INPUT) the agent ignores unmanaged rules.\n  We use the network load balancer described here as a cloud load balancer for Kubernetes. A controller assigns virtual IP addresses to Kubernetes services requesting a load balancer IP. These IPs get configured by the agent in IPVS. Traffic is directed to a subset of cluster nodes for handling by kube-proxy, unless the External Traffic Policy is set to &#34;Local&#34; in which case the traffic is sent to the specific backends the workloads are running on.\n This allows us to have internal Kubernetes clusters that better replicate the load balancer behavior of managed clusters on cloud providers. Services running Kubernetes, such as ingress controllers, API gateways, and databases, have access to correct client IP addresses of load balanced traffic.\n  Continuing a close eye on future developments of IPVS and alternatives, including nftlb and Express Data Path (XDP) and eBPF.\n Migrate to nftables. The &#34;flat priorities&#34; and lack of programmable interface for iptables makes it ill-suited for including automated rules alongside rules added by operators. We hope as more projects and operations move to nftables we&#39;ll be able to switch without creating a &#34;blind-spot&#34; to operations.\n Failures of a load balancer can result in temporary outages due to BGP hold timers. We&#39;d like to improve how we&#39;re handling the failures with BGP sessions.\n Investigate using Lightweight Tunnels to reduce the number of Foo-Over-UDP interfaces are needed on the load balancer nodes.\n  Multi-tier load-balancing with Linux. Vincent Bernat (2018). Describes a network load balancer using IPVS and IPIP.\n Introducing the GitHub Load Balancer. Joe Williams, Theo Julienne (2017). Describes a similar split layer 4 and layer 7 architecture, using consistent hashing and Foo-Over-UDP. They seemed to have limitations with IPVS that looked to have been resolved.\n Foo over UDP. Jonathan Corbet (2014). Describes the basics of IPIP and Foo-Over-UDP, which was just introduced at the time.\n UDP encapsulation, FOU, GUE, &amp; RCO. Tom Herbert (2015). Describes the different UDP encapsulation options.\n  BFD (Bidirectional Forwarding Detection): Does it work and is it worth it?. Tom School (2009). Discussion on BFD with common protocols and where it can become a problem.\n  Load Balancing  Maglev  Availability", "posttime": "2020-06-11 01:05:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u78c1\u60ac\u6d6e,availability", "title": "\u91c7\u7528\u78c1\u60ac\u6d6e\u6280\u672f\u7684\u9ad8\u53ef\u7528\u6027\u8d1f\u8f7d\u5747\u8861\u5668", "title_en": "High Availability Load Balancers with Maglev", "transed": 1, "url": "https://blog.cloudflare.com/high-availability-load-balancers-with-maglev/", "via": "", "real_tags": ["\u78c1\u60ac\u6d6e"]}, {"category": "", "categoryclass": "", "imagename": "064216e2a2ce474d4f90d4d4d5add6fc.png", "infoid": 1006034, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u5bf9\u4e8eDART\u56e2\u961f\u6765\u8bf4\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u96f6\u5b89\u5168\u5de5\u4f5c\u7684\u6280\u672f\u9884\u89c8\u3002\u7a7a\u5b89\u5168\u6027\u53ef\u4ee5\u5e2e\u52a9\u60a8\u907f\u514d\u4e00\u7c7b\u901a\u5e38\u5f88\u96be\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u4f5c\u4e3a\u4e00\u4e2a\u989d\u5916\u7684\u597d\u5904\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4e00\u7cfb\u5217\u6027\u80fd\u6539\u8fdb\u3002\u6211\u4eec\u73b0\u5728\u53d1\u5e03\u65e9\u671f\u7684\u6280\u672f\u9884\u89c8\uff0c\u6211\u4eec\u671f\u5f85\u60a8\u7684\u53cd\u9988\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86DART\u56e2\u961f\u63a8\u51fa\u96f6\u5b89\u5168\u7684\u8ba1\u5212\u3002\u5b83\u8fd8\u89e3\u91ca\u4e86\u6211\u4eec\u6240\u8bf4\u7684\u58f0\u97f3\u7a7a\u5b89\u5168\u6027\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u540c\u4e8e\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u91c7\u7528\u7684\u65b9\u6cd5\u3002\nDART\u662f\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u8bed\u8a00\u3002\u8fd9\u610f\u5473\u7740\u5f53\u60a8\u83b7\u5f97\u67d0\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u5c5e\u4e8e\u8be5\u7c7b\u578b\u3002\u4f46\u662f\u7c7b\u578b\u5b89\u5168\u672c\u8eab\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u3002\n\u7a7a\u9519\u8bef\u975e\u5e38\u5e38\u89c1\u3002\u5728GitHub\u4e0a\u641c\u7d22\u4f1a\u53d1\u73b0\u6570\u5343\u4e2a\u7531DART\u4ee3\u7801\u4e2d\u7684\u7a7a\u503c\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u751a\u81f3\u8fd8\u6709\u6570\u5343\u4e2a\u63d0\u4ea4\u8bd5\u56fe\u4fee\u590d\u8fd9\u4e9b\u95ee\u9898\u3002\n\u5c1d\u8bd5\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u53d1\u73b0\u53ef\u7a7a\u6027\u95ee\u9898\uff1a\n\u5982\u679c\u4f7f\u7528NULL\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u80af\u5b9a\u4f1a\u5931\u8d25\uff0c\u4f46\u8fd8\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\u9700\u8981\u8003\u8651\uff1a\nvoid main(){//\u9519\u8bef\u60c5\u51b51\uff1a\u5c06NULL\u4f20\u9012\u7ed9\u6587\u4ef6\u3002printLengths(Null)\uff1b//\u9519\u8bef\u60c5\u51b52\uff1a\u4f20\u9012\u6587\u4ef6\u5217\u8868\uff0c\u5305\u542bnull\u9879\u3002printLengths([File(&#39\uff1bfilename1&#39\uff1b)\uff0cFile(&#39\uff1bfilename2&#39\uff1b)\uff0cnull])\uff1b}\u3002\n\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\uff0c\u60a8\u53ef\u4ee5\u66f4\u6709\u4fe1\u5fc3\u5730\u5bf9\u4ee3\u7801\u8fdb\u884c\u63a8\u7406\u3002\u4e0d\u518d\u51fa\u73b0\u4ee4\u4eba\u8ba8\u538c\u7684\u8fd0\u884c\u65f6\u7a7a\u53d6\u6d88\u5f15\u7528\u9519\u8bef\u3002\u76f8\u53cd\uff0c\u60a8\u5728\u7f16\u7801\u65f6\u4f1a\u6536\u5230\u9759\u6001\u9519\u8bef\u3002\nDART\u7684\u96f6\u5b89\u5168\u662f\u53ef\u9760\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cDART\u767e\u5206\u4e4b\u767e\u786e\u5b9a\u6587\u4ef6\u5217\u8868\u548c\u5176\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u4e3a\u7a7a\u3002\u5f53DART\u5206\u6790\u60a8\u7684\u4ee3\u7801\u5e76\u786e\u5b9a\u67d0\u4e2a\u53d8\u91cf\u4e0d\u53ef\u4e3a\u7a7a\u65f6\uff0c\u8be5\u53d8\u91cf\u59cb\u7ec8\u4e0d\u53ef\u4e3a\u7a7a\uff1a\u5982\u679c\u60a8\u5728\u8c03\u8bd5\u5668\u4e2d\u68c0\u67e5\u6b63\u5728\u8fd0\u884c\u7684\u4ee3\u7801\uff0c\u60a8\u5c06\u770b\u5230\u5728\u8fd0\u884c\u65f6\u4fdd\u6301\u4e0d\u53ef\u4e3a\u7a7a\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5176\u4ed6\u4e00\u4e9b\u5b9e\u73b0\u5e76\u4e0d\u53ef\u9760\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u4ecd\u7136\u9700\u8981\u6267\u884c\u8fd0\u884c\u65f6\u7a7a\u68c0\u67e5\u3002DART\u4e0eSWIFT\u5171\u4eab\u542c\u8d77\u6765\u50cf\u96f6\u7684\u5b89\u5168\u6027\uff0c\u4f46\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e0d\u662f\u5f88\u591a\u3002\nDART\u7684\u7a7a\u5b89\u5168\u6027\u7684\u5065\u58ee\u6027\u8fd8\u6709\u53e6\u4e00\u4e2a\u503c\u5f97\u6b22\u8fce\u7684\u542b\u4e49\uff1a\u5b83\u610f\u5473\u7740\u60a8\u7684\u7a0b\u5e8f\u53ef\u4ee5\u66f4\u5c0f\u3001\u66f4\u5feb\u3002\u7531\u4e8eDART\u786e\u5b9e\u786e\u5b9a\u6587\u4ef6\u4e0d\u4f1a\u4e3a\u7a7a\uff0c\u56e0\u6b64DART\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u3002\u4f8b\u5982\uff0cDART Ahead-of-time(AOT)\u7f16\u8bd1\u5668\u53ef\u4ee5\u751f\u6210\u66f4\u5c0f\u3001\u66f4\u5feb\u7684\u672c\u673a\u4ee3\u7801\uff0c\u56e0\u4e3a\u5f53\u5b83\u77e5\u9053\u67d0\u4e2a\u53d8\u91cf\u4e0d\u4e3aNULL\u65f6\uff0c\u5b83\u4e0d\u9700\u8981\u6dfb\u52a0\u5bf9NULL\u7684\u68c0\u67e5\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u5e0c\u671b\u7684\u521d\u6b65\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u770b\u5230\u6a21\u62df\u5178\u578b\u98a4\u52a8\u6846\u67b6\u6e32\u67d3\u6a21\u5f0f\u7684\u5fae\u57fa\u51c6\u6d4b\u8bd5\u7684\u6027\u80fd\u63d0\u9ad8\u4e8619%\u3002\n\u5728\u5f00\u59cb\u96f6\u5b89\u5168\u8be6\u7ec6\u8bbe\u8ba1\u4e4b\u524d\uff0cDART\u56e2\u961f\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6838\u5fc3\u539f\u5219\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u53ef\u4e3a\u7a7a\u3002\u9664\u975e\u60a8\u663e\u5f0f\u5730\u544a\u8bc9DART\u53d8\u91cf\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5426\u5219\u5b83\u5c06\u8ba4\u4e3a\u8be5\u53d8\u91cf\u4e0d\u53ef\u4e3a\u7a7a\u3002\u6211\u4eec\u9009\u62e9\u6b64\u9009\u9879\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u975eNULL\u662fAPI\u4e2d\u6700\u5e38\u89c1\u7684\u9009\u62e9\u3002\n\u9010\u6e10\u53ef\u91c7\u7528\u7684\u3002\u5916\u9762\u6709\u5f88\u591aDART\u4ee3\u7801\u3002\u5fc5\u987b\u80fd\u591f\u9010\u4e2a\u90e8\u5206\u5730\u589e\u91cf\u5730\u8fc1\u79fb\u5230\u96f6\u5b89\u5168\u3002\u5728\u540c\u4e00\u9879\u76ee\u4e2d\u5e94\u8be5\u53ef\u4ee5\u6709\u7a7a\u5b89\u5168\u4ee3\u7801\u548c\u975e\u7a7a\u5b89\u5168\u4ee3\u7801\u3002\u6211\u4eec\u8fd8\u5c06\u63d0\u4f9b\u5de5\u5177\u6765\u5e2e\u52a9\u60a8\u8fdb\u884c\u8fc1\u79fb\u3002\n\u5b8c\u597d\u65e0\u635f\u3002\u5982\u4e0a\u6240\u8ff0\uff0cDART\u7684\u96f6\u5b89\u5168\u6027\u662f\u53ef\u9760\u7684\u3002\u4e00\u65e6\u60a8\u5c06\u6574\u4e2a\u9879\u76ee\u548c\u4f9d\u8d56\u9879\u8fc1\u79fb\u5230\u96f6\u5b89\u5168\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u5f97\u5065\u5168\u6027\u7684\u5168\u90e8\u597d\u5904\u3002\n\u6838\u5fc3\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4e0d\u53ef\u4e3a\u7a7a\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u58f0\u660e\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4e0d\u53ef\u4e3a\u7a7a\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u56e0\u6b64\u8fd9\u4e9b\u58f0\u660e\u770b\u8d77\u6765\u5c31\u50cf\u4eca\u5929\u4e00\u6837\uff0c\u4f46\u5b83\u4eec\u7684\u542b\u4e49\u53d1\u751f\u4e86\u53d8\u5316\u3002\n//\u5728\u7a7a\u5b89\u5168DART\u4e2d\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u80fd\u4e3a\u7a7a\u3002var i=42\uff1b\u6700\u540eb=foo()\uff1b\u5b57\u7b26\u4e32m=&#39\uff1b&#39\uff1b\uff1b\nDART\u5c06\u786e\u4fdd\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u5c06NULL\u8d4b\u7ed9\u4e0a\u8ff0\u4efb\u4f55\u53d8\u91cf\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u4e00\u5343\u884c\u4e4b\u540e\u6267\u884ci=null\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u9759\u6001\u5206\u6790\u9519\u8bef\u548c\u7ea2\u8272\u7684\u66f2\u6298\u7ebf\u6761\uff0c\u5e76\u4e14\u60a8\u7684\u7a0b\u5e8f\u5c06\u62d2\u7edd\u7f16\u8bd1\u3002\n//\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4e3a\u7a7a\u7684\u53d8\u91cf\u3002INT\uff1fj=1\uff1b//\u4ee5\u540e\u53ef\u4ee5\u4e3a\u7a7a\u3002\u6700\u540e\u7684Foo\uff1fc=getFoo()\uff1b//\u51fd\u6570\u53ef\u80fd\u8fd4\u56deNULL\u3002\u7ef3\u5b50\uff1fn\uff1b//\u5f00\u59cb\u4e3a\u7a7a\u3002\u5728\u4ee5\u540e\u7684\u4efb\u4f55\u65f6\u95f4\u4e5f\u53ef\u4ee5\u4e3a\u7a7a\u3002\n//\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u3002void bogie(int\uff1fcount){//\u8ba1\u6570\u53ef\u80fd\u4e3a\u7a7a\u3002}//\u5728\u51fd\u6570\u8fd4\u56de\u503c\u4e2d\u3002\u798f\uff1fgetFoo(){//\u53ef\u4ee5\u8fd4\u56denull\u800c\u4e0d\u662ffoo\u3002}//\u8fd8\u6709\uff1a\u6cdb\u578b\u3001typedefs\u3001\u7c7b\u578b\u68c0\u67e5\u7b49\u3002//\u4ee5\u53ca\u4ee5\u4e0a\u5185\u5bb9\u7684\u4efb\u610f\u7ec4\u5408\u3002\n\u4f46\u662f\uff0c\u518d\u4e00\u6b21\uff0c\u6211\u7684\u68a6\u60f3\u662f\u4f60\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u9700\u8981\u4f7f\u7528\uff1f\u60a8\u7684\u7edd\u5927\u591a\u6570\u7c7b\u578b\u5c06\u662f\u4e0d\u53ef\u4e3a\u7a7a\u7684\u3002\nDART\u56e2\u961f\u6b63\u5728\u52aa\u529b\u4f7f\u96f6\u5b89\u5168\u5c3d\u53ef\u80fd\u6613\u4e8e\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5b83\u4f7f\u7528if\u68c0\u67e5\u7a7a\u503c\uff1a\n\u65e0\u6548\u5587\u53ed(int\uff1f\u54cd\u5ea6){\u5982\u679c(\u54cd\u5ea6==NULL){//\u6ca1\u6709\u6307\u5b9a\u54cd\u5ea6\uff0c\u8bf7\u901a\u77e5\u5f00\u53d1\u5546//\u6700\u5927\u54cd\u5ea6\u3002_playSound(&#39\uff1berror.wav&39\uff1b\uff0cvolume\uff1a11)\uff1breturn\uff1b}//\u54cd\u5ea6\u4e0d\u4e3a\u7a7a\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u94b3\u5236\u5230\u53ef\u63a5\u53d7\u7684\u6c34\u5e73\u3002_playSound(&#39\uff1bhonk.wav&#39\uff1b\uff0c\u97f3\u91cf\uff1aLoudness.clip(0\uff0c11))\uff1b}\u3002\n\u8bf7\u6ce8\u610f\uff0cDART\u662f\u5982\u4f55\u8db3\u591f\u806a\u660e\u5730\u610f\u8bc6\u5230\uff0c\u5728\u6211\u4eec\u4f20\u9012if\u8bed\u53e5\u65f6\uff0c\u54cd\u5ea6\u53d8\u91cf\u4e0d\u80fd\u4e3a\u7a7a\u3002\u56e0\u6b64\uff0cDART\u5141\u8bb8\u6211\u4eec\u8c03\u7528CLAMP()\u65b9\u6cd5\uff0c\u800c\u65e0\u9700\u8df3\u8f6c\u3002\u8fd9\u79cd\u4fbf\u5229\u6027\u662f\u901a\u8fc7\u6240\u8c13\u7684\u6d41\u5206\u6790\u5b9e\u73b0\u7684\uff1aDART\u5206\u6790\u5668\u4f1a\u50cf\u6267\u884c\u4ee3\u7801\u4e00\u6837\u68c0\u67e5\u60a8\u7684\u4ee3\u7801\uff0c\u81ea\u52a8\u627e\u51fa\u6709\u5173\u4ee3\u7801\u7684\u9644\u52a0\u4fe1\u606f\u3002\n\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u793a\u4f8b\uff0c\u5b83\u663e\u793a\u4e86DART\u53ef\u4ee5\u786e\u4fdd\u53d8\u91cf\u662f\u975eNULL\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6211\u4eec\u59cb\u7ec8\u4e3a\u5176\u8d4b\u503c\u4e3a\u975eNULL\u503c\uff1a\nint sign(Int X){//\u7ed3\u679c\u4e0d\u53ef\u4e3a\u7a7a\u3002INT RESULT\uff1bIF(x&&gt;\uff1b=0){RESULT=1\uff1b}ELSE{RESULT=-1\uff1b}//\u6b64\u65f6\uff0cDART\u77e5\u9053\u7ed3\u679c\u4e0d\u80fd\u4e3a\u7a7a\u3002\u8fd4\u56de\u7ed3\u679c\uff1b}\u3002\n\u5982\u679c\u5220\u9664\u4e0a\u9762\u7684\u4efb\u4f55\u8d4b\u503c(\u4f8b\u5982\uff0c\u901a\u8fc7\u5220\u9664\u7ed3\u679c=-1\uff1b\u884c)\uff0cDART\u4e0d\u80fd\u4fdd\u8bc1\u7ed3\u679c\u4e3a\u975e\u7a7a\uff1a\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u9759\u6001\u9519\u8bef\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7801\u5c06\u4e0d\u4f1a\u7f16\u8bd1\u3002\n\u6d41\u5206\u6790\u53ea\u5728\u51fd\u6570\u5185\u90e8\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u6709\u5168\u5c40\u53d8\u91cf\u6216\u7c7b\u5b57\u6bb5\uff0c\u5219DART\u4e0d\u80fd\u4fdd\u8bc1\u4f55\u65f6\u4e3a\u5176\u8d4b\u503c\u3002DART\u65e0\u6cd5\u5bf9\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6d41\u8fdb\u884c\u5efa\u6a21\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u7b2c\u4e00\u6b21\u8bfb\u53d6\u53d8\u91cf\u4e4b\u524d\u77e5\u9053\u53d8\u91cf\u5c06\u4e3a\u975eNULL\uff0c\u4f46\u4e0d\u80fd\u7acb\u5373\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528new late\u5173\u952e\u5b57\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1v\u5f00\u59cb\u65f6\u672a\u521d\u59cb\u5316\uff0c\u4f46\u5b83\u662f\u975e\u7a7a\u7684\u3002DART\u76f8\u4fe1\u60a8\u5728\u4e3av\u8d4b\u503c\u975e\u7a7a\u503c\u4e4b\u524d\u4e0d\u4f1a\u5c1d\u8bd5\u8bfb\u53d6v\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7801\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u51fa\u9519\u3002\nDART\u56e2\u961f\u5df2\u7ecf\u5de5\u4f5c\u4e86\u4e00\u5e74\u591a\uff0c\u4ee5\u786e\u4fdd\u6280\u672f\u9884\u89c8\u7684\u96f6\u5b89\u5168\u6027\u3002\u8fd9\u662f\u81ea\u6211\u4eec\u5f15\u5165DART 2\u4ee5\u6765\u5bf9DART\u8bed\u8a00\u589e\u52a0\u7684\u6700\u5927\u4e00\u9879\u529f\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\u73b0\u6709\u4ee3\u7801\u53ef\u4ee5\u8c03\u5165\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u7684\u4ee3\u7801\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5373\u4f7f\u5728\u96f6\u5b89\u5168\u6027\u53ef\u7528\u4e4b\u540e\uff0c\u5b83\u4e5f\u5c06\u662f\u4e00\u4e2a\u53ef\u9009\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u51c6\u5907\u597d\u65f6\u91c7\u7528\u3002\u60a8\u7684\u73b0\u6709\u4ee3\u7801\u5c06\u7ee7\u7eed\u8fd0\u884c\uff0c\u65e0\u9700\u66f4\u6539\u3002\n\u6211\u4eec\u6700\u8fd1\u8fc1\u79fb\u4e86DART\u6838\u5fc3\u5e93\uff0c\u4ee5\u5145\u5206\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u3002\u4f5c\u4e3anull security\u5411\u540e\u517c\u5bb9\u6027\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u66ff\u6362\u4e86\u73b0\u6709\u7684\u6838\u5fc3\u5e93\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u5728DART\u548cFfltter\u6d4b\u8bd5\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u73b0\u6709\u6d4b\u8bd5\u548c\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u751a\u81f3\u5c06\u65b0\u7684\u6838\u5fc3\u5e93\u76f4\u63a5\u653e\u5165\u4ed6\u4eec\u7684\u4ea7\u54c1\u4ee3\u7801\u5e93\u4e2d\uff0c\u6beb\u65e0\u969c\u788d\u5730\u63d0\u4f9b\u7ed9\u8bb8\u591aGoogle\u5185\u90e8\u5ba2\u6237\u3002\u6211\u4eec\u8ba1\u5212\u5728\u529f\u80fd\u542f\u52a8\u65f6\u8fc1\u79fb\u6211\u4eec\u6240\u6709\u7684\u8f6f\u4ef6\u5305\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4f7f\u7528\u7a7a\u5b89\u5168\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u4e5f\u80fd\u8fd9\u6837\u505a\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u65f6\u95f4\u8868\u4e0a\uff0c\u4e00\u4e2a\u5305\u63a5\u4e00\u4e2a\u5305\uff0c\u4e00\u4e2a\u5e94\u7528\u4e00\u4e2a\u5e94\u7528\u3002\n\u6280\u672f\u9884\u89c8\u3002\u8fd9\u5c06\u4e8e\u4eca\u5929\u53d1\u5e03\uff0c\u5e76\u5728DART\u7684\u5f00\u53d1\u9891\u9053\u4e2d\u63d0\u4f9b\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u201c\u7acb\u5373\u8bd5\u7528\u201d\u90e8\u5206\u3002\u60c5\u51b5\u4ecd\u7136\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u8981\u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u4f7f\u7528\u7a7a\u5b89\u5168\u6027\u3002\u4e0d\u8fc7\uff0c\u4e00\u5b9a\u8981\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u7136\u540e\u7ed9\u6211\u4eec\u53cd\u9988\uff01\n\u6d4b\u8bd5\u7248\u3002\u96f6\u5b89\u5168\u5c06\u5728DART\u7684\u6d4b\u8bd5\u901a\u9053\u4e2d\u63d0\u4f9b\uff0c\u5e76\u4e14\u4e0d\u518d\u662f\u5728\u5b9e\u9a8c\u65d7\u5e1c\u540e\u9762\u3002\u8be5\u529f\u80fd\u5c06\u975e\u5e38\u63a5\u8fd1\u9884\u671f\u7684\u6700\u7ec8\u7248\u672c\u3002\u5982\u679c\u60a8\u62e5\u6709pub.dev\u5305\u6216\u63d2\u4ef6\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fc1\u79fb\u4e86\uff0c\u4f46\u662f\u60a8\u8fd8\u4e0d\u5e94\u8be5\u5c06\u5176\u53d1\u5e03\u4e3a\u7a33\u5b9a\u7248\u672c\u3002\n\u7a33\u5b9a\u91ca\u653e\u3002\u6bcf\u4e2a\u4eba\u90fd\u5c06\u62e5\u6709\u96f6\u5b89\u5168\u6027\uff0c\u5e76\u9f13\u52b1\u60a8\u5c06\u8fc1\u79fb\u540e\u7684\u5305\u548c\u63d2\u4ef6\u53d1\u5e03\u4e3a\u7a33\u5b9a\u7248\u672c\u3002\u60a8\u8fd8\u5e94\u8be5\u8fc1\u79fb\u60a8\u7684\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u5e74\u5e95\u524d\u5c06null security\u4f5c\u4e3a\u4e00\u4e2a\u7a33\u5b9a\u7684\u529f\u80fd\u53d1\u5e03\u3002\u4ece\u73b0\u5728\u5230\u90a3\u65f6\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u5de5\u5177\u6765\u5e2e\u52a9\u60a8\u786e\u4fdd\u4ee3\u7801\u4e3a\u7a7a\u7684\u5b89\u5168\uff0c\u5305\u62ec\uff1a\n\u652f\u6301\u60a8\u81ea\u52a8\u6267\u884c\u5347\u7ea7\u73b0\u6709\u8f6f\u4ef6\u5305\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u8bb8\u591a\u6b65\u9aa4\u7684\u8fc1\u79fb\u5de5\u5177\u3002\n\u6807\u7b7e\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5305\u662f\u5426\u652f\u6301\u7a7a\u5b89\u5168\u6027\u3002\npub\u8fc7\u65f6\u547d\u4ee4\u7684\u6269\u5c55\uff0c\u652f\u6301\u67e5\u627e\u652f\u6301\u7a7a\u5b89\u5168\u6027\u7684\u4f9d\u8d56\u9879\u7684\u6700\u65b0\u7248\u672c\u3002\n\u73b0\u5728\u5c1d\u8bd5\u96f6\u5b89\u5168\u7684\u6700\u5feb\u65b9\u5f0f\u662f\u4f7f\u7528nullsafety.dartpad.dev\uff0c\u8fd9\u662f\u4e00\u4e2a\u542f\u7528\u4e86\u96f6\u5b89\u5168\u7684Dartpad\u7248\u672c\u3002\u6253\u5f00\u201c\u4f7f\u7528\u4ee3\u7801\u6bb5\u5b66\u4e60\u201d\u4e0b\u62c9\u5217\u8868\uff0c\u53ef\u4ee5\u627e\u5230\u4e00\u7cfb\u5217\u5b66\u4e60\u7ec3\u4e60\uff0c\u8fd9\u4e9b\u7ec3\u4e60\u6f14\u7ec3\u4e86\u7a7a\u5b89\u5168\u7684\u65b0\u8bed\u6cd5\u548c\u57fa\u7840\u77e5\u8bc6\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5728\u5c0f\u578b\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5c1d\u8bd5\u7a7a\u5b89\u5168\u6027\u3002(\u6211\u4eec\u8fd8\u6ca1\u6709\u8fc1\u79fb\u50cfFfltter\u8fd9\u6837\u7684\u5927\u578b\u6846\u67b6\u3002)\u3002\u9996\u5148\u4e0b\u8f7ddev-channel DART SDK\u7684\u526f\u672c\uff0c\u7136\u540e\u83b7\u53d6\u6b64\u793a\u4f8bDART CLI\u5e94\u7528\u7a0b\u5e8f\u7684\u526f\u672c(GitHub repo\u3001zip\u5b58\u6863)\u3002\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u81ea\u8ff0\u6587\u4ef6\u5305\u542b\u4f7f\u7528\u7a7a\u5b89\u5168\u5b9e\u9a8c\u6807\u5fd7\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf4\u660e\u3002\u793a\u4f8b\u4e2d\u7684\u5176\u4ed6\u6587\u4ef6\u63d0\u4f9b\u4e86\u542f\u52a8\u914d\u7f6e\uff0c\u53ef\u4ee5\u5728VS Code\u548cAndroid Studio\u4e2d\u8fdb\u884c\u8c03\u8bd5\u3002\n\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u4e3aDART\u5e26\u6765\u96f6\u5b89\u5168\u3002\u58f0\u97f3\u7a7a\u5b89\u5168\u6027\u662fDART\u7684\u4e00\u4e2a\u72ec\u7279\u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7f16\u5199\u4e0d\u592a\u5bb9\u6613\u51fa\u9519\u7684\u4ee3\u7801\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u6280\u672f\u9884\u89c8\u4e2d\u8bd5\u7528\u8be5\u529f\u80fd\uff0c\u5e76\u901a\u8fc7\u6211\u4eec\u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u7ed9\u6211\u4eec\u53cd\u9988\u3002\u5feb\u4e50\u7684\u7f16\u7801\uff01", "note_en": "Today is a major milestone for the Dart team with the tech preview of our null safety work. Null safety helps you avoid a class of bugs that are often hard to spot, and as an added bonus enables a range of performance improvements. We\u2019re now releasing an early tech preview, and we\u2019re looking forward to your feedback.\n This post describes the Dart team\u2019s plans for rolling out null safety. It also explains what we mean by  sound null safety and  why that\u2019s different from approaches that many other languages take.\n  Dart is a type-safe language. This means that when you get a variable of some type, the compiler can  guarantee that it is of that type. But type safety by itself doesn\u2019t guarantee that the variable is not  null.\n Null errors are very common. A search on GitHub leads to  thousands of issues caused by nulls in Dart code, and even more  thousands of commits trying to fix those issues.\n Try to see if you can spot the nullability problems in the following example code:\n  This function will certainly fail if called with  null, but there\u2019s a second case to consider:\n void main() {  // Error case 1: passing a null to files.  printLengths(null);  // Error case 2: passing list of files, containing a null item.  printLengths([File(&#39;filename1&#39;), File(&#39;filename2&#39;), null]); }\n   With null safety, you can reason about your code with more confidence. No more pesky runtime null dereferencing errors. Instead, you get static errors as you code.\n  Dart\u2019s null safety is  sound. This means that Dart is 100% sure that the  files list, and the elements in it, cannot be  null in the above example. When Dart analyzes your code and determines that a variable is non-nullable, that variable is  always non-nullable: if you inspect your running code in the debugger, you\u2019ll see that non-nullability is retained at runtime. By contrast, some other implementations are unsound, and in many cases still need to perform runtime null checks. Dart shares sound null safety with Swift, but not very many other programming languages.\n The soundness of Dart\u2019s null safety has another welcome implication: it means your programs can be smaller and faster. Because Dart is  really sure that  files is never  null, Dart can optimize. For example, the Dart ahead-of-time (AOT) compiler can produce smaller and faster native code, because it doesn\u2019t need to add checks for nulls when it  knows that a variable isn\u2019t  null.\n We\u2019ve seen some very promising preliminary results. For example, we saw a  19% performance improvement in a microbenchmark that emulates typical Flutter framework rendering patterns.\n  Before starting the detailed design for null safety, the Dart team defined the following three core principles:\n Non-nullable by default. Unless you explicitly tell Dart that a variable can be  null, it will consider it non-nullable. We chose this as the default because we found that non-null was by far the most common choice in APIs.\n Incrementally adoptable. There\u2019s a lot of Dart code out there. It must be possible to migrate to null safety incrementally, part by part. It should be possible to have null-safe and non-null-safe code in the same project. We\u2019ll also provide tools to help you with the migration.\n Fully sound. As mentioned above, Dart\u2019s null safety is sound. Once you migrate your whole project and your dependencies to null safety, you reap the full benefits of soundness.\n  The core syntax is simple enough. Here are some non-nullable variables, declared in different ways. Remember, non-nullable is the default, so these declarations look like they do today, but their meaning changes.\n // In null-safe Dart, none of these can ever be null. var i = 42; final b = Foo(); String m = &#39;&#39;;\n Dart will make sure that you never assign  null to any of the above variables. If you try to do  i = null a thousand lines later, you\u2019ll get a static analysis error and red squiggly lines, and your program will refuse to compile.\n  // These are all nullable variables. int? j = 1; // Can be null later. final Foo? c = getFoo(); // Maybe the function returns null. String? n; // Is null at first. Can be null at any later time, too.\n   // In function parameters. void boogie(int? count) {  // It&#39;s possible that count is null. } // In function return values. Foo? getFoo() {  // Can return null instead of Foo. } // Also: generics, typedefs, type checks, etc. // And any combination of the above.\n But, once again, the dream is that you\u2019ll almost never have to use  ?. The vast majority of your types will be non-nullable.\n  The Dart team is trying hard to make null safety as easy to use as possible. For example, look at this code, which uses  if to check for a null value:\n void honk(int? loudness) {  if (loudness == null) {  // No loudness specified, notify the developer  // with maximum loudness.  _playSound(&#39;error.wav&#39;, volume: 11);  return;  }  // Loudness is non-null, let&#39;s just clamp it to acceptable levels.  _playSound(&#39;honk.wav&#39;, volume: loudness.clamp(0, 11)); }\n Note how Dart is smart enough to realize that by the time we pass that  if statement, the  loudness variable  cannot be  null. And so Dart lets us call the  clamp() method without jumping through hoops. This convenience is enabled by something called  flow analysis: the Dart analyzer goes through your code as if it was executing it, figuring out additional information about your code automatically.\n Here\u2019s another example, which shows a case where Dart can be sure that a variable is non-null because we always assign a non-null value to it:\n int sign(int x) {  // The result is non-nullable.  int result;  if (x &gt;= 0) {  result = 1;  } else {  result = -1;  }  // By this point, Dart knows the result cannot be null.  return result; }\n If you remove any of the assignments above (for example, by deleting the  result = -1; line), Dart cannot guarantee that  result will be non-null: you\u2019ll get a static error and your code won\u2019t compile.\n Flow analysis only works inside functions. If you have a global variable or a class field, then Dart can\u2019t guarantee when it will be assigned what value. Dart can\u2019t model the flow of your whole application. For that reason, you can use the new  late keyword when you   know that a variable will be non-null before you first read it, but you can\u2019t initialize it immediately.\n  Note that  v is non-null, although it starts uninitialized. Dart trusts you that you won\u2019t try to read  v before it\u2019s assigned a non-null value, and your code compiles without errors.\n  The Dart team has been working for more than a year to get null safety to tech preview. It\u2019s the largest addition to the Dart language since we introduced Dart 2. Yet, it\u2019s not a breaking change. Existing code can call into code that uses null safety, and vice versa. Even after null safety is available, it will be an optional feature that you can adopt when you\u2019re ready.  Your existing code will continue to run without change.\n We recently migrated the Dart  core libraries to fully use null safety. As an example of null safety\u2019s backwards compatibility, we replaced the existing core libraries without any breakage in existing tests and test apps running in the Dart and Flutter test environments. We even rolled the new core libraries to our many internal Google customers, directly into their production code bases, without a hitch. We plan on migrating all of our packages and apps to use null safety when the feature launches, and we hope you\u2019ll do the same. But you\u2019ll be able to do it on your timeline, package by package, app by app.\n   Tech preview. This is   launching today, and is available in Dart\u2019s  dev channel. See the \u201cTry it now\u201d section below for details. Things are still subject to change, so  don\u2019t use null safety in production code just yet. Do test things out and  give us feedback, though!\n Beta release. Null safety will be available in Dart\u2019s beta channel, and no longer behind an  experimental flag. The feature will be very close to the expected final version. If you own a  pub.dev package or plugin, this is when you can begin migrating, but you shouldn\u2019t publish it as a stable version just yet.\n Stable release. Everyone will have null safety, and you\u2019ll be encouraged to publish your migrated packages and plugins as stable versions. You should also migrate your production apps.\n If all goes well, we plan to release null safety as a stable feature before the end of the year. Between now and then, we\u2019ll add tooling to help you make your code null safe, including:\n A migration tool to support you in automating many of the steps for upgrading existing packages and apps\n Tags on  pub.dev, so you can tell if a package supports null safety or not\n An extension to the   pub outdated command, with support for finding the latest versions of your dependencies that support null safety\n  The quickest way to try null safety today is through  nullsafety.dartpad.dev, a version of DartPad with null safety enabled. Open the  Learn with Snippets drop-down to find a series of learning exercises that walk through the new syntax and basics of null safety.\n  You can also try null safety in small command-line apps. (We haven\u2019t migrated larger frameworks like Flutter yet.) Start by downloading a copy of the  dev-channel Dart SDK, and then get a copy of  this sample Dart CLI app ( GitHub repo,  zip archive). The sample app\u2019s  README file has instructions for running the app with the null safety experiment flag. Other files in the sample provide launch configurations that enable debugging in VS Code and Android Studio.\n   We\u2019re very happy to bring null safety to Dart. Sound null safety is a distinctive feature of Dart that helps you write less error-prone code and get better performance. We hope you\u2019ll experiment with the feature in tech preview, and  give us feedback through our issue tracker. Happy coding!", "posttime": "2020-06-11 00:48:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dart,\u58f0\u97f3,sound", "title": "DART\uff1a\u58f0\u97f3\u96f6\u4f4d\u5b89\u5168", "title_en": "Dart: Sound Null Safety", "transed": 1, "url": "https://medium.com/dartlang/announcing-sound-null-safety-defd2216a6f3", "via": "", "real_tags": ["dart", "\u58f0\u97f3", "sound"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006033, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u5e10\u6237", "note_en": "Create\r\t\t\t\t\t\t\t\t\t\t\tAccount", "posttime": "2020-06-11 00:31:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u52a8\u6c7d\u8f66,batteries,\u521b\u5efa", "title": "\u7528\u8fc7\u7684\u7535\u52a8\u6c7d\u8f66\u7535\u6c60\u53ef\u4ee5\u4e3a\u660e\u5929\u7684\u592a\u9633\u80fd\u53d1\u7535\u573a\u4f9b\u7535", "title_en": "Used EV Batteries Could Power Tomorrow's Solar Farms", "transed": 1, "url": "https://spectrum.ieee.org/energywise/energy/batteries-storage/used-ev-batteries-could-power-tomorrows-solar-farms", "via": "", "real_tags": ["\u7535\u52a8\u6c7d\u8f66", "batteries", "\u521b\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "5930ea8c944162de167c2612c9c69a2f.jpeg", "infoid": 1006032, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u5e26\u5bbd\u7684\u9700\u6c42\u6b63\u5728\u63a8\u52a8\u50cfNiometrics\u8fd9\u6837\u7684\u7f51\u7edc\u8f6f\u4ef6\u4f9b\u5e94\u5546\u652f\u6301100 GbE\u7f51\u7edc\u63a5\u53e3\u63a7\u5236\u5668(NIC)\u3002\u6211\u4eec\u7684\u7f51\u7edc\u63a2\u6d4b\u5668\u4f7f\u7528\u6570\u636e\u5e73\u9762\u5f00\u53d1\u5de5\u5177\u5305(DPDK)\u7ed5\u8fc7Linux\u5185\u6838\uff0c\u5c06\u6d41\u91cf\u5b9a\u5411\u5230\u7528\u6237\u7a7a\u95f4\u3002\u8fd9\u6d88\u9664\u4e86NIC\u4e2d\u65ad\u7684\u5f00\u9500\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u5e26\u5bbd\u5904\u7406\u901f\u7387\u3002\u7136\u800c\uff0c100GbE\u7f51\u5361\u5e26\u6765\u4e86\u65b0\u7684\u6311\u6218\u3002\u6211\u4eec\u9762\u4e34\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u5904\u7406\u5668\u95f4\u4e2d\u65ad(IPI)\u5bfc\u81f4\u8f83\u4f4e\u5e26\u5bbd\u7684\u96f6\u661f\u6570\u636e\u5305\u4e22\u5f03\uff0c\u6ca1\u6709\u660e\u663e\u7684\u62e5\u585e\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u8ba8\u8bba\u4e0d\u540c\u7c7b\u578b\u7684\u4e2d\u65ad\u3001\u4e2d\u65ad\u5904\u7406\u786c\u4ef6\u548c\u5185\u5b58\u7ba1\u7406\u5355\u5143\u3002\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u7531\u4e8e\u591a\u5957\u63a5\u5b57\u7cfb\u7edf\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u800c\u5bfc\u81f4\u7684\u6545\u969c\u6392\u9664\u3001\u8c03\u8bd5\u548c\u4fee\u590d\u95ee\u9898\u3002\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e0b\u672c\u6587\u6d89\u53ca\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u73af\u5883\uff1a\n6TB\u5185\u5b58(\u4f7f\u7528hugepagesz=1G\u548chugepages=1024\u4e2a\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570\u4e3a\u6bcf\u4e2a\u63d2\u69fd\u4fdd\u7559256\u4e2a1G\u5927\u578b\u9875\u9762\uff0c\u4e3a\u5927\u578b\u9875\u9762\u4fdd\u75591 TB)\u3002\n\u4f7f\u7528Isolcpus\u3001NOHZ_FULL\u3001RCU_NOCBS\u548cRCU_NOCB_POLL\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570\u9694\u79bb\u6240\u6709\u5173\u952e\u5185\u6838\u5e76\u4f7f\u5176\u51e0\u4e4e\u65e0\u6296\u52a8\u3002\n\u5728\u4f7f\u7528DPDK\u7684\u7f51\u7edc\u63a2\u6d4b\u4e2d\uff0c\u6570\u636e\u5305\u63a5\u6536\u7531\u8f6e\u8be2\u6a21\u5f0f\u4e0b\u7684RX\u7ebf\u7a0b\u5904\u7406\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4e0d\u65ad\u8f6e\u8be2NIC RX\u73af\u4e2d\u7684\u6570\u636e\u5305\u3002\u901a\u8fc7\u5c06\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u5185\u6838\u7a7a\u95f4\u6765\u5904\u7406\u4e2d\u65ad\uff0c\u4ece\u800c\u4e2d\u65ad\u201c\u4e2d\u65ad\u201d\u7528\u6237\u7a7a\u95f4\u4efb\u52a1\u7684\u6267\u884c\u3002\u8fd9\u4f1a\u5f15\u5165\u6296\u52a8\uff0c\u8fd9\u79cd\u6296\u52a8\u975e\u5e38\u7f55\u89c1\uff0c\u4e0d\u4f1a\u5f71\u54cd\u541e\u5410\u91cf\uff0c\u4f46\u5728100GbE\u7f51\u5361\u4e0a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e22\u5305\u3002\u589e\u52a0NIC RX\u73af\u5927\u5c0f(\u6216RX\u73af\u7684\u6570\u91cf)\u53ef\u4ee5\u7f13\u89e3\u6b64\u95ee\u9898\uff0c\u4f46\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\n\u5728\u6211\u4eec\u63cf\u8ff0\u6bcf\u79cd\u7c7b\u578b\u5982\u4f55\u5f71\u54cd\u9ad8\u6027\u80fd\u7cfb\u7edf\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u770b\u770bAPIC\u7684\u5185\u5e55\u3002\nAPIC\u4ee3\u8868\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u3002\u5728x86-64\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5904\u7406\u4e2d\u65ad\uff1a\n\u6bcf\u4e2aCPU\u7684\u672c\u5730APIC\u63a5\u6536\u4e2d\u65ad\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4e2d\u65ad\u53d1\u9001\u5230\u5904\u7406\u5668\u5185\u6838\u8fdb\u884c\u5904\u7406\u3002\u4e2d\u65ad\u53ef\u80fd\u6765\u81ea\u5904\u7406\u5668\u7684\u4e2d\u65ad\u5f15\u811a\u3001\u5185\u90e8\u6e90\u548c\u5916\u90e8I/O APIC(\u6216\u5176\u4ed6\u5916\u90e8\u4e2d\u65ad\u63a7\u5236\u5668)\u3002\n\u5728\u5bf9\u79f0\u591a\u5904\u7406(SMP)\u7cfb\u7edf\u4e2d\uff0c\u672c\u5730APIC\u5411\u7cfb\u7edf\u603b\u7ebf\u4e0a\u7684\u5176\u4ed6\u903b\u8f91\u5904\u7406\u5668\u53d1\u9001IPI\u6d88\u606f\uff0c\u6216\u4ece\u7cfb\u7edf\u603b\u7ebf\u4e0a\u7684\u5176\u4ed6\u903b\u8f91\u5904\u7406\u5668\u63a5\u6536IPI\u6d88\u606f\u3002IPI\u6d88\u606f\u53ef\u7528\u4e8e\u5728\u7cfb\u7edf\u4e2d\u7684\u5904\u7406\u5668\u4e4b\u95f4\u5206\u914d\u4e2d\u65ad\u6216\u6267\u884c\u7cfb\u7edf\u8303\u56f4\u7684\u529f\u80fd(\u4f8b\u5982\u542f\u52a8\u5904\u7406\u5668\u6216\u5728\u4e00\u7ec4\u5904\u7406\u5668\u4e4b\u95f4\u5206\u914d\u5de5\u4f5c)\u3002\nI/O APIC\u662fIntel\u7cfb\u7edf\u82af\u7247\u7ec4\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4ece\u7cfb\u7edf\u53ca\u5176\u5173\u8054\u7684I/O\u8bbe\u5907\u63a5\u6536\u5916\u90e8\u4e2d\u65ad\u4e8b\u4ef6\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u4e2d\u65ad\u6d88\u606f\u4e2d\u7ee7\u5230\u672c\u5730APIC\u3002\n\u5728SMP\u7cfb\u7edf\u4e2d\uff0cI/O APIC\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5c06\u5916\u90e8\u4e2d\u65ad\u5206\u914d\u7ed9\u7cfb\u7edf\u603b\u7ebf\u4e0a\u9009\u5b9a\u5904\u7406\u5668\u6216\u5904\u7406\u5668\u7ec4\u7684\u672c\u5730APIC\u3002\n\u6211\u4eec\u4f7f\u7528irqBalance\u5b88\u62a4\u8fdb\u7a0b\u5c06\u6240\u6709\u5916\u90e8\u4e2d\u65ad\u5904\u7406\u4ece\u53c2\u4e0e\u6570\u636e\u5305\u5904\u7406\u7684\u9694\u79bb\u6838\u5fc3\u79fb\u81f3\u4e00\u7ec4\u4fdd\u7559\u7528\u4e8e\u4e2d\u65ad\u5904\u7406\u7684\u6838\u5fc3\u3002\u8fd9\u53ef\u786e\u4fdd\u5916\u90e8\u4e2d\u65ad\u4e0d\u4f1a\u5bf9\u9694\u79bb\u5185\u6838\u4e0a\u7684\u4efb\u52a1\u9020\u6210\u6296\u52a8\u3002\u5b83\u8fd8\u786e\u4fdd\u4e3aIRQ\u4eb2\u548c\u6027\u5206\u914d\u7684\u6838\u5fc3\u201c\u6700\u63a5\u8fd1\u201d\u8bbe\u5907\u7684NUMA\u8282\u70b9\u3002IRQBALANCE_BANDIRED_CPUS\u73af\u5883\u53d8\u91cf\u5fc5\u987b\u8bbe\u7f6e\u4e3a\u9694\u79bb\u5185\u6838\u7684\u63a9\u7801\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u4e3a\u5b83\u4eec\u5206\u914d\u4e2d\u65ad\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u793a\u4f8b\u6765\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\n\u5728\u5185\u68382.6.21\u4e4b\u524d\uff0c\u8ba1\u65f6\u5668\u6ef4\u7b54\u4ee5CONFIG_HZ(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a1000/\u79d2)\u7684\u901f\u7387\u5728\u6bcf\u4e2a\u5185\u6838\u4e0a\u8fd0\u884c\u3002\n\u65e0\u8ba1\u65f6\u5185\u6838(\u5728\u5185\u68382.6.21+\u4e2d)\u7981\u7528\u4e86\u7a7a\u95f2\u5185\u6838\u4e0a\u7684\u5185\u6838\u8ba1\u65f6\u5668\u8ba1\u65f6\u5668\u8ba1\u65f6\u3002\u8c03\u5ea6\u65f6\u949f\u4e2d\u65ad\u7528\u4e8e\u5f3a\u5236\u7e41\u5fd9\u7684\u5185\u6838\u8c03\u5ea6\u591a\u4e2a\u4efb\u52a1\uff0c\u800c\u7a7a\u95f2\u7684\u5185\u6838\u6ca1\u6709\u8981\u8c03\u5ea6\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u4e0d\u9700\u8981\u8c03\u5ea6\u65f6\u949f\u4e2d\u65ad\u3002\nNOHZ_FULL\u5185\u6838\u547d\u4ee4\u884c\u53c2\u6570(\u5728\u5185\u68383.9+\u4e2d\u5f15\u5165)\u662f\u5728\u65e0\u8ba1\u65f6\u5185\u6838\u4e4b\u4e0a\u7684\u4f18\u5316\uff0c\u5b83\u5c06\u65e0\u8ba1\u65f6\u884c\u4e3a\u6269\u5c55\u5230\u53ea\u6709\u4e00\u4e2a\u8fd0\u884c\u4efb\u52a1\u7684\u5185\u6838\u3002\u4ecd\u7136\u9700\u8981\u4e3a\u8fdb\u7a0b\u7ba1\u7406\u64cd\u4f5c(\u5982\u8ba1\u7b97\u6838\u5fc3\u8d1f\u8f7d\u3001\u7ef4\u62a4\u8c03\u5ea6\u5e73\u5747\u503c\u7b49)\u6bcf\u79d2\u5b89\u6392\u4e00\u4e2a\u6ef4\u7b54\u3002\n\u5904\u7406\u5668\u95f4\u4e2d\u65ad\u5141\u8bb8CPU\u5411\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6CPU\u53d1\u9001\u4e2d\u65ad\u4fe1\u53f7\u3002\u5b83\u4eec\u7531ARCH/x86/include/asm/entry_arch.h\u4e2d\u7684BUILD_INTERRUPT\u5b8f\u5b9a\u4e49\u3002\u5bf9\u4e8eSMP\u5185\u6838\uff0c\u201cSMP_\u201d\u4f4d\u4e8e\u51fd\u6570\u540d\u7684\u524d\u9762\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eBUILD_INTERRUPT(CALL_Function_Interrupt\uff0cCall_Function_Vector)\uff0c\u8c03\u7528\u51fd\u6570\u4e2d\u65ad\u5411\u91cf\u7531SMP_CALL_Function_Interrupt()\u5904\u7406\u3002\u901a\u8fc7\u8c03\u7528send_ipi_all()\u3001send_ipi_allbutself()\u3001send_ipi_self()\u3001send_ipi_ask_allbuself()&amp\uff1bsend_ipi_ask()\u51fd\u6570\u6307\u9488\u6240\u6307\u5411\u7684\u51fd\u6570\u6765\u5f15\u53d1\u4e2d\u65ad\u3002\n\u547c\u53eb\u529f\u80fd\u4e2d\u65ad\u662f\u53ef\u4ee5\u53d1\u9001\u5230\u591a\u4e2aCPU\u7684IPI\u3002\u5b83\u662f\u901a\u8fc7\u8c03\u7528NATIVE_SEND_CALL_FUNC_IPI()\u5f15\u53d1\u7684\u3002\n\u547c\u53eb\u529f\u80fd\u5355\u6b21\u4e2d\u65ad\u662f\u4e00\u6b21\u53ef\u4ee5\u53d1\u9001\u5230\u4e00\u4e2aCPU\u7684IPI\u3002\u5b83\u662f\u901a\u8fc7\u8c03\u7528NATIVE_SEND_CALL_FUNC_SINGLE_IPI()\u5f15\u53d1\u7684\u3002\nTLB\u51fb\u843d\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684CAL\u4e2d\u65ad\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u8ba1\u6570\u5668\uff0c\u5373/proc/interrupts\u4e2d\u7684TLB\u884c\u3002CAL\u8ba1\u6570\u5668\u4e0d\u5305\u62ecTLB\u51fb\u843d\u3002\n\u8981\u7406\u89e3TLB\u51fb\u843d\u4e2d\u65ad\u7684\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u7b80\u8981\u8ba8\u8bba\u5206\u9875\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7528\u4e8e\u652f\u6301\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u7684\u5206\u9875\u3002\n\u903b\u8f91\u5730\u5740-\u5305\u62ec\u5728\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u4e2d\u3002\u5b83\u7531\u7ebf\u6bb5\u548c\u504f\u79fb\u7ec4\u6210\u3002\n\u7ebf\u6027\u5730\u5740(\u865a\u62df\u5730\u5740)-\u5355\u4e2a48\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u6700\u9ad8\u53ef\u7528\u4e8e\u5bfb\u5740256TB\u3002\nMMU(\u5b58\u50a8\u5668\u7ba1\u7406\u5355\u5143)\u7684\u5206\u9875\u5355\u5143\u5c06\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3002\u4e0b\u56fe\u8bf4\u660e\u4e86\u52304KB\u9875\u7684\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e0e\u52301 GB\u9875\u7684\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c06\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u4e3a4KB\u7269\u7406\u9875\u5730\u5740\u6d89\u53ca\u8bbf\u95ee4\u4e2a\u5b58\u50a8\u5668\u4f4d\u7f6e(PML4E\u3001PDPTE\u3001PDE&amp\uff1bPDE)\uff0c\u800c1 GB\u7269\u7406\u9875\u9762\u8bbf\u95ee\u6d89\u53ca\u8bbf\u95ee2\u4e2a\u5b58\u50a8\u5668\u4f4d\u7f6e(PML4E&amp\uff1bPDPTE)\u3002\u8fd9\u5c31\u662f\u8bbf\u95ee1 GB\u5927\u9875\u9762\u6bd4\u8bbf\u95ee4KB\u9875\u9762\u66f4\u5feb\u7684\u539f\u56e0\uff0c\u56e0\u6b64\u63a8\u8350DPDK\u4f7f\u7528\u3002\n\u8f6c\u6362\u540e\u5907\u7f13\u51b2\u5668(TLB)\u662f\u7528\u4e8e\u52a0\u901f\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u7684\u7f13\u5b58\u3002\u5f53\u7b2c\u4e00\u6b21\u4f7f\u7528\u7ebf\u6027\u5730\u5740\u65f6\uff0c\u901a\u8fc7\u7f13\u6162\u8bbf\u95ee\u4e3b\u5b58\u50a8\u5668\u4e2d\u7684\u5206\u9875\u8868\u6765\u8ba1\u7b97\u76f8\u5e94\u7684\u7269\u7406\u5730\u5740\u3002\u7136\u540e\u5c06\u7269\u7406\u5730\u5740\u5b58\u50a8\u5728TLB\u6761\u76ee\u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u5feb\u901f\u8f6c\u6362\u5bf9\u76f8\u540c\u7ebf\u6027\u5730\u5740\u7684\u8fdb\u4e00\u6b65\u5f15\u7528\u3002\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2aCPU\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730TLB\u3002\u4e0e\u786c\u4ef6\u9ad8\u901f\u7f13\u5b58\u76f8\u53cd\uff0cTLB\u7684\u76f8\u5e94\u6761\u76ee\u4e0d\u9700\u8981\u540c\u6b65\uff0c\u56e0\u4e3a\u5728\u4e0d\u540cCPU\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u53ef\u80fd\u5c06\u76f8\u540c\u7684\u7ebf\u6027\u5730\u5740\u4e0e\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\u76f8\u5173\u8054\u3002\n\u5728\u540c\u4e00CPU\u4e0a\u7684\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u4f1a\u53d1\u751fTLB\u5237\u65b0\u3002\u5f53\u4e24\u4e2a\u8fdb\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u9875\u8868(\u4f8b\u5982\uff0c\u540c\u4e00\u8fdb\u7a0b\u7684\u7ebf\u7a0b)\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4ece\u5e38\u89c4\u8fdb\u7a0b\u5207\u6362\u5230\u5185\u6838\u7ebf\u7a0b\u65f6\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\uff0c\u5f53\u5237\u65b0CPU\u4e0a\u7684TLB\u65f6\uff0c\u5185\u6838\u8fd8\u5fc5\u987b\u5237\u65b0\u4f7f\u7528\u76f8\u540c\u9875\u8868\u96c6\u7684CPU\u4e0a\u7684\u76f8\u540cTLB\u6761\u76ee\u3002\u8fd9\u662f\u7531TLB\u51fb\u843d\u4e2d\u65ad\u5b8c\u6210\u7684\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7ee7\u7eed\u56de\u987e\u5728\u6392\u9664\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u6027\u80fd\u95ee\u9898\u65f6\u6240\u7ecf\u5386\u7684\u6b65\u9aa4\u3002\n\u6211\u4eec\u5fc5\u987b\u627e\u5230\u53d1\u9001\u5230\u8fd0\u884c\u5173\u952eRX\u7ebf\u7a0b\u7684\u5185\u6838\u7684\u4e2d\u65ad\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u76d1\u89c6\u5185\u6838\u7684\u4e2d\u65ad\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u76d1\u89c6/proc/interrupts\u3002\n\u4ece\u811a\u672c\u7684\u8f93\u51fa\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230LOC\u5728\u8fd0\u884c\u5355\u4e2a\u7528\u6237\u7ebf\u7a0b\u7684NOHZ_FULL\u5185\u6838\u4e0a\u6bcf\u79d2\u4f20\u9012\u4e00\u6b21\u3002\u8fd9\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002\u6b63\u5728\u4f20\u9001\u7684TLB\u4e2d\u65ad(\u6bcf\u79d26\u4e2a\u4e2d\u65ad)\u662f\u9700\u8981\u8fdb\u4e00\u6b65\u8c03\u8bd5\u7684\u4e2d\u65ad\u3002\n\u8981\u786e\u5b9a\u5904\u7406\u4e2d\u65ad\u7684CPU+\u5185\u6838\u51fd\u6570\uff0c\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97\u51fa\u4e2d\u65ad\u8ba1\u6570\u5668\u9012\u589e\u7684\u4f4d\u7f6e\u3002\u53ef\u4ee5\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u627e\u5230\u4e2d\u65ad\u8ba1\u6570\u5668\u7b26\u53f7\uff1aARCH/x86/kernel/irq.c\uff1aarcshow_interrupts()\u3002\u5904\u7406\u7a0b\u5e8f\u662f\u4f7f\u7528incirqstat()\u9012\u589e\u8ba1\u6570\u5668\u7684\u51fd\u6570\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0cTLB\u51fb\u843d\u5904\u7406\u7a0b\u5e8f\u4e3aFLUSH_TLB_FUNC()(\u7531CAL\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8c03\u7528)\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u770b\u8c03\u7528\u5806\u6808\uff0c\u4ee5\u627e\u51fa\u4e2d\u65ad\u4e2d\u6b63\u5728\u6267\u884c\u54ea\u4e9b\u5de5\u4f5c\u3002\u4f8b\u5982\uff0cCAL\u4e2d\u65ad\u53ef\u4ee5\u8c03\u7528\u8bb8\u591a\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u3002\n\u4f7f\u7528trace-cmd\u5f55\u5236\u65f6\uff0c\u4f7f\u7528\u201ctrace-cmd show\u201d\u67e5\u770b\u8f93\u51fa\u3002\u4f7f\u7528\u201ctrace-cmd report\u201d\u67e5\u770btrace-cmd\u8bb0\u5f55\u5b8c\u6210\u540e\u4fdd\u5b58\u7684\u8f93\u51fa\u3002\n\u8981\u67e5\u770b\u5185\u6838\u4e0a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u6210\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528trace-cmd\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u79d2\u949f\u6211\u4eec\u5f97\u52307\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5176\u4e2d6\u4e2a\u7528\u4e8eTLB\u51fb\u843dIPI\u5904\u7406\u7a0b\u5e8f\uff0c\u5360\u7528\u4e86\u5173\u952eRX\u7ebf\u7a0b\u5927\u7ea630-35\u5fae\u79d2\u7684\u65f6\u95f4\u3002\u6ce8\u610f\uff1aTLB IPI\u662fCAL IPI\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b83\u7684\u5904\u7406\u7a0b\u5e8f\u4eceSMP_CALL_Function_INTERRUPT()\u5f00\u59cb\u3002\n\u5728\u4ec5\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u9694\u79bbNOHZ_FULL\u5185\u6838\u4e0aLOC-1/\u79d2\u7684\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u6bb5\u3002\n\u5728I/O\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u7684I/O\u8bf7\u6c42-\u7531\u4e8e\u4e0d\u5e73\u8861\uff0c\u6211\u4eec\u5e94\u8be5\u770b\u4e0d\u5230\u8fd9\u4e9b\u3002\n\u5728IPI\u60c5\u51b5\u4e0b\u5f15\u53d1\u4e2d\u65ad\u7684CPU+\u5185\u6838\u51fd\u6570\u67e5\u627e\u4e2d\u65ad\u5411\u91cf\u7684\u7b26\u53f7\uff0c\u5e76\u901a\u8fc7\u8c03\u7528send_ipi_*\u51fd\u6570\u627e\u5230\u5f15\u53d1\u4e2d\u65ad\u7684\u51fd\u6570\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0cmunmap(2)\u7684\u7cfb\u7edf\u8c03\u7528\u8d1f\u8d23TLB\u51fb\u843d\u4e2d\u65ad\u3002\n\u6b65\u9aa43-\u8c03\u8bd5\u4ee3\u7801\u4ee5\u627e\u51fa\u8d1f\u8d23\u4e2d\u65ad\u7684\u7ebf\u7a0b\u6216\u4efb\u52a1\u6b63\u5728\u505a\u4ec0\u4e48\u3002\n\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u4e2d\uff0c\u83b7\u53d6Mellanox NIC\u7edf\u8ba1\u4fe1\u606f\u7684DPDK\u8c03\u7528(\u4f7f\u7528FILE*\u64cd\u4f5c)\u8d1f\u8d23TLB\u51fb\u843d\u4e2d\u65ad\uff01\n\u4ece\u4e0a\u9762\u7684\u8c03\u8bd5\u8f93\u51fa\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0fclose(3)\u5728\u8bfb\u53d6NIC\u7684Out_Of_Buffer\u8ba1\u6570\u5668(MLX5PMD\u7684imiss\u8ba1\u6570\u5668)\u65f6\u8c03\u7528\u4e86munmap(2)\u3002\u96f6\u661f\u53d1\u751f\u7684\u6570\u636e\u5305\u4e22\u5f03\u662f\u7531\u4e8e\u8bfb\u53d6\u6570\u636e\u5305\u4e22\u5f03\u8ba1\u6570\u5668\u9020\u6210\u7684\u3002\u4f7f\u60c5\u51b5\u66f4\u52a0\u590d\u6742\u7684\u662f\uff0c\u8fd9\u4e9b\u6db2\u6ef4\u662f\u7531\u53e6\u4e00\u4e2a\u540d\u4e3arx_discards_phy\u7684\u8ba1\u6570\u5668\u8ba1\u6570\u7684\u3002\u5c31\u50cf\u859b\u5b9a\u8c14\u8457\u540d\u7684\u601d\u7ef4\u5b9e\u9a8c\u4e00\u6837\uff0c\u8fd9\u4e9b\u6db2\u6ef4\u76f4\u5230\u8bfb\u5230\u6db2\u6ef4\u8ba1\u6570\u5668\u540e\u624d\u51fa\u73b0\u3002\nfscanf(3)\u8c03\u7528\u5bfc\u81f4\u6587\u4ef6\u88abmmap\u2018\u5316\u3002\u968f\u540e\u7684fclose(3)\u5bfc\u81f4\u8c03\u7528munmap(2)\uff0c\u901a\u8fc7\u5bf9\u8c03\u7528fclose(3)\u7684\u5185\u6838\u6267\u884cTLB\u5237\u65b0\u64cd\u4f5c\uff0c\u4eceTLB\u91ca\u653e\u4e0e\u6587\u4ef6\u7f13\u51b2\u533a\u7684\u7269\u7406\u5730\u5740\u76f8\u5173\u8054\u7684\u7ebf\u6027\u5730\u5740\u3002\u8fd9\u8fd8\u4f1a\u5c06TLB\u51fb\u843d\u53d1\u9001\u5230\u6267\u884c\u540c\u4e00\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b(\u5305\u62ec\u5173\u952eRX\u7ebf\u7a0b)\u7684\u6240\u6709\u5185\u6838\u3002\u4fee\u590d\u65b9\u6cd5\u662f\u7528open(2)/read(2)/close(2)\u8c03\u7528\u66ff\u6362\u6587\u4ef6\u6d41\u64cd\u4f5c\u3002\u5411DPDK\u548cMellanox\u62a5\u544a\u4e86\u8be5\u9519\u8bef\u53ca\u5176\u4fee\u590d\uff0c\u5e76\u63a5\u53d7\u4e86\u8be5\u8865\u4e01\u3002\n\u907f\u514d\u8c03\u7528\u4e0a\u8ff0\u4efb\u4f55\u7cfb\u7edf\u8c03\u7528\u7684C\u5e93\u51fd\u6570\uff0c\u6216\u8005\u627e\u51fa\u89e3\u51b3\u529e\u6cd5\u4ee5\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e9bC\u5e93\u8c03\u7528\u3002\u4f8b\u5982\uff0cFile*C\u5e93\u8c03\u7528\u53ef\u4ee5\u4e0e\u4f7f\u7528setvbuf(3)\u8bbe\u7f6e\u7684\u7528\u6237\u7f13\u51b2\u533a\u4e00\u8d77\u4f7f\u7528\u3002\nTLB\u51fb\u843d\u7684\u5f71\u54cd\u968f\u7740\u5185\u6838\u548c\u63d2\u69fd\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u56e0\u4e3a\u51fb\u843d\u7684\u542f\u52a8\u5668\u5185\u6838\u5fc5\u987b\u7b49\u5f85\u5b83\u5411\u5176\u53d1\u9001IPI\u7684\u6240\u6709\u5185\u6838\u7684\u786e\u8ba4\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u7531\u4e8eTLB\u51fb\u843d\u53cc\u63d2\u69fd\u673a\u5668\u5bfc\u81f4\u7684\u4e22\u5305\u7387\u8f83\u4f4e\uff0c\u8be5\u673a\u5668\u7684\u5185\u6838\u6570\u91cf\u662f\u672c\u6587\u6240\u8ff0\u8bbe\u7f6e\u7684\u4e00\u534a\u3002\n\u201c\u8c01\u7167\u770b\u7740\u770b\u5b88\u4eba\uff1f\u201d\u6ce8\u610f\u60a8\u7684\u5ea6\u91cf\u5de5\u5177\u548c\u4ee3\u7801\u4f1a\u7ed9\u5173\u952e\u7ebf\u7a0b\u5e26\u6765\u66f4\u591a\u7684\u4e2d\u65ad\u548c\u6296\u52a8\u3002\u4f8b\u5982\uff0ctrace-cmd\u548cperf\u7b49\u5de5\u5177\u672c\u8eab\u4f7f\u7528IPI\u8fdb\u884c\u8ddf\u8e2a\u548c\u6d4b\u91cf\u3002", "note_en": "The demand for bandwidth is pushing network software vendors like  Niometrics to support 100GbE Network Interface Controllers (NICs). Our network probe uses Data Plane Development Kit ( DPDK) to bypass the Linux kernel and direct traffic to user space. This eliminates the overhead of NIC interrupts to achieve high bandwidth processing rates. The 100GbE NICs, however, brought new challenges. One of the issues we faced was that Interprocessor Interrupts ( IPIs) were causing sporadic packet drops at lower bandwidths with no apparent congestion. In the first part of this post we briefly discuss the different types of interrupts, interrupt handling hardware and the memory management unit. In the second part we offer a glimpse into troubleshooting, debugging and fixing issues due to the interrupt handling in multi-socket systems.\n  Before we start, a description of the hardware and software environment involved in this article:\n 6TB of memory (1 TB reserved for huge pages using   hugepagesz=1G and   hugepages=1024 kernel command line arguments to reserve 256 1G huge pages per socket)\n    All critical cores are isolated and made jitter-free (almost) using   isolcpus,   nohz_full,   rcu_nocbs and   rcu_nocb_poll kernel command line parameters\n   In a network probe using  DPDK, packet reception is handled by RX threads in polling mode. These threads constantly poll the NIC RX rings for packets in a tight loop. Interrupts \u201cinterrupt\u201d the execution of user space tasks by causing a context switch to kernel space to handle the interrupt. This introduces jitter which is too rare to affect throughput, but on 100GbE NICs it can cause packet drops. Increasing the NIC RX ring size (or the number of RX rings) can mitigate this, but not always.\n   Before we describe how each type affects a high performance system, let\u2019s take a look under the hood of the APIC.\n  APIC stands for   Advanced Programmable Interrupt Controller. In x86\u201364 systems, interrupts are handled by:\n   The per CPU local APIC receives interrupts and sends these to the processor core for handling. Interrupts can come from the processor\u2019s interrupt pins, internal sources and an external I/O APIC (or other external interrupt controller).\n In Symmetric Multiprocessing (SMP) systems, the local APIC sends and receives  IPI messages to and from other logical processors on the system bus.  IPI messages can be used to distribute interrupts among the processors in the system or to execute system-wide functions (such as booting up processors or distributing work among a group of processors).\n  The I/O APIC is part of Intel\u2019s system chip set which receives external interrupt events from the system and its associated I/O devices and relays them to the local APIC as interrupt messages.\n In SMP systems, the I/O APIC also provides a mechanism for distributing external interrupts to the local APICs of selected processors or groups of processors on the system bus.\n   We use the    irqbalance daemon to move all external interrupts handling away from isolated cores participating in packet processing to a set of cores reserved for the purpose of interrupt handling. This ensures external interrupts do not cause jitter for tasks on isolated cores. It also ensures IRQ affinity is assigned cores \u201cclosest\u201d to the NUMA node of device. The   IRQBALANCE_BANNED_CPUS environment variable must be set to the mask of isolated cores to ensure no interrupts are assigned to them. Following are some examples to illustrate this.\n        Prior to kernel 2.6.21, the timer tick ran on every core at the rate of CONFIG_HZ (by default, 1000/sec).\n Tickless kernel (in kernels 2.6.21+) disabled the kernel timer tick on idle cores. The scheduling-clock interrupt is used to force a busy core to schedule multiple tasks, and an idle core has no tasks to schedule so it does not require the scheduling-clock interrupt.\n The   nohz_full kernel command line parameter (introduced in kernel 3.9+) is an optimisation on top of the tickless kernel that extends the tickless behaviour to cores which have only one running task. There is still a need to schedule a tick every second for process management operations like calculating core load, maintaining scheduling average, etc.\n   Interprocessor interrupts allow a CPU to send interrupt signals to any other CPU in the system. They are defined by the   BUILD_INTERRUPT macro in  arch/x86/include/asm/entry_arch.h. For SMP kernels, \u201csmp_\u201d is prepended to the function name. E.g., for   BUILD_INTERRUPT(call_function_interrupt, CALL_FUNCTION_VECTOR) the call function interrupt vector is handled by  smp_call_function_interrupt(). An interrupt is raised by calling functions pointed to by  send_IPI_all( ), send_IPI_allbutself( ), send_IPI_self( ), send_IPI_mask_allbutself() &amp; send_IPI_mask() function pointers.\n     The Call Function Interrupt is an  IPI which can be sent to many CPUs. It is raised by calling  native_send_call_func_ipi().\n The Call Function Single Interrupt is an  IPI which can be sent to one CPU at a time. It is raised by calling  native_send_call_func_single_ipi().\n   The TLB shootdown is a special type of CAL interrupt which has its own counter, the TLB line in  /proc/interrupts. The CAL counter does not include TLB shootdowns.\n To understand the purpose of TLB shootdown interrupts, we need to briefly discuss how paging works, because they are used for supporting paging on multiprocessors systems.\n   Logical addresses \u2014 Included in the machine language instructions. It consists of segment and offset.\n Linear addresses (virtual addresses) \u2014 A single 48-bit unsigned integer that can be used to address up to 256TB.\n The paging unit of the MMU (Memory Management Unit) converts linear addresses to physical addresses. The diagrams below illustrate the linear address translation to a 4KB page vs a 1GB page.\n  In brief, converting a linear address to a 4KB physical page address involves accessing 4 memory locations (PML4E, PDPTE, PDE &amp; PDE), while a 1GB physical page access involves accessing 2 memory locations (PML4E &amp; PDPTE). This is why accessing a 1GB huge page is faster than accessing a 4KB page and hence  recommended for use by  DPDK.\n  Translation Lookaside Buffers (TLB) are caches used to speed up linear address translation. When a linear address is used for the first time, the corresponding physical address is computed through  slow accesses to the paging tables in main memory. The physical address is then stored in a TLB entry so that further references to the same linear address can be quickly translated. In a multiprocessor system, each CPU has its own local TLB. Contrary to the hardware cache, the corresponding entries of the TLB need not be synchronised, because processes running on different CPUs may associate the same linear address with different physical ones.\n A TLB flush occurs when switching between 2 processes on same CPU. It does not occur when 2 processes share the same page tables (e.g. threads of same process). It does not occur when switching from a regular process to a kernel thread.\n On multiprocessor systems, when flushing the TLB on a CPU, the kernel must also flush the same TLB entry on the CPUs that are using the same set of page tables. This is done by TLB shootdown interrupts.\n   We now proceed with a retracing of the steps we went through in troubleshooting our interrupt-related performance problems.\n  We had to find the interrupts delivered to cores running the critical RX threads. This can be done by monitoring the interrupt counters for the cores. A simple script can be used to monitor  /proc/interrupts.\n   From the output of the script, we see that LOC is delivered once every second on a   nohz_full core running a single user thread. This is  expected. The TLB interrupts being delivered (6 interrupts/second) are the ones that need to be debugged further.\n     To determine the CPU+kernel function which processes the interrupt, we have to figure out where the interrupt counter is incremented. The interrupt counter symbol can be found here:  arch/x86/kernel/irq.c: arch_show_interrupts(). The handler is the function which increments the counter using inc_irq_stat(). In some cases there is only one interrupt handler. E.g. TLB shootdown handler is flush_tlb_func() (called by interrupt handler of CAL). In other cases we need to look further up the call stack to figure out what work is being done in interrupt. E.g. CAL interrupts can call one of many different functions.\n  Use \u201ctrace-cmd show\u201d to view output while recording with  trace-cmd. Use \u201ctrace-cmd report\u201d to view the output saved after  trace-cmd record finishes.\n   To see the cost of the interrupt handlers on the core, we can use  trace-cmd as follows.\n   From above output we can see that every second we get 7 context switches with 6 of them for the TLB shootdown  IPI handler taking up roughly 30\u201335 microseconds from critical RX thread. NOTE: TLB  IPI is a form of CAL  IPI hence its handler starts from smp_call_function_interrupt().\n   Time period in case of LOC \u2014 1/second on an isolated,   nohz_full core executing one thread only.\n I/O request in case of I/O interrupts \u2014 we shouldn\u2019t see these due to    irqbalance.\n CPU+kernel function which raises the interrupt in case of  IPI  Lookup the symbol of the interrupt vector and find the function raising the interrupt via call to send_IPI_* function.\n    From the above output, we can see that the system call of  munmap(2) is responsible for the TLB shootdown interrupt.\n Step 3 \u2014 Debug Code to Find Out What the Thread or Task Responsible for the Interrupt Is Doing\n  From above output, the  DPDK call for getting Mellanox NIC stats (using  FILE * operations) is responsible for the TLB shootdown interrupt!\n  From debug output above we discovered that the  munmap(2) was being called by  fclose(3) while reading the   out_of_buffer counter for the NIC which is the MLX5 PMD\u2019s   imiss counter. The packet drops which were happening sporadically were due to the read of the packet drop counter. To complicate matters even further these drops were counted by a different counter called   rx_discards_phy. Like Schr\u00f6edinger\u2019s famous thought experiment, these drops were not present until the drop counters were read.\n The  fscanf(3) call leads to the file being mmap\u2019ed. The subsequent  fclose(3) causes  munmap(2) to be called which releases the linear address associated with the physical address of file buffer from TLB by means of a TLB flush operation on the core calling  fclose(3). This also sends TLB shootdowns to all the cores executing threads (including critical RX threads) of the same process. The fix was to replace the file stream operations with  open(2)/ read(2)/ close(2) calls. The  bug and its fix were reported to  DPDK and Mellanox and the  patch was accepted.\n  Avoid C library functions which call any of the above system calls or figure out a workaround to continue using those C library calls. E.g. FILE * C library calls can be used with user buffer set using  setvbuf(3).\n The impact of TLB shootdowns increases with the number of cores and sockets, because the initiator core of the shootdown has to wait for acknowledgment from all the cores to which it sent the  IPI. We noticed fewer packet drops due to TLB shootdown on a 2-socket machine containing half of the number of cores of the setup described in this post.\n \u201cWho watches the watchmen?\u201d Be careful of your measurement tools and code introducing more interrupts and jitter to critical threads. E.g. Tools like  trace-cmd and  perf themselves use  IPIs for tracing and measurement.", "posttime": "2020-06-11 00:29:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u859b\u5b9a\u8c14,dinger,\u4e2d\u65ad", "title": "\u859b\u5b9a\u8c14\u4e22\u5305", "title_en": "Schr\u00f6dinger\u2019s Packet Drops", "transed": 1, "url": "https://medium.com/niometrics-tech-blog/schrodingers-packet-drops-e1556af3e228", "via": "", "real_tags": ["\u859b\u5b9a\u8c14", "dinger", "\u4e2d\u65ad"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006031, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PineTab\u9644\u5e26\u5b89\u88c5\u4e86UBports OS\u7248\u672c\u3002\u8bf7\u6ce8\u610f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6784\u5efa\u4ecd\u5904\u4e8e\u6d4b\u8bd5\u9636\u6bb5\uff0c\u867d\u7136\u5927\u591a\u6570\u6838\u5fc3\u529f\u80fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u67d0\u4e9b\u5143\u7d20\u4ecd\u5728\u8fdb\u884c\u4e2d\u3002\n\u7531\u4e8eCOVID19\u5927\u6d41\u884c\u5bfc\u81f4\u822a\u73ed\u51cf\u5c11\u548c\u56fd\u5bb6\u8fb9\u5883\u5173\u95ed\uff0cPineTab\u53ea\u80fd\u5355\u72ec\u8ba2\u8d2d\uff0c\u5176\u4ed6PINE64\u9879\u76ee\u9700\u8981\u5355\u72ec\u8ba2\u8d2d\u3002\n\u5f3a\u70c8\u5efa\u8bae\u5728\u5927\u6d41\u884c\u671f\u95f4\u9009\u62e9DHL\u5feb\u4ef6\uff0c\u7279\u522b\u662f\u6807\u51c6\u548c\u5feb\u4ef6\u4e4b\u95f4\u7684\u4ef7\u683c\u5dee\u8ddd\u8f83\u5c0f\u3002\n\u5c3a\u5bf8\uff1a258 mm x 170 mm x 11.2 mm(\u4ec5\u9650\u5e73\u677f\u7535\u8111)\uff1b262 mm x 180 mm x 21.1 mm(\u5e26\u952e\u76d8\u7684\u5e73\u677f\u7535\u8111)\u3002\nUSB\uff1a1x\u5168USB 2.0 A\u7c7b\u4e3b\u673a\u7aef\u53e3\u30011x\u5fae\u578bUSB OTG\u7aef\u53e3(\u53ef\u7528\u4f5c\u6162\u901f\u5145\u7535\u7aef\u53e3)\u3002\n\u7531\u4e8ePineTab\u5305\u542b\u9502\u79bb\u5b50\u7535\u6c60\uff0c\u56e0\u6b64PineTab\u8ba2\u5355\u7684\u53d1\u8d27\u5904\u7406\u65b9\u5f0f\u5c06\u4e0e\u5176\u4ed6Pine64\u4ea7\u54c1\u4e0d\u540c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u5141\u8bb8\u5c06PineTab\u4e0e\u5176\u4ed6Pine64\u4ea7\u54c1\u8ba2\u5355\u76f8\u7ed3\u5408\u7684\u539f\u56e0\u3002\u4e0d\u4fbf\u4e4b\u5904\uff0c\u656c\u8bf7\u539f\u8c05\u3002\n\u5c11\u91cf(1-3)\u50cf\u7d20\u7c98\u6ede\u6216\u6b7b\u50cf\u7d20\u662fLCD\u5c4f\u5e55\u7684\u7279\u5f81\u3002\u8fd9\u4e9b\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u4e0d\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u7f3a\u9677\u3002\n\u5728\u5b8c\u6210\u8d2d\u4e70\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u4ee5\u8fd9\u4e2a\u4ef7\u683c\u5411PINE64\u793e\u533a\u63d0\u4f9bPineTab\u4f5c\u4e3a\u793e\u533a\u670d\u52a1\u3002\u5982\u679c\u60a8\u8ba4\u4e3a\u4e00\u4e2a\u5fae\u5c0f\u7684\u4e0d\u6ee1\uff0c\u4f8b\u5982\u4e00\u4e2a\u6b7b\u50cf\u7d20\uff0c\u4f1a\u4fc3\u4f7f\u60a8\u63d0\u4ea4PayPal\u4e89\u8bae\uff0c\u90a3\u4e48\u8bf7\u4e0d\u8981\u8d2d\u4e70PineTab\u3002\u8c22\u8c22\u3002", "note_en": "The PineTab comes with UBports OS build installed. Please note that the OS build is still in a beta stage, and while most core functionality works, some elements remain a work-in-progress.\n Due to COVID19 pandemic causing reduce flight and country border closing, the PineTab can only order alone and other PINE64 items needs to be order separately.\n Strongly advise selecting DHL express shipment during pandemic time, especially the price gap between standard and express shipment is small.\n  Dimensions: 258mm x 170mm x 11.2mm (tablet alone); 262mm x 180mm x 21.1mm (tablet with keyboard)\n              USB: 1x full USB 2.0 Type A host port, 1x micro USB OTG port (can be use as slow charging port)\n       Since the PineTab contains a Lithium-ion battery, the shipment of PineTab orders will be handled differently from other Pine64 products. This is why we didn\u2019t allow combining the PineTab with other Pine64 product orders. Sorry for any inconvenience caused.\n Small numbers (1-3) of stuck or dead pixels are a characteristic of LCD screens. These are normal and should not be considered a defect.\n When fulfilling the purchase, please bear in mind that we are offering the PineTab at this price as a community service to PINE64 communities. If you think that a minor dissatisfaction, such as a dead pixel, will prompt you to file a PayPal dispute then please do not purchase the PineTab. Thank you.", "posttime": "2020-06-11 00:12:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u952e\u76d8,\u7535\u8111,tablet,pinetab", "title": "Pinetab-10.1\u82f1\u5bf8Linux\u5e73\u677f\u7535\u8111\uff0c\u5e26\u5206\u79bb\u5f0f\u80cc\u5149\u952e\u76d8", "title_en": "Pinetab \u2013 10.1\u2033 Linux Tablet with Detached Backlit Keyboard", "transed": 1, "url": "https://store.pine64.org/?product=pinetab-10-1-linux-tablet-with-detached-backlit-keyboard", "via": "", "real_tags": ["linux", "\u952e\u76d8", "\u7535\u8111", "tablet", "pinetab"]}, {"category": "", "categoryclass": "", "imagename": "0b735d0daac4fcbba8e0cad0b14e0a3b.jpg", "infoid": 1006030, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u50cf\u4e16\u754c\u4e0a\u6570\u4ee5\u5343\u8ba1\u7684\u5176\u4ed6\u98de\u884c\u5458\u4e00\u6837\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u4ed6\u4eec\u770b\u5230\u81ea\u5df1\u7684\u98de\u884c\u5192\u9669\u6d3b\u52a8\u6216\u591a\u6216\u5c11\u5730\u51cf\u5c11\u4e86\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u73b0\u5728\u662f\u65f6\u5019\u5347\u7ea7\u5230\u4e00\u67b6\u66f4\u8fd0\u52a8\u7684\u98de\u673a\u4e86\uff0c\u4e00\u67b6\u6709\u70b9\u523a\u6fc0\u7684\u98de\u673a\uff0c\u5f53\u4f60\u6ed1\u884c\u7ecf\u8fc7\u65f6\uff0c\u8fd9\u67b6\u98de\u673a\u53ef\u80fd\u4e5f\u4f1a\u6210\u4e3a\u4eba\u4eec\u5728\u5761\u9053\u4e0a\u6307\u7684\u4e1c\u897f\u3002\u55b7\u6c14\u5f0f\u6218\u9e1f\u600e\u4e48\u6837\uff1f\n\u4e54\u6069\u00b7\u5e03\u5170\u5207\u7279(Jon Blanchette)\uff0c\u524d\u901a\u7528\u6c7d\u8f66(General Motors)\u5de5\u7a0b\u5e08\u548c\u7f8e\u56fd\u6d77\u519b\u519b\u5b98\uff0c\u521a\u521a\u5c06\u4ed6\u7684\u7ecf\u5178\u7c73\u683c-17PF\u6218\u6597\u673a\u5728\u7ebd\u7ea6\u57c3\u5c14\u8fc8\u62c9\u6302\u724c\u51fa\u552e\u3002\u5e03\u5170\u5207\u7279\u4e8e1993\u5e74\u4ece\u6ce2\u5170\u5e9f\u589f\u4e2d\u83b7\u6551\uff0c\u4ed6\u82b1\u4e8615\u5e74\u65f6\u95f4\u5c06\u8fd9\u8258\u91d1\u5c5e\u5916\u58f3\u6539\u9020\u6210\u4e16\u754c\u4e0a\u552f\u4e00\u4e00\u67b6\u9002\u5408\u98de\u884c\u7684\u8fd9\u79cd\u578b\u53f7\u7684\u98de\u673a\u3002\u4ed6\u7684\u7c73\u683c\u6210\u4e3a\u4e86\u822a\u5c55\u660e\u661f\uff0c\u770b\u8d77\u6765\u548c60\u5e74\u524d\u7b2c\u4e00\u6b21\u5347\u7a7a\u65f6\u4e00\u6837\u98de\u884c\u3002\u4eca\u5929\uff0c\u4fee\u590d\u540e\u7684\u7c73\u683c-17PF\u53ef\u4ee5\u5b89\u5168\u5730\u6267\u884c\u5b8c\u6574\u7684\u7279\u6280\u98de\u884c\u7a0b\u5e8f\uff0c\u5305\u62ec\u5012\u98de\u548c\u7d27\u51d1\u76848-G\u8f6c\u5f2f\u3002\u8fd9\u662f\u5728\u5c3c\u4e9a\u52a0\u62c9\u96f7\u9706\u822a\u5c55\u671f\u95f4\u9a7e\u9a76\u8231\u5185\u7684\u666f\u8272\u3002\n\u7c73\u683c-17PF\u662f\u82cf\u8054\u7a7a\u519b\u548c\u671d\u9c9c\u7a7a\u519b\u572820\u4e16\u7eaa50\u5e74\u4ee3\u9a7e\u9a76\u7684\u6700\u521d\u7c73\u683c-15\u7684\u5347\u7ea7\uff0c\u662f\u7b2c\u4e00\u67b6\u80fd\u591f\u5728\u591c\u95f4\u548c\u6076\u52a3\u5929\u6c14\u4e0b\u98de\u884c\u7684\u82cf\u8054\u6218\u6597\u673a\u3002\u5728\u8d8a\u5357\u51b2\u7a81\u671f\u95f4\uff0c\u5317\u8d8a\u4e5f\u66fe\u4f7f\u7528\u7c73\u683c-17PF\u6765\u5bf9\u4ed8\u7f8e\u56fd\u6218\u6597\u673a\u3002\u7c73\u683c-17PF\u56e0\u5176\u673a\u52a8\u6027\u548c\u901f\u5ea6\u800c\u5907\u53d7\u559c\u7231\uff0c\u4e8b\u5b9e\u8bc1\u660e\u5b83\u662f\u7f8e\u56fdF-4\u5e7b\u5f71II\u7684\u53ef\u6015\u5bf9\u624b\u3002\u867d\u7136\u98de\u673a\u4e0d\u4f1a\u7a81\u7834\u97f3\u969c\uff0c\u4f46\u914d\u5907\u52a0\u529b\u71c3\u70e7\u5ba4\u768417\u53ef\u4ee5\u975e\u5e38\u63a5\u8fd1\u3002\u7c73\u683c-17PF\u4e00\u76f4\u5728\u670d\u5f79\uff0c\u76f4\u523020\u4e16\u7eaa60\u5e74\u4ee3\u521d\u88ab\u7c73\u683c21-13\u53d6\u4ee3\u3002\n\u201c\u5b83(\u7c73\u683c-17PF)\u4e00\u76f4\u662f\u6211\u4e00\u751f\u4e2d\u6700\u6709\u6fc0\u60c5\u7684\u9879\u76ee\uff0c\u201d\u5e03\u5170\u5207\u7279\u8bf4\u3002\u201c\u6211\u4e3a\u6211\u80fd\u7528\u8fd9\u67b6\u98de\u673a\u53d6\u5f97\u7684\u6210\u5c31\u611f\u5230\u65e0\u6bd4\u81ea\u8c6a\uff0c\u6211\u5e0c\u671b\u5b83\u80fd\u7ed9\u4e0b\u4e00\u4f4d\u673a\u4e3b\u5e26\u6765\u540c\u6837\u7684\u559c\u60a6\u548c\u6ee1\u8db3\u611f\u3002\u201d\u6709\u5173\u8fd9\u79cd\u7a00\u6709\u6218\u9e1f\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8054\u7cfb\u5f17\u62c9\u5fb7\u00b7\u5fb7\u62c9\u5179\u591a\u7ef4\u5947(Vlad Drazdovich)\uff0c\u7535\u5b50\u90ae\u4ef6\uff1avlad@redbanyan.com\u3002", "note_en": "Like thousands of other pilots around the world who have watched their flying adventures curtailed to one degree or another over the past few months, you might be thinking this is the time to step up to a sportier airplane, one with a bit of a kick to it, an airplane that might also be something people point to on the ramp when you taxi by. How about a jet warbird?\n Jon Blanchette, a former General Motors engineer and US Navy officer just put his classic MiG-17PF fighter up for sale in Elmira, New York. Rescued from a Polish scrapyard in 1993, Blanchette spent 15 years transforming the hulk of metal back into the only  airworthy copy of this airplane type anywhere in the world. His MiG became an airshow star that looks and flies as it did when it first took to the air six decades ago. Today, the restored MiG-17PF can safely perform a full aerobatic routine, including inverted flight and tight 8-G turns. Here\u2019s a  view from the cockpit during the Thunder of Niagara Airshow.\n The MiG-17PF is an upgrade of the original MiG-15 flown by the Soviet Air Force as well as the North Korean Air Force during the 1950s and was the first Soviet fighter capable of operating at night and during inclement weather. The MiG-17PF was also used by the North Vietnamese against US fighters during the Vietnam conflict. Loved for its maneuverability and speed, the MiG-17PF proved to be a fearsome opponent for the US F-4 Phantom II. Though the airplane won\u2019t break the sound barrier, the afterburner-equipped 17 can come pretty close. The MiG-17PF remained in service until replaced by the MiG 21-13, in the early 1960s.\n \u201cIt [the MiG-17PF] has been the biggest passion project of my life,\u201d Blanchette says. \u201cI am incredibly proud of what I was able to accomplish with this aircraft, and I hope that it will bring the same amount of joy and fulfillment to its next owner.\u201d More information on this rare warbird is available from Vlad Drazdovich at  vlad@redbanyan.com.", "posttime": "2020-06-11 00:11:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9002\u5408,airworthy,\u7f8e\u56fd", "title": "\u6700\u540e\u4e00\u67b6\u9002\u5408\u98de\u884c\u7684\u7c73\u683c-17\u5373\u5c06\u51fa\u552e", "title_en": "Last Airworthy MiG-17 Is Up for Sale", "transed": 1, "url": "https://www.flyingmag.com/story/aircraft/last-airworthy-mig-17-for-sale/", "via": "", "real_tags": ["\u9002\u5408", "airworthy", "\u7f8e\u56fd"]}, {"category": "", "categoryclass": "", "imagename": "d0bbbcf0ec5f1db4b54763c4697a0408.gif", "infoid": 1006029, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\u6280\u672f\u53d1\u5c55\u8fc5\u901f\u3002\u6539\u5584\u7684\u901f\u5ea6\u751a\u81f3\u66f4\u5feb\u3002\u7ed3\u679c\u4ee4\u4eba\u9707\u60ca\u3002\n3\u670818\u65e5\uff0c\u8c37\u6b4c\u5f00\u6e90\u4e86\u4ed6\u4eec\u7684EfficientDet\u5b9e\u73b0\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u540c\u89c4\u6a21\u7684\u5feb\u901f\u57f9\u8bad\u6a21\u578b\uff0c\u5176\u4e2d\u4e4b\u4e00\u63d0\u4f9b\u5b9e\u65f6\u8f93\u51fa\u30024\u670823\u65e5\uff0cAlexey Bochoviskiy\u7b49\u4eba\u3002\u5f00\u6e90\u7684YOLOv4\u30026\u67089\u65e5\uff0cGlenn Jocher\u5f00\u6e90\u5b9e\u73b0\u4e86YOLOv5\u3002\n\u8df3\u8fc7\u8fd9\u7bc7\u4fe1\u606f\u5e16\u5b50\uff0c\u76f4\u63a5\u8df3\u5230\u6211\u4eec\u7684YOLOv5\u6559\u7a0b\u3002\u51e0\u5206\u949f\u5185\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u60a8\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u4e0a\u62e5\u6709\u8bad\u7ec3\u6709\u7d20\u7684YOLOv5\u6a21\u578b\u3002\nYOLO(\u4f60\u53ea\u770b\u4e00\u6b21)\u662fPJ\u00b7\u96f7\u8fea(PJ Reddie)\u6700\u521d\u57282016\u5e74\u51fa\u7248\u7684\u4e00\u672c\u4e66\u4e2d\u521b\u9020\u7684\u4e00\u7cfb\u5217\u6a21\u7279\u3002YOLO\u578b\u53f7\u4ee5\u5176\u9ad8\u6027\u80fd\u548c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5c0f\u5de7\u800c\u81ed\u540d\u662d\u8457\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u6210\u4e3a\u5b9e\u65f6\u6761\u4ef6\u548c\u8bbe\u5907\u90e8\u7f72\u73af\u5883\u7684\u7406\u60f3\u5019\u9009\u8005\u3002\nPJ Reddie\u7684\u7814\u7a76\u56e2\u961f\u8d1f\u8d23\u968f\u540e\u63a8\u51faYOLOv2\u548cYOLOv3\uff0c\u8fd9\u4e24\u6b3e\u4ea7\u54c1\u5728\u6a21\u578b\u6027\u80fd\u548c\u6a21\u578b\u901f\u5ea6\u65b9\u9762\u90fd\u53d6\u5f97\u4e86\u6301\u7eed\u7684\u6539\u8fdb\u30022020\u5e742\u6708\uff0cPJ\u00b7\u96f7\u8fea(PJ Reddie)\u8868\u793a\uff0c\u4ed6\u5c06\u505c\u6b62\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u7814\u7a76\u3002\n2020\u5e744\u6708\uff0c\u963f\u5217\u514b\u8c22\u00b7\u535a\u5947\u79d1\u592b\u65af\u57fa\u3001\u7b80\u5065-\u59da\u671b\u548c\u5ed6\u5b8f\u6e90\u9a6c\u514b\u00b7\u5ed6\u5b8f\u6e90\u4ecb\u7ecd\u4e86YOLOv4\uff0c\u53d6\u5f97\u4e86\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6210\u679c\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cYOLOv4\u7684\u8bb8\u591a\u6539\u8fdb\u65e2\u6765\u81ea\u4e8e\u6a21\u578b\u67b6\u6784\uff0c\u4e5f\u6765\u81ea\u4e8e\u6539\u8fdb\u7684\u6570\u636e\u589e\u5f3a\u3002(\u6211\u4eec\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u5173\u4e8eYOLOv4\u7684\u7ec6\u76ee\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4e0a\u8bad\u7ec3\u4e00\u4e2aYOLOv4\u6a21\u578b\u3002)\u3002\nGlenn Jocher\u53d1\u5e03\u4e86YOLOv5\uff0c\u6709\u8bb8\u591a\u4e0d\u540c\u4e4b\u5904\u548c\u6539\u8fdb\u3002(\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cGlenn\u662f\u9a6c\u8d5b\u514b\u589e\u5f3a\u7684\u521b\u5efa\u8005\uff0c\u8fd9\u662f\u6539\u8fdb\u7684YOLOv4\u4e2d\u5305\u542b\u7684\u4e00\u9879\u6280\u672f\u3002)\u3002\u6b64\u6b21\u53d1\u5e03\u7684YOLOv5\u5305\u62ec\u4e94\u79cd\u4e0d\u540c\u578b\u53f7\u5c3a\u5bf8\uff1aYOLOv5s(\u6700\u5c0f)\u3001YOLOv5m\u3001YOLOv5l\u3001YOLOv5x(\u6700\u5927)\u3002\n\u9996\u5148\uff0c\u8fd9\u662fYOLO\u7cfb\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7528PyTorch\u800c\u4e0d\u662fPJ Reddie\u7684Darknet\u7f16\u5199\u7684\u539f\u751f\u7248\u672c\u3002\u201c\u6697\u7f51\u201d\u662f\u4e00\u4e2a\u975e\u5e38\u7075\u6d3b\u7684\u7814\u7a76\u6846\u67b6\uff0c\u4f46\u5b83\u5728\u6784\u5efa\u65f6\u5e76\u6ca1\u6709\u8003\u8651\u5230\u751f\u4ea7\u73af\u5883\u3002\u5b83\u7684\u7528\u6237\u793e\u533a\u8f83\u5c0f\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u5bfc\u81f4Darknet\u7684\u914d\u7f6e\u66f4\u5177\u6311\u6218\u6027\uff0c\u751f\u4ea7\u5c31\u7eea\u7a0b\u5ea6\u66f4\u4f4e\u3002\n\u56e0\u4e3aYOLOv5\u6700\u521d\u662f\u5728PyTorch\u4e2d\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u5b83\u53d7\u76ca\u4e8e\u5df2\u5efa\u7acb\u7684PyTorch\u751f\u6001\u7cfb\u7edf\uff1a\u652f\u6301\u66f4\u7b80\u5355\uff0c\u90e8\u7f72\u4e5f\u66f4\u5bb9\u6613\u3002\u6b64\u5916\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u5e7f\u4e3a\u4eba\u77e5\u7684\u7814\u7a76\u6846\u67b6\uff0c\u5728YOLOv5\u4e0a\u8fed\u4ee3\u5bf9\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7814\u7a76\u793e\u533a\u6765\u8bf4\u53ef\u80fd\u66f4\u5bb9\u6613\u3002\u8fd9\u4e5f\u4f7f\u5f97\u90e8\u7f72\u5230\u79fb\u52a8\u8bbe\u5907\u53d8\u5f97\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u6a21\u578b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7f16\u8bd1\u6210ONNX\u548cCoreML\u3002\n\u5176\u6b21\uff0cYOLOv5\u7684\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5728\u8fd0\u884c\u7279\u65af\u62c9P100\u7684YOLOv5Colab\u7b14\u8bb0\u672c\u4e0a\uff0c\u6211\u4eec\u770b\u5230\u6bcf\u5f20\u56fe\u50cf\u7684\u63a8\u65ad\u65f6\u95f4\u9ad8\u8fbe0.007\u79d2\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u79d2140\u5e27\uff01\u76f8\u6bd4\u4e4b\u4e0b\uff0cYOLOv4\u5728\u8f6c\u6362\u4e3a\u76f8\u540c\u7684Ultralytics PyTorch\u5e93\u540e\u8fbe\u5230\u4e8650FPS\u3002\n\u7b2c\u4e09\uff0cYOLOv5\u662f\u51c6\u786e\u7684\u3002\u5728\u6211\u4eec\u5bf9\u8840\u7ec6\u80de\u8ba1\u6570\u548c\u68c0\u6d4b(Bccd)\u6570\u636e\u96c6\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5728\u4ec5\u8bad\u7ec3\u4e86100\u4e2a\u7eaa\u5143\u540e\uff0c\u8fbe\u5230\u4e86\u5927\u7ea60.895\u7684\u5e73\u5747\u5e73\u5747\u7cbe\u5ea6(MAP)\u3002\u8bda\u7136\uff0c\u6211\u4eec\u5728EfficientDet\u548cYOLOv4\u4e2d\u770b\u5230\u4e86\u7c7b\u4f3c\u7684\u6027\u80fd\uff0c\u4f46\u5728\u51c6\u786e\u5ea6\u4e0a\u6ca1\u6709\u4efb\u4f55\u635f\u5931\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u5c11\u80fd\u770b\u5230\u5982\u6b64\u5168\u9762\u7684\u6027\u80fd\u6539\u8fdb\u3002\n\u7b2c\u56db\uff0cYOLOv5\u5f88\u5c0f\u3002\u5177\u4f53\u5730\u8bf4\uff0cYOLOv5\u7684\u6743\u91cd\u6587\u4ef6\u662f27\u5146\u5b57\u8282\u3002\u6211\u4eec\u7684YOLOv4(\u91c7\u7528Darknet\u67b6\u6784)\u7684\u6743\u91cd\u6587\u4ef6\u662f244\u5146\u5b57\u8282\u3002YOLOv5\u6bd4YOLOv4\u5c0f\u8fd190%\u3002\u8fd9\u610f\u5473\u7740YOLOv5\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u90e8\u7f72\u5230\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u51fa\u7248\u4e86\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\u4e0a\u57f9\u8badYOLOv5\u7684\u6307\u5357\uff0c\u4f7f\u5b83\u53d8\u5f97\u53c8\u5feb\u53c8\u5bb9\u6613\u3002\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u6807\u51c6\u7684\u53ef\u53ef\u91cd\u91cf\uff0c\u8bf7\u53c2\u9605\u6b64\u7b14\u8bb0\u672c\u3002\n\u60f3\u6210\u4e3a\u7b2c\u4e00\u4e2a\u4e86\u89e3\u65b0\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6559\u7a0b\u548c\u5185\u5bb9(\u5982\u6211\u4eec\u7684\u5408\u6210\u6570\u636e\u96c6\u521b\u5efa\u6307\u5357)\u7684\u4eba\u5417\uff1f\u8ba2\u9605\u6211\u4eec\u7684\u66f4\u65b0\ud83d\udcec\u3002\nRoboFlow\u901a\u8fc7\u81ea\u52a8\u6279\u6ce8\u8d28\u91cf\u4fdd\u8bc1\u3001\u901a\u7528\u6279\u6ce8\u683c\u5f0f\u8f6c\u6362(\u5982Pascal VOC XML\u5230COCO JSON\u548c\u521b\u5efaTFRecords)\u3001\u56e2\u961f\u5171\u4eab\u548c\u7248\u672c\u63a7\u5236\uff0c\u4ee5\u53ca\u4e0e\u6d41\u884c\u7684\u5f00\u6e90\u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u578b\u7684\u8f7b\u677e\u96c6\u6210\uff0c\u52a0\u901f\u4e86\u60a8\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5de5\u4f5c\u6d41\u7a0b\u3002\u5f00\u59cb\u4f7f\u7528\u60a8\u7684\u7b2c\u4e00\u4e2a1000\u5f20\u56fe\u50cf\u662f\u5b8c\u5168\u514d\u8d39\u7684\u3002", "note_en": "Realtime object detection is improving quickly. The  rate of improvement is improving even more quickly. The results are stunning.\n On March 18, Google  open sourced their implementation of  EfficientDet, a fast-training model with various sizes, one of which offers realtime output. On April 23, Alexey Bochoviskiy et al.  open sourced  YOLOv4. On June 9, Glenn Jocher  open sourced an implementation of  YOLOv5.\n Skip this info post and jump straight to our  YOLOv5 tutorial. You&#39;ll have a trained YOLOv5 model on your custom data in minutes.\n  YOLO (You Only Look Once) is a family of models that PJ Reddie originally coined with a 2016  publication. YOLO models are infamous for being highly performant yet incredibly small \u2013 making them ideal candidates for realtime conditions and on-device deployment environments.\n PJ Reddie&#39;s research team is responsible for subsequently introducing YOLOv2 and  YOLOv3, both of which made continued improvement in both model performance and model speed. In February 2020, PJ Reddie noted he would discontinue research in computer vision.\n In April 2020, Alexey Bochkovskiy, Chien-Yao Wang, and Hong-Yuan Mark Liao introduced  YOLOv4, demonstrating impressive gains.\n  Notably, many of YOLOv4&#39;s improvements came from improved  data augmentation as much as model architecture. (We&#39;ve written a  breakdown on YOLOv4 as well as  how to train a YOLOv4 model on custom objects.)\n  Glenn Jocher released  YOLOv5 with a number of differences and improvements. (Notably, Glenn is the creator of mosaic augmentation, which is an included technique in what improved YOLOv4.) The  release of YOLOv5 includes five different models sizes: YOLOv5s (smallest), YOLOv5m, YOLOv5l, YOLOv5x (largest).\n  First, this is the first native release of models in the YOLO family to be written in PyTorch first rather than PJ Reddie&#39;s Darknet. Darknet is an incredibly flexible research framework, but it is not built with production environments in mind. It has a smaller community of users. Taken together, this results in Darknet being more challenging to configure and less production-ready.\n Because YOLOv5 is implemented in PyTorch initially, it benefits from the established PyTorch ecosystem: support is simpler, and deployment is easier. Moreover as a more widely known research framework, iterating on YOLOv5 may be easier for the broader research community. This also makes deploying to mobile devices simpler as the model can be compiled to ONNX and CoreML with ease.\n Second, YOLOv5 is fast \u2013 blazingly fast. In a  YOLOv5 Colab notebook, running a Tesla P100, we saw inference times up to 0.007 seconds per image, meaning  140 frames per second (FPS)! By contrast, YOLOv4 achieved 50 FPS after having been converted to the same Ultralytics PyTorch library.\n Third, YOLOv5 is accurate. In our tests on the  blood cell count and detection (BCCD) dataset, we achieved roughly 0.895 mean average precision ( mAP) after training for just 100 epochs. Admittedly, we saw comparable performance from EfficientDet and YOLOv4, but it is rare to see such across-the-board performance improvements without any loss in accuracy.\n Fourth, YOLOv5 is small. Specifically, a weights file for YOLOv5 is 27 megabytes. Our weights file for YOLOv4 (with Darknet architecture) is 244 megabytes.  YOLOv5 is nearly 90 percent smaller than YOLOv4. This means YOLOv5 can be deployed to embedded devices much more easily.\n     To that end, we&#39;ve published a guide on  how to train YOLOv5 on a custom dataset, making it quick and easy. If you would like to use standard COCO weights, see  this notebook.\n        Want to be the first to know about new  computer vision tutorials\t\t\t\t\tand content like our\t\t\t\t\t synthetic dataset creation guide?\t\t\t\t\t Subscribe to our updates \ud83d\udcec.\n  Roboflow accelerates your computer vision workflow through automated annotation\t\t\t\t\tquality assurance, universal annotation format conversion (like\t\t\t\t\t\t PASCAL VOC XML to COCO JSON and\t\t\t\t\t\t creating TFRecords\t\t\t\t\t), team sharing and versioning, and easy integration with popular\t\t\t\t\t open source computer vision models.\t\t\t\t\tGetting started with your first 1000 images are completely free.", "posttime": "2020-06-11 00:08:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bf9\u8c61,state,yolov5", "title": "YOLOv5\u5728\u8fd9\u91cc\uff1a140 FPS\u7684\u6700\u5148\u8fdb\u7684\u5bf9\u8c61\u68c0\u6d4b", "title_en": "YOLOv5 Is Here: State-of-the-Art Object Detection at 140 FPS", "transed": 1, "url": "https://blog.roboflow.ai/yolov5-is-here/", "via": "", "real_tags": ["\u5bf9\u8c61", "state", "yolov5"]}, {"category": "", "categoryclass": "", "imagename": "04c8023e6809f5bc529b194a453bdf45.jpg", "infoid": 1006028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u768412\u4e2a\u6708\u91cc\uff0c\u82f1\u7279\u5c14\u6162\u6162\u5f00\u59cb\u62ab\u9732\u5176\u9996\u4e2a\u6df7\u5408x86\u5e73\u53f0Lakefield\u7684\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u6b3e\u65b0\u5904\u7406\u5668\u7ed3\u5408\u4e86\u4e00\u4e2a\u201c\u5927\u201dCPU\u6838\u5fc3\u548c\u56db\u4e2a\u201c\u5c0f\u201dCPU\u6838\u5fc3\uff0c\u4ee5\u53ca\u5927\u91cf\u7684\u663e\u5361\uff0c\u82f1\u7279\u5c14\u5c06\u63a8\u51fa\u4e00\u79cd\u65b0\u7684\u8ba1\u7b97\u5916\u5f62\u89c4\u683c\u3002\u8fd9\u6b3e\u5904\u7406\u5668\u7684\u4eae\u70b9\u5305\u62ec\u5176\u5360\u5730\u9762\u79ef\u5c0f\uff0c\u8fd9\u662f\u7531\u4e8e\u65b0\u76843D\u5806\u53e0\u201cFoveros\u201d\u6280\u672f\uff0c\u4ee5\u53ca\u5176\u4f4e\u5f85\u673aSoC\u529f\u8017\uff0c\u4f4e\u81f32.5 mW\uff0c\u82f1\u7279\u5c14\u79f0\u8fd9\u6bd4\u4ee5\u524d\u7684\u4f4e\u529f\u8017\u82f1\u7279\u5c14\u5904\u7406\u5668\u4f4e91%\u3002\u4eca\u5929\u7684\u516c\u544a\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\uff0c\u89c4\u8303\u3002\n\u82f1\u7279\u5c14\u5c06\u5728\u5176\u7b2c\u4e00\u4ee3Lakefield\u4e2d\u9996\u6b21\u4eae\u76f8\u8fd9\u4e24\u4e2aSKU\u3002\u8fd9\u4e9bCPU\u5c06\u5728\u9ad8\u7aef\u3001\u59cb\u7ec8\u8054\u7f51\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u627e\u5230\u5f52\u5bbf\uff0c\u6bd4\u5982\u9884\u8ba1\u5c06\u4e8e\u672c\u6708\u4e0a\u5e02\u7684\u4e09\u661fGalaxy Book S\uff0c\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5c06\u63a8\u51fa\u7684\u8054\u60f3ThinkPad X1 Fold\uff0c\u4ee5\u53ca\u5fae\u8f6fSurface Book Neo\u3002\n\u8fd9\u4e24\u4e2aSKU\u90fd\u5c06\u914d\u5907\u4e00\u4e2a\u5927\u7684\u2018Sunny Cove\u2019CPU\u6838\u5fc3\uff0c\u4ee5\u53ca\u56db\u4e2a\u5c0f\u7684\u2018Tremont\u2019Atom CPU\u6838\u5fc3\u3002\u8fd9\u4e24\u7ec4\u5185\u6838\u90fd\u53ef\u4ee5\u8bbf\u95ee4MB\u7684\u672b\u7ea7\u9ad8\u901f\u7f13\u5b58\uff0c\u5c3d\u7ba1\u82f1\u7279\u5c14\u5c1a\u672a\u62ab\u9732\u8fd9\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u9ad8\u901f\u7f13\u5b58\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u56fe\u5f62\u65b9\u9762\uff0c\u82f1\u7279\u5c14\u6b63\u5728\u96c6\u6210\u5177\u670964\u4e2a\u6267\u884c\u5355\u5143\u7684Gen11 GPU\uff0c\u4e0e\u82f1\u7279\u5c14\u7684Ice Lake\u5904\u7406\u5668\u4e0a\u7684EU\u6570\u91cf\u76f8\u540c\u3002\u6709\u8da3\u7684\u662f\uff0cIGPU\u7684\u65f6\u949f\u901f\u5ea6\u5927\u7ea6\u662f\u82f1\u7279\u5c14GPU\u901a\u5e38\u7684\u4e00\u534a\uff0c\u65f6\u949f\u901f\u5ea6\u7684\u5cf0\u503c\u4ec5\u4e3a500 MHz-\u8fd9\u8868\u660e\u82f1\u7279\u5c14\u5728\u63d0\u9ad8\u56fe\u5f62\u6027\u80fd\u65b9\u9762\u8d70\u5f97\u65e2\u5e7f\u53c8\u6162\u3002\u4e24\u4e2aCPU\u7684\u989d\u5b9aTDP\u5747\u4e3a7 W\u3002\n\u82f1\u7279\u5c14\u5411\u6211\u4eec\u8bc1\u5b9e\uff0c\u57fa\u9891\u662f\u6240\u6709\u4e94\u4e2a\u5185\u6838\u7684\u7edf\u4e00\u9891\u7387\uff0c\u5355\u6838\u6da1\u8f6e\u9891\u7387\u53ea\u9002\u7528\u4e8e\u5927\u7684Sunny Cove\u5185\u6838\u3002\u5bf9LPDDR4X-4266\u7684\u652f\u6301\u6bd4Ice Lake\u4e2d\u7684\u5185\u5b58\u63a7\u5236\u5668\u9ad8\u51fa\u4e00\u4e2a\u6863\u6b21\uff0c\u540e\u8005\u53ea\u5728LPDDR4X-3733\u4e0a\u8fd0\u884c\uff0c\u5185\u5b58\u901f\u5ea6\u53ef\u80fd\u4f1a\u5927\u5927\u63d0\u9ad8\u6027\u80fd\u3002\n\u4e3a\u4e86\u5728\u8f83\u5c0f\u768412 mm x 12 mm\u7a7a\u95f4\u5185\u652f\u6301\u8fd9\u4e9b\u5904\u7406\u5668\uff0c\u82f1\u7279\u5c14\u6b63\u5728\u4f7f\u7528\u5176\u540d\u4e3aFoveros\u76843D\u5806\u53e0\u6280\u672f\u3002\u8fd9\u610f\u5473\u7740\u82af\u7247\u7684\u903b\u8f91\u533a\u57df(\u5982\u5185\u6838\u548c\u56fe\u5f62)\u4f4d\u4e8e10+nm\u82af\u7247\u4e0a\uff0c\u800c\u82af\u7247\u7684IO\u90e8\u5206\u4f4d\u4e8e22 nm\u7845\u82af\u7247\u4e0a\uff0c\u5e76\u4e14\u5b83\u4eec\u5806\u53e0\u5728\u4e00\u8d77\u3002\u4e3a\u4e86\u4f7f\u8fde\u63a5\u6b63\u5e38\u5de5\u4f5c\uff0c\u82f1\u7279\u5c14\u5728\u4e24\u4e2a\u534a\u7845\u4e4b\u95f4\u542f\u7528\u4e8650\u5fae\u7c73\u7684\u8fde\u63a5\u57ab\uff0c\u4ee5\u53ca\u7535\u6e90\u96c6\u4e2d\u7684TSV(\u901a\u8fc7\u7845\u901a\u5b54)\uff0c\u4ee5\u4fbf\u4e3a\u9876\u5c42\u7684\u5185\u6838\u4f9b\u7535\u3002\n\u82f1\u7279\u5c14\u5217\u51fa\u7684\u8fd9\u4e9b\u82af\u7247\u7684TDP\u4e3a7W\uff0c\u5c3d\u7ba1\u8be5\u516c\u53f8\u5c1a\u672a\u62ab\u9732\u8be5\u82af\u7247\u7684\u6da1\u8f6e\u529f\u7387\u9650\u5236\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u82f1\u7279\u5c14\u6ca1\u6709\u900f\u9732\u9ad8\u901f\u7f13\u5b58\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5728\u6700\u521d\u7684\u56fe\u8868\u4e2d\uff0c\u6211\u4eec\u770b\u5230POP\u5185\u5b58\u5c06\u88ab\u6dfb\u52a0\u5230\u9876\u90e8\uff0c\u867d\u7136\u82f1\u7279\u5c14\u6ca1\u6709\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282\uff0c\u4f46\u6211\u4eec\u4ece\u4e0a\u4e2a\u6708\u7684\u4e09\u661fGalaxy Book S\u4e2d\u5f97\u77e5\uff0c\u5c06\u6709(\u81f3\u5c11)8 GB\u7684SKU\u4f7f\u7528LPDDR4X\u3002\n\u8003\u8651\u5230\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u652f\u6301\u4e0d\u540c\u7684\u6307\u4ee4\u96c6\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5185\u6838\u5c06\u5982\u4f55\u5de5\u4f5c\u6709\u5f88\u5927\u7684\u7591\u95ee-\u82f1\u7279\u5c14\u76ee\u524d\u8fd8\u6ca1\u6709\u63d0\u4f9b\u8fd9\u65b9\u9762\u7684\u4fe1\u606f\u3002\u82f1\u7279\u5c14\u5df2\u7ecf\u58f0\u660e\uff0cCPU\u4e0d\u540c\u90e8\u5206\u4e0a\u7684\u7ebf\u7a0b\u8c03\u5ea6\u5c06\u57fa\u4e8e\u786c\u4ef6\u5f15\u5bfc\u7684\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u8fdb\u884c\uff0c\u5c3d\u7ba1\u82f1\u7279\u5c14\u8fd8\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u5176\u786c\u4ef6\u8ddf\u8e2a\u548c\u542f\u7528\u7684\u7ec6\u8282\uff0c\u8bf4\u660e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5728\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u7684\u6f14\u793a\u4e2d\uff0cLakefield\u51e0\u4e4e\u6240\u6709\u4e8b\u60c5\u90fd\u5c06\u4f7f\u7528Tremont\u5185\u6838\uff0c\u5e76\u4e14\u53ea\u8c03\u7528Sunny Cove\u5185\u6838\u8fdb\u884c\u7528\u6237\u4f53\u9a8c\u7c7b\u578b\u7684\u4ea4\u4e92\uff0c\u4f8b\u5982\u6253\u5b57\u6216\u4e0e\u5c4f\u5e55\u4ea4\u4e92\u3002\n\u82f1\u7279\u5c14\u6b63\u8ba1\u5212\u5728\u53d1\u5e03\u540e\u4e3e\u884c\u7b80\u62a5\u4f1a\uff0c\u4f9b\u5a92\u4f53\u63d0\u95ee\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e00\u58f0\u660e\u5c06\u5206\u4e24\u90e8\u5206\u53d1\u5e03\u3002\u8fd9\u662f\u6211\u4eec\u4e8b\u5148\u5f97\u5230\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u901a\u62a5\u516c\u544a\u540e\u7b80\u62a5\u4f1a\u7684\u8be6\u7ec6\u60c5\u51b5\u3002\u4f5c\u4e3a\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5411\u82f1\u7279\u5c14\u60ca\u547c\uff0c\u8fd9\u79cd\u5411\u5a92\u4f53\u5c55\u793a\u7ec6\u8282\u7684\u65b9\u5f0f\u662f\u591a\u4e48\u4ee4\u4eba\u6cae\u4e27-\u9996\u5148\u662f\u5bf9\u8bfb\u8005\u6765\u8bf4\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u4eec\u60f3\u4e86\u89e3\u82f1\u7279\u5c14\u4eca\u5929\u665a\u4e9b\u65f6\u5019\u544a\u8bc9\u6211\u4eec\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u4f60\u4eec\u90fd\u5fc5\u987b\u56de\u6765\uff1b\u5176\u6b21\u5bf9\u4e8e\u6211\u4eec\uff0c\u4f5c\u4e3a\u5a92\u4f53\uff0c\u4ed6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4e89\u5148\u6050\u540e\u5730\u8df3\u5230\u7ec6\u8282\u4e0a\uff0c\u51b3\u5b9a\u662f\u5199\u5f97\u5feb\u800c\u9519\u8fc7\u7ec6\u8282\uff0c\u8fd8\u662f\u5199\u5f97\u6162\u800c\u9519\u8fc7\u6d41\u91cf\u7684\u6d6a\u6f6e\u3002\n\u6709\u4e00\u4ef6\u4e8b\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u786e\u8ba4-Sunny Cove\u4f3c\u4e4e\u6ca1\u6709\u542f\u7528AVX-512\u3002\u82f1\u7279\u5c14\u6700\u521d\u7684\u65b0\u95fb\u7a3f\u6307\u51fa\uff0c\u4eba\u5de5\u667a\u80fd\u5de5\u4f5c\u8d1f\u8f7d\u53d1\u751f\u5728CPU\u4e0a\uff1b\u8003\u8651\u5230AVX-512\u6240\u9700\u7684\u989d\u5916\u529f\u8017\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\n\u53d1\u8868\u8bc4\u8bba\u6ca1\u6709\uff0ci3-L13G4\uff0ci5-L16G7\u4ed6\u4eec\u53ea\u662f\u968f\u610f\u629b\u51fa\u6570\u5b57\u548c\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u6570\u5b57\u548c\u5b57\u6bcd\u5728\u4ed6\u4eec\u7684\u540d\u5b57\u4e2d\u5e76\u4e0d\u4ee3\u8868\u4efb\u4f55\u4e1c\u897f--\u662f\u4ec0\u4e48\u8ba9\u4ed6\u4eec\u7684\u540d\u5b57\u53d8\u6210\u4e8613\u800c\u4e0d\u662f16\uff1f\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u662fG4\uff0c\u53e6\u4e00\u4e2a\u662fG7\uff1f\u4ed6\u4eec\u771f\u7684\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u4e8e\u6e56\u7684\u5730\u8d28\u7279\u5f81\uff0c\u4f46\u90a3\u662f\u53e6\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\u56de\u8986\u3002\n\u6211\u5bf9\u8fd9\u4e2aCPU\u975e\u5e38\u611f\u5174\u8da3\uff0c\u53ef\u80fd\u4f1a\u628a\u6211\u7684E6430\u5347\u7ea7\u5230\u4e00\u4e2a\uff0c\u4f46\u6211\u4f1a\u7b49\u7b2c\u4e8c\u4ee3\uff0c\u8fd9\u6837\u82f1\u7279\u5c14\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u56de\u8986", "note_en": "Over the past 12 months, Intel has slowly started to disclose information about its first hybrid x86 platform, Lakefield. This new processor combines one \u2018big\u2019 CPU core with four \u2018small\u2019 CPU cores, along with a hefty chunk of graphics, with Intel setting out to deliver a new computing form factor. Highlights for this processor include its small footprint, due to new 3D stacking \u2018Foveros\u2019 technology, as well as its low standby SoC power, as low as 2.5 mW, which Intel states is 91% lower than previous low power Intel processors. Today\u2019s announcement comes in two parts: first, the specifications.\n    Intel will debut these two SKUs in its first generation of Lakefield. These CPUs will find homes in premium, always-connected laptops, such as the  Samsung Galaxy Book S expected in markets this month, the  Lenovo ThinkPad X1 Fold, coming later this year, and in the  Microsoft Surface Book Neo.\n  Both SKUs will feature one big \u2018Sunny Cove\u2019 CPU core, along with four little \u2018Tremont\u2019 Atom CPU cores. Both sets of cores will have access to a 4 MB last level cache, although Intel has not yet disclosed what sort of cache this is.\n  Meanwhile on the graphics front, Intel is integrating a Gen11 GPU with 64 execution units, the same number of EUs as on Intel&#39;s Ice Lake processors. Interestingly, the iGPU is clocked about half as high as usual for an Intel GPU, with clockspeeds peaking at just 500 MHz \u2013 suggesting that Intel is going wide and slow to increase graphics performance. Both CPUs will be rated for a TDP of 7 W.\n    Intel confirmed to us that the base frequency is the unified frequency across all five cores, and the single core turbo frequency applies only to the big Sunny Cove core. Support for LPDDR4X-4266 is a notch above the memory controller in Ice Lake, which only runs at LPDDR4X-3733, and the memory speed will likely be a big boost to performance.\n    In order to enable these processors in a small 12mm x 12mm footprint, Intel is using its 3D stacking technology, called Foveros. This means that the logic areas of the chip, such as the cores and the graphics, sit on a 10+ nm die, while the IO parts of the chip are on a 22nm silicon die, and they are stacked together. In order to make the connections work, Intel has enabled 50 micron connection pads between the two silicon halves, along with power-focused TSVs (through silicon vias) in order to power the cores on the top layer.\n    Intel lists the TDP for these chips at 7 W, although the company has not disclosed the turbo power limits for the chip. As mentioned above, Intel hasn\u2019t disclosed how the cache works. In the initial diagrams, we were shown that PoP memory would be added on top, and while Intel hasn&#39;t offered further details there, we know from last month&#39;s Samsung Galaxy Book S reveal that there will be (at least) 8GB SKUs using LPDDR4X.\n  We have big questions as to how each of the cores will work, given that by default they support different instruction sets \u2013 Intel hasn\u2019t provided information on this at this time. Intel has stated that the scheduling of the threads on the different parts of the CPU will occur based on hardware-guided OS scheduling, although again Intel hasn\u2019t gone into the details of its hardware tracking and enablement on how this is done. In the demos we have seen, Lakefield will use the Tremont cores for almost everything, and only call on the Sunny Cove core for user-experience type of interactions, such as typing or interacting with the screen.\n    Intel is planning a post-announcement briefing for press to ask questions, which means that this announcement is coming in two parts. This is the information we\u2019re being given beforehand, and we will update you with the details from the post-announcement briefing. As part of this process, we\u2019ve exclaimed to Intel how this way around of presenting details to the press is frustrating \u2013 firstly for readers, as you all will have to come back if you want to find out what more Intel tells us later today, but secondly for us, as press, who will have to scramble to jump on the details and decide whether to write fast and miss details, or write slow and miss the wave of traffic.\n  One thing we can confirm in advance \u2013 the Sunny Cove does not appear to be AVX-512 enabled. Intel\u2019s initial press release states that AI workloads occur on the CPU; given the extra power draw required for AVX-512, this is probably a good thing.\n  POST A COMMENT      no, i3-L13G4, i5-L16G7 they just throw random numbers and letters that don&#39;t represent anything in their names - what makes it the 13 vs the 16? why is one a G4 and the other a G7?  they really need a geological feature other than &#34;Lake&#34; too, but that&#39;s another issue...  Reply\n    I am very interested in this CPU, will probably upgrade my e6430 to one but I&#39;ll wait for a second generation so intel can iron out the issues.  Reply", "posttime": "2020-06-11 00:03:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,\u516c\u5e03,discloses", "title": "\u82f1\u7279\u5c14\u516c\u5e03\u83b1\u514b\u83f2\u5c14\u5fb7CPU\u89c4\u683c\uff1a64 EU\uff0c\u6700\u9ad83.0 GHz\uff0c7W", "title_en": "Intel Discloses Lakefield CPUs Specifications: 64 EUs, up to 3.0 GHz, 7 W", "transed": 1, "url": "https://www.anandtech.com/show/15841/intel-discloses-lakefield-cpus-specifications-64-execution-units-up-to-30-ghz-7-w", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u516c\u5e03", "discloses"]}, {"category": "", "categoryclass": "", "imagename": "465e9b77163e296ff410db1c160fadd6.jpeg", "infoid": 1006027, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8def\u900f\u65e7\u91d1\u5c718\u670823\u65e5\u7535-\u4e00\u7fa4\u7f8e\u56fd\u8bae\u5458\u6b63\u51c6\u5907\u4e0e\u9488\u5bf9\u52a0\u5bc6\u901a\u4fe1\u7684\u7acb\u6cd5\u653b\u51fb\u4f5c\u6597\u4e89\uff0c\u4ed6\u4eec\u6b63\u8bd5\u56fe\u786e\u5b9a\u7845\u8c37\u4e00\u5bb6\u7f51\u7edc\u8bbe\u5907\u5236\u9020\u5546\u7684\u52a0\u5bc6\u88ab\u98a0\u8986\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48.\u3002\n\u53c2\u8bae\u9662\u60c5\u62a5\u59d4\u5458\u4f1a\u6210\u5458\u3001\u6c11\u4e3b\u515a\u4eba\u7f57\u6069\u00b7\u6000\u767b(Ron Wyden)\u8868\u793a\uff0c2015\u5e74\u6851\u5c3c\u7ef4\u5c14\u77bb\u535a\u7f51\u7edc(Juniper Networks)\u53d1\u751f\u7684\u4e8b\u4ef6\u53ef\u80fd\u4f1a\u5728\u9884\u8ba1\u5c31\u62df\u8bae\u7acb\u6cd5\u4e3e\u884c\u542c\u8bc1\u4f1a\u4e4b\u524d\uff0c\u63ed\u793a\u52a0\u5bc6\u6cc4\u9732\u7684\u98ce\u9669\u3002\n\u201c\u8d5a\u53d6IT\u6cd5\u6848\u201d\u53ef\u80fd\u4f1a\u60e9\u7f5a\u90a3\u4e9b\u63d0\u4f9b\u6267\u6cd5\u90e8\u95e8\u4e0d\u6613\u6e17\u900f\u7684\u5b89\u5168\u4fdd\u969c\u7684\u516c\u53f8\u3002\nWyden\u544a\u8bc9\u8def\u900f\uff1a\u201c\u53f8\u6cd5\u90e8\u957f(William)Barr\u8981\u6c42\u50cfFacebook\u8fd9\u6837\u7684\u516c\u53f8\u5f31\u5316\u52a0\u5bc6\uff0c\u4ee5\u5141\u8bb8\u53f8\u6cd5\u90e8\u76d1\u63a7\u7528\u6237\u7684\u5bf9\u8bdd.\u201d\n\u201c\u56fd\u4f1a\u548c\u7f8e\u56fd\u4eba\u6c11\u5fc5\u987b\u4e86\u89e3\u4e0e\u524a\u5f31\u4fdd\u62a4\u7f8e\u56fd\u4eba\u4e2a\u4eba\u6570\u636e\u4ee5\u53ca\u653f\u5e9c\u548c\u4f01\u4e1a\u7cfb\u7edf\u7684\u52a0\u5bc6\u76f8\u5173\u7684\u4e25\u91cd\u56fd\u5bb6\u5b89\u5168\u98ce\u9669\u3002\u201d\n\u5728\u5468\u4e8c\u665a\u95f4\u53d1\u7ed9Juniper\u9996\u5e2d\u6267\u884c\u5b98\u62c9\u7c73\u00b7\u62c9\u5e0c\u59c6(Rami Rahim)\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0c\u6000\u767b\u3001\u53f8\u6cd5\u59d4\u5458\u4f1a\u5171\u548c\u515a\u53c2\u8bae\u5458\u8fc8\u514b\u00b7\u674e(Mike Lee)\u4ee5\u53ca\u4f17\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u548c\u56fd\u571f\u5b89\u5168\u59d4\u5458\u4f1a\u4e3b\u5e2d\u8be2\u95ee\uff0cJuniper\u57282015\u5e74\u53d1\u73b0\u5176\u5e7f\u6cdb\u4f7f\u7528\u7684NetScreen\u5b89\u5168\u8f6f\u4ef6\u4e2d\u5b58\u5728\u201c\u672a\u7ecf\u6388\u6743\u7684\u4ee3\u7801\u201d\u540e\u5ba3\u5e03\u7684\u4e00\u9879\u8c03\u67e5\u53d1\u751f\u4e86\u4ec0\u4e48\u60c5\u51b5\u3002\n\u4e0d\u4e45\u4e4b\u540e\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u6709\u95ee\u9898\u7684\u4ee3\u7801\u6539\u53d8\u4e86\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(National Security Agency)\u79d8\u5bc6\u8bbe\u8ba1\u7684\u5b89\u5168\u673a\u5236\u7684\u4e00\u90e8\u5206\uff0c\u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u8be5\u673a\u5236\u5305\u542b\u4e00\u4e2a\u95f4\u8c0d\u540e\u95e8\uff0c\u5373\u6240\u8c13\u7684\u53cc\u91cd\u692d\u5706\u66f2\u7ebf(Dual Elliptic Curve)\u3002\nJuniper\u5728\u7231\u5fb7\u534e\u00b7\u65af\u8bfa\u767b(Edward Snowden)\u6cc4\u9732\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(NSA)\u7684\u65b9\u6cd5\u540e\u88ab\u66dd\u5149\u4e4b\u524d\uff0c\u5c31\u5305\u62ec\u4e86NSA\u7684\u6280\u672f\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5185\u90e8\u6216\u5916\u90e8\u9ed1\u5ba2\u5c06\u8fd9\u91cc\u7684\u94a5\u5319\u5207\u6362\u5230\u540e\u95e8\uff0c\u4ece\u800c\u8fdb\u5165\u7528\u6237\u6d41\u91cf\u3002\nJuniper\u6ca1\u6709\u56de\u5e94\u5bf9\u8fd9\u5c01\u4fe1\u6216\u5176\u8c03\u67e5\u72b6\u51b5\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u8bb8\u591a\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u5305\u62ec\u8be5\u516c\u53f8\u4e3a\u4ec0\u4e48\u91c7\u7528\u8fd9\u9879\u6280\u672f\uff0c\u7f8e\u56fd\u95f4\u8c0d\u80fd\u591f\u901a\u8fc7\u5b83\u6536\u96c6\u5230\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6709\u591a\u5c11\u7f8e\u56fd\u653f\u5e9c\u548c\u5546\u4e1a\u5ba2\u6237\u5728\u7b2c\u4e8c\u8f6e\u95f4\u8c0d\u6d3b\u52a8\u4e2d\u53d7\u5230\u76d1\u63a7\u3002\n\u201cJuniper\u7684\u7ecf\u5386\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u5173\u4e8e\u540e\u95e8\u5371\u9669\u7684\u6709\u4ef7\u503c\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u4ee5\u53ca\u653f\u5e9c\u540e\u95e8\u663e\u7136\u53ef\u4ee5\u8f7b\u6613\u5730\u88ab\u8001\u7ec3\u7684\u6f14\u5458\u79d8\u5bc6\u98a0\u8986\uff0c\u201d\u5f53\u9009\u5b98\u5458\u5728\u7ed9Juniper\u7684\u4fe1\u4e2d\u5199\u9053\u3002", "note_en": "SAN FRANCISCO (Reuters) - A group of U.S. lawmakers preparing to fight a legislative attack on encrypted communications is trying to establish what happened when encryption was subverted at a Silicon Valley maker of networking gear.\n  Democrat Ron Wyden, who sits on the Senate Intelligence Committee, said the 2015 incident at Sunnyvale-based Juniper Networks could shed light on the risks of compromised encryption before an expected hearing on the proposed legislation.\n The EARN IT Act could penalize companies that offer security that law enforcement can\u2019t easily penetrate.\n \u201cAttorney General (William) Barr is demanding that companies like Facebook weaken their encryption to allow the Department of Justice to monitor users\u2019 conversations,\u201d Wyden told Reuters.\n \u201cCongress and the American people must understand the serious national security risks associated with weakening the encryption that protects Americans\u2019 personal data, as well as government and corporate systems.\u201d\n In a letter to Juniper Chief Executive Rami Rahim sent late Tuesday, Wyden, Republican Senator Mike Lee of the Judiciary Committee, and the chairmen of the House Judiciary and Homeland Security committees asked what had happened to an investigation Juniper announced after it found \u201cunauthorized code\u201d inside its widely used NetScreen security software in 2015.\n Soon after, reseachers discovered the code in question had changed one part of a security mechanism secretly designed by the National Security Agency and widely believed to contain a back door for spying, known as Dual Elliptic Curve.\n Juniper included the NSA technology before its exposure in the wake of Edward Snowden&#39;s leaks about the agency&#39;s method. Some time later, insiders or outside hackers switched the key  here to the back door, giving access to user traffic.\n  Juniper did not respond to a request for comment on the letter or the status of its investigation.\n Many questions remain, including why the company adopted the technology, what U.S. spies were able to glean through it, and how many U.S. government and commercial customers were monitored in the second round of espionage.\n \u201cJuniper\u2019s experiences can provide a valuable case study about the dangers of back doors, as well as the apparent ease with which government back doors can be covertly subverted by a sophisticated actor,\u201d the elected officials wrote to Juniper.", "posttime": "2020-06-10 23:46:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u52a0\u5bc6,seeks,juniper", "title": "\u56fd\u4f1a\u5728\u52a0\u5bc6\u6597\u4e89\u4e2d\u5bfb\u6c42Juniper Networks\u6cc4\u5bc6\u4e8b\u4ef6\u7684\u7b54\u6848", "title_en": "Congress Seeks Answers on Juniper Networks Breach Amid Encryption Fight", "transed": 1, "url": "https://www.reuters.com/article/us-juniper-encryption-congress/congress-seeks-answers-on-juniper-networks-breach-amid-encryption-fight-idUSKBN23H2C9", "via": "", "real_tags": ["\u52a0\u5bc6", "seeks", "juniper"]}, {"category": "", "categoryclass": "", "imagename": "b6f39a121cc1f8966f3f65b8206ee07c.png", "infoid": 1006026, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u65cb\u8f6c\u5730\u7403\u6765\u63a2\u7d22\u5b9e\u51b5\u5e7f\u64ad\u3002", "note_en": "Explore live radio by rotating the globe.", "posttime": "2020-06-10 23:45:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u4ee5\u5343\u8ba1,thousands,\u5730\u7403", "title": "\u5728\u7ebf\u6536\u542c\u6570\u4ee5\u5343\u8ba1\u7684\u5e7f\u64ad\u7535\u53f0", "title_en": "Listen to thousands of radio stations online", "transed": 1, "url": "http://radio.garden", "via": "", "real_tags": ["\u6570\u4ee5\u5343\u8ba1", "thousands", "\u5730\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006024, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81eaCMOSedu.com\u7684\u4e0d\u826f\u7535\u8def\u8bbe\u8ba1\u6559\u7a0b\u793a\u4f8b", "note_en": "Tutorial\r\rExamples of Bad Circuit Design from CMOSedu.com", "posttime": "2020-06-10 23:44:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u9519\u8bef,circuit,\u6559\u7a0b", "title": "\u9519\u8bef\u7684\u7535\u8def\u8bbe\u8ba1", "title_en": "Bad Circuit Design", "transed": 1, "url": "http://cmosedu.com/cmos1/bad_design/bad_design.htm", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u9519\u8bef", "circuit", "\u6559\u7a0b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1006023, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u5229\u7528\u6570\u636e\u53d1\u73b0\u63cf\u8ff0\u590d\u6742\u7269\u7406\u7cfb\u7edf\u884c\u4e3a\u7684\u57fa\u672c\u652f\u914d\u5b9a\u5f8b\u6216\u65b9\u7a0b\uff0c\u53ef\u4ee5\u6781\u5927\u5730\u4fc3\u8fdb\u6211\u4eec\u5728\u5404\u79cd\u79d1\u5b66\u548c\u5de5\u7a0b\u5b66\u79d1\u4e2d\u5bf9\u6b64\u7c7b\u7cfb\u7edf\u7684\u5efa\u6a21\u3001\u6a21\u62df\u548c\u7406\u89e3\u3002\u7a00\u758f\u8bc6\u522b\u7684\u6700\u65b0\u8fdb\u5c55\u8868\u660e\uff0c\u5728\u4ece\u5e7f\u6cdb\u7684\u975e\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf\u7684\u6570\u636e\u4e2d\u63d0\u53d6\u95ed\u5408\u5f62\u5f0f\u7684\u63a7\u5236\u65b9\u7a0b\u65b9\u9762\u53d6\u5f97\u4e86\u4ee4\u4eba\u9f13\u821e\u7684\u6210\u529f\u3002\u7136\u800c\uff0c\u8be5\u65b9\u6cd5\u7684\u6839\u672c\u74f6\u9888\u5728\u4e8e\u5bf9\u6570\u636e\u7a00\u7f3a\u6027\u548c\u566a\u58f0\u7684\u9c81\u68d2\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002\u8fd9\u9879\u5de5\u4f5c\u4ecb\u7ecd\u4e86\u4e00\u79cd\u65b0\u7684\u7269\u7406\u4fe1\u606f\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u7528\u4e8e\u4ece\u7a00\u7f3a\u548c\u6709\u566a\u58f0\u7684\u6570\u636e\u4e2d\u53d1\u73b0\u975e\u7ebf\u6027\u65f6\u7a7a\u7cfb\u7edf\u7684\u63a7\u5236\u504f\u5fae\u5206\u65b9\u7a0b(PDE)\u3002\u7279\u522b\u662f\uff0c\u8be5\u65b9\u6cd5\u65e0\u7f1d\u5730\u96c6\u6210\u4e86\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e30\u5bcc\u8868\u793a\u5b66\u4e60\u3001\u81ea\u52a8\u5fae\u5206\u548c\u7a00\u758f\u56de\u5f52\u7684\u4f18\u70b9\uff0c\u4ee5\u903c\u8fd1\u7cfb\u7edf\u53d8\u91cf\u7684\u89e3\uff0c\u8ba1\u7b97\u672c\u8d28\u5bfc\u6570\uff0c\u4ee5\u53ca\u8bc6\u522b\u6784\u6210\u504f\u5fae\u5206\u65b9\u7a0b\u7ed3\u6784\u548c\u663e\u5f0f\u8868\u8fbe\u5f0f\u7684\u5173\u952e\u5bfc\u6570\u9879\u548c\u53c2\u6570\u3002\u5728\u53d1\u73b0\u4e0d\u540c\u7a0b\u5ea6\u7684\u6570\u636e\u7a00\u7f3a\u548c\u566a\u58f0\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u7cfb\u7edf\u4e0a\uff0c\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u548c\u9c81\u68d2\u6027\u3002\u7531\u6b64\u4ea7\u751f\u7684\u8ba1\u7b97\u6846\u67b6\u663e\u793a\u4e86\u5c01\u95ed\u5f0f\u6a21\u578b\u53d1\u73b0\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6f5c\u529b\uff0c\u5728\u8fd9\u4e9b\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5f88\u96be\u6355\u6349\u5230\u5927\u800c\u51c6\u786e\u7684\u6570\u636e\u96c6\u3002", "note_en": "Download PDF  Abstract: Harnessing data to discover the underlying governing laws or equations thatdescribe the behavior of complex physical systems can significantly advance ourmodeling, simulation and understanding of such systems in various science andengineering disciplines. Recent advances in sparse identification showencouraging success in distilling closed-form governing equations from data fora wide range of nonlinear dynamical systems. However, the fundamentalbottleneck of this approach lies in the robustness and scalability with respectto data scarcity and noise. This work introduces a novel physics-informed deeplearning framework to discover governing partial differential equations (PDEs)from scarce and noisy data for nonlinear spatiotemporal systems. In particular,this approach seamlessly integrates the strengths of deep neural networks forrich representation learning, automatic differentiation and sparse regressionto approximate the solution of system variables, compute essential derivatives,as well as identify the key derivative terms and parameters that form thestructure and explicit expression of the PDEs. The efficacy and robustness ofthis method are demonstrated on discovering a variety of PDE systems withdifferent levels of data scarcity and noise. The resulting computationalframework shows the potential for closed-form model discovery in practicalapplications where large and accurate datasets are intractable to capture.", "posttime": "2020-06-10 23:26:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learning,\u7cfb\u7edf", "title": "\u4ece\u7a00\u7f3a\u6570\u636e\u4e2d\u6df1\u5165\u5b66\u4e60\u7269\u7406\u89c4\u5f8b", "title_en": "Deep learning of physical laws from scarce data", "transed": 1, "url": "https://arxiv.org/abs/2005.03448", "via": "", "real_tags": ["\u5b66\u4e60", "learning", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "347ed51b8220e92c179cc85fb6d4cbfc.jpg", "infoid": 1006022, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u514d\u8d39\u63d0\u4f9b\u4e86\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u8fd9\u4e00\u91cd\u8981\u4fe1\u606f\u3002\u8981\u83b7\u5f97\u66f4\u591a\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u514d\u8d39\u62a5\u9053\uff0c\u8bf7\u8ba2\u9605\u6211\u4eec\u7684\u51a0\u72b6\u75c5\u6bd2\u66f4\u65b0\u65f6\u4e8b\u901a\u8baf\uff0c\u6240\u6709\u6545\u4e8b\u90fd\u53ef\u4ee5\u514d\u8d39\u9605\u8bfb\u3002\n\u968f\u7740\u5168\u7403\u8303\u56f4\u5185\u65b0\u7684\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u6570\u91cf\u6301\u7eed\u589e\u52a0\uff0c\u5341\u51e0\u4e2a\u5dde\u548c\u6ce2\u591a\u9ece\u5404\u6b63\u5728\u8bb0\u5f55\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\u65b0\u75c5\u4f8b\u7684\u6700\u9ad8\u5e73\u5747\u6c34\u5e73\uff0c\u81ea\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4ee5\u6765\uff0c\u81f3\u5c11\u6709\u4e5d\u4e2a\u5dde\u7684\u4f4f\u9662\u4eba\u6570\u4e00\u76f4\u5728\u4e0a\u5347\u3002\n\u5728\u5f97\u514b\u8428\u65af\u5dde\u3001\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u548c\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u3001\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3001\u4fc4\u52d2\u5188\u5dde\u3001\u963f\u80af\u8272\u5dde\u3001\u5bc6\u897f\u897f\u6bd4\u5dde\u3001\u72b9\u4ed6\u5dde\u548c\u4e9a\u5229\u6851\u90a3\u5dde\uff0c\u81ea\u5047\u65e5\u5468\u672b\u4ee5\u6765\uff0c\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\uff0c\u63a5\u53d7\u76d1\u7763\u62a4\u7406\u7684\u60a3\u8005\u6570\u91cf\u4e0d\u65ad\u589e\u52a0\u3002\u6da8\u5e45\u4e00\u822c\u4ece\u8fc7\u53bb\u51e0\u5468\u5f00\u59cb\uff0c\u5728\u5927\u591a\u6570\u5dde\u90fd\u6709\u4e0a\u5347\u7684\u8d8b\u52bf\u3002\n\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b(The Washington Post)\u8ffd\u8e2a\u7684\u6570\u636e\u663e\u793a\uff0c\u4e00\u4e9b\u5dde\u62a5\u544a\u7684\u65b0\u75c5\u4f8b\u8fbe\u5230\u4e86\u6700\u9ad8\u7684\u4e03\u5929\u5e73\u5747\u6c34\u5e73\uff0c\u8fd9\u4e9b\u5dde\u7684\u6570\u636e\u9a73\u65a5\u4e86\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u7f8e\u56fd\u7684\u75c5\u4f8b\u6570\u91cf\u4e4b\u6240\u4ee5\u5982\u6b64\u6fc0\u589e\uff0c\u5b8c\u5168\u662f\u56e0\u4e3a\u68c0\u6d4b\u7684\u6301\u7eed\u589e\u52a0\u3002\n\u5728\u8fd9\u4e9b\u75c5\u4f8b\u589e\u52a0\u7684\u5dde\u4e2d\uff0c\u8bb8\u591a\u5dde\u7684\u4f4f\u9662\u4eba\u6570\u4e5f\u6709\u6240\u589e\u52a0\uff0c\u5c11\u6570\u5dde\u4e5f\u63a5\u8fd1\u5e8a\u4f4d\u5bb9\u91cf\u3002\u5168\u56fd\u8303\u56f4\u5185\u7684\u4f4f\u9662\u4eba\u6570\u5f88\u96be\u8ffd\u8e2a\uff0c\u5404\u5dde\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u62a5\u544a\u4f4f\u9662\u6570\u5b57\uff0c\u6216\u8005\u6839\u672c\u4e0d\u62a5\u544a\u3002\u5373\u4f7f\u662f\u90a3\u4e9b\u786e\u5b9e\u62a5\u544a\u4e86\u4f4f\u9662\u6570\u5b57\u7684\u5dde\uff0c\u5728\u62a5\u544a\u65f6\u4e5f\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u4ece\u8be5\u5dde\u7684\u6bcf\u4e00\u5bb6\u533b\u9662\u6536\u5230\u5b8c\u6574\u7684\u6570\u636e\u3002\n\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u5df2\u7ecf\u62a5\u544a\u4e8675616\u4f8b\u75c5\u4f8b\uff0c\u5728\u8fc7\u53bb15\u5929\u4e2d\u768410\u5929\u91cc\uff0c\u8be5\u5dde7\u5929\u7684\u5e73\u5747\u65b0\u589e\u75c5\u4f8b\u6709\u6240\u589e\u52a0\u3002\n\u622a\u81f3\u5468\u4e8c\uff0c\u5b83\u5df2\u7ecf\u8fde\u7eed\u4e24\u5929\u62a5\u544a\u4e86\u7834\u7eaa\u5f55\u7684\u51a0\u72b6\u75c5\u6bd2\u4f4f\u9662\u6cbb\u7597\u3002\u81ea\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4ee5\u6765\uff0c\u8be5\u5dde\u7684\u65b0\u75c5\u4f8b\u589e\u52a0\u4e8636%\uff0c\u622a\u81f3\u5468\u4e8c\u4e0b\u5348\u65e9\u4e9b\u65f6\u5019\uff0c\u76ee\u524d\u4f4f\u9662\u4eba\u6570\u8fbe\u5230\u521b\u7eaa\u5f55\u76842056\u4eba\u3002\u8fd9\u4e00\u6570\u5b57\u9ad8\u4e8e\u5468\u4e001935\u4f8b\u4f4f\u9662\u4eba\u6570\u7684\u9ad8\u70b9\u3002\n\u5fb7\u514b\u8428\u65af\u5dde\u662f\u6700\u65e9\u653e\u677e\u5c45\u5bb6\u79e9\u5e8f\u7684\u5dde\u4e4b\u4e00\u30025\u6708\u521d\uff0c\u5546\u4e1a\u5f00\u59cb\u5f00\u653e\u3002\u6839\u636e\u5dde\u536b\u751f\u90e8\u7684\u6570\u636e\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u670928.14%\u7684\u53ef\u7528\u533b\u9662\u5e8a\u4f4d\u5f00\u653e\uff0c1723\u5f20\u53ef\u7528\u91cd\u75c7\u76d1\u62a4\u75c5\u623f\u5e8a\u4f4d\u3002\n\u5728\u4e9a\u5229\u6851\u90a3\u5dde\uff0c\u622a\u81f3\u5468\u4e8c\uff0c\u5df2\u62a5\u544a28296\u4f8b\u75c5\u4f8b\uff0c\u5728\u8fc7\u53bb15\u5929\u4e2d\uff0c\u8be5\u5dde7\u5929\u5e73\u5747\u65b0\u589e\u75c5\u4f8b\u670913\u4f8b\u6709\u6240\u589e\u52a0\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5929\u91cc\uff0c\u8be5\u5dde\u7684\u4f4f\u9662\u4eba\u6570\u521b\u4e0b\u4e86\u7eaa\u5f55\u3002\u622a\u81f3\u5468\u4e8c\uff0c\u4e9a\u5229\u6851\u90a3\u5dde\u62a5\u544a\u79f0\uff0c\u76ee\u524d\u67091243\u4eba\u4f4f\u9662\uff0c\u6bd4\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u589e\u52a0\u4e8649%\uff0c\u5f53\u65f6\u6709833\u4eba\u4f4f\u9662\u3002\n\u4e9a\u5229\u6851\u90a3\u5dde\u4e5f\u4e00\u76f4\u5728\u52aa\u529b\u89e3\u51b3\u5e8a\u4f4d\u5bb9\u91cf\u95ee\u9898\u3002\u5468\u4e94\uff0c\u7f8e\u56fd\u6700\u5927\u7684\u533b\u7597\u4fdd\u5065\u7cfb\u7edf\u4e4b\u4e00\u7684\u73ed\u7eb3\u5065\u5eb7\u516c\u53f8(Banner Health)\u8bc1\u5b9e\uff0c\u4e9a\u5229\u6851\u90a3\u5dde\u7684ICU\u5df2\u63a5\u8fd1\u9971\u548c\u3002\u6240\u6709\u4f4f\u9662\u7684\u4eba\u4e2d\u5927\u7ea6\u670950%\u5728\u73ed\u7eb3\u536b\u751f\u8bbe\u65bd\u3002\u6839\u636e\u5dde\u536b\u751f\u90e8\u7684\u6570\u636e\uff0c\u622a\u81f3\u5468\u4e00\uff0c\u4e9a\u5229\u6851\u90a3\u5dde\u6240\u6709ICU\u5e8a\u4f4d\u4e2d\u670976%\u5728\u4f7f\u7528\u4e2d\u3002\n\u963f\u80af\u8272\u5dde\u5df2\u7ecf\u62a5\u544a\u4e8610080\u4f8b\u75c5\u4f8b\uff0c\u5728\u8fc7\u53bb\u768415\u5929\u4e2d\uff0c\u8be5\u5dde7\u5929\u7684\u5e73\u5747\u65b0\u589e\u75c5\u4f8b\u670911\u5929\u6709\u6240\u589e\u52a0\u3002\u81ea\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4ee5\u6765\uff0c\u4f4f\u9662\u4eba\u6570\u589e\u52a0\u4e8688%\u3002\u963f\u80af\u8272\u5dde\u5468\u4e8c\u62a5\u544a\u6709173\u4eba\u4f4f\u9662\uff0c\u800c5\u670825\u65e5\u4e3a92\u4eba\u3002\n\u636e\u5f53\u5730\u62a5\u9053\uff0c\u5468\u4e00\u5168\u5dde\u7684\u533b\u9662\u4ecd\u7136\u4ea7\u80fd\u4e0d\u8db3\uff0c\u65b0\u7684\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u4e2d\u6ca1\u6709\u4e00\u4f8b\u4e0e\u8be5\u5dde\u6700\u8fd1\u7684\u6297\u8bae\u6d3b\u52a8\u6709\u5173\u3002\n\u5361\u7f57\u83b1\u7eb3\u5dde\u7684\u4f4f\u9662\u4eba\u6570\u4e5f\u6709\u6240\u4e0a\u5347\uff0c\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7684\u4f4f\u9662\u4eba\u6570\u5728\u5168\u56fd\u6392\u540d\u7b2c\u4e8c\uff0c\u4ec5\u6b21\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u3002\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u7684\u4e0a\u5347\u8d8b\u52bf\u59cb\u4e8e\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4e4b\u540e\u30025\u670826\u65e5\uff0c\u8be5\u5dde\u62a5\u544a\u4e86621\u4eba\u4f4f\u9662\u6cbb\u7597\uff0c\u4f46\u4e24\u5468\u540e\uff0c\u8fd9\u4e00\u6570\u5b57\u5df2\u6500\u5347\u81f3774\u4eba\u3002\n\u5728\u5357\u5361\u7f57\u6765\u7eb3\u5dde\uff0c\u5468\u4e00\u4f4f\u9662\u4eba\u6570\u6025\u5267\u589e\u52a0\u3002\u5728\u8fd924\u5c0f\u65f6\u5185\uff0c\u670930\u4eba\u65b0\u4f4f\u9662\uff0c\u62166%\u7684\u8dc3\u5347\uff0c\u603b\u8ba1507\u540d\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u3002\u6839\u636e\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u536b\u751f\u90e8\u7684\u6570\u636e\uff0c\u968f\u7740\u76ee\u524d\u7684\u6fc0\u589e\uff0c\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u768412\u4e2a\u53bf\u5df2\u7ecf\u8fbe\u5230\u533b\u9662\u5bb9\u91cf\u768475%\u6216\u66f4\u9ad8\u3002\n\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\uff0c\u5bc6\u897f\u897f\u6bd4\u5dde\u5df2\u7ecf\u62a5\u544a\u4e8618,109\u4f8b\u75c5\u4f8b\u3002\u5468\u4e8c\uff0c\u5b83\u8bb0\u5f55\u4e86671\u4eba\u4f4f\u9662\uff0c\u521b\u4e0b\u5355\u65e5\u65b0\u9ad8\u3002\u81ea\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4ee5\u6765\uff0c\u4f4f\u9662\u4eba\u6570\u589e\u52a0\u4e8617%\uff0c5\u670825\u65e5\u62a5\u544a\u7684\u4f4f\u9662\u4eba\u6570\u4e3a573\u4eba\u3002\n\u5728\u72b9\u4ed6\u5dde\uff0c\u65b0\u7684\u65b0\u51a0\u80ba\u708e\u75c5\u4f8b\u6b63\u5728\u4e0a\u5347\uff0c\u56e0\u6b64\uff0c\u4f4f\u9662\u4eba\u6570\u4e5f\u5728\u4e0a\u5347\u3002\u72b9\u4ed6\u5dde\u7684\u51a0\u72b6\u75c5\u6bd2\u5de5\u4f5c\u7ec4\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u8be5\u5dde\u51fa\u73b0\u4e86\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u7684\u6fc0\u589e\uff0c\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u68c0\u6d4b\u6216\u5355\u72ec\u7206\u53d1\u3002\n\u4e0e\u5176\u4ed6\u5730\u533a\u7c7b\u4f3c\uff0c\u81ea\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4ee5\u6765\uff0c\u72b9\u4ed6\u5dde\u7684\u4eba\u6570\u4e00\u76f4\u5728\u7a33\u6b65\u6500\u5347\uff0c\u56e0\u4e3a\u8fc7\u53bb15\u5929\u4e2d\uff0c\u65b0\u75c5\u4f8b\u76847\u5929\u5e73\u5747\u589e\u52a0\u4e8612\u5929\u3002\u5728\u8fd9\u4e24\u5468\u7684\u65f6\u95f4\u91cc\uff0c\u72b9\u4ed6\u5dde\u76ee\u524d\u7684\u4f4f\u9662\u4eba\u6570\u589e\u52a0\u4e86\u4e00\u500d\u591a\uff0c\u622a\u81f3\u5468\u4e8c\u4e0b\u5348\uff0c\u6709230\u540d\u60a3\u8005\u4e0e\u65b0\u51a0\u80ba\u708e\u4e00\u8d77\u4f4f\u9662\u3002\n\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u65c5\u6e38\u666f\u70b9\u5728\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u5468\u672b\u6324\u6ee1\u4e86\u4eba\u3002\u636e\u5f53\u5730\u5b98\u5458\u79f0\uff0c\u9887\u53d7\u6b22\u8fce\u7684\u5ea6\u5047\u76ee\u7684\u5730\u54c8\u74e6\u82cf\u6e56(Lake Havasu)\u4eba\u6ee1\u4e3a\u60a3\u3002\u5728\u5357\u5361\u7f57\u6765\u7eb3\u5dde\uff0c\u5305\u62ec\u52a8\u7269\u56ed\u3001\u6c34\u65cf\u9986\u548c\u6c34\u4e0a\u516c\u56ed\u5728\u5185\u7684\u8bb8\u591a\u5a31\u4e50\u573a\u6240\u83b7\u51c6\u5728\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u4e4b\u524d\u7684\u5468\u672b\u5f00\u653e\u3002\u5728\u5317\u5361\u7f57\u6765\u7eb3\u5dde\uff0c\u5728\u9635\u4ea1\u5c06\u58eb\u7eaa\u5ff5\u65e5\u5468\u672b\uff0c\u9910\u5385\u88ab\u5141\u8bb8\u4ee5\u51cf\u5c11\u7684\u5bb9\u91cf\u5f00\u653e\uff0c\u516c\u5171\u6e38\u6cf3\u6c60\u7684\u5bb9\u91cf\u8fbe\u523050%\u3002\n\u622a\u81f3\u5468\u4e8c\uff0c\u7f8e\u56fd\u5df2\u6709\u81f3\u5c11110,000\u4eba\u6b7b\u4e8e\u7531\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684\u65b0\u51a0\u80ba\u708e\uff0c\u5e76\u62a5\u544a\u4e86\u8fd1200\u4e07\u4f8b\u75c5\u4f8b\u3002", "note_en": "The Washington Post is providing this important information about the coronavirus for free.  For more free coverage of the coronavirus pandemic,  sign up for our Coronavirus Updates newsletter where all stories are free to read.\n As the number of new  coronavirus cases continues to increase worldwide, and more than a dozen states and Puerto Rico are recording their highest averages of new cases since the pandemic began, hospitalizations in at least nine states have been on the rise since Memorial Day.\n  In Texas, North and South Carolina, California, Oregon, Arkansas, Mississippi, Utah and Arizona, there are an increasing number of patients under supervised care since the holiday weekend because of coronavirus infections. The spikes generally began in the past couple weeks and in most states are trending higher.\n Data  from states that are reporting some of their highest seven-day averages of new cases is disproving the notion that the country is seeing such a spike in cases solely because of the continued increase in testing, according to data tracked by The Washington Post.\n   Many of these states that have experienced an increase in cases have also had an increase in hospitalizations, with a handful of states also nearing bed capacity. Hospitalizations nationwide are difficult to track, with states reporting hospitalization numbers in varying ways, or not at all. Even states that do report hospitalization numbers may not have always received complete data from every hospital in the state at the time of their reports.\n  Texas has reported 75,616 cases since the pandemic began, and in 10 of the past 15 days, the state\u2019s seven-day average of new cases has increased.\n As of Tuesday, it has reported two consecutive days of record-breaking coronavirus hospitalizations. The state has seen a 36 percent increase in new cases since Memorial Day, with a record 2,056 current hospitalizations as of early Tuesday afternoon. It was up from a high of 1,935 hospitalizations on Monday.\n   Texas was  one of the first states to relax their stay-at-home order. Businesses started to open up in early May. According to the  state\u2019s health department, Texas has 28.14 percent of available hospital beds open, and 1,723 available intensive care unit beds.\n In Arizona, 28,296 cases have been reported as of Tuesday, and in 13 of the past 15 days the state\u2019s seven-day average of new cases has increased. There have been a record number of hospitalizations in the state over the past few days. As of Tuesday, Arizona reported 1,243 current hospitalizations, a 49 percent increase since Memorial Day, when there were 833 hospitalizations.\n Arizona has also been struggling with its bed capacity. On Friday,  Banner Health, one of the largest health-care systems in the country, confirmed that ICUs in Arizona were nearing capacity. Roughly 50 percent of all those hospitalized are in Banner Health facilities. As of Monday, 76 percent of all ICU beds in Arizona were in use, according to data from the state health department.\n   Arkansas has reported 10,080 cases, and in 11 of the past 15 days the state\u2019s seven-day average of new cases has increased. It has had an 88 percent increase in hospitalizations since Memorial Day. Arkansas had 173 hospitalizations reported on Tuesday, compared with 92 on May 25.\n According to local reports, hospitals statewide remained below capacity on Monday, and none of the new coronavirus cases had been linked to recent protests in the state.\n   The Carolinas have also seen a rise in hospitalizations, with North Carolina experiencing the second-largest spike in the nation behind Texas. North Carolina\u2019s upward trend began after Memorial Day. On May 26, the state reported 621 hospitalizations but two weeks later, that number has climbed to 774.\n  In South Carolina, hospitalizations sharply increased Monday. In that 24-hour span, there were 30 new hospitalizations, or a 6 percent jump, for a total of 507 covid-19 patients. With the current spike, 12 counties in South Carolina have reached 75 percent of hospital capacity or greater, according to the state\u2019s health department.\n  Mississippi has reported 18,109 cases since the pandemic begin. On Tuesday, it recorded 671 hospitalizations, a new daily high. It has seen an 17 percent increase in hospitalizations since Memorial Day, with 573 reported on May 25.\n In Utah, new covid-19 cases are on the rise and as a result, so are hospitalizations. Utah\u2019s coronavirus task force  tweeted that the state has seen a spike in coronavirus cases, and it wasn\u2019t because of testing or a lone outbreak.\n  Similar to other regions, Utah\u2019s numbers have climbed steadily since Memorial Day, as the seven-day average of new cases has increased 12 of the past 15 days. Over that two-week span, Utah\u2019s current hospitalizations more than doubled, and as of Tuesday afternoon, 230 patients were hospitalized with covid-19.\n Arizona tourist sites were packed for Memorial Day weekend. Lake Havasu, a popular vacation destination, was full,  according to local officials. In South Carolina,  a host of entertainment venues, including zoos, aquariums and water parks, were allowed to open the weekend ahead of Memorial Day.  In North Carolina, restaurants were allowed to open at reduced capacity and public pools at 50 percent capacity during Memorial Day weekend.\n  As of Tuesday,  at least 110,000 people in the United States have died of covid-19, the disease caused by the coronavirus, and almost 2 million cases have been reported.", "posttime": "2020-06-10 23:25:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,hospitalizations,\u4f4f\u9662", "title": "\u51e0\u4e2a\u5dde\u7684\u51a0\u72b6\u75c5\u6bd2\u4f4f\u9662\u4eba\u6570\u6025\u5267\u4e0a\u5347", "title_en": "Coronavirus hospitalizations rise sharply in several states", "transed": 1, "url": "https://www.washingtonpost.com/health/2020/06/09/coronavirus-hospitalizations-rising/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u4f4f\u9662"]}, {"category": "", "categoryclass": "", "imagename": "57add38cae51799c2b333a4a8128d5cf.png", "infoid": 1006021, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Reddit\u662f\u4e00\u4e2a\u57fa\u4e8e\u4eba\u4eec\u5174\u8da3\u7684\u793e\u533a\u7f51\u7edc\u3002\u627e\u5230\u4f60\u611f\u5174\u8da3\u7684\u793e\u533a\uff0c\u6210\u4e3a\u5728\u7ebf\u793e\u533a\u7684\u4e00\u90e8\u5206\uff01", "note_en": "Reddit is a network of communities based on people's interests. Find communities you're interested in, and become part of an online community!", "posttime": "2020-06-10 23:25:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "reddit,\u793e\u533a", "title": "Reddit\u5df2\u5173\u95ed", "title_en": "Reddit Is Down", "transed": 1, "url": "https://www.reddit.com/", "via": "", "real_tags": ["reddit", "\u793e\u533a"]}, {"category": "", "categoryclass": "", "imagename": "3ffc85f55923938f43cc9d77af37ae68.png", "infoid": 1006019, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u5173\u4e8e\u591a\u4e91\u662f\u4e2a\u574f\u4e3b\u610f\u7684\u5206\u6790\u518d\u4e00\u6b21\u88ab\u7a81\u53d1\u65b0\u95fb\u63a8\u540e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAWS\u6b63\u5728\u6839\u636e\u524d\u9ad8\u7ba1\u5e03\u83b1\u6069\u00b7\u970d\u5c14(Brian Hall)\u7684\u7ade\u4e1a\u7981\u6b62\u534f\u8bae\u8d77\u8bc9\u4ed6\u3002\n\u6211\u8fc7\u53bb\u5df2\u7ecf\u8c08\u8fc7\u6211\u5bf9\u7ade\u4e1a\u7981\u6b62\u534f\u8bae\u7684\u770b\u6cd5-\u8fd9\u662f\u6211\u51e0\u5e74\u524d\u51b3\u5b9a\u62d2\u7eddAWS\u5de5\u4f5c\u9080\u8bf7\u7684\u5e55\u540e\u63a8\u624b-\u4f46\u6211\u60f3\u6839\u636e\u8fd9\u4e2a\u6848\u4f8b\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u534f\u8bae\u3002\n\u6211\u4eec\u5148\u6765\u62a5\u9053\u4e00\u4e0b\u76ee\u524d\u7684\u60c5\u51b5\u3002Brian(\u6211\u8ba4\u8bc6\u4ed6\uff0c\u6240\u4ee5\u6211\u4e0d\u80fd\u50cf\u6211\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8e\u7ade\u4e1a\u7981\u6b62\u7684\u6587\u7ae0\u4e2d\u63d0\u5230\u88ab\u544a\u90a3\u6837\u79f0\u547c\u4ed6\u4e3a\u201cSchmoo\u201d)\uff0c\u4ed6\u662fAWS\u7684\u4ea7\u54c1\u8425\u9500\u526f\u603b\u88c1\u3002\u4ed6\u4eceAWS\u8f9e\u804c\uff0c\u63a5\u53d7\u4e86\u8c37\u6b4c\u4e91\u4ea7\u54c1\u8425\u9500\u526f\u603b\u88c1\u7684\u5de5\u4f5c\u3002\u8fd9\u662f\u6bcb\u5eb8\u7f6e\u7591\u7684\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u4e9a\u9a6c\u900a\u7684\u5206\u5e03\u5f0f\u672c\u8d28\u662f\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u8fdb\u884c\u7684\u3002\u6d3e\u9063\u8d1f\u8d23AWS\u4ea7\u54c1\u8425\u9500\u7684\u4eba\u5728\u7ade\u4e89\u5bf9\u624b\u7684\u516c\u53f8\u62c5\u4efb\u540c\u6837\u7684\u804c\u4f4d\uff0c\u662f\u4e00\u79cd\u4ee4\u4eba\u53f9\u4e3a\u89c2\u6b62\u7684\u4f01\u4e1a\u7834\u574f\u884c\u4e3a\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u60f3\u60f3\u770b\uff1a\u4ed6\u4f1a\u5e26\u4ec0\u4e48\u79d8\u65b9\uff1f\u201c\u53d1\u5e03\u4e00\u5806\u540d\u5b57\u7cdf\u7cd5\u7684\u4e1c\u897f\uff0c\u7136\u540e\u5411\u57fa\u7840\u8bbe\u65bd\u5de5\u7a0b\u5e08\u63a8\u9500\u5f97\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u5730\u7cdf\u7cd5\uff1f\u201d\n\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\uff0c\u5e02\u573a\u8425\u9500\u5e76\u4e0d\u662fAWS\u7684\u6838\u5fc3\u4f18\u52bf\u3002\u8ba9\u7ec4\u7ec7\u4e2d\u7684\u9ad8\u5b98\u79bb\u5f00\u53bb\u7ade\u4e89\u5bf9\u624b\u662f\u786e\u4fdd\u4ed6\u4eec\u4e0d\u4f1a\u88ab\u7ade\u4e89\u5bf9\u624b\u8d85\u8d8a\u7684\u7edd\u4f73\u65b9\u5f0f\u3002\n\u4e0d\u5e78\u7684\u662f\uff0cAWS Legal\u9057\u6f0f\u4e86\u4e00\u4efd\u5907\u5fd8\u5f55\uff0c\u5e76\u63d0\u8d77\u4e86\u8bc9\u8bbc-\u8fd9\u662f\u8fd9\u91cc\u5b8c\u5168\u9519\u8bef\u7684\u4e3e\u52a8\u3002\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u7ed9\u4ed6\u4e00\u4efd\u70ed\u60c5\u6d0b\u6ea2\u7684\u63a8\u8350\u4fe1\uff0c\u5e76\u9001\u4ed6\u4e00\u4e2a\u6c34\u679c\u7bee\u3002\n\u76f8\u53cd\uff0cAWS\u73b0\u5728\u53d1\u73b0\u81ea\u5df1\u518d\u6b21\u56e0\u4e00\u4e2a\u975e\u53d7\u8feb\u6027\u9519\u8bef\u800c\u767b\u4e0a\u5934\u6761\uff0c\u8fd9\u8ba9\u4efb\u4f55\u6709\u5176\u4ed6\u5de5\u4f5c\u9009\u62e9\u7684\u4eba\u90fd\u4f1a\u91cd\u65b0\u8003\u8651\u63a5\u53d7\u8058\u7528-\u751a\u81f3\u6839\u672c\u5c31\u662f\u9762\u8bd5AWS\u3002\u8fd9\u4e00\u5931\u8bef\u5728\u591a\u6761\u6218\u7ebf\u4e0a\u9020\u6210\u7684\u635f\u5bb3\u662f\u65e0\u6cd5\u4f30\u91cf\u7684\uff01\n\u9996\u5148\uff0c\u5e03\u83b1\u6069\u662fAWS\u7684\u4ea7\u54c1\u8425\u9500\u526f\u603b\u88c1\u3002\u5982\u679c\u4f60\u770b\u770b\u56f4\u7ed5\u7740\u8fc7\u591a\u7684AWS\u670d\u52a1\u4ea7\u54c1\u7684\u6563\u4e71\u7684\u8425\u9500\u4fe1\u606f\uff0c\u5c31\u5e94\u8be5\u7acb\u5373\u5c06\u6700\u7ec8\u5bf9\u6b64\u8d1f\u8d23\u7684\u9ad8\u7ba1\u653e\u5728PIP\u4e0a\uff0c\u800c\u4e0d\u662f\u88ab\u7ade\u4e89\u5bf9\u624b\u6316\u8d70\u3002\n\u5176\u6b21\uff0c\u636e\u62a5\u9053\uff0c\u5e03\u83b1\u6069\u5728\u63a5\u53d7\u8fd9\u4efd\u5de5\u4f5c\u65f6\uff0c\u963f\u91cc\u5c14\u00b7\u51ef\u5c14\u66fc(\u5f53\u65f6\u662fAWS\u7684\u5168\u7403\u8425\u9500\u526f\u603b\u88c1)\u544a\u8bc9\u4ed6\u7684\u5927\u610f\u662f\uff1a\u201c\u54e6\uff0c\u522b\u62c5\u5fc3\uff0cAWS\u4ece\u6765\u6ca1\u6709\u5bf9\u4f60\u8fd9\u6837\u7684\u4eba/\u4f60\u7684\u89d2\u8272/\u8fd9\u4e2a\u90e8\u95e8\u7684\u4eba\u6267\u884c\u8fc7\u7ade\u4e1a\u7981\u6b62\u6761\u6b3e\u3002\u201d\n\u5f53\u6211\u5728\u63d0\u4f9b\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\u9047\u5230\u6765\u81eaAWS\u7684\u540c\u6837\u56de\u5e94\u65f6\uff0c\u4e0e\u6211\u4ea4\u8c08\u7684\u5f8b\u5e08\u5bf9\u6b64\u55e4\u4e4b\u4ee5\u9f3b\u3002\u201c\u4ed6\u4eec\u5f53\u7136\u4f1a\u8fd9\u4e48\u8bf4\uff1b\u8fd9\u6ca1\u6709\u6cd5\u5f8b\u7ea6\u675f\u529b\uff0c\u4ed6\u4eec\u5e0c\u671b\u4f60\u540c\u610f\u3002\u5982\u679c\u4ed6\u4eec\u662f\u8ba4\u771f\u7684\uff0c\u4ed6\u4eec\u53ef\u4ee5\u628a\u5b83\u5199\u4e0b\u6765\u3002\u5982\u679c\u4ed6\u4eec\u4e0d\u7b7e\uff0c\u4f60\u5c31\u4e0d\u4f1a\u60f3\u7b7e\u4e86\u3002\u201c\u3002\n\u6211\u8fdb\u4e00\u6b65\u6307\u51fa\uff0c\u7ade\u4e1a\u7981\u6b62\u7684\u8303\u56f4\u4ecd\u7136\u662f\u6574\u4e2a\u4e9a\u9a6c\u900a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fAWS\u3002\u8fd9\u592a\u5bbd\u6cdb\u4e86\uff0c\u53ef\u4ee5\u60f3\u8c61\uff0c\u572818\u4e2a\u6708\u7684\u5269\u4f59\u65f6\u95f4\u91cc\uff0c\u5e03\u83b1\u6069\u51e0\u4e4e\u53ef\u4ee5\u5408\u7406\u5730\u63a5\u53d7\u4efb\u4f55\u5de5\u4f5c\uff0c\u8fd9\u90fd\u53ef\u80fd\u5bf9\u4ed6\u4e0d\u5229\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5929\u91cc\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e9b\u5bf9\u6211\u7684\u7acb\u573a\u7684\u53cd\u5bf9\u610f\u89c1\uff1b\u8bf7\u5141\u8bb8\u6211\u628a\u4ed6\u4eec\u53d8\u6210\u7a3b\u8349\u4eba\uff0c\u5e76\u7acb\u5373\u9a73\u56de\u4ed6\u4eec\uff1a\n\u5e03\u83b1\u6069\u5728\u8c37\u6b4c\u505a\u7740\u5b8c\u5168\u4e00\u6837\u7684\u5de5\u4f5c\uff01\u8fd9\u5c31\u662f\u7ade\u4e1a\u7981\u6b62\u7684\u76ee\u7684\uff01\n\u662f\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6d4b\u8bd5\u6848\u4f8b\uff0c\u53ef\u4ee5\u68c0\u9a8c\u91d1\u53bf\u662f\u5426\u5e0c\u671b\u770b\u5230\u7ade\u4e1a\u7981\u6b62\u4e0e\u516c\u5171\u653f\u7b56\u76f8\u4e00\u81f4\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u6709\u7528\u7684\u516c\u5f00\u6570\u636e\uff0c\u4e3a\u4ec0\u4e48\u5728AWS\u91cd\u65b0\u731c\u6d4b\u4e00\u4e2a\u4e0d\u5728\u52a0\u5dde\u7684\u804c\u4f4d\u53ef\u80fd\u5bf9\u4efb\u4f55\u7ed9\u5b9a\u7684\u5019\u9009\u4eba\u90fd\u662f\u6700\u6709\u5229\u7684\u3002\n\u6b64\u5916\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cAWS\u4e0d\u662f\u72ed\u9698\u5730\u9650\u5b9a\u5b83\u4eec\u7684\u7ade\u4e1a\u7981\u6b62\u534f\u8bae\u7684\u8303\u56f4\uff0c\u800c\u662f\u5c3d\u53ef\u80fd\u5730\u5c06\u5b83\u4eec\u4fdd\u6301\u5728\u5e7f\u6cdb\u7684\u8303\u56f4\u5185\u3002\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u6848\u4ef6\u4e2d\uff0c\u90fd\u8981\u7531\u6cd5\u5b98\u6765\u51b3\u5b9a\u6f5c\u5728\u7684\u9650\u5236\uff0c\u6700\u7ec8\u8ba9\u91d1\u53bf\u7684\u7eb3\u7a0e\u4eba\u8d1f\u8d23\u4ef2\u88c1\u8d39\u7528\u3002\n\u8fd9\u662f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5728\u4e91\u4e2d\u3002\u5728\u6b64\u4e4b\u524d\uff0cGCP\u5f88\u53ef\u80fd\u4f1a\u88ab\u5f03\u7528\uff01\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u6211\u8d5e\u6210\u8fd9\u6837\u4e00\u79cd\u6a21\u5f0f\uff0c\u5373\u5982\u679cAWS\u9009\u62e9\u6267\u884c\u7ade\u4e1a\u7981\u6b62\uff0c\u4ed6\u4eec\u5c06\u88ab\u8981\u6c42\u5728\u9650\u5236\u671f\u95f4\u5411\u524d\u5458\u5de5\u652f\u4ed8\u5168\u989d\u8865\u507f\u3002\u4f8b\u5982\uff0c\u5728\u6b27\u6d32\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u8fd0\u4f5c\u65b9\u5f0f\u3002\n\u5f53\u963f\u91cc\u5c14\u00b7\u51ef\u5c14\u66fc(Ariel Kelman)\u53bb\u7532\u9aa8\u6587\u62c5\u4efb\u9996\u5e2d\u8425\u9500\u5b98\u65f6\uff0cAWS\u6ca1\u6709\u6267\u884c\u9488\u5bf9\u4ed6\u7684\u534f\u8bae\uff01\n\u5728\u8fd9\u573a\u8bc9\u8bbc\u4e4b\u524d\uff0c\u6211\u4f1a\u540c\u610f\u4f60\u7684\u89c2\u70b9\uff01AWS\u8ba4\u4e3aGCP\u662f\u201c\u4e00\u9879\u5177\u6709\u7ade\u4e89\u529b\u7684\u4e91\u4e1a\u52a1\u201d\uff0c\u8fd9\u662fGCP\u5e94\u8be5\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u4f5c\u4e3a\u8bc1\u660e\u7684\u4e00\u79cd\u627f\u8ba4\u3002\n\u5728\u7c7b\u4f3c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u8ba4\u4e3aAWS\u53ef\u80fd\u6ca1\u6709\u60f3\u5230\u201c\u8d77\u8bc9\u4ed6\u4eec\u6240\u80fd\u96c7\u4f63\u7684\u6700\u597d\u7684\u8425\u9500\u4eba\u5458\u4e4b\u4e00\u201d\u4e00\u76f4\u5230\u73b0\u5728\u90fd\u6ca1\u6709\u60f3\u8fc7\u201c\u8d77\u8bc9\u4ed6\u4eec\u80fd\u96c7\u5230\u7684\u6700\u597d\u7684\u8425\u9500\u4eba\u5458\u4e4b\u4e00\u201d\u3002\u5982\u679c\u8fd9\u4e00\u5207\u6084\u6084\u5730\u6d88\u5931\u800c\u4e0d\u4f1a\u5bf9AWS\u7684\u58f0\u8a89\u9020\u6210\u4e25\u91cd\u635f\u5bb3\uff0c\u6211\u4f1a\u611f\u5230\u5931\u671b\u3002\n\u5728\u526f\u603b\u88c1\u7ea7\u522b\uff0c\u4e0d\u5fc5\u5de5\u4f5c\u7684\u98ce\u9669\u5305\u542b\u5728\u4ed6\u4eec\u4ed8\u7ed9\u4f60\u7684\u9ad8\u85aa\u4e2d\u3002\n\u8fd9\u662fAWS\u3002\u4ed6\u4eec\u4fe1\u5949\u201c\u8282\u4fed\u201d\u4f5c\u4e3a\u9886\u5bfc\u539f\u5219\u3002\u4e3a\u6b64\uff0c\u53ef\u4ee5\u8bf4\uff0c\u8d77\u8bc9\u4e66\u4e2d\u6700\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e00\u53e5\u8bdd\u662f\uff1a\u201c2019\u5e74\uff0c\u970d\u5c14\u7684\u5e74\u6536\u5165\u8fdc\u8fdc\u8d85\u8fc710\u4e07\u7f8e\u5143\u3002\u201d\n\u4e0e\u6b64\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u662f\uff0c\u8c37\u6b4c\u526f\u603b\u88c1\u7684\u85aa\u916c\u751a\u81f3\u5728\u4f60\u8003\u8651\u5230\u4ed6\u4eec\u5728\u53d7\u5230\u53ef\u4fe1\u7684\u6027\u9a9a\u6270\u6307\u63a7\u79bb\u5f00\u4e4b\u524d\u83b7\u5f97\u7684\u5de8\u989d\u9063\u6563\u8d39\u4e4b\u524d\u5c31\u5df2\u7ecf\u662f\u5929\u6587\u6570\u5b57\u4e86\u3002\n\u5982\u679c\u6ca1\u6709\u8fd9\u4efd\u534f\u8bae\uff0c\u6709\u4ec0\u4e48\u80fd\u963b\u6b62\u5e03\u83b1\u6069\u628a\u4e9a\u9a6c\u900a\u7684\u673a\u5bc6\u4fe1\u606f\u5e26\u7ed9\u8c37\u6b4c\u5462\uff1f\n\u4f8b\u5982\uff0c\u5728\u6bcf\u4e2a\u53f8\u6cd5\u7ba1\u8f96\u533a\u90fd\u53ef\u4ee5\u5f3a\u5236\u6267\u884c\u7684\u4fdd\u5bc6\u534f\u8bae\u3002\u5bf9\u53e6\u4e00\u4e2a\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u5957\u201c\u6709\u6548\u7684\u9053\u5fb7\u89c4\u8303\u201d\u3002\u8fd8\u662f\u4e9a\u9a6c\u900a\u5728\u8fd9\u91cc\u8868\u793a\uff0c\u4ed6\u4eec\u5bf9\u9ad8\u7ba1\u62db\u8058\u6ca1\u6709\u5f88\u9ad8\u7684\u9053\u5fb7\u6807\u51c6\uff1f\n\u4e9a\u9a6c\u900a\u80af\u5b9a\u4f1a\u4ece\u7ade\u4e89\u5bf9\u624b\u7684\u516c\u53f8\u62db\u8058\u6218\u7565\u804c\u4f4d\u7684\u4eba\u3002\u6ca1\u6709\u4eba\u8ba4\u4e3a\u4e9a\u9a6c\u900a\u5728\u8fd9\u6837\u505a\u65f6\u5229\u7528\u4e86\u5546\u4e1a\u79d8\u5bc6\uff0c\u56e0\u4e3a\u5728\u5546\u4e1a\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u4eba\u4eec\u7684\u4e3e\u6b62\u4e5f\u662f\u5408\u4e4e\u9053\u5fb7\u7684\u3002\u5f53\u4ed6\u4eec\u4e0d\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u6210\u4e3a\u5934\u6761\u65b0\u95fb\u3002\n\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5e03\u8d56\u6069\u7684\u4e0a\u53f8\u827e\u745e\u5c14\u4f4f\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u50cf\u4eba\u4eec\u6240\u8bf4\u7684\u90a3\u6837\u5927\u7684\u95ee\u9898\uff0cAWS\u6c38\u8fdc\u4e0d\u4f1a\u540c\u610f\u7531\u4e00\u4e2a\u65e0\u6cd5\u5f3a\u5236\u6267\u884c\u7ade\u4e1a\u7981\u6b62\u7684\u53f8\u6cd5\u7ba1\u8f96\u533a\u7684\u4eba\u6765\u62c5\u4efb\u8fd9\u6837\u7684\u6218\u7565\u89d2\u8272\u3002\n\u8fd9\u4e48\u8bf4\u8ba9\u6211\u5f88\u75db\u82e6\uff0c\u56e0\u4e3a\u6211\u771f\u5fc3\u559c\u6b22AWS\u505a\u7684\u5927\u591a\u6570\u4e8b\u60c5\u3002\u4f46\u5bf9\u4e8e\u4efb\u4f55\u8003\u8651\u5728AWS\u4efb\u804c\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u91cc\u7684\u7ed3\u8bba\u662f\uff1a\u6ca1\u6709\u4eba\u662f\u5b89\u5168\u7684\u3002\n\u5f53\u4ed6\u4eec\u60f3\u96c7\u7528\u4f60\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5bf9\u4f60\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u597d\u8fc7\u3002\u5982\u679c\u4ed6\u4eec\u5632\u7b11\u4f60\u5bf9\u7ade\u4e1a\u7981\u6b62\u7684\u62c5\u5fe7\u5462\uff1f\u8dd1\u3002\u4e9a\u9a6c\u900a\u663e\u7136\u975e\u5e38\u5bb9\u6613\u53d7\u5230\u9119\u89c6\u3002\u4ed6\u4eec\u4f1a\u5411\u79bb\u804c\u7684\u5458\u5de5\u5f00\u706b\uff0c\u5e76\u5229\u7528\u81ea\u5df1\u7684\u540d\u58f0\u4f5c\u4e3a\u706b\u79cd\u3002\u5e03\u83b1\u6069\u00b7\u970d\u5c14\u662f\u4e16\u754c\u4e0a\u6700\u4f1f\u5927\u7684\u4e91\u8425\u9500\u8005\u3002\u4ed6\u751a\u81f3\u8fd8\u6ca1\u6709\u5f00\u59cb\u5de5\u4f5c\uff0c\u800c\u4e14\u4ed6\u5df2\u7ecf\u4ee5\u538b\u5012\u6027\u7684\u4f18\u52bf\u5411\u8c37\u6b4c\u63d0\u4f9b\u4e86\u6bd4AWS\u7684\u540c\u7b49\u804c\u4f4d\u66f4\u6709\u8bf4\u670d\u529b\u7684\u5de5\u4f5c\u673a\u4f1a\u3002\u4ed6\u8ba9\u6211\u8bf4\u8c37\u6b4c\u7684\u597d\u8bdd--\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff01\u7ade\u4e1a\u7981\u6b62\u663e\u7136\u88ab\u7528\u6765\u7ed9\u73b0\u6709\u5458\u5de5\u5e26\u6765\u5bd2\u8749\u6548\u5e94\u3002\u5f88\u5c11\u6709\u516c\u53f8\u4f1a\u5728\u6cd5\u5ead\u4e0a\u4e0e\u4e9a\u9a6c\u900a\u5bf9\u6297\uff1b\u5bf9\u5927\u591a\u6570\u516c\u53f8\u6765\u8bf4\uff0c\u7b80\u5355\u5730\u64a4\u56de\u62a5\u4ef7\u5e76\u9009\u62e9\u53e6\u4e00\u4e2a\u5019\u9009\u4eba\u8981\u5bb9\u6613\u5f97\u591a\u3002\u6211\u4e0d\u80fd\u5fcd\u53d7\u4e00\u4e2a\u6b3a\u51cc\u5f31\u5c0f\u7684\u4eba\u3002\u5982\u679c\u5728\u5931\u4e1a\u540e\uff0c\u4f60\u4e0d\u80fd\u5fcd\u53d718\u4e2a\u6708\u7684\u65f6\u95f4\u4e3a\u4e9a\u9a6c\u900a\u8ba4\u4e3a\u662f\u7ade\u4e89\u5bf9\u624b\u7684\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u5de5\u4f5c\uff0c\u4f60\u53ef\u80fd\u5e94\u8be5\u8003\u8651\u5230\u5176\u4ed6\u5730\u65b9\u5de5\u4f5c\u3002\u5728\u7ade\u4e1a\u7981\u6b62\u6761\u6b3e\u4e2d\uff0c\u7edd\u5bf9\u6ca1\u6709\u89c4\u5b9a\u4f60\u7684\u79bb\u804c\u5fc5\u987b\u662f\u81ea\u613f\u7684\u3002\u5982\u679cAWS\u51fa\u4e8e\u4efb\u4f55\u539f\u56e0\u51b3\u5b9a\u89e3\u96c7\u5e03\u83b1\u6069\uff0c\u4ed6\u4eec\u5f88\u5bb9\u6613\u5c31\u4f1a\u5bf9\u4ed6\u63d0\u8d77\u540c\u6837\u7684\u8bc9\u8bbc\u3002\u5e03\u83b1\u6069\u548c\u6211\u90fd\u662f\u6700\u767d\u7684\u4eba\uff0c\u6c89\u6d78\u5728\u6280\u672f\u7279\u6743\u7684\u6700\u7eaf\u7cb9\u7684\u8868\u8fbe\u4e2d\u3002\u5982\u679c\u8fd9\u5c31\u662f\u62e5\u6709\u538b\u5012\u6027\u52a0\u901f\u5668\u7684\u4eba\u56de\u51fb\u65f6\u7684\u7ed3\u679c\uff0c\u60f3\u8c61\u4e00\u4e0b\u8fd9\u53ef\u80fd\u4f1a\u5bf9\u6709\u8272\u4eba\u79cd\u3001\u5973\u6027\u548c\u5176\u4ed6\u6ca1\u6709\u88ab\u660e\u663e\u5938\u5927\u7684\u4eba\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\n\u7ade\u4e1a\u7981\u6b62\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u662f\u574f\u6d88\u606f\u3002AWS\u90a3\u4e9b\u624d\u534e\u6a2a\u6ea2\u7684\u4eba\u7406\u5e94\u5f97\u5230\u66f4\u597d\u7684\u3001\u5927\u91cf\u7684AWS\u5019\u9009\u8005\u7fa4\u4f53\u7684\u597d\u611f\uff0c\u8fd9\u6837\u7684\u4e3e\u52a8\u6b63\u5728\u70e7\u6bc1\u4ed6\u4eec\uff0c\u6211\u770b\u4e0d\u51fa\u8fd9\u79cd\u60c5\u51b5\u4f1a\u7ed9\u5ba2\u6237\u5e26\u6765\u4efb\u4f55\u597d\u5904\u3002\n\u5982\u679c\u4f60\u8ba4\u4e3a\u6211\u5f04\u9519\u4e86\uff0c\u597d\u5427\uff1a\u5728\u63a8\u7279\u4e0a\u9648\u8ff0\u4f60\u7684\u89c2\u70b9\uff01\n\u968f\u65f6\u5173\u6ce8\u6700\u65b0\u7684AWS\u65b0\u95fb\u3001\u89c2\u70b9\u548c\u5de5\u5177\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5145\u6ee1\u7231\u610f\u5730\u5939\u6742\u7740\u4e00\u4e9b\u5c16\u523b\u7684\u8a00\u8f9e\u3002\n\u6211\u4eec\u662f\u4e92\u8054\u7f51\u4e0a\u552f\u4e00\u5c16\u9178\u523b\u8584\u7684\u8d44\u6e90\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662faws\u2026\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u70b9\u3002", "note_en": "This week\u2019s analysis on multi-cloud being a bad idea is once  again pushed back by breaking news. In this case,  AWS is suing a former executive, Brian Hall, under his non-compete agreement.\n I\u2019ve covered my thoughts on non-compete agreements in the past\u2014it was the driver behind my decision  to decline an AWS job offer several years ago\u2014but I wanted to revisit them in light of this case.\n Let\u2019s start with covering what the current situation is. Brian (I know him, so I can\u2019t really refer to him as \u201cschmoo\u201d the way I referenced the defendant in my previous article on non-competes) was AWS\u2019s VP of Product Marketing. He resigned from AWS and accepted a job as the VP of Product Marketing at Google Cloud. This is not in dispute.\n This is a classic example of the distributed nature of Amazon getting in its own way. Sending the person who runs AWS Product Marketing to fill the same role at a competing company is a breathtakingly beautiful act of corporate sabotage. I mean, think about it: What\u2019s the secret sauce he\u2019s going to take with him? \u201cRelease a bunch of things with terrible names then market them incredibly poorly to infrastructure engineers?\u201d\n Marketing is, to be direct, not an AWS core strength. Having someone high up within that organization leaving for a competitor is a terrific way to ensure that they don\u2019t get leapfrogged by that competitor.\n Unfortunately, AWS Legal missed a memo and has filed a lawsuit\u2014which is the exact wrong move here. The right move would have been to give him a glowing recommendation and send him a fruit basket.\n Instead, AWS has now found themselves in the headlines again for an unforced error that makes anyone with other job options reconsider accepting an offer\u2014or even interviewing at AWS at all. The damage that this blunder is doing on multiple fronts is incalculable!\n  First, Brian was AWS\u2019s VP of Product Marketing. If you take a look at the scattershot marketing message around the plethora of AWS service offerings, the executive ultimately responsible for it all should, rather than being poached by a competitor, be immediately placed on a  PIP.\n Second, what Brian was reportedly told when accepting the job by Ariel Kelman (at the time, AWS\u2019s VP of Global Marketing) was to the effect of \u201coh, don\u2019t worry; AWS has never enforced that non-compete clause against someone at your level/in your role/in this department.\u201d\n When I encountered the same responses from AWS during my job offer situation, the attorney I spoke with laughed at that. \u201cOf course they\u2019re going to say that; it\u2019s not legally binding and they want you to say  yes. If they\u2019re serious about that, they can put it in writing. If they don\u2019t, you don\u2019t want to sign it.\u201d\n  I point out further that the non-compete is still scoped to all of Amazon rather than just AWS. It\u2019s overbroad and could conceivably apply against Brian in virtually any job he were to reasonably accept for the remainder of the 18-month period.\n I\u2019ve seen some objections to my position in the past couple of days; allow me to turn them into strawmen and summarily dismiss them:\n Brian is taking the exact same job at Google! This is what non-competes are for!\n Yes. It\u2019s a perfect test case for whether King County wants to see non-competes as congruent with public policy. It\u2019s also a useful public datapoint as to why second guessing a role at AWS that isn\u2019t in California might be in any given candidate\u2019s best interest.\n Further, it\u2019s worth noting that, rather than scoping their non-compete agreements narrowly, AWS leaves them as broad as possible. It\u2019s up to the judge in any given case to determine potential restrictions, ultimately leaving the taxpayers of King County responsible for the costs of arbitration.\n  That\u2019s a long time in cloud.  GCP may well be deprecated before then!\n As mentioned previously, I\u2019d be in favor of a model wherein if AWS chose to enforce the non-compete, they\u2019d be required to pay the former employee their full compensation for the duration of the restriction. That\u2019s how it works in Europe, for instance.\n AWS didn\u2019t enforce the agreement against Ariel Kelman when he went to Oracle as their Chief Marketing Officer!\n   Before this lawsuit, I would have agreed with you! AWS\u2019s consideration of GCP as \u201ca competitive cloud business\u201d is the sort of admission that GCP should put up as a testimonial on their website.\n On a similar note, I think that AWS may not have thought \u201cfiling a lawsuit against one of the best marketers they were able to hire\u201d all the way through. I\u2019ll be disappointed if this quietly drifts away without doing serious damage to AWS\u2019s reputation.\n At the VP level, the risk of not having to work is baked into the high salary they pay you\n It\u2019s AWS. They embrace \u201cfrugality\u201d as a leadership principle. To that end, arguably the most surprising line in the complaint was this: \u201cIn 2019, Hall earned well in excess of one hundred thousand dollars per year, annualized.\u201d\n Contrast that with Google, whose compensation for VPs is astronomical even before you factor in  the monstrous severance pay they receive before leaving under credible allegations of sexual harassment.\n Without this agreement, what\u2019s to stop Brian from taking Amazon\u2019s confidential information to Google?\n The NDA that\u2019s enforceable in every jurisdiction, for one. A \u201cfunctioning set of ethics\u201d for another. Or is Amazon saying here that they don\u2019t have a high ethical bar for its executive hires?\n Amazon certainly hires people for strategic roles from competing companies. Nobody is suggesting that Amazon is leveraging trade secrets when they do this because it\u2019s understood in business that this happens, and that people comport themselves ethically. When they don\u2019t, it makes headlines.\n Further note that Ariel, the person who Brian reported to, was based in California. If this were as big of an issue as is suggested, AWS would never have agreed to have such a strategic role filled by someone in a jurisdiction where the non-compete couldn\u2019t be enforced.\n It pains me to say it, as I genuinely like most of what AWS does. But the takeaway here for anyone considering a role at AWS is this:  No one is safe.\n  They\u2019re never nicer to you then when they\u2019re trying to hire you. If they mock your concerns about the non-compete? RUN. Amazon is apparently incredibly easily scorned. They will hurl fire after departed employees and use their own reputation as kindling. Brian Hall is the greatest cloud marketer in the world. He hasn\u2019t even started yet, and he\u2019s already made a Google job offer more compelling than its equivalent at AWS by a landslide. He\u2019s gotten me saying nice things about Google\u2014and that shouldn\u2019t be possible! Non-competes are clearly being used to provide a chilling effect for their existing employees. Very few companies will go up against Amazon in a courtroom; it\u2019s far easier for most to simply withdraw the offer and select another candidate. I can\u2019t abide a bully. If, after losing your job, you can\u2019t afford to weather an 18-month period in which your ability to work for any company Amazon deems to be a competitor, you should probably look into working elsewhere. There\u2019s absolutely nothing in the non-compete that says your departure must be voluntary. If AWS had decided to fire Brian for any reason, they could just have easily have brought this same suit against him. Both Brian and I are the very whitest of guys, steeped in the purest expression possible of techbro privilege. If this is how it plays out when someone with that overwhelming accelerator pushes back, imagine how it might impact people of color, women, and other folks who aren\u2019t dramatically overrepresented.\n Non-competes are bad news for everyone. The incredibly talented folks at AWS deserve better, massive amounts of goodwill among AWS\u2019s candidate pool are being torched by moves like this, and I fail to see any way that this situation benefits customers.\n If you think I\u2019ve gotten it wrong, okay:  make your case on Twitter!\n Stay up to date on the latest AWS news, opinions, and tools, all lovingly sprinkled with a bit of snark.\n   We\u2019re the internet\u2019s only snarky, sarcastic resource for literally anything and everything AWS\u2026 and we know it.", "posttime": "2020-06-10 23:07:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6467\u6bc1,ruins,aws", "title": "AWS\u6467\u6bc1\u4e86\u81ea\u5df1\u7684\u7834\u574f\u4f01\u56fe", "title_en": "AWS Ruins Own Attempt at Sabotage", "transed": 1, "url": "https://www.lastweekinaws.com/blog/aws-ruins-own-attempt-at-sabotage/", "via": "", "real_tags": ["\u6467\u6bc1", "ruins", "aws"]}]