[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1004484, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u4e2a\u5173\u4e8eKubernetes\u7684\u591a\u90e8\u5206\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5c1d\u8bd5\u6355\u6349\u5230\u6211\u8ba4\u4e3a\u6bcf\u4e2a\u60f3\u8981\u4e0eKubernetes\u4e00\u8d77\u5b66\u4e60\u548c\u5de5\u4f5c\u7684\u4eba\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5185\u5bb9\u3002\n\u5982\u679c\u4f60\u8bfb\u8fc7\u6211\u4ee5\u524d\u7684\u4efb\u4f55\u4e00\u7bc7\u6587\u7ae0\u6216\u8bfe\u7a0b\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u559c\u6b22\u901a\u8fc7\u5b9e\u9645\u4f8b\u5b50\u6765\u5b66\u4e60\u548c\u6388\u8bfe\u3002\u5c3d\u7ba1\u6211\u975e\u5e38\u559c\u6b22\u5b9e\u9645\u7684\u4f8b\u5b50\uff0c\u4f46\u662f\u5728Kubernetes\u4e2d\u6709\u5f88\u591a\u672f\u8bed\u548c\u6982\u5ff5\u662f\u60a8\u9700\u8981\u7406\u89e3\u7684\u3002\u4f46\u6211\u5411\u60a8\u4fdd\u8bc1\uff0c\u4e00\u65e6\u60a8\u9605\u8bfb\u5b8c\u6574\u4e2a\u7cfb\u5217\uff0c\u60a8\u5c31\u4f1a\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5e76\u80fd\u591f\u8fd0\u884c\u4f7f\u7528Kubernetes\u4e2d\u7684\u6570\u636e\u5e93\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u670d\u52a1\u3002\n\u5982\u679c\u60a8\u662f\u4e91\u539f\u751f\u7684\u521d\u5b66\u8005\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u67e5\u770b\u6211\u7684Docker\u521d\u5b66\u8005\u6307\u5357\u6587\u7ae0\uff0c\u4ee5\u83b7\u5f97\u5bf9Docker\u7684\u57fa\u672c\u4e86\u89e3\u3002\u4e0d\u8fc7\u522b\u62c5\u5fc3\uff0c\u5373\u4f7f\u4f60\u4e0d\u77e5\u9053\u591a\u514b\uff0c\u4f60\u4e5f\u4f1a\u8ddf\u7740\u53bb\u7684\u3002\n\u5728\u5173\u4e8e\u4e86\u89e3Kubernetes\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u4e3b\u9898\uff1a\n\u9605\u8bfb\u672c\u6587\u5e76\u6d4f\u89c8\u793a\u4f8b\u540e\uff0c\u60a8\u5c06\u4e86\u89e3\u4ec0\u4e48\u662fKubernetes\uff0c\u5e76\u4e86\u89e3Kubernetes\u6784\u5efa\u5757\u548c\u8d44\u6e90(\u5982Pod\u3001\u90e8\u7f72\u548c\u670d\u52a1)\u3002\n\u8fd9\u662f\u4e00\u7bc7\u7406\u8bba\u4e0e\u5b9e\u8df5\u76f8\u7ed3\u5408\u7684\u6587\u7ae0\u3002\u5982\u679c\u4f60\u6309\u7167\u5b9e\u9645\u4f8b\u5b50\u53bb\u505a\uff0c\u4f60\u4f1a\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5f97\u5230\u6700\u5927\u7684\u6536\u83b7\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u4ee5\u4e0b\u5de5\u5177\uff1a\n\u60a8\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u9009\u9879\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u6700\u591a\u7684\u9009\u62e9\u662f\u4ece\u4e91\u63d0\u4f9b\u5546\u90a3\u91cc\u83b7\u5f97Kubernetes\u96c6\u7fa4\u3002\u7136\u800c\uff0c\u7531\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u6bcf\u4e2a\u4eba\u7684\u9009\u62e9\u3002\n\u4e0b\u4e00\u4e2a\u6700\u4f73\u9009\u62e9\u662f\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884cKubernetes\u96c6\u7fa4\u3002\u5047\u8bbe\u60a8\u6709\u4e00\u4e9b\u7a7a\u95f2\u7684\u5185\u5b58\u548cCPU\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u4e4b\u4e00\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5355\u8282\u70b9Kubernetes\u96c6\u7fa4\uff1a\n\u8001\u5b9e\u8bf4\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0a\u9762\u7684\u4efb\u4f55\u4e00\u4e2a\u9009\u9879\u3002\u521b\u5efaKubernetes\u526f\u672c\u96c6\u3001\u90e8\u7f72\u548cPod\u53ef\u4ee5\u5728\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u4e0a\u8fd0\u884c\u3002\u60a8\u4e5f\u53ef\u4ee5\u521b\u5efaKubernetes\u670d\u52a1\uff0c\u4f46\u662f\uff0c\u4f8b\u5982\uff0c\u5f53\u60a8\u5c1d\u8bd5\u4f7f\u7528LoadBalancer\u670d\u52a1\u7c7b\u578b\u65f6\uff0c\u4e8b\u60c5\u5c31\u4f1a\u53d8\u5f97\u6709\u70b9\u590d\u6742\u3002\n\u4f7f\u7528\u4e91\u7ba1\u7406\u7684\u96c6\u7fa4\uff0c\u521b\u5efaLoadBalancer\u670d\u52a1\u7c7b\u578b\u5c06\u521b\u5efa\u8d1f\u8f7d\u5e73\u8861\u5668\u7684\u5b9e\u9645\u5b9e\u4f8b\uff0c\u5e76\u4e14\u60a8\u5c06\u83b7\u5f97\u53ef\u7528\u4e8e\u8bbf\u95ee\u670d\u52a1\u7684\u5916\u90e8/\u516c\u5171IP\u5730\u5740\u3002\n\u4e0a\u9762\u5217\u8868\u4e2d\u6700\u63a5\u8fd1\u6a21\u62dfLoadBalancer\u670d\u52a1\u7c7b\u578b\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662fDocker Desktop\u3002\u4f7f\u7528Docker Desktop\uff0c\u60a8\u7684\u670d\u52a1\u5c06\u5728\u5916\u90e8IP localhost\u4e0a\u516c\u5f00\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528Kind\u548cMinikube\u8bbf\u95ee\u8fd9\u4e9b\u670d\u52a1\uff0c\u4f46\u662f\uff0c\u5b83\u9700\u8981\u60a8\u8fd0\u884c\u5176\u4ed6\u547d\u4ee4\u3002\n\u4e3a\u6b64\uff0c\u6211\u5c06\u5728\u672c\u6587\u4e2d\u4f7f\u7528Docker Desktop\u3002\u60a8\u53ef\u4ee5\u6309\u7167\u5404\u81ea\u7f51\u7ad9\u4e0a\u6240\u6709\u9009\u4ef6\u7684\u5b89\u88c5\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5728\u60a8\u5b89\u88c5\u4e86\u8fd9\u4e9b\u5de5\u5177\u4e4b\u4e00\u4e4b\u540e\uff0c\u8bf7\u786e\u4fdd\u60a8\u4e0b\u8f7d\u4e86Kubernetes CLI\u3002\u8fd9\u662f\u4e00\u4e2a\u540d\u4e3akubectl\u7684\u5355\u4e00\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5141\u8bb8\u60a8\u5bf9\u96c6\u7fa4\u8fd0\u884c\u547d\u4ee4\u3002\u8981\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u5de5\u4f5c\uff0c\u53ef\u4ee5\u8fd0\u884ckubectl get Nodes\u5217\u51faKubernetes\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u3002\u60a8\u5e94\u8be5\u4f1a\u5f97\u5230\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u8f93\u51fa\uff1a\n\u60a8\u8fd8\u53ef\u4ee5\u68c0\u67e5\u4e0a\u4e0b\u6587\u662f\u5426\u6b63\u786e\u8bbe\u7f6e\u4e3adocker-ktop\u3002Kubernetes\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3aconfig\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u67e5\u627e\u8fde\u63a5\u5230\u96c6\u7fa4\u6240\u9700\u7684\u4fe1\u606f\u3002\u6b64\u6587\u4ef6\u4f4d\u4e8e\u60a8\u7684\u4e3b\u6587\u4ef6\u5939\u4e2d-\u4f8b\u5982$HOME/.kube/config\u3002\u4e0a\u4e0b\u6587\u662f\u8be5\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5b83\u5305\u542b\u5bf9\u96c6\u7fa4\u3001\u547d\u540d\u7a7a\u95f4\u548c\u7528\u6237\u7684\u5f15\u7528\u3002\u5982\u679c\u60a8\u6b63\u5728\u8bbf\u95ee\u6216\u8fd0\u884c\u5355\u4e2a\u7fa4\u96c6\uff0c\u5219\u914d\u7f6e\u6587\u4ef6\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e0a\u4e0b\u6587\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u5b9a\u4e49\u6307\u5411\u4e0d\u540c\u7fa4\u96c6\u7684\u591a\u4e2a\u4e0a\u4e0b\u6587\u3002\n\u4f7f\u7528kubectl config\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u5207\u6362\u3002\u60a8\u53ef\u4ee5\u8fd0\u884ccurrent-context\u547d\u4ee4\u67e5\u770b\u5f53\u524d\u4e0a\u4e0b\u6587\uff1a\n\u8fd8\u6709\u5176\u4ed6\u547d\u4ee4\uff0c\u5982use-context\u3001set-context\u3001view-context\u7b49\u3002\u6211\u66f4\u559c\u6b22\u4f7f\u7528\u4e00\u4e2a\u53ebkubectx\u7684\u5de5\u5177\u3002\u6b64\u5de5\u5177\u5141\u8bb8\u60a8\u5728\u4e0d\u540c\u7684Kubernetes\u4e0a\u4e0b\u6587\u4e4b\u95f4\u5feb\u901f\u5207\u6362\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e86\u4e09\u4e2a\u96c6\u7fa4(\u4e0a\u4e0b\u6587)\uff0c\u5219\u8fd0\u884ckubectx\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u8fd0\u884c\u8be5\u547d\u4ee4\u65f6\uff0c\u5f53\u524d\u9009\u5b9a\u7684\u4e0a\u4e0b\u6587\u4e5f\u4f1a\u9ad8\u4eae\u663e\u793a\u3002\u8981\u5207\u6362\u5230Minikube\u4e0a\u4e0b\u6587\uff0c\u6211\u53ef\u4ee5\u8fd0\u884c\uff1akubectx Minikube\u3002\n\u53ef\u4ee5\u4f7f\u7528kubectl\u8fd0\u884c\u7684\u7b49\u6548\u547d\u4ee4\u662fkubectl config get-context\u67e5\u770b\u6240\u6709\u4e0a\u4e0b\u6587\uff0ckubectl config use-context Minikube\u5207\u6362\u4e0a\u4e0b\u6587\u3002\n\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528Docker for Mac/Windows\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u4e0a\u4e0b\u6587\u8bbe\u7f6e\u4e3adocker-ktop\u3002\n\u8fd9\u4e9b\u5929\u6765\uff0c\u96c6\u88c5\u7bb1\u968f\u5904\u53ef\u89c1\u3002Docker\u7b49\u5de5\u5177\u53ef\u7528\u4e8e\u6253\u5305\u4ece\u5e94\u7528\u7a0b\u5e8f\u5230\u6570\u636e\u5e93\u7684\u6240\u6709\u5185\u5bb9\u3002\u968f\u7740\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u7684\u65e5\u76ca\u666e\u53ca\u548c\u8131\u79bb\u5355\u4e00\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u5355\u4e00\u7684\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u662f\u591a\u4e2a\u8f83\u5c0f\u670d\u52a1\u7684\u96c6\u5408\u3002\n\u7ba1\u7406\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6709\u5176\u81ea\u8eab\u7684\u95ee\u9898\u548c\u6311\u6218\uff0c\u66f4\u4e0d\u7528\u8bf4\u7ba1\u7406\u5fc5\u987b\u534f\u540c\u5de5\u4f5c\u7684\u6570\u5341\u4e2a\u8f83\u5c0f\u7684\u670d\u52a1\u4e86\u3002\u60a8\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u81ea\u52a8\u5316\u548c\u7ba1\u7406\u60a8\u7684\u90e8\u7f72\uff0c\u5f04\u6e05\u695a\u5982\u4f55\u6269\u5c55\u5404\u4e2a\u670d\u52a1\uff0c\u5982\u4f55\u4f7f\u7528\u7f51\u7edc\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u8d77\u6765\uff0c\u7b49\u7b49\u3002\n\u8fd9\u5c31\u662f\u5bb9\u5668\u7f16\u6392\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5bb9\u5668\u7f16\u6392\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7ba1\u7406\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u3002\u4f7f\u7528\u5bb9\u5668\u4e1a\u52a1\u6d41\u7a0b\u7cfb\u7edf\u5141\u8bb8\u60a8\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u96c6\u88c5\u7bb1\u7ba1\u5f26\u4e50\u56e2\u7684\u51e0\u4e2a\u4f8b\u5b50\u662f\u9a6c\u62c9\u677e\u3001\u7801\u5934\u7fa4\u548c\u6211\u4eca\u5929\u8981\u8c08\u5230\u7684\u5e93\u4f2f\u5185\u65af(Kubernetes)\u3002\nKubernetes\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u96c6\u7fa4\u7ba1\u7406\u548c\u8c03\u5ea6\u4ee5\u5bb9\u5668\u4e3a\u4e2d\u5fc3\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6d41\u884c\u9009\u62e9\u4e4b\u4e00\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Kubernetes\u6765\u8fd0\u884c\u60a8\u7684\u5bb9\u5668\uff0c\u8fdb\u884c\u96f6\u5b95\u673a\u90e8\u7f72\uff0c\u5728\u8fd9\u79cd\u90e8\u7f72\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u7528\u6237\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u5f88\u9177\u7684\u4e1c\u897f\u3002\n\u901a\u5e38\uff0c\u4f60\u4f1a\u770b\u5230\u5e93\u4f2f\u5185\u65af\u88ab\u79f0\u4e3aK8&34\uff1b\u3002K8S\u662fKubernetes\u7684\u4ee3\u540d\u8bcd\u3002\u7b2c\u4e00\u4e2a(K)\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd(S)\u662f\u5355\u8bcdKubernetes\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c8\u662f\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u7684\u5b57\u7b26\u6570\u3002\u5176\u4ed6\u6d41\u884c\u7684\u6570\u5b57\u540d\u6709\u4ee3\u8868\u56fd\u9645\u5316\u7684\u6570\u5b57\u7b26\u53f7&#34\uff1bi18n&34\uff1b\u6216\u4ee3\u8868\u53ef\u8bbf\u95ee\u6027\u7684\u6570\u5b57\u7b26\u53f7&#34\uff1ba11y&34\uff1b\u3002\n\u6211\u5df2\u7ecf\u770b\u5230\u5173\u4e8e\u5e93\u4f2f\u5185\u65af\u548c\u591a\u514b\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u4e24\u8005\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u4f7f\u7528Docker\uff0c\u60a8\u53ef\u4ee5\u6253\u5305\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5305\u79f0\u4e3a\u955c\u50cf\u6216Docker\u955c\u50cf\u3002\u60a8\u53ef\u4ee5\u5c06\u56fe\u50cf\u89c6\u4e3a\u6a21\u677f\u3002\u4f7f\u7528Docker\uff0c\u60a8\u53ef\u4ee5\u4ece\u60a8\u7684\u955c\u50cf\u521b\u5efa\u5bb9\u5668\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684Docker\u6620\u50cf\u5305\u542bGo\u4e8c\u8fdb\u5236\u6216Java\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5bb9\u5668\u662f\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd0\u884c\u5b9e\u4f8b\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eDocker\u7684\u4fe1\u606f\uff0c\u8bf7\u67e5\u770bDocker\u5165\u95e8\u6307\u5357\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cKubernetes\u662f\u4e00\u4e2a\u5bb9\u5668\u7f16\u6392\u5de5\u5177\uff0c\u5b83\u77e5\u9053\u5982\u4f55\u7ba1\u7406Docker(\u548c\u5176\u4ed6)\u5bb9\u5668\u3002Kubernetes\u4f7f\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u6784\u9020(\u5982Pods)\u6765\u5305\u88c5Docker(\u6216\u5176\u4ed6)\u5bb9\u5668\uff0c\u5e76\u8ba9\u60a8\u80fd\u591f\u7ba1\u7406\u5b83\u4eec\u3002\n\u7801\u5934\u7fa4\u662f\u4e00\u4e2a\u5bb9\u5668\u7f16\u6392\u5de5\u5177\uff0c\u5c31\u50cfKubernetes\u4e00\u6837\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u7ba1\u7406Docker\u5bb9\u5668\u3002\u4f7f\u7528Sarm\uff0c\u60a8\u53ef\u4ee5\u5c06\u591a\u4e2aDocker\u4e3b\u673a\u8fde\u63a5\u5230\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Docker CLI\u4e00\u6b21\u4e0e\u591a\u4e2a\u4e3b\u673a\u5bf9\u8bdd\uff0c\u5e76\u5728\u5176\u4e0a\u8fd0\u884cDocker\u5bb9\u5668\u3002\nKubernetes\u96c6\u7fa4\u662f\u8fd0\u884c\u60a8\u7684\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u4e00\u7ec4\u7269\u7406\u6216\u865a\u62df\u673a\u4ee5\u53ca\u5176\u4ed6\u57fa\u7840\u8bbe\u65bd\u8d44\u6e90\u3002Kubernetes\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u90fd\u79f0\u4e3a\u8282\u70b9\u3002\u6bcf\u4e2aKubernetes\u7fa4\u96c6\u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9\uff1a\n\u4e3b\u8282\u70b9\u4e0a\u7684\u4e00\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u79f0\u4e3aAPI\u670d\u52a1\u5668\u3002API\u670d\u52a1\u5668\u662f\u60a8\u5728\u521b\u5efaKubernetes\u8d44\u6e90\u6216\u7ba1\u7406\u7fa4\u96c6\u65f6Kubernetes CLI(Kubectl)\u4e0e\u4e4b\u5bf9\u8bdd\u7684\u7aef\u70b9\u3002\n\u8c03\u5ea6\u5668\u7ec4\u4ef6\u4e0eAPI\u670d\u52a1\u5668\u534f\u540c\u5de5\u4f5c\uff0c\u4ee5\u5c06\u5e94\u7528\u7a0b\u5e8f\u6216\u5de5\u4f5c\u8d1f\u8f7d\u8c03\u5ea6\u5230\u5de5\u4f5c\u8282\u70b9\u4e0a\u3002\u5b83\u8fd8\u4e86\u89e3\u8282\u70b9\u4e0a\u53ef\u7528\u7684\u8d44\u6e90\u4ee5\u53ca\u5de5\u4f5c\u8d1f\u8f7d\u8bf7\u6c42\u7684\u8d44\u6e90\u3002\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u5b83\u53ef\u4ee5\u51b3\u5b9a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6700\u7ec8\u4f4d\u4e8e\u54ea\u4e9b\u5de5\u4f5c\u8282\u70b9\u4e0a\u3002\nKube\u63a7\u5236\u5668\u7ba1\u7406\u5668\u8fd0\u884c\u591a\u4e2a\u63a7\u5236\u5668\u8fdb\u7a0b\u3002\u8fd9\u4e9b\u63a7\u5236\u5668\u76d1\u89c6\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u96c6\u7fa4\u7684\u5f53\u524d\u72b6\u6001(\u4f8b\u5982\uff0c\u6b63\u5728\u8fd0\u884c\u5de5\u4f5c\u8d1f\u8f7dA&#34\uff1b\u7684\u526f\u672c)\u4e0e\u6240\u9700\u72b6\u6001(\u4f8b\u5982\uff0c\u6211\u60f3\u898110\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5de5\u4f5c\u8d1f\u8f7dA&#34\uff1b\u7684\u526f\u672c)\u4fdd\u6301\u4e00\u81f4\u3002\u63a7\u5236\u5668\u5305\u62ec\u8282\u70b9\u63a7\u5236\u5668\u3001\u590d\u5236\u63a7\u5236\u5668\u3001\u7aef\u70b9\u63a7\u5236\u5668\u4ee5\u53ca\u670d\u52a1\u5e10\u6237\u548c\u4ee4\u724c\u63a7\u5236\u5668\u3002\n\u4e91\u63a7\u5236\u5668\u7ba1\u7406\u5668\u8fd0\u884c\u7279\u5b9a\u4e8e\u4e91\u63d0\u4f9b\u5546\u7684\u63a7\u5236\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ba1\u7406\u7fa4\u96c6\u5916\u90e8\u7684\u8d44\u6e90\u3002\u53ea\u6709\u5f53\u60a8\u7684Kubernetes\u96c6\u7fa4\u5728\u4e91\u4e2d\u8fd0\u884c\u65f6\uff0c\u6b64\u63a7\u5236\u5668\u624d\u4f1a\u8fd0\u884c\u3002\u5982\u679c\u60a8\u6b63\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884cKubernetes\u7fa4\u96c6\uff0c\u5219\u6b64\u63a7\u5236\u5668\u5c06\u4e0d\u4f1a\u8fd0\u884c\u3002\u6b64\u63a7\u5236\u5668\u7684\u76ee\u7684\u662f\u8ba9\u7fa4\u96c6\u4e0e\u4e91\u63d0\u4f9b\u5546\u5bf9\u8bdd\uff0c\u4ee5\u7ba1\u7406\u8282\u70b9\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u6216\u8def\u7531\u3002\n\u6700\u540e\uff0cetcd\u662f\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\u3002Kubernetes\u96c6\u7fa4\u548cAPI\u5bf9\u8c61\u7684\u72b6\u6001\u5b58\u50a8\u5728etcd\u4e2d\u3002\n\u5c31\u50cf\u5728\u4e3b\u8282\u70b9\u4e0a\u4e00\u6837\uff0c\u5de5\u4f5c\u8282\u70b9\u4e5f\u6709\u4e0d\u540c\u7684\u7ec4\u4ef6\u5728\u8fd0\u884c\u3002\u7b2c\u4e00\u4e2a\u662f\u5e93\u8d1d\u83b1\u7279\u3002\u8be5\u670d\u52a1\u5728\u6bcf\u4e2a\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u5176\u4efb\u52a1\u662f\u7ba1\u7406\u5bb9\u5668\u3002\u5b83\u786e\u4fdd\u96c6\u88c5\u7bb1\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u8fde\u63a5\u56de\u63a7\u5236\u5e73\u9762\u3002Kubelet\u4e0eAPI\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u8d1f\u8d23\u7ba1\u7406\u8fd0\u884c\u5b83\u7684\u8282\u70b9\u4e0a\u7684\u8d44\u6e90\u3002\n\u5f53\u5411\u96c6\u7fa4\u4e2d\u6dfb\u52a0\u65b0\u7684\u5de5\u4f5c\u8282\u70b9\u65f6\uff0ckubelet\u4f1a\u81ea\u6211\u4ecb\u7ecd\u5e76\u63d0\u4f9b\u5176\u62e5\u6709\u7684\u8d44\u6e90(\u4f8b\u5982&#34\uff1bI\u6709X\u4e2aCPU\u548cY\u4e2a\u5185\u5b58&#34\uff1b)\u3002\u7136\u540e\uff0c\u5b83\u8be2\u95ee\u662f\u5426\u9700\u8981\u8fd0\u884c\u4efb\u4f55\u5bb9\u5668\u3002\u60a8\u53ef\u4ee5\u5c06kubelet\u89c6\u4e3a\u5de5\u4f5c\u8282\u70b9\u7ba1\u7406\u5668\u3002\nKubelet\u4f7f\u7528\u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3(CRI)\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u901a\u4fe1\u3002\u5bb9\u5668\u8fd0\u884c\u65f6\u8d1f\u8d23\u4f7f\u7528\u5bb9\u5668\u3002\u9664\u4e86Docker\uff0cKubernetes\u8fd8\u652f\u6301\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\uff0c\u6bd4\u5982tainerd\u6216cri-o\u3002\n\u5bb9\u5668\u5728Pod\u5185\u8fd0\u884c\uff0c\u7531\u4e0a\u56fe\u4e2d\u7684\u84dd\u8272\u77e9\u5f62\u8868\u793a(\u5bb9\u5668\u662f\u6bcf\u4e2aPod\u5185\u7684\u7ea2\u8272\u77e9\u5f62)\u3002Pod\u662f\u53ef\u4ee5\u5728Kubernetes\u7fa4\u96c6\u4e0a\u521b\u5efa\u3001\u8c03\u5ea6\u548c\u7ba1\u7406\u7684\u6700\u5c0f\u53ef\u90e8\u7f72\u5355\u5143\u3002Pod\u662f\u7ec4\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\u7684\u903b\u8f91\u96c6\u5408\u3002\u8fd0\u884c\u5728\u540c\u4e00\u4e2aPod\u5185\u7684\u5bb9\u5668\u8fd8\u5171\u4eab\u7f51\u7edc\u548c\u5b58\u50a8\u7a7a\u95f4\u3002\n\u6bcf\u4e2a\u5de5\u4f5c\u8282\u70b9\u8fd8\u5177\u6709\u4e00\u4e2a\u4ee3\u7406\uff0c\u8be5\u4ee3\u7406\u5145\u5f53\u5728\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7f51\u7edc\u4ee3\u7406\u548c\u8d1f\u8f7d\u5e73\u8861\u5668\u3002\u901a\u8fc7\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668\u4f20\u5165\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u5c06\u901a\u8fc7\u8fd9\u4e9b\u4ee3\u7406\u91cd\u5b9a\u5411\u5230Pod\u5185\u90e8\u8fd0\u884c\u7684\u5bb9\u5668\u3002\nKubernetes API\u5b9a\u4e49\u4e86\u8bb8\u591a\u79f0\u4e3a\u8d44\u6e90\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\u540d\u79f0\u7a7a\u95f4\u3001Pod\u3001\u670d\u52a1\u3001\u79d8\u5bc6\u3001\u914d\u7f6e\u6620\u5c04\u7b49\u3002\n\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u8d44\u6e90\u5b9a\u4e49(CRD)\u5b9a\u4e49\u60a8\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u3002\n\u5728\u914d\u7f6e\u4e86Kubernetes CLI\u548c\u96c6\u7fa4\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u5c1d\u8bd5\u5e76\u8fd0\u884ckubectl API-resources\u547d\u4ee4\u3002\u5b83\u5c06\u5217\u51fa\u6240\u6709\u5b9a\u4e49\u7684\u8d44\u6e90-\u5c06\u4f1a\u6709\u5f88\u591a\u8d44\u6e90\u3002\nKubernetes\u4e2d\u7684\u8d44\u6e90\u53ef\u4ee5\u4f7f\u7528YAML\u5b9a\u4e49\u3002YAML(YAML\u6807\u8bb0\u8bed\u8a00)\u901a\u5e38\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u548c\u3002\u5b83\u662fJSON\u683c\u5f0f\u7684\u8d85\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528JSON\u6765\u63cf\u8ff0Kubernetes\u8d44\u6e90\u3002\n\u6bcf\u4e2aKubernetes\u8d44\u6e90\u90fd\u6709apiVersion\u548cKind\u5b57\u6bb5\uff0c\u7528\u4e8e\u63cf\u8ff0\u60a8\u5728\u521b\u5efa\u8d44\u6e90\u65f6\u4f7f\u7528\u7684Kubernetes API\u7248\u672c(\u4f8b\u5982\uff0capp/v1)\u4ee5\u53ca\u8981\u521b\u5efa\u7684\u8d44\u6e90\u7c7b\u578b(\u4f8b\u5982\uff0cDeployment\u3001Pod\u3001Service\u7b49)\u3002\n\u5143\u6570\u636e\u5305\u62ec\u6709\u52a9\u4e8e\u6807\u8bc6\u60a8\u6b63\u5728\u521b\u5efa\u7684\u8d44\u6e90\u7684\u6570\u636e\u3002\u8fd9\u901a\u5e38\u5305\u62ec\u540d\u79f0(\u4f8b\u5982myDeployment)\u548c\u5c06\u5728\u5176\u4e2d\u521b\u5efa\u8d44\u6e90\u7684\u540d\u79f0\u7a7a\u95f4\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728\u5143\u6570\u636e\u4e2d\u63d0\u4f9b\u5176\u4ed6\u5b57\u6bb5\uff0c\u5982\u6807\u7b7e\u548c\u6ce8\u91ca\uff0c\u4ee5\u53ca\u5728\u521b\u5efa\u8d44\u6e90\u540e\u6dfb\u52a0\u7684\u51e0\u4e2a\u5b57\u6bb5(\u4f8b\u5982\uff0ccreationTimestamp)\u3002\nPod\u53ef\u80fd\u662fKubernetes\u4e2d\u6700\u5e38\u89c1\u7684\u8d44\u6e90\u4e4b\u4e00\u3002\u5b83\u4eec\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u7684\u96c6\u5408\u3002Pod\u5185\u7684\u5bb9\u5668\u5171\u4eab\u76f8\u540c\u7684\u7f51\u7edc\u548c\u5b58\u50a8\u3002\u8fd9\u610f\u5473\u7740\u540c\u4e00pod\u4e2d\u7684\u4efb\u4f55\u5bb9\u5668\u90fd\u53ef\u4ee5\u901a\u8fc7localhost\u76f8\u4e92\u901a\u4fe1\u3002\n\u8c46\u835a\u7684\u8bbe\u8ba1\u662f\u77ed\u6682\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u7684\u6301\u7eed\u65f6\u95f4\u975e\u5e38\u77ed\u3002Pod\u53ef\u4ee5\u968f\u65f6\u91cd\u65b0\u8c03\u5ea6\u4e3a\u5728\u4e0d\u540c\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u5f53\u91cd\u65b0\u542f\u52a8Pod\u65f6\uff0c\u60a8\u7684\u5bb9\u5668\u4e5f\u5c06\u91cd\u65b0\u542f\u52a8\u3002\n\u521b\u5efa\u540e\uff0c\u6bcf\u4e2aPod\u90fd\u4f1a\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684IP\u5730\u5740\u3002Pod\u5185\u7684\u5bb9\u5668\u53ef\u4ee5\u4fa6\u542c\u4e0d\u540c\u7684\u7aef\u53e3\u3002\u8981\u8bbf\u95ee\u60a8\u7684\u5bb9\u5668\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Pod\u7684IP\u5730\u5740\u3002\u4f7f\u7528\u4e0a\u56fe\u4e2d\u7684\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884ccurl 10.1.0.1\uff1a3000\u4e0e\u4e00\u4e2a\u5bb9\u5668\u901a\u4fe1\uff0c\u8fd0\u884ccurl 10.1.0.1\uff1a5000\u4e0e\u53e6\u4e00\u4e2a\u5bb9\u5668\u901a\u4fe1\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u5728\u5bb9\u5668\u4e4b\u95f4\u5bf9\u8bdd-\u4f8b\u5982\uff0c\u4ece\u5e95\u90e8\u8c03\u7528\u9876\u90e8\u5bb9\u5668\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528http://localhost:3000.\n\u5982\u679c\u60a8\u7684Pod\u91cd\u65b0\u542f\u52a8\uff0c\u5b83\u5c06\u83b7\u5f97\u4e0d\u540c\u7684IP\u5730\u5740\u3002\u56e0\u6b64\uff0c\u60a8\u4e0d\u80fd\u4f9d\u8d56IP\u5730\u5740\u3002\u76f4\u63a5\u901a\u8fc7IP\u4e0e\u60a8\u7684Pod\u901a\u8bdd\u4e0d\u662f\u6b63\u786e\u7684\u65b9\u5f0f\u3002\n\u79f0\u4e3aKubernetes\u670d\u52a1\u7684\u62bd\u8c61\u662f\u60a8\u53ef\u4ee5\u7528\u6765\u4e0ePod\u901a\u4fe1\u7684\u4e1c\u897f\u3002Kubernetes\u670d\u52a1\u4e3a\u60a8\u63d0\u4f9b\u7a33\u5b9a\u7684IP\u5730\u5740\u548cDNS\u540d\u79f0\u3002\u6211\u7a0d\u540e\u4f1a\u8c08\u5230\u670d\u52a1\u3002\nPod\u4e2d\u7684\u6240\u6709\u5bb9\u5668\u90fd\u4e00\u8d77\u7f29\u653e\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u4ece\u4e00\u4e2aPod\u6269\u5c55\u5230\u56db\u4e2aPod\u7684\u6548\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u4e0d\u80fd\u7f29\u653ePod\u4e2d\u7684\u5355\u4e2a\u5bb9\u5668\u3002\u8c46\u835a\u662f\u523b\u5ea6\u7684\u5355\u4f4d\u3002\n&#34\uff1b\u592a\u68d2\u4e86\uff01\u6211\u53ef\u4ee5\u5728\u540c\u4e00\u4e2aPod\u4e2d\u8fd0\u884c\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\uff01\uff01&#34\uff1b\u4e0d\uff01\u4e0d\u8981\u90a3\u6837\u505a\u3002\n\u9996\u5148\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5e93\u7684\u4f38\u7f29\u7387\u4e0d\u4f1a\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4f38\u7f29\u7387\u76f8\u540c\u3002\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u6b63\u5728\u7f29\u653e\u4e00\u4e2a\u8c46\u835a\u548c\u8be5\u8c46\u835a\u5185\u7684\u6240\u6709\u5bb9\u5668\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5355\u4e2a\u5bb9\u5668\u3002\n\u5176\u6b21\uff0c\u5728Kubernetes\u4e2d\u8fd0\u884c\u6709\u72b6\u6001\u5de5\u4f5c\u8d1f\u8f7d(\u5982\u6570\u636e\u5e93)\u4e0d\u540c\u4e8e\u8fd0\u884c\u65e0\u72b6\u6001\u5de5\u4f5c\u8d1f\u8f7d\u3002\u4f8b\u5982\uff0c\u60a8\u9700\u8981\u786e\u4fddPod\u91cd\u65b0\u542f\u52a8\u4e4b\u95f4\u7684\u6570\u636e\u662f\u6301\u4e45\u7684\uff0c\u5e76\u4e14\u91cd\u65b0\u542f\u52a8\u7684Pod\u4e0e\u91cd\u65b0\u542f\u52a8\u7684Pod\u5177\u6709\u76f8\u540c\u7684\u7f51\u7edc\u6807\u8bc6\u3002\u53ef\u4ee5\u4f7f\u7528\u6301\u4e45\u5377\u548c\u72b6\u6001\u96c6\u7b49\u8d44\u6e90\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u7a0d\u540e\u6211\u5c06\u66f4\u591a\u5730\u8ba8\u8bba\u5982\u4f55\u5728Kubernetes\u4e2d\u8fd0\u884c\u6709\u72b6\u6001\u5de5\u4f5c\u8d1f\u8f7d\u3002\n\u901a\u5e38\uff0c\u60a8\u4e0d\u5e94\u8be5\u624b\u52a8\u521b\u5efa\u8c46\u835a\u3002\u4f60\u53ef\u4ee5\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u4f60\u771f\u7684\u4e0d\u5e94\u8be5\u3002\u539f\u56e0\u662f\uff0c\u5982\u679c\u540a\u8231\u5d29\u6e83\u6216\u88ab\u5220\u9664\uff0c\u5b83\u5c06\u6c38\u8fdc\u6d88\u5931\u3002\napiVersion\uff1aV1 Kind\uff1aPod Metadata\uff1aName\uff1aHello-Pod Labels\uff1aApp\uff1aHello spec\uff1aContainers\uff1a-Name\uff1aHello-Container image\uff1abusybox\u547d\u4ee4\uff1a[&#39\uff1bsh&#39\uff1b\uff0c&#39\uff1b-c&#39\uff1b\uff0c&#39\uff1bECHO Hello From My Container\uff01&amp\uff1b&amp\uff1b\u7761\u77203600&#39\uff1b]\n\u5728\u524d\u51e0\u884c\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u8d44\u6e90\u7c7b\u578b(Pod)\u548c\u5143\u6570\u636e\u3002\u5143\u6570\u636e\u5305\u62ecpod\u7684\u540d\u79f0(hello-pod)\u548c\u4e00\u7ec4\u7b80\u5355\u7684\u952e\u503c\u5bf9\u6807\u7b7e(app=hello)\u3002\n\u5728\u89c4\u8303\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86Pod\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u6211\u4eec\u5728\u8fd9\u4e2apod\u4e2d\u5c06\u6709\u4e00\u4e2a\u540d\u4e3ahello-tainer\u7684\u5355\u4e00\u5bb9\u5668\uff0c\u5b83\u5c06\u8fd0\u884c\u540d\u4e3abusybox\u7684\u6620\u50cf\u3002\u5bb9\u5668\u542f\u52a8\u540e\uff0c\u5c06\u6267\u884c\u547d\u4ee4\u5b57\u6bb5\u4e2d\u5b9a\u4e49\u7684\u547d\u4ee4\u3002\n\u8981\u521b\u5efaPod\uff0c\u60a8\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684YAML\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3apod.yaml\u7684\u6587\u4ef6\u4e2d\uff0c\u4f8b\u5982\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Kubernetes CLI(Kubectl)\u521b\u5efa\u5b9e\u4f8b\uff1a\nKubernetes\u4f7f\u7528\u521b\u5efa\u7684\u8d44\u6e90\u7c7b\u578b\u548c\u540d\u79f0\u8fdb\u884c\u54cd\u5e94\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528kubectl get pods\u6765\u83b7\u53d6\u8fd0\u884c\u96c6\u7fa4\u9ed8\u8ba4\u540d\u79f0\u7a7a\u95f4\u7684\u6240\u6709pod\u7684\u5217\u8868\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528logs\u547d\u4ee4\u67e5\u770bPod\u5185\u90e8\u8fd0\u884c\u7684\u5bb9\u5668\u7684\u8f93\u51fa\uff1a\n\u5982\u679c\u60a8\u6709\u591a\u4e2a\u5bb9\u5668\u5728\u540c\u4e00pod\u5185\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528-c\u6807\u5fd7\u6307\u5b9a\u8981\u4ece\u4e2d\u83b7\u53d6\u65e5\u5fd7\u7684\u5bb9\u5668\u540d\u79f0\u3002\u4f8b\u5982\uff1akubectl\u65e5\u5fd7hello-pod-c hello-tainer\u3002\n\u5982\u679c\u6211\u4eec\u4f7f\u7528kubectl delete pod hello-pod\u5220\u9664\u6b64pod\uff0c\u8be5pod\u5c06\u6c38\u8fdc\u6d88\u5931\u3002\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u81ea\u52a8\u91cd\u65b0\u542f\u52a8\u540a\u8231\u3002\u5982\u679c\u60a8\u518d\u6b21\u8fd0\u884ckubectl get Pods\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230Pod\u4e0d\u89c1\u4e86\uff1a\n\u8fd9\u4e0e\u60a8\u60f3\u8981\u7684\u884c\u4e3a\u76f8\u53cd\u3002\u5982\u679c\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5728Pod\u4e2d\u8fd0\u884c\uff0c\u60a8\u4f1a\u5e0c\u671b\u5b83\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u81ea\u52a8\u91cd\u65b0\u8c03\u5ea6\u5e76\u91cd\u65b0\u542f\u52a8\u3002\n\u4e3a\u4e86\u786e\u4fdd\u5d29\u6e83\u7684Pod\u91cd\u65b0\u542f\u52a8\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u7ba1\u7406Pod\u751f\u547d\u5468\u671f\u7684\u63a7\u5236\u5668\u3002\u5982\u679c\u60a8\u7684Pod\u88ab\u5220\u9664\u6216\u53d1\u751f\u4e86\u4e0d\u597d\u7684\u4e8b\u60c5(\u8282\u70b9\u5173\u95ed\uff0cPod\u9700\u8981\u88ab\u9a71\u9010)\uff0c\u6b64\u63a7\u5236\u5668\u53ef\u786e\u4fdd\u81ea\u52a8\u91cd\u65b0\u5b89\u6392\u5b83\u7684\u65e5\u7a0b\u3002\nReplicaSet\u7684\u5de5\u4f5c\u662f\u7ef4\u62a4\u7a33\u5b9a\u6570\u91cf\u7684Pod\u62f7\u8d1d\u6216\u590d\u5236\u526f\u672c\u3002ReplicaSet\u63a7\u5236\u5668\u53ef\u4fdd\u8bc1\u6307\u5b9a\u6570\u91cf\u7684\u76f8\u540cPod\u59cb\u7ec8\u5728\u8fd0\u884c\u3002\u590d\u5236\u526f\u672c\u8ba1\u6570\u7531\u8d44\u6e90\u5b9a\u4e49\u4e2d\u7684\u590d\u5236\u526f\u672c\u5b57\u6bb5\u63a7\u5236\u3002\n\u5982\u679c\u60a8\u4ece\u5355\u4e2aPod\u5f00\u59cb\uff0c\u5e76\u4e14\u5e0c\u671b\u6269\u5c55\u52305\u4e2aPod\uff0c\u5219ReplicaSet\u63a7\u5236\u5668\u5c06\u4f7f\u7528\u7fa4\u96c6\u4e2d\u7684\u5f53\u524d\u72b6\u6001(\u4e00\u4e2aPod)\uff0c\u7136\u540e\u518d\u521b\u5efa\u56db\u4e2aPod\u4ee5\u6ee1\u8db3\u6240\u9700\u7684\u72b6\u6001(5\u4e2aPod)\u3002ReplicaSet\u8fd8\u4f1a\u5173\u6ce8Pod\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u5220\u9664\u4e00\u4e2aPod\u6216\u5c06\u5176\u653e\u5927\u6216\u7f29\u5c0f\uff0c\u5b83\u5c06\u6267\u884c\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4ee5\u6ee1\u8db3\u6240\u9700\u7684\u590d\u5236\u526f\u672c\u6570\u91cf\u3002\u4e3a\u4e86\u521b\u5efaPod\uff0cReplicaSet\u4f7f\u7528Pod\u6a21\u677f\uff0c\u8be5\u6a21\u677f\u662f\u8d44\u6e90\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002\napiVersion\uff1aapp/v1 Kind\uff1aReplica Set Metadata\uff1aName\uff1aHello Labels\uff1aApp\uff1aHello spec\uff1aReplicas\uff1a5\u9009\u62e9\u5668\uff1amatchLabels\uff1aApp\uff1aHello Template\uff1aMetadata\uff1aLabels\uff1aApp\uff1aHello spec\uff1aContainers\uff1a-Name\uff1aHello-Container image\uff1abusybox\u547d\u4ee4\uff1a[&#39\uff1bsh&#39\uff1b\uff0c&#39\uff1b-c&39\uff1b\uff0c&#39\uff1b\u4ece\u6211\u7684\u5bb9\u5668\u56de\u663eHello\uff01&amp\uff1b&amp\uff1b\u7761\u77203600&39\uff1b]\u3002\n\u7531ReplicaSet\u521b\u5efa\u7684\u6bcf\u4e2aPod\u90fd\u53ef\u4ee5\u7531metadata.ownerReferences\u5b57\u6bb5\u6807\u8bc6\u3002\u6b64\u5b57\u6bb5\u6307\u5b9a\u54ea\u4e2aReplicaSet\u62e5\u6709Pod\u3002\u5982\u679c\u5220\u9664\u4e86ReplicaSet\u62e5\u6709\u7684\u4efb\u4f55Pod\uff0cReplicaSet\u4f1a\u7acb\u5373\u901a\u77e5\u5e76\u91c7\u53d6\u76f8\u5e94\u64cd\u4f5c(\u5373\u91cd\u65b0\u521b\u5efaPod)\u3002\nReplicaSet\u8fd8\u4f7f\u7528\u9009\u62e9\u5668\u5bf9\u8c61\u548cmatchLabel\u6765\u68c0\u67e5\u5b83\u53ef\u80fd\u62e5\u6709\u7684\u4efb\u4f55\u65b0Pod\u3002\u5982\u679c\u5b58\u5728\u4e0e\u9009\u62e9\u5668\u6807\u7b7eReplicaSet\u5339\u914d\u7684\u65b0Pod\uff0c\u5e76\u4e14\u5b83\u6ca1\u6709\u6240\u6709\u8005\u5f15\u7528\uff0c\u6216\u8005\u6240\u6709\u8005\u4e0d\u662f\u63a7\u5236\u5668(\u5373\uff0c\u5982\u679c\u6211\u4eec\u624b\u52a8\u521b\u5efaPod)\uff0c\u5219ReplicaSet\u5c06\u63a5\u7ba1\u5b83\u5e76\u5f00\u59cb\u63a7\u5236\u5b83\u3002\n\u8be5\u547d\u4ee4\u5c06\u663e\u793aReplicaSet\u7684\u540d\u79f0\u4ee5\u53ca\u6240\u9700\u7684\u3001\u5f53\u524d\u7684\u548c\u5c31\u7eea\u7684Pod\u590d\u5236\u526f\u672c\u7684\u6570\u91cf\u3002\u5982\u679c\u5217\u51faPod\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u67095\u4e2aPod\u6b63\u5728\u8fd0\u884c\uff1a\n$kubectl get poNAME Ready\u72b6\u6001\u91cd\u65b0\u542f\u52a8aghello-dwx89 1/1\u8fd0\u884c0 31shello-fchvr 1/1\u8fd0\u884c0 31shello-fl6hd 1/1\u8fd0\u884c0 31shello-n667q 1/1\u8fd0\u884c0 31shello-rftkf 1/1\u8fd0\u884c0 31s\n\u60a8\u8fd8\u53ef\u4ee5\u6309\u6807\u7b7e\u5217\u51faPod\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8fd0\u884ckubectl get po-l=app=hello\uff0c\u60a8\u5c06\u83b7\u5f97\u8bbe\u7f6e\u4e86app=hello\u6807\u7b7e\u7684\u6240\u6709Pod\u3002\u76ee\u524d\uff0c\u8fd9\u662f\u6211\u4eec\u521b\u5efa\u76845\u4e2a\u540a\u8231\u3002\n\u8ba9\u6211\u4eec\u518d\u770b\u770b\u6240\u6709\u8005\u5f15\u7528\u5b57\u6bb5\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528-o YAML\u6807\u5fd7\u6765\u83b7\u53d6Kubernetes\u4e2d\u4efb\u4f55\u5bf9\u8c61\u7684YAML\u8868\u793a\u3002\u83b7\u5f97YAML\u540e\uff0c\u6211\u4eec\u5c06\u641c\u7d22ownerReferences\u5b57\u7b26\u4e32\uff1a\n$kubectl get po hello-dwx89-o yaml|grep-a5\u6240\u6709\u8005\u5f15\u7528.\u3002ownerReferences\uff1a-apiVersion\uff1aApp/v1 block OwnerDeletion\uff1atrue Controller\uff1atrue Kind\uff1aReplicaSet Name\uff1aHello\u3002\n\u5728ownerReferences\u4e2d\uff0c\u6240\u6709\u8005\u7684\u540d\u79f0\u8bbe\u7f6e\u4e3ahello\uff0c\u79cd\u7c7b\u8bbe\u7f6e\u4e3aReplicaSet\u3002\u8fd9\u662f\u62e5\u6709Pod\u7684ReplicaSet\u3002\n\u6ce8\u610f\u5230\u6211\u4eec\u662f\u5982\u4f55\u5728\u547d\u4ee4\u4e2d\u4f7f\u7528po\u6765\u5f15\u7528pod\u7684\u5417\uff1f\u67d0\u4e9bKubernetes\u8d44\u6e90\u6709\u77ed\u540d\u79f0\uff0c\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u5168\u540d\u3002\u5f53\u60a8\u8868\u793apod\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528po\uff1b\u5f53\u60a8\u8868\u793a\u90e8\u7f72\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528Deploy\u3002\u8981\u83b7\u53d6\u652f\u6301\u7684\u77ed\u540d\u79f0\u7684\u5b8c\u6574\u5217\u8868\uff0c\u53ef\u4ee5\u8fd0\u884ckubectl API-resources\u3002\n\u60a8\u5c06\u6ce8\u610f\u5230\u7684\u53e6\u4e00\u4ef6\u4e8b\u662fPod\u7684\u547d\u540d\u65b9\u5f0f\u3002\u4ee5\u524d\uff0c\u5728\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u5355\u4e2apod\u7684\u5730\u65b9\uff0cpod\u7684\u540d\u79f0\u662fhello-pod\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u5728YAML\u4e2d\u6307\u5b9a\u7684\u3002\u8fd9\u4e00\u6b21\uff0c\u5728\u4f7f\u7528\u4ee3\u8868\u65f6\u3002\n..", "note_en": "In this multi-part series of articles about Kubernetes, I&#39;ll try and capture what I think everyone who wants to learn and work with Kubernetes should know about.\n If you have read any of my  previous articles or  courses you know that I like to learn and teach by practical examples. As much as I like practical examples, there are a lot of terms and concepts in Kubernetes that you need to understand. But I promise you that once you go through the whole series you will understand the concepts  and be able to run an application or a service that uses a database inside Kubernetes.\n If you are a beginner to cloud-native, you might want to check out my  Beginners Guide to Docker article to get the basic understanding of Docker. But don&#39;t worry, even if you don&#39;t know about Docker, you&#39;ll be able to follow along.\n I will cover the following topics in this first part of the series on learning about Kubernetes:\n  After reading this article and going through the examples you will understand what is Kubernetes and learn about Kubernetes building blocks and resources such as pods, deployments, and services.\n    This article is a mix of theory and practice. You&#39;ll get the most out of this article if you follow along with the practical examples. To do that you will need the following tools:\n   There are multiple options you can go with. The most &#39;real-world&#39; option would be to get a Kubernetes cluster from one of the cloud providers. However, for multiple reasons that might not be an option for everyone.\n The next best option is to run a Kubernetes cluster on your computer. Assuming you have some memory and CPU to spare, you can use one of the following tools to run a single-node Kubernetes cluster on your computer:\n  To be honest, you could go with any of the above options. Creating Kubernetes replica sets, deployments, and pods work on any of them. You can also create Kubernetes services, however, things get a bit complicated when you&#39;re trying to use a LoadBalancer service type for example.\n With the cloud-managed cluster, creating a LoadBalancer service type creates an actual instance of the load balancer and you would get an external/public IP address you can use to access your services.\n The one solution from the above list that comes closest to simulating the LoadBalancer service type is  Docker Desktop. With Docker Desktop your service gets exposed on an external IP,  localhost. You can access these services using both  kind and  Minikube as well, however, it requires you to run additional commands.\n For that purpose, I&#39;ll be using  Docker Desktop in this article. You can follow the installation instructions for all options from their respective websites.\n  After you&#39;ve installed one of these tools, make sure you download the  Kubernetes CLI. This is a single binary called  kubectl and it allows you to run commands against your cluster. To make sure everything is working correctly, you can run  kubectl get nodes to list all nodes in the Kubernetes cluster. You should get an output similar to this one:\n  You can also check that the context is set correctly to  docker-desktop. Kubernetes uses a configuration file called  config to find the information it needs to connect to the cluster. This file is located in your home folder - for example  $HOME/.kube/config. Context is an element inside that config file and it contains a reference to the cluster, namespace, and the user. If you&#39;re accessing or running a single cluster you will only have one context in the config file. However, you can have multiple contexts defined that point to different clusters.\n Using the  kubectl config command you can view these contexts and switch between them. You can run the  current-context command to view the current context:\n  There are other commands such as  use-context,  set-context,  view-contexts, and so on. I prefer to use a tool called   kubectx. This tool allows you to quickly switch between different Kubernetes contexts. For example, if I have three clusters (contexts) set in the config file, running  kubectx outputs this:\n  The currently selected context is also highlighted when you run the command. To switch to the  minikube context, I can run:  kubectx minikube.\n The equivalent commands you can run with  kubectl would be  kubectl config get-contexts to view all contexts, and  kubectl config use-context minikube to switch the context.\n Before you continue, make sure your context is set to  docker-desktop if you&#39;re using Docker for Mac/Windows.\n    Containers are everywhere these days. Tools such as  Docker are used to package anything from applications to databases. With the growing popularity of microservice architecture and moving away from the monolithic applications, a monolith application is now a collection of multiple smaller services.\n Managing a single application has its own issues and challenges, let alone managing tens of smaller services that have to work together. You need a way to automate and manage your deployments, figure out how to scale individual services, how to use the network and connect them, and so on.\n This is where container orchestration steps in. Container orchestration can help you manage the lifecycles of your containers. Using a container orchestration system allows you to do the following:\n  A couple of examples of container orchestrators are  Marathon,  Docker Swarm and the one I&#39;ll be talking about today,  Kubernetes.\n Kubernetes is an open-source project and one of the popular choices for cluster management and scheduling container-centric workloads. You can use Kubernetes to run your containers, do zero-downtime deployments where you can update your application without impacting your users, and bunch of other cool stuff.\n  Frequently, you will see Kubernetes being referred to as &#34;K8S&#34;. K8S is a numeronym for Kubernetes. The first (K) and the last letter (S) are first andthe last letters in the word Kubernetes, and 8 is the number of charactersbetween those two letters. Other popular numeronyms are &#34;i18n&#34; forinternationalization or &#34;a11y&#34; for accessibility.\n  I have seen the question about Kubernetes vs. Docker and what the difference is between both. Using Docker you can package your application. This package is called an  image or a  Docker image. You can think of an image as a template. Using Docker you can create  containers from your images. For example, if your Docker image contains a Go binary or a Java application, then the container is a running instance of that application. If you want to learn more about Docker, check out the  Beginners Guide to Docker.\n Kubernetes on the other hand is a container orchestration tool that knows how to manage Docker (and other) containers. Kubernetes uses a higher-level constructs such as Pods to wrap Docker (or other) containers and gives you the ability to manage them.\n  Docker Swarm is a container orchestration tool, just like Kubernetes is. You can use it to manage Docker containers. Using Swarm, you can connect multiple Docker hosts into a virtual host. You can then use Docker CLI to talk to multiple hosts at once and run Docker containers on it.\n  A Kubernetes cluster is a set of physical or virtual machines and other infrastructure resources that are needed to run your containerized applications. Each machine in a Kubernetes cluster is called a  node. There are two types of node in each Kubernetes cluster:\n    One of the main components on the master node is called the  API server. The API server is the endpoint that Kubernetes CLI ( kubectl) talks to when you&#39;re creating Kubernetes resources or managing the cluster.\n The  scheduler component works together with the API server to schedule the applications or workloads on to the worker nodes. It also knows about resources that are available on the nodes as well as the resources requested by the workloads. Using this information it can decide which worker nodes your workloads end up on.\n   The  kube controller manager runs multiple controller processes. These controllers watch the state of the cluster and try to reconcile the current state of the cluster (e.g. &#34;5 running replicas of workload A&#34;) with the desired state (e.g &#34;I want 10 running replicas of workload A&#34;). The controllers include a node controller, replication controller, endpoints controller, and service account and token controllers.\n The  cloud controller manager runs controllers that are specific to the cloud provider and can manage resources outside of your cluster. This controller only runs if your Kubernetes cluster is running in the cloud. If you&#39;re running Kubernetes cluster on your computer, this controller won&#39;t be running. The purpose of this controller is for the cluster to talk to the cloud providers to manage the nodes, load balancers, or routes.\n Finally,  etcd is a distributed key-value store. The state of the Kubernetes cluster and the API objects is stored in the etcd.\n  Just like on the master node, worker nodes have different components running as well. The first one is the  kubelet. This service runs on each worker node and its job is to manage the container. It makes sure containers are running and healthy and it connects back to the control plane. Kubelet talks to the API server and it is responsible for managing resources on the node it&#39;s running on.\n When a new worker node is added to the cluster, the kubelet introduces itself and provides the resources it has (e.g. &#34;I have X CPU and Y memory&#34;). Then, it asks if any containers need to be run. You can think of the kubelet as a worker node manager.\n Kubelet uses the container runtime interface (CRI) to talk to the container runtime. The container runtime is responsible for working with the containers. In addition to Docker, Kubernetes also supports other container runtimes, such as  containerd or  cri-o.\n  The containers are running inside pods, represented by the blue rectangles in the above figure (containers are the red rectangles inside each pod). A pod is the smallest deployable unit that can be created, schedule, and managed on a Kubernetes cluster. A pod is a logical collection of containers that make up your application. The containers running inside the same pod also share the network and storage space.\n Each worker node also has a proxy that acts as a network proxy and a load balancer for workloads running on the worker nodes. Client requests that are coming through an external load balancer are redirected to containers running inside the pod through these proxies.\n   The Kubernetes API defines a lot of objects that are called resources, such as namespaces, pods, services, secrets, config maps, ...\n Of course, you can also define your own, custom resources as well using the custom resource definition or CRD.\n After you&#39;ve configured Kubernetes CLI and your cluster, you should try and run  kubectl api-resources command. It will list all defined resources - there will be a lot of them.\n Resources in Kubernetes can be defined using YAML. YAML (YAML Ain&#39;t Markup Language) is commonly used for configuration files and. It is a superset of JSON format, which means that you can also use JSON to describe Kubernetes resources.\n Every Kubernetes resource has an  apiVersion and  kind fields to describe which version of the Kubernetes API you&#39;re using when creating the resource (for example,  apps/v1) and what kind of a resource you are creating (for example,  Deployment,  Pod,  Service, etc.).\n The  metadata includes the data that can help to identify the resource you are creating. This usually includes a  name (for example  mydeployment) and the  namespace where the resource will be created. There are also other fields that you can provide in the metadata, such as  labels and  annotations, and a couple of them that get added after you created the resource (such as  creationTimestamp for example).\n  Pods are probably one of the most common resources in Kubernetes. They are a collection of one or more containers. The containers within the pod share the same network and storage. This means that any containers within the same pod can talk to each other through  localhost.\n Pods are designed to be ephemeral, which means that they last for a very short time. Pods can get rescheduled to run on different nodes at any time. This means any time your pod is restarted, your containers will be restarted as well.\n  When created, each pod gets assigned a unique IP address. The containers inside your pod can listen to different ports. To access your containers you can use the pods&#39; IP address. Using the example from the above figure, you could run  curl 10.1.0.1:3000 to communicate to the one container and  curl 10.1.0.1:5000 to communicate to the other container. However, if you wanted to talk between containers - for example, calling the top container from the bottom one, you could use  http://localhost:3000.\n If your pod restarts, it will get a different IP address. Therefore, you cannot rely on the IP address. Talking to your pods directly by the IP is not the right way to go.\n An abstraction called a Kubernetes Service is what you can to communicate with your pods. A Kubernetes Service gives you a stable IP address and DNS name. I&#39;ll talk about services later on.\n  All containers within the pod get scaled together. The figure below shows how scaling from a single pod to four pods would look like. Note that you cannot scale individual containers within the pods. The pod is the unit of scale.\n  &#34;Awesome! I can run my application and a database in the same pod!!&#34; No! Do not do that.\n First, in most cases your database will not scale at the same rate as your application. Remember, you&#39;re scaling a pod and all containers inside that pod, not just a single container.\n Second, running a stateful workload in Kubernetes, such as a database, is different from running a  stateless workload. For example, you need to ensure that data is persistent between pod restarts and that the restarted pods have the same network identity as the restarted pod. Resources like persistent volumes and stateful sets can be used to achieve this. I will talk more about running stateful workloads in Kubernetes later on.\n  Usually, you shouldn&#39;t be creating pods manually. You can do it, but you really should not. The reason being is that if the pod crashes or if it gets deleted, it will be gone forever.\n  apiVersion : v1 kind : Pod metadata :  name : hello -pod  labels :  app : hello spec :  containers :  -  name : hello -container  image : busybox  command :  [ &#39;sh&#39; ,  &#39;-c&#39; ,  &#39;echo Hello from my container! &amp;&amp; sleep 3600&#39; ]\n In the first couple of lines, we are defining the kind of resource ( Pod) and the metadata. The metadata includes the name of our pod ( hello-pod) and a set of labels that are simple key-value pairs ( app=hello).\n In the  spec section we are describing how the pod should look like. We will have a single container inside this pod, called  hello-container, and it will run the image called  busybox. When the container has started, the command defined in the  command field will be executed.\n To create the pod, you can save the above YAML into a file called  pod.yaml for example. Then, you can use Kubernetes CLI ( kubectl) to create the pod:\n  Kubernetes responds with the resource type and the name that it was created. You can use  kubectl get pods to get a list of all pods running the  default namespace of the cluster.\n  You can use the  logs command to see the output from the container running inside the pod:\n  In case you&#39;d have multiple containers running inside the same pod, you could use the  -c flag to specify the container name you want to get the logs from. For example:  kubectl logs hello-pod -c hello-container\n If we delete this pod using  kubectl delete pod hello-pod, the pod will be gone forever. There&#39;s nothing that would automatically restart the pod. If you run the  kubectl get pods again, you notice the pod is gone:\n  This is the opposite of the behavior you want. If you have your workload running in a pod, you would want it to be automatically rescheduled and restarted if something goes wrong.\n To make sure the crashed pods get restarted, you need a controller that can manage the pods&#39; lifecycle. This controller ensures your pod is automatically rescheduled if it&#39;s deleted or if something bad happens (nodes go down, pods need to be evicted).\n  The job of a ReplicaSet is to maintain a stable number of pod copies or replicas. The ReplicaSet controller guarantees that a specified number of identical pods is running at all times. The replica count is controlled by the  replicas field in the resource definition.\n If you start with a single pod and you want to scale to 5 pods, the ReplicaSet controller uses that current state (one pod) in the cluster and goes and creates four more pods to meet the desired state (5 pods). The ReplicaSet also keeps an eye on the pods, so if you delete one or scale it up or down, it will do the necessary to meet the desired number of replicas. To create the pods, ReplicaSet uses the pod template that&#39;s part of the resource definition.\n   apiVersion : apps/v1 kind : ReplicaSet metadata :  name : hello  labels :  app : hello spec :  replicas :  5  selector :  matchLabels :  app : hello  template :  metadata :  labels :  app : hello  spec :  containers :  -  name : hello -container  image : busybox  command :  [ &#39;sh&#39; ,  &#39;-c&#39; ,  &#39;echo Hello from my container! &amp;&amp; sleep 3600&#39; ]\n Every pod that&#39;s created by a ReplicaSet can be identified by the  metadata.ownerReferences field. This field specifies which ReplicaSet owns the pod. If any of the pods owned by the ReplicaSet is deleted, the ReplicaSet nows about it and acts accordingly (i.e. re-creates the pod).\n The ReplicaSet also uses the  selector object and  matchLabel to check for any new pods that it might own. If there&#39;s a new pod that matches the selector labels the ReplicaSet and it doesn&#39;t have an owner reference or the owner is not a controller (i.e. if we manually create a pod), the ReplicaSet will take it over and start controlling it.\n      The command will show you the name of the ReplicaSet and the number of desired, current, and ready pod replicas. If you list the pods, you will notice that 5 pods are running:\n $ kubectl get poNAME READY STATUS RESTARTS AGEhello-dwx89 1/1 Running 0 31shello-fchvr 1/1 Running 0 31shello-fl6hd 1/1 Running 0 31shello-n667q 1/1 Running 0 31shello-rftkf 1/1 Running 0 31s\n You can also list the pods by their labels. For example, if you run  kubectl get po -l=app=hello, you will get all pods that have  app=hello label set. This, at the moment, is the same 5 pods we created.\n Let&#39;s also look at the owner reference field. We can use the  -o yaml flag to get the YAML representation of any object in Kubernetes. Once we get the YAML, we will search for the  ownerReferences string:\n $ kubectl get po hello-dwx89 -o yaml | grep -A5 ownerReferences... ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: ReplicaSet name: hello\n In the  ownerReferences, the name of the owner is set to  hello, and the kind is set to ReplicaSet. This is the ReplicaSet that owns the pod.\n Notice how we used  po in the command to refer to pods? Some Kubernetes resources have short names that can be used in place of &#39;full name&#39;. You can use  po when you mean  pods or  deploy when you mean  deployment. To get the full list of supported short names, you can run  kubectl api-resources.\n Another thing you will notice is how the pods are named. Previously, where we were creating a single pod directly, the name of the pod was  hello-pod, because that&#39;s what we specified in the YAML. This time, when using the Rep\n......", "posttime": "2020-05-31 12:13:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u65af,beginners,pod", "title": "\u6211\u5199\u4e86\u4e00\u672c\u5e93\u4f2f\u5185\u65af\u5165\u95e8\u6307\u5357", "title_en": "I wrote a beginners guide to Kubernetes", "transed": 1, "url": "https://www.learncloudnative.com/blog/2020-05-26-getting-started-with-kubernetes-part-1/", "via": "", "real_tags": ["\u5185\u65af", "beginners", "pod"]}, {"category": "", "categoryclass": "", "imagename": "e69287bf697c35e050bd20a96e12c977.jpg", "infoid": 1004481, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u79d1\u5b66\u5185\u5e55)-\u4e00\u9879\u65b0\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u4eba\u5de5\u5927\u8111\u53ef\u80fd\u9700\u8981\u6df1\u5ea6\u7761\u7720\u624d\u80fd\u4fdd\u6301\u7a33\u5b9a\uff0c\u5c31\u50cf\u771f\u6b63\u7684\u5927\u8111\u4e00\u6837\u3002\n\u5728\u73b0\u5728\u7528\u4e8e\u8bc6\u522b\u8fc7\u8857\u884c\u4eba\u5230\u8bca\u65ad\u764c\u75c7\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u88ab\u79f0\u4e3a\u795e\u7ecf\u5143\u7684\u7ec4\u4ef6\u88ab\u63d0\u4f9b\u6570\u636e\uff0c\u5e76\u5408\u4f5c\u89e3\u51b3\u95ee\u9898\uff0c\u6bd4\u5982\u8bc6\u522b\u56fe\u50cf\u3002\u795e\u7ecf\u7f51\u7edc\u53cd\u590d\u8c03\u6574\u5176\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u5e76\u89c2\u5bdf\u8fd9\u4e9b\u65b0\u7684\u884c\u4e3a\u6a21\u5f0f\u662f\u5426\u66f4\u5584\u4e8e\u89e3\u51b3\u95ee\u9898\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7f51\u7edc\u4f1a\u53d1\u73b0\u54ea\u4e9b\u6a21\u5f0f\u4f3c\u4e4e\u6700\u9002\u5408\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u3002\u7136\u540e\uff0c\u5b83\u91c7\u7528\u8fd9\u4e9b\u4f5c\u4e3a\u9ed8\u8ba4\u503c\uff0c\u6a21\u4eff\u4eba\u8111\u4e2d\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\n\u5728\u5927\u591a\u6570\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u968f\u7740\u8f93\u5165\u7684\u53d8\u5316\u800c\u4e0d\u65ad\u53d8\u5316\u7684\u6570\u5b57\u3002\u8fd9\u5927\u81f4\u7c7b\u4f3c\u4e8e\u751f\u7269\u795e\u7ecf\u5143\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53ef\u80fd\u53d1\u51fa\u7684\u4fe1\u53f7\u6570\u91cf\u3002\n\u76f8\u53cd\uff0c\u5728\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u795e\u7ecf\u5143\u53ea\u6709\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u63a5\u6536\u5230\u4e00\u5b9a\u6570\u91cf\u7684\u8f93\u5165\u4fe1\u53f7\u540e\uff0c\u624d\u4f1a\u5c16\u5cf0\u6216\u4ea7\u751f\u8f93\u51fa\u4fe1\u53f7\uff0c\u4ece\u800c\u66f4\u63a5\u8fd1\u4e8e\u6a21\u62df\u771f\u5b9e\u7684\u751f\u7269\u795e\u7ecf\u5143\u7684\u884c\u4e3a\u3002\n\u56e0\u4e3a\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u5f88\u5c11\u53d1\u51fa\u5c16\u5cf0\u4fe1\u53f7\uff0c\u6240\u4ee5\u5b83\u4eec\u4f20\u8f93\u7684\u6570\u636e\u6bd4\u5178\u578b\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u8981\u5c11\u5f97\u591a\uff0c\u539f\u5219\u4e0a\u9700\u8981\u7684\u529f\u7387\u548c\u901a\u4fe1\u5e26\u5bbd\u4e5f\u8981\u5c0f\u5f97\u591a\u3002\u5b9e\u73b0\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u795e\u7ecf\u5f62\u6001\u786c\u4ef6\uff0c\u5373\u6a21\u62df\u795e\u7ecf\u5143\u53ca\u5176\u8fde\u63a5\u7684\u7535\u5b50\u8bbe\u5907\u3002\n\u7136\u800c\uff0c\u7528\u4e8e\u5feb\u901f\u8bad\u7ec3\u6807\u51c6\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u4f20\u7edf\u6280\u672f\u4e0d\u9002\u7528\u4e8e\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u3002\u8fd9\u9879\u7814\u7a76\u7684\u4e3b\u8981\u4f5c\u8005\u3001\u65b0\u58a8\u897f\u54e5\u5dde\u6d1b\u65af\u963f\u62c9\u83ab\u65af\u56fd\u5bb6\u5b9e\u9a8c\u5ba4\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u4f0a\u9759\u00b7\u6c83\u7279\u91d1\u65af(\u97f3\u8bd1)\u8bf4\uff0c\u6211\u4eec\u4ecd\u5728\u5b66\u4e60\u5982\u4f55\u8bad\u7ec3\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u6765\u6267\u884c\u6709\u7528\u7684\u4efb\u52a1\u3002\n\u6c83\u7279\u91d1\u65af\u548c\u5979\u7684\u540c\u4e8b\u4eec\u8bd5\u9a8c\u4e86\u5bf9\u795e\u7ecf\u5f62\u6001\u5904\u7406\u5668\u8fdb\u884c\u7f16\u7a0b\uff0c\u4ee5\u5b66\u4e60\u57fa\u4e8e\u7a00\u758f\u6570\u636e\u91cd\u5efa\u56fe\u50cf\u548c\u89c6\u9891\uff0c\u8fd9\u6709\u70b9\u50cf\u4eba\u7c7b\u5927\u8111\u5728\u7ae5\u5e74\u53d1\u5c55\u671f\u95f4\u5982\u4f55\u4ece\u73af\u5883\u4e2d\u5b66\u4e60\u3002\u7136\u800c\uff0c\u6211\u4eec\u6240\u6709\u7684\u5b66\u4e60\u5c1d\u8bd5\u6700\u7ec8\u90fd\u53d8\u5f97\u4e0d\u7a33\u5b9a\uff0c\u8fd9\u9879\u7814\u7a76\u7684\u8d44\u6df1\u4f5c\u8005\u3001\u6d1b\u65af\u963f\u62c9\u83ab\u65af\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u52a0\u52d2\u7279\u00b7\u80af\u626c(Garrett Kenyon)\u8bf4\u3002\n\u79d1\u5b66\u5bb6\u4eec\u5bf9\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4e86\u8ba1\u7b97\u673a\u6a21\u62df\uff0c\u4ee5\u627e\u51fa\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5c3d\u7ba1\u5b83\u53ef\u4ee5\u5b66\u4f1a\u8bc6\u522b\u5b83\u88ab\u8bad\u7ec3\u6765\u5bfb\u627e\u7684\u6570\u636e\uff0c\u4f46\u5f53\u8fd9\u6837\u7684\u8bad\u7ec3\u6301\u7eed\u8db3\u591f\u957f\u7684\u65f6\u95f4\u65f6\uff0c\u5b83\u7684\u795e\u7ecf\u5143\u5f00\u59cb\u8fde\u7eed\u653e\u7535\uff0c\u65e0\u8bba\u5b83\u4eec\u6536\u5230\u4ec0\u4e48\u4fe1\u53f7\u3002\n\u6c83\u7279\u91d1\u65af\u56de\u5fc6\u8bf4\uff0c\u4ed6\u4eec\u51e0\u4e4e\u5728\u7edd\u671b\u7684\u60c5\u51b5\u4e0b\uff0c\u8bd5\u56fe\u8ba9\u6a21\u62df\u57fa\u672c\u4e0a\u7ecf\u5386\u6df1\u5ea6\u7761\u7720\u3002\u4ed6\u4eec\u5c06\u5176\u66b4\u9732\u5728\u632f\u8361\u566a\u97f3\u7684\u5faa\u73af\u4e2d\uff0c\u5927\u81f4\u76f8\u5f53\u4e8e\u6df1\u5ea6\u7761\u7720\u4e2d\u770b\u5230\u7684\u7f13\u6162\u8111\u7535\u6ce2\uff0c\u8fd9\u4f7f\u6a21\u62df\u6062\u590d\u4e86\u7a33\u5b9a\u6027\u3002\u6c83\u7279\u91d1\u65af\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u5bf9\u6162\u6ce2\u7761\u7720\u7684\u6a21\u62df\u53ef\u80fd\u6709\u52a9\u4e8e\u9632\u6b62\u795e\u7ecf\u5143\u5728\u968f\u673a\u566a\u97f3\u4e2d\u4ea7\u751f\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u7279\u5f81\u7684\u5e7b\u89c9\u3002\n\u8fd9\u4e9b\u53d1\u73b0\u53ef\u80fd\u6709\u52a9\u4e8e\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6240\u6709\u5df2\u77e5\u7684\u80fd\u591f\u4ece\u73af\u5883\u4e2d\u5b66\u4e60\u7684\u751f\u7269\u795e\u7ecf\u7cfb\u7edf\uff0c\u4ece\u679c\u8747\u5230\u4eba\u7c7b\uff0c\u90fd\u7ecf\u5386\u6162\u6ce2\u7761\u7720\u3002\u80af\u626c\u8bf4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u6162\u6ce2\u7761\u7720\u3002\u5373\u4f7f\u662f\u6c34\u751f\u54fa\u4e73\u52a8\u7269--\u9cb8\u9c7c\u3001\u6d77\u8c5a\u7b49\u7b49--\u4e5f\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u7684\u6162\u6ce2\u7761\u7720\uff0c\u5c3d\u7ba1\u660e\u663e\u5b58\u5728\u5bfb\u627e\u66ff\u4ee3\u54c1\u7684\u8fdb\u5316\u538b\u529b\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6d77\u8c5a\u548c\u9cb8\u9c7c\u4e00\u6b21\u53ea\u7528\u534a\u4e2a\u5927\u8111\u7761\u89c9\u3002\n\u80af\u626c\u8bf4\uff0c\u4e3a\u4ec0\u4e48\u6162\u6ce2\u7761\u7720\u5982\u6b64\u4e0d\u53ef\u6216\u7f3a\uff1f\u6211\u4eec\u7684\u7ed3\u679c\u505a\u51fa\u4e86\u4ee4\u4eba\u60ca\u8bb6\u7684\u9884\u6d4b\uff0c\u5373\u6162\u6ce2\u7761\u7720\u53ef\u80fd\u5bf9\u4e8e\u4efb\u4f55\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\uff0c\u6216\u8005\u5b9e\u9645\u4e0a\u662f\u4efb\u4f55\u5177\u6709\u795e\u7ecf\u7cfb\u7edf\u7684\u6709\u673a\u4f53\uff0c\u80fd\u591f\u4ece\u5176\u73af\u5883\u4e2d\u5b66\u4e60\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u6c83\u7279\u91d1\u65af\u8bf4\uff0c\u672a\u6765\u7684\u7814\u7a76\u53ef\u80fd\u4f1a\u7528\u771f\u6b63\u7684\u795e\u7ecf\u5f62\u6001\u5904\u7406\u5668\u6765\u6d4b\u8bd5\u8fd9\u4e9b\u60f3\u6cd5\uff0c\u4ee5\u54cd\u5e94\u73af\u5883\u6570\u636e\u7684\u6765\u6e90\uff0c\u4f8b\u5982\u6a21\u4eff\u773c\u775b\u5185\u5149\u654f\u89c6\u7f51\u819c\u7684\u76f8\u673a\u3002\n\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u7684\u82f1\u7279\u5c14(Intel)\u4fc4\u52d2\u5188\u5dde\u5e0c\u5c14\u65af\u4f2f\u52d2(Hillsboro)\u795e\u7ecf\u5f62\u6001\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u4e3b\u4efb\u8fc8\u514b\u00b7\u6234\u7ef4\u65af(Mike Davies)\u8868\u793a\uff0c\u5b9a\u671f\u6dfb\u52a0\u566a\u97f3\u6709\u671b\u7a33\u5b9a\u8fd9\u4e9b\u7f51\u7edc\u7684\u5b66\u4e60\u80fd\u529b\uff0c\u9632\u6b62\u5b83\u4eec\u53d8\u5f97\u66f4\u52a0\u8106\u5f31\u548c\u964d\u4f4e\u8fd0\u8425\u8d28\u91cf\u3002\u6211\u771f\u7684\u770b\u5230\u4e86\u795e\u7ecf\u5f62\u6001\u8bbe\u5907\u7684\u5de8\u5927\u524d\u666f\uff0c\u8fd9\u79cd\u8bbe\u5907\u53ef\u4ee5\u4f7f\u81ea\u5df1\u9002\u5e94\u73b0\u5b9e\u4e16\u754c\u4e2d\u4efb\u4f55\u90e8\u7f72\u7684\u5730\u65b9\uff0c\u4ee5\u6267\u884c\u4e00\u4e9b\u4f60\u53ef\u80fd\u65e0\u6cd5\u5728\u5de5\u5382\u63d0\u524d\u5b8c\u7f8e\u8bad\u7ec3\u5b83\u7684\u884c\u4e3a\u3002\n\u79d1\u5b66\u5bb6\u4eec\u8ba1\u5212\u57286\u670814\u65e5\u516c\u5e03\u4ed6\u4eec\u7684\u53d1\u73b0\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6a21\u5f0f\u8bc6\u522b\u4f1a\u8bae\u7684\u4e00\u90e8\u5206\u3002", "note_en": "(Inside Science) \u2014 Artificial brains may need deep sleep in order to keep stable, a new study finds, much as real brains do.\n In the artificial neural networks now used for everything from identifying pedestrians crossing streets to diagnosing cancers, components dubbed neurons are supplied data and cooperate to solve a problem, such as recognizing images. The neural network repeatedly adjusts the interactions between its neurons and sees if these new patterns of behavior are better at solving the problem. Over time, the network discovers which patterns seem best at computing solutions. It then adopts these as defaults, mimicking the process of learning in the human brain.\n In most artificial neural networks, a neuron&#39;s output is a number that alters continuously as the input it is fed changes. This is roughly analogous to the number of signals a biological neuron might fire over a span of time.\n In contrast, in a spiking neural network, a neuron &#34;spikes,&#34; or generates an output signal, only after it receives a certain amount of input signals over a given time, more closely mimicking how real biological neurons behave.\n Since spiking neural networks only rarely fire spikes, they shuffle around much less data than typical artificial neural networks and in principle require much less power and communication bandwidth. One way to implement spiking neural networks is to use\u00a0 neuromorphic hardware, electronics that mimic neurons and their connections.\n However, conventional techniques used to rapidly train standard artificial neural networks do not work on spiking neural networks. &#34;We are still learning how to train spiking neural networks to perform useful tasks,&#34; said study lead author Yijing Watkins, a computer scientist at Los Alamos National Laboratory in New Mexico.\n Watkins and her colleagues experimented with programming neuromorphic processors to learn to reconstruct images and video based on sparse data, a bit like how the human brain learns from its environment during childhood development. &#34;However, all of our attempts to learn eventually became unstable,&#34; said study senior author Garrett Kenyon, also a computer scientist at Los Alamos.\n The scientists ran computer simulations of a spiking neural network to find out what happened. They found that although it could learn to identify the data it was trained to look for, when such training went uninterrupted long enough, its neurons began to continuously fire no matter what signals they received.\n Watkins recalled that &#34;almost in desperation,&#34; they tried having the simulation essentially undergo deep sleep. They exposed it to cycles of oscillating noise, roughly corresponding to the slow brain waves seen in deep sleep, which restored the simulation to stability. The researchers suggest this simulation of slow-wave sleep may help &#34;prevent neurons from hallucinating the features they&#39;re looking for in random noise,&#34; Watkins said.\n These findings may help explain why all known biological neural systems capable of learning from their environment, from fruit flies to humans, undergo slow-wave sleep. Everyone needs slow-wave sleep, Kenyon said. &#34;Even aquatic mammals -- whales, dolphins and so on -- require periods of slow-wave sleep, despite the obvious evolutionary pressure to find some alternative. Instead, dolphins and whales sleep with half their brain at a time.&#34;\n &#34;Why is slow-wave sleep so indispensable?&#34; Kenyon said. &#34;Our results make the surprising prediction that slow-wave sleep may be essential for any spiking neural network, or indeed any organism with a nervous system, to be able to learn from its environment.&#34;\n Future research could test these ideas with real neuromorphic processors in response to a source of environmental data, such as cameras that mimic the light-sensitive retinas within eyes, Watkins said.\n &#34;Adding in noise periodically can hopefully stabilize the ability of these networks to learn and prevent them from becoming more brittle and degrading their operations,&#34; said Mike Davies, director of Intel&#39;s neuromorphic computing lab in Hillsboro, Oregon, who did not take part in this research. &#34;I really see huge promise in neuromorphic devices that can adapt themselves to wherever they are deployed in the real world to perform some behavior you may not be able to train it for perfectly in advance in the factory.&#34;\n The scientists are scheduled to\u00a0 present their findings virtually\u00a0June 14 as part of the Conference on Computer Vision and Pattern Recognition.", "posttime": "2020-05-31 11:24:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u8111,brains,\u795e\u7ecf\u5143", "title": "\u4e3a\u4ec0\u4e48\u4eba\u5de5\u5927\u8111\u9700\u8981\u7761\u7720", "title_en": "Why Artificial Brains Need Sleep", "transed": 1, "url": "https://www.discovermagazine.com/technology/why-artificial-brains-need-sleep", "via": "", "real_tags": ["\u5927\u8111", "brains", "\u795e\u7ecf\u5143"]}, {"category": "", "categoryclass": "", "imagename": "6a63b4b2ff4e4cf8e811948a5e058faf.png", "infoid": 1004480, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u7684\u6700\u540e\u4e00\u53e5\u8bdd\u3002\u5728\u4e00\u540d\u65c1\u89c2\u8005\u5f55\u5236\u7684\u89c6\u9891\u4e2d\uff0c\u53ef\u4ee5\u542c\u5230\u4ed610\u6b21\u8bf4\u8fd9\u4e9b\u8bdd\uff0c\u6073\u6c42\u81ea\u5df1\u7684\u751f\u547d\u3002\u4e5f\u8bb8\u66f4\u591a\u3002\u4e00\u540d\u8b66\u5bdf\u8dea\u5728\u4ed6\u7684\u8116\u5b50\u4e0a8\u520646\u79d2\u3002\u800c\u53e6\u5916\u4e09\u540d\u8b66\u5b98\u5219\u7ad9\u5728\u4e00\u65c1\u770b\u7740\u3002\n\u50cf\u4f60\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u6211\u770b\u8fc7\u4ed6\u53bb\u4e16\u7684\u89c6\u9891\uff0c\u5e26\u7740\u6050\u60e7\u3001\u538c\u6076\u548c\u6124\u6012\u7684\u60c5\u7eea\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u665a\u4e0a\uff0c\u6211\u770b\u5230\u8fd9\u79cd\u6124\u6012\u8513\u5ef6\u5230\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u548c\u8bb8\u591a\u5176\u4ed6\u7f8e\u56fd\u57ce\u5e02\u7684\u8857\u5934\uff0c\u5e26\u6765\u4e86\u6bc1\u706d\u6027\u7684\u540e\u679c\u3002\u6211\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u6211\u662f\u5426\u5e94\u8be5\u76f4\u8a00\u4e0d\u8bb3\u3002\u4f46\u5728\u672c\u5468\u65e9\u4e9b\u65f6\u5019\u4e0e\u5bb6\u4eba\u8fdb\u884c\u4e86\u4e00\u4e9b\u60c5\u7eea\u6fc0\u52a8\u7684\u4ea4\u8c08\u540e\uff0c\u6211\u610f\u8bc6\u5230\u6211\u5fc5\u987b\u8fd9\u6837\u505a\u3002\n\u5c3d\u7ba1\u6211\u662f\u4e00\u5bb6\u5168\u7403\u94f6\u884c\u7684\u9996\u5e2d\u8d22\u52a1\u5b98\uff0c\u4f46\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7(George Floyd)\u3001\u4f50\u6cbb\u4e9a\u5dde\u7684\u827e\u54c8\u8302\u5fb7\u00b7\u963f\u8d1d\u91cc(Ahmaud Arberg)\u548c\u80af\u5854\u57fa\u5dde\u7684\u5e03\u96f7\u5a1c\u00b7\u6cf0\u52d2(Breonna Taylor)\u9047\u5bb3\u4e8b\u4ef6\u63d0\u9192\u4eba\u4eec\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u7f8e\u56fd\u9ed1\u4eba\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u9762\u4e34\u7740\u5371\u9669\u3002\u5c3d\u7ba1\u7f8e\u56fd\u53d6\u5f97\u4e86\u8fdb\u6b65\uff0c\u4f46\u7f8e\u56fd\u9ed1\u4eba\u5f80\u5f80\u88ab\u5265\u593a\u4e86\u5176\u4ed6\u4eba\u8ba4\u4e3a\u7406\u6240\u5f53\u7136\u7684\u57fa\u672c\u7279\u6743\u3002\u6211\u8bf4\u7684\u4e0d\u662f\u8d22\u5bcc\u3001\u6559\u80b2\u6216\u5c31\u4e1a\u673a\u4f1a\u7684\u7279\u6743\u3002\u6211\u73b0\u5728\u8c08\u8bba\u7684\u662f\u57fa\u672c\u7684\u4eba\u6743\u548c\u516c\u6c11\u6743\u5229\uff0c\u4ee5\u53ca\u968f\u4e4b\u800c\u6765\u7684\u5c0a\u4e25\u548c\u5c0a\u91cd\u3002\u6211\u8bf4\u7684\u662f\u50cf\u6162\u8dd1\u4e00\u6837\u5e73\u51e1\u7684\u4e8b\u60c5\u3002\n\u79cd\u65cf\u4e3b\u4e49\u4ecd\u7136\u662f\u6211\u4eec\u793e\u4f1a\u5982\u6b64\u591a\u75db\u82e6\u548c\u4e11\u964b\u7684\u6839\u6e90-\u4ece\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u7684\u8857\u5934\u5230\u65b0\u51a0\u80ba\u708e\u9020\u6210\u7684\u4e0d\u5e73\u7b49\u3002\u53ea\u8981\u8fd9\u662f\u771f\u7684\uff0c\u7f8e\u56fd\u81ea\u7531\u548c\u5e73\u7b49\u7684\u5b6a\u751f\u7406\u60f3\u5c31\u4ecd\u7136\u9065\u4e0d\u53ef\u53ca\u3002\n\u6211\u4e3a\u80fd\u5728\u82b1\u65d7\u5de5\u4f5c\u611f\u5230\u81ea\u8c6a\uff0c\u8fd9\u662f\u4e00\u4e2a\u73cd\u89c6\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u7684\u7ec4\u7ec7\uff0c\u5f53\u8fd9\u4e9b\u4ef7\u503c\u89c2\u53d7\u5230\u5a01\u80c1\u65f6\uff0c\u5b83\u613f\u610f\u633a\u8eab\u800c\u51fa\uff0c\u65e0\u8bba\u662f\u52aa\u529b\u7f29\u5c0f\u6211\u4eec\u884c\u4e1a\u7684\u6027\u522b\u85aa\u916c\u5dee\u8ddd\uff0c\u8fd8\u662f\u547c\u5401\u590f\u6d1b\u8328\u7ef4\u5c14\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u8005\u7684\u66b4\u529b\u884c\u4e3a\u3002\n\u9664\u975e\u6211\u4eec\u6b63\u9762\u9762\u5bf9\uff0c\u5426\u5219\u8fd9\u4e9b\u7cfb\u7edf\u6027\u95ee\u9898\u4e0d\u4f1a\u6d88\u5931\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u6211\u4eec\u76ee\u7779\u4ec7\u6068\u3001\u79cd\u65cf\u4e3b\u4e49\u6216\u4e0d\u516c\u6b63\u65f6\uff0c\u6211\u4eec\u90fd\u5fc5\u987b\u7ee7\u7eed\u5927\u58f0\u75be\u547c\u3002\u6211\u77e5\u9053\u6211\u4f1a\u7684\uff0c\u6211\u5e0c\u671b\u4f60\u4e5f\u4f1a\u3002\n\u9664\u4e86\u76f4\u8a00\u4e0d\u8bb3\u5e76\u52aa\u529b\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6597\u4e89\u4e4b\u5916\uff0c\u6211\u548c\u6211\u7684\u59bb\u5b50\u8fd8\u51b3\u5b9a\u5411\u4e09\u4e2a\u4e0e\u4e0d\u516c\u6b63\u548c\u4e0d\u5e73\u7b49\u4f5c\u6597\u4e89\u7684\u7ec4\u7ec7\u6350\u6b3e--NAACP\u6cd5\u5f8b\u8fa9\u62a4\u548c\u6559\u80b2\u57fa\u91d1\u3001\u4fc3\u8fdb\u9879\u76ee\u548c\u6539\u53d8\u7684\u989c\u8272\u3002", "note_en": "Those words were George Floyd&#39;s last. In a video recorded by a bystander, he can be heard saying them, pleading for his life, 10 times. Maybe more. While a police officer kneeled on his neck for 8 minutes and 46 seconds. While three other officers stood by and WATCHED.\n  Like many of you, I have watched that video of his death with a combination of horror, disgust and anger. And over subsequent nights, I have watched that anger spill out onto the streets of Minneapolis and many other American cities with devastating consequences. I have debated whether I should speak out. But after some emotional conversations with my family earlier this week, I realized I had to.\n    Even though I&#39;m the CFO of a global bank, the killings of George Floyd in Minnesota, Ahmaud Arbery in Georgia and Breonna Taylor in Kentucky are reminders of the dangers Black Americans like me face in living our daily lives. Despite the progress the United States has made, Black Americans are too often denied basic privileges that others take for granted. I am not talking about the privileges of wealth, education or job opportunities. I&#39;m talking about fundamental human and civil rights and the dignity and respect that comes with them. I&#39;m talking about something as mundane as going for a jog.\n  Racism continues to be at the root of so much pain and ugliness in our society \u2013 from the streets of Minneapolis to the disparities inflicted by COVID-19. As long as that&#39;s true, America&#39;s twin ideals of freedom and equality will remain out of reach.\n  I&#39;m proud to work at Citi, an organization that cherishes diversity and inclusion and is willing to stand up for those values when they are threatened, whether it&#39;s working to close the gender pay gap in our industry or calling out the violence of white supremacists in Charlottesville.\n  These systemic problems will not go away until we confront them head on. So we must continue to speak up and speak out whenever we witness hatred, racism or injustice. I know I will \u2013 and I hope you will too.\n  In addition to speaking out and in an effort to aid in the fight to address these issues, my wife and I have decided to make donations to three organizations fighting injustice and inequality -- NAACP Legal Defense and Educational Fund, Advancement Project, and Color of Change.", "posttime": "2020-05-31 11:09:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u80fd,breathe,\u95ee\u9898", "title": "\u6211\u4e0d\u80fd\u547c\u5438\u4e86", "title_en": "I Can't Breathe", "transed": 1, "url": "https://blog.citigroup.com/2020/05/i-cant-breathe/", "via": "", "real_tags": ["\u4e0d\u80fd", "breathe", "\u95ee\u9898"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004479, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u5df2\u7ecf\u51fa\u7248\u4e86\u4e00\u672c\u4e66\uff0c\u901a\u8fc7\u5b9e\u73b0\u89e3\u91ca\u4e86Git\u7684\u5185\u90e8\u7ed3\u6784\uff1a\u6784\u5efaGit\u3002\n\u4f5c\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\uff0c\u60a8\u53ef\u80fd\u4f1a\u4f7f\u7528\u8bf8\u5982Git\u8fd9\u6837\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5e76\u4e14\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u67e5\u770b\u4e0d\u540c\u4e4b\u5904\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u68c0\u67e5\u6b63\u5728\u8fdb\u884c\u7684\u672a\u63d0\u4ea4\u5de5\u4f5c\uff0c\u67e5\u770b\u5728\u4e00\u6b21\u63d0\u4ea4\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u5728\u6267\u884c\u5408\u5e76\u4e4b\u524d\u6bd4\u8f83\u4e24\u4e2a\u5206\u652f\uff0c\u7b49\u7b49\u3002\u5dee\u5f02\u662f\u4e00\u79cd\u8bed\u8a00\uff0c\u901a\u8fc7\u8fd9\u79cd\u8bed\u8a00\uff0c\u60a8\u53ef\u4ee5\u4e86\u89e3\u8f6f\u4ef6\u4e2d\u7684\u60c5\u51b5\u53d1\u751f\u4e86\u600e\u6837\u7684\u53d8\u5316\u3002\n\u4f46\u662f\uff0c\u9664\u4e86\u88ab\u4eba\u4eec\u8bfb\u53d6\u4e4b\u5916\uff0c\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u8fd8\u4f7f\u7528Diffs\u6765\u81ea\u52a8\u5316\u66f4\u6539\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5c06diff\u53d1\u9001\u7ed9\u67d0\u4eba\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u8865\u4e01\u6216git\u5e94\u7528\u547d\u4ee4\u5c06\u5176\u5408\u5e76\u5230\u4ed6\u4eec\u7684\u5de5\u4f5c\u526f\u672c\u4e2d\u3002Git\u5408\u5e76\u5fc5\u987b\u534f\u8c03\u548c\u5408\u5e76\u4e24\u4e2a\u6216\u591a\u4e2a\u66f4\u6539\u5386\u53f2\uff0c\u4ee5\u751f\u6210\u4e00\u4e2aSingletree\uff0c\u901a\u5e38\u4f1a\u534f\u8c03\u540c\u4e00\u6587\u4ef6\u4e2d\u7684\u66f4\u6539\u3002Git Add--Patch\u5141\u8bb8\u60a8\u4ece\u5de5\u4f5c\u526f\u672c\u6587\u4ef6\u4e2d\u9009\u62e9\u5355\u4e2a\u66f4\u6539\uff0c\u800c\u4e0d\u662f\u5c06\u6574\u4e2a\u6587\u4ef6\u6dfb\u52a0\u5230\u7d22\u5f15\u4e2d\uff0c\u8fd9\u6d89\u53ca\u5230\u60a8(\u9605\u8bfb\u5dee\u5f02\u7684\u7528\u6237)\u548cGit\u6709\u9009\u62e9\u5730\u5c06\u5b83\u4eec\u5e94\u7528\u5230\u6587\u4ef6\u7684\u7d22\u5f15\u7248\u672c\u3002\u4e00\u4e9b\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4f7f\u7528\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02\u4f5c\u4e3a\u5b83\u4eec\u5b58\u50a8\u9879\u76ee\u5386\u53f2\u7684\u4e3b\u8981\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u6b21\u63d0\u4ea4\u4e4b\u524d\u5b58\u50a8\u6240\u6709\u4ee3\u7801\u7684\u5feb\u7167\u3002\n\u56e0\u6b64\uff0c\u5dee\u5f02\u662f\u7248\u672c\u63a7\u5236\u7684\u6838\u5fc3\uff0c\u4f46\u662f\u60a8\u53ef\u80fd\u6ca1\u6709\u8fc7\u591a\u8003\u8651\u5b83\u4eec\u662f\u5982\u4f55\u751f\u6210\u7684\u3002\u901a\u5e38\uff0c\u5f53\u60a8\u9605\u8bfb\u5dee\u5f02\u65f6\uff0c\u5bf9\u60a8\u6765\u8bf4\uff0c\u54ea\u4e9b\u4e8b\u60c5\u5e94\u8be5\u6807\u8bb0\u4e3a\u66f4\u6539\u4f3c\u4e4e\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u5bf9\u4e8e\u5728\u6587\u4ef6\u4e2d\u63d2\u5165\u65b0\u51fd\u6570\u3001\u5220\u9664\u5197\u4f59\u51fd\u6570\u6216\u91cd\u5199\u4e00\u8282\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u60a8\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u5fc3\u7406\u6a21\u578b\u3002\u7136\u800c\uff0c\u4e0d\u540c\u4e4b\u5904\u6bd4\u770b\u4e0a\u53bb\u8981\u591a\u5f97\u591a\uff0c\u800c\u4e14\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\u60f3\u4e00\u60f3\uff0c\u4f60\u5c06\u5982\u4f55\u8ba1\u7b97\u5dee\u503c\uff0c\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u51fd\u6570\u6765\u8ba1\u7b97\u5dee\u503c\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0cDIFF\u7a0b\u5e8f\u53ea\u5411\u60a8\u663e\u793a\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u4ec0\u4e48\u4fdd\u6301\u4e0d\u53d8\u3002\u60a8\u5982\u4f55\u786e\u5b9a\u6587\u4ef6\u7684\u54ea\u4e9b\u90e8\u5206\u6ca1\u6709\u66f4\u6539\uff1f\u4e00\u65e6\u60a8\u53d1\u73b0\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u60a8\u5c06\u5982\u4f55\u5728\u6bcf\u4e2a\u7248\u672c\u4e2d\u627e\u5230\u6587\u672c\u518d\u6b21\u5339\u914d\u7684\u4e0b\u4e00\u884c\u5462\uff1f\u8fd9\u6bd4\u770b\u8d77\u6765\u8981\u590d\u6742\u5f97\u591a\uff01\n\u5728\u672c\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u5e26\u60a8\u4e86\u89e3Git\u4f7f\u7528\u7684\u9ed8\u8ba4\u6269\u6563\u7b97\u6cd5\u3002\u5b83\u662f\u7531\u5c24\u91d1\u00b7W\u00b7\u8fc8\u5c14\u65af(Eugene W.Myers)\u5f00\u53d1\u7684\uff0c\u539f\u7a3f\u53ef\u4ee5\u5728\u7f51\u4e0a\u83b7\u5f97\u3002\u867d\u7136\u8fd9\u7bc7\u8bba\u6587\u5f88\u77ed\uff0c\u4f46\u5b83\u7684\u6570\u5b66\u5bc6\u5ea6\u76f8\u5f53\u9ad8\uff0c\u5e76\u4e13\u6ce8\u4e8e\u8bc1\u660e\u5b83\u662f\u6709\u6548\u7684\u3002\u8fd9\u91cc\u7684\u89e3\u91ca\u5c06\u4e0d\u90a3\u4e48\u4e25\u8c28\uff0c\u4f46\u5e0c\u671b\u80fd\u66f4\u76f4\u89c2\uff0c\u7ed9\u51fa\u7b97\u6cd5\u5b9e\u9645\u505a\u4ec0\u4e48\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u8be6\u7ec6\u6f14\u7ec3\u3002\n\u5728\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u8be5\u7b97\u6cd5\u8981\u5b9e\u73b0\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a\u793a\u4f8b\u8bf4\u660e\u5b83\u5982\u4f55\u8ba1\u7b97\u51fa\u4ece\u4e00\u4e2a\u7248\u672c\u5230\u53e6\u4e00\u4e2a\u7248\u672c\u7684\u6700\u7b80\u5355\u7684\u7f16\u8f91\u96c6\u3002\n\u4e3a\u4e86\u4f7f\u7528\u8bba\u6587\u4e2d\u7684\u793a\u4f8b\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a\n\u6211\u4eec\u6240\u8bf4\u7684\u201c\u5dee\u5f02\u201d\u662f\u6307\u5c06\u5b57\u7b26\u4e32An\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32b\u7684\u7f16\u8f91\u5e8f\u5217\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u5e8f\u5217\u662f\u7b80\u5355\u5730\u5220\u9664a\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u5728b\u4e2d\u63d2\u5165\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u4f7f\u7528\u5e38\u89c1\u7684diff\u8868\u793a\u6cd5\uff1a\n\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u5dee\u5f02\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u544a\u8bc9\u6211\u4eec\u592a\u591a\u3002\u5bf9\u6e90\u4ee3\u7801\u7684\u66f4\u6539\u901a\u5e38\u4f1a\u4f7f\u6587\u4ef6\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u770b\u5230\u63d2\u5165\u6216\u5220\u9664\u7684\u4ee3\u7801\u90e8\u5206\u3002\u663e\u793a\u6574\u4e2a\u6587\u4ef6\u88ab\u5220\u9664\u5e76\u66ff\u6362\u4e3a\u65b0\u7248\u672c\u7684\u5dee\u5f02\u5bf9\u6211\u4eec\u6ca1\u6709\u591a\u5927\u7528\u5904\u3002\n\u8fd9\u4f7f\u5f97\u4e3a\u4e86\u751f\u6210b\u800c\u5bf9a\u8fdb\u884c\u5c3d\u53ef\u80fd\u5c11\u7684\u66f4\u6539\uff0c\u56e0\u6b64\u5b83\u66f4\u597d\u5730\u53ef\u89c6\u5316\u4e86\u5b9e\u9645\u66f4\u6539\u7684\u5185\u5bb9\u3002\u8fd9\u4e0d\u662f\u552f\u4e00\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982\uff0c\u8fd9\u4e9b\u4e5f\u662f\u6709\u6548\u7684\uff1a\n1.-A 2.-A 3.+C-B+C-A C B B-A-C-C B A A+A B-B A+C+C+C\u3002\n\u7136\u800c\uff0c\u5b83\u4eec\u90fd\u662f\u6700\u5c0f\u7684\uff1a\u5b83\u4eec\u4f7f\u6700\u5c0f\u6570\u91cf\u7684\u7f16\u8f91\u6210\u4e3a\u53ef\u80fd\uff0c\u5728\u672c\u4f8b\u4e2d\u662f5\u3002\u6709\u8da3\u7684\u662f\uff0c\u5b83\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u8ba4\u4e3a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u54ea\u4e9b\u90e8\u5206\u76f8\u540c\uff0c\u4ee5\u53ca\u5b83\u4eec\u6267\u884c\u7f16\u8f91\u7684\u987a\u5e8f\u4e0d\u540c\u3002\u901a\u8fc7\u89c2\u5bdf\u4e0d\u540c\u4e4b\u5904\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\uff0c\u5373\u4e0d\u540c\u4e4b\u5904\u53ea\u663e\u793a\u4e86\u53d8\u5316\u7684\u4e1c\u897f\uff0c\u4f46\u8fd9\u4e9b\u4f8b\u5b50\u8868\u660e\uff0c\u5bf9\u4e24\u90e8\u7535\u5f71\u4e4b\u95f4\u7684\u4e0d\u540c\u6709\u8bb8\u591a\u53ef\u80fd\u7684\u89e3\u91ca\u3002\n\u56e0\u6b64\uff0c\u5dee\u5206\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u4ea7\u751f\u5dee\u5206\u7684\u7b56\u7565\uff0c\u5176\u4e2d\u5dee\u5206\u5177\u6709\u67d0\u4e9b\u7406\u60f3\u7684\u6027\u8d28\u3002\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5dee\u5f02\u5c3d\u53ef\u80fd\u5c0f\uff0c\u4f46\u8fd8\u6709\u5176\u4ed6\u8003\u8651\u56e0\u7d20\u3002\u4f8b\u5982\uff0c\u5f53\u60a8\u66f4\u6539\u67d0\u4e9b\u5185\u5bb9\u65f6\uff0c\u60a8\u53ef\u80fd\u4e60\u60ef\u4e8e\u770b\u5230\u5148\u5220\u9664\u540e\u63d2\u5165\uff0c\u800c\u4e0d\u662f\u53cd\u8fc7\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u60a8\u5b81\u613f\u770b\u5230\u4e0a\u9762\u7684\u89e3\u51b3\u65b9\u68482\u800c\u4e0d\u662f\u89e3\u51b3\u65b9\u68483\u3002\u800c\u4e14\uff0c\u5f53\u60a8\u66f4\u6539\u6574\u4e2a\u4ee3\u7801\u5757\u65f6\uff0c\u60a8\u5e0c\u671b\u770b\u5230\u6574\u4e2a\u5757\u88ab\u5220\u9664\uff0c\u7136\u540e\u63d2\u5165\u65b0\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u770b\u5230\u8bb8\u591a\u5220\u9664\u548c\u63d2\u5165\u76f8\u4e92\u4ea4\u9519\u3002\n\u597d\u7684\uff1a-\u4e00\u4e2a\u574f\u7684\uff1a-\u4e00-\u4e8c+\u56db-\u4e09-\u4e8c+\u56db+\u4e94+\u4e94+\u516d+\u516d-\u4e09\u3002\n\u60a8\u53ef\u80fd\u8fd8\u5e0c\u671b\u770b\u5230\u5220\u9664\u6216\u63d2\u5165\u7684\u4ee3\u7801\u4e0e\u60a8\u5bf9\u4ee3\u7801\u7ed3\u6784\u7684\u60f3\u6cd5\u4e00\u81f4\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u63d2\u5165\u4e00\u4e2a\u65b9\u6cd5\uff0c\u60a8\u5e0c\u671b\u8be5\u65b9\u6cd5\u7684\u7ed3\u5c3e\u88ab\u89c6\u4e3a\u65b0\u7684\uff0c\u800c\u4e0d\u662f\u524d\u9762\u7684\u65b9\u6cd5\u7684\u7ed3\u5c3e\uff1a\n\u597d\uff1a\u7c7bfoo\u574f\uff1a\u7c7bfoo def initialize(Name)def initialize(Name)@name=name@name=name end+end+def check+def check+@name+@name+end end\u3002\n\u8fc8\u5c14\u65af\u7684\u7b97\u6cd5\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u7b56\u7565\uff0c\u4f46\u5b83\u901f\u5ea6\u5f88\u5feb\uff0c\u800c\u4e14\u5b83\u4ea7\u751f\u7684\u5dee\u5f02\u5f80\u5f80\u8d28\u91cf\u90fd\u5f88\u597d\u3002\u5b83\u662f\u901a\u8fc7\u8d2a\u5a6a\u7684\u65b9\u5f0f\u505a\u5230\u8fd9\u4e00\u70b9\u7684\uff0c\u5373\u5728\u8fdb\u884c\u66f4\u6539\u4e4b\u524d\u5c1d\u8bd5\u4f7f\u7528\u5c3d\u53ef\u80fd\u591a\u7684\u76f8\u540c\u884c(\u56e0\u6b64\u907f\u514d\u4e86\u201c\u9519\u8bef\u7ed3\u675f\u201d\u95ee\u9898)\uff0c\u5e76\u4e14\u5728\u6709\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\u66f4\u559c\u6b22\u5220\u9664\u800c\u4e0d\u662f\u63d2\u5165\uff0c\u8fd9\u6837\u5220\u9664\u5c31\u4f1a\u9996\u5148\u51fa\u73b0\u3002\n\u8fc8\u5c14\u65af\u7684\u8bba\u6587\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff0c\u5373\u5bfb\u627e\u6700\u77ed\u7684\u7f16\u8f91\u811a\u672c(SES)\u53ef\u4ee5\u5efa\u6a21\u4e3a\u56fe\u641c\u7d22\u3002\u8ba9\u6211\u4eec\u4ee5\u4e24\u4e2a\u5b57\u7b26\u4e32a=ABCABBA\u548cb=CBABAC\u4e3a\u4f8b\uff0c\u6784\u5efa\u4e00\u4e2a\u4ecea\u5230b\u7684\u6240\u6709\u8def\u5f84\u56fe\u3002\n\u4e0b\u9762\u663e\u793a\u7684\u7f51\u683c\u4e2d\u7684(x\uff0cy)\u5750\u6807\u5bf9\u5e94\u4e8e\u7f16\u8f91\u8fc7\u7a0b\u4e2d\u7684\u6b65\u9aa4\uff1b\u5728(0\uff0c0)\u5904\uff0c\u6211\u4eec\u6709\u5b57\u7b26\u4e32a\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5f00\u59cb\u7f16\u8f91\u3002\u5411\u53f3\u79fb\u52a8(\u589e\u52a0x)\u5bf9\u5e94\u4e8e\u4ecea\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f8b\u5982\u79fb\u52a8\u5230(1\uff0c0)\u8868\u793a\u6211\u4eec\u4ecea\u4e2d\u5220\u9664\u4e86\u7b2c\u4e00\u4e2aA\u3002\u5411\u4e0b\u79fb\u52a8(\u589e\u52a0y)\u5bf9\u5e94\u4e8e\u4eceb\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u4ece(1\uff0c0)\u5411\u4e0b\u79fb\u52a8\u5230(1\uff0c1)\uff0c\u6211\u4eec\u4eceb\u63d2\u5165\u7b2c\u4e00\u4e2aC\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7f16\u8f91\u5b57\u7b26\u4e32\u662fCBCABBA\u3002\u5728\u4f4d\u7f6e(4\uff0c3)\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06ABCA\u8f6c\u6362\u4e3aCBA\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5c06BBA\u8f6c\u6362\u4e3aBAC\u3002\u53f3\u4e0b\u89d2\u4f4d\u7f6e(7\uff0c6)\u5bf9\u5e94\u4e8e\u5c06\u5b57\u7b26\u4e32A\u5b8c\u5168\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32B\u3002\n\u9664\u4e86\u5411\u53f3\u548c\u5411\u4e0b\u79fb\u52a8\u4e4b\u5916\uff0c\u5728\u67d0\u4e9b\u4f4d\u7f6e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6cbf\u5bf9\u89d2\u7ebf\u79fb\u52a8\u3002\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e32\u5728\u4f4d\u7f6e\u7684\u7d22\u5f15\u5904\u5177\u6709\u76f8\u540c\u7684\u5b57\u7b26\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f8b\u5982\uff0ca\u4e2d\u7684\u7b2c\u4e09\u4e2a\u5b57\u7b26\u548cb\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u90fd\u662fC\uff0c\u56e0\u6b64\u4f4d\u7f6e(2\uff0c0)\u5177\u6709\u6307\u5411(3\uff0c1)\u7684\u5bf9\u89d2\u7ebf\u3002\u8fd9\u76f8\u5f53\u4e8e\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u4e00\u4e2a\u76f8\u7b49\u7684\u5b57\u7b26\uff0c\u65e2\u4e0d\u5220\u9664\u4e5f\u4e0d\u63d2\u5165\u4efb\u4f55\u5185\u5bb9\u3002\nA B C A B A o-o 0|\\|C|\\|\\|o\u3002o 1||\\|-o 2|\\|\\||\\|A|\\|\u3002-o-o 3||\\\\|B||\\||o-o 4|\\|\\|\u3002|\\|A|\\|o-o 5|\\|C|\\|\\|-o-o\u3002-o-o 6 0 1 2 3 4 5 6 7\u3002\nMyers\u7b97\u6cd5\u80cc\u540e\u7684\u601d\u60f3\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u5e0c\u671b\u5728\u5c3d\u53ef\u80fd\u5c11\u7684\u79fb\u52a8\u4e2d\u4ece(0\uff0c0)\u5230(7\uff0c6)(\u53f3\u4e0b\u89d2)\u3002\u201c\u79fb\u52a8\u201d\u662f\u5411\u53f3\u7684\u5355\u6b65(\u4ecea\u5220\u9664)\u6216\u5411\u4e0b\u7684(\u4eceb\u63d2\u5165)\u3002\u4ecea\u5230b\uff0c\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u79fb\u52a813\u6b21\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u603b\u548c\u3002\n\u7136\u800c\uff0c\u884c\u8d70\u5bf9\u89d2\u7ebf\u8def\u5f84\u662f\u81ea\u7531\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u5bf9\u5e94\u4e8e\u505a\u51fa\u6539\u53d8\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u6700\u5927\u5316\u6240\u91c7\u53d6\u7684\u5bf9\u89d2\u7ebf\u6b65\u6570\uff0c\u5e76\u6700\u5c0f\u5316\u5411\u53f3/\u5411\u4e0b\u79fb\u52a8\u7684\u6b21\u6570\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u8868\u660e\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u9700\u8fdb\u884c\u4e94\u6b21\u7f16\u8f91\u5c31\u53ef\u4ee5\u4ecea\u8f6c\u5230b\uff0c\u800cmyers\u63d0\u4f9b\u4e86\u4e00\u79cd\u627e\u5230\u8fd9\u6761\u8def\u5f84\u7684\u7b56\u7565\u3002\n\u4e3a\u4e86\u76f4\u89c2\u5730\u4e86\u89e3\u7b97\u6cd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u63a2\u7d22\u56fe\u8868\u3002\u4e3a\u4e86\u627e\u5230\u5230\u53f3\u4e0b\u89d2\u4f4d\u7f6e\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6211\u4eec\u5c06\u4ece(0\uff0c0)\u5f00\u59cb\u4f9d\u6b21\u63a2\u7d22\u6bcf\u6761\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u76f4\u5230\u627e\u5230\u4e00\u6761\u5230\u8fbe\u7ec8\u70b9\u7684\u8def\u5f84\u3002\u6211\u5efa\u8bae\u60a8\u5728\u6267\u884c\u6b64\u64cd\u4f5c\u65f6\uff0c\u5c06\u4e0a\u9762\u7684\u7f51\u683c\u653e\u5728\u624b\u8fb9\u3002\n\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u6211\u4eec\u53ef\u4ee5\u5411\u4e0b\u79fb\u52a8\u5230\u8fbe(0\uff0c1)\uff0c\u6216\u8005\u5411\u53f3\u79fb\u52a8\u5230\u8fbe(1\uff0c0)\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e0b(0\uff0c1)\u3002\u5982\u679c\u6211\u4eec\u4ece\u8fd9\u91cc\u5411\u4e0b\u79fb\u52a8\uff0c\u6211\u4eec\u8fbe\u5230(0\uff0c2)\uff0c\u4f46\u662f\u4ece\u90a3\u91cc\u5230(1\uff0c3)\u548c\u4ece(1\uff0c3)\u5230(2\uff0c4)\u6709\u4e00\u6761\u5bf9\u89d2\u7ebf\uff0c\u65e2\u7136\u5bf9\u89d2\u7ebf\u79fb\u52a8\u662f\u81ea\u7531\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u4ece(0\uff0c1)getsus\u5411\u4e0b\u79fb\u52a8\u53ea\u9700\u8981\u4e00\u6b21\u79fb\u52a8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4ece(0\uff0c1)\u79fb\u52a8\u5230(2\uff0c4)\u6807\u8bb0\u4e3a\u6b65\u884c\u4e2d\u7684\u4e00\u6b65\u3002\n\u4ece(0\uff0c1)\u5411\u53f3\u79fb\u52a8\u5230(1\uff0c1)\uff0c\u4ece\u90a3\u91cc\u5230(2\uff0c2)\u53c8\u6709\u4e00\u6761\u5bf9\u89d2\u7ebf\u3002\u8ba9\u6211\u4eec\u5728\u6563\u6b65\u65f6\u6807\u8bb0\u8fd9\u4e24\u4e2a\u52a8\u4f5c\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u8003\u8651\u6211\u4eec\u4ece(0\uff0c0)\u4e2d\u63d0\u53d6\u7684\u53e6\u4e00\u4e2a\u5206\u652f\uff0c\u5411\u53f3\u79fb\u52a8\u5230(1\uff0c0)\u3002\u4ece(1\uff0c0)\u5411\u4e0b\u79fb\u52a8\u5c06\u6211\u4eec\u5e26\u5230(1\uff0c1)\uff0c\u6b63\u5982\u6211\u4eec\u521a\u521a\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u5b83\u5c06\u6211\u4eec\u5e26\u5230(2\uff0c2)\u3002\u4ece(1\uff0c0)\u5411\u53f3\u79fb\u52a8\u5230\u4e0e(3\uff0c1)\u6210\u5bf9\u89d2\u7ebf\u7684(2\uff0c0)\u3002\u540c\u6837\uff0c\u6211\u4eec\u5c06\u8bb0\u5f55\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u3002\n\u6211\u5c06(2\uff0c2)\u8bb0\u5f55\u4e3a\u901a\u8fc7(1\uff0c0)\u800c\u4e0d\u662f(0\uff0c1)\u8bbf\u95ee\uff0c\u539f\u56e0\u7a0d\u540e\u5c06\u4f1a\u6e05\u695a\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u9996\u5148\u5411\u53f3\u79fb\u52a8\u610f\u5473\u7740\u9996\u5148\u6267\u884c\u5220\u9664\uff0c\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5220\u9664\u51fa\u73b0\u5728\u63d2\u5165\u4e4b\u524d\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5145\u5206\u7814\u7a76\u4e86\u56fe\u5f62\u7684\u4e24\u4e2a\u6b65\u6df1\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7b2c\u4e09\u6b65\u4e86\u3002\u4ece(2\uff0c4)\u5411\u4e0b\u79fb\u52a8\u5230(2\uff0c5)\uff0c\u4ece\u90a3\u91cc\u5230(3\uff0c6)\u662f\u5bf9\u89d2\u7ebf\u3002\u4ece(2\uff0c4)\u5411\u53f3\u79fb\u52a8\u5c06\u6211\u4eec\u5e26\u5230(3\uff0c4)\uff0c\u5728\u8fd9\u91cc\u53c8\u662f\u4e00\u6761\u5bf9\u89d2\u7ebf\u5c06\u6211\u4eec\u5e26\u5230(4\uff0c5)\u3002\n0\uff0c0--1\uff0c0-3\uff0c1|0\uff0c1\uff0c2||2\uff0c4-4\uff0c5||3\uff0c6\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8003\u8651(2\uff0c2)\u3002\u4ece\u90a3\u91cc\u5411\u53f3\u79fb\u52a8\u5c31\u50cf\u6211\u4eec\u4ee5\u524d\u770b\u5230\u7684\u90a3\u6837\uff1a\u6211\u4eec\u79fb\u5230(3\uff0c2)\uff0c\u7136\u540e\u6cbf\u7740\u5bf9\u89d2\u7ebf\u4ece\u90a3\u91cc\u5230(5\uff0c4)\u3002\u7136\u800c\uff0c\u5411\u4e0b\u79fb\u52a8\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u60c5\u51b5\uff1a\u8fd9\u4e2a\u79fb\u52a8\u5c06\u6211\u4eec\u5e26\u5230(2\uff0c3)\uff0c\u5e76\u4e14\u4ece\u90a3\u91cc\u6ca1\u6709\u5bf9\u89d2\u7ebf\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u8981\u8fdb\u884c\u901a\u7528\u7684\u56fe\u641c\u7d22\uff0c\u6211\u4eec\u5e0c\u671b\u8bb0\u5f55\u4ece(2\uff0c4)\u5411\u53f3\u79fb\u52a8\u7684\u7ed3\u679c\u548c\u4ece(2\uff0c2)\u5411\u4e0b\u79fb\u52a8\u7684\u7ed3\u679c\uff0c\u5373\uff1a\n0\uff0c0--1\uff0c0-3\uff0c1|0\uff0c1\uff0c2-5\uff0c4|\\2\uff0c4-2\uff0c3|\\|4\uff0c53\uff0c6\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u6b63\u5728\u68c0\u67e5\u7684\u7279\u5b9a\u56fe\u8868\u7684\u7ed3\u6784\u610f\u5473\u7740\uff0c\u4ec5\u5b58\u50a8\u5728\u7279\u5b9a\u7f16\u8f91\u96c6\u4e4b\u540e\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u4f73\u4f4d\u7f6e\u5c31\u8db3\u591f\u4e86\u3002\u4e0a\u9762\u7684\u8bb0\u5f55\u663e\u793a\uff0c\u8fdb\u884c\u4e24\u6b21\u63d2\u5165\uff0c\u7136\u540e\u8fdb\u884c\u5220\u9664(\u5411\u4e0b\u4e24\u6b21\uff0c\u7136\u540e\u5411\u53f3)\u4f1a\u5f97\u5230(4\uff0c5)\uff0c\u800c\u9996\u5148\u8fdb\u884c\u5220\u9664\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e24\u6b21\u63d2\u5165\uff0c\u5c31\u4f1a\u5f97\u5230(2\uff0c3)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u4fdd\u7559(4\uff0c5)\u7ed3\u679c\u5e76\u4e22\u5f03(2\uff0c3)\uff0c\u8868\u660e(4\uff0c5)\u662f\u6309\u4efb\u610f\u987a\u5e8f\u5220\u9664\u4e00\u6b21\u548c\u63d2\u5165\u4e24\u6b21\u4e4b\u540e\u53ef\u5230\u8fbe\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\n0\uff0c0--1\uff0c0-3\uff0c1|0\uff0c1\uff0c2-5\uff0c4||2\uff0c4-4\uff0c5||3\uff0c6\u3002\n\u6700\u540e\uff0c\u5728\u6df1\u5ea62\u626b\u63cf\u4e2d\uff0c\u6211\u4eec\u8bbf\u95ee(3\uff0c1)\u3002\u4ece\u90a3\u91cc\u5411\u4e0b\u79fb\u52a8\u5230(3\uff0c2)\uff0c\u5b83\u6cbf\u5bf9\u89d2\u7ebf\u6307\u5411(5\uff0c4)\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u6b21\u5c06\u5176\u8bb0\u5f55\u4e3a\u4ece(3\uff0c1)\u5411\u4e0b\u79fb\u52a8\uff0c\u800c\u4e0d\u662f\u4ece(2\uff0c2)\u5411\u53f3\u79fb\u52a8\u3002\u4ece(3\uff0c1)\u5411\u53f3\u79fb\u52a8\u5f97\u5230(4\uff0c1)\uff0c\u5b83\u4e0e(5\uff0c2)\u5bf9\u89d2\u7ebf\u3002\n0\uff0c0--1\uff0c0-3\uff0c1--5\uff0c2|0\uff0c1\uff0c2\uff0c5\uff0c4||2\uff0c4-4\uff0c5||3\uff0c6\u3002\n\u4f60\u73b0\u5728\u53ef\u80fd\u5df2\u7ecf\u638c\u63e1\u4e86\u8bc0\u7a8d\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u5b8c\u6210\u5269\u4e0b\u7684\u52a8\u4f5c\u5427\u3002\u6211\u4eec\u4e0d\u80fd\u4ece(3\uff0c6)\u5411\u4e0b\u79fb\u52a8\uff0c\u4ece\u90a3\u91cc\u5411\u53f3\u79fb\u52a8\u7ed9\u51fa(4\uff0c6)\uff0c\u5b83\u4e5f\u53ef\u4ee5\u4ece(4\uff0c5)\u5411\u4e0b\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u6807\u8bb0\u4e3a\u8fd9\u6837\u3002(4\uff0c5)\u7684\u53f3\u8fb9\u662f(5\uff0c5)\u3002\n0\uff0c0--1\uff0c0--3\uff0c1--5\uff0c2|0\uff0c1\uff0c2\uff0c5\uff0c4||2\uff0c4-4\uff0c5-5\uff0c5|3\uff0c6\uff0c6\n(5\uff0c5)\u4e5f\u662f\u5411\u4e0b\u7684(5\uff0c4)\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u6807\u8bb0\u4e3a\uff0c\u4ece(5\uff0c4)\u5411\u53f3\u79fb\u52a8\u5f97\u5230(6\uff0c4)\uff0c\u5e76\u6709\u4e00\u6761\u5bf9\u89d2\u7ebf\u901a\u5411(7\uff0c5)\u3002\n0\uff0c0--1\uff0c0--3\uff0c1--5\uff0c2|0\uff0c1\uff0c2\uff0c5\uff0c4-7\uff0c5|2\uff0c4-4\uff0c55\uff0c5|3\uff0c6\uff0c6\u3002\n\u4ece(5\uff0c2)\u5411\u4e0b\u4e5f\u901a\u5411(7\uff0c5)\uff0c\u5e76\u4ece(5\uff0c2)\u9886\u5148\u5411\u53f3\u79fb\u52a8\u5230(7\uff0c3)\uff0c\u4ece\u800c\u5b8c\u6210\u7b2c\u56db\u884c\u626b\u63cf\u3002\n0\uff0c0--1\uff0c0--3\uff0c1-5\uff0c2-7\uff0c3|0\uff0c1\uff0c2\uff0c2\uff0c5\uff0c4-7\uff0c5|2\uff0c4-4\uff0c5\uff0c5|3\uff0c6\uff0c6\u3002\n\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u7b2c\u4e94\u6392\u3002\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u4ecea\u5230b\u7684\u5dee\u5f02\u53ea\u9700\u8981\u4e94\u6b21\u7f16\u8f91\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u8ba1\u626b\u63cf\u7684\u8fd9\u4e00\u884c\u5c06\u627e\u5230\u53f3\u4e0b\u89d2\u4f4d\u7f6e(7\uff0c6)\u3002\n\u4ece(4\uff0c6)\u5f00\u59cb\u6ca1\u6709\u5411\u4e0b\u7684\u4e1c\u897f\uff0c\u5411\u53f3\u662f(5\uff0c6)\uff0c\u4e5f\u662f\u4ece(5\uff0c5)\u5411\u4e0b\u3002(5\uff0c5)\u7684\u53f3\u8fb9\u662f(6\uff0c5)\u3002\n0\uff0c0--1\uff0c0--3\uff0c1-5\uff0c2-7\uff0c3|0\uff0c1\uff0c2\uff0c2\uff0c5\uff0c4-7\uff0c5|2\uff0c4--4\uff0c5\uff0c5-6\uff0c5|3\uff0c6\uff0c4\uff0c6\uff0c6\u3002\n\u6700\u540e\uff0c\u4ece(7\uff0c5)\u5411\u4e0b\u79fb\u52a8\u5f97\u5230(7\uff0c6)-\u6700\u7ec8\u4f4d\u7f6e\uff01\u8fd9\u80af\u5b9a\u6bd4(6\uff0c5)\u8981\u597d\uff0c\u6211\u4eec\u901a\u8fc7\u5411\u53f3\u3001\u5411\u53f3\u3001\u5411\u4e0b\u3001\u5411\u4e0b\u3001\u5411\u53f3\u79fb\u52a8\u6765\u8fbe\u5230(6\uff0c5)\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u79fb\u52a8\u8f68\u8ff9\u4e2d\u66ff\u6362\u5b83\u3002\n0\uff0c0--1\uff0c0--3\uff0c1--5\uff0c2-7\uff0c3|0\uff0c1\uff0c2\uff0c2\uff0c5\uff0c4-7\uff0c5|2\uff0c4-4\uff0c55\uff0c57\uff0c6|3\uff0c6 4\uff0c6 5\uff0c6\u3002\n\u8fd9\u5c31\u662f\u7b97\u6cd5\u6240\u57fa\u4e8e\u7684\u57fa\u672c\u601d\u60f3\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u8fc7\u8868\u793a\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7f16\u8f91\u7a7a\u95f4\u7684\u56fe\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002\u6211\u4eec\u4ee5\u5e7f\u5ea6\u4f18\u5148\u7684\u65b9\u5f0f\u63a2\u7d22\u6bcf\u6761\u53ef\u80fd\u7684\u8def\u7ebf\uff0c\u4e00\u5230\u6700\u540e\u4f4d\u7f6e\u5c31\u505c\u4e0b\u6765\u3002\n\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u67e5\u770bMyers\u5b9e\u9645\u5982\u4f55\u8868\u793a\u6b64\u6d41\u7a0b\uff0c\u5e76\u5f00\u59cb\u7814\u7a76\u5982\u4f55\u5728\u4ee3\u7801\u4e2d\u5b9e\u73b0\u5b83\u3002", "note_en": "If you enjoy this article, I have published a book explaining the internals of Git through implementation:  Building Git.\n  As a programmer, you probably use a version control system such as  Git, andspend an awful lot of your time looking at diffs. You use them to check overyour uncommitted work in progress, to look at what changed in a single commit,to compare two branches before performing a merge, and so on. Diffs are thelanguage through which you understand how things have changed in your software.\n But as well as being read by people, diffs are used by your version controlsystem to automate changes. You can email a diff to someone and they can use the patch or  git apply commands to merge it into their working copy.  git mergehas to reconcile and merge two or more change histories to produce a singletree, often reconciling changes within the same file.  git add --patch lets youselect individual changes from a working copy file rather than adding the wholefile to the index, and that involves both you the user reading the diffs, andgit selectively applying them to the indexed version of a file. And some versioncontrol systems use the differences between versions as their primary way tostore the project history, rather than storing a snapshot of all the code foreach commit.\n So diffs are central to version control, but you might not have thought muchabout how they\u2019re generated. Often when you read a diff, it seems obvious to youwhich things should be marked as changes. You have an intuitive mental model ofwhat it means to insert a new function into a file, or to delete a redundantone, or to rewrite a section. However, there\u2019s an awful lot more to diffing thanmeets the eye, and there are many ways to do it that produce different results.\n Think for a moment about how you\u2019d calculate a diff, and how you\u2019d write afunction to do it. You might have noticed that diff programs only show you whathas changed, not what has stayed the same. How would you determine which partsof a file have not changed? Once you\u2019ve found a difference between them, howwould you find the next line in each version where the text matches up again?It\u2019s more complicated than it looks!\n In this series of articles, I\u2019d like to walk you through the default diffalgorithm used by Git. It was developed by Eugene W. Myers, and the  originalpaper is available online. While the paper is quite short, it is quitemathematically dense and is focussed on proving that it works. The explanationshere will be less rigorous, but will hopefully be more intuitive, giving adetailed walk-through of what the algorithm actually does and how it works.\n In this first article, we\u2019ll lay out the basic model of what the algorithm istrying to achieve and go through an example of how it works out the simplest setof edits to get from one version to another.\n To use the example from the paper, say we want to calculate the differencebetween two strings:\n  By \u201cdifference\u201d, we mean a sequence of edits that will convert string  ainto string  b. One possible such sequence is to simply delete eachcharacter in  a, and then insert each character in  b, or to usecommon diff notation:\n  However, we wouldn\u2019t consider this a good-quality diff since it doesn\u2019t tell usvery much. Changes to source code typically leave much of a file unmodified andwe really want to see  sections of code that were inserted or deleted. A diffthat shows the entire file being removed and replaced with the new version isn\u2019tmuch use to us.\n   This makes the smallest possible number of changes to  a in order toproduce  b, so it\u2019s a better visualisation of what really changed. It\u2019snot the only possible solution, for example these are also valid:\n 1. - A 2. - A 3. + C - B + C - A C B B - A - C - C B A A + A B B B - B - B A A A + C + C + C\n However, they are all  minimal: they make the smallest number of editspossible, which in this case is five. What\u2019s interesting about them is theydiffer in which sections they consider to be the same between the strings, andwhich order they perform edits in. From looking at diffs, you probably have anintuitive idea that diffs only show the things that changed, but these examplesshow that there are many possible interpretations of the difference between twofiles.\n So, the purpose of diff algorithms is to provide a strategy for generatingdiffs, where the diffs have certain desirable properties. We usually want diffsto be as small as possible, but there are other considerations. For example,when you change something, you\u2019re probably used to seeing deletions followed byinsertions, not the other way round. That is, you\u2019d rather see solution 2 thansolution 3 above. And, when you change a whole block of code, you\u2019d like to seethe whole chunk being deleted followed by the new code being inserted, ratherthan many deletions and insertions interleaved with each other.\n Good: - one Bad: - one - two + four - three - two + four + five + five + six + six - three\n You also probably want to see deleted or inserted code that aligns with your ideaof the code\u2019s structure, for example if you insert a method, you\u2019d like thatmethod\u2019s  end to be considered new, rather than the  end of the precedingmethod:\n Good: class Foo Bad: class Foo def initialize(name) def initialize(name) @name = name @name = name end + end + + + def inspect + def inspect + @name + @name + end end end end\n Myers\u2019 algorithm is just one such strategy, but it\u2019s fast and it produces diffsthat tend to be of good quality most of the time. It does this by being greedy, that is trying to consume as many lines that are the same beforemaking a change (therefore avoiding the \u201cwrong  end\u201d problem), and also bypreferring deletions over insertions when given a choice, so that deletionsappear first.\n The Myers paper is based on the idea that finding the  shortest edit script(SES) can be modelled as a graph search. Let\u2019s take our two strings,  a = ABCABBA and  b =  CBABAC, and build a graph of all the ways we can getfrom  a to  b.\n The ( x,  y) co-ordinates in the grid shown below correspond tosteps in the editing process; at (0,0) we have string  a, that is, we havenot started editing. Moving rightward (increasing  x) corresponds todeleting a character from  a, for example moving to (1,0) means we\u2019vedeleted the first  A from  a. Moving downward (increasing  y)corresponds to inserting a character from  b, for example if we now movefrom (1,0) down to (1,1), we insert the first  C from  b, and our editedstring is thus  CBCABBA. At position (4,3), we have converted  ABCA into CBA, but we still need to convert  BBA into  BAC. The bottom-right position(7,6) corresponds to converting string  a fully into string  b.\n As well as moving rightward and downward, in some positions we can also movediagonally. This occurs when the two strings have the same character at theposition\u2019s indexes, for example the third character in  a and the firstcharacter in  b are both  C, and so position (2,0) has a diagonal leadingto (3,1). This corresponds to consuming an equal character from both strings,neither deleting nor inserting anything.\n A B C A B B A o-----o-----o-----o-----o-----o-----o-----o 0 | | | \\ | | | | |C | | | \\ | | | | | | | | \\ | | | | | o-----o-----o-----o-----o-----o-----o-----o 1 | | \\ | | | \\ | \\ | |B | | \\ | | | \\ | \\ | | | | \\ | | | \\ | \\ | | o-----o-----o-----o-----o-----o-----o-----o 2 | \\ | | | \\ | | | \\ |A | \\ | | | \\ | | | \\ | | \\ | | | \\ | | | \\ | o-----o-----o-----o-----o-----o-----o-----o 3 | | \\ | | | \\ | \\ | |B | | \\ | | | \\ | \\ | | | | \\ | | | \\ | \\ | | o-----o-----o-----o-----o-----o-----o-----o 4 | \\ | | | \\ | | | \\ |A | \\ | | | \\ | | | \\ | | \\ | | | \\ | | | \\ | o-----o-----o-----o-----o-----o-----o-----o 5 | | | \\ | | | | |C | | | \\ | | | | | | | | \\ | | | | | o-----o-----o-----o-----o-----o-----o-----o 6 0 1 2 3 4 5 6 7\n The idea behind the Myers algorithm is quite simple: we want to get from (0,0)to (7,6) (the bottom-right) in as few moves as possible. A \u201cmove\u201d is a singlestep rightward (a deletion from  a) or downward (an insertion from b). The most number of moves we could take to get from  a to b is 13: the combined length of the two strings.\n However, walking diagonal paths is free since they don\u2019t correspond to making changes, thus we want to maximise the number of diagonal steps we take andminimise the number of rightward/downward moves. The examples above show that wecan actually get from  a to  b making only five edits, and Myersprovides a strategy for finding that pathway.\n To develop an intuition for how the algorithm works, let\u2019s start exploring thegraph. To try to find the shortest path to the bottom-right position, we\u2019llexplore every possible path from (0,0) in tandem until we find a path thatreaches the end. I recommend keeping the above grid handy while you follow this.\n   We have two options from this position: we can move downward and reach (0,1) ormove rightward and reach (1,0).\n  Now let\u2019s consider (0,1). If we move downward from here we reach (0,2), butthere is a diagonal from there to (1,3), and from (1,3) to (2,4), and sincediagonal moves are free we can say that moving downward from (0,1) getsus to (2,4) at the cost of only one move. Therefore we\u2019ll mark the move from(0,1) to (2,4) as a single step in our walk.\n Moving rightward from (0,1) takes us to (1,1) and again there is a diagonal fromthere to (2,2). Let\u2019s mark both these moves on our walk.\n  Now let\u2019s consider the other branch we took from (0,0), moving rightward to(1,0). Moving downward from (1,0) takes us to (1,1), which as we just found outgets us to (2,2). Moving rightward from (1,0) takes us to (2,0), which has adiagonal to (3,1). Again, we\u2019ll record both these steps.\n I\u2019m recording (2,2) as being visited via (1,0) rather than (0,1) for reasonsthat will become clear a little later. For intuition, consider that making arightward move first means performing a deletion first, and we generally wantdeletions to appear before insertions.\n  We\u2019ve now fully explored the graph to two moves deep and we can begin on ourthird move. Moving downward from (2,4) gets us to (2,5), and from there is adiagonal to (3,6). Moving rightward from (2,4) takes us to (3,4), where again adiagonal takes us to (4,5).\n 0,0 --- 1,0 --- 3,1 | | | |0,1 2,2 | |2,4 --- 4,5 | |3,6\n Next, we consider (2,2). Moving rightward from there is as we\u2019ve seen before: wemove to (3,2), and follow the diagonals from there to (5,4). Moving downwardintroduces a new situation, however: this move gets us to (2,3) and there is nodiagonal from there. Now, if we were doing a general-purpose graph search, we\u2019dwant to record both the result of moving rightward from (2,4) and the result ofmoving downward from (2,2), that is:\n 0,0 --- 1,0 --- 3,1 | | | |0,1 2,2 --- 5,4 | \\ | \\2,4 - 2,3 | \\ | 4,53,6\n However, the structure of the particular graphs we\u2019re examining means that it\u2019ssufficient to just store the  best position you can reach after a certain setof edits. The above record shows us that making two insertions then a deletion(down twice, and then right) gets us to (4,5), whereas making the deletionfirst, and then the two insertions, gets us to (2,3). So, we\u2019ll just keep the(4,5) result and throw the (2,3) away, indicating (4,5) is the best positionreachable after one deletion and two insertions  in any order.\n 0,0 --- 1,0 --- 3,1 | | | |0,1 2,2 --- 5,4 | |2,4 --- 4,5 | |3,6\n Finally in our depth-2 scan, we visit (3,1). Moving downward from there goes to(3,2), which leads diagonally to (5,4), and so we\u2019ll again record this as a movedownward from (3,1) rather than rightward from (2,2). Moving rightward from(3,1) gives (4,1), which has a diagonal to (5,2).\n  0,0 --- 1,0 --- 3,1 --- 5,2 | | | | | |0,1 2,2 5,4 | |2,4 --- 4,5 | |3,6\n You\u2019re probably getting the hang of this by now so let\u2019s rattle through theremaining moves. We can\u2019t move downward from (3,6), and moving rightward fromthere gives (4,6), which is also reachable downward from (4,5), so we\u2019ll mark itas such. Rightward of (4,5) is (5,5).\n 0,0 --- 1,0 --- 3,1 --- 5,2 | | | | | |0,1 2,2 5,4 | |2,4 --- 4,5 --- 5,5 | | | |3,6 4,6\n (5,5) is also downward of (5,4) so we\u2019ll mark that, and moving rightward from(5,4) gives (6,4), with a diagonal leading to (7,5).\n 0,0 --- 1,0 --- 3,1 --- 5,2 | | | | | |0,1 2,2 5,4 --- 7,5 | | | |2,4 --- 4,5 5,5 | | | |3,6 4,6\n Downward from (5,2) also leads to (7,5), and moving rightward from (5,2) leadsto (7,3), thus completing the fourth row of the scan.\n 0,0 --- 1,0 --- 3,1 --- 5,2 --- 7,3 | | | | | |0,1 2,2 5,4 --- 7,5 | | | |2,4 --- 4,5 5,5 | | | |3,6 4,6\n Now we begin the fifth row. Since we know there are diffs from  a to b requiring only five edits, we expect this row of the scan to find thebottom-right position, (7,6).\n There is nothing downward from (4,6), and rightward of that is (5,6), which isalso downward from (5,5). Rightward of (5,5) is (6,5).\n 0,0 --- 1,0 --- 3,1 --- 5,2 --- 7,3 | | | | | |0,1 2,2 5,4 --- 7,5 | | | |2,4 --- 4,5 5,5 --- 6,5 | | | | | |3,6 4,6 5,6\n Finally, moving downward from (7,5) gives (7,6) \u2013 the final position! This iscertainly better than (6,5), which we reached by going right, right, down, down,right, and so we replace it in our trace of the moves.\n 0,0 --- 1,0 --- 3,1 --- 5,2 --- 7,3 | | | | | |0,1 2,2 5,4 --- 7,5 | | | | | |2,4 --- 4,5 5,5 7,6 | | | | | |3,6 4,6 5,6\n So that\u2019s the basic idea the algorithm is based on: given two strings, find theshortest path through a graph that represents the edit space between the two. Weexplore every possible route through the graph breadth-first, and stop as soonas we reach the final position.\n In the next article, we\u2019ll look at how Myers actually represents this process,and start to look at implementing it in code.", "posttime": "2020-05-31 11:08:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,myers,diff,\u79fb\u52a8", "title": "Git(2017)\u4e2d\u4f7f\u7528\u7684Myers Diff\u7b97\u6cd5", "title_en": "The Myers diff algorithm that is used in Git (2017)", "transed": 1, "url": "https://blog.jcoglan.com/2017/02/12/the-myers-diff-algorithm-part-1/", "via": "", "real_tags": ["\u7b97\u6cd5", "myers", "diff", "\u79fb\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004478, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL\uff1bDR\uff1a\u7f13\u5b58\u7edf\u6cbb\u7740\u6211\u5468\u56f4\u7684\u4e00\u5207\u3002PYC\u6587\u4ef6\u53ef\u4ee5\u5305\u542b\u673a\u5bc6\uff0c\u4e0d\u5e94\u7b7e\u5165\u5230\u6e90\u4ee3\u7801\u7ba1\u7406\u3002\u4f7f\u7528\u6807\u51c6\u7684Python.gitignore\u3002\n\u5f53\u60a8\u7b2c\u4e00\u6b21\u5bfc\u5165Python\u6587\u4ef6\u65f6\uff0cPython\u89e3\u91ca\u5668\u5c06\u5bf9\u5176\u8fdb\u884c\u7f16\u8bd1\uff0c\u5e76\u5c06\u7ed3\u679c\u5b57\u8282\u7801\u7f13\u5b58\u5230.pyc\u6587\u4ef6\u4e2d\uff0c\u4ee5\u4fbf\u540e\u7eed\u5bfc\u5165\u4e0d\u5fc5\u5904\u7406\u518d\u6b21\u89e3\u6790\u6216\u7f16\u8bd1\u4ee3\u7801\u7684\u5f00\u9500\u3002\n\u5bf9\u4e8ePython\u9879\u76ee\u6765\u8bf4\uff0c\u5c06\u914d\u7f6e\u3001\u5bc6\u94a5\u548c\u5bc6\u7801(\u7edf\u79f0\u4e3a\u201c\u79d8\u5bc6\u201d)\u5b58\u50a8\u5728\u4e00\u4e2a\u540d\u4e3a\u8bf8\u5982Secrets.py\u3001config.py\u6216settings.py\u4e4b\u7c7b\u7684\u5de8\u578bPython\u6587\u4ef6\u4e2d\u4e5f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u505a\u6cd5\uff0c\u9879\u76ee\u7684\u5176\u4ed6\u90e8\u5206\u4f1a\u5bfc\u5165\u8fd9\u4e9b\u6587\u4ef6\u3002\u8fd9\u5728\u79d8\u5bc6\u548c\u7b7e\u5165\u7684\u6e90\u4ee3\u7801\u4e4b\u95f4\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u5206\u79bb\uff0c\u800c\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u8bbe\u7f6e\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u800c\u4e14\u56e0\u4e3a\u5b83\u91cd\u7528\u4e86\u8be5\u8bed\u8a00\u7684\u5bfc\u5165\u673a\u5236\uff0c\u6240\u4ee5\u8fd9\u4e9b\u9879\u76ee\u4e0d\u5fc5\u4e3a\u6587\u4ef6I/O\u6216JSON\u4e4b\u7c7b\u7684\u683c\u5f0f\u800c\u5927\u60ca\u5c0f\u602a\u3002\n\u4f46\u662f\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u8be5\u6a21\u5f0f\u65e2\u5feb\u901f\u53c8\u65b9\u4fbf\uff0c\u4e5f\u5b58\u5728\u6f5c\u5728\u7684\u4e0d\u5b89\u5168\u56e0\u7d20\u3002\u56e0\u4e3a\u5b83\u91cd\u7528\u4e86\u8be5\u8bed\u8a00\u7684\u5bfc\u5165\u673a\u5236(\u4e60\u60ef\u4e8e\u521b\u5efa\u548c\u7f13\u5b58.pyc\u6587\u4ef6)\uff0c\u6240\u4ee5\u8fd9\u4e9b\u79d8\u5bc6\u4e5f\u5b58\u5728\u4e8e\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\u4e2d\uff01\u4f7f\u7528GitHub API\u8fdb\u884c\u7684\u4e00\u4e9b\u521d\u6b65\u7814\u7a76\u663e\u793a\uff0c\u6570\u5343\u4e2aGitHub\u5b58\u50a8\u5e93\u5728\u5176\u5b57\u8282\u7801\u4e2d\u9690\u85cf\u7740\u79d8\u5bc6\u3002\n\u73b0\u6709\u7684\u5728\u5b58\u50a8\u5e93\u4e2d\u67e5\u627e\u79d8\u5bc6\u7684\u5de5\u5177(\u6211\u6700\u559c\u6b22\u7684\u662ftrufflehog)\u8df3\u8fc7\u8bf8\u5982.pyc\u6587\u4ef6\u4e4b\u7c7b\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u800c\u53ea\u626b\u63cf\u8bf8\u5982\u6e90\u4ee3\u7801\u6216\u914d\u7f6e\u6587\u4ef6\u4e4b\u7c7b\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u3002\n\u65e9\u671f\u7248\u672c\u7684Python\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5b58\u50a8\u5728\u539f\u59cb\u6e90\u6587\u4ef6\u65c1\u8fb9\uff0c\u4f46\u662f\u4ecePython3.2\u5f00\u59cb\uff0c\u8fd9\u4e9b\u6587\u4ef6\u90fd\u4f4d\u4e8e\u5bfc\u5165\u6a21\u5757\u6839\u76ee\u5f55\u4e0b\u540d\u4e3a__pycache__\u7684\u6587\u4ef6\u5939\u4e2d\u3002\n\u8bf7\u6ce8\u610f\uff0c\u53d8\u91cf\u540d\u548c\u5b57\u7b26\u4e32\u662f\u5b8c\u6574\u590d\u5236\u7684\uff01\u6b64\u5916\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0cPython\u5b57\u8282\u7801\u901a\u5e38\u5305\u542b\u8db3\u591f\u7684\u4fe1\u606f\u6765\u6062\u590d\u4ee3\u7801\u7684\u539f\u59cb\u7ed3\u6784\u3002\u50cfuncompyle6\u8fd9\u6837\u7684\u5de5\u5177\u53ef\u4ee5\u5c06.pyc\u6587\u4ef6\u8f6c\u6362\u56de\u5176\u539f\u59cb\u5f62\u5f0f\u3002*\u5927\u90e8\u5206\u65f6\u95f4\u3002\n$uncompyle6 Secrets.cpython-38.pyc#uncompyle6\u7248\u672c3.6.7#Python\u5b57\u8282\u78013.8(3413)#\u53cd\u7f16\u8bd1\u81ea\uff1aPython 3.8.2(\u9ed8\u8ba4\uff0c2020\u5e744\u67088\u65e5\uff0c14\uff1a31\uff1a25)#[GCC 9.3.0]#\u5d4c\u5165\u5f0f\u6587\u4ef6\u540d\uff1aSecrets.py#\u7f16\u8bd1\u65f6\u95f4\uff1a2020-05-12 17\uff1a16\uff1a29#\u6e90\u6a21\u5757\u5927\u5c0f2**32\uff1a34\u5b57\u8282SECRET_KEY=&#39\uff1b\u7eff\u86cb\u548c\u706b\u817f&#39\n\u4e3a\u4e86\u8c03\u67e5\u8fd9\u4e2a\u95ee\u9898\u5230\u5e95\u6709\u591a\u666e\u904d\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u77ed\u7684\u811a\u672c\u6765\u641c\u7d22GitHub\u4ee5\u67e5\u627e.pyc\u6587\u4ef6\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u53cd\u7f16\u8bd1\u4ee5\u67e5\u627e\u79d8\u5bc6\u3002\u6211\u6700\u7ec8\u627e\u5230\u4e86\u6570\u5343\u4e2a\u63a8\u7279\u5bc6\u94a5\u3001\u6761\u7eb9\u4ee4\u724c\u3001AWS\u51ed\u8bc1\u548c\u793e\u4ea4\u5a92\u4f53\u5bc6\u7801\u3002\u6211\u901a\u77e5\u4e86\u6240\u6709\u6211\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u627e\u5230\u94a5\u5319\u7684\u7ec4\u7ec7\u3002\n\u5bfc\u5165base64\u5bfc\u5165io\u5bfc\u5165os\u5bfc\u5165\u4e34\u65f6\u6587\u4ef6\u4eceGitHub\u5bfc\u5165uncompyle6\u5bfc\u5165Github GitHub_Key=os\u3002\u73af\u5883\u3002get(&#34\uff1bGitHub_Key&#34\uff1b)g=Github(GitHub_Key)Items=g\u3002\u9879\u76ee\u4e2d\u9879\u76ee\u7684\u641c\u7d22\u4ee3\u7801(&#34\uff1b\u6587\u4ef6\u540d\uff1aSecrets.pyc&34\uff1b)\uff1a\u6253\u5370(f&#34\uff1b\u53cd\u7f16\u8bd1repo https://github.com/{item.repository.full_name}&#34\uff1b)\u6253\u5370(f&#34\uff1b\u6240\u6709\u8005\u7c7b\u578b\uff1a{item.repository.owner.type}&#34\uff1b)\u5c1d\u8bd5\uff1a\u5185\u5bb9=base64\u3002b64decode(\u9879\u76ee\u3002\u5185\u5bb9)\u548c\u4e34\u65f6\u6587\u4ef6\u3002NamedTemporaryFile(\u540e\u7f00=&#34\uff1b.pyc&#34\uff1b)\u4f5c\u4e3af\uff1af\u3002\u5199(\u5185\u5bb9)f.\u3002\u67e5\u627e(0)out=io\u3002StringIO()\u4e0d\u517c\u5bb96.\u3002\u53cd\u7f16\u8bd1_\u6587\u4ef6(f.\u3002\u59d3\u540d\uff0c\u51fa\u5c40)\u51fa\u5c40\u3002\u67e5\u627e(0)\u6253\u5370(\u8f93\u51fa\u3002Read())\u9664e\u4f8b\u5916\uff1a\u6253\u5370(E)\u6253\u5370(f&#34\uff1b\u65e0\u6cd5\u53cd\u7f16\u8bd1repo https://github.com/{item.repository.full_name}&#34\uff1b)\u7ee7\u7eed\u6253\u5370(&#34\uff1b\\n\\n\\n&#34\uff1b)\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u9644\u5e26\u4e86\u4e00\u4e2a\u5c0f\u578b\u7684\u6355\u83b7\u65d7\u5e1c\u98ce\u683c\u7684\u5b9e\u9a8c\u5ba4\uff0c\u8ba9\u4f60\u81ea\u5df1\u5c1d\u8bd5\u8fd9\u79cd\u98ce\u683c\u7684\u653b\u51fb\u3002\n\u7f13\u5b58\u5b57\u8282\u7801\u662f\u4e00\u79cd\u4f4e\u7ea7\u7684\u5185\u90e8\u6027\u80fd\u4f18\u5316\uff0c\u8fd9\u662fPython\u5e94\u8be5\u8ba9\u6211\u4eec\u4e0d\u5fc5\u8003\u8651\u7684\u4e8b\u60c5\uff01\u5982\u679c\u6ca1\u6709\u50cf\u53cd\u6c47\u7f16\u7a0b\u5e8f\u6216\u53cd\u7f16\u8bd1\u5668\u8fd9\u6837\u7684\u7279\u6b8a\u5de5\u5177\uff0c.pyc\u6587\u4ef6\u7684\u5185\u5bb9\u662f\u96be\u4ee5\u7406\u89e3\u7684\u3002\u5f53\u8fd9\u4e9b\u6587\u4ef6\u88ab\u9690\u85cf\u5728__pycache__\u5185(\u53cc\u4e0b\u5212\u7ebf\u4fe1\u53f7\u201c\u7981\u6b62\u8fdb\u5165\uff1b\u4ec5\u9650\u5185\u90e8\u4f7f\u7528\u201d)\u65f6\uff0c\u5f88\u5bb9\u6613\u5ffd\u7565\u5b83\u4eec\u3002\u8bb8\u591a\u6587\u672c\u7f16\u8f91\u5668\u548cIDE\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5939\u548c\u6587\u4ef6\u4ece\u6e90\u4ee3\u7801\u6811\u4e2d\u9690\u85cf\u8d77\u6765\uff0c\u4ee5\u907f\u514d\u5f04\u4e71\u5c4f\u5e55\uff0c\u751a\u81f3\u5f88\u5bb9\u6613\u5fd8\u8bb0\u5b83\u4eec\u7684\u5b58\u5728\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u5f88\u5bb9\u6613\u610f\u5916\u5730\u63d0\u4ea4\u4ed6\u4eec\u7684\u79d8\u5bc6\uff0c\u800c\u4e14\u51e0\u4e4e\u53ef\u4ee5\u4fdd\u8bc1\u521d\u5b66\u8005\u4f1a\u72af\u8fd9\u4e2a\u9519\u8bef\u3002\u8981\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u9700\u8981\u8fd0\u6c14\u597d\u7684gitignore\uff0c\u8981\u4e48\u9700\u8981\u5bf9git\u548cPython\u5185\u90e8\u6709\u4e00\u822c\u7684\u4e86\u89e3\u3002\n\u5982\u679c\u60a8\u6709.pyc\u6587\u4ef6\uff0c\u5e76\u4e14\u5176\u4e2d\u5305\u542b\u673a\u5bc6\uff0c\u5219\u64a4\u9500\u5e76\u8f6e\u6362\u60a8\u7684\u673a\u5bc6", "note_en": "tl;dr: Cache rules everything around me.  pyc files can contain secrets and should not be checked in to source control. Use the standard Python  .gitignore.\n  When you import a Python file for the first time, the Python interpreter will compile it and cache the resulting bytecode in a  .pyc file so that subsequent imports don\u2019t have to deal with the overhead of parsing or compiling the code again.\n It\u2019s also common practice for Python projects to store configuration, keys, and passwords (collectively referred to as \u201csecrets\u201d) in a gitignored Python file named something like  secrets.py,  config.py, or  settings.py, which other parts of the project import. This provides a nice separation between secrets and source code that gets checked in, and for the most part, this kind of setup works well. And because it reuses the language\u2019s import mechanism, these projects don\u2019t have to fuss around with file I/O or formats like JSON.\n But for the same reason that this pattern is fast and convenient, it is also potentially insecure. Because it reuses the language\u2019s import mechanism, which has a habit of creating and caching  .pyc files, those secrets also live in the compiled bytecode! Some initial research using the GitHub API reveals that  thousands of GitHub repositories contain secrets hidden inside their bytecode.\n Existing tools for finding secrets in repositories (my favorite is  trufflehog) skip over binary files like  .pyc files, and instead only scan plain text files such as source code or configuration files.\n  Earlier versions of Python stored these files next to the original source files, but beginning with  Python 3.2, these files all live in a folder called  __pycache__ at the root of the imported module.\n     Note that the variable name and string are reproduced in their entirety! Further, it turns out that Python bytecode often contains enough information to recover the original structure of the code. Tools like  uncompyle6 can translate  .pyc files back into their original forms. * most of the time\n $ uncompyle6 secrets.cpython-38.pyc# uncompyle6 version 3.6.7# Python bytecode 3.8 (3413)# Decompiled from: Python 3.8.2 (default, Apr 8 2020, 14:31:25) # [GCC 9.3.0]# Embedded file name: secrets.py# Compiled at: 2020-05-12 17:16:29# Size of source mod 2**32: 34 bytesSECRET_KEY = &#39;Green eggs and ham&#39;# okay decompiling secrets.cpython-38.pyc\n  To investigate just how widespread this problem was, I wrote a short script to search GitHub for  .pyc files and decompile them to look for secrets. I ended up finding  thousands of Twitter keys, Stripe tokens, AWS credentials, and social media passwords. I alerted any organizations whose keys I found this way.\n import  base64 import  io import  os import  tempfile import  uncompyle6 from  github  import  Github GITHUB_KEY  =  os . environ . get ( &#34;GITHUB_KEY&#34; ) g  =  Github ( GITHUB_KEY ) items  =  g . search_code ( &#34;filename:secrets.pyc&#34; ) for  item  in  items :  print ( f &#34;DECOMPILING REPO https://github.com/{item.repository.full_name}&#34; )  print ( f &#34;OWNER TYPE: {item.repository.owner.type}&#34; )  try :  contents  =  base64 . b64decode ( item . content )  with  tempfile . NamedTemporaryFile ( suffix = &#34;.pyc&#34; )  as  f :  f . write ( contents )  f . seek ( 0 )  out  =  io . StringIO ()  uncompyle6 . decompile_file ( f . name ,  out )  out . seek ( 0 )  print ( out . read ())  except  Exception  as  e :  print ( e )  print ( f &#34;COULD NOT DECOMPILE REPO https://github.com/{item.repository.full_name}&#34; )  continue  print ( &#34; \\n\\n\\n &#34; )\n  This post comes with a small capture-the-flag style lab for you to try out this style of attack yourself.\n   Cached bytecode is a low-level internal performance optimization, which is the kind of thing Python was supposed to free us from having to think about! The contents of  .pyc files are inscrutable without special tools like a disassembler or decompiler. And when these files are buried inside  __pycache__ (the  double underscores signal \u201ckeep out; internal use only\u201d), they\u2019re easy to overlook. Many text editors and IDEs hide these folders and files from the source tree to avoid cluttering up the screen, making it easy to forget that they even exist.\n That is to say, it is very easy for an experienced programmer to accidentally commit their secrets, and all but guaranteed that a beginner will make this mistake. Avoiding this requires either getting lucky with a good gitignore, or intermediate knowledge of git and Python internals.\n  If you have  .pyc files and they contain secrets, then revoke and rotate your secrets", "posttime": "2020-05-31 11:08:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,python,\u5b57\u8282,secrets,\u6587\u4ef6", "title": "\u901a\u8fc7\u53cd\u7f16\u8bd1\u516c\u5171\u5b58\u50a8\u5e93\u4e2d\u7684Python\u5b57\u8282\u7801\u6765\u67e5\u627e\u673a\u5bc6", "title_en": "Finding secrets by decompiling Python bytecode in public repositories", "transed": 1, "url": "https://blog.jse.li/posts/pyc/", "via": "", "real_tags": ["\u7f16\u8bd1", "python", "\u5b57\u8282", "secrets", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "a3f09eb6e384c8876a36843280b34f53.png", "infoid": 1004477, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740VMware Workstation/Player 15.5.5\u7684\u53d1\u5e03\uff0c\u6211\u4eec\u975e\u5e38\u5174\u594b\u548c\u81ea\u8c6a\u5730\u5ba3\u5e03\u652f\u6301\u542f\u7528\u4e86Hyper-V\u6a21\u5f0f\u7684Windows\u4e3b\u673a\uff01\u5982\u60a8\u6240\u77e5\uff0c\u8fd9\u662f\u5fae\u8f6f\u548cVMware\u7684\u8054\u5408\u9879\u76ee\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5fae\u8f6f\u7684\u535a\u5ba2\u3002\n\u81ea\u4ece\u5f15\u5165Hyper-V(\u5305\u62ecCredential Guard\u548cDevice Guard)\u4ee5\u6765\uff0c\u542f\u7528\u4efb\u4f55\u8fd9\u4e9b\u529f\u80fd\u90fd\u4f1a\u963b\u6b62VMware Workstation\u542f\u52a8\u865a\u62df\u673a\u3002\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u5ba2\u6237\u6ee1\u610f\uff0cVMware\u548cMicrosoft\u5f00\u59cb\u4e86\u5408\u4f5c\uff0c\u76ee\u6807\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u65e7\u91d1\u5c71\u7684VMworld 2019\u5927\u4f1a\u4e0a\uff0cVMware\u548c\u5fae\u8f6f\u5171\u540c\u5ba3\u5e03\uff0c\u6211\u4eec\u5df2\u7ecf\u5171\u540c\u5f00\u53d1\u4e86\u4e00\u4e2a\u91c7\u7528\u5fae\u8f6f\u548cWindows\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5e73\u53f0(WHP)API\u7684\u9879\u76ee\u3002\n\u57282020\u5e741\u6708\uff0c\u53d1\u5e03\u4e86\u5de5\u4f5c\u7ad9\u6280\u672f\u9884\u89c8\u724820H1\uff0c\u652f\u6301\u542f\u7528\u4e86VBS\u7684\u4e3b\u673a\u662f\u6d4b\u8bd5\u7684\u76ee\u6807\u529f\u80fd\u3002\nVMware Workstation\u4f20\u7edf\u4e0a\u4f7f\u7528\u865a\u62df\u673a\u76d1\u89c6\u5668(VMM)\uff0c\u8be5\u76d1\u89c6\u5668\u5728\u7279\u6743\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u9700\u8981\u76f4\u63a5\u8bbf\u95eeCPU\u4ee5\u53ca\u8bbf\u95eeCPU\u7684\u5185\u7f6e\u865a\u62df\u5316\u652f\u6301(Intel\u7684VT-x\u548cAMD\u7684AMD-V)\u3002\u5f53Windows\u4e3b\u673a\u542f\u7528\u57fa\u4e8e\u865a\u62df\u5316\u7684\u5b89\u5168\u6027(\u201cVBS\u201d)\u529f\u80fd\u65f6\uff0cWindows\u4f1a\u5728\u786c\u4ef6\u548cWindows\u4e4b\u95f4\u6dfb\u52a0\u57fa\u4e8eHyper-V\u7684\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5c42\u3002*\u4efb\u4f55\u8fd0\u884cVMware\u4f20\u7edfVMM\u7684\u5c1d\u8bd5\u90fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u5728Hyper-V\u4e2d\uff0cVMM\u4e0d\u518d\u80fd\u591f\u8bbf\u95ee\u786c\u4ef6\u7684\u865a\u62df\u5316\u652f\u6301\u3002\n\u4e3a\u4e86\u89e3\u51b3\u6b64Hyper-V/Host VBS\u517c\u5bb9\u6027\u95ee\u9898\uff0cVMware\u7684\u5e73\u53f0\u56e2\u961f\u91cd\u65b0\u8bbe\u8ba1\u4e86VMware\u7684\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\uff0c\u4ee5\u4f7f\u7528\u5fae\u8f6f\u7684WHP API\u3002\u8fd9\u610f\u5473\u7740\u5c06\u6211\u4eec\u7684VMM\u66f4\u6539\u4e3a\u5728\u7528\u6237\u7ea7\u522b\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u5728\u7279\u6743\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u5e76\u5c06\u5176\u4fee\u6539\u4e3a\u4f7f\u7528WHPAPI\u6765\u7ba1\u7406\u6765\u5bbe\u7684\u6267\u884c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u5e95\u5c42\u786c\u4ef6\u3002\n\u542f\u7528Hyper-V\u540e\uff0cVMware Workstation/Player\u73b0\u5728\u53ef\u4ee5\u8fd0\u884c\u3002\u60a8\u4e0d\u518d\u9700\u8981\u5728\u8fd0\u884cVMware Workstation\u548cWindows\u529f\u80fd(\u5982WSL\u3001Device Guard\u548cCredential Guard)\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u542f\u7528Hyper-V\u540e\uff0c\u5c06\u81ea\u52a8\u4f7f\u7528ULM\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884cVMware Workstation\u3002\u5982\u679c\u60a8\u6839\u672c\u4e0d\u4f7f\u7528Hyper-V\uff0cVMware Workstation\u5c06\u8db3\u591f\u667a\u80fd\u5730\u68c0\u6d4b\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u5c06\u4f7f\u7528VMM\u3002\n\u8981\u4f7f\u7528Windows Hypervisor API\u8fd0\u884c\u5de5\u4f5c\u7ad9/\u64ad\u653e\u5668\uff0c\u6240\u9700\u7684\u6700\u4f4eWindows10\u7248\u672c\u4e3aWindows1020H1\u5185\u90e8\u7248\u672c19041.264\u3002VMware Workstation/Player\u7684\u6700\u4f4e\u7248\u672c\u4e3a15.5.5\u3002\n\u5411\u5fae\u8f6f\u548cVMware\u7684\u5de5\u7a0b\u56e2\u961f\u8868\u793a\u70ed\u70c8\u7684\u795d\u8d3a\u3002\u8fd9\u5bf9\u53cc\u65b9\u6765\u8bf4\u90fd\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u3002\u6211\u4eec\u4ecd\u5c06\u5408\u4f5c\u89e3\u51b3\u5ba2\u6237\u62a5\u544a\u7684\u9519\u8bef\uff0c\u63d0\u9ad8\u6027\u80fd\uff0c\u5e76\u6839\u636e\u5ba2\u6237\u7684\u8981\u6c42\u5411WHP\u6dfb\u52a0\u529f\u80fd\u3002\n\u975e\u5e38\u611f\u8c22\u6211\u4eec\u7684\u5ba2\u6237\uff0c\u611f\u8c22\u6211\u4eec\u70ed\u60c5\u7684\u7528\u6237\uff01\u611f\u8c22\u60a8\u7684\u8010\u5fc3\u7b49\u5f85\uff01\u611f\u8c22\u60a8\u7684\u5b9d\u8d35\u610f\u89c1\u53cd\u9988\uff01\u4f60\u662f\u6211\u4eec\u6709\u8fd9\u4e48\u5927\u7684\u5408\u4f5c\u9879\u76ee\u7684\u552f\u4e00\u539f\u56e0\uff01", "note_en": "With the release of VMware Workstation/Player 15.5.5, we are very excited and proud to announce support for Windows hosts with Hyper-V mode enabled! As you may know, this is a joint project from both Microsoft and VMware. You can also check out Microsoft\u2019s blog  here.\n    Since the introduction of Hyper-V, including Credential Guard and Device Guard, enabling any of these features prevented VMware Workstation from launching virtual machines. In order to satisfy our customers, VMware and Microsoft started a collaboration with the goal of fixing this problem.\n At VMworld 2019 San Francisco, VMware and Microsoft together made an announcement that we have\u00a0jointly developed a project that\u00a0adopts Microsoft\u00a0 Windows Hypervisor Platform (WHP) APIs.\n In January 2020, Workstation Tech Preview 20H1 was released, with support for hosts with VBS enabled being the target feature for testing.\n  VMware Workstation traditionally has used a Virtual Machine Monitor (VMM) which operates in privileged mode requiring direct access to the CPU as well as access to the CPU\u2019s built in virtualization support (Intel\u2019s VT-x and AMD\u2019s AMD-V). \u00a0When a Windows host enables Virtualization Based Security (\u201c VBS\u201c) features, Windows adds a hypervisor layer based on Hyper-V between the hardware and Windows. \u00a0Any attempt to run VMware\u2019s traditional VMM fails because being inside Hyper-V the VMM no longer has access to the hardware\u2019s virtualization support.\n  To fix this Hyper-V/Host VBS compatibility issue,\u00a0 VMware\u2019s platform team re-architected VMware\u2019s Hypervisor to use Microsoft\u2019s WHP APIs. This means   changing our VMM to run at user level instead of in privileged mode, as well modifying it to use the WHP APIs to manage the execution of a guest instead of using the underlying hardware directly.\n  VMware Workstation/Player can now run when\u00a0 Hyper-V is enabled. You no longer have to choose between running VMware Workstation and Windows features like\u00a0 WSL, Device Guard and Credential Guard. When Hyper-V is enabled, ULM mode will\u00a0automatically\u00a0 be\u00a0used so you can run VMware Workstation normally. If you don\u2019t use Hyper-V at all, VMware Workstation is smart enough to detect this and the VMM will be used.\n  To run Workstation/Player using the Windows Hypervisor APIs, the minimum required Windows 10 version is\u00a0Windows 10 20H1 build 19041.264. VMware Workstation/Player minimum version is 15.5.5.\n A big congratulation\u00a0to the engineering teams from both Microsoft and VMware. This is a big milestone for both sides. We will still be working together on bugs reported by our customers, improving performance, and adding features to WHP based on customers\u2019 requests.\n A big thank you to our customers, to our passionate users! Thank you for being patient! Thank you for your valuable\u00a0 feedback! You are the only reason we have such a big joint project!", "posttime": "2020-05-31 10:36:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "vmware,\u73b0\u5728,supports", "title": "VMware\u73b0\u5728\u652f\u6301Hyper-V\u6a21\u5f0f", "title_en": "VMware now supports Hyper-V mode", "transed": 1, "url": "https://blogs.vmware.com/workstation/2020/05/vmware-workstation-now-supports-hyper-v-mode.html", "via": "", "real_tags": ["vmware", "\u73b0\u5728", "supports"]}, {"category": "", "categoryclass": "", "imagename": "e248112ca96fab47b566952d33eeceed.jpg", "infoid": 1004476, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CARE\u6cd5\u6848\u662f\u4e00\u98792\u4e07\u4ebf\u7f8e\u5143\u7684\u4e00\u63fd\u5b50\u8ba1\u5212\uff0c\u65e8\u5728\u63d0\u4f9b\u7ecf\u6d4e\u6551\u6d4e\uff0c\u5e76\u4ece4\u6708\u521d\u7684\u51a0\u72b6\u75c5\u6bd2\u51b2\u51fb\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u7531\u4e8e\u8bb8\u591a\u539f\u56e0\uff0c\u8be5\u6cd5\u6848\u975e\u5e38\u4e0d\u5b8c\u7f8e\u3002\u4f46\u662f\uff0cCARE\u6cd5\u6848\u5bf9\u56fd\u5bb6\u5931\u4e1a\u4fdd\u9669(UI)\u7cfb\u7edf\u7684\u4fee\u6539\u662f\u6570\u5343\u4e07\u7f8e\u56fd\u5de5\u4eba\u6781\u5176\u91cd\u8981\u7684\u751f\u547d\u7ebf\u3002\u9664\u4e86\u5728\u5e74\u5e95\u524d\u6682\u65f6\u6269\u5927\u8c01\u6709\u8d44\u683c\u9886\u53d6\u5931\u4e1a\u6551\u6d4e\u91d1\u7684\u8d44\u683c\u6807\u51c6\uff0c\u5e76\u63d0\u4f9b\u989d\u591613\u5468\u7684\u5ddeUI\u798f\u5229\u5916\uff0cCARE\u6cd5\u6848\u8fd8\u63d0\u4f9b\u4e86\u622a\u81f37\u6708\u5e95\u7684\u6bcf\u5468\u989d\u5916600\u7f8e\u5143\u7684UI\u4ed8\u6b3e\u3002\n\u81ea\u8be5\u6cd5\u6848\u901a\u8fc7\u4ee5\u6765\uff0c\u8fd9\u9879600\u7f8e\u5143\u7684\u5145\u503c\u8ba1\u5212\u4e00\u76f4\u53d7\u5230\u4e00\u4e9b\u4eba\u7684\u731b\u70c8\u6279\u8bc4-\u4f8b\u5982\uff0c\u53c2\u8bae\u5458\u6797\u8d5b\u00b7\u683c\u96f7\u5384\u59c6(Lindsey Graham)(R-S.C.)\u3002\u4ed6\u8bf4\uff0c\u5b83\u53ea\u4f1a\u5ef6\u957f\u52307\u6708\u4efd\u4ee5\u540e\uff0c\u53ea\u662f\u201c\u5728\u6211\u4eec\u7684\u8eab\u4f53\u4e0a\u201d--\u4f46\u8fd9\u79cd\u6279\u8bc4\u8981\u4e48\u6d88\u606f\u7075\u901a\uff0c\u8981\u4e48\u4e0d\u5b88\u4fe1\u7528\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u989d\u5916\u768460\u4e07\u7f8e\u5143\u662f\u6211\u4eec\u5e94\u5bf9\u51a0\u72b6\u75c5\u6bd2\u51b2\u51fb\u7684\u7ecf\u6d4e\u653f\u7b56\u4e2d\u6700\u6709\u6548\u7684\u90e8\u5206\u3002\u8fd9\u53ef\u80fd\u4f1a\u63d0\u9ad8-\u800c\u4e0d\u662f\u964d\u4f4e-\u52b3\u52a8\u529b\u5e02\u573a\u6548\u7387\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u4f7f\u56fd\u5bb6\u7684\u5931\u4e1a\u4fdd\u9669\u5236\u5ea6\u8d44\u6e90\u5145\u8db3\uff0c\u5373\u4f7f\u5728\u6b63\u5e38\u65f6\u671f\u4e5f\u8981\u6177\u6168\u5f97\u591a\u3002\n\u653f\u7b56\u5236\u5b9a\u8005\u5982\u4f55\u540c\u610f\u56fa\u5b9a\u7684600\u7f8e\u5143\u7684\u989d\u5916UI\u798f\u5229\u7684\u5386\u53f2\u662f\u76f4\u622a\u4e86\u5f53\u7684\uff0c\u5c3d\u7ba1\u4ee4\u4eba\u6cae\u4e27\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u798f\u5229\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u901a\u5e38\u4f1a\u53d6\u4ee3\u666e\u901a\u5de5\u4eba\u5468\u5de5\u8d44\u7684\u4e09\u5206\u4e4b\u4e00\u5230\u4e00\u534a\u3002\u51e0\u5341\u5e74\u6765\uff0c\u592a\u591a\u7684\u7ecf\u6d4e\u5b66\u5bb6\u548c\u653f\u7b56\u5236\u5b9a\u8005\u4e00\u76f4\u5728\u52b3\u52a8\u529b\u5e02\u573a\u7684\u4e00\u4e9b\u9519\u8bef\u5148\u5165\u4e3a\u4e3b\u7684\u89c2\u5ff5\u4e0b\u82e6\u82e6\u6323\u624e\uff0c\u5176\u4e2d\u6700\u5177\u7834\u574f\u6027\u7684\u4e00\u4e2a\u662f\uff0c\u4f53\u9762\u7684\u5de5\u4f5c\u5145\u88d5\u4e14\u5bb9\u6613\u83b7\u5f97\uff0c\u552f\u4e00\u8ba9\u6f5c\u5728\u5de5\u4eba\u5728\u4efb\u4f55\u65f6\u95f4\u90fd\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u5de5\u4f5c\u7684\u4e8b\u60c5\u662f\u5de5\u4eba\u81ea\u5df1\u7684\u52a8\u673a\uff0c\u5982\u679c\u798f\u5229\u592a\u6177\u6168\uff0c\u8fd9\u79cd\u52a8\u673a\u53ef\u80fd\u4f1a\u88ab\u524a\u5f31\u3002\u8fd9\u662f\u4e00\u79cd\u53e4\u8001\u800c\u611a\u8822\u7684\u60f3\u6cd5\uff0c\u5373\u7f8e\u56fd\u7684\u793e\u4f1a\u4fdd\u969c\u7f51\u7edc-\u5c3d\u7ba1\u662f\u53d1\u8fbe\u56fd\u5bb6\u4e2d\u6700\u541d\u556c\u7684-\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u8fc7\u4e8e\u8212\u9002\u7684\u201c\u540a\u5e8a\u201d\u3002(\u65e0\u8bba\u5982\u4f55\uff0c\u6765\u81ea\u5927\u8870\u9000(Great Recession)\u4f59\u6ce2\u7684\u8bc1\u636e\u663e\u793a\uff0c\u5ef6\u957f\u5931\u4e1a\u6551\u6d4e\u91d1\u5bf9\u5de5\u4eba\u662f\u5426\u627e\u5230\u5de5\u4f5c\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd-\u8fd9\u610f\u5473\u7740\u8ba9\u5de5\u4eba\u5931\u4e1a\u7684\u4e0d\u662f\u5931\u4e1a\u6551\u6d4e\u91d1-\u800c\u662f\u5bf9\u5de5\u4eba\u7684\u9700\u6c42\u4e0d\u8db3\u3002)\u3002\n\u51a0\u72b6\u75c5\u6bd2\u7684\u7ecf\u6d4e\u51b2\u51fb\u663e\u7136\u4e0e\u4e2a\u522b\u5de5\u4eba\u7684\u52a8\u673a\u5b8c\u5168\u65e0\u5173\uff0c\u4ee5\u81f3\u4e8e\u653f\u7b56\u5236\u5b9a\u8005\u613f\u610f\u5927\u5e45(\u5982\u679c\u662f\u6682\u65f6\u7684)\u589e\u52a0\u5931\u4e1a\u6551\u6d4e\u91d1\u7684\u6177\u6168\u7a0b\u5ea6\u3002\u6211\u4eec\u503e\u5411\u4e8e100%\u7684\u66ff\u4ee3\u7387\uff0c\u76f4\u5230\u76f8\u5f53\u6177\u6168\u7684\u6700\u9ad8\u798f\u5229\u3002\u4f46\u662f\uff0c\u51e0\u5341\u5e74\u6765\u5bf9\u5ddeUI\u529e\u516c\u5ba4\u884c\u653f\u80fd\u529b\u7684\u64a4\u8d44\u4f7f\u5f97\u4ed6\u4eec\u65e0\u6cd5\u4ee5100%\u7684\u66ff\u6362\u7387\u7075\u6d3b\u5730\u8ba1\u7b97\u6bcf\u4e2a\u65b0\u7533\u8bf7\u8005\u7684\u798f\u5229\u91d1\u989d\u3002(\u6700\u6070\u5f53\u7684\u4f8b\u5b50\u662f\uff1a\u5927\u591a\u6570\u529e\u516c\u5ba4\u4ecd\u5728\u4f7f\u752820\u4e16\u7eaa70\u5e74\u4ee3\u7684\u7f16\u7a0b\u8bed\u8a00COBOL\u6765\u8fd0\u884c\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a)\u3002\u7136\u800c\uff0c\u5dde\u653f\u5e9c\u529e\u516c\u5ba4\u6709\u80fd\u529b\u7ba1\u7406\u7edf\u4e00\u8d39\u7387\u7684\u589e\u957f\u3002\u56e0\u6b64\uff0c\u56fd\u4f1a\u7684\u653f\u7b56\u5236\u5b9a\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u806a\u660e\u800c\u5bcc\u6709\u540c\u60c5\u5fc3\u7684\u6b21\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u5373\u9009\u62e9\u7edf\u4e00\u8d39\u7387\u63d0\u9ad8\u798f\u5229\uff0c\u8ba9\u666e\u901a\u5de5\u4eba(\u4ee5\u53ca\u5927\u591a\u6570\u5de5\u4eba)\u83b7\u5f97\u5371\u673a\u524d100%\u7684\u6536\u5165\u3002\n\u4f46\u201c\u4e00\u5200\u5207\u201d\u65b9\u6cd5\u7684\u5fc5\u8981\u6027\u610f\u5473\u7740\uff0c\u5371\u673a\u524d\u6536\u5165\u4f4e\u4e8e\u666e\u901a\u5de5\u4eba\u7684\u5de5\u4eba\u5c06\u83b7\u5f97\u7565\u9ad8\u4e8e\u4e4b\u524d\u5de5\u8d44100%\u7684\u798f\u5229\u3002\u8bb8\u591a\u4fdd\u5b88\u6d3e\u4eba\u58eb\u58f0\u79f0\uff0c\u4e0d\u77e5\u4f55\u6545\uff0c\u8fd9\u662f\u4e00\u573a\u7ecf\u6d4e\u707e\u96be\u3002\u4ed6\u4eec\u9519\u4e86--\u8fd9\u5b9e\u9645\u4e0a\u5f88\u68d2\u3002\n\u4e3a\u4e86\u4f7f\u5b8f\u89c2\u7ecf\u6d4e\u4ece\u8fd9\u6b21\u51b2\u51fb\u4e2d\u8fc5\u901f\u590d\u82cf\uff0c\u8fdb\u5165\u4e2d\u4f4e\u5de5\u8d44\u5de5\u4eba\u53e3\u888b\u7684\u94b1\u8d8a\u591a\u8d8a\u597d\u3002\u5982\u679c\u6ca1\u6709\u6177\u6168\u7684\u6551\u6d4e\uff0c\u8fd9\u4e9b\u5de5\u4eba\u548c\u4ed6\u4eec\u7684\u5bb6\u4eba\u5c06\u4e0d\u5f97\u4e0d\u8017\u5c3d\u5fae\u8584\u7684\u50a8\u84c4\uff0c\u9677\u5165\u503a\u52a1\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5728\u5c01\u9501\u671f\u95f4\u751f\u5b58\u3002\u9664\u4e86\u9020\u6210\u53ef\u4ee5\u907f\u514d\u7684\u4eba\u7c7b\u75db\u82e6\u5916\uff0c\u5f53\u516c\u5171\u536b\u751f\u6700\u7ec8\u89e3\u9664\u65f6\uff0c\u8fd9\u5c06\u4e25\u91cd\u963b\u788d\u652f\u51fa\uff0c\u8fdb\u800c\u963b\u788d\u6574\u4f53\u7ecf\u6d4e\u590d\u82cf\u3002\n\u5bf9\u989d\u5916600\u7f8e\u5143\u7684\u4e3b\u8981\u62b1\u6028\u662f\uff0c\u5b83\u5c06\u963b\u788d\u4f4e\u85aa\u52b3\u52a8\u529b\u5e02\u573a\u5728\u5176\u4ed6\u65b9\u9762\u7684\u6709\u6548\u8fd0\u4f5c\u3002\u8bf7\u539f\u8c05\u6211\u4eec\u7684\u7ffb\u767d\u773c\u3002\u51e0\u5341\u5e74\u6765\uff0c\u52b3\u52a8\u529b\u5e02\u573a\u4e00\u76f4\u53d7\u5230\u64cd\u7eb5\uff0c\u4e0d\u5229\u4e8e\u4e2d\u4f4e\u5de5\u8d44\u5de5\u4eba\uff0c\u65e0\u8bba\u662f\u51fa\u4e8e\u9053\u5fb7\u8fd8\u662f\u6548\u7387\u65b9\u9762\u7684\u539f\u56e0\uff0c\u8fd9\u4e9b\u5de5\u4eba\u5728\u5371\u673a\u524d\u7684\u6536\u5165\u90fd\u592a\u4f4e\u4e86\u3002\u6b64\u5916\uff0c\u53cd\u5bf9\u9ad8UI\u66ff\u6362\u7387\u7684\u7ecf\u6d4e\u8bba\u636e\u662f\uff0c\u6211\u4eec\u4f1a\u524a\u5f31\u5de5\u4eba\u4eec\u5728\u4eba\u884c\u9053\u4e0a\u5bfb\u627e\u5de5\u4f5c\u7684\u52a8\u529b\u3002\u4f46\u6211\u4eec\u6b63\u5904\u4e8e\u6cd5\u5f8b\u5f3a\u5236\u7684\u7269\u7406\u8ddd\u79bb\u4e4b\u4e2d\uff0c\u4ee5\u6297\u51fb\u6d41\u884c\u75c5-\u4eba\u884c\u9053\u8d8a\u5c11-\u8d8a\u597d\u3002\u6b64\u5916\uff0c\u4e0a\u4e2a\u6708\u7ecf\u6d4e\u53ef\u80fd\u5931\u53bb\u4e86\u8d85\u8fc73000\u4e07\u4e2a\u5de5\u4f5c\u5c97\u4f4d\u3002\u5373\u4f7f\u6ca1\u6709\u75ab\u60c5\uff0c\u524a\u51cfUI\u798f\u5229\u4e5f\u662f\u611a\u8822\u548c\u6b8b\u5fcd\u7684\uff0c\u56e0\u4e3a\u524a\u51cfUI\u798f\u5229\u4f1a\u8ba9\u4ed6\u4eec\u8fc7\u4e8e\u541d\u556c\uff0c\u65e0\u6cd5\u7ee7\u7eed\u4e0b\u53bb\uff0c\u6210\u4e3a\u8981\u6c42\u4eba\u4eec\u5728\u5c31\u4e1a\u5e02\u573a\u7684\u7edd\u5bf9\u5669\u68a6\u4e2d\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8fc5\u901f\u627e\u5230\u5de5\u4f5c\u7684\u5927\u68d2\u3002\n\u4fdd\u5b88\u6d3e\u4eba\u58eb\u6d41\u4f20\u7740\u4e00\u4e9b\u4f01\u4e1a\u73b0\u5728\u8bd5\u56fe\u91cd\u65b0\u5f00\u4e1a\uff0c\u4f46\u627e\u4e0d\u5230\u5de5\u4eba\u7684\u6545\u4e8b\n\u8fd9\u4e9b\u5929\u6765\uff0c\u8bb8\u591a\u6f5c\u5728\u7684\u5de5\u4eba\u5bf9\u5192\u9669\u8fdb\u5165\u516c\u5171\u573a\u5408\u5de5\u4f5c\u6301\u8c28\u614e\u6001\u5ea6\uff0c\u8fd9\u51e0\u4e4e\u4e0d\u4ee4\u4eba\u9707\u60ca\u3002\u5728\u4e00\u4e2a\u9ad8\u6548\u7684\u52b3\u52a8\u529b\u5e02\u573a-\u5de5\u4eba\u548c\u96c7\u4e3b\u4e4b\u95f4\u7684\u7ade\u4e89\u73af\u5883\u662f\u516c\u5e73\u7684-\u8ba9\u4eba\u4eec\u514b\u670d\u8b66\u60d5\uff0c\u9762\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u6050\u60e7\u53bb\u5de5\u4f5c\u6240\u9700\u7684\u5de5\u8d44\u5f85\u9047\u5e94\u8be5\u4f1a\u589e\u52a0\u3002\u4f46\u5373\u4f7f\u5728\u6700\u597d\u7684\u65f6\u5019\uff0c\u7f8e\u56fd\u52b3\u52a8\u529b\u5e02\u573a\u4e5f\u4e0d\u662f\u9ad8\u6548\u6216\u5e73\u8861\u7684\uff0c\u5728\u53d7\u51a0\u72b6\u75c5\u6bd2\u5f71\u54cd\u7684\u52b3\u52a8\u529b\u5e02\u573a\uff0c\u4f01\u4e1a\u5de6\u53f3\u4e3a\u96be\uff0c\u96c7\u4e3b\u4e4b\u95f4\u7684\u7ade\u4e89\u662f\u5426\u4f1a\u63a8\u9ad8\u5de5\u4eba\u7684\u5de5\u8d44\u4f3c\u4e4e\u8fdc\u4e0d\u6e05\u695a\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u989d\u5916\u7684600\u7f8e\u5143\u6b63\u5728\u5e2e\u52a9\u52b3\u52a8\u529b\u5e02\u573a\u8fbe\u5230\u66f4\u5408\u7406\u7684\u5e73\u8861\uff0c\u5982\u679c\u5de5\u4eba\u613f\u610f\u627f\u62c5\u5728\u75ab\u60c5\u4e2d\u51fa\u73b0\u5728\u5de5\u4f5c\u5c97\u4f4d\u4e0a\u7684\u98ce\u9669\u548c\u989d\u5916\u8d1f\u62c5\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u4f1a\u5f97\u5230\u9002\u5f53\u7684\u8865\u507f\u3002\n\u800c\u8fd9\u6b63\u662f\u6211\u4eec\u8d1f\u62c5\u5f97\u8d77\u7684\uff0c\u4e5f\u6784\u6210\u4e86\u516c\u5171\u503a\u52a1\u5e94\u8be5\u82b1\u5728\u7684\u90a3\u7c7b\u4e1c\u897f\u3002\u628a\u94b1\u82b1\u5728\u7ee7\u7eed\u63d0\u4f9b\u5173\u952e\u7684\u5931\u4e1a\u4fdd\u9669\u6761\u6b3e\u4e0a\uff0c\u5c06\u6709\u52a9\u4e8e\u907f\u514d\u957f\u671f\u7684\u9ad8\u5931\u4e1a\u7387\uff0c\u8fd9\u5c06\u5bf9\u7ecf\u6d4e\u9020\u6210\u66f4\u4e25\u91cd\u548c\u66f4\u6301\u4e45\u7684\u635f\u5bb3\u3002\u5728\u8fc7\u53bb\u7684\u516d\u5468\u91cc\uff0c\u8fd13000\u4e07\u5de5\u4eba\u7533\u8bf7\u4e86\u5931\u4e1a\u4fdd\u9669\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4f5c\u4e3a\u6bd4\u8f83\uff0c\u8fd93000\u4e07\u5de5\u4eba\u9700\u8981\u5728\u4e00\u5e74\u5185\u6bcf\u5468\u989d\u5916\u83b7\u5f971400\u7f8e\u5143\uff0c\u624d\u80fd\u4e0e2017\u5e74\u9488\u5bf9\u4f01\u4e1a\u548c\u5bcc\u4eba\u7684\u51cf\u7a0e\u63aa\u65bd\u7684\u8d22\u653f\u89c4\u6a21\u76f8\u5339\u914d\u3002\n\u6211\u4eec\u662f\u5426\u5e0c\u671b\u7f8e\u56fd\u7684\u793e\u4f1a\u4fdd\u9669\u4f53\u7cfb-\u7279\u522b\u662f\u5931\u4e1a\u4fdd\u9669\u4f53\u7cfb-\u6709\u66f4\u597d\u7684\u8d44\u6e90\uff0c\u80fd\u591f\u4ee5\u6bd4\u6bcf\u5468\u5168\u9762\u589e\u52a0600\u7f8e\u5143\u6551\u6d4e\u91d1\u66f4\u5fae\u5999\u7684\u65b9\u5f0f\u6765\u5e94\u5bf9\u5f53\u524d\u7684\u51b2\u51fb\uff1f\u6211\u4eec\u6709\u3002\u4f46\u662f\uff0c\u4f60\u8fdb\u5165\u4e86\u4e00\u573a\u4ee3\u9645\u7ecf\u6d4e\u5371\u673a\uff0c\u56e0\u4e3a\u4f60\u62e5\u6709\u7684\u793e\u4f1a\u4fdd\u9669\u5236\u5ea6\uff0c\u800c\u4e0d\u662f\u4f60\u5e0c\u671b\u62e5\u6709\u7684\u5236\u5ea6\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u9650\u5236\uff0c\u989d\u5916\u7684600\u7f8e\u5143\u662f\u660e\u667a\u548c\u5bcc\u6709\u540c\u60c5\u5fc3\u7684\uff0c\u653f\u7b56\u5236\u5b9a\u8005\u5e94\u8be5\u5c06\u6240\u6709(\u6216\u81f3\u5c11\u5927\u90e8\u5206)\u989d\u5916\u7684\u523a\u6fc0\u63aa\u65bd\u5ef6\u957f\u52307\u6708\u4efd\u4e4b\u540e-\u81f3\u5c11\u5728\u5931\u4e1a\u7387\u8fc5\u901f\u4e0b\u964d\u5e76\u5904\u4e8e\u53ef\u63a7\u6c34\u5e73\u4e4b\u524d\u3002\n\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u90a3\u4e9b\u54c0\u53f9\u5bf9UI\u7cfb\u7edf\u88ab\u4fb5\u8680\u7684\u806a\u660e\u548c\u540c\u60c5\u5fc3\u7684\u6b21\u4f73\u53cd\u5e94\u7684\u4eba\u80fd\u5728\u5f53\u524d\u5371\u673a\u7ed3\u675f\u540e\u52a0\u5165\u6211\u4eec\u5176\u4ed6\u4eba\u7684\u884c\u5217\uff0c\u5efa\u8bbe\u7cfb\u7edf\u7684\u80fd\u529b\u548c\u6177\u6168\u3002", "note_en": "The CARES Act, the $2 trillion-plus package to provide economic relief and recovery from the coronavirus shock in early April was, for many reasons,  deeply imperfect. But the modifications the CARES Act made to the nation\u2019s unemployment insurance (UI) system are an utterly crucial lifeline for tens of millions of American workers. Besides temporarily expanding the eligibility criteria for who qualifies for unemployment benefits through the end of the year and providing an additional 13 weeks of state UI benefits, the CARES Act also provided an extra $600 per week in UI payments through the end of July.\n This $600 top-up has been fiercely criticized by some since the Act passed\u2014e.g., Senator Lindsey Graham (R-S.C.)  stated that it would be extended past July only \u201cover our dead bodies\u201d\u2014but the criticism is either ill-informed or in bad faith. The extra $600 has been  by far the most effective part our economic policy response to the coronavirus shock. It is likely improving\u2014not degrading\u2014labor market efficiency, and we should build on this and make the nation\u2019s unemployment insurance system well-resourced and far more generous even in normal times.\n The history of how a flat $600 in additional UI benefits was agreed upon by policymakers is straightforward, if depressing. In normal times,  these benefits are stingy, typically replacing between one-third and one-half of a typical worker\u2019s weekly wage. For decades, too many economists and policymakers have labored under a number of wrong preconceptions about the labor market, and one of the most damaging was that decent jobs  were plentiful and easy to get, and the only thing keeping potential workers out of these jobs for any stretch of time was  workers\u2019 own motivation, which could be sapped if benefits were too generous. It was the old and dumb idea that the U.S. social safety net\u2014despite being  by far the stingiest in the advanced world\u2014 had become a too-comfortable \u201chammock.\u201d (For what it\u2019s worth,  the evidence from the aftermath of the Great Recession reveals that extended UI benefits had little or no effect on whether a worker found a job\u2014meaning it wasn\u2019t UI benefits that were keeping workers out of work\u2014it was a lack of demand for workers.)\n The economic shock of the coronavirus was an event so obviously unrelated to the motivations of individual workers that policymakers were willing to substantially (if temporarily) increase the generosity of unemployment benefits. Our preference would have been for a 100% replacement rate up to a quite generous maximum benefit. But decades of disinvestment in the administrative capacity of state UI offices left them incapable of flexibly calculating each new applicant\u2019s benefit amount with a 100% replacement rate. (Case in point:  most offices are still using the 1970s-era programming language COBOL to run their computers). State offices  are capable of administering a flat-rate increase, however. So, policymakers in Congress came up with a smart and compassionate second-best solution of picking a flat-rate boost to benefits that would leave the average worker (and most workers overall) with 100% of their pre-crisis earnings.\n But the necessity of the one-size-fits-all approach means that workers who earned less than the average worker before the crisis will receive benefits that are somewhat higher than 100% of their previous wage. Many conservatives claim this is somehow an economic disaster. They\u2019re wrong\u2014it\u2019s actually great.\n  For the purpose of generating a rapid macroeconomic recovery from this shock, the more money getting into the pockets of  low- and moderate-wage workers, the better. Without generous relief, these workers and their families would have had to run down meager savings and go into debt just to survive during the lockdown period. Besides causing avoidable human misery, this would severely hamper spending\u2014and, by extension, the overall economic recovery\u2014when the public health all-clear is eventually sounded.\n The primary complaint waged against the extra $600 is that it will impede the otherwise efficient functioning of low-wage labor markets. Forgive our eye roll. The labor market  has been rigged against low- and moderate-wage workers for decades, and pre-crisis earnings for these workers were far too low, on both moral and efficiency grounds. Plus, the economic argument against high UI replacement rates was that we\u2019d sap workers\u2019 motivation to pound the pavement searching for jobs. But we\u2019re in the midst of legally enforced physical distancing to fight an epidemic\u2014the less pavement-pounding the better. Further, the economy may have lost  more than 30 million jobs in the last month. Even without the epidemic, it would be stupid and cruel to use cutbacks to UI benefits that make them too stingy to live on as a cudgel to demand people somehow find a job quickly in an absolute nightmare of a job market.\n Conservatives have floated stories of businesses trying to reopen now that can\u2019t find workers because potential employees \u201cmake more collecting unemployment.\u201d Well, if businesses are really serious about reopening (and many shouldn\u2019t be), there\u2019s an easy cure for this\u2014offer wages that are high enough to entice potential workers to come to work. Policymakers could aid this effort and level out incentives in a couple of ways. First, they could let laid-off workers keep their extra $600 weekly payment (or at least some increment of it) even after they find a new job. Also, they could offer a universal wage credit (phased out above the median wage, say) that boosts workers\u2019 pay so long as the higher UI benefits persist. If the problem conservatives have with this $600 really is just the economics of incentives and not simply annoyance that lower-wage workers are finally getting some money in their pockets, this is an easy way to address it.\n It is hardly a shock that many potential workers are leery about venturing into the public to work these days. In an efficient labor market\u2014where the playing field is level between workers and employers\u2014the wage offers needed to get people to overcome their wariness and go to work in the face of coronavirus fears should be  increasing. But U.S. labor markets are  not efficient or balanced even in the best of times, and in the coronavirus-affected labor market with businesses shuttering right and left, it seems far from clear that competition between employers would push up wages for workers. In a sense, the extra $600 is helping labor markets reach  a more reasonable equilibrium where workers are actually compensated appropriately if they are willing to shoulder the risk and excess burden of showing up to a job in the midst of an epidemic.\n And this is something we can afford and constitutes exactly the sort of thing public debt should be spent on. Money spent on continuing crucial unemployment insurance provisions will help avoid a prolonged period of high unemployment that will do far more serious and persistent damage to the economy. In the last six weeks,  close to 30 million workers have applied for unemployment insurance. It\u2019s worth noting as a point of comparison that those 30 million workers would need to be provided an extra  $1,400 per week  for a year to match the  fiscal size of the 2017 tax cuts aimed at corporations and the rich.\n Do we wish the U.S. social insurance system\u2014and particularly the unemployment insurance system\u2014was much better-resourced and able to respond to the current shock with something more nuanced than an across-the-board $600 increase in weekly benefits? We do. But you go into a generational economic crisis with the social insurance system you have, not the one you wish you had. Given the constraints, the extra $600 is smart and compassionate and policymakers should extend all (or at least most) of this extra boost well past July\u2014at least until unemployment is falling rapidly and at a manageable level.\n And we sure hope those bemoaning the smart and compassionate second-best response to an eroded UI system will join the rest of us in building up the system\u2019s capacity and generosity after the current crisis ends.", "posttime": "2020-05-31 10:21:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5931\u4e1a,insurance,\u5de5\u4eba", "title": "\u989d\u5916\u7684600\u7f8e\u5143\u5931\u4e1a\u4fdd\u9669\u5df2\u7ecf\u751f\u6548", "title_en": "The extra $600 in unemployment insurance has been effective", "transed": 1, "url": "https://www.epi.org/blog/the-extra-600-in-unemployment-insurance-has-been-the-best-response-yet-to-the-economic-shock-of-the-coronavirus-and-should-be-extended/", "via": "", "real_tags": ["\u5931\u4e1a", "insurance", "\u5de5\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "2a56767d751fd2cc920f485b8361dd0f.jpg", "infoid": 1004475, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u572820\u4e16\u7eaa60\u5e74\u4ee3\u672b\uff0c\u6bcf\u5468\u4e00\u3001\u5468\u4e09\u548c\u5468\u4e94\u5728\u8d1d\u5c14\u5b9e\u9a8c\u5ba4(http://techchannel.att.com/archives)\u89c2\u770bAT&T\u6863\u6848\u9986\u7684\u65b0\u7535\u5f71\uff0c\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u4eec\u2026\u2026", "note_en": "Watch new AT&T Archive films every Monday, Wednesday and Friday at http://techchannel.att.com/archives In the late 1960s, Bell Laboratories computer scientis...", "posttime": "2020-05-31 10:05:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,unix,operating,\u8d1d\u5c14\u5b9e\u9a8c\u5ba4", "title": "Unix\u64cd\u4f5c\u7cfb\u7edf(1982)[\u89c6\u9891]", "title_en": "The Unix Operating System (1982) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=tc4ROCJYbm0", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "unix", "operating", "\u8d1d\u5c14\u5b9e\u9a8c\u5ba4"]}, {"category": "", "categoryclass": "", "imagename": "c3423e1c704b06884f0ab139949b6b9f.jpg", "infoid": 1004474, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u6b63\u5728\u91cd\u65b0\u5f00\u653e100\u5bb6\u7f8e\u56fd\u96f6\u552e\u5e97\uff0c\u4e0d\u51fa\u6240\u6599\uff0c\u8fd9\u4e9b\u95e8\u5e97\u5728\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u540e\u770b\u8d77\u6765\u6709\u5f88\u5927\u4e0d\u540c\u3002\u8fd9\u662f\u6211\u4eec\u5728\u5546\u5e97\u91cc\u770b\u5230\u7684\u4e1c\u897f\uff0c\u5982\u679c\u4f60\u9700\u8981--\u6216\u8005\u60f3--\u53bb\u65c5\u884c\u7684\u8bdd\uff0c\u4f60\u5e94\u8be5\u671f\u5f85\u4e9b\u4ec0\u4e48\u3002\n\u6b63\u59824\u6708\u4efd\u7684\u4e00\u6bb5\u5185\u90e8\u6559\u5b66\u89c6\u9891\u4e2d\u6240\u8be6\u7ec6\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u82f9\u679c\u6b63\u5728\u91c7\u53d6\u4e00\u7cfb\u5217\u9884\u9632\u63aa\u65bd\uff0c\u4ee5\u5e2e\u52a9\u904f\u5236\u51a0\u72b6\u75c5\u6bd2\u5728\u5176\u5b9e\u4f53\u5e97\u7684\u4f20\u64ad\u3002\n\u82f9\u679c\u5c06\u5982\u4f55\u4ee5\u53ca\u5728\u54ea\u91cc\u91cd\u65b0\u5f00\u653e\u5176\u96f6\u552e\u4e1a\u52a1\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5f53\u5730\u7684\u6761\u4ef6\u3002\u4f8b\u5982\uff0c\u5728\u5357\u52a0\u5dde\uff0c\u6d1b\u6749\u77f6\u7684\u5927\u591a\u6570\u82f9\u679c\u5e97\u4ecd\u7136\u5173\u95ed\uff0c\u800c\u5176\u4ed6\u5546\u5e97\u5219\u901a\u8fc7\u8def\u8fb9\u6216\u5e97\u9762\u670d\u52a1\u91cd\u65b0\u5f00\u5f20\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5723\u5730\u4e9a\u54e5\u53bf\u7684\u6240\u6709\u4e94\u5bb6\u96f6\u552e\u5e97\u548c\u5723\u5df4\u5df4\u62c9\u7684\u4e00\u5bb6\u5546\u5e97\u5b9a\u4e8e\u672c\u5468\u91cd\u65b0\u5f00\u4e1a\u3002\u5176\u4e2d\u5305\u62ec\u82f9\u679c\u5361\u5c14\u65af\u5df4\u5fb7(Apple Carlsbad)\uff0c\u8be5\u516c\u53f8\u4e8e\u4e0a\u534811\u70b9\u6b63\u5f0f\u5f00\u4e1a\u30025\u670827\u65e5\u661f\u671f\u4e09\u3002\n\u867d\u7136\u5723\u5730\u4e9a\u54e5\u95e8\u5e97\u548c\u5168\u56fd\u5404\u5730\u7684\u5176\u4ed6\u96f6\u552e\u5e97\u90fd\u5168\u9762\u5f00\u653e\uff0c\u63d0\u4f9b\u5e97\u5185\u670d\u52a1\uff0c\u4f46\u82f9\u679c\u4ecd\u5728\u91c7\u53d6\u4e00\u4e9b\u8c28\u614e\u63aa\u65bd\u3002\u4f8b\u5982\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u95e8\u53e3\u8fdb\u884c\u4f53\u6e29\u6d4b\u8bd5\uff0c\u5e76\u8981\u6c42\u5728\u8fdb\u5165\u5546\u5e97\u4e4b\u524d\u8986\u76d6\u9762\u90e8\u3002\u82f9\u679c\u8fd8\u8868\u793a\uff0c\u5982\u679c\u9700\u8981\uff0c\u5b83\u5c06\u4e3a\u5ba2\u6237\u63d0\u4f9b\u9762\u7f69\u3002\n\u5f53\u60a8\u63a5\u8fd1Apple Store\u65f6\uff0c\u60a8\u5e94\u8be5\u4f1a\u7acb\u5373\u6ce8\u610f\u5230\u4e00\u4e9b\u53d8\u5316\u3002\u5728\u5f17\u5409\u5c3c\u4e9a\u5dde\u5f17\u5409\u5c3c\u4e9a\u6d77\u6ee9\u7684\u6797\u6d77\u6587\u8d2d\u7269\u4e2d\u5fc3(Lynnaven Mall)\uff0c\u82f9\u679c\u5546\u5e97\u5916\u9762\u6709\u591a\u540d\u5458\u5de5\u5f15\u5bfc\u987e\u5ba2\u6392\u961f-\u4e00\u961f\u662f\u65e0\u7535\u68af\u7684\uff0c\u53e6\u4e00\u961f\u662f\u9884\u8ba2\u7684\u3002\u6392\u961f\u65f6\uff0c\u5458\u5de5\u4f1a\u95ee\u4f60\u4e00\u7cfb\u5217\u56db\u4e2a\u95ee\u9898\uff0c\u5e76\u7ed9\u4f60\u91cf\u4f53\u6e29\u3002\n\u5728\u8fc7\u53bb\u768414\u5929\u91cc\uff0c\u60a8\u6709\u6ca1\u6709\u63a5\u89e6\u8fc7\u65b0\u51a0\u80ba\u708e\u7684\u7591\u4f3c\u6216\u786e\u8bca\u75c5\u4f8b\uff1f\n\u56de\u7b54\u4efb\u4f55\u95ee\u9898\u90fd\u4f1a\u963b\u6b62\u4f60\u8fdb\u5165\u5546\u5e97\uff0c\u5373\u4f7f\u4f60\u6234\u7740\u53e3\u7f69\u3002\u4e00\u5200\u5207\u5730\u56de\u7b54\u201c\u5426\u201d\u53ef\u4ee5\u8ba9\u4f60\u91cf\u4f53\u6e29\u3002\u82f9\u679c\u5411\u5ba2\u6237\u4fdd\u8bc1\uff0c\u6570\u636e\u4e0d\u4f1a\u88ab\u8bb0\u5f55\u4e0b\u6765\u3002\n\u82f9\u679c\u96f6\u552e\u4e3b\u7ba1\u8fea\u5c14\u5fb7\u4e3d\u00b7\u5965\u5e03\u83b1\u6069(Deirdre O&39\uff1bBrien)\u57285\u670817\u65e5\u5199\u9053\uff0c\u987e\u5ba2\u5c06\u53d1\u73b0\u81ea\u5df1\u62e5\u6709\u5145\u8db3\u7684\u7a7a\u95f4\uff0c\u5458\u5de5\u4eec\u5c06\u4e13\u6ce8\u4e8e\u5929\u624d\u9152\u5427\u548c\u6574\u4e2a\u5546\u5e97\u7684\u4e00\u5bf9\u4e00\u4e2a\u6027\u5316\u670d\u52a1\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u82f9\u679c\u96f6\u552e\u4e1a\u6b63\u5728\u5f3a\u5236\u5b9e\u65bd\u793e\u4ea4\u8ddd\u79bb\u63aa\u65bd\uff0c\u89c4\u5b9a\u987e\u5ba2\u4e4b\u95f4\u5fc5\u987b\u67096\u82f1\u5c3a\u7684\u7a7a\u95f4\uff0c\u51cf\u5c11\u5c55\u793a\u7684\u4ea7\u54c1\u6570\u91cf\uff0c\u5e76\u91cd\u65b0\u5b89\u6392\u95e8\u5e97\u529f\u80fd\uff0c\u4ee5\u4fbf\u5728\u987e\u5ba2\u4e4b\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\u3002\n\u5728\u88ab\u5141\u8bb8\u8fdb\u5165\u540e\uff0c\u4e8b\u60c5\u4e0e\u6b63\u5e38\u7684\u82f9\u679c\u5546\u5e97\u4f53\u9a8c\u975e\u5e38\u76f8\u4f3c\u3002\u5c06\u4e00\u90e8iPhone\u4eceiPhone XR\u5347\u7ea7\u5230iPhone11\u82b1\u4e86\u5927\u7ea6\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5176\u4e2d\u6d89\u53ca\u5230\u5927\u91cf\u7684\u6d88\u6bd2\u5de5\u4f5c\u3002\u9664\u975e\u4f60\u505c\u4e0b\u6765\u73af\u987e\u56db\u5468\uff0c\u770b\u770b\u9762\u5177\u548c\u7a7a\u8361\u8361\u7684\u5546\u5e97\uff0c\u5426\u5219\u4e8b\u60c5\u5c31\u4f1a\u7ee7\u7eed\u8fdb\u884c\uff0c\u5c31\u597d\u50cf\u4eca\u5929\u53d1\u751f\u7684\u4e8b\u60c5\u4e0e\u5173\u95ed\u4e4b\u524d\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u5982\u679c\u8bbe\u5907\u662f\u4ece\u5ba2\u6237\u9012\u7ed9\u5458\u5de5\u7684\uff0c\u5458\u5de5\u5728\u5f00\u59cb\u7ef4\u4fee\u6216\u64cd\u4f5c\u8bbe\u5907\u4e4b\u524d\uff0c\u4f1a\u5728\u6536\u5230\u8bbe\u5907\u65f6\u5c06\u5176\u64e6\u9664\u3002\u6709\u591a\u4e2a\u7ad9\uff0c\u6709\u6d88\u6bd2\u6e7f\u5dfe\u548c\u6d17\u624b\u6db2\u3002\u987e\u5ba2\u88ab\u9694\u5f00\uff0c\u53ea\u6709\u4e00\u540d\u5458\u5de5\u5e2e\u52a9\u4ed6\u4eec\uff0c\u4efb\u4f55\u4eba\u90fd\u4e0d\u5141\u8bb8\u5728\u65e0\u4eba\u770b\u7ba1\u7684\u60c5\u51b5\u4e0b\u5728\u5546\u5e97\u91cc\u6f2b\u6b65\u548c\u6d4f\u89c8\u3002\n\u987e\u5ba2\u5360\u6709\u7387\u548c\u5546\u5e97\u8425\u4e1a\u65f6\u95f4\u4e5f\u6709\u6240\u51cf\u5c11\uff0c\u82f9\u679c\u9f13\u52b1\u987e\u5ba2\u5728\u7f51\u4e0a\u8d2d\u7269\uff0c\u6216\u8005\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u9009\u62e9\u8def\u8fb9\u63d0\u8d27\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u914d\u4ef6\u8d2d\u4e70\uff0c\u82f9\u679c\u5458\u5de5\u4f1a\u628a\u7269\u54c1\u62ff\u51fa\u6765\uff0c\u5f53\u573a\u5904\u7406\u8d2d\u4e70\u3002\n\u987e\u5ba2\u4eec\u6765\u6765\u53bb\u53bb\uff0c\u5174\u594b\u5730\u51fa\u73b0\u5728\u516c\u5171\u573a\u5408\uff0c\u5583\u5583\u5730\u8c08\u8bba\u7740\u4ed6\u4eec\u60f3\u8981\u7684\u4e00\u4e9b\u95ee\u9898\u6216\u4e8b\u60c5\u3002\u5458\u5de5\u4eec\u5728\u9762\u5177\u4e0b\u9732\u51fa\u5fae\u7b11\uff0c\u5e76\u5411\u6bcf\u4e2a\u4eba\u4fdd\u8bc1\uff0c\u4ed6\u4eec\u4f1a\u5728\u90a3\u91cc\u63d0\u4f9b\u5e2e\u52a9\u3002\u5728\u4e0e\u5065\u5eb7\u76f8\u5173\u7684\u6b65\u9aa4\u4e4b\u5916\uff0c\u7a0b\u5e8f\u4e0a\u552f\u4e00\u660e\u663e\u7684\u53d8\u5316\u662f\u7a81\u7136\u7ed3\u675f\u3002\n\u82f9\u679c\u60f3\u8981\u6e90\u6e90\u4e0d\u65ad\u7684\u5ba2\u6237\u6d41\uff0c\u4e00\u6b21\u53ea\u80fd\u5bb9\u7eb3\u8fd9\u4e48\u591a\u4eba\u3002\u6839\u636e\u4e00\u540d\u5458\u5de5\u7684\u8bf4\u6cd5\uff0c\u4e00\u65e6\u7528\u6237\u767b\u5f55\u5230\u65b0\u624b\u673a\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5411\u4ed6\u4eec\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u548c\u8bbe\u7f6e\u8bbe\u5907\uff0c\u4f46\u73b0\u5728\u4e0d\u662f\u8fd9\u6837\u3002\u5ba2\u6237\u88ab\u544a\u77e5\uff0c\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8fd4\u56de\u5bb6\u4e2d\u5e76\u4e0eApple Support\u8054\u7cfb\u3002\n\u9664\u4e86\u52a0\u5dde\u548c\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u90e8\u5206\u95e8\u5e97\u5916\uff0c\u82f9\u679c\u8fd8\u5c06\u5728\u4e9a\u5229\u6851\u90a3\u5dde\u3001\u4f5b\u7f57\u91cc\u8fbe\u5dde\u3001\u4f50\u6cbb\u4e9a\u5dde\u3001\u5370\u7b2c\u5b89\u7eb3\u5dde\u3001\u582a\u8428\u65af\u5dde\u3001\u80af\u5854\u57fa\u5dde\u3001\u5bc6\u6b47\u6839\u5dde\u3001\u5bc6\u82cf\u91cc\u5dde\u3001\u5185\u534e\u8fbe\u5dde\u3001\u65b0\u58a8\u897f\u54e5\u5dde\u3001\u7ebd\u7ea6\u3001\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u3001\u4fc4\u4ea5\u4fc4\u5dde\u3001\u4fc4\u52d2\u5188\u5dde\u3001\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u3001\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u3001\u7530\u7eb3\u897f\u5dde\u3001\u5fb7\u514b\u8428\u65af\u5dde\u3001\u72b9\u4ed6\u5dde\u548c\u5a01\u65af\u5eb7\u661f\u5dde\u91cd\u65b0\u5f00\u653e\u95e8\u5e97\u3002\nAppleInsider\u4e0e\u4f1a\u5458\u6709\u5408\u4f5c\u5173\u7cfb\uff0c\u901a\u8fc7\u4f1a\u5458\u94fe\u63a5\u8d2d\u4e70\u7684\u4ea7\u54c1\u53ef\u80fd\u4f1a\u8d5a\u53d6\u4f63\u91d1\u3002\u8fd9\u4e9b\u5408\u4f5c\u5173\u7cfb\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u7684\u7f16\u8f91\u5185\u5bb9\u3002", "note_en": "Apple is in the process of reopening 100 U.S. retail stores and, as expected, those outlets look a lot different post-coronavirus. Here&#39;s what we&#39;ve seen in-store, and what you should expect if you need \u2014 or want \u2014 to make a trip.\n  As detailed in an  internal instructional video in April, Apple is taking a number of precautionary measures to help curb the spread of  coronavirus at its brick-and-mortar locations.\n How and where Apple is reopening its retail footprint is highly dependent on local conditions. In Southern California, for example, most Apple Stores in Los Angeles remain shuttered while others are reopening with curbside or storefront service.\n  By comparison, all five retail locations in San Diego County and the one store in Santa Barbara are slated to reopen this week. That includes Apple Carlsbad, which officially opened its doors at 11 a.m. on Wednesday, May 27.\n While the San Diego locations, and other retail stores across the country, are fully open with in-store service available, Apple is still taking a number of cautionary measures. For example, the company is performing temperature-checks at the door and requiring facial coverings before entering the store. Apple has also indicated that it will provide facial coverings to customers if need be.\n  As you approach the Apple Store, you should notice some changes right away. In the Lynnhaven Mall in Virginia Beach, Virginia, the Apple Store had multiple employees outside to guide customers into lines \u2014 one line for walk-ups, and another for reservations. While waiting in line, an employee asks you a series of four questions and takes your temperature.\n   Have you been in contact with any suspected or confirmed cases of COVID-19 in the last 14 days?\n Answering &#34;yes&#34; to any question will prevent you from entering the store, even if wearing a mask. Answering &#34;no&#34; across the board will allow you to have your temperature checked. Apple assures customers that data isn&#39;t being recorded.\n  Deirdre O&#39;Brien, Apple&#39;s retail chief, wrote on May 17 that customers will find themselves with &#34;plenty of space,&#34; and that staffers will focus on &#34;one-to-one, personalized service at the Genius Bar and throughout the store.&#34; To accomplish this, Apple retail is enforcing social distancing measures by mandating six feet of space between customers, reducing the number of products on display, and rearranging store features to allow for more space between them.\n  After being allowed inside, things are very similar to the normal Apple Store experience. Upgrading an iPhone from an iPhone XR to the  iPhone 11 took about an hour, with plenty of disinfecting involved. Unless you paused to look around to see the masks and empty store, things proceeded as if nothing different was happening today versus how it would have been prior to the shutdowns.\n If a device is handed from customer to employee, the employee will wipe it down on receipt, before beginning service or operation of the device. There are multiple stations with disinfecting wipes and hand sanitizer. Customers are kept apart, have a single employee helping them, and nobody was allowed to meander through the store and browse unattended.\n  Customer occupancy and store hours have also been reduced, with Apple encouraging customers to purchase online or opt for curbside pickup when possible. For simple purchases of accessories, Apple employees will bring the item out and process the purchase on the spot.\n  Customers come and go, excited to be in public, muttering about some issue or thing they wanted. The employees put on smiles beneath those masks and assured everyone that they were there to help. The only noticeable change in procedure outside of health related steps, was the abrupt end.\n Apple wants a constant flow of customers, and can only have so many inside at one time. According to an employee, once users are logged into the new phone, they would normally show them how to use the device and set it up, but not today. Customers are being told to return home and contact Apple support if any issues occurred during setup.\n  Along with select locations in California and Virginia, Apple is also  reopening stores in Arizona, Florida, Georgia, Indiana, Kansa, Kentucky, Michigan, Missouri, Nevada, New Mexico, New York, North Carolina, Ohio, Oregon, Pennsylvania, South Carolina, Tennessee, Texas, Utah, and Wisconsin.\n    AppleInsider has affiliate partnerships and may earn commission on products purchased through affiliate links. These partnerships do not influence our editorial content.", "posttime": "2020-05-31 09:50:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u82f9\u679c,app,apple,\u987e\u5ba2,mandatory", "title": "\u82f9\u679c\u5728\u7f8e\u56fd\u65b0\u5f00100\u5bb6\u4e13\u5356\u5e97--\u5bf9\u987e\u5ba2\u5f3a\u5236\u4f53\u6e29\u68c0\u6d4b", "title_en": "Apple Opens 100 More US Stores -- With Mandatory Temperature Checks For Customers", "transed": 1, "url": "https://appleinsider.com/articles/20/05/28/what-to-expect-inside-reopened-apple-stores-in-the-coronavirus-era", "via": "", "real_tags": ["\u82f9\u679c", "app", "apple", "\u987e\u5ba2", "mandatory"]}, {"category": "", "categoryclass": "", "imagename": "444c9936b8b4808696f95ff6709d7bdb.jpg", "infoid": 1004473, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u590d\u53e4\u6e38\u620f\u673a\u5236\u4f5c\u65b0\u6e38\u620f\u662f\u4e1a\u4f59\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u76f8\u5f53\u5bb9\u6613\u5730\u505a\u7684\u4e8b\u60c5\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4eca\u5929\u7684\u6280\u672f\u3002\u53bb\u5e74\uff0c\u6211\u4e3a\u6211\u6700\u559c\u6b22\u7684\u6e38\u620f\u673a\u53d1\u5e03\u4e86\u4e00\u6b3e\u65b0\u6e38\u620f\uff1a\u8d85\u7ea7\u4efb\u5929\u5802(SNES)\u3002\u8be5\u9879\u76ee\u751a\u81f3\u8fbe\u5230\u4e86\u5b9e\u9645\u7684\u7269\u7406\u53d1\u5e03\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a\u50cf90\u5e74\u4ee3\u90a3\u6837\u7684\u58a8\u76d2\u548c\u7eb8\u76d2\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5411\u4f60\u5c55\u793a\u8fd9\u4e2a\u4e0d\u53ef\u601d\u8bae\u7684\u65c5\u7a0b\u4e2d\u7684\u8bb8\u591a\u6b65\u9aa4\uff1a\u8bbe\u8ba1\u6e38\u620f\uff0c\u5728\u7f16\u7a0b\u65f6\u514b\u670d\u4e0eSNES\u76f8\u5173\u7684\u6280\u672f\u95ee\u9898\uff0c\u5236\u9020\u65b0\u7684SNES\u58a8\u76d2\uff0c\u4ee5\u53ca\u5236\u4f5c\u624b\u518c\u548c\u76d2\u5b50\u3002\nYo-Yo Shuriken\u662f\u4e00\u6b3e\u5feb\u8282\u594f\u7684\u8857\u673a\u6e38\u620f\uff0c\u9002\u7528\u4e8e\u8d85\u7ea7\u4efb\u5929\u5802(SNES)\u4e0a\u76841\u52302\u540d\u73a9\u5bb6\u3002\n\u6838\u5fc3\u6e38\u620f\u56f4\u7ed5\u5c04\u51fb\u4e00\u4e2a\u8212\u91cc\u80af\u5c55\u5f00\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u795e\u5947\u5730\u56de\u5fc6\u8d77\u5b83\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4ece\u524d\u9762\u6216\u4ece\u540e\u9762\u653b\u51fb\u654c\u4eba\uff01\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u80fd\u91cf\u96c6\u4e2d\u5230\u8212\u745e\u80af\u8eab\u4e0a\uff0c\u53d1\u51fa\u4e00\u6b21\u5f3a\u5927\u7684\u51b2\u950b\u653b\u51fb\uff0c\u4e00\u6b21\u53ef\u4ee5\u780d\u7a7f\u51e0\u4e2a\u654c\u4eba\u3002\n\u8fd9\u6b3e\u6e38\u620f\u6709\u4e00\u4e2a\u6f02\u4eae\u7684\u7eb8\u677f\u76d2\u548c\u4e00\u672cCatSkull Games\uff1ahttps://catskullgames.com/yo-yo-shuriken\u63d0\u4f9b\u7684\u624b\u518c\u3002\n\u5982\u679c\u4f60\u66f4\u559c\u6b22\u5728\u6a21\u62df\u5668\u4e0a\u73a9\u5b83\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u83b7\u5f97\u6e38\u620f\u7684\u5149\u76d8\uff1ahttps://drludos.itch.io/yo-yo-shuriken\u3002\n\u73b0\u5728\u4f60\u5bf9\u6e38\u620f\u672c\u8eab\u66f4\u719f\u6089\u4e86\uff0c\u8ba9\u6211\u4eec\u6765\u63a2\u7d22\u4e00\u4e0b\u5b83\u662f\u5982\u4f55\u8bbe\u8ba1\u7684\u3002\n\u5236\u4f5c\u6e9c\u6e9c\u7403\u5bff\u53f8\u662f\u4e00\u4e2a\u76f8\u5f53\u6709\u673a\u7684\u8fc7\u7a0b\u3002\u5f53\u6211\u60f3\u51fa\u6e38\u620f\u70b9\u5b50\u65f6\uff0c\u6211\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5e76\u8bd5\u56fe\u5c06\u5b83\u4eec\u63d0\u70bc\u51fa\u6765\uff0c\u76f4\u5230\u6211\u624b\u5934\u6709\u4e86\u4e00\u6b3e\u6709\u8da3\u7684\u6e38\u620f\u3002\u8ba9\u6211\u4eec\u4ece\u6700\u521d\u7684\u60f3\u6cd5\u5f00\u59cb\u5427\u3002\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u60f3\u7528\u4e00\u9897\u5b50\u5f39\u505a\u4e00\u4e2a\u5c04\u51fb\u6e38\u620f\u3002\u6240\u4ee5\u73a9\u5bb6\u6bcf\u6b21\u5c04\u51fb\u90fd\u5fc5\u987b\u628a\u5b83\u62ff\u56de\u6765\u3002\u9664\u4e86\u201c\u4e00\u9897\u5b50\u5f39\u201d\u7684\u60f3\u6cd5\u5916\uff0c\u6211\u8fd8\u60f3\u505a\u4e00\u6b3e\u53ef\u4ee5\u548c\u670b\u53cb\u4e00\u8d77\u5728\u5408\u4f5c\u793e\u91cc\u73a9\u7684\u6e38\u620f\u3002\u8003\u8651\u5230\u8fd9\u4e24\u4e2a\u60f3\u6cd5\uff0c\u6211\u4e00\u6b65\u4e00\u6b65\u5730\u521b\u5efa\u4e86\u8fd9\u6b3e\u6e38\u620f\u3002\u6211\u53d6\u5f97\u7684\u6bcf\u4e00\u9879\u91cd\u5927\u8fdb\u6b65\u90fd\u88ab\u8d34\u4e0a\u4e86\u65b0\u7248\u672c\u7684\u6807\u7b7e\uff0c\u5e76\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u6d4b\u8bd5\u3002\u5982\u679c\u5f53\u524d\u7248\u672c\u4e0d\u9519\uff0c\u6211\u4f1a\u7ee7\u7eed\u6dfb\u52a0\u65b0\u529f\u80fd\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4e00\u76f4\u81f4\u529b\u4e8e\u76ee\u524d\u7684\u529f\u80fd\uff0c\u76f4\u5230\u6e38\u620f\u518d\u6b21\u53d8\u5f97\u6709\u8da3\uff0c\u7136\u540e\u624d\u6dfb\u52a0\u4efb\u4f55\u65b0\u7684\u4e1c\u897f\u3002\u4ee5\u4e0b\u662f\u4e3b\u8981\u6e38\u620f\u539f\u578b\u7684\u6982\u8981\uff0c\u5e76\u9644\u6709\u5c4f\u5e55\u622a\u56fe\u3002\u5982\u679c\u4f60\u60f3\u64ad\u653e\u8fd9\u4e9b\u539f\u578b\u7684\u5b9e\u9645\u5149\u76d8\uff0c\u5b83\u4eec\u662f\u6211\u7684Patreon\u652f\u6301\u8005\u53ef\u4ee5\u83b7\u5f97\u7684\u4f17\u591a\u798f\u5229\u4e4b\u4e00\u3002\n\u5728\u4f60\u4e0d\u77e5\u9053\u7684\u5e73\u53f0\u4e0a\u5236\u4f5c\u6e38\u620f\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u4e9b\u4e1c\u897f\uff01\u6240\u4ee5\u6211\u753b\u4e86\u4e00\u4e2a\u673a\u5668\u4eba\u5fcd\u8005\u7cbe\u7075\uff0c\u5e76\u8bd5\u56fe\u8ba9SNES\u628a\u5b83\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u5f53\u5b83\u5de5\u4f5c\u65f6\uff0c\u6211\u6dfb\u52a0\u4e86\u4ee3\u7801\u6765\u4f7f\u7cbe\u7075\u4e0eD-Pad\u4e00\u8d77\u79fb\u52a8\u3002\u7136\u540e\uff0c\u5f53\u7cbe\u7075\u79fb\u52a8\u65f6\uff0c\u6211\u5236\u4f5c\u4e86\u4e00\u4e2a\u884c\u8d70\u7684\u52a8\u753b\u3002\u8fd9\u4e9b\u7b2c\u4e00\u6b65\u770b\u8d77\u6765\u53ef\u80fd\u5f88\u7b80\u5355\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u4e3aSNES\u5236\u4f5c\u6e38\u620f\uff01\u6240\u4ee5\u8fd9\u5b9e\u9645\u4e0a\u82b1\u4e86\u76f8\u5f53\u957f\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u5728\u5236\u4f5c\u6e38\u620f\u7684\u540c\u65f6\u6b63\u5728\u5b66\u4e60\u673a\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u56e0\u4e3a\u76ee\u524d\u7684\u9879\u76ee\u53ea\u5c55\u793a\u4e86\u4e00\u4e2a\u673a\u5668\u4eba\u5fcd\u8005\uff0c\u6240\u4ee5\u6211\u7ed9\u5b83\u53d6\u540d\u4e3a\u201c\u7f51\u7edc\u5fcd\u8005\u201d\u3002\n\u771f\u6b63\u7684\u73a9\u5bb6\u7cbe\u7075\uff0c\u4e00\u4e2a\u5fcd\u8005\uff0c\u51fa\u73b0\u5728\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e2d\u3002\u6240\u4ee5\u673a\u5668\u4eba\u7cbe\u7075\u81ea\u7136\u800c\u7136\u5730\u6210\u4e3a\u4e86\u4ed6\u4eec\u7684\u654c\u4eba\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u5fcd\u8005\u548c\u673a\u5668\u4eba\u4e92\u76f8\u618e\u6068\uff01\u4f5c\u4e3a\u4e00\u4e2a\u9a84\u50b2\u7684\u5fcd\u8005\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6295\u63b7\u4e00\u4e2a\u8212\u91cc\u80af\u3002\u8212\u91cc\u80af\u53ef\u80fd\u4f1a\u5361\u5728\u5c4f\u5e55\u8fb9\u7f18\uff0c\u73a9\u5bb6\u5fc5\u987b\u628a\u5b83\u6361\u8d77\u6765\u624d\u80fd\u518d\u6b21\u62cd\u6444\u3002\u673a\u5668\u4eba\u654c\u4eba\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u6f2b\u65e0\u76ee\u7684\u79fb\u52a8\uff0c\u4f46\u8fd8\u6ca1\u6709\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\u3002\n\u7ecf\u8fc7\u51e0\u6b21\u6d4b\u8bd5\uff0c\u6211\u8ba4\u4e3a\u5f53\u73a9\u5bb6\u7b2c\u4e8c\u6b21\u6309\u4e0b\u6309\u94ae\u65f6\uff0c\u8212\u91cc\u80af\u53ef\u4ee5\u81ea\u52a8\u56de\u5230\u5fcd\u8005\u8eab\u4e0a\u3002\u6211\u5728\u6d4b\u8bd5\u8fd9\u4e2a\u673a\u68b0\u5e08\u7684\u65f6\u5019\u73a9\u5f97\u5f88\u5f00\u5fc3\uff0c\u6240\u4ee5\u5b83\u6210\u4e86\u6574\u4e2a\u6e38\u620f\u7684\u6838\u5fc3\uff01\u6211\u8fd8\u66f4\u6539\u4e86\u9879\u76ee\u540d\u79f0\u4ee5\u53cd\u6620\u8fd9\u4e00\u6f14\u53d8\uff1a\u5411\u7f51\u7edc\u5fcd\u8005\u8bf4\u518d\u89c1\uff0c\u6b22\u8fce\u6765\u5230Yo-Yo Shuriken(#34\uff1bYo-Yo Shuriken&#34\uff1b\uff01)\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6e38\u620f\u4e2d\uff0c\u8212\u91cc\u80af\u6765\u56de\u7a7f\u68ad\uff0c\u5c31\u50cf\u6e9c\u6e9c\u7403\u4e00\u6837\u3002\n\u6211\u8fd8\u6dfb\u52a0\u4e86\u78b0\u649e\u68c0\u6d4b\u529f\u80fd\u3002\u73b0\u5728\uff0c\u5f53\u8212\u91cc\u80af\u653b\u51fb\u673a\u5668\u4eba\u65f6\uff0c\u5b83\u4eec\u5c31\u6d88\u5931\u4e86\u3002\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u673a\u5668\u4eba\u51fb\u4e2d\u4e86\u73a9\u5bb6\uff0c\u4ed6\u5c31\u662f\u90a3\u4e2a\u6d88\u5931\u7684\u4eba\u3002\u867d\u7136\u4e00\u5207\u4ecd\u5904\u4e8e\u975e\u5e38\u57fa\u672c\u7684\u72b6\u6001\uff0c\u4f46\u5728\u8fd9\u7b2c\u4e09\u6b3e\u6e38\u620f\u539f\u578b\u4e2d\uff0c\u6e38\u620f\u7684\u6838\u5fc3\u73a9\u6cd5\u51e0\u4e4e\u5b8c\u6210\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u5bf9\u5f15\u64ce\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\uff0c\u770b\u770b\u6211\u80fd\u5728\u6e38\u620f\u843d\u540e\u4e4b\u524d\u628a\u5b83\u63a8\u5230\u4ec0\u4e48\u7a0b\u5ea6\u3002\u6211\u8bbe\u6cd5\u8ba9\u591a\u8fbe80\u4e2a\u654c\u4eba\u5728\u5c4f\u5e55\u4e0a\u884c\u8d70\u548c\u4e92\u52a8\u3002\u8bf7\u8bb0\u4f4f\uff0cSNES\u603b\u5171\u53ef\u4ee5\u663e\u793a128\u4e2a\u7cbe\u7075\uff0c\u56e0\u6b64\u8ba9\u5176\u4e2d80\u4e2a\u7cbe\u7075\u6bcf\u79d2\u66f4\u65b060\u6b21\u78b0\u649e\u548c\u52a8\u753b\u662f\u4e00\u79cd\u6210\u5c31\u3002\n\u5728\u8fd9\u4e2a\u7b2c\u56db\u7248\u4e2d\uff0c\u654c\u4eba\u4e0d\u518d\u5c40\u9650\u4e8e\u76f4\u7ebf\u8fd0\u52a8\u3002\u5b83\u4eec\u73b0\u5728\u53ef\u4ee5\u671d\u51e0\u4e2a\u65b9\u5411\u79fb\u52a8\u3002\u5b83\u4eec\u8fd8\u4f1a\u5f39\u79bb\u5c4f\u5e55\u8fb9\u754c\uff0c\u4ee5\u907f\u514d\u79bb\u5f00\u6e38\u620f\u533a\u3002\u7ed3\u679c\u6bd4\u8d5b\u53d8\u5f97\u66f4\u6709\u8da3\u4e86\u3002\n\u6211\u6dfb\u52a0\u4e86\u4e0d\u540c\u7684\u80cc\u666f\u989c\u8272\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65e0\u4f11\u6b62\u5730\u6ecb\u751f\u654c\u4eba\u7684\u7cfb\u7edf\u3002\u5728\u4e4b\u524d\u7684\u7248\u672c\u4e2d\uff0c\u4e00\u65e680\u4e2a\u673a\u5668\u4eba\u88ab\u6467\u6bc1\uff0c\u6e38\u620f\u5c31\u662f\u7a7a\u7684\u3002\u8fd9\u91cc\u4ea7\u751f\u4e86\u65e0\u7a77\u65e0\u5c3d\u7684\u673a\u5668\u4eba\u5927\u519b\uff01\u654c\u4eba\u4e5f\u53ef\u4ee5\u8ddf\u7740\u73a9\u5bb6\uff0c\u8feb\u4f7f\u4ed6\u7ee7\u7eed\u79fb\u52a8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u8fd9\u4e2a\u7b2c\u4e94\u7248\u4e2d\uff0c\u5982\u679c\u73a9\u5bb6\u4fdd\u6301\u9759\u6b62\uff0c\u6e38\u620f\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u65e0\u804a\u3002\n\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u9762\u4e34\u4e86\u6211\u7684\u7b2c\u4e00\u4e2a\u91cd\u5927\u6280\u672f\u96be\u9898\uff1a\u6bcf\u5f53\u673a\u5668\u4eba\u6b7b\u4ea1\u65f6\uff0c\u90fd\u4f1a\u663e\u793a\u5de8\u5927\u7684\u7206\u70b8\u7cbe\u7075\u3002\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u76f8\u5f53\u5c0f\u7684\u73a9\u5bb6\u548c\u654c\u4eba\u7cbe\u7075\uff1a16x16\u50cf\u7d20\u3002\u8fd9\u6837\uff0c\u6211\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u5927\u91cf\u7684\u6e38\u620f\uff0c\u540c\u65f6\u4fdd\u7559\u8db3\u591f\u7684\u7a7a\u767d\u7a7a\u95f4\u8ba9\u73a9\u5bb6\u56db\u5904\u8d70\u52a8\uff0c\u907f\u514d\u51fb\u4e2d\u654c\u4eba(SNES\u5c4f\u5e55\u5206\u8fa8\u7387\u4e3a256x224\u50cf\u7d20)\u3002\u7136\u800c\uff0c\u6211\u51b3\u5b9a\u7528\u66f4\u5927\u7684\u5c3a\u5bf8\u6765\u753b\u6211\u7684\u7206\u70b8\u56fe\uff1a32x32\u50cf\u7d20\u3002\u8d85\u7ea7\u4efb\u5929\u5802\u80fd\u591f\u540c\u65f6\u663e\u793a\u4e24\u4e2a\u4e0d\u540c\u5927\u5c0f\u7684\u7cbe\u7075\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4ece\u8f83\u77ed\u7684\u5c3a\u5bf8\u5217\u8868(8x8\u300116x16\u300132x32\u548c64x64)\u4e2d\u9009\u62e9\u5c0f\u5c3a\u5bf8\u548c\u5927\u5c3a\u5bf8\uff0c\u63a7\u5236\u53f0\u5c06\u5728\u8bbf\u95ee\u89c6\u9891RAM\u4ee5\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u5b50\u753b\u9762\u6570\u636e\u65f6\u4f7f\u7528\u6b64\u4fe1\u606f\u3002\u8fd9\u662f\u8ba9\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u751f\u6d3b\u66f4\u8f7b\u677e\u7684\u4f17\u591a\u56fe\u5f62\u529f\u80fd\u4e4b\u4e00\u3002\u4f46\u4f5c\u4e3a\u4efb\u4f55\u6280\u672f\u529f\u80fd\uff0c\u5f53\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u5b83\u65f6\uff0c\u5b83\u4f1a\u53d8\u5f97\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff01\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0c\u5728\u76ee\u524d\u7684\u539f\u578b\u4e2d\uff0c\u6211\u53ea\u80fd\u663e\u793a\u4e00\u5c0f\u90e8\u5206\u7206\u70b8\u7cbe\u7075\uff0c\u65e0\u8bba\u6211\u505a\u4ec0\u4e48\u3002\u95ee\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff1a\u6211\u6ca1\u6709\u628a\u7cbe\u7075\u6570\u636e\u4e0a\u4f20\u5230SNES\u663e\u5b58\u4e2d\u9700\u8981\u7684\u5730\u65b9\u3002\u8fd9\u6837\u673a\u5668\u5c31\u4e0d\u80fd\u628a\u5b83\u4eec\u8bfb\u56de\u6765\u4e86\u3002\u5728\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u7814\u7a76\u81ea\u5236\u8f6f\u4ef6\u793e\u533a\u591a\u5e74\u6765\u5236\u4f5c\u7684\u7cbe\u5f69\u7eaa\u5f55\u7247\u540e\uff0c\u6211\u786e\u5b9e\u627e\u5230\u4e86\u89e3\u51b3\u65b9\u6848\u3002\u6211\u975e\u5e38\u611f\u8c22\u4ed6\u4eec\u4e3a\u521b\u9020\u548c\u5206\u4eab\u6240\u6709\u8fd9\u4e9b\u5b9d\u8d35\u7684\u77e5\u8bc6\u6240\u505a\u7684\u8f9b\u52e4\u5de5\u4f5c\uff1a\u6ca1\u6709\u4ed6\u4eec\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u4e1a\u4f59\u7231\u597d\u8005\u5c31\u4e0d\u80fd\u5236\u4f5cSNES\u6e38\u620f\uff01\n\u65b0\u7684\u654c\u4eba\u4e5f\u52a0\u5165\u4e86\u8fd9\u573a\u6218\u6597\uff1a\u6a59\u8272\u7684\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u7206\u70b8\u524d\u88ab\u51fb\u4e2d\u51e0\u6b21\uff0c\u84dd\u8272\u7684\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8ffd\u9010\u73a9\u5bb6\u3002\u6211\u8fd8\u52a0\u4e86\u786c\u5e01\uff0c\u4f60\u5fc5\u987b\u6536\u96c6\u8fd9\u4e9b\u786c\u5e01\u624d\u80fd\u5f97\u5206\u3002\u8fd9\u4e2a\u673a\u7532\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6e38\u620f\u7684\u53ef\u73a9\u6027\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f97\u5206\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u6536\u96c6\u786c\u5e01\u3002\u6740\u6b7b\u673a\u5668\u4eba\u672c\u8eab\u4e0d\u4f1a\u7ed9\u4f60\u5e26\u6765\u4efb\u4f55\u5956\u52b1\uff0c\u5b83\u53ea\u662f\u9632\u6b62\u4f60\u7684\u5316\u8eab\u6b7b\u4ea1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u673a\u5668\u4eba\u6b7b\u540e\u4f1a\u6389\u786c\u5e01\u3002\u4f46\u662f\u786c\u5e01\u5728\u51e0\u79d2\u949f\u540e\u5c31\u6d88\u5931\u4e86\u3002\u800c\u4e14\u5c4f\u5e55\u4e0a\u603b\u662f\u6709\u5927\u91cf\u7684\u673a\u5668\u4eba\uff0c\u5f53\u4f60\u88ab\u89e6\u6478\u65f6\uff0c\u5b83\u4eec\u4f1a\u7acb\u5373\u6740\u6b7b\u4f60\u3002\u4e3a\u4e86\u83b7\u5f97\u5206\u6570\uff0c\u73a9\u5bb6\u5fc5\u987b\u5192\u5f88\u5927\u7684\u98ce\u9669\uff0c\u5728\u673a\u5668\u4eba\u4e4b\u95f4\u79fb\u52a8\uff0c\u5426\u5219\u4ed6\u4e0d\u4f1a\u5f97\u5230\u9ad8\u5206\u3002\u4f46\u6709\u65f6\uff0c\u6700\u597d\u8ba9\u4e00\u4e9b\u786c\u5e01\u6d88\u5931\uff0c\u4ee5\u907f\u514d\u5931\u53bb\u4e00\u6761\u751f\u547d\u3002\u8fd9\u5c31\u662f\u6e38\u620f\u8bbe\u8ba1\u5e08\u6240\u8bf4\u7684\u98ce\u9669/\u56de\u62a5\u9009\u62e9\uff0c\u8fd9\u662f\u8ba9\u6e38\u620f\u53d8\u5f97\u6709\u8da3\u7684\u597d\u65b9\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c\u8fd9\u4e2a\u673a\u68b0\u80fd\u8ba9\u60a0\u60a0\u8212\u745e\u80af\u63d0\u4f9b\u4e00\u4e2a\u5e73\u7a33\u7684\u96be\u5ea6\u8fdb\u5c55\u7ed9\u73a9\u5bb6\u3002\u901a\u5e38\uff0c\u83dc\u9e1f\u73a9\u5bb6\u4f1a\u503e\u5411\u4e8e\u4fdd\u6301\u9759\u6b62\uff0c\u53ea\u4e13\u6ce8\u4e8e\u6467\u6bc1\u673a\u5668\u4eba\u3002\u4ed6\u4e0d\u4f1a\u5f97\u5230\u79ef\u5206\uff0c\u4f46\u4ed6\u5c06\u80fd\u591f\u5728\u6bd4\u8d5b\u4e2d\u7ee7\u7eed\u4e0b\u53bb\uff0c\u51fb\u8d25\u6700\u7ec8\u7684\u8001\u677f\u3002\u4e00\u65e6\u73a9\u5bb6\u5f00\u59cb\u53d8\u5f97\u66f4\u81ea\u4fe1\uff0c\u4ed6\u5c31\u4f1a\u53d8\u5f97\u66f4\u81ea\u4fe1\u3002\n\u968f\u7740\u6e38\u620f\u6d4b\u8bd5\u7684\u8fdb\u884c\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u4e2a\u6e38\u620f\u53d8\u5f97\u76f8\u5f53\u91cd\u590d\u3002\u6211\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u60f3\u6cd5\u3002\u6211\u53d1\u73b0\u6700\u6709\u8da3\u7684\u4e00\u4ef6\u4e8b\u662f\u6309\u4f4f\u5c04\u51fb\u6309\u94ae\uff0c\u8ba9\u4f60\u7684\u8212\u91cc\u80af\u5145\u7535\u3002\u5f53\u4f60\u677e\u5f00\u6309\u94ae\u65f6\uff0c\u5b83\u4f1a\u89e6\u53d1\u4e00\u6b21\u8d85\u7ea7\u5c04\u51fb\uff0c\u53ef\u4ee5\u780d\u7a7f\u51e0\u4e2a\u654c\u4eba\u3002\u8fd9\u4e2a\u673a\u68b0\u4eba\u7ed9\u6e38\u620f\u5e26\u6765\u4e86\u4e00\u4e9b\u6218\u7565\u601d\u7ef4\u3002\u73b0\u5728\uff0c\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u51e0\u4e2a\u7b80\u5355\u7684\u5c04\u51fb\u6765\u9010\u4e2a\u6740\u6b7b\u654c\u4eba\u3002\u6216\u8005\uff0c\u4ed6\u53ef\u4ee5\u9009\u62e9\u8fdb\u884c\u4e00\u6b21\u5e26\u7535\u5c04\u51fb\uff0c\u4e00\u6b21\u6740\u6b7b\u51e0\u4e2a\u654c\u4eba\u3002\u4f46\u662f\uff0c\u5f53\u8d85\u7ea7\u5c04\u624b\u51b2\u950b\u65f6\uff0c\u4ed6\u4f1a\u53d8\u5f97\u8106\u5f31\u4e0d\u582a\u3002\n\u4ece\u8fd9\u4e2a\u7248\u672c\u5f00\u59cb\uff0c\u6240\u6709\u5b9a\u4e49\u6838\u5fc3\u6e38\u620f\u6027\u7684\u6e38\u620f\u673a\u5236\u90fd\u52a0\u5165\u4e86\u3002\u56e0\u6b64\uff0c\u8be5\u9879\u76ee\u8fdb\u5165\u4e86\u65f6\u95f4\u6700\u957f\u3001\u6700\u7e41\u7410\u7684\u9636\u6bb5\uff1a\u6dfb\u52a0\u5185\u5bb9\u548c\u6da6\u8272\u6e38\u620f\u3002\u9996\u5148\uff0c\u6211\u6dfb\u52a0\u4e86\u6211\u7528BFXR\u521b\u5efa\u7684\u97f3\u6548\u3002\u6211\u8fd8\u6536\u5f55\u4e86XRACECAR\u521b\u4f5c\u7684\u7cbe\u5f69\u97f3\u4e50\u66f2\u76ee\u3002\u6211\u8fd8\u4fee\u6539\u4e86\u6e38\u620fGUI\u5e76\u5c06\u5176\u79fb\u5230\u5c4f\u5e55\u9876\u90e8\u3002\n\u5173\u4e8e\u56fe\u5f62\uff0c\u6211\u5728\u6e38\u620f\u80cc\u666f\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u56fe\u6848\u3002\u7531\u4e8e\u6211\u7684\u827a\u672f\u6280\u5de7\u6709\u9650\uff0c\u6211\u5f88\u96be\u753b\u51fa\u4ee4\u4eba\u4fe1\u670d\u7684\u80cc\u666f\u3002\u6211\u505a\u4e86\u51e0\u6b21\u5c1d\u8bd5\uff0c\u5305\u62ec\u8fd9\u4e00\u6b21\uff0c\u5728\u843d\u811a\u4e8e\u6728\u677f\u5730\u677f\u4e4b\u524d\uff0c\u6211\u5f3a\u8c03\u6e38\u620f\u53d1\u751f\u5728\u9053\u573a\u5185(\u89c1\u4e0b\u4e00\u4e2a\u7248\u672c)\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6211\u5f00\u59cb\u521b\u5efa\u5404\u79cd\u6e38\u620f\u5173\u5361\u3002\u6bcf\u4e00\u7ea7\u90fd\u662f\u7531\u51e0\u4e2a\u654c\u6d6a\u7ec4\u6210\u7684\uff0c\u800c\u4e14\u529b\u91cf\u548c\u6570\u91cf\u90fd\u5728\u589e\u52a0\u3002\u6211\u82b1\u4e86\u5927\u91cf\u75af\u72c2\u7684\u65f6\u95f4\u6765\u6d4b\u8bd5\u548c\u5e73\u8861\u90a3\u4e9b\u654c\u4eba\u7684\u6ce2\u6d6a\uff0c\u4ee5\u4f7f\u6e38\u620f\u53d8\u5f97\u6709\u8da3\u3002\u6bcf\u4e2a\u6e38\u620f\u8bbe\u8ba1\u8005\u90fd\u6709\u81ea\u5df1\u7684\u505a\u6cd5\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u5bf9\u4e8e\u8857\u673a\u6e38\u620f\uff0c\u6211\u559c\u6b22\u5c06\u6fc0\u70c8\u548c\u5177\u6709\u6311\u6218\u6027\u7684\u65f6\u523b\u4e0e\u66f4\u8f7b\u677e\u7684\u65f6\u523b\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u73a9\u5bb6\u5c31\u53ef\u4ee5\u5598\u53e3\u6c14\u4e86\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73a9\u5bb6\u5728\u9053\u9986\u91cc\u5df2\u7ecf\u6324\u6ee1\u4e86\u884c\u52a8\u7f13\u6162\u7684\u654c\u4eba\u7684\u65f6\u5019\uff0c\u8bbe\u6cd5\u8ba9\u5feb\u901f\u79fb\u52a8\u7684\u673a\u5668\u4eba\u8ffd\u8d76\u4ed6\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4f1a\u5956\u52b1\u4ed6\u4e00\u4e2a\u8282\u594f\u8f83\u6162\u7684\u65f6\u523b\u3002\u6bd4\u59824-5\u4e2a\u57fa\u672c\u654c\u4eba\u79fb\u52a8\u975e\u5e38\u6162\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6740\u6b7b\u4ed6\u4eec\u5e76\u6536\u96c6\u4ed6\u4eec\u7684\u786c\u5e01\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u7206\u70b8\u56fe\u5f62\u4ecd\u7136\u7279\u522b\u96be\u770b\u3002\n\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u4e00\u79cd\u65b0\u7684\u654c\u4eba\u52a0\u5165\u4e86\u6218\u6597\uff1a\u76fe\u724c\u673a\u5668\u4eba\u3002\u4ed6\u4eec\u53ea\u80fd\u4ece\u540e\u9762\u88ab\u51fb\u4e2d\u3002\u5728\u8fd9\u91cc\uff0c\u201c\u6e9c\u6e9c\u7403\u8212\u91cc\u80af\u201d\u53d8\u5f97\u66f4\u6709\u610f\u4e49\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6740\u6b7b\u76fe\u724c\u673a\u5668\u4eba\u7684\u6700\u597d\u65b9\u6cd5\u662f\u5148\u5728\u5b83\u4eec\u5468\u56f4\u5c04\u51fb\u3002\u7136\u540e\uff0c\u4f60\u5c06\u4e0d\u5f97\u4e0d\u53ec\u56de\u8212\u745e\u80af\uff0c\u5e76\u8bd5\u56fe\u901a\u8fc7\u63a7\u5236\u5b83\u7684\u8fd4\u56de\u8f68\u8ff9\u6765\u51fb\u4e2d\u4ed6\u4eec\u3002\u6211\u8fd8\u5236\u4f5c\u4e86\u65b0\u7684\u7206\u70b8\u7cbe\u7075\uff0c\u80cc\u666f\u56fe\u50cf\u66f4\u597d\u770b\u3002\u6211\u751a\u81f3\u589e\u52a0\u4e86\u4e00\u4e2a\u65e0\u654c\u52a0\u503c\u76ae\u5361(\u4e00\u4e2a\u767d\u8272\u5fcd\u8005\u5934\u9885\uff0c\u5728\u6700\u540e\u4e00\u573a\u6bd4\u8d5b\u4e2d\u88ab\u4e00\u4e2a\u660e\u661f\u53d6\u4ee3)\u3002\n\u8fd9\u4e2a\u7248\u672c\u7684\u6700\u540e\u4e00\u4e2a\u4e3b\u8981\u529f\u80fd\u662f\uff1a\u6e38\u620f\u8001\u677f\u3002\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u6765\u8bbe\u8ba1\u548c\u6d4b\u8bd5\u65e0\u6570\u7684\u8001\u677f\u3002\u8fd9\u662f\u6e38\u620f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6700\u4ee4\u4eba\u6109\u5feb\u7684\u90e8\u5206\u4e4b\u4e00\uff01\n\u5728\u622a\u56fe\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u86c7\u8001\u677f\u7684\u539f\u578b\uff0c\u4ee5\u53ca\u6700\u7ec8\u7248\u672c\u4e2d\u6ca1\u6709\u7684\u8001\u677f\uff1a\u5766\u514b\u3002\u5766\u514b\u5934\u76ee\u5fc5\u987b\u5206\u51e0\u6b65\u6467\u6bc1\u3002\u5b83\u6709\u51e0\u4e2a\u5f31\u70b9(\u6a59\u8272\u7684\u7403)\uff0c\u5fc5\u987b\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u51fb\u4e2d\u3002\u4e00\u65e6\u4e00\u4e2a\u5f31\u70b9\u88ab\u6467\u6bc1\uff0c\u5b83\u5c31\u4f1a\u79fb\u9664\u90e8\u5206\u5766\u514b\u7ed3\u6784\uff0c\u66b4\u9732\u51fa\u65b0\u7684\u5f31\u70b9\u3002\u8fd9\u662f\u4e00\u4f4d\u6781\u5177\u6311\u6218\u6027\u7684\u8001\u677f\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5f31\u70b9\u662f\u5728\u96a7\u9053\u7684\u5c3d\u5934\uff0c\u6240\u4ee5\u9700\u8981\u975e\u5e38\u7cbe\u786e\u7684\u7784\u51c6\u3002\n\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u8fd9\u4e2a\u8001\u677f\u7684\u60f3\u6cd5\u76f8\u5f53\u6709\u8da3\u3002\u6211\u82b1\u4e86\u597d\u51e0\u5929\u7684\u65f6\u95f4\u6765\u7f16\u5199\u7a0b\u5e8f\u3002\u4f46\u5728\u73a9\u4e86\u5f88\u591a\u6b21\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u628a\u5b83\u4ece\u6e38\u620f\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a\u5b83\u5f88\u65e0\u804a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u65f6\u8981\u6467\u6bc1\u8001\u677f\u662f\u76f8\u5f53\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u89c4\u6a21\u5f88\u5927\u3002\u53e6\u5916\uff0c\u5982\u679c\u8001\u677f\u8bbe\u6cd5\u628a\u4f60\u6321\u5728\u89d2\u843d\u91cc\uff0c\u4f60\u5c31\u6b7b\u5b9a\u4e86\uff0c\u56e0\u4e3a\u4f60\u6253\u4e0d\u4e2d\u5b83\u7684\u4efb\u4f55\u5f31\u70b9\u3002\u6700\u540e\uff0c\u9762\u5bf9\u8fd9\u4f4d\u8001\u677f\uff0c\u4e0e\u5176\u8bf4\u662f\u4e00\u6b21\u6709\u8da3\u7684\u7ecf\u5386\uff0c\u4e0d\u5982\u8bf4\u662f\u4e00\u6b21\u4ee4\u4eba\u6cae\u4e27\u7684\u7ecf\u5386\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u5373\u4f7f\u662f\u5728\u4e1a\u4f59\u6e38\u620f\u9879\u76ee\u4e2d\uff0c\u6709\u65f6\u4f60\u4e5f\u4e0d\u5f97\u4e0d\u5220\u6389\u4ee4\u4eba\u5931\u671b\u7684\u5185\u5bb9\uff0c\u5c3d\u7ba1\u4f60\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5236\u4f5c\u5b83\uff01\n\u8fd9\u4e2a\u6700\u7ec8\u7248\u672c\u7684\u5173\u952e\u8bcd\u662f\u6ce2\u5170\u8bed\u3002\u6211\u6dfb\u52a0\u4e86\u6807\u9898\u5c4f\u5e55\u3001\u5f15\u8a00\u548c\u7ed3\u5c3e\u52a8\u753b\uff0c\u4ee5\u53ca\u4e00\u4e2a\u89e3\u91ca\u6e38\u620f\u73a9\u6cd5\u7684\u5c4f\u5e55\u3002\u6700\u540e\u4e00\u62db\u662f\u5305\u62ec\u4e00\u4e2a\u9690\u85cf\u7684\u5956\u52b1\u6a21\u5f0f\uff1a\u53cc\u5fcd\u8005\u6a21\u5f0f\uff0c\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u4e24\u4e2a\u5fcd\u8005\u3002\u8981\u89e3\u9501\u6b64\u6a21\u5f0f\uff0c\u60a8\u53ea\u9700\u5b8c\u6210\u4e00\u6b21\u6e38\u620f(\u6216\u4f7f\u7528\u4f5c\u5f0a\u4ee3\u7801\uff01)\u3002\n\u6240\u4ee5\uff0c\u7ecf\u8fc7\u4e00\u5e74\u591a\u7684\u5f00\u53d1\uff0c5491\u884c\u4ee3\u7801\uff0c\u60a0\u60a0\u8212\u745e\u80af\u7ec8\u4e8e\u5b8c\u6210\u4e86\uff01\u8fd9\u4e2a\u6e38\u620f\u7684ROM\u8fd0\u884c\u5f97\u975e\u5e38\u597d\u3002\u5b83\u5728\u51e0\u4e2a\u7248\u672c\u7684\u539f\u59cb\u6e38\u620f\u673a(\u65e5\u672cSuper Famicom\u3001\u7f8e\u56fdSuper NES\u3001PAL Super Nintendo)\u3001\u73b0\u4ee3\u7248\u672c(PAL\u7528FFVIMan\u768450/60 hz\u5957\u4ef6\u8c03\u5236\u3001\u6a21\u62dfSuper NT)\u4ee5\u53ca\u8bb8\u591a\u6a21\u62df\u5668(Higan/BSNES\u3001SNES9X\u3001ZSNES\u3001No$SNS\u3001RetroArch\u7b49)\u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u9002\u7528\u4e8e\u5404\u79cd\u5e73\u53f0(PC\u3001\u667a\u80fd\u624b\u673a\u3001PSP\u3001Raspberry PI\u7b49)\u3002\n\u4e00\u65e6\u6e38\u620f\u8f6f\u4ef6\u6700\u7ec8\u7248\u672c\u901a\u8fc7\u9a8c\u8bc1(\u7ecf\u8fc7\u5e7f\u6cdb\u7684Beta\u6d4b\u8bd5\u9636\u6bb5\uff0c\u6240\u6709\u9519\u8bef\u90fd\u5df2\u4fee\u590d)\uff0c\u9879\u76ee\u7684\u786c\u4ef6\u90e8\u5206\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a\u6f02\u4eae\u7684\u7eb8\u677f\u76d2\u4f7f\u6e38\u620f\u5728\u5b9e\u9645\u7684\u76d2\u5f0f\u78c1\u5e26\u4e0a\u53ef\u7528\uff01\u4f46\u5728\u63a2\u7d22\u8fc7\u7a0b\u7684\u8fd9\u4e00\u90e8\u5206\u4e4b\u524d\uff0c\u6211\u60f3\u7ed9\u4f60\u63d0\u4f9b\u66f4\u591a\u5173\u4e8e\u4e3aSNES\u5f00\u53d1\u8fd9\u6b3e\u6e38\u620f\u7684\u7ec6\u8282\u3002\n\u5728\u590d\u53e4\u5e73\u53f0\u4e0a\u5236\u4f5c\u6e38\u620f\u6709\u5f88\u591a\u6280\u672f\u9650\u5236\u3002\u4e0e90\u5e74\u4ee3\u7684\u5f00\u53d1\u4eba\u5458\u6240\u9762\u5bf9\u7684\u76f8\u6bd4\uff0c\u4f7f\u7528\u73b0\u4ee3\u5de5\u5177\u786e\u5b9e\u7b80\u5316\u4e86\u4efb\u52a1\u3002\u4f46\u4e0e\u6709\u9650\u7684\u786c\u4ef6\u89c4\u683c\u76f8\u5173\u7684\u9650\u5236\u4ecd\u7136\u5f88\u591a\u3002\u50cf\u6240\u6709\u5176\u4ed6\u81ea\u5236\u8f6f\u4ef6\u5f00\u53d1\u8005\u4e00\u6837\uff0c\u6211\u5728\u5236\u4f5cYo-Yo Shuriken\u65f6\u4e5f\u5728\u4e0e\u8fd9\u4e9b\u9650\u5236\u4f5c\u6597\u4e89\u3002\u4ee5\u4e0b\u662f\u6211\u4f7f\u7528\u7684\u5de5\u5177\u548c\u6211\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\u3002\u6211\u5e0c\u671b\u4ed6\u4eec\u80fd\u5e2e\u52a9\u4f60\u5f04\u6e05\u695aSNES\u662f\u5982\u4f55\u5728\u5f15\u64ce\u76d6\u4e0b\u5de5\u4f5c\u7684\u3002\n\u56de\u523090\u5e74\u4ee3\uff0c\u6e38\u620f\u7a0b\u5e8f\u5458\u5fc5\u987b\u4e3a\u4ed6\u4eec\u6b63\u5728\u5de5\u4f5c\u7684\u6bcf\u53f0\u673a\u5668\u5b66\u4e60\u548c\u4f7f\u7528\u6c47\u7f16\u3002SNES\u662f\u4e00\u53f0\u5f88\u96be\u64cd\u4f5c\u7684\u673a\u5668\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u5b66\u4e60\u7684\u4e0d\u662f\u4e00\u79cd\uff0c\u800c\u662f\u4e24\u79cd\u6c47\u7f16\u8bed\u8a00\uff1a\u7528\u4e8e\u4e2d\u592e\u5904\u7406\u5668\u768465816\u6c47\u7f16\u548c\u7528\u4e8e\u97f3\u9891\u82af\u7247\u7684SPC700\u6c47\u7f16\u3002\n\u5982\u4eca\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u6c47\u7f16\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4ece\u4efb\u4f55\u590d\u53e4\u673a\u5668\u4e2d\u83b7\u5f97\u6700\u5927\u529f\u7387\u7684\u552f\u4e00\u9014\u5f84\u3002\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u7528\u66f4\u5bb9\u6613\u5b66\u7684\u8bed\u8a00\u5236\u4f5c\u4e00\u4e9b\u975e\u5e38\u9177\u7684\u6e38\u620f\uff0c\u6bd4\u5982C\u6216BASIC\u3002\u5bf9\u4e8eSNES\uff0c\u60a8\u53ea\u6709\u4e00\u4e2aC\u7f16\u8bd1\u5668\u53ef\u7528\uff1atcc816\u3002\u5b83\u8fdc\u4e0d\u5b8c\u7f8e\uff0c\u56e0\u4e3a\u60a8\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9bpython\u811a\u672c\u6765\u4f18\u5316/\u4fee\u590d\u5b83\u8f93\u51fa\u7684\u4ee3\u7801\u4e2d\u7684bug\uff0c\u4f46\u5b83\u662f\u6709\u6548\u7684\u3002\u4e00\u4f4d\u540d\u53ebAlekmaul\u7684\u5929\u624d\u7a0b\u5e8f\u5458\u5229\u7528\u8fd9\u4e2a\u7f16\u8bd1\u5668\u6784\u5efa\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u6846\u67b6\u6765\u7b80\u5316\u6e38\u620f\u7684\u521b\u5efa\uff1aPVSNESlib\u3002\n\u6211\u7528\u8fd9\u4e2a\u5e93\u5236\u4f5c\u4e86Yo-Yo Shuriken\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u7528C\u8bed\u8a00\u7f16\u5199\u5b83\u4e86\u3002\u5bf9\u4e8e\u56fe\u5f62\uff0c\u6211\u7ed8\u5236\u4e86\u8f6c\u6362\u4e3aSNES\u56fe\u5f62\u683c\u5f0f\u7684BMP\u56fe\u50cf\u3002\u5bf9\u4e8e\u97f3\u9891\uff0c\u6846\u67b6\u63a5\u53d7\u7528\u4e8e\u97f3\u6548\u7684WAV\u6587\u4ef6\u548c\u7528\u4e8e\u97f3\u4e50\u7684.it\u6587\u4ef6(ImPulse Tacker\u683c\u5f0f)\u3002\u8ba9\u4e00\u6b3e\u6e38\u620f\u5728SNES\u4e0a\u8fd0\u884c\u4ecd\u7136\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6311\u6218\uff0c\u4f46PVSNESlib\u8ba9\u5b83\u6210\u4e3a\u4e86\u4e00\u4e2a\u8270\u96be\u800c\u6709\u8da3\u7684\u6311\u6218\uff01\n\u4e0eMega Drive/Genesis\u6216PC-Engine/TurboGrafx16\u7b49\u5176\u4ed6\u673a\u5668\u76f8\u6bd4\uff0cSNES\u662f\u4e00\u53f0\u76f8\u5f53\u590d\u6742\u7684\u673a\u5668\uff0c\u5177\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u56fe\u5f62\u6a21\u5f0f\u3002\u4f46\u5b83\u7684\u4e00\u822c\u5de5\u4f5c\u6d41\u7a0b\u5b9e\u9645\u4e0a\u76f8\u5f53\u7b80\u5355\u3002\u57fa\u672c\u4e0a\uff0cSNES\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u901a\u9053\u663e\u793a\u56fe\u5f62\u6570\u636e\uff1a&#34\uff1b\u80cc\u666f&#34\uff1b\u548c&#34\uff1b\u7cbe\u7075&#34\uff1b\u3002\u80cc\u666f\u662f\u75318x8\u74f7\u7816\u7ec4\u6210\u7684\u5168\u5c4f\u56fe\u50cf\u3002\u80cc\u666f\u53ef\u4ee5\u6709\u51e0\u4e2a\u53ef\u4ee5\u72ec\u7acb\u6eda\u52a8\u7684\u5c42(\u4ece1\u5c42\u52304\u5c42)\u3002\u89c6\u9891RAM\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u60a8\u901a\u5e38\u5fc5\u987b\u5c06\u56fe\u5f62\u6570\u636e\u4ece\u76d2\u5f0f\u78c1\u5e26ROM\u5b9e\u65f6\u4f20\u8f93\u5230\u89c6\u9891RAM\uff0c\u624d\u80fd\u663e\u793a\u4e00\u4e9b\u65e0\u8fb9\u65e0\u9645\u6216\u8f83\u5927\u7684\u6eda\u52a8\u533a\u57df\u3002\n\u5bf9\u4e8e\u7cbe\u7075\uff0cSNE\u53ef\u4ee5\u663e\u793a\u4e0d\u540c\u7684\u5927\u5c0f\uff1a8x8\u300116x16\u300132x32\u548c64x64-\u4ec5\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u5927\u5c0f\u53ef\u4ee5\u540c\u65f6\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u8981\u5236\u4f5c\u7cbe\u7075\u52a8\u753b\uff0c\u60a8\u5fc5\u987b\u624b\u52a8\u8bbe\u7f6e\u5b83\u4eec\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e\uff0c\u5e76\u4fee\u6539\u5b83\u4eec\u5c06\u663e\u793a\u7684\u56fe\u5f62\u6570\u636e\uff0c\u6bcf\u79d260\u6b21\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5c31\u50cf\u5904\u7406\u80cc\u666f\u4e00\u6837\uff0c\u60a8\u9996\u5148\u5fc5\u987b\u5c06\u56fe\u5f62\u6570\u636e(\u5373\uff0c\u6837\u672c\u8868\u7684\u4e00\u90e8\u5206)\u4ece\u76d2\u5f0f\u78c1\u5e26ROM\u82af\u7247\u590d\u5236\u5230\u63a7\u5236\u53f0\u7684\u89c6\u9891RAM\u4e2d\u3002\nSNES\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e13\u7528\u82af\u7247(SPC700)\u64ad\u653e\u97f3\u9891\u3002\u5bf9\u4e8e\u8f93\u5165\uff0c\u5f88\u5bb9\u6613\u8bfb\u61c2\u73a9\u5bb6\u5728SNES\u6e38\u620f\u677f\u4e0a\u6309\u4e0b\u4e86\u4ec0\u4e48\u6309\u94ae\u3002(\u6709\u53f2\u4ee5\u6765\u8bbe\u8ba1\u7684\u6700\u597d\u7684\u6e38\u620f\u624b\u67c4\uff01)\u3002\n\u6700\u540e\uff0c\u5373\u4f7f\u4f60\u4f7f\u7528PVSNESLib\u8fd9\u6837\u7684\u5de5\u5177\uff0c\u4f60\u4e5f\u9700\u8981\u719f\u6089SNES\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u624d\u80fd\u4e3a\u5b83\u5236\u4f5c\u771f\u6b63\u7684\u6e38\u620f\u3002\u5e0c\u671b\u7cbe\u5f69\u7684\u81ea\u5236\u8f6f\u4ef6\u793e\u533a\u5df2\u7ecf\u6574\u5408\u4e86\u4e00\u4e9b\u975e\u5e38\u5e7f\u6cdb\u7684\u6587\u6863\u3002\u6211\u5c06\u63a8\u8350\uff1a\nPVSNESLib wiki\uff0c\u5b83\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u8bbe\u7f6e\u5de5\u5177\u4ee5\u53ca\u5982\u4f55\u5236\u4f5c\u7b80\u5355\u7684SNES\u7a0b\u5e8f\uff1ahttps://github.com/alekmaul/pvsneslib/wiki\u3002\nNESdev\u8bba\u575b\u7684SNESdev\u90e8\u5206\uff1ahttps://forums.nesdev.com/viewforum.php?f=12\u793e\u533a\u975e\u5e38\u4e50\u4e8e\u52a9\u4eba\uff0c\u6280\u672f\u5a34\u719f\u3002\u6211\u505a\u60a0\u60a0\u5bff\u53f8\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0d\u6b62\u4e00\u6b21\u6551\u4e86\u6211\u7684\u547d\uff01\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u8ba9\u6211\u4eec\u6df1\u5165\u7814\u7a76\u4e00\u4e0b\u6211\u6240\u9762\u4e34\u7684\u4e00\u4e9b\u6280\u672f\u95ee\u9898\u3002\n\u5728\u6e9c\u6e9c\u7403\u8212\u745e\u80af\u8fd9\u6837\u7684\u6e38\u620f\u4e2d\uff0c\u5c4f\u5e55\u4e0a\u7684\u7cbe\u7075(\u654c\u4eba\u3001\u7206\u70b8\u7b49)\u8d8a\u591a\uff0c\u6e38\u620f\u5c31\u4f1a\u8d8a\u597d\uff01\u7136\u800c\uff0c\u8fd9\u4e2a\u6e38\u620f\u4e0d\u80fd\u843d\u540e\u3002\u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u627e\u5230CPU\u53ef\u4ee5\u5904\u7406\u7684\u6700\u5927\u654c\u4eba\u6570\u91cf\uff0c\u540c\u65f6\u4fdd\u630160fps\u7684\u6d41\u7545\u663e\u793a\u3002\u4e0eGenesis/Mega Drive\u76f8\u6bd4\uff0cSNES\u7ecf\u5e38\u88ab\u5439\u6367\u4e3a\u6162\u901f(BLAST Processing)\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u662f\u771f\u7684\u3002\u867d\u7136SNES\u53ef\u4ee5\u663e\u793a\u66f4\u4e30\u5bcc\u591a\u5f69\u7684\u56fe\u50cf\u548c\u66f4\u9ad8\u8d28\u91cf\u7684\u58f0\u97f3\uff0c\u4f46\u53ef\u7528\u7684CPU\u65f6\u95f4\u901a\u5e38\u4f4e\u4e8eGenesis\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0eSNES\u76f8\u6bd4\uff0c\u521b\u4e16\u7eaa\u901a\u5e38\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u79fb\u52a8\u66f4\u591a\u7684\u7cbe\u7075\u3002\u8fd9\u79cd\u533a\u522b\u6700\u597d\u7684\u4f8b\u5b50\u662fContra III(SNES)\u548cIV(Genesis)\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6bcf\u4e2a\u6e38\u620f\u5982\u4f55\u5904\u7406\u7206\u70b8\uff1a\nSNES-#39\uff1bContra III(\u5de6)\u4e0a\u7684\u7206\u70b8\u662f\u7528\u4e00\u4e9b\u7cbe\u7075\u52a0\u4e0a\u7279\u6b8a\u7684\u56fe\u5f62\u6548\u679c(\u900f\u660e)\uff0c\u800cGenesis&#39\uff1bContra IV(\u53f3)\u5219\u5728\u5c4f\u5e55\u4e0a\u6e32\u67d3\u51fa\u75af\u72c2\u6570\u91cf\u7684\u7cbe\u7075\u3002\u5f53\u76f4\u63a5\u5728\u6c47\u7f16\u5668\u4e2d\u5bf9\u6bcf\u4e2a\u63a7\u5236\u53f0\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u60a8\u53ef\u4ee5\u611f\u53d7\u5230\u5904\u7406\u80fd\u529b\u7684\u8fd9\u79cd\u5dee\u5f02\u3002\u4f46\u662f\u5f53\u50cf\u6211\u4e3aYo-Yo Shuriken\u6240\u505a\u7684\u90a3\u6837\u4f7f\u7528C\u7f16\u8bd1\u5668\u65f6\uff0c\u5dee\u522b\u5c31\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u53ef\u4ee5\u663e\u793a\u7684\u654c\u4eba\u603b\u6570\u53d7\u5230\u53ef\u7528CPU\u65f6\u95f4\u7684\u9650\u5236\u3002\u4f46\u662fCPU\u4efb\u52a1\u5e76\u4e0d\u5c40\u9650\u4e8e\u7cbe\u7075\u7ba1\u7406\u3002\u5b83\u8fd8\u5fc5\u987b\u5904\u7406\u52a8\u753b\u3001\u5c06\u56fe\u5f62\u6570\u636e\u4e0a\u4f20\u5230\u89c6\u9891RAM\u3001\u7ba1\u7406\u51b2\u7a81\u3001\u8bfb\u53d6\u63a7\u5236\u5668\u8f93\u5165\u3001\u97f3\u9891\u82af\u7247\u4e0a\u7684\u89e6\u53d1\u5668\u58f0\u97f3\u548c\u97f3\u4e50\u7b49\u3002\u5f00\u53d1Yo-Yo Shuriken\u662f\u4e00\u9879\u6301\u7eed\u4e0d\u65ad\u7684\u6597\u4e89\uff0c\u76ee\u7684\u662f\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u654c\u4eba\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\uff0c\u800c\u6240\u6709\u5176\u4ed6\u5143\u7d20\u90fd\u5728\u6d88\u8017\u53ef\u7528\u7684\u603bCPU\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\uff0c\u6211\u4e0d\u5f97\u4e0d\u51e0\u6b21\u51cf\u5c11\u654c\u4eba\u7684\u6570\u91cf\u3002\n\u8d77\u521d\uff0c\u5f53\u53ea\u6709\u6807\u51c6\u7684\u673a\u5668\u4eba\u5728\u6ca1\u6709\u78b0\u649e\u68c0\u6d4b\u7684\u60c5\u51b5\u4e0b\u76f4\u7ebf\u79fb\u52a8\u65f6\uff0c\u6211\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u663e\u793a80\u4e2a\u654c\u4eba(\u5916\u52a01\u540d\u73a9\u5bb6\u548c\u4ed6\u7684\u8212\u91cc\u80af)\u3002\u5f53\u6211\u6dfb\u52a0\u654c\u4eba\u3001\u73a9\u5bb6\u548c\u8212\u745e\u80af\u4e4b\u95f4\u7684\u78b0\u649e\u68c0\u6d4b\u65f6\uff0c\u6211\u4e0d\u5f97\u4e0d\u5c06\u8fd9\u4e2a\u6570\u5b57\u51cf\u5c11\u523040\u4e2a\u654c\u4eba\u3002\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u64ad\u653e\u5668\u3001\u7206\u70b8\u3001\u97f3\u6548\u548c\u97f3\u4e50\u4e5f\u5360\u7528\u4e86\u5927\u91cf\u53ef\u7528\u7684CPU\u65f6\u95f4\u3002\u6700\u7ec8\uff0c\u6700\u7ec8\u7684\u6e38\u620f\u6700\u591a\u53ea\u80fd\u5728\u5c4f\u5e55\u4e0a\u663e\u793a24\u4e2a\u654c\u4eba\uff0c\u4ee5\u4fdd\u6301\u6d41\u7545\u768460\u5e27/\u79d2\u7684\u663e\u793a\u901f\u7387\u3002\u867d\u7136\u7eb8\u9762\u4e0a\u542c\u8d77\u6765\u53ef\u80fd\u5f88\u5c11\uff0c\u4f46\u5f53\u4f60\u73a9\u8fd9\u6b3e\u6e38\u620f\u65f6\uff0c\u4f60\u4f1a\u770b\u523024\u4e2a\u654c\u4eba\u8db3\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u901a\u8fc7\u6311\u6218\uff0c\u7279\u522b\u662f\u5728\u6e38\u620f\u7684\u540e\u671f\uff01\n\u8001\u5b9e\u8bf4\uff0c\u80fd\u591f\u5728\u5c4f\u5e55\u4e0a\u63a7\u523638\u4e2a\u52a8\u753b\u7cbe\u7075(24\u4e2a\u654c\u4eba+2\u4e2a\u73a9\u5bb6+2\u4e2a\u8212\u91cc\u80af+10\u6b21\u7206\u70b8)\u800c\u6ca1\u6709\u4efb\u4f55\u51cf\u901f\u4ecd\u7136\u662f\u4e00\u9879\u6210\u5c31\u3002\u4f46\u8fd9\u4e00\u6210\u5c31\u80cc\u540e\u6709\u4e00\u4e2a\u8bc0\u7a8d\uff1a\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7cbe\u7075\u90fd\u4f1a\u5728\u6bcf\u4e00\u5e27\u90fd\u66f4\u65b0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u867d\u7136\u516c\u4f17\u3002\n..", "note_en": "Making new games for retro consoles is something that amateur developers can do quite easily thanks to today&#39;s technology. Last year, I released a new game for my favorite console:  the Super Nintendo (SNES). The project went as far as an  actual physical release, with a cartridge and a cardboard box like the 90&#39;s. In this article, I&#39;ll present you the numerous steps of this incredible journey:  designing the game, overcoming SNES-related technical issues while programming it, manufacturing new SNES cartridges, and creating the manual and box.\n    Yo-Yo Shuriken is a  fast-paced arcade game for 1 or 2 players on Super Nintendo (SNES).\n    The core gameplay revolves around  shooting a single shuriken that you can magically recall at any time, so you can  hit enemies from the front or from behind! You can even focus energy into the shuriken to deliver a  powerful charged attack that can cut through several enemies at once.\n    The game is  available on cartridge with a beautiful cardboard box and a manual from Catskull Games:   https://catskullgames.com/yo-yo-shuriken\n  And if you prefer to play it on emulators, you can also  get the ROM of the game here:   https://drludos.itch.io/yo-yo-shuriken\n  Now that you are more familiar with the game itself, let&#39;s explore how it was designed.\n      Making Yo-Yo Shuriken was quite an organic process. I  tested gameplay ideas as I came up with them, and tried to refine them until I had a &#34;fun&#34; game in hand. Let&#39;s start with the initial idea. For a long time, I wanted to make a  shooting game with a single bullet. So the player must retrieve it each time he shoots. Besides the &#34;one bullet&#34; idea, I also wanted to  make a game that could be enjoyed with a friend, in co-op. With both ideas in mind, I created the game step-by-step. Each major progress I made was labelled as a new &#34;version&#34; and playtested heavily. If the current version was good, I continued to add new features. Else, I kept working on the current features until the game was fun to play again before adding anything new.  Here is a rundown of the major game prototypes, with screenshots . If you want to play the actual ROMs of these prototypes, they are one of the many perks available to  my Patreon supporters.\n    The first thing to do when making a game on a platform you don&#39;t know is to  display something onscreen! So I drew a robotic ninja sprite and tried to have the SNES to display it onscreen. When it worked, I added code to make the sprite moves with the D-Pad. And then\u00a0 I made a walking animation when the sprite moved. These firsts steps may look simple. But remember that it was  my first time making a game for the SNES! So it actually took quite some time to do, as I was learning how the machine worked while making the game. As the current project only displayed a robotic ninja, I named it  &#34;Cyber Ninja.&#34;\n      The actual player sprite, a ninja, appeared in this second version. So the robot sprites naturally became their enemies, as everyone know that ninja and robots hate each other! As a proud ninja, the player can throw a single shuriken. The shuriken can get stuck on the screen border, and the player must pick it up to be able to shoot again. The robot enemies can move aimlessly on screen, but no collision detection is performed yet.\n      After several tests, I thought that the  shuriken could come back to the ninja automatically when the player pressed the button a second time. I had a lot of fun while testing this mechanic, so it became the core of the whole game! I also changed the project title to reflect this evolution:  say goodbye to &#34;Cyber Ninja&#34;, and welcome to &#34;Yo-Yo Shuriken&#34;! Indeed, in the game the shuriken goes back-and-forth, much like a yo-yo.\n    I also added collisions detection. Now the robots disappear when the shuriken hits them. But if a robot hits the player, he&#39;s the one who disappear. While everything is still in a very basic state,  the core gameplay of the game is almost complete in this third game prototype. So I decided to &#34;stress test&#34; the engine to see how far I could push it before the game lags.  I managed to have up to 80 enemies walking and interacting on screen. Remember that a SNES can display a grand total of 128 sprites, so having 80 of them updated 60 times per second with collisions and animations is some kind of achievement.\n    In this fourth version, the enemies are no longer limited to straight line movements. They can now move in several directions. They also bounce off the screen borders to avoid exiting the game area. The game became more interesting as a result.\n      I added a different background color, and a system to spawn enemies endlessly. In the previous version, once the 80 robots were destroyed, the game was empty.  Here an endless army of robots is generated! The enemies can also follow the player, to force him to keep moving. Indeed, in this fifth version, the game became\u00a0 quickly boring if the player remained static.\n      In this version, I faced my  first big technical difficulty: displaying large explosion sprites whenever a robot dies. I chose to have\u00a0quite small player and enemies sprites :  16x16 pixels. That way, I could  display loads of them on screen while keeping enough empty space for the player to move around and avoid hitting enemies  (the SNES screen resolution is 256x224 pixels). However, I decided to draw my explosions at larger size:  32x32 pixels. The Super Nintendo is capable of displaying  two different sprites size at the same time. The developer can choose a &#34;small&#34; and a &#34;large&#34; sprite size from a short list of sizes  (8x8, 16x16, 32x32 and 64x64) and the console will use this information when accessing the video ram to display the sprite data onscreen. This is one of the many graphical features that make game developers&#39; life easier. But as any technical feature, it can become daunting when you don&#39;t know how to use it!\n    In my case, in this current prototype, I was only able to display a small portion of the explosion sprites, no matter what I did. The issue was actually quite simple:  I wasn&#39;t uploading the sprite data where needed in the SNES video memory. So the machine couldn&#39;t read them back. I did find the solution after spending several hours on the  wonderful  documentations made by the homebrew community over the years.  I thank them a lot for their hard work on creating and sharing all this precious knowledge: without them, amateurs like me wouldn&#39;t be able to make SNES games!\n        New kinds of enemies join the fray too: the  orange robots can take several hits before exploding, and the  blue robots can chase the player anywhere. I also added  coins that you have to collect to score points. This mecanic greatly improves the gameplay. Indeed , the only way to score points is to collect coins. Killing robots doesn&#39;t bring you any &#34;reward&#34; per se, it&#39;s just a way to prevent your avatar from dying. The robots drop coins when they die. But the coins disappear after a few seconds. And there are always loads of robots on screen, that will kill you instantly when touched.  To earn points, player must thus take a lot of risks and move among the robots, else he won&#39;t be able to make a high score. But sometimes, it&#39;s better to let some coins disappear to avoid losing a life. This is what game designers call a  &#34;risk / reward&#34; choice, and it&#39;s a great way to make a game interesting. Here, this mecanic allows Yo-Yo Shuriken to offer a  smooth difficulty progression to players. Usually, a rookie player will tend to stay static, and will solely focus on destroying the robots. He won&#39;t get points, but he will be able to continue through the game and defeat the final boss. Once a player starts to get more confident, he&#39;ll be able to collect coins to make a highscore. And of course, experienced players can try to make a &#34;perfect run&#34; by collecting all the coins, although it means taking an insane amount of risks!\n    As playtesting went on, I realized that the game was becoming quite repetitive. I tested several ideas to solve this issue. The one I found the most interesting was to hold down the shoot button to &#34;charge&#34; your shuriken. When you release the button, it triggers a  &#34;super shot&#34; that can cut through several enemies. This mecanic brings a bit of strategic thinking to the game. Now, the player can choose to perform several simple shots to kill the enemies one by one. Or he can choose to perform a charged shot to kill several enemies at once. But then he&#39;ll be vulnerable while the super shot is charging.\n      Starting with this version, all the game mecanics that defines the core gameplay were in. So the project entered the longest and most tedious phase:  adding content and polishing the game. First, I added sound effects, that I created with  BFXR. I also included the  wonderful music tracks composed by   XRACECAR. I also modified the game GUI and moved it to the top of the screen.\n    Regarding graphics, I added  a pattern to the game background. As my artistic skills are limited, I had an hard time drawing a convincing background. I made several attempts, including this one, before settling on a &#34;wood planks floor&#34; to emphasize that the game takes place inside a dojo  (see next version).\n  Last but not least, I started to  create the various game levels. Each level is composed by several enemies waves, with increasing strength and numbers. I spent an insane amount of time testing and balancing those enemies waves to make the game entertaining. Each game designer does this his own way. Personally, for an arcade game, I like to  mix intense and challenging moments with easier moments so the player can catch his breath. For example if the player manage to pass a moment with fast moving robots chasing him while the dojo is already filled with slow moving enemies, I&#39;ll reward him with a slower-paced moment. Like 4-5 basic enemies moving very slowly so you can easily kill them and collect their coins.\n  On a side note, you may notice that the explosions graphics are still  particularly hideous at this stage.\n    In this version, a  new type of enemy joined the fray: the &#34;shield&#34; robot. They can only be hit from behind. The &#34;yo-yo shuriken&#34; mecanic becomes even more meaningful here. Indeed, the best way to kill shield robots is to shoot around them first. Then, you&#39;ll have to call the shuriken back and to try to hit them by controlling its return trajectory. I also made new explosions sprites, and the background image is better looking. I even added an  invincibility bonus pickup  (a white ninja head, replaced by a star in the final game).\n      The last major feature arrived in this version:  the game bosses. I spend a lot time designing and testing numerous bosses. This was  one of the most enjoyable part of the game development process!\n    In the screenshots, you can see a  prototype of the &#34;snake&#34; boss, and a boss not present in the final version:  the tank. The tank boss must be destroyed in several steps. It has several weak points  (the orange balls) that have to be hit one after the other. Once a weak point is destroyed, it removes part of the tanks structure, exposing new weak points. This was a challenging boss. For example, one weak point is at the end of a tunnel, so it requires a very precise aiming.\n    On paper, this boss idea was quite interesting. It took me quite several days to program it. But after many play sessions, I decided to removed it from the game as it was boring. Indeed, it was sometimes quite hard to destroy the boss because of its huge size. Also, if the boss managed to block you into a corner, you were dead as you couldn&#39;t hit any of its weak points. In the end, facing this boss was a more frustrating than fun experience. As you can see, even in amateur game projects,  sometimes you have to cut disappointing content despite the time you spent making it!\n    The key word of this final version was  &#34;polish.&#34; I added the title screen, the introduction and ending animations, and a screen to explain how the game plays. The final touch was to include a  hidden bonus mode: the &#34;double ninja&#34; mode, where you can control two ninjas with a single controller. To unlock this mode, you simply need to finish the game once  (or use a cheat code!).\n    So, after  more that one year of development and 5491 lines of code,  Yo-Yo Shuriken was finally completed! The game ROM works perfectly. It was tested on several versions of the original game console  (Japanese Super Famicom, US Super NES, PAL Super Nintendo); on modern versions  (PAL modded with the 50/60hz kit from FFVIMan, Analogue Super NT); and on many emulators  (Higan/BSNES, SNES9X, ZSNES, No$SNS, RetroArch, etc.) for various platforms  (PC, smartphone, PSP, Raspberry Pi, etc.).\n  Once the  game software final version was validated  (all bugs fixed after an extensive beta testing phase),  the hardware part of the project could begin. In other word, we needed to make the game available on actual cartridges with a beautiful cardboard box! But before exploring that part of the process, I&#39;d like to give you  more details on developing this game for a SNES.\n      Making games on retro platforms comes with  a lot of technical constraints. Using modern tools does simplify the task compared to what the developers from the 90&#39;s faced. But you still have many constraints related to the limited specifications of the hardware. Like all the other homebrew developers, I struggled with these limitations while making Yo-Yo Shuriken. Here are the  tools I used and the  main issues I faced. I hope they&#39;ll help you figure how the SNES works under the hood.\n    Back in the 90&#39;s, game programmers had to learn and use assembly for each machine they were working on.  The SNES was a difficult machine to work on because you had to learn not one, but two assembly languages: The 65816 assembly for the CPU, and the SPC700 assembly for the audio chip.\n  Nowadays, you can still use assembly, and it&#39;s actually the only route to get the most power from any retro machine. But you can also make some really cool games with easier to learn languages, like C or Basic.  For the SNES, you have only one C compiler available: tcc816. It&#39;s far from perfect, as you have to use some python script to optimize / fix bugs in the code it outputs, but it works. A talented coder named Alekmaul took this compiler and built a full framework to ease the creation of games: the  PVSNESlib.\n  I used this library to make Yo-Yo Shuriken, so I could code it in C language. For graphics, I drew BMP images that were converted to the SNES graphics format. For audio the framework accepted wav files for sound effects and .it files  (Impulse Tacker format) for music. It was still quite a challenge to make a game running on the SNES, but  PVSNESlib made it a &#34;hard but fun challenge&#34;!\n    Compared to other machines like the Mega Drive / Genesis or the PC-Engine / TurboGrafx16, the  SNES is quite a complex machine, with a lot of different graphics modes. But it&#39;s  general workflow is actually quite simple. Basically, a SNES can display graphics data using two channels: the  &#34;background&#34; and the  &#34;sprites&#34;. The  background is a full screen image made of 8x8 tiles. The background can have  several layers  (from 1 to 4) that can be scrolled independently. The video RAM is limited, so you usually have to stream graphic data from the cartridge ROM to the video RAM in real time in order to display some endless or large scrolling areas.\n  For the sprites, the SNES can display different sizes: 8x8, 16x16, 32x32 and 64x64 -  only two of such sizes can be on screen at the same time. To animate sprites you have to manually set their position on screen and modify the graphical data that they will display, 60 times per second. To do that, like with the background, you first have to copy the graphical data  (i.e. part of your spritesheet) from the cartridge ROM chip to the video RAM of the console.\n  The SNES can also play audio using a dedicated chip (SPC700). For input, it&#39;s quite easy to read what buttons players pressed on the SNES gamepads. (the best gamepad ever designed!)\n  In the end, even if you use a tool like PVSNESLib, you&#39;ll  need to be familiar with how the SNES works in order to make actual games for it. Hopefully the wonderful homebrew community have consolidated some very extensive documentation. I&#39;ll recommend:\n  The  PVSNESLib wiki, that will guide you on how to set up the tools and how to make simple SNES programs:  https://github.com/alekmaul/pvsneslib/wiki\n  The  SNESdev section of the NESdev forum:  https://forums.nesdev.com/viewforum.php?f=12  The community is very helpful and skilled. They saved my life more than once when I was making Yo-Yo Shuriken!\n  Now that we have covered some basics, let&#39;s dig into  some technical issues I faced.\n    In a game like Yo-Yo Shuriken, the more sprites on screen  (enemies, explosions, etc.), the better the game will be! However, the game cannot afford to lag. So you have to find the  maximum number of enemies that the CPU can handle while keeping a smooth 60 fps display. The SNES is often touted as &#34;slow&#34; compared to the Genesis / Mega Drive  (&#34;Blast Processing&#34; anyone?). And, in a way, this is true. While the SNES can display more colorful images and higher quality sound, the CPU time available is usually lower than the Genesis. In other words, the Genesis could usually moves more sprites on screen that the SNES. The best example of this difference are Contra III (SNES) and IV (Genesis). And more specifically, how each game handle explosions:\n    Explosion on SNES&#39; Contra III  (left) are made with a  few sprites alongside a special graphical effect  (transparency), while Genesis&#39; Contra IV  (right) renders them with an  insane amount of sprites on screen. When programming each console like they are meant to be, directly in assembler, you can feel this difference in processing power. But when using a C compiler like I did for Yo-Yo Shuriken, the difference becomes even more obvious. So the t otal number of enemies I could display was limited by the CPU time available. But the CPU tasks are not limited to sprites management. It must also handle animations, upload graphical data to the video ram, manage collisions, read controller inputs, trigger sounds and music on the audio chip, etc.  Developing Yo-Yo Shuriken was a constant struggle to keep as many enemies as possible onscreen, while all the other elements were eating the total CPU time available. Hence, I had to decrease the number of enemies several times as I added new features to the game.\n  At first, when there was only standard robots moving in straight line without collision detection, I was able to display  80 enemies onscreen  (plus 1 player and his shuriken). When I added collisions detection between enemies, player and shuriken, I had to reduce this number to  40 enemies. Adding the second player, explosions, sound effects and music also took a big chunk of the CPU time available. In the end, the final game can only display up to  24 enemies onscreen in order to maintain a smooth 60 fps display rate. While it may sound little on paper, when you&#39;ll play the game you&#39;ll see that 24 enemies are more than enough to offer a though challenge, especially in the later levels of the game!\n  Honestly, being able to manage  38 animated sprites on screen  (24 enemies + 2 players + 2 shurikens + 10 explosions) without any slowdown is still an achievement. But there is a trick behind this achievement:  not all the sprites are updated every frame. Indeed, while the pl\n......", "posttime": "2020-05-31 09:48:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u6e38\u620f,snes", "title": "\u57282020\u5e74\u5236\u4f5c\u4e00\u6b3eSNES\u6e38\u620f(\u4f7f\u7528\u73b0\u4ee3\u5de5\u5177)", "title_en": "Making a SNES game in 2020 (using modern tools)", "transed": 1, "url": "https://drludos.itch.io/yo-yo-shuriken/devlog/147478/making-a-snes-game-in-2020", "via": "", "real_tags": ["2020", "\u6e38\u620f", "snes"]}, {"category": "", "categoryclass": "", "imagename": "98e4f6191076a8a21ba3b139302a7686.jpg", "infoid": 1004471, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22\u53bbWordCamps\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u542c\u8bf4\u8fc7\u8fd9\u53e5\u8bdd\uff1a&#34\uff1bWordPress\u5bc6\u7801\u6563\u5217\u662f\u4e0d\u5b89\u5168\u7684&#34\uff1b\uff0c\u6216\u8005\u5728\u6700\u4e13\u4e1a\u7684\u7248\u672c\u4e2d\uff1a&#34\uff1b\u2026\u2026\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8eMD5\u7684&#34\uff1b\u3002\n\u4e0d\u7ba1\u662f\u771f\u662f\u5047\uff0c\u5f3a\u5927\u7684\u5bc6\u7801\u6563\u5217\u5bf9\u4e8e\u50cfWordPress one\u8fd9\u6837\u7684\u5927\u578b\u751f\u6001\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\uff0c\u800cWordPress one\u4e00\u76f4\u662f\u9ed1\u5ba2\u7684\u653b\u51fb\u76ee\u6807\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u6563\u5217\u7cfb\u7edf\uff0c\u5e76\u5c1d\u8bd5\u4ece\u5934\u5f00\u59cb\u7834\u89e3WordPress\u6563\u5217\uff01\n\u6211\u5f00\u59cb\u7528\u8c37\u6b4c\u641c\u7d22\uff0c\u53d1\u73b0\u90a3\u91cc\u7684\u5927\u591a\u6570\u4fe1\u606f\u90fd\u662f\u901a\u7528\u7684\uff0c\u4ee4\u4eba\u56f0\u60d1\u3002\u4f7f\u7528\u4e86\u5927\u91cf\u5bf9PHP\u5e93\u7684\u5f15\u7528(\u6765\u81eaphpass\u7684\u53ef\u79fb\u690d\u6563\u5217)\uff0c\u4f46\u6ca1\u6709\u771f\u6b63\u5177\u4f53\u7684\u4e1c\u897f\u3002\n\u6563\u5217\u662f\u4e00\u4e2a\u5355\u5411\u7684\u8fc7\u7a0b\uff0c\u4f46\u662fWordPress\u80fd\u591f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u9a8c\u8bc1\u4e0e\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u6563\u5217\u5339\u914d\u7684\u5bc6\u7801\u8f93\u5165\u7684\u7528\u6237\u3002\n\u4ece\u90a3\u91cc\uff0c\u6211\u5f00\u59cb\u68c0\u67e5\u4ee3\u7801\uff0c\u53d1\u73b0\u4e86\u7b2c\u4e00\u4e2a\u6709\u8da3\u7684\u51fd\u6570\uff1aWP_CHECK_PASSWORD($PASSWORD\uff0c$HASH)\uff0c\u5b83\u5c06\u7eaf\u6587\u672c\u5bc6\u7801\u4e0e\u6563\u5217\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5339\u914d\u5219\u8fd4\u56deTRUE\u3002\n\u4ed4\u7ec6\u67e5\u770b\u4ee3\u7801\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u770b\u5230CheckPassword\u3001CRYPT_PRIVATE\u548cencode64\uff0c\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f\u9b54\u672f\u53d1\u751f\u7684\u5730\u65b9\u3002\n\u957f\u8bdd\u77ed\u8bf4\uff0cCRYPT_PRIVATE($PASSWORD\uff0c$STORED_HASH)\u5728\u5bc6\u7801\u4e0e\u5b58\u50a8\u7684\u6563\u5217\u8fdb\u884c\u6bd4\u8f83\u4e4b\u524d\u91cd\u65b0\u6563\u5217\u5bc6\u7801\u3002\u5982\u679c\u5b83\u4eec\u5339\u914d\uff0c\u5219\u5bc6\u7801\u6b63\u786e\uff0c\u8eab\u4efd\u9a8c\u8bc1\u7ee7\u7eed\u8fdb\u884c\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5\u51fd\u6570\u6765\u7834\u89e3\u6563\u5217\u3002\n\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5047\u8bbe\u7ad9\u70b9\u4f7f\u7528PHP&gt\uff1b5\u548c\u6700\u65b0\u7684phpass\u53ef\u79fb\u690d\u6563\u5217\uff0c\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u8bbe\u7f6e\u3002\n\u524d3\u4e2a\u5b57\u7b26$P$\u662fID\uff0c\u544a\u8bc9\u7cfb\u7edf\u6211\u4eec\u6709\u54ea\u79cd\u6563\u5217\u3002\n\u5b57\u7b26\u65703(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u7528\u4e8e\u786e\u5b9aMD5()\u5fc5\u987b\u5904\u7406\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u6b21\u6570\u3002\n\u4ece4\u523012\u4e2anPVO4gP9\u7684\u5b57\u7b26\u662f\u76d0\uff0c\u5b83\u662f\u6563\u5217\u524d\u9644\u52a0\u5230\u5bc6\u7801\u4e0a\u7684\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u4ee5\u4f7f\u5176\u66f4\u5177\u968f\u673a\u6027\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5bc6\u7801\u662fadmin\uff0c\u5b83\u5c06\u8f6c\u6362\u4e3anPVO4gP9admin\uff0c\u7136\u540e\u8fdb\u884c\u6563\u5217\u3002\n\u6563\u5217JUMSAM1WlLTHPdH6EDj4e1\u7684\u5176\u4f59\u90e8\u5206\u662f\u771f\u6b63\u7684\u968f\u673a\u6027\uff0c\u7531\u4f20\u9012\u5230\u4e00\u4e2a\u672a\u8bb0\u5f55\u7684encode64\u51fd\u6570\u4e2d\u7684salt+password\u751f\u6210\uff0c\u8be5\u51fd\u6570\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u6267\u884c\u4e00\u4e9b\u6309\u4f4d\u64cd\u4f5c\uff0c\u5e76\u8fd4\u56de22\u4e2a\u5b57\u7b26\u7684\u8f93\u51fa\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u5199\u903b\u8f91(\u76d0+\u5bc6\u7801\u6563\u5217X\u6b21\u5e76\u4f20\u5165encode64)\u6765\u6267\u884c\u5b57\u5178\u6216\u66b4\u529b\u653b\u51fb\uff0c\u5e76\u83b7\u5f97\u76f8\u540c\u7684\u6563\u5217\u6700\u540e\u90e8\u5206\uff0c\u8fd9\u5c06\u662f\u6210\u529f\u7684\u6563\u5217\u7834\u89e3\uff01\n\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u9ed1\u5ba2\u66f4\u611f\u5174\u8da3\u7684\u662f\u5bfb\u627e\u5f31\u5bc6\u7801\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u6709\u53ef\u80fd\u88ab\u91cd\u590d\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7531\u5bc6\u7801\u7ba1\u7406\u5668\u751f\u6210\u7684\u968f\u673a\u5bc6\u7801\uff0c\u56e0\u6b64\u662f\u7279\u5b9a\u4e8e\u7ad9\u70b9\u7684\u3002\n\u6211\u51b3\u5b9a\u4f7f\u7528Golang\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u5feb\uff0c\u6211\u4eec\u9700\u8981\u6240\u6709\u7684\u901f\u5ea6\u6765\u8ba1\u7b97\u5927\u578b\u5bc6\u7801\u5b57\u5178\u3002\n\u5c31\u50cf\u5728WordPress\u52a0\u5bc6\u8fc7\u7a0b\u4e2d\u4e00\u6837\uff0c\u811a\u672c\u83b7\u53d6\u6563\u5217\u5e76\u9694\u79bbSALT\uff0c\u7136\u540e\u5b83\u7f16\u5199\u5bc6\u7801(SALT+PASS)\uff0c\u5c1d\u8bd5\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u5bc6\u7801\u5e76\u5bf9X\u8fdb\u884cMD5\u6563\u5217X\u6b21\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86X\u662f\u5982\u4f55\u786e\u5b9a\u7684\u3002\n\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u5b83\u5c06\u5bf9PHP\u4e2d\u4f7f\u7528order()\u83b7\u5f97\u7684\u5b57\u8282\u6267\u884c\u4e00\u7cfb\u5217\u6309\u4f4d\u64cd\u4f5c\uff0c\u8fd9\u5728golang\u4e2d\u662f\u4e0d\u9700\u8981\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5b57\u8282\u503c\uff1a\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u610f\u8bc6\u5230\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u627e\u5230\u6574\u4e2a\u5b57\u7b26\u4e32\u3002\u53ea\u9700\u5339\u914d\u51e0\u4e2a\u5b57\u7b26\u5373\u53ef\u5339\u914d\u6574\u4e2a\u5bc6\u7801\uff0c\u4ece\u800c\u4f7f\u811a\u672c\u66f4\u5177\u8868\u73b0\u529b\uff01\u56e0\u6b64\uff0c\u7531\u4e8e\u6563\u5217\u8fc7\u7a0b\u7684\u6027\u8d28\uff0c\u5982\u679c\u5b57\u7b26n.0/4/8.\u3002\u5339\u914d\uff0c\u5219\u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7684\u5bc6\u7801\u6b63\u786e\u3002\n\u4ee3\u7801\u5728gihub-https://github.com/francescocarlucci/wphashcrash\u4e0a\u4e00\u5982\u65e2\u5f80-\u76ee\u524d\uff0c\u811a\u672c\u662f\u4e00\u4e2apoc\uff0c\u53ea\u83b7\u5f97\u4e00\u4e2a\u5bc6\u7801\u6563\u5217\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u53ca\u5bc6\u7801\u5b57\u5178\u7684\u8def\u5f84\u3002\n\u6211\u5df2\u7ecf\u5728\u81ea\u8ff0\u6587\u4ef6\u4e2d\u6982\u8ff0\u4e86\u4e00\u4e9b\u5f88\u597d\u7684\u6539\u8fdb\uff0c\u6211\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u6dfb\u52a0\u3002\n\u5982\u679c\u60a8\u786e\u5b9e\u60f3\u8981\u7834\u89e3\u6563\u5217\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5206\u53c9\uff0c\u6216\u8005\u5c06\u811a\u672c\u5305\u88c5\u5728bash for\u5faa\u73af\u4e2d\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u8ba4\u4e3a\u5f88\u660e\u663e\uff0c\u5982\u679c\u653b\u51fb\u8005\u8bbf\u95eeWordPress\u7f51\u7ad9\u4e0a\u7684\u6570\u636e\u5e93\uff0c\u4ed6/\u5979\u57fa\u672c\u4e0a\u53ef\u4ee5\u7834\u89e3\u6bcf\u4e00\u4e2a\u5f31\u5bc6\u7801\u3002\nWordPress\u751f\u6001\u7cfb\u7edf\u662f\u81ea\u7531\u804c\u4e1a\u8005\u5de5\u4f5c\u7684\u4e00\u4e2a\u5de8\u5927\u9886\u57df\uff0c\u7ecf\u5e38\u4f1a\u53d1\u73b0\u65e7\u7684/\u4e0d\u4f7f\u7528\u7684wp-admin\u548cftp\u5e10\u6237\uff0c\u8fd9\u4e9b\u5e10\u6237\u662f\u4e3a\u4e34\u65f6\u9700\u8981\u800c\u521b\u5efa\u7684\u3002\n\u6700\u540e\u4e00\u70b9\uff0c\u518d\u52a0\u4e0a\u7528\u6237\u679a\u4e3e\uff0c\u8fd9\u662fWordPress\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff0c\u4e3a\u4f7f\u7528\u5077\u6765\u7684/\u5178\u5f53\u7684\u7ba1\u7406\u5458\u51ed\u636e\u8bbf\u95ee\u6570\u636e\u5e93\u655e\u5f00\u4e86\u5927\u95e8\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u8bb8\u591a\u7f51\u7ad9\u4e0d\u5f3a\u5236\u4f7f\u7528\u5f3a\u5bc6\u7801\uff0c\u4ee5\u4e0d\u635f\u5bb3\u7528\u6237\u4f53\u9a8c\uff0c\u6211\u5bf9\u4e0a\u8ff0\u4efb\u4f55\u4e00\u70b9\u90fd\u6709\u76f4\u63a5\u7ecf\u9a8c\u3002\n\u4e00\u65e6\u4e00\u4e2a\u7f51\u7ad9\u88ab\u653b\u7834\uff0c\u5982\u679c\u653b\u51fb\u8005\u503e\u5411\u4e8e\u91cd\u590d\u4f7f\u7528\u5bc6\u7801(\u6211\u4eec\u77e5\u9053\u4ed6\u4eec\u786e\u5b9e\u4f1a\u8fd9\u6837\u505a)\uff0c\u90a3\u4e48\u5b58\u50a8\u7684\u5f31\u6563\u5217\u5c06\u5141\u8bb8\u653b\u51fb\u8005\u653b\u7834\u5176\u4ed6\u7f51\u7ad9\u4e0a\u7684\u5176\u4ed6\u7528\u6237\u5e10\u6237\u3002\n\u6211\u7684\u7814\u7a76\u6ca1\u6709\u8d70\u5230\u90a3\u4e00\u6b65\uff0c\u6211\u53ea\u60f3\u770b\u770b\u5982\u4f55\u7834\u89e3WordPress\u7684\u6563\u5217\u3002\n\u4f17\u6240\u5468\u77e5\uff0c\u4e0eMD5\u76f8\u6bd4\uff0cbcrypt\u662f\u4e00\u79cd\u66f4\u5f3a\u5927\u7684\u6563\u5217\u65b9\u6cd5\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u73b0\u6709\u7684\u63d2\u4ef6\u4f7f\u7528bcrypt\u5e76\u53d6\u4ee3\u4e86\u5904\u7406\u5bc6\u7801\u6240\u9700\u7684\u6240\u6709\u6838\u5fc3\u51fd\u6570\uff1a\n\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u60a8\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u5728\u6838\u5fc3\u7ea7\u522b\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u76ee\u7684\u662f\u8981\u5b9e\u73b0\u5927\u89c4\u6a21\u91c7\u7528\u3002\n\u6709\u5f88\u591a\u7834\u89e3\u6563\u5217\u7684\u5de5\u5177\uff0c\u6bd4\u5982Hashcat\u548cJohn the Ripper\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c\u4f46\u540c\u6837\uff0c\u672c\u7814\u7a76\u7684\u8303\u56f4\u662f\u7406\u89e3WordPress\u6563\u5217\u7ed3\u6784\u5e76\u4ece\u5934\u5f00\u59cb\u7834\u89e3\u5b83\u3002", "note_en": "If you enjoy going to WordCamps as I do, you probably heard this already:  &#34;WordPress password hashing is not safe&#34;, or in the most technical version: &#34;...because it is md5 based&#34;.\n True or not, a strong password hashing is crucial for a large ecosystem like the WordPress one, which has always been a juicy target for hackers. So, I decided to take a closer look at the hashing system and try to crack WordPress hashes  from scratch!\n  I started doing some googling and found that most of the information out there is generic and confusing. Lots of references to the PHP libraries used (portable hash from phpass), but nothing really concrete.\n  hashing is a one-way process, but WordPress is someway able to authenticate users matching their password input with the hash stored in the database\n From there, I started checking the code and found the first interesting function:  wp_check_password($password,$hash) which compares the plain text password with the hash and returns  true if they match.\n  Going through the  code, it quickly bring us to  CheckPassword,  crypt_private and  encode64 which basically is where the magic happens.\n Long story short,  crypt_private($password, $stored_hash) re-hashes the password before it gets compared to the stored hash.  If they match, the password is correct and authentication goes on. Which means that we can also use that function to crack the hash.\n    For simplicity, we will assume the site uses PHP&gt;5 and the newest phpass portable hash, which is the most common setup.\n The first 3 characters  $P$ are an ID, telling the system which kind oh hash we have.\n Character number 3 (counting from 0) is used to determine how many times the md5() has to process the input string.\n Chars from 4 to 12  nPVO4gP9 are the  salt, which is a random string appended to the password  before hashing, to give it more randomness. For example, if your password is  admin, it gets turned to  nPVO4gP9admin and then hashed.\n The remaining part fo the hash  JUMSAM1WlLTHPdH6EDj4e1 is the real randomness, generated by the salt+password passed in an undocumented  encode64 function, which performs some bitwise operations on the input string and returns a 22 chars output.\n     So, we can re-write the logic -  salt+password hashed X times and passed in encode64 - to perform a dictionary or bruteforce attack, and obtain the same  &#39;last part&#39; of the hash  and that would be a successful hash crack!\n In a real-life scenario, and hackers would be more interested in finding weak passwords because they are more likely to be reused, instead of random ones that are often generated by a password manager and so site-specific.\n  I decided to go with golang because it is very fast, and we need all that speed to compute large password dictionaries.\n Just like in the WordPress encryption procedure, the script takes the hash and isolates the salt, then it composes the password (salt+pass) attempting every password in the dictionary and md5-hashing X number of times, and we have seen how X is determined.\n  Done that, it performs a series of bitwise operation on bytes obtained using ord() in PHP, which we do not need in golang as we already have byte values:\n  At this point, I realized that we do not even need to find the whole string. It is enough to match a few characters to match the whole password and make the script more performant! So, due to the nature of the hashing process, if char n. 0 / 4 / 8 ... matches, the password passed as input is correct.\n   The code is as usual on GitHub -  https://github.com/francescocarlucci/wphashcrash - and at the moment, the script is a POC and gets only a single password hash as input, and the path to the password dictionary.\n I already outlined in the readme some improvements that would be nice to have and I&#39;ll probably add in the future.\n If you really wanna try to hack a list of hashes, you can fork it or just wrap the script in a bash for loop.\n  At this point, I think it is clear enough that if an attacker gets access to the database on a WordPress site, he/she can basically crack every weak password.\n  WordPress ecosystem is a huge territory for freelancer&#39;s work and is very common to find old/unused wp-admin and FTP accounts, created for temporary needs\n This last point, combined with user enumeration which a WordPress common issue, leaves the door open to gaining access to the DB using stolen/pawned admin credentials.\n On top of this,  many websites do not enforce strong passwords to not hurt the user-experience, and I have direct experience in any of the mentioned points.\n Once a website is a compromised, having weak hashes stored allows attackers to compromise other user accounts on other sites, if they tend to re-use passwords and we know they do.\n  My research did not go that far, I only wanted to see how to break WordPress hashes.\n Bcrypt is known to be a stronger hashing method compared to md5, and there is  an existing plugin which uses bcrypt and replaces all the core functions needed to handle passwords:\n  And of course, you can write your own solution as a developer, but I believe this is an issue to fix at core level to aim for a large adoption.\n  There are many tools to crack hashes, like  Hashcat and  John The Ripper which may be even more performant, but again, the scope of this research is to understand the WordPress hash structure and cracking it  from scratch.", "posttime": "2020-05-31 09:30:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,\u7834\u89e3,\u56f4\u68cb,wordpress", "title": "\u752820\u884c\u56f4\u68cb\u7834\u89e3WordPress\u5bc6\u7801", "title_en": "Cracking WordPress passwords with 20 lines of Go", "transed": 1, "url": "https://frenxi.com/cracking-wordpress-password-hash/", "via": "", "real_tags": ["\u5bc6\u7801", "\u7834\u89e3", "\u56f4\u68cb", "wordpress"]}, {"category": "", "categoryclass": "", "imagename": "dab7f99d6b246e45f9dd31ad821ae2cd.jpg", "infoid": 1004469, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u56db\uff0c\u9664\u4e86\u53d1\u5e03\u65b0\u76848 GB Raspberry Pi 4\u5916\uff0cRaspberry Pi\u57fa\u91d1\u4f1a\u8fd8\u5ba3\u5e03\u5c06\u5176\u5b98\u65b9\u64cd\u4f5c\u7cfb\u7edf\u7684\u540d\u79f0\u4eceRaspbian\u66f4\u6539\u4e3aRaspberry Pi OS\u3002\u5bf9\u4e8e\u591a\u5e74\u6765\u4e00\u76f4\u4f7f\u7528(\u5e76\u64b0\u5199)\u8be5\u64cd\u4f5c\u7cfb\u7edf\u7684PI\u7c89\u4e1d\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u91cd\u8981\u7684\u53d8\u5316\uff0c\u4f46\u5e76\u975e\u6ca1\u6709\u6b63\u5f53\u7406\u7531\u3002\n\u5f00\u53d1\u548c\u9500\u552eRaspberry PI\u786c\u4ef6\u7684\u7ec4\u7ec7\u73b0\u5728\u5c06\u652f\u6301\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u7b2c\u4e00\u65b9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f20\u7edf\u768432\u4f4d\u7248\u672c(\u4ee5\u524d\u79f0\u4e3aRaspbian)\u548c\u4e00\u79cd\u65b0\u768464\u4f4d\u7248\u672c\uff0c\u5b83\u770b\u8d77\u6765\u76f8\u540c\uff0c\u4f46\u5141\u8bb8\u60a8\u4f7f\u7528\u53ef\u4ee5\u6d88\u8017\u8d85\u8fc74 GB RAM\u768464\u4f4d\u5e94\u7528\u7a0b\u5e8f\u3002*\u8fd9\u4e24\u4e2a\u5e73\u53f0\u90fd\u5c06\u88ab\u547d\u540d\u4e3aRaspberry Pi OS\uff0c\u5c31\u50cf\u540c\u65f6\u62e5\u670932\u4f4d\u548c64\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u7684\u5fae\u8f6f\u4e00\u6837\uff0c\u5c06\u5176\u4e24\u79cd\u4ea7\u54c1\u90fd\u79f0\u4e3aWindows 10\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5c0664\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u547d\u540d\u4e3aRaspbian(64\u4f4d)\u5462\uff1f\u7b54\u6848\u5728\u4e8eRaspbian\u7684\u5386\u53f2\u548c\u5b83\u80cc\u540e\u7684\u4eba\u3002Raspbian\u7b2c\u4e00\u6b21\u5f00\u53d1\u662f\u57282012\u5e74\uff0c\u4e5f\u5c31\u662f\u6700\u521d\u7684Raspberry Pi\u53d1\u5e03\u7684\u90a3\u4e00\u5e74\uff0cRaspbian\u662fDebian Linux\u768432\u4f4d\u5206\u652f\uff0c\u9488\u5bf9PI\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u7279\u522b\u662f\u4e3aRaspberry 1\u548cRaspberry Pi Zero\u63d0\u4f9b\u52a8\u529b\u7684BCM2835 ARMv6\u5904\u7406\u5668\u3002\nRaspbian\u662f\u7531\u5f00\u53d1\u4eba\u5458Peter Green\u548cMike Thompson\u4f5c\u4e3a\u81ea\u5df1\u7684\u5f00\u6e90\u9879\u76ee\u8fd0\u884c\u7684\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u4e0eRaspberry Pi\u57fa\u91d1\u4f1a\u5bc6\u5207\u5408\u4f5c\u5e76\u5f97\u5230\u5176\u652f\u6301\uff0c\u4f46\u4ed6\u4eec\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9e\u4f53\u3002\u7136\u800c\uff0c\u7528\u6237\u4eceRaspberry Pi Foundation\u4e0b\u8f7d\u7684\u7b2c\u4e00\u65b9Raspbian\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u53ea\u662f\u6784\u5efa\u5728Raspbian\u5185\u6838\u4e0a\u7684\u51e0\u4e2a\u955c\u50cf\u4e2d\u7684\u4e00\u4e2a\u3002Raspbian.org\u5217\u51fa\u4e86\u7531\u5176\u4ed6\u7ec4\u7ec7\u7f16\u8bd1\u7684\u5176\u4ed6\u51e0\u4e2a\u57fa\u4e8eRaspbian\u7684\u64cd\u4f5c\u7cfb\u7edf\u6620\u50cf\uff0c\u5c3d\u7ba1\u5927\u591a\u6570\u6620\u50cf\u5df2\u7ecf\u591a\u5e74\u6ca1\u6709\u66f4\u65b0\u8fc7\u4e86\u3002\n\u65b0\u768464\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u6839\u672c\u6ca1\u6709\u4f7f\u7528Raspbian\u9879\u76ee\u4e2d\u7684\u8f6f\u4ef6\uff0c\u800c\u662f\u4eceDebian arm64\u4e2d\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5b83\u7684\u7528\u6237\u533a\uff0c\u4e5f\u5c31\u662f\u6f02\u6d6e\u5728\u5185\u6838\u4e4b\u4e0a\u7684\u64cd\u4f5c\u7cfb\u7edf\u90e8\u5206\u3002\u5728raspberypi.org\u8bba\u575b\u4e0a\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\uff0cGreen\u89e3\u91ca\u8bf4\uff0c\u4ed6\u4e0d\u5e0c\u671bRaspbian\u540d\u79f0\u7528\u4e8e\u6ca1\u6709\u5305\u542b\u4ed6\u9879\u76ee\u4ee3\u7801\u7684\u4e1c\u897f\u3002\n\u683c\u6797\u5199\u9053\uff0c\u6811\u8393\u6d3e\u8003\u865164\u4f4d\u56fe\u50cf\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u57c3\u672c[Raspberry Pi\u7684\u521b\u59cb\u4eba\u5384\u666e\u987f]\u7ed9\u6211\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u6211\u5bf9\u547d\u540d\u6cd5\u7684\u610f\u89c1\uff0c\u6211\u8868\u793a\uff0c\u6211\u4e0d\u4f1a\u559c\u6b22\u7528Raspbian\u8fd9\u4e2a\u540d\u5b57\u6765\u547d\u540d\u4e0d\u5305\u542bRaspbian\u4efb\u4f55\u4e1c\u897f\u7684\u56fe\u7247\u3002&#34\uff1b(\u8bd1\u6ce8\uff1a\u6811\u8393\u6d3e\u7684\u521b\u59cb\u4eba\u5384\u666e\u987f)\u7ed9\u6211\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u6211\u5bf9\u547d\u540d\u6cd5\u7684\u610f\u89c1\uff0c\u6211\u8868\u793a\uff0c\u6211\u4e0d\u4f1a\u559c\u6b22\u7528Raspbian\u8fd9\u4e2a\u540d\u5b57\u6765\u547d\u540d\u4e0d\u5305\u542b\u4efb\u4f55Raspbian\u7684\u56fe\u7247\u3002\n\u683c\u6797\u8fd8\u5199\u9053\uff0c\u4ed6\u8ba1\u5212\u7ee7\u7eedRaspbian\u9879\u76ee\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u8be5\u9879\u76ee\u5c06\u7ee7\u7eed\u7528\u4e8e\u6784\u5efa32\u4f4d\u7248\u672c\u7684Raspberry Pi OS\u3002\u8003\u8651\u5230\u8bb8\u591a\u578b\u53f7\u7684Raspberry PI\uff0c\u5305\u62ec\u975e\u5e38\u6d41\u884c\u7684Raspberry Pi Zero\uff0c\u5c06\u6c38\u8fdc\u4e0d\u80fd\u572864\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c32\u4f4d\u5e73\u53f0\u5373\u4f7f\u5728\u672a\u6765\u51e0\u5e74\u5185\u4e0d\u5360\u4e3b\u5bfc\u5730\u4f4d\uff0c\u4e5f\u5c06\u7ee7\u7eed\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u3002\n\u6839\u636eRaspberry Pi\u521b\u59cb\u4eba\u57c3\u672c\u00b7\u5384\u666e\u987f(Eben Upton)\u7684\u8bf4\u6cd5\uff0c\u66f4\u540d\u4e3aRaspberry Pi OS\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3aRaspbian\u4e00\u76f4\u662f\u5e95\u5c42\u6280\u672f\uff0c\u800c\u4e0d\u662f\u5e73\u53f0\u672c\u8eab\u3002\u5728\u7ed9\u6c64\u59c6\u786c\u4ef6\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u4ed6\u5199\u9053\uff1a\nRaspbian\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u7ef4\u62a4\u4e86Debian armhf\u7aef\u53e3\u7684\u91cd\u65b0\u6784\u5efa\uff0c\u4fee\u6539\u540e\u53ef\u4ee5\u5728ARMv6\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002\u4eceARMHF\u5f15\u5bfc\u5f00\u59cb\uff0c\u901a\u8fc7\u6784\u5efa\u8bbe\u7f6e\u5220\u9664\u9713\u8679\u706f\u5feb\u901f\u8def\u5f84\u548c\u5c11\u91cf\u4ec5\u652f\u6301ARMv7\u7684\u6807\u91cf\u6307\u4ee4)\u3002\u4f7f\u7528Raspbian\u5141\u8bb8\u6211\u4eec\u5229\u7528\u539f\u59cbBCM2835 AP\u4e0a\u7684\u786c\u4ef6\u6d6e\u70b9\u5355\u5143\uff0c\u5b83\u4f7f\u7528Debian Armel\u5b98\u65b9\u7aef\u53e3\u4e0d\u4f1a\u3002\n\u6240\u4ee5\u5f53\u6211\u4eec\u8bf4Raspbian\u955c\u50cf\u65f6\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\u8bf4\u6211\u4eec\u7684Raspberry Pi\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u662f\u4f7f\u7528Raspberry Repos\u6784\u5efa\u7684\uff0c\u4f46\u4eba\u4eec\u542c\u5230\u7684\u662fRaspberry Pi\u64cd\u4f5c\u7cfb\u7edf\u7684\u540d\u79f0\u3002\n\u5728\u60a8\u4f7f\u752864\u4f4d\u4e4b\u524d\uff0c\u8fd9\u79cd\u6df7\u6dc6\u662f\u76f8\u5f53\u65e0\u5bb3\u7684\u3002Raspbian\u768464\u4f4d\u7b49\u4ef7\u7269\u662fDebian arm64\u7aef\u53e3\u3002\u5b83\u4e0d\u662fRaspbian\u6216Raspbian64&39\uff1b\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u65e9\u8be5\u63d0\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b9e\u9645\u540d\u79f0\u4e86\uff0c\u540c\u65f6\u6211\u4eec\u6b63\u5728\u5229\u7528\u8fd9\u4e2a\u673a\u4f1a\u6765\u6f84\u6e05\u56f4\u7ed532\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u7684\u56f0\u60d1\u3002\n\u7b2c\u4e00\u4e2a\u88ab\u6807\u8bb0\u4e3aRaspberry Pi OS\u7684\u7248\u672c\u4e8e5\u670828\u65e5\u53d1\u5e03\uff0c\u6709\u51e0\u4e2a\u65b0\u529f\u80fd\uff0c\u5305\u62ecBookdle\uff0c\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9b\u514d\u8d39Raspberry Pi\u5b98\u65b9\u6742\u5fd7MagPi\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u5728\u542f\u52a8\u65f6\u5728\u95ea\u5c4f\u4e2d\u770b\u5230\u65b0\u540d\u79f0\uff0c\u4f46\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u5305\u62ec\u4f7f\u7528cat/etc/os-release\u547d\u4ee4\u65f6\uff0c\u60a8\u4ecd\u7136\u4f1a\u53d1\u73b0Raspbian\u547d\u540d\u6cd5\u3002\n\u540d\u5b57\u91cc\u6709\u4ec0\u4e48\uff1f\u4efb\u4f55\u5176\u4ed6\u540d\u5b57\u7684Raspbian\u90fd\u4f1a\u95fb\u8d77\u6765\u50cf\u6d46\u679c\uff1ad\u3002\n\u56de\u8986\u3002\n\u540d\u5b57\u91cc\u6709\u4ec0\u4e48\uff1f\u4efb\u4f55\u5176\u4ed6\u540d\u5b57\u7684Raspbian\u90fd\u4f1a\u95fb\u8d77\u6765\u50cf\u6d46\u679c\uff1ad\u3002\n\u554a\uff0cRaspbian\uff0cRaspbian\uff0c\u4e3a\u4ec0\u4e48\u4f60\u662fRaspbian\uff1f\u62d2\u7edd\u4f60\u7684\u521b\u59cb\u4eba\uff0c\u62d2\u7edd\u4f60\u7684\u6839\u57fa\u3002\u6216\u8005\uff0c\u5982\u679c\u4f60\u4e0d\u613f\u610f\uff0c\u53ea\u8981\u662f\u65b0\u7f16\u8bd1\u7684\uff0c\u6211\u5c31\u4e0d\u518d\u662f32\u4f4d\u7684\u4e86\u3002\n\u56de\u8986\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u62c9\u65af\u6f58\u603b\u662f\u542c\u8d77\u6765\u6709\u70b9\u592a\u50cf\u62c9\u65af\u666e\u5ef7\uff1ahttps://en.wikipedia.org/wiki/Grigori_Rasputin\u6211\u4e0d\u592a\u786e\u5b9a\u8fd9\u662f\u6811\u8393\u6d3e\u60f3\u8981\u7684\u5f62\u8c61\u3002\u6211\u89c9\u5f97\u8fd9\u4e2a\u65b0\u540d\u5b57\u6709\u70b9\u4ee4\u4eba\u5931\u671b\u3002\u6211\u8ba4\u4e3a\u4ed6\u4eec\u771f\u7684\u5e94\u8be5\u5728\u6811\u8393\u3001\u5706\u5468\u7387\u6216\u6d3e\u7684\u4e3b\u9898\u4e0a\u5373\u5174\u8868\u6f14\uff0c\u8fd9\u6837\u624d\u80fd\u60f3\u51fa\u66f4\u806a\u660e\u3001\u66f4\u6717\u6717\u4e0a\u53e3\u7684\u4e1c\u897f\u3002\u4e0d\u503c\u5f97\u5931\u7720\uff0c\u800c\u662f\u9519\u5931\u4e86\u673a\u4f1a\u3002\u6211\u66f4\u5173\u5fc3\u7684\u662fAvram\u76848 GB\u7248\u672c\u5982\u4f55\u5ba3\u79f064\u4f4d\u955c\u50cf\u4ecd\u7136\u5b8c\u5168\u4f7f\u752832\u4f4d\u7528\u6237\u7a7a\u95f4\u3002Linux\u4e16\u754c\u5728\u540c\u65f6\u652f\u630132\u4f4d\u548c64\u4f4d\u7528\u6237\u7a7a\u95f4(\u5728x86\u4e0a)\u7684\u53d1\u884c\u7248\u65b9\u9762\u6709\u8d85\u8fc715\u5e74\u7684\u7ecf\u9a8c\u3002\u8fd9\u4e0d\u662f\u706b\u7bad\u79d1\u5b66\u3002\n\u56de\u8986", "note_en": "On Thursday, in addition to releasing the new   8GB Raspberry Pi 4, the Raspberry Pi Foundation announced that it was changing the name of its official operating system from &#34;Raspbian&#34; to &#34;Raspberry Pi OS.&#34; For Pi fans who&#39;ve been using (and writing about) the operating system for years, this is a fairly consequential change, but not one without justification.\n The organization that develops and sells   Raspberry Pi hardware will now support two different types of its first-party operating system, the traditional 32-bit variety that was formerly known as Raspbian and a new, 64-bit one that looks the same but enables you to use 64-bit apps that can consume more than 4GB of RAM. \u00a0Both platforms will be named Raspberry Pi OS, just as Microsoft, which has both 32 and 64-bit OSes, calls both of its products Windows 10.\n   So why not just name the 64-bit operating system Raspbian (64-bit)? The answer lies in the history of Raspbian and the people behind it. First developed in 2012, the year that the original Raspberry Pi launched, Raspbian is a 32-bit fork of Debian Linux that&#39;s optimized for the Pi, especially the BCM2835 ARMv6 processor that powers the Raspberry 1 and Raspberry Pi Zero.\n Raspbian is run as its own open-source project by developers Peter Green and Mike Thompson and, though they work closely with and are supported by the Raspberry Pi Foundation, they are an independent entity. However, the first-party &#34;Raspbian&#34; OS image that users have been downloading from the Raspberry Pi Foundation is just one image of several that are built on the Raspbian core. Raspbian.org lists several other   Raspbian-powered OS images compiled by other organizations, though most haven&#39;t been updated in years.\n  The new, 64-bit operating system doesn&#39;t use software from the Raspbian project at all, instead taking its &#34;userland,&#34; the part of the OS that floats above the Kernel, from Debian arm64. In a   post on the raspberrypi.org forums, Green explains that he doesn&#39;t want the Raspbian name used for something that doesn&#39;t incorporate code from his project.\n &#34;For a while now raspberry pi have been considering 64-bit images,&#34; Green wrote. &#34;Eben [Upton, founder of Raspberry Pi] sent me an email asking my opinion about nomenclature and I expressed that I would not be pleased about the use of the name &#34;Raspbian&#34; for images that did not contain anything from Raspbian.&#34;\n Green also wrote that he plans to continue the Raspbian project, which will undoubtedly continue to be used to build the 32-bit version of Raspberry Pi OS. Considering that many models of Raspberry Pi, including the very-popular Raspberry Pi Zero, will never work with a 64-bit OS, the 32-bit platform will continue to be important if not dominant for years to come.\n According to Raspberry Pi Founder Eben Upton, the name change to Raspberry Pi OS makes sense, because Raspbian has always been the underlying technology, not the platform itself. In a statement to Tom&#39;s Hardware, he wrote:\n &#34;Raspbian is an independent open-source project, which maintains a rebuild of the Debian armhf port modified to run on armv6 hardware. Starting from an armhf bootstrap, NEON fastpaths and a small number of armv7-only scalar instructions are removed through build settings). Using Raspbian allows us to take advantage of the hardware floating point unit on the original BCM2835 AP, which using the &#34;official&#34; Debian armel port wouldn&#39;t.\n So when we say &#39;Raspbian image&#39; what we mean is &#39;our Raspberry Pi operating system image built using the Raspbian repos&#39;, but what people hear is &#39;Raspbian is the name of Raspberry Pi&#39;s operating system.&#39;\n This confusion is fairly harmless, until you get to 64-bit. The 64-bit equivalent of &#39;Raspbian&#39; is &#39;the Debian arm64 port.&#39; It isn&#39;t &#39;Raspbian&#39; or &#39;Raspbian64&#39; or anything like that. So we&#39;re overdue for an actual name for the OS, and we&#39;re taking the opportunity to clear up the confusion around the 32-bit OS at the same time.&#34;\n The first release to be labeled Raspberry Pi OS launched on May 28th, with   several new features, including Bookshelf, an app that offers free issues of MagPi, the official Raspberry Pi magazine. You can see the new name in the splash screen at bootup, but you&#39;ll still find the Raspbian nomenclature in some parts of the OS, including when you use the  cat /etc/os-release command.\n      what is in a name? a raspbian by any other name would smell as a berry :D\n   Reply\n what is in a name? a raspbian by any other name would smell as a berry :D\nO Raspbian, Raspbian, wherefore art thou Raspbian? Deny thy founder and refuse thy base. Or if thou wilt not, be but newly compiled And I&#39;ll no longer be a 32-bit.\n   Reply\n For me, Raspian always sounded a bit too much like Rasputin:  https://en.wikipedia.org/wiki/Grigori_Rasputin I&#39;m not sure that&#39;s quite the image Raspberry Pi is going for...  I find the new name somewhat disappointing. I think they really should&#39;ve riffed on themes of Raspberry, Pi, or Pie, to come up with something more clever and catchy. Not worth losing sleep over, but a missed opportunity.  I&#39;m  much more concerned about how Avram&#39;s 8 GB review claims the 64-bit image still uses entirely 32-bit userspace. The Linux world has over 15 years of experience with distros simultaneously supporting 32-bit and 64-bit userspace (on x86). This is not rocket science.\n   Reply", "posttime": "2020-05-31 09:29:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,pi,raspbian", "title": "\u8986\u76c6\u5b50Pi OS\uff1a\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u518d\u88ab\u79f0\u4e3a\u2018Raspbian\u2019", "title_en": "Raspberry Pi OS: Why It's No Longer Called 'Raspbian'", "transed": 1, "url": "https://www.tomshardware.com/news/raspberry-pi-os-no-longer-raspbian", "via": "", "real_tags": ["pi", "raspbian"]}, {"category": "", "categoryclass": "", "imagename": "95d0c302888af752f38863cdb6afd6bf.jpg", "infoid": 1004467, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u53d1\u8868\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u7684\u4e00\u9879\u6982\u5ff5\u9a8c\u8bc1\u627f\u8bfa\uff0c\u91cf\u5b50\u8ba1\u7b97\u5c06\u53d8\u5f97\u66f4\u6e29\u6696\u3001\u66f4\u4fbf\u5b9c\u3001\u66f4\u5f3a\u5927\u3002\u5b83\u53ef\u4ee5\u7528\u4f20\u7edf\u7684\u7845\u7247\u94f8\u9020\u5382\u6765\u5236\u9020\u3002\n\u4e16\u754c\u5404\u5730\u6b63\u5728\u5f00\u53d1\u7684\u5927\u591a\u6570\u91cf\u5b50\u8ba1\u7b97\u673a\u53ea\u80fd\u5728\u7edd\u5bf9\u96f6\u5ea6\u4ee5\u4e0a\u51e0\u5206\u4e4b\u4e00\u5ea6\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\u3002\u8fd9\u9700\u8981\u6570\u767e\u4e07\u7f8e\u5143\u7684\u5236\u51b7\u8d39\u7528\uff0c\u4e00\u65e6\u4f60\u5c06\u5b83\u4eec\u63d2\u5165\u4f20\u7edf\u7684\u7535\u5b50\u7535\u8def\uff0c\u5b83\u4eec\u5c31\u4f1a\u7acb\u5373\u8fc7\u70ed\u3002\n\u4f46\u73b0\u5728\u6089\u5c3c\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u5b89\u5fb7\u9c81\u00b7\u7956\u62c9\u514b\u6559\u6388\u9886\u5bfc\u7684\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\u201c\u6211\u4eec\u7684\u65b0\u6210\u679c\u4e3a\u73b0\u5b9e\u4e16\u754c\u7684\u5546\u4e1a\u548c\u653f\u5e9c\u5e94\u7528\u5f00\u8f9f\u4e86\u4e00\u6761\u4ece\u5b9e\u9a8c\u8bbe\u5907\u5230\u8d1f\u62c5\u5f97\u8d77\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u9053\u8def\uff0c\u201d\u7956\u62c9\u514b\u6559\u6388\u8bf4\u3002\n\u7814\u7a76\u4eba\u5458\u7684\u6982\u5ff5\u9a8c\u8bc1\u91cf\u5b50\u5904\u7406\u5668\u5355\u5143\u4f4d\u4e8e\u7845\u82af\u7247\u4e0a\uff0c\u5de5\u4f5c\u6e29\u5ea6\u4e3a1.5\u5f00\u5c14\u6587-\u6bd4\u8c37\u6b4c\u3001IBM\u548c\u5176\u4ed6\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u7684\u57fa\u4e8e\u82af\u7247\u7684\u4e3b\u8981\u7ade\u4e89\u6280\u672f(\u4f7f\u7528\u8d85\u5bfc\u91cf\u5b50\u6bd4\u7279)\u9ad815\u500d\u3002\n\u201c\u8fd9\u4ecd\u7136\u5f88\u51b7\uff0c\u4f46\u662f\u8fd9\u4e2a\u6e29\u5ea6\u53ea\u9700\u8981\u51e0\u5343\u7f8e\u5143\u7684\u5236\u51b7\u5c31\u53ef\u4ee5\u8fbe\u5230\uff0c\u800c\u4e0d\u662f\u5c06\u82af\u7247\u51b7\u5374\u52300.1\u5f00\u5c14\u6587\u6240\u9700\u7684\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u201d\u7956\u62c9\u514b\u89e3\u91ca\u8bf4\u3002\n\u201c\u867d\u7136\u4f7f\u7528\u6211\u4eec\u65e5\u5e38\u7684\u6e29\u5ea6\u6982\u5ff5\u5f88\u96be\u7406\u89e3\uff0c\u4f46\u5728\u91cf\u5b50\u4e16\u754c\u91cc\uff0c\u8fd9\u79cd\u589e\u52a0\u662f\u6781\u7aef\u7684\u3002\u201d\n\u9884\u8ba1\u91cf\u5b50\u8ba1\u7b97\u673a\u5728\u4e00\u7cfb\u5217\u91cd\u8981\u95ee\u9898\u4e0a\u7684\u8868\u73b0\u5c06\u8d85\u8fc7\u4f20\u7edf\u8ba1\u7b97\u673a\uff0c\u4ece\u7cbe\u786e\u7684\u836f\u7269\u5236\u9020\u5230\u641c\u7d22\u7b97\u6cd5\u3002\u7136\u800c\uff0c\u8bbe\u8ba1\u4e00\u79cd\u53ef\u4ee5\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5236\u9020\u548c\u64cd\u4f5c\u7684\u8bbe\u5907\u662f\u4e00\u9879\u91cd\u5927\u7684\u6280\u672f\u6311\u6218\u3002\n\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u76f8\u4fe1\uff0c\u4ed6\u4eec\u5df2\u7ecf\u514b\u670d\u4e86\u963b\u788d\u91cf\u5b50\u8ba1\u7b97\u673a\u6210\u4e3a\u73b0\u5b9e\u7684\u6700\u56f0\u96be\u7684\u969c\u788d\u4e4b\u4e00\u3002\n\u5728\u4eca\u5929\u53d1\u8868\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0cDzurak\u7684\u56e2\u961f\u4e0e\u52a0\u62ff\u5927\u3001\u82ac\u5170\u548c\u65e5\u672c\u7684\u5408\u4f5c\u8005\u4e00\u8d77\uff0c\u62a5\u544a\u4e86\u4e00\u79cd\u6982\u5ff5\u9a8c\u8bc1\u91cf\u5b50\u5904\u7406\u5668\u5355\u5143\uff0c\u4e0e\u4e16\u754c\u5404\u5730\u6b63\u5728\u63a2\u7d22\u7684\u5927\u591a\u6570\u8bbe\u8ba1\u4e0d\u540c\uff0c\u5b83\u4e0d\u9700\u8981\u5728\u4f4e\u4e8e1\u5f00\u5c14\u6587\u7684\u6e29\u5ea6\u4e0b\u5de5\u4f5c\u3002\n\u53bb\u5e742\u6708\uff0c\u7956\u62c9\u514b\u7684\u56e2\u961f\u9996\u6b21\u901a\u8fc7\u5b66\u672f\u9884\u5370\u672c\u6863\u6848\u9986\u516c\u5e03\u4e86\u4ed6\u4eec\u7684\u5b9e\u9a8c\u7ed3\u679c\u3002\u7136\u540e\uff0c\u57282019\u5e7410\u6708\uff0c\u7531Dzurak\u5c0f\u7ec4\u7684\u524d\u535a\u58eb\u540e\u7814\u7a76\u5458Menno Veldhorst\u9886\u5bfc\u7684\u8377\u5170\u5c0f\u7ec4\u5ba3\u5e03\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c\uff0c\u4f7f\u7528\u4e86\u4e0e2014\u5e74\u5728\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u5f00\u53d1\u7684\u76f8\u540c\u7684\u7845\u6280\u672f\u3002\u7531\u4e8e\u4e16\u754c\u4e24\u7aef\u7684\u4e24\u4e2a\u5c0f\u7ec4\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u201c\u70ed\u91cf\u5b50\u4f4d\u201d\u884c\u4e3a\uff0c\u5bfc\u81f4\u8fd9\u4e24\u7bc7\u8bba\u6587\u201c\u80cc\u9760\u80cc\u201d\u53d1\u8868\u5728\u4eca\u5929\u7684\u540c\u4e00\u671f\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u3002\n\u91cf\u5b50\u6bd4\u7279\u5bf9\u662f\u91cf\u5b50\u8ba1\u7b97\u7684\u57fa\u672c\u5355\u4f4d\u3002\u5c31\u50cf\u5b83\u7684\u7ecf\u5178\u8ba1\u7b97\u6a21\u62df-\u6bd4\u7279-\u6bcf\u4e2a\u91cf\u5b50\u6bd4\u7279\u8868\u5f81\u4e24\u79cd\u72b6\u6001\uff0c0\u62161\uff0c\u4ee5\u521b\u5efa\u4e8c\u8fdb\u5236\u7801\u3002\u7136\u800c\uff0c\u4e0e\u6bd4\u7279\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u540c\u65f6\u8868\u73b0\u4e24\u79cd\u72b6\u6001\uff0c\u5373\u6240\u8c13\u7684\u201c\u53e0\u52a0\u201d\u3002\n\u7531Dzurak\u7684\u56e2\u961f\u5f00\u53d1\u7684\u5355\u4f4d\u7535\u6c60\u7531\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u7ec4\u6210\uff0c\u8fd9\u4e9b\u91cf\u5b50\u6bd4\u7279\u88ab\u9650\u5236\u5728\u7845\u4e2d\u5d4c\u5165\u7684\u4e00\u5bf9\u91cf\u5b50\u70b9\u4e2d\u3002\u653e\u5927\u540e\u7684\u7ed3\u679c\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u7845\u82af\u7247\u5de5\u5382\u6765\u5236\u9020\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u6570\u767e\u4e07\u7f8e\u5143\u7684\u51b7\u5374\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5b83\u4e5f\u66f4\u5bb9\u6613\u4e0e\u63a7\u5236\u91cf\u5b50\u5904\u7406\u5668\u6240\u9700\u7684\u4f20\u7edf\u7845\u82af\u7247\u96c6\u6210\u3002\n\u4f8b\u5982\uff0c\u4e00\u53f0\u80fd\u591f\u6267\u884c\u8bbe\u8ba1\u65b0\u836f\u6240\u9700\u7684\u590d\u6742\u8ba1\u7b97\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u5c06\u9700\u8981\u6570\u767e\u4e07\u4e2a\u91cf\u5b50\u6bd4\u7279\u5bf9\uff0c\u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u81f3\u5c11\u8fd8\u9700\u8981\u5341\u5e74\u7684\u65f6\u95f4\u3002\u8fd9\u79cd\u5bf9\u6570\u767e\u4e07\u91cf\u5b50\u6bd4\u7279\u7684\u9700\u6c42\u7ed9\u8bbe\u8ba1\u5e08\u5e26\u6765\u4e86\u5de8\u5927\u7684\u6311\u6218\u3002\n\u201c\u6bcf\u4e2a\u589e\u52a0\u5230\u7cfb\u7edf\u4e2d\u7684\u91cf\u5b50\u4f4d\u5bf9\u90fd\u4f1a\u589e\u52a0\u4ea7\u751f\u7684\u603b\u70ed\u91cf\uff0c\u201dDzurak\u89e3\u91ca\u8bf4\uff0c\u201c\u589e\u52a0\u7684\u70ed\u91cf\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\u201d\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5f53\u524d\u7684\u8bbe\u8ba1\u9700\u8981\u4fdd\u6301\u5982\u6b64\u63a5\u8fd1\u7edd\u5bf9\u96f6\u5ea6\u7684\u4e3b\u8981\u539f\u56e0\u3002\u201c\u3002\n\u4fdd\u6301\u91cf\u5b50\u8ba1\u7b97\u673a\u5177\u6709\u8db3\u591f\u7684\u91cf\u5b50\u6bd4\u7279\uff0c\u4ee5\u4fbf\u5728\u6bd4\u6df1\u7a7a\u4f4e\u5f97\u591a\u7684\u6e29\u5ea6\u4e0b\u53d1\u6325\u4f5c\u7528\u7684\u524d\u666f\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff0c\u6210\u672c\u9ad8\u6602\uff0c\u5e76\u5c06\u5236\u51b7\u6280\u672f\u63a8\u5411\u6781\u9650\u3002\n\u7136\u800c\uff0c\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u7684\u7814\u7a76\u5c0f\u7ec4\u5229\u7528\u4e24\u4e2a\u91cf\u5b50\u70b9\u4e4b\u95f4\u7684\u7535\u5b50\u96a7\u7a7f\u6765\u521d\u59cb\u5316\u548c\u201c\u8bfb\u53d6\u201d\u91cf\u5b50\u4f4d\u5bf9\uff0c\u4ece\u800c\u521b\u9020\u4e86\u4e00\u4e2a\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u8fd9\u4e9b\u539f\u5219\u6027\u5b9e\u9a8c\u662f\u7531\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u56e2\u961f\u7684\u4ea8\u5229\u00b7\u6768\u535a\u58eb\u8fdb\u884c\u7684\uff0c\u7956\u62c9\u514b\u5f62\u5bb9\u4ed6\u662f\u4e00\u4f4d\u201c\u6770\u51fa\u7684\u5b9e\u9a8c\u8005\u201d\u3002\n\u8fd9\u7bc7\u8bba\u6587\u7684\u5176\u4ed6\u4f5c\u8005\u5305\u62ec\u7f57\u65af\u00b7\u5229\u6602(Ross Leon)\u3001\u6770\u68ee\u00b7\u9ec4(Jason Hwang)(\u73b0\u5c31\u804c\u4e8e\u6089\u5c3c\u5927\u5b66)\u3001\u5b89\u5fb7\u70c8\u00b7\u8428\u62c9\u74e6(Andre Saraiva)\u3001\u62d3\u83ab\u00b7\u5766\u56fe(Tuomo Tanttu)\u3001\u9ec4\u7ef4\u65af\u7279(Wister Huang)\u3001\u9648\u56fd\u4f1f(Kok-Wai Chan)\u548c\u8d39\u4f0a\u00b7\u54c8\u5fb7\u68ee(Fay Hudson)\uff0c\u4ee5\u53ca\u6765\u81ea\u65b0\u5357\u5a01\u5c14\u58eb\u5927\u5b66\u7684\u957f\u671f\u5408\u4f5c\u8005\u963f\u6069\u00b7\u52b3\u8d6b\u7279(Arne Laucht)\u535a\u58eb\u548c\u5b89\u5fb7\u91cc\u4e9a\u00b7\u83ab\u96f7\u6d1b(Andrea Morello)\u6559\u6388\u3002\n\u82ac\u5170\u963f\u5c14\u6258\u5927\u5b66\u7684Kuan-yen\u535a\u58eb\u534f\u52a9\u5668\u4ef6\u5236\u9020\u56e2\u961f\uff0c\u800c\u65e5\u672c\u5e86\u5e94\u4e49\u587e\u5927\u5b66\u7684Kohei Itoh\u6559\u6388\u63d0\u4f9b\u4e86\u5236\u9020\u5668\u4ef6\u7684\u5bcc\u96c6\u7845-28\u6676\u7247\u3002\u91cf\u5b50\u6bd4\u7279\u8bbe\u5907\u7ed3\u5408\u4e86\u7eb3\u7c73\u5c3a\u5ea6\u7684\u78c1\u94c1\u6765\u5e2e\u52a9\u5b9e\u73b0\u91cf\u5b50\u6bd4\u7279\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u8bbe\u5907\u7684\u8bbe\u8ba1\u5f97\u5230\u4e86\u52a0\u62ff\u5927\u820d\u5e03\u9c81\u514b\u5927\u5b66Michel Pioro-Ladri\u00e8re\u6559\u6388\u9886\u5bfc\u7684\u56e2\u961f\u7684\u652f\u6301\uff0c\u5176\u4e2d\u5305\u62ec\u4ed6\u7684\u535a\u58eb\u751f\u6731\u5229\u5b89\u00b7\u5361\u7c73\u5170\u00b7\u83b1\u7c73\u5c14(Julien Camirand Lemyre)\u3002", "note_en": "A proof-of-concept published today in Nature promises warmer, cheaper and more robust quantum computing. And it can be manufactured using conventional silicon chip foundries.\n   Most quantum computers being developed around the world will only work at fractions of a degree above absolute zero. That requires multi-million-dollar refrigeration and as soon as you plug them into conventional electronic circuits they\u2019ll instantly overheat.\n But now researchers led by Professor Andrew Dzurak at UNSW Sydney have addressed this problem.\n \u201cOur new results open a path from experimental devices to affordable quantum computers for real world business and government applications,\u201d says Professor Dzurak.\n  The researchers\u2019 proof-of-concept quantum processor unit cell, on a silicon chip, works at 1.5 Kelvin \u2013 15 times warmer than the main competing chip-based technology being developed by Google, IBM, and others, which uses superconducting qubits.\n \u201cThis is still very cold, but is a temperature that can be achieved using just a few thousand dollars\u2019 worth of refrigeration, rather than the millions of dollars needed to cool chips to 0.1 Kelvin,\u201d explains Dzurak.\n \u201cWhile difficult to appreciate using our everyday concepts of temperature, this increase is extreme in the quantum world.\u201d\n Quantum computers are expected to outperform conventional ones for a range of important problems, from precision drug-making to search algorithms. Designing one that can be manufactured and operated in a real-world setting, however, represents a major technical challenge.\n The UNSW researchers believe that they have overcome one of the hardest obstacles standing in the way of quantum computers becoming a reality.\n  In a paper  published in the journal Nature today, Dzurak\u2019s team, together with collaborators in Canada, Finland and Japan, report a proof-of-concept quantum processor unit cell that, unlike most designs being explored worldwide, doesn\u2019t need to operate at temperatures below one-tenth of one Kelvin.\n Dzurak\u2019s team first announced their experimental results via the  academic pre-print archive in February last year. Then, in October 2019, a group in the Netherlands led by a former post-doctoral researcher in Dzurak\u2019s group, Menno Veldhorst,  announced a similar result using the same silicon technology  developed at UNSW in 2014. The confirmation of this \u2018hot qubit\u2019 behaviour by two groups on opposite sides of the world has led to the two papers being published \u2018back-to-back\u2019 in the same issue of Nature today.\n Qubit pairs are the fundamental units of quantum computing. Like its classical computing analogue \u2013 the bit \u2013 each qubit characterises two states, a 0 or a 1, to create a binary code. Unlike a bit, however, it can manifest both states simultaneously, in what is known as a \u201csuperposition\u201d.\n  The unit cell developed by Dzurak\u2019s team comprises two qubits confined in a pair of quantum dots embedded in silicon. The result, scaled up, can be manufactured using existing silicon chip factories, and would operate without the need for multi-million-dollar cooling. It would also be easier to integrate with conventional silicon chips, which will be needed to control the quantum processor.\n A quantum computer that is able to perform the complex calculations needed to design new medicines, for example, will require millions of qubit pairs, and is generally accepted to be at least a decade away. This need for millions of qubits presents a big challenge for designers.\n \u201cEvery qubit pair added to the system increases the total heat generated,\u201d explains Dzurak, \u201cand added heat leads to errors. That\u2019s primarily why current designs need to be kept so close to absolute zero.\u201d\n The prospect of maintaining quantum computers with enough qubits to be useful at temperatures much colder than deep space is daunting, expensive and pushes refrigeration technology to the limit.\n The UNSW team, however, have created an elegant solution to the problem, by initialising and \u201creading\u201d the qubit pairs using electrons tunnelling between the two quantum dots.\n The proof-of-principle experiments were performed by Dr Henry Yang from the UNSW team, who Dzurak describes as a \u201cbrilliant experimentalist\u201d.\n  Other authors on the paper include Ross Leon, Jason Hwang (now at the University of Sydney), Andre Saraiva, Tuomo Tanttu, Wister Huang, Kok-Wai Chan and Fay Hudson, all from Professor Dzurak\u2019s group, as well as long-time collaborators Dr Arne Laucht and Professor Andrea Morello from UNSW.\n Dr Kuan-Yen from Aalto University in Finland assisted the device fabrication team, while Professor Kohei Itoh from Keio University in Japan provided enriched silicon-28 wafers from which the devices were made. The qubit devices incorporated nano-scale magnets to help enable qubit operation, and these were designed with support from a team led by Professor Michel Pioro-Ladri\u00e8re at Universit\u00e9 de Sherbrooke in Canada, including his PhD student Julien Camirand Lemyre.", "posttime": "2020-05-31 08:58:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cf\u5b50,silicon", "title": "\u5f00\u5c14\u6587\u4ee5\u4e0a\u7845\u91cf\u5b50\u5904\u7406\u5668\u5355\u5143\u7535\u6c60\u7684\u5de5\u4f5c", "title_en": "Operation of a silicon quantum processor unit cell above one kelvin", "transed": 1, "url": "https://newsroom.unsw.edu.au/news/science-tech/hot-qubits-made-sydney-break-one-biggest-constraints-practical-quantum-computers", "via": "", "real_tags": ["\u91cf\u5b50", "silicon"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1004466, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a7a\u7206\u8bbe\u7f6e\uff1a[\uff1f]\u3002\u663e\u793a\u4ee5\u4e0b\u8d85\u538b\u73af\uff1a[\uff1f]3,000\u78c5/\u5e73\u65b9\u82f1\u5bf8(\u6467\u6bc1\u5bfc\u5f39\u63a9\u4f53)200\u78c5/\u5e73\u65b9\u82f1\u5bf8(\u6781\u5ea6\u4f24\u5bb3)20\u78c5/\u5e73\u65b9\u82f1\u5bf8(\u91cd\u5ea6\u4f24\u5bb3)5\u78c5/\u5e73\u65b9\u82f1\u5bf8(\u4e2d\u5ea6\u4f24\u5bb3)1\u78c5/\u5e73\u65b9\u82f1\u5bf8(\u8f7b\u5ea6\u4f24\u5bb3)\u5176\u4ed6\uff1apsi[+]\u3002\n\u663e\u793a\u4ee5\u4e0b\u7535\u79bb\u8f90\u5c04\u73af\uff1a[\uff1f]100\u96f7\u59c6(\u75be\u75c5\uff0c\u7ec8\u8eab\u764c\u75c7\u98ce\u9669\u589e\u52a0)500\u96f7\u59c6(\u6ca1\u6709\u533b\u7597\u62a4\u7406\u7684\u6b7b\u4ea1\u7387\u4e3a50-90%)600\u96f7\u59c6(\u6709\u533b\u7597\u62a4\u7406\u7684\u6b7b\u4ea1\u7387\u4e3a80%)1,000\u96f7\u59c6(\u6709\u533b\u7597\u62a4\u7406\u7684\u6b7b\u4ea1\u7387\u4e3a95%)5,000\u96f7\u59c6(100%\u6b7b\u4ea1\u7387)\u5176\u5b83\uff1a\u96f7\u59c6[+]\u3002\n\u663e\u793a\u4ee5\u4e0b\u5404\u9879\u7684\u70ed\u8f90\u5c04\u73af\uff1a[\uff1f]\u3002\u4e09\u5ea6\u70e7\u4f24(100%\u6982\u7387)\u4e09\u5ea6\u70e7\u4f24(50%\u6982\u7387)\u4e8c\u7ea7\u70e7\u4f24(50%\u6982\u7387)\u4e00\u7ea7\u70e7\u4f24(50%\u6982\u7387)100%\u4e0d\u70e7\u4f24\u7684\u6700\u5c0f\u534a\u5f84\u5e72\u71e5\u6728\u6750\u901a\u5e38\u70e7\u4f24(35\u5361/\u5398\u7c73\u00b2)\u5176\u4ed6\uff1a\u5361\u8def\u6570/\u5398\u7c73\u00b2[+]\u3002\n\u5176\u4ed6\u6548\u679c\uff1a\u706b\u7403\u9668\u77f3\u5751\u5760\u843d&amp\uff1brdsh\u98ce\u901f\uff1amph\uff0c\u539f\u70b9\u00b0(\u83b7\u53d6\u672c\u5730)&amp\uff1brdsh\u88c2\u53d8\u5206\u6570\uff1a%\u663e\u793a\u5706\u5f62\u8bef\u5dee\u53ef\u80fd\uff1a\u8611\u83c7\u4e91\u5c3a\u5bf8\u5bfc\u51fa\u5230Google Earth(KMZ)", "note_en": "Airburst settings:  [ ? ]     Show overpressure rings for:  [ ? ]  3,000 psi (destroys missile bunkers)    200 psi (extreme damage)    20 psi (heavy damage)    5 psi (medium damage)    1 psi (light damage)    Other:   psi   [+]\n  Show ionizing radiation rings for:  [ ? ]  100 rem (sickness, increased lifetime cancer risk)    500 rem (50-90% mortality without medical care)    600 rem (80% mortality with medical care)    1,000 rem (95% mortality with medical care)    5,000 rem (100% mortality)    Other:   rem   [+]\n  Show thermal radiation rings for:  [ ? ]  Third degree burns (100% probability)    Third degree burns (50% probability)    Second degree burns (50% probability)    First degree burns (50% probability)    Minimum radius for 100% probability of no burn    Dry wood usually burns (35 cal/cm\u00b2)    Other:   cal/cm\u00b2   [+]\n  Other effects:  Fireball    Crater      Fallout    &amp;rdsh wind speed:  mph, origin  \u00b0 ( get local )   &amp;rdsh fission fraction: %     Show  Circular Error Probable:        Mushroom cloud dimensions     Export to Google Earth (KMZ)", "posttime": "2020-05-31 08:57:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nukemap,\u96f7\u59c6", "title": "Nukemap", "title_en": "Nukemap", "transed": 1, "url": "https://nuclearsecrecy.com/nukemap/", "via": "", "real_tags": ["nukemap", "\u96f7\u59c6"]}, {"category": "", "categoryclass": "", "imagename": "62a29d5549ced8793820789694e20cd0.jpg", "infoid": 1004464, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerberg)\u5468\u4e94\u665a\u4e0a\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4ed6\u7684\u516c\u53f8\u4e0d\u4f1a\u5bf9\u7279\u6717\u666e\u603b\u7edf\u5a01\u80c1\u5728\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u201c\u62a2\u52ab\u201d\u4f1a\u5bfc\u81f4\u201c\u67aa\u51fb\u201d\u7684\u5e16\u5b50\u91c7\u53d6\u884c\u52a8\u3002\u8fd9\u4e00\u89e3\u91ca\u662f\u5728\u63a8\u7279\u91c7\u53d6\u884c\u52a8\u5927\u7ea616\u5c0f\u65f6\u540e\u505a\u51fa\u7684\uff0c\u5c3d\u7ba1\u624e\u514b\u4f2f\u683c\u4e4b\u524d\u66fe\u544a\u8bc9\u56fd\u4f1a\uff0cFacebook\u4e0a\u4e0d\u4f1a\u5bb9\u5fcd\u717d\u52a8\u66b4\u529b\u7684\u5e16\u5b50\u3002\n\u624e\u514b\u4f2f\u683c\u5728Facebook\u4e0a\u5199\u9053\uff1a\u201c\u6211\u77e5\u9053\u5f88\u591a\u4eba\u5bf9\u6211\u4eec\u4fdd\u7559\u603b\u7edf\u7684\u5e16\u5b50\u611f\u5230\u4e0d\u5b89\u3002\u201d\n\u7279\u6717\u666e\u5728Facebook\u3001Instagram\u548c\u63a8\u7279\u4e0a\u7684\u5e16\u5b50\u5199\u9053\uff1a\u201c\u8fd9\u4e9b\u66b4\u5f92\u73b7\u6c61\u4e86\u5bf9\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8bb0\u5fc6\uff0c\u6211\u4e0d\u4f1a\u8ba9\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f\u7684\u3002\u521a\u521a\u4e0e\u5dde\u957f\u8482\u59c6\u00b7\u6c83\u5c14\u5179\u901a\u8bdd\uff0c\u544a\u8bc9\u4ed6\u519b\u65b9\u4e00\u76f4\u4e0e\u4ed6\u540c\u5728\u3002\u4efb\u4f55\u56f0\u96be\uff0c\u6211\u4eec\u90fd\u4f1a\u627f\u62c5\u63a7\u5236\u6743\uff0c\u4f46\u662f\uff0c\u5f53\u62a2\u52ab\u5f00\u59cb\u65f6\uff0c\u5c04\u51fb\u5c31\u5f00\u59cb\u4e86\u3002\u8c22\u8c22\uff01\u201c\u3002\n\u5728\u8fd9\u7bc7\u5e16\u5b50\u53d1\u5e03\u540e\u7684\u4e24\u4e2a\u534a\u5c0f\u65f6\u5185\uff0cTwitter\u5728\u4e0a\u9762\u8d34\u4e0a\u4e86\u8b66\u544a\u6807\u7b7e\uff0c\u79f0\u5b83\u7f8e\u5316\u4e86\u66b4\u529b\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0cFacebook\u5728\u624e\u514b\u4f2f\u683c\u7684\u5e16\u5b50\u51fa\u73b0\u4e4b\u524d\uff0c\u5bf9\u6b64\u4e8b\u4fdd\u6301\u4e8618\u4e2a\u5c0f\u65f6\u7684\u6c89\u9ed8\u3002\n\u624e\u514b\u4f2f\u683c\u4e3a\u5728Facebook\u548cInstagram\u4e0a\u7559\u4e0b\u8fd9\u4e9b\u5e16\u5b50\u8fa9\u62a4\uff0c\u4ed6\u5199\u9053\uff1a\u201c\u6211\u4eec\u975e\u5e38\u4ed4\u7ec6\u5730\u67e5\u770b\u4e86\u8ba8\u8bba\u660e\u5c3c\u82cf\u8fbe\u5dde\u6297\u8bae\u6d3b\u52a8\u7684\u5e16\u5b50\uff0c\u4ee5\u8bc4\u4f30\u5b83\u662f\u5426\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u653f\u7b56\u3002\u867d\u7136\u8fd9\u7bc7\u5e16\u5b50\u6709\u4e00\u4e2a\u4ee4\u4eba\u4e0d\u5b89\u7684\u5386\u53f2\u53c2\u8003\uff0c\u4f46\u6211\u4eec\u51b3\u5b9a\u4fdd\u7559\u5b83\uff0c\u56e0\u4e3a\u56fd\u6c11\u8b66\u536b\u961f\u7684\u53c2\u8003\u610f\u5473\u7740\u6211\u4eec\u5c06\u5176\u89e3\u8bfb\u4e3a\u5bf9\u56fd\u5bb6\u884c\u52a8\u7684\u8b66\u544a\uff0c\u6211\u4eec\u8ba4\u4e3a\u4eba\u4eec\u9700\u8981\u77e5\u9053\u653f\u5e9c\u662f\u5426\u8ba1\u5212\u90e8\u7f72\u6b66\u529b\u3002\u6211\u4eec\u5173\u4e8e\u717d\u52a8\u66b4\u529b\u7684\u653f\u7b56\u5141\u8bb8\u56f4\u7ed5\u56fd\u5bb6\u4f7f\u7528\u6b66\u529b\u8fdb\u884c\u8ba8\u8bba\uff0c\u5c3d\u7ba1\u6211\u8ba4\u4e3a\u4eca\u5929\u7684\u60c5\u51b5\u63d0\u51fa\u4e86\u91cd\u8981\u7684\u95ee\u9898\uff0c\u5373\u8fd9\u79cd\u8ba8\u8bba\u7684\u6f5c\u5728\u9650\u5236\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u201c\u3002\n10\u6708\u4efd\uff0c\u624e\u514b\u4f2f\u683c\u5728\u56fd\u4f1a\u4f5c\u8bc1\u65f6\u8bf4\uff0c\u201c\u5982\u679c\u4efb\u4f55\u4eba\uff0c\u5305\u62ec\u4e00\u540d\u653f\u5ba2\uff0c\u8bf4\u51fa\u53ef\u80fd\u5bfc\u81f4\u7684\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u547c\u5401\u66b4\u529b\uff0c\u6216\u8005\u53ef\u80fd\u9762\u4e34\u8feb\u5728\u7709\u776b\u7684\u8eab\u4f53\u4f24\u5bb3\u7684\u98ce\u9669\u3002\u2026\u3002\u6211\u4eec\u4f1a\u64a4\u4e0b\u8fd9\u4e9b\u5185\u5bb9\u3002\u201c\u3002\u5f53\u4ed6\u63d0\u51fa\u8fd9\u4e00\u8981\u6c42\u65f6\uff0c\u4ed6\u6b63\u5728\u56de\u7b54\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u4e9a\u5386\u5c71\u5fb7\u91cc\u4e9a\u00b7\u5965\u5361\u897f\u5965-\u79d1\u5c14\u7279\u65af(Alexandria Ocasio-Cortez)\u7684\u95ee\u9898\u3002\n\u624e\u514b\u4f2f\u683c\u5728\u5468\u4e94\u7684\u5e16\u5b50\u4e2d\u6279\u8bc4Twitter\u5bf9\u7279\u6717\u666e\u5e16\u5b50\u7684\u5904\u7406\u65b9\u5f0f\u3002\n\u4ed6\u5199\u9053\uff1a\u201c\u4e0e\u63a8\u7279\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u5728\u53ef\u80fd\u717d\u52a8\u66b4\u529b\u7684\u5e16\u5b50\u524d\u653e\u7f6e\u8b66\u544a\u7684\u653f\u7b56\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\uff0c\u5982\u679c\u4e00\u7bc7\u5e16\u5b50\u717d\u52a8\u66b4\u529b\uff0c\u65e0\u8bba\u5b83\u662f\u5426\u6709\u65b0\u95fb\u4ef7\u503c\uff0c\u90fd\u5e94\u8be5\u88ab\u5220\u9664\uff0c\u5373\u4f7f\u5b83\u6765\u81ea\u4e00\u540d\u653f\u5ba2\u3002\u201d\n\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u624e\u514b\u4f2f\u683c\u6279\u8bc4\u63a8\u7279\u5bf9\u7279\u6717\u666e\u5728\u52a0\u5dde\u90ae\u5bc4\u9009\u7968\u7684\u865a\u5047\u58f0\u660e\u8fdb\u884c\u4e8b\u5b9e\u6838\u67e5\u3002\u624e\u514b\u4f2f\u683c\u5728\u798f\u514b\u65af\u65b0\u95fb\u4e0a\u53d1\u8868\u4e86\u4e0a\u8ff0\u8bc4\u8bba\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u624e\u514b\u4f2f\u683c\u5728\u4ed6\u7684\u5e16\u5b50\u4e2d\u8868\u793a\uff0c\u4ed6\u4e0d\u540c\u610f\u603b\u7edf\u7684\u5e16\u5b50\u3002\n\u201c\u6211\u6574\u5929\u90fd\u5728\u4e3a\u5982\u4f55\u56de\u5e94\u603b\u7edf\u7684\u63a8\u6587\u548c\u5e16\u5b50\u800c\u82e6\u82e6\u6323\u624e\u3002\u201c\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u5bf9\u8fd9\u79cd\u5206\u88c2\u548c\u717d\u52a8\u6027\u7684\u8a00\u8bba\u6709\u672c\u80fd\u7684\u8d1f\u9762\u53cd\u5e94\uff0c\u201d\u4ed6\u5199\u9053\uff0c\u5e76\u8865\u5145\u9053\uff0c\u201c\u4f46\u6211\u4e0d\u4ec5\u6709\u8d23\u4efb\u4ee5\u4e2a\u4eba\u8eab\u4efd\u505a\u51fa\u53cd\u5e94\uff0c\u800c\u4e14\u4f5c\u4e3a\u4e00\u4e2a\u81f4\u529b\u4e8e\u8a00\u8bba\u81ea\u7531\u7684\u673a\u6784\u7684\u9886\u5bfc\u4eba\uff0c\u6211\u4e5f\u6709\u8d23\u4efb\u505a\u51fa\u53cd\u5e94\u3002\u201d\n\u5728\u7ed3\u675f\u4ed6\u7684\u5e16\u5b50\u65f6\uff0c\u624e\u514b\u4f2f\u683c\u603b\u7ed3\u8bf4\uff1a\u201c\u4eba\u4eec\u53ef\u4ee5\u540c\u610f\u4e5f\u53ef\u4ee5\u4e0d\u540c\u610f\u6211\u4eec\u5e94\u8be5\u5728\u54ea\u91cc\u5212\u6e05\u754c\u9650\uff0c\u4f46\u6211\u5e0c\u671b\u4ed6\u4eec\u80fd\u7406\u89e3\u6211\u4eec\u7684\u603b\u4f53\u7406\u5ff5\u662f\uff0c\u516c\u5f00\u8ba8\u8bba\u66f4\u597d\uff0c\u7279\u522b\u662f\u5728\u98ce\u9669\u5982\u6b64\u4e4b\u9ad8\u7684\u60c5\u51b5\u4e0b\u3002\u6211\u5f3a\u70c8\u4e0d\u540c\u610f\u603b\u7edf\u5bf9\u6b64\u7684\u8bf4\u6cd5\uff0c\u4f46\u6211\u8ba4\u4e3a\u4eba\u4eec\u5e94\u8be5\u80fd\u591f\u4eb2\u773c\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6700\u7ec8\u53ea\u6709\u5f53\u5f53\u6743\u8005\u7684\u8a00\u8bba\u88ab\u516c\u5f00\u5ba1\u67e5\u65f6\uff0c\u4ed6\u4eec\u624d\u80fd\u627f\u62c5\u8d23\u4efb\u3002\u201c\u3002\nThe cnn-Wire\u2122&amp\uff1b\u00a92020\u6709\u7ebf\u65b0\u95fb\u7f51\u7edc\u516c\u53f8\uff0c\u662f\u534e\u7eb3\u5a92\u4f53\u516c\u53f8\u65d7\u4e0b\u7684\u4e00\u5bb6\u516c\u53f8\u3002\u7248\u6743\u6240\u6709\u3002", "note_en": "Facebook CEO Mark Zuckerberg explained Friday night why his company would take  no action on posts in which President Trump threatened \u201clooting\u201d in Minneapolis would lead to \u201cshooting.\u201d That explanation came roughly 16 hours after Twitter did take action and despite Zuckerberg\u2019s having previously told Congress that posts inciting violence would not be tolerated on Facebook.\n \u201cI know many people are upset that we\u2019ve left the President\u2019s posts up,\u201d Zuckerberg wrote in  a Facebook post.\n Trump\u2019s posts on Facebook, Instagram, and Twitter read, \u201cThese THUGS are dishonoring the memory of George Floyd, and I won\u2019t let that happen. Just spoke to Governor Tim Walz and told him that the Military is with him all the way. Any difficulty and we will assume control but, when the looting starts, the shooting starts. Thank you!\u201d\n Within two-and-a-half hours of the post, Twitter had placed a warning label on it saying it glorified violence.\n  Facebook, by contrast,  remained silent on the matter for 18 hours until Zuckerberg\u2019s post appeared.\n Justifying leaving the posts on Facebook and Instagram, Zuckerberg wrote, \u201cWe looked very closely at the post that discussed the protests in Minnesota to evaluate whether it violated our policies. Although the post had a troubling historical reference, we decided to leave it up because the National Guard references meant we read it as a warning about state action, and we think people need to know if the government is planning to deploy force. Our policy around incitement of violence allows discussion around state use of force, although I think today\u2019s situation raises important questions about what potential limits of that discussion should be.\u201d\n Testifying before Congress in October, Zuckerberg said, \u201cIf anyone, including a politician, is saying things that can cause, that is calling for violence or could risk imminent physical harm \u2026 we will take that content down.\u201d He was answering questions from Democratic Rep. Alexandria Ocasio-Cortez when he made the claim.\n In his post Friday, Zuckerberg criticized Twitter for its handling of Trump\u2019s posts.\n \u201cUnlike Twitter, we do not have a policy of putting a warning in front of posts that may incite violence because we believe that if a post incites violence, it should be removed regardless of whether it is newsworthy, even if it comes from a politician,\u201d he wrote.\n  Earlier in the week Zuckerberg had criticized Twitter for fact-checking Trump\u2019s false claims about mail-in ballots in California. Zuckerberg made those comments on Fox News.\n Even so, Zuckerberg said in his post that he did not agree with the President\u2019s post.\n \u201cI\u2019ve been struggling with how to respond to the President\u2019s tweets and posts all day. Personally, I have a visceral negative reaction to this kind of divisive and inflammatory rhetoric,\u201d he wrote, adding, \u201cBut I\u2019m responsible for reacting not just in my personal capacity but as the leader of an institution committed to free expression.\u201d\n Ending his post, Zuckerberg concluded, \u201cPeople can agree or disagree on where we should draw the line, but I hope they understand our overall philosophy is that it is better to have this discussion out in the open, especially when the stakes are so high. I disagree strongly with how the President spoke about this, but I believe people should be able to see this for themselves, because ultimately accountability for those in positions of power can only happen when their speech is scrutinized out in the open.\u201d\n The-CNN-Wire\u2122 &amp; \u00a9 2020 Cable News Network, Inc., a WarnerMedia Company. All rights reserved.", "posttime": "2020-05-31 08:56:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,finally,\u5e16\u5b50", "title": "\u624e\u514b\u4f2f\u683c\u7ec8\u4e8e\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48Facebook\u5bf9\u7279\u6717\u666e\u7684\u5e16\u5b50\u8896\u624b\u65c1\u89c2", "title_en": "Zuckerberg finally explains why Facebook is doing nothing about Trump\u2019s posts", "transed": 1, "url": "https://www.siliconvalley.com/2020/05/30/zuckerberg-finally-explains-why-facebook-is-doing-nothing-about-trumps-posts/", "via": "", "real_tags": ["facebook", "finally", "\u5e16\u5b50"]}]