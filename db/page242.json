[{"category": "", "categoryclass": "", "imagename": "0a5083e64c593302e7047850ed4449c8.jpeg", "infoid": 1003753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u4e00\u76f4\u5728\u8bd5\u7528\u6208\u591a\u6e38\u620f\u5f15\u64ce\uff0c\u6211\u770b\u5230\u7684\u4e1c\u897f\u7ed9\u6211\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\n\u867d\u7136\u5b83\u662f\u4e3a\u5236\u4f5c\u6e38\u620f\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u5728\u5236\u4f5c\u56fe\u5f62\u7528\u6237\u754c\u9762\u65b9\u9762\u6709\u4e00\u4e2a\u7279\u522b\u590d\u6742\u7684\u7cfb\u7edf\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u9ad8\u7ea7GUI\u5e94\u7528\u7a0b\u5e8f\u7684\u672a\u6765\u3002\u4e0d\u76f8\u4fe1\uff1f\n\u8bf7\u770b\u4e0b\u56fe\u3002\u8fd9\u662f\u6765\u81ea\u6208\u591a\u7f16\u8f91\u5668\u7684\u3002\u5b83\u770b\u8d77\u6765\u76f8\u5f53\u7cbe\u81f4\uff0c\u5bf9\u5427\uff1f\u4e2d\u95f4\u6709\u53ef\u89c6\u5316\u7f16\u7a0b\u7cfb\u7edf\u8282\u70b9\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u663e\u793a\u573a\u666f\u56fe\u7684\u6811\u3001\u5e26\u6709\u53ef\u8fc7\u6ee4\u5c5e\u6027\u7684\u68c0\u67e5\u5668\u3001\u4ee3\u7801\u7f16\u8f91\u5668\u3001\u5e73\u94fa\u5730\u56fe\u7f16\u8f91\u5668\u4ee5\u53ca\u5927\u91cf\u4e0d\u540c\u7684\u529f\u80fd\u3002\n\u4e0d\uff0c\u8fd9\u90fd\u662f\u7528\u6208\u591a\u6e38\u620f\u5f15\u64ce\u672c\u8eab\u5236\u4f5c\u7684\u3002\u4ed6\u4eec\u771f\u7684\u662f\u5728\u5403\u81ea\u5df1\u7684\u72d7\u7cae\u3002\u56e0\u6b64\uff0c\u60a8\u5728\u8fd9\u91cc\u770b\u5230\u7684\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u4f7f\u7528Godot\u5728\u60a8\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b8c\u6210\u3002\n\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u5de5\u5177\u627e\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u590d\u6742GUI\u3002\u4e00\u4e9b\u7ade\u4e89\u5bf9\u624b\u7684\u5f15\u64ce\u4f7f\u7528Qt\u6765\u5236\u4f5c\u5b83\u4eec\u7684\u7f16\u8f91\u5668\u3002\n\u5e26\u6709Engine End Editor\u7684\u6240\u6709Godot\u53ea\u9700\u4e0b\u8f7d31.1MB\u3002\u4e00\u952e\u5b89\u88c5\uff0c\u7f16\u8f91\u5668\u7acb\u5373\u542f\u52a8\u3002\n\u5f53\u6211\u89e3\u5305\u5e76\u5b89\u88c5\u65f6\uff0c\u5b83\u4ecd\u7136\u53ea\u670970MB\u5de6\u53f3\u3002\u4e0e\u60a8\u83b7\u5f97\u7684\u529f\u80fd\u6570\u91cf\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u7edd\u5bf9\u5fae\u4e0d\u8db3\u9053\u7684\u5b89\u88c5\u3002\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u770b\u8fd9\u4ef6\u4e8b\u3002\u4ec5\u4e0b\u8f7dQt5\uff0c\u5c31\u9700\u89815 GB\u7684\u53ef\u7528\u7a7a\u95f4\uff01\nQt Creator IDE\u975e\u5e38\u7b80\u7ea6\uff0c\u6ca1\u6709\u8fd0\u884c\u6240\u9700\u7684Qt\uff0c\u5b83\u9700\u8981\u8d85\u8fc7200MB\u7684\u7a7a\u95f4\u3002\nXcode\u600e\u4e48\u6837\uff1f\u4e0b\u8f7d\u91cf\u8d85\u8fc75 GB\u3002\u5b89\u88c5\u540e\uff0c\u5b83\u5728\u6211\u7684\u786c\u76d8\u4e0a\u5927\u7ea6\u9700\u898110 GB\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u8054\u8d5b\u3002Android Studio\u4e3a500MB\uff0cAndroid SDK\u4e3a1.5G\u3002\u8fd9\u4e9b\u4e1c\u897f\u90fd\u5f88\u5927\uff0c\u5c3d\u7ba1\u8fd8\u4e0d\u6e05\u695a\u5b83\u4eec\u662f\u5426\u63d0\u4f9b\u4e86\u6bd4Godot\u591a\u5f97\u591a\u7684\u529f\u80fd\u3002\n\u4ec5\u7528\u4e8e\u6f14\u793a\u5185\u5bb9\u7684Keynote\u6709433.5 MB\u7684\u5927\u5c0f\u3002\u8fd9\u53ef\u80fd\u4e0d\u5305\u62ec\u5171\u4eab\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770bGodot\u5728\u5927\u5c0f\u4e0a\u4e0e\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u76f8\u6bd4\u8f83\u30021\u5b89\u88c5\u7ba1\u7406\u5bc6\u7801\u7684\u5bc6\u7801\u4e3a55.5MB\u3002\u79bb\u6208\u591a\u5f88\u8fd1\u3002\u90ae\u4ef6\u7684\u5927\u5c0f\u7ea6\u4e3a30MB\uff0c\u7167\u7247\u7684\u5927\u5c0f\u7ea6\u4e3a50MB\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0cGodot\u7684\u5927\u5c0f\u975e\u5e38\u63a5\u8fd1\u4e8e\u529f\u80fd\u975e\u5e38\u6709\u9650\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4e0e\u6211\u4ee5\u524d\u4e60\u60ef\u7684\u8bbe\u8ba1\u76f8\u6bd4\uff0cGodot GUI\u8bbe\u8ba1\u7684\u901f\u5ea6\u5feb\u5f97\u8ba9\u4eba\u6293\u72c2\u3002\u5728\u6784\u5efaUI\u65f6\uff0c\u4ed6\u4eec\u786e\u5b9e\u4ed4\u7ec6\u8003\u8651\u4e86\u8fd9\u4e48\u591a\u5e38\u89c1\u95ee\u9898\u3002\n\u4f60\u53ef\u4ee5\u7528\u952e\u76d8\u5728\u8fd9\u68f5\u6811\u4e0a\u4e0a\u4e0b\u79fb\u52a8\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u7bad\u5934\u952e\u79fb\u52a8\u5230\u6211\u60f3\u8981\u6dfb\u52a0GUI\u7ec4\u4ef6\u7684\u5bb9\u5668\u6216\u9762\u677f\u3002\u7136\u540e\u6211\u53ef\u4ee5\u70b9\u51fbCmd+A(\u5728Mac\u4e0a)\u6253\u5f00\u4e00\u4e2a\u5bf9\u8bdd\u6846\u6765\u9009\u62e9GUI\u7ec4\u4ef6\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u5c55\u5f00\u663e\u793a\u5927\u91cf\u8282\u70b9\u7684\u5927\u6811\u3002\u4f46\u975e\u5e38\u6709\u6548\u7684\u662f\uff0c\u5f53\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\uff0c\u60a8\u4f1a\u7acb\u5373\u8fdb\u5165\u641c\u7d22\u680f\u3002\u6211\u53ef\u4ee5\u5f00\u59cb\u952e\u5165\u201cButton\u201d\u6765\u67e5\u770b\u5b58\u5728\u54ea\u4e9b\u7c7b\u4f3c\u8282\u70b9\u7684\u6309\u94ae\u3002\u5f53\u6211\u952e\u5165\u65f6\uff0c\u5217\u8868\u88ab\u8fc7\u6ee4\u3002\n\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7bad\u5934\u952e\u5728\u5217\u8868\u4e2d\u79fb\u52a8\u4ee5\u8fdb\u884c\u9009\u62e9\u3002\u5373\u4f7f\u6211\u90a3\u6837\u505a\u4e86\uff0c\u6211\u4e5f\u4e0d\u4f1a\u9519\u8fc7\u5bf9\u641c\u7d22\u680f\u7684\u5173\u6ce8\u3002\n\u56e0\u6b64\uff0c\u6211\u53ea\u9700\u9009\u62e9\u6211\u60f3\u8981\u7684\u8282\u70b9\uff0c\u7136\u540e\u6309Enter\u952e\u5373\u53ef\u3002\u5b83\u5c06\u4f5c\u4e3a\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u6211\u4e4b\u524d\u9009\u62e9\u7684\u8282\u70b9\u3002\n\u8fd9\u6837\uff0c\u6211\u5b8c\u5168\u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u7bad\u5934\u952e\u3001Cmd+A\u548cEnter\u6765\u6784\u5efaGUI\u3002\u5982\u679c\u6211\u5728\u7ec4\u4ef6\u4e0a\u6309Enter\u952e\uff0c\u6211\u53ef\u4ee5\u66f4\u6539\u5176\u540d\u79f0\u3002\u5982\u679c\u6211\u6309Cmd+D\uff0c\u6211\u4f1a\u590d\u5236\u5b83\u3002\u56e0\u6b64\uff0c\u6211\u4e0d\u9700\u8981\u6253\u5f00\u548c\u641c\u7d22\uff0c\u6bd4\u65b9\u8bf4\u6807\u7b7e\u591a\u6b21\u3002\u5982\u679c\u6211\u77e5\u9053\u6211\u9700\u898110\u4e2a\u6807\u7b7e\u3002\u6211\u53ef\u4ee5\u53ea\u505a\u4e00\u4e2a\u6807\u7b7e\uff0c\u7136\u540e\u590d\u523610\u6b21\u3002\n\u5728\u5404\u79cdUI\u8bbe\u8ba1\u5de5\u5177\u4e2d\uff0c\u6700\u8ba9\u6211\u6cae\u4e27\u7684\u4e8b\u60c5\u4e4b\u4e00\u662f\u9009\u62e9\u7531\u591a\u4e2a\u5176\u4ed6\u7ec4\u4ef6\u7ec4\u6210\u7684UI\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0c\u5728Qt Creator\u4e2d\uff0c\u6211\u4f1a\u7ecf\u5e38\u5c1d\u8bd5\u9009\u62e9\u5305\u542b\u5b50\u7ec4\u4ef6\u7684\u5e03\u5c40\uff0c\u53ea\u662f\u610f\u5916\u5730\u9009\u62e9\u4e86\u4e00\u4e2a\u5b50\u7ec4\u4ef6\u5e76\u5c06\u5176\u4ece\u5e03\u5c40\u4e2d\u62c9\u51fa\u3002\n\u5728Godot\u4e2d\uff0c\u610f\u5916\u9009\u62e9\u5b50\u7ec4\u4ef6\u4e0d\u662f\u95ee\u9898\u3002\u8bf7\u6ce8\u610f\u6211\u5728\u4e0b\u9762\u7684MarginContainer\u65c1\u8fb9\u7528\u7c89\u7ea2\u8272\u5708\u51fa\u7684\u5c0f\u56fe\u6807\u3002\u8fd9\u4e2a\u56fe\u6807\u88ab\u5207\u6362\u662f\u56e0\u4e3a\u6211\u4e4b\u524d\u70b9\u51fb\u4e86\u7528\u9ec4\u8272\u5708\u51fa\u7684\u5de5\u5177\u680f\u4e2d\u7684\u56fe\u6807\u3002\u8fd9\u6837\u5c31\u4e0d\u80fd\u5728\u753b\u5e03\u4e0a\u9009\u62e9\u5b50\u5bf9\u8c61\u3002\u6211\u4ecd\u7136\u53ef\u4ee5\u5728\u6811\u4e2d\u9009\u62e9\u5b83\u4eec\uff0c\u4f46\u662f\u5982\u679c\u5728\u5e03\u5c40\u65f6\u5355\u51fb\u7ec4\u4ef6\uff0c\u6211\u5c06\u83b7\u5f97\u7236\u7ec4\u4ef6\u3002\n\u8fd9\u771f\u7684\u5f88\u5b9e\u7528\uff0c\u56e0\u4e3a\u5b83\u4f7f\u5904\u7406\u5e03\u5c40\u53d8\u5f97\u5bb9\u6613\u3002\u5728\u5176\u4ed6\u7f16\u8f91\u5668\u4e2d\uff0c\u9009\u62e9\u5e03\u5c40\u53ef\u80fd\u5f88\u68d8\u624b\u3002\n\u5728\u4efb\u4f55\u9ad8\u7ea7GUI\u4e2d\uff0c\u60a8\u90fd\u9700\u8981\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u914d\u7f6e\u5927\u91cf\u7279\u6b8a\u7684\u81ea\u5b9a\u4e49GUI\u7ec4\u4ef6\uff0c\u4ee5\u9002\u5408\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u5bf9\u4f20\u7edf\u7684GUI\u8bbe\u8ba1\u8005\u6765\u8bf4\u4ece\u6765\u90fd\u4e0d\u662f\u4ef6\u597d\u4e8b\u3002\u60a8\u53ef\u4ee5\u5b50\u7c7b\u5316\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u4f46\u901a\u5e38\u5b83\u5728GUI\u7f16\u8f91\u5668\u4e2d\u53ea\u4f1a\u663e\u793a\u4e3a\u4e00\u4e2a\u7070\u8272\u77e9\u5f62\u3002\n\u5982\u679c\u5b83\u786e\u5b9e\u51fa\u73b0\u4e86\uff0c\u60a8\u5c31\u65e0\u6cd5\u5bf9\u5176\u8fdb\u884c\u8fc7\u591a\u914d\u7f6e\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u5fc5\u987b\u7528\u4ee3\u7801\u6765\u5b8c\u6210\u3002\u6208\u591a\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u3002\n\u6211\u8fc7\u53bb\u9047\u5230\u7684\u8bb8\u591a\u95ee\u9898\u963b\u788d\u4e86\u6211\u9ad8\u6548\u5730\u4f7f\u7528GUI\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4ed6\u4eec\u9884\u6599\u5230\u7684\u3002\n\u4f46\u4e5f\u8bb8\u771f\u6b63\u7684\u6740\u624b\u7ea7\u529f\u80fd\u662f\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u5e76\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u5176GUI\u5e03\u5c40\u548c\u9644\u52a0\u811a\u672c\u7684\u4ee3\u7801\uff0c\u8fd9\u4e9b\u66f4\u6539\u4f1a\u7acb\u5373\u53cd\u6620\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\n\u5f53\u7136\uff0c\u8fd9\u79cd\u60a8\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7f16\u8f91\u4ee3\u7801\u7684\u529f\u80fd\u4ee5\u67d0\u79cd\u5f62\u5f0f\u5b58\u5728\u4e8e\u8bb8\u591a\u5730\u65b9\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u7ecf\u9a8c\u4e0e\u6211\u7c7b\u4f3c\uff0c\u60a8\u77e5\u9053\uff0c\u5982\u679c\u60a8\u5904\u7406\u7f16\u8bd1\u8bed\u8a00\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5f80\u5f80\u975e\u5e38\u8106\u5f31\u548c\u6709\u9650\u3002\nGodot\u4f7f\u7528\u4e00\u79cd\u5e26\u6709Python\u8bed\u6cd5\u7684\u52a8\u6001\u8bed\u8a00\uff0c\u79f0\u4e3aGDScript\uff0c\u5b83\u662f\u4e13\u95e8\u4e3a\u4e0e\u7f16\u8f91\u5668\u96c6\u6210\u800c\u5b9a\u5236\u7684\u3002\u8fd9\u610f\u5473\u7740\u5b83\u662f\u4e3a\u5904\u7406\u91cd\u8f7d\u548c\u540c\u6b65\u800c\u8bbe\u8ba1\u7684\u3002\u4f60\u53ef\u4ee5\u770b\u51fa\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n\u8fd9\u662f\u4e00\u95e8\u8d85\u7ea7\u5bb9\u6613\u5b66\u7684\u8bed\u8a00\u3002\u6211\u57fa\u672c\u4e0a\u4e00\u5929\u5c31\u5b66\u4f1a\u4e86\u3002\u5b83\u4e0e\u53d1\u52a8\u673a\u975e\u5e38\u597d\u5730\u7ed3\u5408\u5728\u4e00\u8d77\u3002\n\u60a8\u53ef\u4ee5\u547d\u4ee4\u5355\u51fb\u4efb\u4f55\u5185\u5bb9\u4ee5\u8df3\u8f6c\u5230\u5176\u5b9a\u4e49\u6587\u6863\u3002\u4f60\u4f1a\u5f97\u5230\u5f88\u597d\u7684\u547d\u4ee4\u5b8c\u6210\u3002\u5c3d\u7ba1\u5b83\u4e0d\u662f\u4e00\u79cd\u771f\u6b63\u7684\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4f46\u5b83\u5728\u8bc6\u522b\u7c7b\u578b\u65b9\u9762\u975e\u5e38\u51fa\u8272\u3002\u5c31\u50cf\u73b0\u4ee3Python\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u60f3\u8981\u6539\u8fdb\u731c\u6d4b\u7684\u5730\u65b9\u6dfb\u52a0\u7c7b\u578b\u63d0\u793a\u3002\n\u5b83\u4e0d\u4ec5\u5b8c\u6210\u4e86\u7c7b\u578b\u540d\u79f0\u548c\u51fd\u6570\u540d\u79f0\u3002\u5f53\u60a8\u5c06\u8def\u5f84\u5199\u5165\u573a\u666f\u56fe\u4e2d\u7684\u8282\u70b9\u65f6\uff0c\u5b83\u751a\u81f3\u4f1a\u5b8c\u6210\u5b57\u7b26\u4e32\u3002\n\u5f53\u7136\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u4f7f\u7528\u50cfElectron\u3001Qt widgets\u3001Qt QML\u6216Cocoa\u8fd9\u6837\u7684\u5de5\u5177\u3002\u66ff\u4ee3\u65b9\u6848\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5b83\u4eec\u662f\u5de8\u5927\u7684\u3001\u81c3\u80bf\u7684\u3001\u7b28\u62d9\u7684\u91ce\u517d\u3002\n\u60f3\u60f3\u770b\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u67e5\u770b\u60a8\u6b63\u5728\u5904\u7406\u7684\u67d0\u4e2aGUI\uff0c\u60a8\u53ef\u4ee5\u5c06Godot\u9879\u76ee\u6587\u4ef6\u53d1\u9001\u7ed9\u4ed6\u4eec\uff0c\u800c\u8fd9\u4e9b\u6587\u4ef6\u53ea\u9700\u4e0b\u8f7d31MB\u5373\u53ef\u67e5\u770b\u3002\u54e6\uff0c\u6211\u6709\u6ca1\u6709\u544a\u8bc9\u8fc7\u4f60\uff0cGodot\u662f\u5b8c\u5168\u514d\u8d39\u7684\uff0c\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bb8\u53ef\u4e0b\uff1f\n\u6ca1\u9519\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u5b83\uff0c\u5e76\u4f7f\u7528Godot\u505a\u4efb\u4f55\u4ed6\u4eec\u60f3\u505a\u7684\u4e8b\u60c5\u3002\n\u8bd5\u7740\u8ba9\u4eba\u770b\u770b\u4f60\u505a\u7684Qt\u8bbe\u8ba1\u3002\u201c\u54ce\u5440\uff0c\u5bf9\u4e0d\u8d77\uff0c\u4f60\u9700\u89815 GB\u7684\u4e0b\u8f7d\u7a7a\u95f4\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u54e6\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4f60\u9700\u8981\u5728\u7f51\u7ad9\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\uff0c\u767b\u5f55\u5e76\u52aa\u529b\u641c\u7d22\u624d\u80fd\u627e\u5230\u514d\u8d39\u7248\u672c\u3002\u201c\u3002\n\u66f4\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u60a8\u4f7f\u7528Qt\u5c0f\u90e8\u4ef6\uff0c\u5b83\u5e94\u8be5\u7528\u4e8e\u5927\u578b\u4e13\u4e1aGUI\u5e94\u7528\u7a0b\u5e8f(\u8fd9\u662f\u6211\u5728\u8fd9\u91cc\u8ba8\u8bba\u7684\u4e3b\u9898)\uff0c\u90a3\u4e48\u60a8\u5fc5\u987b\u4f7f\u7528GUI\u8bbe\u8ba1\u5668\uff0c\u8fd9\u975e\u5e38\u7cdf\u7cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662f\u6211\u5236\u4f5c\u81ea\u5df1\u7684\u6807\u8bb0\u8bed\u8a00ERML\u7684\u539f\u56e0\uff0c\u53ea\u662f\u4e3a\u4e86\u5141\u8bb8\u5bf9Qt Creator\u7684GUI\u4ee5\u5916\u7684QtUI\u6587\u4ef6\u8fdb\u884c\u66f4\u5408\u7406\u7684\u7f16\u8f91\u3002\n\u4f60\u95ee\u4e3a\u4ec0\u4e48Qt Creator\u5f88\u70c2\uff1f\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u8bb8\u591a\u4e8b\u60c5\u3002\u9009\u62e9\u548c\u4f7f\u7528\u7ec4\u4ef6\u7684\u5d4c\u5957\u5e03\u5c40\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u800c\u4e14\u5bf9\u8c61\u6811\u7ed3\u6784\u4e0d\u5141\u8bb8\u60a8\u6267\u884c\u4efb\u4f55\u6709\u7528\u7684\u64cd\u4f5c\u3002\n\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u201c\u53ea\u5199\u201d\u7cfb\u7edf\u3002\u60a8\u53ef\u4ee5\u5f88\u597d\u5730\u5236\u4f5c\u4e00\u4e2a\u590d\u6742\u7684GUI\uff0c\u4f46\u795d\u60a8\u7a0d\u540e\u56de\u5230\u5b83\u5e76\u8fdb\u884c\u91cd\u5927\u4fee\u6539\u65f6\u597d\u8fd0\u3002\u4f60\u4f1a\u5f04\u574f\u5e03\u5c40\uff0c\u4f60\u4e0d\u4f1a\u8bb0\u5f97\u600e\u4e48\u628a\u5b83\u653e\u56de\u539f\u6765\u7684\u6837\u5b50\u3002\n\u800c\u4e14\u6ca1\u6709\u4e00\u79cd\u5408\u7406\u7684\u65b9\u6cd5\u6765\u5b9a\u4e49\u60a8\u60f3\u8981\u5728\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u3002\u5728\u6208\u591a\uff0c\u8fd9\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u60a8\u53ef\u4ee5\u5236\u4f5c\u7531\u5176\u4ed6\u7ec4\u4ef6\u7ec4\u6210\u7684\u4efb\u610f\u590d\u6742\u7ec4\u4ef6\uff0c\u5e76\u8f7b\u677e\u91cd\u7528\u5b83\u4eec\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5728Qt Creator\u4e2d\u590d\u5236\u7c98\u8d34\u4e00\u7ec4GUI\u7ec4\u4ef6\uff0c\u4f46\u662f\u5982\u679c\u60a8\u51b3\u5b9a\u8981\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u60a8\u5c31\u5b8c\u86cb\u4e86\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728Godot\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u60a8\u5236\u4f5c\u7684GUI\u7ec4\u4ef6\u96c6\u5408\u4f5c\u4e3a\u6a21\u677f\u3002\u66f4\u6539\u6a21\u677f\u4ee5\u53ca\u57fa\u4e8e\u8be5\u6a21\u677f\u66f4\u6539\u7684\u6240\u6709\u5176\u4ed6GUI\u7ec4\u4ef6\u3002\n\u66f4\u4e0d\u7528\u8bf4\u4f60\u4e0d\u80fd\u6539\u53d8\u4f60\u7684\u7528\u6237\u754c\u9762\u3002Qt C++\u9879\u76ee\u5f88\u5bb9\u6613\u83b7\u5f97\u975e\u5e38\u6162\u7684\u5468\u8f6c\u65f6\u95f4\uff0c\u8fd9\u5728\u5236\u4f5cGUI\u65f6\u4f1a\u5b8c\u5168\u627c\u6740\u751f\u4ea7\u529b\u3002\n\u90a3\u4e48QML\u5462\uff1f\u5b83\u89e3\u51b3\u4e86\u8bb8\u591a\u95ee\u9898\uff0c\u5e76\u5229\u7528\u52a8\u6001\u8bed\u8a00\u4f7f\u52a8\u6001\u7c7b\u578b\u7684\u66f4\u6539\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\n\u8001\u5b9e\u8bf4\uff0c\u5173\u4e8eQML\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6211\u4e0d\u8bb0\u5f97\u592a\u591a\u7ec6\u8282\u3002\u6211\u53ea\u8bb0\u5f97\u8fd9\u5e76\u4e0d\u50cf\u6211\u5e0c\u671b\u7684\u90a3\u6837\u76f4\u89c2\u3002\u7f16\u8f91\u82b1\u4e86\u6211\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u624d\u628a\u6211\u7684\u5934\u8111\u5f04\u6e05\u695a\uff0c\u771f\u7684\u4e00\u70b9\u4e5f\u4e0d\u5149\u9c9c\u3002\n\u5f88\u591a\u4e1c\u897f\u90fd\u611f\u89c9\u5f88\u6162\u3002\u6211\u505a\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u6548\u679c\u4e0d\u662f\u5f88\u597d\u3002\u5f53\u6211\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u65f6\uff0c\u5373\u4f7f\u662f\u76f8\u5f53\u7b80\u5355\u7684\u4e1c\u897f\u5728\u91cd\u65b0\u7ed8\u5236\u65f6\u4e5f\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u3002\u4e5f\u8bb8\u662f\u56e0\u4e3a\u5b83\u662f\u4e3a\u79fb\u52a8\u8bbe\u5907\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u9488\u5bf9\u6539\u53d8\u5927\u5c0f\u7684\u7a97\u53e3\u8fdb\u884c\u4f18\u5316\uff1f\u6211\u4e0d\u77e5\u9053\u3002\n\u5c3d\u7ba1\u8003\u4e86\u5f88\u591a\u6b21\uff0c\u6211\u7684\u7ed8\u753b\u8fd8\u662f\u6ca1\u6709\u62ff\u5230\u50cf\u6837\u7684\u6210\u7ee9\u3002\u4f46\u6700\u5927\u7684\u6740\u624b\u53ef\u80fd\u662f\u6ca1\u6709\u4e00\u5957\u5168\u9762\u7684\u9ad8\u7ea7\u5c0f\u90e8\u4ef6\u6765\u6784\u5efa\u9ad8\u7ea7GUI\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5f53\u6211\u4f7f\u7528SWIFT\u5728Xcode\u4e2d\u5904\u7406iOS\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u4f7f\u7528\u8fc7\u57fa\u4e8e\u7ea6\u675f\u7cfb\u7edf\u7684\u5e03\u5c40\u7ba1\u7406\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u548c\u5148\u8fdb\u7684\u7cfb\u7edf\u3002\n\u8d77\u521d\uff0c\u6211\u8ba4\u4e3a\u8fd9\u771f\u7684\u662f\u524d\u8fdb\u7684\u65b9\u5411\u3002\u7136\u800c\uff0c\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u5b83\u592a\u590d\u6742\u4e86\uff0c\u65e0\u6cd5\u5904\u7406\u3002\u5373\u4f7f\u5bf9\u4e8e\u7b80\u5355\u7684\u5c4f\u5e55\uff0c\u6211\u6709\u65f6\u4e5f\u4f1a\u9047\u5230\u975e\u5e38\u590d\u6742\u7684\u7ea6\u675f\uff0c\u8fd9\u53ef\u80fd\u5f88\u96be\u8c03\u8bd5\u3002\n\u867d\u7136\u6211\u5728Xcode\u548cSwift\u4e0a\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u4f46\u4e5f\u8bb8\u68c0\u9a8c\u5b83\u662f\u5426\u6709\u6548\u7684\u6700\u7ec8\u6d4b\u8bd5\u662f\uff0c\u5728\u79bb\u5f00\u5b83\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4f60\u82b1\u4e86\u591a\u5c11\u65f6\u95f4\u518d\u6b21\u6295\u5165\u5176\u4e2d\u3002\n\u8fd9\u5bf9\u6211\u6765\u8bf4\u4e0d\u592a\u7ba1\u7528\u3002\u6211\u65e0\u6cd5\u7406\u89e3\u6211\u8fc7\u53bb\u505a\u8fc7\u7684\u5f88\u591a\u4e8b\u60c5\u3002\u65af\u5a01\u592b\u7279\u53d8\u5f97\u592a\u590d\u6742\u4e86\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u8bed\u8a00\uff0c\u4f46\u8bbd\u523a\u7684\u662f\uff0c\u5b83\u6b63\u5728\u5f00\u53d1\u4e00\u4e9b\u4e0eC++\u548cHaskell\u76f8\u540c\u7684\u95ee\u9898\u3002\u7c7b\u578b\u7cfb\u7edf\u7684\u590d\u6742\u6027\u548c\u4e25\u683c\u6027\u6709\u70b9\u592a\u9891\u7e41\u4e86\u3002\n\u8fd9\u662f\u4e00\u628a\u53cc\u5203\u5251\u3002\u5f53\u6211\u5f00\u59cb\u4f7f\u7528SWIFT\u65f6\uff0c\u6211\u559c\u6b22\u5f3a\u5927\u7684\u6253\u5b57\u80fd\u529b\u6355\u6349\u5230\u4e86\u8bb8\u591a\u9519\u8bef\u3002\u4f46\u5b83\u603b\u662f\u5e26\u7740\u4e00\u79cd\u590d\u6742\u7684\u611f\u89c9\uff0c\u56e0\u4e3a\u4e0e\u7c7b\u578b\u7cfb\u7edf\u7684\u6597\u4e89\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u3002\u73b0\u5728\uff0c\u60c5\u51b5\u4f3c\u4e4e\u53d8\u5f97\u66f4\u7cdf\u4e86\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u95ed\u5305\u65f6\u3002\n\u6574\u4e2a\u8bbe\u7f6e\u5f88\u5bb9\u6613\u8ba9\u4f60\u7cbe\u795e\u8d85\u8d1f\u8377\u3002\u6211\u65e0\u6cd5\u6709\u6548\u5730\u4f7f\u7528\u8be5\u7cfb\u7edf\uff0c\u56e0\u4e3a\u6211\u65e0\u6cd5\u5c06\u60a8\u9700\u8981\u4e86\u89e3\u7684\u6240\u6709\u5185\u5bb9\u90fd\u4fdd\u5b58\u5728\u6211\u7684\u8111\u6d77\u4e2d\u3002\nSwiftUI\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u9009\u62e9\u3002\u5b83\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u9075\u5faa\u4e0eQML\u76f8\u540c\u7684\u65b9\u6cd5\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u6a21\u5f0f\u3002\u6211\u4e0d\u53cd\u5bf9QML\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5b83\u662f\u4e2a\u574f\u4e3b\u610f\uff0c\u53ea\u662f\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5b83\u6267\u884c\u5f97\u4e0d\u597d\u3002\n\u6211\u53ea\u77ed\u6682\u5730\u4f7f\u7528\u8fc7SwiftUI\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u660e\u663e\u7684\u8fdb\u6b65\uff0c\u4f46\u6211\u89c9\u5f97\u5b83\u4ecd\u7136\u6ca1\u6709\u6208\u591a\u90a3\u4e48\u597d\u3002\u867d\u7136\u60a8\u83b7\u5f97\u4e86GUI\u7ec4\u4ef6\u7684GUI\u68c0\u67e5\u5668\u9762\u677f\uff0c\u4f46\u60a8\u4ecd\u7136\u88ab\u8feb\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7528\u4ee3\u7801\u7f16\u5199GUI\u3002\u6211\u8ba4\u4e3aGUI\u7f16\u8f91\u5e94\u8be5\u540c\u65f6\u652f\u6301\u4e24\u8005\u3002GUI\u8bbe\u8ba1\u662f\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u8fc7\u7a0b\uff0cIMHO\u3002\n\u4e5f\u8bb8\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4eba\u4eec\u4ecd\u7136\u6ca1\u6709\u80fd\u529b\u5bf9\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5b9e\u65f6\u66f4\u6539\u548c\u4fee\u6539\u3002\u5bf9\u4e8e\u5305\u542b\u5927\u578b\u9879\u76ee\u7684\u590d\u6742GUI\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5fc5\u987b\u5728\u8fdb\u884c\u6d4b\u8bd5\u4e4b\u524d\u52a0\u8f7d\u8fd9\u4e9b\u9879\u76ee\uff0c\u8fd9\u662f\u4e00\u4e2a\u6740\u624b\u950f\u3002\n\u867d\u7136\u6211\u4ece\u6765\u4e0d\u559c\u6b22\u7f51\u7edc\u5f00\u53d1\uff0c\u4f46\u6211\u5fc5\u987b\u627f\u8ba4\u5b83\u4e5f\u6709\u4eba\u7c7b\u7684\u597d\u5904\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5b9e\u65f6\u7f16\u8f91\u548c\u66f4\u6539\u5c5e\u6027\uff0c\u5e76\u67e5\u770b\u5bf9GUI\u7684\u5373\u65f6\u66f4\u6539\u3002\n\u8fd9\u771f\u7684\u5f88\u590d\u6742\u3002\u5b66\u4e60HTML5\u548cCSS\u5b9e\u9645\u4e0a\u662f\u4e00\u9879\u76f8\u5f53\u5927\u7684\u65f6\u95f4\u6295\u8d44\u3002\u66f4\u4f20\u7edf\u7684GUI\u5de5\u5177\u5305\u5f80\u5f80\u8981\u5c0f\u5f97\u591a\uff0c\u4e5f\u66f4\u5bb9\u6613\u5b66\u4e60\u3002\n\u5b83\u662f\u4e3a\u7f51\u9875\u5236\u4f5c\u7684\uff0c\u800c\u4e0d\u662f\u5e94\u7528\u7a0b\u5e8f\u3002\u5f53\u6211\u8bd5\u56fe\u4e3a\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5236\u4f5cGUI\u65f6\uff0c\u6211\u53d1\u73b0\u6211\u7ecf\u5e38\u9047\u5230\u5047\u8bbe\u6211\u4eec\u5728\u67d0\u4e2a\u53ef\u6eda\u52a8\u7684\u7f51\u9875\u4e0a\u7684\u5047\u8bbe\u6240\u5e26\u6765\u7684\u9650\u5236\u3002\n\u540e\u8005\u9700\u8981\u4e00\u4e9b\u89e3\u91ca\u3002\u521b\u5efa\u53ef\u91cd\u7528\u7ec4\u4ef6\u7684Web\u65b9\u5f0f\u662f\u901a\u8fc7\u67d0\u79cd\u6a21\u677f\u3002\u57fa\u672c\u4e0a\uff0c\u60a8\u53ea\u9700\u590d\u5236\u7c98\u8d34\u4e00\u5927\u5757HTML\uff0c\u591a\u6b21\u8868\u793a\u65b0\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u5373\u53ef\u3002\n\u8fd9\u610f\u5473\u7740\u60a8\u901a\u5e38\u901a\u8fc7\u6a21\u677f\u5f15\u64ce\u5de5\u4f5c\uff0c\u60a8\u6b63\u5728\u7f16\u5199\u7684\u5185\u5bb9\u548cWeb\u6d4f\u89c8\u5668\u4e2d\u6b63\u5728\u8fdb\u884c\u7684\u64cd\u4f5c\u4e4b\u95f4\u6ca1\u6709\u4e00\u5bf9\u4e00\u7684\u6620\u5c04\u3002\n\u8fd9\u4e0eGodot\u5f62\u6210\u5bf9\u6bd4\uff0c\u4f8b\u5982\uff0c\u4ece\u5f00\u53d1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u5e76\u5b9e\u4f8b\u5316\u5b83\u3002\u5f53\u6211\u5728\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8fdb\u884c\u5b9e\u65f6\u4fee\u6539\u65f6\uff0c\u8fd9\u4e9b\u4e8b\u60c5\u662f\u76f8\u540c\u7684\u3002\u6211\u5728\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u5f97\u4e86\u4e0e\u6211\u7f16\u7801\u65f6\u76f8\u540c\u7684\u8282\u70b9\u3002\u8fd9\u5728\u6574\u4e2a\u5f80\u8fd4\u8fc7\u7a0b\u4e2d\u90fd\u6709\u5e2e\u52a9\uff0c\u5e76\u964d\u4f4e\u4e86\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u7684\u5fc3\u7406\u590d\u6742\u6027\u3002\n\u73b0\u5728\uff0c\u4f7f\u7528\u6e38\u620f\u5f15\u64ce\u6765\u5236\u4f5c\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u5f88\u75af\u72c2\uff0c\u56e0\u4e3a\u7531\u4e8e\u9700\u8981\u4e0d\u65ad\u6e32\u67d3\uff0c\u5b83\u786e\u5b9e\u7a83\u53d6\u4e86\u66f4\u591a\u7684CPU\u5468\u671f\u3002\u7136\u800c\uff0c\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u8fd9\u4e0e\u57fa\u4e8eWeb\u7684\u5e94\u7528\u7a0b\u5e8f\u76f8\u6bd4\u5c31\u76f8\u5f62\u89c1\u7ecc\u4e86\u3002\n\u50cfVSCode\u548cAtom\u8fd9\u6837\u7684\u7f16\u8f91\u5668\u8868\u660e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Web\u6280\u672f\u5236\u4f5c\u4e00\u4e9b\u5f88\u68d2\u7684\u4e1c\u897f\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e5f\u6709\u50cf\u5931\u7720\u6e38\u620f\u8fd9\u6837\u7684\u516c\u53f8\uff0c\u4ed6\u4eec\u5c1d\u8bd5\u7528\u7f51\u7edc\u5de5\u5177\u5236\u4f5c\u4ed6\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u7f16\u8f91\u5668\u3002\n\u90a3\u57fa\u672c\u4e0a\u662f\u4e00\u6b21\u5931\u8d25\u7684\u5b9e\u9a8c\u3002\u4ed6\u4eec\u6240\u770b\u5230\u7684\u95ee\u9898\u662f\uff0c\u5b83\u5728\u5236\u4f5c\u590d\u6742\u7684\u81ea\u5b9a\u4e49GUI\u7ec4\u4ef6\u65b9\u9762\u5de5\u4f5c\u5f97\u592a\u5dee\u4e86\u3002\u4eca\u5929\u5927\u591a\u6570Web\u6280\u672f\u7684\u4f7f\u7528\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0cAtom\u6ca1\u6709\u5e26\u8272\u8f6e\u7684\u989c\u8272\u9009\u62e9\u529f\u80fd\u3002\n\u4f7f\u7528\u6e38\u620f\u5f15\u64ce\u6765\u5236\u4f5cGUI\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u5f88\u75af\u72c2\u3002\u4eba\u4eec\u53ef\u80fd\u4f1a\u672c\u80fd\u5730\u89c9\u5f97\u8fd9\u6837\u505a\u662f\u9519\u8bef\u7684\u3002\n\u4f46\u6211\u8ba4\u4e3a\uff0c\u4e16\u754c\u53ef\u80fd\u4f1a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7ed3\u675f\uff0c\u8fd9\u662f\u6709\u5f88\u597d\u7684\u7406\u7531\u7684\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u94b1\u5728\u54ea\u91cc\uff0c\u6709\u4ec0\u4e48\u6fc0\u52b1\u63aa\u65bd\u5728\u53d1\u6325\u4f5c\u7528\u3002\n\u535a\u5f69\u4e1a\u89c4\u6a21\u5de8\u5927\u3002\u4eca\u5929\u7684\u6e38\u620f\u5177\u6709\u5de8\u5927\u7684\u590d\u6742\u6027\uff0c\u53ef\u4ee5\u4e0e\u5927\u591a\u6570\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u76f8\u5ab2\u7f8e\u3002\u6e38\u620f\u5f00\u53d1\u9762\u4e34\u7740\u4e00\u4e9b\u76f8\u5f53\u6b8b\u9177\u7684\u751f\u5b58\u6761\u4ef6\u3002\n\u5b83\u4eec\u5fc5\u987b\u5141\u8bb8\u5f00\u53d1\u975e\u5e38\u9ad8\u6027\u80fd\u7684\u4ee3\u7801\uff0c\u8fd9\u6837\u624d\u80fd\u4ece\u60a8\u7684\u8ba1\u7b97\u673a\u4e2d\u69a8\u53d6\u6bcf\u4e00\u5206\u6027\u80fd\u3002\u4ed6\u4eec\u5fc5\u987b\u5728\u8fed\u4ee3\u7684\u540c\u65f6\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u5236\u4f5c\u6e38\u620f\u65f6\uff0c\u5b9e\u9a8c\u5fc5\u987b\u975e\u5e38\u5feb\u901f\u548c\u7b80\u5355\u3002\u6e38\u620f\u51e0\u4e4e\u662f\u88ab\u5b9a\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u4f60\u53ef\u4ee5\u9884\u5148\u660e\u786e\u5b9a\u4e49\u7684\u3002\u8981\u60f3\u8ba9\u6e38\u620f\u53d8\u5f97\u6b63\u786e\uff0c\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8c03\u6574\u3001\u5b9e\u9a8c\u548c\u6e38\u620f\u3002\n\u8fd9\u4f7f\u5f97\u6e38\u620f\u5f15\u64ce\u89e3\u51b3\u4e86\u6211\u4eec\u8fd9\u4e9b\u4ece\u4e8b\u5927\u578b\u590d\u6742GUI\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u4eba\u6240\u9762\u4e34\u7684\u95ee\u9898\u3002\u5b9e\u65f6\u4fee\u6539\u8fd0\u884c\u4ee3\u7801\u5728\u6e38\u620f\u5f15\u64ce\u4e16\u754c\u4e2d\u662f\u5f88\u6b63\u5e38\u7684\u4e8b\u60c5\u3002\u5b83\u5fc5\u987b\u662f\u3002\u4f60\u4e0d\u80fd\u5728\u6bcf\u6b21\u4f60\u60f3\u8981\u8c03\u6574\u67d0\u4e2a\u4f60\u6b63\u5728\u5c1d\u8bd5\u7684\u7279\u5b9a\u7ea7\u522b\u7684\u4e1c\u897f\u65f6\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u8be5\u6b7b\u7684\u4e1c\u897f\u3002\n\u628a\u8fd9\u4e00\u70b9\u4e0e\u6295\u5165\u5230\u8fd9\u4e2a\u95ee\u9898\u4e0a\u7684\u5de8\u989d\u8d44\u91d1\u7ed3\u5408\u8d77\u6765\u3002\u5927\u578b\u590d\u6742\u7684GUI\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5229\u57fa\u5e02\u573a\uff0c\u800c\u6e38\u620f\u5219\u4e0d\u662f\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e3a\u673a\u5668\u4eba\u5236\u9020\u6a21\u62df\u5668\u7684\u4eba\u6700\u7ec8\u6539\u7528\u6e38\u620f\u5f15\u64ce\u7684\u539f\u56e0\u3002\u5f15\u64ce\u5e02\u573a\u610f\u5473\u7740\u6e38\u620f\u5f15\u64ce\u5728\u8d28\u91cf\u3001\u6027\u80fd\u548c\u6613\u7528\u6027\u4e0a\u8fdc\u8fdc\u8d85\u8fc7\u673a\u5668\u4eba\u6a21\u62df\u5668\u3002\n\u7531\u4e8e\u89c4\u6a21\u7ecf\u6d4e\u7684\u539f\u56e0\uff0c\u8fd9\u79cd\u5229\u7528\u770b\u4f3c\u65e0\u5173\u7684\u5947\u602a\u4e1c\u897f\u7684\u65b9\u5f0f\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\u3002\u4f8b\u5982\uff0c\u7279\u65af\u62c9\u7684\u7406\u5ff5\u662f\uff0c\u4ed6\u4eec\u6ca1\u6709\u4f7f\u7528\u5b9a\u5236\u7684\u6c7d\u8f66\u7535\u6c60\u5236\u9020\u6c7d\u8f66\uff0c\u800c\u662f\u9009\u62e9\u4e86\u4e00\u4e2a\u770b\u4f3c\u75af\u72c2\u7684\u60f3\u6cd5\uff0c\u4f7f\u75287000\u4e2a\u7b14\u8bb0\u672c\u7535\u8111\u7535\u6c60\u4e3a\u4ed6\u4eec\u7684\u6c7d\u8f66\u63d0\u4f9b\u52a8\u529b\u3002\n\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u8352\u8c2c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5b83\u594f\u6548\u4e86\uff0c\u56e0\u4e3a\u6807\u6709\u6807\u7b7e\u7684\u7b14\u8bb0\u672c\u7535\u8111\u592a\u5927\u4e86\uff0c\u8fd9\u4f7f\u5f97\u7b14\u8bb0\u672c\u7535\u8111\u7684\u7535\u6c60\u771f\u7684\u5f88\u597d\u5f88\u4fbf\u5b9c\u3002\n\u6211\u8ba4\u4e3a\u8fd9\u5c06\u4f1a\u53d1\u751f\u5728\u4f20\u7edf\u7684GUI\u5de5\u5177\u7bb1\u4e2d\u3002\u4ed6\u4eec\u5c06\u843d\u540e\u4e8e\u9ad8\u5ea6\u7ade\u4e89\u7684\u6e38\u620f\u5f15\u64ce\u4e16\u754c\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u4f7f\u7528\u6e38\u620f\u5f15\u64ce\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u7ecf\u5e38\u6e32\u67d3\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u66f4\u9ad8\u7684\u6052\u5b9aGPU\u548cCPU\u4f7f\u7528\u7387\u3002\u8fd9\u4f7f\u5f97\u8be5\u89e3\u51b3\u65b9\u6848\u5bf9\u4e8e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u5e76\u4e0d\u7406\u60f3\u3002\u4f46\u662f\u7b80\u5355\u7684GUI\u53ef\u4ee5\u7528\u4e0d\u90a3\u4e48\u590d\u6742\u7684\u6280\u672f\u6765\u5904\u7406\u3002\n\u53ef\u4ee5\u8c03\u6574\u5f15\u64ce\u4ee5\u51cf\u5c11GPU\u548cCPU\u4f7f\u7528\u91cf\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u590d\u6742\u7684GUI\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u5f88\u53ef\u80fd\u8981\u8fdb\u884c\u67d0\u79cd\u7e41\u91cd\u7684\u6e32\u67d3\u3002\u4e8b\u4ef6\u7cfb\u7edf\u901a\u5e38\u4f1a\u53d8\u5f97\u5982\u6b64\u590d\u6742\uff0c\u56e0\u6b64\u4fdd\u6301\u6e32\u67d3\u5e27\u6bd4\u5c1d\u8bd5\u5904\u7406\u60a8\u65e0\u6cd5\u63a7\u5236\u4f55\u65f6\u89e6\u53d1\u7684\u4e1b\u6797\u4e8b\u4ef6\u8981\u5bb9\u6613\u5f97\u591a\u3002\nGUI\u548c\u7ec4\u4ef6\u4e4b\u95f4\u7684\u540c\u6b65\u72b6\u6001\u53ef\u80fd\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u91cd\u590d\u6e32\u67d3\u6765\u7701\u53bb\u5f88\u591a\u9ebb\u70e6\uff0c\u5e76\u907f\u514d\u590d\u6742\u7684\u66f4\u65b0\u7cfb\u7edf\u3002\u5bf9\u4e8e\u590d\u6742\u7684GUI\u5e94\u7528\u7a0b\u5e8f\uff0cEven\u7cfb\u7edf\u53ef\u80fd\u4f1a\u964d\u4f4e\u6027\u80fd\uff0c\u56e0\u4e3a\u6700\u7ec8\u4f1a\u6709\u592a\u591a\u4e8b\u4ef6\u6392\u961f\u3002", "note_en": "I have been trying out the  Godot Game Engine lately, and I have been mightily impressed with what I see.\n While it was designed to make games, has an exceptionally sophisticated system for making graphical user interfaces. I think this is the future for advanced GUI applications. Not convinced?\n Look at the the image below. This is from the Godot Editor. It looks pretty sophisticated right? You got visual programming system nodes in the middle, resource management, a tree showing a scene graph, inspector with properties you can filter, code editor, tile map editor and just tons of different functionality.\n   No, this was all made with the Godot Game Engine itself. They are really eating their own dog food. So everything you see here you can accomplish in your own application using Godot.\n Sure you can find sophisticate GUIs like this through other tools. E.g. some of the competing engines use Qt to make their editor.\n   All of Godot with Engine end Editor is a mere 31.1 MB download. One click installation and the editor launches instantly.\n When I unpack and install it is still just around 70 MB. That is an absolutely tiny install relative to the amount of functionality you get. Let us put this a bit in perspective. Merely downloading Qt5, requires 5 GB of free space!\n The Qt Creator IDE which is quite minimalist without Qt which it requires to run, requires over 200 MB.\n How about Xcode? Downloading it is over 5 GB. After installation it takes around 10 GB on my hard drive. That is a different league altogether. Android Studio is 500 MB, and Android SDK is 1.5 GB. These things are big, despite the fact that it is not clear that they offer significantly more functionality than Godot.\n Keynote which is just for presenting stuff comes in at a hefty 433.5 MB. And that probably excludes shared frameworks, it uses.\n Let is look at what kind of applications Godot compares with in size. 1Password which manages passwords is 55.5 MB installed. Quite close to Godot. Mail is about 30 MB, Photos 50 MB.\n In other words Godot is in size much close to applications with a very narrow set of functionality.\n  Godot GUI design is insanely fast to work with compared to what I have been used to before. They have really thought through so many of the common problems when constructing a UI.\n   You can move up and down this tree with the keyboard. So I can e.g. use the arrow keys to move to a container or panel I wish to add a GUI component to. Then I can hit  Cmd+A (on Mac) to open up a dialog to select a GUI component.\n   Now you can expand a large tree showing tons of nodes here using the mouse. But what is very efficient is that when the dialog opens you are immediately in the search bar. I can start typing \u201cButton\u201d to see what button like nodes exist. As I am typing the list gets filtered.\n While this is happening I can at the same time move in list with my arrow keys to make a selection. I don\u2019t miss focus on the search bar even if I do that.\n So I can just select the node I want and hit enter. It get added as a child to the node I had selected earlier.\n This way I use the keyboard entirely with arrow keys,  Cmd+A and  Enter to build up a GUI. If I hit enter on a component I can change its name. If I hit  Cmd+D I duplicate it. Hence I don&#39;t need to open and search for say a label multiple times. If I know I need 10 labels. I can just make one label and duplicate it 10 times.\n   One of the most frustrating things for me in various UI design tools is selecting UI components made up of multiple other components. E.g. in Qt Creator I would frequently try to select a layout containing child components only accidentally selecting a child component and pulling it out of the layout.\n In Godot accidentally selecting a child component is not a problem. Notice the little icon I have circled in pink next to the  MarginContainer below. This icon got toggled because I had earlier clicked on the icon in the toolbar circled in yellow. It makes it so children cannot be selected on the canvas. I can still select them in the tree, but if I click on the component as it is laid out I will get the parent instead.\n  This is really practical because it makes it easy to deal with layouts. In other editors selecting a layout can be tricky.\n  In any advanced GUI you will need a lot of special customized GUI components configured in particular ways to fit your application.\n This  never plays nice with traditional GUI designers. You may be able to subclass a component but often it will just show up as a gray rectangle in the GUI editor.\n And if it does show up, you cannot configure it much. Everything will typically have to be done in code. Not so with Godot.\n In the image below you can see we have attached a script to the node called  ColorPicker which is of type  OptionButton. Attaching a script to a node in Godot is the equivalent to subclassing that node. That is why you can see the script code says  extends OptionButton.\n OptionButton is a dropdown menu. Out of the box Godot does not have any mechanism in the GUI for specifying what elements it should contain.\n  However we can add our own properties to the Godot Editor\u2019s inspector for any scene node object. You see in highlight I have written this code line:\n  This tells Godot that the member variable  itemvalues should be visible in the Godot editor. I also tell it that it is an  Array with  String elements. The language used GDScript is dynamically typed so these are more like hints.\n The result of this is that you can see that when  ColorPicker is selected the Inspector shows an entry for  itemvalues where I can modify elements. You can see I changed the last value from &#34;blue&#34; to &#34;cyan&#34; in this example\n  The  _ready function gets called when the component has been loaded into the scene and is ready to be used. In this case we use the opportunity to read of what the user had set  itemvalues to and add each entry to the dropdown menu box.\n The cleverness does not stop at that point. If I duplicate this component and use it elsewhere the same attached script will be used. If I change the code on one component it will change on all others. Thus they do not easily get out of sync. If I truly want custom behavior I can detach the script on a particular component. Or I can extend it with a subclass to refine the behavior.\n  I could go on about dozens other little details which makes GUI editing a breeze in Godot. But I hope I have gotten across the point that they have really thought about ergonomics.\n So many of the problems I have faced in the past hindering me from working efficiently with GUIs they seem to have anticipated.\n But perhaps the real killer feature is that you can run your application and modify its GUI layout and the code of attached scripts while it is running and those changes get immediately reflected in the running application.\n Sure this kind of functionality where you can edit code while you are running exists many places in some form. But if your experience is anything like mine you know this stuff tends to be quite brittle and limited if you deal with compiled languages.\n Godot uses a dynamic language with Python syntax called  GDScript which was specifically tailored to integrate with the editor. This means it was designed to handle reloading and syncing. And you can tell it works really well.\n It is a super easy language to learn. I picked it up in basically a day. It integrates exceptionally well with the engine.\n You can command click on anything to jump to its documentation of definition. You get great command completions. Even though it is not really a statically typed language it is amazing good at figuring out types. And just like modern Python you can add type hints wherever you want to improve the guessing.\n It not only completes type names and function names. It will even complete strings when you are writing paths to nodes in the scene graph.\n  The alternative is of course to use something like Electron, Qt Widgets, Qt QML or Cocoa. The first issue with the alternatives is that they are huge bloated lumbering beasts.\n Think about it if somebody wants to look at some GUI you are working on, you can send them the Godot project files and they are a 31 MB download away from looking at it. Oh did I tell you that Godot is entirely free, open source and under an MIT license?\n That is right, anybody can download it at no cost and do whatever they want with Godot.\n  Try having somebody look at a Qt design you made. \u201cOops sorry you need a 5 GB download to do that. Oh and btw you need to register an account on a website, login and search really hard to find the free version.\u201d\n Not to mention that if you use Qt Widgets which is supposed to be used for large professional GUI applications which is my topic of discussion here then you have to use a GUI designer which quite frankly sucks. In fact that is why I made my own  markup language ERML, just to allow some more sane editing of Qt ui files other than Qt Creator\u2019s GUI.\n Why does Qt Creator suck you ask? Many of the things mentioned through this article. Selecting and working with nested layout of components is next to impossible. And the object tree structure doesn\u2019t let you do anything useful.\n It is basically a \u201cwrite-only\u201d system. You can make a complex GUI fairly well, but good luck coming back to it later and making significant modifications. You will beak the layout and you will not remember how to put it back to how it was before.\n And there is no sane way to define custom components which you want to use in the editor. In Godot this is trivial. You can make arbitrary complex components made up of other components and easily reuse them. Sure you can copy paste a collection of GUI components in Qt Creator, but if you decide you want to make a modification you are screwed.\n In Godot in contrast you can use a collection of GUI components you made as a template. Change the template and all other GUI components based off that template changes as well.\n Not to mention you cannot do life changes to you user interface. A Qt C++ project easily gets a very slow turn around time which totally kills productivity when making a GUI.\n  So what about QML then? It solves many problems and utilize a dynamic languages which makes on the fly types of changes easier.\n Honestly I don\u2019t remember much of the details of what QML was like working with. I just remember it was not as intuitive as I would have wished. The editor took quite some time for me to wrap my head around and it really did not feel polished at all.\n A lot of stuff just felt slow. The GUIs I made did not work great. Even fairly simple stuff was very bad in redrawing when I resized the window. Perhaps because it was made for mobile it was not optimized for windows changing size? I don\u2019t know.\n Despite various tests I could not get decent performance in drawing. But perhaps the biggest killer was that there was no comprehensive set of advanced widgets to build an advanced GUI application with.\n  I have used layout managers based off a constraint based system when working on iOS applications in Xcode with Swift. It is a very powerful and advanced system.\n At first I thought this was really the way forward. However in my experience it was just too complex to work with. Even for simple screens I sometimes ended up with really complex constraints which can be hard to debug.\n While I have spent a lot of time with Xcode and Swift perhaps the ultimate test of how well it works is how much time you spend jumping into it again after being away from it for a while.\n That did not work well for me. I cannot make sense of a lot of stuff I have done in the past. Swift is getting too complex. It is a nice language but it is developing some of the same problems as C++ and Haskell ironically. The complexity and strictness of the type system is getting in your face a little bit too often.\n It is a double edged sword. When I began using Swift I loved how the strong typing caught many mistakes. But it was always with a mixed feeling, as battling the type system was a regular occurrence. Now it seems to have gotten worse especially when dealing with closures.\n The whole setup just easily gives you a mental overload. I cannot be effective working with the system because I simply am not able to keep all the stuff you need to know in my head.\n SwiftUI seems like a promising alternative. It is kind of following the same approach as QML. Which I think is a promising model. I am not against QML because I think it is a bad idea, just because I think it is poorly executed.\n I have only used SwiftUI briefly. To me it looks like a clear improvement but IMHO it still falls short of Godot. While you get a GUI inspector panel for your GUI components you are still forced to largely write the GUI in code. I think GUI editing should support both. GUI design is a very visual process IMHO.\n Perhaps more importantly one still does not have the ability to make live changes and modification to a running application. For a complex GUI application with large projects which have to be loaded before you get to the thing you want to test, this is a killer.\n  While I have never liked web development I must concede there are man good things about it. In the browser you can do live editing and changing of properties and see immediate changes to a GUI.\n  It is really complex. Learning HTML5 and CSS is actually quite an investment in time. A more traditional GUI toolkit tends to be much smaller and easier to learn.\n It was made for web pages not applications. When trying to make a GUI for an application I found that I so often hit on the limitations imposed by the assumption that we are in some scrollable webpage.\n The latter needs some explanation. The web way of creating reusable components is through some kind of templating. You are basically just copy pasting a chunk of HTML several times representing your new custom component.\n This means you are typically working through templating engines and there is no one to one mapping between what you are writing and what is going on in the web browser.\n This contrasts with Godot e.g. From a development standpoint I can create a custom component and instantiate that. When I do live modifications while my app is running these things are one and the same. I got the same nodes in live application as when I was coding. This helps on he whole round trip and lowers mental complexity in working with it.\n Now it may seem crazy to use a game engine for making an application given that it does steal more CPU cycles due to the need for constant rendering. However in many ways that pales in comparison to the resource hog web based applications are.\n Editors like VSCode and Atom show that you can make some great stuff using web technologies. However we also have companies like  Insomniac Games which tried making their game engine editors using web tools.\n That was mostly a failed experiment. The problem as they saw it was that it works too poorly to make complex custom GUI components. Most use of web technologies today don\u2019t have problem with that because the don\u2019t use custom components. Atom e.g. doesn\u2019t have color pick with a color wheel.\n  It seems crazy to use a game engine to make a GUI application. And people may feel it is instinctively wrong to do so.\n But I think there are very good reasons why the world may end up that way. It is all about where the money is and what incentives are at play.\n The gaming industry is huge. Games today have massive complexity rivaling most actual applications. Game development faces some rather brutal conditions to survive.\n They must allow the development of very high performance code which squeezes every ounce of performance out of your computer. They have to do this while iterating and experimentation has to be really quick and easy when making a game. Games are almost be definition not something you can clearly define up front. A lot of tweaking, experimentation and playing will be needed to get a game right.\n This has caused game engines to solve the problem that has faced those of us working on large complex GUI applications. Live modification of running code is a normal thing in the game engine world. It has to be. You cannot reload the whole damn thing each time you want to tweak something at a particular level you are trying out.\n Combine this with the massive amounts of money thrown at the problem. Large complex GUI applications are a small niche, games are not.\n This is why people who made simulators for robots eventually switched to game engines. The market for engines meant game engines where far beyond robot simulators in quality, performance and ease of use.\n This way of utilizing a weird thing seemingly unrelated due to economics of scale is not new. E.g. Tesla was built on the idea that instead of building a car using custom car batteries, they opted for the seemingly insane idea of using 7000 laptop batteries to power their car.\n It seemed like a nonsensical solution, but it worked because the laptop marked was so huge and this had caused laptop batteries to be really good and cheap.\n This I think will happen with traditional GUI toolkits. They will fall behind what is happing in the hyper competitive game engine world.\n The key downside of using a Game Engine is that is renders constantly which causes a higher constant GPU and CPU usage. That makes the solution non ideal for mobile apps. But simple GUIs can be handled with much less sophisticated technology.\n Engines can be tweaked to reduce GPU and CPU usage. However for a complex GUI app it is most likely going to be doing some kind of heavy rendering anyway. The event system often get so complex that it is simply easier to keep rendering frames rather than trying to deal with a jungle of events which you have no control over when are firing.\n Synching state between GUI and components can get so complex that you save yourself a lot of trouble by simply rendering repeatedly and avoid complex update system. For a complex GUI application the even system can kill performance because you end up with far too many events getting queued up.", "posttime": "2020-05-26 12:24:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5f00\u53d1,app,godot,advanced", "title": "\u4f7f\u7528Godot\u5f00\u53d1\u9ad8\u7ea7GUI\u5e94\u7528\u7a0b\u5e8f\u662f\u672a\u6765\u5417\uff1f", "title_en": "Is Making Advanced GUI Applications with Godot the Future?", "transed": 1, "url": "https://medium.com/@Jernfrost/what-makes-godot-engine-great-for-advance-gui-applications-b1cfb941df3b", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5f00\u53d1", "app", "godot", "advanced"]}, {"category": "", "categoryclass": "", "imagename": "881d7b65ef2c0d4a48364519b5132533.jpg", "infoid": 1003752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u827e\u8fea\u68ee\u00b7\u51ef\u6069\u4f4f\u5728\u4eac\u90fd\uff0c\u5728\u795e\u793e\u5f53\u5fd7\u613f\u8005\uff0c\u5b66\u4e60\u65e5\u672c\u672c\u571f\u5b97\u6559\u3002\u5979\u672c\u5e94\u8be5\u5199\u4e00\u672c\u5173\u4e8e\u5979\u7684\u7814\u7a76\u7684\u5b66\u672f\u4e66\u7c4d\uff0c\u4f46\u5374\u5f00\u59cb\u5199\u6fc0\u70c8\u7684\u8272\u60c5\u8759\u8760\u4fa0\u7c89\u4e1d\u5c0f\u8bf4\u3002\n\u8fd9\u51e0\u4e4e\u662f\u5076\u7136\u53d1\u751f\u7684\u3002\u90a3\u662f\u57282012\u5e74\uff0c\u51ef\u6069--\u5979\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5965\u5170\u6cbb\u53bf\u957f\u5927\uff0c\u7528\u4e0d\u540c\u7684\u540d\u5b57\u957f\u5927--\u5927\u5b66\u6bd5\u4e1a\u4e09\u5e74\uff0c\u72ec\u81ea\u4e00\u4eba\u5728\u56fd\u5916\uff0c\u624b\u5934\u6709\u5f88\u591a\u65f6\u95f4\u3002\u5979\u5bf9\u65e5\u8bed\u7684\u638c\u63e1\u505c\u6ede\u4e0d\u524d\uff0c\u4e66\u5e97\u91cc\u7684\u82f1\u6587\u4e66\u4e5f\u8d35\u5f97\u79bb\u8c31\u3002\u56e0\u6b64\uff0c\u51ef\u6069\u5f00\u59cb\u9605\u8bfb\u5979\u53ef\u4ee5\u5728\u7f51\u4e0a\u514d\u8d39\u627e\u5230\u7684\u4e1c\u897f\uff0c\u5e76\u5f88\u5feb\u53d1\u73b0\u4e86\u4e1a\u4f59\u7231\u597d\u8005\u7684\u72c2\u70ed\u6545\u4e8b\uff0c\u8fd9\u4e9b\u6545\u4e8b\u501f\u7528\u4e86\u8001\u724c\u6d41\u884c\u6587\u5316\u7279\u8bb8\u7ecf\u8425\u6743\u4e2d\u7684\u4eba\u7269\u548c\u60c5\u8282\u3002\n\u51ef\u6069\u5f00\u59cb\u72fc\u541e\u864e\u54bd\u5730\u9605\u8bfb\u514b\u91cc\u65af\u6258\u5f17\u00b7\u8bfa\u5170(Christopher Nolan)\u7684\u201c\u9ed1\u6697\u9a91\u58eb\u201d(Dark Knight)\u4e09\u90e8\u66f2\u4e2d\u8bbe\u5b9a\u7684\u4f5c\u54c1\u3002\u5979\u51b3\u5b9a\u5199\u4e00\u4e9b\u81ea\u5df1\u7684\u4f5c\u54c1\uff0c\u5c06\u8759\u8760\u4fa0\u7684\u6b7b\u5bf9\u5934\u8d1d\u6069\u4f5c\u4e3a\u6027\u611f\u7684\u53cd\u82f1\u96c4\uff0c\u5e76\u5c06\u5b83\u4eec\u514d\u8d39\u53d1\u5e03\u5230\u7f51\u4e0a\u3002\u5979\u5f88\u5feb\u5c31\u5efa\u7acb\u4e86\u7c89\u4e1d\u57fa\u7840\uff0c\u6210\u4e3a\u5979\u6240\u5728\u4e9a\u7c7b\u4e2d\u7684\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u660e\u661f\u3002\n\u51e0\u5e74\u540e\uff0c\u5979\u4f4f\u5728\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u963f\u7075\u987f\uff0c\u505a\u7740\u8c03\u9152\u5e08\u7684\u5de5\u4f5c\uff0c\u8fd9\u65f6\u5979\u5f00\u59cb\u8003\u8651\u662f\u5426\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u7231\u597d\u53d8\u6210\u4e00\u79cd\u751f\u610f\u3002\u5979\u7684\u4e08\u592b\u548c\u7236\u6bcd\u529d\u963b\u5979\u4e0d\u8981\u8ffd\u6c42\u5982\u6b64\u4e0d\u5207\u5b9e\u9645\u7684\u4e1c\u897f\u3002\u7279\u5de5\u4eec\u540c\u6837\u4e0d\u5c51\u4e00\u987e\uff0c\u5728\u4e00\u5e74\u591a\u7684\u65f6\u95f4\u91cc\u62d2\u7edd\u6216\u5ffd\u89c6\u4e86\u51ef\u6069\u5973\u58eb\u7684\u95ee\u9898\u3002\u7136\u540e\uff0c\u4e00\u4f4d\u4f5c\u5bb6\u540c\u4e8b\u5e2e\u52a9\u51ef\u6069\u5973\u58eb\u5c06\u4e00\u4efd\u624b\u7a3f\u5bc4\u7ed9\u590f\u6d1b\u8328\u7ef4\u5c14\u7684\u4e00\u5bb6\u5c0f\u51fa\u7248\u793e--\u5e03\u62c9\u6b23\u56fe\u4e66\u516c\u53f8(Blsing Books)\u3002\u4e00\u4f4d\u7f16\u8f91\u901a\u5bb5\u9605\u8bfb\uff0c\u7b2c\u4e8c\u5929\u7ed9\u5979\u5bc4\u4e86\u4e00\u4efd\u5408\u540c\u3002\n2016\u5e74\u6625\u5929\uff0c\u5979\u51fa\u7248\u4e86\u6539\u7f16\u81ea\u5979\u7684\u72c2\u70ed\u5c0f\u8bf4\u7684\u300a\u751f\u6765\u5c31\u662f\u88ab\u675f\u7f1a\u300b(Born To Be Be Bound)\u3002\u6545\u4e8b\u53d1\u751f\u5728\u672a\u6765\u7684\u5730\u7403\u4e0a\uff0c\u5728\u90a3\u91cc\uff0c\u5927\u591a\u6570\u4eba\u7c7b\u90fd\u6b7b\u4e8e\u761f\u75ab\uff0c\u5e78\u5b58\u8005\u751f\u6d3b\u5728\u4e00\u4e2a\u5706\u9876\u4e0b\uff0c\u5706\u9876\u5206\u4e3a\u72fc\u7fa4\u822c\u7684\u7b49\u7ea7\u5236\u5ea6\uff0c\u7531\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u963f\u5c14\u6cd5\u3001\u4e2d\u7acb\u7684\u8d1d\u5854\u548c\u987a\u4ece\u7684\u6b27\u7c73\u52a0\u65af\u7ec4\u6210\u3002\u4e00\u4e2a\u540d\u53eb\u8c22\u6cfc\u5fb7\u7684\u5f3a\u5927\u800c\u91ce\u86ee\u7684\u963f\u5c14\u6cd5\u6293\u4f4f\u4e86\u4e00\u4e2a\u540d\u53eb\u514b\u83b1\u5c14\u7684\u6b27\u7c73\u8304\u5973\u4eba\uff0c\u4ed6\u4eec\u8fdb\u884c\u4e86\u7c97\u66b4\u7684\u72fc\u6027\u4ea4\u3002\n\u51ef\u6069\u7684\u7c89\u4e1d\u5728\u4e9a\u9a6c\u900a\u4e0a\u53d1\u5e03\u4e86\u8fd1100\u6761\u6b63\u9762\u8bc4\u8bba\uff0c\u8db3\u4ee5\u8ba9\u5979\u83b7\u5f97\u4e00\u4e9b\u77e5\u540d\u5ea6\u3002\u4e00\u6761\u70ed\u60c5\u6d0b\u6ea2\u7684\u5e7f\u544a\u8bed\u5199\u9053\uff1a\u201c\u6beb\u65e0\u6b49\u610f\u5730\u751f\u5403\uff0c\u80ae\u810f\u53ef\u53e3\u3002\u201d\u9996\u6b21\u4eae\u76f8\u975e\u5e38\u6210\u529f\u3002\u636e\u5979\u7684\u51fa\u7248\u5546\u79f0\uff0c\u5979\u53c8\u5306\u5fd9\u51fa\u7248\u4e86\u51e0\u672c\u4e66\uff0c\u8be5\u7cfb\u5217\u7684\u7968\u623f\u6536\u5165\u7ea6\u4e3a37\u4e07\u7f8e\u5143\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u4e24\u5e74\u91cc\uff0c\u51ef\u6069\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u51fa\u7248\uff0c\u6bcf\u9694\u51e0\u4e2a\u6708\u5c31\u4f1a\u51fa\u7248\u4e00\u672c\u5c0f\u8bf4\uff0c\u65b9\u6cd5\u662f\u91cd\u65b0\u8c03\u6574\u5979\u7684\u8001\u5f0f\u540c\u4eba\u5c0f\u8bf4\u7684\u7528\u9014\uff0c\u628a\u5979\u7684\u4e66\u653e\u5728\u4e9a\u9a6c\u900a\u65b0\u53d1\u884c\u7684\u7b97\u6cd5\u751c\u871c\u70b9\u4e0a\uff0c\u5e76\u628a\u81ea\u5df1\u53d8\u6210\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u54c1\u724c\u3002\u5979\u57282016\u5e74\u7684\u79d1\u5e7b\u548c\u5947\u5e7b\u64ad\u5ba2\u4e2d\u8bf4\uff1a\u201c\u628a\u4f60\u7684\u811a\u8dbe\u6d78\u5165\u8272\u60c5\u7684\u6c60\u5b50\u91cc\u5427\u3002\u201d\u201c\u8fd9\u91cc\u9664\u4e86\u8d5a\u94b1\u6ca1\u4ec0\u4e48\u53ef\u505a\u7684\u3002\u201d\n\u7136\u540e\uff0c\u57282018\u5e74\uff0c\u51ef\u6069\u542c\u8bf4\u4e86\u4e00\u4f4d\u5d2d\u9732\u5934\u89d2\u7684\u5947\u5e7b\u4f5c\u5bb6\uff0c\u7b14\u540d\u662f\u4f50\u4f0a\u00b7\u57c3\u5229\u65af(Zoey Ellis)\uff0c\u4ed6\u51fa\u7248\u4e86\u4e00\u90e8\u8272\u60c5\u5947\u5e7b\u7cfb\u5217\uff0c\u524d\u63d0\u542c\u8d77\u6765\u975e\u5e38\u719f\u6089\u3002\u5b83\u4ee5\u4e00\u5bf9\u963f\u5c14\u6cd5\u548c\u6b27\u7c73\u8304\u592b\u5987\u4e3a\u7279\u8272\uff0c\u5e76\u6709\u5927\u91cf\u7684\u7fbd\u6247\u8c46\u6027\u7231\u3002\u51ef\u6069\u5bf9\u201c\u6b27\u7c73\u8304\u795e\u8bdd\u201d\u53ca\u5176\u7b2c\u4e00\u90e8\u201c\u6e34\u671b\u5f81\u670d\u201d\u4e86\u89e3\u5f97\u8d8a\u591a\uff0c\u5979\u5c31\u8d8a\u6124\u6012\u3002\u5728\u8fd9\u4e24\u672c\u4e66\u4e2d\uff0c\u963f\u5c14\u6cd5\u4eba\u88ab\u6b27\u7c73\u8304\u5973\u4e3b\u89d2\u7684\u6c14\u5473\u5f81\u670d\uff0c\u5e76\u5c06\u5979\u4eec\u52ab\u6301\u4e3a\u4eba\u8d28\u3002\u5728\u8fd9\u4e24\u672c\u4e66\u4e2d\uff0c\u5973\u6027\u8bd5\u56fe\u6291\u5236\u5979\u4eec\u7684\u4fe1\u606f\u7d20\uff0c\u5e76\u5c48\u670d\u4e8e\u4ea4\u914d\u7684\u51b2\u52a8\uff0c\u4f46\u90fd\u5931\u8d25\u4e86\u3002\u5728\u8fd9\u4e24\u672c\u4e66\u4e2d\uff0c\u60c5\u4fa3\u4eec\u55c5\u7740\u9f3b\u5b50\uff0c\u53d1\u51fa\u5495\u565c\u58f0\uff0c\u5486\u54ee\u7740\uff1b\u5728\u6d1e\u7a74\u72b6\u7684\u56f4\u680f\u91cc\u7b51\u5de2\uff1b\u54ac\u8116\u5b50\u7559\u4e0b\u201c\u8ba4\u9886\u201d\u7684\u75d5\u8ff9\uff1b\u4ee5\u53ca\u7ecf\u5386\u4e00\u79cd\u79f0\u4e3a\u201c\u6253\u7ed3\u201d\u7684\u4e8b\u60c5\uff0c\u8fd9\u6d89\u53ca\u5230\u72fc\u7684\u4e00\u79cd\u7279\u6b8a\u7279\u5f81\u3002\n\u51ef\u6069\u5973\u58eb\u6566\u4fc3\u5e03\u62c9\u6b23\u56fe\u4e66\u516c\u53f8\u505a\u70b9\u4ec0\u4e48\u3002\u51fa\u7248\u5546\u5411\u516d\u5bb6\u4ee5\u4e0a\u7684\u5728\u7ebf\u96f6\u552e\u5546\u53d1\u51fa\u4e86\u4fb5\u72af\u7248\u6743\u7684\u901a\u77e5\uff0c\u58f0\u79f0\u57c3\u5229\u65af\u7684\u6545\u4e8b\u662f\u201c\u526f\u672c\u201d\uff0c\u573a\u666f\u201c\u4e0e\u827e\u8fea\u68ee\u00b7\u51ef\u6069\u7684\u4e66\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u201d\u3002\u5305\u62ecBarnes&amp\uff1bNoble\u3001iTunes\u548c\u82f9\u679c\u5728\u5185\u7684\u5927\u591a\u6570\u5a92\u4f53\u90fd\u7acb\u5373\u64a4\u4e0b\u4e86\u57c3\u5229\u65af\u7684\u4f5c\u54c1\u3002\u51ef\u6069\u5973\u58eb\u7684\u8bfb\u8005\u8702\u62e5\u800c\u81f3\uff0c\u4e3a\u5979\u8fa9\u62a4\u3002\u4e00\u4f4d\u6124\u6012\u7684\u8bfb\u8005\u5728Goodreads\u4e0a\u5199\u9053\uff1a\u201c\u8fd9\u662f\u5bf9\u827e\u8fea\u68ee\u00b7\u51ef\u6069\u7684\u6572\u8bc8\u3002\u201d\u201c\u6211\u5bf9\u8fd9\u4f4d\u4f5c\u8005\u592a\u5931\u671b\u4e86\uff0c\u6211\u5e0c\u671b\u8be5\u9690\u592b\u4eba\u4e3a\u4f60\u7a83\u53d6\u5979\u7684\u4f5c\u54c1\u800c\u5411\u4f60\u63d0\u51fa\u6cd5\u5f8b\u6307\u63a7\uff01\u201d\u4f60\u771f\u4e22\u4eba\uff01\u201c\u3002\n\u5f88\u96be\u60f3\u8c61\u4e24\u4f4d\u4f5c\u5bb6\u80fd\u72ec\u7acb\u521b\u4f5c\u51fa\u5982\u6b64\u79bb\u5947\u7684\u5947\u5e7b\u573a\u666f\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ed6\u4eec\u4e24\u4e2a\u90fd\u6ca1\u6709\u3002\u4e24\u4f4d\u4f5c\u5bb6\u90fd\u7528\u7e41\u8363\u7684\u3001\u7c89\u4e1d\u4ea7\u751f\u7684\u6587\u5b66\u4f5c\u54c1\u4e2d\u7684\u5171\u540c\u5143\u7d20\u6784\u5efa\u4e86\u4ed6\u4eec\u7684\u60c5\u8282\uff0c\u8fd9\u4e9b\u6587\u5b66\u4f5c\u54c1\u88ab\u79f0\u4e3aOmeverse\u3002\n\u51ef\u6069\u548c\u57c3\u5229\u65af\u4e4b\u95f4\u7684\u4e89\u6267\u662f\u6574\u4e2a\u72c2\u70ed\u884c\u4e1a\u4e2d\u5145\u6ee1\u53e4\u602a\u7684\u7b56\u7565\u7684\u4e00\u4e2a\u7f29\u5f71\u3002\u968f\u7740\u8fd9\u4e00\u6d41\u6d3e\u7684\u5546\u4e1a\u5316\uff0c\u4f5c\u8005\u4eec\u79ef\u6781\u634d\u536b\u81ea\u5df1\u7684\u751f\u8ba1\uff0c\u6709\u65f6\u4f1a\u5229\u75281998\u5e74\u7684\u4e00\u9879\u6cd5\u5f8b-\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5-\u8ba9\u5728\u7ebf\u96f6\u552e\u5546\u5220\u9664\u7ade\u4e89\u5bf9\u624b\u7684\u56fe\u4e66\u3002\u5728\u63d0\u51fa\u7d22\u8d54\u65f6\uff0c\u521b\u4f5c\u8005\u5fc5\u987b\u6709\u201c\u5584\u610f\u7684\u4fe1\u5ff5\u201d\uff0c\u5373\u5979\u5bf9\u6240\u6d89\u4f5c\u54c1\u7684\u6240\u6709\u6743\u53d7\u5230\u4e86\u4fb5\u72af\u3002\n\u4f46\u662f\uff0c\u5f53\u6700\u7ec8\u6765\u6e90\u6750\u6599\u662f\u4f17\u5305\u96c6\u4f53\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u8ba9\u5965\u6885\u52a0\u7ef4\u585e\u793e\u533a\u7684\u6210\u5458\u5728\u51ef\u6069\u548c\u57c3\u5229\u65af\u4e4b\u95f4\u505a\u51fa\u9009\u62e9-\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u4e5f\u662f\u5982\u6b64\uff0c\u4ed6\u6b63\u5728\u8003\u8651\u8fd9\u4e9b\u6307\u63a7\u53ca\u5176\u540e\u679c\u662f\u5426\u503c\u5f97\u8d54\u507f100\u591a\u4e07\u7f8e\u5143\u3002\n\u4e3a\u4e86\u7406\u6e05\u5965\u6885\u52a0\u97e6\u65af\u4e4b\u4e89\uff0c\u5b83\u6709\u52a9\u4e8e\u7406\u89e3\u5b83\u8d77\u6e90\u4e8e\u4e00\u4e2a\u5e73\u884c\u7684\u6587\u5b66\u4e16\u754c-\u5e7f\u9614\u3001\u4e0d\u5b88\u89c4\u77e9\u3001\u591a\u6837\u5316\u3001\u4e30\u5bcc\u591a\u5f69\u3001\u7ecf\u5e38\u662f\u8272\u60c5\u7684\u540c\u4eba\u5c0f\u8bf4\u4e16\u754c\u3002\n\u5728\u51e0\u5341\u5e74\u524d\u4ece\u201c\u661f\u9645\u8ff7\u822a\u201d\u6742\u5fd7\u5f00\u59cb\u4e4b\u540e\uff0c\u5f53\u4e92\u8054\u7f51\u8ba9\u7279\u522b\u70ed\u8877\u4e8e\u6d41\u884c\u6587\u5316\u7684\u6d88\u8d39\u8005\u5f88\u5bb9\u6613\u627e\u5230\u5e76\u4e3a\u5f7c\u6b64\u521b\u9020\u6545\u4e8b\u65f6\uff0c\u72c2\u70ed\u5982\u96e8\u540e\u6625\u7b0b\u822c\u6d8c\u73b0\u51fa\u6765\u3002\u73b0\u5728\u6709\u5f88\u591a\u5b50\u7c7b\u578b\uff0c\u4ece\u201c\u659c\u6760\u201d(\u4e24\u4e2a\u7537\u6027\u89d2\u8272\u6d6a\u6f2b\u914d\u5bf9\uff0c\u6bd4\u5982\u590f\u6d1b\u514b\u00b7\u798f\u5c14\u6469\u65af\u548c\u534e\u751f\u533b\u751f)\uff0c\u5230\u66f4\u5947\u7279\u7684\u5267\u60c5\uff0c\u6bd4\u5982\u201c\u5e73\u51e1\u7684AU\u201d(\u4e00\u4e2a\u53e6\u7c7b\u4e16\u754c\uff0c\u9b54\u6cd5\u4eba\u7269\u751f\u6d3b\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d--\u4f8b\u5982\uff0c\u54c8\u5229\u6ce2\u7279\u4e0a\u7684\u662f\u666e\u901a\u7684\u5bc4\u5bbf\u5b66\u6821\uff0c\u6709\u6b63\u5e38\u7684\u9752\u5c11\u5e74\u95ee\u9898)\u3002\n\u867d\u7136\u4e00\u4e9b\u4f20\u7edf\u4f5c\u5bb6\u5632\u7b11\u540c\u4eba\u5c0f\u8bf4\u4f5c\u5bb6\u662f\u521b\u9020\u6027\u7684\u5bc4\u751f\u866b\uff0c\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u53ef\u4ee5\u963b\u6b62\u4ed6\u4eec\u3002\u8fd9\u6837\u7684\u4f5c\u54c1\u662f\u5408\u6cd5\u7684\uff0c\u53ea\u8981\u4f5c\u8005\u514d\u8d39\u53d1\u5e03\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u51fa\u552e\u57fa\u4e8e\u7248\u6743\u6750\u6599\u7684\u6545\u4e8b\u3002\n\u4f46\u5bf9\u4e8e\u8fd9\u4e00\u7c7b\u578b\u7684\u7535\u5f71\u6765\u8bf4\uff0c\u8981\u60f3\u6c38\u8fdc\u4fdd\u6301\u4e1a\u4f59\u72b6\u6001\uff0c\u9700\u8981\u6295\u5165\u592a\u591a\u7684\u8d44\u91d1\u3002E\u00b7L\u00b7\u8a79\u59c6\u65af(E L James)\u7684\u8f70\u52a8\u4e00\u65f6\u7684\u7cfb\u5217\u7535\u5f71\u201c\u4e94\u5341\u5ea6\u7070\u201d(Fity Shades Of Grey)\u9500\u91cf\u8d85\u8fc71.5\u4ebf\u518c\uff0c\u6839\u636e\u65af\u8482\u82ac\u59ae\u00b7\u8fc8\u8036(Stefinie Meyer)\u7684\u201c\u66ae\u5149\u4e4b\u57ce\u201d(Twilight)\u5438\u8840\u9b3c\u4f20\u5947\u6539\u7f16\u800c\u6210\uff0c\u4e00\u5f00\u59cb\u5c31\u662f\u72c2\u70ed\u7684\u3002\u8a79\u59c6\u65af\u3001\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u52b3\u4f26(Christina Lauren)\u548c\u539a\u989c\u65e0\u803b\u7684\u5854\u62c9\u00b7\u82cf\u00b7\u6885(Tara Sue Me)\u7b49\u72c2\u70ed\u4f5c\u5bb6\u901a\u8fc7\u628a\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u5b57\u7b26\u6362\u6210\u540d\u4e49\u4e0a\u7684\u539f\u521b\u5b57\u7b26\uff0c\u8df3\u8dc3\u5230\u8425\u5229\u6027\u51fa\u7248\u9886\u57df\u3002\n\u968f\u7740\u66f4\u591a\u7684\u540c\u4eba\u5c0f\u8bf4\u4f5c\u5bb6\u8de8\u5165\u5546\u4e1a\u51fa\u7248\u4e1a\uff0c\u5730\u76d8\u4e4b\u4e89\u5df2\u7ecf\u7206\u53d1\u3002\u54c8\u4f5b\u6cd5\u5b66\u9662\u7684\u7248\u6743\u4e13\u5bb6\u4e3d\u8d1d\u5361\u00b7\u56fe\u4ec0\u5185\u7279(Rebecca Tushnet)\u8bf4\uff1a\u201c\u7c89\u4e1d\u5c0f\u8bf4\u8ba9\u4f5c\u5bb6\u548c\u51fa\u7248\u5546\u610f\u8bc6\u5230\u8fd9\u79cd\u4e1c\u897f\u6709\u4e00\u4e2a\u84ec\u52c3\u53d1\u5c55\u7684\u5e02\u573a\u3002\u201d\u201c\u8fd9\u6837\u7684\u4e8b\u60c5\u8981\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u53d1\u751f\u51b2\u7a81\u7684\u673a\u4f1a\u4e5f\u66f4\u591a\u3002\u201d\n\u5f15\u53d1\u8be5\u9690\u548c\u57c3\u5229\u65af\u4e4b\u4e89\u7684\u7279\u5b9a\u72c2\u70ed\u5b87\u5b99\u5927\u7ea6\u5728\u5341\u5e74\u524d\u51fa\u73b0\uff0c\u5f53\u65f6CW\u7535\u89c6\u5267\u201c\u8d85\u81ea\u7136\u201d\u7684\u7231\u597d\u8005\u4eec\u5f00\u59cb\u5199\u6545\u4e8b\uff0c\u5176\u4e2d\u4e24\u4f4d\u4e3b\u6f14\u662f\u60c5\u4fa3\u3002\u5176\u4e2d\u4e00\u4e2a\u5c06\u662f\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u963f\u5c14\u6cd5\u7537\u6027\u3002\u53e6\u4e00\u4e2a\u7537\u4eba\u5c06\u662f\u5973\u6027\u5316\u7684\u6b27\u7c73\u8304\uff0c\u901a\u5e38\u5177\u6709\u53d7\u5b55\u7684\u80fd\u529b-\u8fd9\u662f\u4e00\u79cd\u88ab\u79f0\u4e3ampreg\u7684\u6bd4\u55bb\u3002\u72d7\u7684\uff0c\u7136\u540e\u662f\u7fbd\u6247\u8c46\u6027\u7231\u7684\u4e1c\u897f\u6df7\u5728\u4e00\u8d77\u3002\n\u8fd9\u4e00\u524d\u63d0\u5e7f\u53d7\u6b22\u8fce\uff0c\u6bd4\u55bb\u5f88\u5feb\u88ab\u5176\u4ed6\u5267\u573a\u7684\u4f5c\u5bb6\u91c7\u7528\uff0c\u5305\u62ecNBC\u7684\u201c\u6c49\u5c3c\u62d4\u201d(Hannibal)\u548cMTV\u7684\u201c\u5c11\u5e74\u72fc\u201d(Teen Wolf)\u3002\u968f\u4e4b\u800c\u6765\u7684\u6742\u4e71\u65e0\u7ae0\u7684\u4f5c\u54c1\u88ab\u79f0\u4e3aOmagaverse\uff0c\u6709\u81ea\u5df1\u7684\u89c4\u5219\u3001\u60c5\u8282\u5143\u7d20\u548c\u672f\u8bed\u3002\n\u4e00\u4e9bOmeverse\u6545\u4e8b\u6d89\u53ca\u72fc\u4eba(\u72fc\u4eba)\u3001\u5438\u8840\u9b3c\u3001\u53d8\u5f62\u4eba\u3001\u9f99\u3001\u592a\u7a7a\u6d77\u76d7\uff0c\u8fd8\u6709\u4e00\u4e9b\u6545\u4e8b\u4ee5\u666e\u901a\u4eba\u4e3a\u7279\u8272\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u6240\u6709\u7684Omeverse\u592b\u5987\u90fd\u6709\u72fc\u6837\u7684\u884c\u4e3a\u3002\u963f\u5c14\u6cd5\u201c\u53d1\u60c5\u201d\u548c\u6b27\u7c73\u52a0\u65af\u7ecf\u5386\u70ed\u5faa\u73af\uff0c\u91ca\u653e\u4fe1\u606f\u7d20\uff0c\u4f7f\u963f\u5c14\u6cd5\u8fdb\u5165\u72c2\u70ed\u72b6\u6001\u3002\u5965\u6885\u7ef4\u585e\u6545\u4e8b\u4e2d\u666e\u904d\u5b58\u5728\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u751f\u7406\u602a\u7656\uff0c\u53eb\u505a\u6253\u7ed3\uff0c\u6765\u81ea\u4e8e\u72fc\u7684\u9634\u830e\u7684\u4e00\u4e2a\u771f\u5b9e\u7279\u5f81\uff0c\u5b83\u5728\u4ea4\u914d\u8fc7\u7a0b\u4e2d\u4f1a\u81a8\u80c0\uff0c\u5bfc\u81f4\u4ea4\u914d\u7684\u4e00\u5bf9\u4fdd\u6301\u8eab\u4f53\u4e0a\u7684\u675f\u7f1a\uff0c\u4ee5\u589e\u52a0\u53d7\u7cbe\u7684\u673a\u4f1a\u3002\u8fd9\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u751f\u7406\u602a\u7656\uff0c\u5b83\u6765\u81ea\u72fc\u7684\u9634\u830e\uff0c\u5b83\u5728\u4ea4\u914d\u8fc7\u7a0b\u4e2d\u4f1a\u81a8\u80c0\uff0c\u4ece\u800c\u589e\u52a0\u53d7\u7cbe\u7684\u673a\u4f1a\u3002\n\u5bf9\u8fd9\u6837\u7684\u6545\u4e8b\u7684\u80c3\u53e3\u5f88\u5927\uff0c\u800c\u4e14\u8fd8\u5728\u4e0d\u65ad\u589e\u957f\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u8d85\u8fc77\u4e07\u4e2a\u4ee5Omagaverse\u4e3a\u80cc\u666f\u7684\u6545\u4e8b\u5728\u6211\u4eec\u81ea\u5df1\u7684\u540c\u4eba\u5c0f\u8bf4\u7f51\u7ad9Archive\u4e0a\u53d1\u8868\u3002\u968f\u7740\u5b83\u53d8\u5f97\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\uff0cOmeverse\u8d85\u8d8a\u4e86\u4e2a\u522b\u7684\u5e7b\u60f3\uff0c\u6210\u4e3a\u4e86\u4e00\u79cd\u6210\u719f\u7684\u6d41\u6d3e\u3002\n\u4f5c\u5bb6\u4eec\u5f00\u59cb\u51fa\u7248\u5177\u6709\u539f\u521b\u4eba\u7269\u548c\u80cc\u666f\u7684\u5965\u7c73\u52a0\u5f17\u65af\u6545\u4e8b\uff0c\u4f5c\u5bb6\u4eec\u4e5f\u5f00\u59cb\u51fa\u7248\u8fd9\u4e9b\u6545\u4e8b\u4ee5\u8d5a\u53d6\u5229\u6da6\u3002\u5728\u4e9a\u9a6c\u900a\u4e0a\uff0c\u6709\u6570\u767e\u672c\u5c0f\u8bf4\u5728\u51fa\u552e\uff0c\u5176\u4e2d\u5305\u62ec\u201c\u6000\u5b55\u7684\u6447\u6eda\u660e\u661f\u6b27\u7c73\u8304\u201d\u3001\u201c\u72fc\u7cbe\u795e\uff1a\u9006\u8f6c\u7684\u54c8\u91cc\u59c6\u00b7\u5965\u6885\u52a0\u5f17\u65af\u7f57\u66fc\u53f2\u201d(Wolf spirity\uff1aA Reverse Harem Omeaverse Romance)\u548c\u201c\u4e00\u4e9b\u5154\u5b50\u5230\u7231\u60c5\uff1aM/M MPreg Shifter\u7f57\u66fc\u53f2\u201d(Some Bunny to Love\uff1aAn M/M MPreg Shifter Romance)\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u592a\u53ef\u80fd\u7684\u6545\u4e8b\uff0c\u8bb2\u7684\u662f\u4e00\u4e2a\u53ef\u4ee5\u53d8\u8eab\u4e3a\u5154\u5b50\u7684\u963f\u5c14\u6cd5\u3002\n\u8fd9\u662f\u51ef\u6069\u5973\u58eb\u6307\u63a7\u57c3\u5229\u65af\u5973\u58eb\u7a83\u53d6\u5979\u7684\u7d20\u6750\u7684\u84ec\u52c3\u53d1\u5c55\u7684\u5546\u4e1a\u80cc\u666f\u3002\u57c3\u5229\u65af\u8ba4\u4e3a\u8fd9\u4e00\u8bf4\u6cd5\u662f\u8352\u8c2c\u7684--\u5e76\u51c6\u5907\u5728\u6cd5\u5ead\u4e0a\u8fd9\u6837\u8bf4\u3002\n\u53bb\u5e74\u6625\u5929\u7684\u4e00\u5929\uff0c\u57c3\u5229\u65af\u5973\u58eb\u5728\u5e15\u4e01\u987f\u8f66\u7ad9\u9644\u8fd1\u7684\u4e00\u5bb6\u9152\u5e97\u548c\u6211\u559d\u5496\u5561\u3002\u5979\u770b\u8d77\u6765\u4e0d\u50cf\u662f\u90a3\u79cd\u5199\u9634\u6697\u3001\u524d\u536b\u3001\u6709\u65f6\u751a\u81f3\u66b4\u529b\u7684\u8272\u60c5\u4f5c\u54c1\u7684\u4eba\u3002\u5979\u5e74\u8f7b\u3001\u5f00\u6717\uff0c\u5728\u4f26\u6566\u4ece\u4e8b\u6559\u80b2\u5de5\u4f5c\uff0c\u8fd9\u4e5f\u662f\u5979\u62d2\u7edd\u7528\u771f\u540d\u51fa\u7248\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u5927\u591a\u6570\u65e5\u5b50\u91cc\uff0c\u5979\u51cc\u66684\u70b9\u8d77\u5e8a\u5199\u4f5c\uff0c\u7136\u540e\u524d\u5f80\u5979\u5de5\u4f5c\u7684\u5b66\u6821\u3002\u5728\u5979\u7684\u4e9a\u9a6c\u900a\u4f5c\u8005\u9875\u9762\u4e0a\uff0c\u5979\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3a\u201c\u559c\u6b22\u4ece\u9875\u9762\u4e0a\u8df3\u4e0b\u6765\u7684\u6027\u7d27\u5f20\u201d\u7684\u201c\u732b\u5988\u201d\u3002\n\u57c3\u5229\u65af\u8bf4\uff0c\u5979\u57282006\u5e74\u5f00\u59cb\u559c\u6b22\u4e0a\u4e86\u540c\u4eba\u5c0f\u8bf4\u3002\u8d77\u521d\uff0c\u5979\u9605\u8bfb\u4ee5\u54c8\u5229\u6ce2\u7279\u4e16\u754c\u4e3a\u80cc\u666f\u7684\u6545\u4e8b\uff0c\u7136\u540e\u8f6c\u5411\u5176\u4ed6\u5e7b\u60f3\uff0c\u5305\u62ec\u4e3a\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8(BBC)\u672c\u5c3c\u8fea\u514b\u7279\u00b7\u5eb7\u4f2f\u5df4\u5947(Benedict CumberBatch)\u4e3b\u6f14\u7684\u201c\u795e\u63a2\u590f\u6d1b\u514b\u201d(Sherlock)\u800c\u5199\u7684\u6545\u4e8b\uff0c\u8fd9\u90e8\u7535\u5f71\u628a\u5979\u4ecb\u7ecd\u7ed9\u4e86\u5965\u7c73\u683c\u6c83\u65af\u3002\u8fd9\u4e00\u7c7b\u578b\u4e0e\u5979\u9047\u5230\u7684\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u90fd\u4e0d\u540c\u3002\u5979\u5f00\u59cb\u6d89\u8db3\u81ea\u5df1\u7684\u539f\u521b\u5199\u4f5c\uff0c\u5e76\u4e8e2017\u5e74\u5e95\u5f00\u59cb\u521b\u4f5c\u201c\u6b27\u7c73\u8304\u795e\u8bdd\u201d\u7cfb\u5217\u3002\n\u7b2c\u4e00\u90e8\u5c0f\u8bf4\u201c\u6e34\u671b\u5f81\u670d\u201d\u4ee5\u4e2d\u4e16\u7eaa\u7684\u5e7b\u60f3\u4e16\u754c\u4e3a\u80cc\u666f\uff0c\u8bb2\u8ff0\u4e86\u4e00\u4f4d\u963f\u5c14\u6cd5\u7687\u5e1d\u8ff7\u4e0a\u4e86\u4e00\u4f4d\u540d\u53eb\u51ef\u7433\u7684\u8bf1\u4eba\u5367\u5e95\u6b27\u7c73\u8304\u95f4\u8c0d\u7684\u6545\u4e8b\u3002\u5979\u62b5\u5236\u4ed6\u7684\u8ffd\u6c42\uff0c\u7528\u9b54\u6cd5\u63a9\u76d6\u5979\u7684\u4fe1\u606f\u7d20\u7684\u6c14\u5473\uff0c\u76f4\u5230\u5979\u88ab\u751f\u7269\u5b66\u4e0a\u7684\u5fc5\u7136\u6027\u6240\u5f81\u670d\u3002\u4e3a\u4e86\u5438\u5f15\u5176\u4ed6\u5965\u6885\u7ef4\u65af\u7279\u548c\u9ed1\u6697\u6d6a\u6f2b\u7684\u7c89\u4e1d\uff0c\u57c3\u5229\u65af\u56f4\u7ed5\u6807\u51c6\u7684\u7c7b\u578b\u5143\u7d20\u5c55\u5f00\u4e86\u53d9\u4e8b--\u72fc\u6837\u7684\u62bd\u6410\u548c\u4ea4\u914d\uff0c\u4ee5\u53ca\u4e00\u79cd\u524d\u536b\u7684\u4e3b\u5bb0-\u987a\u4ece\u7684\u52a8\u6001\u3002(\u7528\u72c2\u70ed\u7684\u672f\u8bed\u6765\u8bf4\uff0c\u6709\u4e9b\u6027\u7231\u573a\u666f\u4f1a\u88ab\u8d34\u4e0a\u201c\u914d\u5bf9\u201d\u6216\u201c\u53ef\u7591\u540c\u610f\u201d\u7684\u6807\u7b7e\u3002)\u3002\n\u57c3\u5229\u65af\u8bf4\uff1a\u201c\u4f60\u5fc5\u987b\u786e\u4fdd\u4f60\u4f7f\u7528\u4e86Omeverse\u7684\u6bd4\u55bb\uff0c\u624d\u80fd\u88ab\u8fd9\u4e00\u7c7b\u578b\u7684\u7c89\u4e1d\u8ba4\u51fa\u3002\u201d\u300a\u6e34\u671b\u5f81\u670d\u300b\u53ca\u5176\u7eed\u96c6\u300a\u6e34\u671b\u6355\u6349\u300b\u4e8e2018\u5e74\u521d\u7531\u5979\u521b\u529e\u7684\u4f26\u6566\u516c\u53f8\u7fbd\u6bdb\u7b14\u58a8\u6c34\u56fe\u4e66\u51fa\u7248\u3002\u8bfb\u8005\u4eec\u5728Goodreads\u548c\u4e9a\u9a6c\u900a\u4e0a\u5bf9\u8fd9\u4e00\u7cfb\u5217\u7ed9\u4e88\u4e86\u70ed\u70c8\u7684\u8bc4\u4ef7\uff0c\u79f0\u5176\u4e3a\u201c\u8038\u4eba\u542c\u95fb\u7684\u65b0Omagaverse\uff01\u201d\u8fd8\u6709\u201c\u8fc4\u4eca\u4e3a\u6b62\u6700\u597d\u7684\u6b27\u7c73\u8304\u201d\n2018\u5e744\u6708\u4e0b\u65ec\uff0c\u57c3\u5229\u65af\u6536\u5230\u4e00\u4f4d\u8bfb\u8005\u53d1\u6765\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd9\u4f4d\u8bfb\u8005\u5728\u5df4\u8bfa\u4e66\u5e97(Barnes&amp\uff1bNoble)\u8ba2\u8d2d\u4e86\u5979\u7684\u4e00\u672c\u4e66\uff0c\u7136\u540e\u5f97\u77e5\u8fd9\u672c\u4e66\u5df2\u7ecf\u5356\u4e0d\u5230\u4e86\u3002\u5979\u5f88\u5feb\u5c31\u53d1\u73b0\uff0c\u5979\u6240\u6709\u7684Omagaverse\u56fe\u4e66\u90fd\u4ece\u5404\u5927\u5546\u5e97\u6d88\u5931\u4e86\uff0c\u8fd9\u90fd\u662f\u56e0\u4e3a\u51ef\u6069\u548c\u5979\u7684\u51fa\u7248\u5546\u58f0\u79f0\u4fb5\u72af\u4e86\u7248\u6743\u3002\u57c3\u5229\u65af\u5973\u58eb\u5bf9\u6b64\u611f\u5230\u56f0\u60d1\u3002\n\u57c3\u5229\u65af\u8bf4\uff0c\u201c\u6211\u4e0d\u660e\u767d\u6211\u7528\u5171\u4eab\u4e16\u754c\u516c\u8ba4\u7684\u6bd4\u55bb\u5199\u7684\u6545\u4e8b\uff0c\u4e3a\u4e86\u8bb2\u8ff0\u4e00\u4e2a\u5728\u5546\u4e1a\u4e0a\u4e0e\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u90fd\u622a\u7136\u4e0d\u540c\u7684\u6545\u4e8b\uff0c\u600e\u4e48\u4f1a\u6210\u4e3a\u90a3\u6837\u7684\u9776\u5b50\u3002\u201d\u201c\u6709\u4e9b\u65f6\u523b\u548c\u573a\u666f\u770b\u8d77\u6765\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u4f46\u8fd9\u662f\u4e00\u79cd\u6bd4\u55bb\uff0c\u53ef\u4ee5\u5728\u6570\u767e\u4e2a\u6545\u4e8b\u4e2d\u627e\u5230\u3002\u201d\n\u57c3\u5229\u65af\u548c\u594e\u5c14\u7684\u4e00\u540d\u5f8b\u5e08\u5411\u64a4\u4e0b\u5979\u7684\u4e66\u7684\u7f51\u7ad9\u63d0\u4ea4\u4e86\u53cd\u901a\u77e5\u3002\u4e00\u4e9b\u4eba\u82b1\u4e86\u51e0\u5468\u7684\u65f6\u95f4\u624d\u6062\u590d\u6807\u9898\uff0c\u53e6\u4e00\u4e9b\u4eba\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u635f\u5931\u7684\u9500\u552e\u989d\u6ca1\u6709\u529e\u6cd5\u633d\u56de\u3002\u57c3\u5229\u65af\u8bf4\uff0c\u201c\u4f5c\u4e3a\u4e00\u540d\u65b0\u4f5c\u5bb6\uff0c\u6211\u6b63\u5728\u79ef\u805a\u52a8\u529b\uff0c\u4f46\u8fd9\u79cd\u52a8\u529b\u5df2\u7ecf\u6d88\u5931\u4e86\u3002\u201d\u5979\u8fd8\u62c5\u5fc3\u201c\u6284\u88ad\u8005\u201d\u7684\u6807\u7b7e\u4f1a\u6c38\u4e45\u635f\u5bb3\u5979\u7684\u58f0\u8a89\u3002\n\u57c3\u5229\u65af\u5973\u58eb\u51b3\u5b9a\u8d77\u8bc9\u3002\u201c\u4e00\u5207\u90fd\u4f1a\u53d7\u5230\u8d28\u7591\uff0c\u6211\u7684\u8bda\u4fe1\u4f1a\u53d7\u5230\u8d28\u7591\uff0c\u6211\u5199\u6545\u4e8b\u548c\u8bb2\u6545\u4e8b\u7684\u80fd\u529b\u90fd\u4f1a\u53d7\u5230\u8d28\u7591--\u5982\u679c\u6211\u4e0d\u6311\u6218\u8fd9\u4e9b\u8bf4\u6cd5\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4f1a\u53d7\u5230\u5a01\u80c1\uff0c\u201d\u5979\u8bf4\u3002\n2018\u5e74\u79cb\u5929\uff0c\u7fbd\u6bdb\u7b14\u58a8\u6c34\u516c\u53f8\u5728\u57c3\u5229\u65af\u7684\u6570\u5b57\u5206\u9500\u5546\u6240\u5728\u5730\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u7684\u8054\u90a6\u6cd5\u9662\u5bf9Blush Books\u548c\u51ef\u6069\u63d0\u8d77\u8bc9\u8bbc\uff0c\u8981\u6c42\u83b7\u5f97125\u4e07\u7f8e\u5143\u7684\u635f\u5bb3\u8d54\u507f\uff0c\u7f6a\u540d\u662f\u8bfd\u8c24\u3001\u5e72\u6270\u57c3\u5229\u65af\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u4ee5\u53ca\u63d0\u4ea4\u865a\u5047\u7684\u7248\u6743\u4fb5\u6743\u901a\u77e5\u3002\u5728\u8bc9\u8bbc\u4e2d\uff0c\u594e\u5c14\u7684\u5f8b\u5e08\u8fa9\u79f0\uff0c\u201c\u6ca1\u6709\u4eba\u62e5\u6709\u2018omegaverse\u2019\u6216\u5b9a\u4e49\u2018omegaverse\u2019\u7684\u5404\u79cd\u6bd4\u55bb\u3002\u201d\n\u57c3\u5229\u65af\u7684\u5f8b\u5e08\u8ba4\u4e3a\u4ed6\u4eec\u7684\u5730\u4f4d\u5f88\u5f3a\u3002\u4f46\u4ed6\u4eec\u52aa\u529b\u5bfb\u627e\u4e4b\u524d\u7684\u6848\u4f8b\uff0c\u89e3\u51b3\u540c\u4eba\u5c0f\u8bf4\u7684\u6bd4\u55bb\u662f\u5426\u53ef\u4ee5\u53d7\u5230\u7248\u6743\u4fdd\u62a4\u7684\u95ee\u9898\u3002\n\u4ee3\u8868\u594e\u5c14\u00b7\u58a8\u514b\u548c\u57c3\u5229\u65af\u7684\u5f8b\u5e08\u5409\u8fea\u6069\u00b7\u6797\u585e\u5e93\u59c6(Gideon Lincecum)\u8bf4\uff0c\u201c\u6211\u4eec\u6b63\u5728\u8c03\u67e5\u6848\u4ef6\uff0c\u770b\u770b\u6cd5\u9662\u4ee5\u524d\u662f\u5426\u5904\u7406\u8fc7\u7c7b\u4f3c\u7684\u6848\u4ef6\uff0c\u5904\u7406\u8fc7\u8fd9\u79cd\u65b0\u6587\u5b66\u6d41\u6d3e\u7684\u51fa\u73b0\u3002\u201d\u201c\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u3002\u201d\n\u8fd9\u79cd\u6fc0\u70c8\u7684\u7ade\u4e89\u5e76\u4e0d\u5c40\u9650\u4e8e\u5965\u6885\u52a0\u97e6\u65af\u7684\u4f5c\u5bb6\u3002\u968f\u7740\u5728\u7ebf\u51fa\u7248\u7684\u7ade\u4e89\u53d8\u5f97\u66f4\u52a0\u6fc0\u70c8-\u4e9a\u9a6c\u900a\u4e0a\u6709\u6570\u767e\u4e07\u672c\u7535\u5b50\u4e66\uff0c\u800c2014\u5e74\u4e3a60\u4e07\u672c-\u4e00\u4e9b\u4f53\u88c1\u4f5c\u5bb6\u53d8\u5f97\u66f4\u52a0\u79ef\u6781\u5730\u52aa\u529b\u4e3b\u5bb0\u4ed6\u4eec\u7684\u6587\u5b66\u5229\u57fa\u5e02\u573a\u3002\n\u53bb\u5e74\uff0c\u4e00\u4f4d\u4f5c\u5bb6\u5728\u4e00\u90e8\u540d\u4e3a\u201c\u53cd\u8f6c\u54c8\u91cc\u59c6\u9ad8\u4e2d\u6b3a\u51cc\u7f57\u66fc\u53f2\u201d(Reverse Harem High School Bully Romance)\u7684\u70ed\u95e8\u7231\u60c5\u7247\u4e2d\u64b0\u6587\uff0c\u58f0\u79f0\u53e6\u4e00\u4f4d\u4f5c\u8005\u6284\u88ad\u4e86\u5979\u7684\u4e66\uff0c\u5e76\u8981\u6c42\u5979\u5220\u9664\u8fd9\u4e9b\u4e66\u3002\u201c\u53cd\u8f6cHarem\u9ad8\u4e2d\u6b3a\u51cc\u7f57\u66fc\u53f2\u201d\u6307\u7684\u662f\u4e00\u4e2a\u5341\u51e0\u5c81\u7684\u5973\u6027\u89d2\u8272\u6709\u51e0\u4e2a\u597d\u6597\u7684\u7537\u6027\u8ffd\u6c42\u8005\u3002\u88ab\u6307\u63a7\u7684\u4f5c\u8005\u77ed\u6682\u5730\u4ece\u4e9a\u9a6c\u900a\u4e0a\u5220\u9664\u4e86\u5979\u7684\u4f5c\u54c1\uff0c\u4f46\u5728\u54a8\u8be2\u4e86\u5f8b\u5e08\u540e\u6062\u590d\u4e86\u8fd9\u4e9b\u4f5c\u54c1\u3002\n\u5176\u4ed6\u4f5c\u8005\u4e5f\u66fe\u8bd5\u56fe\u5229\u7528\u5546\u6807\u6765\u653b\u51fb\u4ed6\u4eec\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u4f5c\u5bb6\u4eec\u8bd5\u56fe\u5c06\u8bf8\u5982\u201c\u5c60\u9f99\u8005\u201d\u751a\u81f3\u201c\u9ed1\u6697\u201d\u8fd9\u6837\u7684\u901a\u7528\u77ed\u8bed\u6ce8\u518c\u4e3a\u5546\u6807\u30022018\u5e74\uff0c\u81ea\u884c\u51fa\u7248\u7684\u6d6a\u6f2b\u4f5c\u5bb6\u6cd5\u8389\u5a1c\u00b7\u970d\u666e\u91d1\u65af(Faleena Hopkins)\u5728\u6ce8\u518c\u4e86\u201c\u50b2\u6162\u201d\u8fd9\u4e2a\u8bcd\u7684\u5546\u6807\u540e\uff0c\u5f15\u53d1\u4e86\u4e00\u573a\u4e11\u95fb\uff0c\u5e76\u5411\u5176\u4ed6\u5728\u4e66\u540d\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e2a\u8bcd\u7684\u6d6a\u6f2b\u4f5c\u5bb6\u53d1\u9001\u4e86\u4fb5\u6743\u901a\u77e5\u3002\u4e9a\u9a6c\u900a\u6682\u65f6\u64a4\u4e0b\u4e86\u4e00\u4e9b\u4e66\uff0c\u5305\u62ec\u300a\u5979\u90a3\u50b2\u6162\u7684\u6d88\u9632\u5458\u300b\u548c\u300a\u5979\u90a3\u50b2\u6162\u7684\u533b\u751f\u300b\u3002\u5728\u8d77\u8bc9\u51e0\u4e2a\u4eba\u5931\u8d25\u540e\uff0c\u970d\u666e\u91d1\u65af\u5973\u58eb\u505a\u51fa\u4e86\u8ba9\u6b65\u3002\n\u548cCockygate\u4e00\u6837\uff0cOmeverse\u6848\u4e5f\u63ed\u793a\u4e86\u77e5\u8bc6\u4ea7\u6743\u6cd5\u53ef\u4ee5\u591a\u4e48\u5bb9\u6613\u88ab\u8bd5\u56fe\u63a8\u7ffb\u7ade\u4e89\u5bf9\u624b\u7684\u4f5c\u8005\u6b66\u5668\u5316\u3002\u6839\u636e\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\uff0c\u4e2a\u4eba\u6216\u516c\u53f8\u53ef\u4ee5\u5411\u96f6\u552e\u5546\u53d1\u9001\u4e0b\u67b6\u901a\u77e5\uff0c\u53ea\u8981\u4ed6\u4eec\u5584\u610f\u5730\u76f8\u4fe1\u81ea\u5df1\u7684\u4f5c\u54c1\u53d7\u5230\u4e86\u4fb5\u72af\u3002\u5982\u679c\u96f6\u552e\u5546\u79fb\u9664\u4e86\u8fd9\u4e9b\u6750\u6599\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u5728\u76f8\u5173\u8bc9\u8bbc\u4e2d\u88ab\u70b9\u540d\uff0c\u800c\u4e14\u8bb8\u591a\u7f51\u7ad9\u751a\u81f3\u5728\u6ca1\u6709\u8c03\u67e5\u7d22\u8d54\u7684\u60c5\u51b5\u4e0b\u5c31\u9075\u5b88\u4e86D.M.C.A.\u7684\u901a\u77e5\u3002\u6cd5\u5f8b\u4e13\u5bb6\u8868\u793a\uff0c\u8be5\u7cfb\u7edf\u5f88\u5bb9\u6613\u88ab\u6ee5\u7528\u3002\n\u975e\u8425\u5229\u6027\u6570\u5b57\u6743\u5229\u7ec4\u7ec7\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a(Electronic Frontier Foundation)\u7684\u9ad8\u7ea7\u5f8b\u5e08\u7c73\u5947\u00b7\u65af\u6258\u5c14\u8328(Mitch Stoltz)\u8bf4\uff0c\u201c\u6211\u4eec\u89c1\u8fc7\u5f88\u591a\u4eba\u53d1\u9001DMC\u901a\u77e5\u7684\u4f8b\u5b50\uff0c\u5f88\u660e\u663e\uff0c\u4ed6\u4eec\u5e76\u4e0d\u8ba4\u4e3a\u5b58\u5728\u4fb5\u72af\u7248\u6743\u7684\u884c\u4e3a\u3002\u201d\u201c\u6ca1\u6709\u592a\u591a\u7684\u8d23\u4efb\u3002\u201d\n5\u670821\u65e5\uff0c\u7f8e\u56fd\u7248\u6743\u5c40\u53d1\u5e03\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u6210\u7acb22\u5e74\u7684D.M.C.A\u5982\u4f55\u672a\u80fd\u8ddf\u4e0a\u65e0\u653f\u5e9c\u72b6\u6001\u7684\u6570\u5b57\u751f\u6001\u7cfb\u7edf\u7684\u6b65\u4f10\uff0c\u56e0\u4e3a\u5728\u7ebf\u5e73\u53f0\u5df2\u7ecf\u88ab\u538b\u5012\u6027\u7684\u5927\u91cf\u4e0b\u67b6\u901a\u77e5\u6df9\u6ca1\u4e86\u3002\u6839\u636e\u8fd9\u4efd\u62a5\u544a\uff0c1998\u5e74\u81f32010\u5e74\u95f4\uff0c\u8c37\u6b4c\u6536\u5230\u7684\u6b64\u7c7b\u901a\u77e5\u4e0d\u5230300\u4e07\u4efd\uff1b2017\u5e74\uff0c\u8be5\u516c\u53f8\u6536\u5230\u4e86\u8d85\u8fc78.8\u4ebf\u4efd-\u589e\u957f\u4e8629000%\u4ee5\u4e0a\u3002\u8bb8\u591a\u8bf7\u6c42\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u62a5\u544a\u6307\u51fa\uff0c\u5176\u4ed6\u52a8\u673a\u5305\u62ec\u201c\u53cd\u7ade\u4e89\u76ee\u7684\uff0c\u9a9a\u6270\u5e73\u53f0\u6216\u6d88\u8d39\u8005\uff0c\u6216\u8bd5\u56fe\u538b\u5236\u6743\u5229\u4eba\u4e0d\u559c\u6b22\u7684\u8a00\u8bba\u3002\u201d\n\u4e9a\u9a6c\u900a\u4e5f\u8ba4\u4e3a\u8fd9\u662f\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u81ea\u52a9\u51fa\u7248\u7684\u5174\u8d77\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u6570\u5b57\u5185\u5bb9\uff0c\u4f5c\u8005\u4eec\u7ecf\u5e38\u4f7f\u7528\u7248\u6743\u58f0\u660e\u6765\u538b\u5236\u4ed6\u4eec\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u57282016\u5e74\u7531\u7f8e\u56fd\u7248\u6743\u5c40\u4e3b\u529e\u7684\u516c\u5f00\u542c\u8bc1\u4f1a\u4e0a\uff0c\u4e9a\u9a6c\u900a\u7684\u526f\u603b\u6cd5\u5f8b\u987e\u95ee\u65af\u8482\u82ac\u00b7\u6c83\u601d(Stephen Worth)\u8868\u793a\uff0c\u4f5c\u8005\u6b3a\u8bc8\u6027\u7684\u7248\u6743\u6295\u8bc9\u5360\u5230\u4e86\u8be5\u516c\u53f8\u6536\u5230\u7684\u201c\u4e00\u534a\u4ee5\u4e0a\u7684\u4e0b\u67b6\u901a\u77e5\u201d\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u4e0d\u5f53\u4f7f\u7528\u901a\u77e5\u6076\u610f\u653b\u51fb\u4ed6\u4eba\u4f5c\u54c1\u7684\u95ee\u9898\u3002\u201d\n\u5728Omagaverse\u6848\u4e2d\uff0c\u51ef\u6069\u5bf9\u57c3\u5229\u65af\u4fb5\u72af\u7248\u6743\u7684\u6307\u63a7\u8ba9\u4e00\u4e9b\u4eba\u89c9\u5f97\u7279\u522b\u7ad9\u4e0d\u4f4f\u811a\u3002\u201c\u4ed6\u4eec\u4e24\u4e2a\u90fd\u4e0d\u662f\u5f88\u6709\u539f\u521b\u6027\uff0c\u201d\u201c\u9677\u5bb3\u7c89\u4e1d\u5c0f\u8bf4\u201d(Framing Fan Fiction)\u7684\u4f5c\u8005\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u5df4\u65af(Kristina Busse)\u8bf4\u3002\u5979\u5199\u8fc7\u5173\u4e8e\u5965\u6885\u52a0\u97e6\u65af\u7684\u5b66\u672f\u6587\u7ae0\uff0c\u5e76\u4ee3\u8868\u57c3\u5229\u65af\u4e3a\u8be5\u6848\u63d0\u4ea4\u4e86\u4e13\u5bb6\u8bc1\u4eba\u8bc1\u8bcd\u3002\u201c\u4ed6\u4eec\u90fd\u662f\u4ece\u7c89\u4e1d\u90a3\u91cc\u5077\u6765\u7684\uff0c\u6216\u8005\u662f\u4ece\u91ce\u5916\u73b0\u6709\u7684\u6bd4\u55bb\u4e2d\u5077\u6765\u7684\u3002\u201d\n\u77e5\u8bc6\u4ea7\u6743\u4e13\u5bb6\u8bf4\uff0c\u7248\u6743\u4fdd\u62a4\u9002\u7528\u4e8e\u901a\u8fc7\u7279\u5b9a\u63aa\u8f9e\u8868\u8fbe\u601d\u60f3\uff0c\u4f46\u4e0d\u5305\u62ec\u6587\u5b66\u6bd4\u55bb\u548c\u6807\u51c6\u60c5\u8282\u8981\u70b9\u3002\u4f8b\u5982\uff0c\u72af\u7f6a\u5c0f\u8bf4\u7684\u4f5c\u8005\u4e0d\u80fd\u5bf9\u7b2c\u4e00\u5e55\u53d1\u73b0\u7684\u8eab\u4f53\u548c\u6700\u7ec8\u88ab\u6293\u83b7\u7684\u51f6\u624b\u7684\u6982\u5ff5\u6388\u4e88\u7248\u6743\u3002\n\u4f46Omeverse\u4e00\u6848\u5f88\u53ef\u80fd\u662f\u7b2c\u4e00\u6b21\u5728\u56f4\u7ed5\u4f5c\u54c1\u7684\u7ea0\u7eb7\u4e2d\u63f4\u5f15\u8fd9\u4e9b\u6cd5\u5f8b\u8bba\u70b9\uff0c\u8fd9\u4e9b\u4f5c\u54c1\u6e90\u4e8e\u6570\u5343\u540d\u4f5c\u5bb6\u975e\u6b63\u5f0f\u4ea7\u751f\u7684\u540c\u4eba\u5c0f\u8bf4\u8bed\u6599\u5e93\u3002\n\u72b9\u4ed6\u5927\u5b66(University Of Utah)\u72c2\u70ed\u7684\u4e13\u5bb6\u3001\u82f1\u8bed\u526f\u6559\u6388\u5b89\u59ae\u00b7\u8d3e\u7c73\u68ee(Anne Jamison)\u8bf4\uff0c\u201c\u5728\u540c\u4eba\u5c0f\u8bf4\u4e2d\uff0c\u6bd4\u55bb\u3001\u6545\u4e8b\u90e8\u5206\u548c\u60c5\u8282\u7684\u5206\u4eab\u662f\u81ea\u7531\u6d41\u52a8\u7684\u3002\u201d\u5979\u5bf9\u5965\u6885\u7ef4\u585e\u7684\u6bd4\u55bb\u53ef\u4ee5\u83b7\u5f97\u7248\u6743\u7684\u8bf4\u6cd5\u6301\u6000\u7591\u6001\u5ea6\u3002\u201c\u4f60\u7684\u4e1c\u897f\u548c\u522b\u4eba\u7684\u4e1c\u897f\u4e4b\u95f4\u53ea\u6709\u4e00\u6761\u6a21\u7cca\u7684\u754c\u9650\u3002\u201d\n\u57c3\u5229\u65af\u5e76\u4e0d\u662f\u7b2c\u4e00\u4e2a\u88ab\u51ef\u6069\u6307\u63a7\u6284\u88ad\u7684\u5965\u6885\u52a0\u5f17\u65af\u4eba\u7269\u30022016\u5e743\u6708\uff0c\u5979\u5728Facebook\u4e0a\u53d1\u5e16\uff0c\u6307\u8d23\u53e6\u4e00\u4f4d\u7f72\u540d\u201c\u9f99\u7684\u5c11\u5973\u201d\u7684\u4f5c\u5bb6\u6284\u88ad\u4e86\u5979\u7684\u5c0f\u8bf4\u201c\u751f\u6765\u5c31\u662f\u7528\u6765\u7e41\u6b96\u7684\u201d\u4e2d\u7684\u81f3\u5c1115\u4e2a\u60c5\u8282\u8981\u70b9\u3002\u5728\u51ef\u6069\u5973\u58eb\u53d1\u5e03\u5728Facebook\u4e0a\u7684\u4e00\u6761\u5199\u7ed9\u51ef\u6069\u7684\u4fe1\u606f\u4e2d\uff0c\u201c\u9f99\u7684\u5c11\u5973\u201d\u5426\u8ba4\u5979\u5077\u4e86\u4efb\u4f55\u4e1c\u897f\uff0c\u5e76\u8fa9\u79f0\u201c\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u6211\u8bda\u5b9e\u5730\u8ba4\u4e3a\uff0c\u4ed6\u4eec\u6ca1\u6709\u8d85\u8d8a\u72fc\u4eba\u7684\u5171\u540c\u7279\u5f81\u6216\u5b9e\u9645\u7684\u72fc\u884c\u4e3a\u3002\u201d\n\u4f46\u5728\u7f51\u4e0a\u8bc4\u8bba\u88ab\u79f0\u4e3a\u6284\u88ad\u8005\u540e\uff0c\u4f4f\u5728\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u9f99\u7684\u5c11\u5973\u4ece\u4e92\u8054\u7f51\u4e0a\u5220\u9664\u4e86\u5979\u7684\u6545\u4e8b\u3002\u5979\u5728\u4e00\u6b21\u91c7\u8bbf\u4e2d\u8bf4\uff1a\u201c\u5979\u7684\u7c89\u4e1d\u8ffd\u7740\u6211\uff0c\u5c3d\u7ba1\u6211\u4eec\u7684\u6545\u4e8b\uff0c\u9664\u4e86\u201d\u5965\u7c73\u52a0\u5f17\u65af\u201c\u4e4b\u5916\uff0c\u5b8c\u5168\u4e0d\u540c\u3002\u201d\n\u4e24\u5e74\u540e\uff0c\u51ef\u6069\u5973\u58eb\u548c\u5979\u7684\u51fa\u7248\u5546\u5411D.M.C.A.\u7533\u8bf7\u64a4\u6389\u57c3\u5229\u65af\u5973\u58eb\u7684\u524d\u4e24\u672c\u201c\u6b27\u7c73\u8304\u795e\u8bdd\u201d\u3002\u51ef\u6069\u8fd8\u8981\u6c42\u5979\u7684\u51fa\u7248\u5546\u9488\u5bf9\u57c3\u5229\u65af\u7684\u4e00\u90e8\u5c1a\u672a\u51fa\u7248\u7684\u5c0f\u8bf4\u63d0\u4ea4\u4fb5\u6743\u901a\u77e5\u3002\u201c\u7b2c\u4e09\u672c\u4e66\u4e5f\u9700\u8981\u964d\u4e0b\u6765\u3002\u636e\u4e00\u4efd\u6cd5\u5ead\u6587\u4ef6\u663e\u793a\uff0c\u6211\u4e0d\u60f3\u8ba9\u5979\u4ece\u8fd9\u90e8\u7cfb\u5217\u5267\u4e2d\u8d5a\u66f4\u591a\u7684\u94b1\uff0c\u201c\u51ef\u6069\u5973\u58eb\u57284\u6708\u4efd\u7ed9Blsing Books\u5199\u4e86\u4e00\u5c01\u4fe1\u3002\n\u5979\u8fd8\u60f3\u963b\u6b62\u57c3\u5229\u65af\u51fa\u7248\u4e00\u4e2a\u65b0\u7684\u884d\u751f\u7cfb\u5217\u5965\u6885\u52a0\u97e6\u65af\u7cfb\u5217\u56fe\u4e66\uff0c\u5e76\u7ed9\u5979\u7684\u51fa\u7248\u5546\u53d1\u4e86\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u4ed6\u4eec\u80fd\u505a\u4e9b\u4ec0\u4e48\u3002\u201c\u8138\u7ea2\u56fe\u4e66\u201d\u7684\u51fa\u7248\u5546\u8d1d\u745f\u59ae\u00b7\u4f2f\u514b(Bethany Burke)\u5bf9\u6b64\u6301\u6000\u7591\u6001\u5ea6\uff1a\u201c\u95ee\u9898\u662f--\u5c31\u50cf\u4f60\u8bf4\u7684--\u4f60\u5e76\u4e0d\u62e5\u6709Omeverse\uff0c\u201d\u5979\u5199\u9053\u3002\u201c\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u7528\u4ec0\u4e48\u673a\u5236\u6765\u5b8c\u5168\u5173\u95ed\u5979\u4f5c\u4e3a\u4f5c\u5bb6\u7684\u5730\u4f4d\uff0c\u9664\u975e\u4f60\u60f3\u8981\u7ed9\u5965\u6885\u7ef4\u745f\u6ce8\u518c\u5546\u6807\u3002\u201d(\u6211\u4eec\u6216\u8bb8\u80fd\u62ff\u5230\u3002)\u201c\u3002\n\u201c\u53d1\u73b0\u201d\u6742\u5fd7\u53d1\u5e03\u7684\u8fd9\u6761\u4fe1\u606f\u53ef\u80fd\u4e0d\u4f1a\u589e\u52a0\u51ef\u6069\u5973\u58eb\u5728\u6cd5\u5ead\u4e0a\u7684\u80dc\u7b97\u3002\u5979\u5e76\u4e0d\u603b\u662f\u81ea\u5df1\u6700\u597d\u7684\u5021\u5bfc\u8005\u3002\u5728\u53bb\u5e74\u7684\u4e00\u6b21\u8bc1\u8bcd\u4e2d\uff0c\u51ef\u6069\u8bf4\uff0c\u5979\u7684\u4e66\u548c\u57c3\u5229\u65af\u7684\u7cfb\u5217\u4e4b\u95f4\u7684\u91cd\u53e0\u8d85\u51fa\u4e86\u5965\u6885\u52a0\u97e6\u65af\u7684\u5143\u7d20\u3002\u5979\u8bf4\uff1a\u201c\u8fd9\u4e0e\u6bd4\u55bb\u65e0\u5173\uff0c\u4e0e\u5965\u7c73\u52a0\u5f17\u65af\u65e0\u5173\uff0c\u800c\u662f\u4e0e\u60c5\u8282\u76f8\u4f3c\u6709\u5173\u3002\u201d\u4f46\u5f53\u5979\u88ab\u8981\u6c42\u4e3e\u51fa\u5177\u4f53\u7684\u4f8b\u5b50\u65f6\uff0c\u5979\u8bf4\u5979\u8bb0\u4e0d\u8d77\u4efb\u4f55\u4f8b\u5b50\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u5979\u6ca1\u6709\u505a\u8fc7\u4ed4\u7ec6\u7684\u6bd4\u8f83\uff0c\u56e0\u4e3a\u8fd9\u592a\u4ee4\u4eba\u6cae\u4e27\u4e86\u3002\u5979\u8bf4\uff1a\u201c\u8001\u5b9e\u8bf4\uff0c\u6211\u5f88\u96be\u5e76\u6392\u9605\u8bfb\u5b83\u4eec\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u81ea\u5df1\u53d7\u5230\u4e86\u5f88\u5927\u7684\u4fb5\u72af\u3002\u201d\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u51ef\u6069\u5973\u58eb\u4ecd\u5728\u6253\u8fd9\u573a\u5b98\u53f8\u3002\u201c\u6211\u7684\u4f5c\u54c1\u88ab\u76d7\u7684\u4e8b\u7ed9\u6211\u9020\u6210\u4e86\u6781\u5927\u7684\u4f24\u5bb3\u3002\n..", "note_en": "Addison Cain was living in Kyoto, volunteering at a shrine and studying indigenous Japanese religion. She was supposed to be working on a scholarly book about her research, but started writing intensely erotic Batman fan fiction instead.\n It happened almost by accident. It was 2012, and Ms. Cain \u2014 who grew up in Orange County, Calif., under a different name \u2014 was three years out of college, alone abroad with a lot of time on her hands. Her command of Japanese was halting, and English titles in bookstores were wildly expensive. So Ms. Cain started reading things she could find for free online, and soon discovered fanfic \u2014 stories by amateurs that borrow characters and plots from established pop-cultural franchises.\n Ms. Cain began devouring works set in the world of Christopher Nolan\u2019s \u201cDark Knight\u201d trilogy. She decided to write some of her own, featuring Batman\u2019s nemesis Bane as a sexy antihero, and posted them for free online. She quickly developed a fan base, becoming something of a star in her sub-subgenre.\n A few years later, she was living in Arlington, Va., and working as a bartender when she began to wonder if she could turn her hobby into a business. Her husband and parents discouraged her from pursuing something so impractical. Agents were equally dismissive, rejecting or ignoring Ms. Cain\u2019s queries for more than a year. Then, a fellow writer helped Ms. Cain send a manuscript to Blushing Books, a small publishing house in Charlottesville. An editor read it overnight and sent her a contract the next day.\n In the spring of 2016, she published \u201cBorn to Be Bound,\u201d an adaptation of her fanfic. The story takes place on a future earth where most of humanity has died from a plague and survivors live under a dome, divided into a wolfpack-like hierarchy of dominant Alphas, neutral Betas and submissive Omegas. A powerful, brutish Alpha named Shepherd takes an Omega woman named Claire captive, and they engage in rough, wolfish sex.\n Ms. Cain\u2019s fans posted nearly 100 positive reviews on Amazon, enough to get her some visibility. \u201cUnapologetically raw and deliciously filthy,\u201d read one glowing blurb. The debut was a hit. She rushed out several more titles, and the series grossed some $370,000, according to her publisher.\n For the next two years, Ms. Cain published at breakneck speed, producing a novel every few months by repurposing her older fan fiction, keeping her books in the algorithmic sweet spot of Amazon\u2019s new releases and turning herself into a recognizable brand. \u201cDip your toes into the erotica pool,\u201d she said on a 2016 sci-fi and fantasy podcast. \u201cThere\u2019s nothing to do here but make money.\u201d\n Then, in 2018, Ms. Cain heard about an up-and-coming fantasy writer with the pen name Zoey Ellis, who had published an erotic fantasy series with a premise that sounded awfully familiar. It featured an Alpha and Omega couple, and lots of lupine sex. The more Ms. Cain learned about \u201cMyth of Omega\u201d and its first installment, \u201cCrave to Conquer,\u201d the more outraged she became. In both books, Alpha men are overpowered by the scent of Omega heroines and take them hostage. In both books, the women try and fail to suppress their pheromones and give in to the urge to mate. In both books, the couples sniff, purr and growl; nest in den-like enclosures; neck-bite to leave \u201cclaim\u201d marks; and experience something called \u201cknotting,\u201d involving a peculiar feature of the wolf phallus.\n  Ms. Cain urged Blushing Books to do something. The publisher sent copyright violation notices to more than half a dozen online retailers, alleging that Ms. Ellis\u2019s story was \u201ca copy\u201d with scenes that were \u201calmost identical to Addison Cain\u2019s book.\u201d Most of the outlets, including Barnes &amp; Noble, iTunes, and Apple, removed Ms. Ellis\u2019s work immediately. Ms. Cain\u2019s readers flocked to her defense. \u201cThis is a rip off of Addison Cain,\u201d one irate reader wrote on Goodreads. \u201cSo disappointed in this author and I hope Mrs. Cain seeks legal charges against you for stealing her work! Shame on you!\u201d\n It\u2019s hard to imagine that two writers could independently create such bizarrely specific fantasy scenarios. As it turns out, neither of them did. Both writers built their plots with common elements from a booming, fan-generated body of literature called the Omegaverse.\n The dispute between Ms. Cain and Ms. Ellis is a kink-laden microcosm of tactics at play throughout the fanfic industry. As the genre commercializes, authors aggressively defend their livelihoods, sometimes using a 1998 law, the Digital Millennium Copyright Act, to get online retailers to remove competitors\u2019 books. When making a claim, a creator must have a \u201cgood faith belief\u201d that her ownership of the work in question has been infringed.\n But what does that mean when the ultimate source material is a crowdsourced collective? The question has members of the Omegaverse community choosing sides between Ms. Cain and Ms. Ellis \u2014 as will a federal judge in Virginia, who is considering whether the allegations, and the consequences, merit a payout of more than a million dollars.\n  To untangle the Omegaverse fight, it helps to understand its origins in a parallel literary universe \u2014 the vast, unruly, diverse, exuberant and often pornographic world of fan fiction.\n After getting its start decades ago in \u201cStar Trek\u201d zines, fanfic mushroomed when the internet made it easy for especially dedicated consumers of pop culture to find and create stories for one another. There are now subgenres upon subgenres, from \u201cslash\u201d (where two male characters pair up romantically, such as Sherlock Holmes and Dr. Watson), to odder fare like \u201cmundane AU\u201d (an alternative universe where magical characters live in the real world \u2014 e.g., Harry Potter goes to a regular boarding school and has normal teen problems).\n While some traditional authors have derided fan fiction writers as creative parasites, there isn\u2019t really any way to stop them. Such works are legal as long as writers post them for free and don\u2019t try to sell stories based on copyrighted material.\n But too much money was at stake for the genre to remain amateur forever. E L James\u2019s blockbuster series \u201cFifty Shades of Grey,\u201d which sold  more than 150 million copies, started as fanfic based on Stephenie Meyer\u2019s \u201cTwilight\u201d vampire saga. By swapping out copyrighted characters for nominally original ones \u2014 a practice known as \u201cfiling off the serial numbers\u201d \u2014 fanfic writers like Ms. James, Christina Lauren and the cheekily named Tara Sue Me have leapfrogged into for-profit publishing.\n As more fan fiction writers cross over into commercial publishing, turf wars have erupted. \u201cFan fiction made authors and publishers realize there was a thriving market for this stuff,\u201d said Rebecca Tushnet, a copyright expert at Harvard Law School. \u201cThere\u2019s much more of it, so there\u2019s more opportunity for conflict.\u201d\n The specific fanfic universe that spawned the Cain-Ellis dispute emerged about a decade ago, when devotees of the CW drama \u201c Supernatural\u201d began writing stories in which its two lead actors are lovers. One would be the dominant alpha male. The other man would be a feminized omega, often with the ability to become impregnated \u2014 a trope known as MPreg. Canine, and then lupine, sex stuff got mixed in.\n The premise was wildly popular, and tropes were rapidly adopted by writers in other fandoms, including NBC\u2019s \u201cHannibal\u201d and MTV\u2019s \u201cTeen Wolf.\u201d The sprawling body of work that followed came to be known as the Omegaverse, with its own rules, plot elements and terminology.\n Some Omegaverse stories involve lycanthropes (werewolves), vampires, shape-shifters, dragons, space pirates, others feature regular humans. But virtually all Omegaverse couples engage in wolflike behavior. Alphas \u201crut\u201d and Omegas go through heat cycles, releasing pheromones that drive Alphas into a lusty frenzy. One particular physiological quirk that\u2019s ubiquitous in Omegaverse stories, called knotting, comes from a real feature of wolves\u2019 penises, which swell during intercourse, causing the mating pair to remain physically bound to increase the chance of insemination.\n The appetite for such tales is large and growing. In the past decade, more than 70,000 stories set in the Omegaverse have been published on the fan fiction site Archive of Our Own. As it became more popular, the Omegaverse transcended individual fandoms and became an established genre on its own.\n Writers began publishing Omegaverse stories with original characters and settings, and authors started to publish them for profit. On Amazon, there are hundreds of novels for sale, including titles like \u201cPregnant Rock Star Omega,\u201d \u201cWolf Spirit: A Reverse Harem Omegaverse Romance\u201d and \u201cSome Bunny to Love: An M/M MPreg Shifter Romance,\u201d an improbable tale involving an Alpha male who can transform into a rabbit.\n This was the thriving commercial backdrop to Ms. Cain\u2019s allegation that Ms. Ellis stole her material. Ms. Ellis thought that the claim was absurd \u2014 and was prepared to say so in court.\n One day last spring, Ms. Ellis met me for coffee at a hotel near Paddington Station. She doesn\u2019t seem like someone who writes dark, edgy, sometimes violent erotica. She\u2019s young, cheerful, and works in education in London, which is one of the reasons she declines to publish under her real name. Most days, she gets up at four in the morning to write, then heads to the school where she works. On her Amazon author page, she describes herself as a \u201ccat mama\u201d who loves \u201csexual tension that jumps off the page.\u201d\n  Ms. Ellis said she got into fan fiction in 2006. She read stories set in the Harry Potter universe at first, then moved on to other fandoms, including one for the BBC\u2019s \u201cSherlock,\u201d starring Benedict Cumberbatch, that introduced her to the Omegaverse. The genre was unlike anything else she\u2019d encountered. She began dabbling in her own original writing, and in late 2017 began working on the \u201cMyth of Omega\u201d series.\n Set in a medieval fantasy world, the first novel, \u201cCrave to Conquer,\u201d features an Alpha emperor who becomes obsessed with a beguiling undercover Omega spy named Cailyn. She resists his advances, using magic to mask the scent of her pheromones, until she is overcome by the biological imperative. To appeal to other Omegaverse and dark romance fans, Ms. Ellis built the narrative around standard genre elements \u2014 the wolflike tics and mating, and an edgy dominant-submissive dynamic. (In fanfic terminology, some of the sexual scenarios would be labeled \u201cdub-con,\u201d or \u201cdubious consent.\u201d)\n \u201cYou have to make sure you use the tropes of Omegaverse in order to be recognized by fans of the genre,\u201d Ms. Ellis said. \u201cCrave to Conquer\u201d and its sequel, \u201cCrave to Capture,\u201d were published in early 2018 by Quill Ink Books, a London company she founded. Readers gave the series glowing reviews on Goodreads and Amazon, calling it \u201csensational new Omegaverse!\u201d and the \u201cbest Omega yet.\u201d\n In late April 2018, Ms. Ellis got an email from a reader who had ordered one of her books from Barnes &amp; Noble, then learned that it wasn\u2019t available anymore. She soon discovered that all of her Omegaverse books had disappeared from major stores, all because of a claim of copyright infringement from Ms. Cain and her publisher. Ms. Ellis found it bewildering.\n \u201cI couldn\u2019t see how a story I had written using recognized tropes from a shared universe, to tell a story that was quite different than anything else out there commercially, could be targeted in that way,\u201d Ms. Ellis said. \u201cThere are moments and scenarios that seem almost identical, but it\u2019s a trope that can be found in hundreds of stories.\u201d\n A lawyer for Ms. Ellis and Quill filed counter-notices to websites that had removed her books. Some took weeks to restore the titles; others took months. There was no way to recover the lost sales. \u201cAs a new author, I was building momentum, and that momentum was lost,\u201d Ms. Ellis said. And she worried that the \u201cplagiarist\u201d label would permanently mar her reputation.\n Ms. Ellis decided to sue. \u201cEverything would have been in question, my integrity would have been questioned, my ability to write and tell stories \u2014 all of that would have been under threat if I didn\u2019t challenge these claims,\u201d she said.\n In the fall of 2018, Quill Ink filed against Blushing Books and Ms. Cain in federal court in Oklahoma, where Ms. Ellis\u2019s digital distributor is based, seeking $1.25 million in damages for defamation, interfering with Ms. Ellis\u2019s career, and for filing false copyright infringement notices. In the suit, Quill\u2019s lawyers argued that \u201cno one owns the \u2018omegaverse\u2019 or the various tropes that define \u2018omegaverse.\u2019\u201d\n Ms. Ellis\u2019s lawyers thought they had a strong position. But they struggled to find a prior case that addressed whether fan fiction tropes could be protected by copyright.\n \u201cWe were looking at cases to see if the courts had ever dealt with anything like this before, dealing with the emergence of this new literary genre,\u201d said Gideon Lincecum, a lawyer who represents Quill Ink and Ms. Ellis. \u201cWe found there weren\u2019t any.\u201d\n  The intense rivalry isn\u2019t limited to writers in the Omegaverse. As online publishing has gotten more competitive \u2014 there are millions of e-books available on Amazon, up from 600,000 in 2014 \u2014 some genre authors have grown aggressive in their efforts to dominate their literary niche.\n Last year, an author who writes in a popular romance subgenre called \u201cReverse Harem High School Bully Romance\u201d \u2014 a trope in which a teenage female character has several aggressive male suitors \u2014 claimed that another author had copied her books, and demanded that she remove them. The accused author briefly removed her work from Amazon, but restored them after consulting a lawyer.\n  Other authors have tried to use trademarks to go after their rivals. Writers have attempted to trademark generic phrases like \u201cdragon slayer\u201d and even the word \u201cdark.\u201d In 2018, the self-published romance author Faleena Hopkins caused a scandal after she registered a  trademark for the word \u201ccocky,\u201d and sent infringement notices to other romance authors who used the word in their titles. Amazon temporarily removed some books, including \u201cHer Cocky Firefighters\u201d and \u201cHer Cocky Doctors.\u201d After suing several people unsuccessfully, Ms. Hopkins backed down.\n Like Cockygate, the Omegaverse case reveals how easily intellectual property law can be weaponized by authors seeking to take down their rivals. Under the Digital Millennium Copyright Act, individuals or companies can send takedown notices to retailers as long as they have a good faith belief that their work has been infringed. Retailers are protected from being named in related litigation if they remove the material, and many websites comply with D.M.C.A. notices without even investigating the claims. Legal experts say the system is easily abused.\n \u201cWe\u2019ve seen lots of examples of people sending D.M.C.A. notices when it\u2019s pretty obvious that they didn\u2019t think there was copyright infringement,\u201d said Mitch Stoltz, a senior staff attorney for the Electronic Frontier Foundation, a nonprofit digital rights group. \u201cThere\u2019s not much accountability.\u201d\n On May 21, the U.S. Copyright Office  released a report detailing how the 22-year-old D.M.C.A. has failed to keep pace with the anarchic digital ecosystem, as online platforms have been overwhelmed by a crushing volume of takedown notices. Between 1998 and 2010, Google received fewer than three million such notices; in 2017, the company got more than 880 million \u2014 an increase of more than 29,000 percent, according to the report. Many requests are legitimate, but the report notes that other motives include \u201canti-competitive purposes, to harass a platform or consumer, or to try and chill speech that the rightsholder does not like.\u201d\n Amazon agrees that it\u2019s a problem. As the rise of self-publishing has produced a flood of digital content, authors frequently use copyright notices to squash their competition. During a public hearing hosted by the U.S. Copyright Office in 2016, Stephen Worth, Amazon\u2019s associate general counsel, said that fraudulent copyright complaints by authors accounted for \u201cmore than half of the takedown notices\u201d the company receives. \u201cWe need to fix the problem of notices that are used improperly to attack others\u2019 works maliciously,\u201d he said.\n In the Omegaverse case, Ms. Cain\u2019s claim of copyright infringement against Ms. Ellis has struck some as especially tenuous. \u201cThey are not very original, either one of them,\u201d said Kristina Busse, the author of \u201cFraming Fan Fiction,\u201d who has written academic essays about the Omegaverse and submitted expert witness testimony for the case on Ms. Ellis\u2019s behalf. \u201cThey both stole from fandom or existing tropes in the wild.\u201d\n Intellectual property experts say copyright protection applies to the expression of ideas through particular phrasing, but doesn\u2019t cover literary tropes and standard plot points. The writer of a crime novel, for example, can\u2019t copyright the notion of a body discovered in the first act and the killer getting caught in the end.\n But the Omegaverse case is likely the first time these legal arguments have been invoked in a dispute over works that grew out of a corpus of fan fiction generated informally by thousands of writers.\n \u201cIn fan fiction, the sharing of tropes and story parts and plot lines is free flowing,\u201d said Anne Jamison, a fanfic expert and associate professor of English at the University of Utah, who was skeptical of the notion that Omegaverse tropes could be copyrighted. \u201cThere\u2019s a blurry line between what is specifically yours and what is somebody else\u2019s.\u201d\n  Ms. Ellis wasn\u2019t the first Omegaverse figure Ms. Cain accused of plagiarism. In March 2016, she wrote a Facebook post charging that another author, who wrote under the name the Dragon\u2019s Maiden, had copied at least 15 plot points from her novel \u201cBorn to Be Bred.\u201d In a message to Ms. Cain, which Ms. Cain posted on Facebook, the Dragon\u2019s Maiden denied she had stolen anything, and argued that \u201cthere are some similarities, but I honestly believe that they don\u2019t go beyond common Lycan traits or actual wolf behavior.\u201d\n But after being called a plagiarist in online comments, the Dragon\u2019s Maiden, who lives in Wisconsin, removed her story from the internet. \u201cHer fans came after me, even though our stories, other than being Omegaverse, were nothing alike,\u201d she said in an interview.\n Two years later, Ms. Cain and her publisher filed D.M.C.A. takedown requests against Ms. Ellis\u2019s first two \u201cMyth of Omega\u201d books. Ms. Cain also asked her publisher to file an infringement notice against an Ellis novel that hadn\u2019t even been released yet. \u201cBook three needs to come down too. I don\u2019t want her to make any more money off this series,\u201d Ms. Cain wrote to Blushing Books in April, according to a court filing.\n She also wanted to stop Ms. Ellis from publishing a new spinoff series of Omegaverse books, and emailed her publisher, asking what they could do. Bethany Burke, the publisher of Blushing Books, was skeptical: \u201cThe problem is \u2014 as you say \u2014 you do not own Omegaverse,\u201d she wrote. \u201cI don\u2019t know what mechanism we can use to shut her down completely as an author, unless YOU want to try to trademark Omegaverse. (Which we might be able to get.)\u201d\n That message, produced in discovery, probably won\u2019t help Ms. Cain\u2019s chances in court. She has not always been her own best advocate. In a deposition last year, Ms. Cain said that the overlap between her books and Ms. Ellis\u2019s series went beyond the Omegaverse elements. \u201cIt has nothing to do with trope, it has nothing to do with Omegaverse, it has to do with plot similarities,\u201d she said. But when she was asked to cite specific examples, she said she couldn\u2019t recall any, adding that she hadn\u2019t done a close comparison because it was too upsetting. \u201cIt was hard for me to read them side by side, honestly, because I felt very violated,\u201d she said.\n Still, Ms. Cain is fighting the lawsuit. \u201cThe theft of my work was devastat\n......", "posttime": "2020-05-26 11:53:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6069\u6028,wolf,\u6545\u4e8b", "title": "\u201c\u72fc\u7ed3\u60c5\u6b32\u201d\u4e2d\u7684\u6069\u6028\u5f15\u53d1\u4e86\u4e00\u4e2a\u6df1\u5c42\u6b21\u7684\u6cd5\u5f8b\u95ee\u9898", "title_en": "A Feud in Wolf-Kink Erotica Raises a Deep Legal Question", "transed": 1, "url": "https://www.nytimes.com/2020/05/23/business/omegaverse-erotica-copyright.html", "via": "", "real_tags": ["\u6069\u6028", "wolf", "\u6545\u4e8b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003751, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5f00\u59cb\u5efa\u7acb\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9--\u4f60\u73b0\u5728\u6b63\u5728\u9605\u8bfb\u7684\u90a3\u4e2a\u7f51\u7ad9\uff0c\u6070\u597d\u662f\u8fd9\u6837\uff01\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8981\u628a\u4e00\u4e2a\u7b26\u5408\u6211\u6807\u51c6\u7684\u6280\u672f\u5806\u6808\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6bd4\u9884\u671f\u7684\u8981\u96be\u5f97\u591a\u3002\u6211\u7684\u6807\u51c6\u975e\u5e38\u7b80\u5355\uff1b\u6211\u5e0c\u671b\u5927\u591a\u6570RESPECT\u5f00\u53d1\u4eba\u5458\u90fd\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u5217\u8868\u3002\u7136\u800c\uff0c\u8981\u5c06\u6240\u6709\u8fd9\u4e9b\u788e\u7247\u653e\u5728\u4e00\u8d77\u5374\u51fa\u4eba\u610f\u6599\u5730\u56f0\u96be\u3002\n\u9274\u4e8e\u7f3a\u4e4f\u50cf\u6837\u7684\u5f00\u7bb1\u5373\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u62c5\u5fc3\u8bb8\u591a\u5f00\u53d1\u4eba\u5458(\u751a\u81f3\u53ef\u80fd\u662f\u60a8\uff0c\u4eb2\u7231\u7684\u8bfb\u8005)\u6b63\u6ee1\u8db3\u4e8e\u6b21\u4f18\u7684\u3001\u53d7\u9650\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u8fd9\u9650\u5236\u4e86\u60a8\u7f51\u7ad9\u7684\u4ea4\u4e92\u6027\u548c\u7075\u6d3b\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\ntl\uff1bdr i\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aDevii\u7684\u4e2a\u4eba\u5f00\u53d1\u535a\u5ba2\u542f\u52a8\u8005\u3002\u5728\u6b64\u5904\u514b\u9686\u5b58\u50a8\u5e93\u4ee5\u5f00\u59cb\u6b64\u8bbe\u7f6e\uff1ahttps://github.com/vriad/devii.\u3002\n\u6211\u60f3\u5728\u53cd\u5e94\u548c\u6253\u5b57\u7684\u7f51\u7ad9\u5efa\u8bbe\u3002\u6211\u5168\u5fc3\u5168\u610f\u5730\u7231\u4ed6\u4eec\u4e24\u4e2a\uff0c\u6211\u628a\u5b83\u4eec\u7528\u5728\u6211\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u800c\u4e14\u5b83\u4eec\u5c06\u4f1a\u5b58\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u3002\u53e6\u5916\uff0c\u7f16\u5199\u975e\u7c7b\u578b\u5316\u7684js\u8ba9\u6211\u611f\u89c9\u5f88\u810f\u3002\n\u6211\u4e0d\u5e0c\u671b\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u53d7\u5230\u9650\u5236\u3002\u5f53\u7136\uff0c\u6211\u76ee\u524d\u7684\u7f51\u7ad9\u7531\u4e24\u7bc7\u7b80\u5355\u7684\u9759\u6001\u535a\u5ba2\u6587\u7ae0\u7ec4\u6210\u3002\u4f46\u63a5\u4e0b\u6765\uff0c\u6211\u53ef\u80fd\u5e0c\u671b\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3001\u53ef\u7b5b\u9009\u8868\u6216Reaction\u7ec4\u4ef6\u5f00\u6e90\u6f14\u793a\u7684\u9875\u9762\u3002\u5373\u4f7f\u662f\u4e00\u4e9b\u7b80\u5355\u7684\u4e1c\u897f(\u5982\u672c\u9875\u5e95\u90e8\u7684\u7535\u5b50\u90ae\u4ef6\u65f6\u4e8b\u901a\u8baf\u6ce8\u518c\u8868\u5355)\u5982\u679c\u6ca1\u6709Reaction\u4e5f\u5f88\u96be\u5b9e\u73b0\uff1b\u6211\u771f\u7684\u5bf9\u6211\u4eec\u5728Reaction\u4e4b\u524d\u662f\u5982\u4f55\u6784\u5efa\u8868\u5355\u7684\u5b8c\u5168\u6ca1\u6709\u8bb0\u5fc6\u3002\n\u53e6\u5916\uff1a\u6211\u60f3\u8bbf\u95eeNPM\u751f\u6001\u7cfb\u7edf\u548c\u6240\u6709\u6211\u6700\u559c\u6b22\u7684UI\u3001\u52a8\u753b\u548c\u6837\u5f0f\u5e93\u3002\u6211\u771f\u8bda\u5730\u5e0c\u671b\u6211\u518d\u4e5f\u4e0d\u8981\u5199\u4e00\u884c\u539f\u59cb\u7684CSS\uff1bCSS-in-JS4LYFE\u5b9d\u8d1d\u3002\u5982\u679c\u4f60\u60f3\u5728\u63a8\u7279\u4e0a\u8ddf\u6211\u5435\u67b6\uff0c\u90a3\u5c31\u6765\u627e\u6211\u5427\uff1a@vriad\u3002\n\u5982\u679c\u5199\u65b0\u7684\u535a\u5ba2\u5e16\u5b50\u4ee4\u4eba\u538c\u6076\uff0c\u6211\u4e0d\u4f1a\u8fd9\u4e48\u505a\u3002\u8fd9\u662f\u4e00\u6761\u4ee4\u4eba\u9057\u61be\u7684\u5b87\u5b99\u6cd5\u5219\u3002\u5373\u4f7f\u7528\u666e\u901a\u7684HTML--\u53ea\u662f\u4e00\u5806&lt\uff1bp&gt\uff1b\u6807\u7b7e\u653e\u5728\u4e00\u4e2adiv\u4e2d--\u5199\u535a\u5ba2\u5e16\u5b50\u4e5f\u591f\u70e6\u4eba\u7684\u4e86\u3002\u7b54\u6848\u662f\uff1a\u5f53\u7136\u662f\u964d\u4ef7\uff01\n\u50cfHugo\u548cJekyll\u8fd9\u6837\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668(SSG)\u63d0\u4f9b\u4e86\u4e0d\u53ef\u5426\u8ba4\u7684\u7f8e\u5999\u521b\u4f5c\u4f53\u9a8c\u3002\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f\u5728\u6b63\u786e\u7684\u76ee\u5f55\u4e2d\u89e6\u6478\u4e00\u4e2a\u65b0\u7684.md\u6587\u4ef6\uff0c\u7136\u540e\u5f00\u59cb\u7f16\u5199\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u6240\u77e5\u9053\u7684\u6240\u6709\u57fa\u4e8e\u964d\u4ef7\u7684SSG\u90fd\u8fc7\u4e8e\u4e25\u683c\u3002\u5728\u540c\u4e00\u9875\u4e0a\u6df7\u7528Reaction\u548cMarkdown\u8981\u4e48\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8981\u4e48\u5c31\u662f\u5f88\u68d8\u624b\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5b83\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u63d2\u4ef6/\u6a21\u5757/\u6269\u5c55\u3001\u914d\u7f6e\u6587\u4ef6\u3001BLOB\u6837\u677f\u6216\u60ca\u4eba\u7684\u9ed1\u5ba2\u653b\u51fb\u3002\u5bf9\u4e0d\u8d77\uff0c\u96e8\u679c\uff0c\u6211\u4e0d\u4f1a\u50cf2015\u5e74\u90a3\u6837\u7528React.createElement\u91cd\u5199\u6211\u7684\u53cd\u5e94\u4ee3\u7801\u3002\n\u55ef\uff0c\u90a3\u5bf9\u6211\u4e0d\u7ba1\u7528\u3002\u6211\u5e0c\u671b\u6211\u7684\u7f51\u7ad9\u662f\u53cd\u5e94\u4f18\u5148\u7684\uff0c\u5f53\u5b83\u8ba9\u6211\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u5bb9\u6613\u7684\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e9b\u964d\u4ef7\u3002\n\u867d\u7136\u6211\u975e\u5e38\u559c\u6b22Jamstack\uff0c\u4f46\u4ece\u641c\u7d22\u5f15\u64ce\u4f18\u5316\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u5e76\u6ca1\u6709\u524a\u51cf\u5b83\u3002\u8bb8\u591a\u7531\u65e0\u5934CMS\u63d0\u4f9b\u652f\u6301\u7684\u535a\u5ba2\u5728\u5448\u73b0\u535a\u5ba2\u5185\u5bb9\u4e4b\u524d\u9700\u8981\u4e24\u6b21\u5f80\u8fd4(\u4e00\u6b21\u662f\u83b7\u53d6\u9759\u6001JS\u5305\uff0c\u53e6\u4e00\u6b21\u662f\u4eceCMS\u83b7\u53d6\u535a\u5ba2\u5185\u5bb9)\u3002\u8fd9\u4f1a\u964d\u4f4e\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\u548c\u7528\u6237\u4f53\u9a8c\uff0c\u4ece\u800c\u964d\u4f4e\u60a8\u5728Google\u4e0a\u7684\u6392\u540d\u3002\n\u76f8\u53cd\uff0c\u6211\u5e0c\u671b\u6211\u7684\u7ad9\u70b9\u7684\u6bcf\u4e2a\u9875\u9762\u90fd\u9884\u5148\u5448\u73b0\u4e3a\u4e00\u7ec4\u5b8c\u5168\u9759\u6001\u7684\u8d44\u4ea7\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u90e8\u7f72\u5230CDN\uff0c\u5e76\u5728\u4efb\u4f55\u5730\u65b9\u83b7\u5f97\u5feb\u901f\u7684\u9875\u9762\u52a0\u8f7d\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u7aef\u5448\u73b0\u83b7\u5f97\u76f8\u540c\u7684\u597d\u5904\uff0c\u4f46\u8fd9\u9700\u8981\u5b9e\u9645\u7684\u670d\u52a1\u5668\u548c\u5168\u7403\u8d1f\u8f7d\u5e73\u8861\u624d\u80fd\u8fbe\u5230\u7c7b\u4f3c\u7684\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\u3002\u6211\u548c\u5176\u4ed6\u4eba\u4e00\u6837\u559c\u6b22\u8fc7\u5ea6\u8bbe\u8ba1\u4e1c\u897f\uff0c\u751a\u81f3\u6211\u4e5f\u6709\u4e00\u53e5\u53f0\u8bcd\u3002\ud83d\ude05\u3002\n\u6211\u5c06\u5728\u4e0b\u9762\u63cf\u8ff0\u6211\u6700\u7ec8\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u9009\u62e9\u7684\u57fa\u672c\u539f\u7406\u3002\u6211\u5c06\u6b64\u8bbe\u7f6e\u63d0\u70bc\u6210\u4e00\u4e2a\u7f51\u7ad9\u521d\u5b66\u8005/\u6837\u677f\uff0c\u53ef\u5728\u6b64\u5904\u627e\u5230\uff1ahttps://github.com/vriad/devii.\u3002\u4e0b\u9762\uff0c\u6211\u63d0\u5230\u4e86\u6211\u5b9e\u73b0\u7684\u67d0\u4e9b\u6587\u4ef6/\u51fd\u6570\uff1b\u8981\u67e5\u770b\u8fd9\u4e9b\u6587\u4ef6/\u51fd\u6570\u7684\u6e90\u4ee3\u7801\uff0c\u53ea\u9700\u514b\u9686repo git\u514b\u9686git@github.com\uff1avriad/devii.git\u3002\n\u6211\u9009\u62e9\u4f7f\u7528Next.js\u6784\u5efa\u6211\u7684\u7ad9\u70b9\u3002\u8fd9\u4e0d\u4f1a\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u51b3\u5b9a\uff0c\u4efb\u4f55\u4eba\u8c01\u73a9\u9759\u6001\u6e32\u67d3\u6216\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u7684\u53cd\u5e94\u5728\u6700\u8fd1\u51e0\u5e74\u3002Next.js\u6b63\u5728\u8fc5\u901f\u5403\u6389\u8fd9\u4e2a\u5e02\u573a\u4e0a\u5176\u4ed6\u6240\u6709\u4eba\u7684\u5348\u9910\uff0c\u7279\u522b\u662f\u76d6\u8328\u6bd4\u7684(\u62b1\u6b49\uff0c\u76d6\u8328\u6bd4\u7684\u7c89\u4e1d\u4eec)\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0cNext.js\u662f\u4f7f\u7528Reaction\u6267\u884c\u4efb\u4f55\u9759\u6001\u751f\u6210\u6216\u670d\u52a1\u5668\u7aef\u5448\u73b0\u7684\u6700\u4f18\u96c5\u7684\u65b9\u5f0f\u3002\u65e9\u57283\u6708\u4efd\uff0c\u4ed6\u4eec\u521a\u521a\u57289.3\u7248\u672c\u4e2d\u53d1\u5e03\u4e86\u4ed6\u4eec\u7684\u4e0b\u4e00\u4ee3(\u53cc\u5173\u8bed)\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u3002\u56e0\u6b64\uff0c\u672c\u7740\u5728\u751f\u547d\u4e4b\u6625\u4f7f\u7528\u6280\u672f\u7684\u7cbe\u795e\uff0cNext.js\u662f\u4e00\u4e2a\u4e0d\u8d39\u5439\u7070\u4e4b\u529b\u7684\u516c\u53f8\u3002\n\u4ee5\u4e0b\u662f\u9879\u76ee\u7ed3\u6784\u7684\u5feb\u901f\u7ec6\u76ee\u3002\u4e0d\u9700\u8981\u7406\u89e3\u5b83\u7684\u6bcf\u4e00\u90e8\u5206\uff1b\u4f46\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u4e2d\u53c2\u8003\u5b83\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\n\u3002\u251c\u2500\u2500\u81ea\u8ff0\u6587\u4ef6\u3002MD\u251c\u2500\u2500PUBLIC//\u6240\u6709\u9759\u6001\u6587\u4ef6(\u56fe\u50cf\u7b49)\u90fd\u8f6c\u5230\u6b64\u5904\u251c\u2500\u2500Pages//\u6b64\u76ee\u5f55\u4e2d\u7684\u6bcf\u4e2a.tsx\u7ec4\u4ef6\u90fd\u4f1a\u6210\u4e3a\u6700\u7ec8\u7ad9\u70b9|\u251c\u2500\u2500\u7d22\u5f15\u7684\u4e00\u4e2a\u9875\u9762\u3002tsx//\u4e3b\u9875(\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u535a\u5ba2\u6587\u7ae0\u5217\u8868)|\u251c\u2500\u2500\u535a\u5ba2|\u251c\u2500\u2500[\u535a\u5ba2]\u3002md//\u5448\u73b0`/md/blog`\u251c\u2500\u2500md|\u251c\u2500\u2500\u535a\u5ba2|\u251c\u2500\u2500\u8bbe\u5907\u4e0b\u7684\u535a\u5ba2\u5e16\u5b50\u7684\u6a21\u677f\u7ec4\u4ef6\u3002MD//\u8fd9\u4e00\u9875\uff01\u251c\u2500\u2500\u968f\u4fbf\u4ec0\u4e48\u3002MD//\u6b64\u76ee\u5f55\u4e2d\u7684\u6bcf\u4e2aMD\u6587\u4ef6\u90fd\u5c06\u6210\u4e3a\u535a\u5ba2\u5e16\u5b50\u251c\u2500\u2500Components|\u251c\u2500\u2500\u3002tsx|\u251c\u2500\u2500\u3002tsx|\u251c\u2500\u2500&lt\uff1b\u5404\u79cd\u5176\u4ed6&gt\uff1b\u251c\u2500\u2500\u52a0\u8f7d\u673a\u3002ts//\u5305\u542b\u7528\u4e8e\u52a0\u8f7d/\u89e3\u6790Markdown\u251c\u2500\u2500\u8282\u70b9\u6a21\u5757\u251c\u2500\u2500tsconfig\u7684\u5b9e\u7528\u51fd\u6570\u3002JSON\u251c\u2500\u2500\u5305\u3002\u4e0b\u4e00\u4f4d\u662fJSON\u251c\u2500\u2500\u3002\u914d\u7f6e\u3002JS\u251c\u2500\u2500Next-env.\u3002d.\u3002TS\u251c\u2500\u2500.\u3002\u5409\u8482\u8bfa\u5c14\u3002\nReaction\u548cTypeScript\u90fd\u5305\u542b\u5728Next.js\u7684DNA\u4e2d\uff0c\u56e0\u6b64\u5f53\u60a8\u8bbe\u7f6eNext.js\u9879\u76ee\u65f6\uff0c\u60a8\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u5b83\u4eec\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cGatsby\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u652f\u6301\u6253\u5b57\u7684\u63d2\u4ef6\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u5f97\u5230\u5b98\u65b9\u7684\u652f\u6301\uff0c\u800c\u4e14\u4f3c\u4e4e\u5728\u4ed6\u4eec\u7684\u4f18\u5148\u5217\u8868\u4e2d\u6392\u540d\u8f83\u4f4e\u3002\u800c\u4e14\uff0c\u5728\u6446\u5f04\u4e86\u5b83\u4e00\u4e2a\u5c0f\u65f6\u540e\uff0c\u6211\u65e0\u6cd5\u8ba9\u5b83\u5728\u70ed\u91cd\u65b0\u52a0\u8f7d\u7684\u60c5\u51b5\u4e0b\u73a9\u5f97\u5f88\u597d\u3002\n\u4f7f\u7528Next\u7684\u7279\u6b8agetStaticProps\u94a9\u5b50\u548c\u8f89\u714c\u7684\u52a8\u6001\u5bfc\u5165\uff0c\u5b83\u5bf9\u4e8eMarkdown\u6587\u4ef6\u6765\u8bf4\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u5e76\u5c06\u5176\u5185\u5bb9\u4f5c\u4e3a\u9053\u5177\u4f20\u9012\u5230\u60a8\u7684Reaction\u7ec4\u4ef6\u4e2d\u3002\u8fd9\u5b9e\u73b0\u4e86\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u7684\u5723\u676f\uff1a\u8f7b\u677e\u6df7\u5408\u3001\u53cd\u5e94\u548c\u964d\u4ef7\u7684\u80fd\u529b\u3002\n\u6bcf\u4e2aMarkdown\u6587\u4ef6\u90fd\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u5305\u542b\u5143\u6570\u636e\u7684\u6807\u9898\u5757\u3002\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u7528\u51fd\u6570(LoadPost)\uff0c\u8be5\u51fd\u6570\u52a0\u8f7dMarkdown\u6587\u4ef6\uff0c\u89e3\u6790\u5176\u5185\u5bb9\uff0c\u5e76\u8fd4\u56de\u5177\u6709\u4ee5\u4e0b\u7b7e\u540d\u7684TypeScript\u5bf9\u8c61\uff1a\ntype={path\uff1astring\uff1b//\u8be5\u9875\u9762\u7684\u76f8\u5bf9URL\uff0c\u53ef\u4ee5\u4f5c\u4e3ahref content\uff1astring\uff1b//MD\u6587\u4ef6\u6807\u9898\u7684\u6b63\u6587\uff1f\uff1astring\uff1bsubtitle\uff1f\uff1astring\uff1bdate\uff1f\uff1anumber\uff1bauth\uff1f\uff1astring\uff1bAuthPhoto\uff1f\uff1astring\uff1btag\uff1f\uff1astring[]\uff1bbannerPhoto\uff1f\uff1astring\uff1bthhumnailPhoto\uff1f\uff1astring\uff1b}\uff1b\n\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570loadPosts\uff0c\u8be5\u51fd\u6570\u52a0\u8f7d/md/blog\u4e0b\u7684\u6240\u6709Markdown\u6587\u4ef6\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u6570\u7ec4(PostData[])\u8fd4\u56de\u3002\u6211\u5728\u8fd9\u4e2a\u7f51\u7ad9\u7684\u4e3b\u9875\u4e0a\u4f7f\u7528loadPosts\u6765\u5448\u73b0\u6211\u5199\u8fc7\u7684\u6240\u6709\u5e16\u5b50\u7684\u5217\u8868\u3002\n\u6211\u4f7f\u7528\u4e86\u975e\u5e38\u68d2\u7684Reaction-markdown\u5305\u5c06Markdown\u5448\u73b0\u4e3a\u4e00\u4e2aReaction\u7ec4\u4ef6\u3002\u6211\u7684Markdown\u5448\u73b0\u7ec4\u4ef6(/Components/Markdown.tsx)\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53d7Medium\u8bbe\u8ba1\u542f\u53d1\u7684\u9ed8\u8ba4\u6837\u5f0f\u3002\u53ea\u9700\u4fee\u6539Markdown.tsx\u4e2d\u7684\u6837\u5f0f\u4e13\u4e1a\u4eba\u5458\u5373\u53ef\u6839\u636e\u60a8\u7684\u559c\u597d\u5b9a\u5236\u8bbe\u8ba1\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e09\u91cd\u53cd\u5f15\u53f7\u8bed\u6cd5\u8f7b\u677e\u5730\u5c06\u4ee3\u7801\u5757\u62d6\u653e\u5230\u535a\u5ba2\u5e16\u5b50\u4e2d\u3002\u4f7f\u7528\u8bed\u8a00\u6807\u7b7e\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\uff0c\u5c31\u50cfGitHub\u4e00\u6837\uff01\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4e3aReaction-markdown\u5b9e\u73b0\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4ee3\u7801\u5448\u73b0\u5668(/Components/Code.tsx)\uff0c\u5b83\u4f7f\u7528REACTION-SYNTAX-FLIGHTTER\u6765\u5904\u7406\u9ad8\u4eae\u663e\u793a\u3002\u6240\u4ee5\u8fd9\u5c31\u662f\uff1a\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u7eb1\u7ebf\u6784\u5efa&amp\uff1b&amp\uff1b\u7eb1\u7ebf\u5bfc\u51fa\u751f\u6210\u7ad9\u70b9\u7684\u5b8c\u5168\u9759\u6001\u7248\u672c\u3002\u8fd9\u4e00\u6b65\u5b8c\u5168\u7531Next.js\u63d0\u4f9b\u652f\u6301\u3002\u9759\u6001\u7ad9\u70b9\u5c06\u5bfc\u51fa\u5230OUT\u76ee\u5f55\u3002\n\u751f\u6210\u540e\uff0c\u4f7f\u7528\u60a8\u9009\u62e9\u7684\u9759\u6001\u6587\u4ef6\u6258\u7ba1\u670d\u52a1(Firebase\u6258\u7ba1\u3001Vercel\u3001Netlify)\u6765\u90e8\u7f72\u60a8\u7684\u7ad9\u70b9\u3002\n\u8fd9\u91cc\u7684\u5f15\u64ce\u76d6\u4e0b\u9762\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u63d0\u4f9b\u4e0a\u8ff0\u529f\u80fd\u7684\u6240\u6709\u6587\u4ef6\u3002DeviI\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9879\u76ee\u811a\u624b\u67b6\u3001\u4e00\u4e9bMarkdown\u52a0\u8f7d\u5b9e\u7528\u7a0b\u5e8f(\u5728loader.ts\u4e2d)\u548c\u4e00\u4e9b\u5408\u7406\u7684\u6837\u5f0f\u9ed8\u8ba4\u503c(\u7279\u522b\u662f\u5728Markdown.tsx\u4e2d)\u3002\n\u8981\u5f00\u59cb\u81ea\u5b9a\u4e49\uff0c\u8bf7\u4fee\u6539index.tsx(\u4e3b\u9875)\u3001BlogPost.tsx(\u535a\u5ba2\u5e16\u5b50\u6a21\u677f)\u548cMarkdown.tsx(Markdown\u6e32\u67d3\u5668)\u3002\n\u8bf7\u8bbf\u95eegiHub\u8d44\u6e90\u5e93\u5f00\u59cb\u4f7f\u7528\uff1ahttps://github.com/vriad/devii.\u3002\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u9879\u76ee\uff0c\u8bf7\u7559\u4e0b\u4e00\u4e2a\u2b50\ufe0fSTAR\u2b50\ufe0f\uff0c\u5e2e\u52a9\u66f4\u591a\u7684\u4eba\u627e\u5230Devii\uff01\ud83d\ude0e\u3002\n\u8981\u76f4\u63a5\u8df3\u5230\u4ee3\u7801\u4e2d\uff0c\u8bf7\u514b\u9686repo\u5e76\u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5f53\u6211\u53d1\u5e03\u65b0\u7684\u535a\u5ba2\u5e16\u5b50\u65f6\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6--\u8fd9\u5c31\u662f\ud83e\udd19\u3002\n\u6211\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u6253\u5b57\u5e93\uff0c\u7528\u4e8e\u5728\u6ca1\u6709GraphQL\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u7aef\u5230\u7aef\u7684\u7c7b\u578b\u5b89\u5168API\u3002\u5f53\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u51c6\u5907\u597d\u65f6(\u5f88\u5feb\uff01)\u5c31\u4f1a\u6536\u5230\u901a\u77e5\u3002", "note_en": "I recently set out to build my personal website \u2014 the one you&#39;re reading now, as it happens!\n Surprisingly, it was much harder than expected to put together a &#34;tech stack&#34; that met my criteria. My criteria are pretty straightforward; I would expect most React devs to have a similar list. Yet it was surprisingly hard to put all these pieces together.\n Given the lack of a decent out-of-the-box solution, I worry that many developers (maybe even you, dear reader) are settling for suboptimal, restrictive static-site generators that place limits on the interactivity and flexibility of your website. We can do better.\n tl;dr   I built a personal dev blog starter called Devii. Clone the repo here to get started with this setup:  https://github.com/vriad/devii.\n   I want to build the site in React and TypeScript. I love them both wholeheartedly, I use them for my day job, and they&#39;re gonna be around for a long time. Plus writing untyped JS makes me feel dirty.\n I don&#39;t want limitations on what my personal website can be/become. Sure, my current site consists of two simple, static blog posts. But down the road, I may want to build a page that contains an interactive visualization, a filterable table, or a demo of a React component I&#39;m open-sourcing. Even something simple (like the email newsletter signup form at the bottom of this page) would have been hard to implement without React; I literally have zero memory of how we used to build forms in the pre-React times.\n Plus: I want access to the npm ecosystem and all my favorite UI, animation, and styling libraries. I sincerely hope I never write another line of raw CSS ever again; CSS-in-JS 4 lyfe baby. If you want to start a Twitter feud with me about this, by all means at me:  @vriad\n  If it&#39;s obnoxious to write new blog posts, I won&#39;t do it. That&#39;s a regrettable law of the universe. Even writing blog posts with plain HTML \u2014 just a bunch of  &lt;p&gt; tags in a div \u2014 is just annoying enough to bug me. The answer: Markdown of course!\n Static site generators (SSGs) like Hugo and Jekyll provide an undeniably wonderful authoring experience. All you have to do is  touch a new .md file in the proper directory and get to writing. Unfortunately all Markdown-based SSGs I know of are too restrictive. Mixing React and Markdown on the same page is either impossible or tricky. If it&#39;s possible, it likely requires some plugin/module/extension, config file, blob of boilerplate, or egregious hack. Sorry Hugo, I&#39;m not going to re-write my React code using  React.createElement like it&#39;s 2015.\n Well, that doesn&#39;t work for me. I want my website to be React-first, with a sprinkling of Markdown when it makes my life easier.\n  As much as I love the Jamstack, it doesn&#39;t cut it from an SEO perspective. Many blogs powered by a &#34;headless CMS&#34; require two round trips before rendering the blog content (one to fetch the static JS bundle and another to fetch the blog content from a CMS). This degrades page load speeds and user experience, which accordingly degrades your rankings on Google.\n Instead I want every page of my site to be pre-rendered to a set of fully static assets, so I can deploy them to a CDN and get fast page loads everywhere. You could get the same benefits with server-side rendering, but that requires an actual server and worldwide load balancing to achieve comparable page load speeds. I love overengineering things as much as the next guy, even I have a line. \ud83d\ude05\n  I describe my final architecture design below, along with my rationale for each choice. I distilled this setup into a website starter/boilerplate available here:  https://github.com/vriad/devii. Below, I allude to certain files/functions I implemented; to see the source code of these, just clone the repo  git clone git@github.com:vriad/devii.git\n  I chose to build my site with Next.js. This won&#39;t be a surprising decision to anyone who&#39;s played with statically-rendered or server-side rendered React in recent years. Next.js is quickly eating everyone else&#39;s lunch in this market, especially Gatsby&#39;s (sorry Gatsby fans).\n Next.js is by far the most elegant way (for now) to do any static generation or server-side rendering with React. They just released their next-generation (pun intended) static site generator in the  9.3 release back in March. So in the spirit of using technologies  in the spring of their life, Next.js is a no-brainer.\n Here&#39;s a quick breakdown of the project structure. No need to understand every piece of it; but it may be useful to refer to throughout the rest of this post.\n . \u251c\u2500\u2500  README . md\u251c\u2500\u2500  public  // all static files (images, etc) go here\u251c\u2500\u2500 pages  // every .tsx component in this dir becomes a page of the final site | \u251c\u2500\u2500 index . tsx  // the home page (which has access to the list of all blog posts) | \u251c\u2500\u2500 blog | \u251c\u2500\u2500  [blog ] . md  // a template component that renders the blog posts under `/md/blog`\u251c\u2500\u2500 md | \u251c\u2500\u2500 blog | \u251c\u2500\u2500 devii . md  // this page! \u251c\u2500\u2500 whatever . md  // every MD file in this directory becomes a blog post\u251c\u2500\u2500 components | \u251c\u2500\u2500   . tsx | \u251c\u2500\u2500   . tsx | \u251c\u2500\u2500  &lt;various others &gt;\u251c\u2500\u2500 loader . ts  // contains utility functions for loading/parsing Markdown\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 tsconfig . json\u251c\u2500\u2500  package . json\u251c\u2500\u2500 next . config . js\u251c\u2500\u2500 next -env . d . ts\u251c\u2500\u2500  . gitignore\n  Both React and TypeScript are baked into the DNA of Next.js, so you get these for free when you set up a Next.js project.\n Gatsby, on the other hand, has a special plugin for TypeScript support, but it&#39;s not officially supported and seems to be  low on their priority list. Also, after messing with it for an hour I couldn&#39;t get it to play nice with hot reload.\n  Using Next&#39;s special  getStaticProps hook and glorious  dynamic imports, it&#39;s trivial to a Markdown file and pass its contents into your React components as a prop. This achieves the holy grail I was searching for: the ability to easily mix React and Markdown.\n  Every Markdown file can include a &#34;frontmatter block&#34; containing metadata. I implemented a simple utility function ( loadPost) that loads a Markdown file, parses its contents, and returns a TypeScript object with the following signature:\n type    =  { path :  string ;  // the relative URL to this page, can be used as an href content :  string ;  // the body of the MD file title ? :  string ; subtitle ? :  string ; date ? :  number ; author ? :  string ; authorPhoto ? :  string ; tags ? :  string [ ] ; bannerPhoto ? :  string ; thumbnailPhoto ? :  string ; } ;\n I implemented a separate function  loadPosts that loads  all the Markdown files under  /md/blog and returns them as an array ( PostData[]). I use  loadPosts on this site&#39;s home page to render a list of all posts I&#39;ve written.\n  I used the wonderful   react-markdown package to render Markdown as a React component. My Markdown rendered component ( /components/Markdown.tsx) provides some default styles inspired by Medium&#39;s design. Just modify the  style pros in  Markdown.tsx to customize the design to your liking.\n  You can easily drop code blocks into your blog posts using triple-backtick syntax. Specify the programming language with a &#34;language tag&#34;,  just like GitHub!\n To achieve this I implemented a custom  code renderer ( /components/Code.tsx) for  react-markdown that uses  react-syntax-highlighter to handle the highlighting. So this:\n     You can generate a fully static version of your site using  yarn build &amp;&amp; yarn export. This step is entirely powered by Next.js. The static site is exported to the  out directory.\n After its generated, use your static file hosting service of choice (Firebase Hosting, Vercel, Netlify) to deploy your site.\n  There&#39;s nothing &#34;under the hood&#34; here. You can view and modify all the files that provide the functionality described above. Devii just provides a project scaffold, some Markdown-loading loading utilities (in  loader.ts), and some sensible styling defaults (especially in  Markdown.tsx).\n To start customizing, modify  index.tsx (the home page),  BlogPost.tsx (the blog post template), and  Markdown.tsx (the Markdown renderer).\n  Head to the GitHub repo to get started:  https://github.com/vriad/devii. If you like this project, leave a \u2b50\ufe0fstar\u2b50\ufe0f to help more people find Devii! \ud83d\ude0e\n To jump straight into the code, clone the repo and start the development server like so:\n        You&#39;ll get an email when I publish a new blog post \u2014 that&#39;s it \ud83e\udd19\n I&#39;m currently working on a TypeScript library for building end-to-end typesafe APIs without GraphQL. Drop in your email to get notified when it&#39;s ready (soon!).", "posttime": "2020-05-26 11:38:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u535a\u5ba2,2020,\u5f00\u53d1\u8005,tech", "title": "2020\u5e74\u4e2a\u4eba\u5f00\u53d1\u8005\u535a\u5ba2\u7684\u7406\u60f3\u6280\u672f\u5806\u6808", "title_en": "The ideal tech stack for a personal developer blog in 2020", "transed": 1, "url": "https://vriad.com/blog/devii", "via": "", "real_tags": ["\u5f00\u53d1", "\u535a\u5ba2", "2020", "\u5f00\u53d1\u8005", "tech"]}, {"category": "", "categoryclass": "", "imagename": "338f4a2642d10f54130984ecc802fc00.jpg", "infoid": 1003750, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u7684\u661f\u7403\u5728\u5b83\u5b58\u5728\u7684\u6700\u521d45.5\u4ebf\u5e74\u91cc\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u706b\u707e\u3001\u706b\u5c71\u3001\u5730\u9707\u3001\u6d77\u5578\u3001\u5c0f\u884c\u661f\u649e\u51fb\u3001\u98d3\u98ce\u548c\u8bb8\u591a\u5176\u4ed6\u81ea\u7136\u707e\u5bb3\u65e0\u5904\u4e0d\u5728\uff0c\u5728\u6211\u4eec\u6574\u4e2a\u6d4b\u91cf\u7684\u5386\u53f2\u4e2d\uff0c\u751f\u7269\u6d3b\u52a8\u4e5f\u662f\u5982\u6b64\u3002\u53d1\u751f\u7684\u5927\u591a\u6570\u73af\u5883\u53d8\u5316\u90fd\u662f\u6e10\u8fdb\u7684\u548c\u5b64\u7acb\u7684\uff1b\u53ea\u6709\u5728\u5c11\u6570\u60c5\u51b5\u4e0b-\u901a\u5e38\u4e0e\u5927\u89c4\u6a21\u706d\u7edd\u76f8\u5173-\u624d\u662f\u5168\u7403\u6027\u7684\u3001\u7acb\u5373\u7684\u548c\u707e\u96be\u6027\u7684\u53d8\u5316\u3002\n\u4f46\u968f\u7740\u4eba\u7c7b\u7684\u5230\u6765\uff0c\u5730\u7403\u7684\u81ea\u7136\u73af\u5883\u8fd8\u6709\u53e6\u4e00\u4e2a\u56e0\u7d20\u9700\u8981\u5e94\u5bf9\uff1a\u6211\u4eec\u7269\u79cd\u7ed9\u5730\u7403\u5e26\u6765\u7684\u53d8\u5316\u3002\u51e0\u4e07\u5e74\u6765\uff0c\u6700\u5927\u7684\u6218\u4e89\u4ec5\u4ec5\u662f\u5730\u533a\u6027\u7684\u9a97\u5c40\uff1b\u6700\u5927\u7684\u5e9f\u7269\u95ee\u9898\u53ea\u4f1a\u5bfc\u81f4\u5b64\u7acb\u7684\u75be\u75c5\u7206\u53d1\u3002\u4f46\u6211\u4eec\u7684\u6570\u91cf\u548c\u6280\u672f\u80fd\u529b\u90fd\u5728\u589e\u957f\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u5e9f\u7269\u7ba1\u7406\u95ee\u9898\u3002\u4f60\u53ef\u80fd\u8ba4\u4e3a\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u628a\u6211\u4eec\u6700\u7cdf\u7cd5\u7684\u5783\u573e\u9001\u5230\u592a\u9633\u4e0b\uff0c\u4f46\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u3002\n\u76ee\u524d\uff0c\u5730\u7403\u4e0a\u670970\u4ebf\u591a\u4e00\u70b9\u7684\u4eba\u7c7b\uff0c\u4e0a\u4e2a\u4e16\u7eaa\uff0c\u6211\u4eec\u7ec8\u4e8e\u6210\u4e3a\u4e86\u592a\u7a7a\u6587\u660e\uff0c\u6253\u7834\u4e86\u5c06\u6211\u4eec\u675f\u7f1a\u5728\u5730\u7403\u4e0a\u7684\u5f15\u529b\u7ebd\u5e26\u3002\u6211\u4eec\u63d0\u53d6\u4e86\u73cd\u8d35\u800c\u7a00\u6709\u7684\u77ff\u7269\u548c\u5143\u7d20\uff0c\u5408\u6210\u4e86\u65b0\u7684\u5316\u5408\u7269\uff0c\u5f00\u53d1\u4e86\u6838\u6280\u672f\uff0c\u5e76\u751f\u4ea7\u51fa\u4e86\u8fdc\u8fdc\u8d85\u51fa\u6211\u4eec\u8fdc\u53e4\u7956\u5148\u6700\u72c2\u91ce\u68a6\u60f3\u7684\u65b0\u6280\u672f\u3002\n\u5c3d\u7ba1\u8fd9\u4e9b\u65b0\u6280\u672f\u6539\u53d8\u4e86\u6211\u4eec\u7684\u4e16\u754c\uff0c\u63d0\u9ad8\u4e86\u6211\u4eec\u7684\u751f\u6d3b\u8d28\u91cf\uff0c\u4f46\u4e5f\u6709\u8d1f\u9762\u7684\u526f\u4f5c\u7528\u968f\u4e4b\u800c\u6765\u3002\u6211\u4eec\u73b0\u5728\u6709\u80fd\u529b\u4ee5\u5404\u79cd\u65b9\u5f0f\u5bf9\u6211\u4eec\u7684\u73af\u5883\u9020\u6210\u5e7f\u6cdb\u7684\u7834\u574f\u548c\u7834\u574f\uff0c\u4ece\u780d\u4f10\u68ee\u6797\u5230\u5927\u6c14\u6c61\u67d3\uff0c\u518d\u5230\u6d77\u6d0b\u9178\u5316\u7b49\u7b49\u3002\u6709\u4e86\u65f6\u95f4\u548c\u5173\u6000\uff0c\u4e00\u65e6\u6211\u4eec\u505c\u6b62\u52a0\u5267\u8fd9\u4e9b\u95ee\u9898\uff0c\u5730\u7403\u5c31\u4f1a\u5f00\u59cb\u81ea\u6211\u8c03\u8282\u3002\u4f46\u5728\u4efb\u4f55\u5408\u7406\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e0a\uff0c\u5176\u4ed6\u95ee\u9898\u90fd\u4e0d\u4f1a\u81ea\u884c\u6539\u5584\u3002\n\u6211\u4eec\u5728\u5730\u7403\u4e0a\u751f\u4ea7\u7684\u4e00\u4e9b\u4e1c\u897f\u4e0d\u4ec5\u5728\u77ed\u671f\u5185\u662f\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u89c6\u7684\u95ee\u9898\uff0c\u800c\u4e14\u6784\u6210\u7684\u5371\u9669\u4e0d\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u663e\u8457\u51cf\u5c11\u3002\u6211\u4eec\u6700\u5371\u9669\u7684\u957f\u671f\u6c61\u67d3\u7269\u5305\u62ec\u6838\u526f\u4ea7\u54c1\u548c\u5e9f\u7269\u3001\u5371\u9669\u5316\u5b66\u54c1\u548c\u751f\u7269\u5371\u5bb3\u3001\u5e9f\u6c14\u6392\u653e\u7684\u5851\u6599\u548c\u4e0d\u4f1a\u751f\u7269\u964d\u89e3\u7684\u5851\u6599\uff0c\u5982\u679c\u5b83\u4eec\u4ee5\u9519\u8bef\u7684\u65b9\u5f0f\u8fdb\u5165\u73af\u5883\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5730\u7403\u4e0a\u5f88\u5927\u4e00\u90e8\u5206\u751f\u7269\u9020\u6210\u4e25\u91cd\u7834\u574f\u3002\n\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u7f6a\u72af\u4e2d\u6700\u7cdf\u7cd5\u7684\u5e94\u8be5\u88ab\u88c5\u4e0a\u706b\u7bad\uff0c\u53d1\u5c04\u5230\u592a\u7a7a\uff0c\u5e76\u88ab\u9001\u4e0a\u4e0e\u592a\u9633\u76f8\u649e\u7684\u8def\u7ebf\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u7ec8\u4e8e\u4e0d\u4f1a\u518d\u56f0\u6270\u5730\u7403\u4e86\u3002\u5728\u90a3\u91cc\uff0c\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u7f6a\u72af\u4e2d\u6700\u7cdf\u7cd5\u7684\u5e94\u8be5\u88ab\u88c5\u4e0a\u706b\u7bad\uff0c\u53d1\u5c04\u5230\u592a\u7a7a\uff0c\u7136\u540e\u4e0e\u592a\u9633\u76f8\u649e\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u6700\u7ec8\u4e0d\u4f1a\u518d\u56f0\u6270\u5730\u7403\u3002(\u662f\u7684\uff0c\u8fd9\u4e0e\u201c\u8d85\u4eba4\u201d\u7684\u60c5\u8282\u76f8\u4f3c\u3002)\u3002\u4ece\u7269\u7406\u5b66\u7684\u89c2\u70b9\u6765\u770b\uff0c\u8fd9\u6837\u505a\u662f\u53ef\u80fd\u7684\u3002\n\u4f46\u662f\u6211\u4eec\u5e94\u8be5\u8fd9\u4e48\u505a\u5417\uff1f\u8fd9\u5b8c\u5168\u662f\u53e6\u4e00\u56de\u4e8b\u4e86\uff0c\u9996\u5148\u8981\u8003\u8651\u5730\u7403\u548c\u592a\u9633\u7cfb\u4e2d\u7684\u5f15\u529b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u4eba\u7c7b\u5728\u5730\u7403\u4e0a\u8fdb\u5316\uff0c\u5728\u8fd9\u4e2a\u4e16\u754c\u4e0a\u5d2d\u9732\u5934\u89d2\uff0c\u5e76\u53d1\u5c55\u51fa\u6211\u4eec\u5b87\u5b99\u4e2d\u4ece\u672a\u89c1\u8fc7\u7684\u975e\u51e1\u6280\u672f\u3002\u6211\u4eec\u90fd\u4e00\u76f4\u68a6\u60f3\u7740\u63a2\u7d22\u6211\u4eec\u5bb6\u56ed\u4e4b\u5916\u7684\u5b87\u5b99\uff0c\u4f46\u76f4\u5230\u8fc7\u53bb\u51e0\u5341\u5e74\uff0c\u6211\u4eec\u624d\u8bbe\u6cd5\u6446\u8131\u4e86\u5730\u7403\u7684\u5f15\u529b\u675f\u7f1a\u3002\u6211\u4eec\u7684\u5927\u8d28\u91cf\u884c\u661f\u65bd\u52a0\u7684\u5f15\u529b\u53ea\u53d6\u51b3\u4e8e\u6211\u4eec\u79bb\u5730\u7403\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u65f6\u7a7a\u5f2f\u66f2\uff0c\u5e76\u5bfc\u81f4\u5730\u7403\u4e0a\u6216\u5176\u9644\u8fd1\u7684\u6240\u6709\u7269\u4f53--\u5305\u62ec\u4eba\u7c7b--\u4e0d\u65ad\u5411\u4e0b\u52a0\u901f\u3002\n\u6709\u4e00\u5b9a\u91cf\u7684\u80fd\u91cf\u53ef\u4ee5\u4fdd\u6301\u4efb\u4f55\u8d28\u91cf\u7269\u4f53\u4e0e\u5730\u7403\u7684\u7ed3\u5408\uff1a\u5f15\u529b\u52bf\u80fd\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u5411\u4e00\u4e2a\u7269\u4f53\u79fb\u52a8\u5f97\u8db3\u591f\u5feb(\u5373\u7ed9\u4e88\u8db3\u591f\u7684\u52a8\u80fd)\uff0c\u5b83\u53ef\u4ee5\u8de8\u8d8a\u4e24\u4e2a\u91cd\u8981\u7684\u9608\u503c\u3002\n\u7a33\u5b9a\u7684\u8f68\u9053\u901f\u5ea6\u6c38\u8fdc\u4e0d\u4f1a\u4e0e\u5730\u7403\u76f8\u649e\u7684\u95e8\u69db\uff1a\u5927\u7ea67.9\u516c\u91cc/\u79d2(17,700\u82f1\u91cc/\u5c0f\u65f6)\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u5730\u7403\u81ea\u8f6c\u6700\u5927\u5316\u7684\u8d64\u9053\u4e0a\uff0c\u4eba\u7c7b\u7684\u79fb\u52a8\u901f\u5ea6\u4ec5\u4e3a\u6bcf\u79d2\u7ea640.47\u516c\u91cc(1000\u82f1\u91cc/\u5c0f\u65f6)\uff0c\u7531\u6b64\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u9664\u975e\u6709\u67d0\u79cd\u5de8\u5927\u7684\u5e72\u9884\u6765\u6539\u53d8\u8fd9\u79cd\u60c5\u51b5\uff0c\u5426\u5219\u6211\u4eec\u6ca1\u6709\u9003\u8131\u7684\u5371\u9669\u3002(\u6ce8\uff1a\u5730\u7403\u81ea\u8f6c\u6700\u5927\u7684\u8d64\u9053\u662f\u5730\u7403\u81ea\u8f6c\u6700\u5927\u5316\u7684\u5730\u65b9)\uff0c\u800c\u4eba\u7c7b\u7684\u79fb\u52a8\u901f\u5ea6\u4ec5\u7ea6\u4e3a40.47\u516c\u91cc/\u79d2(1000\u82f1\u91cc/\u5c0f\u65f6)\uff0c\u8fd9\u5c31\u5f97\u51fa\u4e86\u8fd9\u6837\u7684\u7ed3\u8bba\uff1a\u6211\u4eec\u6ca1\u6709\u9003\u8131\u7684\u5371\u9669\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u51fa\u4e86\u8fd9\u6837\u4e00\u79cd\u5e72\u9884\u624b\u6bb5\uff1a\u706b\u7bad\u6280\u672f\u3002\u8981\u8ba9\u706b\u7bad\u8fdb\u5165\u5730\u7403\u8f68\u9053\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u5c06\u706b\u7bad\u52a0\u901f\u5230\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684\u5fc5\u8981\u95e8\u69db\u901f\u5ea6\u6240\u9700\u7684\u80fd\u91cf\u3002\u81ea20\u4e16\u7eaa50\u5e74\u4ee3\u4ee5\u6765\uff0c\u4eba\u7c7b\u5c31\u4e00\u76f4\u5728\u8fd9\u6837\u505a\uff0c\u4e00\u65e6\u6211\u4eec\u9003\u79bb\u5730\u7403\uff0c\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u4e8b\u60c5\u5728\u66f4\u5927\u8303\u56f4\u5185\u53d1\u751f\u3002\n\u5730\u7403\u5e76\u4e0d\u662f\u9759\u6b62\u4e0d\u52a8\u7684\uff0c\u800c\u662f\u4ee5\u5927\u7ea630\u516c\u91cc/\u79d2(67000\u82f1\u91cc/\u5c0f\u65f6)\u7684\u901f\u5ea6\u56f4\u7ed5\u592a\u9633\u8fd0\u884c\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u4f60\u9003\u79bb\u5730\u7403\uff0c\u4f60\u4ecd\u7136\u4f1a\u53d1\u73b0\u81ea\u5df1\u4e0d\u4ec5\u53d7\u5230\u5f15\u529b\u7684\u675f\u7f1a\uff0c\u800c\u4e14\u8fd8\u5904\u4e8e\u56f4\u7ed5\u592a\u9633\u7a33\u5b9a\u7684\u692d\u5706\u8f68\u9053\u4e0a\u3002\n\u8fd9\u662f\u4e00\u4e2a\u5173\u952e\u70b9\uff1a\u4f60\u53ef\u80fd\u8ba4\u4e3a\uff0c\u5728\u5730\u7403\u4e0a\uff0c\u6211\u4eec\u53d7\u5230\u5730\u7403\u5f15\u529b\u7684\u7ea6\u675f\uff0c\u800c\u8fd9\u662f\u5f15\u529b\u65b9\u9762\u7684\u4e3b\u5bfc\u56e0\u7d20\u3002\u6070\u6070\u76f8\u53cd\uff0c\u592a\u9633\u7684\u5f15\u529b\u8fdc\u8fdc\u8d85\u8fc7\u5730\u7403\u7684\u5f15\u529b\uff01\u6211\u4eec\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u7684\u552f\u4e00\u539f\u56e0\u662f\u56e0\u4e3a\u4f60\u3001\u6211\u548c\u6574\u4e2a\u5730\u7403\u76f8\u5bf9\u4e8e\u592a\u9633\u90fd\u5904\u4e8e\u81ea\u7531\u843d\u4f53\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u90fd\u88ab\u592a\u9633\u4ee5\u76f8\u540c\u7684\u76f8\u5bf9\u901f\u5ea6\u52a0\u901f\u3002\n\u5982\u679c\u6211\u4eec\u5728\u592a\u7a7a\u4e2d\u8bbe\u6cd5\u6446\u8131\u4e86\u5730\u7403\u7684\u5f15\u529b\uff0c\u6211\u4eec\u4ecd\u7136\u4f1a\u53d1\u73b0\u81ea\u5df1\u76f8\u5bf9\u4e8e\u592a\u9633\u7684\u8fd0\u52a8\u901f\u5ea6\u7ea6\u4e3a30\u516c\u91cc/\u79d2\uff0c\u4e0e\u6bcd\u661f\u7684\u8ddd\u79bb\u7ea6\u4e3a1.5\u4ebf\u516c\u91cc(9300\u4e07\u82f1\u91cc)\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u9003\u79bb\u592a\u9633\u7cfb\uff0c\u6211\u4eec\u5fc5\u987b\u518d\u83b7\u5f97\u5927\u7ea612\u516c\u91cc/\u79d2\u7684\u901f\u5ea6\u624d\u80fd\u8fbe\u5230\u9003\u9038\u901f\u5ea6\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u51e0\u4e2a\u822a\u5929\u5668(\u5148\u950b10\u53f7\u548c11\u53f7\uff0c\u65c5\u884c\u80051\u53f7\u548c2\u53f7\uff0c\u4ee5\u53ca\u65b0\u5730\u5e73\u7ebf\u53f7)\u5df2\u7ecf\u8fbe\u5230\u7684\u901f\u5ea6\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u671d\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u5411\u592a\u9633\u53d1\u5c04\u5b87\u5b99\u98de\u8239\u7684\u6709\u6548\u8f7d\u8377\uff0c\u6211\u4eec\u5c06\u9762\u4e34\u4e00\u4e2a\u5de8\u5927\u7684\u6311\u6218\uff1a\u6211\u4eec\u5fc5\u987b\u5931\u53bb\u8db3\u591f\u7684\u52a8\u80fd\uff0c\u4f7f\u4e00\u4e2a\u7a33\u5b9a\u7684\u56f4\u7ed5\u592a\u9633\u7684\u692d\u5706\u8f68\u9053\u8fc7\u6e21\u5230\u4e00\u4e2a\u8db3\u591f\u9760\u8fd1\u592a\u9633\u7684\u8f68\u9053\uff0c\u4ee5\u4fbf\u4e0e\u5b83\u76f8\u649e\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u53ea\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\u968f\u8eab\u643a\u5e26\u8db3\u591f\u7684\u71c3\u6599\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5145\u5206\u51cf\u901f\u4f60\u7684\u6709\u6548\u8f7d\u8377(\u5373\uff0c\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u5730\u5931\u53bb\u76f8\u5bf9\u4e8e\u592a\u9633\u7684\u76f8\u5bf9\u901f\u5ea6)\uff0c\u7136\u540e\u89c2\u770b\u4f60\u7684\u6709\u6548\u8f7d\u8377\u91cd\u529b\u81ea\u7531\u843d\u5165\u592a\u9633\u3002\n\u4e0e\u6211\u4eec\u592a\u9633\u7cfb\u6700\u5185\u90e8\u7684\u884c\u661f-\u5730\u7403\u3001\u91d1\u661f\u548c/\u6216\u6c34\u661f-\u914d\u7f6e\u8db3\u591f\u7684\u98de\u8d8a\uff0c\u4ee5\u4fbf\u8f68\u9053\u6709\u6548\u8f7d\u8377\u5f97\u5230\u53bb\u52a9\u63a8(\u800c\u4e0d\u662f\u50cf\u5148\u9a71\u8005\u53f7\u3001\u65c5\u884c\u8005\u53f7\u548c\u65b0\u5730\u5e73\u7ebf\u53f7\u8fd9\u6837\u7684\u822a\u5929\u5668\u4ece\u4e0e\u5916\u884c\u661f\u7684\u5f15\u529b\u76f8\u4e92\u4f5c\u7528\u4e2d\u6536\u5230\u7684\u6b63\u5411\u52a9\u63a8)\uff0c\u5e76\u6700\u7ec8\u8db3\u591f\u63a5\u8fd1\u592a\u9633\uff0c\u4ee5\u81f3\u4e8e\u5b83\u88ab\u541e\u566c\u3002\n\u5728\u73b0\u5b9e\u4e2d\uff0c\u7b2c\u4e00\u79cd\u9009\u62e9\u9700\u8981\u5982\u6b64\u591a\u7684\u71c3\u6599\uff0c\u4ee5\u81f3\u4e8e\u7528\u76ee\u524d\u7684(\u5316\u5b66\u706b\u7bad)\u6280\u672f\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5982\u679c\u4f60\u7ed9\u706b\u7bad\u88c5\u4e0a\u4e86\u5de8\u5927\u7684\u6709\u6548\u8f7d\u8377\uff0c\u5c31\u50cf\u4f60\u60f3\u8981\u53d1\u5c04\u5230\u592a\u9633\u4e0a\u7684\u6240\u6709\u5371\u9669\u5e9f\u7269\u4e00\u6837\uff0c\u4f60\u5fc5\u987b\u5728\u8f68\u9053\u4e0a\u7ed9\u5b83\u88c5\u4e0a\u5927\u91cf\u7684\u706b\u7bad\u71c3\u6599\uff0c\u624d\u80fd\u4f7f\u5b83\u8db3\u591f\u51cf\u901f\uff0c\u8fd9\u6837\u5b83\u5c31\u4f1a\u5760\u5165\u592a\u9633\u3002\u8981\u540c\u65f6\u53d1\u5c04\u8fd9\u79cd\u6709\u6548\u8f7d\u8377\u548c\u989d\u5916\u7684\u71c3\u6599\uff0c\u9700\u8981\u4e00\u679a\u6bd4\u6211\u4eec\u5728\u5730\u7403\u4e0a\u5efa\u9020\u7684\u4efb\u4f55\u706b\u7bad\u90fd\u8981\u5927\u3001\u66f4\u5f3a\u5927\u3001\u66f4\u91cd\u7684\u706b\u7bad\uff0c\u800c\u4e14\u8981\u6bd4\u6211\u4eec\u5728\u5730\u7403\u4e0a\u5efa\u9020\u7684\u4efb\u4f55\u706b\u7bad\u90fd\u8981\u5927\u5f97\u591a\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u91cd\u529b\u8f85\u52a9\u6280\u672f\u6765\u589e\u52a0\u6216\u79fb\u9664\u6709\u6548\u8f7d\u8377\u7684\u52a8\u80fd\u3002\u5982\u679c\u4f60\u4ece\u540e\u9762\u63a5\u8fd1\u4e00\u4e2a\u5927\u8d28\u91cf(\u5982\u884c\u661f)\uff0c\u5728\u5b83\u524d\u9762\u98de\u884c\uff0c\u7136\u540e\u5728\u884c\u661f\u540e\u9762\u53d7\u5230\u91cd\u529b\u5f39\u5c04\uff0c\u822a\u5929\u5668\u5c31\u4f1a\u5931\u53bb\u80fd\u91cf\uff0c\u800c\u884c\u661f\u5219\u4f1a\u83b7\u5f97\u80fd\u91cf\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u8d70\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u4ece\u524d\u9762\u63a5\u8fd1\u8fd9\u9897\u884c\u661f\uff0c\u5728\u5b83\u540e\u9762\u98de\u884c\uff0c\u7136\u540e\u518d\u6b21\u53d7\u5230\u91cd\u529b\u5f39\u5f13\u7684\u4f5c\u7528\uff0c\u4f60\u7684\u822a\u5929\u5668\u5c31\u4f1a\u83b7\u5f97\u80fd\u91cf\uff0c\u540c\u65f6\u628a\u5b83\u4ece\u8f68\u9053\u4e0a\u7684\u884c\u661f\u4e0a\u79fb\u8d70\u3002\n\u4e8c\u5341\u5e74\u524d\uff0c\u6211\u4eec\u6210\u529f\u5730\u4f7f\u7528\u4e86\u8fd9\u79cd\u5f15\u529b\u5f39\u5f13\u65b9\u6cd5\uff0c\u6210\u529f\u5730\u53d1\u5c04\u4e86\u4e00\u4e2a\u8f68\u9053\u5668\uff0c\u5c06\u6c34\u661f\u4f1a\u5408\u5e76\u8fde\u7eed\u6210\u50cf\uff1a\u4fe1\u4f7f\u4efb\u52a1\u3002\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u592a\u9633\u7cfb\u6700\u5185\u90e8\u4e16\u754c\u7684\u7b2c\u4e00\u4e2a\u5168\u884c\u661f\u9576\u5d4c\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u540c\u6837\u7684\u6280\u672f\u5c06\u5e15\u514b\u592a\u9633\u63a2\u6d4b\u5668\u53d1\u5c04\u5230\u4e00\u4e2a\u9ad8\u5ea6\u692d\u5706\u5f62\u7684\u8f68\u9053\u4e0a\uff0c\u8fd9\u5c06\u628a\u5b83\u5e26\u5230\u79bb\u592a\u9633\u51e0\u4e2a\u592a\u9633\u534a\u5f84\u7684\u8303\u56f4\u5185\u3002\n\u53ea\u8981\u4f60\u7528\u6b63\u786e\u7684\u521d\u59cb\u901f\u5ea6\u5b9a\u4f4d\u4f60\u7684\u6709\u6548\u8f7d\u8377\uff0c\u4e00\u7ec4\u4ed4\u7ec6\u8ba1\u7b97\u7684\u672a\u6765\u8f68\u8ff9\u5c31\u662f\u5230\u8fbe\u592a\u9633\u6240\u9700\u7684\u5168\u90e8\u3002\u8fd9\u5f88\u96be\u505a\u5230\uff0c\u4f46\u4e5f\u4e0d\u662f\u4e0d\u53ef\u80fd\uff0c\u5e15\u514b\u592a\u9633\u63a2\u6d4b\u5668\u53ef\u80fd\u662f\u6211\u4eec\u5982\u4f55\u4ece\u5730\u7403\u4e0a\u6210\u529f\u5730\u5c06\u706b\u7bad\u6709\u6548\u8f7d\u8377\u53d1\u5c04\u5230\u592a\u9633\u4e0a\u7684\u5178\u8303\u3002\n\u8003\u8651\u5230\u8fd9\u4e00\u5207\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u51fa\u7ed3\u8bba\uff0c\u63a8\u51fa\u6211\u4eec\u7684\u5783\u573e\u6536\u96c6\u5728\u6280\u672f\u4e0a\u662f\u53ef\u884c\u7684-\u5305\u62ec\u6709\u6bd2\u5316\u5b66\u54c1\u3001\u751f\u7269\u5371\u5bb3\uff0c\u751a\u81f3\u653e\u5c04\u6027\u5e9f\u7269\u7b49\u5371\u9669\u5e9f\u7269-\u4f46\u8fd9\u51e0\u4e4e\u662f\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u505a\u7684\u4e8b\u60c5\u3002\n\u53d1\u5c04\u5931\u8d25\u7684\u53ef\u80fd\u6027\u3002\u5982\u679c\u4f60\u7684\u6709\u6548\u8f7d\u8377\u662f\u653e\u5c04\u6027\u7684\u6216\u5371\u9669\u7684\uff0c\u800c\u4f60\u5728\u53d1\u5c04\u6216\u98de\u8d8a\u5730\u7403\u65f6\u53d1\u751f\u7206\u70b8\uff0c\u6240\u6709\u8fd9\u4e9b\u5e9f\u7269\u90fd\u5c06\u65e0\u6cd5\u63a7\u5236\u5730\u6563\u5e03\u5728\u5730\u7403\u4e0a\u3002\n\u4ece\u80fd\u91cf\u4e0a\u8bb2\uff0c\u5c06\u6709\u6548\u8f7d\u8377\u53d1\u5c04\u51fa\u592a\u9633\u7cfb(\u4ece\u6728\u661f\u7b49\u884c\u661f\u7684\u6b63\u91cd\u529b\u8f85\u52a9\u4f5c\u7528)\u6bd4\u5c06\u6709\u6548\u8f7d\u8377\u53d1\u5c04\u5230\u592a\u9633\u4e0a\u7684\u6210\u672c\u66f4\u4f4e\u3002\n\u6700\u540e\uff0c\u5373\u4f7f\u6211\u4eec\u9009\u62e9\u8fd9\u6837\u505a\uff0c\u76ee\u524d\u5c06\u5783\u573e\u9001\u5230\u592a\u9633\u4e0a\u7684\u6210\u672c\u4e5f\u9ad8\u5f97\u4ee4\u4eba\u671b\u800c\u5374\u6b65\u3002\n\u6709\u53f2\u4ee5\u6765\u6700\u6210\u529f\u548c\u6700\u53ef\u9760\u7684\u592a\u7a7a\u53d1\u5c04\u7cfb\u7edf\u662f\u8054\u76df\u706b\u7bad\uff0c\u5b83\u57281000\u591a\u6b21\u53d1\u5c04\u540e\u7684\u6210\u529f\u7387\u4e3a97%\u3002\u7136\u800c\uff0c2%\u62163%\u7684\u5931\u8d25\u7387\uff0c\u5f53\u4f60\u628a\u8fd9\u4e00\u70b9\u5e94\u7528\u5230\u4e00\u679a\u6ee1\u8f7d\u7740\u4f60\u60f3\u8981\u53d1\u5c04\u51fa\u5730\u7403\u7684\u6240\u6709\u5371\u9669\u5e9f\u7269\u7684\u706b\u7bad\u4e0a\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u5e9f\u7269\u6269\u6563\u5230\u6d77\u6d0b\u3001\u5927\u6c14\u3001\u4eba\u53e3\u7a20\u5bc6\u5730\u533a\u3001\u996e\u7528\u6c34\u7b49\u7684\u707e\u96be\u6027\u53ef\u80fd\u6027\u3002\u8fd9\u79cd\u60c5\u51b5\u5bf9\u4eba\u7c7b\u6765\u8bf4\u4e0d\u4f1a\u6709\u597d\u7684\u7ed3\u5c40\uff1b\u98ce\u9669\u592a\u9ad8\u4e86\u3002\n\u8003\u8651\u5230\u4ec5\u7f8e\u56fd\u4e00\u56fd\u5c31\u50a8\u5b58\u4e86\u5927\u7ea66\u4e07\u5428\u9ad8\u653e\u6838\u5e9f\u6599\uff0c\u5927\u7ea6\u9700\u89818600\u679a\u8054\u76df\u706b\u7bad\u624d\u80fd\u5c06\u8fd9\u4e9b\u5e9f\u6599\u4ece\u5730\u7403\u4e0a\u6e05\u9664\u3002\u5373\u4f7f\u6211\u4eec\u80fd\u5c06\u53d1\u5c04\u5931\u8d25\u7387\u964d\u4f4e\u5230\u53f2\u65e0\u524d\u4f8b\u76840.1%\uff0c\u8fd9\u4e5f\u5c06\u82b1\u8d39\u5927\u7ea61\u4e07\u4ebf\u7f8e\u5143\uff0c\u9884\u8ba1\u5c06\u67099\u6b21\u53d1\u5c04\u5931\u8d25\uff0c\u5c06\u5bfc\u81f4\u8d85\u8fc76\u4e07\u78c5\u7684\u5371\u9669\u5e9f\u7269\u5728\u5730\u7403\u4e0a\u88ab\u968f\u673a\u91cd\u65b0\u5206\u914d\u3002\n\u9664\u975e\u6211\u4eec\u613f\u610f\u4ed8\u51fa\u524d\u6240\u672a\u6709\u7684\u4ee3\u4ef7\uff0c\u63a5\u53d7\u51e0\u4e4e\u80af\u5b9a\u4f1a\u9020\u6210\u707e\u96be\u6027\u7684\u73af\u5883\u6c61\u67d3\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u5f97\u4e0d\u628a\u628a\u5783\u573e\u6254\u8fdb\u592a\u9633\u7684\u60f3\u6cd5\u7559\u7ed9\u79d1\u5e7b\u5c0f\u8bf4\u548c\u672a\u6765\u6709\u5e0c\u671b\u7684\u6280\u672f\u9886\u57df\uff0c\u6bd4\u5982\u592a\u7a7a\u7535\u68af\u3002\u4e0d\u53ef\u5426\u8ba4\uff0c\u6211\u4eec\u5728\u5730\u7403\u4e0a\u641e\u5f97\u4e00\u56e2\u7cdf\u3002\u73b0\u5728\uff0c\u662f\u6211\u4eec\u81ea\u5df1\u60f3\u529e\u6cd5\u8d70\u51fa\u56f0\u5883\u7684\u65f6\u5019\u4e86\u3002\n\u5728\u6211\u7684\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u67e5\u770b\uff0c\u6216\u8005\u5728\u8fd9\u91cc\u67e5\u770b\u6211\u7684\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\u3002", "note_en": "Imagine our planet as it was for the first 4.55 billion years of its existence. Fires, volcanoes, earthquakes, tsunamis, asteroid strikes, hurricanes and many other natural disasters were ubiquitous, as was biological activity throughout our entire measured history. Most of the environmental changes that occurred were gradual and isolated; only in a few instances\u00a0\u2014 often correlated with mass extinctions\u00a0\u2014 were the changes global, immediate, and catastrophic.\n  But with the arrival of human beings, Earth&#39;s natural environment has another element to contend with: the changes wrought upon it by our species. For tens of thousands of years, the largest wars were merely regional skermishes; the largest problems with waste led only to isolated disease outbreaks. But our numbers and technological capabilities have grown, and with it, a waste management problem. You might think a great solution would be to send our worst garbage into the Sun, but we&#39;ll never make it happen. Here&#39;s why.\n       At present, there are a little more than 7 billion humans on the planet, and the previous century saw us at last become a spacefaring civilization, where we&#39;ve broken the gravitational bonds that have kept us shackled to Earth. We&#39;ve extracted valuable and rare minerals and elements, synthesized new chemical compounds, developed nuclear technologies, and produced new technologies that far exceed even the wildest dreams of our distant ancestors.\n  Although these new technologies have transformed our world and improved our quality of life, there are negative side-effects that have come along for the ride. We now have the capacity to cause widespread damage and destruction to our environment in a variety of ways, from deforestation to atmospheric pollution to ocean acidification and more. With time and care, the Earth will begin self-regulating as soon as we stop exacerbating these problems. But other problems just aren&#39;t going to get better on their own on any reasonable timescale.\n      Some of what we&#39;ve produced here on Earth isn&#39;t merely a problem to be reckoned with over the short-term, but poses a danger that will not significantly lessen with time. Our most dangerous, long-term pollutants include nuclear by-products and waste, hazardous chemicals and biohazards, plastics that off-gas and don&#39;t biodegrade, and could wreak havoc on a significant fraction of the living beings on Earth if they got into the environment in the wrong way.\n  You might think that the &#34;worst of the worst&#34; of these offenders should be packed onto a rocket, launched into space, and sent on a collision course with the Sun, where at last they won&#39;t plague Earth anymore. (Yes, that was similar to  the plot of Superman IV.) From a physics point of view, it&#39;s possible to do so.\n  But should we do it? That&#39;s another story entirely, and it begins with considering how gravitation works on Earth and in our Solar System.\n    Human beings evolved on Earth, grew to prominence on this world, and developed extraordinary technologies that our corner of the cosmos had never seen before. We all have long dreamed of exploring the Universe beyond our home, but only in the past few decades have we managed to escape the gravitational bonds of Earth. The gravitational pull exerted by our massive planet is only dependent on our distance from Earth&#39;s center, which causes spacetime to curve and causes all objects on or near it\u00a0\u2014 including humans\u00a0\u2014 to constantly accelerate &#34;downwards.&#34;\n  There&#39;s a certain amount of energy keeping any massive object bound to Earth: gravitational potential energy. However, if we move fast enough (i.e., impart enough kinetic energy) to an object, it can cross two important thresholds.\n  The threshold of a stable orbital speed to\u00a0never collide with Earth:\u00a0about 7.9 km/s (17,700 mph).\n    For comparison, a human at the equator of our planet, where Earth&#39;s rotation is maximized, is moving only at about\u00a00.47 km/s (1,000 mph), leading to the conclusion that we&#39;re in no danger of escaping unless there&#39;s some tremendous intervention that changes the situation.\n  Luckily, we&#39;ve developed just such an intervention: rocketry. To get a rocket into Earth&#39;s orbit, we require at least the amount of energy it would take to accelerate that rocket to the necessary threshold speed we mentioned earlier. Humanity has been doing this since the 1950s, and once we&#39;ve escaped from Earth, there was so much more to see occurring on larger scales.\n  Earth isn&#39;t stationary, but orbits the Sun at approximately 30 km/s (67,000 mph), meaning that even if you escape from Earth, you&#39;ll still find yourself not only gravitationally bound to the Sun, but in a stable elliptical orbit around it.\n    This is a key point: you might think that here on Earth, we&#39;re bound by Earth&#39;s gravity and that&#39;s the dominant factor as far as gravitation is concerned. Quite to the contrary, the gravitational pull of the Sun far exceeds the gravitational pull of Earth! The only reason we don&#39;t notice it is because you, me, and the entire planet Earth are in free-fall with respect to the Sun, and so we&#39;re all accelerated by it at the same relative rate.\n  If we were in space and managed to escape from Earth&#39;s gravity, we&#39;d still find ourselves moving at approximately 30 km/s with respect to the Sun, and at an approximate distance of 150 million km (93 million miles) from our parent star. If we wanted to escape from the Solar System, we&#39;d have to gain about another 12 km/s of speed to reach escape velocity, something that a few of our spacecraft (Pioneer 10 and 11, Voyager 1 and 2, and New Horizons) have already achieved.\n    But if we wanted to go in the opposite direction, and launch a spacecraft payload into the Sun, we&#39;d have a big challenge at hand: we&#39;d have to lose enough kinetic energy that a stable elliptical orbit around our Sun would transition to an orbit that came close enough to the Sun to collide with it. There are only two ways to accomplish this:\n  Bring enough fuel with you so that you can decelerate your payload sufficiently (i.e., have it lose as much of its relative speed with respect to the Sun as possible), and then watch your payload gravitationally free-fall into the Sun.\n  Configure enough fly-bys with the innermost planets of our Solar System\u00a0\u2014 Earth, Venus and/or Mercury\u00a0\u2014 so that the orbiting payload gets de-boosted (as opposed to the positive boosts that spacecraft like Pioneer, Voyager, and New Horizons received from gravitationally interacting with the outer planets) and eventually comes close enough to the Sun that it gets devoured.\n    The first option, in reality, requires so much fuel that it&#39;s practically impossible with current (chemical rocket) technology. If you loaded up a rocket with a massive payload, like you might expect for all the hazardous waste you want to fire into the Sun, you&#39;d have to load it up with a lot of rocket fuel, in orbit, to decelerate it sufficiently so that it&#39;d fall into the Sun. To launch both that payload and the additional fuel requires a rocket that&#39;s larger, more powerful and more massive than any we&#39;ve ever built on Earth by a large margin.\n  Instead, we can use the gravity assist technique to either add or remove kinetic energy from a payload. If you approach a large mass (like a planet) from behind, fly in front of it, and get gravitationally slingshotted behind the planet, the spacecraft loses energy while the planet gains energy. If you go the opposite way, though, approaching the planet from ahead, flying behind it and getting gravitationally slingshotted back in front again, your spacecraft gains energy while removing it from the orbiting planet.\n    Two decades ago, we successfully used this gravitational slingshot method to successfully send an orbiter to rendezvous and continuously image the planet Mercury: the Messenger mission. It enabled us to construct the first all-planet mosaic of our Solar System&#39;s innermost world. More recently, we&#39;ve used the same technique  to launch the Parker Solar Probe into a highly elliptical orbit that will take it to within just a few solar radii of the Sun.\n  A carefully calculated set of future trajectories is all that&#39;s required to reach the Sun, so long as you orient your payload with the correct initial velocity. It&#39;s difficult to do, but not impossible, and the Parker Solar Probe is perhaps the poster child for how we would, from Earth, successfully launch a rocket payload into the Sun.\n    Keeping all this in mind, then, you might conclude that it&#39;s technologically feasible to launch our garbage\u00a0\u2014 including hazardous waste like poisonous chemicals, biohazards, and even radioactive waste\u00a0\u2014 but it&#39;s something we&#39;ll almost certainly never do.\n    The possibility of a launch failure. If your payload is radioactive or hazardous and you have an explosion on launch or during a fly-by with Earth, all of that waste will be uncontrollably distributed across Earth.\n  Energetically, it costs less to shoot your payload out of the Solar System (from a positive gravity assist with planets like Jupiter) than it does to shoot your payload into the Sun.\n  And finally, even if we chose to do it, the cost to send our garbage into the Sun is prohibitively expensive at present.\n    The most successful and reliable space launch system of all time is the Soyuz rocket, which has a 97% success rate after more than 1,000 launches. Yet a 2% or 3% failure rate, when you apply that to a rocket loaded up with all the dangerous waste you want launched off of your planet, leads to the catastrophic possibility of having that waste spread into the oceans, atmosphere, into populated areas, drinking water, etc. This scenario doesn&#39;t end well for humanity; the risk is too high.\n  Considering that the United States alone is storing about 60,000 tons of high-level nuclear waste, it would take approximately 8,600 Soyuz rockets to remove this waste from the Earth. Even if we could reduce the launch failure rate to an unprecedented 0.1%, it would cost approximately a trillion dollars and, with an estimated 9 launch failures to look forward to, would lead to over 60,000 pounds of hazardous waste being randomly redistributed across the Earth.\n  Unless we&#39;re willing to pay an unprecedented cost and accept the near-certainty of catastrophic environmental pollution, we have to leave the idea of shooting our garbage into the Sun to the realm of science fiction and future hopeful technologies like space elevators. It&#39;s undeniable that we&#39;ve made quite the mess on planet Earth. Now, it&#39;s up to us to figure out our own way out of it.\n Follow me on\u00a0 Twitter.\u00a0 Check out\u00a0my\u00a0 website\u00a0or\u00a0some of my other work\u00a0 here.", "posttime": "2020-05-26 11:22:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5783\u573e,shoot,\u5730\u7403", "title": "\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u628a\u5730\u7403\u7684\u5783\u573e\u6254\u8fdb\u592a\u9633(2019\u5e74)", "title_en": "Why We Don't Shoot Earth's Garbage into the Sun (2019)", "transed": 1, "url": "https://www.forbes.com/sites/startswithabang/2019/09/20/this-is-why-we-dont-shoot-earths-garbage-into-the-sun", "via": "", "real_tags": ["\u5783\u573e", "shoot", "\u5730\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003749, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d1\u5e03\u4e8e2020\u5e745\u670820\u65e5\uff0c\u6807\u7b7e\u4e3a\uff1a[AWS]\u548c[Amazon]\uff1a\u6211\u7ecf\u5e38\u4f7f\u7528\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(AWS)\u4f5c\u4e3a\u6211\u7684\u201c\u4e91\u201d\u3002\u4e0d\u4ec5\u662f\u6211\u81ea\u5df1\u7684\u9879\u76ee\uff0c\u6211\u5de5\u4f5c\u7684\u51e0\u4e4e\u6240\u6709\u5ba2\u6237\u90fd\u4f7f\u7528Amazon\u6258\u7ba1\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u60a8\u5728AWS\u670d\u52a1\u65b9\u9762\u79ef\u7d2f\u4e86\u5927\u91cf\u7ecf\u9a8c\uff1a\u60a8\u77e5\u9053\u5982\u4f55(\u6b63\u786e)\u8bbe\u7f6evPC\uff0c\u77e5\u9053\u4f55\u65f6\u6258\u7ba1ECS\u3001EC2\u6216lambda\u4ee3\u7801\uff0c\u751a\u81f3\u50cfS3\u3001SNS\u548cSQS\u8fd9\u6837\u7684\u670d\u52a1\u4e5f\u4e0d\u518d\u6784\u6210\u6311\u6218\u3002\n\u4f46\u6709\u5f88\u591aAWS\u670d\u52a1\u53ef\u7528\u3002\u6211\u7684\u610f\u601d\u662f\uff1a\u5f88\u591a\u6b21\u3002\u76ee\u524d\uff0c\u5171\u6709163(\uff01)\u3002Amazon Dashboard\u63d0\u4f9b\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u5de5\u4f5c\u65b9\u5f0f\u3001\u56f0\u96be\u3001\u9677\u9631\u548c\u6700\u4f73\u5b9e\u8df5\u3002\n\u60a8\u53ef\u80fd\u4f1a\u610f\u8bc6\u5230\uff0c\u6df1\u5165\u7814\u7a76\u6bcf\u9879\u670d\u52a1\u5e76\u5b8c\u5168\u4e86\u89e3\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u800c\u4e14\u6700\u6709\u53ef\u80fd\u7684\u662f\uff0c\u60a8\u5e76\u4e0d\u771f\u6b63\u9700\u8981\u77e5\u9053\u5177\u4f53\u7684\u7ec6\u8282\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u3001\u67b6\u6784\u5e08\u6216\u7ba1\u7406\u5458\uff0c\u5bf9\u6bcf\u9879\u670d\u52a1\u6709\u57fa\u672c\u7684\u4e86\u89e3\u53ef\u80fd\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u597d\u5904\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u4e86\u89e3\u60a8\u624b\u5934\u7684\u95ee\u9898\u662f\u5426\u5df2\u6709\u89e3\u51b3\u65b9\u6848\u3002\n\u56e0\u6b64\uff0c\u6211\u4e00\u5934\u624e\u8fdb\u6bcf\u4e00\u9879\u670d\u52a1\uff0c\u4ee5\u5f04\u6e05\u695a\u5b83\u7684\u786e\u5207\u7528\u9014\u4ee5\u53ca\u5b83\u5728\u57fa\u672c\u60c5\u51b5\u4e0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u6211\u5c1d\u8bd5\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u591a\u7684\u7ec4\u4ef6(\u5728\u65f6\u95f4\u548c\u8d44\u91d1\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4e0d\u60f3\u5728AWS data Exchange\u4e0a\u82b1\u8d3915.000\u7f8e\u5143)\u3002\u6211\u8bd5\u56fe\u5728\u5355\u4e2a\u4e00\u884c\u7a0b\u5e8f\u4e2d\u6355\u83b7\u8be5\u670d\u52a1\u7684\u529f\u80fd\uff0c\u4e3a\u60a8\u63d0\u4f9b\u5168\u5c40\u6982\u8ff0\u3002\n\u6211\u8ba4\u4e3a\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u90fd\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u6709\u4efb\u4f55\u5efa\u8bae\u6216\u66f4\u6b63\uff0c\u8bf7\u544a\u8bc9\u6211\uff01\n\u4f60\u53ef\u4ee5\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u7528Python\uff0cNodeJS\uff0cGo\u7b49\u7f16\u5199\u3002\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u3002\n\u6587\u4ef6\u5b58\u50a8\u3002\u4e0d\u80fd\u76f4\u63a5\u6302\u8f7d\uff0c\u4f46\u53ef\u4ee5\u76f4\u63a5\u4eceHTTP\u4e0b\u8f7d\u6587\u4ef6\u3002\n\u4eceAWS\u83b7\u53d6\u4e00\u53f0\u673a\u5668\uff0c\u63d2\u5165\u60a8\u7684DC\uff0c\u5c06\u6570\u636e\u5feb\u901f\u4f20\u8f93\u5230AWS\uff0c\u7136\u540e\u8fd4\u8fd8\u673a\u5668\n\u5728\u8fb9\u7f18\u4f4d\u7f6e\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u4ed6\u4eec\u66f4\u63a5\u8fd1\u60a8\u7684\u5ba2\u6237(\u5e94\u7528\u7a0b\u5e8f\u7684CDN)\u3002\n\u770b\u4e86\u4e00\u904d\u53c8\u4e00\u904d\uff0c\u6211\u8fd8\u662f\u4e0d\u77e5\u9053\u5b83\u662f\u5e72\u4ec0\u4e48\u7684\u3002\n\u4e00\u4e9b\u91cf\u5b50\u7684\u4e1c\u897f\u3002\u8fd9\u662f\u9884\u544a\u7247\uff0c\u6240\u4ee5\u6211\u4e0d\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u3002\n\u5728\u5185\u90e8\u521b\u5efa\u89c6\u9891\u3002\u57fa\u672c\u4e0a\u662f\u4e0a\u8ff0\u6240\u6709\u670d\u52a1\u7684\u6df7\u5408\u3002\u770b\u8d77\u6765\u5f88\u8d35\u3002\u53ef\u80fd\u662f\u5427\u3002\nWeb\u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899(\u7528\u4e8e\u8d1f\u8f7d\u5747\u8861\u5668\u3001CloudFront\u3001API\u7f51\u5173)\u3002\u53ef\u4ee5\u8bbe\u7f6e\u60a8\u81ea\u5df1\u7684\u89c4\u5219\u6216\u4f7f\u7528\u9884\u5b9a\u4e49\u7684\u89c4\u5219\u3002\n\u521b\u5efa\u60a8\u53ef\u4ee5\u8fde\u63a5\u7684API\u540e\u7aef\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7AWS Amplify\u521b\u5efa\u3002\n\u4e9a\u9a6c\u900aAWS\u4e0a\u8fd0\u884c\u7740150\u591a\u9879\u670d\u52a1\uff0c\u8981\u6210\u4e3a\u6240\u6709\u8fd9\u4e9b\u670d\u52a1\u7684\u4e13\u5bb6\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fd9\u6ca1\u95ee\u9898\uff1a\u5f53\u60a8\u5904\u7406\u5927\u578bEK\u6216ECS\u96c6\u7fa4\u65f6\uff0c\u53d8\u5316\u662f\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u89e6\u53ca\u5b9e\u4f8b\u7684\u7269\u8054\u7f51\u670d\u52a1\u3002\u6211\u53d1\u73b0\u5927\u591a\u6570\u670d\u52a1\u90fd\u6709\u5f88\u597d\u7684\u89e3\u91ca\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u4e0a\u624b\u3002\n\u6700\u5927\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u7269\u8054\u7f51\u670d\u52a1\uff1a\u7531\u4e8e\u6211\u6ca1\u6709\u667a\u80fd\u8bbe\u5907\u3001MQTT\u6216\u7269\u8054\u7f51\u7684\u4e00\u822c\u7ecf\u9a8c\uff0c\u6211\u6700\u7ec8\u8bbe\u6cd5\u83b7\u5f97\u4e86\u4e00\u4e2a\u7b80\u5355\u7684GO\u5e94\u7528\u7a0b\u5e8f\u6765\u8fde\u63a5\u5230\u7269\u8054\u7f51\u6838\u5fc3\uff0c\u5e76\u5c06\u4e0d\u540c\u7684\u89c4\u5219\u3001\u7ba1\u9053\u3001\u5206\u6790\u7b49\u8fde\u63a5\u5230\u5b83\u3002\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u4e0d\u540c\u7684\u670d\u52a1\u5b9e\u9645\u4e0a\u662f\u505a\u4ec0\u4e48\u4e5f\u662f\u975e\u5e38\u4e0d\u6e05\u695a\u7684\u3002\u5e0c\u671b\u4f1a\u6709AWS\u7269\u8054\u7f51\u4e13\u5bb6\u80fd\u7ed9\u6211\u542f\u53d1\u3002", "note_en": "Posted on 20 May 2020 Tagged with: [  aws ]\u00a0 [  amazon ]\u00a0     More often than not, I\u2019m using Amazon Web Services (AWS) as my \u201ccloud\u201d. Not only for my own projects, but almost all customers I\u2019m working for use Amazon for hosting their applications. So over time you build up a lot of experience on AWS service: you know how to (correctly) setup VPC\u2019s, know when to you ECS, EC2 or lambda to host code and even services like S3, SNS and SQS pose no challenges anymore.\n But there are a lot of AWS services available. And I do mean: a LOT. Currently, there are 163 (!) different services that are available from the Amazon Dashboard, each with their own way of working, difficulties, catches and best practises.\n  You might realise that it\u2019s probably near impossible to dive into each service and completely understand how they work and most likely, you don\u2019t really need to know the exact ins and outs. But, having a basic understanding on each service can be a major benefit as a developer, architect or administrator. It makes it easier to see if there is an already existing solution for your problem at hand.\n So, I dove into each and every service to figure out what it exactly was for and how it works in the basics. I tried to experiment with as many components as possible (time and money permitting, I didn\u2019t want to spend 15.000$ on AWS Data Exchange). I tried to capture what the service does in a single one-liner to give you a global overview.\n I think most of them are correct enough but if you have any suggestions or corrections, please tell me!\n Functions you can run, written in Python, NodeJS, Go etc. Can run many in parallel.\n File storage. Not directly used for mounting, but you can directly download files from HTTP.\n  Get a machine from AWS, plug in your DC, transfer data fast to AWS, return machine\n Run your app on edge locations so they are closer to your customers (CDN for apps).\n  After reading it over and over again, i still have no idea what it does.\n    Some quantum thing. It\u2019s in preview so I have no idea what it is.\n  create videos on-premise. Basically a mix of all of the above services. Seems expensive. Probably is.\n   Web Application Firewall (for loadbalancers, cloudfront, api gateway). Can setup your own rules or use predefined ones\n Create API backends that you can connect to. Can be created through AWS Amplify as well.\n           With over 150 services running on Amazon AWS, it\u2019s near impossible to be an expert on all of them. And that\u2019s ok: when you deal with large EKS or ECS clusters, changes are you never will touch the IOT services for instances. I found that most services are pretty well explained and easy to start with.\n One of the biggest issues are the IOT services: since I have no experience with smart devices, MQTT or IOT in general, i finally managed to get a simple GO application to connect to IOT-core, and connect different rules, pipelines, analytics etc to it. But even still it\u2019s very unclear what the different services actually do. Hopefully there will be AWS IOT experts out there that can enlighten me.", "posttime": "2020-05-26 10:37:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aws,services", "title": "\u5728\u4e00\u884c\u4e2d\u8bf4\u660e163\u9879AWS\u670d\u52a1", "title_en": "163 AWS services explained in one line", "transed": 1, "url": "https://adayinthelifeof.nl/2020/05/20/aws.html", "via": "", "real_tags": ["aws", "services"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003748, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Delta Chat\u7c7b\u4f3c\u4e8eTelegram\u6216Whatsapp\uff0c\u4f46\u6ca1\u6709\u8ddf\u8e2a\u6216\u4e2d\u592e\u63a7\u5236\u3002Delta Chat\u4e0d\u9700\u8981\u60a8\u7684\u7535\u8bdd\u53f7\u7801\u3002\u770b\u770b\u6211\u4eec\u7684\u9690\u79c1\u58f0\u660e\u3002\nDelta chat\u6ca1\u6709\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u4f46\u4f7f\u7528\u4e86\u6709\u53f2\u4ee5\u6765\u6700\u5e9e\u5927\u548c\u6700\u591a\u6837\u5316\u7684\u5f00\u653e\u6d88\u606f\u7cfb\u7edf\uff1a\u73b0\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u7f51\u7edc\u3002\n\u4e0e\u4efb\u4f55\u4eba\u804a\u5929\uff0c\u5982\u679c\u4f60\u77e5\u9053\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u5b89\u88c5DeltaChat\uff01\u60a8\u6240\u9700\u8981\u7684\u53ea\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u7535\u5b50\u90ae\u4ef6\u5e10\u6237\u3002\nDelta Chat\u662f\u5f00\u6e90\u548c\u81ea\u7531\u8f6f\u4ef6\u3002\u60a8\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u3001\u67e5\u770b\u3001\u66f4\u6539\u548c\u4e0e\u6bcf\u4e2a\u4eba\u5171\u4eab\u3002", "note_en": "Delta Chat is like Telegram or Whatsapp but without the tracking or central control.Delta Chat does not need your phone number. Check out our  privacy statement.\n Delta Chat doesn\u2019t have their own servers but uses the most massive and diverse open messaging system ever: the existing e-mail server network.\n Chat with anyone if you know their e-mail address, no need for them to install DeltaChat! All you need is a standard e-mail account.\n       Delta Chat is  Open Sourceand  Free Software. You can use,see, change, and share it at will, with everyone.", "posttime": "2020-05-26 10:37:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "pgp,based,\u7535\u5b50\u90ae\u4ef6", "title": "\u57fa\u4e8e\u7535\u5b50\u90ae\u4ef6\u7684PGP\u52a0\u5bc6\u804a\u5929", "title_en": "Email based PGP encrypted chat", "transed": 1, "url": "http://delta.chat", "via": "", "real_tags": ["pgp", "based", "\u7535\u5b50\u90ae\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003747, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u5468\u524d\uff0c\u6211\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684SSL Kill Switch\uff0c\u8fd9\u662f\u6211\u7684\u9ed1\u76d2\u5de5\u5177\uff0c\u7528\u4e8e\u7981\u7528iOS\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684SSL\u9501\u5b9a\uff0c\u4ee5\u589e\u52a0\u5bf9iOS 12\u7684\u652f\u6301\u3002\niOS11\u548ciOS12\u4e4b\u95f4\u7684\u7f51\u7edc\u5806\u6808\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\uff0c\u96be\u602aiOS11\u7248\u672c\u7684SSL Kill Switch\u4e0d\u80fd\u5728(\u8d8a\u72f1)iOS12\u8bbe\u5907\u4e0a\u5de5\u4f5c\u3002\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86\u4e3a\u4e86\u652f\u6301iOS12\uff0c\u6211\u5fc5\u987b\u5bf9\u8be5\u5de5\u5177\u6240\u505a\u7684\u66f4\u6539\u3002\n\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b9e\u73b0SSL\u56fa\u5b9a\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u4e0e\u6b64\u670d\u52a1\u5668\u7684SSL\u8fde\u63a5\u65f6\uff0c\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5728\u670d\u52a1\u5668\u8bc1\u4e66\u94fe\u4e0a\u6267\u884c\u7684\u9a8c\u8bc1\u903b\u8f91\u3002\u5b9a\u5236SSL\u9a8c\u8bc1\u51e0\u4e4e\u603b\u662f\u901a\u8fc7\u67d0\u79cd\u56de\u8c03\u673a\u5236\u5b8c\u6210\u7684\uff0c\u5728\u56de\u8c03\u673a\u5236\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5728\u8fde\u63a5\u7684\u521d\u59cbTLS\u63e1\u624b\u671f\u95f4\u63a5\u6536\u670d\u52a1\u5668\u7684\u8bc1\u4e66\u94fe\uff0c\u7136\u540e\u5fc5\u987b\u5bf9\u8be5\u94fe\u505a\u51fa\u51b3\u5b9a(\u5b83\u662f\u5426\u201c\u6709\u6548\u201d)\u3002\u4f8b\u5982\uff0c\u5728iOS\u4e0a\uff1a\n\u7528\u4e8e\u6253\u5f00HTTPS\u8fde\u63a5\u7684\u6700\u9ad8\u7ea7\u522b\u63a5\u53e3\u662fNSURLSession\uff0c\u5b83\u901a\u8fc7[NSURLSessionDelegateHTTPS\u59d4\u6258\u65b9\u6cd5]\u5b9e\u73b0\u9a8c\u8bc1\u56de\u8c03\u3002\n\u5f53\u4f7f\u7528\u4f4e\u7ea7Network.framework(IOS 12\u4e2d\u65b0\u63d0\u4f9b)\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528sec_protocol_options_set_verify_block()\u5c06\u5757\u8bbe\u7f6e\u4e3a\u9a8c\u8bc1\u56de\u8c03\u3002\n\u8fd9\u7bc7\u6765\u81eaApple\u6587\u6863\u7684\u65e7\u6587\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u5176\u4ed6iOS\u7f51\u7edcAPI\u81ea\u5b9a\u4e49\u9a8c\u8bc1\uff1aHTTPS\u670d\u52a1\u5668\u4fe1\u4efb\u8bc4\u4f30\u3002\n\u56e0\u6b64\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7981\u7528SSL\u56fa\u5b9a\u7684\u9ad8\u7ea7\u7b56\u7565\u662f\u9632\u6b62\u89e6\u53d1SSL\u9a8c\u8bc1\u56de\u8c03\uff0c\u4ee5\u4fbf\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c\u8d1f\u8d23\u5b9e\u73b0\u56fa\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3002\n\u5728iOS\u4e0a\uff0c\u76f8\u5bf9\u5bb9\u6613\u963b\u6b62\u8c03\u7528NSURLSessionDelegate\u9a8c\u8bc1\u65b9\u6cd5(SSL Kill Switch\u7684\u65e9\u671f\u7248\u672c\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684)\uff0c\u4f46\u662f\u4f7f\u7528\u8f83\u4f4e\u7ea7\u522bAPI(\u5982Network.framework)\u7684iOS\u5e94\u7528\u7a0b\u5e8f\u600e\u4e48\u529e\uff1f\u7531\u4e8eiOS\u4e0a\u7684\u6bcf\u4e2a\u7f51\u7edcAPI\u90fd\u6784\u5efa\u5728\u53e6\u4e00\u4e2a\u4e4b\u4e0a\uff0c\u56e0\u6b64\u5728\u6700\u4f4e\u7ea7\u522b\u7981\u7528\u9a8c\u8bc1\u56de\u8c03\u53ef\u80fd\u4f1a\u7981\u7528\u6240\u6709\u8f83\u9ad8\u7ea7\u522b\u7684\u7f51\u7edcAPI\u7684\u9a8c\u8bc1\uff0c\u8fd9\u5c06\u5141\u8bb8\u8be5\u5de5\u5177\u9488\u5bf9\u66f4\u591a\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u3002\n\u4eceiOS 8\u5f00\u59cb\uff0ciOS\u4e0a\u7684\u7f51\u7edc\u5806\u6808\u603b\u4f53\u4e0a\u7ecf\u5386\u4e86\u5f88\u5927\u7684\u53d8\u5316\uff0c\u800c\u5728iOS 12\u4e0a\uff0cSSL/TLS\u5806\u6808\u6784\u5efa\u5728\u81ea\u5b9a\u4e49\u7684\u5206\u652f\u4e0a(\u6211\u60f3\uff1f)\u3002BoringSSL\u7684\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u8fd0\u884c\u6253\u5f00\u8fde\u63a5\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u5728\u968f\u673aBoringSSL\u7b26\u53f7\u4e0a\u8bbe\u7f6e\u65ad\u70b9\u6765\u770b\u5230\u8fd9\u4e00\u70b9\uff1a\n\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u8fd9\u4e2a\u7b56\u7565\uff1a\u201c\u9632\u6b62SSL\u9a8c\u8bc1\u56de\u8c03\u88ab\u89e6\u53d1\u201d\uff0c\u5f88\u53ef\u80fd\u901a\u8fc7\u5bf9\u51c6\u5e76\u4fee\u8865iOS\u4e0a\u6700\u4f4e\u7ea7\u522b\u7684SSL/TLS API BoringSSL\uff0ciOS\u4e0a\u6240\u6709\u66f4\u9ad8\u7ea7\u522b\u7684API(\u5305\u62ecNSURLSession)\u4e5f\u4f1a\u5173\u95ed\u9489\u4f4f\u9a8c\u8bc1\u3002\n\u4f7f\u7528BoringSSL\u65f6\uff0c\u81ea\u5b9a\u4e49SSL\u9a8c\u8bc1\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7SSL_CTX_SET_CUSTOM_VERIFY()\u51fd\u6570\u914d\u7f6e\u9a8c\u8bc1\u56de\u8c03\u51fd\u6570\uff1a\n//\u5b9a\u4e49SSL/TLS\u63e1\u624b\u8fc7\u7a0b\u4e2d\u8981\u89e6\u53d1\u7684\u8bc1\u4e66\u9a8c\u8bc1\u56de\u8c03//\u5b9a\u4e49\u5728SSL/TLS handshakessl_ify_result_t ify_cert_chain_callback(ssl*ssl\uff0cuint8_t*out_alert){//\u68c0\u7d22\u670d\u52a1\u5668\u5728\u63e1\u624b\u65f6\u53d1\u9001\u7684\u8bc1\u4e66\u94feSTACK_of(X509)*certificateChain=ssl_get_Peer_cert_chain(Ssl)\uff1b//\u5982\u679cdo_CUSTOM_VALIDATION(certificateChai\u3002}ELSE{//\u5426\u5219\u5173\u95ed\u8fde\u63a5\u8fd4\u56deSSL_VERIFY_INVALID\uff1b}}//\u5bf9\u6240\u6709\u4f7f\u7528SSL_ctxSSL_CTX_SET_CUSTOM_VERIFY(SSL_CTX\uff0cSSL_VERIFY_PEER\uff0cVERIFY_CERT_CHAIN_CALLBACK)\u5b9e\u73b0\u7684\u672a\u6765SSL/TLS\u8fde\u63a5\u542f\u7528\u6211\u7684\u56de\u8c03\uff1b\n\u4f7f\u7528\u4e3aNSURLSession\u542f\u7528SSL\u56fa\u5b9a\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u80fd\u591f\u786e\u8ba4\u5728\u6253\u5f00\u8fde\u63a5\u65f6\u786e\u5b9e\u4f1a\u8c03\u7528SSL_CTX_SET_CUSTOM_Verify()\uff1a\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230APPLE/DEFAULT IOS\u9a8c\u8bc1\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570(\u5728\u5bc4\u5b58\u5668x2\u4e2d)\u4f20\u9012\uff1aboringssl_context_certificate_verify_callback().\u3002\u8be5\u56de\u8c03\u5f88\u53ef\u80fd\u5305\u542b(\u4ee5\u53ca\u5176\u4ed6\u5185\u5bb9)\u903b\u8f91\uff0c\u7528\u4e8e\u8bbe\u7f6e\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u7684NSURLSession\u56de\u8c03/\u59d4\u6258\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u6700\u7ec8\u4f7f\u7528\u670d\u52a1\u5668\u8bc1\u4e66\u8fdb\u884c\u8c03\u7528\u3002\n\u4e0d\u51fa\u6240\u6599\uff0c\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u7528\u4e8e\u56fa\u5b9a\u9a8c\u8bc1\u4ee3\u7801\u7684\u59d4\u6258\u65b9\u6cd5\u786e\u5b9e\u5f97\u5230\u4e86\u6267\u884c\uff1a\n\u6211\u5df2\u7ecf\u5c06\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4e3a\u4f7f\u5176\u81ea\u5b9a\u4e49/\u56fa\u5b9a\u9a8c\u8bc1\u903b\u8f91\u59cb\u7ec8\u5931\u8d25\uff1a\n\u56e0\u6b64\uff0c\u5982\u679c\u6211\u786e\u5b9e\u627e\u5230\u4e86\u7ed5\u8fc7\u9489\u4f4f\u7684\u65b9\u6cd5\uff0c\u5219\u6b64\u8fde\u63a5\u5e94\u8be5\u4f1a\u6210\u529f\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u8ba1\u5212\u548c\u6b63\u786e\u7684\u6d4b\u8bd5\u8bbe\u7f6e(\u5e26\u9489\u4f4f\u7684\u5e94\u7528\u7a0b\u5e8f\u3001\u8d8a\u72f1\u8bbe\u5907\u3001Xcode\u7b49)\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5de5\u4f5c\u5427\uff01\n\u6211\u5c1d\u8bd5\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u7528\u4e00\u4e2a\u5b8c\u5168\u4e0d\u68c0\u67e5\u670d\u52a1\u5668\u8bc1\u4e66\u94fe\u7684\u7a7a\u56de\u8c03\u66ff\u6362\u7531IOS\u7f51\u7edc\u5806\u6808boringssl_context_certificate_verify_callback()\uff0c\u8bbe\u7f6e\u7684\u9ed8\u8ba4BoringSSL\u56de\u8c03\uff1a\n//\u6211\u7684\u4e0d\u68c0\u67e5\u4efb\u4f55\u5185\u5bb9\u7684\u90aa\u6076\u56de\u8c03ssl_Verify_Result_t Verify_Callback_That_Does_Not_Validation(void*ssl\uff0cuint8_t*out_alert){return SSL_Verify_OK\uff1b}//\u6211\u7684\u90aa\u6076&34\uff1bSSL_CTX_SET_CUSTOM_VERIFY()\u9759\u6001\u65e0\u6548REPLACE_SSL_CTX_SET_CUSTOM_VERIFY(void*ctx\uff0cint mode\uff0cSSL_VERIFY_RESULT_t(*CALLBACK)(void*SSL\uff0cuint8_t*out_alert))\u7684\u66ff\u6362\u51fd\u6570{//\u59cb\u7ec8\u5ffd\u7565\u4f20\u9012\u7684\u56de\u8c03\uff0c\u6539\u4e3a\u8bbe\u7f6e\u6211\u7684&#34\uff1b\u90aa\u6076&#34\uff1b\u56de\u8c03Original_SSL_CTX_SET_CUSTOM_VERIFY(CTX\uff0cSSL_VERIFY_NONE VERIFY_CALLBACK_That_\u3002}//\u6700\u540e\uff0c\u4f7f\u7528MobileSubstrate\u5c06SSL_CTX_SET_CUSTOM_VERIFY()\u66ff\u6362\u4e3aMY&#34\uff1bEVISE&#34\uff1bREPLEED_SSL_CTX_SET_CUSTOM_VERIFY()void*boringssl_Handle=dlopen(&#34\uff1b/usr/lib/libboringssl.dylib&#34\uff1b\uff0cRTLD_NOW)\uff1bvoid*SSL_CTX_SET_CUSTOM_VERIFY=dlsym(boringssl_Handle\u3002if(SSL_CTX_SET_CUSTOM_VERIFY){MSHookFunction((void*)SSL_CTX_SET_CUSTOM_VERIFY\uff0c(void*)REPLACE_SSL_CTX_SET_CUSTOM_VERIFY\uff0cNULL)\uff1b}\u3002\n\u5728\u5c06\u5176\u5b9e\u73b0\u4e3aMobileSubstrate\u8c03\u6574\u5e76\u5c06\u5176\u6ce8\u5165\u5230\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e4b\u540e\uff0c\u53d1\u751f\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\uff1a\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u7684NSURLSession\u59d4\u6258\u65b9\u6cd5\u4e0d\u518d\u88ab\u8c03\u7528(\u610f\u5473\u7740\u5b83\u88ab\u201c\u7ed5\u8fc7\u201d)\uff0c\u4f46\u662f\u8be5\u5e94\u7528\u7a0b\u5e8f\u5b8c\u6210\u7684\u7b2c\u4e00\u4e2a\u8fde\u63a5\u5c06\u5931\u8d25\uff0c\u5e76\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684/\u672a\u77e5\u9519\u8bef\u201cPeer is not Authenticated\u201d\uff0c\u5982\u65e5\u5fd7\u4e2d\u6240\u793a\uff1a\nTrustKitDemo-Objc[3320\uff1a160146]=SSL\u7ec8\u6b62\u5f00\u51732\uff1areplaced_SSL_CTX_set_custom_verifyTrustKitDemo-ObjC[3320:160146]\u65e0\u6cd5\u514b\u9686\u4fe1\u4efb\u9519\u8bef\u57df=NSOSStatusErrorDomain Code=-50&#34\uff1bNULL\u4fe1\u4efb\u8f93\u5165&#34\uff1b\u7528\u6237\u4fe1\u606f={NSDescription=NULL\u4fe1\u4efb\u8f93\u5165}[-50]TrustKitDemo-Objc[3320\uff1a160146][BoringSSL]boringssl_SESSION_FINISH_HANSHARK(306)[c1.1\uff1a2][0x10\u3002\u6b63\u5728\u65ad\u5f00\u8fde\u63a5.TrustKitDemo-Objc[3320\uff1a160146]NSURLSession/NSURLConnection HTTP\u52a0\u8f7d\u5931\u8d25(kCFStreamErrorDomainSSL\uff0c-9810)TrustKitDemo-Objc[3320\uff1a160146]\u4efb\u52a1&lt\uff1b15E1F3B0-0B73-468A-9132-3E19048DDAE3&gt\uff1b.&lt\uff1b1&gt\uff1b\u5df2\u5b8c\u6210\uff0c\u9519\u8bef\u4ee3\u7801\uff1a-1200.\u3002\n\u7136\u540e\u5728\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u8fde\u63a5\u5c06\u5931\u8d25\uff0c\u5e76\u51fa\u73b0\u4e0e\u4ee5\u524d\u4e0d\u540c\u7684\u9519\u8bef\uff1a\n\u4f46\u662f\uff0c\u540e\u7eed\u8fde\u63a5\u5230\u540c\u4e00\u670d\u52a1\u5668\u5c06\u4f1a\u6210\u529f\uff0c\u800c\u4e0d\u4f1a\u89e6\u53d1\u9489\u4f4f\u9a8c\u8bc1\u56de\u8c03\uff1a\n\u56e0\u6b64\uff0c\u9664\u4e86\u7b2c\u4e00\u4e2a\u8fde\u63a5\u4e4b\u5916\uff0c\u6211\u5bf9\u6240\u6709\u8fde\u63a5\u90fd\u7ed5\u8fc7\u4e86\u9489\u4f4f\u3002\u5feb\u5230\u4e86\uff0c\u2026\u3002\n\u6211\u9700\u8981\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\u6765\u7406\u89e3\u201cPeer is not Authenticated\u201d\u9519\u8bef\u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u6700\u7ec8\u4ece\u6211\u7684iOS12\u8bbe\u5907\u4e0a\u62c9\u51fa\u4e86\u5171\u4eab\u7f13\u5b58(\u82f9\u679c\u7684\u6240\u6709\u5e93\u548c\u6846\u67b6\u90fd\u5728\u8fd9\u91cc\uff0c\u5305\u62ecBoringSSL)\uff0c\u5982\u672c\u6307\u5357\u4e2d\u6240\u8ff0\u3002\n\u5728\u5c06libboringssl.dylib\u52a0\u8f7d\u5230Hopper\u4e2d\u4e4b\u540e\uff0c\u6211\u80fd\u591f\u5728\u4e00\u4e2a\u540d\u4e3aboringssl_session_Finish_handshake()\u7684\u51fd\u6570\u4e2d\u627e\u5230\u201cPeer is not Authenticated\u201d\u9519\u8bef\u7684\u5b57\u7b26\u4e32(\u5728\u5c4f\u5e55\u622a\u56fe\u4e2d\u6807\u8bb0\u4e3a\u201c1\u201d)\uff1a\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u9519\u8bef\u672c\u8eab\uff0c\u6211\u8bd5\u56fe\u7406\u89e3\u8be5\u51fd\u6570\u5728\u505a\u4ec0\u4e48\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u51e0\u4e4e\u4e0d\u4e86\u89e3arm64(\u6216\u4efb\u4f55)\u7a0b\u5e8f\u96c6\uff0c\u6240\u4ee5\u6211\u65e0\u6cd5\u7406\u89e3\u5b83\u3002\u6211\u5c1d\u8bd5\u4e86\u5176\u4ed6\u4e00\u4e9b\u65b9\u6cd5(\u4f8b\u5982\u4fee\u8865boringssl_context_certificate_verify_callback()\u672c\u8eab)\uff0c\u4f46\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u6709\u6548\u7684\u65b9\u6cd5\u3002\n\u5f53\u6211\u7684\u5468\u672b\u65f6\u95f4\u4e0d\u591a\u4e86\uff0c\u6211\u53ef\u4ee5\u8ba9\u81ea\u5df1\u82b1\u5728\u8fd9\u4e2a\u4e0a\u9762\u7684\u65f6\u5019\uff0c\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u66f4\u7edd\u671b\u7684\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u518d\u6b21\u67e5\u770b\u53cd\u7f16\u8bd1\u7684boringssl_session_finish_handshake()\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u201c\u4e3b\u201d\u4ee3\u7801\u8def\u5f84\uff0c\u8fd9\u4e24\u4e2a\u8def\u5f84\u6709\u6761\u4ef6\u5730\u7531if/Else\u8bed\u53e5\u89e6\u53d1\uff0c\u201cPeer WAS Not Authenticated\u201d\u9519\u8bef\u51fa\u73b0\u5728\u201cif\u201d\u4ee3\u7801\u8def\u5f84\u4e2d\uff0c\u800c\u4e0d\u662f\u201cElse\u201d\u8def\u5f84\u4e2d\u3002\n\u4e00\u79cd\u5929\u771f\u7684\u5c1d\u8bd5\u662f\u963b\u6b62\u5177\u6709\u6b64\u9519\u8bef\u7684\u4ee3\u7801\u8def\u5f84\u8fd0\u884c\uff0c\u5373\u3002\u201c\u5982\u679c\u201d\u8def\u5f84\u3002\u5982\u622a\u56fe\u6240\u793a\uff0c\u89e6\u53d1\u201cif\u201d\u5206\u652f\u7684\u4e00\u4e2a\u6761\u4ef6\u662f(_SSL_GET_PSK_Identity()==0x0)(\u5728\u622a\u56fe\u4e2d\u6807\u8bb0\u4e3a\u201c2\u201d)\u3002\u5982\u679c\u6211\u4eec\u5c06\u6b64\u51fd\u6570\u4fee\u8865\u4e3a\u4e0d\u8fd4\u56de0\uff0c\u4ee5\u5f3a\u5236\u6267\u884c\u201cElse\u201d\u4ee3\u7801\u8def\u5f84(\u8fd9\u4e0d\u4f1a\u89e6\u53d1\u201cPeer was not Authenticated\u201d\u9519\u8bef)\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\n//\u4f7f\u7528MobileSubstrate\u5c06ssl_GET_PSK_IDENTITY()\u66ff\u6362\u4e3a\u8be5\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4ece\u4e0d\u8fd4\u56de0\uff1aCHAR*REPLACE_SSL_GET_PSK_IDENTITY(VOID*ssl){Return&#34\uff1bnotarealPSKidentity&#34\uff1b\uff1b}MSHookFunction((void*)SSL_GET_PSK_IDENTITY\uff0c(VOID*)REPLEED_SSL_GET_PSK_IDENTITY\uff0c(void**)NULL)\uff1b\n\u5728\u5c06\u8fd9\u4e2a\u8fd0\u884c\u65f6\u8865\u4e01\u6ce8\u5165\u6211\u7684\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5b83\u8d77\u4f5c\u7528\u4e86\uff01\u751a\u81f3\u7b2c\u4e00\u6b21\u8fde\u63a5\u90fd\u6210\u529f\u4e86\uff0c\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u9a8c\u8bc1\u56de\u8c03\u4ece\u672a\u88ab\u89e6\u53d1\u3002\u6211\u901a\u8fc7\u4fee\u8865BoringSSL\u7ed5\u8fc7\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684SSL\u56fa\u5b9a\u9a8c\u8bc1\u4ee3\u7801\u3002\n\u8fd9\u663e\u7136\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u5e72\u51c0\u7684\u8fd0\u884c\u65f6\u8865\u4e01\uff0c\u867d\u7136\u5728\u5e94\u7528\u5b83\u4e4b\u540e\u4f3c\u4e4e\u4e00\u5207\u6b63\u5e38(\u8fd9\u4ee4\u4eba\u60ca\u8bb6)\uff0c\u4f46\u5b83\u4f1a\u89e6\u53d1\u9519\u8bef\uff0c\u6bcf\u5f53\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u8fde\u63a5\u65f6\uff0c\u90fd\u4f1a\u5728\u65e5\u5fd7\u4e2d\u770b\u5230\u8fd9\u4e9b\u9519\u8bef\uff1a\nTrustKitDemo-Objc[3417\uff1a166749]\u65e0\u6cd5\u514b\u9686\u4fe1\u4efb\u9519\u8bef\u57df=NSOSStatusErrorDomain Code=-50&#34\uff1b\u7a7a\u4fe1\u4efb\u8f93\u5165&#34\uff1b\u7528\u6237\u4fe1\u606f={NSDescription=\u7a7a\u4fe1\u4efb\u8f93\u5165}[-50]\u3002\n\u5b83\u53ef\u80fd\u4f1a\u5f04\u4e71\u4e0eTLS-PSK\u5bc6\u7801\u5957\u4ef6\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u5b9e\u9645\u4f7f\u7528ssl_get_psk_entity()\u51fd\u6570\u65f6\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u5bc6\u7801\u5957\u4ef6\u5f88\u5c11\u4f7f\u7528\uff0c\u7279\u522b\u662f\u5728\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\n\u6c38\u8fdc\u4e0d\u4f1a\u8c03\u7528IOS\u7f51\u7edc\u5806\u6808boringssl_context_certificate_verify_callback()\uff0c\u4e2d\u7684\u9ed8\u8ba4BoringSSL\u56de\u8c03\u3002\u8fd9\u610f\u5473\u7740IOS\u7f51\u7edc\u5806\u6808\u4e2d\u7684\u67d0\u4e9b\u72b6\u6001\u53ef\u80fd\u672a\u6b63\u786e\u8bbe\u7f6e\uff0c\u8fd9\u5c06\u5bfc\u81f4\u9519\u8bef\u3002\n\u6700\u540e\uff0c\u8fd8\u6709\u51e0\u4ef6\u989d\u5916\u7684\u4e8b\u60c5\u6211\u6ca1\u6709\u65f6\u95f4\u53bb\u505a\uff1a\n\u4ed4\u7ec6\u68c0\u67e5\u6211\u7684BoringSSL\u8fd0\u884c\u65f6\u8865\u4e01\u662f\u5426\u7981\u7528\u4e86\u4f4e\u7ea7IOS\u7f51\u7edcAPI(\u5982Network.framework\u6216CFNetwork)\u7684\u56fa\u5b9a\u3002\n\u6dfb\u52a0\u5bf9MacOS\u7684\u652f\u6301\u3002\u6211\u975e\u5e38\u786e\u5b9a\u8865\u4e01\u672c\u8eab\u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u8fd8\u6ca1\u6709\u627e\u5230\u5728MacOS\u4e0a\u6302\u63a5BoringSSL(\u6216\u5171\u4eab\u7f13\u5b58\u4e2d\u7684\u4efb\u4f55C\u51fd\u6570)\u7684\u65b9\u6cd5\u3002\u6211\u4e4b\u524d\u4f7f\u7528\u7684\u5de5\u5177Facebook\u7684\u9c7c\u94a9\u4f3c\u4e4e\u4e0d\u518d\u8d77\u4f5c\u7528\u4e86\u3002\n\u5c31\u8fd9\u6837!\u3002\u8f6c\u5230\u9879\u76ee\u7684repo\u67e5\u770b\u4ee3\u7801\u5e76\u4e0b\u8f7d\u8c03\u6574\u3002", "note_en": "Two weeks ago, I released a new version of  SSL Kill Switch, my blackbox tool for disabling SSL pinning in iOS apps, in order to add support for iOS 12.\n The network stack  changed significantly between iOS 11 and 12, and it was no surprise that the iOS 11 version of SSL Kill Switch did not work on (jailbroken) iOS 12 devices. This post describes the changes I had to make for the tool to support iOS 12.\n  Implementing SSL pinning in a mobile application requires customizing the validation logic done by the app on the server\u2019s certificate chain, when the app opens an SSL connection to this server. Customizing SSL validation is almost always done via some kind of callback mechanism, where the application code receives the server\u2019s certificate chain during the connection\u2019s initial TLS handshake, and then has to make a decision on the chain (whether it is \u201cvalid\u201d, or not). For example, on iOS:\n The highest level API for opening HTTPS connections is  NSURLSession, which implements the validation callback via the   [NSURLSessionDelegate URLSession:didReceiveChallenge:completionHandler:] delegate method.\n  When using the low level Network.framework (newly available in iOS 12), a block can be set as the validation callback using   sec_protocol_options_set_verify_block().\n  This older article from the Apple documentation describes how to customize validation with other iOS network APIs:  HTTPS Server Trust Evaluation.\n Hence, the  high-level strategy for disabling SSL pinning in applications is to prevent the SSL validation callbacks from being triggered, so that the application code that is responsible for implementing pinning is never exercised.\n On iOS, it is relatively easy to prevent the  NSURLSessionDelegate validation method from being called (and it is  how the early versions of SSL Kill Switch worked), but what about iOS apps that use a lower level API (such as Network.framework)? As each networking API on iOS is built on top of another, disabling the validation callbacks at the lowest level would potentially disable validation for all the higher level network APIs, which would allow the tool to work against a lot more apps.\n The network stack on iOS in general has been going through a lot of changes since iOS 8, and on iOS 12, the SSL/TLS stack is built on a custom fork (I think?) of  BoringSSL. This can be seen for example by setting a breakpoint on a random BoringSSL symbol when running  an app that opens a connection:\n  If you remember the strategy: \u201cprevent the SSL validation callbacks from being triggered\u201d, it is likely that by targeting and patching BoringSSL, the lowest level SSL/TLS API on iOS, all the higher level APIs on iOS (including  NSURLSession) would also have pinning validation disabled.\n   When using BoringSSL, one way to customize SSL validation is to configure a validation callback function via the   SSL_CTX_set_custom_verify() function:\n  // Define a cert validation callback to be triggered during the SSL/TLS handshakessl_verify_result_t verify_cert_chain_callback(SSL* ssl, uint8_t* out_alert) { // Retrieve the certificate chain sent by the server during the handshake STACK_OF(X509) *certificateChain = SSL_get_peer_cert_chain(ssl); // Do custom validation (pinning or something else) if do_custom_validation(certificateChain) == 0 { // If validation succeeded, return OK return ssl_verify_ok; } else { // Otherwise close the connection return ssl_verify_invalid; }}// Enable my callback for all future SSL/TLS connections implemented using the ssl_ctxSSL_CTX_set_custom_verify(ssl_ctx, SSL_VERIFY_PEER, verify_cert_chain_callback);\n Using a  test app with SSL pinning enabled for  NSURLSession, I was able to confirm that  SSL_CTX_set_custom_verify() does get called when opening a connection:\n  We can also see the Apple/default iOS validation callback function passed as the third argument (in register x2):  boringssl_context_certificate_verify_callback(). It is likely that this callback contains (among other things) logic to set things up for my test app\u2019s  NSURLSession callback/delegate method to eventually be called with the server certificate.\n And as expected, my test app\u2019s delegate method for pinning validation code does get exercised:\n  And I have designed my test app to have its custom/pinning validation logic always fail:\n  Hence, if I do find a way to bypass pinning, this connection should instead succeed.\n Now that we have a plan and a proper test setup (app with pinning, jailbroken device, Xcode, etc.), let\u2019s get to work!\n  The first thing I tried was to replace the default BoringSSL callback set by the iOS networking stack, boringssl_context_certificate_verify_callback(), with an empty callback that does not check the server\u2019s certificate chain at all:\n // My &#34;evil&#34; callback that does not check anythingssl_verify_result_t verify_callback_that_does_not_validate(void *ssl, uint8_t *out_alert){ return ssl_verify_ok;}// My &#34;evil&#34; replacement function for SSL_CTX_set_custom_verify()static void replaced_SSL_CTX_set_custom_verify(void *ctx, int mode, ssl_verify_result_t (*callback)(void *ssl, uint8_t *out_alert)){ // Always ignore the callback that was passed and instead set my &#34;evil&#34; callback original_SSL_CTX_set_custom_verify(ctx, SSL_VERIFY_NONE verify_callback_that_does_not_validate); return;}// Lastly, use MobileSubstrate to replace SSL_CTX_set_custom_verify() with my &#34;evil&#34; replaced_SSL_CTX_set_custom_verify()void* boringssl_handle = dlopen(&#34;/usr/lib/libboringssl.dylib&#34;, RTLD_NOW);void *SSL_CTX_set_custom_verify = dlsym(boringssl_handle, &#34;SSL_CTX_set_custom_verify&#34;);if (SSL_CTX_set_custom_verify){ MSHookFunction((void *) SSL_CTX_set_custom_verify, (void *) replaced_SSL_CTX_set_custom_verify, NULL);}\n After implementing this as a MobileSubstrate tweak and injecting it into my test app, something interesting happened: my test app\u2019s  NSURLSession delegate method was not called anymore (meaning it was \u201cbypassed\u201d), but the very first connection done by the app would fail with a new/unknown error, \u201cPeer was not authenticated\u201d, as seen in the logs:\n TrustKitDemo-ObjC[3320:160146] === SSL Kill Switch 2: replaced_SSL_CTX_set_custom_verifyTrustKitDemo-ObjC[3320:160146] Failed to clone trust Error Domain=NSOSStatusErrorDomain Code=-50 &#34;null trust input&#34; UserInfo={NSDescription=null trust input} [-50]TrustKitDemo-ObjC[3320:160146] [BoringSSL] boringssl_session_finish_handshake(306) [C1.1:2][0x10bd489a0] Peer was not authenticated. Disconnecting.TrustKitDemo-ObjC[3320:160146] NSURLSession/NSURLConnection HTTP load failed (kCFStreamErrorDomainSSL, -9810)TrustKitDemo-ObjC[3320:160146] Task &lt;15E1F3B0-0B73-468A-9132-3E19048DDAE3&gt;.&lt;1&gt; finished with error - code: -1200\n And then in the app itself, this first connection would fail with a different error than before:\n  However, subsequent connections to the same server would succeed without triggering the pinning validation callback:\n  Hence I had bypassed pinning for all connections except for the very first one. Almost there\u2026\n  I needed more context to understand what the \u201cPeer was not authenticated\u201d error was, so I ended up pulling the shared cache (where all of Apple\u2019s libraries and frameworks are, including BoringSSL) from my iOS 12 device, as described in  this guide.\n After loading  libboringssl.dylib into Hopper, I was able to find the string for the \u201cPeer was not authenticated\u201d error (labelled as \u201c1\u201d in the screenshot), in a function called  boringssl_session_finish_handshake():\n  I tried to understand what this function was doing to get a better understanding of the error itself, but since I barely understand arm64 (or any) assembly, I couldn\u2019t figure it out. I tried a few other approaches (such as patching the  boringssl_context_certificate_verify_callback() itself) but didn\u2019t find anything that worked.\n As I was running out of week-end time I can allow myself to spend on this, I went for a more desperate approach. If you look again at the decompiled  boringssl_session_finish_handshake() function, you can see two \u201cmain\u201d code paths, conditionally triggered by an if/else statement, with the \u201cPeer was not authenticated\u201d error happening in the \u201cif\u201d code path but not in the \u201celse\u201d path.\n A naive attempt would be to prevent the code path with this error from ever being run, ie. the \u201cif\u201d path. As seen in the screenshot, one condition that does trigger the \u201cif\u201d branch is  (_SSL_get_psk_identity() == 0x0) (labelled as \u201c2\u201d in the screenshot). What if we patched this function to not return 0, in order to force the execution of the \u201celse\u201d code path (which doesn\u2019t trigger the \u201cPeer was not authenticated\u201d error)?\n  // Use MobileSubstrate to replace SSL_get_psk_identity() with this function, which never returns 0:char *replaced_SSL_get_psk_identity(void *ssl){ return &#34;notarealPSKidentity&#34;;}MSHookFunction((void *) SSL_get_psk_identity, (void *) replaced_SSL_get_psk_identity, (void **) NULL);\n After injecting this runtime patch into my test app, it worked! Even the first connection succeeded, and my app\u2019s validation callback was never triggered. I had bypassed my app\u2019s SSL pinning validation code by patching BoringSSL.\n  This is obviously not a very clean runtime patch, and while everything seems to work fine after applying it (which is surprising), it triggers errors that can be seen in the logs whenever the app opens a connection:\n TrustKitDemo-ObjC[3417:166749] Failed to clone trust Error Domain=NSOSStatusErrorDomain Code=-50 &#34;null trust input&#34; UserInfo={NSDescription=null trust input} [-50]\n  It probably messes up code related to TLS-PSK cipher suites, which is when the  SSL_get_psk_identity() function is actually used. However, these cipher suites are rarely used, especially in mobile applications.\n  The default BoringSSL callback that is part of the iOS network stack,  boringssl_context_certificate_verify_callback(), is never called. This means that some state within the iOS networking stack is probably not getting set properly, which should lead to bugs.\n Lastly, there are a few extra things I didn\u2019t have time to do:\n Double checking that my BoringSSL runtime patch does disable pinning for lower-level iOS networking APIs, such as Network.framework or CFNetwork.\n  Adding support for macOS. I am pretty sure the patch itself should work as it is, but I haven\u2019t found a way of hooking BoringSSL (or any C function in the shared cache) on macOS. The tool I was using previously, Facebook\u2019s  fishhook, does not seem to work anymore.\n That\u2019s all! Head to  the project\u2019s repo to see the code and download the tweak.", "posttime": "2020-05-26 10:36:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,\u7ec8\u6b62,kill,ssl", "title": "SSL\u7ec8\u6b62\u4ea4\u6362\u673a\u5728iOS 12\u4e0a\u7684\u5de5\u4f5c\u539f\u7406", "title_en": "How SSL Kill Switch works on iOS 12", "transed": 1, "url": "https://nabla-c0d3.github.io/blog/2019/05/18/ssl-kill-switch-for-ios12/", "via": "", "real_tags": ["ios", "\u7ec8\u6b62", "kill", "ssl"]}, {"category": "", "categoryclass": "", "imagename": "274e72c037eb9071209b21da03a4781f.jpg", "infoid": 1003746, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u8d1d\u58f3\u662f\u6211\u7684\u4e00\u5207\u3002\u8fd9\u662f\u6211\u65e9\u4e0a\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u8282\u76ee\uff0c\u4e5f\u662f\u6211\u665a\u4e0a\u7ed3\u675f\u7684\u6700\u540e\u4e00\u4e2a\u8282\u76ee\u3002\u8fd9\u662f\u6211\u7ecf\u5e38\u8c03\u6574\u7684\u7a0b\u5e8f\uff0c\u4ee5\u63d0\u9ad8\u6211\u7684\u6574\u4f53\u751f\u4ea7\u529b\u3002\u5728\u6211\u770b\u6765\uff0c\u5fae\u8f6f\u53d1\u5e03\u7684Windows\u7ec8\u7aef1.0\u548cWSL2.0\u5c06\u4fc3\u8fdb\u58f3\u724c\u7684\u6574\u4f53\u91c7\u7528\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u4e2d\uff0c\u6211\u770b\u5230\u8bb8\u591a\u7528\u6237\u5b89\u88c5\u548c\u4f7f\u7528\u4e0d\u540c\u7684shell\u3002\u7136\u800c\uff0c\u6295\u5165\u65f6\u95f4\u914d\u7f6eshell\u4ee5\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u7684\u4eba\u6570\u53ea\u5360\u5f88\u5c0f\u7684\u6bd4\u4f8b\u3002\u8fd9\u592a\u53ef\u60dc\u4e86\uff01\n\u5982\u679c\u60a8\u5b89\u88c5\u548c\u4f7f\u7528shell\u800c\u4e0d\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u60a8\u4e5f\u53ef\u4ee5\u575a\u6301\u4f7f\u7528Finder\u6216Windows\u8d44\u6e90\u7ba1\u7406\u5668\u7b49\u5de5\u5177\u3002\u50cfZSH\u8fd9\u6837\u7684shell\u4e00\u65e6\u6709\u4e86\u5355\u72ec\u7684\u914d\u7f6e\u5c31\u4f1a\u5927\u653e\u5f02\u5f69\uff1a\u8fd9\u4e9b\u914d\u7f6e\u53ef\u4ee5\u8ba9\u60a8--\u7528\u6237--\u83b7\u5f97\u8d85\u9ad8\u7684\u5de5\u4f5c\u6548\u7387\u3002\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u662f\u4e3a\u4e86\u83b7\u5f97\u7075\u611f\u3002\u5b83\u5e94\u8be5\u6f14\u793a\u5982\u4f55\u901a\u8fc7\u7b80\u5355\u7684\u4e8b\u60c5(\u5982\u5728ZSH\u4e2d\u91c7\u75285\u79cd\u7c7b\u578b\u7684\u522b\u540d)\u6765\u63d0\u9ad8\u60a8\u7684\u6574\u4f53\u5de5\u4f5c\u6548\u7387\u3002\u522b\u540d\u662f\u83b7\u5f97\u5b9a\u5236shell\u4f53\u9a8c\u7684\u7b2c\u4e00\u6b65\u3002\u522b\u540d\u662f\u4e00\u79cd\u8d85\u7ea7\u4e2a\u4f53\u7684\u4e1c\u897f\u3002\n\u6211\u6bcf\u5929\u90fd\u5728\u4f7f\u7528Docker\u3001Kubernetes\u548cMicrosoft Azure\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ba9\u522b\u540d\u652f\u6301\u6211\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u548c\u73af\u5883\u662f\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\uff0c\u53ef\u80fd\u60a8\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u4e91\u548c\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u56e0\u6b64\u6700\u7ec8\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u522b\u540d\u3002\u5173\u952e\u7684\u8981\u70b9\u5e94\u8be5\u662f\u60a8\u521b\u5efa\u5e76\u4f7f\u7528\u522b\u540d\u6765\u5e2e\u52a9\u60a8\u5b8c\u6210\u5de5\u4f5c\u3002\n\u60a8\u7684\u6240\u6709\u522b\u540d\u90fd\u5728~/.zshc\u4e2d\u5b9a\u4e49\u3002ZSH\u5728\u542f\u52a8\u671f\u95f4\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u60a8\u59cb\u7ec8\u53ef\u4ee5\u4f7f\u7528source~/.zshc\u5f3a\u5236\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u3002\n\u672c\u6587\u5c06\u6559\u60a8\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u8fd9\u56db\u79cd\u7c7b\u578b\u7684\u522b\u540d\uff1a\n\u7b80\u5355\u522b\u540d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\u6211\u4f7f\u7528\u5b83\u4eec\u6765\u51cf\u5c11\u7528\u6765\u542f\u52a8\u547d\u4ee4\u7684\u51fb\u952e\u6b21\u6570\u3002\u7b80\u5355\u522b\u540d\u7684\u5b9a\u4e49\u4f7f\u7528\u522b\u540dmy-alias=&#34\uff1bcommand&#34\uff1b\u6a21\u5f0f\u3002\n#\u5bfc\u822a\u522b\u540d\u522b\u540ddev=&#34\uff1bcd~/dev/&#34\uff1b\u522b\u540dPersonal=&#34\uff1bcd~/dev/thorstenhans&#34\uff1b\u522b\u540dbusiness=&#34\uff1bcd~/dev/thinktecture&#34\uff1b#kubectl\u522b\u540d\u522b\u540dk=&#34\uff1bkubectl&#34\uff1b\u522b\u540dkgx=&#34\uff1bkubectl config Get-Context&#34\uff1b#docker\u3002\n\u5728\u6211\u7684~/.zshc\u4e2d\u6ce8\u518c\u4e86\u8fd9\u4e9b\u522b\u540d\u540e\uff0c\u6211\u53ef\u4ee5\u5feb\u901f\u5bfc\u822a\u5230\u5e38\u7528\u76ee\u5f55\uff0c\u53ea\u9700\u51e0\u6b21\u51fb\u952e\u5c31\u53ef\u4ee5\u542f\u52a8\u6211\u7ecf\u5e38\u4f7f\u7528\u7684\u547d\u4ee4\u3002\n\u540e\u7f00\u522b\u540d\u662f\u4f7f\u7528-s\u6807\u5fd7\u5b9a\u4e49\u7684\u3002\u4f7f\u7528\u540e\u7f00\u522b\u540d\uff0c\u60a8\u53ef\u4ee5\u5728\u60a8\u559c\u6b22\u7684\u5de5\u5177\u4e2d\u542f\u52a8\u5177\u6709\u7279\u5b9a\u6269\u5c55\u540d(\u6216\u540e\u7f00)\u7684\u6587\u4ef6\u3002\u8981\u6ce8\u518c\u540e\u7f00\u522b\u540d\uff0c\u6211\u4eec\u4f7f\u7528alias-s tension=name-of-the-tool\u6a21\u5f0f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5047\u5b9a\u5df2\u5b89\u88c5VisualStudio\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u7ec8\u7aef\u4f7f\u7528code\u547d\u4ee4\u542f\u52a8\u3002\necho&#34\uff1b#Hello World&#34\uff1b&gt\uff1bsample.md#\u73b0\u5728\u952e\u5165\u6587\u4ef6\u540d\uff0c\u7136\u540e\u901a\u8fc7ENTERsample.md\u63d0\u4ea4\u3002\n\u540e\u7f00\u522b\u540d\u5c06sample.md\u8f6c\u6362\u4e3a\u4ee3\u7801sample.md\uff0c\u60a8\u5e94\u8be5\u770b\u5230VisualStudio Code\u6b63\u5728\u542f\u52a8\u5e76\u663e\u793asample.md\u7684\u5185\u5bb9\u3002\n\u6709\u65f6\u60a8\u5e0c\u671b\u521b\u5efa\u9700\u8981\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4fe1\u606f\u7684\u522b\u540d\u3002\u53c2\u6570\u7528\u4e8e\u63cf\u8ff0shell\u547d\u4ee4\u7684\u8be5\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u4f7f\u7528\u53c2\u6570\u6ce8\u518c\u522b\u540d\u770b\u8d77\u6765\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5e38\u89c4\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u3002\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u6a21\u5f0f\u5b9a\u4e49\u5e26\u53c2\u6570\u7684\u522b\u540d\uff1a\n\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u8981\u4f18\u5316\u5728Azure\u8ba2\u9605\u4e2d\u5217\u51faAzure Kubernetes Service(AKS)\u5b9e\u4f8b\u7684\u6d41\u7a0b\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cAzure CLI\u63d0\u4f9b\u4e86azaks list\u547d\u4ee4\u3002\u8be5\u547d\u4ee4\u5141\u8bb8\u901a\u8fc7\u6dfb\u52a0\u51e0\u4e2a\u53c2\u6570\u8fdb\u884c\u8fdb\u4e00\u6b65\u914d\u7f6e\u3002\n\u4ee5\u4e0b\u522b\u540d\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570-\u7b2c\u4e00\uff0c\u8d44\u6e90\u7ec4\u540d\u79f0(\u8d44\u6e90\u7ec4\u662fAzure\u4e2d\u7684\u903b\u8f91\u5bb9\u5668)\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u6240\u9700\u7684\u8f93\u51fa\u683c\u5f0f\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u53c2\u6570\u7684getaks\u522b\u540d\u5728resource-group-1\u4e2d\u67e5\u627eAKS\u5b9e\u4f8b\uff0c\u5e76\u4f7f\u7528getaks resource-group-1 jsonc\u4ee5\u5f69\u8272JSON(Jsonc)\u683c\u5f0f\u6253\u5370\u7ed3\u679c\u3002\n\u5168\u5c40\u522b\u540d\u662f\u4f7f\u7528-g\u6807\u5fd7\u5b9a\u4e49\u7684\u3002\u5168\u7403\u522b\u540d\u662f\u5484\u5484\u903c\u4eba\u7684\u3002\u6ce8\u518c\u540e\uff0c\u5b83\u5c06\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u66ff\u6362\u6240\u6709\u51fa\u73b0\u7684\u522b\u540d\u3002\u8be5\u5b9a\u4e49\u9075\u5faa\u6a21\u5f0falias-g aliasName=&#34\uff1bcommand&#34\uff1b\u3002\n#\u6211\u5fc5\u987b\u7ecf\u5e38\u8bf7\u6c42Azure\u8d44\u6e90ID\u522b\u540d-g qid=&#34\uff1b--query id-o tsv&#34\uff1b\n\u5c06qid\u6ce8\u518c\u4e3a\u5168\u5c40\u522b\u540d\u540e\uff0c\u6211\u53ef\u4ee5\u5728\u4f7f\u7528Azure CLI\u8bf7\u6c42\u552f\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\u65f6\u4f18\u5316\u6027\u80fd\u3002\u8bf7\u53c2\u9605\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\uff0c\u5c06\u5e38\u89c4\u547d\u4ee4\u4e0e\u4f7f\u7528\u6211\u7684\u5168\u5c40\u522b\u540d\u7684\u4f18\u5316\u547d\u4ee4\u8fdb\u884c\u6bd4\u8f83\uff1a\n#\u67e5\u8be2AKS\u5b9e\u4f8b\u7684\u6807\u8bc6\u7b26\u7684\u6b63\u786e\u547d\u4ee4ak show-n myaks2020-g rg-demo--query id-o TSV#\u67e5\u8be2\u5177\u6709\u5168\u5c40\u522b\u540d\u7684AKS\u5b9e\u4f8b\u7684\u6807\u8bc6\u7b26\u7684\u547d\u4ee4akks show-n myaks2020-g rg-demo qid\u3002\n\u64cd\u4f5c\u7cfb\u7edf\u7279\u5b9a\u7684\u522b\u540d\u4e0d\u662f\u771f\u5b9e\u7c7b\u578b\u3002\u4f46\u662f\uff0c\u6211\u8ba4\u4e3a\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u522b\u540d\u5f88\u91cd\u8981-\u5c24\u5176\u662f\u5728\u4f7f\u7528\u591a\u4e2a\u5e73\u53f0\u65f6\u3002\u6211\u6bcf\u5929\u90fd\u4f7f\u7528MacOS\u4f5c\u4e3a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6240\u4ee5\u6211\u7684\u94bb\u673a\u4e0a\u4e5f\u6709\u4e00\u4e9b\u522b\u540d\u3002\n\u4e0d\u8fc7\uff0c\u6211\u559c\u6b22\u4f7f\u7528Linux\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684VisualStudio Codespaces\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u90fd\u60f3\u4f7f\u7528\u6211\u7684\u70b9\u6587\u4ef6\u3002\u4e3a\u6b64\uff0c\u6211\u4f7f\u7528\u7b80\u5355\u7684if\u8bed\u53e5\u3002\n#MacOS\u522b\u540d\u5982\u679c[[$OSTYPE==\u8fbe\u5c14\u6587*]]\uff1b\u5219\u522b\u540d\u5237\u65b0=#39\uff1bdscacheutil-flushcache&#39\uff1b#\u5e94\u7528\u7a0b\u5e8f\u522b\u540d\u6d4f\u89c8=#34\uff1b\u6253\u5f00-a/\u5e94\u7528\u7a0b\u5e8f/\u8c37\u6b4c\\Chrome.app&#34\uff1b#*\u6d4f\u89c8Azure\u95e8\u6237\u522b\u540dazure=&#34\uff1b\u6d4f\u89c8https://preview.portal.azure.com&#34\uff1b\u6587\u4ef6\u3002\n\u6211\u7684~/.zshc\u4e2d\u6709\u4e24\u4e2a\u522b\u540d\uff0c\u8fd9\u4e24\u4e2a\u522b\u540d\u975e\u5e38\u9ad8\u6548\u3002\u6211\u4f7f\u7528EC\u5728\u6211\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668\u4e2d\u6253\u5f00~/.zshc\uff0c\u5e76\u4f7f\u7528sc\u5c06\u5176\u6e90\u4ee3\u7801(\u5c06~/.zshc\u7684\u5f53\u524d\u72b6\u6001\u5e94\u7528\u4e8e\u60a8\u7684ZSH\u4f1a\u8bdd)\u3002\u4e24\u8005\u7684\u522b\u540d\u5b9a\u4e49\u5982\u4e0b\u6240\u793a\uff1a\n#\u4f7f\u7528$EDITOR\u522b\u540dEC=&#34\uff1b$EDITOR$HOME/.zshc&#34\uff1b#source~/.zshc\u522b\u540dsc=&#34\uff1b\u4e2d\u6307\u5b9a\u7684\u9ed8\u8ba4\u7f16\u8f91\u5668\u6253\u5f00~/.zshc\n\u60a8\u5df2\u7ecf\u770b\u5230\u4e86\u56db\u79cd\u4e0d\u540c\u7c7b\u578b\u7684ZSH\u522b\u540d\uff0c\u5b83\u4eec\u5c06\u63d0\u9ad8\u60a8\u7684\u5de5\u4f5c\u6548\u7387\u3002\u4f7f\u7528\u4e86\u56db\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u522b\u540d\u6765\u5b9e\u73b0shell\u4e2d\u7684\u51e0\u4e4e\u6240\u6709\u529f\u80fd\u3002\n\u4e0d\u7528\u7740\u6025\u3002\u505a\u4e9b\u8c03\u67e5\u3002\u786e\u5b9a\u60a8\u6bcf\u5929\u6216\u7ecf\u5e38\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u67e5\u627e\u6a21\u5f0f\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u522b\u540d\uff0c\u901a\u8fc7\u51cf\u5c11\u51fb\u952e\u6765\u63d0\u9ad8\u60a8\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u5728\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u90fd\u6709\u5f3a\u5927\u7684shell(\u6700\u540e\u5305\u62ec\u4f7f\u7528WSL2.0\u7684Windows)\uff0c\u60a8\u5e94\u8be5\u5173\u5fc3\u60a8\u7684shell\u6027\u80fd\u3002\u8ba9ZSH\u6210\u4e3a\u4f60\u81ea\u5df1\u7684\u3002\n\u6211\u505a\u4e86\u5f88\u591a\u4f1a\u8bae\u6f14\u8bb2\uff1b\u5982\u679c\u4f60\u4e5f\u5728\u4f1a\u8bae\u6216\u805a\u4f1a\u4e0a\u53d1\u8868\u6f14\u8bb2\uff0c\u4f60\u5e94\u8be5\u4ece\u5feb\u901f\u89e3\u91ca\u4f60\u5728\u6574\u4e2a\u6f14\u8bb2\u8fc7\u7a0b\u4e2d\u5c06\u4f7f\u7528\u7684\u522b\u540d\u6765\u5f00\u59cb\u4f60\u7684\u6f14\u8bb2\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u7684\u542c\u4f17\u52a0\u5165\u5230\u4f60\u7684\u6f14\u8bb2\u4e2d\u3002\u4e5f\u8bb8\u4ed6\u4eec\u7528kc\u800c\u4e0d\u662fk\u6765\u8868\u793akubectl\u3002\ud83d\ude02", "note_en": "My shell means everything to me. It is the first program I start in the morning and the last one I close in the evening. It is the program that I regularly tweak to boost my overall productivity. From my perspective, Microsoft\u2019s release of Windows Terminal 1.0 and WSL 2.0 will boost overall Shell adoption. Over the past decade, I have seen numerous users installing and using different shells. However, the number of people that invest time in configuring their shell to be more productive is just a small percentage. And that is a shame!\n You can also stick with tools like Finder or Windows Explorer if you install and use a shell without customizing it. Shells like ZSH shine once they have individual configurations: configurations that make you - the user - super productive. I wrote this article for inspiration. It should demonstrate how you can increase your overall productivity with simple things like adopting the 5 types of aliases in ZSH. Aliases are the first step towards a tailored shell experience. Aliases are a super individual thing.\n I use Docker, Kubernetes, and Microsoft Azure every day. That said, it makes sense for me to have aliases supporting me with these tools and environments. However, maybe you are using different clouds and command-line tools so that you will end up with different aliases. The key takeaway should be that you create and use aliases to help you get your job done.\n All your aliases are defined in  ~/.zshrc. ZSH loads the configuration file during startup. However, you can always force to reload your configuration file use  source ~/.zshrc.\n This article will teach you how to create and use these four types of aliases:\n   Simple Aliases are a good starting point. I use them to reduce the number of keystrokes to fire up a command. The definition of a simple alias uses the  alias my-alias=&#34;command&#34; pattern.\n # navigation aliases alias  dev = &#34;cd ~/dev/&#34; alias  personal = &#34;cd ~/dev/thorstenhans&#34; alias  business = &#34;cd ~/dev/thinktecture&#34; # kubectl aliases alias  k = &#34;kubectl&#34; alias  kgx = &#34;kubectl config get-contexts&#34; # docker aliases alias  d = &#34;docker&#34; alias  dps = &#34;docker ps&#34;\n Having those aliases registered in my  ~/.zshrc, I can navigate quickly to commonly used directories and to fire-up commands that I use frequently using just a few keystrokes.\n  Suffix Aliases are defined using the  -s flag. With suffix aliases, you can launch files with a specific extension (or suffix) in your favorite tool. To register a suffix alias, we use the  alias -s extension=name-of-the-tool pattern. The following samples assume that VisualStudio Code is installed and can be launched using the  code command from the terminal.\n   echo  &#34;#Hello World&#34;  &gt; sample.md # now type the name of the file and commit via ENTERsample.md\n The suffix alias translates  sample.md into  code sample.md, and you should see VisualStudio Code launching and showing the content of  sample.md.\n  Sometimes you want to create aliases the require some contextual information. Parameters are used to describe this contextual information for shell commands. The registration of aliases with parameters looks pretty similar to a function definition in regular programming languages. We use the following pattern to define aliases with parameters:\n  For example, consider you want to optimize the process of listing Azure Kubernetes Service (AKS) instances in your Azure Subscription. To achieve this, Azure CLI provides the  az aks list command. The command allows further configuration by adding several parameters.\n The following alias accepts two parameters\u2014first, the Resource Group Name (Resource Groups are logical containers in Azure). The second parameter specifies the desired output format.\n  We can now use the  getaks alias with parameters to look for AKS instances in  resource-group-1 and print results in colored JSON ( jsonc) using  getaks resource-group-1 jsonc.\n  Global aliases are defined using the  -g flag. A global alias is aggressive. Once registered, it replaces all occurrences of the alias name with the specified command. The definition follows the pattern  alias -g aliasName=&#34;command&#34;.\n # I have to ask for Azure Resource Ids frequently alias  -g  qId = &#34;--query id -o tsv&#34;\n Having  qId registered as a global alias, I can optimize my performance when asking for unique resource identifiers using Azure CLI. See the following snippet comparing the regular command, to the optimized one using my global alias:\n # proper command to query the identifier of an AKS instanceaz aks show  -n myaks2020  -g rg-demo  --query  id  -o tsv # command to query the identifier of an AKS instance with global aliasaz aks show  -n myaks2020  -g rg-demo qId\n  An operating system specific alias is not a real type. However, I think platform-specific aliases are important\u2014especially when using multiple platforms. I use macOS as a daily driver, so I also have some aliases tied to my rig.\n However, I love VisualStudio Codespaces that are using Linux as an operating system. In both situations, I want to use my dotfiles. To achieve this, I use simple  if-statements.\n # macOS aliasses if  [[  $OSTYPE  == darwin *  ]] ;  then alias  flush = &#39;dscacheutil -flushcache&#39; # Apps alias  browse = &#34;open -a /Applications/Google \\  Chrome.app&#34; # * Browse Azure Portal alias  azure = &#34;browse https://preview.portal.azure.com&#34; fi\n    I have two aliases in my  ~/.zshrc, which are super-efficient. I open my  ~/.zshrc in my favorite editor with  ec and source it (apply the current state of  ~/.zshrc to your ZSH session) with  sc. The alias definition for both looks like this:\n # open ~/.zshrc in using the default editor specified in $EDITOR alias  ec = &#34; $EDITOR   $HOME /.zshrc&#34; # source ~/.zshrc alias  sc = &#34;source  $HOME /.zshrc&#34;\n  You have seen four different types of ZSH aliases that will boost your productivity. Foud different types of aliases used to achieve almost everything in your shell.\n Take your time. Do some research. Identify the command-line tools you are using daily or regularly, find patterns, and create corresponding aliases that increase your productivity by reducing keystrokes.\n Having powerful shells on all operating systems (finally including windows using WSL 2.0), you should care about your shell performance. Make ZSH your own.\n I do a lot of conference speaking; if you are presenting at conferences or meetups too, you should start your presentation by quickly explaining the aliases you will use throughout the talk to onboard your audience. Maybe they are using  kc instead of  k for  kubectl. \ud83d\ude02", "posttime": "2020-05-26 10:36:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e94\u8be5,zsh", "title": "\u4f60\u5e94\u8be5\u77e5\u9053\u76845\u79cdZSH\u522b\u540d", "title_en": "5 Types of ZSH aliases you should know", "transed": 1, "url": "https://thns.io/2X3GTtE", "via": "", "real_tags": ["\u5e94\u8be5", "zsh"]}, {"category": "", "categoryclass": "", "imagename": "0663e09d40f2d4e29c134f544f2b778f.jpg", "infoid": 1003745, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Brume-00\uff1a11 2020\u5e745\u670824\u65e5#\u6211\u559c\u6b22\u8fd9\u4e2a\u6f14\u793a\u3002\u53ea\u67094KB\uff1f\u54c7\uff0c\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff01\u5e72\u5f97\u597d\uff01", "note_en": "Brume - 00:11 24 May 2020  #  Love this demo. Only 4kb? Wow, impressive! Great job!", "posttime": "2020-05-26 10:20:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d88\u5931,demo,\u559c\u6b22", "title": "\u963f\u4ec0\u62c9\u7684\u6d88\u5931\uff1a\u4f7f\u7528GPU\u8fdb\u884c\u58f0\u97f3\u548c\u8def\u5f84\u8ddf\u8e2a\u76844KB\u6f14\u793a", "title_en": "The Vanishing Of Ashlar: 4kb demo using GPU for sound and pathtracing", "transed": 1, "url": "https://demozoo.org/productions/278629/", "via": "", "real_tags": ["\u6d88\u5931", "demo", "\u559c\u6b22"]}, {"category": "", "categoryclass": "", "imagename": "a12c356d5b84ff0b094142e86074d346.png", "infoid": 1003744, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u5e16\u5b50\u4e4b\u524d\uff0c\u6211\u4eec\u67e5\u770b\u4e86AVX-512\u9762\u5177\u6ce8\u518c\u5668\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u516b\u4e2a\u5efa\u7b51\u4e00\u4e0b\u7684\u7269\u7406\u8bed\u57df\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u884c\u4e3a\uff0c\u5982\u5f52\u96f6\u4e60\u8bed\u3002\u6700\u8fd1\uff0c\u4e00\u5f20SKX\u7684\u9ad8\u5206\u8fa8\u7387\u51b2\u6a21\u51fa\u73b0\u4e86\uff0c\u6211\u60f3\u901a\u8fc7\u8089\u773c\u68c0\u67e5\u6765\u6838\u5b9e\u6211\u4eec\u7684\u767b\u8bb0\u6570\u91cf\u4f1a\u5f88\u9177\u3002\u5f53\u6211\u8bd5\u56fe\u505a\u5230\u8fd9\u4e00\u70b9\u65f6\uff0c\u6211\u53d1\u73b0\u4e86\u53e6\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u2026\u3002\n\u6211\u4eec\u5bf9\u8fd9\u5f20Fritzchens Fritz\u6700\u8fd1\u5728Flickr\u4e0a\u53d1\u5e03\u7684\u6b7b\u4ea1\u7167\u7247\u5f88\u611f\u5174\u8da3\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u7a81\u51fa\u663e\u793a\u7684\u533a\u57df\uff0c\u8be5\u533a\u57df\u4f3c\u4e4e\u5305\u542b\u82af\u7247\u4e0a\u7684\u6240\u6709\u5bc4\u5b58\u5668\u5806\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e86\u89e3\u5185\u6838\u7684\u5b8c\u6574\u7ec6\u8282\uff0c\u4f60\u53ef\u4ee5\u5728Twitter\u3001RWT\u548c\u82f1\u7279\u5c14\u7684\u8bba\u575b(\u7ebf\u7a0b)\u4e0a\u67e5\u770b\u8fd9\u91cc\u7684\u731c\u6d4b\u3002\n\u4e0b\u9762\u662f\u8be5\u90e8\u5206\u7684\u7279\u5199\uff0c\u5404\u79cd\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5047\u5b9a\u7528\u9014\u6807\u8bb0\u4e3a1\u3002\n\u901a\u7528\u5bc4\u5b58\u5668\u5806\u5177\u6709\u6b63\u786e\u7684\u76f8\u5bf9\u5bbd\u5ea6(64\u4f4d)\uff0c\u5e76\u4e14\u4f4d\u4e8e\u6574\u6570\u6267\u884c\u5355\u5143\u4e0b\u65b9\u7684\u6b63\u786e\u4f4d\u7f6e\u3002\n\u901a\u8fc7\u6bd4\u8f83SKL 2(\u65e0AVX-512)\u548cSKX(\u5177\u6709AVX-512)\u7ba1\u82af\uff0c\u5e76\u6ce8\u610fSKL\u4e2d\u4e0d\u5b58\u5728\u5e95\u90e8\u6587\u4ef6(SKL\u4e2d\u7684\u8be5\u70b9\u5b58\u5728\u8f83\u5927\u7684\u7a7a\u767d\u533a\u57df)\uff0c\u53ef\u4ee5\u786e\u5b9a512\u4f4dZMM\u5bc4\u5b58\u5668(\u7279\u5199\u4e2d\u6807\u8bb0\u4e3aZMM)\u7684\u4e0a\u90e8256\u4f4d\u3002\n\u8fd9\u4f1a\u5c06\u672a\u77e5\u5757\u4fdd\u7559\u4e3a\u7ea2\u8272\u3002\u8be5\u5757\u4f4d\u4e8e\u77e2\u91cf\u6267\u884c\u5355\u5143\u4e0b\u65b9\u7684\u4e3b\u8981\u4f4d\u7f6e\u3002\u4f1a\u4e0d\u4f1a\u662f\u63a9\u7801\u5bc4\u5b58\u5668(Kregs)\uff1f\u5728\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u63a9\u7801\u65e2\u4e0d\u4e0e\u6807\u91cf\u5bc4\u5b58\u5668\u5171\u4eab\uff0c\u4e5f\u4e0d\u4e0eSIMD\u5bc4\u5b58\u5668\u5171\u4eab\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u6709\u81ea\u5df1\u7684\u7269\u7406\u5bc4\u5b58\u5668\u5806\u3002\u4e5f\u8bb8\u5c31\u662f\u8fd9\u4e2a\u4e86\uff1f\n\u8ba9\u6211\u4eec\u5c06\u795e\u79d8\u5bc4\u5b58\u5668\u5806\u4e0e\u6574\u6570\u5bc4\u5b58\u5668\u5806\u8fdb\u884c\u6bd4\u8f83\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u5927\u5c0f\u4e0a\u5e94\u8be5\u662f\u76f8\u4f3c\u7684\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u662f\u76f8\u4f3c\u7684\uff1a\n\u67e5\u770b\u5de6\u4fa7\u7684\u901a\u7528\u5bc4\u5b58\u5668\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5757(\u5176\u4e2d6\u4e2a\u5728\u901a\u7528\u6587\u4ef6\u4e0a\u7f16\u53f7)\u4f3c\u4e4e\u5b9e\u73b0\u4e8616\u4f4d\uff0c\u5c31\u597d\u50cf\u653e\u5927\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a\u753116\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u91cd\u590d\u7ed3\u6784\uff0c\u800c4\u4e2a\u5757\u603b\u5171\u4e3a64\u4f4d\uff0c\u8fd9\u662f\u6587\u4ef6\u7684\u9884\u671f\u5bbd\u5ea6\u3002\u4ece\u516c\u5e03\u7684\u6570\u5b57\u4e2d\u6211\u4eec\u77e5\u9053\u6574\u6570\u5bc4\u5b58\u5668\u5806\u5177\u6709180\u4e2a\u6761\u76ee\uff0c\u5e76\u4e14\u7531\u4e8e\u67094\u4e2a\u5757\u76846\u884c\uff0c\u6211\u4eec\u671f\u671b\u6bcf\u884c\u5b9e\u73b0180/6=30\u4e2a\u5bc4\u5b58\u5668\u3002\n\u73b0\u5728\u6211\u4eec\u628a\u6ce8\u610f\u529b\u8f6c\u5411\u8fd9\u4e2a\u795e\u79d8\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b83\u53ef\u80fd\u662fKreg\u6587\u4ef6\u3002\u4e00\u5171\u670930\u4e2a\u8857\u533a\u3002\u67e5\u770b\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u786e\u5b9a\u6bcf\u4e2a\u5757\u53ef\u4ee5\u4fdd\u5b58\u6765\u81ea30\u4e2a\u5bc4\u5b58\u5668\u768416\u4f4d\u3002\u56e0\u6b64\uff0c30\u4e2a\u5757\u5c31\u662f\uff1a30\u4e2a\u5757*30\u4e2a\u5bc4\u5b58\u5668/\u5757*16\u4f4d/64\u4f4d=225\u4e2a\u5bc4\u5b58\u5668\u3002\u55ef\uff0c\u4e0a\u6b21\u6211\u4eec\u8ba1\u7b97\u4e86\u4e00\u4e0b\uff0c\u5927\u7ea6\u6709142\u4e2a\u7269\u7406\u63a9\u7801\u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u5b57\u4f3c\u4e4e\u592a\u9ad8\u4e86\u3002\n\u8fd8\u6709\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u53ea\u6709\u4e09\u521716\u4f4d\u5757\uff0c\u603b\u517148\u4f4d\uff0c\u6c34\u5e73\u65b9\u5411\u3002\u4f46\u662f\uff0c\u6211\u4eec\u77e5\u9053\u63a9\u7801\u5bc4\u5b58\u5668\u5fc5\u987b\u6700\u591a64\u4f4d(\u5f53\u5bf9\u5b8c\u6574\u7684512\u4f4d\u77e2\u91cf\u5bc4\u5b58\u5668\u4f7f\u7528\u9010\u5b57\u8282\u65f6)\u3002\u6b64\u5916\uff0c\u867d\u7136\u6211\u4eec\u4e0a\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u662f\u5757\u7684\u6570\u91cf(30)\u4e0d\u80fd\u88ab4\u6574\u9664\uff0c\u6240\u4ee5\u5373\u4f7f\u60a8\u5047\u8bbe\u5757\u7684\u6392\u5217\u65e0\u5173\u7d27\u8981\uff0c\u4e5f\u4e0d\u53ef\u80fd\u4ece\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6620\u5c04\u52304\u4e2a\u4e0d\u540c\u7684\u5757\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff0c\u6bd4\u59822\u4e2a\u5757\u63d0\u4f9b15\u4e2a\u5bc4\u5b58\u5668(\u800c\u4e0d\u662f30\u4e2a)\uff0c\u4f46\u662f64\u4f4d\u5bbd(\u800c\u4e0d\u662f32\u4e2a)\u3002\u8fd9\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u5de6\u8fb9\u7684\u4e24\u4e2a\u6210\u5bf9\u7684\u5217\u3002\u5982\u679c\u6211\u4eec\u4ee5SIMD\u5bc4\u5b58\u5668\u4e3a\u4f8b\uff0c\u5219\u5bc4\u5b58\u5668\u7684\u5168\u5bbd\u5ea6\u4e0d\u5fc5\u6c34\u5e73\u5730\u51fa\u73b0\u5728\u5355\u884c\u4e2d\uff1aSIMD\u5bc4\u5b58\u5668\u5728\u4e00\u884c\u4e2d\u5177\u6709256\u4f4d(\u5206\u6210\u4e24\u6761128\u884c)\uff0c\u4f46\u662f512\u4f4dZMM\u5bc4\u5b58\u5668\u4e2d\u7684\u5176\u5b83256\u4f4d\u5782\u76f4\u5730\u51fa\u73b0\u5728\u56fe\u4e2d\u7531ZMM\u6784\u6210\u7684\u5bc4\u5b58\u5668\u5806\u4e2d\u3002\n\u7531\u4e8e\u63a9\u7801\u5bc4\u5b58\u5668\u4e0eZMM\u5bc4\u5b58\u5668\u7684\u5143\u7d20\u76f8\u5173\u8054\uff0c\u4e5f\u8bb8\u5b83\u4eec\u662f\u4ee5AME\u7684\u65b9\u5f0f\u5206\u5f00\u7684\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c64\u4f4d\u63a9\u7801\u5bc4\u5b58\u5668\u4f7f\u7528\u6765\u81ea\u4e0a\u534a\u90e8\u5206\u7684\u4e00\u4e2a2x16(32\u4f4d)\u5757\u548c\u6765\u81ea\u4e0b\u534a\u90e8\u5206\u7684\u4e00\u4e2a\u5757\u6765\u7ec4\u621064\u4f4d\uff1f\u8fd9\u662f\u603b\u517120\u4e2a\u5757\uff0c\u6309\u7167\u4e0a\u9762\u7684\u76f8\u540c\u8ba1\u7b97\u7ed9\u51fa\u4e86150\u4e2a\u5bc4\u5b58\u5668\u3002\u8fd9\u4e0e\u6211\u4eec\u4ece\u5b9e\u9a8c\u4e2d\u53d1\u73b0\u7684142\u4e2a\u66f4\u63a5\u8fd1\u3002\n\u9759\u6b62\u2026\u3002\u90a3\u79cd\u70e6\u4eba\u7684\u611f\u89c9\u3002142\u4e0d\u7b49\u4e8e150\uff0c\u90a3\u4e48\u7b2c\u4e09\u5217\u5757\u5462\uff1f\u6211\u5f00\u59cb\u6000\u7591\u8fd9\u5230\u5e95\u662f\u4e0d\u662f\u63a9\u7801\u5bc4\u5b58\u5668\u5806\u3002\u90a3\u4f1a\u662f\u4ec0\u4e48\u5462\uff1f\u6211\u610f\u8bc6\u5230\u6709\u4e00\u4e2a\u5bc4\u5b58\u5668\u6587\u4ef6\u6ca1\u6709\u8bf4\u660e\uff1a\u7528\u4e8e\u4f20\u7edfx87\u6d6e\u70b9\u548cMMX\u7684\u6587\u4ef6\u3002x87\u6d6e\u70b9\u548cMMX\u662f\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u56e0\u4e3aMMX\u5bc4\u5b58\u5668\u5728\u67b6\u6784\u4e0a\u522b\u540d\u4e3ax87\u5bc4\u5b58\u56683\u3002\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5728\u54ea\u91cc\u5462\uff1f\u6211\u770b\u4e86\u770b\u5468\u56f4\u7684\u6b7b\u80e1\u540c\u3002\u6ca1\u6709\u597d\u7684\u5019\u9009\u4eba\u3002\n\u90a3\u4e48\u4e5f\u8bb8\u6211\u4eec\u4e00\u76f4\u5728\u770b\u7684\u4e1c\u897f\u5b9e\u9645\u4e0a\u662fX87/MMX\u5bc4\u5b58\u5668\u5806\uff1f\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u5b83\u66f4\u9002\u5408\uff1ax87FP\u5bc4\u5b58\u5668\u5806\u9700\u8981\u5927\u7ea680\u4f4d\u5bbd\uff0c\u56e0\u6b64\u53ef\u4ee5\u89e3\u91ca\u989d\u5916\u7684\u5217\uff1a\u5982\u679c\u6211\u4eec\u50cf\u4ee5\u524d\u4e00\u6837\u5047\u8bbe\u6bcf\u884c\u90fd\u662f\u5bc4\u5b58\u5668\u7684\u4e00\u534a\uff0c\u90a3\u4e48\u5c31\u662f96\u4f4d\u3002\u8fd9\u8db3\u4ee5\u4fdd\u5b5880\u4f4d\u6269\u5c55\u7cbe\u5ea6\u503c\uff0c\u5269\u4e0b\u768416\u4f4d\u53ef\u80fd\u7528\u4e8e\u5b58\u50a8ftstw\u548c\u76f8\u5173\u6307\u4ee4\u8bbf\u95ee\u7684FPU\u72b6\u6001\u5b57\u3002\u6b64\u72b6\u6001\u5b57\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u66f4\u65b0\uff0c\u56e0\u6b64\u4e5f\u5fc5\u987b\u91cd\u547d\u540d\u4ee5\u83b7\u5f97\u5408\u7406\u7684\u6027\u80fd5\u3002\n\u8fd9\u53ef\u80fd\u662fX87/MMX\u5bc4\u5b58\u5668\u5806\u7684\u5176\u4ed6\u8bc1\u636e\u4e5f\u6765\u81eaFRITZ\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u5bc4\u5b58\u5668\u5806\u7684\u9ad8256\u4f4d\u88ab\u5c4f\u853d(\u6b64\u82af\u7247\u4ec5\u652f\u6301AVX2\uff0c\u4e0d\u652f\u6301AVX-512\uff0c\u56e0\u6b64\u6ca1\u6709ZMM\u5bc4\u5b58\u5668)\uff0c\u4f46\u6211\u4eec\u8003\u8651\u7684\u5bc4\u5b58\u5668\u5806\u662f\u6574\u4f53\u5b58\u5728\u7684\u3002\n\u7406\u8bba\u4e0a\u5f88\u9177\uff0c\u5144\u5f1f\uff0c\u4f46\u6211\u4eec\u4e0d\u662f\u53c8\u56de\u5230\u4e86\u539f\u70b9\u5417\uff1f\u5982\u679c\u8fd9\u662f\u7528\u4e8ex87/MMX\u5bc4\u5b58\u5668\u7684\u6587\u4ef6\uff0c\u5219\u5c4f\u853d\u5bc4\u5b58\u5668\u4f4d\u4e8e\u4f55\u5904\uff1f\n\u6709\u4e00\u79cd\u53ef\u80fd\u6027\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\uff0c\u5c3d\u7ba1\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u73b0\u5728\u53ef\u80fd\u5df2\u7ecf\u5728\u663e\u793a\u5668\u4e0a\u8ba8\u8bba\u8fc7\u4e86\uff1a\u4e5f\u8bb8X87/MMX\u548cKREG\u5bc4\u5b58\u5668\u6587\u4ef6\u662f\u5171\u4eab\u7684\u3002\u5373\uff0c\u5c06\u7269\u7406\u522b\u540d6\u7269\u7406\u5730\u6df7\u53e0\u5230\u7ade\u4e89\u5171\u4eab\u7684\u76f8\u540c\u5bc4\u5b58\u5668\u5806\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u4ea8\u5229\u00b7\u9ec4(Henry Wong)\u6700\u521d\u63cf\u8ff0\u7684\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u5e16\u5b50\u4e2d\u4e5f\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u8be5\u6280\u672f\u7684\u5feb\u901f\u63cf\u8ff0\uff0c\u76f4\u63a5\u4ece\u8be5\u5e16\u5b50\u590d\u5236\u548c\u7c98\u8d34\u3002\n\u6211\u4eec\u901a\u8fc7\u53ef\u53d8\u6570\u91cf\u7684\u586b\u5145\u6307\u4ee4\u6765\u5206\u9694\u4e24\u4e2a\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\u52a0\u8f7d\u6307\u4ee4\uff0c\u586b\u5145\u6307\u4ee4\u6570\u91cf\u6839\u636e\u6211\u4eec\u63a2\u6d4b\u7684CPU\u8d44\u6e90\u800c\u6709\u6240\u4e0d\u540c\u3002\u5f53\u586b\u5145\u6307\u4ee4\u7684\u6570\u91cf\u8db3\u591f\u5c11\u65f6\uff0c\u4e24\u4e2a\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\u5e76\u884c\u6267\u884c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u7b49\u5f85\u65f6\u95f4\u91cd\u53e0\uff0c\u56e0\u6b64&gt\uff1b\u603b\u6267\u884c\u65f6\u95f4\u5927\u81f4\u4e0e\u5355\u4e2a\u672a\u547d\u4e2d\u4e00\u6837\u957f\u3002\n\u7136\u800c\uff0c\u4e00\u65e6\u586b\u5145\u6307\u4ee4\u7684\u6570\u91cf\u8fbe\u5230\u4e34\u754c\u9608\u503c\uff0c\u6240\u6709\u76ee\u6807\u8d44\u6e90\u90fd\u4f1a\u88ab\u6d88\u8017\uff0c\u5e76\u4e14\u6307\u4ee4\u5206\u914d\u4f1a\u5728\u53d1\u51fa\u7b2c\u4e8c\u6b21\u672a\u547d\u4e2d\u4e4b\u524d\u505c\u6b62\uff0c\u56e0\u6b64\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\u4e0d\u80fd\u518d\u5e76\u884c\u8fd0\u884c\u3002\u8fd9\u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u8fbe\u5230\u7ea6\u4e3a&gt\uff1b\u57fa\u7ebf\u7f13\u5b58\u672a\u547d\u4e2d\u5ef6\u8fdf\u7684\u4e24\u500d\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u786e\u4fdd\u6bcf\u4e2a\u586b\u5145\u6307\u4ee4\u6070\u597d\u6d88\u8017\u4e00\u4e2a\u6211\u4eec\u611f\u5174\u8da3\u7684\u8d44\u6e90\uff0c\u4ee5\u4fbf\u5cf0\u503c\u7684\u4f4d\u7f6e\u6307\u793a\u5e95\u5c42\u8d44\u6e90\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u5e38\u89c4GP\u6307\u4ee4\u901a\u5e38\u6d88\u8017\u6765\u81eaGP PRF\u7684\u4e00\u4e2a\u7269\u7406\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64\u662f\u6d4b\u91cf\u8be5\u8d44\u6e90\u5927\u5c0f\u7684\u597d\u9009\u62e9\u3002\n\u6211\u4eec\u7528\u6765\u67e5\u770b\u4e24\u4e2a\u5bc4\u5b58\u5668\u5806\u662f\u5426\u5171\u4eab\u7684\u8bc0\u7a8d\u662f\uff0c\u9996\u5148\u5355\u72ec\u4f7f\u7528\u6bcf\u4e2a\u5bc4\u5b58\u5668\u5806\u5927\u5c0f\u7684\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4ec5\u9488\u5bf9\u8be5\u5bc4\u5b58\u5668\u5806\u7684\u586b\u5145\u7b26\u7684\u6d4b\u8bd5\uff0c\u7136\u540e\u8fd0\u884c\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\uff0c\u8be5\u6d4b\u8bd5\u7684\u586b\u5145\u7b26\u5728\u4f7f\u7528\u6bcf\u4e2a\u5bc4\u5b58\u5668\u5806\u7684\u6307\u4ee4\u4e4b\u95f4\u4ea4\u66ff\u3002\u5982\u679c\u5bc4\u5b58\u5668\u5806\u662f\u5171\u4eab\u7684\uff0c\u6211\u4eec\u9884\u8ba1\u6240\u6709\u6d4b\u8bd5\u90fd\u4f1a\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u4ece\u540c\u4e00\u6c60\u4e2d\u63d0\u53d6\u7684\u3002\u5982\u679c\u5bc4\u5b58\u5668\u5806\u672a\u5171\u4eab\uff0c\u5219\u7b2c\u4e09\u6b21(\u4ea4\u66ff)\u6d4b\u8bd5\u5e94\u5bfc\u81f4\u66f4\u9ad8\u7684\u8868\u89c2\u8d44\u6e90\u9650\u5236\uff0c\u56e0\u4e3a\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u6c60\u4e2d\u63d0\u53d6\uff0c\u56e0\u6b64\u5c06\u9700\u8981\u4e24\u500d\u7684\u586b\u5145\u6307\u4ee4\u624d\u80fd\u8fbe\u5230RF\u9650\u5236\u3002\n\u8bf4\u591f\u4e86\uff0c\u6211\u4eec\u5f00\u59cb\u5427\u3002\u9996\u5148\uff0c\u6211\u4eec\u770b\u6d4b\u8bd538\uff0c\u5b83\u4f7f\u7528MMX\u6307\u4ee47\u6765\u786e\u5b9ax87/MMX\u5bc4\u5b58\u5668\u5806\u7684\u5927\u5c0f\uff1a\n\u6211\u4eec\u5728128\u6761\u6307\u4ee4\u4e0a\u770b\u5230\u4e00\u4e2a\u660e\u663e\u7684\u5cf0\u503c\uff0c\u56e0\u6b64\u63a8\u6d4b\u76848X87/MMX\u5bc4\u5b58\u5668\u5806\u7684\u5927\u5c0f\u4f3c\u4e4e\u662f128\u4e2a\u6761\u76ee\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6709\u6d4b\u8bd543\uff0c\u5b83\u9075\u5faa\u4e0e\u6d4b\u8bd538\u76f8\u540c\u7684\u6a21\u5f0f\uff0c\u4f46\u4f7f\u7528kaddd\u4f5c\u4e3a\u586b\u5145\u6307\u4ee4\uff0c\u56e0\u6b64\u4ee5\u63a9\u7801(Kreg)\u5bc4\u5b58\u5668\u5806\u4e3a\u76ee\u6807\uff1a\n\u8fd9\u4e0e\u524d\u9762\u7684\u56fe\u8868\u51e0\u4e4e\u6ca1\u6709\u533a\u522b\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u63a8\u6d4b\u63a9\u7801\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5927\u5c0f\u4e5f\u662f128\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u5f53\u66ff\u6362MMX\u548c\u53e6\u4e00\u79cd\u6307\u4ee4\u7c7b\u578b\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6d4b\u8bd539\u7528\u6574\u6570SIMD\u6307\u4ee4\u66ff\u6362MMX\uff0c\u6d4b\u8bd540\u66ff\u6362\u7528\u901a\u7528\u6807\u91cf\u6307\u4ee4\uff1a\n\u8fd9\u4e24\u8005\u90fd\u663e\u793a\u51fa\u76f8\u540c\u7684\u6548\u679c\uff1a\u6709\u6548\u7684\u8d44\u6e90\u9650\u5236\u8981\u9ad8\u5f97\u591a\uff1a\u5927\u7ea6210\u6761\u586b\u5145\u6307\u4ee4\u3002\u8fd9\u5f3a\u70c8\u8868\u660ex87/MMX\u5bc4\u5b58\u5668\u4e0d\u4e0eSIMD\u6216\u6807\u91cf\u5bc4\u5b58\u5668\u5806\u5171\u4eab\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u6765\u5230\u8fd9\u4e2a\u6545\u4e8b\u7684\u7ed3\u5c3e\uff0c\u6d4b\u8bd541\u3002\u8be5\u6d4b\u8bd5\u6df7\u5408\u4e86MMX\u548c\u63a9\u7801\u5bc4\u5b58\u5668\u6307\u4ee49\uff1a\n\u8fd9\u4e00\u6b21\u7edd\u5bf9\u4e0d\u540c\u4e8e\u5176\u4ed6\u51e0\u6b21\u3002\u6211\u4eec\u770b\u5230\u73b0\u5728\u7684\u8d44\u6e90\u9650\u5236\u662f128\uff0c\u4e0e\u5355\u4e00\u7c7b\u578b\u7684\u6d4b\u8bd5\u76f8\u540c\u3002\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5f97\u51fa\u7ed3\u8bba\uff0c\u8fd9\u610f\u5473\u7740\u63a9\u7801\u5bc4\u5b58\u5668\u548cMMX\u5bc4\u5b58\u5668\u662f\u4ece\u76f8\u540c\u7684\u8d44\u6e90\u6c60\u4e2d\u5206\u914d\u7684\uff1a\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u7269\u7406\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\n\u8fd9\u89e3\u5f00\u4e86\u4e22\u5931\u5bc4\u5b58\u5668\u5806\u7684\u8c1c\u56e2\uff1a\u6ca1\u6709\u4e22\u5931\u4efb\u4f55\u4e1c\u897f\uff0c\u800c\u8fd9\u4e00\u4e2a\u5bc4\u5b58\u5668\u5806\u53ea\u662f\u8d77\u5230\u53cc\u91cd\u4f5c\u7528\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5171\u4eab\u5bc4\u5b58\u5668\u5806\u5728\u6027\u80fd\u65b9\u9762\u53ef\u80fd\u9700\u8981\u6ce8\u610f\uff0c\u4f46\u5f88\u96be\u60f3\u8c61\u8fd9\u4f1a\u5bf9\u4efb\u4f55\u975e\u4eba\u5de5\u793a\u4f8b\u4ea7\u751f\u5f71\u54cd\u3002\u8c01\u5c06\u5927\u91cf\u4f7f\u7528X87\u6216MMX(\u4e24\u8005\u90fd\u5df2\u8fc7\u65f6)\u4ee5\u53caAVX-512\u63a9\u7801\u5bc4\u5b58\u5668(\u4e0e\u201c\u8fc7\u65f6\u201d\u622a\u7136\u76f8\u53cd)\uff1f\u8fd9\u4f3c\u4e4e\u6781\u4e0d\u53ef\u80fd\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5bc4\u5b58\u5668\u5806\u4ecd\u7136\u76f8\u5f53\u5927\uff0c\u56e0\u6b64\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u592a\u53ef\u80fd\u8fbe\u5230\u9650\u5236\u3002\n\u56e0\u6b64\uff0c\u5171\u4eab\u8fd9\u4e9b\u6587\u4ef6\u662f\u964d\u4f4e\u529f\u8017\u548c\u9762\u79ef\u7684\u4e00\u4e2a\u5f88\u9177\u7684\u6280\u5de7\uff1a\u5bc4\u5b58\u5668\u6587\u4ef6\u5e76\u4e0d\u90fd\u90a3\u4e48\u5927\uff0c\u4f46\u5b83\u4eec\u4f4d\u4e8e\u9760\u8fd1\u6267\u884c\u5355\u5143\u7684\u9ec4\u91d1\u5730\u6bb5\u3002\n\u7136\u800c\uff0c\u8fd9\u4e00\u6b21\u6700\u9177\u7684\u662f\uff0c\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u7814\u7a76\u82af\u7247(\u8fd9\u5bf9\u6211\u6765\u8bf4\u751a\u81f3\u662f\u53ef\u80fd\u7684\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u975e\u540c\u5bfb\u5e38\u7684)\uff0c\u5e76\u63d0\u51fa\u4e86\u5173\u4e8e\u786c\u4ef6\u7684\u7406\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u76ee\u6807\u5fae\u57fa\u51c6\u6765\u6d4b\u8bd5\u548c\u786e\u8ba4\u3002\u5728\u8fd9\u91cc\uff0c\u4e8b\u60c5\u5b9e\u9645\u4e0a\u662f\u8fd9\u6837\u53d1\u751f\u7684\u3002\u6211\u5df2\u7ecf\u610f\u8bc6\u5230\u5bc4\u5b58\u5668\u5806\u5171\u4eab\u7684\u53ef\u80fd\u6027(Henry\u4ece\u4e00\u5f00\u59cb\u5c31\u5728rosize\u4e2d\u5bf9\u8fd9\u4e00\u6743\u5229\u8fdb\u884c\u4e86\u6d4b\u8bd5)-\u4f46\u662f\uff0c\u5c3d\u7ba1\u6211\u8003\u8651\u4e86\u5176\u4ed6\u5171\u4eab\u65b9\u6848\uff0c\u4f46\u6211\u4ece\u672a\u8003\u8651\u8fc7\u5728x87/mmx\u548c\u63a9\u7801\u5bc4\u5b58\u5668\u4e4b\u95f4\u5171\u4eab\uff0c\u76f4\u5230\u6211\u5c1d\u8bd5\u8bc6\u522bFranz\u7684\u9ab0\u5b50\u4e0a\u7684\u5bc4\u5b58\u5668\u5806\u3002\n\u611f\u8c22\u5f17\u91cc\u8328\u00b7\u5f17\u91cc\u8328(Fritzchens Fritz)\uff0c\u4ed6\u521b\u9020\u4e86\u8fd9\u91cc\u5206\u6790\u7684\u9ab0\u5b50\u955c\u5934\uff0c\u5e76\u6177\u6168\u5730\u5c06\u5b83\u4eec\u653e\u5165\u4e86\u516c\u5171\u9886\u57df\u3002\nHenry Wong\u64b0\u5199\u4e86\u5411\u6211\u4ecb\u7ecd\u8fd9\u9879\u6280\u672f\u7684\u539f\u59cb\u6587\u7ae0\uff0c\u968f\u540e\u4e0e\u6211\u5206\u4eab\u4e86\u4ed6\u7684\u5de5\u5177\u7684\u4ee3\u7801\uff0c\u8be5\u5de5\u5177\u73b0\u5728\u6258\u7ba1\u5728GitHub\u4e0a\u3002\nNemez\u505a\u4e86\u82af\u7247\u51fb\u7a7f\u7684\u7ec6\u76ee\uff0c\u6307\u51fa\u6709\u95ee\u9898\u7684\u5bc4\u5b58\u5668\u5806\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u6574\u6570\u5bc4\u5b58\u5668\u5806\u3002\n\u611f\u8c22Daniel Lemire\uff0c\u4ed6\u63d0\u4f9b\u4e86\u8bbf\u95ee\u672c\u6587\u4e2d\u4f7f\u7528\u7684SKX\u786c\u4ef6\u7684\u6743\u9650\u3002\nZMM\u3001YMM\u548cXMM\u5bc4\u5b58\u5668\u5728\u4f53\u7cfb\u7ed3\u6784\u4e0a\u5168\u90e8\u91cd\u53e0\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cxmm0\u53ea\u662fymm0\u7684\u5e95\u90e8128\u4f4d\uff0c\u5bf9\u4e8eymm0\u548czmm0\u4e5f\u662f\u5982\u6b64\u3002\u4ece\u7269\u7406\u4e0a\u8bb2\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709ZMM\u5bc4\u5b58\u5668\uff0c\u5176\u4ed6\u4e24\u4e2a\u5bc4\u5b58\u5668\u53ea\u662f\u90a3\u4e9b\u8f83\u5927\u5bc4\u5b58\u5668\u7684\u7279\u5b9a\u4f4d\u8303\u56f4\u3002\u56e0\u6b64\uff0c\u82af\u7247\u4e0a\u6807\u8bb0\u4e3aYMM\u7684\u533a\u57df\u5b9e\u9645\u4e0a\u610f\u5473\u7740\uff1a\u4e0d\u5c5e\u4e8e\u76f8\u5e94\u7684XMM\u5bc4\u5b58\u5668\u7684YMM\u5bc4\u5b58\u5668\u7684\u4e0a\u90e8\u3002\u3002\u21a9\n\u4e8b\u5b9e\u4e0a\uff0c\u51ef\u6bd4\u6e56\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u597d\u7684\u6b7b\u4ea1\u5c04\u51fb\u6765\u81ea\u90a3\u4e2a\u82af\u7247\uff0c\u4f46\u8fd9\u662f\u4e00\u56de\u4e8b\u3002\u21a9\u3002\n\u6211\u60f3\uff0c\u8fd9\u662f\u4e00\u4e2a\u6280\u5de7\uff0c\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u548c\u5176\u4ed6\u4e0d\u77e5\u9053MMX\u5bc4\u5b58\u5668\u5b58\u5728\u7684\u4ee3\u7801\u4fdd\u5b58\u548c\u6062\u590dMMX\u5bc4\u5b58\u5668\u3002\u5728\u4eceSSE\u5230AVX\u7684\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u4e5f\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u6df7\u4e71\uff0c\u4e0d\u77e5\u9053AVX\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u610f\u5916\u5730\u4f7f\u7528SSE\u6307\u4ee4\u635f\u574fAVX\u5bc4\u5b58\u5668\u7684\u4e0a\u90e8(\u5982\u679cSSE\u5c06\u9ad8\u4f4d\u6e05\u96f6)\uff0c\u56e0\u6b64\u6211\u4eec\u53cd\u800c\u4f1a\u5f97\u5230\u4f20\u7edfSSE\u548c\u80ae\u810f\u4e0a\u6e38\u7684\u6301\u7eed\u95ee\u9898\u3002-\u21a9\u3002\n\u8fd9\u662f\u4e00\u4e2a\u8c0e\u8a00\uff1a\u6211\u5e76\u6ca1\u6709\u771f\u7684\u73af\u987e\u82af\u7247\u5468\u56f4\uff1a\u6211\u5728\u6267\u884c\u5355\u5143\u9644\u8fd1\u5bfb\u627e\uff0c\u56e0\u4e3a\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u53ef\u80fd\u6027\u5f88\u9ad8\u3002-\u21a9\u3002\n\u6574\u6570\u6807\u5fd7(\u6240\u8c13\u7684EFLAGS\u5bc4\u5b58\u5668)\u4e5f\u9700\u8981\u91cd\u547d\u540d\uff0c\u6211\u76f8\u4fe1\u5b83\u4eec\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u6280\u5de7\uff1a\u5c06\u5b83\u4eec\u7684\u7ed3\u679c\u5199\u5165\u4e3a\u7ed3\u679c\u5206\u914d\u7684\u76f8\u540c\u7269\u7406\u5bc4\u5b58\u5668\uff1a\u6211\u5df2\u7ecf\u5728\u7f29\u653e\u89c6\u56fe\u4e0a\u6807\u8bb0\u4e86\u6211\u8ba4\u4e3a\u5305\u542b\u6240\u8c13SPAZO\u7ec4\u7684\u6587\u4ef6\uff0c\u800cC\u6807\u5fd7\u53ef\u4ee5\u5b58\u50a8\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8\u5728\u8f83\u8584\u7684\u4f4d\u7f6e(\u5355\u6bd4\u7279\uff1f)\u3002\u4f4d\u4e8eGP\u6587\u4ef6\u53f3\u4fa7\u7684\u6587\u4ef6\u3002\u21a9\u3002\n\u6211\u5728\u8fd9\u91cc\u8c08\u8bba\u7269\u7406\u522b\u540d\uff0c\u662f\u4e3a\u4e86\u5c06\u5176\u4e0e\u903b\u8f91/\u4f53\u7cfb\u7ed3\u6784\u522b\u540d\u533a\u5206\u5f00\u6765\u3002\u903b\u8f91\u6df7\u53e0\u662f\u8f6f\u4ef6\u53ef\u89c1\u7684\uff1aYMM\u548cXMM\u5bc4\u5b58\u5668\u5728\u903b\u8f91\u4e0a\u6df7\u53e0\uff0c\u56e0\u4e3a\u5bf9xmm0\u7684\u5199\u5165\u663e\u793a\u5728ymm0\u7684\u4f4e\u4f4d\u3002\u7c7b\u4f3c\u5730\uff0cMMX\u548cX87\u5bc4\u5b58\u5668\u5806\u5177\u6709\u522b\u540d\uff0c\u56e0\u4e3a\u5199\u5165MMX\u5bc4\u5b58\u5668\u4fee\u6539FP\u5bc4\u5b58\u5668\u5806\u6808\u4e2d\u7684\u503c\uff0c\u5c3d\u7ba1\u89c4\u5219\u66f4\u4e3a\u590d\u6742\u3002\u903b\u8f91\u6df7\u53e0\u901a\u5e38\u610f\u5473\u7740\u7269\u7406\u6df7\u53e0\uff0c\u4f46\u4e0d\u662f\u53cd\u8fc7\u6765\u3002\u56e0\u6b64\uff0c\u7269\u7406\u6df7\u53e0\u610f\u5473\u7740\u5c06\u4e24\u4e2a\u5bc4\u5b58\u5668\u96c6\u91cd\u547d\u540d\u5230\u540c\u4e00\u7269\u7406\u5bc4\u5b58\u5668\u6c60\u4e2d\uff0c\u4f46\u8fd9\u901a\u5e38\u5bf9\u8f6f\u4ef6\u662f\u4e0d\u53ef\u89c1\u7684(\u9664\u975e\u50cf\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u90a3\u6837\u8fdb\u884c\u4ed4\u7ec6\u7684\u6027\u80fd\u6d4b\u8bd5)\u3002\u21a9\u3002\n\u6211\u4f7f\u7528\u7684\u662fmmx\u800c\u4e0d\u662fx87\uff0c\u6240\u4ee5\u6211\u4e0d\u5fc5\u5904\u7406x87FP\u5806\u6808\u62bd\u8c61\uff0c\u4e5f\u4e0d\u5fc5\u7406\u89e3\u5b83\u5982\u4f55\u6620\u5c04\u5230\u91cd\u547d\u540d\u3002-\u21a9\u3002\n\u63a8\u6d4b\u6027\u5bc4\u5b58\u5668\u5806\uff0c\u56e0\u4e3a\u6211\u4eec\u671f\u671b\u4e00\u4e9b\u6761\u76ee\u4e5f\u7528\u4e8e\u4fdd\u5b58\u67b6\u6784\u5bc4\u5b58\u5668\u7684\u975e\u63a8\u6d4b\u503c\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u56de\u5230\u8fd9\u4e00\u70b9\u3002--\u21a9\u3002\n\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u6df7\u5408\u4e86\u6211\u4eec\u5728\u5355\u7c7b\u578b\u6d4b\u8bd5Test38\u548cTest43\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u7684kaddd\u548cpor\u6307\u4ee4\u3002-\u21a9", "note_en": "A  few posts ago we looked at the AVX-512 mask regsiters. Specifically, the number of phyiscal registers underlying the eight architectural ones, and some other behaviors such as zeroing idioms. Recently, a high resolution die shot of  SKX appeared, and I thought it would be cool to verify our register count by visual inspection. While trying to do that, I ran across something else interesting instead\u2026\n We\u2019re interested in this die shot, recently released by  Fritzchens Fritz on  Flickr. We\u2019ll be focusing on the highlighted area, which seems to have all the  register files on the chip. If you want a full breakdown of the core, you can check guesses  here on Twitter,  on RWT and on  Intel\u2019s forums ( thread).\n  Here\u2019s a close-up of that section, with the assumed purpose of the various register files labeled  1.\n   The general purpose register files are the right relative width (64 bits), and are in the right position below the integer execution units.\n    The uppper 256 bits of the 512-bit  zmm registers (labelled ZMM on the closeup) can be determined from comparing the  SKL  2 (no AVX-512) and  SKX (has AVX-512) dies and noting that the bottom file is not present in  SKL (a large empty area is present at that spot in  SKL).\n This leaves the unknown block in red. This block is in a prime spot below the vector execution units. Could it be the mask registers (kregs)? We found in the  first post that the mask aren\u2019t shared with either the scalar or  SIMD registers, so we expect them to have their own physical register file. Maybe this is it?\n Let\u2019s compare the mystery register file to the integer register file, since they should be similar in size and appear to be implemented similarly:\n  Loooking at the general purpose register file on the left, each block (6 of which are numbered on the general purpose file) seems to implement 16 bits, as if you zoom in you see a repeating structure of 16 elements, and 4 blocks makes 64 bits total which is the expected width of the file. We know from published numbers that the integer register file has 180 entries, and since there are 6 rows of 4 blocks, we expect each row to implement 180 / 6 = 30 registers.\n Now we turn our attention to the mystery file, with the idea that it may be the kreg file. There are a total of 30 blocks. Looking at the general purpose registers, we determined each block can hold 16 bites from 30 registers. So 30 blocks gives us: 30 blocks * 30 registers/block * 16 bits / 64 bits = 225 registers. Hmmm, we calculated last time that there are ~142 physical mask registers, so this seems way too high.\n There\u2019s another problem: we only have three columns of 16-bit blocks, for a total of 48 bits, horizontally. However, we know that a mask register must be up to 64 bits (when using a byte-wise for a full 512-bit vector register). Also, while our calculation above worked out to a whole number, the number of blocks (30) is not divisible by 4, so even if you assumed the arrangement of the blocks didn\u2019t matter, there is no posible mapping from each register to 4 distinct blocks. Instead, we\u2019d need something weird like 2 blocks providing 15 registers (instead of 30), but 64 bits wide (instead of 32). That seems very unlikely.\n So let\u2019s look just at the two paired columns on the left for now. If we take the  SIMD registers as an example, it is not necessary that the full width of the register is present horizontally in a single row: the  SIMD registers have 256 bits in a row (split into two 128 lines), but the other 256 bits in a 512-bit zmm register appears vertically below, in the register file maked ZMM in the diagram.\n Since the mask registers are associated with elements of zmm registers, maybe they are split up in the ame way? That is, a 64-bit mask register uses one 2x16 (32-bit) chunk from the top half and one from the bottom half, to make up 64 bits? This is 20 total blocks, giving 150 registers by the same calculation above. This is much closer to the 142 we found from experiment.\n Still\u2026 that nagging feeling. 142 is not equal to 150, and what about that third colum of blocks? I started doubting this was the mask register file after all. What could it be then? I realized there was one register file unaccounted for: the file for legacy x87 floating point and MMX. x87 floating point and MMX are the  same file because MMX registers are architecturally aliased onto the x87 registers  3. So where is  this file? I looked all around  4 the die shot. There are no good candidates.\n So maybe  this thing we\u2019ve been looking at is actually the x87/MMX register file? In one way it\u2019s a better fit: the x87 FP register file needs to be ~80 bits wide, so that would explain the extra column: if we assume each row is half of a register as before, that\u2019s 96 bits. That\u2019s enough to hold 80 bit extended precision values, and the 16 bits left over are probably could be used to store the FPU status word accessed by  ftstw and related instructions. This status word is updated after every operation so must  also be renamed for reasonable performance  5.\n Additional evidence that this might be the x87/MMX register file comes from this   KBL die shot also from Fritz:\n  Note that while the high 256 bits of the register file are masked out (this chip supports only AVX2, not AVX-512 so there are no  zmm registers), the register file we are considering is present in its entirety.\n Cool theory bro, but aren\u2019t we back to square zero? If this is the file for the x87/MMX registers, where do the mask registers live?\n There\u2019s one possibility we haven\u2019t discussed although some of you might be scraming it at your monitors by now: maybe the x87/MMX and the kreg register files are  shared. That is, physically aliased  6 to the same register file, shared competitively.\n  We\u2019ll use the test method originally  described by Henry Wong and which we used in the  last post on this topic. Here\u2019s the quick description of the technique, directly copy and pasted from that post.\n We separate two cache miss load instructions by a variable number of  filler instructions which vary based on the CPU resource we are &gt; probing. When the number of filler instructions is small enough, the two cache misses execute in parallel and their latencies are overlapped so the &gt; total execution time is roughly as long as a single miss.\n  However, once the number of filler instructions reaches a critical threshold, all of the targeted resource are consumed and instruction allocation &gt; stalls before the second miss is issued and so the cache misses can no longer run in parallel. This causes the runtime to spike to about twice the &gt; baseline cache miss latency.\n  Finally, we ensure that each filler instruction consumes exactly one of the resource we are interested in, so that the location of the spike indicates the size of the underlying resource. For example, regular  GP instructions usually consume one physical register from the  GP  PRF so are a good choice to measure the size of that resource.\n The trick we use to see if two register files are shared is first to use a test the size of each register file alone, using a test that uses filler that targets only that register file, then to run a third test whose filler  alternates between instructions that use each register file. If the register files are shared, we expect all tests to produce the same results, since they are all drawing from the same pool. If the register files are not shared, the third (alternating) test should result in a much higher apparent resource limit, since two different pools are being drawn from and so it will take twice as many filler instructions to hit the RF limit.\n Enough talk, let\u2019s do this. First, we look at  Test 38, which uses MMX instructions  7 to target the size of the x87/MMX register file:\n  We see a clear spike at 128 instructions, so it seems like the size of the speculative  8 x87/MMX register file is 128 entries.\n Next, we have  Test 43 which follows the same pattern as  Test 38 but using  kaddd as a filler instruction so targets the mask (kreg) register file:\n  This is mostly indistinguishable from the previous chart and we conclude that the size of the speculative mask register file is also 128.\n Let\u2019s see what happens when alternate MMX and another instruction type.  Test 39 alternates MMX with integer  SIMD instructions, and  Test 40 alternatives with general purpose scalar instructions:\n   Both of these show the same effect: the effective resource limitation is much higher: around 210 filler instructions. This indicates strongly that the x87/MMX register is not shared with either the  SIMD or scalar register files.\n Finally, we get to the end of this tale,  Test 41. This test mixes MMX and mask register instructions  9:\n  This one is definitely not like the others. We see that the resource limit is now 128, same as for the single-type tests. We can immediately conclude that this means that mask registers and MMX registers are allocated from the same resouce pool:  they use the same physical register file.\n This resolves the mystery of the missing register file: nothing is missing but rather this one register file simply serves double duty.\n Normally a shared register file might be something to watch out for, performance-wise, but it is hard to imagine this having an impact in any non-artificial example. Who is going to be making heavy use of x87 or MMX (both obsolete) along with AVX-512 mask registers (the opposite end of the spectrum from \u201cobsolete\u201d)? It seems extremely unlikely. In any case, the register file is still quite large so hitting the limit is unlikely in any case.\n So sharing these files is a cool trick to reduce power and area: the register files aren\u2019t all that big, but they live in pretty prime real-estate close to the execution units.\n What\u2019s cool about this one though is that is the first time that I\u2019ve  looked at a chip (that this is even possible is remarkable to me) and come up with a theory about the hardware we can test and confirm with a targeted microbenchmark. Here, it actually happened that way. I was already aware of the possibility of register file sharing (Henry had tests for this right in robsize from the start) \u2013 but although I considered other sharing scenarios I never considered sharing between x87/MMX and the mask registers until I tried to identify the register files on Franz\u2019s die shots.\n  Thanks to  Fritzchens Fritz who created the die shots analyzed here, and who graciously put them into the public domain.\n Henry Wong who wrote the  original article which introduced me to this technique and subsequently shared the code for his tool, which is now  hosted on github.\n Nemez who did a breakdown of the die shot, noting the register file in question as some type of integer register file.\n Thanks to  Daniel Lemire who provided access to the  SKX hardware used in this post.\n   The zmm, ymm and xmm registers all overlap, architecturally. That is,  xmm0 is just the bottom 128 bits of  ymm0, and similarly for  ymm0 and  zmm0. Physically, there are really  only  zmm registers and the other two are simply specific ranges of bits of those larger register. So the area marked  YMM on the die shot really means:  the upper parts of the  ymm registers which are not part of the corresponding xmm register.\u00a0 \u21a9\n  Actually Kaby Lake, since the best die shots we have are from that chip, but it\u2019s the same thing.\u00a0 \u21a9\n  As a trick, I guess, to allow MMX registers to be saved and restored by operating systems and other code that weren\u2019t aware of their presence. A similar mess occurred with the transition from SSE to AVX, where code unaware of AVX could accidentally clobber the upper part of AVX registers using SSE instructions (if SSE zeroed the upper bits), so instead we get the ongoing issue with  legacy SSE and dirty uppers.\u00a0 \u21a9\n  This is a lie: I didn\u2019t really look around  all around the die: I looked near by the execution units were the register file would be with very high probability.\u00a0 \u21a9\n  The integer flags (so-called  EFLAGS register) also need to be renamed and I believe they pull a similar trick: writing their results to the same physical register allocated for the result: I\u2019ve marked the file that I think holds the so-called  SPAZO group on the zoomed view, and the C flag may be stored in the same place or in the thin (single bit?) file immediately to the right of the  GP file.\u00a0 \u21a9\n  I talk of  physical aliasing here, to distinguish it from the logical/architectural aliasing. Logical aliasing is that which is visible to software: the  ymm and  xmm registers are logically aliased in that writes to  xmm0 show up in the low bits of  ymm0. Similarly, the MMX and x87 register files are aliased in that writes to MMX register modify values in the FP register stack, although the rules are more complicated. Logical aliasing usually implies physical aliasing, but not the other way around. Physical aliasing, then, means that two register sets are renamed onto the same pool of physical registers, but this is usually invisible to software (except though careful performance tests, as we do here).\u00a0 \u21a9\n  I use MMX rather than x87 so I don\u2019t have to deal with the x87 FP stack abstraction and understand how that maps to renaming.\u00a0 \u21a9\n  The  speculative register file because we expect some entries also to be used to hold the non-speculative values of the architectural registers. We\u2019ll return to this point in a moment.\u00a0 \u21a9\n  Specifically, it mixes the same  kaddd and  por instructions we used in the single-type tests  Test 38 and  Test 43.\u00a0 \u21a9", "posttime": "2020-05-26 10:05:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a9\u7801,mask,\u5bc4\u5b58\u5668", "title": "AVX-512\u63a9\u7801\u5bc4\u5b58\u5668\uff0c\u518d\u4e00\u6b21", "title_en": "AVX-512 Mask Registers, Again", "transed": 1, "url": "https://travisdowns.github.io/blog/2020/05/26/kreg2.html", "via": "", "real_tags": ["\u63a9\u7801", "mask", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "350b3e6e012afd02f2ec3ca6c7876806.png", "infoid": 1003743, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90e8\u5206PowerPoint\u529f\u80fd\u7121\u6cd5\u65bc\u201c\u8c37\u6b4c\u7c21\u5831\u201d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664.", "note_en": "\u90e8\u5206 PowerPoint \u529f\u80fd\u7121\u6cd5\u65bc\u300cGoogle \u7c21\u5831\u300d\u986f\u793a\u3002\u5982\u679c\u60a8\u4f5c\u51fa\u8b8a\u66f4\uff0c\u6709\u95dc\u5167\u5bb9\u53ef\u80fd\u6703\u88ab\u79fb\u9664\u3002", "posttime": "2020-05-26 10:04:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f01\u4e1a,assessment,\u8b8a\u66f4", "title": "\u521d\u521b\u4f01\u4e1a\u7684\u98ce\u9669\u8bc4\u4f30\u548c\u4f18\u5148\u7ea7\u6392\u5e8f", "title_en": "Risk Assessment and Prioritization for Startups", "transed": 1, "url": "https://docs.google.com/presentation/d/1Ox9mwO7aCfwXUw1pllKTKCpiEJi3oIW6KHrXfNtrIXQ/edit#slide=id.p", "via": "", "real_tags": ["\u4f01\u4e1a", "\u8b8a\u66f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003742, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728Twitter\u4e0a\u8fdb\u884c\u4e86\u4e00\u4e9b\u5173\u4e8eIPv6\u7684\u6709\u8da3\u8ba8\u8bba\u3002\u7136\u540e\u6709\u4eba\u95eeAndroid\u662f\u5426\u572811\u7248\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u83b7\u5f97DHCPv6\u652f\u6301\u3002\n\u8fd9\u5728\u7406\u8bba\u4e0a\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u4f46\u5b8c\u5168\u5ffd\u7565\u4e86\u6211\u4eec\u4eceIPv4\u4e2d\u5b66\u5230\u7684\u6559\u8bad\u3002\u66f4\u4e0d\u7528\u8bf4\uff0c\u6839\u672c\u6ca1\u6709\u7eff\u5730\u8fd9\u56de\u4e8b\u3002\u51e0\u4e4e\u6240\u6709\u7684\u7f51\u7edc\uff0c\u90fd\u662f\u73b0\u6709\u7684\uff0c\u4f60\u4e0d\u5fc5\u4ece\u5934\u518d\u6765\u3002\u8fd9\u662f\u975e\u5e38\u95ea\u4eae\u7684\u7aef\u5230\u7aef\u8fde\u63a5\u89c6\u56fe\uff0c/64\u65e0\u5904\u4e0d\u5728\uff0c\u800c\u4e14\u53ea\u5141\u8bb8SLAAC\u3002\u6211\u660e\u767d\u8fd9\u4e00\u5207\uff0c\u5c31\u50cf\u5728\u8bf4\u201c\u6211\u5e0c\u671b\u6ca1\u6709\u6218\u4e89\u201d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u4eba\u4eec\u662f\u611a\u8822\u7684\uff0c\u6240\u4ee5\u4f1a\u6709\u6218\u4e89\u3002\u6709\u4e00\u79cd\u5929\u771f\uff0c\u5c31\u50cf\u4e00\u4e2a\u6b63\u5728\u6210\u957f\u7684\u9752\u5c11\u5e74\u3002\u4f60\u60f3\u6539\u53d8\u4e16\u754c\uff0c\u7136\u540e\u4f60\u5c31\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e2a\u4e16\u754c\u662f\u7531\u91d1\u94b1\u3001\u8d85\u7ea7\u519b\u56e2\u548c\u80ae\u810f\u7684\u653f\u5ba2\u7edf\u6cbb\u7684\u3002\n\u8fd9\u6574\u4e2a\u6df7\u4e71\u5bfc\u81f4\u4e86SLAAC+RDNSS\u4e0eDHCPv6\u7684\u5723\u6218\u3002\u8bf7\u6ce8\u610f\uff0cSLAAC\u6700\u521d\u751a\u81f3\u6ca1\u6709\u8bbe\u7f6eDNS\u670d\u52a1\u5668\u7684\u9009\u9879\u3002\u57fa\u672c\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ea\u6709\u90e8\u5206\u5b9e\u73b0\u3002\u62e5\u6709\u4e00\u4e2aDNS\u670d\u52a1\u5668\u2026\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u6700\u521d\uff0c\u5fae\u8f6f\u64cd\u4f5c\u7cfb\u7edf\u786e\u5b9e\u652f\u6301SLAAC\uff0c\u4f46\u4e0d\u652f\u6301RDNSS\uff0cAndroid\u4e0d\u60f3\u652f\u6301DHCPv6\u3002\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u5728\u540c\u4e00\u5b50\u7f51\u4e0a\u652f\u6301\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u4ee4\u6211\u5927\u5403\u4e00\u60ca\u7684\u662f\uff0cAndroid\u57282020\u5e74\u4ecd\u7136\u6709\u4e00\u4e2a\u652f\u79bb\u7834\u788e\u7684IPv6\u5b9e\u73b0\u3002\u662f\u6545\u610f\u7684\u3002\u4ed6\u4eec\u4e0d\u4f1a\u628a\u5b83\u4fee\u597d\u7684\u3002\u8c37\u6b4c\u548c\u6d1b\u4f26\u4f50\u00b7\u79d1\u5229\u8482(Lorenzo Colitti)\u6709\u51e0\u4e2a\u5f88\u6709\u8bf4\u670d\u529b\u7684\u8bba\u70b9\uff0c\u4f46\u5b83\u4eec\u90fd\u76f8\u5f53\u7ad9\u4e0d\u4f4f\u811a\u3002\u7136\u800c\uff0c\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u4eba\u4eec\u5728\u8981\u6c42\u5b83\uff0c\u4f46\u8c37\u6b4c\u4e0d\u613f\u610f\u5b9e\u65bd\u5b83\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8ba4\u4e3a\u81ea\u5df1\u6bd4\u7528\u6237\u77e5\u9053\u5f97\u66f4\u591a\u3002\u4ed6\u4eec\u4f1a\u5f88\u9ad8\u5174\u5730\u76d1\u89c6\u60a8\u3001\u5411\u60a8\u6295\u653e\u5e7f\u544a\u5e76\u51fa\u552e\u60a8\u7684\u6570\u636e\uff0c\u4f46\u662f\u5141\u8bb8\u60a8\u8fd0\u884cDHCPv6\u5c06\u4f1a\u5bf9\u60a8\u9020\u6210\u4f24\u5bb3\u3002\n\u6beb\u65e0\u7591\u95ee\uff0cSLAAC\u662f\u6709\u6548\u7684\uff0c\u5e76\u4e14\u5b83\u53ef\u4ee5\u5728\u76f8\u5f53\u5927\u7684\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u4e0d\u8fc7\uff0c\u5728\u6211\u770b\u6765\uff0cDHCPv6\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u8fd9\u91cc\u7684\u8c2c\u8bef\u5728\u4e8e\uff0c\u8bb8\u591aIPv6\u5e03\u9053\u8005\u90fd\u6301\u8fd9\u79cd\u5ffd\u89c6\u4e1a\u52a1\u9700\u6c42\u7684\u8c61\u7259\u5854\u89c2\u70b9\u3002\u6709\u4e1a\u52a1\u8981\u6c42\u548c\u6cd5\u89c4\u9075\u4ece\u6027\u8981\u6c42\uff0c\u60a8\u9700\u8981\u8ddf\u8e2a\u54ea\u4e9b\u4e3b\u673a\u5728\u4ec0\u4e48\u65f6\u95f4\u62e5\u6709\u54ea\u4e9bIP\u3002\u6b64\u5916\uff0c\u4f01\u4e1a\u4e5f\u4f1a\u505a\u8822\u4e8b\u3002\u8fd9\u5c31\u662f\u4e8b\u5b9e\u3002\u8c37\u6b4c\u4e0d\u5e94\u8be5\u51b3\u5b9a\u4f60\u8981\u505a\u4ec0\u4e48\u3002\n\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u540c\u65f6\u8fd0\u884cSLAAC\u548cDHCPv6\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u5982\u679c\u4f60\u9605\u8bfb\u4e0a\u9762\u7684Google\u5e16\u5b50\uff0c\u4f60\u4f1a\u53d1\u73b0\u8bb8\u591a\u4eba\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u5e76\u4e14\u6709\u975e\u5e38\u5408\u7406\u7684\u5546\u4e1a\u539f\u56e0\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u60f3\u8981\u5b9e\u73b0DHCPv6\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50\uff1a\n\u6211\u76f8\u4fe1\u6709\u4e9b\u7528\u4f8b\u662f\u6709\u89e3\u51b3\u529e\u6cd5\u7684\uff0c\u4f46\u6211\u7684\u89c2\u70b9\u662f\uff1a\u4f01\u4e1a\u9700\u8981DHCPv6\u3001Google\u6216\u5176\u4ed6\u4efb\u4f55\u516c\u53f8\uff0c\u4e0d\u5e94\u8be5\u89c4\u5b9a\u60a8\u624b\u5934\u6709\u4ec0\u4e48\u9009\u9879\u3002\u56e0\u6b64\uff0c\u53ef\u60b2\u7684\u662f\uff0c\u5373\u4f7f\u57282020\u5e74\uff0cAndroid\u4ecd\u7136\u6709\u4e00\u4e2a\u652f\u79bb\u7834\u788e\u7684IPv6\u5b9e\u73b0\u3002", "note_en": "I got into some interesting discussions about IPv6 on Twitter. Then someone asked if Android is getting DHCPv6 support in version 11 of the OS.\n    This sounds good in theory but ignores completely the lessons we\u2019ve learned from IPv4. Not to mention,  there is no such thing as greenfield. Almost all networks, are existing ones,  you don\u2019t get to start all over again. There was this very shiny view of end to end connectivity, /64 everywhere and only SLAAC allowed. I get all of that, it\u2019s like saying \u201cI wish there were no wars\u201d, but unfortunately, people are stupid, so there will be wars. There\u2019s this naivety, similar to a teenager that is growing up. You want to change the world, then you realize the world is run by money, mega corps, and dirty politicians.\n This whole mess led to the holy wars of SLAAC + RDNSS vs DHCPv6. Please note that SLAAC didn\u2019t even initially have the option of setting a DNS server. Basically, that meant you only had a partial implementation. It\u2019s pretty useful to have a DNS server\u2026 Initially, Microsoft operating systems did support SLAAC but not RDNSS, Android  did not want to support DHCPv6. That meant that you couldn\u2019t support these two operating systems on the same subnet.\n Much to my surprise, Android still has a  broken IPv6 implementation in 2020. By design. They are not going to fix it. There are a couple of valid arguments from Google and Lorenzo Colitti, but they are pretty weak. The irony of it all though is that people are asking for it but Google is not willing to implement it, because they  think they know better than their users. They will happily  spy on you, serve you ads, and sell your data, but allowing you to run DHCPv6 would be doing you a disservice.\n There\u2019s no doubt that  SLAAC works, and that it can work in fairly large environments, still, DHCPv6 is in my mind the better option. The fallacy here is that many IPv6 evangelists take this ivory tower view of ignoring business requirements. There are business requirements, and compliance requirements, where you need to track what host had what IP at what time. Also, enterprises do stupid things. That\u2019s just a fact.  Google is not the one that should decide what you get to do.\n You could, of course, run both SLAAC and DHCPv6 simultaneously, but why? If you read the Google thread above, you will see that many people have wasted a lot of time, and have very valid business reasons, for why they want DHCPv6 implemented. Here are a few:\n  I\u2019m sure there are some workarounds for some of the use cases but my point is: Enterprises need DHCPv6, Google, or anyone else for that matter,  should not dictate what options you have at your hand. So, sadly, even in 2020,  Android still has a broken IPv6 implementation.", "posttime": "2020-05-26 10:04:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "android,2020,ipv6,dhcpv6", "title": "\u73b0\u5728\u662f2020\u5e74\u4e86\uff0cAndroid\u7684IPv6\u4ecd\u7136\u662f\u574f\u7684", "title_en": "It\u2019s 2020 and Android\u2019s IPv6 Is Still Broken", "transed": 1, "url": "http://lostintransit.se/2020/05/22/its-2020-and-androids-ipv6-is-still-broken/", "via": "", "real_tags": ["android", "2020", "ipv6", "dhcpv6"]}, {"category": "", "categoryclass": "", "imagename": "cdd40a7a72390f5ccce479ebb173387d.jpg", "infoid": 1003740, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Requests for Startup\u6c47\u96c6\u4e86\u6765\u81ea\u4e3b\u8981\u6295\u8d44\u8005\u3001\u521b\u59cb\u4eba\u548c\u8fd0\u8425\u5546\u7684100\u4e2a\u4f1f\u5927\u7684\u5546\u4e1a\u60f3\u6cd5\u3002\u7136\u540e\u6211\u4eec\u6bcf\u5468\u53d1\u4e00\u5c0110\u4e2a\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u56e0\u4e3a\u6700\u597d\u7684\u60f3\u6cd5\u4e0d\u5e94\u8be5\u662f\u79d8\u5bc6\u3002\n\u542c\u542c\u6765\u81ea\u9886\u5148\u516c\u53f8\u7684\u521b\u59cb\u4eba\u548c\u6295\u8d44\u8005\u8ba4\u4e3a\u4e0b\u4e00\u4e2a\u5927\u4f01\u4e1a\u53ef\u80fd\u4f1a\u662f\u4ec0\u4e48\u3002\n\u81ea\u4eceY Combinator\u521b\u9020\u4e86\u201cRequests for Startups\u201d\u8fd9\u4e2a\u8bcd\u4ee5\u6765\uff0c\u6295\u8d44\u8005\u5c31\u5f00\u59cb\u7528\u8fd9\u4e2a\u8bcd\u6765\u6307\u4ee3\u4ed6\u4eec\u5e0c\u671b\u5f62\u6210\u7684\u60f3\u6cd5\u3002\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u8fd9\u4e9b\u60f3\u6cd5\u901a\u5e38\u53ea\u4e0e\u4e00\u7fa4\u7cbe\u9009\u7684\u4f01\u4e1a\u5bb6\u5206\u4eab\uff0c\u6216\u8005\u4ee5\u535a\u5ba2\u5e16\u5b50\u548c\u63a8\u6587\u7b49\u975e\u7ed3\u6784\u5316\u5f62\u5f0f\u53d1\u5e03\u3002\u8fd9\u610f\u5473\u7740\u4f1f\u5927\u7684\u4f01\u4e1a\u5bb6\u53ef\u80fd\u4f1a\u9519\u5931\u826f\u673a\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u662f\u67d0\u4e2a\u7fa4\u4f53\u7684\u4e00\u5458\uff0c\u6216\u8005\u6ca1\u6709\u4f9d\u9644\u4e8e\u5408\u9002\u7684\u5e73\u53f0\u3002\nRFS100\u7ffb\u8f6c\u811a\u672c\u3002\u6211\u4eec\u8981\u6c42\u6177\u6168\u7684\u6295\u8d44\u8005\u3001\u521b\u59cb\u4eba\u548c\u7ecf\u8425\u8005\u4e0e\u4e16\u754c\u5206\u4eab\u4ed6\u4eec\u6700\u597d\u7684\u60f3\u6cd5\u3002\u7136\u540e\uff0c\u6211\u4eec\u4ee5\u7ed3\u6784\u5316\u3001\u4e00\u81f4\u7684\u683c\u5f0f\u63d0\u4f9b\u5b83\u4eec\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5728\u60f3\u6cd5\u8ff7\u5bab\u4e2d\u5165\u95e8\u3002\n\u7531Aashay\u548cMario\u521b\u5efa\u548c\u7b56\u5212\u3002\u5728\u6211\u4eec\u5404\u81ea\u7684\u65f6\u4e8b\u901a\u8baf\u4e2d\u9605\u8bfb\u66f4\u591a\u6211\u4eec\u7684\u6587\u7ae0\u3002", "note_en": "Requests For Startup compiles 100 great business ideas from leading investors, founders, and operators. Then we send out an email with ten a week because the best ideas shouldn&#39;t be a secret.\n   Hear what founders and investors from leading companies think could be the next big business.\n  Ever since Y Combinator coined the term &#34;Requests for Startups,&#34; investors have used it to refer to ideas they hope get built. The problem? Those ideas are often only shared with a select group of entrepreneurs, or delivered in unstructured formats like blog posts and tweets. That means that great entrepreneurs might miss out, simply because they&#39;re not part of a certain group, or glued to the right platform.\n RFS100 flips the script. We ask generous investors, founders and operators to share their best ideas with the world. Then we deliver them in a structured, consistent format to help you get started down the idea maze.\n     Created and curated by Aashay and Mario. Read more of our writing in our respective newsletters.", "posttime": "2020-05-26 09:47:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u521b\u4e1a,ideas,\u60f3\u6cd5", "title": "\u6765\u81ea\u98ce\u6295\u548c\u521b\u59cb\u4eba\u7684100\u4e2a\u521b\u4e1a\u60f3\u6cd5", "title_en": "100 startup ideas, from VCs and Founders", "transed": 1, "url": "https://www.rfs100.com/", "via": "", "real_tags": ["\u521b\u4e1a", "ideas", "\u60f3\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1003737, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5206\u4eab\u6211\u5bf9\u56f4\u68cb\u7a0b\u5e8f\u5e94\u8be5\u5982\u4f55\u4ee5\u4e00\u79cd\u5e72\u51c0\u800c\u7075\u6d3b\u7684\u65b9\u5f0f\u8fdb\u884c\u6d4b\u8bd5\u7684\u770b\u6cd5\u3002\n\u65e5\u5fd7\u8bb0\u5f55\u3001\u5ea6\u91cf\u96c6\u5408\u4ee5\u53ca\u4e0e\u67d0\u4e9b\u4ee3\u7801\u7684\u4e3b\u8981\u529f\u80fd\u65e0\u5173\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u4e0d\u5f97\u51fa\u73b0\u5728\u8be5\u4ee3\u7801\u4e2d\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u53ef\u4ee5\u7531\u7528\u6237\u68c0\u6d4b\u7684\u4ee3\u7801\u7684\u5b9a\u4e49\u8ddf\u8e2a\u70b9\u3002\n\u8ba9\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3alib\u7684\u5305\u548c\u4e00\u4e9blib.clientstructure\uff0c\u5b83\u4eec\u5728\u6bcf\u6b21\u6267\u884csomquest\u65f6\u90fd\u4f1aping\u5176\u5e95\u5c42\u8fde\u63a5\u3002\n\u5305\u5e93\u7c7b\u578b\u5ba2\u6237\u7aef\u7ed3\u6784{conn net.\u3002conn}\u51fd\u6570(c*\u5ba2\u6237\u7aef)\u8bf7\u6c42(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)\u9519\u8bef{if err\uff1a=c..\u3002ping(Ctx)\uff1berr\uff01=nil{return err}//\u8fd9\u91cc\u6709\u4e00\u4e9b\u903b\u8f91\u3002}func(c*client)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)\u9519\u8bef{\u8fd4\u56de\u63ba\u6742(CTX\uff0cc.\u3002CONN)}\u3002\n\u5982\u679c\u6211\u4eec\u9700\u8981\u5728ping\u53d1\u751f\u4e4b\u524d\u548c\u4e4b\u540e\u5199\u5165\u4e00\u4e9b\u65e5\u5fd7\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u4e00\u4e9b\u8bb0\u5f55\u5668(\u6216\u8bb0\u5f55\u5668\u63a5\u53e3)\u6ce8\u5165\u5ba2\u6237\u7aef\uff1a\n\u5305\u5e93\u7c7b\u578b\u5ba2\u6237\u7aef\u7ed3\u6784{Logger Logger Conn Net.\u3002conn}\u51fd\u6570(c*\u5ba2\u6237\u7aef)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)(\u9519\u8bef){c..\u3002\u4f10\u6728\u8005\u3002\u4fe1\u606f(&#34\uff1bping\u5f00\u59cb&#34\uff1b)\u9519\u8bef=\u63ba\u6742(CTX\uff0cc.\u3002conn)c.\u3002\u4f10\u6728\u8005\u3002\u4fe1\u606f(&#34\uff1bping\u5df2\u5b8c\u6210(\u9519\u8bef\u4e3a%v)&#34\uff1b\uff0c\u9519\u8bef)\u8fd4\u56de}\u3002\n\u5305\u5e93\u7c7b\u578b\u5ba2\u6237\u7aef\u7ed3\u6784{Logger Logger Metrics Registry Conn Net.\u3002conn}\u51fd\u6570(c*\u5ba2\u6237\u7aef)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)(\u9519\u8bef){\u5f00\u59cb\uff1a=\u65f6\u95f4\u3002\u73b0\u5728()c.\u3002\u4f10\u6728\u8005\u3002\u4fe1\u606f(&#34\uff1bping\u5f00\u59cb&#34\uff1b)\u9519\u8bef=\u63ba\u6742(CTX\uff0cc.\u3002conn)c.\u3002\u4f10\u6728\u8005\u3002\u4fe1\u606f(&#34\uff1bping\u5df2\u5b8c\u6210(\u9519\u8bef\u4e3a%v)&#34\uff1b\uff0cerr)\u5ea6\u91cf\uff1a=c..\u3002\u6307\u6807\u3002\u83b7\u53d6(&#34\uff1bPING_LATHERY&#34\uff1b)\u6307\u6807\u3002\u53d1\u9001(\u65f6\u95f4\u3002\u81ea(\u5f00\u59cb))\u8fd4\u56de\u9519\u8bef}\u3002\n\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u5411\u5ba2\u6237\u7aef\u6dfb\u52a0\u68c0\u6d4b\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u610f\u8bc6\u5230\u5b83\u7684\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u4e0e\u68c0\u6d4b\u76f8\u5173\uff0c\u800c\u4e0d\u662f\u4e0e\u5ba2\u6237\u7aef\u7684\u4e3b\u8981\u529f\u80fd\u76f8\u5173(\u8fd9\u53ea\u662f\u4e00\u884c\u5e26\u6709\u63ba\u6742()\u8c03\u7528\u7684\u4ee3\u7801)\u3002\n\u4e0d\u8fde\u8d2f\u7684(\u4e0e\u6211\u4eec\u5ba2\u6237\u7684\u4e3b\u8981\u76ee\u7684\u65e0\u5173)\u4ee3\u7801\u884c\u6570\u53ea\u662f\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\n\u5982\u679c\u5728\u7a0b\u5e8f\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u610f\u8bc6\u5230\u5ea6\u91cf\u540d\u79f0(\u4f8b\u5982\uff0c\u6307\u6807\u540d\u79f0)\u662f\u9519\u8bef\u7684\uff0c\u5e76\u4e14\u60a8\u5e94\u8be5\u5c06\u5176\u91cd\u547d\u540d\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6216\u8005\u60a8\u5fc5\u987b\u4f7f\u7528\u4e00\u4e9b\u4e0d\u540c\u7684\u5e93\u6765\u8bb0\u5f55\u65e5\u5fd7\uff1f\n\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u60a8\u5c06\u9700\u8981\u8f6c\u5230\u5ba2\u6237\u7aef\u7684\u5b9e\u73b0(\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u7684\u7ec4\u4ef6)\u5e76\u5bf9\u5176\u8fdb\u884c\u66f4\u6539\u3002\n\u8fd9\u610f\u5473\u7740\u6bcf\u5f53\u4e0e\u7ec4\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u65e0\u5173\u7684\u5185\u5bb9\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u60a8\u90fd\u8981\u66f4\u6539\u4ee3\u7801\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u786e\u5b9e\u8fdd\u53cd\u4e86SRP\u539f\u5219\u3002\n\u5982\u679c\u60a8\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u5171\u4eab\u4ee3\u7801\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u5982\u679c\u60a8\u751a\u81f3\u6839\u672c\u65e0\u6cd5\u63a7\u5236\u4ee3\u7801\u7684\u4f7f\u7528\u8005(\u8001\u5b9e\u8bf4\uff0c\u6211\u5efa\u8bae\u5c06\u6bcf\u4e2a\u5305\u89c6\u4e3a\u88ab\u672a\u77e5\u6570\u91cf\u7684\u7a0b\u5e8f\u91cd\u7528\u7684\u5305\uff0c\u5373\u4f7f\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u4e2a\u5305\u662f\u60a8\u7684)\u3002\n\u5728\u6211\u770b\u6765\uff0c\u6b63\u786e\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u8ddf\u8e2a\u70b9(\u53c8\u540d\u94a9\u5b50)\uff0c\u7136\u540e\u4ee3\u7801\u7528\u6237\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u67d0\u4e2a\u51fd\u6570(\u53c8\u540d\u63a2\u6d4b)\u521d\u59cb\u5316\u8fd9\u4e9b\u8ddf\u8e2a\u70b9\u3002\n\u5f53\u7136\uff0c\u8fd9\u4ecd\u7136\u4f1a\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u4ee3\u7801\u884c\uff0c\u4f46\u4e5f\u4f1a\u7ed9\u7528\u6237\u5e26\u6765\u7075\u6d3b\u6027\uff0c\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u9002\u5f53\u7684\u65b9\u6cd5\u6765\u6d4b\u91cf\u6211\u4eec\u7ec4\u4ef6\u7684\u8fd0\u884c\u65f6\u3002\n\u8ba9\u6211\u4eec\u63d0\u4f9b\u51e0\u4e4e\u76f8\u540c\u7684\u673a\u5236\uff0c\u4f46\u6709\u4e00\u4e2a\u53d8\u5316\u3002\u6211\u4eec\u4e0d\u63d0\u4f9bOnPingStart()\u548cOnPingDone()\u6302\u94a9\uff0c\u800c\u662f\u5f15\u5165\u5355\u4e2aOnPing()\u6302\u94a9\uff0c\u8be5\u6302\u94a9\u5c06\u5728ping\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u5e76\u5c06\u8fd4\u56de\u4e00\u4e2a\u56de\u8c03\uff0c\u540e\u8005\u5c06\u5728ping\u4e4b\u540e\u7acb\u5373\u88ab\u8c03\u7528\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e9b\u53d8\u91cf\u5b58\u50a8\u5728\u95ed\u5305\u4e2d\uff0c\u4ee5\u4fbf\u5728ping\u5b8c\u6210\u65f6\u8bbf\u95ee\u5b83\u4eec(\u4f8b\u5982\uff0c\u8ba1\u7b97ping\u5ef6\u8fdf)\u3002\n\u5305\u5e93\u7c7b\u578b\u5ba2\u6237\u7aef\u7ed3\u6784{OnPing func()func(Error)conn net.\u3002conn}\u51fd\u6570(c*\u5ba2\u6237\u7aef)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)(\u9519\u8bef){\u5b8c\u6210\uff1a=c..\u3002OnPing()Err=\u63ba\u6742(CTX\uff0cc.\u3002conn)\u5b8c\u6210(\u9519\u8bef)\u8fd4\u56de}\u3002\n\u770b\u8d77\u6765\u5f88\u6574\u6d01\uff0c\u4f46\u9664\u975e\u6211\u4eec\u610f\u8bc6\u5230OnPing\u6302\u94a9\u548c\u56de\u8c03\u5b83\u7684\u8fd4\u56de\u53ef\u80fd\u90fd\u4e3a\u96f6\uff1a\n\u51fd\u6570(c*\u5ba2\u6237\u7aef)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)(\u9519\u8bef){\u5982\u679cfn\uff1a=c\uff0c\u5219\u53d8\u91cf\u5b8c\u6210\u51fd\u6570(\u9519\u8bef)\u3002OnPing\uff1bFn\uff01=nil{Done=Fn()}Err=\u63ba\u6742(CTX\uff0cc.\u3002conn)\u5982\u679c\u5b8c\u6210\uff01=nil{Done(Err)}return}\u3002\n\u73b0\u5728\u5b83\u662f\u6b63\u786e\u7684\uff0c\u4ecd\u7136\u64c5\u957f\u7075\u6d3b\u6027\u548cSRP\u539f\u5219\uff0c\u4f46\u4e0d\u592a\u64c5\u957f\u4ee3\u7801\u7b80\u5355\u6027\u3002\n\u5728\u7b80\u5316\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u8ba8\u8bba\u4e00\u4e0b\u5f53\u524d\u94a9\u5b50\u5b9e\u73b0\u8fd8\u5b58\u5728\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u3002\n\u7528\u6237\u5c06\u5982\u4f55\u8bbe\u7f6e\u591a\u4e2a\u63a2\u6d4b\u5668\uff1f\u56e0\u6b64\uff0c\u524d\u9762\u63d0\u5230\u7684httptrace\u5305\u5177\u6709ClientTrace.compose()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u4e24\u4e2a\u8ddf\u8e2a\u7ed3\u6784\u5408\u5e76\u5230\u7b2c\u4e09\u4e2a\u8ddf\u8e2a\u7ed3\u6784\u4e2d\u3002\u56e0\u6b64\uff0cresult tingtrace\u4e2d\u7684\u6bcf\u4e2a\u63a2\u6d4b\u51fd\u6570\u90fd\u5c06\u8c03\u7528\u5148\u524d\u8ddf\u8e2a\u4e2d\u7684\u76f8\u5e94\u63a2\u6d4b(\u5982\u679c\u8bbe\u7f6e\u4e86\u5b83\u4eec\u7684\u8bdd)\u3002\n\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u5c1d\u8bd5\u624b\u52a8\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c(\u5e76\u4e14\u4e0d\u4f7f\u7528\u53cd\u5c04)\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06OnPing\u6302\u94a9\u4ece\u5ba2\u6237\u7aef\u79fb\u81f3\u5355\u72ec\u7684\u7ed3\u6784ClientTrace\uff1a\n\u5305\u5e93\u7c7b\u578b\u5ba2\u6237\u7aef\u7ed3\u6784{Trace ClientTrace conn net.\u3002conn}type ClientTrace struct{OnPing func()func(Error)}\nfunc(A ClientTrace)Compose(B ClientTrace)(C ClientTrace){Switch{case a.\u3002OnPing==nil\uff1ac.\u3002OnPing=b.\u3002\u5b89\u5e73\u6848\u4ef6b\u3002OnPing==nil\uff1ac.\u3002Onping=a.\u3002OnPing\u9ed8\u8ba4\u503c\uff1ac.\u3002onPing=func()func(\u9519\u8bef){doona\uff1a=a.\u3002On Ping()Done B\uff1a=b.\u3002onPing()\u5f00\u5173{case dona==nil\uff1areturn donB case donA B==nil\uff1areturn dona\u9ed8\u8ba4\u503c\uff1areturn func(Err Error){dona(Err)donB(Err)}return c}\u3002\n\u5355\u94a9\u7684\u4ee3\u7801\u5f88\u591a\uff0c\u5bf9\u5427\uff1f\u73b0\u5728\u8ba9\u6211\u4eec\u7ee7\u7eed\u524d\u8fdb\uff0c\u7a0d\u540e\u518d\u56de\u6765\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5305\u4e3b\u5bfc\u5165(&#34\uff1blog&#34\uff1b&#34\uff1bome/path/to/lib&#34\uff1b)func main(){var trace lib.\u3002ClientTrace//\u65e5\u5fd7\u6302\u94a9\u3002TRACE=\u8ddf\u8e2a\u3002\u4f5c\u66f2(\u5531\u8bcd)\u3002ClientTrace{OnPing\uff1afunc()\u51fd\u6570(\u9519\u8bef){\u65e5\u5fd7\u3002Println(&#34\uff1bping start&#34\uff1b)\u8fd4\u56de\u51fd\u6570(\u9519\u8bef){\u65e5\u5fd7\u3002Println(&#34\uff1bping Done&#34\uff1b\uff0cErr)}}\uff0c})//\u4e00\u4e9b\u6307\u6807\u6302\u94a9\u3002TRACE=\u8ddf\u8e2a\u3002\u4f5c\u66f2(\u5531\u8bcd)\u3002ClientTrace{OnPing\uff1afunc()func(\u9519\u8bef){start\uff1a=time.\u3002NOW()\u8fd4\u56de\u51fd\u6570(\u9519\u8bef){METRY\uff1a=STATS\u3002\u83b7\u53d6(&#34\uff1bPING_LATHERY&#34\uff1b)\u6307\u6807\u3002\u53d1\u9001(\u65f6\u95f4\u3002\u7531\u4e8e(Start))}}\uff0c})c\uff1a=lib\u3002\u5ba2\u6237\u7aef{\u8ddf\u8e2a\uff1a\u8ddf\u8e2a\uff0c}}\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u7528\u6237\u63d0\u4f9b\u7684\u4e00\u4ef6\u4e8b\u662f\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u8ddf\u8e2a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4e0ehttptrace\u5305\u4e2d\u7684\u5b8c\u5168\u76f8\u540c-\u80fd\u591f\u5c06\u6302\u94a9\u4e0e\u4f20\u9012\u7ed9Client.Request()\u7684context.Context\u76f8\u5173\u8054\u3002\n\u5305\u5e93\u7c7b\u578bclientTraceContextKey struct{}func ClientTrace(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)ClientTrace{t\uff0c_\uff1a=ctx.\u3002value(clientTraceContextKey{})return t}func WithClientTrace(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587\uff0ct ClientTrace)\u4e0a\u4e0b\u6587\u3002context{prev\uff1a=ContextClientTrace(Ctx)\u8fd4\u56de\u4e0a\u4e0b\u6587\u3002WithValue(CTX\uff0cclientTraceContextKey{}\uff0cPrev.\u3002\u4f5c\u66f2(T)\uff0c)}\u3002\n\u54c8\u3002\u770b\u8d77\u6765\u73b0\u5728\u5dee\u4e0d\u591a\u5b8c\u6210\u4e86\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e3a\u6211\u4eec\u7ec4\u4ef6\u7684\u7528\u6237\u5e26\u6765\u6240\u6709\u6700\u597d\u7684\u8ddf\u8e2a\u5de5\u5177\u3002\n\u4f46\u662f\uff0c\u4e3a\u6211\u4eec\u60f3\u8981\u68c0\u6d4b\u7684\u6bcf\u4e2a\u7ed3\u6784\u7f16\u5199\u6240\u6709\u4ee3\u7801\u4e0d\u662f\u771f\u7684\u5f88\u4e4f\u5473\u5417\uff1f\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4e3a\u6b64\u7f16\u5199\u4e00\u4e9bvim\u7684\u5b8f(\u5b9e\u9645\u4e0a\u6211\u4ee5\u524d\u4e5f\u662f\u8fd9\u6837\u505a\u7684)\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u770b\u770b\u66ff\u4ee3\u65b9\u6cd5\u3002\n\u597d\u6d88\u606f\u662f\u5408\u5e76\u94a9\u5b50\u548c\u68c0\u67e5nil\uff0c\u4ee5\u53ca\u7279\u5b9a\u4e8e\u4e0a\u4e0b\u6587\u7684\u51fd\u6570\u90fd\u662f\u6a21\u5f0f\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u5b8f\u6216\u53cd\u5c04\u7684\u60c5\u51b5\u4e0b\u4e3a\u5b83\u4eec\u751f\u6210GO\u4ee3\u7801\u3002\ngtrace\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u4e3a\u4e0a\u9762\u8ba8\u8bba\u7684tracingmethod\u751f\u6210GO\u4ee3\u7801\u3002\u5b83\u5efa\u8bae\u60a8\u4f7f\u7528\u5e26\u6709\u94a9\u5b50\u5b57\u6bb5\u7684\u7ed3\u6784(\u7528//gtrace\uff1agen\u6807\u8bb0)\uff0c\u5e76\u56f4\u7ed5\u5b83\u4eec\u751f\u6210\u5e2e\u52a9\u5668\u51fd\u6570\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5408\u5e76\u8fd9\u6837\u7684\u7ed3\u6784\u5e76\u8c03\u7528\u94a9\u5b50\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u68c0\u67e5\u3002\u5b83\u8fd8\u53ef\u4ee5\u751f\u6210\u4e0a\u4e0b\u6587\u611f\u77e5\u5e2e\u52a9\u5668\u6765\u8c03\u7528\u4e0e\u4e0a\u4e0b\u6587\u76f8\u5173\u8054\u7684\u6302\u94a9\u3002\nPackage lib//go\uff1a\u751f\u6210gtrace//gtrace\uff1agen//gtrace\uff1a\u8bbe\u7f6e\u4e0a\u4e0b\u6587\u7c7b\u578bClientTrace struct{OnPing func()func(Error)}type client struct{Trace ClientTrace conn net\u3002conn}\u51fd\u6570(c*\u5ba2\u6237\u7aef)ping(CTX\u4e0a\u4e0b\u6587\u3002\u4e0a\u4e0b\u6587)(\u9519\u8bef){\u5b8c\u6210\uff1a=c..\u3002\u75d5\u8ff9\u3002onPing(CTX)ERR=\u63ba\u6742(CTX\uff0cc.\u3002conn)\u5b8c\u6210(\u9519\u8bef)\u8fd4\u56de}\u3002\n\u8fd0\u884cGo Generate\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u4f7f\u7528\u5728ClientTrace\u4e2d\u5b9a\u4e49\u7684\u751f\u6210\u7684\u975e\u5bfc\u51fa\u7248\u672c\u7684\u8ddf\u8e2a\u6302\u94a9\u3002\n\u5c31\u8fd9\u6837!\u3002gtrace\u8d1f\u8d23\u6837\u677f\u4ee3\u7801\uff0c\u5e76\u5141\u8bb8\u60a8\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u60a8\u5e0c\u671b\u80fd\u591f\u7531\u7528\u6237\u68c0\u6d4b\u7684\u8ddf\u8e2a\u70b9\u4e0a\u3002\n\u514b\u91cc\u65af\u97e6\u9686\u7684\u6781\u7b80\u4e3b\u4e49C\u5e93\u3002\u6211\u5f88\u4e45\u4ee5\u524d\u8bfb\u8fc7\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5173\u4e8e\u56fe\u4e66\u9986\u5982\u4f55\u7ec4\u7ec7\u7684\u6e05\u6670\u60f3\u6cd5\u7ed9\u4e86\u6211\u7075\u611f\u3002", "note_en": "In this article I will share my thoughts on how Go programs should beinstrumented in a clean and flexible way.\n  Logging, metrics collection and anything that is not related to mainfunctionality of some code, must not appear within that code. Instead, definesome  trace points of the code that can be instrumented by a user.\n    Let\u2019s assume that we have some package called  lib and some  lib.Clientstructure which pings its underlying connection every time while making somerequest.\n package  lib type  Client  struct  {\t conn  net . Conn } func  ( c  * Client )  Request ( ctx  context . Context )  error  {\t if  err  :=  c . ping ( ctx );  err  !=  nil  {\t\t return  err\t }\t // Some logic here.  } func  ( c  * Client )  ping ( ctx  context . Context )  error  {\t return  doPing ( ctx ,  c . conn ) }\n What if we need to write some logs right before and after ping happens? One wayis to inject some logger (or logger interface) into the  Client:\n package  lib type  Client  struct  {\t Logger  Logger\t conn  net . Conn } func  ( c  * Client )  ping ( ctx  context . Context )  ( err  error )  {\t c . Logger . Info ( &#34;ping started&#34; )\t err  =  doPing ( ctx ,  c . conn )\t c . Logger . Info ( &#34;ping done (err is %v)&#34; ,  err )\t return }\n  package  lib type  Client  struct  {\t Logger  Logger\t Metrics  Registry\t conn  net . Conn } func  ( c  * Client )  ping ( ctx  context . Context )  ( err  error )  {\t start  :=  time . Now ()\t c . Logger . Info ( &#34;ping started&#34; )\t err  =  doPing ( ctx ,  c . conn )\t c . Logger . Info ( &#34;ping done (err is %v)&#34; ,  err )\t metric  :=  c . Metrics . Get ( &#34;ping_latency&#34; )\t metric . Send ( time . Since ( start ))\t return  err }\n If we continue to add instrumentation methods to our  Client, we\u2019ll realizesoon that most of its code is related to instrumentation and not to the mainfunctionality of the  Client (which was just a single line with  doPing()call).\n Number of non-coherent (non-related to the main purpose of our  Client) linesof code is just a first problem with that approach.\n What if during operations of your program you realize that the metric name, forexample, is wrong and you should rename it? Or you must use some differentlibrary for logging?\n With approach above you will need to go to the implementation of  Client (andother similar components as well) and change it.\n This means that you are going to change code every time when something that isnot related to component\u2019s  main functionality changes. In other words suchdesign does violate the  SRP principle.\n What if you share your code across multiple programs? What if you even don\u2019tcontrol the consumers of your code at all (and to be honest I suggest treating every package as it reused by unknown number of programs, even if in realityit is only one that yours).\n    In my opinion the right way to do it is to define  trace points (aka  hooks)which user of your code can then initialize with some function (aka  probe)during runtime.\n This still will add some extra code lines for sure, but will also bring theflexibility to users to measure our component\u2019s runtime with any appropriatemethod.\n  Let\u2019s provide almost the same mechanics, but with one change. Instead ofproviding  OnPingStart() and  OnPingDone() hooks, let\u2019s introduce a single OnPing() hook which will be called right before ping and will return acallback, which will be called right after ping. This way we can store somevariables in closure to access them when ping completes (e.g. to calculate pinglatency).\n  package  lib type  Client  struct  {\t OnPing  func ()  func ( error )\t conn  net . Conn } func  ( c  * Client )  ping ( ctx  context . Context )  ( err  error )  {\t done  :=  c . OnPing ()\t err  =  doPing ( ctx ,  c . conn )\t done ( err )\t return }\n Looks neat, but only unless we realize that both  OnPing hook and callback itreturns might be nil:\n func  ( c  * Client )  ping ( ctx  context . Context )  ( err  error )  {\t var  done  func ( error )\t if  fn  :=  c . OnPing ;  fn  !=  nil  {\t\t done  =  fn ()\t }\t err  =  doPing ( ctx ,  c . conn )\t if  done  !=  nil  {\t\t done ( err )\t }\t return }\n Now it is correct and is still good at flexibility and SRP principle, but notso good at code simplicity.\n Before making code simpler let\u2019s cover another problem we have yet withcurrent hooks implementation.\n  How users are going to set up  multiple probes? So, the already mentioned httptrace package has   ClientTrace.compose() method thatmerges two trace structs in third one. So every probe function from resultingtrace will call appropriate probes from previous traces (if they were set).\n So let\u2019s first try to do the same manually (and without  reflect). To do this,we move the  OnPing hook from the  Client to separate structure ClientTrace:\n package  lib type  Client  struct  {\t Trace  ClientTrace\t conn  net . Conn } type  ClientTrace  struct  {\t OnPing  func ()  func ( error ) }\n  func  ( a  ClientTrace )  Compose ( b  ClientTrace )  ( c  ClientTrace )  {\t switch  {\t case  a . OnPing  ==  nil :\t\t c . OnPing  =  b . OnPing\t case  b . OnPing  ==  nil :\t\t c . OnPing  =  a . OnPing\t default :\t\t c . OnPing  =  func ()  func ( error )  {\t\t\t doneA  :=  a . OnPing ()\t\t\t doneB  :=  b . OnPing () \t\t\t switch  {\t\t\t case  doneA  ==  nil :\t\t\t\t return  doneB\t\t\t case  doneB  ==  nil :\t\t\t\t return  doneA\t\t\t default :\t\t\t\t return  func ( err  error )  {\t\t\t\t\t doneA ( err )\t\t\t\t\t doneB ( err )\t\t\t\t }\t\t\t }\t\t }\t }\t return  c }\n Pretty much code for single hook, right? Let\u2019s move forward for now and comeback to this later.\n  package  main import  (\t &#34;log&#34;\t\t &#34;some/path/to/lib&#34; ) func  main ()  {\t var  trace  lib . ClientTrace\t // Logging hooks. \t trace  =  trace . Compose ( lib . ClientTrace {\t\t OnPing :  func ()  func ( error )  {\t\t\t log . Println ( &#34;ping start&#34; )\t\t\t return  func ( err  error )  {\t\t\t\t log . Println ( &#34;ping done&#34; ,  err )\t\t\t }\t\t },\t })\t // Some metrics hooks. \t trace  =  trace . Compose ( lib . ClientTrace {\t\t OnPing :  func ()  func ( error )  {\t\t\t start  :=  time . Now ()\t\t\t return  func ( err  error )  {\t\t\t\t metric  :=  stats . Get ( &#34;ping_latency&#34; )\t\t\t\t metric . Send ( time . Since ( start ))\t\t\t }\t\t },\t })\t c  :=  lib . Client {\t\t Trace :  trace ,\t } }\n  One thing that we also may provide users is context based tracing. That is, theone that is exactly the same as in  httptrace package \u2013 the ability toassociate hooks with  context.Context passed to the  Client.Request().\n package  lib type  clientTraceContextKey  struct {} func  ClientTrace ( ctx  context . Context )  ClientTrace  {\t t ,  _  :=  ctx . Value ( clientTraceContextKey {})\t return  t } func  WithClientTrace ( ctx  context . Context ,  t  ClientTrace )  context . Context  {\t prev  :=  ContextClientTrace ( ctx )\t return  context . WithValue ( ctx ,\t\t clientTraceContextKey {},\t\t prev . Compose ( t ),\t ) }\n Huh. Looks like now it\u2019s almost done, and we are ready to bring all the best ofthe tracing facilities for users of our component.\n But isn\u2019t it really tedious to write all that code for every structure we wantto instrument? Of course, you can write some vim\u2019s macros for this (actually Iused to do them before), but let\u2019s look at alternatives.\n The good news is that merging hooks and checking for nil, as well as contextspecific functions are all quite patterned, so we can generate Go code for themwithout macros or reflection.\n  gtrace is a command line tool that generates Go code for the tracingapproach discussed above. It suggests you to use structures (tagged with //gtrace:gen) with hook fields and generates helper functions around them, sothat you can merge such structures and call the hooks without any checks fornil. It also can generate context aware helpers to call hooks associated withcontext.\n   package  lib //go:generate gtrace  //gtrace:gen //gtrace:set context  type  ClientTrace  struct  {\t OnPing  func ()  func ( error ) } type  Client  struct  {\t Trace  ClientTrace\t conn  net . Conn } func  ( c  * Client )  ping ( ctx  context . Context )  ( err  error )  {\t done  :=  c . Trace . onPing ( ctx )\t err  =  doPing ( ctx ,  c . conn )\t done ( err )\t return }\n After run of  go generate we will be able to use the generated  non-exportedversions of trace hooks we defined in  ClientTrace.\n That\u2019s it!  gtrace takes care of boilerplate code and allows you to focus on trace points you wish to make able to be instrumented by users.\n   Minimalistic C libraries by ChrisWellons. I read this article long time ago and was inspired by that clearthoughts on how libraries could be organized.", "posttime": "2020-05-26 08:31:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56f4\u68cb,instrumentation,\u4ee3\u7801", "title": "\u56f4\u68cb\u4e2d\u7684\u5de5\u5177", "title_en": "Instrumentation in Go", "transed": 1, "url": "https://gbws.io/articles/instrumentation-in-go/", "via": "", "real_tags": ["\u56f4\u68cb", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "3d14f27bac3f4521cc870be1e045907a.jpg", "infoid": 1003735, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba9\u6211\u7684\u8033\u6735\u8d34\u8fd1\u5730\u9762\uff0c\u2026\u3002\u53f2\u8482\u6587\u00b7K\u00b7\u7f57\u4f2f\u8328(Steven K.Roberts)\u5728\u8fd9\u8258\u6781\u5ba2\u8239\u4e0a\u7684\u4e2d\u5fc3\u4e3b\u9898\u4e4b\u4e00\u662f\u6269\u5927\u611f\u5b98\u3002\u6211\u4e00\u76f4\u5bf9\u5404\u79cd\u5f62\u5f0f\u7684\u6570\u636e\u6536\u96c6\u7740\u8ff7\u2026\u3002\u4e0d\u4ec5\u662f\u63ed\u793a\u7cfb\u7edf\u5065\u5eb7\u6216\u73af\u5883\u72b6\u51b5\u7684\u4f20\u611f\u5668\uff0c\u8fd8\u5305\u62ec\u5b9e\u65f6\u4fe1\u606f\uff0c\u5c06\u6211\u7684\u611f\u77e5\u8f6c\u79fb\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u2026\u4e2d\u3002\n\u591a\u8bfb\u3002\n\u628a\u5b83\u5e26\u5230\u5916\u9762\u53bb\uff0ckitty\u2026\u3002\u53f2\u8482\u82ac\u00b7K\u00b7\u7f57\u4f2f\u8328(Steven K.Roberts)\u5728DataWake OK\u4e0a\u5efa\u9020\u4e86\u4e00\u4e2a\u8239\u732b\u732b\u7802\u7bb1\uff0c\u6240\u4ee5\u6211\u627f\u8ba4\u5b83\u662f\u2026\u3002\u6211\u559c\u6b22\u8fd9\u53ea\u732b\u3002\u4f0a\u838e\u8d1d\u5c14\u548c\u6211\u4f4f\u5728\u4e00\u8d77\uff0c\u5979\u80d6\u4e4e\u4e4e\u7684\u53ef\u7231\u7684\u4ee4\u4eba\u656c\u754f\u7684\u8eab\u6750\u5728\u5f88\u591a\u65b9\u9762\u63d0\u9ad8\u4e86\u751f\u6d3b\u8d28\u91cf\u3002\u4f46\u5373\u4f7f\u662f\u4e00\u53ea\u53e4\u602a\u7684\u4fc4\u7f57\u65af\u84dd\u4e5f\u4f1a\u6309\u4e0b\u6240\u6709\u6b63\u786e\u7684\u732b\u54aa\u6309\u94ae\uff0c\u9664\u4e86\u2026\u3002\n\u591a\u8bfb\u3002\n\u591a\u5e74\u6765\uff0c\u6211\u7684\u75f4\u8ff7\u4e4b\u4e00\u662f\u6536\u96c6\u6570\u636e\uff0c\u63a2\u6d4b\u65e0\u7ebf\u7535\u9891\u8c31\uff0c\u611f\u77e5\u6211\u6709\u9650\u7684\u89c6\u89c9\u548c\u542c\u89c9\u8303\u56f4\u4e4b\u5916\u7684\u4fe1\u53f7\uff0c\u4ee5\u53ca\u90e8\u7f72\u63a2\u6d4b\u5668\u6765\u6269\u5927\u6211\u5bf9\u73af\u5883\u7684\u8ba4\u8bc6\u3002\u8fd9\u5bfc\u81f4\u4e86\u5bf9\u6a21\u5f0f\u7684\u8bc6\u522b\uff0c\u66f4\u597d\u5730\u7406\u89e3\u4e86\u4e8b\u7269\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5728\u6280\u672f\u6216\u4eba\u7c7b\u6d3b\u52a8\u7684\u5e55\u540e\u5077\u7aa5\u7684\u5174\u594b\u3002\u8ddf\u8e2a\u2026\u3002\n\u591a\u8bfb\u3002\n\u6211\u65e0\u6cd5\u60f3\u8c61\u5728\u6ca1\u6709\u732b\u7684\u60c5\u51b5\u4e0b\u751f\u6d3b\u5728\u8239\u4e0a\uff0c\u4f0a\u838e\u8d1d\u5c14\u5728\u6e38\u7267\u8005\u53f7\u4e0a\u5446\u4e86\u4e09\u5e74\u540e\u548c\u6211\u4e00\u8d77\u642c\u5230\u4e86Datawake\u3002\u5979\u662f\u4e00\u4e2a\u6301\u7eed\u4e0d\u65ad\u7684\u5feb\u4e50\uff0c\u4f46\u4ecd\u7136\u6709\u4e00\u4e9b\u732b\u79d1\u52a8\u7269\u7684\u73b0\u5b9e\u9700\u8981\u8003\u8651\uff1a\u8fdb\u9910\uff0c\u6dd8\u6c70\u548c\u6293\u6320\u3002\u8003\u8651\u5230\u7a7a\u95f4\u7684\u9650\u5236\u548c\u5904\u7406\u52a8\u6001\u6761\u4ef6\u7684\u9700\u8981\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u8239\u4e0a\u5177\u6709\u6311\u6218\u6027\u3002\u544a\u8bc9\u4e00\u53ea\u732b\u2026\u3002\n\u591a\u8bfb\u3002\n\u53f2\u8482\u6587\u00b7K\u00b7\u7f57\u4f2f\u8328\u6e38\u7267\u7814\u7a76\u5b9e\u9a8c\u5ba4\u53f2\u8482\u6587\u00b7K\u00b7\u7f57\u4f2f\u8328\u6e38\u7267\u7814\u7a76\u5b9e\u9a8c\u5ba4\u5bf9\u6211\u7684\u6d6e\u52a8\u5b9e\u9a8c\u5ba4/\u5de5\u4f5c\u5ba4\u7684\u4e00\u4e2a\u5173\u952e\u8981\u6c42\u662f\u8239\u4e0a\u5fc5\u987b\u6709\u4e00\u67b6\u6570\u5b57\u94a2\u7434\uff0c\u4f46\u6709\u9650\u7684\u7a7a\u95f4\u51b3\u5b9a\u4e86\u4e00\u4e2a\u90e8\u7f72\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u8ba9\u5b83\u5728\u4e0d\u4f7f\u7528\u65f6\u5b58\u653e\u8d77\u6765\u3002\u6211\u56f4\u7ed5\u8fd9\u4e00\u70b9\u8bbe\u8ba1\u4e86\u6e38\u620f\u673a\uff0c\u5e76\u5efa\u9020\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u7eb3\u56db\u5206\u4e4b\u4e00\u5428\u91cd\u7684\u94a2\u7434\u62bd\u5c49\u3002\u62bd\u5c49\u91cc\u7684\u2026\u5f88\u91cd\u8981\u3002\n\u591a\u8bfb\u3002\n\u8fd9\u662f\u624b\u63a8\u8f66\u6c99\u514b\u6258\u666e\u65af\u53f7\u7684\u822a\u7a0b\u3002\u5979\u7684\u6301\u7eed\u4f7f\u547d\u2026\u3002\u5bfb\u627e\u65b0\u7684\u8d1f\u8f7d\u548c\u964c\u751f\u7684\u73af\u5883\u2026\u3002\u5728\u6ca1\u6709\u4eba\u7728\u773c\u7684\u5730\u65b9\u5927\u80c6\u7728\u773c\u3002\u5728\u4e00\u8258\u822a\u884c\u7684\u5e06\u8239\u4e0a\uff0c\u7a33\u5b9a\u7684\u7535\u529b\u968f\u5904\u53ef\u89c1\uff1a\u4e00\u4e2a\u7531\u9694\u79bb\u7684\u5cb8\u4e0a\u7535\u7f06\u548c\u592a\u9633\u80fd\u7535\u6c60\u677f\u5145\u7535\u7684\u5de8\u5927\u7535\u6c60\u7ec4\uff0c\u5e26\u2026\u7684\u67f4\u6cb9\u53d1\u7535\u673a\u7ec4\u3002\n\u591a\u8bfb", "note_en": "Keeping my ear to the ground\u2026 by Steven K. Roberts One of the central themes aboard this geeky ship is expanding the sensorium. I\u2019ve always been fascinated by data collection in all its forms\u2026 not just sensors that reveal system health or the state of\u00a0the environment, but\u00a0real-time information that shifts\u00a0my awareness into a much larger\u2026\n  Read More\n Take it Outside, Kitty\u2026 Building a Boat Cat Litter Box by Steven K. Roberts, aboard\u00a0Datawake OK, so I admit it\u2026 I love this cat. Isabelle lives aboard with me, and her tubby cuddly awesomeness increases the quality of life in lots of\u00a0ways. But\u00a0even a quirky Russian Blue who pushes all the right feline buttons but\u2026\n  Read More\n One of my obsessions over the years has been\u00a0collecting data, probing the radio spectrum, sensing\u00a0outside my limited visual and hearing range, and deploying probes to expand my awareness of the environment. This leads to\u00a0recognition of patterns, better\u00a0understanding of how things work, and the voyeuristic thrill of\u00a0peeking behind the curtains of technology or human activity. Tracking\u2026\n  Read More\n I can\u2019t imagine living aboard without a cat, and Isabelle moved with me to Datawake after three years aboard Nomadness. She\u2019s a constant joy, but there are still\u00a0feline realities that have to be considered: dining, elimination, and scratching. All are challenging\u00a0on a boat, given\u00a0space constraints and the need to handle dynamic conditions. Telling a cat\u2026\n  Read More\n by Steven K. Roberts Nomadic Research Labs A key requirement for my floating lab/studio was to have a digital piano aboard, but limited space dictates a deployment system that\u00a0lets it stow away\u00a0when not in use. I designed the console around this, and built\u00a0a piano drawer that can handle a quarter-ton. It was important that\u00a0the drawer\u2026\n  Read More\n These are the voyages of the hand truck, Shacktopus. Her continuing mission\u2026 to seek out new loads and strange environments\u2026 to boldly blink where no one has blinked before. On a voyaging sailboat, stable power goes with the territory: a huge battery bank charged by isolated shore cable and solar panels, diesel genset with a\u2026\n  Read More", "posttime": "2020-05-26 08:30:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u6280,library,\u5b9e\u9a8c\u5ba4", "title": "Microship.com\uff1a\u79d1\u6280\u56fe\u4e66\u9986", "title_en": "Microship.com: The Library of Technomadics", "transed": 1, "url": "https://microship.com/", "via": "", "real_tags": ["\u79d1\u6280", "library", "\u5b9e\u9a8c\u5ba4"]}]