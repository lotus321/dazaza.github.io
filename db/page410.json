[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1000358, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "3_\u62bd\u51fa5\u4e2a\u6570\u5b57/\u4ece0\u52304 2 2 4/2_\u62bd\u51fa0\u4e2a\u968f\u673a\u6570\u7684\u5217\u8868/\u4ece0\u52301 0.2232866 0.9504653\u76842\u4e2a\u968f\u673a\u5b9e\u6570\u7684\u5217\u8868/Deal\uff1a\u4ece0\u52303 2 0 1 3\u548c4 13_Draw-52\u76844\u4e2a\u968f\u673a\u4e0d\u91cd\u590d\u6570\u5b57\u7684\u5217\u8868/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13)/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13)/\u5c06\u4e00\u526f\u724c\u5206\u6210\u56db\u5806(29 27 10 0 23 3 28 5 24 16 40 8 22\uff1a51 20 36 47 18 31 26 44 37 38 9 13\u3002(39 42 34 50 21 6 19 46 48 45 14 43 2.33 49 4 25 41 30 35 7 32 17 1 12 15)\u548c1 3 4 5 7 9_bin 4\u901a\u8fc7\u5217\u8868\u8fd4\u56de\u7d22\u5f152 1 3 4.\u3002\n\u526f\u8bcd\u8fd9\u5c31\u662fK\u5f00\u59cb\u533a\u522b\u4e8e\u4eca\u5929\u4f7f\u7528\u7684\u5927\u591a\u6570\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u7684\u5730\u65b9\u3002\u60a8\u5f88\u5c11\u7528K\u7f16\u5199\u5faa\u73af(KDB\u662f100%\u65e0\u5faa\u73af\u7684)\uff0c\u800c\u662f\u4f7f\u7528\u526f\u8bcd\u3002\u526f\u8bcd\u4fee\u9970\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u6539\u53d8\u5b83\u5bf9\u5176\u53c2\u6570\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5904\u7406\u5b83\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u91cc\u6709\u51e0\u4e2a\u526f\u8bcd\u7684\u7528\u6cd5\u7cbe\u9009(\u8fd8\u6709\u5176\u4ed6\u7528\u6cd5\u6ca1\u6709\u5728\u8fd9\u91cc\u4ecb\u7ecd)\u3002\u4f8b\u5982\uff1a\u8ba9\u6211\u4e3a\u60a8\u5206\u6790\u4e00\u4e0b\u5c55\u5e73\u3002\u8054\u63a5\u662f\u4e00\u4e2a\u51fd\u6570..\u3002", "note_en": "3_draw 5 \u00a0 \u00a0 \u00a0 \u00a0/ list of 3 random numbers from 0 to 4 2 2 4  \u00a0 2_draw 0 \u00a0 \u00a0 \u00a0 \u00a0/ list of 2 random real numbers from 0 to 1 0.2232866 0.9504653  \u00a0 4_draw-4 \u00a0 \u00a0 \u00a0 \u00a0/ deal: list of 4 random nonrepeating numbers from 0 to 3 2 0 1 3  \u00a0 4 13_draw-52 \u00a0 \u00a0/ deal a deck of cards into four piles (29 27 10 0 23 3 28 5 24 16 40 8 22 \u00a051 20 36 47 18 31 26 11 44 37 38 9 13 \u00a039 42 34 50 21 6 19 46 48 45 14 43 2 \u00a033 49 4 25 41 30 35 7 32 17 1 12 15)  \u00a0 1 3 4 5 7 9_bin 4 \u00a0 \u00a0 / binary search through list returning index 2  1 3 4  ...\n Adverbs This is where K starts to set itself from apart from most of the commonprogramming languages in use today. You rarely write loops in K (KDB is100% loop-free), instead you use adverbs. An adverb modifies a function,returning another function, changing the ways it operates over itsarguments and what it does with it&#39;s return values. Here is a smallselection of adverbs&#39; usages (there are other uses that are not covered here). Examples: Let me break down flatten for you. Join is a function  ...", "posttime": "2020-05-02 21:56:33", "tags": "\u7a0b\u5e8f,\u8bbe\u8ba1,programming language,\u7a0b\u5e8f\u8bbe\u8ba1,introduction", "title": "\u6d45\u8c08K\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00(2002)", "title_en": "A Shallow Introduction to the K Programming Language (2002)", "transed": 1, "url": "https://web.archive.org/web/20070519112242/http://www.kuro5hin.org/story/2002/11/14/22741/791", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7a0b\u5e8f", "\u8bbe\u8ba1", "language", "\u7a0b\u5e8f\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "9ba40a5aa4c962e6db586ef41b25fe54.png", "infoid": 1000357, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u98a4\u632f\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u5f00\u53d1\u4e00\u4e2aCOVID19\u4eea\u8868\u677f\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5e94\u7528\u7a0b\u5e8f\u5c06\u663e\u793aCovid19\u611f\u67d3\u7684\u603b\u7edf\u8ba1\u6570\u636e\u3002\u8fd9\u662f\u4e3a\u521d\u5b66\u8005\u7f16\u5199\u7684\u6251\u7ffc\u6559\u7a0b\u3002\u5728\u672c\u6559\u7a0b\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u80fd\u591f\u5f00\u53d1\u4e00\u4e2a\u4ece\u670d\u52a1\u5668\u83b7\u53d6covid19\u7edf\u8ba1\u6570\u636e\u5e76\u5c06\u5176\u663e\u793a\u5728\u5404\u79cdUI\u5c0f\u90e8\u4ef6\u4e2d\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\nGOOGLE Ffltter\u5f00\u53d1\u7684\u662f\u4e00\u6b3e\u5f00\u6e90\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\u3002Ffltter\u662fGoogle\u7684UI\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u6784\u5efa\u672c\u5730\u7f16\u8bd1\u7684\u8de8\u5e73\u53f0(\u79fb\u52a8\u3001\u7f51\u7edc\u3001\u684c\u9762)\u5e94\u7528\u7a0b\u5e8f\u3002\u6709\u52a9\u4e8e\u5b9e\u73b0\u8de8\u5e73\u53f0\u517c\u5bb9\u7684\u672c\u673a\u6027\u80fd\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u663e\u793a\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u7684\u7edf\u8ba1\u6570\u636e\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\uff1a\n\u98a4\u52a8\u9700\u89812.8 GB\u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c\u5728\u5f00\u59cb\u5b89\u88c5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5b83\u53ef\u7528\u3002Ffltter\u51e0\u4e4e\u6ca1\u6709\u5e38\u89c1\u7684\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982bash\u3001curl\u3001git\u3001zip\uff0c\u60a8\u5fc5\u987b\u5df2\u7ecf\u5728\u60a8\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u4e86\u8fd9\u4e9b\u4f9d\u8d56\u9879\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5\u5b83\u4eec\u3002\n\u8fd9\u5c06\u4e0d\u4f1a\u4e0b\u8f7d\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u3002\u538b\u7f29\u5305\u5927\u5c0f\u7ea6\u4e3a1 GB\uff0c\u56e0\u6b64\u8bf7\u8010\u5fc3\u7b49\u5f85\u4e0b\u8f7d\u3002\u5728\u64b0\u5199\u672c\u535a\u5ba2\u65f6\uff0c\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\u662fv1.12.13+hotfix.9-\u7a33\u5b9a\u3002\n\u5982\u679c\u60a8\u4f7f\u7528zsh\uff0c\u8bf7\u786e\u4fdd\u5728~/.zshc\u6587\u4ef6\u7684\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0a\u884c\u3002\u6dfb\u52a0\u5230\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5c06\u5176\u53cd\u6620\u5230\u60a8\u7684\u8def\u5f84\u4e2d\u3002\n\u5982\u679c\u60a8\u6ca1\u6709Android SDK\uff0c\u8fd9\u5c06\u662f\u60a8\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u9519\u8bef\u3002\nhttps://developer.android.com/studio/index.html&lt\uff1bbr&gt\uff1b(Channel STRATE\uff0cv1.12.13+\u2713.9\uff0c\u5728Mac OS X 10.15.4 19E287\u4e0a\uff0c\u533a\u57df\u8bbe\u7f6een-np\u4e0a)&lt\uff1bbr&gt\uff1b[\u2717]Android\u5de5\u5177\u94fe-\u4e3aAndroid\u8bbe\u5907\u5f00\u53d1&lt\uff1bbr&gt\uff1b\u2717\u627e\u4e0d\u5230Android SDK\u3002&lt\uff1bbr&gt\uff1b\u4ece\uff1afltter\u5b89\u88c5Android Studio\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u5b89\u88c5Android SDK\u7ec4\u4ef6\u3002&lt\uff1bbr&gt\uff1b(\u6216\u8bbf\u95eehttps://flutter.dev/setup/#android-setup\u4e86\u89e3\u8be6\u7ec6\u8bf4\u660e)\u3002&lt\uff1bbr&gt\uff1b\u5982\u679cAndroid SDK\u6709.\u3002\n\u4e00\u65e6\u60a8\u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e86Android studio\uff0c\u5728\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u8bbe\u7f6e\u4e00\u4e9b\u4e1c\u897f\uff0c\u5728\u8fdb\u5165\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\u3002\u8fd9\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u9700\u8981\u66f4\u591a\u7684\u8010\u5fc3\u3002\n\u8981\u4e3aiOS\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u9700\u8981\u5b89\u88c5XCode\u3002\u8fd9\u662fMacOS\u7684\u5e38\u7528\u5f00\u53d1\u5de5\u5177\u3002\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\uff0c\u8bf7\u4ece\u6b64\u5904https://developer.apple.com/xcode/\u4e0b\u8f7d\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u6240\u9700\u7684\u5176\u4ed6XCode\u7ec4\u4ef6\uff1a\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528VS\u4ee3\u7801\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4ecehttps://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\u5b89\u88c5VS\u4ee3\u7801\u7684\u98a4\u52a8\u6269\u5c55\u3002\n\u901a\u8fc7\u8fd0\u884c\u98a4\u632f\u533b\u751f\u547d\u4ee4\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u5b89\u88c5\u4e86\u6240\u6709\u4ece\u5c5e\u8bbe\u5907\u3002\u73b0\u5728\u6211\u4eec\u90fd\u51c6\u5907\u597d\u5b89\u88c5\u4e86\u3002\n\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u7b80\u5355\u3002\u5728\u98a4\u632f\u6559\u7a0b\u7684\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u8fd0\u884c\u5b83\u3002\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u751f\u6210\u98a4\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u5728iOS\u6a21\u62df\u5668\u4e2d\u8fd0\u884c\u7684\u865a\u62df\u5e94\u7528\u7a0b\u5e8f\uff1a\n\u6211\u4eec\u5df2\u7ecf\u4e3aiOS\u6a21\u62df\u5668\u8fdb\u884c\u4e86\u8bbe\u7f6e\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4e5f\u4e3aAndroid\u8bbe\u7f6e\u4e00\u4e2a\u4eff\u771f\u5668\u3002\n\u5728Android\u4e2d\u8bbe\u7f6e\u4eff\u771f\u5668\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u542f\u7528\u865a\u62df\u673a\u52a0\u901f\u3002\u8fd9\u5c06\u6781\u5927\u5730\u63d0\u9ad8\u6027\u80fd\u3002\n\u5728Android Studio\u4e2d\uff0c\u901a\u8fc7\u5de5\u5177&&gt;Android&&gt;AVD\u7ba1\u7406\u5668\u5bfc\u822a\u81f3AVD\u7ba1\u7406\u5668\u3002\u5728\u6b64\u5904\u9009\u62e9\u521b\u5efa\u865a\u62df\u8bbe\u5907\u3002\u73b0\u5728\uff0c\u9009\u62e9\u60a8\u8981\u6a21\u62df\u7684\u8bbe\u5907\u3002\u6211\u5c06\u9009\u62e9`Pixel 3 XL\u3002\u60a8\u4e5f\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u8bbe\u5907\u3002\n\u5728\u6b64\u4e4b\u540e\uff0c\u9009\u62e9\u8bbe\u5907\u7684\u7cfb\u7edf\u6620\u50cf\u3002\u6211\u5c06\u9009\u62e9Android R\u6765\u8fdb\u884c\u4eff\u771f\u3002\u8bf7\u5148\u4e0b\u8f7d\u6620\u50cf\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u5355\u51fbFinish\u6309\u94ae\u542f\u52a8\u8bbe\u5907\u3002\u9009\u62e9\u786c\u4ef6GLES 2.0\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4eff\u771f\u6027\u80fd\u3002\n\u5355\u51fb\u542f\u52a8\u4eff\u771f\u56fe\u6807\u4ee5\u542f\u52a8\u8bbe\u5907\u3002\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u8ba9\u8bbe\u5907\u542f\u52a8\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e24\u4e2a\u4eff\u771f\u8bbe\u5907\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u542f\u7528\u8fd9\u4e24\u4e2a\u8bbe\u5907\u6765\u542f\u52a8FLUTER\u3002\u6309\u2018q\u2019\u9000\u51fa\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528-d\u9009\u9879\u542f\u52a8\uff1a\n\u56e0\u4e3a\u6211\u4eec\u5c06\u4f7f\u7528VS\u4ee3\u7801\u8fdb\u884c\u5f00\u53d1\u3002\u8ba9\u6211\u4eec\u5728VS\u4ee3\u7801\u4e2d\u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939\u3002\u5728VS\u4ee3\u7801\u5de6\u4e0b\u89d2\u7684VS\u4ee3\u7801\u72b6\u6001\u680f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u8981\u5728\u5176\u4e0a\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u5907\u3002\u4ece\u63a7\u5236\u53f0\u505c\u6b62\u4e4b\u524d\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7\u9009\u62e9\u8bbe\u5907\u4eceVS\u4ee3\u7801\u542f\u52a8\u5b83\uff0c\u7136\u540e\u6309f5\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6211\u4eec\u5df2\u7ecf\u628a\u6700\u521d\u7684\u9879\u76ee\u90fd\u51c6\u5907\u597d\u4e86\u3002\u8be5\u9879\u76ee\u5f53\u524d\u662f\u865a\u62df\u7684\uff0c\u5e76\u663e\u793a\u4e86\u70b9\u51fb\u8ba1\u6570\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7528\u4e00\u4e2a\u201chello world\u201d\u5e94\u7528\u7a0b\u5e8f\u6765\u4ee3\u66ff\u5b83\u3002\n//\u7248\u6743\u6240\u67092018\u6251\u7ffc\u5c0f\u5206\u961f\u3002\u7248\u6743\u6240\u6709\u3002//\u6b64\u6e90\u4ee3\u7801\u7684\u4f7f\u7528\u53d7BSD\u6837\u5f0f\u7684\u8bb8\u53ef\u8bc1\u7ba1\u8f96\uff0c\u8be5\u8bb8\u53ef\u8bc1\u53ef\u4ee5//\u5728\u8bb8\u53ef\u8bc1\u6587\u4ef6\u4e2d\u627e\u5230\u3002import&#39\uff1bPackage\uff1aFfltter/Material.dart&39\uff1b\uff1bvoid main()=&gt\uff1brunApp(MyApp())\uff1b\u7c7bMyApp\u6269\u5c55StatelessWidget{@Override Widget Build(BuildContext Context){return MaterialApp(title\uff1a&#39\uff1bWelcome to Ffltter&#39\uff1b\uff0chome\uff1ascaffold(appBar\uff1aAppBar(title\uff1atext(&#39\uff1bWelcome to Ffltter&#39\uff1b)\uff0c)\uff0cBody\uff1a\n\u8fd9\u5c06\u5728\u5c4f\u5e55\u4e0a\u6253\u5370hello world\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6b63\u5728\u5bfc\u5165", "note_en": "In this flutter tutorial, we will be developing a COVID19 dashboard application. This application will display the total stats of covid19 infection. This is a flutter tutorial for beginners. At the end of this tutorial, you will be able to develop a mobile app that fetches covid19 stats data from the server and display them in various UI widgets.\n   Developed by google\u00a0 flutter\u00a0is an open-source software development kit. Flutter is Google\u2019s UI toolkit for building natively compiled cross-platform(mobile, web, desktop) applications. Helps with native performance being cross-platform compatible.\n   In this tutorial, we will be building a flutter app, which displays statistics for the coronavirus cases. This tutorial you will learn to:\n       Flutter requires 2.8 GB of disk space. So make sure you have it available before starting the installation. Flutter has few common dependencies such as bash, curl, git, zip which you must have already installed in your machine. If not you can install them.\n   This will\u00a0 download\u00a0a zipped file. The zip will be around 1GB so be patient with the download. At the time of writing of this blog, the latest stable version is\u00a0 v1.12.13+hotfix.9-stable\n        If you use  zsh, make sure to add the above line at the end of the  ~/.zshrc file. One added to the file run the following to reflect it to your PATH\n  This is the first error you will get if you do not have Android SDK.\n [ \u2713] Flutter (Channel stable, v1.12.13+hotfix.9, on Mac OS X 10.15.4 19E287, locale en-NP)&lt;br&gt;[ \u2717] Android toolchain - develop for Android devices&lt;br&gt; \u2717Unable to locate Android SDK.&lt;br&gt; Install Android Studio from: https://developer.android.com/studio/index.html&lt;br&gt; On first launch it will assist you in installing the Android SDK components.&lt;br&gt; (or visit https://flutter.dev/setup/#android-setup for detailed instructions).&lt;br&gt; If the Android SDK has  ...\n    Once you download and install the android studio, in the first launch it will help you set up a few things, make sure you do it before moving to the next step. This will take some time and needs more patience.\n  To develop apps for iOS you will need XCode installed. This is a common developer tool for macOS. If you have not installed it yet download it from here\u00a0 https://developer.apple.com/xcode/\u00a0. Install required additional XCode components with:\n     I will be using VS code for this tutorial, so make sure to install the flutter extension for VS code from here\u00a0 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\n Check by running the command flutter doctor to ensure that all the dependencies are installed. Now we are all set with the installation.\n  Creating a new flutter app is very simple. In this section of the flutter tutorial, we will learn to create a simple app and run it. Run the following to generate a flutter app.\n      With this you be able to see a dummy app running in the iOS simulator:\n   We already have set up for the iOS emulator. Now let us set up an emulator for Android as well.\n The first thing to set up an emulator in Android is to enable\u00a0 VM acceleration. this will improve the performance drastically.\n In android studio navigate to AVD Manager by\u00a0  tools &gt; Android &gt; AVD Manager.\u00a0Here select\u00a0  Create Virtual Device.\u00a0Now, select the device you want to emulate. I will be selecting\u00a0` Pixel  3 XL.\u00a0You can also select multiple devices.\n  After this select the System image for the device. I will be selecting\u00a0  android R\u00a0for the emulation. Download the image before continuing.\n Now let us start a device by clicking the finish button. Select the  Hardware GLES 2.0 for a better emulation performance.\n Click the launch emulation icon to start the device. Wait a few seconds for the device to boot up.\n Now we have both the emulation devices let us start the fluter by enabling both the device. Press \u2018q\u2019 to quit the running server and start with -d option:\n    Since we will be using the VS code for development. Let us open the project folder in VS Code. In the VS code status bar bottom left corner of VS code you can select the device to start the app on. Stop the previous running server from your console and start it from the VS code by selecting the device and press f5 to launch the app.\n   We have our initial project all setup. The project is currently dummy with the click count being displayed. Now let us replace it with a \u201chello world\u201d app.\n  // Copyright 2018 The Flutter team. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. import &#39;package:flutter/material.dart&#39;; void main() =&gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: &#39;Welcome to Flutter&#39;, home: Scaffold( appBar: AppBar( title: Text(&#39;Welcome to Flutter&#39;), ), body: Center(  ...\n This will print hello world on the screen. Here we are importing the\u00a0 material\u00a0package which contains the material design for the devices.\n  The main method using a one-liner method which calls the  MyApp method. By extending it with\u00a0StatelessWidget\u00a0we are making the MyApp a widget. In flutter, everything is a widget.\n We use the Scaffold widget which have a default  appBar and body layout which is required for most of the application. The\u00a0AppBar\u00a0is another widget and\u00a0Center\u00a0is another widget that aligns the content to the center. Similar for Text widget it displays text.\n  We will be making an HTTP call to a web server to get the data of covid19 stats. For this let us add an HTTP package. To add a package go to  pubspec.yaml file and add the dependency:\n  Once you add this and save the file. The VS code will automatically run you the following command:\n      To fetch the data we can make a fetchData method which uses the HTTP package:\n   The Future keyword we used in the above example is used to handle the async process in Dart. The  http.Response will contain the data received from our API call.\n  { \u00a0Afghanistan: [ \u00a0\u00a0{ \u00a0 \u00a0date: &#34;2020-1-22&#34;, \u00a0 \u00a0confirmed: 0, \u00a0 \u00a0deaths: 0, \u00a0 \u00a0recovered: 0 \u00a0\u00a0}, \u00a0\u00a0{ \u00a0 \u00a0date: &#34;2020-1-23&#34;, \u00a0 \u00a0confirmed: 0, \u00a0 \u00a0deaths: 0, \u00a0 \u00a0recovered: 0 \u00a0\u00a0}, ...\n We get the data from the API call but we are not aware of what the response format would look like. For that let us create a dart class that will store the data in a structured way. this will help us work with the data easily\n class DailyData { \u00a0\u00a0final String date; \u00a0\u00a0final int confirmed; \u00a0\u00a0final int deaths; \u00a0\u00a0final int recovered; \u00a0\u00a0DailyData({this.date, this.confirmed, this.death, this.recovered}); } class CovidData { \u00a0\u00a0final List&lt;DailyData&gt; nepal; \u00a0\u00a0CovidData({this.nepal}); \u00a0\u00a0factory CovidData.fromJson(Map&lt;String, dynamic&gt; json) { \u00a0 \u00a0\u00a0return CovidData( \u00a0 \u00a0 \u00a0\u00a0nepal: json[&#39;Nepal&#39;], \u00a0 \u00a0\u00a0); \u00a0\u00a0} }\n Here we have defined two classes one is the DailyData which is the format for the daily structure and the other is CovidData is for the overall response from the API.\n We have defined the data structure now let us convert the data form API to our data format:\n Future&lt;CovidStatsData&gt; fetchData() async { \u00a0\u00a0final response = await http.get(&#39;&lt;https://pomber.github.io/covid19/timeseries.json&gt;&#39;); \u00a0\u00a0if (response.statusCode == 200) { \u00a0 \u00a0\u00a0return CovidStatsData.fromJson(json.decode(response.body)); \u00a0\u00a0} else { \u00a0 \u00a0\u00a0throw Exception(&#39;Failed to load covid stats&#39;); \u00a0\u00a0} }\n To use the json.decode you need to make sure that the json package is imported\n    Before calling the fetchData method let us consider something. The stateless widget that we have created called MyApp is immutable, that means their value is fixed and cannot be changed. But for this use case we need a changing data to be displayed. So let us create it. To create a stateful widget we need two things:\n   class CovidDataState extends State&lt;CovidData&gt; { \u00a0\u00a0@override \u00a0\u00a0Widget build(BuildContext context) { \u00a0 \u00a0\u00a0final covidStats = fetchData(); \u00a0 \u00a0\u00a0return Text(covidStats.toString()); \u00a0\u00a0} }\n Now let us add the CovidData class which is the dependency for the above class. This is a stateful widget that we will be adding:\n  The build method above is returing a widget. Let us replace our main method to call the CovidData instead the MyApp method. We can delete the MyApp method now.\n  In the CovidDataState we have defined is only rendering the text of  coivdStats instance, let us change that to display something from the response data of the HTTP call we made.\n Let us move the fetchData to the  initState() . We can add it in the build method but flutter calls the method everytime the view needs to change, which we don\u2019t want to.\n class CovidDataState extends State&lt;CovidData&gt; { \u00a0\u00a0@override \u00a0void initState() { \u00a0 \u00a0\u00a0super.initState(); \u00a0 \u00a0\u00a0futureData = fetchData(); \u00a0\u00a0} \u00a0\u00a0Widget build(BuildContext context) { \u00a0 \u00a0\u00a0final covidStats = fetchData(); \u00a0 \u00a0\u00a0return Text(covidStats.toString()); \u00a0\u00a0} }\n Since we want the data to be rendered here and not just the covidStat instant object. Let us modify the CovidStatsData class to return the proper structured data with all the data we need in the required format:\n class CovidStatsData { final List&lt;DailyData&gt; nepal; CovidStatsData({this.nepal}); factory CovidStatsData.fromJson(Map&lt;String, dynamic&gt; json) { List&lt;DailyData&gt; nepal = json[&#39;Nepal&#39;].map&lt;DailyData&gt;( (data) { return DailyData( date: data[&#34;date&#34;], confirmed: data[&#34;confirmed&#34;], deaths: data[&#34;deaths&#34;], recovered: data[&#34;recovered&#34;] ); }).toList(); return CovidStatsData( nepal: nepal, ); } }  ...\n Here the response in fromJson method is converted from dynamic type to DailyData which we can use properly.\n Now, to reflect the data back to the screen, let us modify the CovidDataState class. Here we will be rendering the last date that we have the COVID19 data for:\n class CovidDataState extends State&lt;CovidData&gt; { Future&lt;CovidStatsData&gt; futureData; @override void initState() { super.initState(); futureData = fetchData(); } Widget build(BuildContext context) { return MaterialApp( title: &#39;Fetch Data Example&#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: Text(&#39;Fetch Data Example&#39;), ), body: Center( child: FutureBuilder&lt;CovidStatsData&gt;(  ...\n Here we have used FutureBuilder widget which will help us display loader during the time the API call is being made and also handle any kind of errors present in the while making the API call. Inside the builder, if the snapshot has data we are rendering the data as text.\n   Of course, we do not just want to display the single date data. Let us display all the dates in a list.\n  We want the users to view all the date stats in a list view. This list will be an infinite scrollable list. So let us add a ListView widget with which we will be able to display all the results in a list. This list will contain the date and the number of confirmed cases as well.\n Let us add a component method inside the CovidDataState class which will define how a row will look like:\n final _Font = const TextStyle(fontSize: 18.0); Widget _buildRow(DailyData dailyData) { \u00a0\u00a0return ListTile( \u00a0 \u00a0\u00a0title: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.date, \u00a0 \u00a0 \u00a0\u00a0style: _Font, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0trailing: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.confirmed.toString(), \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0) \u00a0\u00a0); }\n This method job is to return  ListTile. We also have defined a _Font variable which will define the size of the text. The list will have title the date and a trailing data with the total confirmed cases till that date.\n One this method is there we can add this Widget to our body inside the build method which we already have. The build method will now look like follow:\n Widget build(BuildContext context) { return MaterialApp( title: &#39;Fetch Data Example&#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: Scaffold( appBar: AppBar( title: Text(&#39;Fetch Data Example&#39;), ), body: Center( child: FutureBuilder&lt;CovidStatsData&gt;( future: futureData, builder: (context, snapshot) { if (snapshot.hasData) { return ListView.builder( itemCount: snapshot.data.nepal.length, itemBuilder: (context,  ...\n Here we have added the _buildRow method for rendering the  dailyData stats as a list. This is what it looks like now:\n  This looks good, but it has the only list of dates and confirmed cases. Let us add some image on the top of the app to make it more beautiful.\n  In flutter, even the layout mechanism is a widget. If we want to arrange our widgets in a row or in a column we can use this widget. While designing a layout in flutter we can structure it in the following format:\n     Now based on this let us try to add an image on top of the list. For this let us add an image first. I have chosen an image from Unsplash.\n  Let us create an  images folder on the root directory of the project. Inside this image directory let us add the image we downloaded from above.\n This image can now be used to render in our view as a widget. For this let us change our body to be a column inside which we will have an image widget at the top and the listview bellow it. The body code will look like this:\n body: Column( children: [ Image( image: AssetImage(&#39;images/isolation.jpg&#39;), fit: BoxFit.cover, height: 340, ), FutureBuilder&lt;CovidStatsData&gt;( future: futureData, builder: (context, snapshot) { if (snapshot.hasData) { return SizedBox( height: 400, child: ( ListView.builder( itemCount: snapshot.data.nepal.length, itemBuilder: (context, index) { DailyData dailyData = snapshot.data.nepal[index]; return _buildRow(dailyData);  ...\n We are doing great so far. Now let us add some detailed page where we can view the detail of total deaths and recovered for the selected date. Whenever a user taps on an item in the list, it will show detailed stats for the specific day.\n One thing to keep in mind is that a list inside a column can cause issues with the positioning, so make sure to define the box size. Here I have added a SizedBox widget of 400 height so that it can be displayed properly.\n With this, we now will be able to have an image at the top and the list at the bottom.\n   The application currently has a single page. To view more detail on a specific day, we need another page where we can show those details. In this section, we will add a new page that can be navigated when the user touches an item on the list.\n To do this let us first create a new page. For this, we need to create a new file with a new  StatelessWidget . Let us add a file named  detailDailyStats.dart inside the lib folder. This widget will have a simple build method to display the stats:\n import &#39;package:flutter/material.dart&#39;; import &#39;package:my_app/main.dart&#39;; class DetailDailyStats extends StatelessWidget { final DailyData dailyData; DetailDailyStats({Key key, @required this.dailyData }) : super(key: key); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(&#34;Covid19 stats for &#34; + dailyData.date) ), body: Center(child: Text(dailyData.confirmed.toString()),),  ...\n It needs to be initialized with  dailyData that we already have fetched in our main widget. This widget will display the confirmed cases in the Center for now. Now let us add a Navigator widget which will help us navigate to this page on user touch in the list item. Adding a Navigator on touch is very simple for a ListView which we already have. We only need to add an  onTap property:\n Widget _buildRow(BuildContext context, DailyData dailyData) { \u00a0\u00a0return ListTile( \u00a0 \u00a0\u00a0title: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.date, \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0trailing: Text( \u00a0 \u00a0 \u00a0\u00a0dailyData.confirmed.toString(), \u00a0 \u00a0 \u00a0\u00a0style: _biggerFont, \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0onTap: () { \u00a0 \u00a0 \u00a0\u00a0Navigator.push( \u00a0 \u00a0 \u00a0 \u00a0\u00a0context, \u00a0 \u00a0 \u00a0 \u00a0\u00a0MaterialPageRoute(builder: (context) =&gt; DetailDailyStats(dailyData: dailyData)), \u00a0 \u00a0 \u00a0\u00a0); \u00a0 \u00a0\u00a0}, \u00a0\u00a0); }\n   I have made a few changes in ThemeData and the title of the page to make it a red theme. This change can be done MaterialApp widget in the build method of the main widget.\n  Now let us make the second page a little more beautiful. For this let us make a card view where we can disable the stats. To make cards let us create a method, which we can reuse for all the 3 different stats:\n Widget _buildCard(BuildContext context, String stat, Color color) { return Container( padding: EdgeInsets.fromLTRB(10,10,10,0), height: 180, width: double.maxFinite, child: Card( elevation: 5, child: Center( child: Column( mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.center, children: &lt;Widget&gt;[ Text(stat, style: TextStyle( fontSize: 72, height: 0.80, color: color, ), ), ] )  ...\n The widget above is a card with some styling. We have centered the text in the Card and did some text styling. Note that everything is a widget in flutter.\n With this now let us add a ListView where we can display all the stats:\n Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(&#34;Covid19 stats for &#34; + dailyData.date) ), body: Container( child: ListView( children:[ _buildCard(context, dailyData.confirmed.toString(), Colors.blue), Center( child: Text(&#34;Confirmed&#34;, style: TextStyle( fontSize: 20, height: 2, ), ), ), _buildCard(context, dailyData.deaths.toString(), Colors.red), Center( child: Text(&#34;Deaths&#34;,  ...\n We have added three cards here using the method above. The cards will display the confirmed, deaths and recovered stats. The UI looks neat now:\n  Widget _buildRow(BuildContext context, DailyData dailyData, int prevDailyData) { int diff = dailyData.confirmed - prevDailyData; Color color = Colors.grey; if(diff == 0){ color = Colors.green; } else if(diff &gt; 0){ color = Colors.red; } return Card( child: ListTile( leading: Icon(Icons.calendar_today, color: color, size: 24.0, ), title: Text( dailyData.date, style: _biggerFont, ), trailing: Text( dailyData.confirmed.toString(),  ...\n  For the first listing page let us add some icons on the list based on the number of new cases. If there are no new cases we will add a green calendar icon and if there are new cases confirmed we will add a red calendar icon. For this, we need to pass in the previous day stats in the  _buildRow method. So let us modify it and add a check for this:\n  itemBuilder: (context, index) { \u00a0 \u00a0\u00a0int prevDailyData; \u00a0 \u00a0\u00a0if(index &gt; 1){ \u00a0 \u00a0 \u00a0\u00a0prevDailyData = snapshot.data.nepal[index-1].confirmed; \u00a0 \u00a0\u00a0} else { \u00a0 \u00a0 \u00a0\u00a0prevDailyData = 0; \u00a0 \u00a0\u00a0} \u00a0 \u00a0\u00a0DailyData dailyData = snapshot.data.nepal[index]; \u00a0 \u00a0\u00a0return _buildRow(context, dailyData, prevDailyData); \u00a0\u00a0},\n Now we have a red icon when case increase and green when no new cases confirmed.\n   Next, let us add a simple refresh button on the top. This will refresh when a user presses the refresh icon. For this let us add a refresh icon in the  appBar and add some action to it so that we can refresh the data:\n appBar: AppBar( \u00a0 \u00a0\u00a0title: Text(&#39;Covid19 Stats for Nepal&#39;), \u00a0 \u00a0\u00a0actions: &lt;Widget&gt;[ \u00a0 \u00a0 \u00a0\u00a0// action button \u00a0 \u00a0 \u00a0\u00a0IconButton( \u00a0 \u00a0 \u00a0 \u00a0\u00a0icon: Icon(Icons.refresh), \u00a0 \u00a0 \u00a0 \u00a0\u00a0onPressed: () { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0setState(() { futureData = fetchData(); }); \u00a0 \u00a0 \u00a0 \u00a0\u00a0}, \u00a0 \u00a0 \u00a0\u00a0), \u00a0 \u00a0\u00a0] \u00a0\u00a0),\n This is it. Very simple. Just add a  IconButton widget with an icon and a  onPressed property. The  onPressed property will call the setState method. This will change the state of the widget, and will automatically refresh the data. That\u2019s it.\n   Now let us add a drawer on the page to add some menu items. For this tutorial, we only have a single page. But we can add more pages, where we can display charts, news about covid19 and lots more. To do this we need to provide the user a mechanism to navigate to different pages. We can either add tabs or drawers for that. Tabs are used when there are few items to navigate. Drawers are used when there are many.  ...\n  drawer: Drawer( child: ListView( // Important: Remove any padding from the ListView. padding: EdgeInsets.zero, children: &lt;Widget&gt;[ DrawerHeader( child: Text(&#39;Covid19&#39;, style: TextStyle( color: Colors.white, fontSize: 40, ) ), decoration: BoxDecoration( color: Colors.red, ), ), ListTile( title: Text(&#39;STATS&#39;), trailing: Icon(Icons.arrow_right), onTap: () { Navigator.pop(context); Navigator.push(  ...\n Now we have a nice looking drawer. This drawer has a DrawerHeader and ListTile from which we can navigate to different pages. For now, we have only added one item on the menu, this will navigate us to the same page. We can add more menu items and more menu pages to navigate. For navigation, we are adding the Navigator on the onTap property.\n  Flutter has a lot of functionality that we can build. This is all that we are building in this flutter tutorial for beginners.\n There are a few more enhancements that you can work on and build on top of this. Here are a few things for you to try out on:\n When the refresh button in pressed show a loading status before the data gets in\n Note: The app is currently named as my_app I have made changes to the name it as COVID19 instead.", "posttime": "2020-05-02 21:47:40", "tags": "\u6559\u7a0b,flutter,\u63d0\u4f9b,tutorial,\u5b89\u88c5", "title": "\u4e3a\u521d\u5b66\u8005\u63d0\u4f9b\u7684\u98a4\u632f\u6559\u7a0b", "title_en": "Flutter Tutorial for beginners", "transed": 1, "url": "https://milapneupane.com.np/2020/05/01/the-ultimate-flutter-tutorial-for-beginners", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6559\u7a0b", "flutter", "\u63d0\u4f9b", "tutorial", "\u5b89\u88c5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000356, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6211\u4eec\u5728\u8fd9\u91cc\u4e00\u76f4\u5728\u5904\u7406\u5927\u91cf\u7684\u4e34\u5e8a\u8bd5\u9a8c\u6570\u636e\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u4ece\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u4f1a\u6d89\u53ca\u5230\u5176\u4ed6\u4eba\u4e5f\u5728\u8003\u8651\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\u8fd9\u91cc(\u7ecf\u53d1\u4ef6\u4eba\u5141\u8bb8)\u662f\u8fd9\u6837\u7684\u60f3\u6cd5\uff1a\n\u3002\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u4e34\u5e8a\u8bd5\u9a8c\u7684\u5927\u90e8\u5206\u65f6\u95f4\u548c\u8d39\u7528\u4f3c\u4e4e\u771f\u7684\u53ea\u662f\u5b98\u50da\u4f5c\u98ce\u3002\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u51e0\u79cd\u5316\u5408\u7269(\u6709\u4e9b\u662fFDA\u6279\u51c6\u4f46\u4e0d\u518d\u751f\u4ea7\u7684\uff0c\u6709\u4e9b\u662f\u6279\u51c6\u5728\u7f8e\u56fd\u5883\u5916\u751f\u4ea7\u7684\uff0c\u6709\u4e9b\u662f\u5929\u7136\u5b58\u5728\u7684\uff0c\u4f5c\u4e3a\u8865\u5145\u5242\u51fa\u552e)\uff0c\u5982\u679c\u552f\u4e00\u7684\u95ee\u9898\u662f\u201c\u8fd9\u771f\u7684\u6709\u6548\u5417\uff1f\u201d\uff0c\u6211\u771f\u7684\u53ef\u4ee5\u5728\u6211\u7684\u516c\u5bd3\u91cc\u8fdb\u884c\u8bd5\u9a8c\u3002\u5408\u6210\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u4e00\u4e24\u6b65\u57fa\u672c\u8bbe\u5907\u548c\u5e38\u7528\u8bd5\u5242\u5c31\u53ef\u4ee5\u5728\u4f60\u7684\u53a8\u623f\u91cc\u5b8c\u6210\u3002..\u3002\n\u5236\u9020\u5b89\u6170\u5242\u5f88\u5bb9\u6613\uff0c\u683c\u6e29\u751a\u81f3\u6709\u4e00\u4e2a\u5728\u81ea\u5df1\u8eab\u4e0a\u505a\u5b89\u6170\u5242\u5bf9\u7167\u8bd5\u9a8c\u7684\u534f\u8bae(https://www.gwern.net/Nootropics#blinding-yourself)\uff0c)\uff0c\u5c3d\u7ba1\u5982\u679c\u4f60\u628a\u5316\u5408\u7269(\u6216\u5b89\u6170\u5242)\u5bc4\u7ed9\u4eba\u4eec\u5e76\u5728\u5bb6\u91cc\u8fdb\u884c\u968f\u673a\u5316\uff0c\u5373\u4f7f\u662f\u8fd9\u6837\u4e5f\u4e0d\u662f\u5fc5\u8981\u7684\u3002\u800c\u4e14\u5df2\u7ecf\u6709\u4e00\u4e9b\u7814\u7a76\u5b8c\u5168\u5728\u7f51\u4e0a\u6d4b\u8bd5\u836f\u7269\u6548\u679c\uff0c\u4ece\u53d7\u8bd5\u8005\u90a3\u91cc\u6536\u96c6\u4fe1\u606f\uff0c\u4f7f\u7528\u4e00\u4e9b\u76f8\u5f53\u7b80\u5355\u7684\u8f6f\u4ef6(https://selfblinding-microdose.org/-\u56e0\u4e3a\u8ff7\u5e7b\u836f\u7269\u4ecd\u7136\u53d7\u5230\u63a7\u5236\uff0c.\u3002\n\u597d\u7684\uff0c\u6211\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u6765\u81ea\u4e8e\u751f\u7269\u9ed1\u5ba2\u8fd0\u52a8\u3002\u6211\u53ef\u4ee5\u60f3\u8c61\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u5236\u836f\u4e1a\u98ce\u683c\u7684\u4e34\u5e8a\u8bd5\u9a8c\u770b\u8d77\u6765\u786e\u5b9e\u50cf\u662f\u4e00\u573a\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u3001\u6602\u8d35\u7684\u7ea0\u845b\u3002\u4e0d\u8fc7\uff0c\u8bf7\u542c\u6211\u8bf4\uff1a\u6211\u4eec\u8fd9\u6837\u505a\u662f\u6709\u539f\u56e0\u7684\u3002\u6211\u6562\u80af\u5b9a\uff0c\u5176\u4e2d\u4e00\u4e9b\u7406\u7531\u6bd4\u5176\u4ed6\u7684\u66f4\u597d\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u597d\u7684\u7406\u7531\u771f\u7684\u5f88\u597d\u3002\u6211\u4f1a\u6309\u7167\u7535\u5b50\u90ae\u4ef6\u4e2d\u63d0\u5230\u7684\u987a\u5e8f\u6765\u8003\u8651\u8fd9\u4e9b\u5efa\u8bae\uff0c\u5e76\u4e14\u8ba9\u6211\u76f4\u622a\u4e86\u5f53\u5730\u8bf4\uff0c\u6211\u662f.\u3002\n\u9996\u5148\uff0c\u5173\u4e8e\u201c\u5408\u6210\u5f88\u5bb9\u6613\u5728\u4f60\u7684\u53a8\u623f\u91cc\u505a\u201d\u7684\u90e8\u5206\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u76f8\u5f53\u591a\u7684\u836f\u7269\u4e2d\uff0c\u6d3b\u6027\u836f\u7269\u6210\u5206\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u751f\u4ea7\uff0c\u56e0\u4e3a\u52a8\u8bcd\u201cProduction\u201d\u7684\u67d0\u4e9b\u503c\u662f\u8fd9\u6837\u7684\u3002\u4f46\u4e0d\u5e78\u7684\u662f\uff0credesivir(\u9009\u62e9\u4e00\u4e2a\u805a\u5149\u706f\u4e0b\u7684\u4eba)\u4e0d\u5728\u5176\u4e2d\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u5b83\u7684\u5236\u9020\u8fc7\u7a0b\uff0c\u867d\u7136\u4e00\u4e9b\u56f0\u96be\u6765\u81ea\u4e8e\u4e0d\u5f97\u4e0d\u5236\u9020\u65e0\u6570\u5242\u91cf\u7684\u8fd9\u79cd\u6750\u6599\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u662f\u76f4\u63a5\u7f29\u51cf\u5230\u90a3\u4e2a\u5242\u91cf\u7684\u2026\u2026\u3002\n\u5373\u4f7f\u8fd9\u662f\u4e00\u79cd\u4f60\u53ef\u4ee5\u5728\u53a8\u623f\u91cc\u5236\u9020\u7684\u836f\u7269\uff0c\u4f46\u4f60\u6700\u597d\u4e0d\u8981\u53ea\u5236\u9020\u90a3\u4e48\u591a\uff0c\u7136\u540e\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5728\u914d\u65b9\u4e0a\u5c06\u4f1a\u6709\u635f\u5931\uff0c\u800c\u4e14\u63a5\u4e0b\u6765\u4f1a\u6709\u66f4\u591a\u7684\u635f\u5931\u3002\u8bf7\u95ee\u4f60\u4eec\u9700\u8981\u591a\u5c11\uff1f\u55ef\uff0c\u6709\u4e00\u6574\u5bb6\u516c\u53f8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8ba1\u7b97\u4f60\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u53ef\u80fd\u9700\u8981\u591a\u5c11\u201c\u8d85\u9f84\u201d-\u5982\u679c\u4f60\u7528\u5b8c\u4e86\u836f\u7269\uff0c\u4f60\u5c31\u641e\u7838\u4e86\u6574\u4e2a\u8bd5\u9a8c\uff0c\u5982\u679c\u4f60\u8d5a\u5f97\u592a\u591a\uff0c\u4f60\u5c31\u662f\u5728\u6d6a\u8d39\u94b1\u3002\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b58\u5728\u8fd9\u6837\u7684..\u3002\n\u4f46\u662f\u5982\u679c\u4f60\u770b\u8d77\u6765\u5feb\u8981\u7528\u5b8c\u4e86\uff0c\u4f60\u5c31\u4e0d\u80fd\u591a\u505a\u70b9\u5417\uff1f\u8fd9\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u5927\u95ee\u9898\uff1a\u826f\u597d\u7684\u5b9e\u9a8c\u5ba4\u89c4\u8303\u548c\u5f53\u524d\u7684\u826f\u597d\u5236\u9020\u89c4\u8303\u3002\u8fd9\u4e24\u8005\u5927\u81f4\u76f8\u4f3c\uff0c\u4f46\u8981\u6c42\u4e0d\u540c\uff0c\u7528\u9014\u4e5f\u4e0d\u540c\u3002GLP/CGMP\u786e\u5b9e\u589e\u52a0\u4e86\u5b98\u50da\u4f5c\u98ce\uff0c\u56e0\u4e3a\u5b83\u589e\u52a0\u4e86\u5927\u91cf\u6807\u51c6\u5316\u7a0b\u5e8f\u548c\u5927\u91cf\u6587\u6863\u3002\u6211\u4ece\u6765\u6ca1\u6709\u5728\u8fd9\u4e9b\u6807\u51c6\u4e0b\u5de5\u4f5c\u8fc7(\u6211\u505a\u7684\u662f\u65e9\u671f\u7814\u7a76\uff0c\u800c\u4e0d\u662f\u4e34\u5e8a\u6279\u6b21)\uff0c\u2026\u2026\u3002\n\u6211\u4e0d\u60f3\u8be6\u8ff0CGMP\u7684\u7ec6\u8282\uff0c\u4f46\u53ef\u4ee5\u80af\u5b9a\u5730\u8bf4\uff0c\u53a8\u623f\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u3002\u6742\u8d28\u6982\u51b5\u3001\u6279\u6b21\u8bb0\u5f55\u3001\u6240\u6709\u914d\u6599\u548c\u8d77\u59cb\u6750\u6599\u7684\u8ddf\u8e2a\u3001\u6279\u6b21\u4e4b\u95f4\u7684\u53ef\u53d8\u6027\u3002\u3002.\u5373\u4f7f\u53ea\u662f\u5728\u4f60\u771f\u6b63\u5f00\u59cb\u8861\u91cf\u8fd9\u4e9b\u4e8b\u60c5\u4e4b\u524d\u4e3a\u5b83\u4eec\u8bbe\u5b9a\u6b63\u786e\u7684\u6807\u51c6\u4e5f\u662f\u4e00\u9879\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4f60\u7684\u670b\u53cb\u6709\u6838\u78c1\u5171\u632f\u548cLC/MS\u673a\u5668(\u6211\u4e5f\u6709\u4e00\u4e9b\u8fd9\u6837\u7684\u670b\u53cb\uff0c\u6211\u4e0d\u4f1a\u6709\u4efb\u4f55\u5176\u4ed6\u65b9\u5f0f)\uff0c\u8c01\u6765\u4fdd\u7ba1LC/MS\u2026\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u4f60\u6b63\u5728\u5173\u6ce8\u836f\u7269\u7684\u5236\u9020\u548c\u914d\u65b9\uff0c\u4f60\u5230\u5e95\u662f\u5982\u4f55\u914d\u5236\u5b83\u7684\uff1f\u5982\u679c\u5b83\u662f\u7acb\u4f53\u7684\uff0c\u4f60\u5982\u4f55\u786e\u4fdd\u6bcf\u6b21\u90fd\u505a\u51fa\u76f8\u540c\u7684\u7acb\u4f53\u5f62\u72b6\u5462\uff1f\u591a\u6001\u626b\u63cf\u4f3c\u4e4e\u65e0\u7f18\u65e0\u6545\u5730\u51fa\u73b0\u4e86\uff0c\u5e76\u4e14\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u7834\u574f\u4e86\u5f00\u53d1\u65f6\u95f4\u8868\u3002\u5bf9\u4e8e\u8fd9\u79cd\u7269\u8d28\u6765\u8bf4\uff0c\u4f60\u7684\u9897\u7c92\u5927\u5c0f\u5e94\u8be5\u6709\u591a\u7ec6\uff1f\u4f60\u5982\u4f55\u786e\u4fdd\u6bcf\u4e00\u7c92\u836f\u7247\u4e2d\u7684\u9897\u7c92\u5927\u5c0f\u90fd\u662f\u4e00\u6837\u7684\uff1f(\u8fd9\u53ef\u4ee5\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c)\u3002\u4ec0\u4e48\u201c\u8f85\u6599..\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5982\u679c\u4f60\u8ba4\u4e3aCGMP(\u6211\u8fd8\u6ca1\u6709\u6df1\u5165\u5230\u5f88\u8fdc\u7684\u8868\u9762)\u53ea\u662fFDA\u5c55\u793a\u5176\u6743\u529b\u5e76\u5c06\u81ea\u5df1\u53d8\u6210\u74f6\u9888\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\u6301\u4e0d\u540c\u610f\u89c1\uff0c\u786e\u5b9e\u6709\u4eba\u8fd9\u4e48\u8ba4\u4e3a-\u4f46\u8001\u5b9e\u8bf4\uff0c\u8fd9\u4e9b\u4eba\u4e2d\u6ca1\u6709\u591a\u5c11\u4eba\u771f\u6b63\u628a\u836f\u7269\u5e26\u5230\u4e86\u8bca\u6240\uff0c\u8fd9\u4e5f\u662f\u503c\u5f97\u8003\u8651\u7684\u4e8b\u60c5\u3002\u6211\u53ef\u4ee5\u60f3\u8c61\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u7cbe\u7b80\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u6211\u4e0d\u80fd\u60f3\u8c61\u5c31\u8fd9\u6837\u5ffd\u89c6\u5b83\uff0c\u56e0\u4e3a\u6f5c\u5728\u7684\u95ee\u9898\u662f\u2026\u2026\u3002\n\u597d\u7684\uff0c\u73b0\u5728\u5982\u679c\u4f60\u6709\u836f\u4e86\uff0c\u5c31\u662f\u62db\u52df\u75c5\u4eba\u7684\u65f6\u5019\u4e86\u3002\u55ef\uff0c\u5b9e\u9645\u4e0a\uff0c\u5728\u4f60\u5f00\u59cb\u62db\u8058\u4e4b\u524d\uff0c\u662f\u65f6\u5019\u8bbe\u8ba1\u4e00\u4e2a\u8bd5\u9a8c\u4e86\uff0c\u800c\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9886\u57df\u3002\u4f60\u4f1a\u8ba4\u4e3a\u5728\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\u7814\u7a76\u4e00\u79cd\u836f\u7269", "note_en": "Since we\u2019ve been dealing with a lot of clinical trial data around here, I thought I would field a question from my email that might get to some things that others are thinking about as well. Here (with permission of its sender) is the idea:\n . . .it does seem, from the outside, like most of the time and expense of clinical trials really is just bureaucracy. I can easily think of several compounds (some FDA-approved but no longer being made, some approved outside the US, some naturally occurring and sold as supplements) that I could literally run a trial on from my apartment, if the only question were \u201cdoes this actually work? \u201d. The synthesis is easy enough to do in your kitchen, one or two steps with basic equipment and common reagents.  ...\n Making placebos is easy, Gwern even has a protocol for doing a placebo-controlled trial on yourself ( https://www.gwern.net/Nootropics#blinding-yourself),\u00a0although even that wouldn\u2019t be necessary if you mail people the compound (or placebo) and do the randomization at home. And there are already studies that test drug effects, collect information from subjects, etc. entirely online, with some pretty simple software ( https://selfblinding-microdose.org/\u2013since psychedelics are still controlled,  ...\n OK, I can see that some of this query is coming out of the biohacking movement. And I can imagine that from that perspective, a drug-industry-style clinical trial does look like a needlessly complex, expensive tangle. Hear me out, though: there are reasons for doing it the way we do. Some of those reasons are better than others, I \u2019m sure, but the good reasons are in fact really good. I \u2019ll take these suggestions in the order they \u2019re mentioned in the email, and let me say up front that I \u2019m  ...\n First off, the part about \u201cthe synthesis is easy enough to do in your kitchen\u201d. There are indeed quite a few drugs where the active pharmaceutical ingredient could, in fact, be produced that way, for some values of the verb \u201cproduce\u201d. But remdesivir (to pick one that\u2019s in the spotlight) is not one of those, unfortunately. Here\u2019s  a look at its manufacturing, and while some of the difficulties come from having to make zillions of doses of the stuff, some of them scale right back down to that  ...\n Even if this were a drug that you could make in your kitchen, though, you\u2019d better not just make that amount and call it a day. There will be losses in formulation for starters and more losses right down the line. How much do you need? Well, there are  entire companies that  existto help you calculate just how much \u201coverage \u201dyou might need in your clinical trial \u2013if you run out of drug, you \u2019ve blown the whole trial, and if you make too much you \u2019re wasting money. Just the existence of such  ...\n But if you look like you\u2019re running out, can\u2019t you just make more? That brings up another big problem:  Good Laboratory Practices\u00a0and the  Current Good Manufacturing Practices. Those two are broadly similar, but have  different requirements and are used for different purposes. GLP/CGMP does indeed add bureaucracy, because it adds  a lotof standardized procedures and a ton of documentation. I \u2019ve never worked under these standards (I do early stage research, not up next to the clinical batches),  ...\n I won \u2019t go into the details of CGMP, but it \u2019s safe to say that the requirements cannot be met in a kitchen. Impurity profiles, batch documentation, tracking of all ingredients and starting materials, batch-to-batch variability. . .even just setting the right standards for those things before you start measuring them for real is work. So even if your friends have NMR and LC/MS machines available (I have some friends like that, too, and I wouldn \u2019t have it any other way), who keeps the LC/MS  ...\n Keep in mind that you\u2019re watching both the manufacturing of the drug and its formulation, and how exactly do you formulate it? If it\u2019s a solid, how do you make sure that you\u2019ve made the same solid form every time?  Polymorphscan and do appear seemingly out of nowhere and have ruined development timelines again and again. How fine should your particle size be for the substance, and how do you make sure that it \u2019s the same in every pill? (That can made a substantial difference). What \u201cexcipients  ...\n We can disagree at this point if you feel that CGMP (whose surface I have not penetrated very far) is just a way for the FDA to flex its power and turn itself into a bottleneck, and there are indeed people who think that \u2013but to be honest, not many of those people have ever actually taken a drug into the clinic, which is also something to think about. I could imagine streamlining some of this stuff in an emergency, but I can \u2019t imagine just ignoring it, because the underlying issues that  ...\n OK, now if you have your drug, it\u2019s time to recruit patients. Well, actually, it\u2019s time to  design a trial before you start recruiting, and that\u2019s  a whole fieldin itself. You \u2019d figure that studying a single drug in an infectious disease setting might be one of the more simple trial designs, and that \u2019s actually true, but that \u2019s only simple on the relative scale. First off, what are your endpoints \u2013what are you going to measure to see if the drug works? In the case of a coronavirus trial,  ...\n Now, for those decisions. How many doses are you going to check? How do you know you \u2019ve picked the most useful ones? What sorts of patients are you going to recruit? In this case, you have several known variables to consider (or to set aside, if you can make a case for that too): severity of disease, time since onset of symptoms, age, gender, body weight, other medications being taken, known co-morbidities such as hypertension, and so on. While you \u2019re enrolling patients, you \u2019ll need  ...\n The NIAID study ended up recruiting (and dosing, and monitoring) at dozens of clinical centers on several continents just to enroll a properly matched set of 286 treatment patients and 286 control patients, or as properly matched as they could get them under the current conditions. The amount of noise in human clinical data can defy belief if you haven \u2019t seen it in person, and the last thing you want to do is go to the time, trouble, and expense of experimenting on human beings but  ...\n Another factor: you also have to have people in all these locations whose job it is to dose the patients, unfortunately. Mailing participants the drug and asking them to take it will add a lot of unnecessary scatter to the data, because some people will forget to take it. And some of those will try taking double the amount the next day, and some of them won \u2019t be sure if they did the dose yesterday or not. Some of them will have eaten, and some won \u2019t, and some will suddenly remember  ...\n You also need, for both ethical and practical reasons, another set of people who are watching over the whole thing. These folks, the monitoring committee, are the answer to the ancient question of  quis custodiet ipsos custodes, and they will be off to the side of the whole affair, empowered to look at the data being generated at set points during the trial to make sure that things aren \u2019t going off the rails. Most of the time they will say \u201ccarry on \u201d, but a reasonable number of trials  ...\n The big overarching difficulty with running a human trial the way you \u2019re proposing to, though, is that you would open yourself up to criminal prosecution by doing so. The FDA wants to hear about your drug before you give it to human beings: what it is, what you expect it to do and why, the details (GMP!) of how you make it and how you \u2019re sure that you \u2019ve made what you think you \u2019ve made, what your trial design is and why you chose that, and what you \u2019re going to look for as it  ...\n You mention that under your proposal \u201c the data would be noisier than in a traditional Phase II trial, so you\u2019d need a larger sample size\u201d, and I definitely agree about the first part. But as mentioned above, going to a larger sample size under these conditions runs a large risk of just generating every more and louder noise. The amount of noise in human clinical data can defy belief if you haven \u2019t seen it in person. Even under all the constraints and controls that I \u2019ve been describing  ...\n Well, I knew this was going to be a lengthy answer, and I hope it didn\u2019t come across too ranty. The procedures that have grown up around drug development are a sort of  Chesterton\u2019s Fence: we shouldn \u2019t pull them down without considering the reasons why they were put up. I do understand the argument that human lives are at stake when people are dying from a pandemic. But lives are at stake when you test human beings for their response to a new drug, too, and all of the biggest rules  ...\n  I work under cGLP/GMP, and the rules required for them can be picayune and bizarre, even to your typical academic scientist who doesn\u2019t work under those guidelines. However, the best way to describe it is as a return address for everything you do. For everything that can possibly go wrong (and Lord knows, that\u2019s a voluminous and unceasing list), you need to know Why it happened, and explain it in a way that makes the regulators and your bosses happy.\n Even the biohacking movement has *some* regulatory guidelines, even if they\u2019re unseen by endusers. Most of those compounds are made under USP guidelines, most of which can be patched into GLP/GMP without too much of an issue. If you do it in your kitchen, you\u2019re a bad mistake in dishwashing from a lawsuit that would put you out of business.\n  Unfortunately I have seen some \u201cpicayune and bizarre\u201d cGMP interpretations that are promoted as the Gold Standard and thus get followed without true examination of the value they add (or take away) from the process.\n  cGxP applies to instrument and IT systems as well for many the same reasons. Mountains of data will be collected at each of the steps, and systems that generate, retain and report data are formally validated as being fit for purpose, data integrity, etc. Google ALCOA Principles as an FYI.\n Someday all this may be on the cloud as a service, not quite there yet, so data is not something to be farmed out to your nephew who happens to be good at computers.\n  When the lives of people depend on your software you have a similar circus with functional safety. This is the same mixture of being an absolute pain and being necessary for good reasons while many details of the requirements are debatable.\n As an example, when you are flying in a modern plane the pilots no longer control the plane mechanically \u2013 most of that is done by software. When this software crashes, there is a plane full of people that will also crash.\n  Yeah indeed, I\u2019ve worked with DO254 (aviation electronics hardware safety) before and it\u2019s a bit of a chore (particularly when you\u2019re also under ITAR and standard security requirements). I\u2019m glad it exists every time I fly but it takes a certain type of mindest to work well under those restrictions.\n  So, if I haven\u2019t seen it in person, then can the amount of noise in human clinical data defy belief?\n  We shouldn\u2019t let the shop that ground a mirror certify that it\u2019s best for the Hubble. We shouldn\u2019t let the manufacturer certify that their jetliner is airworthy. We shouldn\u2019t let the Drug Company who has an obvious financial interest in the outcome run Phase III clinical studies on its own product.\n  The company can run whatever they want and call it a phase 3, but a \u201csuccessful\u201d phase 3 doesn\u2019t mean that you\u2019ll get approval for your drug. It still has to go through the FDA approval process.\n Yes, the company can improperly influence the FDA into approving something that probably shouldn\u2019t be approved, but that\u2019s a different conversation.\n  Disagree. The beauty of following the rules in prospective, randomized, controlled, double-blinded clinical trials is the answer doesn\u2019t change for you, no matter how much you want it to. All the FDA has to do is make sure the process was followed, including making sure there was enough sufficiently independent oversight.\n The alternative, turning clinical trials over to some other group, misaligns incentives. No other group will be as motivated to do a trial which determines safety and efficacy with minimal wasted resources including time. The company is motivated because it \u2019s necessary to get the treatment approved. The company is paying for this in the hopes of winning the prize of selling the treatment, which is the beauty of capitalism: it pulls on the rope of human desire to have nice  ...\n If you think all Phase III \u2019s are corrupted by being sponsored by a pharmaceutical company, explain why more than half fail. And most of the rest just barely squeak by. Or explain AD trials, where all have failed, despite a $20 billion/year prize if companies can get an approval. And to my knowledge, it \u2019s pretty rare that Ph3 trials are invalidated (meaning proven to be wrong about efficacy/safety, not just testing an unrepresentative population or insufficiently powered,  ...\n  Our current regulatory apparatus is akin to that old joke about democracy: it\u2019s the worst possible form, except for all the other options.\n  Thank you for your continued excellent content in the middle of this time where it is of such importance.\n  From the original e-mail &gt;&gt;heck, there\u2019s 80,000 people on /r/researchchemicals who take experimental compounds just for fun\n  As long as you aren\u2019t messing with controlled substances, the government is quite uninterested in all the different chemicals you choose to give to yourself or why you are doing it. (Okay, they\u2019d prefer you not turn your kitchen into a HazMat site, but that\u2019s not something the FDA cares anything about.)\n  It\u2019s not illegal to win a Darwin Award. It\u2019s just illegal to drag others with you.\n  I was thinking about illegal-drug laws (in the recreational, not medical, sense) not the FDA so much.\n  The 1986 Federal Analogue Act as written seems to cover a whole swathe of these \u2018research chemicals\u2019 by reference to other substances that are controlled, but as enforced in the ground it has been not to universal.\n  Well done and well described. I would have added more details re statistical analyses (especially multiple endpoints) and ongoing safety compilations, but that is only because that is where I worked. Very nice.\n  Any drug developer who\u2019s happy doing their chemistry in a kitchen is probably happy managing their sites from their car and doing their data analysis in a tavern.\n Barry says: We shouldn\u2019t let the Drug Company who has an obvious financial interest in the outcome run Phase III clinical studies on its own product.\n This is just plain wrong, for the precise reason you object to it \u2013 finances. Industry does a far better job, on average, of running trials than government or academia because we devote much greater resources, per data point, than they do. As noted, it\u2019s not perfect but that\u2019s why we have multiple layers of review.\n You want clinical trials controlled by the same scientific politics that are perpetuating the ongoing replication crisis in basic biology?\n  Oh, Boeing has its very ongoing existence invested in proving that the 737MAX is airworthy. That\u2019s not a sound reason to let Boeing certify its airworthyness.\n  Your proposal is not equivalent to saying Boeing shouldn\u2019t be able to certify its planes. It is equivalent to saying they should not be allowed to test them.\n  \u201d is an IND, an Investigational New Drug application, and it is a pain in the rear\u201d\n But isn\u2019t this the main complaint? Bureaucracy is rarely a problem if it operates swiftly \u2013 e.g. few people complain about using their biometric passport to enter the country via automated passport gates. It\u2019s bureaucracy, but it\u2019s fast and painless.\n Could we radically speed up drug development if we increased the FDA budget and mandated lightning speed SLAs for all their approvals?\n Also, wouldn\u2019t we speed up many trials if we dropped the idea of \u201cdo no harm\u201d? This is especially poignant during the COVID crisis \u2013 it seems that regulatory authorities refuse to administer human challenge trials even in the midst of a pandemic that could realistically kill 50 million people around the world of left unchecked.\n  Putting together an IND package is a pain in the rear not because the FDA is being obtuse, but because the questions that need to be answered are tough questions; tough questions that are being asked for good reasons. (As Derek mentions at the end that those questions stem from the hospital beds and graves of the patients that didn\u2019t have the benefit of correct answers to those questions.)\n And a lot of corners *are* being cut for the current pandemic. (How else do you think vaccines are already in clinical trials for a disease that didn\u2019t even exist six months ago? This is a process that would normally still be handled by mice, pigs, monkeys, etc.) And short-circuiting the trial process is how conditional approvals have been granted, also in record time, with standards far lower than we\u2019d normally accept.\n  Yes, you beat me to the conditional acceptance corner-cutting. Hydroxychloroquine demonstrated the problems with that quite ably.\n While it \u2019s rightly not addressed in this post, we \u2019ve got another example of the hazards of corner-cutting going on with all the Covid19 serology tests being commercialized without their false positive and false negative rates being known. I suspect the noise in the resulting test data is going to return to bite the US population rather hard in coming months, if we have problematic testing, inadequate contact tracing, and strong political pressure to get life  ...\n  Fantastic post, thanks. Also then after running the gauntlet of a complete sequence of development, we still don\u2019t always know all we need to about the drug\u2026 Think it also ties to effect size. Most drugs aren\u2019t transforming people\u2019s heathy, rather are having incremental effects in the right direction. You want Everything to be as same as you possibly can (while knowing it can\u2019t truly be) bar the treatment.\n  My understanding from here and other places is there is a history behind this that goes back to the 19th century and well into the 20th. Patent medicine, Adulterated food, The Poison Squad, Cocaine, Heroin, Opium, Nazi human medical experimentation, Thalidomide are just a few of the highlights. Experimentation on humans is not something that is done casually.\n  And for the clinical end of the development, studies are run where the investigators sign and date some documents \u201cmonth / day / year and other documents \u201cday / month /year\u201d and it is a minor infraction if you do the opposite.\n  I did some programming for aviation. There was a lot of \u201cscar tissue\u201d. \u201cWhat\u2019s that code about?\u201d \u201cThere was a crash in \u201993. Pilots should always use full power on that runway.\u201d\n It\u2019s nothing compared to the pharma business. That little reference to unexpected polymorphisms hides a real horror story.\n  I started as a process chemist less than 10 years ago. I\u2019ve had to explain to friends and family that developing a drug, even putting aside the enormous scientific achievements required of the research side of the business, is much more than the chemical synthesis. This is a great explanation and I\u2019ll start reviewing it before family reunions.\n  Why use GMP practices instead of testing the final product. If the final batch is up to standard , why do we care how it was produced? Even the Zantac fiasco was not because of manufacturing defects, it was because the drug degraded that way. If good enough remdesivir can be produced without GMP then for whatever is holly please do. If GMP doesn\u2019t make a difference, then follow it.\n  \u2014 because you cannot inspect quality into a product. In other words, a 50-100 g sample is not representative of a 100 or 500 kg batch \u2026 or, you cannot test 100% of a batch.\n  There are very many answers to your question, but I will just give two\u2026 1) You mention degradation, but that is quite often very sensitive to the purity (and particle size, morphology etc) of both the API and the excipients. The GMP ensures that when the material is produced that it satisfies the criteria that will give a product with a predictable shelf life. Analysis on the final product is not necessarily sufficient, particularly when \u201calmost invisible  ...\n  As a follow on- once a major pharma company used ethanol to clean out a reactor rather than the \u201cstandard\u201d solvent that had been approved for GMP and tox qualified. Unfortunately, the next chemical step used methane sulfonic acid in the synthesis, which produced ethyl mesylate as an impurity. I \u201cthink\u201d that the (very reactive/toxic) ethyl mesylate ended up in the API. It was a couple of years ago- but it is probably in the In the Pipeline files.\n  For a number of years FDA has been advocating Quality by Design which through firm understanding of the manufacturing process and monitoring key quality attributes can minimize the testing in of quality after the fact. Blue sky end objective would be real-time batch release.\n Generally we are not there yet for drug products manufactured for many years (let alone something totally novel) which is why extensive QC testing for batch release and years of follow-up stability testing is done under cGMP.\n  Because you\u2019d like to know that the stuff you make in six months (or next month, or a year) still works and is identical to the stuff you tested to show it works, You\u2019d also like to know if it stops working, why it stopped working, and how to fix it. Not knowing those things means that the test data you got doesn\u2019t apply to what you\u2019re now making, and you don\u2019t know what you claim to know.\n People get cranky when their computers stop working, and that only prevents them from looking at the Internet (and sometimes working, but mostly looking at the Internet). When your drug can make people blind or deaf, or die, people get more protective. COVID-19 isn\u2019t good, but it doesn\u2019t have the death rates of things people already make drugs for and are expected to keep safe.\n  Valsartan contamination was caused by a different production method (solvent, if I remember correctly). But I suppose there is more to it that requires traceability. How far does that traceability go? Across suppliers as well?\n  Giannas Although does involve degradation issues I seem to recall the Zantac problems arose after a change in the manufacturing process involving switch that included use of DMF which introduced trace impurities that react to produce the cancer inducing impurities. The first GMP rule I learned is you can not test Quality into the product where while proper analytical is critical knowledge and control of the entire process is required to assure  ...\n  Testing  for what is the problem that chemists tell me. That you can\u2019t just ask \u201cis this 99.9999999% pure y/n\u201d, you can have a rough test of what\u2019s there, but as far as asking what\u2019s *not* there you need to know what questions to ask. You need to understand the failure modes of the production process.\n  The results seem very dramatic. Any medication that showed an effect like this would have people very excited indeed. Is there something wrong with the study? The number of subjects was 780.\n This was a retrospective study that compared the likelihood of death in three patient groups: normal Vitamin D level in the blood, insufficient Vitamin D level, or deficient Vitamin D level:\n  Even if Vit D deficiency really does correlate with increased risk of death from COVID, as the study claims, that doesn\u2019t mean that giving Vit D itself will help. Patients with Vit D deficiency probably have other issues as well, eg from generally poor nutrition, etc, that could put them at higher risk if death from COVID. In such a case, giving Vit D wouldn\u2019t help.\n Not saying it doesn\u2019t deserve more study, just that going straight to the idea that Vit D itself would reduce deaths is a pretty big leap.\n  You have to work back from the adverse event involved (in this case, \u201cdeath\u201d) and consider  all disease processes involved before you can say whether or not vitamin deficiency was a clinical marker or the actual cause of death. Vitamin D3 deficiency is associated with diabetes, which can cause all sorts of organ damage, including heart disease of various types. But organ damage can have a number of other causes, too.\n The problem with retrospective studies is that they can be highly suggestive of a link to a given disease process, but those trying to use them must consider confounding factors, not all of which might appear in the patient data (was the patient well-nourished? A smoker? A regular drinker of alcohol?).\n This study\u2019s the kind of thing that might give an NIH center reason to commission more studies and either pay for a larger (thousands of patients) retrospective study, or enroll a number of patients into a study which compiled extensive data on each patient\u2019s medical history, their diet, intake of medications and non-prescribed drugs, level of physical activity,  et cetera.\n  Great summary Derek! I believe that thoughtful explanations like yours are really important to address huge misconceptions about therapy development that seem (to me) to be widely held in the general population: -If a potential therapy logically \u2018should\u2019 work, it will work -Drug companies already know everything about their potential therapies right at the start of the development process -The time and expense it takes to bring a potential therapy to market  ...\n As I assume your blog is getting more visits during the pandemic, your consistent education on these points is more important than ever.\n  I started to read this but I got sidetracked imagining using TMSCN in my kitchen.\n  Using chemistry performed by people who don\u2019t necessarily care about the consequences in their end users is likely not a good method by which to make drugs.\n  You mention GMP and GLP, as I would expect a chemist to do (no offense). There \u2019s also GCP (good clinical practice) which governs conduct of a clinical trial. Your post covers some of it, but there \u2019s also regulatory oversight of trial conduct, institutional review boards (IRB also called ethics committees), site inspections, data collection standards that ensure that data can be verified by an outside reviewer, and not changed after the fact (databases  ...\n There \u2019s a lot of skepticism of phase III trials sponsored by pharmaceutical companies. In fact, they are run in a way that allows thorough outside audit of the results, which the FDA usually does before approval. There are many shady practices in the industry, but I don \u2019t know of very many phase III trials that have been shown to be invalid, after drug approval (at least, in US by FDA). The way such trials are run, it \u2019s very difficult to game the  ...\n  Another thing GCP covers is ensuring that of somebody in a trial turns up at an A&amp;E department (or something less dramatic, like becomes pregnant, and being unlikely to become pregnant is often a recruitment criteria for that reason) it is possible for their care team to break the blind and find out what they have been given. There are lots of little corners like this that require you to have planned ahead, and to have the right people on board  ...\n  Thanks, Derek, for comprehensively answering \u201cwhy can\u2019t we ditch all the red tape in clinical trials?\u201d I worked in analysis of the data from human trials (number crunching, not \u201cwhy is this happening?\u201d) for years with various product teams. I got to see a cross-section of the issues involved, from medical experts to tech writers, to statistics (I worked pretty closely with the stats people in most of my projects).\n I didn\u2019t see anyone who was a \u201ctelephone sanitizer\u201d (the useless third of the population Douglas Adams made immortal in  The Hitchhiker \u2019s Guide to the Galaxy) who could have been rounded up and sent off to another solar system with no loss to society. Everyone there was vital to the task of testing new drugs and being as sure as possible they worked (did what they were supposed to, and nothing else significant) and didn \u2019t hurt the patients we tested  ...\n Back in the 1990s when we were doing this, someone i worked with at Lilly estimated getting a drug through clinical testing to NDA approval cost about $300,000/day. I don\u2019t think that included the cost of building pilot plants to make enough study drug to test (at my group in Lilly, that involved a specialized kind of brewery to make huge cultures of recombinant", "posttime": "2020-05-02 21:47:24", "tags": "\u4e34\u5e8a\u8bd5\u9a8c,trials,\u836f\u7269,drug", "title": "\u4e3a\u4ec0\u4e48\u4e34\u5e8a\u8bd5\u9a8c\u5982\u6b64\u590d\u6742\uff1f", "title_en": "Why Are Clinical Trials So Complicated?", "transed": 1, "url": "https://blogs.sciencemag.org/pipeline/archives/2020/05/01/why-are-clinical-trials-so-complicated", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u4e34\u5e8a\u8bd5\u9a8c", "trials", "\u836f\u7269", "drug"]}, {"category": "", "categoryclass": "", "imagename": "ff7eca27b2821f8e8c567bf3a4a6b582.jpg", "infoid": 1000355, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66fc\u54c8\u987f\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u88c1\u5b9a\uff0c\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(Federal Communications Commission)\u5fc5\u987b\u5411\u4e24\u540d\u8bb0\u8005\u63d0\u4f9b\u8bbf\u95ee\u670d\u52a1\u5668\u65e5\u5fd7\u7684\u6743\u9650\uff0c\u8fd9\u4e9b\u65e5\u5fd7\u53ef\u80fd\u4f1a\u4e3a\u8be5\u673a\u67842017\u5e74\u7f51\u7edc\u4e2d\u7acb\u56de\u6eda\u5f15\u53d1\u7684\u6b3a\u8bc8\u6307\u63a7\u63d0\u4f9b\u65b0\u7684\u89c1\u89e3\u3002\n\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u7684\u4e24\u540d\u8bb0\u8005\u5c3c\u53e4\u62c9\u65af\u00b7\u5eb7\u83f2\u7d22\u5c14(Nicholas Confessore)\u548c\u52a0\u5e03\u91cc\u57c3\u5c14\u00b7\u4e39\u65af(Gabriel Dance)\u6839\u636e\u201c\u4fe1\u606f\u81ea\u7531\u6cd5\u201d(Freedom Of Information Act)\u8d77\u8bc9FCC\uff0c\u6b64\u524dFCC\u62d2\u7edd\u4e86\u4ed6\u4eec\u67e5\u770b\u65e5\u5fd7\u526f\u672c\u7684\u8bf7\u6c42\u3002\u65e5\u5fd7\u5c06\u663e\u793a\u57282017\u5e7412\u6708\u7f51\u7edc\u4e2d\u7acb\u6295\u7968\u4e4b\u524d\u53d1\u9001\u7ed9\u8be5\u673a\u6784\u7684\u6570\u767e\u4e07\u6761\u516c\u4f17\u8bc4\u8bba\u80cc\u540e\u7684\u539f\u59cbIP\u5730\u5740\u7b49\u7ec6\u8282\u3002\nFCC\u8bd5\u56fe\u63a8\u7ffb\u8fd9\u7bc7\u8bba\u6587\u7684\u8981\u6c42\uff0c\u4f46\u672a\u80fd\u8bf4\u670d\u5730\u533a\u6cd5\u5b98\u6d1b\u5a1c\u00b7\u65af\u79d1\u83f2\u5c14\u5fb7(Lorna Schofield)\u3002\u5979\u5199\u9053\uff0c\u5c3d\u7ba1\u8be5\u673a\u6784\u63d0\u51fa\u4e86\u9690\u79c1\u95ee\u9898\uff0c\u4f46\u516c\u5e03\u65e5\u5fd7\u53ef\u80fd\u6709\u52a9\u4e8e\u6f84\u6e05\u6b3a\u8bc8\u6d3b\u52a8\u662f\u5426\u5e72\u6270\u4e86\u8bc4\u8bba\u671f\uff0c\u4ee5\u53ca\u8be5\u673a\u6784\u7684\u51b3\u7b56\u8fc7\u7a0b\u662f\u5426\u201c\u5bb9\u6613\u53d7\u5230\u8150\u8d25\u7684\u5f71\u54cd\u201d\u3002\n\u5728\u4e0e\u53bb\u5e74\u6625\u5929\u5173\u4e8e\u865a\u5047\u7f51\u7edc\u653b\u51fb\u7684\u6307\u63a7\u4f5c\u6597\u4e89\u65f6\uff0c\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a(Federal Communications\u2026)\u3002\n\u591a\u8bfb\u3002\n\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u5728\u6cd5\u5ead\u4e0a\u8fa9\u79f0\uff0c\u5c06\u65e5\u5fd7\u4e2d\u5305\u542b\u7684\u6570\u767e\u4e07\u4e2aIP\u5730\u5740\u516c\u4e4b\u4e8e\u4f17\u5c06\u6784\u6210\u201c\u5bf9\u4e2a\u4eba\u9690\u79c1\u7684\u65e0\u7aef\u4fb5\u72af\u201d\u3002\u867d\u7136\u65af\u79d1\u83f2\u5c14\u5fb7\u5e76\u4e0d\u5b8c\u5168\u4e0d\u540c\u610f\uff0c\u4f46\u5979\u8bf4\uff0c\u8be5\u673a\u6784\u672a\u80fd\u5145\u5206\u9610\u660e\u4efb\u4f55\u4eba\u5c06\u5982\u4f55\u53d7\u5230\u62ab\u9732\u7684\u4f24\u5bb3\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u65af\u79d1\u83f2\u5c14\u5fb7\u8bf4\uff0c\u5979\u8fd8\u51b3\u5b9a\u6743\u8861\u4efb\u4f55\u5047\u8bbe\u7684\u4f24\u5bb3\u4e0e\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u516c\u4f17\u7684\u6f5c\u5728\u4ef7\u503c\u3002\u201c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u516c\u4f17\u5bf9\u4fe1\u606f\u62ab\u9732\u7684\u5174\u8da3\u5f88\u5927\uff0c\u56e0\u4e3a\u8bc4\u8bba\u8fc7\u7a0b\u5bf9\u673a\u5173\u89c4\u5219\u5236\u5b9a\u975e\u5e38\u91cd\u8981\uff0c\u201d\u5979\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\uff1a\u201c\u5982\u679c\u771f\u6b63\u7684\u516c\u4f17\u8bc4\u8bba\u88ab\u6b3a\u8bc8\u6027\u4f20\u771f\u6df9\u6ca1\u4e86\uff0c\u90a3\u4e48\u901a\u77e5\u548c\u8bc4\u8bba\u8fc7\u7a0b\u5c31\u5931\u8d25\u4e86\u3002\u201d\n\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u63d0\u8d77\u8bc9\u8bbc\u4e4b\u524d\uff0cGizmodo\u62a5\u9053\u79f0\uff0cFCC\u591a\u6b21\u8bd5\u56fe\u5236\u9020\u9ed1\u5ba2\u653b\u51fb\u5176\u8bc4\u8bba\u7cfb\u7edf\u7684\u62a5\u9053\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u7535\u5b50\u8bc4\u8bba\u5f52\u6863\u7cfb\u7edf(ECFS)\u57282015\u5e74\u548c2017\u5e74\u90fd\u5d29\u6e83\u4e86\uff0c\u4e0a\u5468\u201c\u4eca\u591c\u79c0\u201d\u4e3b\u6301\u4eba\u7ea6\u7ff0\u00b7\u5965\u5229\u5f17(John Oliver)\u6307\u793a\u6570\u767e\u4e07\u89c2\u4f17\u5411\u8be5\u673a\u6784\u53d1\u51fa\u5927\u91cf\u652f\u6301\u7f51\u7edc\u4e2d\u7acb\u7684\u8bc4\u8bba\u3002\n\u4e00\u5e74\u591a\u6765\uff0cFCC\u58f0\u79f0\u6709\u8bc1\u636e\u8868\u660e\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\u653b\u51fb\u662f\u8bc4\u8bba\u7cfb\u7edf\u95ee\u9898\u7684\u5e55\u540e\u9ed1\u624b\u3002\u7136\u800c\uff0c2018\u5e748\u6708\uff0cFCC\u4e3b\u5e2d\u963f\u5409\u7279\u00b7\u6d3e(Ajit Pai)\u7ec8\u4e8e\u627f\u8ba4\u8fd9\u4e0d\u662f\u771f\u7684\u3002\u5728\u76d1\u5bdf\u957f\u7684\u4e00\u4efd\u62a5\u544a\u6ca1\u6709\u53d1\u73b0\u88ad\u51fb\u7684\u8bc1\u636e\u540e\uff0c\u6d3e\u8bd5\u56fe\u5c06\u8d23\u4efb\u5f52\u548e\u4e8e\u4ed6\u7684\u5de5\u4f5c\u4eba\u5458-\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u524d\u603b\u7edf\u5df4\u62c9\u514b\u00b7\u5965\u5df4\u9a6c(Barack Obama)\u3002\nFCC\u63a8\u52a8\u5e9f\u9664\u5965\u5df4\u9a6c\u65f6\u4ee3\u7684\u7f51\u7edc\u4e2d\u7acb\u89c4\u5219\uff0c\u5bfc\u81f4\u8d85\u8fc72200\u4e07\u6761\u8bc4\u8bba\u88ab\u63d0\u4ea4\u3002(\u4f5c\u4e3a\u89c4\u5219\u5236\u5b9a\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u673a\u6784\u88ab\u8981\u6c42\u5f81\u6c42\u516c\u4f17\u610f\u89c1\u3002)\u3002\u53cd\u590d\u8c03\u67e5\u53d1\u73b0\uff0c\u8bb8\u591a\u8bc4\u8bba\u4f3c\u4e4e\u90fd\u662f\u5047\u7684\u3002\u53bb\u5e74\uff0cGizmodo\u8ffd\u8e2a\u5230\u8bb8\u591a\u770b\u4f3c\u865a\u5047\u7684\u8bc4\u8bba\u6307\u5411\u9ed1\u94b1\u56e2\u4f53-\u5305\u62ec\u4e00\u4e9b\u4e0e\u7279\u6717\u666e\u7ade\u9009\u6d3b\u52a8\u6709\u5173\u7684\u56e2\u4f53-\u5176\u4e2d\u8bb8\u591a\u8bc4\u8bba\u662f\u7531\u603b\u90e8\u4f4d\u4e8e\u534e\u76db\u987f\u7279\u533a\u7684CQ\u70b9\u540d\u8282\u76ee\u4e2d\u5fc3\u4e0a\u4f20\u7684\u3002\nFCC\u7f51\u7ad9\u4e0a\u6570\u5341\u540d\u59d3\u540d\u548c\u5730\u5740\u4e0e\u76f8\u540c\u7684\u53cd\u7f51\u7edc\u4e2d\u7acb\u8bc4\u8bba\u4e00\u8d77\u51fa\u73b0\u7684\u4eba\u544a\u8bc9Gizmodo\uff0c\u4ed6\u4eec\u4e0d\u8bb0\u5f97\u63d0\u4ea4\u8fc7\u8fd9\u4e9b\u8bc4\u8bba\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u4eba\u8bf4\u4ed6\u4eec\u751a\u81f3\u4ece\u6765\u6ca1\u6709\u542c\u8bf4\u8fc7\u201c\u7f51\u7edc\u4e2d\u7acb\u201d\u8fd9\u4e2a\u8bcd\u3002\n\u65f6\u62a5\u8d62\u5f97\u7684\u670d\u52a1\u5668\u65e5\u5fd7\u53ef\u80fd\u6709\u52a9\u4e8e\u8bb0\u8005\u63ed\u793a\u865a\u5047\u8bc4\u8bba\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u8fd9\u4e9b\u8bc4\u8bba\u5df2\u7ecf\u4fc3\u4f7f\u7f8e\u56fd\u53f8\u6cd5\u90e8\u548c\u7ebd\u7ea6\u5dde\u603b\u68c0\u5bdf\u957f\u529e\u516c\u5ba4\u5c55\u5f00\u8c03\u67e5\u3002\u6cd5\u5ead\u8bb0\u5f55\u663e\u793a\uff0c\u81f3\u5c11\u5728\u4e00\u5f00\u59cb\uff0c\u65f6\u62a5\u8bb0\u8005\u5173\u6ce8\u7684\u662f\u4e00\u7bc7\u58f0\u79f0\u8fd150\u4e07\u6761\u8bc4\u8bba\u53ef\u80fd\u4e0e\u4fc4\u7f57\u65af\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\u6709\u5173\u7684\u62a5\u9053\u3002\nPai\u57282018\u5e74\u7684\u4e00\u4efd\u673a\u6784\u5907\u5fd8\u5f55\u4e2d\u8868\u793a\uff0c\u4fc4\u7f57\u65af\u8d26\u6237\u662f50\u4e07\u6761\u8bc4\u8bba\u7684\u5e55\u540e\u9ed1\u624b\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u4e8b\u5b9e\u201d\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u7684\u5f8b\u5e08\u5728\u6cd5\u5ead\u4e0a\u8fa9\u79f0\u6070\u597d\u76f8\u53cd\u3002", "note_en": "A Manhattan federal judge has ruled the Federal Communications Commission must provide two reporters access to server logs that may provide new insight into the allegations of fraud stemming from agency\u2019s 2017 net neutrality rollback.\n  A pair of New York Times reporters\u2014Nicholas Confessore and Gabriel Dance\u2014sued the FCC under the Freedom of Information Act after it   refused their request to view copies of the logs. The logs will show, among other details, the originating IP addresses behind the millions of public comments sent to the agency ahead of the December 2017 net neutrality vote.\n The FCC attempted to quash the paper\u2019s request but failed to persuade District Judge Lorna Schofield, who wrote that, despite the privacy concerns raised by the agency, releasing the logs may help clarify whether fraudulent activity interfered with the comment period, as well as whether the agency\u2019s decision-making process is \u201cvulnerable to corruption.\u201d\n   As it wrestled with accusations about a fake cyberattack last spring, the Federal Communications\u2026\n Read more\n The FCC argued in court that making the millions of IP addresses contained in the logs publicly accessible would constitute an \u201cunwarranted invasion of personal privacy.\u201d And while Schofield didn\u2019t entirely disagree, she said the agency had failed to adequately spell out how anyone would be harmed by the disclosure.\n   Regardless, Schofield said she also decided to weigh any hypothetical harm against the potential value of the information to the public. \u201cIn this case, the public interest in disclosure is great because the importance of the comment process to agency rulemaking is great,\u201d she said, adding: \u201cIf genuine public comment is drowned out by a fraudulent facsimile, then the notice-and-comment process has failed.\u201d\n  The Times\u2019 lawsuit follows reporting by Gizmodo that exposed   multiple attempts by the FCC to   manufacture stories about hackers attacking its comment system. In reality, the Electronic Comment Filing System (ECFS) crashed, both in 2015 and 2017, after  Last Week Tonight host John Oliver instructed millions of his viewers to flood the agency with pro-net neutrality comments.\n   For over a year, the FCC claimed to have proof that distributed denial-of-service (DDoS) attacks were behind the comment system issues. In August 2018, however, FCC Chairman Ajit Pai finally admitted that wasn\u2019t true. After an   inspector general report found no evidence of an attack, Pai sought to   pin the blame on his staff\u2014and, for some reason, former President Barack Obama.\n  The FCC\u2019s push to repeal the Obama-era net neutrality rules resulted in more than 22 million comments being filed. (As part of its rulemaking process, the agency is required to solicit comments from the public.) Repeated investigations have found that many of the comments appear to be fake. Last year, Gizmodo traced numerous seemingly fake comments to   dark money groups\u2014including some with   links to the Trump campaign\u2014many of which had been uploaded by CQ Roll Call, a Washington D.C.-based  ...\n   Dozens of people whose names and addresses appeared alongside identical anti-net neutrality comments on the FCC\u2019s website told Gizmodo they had no memory of filing the comments. Some, in fact, said they had never even heard of the term \u201cnet neutrality.\u201d\n The server logs won by the Times may aid reporters in shining a light on the culprit (or culprits) responsible for the fake comments, which have already spurred investigations at the U.S. Justice Department and the New York attorney general\u2019s office. Court records show Times reporters were, at least initially, focused on   a report that claimed nearly half a million comments could be tied to Russian email accounts.\n  Pai stated in an   agency memo in 2018 that it was a \u201cfact\u201d that Russian accounts were behind the half-million comments. His attorneys, meanwhile, were   arguing the exact opposite in court.", "posttime": "2020-05-02 21:47:18", "tags": "ip,neutrality,\u8bc4\u8bba,agency", "title": "\u6cd5\u5b98\u547d\u4ee4FCC\u63d0\u4ea4\u94fe\u63a5\u5230\u865a\u5047\u7f51\u7edc\u4e2d\u7acb\u8bc4\u8bba\u7684IP\u5730\u5740", "title_en": "Judge Orders FCC to Hand IP Addresses Linked to Fake Net Neutrality Comments", "transed": 1, "url": "https://gizmodo.com/judge-orders-fcc-to-hand-over-ip-addresses-linked-to-fa-1843202071", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["ip", "\u8bc4\u8bba", "agency"]}, {"category": "", "categoryclass": "", "imagename": "c81364d1d36e71c39d5ae5e8feac8c25.png", "infoid": 1000354, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u8005\u8d21\u732e\uff1aE.K.W.\uff0cA.N.Q\u548cJ.A.M.\u6982\u5ff5\u5316\uff1bE.K.W.\u548cA.N.Q.\u5f62\u5f0f\u5206\u6790\uff1bE.K.W.\uff0cA.N.Q\uff0cC.A.S.\uff0cA.W.N.\u548cG.D.\u8c03\u67e5\uff1bE.K.W.\uff0cA.N.Q\uff0cC.A.S.\uff0cA.W.N.\uff0cG.D.\u548cJ.A.M.\u65b9\u6cd5\u8bba\uff1bE.K.W.\u548cJ.A.M.\u5199\u4f5c-\u539f\u7a3f\uff1bE.K.W.\u3001A.N.Q\u3001C.A.S.\u3001A.W.N.\u3001G.D.\u548cJ.A.M.\u5199\u4f5c-\u5ba1\u67e5\u548c\u7f16\u8f91\uff1bA.N.Q.\u6570\u636e\u7ba1\u7406\uff1bA.W.N.\u548cJ.A.M.\u76d1\u7763\uff1bJ.A.M.\u8d44\u91d1\u83b7\u53d6\uff1bJ.A.M.\u9879\u76ee\u7ba1\u7406\u3002\nT\u7ec6\u80de\u53d7\u4f53(TCR)\u4f5c\u4e3a\u6cbb\u7597\u836f\u7269\u548c\u6297\u4f53\u6837\u8bd5\u5242\u5728\u76d1\u6d4b\u75be\u75c5\u8fdb\u5c55\u548c\u75ab\u82d7\u6548\u529b\u65b9\u9762\u5177\u6709\u76f8\u5f53\u5927\u7684\u6f5c\u529b\u3002\u6297\u4f53\u53ea\u80fd\u8bc6\u522b\u5206\u6ccc\u7684\u548c\u8868\u9762\u7ed3\u5408\u7684\u86cb\u767d\uff0c\u800cTCR\u5219\u8bc6\u522b\u539f\u672c\u65e0\u6cd5\u63a5\u89e6\u5230\u7684\u4e0e\u75be\u75c5\u76f8\u5173\u7684\u7ec6\u80de\u5185\u86cb\u767d\uff0c\u5f53\u5b83\u4eec\u88ab\u5448\u73b0\u4e3a\u4e0e\u4e3b\u8981\u7ec4\u7ec7\u76f8\u5bb9\u6027\u590d\u5408\u4f53(PMHC)\u7ed3\u5408\u7684\u52a0\u5de5\u80bd\u65f6\u3002TCR\u4e3b\u8981\u88ab\u63a2\u7d22\u7528\u4e8e\u764c\u75c7\u6cbb\u7597\uff0c\u4f46\u4e5f\u53ef\u80fd\u9488\u5bf9\u611f\u67d3\u6027.", "note_en": "Author contributions: E.K.W., A.N.Q., and J.A.M. conceptualization; E.K.W. and A.N.Q. formal analysis; E.K.W., A.N.Q., C.A.S., A.W.N., and G.D. investigation; E.K.W., A.N.Q., C.A.S., A.W.N., G.D., and J.A.M. methodology; E.K.W. and J.A.M. writing-original draft; E.K.W., A.N.Q., C.A.S., A.W.N., G.D., and J.A.M. writing-review and editing; A.N.Q. data curation; A.W.N. and J.A.M. supervision; J.A.M. funding acquisition; J.A.M. project administration.\n  T-cell receptors (TCR) have considerable potential as therapeutics and antibody-like reagents to monitor disease progression and vaccine efficacy. Whereas antibodies recognize only secreted and surface-bound proteins, TCRs recognize otherwise inaccessible disease-associated intracellular proteins when they are presented as a processed peptide bound to a major histocompatibility complex (pMHC). TCRs have been primarily explored for cancer therapy applications, but could also target infectious  ...", "posttime": "2020-05-02 21:47:12", "tags": "app,\u7ec6\u80de,creates,\u7ed3\u5408,disease", "title": "\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u521b\u9020\u51fa\u50cf\u6297\u4f53\u4e00\u6837\u81ea\u7531\u5faa\u73af\u7684T\u7ec6\u80de\u53d7\u4f53", "title_en": "New approach creates T-cell receptors that circulate freely like antibodies", "transed": 1, "url": "https://www.jbc.org/content/early/2019/02/22/jbc.RA118.007187", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["app", "\u7ec6\u80de", "creates", "\u7ed3\u5408", "disease"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000353, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Design Squigle\u662f\u5bf9\u8bbe\u8ba1\u8fc7\u7a0b\u7684\u7b80\u5355\u8bf4\u660e\u3002\u7814\u7a76\u3001\u53d1\u73b0\u6d1e\u5bdf\u529b\u3001\u4ea7\u751f\u521b\u9020\u6027\u6982\u5ff5\u3001\u539f\u578b\u8fed\u4ee3\u5e76\u6700\u7ec8\u5728\u4e00\u4e2a\u8bbe\u8ba1\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u7ed3\u675f\u7684\u65c5\u7a0b\u3002\u5b83\u610f\u5728\u4f20\u8fbe\u65c5\u9014\u7684\u611f\u89c9\u3002\u4ece\u6df7\u4e71\u548c\u4e0d\u786e\u5b9a\u7684\u5de6\u8fb9\u5f00\u59cb\uff0c\u5230\u53f3\u8fb9\u7ed3\u675f\uff0c\u53ea\u6709\u4e00\u4e2a\u7126\u70b9\uff1a\u8bbe\u8ba1\u3002\u8bf7\u968f\u65f6\u4e0b\u8f7d\u63d2\u56fe\u5e76\u4f7f\u7528\u3002\u5b83\u5728\u8fd9\u91cc\u4ee5\u77e5\u8bc6\u5171\u4eab\u7248\u6743\u7684\u5f62\u5f0f\u5171\u4eab\uff0c.", "note_en": "The Design Squiggle is a simple illustration of the design process. The journey of researching, uncovering insights, generating creative concepts, iteration of prototypes and eventually concluding in one single designed solution. It is intended to convey the feeling of the journey. Beginning on the left with mess and uncertainty and ending on the right in a single point of focus: the design.  Please feel free to download the illustration and use it. It is shared here under a Creative Commons Copyright,  ...", "posttime": "2020-05-02 21:47:06", "tags": "\u8bbe\u8ba1,design,creative", "title": "\u8bbe\u8ba1\u7684\u4e71\u4e03\u516b\u7cdf", "title_en": "The Design Squiggle", "transed": 1, "url": "https://thedesignsquiggle.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u8bbe\u8ba1", "design", "creative"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Apache2 Debian\u6d4b\u8bd5\u9875\u8be5\u9875\u4ec5\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684", "note_en": "Apache2 Debian Test Page  The page is only for testing purpose", "posttime": "2020-05-02 21:47:03", "tags": "vps,usd,\u6d4b\u8bd5,page", "title": "\u6bcf\u6708\u6d4b\u8bd51\u7f8e\u5143VPS CPU", "title_en": "Testing 1 USD a month VPS CPU", "transed": 1, "url": "http://vps.novateg.com/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["vps", "usd", "\u6d4b\u8bd5", "page"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000350, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5206\u6563\u7684\u3001\u79c1\u6709\u7684\u3001\u5b89\u5168\u7684\u548c\u514d\u8d39\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u83b7\u53d6\u5f00\u59cb\u6784\u5efa\u6240\u9700\u7684\u5de5\u5177\u548c\u652f\u6301\u3002\n\u60a8\u7684\u7528\u6237\u7684\u9690\u79c1\u548c\u533f\u540d\u6027\u3002\u6bcf\u4e2a\u4eba\u7684\u5b89\u5168\u8bbf\u95ee(SAFE)\u7f51\u7edc\u7684\u5efa\u7acb\u662f\u4e3a\u4e86\u7528\u5185\u7f6e\u7684\u52a0\u5bc6\u901a\u4fe1\u6765\u5426\u5b9a\u4e92\u8054\u7f51\u5165\u4fb5\u8005\u7684\u7aa5\u63a2\u3002\n\u6613\u4e8e\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u7684API\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7f16\u7801\u3002\u8fd9\u91cc\u65e0\u9700\u62c5\u5fc3\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u6216\u6269\u5c55\u6210\u672c\uff01\n\u7528\u6237\u59cb\u7ec8\u63a7\u5236\u7740\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u968f\u7740\u7f51\u7edc\u7684\u8d27\u5e01\u5316\uff0c\u4f60\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6700\u597d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4f60\u7684\u7528\u6237\u6389\u4ee5\u8f7b\u5fc3\u3002\n\u60a8\u4e0d\u9700\u8981\u6eda\u52a8\u81ea\u5df1\u7684\u5e10\u6237\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\uff0c\u7528\u6237\u53ea\u9700\u5728\u7f51\u7edc\u7ea7\u522b\u767b\u5f55\u4e00\u6b21\u3002\u6709\u4e86\u4fdd\u9669\u7bb1\uff0c\u60a8\u518d\u4e5f\u4e0d\u4f1a\u4e22\u5931\u5bc6\u7801\u4e86\uff01\n\u6709\u4e86\u7528\u6237\u62e5\u6709\u7684\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u8de8\u5e94\u7528\u7a0b\u5e8f\u5171\u4eab\u6570\u636e\uff0c\u4ee5\u65b0\u7684\u65b9\u5f0f\u521b\u5efa\u548c\u91cd\u7528\u6570\u636e\u96c6\uff01\n\u5b89\u5168\u7f51\u7edc\u4e2d\u6d89\u53ca\u7684\u7ec4\u4ef6\u5305\u62ec\u5ba2\u6237\u7aef\u3001\u4fdd\u9669\u5e93\u3001\u8def\u7531\u548c\u4f4e\u7ea7\u7f51\u7edc\u3002\n\u6838\u5fc3\u6280\u672f\u3002\n\u684c\u9762\u3001Web\u548c\u79fb\u52a8Dapp\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6784\u5efa\u5728\u5b89\u5168\u7f51\u7edc\u4e0a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u5c06\u60a8\u7684\u60f3\u6cd5\u5e26\u5230\u65b0\u7684\u3001\u5206\u6563\u7684\u4e92\u8054\u7f51\u4e0a\u3002\n\u793a\u4f8bDapp\u3002\nPARSEC(Protocol for Achronous\uff0cReliable\uff0cSecure and Efficient Consensus\uff0c\u5f02\u6b65\u3001\u53ef\u9760\u3001\u5b89\u5168\u548c\u9ad8\u6548\u4e00\u81f4\u6027\u534f\u8bae)\u662f\u4e00\u79cd\u5141\u8bb8\u8282\u70b9\u5728\u5206\u6563\u7684\u7f51\u7edc\u4e2d\u8fbe\u6210\u6709\u5e8f\u4e00\u81f4\u6027\u7684\u7b97\u6cd5\u3002\n\u4f7f\u7528Parsec", "note_en": "Decentralised, private, secure and infrastructure free. Get the tools and support you need to start building.\n Privacy and anonymity for your users. The Secure Access for Everyone (SAFE) Network is built to negate the prying eyes of internet interlopers with built-in encrypted communications.\n Easy to use APIs in many languages, means you can focus on coding. No need to worry about your infrastructure or scaling costs here!\n  Users are always in control of their data, and with monetisation being built into the network, you can focus on making the best app, without selling your users short.\n You don\u2019t need to roll-your-own account management solutions, users log in once at the network level. With SAFE you have no passwords left to lose!\n With data owned by users, you can share data across applications to create and reuse data sets in new ways!\n The components involved in the SAFE Network range from clients, vaults, routing and low level networking.\n Core Technology\n Desktop, Web and Mobile DApps can all easily be built on the SAFE Network. You can work with several languages to bring your ideas to the new, decentralised internet.\n Example DApps\n PARSEC (Protocol for Asynchronous, Reliable, Secure and Efficient Consensus) is an algorithm which allows nodes to reach ordered consensus in a decentralised network.\n Use PARSEC", "posttime": "2020-05-02 21:46:42", "tags": "rust,app,\u5b89\u5168,p2p,\u7f51\u7edc", "title": "\u5b89\u5168\u7f51\u7edc\u3002\u5b89\u5168P2P APP\u7cfb\u7edf\u5728Rust\u4e2d\u7684\u5b9e\u73b0", "title_en": "Safe Network. Secure P2P app system implemented in Rust", "transed": 1, "url": "https://hub.safedev.org/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["rust", "app", "\u5b89\u5168", "p2p", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000348, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u8d85\u7ea7\u7b80\u5355\u7684\u5f85\u529e\u4e8b\u9879\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u5c06\u4efb\u52a1\u5206\u7c7b\u5230\u9879\u76ee\u4e2d\uff0c\u5e76\u5c06\u4efb\u52a1\u5206\u7c7b\u4e3a\u4e09\u5217\uff1a&#34\uff1bTODO&34\uff1b\u3001&#34\uff1bDO&#34\uff1b\u548c&#34\uff1bDone&#34\uff1b\u3002\u6bcf\u4e2a\u521b\u5efa\u7684\u4efb\u52a1\u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2aID\u3002\u66f4\u6539\u4efb\u52a1\u7684\u6bcf\u4e2a\u547d\u4ee4\u90fd\u9700\u8981\u4e00\u4e2a\u4efb\u52a1ID\u3002", "note_en": "This is a super simple todo app. You can sort your tasks into projects and sort your task into three columns,  &#34;TODO&#34;,  &#34;DOING&#34; and  &#34;DONE&#34;. Every created tasks gets automatically assigned an id. Every command that changes a task requires a task ID.", "posttime": "2020-05-02 21:45:34", "tags": "\u4efb\u52a1,manager,task", "title": "Bash\u4e2d\u7684\u4efb\u52a1\u7ba1\u7406\u5668", "title_en": "Task Manager in Bash", "transed": 1, "url": "https://github.com/magtastic/bashtodo", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u4efb\u52a1", "manager", "task"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000347, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "DIXED\u5e2e\u52a9\u6df1\u5ea6\u5b66\u4e60\u56e2\u961f\u66f4\u5feb\u5730\u57f9\u8bad\u6a21\u578b\uff0c\u8f7b\u677e\u5171\u4eabGPU\u8d44\u6e90\uff0c\u5e76\u6709\u6548\u534f\u4f5c\u3002Desired\u5141\u8bb8\u6df1\u5165\u5b66\u4e60\u7684\u5de5\u7a0b\u5e08\u4e13\u6ce8\u4e8e\u5927\u89c4\u6a21\u6784\u5efa\u548c\u57f9\u8bad\u6a21\u578b\uff0c\u800c\u65e0\u9700\u62c5\u5fc3DevOps\u6216\u4e3a\u5e38\u89c1\u4efb\u52a1(\u5982\u5bb9\u9519\u6216\u5b9e\u9a8c\u8ddf\u8e2a)\u7f16\u5199\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002\n\u60a8\u53ef\u4ee5\u5c06Desired\u770b\u4f5c\u662f\u4e00\u4e2a\u5e73\u53f0\uff0c\u5b83\u53ef\u4ee5\u5f25\u5408TensorFlow\u548cPyTorch\u7b49\u5de5\u5177\u4e4b\u95f4\u7684\u5dee\u8ddd-\u8fd9\u4e24\u4e2a\u5de5\u5177\u975e\u5e38\u9002\u5408\u4f7f\u7528\u5355\u4e2aGPU\u7684\u5355\u4e2a\u7814\u7a76\u4eba\u5458-\u4ee5\u5e94\u5bf9\u968f\u7740\u56e2\u961f\u3001\u96c6\u7fa4\u548c\u6570\u636e\u96c6\u7684\u89c4\u6a21\u4e0d\u65ad\u589e\u5927\u800c\u5927\u89c4\u6a21\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u65f6\u51fa\u73b0\u7684\u6311\u6218\u3002\n\u7075\u6d3b\u7684GPU\u8c03\u5ea6\uff0c\u5305\u62ec\u52a8\u6001\u8c03\u6574\u57f9\u8bad\u4f5c\u4e1a\u5927\u5c0f\u4ee5\u53ca\u81ea\u52a8\u7ba1\u7406AWS\u548cGCP\u4e0a\u7684\u4e91\u8d44\u6e90\u3002\n\u8981\u4f7f\u7528Defined\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u6d41\u884c\u7684DL\u6846\u67b6\uff0c\u5982TensorFlow\u548cPyTorch\uff1b\u60a8\u53ea\u9700\u8981\u4fee\u6539\u6a21\u578b\u4ee3\u7801\u6765\u5b9e\u73b0Defined API\u3002\n\u8981\u5c06\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u79fb\u690d\u5230Desired\uff0c\u8bf7\u9075\u5faa\u60a8\u9996\u9009\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u6307\u5bfc\uff1a\n\u5982\u679c\u60a8\u9700\u8981\u5e2e\u52a9\uff0c\u60f3\u8981\u63d0\u4ea4\u9519\u8bef\u62a5\u544a\uff0c\u6216\u8005\u53ea\u662f\u60f3\u8981\u53ca\u65f6\u4e86\u89e3\u6709\u5173DIRECTED\u7684\u6700\u65b0\u6d88\u606f\uff0c\u8bf7\u52a0\u5165DIRECTED\u793e\u533a\uff01\n\u677e\u5f1b\u662f\u95ee\u6709\u5173\u51b3\u5fc3\u7684\u95ee\u9898\u5e76\u83b7\u5f97\u652f\u6301\u7684\u6700\u597d\u5730\u65b9\u3002\u5355\u51fb\u6b64\u5904\u52a0\u5165\u6211\u4eec\u7684\u677e\u5f1b\u3002\n\u60a8\u4e5f\u53ef\u4ee5\u52a0\u5165\u793e\u533a\u90ae\u4ef6\u5217\u8868\uff0c\u8be2\u95ee\u6709\u5173\u9879\u76ee\u7684\u95ee\u9898\u5e76\u63a5\u6536\u901a\u77e5\u3002", "note_en": "Determined helps deep learning teams  train models more quickly,  easilyshare GPU resources, and  effectively collaborate. Determined allows deeplearning engineers to focus on building and training models at scale, withoutneeding to worry about DevOps or writing custom code for common tasks likefault tolerance or experiment tracking.\n You can think of Determined as a platform that bridges the gap between toolslike TensorFlow and PyTorch --- which work great for a single researcher with asingle GPU --- to the challenges that arise when doing deep learning at scale,as teams, clusters, and data sets all increase in size.\n  flexible GPU scheduling, including dynamically resizing training jobson-the-fly and automatic management of cloud resources on AWS and GCP\n To use Determined, you can continue using popular DL frameworks such asTensorFlow and PyTorch; you just need to modify your model code to implementthe Determined API.\n       To port an existing deep learning model to Determined, follow thetutorial for your preferred deep learning framework:\n     If you need help, want to file a bug report, or just want to keep up-to-datewith the latest news about Determined, please join the Determined community!\n Slack is the best place toask questions about Determined and get support.  Click here to join our Slack.\n You can also join the  community mailing listto ask questions about the project and receive announcements.", "posttime": "2020-05-02 21:42:06", "tags": "\u6df1\u5ea6\u5b66\u4e60,\u6df1\u5ea6,deep,\u5b66\u4e60,determined", "title": "\u51b3\u5fc3\uff1a\u6df1\u5ea6\u5b66\u4e60\u57f9\u8bad\u5e73\u53f0", "title_en": "Determined: Deep Learning Training Platform", "transed": 1, "url": "https://github.com/determined-ai/determined", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u6df1\u5ea6\u5b66\u4e60", "\u6df1\u5ea6", "deep", "\u5b66\u4e60"]}, {"category": "", "categoryclass": "", "imagename": "f445aec87178b5c9e4b9fb45921abee9.jpg", "infoid": 1000343, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65f6\u95f4\uff0c\u4e00\u4e2a\u4e0e\u6211\u4eec\u751f\u6d3b\u4e2d\u7684\u4e00\u5207\u7ea0\u7f20\u5728\u4e00\u8d77\u7684\u8bcd\uff0c\u4e00\u4e2a\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684\u4e1c\u897f\u3002\u5728\u6211\u4eec\u505a\u7684\u4efb\u4f55\u6d3b\u52a8\u4e2d\uff0c\u8ddf\u8e2a\u5b83\u90fd\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u51e0\u5343\u5e74\u6765\uff0c\u6211\u4eec\u53d1\u5c55\u4e86\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u6700\u7a81\u51fa\u7684\u662f\uff0c\u6211\u4eec\u4e00\u76f4\u4f9d\u8d56\u4e8e\u592a\u9633\u5728\u5929\u7a7a\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u89c6\u592a\u9633\u65f6\u95f4\u3002\n\u6211\u4eec\u51b3\u5b9a\u968f\u7740\u5b63\u8282\u7684\u63a8\u79fb\u628a\u5b83\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5c06\u56db\u5b63\u7684\u4e00\u4e2a\u5b8c\u6574\u5468\u671f\u7b97\u4f5c\u4e00\u5e74\uff0c\u5373\u7ed5\u592a\u9633\u4e00\u5468\u3002\u6211\u4eec\u8fd8\u628a\u5149\u7684\u4f20\u9012\u4e0e\u7f3a\u5c11\u5206\u6210\u51e0\u5929\uff0c\u5373\u5730\u7403\u81ea\u8f6c\u4e00\u5468\u3002\u63a5\u4e0b\u6765\u6765\u770b\u66f4\u7cbe\u786e\u7684\u65f6\u949f\u5212\u5206\uff0c\u6bd4\u5982\u79d2\u3001\u5206\u548c\u5c0f\u65f6\uff0c\u8fd9\u4e9b\u5355\u4f4d\u5728\u5386\u53f2\u4e0a\u7684\u4e0d\u540c\u65f6\u523b\u610f\u5473\u7740\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u6700\u7ec8\uff0c\u968f\u7740\u65c5\u884c\u53d8\u5f97\u66f4\u5feb\uff0c\u5728\u591a\u4e2a\u5730\u65b9\u8fdb\u5316\u51fa\u6765\u7684\u4e0d\u540c\u8ba1\u65f6\u65b9\u5f0f\u4e0d\u5f97\u4e0d\u8d8b\u540c\u3002\u5404\u4f4d\u3002\n\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u65f6\u95f4\u662f\u4e8b\u4ef6\u7684\u8fdb\u7a0b\uff0c\u6ca1\u6709\u4e8b\u4ef6\u5c31\u6ca1\u6709\u65f6\u95f4\u3002\u5b83\u662f\u7531\u5b83\u7684\u6d4b\u91cf\u6765\u5b9a\u4e49\u7684\uff0c\u4ee5\u7279\u5b9a\u95f4\u9694\u53d8\u5316\u7684\u4e1c\u897f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5355\u4f4d\uff0c\u5c3d\u7ba1\u5b83\u4ecd\u7136\u662f\u65e0\u9650\u53ef\u9664\u7684\u3002\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u770b\u5f85\u65f6\u95f4\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\u5728\u7ecf\u5178\u7269\u7406\u5b66\u4e2d\uff0c\u65f6\u95f4\u662f\u7edd\u5bf9\u7684\uff0c\u72ec\u7acb\u4e8e\u611f\u77e5\u8005\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u540c\u6b65\u7684\u3002\u5728\u73b0\u4ee3\u7269\u7406\u5b66\u4e2d\uff0c\u6211\u4eec\u6709\u7231\u56e0\u65af\u5766\u7684\u72ed\u4e49\u800c\u5e7f\u4e49\u7684\u76f8\u5bf9\u8bba\uff0c\u4e5f\u5c31\u662f\u9002\u7528\u7684\uff0c\u4e8b\u7269\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u53c2\u7167\u7cfb\uff0c\u65f6\u95f4\u53ef\u4ee5\u81a8\u80c0\u6216\u6536\u7f29\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u8868\u660e\uff0c\u7531\u4e8e\u8ddf\u8e2a\u65f6\u95f4\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u521b\u9020\u4e86\u6bcf3000\u4e07\u5e74\u8bef\u5dee\u4e3a1\u79d2\u7684\u8d85\u7cbe\u5bc6\u539f\u5b50\u949f\u3002\u6211\u4eec\u53ef\u4ee5\u7edd\u5bf9\u786e\u5b9a\u4e24\u4e2a\u8282\u62cd/\u632f\u8361\u4e4b\u95f4\u53d1\u751f\u7684\u5931\u8bef\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u5b83\u5c31\u8d85\u51fa\u4e86\u4eba\u7c7b\u7684\u5bff\u547d\uff0c\u6211\u4eec\u6709\u5f88\u591a\u9519\u8bef\u9700\u8981\u7ea0\u6b63\u3002\u8fd9\u4e9b\u65f6\u949f\u662f\u6211\u4eec\u771f\u7406\u7684\u6765\u6e90\uff0c\u5b83\u4eec\u7ed9\u4e86\u6211\u4eec\u79d2\u7684\u6807\u51c6\u5355\u4f4d\u7684\u5b9a\u4e49\uff0cSI\u79d2\u3002\n\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709\u8ba1\u7b97\u65f6\u95f4\u7684\u539f\u5b50\u949f\uff0c\u800c\u4e0d\u8003\u8651\u5468\u56f4\u53d1\u751f\u7684\u4e8b\u4ef6\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5728\u592a\u7a7a\u4e2d\u8fd0\u52a8\u7684\u884c\u661f\uff0c\u5b83\u53d7\u5230\u529b\u7684\u4f5c\u7528\uff0c\u5728\u90a3\u91cc\u6211\u4eec\u9009\u62e9\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u56f4\u7ed5\u592a\u9633\u4e00\u5468\u6ee1\u4e00\u5708\u7b49\u4e8e\u4e00\u5e74\uff0c\u5b83\u672c\u8eab\u81ea\u8f6c\u4e00\u5468\u5c31\u662f\u4e00\u4e2a\u592a\u9633\u65e5\uff0c\u4e24\u6b21\u592a\u9633\u51cc\u65e5\u4e4b\u95f4\u7684\u7a7a\u95f4(\u5929\u7a7a\u4e2d\u7684\u6700\u9ad8\u9ad8\u5ea6)\u3002\u8fd9\u4e24\u4e2a\u503c\u6700\u7ec8\u90fd\u5e94\u8be5\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5e94\u8be5\u662f\u4e0d\u540c\u7684\u3002\u5730\u7403\uff0c\u56e0\u4e3a\u5b83\u7684\u4e0d\u5747\u5300\u6027\u548c\u76ee\u524d\u7684\u4f4d\u7f6e\uff0c\u5728\u5b83\u7684\u3002\n\u6211\u4eec\u6240\u505a\u7684\u5c31\u662f\u4f7f\u7528SI\u79d2\u7684\u6807\u51c6\u5b9a\u4e49\u4f5c\u4e3a\u6211\u4eec\u7684\u951a\u3002\u73b0\u5728\uff0c\u4e00\u5929\u4e0d\u662f\u7531\u592a\u9633\u7684\u8868\u89c2\u4f4d\u7f6e\u6765\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7ec4\u6210\u5e73\u5747\u6052\u661f\u65e5\u7684\u5e73\u5747\u6807\u51c6\u5355\u4f4d\u79d2\u7684\u6570\u91cf\u6765\u5b9a\u4e49\u7684\uff0c\u5927\u7ea6\u572886400.002\u79d2\u5de6\u53f3\u3002\u8fd9\u4e2a\u5b9e\u9645\u7684\u7edf\u4e00\u65f6\u949f\u65f6\u95f4\u79f0\u4e3a\u5e73\u5747\u65f6\u95f4\u3002\u5e73\u5747\u592a\u9633\u65f6\u95f4\u662f\u4e00\u5e74\u4e2d\u67d0\u4e00\u5929\u7684\u51c6\u786e\u5e73\u5747\u65f6\u95f4\u3002\u8fd9\u662f\u6240\u6709\u592a\u9633\u65e5\u9664\u4ee5n\u5929\u7684\u603b\u548c\u3002\n\u56e0\u6b64\uff0c\u5177\u6709\u7edf\u4e00\u56fa\u5b9a\u503c(\u5e73\u5747\u65f6\u95f4)\u7684\u65f6\u949f\u5c06\u4e0e\u8868\u89c2\u592a\u9633\u65f6\u95f4\u4e0d\u540c\u3002\u8fd9\u79cd\u5dee\u5f02\u88ab\u79f0\u4e3a\u65f6\u95f4\u65b9\u7a0b(EOT)\uff0c\u5b83\u7684\u53d8\u5316\u53ef\u4ee5\u957f\u8fbe15\u5206\u949f(\u63d0\u524d14\u5206\u949f\uff0c\u63a5\u8fd12\u67086\u65e5\uff0c\u843d\u540e\u4e8e\u63a5\u8fd111\u67083\u65e5\u768416\u5206\u949f)\uff0c\u4f46\u968f\u7740\u5730\u7403\u5b8c\u6210\u7ed5\u592a\u9633\u7684\u8f68\u9053\uff0c\u5b83\u4f1a\u91cd\u65b0\u5e73\u8861\u81ea\u5df1\u3002\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u8bb8\u591a\u6a21\u62df\u6765\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u3002\n\u51e0\u5e74\u6765\uff0c\u6211\u4eec\u7684\u65e5\u5386\u53ea\u80fd\u5bb9\u7eb3\u6574\u6574\u4e00\u5929\uff0c\u4f46\u5b9e\u9645\u5b8c\u6210\u4e00\u5708\u6240\u9700\u7684\u5929\u6570\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e2a\u5206\u6570\u7d2f\u79ef\u591a\u5e74\uff0c\u5728\u4e0b\u4e00\u5e74\u589e\u52a0\u989d\u5916\u7684\u4e00\u5929\uff0c366d\u800c\u4e0d\u662f365\u5929\u3002\u5728\u5112\u7565\u5386\u4e0a\uff0c\u4e00\u5e74\u662f365.25\u5929\uff0c\u7136\u800c\u8fd9\u5e76\u4e0d\u7cbe\u786e\uff0c\u5b83\u6bd4\u5f62\u6210\u4e00\u5e74\u6240\u9700\u7684\u5b9e\u9645\u5929\u6570\uff1a365.242199\u5929\u8981\u9ad8\u51fa\u4e00\u5e74\u7684\u5b9e\u9645\u5929\u6570\uff1a366\u5929\uff0c\u800c\u4e0d\u662f365\u5929\u3002\u5728\u5112\u7565\u5386\u4e0a\uff0c\u4e00\u5e74\u662f366\u5929\uff0c\u800c\u4e0d\u662f365\u5929\u3002\u4eca\u5929\u6700\u5e38\u89c1\u7684\u516c\u5386\u5bf9\u5b83\u7684\u5b9a\u4e49\u66f4\u591a\u2026\u2026\u3002\n\u4f46\u662f\u5728\u6211\u4eec\u73b0\u5728\u7684\u751f\u6d3b\u4e2d\uff0c\u5728\u6211\u4eec\u7684\u8f6f\u4ef6\u4e2d\uff0c\u6211\u4eec\u4ecd\u7136\u752886400\u79d2\u6765\u5b9a\u4e49\u4e00\u5929\uff0c\u5bf9\u5417\uff1f\u90a3\u4e48\u8fd9\u4e2a\u590d\u6742\u7cfb\u7edf\u7684\u5176\u4f59\u90e8\u5206\u5462\uff0c\u6211\u4eec\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u5dee\u5f02\uff0c\u8c01\u9009\u62e9\u65f6\u95f4\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u5728\u8fd9\u4e9b\u4ef7\u503c\u4e0a\u540c\u6b65\uff0c\u8c01\u8d1f\u8d23\uff1f\u4f60\u6240\u5728\u7684\u6b63\u5348\u53ef\u80fd\u4e0d\u662f\u6211\u6240\u5728\u7684\u6b63\u5348\u3002\n\u6211\u4eec\u949f\u4e0a\u663e\u793a\u7684\u5f53\u5730\u65f6\u95f4\u662f\u7531\u6211\u4eec\u7684\u5730\u65b9\u5f53\u5c40\u9009\u62e9\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6c11\u4e8b\u65f6\u95f4\u3002\u56e0\u4e3a\u6211\u4eec\u90fd\u751f\u6d3b\u5728\u540c\u4e00\u4e2a\u661f\u7403\u4e0a\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u5f53\u5730\u793e\u533a\u7684\u6bcf\u4e2a\u4eba\u90fd\u4e0e\u6211\u4eec\u8ba4\u4e3a\u662f\u540c\u65f6\u7684\u65f6\u95f4\u540c\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5730\u7406\u4f4d\u7f6e\uff0c\u5728\u90a3\u91cc\u521b\u5efa\u4e00\u4e2a\u4e25\u683c\u7684\u6807\u51c6\u65f6\u95f4\uff0c\u5e76\u4ece\u90a3\u91cc\u4e3a\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u6d3e\u751f\u51fa\u65f6\u95f4\u3002\u4efb\u4f55\u79bb\u8fd9\u6761\u5b50\u5348\u7ebf\u66f4\u8fdc\u7684\u7ecf\u5ea6\u90fd\u4f1a\u589e\u52a0\u589e\u91cf\u65f6\u5dee\u3002\u90a3\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u540c\u6b65\u4e86\uff0c\u51cf\u5c11\u4e86\u4e71\u4e03\u516b\u7cdf\u7684\u4e8b\u60c5..\u3002\n\u7b2c\u4e00\u4e2a\u4e3b\u8981\u6807\u51c6\u662f\u5728\u4f26\u6566\u683c\u6797\u5a01\u6cbb\u7684\u7687\u5bb6\u5929\u6587\u53f0\u8bbe\u7acb\u7684\u3002\u90a3\u91cc\u8bb0\u5f55\u7684\u5e73\u5747\u65f6\u95f4\u88ab\u7528\u6765\u4f5c\u4e3a\u5f53\u5730\u6c11\u7528\u65f6\u95f4\u7684\u504f\u79fb\u91cf\uff0c\u79f0\u4e3a\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\uff0c\u6216\u7b80\u79f0\u4e3aGMT\u3002\u7136\u800c\uff0c\u5b83\u5e76\u4e0d\u50cf\u5b83\u6240\u80fd\u8fbe\u5230\u7684\u90a3\u6837\u7cbe\u786e\uff0c\u56e0\u6b64\u57281967\u5e74\u88ab\u53e6\u4e00\u79cd\u79f0\u4e3a\u4e16\u754c\u534f\u8c03\u65f6\u95f4(UTC)\u7684\u6807\u51c6\u6240\u53d6\u4ee3\u3002\nUTC\u662f\u4e16\u754c\u65f6\u95f4\u6807\u51c6\u7684\u4e00\u4e2a\u7248\u672c\u3002\u5728\u8fd9\u4e2a\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u8fd8\u627e\u5230\u4e86UT1\uff0c\u5b83\u5229\u7528GPS\u536b\u661f\u8ddf\u8e2a\u5730\u7403\u81ea\u8f6c\u89d2\uff0c\u5b83\u662f0\u5ea6\u7ecf\u5ea6\u7684\u5e73\u5747\u592a\u9633\u65f6\uff0c\u5b83\u662f\u4e00\u4e2a\u66f4\u597d\u7684", "note_en": "Time, a word that is entangled in everything in our lives, somethingwe\u2019re intimately familiar with. Keeping track of it is important formany activities we do.\n Over millennia we\u2019ve developed different ways to calculate it. Mostprominently, we\u2019ve relied on the position the sun appears to be at inthe sky, what is called apparent solar time.\n We \u2019ve decided to split it as seasons pass, counting one full cycle ofthe 4 seasons as a year, a full rotation around the sun. We \u2019ve alsodivided the passing of light to the lack thereof as days, a rotationof the earth on itself. Moving on to more precise clock divisions suchas seconds, minutes, and hours, units that meant different things atdifferent points in history. Ultimately, as travel got faster, thedifferent ways of counting time that evolved in multiple places had toconverge. People  ...\n In physics, time is the progression of events, without events there\u2019sno time. It is defined by its measurement, what changes at a specificinterval can be considered a unit, though still infinitely divisible. In physics there are two ways to view time. In classical physics, time isabsolute, independent of the perceiver, synchronized for everyone. Whilein modern physics, we have Einstein \u2019s special and general relativitythat applies, things depend on a frame of reference, time can dilate orcontract  ...\n All of this to say that because of the importance of tracking time, we\u2019vecreated ultra-precise atomic clocks that have an error of 1 second every30 million years. We can be categorically sure of the lapse that happensbetween two beats/oscillations, if there\u2019s an error then it\u2019s outsidethe human life-span, and we\u2019ve got many of them to correct errors. Thoseclocks are our sources of truth, they give us the definition of thestandard unit of second, SI second.\n We have, on one hand, the atomic clocks counting time regardless of eventshappening around, and on the other hand, we have a moving planet in spacethat is subject to forces, where we\u2019ve chosen the fact that one fullorbit around the sun equals a year and that one full rotation on itselfis a solar day, the space between two transit of the sun (maximum heightin the sky). Both of those values ought to diverge and differ eventually. The earth, because of its unevenness and current position in its  ...\n What we\u2019ve done is used this standard definition of the SI second as ouranchor. A day is now not defined by the apparent sun position but as theaverage number of standard unit seconds that make up an average stellarday, somewhat around 86400.002 seconds. This actual uniform clock timeis called the mean time. Mean solar time is the exact average mean timefor a day in a year. That is the sum of all solar days over n days.\n Thus, clocks that have a uniform fixed value, mean-time, will differ withthe apparent sun time. This difference is called the equation of time(EOT) and it can vary as much as 15min (ahead 14 minutes near February 6,behind 16 minutes near November 3) but rebalances itself as the earthfinishes its orbit around the sun. There are many simulations you canfind online to understand this concept.\n As for years, our calendars can only hold entire days but the actualnumber of days it takes to finish an orbit is fractional. And so weaccumulate this fraction over multiple years and add an extra day tothe year that follows making it a leap year, 366 days instead of 365.On a Julian calendar, a year is 365.25, however this is not precise,it is higher than the actual number of days it takes to form a year:365.242199. The Gregorian calendar, which is the most common today,defines it more  ...\n But we still use 86400 seconds to define a day in our current lives,in our software, right? What about the rest of this complex system,how do we cope with this discrepancies, who chooses the mean time,how can we all sync on those values, who\u2019s in charge? Noon where youare might not be noon where I am.\n The local time that shows on our clock is chosen by our local authorities,we call it civil time. And because we all live on the same planet, instead of each syncing inour local community with what appears to us as the mean time, we canchoose a fixed geographical spot, create a rigorous standard time there,and for the rest of the world, derive from it. Anything further away inlongitude from this meridian can add a delta time difference. That waywe can all sync and make less of a mess in  ...\n The first major standard was set at the Royal Observatory in Greenwich,London. The mean time recorded there was used as the one to derive yourlocal civil time as an offset from, called Greenwich Mean Time, or GMT forshort. However, it was not as precise as it could be and thus got replacedin 1967 by another standard called Universal Coordinated Time, UTC.\n UTC is a version of the Universal Time standard. In this standard we alsofind UT1, that keeps track of Earth rotation angle using GPS satellites,it is the mean solar time at 0 degree longitude, it\u2019s a better and moreprecise version of GMT.\n UTC, instead of relying on the rotation of the earth, relies on theInternational Atomic Time (TAI), which is the time we talked aboutthat defines precisely the SI second using 400 atomic clocks at multiplelaboratories worldwide. Additionally, to keep count of the rotation ofthe Earth, and keeps in sync with UT1, the UTC authorities can add or removea second in a day, a leap second. The difference between UTC and UT1 isDUT1, basically when DUT1 is one second we need a leap second. So  ...\n As you could\u2019ve guessed, introducing a leap second isn\u2019t a decision wetake instantaneously, it\u2019s announced at least six months in advance in\u201cBulletin C\u201d by the International Earth Rotation and Reference SystemsService (IERS) which is one of the authority. There\u2019s also involvementin the standard from the International Astronomical Union (IAU) and theInternational Telecommunication Union (ITU).\n With this, we\u2019re set, we have a clean standard, now how should we dividethe world such that civil local time keep in sync with the sun.\n Time and longitude difference is what we need, we split the world into 24meridians, each 15 degrees apart, each meridian zone represents one hourseparation offset from UTC. Those are called time zones, they can gofrom UTC-12 to UTC+14, and can sometimes be referred to by their name,for example Western European Time, Central European Time, etc \u2026However,countries don \u2019t fall precisely on meridian, and thus local authorities canchoose which section of the country follows which time  ...\n Moreover, there\u2019s a practice called daylight saving time (DST), or summertime, which is used in civil time to advance forward the clock by one hourin spring and set it back one hour in autumn/fall. For example in winterthe region could be on UTC+2 (EET) and in summer on UTC+3 (EEST). Creatinga 23h day in late winter and a 25h day in autumn/fall. This practice isbeing reconsidered in the EU and planned to be removed by 2021.\n     The easiest way I\u2019ve found to test many formats is to use the  date(1)command.\n It can show the time both in human readable format string and moremachine readable numeric formats.\n Some formats include the timezone as numeric, others as the alphabetictime zone abbreviation. You can represent the date with or without thetime zone, with it to make it more precise to the viewer.\n Some formats prepend the time zone part with the \u2018Z\u2019 character, which hasorigins in the GMT standard but that now stands for zone descriptionof zero hours, also sometimes called \u201cZulu time\u201d.\n We can see that the date command automatically knows our time zone andhow to display the time in a way we can read it. How do we set thisformat and where does it take it from. How to set the time zone.\n  The date commands relies on  locale, which is an internationalizationmechanism used by Unix-like operating systems. Locale are configurationsthat can be used to set the language, money, and other representationalvalues that can change by location. The libc on the system, andconsequentially the coreutils, should be aware of those locale values.\n The specific category of locale we are interested in is the  LC_TIME,which is used for the formatting of time and date information, spellingof weekdays, months, format of display, time zone, 24 vs 12h format, etc..\n     Locale can also be set on a user level in  ~/.config/locale.conf, or $XDG_CONFIG_HOME/locale.conf, or generally  $HOME/.config/locale.conf.\n All of this works because of the way profiles are loaded in the shell,you can take a look at  /etc/profile.d/locale.sh.\n  The time zone information database is distributed by the IANA,it\u2019s referred to as the tz database. The Unix distribution downloadswhen updated and installs it in  /usr/share/zoneinfo/so that otherlibraries and programs can use it. In the tz data/zoneinfo db we canfind all the information required to keep track of time in specificplaces. It \u2019s distributed in such a way to make it easier to choosetime zone by choosing the city name or location instead of the exactdrift/skew  ...\n To change the timezone globally we have to link  /etc/localtime to anentry in  /usr/share/zoneinfo/. For instance:\n  Many Unix-like system provide helpers to not have to manually linkit. There\u2019s  timedatectl(1) from systemd and  /etc/timezone on Debian,for instance.\n The  TZ POSIX environment variable can also be used to specify thezone in human readable format on the command line, and the  TZDIRto specify the location of the tzdata. That means separate users on asingle system can have different time zones.\n   The format of the tz database aka tzdata is explained in details in the man tzfile(5). To create it you can use a textual format an convertit using the command  zic(1) (zone information compiler).\n  &gt; echo &#34;Zone COOL +2:25 - COOL&#34; &gt; COOL.zone&gt; mkdir ./zoneinfo&gt; zic COOL.zone -d ./zoneinfo&gt; TZDIR=zoneinfo TZ=COOL date# Should Output something similar toSun 12 Apr 2020 11:44:00 AM COOL\n So now programs that rely on the standard  time.h header can be awareof the time zone info. You can also load your own dynamically using tzset(3) from the  TZ env.\n   Time is used in so many places in our operating system. We\u2019re goingto list some common places where it is found and then build on them toapproach more complex topics in the following sections.\n Let\u2019s start with the infamous POSIX time. POSIX time, or Unix time, orEpoch time, is the number of seconds that have elapsed since Epoch time,which is the 1st of January 1970 00:00:00 UTC, minus the leap secondsdifference, so Unix time is the same everywhere. That means that in Unixtime, each day is considered to be exactly 86400 SI seconds, which wouldmean it should skew away from real UTC, and thus drifts away from UT1(mean time).\n To answer this, when there\u2019s a leap second introduced in UTC, POSIXtime will repeat the same second or omit one because its minute cannotgo over 60 seconds unlike real UTC.\n Some rare systems can use TAI (International Atomic Time) as a sourceinstead of UTC but will need a table on the system with the leap secondsin it to know how to calibrate itself to civil time.\n Because Unix time start in 1970, dates that are before this need to berepresented as negative numbers. However, prior to this date we haveto keep in mind that there might not have been the UTC standard yet andthus it \u2019s better to rely on something else to represent the time and dateaccurately. Some real time operating systems (RTOS), that we \u2019ll see ina bit, like QNX choose to represent Unix time as an unsigned integer,which means it cannot represent time  ...\n  Historically, Unix time was a signed 32 bit integer that incremented at60 Hz, the same rate as the system clock on the hardware of early Unixsystem, that is 60 times per second. Epoch differed too, it was the 1st of January 1971 in the first editionof Unix Programmer \u2019s Manual. However, at 1/60th of a second precision,the 32 bit integer would have used all its range in only 2.5 years. Thusit was changed again to the Epoch of 1 January 1970 at the rate of 1Hz,an  ...\n When the concept was made there was no consideration of all theissues with leap seconds, time zones, leap years, we\u2019ve mentionedpreviously. It\u2019s only in the 2001 edition of POSIX.1 that there wassome rectification about the faulty leap year rule in the definition ofUnix time.\n  Unix time is the value that Unix system look at to keep track of theirsystem time. Its value is kept in a  time_t type format, defined vaguelyin POSIX.1 as previously mentioned, and that can be included via the time.h header. POSIX only mandates that it should be an integer, anddoesn\u2019t say anything about if it should be signed or not, explainingwhy QNX chose an unsigned integer. For more precise time manipulation, the  time.hheader also includesother types  ...\n However, usually it is a singled signed number which size is defined persystem. For example on mine,  &lt;time.h&gt; redirects to  &lt;bits/timesize.h&gt;as a 64 bits signed integer.\n One issue called the Year 2038 problem, Y2038, or Y2k38, is when systemthat chose to represent Unix time as a signed 32 bit value reach themaximum range of 32 bit integers and overflows, creating an undefinedbehavior. This issue is completely avoided using a 64 bit signed integer.\n  The uptime of a machine is a measure of how long the machine has beenrunning since the last reboot, the current time minus the time it wasbooted at. Some system may require high availability due to service level agreementand this is one of the measure that can be looked at. However, highuptime can be a sign of negligence and rebooting after a long time maylead to unexpected consequences as some changes may only happen on reboot.\n Most Unix-like OS come with the BSD  uptime(1) command which shows thecurrent time, how long the system has been running, how many users arecurrently logged in, and the system load average for the last 1, 5, and15 minutes (Though those values aren\u2019t good metrics, see Brendan Gregg\u2019sblog). Load average being the average number of processing running atthat time. It\u2019s the same information one can find in the first line ofthe  w(1) command.\n On Linux the uptime can also be found in the  /proc filesystem, as /proc/uptime, the file containing 2 values, the first one being thenumber of seconds elapsed since last reboot and the second how muchtime each core has spent idle in seconds. Which are both indicator ofsystem usage.\n Another command that is common as a metric is  time(1). It is a simplecommand which reports the time a command has taken. By default it reports on real time, user time, and sys time. Real timemeans the wall-clock time, it \u2019s the total time for everything to executefrom start to finish. User time is the amount of cpu time spent in usermode, while sys time is the amount of time spent in kernel mode, systemcalls time and more. CPU time is calculated as  ...\n In fact, there exists a panoply of commands that can be used forbenchmarking processes and what they use, how much time they spend inwhich particular section of their code. We\u2019ll keep it at that.\n That said, we often have to take snapshots of time in our programs,timestamps, saying this has happened at this specific time, attaching ametadata. These timestamps can be stored in Unix time, or UTC time, or inthe specific time zone. However, time-stamping records with local timeisn \u2019t advised because of issues that could arise with daylight saving,it \u2019s much easier to recalculate the offset from UTC. Though in certaincases, it would be valuable  ...\n Examples of metadata timestamps are the Unix atime, ctime, mtime thatare stored with files inodes on the file system.\n Atime is the last access timestamp changed whenever the file is read orexecuted for instance, ctime is the last status change timestamp changedwhenever the file is written to or its inode changes, mtime is the lastmodification timestamp changed whenever the file has data written to it,is created, truncated, etc.. An additional non-standard timestamp that we can find on some system isbtime, the file creation/birth timestamp.\n Additionally, some filesystems support flags related to those timestamps,usually for optimization to avoid disk load, such as ones that changethe way atime is updated, remove access time from directories, etc.. This is the prevalent default on a lot of filesystems and thus gives afalse sense of the definition of those timestamps.\n To have more information about when those timestamp are actually updatedhave a look at  man 7 inode, and check your file current values bycalling the  stat command or related system call on it. You can also use touch(1) to arbitrarily change the timestamps on files.\n Let\u2019s end this section with timers and chronometers that trigger eventsat specified time, Unix alarm clocks if you want, clock daemons.\n The de facto implementation of this is cron, which first appeared inUnix V6, a clock daemon tool written by Ken Thompson, in reference tothe word Chronos which is the Greek word/prefix for time.\n Cron specialized in scheduling the execution of programs periodically,at certain time events. It registers the events in a table.\n It initializes its entries from directories containing the scripts: /etc/crontab or  /etc/cron.*/ or  /var/spool/cron, you can take alook at  man 8 cron for more info on that.\n   Cron will by default execute the entries using sh, that means those aresimple shell scripts, letting you set environment variables, and more. In the crontab you have to specify at which time to repeat the executionof events using a special syntax composed of every minute, every hour,every day, every month, every week day.\n Despite cron being the go to solution for repeated scheduled execution,others have created new solutions. Namely, init systems and servicemanagers have tried to re-implement cron their own way and integratetimers as a type of service. Centralizing the management of timers alongwith services.\n Prominently, systemd implements this function using  systemd.timers,which are systemd unit files and inherit all the facilities and securitythat systemd provides for them.\n      We\u2019ve said previously that POSIX time was used by Unix-like OS to keeptrack of system time but we\u2019ve cut it short at that. There\u2019s still a lotto add to this, like where does the system get its time to begin with,how does it store it when it\u2019s not running, what in the OS triggers thecount of seconds, etc..\n In this section I\u2019ll limit myself to Linux and FreeBSD as examples butthe concepts should apply to any other Unix-like OS. I\u2019ve chosen to dothis because resources were scarce on this topic as most have chosento not mention it and skip directly to the topic of NTP, Network TimeProtocol, which we\u2019ll see in the next section.\n There are two types of clocks on our machines, the first type goes bythe name of RTC (Real Time clock)/CMOS Clock/BIOS Clock/Hardware clock,and the other by the name of system clock/kernel clock/software clock. The system clock is the one we \u2019ve mentioned before, that keeps track oftime using a counter of seconds after the Epoch, and the hardware clockis one we haven \u2019t mentioned that resides physically on the system andruns without  ...\n As you would have guessed, any two clocks are bound to drift aparteventually, those clocks will differ from each other and from the realtime. However, there are many methods to keep them in sync and accuratewithout using external sources.\n Hardware clocks are usually found on the PC motherboard and interfacedwith using an IO bus. Because some of those are on standard architecturesuch as the ISA (Industry Standard Architecture), it can be easy to knowhow to query and modify them. However, it\u2019s still hardware dependentand so can vary widely.\n These clocks run independently of any control program and are even runningwhen the machine is powered off, kept alive by their own power source,a small battery. They are normally consulted only when the machine is turned on, to setthe system time on boot. Unfortunately, they are known to be inaccurate,but weirdly inaccurate in a predictable way, gaining or losing the sameamount of time each day, drifting monotonously, a systematic  ...\n Hardware clocks don\u2019t have to store time as Unix time or UTC, and don\u2019thave to be limited in precision to seconds. It\u2019s up to the hardwareimplementation to decide what can be done and on the user to decidewhat to do with it. In theory these clocks have a frequency that variesbetween 2Hz and 8192Hz, from 0.5s to 0.1ms precision.\n Let\u2019s also note that there can be more than one hardware clock ona system.\n  On Linux for example, the RTC clocks are mapped to special device files /dev/rtc* backed by the driver. The star denoting the number of theclock if there are many, and  /dev/rtc being the default RTC clock. As with anything hardware, there could possibly be issues with the driverof the RTC and the clocks might not be mapped properly, especially ifnot following the industry standard. Linux has fallback mechanisms forother systems  ...\n On the other side, the only time that matters is the one you see whenthe system is running, and that is the system time.\n As we said, system time is the number of seconds since the Epoch thatis stored and kept track of by the kernel, however internally it mightbe more precise than seconds, it could go up to the precision offered bythe architecture. We\u2019ll come back to this topic of high precision soon,just keep the simple concept in mind.\n The system time, when displayed to us, refers to the timezone informationand files we\u2019ve previously mentioned. It\u2019s good to know that the Linuxkernel also keeps its own timezone information for specific actions suchas filesystem related activities, and this kernel timezone is updatedat boot or via the utility  hwclock(8) by issuing  hwclock --systz.\n When booting, the system clock is also initialized from the RTC thatkeeps running when the system is off. In some cases it can be initializedfrom external sources and not rely on the RTC.\n Thus, when the system is running the hardware clock is pretty muchuseless and we could do whatever we want with it. However, we have tobeware of discrepancies on reboot.\n The counter that the kernel uses to increment the system clock is usuallybased on a timer functionality offered by the Instruction Set Architectureof the CPU (ISA not to be confused with the other ISA we spoke about,the Industry Standard Architecture). In simple terms, that means that theCPU gets interrupted at known programmable intervals periodically,and when it \u2019s interrupted it executes a timer service/event routine.  ...\n To set the system time and date, we can rely on the  date(1) command,which takes many formats via its  --set option.\n     Or even, on some system, rely on the service manager. The infamous timedatectl(1) of systemd comes to mind, which can set and giveinformation about pretty much everything we\u2019re mentioning in this section.\n  Local time: Fri 2020-04-17 12:40:00 EEST Universal time: Fri 2020-04-17 09:40:00 UTC RTC time: Fri 2020-04-17 09:40:01 Time zone: Asia/Beirut (EEST, +0300) System clock synchronized: yes NTP service: active RTC in local TZ: no\n What\u2019s this line about \u201cRTC in local TZ\u201d, can the time on the hardwareclock be stored with timezone info, and why would we do this? What isstored on this clock, is it UTC or local time?\n The answer to this, like most things, is that it depends. The time onthe RTC can be configured to be set to whatever the system wants it tobe. Yet, storing it in UTC is the best choice as UTC doesn \u2019t changeregardless of time zones and daylight saving. Having the RTC storingthe local civil time means that it would need to be aware of all thecomplication that it implies, which most RTC clock won \u2019t. If in localtime,  ...\n So it\u2019s preferable to store the time of the RTC in UTC but some systemsstill choose to not adhere to this. For instance, when dual-booting,the other operating system may expect the RTC to contain local time andupdate it accordingly. That creates a discrepancy, and the RTC has noway to indicate if it is storing local time or UTC, hence the OShas to keep track of this information internally. This is the kind of scenario  ...\n On FreeBSD, this information is given via the  /etc/wall_cmos_clockfile: if the file exists it means that the hardware clock keeps localtime, otherwise the hardware clock is in UTC. On Linux, this information is passed to the kernel at boot time viathe  persistent_clock_is_local kernel parameter/stanza (see notes timekeeping.c). The RTC can also be queried and set in localtime orUTC via the  hwclock(8) options  --localtime  ...\n Hence, we have to keep those clocks in sync. The best way to do thisis to rely on the predictable inaccuracy/systematic drift/instrumentbias of the hardware clock. We can measure its drift rate, and applya correction factor in software.\n On Linux there are two tools to perform this,  hwclock(8) and adjtimex(8), while on FreeBSD there is  adjkerntz(8).\n hwclock(8), and its predecessor  clock(8), let you query, calculatedrift, and adjust the hardware clock and kernel/system clock in bothdirection. While with  clock(8) you had to calculate the drift manually, hwclock(8) does it automatically. It does it by keeping track, in an ASCII file called  /etc/adjtime, ofthe historical information, the records of how the clock drifts over time,and if the hardware clock is in  ...\n  # adjust drift of RTC&gt; hwclock --adjust# set RTC to the same time given by --date&gt; hwclock --set --date=&#39;19:30&#39;# set the RTC from system clock# and update the drift at the same time&gt; hwclock --systohc --update-drift\n Thus, it would be a good idea to call  hwclock(8) periodically in acron job to keep the hardware time in sync and calibrate the drift.\n On FreeBSD, the utility  adjkerntz(8) is used in a similar way but onlyfor local time RTC. It\u2019s called at system startup and shutdown with the -i option from the init system before any other daemon is startedand sets the kernel clock from the RTC, managing the DST and timezonerelated configuration.\n       We can specify if it\u2019s a clock that has issues with years above 1999(which I can\u2019t find in the man page on my machine though):\n  As for the  adjtimex(8) tool, on Linux, it doesn\u2019t actually changethe hardware clock at all but specializes in the nitty-gritty detailsof the system/kernel clock and its relation with hardware.\n It\u2019s especially useful for manually readjusting the system clock basedon the drift of the RTC and raw access to kernel settings related tosystem time.\n For instance, it can be used to change the speed of the system clock,telling it how much to add to time whenever it receives an interrupt. Forexample if the system clock ticks faster than it\u2019s supposed to be, itcould be made to tick slower or it could be made such that each tickrepresents a smaller value to add to the time, both options are possible. Those are done through the  --frequency and  --tickoptionsrespectively.  ...\n It can also be used to change the offset/drift, apply adjustment to thesystem time, and what affects the hardware clock.\n Interesting options are the  -c and  -a which keep comparing the systemtime and hardware clock time every 10s and print the ticks and frequencyoffsets, which can be useful for estimating the systematic drift andthen store it in  /etc/adjtime, which  -a actually does.\n  --- current --- -- suggested --cmos time system-cmos error_ppm tick freq tick freq1587136817 0.2772121587136827 0.278389 117.7 10000 -17010561587136837 0.279261 87.2 10000 -1701056 9998 56905191587136847 0.280304 104.3 10000 -1701056 9998 4571769\n So my system considers 10000 ticks to be equal to 10s, basically having1K ticks a second, but it\u2019s suggested that I use 9998 per 10s instead.\n Note also the  error_ppm, ppm (part per million), meaning that I\u2019vegotten a delta error of around 103 ticks per million that I need slewforward.\n  mode: 0 offset: -852985 frequency: -1701056 maxerror: 483000 esterror: 0 status: 8193time_constant: 7 precision: 1 tolerance: 32768000 tick: 10000 raw time: 1587136914s 254051439us = 1587136914.254051439\n  1 PLL updates enabled 2 PPS freq discipline enabled 4 PPS time discipline enabled 8 frequency-lock mode enabled 16 inserting leap second 32 deleting leap second 64 clock unsynchronized 128 holding frequency 256 PPS signal present 512 PPS signal jitter exceeded 1024 PPS signal wander exceeded 2048 PPS signal calibration error 4096 clock hardware fault 8192 Nanosecond resolution (0 is microsecon)16384  ...\n PPS standing for Pulse Per Second, PLL for Phase-lock loop,and FLL for Frequency-Locked Loop, which are different clockcircuitries/feedback-loop, discipline, and slewing techniques, basicallydifferent methods of looping for time adjusting frequency and ticks tomatch real one, which are affected differently by the environment andhave ups and downs.\n What we can deduce is that my clock with status  8193 has PLL updatesand a nanosecond precision.\n That means that if 1000 ticks make up a second, a tick happens everymillisecond. Can\u2019t we have more precise ticks, aren\u2019t I supposed to getnanosecond precision. But wouldn\u2019t that clog the CPU altogether, canwe get multiple timers too. We\u2019ll see that with high resolution clockslater on, for now, again, let\u2019s keep those questions and concepts in mind.\n An interesting line in the output of  adjtimex catches our attention,bit 6, or 64 in decimal, \u201cclock unsynchronized\u201d what does it mean. It\u2019ssimilar to the \u201cSystem clock synchronized: yes\u201d line of systemd\u2019s timedatectl output.\n An inspection of the Linux kernel source code let us know that there\u2019s amechanism in the kernel to automatically synchronize the hardware clockwith the system clock. It goes under the name of NTP \u201c11 minute mode\u201dbecause it adjusts it every 11 minutes.\n Many other Unix-like operating systems choose to do this, have the kernelbe the only program that syncs hardware time to system time. To not letother programs have to worry about all the drifting and calculation. Inthis case we don \u2019t need to create a cron job that adjusts the time,the kernel already does it for us. Sometimes however, the kernel won \u2019trecord the drift time anywhere while in  ...\n  On Linux, the only way to turn it off is to stop the NTP daemon (networktime protocol daemon, which we\u2019ll see in the next section), call anyprogram that sets the system clock from the hardware clock such as hwclock --hctosys or actually recompile the kernel without the relatedoption:  RTC_SYSTOHC.\n   Let\u2019s move to this high precision topic we\u2019ve kept in mind.\n So my system clock has nanosecond precision, are there ways to gethigher precision from my system clock, what does that mean from thetimer interrupt perspective. How much time should we spend on timerevents handling instead of executing programs. How are they implementedin the instruction set, do I have a choice of clocks, are there otherinstructions to call. How do I check all that?\n We said briefly that system time was kept track with using interruptsthat were generated at predefined time or at specific periodicintervals. Whenever they happen, the kernel needs to handletime-based events such as the scheduling of processes, statisticscalculation, time keeping (time of day), profiling, measurements,and more. Different machines have different kinds of timer devices that  ...\n  We could choose to actually rely on the RTC directly and not anythingelse. However, that comes with a cost because its quite slow, it ticksevery 0.5s to 0.1ms, to stay energy efficient. So let\u2019s leave the RTCfor boot time only and not timers.\n  The Time Stamp Counter is a 64 bit register called TSC present on allx86 processors since the Pentium. It\u2019s connected via a CLK input pinthat also drives the CPU clock and thus ticks as the same frequency. Forexample a 2GHz CPU will make this register tick every 0.5 nanosecond. TheTSC register can be queried by the  rdtsc, read tsc, instruction. It \u2019svery useful as it ticks along with  ...\n  The Programmable Interrupt Timer is also part of an instruction set. Theway it works is that it can be programmed to send global interruptsafter a certain time has elapsed, one-shot or periodically. It has a 16bit precision and variable frequency rates that can be configured.\n  Similar to PIT in such that it can issue one-shot or periodicinterrupts. Its size is 32 bits. And the interrupt it sent to the specificprocessor that requested it instead of globally (which PIT would do). Itsfrequency is based on the bus clock signal and can also be controlledbut less flexible than PIT.\n  ACPI Power Management Timer is part of the ACPI-based motherboards andhave quite a low frequency of 3.58MHz, ticking every 279ns. It isn\u2019tnearly as accurate as other timers but has the advantage that it isn\u2019taffected by change based on power-management. It should be used as alast resort system clock.\n  The High Precision Event Timer is a chip integrated into theSouthbridge. It provides multiple hardware timers, up to eight 32 or64 bit independent counters, each having their own clock signal and afrequency of at least 10MHz, 100ns. It is less precise than the TSC buthas the advantage that it is separated and has multiple clocks.\n It\u2019s always good to keep in mind that all those numbers about precisionare for the best case scenario and that we may have overheads. We stillhave to remember that, for example, when querying the TSC we have to firstissue the  rdtscpcommand which has to be interpreted. It doesn \u2019t meanthat we have a machine ticking at 0.5ns that we \u2019re going to be able tomeasure such intervals precisely.  ...\n On Linux you can check the features your CPU supports by consulting theflags in  /proc/cpuinfo.\n    Before checking for the availability of the hardware timers and what iscurrently set for what on your system, let\u2019s take a moment to understandwhere we can use these timers.\n There are in general 3 uses for the timers we\u2019ve seen: clock source,clock event, and clock scheduling.\n The clock source is the one that provides the basic timeline, it shouldbe a continuous, non-stop (ideally), monotonic, uniform timer that tellsyou where you are in time. It\u2019s used to provide the system time, the POSIXtime counter. When issuing  date this is what is going to be consulted. So the clock source should have a high resolution and the frequencyshould be as stable and  ...\n Clock events are the reverse of clock source, they take snapshotson the timeline and interrupts at certain point, providing a higherresolution. They could in theory use the same hardware as the clocksource but are not limited to it. They could use all the other hardwarethat are specialized in sending interrupts after a programmed time totrigger the events on the system timeline.  ...\n The clock scheduling is about how time affects the scheduling of processeson the system, what timeslice should be used to run processes and thenswitch to another one. This can possibly be the same counter as theclock source, however usually it needs smaller intervals as it has tobe very fast but doesn\u2019t have to be accurate.\n The clock source keeps time as a counter we refer to as jiffies. Jiffiesare used to keep the number of ticks that happened since the system hasbooted, it is incremented by 1 at each timer interrupt. The number ofticks/interrupts in a second is denoted by a constant defined at compiletime or in a kernel parameter called  HZ, for Hertz, it \u2019s named thisway in most Unix-like OS.  ...\n   However, it is deprecated and will always return 100 (10ms), regardlessof the precision. The actual value has to be set as a kernel parameter in CONFIG_HZ.\n  Nonetheless, it isn\u2019t such a good idea to go to higher precision  HZbecause if scheduling relies on jiffies it could affect performance.\n Now let\u2019s check how we can see which devices we support and changethe clocks.\n On Linux, there\u2019s not many options regarding anything other than the clocksource (system time). To check the ones available and the one currentlyin used you can rely on the  /sys/ filesystem.\n  The clock source can be changed while the system is running by echoingthe new clock to the same location:\n  For permanent changes you can recompile the kernel with different optionsor set the clock at boot by passing it as the  clocksource option tothe Linux kernel (kernel stanza) in grub or any other boot-manager.\n  Additionally you can enable or disable  hpet to be used as the basetime for events clock.\n As of today here are the relevant configurations and different clocksources for multiple CPU architectures:\n clocksource= Override the default clocksource Format: &lt;string&gt; Override the default clocksource and use the clocksource with the name specified. Some clocksource names to choose from, depending on the platform: [all] jiffies (this is the base, fallback clocksource) [ACPI] acpi_pm [ARM] imx_timer1,OSTS,netx_timer,mpu_timer2, pxa_timer,timer3,32k_counter,timer0_1  ...\n The process is quite similar on FreeBSD. By default it\u2019s aware of thetimer available on the system, it automatically ranks and chooses thebest possible ones.\n It has three timekeeping, one it calls  hardclock running at 1000HZ(1ms), which is the same as the clock source, one it calls  statclockused for statistics and scheduler events with a frequency of 128HZ,and a last one called  profclock which is a bit higher in precision,0.125ms. Those obviously can be tuned to preference.\n       The documentation about what the flag means can be found via themanpage  eventtimers(4), they are related to what the clock supports(periodic or not, per CPU or not). Those values can be changed in the /etc/sysctl.conf file or tunable via  sysctl on the command line.\n As with Linux, on FreeBSD hpet can be used for events if the driveris installed and enabled, it\u2019s part of the acpi. FreeBSD offers somebeautiful documentation about it in the  hpet(4) manpage, discussing theconfigurations too. For instance if it can be used to support event timersfunctionality, and tune how many timers on the hpet per CPU can be used.\n So now we should be all set, if we call POSIX functions part of  &lt;time.h&gt;such as  gettimeofday we can get the result in a structure that containsmicroseconds (0.001ms) if the precision allows it. And actually POSIX1003.1b requires nanosecond precision. There are also the POSIX  clock_gettime()family of functions, which letyou specify from which clock to get  ...\n There used to be a time when on Linux all the timers on the system werecoupled to the jiffies, it isn\u2019t the case today. We have a decoupledclock event subsystem that gets delegated and manages interrupts, and thesource device can be swapped without breaking everything. Linux alsoadded a kernel configuration called  CONFIG_HIGH_RES_TIMERSto allowhigh resolution  ...\n  On Linux, all the information about timers and their statistics ispropagated to user space in  /proc for advanced debugging.\n For instance,  /proc/timer_list, gets us a list of the currentlyconfigured clocks and running timers. We can use it to check theirprecisions:\n  HRTIMER_MAX_CLOCK_BASES: 2now at 294115539550 nsecscpu: 0 clock 0: .index: 0 .resolution: 1 nsecs .get_time: ktime_get_real .offset: 0 nsecsactive timers: clock 1: .index: 1 .resolution: 1 nsecs .get_time: ktime_get .offset: 0 nsecs[...] event_handler: hrtimer_interrupt\n We can see that the  .resolution is  1 nsecs and that the event_handler is  hrtimer_interrupt instead of  tick_handle_periodic,which would be for lower resolution timers.\n /proc/timer_stats is an advance debugging feature that can be enablevia the  CONFIG_TIMER_STATSkernel configuration and that let us gatherstatistics about all the timers on the system, you turn it on and offwhenever you want. It can tell us which routines in the kernel are usingthe timers an how frequently they are requesting them. The format isas follows:  ...\n     Before starting this section I\u2019d like to point out three ways that timecan be updated. One is called stepping and it consists of making one discontinuous changeto time, a sudden instant jump from one value to another that could bebackward or forward in time. This happens when something triggers thesystem time to go to a specific value, external sources  ...\n We also have to keep in mind the time it takes to fetch the value of timefrom a source: for it to be transmitted and interpreted by our system. Itwon \u2019t be an instant transfer and sometimes may take such a long time thatwe are forced to take it in consideration when doing our calculationsof adjustment. We call this the delay, the time it takes to do the  ...\n So why should we rely on an external source of time, why should we careabout having precise time.\n At human scale, on my watch I can rotate the hands of the clock a littleand adjust it to whatever someone else has. Nothing horrible is goingto happen because of it, right? The majority of people don\u2019t need precisionhigher than a couple of minutes. However, computers are different, you \u2019re not the one monitoring time,and their errors accumulate pretty  ...\n So who needs millisecond accuracy or more? Who has a need for precisetime? And precise time according to what. Haven\u2019t we said in the previoussection that our system clocks already have a pretty good calibrationmechanism in place. However, even with all the accuracy we can get, we \u2019re still going todrift, no matter what, and we still need to be aware  ...\n So what does accurate mean, do you need accuracy across your internalnetwork of machines, each not drifting too far away from the other eventhough not in sync with UTC. Or do you need them all to be in sync withUTC or your time zone. How much does the software you are running tolerate change in time. Doesit expect monotonic time, can it handle jumps,  ...\n   We have to add to this list all the machines with nasty system clocksthat drift in unexpected ways. Such machines are better off syncing withan external source.\n  If we don\u2019t want to worry about managing another daemon on our system\n  If the system doesn\u2019t have access neither to the internet nor to anyphysical external source of time.\n Now that we know if we need an external source of time or not, let\u2019ssee how to calculate how precise and stable these sources are.\n When using a clock as reference we want to make sure it\u2019s stable andprecise.\n A clock\u2019s frequency stability is rated and measured by its ppm or ppberror, part per million errors or part per billion errors. The \u201cpart\u201dcan be either the number of ticks or the number of seconds that aredrifting from the actual value (both can be used interchangeably). Thesmaller this ppm value is the more stable the clock is. The reasons why  ...\n  Let\u2019s take as an example an HPET clock with a frequency of 10MHz( 10_000_000Hz) in an environment between -40 to 80 degrees C. Add thefact that the clock manufacturer has specified that it has a stabilitythat varies between -7.5 and +7.5 ppm.\n For every 1 million ticks or 1 million seconds, there is a plus or minus7.5 variation. Over a whole day the clock would drift by 0.648 seconds.\n  Atomic clocks have tremendously small error variations, those can bebetween 0.0001 and 0.000001 ppb (part per billion). They are driftingby a second every ~300k to 30M years, which confirms what we\u2019ve exploredin the first section of this article.\n Temperature plays such a big role in the stability of our clock so tomake them more stable we could either lock our machines in a controlledtemperature environment or try to come up with a way to automaticallycompensate for how much the temperature is affecting the clock. While the first option is possible in data centers, it \u2019s not somethingthat  ...\n However, we could devise an experiment in which we find a formula thatcalculates how much the temperature affects the clock frequency and slewour clock appropriately. We could monitor the temperature, feed it, and use it to train thecorrection mechanism in whatever software or mean we use to handlesetting time. Which all comes up to gathering  ...\n Unfortunately, no solution is perfect and this could be overlyoptimistic. Correlation doesn \u2019t equate causation. Still, such mechanismare great to keep the clock stable within a certain temperaturerange. Some experiments have found that temperature compensation reducesdeviation by 3.5 times. Our earlier drift of 0.648s would be reduced  ...\n Let\u2019s now define some important terms we need in our inventory tounderstand everything that is coming next about external clocks.\n \u201cReference clock\u201d or \u201cordinary clock\u201d, this means any machine thatcan be used to retrieve accurate time, usually in UTC so that itcan be used by anyone. Those could range from cesium clock, to GPS,to terrestrial broadcast like radio clocks.\n The time from the reference clock will be forwarded from one server toanother until it reaches you. Thus the reliability of the network, andhow far you are from the it play a big role in how accurate the valuefrom the reference clock will be.\n We\u2019re using server that are connected to external time source and externaltime source themselves interchangeably here unless explicitly mentioned.\n \u201cDelay\u201d, a word we\u2019ve seen before that means the time it takes to doa round trip. It\u2019s normally calculated by timestamping on both endsand doing an estimate of the difference in transport and processing.\n  \u201cOffset\u201d or \u201cPhase\u201d, is the time difference/deviation between theclock on one end and the clock on another end, usually your clock and areference clock. Phase referring to the oscillation rhythm difference,as in \u201cout of phase\u201d.\n  \u201cJitter \u201dor \u201cDispersion \u201d, is the successive time values differenceafter subsequent requests from remote servers or action. It \u2019s a greatcriteria to measure the stability of the network, how much delaychanges, if it varies a lot the network isn \u2019t reliable. This term canbe used as a measure of stability of any other repeatable  ...\n  \u201cclockhopping\u201d, the spreading of time, jumping from one server toanother, which results in less and less accuracy.\n  \u201cFrequency error\u201d, this is how much the reference clock or our localclock drifts over time, measured in ppm and ppb, as we\u2019ve seen before.\n  \u201cStability\u201d, the generic term to refer to how much we can trust aclock. It\u2019s also a term used in control theory to refer to how far weare from a reaching a stable point (0).\n  \u201cAccuracy\u201d, also a generic term that means how far apart a machine\u2019stime is away from UTC. The typical accuracy on the internet rangesfrom about 5ms to 100ms, varying with network delays.\n  \u201cPPS\u201d, or \u201cPulse Per Second\u201d, a method of synchronizing two clocksbased on a tick that happens every second.\n  \u201cWatchdog timer\u201d, is a timer that keeps the time since the last pollor update of time from the external source of time.\n  \u201cFudge\u201d, I couldn\u2019t put my hand on the precise definition of this termother than that it refers to any special way in which you can configurean external clock.\n  \u201cMax Poll\u201d and \u201cMin Poll\u201d, throttling parameters which are the maximumand minimum number amount of time that should pass before the remoteserver allows you to query it again. This is usually expressed inpowers of 2, for example 6 means  2^6 or 64 seconds.\n  \u201cStiffness \u201dor \u201cUpdate Interval \u201dor \u201cTime Constant \u201d( \u03c4tau), how muchthe clock is allowed to change in a specified amount of time, andthe time between the updates. A small time constant (update interval)means a clock that is less stiff and slews quickly. It \u2019s usuallyexpressed like the max poll in powers of  ...\n When all those values differ a lot, we can\u2019t allow an abrupt jump oftime on our end, that would disrupt local processes. So what we do isslew time, but that would also mean having a slow calibration. In an ideal world, all the reference clocks would be the same everywhere,however they aren \u2019t. So what should we do if there \u2019s a big  ...\n First off, if the offset is too big we don\u2019t trust it until we have thesame offset from multiple time sources. If it\u2019s small enough we go on with our slewing. If the offset is still big, we have to set the clock anew, step it.\n However, on boot we have to sync from the hardware clock, like we\u2019veseen before, which might be off, so we have to either slew the systemtime which can take several hours or make the updates less stiff toquickly reduce the offset (in 5min usually with an less stiff PLL).\n Moreover, we can\u2019t also believe any remote server or machine as a timesource, so we ought to devise a mechanism, a sanity check, to filterwhich machines we trust and which ones we don\u2019t, maybe even combiningmultiple time sources in a quorum-like fashion. We can evaluate remote machines for how stable they are by making thempass  ...\n That also creates a trust issue on boot, so what can be done is to sendmultiple quick requests to multiple external time source servers toinsure their reliability and get an estimate within 10 seconds at boot.\n As time goes on, our system clock should become more stable and we shouldbe requesting the remote servers less frequently.\n This is possible through different feedback mechanisms that learn toadjust the system time appropriately. In a way, this is similar to themechanism that fixes the hardware clock drifting but for the systemclock which we haven\u2019t tackled before.\n Different Unix-like OS and software provide different means of adjustingthe system clock according to external time. There are 4 mechanismsor system calls that can be used to implement the adjustment of thesystem clock.\n The first method is through  settimeofday(2), which is used to jump to afixed place in time, to step it. This could be used for very big offsets.\n The second method is through  adjtime(2)which is used to slew thetime by changing the frequency of the clock. You pass a delta to thefunction and if this is positive the clock will be sped up until itgains that delta and if negative the clock will slow down until it haslost this delta. This is intended to be used to make small  ...\n The third method is through the  hardpps() function that is internal tothe kernel and handles an interrupt service that listens to a constantpulse that happens every second. The RFC 2783 defines how this APIshould behave, basically syncing the transition between pulses with thesystem clock.\n The fourth and last method is through the  ntp_adjtime(2) function,that is an advanced mechanism to discipline the system clock. It isdefined in RFC 1589 called \u201cA Kernel Model for Precision Timekeeping\u201d,also going under the name of \u201ckernel clock discipline\u201d. Initially createdas a better version of  adjtime(2)that can be  ...\n &gt; adjtimex -p mode: 0 offset: -7431812 frequency: -1677305 maxerror: 2000 esterror: 0 status: 8193time_constant: 7 precision: 1 tolerance: 32768000 tick: 10000 raw time: 1588007066s 608698606us = 1588007066.608698606\n &gt; ntptimentp_gettime() returns code 0 (OK) time e2518f79.db34a44c Mon, Apr 27 2020 20:06:01.856, (.856272195), maximum error 49500 us, estimated error 0 us, TAI offset 0ntp_adjtime() returns code 0 (OK) modes 0x0 (), offset -6172.114 us, frequency -25.594 ppm, interval 1 s, maximum error 49500 us, estimated error 0  ...\n Phase locked loop and frequency locked loops main difference is theirpredictor part that will output the value of their feedback loop. Theyboth take as input the timestamp and compare it with local time butwhat happens afterwards, how they change either the phase/offset or thefrequency depends on which one is chosen.  ...\n PLL is an offset discipline mode, its predictor is an integral of theoffset over past updates and outputs the offset amortized over timein order to avoid setting the clock backward. It adjusts it graduallyby small increments or decrements until the offset is gone. The timeconstant aka update interval is the rate at  ...\n FLL is a frequency based discipline mode, its predictor takes the offsetand divides it by the time since the last update and adjusts the clockfrequency such that at the next update the offset will be as small aspossible.\n In the most recent software, the two modes are used together andmixed. They are weighted according to the polling intervals, when itis bellow Allan intercepts, which is 2048s (this can be changed), thena phased-lock loop is used with more weight, and whenever the pollinginterval is higher, then a frequency-locked  ...\n When not fetching the time from another machine that is connected to areference clock but having it connected directly to us, we\u2019ll requiresome hardware driver to interface with it. These physical source of time can implement their own clock disciplinealgorithm and synchronization protocol and thus we have to adaptappropriately.  ...\n Before moving on to what those device could possibly be, let\u2019s have asmall note on leap second smearing.\n There are two main ways to handle a leap second, we could either step,that is stopping the clock completely for a second (repeating a second)or skipping an entire second, or we could either slew the clock usingthe smooth kernel discipline we\u2019ve seen. This is what leap smearing is about, it \u2019s a standard pushed by  ...\n However, keep in mind that such standard only has weight if everyoneadhere to it, otherwise during the leap second event multiple serverswill have different time and the dispersion will be bigger. That is whywe shouldn\u2019t mix smearing with non-smearing time servers.\n We\u2019ve said we could connect to physical precise time source to becomea reference clock, so what can those be? We\u2019ll give as example the twomost popular ones.\n In the first category we have terrestrial broadcasts, radio stationsthat broadcast time. The most well known are the CHU in Canada, WWV in Colorado, USA, and WWVHin Hawai, USA.\n CHU broadcasts at 3.33MHz, 7.85MHz, 14.67MHz since 1923, and WWVbroadcasts on 2.5MHz, 5MHz, 10MHz, 15MHz, and 20MHz since 1945. They bothget their time from other reliable sources such as atomic clocks and GPS.\n As they are radio broadcasts, you need a radio receiver and a way toanalyze the audio to be able to synchronize with them.\n What they broadcast is some repetitive beep to sync on pulse per secondand minute, some binary coded decimal, and literally someone talking fromtime to time to say in English, or French for the Canadian version, whattime it currently is in UTC hour and minute. So they alternate beeps,ticks, and voice announcements.  ...\n Furthermore, there are also telephone numbers that you can call to getthe time, similarly to the radio. One of them is provided by the sameorganization as the CHU, the NRC, National Research Council of Canada.\n In the second category we have GPS, the Global Positioning System. And let\u2019s be more explicit here, we\u2019re talking about the American NAVSTARGPS that is composed of multiple satellites at 20K km orbit,always having 4 satellites visible from any point on Earth.\n To sync time with a GPS you need a GPS receiver, some of those also comewith a pulse per second feature for accuracy sake. The receiver catchesthe civilian band frequency that the GPS continuously broadcasts anddecodes the signal to get the messages in it. This message containsa multitude of information  ...\n The GPS satellites include atomic clocks that are accurate to thenanosecond. However, we \u2019re loosing a bit of accuracy because of the delaybetween us and the satellite. So you \u2019d think that since they have atomicclocks they would follow TAI (International Atomic Time), however theyfollow their own special  ...\n The format time that GPS store and broadcast doesn \u2019t use theyear/month/day Gregorian calendar but express it as a week number anda seconds-into-week number. The week is a 10-bit field and thus rotatesevery 1024 weeks, which is approximately 19.6 years. The first rolloverhappened on August 21, 1999 and  ...\n This phenomena of week rollover has been deemed the \u201cY2K\u201d of GPS becausemany device drivers didn\u2019t anticipate it and had hard-coded the GPS epoch. A solution to this would be to derive the GPS epoch from the leapsecond data broadcasted by the GPS and a leap second table. Weirdly,a GPS vendor, has a patent  ...\n   A last nota-bene, your position is derived from how far you are, thedelay, from 3 satellites and calculating the intersection.\n To link this to the previous ideas, if you have a driver that supportsthose external clocks hardware device receiver, it should implement the ntp_adjtime(2) or a custom discipline to take care of adjusting timeitself. Be sure to check the list of drivers available for your solution.\n Let\u2019s proceed from the abstract talk to the concrete: which protocolsand standards can be used to implement time synchronization with externalsources of time.\n The most trivial protocol is the Time Protocol defined in rfc 868. It\u2019s asimple client-server protocol where the server when receiving a requestdirectly replies the time in seconds since midnight 1st 1900 GMT as a32 bit binary number. The protocol runs on UDP and TCP on port 37, as  /etc/servicesshows:  ...\n  Because it\u2019s based on a 32 bit value, it\u2019s going to rollover at some pointin 2036 which will deprecate it easily unless the value is upgraded to64 bits.\n While it\u2019s simple, it doesn\u2019t take into consideration leap seconds,delays, is only precise to the second, and disregards all the stuffsabout time we\u2019ve previously mentioned.\n  rdate - get the time via the networkrdate connects to an RFC 868 time server over a TCP/IP network, printingthe returned time and/or setting the system clock.\n The evolution of the time protocol is the Network Time Protocol, orNTP. It takes into consideration multiple things the other did notincluding: leap seconds, broadcasting mechanism, active/passive modes,security and digest, a hierarchical level of accuracy, polling mechanisms,more precision,  ...\n The current protocol stands at version 4, NTPv4, which is documentedin rfc 5905 but has additional addendum for extensions. It is backwardcompatible with its previous version, NTPv3, in rfc 1305.\n   The timestamps that NTP sends and receives rely on UTC time, the timezoneinformation is kept for local machines to decide. Additionally, NTPwarns of any impending leap second adjustment. Thus, in theory, all NTP servers should store the same UTC time up toa certain precision.\n When an NTP client is running we have to choose what to do with thehardware clock, do we sync it with system time. Many implementationseither save the drift to a file so that it can be used on the nextboot and/or rely on the kernel \u201c11 minute mode \u201dwe talked aboutearlier. Moreover, if a network  ...\n NTP uses a hierarchy, a semi-layered division, to classify clocks thatare available. It calls them strata.\n The stratum, singular, is a measure of the synchronization distance to areference clock. Remember a reference clock is an actual hardware thatcan be used to get precise time, like a GPS. The stratum is the numberof servers we need to pass through to reach such reference clock. Unlikejitter  ...\n The reference clock itself, the timekeeping device, is considered stratum0 and the closest servers connected to it are at stratum 1. Thus a serversynchronized to a stratum  n server will itself be considered stratum  n+1. The upper limit for stratum is 15, in theory, above this the dispersionmay  ...\n The stratum hierarchy helps in spreading the load and avoid cyclicalclock dependencies as it \u2019s now in the shape of a tree. That means asmall number of servers give time to a large number of clients, whichin turn could be servers to others. That implies low stratum servers,such as stratum  ...\n In addition, the NTP contains in its message a reference identifier, refId, which denotes which reference clock is used at stratum 0 on thispath. So you can know you\u2019re getting your time from which source.\n Let\u2019s also mention that NTP can be deployed locally, in a LAN. It\u2019spossible to create your own hierarchy by acquiring a timekeeping device,such as a GPS, to avoid network delays and get a better precision.\n NTP is not limited to the usual client/server architecture, it includeshorizontal peering mode and a broadcasting mechanism.\n Horizontal peering is when multiple servers are coupled together in agroup to synchronize time more accurately.\n The broadcasting mode works by having a server sends the time to abroadcast address and have clients listen for NTP packets sent to thataddress. This mode is useful for leap second propagation instead ofhaving it sent only when the client connects.\n On that note, on the day of a leap second event, the leap second couldbe propagated either from a configuration file, a reference clock, oranother NTP server. What then happens, how the leap second is applied,depends on the implementation. It could be a stop or skip mechanism ora  ...\n  In the early days of the NTP, the timestamp in the message used to havethe same issue as the Time Protocol, a single 32 bit value, thus havingrollover issue.\n NTPv4 now uses a 128-bit date format that is split into 2 main parts, oneis 64 bits for the seconds and the other 64 bits for fractional seconds. The seconds part is again split into two others, the most significant32 bits is the current era number (number of rollovers), and the  ...\n  0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |LI | VN |Mode | Stratum | Poll | Precision | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Root Delay | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ...\n As you can see NTP is much more advanced than the time protocol. Forexample, a minimal request would need the version and mode filled,client mode being 3, or 011 in binary. The usual unencrypted messagesare 90 bytes long (76 bytes at the IP layer). A broadcast happens every64  ...\n With such protocol, though requiring minimal bandwidth, but with aninsane amount of clients, there needs to be throttling system. Thepolling interval of a client depends on many factors, including itscurrent precision and the maximum and minimum polling interval allowedby the  ...\n NTP servers are viewed as a public utility of sorts and thus need helpfrom the public, especially the people that are knowledgeable and haveaccess to static public IP addresses. The pool of public NTP serversneeds to keep growing to serve the increase in clients.\n   But why rely on publicly available NTP servers instead of building ourown NTP server hierarchy on LAN, haven\u2019t we said this would offer moreprecision.\n Not only would it offer more precision because of the stability ofthe bandwidth and its network distance, it would also mean it \u2019s underour control and thus not throttled, thus more available. That wouldalso mean more security and trust as you could put the NTP server in  ...\n But let\u2019s say you want to deploy your own NTP server, what\u2019s availableout there for you to use, what are the implementations.\n The NTP reference implementation of the protocol, the canonical opensource implementation, is called ntpd. It has continuously been developedand maintained for over 25 years.\n It comes with sensible default configuration to fetch time from a poolof NTP servers on the internet. Most Unix-like distros have packages thatare easy to set up.\n What you can configure range from the location of the drift file tocontrol local clock, to the location of the leap second and how it \u2019sapplied, to the clock discipline related configurations like jitter rate,to security options, to log locations, and to hardware driver  ...\n The  ntpq utility allows to manage the NTP server, be it local orremote, and query its status and configurations. Similar to openssl,it has an interactive mode and a command line arguments mode. For instance, the  ntpq -p output is quite interesting.\n  remote refid st t when poll reach delay offset jitter==============================================================================*time-A.timefreq .ACTS. 1 u 152 1024 377 43.527 -11.093 3.982+clock.isc.org 127.0.0.1 2 u 230 1024 377 67.958 -7.729 0.071 time-a.nist.gov  ...\n It displays the server name in the first column along with its state, a + meaning it\u2019s a candidate server and  * meaning it\u2019s a peer. The refid column is the reference identifier we\u2019ve mentioned. The  stcolumn is the stratum level of the server. The  whencolumn shows thenumber  ...\n Another tool to test remote NTP servers is  ntpdate. It can be used toinitiate syncing local clock but when used with the  -d option it canquery an NTP server without changing system time.\n  &gt; ntpdate -d time-b.nist.gov30 Apr 19:04:27 ntpdate[72016]: ntpdate 4.2.8p14@1.3728-o Wed Mar 18 13:44:46 UTC 2020 (1)Looking for host time-b.nist.gov and service ntp129.6.15.29 reversed to time-b-g.nist.govhost found : time-b-g.nist.govtransmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)transmit(129.6.15.29)receive(129.6.15.29)server  ...\n  There are many other implementations of NTP servers other than thecanonical ntpd. You can find multiple comparison tables online thatshow the differences between them. Here\u2019s a few things that often getmentioned:\n  The canonical implementation, ntpd, fully supports the specs as it\u2019sthe reference implementation, has been ported to the biggest number ofoperating systems, has the largest number of drivers, and is probablythe most stable.\n Chrony is another software that implements NTPv4. It has been writtenfrom scratch and is known to be well maintained and secure. Chrony \u2019s biggest selling point is that it works remarkably well inenvironments where the external time source isn \u2019t regularly available,a  ...\n systemd \u2019s timesyncd is a network time protocol daemon that implements anSNTP client, Simple Network Time Protocol, defined in RFC 4330. SNTP isa simplified version of NTP that uses the same network packet format butwith a different way to deal with synchronization.  ...\n The advantage of having the time synced using a service manager is that itcan be hooked to automatically start whenever the network is operational,whenever there\u2019s connectivity.\n   &gt; timedatectl status Local time: Thu 2020-04-30 19:26:56 EEST Universal time: Thu 2020-04-30 16:26:56 UTC RTC time: Thu 2020-04-30 16:26:56 Time zone: Asia/Beirut (EEST, +0300) System clock synchronized: no NTP service: inactive RTC in local TZ: no\n   &gt; timedatectl timesync-status Server: 162.159.200.1 (1.arch.pool.ntp.org)Poll interval: 34min 8s (min: 32s; max 34min 8s) Leap: normal Version: 4 Stratum: 3 Reference: A960804 Precision: 1us (-25) Root distance: 32.142ms (max: 5s) Offset: -9.034ms Delay:  ...\n The client configuration can be found in  /etc/systemd/timesyncd.confwith a format defined in the  timesyncd.conf(5) manpage and systemd-timesyncd.service.\n   clockspeed by D. J. Bernstein is an even simpler approach to SNTP thatuses the TSC register to adjust the ticking speed.\n Another protocol called Berkeley Algorithm works by polling the timefrom all the machines on a network and taking the average, all the othermachines then syncs with this time.\n Yet another interesting implementation is HTP, the HTTP Time protocol. HTPrelies on the Date header of HTTP, defined in the HTTP/1.1 RFC 2616. Ituses statistical analysis to arrive at the most accurate time possible. Soif you can access a webpage then  ...\n Hence, let\u2019s see what\u2019s up with security and NTP. We know that anythingthat is on the network should be secure and trusted.\n If, for example, an attacker effectuate a man-in-the-middle attack theywould be to be able to change the time source for your machine. Thesecurity implications would be that certificates and signatures thatshouldn \u2019t be trusted because they expired  ...\n That\u2019s one reason why browsers today show errors whenever the systemclock is out of sync.\n The NTP specifications have been there for so long that we\u2019ve hadplenty of years to find security issues and fix them, the referenceimplementation being the testing ground for them. The codebase isconstantly audited. For example, the first version  ...\n There has been a move by the IETF to create this encryption overlaycalled Network Time Security (NTS). CloudFlare currently implements itbut not many others.\n Another project called NTPSec forks the ntpd source, tries to removecomplexity and clean the code. Finding vulnerabilities in it.\n Audits are important, as we\u2019ve said, Chrony came out as the most securebetween multiple NTP implementations.\n  A 2017 security audit of three NTP implementations, conducted on behalfof the Linux Foundation \u2019s Core Infrastructure Initiative, by the securityfirm Cure53 suggested that both NTP reference implementation and NTPsecwere more problematic than  ...\n On the other hand, there are other types of things we need to careabout. We \u2019ve discussed the polling issues and the lack of public NTPservers in the pool, and so it \u2019s important for them to be able towithstand heavy loads. One attack relies  ...\n Another security issue related to how much we rely on NTP as a publicservice, is about how some IoT devices have been found to hard-code theaddress of NTP servers. These kinds of assumptions are dangerous.\n The last thing I want to address in this section is another protocolfor syncing system time with an external time source called PTP, thePrecision Time Protocol.\n PTP is used for when NTP doesn \u2019t provide enough precision, for criticalmeasurement and control systems such as financial transactions or mobilephone tower transmissions. It is specially crafted for the local networkscenario where you have  ...\n PTP was originally defined by the IEEE in 2002 in the IEEE 1588-2002standard, officially entitled \u201cStandard for a Precision ClockSynchronization Protocol for Networked Measurement and Control Systems \u201d,then reviewed in IEEE 1588-2008, PTPv2,  ...\n PTP is similar to NTP in the way that it synchronizes time betweenmachines but the difference is that it adds accurate network latencyinformation using hardware timestamping. Hardware assisted timestamp is done at the very lowest levels of  ...\n  It uses the same epoch as the Unix time however, while Unix time is basedon UTC and is subject to leap seconds, PTP is based on the InternationalAtomic Time (TAI).\n An ordinary clock, in NTP parlance a reference clock, is the source oftime in PTP that distributes it to a grandmaster, which can then againrelay it to boundary clocks that others sync with. It is an architecturethat is integrated with  ...\n Within a group the system is automatically able to decide on who to electas a master clock, which is the clock which is deemed the most accurate.\n Let\u2019s end by saying that when push comes to shove, you can always buya machine that comes with everything integrated instead of setting itup yourself.\n In the next section we\u2019ll see systems that rely on precise time inspecial ways.\n   We\u2019ve hinted and mentioned some examples of what could happen if thereis misbehavior in system time. What else could happen.\n We rely on system time for anything related to communication with otherhumans, it creates the context of what is happening. It is also usefulfor sampling, data collecting for statistical analysis.\n With an out-of-whack system time, logs will be out of synchronizationand events will be hard to debug. It will be hard to correlate thingswith real life. Database queries that rely on the  now()to get the current time anddate will  ...\n Apart from the human perception issues there are the countless overflowsand rollovers we \u2019ve mentioned. All of them being issues related to thesize of the data structure that isn \u2019t enough to store what is needed, leadingto either  ...\n There are the problems related to time zones and daylight savingevents. Those can happen during the transition when computers repeat anevent for one more hour or one hour less than the expected duration. Thisis tricky when those  ...\n To resolve most of those it\u2019s better not to use time zones and DST inthese cases but to rely on UTC and leave civil time for display only. Butas you know, there\u2019s still the issue of leap seconds.\n Some domains need more synchronization than others, let\u2019s discussdistributed systems and real-time operating systems as examples.\n A distributed computer system consists of multiple software pieces runningon different computers but that still try to act as a single system.\n In a distributed system, it is important to keep clock synchronization,to ensure all the computers have the same notion of time so that theexecution runs on the same timeline. What we truly care about is event ordering, to know  ...\n In general there are two ways to keep things in order, you either use wallclocks, which are all the timekeeping devices we \u2019ve been mentioning thusfar, or you use logical clocks which are simple monotonous counters allgoing  ...\n The complication in distributed systems is that system clocks ondifferent machines will eventually drift and so it\u2019s hard to keep a strictordering. That\u2019s not what\u2019s expected of a consistent monotonic clock. That is why logical  ...\n However, Logical clocks are not always an option. Another one could beto have a strong coordinator for timestamp in the middle where messagesalways pass through it. But that solution adds a bottleneck to the architectureand  ...\n In distributed systems, virtual machines are often used, so a way tokeep them in sync is to sync them with their host.\n The other domain to explore is real-time operating systems, systems thatare mission critical and require accuracy.\n Real-time OS, aka RTOS, are similar to general-purpose OS (GPOS) inthat they are responsible to managing computer resources and hostingapplications, but they differ in the way they are made to have precisetiming and high  ...\n RTOSs are deterministic by design, they are made to meet deadlinesassociated with external events, they are made to be responsive. Its jitters, the measure of error in the timing of subsequent tasks,should be extremely  ...\n Depending on the type of events it can guarantee, real-time OS areseparated into two categories. If it is mandatory that it should betruly deterministic and that a not adhering means a system failure, wecategorize it  ...\n So programs running on real-time OS should run with consistent timing,but we don \u2019t stop at this, programmers should have full control on howthese tasks are prioritized and be able to check for deadlines. Theyshould  ...\n The priority given to task are a parameter that is part of the schedulingalgorithm an OS uses to choose which task should run next. It schedulestasks based on interrupts. The time to handle this interrupt routine  ...\n The scheduling is strict, no low priority task can run before a highpriority one. Real-time OSs use rate monotonic, earlier deadline first,preemptive scheduling algorithms while general-purpose OSs use completelyfair  ...\n There are many examples of real-time OS such as VxWorks, QNX, RtLinux,FreeRTOS, RiotOS, and more. Some are open source, some are POSIXcompliants, some are hard real-time, some are soft real-time.\n On Linux specifically, to enable real-time you have to enable the PREEMPT_RT scheduling patch. Though it\u2019s arguably soft real-time as it\u2019snot mathematically provable real-time.\n Another real-time Linux related project is the ELISA project, the EnablingLinux in Safety Application project, which aims at creating a standardto build mission critical Linux systems.\n  Founding members of ELISA include Arm, BMW Car IT GmbH, KUKA, Linutronix,and Toyota. To be trusted, safety-critical systems must meet functionalsafety objectives for the overall safety of the system, including  ...\n   For machines time may need accuracy but for humans it is definitelysubjective. We feel time as our emotions are swayed by life. Thiscertainly matters.\n We possess clocks within us, biological clocks in which sun time andmemories play an integral part in.\n For example in emergencies and dangerous situations, time seems toslow down. And as we grow older we perceive time to move faster. It\u2019sinteresting to see time from a human perspective.\n We live in such an interconnected world that greeting people inthe morning on the internet has lead to the  Universal GreetingTime. Time inthis interconnected world has also lead to marketingcampaigns and  ...\n I\u2019ve written in depth about \u201cinternet time perception\u201d in  this otherarticle.\n I hope this colossal article has cleared the topic of time, and time onUnix. It may not be as concise and scientifically true in some placesbut still convey an approximate overview to readers. Please reachout  ...\n                       If you want to have a more in depth discussion I&#39;m always available by  email or irc.We can discuss and argue about what you like and dislike, about new ideas to consider, opinions, etc.. If you don&#39;t  ...", "posttime": "2020-05-02 21:19:44", "tags": "unix,\u65f6\u95f4", "title": "Unix\u4e0a\u7684\u65f6\u95f4", "title_en": "Time on Unix", "transed": 1, "url": "https://venam.nixers.net/blog/unix/2020/05/02/time-on-unix.html", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["unix", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "ef3c4f5d6860c14256741f3887554c69.jpg", "infoid": 1000341, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f\u8bf4\u660e\u5982\u4f55\u81ea\u5df1\u5236\u4f5c\u7684\u8bf4\u660e\u4e66\u3002\uff1a)\u73a9\u5f97\u5f00\u5fc3\uff0c\u8bf7\u628a\u4f60\u7528\u5b83\u505a\u4ec0\u4e48\u7684\u622a\u56fe\u53d1\u7ed9\u6211\uff01\uff1a)\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500\u3002\n\u8ba9\u6211\u77e5\u9053\u4e00\u672c\u8bf4\u660e\u4e66\u662f\u5426\u6709\u7528\uff0c\u5982\u679c\u6709\u7528\uff0c\u6211\u4f1a\u9a6c\u4e0a\u505a\u4e00\u672c\u3002\n\u8fd9\u5c31\u662f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u7531\u6765--\u5982\u4f55\u83b7\u5f97\u66f4\u597d\u7684\u5728\u7ebf\u4fee\u8865\u4f53\u9a8c\u3002\u5982\u679c\u4f60\u4eec\u5236\u4f5c\u5e76\u8bd5\u7528\u4e86\u5b83\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\u5e76\u63d0\u4f9b\u53cd\u9988\uff01\u6211\u660e\u5929\u8981\u505a\u4e00\u672c\u96be\u6559\u7684\u4e66\u2026\u2026\u3002\n\u5bf9\u8bdd\u7ed3\u675f\u3002\n\u8c22\u8c22.\u3002twitter\u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002\u64a4\u9500", "note_en": "And here&#39;s the instructable that shows how to make one yourself. :) Have fun and please send me screengrabs of what you do with it! :)\n  \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500\n  Let me know if an instructable would be useful, and if so I&#39;ll whip one up.\n  That&#39;s the idea this grew out of - how to enable better online tinkering experiences. If you guys make and try it out, please be in touch to give feedback! I&#39;ll whip up an instructable tomorrow...\n  \u5bf9\u8bdd\u7ed3\u675f\n      \u8c22\u8c22\u3002Twitter \u4f1a\u4f7f\u7528\u6b64\u4fe1\u606f\uff0c\u6765\u4f18\u5316\u4f60\u7684\u65f6\u95f4\u7ebf\u3002  \u64a4\u9500", "posttime": "2020-05-02 21:19:26", "tags": "\u89c6\u9891,mirror,\u6709\u7528,instructable", "title": "\u7528\u4e8e\u89c6\u9891\u901a\u8bdd\u7684\u4fa7\u89c6\u955c", "title_en": "Sideview Mirror for Videocalls", "transed": 1, "url": "https://twitter.com/AmosLightnin/status/1255511707960647684", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u89c6\u9891", "mirror", "\u6709\u7528"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000340, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "+((\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[]+[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]-(\uff01\uff01[]))+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(+\uff01\uff01[]))/+((\uff01+[]+(\uff01\uff01[])-\u3002[]+[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[]\u3002+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[]+\uff01\uff01[])+(\uff01+[]+(\uff01\uff01[])-[])+(\uff01+[]+(\uff01\uff01[])+\uff01\uff01[])+(+\uff01\uff01[]))", "note_en": "+((!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![]+[])+(!+[]+(!![])+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]-(!![]))+(!+[]+(!![])+!![]+!![])+(+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![])+(+!![]))/+((!+[]+(!![])-[]+[])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(+!![])+(!+[]+(!![])+!![]+!![]+!![]+!![])+(!+[]+(!![])+!![]+!![])+(!+[]+(!![])-[])+(!+[]+(!![])+!![]+!![]+!![]+!![]+!![])+(+!![]))", "posttime": "2020-05-02 21:19:23", "tags": "\u7532\u9aa8\u6587,oracle,faces", "title": "\u7532\u9aa8\u6587\u9762\u4e344000\u591a\u540d\u5973\u6027\u7684\u4e0d\u5e73\u7b49\u85aa\u916c\u7d22\u8d54", "title_en": "Oracle faces claims of unequal pay from over 4k women", "transed": 1, "url": "https://www.theregister.co.uk/2020/05/02/oracle_pay_discrimination_lawsuit_gets/", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u7532\u9aa8\u6587", "oracle", "faces"]}, {"category": "", "categoryclass": "", "imagename": "d1a9b44493c2c0d1728e0f6150421d66.png", "infoid": 1000339, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5199\u4f5c\u3001\u8ba1\u5212\u3001\u534f\u4f5c\u548c\u7ec4\u7ec7\u3002\u7406\u5ff5\u5c31\u662f\u4f60\u6240\u9700\u8981\u7684\u4e00\u5207--\u5728\u4e00\u4e2a\u5de5\u5177\u91cc\u3002\u201c\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u5305\u542b\u4e86\u6211\u5bf9Concept\u7684\u89c2\u5bdf\uff0c\u5b83\u662f\u65e0\u4ee3\u7801\u7684\u62e5\u62a4\u8005\uff0c\u6b63\u5728\u541e\u566c\u751f\u4ea7\u529b\u5de5\u5177\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6982\u5ff5\uff0c\u6216\u8005\u4ee5\u524d\u6ca1\u6709\u7528\u8fc7\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6587\u7ae0\u53ef\u80fd\u4e0d\u9002\u5408\u4f60\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u5bb6\u5728diesdas.digital\u5de5\u4f5c\u7684\u516c\u53f8\uff0c\u6211\u4eec\u70ed\u7231\u89c2\u5ff5\uff0c\u800c\u4e14\u4e00\u76f4\u5728\u5e7f\u6cdb\u4f7f\u7528\u5b83\uff0c\u4ee5\u81f3\u4e8e\u5b83\u8ba9\u6211\u4eec\u4ee5\u524d\u4f7f\u7528\u7684\u5927\u591a\u6570\u5176\u4ed6\u5de5\u5177\u53d8\u5f97\u591a\u4f59-\u5b83\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6211\u4e0d\u77e5\u9053\u5982\u679c\u6ca1\u6709\u5b83\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8fd0\u8425\u516c\u53f8\u3002\u6240\u4ee5\u8fd9\u4e2a\u5e16\u5b50\u975e\u5e38\u2026\u3002\nConcept\u662f\u4e00\u79cd\u5143\u5de5\u5177\uff1a\u4e00\u79cd\u6784\u5efa\u5de5\u5177\u7684\u5de5\u5177\uff0c\u5b83\u7684\u53ef\u5ef6\u5c55\u6027\u5982\u6b64\u4e4b\u5f3a\uff0c\u4f7f\u5f97\u53d1\u660e\u60a8\u81ea\u5df1\u7684\u5de5\u4f5c\u6d41\u53d8\u5f97\u5982\u6b64\u5bb9\u6613\uff0c\u4ee5\u81f3\u4e8e\u60a8\u4e0d\u7981\u60ca\u53f9\u4e0d\u5df2\uff1a\u5141\u8bb8\u4eba\u4eec\u5728\u4e0d\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u6570\u636e\u5e93\u548c\u5173\u7cfb\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6210\u5c31\u3002\u5b83\u8fd8\u64c5\u957f\u5a92\u4f53\u5bc6\u96c6\u7684\u7a7a\u767d\u9875\u9762\u534f\u4f5c\u73af\u5883--\u5b83\u5728\u8fd9\u65b9\u9762\u6bd4\u8c37\u6b4c\u6587\u6863(Google Docs)\u5f3a\uff0c\u6bd4Dropbox Paper\u597d\uff0c\u6bd4\u4efb\u4f55\u7ef4\u57fa(Wiki)\u90fd\u597d\u3002\n\u4e00\u5f00\u59cb\u5c31\u662f\u9633\u5149\u548c\u5f69\u8679\uff1a\u4f60\u53ea\u9700\u8981\u51e0\u9875\u7eb8\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\uff1b\u8fd9\u91cc\u662f\u4f1a\u8bae\u7b14\u8bb0\uff0c\u90a3\u91cc\u662f\u5f85\u529e\u4e8b\u9879\u6e05\u5355\uff0c\u90a3\u91cc\u662f\u7279\u96f7\u6d1b\u5f0f\u7684\u9ed1\u677f\uff1b\u592a\u68d2\u4e86\uff0c\u6700\u540e\u4f60\u6240\u6709\u79fb\u52a8\u7684\u6570\u636e\u76ee\u6807\u90fd\u6c47\u805a\u5230\u4e86\u4e00\u4e2a\u5730\u65b9\uff01\u7136\u540e\uff0c\u60a8\u5f00\u59cb\u5c06\u66f4\u591a\u7684\u4e1c\u897f\u653e\u5728\u4e00\u8d77\uff1a\u60a8\u53d1\u73b0\u4e86\u81ea\u5b9a\u4e49\u89c6\u56fe\u3001\u5173\u7cfb\u548c\u6570\u636e\u5e93\u3002\u8111\u7b4b\u6025\u8f6c\u5f2f\uff0c\u6240\u6709\u7684\u53ef\u80fd\u6027\uff01\u4e00\u591c\u4e4b\u95f4\uff0c\u6982\u5ff5\u6210\u4e3a\u60a8\u516c\u53f8\u7684\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3001\u9879\u76ee\u6587\u6863\u5de5\u5177\u3001\u5185\u90e8\u7ef4\u57fa\u5de5\u5177\u3001\u9500\u552e\u7ebf\u7d22\u8ddf\u8e2a\u5de5\u5177\u3001CRM\u5de5\u5177\u2026\u2026\u3002\n\u5bf9\u4e0d\u8d77\uff0c\u6211\u9700\u8981\u4f11\u606f\u4e00\u4e0b\uff0c\u2026\u3002\u56e0\u4e3a\u4f60\u5de8\u5927\u7684\u7075\u6d3b\u6027\u4e5f\u662f\u4f60\u6700\u5927\u7684\u5f31\u70b9\u3002\n\u9996\u5148\uff1a\u901a\u77e5\u6ca1\u6709\u8ddf\u4e0a\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u5728\u6982\u5ff5\u4e0a\u6784\u5efa\u4e86\u5927\u91cf\u4e0d\u540c\u7684\u5de5\u5177\uff0c\u90a3\u4e48\u901a\u77e5\u5c31\u4e0d\u518d\u6709\u7528\u4e86\uff0c\u2026\u3002\u4f60\u4f1a\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u4e0a\u9762\u5217\u51fa\u4e86\u6240\u6709\u65b9\u9762\u768486\u9879\u66f4\u6539\uff1b\u5b83\u4eec\u6ca1\u6709\u6761\u7406\uff0c\u4e5f\u4e0d\u50cf\u5355\u72ec\u7684\u5e94\u7528\u7a0b\u5e8f\u90a3\u6837\u4e0e\u601d\u7ef4\u6876\u76f8\u5bf9\u5e94\u3002\u60a8\u7684CRM\u901a\u77e5\u7a81\u7136\u4e0e\u60a8\u5f53\u524d\u7684\u4ea7\u54c1\u5f00\u53d1Sprint\u66f4\u65b0\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u4ed6\u4eec\u600e\u4e48\u4f1a\u5206\u5f00\u5462\uff1f\u6982\u5ff5\u4e0d\u77e5\u9053\u5b83\u5728\u50a8\u5b58\u4ec0\u4e48\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u624b\u6bb5\u548c\u76ee\u7684\u2026\u2026\u3002\n\u6211\u4ece\u672a\u60f3\u8fc7\u6211\u4f1a\u8fd9\u4e48\u8bf4\uff0c\u4f46\u6211\u6000\u5ff5\u6536\u5230JIRA\u901a\u77e5\u7684\u65f6\u5019\uff0c\u56fe\u6807\u7684\u989c\u8272\u3001\u683c\u5f0f\u548c\u63aa\u8f9e\u4f1a\u7acb\u5373\u51c6\u786e\u5730\u544a\u8bc9\u6211\u5b83\u7684\u4e0a\u4e0b\u6587\u548c\u5185\u5bb9\u3002\n\u867d\u7136\u8fd9\u4e2a\u6982\u5ff5\u53ef\u4ee5\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684\u7528\u4f8b\uff0c\u8fd9\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u7279\u522b\u64c5\u957f\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u5b83\u6ca1\u6709\u5f15\u8d77\u8ba8\u8bba\uff0c\u56e0\u4e3a\u5b83\u7684\u8bc4\u8bba\u5f88\u5c0f\uff0c\u800c\u4e14\u5f88\u9690\u853d\u3002\u4f60\u4e5f\u4e0d\u80fd\u5f15\u8d77\u4eba\u4eec\u5bf9\u5361\u7247/\u9875\u9762\u7684\u67d0\u4e9b\u5c5e\u6027\u7684\u6ce8\u610f\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5143\u6570\u636e\u90fd\u53d8\u6210\u4e86\u4e00\u4e2a\u5f88\u957f\u7684\u5c5e\u6027\u5217\u8868\u3002\u5982\u679c\u4f60\u6709\u610f\u4e3a\u4e00\u4e2a\u7528\u4f8b\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u5177\uff0c\u4f60\u5e94\u8be5\u5f3a\u8c03\u5e38\u89c1/\u91cd\u8981\u7684\u529f\u80fd\uff0c\u800c\u9690\u85cf\u66f4\u591a\u6a21\u7cca\u7684\u529f\u80fd\u3002\u5728\u89c2\u5ff5\u4e0a\u4e00\u5207\u90fd\u662f\u4e00\u6837\u7684\uff0c..\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5de5\u5177(\u4f8b\u5982\u9879\u76ee\u5f85\u529e\u4e8b\u9879)\uff0cConcept\u6839\u672c\u6ca1\u6709\u4e3a\u8be5\u4efb\u52a1\u8bbe\u8ba1\u5f97\u5f88\u597d\u3002\u7531\u4e8e\u5b83\u7684\u5f3a\u5236\u901a\u7528\u6027\uff0c\u5b83\u51e0\u4e4e\u4e0d\u662f\u8bbe\u8ba1\u51fa\u6765\u7684\u3002\u4e00\u5207\u90fd\u662f\u59a5\u534f\u3002\u4e00\u5207\u90fd\u53d8\u6210\u4e86\u5b83\u7684\u6700\u4f4e\u516c\u5206\u6bcd\u3002\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u662f\u6709\u76ee\u7684\u7684\uff0c\u4e5f\u4e0d\u5bb9\u6613\u5728\u89c6\u89c9\u4e0a\u8fdb\u884c\u626b\u63cf\u3002\u901a\u7528\u5316\u8feb\u4f7f\u4e07\u4e8b\u4e07\u7269\u90fd\u91c7\u7528\u901a\u7528\u5316\u8bbe\u8ba1\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u6700\u5927\u7684\u62b1\u6028\u662f\u5de5\u5177\u5e94\u8be5\u662f\u8fbe\u5230\u76ee\u7684\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u5e76\u4e14\u4e0d\u4f1a\u6210\u4e3a\u969c\u788d-\u4f46\u6709\u4e86\u6982\u5ff5\uff0c\u6784\u5efa\u5de5\u5177\u672c\u8eab\u5f80\u5f80\u5c31\u6210\u4e86\u76ee\u7684\u3002\n\u592a\u591a\u65f6\u5019\uff0c\u4eba\u4eec\u65e0\u6cd5\u5904\u7406\u5f3a\u5927\u7684\u6982\u5ff5\u8d4b\u4e88\u4ed6\u4eec\u7684\u80fd\u529b\uff1a\u4ed6\u4eec\u7ecf\u5e38\u4e3a\u4e00\u4e2a\u95ee\u9898\u6784\u5efa\u6700\u590d\u6742\u3001\u6700\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u8ba9\u4ed6\u4eec\u770b\u8d77\u6765\u5f88\u806a\u660e\u3002\u56ed\u827a\u610f\u5ff5\u677f\u672c\u8eab\u5c31\u6210\u4e86\u4e00\u9879\u6d3b\u52a8\u2026\u3002\u6982\u5ff5\u4e0d\u4f1a\u59a8\u788d\u4f60\uff0c\u5b83\u7684\u5ef6\u5c55\u6027\u603b\u662f\u4f1a\u8ba9\u4f60\u8fdb\u4e00\u6b65\u8c03\u6574\u4f60\u7684\u7535\u8def\u677f\uff0c\u6dfb\u52a0\u53e6\u4e00\u4e2a\u5c5e\u6027\uff0c\u8fde\u63a5\u53e6\u4e00\u4e2a\u5173\u7cfb\uff0c\u6dfb\u52a0\u53e6\u4e00\u4e2a\u89c6\u56fe\uff0c\u68c0\u67e5\u4f60\u7684\u7535\u8def\u677f\u5e76\u5b8c\u6210\u6240\u6709\u5361\u4e0a\u7684\u6570\u636e\u3002\u5b83\u5df2\u7ecf\u6210\u4e3a\u4e00\u79cd\u6c38\u6052\u7684..\u3002\n\u4f46\u522b\u641e\u9519\u4e86\uff1a\u6240\u6709\u8fd9\u4e9b\u5fd9\u788c\u7684\u5de5\u4f5c\u90fd\u6ca1\u6709\u4ec0\u4e48\u4ef7\u503c\u3002\u5f53\u7136\uff0c\u66f4\u597d\u7684\u5de5\u5177\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u4ece\u7406\u5ff5\u4e0a\u8bb2\uff0c\u4f60\u901a\u5e38\u5f88\u65e9\u5c31\u8fbe\u5230\u4e86\u201c90%\u201d\u7684\u6c34\u5e73--\u4f46\u8fd9\u4e0d\u662f\u4eba\u4eec\u505c\u4e0b\u6765\u7684\u65f6\u5019\u3002\u4eba\u4eec\u9676\u9189\u4e8e\u6536\u76ca\u9012\u51cf\u7684\u6d3b\u52a8\uff0c\u4f7f\u4e00\u5207\u53d8\u5f97\u4e0d\u5fc5\u8981\u5730\u590d\u6742\u3002\u4e00\u5f20\u684c\u5b50\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff0c\u4e00\u5f20\u7eb8\u677f\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff0c\u4e00\u9875\u7eb8\u4e0a\u7684\u4e00\u5f20\u5361\u7247\uff1f\u597d\u7684!\u3002\n\u5927\u591a\u6570\u65f6\u5019\uff0c\u4e00\u4e2a\u5e73\u51e1\u7684\u9879\u76ee\u7b26\u53f7\u5217\u8868\u5c31\u53ef\u4ee5\u4e86\u3002\u4e5f\u8bb8\u53ef\u4ee5\u5217\u4e2a\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u3002\u4e5f\u8bb8\u53ef\u4ee5\u628a\u90a3\u4e9b\u5f85\u529e\u4e8b\u9879\u52a0\u5230\u65e5\u5386\u4e0a\u3002\u4f46\u90a3\u4e0d\u4f1a\u8ba9\u4f60\u770b\u8d77\u6765\u5f88\u806a\u660e\uff0c\u4e0d\u662f\u5417\uff1f\u5177\u67095\u4e2a\u89c6\u56fe\u30013\u4e2a\u4e0e\u5176\u4ed6\u6570\u636e\u5e93\u7684\u5173\u7cfb\u548c\u6bcf\u5f20\u536120\u4e2a\u5c5e\u6027\u7684\u6982\u5ff5\u677f\u6267\u884c\u2026\u3002\u8fd9\u8868\u660e\u4f60\u771f\u7684\u8003\u8651\u5230\u4e86\u6240\u6709\u7684\u8fb9\u7f18\u60c5\u51b5\uff01\u505a\u5f97\u597d!\u3002\n\u5728\u8fd9\u4e2a\u5fd9\u788c\u7684\u2026\u4e0a\u82b1\u8d39\u7684\u521d\u59cb\u65f6\u95f4\u4e0d\u4ec5\u6d6a\u8d39\u4e86\u3002\u60a8\u6700\u7ec8\u5f97\u5230\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u4e00\u672c\u624b\u518c\u6765\u7406\u89e3\u548c\u4f7f\u7528\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u73a9\u7b11\uff0c\u6211\u4eec\u786e\u5b9e\u7ecf\u5386\u8fc7\uff1a\u6211\u4eec\u770b\u5230\u4e86\u65e0\u6570\u7684Slake\u6d88\u606f\uff0c\u89e3\u91ca\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\u677f\u3002\u8fd9\u79cd\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u4f1a\u964d\u4f4e\u4ee5\u540e\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u7684\u6bcf\u4e2a\u4eba\u7684\u901f\u5ea6\u3002\n\u73b0\u5728\u2026\u3002\u5f53\u7136\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u662f\u89c2\u5ff5\u7684\u9519--\u5f53\u7136\uff0c\u5b83\u662f\u53ef\u4ee5\u5229\u7528\u7684\u3002", "note_en": "\u201cWrite, plan, collaborate, and get organized.  Notion is all you need \u2014 in one tool.\u201d\n This post contains my observations on Notion, the no-code champion that\u2019s eating up the productivity tool space. If you don\u2019t know what Notion is or haven\u2019t used it before, then this post is probably not for you. I should mention that as a company at  diesdas.digital, we love Notion and have been using it so extensively that it has made most other tools we previously used redundant \u2014it \u2019s become our operating system and I don \u2019t know how we would run the company without it. So this post is very much  ...\n Notion is a meta-tool: a tool to build tools and it\u2019s so malleable and makes inventing your own workflows so easy, you can\u2019t help, but marvel at it: It\u2019s an incredibly impressive achievement to allow people to build databases and relations without writing any code. It also excels at the media-heavy blank-page collaboration environment \u2014 it\u2019s better at that than Google Docs, it\u2019s better than Dropbox Paper, it\u2019s better than any wiki.\n   It \u2019s all sunshine and rainbows at the start: You get going with a few pages; meeting notes here, a to do list there, a trello-esque board over there; it \u2019s fantastic, finally all your moving data targets converge in one place! Then you start putting more things together: You discover custom views, relations, databases. Mind blown, all the possibilities! Over night Notion becomes your company \u2019s project management tool, project documentation tool, internal wiki tool, lead tracking tool, CRM tool,  ...\n Sorry Notion, but I need a break \u2026 because your immense flexibility is also your biggest weakness.\n  First of all: Notifications don\u2019t keep up. It you\u2019ve built a ton of different tools in Notion, then notifications simply aren\u2019t useful anymore \u2026 you receive emails that list 86 changes all across the board(s); they are not organized and they don\u2019t correspond to mental buckets, like separate apps would. Your CRM notifications are suddenly bundled with your current product development sprint updates. And how could they be separate? Notion doesn\u2019t know  what it is storing, for all means and purposes  ...\n I never thought I\u2019d say this, but I miss the times of receiving a JIRA notification and the icon\u2019s color, the formatting and the phrasing tell me immediately and exactly its context and what it is about.\n  And while it \u2019s impressive that Notion can handle all of these different use cases, it \u2019s not particularly good at any of them. It doesn \u2019t invite discussion because its comments are tiny and hidden. You also can \u2019t call attention to certain properties of a card/page because all meta-data becomes one long list of properties. If you were purposefully designing a tool for one use case, you \u2019d emphasize common/important functionality and hide more obscure features. In Notion everything is the same,  ...\n Judged as a standalone tool, e.g. a project backlog, Notion is simply not well designed for that task. It\u2019s almost undesigned due to its forced genericness. Everything is a compromise. Everything becomes its lowest common denominator. Nothing has purpose or is easy to scan visually. Being generic forces generic design onto everything.\n  By far the biggest gripe I have is that a tool should be a means to an end and get out of the way\u2014but with Notion building the tool often becomes the end in itself.\n Too often people can \u2019t handle the great power Notion gives them: they frequently build the most sophisticated, most complex solution for a problem because that makes them look smart. Gardening Notion boards becomes an activity in itself \u2026Notion doesn \u2019t get out of the way, it \u2019s malleability always invites you to tweak your boards further, to add another property, to connect another relation, to add another view, to go through your board and complete data on all cards. It has become a perpetual  ...\n But make no mistake: All of this busy-work has little value. Of course better tools provide efficiency gains, but in Notion you usually reach a \u201c90% there\u201d level quite early\u2014but that\u2019s not when people stop. People revel in activities of diminishing returns and make everything unnecessarily complicated. A card in a table on a card in a board on a page? Sure!\n Most times a mundane bullet point list would have been fine. Maybe a to do list. Maybe adding those todos to a calendar. But that wouldn\u2019t make you look smart, would it? A Notion board with 5 views, 3 relations to other databases and 20 properties per card does \u2026 it shows you\u2019ve really thought of all the edge cases! Good job!\n Not only is the initial time spent on this busy-work wasted \u2026 you end up with solutions that need a manual to comprehend and use them. This is not a joke, we\u2019ve actually been there: We\u2019ve seen endless Slack messages explaining how a new Notion board is supposed to be used. This needless complexity slows everyone down who needs to use these tools later on.\n Now \u2026of course all this is not Notion \u2019s fault \u2014of course it can be used sensibly and responsibly. This whole post is a bit like criticizing a programming language for the bad code beginners write with it. Maybe we simply haven \u2019t grown our Notion legs yet. But the reality is that not everyone on your team will want to become an expert tool builder: The flexibility that Notion offers simply invites you to use it for the wrong things and make everything too damn complicated. It invites excessive  ...\n  Observing this makes me feel really drawn to tools like Basecamp, which are very rigid, very opinionated, funneling you through workflows that make sense, because they \u2019ve been proven over time and iterated upon. Somebody decided, after careful consideration, that this is the feature set the tool should offer and that \u2019s it. Somebody thought about how it all connects, how it \u2019s designed and how it all comes together. The feature scope is fixed. No adding of stuff. No rearranging the core  ...\n Notion is the opposite and that flexibility makes it incredibly useful in  some situations, but sadly also distracting and mediocre for  most use cases. Maybe we had to go down this way, to see the benefits of more opinionated software again \u2014 to embrace constraints and to focus on the actual work. Understanding usually comes in sine waves \u2026 we\u2019ve been at the top of the flexibility hill and now it might be time to bounce back.\n But that\u2019s just my opinion. Even in my team people will probably strongly disagree. Maybe someone will write a follow-up blog post with a counter take? That\u2019d be great, I\u2019d like to have that conversation!", "posttime": "2020-05-02 21:19:09", "tags": "\u89c2\u5ff5,encourages,\u5de5\u5177,notion", "title": "\u89c2\u5ff5\u9f13\u52b1\u5fd9\u788c\u7684\u5de5\u4f5c\uff0c\u6211\u5df2\u7ecf\u538c\u5026\u4e86", "title_en": "Notion encourages busy-work and I\u2019m tired of it", "transed": 1, "url": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u89c2\u5ff5", "\u5de5\u5177", "notion"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1000338, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u5217\u8868\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u6211\u4eec\u6ca1\u6709\u5ba1\u6838\u672c\u9875\u6240\u5217\u8f6f\u4ef6\u7684\u5b89\u5168\u6216\u9690\u79c1\u95ee\u9898\uff0c\u8d85\u51fa\u4e86\u8be5\u8f6f\u4ef6\u7684\u5f00\u53d1\u8005\u4ee5\u53ca\u53ef\u80fd\u7684\u5176\u4ed6\u7ad9\u70b9\u544a\u8bc9\u6211\u4eec\u7684\u5185\u5bb9\u3002\u6211\u4eec\u5bf9\u8f6f\u4ef6\u8bb8\u53ef\u505a\u4e86\u4e00\u4e9b\u521d\u6b65\u7814\u7a76\u3002\n\u6b64\u9875\u9762\u662f\u5171\u4eab\u8d44\u6e90\uff0c\u6211\u4eec\u9f13\u52b1\u5176\u4ed6\u4eba\u5411\u5176\u6dfb\u52a0\u5185\u5bb9\uff0c\u56e0\u6b64\u6b64\u5904\u7684\u67d0\u4e9b\u6761\u76ee\u53ef\u80fd\u662f\u7531\u793e\u533a\u6210\u5458\u6dfb\u52a0\u7684\u3002\u6211\u4eec\u5b9a\u671f\u68c0\u67e5\u6b64\u8d44\u6e90\uff0c\u77e5\u9053\u5176\u4ed6\u4eba\u4e5f\u4f1a\u68c0\u67e5\u5b83\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u7ef4\u57fa\uff0c\u56e0\u6b64\u5728\u4fee\u590d\u9519\u8bef\u4e4b\u524d\u53ef\u80fd\u4f1a\u6dfb\u52a0\u9519\u8bef\u3002\u6211\u4eec\u9f13\u52b1\u60a8\u5728\u4f7f\u7528\u4e4b\u524d\u67e5\u770b\u6709\u5173\u60a8\u611f\u5174\u8da3\u7684\u8f6f\u4ef6\u7684\u8bb8\u53ef\u8bc1\u548c\u4fe1\u606f\uff0c\u5e76\u4f7f\u7528\u60a8\u7684\u8c03\u67e5\u7ed3\u679c\u66f4\u65b0\u6b64\u9875\u9762\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u4e92\u8054\u7f51\u4e0a\u7206\u53d1\u4e86\u4e13\u6709\u8f6f\u4ef6\u3002\u8bb8\u591a\u4eba\u5efa\u8bae\u4f7f\u7528\u4e13\u6709\u3001SaaSS\u548c/\u6216\u4fb5\u72af\u9690\u79c1\u7684\u89c6\u9891\u4f1a\u8bae\u8f6f\u4ef6\u4f5c\u4e3a\u9762\u5bf9\u9762\u4f1a\u8bae\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u4e13\u6709\u4f9b\u5e94\u5546\u6b63\u5728\u901a\u8fc7\u63d0\u4f9b\u4e34\u65f6\u514d\u8d39\u7684\u670d\u52a1\u6765\u8df3\u8fc7\u8fd9\u9879\u4efb\u52a1\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u670d\u52a1\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u8fd9\u5c06\u9501\u5b9a\u7ec4\u7ec7\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e9b\u4f9b\u5e94\u5546\u3002\u76f8\u53cd\uff0c\u8ba9\u6211\u4eec\u5171\u540c\u52aa\u529b\u4fc3\u8fdb\u81ea\u7531\u8f6f\u4ef6\u7684\u53d1\u5c55\u3002\n\u804a\u5929\u89c6\u9891BigBlueButton\u89c6\u9891\u6d41\u548c\u97f3\u9891\u8fde\u63a5\u5f80\u5f80\u76f8\u5f53\u7a33\u5b9a\u3002\u4e0eCanvas\u3001Moodle\u548c\u5176\u4ed6\u5b66\u4e60\u7ba1\u7406\u89e3\u51b3\u65b9\u6848(LMS)\u7cfb\u7edf\u96c6\u6210(\u89c1\u4e0b\u6587)\u3002LGPL\u3002\nJITSI Meet\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u51e0\u4e2a\u4eba\u8fdb\u884c\u89c6\u9891\u6216\u97f3\u9891\u804a\u5929\u3002\u5bf9\u4e8e\u4e24\u4e2a\u4ee5\u4e0a\u7684\u4eba\u6765\u8bf4\u5e76\u4e0d\u603b\u662f\u53ef\u9760\u7684\u3002\u6709\u65f6\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u624d\u80fd\u4f7f\u97f3\u9891\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5de5\u4f5c\u3002Apache-2.0\u3002\n\u5982\u679c\u6240\u6709\u5404\u65b9\u90fd\u4f7f\u7528\u76f8\u540c\u7684(\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u6700\u65b0\u7684)\u5ba2\u6237\u7aef\u7248\u672c\uff0c\u90a3\u4e48GNU Jami\u5f80\u5f80\u662f\u7a33\u5b9a\u7684\u3002GPLv 3\u3002\nGStreamer/Icecast\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u811a\u672c\u4e0e\u8bb8\u591a\u5355\u5411\u5173\u7cfb\u4e2d\u7684\u4eba\u5171\u4eab\u60a8\u7684\u76f8\u673a\u6216\u684c\u9762\u5c4f\u5e55\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0eMumble\u76f8\u7ed3\u5408\uff0c\u5141\u8bb8\u5b66\u6821\u6559\u5e08\u8fdb\u884c\u6f14\u793a\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u97f3\u9891\u56de\u7b54\u95ee\u9898\u3002\u7531\u4e8e\u89c6\u9891\u6d41\u7684\u7f13\u51b2\uff0c\u89c6\u9891\u9988\u9001\u53ef\u80fd\u4f1a\u6ede\u540e\u7ea65-10\u79d2\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u66f4\u591a\u9009\u9879\u3002\nOBS/nginx OBS Studio\u53ef\u4ee5\u4e0enginx web\u670d\u52a1\u5668\u914d\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7RTMP\u8fdb\u884c\u5f55\u5c4f\u6216\u76f4\u64ad\u3002\u89c2\u4f17\u53ef\u4ee5\u4f7f\u7528VLC\u3001MPV\u6216\u4efb\u4f55\u5176\u4ed6\u517c\u5bb9\u64ad\u653e\u5668\u5728\u60a8\u7684Web\u670d\u52a1\u5668\u4e0a\u6536\u770bRTMP\u6d41\u3002GPL-2.0\u3002\nOpenTokRTC\u73b0\u5728\u662fNexmo/Vonage\u89c6\u9891API\u7684\u4e00\u90e8\u5206\u3002\u81f3\u5c11\u539f\u59cbTokBox\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u662f\u81ea\u7531\u8f6f\u4ef6\uff0c\u4f46\u4e0d\u6e05\u695a\u5b83\u662f\u5426\u53ef\u4ee5\u5728\u6ca1\u6709\u4efb\u4f55\u975e\u81ea\u7531\u8f6f\u4ef6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\u4f5c\u4e3a\u4e00\u4e2a\u53cd\u529f\u80fd\uff0cVonage\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5728\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u4f01\u4e1a\u7248\uff0c\u6216\u8005\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u975e\u514d\u8d39JavaScript\u3002\nAudio Mumble Mumble\u5bf9\u4e8e\u7ec8\u7aef\u7528\u6237\u6765\u8bf4\u975e\u5e38\u5bb9\u6613\uff0c\u800c\u4e14\u4e3b\u8981\u5e73\u53f0\u90fd\u6709\u514d\u8d39\u7684\u672c\u5730\u5ba2\u6237\u7aef\u3002\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u5b83\u5360\u7528\u7684\u5185\u5b58\u5f88\u5c11\uff0c\u4f46\u662f\u5982\u679c\u6709\u5f88\u591a\u4eba\u540c\u65f6\u5728\u4e00\u4e2a\u6709\u5f88\u591a\u4eba\u5728\u76d1\u542c\u7684\u9891\u9053\u4e2d\u901a\u8bdd\uff0c\u90a3\u4e48\u5b83\u4f1a\u5360\u7528\u5927\u91cf\u7684\u670d\u52a1\u5668\u5e26\u5bbd\u3002\u5ba2\u6237\u7aef\u5728\u8fd9\u4e9b\u65f6\u95f4\u4f1a\u770b\u5230\u4e0b\u884c\u94fe\u8def\u5e26\u5bbd\u589e\u52a0\uff0c\u8fd9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u975e\u5bf9\u79f0\u4f4f\u5b85\u8fde\u63a5\u5141\u8bb8\u66f4\u5927\u7684\u4e0b\u884c\u94fe\u8def\u3002\u4e8b\u4ef6\u53d1\u751f\u5728\u76f4\u63a5\u9762\u5bf9\u9762\u7684\u4ea4\u6d41\u4e2d\uff0c\u5b83\u901a\u5e38\u662f\u2026\u3002\n\u6587\u672c\u548c\u53ef\u80fd\u7684\u6587\u6863\u5171\u4eab\u7535\u5b50\u90ae\u4ef6\u548c\u90ae\u4ef6\u5217\u8868\u7535\u5b50\u90ae\u4ef6\u5df2\u7ecf\u88ab\u8bb8\u591a\u4eba\u666e\u904d\u4f7f\u7528\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u5206\u6563\u7684\u793e\u4ea4\u7f51\u7edc\u3002\u4e00\u79cd\u9009\u62e9\u662f\u901a\u8fc7\u5728\u7535\u5b50\u90ae\u4ef6\u7684\u201c\u6536\u4ef6\u4eba\uff1a\u201d\u6216\u201c\u6284\u9001\uff1a\u201d\u5b57\u6bb5\u4e2d\u5217\u51fa\u591a\u4e2a\u4eba\u6765\u5411\u60a8\u7684\u540c\u4e8b\u3001\u670b\u53cb\u548c\u5bb6\u4eba\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u5efa\u7acb\u90ae\u4ef6\u5217\u8868\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u957f\u671f\u7b56\u7565\uff0c\u7279\u522b\u662f\u5f53\u4eba\u4eec\u5e0c\u671b\u52a0\u5165\u6216\u79bb\u5f00\u5c0f\u7ec4\uff0c\u6216\u8005\u4ed6\u4eec\u60f3\u8981\u9605\u8bfb\u5b8c\u6574\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u6216\u8005\u4e0d\u518d\u5173\u6ce8\u4e00\u4e2a\u957f\u671f\u8fd0\u884c\u7684\u4e3b\u9898\u65f6\u3002\nIRC IRC\u6709\u9002\u7528\u4e8e\u6240\u6709\u4e3b\u8981\u5e73\u53f0\u7684\u514d\u8d39\u8f6f\u4ef6IRC\u5ba2\u6237\u7aef\u3002\u5982\u679c\u60a8\u60f3\u5728Freenode(\u4e00\u79cd\u6d41\u884c\u7684IRC\u670d\u52a1\u5668)\u4e0a\u521b\u5efa\u9891\u9053\uff0c\u4f46\u60a8\u7684\u9891\u9053\u4e0d\u662f\u5173\u4e8e\u81ea\u7531\u8f6f\u4ef6\u6216\u83b7\u5f97\u5e7f\u6cdb\u8bb8\u53ef\u7684\u521b\u610f\u4f5c\u54c1\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u521b\u5efa\u4ee5#39\uff1b##&#\u5f00\u5934\u7684\u70ed\u95e8\u9891\u9053\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u9700\u8981Freenode\u5458\u5de5\u7684\u5e2e\u52a9\uff0c\u60a8\u7684\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u50cf\u8bf7\u6c42\u81ea\u7531\u8f6f\u4ef6\u9879\u76ee\u6e20\u9053\u7684\u5e2e\u52a9\u90a3\u6837\u4f18\u5148\u3002..\u3002\nKiwiIRC\u4e0d\u8981\u5728\u7ad9\u70b9\u914d\u7f6e\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\u7801\u5bc6\u94a5\uff0c\u5426\u5219\u5b83\u4f1a\u5728\u7528\u6237\u5c1d\u8bd5\u767b\u5f55\u65f6\u6dfb\u52a0\u975e\u514d\u8d39\u9a8c\u8bc1\u7801\u7cfb\u7edf\u3002Apache-2.0\u3002\n\u4f11\u606f\u5ba4\u5728\u4f11\u606f\u5ba4\u7684\u516c\u5171\u5b9e\u4f8b\u4e0a\uff0c\u5173\u95ed\u6d4f\u89c8\u5668\u9009\u9879\u5361\u6216\u65ad\u5f00\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7f51\u9875\u7684\u8fde\u63a5\u540e\uff0c\u4e0eIRC\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c06\u65ad\u5f00\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u79c1\u6709\u5b9e\u4f8b\uff0c\u5219\u9700\u8981\u7ba1\u7406\u5458\u521b\u5efa\u7684\u5e10\u6237\u624d\u80fd\u767b\u5f55\uff0c\u5e76\u4e14\u5373\u4f7f\u5728\u5173\u95ed\u6d4f\u89c8\u5668\u9009\u9879\u5361\u6216\u65ad\u5f00\u8fde\u63a5\u540e\uff0c\u4e0eIRC\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4ecd\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u3002\nMatrix\u770b\u8d77\u6765Matrix\u505a\u4e86\u76f8\u5f53\u591a\u7684\u4e8b\u60c5\uff0c\u5305\u62ec\u8054\u5408\u3001\u7f51\u7edc\u4e4b\u95f4\u7684\u6865\u63a5\u548cVoIP\u3002Apache-2.0\u3002\nMatterest Anti-Feature\uff1a\u5c0a\u91cd\u81ea\u7531\u7684Matterest\u7248\u672c\u6bd4\u4f01\u4e1a\u7248\u7684\u529f\u80fd\u5c11\uff0c\u540e\u8005\u5f88\u53ef\u80fd\u662f\u975e\u514d\u8d39\u7684\u3002\u9488\u5bf9\u4e0d\u540c\u7ec4\u4ef6(MIT\u3001AGPLv3\u3001Apache 2.0)\u7684\u591a\u4e2a\u8bb8\u53ef\u8bc1\u3002\nRocket.Chat Anti-f", "note_en": "This list is work in progress. We have not audited the software listed on this page for security or privacy concerns beyond what developers of the software, and potentially other sites tell us about it. We have done some initial research into software licenses.\n This page is a shared resource, and we encourage others to add to it, so some of the entries here may be added by members of the community. We check this resource periodically, and know that others check it too, but it&#39;s a wiki, so errors may be added before they&#39;re fixed. We encourage you to review licenses and information about the software you&#39;re interested in before using it, and to update this page with your findings.\n As more people are going remote, there is an outbreak of proprietary software happening around the Internet. Many are suggesting to use proprietary,  SaaSS, and/or privacy invading video conferencing software as an alternative to meeting in person. Proprietary vendors are hopping to the task by offering services that are temporarily free as in cost, and that would lock organizations into continuing to use those vendors. Let&#39;s work together to promote free software instead.\n   Chat Video BigBlueButton Video streaming, and audio connections tend to be quite stable. Integrates with Canvas, Moodle, and other Learning Management Solutions (LMS) systems (see below). LGPL\n Jitsi Meet Easy to use, and good for a couple of people to video or audio chat with each other. Not always reliable with more than two people. Sometimes it&#39;s necessary to reload the page to get audio working in both directions. Apache-2.0\n GNU Jami Tends to be stable if all parties use the same (ideally the latest) version of the client. GPLv3\n GStreamer/Icecast It&#39;s possible to share your camera or desktop screen with many people in a one-way relationship using  command line scripts. This method combined with Mumble allows for a school teacher to give a presentation, and to be available for questions via audio. The video feed would likely be about 5-10 seconds behind, due to buffering of the video stream. See more options below.\n OBS/nginx OBS Studio can be used in conjunction with the nginx web server to screencast or stream via RTMP. Viewers can tune into the RTMP stream on your web server using VLC, mpv, or any other compatible player. GPL-2.0\n OpenTokRTC Now a part of nexmo / Vonage video API. At least parts of the original TokBox code are free software, but it&#39;s not clear whether it&#39;s possible to use without any non-free software. As an anti-feature, Vonage offers enterprise editions that may run on your own server, or may require running non-free JavaScript.\n Audio Mumble Mumble is pretty easy for end users, and there are free native clients for major platforms. On the server, it has a low memory footprint, but can use a lot of server bandwidth if many people are talking at once in a channel that has many people listening in. Clients would see an increase in downlink bandwidth at these times, which is okay, since most asymmetrical residential connections allow for a larger downlink. Event in direct face to face communication, it&#39;s generally  ...\n Text and possibly document sharing Email and mailing lists Email is already commonly used by many people, and is a decentralized social network. One option is to email your coworkers, friends and family by listing multiple people in your email&#39;s To: or Cc: fields. Setting up mailing lists is a better long term strategy, especially if people are expected to join or leave groups, or they want to read the full history of, or stop following a long-running thread.\n IRC IRC There are free software IRC clients for all major platforms. If you want to create a channel on Freenode (a popular IRC server), but your channel isn&#39;t about free software or broadly licensed creative works, you can still create topical channels that begin with &#39;##&#39;. Note that in this case if you need help from Freenode staff, your request won&#39;t be as high priority as requests for help with a free software project&#39;s channel.  ...\n KiwiIRC Don&#39;t add a captcha key in the site config, otherwise it will add a non-free captcha system when users try to log in. Apache-2.0\n The Lounge On public instances of The Lounge, connections to IRC servers are dropped after closing your browser tabs or losing your connection to application&#39;s Web page. If you use a private instance, you&#39;ll need an account created by an administrator to log in, and connections to the IRC server are kept active even after closing your browser tabs or losing your connection. MIT\n Matrix It seems like Matrix does quite a lot, including federation, bridging between networks, and VoIP. Apache-2.0\n Mattermost Anti-feature: the freedom respecting version of Mattermost has less features than the enterprise editions, which are likely non-free. Multiple licenses for different components (MIT, AGPLv3, Apache 2.0)\n Rocket.Chat Anti-feature: the freedom respecting version of Rocket.Chat has less features than the enterprise editions, which are likely non-free. MIT\n Wire On their  client source code repo, they say &#34;a. You agree not to change the way the Open Source App connects and interacts with our servers;...&#34;. It&#39;s not clear whether this is acceptable for software under a free license.\n XMPP / Jabber XMPP has been around for a long time. There are free clients for major platforms, and a variety of free server codebases to choose from if you want to run your own server.\n Zulip It looks like Zulip&#39;s enterprise edition is a support contract for the free software, which is great. Apache 2.0\n Sandstorm Sandstorm makes it easy to install and use free software applications on your Web server. It comes with many free applications, and it&#39;s probably best to confirm the licenses of the applications before you install them.\n Document Writing and document sharing Etherpad This is a very useful tool for collaborative text editing. It&#39;s great for meetings, brainstorming, and interleaved writing and editing flows. Apache 2.0\n     NextCloud NextCloud is a featureful Web service for document editing, file storage, audio/video chat, and more. AGPL-3.0\n   Wiki Software ikiwiki Write wiki pages in Markdown, via a Git repo, or via the Web (which commits to Git). Great for internal wikis, ie for documenting procedures, policies, article drafts, etc. Extensible with plugins. GPL-2.0 +\n MediaWiki Used in quite a lot of places. It supports many different extensions. It&#39;s a good choice for public wikis that anyone can edit, or for internal wikis. GPLv2+\n Learning Management Solutions (LMS) Canvas One of the more popular choices out there. Integrates with Big Blue Button (see above). AGPLv3", "posttime": "2020-05-02 21:18:49", "tags": "\u901a\u4fe1,communication,software", "title": "\u8fdc\u7a0b\u901a\u4fe1(LibrePlanet\u4e0a\u7684Wiki\u9875\u9762)", "title_en": "Remote Communication (wiki page on LibrePlanet)", "transed": 1, "url": "https://libreplanet.org/wiki/Remote_Communication", "via": "", "source_name": "Hacker News", "source_domain": "news.ycombinator.com", "real_tags": ["\u901a\u4fe1", "software"]}]