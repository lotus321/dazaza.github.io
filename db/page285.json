[{"category": "", "categoryclass": "", "imagename": "01ad7e64f7bfee7c331afaf30e8b4180.jpg", "infoid": 1002536, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u5bfc\u822a\u8df3\u5230\u641c\u7d22\u867d\u7136\u672a\u6765\u6c38\u8fdc\u4e0d\u80fd\u7edd\u5bf9\u80af\u5b9a\u5730\u9884\u6d4b\uff0c[1]\u76ee\u524d\u5728\u5404\u4e2a\u79d1\u5b66\u9886\u57df\u7684\u7406\u89e3\u5141\u8bb8\u9884\u6d4b\u4e00\u4e9b\u9065\u8fdc\u7684\u672a\u6765\u4e8b\u4ef6\uff0c\u5373\u4f7f\u53ea\u662f\u5728\u6700\u5bbd\u6cdb\u7684\u8f6e\u5ed3\u4e2d\u3002\u8fd9\u4e9b\u9886\u57df\u5305\u62ec\u5929\u4f53\u7269\u7406\u5b66\uff0c\u5b83\u63ed\u793a\u4e86\u884c\u661f\u548c\u6052\u661f\u662f\u5982\u4f55\u5f62\u6210\u3001\u76f8\u4e92\u4f5c\u7528\u548c\u6b7b\u4ea1\u7684\uff1b\u7c92\u5b50\u7269\u7406\u5b66\uff0c\u5b83\u63ed\u793a\u4e86\u7269\u8d28\u5728\u6700\u5c0f\u5c3a\u5ea6\u4e0a\u7684\u884c\u4e3a\uff1b\u8fdb\u5316\u751f\u7269\u5b66\uff0c\u5b83\u9884\u6d4b\u4e86\u751f\u547d\u5c06\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6f14\u53d8\uff1b\u4ee5\u53ca\u677f\u5757\u6784\u9020\uff0c\u5b83\u663e\u793a\u4e86\u5927\u9646\u5728\u51e0\u5343\u5e74\u91cc\u662f\u5982\u4f55\u79fb\u52a8\u7684\u3002\n\u5bf9\u5730\u7403\u3001\u592a\u9633\u7cfb\u548c\u5b87\u5b99\u672a\u6765\u7684\u6240\u6709\u9884\u6d4b\u90fd\u5fc5\u987b\u8003\u8651\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\uff0c\u8be5\u5b9a\u5f8b\u89c4\u5b9a\u71b5\uff0c\u6216\u53ef\u7528\u4e8e\u505a\u529f\u7684\u80fd\u91cf\u7684\u635f\u5931\uff0c\u5fc5\u987b\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0a\u5347\u3002\u6052\u661f\u6700\u7ec8\u4f1a\u8017\u5c3d\u5b83\u4eec\u4f9b\u5e94\u7684\u6c22\u71c3\u6599\u5e76\u71c3\u70e7\u6b86\u5c3d\u3002\u5929\u6587\u7269\u4f53\u5728\u5f15\u529b\u4f5c\u7528\u4e0b\u4ece\u5176\u6052\u661f\u7cfb\u7edf\u629b\u51fa\u884c\u661f\uff0c\u4e0e\u6765\u81ea\u661f\u7cfb\u7684\u6052\u661f\u7cfb\u7edf\u4e4b\u95f4\u7684\u8fd1\u8ddd\u79bb\u76f8\u9047\u3002[3]\u3002\n\u7269\u7406\u5b66\u5bb6\u9884\u8ba1\uff0c\u7269\u8d28\u672c\u8eab\u6700\u7ec8\u4f1a\u53d7\u5230\u653e\u5c04\u6027\u8870\u53d8\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u5373\u4f7f\u662f\u6700\u7a33\u5b9a\u7684\u6750\u6599\u4e5f\u4f1a\u5206\u88c2\u6210\u4e9a\u539f\u5b50\u7c92\u5b50\u3002[4]\u76ee\u524d\u7684\u6570\u636e\u8868\u660e\uff0c\u5b87\u5b99\u5177\u6709\u5e73\u5766\u7684\u51e0\u4f55\u5f62\u72b6(\u6216\u975e\u5e38\u63a5\u8fd1\u5e73\u5766)\uff0c\u56e0\u6b64\u5728\u6709\u9650\u7684\u65f6\u95f4\u540e\u4e0d\u4f1a\u81ea\u884c\u574d\u584c[5]\uff0c\u800c\u65e0\u9650\u7684\u672a\u6765\u5141\u8bb8\u5927\u91cf\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u4f8b\u5982\u73bb\u5c14\u5179\u66fc\u5927\u8111\u7684\u5f62\u6210\u3002[6]\u3002\n\u8fd9\u91cc\u5c55\u793a\u7684\u65f6\u95f4\u7ebf\u6db5\u76d6\u4e86\u4ece11\u5343\u5e74\u5f00\u59cb\u5230\u672a\u6765\u6700\u9065\u8fdc\u7684\u65f6\u95f4\u8303\u56f4\u5185\u7684\u4e8b\u4ef6\u3002\u4e66\u4e2d\u5217\u51fa\u4e86\u4e00\u4e9b\u53ef\u4f9b\u9009\u62e9\u7684\u672a\u6765\u4e8b\u4ef6\uff0c\u4ee5\u89e3\u91ca\u4ecd\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u4eba\u7c7b\u662f\u5426\u4f1a\u706d\u7edd\uff0c\u8d28\u5b50\u662f\u5426\u4f1a\u8870\u53d8\uff0c\u4ee5\u53ca\u5f53\u592a\u9633\u81a8\u80c0\u6210\u4e3a\u7ea2\u5de8\u661f\u65f6\uff0c\u5730\u7403\u662f\u5426\u4f1a\u5e78\u5b58\u4e0b\u6765\u3002\n\u5982\u679c\u5a01\u5c14\u514b\u65af\u51b0\u4e0b\u76c6\u5730\u7684\u7834\u88c2\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4e16\u7eaa\u91cc\u5371\u53ca\u4e1c\u5357\u6781\u51b0\u76d6\uff0c\u90a3\u4e48\u8981\u5b8c\u5168\u878d\u5316\u5c31\u9700\u8981\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\u3002\u6d77\u5e73\u9762\u5c06\u4e0a\u53473\u52304\u7c73\u3002[7]\u5168\u7403\u53d8\u6696\u7684\u6f5c\u5728\u957f\u671f\u5f71\u54cd\u4e4b\u4e00\uff0c\u8fd9\u4e0e\u897f\u5357\u6781\u51b0\u76d6\u7684\u77ed\u671f\u5a01\u80c1\u662f\u5206\u5f00\u7684\u3002\n\u7ea2\u8272\u8d85\u5927\u6052\u661f\u5fc3\u5bbf\u4e8c\u5f88\u53ef\u80fd\u5df2\u7ecf\u5728\u8d85\u65b0\u661f\u4e2d\u7206\u70b8\u4e86\u3002\u5728\u767d\u5929\uff0c\u5730\u7403\u4e0a\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u5230\u7206\u70b8\u3002[8]\u3002\n\u6839\u636e\u6492\u54c8\u62c9\u6cf5\u7406\u8bba\uff0c\u5730\u7403\u4e24\u6781\u7684\u8fdb\u52a8\u5c06\u4f7f\u5317\u975e\u5b63\u98ce\u5411\u5317\u79fb\u52a8\u5230\u8db3\u591f\u8fdc\u7684\u5730\u65b9\uff0c\u4f7f\u6492\u54c8\u62c9\u53d8\u56de\u70ed\u5e26\u6c14\u5019\uff0c\u5c31\u50cf5000-10000\u5e74\u524d\u4e00\u6837\u3002[9][10]\u3002\n\u968f\u7740\u706b\u661f\u5728\u5176\u7c73\u5170\u79d1\u7ef4\u5947\u5faa\u73af\u7684\u8fd1\u65e5\u70b9\u8fdb\u52a8\u65b9\u9762\u8fbe\u5230\u5317\u534a\u7403\u53d8\u6696\u7684\u5cf0\u503c\uff0c\u706b\u661f\u5317\u90e8\u7684\u6781\u5730\u51b0\u76d6\u53ef\u80fd\u4f1a\u6d88\u9000\u3002[11][12]\n\u5c0f\u7ea2\u77ee\u661f\u7f57\u65af248\u5c06\u5728\u8ddd\u79bb\u5730\u74033.024\u5149\u5e74\u7684\u8303\u56f4\u5185\u901a\u8fc7\uff0c\u6210\u4e3a\u8ddd\u79bb\u592a\u9633\u6700\u8fd1\u7684\u6052\u661f\u3002[13]\u5b83\u5c06\u5728\u5927\u7ea68000\u5e74\u540e\u6d88\u9000\uff0c\u9996\u5148\u662f\u534a\u4eba\u9a6c\u5ea7\u963f\u5c14\u6cd5\u661f\uff0c\u7136\u540e\u662f\u683c\u5229\u585e\u65af445\uff0c\u6210\u4e3a\u6700\u8fd1\u7684\u6052\u661f[13](\u89c1\u65f6\u95f4\u7ebf)\u3002\n\u6839\u636eBerger\u548cLoutre\u7684\u8bf4\u6cd5\uff0c\u76ee\u524d\u7684\u95f4\u51b0\u671f\u5c06\u7ed3\u675f\uff0c[14]\u4e0d\u7ba1\u4eba\u4e3a\u5168\u7403\u53d8\u6696\u7684\u5f71\u54cd\u5982\u4f55\uff0c\u5730\u7403\u5c06\u91cd\u65b0\u8fdb\u5165\u5f53\u524d\u51b0\u671f\u7684\u51b0\u671f\u3002\u5c3c\u4e9a\u52a0\u62c9\u7011\u5e03\u5c06\u4fb5\u8680\u4f0a\u5229\u6e56\u5269\u4f59\u768432\u516c\u91cc\uff0c\u5c06\u4e0d\u590d\u5b58\u5728\u3002[15]\u3002\n\u52a0\u62ff\u5927\u5730\u76fe\u7684\u8bb8\u591a\u51b0\u5ddd\u6e56\u6cca\u5c06\u88ab\u51b0\u5ddd\u540e\u7684\u53cd\u5f39\u548c\u4fb5\u8680\u6240\u62b9\u53bb\u3002[16]\u3002\n\u7531\u4e8e\u6708\u7403\u6f6e\u6c50\u51cf\u6162\u4e86\u5730\u7403\u7684\u81ea\u8f6c\u901f\u5ea6\uff0c\u7528\u4e8e\u5929\u6587\u8ba1\u65f6\u7684\u4e00\u5929\u7684\u957f\u5ea6\u8fbe\u5230\u4e86\u5927\u7ea686401SI\u79d2\u3002\u5728\u73b0\u5728\u7684\u8ba1\u65f6\u7cfb\u7edf\u4e0b\uff0c\u8981\u4e48\u6bcf\u4e00\u5929\u90fd\u9700\u8981\u5728\u65f6\u949f\u4e0a\u589e\u52a0\u4e00\u4e2a\u95f0\u79d2\uff0c\u8981\u4e48\u5230\u90a3\u65f6\uff0c\u4e3a\u4e86\u8865\u507f\uff0c\u4e00\u5929\u7684\u957f\u5ea6\u5fc5\u987b\u6b63\u5f0f\u5ef6\u957f\u4e00SI\u79d2\u3002[17]\u3002\n\u7531\u4e8e\u6052\u661f\u5728\u94f6\u6cb3\u7cfb\u4e2d\u7684\u8fd0\u52a8\uff0c\u6052\u661f\u5728\u5929\u7403\u4e0a\u7684\u81ea\u7136\u8fd0\u52a8\u4f7f\u8bb8\u591a\u661f\u5ea7\u53d8\u5f97\u65e0\u6cd5\u8fa8\u8ba4\u3002[18]\u3002\n\u5730\u7403\u53ef\u80fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u4e00\u6b21\u8db3\u591f\u5927\u7684\u8d85\u7ea7\u706b\u5c71\u55b7\u53d1\uff0c\u55b7\u53d1\u51fa400\u516c\u91cc(96\u7acb\u65b9\u82f1\u91cc)\u7684\u5ca9\u6d46\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4f0a\u5229\u6e56\u4e3a484\u516c\u91cc3(116\u7acb\u65b9\u7c73)\u3002[20]\u3002\n\u5317\u7f8e\u571f\u751f\u571f\u957f\u7684\u86af\u8693\uff0c\u5982\u5de8\u578b\u86af\u8693\uff0c\u5c06\u81ea\u7136\u5730\u901a\u8fc7\u7f8e\u56fd\u4e0a\u4e2d\u897f\u90e8\u5411\u5317\u4f20\u64ad\u5230\u52a0\u62ff\u5927-\u7f8e\u56fd\u8fb9\u5883\uff0c\u4ece\u52b3\u4f26\u8482\u51b0\u76d6\u51b0\u5ddd(38\u00b0N\u523049\u00b0N)\u6062\u590d\uff0c\u5047\u8bbe\u8fc1\u5f99\u901f\u5ea6\u4e3a\u6bcf\u5e7410\u7c73\u3002[21](\u7136\u800c\uff0c\u4eba\u7c7b\u5df2\u7ecf\u4ee5\u66f4\u77ed\u7684\u65f6\u95f4\u5f15\u8fdb\u4e86\u5317\u7f8e\u7684\u975e\u672c\u571f\u5165\u4fb5\u86af\u8693\uff0c\u5bf9\u8be5\u5730\u533a\u7684\u751f\u6001\u7cfb\u7edf\u9020\u6210\u4e86\u51b2\u51fb\u3002)\u3002\n\u4f5c\u4e3a\u5168\u7403\u53d8\u6696\u7684\u957f\u671f\u5f71\u54cd\u4e4b\u4e00\uff0c10%\u7684\u4eba\u4e3a\u4e8c\u6c27\u5316\u78b3\u4ecd\u5c06\u4fdd\u6301\u5728\u7a33\u5b9a\u7684\u5927\u6c14\u4e2d\u3002[22]\nL\u014d\u02bbIhi\u706b\u5c71\u662f\u590f\u5a01\u5937-\u5e1d\u738b\u6d77\u5c71\u94fe\u4e2d\u6700\u5e74\u8f7b\u7684\u706b\u5c71\uff0c\u5b83\u5c06\u6d6e\u51fa\u6d77\u9762\uff0c\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u706b\u5c71\u5c9b\u3002[23]\u3002\n\u5728\u672a\u6765\u51e0\u5341\u4e07\u5e74\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u6c83\u5c14\u592b-\u745e\u8036\u661fWR104\u53ef\u80fd\u4f1a\u7206\u53d1\u6210\u4e00\u9897\u8d85\u65b0\u661f\u3002WR104\u7684\u65cb\u8f6c\u901f\u5ea6\u8db3\u4ee5\u4ea7\u751f\u4f3d\u9a6c\u5c04\u7ebf\u66b4\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\uff0c\u800c\u8fd9\u6837\u7684\u4f3d\u9a6c\u5c04\u7ebf\u66b4\u5bf9\u5730\u7403\u4e0a\u7684\u751f\u547d\u6784\u6210\u5a01\u80c1\u7684\u53ef\u80fd\u6027\u66f4\u5c0f\u3002[24][25]\u3002\n\u5047\u8bbe\u8fd9\u662f\u65e0\u6cd5\u907f\u514d\u7684\uff0c\u5730\u7403\u5f88\u53ef\u80fd\u5df2\u7ecf\u88ab\u4e00\u9897\u76f4\u5f84\u7ea61\u516c\u91cc\u7684\u5c0f\u884c\u661f\u51fb\u4e2d\u3002[26][26]\u3002\n\u5357\u8fbe\u79d1\u4ed6\u5dde\u8352\u5730\u56fd\u5bb6\u516c\u56ed\u5d0e\u5c96\u7684\u5730\u5f62\u5c06\u88ab\u5b8c\u5168\u4fb5\u8680\u3002[27][27]\u3002\n\u4e9a\u5229\u6851\u90a3\u5dde\u7684\u4e00\u4e2a\u5927\u578b\u9668\u77f3\u5751\uff0c\u88ab\u8ba4\u4e3a\u662f\u540c\u7c7b\u9668\u77f3\u5751\u4e2d\u6700\u65b0\u9c9c\u7684\uff0c\u5c06\u4f1a\u88ab\u4fb5\u8680\u6389\u3002[28][28]\u3002\n\u5730\u7403\u53ef\u80fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u4e00\u6b21\u8db3\u591f\u5927\u7684\u8d85\u7ea7\u706b\u5c71\u55b7\u53d1\uff0c\u55b7\u53d1\u4e863200\u516c\u91cc(770\u7acb\u65b9\u82f1\u91cc)\u7684\u5ca9\u6d46\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u53ef\u4e0e7.5\u4e07\u5e74\u524d\u7684\u6258\u5df4\u8d85\u7ea7\u55b7\u53d1\u76f8\u63d0\u5e76\u8bba\u3002[20]\u3002\n\u6700\u9ad8\u4f30\u8ba1\u65f6\u95f4\uff0c\u76f4\u5230\u7ea2\u8272\u8d85\u5927\u6052\u661f\u53c2\u5bbf\u56db\u5728\u8d85\u65b0\u661f\u4e2d\u7206\u70b8\u3002\u81f3\u5c11\u5728\u51e0\u4e2a\u6708\u5185\uff0c\u8fd9\u9897\u8d85\u65b0\u661f\u5c06\u5728\u767d\u5929\u5728\u5730\u7403\u4e0a\u53ef\u89c1\u3002\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u9897\u8d85\u65b0\u661f\u5c06\u5728\u4e00\u767e\u4e07\u5e74\u5185\u53d1\u751f\uff0c\u751a\u81f3\u53ef\u80fd\u5728\u63a5\u4e0b\u6765\u7684\u5341\u4e07\u5e74\u5185\u53d1\u751f\u3002[29][30][30]\u3002\n\u6052\u661fGliese 710\u5728\u79bb\u5f00\u4e4b\u524d\u5c06\u7ecf\u8fc79000\u4e2aAU(\u8ddd\u79bb\u592a\u96330.14\u5149\u5e74)\u3002\u8fd9\u5c06\u5bf9\u5965\u5c14\u7279\u4e91\u7684\u6210\u5458\u4ea7\u751f\u5f15\u529b\u6270\u52a8\uff0c\u5965\u5c14\u7279\u4e91\u662f\u592a\u9633\u7cfb\u8fb9\u7f18\u7684\u4e00\u4e2a\u7531\u51b0\u4f53\u7ec4\u6210\u7684\u5149\u73af\uff0c\u6b64\u540e\u589e\u52a0\u4e86\u5185\u592a\u9633\u7cfb\u53d1\u751f\u5f57\u661f\u649e\u51fb\u7684\u53ef\u80fd\u6027\u3002[32][font=\u5b8b\u4f53]\n\u4ece\u4eba\u4e3a\u9020\u6210\u7684\u6d77\u6d0b\u9178\u5316\u4e2d\u6062\u590d\u73ca\u745a\u7901\u751f\u6001\u7cfb\u7edf\u7684\u4f30\u8ba1\u65f6\u95f4\uff1b\u5728\u5927\u7ea66500\u4e07\u5e74\u524d\u53d1\u751f\u7684\u9178\u5316\u4e8b\u4ef6\u4e4b\u540e\u6062\u590d\u6d77\u6d0b\u751f\u6001\u7cfb\u7edf\u82b1\u8d39\u4e86\u7c7b\u4f3c\u7684\u65f6\u95f4\u3002[33][33]\u3002\n\u5927\u5ce1\u8c37\u5c06\u8fdb\u4e00\u6b65\u4fb5\u8680\uff0c\u7565\u6709\u52a0\u6df1\uff0c\u4f46\u4e3b\u8981\u662f\u6269\u5927\u4e3a\u79d1\u7f57\u62c9\u591a\u6cb3\u5468\u56f4\u7684\u5bbd\u9614\u5c71\u8c37\u3002[34]\u3002\n\u5f53\u524d\u534a\u4eba\u9a6c\u7684\u5e73\u5747\u8f68\u9053\u534a\u8870\u671f\uff0c\u7531\u4e8e\u51e0\u4e2a\u5916\u884c\u661f\u7684\u5f15\u529b\u76f8\u4e92\u4f5c\u7528\u800c\u4e0d\u7a33\u5b9a\u3002[35]\u8bf7\u53c2\u9605\u5bf9\u8457\u540d\u534a\u4eba\u9a6c\u7684\u9884\u6d4b\u3002\n\u4e0d\u65ad\u6269\u5927\u7684\u4e1c\u975e\u88c2\u8c37\u88ab\u7ea2\u6d77\u6df9\u6ca1\uff0c\u5bfc\u81f4\u4e00\u4e2a\u65b0\u7684\u6d0b\u76c6\u5c06\u975e\u6d32\u5927\u9646\u548c\u975e\u6d32\u677f\u5757\u5206\u5272\u6210\u65b0\u5f62\u6210\u7684\u52aa\u6bd4\u4e9a\u677f\u5757\u548c\u7d22\u9a6c\u91cc\u677f\u5757\u3002\n\u4f30\u8ba1\u751f\u7269\u591a\u6837\u6027\u5728\u53ef\u80fd\u7684\u5168\u65b0\u4e16\u706d\u7edd\u540e\u5b8c\u5168\u6062\u590d\u7684\u65f6\u95f4\uff0c\u5982\u679c\u5b83\u4e0e\u4e4b\u524d\u4e94\u6b21\u91cd\u5927\u706d\u7edd\u4e8b\u4ef6\u7684\u89c4\u6a21\u76f8\u5f53\u7684\u8bdd\u3002[37]\u5373\u4f7f\u6ca1\u6709\u5927\u89c4\u6a21\u706d\u7edd\uff0c\u5230\u8fd9\u4e2a\u65f6\u5019\uff0c\u5927\u591a\u6570\u73b0\u6709\u7269\u79cd\u5c06\u901a\u8fc7\u80cc\u666f\u706d\u7edd\u901f\u5ea6\u6d88\u5931\uff0c\u8bb8\u591a\u5206\u652f\u9010\u6e10\u6f14\u53d8\u6210\u65b0\u7684\u5f62\u5f0f\u3002[38][39][39]\u3002\n\u6839\u636e\u514b\u91cc\u65af\u6258\u5f17\u00b7R\u00b7\u65af\u79d1\u7279\u7684\u8bf4\u6cd5\uff0c\u5723\u5b89\u5fb7\u70c8\u4e9a\u65af\u65ad\u5c42\u7684\u8fd0\u52a8\u5c06\u5bfc\u81f4\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6d77\u6e7e\u6d8c\u5165\u4e2d\u592e\u5c71\u8c37\u3002\u8fd9\u5c06\u5728\u5317\u7f8e\u897f\u6d77\u5cb8\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u5185\u9646\u6d77\u3002[40]\u3002\n\u6839\u636e\u514b\u91cc\u65af\u6258\u5f17\u00b7R\u00b7\u65af\u79d1\u7279(Christopher R.Scotese)\u7684\u8bf4\u6cd5\uff0c\u5723\u5b89\u5fb7\u70c8\u4e9a\u65af\u65ad\u5c42\u7684\u79fb\u52a8\u5c06\u5bfc\u81f4\u6d1b\u6749\u77f6\u548c\u65e7\u91d1\u5c71\u76ee\u524d\u7684\u4f4d\u7f6e\u5408\u5e76\u3002[40]\u52a0\u5dde\u6d77\u5cb8\u5c06\u5f00\u59cb\u88ab\u6f5c\u5165\u963f\u7559\u7533\u6d77\u6c9f\u3002[42]\u975e\u6d32\u4e0e\u6b27\u4e9a\u5927\u9646\u7684\u78b0\u649e\u5173\u95ed\u4e86\u5730\u4e2d\u6d77\u76c6\u5730\uff0c\u5f62\u6210\u4e86\u7c7b\u4f3c\u559c\u9a6c\u62c9\u96c5\u5c71\u8109\u7684\u5c71\u8109\u3002[43]\u3002\n\u963f\u5df4\u62c9\u5951\u4e9a\u5c71\u8109\u7684\u5c71\u5cf0\u5c06\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u4fb5\u8680\uff0c\u98ce\u5316\u5355\u4f4d\u4e3a5.7\u4e2a\u5e03\u8bfa\u592b\u5355\u4f4d\uff0c\u5c3d\u7ba1\u5730\u52bf\u5b9e\u9645\u4e0a\u4f1a\u4e0a\u5347\uff0c\u56e0\u4e3a\u5730\u533a\u5c71\u8c37\u52a0\u6df1\u7684\u901f\u5ea6\u662f\u8fd9\u4e2a\u901f\u5ea6\u7684\u4e24\u500d\u3002[45]\n\u5047\u8bbe60\u4e2a\u5e03\u8bfa\u592b\u5355\u4f4d\uff0c\u52a0\u62ff\u5927\u843d\u57fa\u5c71\u8109\u5c06\u88ab\u4fb5\u8680\u6210\u5e73\u539f\u3002[46]\u7f8e\u56fd\u5357\u90e8\u843d\u57fa\u5c71\u8109\u7684\u4fb5\u8680\u901f\u5ea6\u7a0d\u6162\u3002[47]\u3002\n\u5927\u5c9b\u5c06\u6210\u4e3a\u76ee\u524d\u590f\u5a01\u5937\u7fa4\u5c9b\u4e2d\u6700\u540e\u4e00\u4e2a\u6c89\u5165\u6d77\u9762\u7684\u5c9b\u5c7f\uff0c\u800c\u4e00\u4e2a\u6700\u8fd1\u5f62\u6210\u7684\u65b0\u590f\u5a01\u5937\u7fa4\u5c9b\u94fe\u5c06\u53d6\u800c\u4ee3\u4e4b\u3002[49]\u3002\n\u5047\u8bbe\u8fd9\u662f\u65e0\u6cd5\u907f\u514d\u7684\uff0c\u5730\u7403\u5f88\u53ef\u80fd\u5df2\u7ecf\u88ab\u4e00\u9897\u5927\u5c0f\u4e0e6600\u4e07\u5e74\u524d\u5f15\u53d1K-PG\u706d\u7edd\u7684\u5c0f\u884c\u661f\u76f8\u63d0\u5e76\u8bba\u3002[50][50]\u3002\n\u6839\u636e\u514b\u91cc\u65af\u6258\u5f17\u00b7R\u00b7\u65af\u79d1\u7279(Christopher R.Scotese)\u521b\u5efa\u7684\u6cdb\u53e4\u6bd4\u90bb\u6a21\u578b(Pangaea Proxima Model)\uff0c\u5927\u897f\u6d0b\u5c06\u5f00\u653e\u4e00\u4e2a\u65b0\u7684\u4fef\u51b2\u533a\uff0c\u7f8e\u6d32\u5c06\u5f00\u59cb\u5411\u975e\u6d32\u6c47\u805a\u3002[40]\u3002\n\u7531\u4e8e\u5730\u7403\u81ea\u8f6c\u7684\u9010\u6e10\u51cf\u6162\uff0c\u5730\u7403\u4e0a\u7684\u4e00\u5929\u5c06\u6bd4\u4eca\u5929\u591a\u4e00\u4e2a\u5c0f\u65f6\u3002[53][font=\u5b8b\u4f53]\u3002\n\u7531\u4e8e\u674e\u4e9a\u666e\u8bfa\u592b\u65f6\u95f4\u7684\u9650\u5236\uff0c\u5728\u6bd4\u8fd9\u66f4\u957f\u7684\u65f6\u95f4\u8de8\u5ea6\u5185\u9884\u6d4b\u884c\u661f\u7684\u8f68\u9053\u662f\u4e0d\u53ef\u80fd\u7684\u3002[54][54]\u3002\n\u6839\u636e\u514b\u91cc\u65af\u6258\u5f17\u00b7R\u00b7\u65af\u79d1\u7279\u7684\u8bf4\u6cd5\uff0c\u7531\u4e8e\u5317\u7f8e\u897f\u6d77\u5cb8\u7684\u5317\u79fb\uff0c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6d77\u5cb8\u5c06\u4e0e\u963f\u62c9\u65af\u52a0\u76f8\u649e\u3002[40]\u3002\n\u5730\u7403\u4e0a\u7684\u6240\u6709\u5927\u9646\u90fd\u53ef\u80fd\u878d\u5408\u6210\u4e00\u4e2a\u8d85\u7ea7\u5927\u9646\u3002\u8fd9\u4e00\u6784\u578b\u7684\u4e09\u79cd\u53ef\u80fd\u6392\u5217\u88ab\u79f0\u4e3a\u963f\u739b\u897f\u4e9a\u3001\u65b0\u76d8\u53e4\u548c\u7ec8\u6781\u76d8\u53e4\u3002[40]\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b0\u5ddd\u671f\uff0c\u964d\u4f4e\u6d77\u5e73\u9762\uff0c\u589e\u52a0\u6c27\u6c14\u6c34\u5e73\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u5168\u7403\u6c14\u6e29\u3002[57][58][58]\n\u5feb\u901f\u7684\u751f\u7269\u8fdb\u5316\u53ef\u80fd\u662f\u7531\u4e8e\u8d85\u5927\u9646\u7684\u5f62\u6210\uff0c\u5bfc\u81f4\u6e29\u5ea6\u8f83\u4f4e\uff0c\u6c27\u6c14\u6c34\u5e73\u8f83\u9ad8\u3002[58][58]\u3002\n\u4f30\u8ba1\u91d1\u661f\u7684\u5730\u5e54\u6e29\u5ea6\u8fbe\u5230\u6700\u9ad8\u6e29\u5ea6\u7684\u65f6\u95f4\u3002\u7136\u540e\uff0c\u5728\u5927\u7ea61\u4ebf\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u53d1\u751f\u4e86\u91cd\u5927\u7684\u4fef\u51b2\uff0c\u5730\u58f3\u88ab\u5faa\u73af\u5229\u7528\u3002[60][font=\u5b8b\u4f53]\u3002\n\u6839\u636e\u4fdd\u7f57\u00b7F\u00b7\u970d\u592b\u66fc(Paul F.Hoffman)\u6700\u5148\u63d0\u51fa\u7684\u5916\u5411\u6a21\u578b\uff0c\u592a\u5e73\u6d0b\u5c06\u5b8c\u5168\u5173\u95ed\u3002[61][62][56]\u3002\n\u8d85\u7ea7\u5927\u9646(\u7ec8\u6781\u76d8\u53e4\u5927\u9646\u3001\u65b0\u5927\u9646\u6216\u963f\u9a6c\u897f\u4e9a\u5927\u9646)\u5f88\u53ef\u80fd\u5df2\u7ecf\u5206\u88c2\u3002[56]\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5168\u7403\u6c14\u6e29\u5347\u9ad8\uff0c\u7c7b\u4f3c\u4e8e\u767d\u57a9\u7eaa\u65f6\u671f\u3002[58][58]\u3002\n\u636e\u4f30\u8ba1\uff0c\u4f3d\u9a6c\u5c04\u7ebf\u7206\u53d1(\u5373\u5de8\u5927\u7684\u9ad8\u80fd\u8d85\u65b0\u661f)\u53d1\u751f\u5728\u8ddd\u79bb\u5730\u74036500\u5149\u5e74\u7684\u8303\u56f4\u5185\uff1b\u8ddd\u79bb\u5730\u7403\u8db3\u591f\u8fd1\uff0c\u5176\u5c04\u7ebf\u8db3\u4ee5\u5f71\u54cd\u5730\u7403\u7684\u81ed\u6c27\u5c42\uff0c\u5e76\u6709\u53ef\u80fd\u5f15\u53d1\u5927\u89c4\u6a21\u7269\u79cd\u706d\u7edd\uff0c\u5047\u8bbe\u4e4b\u524d\u7684\u4e00\u6b21\u6b64\u7c7b\u7206\u70b8\u5f15\u53d1\u4e86\u5965\u9676\u7eaa-\u5fd7\u7559\u7eaa\u7269\u79cd\u706d\u7edd\u4e8b\u4ef6\u7684\u5047\u8bbe\u662f\u6b63\u786e\u7684\u3002\u7136\u800c\uff0c\u8d85\u65b0\u661f\u5fc5\u987b\u76f8\u5bf9\u4e8e\u5730\u7403\u7cbe\u786e\u5b9a\u5411\u624d\u80fd\u4ea7\u751f\u4efb\u4f55\u8d1f\u9762\u5f71\u54cd\u3002[63][font=\u5b8b\u4f53]\u3002\n\u6f6e\u6c50\u52a0\u901f\u4f7f\u6708\u7403\u8ddd\u79bb\u5730\u7403\u8db3\u591f\u8fdc\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u518d\u53ef\u80fd\u53d1\u751f\u65e5\u5168\u98df\u3002[64]\u3002\n\u592a\u9633\u5149\u5ea6\u7684\u589e\u52a0\u5f00\u59cb\u6270\u4e71\u78b3\u9178\u76d0-\u7845\u9178\u76d0\u7684\u5faa\u73af\uff1b\u66f4\u9ad8\u7684\u5149\u5ea6\u589e\u52a0\u4e86\u5730\u8868\u5ca9\u77f3\u7684\u98ce\u5316\uff0c\u4ece\u800c\u5c06\u4e8c\u6c27\u5316\u78b3\u4ee5\u78b3\u9178\u76d0\u7684\u5f62\u5f0f\u56f0\u5728\u5730\u4e0b\u3002\u968f\u7740\u6c34\u4ece\u5730\u7403\u8868\u9762\u84b8\u53d1\uff0c\u5ca9\u77f3\u53d8\u786c\uff0c\u5bfc\u81f4\u677f\u5757\u6784\u9020\u51cf\u901f\uff0c\u6700\u7ec8\u5728\u6d77\u6d0b\u5b8c\u5168\u84b8\u53d1\u540e\u505c\u6b62\u3002\u968f\u7740\u706b\u5c71\u4f5c\u7528\u7684\u51cf\u5c11\uff0c\u5c06\u78b3\u5faa\u73af\u5230\u5730\u7403\u5927\u6c14\u5c42\u4e2d\u7684\u6d3b\u52a8\u51cf\u5c11\uff0c\u4e8c\u6c27\u5316\u78b3\u6c34\u5e73\u5f00\u59cb\u4e0b\u964d\u3002[65]\u5230\u8fd9\u4e2a\u65f6\u5019\uff0c\u4e8c\u6c27\u5316\u78b3\u6c34\u5e73\u5c06\u4e0b\u964d\u5230C3\u5149\u5408\u4f5c\u7528\u4e0d\u518d\u53ef\u80fd\u7684\u5730\u6b65\u3002\u6240\u6709\u5229\u7528C3\u5149\u5408\u4f5c\u7528\u7684\u690d\u7269(\u2248\u5360\u73b0\u5728\u7269\u79cd\u768499%)\u90fd\u4f1a\u6b7b\u4ea1\u3002[66][\u4e2d\u82f1\u6587\u5bf9\u7167]\u3002\n\u5927\u591a\u6570\u690d\u7269\u7684\u6b7b\u4ea1\u5c06\u5bfc\u81f4\u5927\u6c14\u4e2d\u6c27\u6c14\u7684\u51cf\u5c11\uff0c\u4ece\u800c\u5141\u8bb8\u66f4\u591a\u7834\u574fDNA\u7684\u7d2b\u5916\u7ebf\u8f90\u5c04\u5230\u8fbe\u5730\u8868\u3002\u6c14\u6e29\u4e0a\u5347\u5c06\u589e\u52a0\u5927\u6c14\u4e2d\u7684\u5316\u5b66\u53cd\u5e94\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u6c27\u6c14\u6c34\u5e73\u3002\u98de\u884c\u7684\u52a8\u7269\u4f1a\u8fc7\u5f97\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u80fd\u529b\u957f\u9014\u65c5\u884c\uff0c\u5bfb\u627e\u66f4\u51c9\u723d\u7684\u6e29\u5ea6\u3002[67]\u8bb8\u591a\u52a8\u7269\u53ef\u80fd\u88ab\u8d76\u5230\u6781\u5730\u6216\u53ef\u80fd\u88ab\u8d76\u5230\u5730\u4e0b\u3002\u7531\u4e8e\u5f3a\u70c8\u7684\u9ad8\u6e29\u548c\u8f90\u5c04\uff0c\u8fd9\u4e9b\u751f\u7269\u5728\u6781\u5730\u591c\u665a\u53d8\u5f97\u6d3b\u8dc3\uff0c\u5728\u6781\u5730\u767d\u5929\u51ac\u7720\u3002\u5927\u90e8\u5206\u571f\u5730\u5c06\u6210\u4e3a\u4e00\u7247\u8d2b\u7620\u7684\u6c99\u6f20\uff0c\u52a8\u690d\u7269\u5c06\u4e3b\u8981\u5728\u6d77\u6d0b\u4e2d\u627e\u5230\u3002[67][67]\n\u4e8c\u6c27\u5316\u78b3\u6c34\u5e73\u4e0b\u964d\u5230C4\u5149\u5408\u4f5c\u7528\u4e0d\u518d\u53ef\u80fd\u7684\u5730\u6b65\u3002[66]\u5982\u679c\u6ca1\u6709\u690d\u7269\u6765\u5faa\u73af\u5927\u6c14\u4e2d\u7684\u6c27\u6c14\uff0c\u81ea\u7531\u6c27\u548c\u81ed\u6c27\u5c42\u5c06\u4ece\u5927\u6c14\u4e2d\u6d88\u5931\uff0c\u4ece\u800c\u4f7f\u81f4\u547d\u7684\u7d2b\u5916\u5149\u5f3a\u5ea6\u8fbe\u5230\u5730\u8868\u3002\u5728\u201c\u5730\u7403\u7684\u751f\u4e0e\u6b7b\u201d\u4e00\u4e66\u4e2d\uff0c\u4f5c\u8005\u5f7c\u5f97\u00b7D\u00b7\u6c83\u5fb7\u548c\u5510\u7eb3\u5fb7\u00b7\u5e03\u6717\u5229\u6307\u51fa\uff0c\u4e00\u4e9b\u52a8\u7269\u53ef\u80fd\u80fd\u591f\u5728\u6d77\u6d0b\u4e2d\u751f\u5b58\u3002\u7136\u800c\uff0c\u6700\u7ec8\uff0c\u6240\u6709\u7684\u591a\u7ec6\u80de\u751f\u547d\u90fd\u5c06\u706d\u7edd\u3002[68]\u5728\u6b64\u4e4b\u540e\uff0c\u5730\u7403\u4e0a\u4ec5\u5b58\u7684\u751f\u547d\u5c06\u662f\u5355\u7ec6\u80de\u6709\u673a\u4f53\u3002\n\u6d77\u6d0b\u8d28\u91cf\u768427%\u5c06\u88ab\u4fef\u51b2\u5230\u5730\u5e54\u4e2d\u3002\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u53d7\u5e72\u6270\u5730\u7ee7\u7eed\u4e0b\u53bb\uff0c\u5b83\u5c06\u8fbe\u5230\u5e73\u8861\uff0c65%\u7684\u5730\u8868\u6c34\u5c06\u7559\u5728\u5730\u8868\u3002[69][font=\u5b8b\u4f53]\u3002\n\u592a\u9633\u7684\u5149\u5ea6\u4e0a\u5347\u4e8610%\uff0c\u5bfc\u81f4\u5730\u7403\u8868\u9762\u6e29\u5ea6\u5e73\u5747\u8fbe\u5230\u7ea6320\u6444\u6c0f\u5ea6(47\u6444\u6c0f\u5ea6\uff1b116\u534e\u6c0f\u5ea6)\u3002\u5927\u6c14\u5c06\u53d8\u6210\u6f6e\u6e7f\u7684\u6e29\u5ba4\uff0c\u5bfc\u81f4\u6d77\u6d0b\u84b8\u53d1\u5931\u63a7\u3002[65]\u8fd9\u5c06\u5bfc\u81f4\u677f\u5757\u6784\u9020\u5b8c\u5168\u505c\u6b62\uff0c\u5982\u679c\u5728\u6b64\u4e4b\u524d\u6ca1\u6709\u505c\u6b62\u7684\u8bdd\u3002[71]\u4e24\u6781\u53ef\u80fd\u4ecd\u6709\u96f6\u661f\u7684\u6c34\uff0c\u8ba9\u4eba\u4eec\u53ef\u4ee5\u8fc7\u4e0a\u7b80\u6734\u7684\u751f\u6d3b\u3002[72][73][73]\u3002\n\u5047\u8bbe\u5373\u4f7f\u4e8c\u6c27\u5316\u78b3\u6c34\u5e73\u6781\u4f4e\uff0c\u67d0\u79cd\u5f62\u5f0f\u7684\u5149\u5408\u4f5c\u7528\u4e5f\u662f\u53ef\u80fd\u7684\uff0c\u76f4\u5230\u6240\u6709\u690d\u7269\u751f\u547d\u706d\u7edd\uff0c\u8fd9\u90fd\u662f\u4e00\u4e2a\u5f88\u9ad8\u7684\u4f30\u8ba1\u3002\u5982\u679c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6c14\u6e29\u4e0a\u5347\u5c06\u4f7f\u590d\u6742\u7684\u751f\u7269\u5708\u53d8\u5f97\u4e0d\u53ef\u6301\u7eed\u3002[74][75][76]\u3002\n\u592a\u9633\u4eae\u5ea6\u7684\u4e0a\u5347\u5bfc\u81f4\u5176\u661f\u9645\u5b9c\u5c45\u533a\u5411\u5916\u79fb\u52a8\uff1b\u968f\u7740\u706b\u661f\u5927\u6c14\u4e2d\u4e8c\u6c27\u5316\u78b3\u7684\u589e\u52a0\uff0c\u706b\u661f\u8868\u9762\u6e29\u5ea6\u4e0a\u5347\u5230\u4e0e\u51b0\u6cb3\u65f6\u671f\u5730\u7403\u76f8\u4f3c\u7684\u6c34\u5e73\u3002[68][77][77]\u3002\n\u9ad8\u4f30\u8ba1\uff0c\u76f4\u5230\u5730\u7403\u7684\u6d77\u6d0b\u84b8\u53d1\uff0c\u5982\u679c\u5927\u6c14\u538b\u529b\u901a\u8fc7\u6c2e\u5faa\u73af\u964d\u4f4e\u3002[78][78]\u3002\n\u5982\u679c\u5185\u6838\u7ee7\u7eed\u4ee5\u76ee\u524d\u6bcf\u5e741\u6beb\u7c73(0.039\u82f1\u5bf8)\u7684\u901f\u5ea6\u589e\u957f\uff0c\u5730\u7403\u7684\u5916\u6838\u5c31\u4f1a\u51bb\u7ed3\u3002[79]\u5982\u679c\u6ca1\u6709\u5b83\u7684\u6db2\u6001\u5916\u6838\uff0c\u5730\u7403\u7684\u78c1\u573a\u5c31\u4f1a\u5173\u95ed\uff0c\u592a\u9633\u53d1\u51fa\u7684\u5e26\u7535\u7c92\u5b50\u4f1a\u9010\u6e10\u8017\u5c3d\u5927\u6c14\u5c42\u3002[82][82]\u3002\n\u592a\u9633\u7684\u6700\u9ad8\u8868\u9762\u6e29\u5ea6\u5c06\u8fbe\u52305820K\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u592a\u9633\u5c06\u9010\u6e10\u53d8\u51b7\uff0c\u800c\u5149\u5ea6\u5c06\u7ee7\u7eed\u589e\u52a0\u3002[70][font=\u5b8b\u4f53]\n\u5730\u7403\u8868\u9762\u6e29\u5ea6\u8fbe\u5230\u7ea6420\u6444\u6c0f\u5ea6(147\u6444\u6c0f\u5ea6\uff1b296\u534e\u6c0f\u5ea6)\uff0c\u5373\u4f7f\u5728\u4e24\u6781\u4e5f\u662f\u5982\u6b64\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6240\u6709\u751f\u547d\uff0c\u73b0\u5728\u51cf\u5c11\u5230\u5b64\u7acb\u7684\uff0c\u5206\u6563\u7684\u5fae\u73af\u5883\uff0c\u5982\u9ad8\u6d77\u62d4\u6e56\u6cca\u6216\u6d1e\u7a74\u4e2d\u7684\u5355\u7ec6\u80de\u7fa4\u4f53\uff0c\u90fd\u5c06\u706d\u7edd\u3002[65][83][83]\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e4b\u524d\uff0c\u5730\u7403\u88ab\u6052\u661f\u76f8\u9047\u629b\u5165\u661f\u9645\u7a7a\u95f4\u7684\u53ef\u80fd\u6027\u7ea6\u4e3a1/10\u4e07\uff0c\u7136\u540e\u88ab\u53e6\u4e00\u9897\u6052\u661f\u6355\u83b7\u7684\u53ef\u80fd\u6027\u4e3a1/300\u4e07\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u5047\u8bbe\u751f\u547d\u5728\u661f\u9645\u65c5\u884c\u4e2d\u5e78\u5b58\u4e0b\u6765\uff0c\u90a3\u4e48\u751f\u547d\u53ef\u80fd\u4f1a\u6301\u7eed\u66f4\u957f\u7684\u65f6\u95f4\u3002[84][\u4e2d\u82f1\u6587\u5bf9\u7167]\u3002\n\u6708\u7403\u4e0e\u5730\u7403\u8ddd\u79bb\u7684\u589e\u52a0\u51cf\u5f31\u4e86\u5b83\u5bf9\u5730\u7403\u8f74\u5411\u503e\u659c\u7684\u7a33\u5b9a\u4f5c\u7528\u7684\u4e2d\u70b9\u3002\u56e0\u6b64\uff0c\u5730\u7403\u771f\u6b63\u7684\u6781\u5730\u6f02\u79fb\u53d8\u5f97\u6df7\u4e71\u548c\u6781\u7aef\uff0c\u7531\u4e8e\u8f74\u5411\u503e\u659c\u7684\u53d8\u5316\uff0c\u5bfc\u81f4\u4e86\u5730\u7403\u6c14\u5019\u7684\u620f\u5267\u6027\u53d8\u5316\u3002[85][85]\u3002\n\u6728\u661f\u7684\u5f15\u529b\u53ef\u80fd\u4f1a\u4f7f\u6c34\u661f\u7684\u8f68\u9053\u53d8\u5f97\u5982\u6b64\u504f\u5fc3\uff0c\u4ee5\u81f3\u4e8e\u4e0e\u91d1\u661f\u76f8\u649e\uff0c\u4ece\u800c\u4f7f\u5185\u592a\u9633\u7cfb\u9677\u5165\u6df7\u4e71\u7684\u53ef\u80fd\u6027\u4e3a1%\u3002\u53ef\u80fd\u7684\u60c5\u51b5\u5305\u62ec\u6c34\u661f\u4e0e\u592a\u9633\u76f8\u649e\uff0c\u88ab\u592a\u9633\u7cfb\u629b\u51fa\uff0c\u6216\u4e0e\u5730\u7403\u76f8\u649e\u3002[86][\u4e2d\u82f1\u6587\u5bf9\u7167]\u3002\n\u76ee\u524d\u5b58\u5728\u4e8e\u6d77\u6d0b\u4e2d\u7684\u6240\u6709\u6c34(\u5982\u679c\u4e0d\u662f\u66f4\u65e9\u5730\u6d41\u5931)\u90fd\u4f1a\u84b8\u53d1\u3002\u5927\u91cf\u5bcc\u542b\u6c34\u7684\u5927\u6c14\u5c42\u9020\u6210\u7684\u6e29\u5ba4\u6548\u5e94\uff0c\u518d\u52a0\u4e0a\u592a\u9633\u7684\u5149\u5ea6\u6bd4\u73b0\u503c\u9ad8\u51fa\u5927\u7ea635-40%\uff0c\u5c06\u5bfc\u81f4\u5730\u7403\u8868\u9762\u6e29\u5ea6\u4e0a\u5347\u52301400\u6444\u6c0f\u5ea6(1,130\u6444\u6c0f\u5ea6\uff1b2,060\u534e\u6c0f\u5ea6)-\u8db3\u4ee5\u878d\u5316\u4e00\u4e9b\u5730\u8868\u5ca9\u77f3\u3002[71][78][87][88]\u4e0e\u4eca\u5929\u7684\u91d1\u661f\u76f8\u6bd4\uff0c\u5730\u7403\u672a\u6765\u7684\u8fd9\u6bb5\u65f6\u671f\u901a\u5e38\u662f[\u91cf\u5316\u7684]\uff0c\u4f46\u6e29\u5ea6\u5b9e\u9645\u4e0a\u662f\u4eca\u5929\u91d1\u661f\u6e29\u5ea6\u7684\u4e24\u500d\u5de6\u53f3\uff0c\u5728\u8fd9\u4e2a\u6e29\u5ea6\u4e0b\uff0c\u8868\u9762\u5c06\u90e8\u5206\u7194\u5316\uff0c[89]\u800c\u91d1\u661f\u76ee\u524d\u7684\u8868\u9762\u53ef\u80fd\u5927\u90e8\u5206\u662f\u56fa\u4f53\u7684\u3002\u91d1\u661f\u5728\u8fd9\u4e2a\u65f6\u5019\u4e5f\u53ef\u80fd\u4f1a\u6025\u5267\u5347\u6e29\uff0c\u5f88\u53ef\u80fd\u6bd4\u5730\u7403\u70ed\u5f97\u591a(\u56e0\u4e3a\u5b83\u79bb\u592a\u9633\u66f4\u8fd1)\u3002\n\u6d77\u738b\u661f\u7684\u536b\u661f\u6d77\u738b\u661f(Triton)\u7a7f\u8fc7\u4e86\u8be5\u884c\u661f\u7684\u7f57\u6c0f\u6781\u9650\uff0c\u6709\u53ef\u80fd\u74e6\u89e3\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u571f\u661f\u7684\u884c\u661f\u73af\u7cfb\u3002\n\u4ed9\u5973\u5ea7\u661f\u7cfb\u4e0e\u94f6\u6cb3\u7cfb\u76f8\u649e\u7684\u4e2d\u70b9\uff0c\u4e4b\u540e\u94f6\u6cb3\u7cfb\u5c06\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u540d\u4e3a\u201c\u7c73\u5c14\u79d1\u6885\u8fbe\u201d\u7684\u661f\u7cfb\u3002[91]\u592a\u9633\u7cfb\u88ab\u629b\u51fa\u7684\u53ef\u80fd\u6027\u4e5f\u5f88\u5c0f\u3002[92]\u592a\u9633\u7cfb\u7684\u884c\u661f\u51e0\u4e4e\u80af\u5b9a\u4e0d\u4f1a\u53d7\u5230\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u5e72\u6270\u3002[94][95][96]\u3002\n\u706b\u661f\u5230\u8fbe\u7684\u592a\u9633\u6d41\u91cf\u4e0e45\u4ebf\u5e74\u524d\u5730\u7403\u7b2c\u4e00\u6b21\u5f62\u6210\u65f6\u7684\u592a\u9633\u6d41\u91cf\u76f8\u540c\uff0c\u4e5f\u5c31\u662f45\u4ebf\u5e74\u524d\u7684\u4eca\u5929\u3002[77][font=\u5b8b\u4f53]\n\u968f\u7740\u6838\u5fc3\u7684\u6c22\u6c14\u4f9b\u5e94\u8017\u5c3d\uff0c\u592a\u9633\u79bb\u5f00\u4e3b\u5e8f\uff0c\u5f00\u59cb\u6f14\u5316\u4e3a\u7ea2\u5de8\u661f\u3002[97][font=\u5b8b\u4f53]\u3002\n\u706b\u661f\u4eca\u5929\u8fbe\u5230\u4e0e\u5730\u7403\u76f8\u540c\u7684\u592a\u9633\u8f90\u5c04\u901a\u91cf\uff0c\u4e4b\u540e\u5b83\u5c06\u906d\u53d7\u4e0e\u5730\u7403\u7c7b\u4f3c\u7684\u547d\u8fd0\uff0c\u5982\u4e0a\u6240\u8ff0\u3002[77][font=\u5b8b\u4f53]\u3002\n\u5730\u7403\u548c\u6708\u7403\u5f88\u53ef\u80fd\u662f\u5728\u592a\u9633\u5230\u8fbe\u5176\u7ea2\u5de8\u661f\u9636\u6bb5\u7684\u5c16\u7aef\u548c\u5176\u6700\u5927\u534a\u5f84256\u500d\u4e8e\u73b0\u503c\u4e4b\u524d\u843d\u5165\u592a\u9633\u800c\u88ab\u6467\u6bc1\u7684\u3002[97][\u6ce84]\u5728\u6700\u540e\u4e00\u6b21\u78b0\u649e\u4e4b\u524d\uff0c\u6708\u7403\u53ef\u80fd\u5728\u5730\u7403\u7684\u7f57\u6c0f\u6781\u9650\u4ee5\u4e0b\u76d8\u65cb\uff0c\u5f62\u6210\u4e00\u4e2a\u788e\u7247\u73af\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u843d\u5728\u5730\u7403\u8868\u9762\u3002[98][font=\u5b8b\u4f53]\u3002\n\u592a\u9633\u5230\u8fbe\u8d6b\u8328\u65af\u666e\u6797\u683c-\u7f57\u7d20\u56fe\u7684\u7ea2\u5de8\u578b\u5206\u652f\u7684\u9876\u7aef\uff0c\u8fbe\u5230\u5176\u6700\u5927\u534a\u5f84\u662f\u73b0\u5728\u503c\u7684256\u500d\u3002[100]\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6c34\u661f\u3001\u91d1\u661f\uff0c\u5f88\u53ef\u80fd\u8fd8\u6709\u5730\u7403\u90fd\u4f1a\u88ab\u6467\u6bc1\u3002[97][font=\u5b8b\u4f53]\u3002\n\u592a\u9633\u53d8\u6210\u4e86\u4e00\u9897\u78b3\u6c27\u767d\u77ee\u661f\uff0c\u8d28\u91cf\u7ea6\u4e3a\u73b0\u5728\u768454.05%\u3002[97]\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5982\u679c\u5730\u7403\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5e78\u5b58\u4e0b\u6765\uff0c\u7531\u4e8e\u767d\u77ee\u661f\u592a\u9633\u91ca\u653e\u7684\u80fd\u91cf\u6bd4\u4eca\u5929\u5c11\u5f97\u591a\uff0c\u884c\u661f\u8868\u9762\u4ee5\u53ca\u592a\u9633\u7cfb\u4e2d\u5176\u4ed6\u5269\u4f59\u884c\u661f\u7684\u6e29\u5ea6\u5c06\u5f00\u59cb\u8fc5\u901f\u4e0b\u964d\uff0c\u8fd9\u662f\u56e0\u4e3a\u767d\u77ee\u661f\u592a\u9633\u91ca\u653e\u7684\u80fd\u91cf\u6bd4\u4eca\u5929\u5c11\u5f97\u591a\uff0c\u6240\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5982\u679c\u5730\u7403\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5e78\u5b58\u4e0b\u6765\uff0c\u5730\u7403\u8868\u9762\u7684\u6e29\u5ea6\u4ee5\u53ca\u592a\u9633\u7cfb\u4e2d\u5176\u4ed6\u5269\u4f59\u884c\u661f\u7684\u6e29\u5ea6\u5c06\u5f00\u59cb\u8fc5\u901f\u4e0b\u964d\u3002\n\u5927\u6495\u88c2\u573a\u666f\u4e2d\u7684\u5b87\u5b99\u672b\u65e5\uff0c\u5047\u8bbe\u6697\u80fd\u91cf\u6a21\u578b\u4e3aw=\u22121.5\u3002[104]\u5982\u679c\u6697\u80fd\u91cf\u5bc6\u5ea6\u5c0f\u4e8e-1\uff0c\u90a3\u4e48\u5b87\u5b99\u7684\u81a8\u80c0\u5c06\u7ee7\u7eed\u52a0\u901f\uff0c\u53ef\u89c2\u6d4b\u7684\u5b87\u5b99\u5c06\u7ee7\u7eed\u53d8\u5c0f\u3002\u5728RIP\u7206\u53d1\u524d\u5927\u7ea62\u4ebf\u5e74\uff0c\u50cfLocal Group\u6216Sculptor Group\u8fd9\u6837\u7684\u661f\u7cfb\u56e2\u5c06\u88ab\u6467\u6bc1\u3002\u5728\u6495\u88c2\u524d6000\u4e07\u5e74\uff0c\u6240\u6709\u661f\u7cfb\u90fd\u5c06\u5f00\u59cb\u5931\u53bb\u8fb9\u7f18\u7684\u6052\u661f\uff0c\u5e76\u5c06\u5728\u53e6\u4e00\u4e2a4000\u4e07\u5e74\u540e\u5b8c\u5168\u89e3\u4f53\u3002\u5728\u672b\u65e5\u524d\u4e09\u4e2a\u6708\uff0c\u6240\u6709\u7684\u6052\u661f\u7cfb\u7edf\u90fd\u5c06\u5728\u5f15\u529b\u4f5c\u7528\u4e0b\u8131\u79bb\u675f\u7f1a\uff0c\u884c\u661f\u5c06\u98de\u5411\u8fc5\u901f\u81a8\u80c0\u7684\u5b87\u5b99\u3002\u5728\u672b\u65e5\u524d30\u5206\u949f\uff0c\u884c\u661f\u3001\u6052\u661f\u3001\u5c0f\u884c\u661f\uff0c\u751a\u81f3\u50cf\u4e2d\u5b50\u661f\u548c\u9ed1\u6d1e\u8fd9\u6837\u7684\u6781\u7aef\u7269\u4f53\u90fd\u5c06\u84b8\u53d1\u6210\u539f\u5b50\u3002\u5728\u7ed3\u675f\u524d10\u221219\u79d2\uff0c\u539f\u5b50\u4f1a\u5206\u88c2\u3002\u6700\u7ec8\uff0c\u4e00\u65e6RIP\u8fbe\u5230\u666e\u6717\u514b\u5c3a\u5ea6\uff0c\u5b87\u5b99\u5f26\u5c06\u4f1a\u89e3\u4f53\uff0c\u65f6\u7a7a\u7ed3\u6784\u4e5f\u4f1a\u968f\u4e4b\u89e3\u4f53\u3002\u5f53\u6240\u6709\u7684\u8ddd\u79bb\u90fd\u53d8\u5f97\u65e0\u9650\u5927\u65f6\uff0c\u5b87\u5b99\u5c06\u8fdb\u5165\u4e00\u4e2a\u6495\u88c2\u7684\u5947\u70b9\u3002\u800c\u6240\u6709\u7269\u8d28\u90fd\u662f\u65e0\u9650\u96c6\u4e2d\u7684\uff0c\u5728\u6495\u88c2\u5947\u70b9\u4e2d\uff0c\u6240\u6709\u7684\u7269\u8d28\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u788e\u88c2\u7684\u5947\u70b9\u4e0a\uff0c\u800c\u5728\u4e00\u4e2a\u6495\u88c2\u7684\u5947\u70b9\u4e2d\uff0c\u6240\u6709\u7684\u7269\u8d28\u90fd\u662f\u65e0\u9650\u96c6\u4e2d\u7684\uff0c\u6240\u6709\u7684\u7269\u8d28\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u6495\u88c2\u7684\u5947\u70b9\u4e2d\u3002\n..", "note_en": "Jump to navigation  Jump to search  While the future can never be predicted with absolute certainty,  [1] present understanding in various  scientific fields allows for the prediction of some far-future events, if only in the broadest outline. These fields include  astrophysics, which has revealed how  planets and  stars form, interact, and die;  particle physics, which has revealed how matter behaves at the smallest scales;  evolutionary biology, which predicts how life will evolve over time; and  plate tectonics, which shows how continents shift over millennia.\n All projections of the  future of Earth,  the Solar System, and  the universe must account for the  second law of thermodynamics, which states that  entropy, or a loss of the energy available to do work, must rise over time.  Stars will eventually exhaust their supply of  hydrogen fuel and burn out. Close encounters between astronomical objects gravitationally fling planets from their star systems, and star systems from galaxies.  [3]\n Physicists expect that matter itself will eventually come under the influence of  radioactive decay, as even the most stable materials break apart into subatomic particles.  [4] Current data suggest that the  universe has a flat geometry (or very close to flat), and thus will not  collapse in on itself after a finite time,  [5] and the infinite future allows for the occurrence of a number of massively improbable events, such as the formation of  Boltzmann brains.  [6]\n The timelines displayed here cover events from  the beginning of the 11th millennium to the furthest reaches of future time. A number of alternative future events are listed to account for questions still unresolved, such as whether  humans will become extinct, whether  protons decay, and whether the Earth survives when the Sun expands to become a  red giant.\n      If a failure of the  Wilkes Subglacial Basin &#34;ice plug&#34; in the next few centuries were to endanger the  East Antarctic Ice Sheet, it would take up to this long to melt completely.  Sea levels would rise 3 to 4 metres.  [7] One of the potential  long-term effects of global warming, this is separate from the shorter-term threat of the  West Antarctic Ice Sheet.\n The  red supergiant star  Antares will likely have exploded in a  supernova. The explosion should be easily visible on Earth in daylight.  [8]\n According to the  Sahara pump theory, the  precession of Earth&#39;s poles will move the  North African Monsoon far enough north to convert the  Sahara back into having a tropical climate,  as it had 5,000\u201310,000 years ago.  [9]  [10]\n The northern  Martian polar ice cap could recede as  Mars reaches a warming peak of the northern hemisphere during the c. 50,000-year   perihelion precession aspect of its   Milankovitch cycle.  [11]  [12]\n The small  red dwarf  Ross 248 will pass within 3.024 light-years of Earth, becoming the closest star to the Sun.  [13] It will recede after about 8,000 years, making first  Alpha Centauri (again) and then  Gliese 445 the nearest stars  [13] ( see timeline).\n According to Berger and Loutre, the current  interglacial period will end,  [14] sending the Earth back into a  glacial period of the current  ice age, regardless of the effects of anthropogenic  global warming. The  Niagara Falls will have eroded away the remaining 32\u00a0km to  Lake Erie, and will cease to exist.  [15]\n The many  glacial lakes of the  Canadian Shield will have been erased by  post-glacial rebound and erosion.  [16]\n The length of the   day used for astronomical timekeeping reaches about 86,401  SI seconds due to  lunar tides decelerating the Earth&#39;s rotation. Under the present-day timekeeping system, either a  leap second would need to be added to the clock every single day, or else by then, in order to compensate, the length of the day would have had to have been officially lengthened by one SI second.  [17]\n The  proper motion of stars across the  celestial sphere, which results from their movement through the  Milky Way, renders many of the  constellations unrecognisable.  [18]\n  Earth will likely have undergone a  supervolcanic eruption large enough to erupt 400\u00a0km 3 (96 cubic miles) of  magma. For comparison,  Lake Erie is 484\u00a0km 3 (116\u00a0cu\u00a0mi).  [20]\n Native North American  earthworms, such as  Megascolecidae, will have naturally spread north through the United States  Upper Midwest to the   Canada\u2013US border, recovering from the  Laurentide Ice Sheet glaciation (38\u00b0N to 49\u00b0N), assuming a migration rate of 10\u00a0metres per year.  [21] (However, humans have already introduced non-native  invasive earthworms of North America on a much shorter timescale, causing a shock to the regional  ecosystem.)\n As one of the  long-term effects of global warming, 10% of   anthropogenic carbon dioxide will still remain in a stabilized atmosphere.  [22]\n L\u014d\u02bbihi, the youngest volcano in the  Hawaiian\u2013Emperor seamount chain, will rise above the surface of the ocean and become a new   volcanic island.  [23]\n At some point in the next few hundred thousand years, the  Wolf\u2013Rayet star  WR 104 may explode in a  supernova. There is a small chance WR 104 is spinning fast enough to produce a  gamma-ray burst, and an even smaller chance that such a GRB could pose a threat to life on Earth.  [24]  [25]\n Earth will likely have been hit by an asteroid of roughly 1\u00a0km in diameter,  assuming that that cannot be averted.  [26]\n The rugged terrain of  Badlands National Park in  South Dakota will have eroded away completely.  [27]\n Meteor Crater, a large  impact crater in Arizona considered the &#34;freshest&#34; of its kind, will have eroded away.  [28]\n Earth will likely have undergone a   supervolcanic eruption large enough to erupt 3,200\u00a0km 3 (770 cubic miles) of magma, an event comparable to the  Toba supereruption 75,000 years ago.  [20]\n Highest estimated time until the  red supergiant star  Betelgeuse explodes in a  supernova. For at least a few months, the supernova will be visible on Earth in daylight. Studies suggest this supernova will occur within a million years, and perhaps even as little as the next 100,000 years.  [29]  [30]\n  The star  Gliese 710 will pass as close as 9,000\u00a0AU (0.14\u00a0light-years to the Sun) before moving away. This will gravitationally  perturb members of the  Oort cloud, a halo of icy bodies orbiting at the edge of the Solar System, thereafter raising the likelihood of a cometary impact in the inner Solar System.  [32]\n Estimated time for the recovery of   coral-reef ecosystems from human-caused  ocean acidification; the recovery of marine ecosystems after the acidification event that occurred about 65 million years ago took a similar length of time.  [33]\n The  Grand Canyon will erode further, deepening slightly, but principally widening into a broad valley surrounding the  Colorado River.  [34]\n Average orbital half-life of current   centaurs, that are unstable because of gravitational interaction of the several  outer planets.  [35] See  predictions for notable centaurs.\n The widening  East African Rift valley is flooded by the  Red Sea, causing a new ocean basin to divide the continent of  Africa  [36] and the  African Plate into the newly formed Nubian Plate and the  Somali Plate.\n Estimated time for full recovery of  biodiversity after a potential  Holocene extinction, if it were on the scale of the five previous   major extinction events.  [37] Even without a mass extinction, by this time most current species will have disappeared through the  background extinction rate, with many  clades gradually evolving into new forms.  [38]  [39]\n  According to  Christopher R. Scotese, the movement of the  San Andreas Fault will cause the  Gulf of California to flood into the  Central Valley. This will form a new inland sea on the  West Coast North America.  [40]\n  According to Christopher R. Scotese, the movement of the  San Andreas Fault will cause the current locations of Los Angeles and San Francisco to merge.  [40] The Californian coast will begin to be subducted into the  Aleutian Trench.  [42] Africa&#39;s collision with  Eurasia closes the  Mediterranean Basin and creates a mountain range similar to the  Himalayas.  [43]\n The  Appalachian Mountains peaks will largely erode away,  [44] weathering at 5.7  Bubnoff units, although topography will actually rise as regional  valleys deepen at twice this rate.  [45]\n The  Canadian Rockies will erode away to a plain, assuming a rate of 60  Bubnoff units.  [46] The  Southern Rockies in the United States are eroding at a somewhat slower rate.  [47]\n  The  Big Island will have become the last of the current  Hawaiian Islands to sink beneath the surface of the ocean, while a more recently formed chain of &#34;new Hawaiian Islands&#34; will then have emerged in their place.  [49]\n Earth will likely have been hit by an asteroid comparable in size to the one that triggered the  K\u2013Pg extinction 66 million years ago,  assuming this cannot be averted.  [50]\n According to the Pangaea Proxima Model created by Christopher R. Scotese, a new subduction zone will open in the Atlantic Ocean and the Americas will begin to converge back toward Africa.  [40]\n   Due to the gradual slowing down of Earth&#39;s rotation, a day on Earth will be one hour longer than it is today.  [53]\n Prediction of the orbits of the planets is impossible over greater time spans than this, due to the limitations of  Lyapunov time.  [54]\n  According to Christopher R. Scotese, due to the northward movement of the West Coast of North America, the coast of California will collide with Alaska.  [40]\n All the continents on Earth may fuse into a  supercontinent. Three potential arrangements of this configuration have been dubbed   Amasia,  Novopangaea, and  Pangaea Ultima.  [40]  [56] This will likely result in a glacial period, lowering sea-levels and increasing oxygen levels, further lowering global temperatures.  [57]  [58]\n Rapid  biological evolution may occur due to the formation of a supercontinent causing lower temperatures and higher oxygen levels.  [58]\n  Estimated time for  Venus&#39;s mantle temperature to reach its maximum. Then, over a period of about 100 million years, major subduction occurs and the crust is recycled.  [60]\n According to the extroversion model first developed by  Paul F. Hoffman, the  Pacific Ocean will close completely.  [61]  [62]  [56]\n The supercontinent (Pangaea Ultima, Novopangaea, or Amasia) will likely have rifted apart.  [56] This will likely result in higher global temperatures, similar to the  Cretaceous period.  [58]\n Estimated time until a  gamma-ray burst, or massive, hyperenergetic supernova, occurs within 6,500 light-years of Earth; close enough for its rays to affect Earth&#39;s  ozone layer and potentially trigger a  mass extinction, assuming the hypothesis is correct that a previous such explosion triggered the   Ordovician\u2013Silurian extinction event. However, the supernova would have to be precisely oriented relative to Earth to have any negative effect.  [63]\n Tidal acceleration moves the  Moon far enough from Earth that total  solar eclipses are no longer possible.  [64]\n The Sun&#39;s increasing luminosity begins to disrupt the  carbonate\u2013silicate cycle; higher luminosity increases  weathering of surface rocks, which traps  carbon dioxide in the ground as carbonate. As water evaporates from the Earth&#39;s surface, rocks harden, causing  plate tectonics to slow and eventually stop once the oceans evaporate completely. With less volcanism to recycle carbon into the Earth&#39;s atmosphere, carbon-dioxide levels begin to fall.  [65] By this time, carbon dioxide levels will fall to the point at which  C 3 photosynthesis is no longer possible. All plants that utilize C 3 photosynthesis (\u224899 percent of present-day species) will die.  [66]\n The death of most  plant life will result in less  oxygen in the  atmosphere, allowing for more  DNA-damaging  ultraviolet radiation to reach the surface. The rising temperatures will increase chemical reactions in the atmosphere, further lowering oxygen levels. Flying animals would be better off because of their ability to travel large distances looking for cooler temperatures.  [67] Many animals may be driven to the poles or possibly underground. These creatures would become active during the  polar night and hibernate during the  polar day due to the intense heat and radiation. Much of the land would become a barren desert, and plants and animals would primarily be found in the oceans.  [67]\n Carbon-dioxide levels fall to the point at which  C 4 photosynthesis is no longer possible.  [66] Without plant life to recycle oxygen in the atmosphere, free oxygen and the ozone layer will disappear from the atmosphere allowing for intense levels of deadly UV light to reach the surface. In the book  The Life and Death of Planet Earth, authors  Peter D. Ward and  Donald Brownlee state that some animal life may be able to survive in the oceans. Eventually, however, all multicellular life will die out.  [68] The only life left on the Earth after this will be single-celled organisms.\n 27% of the ocean&#39;s mass will have been subducted into the mantle. If this were to continue uninterrupted, it would reach an equilibrium where 65% of the surface water would remain at the surface.  [69]\n The Sun&#39;s luminosity has risen by 10%, causing Earth&#39;s surface temperatures to reach an average of c. 320\u00a0K (47\u00a0\u00b0C; 116\u00a0\u00b0F). The atmosphere will become a &#34;moist greenhouse&#34;, resulting in a runaway evaporation of the oceans.  [65]  [70] This would cause  plate tectonics to stop completely, if not already stopped before this time.  [71] Pockets of water may still be present at the poles, allowing abodes for simple life.  [72]  [73]\n High estimate until all plant life dies out, assuming some form of photosynthesis is possible despite extremely low carbon-dioxide levels. If this is possible, rising temperatures will make a complex  biosphere unsustainable from this point on.  [74]  [75]  [76]\n  The Sun&#39;s rising luminosity causes its  circumstellar habitable zone to move outwards; as  carbon dioxide rises in  Mars&#39;s atmosphere, its surface temperature rises to levels akin to Earth during the  ice age.  [68]  [77]\n  High estimate until the Earth&#39;s oceans evaporate if the atmospheric pressure were to decrease via the  nitrogen cycle.  [78]\n The Earth&#39;s  outer core freezes if the  inner core continues to grow at its current rate of 1\u00a0mm (0.039\u00a0in) per year.  [79]  [80] Without its liquid outer core, the  Earth&#39;s magnetic field shuts down,  [81] and charged particles emanating from the  Sun gradually deplete the atmosphere.  [82]\n The Sun will have reached a maximum surface temperature of 5,820 K. From then on, it will become gradually cooler while its luminosity will continue to increase.  [70]\n Earth&#39;s surface temperature reaches c. 420\u00a0K (147\u00a0\u00b0C; 296\u00a0\u00b0F), even at the poles. At this point, all life, now reduced to unicellular colonies in isolated, scattered microenvironments such as high-altitude lakes or caves, will go extinct.  [65]  [83]\n There is a roughly 1-in-100,000 chance that the Earth might be ejected into interstellar space by a stellar encounter before this point, and a 1-in-3-million chance that it will then be captured by another star. Were this to happen, life, assuming it survived the interstellar journey, could potentially continue for far longer.  [84]\n Median point at which the Moon&#39;s increasing distance from the Earth lessens its stabilising effect on the Earth&#39;s  axial tilt. As a consequence, Earth&#39;s  true polar wander becomes chaotic and extreme, leading to dramatic shifts in the planet&#39;s climate due to the changing axial tilt.  [85]\n 1% chance that  Jupiter&#39;s gravity may make  Mercury&#39;s orbit so  eccentric as to collide with  Venus, sending the inner Solar System into chaos. Possible scenarios include Mercury colliding with the Sun, being ejected from the Solar System, or colliding with Earth.  [86]\n All water currently present in oceans (if not lost earlier) evaporates. The  greenhouse effect caused by the massive, water-rich atmosphere, combined with the Sun&#39;s luminosity reaching roughly 35\u201340% above its present value, will result in Earth&#39;s surface temperature rising to 1,400\u00a0K (1,130\u00a0\u00b0C; 2,060\u00a0\u00b0F) \u2013 hot enough to melt some surface rock.  [71]  [78]  [87]  [88] This period in Earth&#39;s future is often [   quantify] compared to Venus today, but the temperature is actually around two times the temperature on Venus today, and at this temperature the surface will be partially molten,  [89] while Venus probably has a mostly solid surface at present. Venus will also probably drastically heat up at this time as well, most likely being much hotter than Earth will be (as it is closer to the Sun).\n Neptune&#39;s moon  Triton falls through the planet&#39;s  Roche limit, potentially disintegrating into a planetary  ring system similar to  Saturn&#39;s.  [90]\n Median point by which the  Andromeda Galaxy will have  collided with the  Milky Way, which will thereafter merge to form a galaxy dubbed &#34;Milkomeda&#34;.  [91] There is also a small chance of the Solar System being ejected.  [92]  [93] The planets of the Solar System will almost certainly not be disturbed by these events.  [94]  [95]  [96]\n Mars reaches the same  solar flux the Earth did when it first formed, 4.5 billion years ago from today.  [77]\n With the hydrogen supply exhausted at its core, the Sun leaves the  main sequence and begins to  evolve into a  red giant.  [97]\n Mars reaches the same solar radiation flux as Earth today, after which it will suffer a similar fate to the Earth as described above.  [77]\n  The Earth and Moon are very likely destroyed by falling into the Sun, just before the Sun reaches the tip of its  red giant phase and its maximum radius of 256 times the present-day value.  [97]  [note 4] Before the final collision, the Moon possibly spirals below Earth&#39;s  Roche limit, breaking into a ring of debris, most of which falls to the Earth&#39;s surface.  [98]\n The Sun reaches the tip of the red-giant branch of the  Hertzsprung\u2013Russell diagram, achieving its maximum radius of 256 times the present-day value.  [100] In the process,  Mercury,  Venus, and very likely Earth are destroyed.  [97]\n The Sun becomes a carbon-oxygen  white dwarf with about 54.05% its present mass.  [97]  [101]  [102]  [103] At this point, if somehow the Earth survives, temperatures on the surface of the planet, as well as other remaining planets in the Solar System, will begin dropping rapidly, due to the white dwarf Sun emitting much less energy than it does today.\n The end of the Universe in the  Big Rip scenario, assuming a model of  dark energy with   w = \u22121.5.  [104] If the density of  dark energy is less than -1, then the  Universe&#39;s expansion would continue to accelerate and the  Observable Universe would continue to get smaller. Around 200 million years before the rip, galaxy clusters like the  Local Group or the  Sculptor Group would be destroyed. Sixty million years before the rip, all galaxies will begin to lose stars around their edges and will completely disintegrate in another 40 million years. Three months before the end, all star systems will become gravitationally unbound, and planets will fly off into the rapidly expanding universe. Thirty minutes before the end,  planets,  stars,  asteroids and even extreme objects like  neutron stars and  black holes will evaporate into  atoms. 10 \u221219 seconds before the end, atoms would break apart. Ultimately, once rip reaches the  Planck scale, cosmic strings would be disintegrated as well as the fabric of  spacetime itself. The universe would enter into a &#34;rip singularity&#34; when all distances become infinitely large. Whereas a &#34;crunch singularity&#34; all matter is infinitely concentrated, in a &#34;rip singularity&#34; all \n......", "posttime": "2020-05-18 00:20:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u672a\u6765,timeline,\u5730\u7403", "title": "\u9065\u8fdc\u672a\u6765\u7684\u65f6\u95f4\u8868", "title_en": "Timeline of the Far Future", "transed": 1, "url": "https://en.wikipedia.org/wiki/Timeline_of_the_far_future", "via": "", "real_tags": ["\u672a\u6765", "timeline", "\u5730\u7403"]}, {"category": "", "categoryclass": "", "imagename": "454b5b66d7e702b782396085161e829b.png", "infoid": 1002535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u591a\u57282000\u5e74\u521d\u4e0a\u7f51\u7684\u4eba\u90fd\u8bb0\u5f97\u4e00\u79cd\u53eb\u505aRSS\u7684\u4e1c\u897f\u3002\u5b83\u4ee3\u8868\u7740\u771f\u6b63\u7b80\u5355\u7684\u8054\u5408\uff0c\u5b83\u5141\u8bb8\u5185\u5bb9\u521b\u5efa\u8005\u4ee5\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u683c\u5f0f\u5411\u4e16\u754c\u53d1\u5e03\u66f4\u65b0\u3002\n\u8fd9\u4e2a\u60f3\u6cd5-\u6253\u5b57\u4f3c\u4e4e\u5f88\u5947\u602a-\u662f\u4e16\u754c\u4e0a\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u4eba\u53ef\u4ee5\u521b\u9020\u548c\u53d1\u5e03\u60f3\u6cd5\u3001\u601d\u60f3\u548c\u5185\u5bb9\u2026\u3002\u7136\u540e\uff0c\u559c\u6b22\u8fd9\u4e9b\u5185\u5bb9\u7684\u4eba\u4f1a\u5c06\u8d44\u6e90\u6536\u96c6\u5230\u9605\u8bfb\u5668\u4e2d\uff0c\u8fd9\u4e2a\u9605\u8bfb\u5668\u88ab\u79f0\u4e3aRSS\u9605\u8bfb\u5668\u3002\n\u8c37\u6b4c\u9605\u8bfb\u5668\u662f\u9996\u9009\u7684\u9605\u8bfb\u5668\uff0c\u5b83\u975e\u5e38\u51fa\u8272\u3002\u4eba\u4eec\u4e3a\u4ed6\u4eec\u7cbe\u5fc3\u7b56\u5212\u7684\u4e00\u7ec4\u8d44\u6e90\u611f\u5230\u81ea\u8c6a\uff0c\u6211\u4eec\u5199\u4e86\u5f88\u591a\u5173\u4e8e\u5982\u4f55\u6700\u597d\u5730\u7ec4\u7ec7\u60a8\u7684\u63d0\u8981\u4ee5\u5b9e\u73b0\u6700\u9ad8\u6548\u7387\u7684\u6587\u7ae0\u3002\n\u8fd9\u662f\u521b\u4f5c\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u76f4\u63a5\u8054\u7cfb\u3002\u901a\u8fc7\u5c06\u67d0\u4eba\u7684\u63d0\u8981\u6dfb\u52a0\u5230\u60a8\u7684RSS\u9605\u8bfb\u5668\u4e2d\uff0c\u60a8\u662f\u5728\u8bf4\uff0c\u201c\u662f\u7684\uff0c\u6211\u613f\u610f\u8ba2\u9605\u60a8\u5bf9\u73b0\u5b9e\u7684\u89e3\u91ca\u3002\u201d\n\u901a\u8fc7\u7b56\u5212\u8bfb\u8005\u4e2d\u7684\u63d0\u8981\uff0c\u4f60\u5c31\u662f\u5728\u7b56\u5212\u4f60\u7684\u4e16\u754c\u89c2\u3002\u8fd9\u662f\u7531\u6210\u767e\u4e0a\u5343\u4e2a\u5355\u72ec\u7684\u58f0\u97f3\u7ec4\u6210\u7684\u3002\n\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u8c01\u5148\u88ad\u51fb\u7684--\u662f\u6211\u4eec\u8fd8\u662f\u4ed6\u4eec--\u4f46\u6211\u4eec\u77e5\u9053\u662f\u6211\u4eec\u70e7\u7126\u4e86\u5929\u7a7a\u3002\n\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u5230\u5e95\u662f\u4ec0\u4e48\u6467\u6bc1\u4e86RSS\uff0c\u4f46\u8c37\u6b4c\u5173\u95ed\u8c37\u6b4c\u9605\u8bfb\u5668\u80af\u5b9a\u65e0\u6d4e\u4e8e\u4e8b\u3002\u53e6\u4e00\u4e2a\u56e0\u7d20\u662f\u50cfSlashdot\u3001Digg\u548cReddit\u8fd9\u6837\u7684\u805a\u5408\u7f51\u7ad9\u7684\u5d1b\u8d77\uff0c\u5b83\u4eec\u8bf1\u4eba\u5730\u627f\u62c5\u8d77\u4e86\u5c55\u793a\u6700\u4f73\u5185\u5bb9\u7684\u91cd\u62c5\u3002\n\u56e0\u6b64\uff0c\u4e0d\u5fc5\u7b56\u5212\u81ea\u5df1\u7684\u63d0\u8981\uff0c\u60a8\u53ea\u9700\u767b\u9646\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u201c\u6700\u597d\u7684\u201d\u5185\u5bb9\u3002\n\u5f53\u7136\uff0cReddit\u5f88\u68d2\u3002\u5176\u4ed6\u805a\u5408\u5668\u4e5f\u662f\u5982\u6b64\u3002\u4f46\u6211\u60f3\u4ed6\u4eec\u5077\u4e86\u6211\u4eec\u7684\u4e1c\u897f\u3002\u9996\u5148\uff0c\u4ed6\u4eec\u6253\u7834\u4e86\u8bfb\u8005\u548c\u521b\u4f5c\u8005\u4e4b\u95f4\u7684\u76f4\u63a5\u8054\u7cfb\uff0c\u8ba9Digg\u5411\u4f60\u5c55\u793a\u4e86\u4e00\u4e2a\u6545\u4e8b\uff0c\u800c\u4e0d\u662f\u4f60\u5173\u6ce8\u4e86\u591a\u5e74\u7684\u514b\u91cc\u65af\u6c40\u3002\u5176\u6b21\uff0c\u5b83\u6d88\u9664\u4e86\u7167\u770b\u81ea\u5df1\u7684\u6295\u5165\u82b1\u56ed\u7684\u9700\u8981\u3002\n\u83b7\u5f97\u67d0\u6837\u4e1c\u897f\u6240\u9700\u7684\u52aa\u529b\u8d8a\u5c11\uff0c\u5b83\u5bf9\u4f60\u7684\u4ef7\u503c\u5c31\u8d8a\u5c0f\u3002\n\u6211\u76f8\u4fe1\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u4e5f\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5c31\u50cf\u805a\u5408\u5668\u4e00\u6837\uff0c\u5b83\u4eec\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u9152\u5427\uff0c\u5f53\u4f60\u51fa\u73b0\u65f6\uff0c\u5b83\u4eec\u4fdd\u8bc1\u4e86\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u4e1c\u897f\u3002\u5171\u540c\u70b9\u662f\u4ece\u66f4\u591a\u7684\u52aa\u529b\u5230\u66f4\u5c11\u7684\u52aa\u529b\u3002\u8fd9\u5c31\u50cf\u5728WALL-E\u4e2d\uff0c\u6211\u4eec\u53d8\u6210\u75c5\u6001\u80a5\u80d6\u7684\u4eba\uff0c\u5750\u5728\u6c14\u57ab\u6905\u4e0a\u5728\u523a\u6fc0\u4e4b\u95f4\u7a7f\u68ad\u3002\n\u597d\u4e86\uff0c\u53c8\u5230\u4e86\u56ed\u827a\u7684\u65f6\u5019\u4e86\u3002\u73b0\u5728\u662f\u56de\u5230RSS\u7684\u65f6\u5019\u4e86\u3002\n\u8c37\u6b4c\u9605\u8bfb\u5668(Google Reader)\u8fd8\u662f\u6b7b\u4e86\uff0c\u4f46\u5982\u679c\u6211\u6458\u6389\u6000\u65e7\u773c\u955c\uff0cFeedly\u73b0\u5728\u53ef\u80fd\u6bd4Reader\u4ee5\u524d\u66f4\u597d\u4e86\u3002\u6211\u5df2\u7ecf\u7528\u4e86\u597d\u51e0\u5e74\u4e86\u3002\n\u6211\u8ba4\u4e3aRSS\u7b56\u5c55\u5c31\u50cf\u662f\u81ea\u5df1\u505a\u996d\u7684\u505a\u6cd5\u3002\u6311\u9009\u7279\u5b9a\u7684\u914d\u6599\uff0c\u4f7f\u7528\u5b9a\u5236\u5de5\u5177\u51c6\u5907\u5b83\u4eec\uff0c\u7136\u540e\u6d88\u8d39\u8f93\u51fa\uff0c\u8fd9\u662f\u4e00\u4ef6\u795e\u5947\u7684\u4e8b\u60c5\u3002\n\u6216\u8005--\u4e5f\u8bb8\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u6bd4\u55bb--\u57f9\u517b\u4e00\u4e2a\u4e66\u67b6\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u4e66\u67b6\u901a\u5e38\u662f\u7528\u81ea\u5df1\u559c\u6b22\u7684\u4e66\u5efa\u9020\u7684\uff0c\u800c\u6211\u8ba4\u4e3aRSS\u9605\u8bfb\u5668\u4e5f\u5e94\u8be5\u8bbe\u8ba1\u6210\u201c\u63a5\u89e6\u5230\u5176\u4ed6\u4eba\u201d\u3002\n\u91cd\u70b9\u662f\uff0cRSS\u9605\u8bfb\u5668\u7684\u7ba1\u7406\u8feb\u4f7f\u4eba\u4eec\u601d\u8003\u4ed6\u4eec\u7684\u8f93\u5165\uff0c\u5e76\u5728\u8fd9\u6837\u505a\u7684\u8fc7\u7a0b\u4e2d\u953b\u70bc\u4ed6\u4eec\u7684\u4ef7\u503c\u89c2\u3002\u60a8\u662f\u5426\u6b63\u5728\u6784\u5efa\u9002\u5408\u60a8\u7684\u8f93\u5165\u5217\u8868\uff1f\u4f60\u662f\u5426\u5305\u62ec\u4f60\u5c0a\u91cd\u4f46\u4e0d\u540c\u610f\u7684\u4eba\uff1f\u5982\u679c\u662f\u4f60\u6839\u672c\u65e0\u6cd5\u5fcd\u53d7\u7684\u4eba\u5462\uff1f\n\u4f60\u9009\u62e9\u5305\u62ec\u7684\u5185\u5bb9\u4e0d\u4ec5\u4f1a\u5b9a\u4e49\u4f60\u5982\u4f55\u770b\u5f85\u4e16\u754c\uff0c\u800c\u4e14\u8fd8\u4f1a\u8ba9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u4ed6\u4eba\u7684\u89c2\u70b9\u3002\n\u7136\u540e\uff0c\u4f5c\u4e3a\u6700\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u505c\u6b62\u8bbf\u95ee\u7ebd\u7ea6\u65f6\u62a5\uff0cCNN\uff0cReddit\uff0c\u9ed1\u5ba2\u65b0\u95fb\uff0c\u9f99\u867e\uff0c\u4ee5\u53ca\u4f60\u6574\u5929\u8f6e\u6d41\u6d4f\u89c8\u7684\u6240\u6709\u5176\u4ed6\u7f51\u7ad9\u3002\n\u8fd9\u4e0d\u4ec5\u4f1a\u51cf\u5c11\u4f60\u4e0d\u65ad\u6253\u5f00\u548c\u5173\u95ed\u5404\u79cd\u7f51\u7ad9\u7684\u7126\u8651\u548c\u6d41\u5931\uff0c\u800c\u4e14RSS\u8fd8\u4f1a\u4ee5\u6807\u51c6\u683c\u5f0f\u663e\u793a\u5185\u5bb9\uff0c\u51cf\u5c11\u5206\u6563\u4f60\u7684\u6ce8\u610f\u529b\u3002\n\u5982\u679c\u4f60\u5728\u4efb\u4f55Reddit URL\u7684\u672b\u5c3e\u6dfb\u52a0.rss\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u5b83\u7684RSS\u63d0\u8981\u3002\n\u8bb0\u4f4f\uff0c\u4f60\u4e0d\u9700\u8981\u653e\u5f03\u4efb\u4f55\u4e1c\u897f\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728\u4e00\u4e2a\u5730\u65b9\u6536\u770b\u9ed1\u5ba2\u65b0\u95fb\uff0c\u9f99\u867e\uff0c\u662f\u7684\uff0c\u751a\u81f3Reddit\u3002\n\u60a8\u4e0d\u5fc5\u653e\u5f03\u805a\u5408\u5668\u7684\u529f\u80fd\uff0c\u53ea\u9700\u5c06\u5176\u6dfb\u52a0\u4e3a\u6e90\u5373\u53ef\u3002\n\u77e5\u9053\u4f60\u53ea\u9700\u8981\u68c0\u67e5\u4e00\u4e2a\u5730\u65b9\u800c\u4e0d\u662fN\u4e2a\u5730\u65b9\uff0c\u8fd9\u8ba9\u4eba\u5f88\u653e\u677e", "note_en": "A lot of people who were on the internet in the early 2000\u2019s remember something called RSS. It stands for  Really Simple Syndication, and it allowed content creators to publish updates to the world in a well-understood format.\n The idea\u2014which seems strange to type out\u2014is that millions of people in the world could create and publish ideas, thoughts, and content\u2026and then people who enjoyed that content would collect sources into a reader, which was called, well, an RSS Reader.\n   Google Reader was the reader of choice, and it was glorious. People took pride in their curated set of sources, and we  wrote a lot about how to best organize your feeds for maximum efficiency.\n It was a direct connection between creators and consumers. By adding someone\u2019s feed to your RSS reader you were saying, \u201cYes, I\u2019d like to subscribe to your interpretation of reality.\u201d\n By curating the feeds in your reader, you were curating your view of the world. And that was made up of hundreds or thousands of individual voices.\n We\u2019re not sure who struck first\u2014us or them\u2014but we know it was us that scorched the sky.\n It\u2019s unclear what exactly destroyed RSS, but Google closing Google Reader definitely didn\u2019t help. Another factor was the rise of aggregation sites like Slashdot, Digg, and Reddit, which seductively took on the burden of surfacing the best content.\n So rather than having to curate your own feeds, you just land on a single site and have the \u201cbest\u201d content presented to you.\n  Reddit is awesome, for sure. And so were the other aggregators. But I think they stole something from us. First, they broke the direct connection between the reader and the creator, making it so that Digg showed you a story, not Kristen\u2014who you\u2019ve been following for years. And second, it removed the need to tend to one\u2019s own input garden.\n The less effort it takes to acquire something, the less value it will have to you.\n I\u2019m sure social media sites had an effect too, because\u2014like aggregators\u2014they were singular watering holes that guaranteed something exciting when you showed up. The common denominator is the move from more effort to less. It\u2019s like in WALL-E, where we turn into morbidly obese people on hoverchairs being shuttled between stimuli.\n Well, it\u2019s time to garden again. It\u2019s time to return to RSS.\n Google Reader is still dead, but if I remove my nostalgia glasses,  Feedly is probably better now than Reader ever was. It\u2019s what I\u2019ve been using for years now.\n   I see RSS curation like the practice of cooking one\u2019s own meals. There\u2019s something magical about picking specific ingredients, using custom tools to prepare them, and then consuming the output.\n Or\u2014perhaps an even better metaphor\u2014cultivating a bookshelf. With the only difference being that bookshelves are usually constructed using only one\u2019s favorite books, while I think an RSS reader should be designed for \u201cexposure to other\u201d as well.\n  The point is that curation of an RSS reader forces one to think about their inputs, and to exercise their values in doing so. Are you building a list of inputs that agree with you? Are you including people who you respect but disagree with? What about people you can\u2019t stand at all?\n What you choose to include will not just define how you see the world, but how well you understand other peoples\u2019 perspectives as well.\n   Then, as the most important step, stop visiting the New York Times, CNN, Reddit, Hacker News, Lobsters, and every other site you rotate through all day.\n    Not only will this reduce your anxiety and churn from constantly opening and closing various sites, but RSS also shows the content in a standard format, with less to distract you.\n If you add  .rss to the end of any Reddit URL you get its RSS feed.\n Remember, you don\u2019t have to give anything up. You can still have Hacker News, Lobsters, and yes\u2014even Reddit\u2014all in one place.\n   You don\u2019t have to give up the power of the aggregators; just add them as sources\n   It\u2019s relaxing to know you only have to check one place rather than  N places", "posttime": "2020-05-18 00:05:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56de\u5230,rss", "title": "\u662f\u65f6\u5019\u56de\u5230RSS\u4e86", "title_en": "It\u2019s Time to Get Back to RSS", "transed": 1, "url": "https://danielmiessler.com/blog/its-time-to-get-back-into-rss/", "via": "", "real_tags": ["\u56de\u5230", "rss"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u4e00\u76f4\u5728\u60f3\u7684\u662f\uff0c\u5f53\u6211\u5728\u4efb\u4f55\u4e00\u79cd\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u65f6\uff0c\u5305\u62ec\u50cfWeb\u5e94\u7528\u7a0b\u5e8f\u8fd9\u6837\u7b80\u5355\u7684\u524d\u7aef\u548c\u540e\u7aef\u4ee3\u7801\uff0c\u6211\u53ef\u80fd\u670980%\u4ee5\u4e0a\u7684\u65f6\u95f4\u82b1\u5728\u4e86\u5982\u679c\u4e0d\u662f\u5206\u5e03\u5f0f\u7684\u60c5\u51b5\u4e0b\u6211\u5c31\u4e0d\u9700\u8981\u505a\u7684\u4e8b\u60c5\u4e0a\u3002\u5bf9\u4e8e\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u8fd9\u7c7b\u7f16\u7a0b\u9700\u8981\u5982\u6b64\u591a\u7684\u5de5\u4f5c\uff0c\u6211\u63d0\u51fa\u4e86\u4ee5\u4e0b\u63cf\u8ff0\uff1a\u4e00\u5207\u90fd\u662f\u8106\u5f31\u7684\u3001\u72ed\u7a84\u7684\u3001\u6ede\u540e\u7684\u3001\u5f02\u6b65\u7684\u3001\u4e0d\u5339\u914d\u7684\u3001\u4e0d\u53ef\u4fe1\u7684\u7ba1\u9053\u3002\u6211\u8ba4\u4e3a\u6bcf\u4e00\u4e2a\u5728\u7f51\u7edc\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u7684\u7a0b\u5e8f\u5458\u90fd\u9047\u5230\u8fc7\u8fd9\u4e9b\u95ee\u9898\uff0c\u8fd9\u53ea\u662f\u6211\u5728\u4e00\u4e2a\u5730\u65b9\u8fde\u8d2f\u5730\u63cf\u8ff0\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u7684\u52aa\u529b\u3002\u6211\u5e0c\u671b\u80fd\u4fc3\u4f7f\u4f60\u540c\u65f6\u8003\u8651\u6240\u6709\u4e0d\u540c\u7684\u9ebb\u70e6\uff0c\u5e76\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u4f60\u5fc5\u987b/\u4e0d\u9700\u8981\u5904\u7406\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4f60\u7684\u5de5\u4f5c\u4f1a\u53d8\u5f97\u591a\u4e48\u56f0\u96be/\u5bb9\u6613\u3002\u6211\u8ba4\u4e3a\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u50cfTwitter\u8fd9\u6837\u7684\u7f51\u7edc\u516c\u53f8\u7684\u4eba\u5747\u5de5\u7a0b\u5e08\u751f\u4ea7\u7387\u4f3c\u4e4e\u6bd4\u6e38\u620f\u516c\u53f8\u6216SpaceX\u7b49\u5176\u4ed6\u516c\u53f8\u8981\u4f4e\u5f97\u591a\uff0c\u5c3d\u7ba1\u8fd9\u4e2a\u8c1c\u56e2\u8fd8\u6709\u5176\u4ed6\u65b9\u9762\u3002\u867d\u7136\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u90e8\u5206\u56f0\u96be\u662f\u7269\u7406\u4e0a\u56fa\u6709\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u6709\u5f88\u591a\u60f3\u6cd5\u53ef\u4ee5\u4f7f\u95ee\u9898\u7684\u6bcf\u4e2a\u90e8\u5206\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u5176\u4e2d\u8bb8\u591a\u5df2\u7ecf\u662f\u5e38\u7528\u7684\uff0c\u6211\u5c06\u5c1d\u8bd5\u63d0\u5230\u5176\u4e2d\u7684\u8bb8\u591a\u60f3\u6cd5\u3002\u6211\u5e0c\u671b\u6211\u4eec\u4f5c\u4e3a\u7a0b\u5e8f\u5458\u4e0d\u65ad\u5f00\u53d1\u66f4\u591a\u8fd9\u6837\u7684\u6280\u672f\uff0c\u7279\u522b\u662f\u7b80\u5316\u95ee\u9898\u7684\u901a\u7528\u5b9e\u73b0\u3002\u5c31\u50cf\u5e8f\u5217\u5316\u5e93\u51cf\u5c11\u4e86\u5bf9\u624b\u5de5\u7f16\u5199\u7684\u89e3\u6790\u5668/\u7f16\u5199\u5668\u7684\u9700\u6c42\u4e00\u6837\uff0c\u6211\u8ba4\u4e3a\u901a\u8fc7\u5b9e\u73b0\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5f00\u53d1\u4eba\u5458\u65f6\u95f4\uff0c\u5728\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u76ee\u524d\u6b63\u8d39\u52b2\u5730\u91cd\u65b0\u5b9e\u73b0\u901a\u7528\u6a21\u5f0f\u3002\u6211\u8fd8\u8ba4\u4e3a\uff0c\u6240\u6709\u8fd9\u4e9b\u6210\u672c\u610f\u5473\u7740\uff0c\u5982\u679c\u6ca1\u6709\u5fc5\u8981\uff0c\u60a8\u5e94\u8be5\u771f\u6b63\u52aa\u529b\u907f\u514d\u4f7f\u60a8\u7684\u7cfb\u7edf\u5206\u5e03\u5f0f\u3002\n\u6211\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e00\u90e8\u5206\uff0c\u4f46\u7b80\u8981\u5730\u8bf4\uff0c\u6bcf\u5f53\u6211\u4eec\u4ecb\u7ecd\u7f51\u7edc\u8fde\u63a5\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u90fd\u5fc5\u987b\u5904\u7406\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\u8106\u5f31\uff1a\u7f51\u7edc\u8fde\u63a5\u6216\u53e6\u4e00\u7aef\u53ef\u80fd\u51fa\u73b0\u786c\u4ef6\u6545\u969c\uff0c\u8fd9\u4e9b\u6545\u969c\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u4f46\u4e24\u8005\u90fd\u8868\u73b0\u4e3a\u8d85\u65f6\u3002\u4e00\u5207\u90fd\u9700\u8981\u5904\u7406\u5931\u8d25\u3002\n\u7a84\uff1a\u5e26\u5bbd\u6709\u9650\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u8bbe\u8ba1\u534f\u8bae\uff0c\u4ee5\u4fbf\u53ea\u53d1\u9001\u4ed6\u4eec\u9700\u8981\u7684\u5185\u5bb9\u3002\n\u5f02\u6b65\uff1a\u7279\u522b\u662f\u4f7f\u7528&gt\uff1b2\u8f93\u5165\u6e90(UI\u8ba1\u6570)\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5404\u79cd\u7ade\u4e89\u548c\u8fb9\u7f18\u60c5\u51b5\uff0c\u9700\u8981\u8003\u8651\u548c\u5904\u7406\u3002\n\u4e0d\u5339\u914d\uff1a\u901a\u5e38\u4e0d\u53ef\u80fd\u81ea\u52a8\u5347\u7ea7\u6240\u6709\u7cfb\u7edf\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5904\u7406\u4f7f\u7528\u4e0d\u540c\u534f\u8bae\u7248\u672c\u7684\u4e0d\u540c\u76ee\u7684\u3002\n\u4e0d\u53ef\u4fe1\uff1a\u5982\u679c\u60a8\u4e0d\u5e0c\u671b\u6240\u6709\u5185\u5bb9\u90fd\u56e0\u4e00\u6b21\u6545\u969c\u800c\u5173\u95ed\uff0c\u5219\u9700\u8981\u9632\u5fa1\u65e0\u6548\u8f93\u5165\u548c\u4e0d\u582a\u91cd\u8d1f\u7684\u60c5\u51b5\u3002\u6709\u65f6\uff0c\u60a8\u8fd8\u9700\u8981\u9632\u5fa1\u5b9e\u9645\u7684\u653b\u51fb\u8005\u3002\n\u7ba1\u9053\uff1a\u6240\u6709\u5185\u5bb9\u90fd\u6253\u5305\u4e3a\u5b57\u8282\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u80fd\u591f(\u53cd)\u5e8f\u5217\u5316\u60a8\u7684\u6570\u636e\u3002\n\u5f53\u7f16\u5199\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u907f\u514d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9664\u975e\u60a8\u6700\u7ec8\u4f18\u5316\u4e86\u6027\u80fd\uff0c\u5e76\u610f\u8bc6\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u6838\u5fc3\u7cfb\u7edf\uff0c\u5e76\u4e14\u5176\u4e2d\u4e00\u4e9b\u6838\u5fc3\u53c8\u56de\u6765\u4e86\u3002\u4e00\u4e9b\u9886\u57df\u8bbe\u6cd5\u907f\u514d\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u6211\u5728\u7f51\u7edc\u5e94\u7528\u3001\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3001\u6587\u672c\u7f16\u8f91\u5668\u548c\u9ad8\u6027\u80fd\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u65f6\u7ecf\u5386\u8fc7\u8fd9\u4e9b\u95ee\u9898\u7684\u5b50\u96c6\uff0c\u5b83\u4eec\u65e0\u5904\u4e0d\u5728\u3002\n\u8fd9\u751a\u81f3\u4e0d\u662f\u6240\u6709\u7684\u95ee\u9898\uff0c\u53ea\u662f\u5173\u4e8e\u7f51\u7edc\u7684\u4e8b\u60c5\u3002\u5728\u5404\u79cd\u74f6\u9888\u901a\u5e38\u5982\u4f55\u9700\u8981\u590d\u6742\u7684\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784(\u9700\u8981\u4e0e\u5e95\u5c42\u6570\u636e\u5b58\u50a8\u4fdd\u6301\u540c\u6b65)\u7b49\u95ee\u9898\u4e0a\u4e5f\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u7cbe\u529b\u3002\n\u907f\u514d\u8fd9\u4e00\u5207\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u4e0d\u7f16\u5199\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u6709\u5f88\u591a\u60c5\u51b5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u8ba4\u4e3a\u6bd4\u4e00\u4e9b\u4eba\u66f4\u52aa\u529b\u5730\u5c1d\u8bd5\u5c06\u6240\u6709\u4e8b\u60c5\u6253\u5305\u5230\u4e00\u4e2a\u8fc7\u7a0b\u4e2d\u662f\u503c\u5f97\u7684\u3002\u7136\u800c\uff0c\u8d85\u8fc7\u4e00\u5b9a\u7684\u53ef\u9760\u6027\u6216\u89c4\u6a21\uff0c\u7269\u7406\u610f\u5473\u7740\u60a8\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u591a\u53f0\u673a\u5668(\u9664\u975e\u60a8\u60f3\u8d70\u5927\u578b\u673a\u8def\u7ebf)\u3002\n\u968f\u7740\u60a8\u8fde\u63a5\u673a\u5668\u6216\u63d0\u9ad8\u53ef\u9760\u6027\u76ee\u6807\uff0c\u5f53\u4e00\u4e2a\u90e8\u4ef6\u5d29\u6e83\u65f6\u53ea\u4f7f\u6240\u6709\u4e1c\u897f\u5d29\u6e83\u7684\u7b56\u7565(\u591a\u7ebf\u7a0b/\u591a\u6838\u7cfb\u7edf\u6240\u505a\u7684)\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e0d\u53ef\u884c\u3002\u786c\u4ef6\u5c06\u51fa\u73b0\u6545\u969c\uff0c\u65e0\u7ebf\u8fde\u63a5\u5c06\u4e2d\u65ad\uff0c\u6574\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u7535\u529b\u6216\u7f51\u7edc\u5c06\u88ab\u677e\u9f20\u5207\u65ad\u3002\u4e00\u4e9b\u57df\u540d\uff0c\u5982\u4e92\u8054\u7f51\u4e0d\u7a33\u5b9a\u7684\u5ba2\u6237\uff0c\u4e5f\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684\u8fde\u63a5\u6545\u969c\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u60a8\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u5904\u7406\u5931\u8d25\u6848\u4f8b\uff0c\u5e76\u4ed4\u7ec6\u8003\u8651\u5b83\u4eec\u662f\u4ec0\u4e48\u4ee5\u53ca\u8981\u505a\u4ec0\u4e48\u3002\u5f53\u4ec5\u4ec5\u6ce8\u610f\u5230\u6545\u969c\u4f1a\u4e22\u5931\u91cd\u8981\u6570\u636e\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5197\u4f59\u65f6\uff0c\u60c5\u51b5\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u53e6\u4e00\u53f0\u673a\u5668\u53d1\u751f\u6545\u969c\u548c\u7f51\u7edc\u8fde\u63a5\u4e2d\u65ad\u90fd\u53d8\u5f97\u53ef\u89c1\uff0c\u5c31\u50cf\u4e00\u4e9b\u9884\u671f\u7684\u7f51\u7edc\u6570\u636e\u5305\u5728\u201c\u592a\u957f\u201d\u4e4b\u540e\u6ca1\u6709\u5230\u8fbe\u4e00\u6837\uff0c\u8fd9\u4e0d\u4ec5\u5e26\u6765\u4e86\u5ef6\u8fdf\uff0c\u800c\u4e14\u5e26\u6765\u4e86\u53ef\u80fd\u5bfc\u81f4\u5206\u88c2\u5927\u8111\u95ee\u9898\u7684\u6a21\u68f1\u4e24\u53ef\u3002\u901a\u5e38\uff0c\u50cfTCP\u8fd9\u6837\u7684\u4e1c\u897f\u4f1a\u4e3a\u60a8\u5b9e\u73b0\u5b83\uff0c\u4f46\u6709\u65f6\u60a8\u5fc5\u987b\u5b9e\u73b0\u81ea\u5df1\u7684\u5fc3\u8df3\uff0c\u4ee5\u5b9a\u671f\u68c0\u67e5\u53e6\u4e00\u4e2a\u7cfb\u7edf\u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002\n\u8bd5\u56fe\u7b80\u5316\u8fd9\u4e00\u70b9\u7684\u5c1d\u8bd5\u5305\u62ec\u4f8b\u5916\u3001TCP\u3001\u5408\u5e76\u534f\u8bae\u548c\u73b0\u6210\u7684\u5197\u4f59\u6570\u636e\u5e93\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u6d88\u9664\u6240\u6709\u5730\u65b9\u7684\u95ee\u9898\u3002\u6211\u6700\u559c\u6b22\u7684\u5c1d\u8bd5\u4e4b\u4e00\u662fErlang\u7684\u6d41\u7a0b\u94fe\u63a5\u3001\u76d1\u89c6\u548c\u76d1\u7763\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7406\u5ff5\uff0c\u8bd5\u56fe\u5c06\u6240\u6709\u7c7b\u578b\u7684\u6545\u969c\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5bb9\u6613\u5904\u7406\u7684\u4e00\u822c\u60c5\u51b5\u3002\n\u7f51\u7edc\u5e26\u5bbd\u901a\u5e38\u662f\u6709\u9650\u7684\uff0c\u7279\u522b\u662f\u5728\u6d88\u8d39\u8005\u6216\u8702\u7a9d\u4e92\u8054\u7f51\u4e0a\u3002\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u4e00\u4e2a\u7ecf\u5e38\u7684\u9650\u5236\uff0c\u56e0\u4e3a\u60a8\u5f88\u5c11\u8fbe\u5230\u5e26\u5bbd\u9650\u5236\uff0c\u4f46\u8fd9\u662f\u56e0\u4e3a\u6709\u9650\u7684\u5e26\u5bbd\u5728\u60a8\u505a\u7684\u6bcf\u4ef6\u4e8b\u4e2d\u90fd\u6839\u6df1\u8482\u56fa\u3002\u65e0\u8bba\u4f55\u65f6\u8bbe\u8ba1\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u60a8\u90fd\u9700\u8981\u63d0\u51fa\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u6309\u7167\u9700\u8981\u7684\u987a\u5e8f\u8fdb\u884c\u901a\u4fe1\uff0c\u800c\u4e0d\u662f\u6309\u7167\u6570\u636e\u603b\u5927\u5c0f\u7684\u987a\u5e8f\u8fdb\u884c\u901a\u4fe1\u3002\n\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u53ef\u80fd\u53ea\u4f20\u9012\u4e00\u4e2a\u6307\u5411\u5343\u5146\u5b57\u8282\u7684\u4e0d\u53ef\u53d8\u6216\u9501\u5b9a\u6570\u636e\u7684\u6307\u9488\uff0c\u8ba9\u7ebf\u7a0b\u8bfb\u53d6\u5b83\u60f3\u8981\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u53bb\u60f3\u4efb\u4f55\u4e8b\u60c5\u3002\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4f20\u9012\u4ee3\u8868\u6570\u636e\u5e93\u7684\u6574\u4e2a\u5185\u5b58\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\uff0c\u60a8\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u5b9e\u73b0\u5176\u4ed6\u65b9\u6cd5\u3002\n\u867d\u7136\u591a\u6838\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u5e55\u540e\u4f7f\u7528\u534f\u8bae\u6765\u4ec5\u4f20\u8f93\u5fc5\u8981\u7684\u6570\u636e\uff0c\u4f46\u662f\u6d89\u53ca\u6bd4\u5927\u591a\u6570\u7f51\u7edc\u53ef\u884c\u7684\u66f4\u591a\u7684\u5e7f\u64ad\u548c\u5f80\u8fd4\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u8ba4\u4e3a\u5c1d\u8bd5\u5c06\u7528\u4e8e\u4f7f\u591a\u6838\u8ba1\u7b97\u673a\u65e0\u7f1d\u8fde\u63a5\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6280\u672f\u5e94\u7528\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u662f\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u60f3\u51fa\u53ef\u80fd\u6bd4\u5176\u4ed6\u65b9\u5f0f\u8bbe\u8ba1\u7684\u66f4\u901a\u7528\u7684\u6574\u6d01\u89e3\u51b3\u65b9\u6848\u3002\u540c\u6837\uff0c\u4e00\u65e6\u60a8\u771f\u6b63\u5f00\u59cb\u52aa\u529b\u4f18\u5316\u7cfb\u7edf\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u8ba1\u7b97\u673a\u5185\u90e8\u7684\u5e26\u5bbd\u4e5f\u4f1a\u6210\u4e3a\u4e00\u4e2a\u9650\u5236\u56e0\u7d20\u3002\n\u5904\u7406\u4f4e\u5e26\u5bbd\u901a\u5e38\u6d89\u53ca\u6bcf\u6b21\u67e5\u8be2\u6216\u4fee\u6539\u5171\u4eab\u6570\u636e\u7ed3\u6784\u7684\u6d88\u606f\u7c7b\u578b\uff0c\u5e76\u51b3\u5b9a\u4f55\u65f6\u4f20\u9001\u66f4\u591a\u6570\u636e\u4ee5\u4fbf\u672c\u5730\u4ea4\u4e92\u66f4\u5feb\uff0c\u6216\u8005\u4f55\u65f6\u4f20\u9001\u66f4\u5c11\u6570\u636e\u4ee5\u907f\u514d\u7cdf\u7cd5\u7684\u5e26\u5bbd\u60c5\u51b5\u3002\u5b83\u901a\u5e38\u66f4\u8fdb\u4e00\u6b65\u5230\u5404\u79cd\u7c7b\u578b\u7684\u590d\u5236\u72b6\u6001\u673a\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bf9\u7b49\u70b9\u57fa\u4e8e\u590d\u5236\u7684\u66f4\u6539\u6d41\u66f4\u65b0\u6a21\u578b\uff0c\u56e0\u4e3a\u5728\u6bcf\u6b21\u66f4\u65b0\u4e4b\u540e\u53d1\u9001\u65b0\u6a21\u578b\u5c06\u4f1a\u5360\u7528\u592a\u591a\u5e26\u5bbd\u3002\u8fd9\u65b9\u9762\u7684\u4f8b\u5b50\u5305\u62ec\u4ea4\u6362\u63d0\u8981\u7684RTS\u6e38\u620f\u3002\u7136\u800c\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u5bf9\u7b49\u70b9\u5982\u4f55\u66f4\u65b0\u5176\u72b6\u6001\u4ee5\u907f\u514d\u53bb\u540c\u6b65\u7684\u786e\u5b9a\u6027\u548c\u4e00\u81f4\u6027\u53ef\u80fd\u662f\u68d8\u624b\u7684\uff0c\u7279\u522b\u662f\u5728\u4e0d\u540c\u5bf9\u7b49\u70b9\u5177\u6709\u4e0d\u540c\u7684\u8bed\u8a00\u6216\u8f6f\u4ef6\u7248\u672c\u7684\u60c5\u51b5\u4e0b\u3002\u60a8\u8fd8\u7ecf\u5e38\u6700\u7ec8\u5b9e\u73b0\u4e00\u4e2a\u5355\u72ec\u7684\u534f\u8bae\u6765\u6d41\u5f0f\u4f20\u8f93\u5b8c\u6574\u7684\u5feb\u7167\uff0c\u56e0\u4e3a\u5f53\u8fde\u63a5\u4e0d\u53ef\u884c\u65f6\uff0c\u4ece\u4e00\u5f00\u59cb\u91cd\u653e\u4e8b\u4ef6\u662f\u4e0d\u53ef\u884c\u7684\u3002\n\u8bd5\u56fe\u7b80\u5316\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u5305\u62ecRPC\u5e93\uff0c\u5b83\u4f7f\u4e3a\u4e0d\u540c\u7684\u67e5\u8be2\u548c\u66f4\u65b0\u53d1\u9001\u5927\u91cf\u4e0d\u540c\u7c7b\u578b\u7684\u6d88\u606f\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u800c\u4e0d\u662f\u63d0\u4f9b\u6570\u636e\u7ed3\u6784\u3001\u7f13\u5b58\u5e93\u548c\u538b\u7f29\u3002\u5f88\u9177\u4f46\u4e0d\u592a\u5e38\u7528\u7684\u7cfb\u7edf\u5305\u62ec\u50cfReplicant\u8fd9\u6837\u7684\u7cfb\u7edf\uff0c\u5b83\u4eec\u53ef\u4ee5\u786e\u4fdd\u540c\u6b65\u72b6\u6001\u673a\u4ee3\u7801\u5e76\u66f4\u65b0\u8bb8\u591a\u8bbe\u5907\u4e0a\u7684\u6d41\uff0c\u4ece\u800c\u4f7f\u590d\u5236\u72b6\u6001\u673a\u53d8\u5f97\u66f4\u5bb9\u6613\u3001\u66f4\u8f7b\u677e\u3002\n\u4e00\u6b21\u7f51\u7edc\u5f80\u8fd4\u4e0d\u53ef\u80fd\u662f\u6709\u95ee\u9898\u7684\u5ef6\u8fdf\uff0c\u6216\u8005\u60a8\u9700\u8981\u66f4\u597d\u7684\u7f51\u7edc\u786c\u4ef6\uff0c\u6216\u8005\u9700\u8981\u89e3\u51b3\u4e0d\u540c\u7684\u95ee\u9898\u3002\u56f0\u96be\u6765\u81ea\u4e8e\u907f\u514d\u4ee5\u9700\u8981\u8fc7\u591a\u7f51\u7edc\u5f80\u8fd4\u7684\u65b9\u5f0f\u5b9e\u65bd\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u53ef\u80fd\u5bfc\u81f4\u9700\u8981\u5b9e\u73b0\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u7279\u6b8a\u7ec4\u5408\u6d88\u606f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u63d0\u4f9b\u8f83\u5c0f\u7684\u539f\u59cb\u6d88\u606f\u3002\n\u5177\u6709\u7279\u522b\u5927\u5ef6\u8fdf\u7684Web\u6709\u5f88\u591a\u8fd9\u79cd\u7c7b\u578b\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u52a0\u8f7dHTML\u540e\u53ea\u6709\u5b57\u4f53/\u56fe\u50cfURL\uff0c\u6216\u8005REST API\u9700\u8981\u591a\u4e2a\u94fe\u5f0f\u8c03\u7528\u624d\u80fd\u83b7\u5f97\u4e0b\u4e00\u4e2a\u6240\u9700\u7684ID\u3002\u5df2\u7ecf\u4e3a\u8fd9\u4e9b\u95ee\u9898\u6784\u5efa\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u6bd4\u5982\u8d44\u6e90\u5185\u8054\u3001HTTP/2\u670d\u52a1\u5668\u63a8\u9001\u548cGraphQL\u3002\n\u4e00\u4e2a\u6bd4\u8f83\u9177\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u662fCapn\u2018n Promise\u6d41\u6c34\u7ebf\u548c\u5176\u4ed6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5b9e\u8d28\u4e0a\u6d89\u53ca\u5c06\u4e00\u7cfb\u5217\u6b65\u9aa4\u4f20\u9001\u5230\u53e6\u4e00\u7aef(\u5982SQL)\u6267\u884c\u3002\u8fd9\u4e9b\u7cfb\u7edf\u672c\u8d28\u4e0a\u53d1\u9001\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u7684\u6709\u9650\u7c7b\u578b\u7684\u7a0b\u5e8f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u60a8\u7ecf\u5e38\u9047\u5230\u6240\u7528\u8bed\u8a00\u7684\u9650\u5236\uff0c\u6bd4\u5982\u60a8\u65e0\u6cd5\u5728\u6ca1\u6709\u5f80\u8fd4\u7684\u60c5\u51b5\u4e0b\u5c06Capn\u2018n Proto\u7ed3\u679c\u52a01\uff0c\u7136\u540e\u518d\u5c06\u5176\u4f20\u9012\u7ed9\u65b0\u7684\u547c\u53eb\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u4f7f\u60a8\u7684\u8bed\u8a00\u8fc7\u4e8e\u5f3a\u5927\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4ee3\u7801\u95ee\u9898\uff0c\u56e0\u4e3a\u60a8\u8981\u53d1\u5e03\u7684\u4ee3\u7801\u4f1a\u4f7f\u670d\u52a1\u5668\u8fc7\u8f7d\u6216\u8fc7\u5927\u3002\u5982\u679c\u60a8\u63a7\u5236\u4e24\u7aef\uff0c\u90a3\u4e48\u4e3a\u60a8\u7684\u7528\u4f8b\u6dfb\u52a0\u591a\u6b65\u9aa4\u6d88\u606f\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u662f\u5982\u679c\u53e6\u4e00\u7aef\u662f\u516c\u53f8\u7684\u7b2c\u4e09\u65b9API\uff0c\u6216\u8005\u751a\u81f3\u662f\u5927\u516c\u53f8\u7684\u4e0d\u540c\u56e2\u961f\u6240\u62e5\u6709\u7684\uff0c\u90a3\u4e48\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5f80\u5f80\u4e0d\u60f3\u5728\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u60a8\u7684\u7a0b\u5e8f\u3002\u6211\u8ba4\u4e3a\u5728\u53d1\u9001\u4ee3\u7801\u6bb5\u7684\u65b0\u65b9\u6cd5\u65b9\u9762\u6709\u66f4\u591a\u7684\u63a2\u7d22\u7a7a\u95f4\uff0c\u540c\u65f6\u91cd\u7528\u53d1\u9001\u7684\u4ee3\u7801\u4ee5\u8282\u7701\u5e26\u5bbd\u5e76\u9650\u5236\u5176\u9020\u6210\u7834\u574f\u7684\u53ef\u80fd\u6027\u3002\n\u53e6\u4e00\u79cd\u53ef\u4ee5\u5728\u6570\u636e\u4e2d\u5fc3\u5de5\u4f5c\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u66f4\u597d\u7684\u7f51\u7edc\u3002\u4f60\u53ef\u4ee5\u5f97\u5230\u5ef6\u8fdf\u4e3a2us\uff0c\u5e26\u5bbd\u4e3a100Gbps\u6216\u66f4\u9ad8\u7684\u7f51\u5361\uff0c\u4f46\u57fa\u672c\u4e0a\u53ea\u6709HPC\u3001\u6a21\u62df\u548c\u91d1\u878d\u4f7f\u7528\u5b83\u4eec\u3002\u7136\u800c\uff0c\u5982\u679c\u60a8\u7684\u65b9\u6cd5\u9700\u8981O(N)\u6b21\u5f80\u8fd4\uff0c\u8fd9\u4e9b\u53ea\u4f1a\u51cf\u5c11\u5e38\u91cf\u56e0\u7d20\uff0c\u5e76\u4e0d\u80fd\u8282\u7701\u60a8\u7684\u65f6\u95f4\u3002\n\u4e00\u65e6\u60a8\u67092+\u4e2a\u672a\u540c\u6b65\u7684\u4e8b\u4ef6\u6e90\uff0c\u60a8\u5c31\u4f1a\u5f00\u59cb\u62c5\u5fc3\u7ade\u4e89\u60c5\u51b5\u3002\u8fd9\u53ef\u4ee5\u662f\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u53ea\u662f\u4e00\u4e2a\u65e2\u6709\u7528\u6237\u8f93\u5165\u53c8\u6709\u5230\u670d\u52a1\u5668\u7684\u901a\u9053\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002\u603b\u662f\u6709\u4e00\u4e9b\u4e0d\u5e38\u89c1\u7684\u6392\u5e8f\uff0c\u6bd4\u5982\u7528\u6237\u5728\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u9875\u9762\u4e4b\u524d\u518d\u6b21\u5355\u51fb\u201c\u63d0\u4ea4\u201d\u6309\u94ae\u3002\u6709\u65f6\u60a8\u5f88\u5e78\u8fd0\uff0c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u610f\u5473\u7740\u8fd9\u5f88\u597d\uff0c\u800c\u53e6\u4e00\u4e9b\u65f6\u5019\u5219\u4e0d\u662f\u8fd9\u6837\uff0c\u60a8\u8981\u4e48\u4fee\u590d\u5b83\u6765\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u4ece\u88ab\u5f00\u4e24\u6b21\u8d26\u5355\u7684\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u9519\u8bef\u62a5\u544a\u3002\u5f02\u6b65\u7a0b\u5ea6\u8d8a\u9ad8\uff0c\u60a8\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u5c31\u8d8a\u591a\uff0c\u6216\u8005\u5fc5\u987b\u4f7f\u7528\u4e00\u79cd\u4f18\u96c5\u7684\u8bbe\u8ba1\u6765\u89e3\u51b3\u66f4\u591a\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u53ef\u4ee5\u907f\u514d\u7cdf\u7cd5\u7684\u72b6\u6001\u3002\n\u6839\u636e\u60a8\u7684\u8bed\u8a00/\u6846\u67b6\u7684\u4e0d\u540c\uff0c\u5f02\u6b65\u8fd8\u53ef\u80fd\u9700\u8981\u66f4\u6539\u60a8\u901a\u5e38\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u5f0f\uff0c\u4ece\u800c\u4f7f\u4e00\u5207\u53d8\u5f97\u81c3\u80bf\u548c\u4e11\u964b\u3002\u8bb8\u591a\u7cfb\u7edf\u8fc7\u53bb\u548c\u73b0\u5728\u90fd\u8981\u6c42\u60a8\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528\u56de\u8c03\uff0c\u6709\u65f6\u751a\u81f3\u4e0d\u63d0\u4f9b\u95ed\u5305\uff0c\u8fd9\u4f1a\u4f7f\u60a8\u7684\u4ee3\u7801\u53d8\u5f97\u975e\u5e38\u6df7\u4e71\u3002\u8bb8\u591a\u8bed\u8a00\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u66f4\u597d\uff0c\u6bd4\u5982\u5f02\u6b65/\u7b49\u5f85\u6216\u5e26\u6709\u5c0f\u5806\u6808\u7684\u534f\u7a0b(\u5982Go)\uff0c\u6216\u8005\u53ea\u662f\u4f7f\u7528\u7ebf\u7a0b\u548c\u963b\u585eI/O\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5176\u4e2d\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\u5f15\u5165\u4e86\u51fd\u6570\u989c\u8272\u95ee\u9898\uff0c\u56e0\u4e3a\u5f15\u5165\u5f02\u6b65\u9700\u8981\u5728\u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u8fdb\u884c\u66f4\u6539\u3002\n\u5f02\u6b65\u8fb9\u7f18\u60c5\u51b5\u662f\u4e00\u4e2a\u76f8\u5f53\u57fa\u672c\u7684\u95ee\u9898\uff0c\u4f46\u662f\u6709\u5f88\u591a\u53ef\u7528\u7684\u6a21\u5f0f\u6765\u89e3\u51b3\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u6b65\u3002\u4f8b\u5982\uff0c\u5e76\u53d1\u539f\u8bed(\u5982\u9501\u548c\u969c\u788d)\u3001\u534f\u8bae\u8bbe\u8ba1\u601d\u60f3(\u5982\u5e42\u7b49)\u548c\u66f4\u65f6\u9ae6\u7684\u4e1c\u897f(\u5982CRDT)\u3002\n\u901a\u5e38\uff0c\u5f53\u60a8\u60f3\u8981\u66f4\u6539\u534f\u8bae\u65f6\uff0c\u4e0d\u53ef\u80fd\u81ea\u52a8\u5347\u7ea7\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u3002\u8fd9\u662f\u4ece\u5fc5\u987b\u5168\u5929\u5019\u8fd0\u884c\u7684\u670d\u52a1\u5668\u7fa4\u96c6\u4e0e\u5c06\u65e7\u7248\u672c\u7684\u7f51\u9875\u52a0\u8f7d\u5230\u9009\u9879\u5361\u4e2d\u7684\u7528\u6237\u8fdb\u884c\u901a\u4fe1\u800c\u8fd0\u884c\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u60a8\u7684\u7cfb\u7edf\u9700\u8981\u4f7f\u7528\u8f83\u65b0\u7684\u534f\u8bae\u7248\u672c\uff0c\u4e0e\u53ea\u77e5\u9053\u8f83\u65e7\u534f\u8bae\u7684\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u60a8\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6709\u4e24\u5927\u7c7b\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u4eec\u6709\u5f88\u591a\u5b50\u7c7b\u578b\uff1a\n\u901a\u8fc7\u7ef4\u62a4\u4e24\u4e2a\u5b9e\u73b0\u6216\u5c06\u65e7\u5904\u7406\u7a0b\u5e8f\u6620\u5c04\u5230\u65b0\u5904\u7406\u7a0b\u5e8f\uff0c\u4f7f\u65b0\u8f6f\u4ef6\u7248\u672c\u80fd\u591f\u540c\u65f6\u4f7f\u7528\u65b0\u7684\u548c\u65b0\u7684\u534f\u8bae\u7248\u672c\uff0c\u5e76\u4e0e\u5347\u7ea7\u7684\u5bf9\u7b49\u70b9\u534f\u5546\u4f7f\u7528\u65b0\u7248\u672c\u3002\n\u4f7f\u7528\u514d\u8d39\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u517c\u5bb9\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u4ec5\u4ee5\u8fd9\u4e9b\u65b9\u5f0f\u5347\u7ea7\u60a8\u7684\u534f\u8bae\u3002\u4f8b\u5982\uff0cJSON\u5bf9\u8c61\u4e2d\u65e0\u6cd5\u8bc6\u522b\u7684\u5b57\u6bb5\u901a\u5e38\u4f1a\u88ab\u5ffd\u7565\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u8bc6\u522b\u540e\u7528\u4e8e\u65b0\u529f\u80fd\u3002\u8fc1\u79fb\u901a\u5e38\u53ef\u4ee5\u5728\u4e0d\u4e2d\u65ad\u67e5\u8be2\u7684\u60c5\u51b5\u4e0b\u5411\u6570\u636e\u5e93\u8868\u6dfb\u52a0\u65b0\u5217\u3002\u7136\u540e\uff0c\u60a8\u901a\u5e38\u4f1a\u4e0d\u9057\u4f59\u529b\u5730\u8feb\u4f7f\u6bcf\u4e2a\u66f4\u6539\u6210\u4e3a\u8fd9\u79cd\u7c7b\u578b\u7684\u517c\u5bb9\u3002\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u95ee\u9898\u662f\uff0c\u7b2c\u4e00\u6b65\u901a\u5e38\u4ee5\u4ee3\u7801\u8def\u5f84\u7684\u5f62\u5f0f\u79ef\u7d2f\u6280\u672f\u503a\u52a1\uff0c\u4ee5\u5904\u7406\u4e00\u65e6\u6240\u6709\u5bf9\u7b49\u70b9\u90fd\u5347\u7ea7\u5230\u534f\u8bae\u66f4\u6539\u4e4b\u540e\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5(\u4f8b\u5982\uff0c\u7f3a\u5c11\u5b57\u6bb5)\u3002\u8fd9\u901a\u5e38\u9700\u8981\u5206\u591a\u4e2a\u9636\u6bb5\u63a8\u51fa\uff0c\u4f8b\u5982\u5f15\u5165\u4e00\u4e2a\u65b0\u5b57\u6bb5\u4f5c\u4e3a\u53ef\u9009\uff0c\u5728\u6240\u6709\u5730\u65b9\u63a8\u51fa\u65b0\u7248\u672c\uff0c\u5c06\u8be5\u5b57\u6bb5\u66f4\u6539\u4e3a\u5fc5\u586b\u5b57\u6bb5\uff0c\u73b0\u5728\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u53d1\u9001\u8be5\u5b57\u6bb5\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u63a8\u51fa\u3002\u5f53\u6211\u60f3\u8981\u66f4\u6539\u591a\u4e2a\u7cfb\u7edf\u4f7f\u7528\u7684\u534f\u8bae\u800c\u53c8\u4e0d\u60f3\u5f04\u5f97\u4e00\u56e2\u7cdf\u65f6\uff0c\u6211\u80af\u5b9a\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u6765\u8ba1\u5212\u591a\u9636\u6bb5\u90e8\u7f72\u3002\n\u5bf9\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u6709\u5f88\u591a\u5e2e\u52a9\uff0c\u4e24\u79cd\u5e8f\u5217\u5316\u7cfb\u7edf\u90fd\u63d0\u4f9b\u4e86\u5927\u91cf\u517c\u5bb9\u7684\u5347\u7ea7\u8def\u5f84\uff0c\u5982Protobufs\uff0c\u4ee5\u53ca\u7528\u4e8e\u53cd\u5e8f\u5217\u5316/\u5347\u7ea7\u65e7\u7c7b\u578b\u7248\u672c\u7684\u5404\u79cd\u6a21\u5f0f\u3002\n\u60a8\u7684\u6570\u636e\u4e0d\u4ec5\u53ef\u80fd\u65e0\u6cd5\u5230\u8fbe\uff0c\u800c\u4e14\u60a8\u7684\u7cfb\u7edf\u53ef\u80fd\u4f1a\u63a5\u6536\u5230\u53ef\u80fd\u4f1a\u5bf9\u5176\u9020\u6210\u79ef\u6781\u635f\u5bb3\u7684\u6570\u636e\u3002\u7cfb\u7edf\u5b58\u5728\u5bfc\u81f4\u53d1\u9001\u65e0\u6548\u6d88\u606f\u7684\u9519\u8bef\uff0c\u56e0\u6b64\u4e0d\u4ec5\u5728\u5e8f\u5217\u5316\u7ea7\u522b\uff0c\u800c\u4e14\u5728\u4e1a\u52a1\u903b\u8f91\u7ea7\u522b\uff0c\u90fd\u9700\u8981\u4ed4\u7ec6\u9a8c\u8bc1\u8f93\u5165\u5e76\u8fd4\u56de\u9519\u8bef\u3002\u9519\u8bef\u6216\u65b0\u8d1f\u8f7d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u53d1\u9001\u6d88\u606f\u7684\u901f\u5ea6\u8d85\u8fc7\u5176\u5904\u7406\u901f\u5ea6\uff0c\u4ece\u800c\u9700\u8981\u80cc\u538b\u548c\u9650\u5236\u3002\u60a8\u751a\u81f3\u53ef\u80fd\u4e0d\u5f97\u4e0d\u9632\u5fa1\u90a3\u4e9b\u79ef\u6781\u5c1d\u8bd5\u901a\u8fc7\u53d1\u9001\u901a\u5e38\u7684\u4ea4\u6613\u5bf9\u624b\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u9001\u7684\u6d88\u606f\u6765\u7834\u574f\u60a8\u7684\u7cfb\u7edf\u7684\u653b\u51fb\u8005\uff0c\u5e76\u667a\u80fd\u5730\u5bfb\u627e\u8fb9\u7f18\u6848\u4f8b\u3002\n\u8fd9\u91cc\u4e5f\u6709\u5f88\u591a\u6a21\u5f0f\uff0c\u5305\u62ec\u901f\u7387\u9650\u5236\u3001\u73b0\u573a\u9a8c\u8bc1\u903b\u8f91\u548c\u5e26\u5185\u7f6e\u53cd\u538b\u7684\u901a\u9053\u3002\u5728\u5b89\u5168\u65b9\u9762\uff0c\u6211\u4eec\u8fd8\u6709\u52a0\u5bc6\u3001\u8bc1\u4e66\u548c\u6a21\u7cca\u7b49\u5185\u5bb9\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5728\u901a\u7528\u6027\u65b9\u9762\u4e5f\u505a\u5f97\u66f4\u597d\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u51cf\u5c11\u4e86\u624b\u52a8\u6a21\u5f0f\u7684\u6d41\u884c\u7a0b\u5ea6\uff0c\u6bd4\u5982\u786e\u4fdd\u6211\u4eec\u603b\u662f\u5728SQL\u548cHTML\u4e2d\u8f6c\u4e49\u5185\u63d2\u5b57\u7b26\u4e32\uff0c\u800c\u4f7f\u7528\u66f4\u901a\u7528\u7684\u6a21\u5f0f\uff0c\u6bd4\u5982\uff1f\u603b\u662f\u5e94\u7528\u8f6c\u4e49\u7684\u67e5\u8be2\u53c2\u6570\u548c\u6a21\u677f\u7cfb\u7edf\u3002\n\u6700\u540e\uff0c\u4e5f\u662f\u6700\u4e0d\u91cd\u8981\u7684\uff0c\u6240\u6709\u5185\u5bb9\u90fd\u5fc5\u987b\u662f\u5b57\u8282\u6d41\u6216\u5b57\u8282\u5305\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u91c7\u7528\u60a8\u7684\u8bed\u8a00\u4f7f\u5176\u6613\u4e8e\u64cd\u4f5c\u7684\u6f02\u4eae\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u5c06\u5b83\u4eec\u6253\u5305\u6210\u4e0e\u5176\u5185\u5b58\u4e2d\u8868\u793a\u5f62\u5f0f\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u5728\u7f51\u4e0a\u53d1\u9001\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u9664\u4e86\u5728\u6781\u5c11\u6570\u5730\u65b9\uff0c\u7b80\u5355\u7684\u5e8f\u5217\u5316/RPC\u5e93\u8ba9\u8fd9\u4ef6\u4e8b\u53d8\u5f97\u76f8\u5f53\u5bb9\u6613\uff0c\u5c3d\u7ba1\u5076\u5c14\u6709\u4e9b\u6162\u3002\u6709\u65f6\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5141\u8bb8\u60a8\u4ece\u5b57\u8282\u7f13\u51b2\u533a\u4e2d\u51c6\u786e\u6311\u9009\u51fa\u6240\u9700\u90e8\u5206\u7684\u65b9\u6cd5\uff0c\u800c\u65e0\u9700\u5c06\u5176\u8f6c\u6362\u4e3a\u4e0d\u540c\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u5c06\u7f13\u51b2\u533a\u6307\u9488\u5f3a\u5236\u8f6c\u6362\u4e3aC\u7ed3\u6784\u6307\u9488(\u5f53\u8fd9\u751a\u81f3\u63a5\u8fd1\u4e8e\u5b89\u5168\u7ea7\u522b\u65f6)\uff0c\u6216\u8005\u4f7f\u7528\u7c7b\u4f3cCap\u2018n Proto\u7684\u65b9\u6cd5\u6765\u751f\u6210\u8bbf\u95ee\u5668\u3002\n\u8fd9\u53ef\u80fd\u662f\u6211\u82b1\u7684\u65f6\u95f4\u6700\u5c11\u7684\u4e00\u6b21\uff0c\u4f46\u662f\u6211\u8bb0\u5f97\u6709\u4e00\u6b21\u6211\u60f3\u8981\u53d1\u9001\u4e00\u4e2a\u5927\u578b\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u53ef\u7528\u7684\u5e8f\u5217\u5316\u7cfb\u7edf\u53ea\u80fd\u4e00\u6b21\u5e8f\u5217\u5316\u6240\u6709\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u9010\u4e2a\u6570\u636e\u5305\u4f20\u8f93\uff0c\u56e0\u4e3a\u5957\u63a5\u5b57\u53ef\u4ee5\u63a5\u53d7\u5b83\uff0c\u800c\u4e14\u6211\u4e0d\u60f3\u957f\u65f6\u95f4\u963b\u585e\u6211\u7684\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u4f1a\u9020\u6210\u5c3e\u90e8\u5ef6\u8fdf\u3002\u6211\u6700\u7ec8\u9009\u62e9\u4e86\u4e0d\u540c\u7684\u8bbe\u8ba1\uff0c\u4f46\u6211\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5b9a\u4e49\u4ee3\u7801\uff0c\u5c06\u6211\u7684\u6570\u636e\u7ed3\u6784\u5206\u6210\u5757\uff0c\u4e00\u6b21\u53d1\u9001\u4e00\u70b9\u3002\n\u6211\u6000\u7591\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u8bb8\u591a\u56de\u590d\u90fd\u4f1a\u662f\u8fd9\u6837\u7684\uff1a\u201c\u5982\u679c\u4f60\u53ea\u662f{\u505a\u4e00\u4e9b\u4e0d\u662f\u666e\u904d\u9002\u7528\u7684\u3001\u8017\u65f6\u7684\u6216\u6709\u81ea\u5df1\u7684\u95ee\u9898\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a{\u4e00\u4e9b/\u6240\u6709\u8fd9\u4e9b\u95ee\u9898}\u90fd\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u53ef\u80fd\u662f\u6211\u63d0\u5230\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5f88\u53ef\u80fd\u662f\u4f7f\u7528Erlang}\uff0c\u800c\u771f\u6b63\u7684\u95ee\u9898\u662f\uff0c\u5176\u4ed6\u4eba\u5728\u7f16\u7a0b\u65b9\u9762\u5f88\u7cdf\u7cd5\uff0c\u4e0d\u50cf\u8fc7\u53bb\u7684\u4eba\u4eec\u201d\u3002\u6709\u5f88\u591a\u4e8b\u60c5\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u5728\u4e86\u89e3\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u9009\u62e9\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6709\u6548\u5730\u5b9e\u65bd\u5b83\u4eec\u65b9\u9762\uff0c\u6709\u4e00\u4e2a\u6280\u80fd\u90e8\u5206\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u4ecd\u7136\u662f\u68d8\u624b\u7684\u95ee\u9898\uff0c\u4eba\u4eec\u4e0d\u5f97\u4e0d\u505a\u51fa\u8270\u96be\u7684\u3001\u771f\u6b63\u7684\u6743\u8861\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6709\u6548\u5730\u89e3\u51b3\u5b83\u4eec\u3002\u4e5f\u8bb8\u4f60\u4f1a\u91c7\u53d6\u4e0d\u540c\u7684\u6743\u8861\uff0c\u4f46\u4eba\u4eec\u505a\u51fa\u8fd9\u4e9b\u6280\u672f\u51b3\u7b56\u662f\u51fa\u4e8e\u771f\u6b63\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5e94\u8be5\u52aa\u529b\u964d\u4f4e\u6210\u672c\uff0c\u4ee5\u53ca\u6539\u5584\u6211\u4eec\u63a5\u53d7\u54ea\u4e9b\u6210\u672c\u7684\u51b3\u7b56\u3002\n\u6211\u505a\u7684\u5927\u591a\u6570\u9879\u76ee\u90fd\u4e0d\u80fd\u4f7f\u7528Erlang\uff0c\u56e0\u4e3a\u5b83\u4eec\u8981\u4e48\u9700\u8981\u6781\u4f4e\u7684\u5ef6\u8fdf\uff0c\u8981\u4e48\u9700\u8981\u4e0e\u975eErlang\u751f\u6001\u7cfb\u7edf\u7684\u67d0\u4e9b\u90e8\u5206\u96c6\u6210\uff0c\u8981\u4e48\u8ba1\u7b97\u8fc7\u4e8e\u5bc6\u96c6(\u662f\u7684\uff0c\u6211\u77e5\u9053NIF)\u3002\u8fd9\u610f\u5473\u7740\u53ea\u8981\u4ece\u4e00\u4e2a\u9886\u57df\u5e26\u6765\u89e3\u51b3\u65b9\u6848\u5e76\u5728\u53e6\u4e00\u4e2a\u9886\u57df\u5b9e\u73b0\u5b83\u4eec\uff0c\u6216\u8005\u4f7f\u5b83\u4eec\u66f4\u5feb\uff0c\u5c31\u6709\u8db3\u591f\u7684\u673a\u4f1a\u63d0\u9ad8\u751f\u4ea7\u7387\uff01\u6211\u559c\u6b22\u770b\u5230\u5c06Erlang\u7684\u597d\u5904\u5e26\u5230\u66f4\u591a\u9886\u57df\u7684\u52aa\u529b\u3002\u5373\u4f7f\u662fErlang\u4e5f\u6ca1\u6709\u89e3\u51b3\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u76f8\u4fe1\u6709\u4e00\u5929\u53ef\u80fd\u4f1a\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\n\u6211\u8ba4\u4e3a\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6700\u5927\u9524\u5b50\u4e4b\u4e00\u5c31\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u52aa\u529b\u907f\u514d\u7f16\u5199\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u6211\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u6fc0\u52b1\u4eba\u4eec\u5c1d\u8bd5\u5f00\u53d1\u66f4\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e0d\u662f\u91cd\u590d\u5b9e\u73b0\u7279\u5b9a\u7684\u6a21\u5f0f\uff0c\u4f46\u6211\u7684\u53e6\u4e00\u4e2a\u76ee\u6807\u662f\u8bd5\u56fe\u4e00\u6b21\u6027\u5c06\u6240\u6709\u6210\u672c\u653e\u5728\u4f60\u9762\u524d\uff0c\u5e76\u8bf4\uff0c\u4f60\u786e\u5b9a\u6dfb\u52a0\u72ec\u7acb\u7684\u8054\u7f51\u7cfb\u7edf\u771f\u7684\u4f1a\u8ba9\u4f60\u7684\u5de5\u4f5c\u53d8\u5f97\u66f4\u5bb9\u6613\u5417\uff1f\u6709\u65f6\u5019\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u6bd4\u5982\u5982\u679c\u60a8\u60f3\u8981\u6781\u9ad8\u7684\u53ef\u7528\u6027\u6216\u8ba1\u7b97\u80fd\u529b\uff0c\u4f46\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u8fd9\u662f\u5b8c\u5168\u53ef\u4ee5\u907f\u514d\u7684\u3002\u8981\u9009\u62e9\u7279\u5b9a\u793a\u4f8b\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u6211\u8ba4\u4e3a\uff0c\u5982\u679c\u9002\u5408\u7684\u8bdd\uff0c\u4eba\u4eec\u5e94\u8be5\u66f4\u613f\u610f\u5c1d\u8bd5\u5c06\u6027\u80fd\u654f\u611f\u7684\u4ee3\u7801\u4f5c\u4e3a(\u53ef\u80fd\u662f\u591a\u7ebf\u7a0b\u7684)\u8fdb\u7a0b\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u4f7f\u7528\u5feb\u901f\u8bed\u8a00\u7f16\u5199\uff0c\u800c\u4e0d\u662f\u5c1d\u8bd5\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5206\u53d1\u901f\u5ea6\u8f83\u6162\u7684\u5b9e\u73b0\u3002\u6211\u627f\u8ba4\u8fd9\u9700\u8981\u65f6\u95f4\u548c\u7cbe\u529b\u6765\u5b66\u4e60\u5982\u4f55\u505a\u548c\u4f18\u5316\uff0c\u4f46\u5b83\u4f1a\u5728\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u7cfb\u7edf\u4e2d\u5f97\u5230\u56de\u62a5\u3002\u7279\u522b\u662f\uff0c\u6211\u8ba4\u4e3a\u4eba\u4eec\u5e94\u8be5\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u66f4\u79ef\u6781\u5730\u5c1d\u8bd5\u5728\u4e00\u53f0\u975e\u5e38\u5927\u7684\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u591a\u7ebf\u7a0b\u3002\u6211\u4e2a\u4eba\u53d1\u73b0\uff0c\u5728Rust\u65b9\u5f0f\u4e0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6bd4\u5728\u53ef\u884c\u7684\u60c5\u51b5\u4e0b\u4e0e\u591a\u8fdb\u7a0b\u5e76\u884c\u5316\u8981\u5bb9\u6613\u5f97\u591a\u3002\u6709\u4e9b\u95ee\u9898(\u5982\u5f02\u6b65)\u662f\u76f8\u4f3c\u7684\uff0c\u4f46\u5176\u4ed6\u95ee\u9898(\u5982\u4e32\u884c\u5316\u3001\u5ef6\u8fdf\u548c\u5e26\u5bbd)\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6d88\u5931\u4e86\uff0c\u9664\u975e\u6027\u80fd\u7ea7\u522b\u6bd4\u5047\u8bbe\u7684\u5206\u5e03\u5f0f\u7248\u672c\u9ad8\u5f97\u591a\u3002\n\u6211\u8ba4\u4e3a\u4eba\u4eec\u5e94\u8be5\u66f4\u613f\u610f\u4f7f\u7528CFFI\u6765\u7ed1\u5b9a\u5176\u4ed6\u8bed\u8a00\u7684\u5e93\uff0c\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u653e\u5728\u5355\u72ec\u7684\u7f51\u7edc\u670d\u52a1\u4e2d(\u4f8b\u5982\uff0c\u9488\u5bf9\u6211\u81ea\u5df1\u7684\u5e93\u7684\u7528\u6237\uff0c\u5c3d\u7ba1\u6211\u5b9e\u9645\u4e0a\u4e0d\u77e5\u9053\u4ed6\u4eec\u7684\u9650\u5236\u662f\u4ec0\u4e48)\n\u9664\u4e86\u53ef\u7528\u6027\u548c\u5e76\u884c\u6027\u4e4b\u5916\uff0c\u4eba\u4eec\u9009\u62e9\u5c06\u4e8b\u7269\u62c6\u5206\u6210\u5355\u72ec\u7684\u670d\u52a1\u662f\u6709\u539f\u56e0\u7684\u3002\u4f8b\u5982\uff0c\u65e0\u9700\u4e0e\u53e6\u4e00\u4e2a\u56e2\u961f(FAST CI)\u534f\u8c03\uff0c\u5373\u53ef\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00Isolation\u5feb\u901f\u90e8\u7f72\u66f4\u65b0\u3002\u6211\u4eec\u5e94\u8be5\u6784\u5efa\u66f4\u591a\u4e0d\u6d89\u53ca\u72ec\u7acb\u7cfb\u7edf\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u6bd4\u5982\u901a\u8fc7\u6c99\u7bb1\u800c\u4e0d\u662f\u5fae\u670d\u52a1(\u6d88\u9664\u201c\u72ed\u7a84\u201d\u3001\u201c\u6ede\u540e\u201d\u548c\u201c\u5f02\u6b65\u201d)\u6765\u4f7f\u7528\u81ea\u52a8\u66f4\u65b0\u3001\u70ed\u91cd\u65b0\u52a0\u8f7d\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u5de5\u5177\u3002\u6211\u975e\u5e38\u80af\u5b9a\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u901a\u8fc7\u7f51\u7edc\u63a8\u9001\u7684\u70ed\u91cd\u8f7ddylib\u66f4\u65b0\u5b9e\u4f8b(\u6211\u5e0c\u671b\u6709\u94fe\u63a5\uff01)\u3002\u603b\u7ebf\u3002\n..", "note_en": "Something I\u2019ve been thinking about recently is how when I\u2019ve worked on any kind of distributed system, including systems as simple as a web app with frontend and backend code, probably upwards of 80% of my time is spent on things I wouldn\u2019t need to do if it weren\u2019t distributed. I came up with the following description of why I think this kind of programming requires so much effort: Everything is fragile narrow laggy asynchronous mismatched untrusted pipes. I think every programmer who\u2019s worked on a networked system has encountered each of these issues, this is just my effort to coherently describe all of them in one place. I hope to prompt you to consider all the different hassles at once and think about how much harder/easier your job would be if you did/didn\u2019t have to deal with these things. I think this is part of why web companies like Twitter seem to have so much lower impressiveness per engineer productivity than other places like game companies or SpaceX, although there\u2019s other pieces to that puzzle. While part of the difficulty of distributed systems is inherent in physics, I think there\u2019s lots of ideas for making each part of the problem easier, many already in common use, and I\u2019ll try to mention lots of them. I hope that we as programmers continually develop more of these techniques and especially general implementations that simplify a problem. Like serialization libraries reducing the need for hand-written parsers/writers, I think there\u2019s a lot of developer time out there to save by implementing generalized solutions where we currently painstakingly reimplement common patterns. I also think all these costs mean you should try  really hard to avoid making your system distributed if you don\u2019t have to.\n I\u2019ll go over each piece in detail, but briefly, whenever we introduce a network connection we usually have to deal with something that is:\n Fragile: The network connection or the other end can have hardware failures, these have different implications but both manifest as just a timeout. Everything needs to handle failure.\n Narrow: Bandwidth is limited so we need to carefully design protocols to only send what they need.\n  Asynchronous: Especially with &gt;2 input sources (UIs count) all sorts of races and edge cases can happen and need to be thought about and handled.\n Mismatched: It\u2019s often not possible to upgrade all systems atomically, so you need to handle different ends speaking different protocol versions.\n Untrusted: If you don\u2019t want everything to be taken down by one malfunction you need to defend against invalid inputs and being overwhelmed. Sometimes you also need to defend against actual attackers.\n Pipes: Everything gets packed as bytes so you need to be able to (de)serialize your data.\n All of these things can be mostly avoided when programming things that run on one computer, that is unless you end up optimizing performance and realizing your computer is actually a distributed system of cores and some of them come back. Some domains manage to avoid some of these but I\u2019ve experienced subsets of these problems working on  web apps, self-driving cars, a text editor, and high-performance systems, they\u2019re everywhere.\n This isn\u2019t even all the problems, just things about the network. Tons of effort is also expended on things like how various bottlenecks often entail a complicated hierarchy of caches that need to be kept in sync with the underlying data store.\n One way you can avoid all this is to just not write a distributed system. There are plenty of cases you can do this and I think it\u2019s worthwhile to try way harder than some people do to pack everything into one process. However past a certain point of reliability or scale, physics means you\u2019re going to have to use multiple machines (unless you want to go the mainframe route).\n  As you connect machines or increase reliability goals, the strategy of just crashing everything when one piece crashes (what multi-threaded/multi-core systems do) becomes increasingly unviable. Hardware will fail, wireless connections drop, entire data centers have their power or network taken out by  squirrels. Some domains like customers with flaky internet also inevitably entail frequent connection failure.\n In practice you need to write code to handle the failure cases and think carefully about what they are and what to do. This gets worse when merely noting the failure would drop important data, and you need to implement redundancy of data storage or transmission. Even worse, both another machine failing and a network connection breaking become visible just as some expected network packet not arriving after \u201ctoo long\u201d, introducing not only a delay but an ambiguity that can result in  split-brain issues. Often something like TCP implements it for you but sometimes you have to implement your own heartbeating to periodically check that another system is still alive.\n Attempts to make this easier include exceptions, TCP, concensus protocols and off-the-shelf redundant databases, but no solution eliminates the problem everywhere. One of my favourite attempts is  Erlang\u2019s process linking, monitoring and supervising which offers a philosophy that attempts to coalesce all sorts of failures into one easier to handle general case.\n  Network bandwidth is often limited, especially over consumer or cellular internet. It may seem like this isn\u2019t a limitation very often because you rarely hit bandwidth limits, but that\u2019s because limited bandwidth is ingrained into everything you do. Whenever you design a distributed system you need to come up with a communication protocol that communicates on the order of what\u2019s necessary rather than on the order of the total size of your data.\n In a multi-threaded program, you might just pass a pointer to gigabytes of immutable or locked data for a thread to read what it wants from and not think anything of it. In a distributed system passing the entire memory representing your database is unthinkable and you need to spend time implementing other approaches.\n Although actually multi-core systems are a certain kind of distributed system and they employ  protocols behind the scenes to transfer only the data that\u2019s necessary, but involve many more broadcasts and round trips than would be viable with most networks. I actually think trying to apply techniques used to make multi-core machines seamless to distributed systems is a good way to think of  neat solutions that might be much more general than you\u2019d otherwise design. Similarly once you really start optimizing systems hard you notice that bandwidth inside your computer becomes a constraint too.\n Dealing with low bandwidth usually involves a message type for each query or modification to a shared data structure, and deciding when to ship over more data so local interactions are faster, or less data to avoid terrible bandwidth cases. It often goes further to various types of replicated state machine where each peer updates a model based on a replicated stream of changes, because sending the new model after every update would be too much bandwidth. Examples of this include  RTS games to  exchange  feeds. However maintaining determinism and consistency in how each peer updates its state to avoid desyncs can be tricky, especially if different peers have different languages or software versions. You also often end up implementing a separate protocol for streaming a full snapshot, because replaying events from the beginning of time when connecting isn\u2019t viable.\n Attempts to make this easier include RPC libraries just making it easier to send lots of different message types for different queries and updates rather than shipping data structures, caching libraries, and compression. Cool but less commonly used systems include things like  Replicant that ensure synchronized state machine code and update streams on many devices to make replicated state machines easier and less fraught.\n  One network round trip can\u2019t be a problematic latency or you need better networking hardware or a different problem to solve. The difficulties come from avoiding implementing your solution in a way that needs too many network round trips. This can lead to needing to implement special combo-messages that do a sequence of operations on the server instead of just providing smaller primitive messages.\n The web, with its especially large latencies, has had lots of problems of this type such as only having the font/image URLs after loading the HTML, or REST APIs that require multiple chained calls to get the IDs needed for the next. Lots of things have been built for these problems like resource inlining,  HTTP/2 server push and  GraphQL.\n A cool somewhat general solution is  Cap\u2019n Proto promise pipelining and other systems that involve essentially shipping a chain of steps to perform to the other end (like SQL). These systems essentialy send a limited type of program to perform on the server. Unfortunately you often run into the limitations of the language used, like you can\u2019t add 1 to your Cap\u2019n Proto result before passing it to a new call without a round trip. But if you make your language too powerful you can run into problems with the code you\u2019re shipping overloading the server or being too big. Just adding a multi-step message for your use case is pretty easy if you control both ends, but can be harder if the other end is a company\u2019s API for third parties, or even just owned by a different team at a big company, and those are the cases where they tend not to want to run your programs on their server. I think there\u2019s lots more avenue for exploration here in terms of new approaches to sending segments of code while re-using sent code to save bandwidth and limiting the potential for it to do damage.\n Another solution that can work in a data center is to use better networking. You can get  network  cards with  2us latencies and 100Gbps bandwidths or better, but basically only HPC, simulations and finance use them. However these just reduce the constant factor and don\u2019t save you if your approach takes O(n) round trips.\n  As soon as you have 2+ sources of events that aren\u2019t synchronized then you start worrying about race conditions. This can be multiple servers, or just a web app with both user input and a channel to the server. There\u2019s always uncommon orderings like the user clicking the \u201cSubmit\u201d button a second time before the next page loads. Sometimes you get lucky and the design of your system means that\u2019s fine, other times it\u2019s not and you either fix it to handle that case or get bug reports from customers who were billed twice. The more asynchrony the more cases you have to either think about or solve with an elegant design which precludes bad states.\n Depending on your language/framework, asynchrony can also entail a change to the way you normally write code that makes everything bloated and uglier. Lots of systems used to and still do require you to use callbacks everywhere, sometimes without even providing you closures, making your code an enormous mess. Many languages have gotten better at this with features like  async/await or coroutines with small stack like  Go, or just using threads and blocking I/O. Unfortunately some of these solutions introduce  function color problems where introducing asynchrony requires making changes throughout your codebase.\n Asynchrony edge cases are a reasonably fundamental problem, but there\u2019s lots of available patterns for solving different kinds of asynchrony. Examples include concurrency primitives like locks and barriers, protocol design ideas like  idempotency, and fancier things like  CRDTs.\n  Usually it\u2019s not possible to upgrade every component of a distributed system atomically when you want to change a protocol. This runs from communicating server clusters that must run 24/7 to users who have an old version of your web page loaded in a tab. This means for some time you\u2019ll have systems that want to talk a newer protocol version communicating with systems that only know an older protocol. This is just a problem you need to solve and there\u2019s two broad classes of common solutions with many subtypes:\n Have the new software version be able to speak both the old and new protocol version and negotiate to use the new version with upgraded peers, either by maintaining both implementations or mapping the old handlers onto the new ones.\n Use data structures that provide some degree of compatibility for free, then only upgrade your protocol in those ways. For example unrecognized fields in JSON objects are usually ignored so can be used for new functionality when recognized. Migrations can usually add new columns to a database table without it breaking queries. Then you usually go to great lengths to shoehorn every change into being this type of compatible.\n The problem with both these cases is the first steps usually accumulate technical debt in the form of code paths to handle cases (for example of missing fields) that will never come up once all peers are upgraded past the protocol change. This usually entails multi-stage rollouts, for example introduce a new field as optional, roll out the new version everywhere, change the field to be mandatory now that all clients send it, do another rollout. I\u2019ve definitely spent a lot of time planning multi-stage rollouts when I\u2019ve wanted to change protocols used by multiple systems without leaving a mess.\n There\u2019s lots of things that help with both of these approaches, both serialization systems that provide lots of compatible upgrade paths like  Protobufs, to various  patterns for deserializing/upgrading old type versions.\n  Not only can your data fail to arrive but your system can recieve data that might actively harm it. Systems have bugs which cause invalid messages to be sent, so inputs need to be carefully validated and errors returned, not only at the serialization level but the business logic level. Bugs or new loads can cause systems to send messages faster than they can be handled, necessitating backpressure and limits. You may even have to defend against attackers who actively try and subvert your system by sending messages that would never be sent by your usual counterparties and  intelligently seek out edge cases.\n Here too we have lots of patterns including rate limits, field validation logic and channels with built in backpressure. On the security side we also have a field of things like encryption, certificates and fuzzing. We\u2019ve also gotten better at being general here as we\u2019ve reduced prevalence of manual patterns like ensuring we always escape interpolated strings in SQL and HTML, with more general patterns like  ? query parameters and templating systems which always apply escaping.\n  Last and mostly least, everything has to be a stream of bytes or packets of bytes. This means you need to take your nice data structures that your language makes easy to manipulate and pack them into a different form from their in-memory representation in order to send on the wire. Luckily except in very few places easy  serialization/ RPC libraries have made this pretty easy, if occasionally somewhat slow. You can also sometimes use methods that allow you to pick out exactly the parts you want from the byte buffers without transforming it to a different representation, perhaps by casting your buffer pointer to a C structure pointer (when that\u2019s even close to safe-ish), or using something like  Cap\u2019n Proto that can generate accessors.\n This is probably the one I\u2019ve spent the least time fighting, but one case I can remember was when I wanted to send a large data structure, but the available serialization system could only serialize it all at once rather than streaming it packet by packet as the socket could accept it, and I didn\u2019t want to block my server for a long time doing the entire thing, creating tail latency. I ended up choosing a different design, but I could also have written custom code to break my data structure up into chunks and send it a little bit at a time.\n  I suspect many responses to this post will be of the form \u201cActually {some/all of these problems} are trivial if you just {do some thing that isn\u2019t universally applicable, is time consuming or has its own issues, possibly something I mentioned, if so probably using Erlang} and the real problem is that other people are bad at programming unlike people in the good old days\u201d. There are lots of things that help, and there is a skill component in knowing about good solutions, choosing the right ones, and implementing them effectively. However these are still hard problems and people have to make difficult real tradeoffs because we haven\u2019t solved them effectively enough. Maybe you would have taken a different side of the tradeoff but people make these technology decisions for real reasons and we should strive to reduce the costs, as well as improving decisions over which costs we accept.\n I just can\u2019t use Erlang for most projects I do because they require either extremely low latency, integration with some part of a non-Erlang ecosystem, or they\u2019re too computationally intensive (yes I know about  NIFs). This means there\u2019s ample opportunity for productivity improvements just by bringing solutions from one domain and implementing them in another domain or making them faster! I love seeing  efforts to  bring Erlang\u2019s benefits to  more  areas. And even Erlang doesn\u2019t solve all of these problems to the extent I believe it\u2019s possible to one day address them.\n I think one of the real biggest hammers you can take to these problems is just to try  really hard to avoid writing a distributed system in the first place. One of my goals for this post is to inspire people to try to develop more general solutions instead of having to repeatedly implement specific patterns, but my other goal is to try and put all the costs in your face at once and say  are you sure adding that separate networked system will really make your job easier? Sometimes a distributed system is unavoidable, such as if you want extreme availability or computing power, but other times it\u2019s totally avoidable. To pick specific examples:\n I think people should be more willing to try and write performance-sensitive code as a (potentially multi-threaded) process on one machine in a fast language if it\u2019ll fit rather than try and distribute a slower implementation over multiple machines. I acknowledge that this takes time and effort to learn how to do and optimize, but it\u2019ll pay off in a simpler system. In particular I think people should be more aggressive about trying to use multi-threading on a really big computer when possible. I personally find multi-threaded programming in  Rust way easier than parallelizing with multiple processes when it\u2019s viable. Some problems like asynchrony are similar but others like serialization, latency and bandwidth largely go away except at performance levels way higher than you\u2019d probably get out of a hypothetical distributed version.\n I think people should be more willing to use C FFI to bind to libraries in other languages rather than putting them in a separate networked service ( example picking on users of my own library, although I don\u2019t actually know what their constraints were). Yes you have to learn how to do C FFI and deal with unsafety, but I\u2019d take that trade to avoid the network service.\n There are reasons people choose to split things into separate services other than availability and parallelism. For example ability to deploy updates quickly without coordinating with another team, fast CI, using a different language, isolation. We should build more alternatives that don\u2019t involve separate systems, like tools for using auto-updating hot-reloaded dynamically linked libraries with sandboxing instead of microservices (eliminating \u201cnarrow\u201d, \u201claggy\u201d and \u201casynchronous\u201d). I\u2019m pretty sure at least one instance of hot-reloading dylib updates pushed over the network exists (I\u2019d appreciate links!) bu\n......", "posttime": "2020-05-18 00:04:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ba1\u9053,narrow,\u9700\u8981", "title": "\u8106\u5f31\u3001\u72ed\u7a84\u3001\u6ede\u540e\u7684\u5f02\u6b65\u4e0d\u5339\u914d\u7ba1\u9053\u4f1a\u627c\u6740\u751f\u4ea7\u529b", "title_en": "Fragile narrow laggy asynchronous mismatched pipes kill productivity", "transed": 1, "url": "https://thume.ca/2020/05/17/pipes-kill-productivity/", "via": "", "real_tags": ["\u7ba1\u9053", "narrow", "\u9700\u8981"]}, {"category": "", "categoryclass": "", "imagename": "c8ce40af901c64c85bdf410cc6032ca1.jpg", "infoid": 1002533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u5468\u6211\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8eDeno\u7684\u6587\u7ae0\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528Deno\u548cPreact\u521b\u5efa\u804a\u5929\u5e94\u7528\u7a0b\u5e8f\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u51fa\u73b0\u4e86\u8bb8\u591a\u7591\u95ee\u3002\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u90fd\u662f\u5173\u4e8e\u5982\u4f55\u505a\u6211\u4eec\u5728Node\u4e2d\u505a\u8fc7\u7684\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u662f\u5173\u4e8e\u65b0\u7684Deno\u751f\u6001\u7cfb\u7edf\u3002\n\u6211\u8bd5\u7740\u6536\u96c6\u4e86Node\u4e2d\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u4e3b\u9898\uff0c\u5e76\u5bfb\u627e\u5b83\u4eec\u4e0eDeno\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u9996\u5148\uff0c\u6211\u60f3\u8bf4\u660e\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u5f53\u524d\u7684Node.js\u6a21\u5757\u3002\u6ca1\u6709\u5fc5\u8981\u4e3a\u6240\u6709\u4e8b\u60c5\u5bfb\u627e\u66ff\u4ee3\u65b9\u6848\uff0c\u56e0\u4e3a\u8bb8\u591a\u6a21\u5757\u90fd\u662f\u53ef\u91cd\u7528\u7684\u3002\u60a8\u53ef\u4ee5\u8bbf\u95eepika.dev\u6765\u67e5\u627e\u8981\u5728Deno\u4e2d\u4f7f\u7528\u7684\u6a21\u5757\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ba9\u6211\u4eec\u4ece\u4e0b\u9762\u7684\u6e05\u5355\u5f00\u59cb\u5427\uff1a\n\u6709\u4e86Node.js\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Electron\u521b\u5efa\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3002\u7535\u5b50\u4f7f\u7528Chromium\u4f5c\u4e3a\u754c\u9762\u6765\u8fd0\u884cWeb\u73af\u5883\u3002\u4f46\u662f\uff0c\u6211\u4eec\u80fd\u628a\u7535\u5b50\u548c\u5fb7\u8bfa\u4e00\u8d77\u7528\u5417\uff1f\u8fd8\u6709\u5176\u4ed6\u9009\u62e9\u5417\uff1f\n\u55ef\uff0c\u73b0\u5728\u7535\u5b50\u8fd8\u8fdc\u8fdc\u4e0d\u80fd\u5728\u5fb7\u8bfa\u7684\u7edf\u6cbb\u4e0b\u88ab\u5904\u51b3\u3002\u6211\u4eec\u5fc5\u987b\u5bfb\u627e\u66ff\u4ee3\u65b9\u6848\u3002\u56e0\u4e3aDeno\u662f\u7528Rust\u5236\u4f5c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528web-view rust\u7ed1\u5b9a\u5728Deno\u4e2d\u8fd0\u884cDestkop\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u539f\u751f\u64cd\u4f5c\u7cfb\u7edfWebview\u6765\u8fd0\u884c\u4efb\u610f\u591a\u4e2aWebview\u3002\n\u4ece&#34\uff1bhttps://deno.land/x/webview/mod.ts&#34\uff1b\uff1bconst contentType=&#39\uff1btext/html&#39\uff1bconst sharedOptions={Width\uff1a400\uff0cHeight\uff1a200\uff0cResizable\uff1aTRUE\uff0cDEBUG\uff1aTRUE\uff0cNETWORM\uff1aFALSE\uff0c}\uff1b\u5bfc\u5165{Webview}\uff1bconst webview 1=new Webview({title\uff1a&#34\uff1bMultiple Deno_Webview Example&#34\uff1b\uff0curl\uff1a`data\uff1a${contenttype}\uff0c&lt\uff1bhtml&gt\uff1b&lt\uff1bbody&gt\uff1b&lt\uff1bh1&gt\uff1b1&lt\uff1b/h1&gt\uff1b&lt\uff1b/body&gt\uff1b&lt\uff1b/html&gt\uff1b`\uff0c.\u3002sharedOptions\uff0c})\uff1bconst webview2=new WebView({title\uff1a&#34\uff1bMultiple Deno_webview Example&#34\uff1b\uff0curl\uff1a`data\uff1a${contentType}\uff0c&lt\uff1bhtml&gt\uff1b&lt\uff1bbody&gt\uff1b&lt\uff1bh1&gt\uff1b2&lt\uff1b/h1&gt\uff1b&lt\uff1b/body&gt\uff1b&lt\uff1b/html&gt\uff1b`\uff0c.\u3002\u5171\u4eab\u9009\u9879\uff0c})\uff1b\u7b49\u5f85\u627f\u8bfa\u3002\u5168\u90e8([webview1.\u3002run()\uff0cwebview2\u3002run()])\uff1b\nForeve\u548cPM2\u662f\u7528\u4e8e\u786e\u4fdd\u7ed9\u5b9a\u811a\u672c\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fde\u7eed\u8fd0\u884c\u7684CLI\u5de5\u5177\u3002\u4e0eForever\u4e0d\u540c\u7684\u662f\uff0cPM2\u66f4\u5b8c\u6574\uff0c\u5e76\u4e14\u8fd8\u5145\u5f53\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4e24\u8005\u5728Node\u4e2d\u90fd\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728Deno\u4e2d\u4f7f\u7528\u5b83\u4eec\u5417\uff1f\n\u6c38\u8fdc\u4ec5\u7528\u4e8e\u8282\u70b9\uff0c\u56e0\u6b64\u4f7f\u7528\u5b83\u662f\u4e0d\u53ef\u884c\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528PM2\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u975e\u8282\u70b9\u811a\u672c\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5c06\u5176\u7528\u4e8eDeno\u3002\nExpress\u548cKoa\u662f\u6700\u8457\u540d\u7684Node\u6846\u67b6\u3002\u5b83\u4eec\u4ee5\u5176\u5065\u58ee\u7684\u8def\u7531\u7cfb\u7edf\u548cHTTP\u52a9\u624b(\u91cd\u5b9a\u5411\u3001\u7f13\u5b58\u7b49)\u800c\u95fb\u540d\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5fb7\u8bfa\u4f7f\u7528\u5b83\u4eec\u5417\uff1f\u7b54\u6848\u4e0d\u662f..\u3002\u4f46\u4e5f\u6709\u4e00\u4e9b\u66ff\u4ee3\u65b9\u6848\u3002\nDeno\u81ea\u5df1\u7684STD\u5e93\u5df2\u7ecf\u6db5\u76d6\u4e86Express\u6216Koa\u63d0\u4f9b\u7684\u8bb8\u591a\u9700\u6c42\u3002https://deno.land/std/http/.\u3002\n\u4ece&#34\uff1bhttps://deno.land/std/http/server.ts&#34\uff1b\u5bfc\u5165{getCookie}\uff1b\u4ece&#34\uff1bhttps://deno.land/std/http/cookie.ts&#34\uff1b\uff1blet Request=new ServerRequest()\uff1b\u8bf7\u6c42\u5bfc\u5165{serverRequest}\u3002Headers=\u65b0\u7684Header()\uff1b\u8bf7\u6c42\u3002\u6807\u9898\u3002\u8bbe\u7f6e(&#34\uff1bCookie&#34\uff1b\uff0c&#34\uff1bFull=of\uff1bTasty=\u5de7\u514b\u529b&#34\uff1b)\uff1bconst cookies=getCookies(Request)\uff1b\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(&#34\uff1bcookies\uff1a&#34\uff1b\uff0ccookies)\uff1b\n\u7136\u800c\uff0c\u7533\u62a5\u8def\u7ebf\u7684\u65b9\u5f0f\u5e76\u4e0d\u662f\u5f88\u6709\u5438\u5f15\u529b\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u66f4\u591a\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u4ece&#34\uff1bhttps://deno.land/x/oak/mod.ts&#34\uff1b\uff1bconst app=new Application()\uff1bapp\u5bfc\u5165{\u5e94\u7528\u7a0b\u5e8f\uff0c}\u3002\u4f7f\u7528((Ctx)=&gt\uff1b{ctx.\u3002\u56de\u5e94\u3002Body=&#34\uff1bHello World\uff01&#34\uff1b\uff1b})\uff1b\u7b49\u5f85APP\u3002\u76d1\u542c({port\uff1a8000})\uff1b\n\u4ece&#34\uff1bhttps://deno.land/x/abc/mod.ts&#34\uff1b\uff1bconst app=new Application()\uff1bapp\u5bfc\u5165{Application}\u3002\u9759\u6001(&#34\uff1b/static&34\uff1b\uff0c&#34\uff1b\u8d44\u4ea7&#34\uff1b)\uff1b\u5e94\u7528\u7a0b\u5e8f\u3002GET(&#34\uff1b/hello&#34\uff1b\uff0c(C)=&gt\uff1b&#34\uff1bHello\uff01&#34\uff1b)\u3002\u542f\u52a8({port\uff1a8080})\uff1b\n\u5c06*\u4f5c\u4e3aExp\u4ece&#34\uff1bhttps://raw.githubusercontent.com/NMathar/deno-express/master/mod.ts&#34\uff1b\uff1bconst port=3000\uff1bconst app=new exp\u5bfc\u5165\u3002app()\uff1bapp\u3002\u4f7f\u7528(\u4f8b\u5982\u3002static_(&#34\uff1b./public&#34\uff1b))\uff1b\u5e94\u7528\u3002\u4f7f\u7528(\u4f8b\u5982\u3002bodyParser\u3002json())\uff1bapp.\u3002get(&#34\uff1b/api/todos&#34\uff1b\uff0casync(req\uff0cres)=&gt\uff1b{\u7b49\u5f85res.\u3002json([{name\uff1a&#34\uff1b\u4e70\u70b9\u725b\u5976&#34\uff1b}])\uff1b})\uff1bconst server=\u7b49\u5f85APP\u3002\u76d1\u542c(\u7aef\u53e3)\uff1b\u63a7\u5236\u53f0\u3002log(`app\u4fa6\u542c\u7aef\u53e3${server.\u3002port}`)\uff1b\nMongoDB\u662f\u4e00\u4e2a\u5177\u6709\u5de8\u5927\u4f38\u7f29\u6027\u548c\u7075\u6d3b\u6027\u7684\u6587\u6863\u6570\u636e\u5e93\u3002\u5728JavaScript\u751f\u6001\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u6709\u8bb8\u591a\u50cfMean\u6216MERN\u8fd9\u6837\u7684\u5806\u6808\u4f7f\u7528\u5b83\u3002\u5b83\u5f88\u53d7\u6b22\u8fce\u3002\n\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06MongoDB\u4e0eDeno\u4e00\u8d77\u4f7f\u7528\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b64\u9a71\u52a8\u7a0b\u5e8f\uff1ahttps://github.com/manyuanrong/deno_mongo.\u3002\n\u4ece&#34\uff1bhttps://deno.land/x/mongo@v0.6.0/mod.ts&#34\uff1b\uff1b//\u521d\u59cb\u5316\u63d2\u4ef6\u7b49\u5f85init()\uff1bconst client=new mongoClient()\uff1b\u5ba2\u6237\u7aef\u5bfc\u5165{init\uff0cmongoClient}\u3002connectWithUri(&#34\uff1bmongodb\uff1a//localhost\uff1a27017&#34\uff1b)\uff1bconst db=client\u3002\u6570\u636e\u5e93(&#34\uff1btest&#34\uff1b)\uff1b\u5e38\u91cf\u7528\u6237=db.\u3002Collection(&#34\uff1bUsers&#34\uff1b)\uff1b//INSERT\u5e38\u91cfINSERTID=\u7b49\u5f85\u7528\u6237\u3002insert One({username\uff1a&#34\uff1buser1&#34\uff1b\uff0cpassword\uff1a&#34\uff1bpass1&#34\uff1b})\uff1b//findOne\u5e38\u91cfuser1=\u7b49\u5f85\u7528\u6237\u3002findOne({_id\uff1ainsert tId})\uff1b//\u67e5\u627e\u5e38\u91cf\u7528\u6237=\u7b49\u5f85\u7528\u6237\u3002find({username\uff1a{$ne\uff1anull}})\uff1b//\u805a\u5408\u5e38\u91cf\u6587\u6863=\u7b49\u5f85\u7528\u6237\u3002Aggregation([{$Match\uff1a{username\uff1a&#34\uff1bMany&#34\uff1b}}\uff0c{$group\uff1a{_id\uff1a&#34\uff1b$username&#34\uff1b\uff0c\u603b\u8ba1\uff1a{$sum\uff1a1}])\uff1b//updateOne const{matchedCount\uff0cmodfiedCount\uff0cupsertedId}=\u7b49\u5f85\u7528\u6237\u3002updateOne(username\uff1a{$ne\uff1anull}\uff0c{$set\uff1a{username\uff1a&#34\uff1busername&#34\uff1b})\uff1b//delete eOne\u5e38\u91cfdelete eCount=\u7b49\u5f85\u7528\u6237\u3002delete One({_id\uff1ainsert tId})\uff1b\n\u4ece&#34\uff1bhttps://deno.land/x/postgres/mod.ts&#34\uff1b\uff1bconst client=new client({User\uff1a&#34\uff1buser&#34\uff1b\uff0cdatabase\uff1a&#34\uff1btest&#34\uff1b\uff0chostname\uff1a&#34\uff1blocalhost&#34\uff1b\uff0cport\uff1a5432})\uff1b\u5bfc\u5165{Client}\uff1b\u7b49\u5f85\u5ba2\u6237\u7aef\u3002connect()\uff1bconst result=\u7b49\u5f85\u5ba2\u6237\u7aef\u3002\u67e5\u8be2(&#34\uff1bSELECT*FROM People\uff1b&#34\uff1b)\uff1b\u63a7\u5236\u53f0\u3002\u65e5\u5fd7(\u7ed3\u679c\u3002\u884c)\uff1b\u7b49\u5f85\u5ba2\u6237\u7aef\u3002end()\uff1b\n\u4ece&#34\uff1bhttps://deno.land/x/mysql/mod.ts&#34\uff1b\uff1bconst client=\u5bfc\u5165{Client}\u7b49\u5f85\u65b0\u5ba2\u6237\u7aef()\u3002connect({hostname\uff1a&#34\uff1b127.0.0.1&#34\uff1b\uff0cusername\uff1a&#34\uff1broot&#34\uff1b\uff0cdb\uff1a&#34\uff1bdbname&#34\uff1b\uff0cpoolSize\uff1a3\uff0c//\u8fde\u63a5\u9650\u5236\u5bc6\u7801\uff1a&#34\uff1bpassword&#34\uff1b\uff0c})\uff1b\u8ba9result=\u7b49\u5f85\u5ba2\u6237\u7aef\u3002EXECUTE(`INSERT INTO USERS(Name)VALUES(\uff1f)`\uff0c[&#34\uff1baralroca&#34\uff1b\uff0c])\uff1bconsole\u3002log(Result)\uff1b//{affectedRows\uff1a1\uff0clastInsertId\uff1a1}\u3002\n\u4ece&#34\uff1bhttps://denopkg.com/keroxp/deno-redis/mod.ts&#34\uff1b\uff1bconst redis=\u7b49\u5f85\u8fde\u63a5({\u4e3b\u673a\u540d\uff1a&#34\uff1b127.0.0.1&#34\uff1b\uff0c\u7aef\u53e3\uff1a6379})\u5bfc\u5165{CONNECT}\uff1bconst ok=\u7b49\u5f85redis\u3002set(&#34\uff1bExample&#34\uff1b\uff0c&#34\uff1bThis is a Example&#34\uff1b)\uff1bConst Example=Await redis\u3002GET(&#34\uff1b\u793a\u4f8b&#34\uff1b)\uff1b\nNodemon\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u7528\u4e8e\u76d1\u89c6\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u66f4\u6539\uff0c\u81ea\u52a8\u91cd\u542f\u670d\u52a1\u5668\u3002\u8fd9\u4f7f\u5f97\u8282\u70b9\u5f00\u53d1\u66f4\u52a0\u6109\u5feb\uff0c\u65e0\u9700\u624b\u52a8\u505c\u6b62\u548c\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\u5373\u53ef\u770b\u5230\u5e94\u7528\u7684\u66f4\u6539\u3002\u53ef\u4ee5\u5728\u5fb7\u8bfa\u4f7f\u7528\u5417\uff1f\n\u5728Node.js\u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u6d4b\u8bd5\u8005\u6709\u5f88\u591a\u9009\u62e9\u3002\u7136\u800c\uff0c\u6ca1\u6709\u4e00\u79cd\u5b98\u65b9\u65b9\u6cd5\u53ef\u4ee5\u6d4b\u8bd5Node.js\u4ee3\u7801\u3002\nDeno\u7684\u4f18\u70b9\u4e4b\u4e00\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06ESmodule\u4e0eTypeScript\u4e00\u8d77\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981webpack\u3001Parcel\u6216Rollup\u7b49\u6346\u7ed1\u5668\u3002\n\u7136\u800c\uff0c\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\uff0c\u5982\u679c\u7ed9\u5b9a\u4e00\u68f5\u6587\u4ef6\u6811\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4ee5\u4fbf\u5728Web\u4e0a\u8fd0\u884c\u5b83\u3002\n\u55ef\uff0c\u662f\u7684\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Deno\u7684CLI\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u7b2c\u4e09\u65b9\u6346\u7ed1\u5668\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u66f4\u6f02\u4eae\u5df2\u7ecf\u5728JavaScript\u751f\u6001\u7cfb\u7edf\u4e2d\u5e7f\u4e3a\u4eba\u77e5\uff0c\u56e0\u4e3a\u6709\u4e86\u5b83\uff0c\u60a8\u5c31\u4e0d\u5fc5\u62c5\u5fc3\u683c\u5f0f\u5316\u6587\u4ef6\u4e86\u3002\n\u4e8b\u5b9e\u662f\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u5728Deno\u4e0a\u4f7f\u7528\uff0c\u4f46\u5b83\u5931\u53bb\u4e86\u610f\u4e49\uff0c\u56e0\u4e3aDeno\u6709\u81ea\u5df1\u7684\u683c\u5f0f\u5316\u7a0b\u5e8f\u3002\n\u4f7f\u7528Deno\u65f6\uff0cPackage.json\u5c06\u4e0d\u590d\u5b58\u5728\u3002\u6211\u975e\u5e38\u6000\u5ff5\u7684\u4e00\u4ef6\u4e8b\u662f\u5728Package.json\u4e2d\u58f0\u660e\u7684\u811a\u672c\u3002\n\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528Makefile\u5e76\u4f7f\u7528make\u6267\u884c\u5b83\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u9519\u8fc7\u4e86NPM\u8bed\u6cd5\uff0c\u53ef\u4ee5\u4e3aDeno\u63d0\u4f9b\u4e00\u4e2aNPM\u98ce\u683c\u7684\u811a\u672c\u8fd0\u884c\u5668\uff1a\nNVM\u662f\u7528\u4e8e\u7ba1\u7406\u591a\u4e2a\u6d3b\u52a8\u8282\u70b9\u7248\u672c\u7684CLI\uff0c\u53ef\u6839\u636e\u60a8\u7684\u9879\u76ee\u8f7b\u677e\u5347\u7ea7\u6216\u964d\u7ea7\u7248\u672c\u3002\n\u8fd1\u5e74\u6765\uff0cNPX\u5728\u6267\u884cNPM\u5305\u65f6\u53d8\u5f97\u975e\u5e38\u6d41\u884c\uff0c\u800c\u4e0d\u5fc5\u5b89\u88c5\u5b83\u4eec\u3002\u73b0\u5728\uff0c\u8bb8\u591a\u9879\u76ee\u4e0d\u4f1a\u5b58\u5728\u4e8eNPM\u4e2d\uff0c\u56e0\u4e3aDeno\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u751f\u6001\u7cfb\u7edf\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u6267\u884cDENO\u6a21\u5757\uff0c\u800c\u4e0d\u5fc5\u4f7f\u7528Deno Install https://url-of-module.ts\uff1f\u5b89\u88c5\u5b83\u4eec\n\u4e0e\u6211\u4eec\u8fd0\u884c\u9879\u76ee\u7684\u65b9\u5f0f\u76f8\u540c\uff0c\u6211\u4eec\u5c06\u6a21\u5757\u7684URL\u653e\u5165\u6a21\u5757\u7684URL\u4e2d\uff0c\u800c\u4e0d\u662f\u653e\u5165\u6587\u4ef6\uff1a\n\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u8bb0\u4f4f\u6a21\u5757\u7684\u540d\u79f0\uff0c\u8fd8\u8981\u8bb0\u4f4f\u6574\u4e2aURL\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u4f7f\u7528\u66f4\u52a0\u56f0\u96be\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4efb\u4f55\u6587\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u50cfnpx\u8fd9\u6837\u5728Package.json\u4e2d\u6307\u5b9a\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6587\u4ef6\u3002\n\u4ece\u6d77\u5fb7/\u963f\u5c14\u5351\u65af\u5c71-\u5fb7\u8bfa\u51fa\u53d1\uff1a1.0.0\u53f7\u6e2f\u53e3\u3002WORKDIR/APP\u7528\u6237\u62d2\u7edd\u590d\u5236\u90e8\u95e8\u3002\u8fd0\u884cdeno cache dess.ts#\u7f13\u5b58deps add\u3002\u3002\u8fd0\u884cDeno cache main.ts#main\u5165\u53e3\u70b9\u3002CMD[&#34\uff1b--Allow-Net&#34\uff1b\uff0c&#34\uff1bmain.ts&#34\uff1b]\u3002\n\u8981\u5c06Deno\u7528\u4f5clambda\uff0c\u5728Deno STD\u5e93\u4e2d\u6709\u4e00\u4e2a\u6a21\u5757\u3002https://deno.land/x/lambda.\u3002\n\u4ece&#34\uff1bhttps://deno.land/x/lambda/mod.ts&#34\uff1b\uff1b\u5bfc\u51fa\u5f02\u6b65\u51fd\u6570\u5904\u7406\u7a0b\u5e8f(Event\uff1aAPIGatewayProxyEvent\uff0cContext\uff1aContext)\u5bfc\u5165{APIGatewayProxyEvent\uff0cAPIGatewayProxyResult\uff0cContext}\uff1aPromise&lt\uff1bAPIGatewayProxyResult&gt\uff1b{Return{Body\uff1a`\u6b22\u8fce\u4f7f\u7528Deno${deno.\u3002\u7248\u672c\u3002Deno}\ud83e\udd95`\uff0c\u6807\u9898\uff1a{&#34\uff1bContent-Type&#34\uff1b\uff1a&#34\uff1bText/HTML\uff1bCharset=utf8&#34\uff1b}\uff0cstatusCode\uff1a200}\uff1b}\u3002\n\u6211\u786e\u4fe1\u6211\u5fd8\u8bb0\u4e86\u4e00\u4e9bNode\u4e3b\u9898\u548c\u5b83\u4eec\u7684Deno\u66ff\u4ee3\u65b9\u6848\uff0c\u5982\u679c\u6211\u9519\u8fc7\u4e86\u4ec0\u4e48\u60a8\u60f3\u8ba9\u6211\u89e3\u91ca\u7684\u5730\u65b9\uff0c\u8bf7\u544a\u8bc9\u6211\u3002\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e2e\u52a9\u4f60\u548c\u5fb7\u8bfa\u6253\u7834\u50f5\u5c40\u3002", "note_en": "Last week I published an article about Deno, and how to create a  Chat app with Deno and Preact. Since then, many doubts have arisen. Mostly of them are about how to do the same thing we did in Node, but with the new Deno ecosystem.\n I&#39;ve tried to collect some of the most used topics in Node, and looked for their alternative with Deno. First of all, I would like to make it clear that we can use many of the current Node.js modules. There is no need to look for an alternative for everything, as many modules are reusable. You can visit  pika.dev to look for modules to use in Deno. That said, let&#39;s start with the list:\n    With Node.js we can create desktop applications using  Electron. Electron uses Chromium as interface to run a web environment. But, can we use Electron with Deno? Are there alternatives?\n  Well, right now Electron is far from being able to be executed under Deno. We must look for alternatives. Since Deno is made with Rust, we can use  web-view rust bindings to run Destkop application in Deno.\n This way, we can use the native OS webview to run as many webviews as we want.\n  import  {  WebView  }  from  &#34; https://deno.land/x/webview/mod.ts &#34; ; const  contentType  =  &#39; text/html &#39; const  sharedOptions  =  {  width :  400 ,  height :  200 ,  resizable :  true ,  debug :  true ,  frameless :  false , }; const  webview1  =  new  WebView ({  title :  &#34; Multiple deno_webview example &#34; ,  url :  `data: ${ contentType } , &lt;html&gt; &lt;body&gt; &lt;h1&gt;1&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; ` ,  ... sharedOptions , }); const  webview2  =  new  WebView ({  title :  &#34; Multiple deno_webview example &#34; ,  url :  `data: ${ contentType } , &lt;html&gt; &lt;body&gt; &lt;h1&gt;2&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; ` ,  ... sharedOptions , }); await  Promise . all ([ webview1 . run (),  webview2 . run ()]);\n   Forever and  PM2 are CLI tools for ensuring that a given script runs continuously as a daemon. Unlike Forever, PM2 is more complete and also serves as load balancer. Both are very useful in Node, but can we use them in Deno?\n Forever is intended for Node only, so using it is not feasible. On the other hand, with PM2 we can run non-node scripts, so we could still use it for Deno.\n        Express and  Koa are the best known Node frameworks. They&#39;re known for their robust routing system and their HTTP helpers (redirection, caching, etc). Can we use them in Deno? The answer is not... But there are some alternatives.\n   Deno&#39;s own STD library already covers many of the needs provided by Express or Koa.  https://deno.land/std/http/.\n import  {  ServerRequest  }  from  &#34; https://deno.land/std/http/server.ts &#34; ; import  {  getCookies  }  from  &#34; https://deno.land/std/http/cookie.ts &#34; ; let  request  =  new  ServerRequest (); request . headers  =  new  Headers (); request . headers . set ( &#34; Cookie &#34; ,  &#34; full=of; tasty=chocolate &#34; ); const  cookies  =  getCookies ( request ); console . log ( &#34; cookies: &#34; ,  cookies );\n However, the way to declare routes is not very attractive. So let&#39;s look at some more alternatives.\n   import  {  Application ,  }  from  &#34; https://deno.land/x/oak/mod.ts &#34; ; const  app  =  new  Application (); app . use (( ctx )  =&gt;  {  ctx . response . body  =  &#34; Hello World! &#34; ; }); await  app . listen ({  port :  8000  });\n   import  {  Application  }  from  &#34; https://deno.land/x/abc/mod.ts &#34; ; const  app  =  new  Application (); app . static ( &#34; /static &#34; ,  &#34; assets &#34; ); app . get ( &#34; /hello &#34; ,  ( c )  =&gt;  &#34; Hello! &#34; )  . start ({  port :  8080  });\n   import  *  as  exp  from  &#34; https://raw.githubusercontent.com/NMathar/deno-express/master/mod.ts &#34; ; const  port  =  3000 ; const  app  =  new  exp . App (); app . use ( exp . static_ ( &#34; ./public &#34; )); app . use ( exp . bodyParser . json ()); app . get ( &#34; /api/todos &#34; ,  async  ( req ,  res )  =&gt;  {  await  res . json ([{  name :  &#34; Buy some milk &#34;  }]); }); const  server  =  await  app . listen ( port ); console . log ( `app listening on port  ${ server . port } ` );\n  MongoDB is a document database with a huge scability and flexibility. In the JavaScript ecosystem has been widely used, with many stacks like MEAN or MERN that use it. It&#39;s very popular.\n  So yes, we can use MongoDB with Deno. To do this, we can use this driver:  https://github.com/manyuanrong/deno_mongo.\n import  {  init ,  MongoClient  }  from  &#34; https://deno.land/x/mongo@v0.6.0/mod.ts &#34; ; // Initialize the plugin await  init (); const  client  =  new  MongoClient (); client . connectWithUri ( &#34; mongodb://localhost:27017 &#34; ); const  db  =  client . database ( &#34; test &#34; ); const  users  =  db . collection ( &#34; users &#34; ); // insert const  insertId  =  await  users . insertOne ({  username :  &#34; user1 &#34; ,  password :  &#34; pass1 &#34; }); // findOne const  user1  =  await  users . findOne ({  _id :  insertId  }); // find const  users  =  await  users . find ({  username :  {  $ne :  null  }  }); // aggregation const  docs  =  await  users . aggregation ([  {  $match :  {  username :  &#34; many &#34;  }  },  {  $group :  {  _id :  &#34; $username &#34; ,  total :  {  $sum :  1  }  }  } ]); // updateOne const  {  matchedCount ,  modifiedCount ,  upsertedId  }  =  await  users . updateOne (  username :  {  $ne :  null  },  {  $set :  {  username :  &#34; USERNAME &#34;  }  } ); // deleteOne const  deleteCount  =  await  users . deleteOne ({  _id :  insertId  });\n     import  {  Client  }  from  &#34; https://deno.land/x/postgres/mod.ts &#34; ; const  client  =  new  Client ({  user :  &#34; user &#34; ,  database :  &#34; test &#34; ,  hostname :  &#34; localhost &#34; ,  port :  5432 }); await  client . connect (); const  result  =  await  client . query ( &#34; SELECT * FROM people; &#34; ); console . log ( result . rows ); await  client . end ();\n     import  {  Client  }  from  &#34; https://deno.land/x/mysql/mod.ts &#34; ; const  client  =  await  new  Client (). connect ({  hostname :  &#34; 127.0.0.1 &#34; ,  username :  &#34; root &#34; ,  db :  &#34; dbname &#34; ,  poolSize :  3 ,  // connection limit  password :  &#34; password &#34; , }); let  result  =  await  client . execute ( `INSERT INTO users(name) values(?)` ,  [  &#34; aralroca &#34; , ]); console . log ( result ); // { affectedRows: 1, lastInsertId: 1 }\n     import  {  connect  }  from  &#34; https://denopkg.com/keroxp/deno-redis/mod.ts &#34; ; const  redis  =  await  connect ({  hostname :  &#34; 127.0.0.1 &#34; ,  port :  6379 }); const  ok  =  await  redis . set ( &#34; example &#34; ,  &#34; this is an example &#34; ); const  example  =  await  redis . get ( &#34; example &#34; );\n   Nodemon is used in development environment to monitor any changes in your files, automatically restarting the server. This makes node development much more enjoyable, without having to manually stop and restart the server to see the applied changes. Can it be used in Deno?\n       In the Node.js ecosystem there are a lot of alternatives for test runners. However, there isn&#39;t one official way to test the Node.js code.\n        One of the strengths of Deno is that we can use ESmodules with TypeScript without the need for a bundler such as  Webpack,  Parcel or  Rollup.\n However, probably you wonder if given a tree of files, we can make a bundle to put everything in one file to run it on the web.\n Well, it&#39;s possible, yes. We can do it with Deno&#39;s CLI. Thus, there&#39;s no need for a third-party bundler.\n      In the last few years  Prettier has become quite well known within the JavaScript ecosystem because with it you don&#39;t have to worry about formatting the files.\n And the truth is, it can still be used on Deno but it loses its meaning, because Deno has its own formatter.\n     With Deno, the  package.json no longer exists. One of the things I really miss are the scripts that were declared in the  package.json.\n A simple solution would be to use a  makefile and execute it with  make. However, if you miss the npm syntax, there is an npm-style script runner for Deno:\n         Nvm is a CLI to manage multiple active Node versions, to easy upgrade or downgrade versions depending on your projects.\n     Npx in recent years has become very popular to execute npm packages without having to install them. Now many projects won&#39;t exist within npm because Deno is a separate ecosystem. So, how can we execute Deno modules without having to install them with  deno install https://url-of-module.ts?\n In the same way that we run our project, instead of a file we put the URL of the module:\n  As you can see, not only we have to remember the name of the module, but the whole URL, which makes it a little more difficult to use. On the other hand it gives a lot more flexibility as we can run any file, not just what&#39;s specified as a binary in the  package.json like  npx.\n    FROM  hayd/alpine-deno:1.0.0 EXPOSE  1993 # Port. WORKDIR  /app USER  deno COPY  deps.ts . RUN deno cache deps.ts  # Cache the deps ADD  . . RUN deno cache main.ts  # main entrypoint. CMD  [&#34;--allow-net&#34;, &#34;main.ts&#34;]\n      To use Deno as a lambda, there is a module in Deno STD library.  https://deno.land/x/lambda.\n import  {  APIGatewayProxyEvent ,  APIGatewayProxyResult ,  Context }  from  &#34; https://deno.land/x/lambda/mod.ts &#34; ; export  async  function  handler (  event :  APIGatewayProxyEvent ,  context :  Context ):  Promise &lt; APIGatewayProxyResult &gt;  {  return  {  body :  `Welcome to deno  ${ Deno . version . deno }  \ud83e\udd95` ,  headers :  {  &#34; content-type &#34; :  &#34; text/html;charset=utf8 &#34;  },  statusCode :  200  }; }\n    I&#39;m sure I forgot some Node topics and their Deno alternative, let me know if there&#39;s anything I missed that you&#39;d like me to explain. I hope this article helps you break the ice with Deno.", "posttime": "2020-05-17 23:49:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "node,deno", "title": "\u4eceNode\u5230Deno", "title_en": "From Node to Deno", "transed": 1, "url": "https://dev.to/aralroca/from-node-to-deno-5gpn", "via": "", "real_tags": ["node", "deno"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002532, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6f0f\u6d1e\u6536\u8d2d\u516c\u53f8Zerodium\u672c\u5468\u5ba3\u5e03\uff0c\u7531\u4e8e\u8fc7\u5269\uff0c\u5b83\u4e0d\u518d\u8d2d\u4e70\u67d0\u4e9b\u7c7b\u578b\u7684iOS\u6f0f\u6d1e\uff0c\u8be5\u516c\u53f8\u9884\u8ba1\u4ef7\u683c\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u4f1a\u4e0b\u964d\u3002\nZerodium\u5728Twitter\u4e0a\u8868\u793a\uff0c\u5728\u63a5\u4e0b\u6765\u76842-3\u4e2a\u6708\u5185\uff0c\u5b83\u5c06\u4e0d\u518d\u83b7\u5f97iOS\u672c\u5730\u6743\u9650\u63d0\u5347\u3001Safari\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u548c\u6c99\u76d2\u9003\u9038\u6f0f\u6d1e\uff0c\u201c\u56e0\u4e3a\u4e0e\u8fd9\u4e9b\u5411\u91cf\u76f8\u5173\u7684\u63d0\u4ea4\u6570\u91cf\u5f88\u9ad8\u201d\u3002\n\u8be5\u516c\u53f8\u8868\u793a\uff0c\u9884\u8ba1\u4e0d\u63d0\u4f9b\u6301\u4e45\u6027\u7684\u4e00\u952e\u5229\u7528\u94fe\u7684\u4ef7\u683c\u5c06\u4f1a\u4e0b\u964d\u3002\nZerodium\u9996\u5e2d\u6267\u884c\u5b98\u517c\u521b\u59cb\u4ebaChaouki Bekrar\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u53ea\u6709\u6307\u9488\u9a8c\u8bc1\u7801(PAC)-\u5b83\u4eec\u63d0\u4f9b\u4fdd\u62a4\uff0c\u4ee5\u9632\u5185\u5b58\u4e2d\u6307\u9488\u53d1\u751f\u610f\u5916\u53d8\u5316-\u4ee5\u53ca\u5b9e\u73b0\u6301\u4e45\u6027\u7684\u56f0\u96be\u201c\u963b\u6b62\u4e86(iOS\u5b89\u5168)\u8d70\u5411\u96f6\u201d\u3002\n\u8d1d\u514b\u62c9\u5c14\u8bf4\uff1a\u201ciOS\u5b89\u5168\u5df2\u7ecf\u5b8c\u86cb\u4e86\u3002\u201d\u4ed6\u6307\u51fa\uff0c\u4ed6\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u8bb8\u591a\u65e8\u5728\u7ed5\u8fc7PAC\u7684\u6f0f\u6d1e\uff0c\u4ee5\u53ca\u4e00\u4e9b\u53ef\u4ee5\u5e2e\u52a9\u653b\u51fb\u8005\u5728\u6240\u6709iPhone\u548ciPad\u4e0a\u5b9e\u73b0\u6301\u4e45\u6027\u7684\u96f6\u65e5\u6f0f\u6d1e\u3002\u201c\u8ba9\u6211\u4eec\u5e0c\u671biOS14\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u201d\u4ed6\u8865\u5145\u8bf4\u3002\n\u8d1d\u514b\u62c9\u5c14\u5728\u63a5\u53d7\u201c\u5b89\u5168\u5468\u520a\u201d\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201ciOS\u548cAndroid\u6f0f\u6d1e\u7684\u9700\u6c42\u4e00\u76f4\u5f88\u9ad8\uff0c\u4f46\u7531\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9762\u4e34\u7684\u6280\u672f\u6311\u6218\uff0c\u4f9b\u5e94\u91cf\u5f88\u4f4e\u3002\u7136\u800c\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u89c2\u5bdf\u5230iOS\u63d0\u4ea4\u7684\u6570\u91cf\u6fc0\u589e(\u7279\u522b\u662fSafari\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3001\u6c99\u76d2\u9003\u9038\u548c\u6743\u9650\u63d0\u5347)\uff0c\u6211\u4eec\u88ab\u8feb\u505a\u51fa\u53cd\u5e94\uff0c\u9996\u5148\u964d\u4f4e\u4e86\u4ef7\u683c\uff0c\u73b0\u5728\u6211\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u4e24\u5230\u4e09\u4e2a\u6708\u91cc\u6682\u505c\u4e86\u5bf9\u8fd9\u4e9b\u529f\u80fd\u7684\u8d2d\u4e70\u3002\u201d(\u6ce8\uff1a\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff1a\u201c\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u89c2\u5bdf\u5230iOS\u548cAndroid\u6f0f\u6d1e\u7684\u63d0\u4ea4\u6570\u91cf\u6fc0\u589e(\u7279\u522b\u662fSafari\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3001\u6c99\u76d2\u9003\u9038\u548c\u6743\u9650\u63d0\u5347)\uff0c\u4f46\u7531\u4e8e\u8fd9\u4e9b\u6f0f\u6d1e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9762\u4e34\u7684\u6280\u672f\u6311\u6218\uff0c\u6211\u4eec\u7684\u4f9b\u5e94\u91cf\u5f88\u4f4e\u3002\u201d\n\u201c\u8fd9\u4e00\u5cf0\u503c\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u8c03\u67e5iOS\u7684\u7814\u7a76\u4eba\u5458\u6570\u91cf\u589e\u52a0\u4e86\uff0c\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u516c\u5171\u8d8a\u72f1\u7684\u53ef\u7528\u6027\uff0c\u8fd9\u6709\u52a9\u4e8e\u7814\u7a76\u4eba\u5458\u66f4\u5bb9\u6613\u5730\u5bf9iOS\u8bbe\u5907\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\uff0c\u66f4\u5feb\u5730\u627e\u5230\u6f0f\u6d1e\u3002\u201d\u53e6\u4e00\u65b9\u9762\uff0c\u5b89\u5353\u63d0\u4ea4\u7684\u6570\u91cf\u4fdd\u6301\u7a33\u5b9a\uff0c\u201c\u8d1d\u514b\u62c9\u5c14\u8bf4\u3002\n\u6839\u636e\u5176\u7f51\u7ad9\uff0cZerodium\u51c6\u5907\u652f\u4ed8\u9ad8\u8fbe200\u4e07\u7f8e\u5143\u7684\u4ef7\u683c\uff0c\u8d2d\u4e70\u5b9e\u73b0\u6301\u4e45\u6027\u4e14\u4e0d\u9700\u8981\u7528\u6237\u4ea4\u4e92\u7684iOS\u5229\u7528\u94fe\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u9488\u5bf9Android\u7684\u540c\u7c7b\u653b\u51fb\u4ef7\u503c\u9ad8\u8fbe250\u4e07\u7f8e\u5143\u3002\n\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u82f9\u679c\u5df2\u7ecf\u4fee\u8865\u4e86\u8bb8\u591aiOS\u6f0f\u6d1e\uff0c\u5305\u62ec\u90a3\u4e9b\u53ef\u80fd\u88ab\u5229\u7528\u6765\u8fdc\u7a0b\u653b\u51fbiPhone\u7684\u6f0f\u6d1e\u3002\n\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u6b63\u5728\u8fd0\u884c\u4e00\u9879\u516c\u5f00\u7684\u6f0f\u6d1e\u8d4f\u91d1\u8ba1\u5212\uff0c\u901a\u8fc7\u8be5\u8ba1\u5212\uff0c\u5b83\u51c6\u5907\u652f\u4ed8\u9ad8\u8fbe100\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u7528\u4e8e\u5b9e\u73b0\u6301\u4e45\u6027\u3001\u7ed5\u8fc7PAC\u5e76\u4e14\u4e0d\u9700\u8981\u7528\u6237\u4ea4\u4e92\u7684\u6f0f\u6d1e\u3002", "note_en": "Exploit acquisition firm Zerodium announced this week that it\u2019s no longer buying certain types of iOS exploits due to surplus, and the company expects prices to drop in the near future.\n Zerodium  said on Twitter it would no longer acquire iOS local privilege escalation, Safari remote code execution, and sandbox escape exploits in the next 2-3 months \u201cdue to a high number of submissions related to these vectors.\u201d\n The company says it expects prices to drop for one-click exploit chains that do not provide persistence.\n  Chaouki Bekrar, CEO and founder of Zerodium,  said on Twitter that only pointer authentication codes (PACs) \u2014 they provide protection against unexpected changes to pointers in memory \u2014 and the difficulty to achieve persistence \u201care holding [iOS security] from going to zero.\u201d\n \u201ciOS Security is fucked,\u201d said Bekrar, noting that they are already seeing many exploits designed to bypass PAC and a few zero-day exploits that can help an attacker achieve persistence on all iPhones and iPads. \u201cLet\u2019s hope iOS 14 will be better,\u201d he added.\n \u201cThe demand for both iOS and Android exploits has always been very high but the supply was low due to the technical challenges faced during the development of these exploits,\u201d\u00a0Bekrar told\u00a0 SecurityWeek.\u00a0\u201cHowever for the last few months, we&#39;ve observed a spike in the number of iOS submissions (specifically Safari remote code execution, sandbox escapes, and privilege escalations) and we were forced to react by first reducing our prices, and now by pausing our acquisitions of such capabilities for the next two to three months.\u201d\n \u201cThe spike is likely caused by the increased number of researchers looking into iOS and probably by the availability of public jailbreaks which are helping researchers to reverse engineer iOS devices more easily and find bugs faster. On the other hand, the number of Android submissions remains stable,\u201d\u00a0Bekrar said.\n  According to its website, Zerodium is prepared to  pay up to $2 million for iOS exploit chains that achieve persistence and require no user interaction. On the other hand, the same types of exploits targeting Android are  worth up to $2.5 million.\n Apple has  patched many iOS vulnerabilities in the past year, including ones that could have been exploited to  remotely hack iPhones.\n The tech giant is running a  public bug bounty program through which it\u2019s prepared to pay out up to $1 million for exploits that achieve persistence, bypass PAC and require no user interaction.", "posttime": "2020-05-17 23:35:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6f0f\u6d1e,ios,surplus", "title": "\u62b1\u6028iOS\u6f0f\u6d1e\u201c\u8fc7\u5269\u201d\uff0cZerodium\u505c\u6b62\u8d2d\u4e70", "title_en": "Complaining of 'Surplus' of iOS Exploits, Zerodium Stops Buying Them", "transed": 1, "url": "https://www.securityweek.com/zerodium-expects-ios-exploit-prices-drop-it-announces-surplus", "via": "", "real_tags": ["\u6f0f\u6d1e", "ios", "surplus"]}, {"category": "", "categoryclass": "", "imagename": "af1ca51211dfa5000cba625a7aba7946.jpg", "infoid": 1002531, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u4eec\u591a\u5e74\u4f7f\u7528Kubernetes\u7684\u7ecf\u9a8c\u4e2d\uff0c\u6211\u4eec\u6709\u673a\u4f1a\u770b\u5230\u76f8\u5f53\u591a\u7684\u96c6\u7fa4(\u65e0\u8bba\u662f\u6258\u7ba1\u7684\u8fd8\u662f\u975e\u6258\u7ba1\u7684-\u5728GCP\u3001AWS\u548cAzure\u4e0a)\uff0c\u6211\u4eec\u770b\u5230\u4e00\u4e9b\u9519\u8bef\u6b63\u5728\u91cd\u590d\u3002\u8fd9\u6ca1\u4ec0\u4e48\u4e22\u4eba\u7684\uff0c\u6211\u4eec\u4e5f\u505a\u8fc7\u5927\u90e8\u5206\u4e86\uff01\n\u6211\u4f1a\u8bd5\u7740\u5c55\u793a\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u90a3\u4e9b\uff0c\u5e76\u8c08\u8c08\u5982\u4f55\u4fee\u590d\u5b83\u4eec\u3002\nCPU\u8bf7\u6c42\u901a\u5e38\u8981\u4e48\u6ca1\u6709\u8bbe\u7f6e\uff0c\u8981\u4e48\u8bbe\u7f6e\u5f97\u975e\u5e38\u4f4e(\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5bb9\u7eb3\u5927\u91cfPod)\uff0c\u56e0\u6b64\u8282\u70b9\u4f1a\u8d85\u8d1f\u8377\u4f7f\u7528\u3002\u5728\u9700\u6c42\u9ad8\u7684\u65f6\u5019\uff0c\u8282\u70b9\u7684CPU\u88ab\u5145\u5206\u5229\u7528\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u8d1f\u8f7d\u53ea\u5f97\u5230\u201c\u5b83\u6240\u8bf7\u6c42\u7684\u201d\uff0c\u5e76\u4e14CPU\u53d7\u5230\u9650\u5236\uff0c\u4ece\u800c\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u5ef6\u8fdf\u3001\u8d85\u65f6\u7b49\u589e\u52a0\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u8bbe\u7f6eCPU\u9650\u5236\u53ef\u80fd\u4f1a\u4e0d\u5fc5\u8981\u5730\u9650\u5236Pod\uff0c\u5373\u4f7f\u8282\u70b9\u7684CPU\u6ca1\u6709\u5f97\u5230\u5145\u5206\u5229\u7528\uff0c\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\u589e\u52a0\u3002\u5173\u4e8eLinux\u5185\u6838\u4e2d\u7684CPU CFS\u914d\u989d\u548c\u57fa\u4e8e\u8bbe\u7f6eCPU\u9650\u5236\u548c\u5173\u95edCFS\u914d\u989d\u7684CPU\u9650\u5236\uff0c\u6709\u4e00\u4e2a\u516c\u5f00\u7684\u8ba8\u8bba\u3002CPU\u9650\u5236\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bd4\u89e3\u51b3\u7684\u95ee\u9898\u66f4\u591a\u7684\u95ee\u9898\u3002\u8bf7\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u4e2d\u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002\n\u5185\u5b58\u8fc7\u91cf\u4f1a\u7ed9\u60a8\u5e26\u6765\u66f4\u591a\u9ebb\u70e6\u3002\u8fbe\u5230CPU\u9650\u5236\u4f1a\u5bfc\u81f4\u8282\u6d41\uff0c\u8fbe\u5230\u5185\u5b58\u9650\u5236\u4f1a\u6740\u6b7bPod\u3002\u89c1\u8fc7Oomkill\u5417\uff1f\u662f\u7684\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u6b63\u5728\u8c08\u8bba\u7684\u90a3\u4e2a\u3002\u60f3\u8981\u5c06\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u9891\u7387\u964d\u5230\u6700\u4f4e\u5417\uff1f\u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u5185\u5b58\uff0c\u5e76\u4f7f\u7528\u6709\u4fdd\u8bc1\u7684QoS(\u670d\u52a1\u8d28\u91cf)\u5c06\u5185\u5b58\u8bf7\u6c42\u8bbe\u7f6e\u4e3a\u7b49\u4e8eLimit\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\u3002\u9605\u8bfb\u4ea8\u5b81\u00b7\u96c5\u5404\u5e03\u65af(Zalando)\u6f14\u8bb2\u4e2d\u6709\u5173\u8be5\u4e3b\u9898\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528metrics-server\u67e5\u770bPod(\u4ee5\u53ca\u5176\u4e2d\u7684\u5bb9\u5668)\u7684\u5f53\u524dCPU\u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002\u5f88\u6709\u53ef\u80fd\uff0c\u4f60\u5df2\u7ecf\u5728\u8fd0\u884c\u5b83\u4e86\u3002\u53ea\u9700\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u4f46\u662f\uff0c\u8fd9\u4e9b\u53ea\u663e\u793a\u5f53\u524d\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u5bf9\u8fd9\u4e9b\u6570\u5b57\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u6982\u5ff5\u662f\u5f88\u68d2\u7684\uff0c\u4f46\u662f\u60a8\u6700\u7ec8\u8fd8\u662f\u60f3\u8981\u53ca\u65f6\u770b\u5230\u8fd9\u4e9b\u4f7f\u7528\u60c5\u51b5\u6307\u6807(\u6765\u56de\u7b54\u8fd9\u6837\u7684\u95ee\u9898\uff1aCPU\u4f7f\u7528\u7387\u6700\u9ad8\u65f6\u662f\u591a\u5c11\uff0c\u6628\u5929\u65e9\u4e0a\u7b49\u7b49)\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u666e\u7f57\u7c73\u4fee\u65af\u3001DataDog\u548c\u8bb8\u591a\u5176\u4ed6\u8f6f\u4ef6\u3002\u5b83\u4eec\u53ea\u9700\u4eceMetrics-Server\u83b7\u53d6\u6307\u6807\u5e76\u5c06\u5176\u5b58\u50a8\uff0c\u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u67e5\u8be2\u548c\u7ed8\u5236\u56fe\u8868\u3002\nVerticalPodAutoscaler\u53ef\u4ee5\u5e2e\u52a9\u60a8\u81ea\u52a8\u5b8c\u6210\u8fd9\u4e00\u624b\u52a8\u8fc7\u7a0b-\u53ca\u65f6\u67e5\u770bCPU/\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u5e76\u6839\u636e\u6b64\u91cd\u65b0\u8bbe\u7f6e\u65b0\u7684\u8bf7\u6c42\u548c\u9650\u5236\u3002\n\u6709\u6548\u5229\u7528\u60a8\u7684\u8ba1\u7b97\u673a\u5e76\u975e\u6613\u4e8b\u3002\u8fd9\u5c31\u50cf\u4e00\u76f4\u5728\u73a9\u4fc4\u7f57\u65af\u65b9\u5757\u3002\u5982\u679c\u60a8\u53d1\u73b0\u81ea\u5df1\u5728\u5e73\u5747\u5229\u7528\u7387\u8f83\u4f4e(\u6bd4\u65b9\u8bf4~10%)\u7684\u60c5\u51b5\u4e0b\u4e3a\u8ba1\u7b97\u652f\u4ed8\u4e86\u5927\u91cf\u8d39\u7528\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u67e5\u770b\u57fa\u4e8eAWS Fargate\u6216Virtual Kubelet\u7684\u4ea7\u54c1\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u66f4\u591a\u5730\u91c7\u7528\u4e86\u5bf9\u60a8\u6765\u8bf4\u53ef\u80fd\u66f4\u4fbf\u5b9c\u7684\u65e0\u670d\u52a1\u5668/\u6309\u4f7f\u7528\u4ed8\u8d39\u8ba1\u8d39\u6a21\u5f0f\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u6307\u5b9a\u6d3b\u8dc3\u5ea6\u548c\u5c31\u7eea\u63a2\u6d4b\u3002\u6709\u65f6\u5019\u4f1a\u4e00\u76f4\u8fd9\u6837\uff0c\u2026\u3002\n\u4f46\u662f\uff0c\u5f53\u51fa\u73b0\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u65f6\uff0c\u60a8\u7684\u670d\u52a1\u5982\u4f55\u91cd\u65b0\u542f\u52a8\u5462\uff1f\u8d1f\u8f7d\u5747\u8861\u5668\u5982\u4f55\u77e5\u9053\u7279\u5b9a\u7684Pod\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\u6d41\u91cf\uff1f\u8fd8\u662f\u8981\u5904\u7406\u66f4\u591a\u7684\u4ea4\u901a\u95ee\u9898\uff1f\n\u5c31\u7eea\u63a2\u6d4b\u5931\u8d25\u65f6\u4f1a\u65ad\u5f00\u6545\u969cpod\u4e0ekubernetes\u670d\u52a1\u7684\u8fde\u63a5(\u60a8\u53ef\u4ee5\u5728kubectl get\u7aef\u70b9\u4e2d\u68c0\u67e5\u8fd9\u4e00\u70b9)\uff0c\u5e76\u4e14\u5728\u63a2\u6d4b\u518d\u6b21\u6210\u529f\u4e4b\u524d\u4e0d\u4f1a\u5411\u5176\u53d1\u9001\u66f4\u591a\u6d41\u91cf\u3002\n\u4eba\u4eec\u901a\u5e38\u8ba4\u4e3a\u5c31\u7eea\u63a2\u6d4b\u53ea\u5728\u5f00\u59cb\u65f6\u8fd0\u884c\uff0c\u4ee5\u544a\u77e5Pod\u4f55\u65f6\u51c6\u5907\u5c31\u7eea\uff0c\u53ef\u4ee5\u5f00\u59cb\u4e3a\u6d41\u91cf\u63d0\u4f9b\u670d\u52a1\u3002\u4f46\u8fd9\u53ea\u662f\u5b83\u7684\u4e00\u4e2a\u7528\u4f8b\u3002\n\u53e6\u4e00\u4e2a\u662f\u5224\u65ad\u5728\u540a\u8231\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u540a\u8231\u662f\u5426\u53d8\u5f97\u592a\u70ed\uff0c\u5904\u7406\u592a\u591a\u7684\u6d41\u91cf(\u6216\u6602\u8d35\u7684\u8ba1\u7b97)\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u4f1a\u8ba9\u5979\u505a\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u8ba9\u5979\u51b7\u9759\u4e0b\u6765\uff0c\u90a3\u4e48\u5c31\u7eea\u63a2\u6d4b\u5c31\u4f1a\u6210\u529f\uff0c\u6211\u4eec\u5c31\u4f1a\u518d\u6b21\u5f00\u59cb\u53d1\u9001\u66f4\u591a\u7684\u6d41\u91cf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b(\u5f53\u5c31\u7eea\u63a2\u6d4b\u5931\u8d25\u65f6)\uff0c\u6d3b\u6027\u63a2\u6d4b\u4e5f\u5931\u8d25\u5c06\u975e\u5e38\u9002\u5f97\u5176\u53cd\u3002\u4e3a\u4ec0\u4e48\u8981\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u5065\u5eb7\u7684\u3001\u505a\u5927\u91cf\u5de5\u4f5c\u7684\u540a\u8231\u5462\uff1f\n\u6709\u65f6\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u4e00\u4e2a\u63a2\u6d4b\u5668\u6bd4\u9519\u8bef\u5b9a\u4e49\u5b83\u4eec\u8981\u597d\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u5982\u679c\u6d3b\u8dc3\u5ea6\u63a2\u6d4b\u7b49\u4e8e\u5c31\u7eea\u63a2\u6d4b\uff0c\u90a3\u4e48\u60a8\u7684\u9ebb\u70e6\u5c31\u5927\u4e86\u3002\u60a8\u53ef\u80fd\u5e0c\u671b\u4ece\u53ea\u5b9a\u4e49\u5c31\u7eea\u63a2\u6d4b\u5f00\u59cb\uff0c\u56e0\u4e3a\u6d3b\u8dc3\u6027\u63a2\u6d4b\u662f\u5371\u9669\u7684\u3002\n\u5982\u679c\u60a8\u7684\u4efb\u4f55\u5171\u4eab\u4f9d\u8d56\u9879\u5173\u95ed\uff0c\u8bf7\u4e0d\u8981\u4f7f\u4efb\u4f55\u4e00\u4e2a\u63a2\u6d4b\u5931\u8d25\uff0c\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709Pod\u7684\u7ea7\u8054\u6545\u969c\u3002\u4f60\u8fd9\u662f\u5728\u642c\u8d77\u77f3\u5934\u7838\u81ea\u5df1\u7684\u811a\u3002\n\u60a8\u7684\u96c6\u7fa4\u4e2d\u53ef\u80fd\u6709\u66f4\u591a\u60f3\u8981\u5411\u5916\u754c\u516c\u5f00\u7684http\u670d\u52a1\u3002\n\u5982\u679c\u60a8\u5c06kubernetes\u670d\u52a1\u516c\u5f00\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\u7c7b\u578b\uff1a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5219\u5176\u63a7\u5236\u5668(\u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546)\u5c06\u63d0\u4f9b\u5e76\u534f\u8c03\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668(\u4e0d\u4e00\u5b9a\u662fL7\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u66f4\u6709\u53ef\u80fd\u662fL4lb)\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8d44\u6e90\u53ef\u80fd\u4f1a\u53d8\u5f97\u6602\u8d35(\u5916\u90e8\u9759\u6001IPv4\u5730\u5740\u3001\u8ba1\u7b97\u3001\u6bcf\u79d2\u5b9a\u4ef7\u2026)\u3002\u56e0\u4e3a\u4f60\u521b\u9020\u4e86\u5f88\u591a\u8fd9\u6837\u7684\u4e1c\u897f\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5171\u4eab\u4e00\u4e2a\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668\u53ef\u80fd\u66f4\u6709\u610f\u4e49\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u5c06\u670d\u52a1\u516c\u5f00\u4e3a\u7c7b\u578b\uff1aNodePort\u3002\u6216\u8005\u66f4\u597d\u7684\u505a\u6cd5\u662f\uff0c\u90e8\u7f72nginx-inress-Controller(\u6216traefik)\u4e4b\u7c7b\u7684\u4e1c\u897f\u4f5c\u4e3a\u5411\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668\u516c\u5f00\u7684\u5355\u4e2aNodePort\u7aef\u70b9\uff0c\u5e76\u57fa\u4e8eKubernetes\u5165\u53e3\u8d44\u6e90\u5728\u96c6\u7fa4\u4e2d\u8def\u7531\u6d41\u91cf\u3002\n\u76f8\u4e92\u901a\u4fe1\u7684\u5176\u4ed6\u7fa4\u96c6\u5185(\u5fae)\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7ClusterIP\u670d\u52a1\u548c\u5f00\u7bb1\u5373\u7528\u7684DNS\u670d\u52a1\u53d1\u73b0\u8fdb\u884c\u901a\u4fe1\u3002\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u4ed6\u4eec\u7684\u516c\u5171DNS/IP\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u4ed6\u4eec\u7684\u5ef6\u8fdf\u548c\u4e91\u6210\u672c\u3002\n\u5728\u96c6\u7fa4\u4e2d\u6dfb\u52a0\u548c\u5220\u9664\u8282\u70b9\u65f6\uff0c\u4e0d\u5e94\u8be5\u8003\u8651\u4e00\u4e9b\u7b80\u5355\u7684\u6307\u6807\uff0c\u5982\u8fd9\u4e9b\u8282\u70b9\u7684CPU\u5229\u7528\u7387\u3002\u8c03\u5ea6Pod\u65f6\uff0c\u60a8\u9700\u8981\u6839\u636e\u5927\u91cf\u7684\u8c03\u5ea6\u7ea6\u675f\u505a\u51fa\u51b3\u5b9a\uff0c\u4f8b\u5982Pod&amp\uff1b\u8282\u70b9\u4eb2\u548c\u5ea6\u3001\u6c61\u67d3\u548c\u5bb9\u5fcd\u5ea6\u3001\u8d44\u6e90\u8bf7\u6c42\u3001QoS\u7b49\u3002\u62e5\u6709\u4e00\u4e2a\u4e0d\u7406\u89e3\u8fd9\u4e9b\u7ea6\u675f\u7684\u5916\u90e8\u81ea\u52a8\u5b9a\u6807\u5668\u53ef\u80fd\u4f1a\u5f88\u9ebb\u70e6\u3002\n\u5047\u8bbe\u6709\u4e00\u4e2a\u65b0\u7684Pod\u9700\u8981\u8c03\u5ea6\uff0c\u4f46\u662f\u8bf7\u6c42\u4e86\u6240\u6709\u53ef\u7528\u7684CPU\uff0c\u5e76\u4e14Pod\u5904\u4e8e\u6302\u8d77\u72b6\u6001\u3002\u5916\u90e8\u81ea\u52a8\u5b9a\u6807\u5668\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u4f7f\u7528\u7684\u5e73\u5747CPU(\u672a\u8bf7\u6c42)\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5411\u5916\u6269\u5c55(\u4e0d\u4f1a\u6dfb\u52a0\u5176\u4ed6\u8282\u70b9)\u3002\u540a\u8231\u5c06\u4e0d\u4f1a\u88ab\u5b89\u6392\u3002\n\u6269\u5c55(\u4ece\u7fa4\u96c6\u4e2d\u5220\u9664\u8282\u70b9)\u603b\u662f\u6bd4\u8f83\u56f0\u96be\u3002\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a\u6709\u72b6\u6001Pod(\u9644\u52a0\u4e86\u6c38\u4e45\u5377)\uff0c\u7531\u4e8e\u6c38\u4e45\u5377\u901a\u5e38\u662f\u5c5e\u4e8e\u7279\u5b9a\u53ef\u7528\u533a\u4e14\u4e0d\u5728\u8be5\u533a\u57df\u590d\u5236\u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u60a8\u7684\u81ea\u5b9a\u4e49\u81ea\u52a8\u4f38\u7f29\u5668\u4f1a\u5220\u9664\u5176\u4e2d\u5305\u542b\u6b64Pod\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u8ba1\u5212\u7a0b\u5e8f\u65e0\u6cd5\u5c06\u5176\u8c03\u5ea6\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u56e0\u4e3a\u5b83\u53d7\u552f\u4e00\u5305\u542b\u6c38\u4e45\u78c1\u76d8\u7684\u53ef\u7528\u533a\u7684\u9650\u5236\u3002Pod\u518d\u6b21\u5904\u4e8e\u6302\u8d77\u72b6\u6001\u3002\n\u793e\u533a\u5e7f\u6cdb\u4f7f\u7528\u7fa4\u96c6\u81ea\u52a8\u4f38\u7f29\u5668\uff0c\u5b83\u5728\u60a8\u7684\u7fa4\u96c6\u4e2d\u8fd0\u884c\uff0c\u5e76\u4e0e\u5927\u591a\u6570\u4e3b\u8981\u7684\u516c\u5171\u4e91\u4f9b\u5e94\u5546API\u96c6\u6210\uff0c\u7406\u89e3\u6240\u6709\u8fd9\u4e9b\u9650\u5236\uff0c\u5e76\u5728\u4e0a\u8ff0\u60c5\u51b5\u4e0b\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u3002\u5b83\u8fd8\u5c06\u786e\u5b9a\u5b83\u662f\u5426\u53ef\u4ee5\u4f18\u96c5\u5730\u6269\u5c55\uff0c\u800c\u4e0d\u5f71\u54cd\u6211\u4eec\u8bbe\u7f6e\u7684\u4efb\u4f55\u7ea6\u675f\uff0c\u5e76\u4e3a\u60a8\u8282\u7701\u8ba1\u7b97\u6210\u672c\u3002\n\u4e0d\u8981\u5c06IAM\u7528\u6237\u4e0e\u8ba1\u7b97\u673a\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6c38\u4e45\u673a\u5bc6\u4e00\u8d77\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u89d2\u8272\u548c\u670d\u52a1\u5e10\u6237\u751f\u6210\u4e34\u65f6\u673a\u5bc6\u3002\n\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u5b83-\u5728\u5e94\u7528\u914d\u7f6e\u4e2d\u786c\u7f16\u7801\u8bbf\u95ee\u548c\u5bc6\u94a5\uff0c\u5f53\u60a8\u624b\u5934\u6709Cloud IAM\u65f6\u4ece\u4e0d\u8f6e\u6362\u5bc6\u94a5\u3002\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528IAM\u89d2\u8272\u548c\u670d\u52a1\u5e10\u6237\uff0c\u800c\u4e0d\u662f\u7528\u6237\u3002\n\u8df3\u8fc7kube2iam\uff0c\u76f4\u63a5\u4f7f\u7528\u670d\u52a1\u5e10\u6237\u7684IAM\u89d2\u8272\uff0c\u5982\u0160t\u011bp\u00e1n vRAN\u00e4\u8fd9\u7bc7\u535a\u6587\u4e2d\u6240\u8ff0\u3002\n\u6b64\u5916\uff0c\u5f53\u670d\u52a1\u5e10\u6237\u6216\u5b9e\u4f8b\u914d\u7f6e\u6587\u4ef6\u4e0d\u9700\u8981admin\u548ccluster-admin\u6743\u9650\u65f6\uff0c\u8bf7\u4e0d\u8981\u6388\u4e88\u5b83\u4eecADMIN\u548cCLUSTER-ADMIN\u6743\u9650\u3002\u8fd9\u6709\u70b9\u56f0\u96be\uff0c\u7279\u522b\u662f\u5728K8\u7684RBAC\u4e2d\uff0c\u4f46\u4ecd\u7136\u503c\u5f97\u52aa\u529b\u3002\n\u4f8b\u5982\uff0c\u8fd0\u884c\u67d0\u4e2a\u90e8\u7f72\u76843\u4e2aPod\u526f\u672c\u65f6\uff0c\u8282\u70b9\u51fa\u73b0\u6545\u969c\uff0c\u6240\u6709\u526f\u672c\u4e5f\u968f\u4e4b\u5173\u95ed\u3002\u54c8?\u3002\u6240\u6709\u526f\u672c\u90fd\u5728\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u5417\uff1f\u5e93\u4f2f\u5185\u65af\u4e0d\u662f\u5e94\u8be5\u6709\u9b54\u529b\u5e76\u63d0\u4f9bHA\u5417\uff1f\uff01\n\u4f60\u4e0d\u80fd\u6307\u671bKubernetes\u8c03\u5ea6\u7a0b\u5e8f\u5bf9\u4f60\u7684\u8c46\u835a\u5b9e\u65bd\u53cd\u4eb2\u548c\u3002\u60a8\u5fc5\u987b\u660e\u786e\u5b9a\u4e49\u5b83\u4eec\u3002\n//\u7701\u7565\u7b80\u660e\u6807\u7b7e\uff1aapp\uff1azk//\u7701\u7565\u7b80\u5199\u5173\u8054\uff1apodAntiAffity\uff1arequiredDuringSchedulingIgnoredDuringExecution\uff1a-labelSelector\uff1aMatchExpressions\uff1a-Key\uff1a&#34\uff1bapp&#34\uff1bOperator\uff1ain\u503c\uff1a-ZK topologyKey\uff1a&#34\uff1bkubernetes.io/hostname&#34\uff1b\n\u5c31\u662f\u8fd9\u6837\u3002\u8fd9\u5c06\u786e\u4fdd\u5c06Pod\u8c03\u5ea6\u5230\u4e0d\u540c\u7684\u8282\u70b9(\u8fd9\u4ec5\u5728\u8c03\u5ea6\u65f6\u8fdb\u884c\u68c0\u67e5\uff0c\u800c\u4e0d\u662f\u5728\u6267\u884c\u65f6\u8fdb\u884c\u68c0\u67e5\uff0c\u56e0\u6b64requiredDuringSchedulingIgnoredDuringExecution).\n\u6211\u4eec\u8c08\u8bba\u7684\u662f\u4e0d\u540c\u8282\u70b9\u540d\u79f0(topologyKey\uff1a&#34\uff1bkubernetes.io/hostname&#34\uff1b)\u4e0a\u7684podAntiAffity\uff0c\u800c\u4e0d\u662f\u4e0d\u540c\u7684\u53ef\u7528\u533a\u3002\u5982\u679c\u60a8\u786e\u5b9e\u9700\u8981\u9002\u5f53\u7684HA\uff0c\u8bf7\u6df1\u5165\u7814\u7a76\u6b64\u4e3b\u9898\u3002\n\u60a8\u5728Kubernetes\u4e0a\u8fd0\u884c\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u3002\u60a8\u7684\u8282\u70b9&amp\uff1b\u7fa4\u96c6\u5fc5\u987b\u4e0d\u65f6\u5347\u7ea7\u6216\u505c\u7528\u3002PodDisruptionBudget(PDB)\u662f\u4e00\u79cd\u7528\u4e8e\u96c6\u7fa4\u7ba1\u7406\u5458\u548c\u96c6\u7fa4\u7528\u6237\u4e4b\u95f4\u7684\u670d\u52a1\u4fdd\u8bc1\u7684API\u3002\n\u4f5c\u4e3a\u7fa4\u96c6\u7528\u6237\uff0c\u60a8\u53ef\u4ee5\u544a\u8bc9\u7fa4\u96c6\u7ba1\u7406\u5458\uff1a\u201c\u563f\uff0c\u6211\u8fd9\u91cc\u6709\u8fd9\u4e2a\u52a8\u7269\u56ed\u7ba1\u7406\u5458\u670d\u52a1\uff0c\u4e0d\u7ba1\u60a8\u8981\u505a\u4ec0\u4e48\uff0c\u6211\u90fd\u5e0c\u671b\u81f3\u5c11\u6709\u4e24\u4e2a\u526f\u672c\u59cb\u7ec8\u53ef\u7528\u3002\u201d\n\u4eba\u4eec\u4f3c\u4e4e\u671f\u671b\uff0c\u5982\u679c\u4ed6\u4eec\u5c06\u975e\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u5206\u79bb\u5230\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u5e76\u5c06\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u5206\u79bb\u5230\u751f\u4ea7\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\u4e00\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u6c38\u8fdc\u4e0d\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u3002\u53ef\u4ee5\u5b9e\u73b0\u4e00\u5b9a\u7a0b\u5ea6\u7684\u516c\u5e73\u6027(\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236\u3001\u914d\u989d\u3001\u4f18\u5148\u7ea7\u3001\u7c7b)\u548c\u9694\u79bb(\u4eb2\u548c\u5ea6\u3001\u5bb9\u5fcd\u5ea6\u3001\u6c61\u70b9(\u6216\u8282\u70b9\u9009\u62e9\u5668))\uff0c\u4ee5\u4fbf\u5728\u6570\u636e\u5e73\u9762\u4e2d\u201c\u7269\u7406\u201d\u5206\u79bb\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f46\u8fd9\u79cd\u5206\u79bb\u76f8\u5f53\u590d\u6742\u3002\n\u5982\u679c\u60a8\u9700\u8981\u5c06\u4e24\u79cd\u7c7b\u578b\u7684\u5de5\u4f5c\u8d1f\u8f7d\u653e\u5728\u540c\u4e00\u7fa4\u96c6\u4e2d\uff0c\u5219\u5fc5\u987b\u627f\u62c5\u590d\u6742\u6027\u3002\u5982\u679c\u60a8\u4e0d\u9700\u8981\u5b83\uff0c\u5e76\u4e14\u62e5\u6709\u53e6\u4e00\u4e2a\u96c6\u7fa4\u5bf9\u60a8\u6765\u8bf4\u76f8\u5bf9\u4fbf\u5b9c(\u5982\u5728\u516c\u5171\u4e91\u4e2d)\uff0c\u8bf7\u5c06\u5176\u653e\u5728\u4e0d\u540c\u7684\u96c6\u7fa4\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5f3a\u7684\u9694\u79bb\u7ea7\u522b\u3002\n\u7ecf\u5e38\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u6240\u6709\u6d41\u91cf\u5728\u96c6\u7fa4\u5185\u90fd\u88ab\u8def\u7531\u5230NodePort\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5177\u6709External alTrafficPolicy\uff1acluster\u3002\u8fd9\u610f\u5473\u7740\u5728\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u4f1a\u6253\u5f00NodePort\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6765\u4e0e\u6240\u9700\u7684\u670d\u52a1(Pod\u96c6)\u901a\u4fe1\u3002\nNodePort\u670d\u52a1\u6240\u9488\u5bf9\u7684\u5b9e\u9645Pod\u901a\u5e38\u53ea\u5728\u8fd9\u4e9b\u8282\u70b9\u7684\u5b50\u96c6\u4e0a\u8fd0\u884c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u6211\u4e0e\u6ca1\u6709\u8fd0\u884cPod\u7684\u8282\u70b9\u4ea4\u8c08\uff0c\u5b83\u4f1a\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c\u4ece\u800c\u5bfc\u81f4\u989d\u5916\u7684\u7f51\u7edc\u8df3\u8dc3\u548c\u5ef6\u8fdf\u589e\u52a0(\u5982\u679c\u8282\u70b9\u4f4d\u4e8e\u4e0d\u540c\u7684AZ/\u6570\u636e\u4e2d\u5fc3\uff0c\u5ef6\u8fdf\u53ef\u80fd\u4f1a\u76f8\u5f53\u9ad8\uff0c\u5e76\u4e14\u9700\u8981\u989d\u5916\u7684\u51fa\u53e3\u6210\u672c)\u3002\n\u5728Kubernetes\u670d\u52a1\u4e0a\u8bbe\u7f6eExternal alTrafficPolicy\uff1alocal\u4e0d\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6253\u5f00\u8be5NodePort\uff0c\u800c\u53ea\u4f1a\u5728\u5b9e\u9645\u8fd0\u884cPod\u7684\u8282\u70b9\u4e0a\u6253\u5f00\u8be5NodePort\u3002\u5982\u679c\u60a8\u4f7f\u7528\u5bf9\u5176\u7aef\u70b9\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5\u7684\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668(\u5982AWS ELB\u6240\u505a\u7684\u90a3\u6837)\uff0c\u5b83\u5c06\u5f00\u59cb\u4ec5\u5c06\u6d41\u91cf\u53d1\u9001\u5230\u5176\u5e94\u8be5\u53bb\u5f80\u7684\u8282\u70b9\uff0c\u4ece\u800c\u6539\u5584\u60a8\u7684\u5ef6\u8fdf\u3001\u8ba1\u7b97\u5f00\u9500\u3001\u51fa\u53e3\u8d26\u5355\u548c\u5065\u5168\u6027\u3002\n\u6709\u53ef\u80fd\u4f1a\u5c06traefik\u6216nginx-inress-Controller\u516c\u5f00\u4e3aNodePort(\u6216LoadBalancer\uff0c\u5b83\u4e5f\u4f7f\u7528NodePort)\u6765\u5904\u7406\u5165\u53e3http\u6d41\u91cf\u8def\u7531\uff0c\u6b64\u8bbe\u7f6e\u53ef\u4ee5\u6781\u5927\u5730\u51cf\u5c11\u6b64\u7c7b\u8bf7\u6c42\u7684\u5ef6\u8fdf\u3002\n\u60a8\u5c06\u670d\u52a1\u5668\u4ece\u79f0\u4e3aAnton\u3001HAL9000\u548cColossus\u8f6c\u53d8\u4e3a\u4e3a\u60a8\u7684\u8282\u70b9\u751f\u6210\u968f\u673aID\uff0c\u4f46\u662f\u60a8\u5f00\u59cb\u4f7f\u7528\u540d\u79f0\u6765\u79f0\u547c\u60a8\u7684\u96c6\u7fa4\u5417\uff1f\n\u60a8\u77e5\u9053\u60a8\u662f\u5982\u4f55\u4eceKubernetes\u7684\u6982\u5ff5\u9a8c\u8bc1\u5f00\u59cb\u7684\uff0c\u5c06\u96c6\u7fa4\u547d\u540d\u4e3a\u201c\u6d4b\u8bd5\u201d\uff0c\u5e76\u4e14\u4ecd\u7136\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u5b83\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u6562\u78b0\u5b83\u5417\uff1f(\u771f\u5b9e\u6545\u4e8b)\u3002\n\u5ba0\u7269\u7fa4\u96c6\u5e76\u4e0d\u597d\u73a9\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4e0d\u65f6\u8003\u8651\u5220\u9664\u60a8\u7684\u7fa4\u96c6\uff0c\u7ec3\u4e60\u707e\u96be\u6062\u590d\uff0c\u5e76\u7167\u987e\u597d\u60a8\u7684\u63a7\u5236\u5c42\u3002\u5bb3\u6015\u89e6\u6478\u63a7\u5236\u9762\u4e0d\u662f\u597d\u5146\u5934\u3002etcd\u6b7b\u4e86\u5417\uff1f\u55ef\uff0c\u4f60\u6709\u5927\u9ebb\u70e6\u4e86\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u6478\u5f97\u592a\u591a\u4e5f\u4e0d\u597d\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u63a7\u5236\u5e73\u9762\u53d8\u6162\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u521b\u5efa\u5927\u91cf\u5bf9\u8c61\u800c\u4ece\u4e0d\u65cb\u8f6c\u5b83\u4eec(\u5728\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u7684HELM\u65f6\u975e\u5e38\u5e38\u89c1\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e0d\u4f1a\u5728configmap/secrets\u4e2d\u65cb\u8f6c\u5176\u72b6\u6001\uff0c\u5e76\u4e14\u6700\u7ec8\u5728\u63a7\u5236\u5e73\u9762\u4e2d\u6709\u6570\u5343\u4e2a\u5bf9\u8c61)\uff0c\u6216\u8005\u60a8\u7ecf\u5e38\u4eceKube-API\u4e2d\u6293\u53d6\u548c\u7f16\u8f91\u5927\u91cf\u5185\u5bb9(\u7528\u4e8e\u81ea\u52a8\u7f29\u653e\u3001CICD\u3001\u76d1\u89c6\u3001\u6765\u81ea\u4e8b\u4ef6\u7684\u65e5\u5fd7\u3001\u63a7\u5236\u5668\u7b49)\u3002\n\u6b64\u5916\uff0c\u8bf7\u68c0\u67e5\u60a8\u63d0\u4f9b\u201cSLA\u201d/SLO\u548c\u62c5\u4fdd\u7684\u6258\u7ba1Kubernetes\u3002\u4f9b\u5e94\u5546\u53ef\u80fd\u4f1a\u4fdd\u8bc1\u63a7\u5236\u5e73\u9762(\u6216\u5176\u5b50\u7ec4\u4ef6)\u7684\u53ef\u7528\u6027\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u60a8\u53d1\u9001\u7ed9\u5b83\u7684\u8bf7\u6c42\u7684P99\u5ef6\u8fdf\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u53ef\u80fd\u4f1a\u572810\u5206\u949f\u5185\u83b7\u5f97kubectl\u83b7\u53d6\u8282\u70b9\u5e76\u83b7\u5f97\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u8fdd\u53cd\u670d\u52a1\u4fdd\u8bc1\u3002\n\u8fd9\u4e2a\u662f\u7ecf\u5178\u7684\u3002\u6211\u89c9\u5f97\u6700\u8fd1\u6211\u4e0d\u7ecf\u5e38\u770b\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u6211\u4eec\u4e2d\u7684\u5f88\u591a\u4eba\u90fd\u88ab\u70e7\u4f24\u4e86\u592a\u591a\u6b21\uff0c\u6211\u4eec\u505c\u6b62\u4f7f\u7528\uff1aLATEST\uff0c\u5f00\u59cb\u56fa\u5b9a\u7248\u672c\u3002\u8036\uff01\n\u4e0d\u8981\u671f\u671b\u4e00\u5207\u90fd\u80fd\u81ea\u52a8\u8fd0\u8f6c--\u5e93\u4f2f\u5185\u65af\u4e0d\u662f\u7075\u4e39\u5999\u836f\u3002\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5e94\u7528\u7a0b\u5e8f\u5373\u4f7f\u5728Kubernetes\u4e0a\u4e5f\u4f1a\u662f\u7cdf\u7cd5\u7684\u5e94\u7528\u7a0b\u5e8f(\u5b9e\u9645\u4e0a\uff0c\u751a\u81f3\u53ef\u80fd\u6bd4\u7cdf\u7cd5\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd8\u8981\u7cdf\u7cd5)\u3002\u5982\u679c\u60a8\u4e0d\u5c0f\u5fc3\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u975e\u5e38\u590d\u6742\u3001\u538b\u529b\u5927\u4e14\u901f\u5ea6\u6162\u7684\u63a7\u5236\u5e73\u9762\uff0c\u5e76\u4e14\u6ca1\u6709\u707e\u96be\u6062\u590d\u7b56\u7565\u3002\u4e0d\u8981\u671f\u5f85\u5f00\u7bb1\u5373\u7528\u7684\u591a\u79df\u6237\u548c\u9ad8\u53ef\u7528\u6027\u3002\u82b1\u70b9\u65f6\u95f4\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6210\u4e3a\u672c\u5730\u4e91\u3002", "note_en": "We had the chance to see quite a bit of clusters in our years of experience with kubernetes (both managed and unmanaged - on GCP, AWS and Azure), and we see some mistakes being repeated. No shame in that, we\u2019ve done most of these too!\n I&#39;ll try to show the ones we see very often and talk a bit about how to fix them.\n   CPU request are usually either  not set or  set very low (so that we can fit a lot of pods on each node) and nodes are thus overcommited. In time of high demand the CPUs of the node are fully utilized and our workload is getting only \u201cwhat it had requested\u201d and gets  CPU throttled, causing increased application latency, timeouts, etc.\n     On the other hand, having a CPU limit can unnecessarily throttle pods even if the node\u2019s CPU is not fully utilized which again can cause increased latency. There is a an open discussion around  CPU CFS quota in linux kernel and cpu throttling based on set cpu limits and turning off the CFS quota. CPU limits can cause more problems than they solve. See more in the link below.\n Memory overcommiting can get you in more trouble. Reaching a CPU limit results in throttling, reaching memory limit will get your pod killed. Ever seen  OOMkill? Yep, that&#39;s the one we are talking about. Want to minimize how often it can happen? Don\u2019t overcommit your memory and use Guaranteed QoS (Quality of Service) setting memory request equal to limit like in the example below. Read more about the topic  in Henning Jacobs\u2019 (Zalando) presentation.\n      You can see the current cpu and memory usage of pods (and containers in them) using  metrics-server. Chances are, you are already running it. Simply run these:\n  However these show just the current usage. That is great to get the rough idea about the numbers but you end up wanting to see these  usage metrics in time (to answer questions like: what was the cpu usage in peak, yesterday morning, etc.). For that, you can use  Prometheus,  DataDog and many others. They just ingest the metrics from metrics-server and store them, then you can query &amp; graph them.\n VerticalPodAutoscaler can help you  automate away this manual process - looking at cpu/mem usage in time and setting new requests and limits based on that all over again.\n Utilizing effectively your compute is not an easy task. It is like playing tetris all the time. If you find yourself paying a lot for compute while having low average utilization (say ~10%), you might want to check AWS Fargate or Virtual Kubelet based products that leverage more of a serverless/pay-per-usage billing model that might be cheaper for you.\n  By default there are no liveness and readiness probes specified. And sometimes it stays that way\u2026\n But how else would your service get restarted when there is an unrecoverable error? How does a loadbalancer know a specific pod can start handling traffic? Or handle more traffic?\n  Readiness probe disconnects on fail the failing pod from the kubernetes service (you can check this in  kubectl get endpoints) and no more traffic is being sent to it until the probe succeeds again\n  People often think that readiness probes run only at the start to tell when the pod is  Ready and can start servicing traffic. But that&#39;s just one of its use cases.\n The other one is to tell if during a pod&#39;s life the pod becomes  too hot handling too much traffic (or an expensive computation) so that we don&#39;t  send her more work to do and let her  cool down, then the readiness probe succeeds and  we start sending in more traffic again. In this case (when failing readiness probe) failing also liveness probe would be very counterproductive.  Why would you restart a pod that is healthy and doing a lot of work?\n Sometimes not having either probe defined is better than having them defined wrong. As mentioned above, if  liveness probe is equal to readiness probe, you are in a big trouble. You might want to start with defining  only the readiness probe alone as  liveness probes are dangerous.\n Do not fail either of the probes if any of your shared dependencies is down, it would cause  cascading failure of all the pods. You are  shooting yourself in the foot.\n  Chances are you have more http services in your cluster which you\u2019d like to expose to the outside world.\n If you expose kubernetes service as a  type: LoadBalancer, its controller (vendor specific) will provision and reconciliate an external LoadBalancer (not necessarily L7 loadbalancer, more likely an L4 lb) and those resources might get expensive (external static ipv4 address, compute, per-second pricing\u2026) as you create many of them.\n In that case, sharing one external loadbalancer might make more sense and you expose your services as  type: NodePort. Or yet better, deploying something like  nginx-ingress-controller (or  traefik) being the single  NodePort endpoint exposed to the external loadbalancer and routing the traffic in the cluster based on kubernetes  ingress resources.\n The other in-cluster (micro)services that talk to each other can talk through  ClusterIP services and out-of-box dns service discovery. Be careful about not using their public DNS/IPs as it could affect their latency and cloud cost.\n  When adding and removing nodes to/from the cluster, you shouldn\u2019t consider some simple metrics like a cpu utilization of those nodes. When scheduling pods, you decide based on a lot of  scheduling constraints like pod &amp; node affinities, taints and tolerations, resource requests, QoS, etc. Having an external autoscaler that does not understand these constraints might be troublesome.\n Imagine there is a new pod to be scheduled but all of the CPU available is requested and pod is  stuck in Pending state. External autoscaler sees the average CPU currently used (not requested) and won\u2019t scale out (will not add another node). The pod won\u2019t be scheduled.\n Scaling-in (removing a node from the cluster) is always harder. Imagine you have a stateful pod (with persistent volume attached) and as  persistent volumes are usually resources that  belong to a specific availability zone and are not replicated in the region, your custom autoscaler removes a node with this pod on it and scheduler cannot schedule it onto a different node as it is very limited by the only availability zone with your persistent disk in it. Pod is again stuck in Pending state.\n The community is widely using   cluster-autoscaler which runs in your cluster and is integrated with most major public cloud vendors APIs, understands all these constraints and would scale-out in the mentioned cases. It will also figure out if it can gracefully scale-in without affecting any constraints we have set and saves you money on compute.\n  Don&#39;t use IAM Users with permanent secrets for  machines and applications rather than generating temporary ones using roles and service accounts.\n We see it often - hardcoding access and secret keys in application configuration, never rotating the secrets when you have Cloud IAM at hand. Use IAM Roles and service accounts instead of users where suitable.\n  Skip kube2iam, go directly with IAM Roles for Service Accounts as described in  this blogpost by \u0160t\u011bp\u00e1n Vran\u00fd.\n   Also don\u2019t give the service accounts or instance profiles  admin and  cluster-admin permissions when they don\u2019t need it. That is a bit harder, especially in k8s RBAC, but still worth the effort.\n  Running e.g. 3 pod replicas of some deployment, node goes down and all the replicas with it. Huh? All the replicas were running on one node? Wasn&#39;t Kubernetes supposed to be magical and provide HA?!\n You can&#39;t expect kubernetes scheduler to enforce anti-affinites for your pods. You have to define them explicitly.\n // omitted for brevity labels: app: zk// omitted for brevity affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: &#34;app&#34; operator: In values: - zk topologyKey: &#34;kubernetes.io/hostname&#34;\n That&#39;s it. This will make sure the pods will be scheduled to different nodes (this is being checked only at scheduling time, not at execution time, hence the  requiredDuringSchedulingIgnoredDuringExecution).\n We are talking about podAntiAffinity on different node names -  topologyKey: &#34;kubernetes.io/hostname&#34; - not different availability zones. If you really need proper HA, dig a bit deeper in this topic.\n  You run production workload on kubernetes. Your nodes &amp; cluster have to be upgraded, or decommissioned, from time to time. PodDisruptionBudget (pdb) is sort of an API for service guarantees between cluster-administrators and cluster-users.\n   With this as a cluster-user you tell the cluster-administrators: \u201chey, I have this zookeeper service here and no matter what you have to do, I&#39;d like having at least 2 replicas always available\u201d.\n    People seem to expect if they separated non-prod workload to one namespace and prod to prod namespace, one  workload won\u2019t ever affect the other. It is possible to achieve some level of fairness - resource requests and limits, quotas, priorityClasses - and isolation - affinities, tolerations, taints (or nodeselectors) - to \u201cphysically\u201d separate the workload in data plane but that separation is quite  complex.\n If you need to have both types of workloads in the same cluster, you\u2019ll have to bear the complexity. If you don\u2019t need it and having  another cluster is relatively cheap for you (like in public cloud), put it in different cluster to achieve much stronger level of isolation.\n  Seeing this very often, all traffic is routed inside the cluster to a NodePort service which has, by default,  externalTrafficPolicy: Cluster. That means the  NodePort is opened on every node in the cluster so that you can use any of them to communicate with the desired service (set of pods).\n  More often than not the actual pods that are targeted with the NodePort service  run only on a subset of those nodes. That means if I talk to a node which does not have the pod running it will forward the traffic to a different node, causing  additional network hop and increased latency (if the nodes are in different AZs/datacenters, the latency can be quite high and there is additional egress cost to it).\n Setting  externalTrafficPolicy: Local on the kubernetes service won\u2019t open that NodePort on every Node, but only on the nodes where the pods are actually running. If you use an external loadbalancer which is healthchecking its endpoints (like  AWS ELB does) it will start to  send the traffic only to those nodes where it is supposed to go, improving your latency, compute overhead, egress bill and sanity.\n Chances are, you have something like  traefik or  nginx-ingress-controller being exposed as NodePort (or LoadBalancer, which uses NodePort too) to handle your ingress http traffic routing and this setting can greatly reduce the latency on such requests.\n   You went from calling your servers   Anton,  HAL9000 and  Colossus to having generated random ids for your nodes but you started to call your cluster by a name?\n You know how you started with a Proof Of Concept with Kubernetes, named the cluster \u201ctesting\u201d and STILL use it in production and everybody is scared to touch it? (true story)\n Pet clusters are not fun and you might want to consider deleting your cluster from time to time,  practice Disaster Recovery and take care of your control plane. Being afraid of touching the control plane is not a good sign.  Etcd\u2018s dead? Well, you got a big problem.\n On the other hand, touching it too much is no good either. When with time the  control plane becomes slow, chances are, you are either creating a lot of objects without ever rotating them (very common when using helm with default settings which does not rotate its state in configmaps/secrets and you end up having thousands of objects in control plane) or you constantly scrape and edit tons of things from kube-api (for autoscaling, cicd, monitoring, logs from events, controllers, etc.).\n Also, check your managed kubernetes offering \u201cSLAs\u201d/SLOs and guarantees. A vendor might guarantee  availability of control plane (or its subcomponents) but not p99 latency of the requests you send to it. In other words, you might do  kubectl get nodes and get correct answer in 10 minutes and that still does not violate the service guarantee.\n  This one is a classic. I feel like lately I don\u2019t see this very often as a lot of us got burned too many times and we stopped using  :latest and started to pin the versions. Yay!\n   Don&#39;t expect that everything works automagically - Kubernetes is not a silver bullet. A bad app will be  bad app even on kubernetes (possible even worse than bad, actually). If you are not careful, you can end up with a lot of complexity, stressed and slow control plane and no DR strategy. Don&#39;t expect out-of-box multi-tenancy and high availability. Invest some time in making your app cloud native.", "posttime": "2020-05-17 23:19:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "mistakes,pod", "title": "\u4f7f\u7528Kubernetes\u65f6\u6700\u5e38\u89c1\u768410\u4e2a\u9519\u8bef", "title_en": "10 most common mistakes using Kubernetes", "transed": 1, "url": "https://blog.pipetail.io/posts/2020-05-04-most-common-mistakes-k8s/", "via": "", "real_tags": ["mistakes", "pod"]}, {"category": "", "categoryclass": "", "imagename": "a20ebf8fa9e55a8a8c652bc0ce2f8ce1.jpg", "infoid": 1002530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c\u4e00\u7ea7\u6211\u5b8c\u5168\u4e0d\u77e5\u9053\u6709\u4eba\u53ef\u4ee5\u5728\u5bb6\u91cc\u5efa\u9020\u8fd9\u6837\u5927\u5c0f\u548c\u6bd4\u4f8b\u7684\u671b\u8fdc\u955c\uff0c\u4f46\u8fd9\u592a\u68d2\u4e86\uff01\u5c31\u50cf\uff0c\u54c7\uff0c\u96be\u4ee5\u7f6e\u4fe1\uff0c\u4f19\u8ba1\u3002\n\u7b2c\u4e8c\u7ea7\uff0c\u8fd9\u53ea\u662f\u6211\u505a\u8fc7\u7684\u7b2c\u4e09\u5927\u3002\u4e5f\u505a\u4e8616&34\uff1b\u548c20.5&34\uff1b(\u62a5\u5e9f)\u3002\n\u7f16\u8f91\uff1a\u5927\u5bb6\u65e9\u4e0a\u597d\uff0c\u5982\u679c\u4f60\u6709\u66f4\u591a\u7684\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7a0d\u5fae\u5411\u4e0b\u6eda\u52a8\u4e00\u4e0b\uff0c\u6211\u6709\u4e00\u4e2a\u8ff7\u4f60\u5e38\u89c1\u95ee\u9898\u89e3\u7b54(\u76ee\u524d\u5b83\u5c31\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u7236\u7ea7\u4e0b\u9762)\uff0c\u7f16\u8f91\u8fd9\u7bc7\u6587\u7ae0\u662f\u56e0\u4e3a\u5b83\u662f\u6211\u6700\u91cd\u8981\u7684\u8bc4\u8bba\u3002\n\u7b2c\u4e8c\u5c42\uff0c\u8fd9\u4e48\u591a\u5e74\u9f84\u662f\u4ed6\u4e24\u500d\u7684\u4eba\u5728\u62fc\u547d\u62fc\u51d1\u5b9c\u5bb6\u5bb6\u5177\u5305\uff0c\u800c\u8fd9\u91cc\u7684\u8fd9\u4e2a\u5bb6\u4f19\u6b63\u5728\u5efa\u9020\u4e00\u53f0\u5f17\u7f57\u62c9\u57fa\u671b\u8fdc\u955c\uff01\u5e0c\u671b\u4ed6\u80fd\u51ed\u501f\u8fd9\u6837\u7684\u624d\u534e\u8d70\u5f97\u66f4\u8fdc\u3002\n\u6211\u9644\u8fd1\u6709\u4e00\u5bb6\u671b\u8fdc\u955c\u4ff1\u4e50\u90e8\uff0c\u6211\u6709\u4e2a\u670b\u53cb\u5f88\u559c\u6b22\uff0c\u771f\u7684\u5f88\u6709\u8da3\u3002\n\u4e91\u5f69\u4e4b\u591c\u4e0a\u76841\u7ea7\u6784\u9020\u7ebf-\u6211\u6ca1\u6709\u5236\u4f5c\u955c\u5b50\uff0c\u4f46\u6211\u81ea\u5df1\u5efa\u9020/\u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u7ed3\u6784\u3002\n\u5982\u4f55\u5236\u4f5c\u4f60\u81ea\u5df1\u7684\u671b\u8fdc\u955c\u548c\u955c\u5b50-\u975e\u5e38\u7b80\u5355\u7684\u8ba1\u5212\uff0c\u4f60\u53ef\u4ee5\u7528\u51e0\u767e\u7f8e\u5143\u548c\u57fa\u672c\u7684\u5de5\u5177\u5efa\u9020\u4f60\u81ea\u5df1\u7684\u671b\u8fdc\u955c\u3002\u955c\u5b50\u6709\u70b9\u96be\uff0c\u4f46\u662f\u6211\u505a\u4e86\u4e00\u4e2a6\uff1b#34\uff1b\u6ca1\u6709\u4ec0\u4e48\u56f0\u96be--\u867d\u7136\u5f88\u8017\u65f6\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5728\u5bb6\u91cc\u5de5\u4f5c\u7684\u5b8c\u7f8e\u9879\u76ee\uff01\n\u6211\u7684YouTube-\u5f88\u5feb\u5c31\u4f1a\u6839\u636eStellafane\u7684\u8ba1\u5212\u5236\u4f5c\u4e00\u4e2a\u6559\u7a0b\u89c6\u9891\uff01\n\u6b64\u5916\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\u5efa\u7acb\u4e00\u4e2a\u8303\u56f4\u68c0\u67e5r/atming\uff0c\u4e5f\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u8d44\u6e90\u5f20\u8d34\u5728\u90a3\u91cc\u3002\n\u6211\u771f\u7684\u60f3\u5f3a\u8c03\uff0c\u4efb\u4f55\u4eba\uff0c\u6211\u662f\u8bf4\u4efb\u4f55\u4eba\uff0c\u90fd\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff01\u671b\u8fdc\u955c\u7684\u5236\u9020\u548c\u5929\u6587\u5b66\u5e76\u4e0d\u6bd4\u5efa\u9020\u4e00\u53f0\u4e2a\u4eba\u7535\u8111\u66f4\u96be\uff0c\u770b\u770b\u6709\u591a\u5c11\u4eba\u5728\u505a\u8fd9\u4ef6\u4e8b\uff01\n\u5f3a\u70c8\u63a8\u8350\u60a8\u52a0\u5165\u5f53\u5730\u7684\u5929\u6587\u4ff1\u4e50\u90e8\u3002\u5373\u4f7f\u4f60\u73b0\u5728\u4e0d\u80fd\u4eb2\u81ea\u53bb\u53c2\u89c2\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u63a5\u89e6\u5230\u5927\u91cf\u7684\u8d44\u6e90\uff0c\u4f60\u53ef\u4ee5\u7ed3\u8bc6\u5f88\u591a\u4eba\uff01\u3002\u53e6\u5916\uff0c\u8bb8\u591a\u4ff1\u4e50\u90e8\u771f\u7684\u53ef\u4ee5\u4f7f\u7528\u73b0\u91d1-\u5929\u6587\u662f\u4e00\u79cd\u5229\u57fa\u7231\u597d\uff01\n\u6211\u662f\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5e93\u5fb7\u65af\u6ce2\u7279\u7684\u9ed1\u68ee\u6797\u660e\u661f\u805a\u4f1a\u4e0a\u8c08\u5230\u4e5d\u6708\u4efd\u7684\u671b\u8fdc\u955c\u5236\u9020\u7684\u3002\u5728\u8fd9\u91cc\u6ce8\u518c\uff1ahttps://bfsp.org/-\u8fd8\u5c06\u53c2\u52a06\u6708\u5728\u540c\u4e00\u5730\u70b9\u4e3e\u884c\u7684\u6a31\u6843\u6cc9\u660e\u661f\u6d3e\u5bf9(Cherry Springs Star Party)\uff0c\u4ee5\u53ca8\u6708\u7684\u65af\u7279\u62c9\u51e1(Stellafane)\uff0c7\u6708\u7684\u4fc4\u52d2\u5188\u5dde\u660e\u661f\u6d3e\u5bf9(Oregon Star Party)\u548c10\u6708\u7684\u6843\u5dde\u660e\u661f\u51dd\u89c6(Peach State Star Gaze)\u3002\n\u6211\u513f\u5b5017\u5c81\uff0c\u4e0d\u662f17\u5c81\uff0c\u4ed6\u7684\u4e2d\u95f4\u540d\u6070\u597d\u662f\u5965\u53e4\u65af\u90fd\u3002\u5982\u679c\u4ed6\u50cf\u4f60\u4e00\u6837\uff0c\u6211\u548c\u4ed6\u7238\u7238\u4f1a\u5f88\u9ad8\u5174\u7684\uff01\u4f60\u771f\u662f\u4e2a\u4f20\u5947\uff01\u7ee7\u7eed\u505a\u4e00\u4e2a\u4e86\u4e0d\u8d77\u7684\u5e74\u8f7b\u4eba\u3002\n\u4e00\u7ea7\u7f16\u8f91\uff1a\u6211\u7684\u7b2c\u4e00\u4e2a\u5956\uff0c\u8c22\u8c22\u964c\u751f\u4eba\uff01\u4f46\u662f\uff0c\u5982\u679c\u6709\u4eba\u60f3\u8981\u9881\u5956\uff0c\u5c31\u7ed9\u8fd9\u4e2a\u804c\u4f4d\u7684\u4eba\u5427\uff0c\u56e0\u4e3a\u4ed6\u7edd\u5bf9\u914d\u5f97\u4e0a\u8fd9\u4e2a\u5956\uff01\n\u7b2c\u4e8c\u5c42\u53ea\u67090.7\u82f1\u5bf8\uff0c\u6211\u4eec\u6709\u7684C14\u5bf9\u5929\u6587\u6444\u5f71\u66f4\u6709\u7528\uff0c\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u68da\u5b50\u91cc\u4e5f\u6709\u4e00\u4e2a25\uff1bDob\u3002\n\u4e5f\u5f3a\u70c8\u63a8\u8350\u52a0\u5165https://westchesterastronomers.org/\uff0c\uff0chttps://www.asnh.org/\uff0c\uff0chttps://astrogreenwich.org/\uff0c\uff0chttps://www.rosecityastronomers.net/\uff0c\u6216http://www.theskyscrapers.org/\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u4f4f\u5728\u54ea\u91cc-\u4e0a\u9762\u63d0\u5230\u7684\u662f\u6211\u6709\u76f4\u63a5\u7ecf\u9a8c\u7684\u4ff1\u4e50\u90e8\u6216\u6211\u662f\u5176\u4e2d\u7684\u4e00\u5458\uff0c\u4f46\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u5f88\u68d2\u7684\u5929\u6587\u4ff1\u4e50\u90e8\uff01", "note_en": "level 1  I had absolutely no idea one could build a telescope of this size and scale at home, but this is awesome! Just, like whoa, incredible, man.\n level 2  It is only the third-largest I have ever made. Did a 16&#34; and 20.5&#34; too (scrapped).\n EDIT: Good morning folks, if you have more questions I have a mini-FAQ if you scroll a bit down (currently it&#39;s just below the parent to this), editing this because it&#39;s my top comment.\n  level 2  So many people twice his age struggling to put together IKEA furniture packs and this guy here building a freaki&#39;n  telescope! Hope he goes far with this level of talent.\n  level 2  There is a telescope club near me, I have a friend that\u2019s into it, it\u2019s really interesting\n  level 1  Build thread on Cloudy Nights - I didn&#39;t make the mirror, but built/designed the structure myself.\n How to make your own telescope and mirror - Very easy plans, you can build your own scope for a few hundred bucks and with basic tools. Mirror is a little harder but I&#39;ve made a 6&#34; with little difficulty - while it is time-consuming it&#39;s a perfect project to work on at home!\n    My YouTube - will be doing a tutorial video soon based on the Stellafane plans!\n  Also if you&#39;re interested in building a scope check out  r/atming, have posted some good resources there too\n I really want to stress that anybody, and I mean  anybody, can do this! Telescope making and astronomy are no harder than building a PC and look how many folks do that!\n  HIGHLY recommend joining your local astronomy club. Even if you can&#39;t physically visit right now there are still tons of great resources you can access and folks you can meet! Plus a lot of clubs can really use the cash - astro is kinda a niche hobby!\n   I am speaking at the Black Forest Star Party in Coudersport, PA about telescope making in September. Register here:  https://bfsp.org/ - will also be at the Cherry Springs Star Party at the same location in June, as well as Stellafane in August and potentially the Oregon Star Party in July and Peach State Star Gaze in October.\n level 2  My son is 17mo not 17yrs, and his middle name happens to be Augustus. If he turns out like you, his dad and I will be SO HAPPY!!! What a legend you are! Keep being awesome young man.\n           level 1  Edit: My first award, thanks stranger! But if anyone feels like they want to give any awards, give it to the man of the post because he definitely deserves it!\n level 2  Only by 0.7 inches, and the C14 we have is more useful for astrophotography, plus there&#39;s also a 25&#34; Dob in a shed that we have as well.\n  Also highly recommend joining  https://westchesterastronomers.org/,  https://www.asnh.org/,  https://astrogreenwich.org/,  https://www.rosecityastronomers.net/, or  http://www.theskyscrapers.org/ depending on where you live - aforementioned are clubs I have direct experience with or are a member of but there are plenty of awesome astronomy clubs worldwide!", "posttime": "2020-05-17 23:19:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53cd\u5c04\u955c,guy,https", "title": "17yo\u76d6\u5efa\u9020\u4e8614.7\u201cf/2.89\u725b\u987f\u53cd\u5c04\u955c\u671b\u8fdc\u955c", "title_en": "17yo guy built 14.7\u201c f/2.89 Newtonian reflector telescope", "transed": 1, "url": "https://www.reddit.com/r/space/comments/frdd1d/im_17_years_old_and_just_finished_building_this/", "via": "", "real_tags": ["\u53cd\u5c04\u955c", "guy", "https"]}, {"category": "", "categoryclass": "", "imagename": "ee06c1e5e66a3f2a71ff11e7415e7bfe.jpg", "infoid": 1002529, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u653e\u5c04\u6027\u5c18\u57c3\u5f88\u5c11\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u4f46\u65b0\u7684\u7814\u7a76\u8868\u660e\uff0c\u51b7\u6218\u65f6\u671f\u6838\u8bd5\u9a8c\u91ca\u653e\u7684\u5e26\u7535\u7c92\u5b50\u53ef\u80fd\u901a\u8fc7\u89e6\u53d1\u7a7a\u6c14\u4e2d\u7684\u7535\u8377\uff0c\u5bfc\u81f4\u6c34\u6ef4\u805a\u5408\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u8ddd\u79bb\u8bd5\u9a8c\u573a\u6570\u5343\u516c\u91cc\u7684\u964d\u96e8\u91cf\u3002\n\u7f8e\u56fd\u3001\u82cf\u8054\u548c\u5176\u4ed6\u56fd\u5bb6\u572820\u4e16\u7eaa50\u5e74\u4ee3\u548c60\u5e74\u4ee3\u521d\u7ecf\u5e38\u5728\u5730\u9762\u4e0a\u8bd5\u9a8c\u6838\u6b66\u5668\u3002\u5c18\u57c3\u542b\u6709\u653e\u5c04\u6027\u5143\u7d20\u7684\u9b54\u9b3c\u9e21\u5c3e\u9152\uff0c\u53ef\u4ee5\u5728\u5927\u6c14\u4e2d\u4ea7\u751f\u5fae\u5999\u7684\u5f71\u54cd\u3002\u653e\u5c04\u6027\u8870\u53d8\u8fc7\u7a0b\u4e2d\u91ca\u653e\u51fa\u7684\u5e26\u7535\u7c92\u5b50\u53ef\u80fd\u4f1a\u649e\u51fb\u5468\u56f4\u7684\u539f\u5b50\u548c\u5206\u5b50\uff0c\u5c06\u5b83\u4eec\u6495\u88c2\uff0c\u4ea7\u751f\u66f4\u591a\u7684\u5e26\u7535\u7c92\u5b50\u3002\u7136\u540e\uff0c\u4e00\u9635\u9635\u7684\u5e26\u7535\u7c92\u5b50\u53ef\u4ee5\u63a0\u8fc7\u5927\u6c14\u4e2d\u7684\u5c18\u57c3\u3001\u70df\u7070\u6216\u6c34\u6ef4\uff0c\u6709\u65f6\u4f1a\u4f7f\u8fd9\u4e9b\u6c34\u6ef4\u8db3\u591f\u5927\uff0c\u4ee5\u96e8\u7684\u5f62\u5f0f\u843d\u5230\u5730\u9762\u4e0a\u3002\n\u4e3a\u4e86\u4e86\u89e3\u5730\u9762\u6838\u8bd5\u9a8c\u662f\u5426\u771f\u7684\u589e\u52a0\u4e86\u964d\u96e8\u91cf\uff0c\u96f7\u4e01\u5927\u5b66(University Of Reding)\u5927\u6c14\u79d1\u5b66\u5bb6\u8d3e\u5c14\u65af\u00b7\u54c8\u91cc\u68ee(Giles Harrison)\u548c\u4ed6\u7684\u540c\u4e8b\u67e5\u770b\u4e86\u82cf\u683c\u5170\u5317\u90e8\u4e00\u4e2a\u504f\u8fdc\u5c9b\u5c7f\u4e0a\u6c14\u8c61\u7ad9\u7684\u51b7\u6218\u65f6\u671f\u964d\u96e8\u91cf\u8bb0\u5f55\u3002\u4ed6\u6307\u51fa\uff0c\u4ed6\u4eec\u4e4b\u6240\u4ee5\u9009\u62e9\u8fd9\u4e2a\u5730\u70b9\uff0c\u662f\u56e0\u4e3a\u90a3\u91cc\u7684\u964d\u6c34\u4e0d\u592a\u53ef\u80fd\u53d7\u5230\u7a7a\u6c14\u6c61\u67d3\u7684\u5f71\u54cd\uff0c\u7a7a\u6c14\u6c61\u67d3\u4e5f\u4f1a\u50ac\u751f\u4e91\u5c42\u5e76\u5f15\u53d1\u964d\u96e8\u3002\n\u4e3a\u4e86\u6d4b\u91cf\u5927\u6c14\u7684\u81ea\u7136\u7535\u573a\uff0c\u7814\u7a76\u5c0f\u7ec4\u4f7f\u7528\u4e86\u5728\u4f26\u6566\u9644\u8fd1\u7684\u4e00\u4e2a\u5730\u70b9\u6536\u96c6\u7684\u6570\u636e\uff0c\u5728\u90a3\u91cc\u8fd9\u6837\u7684\u6570\u636e\u66f4\u5bb9\u6613\u83b7\u5f97\u3002\u4ed6\u6307\u51fa\uff0c\u8fd9\u4e24\u4e2a\u5730\u70b9\u7a7a\u6c14\u4e2d\u7684\u653e\u5c04\u6027\u5c18\u57c3\u6c34\u5e73\u5f88\u53ef\u80fd\u662f\u76f8\u4f3c\u7684\uff0c\u56e0\u4e3a\u6765\u81ea\u5185\u534e\u8fbe\u5dde\u548c\u54c8\u8428\u514b\u65af\u5766\u7b49\u8bd5\u9a8c\u573a\u7684\u8f90\u5c04\u7fbd\u6d41\u5728\u5230\u8fbe\u82f1\u56fd\u65f6\u5df2\u7ecf\u5e7f\u6cdb\u6269\u6563\u3002\n\u8be5\u5c0f\u7ec4\u7684\u5206\u6790\u8868\u660e\uff0c\u4ece1962\u5e74\u52301964\u5e74\uff0c\u5730\u9762\u6838\u6b66\u5668\u8bd5\u9a8c\u4ea7\u751f\u7684\u5c18\u57c3\u666e\u904d\u5b58\u5728\u4e8e\u5e73\u6d41\u5c42\uff0c\u5c18\u57c3\u4e0e\u964d\u96e8\u91cf\u4e4b\u95f4\u5b58\u5728\u7740\u5f3a\u70c8\u7684\u8054\u7cfb\u3002\u7814\u7a76\u4eba\u5458\u4eca\u5929\u5728\u201c\u7269\u7406\u8bc4\u8bba\u5feb\u62a5\u201d(Physical Review Letters)\u4e0a\u62a5\u9053\uff0c\u5728\u82cf\u683c\u5170\u7684\u8fd9\u4e2a\u5730\u70b9\uff0c\u5f53\u5c18\u57c3\u6c34\u5e73\u9ad8\u4e8e\u5e73\u5747\u6c34\u5e73(\u6839\u636e\u5bf9\u5927\u6c14\u7535\u573a\u7684\u6d4b\u91cf\u5f97\u51fa\u7684\u7ed3\u679c)\u7684\u65f6\u5019\uff0c\u4e91\u66f4\u539a\uff0c\u964d\u96e8\u91cf\u9ad8\u51fa24%\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5e26\u76f8\u53cd\u7535\u8377\u7684\u7c92\u5b50\u76f8\u4e92\u5438\u5f15\uff0c\u5e26\u76f8\u540c\u7535\u8377\u7684\u7c92\u5b50\u76f8\u4e92\u6392\u65a5\u3002\u4f46\u7f57\u5179\u5b66\u9662(Rhodes College)\u7684\u7406\u8bba\u7269\u7406\u5b66\u5bb6\u8212\u5e03\u970d\u00b7\u73ed\u7eb3\u5409(Shubho Banerjee)\u8868\u793a\uff0c\u6db2\u6ef4\u7b49\u8f83\u5927\u7684\u7269\u4f53\u5373\u4f7f\u603b\u4f53\u7535\u8377\u76f8\u540c\uff0c\u4e5f\u53ef\u4ee5\u76f8\u4e92\u5438\u5f15\u3002\u5df4\u7eb3\u5409\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u6db2\u6ef4\u5f7c\u6b64\u9760\u8fd1\u65f6\uff0c\u7535\u8377\u4f1a\u79fb\u52a8\uff0c\u4f7f\u5f97\u6db2\u6ef4\u4e2d\u8ddd\u79bb\u5f7c\u6b64\u6700\u8fd1\u7684\u90e8\u5206\u5f62\u6210\u76f8\u53cd\u7684\u7535\u8377\uff0c\u4ece\u800c\u4ea7\u751f\u5438\u5f15\u4eba\u7684\u7535\u8377\u3002\n\u73ed\u7eb3\u5409\u8bf4\uff0c\u7814\u7a76\u5c0f\u7ec4\u7684\u53d1\u73b0\u53ef\u80fd\u4f1a\u5bf9\u5c0f\u89c4\u6a21\u7684\u5929\u6c14\u63a7\u5236\u4ea7\u751f\u5f71\u54cd\u3002\u4ed6\u5efa\u8bae\uff0c\u901a\u8fc7\u4f7f\u7528\u706b\u82b1\u53d1\u751f\u5668\u6216\u7c7b\u4f3c\u8bbe\u5907\u5c06\u5927\u91cf\u5e26\u7535\u7c92\u5b50\u5f15\u5165\u4e91\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u8bf1\u4f7f\u90a3\u91cc\u7684\u6db2\u6ef4\u805a\u5408\u3002\u54c8\u91cc\u68ee\u8ba4\u4e3a\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u5929\u6587\u5b66\u5bb6\u66f4\u597d\u5730\u4e86\u89e3\u5176\u4ed6\u884c\u661f\u4e0a\u7684\u5929\u6c14\u6a21\u5f0f\uff0c\u5982\u6728\u661f\u548c\u6d77\u738b\u661f\uff0c\u8fd9\u4e9b\u884c\u661f\u7684\u5927\u6c14\u5c42\u5145\u6ee1\u4e86\u95ea\u7535\u6216\u5b87\u5b99\u5c04\u7ebf\u649e\u51fb\u4ea7\u751f\u7684\u5e26\u7535\u7c92\u5b50\u3002", "note_en": "Radioactive fallout is rarely a good thing. But new research suggests charged particles emitted from Cold War\u2013era nuclear tests may have boosted rainfall thousands of kilometers away from the testing sites, by triggering electrical charges in the air that caused water droplets to coalesce.\n The United States, Soviet Union, and other nations often  tested nuclear weapons above ground in the 1950s and early 1960s. The fallout contained a devil\u2019s cocktail of radioactive elements that can have subtle effects in the atmosphere. Charged particles emitted during radioactive decay can smack into surrounding atoms and molecules, ripping them asunder and creating even more charged particles. Then, that flurry of charged particles can glom onto dust, soot, or water droplets in the atmosphere, sometimes making the droplets hefty enough to fall to the ground as rain.\n To see whether above-ground nuclear testing actually increased rainfall, University of Reading atmospheric scientist Giles Harrison and colleagues looked at Cold War\u2013era rainfall records from a weather station on a remote island north of Scotland. They chose that locale because precipitation there was less likely to be affected by air pollution, which can also seed clouds and trigger rainfall, he notes.\n For measurements of the atmosphere\u2019s natural electric field, the team used data gathered at a site near London, where such data were easier to obtain. The levels of radioactive fallout in the air at the two sites were likely similar because plumes of radiation from testing sites like Nevada and Kazakhstan would have diffused widely by the time they reached the United Kingdom, he notes.\n The team\u2019s analysis suggests a strong link between fallout and precipitation from 1962 through 1964, a period when fallout from above-ground testing of nuclear weapons was commonly present in the stratosphere. At the Scottish site, clouds were thicker, and  precipitation was 24% higher on days when above-average levels of fallout were present (as inferred from measurements of the atmosphere\u2019s electric field), the researchers report today in  Physical Review Letters.\n Typically, particles with opposite charges attract, and like charges repel. But larger objects like droplets can attract one another even if they have the same overall electrical charge, says Shubho Banerjee, a theoretical physicist at Rhodes College who was not involved in the research. That\u2019s because when droplets come close to one another, charges can move such that the portions of the droplets closest to each other develop opposite\u2014and thus attractive\u2014charges.\n The team\u2019s findings could have implications for small-scale weather control, Banerjee says. By using spark generators or similar equipment to introduce substantial numbers of charged particles into clouds, researchers could coax droplets there to coalesce, he suggests. Harrison suggests it could also help astronomers better understand weather patterns on other planets like Jupiter and Neptune, whose atmospheres are filled with charged particles generated by lightning or the impacts of cosmic rays.", "posttime": "2020-05-17 22:50:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5929\u6c14,fallout,\u5c18\u57c3", "title": "\u6838\u6cc4\u6f0f\u80fd\u8ba9\u5929\u6c14\u4e0b\u96e8\u5417\uff1f", "title_en": "Can Nuclear Fallout Make It Rain?", "transed": 1, "url": "https://www.sciencemag.org/news/2020/05/can-nuclear-fallout-make-it-rain", "via": "", "real_tags": ["\u5929\u6c14", "fallout", "\u5c18\u57c3"]}, {"category": "", "categoryclass": "", "imagename": "1d81c6ea2672487b3be0b0a98215703f.jpg", "infoid": 1002528, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7528186\u4e2a\u4e50\u9ad8\u7684\u9f7f\u8f6e\u5efa\u9020\u4e00\u4e2a\u957f\u957f\u7684\u8f6e\u7cfb\u3002\u4f7f\u7528\u4e86\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u4e50\u9ad8\u9f7f\u8f6e\u3002\u597d\u597d\u4eab\u53d7\u5427\uff01\u7075\u611f\u6765\u81ea\u4e39\u5c3c\u5c14\u00b7\u5fb7\u00b7\u5e03\u9c81\u56e0\u7684\u201c\u5b87\u5b99\u4e2d\u6700\u5927\u7684\u9f7f\u8f6e.", "note_en": "Building a long gear train using 186 Lego gears. Many different types of Lego gears are used. Enjoy! Inspired by Daniel de Bruin's \"universe's biggest gear r...", "posttime": "2020-05-17 22:48:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e50\u9ad8,googol,\u4e39\u5c3c\u5c14", "title": "\u4f7f\u7528\u4e50\u9ad8\u9f7f\u8f6e\u8fdb\u884c\u56fa\u7279\u5f02\uff1a1\u51cf\u4ef7[\u89c6\u9891]", "title_en": "Making a Googol:1 Reduction with Lego Gears [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=QwXK4e4uqXY", "via": "", "real_tags": ["\u4e50\u9ad8", "googol", "\u4e39\u5c3c\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "4a25713853bb73a03451f373818f7c89.jpg", "infoid": 1002527, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5370\u5ea6\u6700\u7e41\u5fd9\u7684\u57ce\u5e02\u4e4b\u4e00\uff0c\u8fbe\u5df4\u74e6\u62c9\u6bcf\u5929\u6b65\u884c\u548c\u9a91\u81ea\u884c\u8f66\u8fd0\u9001\u6570\u5341\u4e07\u4efd\u996d\u83dc\u3002\u65b0\u4e00\u6ce2\u9001\u9910\u521d\u521b\u516c\u53f8\u60f3\u77e5\u9053\u4ed6\u4eec\u662f\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\nBBC\u672a\u6765\u4e3a\u60a8\u5e26\u6765\u4e86\u6df1\u5165\u800c\u4e25\u8c28\u7684\u6545\u4e8b\uff0c\u5e2e\u52a9\u60a8\u9a7e\u9a6d\u5f53\u524d\u7684\u6d41\u884c\u75c5\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u8fd9\u5e76\u4e0d\u662f\u60a8\u60f3\u8981\u9605\u8bfb\u7684\u5168\u90e8\u5185\u5bb9\u3002\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u5c06\u63a8\u51fa\u4e00\u7cfb\u5217\u8282\u76ee\u6765\u5e2e\u52a9\u4f60\u9003\u8131\u3002\u6211\u4eec\u5c06\u91cd\u6e29\u8fc7\u53bb\u4e09\u5e74\u5728\u6211\u4eec\u7684\u5c01\u9501\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u529f\u80fd\u3002\n\u4f60\u4f1a\u53d1\u73b0\u4e16\u754c\u4e0a\u6700\u4f1f\u5927\u7684\u592a\u7a7a\u4efb\u52a1\u7684\u6545\u4e8b\uff0c\u5173\u4e8e\u6211\u4eec\u7684\u732b\u662f\u5426\u771f\u7684\u7231\u6211\u4eec\u7684\u771f\u76f8\uff0c\u5c06\u975e\u6cd5\u6e14\u6c11\u7ef3\u4e4b\u4ee5\u6cd5\u7684\u53f2\u8bd7\u822c\u7684\u72e9\u730e\uff0c\u4ee5\u53ca\u8ba9\u57cb\u85cf\u5df2\u4e45\u7684\u4e8c\u6218\u5766\u514b\u8d77\u6b7b\u56de\u751f\u7684\u5c0f\u56e2\u961f\u3002\u4f60\u627e\u4e0d\u5230\u7684\u662f\uff0c\u55ef\uff0c\u4f60\u77e5\u9053\u5417\u3002\u597d\u597d\u4eab\u53d7\u5427\u3002\n\u6bcf\u5929\u65e9\u4e0a\uff0c\u4e00\u5468\u516d\u5929\uff0c\u57fa\u5170\u00b7\u52a0\u4e07\u5fb7(Kiran Gavande)\u90fd\u4f1a\u9a91\u7740\u81ea\u884c\u8f66\u5728\u5b5f\u4e70\u7684\u4e0b\u5e15\u96f7\u5c14(Low Parel)\u793e\u533a\u5de1\u89c6\uff0c\u4ece\u987e\u5ba2\u90a3\u91cc\u6536\u96c6\u88ab\u79f0\u4e3a\u8fbe\u5df4\u65af(Dabbas)\u7684\u5348\u9910\u76d2\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5c0f\u65f6\u91cc\uff0cGavande\u548c\u4ed6\u7684\u540c\u4e8bdabbawalas(\u201c\u642c\u8fd0\u7bb1\u7684\u4eba\u201d)\u5c06\u591a\u6b21\u7a7f\u68ad\u5728\u7e41\u5fd9\u7684\u57ce\u5e02\u4e2d\uff0c\u4e3a\u5458\u5de5\u63d0\u4f9b\u6570\u5341\u4e07\u4efd\u5bb6\u5ead\u70f9\u8c03\u7684\u996d\u83dc\uff0c\u53ca\u65f6\u8d76\u4e0a\u5348\u9910\u65f6\u95f4\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0cDeliveroo\u548cUber Eats\u7b49\u5728\u7ebf\u5916\u5356\u516c\u53f8\u5df2\u7ecf\u5c06\u4e13\u95e8\u51c6\u5907\u7684\u98df\u7269\u9001\u5230\u4f60\u7684\u529e\u516c\u684c\u4e0a\uff0c\u8fd9\u4f3c\u4e4e\u662f\u57fa\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5962\u4f88\u54c1\u7684\u5dc5\u5cf0\u3002\u7c7b\u4f3c\u7684\u521d\u521b\u4f01\u4e1a\u5728\u5370\u5ea6\u4e5f\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u3002\u4f46\u8fbe\u5df4\u74e6\u62c9\u65af\u5df2\u7ecf\u8fd9\u6837\u505a\u4e86125\u5e74-\u65b0\u6765\u8005\u6709\u5f88\u591a\u9700\u8981\u5b66\u4e60\u7684\u4e1c\u897f\u3002\n\u5c3d\u7ba1\u4f9d\u8d56\u4e8e\u4e0d\u719f\u7ec3\u7684\u52b3\u52a8\u529b\uff0c\u53cc\u5c42\u7684\u7ba1\u7406\u7cfb\u7edf\uff0c\u6ca1\u6709\u6bd4\u5b5f\u4e70\u7684\u706b\u8f66\u7f51\u7edc\u66f4\u9ad8\u79d1\u6280\u7684\u4e1c\u897f\uff0c\u8fd9\u4e2a5000\u591a\u4eba\u7684\u5408\u4f5c\u793e\u88ab\u516c\u8ba4\u4e3a\u4e16\u754c\u4e0a\u6700\u9ad8\u6548\u7684\u7269\u6d41\u7cfb\u7edf\u4e4b\u4e00\u3002\u4ed6\u4eec\u505a\u4e86\u4e00\u4e2a\u6574\u9f50\u7684\u526f\u7ebf\uff0c\u63a5\u5f85\u6765\u81ea\u8054\u90a6\u5feb\u9012(FedEx)\u548c\u4e9a\u9a6c\u900a(Amazon)\u7b49\u5feb\u9012\u5de8\u5934\u7684\u9ad8\u7ba1\u3002\u5c31\u8fde\u7406\u67e5\u5fb7\u00b7\u5e03\u5170\u68ee(Richard Branson)\u4e5f\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u5b66\u4e60\u4ed6\u4eec\u7684\u79d8\u5bc6\u3002\n\u4e0eDeliveroo\u548cUber Eats-\u6216\u8005\u5370\u5ea6\u672c\u571f\u7684\u540c\u7c7b\u4ea7\u54c1\uff0c\u5982Swiggy\u548cRunnr-\u4e0d\u540c\uff0cdabbawalas\u4e0d\u9001\u9910\u5385\u7684\u98df\u7269\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u62ff\u8d77\u5bb6\u91cc\u505a\u7684\u996d-\u4e3b\u8981\u662f\u4ece\u987e\u5ba2\u81ea\u5df1\u7684\u623f\u5b50\u91cc-\u5e76\u53ca\u65f6\u9001\u5230\u4ed6\u4eec\u7684\u5de5\u4f5c\u573a\u6240\u5403\u5348\u996d\u3002\n\u201c\u6211\u4eec\u4e0d\u559c\u6b22\u5e94\u7528\u7a0b\u5e8f\uff0c\u201d\u6d3b\u52a8\u7ec4\u7ec7\u8005\u62c9\u4ec0\u7c73\u5361\u00b7\u6c99\u963f(Rashmika Shah)\u8bf4\uff0c\u5979\u96c7\u4f63\u4e86Shivaji Sawant\u5728\u5b5f\u4e70\u8bc1\u5238\u4ea4\u6613\u6240\u7ed9\u5979\u7684\u4e08\u592b\u9001\u4e00\u4efddabba\u3002\u201c\u6211\u4eec\u8ba4\u8bc6\u8fd9\u4e2a\u4eba\u5f88\u4e45\u4e86\uff0c\u6211\u4eec\u77e5\u9053\u4ed6\u4f1a\u505a\u4e00\u4efd\u79f0\u804c\u7684\u5de5\u4f5c\u3002\u201d\n\u8fd9\u9879\u670d\u52a1\u4e0d\u4ec5\u53ef\u9760\uff0c\u800c\u4e14\u5f88\u4fbf\u5b9c-\u6bcf\u6708\u5927\u7ea6800\u5362\u6bd4(\u4e0d\u523010 GB)\u3002\u4eba\u4eec\u8ba4\u4e3a\u628a\u98df\u7269\u9001\u5230\u529e\u516c\u5ba4\u662f\u4e00\u79cd\u5962\u4f88\uff0c\u201c\u5b5f\u4e70\u8fbe\u5df4\u74e6\u62c9\u65af\u7684\u534f\u8c03\u5458\u82cf\u535a\u5fb7\u00b7\u6851\u683c(Subodh Sangle)\u8bf4\u3002\u201c\u4f46\u6211\u4eec\u5c06\u6211\u4eec\u7684\u670d\u52a1\u63d0\u4f9b\u7ed9\u4ece\u4fdd\u5b89\u5230\u9996\u5e2d\u6267\u884c\u5b98\u7684\u6bcf\u4e00\u4e2a\u4eba\u3002\u201d\n\u5927\u591a\u6570\u8fbe\u5df4\u74e6\u62c9\u5f88\u5feb\u5c31\u4f1a\u89e3\u6563\u4ed6\u4eec\u7684\u65b0\u6570\u5b57\u7ade\u4e89\u5bf9\u624b\u3002\u201c\u6ca1\u6709\u7ade\u4e89\u5bf9\u624b\u3002\u4ed6\u4eec\u5c06\u65e0\u6cd5\u8ddf\u4e0a\u6211\u4eec\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u201c\u52a0\u4e07\u5fb7\u8bf4\u3002\u201c\u8fd9\u91cc\u53ea\u6709\u4e00\u5bb6\u5b5f\u4e70\u8fbe\u5df4\u74e6\u62c9\u3002\u201d\n\u8fd9\u662f\u5f88\u96be\u8fa9\u9a73\u7684\u3002\u8be5\u7ec4\u7ec7\u4ee5\u975e\u5e38\u9ad8\u7684\u4e1a\u7ee9\u6c34\u5e73\u8fd0\u8425\u5176\u4f4e\u6210\u672c\u670d\u52a1\u3002\u54c8\u4f5b\u5546\u5b66\u9662(Harvard Business School)2010\u5e74\u7684\u4e00\u9879\u7814\u7a76\u5c06\u5176\u8bc4\u4e3a\u201c\u516d\u897f\u683c\u739b\u201d\uff0c\u8fd9\u610f\u5473\u7740\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u6bcf\u767e\u4e07\u7b14\u4ea4\u6613\u4e2d\u72af\u7684\u9519\u8bef\u4e0d\u52303.4\u4e2a\u3002\u6bcf\u5929\u5f80\u8fd4\u4e8e\u5927\u7ea620\u4e07\u540d\u5ba2\u6237\u4e4b\u95f4\u7684\u9001\u8d27\uff0c\u76f8\u5f53\u4e8e\u4e00\u5e74\u5185\u5ef6\u8bef\u6216\u9519\u8fc7\u4e86400\u591a\u4e2adabbas\u3002\n\u53ca\u65f6\u6027\u81f3\u5173\u91cd\u8981\u3002\u5348\u9910\u76d2\u5fc5\u987b\u5728\u6bcf\u592913\uff1a00\u4e4b\u524d\u9001\u5230\u5ba2\u6237\u624b\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u957f\u8fbe3\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u624d\u80fd\u9001\u5230\u3002\u6851\u683c\u8bf4\uff0c\u6574\u4e2a\u57ce\u5e02\u90fd\u53ef\u80fd\u53d7\u5230\u5ef6\u8fdf\u4ea4\u8d27\u7684\u5f71\u54cd\u3002\u516c\u4f17\u548c\u4ea4\u8b66\u90fd\u6325\u624b\u901a\u8fc7\u8fbe\u5df4\u74e6\u62c9\u3002\u201c\u5982\u679c\u4f60\u5728\u8857\u4e0a\u770b\u5230\u8fbe\u5df4\u74e6\u62c9\uff0c\u4f60\u4f1a\u8ba9\u8def\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\n\u9001\u8d27\u65f6\u95f4\u8868\u4e5f\u6709\u5185\u7f6e\u7684\u7f13\u51b2\u5668\u3002\u6851\u683c\u5c14\u8bf4\uff0c\u5982\u679c\u5feb\u9012\u572813\uff1a00\u5230\u671f\uff0c\u8fbe\u5df4\u74e6\u62c9\u7684\u76ee\u6807\u5c06\u572812\uff1a00\u5de6\u53f3-\u5373\u4f7f\u76ee\u7684\u5730\u53ea\u6709\u4e00\u523b\u949f\u7684\u8def\u7a0b\u3002\u8fd9\u4f7f\u4ed6\u53ef\u4ee5\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u5373\u5174\u53d1\u6325\u3002\u6bcf15\u523020\u4e2a\u8fbe\u5df4\u74e6\u62c9\uff0c\u603b\u4f1a\u6709\u4eba\u5f85\u547d\uff0c\u4ee5\u9632\u5176\u4e2d\u4e00\u4e2a\u5ef6\u8bef\u3002\n\u5c3d\u7ba1\u65e5\u7a0b\u5b89\u6392\u5f88\u7d27\uff0c\u4f46\u5927\u591a\u6570\u65f6\u5019\u8fbe\u5df4\u74e6\u62c9\u770b\u8d77\u6765\u51fa\u4eba\u610f\u6599\u5730\u653e\u677e\uff0c\u5728\u6574\u7406\u4ed6\u4eec\u7684\u8fbe\u5df4\u65f6\u5f00\u73a9\u7b11\u548c\u804a\u5929\u3002\u4f46\u5f53\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4e0b\u4e00\u9636\u6bb5\u4e34\u8fd1\u65f6\uff0c\u4f1a\u6709\u4e94\u5206\u949f\u7684\u7a81\u7136\u5267\u70c8\u6d3b\u52a8\u3002\n12\u70b945\u5206\uff0c\u4e00\u53ea\u8fbe\u5df4\u74e6\u62c9\u9a91\u7740\u81ea\u884c\u8f66\u8dd1\u8fc7\u8857\u89d2\uff0c\u51b2\u8fdb\u4e00\u5ea7\u529e\u516c\u697c\u5927\u58f0\u558a\u53eb\u3002\u6851\u683c\u8bf4\uff1a\u201c\u4f60\u60f3\u770b\u60ca\u614c\u5931\u63aa\u7684\u8fbe\u5df4\u74e6\u62c9\uff0c\u90a3\u5c31\u53bb\u5427\u3002\u201d\u4ed6\u8bf4\uff0c\u6309\u7167\u4ed6\u81ea\u5df1\u7684\u6807\u51c6\uff0c\u8fbe\u5df4\u74e6\u62c9\u665a\u4e86\u4e00\u6b65\uff0c\u4f46\u987e\u5ba2\u53ef\u80fd\u4ece\u6765\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\n\u8ddf\u7740\u4ed6\u4eec\u8d70\u4e00\u5929\u662f\u4e00\u9879\u8270\u82e6\u7684\u5de5\u4f5c\u3002\u6709\u65f6\u6211\u4f1a\u5206\u5fc3\uff0c\u5f53\u6211\u8f6c\u8eab\u56de\u53bb\u65f6\uff0c\u6211\u8ddf\u8e2a\u7684\u90a3\u7fa4\u4eba\u5df2\u7ecf\u8d70\u4e86\u3002\u4e25\u683c\u7684\u8ba1\u65f6\u751a\u81f3\u5ef6\u4f38\u5230\u4e86\u987e\u5ba2\u8eab\u4e0a-\u5982\u679c\u6574\u4e2a\u5348\u9910\u76d2\u65e9\u4e0a\u6765\u53d6\u665a\u4e86\u4e24\u4e09\u6b21\u4ee5\u4e0a\uff0c\u4ed6\u4eec\u5c31\u4f1a\u88ab\u4e22\u5f03\u3002\n\u6bcf\u4e2adabbawala\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u6536\u96c6\u548c\u9012\u9001\u533a\u57df\u3002\u4e0a\u534810\u70b9\u5de6\u53f3\uff0c\u4ed6\u4eec\u6b65\u884c\u6216\u9a91\u81ea\u884c\u8f66\u5728\u9644\u8fd1\u5de1\u89c6\uff0c\u5e73\u5747\u6536\u96c630000\u8fbe\u5df4\u3002\u8fd9\u4e9b\u4e1c\u897f\u5728\u5f53\u5730\u7684\u529e\u516c\u5ba4\u6216\u706b\u8f66\u7ad9\u88ab\u5206\u62e3\uff0c\u6bcf\u4e2a\u8fbe\u5df4\u74e6\u62c9\u90fd\u4f1a\u4e0e\u8fbe\u5df4\u4e00\u5bb6\u4e00\u8d77\u767b\u4e0a\u4e00\u5217\u706b\u8f66\uff0c\u524d\u5f80\u4ed6\u4eec\u7684\u9001\u8d27\u533a\u3002\u5230\u8fbe\u65f6\uff0c\u6765\u81ea\u5168\u5e02\u5404\u5730\u7684\u8fbe\u5df4\u5728\u88ab\u88c5\u8f7d\u5230\u81ea\u884c\u8f66\u548c\u624b\u63a8\u8f66\u4e0a\u8fdb\u884c\u6700\u540e\u4e00\u6bb5\u6bd4\u8d5b\u4e4b\u524d\uff0c\u4f1a\u518d\u6b21\u5206\u62e3\u3002\n\u8fd9\u4e00\u7cfb\u5217\u590d\u6742\u7684\u4ea4\u6d41\u4f9d\u8d56\u4e8e\u6bcf\u4e2a\u5348\u9910\u76d2\u4e0a\u8349\u8349\u5199\u4e0b\u7684\u6df1\u5965\u7684\u5b57\u6bcd\u6570\u5b57\u4ee3\u7801-\u5916\u884c\u65e0\u6cd5\u8fa8\u8ba4\uff0c\u4f46\u8bbe\u8ba1\u6210\u6240\u6709\u8fbe\u5df4\u74e6\u62c9\u4eba\u90fd\u5f88\u5bb9\u6613\u7406\u89e3\u3002\n\u8fbe\u5df4\u74e6\u62c9\u65af\u5bf9\u8fd9\u4efd\u5de5\u4f5c\u7684\u627f\u8bfa\u90e8\u5206\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u5de5\u8d44\u5f88\u9ad8-\u5927\u7ea6\u6bcf\u670812000\u5362\u6bd4(140\u82f1\u9551)\uff0c\u5bf9\u4e8e\u672c\u8d28\u4e0a\u662f\u975e\u719f\u7ec3\u5de5\u4eba\u7684\u5370\u5ea6\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4efd\u4e0d\u9519\u7684\u5de5\u8d44\u3002\u8fbe\u5df4\u74e6\u62c9\u7684\u540d\u58f0\u4e5f\u7ed9\u8fd9\u4efd\u5de5\u4f5c\u5e26\u6765\u4e86\u4e00\u5b9a\u7684\u5a01\u671b\u3002\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u8fbe\u5df4\u74e6\u62c9\u7684\u5b69\u5b50\u5e26\u6765\u6298\u6263\u624b\u673a\u8ba2\u9605\u8d39\u548c\u5956\u5b66\u91d1\u7b49\u798f\u5229\uff0c\u8fd9\u4e9b\u4f18\u60e0\u662f\u7531\u70ed\u8877\u4e8e\u4e0e\u8fd9\u4e2a\u53d7\u4eba\u5c0a\u656c\u7684\u7f51\u7edc\u5efa\u7acb\u8054\u7cfb\u7684\u7ec4\u7ec7\u8d44\u52a9\u7684\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u5408\u4f5c\u793e\uff0c\u6240\u6709\u7684\u8fbe\u5df4\u74e6\u62c9\u90fd\u662f\u88ab\u9009\u4e3e\u51fa\u6765\u7684\u88ab\u79f0\u4e3a\u7a46\u5361\u8fbe\u59c6(Mukadams)\u7684\u76d1\u7763\u5458\u7684\u5e73\u7b49\u5408\u4f5c\u4f19\u4f34\u3002\u201c\u4f60\u4e0d\u9700\u8981\u5bf9\u4efb\u4f55\u4eba\u8bf4\u2018\u8428\u62c9\u59c6\uff0c\u5148\u751f\u2019\u6216\u2018\u662f\u7684\uff0c\u5148\u751f\u2019\uff0c\u201d\u8fbe\u5df4\u74e6\u62c9\u00b7\u963f\u5c3c\u5c14\u00b7\u5e03\u62c9\u52a0\u7279(Dabbawala Anil Bhawagat)\u8bf4\u3002\n\u4f46\u4ed6\u4eec\u7684\u5949\u732e\u8fd8\u6709\u66f4\u6df1\u5c42\u6b21\u7684\u539f\u56e0\u3002\u8fbe\u5df4\u74e6\u62c9\u4eba\u51e0\u4e4e\u5b8c\u5168\u5c5e\u4e8e\u5d07\u62dc\u5370\u5ea6\u6559\u795e\u7ef4\u5854\u62c9\u7684\u74e6\u5361\u91cc\u793e\u533a\u3002Vithala\u6559\u5bfc\u8bf4\uff0c\u6350\u8d60\u98df\u7269\u662f\u4f60\u80fd\u505a\u7684\u6700\u5927\u7684\u6350\u8d60\u4e4b\u4e00\u3002\u6851\u683c\u8bf4\uff0c\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u8bf4\uff0c\u6211\u4eec\u5728\u8c0b\u751f\u7684\u540c\u65f6\u83b7\u5f97\u4e86\u8d70\u7075\u6027\u9053\u8def\u7684\u9ec4\u91d1\u673a\u4f1a\u3002\n\u5373\u4fbf\u5982\u6b64\uff0c\u968f\u7740\u57fa\u4e8eAPP\u7684\u9001\u8d27\u670d\u52a1\u7684\u4fbf\u5229\u6027\u5927\u884c\u5176\u9053\uff0c\u8fbe\u5df4\u74e6\u62c9\u4eec\u8fd8\u4f1a\u8ddf\u4e0a\u5417\uff1f\u7f8e\u56fd\u521d\u521b\u4f01\u4e1a\u52a0\u901f\u5668500\u521d\u521b\u4f01\u4e1a\u5408\u4f19\u4eba\u6f58\u5361\u5409\u00b7\u8d3e\u6069(Pankaj Jain)\u8868\u793a\uff0c\u9001\u9910\u670d\u52a1\u7262\u7262\u5438\u5f15\u4e86\u5370\u5ea6\u65b0\u4e00\u4ee3\u79d1\u6280\u521b\u4e1a\u8005\u7684\u76ee\u5149\u3002\n\u4f46\u4ed6\u8ba4\u4e3a\u4efb\u4f55\u5a01\u80c1\u90fd\u8fd8\u6709\u4e00\u6bb5\u8def\u8981\u8d70\u3002\u4ed6\u8868\u793a\uff0c\u8be5\u884c\u4e1a\u5c1a\u672a\u542f\u52a8\u3002\u90e8\u5206\u95ee\u9898\u662f\uff0c\u516c\u53f8\u53ea\u662f\u8ba4\u4e3a\u4ed6\u4eec\u53ef\u4ee5\u5c06\u7845\u8c37\u7684\u5546\u4e1a\u6a21\u5f0f\u79fb\u690d\u5230\u5370\u5ea6\u3002\n\u8d3e\u6069\u8bf4\uff0c\u8bb8\u591a\u516c\u53f8\u4e3a\u4e86\u8ffd\u6c42\u5e02\u573a\u4efd\u989d\u800c\u6d6a\u8d39\u4e86\u6295\u8d44\u8005\u7684\u8d44\u91d1\uff0c\u5f00\u53d1\u5947\u7279\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u63d0\u4f9b\u6298\u6263\uff0c\u800c\u4e0d\u662f\u5efa\u7acb\u53ef\u9760\u7684\u4f9b\u5e94\u94fe\u548c\u575a\u5b9e\u7684\u5546\u4e1a\u8ba1\u5212\u3002\u4ed6\u8ba4\u4e3a\u98df\u54c1\u79d1\u6280\u4f01\u4e1a\u53ef\u4ee5\u4ece\u8fbe\u5df4\u74e6\u62c9\u7684\u201c\u5f3a\u5927\u57fa\u672c\u9762\u201d\u4e2d\u5b66\u4e60\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\u5370\u5ea6\u7684\u5916\u53562.0\u5c06\u4f1a\u662f\u6280\u672f\u4e0a\u7684\u8fbe\u5df4\u74e6\u62c9\u65af\u3002\u201d\n\u4ed6\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u3002Swiggy\u548cRunnr\u8fd9\u4e24\u5bb6\u9886\u5148\u7684\u79d1\u6280\u5916\u5356\u516c\u53f8\u90fd\u5229\u7528\u4e86dabbawalas\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\u603b\u90e8\u4f4d\u4e8e\u73ed\u52a0\u7f57\u5c14\u7684runnr\u4f7f\u7528\u4e0e\u4f18\u6b65(Uber)\u7b49\u62fc\u8f66\u516c\u53f8\u7c7b\u4f3c\u7684\u4f17\u5305\u6a21\u5f0f\u5efa\u7acb\u4e86\u9001\u8d27\u670d\u52a1\u3002\n\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u83ab\u5e0c\u7279\u00b7\u5e93\u9a6c\u5c14\u8868\u793a\uff0c\u4e00\u5e74\u524d\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u8fdb\u519b\u5b5f\u4e70\u65f6\uff0c\u4ed6\u4eec\u8054\u7cfb\u4e86\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\uff0c\u4ee5\u83b7\u5f97\u4e00\u4e9b\u6307\u5bfc\u610f\u89c1\u3002\u8be5\u516c\u53f8\u8fd8\u7b7e\u7ea6\u4e86\u5927\u7ea6200\u540d\u8fbe\u5df4\u74e6\u62c9\uff0c\u5728\u4ed6\u4eec\u5b8c\u6210\u5348\u9910\u9001\u8d27\u540e\u4ece\u4e8b\u517c\u804c\u5de5\u4f5c\u3002\nRunnr\u5b66\u5230\u7684\u4e00\u8bfe\u662f\u5982\u4f55\u9a7e\u9a6d\u5b5f\u4e70\u3002\u8c37\u6b4c\u5730\u56fe\u5c06\u57ce\u5e02\u5212\u5206\u4e3a\u8857\u533a\u7684\u65b9\u5f0f\u6ca1\u6709\u8003\u8651\u4ea4\u901a\uff0c\u4f46\u591a\u5e74\u7684\u7ecf\u9a8c\u544a\u8bc9\u8fbe\u5df4\u74e6\u62c9\u4eba\u74f6\u9888\u5728\u54ea\u91cc\u3002\u5e93\u9a6c\u5c14\u8bf4\uff1a\u201c\u6ca1\u6709\u5176\u4ed6\u7cfb\u7edf\u62e5\u6709\u6bcf\u4e2a\u5730\u533a\u7684\u8fd9\u79cd\u7ea7\u522b\u7684\u6570\u636e\u3002\u8fd9\u786e\u5b9e\u5e2e\u52a9\u6211\u4eec\u7f29\u77ed\u4e86\u9001\u8d27\u65f6\u95f4\u3002\u201c\u3002\n\u9664\u4e86\u6309\u9700\u670d\u52a1\uff0crunnr\u73b0\u5728\u8fd8\u5728\u5c1d\u8bd5\u5b9a\u671f\u5411\u73ed\u52a0\u7f57\u5c14\u7684\u5927\u578b\u529e\u516c\u5ba4\u63d0\u4f9b\u5348\u9910\u9001\u8d27\u670d\u52a1\uff0c\u8fd9\u8ba9\u5b83\u4e0edabbawalas\u5c55\u5f00\u4e86\u66f4\u76f4\u63a5\u7684\u7ade\u4e89\u3002\n\u7136\u800c\uff0c\u9884\u8ba2\u7684\u9001\u8d27\u5fc5\u987b\u51c6\u65f6\u5230\u8fbe\u3002\u5e93\u9a6c\u5c14\u8bf4\uff1a\u201c\u8fd9\u662f\u66f4\u5173\u952e\u7684\u4efb\u52a1\u3002\u201d\u5c31\u50cf\u8fbe\u5df4\u74e6\u62c9\u4e00\u6837\uff0c\u6211\u4eec\u6b63\u8bd5\u56fe\u5efa\u7acb\u4e00\u4e2a\u5bb9\u9519\u80fd\u529b\u6781\u5f3a\u7684\u7cfb\u7edf\u3002\u8fd9\u5305\u62ec\u5e7f\u6cdb\u7684\u53f8\u673a\u57f9\u8bad\uff0c\u4e25\u683c\u7684\u65f6\u95f4\u8868\uff0c\u4ee5\u53ca\u8c03\u6574\u53f8\u673a\u6fc0\u52b1\u63aa\u65bd\uff0c\u5956\u52b1\u51c6\u65f6\u9001\u8d27\uff0c\u800c\u4e0d\u662f\u8ba2\u5355\u6570\u91cf\u3002\n\u5e93\u9a6c\u5c14\u8ba4\u4e3a\uff0c\u91c7\u7528\u66f4\u591a\u7684\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u8fbe\u5df4\u74e6\u62c9\u4e00\u5bb6\u3002\u4e0e\u5f53\u5730\u77e5\u8bc6\u76f8\u7ed3\u5408\uff0c\u5730\u56fe\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u521b\u5efa\u66f4\u597d\u7684\u9001\u8d27\u8def\u7ebf\uff0c\u8fd9\u4e9b\u8def\u7ebf\u53ef\u4ee5\u5728\u5ba2\u6237\u52a0\u5165\u548c\u79bb\u5f00\u65f6\u8fc5\u901f\u8c03\u6574\u3002\u5e93\u9a6c\u5c14\u8868\u793a\uff0c\u5982\u679cRunnr\u51b3\u5b9a\u5728\u5b5f\u4e70\u63a8\u51fa\u9884\u5b9a\u7684\u5348\u9910\u9001\u8d27\u670d\u52a1\uff0c\u4ed6\u5c06\u8003\u8651\u4e0e\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u5408\u4f5c\u3002\n\u7136\u800c\uff0c\u5e15\u4e07\u00b7\u963f\u683c\u62c9\u74e6\u5c14(Pawan Agrawal)\u4e0d\u592a\u786e\u5b9a\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u4f1a\u5f88\u5feb\u91c7\u7528\u65b0\u6280\u672f\u3002\u4f5c\u4e3a\u4e00\u540d\u7ba1\u7406\u4e3b\u9898\u7684\u52b1\u5fd7\u6f14\u8bb2\u8005\uff0c\u963f\u683c\u62c9\u74e6\u5c14\u5728\u8fbe\u5df4\u74e6\u62c9\u7f51\u7edc\u4e0a\u83b7\u5f97\u4e86\u535a\u58eb\u5b66\u4f4d\uff0c\u73b0\u5728\u4ed6\u5411\u4e16\u754c\u5404\u5730\u7684\u4f01\u4e1a\u8bb2\u6388\u5982\u4f55\u5e94\u7528\u8be5\u7ec4\u7ec7\u7684\u4e00\u4e9b\u6d41\u7a0b\u3002\u963f\u683c\u62c9\u74e6\u5c14\u6307\u51fa\uff0c\u8bb8\u591a\u8fbe\u5df4\u74e6\u62c9\u4eba\u8d85\u8fc750\u5c81\uff0c\u6ca1\u6709\u9000\u4f11\u5e74\u9f84\u3002\u201c\u6211\u8ba4\u4e3a\u8fd9\u9700\u8981\u65f6\u95f4\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4f46\u4ed6\u4eec\u7684\u4f4e\u6280\u672f\u65b9\u6cd5\u53ef\u80fd\u662f\u4e00\u79cd\u4f18\u52bf\u3002\u8fbe\u5df4\u74e6\u62c9\u4e3a\u6570\u5b57\u521d\u521b\u516c\u53f8\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u670d\u52a1\u3002\u201c\u4f60\u4e0d\u80fd\u5728\u7f51\u4e0a\u8ba2\u8d2d\u5bb6\u5e38\u83dc\uff0c\u201d\u4ed6\u8bf4\u3002\u5728\u5b5f\u4e70\u62e5\u6324\u7684\u8857\u9053\u4e0a\uff0c\u706b\u8f66\u548c\u81ea\u884c\u8f66\u6bd4\u6c7d\u8f66\u548c\u6469\u6258\u8f66\u66f4\u5feb\u3002Dabbawala Gangaram Hemade\u540c\u610f\uff1a\u5982\u679c\u4f60\u9a91\u6469\u6258\u8f66\uff0c\u4f60\u5fc5\u987b\u9075\u5b88\u6240\u6709\u7684\u89c4\u5219\uff0c\u505c\u8f66\u662f\u4e2a\u95ee\u9898\u3002\u8fd9\u6837\uff0c\u5373\u4f7f\u5728\u4ea4\u901a\u7e41\u5fd9\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u79fb\u52a8\u5230\u4efb\u4f55\u5730\u65b9\u3002\n\u7136\u800c\uff0c\u8fbe\u5df4\u74e6\u62c9\u5e76\u4e0d\u5bb3\u6015\u62e5\u62b1\u65b0\u7684\u673a\u4f1a\u3002\u4ed6\u4eec\u6b63\u5728\u4e0e\u5370\u5ea6\u7535\u5546\u5de8\u5934Flipkart\u6d3d\u8c08\u8fdb\u884c\u6700\u540e\u4e00\u82f1\u91cc\u7684\u9001\u8d27\u4e8b\u5b9c\u3002\u5176\u4e2d\u4e00\u4e2a\u7ec4\u7ec7\u6b63\u5728\u4e0e\u521d\u521b\u4f01\u4e1aRaw Pressery\u5408\u4f5c\uff0c\u6309\u9700\u63d0\u4f9b\u5065\u5eb7\u679c\u6c41\u3002\n\u6839\u636e\u6851\u683c\u7684\u8bf4\u6cd5\uff0c\u5370\u5ea6\u7684\u5065\u5eb7\u996e\u98df\u70ed\u6f6e\u5bf9\u8fbe\u5df4\u74e6\u62c9\u6709\u5229\uff0c\u56e0\u4e3a\u98df\u54c1\u516c\u53f8\u6b63\u5728\u8f6c\u5411\u8fbe\u5df4\u74e6\u62c9\u9001\u8d27\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u65b0\u4f01\u4e1a\u7684\u5229\u6da6\u5c06\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u7684\u6708\u85aa\u4ece12000\u5362\u6bd4\u63d0\u9ad8\u523020000\u5362\u6bd4\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6851\u683c\u9884\u8ba1\u6838\u5fc3\u4e1a\u52a1\u4e0d\u4f1a\u6539\u53d8\u3002\u9996\u5148\uff0c\u4ed6\u8ba4\u4e3a\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u4e0e\u8fd9\u4efd\u5de5\u4f5c\u7684\u7cbe\u795e\u8054\u7cfb\u603b\u662f\u4f1a\u7ed9\u4ed6\u4eec\u5e26\u6765\u4f18\u52bf\u3002\u4ed6\u8bf4\uff1a\u201c\u65b0\u516c\u53f8\u7ed9\u4ed6\u4eec\u7684\u5ba2\u6237\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u4f18\u60e0\uff0c\u4f46\u4ed6\u4eec\u53ea\u662f\u5bf9\u62a2\u5360\u5e02\u573a\u611f\u5174\u8da3\u3002\u201d\u8fbe\u5df4\u74e6\u62c9\u592b\u5987\u8fd9\u4e48\u505a\u6709\u66f4\u6df1\u5c42\u6b21\u7684\u539f\u56e0\u3002\u4e3a\u4ed6\u4eec\u7684\u5ba2\u6237\u670d\u52a1\u5c31\u50cf\u4e3a\u4ed6\u4eec\u7684\u4e0a\u5e1d\u670d\u52a1\u3002\u201c\u3002\n\u5728Facebook\u4e0a\u52a0\u5165\u6211\u4eec80\u591a\u4e07\u7c89\u4e1d\u7684\u884c\u5217\uff0c\u6216\u5728Twitter\u3001Google+\u3001LinkedIn\u548cInstagram\u4e0a\u5173\u6ce8\u6211\u4eec\uff0c\u5373\u53ef\u4e86\u89e3\u6700\u65b0\u7684Future Now\u6545\u4e8b\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e2a\u6545\u4e8b\uff0c\u53ef\u4ee5\u8ba2\u9605\u6bcf\u5468\u4e00\u6b21\u7684bbc.com\u4e13\u9898\u65f6\u4e8b\u901a\u8baf\uff0c\u540d\u4e3a\u201c\u5982\u679c\u4f60\u8fd9\u5468\u53ea\u8bfb\u4e866\u4ef6\u4e8b\u201d\u3002\u7cbe\u9009BBC\u201c\u672a\u6765\u201d\u3001\u201c\u5730\u7403\u201d\u3001\u201c\u6587\u5316\u201d\u3001\u201c\u8d44\u672c\u201d\u3001\u201c\u65c5\u884c\u201d\u548c\u201c\u6c7d\u8f66\u201d\u4e2d\u7684\u6545\u4e8b\uff0c\u6bcf\u5468\u4e94\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\u3002", "note_en": "Dabbawalas deliver hundreds of thousands of meals on foot and by bike in one of India&#39;s busiest cities every day. The new wave of food-delivery start-ups wants to know how they do it.\n BBC Future has brought you in-depth and rigorous stories to help you navigate  the current pandemic, but we know that\u2019s not all you want to read. So now we\u2019re dedicating a series to help you escape. We\u2019ll be revisiting our most popular features from the last three years in our  Lockdown Longreads.\n You\u2019ll find everything from the story about the   world\u2019s greatest space mission  to the truth about whether   our cats really love us , the epic hunt to bring   illegal fishermen to justice  and the small team which brings   long-buried World War Two tanks back to life . What you won\u2019t find is any reference to, well, you-know-what. Enjoy.\n Every morning, six days a week, Kiran Gavande tours the Lower Parel neighbourhood of Mumbai on his bicycle collecting lunchboxes called dabbas from his customers. Over the next few hours Gavande and his fellow dabbawalas \u2013 \u201cones who carry the box\u201d \u2013 will criss-cross the busy city multiple times delivering hundreds of thousands of home-cooked meals to workers in time for lunch.\n In the last few years, online food-delivery companies like Deliveroo and Uber Eats have made having specially prepared food brought to your desk seem like the height of app-based luxury. Similar start-ups are gaining popularity in India too. But dabbawalas have been doing it for 125 years \u2013 and the newcomers have much to learn.\n  Despite relying on an unskilled workforce, a two-tier management system and nothing more high-tech than Mumbai\u2019s train network, this 5,000-strong cooperative is recognised as one of the world\u2019s most efficient logistics systems. They make a tidy side-line hosting executives from delivery giants like FedEx and Amazon. Even Richard Branson has spent a day learning their secrets.\n Unlike Deliveroo and Uber Eats \u2013 or India\u2019s home-grown equivalents, such as Swiggy and Runnr \u2013 dabbawalas do not deliver restaurant food. Instead, they pick up home-cooked meals \u2013 mostly from the customers\u2019 own houses \u2013 and deliver them to their workplace in time for lunch.\n  \u201cWe don\u2019t like apps,\u201d says event organiser Rashmika Shah, who hires Shivaji Sawant to deliver a dabba to her husband at the Mumbai stock exchange. \u201cWe&#39;ve known this person so long we know he&#39;ll do a proper job.&#34;\n The service is not only reliable, it\u2019s cheap \u2013 roughly 800 rupees a month (less than \u00a310). &#34;People think it&#39;s a luxury getting food delivered to their office,\u201d says Subodh Sangle, coordinator of the Mumbai dabbawalas. \u201cBut we make our service available to everyone from the security guard to the CEO.\u201d\n Most dabbawalas are quick to dismiss their new digital rivals. \u201cThere&#39;s no competition. They won\u2019t be able to keep up with the service we provide,\u201d says Gavande. \u201cThere&#39;s only one Mumbai dabbawala.\u201d\n  It\u2019s hard to argue. The organisation runs its low-cost service at a very high level of performance. A 2010 study by the Harvard Business School graded it \u201cSix Sigma\u201d, which means the dabbawalas make fewer than 3.4 mistakes per million transactions. With deliveries to and from roughly 200,000 customers each day that translates to little more than 400 delayed or missing dabbas in a year.\n Timeliness is crucial. Lunchboxes have to reach the client by 13:00 every day and it can take up to three hours to deliver them. The whole city can be affected by late deliveries, says Sangle. Dabbawalas are waved through by members of the public and traffic police alike. \u201cIf you see a dabbawalla in the street, you will give way,\u201d he says.\n  The delivery schedule also has built-in buffers. If a delivery is due at 13:00, the dabbawala will aim for around 12:00 \u2013 even if the destination is only a quarter of an hour away, says Sangle. &#34;That allows him to improvise if there are mistakes.&#34; For every 15 to 20 dabbawalas there is also always someone on stand-by in case one of them gets delayed.\n Despite the tight schedule, most of the time dabbawalas appear surprisingly relaxed, joking and chatting as they sort their dabbas. But when the next stage of the process nears, there is five minutes of sudden intense activity.\n At 12:45 a dabbawala races around the corner on a bike and rushes shouting into an office building. \u201cYou wanted to see a panicked dabbawala, there you go,\u201d says Sangle. The dabbawala was late by his own standards but the customer was probably never aware of the hiccup, he says.\n Following them around for the day is tough work. Sometimes I get distracted and when I turn back the group I\u2019m shadowing has gone. Strict timekeeping even extends to customers \u2013 if the full lunchbox is late for collection in the morning more than two or three times, they are dropped.\n  Each dabbawala has a single collection and delivery area. At mid-morning they tour their neighbourhood on foot or by bicycle collecting an average of 30 dabbas. These are sorted at a local office or railway station and each dabbawala gets on a train with the dabbas heading for their delivery area. On arrival dabbas coming from all over the city are sorted again before being loaded onto bicycles and handcarts for the final leg.\n This complex series of exchanges relies on an esoteric alphanumeric code scrawled on each lunchbox\u00a0\u2013 indecipherable to the uninitiated but designed to be easily understood by all dabbawalas.\n A dabbawalas\u2019 commitment to the job is partly because it pays well\u00a0\u2013 roughly 12,000 rupees (\u00a3140) a month, a good salary in India for what is essentially unskilled labour. The fame of the dabbawalas also gives the job a certain prestige. This can lead to perks like discounted mobile phone subscriptions and scholarships for a dabbawala\u2019s children funded by organisations keen to be associated with the respected network.\n  And as a cooperative all dabbawalas are equal partners with supervisors called mukadams who are elected. \u201cYou don\u2019t have to say \u2018Salam, sir\u2019 or \u2018Yes, sir\u2019 to anyone,\u201d says dabbawala Anil Bhawagat.\n But there are also more profound reasons for their dedication. The dabbawalas belong almost exclusively to the Vakari community, which worships the Hindu god Vithala. Vithala teaches that giving food is one of the greatest donations you can make. &#34;The dabbawalas say we are getting a golden chance to walk the path of spirituality while earning our bread,&#34; says Sangle.\n Even so, as the convenience of app-based delivery services catches on, will the dabbawalas keep up? Food delivery is firmly in the sights of India\u2019s new breed of tech entrepreneurs, says Pankaj Jain, a partner at US start-up accelerator 500 Start Ups.\n But he thinks any threat is some way off. The sector has yet to get going, he says. Part of the problem is that companies just assumed they could transplant business models from Silicon Valley to India.\n  Many burned through investor cash making fancy apps and offering discounts in pursuit of market share rather than building reliable supply chains and a solid business plan, says Jain. He thinks food-tech businesses could learn from the \u201cstrong fundamentals\u201d of the dabbawalas. &#34;I think food delivery 2.0 in India is going to be dabbawalas on tech,\u201d he says.\n He\u2019s not the only one. Both Swiggy and Runnr, two leading tech-powered food delivery companies, have tapped the dabbawalas for their expertise. Bangalore-based Runnr has built its delivery service using a similar crowd-sourcing model to ride-sharing companies like Uber.\n  Co-founder and CEO Mohit Kumar says they contacted the dabbawalas to get some pointers when they expanded into Mumbai a year ago. The company has also signed up around 200 dabbawalas to work part-time after they finish their lunchtime deliveries.\n One of the lessons Runnr learned was how to navigate Mumbai. The way Google Maps divides the city into neighbourhoods does not take traffic into account, but years of experience had taught the dabbawalas where the bottlenecks were. \u201cNo other system has this level of data for each locality,&#34; says Kumar. &#34;That really helped us get our delivery times down.\u201d\n As well as its on-demand service, Runnr is now experimenting with regular lunchtime deliveries to big offices in Bangalore \u2013 putting it in more direct competition with the dabbawalas.\n  A pre-ordered delivery must arrive on time, however. \u201cIt\u2019s more mission critical,\u201d says Kumar. &#34;Like the dabbawalas we are trying to build a system that is extremely fault tolerant.&#34; That includes extensive driver training, a rigid schedule and aligning driver incentives to reward punctual delivery rather than number of orders.\n Kumar thinks adopting more technology could help the dabbawalas. Combined with local knowledge, mapping technology could help create better delivery routes that can be adapted quickly as customers join and leave. If Runnr decides to launch scheduled lunchtime deliveries in Mumbai, Kumar says he would consider partnering with the dabbawalas.\n Pawan Agrawal is not so sure that the dabbawalas will be quick to adopt new tech, however. A motivational speaker on management topics, Agrawal did his PhD on the dabbawala network and now gives lectures to businesses around the world about how to apply some of the organisation\u2019s processes. Agrawal points out that many dabbawalas are over 50 and there is no retirement age. \u201cI think it will take time,\u201d he says.\n  But their low-tech approach could be a strength. The dabbawalas offer a different service to the digital start-ups. \u201cYou cannot order home cooked food online,\u201d he says. And on the crowded streets of Mumbai, trains and bicycles are quicker than cars and motorbikes. Dabbawala Gangaram Hemade agrees: &#34;If you&#39;re on a motorbike you have to follow all the rules and parking is a problem. This way we can move anywhere even in heavy traffic.&#34;\n Dabbawalas are not afraid to embrace new opportunities, however. They are talking to Indian e-commerce giant Flipkart about carrying out last-mile deliveries. And one group is working with start-up Raw Pressery to deliver health juices on-demand.\n  According to Sangle, the healthy-eating craze in India is good for dabbawalas as food companies are turning to them for delivery. Profits from these newer ventures are bumping the dabbawalas\u2019 salaries up from 12,000 to 20,000 rupees a month, he says.\n Still, Sangle does not expect the core business to change. For one thing, he thinks the dabbawalas\u2019 spiritual connection to the job will always give them an edge. &#34;New companies give their customers good offers but they\u2019re just interested in capturing the market,\u201d he says. &#34;The dabbawalas have deeper reasons for doing it. Serving their customers is like serving their god.\u201d\n  Keep up to date with Future Now stories by joining our 800,000+ fans on   Facebook, or follow us on  Twitter,  Google+,  LinkedIn and  Instagram .\n If you liked this story,   sign up for the weekly bbc.com features newsletter, called \u201cIf You Only Read 6 Things This Week\u201d. A handpicked selection of stories from BBC Future, Earth, Culture, Capital, Travel and Autos, delivered to your inbox every Friday.", "posttime": "2020-05-17 22:33:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9001\u8d27,delivery", "title": "\u4e00\u4e2a\u6709125\u5e74\u5386\u53f2\u7684\u9001\u8d27\u7f51\u7edc\uff0c\u4e3a\u5b5f\u4e70\u63d0\u4f9b\u98df\u7269", "title_en": "A 125-year-old delivery network that feeds Mumbai", "transed": 1, "url": "https://www.bbc.com/future/article/20170114-the-125-year-old-network-that-keeps-mumbai-going", "via": "", "real_tags": ["\u9001\u8d27", "delivery"]}, {"category": "", "categoryclass": "", "imagename": "91caa8710c25cb3a56d7aaf5c5e90c21.jpg", "infoid": 1002526, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u5e94\u7528\u7a0b\u5e8f\u89e3\u91ca\u4e00\u79cdLISP\u65b9\u8a00\uff0c\u4ee5\u81ea\u52a8\u6267\u884c\u7b80\u5355\u7684\u56fe\u5f62\u4efb\u52a1\uff0c\u5982\u8c03\u6574\u5927\u5c0f\u3001\u88c1\u526a\u3001\u7740\u8272\u548c\u751f\u6210\u8fc7\u7a0b\u56fe\u50cf\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e9b\u793a\u4f8b\u6587\u4ef6\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e00\u5207\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u96f7\u5361\u7684Macbook\u4e8e2016\u5e74\u5728\u58a8\u897f\u54e5\u6069\u585e\u7eb3\u8fbe\u95ee\u4e16\u540e\uff0c\u7b2c\u4e00\u7248\u201c\u7f57\u5b81\u201d\u5728\u58a8\u897f\u54e5\u6069\u585e\u7eb3\u8fbe\u95ee\u4e16\u3002\u5b83\u4e8e2019\u5e74\u665a\u4e9b\u65f6\u5019\u5728\u65e5\u672c\u91cd\u65b0\u4e0a\u6620\u3002\n\u6211\u4eec\u521b\u9020\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u5de5\u5177\uff0c\u5236\u9020\u4e86\u5149\u6765\u51cf\u5c11\u6211\u4eec\u7684\u80fd\u6e90\u6d88\u8017\uff0c\u4e5f\u4e3a\u4e86\u51cf\u5c11\u6211\u4eec\u5bf9\u6211\u4eec\u65e0\u6cd5\u81ea\u6211\u4fee\u590d\u7684\u95ed\u6e90\u5e94\u7528\u7a0b\u5e8f\u7684\u4f9d\u8d56\u3002\u7f57\u5b81\u5728\u6d4f\u89c8\u5668\u4e2d\u5de5\u4f5c\u3002\u5b83\u4f5c\u4e3a55KB\u7684\u5355\u4e2a\u6587\u4ef6\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u8131\u673a\u8fd0\u884c\uff0c\u6ca1\u6709\u4f9d\u8d56\u9879\u3002\n\u6211\u4eec\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u786e\u4fdd\u7528\u6237--\u5305\u62ec\u6211\u4eec\u5728\u5185--\u65e0\u8bba\u5982\u4f55\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5de5\u5177\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u5de5\u5177\u751f\u6001\u7cfb\u7edf.\u3002\n\u89c1\u89c1\u7f57\u6bd4\u7279\uff0c\u7f57\u5b81\u7684\u5409\u7965\u7269\u3002\u7f57\u6bd4\u7279\u5728\u90a3\u91cc\u8c08\u8bba\u4e0e\u7f57\u5b81\u6709\u5173\u7684\u6700\u65b0\u60c5\u51b5\u3002\n\u5982\u679c\u60a8\u4e0d\u60f3\u4e0b\u8f7d\u7248\u672c(55KB)\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u8bbf\u95ee\u53ef\u9760\u7684\u4e92\u8054\u7f51\u8fde\u63a5\uff0c\u60a8\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528Ronin\u3002\n\u4f7f\u7528\u7f57\u5b81\u76f4\u64ad\uff0c\u56e0\u4e3a\u7f57\u5b81\u76f4\u64ad\u4e0d\u662f\u901a\u8fc7\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u5f88\u96be\u6536\u5230\u6350\u6b3e\u3002\u6350\u6b3e\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u82b1\u65f6\u95f4\u6539\u8fdb\u8fd9\u4e2a\u5de5\u5177\uff0c\u5e76\u5728\u9700\u8981\u65f6\u63d0\u4f9b\u652f\u6301\u3002\n\u4f60\u53ef\u4ee5\u6539\u53d8\u7f57\u5b81\u7684\u5916\u89c2\u548c\u989c\u8272\u3002\u4e3a\u6b64\uff0c\u8bf7\u4ece\u6211\u4eec\u7684itch.io\u9875\u9762\u4e0b\u8f7d\u4e3b\u9898\u3002\u60a8\u53ef\u4ee5\u5728\u9884\u89c8\u4e2d\u67e5\u770b\u6bcf\u4e2a\u4e3b\u9898\u7684\u8c03\u8272\u677f\uff0c\u4e00\u65e6\u627e\u5230\u60a8\u559c\u6b22\u7684\u5185\u5bb9\uff0c\u8bf7\u5c06\u8be5\u6587\u4ef6(.svg\u6587\u4ef6)\u62d6\u5230RONIN\u4e0a\u3002\u989c\u8272\u4f1a\u7acb\u523b\u6539\u53d8\u3002\n\u8fd9\u4e9b\u4e3b\u9898\u662f\u751f\u6001\u7cfb\u7edf\u4e3b\u9898\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u4e3b\u9898\u5e94\u7528\u5230\u4efb\u4f55\u652f\u6301\u7684\u5e94\u7528\u7a0b\u5e8f(Dotgrid\u3001Donsol\u3001Orca\u548cLeft)\u3002\u6b22\u8fce\u63d0\u51fa\u62c9\u5f0f\u8981\u6c42\uff0c\u4f46\u8bf7\u5148\u9605\u8bfb\u6211\u4eec\u7684\u8bbe\u8ba1\u7406\u5ff5\u3002", "note_en": "The application interprets a dialect of  LISP to automate simple graphical tasks, like resizing, cropping, coloring, and generating procedural imagery. You can look at these  example files to better understand how this all works.\n The  first version of Ronin was produced in Ensenada, Mexico in 2016 after  Rekka&#39;s Macbook died. It was re-released later in 2019 in Japan.\n  We create our own tools, built light to reduce our energy use, also to lessen our dependence on closed-source applications we can&#39;t repair ourselves. Ronin works in the browser. It is bundled as a single file of  55kb, runs  offline and has  no dependencies.\n The reason we did this, is because we want to ensure that users \u2014 us included \u2014 have access to these tools no matter what. We want our ecosystem of tools to be...\n     Meet  Robit, the mascot for Ronin. Robit is there to talk about updates relating to Ronin.\n    If you don&#39;t wish to download the  build(55kb), and if you have access to a reliable internet connection, you can use Ronin in your browser.\n Use Ronin Live  Because  Ronin Live isn&#39;t available through a client, it is harder to receive donations. Donations mean we can spend time improving this tool, and offering support when needed.\n        You can change the look and colour of Ronin. To do this,  download themes from our itch.io page. You can view the colour palettes of each theme in the preview, once you find something you like,  drag the file (.svg file) onto Ronin. The colours will change instantly.\n These themes are part of the  Ecosystem Theme, which means that you can apply a theme to any supported app ( Dotgrid,  Donsol,  Orca and  Left).  Pull Requests are welcome, but please read our  design philosophy first.", "posttime": "2020-05-17 22:32:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fe\u50cf\u5904\u7406,lisp,\u7f57\u5b81", "title": "RONIN-\u4e00\u4e2a\u57fa\u4e8eLisp\u7684\u56fe\u50cf\u5904\u7406\u5de5\u5177", "title_en": "Ronin \u2013 A Lisp-based image processing tool", "transed": 1, "url": "https://100r.co/site/ronin.html", "via": "", "real_tags": ["\u56fe\u50cf\u5904\u7406", "lisp", "\u7f57\u5b81"]}, {"category": "", "categoryclass": "", "imagename": "21d27939e498c1e8fc500ebe379796e6.jpg", "infoid": 1002525, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u308f\u305f\u3057\u306e\u30d5\u30a1\u30df\u30ab\u30bb\u5c55\u201d\u306f\u30d5\u30a1\u30df\u30b3\u30f3\u306b\u80b2\u307e\u308c\u305f\u69d8\u3005\u306a\u8077\u7a2e\u306e\u30af\u30ea\u30a8\u30a4\u30bf\u30fc\u304c\u3001\u30d5\u30a1\u30df\u30ab\u30bb\u306e\u30e9\u30d9\u30eb\u3092\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u30c7\u30b6\u30a4\u30f3\u3059\u308b\u5922\u306e\u30d5\u30a1\u30df\u30ab\u30bb\u5c55\u3067\u3059.", "note_en": "\u300c\u308f\u305f\u3057\u306e\u30d5\u30a1\u30df\u30ab\u30bb\u5c55\u300d\u306f\u30d5\u30a1\u30df\u30b3\u30f3\u306b\u80b2\u307e\u308c\u305f\u69d8\u3005\u306a\u8077\u7a2e\u306e\u30af\u30ea\u30a8\u30a4\u30bf\u30fc\u304c\u3001\u30d5\u30a1\u30df\u30ab\u30bb\u306e\u30e9\u30d9\u30eb\u3092\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u30c7\u30b6\u30a4\u30f3\u3059\u308b\u5922\u306e\u30d5\u30a1\u30df\u30ab\u30bb\u5c55\u3067\u3059\u3002", "posttime": "2020-05-17 22:32:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5bb6\u8c31,famicase,\u8077\u7a2e", "title": "\u6211\u7684\u5bb6\u8c31\u5c552020", "title_en": "My Famicase Exhibition 2020", "transed": 1, "url": "https://famicase.com/20/index.html", "via": "", "real_tags": ["2020", "\u5bb6\u8c31", "famicase", "\u8077\u7a2e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1002524, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c3d\u7ba1\u7f8e\u56fdCovid 19\u4eba\u7684\u6b7b\u4ea1\u4eba\u6570\u7ee7\u7eed\u589e\u52a0\uff0c\u76ee\u524d\u5df2\u8d85\u8fc78.5\u4e07\u4eba\uff0c\u4f46\u8bb8\u591a\u5dde\u5df2\u7ecf\u5f00\u59cb\u653e\u677e\u5c01\u9501\u9650\u5236\u3002\n\u4e0d\u7ba1\u8fd9\u6837\u7684\u4e3e\u52a8\u662f\u5426\u660e\u667a\uff0c\u5f88\u660e\u663e\uff0c\u5168\u56fd\u5404\u5730\u90fd\u6709\u56de\u5f52\u5e38\u6001\u7684\u613f\u671b\uff0c\u5c31\u50cf\u5a01\u65af\u5eb7\u661f\u5dde\u4e00\u6837\uff0c\u5f53\u5730\u4eba\u672c\u5468\u53c8\u56de\u5230\u4e86\u4eba\u6ee1\u4e3a\u60a3\u7684\u9152\u5427\u3002\n\u5728\u90a3\u91cc\uff0c\u4ee5\u53ca\u653f\u7b56\u677e\u61c8\u7684\u5fb7\u514b\u8428\u65af\u5dde\u7b49\u5176\u4ed6\u5dde\uff0c\u6709\u591a\u5c11\u72c2\u6b22\u8005\u53ef\u80fd\u611f\u67d3\u75c5\u6bd2\u4ecd\u6709\u5f85\u89c2\u5bdf\uff0c\u4f46\u6700\u8fd1\u6765\u81ea\u65e5\u672c\u7684\u4e00\u6bb5\u75c5\u6bd2\u5f0f\u89c6\u9891\u8ba9\u6211\u4eec\u5bf9\u611f\u67d3\u4f20\u64ad\u7684\u5bb9\u6613\u7a0b\u5ea6\u6709\u4e86\u4e00\u4e2a\u4e86\u89e3\u3002\n\u8fd9\u4e2a\u89c6\u9891\u5b9e\u9a8c\u7531\u516c\u5171\u5e7f\u64ad\u516c\u53f8NHK\u8054\u5408\u75be\u75c5\u4e13\u5bb6\u8fdb\u884c\uff0c\u4f7f\u7528\u9ed1\u5149\u548c\u4e00\u79cd\u8367\u5149\u7269\u8d28\u6765\u6a21\u62df\u7ec6\u83cc\u5728\u9910\u5385\u81ea\u52a9\u9910\u548c\u6e38\u8f6e\u7b49\u73af\u5883\u4e2d\u5728\u5404\u79cd\u8868\u9762\u4f20\u64ad\u7684\u901f\u5ea6\u3002\n\u9996\u5148\uff0c\u5728\u4e00\u5bb6\u9910\u5385\u7684\u81ea\u52a9\u9910\u4e0a\uff0c\u4e00\u4f4d10\u4eba\u7684\u5ba2\u4eba\u624b\u4e0a\u6709\u4e00\u79cd\u7269\u8d28\uff0c\u610f\u601d\u662f\u4f5c\u4e3a\u51a0\u72b6\u75c5\u6bd2\u7684\u66ff\u8eab\u3002\u5728\u4e00\u4e2a\u5178\u578b\u7684\u7528\u9910\u8fc7\u7a0b\u4e2d\uff0c\u5176\u4f59\u7684\u5ba2\u4eba\u4f1a\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u884c\u4e8b\uff0c\u4ece\u670d\u52a1\u53f0\u6311\u9009\u9910\u5177\uff0c\u4eab\u53d7\u4ed6\u4eec\u7684\u98df\u7269\uff0c\u67e5\u770b\u4ed6\u4eec\u7684\u624b\u673a\u7b49\u7b49\u3002\n\u5728\u5b9e\u9a8c\u7ed3\u675f\u65f6\uff0c\u80cc\u5149\u88ab\u6253\u5f00\uff0c\u53d1\u73b0\u8fd9\u79cd\u7269\u8d28\u5230\u5904\u90fd\u662f\uff1a\u76d8\u5b50\uff0c\u98df\u7269\uff0c\u9910\u5177\uff0c\u751a\u81f3\u4e00\u4e9b\u5ba2\u4eba\u7684\u8138\u4e0a\u90fd\u662f\u3002\n\u5728\u540c\u4e00\u73af\u5883\u4e2d\u8fdb\u884c\u7684\u7b2c\u4e8c\u4e2a\u5b9e\u9a8c\u663e\u793a\u4e86\u6539\u8fdb\u536b\u751f\u6280\u672f\u7684\u597d\u5904\u3002\u53d7\u611f\u67d3\u7684\u4eba\u548c\u5176\u4ed6\u7528\u9910\u8005\u5728\u7528\u9910\u524d\u548c\u7528\u9910\u8fc7\u7a0b\u4e2d\u90fd\u6d17\u624b\uff0c\u9910\u5177\u7b49\u7528\u5177\u88ab\u6e05\u6d17\u548c\u66f4\u6362\u7684\u9891\u7387\u66f4\u9ad8\u3002\n\u9999\u6e2f\u5927\u5b66\u4e34\u5e8a\u75c5\u7406\u5b66\u6559\u6388\u7ea6\u7ff0\u00b7\u5c3c\u79d1\u5c14\u65af(John Nicholls)\u544a\u8bc9CNN\uff1a\u201c\u8fd9\u6bb5\u89c6\u9891\u5c55\u793a\u7684\u662f\uff0c\u5b83\u5c06\u975e\u5e38\u6709\u6548\u5730\u4f20\u64ad\u5230\u8868\u9762\u548c\u4eba\u8eab\u4e0a\u3002\u201d\u201c\u6211\u8ba4\u4e3a\uff0c\u8fd9\u786e\u5b9e\u7a81\u663e\u4e86\u4eba\u4eec\u4e00\u76f4\u5728\u8c08\u8bba\u7684\u5173\u4e8e\u624b\u90e8\u536b\u751f\u7684\u5185\u5bb9\uff0c\u4ee5\u963b\u6b62\u75be\u75c5\u4f20\u64ad\u7684\u5fc5\u8981\u6027\u3002\u201d", "note_en": "Even as Covid 19 deaths in the US continue to grow, now surpassing 85,000, many states have begun loosening lockdown restrictions.\n Regardless of the wisdom of such moves, it\u2019s clear that there\u2019s a desire to return to something resembling normalcy across the country,  as in Wisconsin, where locals returned to packed bars this week.\n  How many of those revelers there, and in other  states like Texas with lax policies, may contract the virus remains to be seen, but a recent viral video from Japan gives an idea of how easily the infection might spread.\n The video experiment, conducted by the public broadcaster NHK in conjunction with disease specialists, uses blacklight and a fluorescent substance to simulate how quickly germs can be spread across a variety of surfaces in environments such as restaurant buffets and cruise ships.\n To begin with, one guest of 10 at a restaurant buffet is shown with the substance on his hands meant as a stand-in for the coronavirus. Over the course of a typical dining period, the rest of the guests behave in predictable fashion, selecting utensils from serving stations, enjoying their food, checking their phones and so on.\n At the end of the experiment the backlight is turned on and the substance is revealed to be smeared everywhere: plates, foodstuff, utensils and even all over some of the guests\u2019 faces.\n  A second experiment in the same environment showed the benefits of improved hygiene techniques. The \u201cinfected\u201d person and the other diners washed their hands before and throughout the meal, and utensils and other implements were cleaned and replaced more frequently.\n \u201cWhat the video demonstrated, is that it will spread to surfaces and to people very efficiently,\u201d John Nicholls, a clinical professor in pathology at Hong Kong University, told CNN. \u201cI think it really highlights the need of what people have been saying about hand hygiene to stop the spread of disease.\u201d", "posttime": "2020-05-17 22:31:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u75c5\u6bd2,\u51fa\u53bb,dying,\u611f\u67d3", "title": "\u60f3\u51fa\u53bb\u5403\u996d\u5417\uff1f\u4e0b\u9762\u662f\u50cf\u51a0\u72b6\u75c5\u6bd2\u8fd9\u6837\u7684\u75c5\u6bd2\u662f\u5982\u4f55\u5728\u4e00\u5bb6\u9910\u5385\u4f20\u64ad\u7684", "title_en": "Dying to go out to eat? Here's how viruses like Covid-19 spread in a restaurant", "transed": 1, "url": "https://www.theguardian.com/world/2020/may/15/how-coronavirus-spreads-in-restaurant-video", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u75c5\u6bd2", "\u51fa\u53bb", "dying", "\u611f\u67d3"]}, {"category": "", "categoryclass": "", "imagename": "75eb8d7cf7d0ca7141ca29a994d3cfbf.jpg", "infoid": 1002523, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u838e\u62c9\u00b7\u7d22\u8036(Sarah Sawyer)\u63a2\u8ba8\u4e86\u666e\u7279\u5357\u7684\u89c2\u70b9\uff0c\u5373\u610f\u4e49\u201c\u53ea\u662f\u4e0d\u5728\u5934\u8111\u4e2d\u201d", "note_en": "Sarah Sawyer explores Putnam\u2019s view that meanings \u2018just ain\u2019t in the head\u2019", "posttime": "2020-05-17 22:31:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5934\u8111,putnam,\u7d22\u8036", "title": "\u5e0c\u62c9\u91cc\u00b7\u666e\u7279\u5357\uff1a\u5934\u8111\u3001\u5927\u8111\u3001\u673a\u5668", "title_en": "Hilary Putnam: Minds, brains, machines", "transed": 1, "url": "https://www.the-tls.co.uk/articles/hilary-putnam-footnotes-to-plato/", "via": "", "real_tags": ["\u5934\u8111", "putnam", "\u7d22\u8036"]}, {"category": "", "categoryclass": "", "imagename": "0e208a4b969ed3501e320004b85de749.jpg", "infoid": 1002521, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u5230\u5904\u90fd\u80fd\u770b\u5230\u4ed6\u4eec\u30022015\u5e749\u67083\u65e5\uff0c\u6cf0\u00b7\u6d1b\u4f69\u5179\u5728YouTube\u4e0a\u53d1\u5e03\u4e86\u4ed6\u81ed\u540d\u662d\u8457\u7684\u201c\u6211\u7684\u8f66\u5e93\u91cc\u201d\u5e7f\u544a\u3002\u8fd9\u4e00\u6761\u5e7f\u544a\u6380\u8d77\u4e86\u4e00\u6ce2\u2026\u2026", "note_en": "You've seen them everywhere. On the 3rd of September 2015, Tai Lopez released his infamous \u2018Here in My Garage\u2019 Youtube Ad. This single Ad created a wave of w...", "posttime": "2020-05-17 21:19:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5927\u5e08,fake,\u6d1b\u4f69\u5179", "title": "\u201c\u5047\u5927\u5e08\u7684\u5d1b\u8d77\u201d(2020\u7eaa\u5f55\u7247)", "title_en": "The rise of fake gurus (2020 documentary)", "transed": 1, "url": "https://www.youtube.com/watch?v=L9Gpr7PEnbs", "via": "", "real_tags": ["2020", "\u5927\u5e08", "fake", "\u6d1b\u4f69\u5179"]}]